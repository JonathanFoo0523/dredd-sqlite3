-- Time: 2024/06/09 23:54:48
-- Database: database58
-- Database version: 3.40.0
-- seed value: 4207558858
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TABLE t0 (c0 INT NOT NULL PRIMARY KEY ASC ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 1ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c3; -- 1ms;
INSERT OR REPLACE INTO t0(c3) VALUES (((((x'', x'', 0.4196370366507338, NULL, ''))>((NULL, NULL, x'', 0Xffffffffde2545ce, NULL))) IN ())); -- 4ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
UPDATE OR ROLLBACK t1 SET c3='-1093162619', c3=1710640614; -- 7ms;
INSERT OR REPLACE INTO t1(c3) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t1(c3) VALUES (x''); -- 0ms;
UPDATE OR ABORT vt1 SET (c0, c0, c0)=('1548798003', x'8347', x'') WHERE ((((vt1.c0) IS FALSE)) NOTNULL); -- 0ms;
INSERT OR REPLACE INTO t1 VALUES (''), ('1710640614'), ('0.4196370366507338'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'022f', c0='/亨[]y' WHERE ((((((((vt1.c0 COLLATE NOCASE)OR((vt1.c0 IN (vt1.c0)))))AND((0.5550359397369664 IN ()))))OR(((vt1.c0)<<(x'')))))AND(INSTR(vt1.c0, -2.022289752E9))); -- 3ms;
PRAGMA short_column_names = false; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL) WHERE ''; -- 0ms;
INSERT OR ABORT INTO t0(c3) VALUES (1710640614); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (1.710640614E9); -- 1ms;
UPDATE OR ROLLBACK t0 SET c3=0xffffffffbed7a985 WHERE LOWER(NULL); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (-1074904906); -- 7ms;
UPDATE t0 SET c3='-1074904906'; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('葘䲽A>M') WHERE SQLITE_SOURCE_ID(); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 12); -- 20ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE rt0 SET c1=NULL, c2='-1093162619' WHERE (- (((rt0.c0)-(rt0.c2)))); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (0.5882972397531132); -- 0ms;
UPDATE t0 SET (c3, c3)=(0.20421087120918724, '!v7') WHERE (((((t0.c3)) BETWEEN ((t0.c3)) AND ((t0.c3)))) NOT BETWEEN (CASE t0.c3  WHEN t0.c3 THEN '-803074432' END) AND (((t0.c3) NOTNULL))); -- 0ms;
UPDATE OR IGNORE t0 SET (c3, c3)=('806276459', '-1281716632'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.soft_heap_limit = 2179612120890853790; -- 1ms;
UPDATE OR IGNORE t0 SET (c3)=('1603240510'); -- 10ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t0(c3) VALUES (NULL), (NULL), (x'7989'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.7892277404822846), (''), (''); -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO t0(c3) VALUES ('-567982642'), (0x2b78e431), (NULL), (0X1e3f89ad05d5c99e), (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.20421087120918724); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''); -- 0ms;
CREATE INDEX i91 ON t0(((c3) NOT BETWEEN (CASE WHEN c3 THEN c3 WHEN c3 THEN c3 WHEN c3 THEN NULL ELSE c3 END) AND (CASE WHEN 'Na' THEN c3 END)) DESC); -- 0ms;
REINDEX BINARY; -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (''), ('-567982642'), (NULL), (''), (NULL); -- 0ms;
ANALYZE; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED); -- 1ms;
CREATE UNIQUE INDEX IF NOT EXISTS i33 ON t0((((((((c3)AND(c3)))AND(c3)), 0.8696481984258853, ((((c3)AND(NULL)))AND(c3))))>=((((c3) NOT BETWEEN (c3) AND (c3)), c3, NULL))) COLLATE RTRIM); -- 0ms;
CREATE UNIQUE INDEX i87 ON t0(((CAST(c3 AS INTEGER))AND(NULLIF('䲽~.WOm1079-1469T7185768575955163328-8826000682319104280 -3705618521419732351:1689T1322T1190:6630889993872541118-sjU', c3)))); -- 0ms;
CREATE INDEX i81 ON t0(((c3 IN ()) IN (((((((((((((c3)AND(c3)))AND(c3)))OR(c3)))OR(c3)))AND(c3)))OR(c3)))) COLLATE RTRIM ASC); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE t0 SET (c3, c3, c3)=('1710640614', 0.2906523158810098, '-1725144480'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='Tr'; -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (x'1293', 1710640614, x''); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0, c2) VALUES ('1603240510', 0.9573551714929255, x''); -- 0ms;
INSERT OR IGNORE INTO t0(c3) VALUES (0xffffffffb70a842a); -- 0ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
UPDATE OR IGNORE t0 SET (c3, c3)=('729343025', '1710640614') WHERE CAST(t0.c3 AS BLOB) COLLATE BINARY; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE OR REPLACE vt1 SET (c0, c0)=(NULL, '-1767537576'); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (NULL), (0xffffffffb6e40516), (x''); -- 1ms;
PRAGMA incremental_vacuum(98726415); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (0xffffffffcf4199c5), (0.4925388085017751); -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=-1088340306; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET (c1)=(1549127918) WHERE (- (CAST(vt0.c0 AS BLOB))); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0.02943331588481568); -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (1790900075); -- 0ms;
UPDATE OR IGNORE t0 SET (c3)=(-1.281716632E9); -- 0ms;
UPDATE OR IGNORE t0 SET (c3, c3)=(NULL, 0.24176932257709982); -- 1ms;
ALTER TABLE t0 ADD COLUMN c33 TEXT; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.5351447958210693; -- 0ms;
UPDATE OR ROLLBACK t0 SET c33=0.9411550451970975 WHERE ((json(t0.c3))*(t0.c3 COLLATE RTRIM)); -- 1ms;
UPDATE OR REPLACE vt0 SET c0=0X5e2720f; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('fN'), (0.4439481636596353), (NULL), (NULL), ('1603240510'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('0.4439481636596353'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1223603426); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (-8.17784379E8), (0.971478140832779), (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(-1.767537576E9); -- 1ms;
UPDATE OR IGNORE vt0 SET (c1)=(NULL) WHERE CAST(vt0.c0 COLLATE NOCASE AS TEXT); -- 1ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('{3''Dp}vV'), ('&8'), (0.42945045301977114); -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(x'', NULL); -- 1ms;
INSERT OR REPLACE INTO vt1 VALUES (0.04869497861854999); -- 9ms;
INSERT OR IGNORE INTO t0(c3, c33) VALUES (x'6ec84774', x''); -- 0ms;
REINDEX  vt0; -- 0ms;
PRAGMA legacy_file_format = false; -- 0ms;
VACUUM; -- 2ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 3); -- 0ms;
CREATE INDEX i70 ON t0((((c33 IN ()))>=((+ (c33)))) DESC,((CASE WHEN c3 THEN c3 ELSE c33 END)||(((c33)>=(0xffffffff96a58458)))) COLLATE NOCASE) WHERE ((QUOTE(c33)) NOTNULL); -- 1ms;
ANALYZE; -- 1ms;
PRAGMA main.cell_size_check; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES ('S!![', 0.20421087120918724), (x'', x''), (5.39249853E8, -1.281716632E9); -- 0ms;
INSERT OR FAIL INTO rt0(c2, c1) VALUES (0.29541198152770853, 1236862784); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (x'1969'), (NULL), (x''); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
UPDATE OR IGNORE vt0 SET (c1, c0)=(x'7ce8', 0.4067009264214779) WHERE (~ (((vt0.c0)%(vt0.c1)))); -- 0ms;
PRAGMA main.recursive_triggers = true; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
REINDEX  t0; -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ANALYZE i81; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(-1.767537576E9) WHERE (((- (vt1.c0))) BETWEEN (vt1.c0) AND (CASE WHEN vt1.c0 THEN vt1.c0 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x29e4859e)OR(x'')))AND(((('1548798003')) BETWEEN (('-1226570474')) AND (('0.5882972397531132'))))); -- 0ms;
UPDATE rt0 SET c2=0.22355100559341823 WHERE (+ (((rt0.c0)!=(rt0.c2)))); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (-1.281716632E9); -- 0ms;
REINDEX i81; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1603240510);\n; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ((- (CAST('' AS BLOB)))), (0.14692257427621291), ('li|\.萪'), (0x4b56287), (x''); -- 0ms;
REINDEX i91; -- 0ms;
INSERT OR IGNORE INTO t0(c33, c3) VALUES (x'77f6', '-692076376'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE vt1 SET c0=-1.767537576E9, c0='f_' WHERE ((vt1.c0 COLLATE RTRIM)IS(CAST(0Xffffffffbd5e6846 AS BLOB))); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c0='0.4925388085017751', c1=0.31560256780407625 WHERE ((((rt0.c0)OR(rt0.c2)))OR(0xffffffffac4d3a81)) COLLATE BINARY; -- 1ms;
UPDATE vt0 SET c0=NULL, c0=NULL; -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (x'', 0.12536687463706986); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 BEFORE DELETE ON t0 FOR EACH ROW  WHEN (((((((t0.c3, t0.c3, t0.c3))<>((t0.c33, t0.c33, -1.074904906E9))))AND(CASE t0.c3  WHEN t0.c33 THEN 0.9110006840059529 ELSE t0.c33 END)))AND(t0.c33 COLLATE NOCASE)) BEGIN INSERT OR ABORT INTO vt1(c0) VALUES (0.4196370366507338);UPDATE OR REPLACE t0 SET (c33)=(0.6462188383282942) WHERE t0.c33;END; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE rt0 SET c0=NULL WHERE (((((((rt0.c1, rt0.c0, rt0.c0, rt0.c0, NULL))<=((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c1))))AND('1549127918')))OR(((rt0.c1)>=(rt0.c0)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
ANALYZE temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET c2='-1769218393'; -- 1ms;
UPDATE OR IGNORE t0 SET (c33)=(0.5532575550834944) WHERE t0.c3; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((((((CASE t0.c3  WHEN t0.c33 THEN NULL WHEN vt0.c0 THEN t0.c3 WHEN t0.c33 THEN rt0.c0 ELSE t0.c33 END)OR(COALESCE(t0.c33, vt0.c1))))AND(((((rt0.c1)AND(t0.c33)))OR(vt0.c0)))))OR(0.20421087120918724)))OR((((t0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE t0.c3  WHEN t0.c33 THEN NULL WHEN vt0.c0 THEN t0.c3 WHEN t0.c33 THEN rt0.c0 ELSE t0.c33 END)OR(COALESCE(t0.c33, vt0.c1))))AND(((((rt0.c1)AND(t0.c33)))OR(vt0.c0)))))OR(0.20421087120918724)))OR((((t0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((((((CASE t0.c3  WHEN t0.c33 THEN NULL WHEN vt0.c0 THEN t0.c3 WHEN t0.c33 THEN rt0.c0 ELSE t0.c33 END)OR(COALESCE(t0.c33, vt0.c1))))AND(((((rt0.c1)AND(t0.c33)))OR(vt0.c0)))))OR(0.20421087120918724)))OR((((t0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE t0.c3  WHEN t0.c33 THEN NULL WHEN vt0.c0 THEN t0.c3 WHEN t0.c33 THEN rt0.c0 ELSE t0.c33 END)OR(COALESCE(t0.c33, vt0.c1))))AND(((((rt0.c1)AND(t0.c33)))OR(vt0.c0)))))OR(0.20421087120918724)))OR((((t0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((((((CASE t0.c3  WHEN t0.c33 THEN NULL WHEN vt0.c0 THEN t0.c3 WHEN t0.c33 THEN rt0.c0 ELSE t0.c33 END)OR(COALESCE(t0.c33, vt0.c1))))AND(((((rt0.c1)AND(t0.c33)))OR(vt0.c0)))))OR(0.20421087120918724)))OR((((t0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c0)IS(rt0.c1))))) ORDER BY ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))OR(((rt0.c1)*(rt0.c1)))))OR(0.9110006840059529));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))OR(((rt0.c1)*(rt0.c1)))))OR(0.9110006840059529)));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c0)IS(rt0.c1))))) ORDER BY ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))OR(((rt0.c1)*(rt0.c1)))))OR(0.9110006840059529));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))OR(((rt0.c1)*(rt0.c1)))))OR(0.9110006840059529)));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c0)IS(rt0.c1))))) ORDER BY ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))OR(((rt0.c1)*(rt0.c1)))))OR(0.9110006840059529));
SELECT * FROM rt0, vt1, t0, vt0 WHERE (CASE LIKELIHOOD(DISTINCT vt0.c1, 0.11661648479929188)  WHEN CAST(vt0.c1 AS TEXT) THEN ((t0.c3) IS FALSE) ELSE (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELIHOOD(DISTINCT vt0.c1, 0.11661648479929188)  WHEN CAST(vt0.c1 AS TEXT) THEN ((t0.c3) IS FALSE) ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT * FROM rt0, vt1, t0, vt0 WHERE (CASE LIKELIHOOD(DISTINCT vt0.c1, 0.11661648479929188)  WHEN CAST(vt0.c1 AS TEXT) THEN ((t0.c3) IS FALSE) ELSE (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELIHOOD(DISTINCT vt0.c1, 0.11661648479929188)  WHEN CAST(vt0.c1 AS TEXT) THEN ((t0.c3) IS FALSE) ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT * FROM rt0, vt1, t0, vt0 WHERE (CASE LIKELIHOOD(DISTINCT vt0.c1, 0.11661648479929188)  WHEN CAST(vt0.c1 AS TEXT) THEN ((t0.c3) IS FALSE) ELSE (rt0.c2 IN ()) END);
SELECT * FROM vt0 WHERE ((((vt0.c1)||(0xffffffff9848f196)) IN (((vt0.c1)>=(vt0.c1))))) ORDER BY CAST(0.14021796656377794 AS TEXT) COLLATE RTRIM ASC, (((vt0.c1)) BETWEEN ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE BINARY))), vt0.c0;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)||(0Xffffffff9848f196)) IN (((vt0.c1)>=(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(0.14021796656377794 AS TEXT) COLLATE RTRIM ASC, (((vt0.c1)) BETWEEN ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE BINARY))), vt0.c0);
SELECT * FROM vt0 WHERE ((((vt0.c1)||(0xffffffff9848f196)) IN (((vt0.c1)>=(vt0.c1))))) ORDER BY CAST(0.14021796656377794 AS TEXT) COLLATE RTRIM ASC, (((vt0.c1)) BETWEEN ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE BINARY))), vt0.c0;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)||(0Xffffffff9848f196)) IN (((vt0.c1)>=(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(0.14021796656377794 AS TEXT) COLLATE RTRIM ASC, (((vt0.c1)) BETWEEN ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE BINARY))), vt0.c0);
SELECT * FROM vt0 WHERE ((((vt0.c1)||(0xffffffff9848f196)) IN (((vt0.c1)>=(vt0.c1))))) ORDER BY CAST(0.14021796656377794 AS TEXT) COLLATE RTRIM ASC, (((vt0.c1)) BETWEEN ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE BINARY))), vt0.c0;
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((((((((((rt0.c2)<(t0.c3)))AND(((vt1.c0)OR(rt0.c1)))))AND('' COLLATE BINARY)))OR(((vt0.c0)!=(rt0.c0)))))AND(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)<(t0.c3)))AND(((vt1.c0)OR(rt0.c1)))))AND('' COLLATE BINARY)))OR(((vt0.c0)<>(rt0.c0)))))AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((((((((((rt0.c2)<(t0.c3)))AND(((vt1.c0)OR(rt0.c1)))))AND('' COLLATE BINARY)))OR(((vt0.c0)!=(rt0.c0)))))AND(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)<(t0.c3)))AND(((vt1.c0)OR(rt0.c1)))))AND('' COLLATE BINARY)))OR(((vt0.c0)<>(rt0.c0)))))AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((((((((((rt0.c2)<(t0.c3)))AND(((vt1.c0)OR(rt0.c1)))))AND('' COLLATE BINARY)))OR(((vt0.c0)!=(rt0.c0)))))AND(vt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, vt1 CROSS JOIN rt0 ON ((UNLIKELY(vt1.c0))IS NOT(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1)))) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON ((UNLIKELY(vt1.c0))IS NOT(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1)))));
SELECT COUNT(*) FROM vt0, vt1 CROSS JOIN rt0 ON ((UNLIKELY(vt1.c0))IS NOT(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1)))) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON ((UNLIKELY(vt1.c0))IS NOT(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1)))));
SELECT COUNT(*) FROM vt0, vt1 CROSS JOIN rt0 ON ((UNLIKELY(vt1.c0))IS NOT(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1)))) WHERE ('');
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) NOT BETWEEN ((+ (x''))) AND (0Xffffffff8c72cf3f)) WHERE (((((vt0.c1 COLLATE RTRIM)AND(((0xffffffffe4073fab)+(vt0.c0)))))OR(ABS(vt0.c0)))) ORDER BY ((vt0.c1) IS TRUE) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 COLLATE RTRIM)AND(((0Xffffffffe4073fab)+(vt0.c0)))))OR(ABS(vt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) NOT BETWEEN ((+ (x''))) AND (0xffffffff8c72cf3f)) ORDER BY ((vt0.c1) IS TRUE) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) NOT BETWEEN ((+ (x''))) AND (0Xffffffff8c72cf3f)) WHERE (((((vt0.c1 COLLATE RTRIM)AND(((0xffffffffe4073fab)+(vt0.c0)))))OR(ABS(vt0.c0)))) ORDER BY ((vt0.c1) IS TRUE) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 COLLATE RTRIM)AND(((0Xffffffffe4073fab)+(vt0.c0)))))OR(ABS(vt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) NOT BETWEEN ((+ (x''))) AND (0xffffffff8c72cf3f)) ORDER BY ((vt0.c1) IS TRUE) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) NOT BETWEEN ((+ (x''))) AND (0Xffffffff8c72cf3f)) WHERE (((((vt0.c1 COLLATE RTRIM)AND(((0xffffffffe4073fab)+(vt0.c0)))))OR(ABS(vt0.c0)))) ORDER BY ((vt0.c1) IS TRUE) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c0)>=(((t0.c33) BETWEEN (rt0.c1) AND (t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)>=(((t0.c33) BETWEEN (rt0.c1) AND (t0.c3))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c0)>=(((t0.c33) BETWEEN (rt0.c1) AND (t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)>=(((t0.c33) BETWEEN (rt0.c1) AND (t0.c3))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c0)>=(((t0.c33) BETWEEN (rt0.c1) AND (t0.c3)))));
SELECT ALL * FROM vt0, vt1, t0 INNER JOIN rt0 ON ((((vt0.c1)-('78996103')))<=(NULL)) WHERE (t0.c33) ORDER BY (((CASE WHEN t0.c33 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 ELSE NULL END, rt0.c2 COLLATE BINARY, 0.9066726441715545))==((CASE NULL  WHEN t0.c3 THEN vt0.c1 ELSE rt0.c2 END, CAST(t0.c3 AS BLOB), 0Xffffffff968bdea7))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c33) IS TRUE)  as count FROM vt0, vt1, t0 INNER JOIN rt0 ON ((((vt0.c1)-('78996103')))<=(NULL)) ORDER BY (((CASE WHEN t0.c33 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 ELSE NULL END, rt0.c2 COLLATE BINARY, 0.9066726441715545))=((CASE NULL  WHEN t0.c3 THEN vt0.c1 ELSE rt0.c2 END, CAST(t0.c3 AS BLOB), 0xffffffff968bdea7))) ASC);
SELECT ALL * FROM vt0, vt1, t0 INNER JOIN rt0 ON ((((vt0.c1)-('78996103')))<=(NULL)) WHERE (t0.c33) ORDER BY (((CASE WHEN t0.c33 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 ELSE NULL END, rt0.c2 COLLATE BINARY, 0.9066726441715545))==((CASE NULL  WHEN t0.c3 THEN vt0.c1 ELSE rt0.c2 END, CAST(t0.c3 AS BLOB), 0Xffffffff968bdea7))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c33) IS TRUE)  as count FROM vt0, vt1, t0 INNER JOIN rt0 ON ((((vt0.c1)-('78996103')))<=(NULL)) ORDER BY (((CASE WHEN t0.c33 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 ELSE NULL END, rt0.c2 COLLATE BINARY, 0.9066726441715545))=((CASE NULL  WHEN t0.c3 THEN vt0.c1 ELSE rt0.c2 END, CAST(t0.c3 AS BLOB), 0xffffffff968bdea7))) ASC);
SELECT ALL * FROM vt0, vt1, t0 INNER JOIN rt0 ON ((((vt0.c1)-('78996103')))<=(NULL)) WHERE (t0.c33) ORDER BY (((CASE WHEN t0.c33 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 ELSE NULL END, rt0.c2 COLLATE BINARY, 0.9066726441715545))==((CASE NULL  WHEN t0.c3 THEN vt0.c1 ELSE rt0.c2 END, CAST(t0.c3 AS BLOB), 0Xffffffff968bdea7))) ASC;
SELECT * FROM rt0, vt1, vt0 WHERE ((((rt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), rt0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN ()), ((vt1.c0)GLOB(-1927793068)), ((0.8150595946317789)OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), rt0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN ()), ((vt1.c0)GLOB(-1927793068)), ((0.8150595946317789)OR(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE ((((rt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), rt0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN ()), ((vt1.c0)GLOB(-1927793068)), ((0.8150595946317789)OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), rt0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN ()), ((vt1.c0)GLOB(-1927793068)), ((0.8150595946317789)OR(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE ((((rt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), rt0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN ()), ((vt1.c0)GLOB(-1927793068)), ((0.8150595946317789)OR(rt0.c2))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY (((vt0.c0))!=((vt0.c0))) COLLATE NOCASE  NULLS FIRST, (rt0.c2 IN ()) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0))!=((vt0.c0))) COLLATE NOCASE  NULLS FIRST, (rt0.c2 IN ()) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY (((vt0.c0))!=((vt0.c0))) COLLATE NOCASE  NULLS FIRST, (rt0.c2 IN ()) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0))!=((vt0.c0))) COLLATE NOCASE  NULLS FIRST, (rt0.c2 IN ()) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY (((vt0.c0))!=((vt0.c0))) COLLATE NOCASE  NULLS FIRST, (rt0.c2 IN ()) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON 'dsꩠf\r' CROSS JOIN vt0 ON (vt0.c1 IN ()) WHERE (LIKELIHOOD(DISTINCT t0.c33, 0.8436902500393506) COLLATE BINARY) ORDER BY ((t0.c33 COLLATE NOCASE)OR(((t0.c3) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT t0.c33, 0.8436902500393506) COLLATE BINARY) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON 'dsꩠf\r' CROSS JOIN vt0 ON (vt0.c1 IN ()) ORDER BY ((t0.c33 COLLATE NOCASE)OR(((t0.c3) IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON 'dsꩠf\r' CROSS JOIN vt0 ON (vt0.c1 IN ()) WHERE (LIKELIHOOD(DISTINCT t0.c33, 0.8436902500393506) COLLATE BINARY) ORDER BY ((t0.c33 COLLATE NOCASE)OR(((t0.c3) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT t0.c33, 0.8436902500393506) COLLATE BINARY) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON 'dsꩠf\r' CROSS JOIN vt0 ON (vt0.c1 IN ()) ORDER BY ((t0.c33 COLLATE NOCASE)OR(((t0.c3) IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON 'dsꩠf\r' CROSS JOIN vt0 ON (vt0.c1 IN ()) WHERE (LIKELIHOOD(DISTINCT t0.c33, 0.8436902500393506) COLLATE BINARY) ORDER BY ((t0.c33 COLLATE NOCASE)OR(((t0.c3) IS FALSE))) DESC;
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE ((((NULL)) BETWEEN ((t0.c3)) AND ((rt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((t0.c3)) AND ((rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE ((((NULL)) BETWEEN ((t0.c3)) AND ((rt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((t0.c3)) AND ((rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE ((((NULL)) BETWEEN ((t0.c3)) AND ((rt0.c1 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (((((vt0.c0)<=(t0.c33))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(t0.c33))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (((((vt0.c0)<=(t0.c33))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(t0.c33))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (((((vt0.c0)<=(t0.c33))) IS FALSE));
SELECT COUNT(*) FROM t0, vt0, rt0 LEFT OUTER JOIN vt1 ON (('')LIKE(((((0.2819633122432681)AND(rt0.c2)))OR(-1.088340306E9)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0, rt0 LEFT OUTER JOIN vt1 ON (('')LIKE(((((0.2819633122432681)AND(rt0.c2)))OR(-1.088340306E9)))));
SELECT COUNT(*) FROM t0, vt0, rt0 LEFT OUTER JOIN vt1 ON (('')LIKE(((((0.2819633122432681)AND(rt0.c2)))OR(-1.088340306E9)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0, rt0 LEFT OUTER JOIN vt1 ON (('')LIKE(((((0.2819633122432681)AND(rt0.c2)))OR(-1.088340306E9)))));
SELECT COUNT(*) FROM t0, vt0, rt0 LEFT OUTER JOIN vt1 ON (('')LIKE(((((0.2819633122432681)AND(rt0.c2)))OR(-1.088340306E9)))) WHERE (vt0.c0);
SELECT * FROM rt0 WHERE (((((((rt0.c1) NOTNULL))AND(((rt0.c0)>(rt0.c2)))))AND(-567982642)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOTNULL))AND(((rt0.c0)>(rt0.c2)))))AND(-567982642))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1) NOTNULL))AND(((rt0.c0)>(rt0.c2)))))AND(-567982642)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOTNULL))AND(((rt0.c0)>(rt0.c2)))))AND(-567982642))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1) NOTNULL))AND(((rt0.c0)>(rt0.c2)))))AND(-567982642)));
SELECT * FROM vt1, t0 CROSS JOIN rt0 ON CAST(TRIM(DISTINCT rt0.c1, 0x732415da) AS REAL) WHERE (CASE WHEN (t0.c3 IN ()) THEN rt0.c1 ELSE (0.16928560534568282 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c3 IN ()) THEN rt0.c1 ELSE (0.16928560534568282 IN ()) END) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt0 ON CAST(TRIM(DISTINCT rt0.c1, 0X732415da) AS REAL));
SELECT * FROM vt1, t0 CROSS JOIN rt0 ON CAST(TRIM(DISTINCT rt0.c1, 0x732415da) AS REAL) WHERE (CASE WHEN (t0.c3 IN ()) THEN rt0.c1 ELSE (0.16928560534568282 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c3 IN ()) THEN rt0.c1 ELSE (0.16928560534568282 IN ()) END) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt0 ON CAST(TRIM(DISTINCT rt0.c1, 0X732415da) AS REAL));
SELECT * FROM vt1, t0 CROSS JOIN rt0 ON CAST(TRIM(DISTINCT rt0.c1, 0x732415da) AS REAL) WHERE (CASE WHEN (t0.c3 IN ()) THEN rt0.c1 ELSE (0.16928560534568282 IN ()) END);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (vt0.c0) ORDER BY CAST(((t0.c3) ISNULL) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY CAST(((t0.c3) ISNULL) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (vt0.c0) ORDER BY CAST(((t0.c3) ISNULL) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY CAST(((t0.c3) ISNULL) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (vt0.c0) ORDER BY CAST(((t0.c3) ISNULL) AS BLOB)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT ((t0.c3) BETWEEN (t0.c3) AND (t0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((t0.c3) BETWEEN (t0.c3) AND (t0.c3)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT ((t0.c3) BETWEEN (t0.c3) AND (t0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((t0.c3) BETWEEN (t0.c3) AND (t0.c3)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT ((t0.c3) BETWEEN (t0.c3) AND (t0.c3))));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c0))<((t0.c3))) AS TEXT) WHERE (CAST(vt0.c1 AS INTEGER)) ORDER BY ((((((x'')<>(t0.c33)))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))))OR(((rt0.c0)*(rt0.c1)))), (((((rt0.c1)>=(t0.c33)), vt0.c0, CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END))<((vt0.c1 COLLATE NOCASE, ((t0.c3)>=(rt0.c1)), ((rt0.c0) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS INTEGER)) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c0))<((t0.c3))) AS TEXT) ORDER BY ((((((x'')<>(t0.c33)))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))))OR(((rt0.c0)*(rt0.c1)))), (((((rt0.c1)>=(t0.c33)), vt0.c0, CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END))<((vt0.c1 COLLATE NOCASE, ((t0.c3)>=(rt0.c1)), ((rt0.c0) IS TRUE))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c0))<((t0.c3))) AS TEXT) WHERE (CAST(vt0.c1 AS INTEGER)) ORDER BY ((((((x'')<>(t0.c33)))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))))OR(((rt0.c0)*(rt0.c1)))), (((((rt0.c1)>=(t0.c33)), vt0.c0, CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END))<((vt0.c1 COLLATE NOCASE, ((t0.c3)>=(rt0.c1)), ((rt0.c0) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS INTEGER)) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c0))<((t0.c3))) AS TEXT) ORDER BY ((((((x'')<>(t0.c33)))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))))OR(((rt0.c0)*(rt0.c1)))), (((((rt0.c1)>=(t0.c33)), vt0.c0, CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END))<((vt0.c1 COLLATE NOCASE, ((t0.c3)>=(rt0.c1)), ((rt0.c0) IS TRUE))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c0))<((t0.c3))) AS TEXT) WHERE (CAST(vt0.c1 AS INTEGER)) ORDER BY ((((((x'')<>(t0.c33)))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))))OR(((rt0.c0)*(rt0.c1)))), (((((rt0.c1)>=(t0.c33)), vt0.c0, CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END))<((vt0.c1 COLLATE NOCASE, ((t0.c3)>=(rt0.c1)), ((rt0.c0) IS TRUE))))  NULLS FIRST;
SELECT * FROM vt0, rt0, t0, vt1 WHERE (((UNLIKELY(DISTINCT t0.c3)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT t0.c3)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (((UNLIKELY(DISTINCT t0.c3)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT t0.c3)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (((UNLIKELY(DISTINCT t0.c3)) IS TRUE));
SELECT ALL * FROM t0, vt1 CROSS JOIN rt0 ON ((((((t0.c33)<(x'')))OR(UNLIKELY(t0.c33))))OR(CAST(t0.c3 AS INTEGER))) LEFT OUTER JOIN vt0 ON (((rt0.c2)) NOT BETWEEN (((+ (vt0.c1)))) AND ((CAST(t0.c3 AS BLOB)))) WHERE (((((rt0.c1)LIKE(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)LIKE(rt0.c2))) ISNULL)) IS TRUE)  as count FROM t0, vt1 CROSS JOIN rt0 ON ((((((t0.c33)<(x'')))OR(UNLIKELY(t0.c33))))OR(CAST(t0.c3 AS INTEGER))) LEFT OUTER JOIN vt0 ON (((rt0.c2)) NOT BETWEEN (((+ (vt0.c1)))) AND ((CAST(t0.c3 AS BLOB)))));
SELECT ALL * FROM t0, vt1 CROSS JOIN rt0 ON ((((((t0.c33)<(x'')))OR(UNLIKELY(t0.c33))))OR(CAST(t0.c3 AS INTEGER))) LEFT OUTER JOIN vt0 ON (((rt0.c2)) NOT BETWEEN (((+ (vt0.c1)))) AND ((CAST(t0.c3 AS BLOB)))) WHERE (((((rt0.c1)LIKE(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)LIKE(rt0.c2))) ISNULL)) IS TRUE)  as count FROM t0, vt1 CROSS JOIN rt0 ON ((((((t0.c33)<(x'')))OR(UNLIKELY(t0.c33))))OR(CAST(t0.c3 AS INTEGER))) LEFT OUTER JOIN vt0 ON (((rt0.c2)) NOT BETWEEN (((+ (vt0.c1)))) AND ((CAST(t0.c3 AS BLOB)))));
SELECT ALL * FROM t0, vt1 CROSS JOIN rt0 ON ((((((t0.c33)<(x'')))OR(UNLIKELY(t0.c33))))OR(CAST(t0.c3 AS INTEGER))) LEFT OUTER JOIN vt0 ON (((rt0.c2)) NOT BETWEEN (((+ (vt0.c1)))) AND ((CAST(t0.c3 AS BLOB)))) WHERE (((((rt0.c1)LIKE(rt0.c2))) ISNULL));
SELECT * FROM vt1 FULL OUTER JOIN t0 ON ((t0.c33) NOT BETWEEN (highlight(t0.c3, t0.c33, t0.c3, t0.c33)) AND (((t0.c3) NOT BETWEEN (t0.c33) AND (t0.c3)))) WHERE (((CAST(t0.c33 AS NUMERIC))GLOB((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c33 AS NUMERIC))GLOB((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((t0.c33) NOT BETWEEN (highlight(t0.c3, t0.c33, t0.c3, t0.c33)) AND (((t0.c3) NOT BETWEEN (t0.c33) AND (t0.c3)))));
SELECT * FROM vt1 FULL OUTER JOIN t0 ON ((t0.c33) NOT BETWEEN (highlight(t0.c3, t0.c33, t0.c3, t0.c33)) AND (((t0.c3) NOT BETWEEN (t0.c33) AND (t0.c3)))) WHERE (((CAST(t0.c33 AS NUMERIC))GLOB((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c33 AS NUMERIC))GLOB((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((t0.c33) NOT BETWEEN (highlight(t0.c3, t0.c33, t0.c3, t0.c33)) AND (((t0.c3) NOT BETWEEN (t0.c33) AND (t0.c3)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)==(rt0.c1))) NOT BETWEEN (((((((((((((rt0.c0)OR(x'')))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND('k-N^')))AND(rt0.c1))) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)=(rt0.c1))) NOT BETWEEN (((((((((((((rt0.c0)OR(x'')))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND('k-N^')))AND(rt0.c1))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)==(rt0.c1))) NOT BETWEEN (((((((((((((rt0.c0)OR(x'')))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND('k-N^')))AND(rt0.c1))) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)=(rt0.c1))) NOT BETWEEN (((((((((((((rt0.c0)OR(x'')))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND('k-N^')))AND(rt0.c1))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)==(rt0.c1))) NOT BETWEEN (((((((((((((rt0.c0)OR(x'')))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND('k-N^')))AND(rt0.c1))) AND ((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0) IS TRUE))));
SELECT * FROM vt0 INNER JOIN vt1 ON ((t0.c33) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE CROSS JOIN rt0 ON (((((vt0.c1))>=((rt0.c1)))) BETWEEN ((NOT (rt0.c0))) AND ((((t0.c33)) NOT BETWEEN ((t0.c3)) AND ((vt1.c0))))) INNER JOIN t0 ON vt0.c1 WHERE ((NOT (t0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((t0.c33) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE CROSS JOIN rt0 ON (((((vt0.c1))>=((rt0.c1)))) BETWEEN ((NOT (rt0.c0))) AND ((((t0.c33)) NOT BETWEEN ((t0.c3)) AND ((vt1.c0))))) INNER JOIN t0 ON vt0.c1);
SELECT * FROM vt0 INNER JOIN vt1 ON ((t0.c33) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE CROSS JOIN rt0 ON (((((vt0.c1))>=((rt0.c1)))) BETWEEN ((NOT (rt0.c0))) AND ((((t0.c33)) NOT BETWEEN ((t0.c3)) AND ((vt1.c0))))) INNER JOIN t0 ON vt0.c1 WHERE ((NOT (t0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((t0.c33) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE CROSS JOIN rt0 ON (((((vt0.c1))>=((rt0.c1)))) BETWEEN ((NOT (rt0.c0))) AND ((((t0.c33)) NOT BETWEEN ((t0.c3)) AND ((vt1.c0))))) INNER JOIN t0 ON vt0.c1);
SELECT * FROM vt0 INNER JOIN vt1 ON ((t0.c33) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE CROSS JOIN rt0 ON (((((vt0.c1))>=((rt0.c1)))) BETWEEN ((NOT (rt0.c0))) AND ((((t0.c33)) NOT BETWEEN ((t0.c3)) AND ((vt1.c0))))) INNER JOIN t0 ON vt0.c1 WHERE ((NOT (t0.c3)) COLLATE NOCASE);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ()))<<((- (vt0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))<<((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ()))<<((- (vt0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))<<((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ()))<<((- (vt0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((((t0.c33) ISNULL), ((((t0.c33)OR(t0.c33)))OR(t0.c33)), LIKELIHOOD(vt0.c0, 0.23908500128878052)))>=((CASE 0.29541198152770853  WHEN t0.c3 THEN t0.c3 ELSE t0.c33 END, ((vt0.c1) NOT BETWEEN (t0.c3) AND (vt1.c0)), (0.8938493978249711 IN ()))))) ORDER BY CAST((vt0.c0 IN (vt0.c1, vt0.c1)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c33) ISNULL), ((((t0.c33)OR(t0.c33)))OR(t0.c33)), LIKELIHOOD(vt0.c0, 0.23908500128878052)))>=((CASE 0.29541198152770853  WHEN t0.c3 THEN t0.c3 ELSE t0.c33 END, ((vt0.c1) NOT BETWEEN (t0.c3) AND (vt1.c0)), (0.8938493978249711 IN ()))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST((vt0.c0 IN (vt0.c1, vt0.c1)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((((t0.c33) ISNULL), ((((t0.c33)OR(t0.c33)))OR(t0.c33)), LIKELIHOOD(vt0.c0, 0.23908500128878052)))>=((CASE 0.29541198152770853  WHEN t0.c3 THEN t0.c3 ELSE t0.c33 END, ((vt0.c1) NOT BETWEEN (t0.c3) AND (vt1.c0)), (0.8938493978249711 IN ()))))) ORDER BY CAST((vt0.c0 IN (vt0.c1, vt0.c1)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c33) ISNULL), ((((t0.c33)OR(t0.c33)))OR(t0.c33)), LIKELIHOOD(vt0.c0, 0.23908500128878052)))>=((CASE 0.29541198152770853  WHEN t0.c3 THEN t0.c3 ELSE t0.c33 END, ((vt0.c1) NOT BETWEEN (t0.c3) AND (vt1.c0)), (0.8938493978249711 IN ()))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST((vt0.c0 IN (vt0.c1, vt0.c1)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((((t0.c33) ISNULL), ((((t0.c33)OR(t0.c33)))OR(t0.c33)), LIKELIHOOD(vt0.c0, 0.23908500128878052)))>=((CASE 0.29541198152770853  WHEN t0.c3 THEN t0.c3 ELSE t0.c33 END, ((vt0.c1) NOT BETWEEN (t0.c3) AND (vt1.c0)), (0.8938493978249711 IN ()))))) ORDER BY CAST((vt0.c0 IN (vt0.c1, vt0.c1)) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)AND(1.710640614E9)))AND(vt0.c0))))) ORDER BY (+ (vt0.c1)) COLLATE RTRIM  NULLS LAST, vt0.c1  NULLS LAST, TRIM(DISTINCT NULL);
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)AND(1.710640614E9)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c1)) COLLATE RTRIM  NULLS LAST, vt0.c1  NULLS LAST, TRIM(DISTINCT NULL));
SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)AND(1.710640614E9)))AND(vt0.c0))))) ORDER BY (+ (vt0.c1)) COLLATE RTRIM  NULLS LAST, vt0.c1  NULLS LAST, TRIM(DISTINCT NULL);
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)AND(1.710640614E9)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c1)) COLLATE RTRIM  NULLS LAST, vt0.c1  NULLS LAST, TRIM(DISTINCT NULL));
SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)AND(1.710640614E9)))AND(vt0.c0))))) ORDER BY (+ (vt0.c1)) COLLATE RTRIM  NULLS LAST, vt0.c1  NULLS LAST, TRIM(DISTINCT NULL);
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((-375124215))))AND(((((vt0.c1)OR(0xffffffffbd5e6846)))AND(x'8beb'))))) ORDER BY (((((((((((vt1.c0))>((rt0.c0))))OR((~ (rt0.c2)))))AND((0.1643430849264993 IN (rt0.c0)))))AND(DATETIME(vt1.c0, rt0.c0, vt0.c1, vt0.c0, x'f96c'))))OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((-375124215))))AND(((((vt0.c1)OR(0Xffffffffbd5e6846)))AND(x'8beb'))))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY (((((((((((vt1.c0))>((rt0.c0))))OR((~ (rt0.c2)))))AND((0.1643430849264993 IN (rt0.c0)))))AND(DATETIME(vt1.c0, rt0.c0, vt0.c1, vt0.c0, x'f96c'))))OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((-375124215))))AND(((((vt0.c1)OR(0xffffffffbd5e6846)))AND(x'8beb'))))) ORDER BY (((((((((((vt1.c0))>((rt0.c0))))OR((~ (rt0.c2)))))AND((0.1643430849264993 IN (rt0.c0)))))AND(DATETIME(vt1.c0, rt0.c0, vt0.c1, vt0.c0, x'f96c'))))OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((-375124215))))AND(((((vt0.c1)OR(0Xffffffffbd5e6846)))AND(x'8beb'))))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY (((((((((((vt1.c0))>((rt0.c0))))OR((~ (rt0.c2)))))AND((0.1643430849264993 IN (rt0.c0)))))AND(DATETIME(vt1.c0, rt0.c0, vt0.c1, vt0.c0, x'f96c'))))OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((-375124215))))AND(((((vt0.c1)OR(0xffffffffbd5e6846)))AND(x'8beb'))))) ORDER BY (((((((((((vt1.c0))>((rt0.c0))))OR((~ (rt0.c2)))))AND((0.1643430849264993 IN (rt0.c0)))))AND(DATETIME(vt1.c0, rt0.c0, vt0.c1, vt0.c0, x'f96c'))))OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))  NULLS LAST;
SELECT * FROM t0, rt0, vt1 WHERE (CASE WHEN rt0.c1 THEN CAST(t0.c3 AS TEXT) END) ORDER BY LIKELIHOOD(DISTINCT ((((rt0.c2)AND(rt0.c1)))AND(t0.c3)), 0.2848014639909413) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN CAST(t0.c3 AS TEXT) END) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY LIKELIHOOD(DISTINCT ((((rt0.c2)AND(rt0.c1)))AND(t0.c3)), 0.2848014639909413) ASC  NULLS LAST);
SELECT * FROM t0, rt0, vt1 WHERE (CASE WHEN rt0.c1 THEN CAST(t0.c3 AS TEXT) END) ORDER BY LIKELIHOOD(DISTINCT ((((rt0.c2)AND(rt0.c1)))AND(t0.c3)), 0.2848014639909413) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN CAST(t0.c3 AS TEXT) END) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY LIKELIHOOD(DISTINCT ((((rt0.c2)AND(rt0.c1)))AND(t0.c3)), 0.2848014639909413) ASC  NULLS LAST);
SELECT * FROM t0, rt0, vt1 WHERE (CASE WHEN rt0.c1 THEN CAST(t0.c3 AS TEXT) END) ORDER BY LIKELIHOOD(DISTINCT ((((rt0.c2)AND(rt0.c1)))AND(t0.c3)), 0.2848014639909413) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((~ ((rt0.c1 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c1 IN (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((rt0.c1 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c1 IN (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((rt0.c1 IN (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((((rt0.c1) ISNULL))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR((NOT (rt0.c2)))) ASC  NULLS LAST, ((((((rt0.c1) IS TRUE))OR((((rt0.c0))>=((rt0.c0))))))OR(((rt0.c2)<<(rt0.c2)))), (rt0.c2 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) ISNULL))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR((NOT (rt0.c2)))) ASC  NULLS LAST, ((((((rt0.c1) IS TRUE))OR((((rt0.c0))>=((rt0.c0))))))OR(((rt0.c2)<<(rt0.c2)))), (rt0.c2 IN ()) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((((rt0.c1) ISNULL))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR((NOT (rt0.c2)))) ASC  NULLS LAST, ((((((rt0.c1) IS TRUE))OR((((rt0.c0))>=((rt0.c0))))))OR(((rt0.c2)<<(rt0.c2)))), (rt0.c2 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) ISNULL))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR((NOT (rt0.c2)))) ASC  NULLS LAST, ((((((rt0.c1) IS TRUE))OR((((rt0.c0))>=((rt0.c0))))))OR(((rt0.c2)<<(rt0.c2)))), (rt0.c2 IN ()) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((((rt0.c1) ISNULL))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR((NOT (rt0.c2)))) ASC  NULLS LAST, ((((((rt0.c1) IS TRUE))OR((((rt0.c0))>=((rt0.c0))))))OR(((rt0.c2)<<(rt0.c2)))), (rt0.c2 IN ()) ASC;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (- (CASE vt1.c0  WHEN vt1.c0 THEN t0.c33 WHEN vt1.c0 THEN t0.c3 WHEN vt1.c0 THEN t0.c3 END)) WHERE ((((- (t0.c33))) NOT BETWEEN (CASE t0.c33  WHEN 0X7ca3675a THEN t0.c33 ELSE vt1.c0 END) AND (((((t0.c3)AND(t0.c33)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c33))) NOT BETWEEN (CASE t0.c33  WHEN 0X7ca3675a THEN t0.c33 ELSE vt1.c0 END) AND (((((t0.c3)AND(t0.c33)))AND(vt1.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (- (CASE vt1.c0  WHEN vt1.c0 THEN t0.c33 WHEN vt1.c0 THEN t0.c3 WHEN vt1.c0 THEN t0.c3 END)));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (- (CASE vt1.c0  WHEN vt1.c0 THEN t0.c33 WHEN vt1.c0 THEN t0.c3 WHEN vt1.c0 THEN t0.c3 END)) WHERE ((((- (t0.c33))) NOT BETWEEN (CASE t0.c33  WHEN 0X7ca3675a THEN t0.c33 ELSE vt1.c0 END) AND (((((t0.c3)AND(t0.c33)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c33))) NOT BETWEEN (CASE t0.c33  WHEN 0X7ca3675a THEN t0.c33 ELSE vt1.c0 END) AND (((((t0.c3)AND(t0.c33)))AND(vt1.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (- (CASE vt1.c0  WHEN vt1.c0 THEN t0.c33 WHEN vt1.c0 THEN t0.c3 WHEN vt1.c0 THEN t0.c3 END)));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (- (CASE vt1.c0  WHEN vt1.c0 THEN t0.c33 WHEN vt1.c0 THEN t0.c3 WHEN vt1.c0 THEN t0.c3 END)) WHERE ((((- (t0.c33))) NOT BETWEEN (CASE t0.c33  WHEN 0X7ca3675a THEN t0.c33 ELSE vt1.c0 END) AND (((((t0.c3)AND(t0.c33)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 RIGHT OUTER JOIN t0 ON CAST(((vt1.c0) NOT BETWEEN (t0.c33) AND (rt0.c0)) AS TEXT) WHERE ((((~ (rt0.c1)))!=('78996103' COLLATE BINARY))) ORDER BY (((t0.c33)) NOT BETWEEN ((t0.c3)) AND ((vt1.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))<>('78996103' COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0, vt0 RIGHT OUTER JOIN t0 ON CAST(((vt1.c0) NOT BETWEEN (t0.c33) AND (rt0.c0)) AS TEXT) ORDER BY (((t0.c33)) NOT BETWEEN ((t0.c3)) AND ((vt1.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 RIGHT OUTER JOIN t0 ON CAST(((vt1.c0) NOT BETWEEN (t0.c33) AND (rt0.c0)) AS TEXT) WHERE ((((~ (rt0.c1)))!=('78996103' COLLATE BINARY))) ORDER BY (((t0.c33)) NOT BETWEEN ((t0.c3)) AND ((vt1.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))<>('78996103' COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0, vt0 RIGHT OUTER JOIN t0 ON CAST(((vt1.c0) NOT BETWEEN (t0.c33) AND (rt0.c0)) AS TEXT) ORDER BY (((t0.c33)) NOT BETWEEN ((t0.c3)) AND ((vt1.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 RIGHT OUTER JOIN t0 ON CAST(((vt1.c0) NOT BETWEEN (t0.c33) AND (rt0.c0)) AS TEXT) WHERE ((((~ (rt0.c1)))!=('78996103' COLLATE BINARY))) ORDER BY (((t0.c33)) NOT BETWEEN ((t0.c3)) AND ((vt1.c0))) COLLATE RTRIM;
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (CASE WHEN (rt0.c0 IN (vt1.c0)) THEN LIKELY(DISTINCT t0.c33) WHEN (NOT (x'84a4')) THEN CAST(t0.c3 AS BLOB) WHEN ((rt0.c1)+(NULL)) THEN (((t0.c33, t0.c3, '[]PJV5W^D'))>((rt0.c0, rt0.c0, rt0.c0))) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c0 IN (vt1.c0)) THEN LIKELY(DISTINCT t0.c33) WHEN (NOT (x'84a4')) THEN CAST(t0.c3 AS BLOB) WHEN ((rt0.c1)+(NULL)) THEN (((t0.c33, t0.c3, '[]PJV5W^D'))>((rt0.c0, rt0.c0, rt0.c0))) ELSE x'' END) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (CASE WHEN (rt0.c0 IN (vt1.c0)) THEN LIKELY(DISTINCT t0.c33) WHEN (NOT (x'84a4')) THEN CAST(t0.c3 AS BLOB) WHEN ((rt0.c1)+(NULL)) THEN (((t0.c33, t0.c3, '[]PJV5W^D'))>((rt0.c0, rt0.c0, rt0.c0))) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c0 IN (vt1.c0)) THEN LIKELY(DISTINCT t0.c33) WHEN (NOT (x'84a4')) THEN CAST(t0.c3 AS BLOB) WHEN ((rt0.c1)+(NULL)) THEN (((t0.c33, t0.c3, '[]PJV5W^D'))>((rt0.c0, rt0.c0, rt0.c0))) ELSE x'' END) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (CASE WHEN (rt0.c0 IN (vt1.c0)) THEN LIKELY(DISTINCT t0.c33) WHEN (NOT (x'84a4')) THEN CAST(t0.c3 AS BLOB) WHEN ((rt0.c1)+(NULL)) THEN (((t0.c33, t0.c3, '[]PJV5W^D'))>((rt0.c0, rt0.c0, rt0.c0))) ELSE x'' END);
SELECT * FROM rt0 CROSS JOIN t0 ON ((rt0.c0)<(((vt0.c0)IS NOT(vt0.c1)))) FULL OUTER JOIN vt0 ON (- (CAST(rt0.c0 AS NUMERIC))) FULL OUTER JOIN vt1 ON NULL COLLATE RTRIM WHERE (vt0.c0) ORDER BY (((~ (vt1.c0)))*(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((rt0.c0)<(((vt0.c0)IS NOT(vt0.c1)))) FULL OUTER JOIN vt0 ON (- (CAST(rt0.c0 AS NUMERIC))) FULL OUTER JOIN vt1 ON NULL COLLATE RTRIM ORDER BY (((~ (vt1.c0)))*(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 END)) DESC);
SELECT * FROM rt0 CROSS JOIN t0 ON ((rt0.c0)<(((vt0.c0)IS NOT(vt0.c1)))) FULL OUTER JOIN vt0 ON (- (CAST(rt0.c0 AS NUMERIC))) FULL OUTER JOIN vt1 ON NULL COLLATE RTRIM WHERE (vt0.c0) ORDER BY (((~ (vt1.c0)))*(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((rt0.c0)<(((vt0.c0)IS NOT(vt0.c1)))) FULL OUTER JOIN vt0 ON (- (CAST(rt0.c0 AS NUMERIC))) FULL OUTER JOIN vt1 ON NULL COLLATE RTRIM ORDER BY (((~ (vt1.c0)))*(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 END)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END AS INTEGER));
SELECT * FROM vt0 WHERE ((+ (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (vt0.c1)));
SELECT * FROM vt1, t0 NOT INDEXED WHERE (((t0.c33)>>(((t0.c33) BETWEEN ('H&,]U3') AND (vt1.c0))))) ORDER BY ((((CAST(vt1.c0 AS INTEGER))OR(((t0.c3) NOTNULL))))OR(t0.c33));
SELECT SUM(count) FROM (SELECT ((((t0.c33)>>(((t0.c33) BETWEEN ('H&,]U3') AND (vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((CAST(vt1.c0 AS INTEGER))OR(((t0.c3) NOTNULL))))OR(t0.c33)));
SELECT * FROM vt1, t0 NOT INDEXED WHERE (((t0.c33)>>(((t0.c33) BETWEEN ('H&,]U3') AND (vt1.c0))))) ORDER BY ((((CAST(vt1.c0 AS INTEGER))OR(((t0.c3) NOTNULL))))OR(t0.c33));
SELECT SUM(count) FROM (SELECT ((((t0.c33)>>(((t0.c33) BETWEEN ('H&,]U3') AND (vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((CAST(vt1.c0 AS INTEGER))OR(((t0.c3) NOTNULL))))OR(t0.c33)));
SELECT * FROM vt1, t0 NOT INDEXED WHERE (((t0.c33)>>(((t0.c33) BETWEEN ('H&,]U3') AND (vt1.c0))))) ORDER BY ((((CAST(vt1.c0 AS INTEGER))OR(((t0.c3) NOTNULL))))OR(t0.c33));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('-1226570474') ORDER BY (((vt0.c1 IN (vt0.c0, vt1.c0)))<((((''))<=((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1226570474') IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1 IN (vt0.c0, vt1.c0)))<((((''))<=((vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('-1226570474') ORDER BY (((vt0.c1 IN (vt0.c0, vt1.c0)))<((((''))<=((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1226570474') IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1 IN (vt0.c0, vt1.c0)))<((((''))<=((vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('-1226570474') ORDER BY (((vt0.c1 IN (vt0.c0, vt1.c0)))<((((''))<=((vt0.c0))))) DESC;
SELECT * FROM rt0, vt0, t0, vt1 WHERE (HEX(DISTINCT t0.c33 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT t0.c33 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT * FROM rt0, vt0, t0, vt1 WHERE (HEX(DISTINCT t0.c33 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT t0.c33 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT * FROM rt0, vt0, t0, vt1 WHERE (HEX(DISTINCT t0.c33 COLLATE NOCASE));
SELECT ALL * FROM t0 WHERE (((CASE '-1266951001'  WHEN t0.c3 THEN t0.c3 END) BETWEEN (((t0.c33)IS(t0.c33))) AND ('-2072223984'))) ORDER BY (((t0.c3) NOTNULL) IN ((((t0.c33, 0x2fc8a941, t0.c33))>=((t0.c3, t0.c33, t0.c33))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE '-1266951001'  WHEN t0.c3 THEN t0.c3 END) BETWEEN (((t0.c33)IS(t0.c33))) AND ('-2072223984'))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c3) NOTNULL) IN ((((t0.c33, 0x2fc8a941, t0.c33))>=((t0.c3, t0.c33, t0.c33))))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CASE '-1266951001'  WHEN t0.c3 THEN t0.c3 END) BETWEEN (((t0.c33)IS(t0.c33))) AND ('-2072223984'))) ORDER BY (((t0.c3) NOTNULL) IN ((((t0.c33, 0x2fc8a941, t0.c33))>=((t0.c3, t0.c33, t0.c33))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE '-1266951001'  WHEN t0.c3 THEN t0.c3 END) BETWEEN (((t0.c33)IS(t0.c33))) AND ('-2072223984'))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c3) NOTNULL) IN ((((t0.c33, 0x2fc8a941, t0.c33))>=((t0.c3, t0.c33, t0.c33))))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CASE '-1266951001'  WHEN t0.c3 THEN t0.c3 END) BETWEEN (((t0.c33)IS(t0.c33))) AND ('-2072223984'))) ORDER BY (((t0.c3) NOTNULL) IN ((((t0.c33, 0x2fc8a941, t0.c33))>=((t0.c3, t0.c33, t0.c33))))) DESC  NULLS FIRST;
SELECT * FROM t0 FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS BLOB) AS TEXT) FULL OUTER JOIN rt0 ON TYPEOF(((rt0.c2)>=(rt0.c0))) WHERE (((rt0.c2)GLOB(t0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)GLOB(t0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS BLOB) AS TEXT) FULL OUTER JOIN rt0 ON TYPEOF(((rt0.c2)>=(rt0.c0))));
SELECT * FROM t0 FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS BLOB) AS TEXT) FULL OUTER JOIN rt0 ON TYPEOF(((rt0.c2)>=(rt0.c0))) WHERE (((rt0.c2)GLOB(t0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)GLOB(t0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS BLOB) AS TEXT) FULL OUTER JOIN rt0 ON TYPEOF(((rt0.c2)>=(rt0.c0))));
SELECT * FROM t0 FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS BLOB) AS TEXT) FULL OUTER JOIN rt0 ON TYPEOF(((rt0.c2)>=(rt0.c0))) WHERE (((rt0.c2)GLOB(t0.c3)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE (t0.c33 IN (rt0.c0))  WHEN t0.c3 COLLATE BINARY THEN 1549127918 END) ORDER BY ((((rt0.c0)IS(rt0.c0)))>('806276459')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (t0.c33 IN (rt0.c0))  WHEN t0.c3 COLLATE BINARY THEN 1549127918 END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0)IS(rt0.c0)))>('806276459')) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE (t0.c33 IN (rt0.c0))  WHEN t0.c3 COLLATE BINARY THEN 1549127918 END) ORDER BY ((((rt0.c0)IS(rt0.c0)))>('806276459')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (t0.c33 IN (rt0.c0))  WHEN t0.c3 COLLATE BINARY THEN 1549127918 END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0)IS(rt0.c0)))>('806276459')) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE (t0.c33 IN (rt0.c0))  WHEN t0.c3 COLLATE BINARY THEN 1549127918 END) ORDER BY ((((rt0.c0)IS(rt0.c0)))>('806276459')) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ('1645595218') ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (('1645595218') IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ('1645595218') ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (('1645595218') IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ('1645595218') ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC;
SELECT * FROM rt0 WHERE ((((rt0.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1) ISNULL) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((vt1.c0)||(t0.c3)))%(CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)||(t0.c3)))%(CAST(NULL AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((vt1.c0)||(t0.c3)))%(CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)||(t0.c3)))%(CAST(NULL AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((vt1.c0)||(t0.c3)))%(CAST(NULL AS TEXT))));
SELECT * FROM rt0, t0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c1) BETWEEN (t0.c33) AND (t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c1) BETWEEN (t0.c33) AND (t0.c3))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c1) BETWEEN (t0.c33) AND (t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c1) BETWEEN (t0.c33) AND (t0.c3))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c1) BETWEEN (t0.c33) AND (t0.c3)))));
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c33) ISNULL) RIGHT OUTER JOIN vt0 ON (+ (vt0.c1)) COLLATE RTRIM WHERE ((((t0.c33)<(vt1.c0)) IN (vt1.c0))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((('Xz][0U{pi') BETWEEN (t0.c33) AND (vt0.c1)))), vt0.c0;
SELECT SUM(count) FROM (SELECT (((((t0.c33)<(vt1.c0)) IN (vt1.c0))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c33) ISNULL) RIGHT OUTER JOIN vt0 ON (+ (vt0.c1)) COLLATE RTRIM ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((('Xz][0U{pi') BETWEEN (t0.c33) AND (vt0.c1)))), vt0.c0);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c33) ISNULL) RIGHT OUTER JOIN vt0 ON (+ (vt0.c1)) COLLATE RTRIM WHERE ((((t0.c33)<(vt1.c0)) IN (vt1.c0))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((('Xz][0U{pi') BETWEEN (t0.c33) AND (vt0.c1)))), vt0.c0;
SELECT SUM(count) FROM (SELECT (((((t0.c33)<(vt1.c0)) IN (vt1.c0))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c33) ISNULL) RIGHT OUTER JOIN vt0 ON (+ (vt0.c1)) COLLATE RTRIM ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((('Xz][0U{pi') BETWEEN (t0.c33) AND (vt0.c1)))), vt0.c0);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c33) ISNULL) RIGHT OUTER JOIN vt0 ON (+ (vt0.c1)) COLLATE RTRIM WHERE ((((t0.c33)<(vt1.c0)) IN (vt1.c0))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((('Xz][0U{pi') BETWEEN (t0.c33) AND (vt0.c1)))), vt0.c0;
SELECT COUNT(*) FROM rt0, vt1 WHERE (vt1.c0) ORDER BY (((rt0.c2 IN ())) ISNULL) DESC, (((((rt0.c2)>>(rt0.c1))))<((((rt0.c2)IS(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2 IN ())) ISNULL) DESC, (((((rt0.c2)>>(rt0.c1))))<((((rt0.c2)IS(vt1.c0))))) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (vt1.c0) ORDER BY (((rt0.c2 IN ())) ISNULL) DESC, (((((rt0.c2)>>(rt0.c1))))<((((rt0.c2)IS(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2 IN ())) ISNULL) DESC, (((((rt0.c2)>>(rt0.c1))))<((((rt0.c2)IS(vt1.c0))))) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (vt1.c0) ORDER BY (((rt0.c2 IN ())) ISNULL) DESC, (((((rt0.c2)>>(rt0.c1))))<((((rt0.c2)IS(vt1.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (LIKELY(vt1.c0 COLLATE BINARY)) ORDER BY UNLIKELY(DISTINCT ((t0.c3)IS NOT(vt0.c1)))  NULLS FIRST, (CAST(vt0.c0 AS REAL) IN (((vt0.c1)<('tR')), x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY UNLIKELY(DISTINCT ((t0.c3)IS NOT(vt0.c1)))  NULLS FIRST, (CAST(vt0.c0 AS REAL) IN (((vt0.c1)<('tR')), x''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (LIKELY(vt1.c0 COLLATE BINARY)) ORDER BY UNLIKELY(DISTINCT ((t0.c3)IS NOT(vt0.c1)))  NULLS FIRST, (CAST(vt0.c0 AS REAL) IN (((vt0.c1)<('tR')), x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY UNLIKELY(DISTINCT ((t0.c3)IS NOT(vt0.c1)))  NULLS FIRST, (CAST(vt0.c0 AS REAL) IN (((vt0.c1)<('tR')), x''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (LIKELY(vt1.c0 COLLATE BINARY)) ORDER BY UNLIKELY(DISTINCT ((t0.c3)IS NOT(vt0.c1)))  NULLS FIRST, (CAST(vt0.c0 AS REAL) IN (((vt0.c1)<('tR')), x''))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((('1d\~')AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((('1d\~')AND(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((('1d\~')AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((('1d\~')AND(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((('1d\~')AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c3)) BETWEEN ((CASE WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c33 ELSE t0.c33 END)) AND ((CASE t0.c33  WHEN t0.c33 THEN t0.c33 ELSE t0.c33 END)))) ORDER BY ((((((((UNLIKELY(0.38201247636481517))OR((((t0.c3))<=((t0.c33))))))OR(TRIM(DISTINCT t0.c3))))OR(SQLITE_COMPILEOPTION_USED(t0.c33))))OR(((((t0.c3)AND(t0.c3)))AND(t0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c3)) BETWEEN ((CASE WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c33 ELSE t0.c33 END)) AND ((CASE t0.c33  WHEN t0.c33 THEN t0.c33 ELSE t0.c33 END)))) IS TRUE)  as count FROM t0 ORDER BY ((((((((UNLIKELY(0.38201247636481517))OR((((t0.c3))<=((t0.c33))))))OR(TRIM(DISTINCT t0.c3))))OR(SQLITE_COMPILEOPTION_USED(t0.c33))))OR(((((t0.c3)AND(t0.c3)))AND(t0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c3)) BETWEEN ((CASE WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c33 ELSE t0.c33 END)) AND ((CASE t0.c33  WHEN t0.c33 THEN t0.c33 ELSE t0.c33 END)))) ORDER BY ((((((((UNLIKELY(0.38201247636481517))OR((((t0.c3))<=((t0.c33))))))OR(TRIM(DISTINCT t0.c3))))OR(SQLITE_COMPILEOPTION_USED(t0.c33))))OR(((((t0.c3)AND(t0.c3)))AND(t0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c3)) BETWEEN ((CASE WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c33 ELSE t0.c33 END)) AND ((CASE t0.c33  WHEN t0.c33 THEN t0.c33 ELSE t0.c33 END)))) IS TRUE)  as count FROM t0 ORDER BY ((((((((UNLIKELY(0.38201247636481517))OR((((t0.c3))<=((t0.c33))))))OR(TRIM(DISTINCT t0.c3))))OR(SQLITE_COMPILEOPTION_USED(t0.c33))))OR(((((t0.c3)AND(t0.c3)))AND(t0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c3)) BETWEEN ((CASE WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c33 ELSE t0.c33 END)) AND ((CASE t0.c33  WHEN t0.c33 THEN t0.c33 ELSE t0.c33 END)))) ORDER BY ((((((((UNLIKELY(0.38201247636481517))OR((((t0.c3))<=((t0.c33))))))OR(TRIM(DISTINCT t0.c3))))OR(SQLITE_COMPILEOPTION_USED(t0.c33))))OR(((((t0.c3)AND(t0.c3)))AND(t0.c3))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY (((x'002d', vt1.c0, vt1.c0)) BETWEEN (((+ (vt1.c0)), ((vt1.c0)|(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0)>=(vt1.c0)), vt1.c0 COLLATE RTRIM, ((vt1.c0)IS(vt1.c0))))), ((CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 'now' THEN vt1.c0 END) NOTNULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY (((x'002d', vt1.c0, vt1.c0)) BETWEEN (((+ (vt1.c0)), ((vt1.c0)|(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0)>=(vt1.c0)), vt1.c0 COLLATE RTRIM, ((vt1.c0)IS(vt1.c0))))), ((CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 'now' THEN vt1.c0 END) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY (((x'002d', vt1.c0, vt1.c0)) BETWEEN (((+ (vt1.c0)), ((vt1.c0)|(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0)>=(vt1.c0)), vt1.c0 COLLATE RTRIM, ((vt1.c0)IS(vt1.c0))))), ((CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 'now' THEN vt1.c0 END) NOTNULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY (((x'002d', vt1.c0, vt1.c0)) BETWEEN (((+ (vt1.c0)), ((vt1.c0)|(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0)>=(vt1.c0)), vt1.c0 COLLATE RTRIM, ((vt1.c0)IS(vt1.c0))))), ((CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 'now' THEN vt1.c0 END) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY (((x'002d', vt1.c0, vt1.c0)) BETWEEN (((+ (vt1.c0)), ((vt1.c0)|(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0)>=(vt1.c0)), vt1.c0 COLLATE RTRIM, ((vt1.c0)IS(vt1.c0))))), ((CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 'now' THEN vt1.c0 END) NOTNULL);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((x'' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE BINARY)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((x'' IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((x'' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE BINARY)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((x'' IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((x'' IN ()))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((((((('GK') NOTNULL))OR(rt0.c2)))OR((rt0.c2 IN (t0.c33))))) ORDER BY (((t0.c33))<((t0.c33 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((('GK') NOTNULL))OR(rt0.c2)))OR((rt0.c2 IN (t0.c33))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY (((t0.c33))<((t0.c33 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((((((('GK') NOTNULL))OR(rt0.c2)))OR((rt0.c2 IN (t0.c33))))) ORDER BY (((t0.c33))<((t0.c33 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((('GK') NOTNULL))OR(rt0.c2)))OR((rt0.c2 IN (t0.c33))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY (((t0.c33))<((t0.c33 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((((((('GK') NOTNULL))OR(rt0.c2)))OR((rt0.c2 IN (t0.c33))))) ORDER BY (((t0.c33))<((t0.c33 COLLATE NOCASE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON CAST('535785101' AS NUMERIC) WHERE (((((((0.9306413654751857)AND(t0.c33)))AND(t0.c33)))|(t0.c33 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((0.9306413654751857)AND(t0.c33)))AND(t0.c33)))|(t0.c33 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON CAST('535785101' AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON CAST('535785101' AS NUMERIC) WHERE (((((((0.9306413654751857)AND(t0.c33)))AND(t0.c33)))|(t0.c33 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((0.9306413654751857)AND(t0.c33)))AND(t0.c33)))|(t0.c33 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON CAST('535785101' AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON CAST('535785101' AS NUMERIC) WHERE (((((((0.9306413654751857)AND(t0.c33)))AND(t0.c33)))|(t0.c33 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (((((((((((vt1.c0) IS FALSE))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)))OR((((vt1.c0, vt1.c0, vt1.c0))>(('788714024', vt1.c0, vt1.c0))))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) IS FALSE))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)))OR((((vt1.c0, vt1.c0, vt1.c0))>(('788714024', vt1.c0, vt1.c0))))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (((((((((((vt1.c0) IS FALSE))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)))OR((((vt1.c0, vt1.c0, vt1.c0))>(('788714024', vt1.c0, vt1.c0))))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) IS FALSE))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)))OR((((vt1.c0, vt1.c0, vt1.c0))>(('788714024', vt1.c0, vt1.c0))))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (((((((((((vt1.c0) IS FALSE))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)))OR((((vt1.c0, vt1.c0, vt1.c0))>(('788714024', vt1.c0, vt1.c0))))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1, t0 WHERE (t0.c33 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t0.c33 COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (t0.c33 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t0.c33 COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (t0.c33 COLLATE NOCASE);
SELECT * FROM vt0, t0, vt1 WHERE ('1116876276');
SELECT SUM(count) FROM (SELECT ALL (('1116876276') IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE ('1116876276');
SELECT SUM(count) FROM (SELECT ALL (('1116876276') IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE ('1116876276');
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c3)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c3)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c3)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, rt0 FULL OUTER JOIN vt0 ON vt0.c0 COLLATE RTRIM WHERE (-1.088340306E9) ORDER BY (+ (vt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((-1.088340306E9) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN vt0 ON vt0.c0 COLLATE RTRIM ORDER BY (+ (vt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, rt0 FULL OUTER JOIN vt0 ON vt0.c0 COLLATE RTRIM WHERE (-1.088340306E9) ORDER BY (+ (vt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((-1.088340306E9) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN vt0 ON vt0.c0 COLLATE RTRIM ORDER BY (+ (vt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, rt0 FULL OUTER JOIN vt0 ON vt0.c0 COLLATE RTRIM WHERE (-1.088340306E9) ORDER BY (+ (vt0.c1)) COLLATE RTRIM;
SELECT * FROM vt0, rt0, vt1, t0 WHERE (((UPPER(vt1.c0))IS(((rt0.c2)>=(t0.c33)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt1.c0))IS(((rt0.c2)>=(t0.c33))))) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT * FROM vt0, rt0, vt1, t0 WHERE (((UPPER(vt1.c0))IS(((rt0.c2)>=(t0.c33)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt1.c0))IS(((rt0.c2)>=(t0.c33))))) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT * FROM vt0, rt0, vt1, t0 WHERE (((UPPER(vt1.c0))IS(((rt0.c2)>=(t0.c33)))));
SELECT ALL * FROM rt0, vt0 NATURAL JOIN t0 WHERE ((((rt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((((rt0.c2)OR(rt0.c0)))AND('-1960129203')), (~ (vt0.c0)), MAX(t0.c33, t0.c3, t0.c3, rt0.c2))) AND (((- (rt0.c1)), ((((((((((((x'')OR(rt0.c1)))OR(rt0.c2)))AND(t0.c33)))AND('')))OR(t0.c33)))OR(rt0.c2)), CAST(vt0.c0 AS INTEGER))))) ORDER BY (((- (t0.c33)))<=(((rt0.c1)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((((rt0.c2)OR(rt0.c0)))AND('-1960129203')), (~ (vt0.c0)), MAX(t0.c33, t0.c3, t0.c3, rt0.c2))) AND (((- (rt0.c1)), ((((((((((((x'')OR(rt0.c1)))OR(rt0.c2)))AND(t0.c33)))AND('')))OR(t0.c33)))OR(rt0.c2)), CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0 ORDER BY (((- (t0.c33)))<=(((rt0.c1)<<(vt0.c0)))));
SELECT ALL * FROM rt0, vt0 NATURAL JOIN t0 WHERE ((((rt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((((rt0.c2)OR(rt0.c0)))AND('-1960129203')), (~ (vt0.c0)), MAX(t0.c33, t0.c3, t0.c3, rt0.c2))) AND (((- (rt0.c1)), ((((((((((((x'')OR(rt0.c1)))OR(rt0.c2)))AND(t0.c33)))AND('')))OR(t0.c33)))OR(rt0.c2)), CAST(vt0.c0 AS INTEGER))))) ORDER BY (((- (t0.c33)))<=(((rt0.c1)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((((rt0.c2)OR(rt0.c0)))AND('-1960129203')), (~ (vt0.c0)), MAX(t0.c33, t0.c3, t0.c3, rt0.c2))) AND (((- (rt0.c1)), ((((((((((((x'')OR(rt0.c1)))OR(rt0.c2)))AND(t0.c33)))AND('')))OR(t0.c33)))OR(rt0.c2)), CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0 ORDER BY (((- (t0.c33)))<=(((rt0.c1)<<(vt0.c0)))));
SELECT ALL * FROM rt0, vt0 NATURAL JOIN t0 WHERE ((((rt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((((rt0.c2)OR(rt0.c0)))AND('-1960129203')), (~ (vt0.c0)), MAX(t0.c33, t0.c3, t0.c3, rt0.c2))) AND (((- (rt0.c1)), ((((((((((((x'')OR(rt0.c1)))OR(rt0.c2)))AND(t0.c33)))AND('')))OR(t0.c33)))OR(rt0.c2)), CAST(vt0.c0 AS INTEGER))))) ORDER BY (((- (t0.c33)))<=(((rt0.c1)<<(vt0.c0))));
SELECT * FROM t0, rt0, vt1, vt0 WHERE (t0.c33) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c33) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM t0, rt0, vt1, vt0 WHERE (t0.c33) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c33) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM t0, rt0, vt1, vt0 WHERE (t0.c33) ORDER BY x'' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((((t0.c3))<((t0.c3))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c3))<((t0.c3))) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((((t0.c3))<((t0.c3))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c3))<((t0.c3))) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((((t0.c3))<((t0.c3))) AS BLOB));
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN t0 ON ((((((((((((((t0.c3)AND(rt0.c1)))OR((rt0.c0 IN ()))))OR(((((rt0.c0)AND(vt0.c0)))AND(t0.c3)))))AND(((((vt0.c1)OR(vt0.c1)))AND(t0.c3)))))AND(CASE WHEN t0.c33 THEN t0.c33 WHEN t0.c3 THEN rt0.c1 WHEN rt0.c1 THEN t0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c1 END)))AND(((rt0.c1)||(rt0.c0)))))OR((vt0.c1 IN ()))) WHERE (((((t0.c33)>>('0.2819633122432681')))<=((((vt0.c1))<=((t0.c33))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c33)>>('0.2819633122432681')))<=((((vt0.c1))<=((t0.c33)))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON ((((((((((((((t0.c3)AND(rt0.c1)))OR((rt0.c0 IN ()))))OR(((((rt0.c0)AND(vt0.c0)))AND(t0.c3)))))AND(((((vt0.c1)OR(vt0.c1)))AND(t0.c3)))))AND(CASE WHEN t0.c33 THEN t0.c33 WHEN t0.c3 THEN rt0.c1 WHEN rt0.c1 THEN t0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c1 END)))AND(((rt0.c1)||(rt0.c0)))))OR((vt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN t0 ON ((((((((((((((t0.c3)AND(rt0.c1)))OR((rt0.c0 IN ()))))OR(((((rt0.c0)AND(vt0.c0)))AND(t0.c3)))))AND(((((vt0.c1)OR(vt0.c1)))AND(t0.c3)))))AND(CASE WHEN t0.c33 THEN t0.c33 WHEN t0.c3 THEN rt0.c1 WHEN rt0.c1 THEN t0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c1 END)))AND(((rt0.c1)||(rt0.c0)))))OR((vt0.c1 IN ()))) WHERE (((((t0.c33)>>('0.2819633122432681')))<=((((vt0.c1))<=((t0.c33))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c33)>>('0.2819633122432681')))<=((((vt0.c1))<=((t0.c33)))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON ((((((((((((((t0.c3)AND(rt0.c1)))OR((rt0.c0 IN ()))))OR(((((rt0.c0)AND(vt0.c0)))AND(t0.c3)))))AND(((((vt0.c1)OR(vt0.c1)))AND(t0.c3)))))AND(CASE WHEN t0.c33 THEN t0.c33 WHEN t0.c3 THEN rt0.c1 WHEN rt0.c1 THEN t0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c1 END)))AND(((rt0.c1)||(rt0.c0)))))OR((vt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN t0 ON ((((((((((((((t0.c3)AND(rt0.c1)))OR((rt0.c0 IN ()))))OR(((((rt0.c0)AND(vt0.c0)))AND(t0.c3)))))AND(((((vt0.c1)OR(vt0.c1)))AND(t0.c3)))))AND(CASE WHEN t0.c33 THEN t0.c33 WHEN t0.c3 THEN rt0.c1 WHEN rt0.c1 THEN t0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c1 END)))AND(((rt0.c1)||(rt0.c0)))))OR((vt0.c1 IN ()))) WHERE (((((t0.c33)>>('0.2819633122432681')))<=((((vt0.c1))<=((t0.c33))))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON t0.c33 WHERE (((((CASE WHEN t0.c33 THEN vt1.c0 ELSE NULL END)AND(CASE t0.c33  WHEN t0.c3 THEN t0.c33 ELSE vt1.c0 END)))AND(((t0.c3)<=(t0.c3))))) ORDER BY ((CASE WHEN t0.c3 THEN t0.c33 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)OR(CASE WHEN vt1.c0 THEN t0.c33 END))  NULLS FIRST, ((((vt1.c0)LIKE(vt1.c0))) BETWEEN (((t0.c3) NOT BETWEEN (vt1.c0) AND (t0.c3))) AND (t0.c33 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t0.c33 THEN vt1.c0 ELSE NULL END)AND(CASE t0.c33  WHEN t0.c3 THEN t0.c33 ELSE vt1.c0 END)))AND(((t0.c3)<=(t0.c3))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON t0.c33 ORDER BY ((CASE WHEN t0.c3 THEN t0.c33 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)OR(CASE WHEN vt1.c0 THEN t0.c33 END))  NULLS FIRST, ((((vt1.c0)LIKE(vt1.c0))) BETWEEN (((t0.c3) NOT BETWEEN (vt1.c0) AND (t0.c3))) AND (t0.c33 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON t0.c33 WHERE (((((CASE WHEN t0.c33 THEN vt1.c0 ELSE NULL END)AND(CASE t0.c33  WHEN t0.c3 THEN t0.c33 ELSE vt1.c0 END)))AND(((t0.c3)<=(t0.c3))))) ORDER BY ((CASE WHEN t0.c3 THEN t0.c33 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)OR(CASE WHEN vt1.c0 THEN t0.c33 END))  NULLS FIRST, ((((vt1.c0)LIKE(vt1.c0))) BETWEEN (((t0.c3) NOT BETWEEN (vt1.c0) AND (t0.c3))) AND (t0.c33 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t0.c33 THEN vt1.c0 ELSE NULL END)AND(CASE t0.c33  WHEN t0.c3 THEN t0.c33 ELSE vt1.c0 END)))AND(((t0.c3)<=(t0.c3))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON t0.c33 ORDER BY ((CASE WHEN t0.c3 THEN t0.c33 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)OR(CASE WHEN vt1.c0 THEN t0.c33 END))  NULLS FIRST, ((((vt1.c0)LIKE(vt1.c0))) BETWEEN (((t0.c3) NOT BETWEEN (vt1.c0) AND (t0.c3))) AND (t0.c33 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON t0.c33 WHERE (((((CASE WHEN t0.c33 THEN vt1.c0 ELSE NULL END)AND(CASE t0.c33  WHEN t0.c3 THEN t0.c33 ELSE vt1.c0 END)))AND(((t0.c3)<=(t0.c3))))) ORDER BY ((CASE WHEN t0.c3 THEN t0.c33 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)OR(CASE WHEN vt1.c0 THEN t0.c33 END))  NULLS FIRST, ((((vt1.c0)LIKE(vt1.c0))) BETWEEN (((t0.c3) NOT BETWEEN (vt1.c0) AND (t0.c3))) AND (t0.c33 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (((CASE t0.c3  WHEN t0.c3 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN (((rt0.c2)|(rt0.c0))) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c3  WHEN t0.c3 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN (((rt0.c2)|(rt0.c0))) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((CASE t0.c3  WHEN t0.c3 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN (((rt0.c2)|(rt0.c0))) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c3  WHEN t0.c3 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN (((rt0.c2)|(rt0.c0))) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((CASE t0.c3  WHEN t0.c3 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN (((rt0.c2)|(rt0.c0))) AND (rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST((+ (rt0.c2)) AS TEXT)) ORDER BY CASE WHEN t0.c33 THEN ((t0.c33)IS NOT(t0.c3)) WHEN ((rt0.c2)!=(t0.c33)) THEN CASE t0.c3  WHEN rt0.c1 THEN t0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c33 THEN t0.c33 END WHEN ((t0.c33) IS TRUE) THEN (rt0.c2 IN ()) END ASC  NULLS FIRST, rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN t0.c33 THEN ((t0.c33)IS NOT(t0.c3)) WHEN ((rt0.c2)!=(t0.c33)) THEN CASE t0.c3  WHEN rt0.c1 THEN t0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c33 THEN t0.c33 END WHEN ((t0.c33) IS TRUE) THEN (rt0.c2 IN ()) END ASC  NULLS FIRST, rt0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST((+ (rt0.c2)) AS TEXT)) ORDER BY CASE WHEN t0.c33 THEN ((t0.c33)IS NOT(t0.c3)) WHEN ((rt0.c2)!=(t0.c33)) THEN CASE t0.c3  WHEN rt0.c1 THEN t0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c33 THEN t0.c33 END WHEN ((t0.c33) IS TRUE) THEN (rt0.c2 IN ()) END ASC  NULLS FIRST, rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN t0.c33 THEN ((t0.c33)IS NOT(t0.c3)) WHEN ((rt0.c2)!=(t0.c33)) THEN CASE t0.c3  WHEN rt0.c1 THEN t0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c33 THEN t0.c33 END WHEN ((t0.c33) IS TRUE) THEN (rt0.c2 IN ()) END ASC  NULLS FIRST, rt0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST((+ (rt0.c2)) AS TEXT)) ORDER BY CASE WHEN t0.c33 THEN ((t0.c33)IS NOT(t0.c3)) WHEN ((rt0.c2)!=(t0.c33)) THEN CASE t0.c3  WHEN rt0.c1 THEN t0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c33 THEN t0.c33 END WHEN ((t0.c33) IS TRUE) THEN (rt0.c2 IN ()) END ASC  NULLS FIRST, rt0.c1 ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE t0.c3  WHEN t0.c33 THEN t0.c33 END)) AND ((vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((CASE t0.c3  WHEN t0.c33 THEN t0.c33 END)) AND ((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE t0.c3  WHEN t0.c33 THEN t0.c33 END)) AND ((vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((CASE t0.c3  WHEN t0.c33 THEN t0.c33 END)) AND ((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE t0.c3  WHEN t0.c33 THEN t0.c33 END)) AND ((vt1.c0 COLLATE RTRIM))));
SELECT * FROM t0 WHERE (t0.c33);
SELECT SUM(count) FROM (SELECT ((t0.c33) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c33);
SELECT SUM(count) FROM (SELECT ((t0.c33) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c33);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0xfffffffff7e87a96)))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (((vt1.c0) ISNULL)))) ORDER BY 0.8772652559597864, (((NOT (NULL)))IS NOT(((vt1.c0)>=(vt1.c0)))) DESC  NULLS LAST, (((vt1.c0) IS FALSE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0Xfffffffff7e87a96)))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY 0.8772652559597864, (((NOT (NULL)))IS NOT(((vt1.c0)>=(vt1.c0)))) DESC  NULLS LAST, (((vt1.c0) IS FALSE) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0xfffffffff7e87a96)))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (((vt1.c0) ISNULL)))) ORDER BY 0.8772652559597864, (((NOT (NULL)))IS NOT(((vt1.c0)>=(vt1.c0)))) DESC  NULLS LAST, (((vt1.c0) IS FALSE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0Xfffffffff7e87a96)))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY 0.8772652559597864, (((NOT (NULL)))IS NOT(((vt1.c0)>=(vt1.c0)))) DESC  NULLS LAST, (((vt1.c0) IS FALSE) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0xfffffffff7e87a96)))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (((vt1.c0) ISNULL)))) ORDER BY 0.8772652559597864, (((NOT (NULL)))IS NOT(((vt1.c0)>=(vt1.c0)))) DESC  NULLS LAST, (((vt1.c0) IS FALSE) IN ())  NULLS FIRST;
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE NOCASE)) WHERE (CAST(rt0.c1 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE NOCASE)) WHERE (CAST(rt0.c1 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE NOCASE)) WHERE (CAST(rt0.c1 AS TEXT) COLLATE NOCASE);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c2)/(vt0.c1)) INNER JOIN vt0 ON x'' WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c2)/(vt0.c1)) INNER JOIN vt0 ON x'');
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c2)/(vt0.c1)) INNER JOIN vt0 ON x'' WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c2)/(vt0.c1)) INNER JOIN vt0 ON x'');
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (t0.c3) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY rt0.c0);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (t0.c3) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY rt0.c0);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (t0.c3) ORDER BY rt0.c0;
SELECT ALL * FROM vt1, rt0 WHERE ('0.0');
SELECT SUM(count) FROM (SELECT (('0.0') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ('0.0');
SELECT SUM(count) FROM (SELECT (('0.0') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ('0.0');
SELECT ALL * FROM vt0, t0, vt1 INDEXED BY i81, rt0 WHERE (LIKELY(((vt0.c0)OR(rt0.c0)))) ORDER BY (((vt0.c0, rt0.c0, vt0.c1)) BETWEEN ((rt0.c2, NULL, t0.c33)) AND ((t0.c3, rt0.c0, t0.c33))) COLLATE NOCASE, 0.4093047005592473  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c0)OR(rt0.c0)))) IS TRUE)  as count FROM vt0, t0, vt1 INDEXED BY i81, rt0 ORDER BY (((vt0.c0, rt0.c0, vt0.c1)) BETWEEN ((rt0.c2, NULL, t0.c33)) AND ((t0.c3, rt0.c0, t0.c33))) COLLATE NOCASE, 0.4093047005592473  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1 INDEXED BY i81, rt0 WHERE (LIKELY(((vt0.c0)OR(rt0.c0)))) ORDER BY (((vt0.c0, rt0.c0, vt0.c1)) BETWEEN ((rt0.c2, NULL, t0.c33)) AND ((t0.c3, rt0.c0, t0.c33))) COLLATE NOCASE, 0.4093047005592473  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c0)OR(rt0.c0)))) IS TRUE)  as count FROM vt0, t0, vt1 INDEXED BY i81, rt0 ORDER BY (((vt0.c0, rt0.c0, vt0.c1)) BETWEEN ((rt0.c2, NULL, t0.c33)) AND ((t0.c3, rt0.c0, t0.c33))) COLLATE NOCASE, 0.4093047005592473  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (t0.c33 IN ()) THEN json_array_length(t0.c3, 0Xffffffffde2545ce) ELSE CASE WHEN '-375124215' THEN t0.c33 ELSE t0.c33 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c33 IN ()) THEN json_array_length(t0.c3, 0xffffffffde2545ce) ELSE CASE WHEN '-375124215' THEN t0.c33 ELSE t0.c33 END END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (t0.c33 IN ()) THEN json_array_length(t0.c3, 0Xffffffffde2545ce) ELSE CASE WHEN '-375124215' THEN t0.c33 ELSE t0.c33 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c33 IN ()) THEN json_array_length(t0.c3, 0xffffffffde2545ce) ELSE CASE WHEN '-375124215' THEN t0.c33 ELSE t0.c33 END END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (t0.c33 IN ()) THEN json_array_length(t0.c3, 0Xffffffffde2545ce) ELSE CASE WHEN '-375124215' THEN t0.c33 ELSE t0.c33 END END);
SELECT * FROM rt0 WHERE ((((- (rt0.c0)))<<(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))<<(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((- (rt0.c0)))<<(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))<<(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((- (rt0.c0)))<<(((rt0.c0) IS FALSE))));
SELECT * FROM vt1 WHERE ((UNLIKELY(vt1.c0) IN (0Xffffffffa138e5b1)));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(vt1.c0) IN (0Xffffffffa138e5b1))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((UNLIKELY(vt1.c0) IN (0Xffffffffa138e5b1)));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(vt1.c0) IN (0Xffffffffa138e5b1))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((UNLIKELY(vt1.c0) IN (0Xffffffffa138e5b1)));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON '1481525743' WHERE (-1281716632) ORDER BY CAST(((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c3)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1281716632) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON '1481525743' ORDER BY CAST(((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c3)) AS REAL) ASC  NULLS FIRST);
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON '1481525743' WHERE (-1281716632) ORDER BY CAST(((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c3)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1281716632) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON '1481525743' ORDER BY CAST(((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c3)) AS REAL) ASC  NULLS FIRST);
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON '1481525743' WHERE (-1281716632) ORDER BY CAST(((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c3)) AS REAL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.9411550451970975)<(rt0.c2)) COLLATE RTRIM) ORDER BY UPPER(DISTINCT ((rt0.c1)/(rt0.c2))) DESC, rt0.c1, ((rt0.c0) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.9411550451970975)<(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY UPPER(DISTINCT ((rt0.c1)/(rt0.c2))) DESC, rt0.c1, ((rt0.c0) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.9411550451970975)<(rt0.c2)) COLLATE RTRIM) ORDER BY UPPER(DISTINCT ((rt0.c1)/(rt0.c2))) DESC, rt0.c1, ((rt0.c0) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.9411550451970975)<(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY UPPER(DISTINCT ((rt0.c1)/(rt0.c2))) DESC, rt0.c1, ((rt0.c0) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.9411550451970975)<(rt0.c2)) COLLATE RTRIM) ORDER BY UPPER(DISTINCT ((rt0.c1)/(rt0.c2))) DESC, rt0.c1, ((rt0.c0) ISNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)LIKE(t0.c33)) COLLATE BINARY WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)LIKE(t0.c33)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)LIKE(t0.c33)) COLLATE BINARY WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)LIKE(t0.c33)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)LIKE(t0.c33)) COLLATE BINARY WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt1.c0) NOT NULL) COLLATE RTRIM CROSS JOIN vt1 ON x'' WHERE (((((NULL)<=(vt0.c1))) BETWEEN (rt0.c0) AND (((vt0.c0)-(vt0.c1))))) ORDER BY (~ (CAST('1816686752' AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)<=(vt0.c1))) BETWEEN (rt0.c0) AND (((vt0.c0)-(vt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt1.c0) NOT NULL) COLLATE RTRIM CROSS JOIN vt1 ON x'' ORDER BY (~ (CAST('1816686752' AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt1.c0) NOT NULL) COLLATE RTRIM CROSS JOIN vt1 ON x'' WHERE (((((NULL)<=(vt0.c1))) BETWEEN (rt0.c0) AND (((vt0.c0)-(vt0.c1))))) ORDER BY (~ (CAST('1816686752' AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)<=(vt0.c1))) BETWEEN (rt0.c0) AND (((vt0.c0)-(vt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt1.c0) NOT NULL) COLLATE RTRIM CROSS JOIN vt1 ON x'' ORDER BY (~ (CAST('1816686752' AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c1 IN (rt0.c1, rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (rt0.c1, rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c1 IN (rt0.c1, rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (rt0.c1, rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c1 IN (rt0.c1, rt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((((vt1.c0)) BETWEEN ((t0.c3)) AND ((t0.c3))))/((+ (t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((t0.c3)) AND ((t0.c3))))/((+ (t0.c3))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((((vt1.c0)) BETWEEN ((t0.c3)) AND ((t0.c3))))/((+ (t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((t0.c3)) AND ((t0.c3))))/((+ (t0.c3))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((((vt1.c0)) BETWEEN ((t0.c3)) AND ((t0.c3))))/((+ (t0.c3)))));
SELECT ALL * FROM t0, rt0, vt1 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c33)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c33)))) IS TRUE)) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c33)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c33)))) IS TRUE)) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c33)))) IS TRUE));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((CAST(rt0.c1 AS NUMERIC))||(SQLITE_COMPILEOPTION_USED(rt0.c1))) RIGHT OUTER JOIN rt0 ON NULL WHERE (((vt0.c0)&(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((CAST(rt0.c1 AS NUMERIC))||(SQLITE_COMPILEOPTION_USED(rt0.c1))) RIGHT OUTER JOIN rt0 ON NULL);
SELECT * FROM vt0 CROSS JOIN vt1 ON ((CAST(rt0.c1 AS NUMERIC))||(SQLITE_COMPILEOPTION_USED(rt0.c1))) RIGHT OUTER JOIN rt0 ON NULL WHERE (((vt0.c0)&(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((CAST(rt0.c1 AS NUMERIC))||(SQLITE_COMPILEOPTION_USED(rt0.c1))) RIGHT OUTER JOIN rt0 ON NULL);
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE (rt0.c0);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON SQLITE_SOURCE_ID() WHERE ((NOT (CASE NULL  WHEN t0.c3 THEN t0.c33 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE NULL  WHEN t0.c3 THEN t0.c33 END))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON SQLITE_SOURCE_ID());
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON SQLITE_SOURCE_ID() WHERE ((NOT (CASE NULL  WHEN t0.c3 THEN t0.c33 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE NULL  WHEN t0.c3 THEN t0.c33 END))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON SQLITE_SOURCE_ID());
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON SQLITE_SOURCE_ID() WHERE ((NOT (CASE NULL  WHEN t0.c3 THEN t0.c33 END)));
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (CASE WHEN ((t0.c3) NOT BETWEEN (vt0.c0) AND (t0.c33)) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.6587569887553217) WHEN LIKELIHOOD(DISTINCT t0.c3, 0.297601422521263) THEN (((rt0.c2))>=((t0.c3))) WHEN (((rt0.c0, rt0.c2, vt1.c0))==((rt0.c0, t0.c3, rt0.c1))) THEN IFNULL(rt0.c2, vt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c3) NOT BETWEEN (vt0.c0) AND (t0.c33)) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.6587569887553217) WHEN LIKELIHOOD(DISTINCT t0.c3, 0.297601422521263) THEN (((rt0.c2))>=((t0.c3))) WHEN (((rt0.c0, rt0.c2, vt1.c0))==((rt0.c0, t0.c3, rt0.c1))) THEN IFNULL(rt0.c2, vt0.c1) END) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (CASE WHEN ((t0.c3) NOT BETWEEN (vt0.c0) AND (t0.c33)) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.6587569887553217) WHEN LIKELIHOOD(DISTINCT t0.c3, 0.297601422521263) THEN (((rt0.c2))>=((t0.c3))) WHEN (((rt0.c0, rt0.c2, vt1.c0))==((rt0.c0, t0.c3, rt0.c1))) THEN IFNULL(rt0.c2, vt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c3) NOT BETWEEN (vt0.c0) AND (t0.c33)) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.6587569887553217) WHEN LIKELIHOOD(DISTINCT t0.c3, 0.297601422521263) THEN (((rt0.c2))>=((t0.c3))) WHEN (((rt0.c0, rt0.c2, vt1.c0))==((rt0.c0, t0.c3, rt0.c1))) THEN IFNULL(rt0.c2, vt0.c1) END) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (CASE WHEN ((t0.c3) NOT BETWEEN (vt0.c0) AND (t0.c33)) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.6587569887553217) WHEN LIKELIHOOD(DISTINCT t0.c3, 0.297601422521263) THEN (((rt0.c2))>=((t0.c3))) WHEN (((rt0.c0, rt0.c2, vt1.c0))==((rt0.c0, t0.c3, rt0.c1))) THEN IFNULL(rt0.c2, vt0.c1) END);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN 'Z' THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 END COLLATE RTRIM) ORDER BY ((((vt1.c0)|(rt0.c0)))<(CHANGES()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 'Z' THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c0)|(rt0.c0)))<(CHANGES()))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN 'Z' THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 END COLLATE RTRIM) ORDER BY ((((vt1.c0)|(rt0.c0)))<(CHANGES()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 'Z' THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c0)|(rt0.c0)))<(CHANGES()))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN 'Z' THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 END COLLATE RTRIM) ORDER BY ((((vt1.c0)|(rt0.c0)))<(CHANGES()))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((rt0.c0 COLLATE BINARY)))) ORDER BY 'Q' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 ORDER BY 'Q' ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((rt0.c0 COLLATE BINARY)))) ORDER BY 'Q' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 ORDER BY 'Q' ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((rt0.c0 COLLATE BINARY)))) ORDER BY 'Q' ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY CAST(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY CAST(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY CAST(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT) ASC;
SELECT * FROM t0 CROSS JOIN vt1 ON ((CAST(rt0.c0 AS INTEGER)) IS FALSE) RIGHT OUTER JOIN rt0 ON TRIM(ABS(rt0.c0)) WHERE ((- ((+ (rt0.c0))))) ORDER BY (((((t0.c3, rt0.c2, rt0.c2))>=((vt1.c0, vt1.c0, t0.c3)))) NOT BETWEEN (((t0.c33)GLOB(vt1.c0))) AND ((rt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (rt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((CAST(rt0.c0 AS INTEGER)) IS FALSE) RIGHT OUTER JOIN rt0 ON TRIM(ABS(rt0.c0)) ORDER BY (((((t0.c3, rt0.c2, rt0.c2))>=((vt1.c0, vt1.c0, t0.c3)))) NOT BETWEEN (((t0.c33)GLOB(vt1.c0))) AND ((rt0.c0 IN ()))) DESC);
SELECT * FROM t0 CROSS JOIN vt1 ON ((CAST(rt0.c0 AS INTEGER)) IS FALSE) RIGHT OUTER JOIN rt0 ON TRIM(ABS(rt0.c0)) WHERE ((- ((+ (rt0.c0))))) ORDER BY (((((t0.c3, rt0.c2, rt0.c2))>=((vt1.c0, vt1.c0, t0.c3)))) NOT BETWEEN (((t0.c33)GLOB(vt1.c0))) AND ((rt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (rt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((CAST(rt0.c0 AS INTEGER)) IS FALSE) RIGHT OUTER JOIN rt0 ON TRIM(ABS(rt0.c0)) ORDER BY (((((t0.c3, rt0.c2, rt0.c2))>=((vt1.c0, vt1.c0, t0.c3)))) NOT BETWEEN (((t0.c33)GLOB(vt1.c0))) AND ((rt0.c0 IN ()))) DESC);
SELECT * FROM vt1, vt0 WHERE ((NOT (((vt0.c1)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((NOT (((vt0.c1)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((NOT (((vt0.c1)IS NOT(vt1.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>(vt0.c1)))!=(((vt0.c0) NOT NULL)))) ORDER BY (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>(vt0.c1)))!=(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>(vt0.c1)))!=(((vt0.c0) NOT NULL)))) ORDER BY (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>(vt0.c1)))!=(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>(vt0.c1)))!=(((vt0.c0) NOT NULL)))) ORDER BY (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) IN ());
SELECT ALL * FROM rt0, vt1 WHERE (((((TRIM(DISTINCT rt0.c0, rt0.c2))AND(ABS(DISTINCT rt0.c1))))OR((rt0.c1 IN ())))) ORDER BY DATETIME((NOT (rt0.c2)), CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN '0S.' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 END, x'')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT rt0.c0, rt0.c2))AND(ABS(DISTINCT rt0.c1))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY DATETIME((NOT (rt0.c2)), CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN '0S.' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 END, x'')  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((TRIM(DISTINCT rt0.c0, rt0.c2))AND(ABS(DISTINCT rt0.c1))))OR((rt0.c1 IN ())))) ORDER BY DATETIME((NOT (rt0.c2)), CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN '0S.' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 END, x'')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT rt0.c0, rt0.c2))AND(ABS(DISTINCT rt0.c1))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY DATETIME((NOT (rt0.c2)), CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN '0S.' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 END, x'')  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((TRIM(DISTINCT rt0.c0, rt0.c2))AND(ABS(DISTINCT rt0.c1))))OR((rt0.c1 IN ())))) ORDER BY DATETIME((NOT (rt0.c2)), CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN '0S.' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 END, x'')  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE (((TRIM('-290464852'))/(((((((((rt0.c2)OR(NULL)))AND(rt0.c2)))OR(vt1.c0)))AND(vt1.c0))))) ORDER BY CASE STRFTIME(rt0.c2, rt0.c2, rt0.c0, 0.9930234906491373, rt0.c0)  WHEN rt0.c2 COLLATE NOCASE THEN (((vt1.c0))<=((rt0.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM('-290464852'))/(((((((((rt0.c2)OR(NULL)))AND(rt0.c2)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE STRFTIME(rt0.c2, rt0.c2, rt0.c0, 0.9930234906491373, rt0.c0)  WHEN rt0.c2 COLLATE NOCASE THEN (((vt1.c0))<=((rt0.c0))) END ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((TRIM('-290464852'))/(((((((((rt0.c2)OR(NULL)))AND(rt0.c2)))OR(vt1.c0)))AND(vt1.c0))))) ORDER BY CASE STRFTIME(rt0.c2, rt0.c2, rt0.c0, 0.9930234906491373, rt0.c0)  WHEN rt0.c2 COLLATE NOCASE THEN (((vt1.c0))<=((rt0.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM('-290464852'))/(((((((((rt0.c2)OR(NULL)))AND(rt0.c2)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE STRFTIME(rt0.c2, rt0.c2, rt0.c0, 0.9930234906491373, rt0.c0)  WHEN rt0.c2 COLLATE NOCASE THEN (((vt1.c0))<=((rt0.c0))) END ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((TRIM('-290464852'))/(((((((((rt0.c2)OR(NULL)))AND(rt0.c2)))OR(vt1.c0)))AND(vt1.c0))))) ORDER BY CASE STRFTIME(rt0.c2, rt0.c2, rt0.c0, 0.9930234906491373, rt0.c0)  WHEN rt0.c2 COLLATE NOCASE THEN (((vt1.c0))<=((rt0.c0))) END ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c0) NOT NULL) IN ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT NULL) IN ((- (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c0) NOT NULL) IN ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT NULL) IN ((- (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c0) NOT NULL) IN ((- (rt0.c0)))));
SELECT * FROM rt0, t0, vt0 NOT INDEXED WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 NOT INDEXED WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 NOT INDEXED WHERE (rt0.c2);
SELECT * FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(vt0.c1))) ORDER BY (((((NULL))<=((vt0.c0)))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((((NULL))<=((vt0.c0)))) NOTNULL) DESC);
SELECT * FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(vt0.c1))) ORDER BY (((((NULL))<=((vt0.c0)))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((((NULL))<=((vt0.c0)))) NOTNULL) DESC);
SELECT * FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(vt0.c1))) ORDER BY (((((NULL))<=((vt0.c0)))) NOTNULL) DESC;
SELECT * FROM rt0, vt1, vt0 INNER JOIN t0 ON ((((((rt0.c2)OR(vt1.c0)))OR(NULL)))+(vt1.c0)) WHERE ((((((((((((vt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((t0.c3, vt0.c0, vt0.c1)) AND ((t0.c33, t0.c3, vt1.c0))))AND(TOTAL_CHANGES())))OR(((((((((rt0.c2)AND(vt1.c0)))OR(x'')))OR(t0.c3)))AND(rt0.c2)))))OR(CAST(rt0.c1 AS INTEGER))))AND(((NULL) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((t0.c3, vt0.c0, vt0.c1)) AND ((t0.c33, t0.c3, vt1.c0))))AND(TOTAL_CHANGES())))OR(((((((((rt0.c2)AND(vt1.c0)))OR(x'')))OR(t0.c3)))AND(rt0.c2)))))OR(CAST(rt0.c1 AS INTEGER))))AND(((NULL) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1, vt0 INNER JOIN t0 ON ((((((rt0.c2)OR(vt1.c0)))OR(NULL)))+(vt1.c0)));
SELECT * FROM rt0, vt1, vt0 INNER JOIN t0 ON ((((((rt0.c2)OR(vt1.c0)))OR(NULL)))+(vt1.c0)) WHERE ((((((((((((vt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((t0.c3, vt0.c0, vt0.c1)) AND ((t0.c33, t0.c3, vt1.c0))))AND(TOTAL_CHANGES())))OR(((((((((rt0.c2)AND(vt1.c0)))OR(x'')))OR(t0.c3)))AND(rt0.c2)))))OR(CAST(rt0.c1 AS INTEGER))))AND(((NULL) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((t0.c3, vt0.c0, vt0.c1)) AND ((t0.c33, t0.c3, vt1.c0))))AND(TOTAL_CHANGES())))OR(((((((((rt0.c2)AND(vt1.c0)))OR(x'')))OR(t0.c3)))AND(rt0.c2)))))OR(CAST(rt0.c1 AS INTEGER))))AND(((NULL) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1, vt0 INNER JOIN t0 ON ((((((rt0.c2)OR(vt1.c0)))OR(NULL)))+(vt1.c0)));
SELECT * FROM rt0, vt1, vt0 INNER JOIN t0 ON ((((((rt0.c2)OR(vt1.c0)))OR(NULL)))+(vt1.c0)) WHERE ((((((((((((vt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((t0.c3, vt0.c0, vt0.c1)) AND ((t0.c33, t0.c3, vt1.c0))))AND(TOTAL_CHANGES())))OR(((((((((rt0.c2)AND(vt1.c0)))OR(x'')))OR(t0.c3)))AND(rt0.c2)))))OR(CAST(rt0.c1 AS INTEGER))))AND(((NULL) IS TRUE))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0) NOT BETWEEN (0.5416158797171096) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) NOT BETWEEN (0.5416158797171096) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0) NOT BETWEEN (0.5416158797171096) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) NOT BETWEEN (0.5416158797171096) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0) NOT BETWEEN (0.5416158797171096) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON (((- (t0.c33))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((vt0.c1 IN ()))) INNER JOIN vt0 ON 0x118f08f7 FULL OUTER JOIN vt1 ON ((((rt0.c2) NOT NULL))<=(((((vt0.c1)OR(rt0.c2)))AND(rt0.c0)))) WHERE (((vt0.c0 COLLATE BINARY)<(((t0.c3) NOT BETWEEN (rt0.c1) AND (1393640220)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)<(((t0.c3) NOT BETWEEN (rt0.c1) AND (1393640220))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((- (t0.c33))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((vt0.c1 IN ()))) INNER JOIN vt0 ON 0x118f08f7 FULL OUTER JOIN vt1 ON ((((rt0.c2) NOT NULL))<=(((((vt0.c1)OR(rt0.c2)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON (((- (t0.c33))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((vt0.c1 IN ()))) INNER JOIN vt0 ON 0x118f08f7 FULL OUTER JOIN vt1 ON ((((rt0.c2) NOT NULL))<=(((((vt0.c1)OR(rt0.c2)))AND(rt0.c0)))) WHERE (((vt0.c0 COLLATE BINARY)<(((t0.c3) NOT BETWEEN (rt0.c1) AND (1393640220)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)<(((t0.c3) NOT BETWEEN (rt0.c1) AND (1393640220))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((- (t0.c33))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((vt0.c1 IN ()))) INNER JOIN vt0 ON 0x118f08f7 FULL OUTER JOIN vt1 ON ((((rt0.c2) NOT NULL))<=(((((vt0.c1)OR(rt0.c2)))AND(rt0.c0)))));
SELECT * FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (NOT (vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (vt1.c0)) ASC);
SELECT * FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (NOT (vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (vt1.c0)) ASC);
SELECT * FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (NOT (vt1.c0)) ASC;
SELECT ALL * FROM t0 WHERE (CAST(t0.c3 AS TEXT)) ORDER BY CASE ((((t0.c33)AND(t0.c3)))AND(t0.c3))  WHEN ((t0.c3) BETWEEN (t0.c33) AND ('-1725144480')) THEN t0.c3 COLLATE BINARY WHEN CASE t0.c3  WHEN t0.c33 THEN t0.c3 END THEN CASE WHEN NULL THEN t0.c33 END WHEN t0.c33 THEN ((t0.c33)/(t0.c33)) ELSE CASE WHEN t0.c33 THEN t0.c33 WHEN t0.c33 THEN t0.c33 WHEN t0.c33 THEN t0.c3 END END, ((((((((((t0.c33) IS TRUE))OR(((t0.c3)<(t0.c3)))))AND('>y')))OR((- (t0.c33)))))OR(CASE t0.c33  WHEN t0.c33 THEN t0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c3 AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY CASE ((((t0.c33)AND(t0.c3)))AND(t0.c3))  WHEN ((t0.c3) BETWEEN (t0.c33) AND ('-1725144480')) THEN t0.c3 COLLATE BINARY WHEN CASE t0.c3  WHEN t0.c33 THEN t0.c3 END THEN CASE WHEN NULL THEN t0.c33 END WHEN t0.c33 THEN ((t0.c33)/(t0.c33)) ELSE CASE WHEN t0.c33 THEN t0.c33 WHEN t0.c33 THEN t0.c33 WHEN t0.c33 THEN t0.c3 END END, ((((((((((t0.c33) IS TRUE))OR(((t0.c3)<(t0.c3)))))AND('>y')))OR((- (t0.c33)))))OR(CASE t0.c33  WHEN t0.c33 THEN t0.c3 END)) DESC);
SELECT ALL * FROM t0 WHERE (CAST(t0.c3 AS TEXT)) ORDER BY CASE ((((t0.c33)AND(t0.c3)))AND(t0.c3))  WHEN ((t0.c3) BETWEEN (t0.c33) AND ('-1725144480')) THEN t0.c3 COLLATE BINARY WHEN CASE t0.c3  WHEN t0.c33 THEN t0.c3 END THEN CASE WHEN NULL THEN t0.c33 END WHEN t0.c33 THEN ((t0.c33)/(t0.c33)) ELSE CASE WHEN t0.c33 THEN t0.c33 WHEN t0.c33 THEN t0.c33 WHEN t0.c33 THEN t0.c3 END END, ((((((((((t0.c33) IS TRUE))OR(((t0.c3)<(t0.c3)))))AND('>y')))OR((- (t0.c33)))))OR(CASE t0.c33  WHEN t0.c33 THEN t0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c3 AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY CASE ((((t0.c33)AND(t0.c3)))AND(t0.c3))  WHEN ((t0.c3) BETWEEN (t0.c33) AND ('-1725144480')) THEN t0.c3 COLLATE BINARY WHEN CASE t0.c3  WHEN t0.c33 THEN t0.c3 END THEN CASE WHEN NULL THEN t0.c33 END WHEN t0.c33 THEN ((t0.c33)/(t0.c33)) ELSE CASE WHEN t0.c33 THEN t0.c33 WHEN t0.c33 THEN t0.c33 WHEN t0.c33 THEN t0.c3 END END, ((((((((((t0.c33) IS TRUE))OR(((t0.c3)<(t0.c3)))))AND('>y')))OR((- (t0.c33)))))OR(CASE t0.c33  WHEN t0.c33 THEN t0.c3 END)) DESC);
SELECT ALL * FROM t0 WHERE (CAST(t0.c3 AS TEXT)) ORDER BY CASE ((((t0.c33)AND(t0.c3)))AND(t0.c3))  WHEN ((t0.c3) BETWEEN (t0.c33) AND ('-1725144480')) THEN t0.c3 COLLATE BINARY WHEN CASE t0.c3  WHEN t0.c33 THEN t0.c3 END THEN CASE WHEN NULL THEN t0.c33 END WHEN t0.c33 THEN ((t0.c33)/(t0.c33)) ELSE CASE WHEN t0.c33 THEN t0.c33 WHEN t0.c33 THEN t0.c33 WHEN t0.c33 THEN t0.c3 END END, ((((((((((t0.c33) IS TRUE))OR(((t0.c3)<(t0.c3)))))AND('>y')))OR((- (t0.c33)))))OR(CASE t0.c33  WHEN t0.c33 THEN t0.c3 END)) DESC;
SELECT ALL * FROM t0 WHERE (((t0.c33)LIKE(t0.c3)) COLLATE BINARY) ORDER BY (+ (((t0.c33)<(t0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c33)LIKE(t0.c3)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c33)<(t0.c3))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((t0.c33)LIKE(t0.c3)) COLLATE BINARY) ORDER BY (+ (((t0.c33)<(t0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c33)LIKE(t0.c3)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c33)<(t0.c3))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((t0.c33)LIKE(t0.c3)) COLLATE BINARY) ORDER BY (+ (((t0.c33)<(t0.c3))))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (NULL COLLATE RTRIM) ORDER BY (((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY (((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (NULL COLLATE RTRIM) ORDER BY (((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY (((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (NULL COLLATE RTRIM) ORDER BY (((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)) IN ()) ASC;
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((CAST('[]PJV5W^D' AS BLOB)))<=(((vt0.c1 IN ())))) INNER JOIN t0 ON rt0.c1 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (0x5e2720f))) ISNULL)) ORDER BY ((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (vt0.c0) AND (((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))) DESC, ((((CASE t0.c33  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0.971478140832779 END)AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (0x5e2720f))) ISNULL)) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((CAST('[]PJV5W^D' AS BLOB)))<=(((vt0.c1 IN ())))) INNER JOIN t0 ON rt0.c1 ORDER BY ((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (vt0.c0) AND (((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))) DESC, ((((CASE t0.c33  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0.971478140832779 END)AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((CAST('[]PJV5W^D' AS BLOB)))<=(((vt0.c1 IN ())))) INNER JOIN t0 ON rt0.c1 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (0x5e2720f))) ISNULL)) ORDER BY ((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (vt0.c0) AND (((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))) DESC, ((((CASE t0.c33  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0.971478140832779 END)AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (0x5e2720f))) ISNULL)) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((CAST('[]PJV5W^D' AS BLOB)))<=(((vt0.c1 IN ())))) INNER JOIN t0 ON rt0.c1 ORDER BY ((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (vt0.c0) AND (((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))) DESC, ((((CASE t0.c33  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0.971478140832779 END)AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((CAST('[]PJV5W^D' AS BLOB)))<=(((vt0.c1 IN ())))) INNER JOIN t0 ON rt0.c1 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (0x5e2720f))) ISNULL)) ORDER BY ((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (vt0.c0) AND (((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))) DESC, ((((CASE t0.c33  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0.971478140832779 END)AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((rt0.c0) ISNULL)));
SELECT * FROM vt0, t0, rt0 WHERE (CAST(0Xffffffffaffeeeef AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0xffffffffaffeeeef AS REAL)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (CAST(0Xffffffffaffeeeef AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0xffffffffaffeeeef AS REAL)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (CAST(0Xffffffffaffeeeef AS REAL));
SELECT * FROM t0 CROSS JOIN rt0 ON ((json_extract(rt0.c2, rt0.c0))>>(((t0.c33) NOT BETWEEN (t0.c3) AND (t0.c3)))) INNER JOIN vt0 ON (CASE WHEN rt0.c0 THEN rt0.c1 ELSE t0.c3 END IN ()) WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END END) ORDER BY -1767537576 DESC, (NULL IN ()), (~ (((vt0.c1) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT NULL) THEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END END) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((json_extract(rt0.c2, rt0.c0))>>(((t0.c33) NOT BETWEEN (t0.c3) AND (t0.c3)))) INNER JOIN vt0 ON (CASE WHEN rt0.c0 THEN rt0.c1 ELSE t0.c3 END IN ()) ORDER BY -1767537576 DESC, (NULL IN ()), (~ (((vt0.c1) IS FALSE))) DESC  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN rt0 ON ((json_extract(rt0.c2, rt0.c0))>>(((t0.c33) NOT BETWEEN (t0.c3) AND (t0.c3)))) INNER JOIN vt0 ON (CASE WHEN rt0.c0 THEN rt0.c1 ELSE t0.c3 END IN ()) WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END END) ORDER BY -1767537576 DESC, (NULL IN ()), (~ (((vt0.c1) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT NULL) THEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END END) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((json_extract(rt0.c2, rt0.c0))>>(((t0.c33) NOT BETWEEN (t0.c3) AND (t0.c3)))) INNER JOIN vt0 ON (CASE WHEN rt0.c0 THEN rt0.c1 ELSE t0.c3 END IN ()) ORDER BY -1767537576 DESC, (NULL IN ()), (~ (((vt0.c1) IS FALSE))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((('p*' COLLATE NOCASE)<(vt1.c0 COLLATE BINARY))) ORDER BY '' ASC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((('p*' COLLATE NOCASE)<(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY '' ASC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND((vt1.c0 IN ()))));
SELECT * FROM vt1 WHERE ((('p*' COLLATE NOCASE)<(vt1.c0 COLLATE BINARY))) ORDER BY '' ASC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((('p*' COLLATE NOCASE)<(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY '' ASC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND((vt1.c0 IN ()))));
SELECT * FROM rt0, vt1 WHERE (((((rt0.c2)%(vt1.c0))) NOTNULL)) ORDER BY CASE '1V-X|TV_'  WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))) THEN ((((rt0.c2)AND(rt0.c1)))AND(0.47293395214962974)) ELSE CAST(rt0.c1 AS TEXT) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)%(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE '1V-X|TV_'  WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))) THEN ((((rt0.c2)AND(rt0.c1)))AND(0.47293395214962974)) ELSE CAST(rt0.c1 AS TEXT) END DESC);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c2)%(vt1.c0))) NOTNULL)) ORDER BY CASE '1V-X|TV_'  WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))) THEN ((((rt0.c2)AND(rt0.c1)))AND(0.47293395214962974)) ELSE CAST(rt0.c1 AS TEXT) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)%(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE '1V-X|TV_'  WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))) THEN ((((rt0.c2)AND(rt0.c1)))AND(0.47293395214962974)) ELSE CAST(rt0.c1 AS TEXT) END DESC);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c2)%(vt1.c0))) NOTNULL)) ORDER BY CASE '1V-X|TV_'  WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))) THEN ((((rt0.c2)AND(rt0.c1)))AND(0.47293395214962974)) ELSE CAST(rt0.c1 AS TEXT) END DESC;
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ((((NULL))>((((rt0.c0) BETWEEN (rt0.c2) AND ('535785101'))))));
SELECT SUM(count) FROM (SELECT (((((NULL))>((((rt0.c0) BETWEEN (rt0.c2) AND ('535785101')))))) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ((((NULL))>((((rt0.c0) BETWEEN (rt0.c2) AND ('535785101'))))));
SELECT SUM(count) FROM (SELECT (((((NULL))>((((rt0.c0) BETWEEN (rt0.c2) AND ('535785101')))))) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ((((NULL))>((((rt0.c0) BETWEEN (rt0.c2) AND ('535785101'))))));
SELECT * FROM t0, rt0 WHERE (rt0.c1) ORDER BY CAST((rt0.c1 IN (rt0.c2)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST((rt0.c1 IN (rt0.c2)) AS NUMERIC)  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (rt0.c1) ORDER BY CAST((rt0.c1 IN (rt0.c2)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST((rt0.c1 IN (rt0.c2)) AS NUMERIC)  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (rt0.c1) ORDER BY CAST((rt0.c1 IN (rt0.c2)) AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (rt0.c0) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS NUMERIC) ASC  NULLS LAST, ((vt1.c0) BETWEEN (((((rt0.c0)AND(rt0.c0)))AND(0.02943331588481568))) AND (COALESCE(DISTINCT rt0.c2, 0.6462188383282942))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS NUMERIC) ASC  NULLS LAST, ((vt1.c0) BETWEEN (((((rt0.c0)AND(rt0.c0)))AND(0.02943331588481568))) AND (COALESCE(DISTINCT rt0.c2, 0.6462188383282942))) ASC);
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (rt0.c0) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS NUMERIC) ASC  NULLS LAST, ((vt1.c0) BETWEEN (((((rt0.c0)AND(rt0.c0)))AND(0.02943331588481568))) AND (COALESCE(DISTINCT rt0.c2, 0.6462188383282942))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS NUMERIC) ASC  NULLS LAST, ((vt1.c0) BETWEEN (((((rt0.c0)AND(rt0.c0)))AND(0.02943331588481568))) AND (COALESCE(DISTINCT rt0.c2, 0.6462188383282942))) ASC);
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (rt0.c0) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS NUMERIC) ASC  NULLS LAST, ((vt1.c0) BETWEEN (((((rt0.c0)AND(rt0.c0)))AND(0.02943331588481568))) AND (COALESCE(DISTINCT rt0.c2, 0.6462188383282942))) ASC;
SELECT * FROM vt0 INDEXED BY i91, rt0, vt1, t0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0 INDEXED BY i91, rt0, vt1, t0);
SELECT * FROM vt0 INDEXED BY i91, rt0, vt1, t0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0 INDEXED BY i91, rt0, vt1, t0);
SELECT * FROM t0, rt0 WHERE (((t0.c33)GLOB(t0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c33)GLOB(t0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((t0.c33)GLOB(t0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c33)GLOB(t0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((t0.c33)GLOB(t0.c3)) COLLATE RTRIM);
SELECT ALL * FROM t0 INDEXED BY i81 WHERE (CAST(((((t0.c3)AND(t0.c3)))AND(t0.c33)) AS BLOB)) ORDER BY (((t0.c33)) BETWEEN (((~ (t0.c33)))) AND (((t0.c3 IN ())))), (CASE WHEN t0.c33 THEN t0.c33 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c3)AND(t0.c3)))AND(t0.c33)) AS BLOB)) IS TRUE)  as count FROM t0 INDEXED BY i81 ORDER BY (((t0.c33)) BETWEEN (((~ (t0.c33)))) AND (((t0.c3 IN ())))), (CASE WHEN t0.c33 THEN t0.c33 END IN ())  NULLS FIRST);
SELECT ALL * FROM t0 INDEXED BY i81 WHERE (CAST(((((t0.c3)AND(t0.c3)))AND(t0.c33)) AS BLOB)) ORDER BY (((t0.c33)) BETWEEN (((~ (t0.c33)))) AND (((t0.c3 IN ())))), (CASE WHEN t0.c33 THEN t0.c33 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c3)AND(t0.c3)))AND(t0.c33)) AS BLOB)) IS TRUE)  as count FROM t0 INDEXED BY i81 ORDER BY (((t0.c33)) BETWEEN (((~ (t0.c33)))) AND (((t0.c3 IN ())))), (CASE WHEN t0.c33 THEN t0.c33 END IN ())  NULLS FIRST);
SELECT ALL * FROM t0 INDEXED BY i81 WHERE (CAST(((((t0.c3)AND(t0.c3)))AND(t0.c33)) AS BLOB)) ORDER BY (((t0.c33)) BETWEEN (((~ (t0.c33)))) AND (((t0.c3 IN ())))), (CASE WHEN t0.c33 THEN t0.c33 END IN ())  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c2);
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE (vt0.c1) ORDER BY (((vt0.c1))>=((t0.c33))) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (((vt0.c1))>=((t0.c33))) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE (vt0.c1) ORDER BY (((vt0.c1))>=((t0.c33))) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (((vt0.c1))>=((t0.c33))) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE (vt0.c1) ORDER BY (((vt0.c1))>=((t0.c33))) COLLATE BINARY DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)LIKE((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)LIKE((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)LIKE((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)LIKE((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)LIKE((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM rt0, vt1, t0 NOT INDEXED WHERE ((((NOT (rt0.c1)))<=(((t0.c33) IS FALSE)))) ORDER BY ((json_array(rt0.c0, vt1.c0)) BETWEEN (((rt0.c0)-(t0.c3))) AND (rt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1)))<=(((t0.c33) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((json_array(rt0.c0, vt1.c0)) BETWEEN (((rt0.c0)-(t0.c3))) AND (rt0.c2 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM rt0, vt1, t0 NOT INDEXED WHERE ((((NOT (rt0.c1)))<=(((t0.c33) IS FALSE)))) ORDER BY ((json_array(rt0.c0, vt1.c0)) BETWEEN (((rt0.c0)-(t0.c3))) AND (rt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1)))<=(((t0.c33) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((json_array(rt0.c0, vt1.c0)) BETWEEN (((rt0.c0)-(t0.c3))) AND (rt0.c2 COLLATE NOCASE)) DESC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (((((t0.c33)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) IS TRUE) WHERE (((((((t0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))!=((UNICODE(t0.c33))))) ORDER BY ((((((rt0.c1)IS(t0.c3)))OR(((rt0.c0)*(rt0.c2)))))OR((((x'', rt0.c2, t0.c3))!=((rt0.c2, rt0.c1, rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))<>((UNICODE(t0.c33))))) IS TRUE)  as count FROM t0 NOT INDEXED RIGHT OUTER JOIN rt0 ON (((((t0.c33)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) IS TRUE) ORDER BY ((((((rt0.c1)IS(t0.c3)))OR(((rt0.c0)*(rt0.c2)))))OR((((x'', rt0.c2, t0.c3))!=((rt0.c2, rt0.c1, rt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (((((t0.c33)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) IS TRUE) WHERE (((((((t0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))!=((UNICODE(t0.c33))))) ORDER BY ((((((rt0.c1)IS(t0.c3)))OR(((rt0.c0)*(rt0.c2)))))OR((((x'', rt0.c2, t0.c3))!=((rt0.c2, rt0.c1, rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))<>((UNICODE(t0.c33))))) IS TRUE)  as count FROM t0 NOT INDEXED RIGHT OUTER JOIN rt0 ON (((((t0.c33)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) IS TRUE) ORDER BY ((((((rt0.c1)IS(t0.c3)))OR(((rt0.c0)*(rt0.c2)))))OR((((x'', rt0.c2, t0.c3))!=((rt0.c2, rt0.c1, rt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (((((t0.c33)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) IS TRUE) WHERE (((((((t0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))!=((UNICODE(t0.c33))))) ORDER BY ((((((rt0.c1)IS(t0.c3)))OR(((rt0.c0)*(rt0.c2)))))OR((((x'', rt0.c2, t0.c3))!=((rt0.c2, rt0.c1, rt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (0.5038837989520234) ORDER BY ((((((((x'')OR(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR((((vt0.c1, x'', vt0.c0, vt0.c0, 0xfffffffffc0d8560))>=((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))))))AND((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.5038837989520234) IS TRUE)  as count FROM vt0 ORDER BY ((((((((x'')OR(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR((((vt0.c1, x'', vt0.c0, vt0.c0, 0Xfffffffffc0d8560))>=((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))))))AND((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (0.5038837989520234) ORDER BY ((((((((x'')OR(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR((((vt0.c1, x'', vt0.c0, vt0.c0, 0xfffffffffc0d8560))>=((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))))))AND((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.5038837989520234) IS TRUE)  as count FROM vt0 ORDER BY ((((((((x'')OR(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR((((vt0.c1, x'', vt0.c0, vt0.c0, 0Xfffffffffc0d8560))>=((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))))))AND((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (0.5038837989520234) ORDER BY ((((((((x'')OR(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR((((vt0.c1, x'', vt0.c0, vt0.c0, 0xfffffffffc0d8560))>=((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))))))AND((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ())) ORDER BY (((vt0.c0, ((vt0.c0) NOT NULL), CAST(vt0.c1 AS INTEGER)))==(((vt0.c1 IN ()), vt0.c0, vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)|(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, ((vt0.c0) NOT NULL), CAST(vt0.c1 AS INTEGER)))=(((vt0.c1 IN ()), vt0.c0, vt0.c1))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ())) ORDER BY (((vt0.c0, ((vt0.c0) NOT NULL), CAST(vt0.c1 AS INTEGER)))==(((vt0.c1 IN ()), vt0.c0, vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)|(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, ((vt0.c0) NOT NULL), CAST(vt0.c1 AS INTEGER)))=(((vt0.c1 IN ()), vt0.c0, vt0.c1))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ())) ORDER BY (((vt0.c0, ((vt0.c0) NOT NULL), CAST(vt0.c1 AS INTEGER)))==(((vt0.c1 IN ()), vt0.c0, vt0.c1)));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (GLOB(((rt0.c0) NOTNULL), CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((rt0.c0) NOTNULL), CAST(vt1.c0 AS TEXT))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (GLOB(((rt0.c0) NOTNULL), CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((rt0.c0) NOTNULL), CAST(vt1.c0 AS TEXT))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (GLOB(((rt0.c0) NOTNULL), CAST(vt1.c0 AS TEXT)));
SELECT * FROM vt1, rt0, t0 WHERE (((((rt0.c2) NOT NULL)) IS FALSE)) ORDER BY (((NOT (0.16628773265415775))) BETWEEN (((rt0.c2)!=(rt0.c0))) AND (((vt1.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (((NOT (0.16628773265415775))) BETWEEN (((rt0.c2)!=(rt0.c0))) AND (((vt1.c0) NOTNULL)))  NULLS FIRST);
SELECT * FROM vt1, rt0, t0 WHERE (((((rt0.c2) NOT NULL)) IS FALSE)) ORDER BY (((NOT (0.16628773265415775))) BETWEEN (((rt0.c2)!=(rt0.c0))) AND (((vt1.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (((NOT (0.16628773265415775))) BETWEEN (((rt0.c2)!=(rt0.c0))) AND (((vt1.c0) NOTNULL)))  NULLS FIRST);
SELECT * FROM vt1, rt0, t0 WHERE (((((rt0.c2) NOT NULL)) IS FALSE)) ORDER BY (((NOT (0.16628773265415775))) BETWEEN (((rt0.c2)!=(rt0.c0))) AND (((vt1.c0) NOTNULL)))  NULLS FIRST;
SELECT * FROM vt0, vt1, rt0 WHERE (vt0.c1) ORDER BY (((((vt1.c0)>=(rt0.c1)), (((rt0.c2))=((rt0.c2))), LOWER(DISTINCT vt0.c1)))>((((rt0.c0) ISNULL), (- (vt0.c0)), vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((((vt1.c0)>=(rt0.c1)), (((rt0.c2))==((rt0.c2))), LOWER(DISTINCT vt0.c1)))>((((rt0.c0) ISNULL), (- (vt0.c0)), vt1.c0)))  NULLS FIRST);
SELECT * FROM vt0, vt1, rt0 WHERE (vt0.c1) ORDER BY (((((vt1.c0)>=(rt0.c1)), (((rt0.c2))=((rt0.c2))), LOWER(DISTINCT vt0.c1)))>((((rt0.c0) ISNULL), (- (vt0.c0)), vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((((vt1.c0)>=(rt0.c1)), (((rt0.c2))==((rt0.c2))), LOWER(DISTINCT vt0.c1)))>((((rt0.c0) ISNULL), (- (vt0.c0)), vt1.c0)))  NULLS FIRST);
SELECT * FROM vt0, vt1, rt0 WHERE (vt0.c1) ORDER BY (((((vt1.c0)>=(rt0.c1)), (((rt0.c2))=((rt0.c2))), LOWER(DISTINCT vt0.c1)))>((((rt0.c0) ISNULL), (- (vt0.c0)), vt1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((rt0.c0) NOT BETWEEN ((((t0.c3))<((rt0.c0)))) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN ((((t0.c3))<((rt0.c0)))) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((rt0.c0) NOT BETWEEN ((((t0.c3))<((rt0.c0)))) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN ((((t0.c3))<((rt0.c0)))) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((rt0.c0) NOT BETWEEN ((((t0.c3))<((rt0.c0)))) AND ((vt1.c0 IN ()))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((t0.c3)OR(((rt0.c1) BETWEEN (vt0.c0) AND (t0.c3)))) INNER JOIN t0 ON (((((((t0.c3, t0.c33, rt0.c1))=((rt0.c1, rt0.c1, rt0.c1))))AND(rt0.c1 COLLATE BINARY)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE t0.c3 END)) LEFT OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c2)))>=(((rt0.c0) BETWEEN (t0.c3) AND (rt0.c2)))) WHERE (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1))) IN (((vt0.c1)*(t0.c33)), vt0.c0))) ORDER BY (0.2771962709139545 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1))) IN (((vt0.c1)*(t0.c33)), vt0.c0))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((t0.c3)OR(((rt0.c1) BETWEEN (vt0.c0) AND (t0.c3)))) INNER JOIN t0 ON (((((((t0.c3, t0.c33, rt0.c1))=((rt0.c1, rt0.c1, rt0.c1))))AND(rt0.c1 COLLATE BINARY)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE t0.c3 END)) LEFT OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c2)))>=(((rt0.c0) BETWEEN (t0.c3) AND (rt0.c2)))) ORDER BY (0.2771962709139545 IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((t0.c3)OR(((rt0.c1) BETWEEN (vt0.c0) AND (t0.c3)))) INNER JOIN t0 ON (((((((t0.c3, t0.c33, rt0.c1))=((rt0.c1, rt0.c1, rt0.c1))))AND(rt0.c1 COLLATE BINARY)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE t0.c3 END)) LEFT OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c2)))>=(((rt0.c0) BETWEEN (t0.c3) AND (rt0.c2)))) WHERE (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1))) IN (((vt0.c1)*(t0.c33)), vt0.c0))) ORDER BY (0.2771962709139545 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1))) IN (((vt0.c1)*(t0.c33)), vt0.c0))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((t0.c3)OR(((rt0.c1) BETWEEN (vt0.c0) AND (t0.c3)))) INNER JOIN t0 ON (((((((t0.c3, t0.c33, rt0.c1))=((rt0.c1, rt0.c1, rt0.c1))))AND(rt0.c1 COLLATE BINARY)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE t0.c3 END)) LEFT OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c2)))>=(((rt0.c0) BETWEEN (t0.c3) AND (rt0.c2)))) ORDER BY (0.2771962709139545 IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((t0.c3)OR(((rt0.c1) BETWEEN (vt0.c0) AND (t0.c3)))) INNER JOIN t0 ON (((((((t0.c3, t0.c33, rt0.c1))=((rt0.c1, rt0.c1, rt0.c1))))AND(rt0.c1 COLLATE BINARY)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE t0.c3 END)) LEFT OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c2)))>=(((rt0.c0) BETWEEN (t0.c3) AND (rt0.c2)))) WHERE (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1))) IN (((vt0.c1)*(t0.c33)), vt0.c0))) ORDER BY (0.2771962709139545 IN ()) ASC  NULLS FIRST;
SELECT * FROM rt0, vt1, vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c1))>=((rt0.c1, NULL, rt0.c0))))AND(((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c1)<>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0, vt0.c0, vt0.c1))>=((rt0.c1, NULL, rt0.c0))))AND(((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c1)!=(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c1))>=((rt0.c1, NULL, rt0.c0))))AND(((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c1)<>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0, vt0.c0, vt0.c1))>=((rt0.c1, NULL, rt0.c0))))AND(((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c1)!=(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c1))>=((rt0.c1, NULL, rt0.c0))))AND(((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c1)<>(rt0.c1)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE WHEN 275617569 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 275617569 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE WHEN 275617569 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 275617569 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE WHEN 275617569 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) IS FALSE))));
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (CASE WHEN ((((vt0.c1)OR(vt1.c0)))AND(t0.c3)) THEN ((rt0.c0)<=(vt0.c1)) ELSE (+ (0.12536687463706986)) END) ORDER BY (('-1342247185') BETWEEN (rt0.c2) AND (vt0.c1)) COLLATE RTRIM COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c1)OR(vt1.c0)))AND(t0.c3)) THEN ((rt0.c0)<=(vt0.c1)) ELSE (+ (0.12536687463706986)) END) IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY (('-1342247185') BETWEEN (rt0.c2) AND (vt0.c1)) COLLATE RTRIM COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (CASE WHEN ((((vt0.c1)OR(vt1.c0)))AND(t0.c3)) THEN ((rt0.c0)<=(vt0.c1)) ELSE (+ (0.12536687463706986)) END) ORDER BY (('-1342247185') BETWEEN (rt0.c2) AND (vt0.c1)) COLLATE RTRIM COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c1)OR(vt1.c0)))AND(t0.c3)) THEN ((rt0.c0)<=(vt0.c1)) ELSE (+ (0.12536687463706986)) END) IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY (('-1342247185') BETWEEN (rt0.c2) AND (vt0.c1)) COLLATE RTRIM COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (CASE WHEN ((((vt0.c1)OR(vt1.c0)))AND(t0.c3)) THEN ((rt0.c0)<=(vt0.c1)) ELSE (+ (0.12536687463706986)) END) ORDER BY (('-1342247185') BETWEEN (rt0.c2) AND (vt0.c1)) COLLATE RTRIM COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) AND (CAST('133791128' AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) AND (CAST('133791128' AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) AND (CAST('133791128' AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) AND (CAST('133791128' AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) AND (CAST('133791128' AS REAL))));
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) NOTNULL)) ORDER BY (CAST(vt1.c0 AS TEXT) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)GLOB(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS TEXT) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)GLOB(vt1.c0)))));
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) NOTNULL)) ORDER BY (CAST(vt1.c0 AS TEXT) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)GLOB(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS TEXT) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)GLOB(vt1.c0)))));
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) NOTNULL)) ORDER BY (CAST(vt1.c0 AS TEXT) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)GLOB(vt1.c0))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CASE WHEN NULL THEN ((vt1.c0)<(t0.c3)) WHEN (vt1.c0 IN (vt0.c1, vt1.c0)) THEN (+ (t0.c3)) WHEN CAST(vt0.c1 AS INTEGER) THEN ((vt0.c0) NOT NULL) END) ORDER BY ((t0.c33 COLLATE NOCASE) NOT BETWEEN (UNLIKELY(vt0.c1)) AND ((('') NOT BETWEEN (t0.c3) AND (t0.c33)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((vt1.c0)<(t0.c3)) WHEN (vt1.c0 IN (vt0.c1, vt1.c0)) THEN (+ (t0.c3)) WHEN CAST(vt0.c1 AS INTEGER) THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((t0.c33 COLLATE NOCASE) NOT BETWEEN (UNLIKELY(vt0.c1)) AND ((('') NOT BETWEEN (t0.c3) AND (t0.c33)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CASE WHEN NULL THEN ((vt1.c0)<(t0.c3)) WHEN (vt1.c0 IN (vt0.c1, vt1.c0)) THEN (+ (t0.c3)) WHEN CAST(vt0.c1 AS INTEGER) THEN ((vt0.c0) NOT NULL) END) ORDER BY ((t0.c33 COLLATE NOCASE) NOT BETWEEN (UNLIKELY(vt0.c1)) AND ((('') NOT BETWEEN (t0.c3) AND (t0.c33)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((vt1.c0)<(t0.c3)) WHEN (vt1.c0 IN (vt0.c1, vt1.c0)) THEN (+ (t0.c3)) WHEN CAST(vt0.c1 AS INTEGER) THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((t0.c33 COLLATE NOCASE) NOT BETWEEN (UNLIKELY(vt0.c1)) AND ((('') NOT BETWEEN (t0.c3) AND (t0.c33)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CASE WHEN NULL THEN ((vt1.c0)<(t0.c3)) WHEN (vt1.c0 IN (vt0.c1, vt1.c0)) THEN (+ (t0.c3)) WHEN CAST(vt0.c1 AS INTEGER) THEN ((vt0.c0) NOT NULL) END) ORDER BY ((t0.c33 COLLATE NOCASE) NOT BETWEEN (UNLIKELY(vt0.c1)) AND ((('') NOT BETWEEN (t0.c3) AND (t0.c33)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((+ (rt0.c0))) ORDER BY (((rt0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((((NULL)+(rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 ORDER BY (((rt0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((((NULL)+(rt0.c2))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((+ (rt0.c0))) ORDER BY (((rt0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((((NULL)+(rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 ORDER BY (((rt0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((((NULL)+(rt0.c2))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((+ (rt0.c0))) ORDER BY (((rt0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((((NULL)+(rt0.c2))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((LIKELY(DISTINCT rt0.c2)))<=(((NOT (NULL)))))) ORDER BY (((((t0.c3, t0.c33, t0.c3))<=((t0.c3, '729343025', rt0.c2)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((LIKELY(DISTINCT rt0.c2)))<=(((NOT (NULL)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((t0.c3, t0.c33, t0.c3))<=((t0.c3, '729343025', rt0.c2)))) ISNULL));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((LIKELY(DISTINCT rt0.c2)))<=(((NOT (NULL)))))) ORDER BY (((((t0.c3, t0.c33, t0.c3))<=((t0.c3, '729343025', rt0.c2)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((LIKELY(DISTINCT rt0.c2)))<=(((NOT (NULL)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((t0.c3, t0.c33, t0.c3))<=((t0.c3, '729343025', rt0.c2)))) ISNULL));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((LIKELY(DISTINCT rt0.c2)))<=(((NOT (NULL)))))) ORDER BY (((((t0.c3, t0.c33, t0.c3))<=((t0.c3, '729343025', rt0.c2)))) ISNULL);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((vt0.c1)&(t0.c3)))+(x'')) INNER JOIN rt0 ON vt1.c0 WHERE (json_valid((~ (x''))));
SELECT SUM(count) FROM (SELECT ALL ((json_valid((~ (x'')))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((vt0.c1)&(t0.c3)))+(x'')) INNER JOIN rt0 ON vt1.c0);
SELECT ALL COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((vt0.c1)&(t0.c3)))+(x'')) INNER JOIN rt0 ON vt1.c0 WHERE (json_valid((~ (x''))));
SELECT SUM(count) FROM (SELECT ALL ((json_valid((~ (x'')))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((vt0.c1)&(t0.c3)))+(x'')) INNER JOIN rt0 ON vt1.c0);
SELECT ALL COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((vt0.c1)&(t0.c3)))+(x'')) INNER JOIN rt0 ON vt1.c0 WHERE (json_valid((~ (x''))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN ())))<>(((((vt0.c0))<>((vt0.c1))))))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0)!=(vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ())))!=(((((vt0.c0))<>((vt0.c1))))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0)!=(vt0.c1)) END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN ())))<>(((((vt0.c0))<>((vt0.c1))))))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0)!=(vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ())))!=(((((vt0.c0))<>((vt0.c1))))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0)!=(vt0.c1)) END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN ())))<>(((((vt0.c0))<>((vt0.c1))))))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0)!=(vt0.c1)) END DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))>=((vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))>=((vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))>=((vt0.c0))) COLLATE RTRIM);
SELECT * FROM rt0 CROSS JOIN t0 ON json_array_length(CAST(rt0.c1 AS BLOB), (((t0.c3))==((rt0.c1)))) CROSS JOIN vt1 ON (((((rt0.c0))<((vt1.c0))))OR((vt1.c0 IN ()))) WHERE (((t0.c3) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c3) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON json_array_length(CAST(rt0.c1 AS BLOB), (((t0.c3))==((rt0.c1)))) CROSS JOIN vt1 ON (((((rt0.c0))<((vt1.c0))))OR((vt1.c0 IN ()))));
SELECT * FROM rt0 CROSS JOIN t0 ON json_array_length(CAST(rt0.c1 AS BLOB), (((t0.c3))==((rt0.c1)))) CROSS JOIN vt1 ON (((((rt0.c0))<((vt1.c0))))OR((vt1.c0 IN ()))) WHERE (((t0.c3) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c3) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON json_array_length(CAST(rt0.c1 AS BLOB), (((t0.c3))==((rt0.c1)))) CROSS JOIN vt1 ON (((((rt0.c0))<((vt1.c0))))OR((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0, t0 CROSS JOIN vt1 ON ((((((vt1.c0)<(0xffffffff968bdea7)))AND(rt0.c1)))AND(LIKELY(DISTINCT rt0.c2))) WHERE (ABS(((t0.c3) NOT BETWEEN (rt0.c2) AND (NULL)))) ORDER BY ((- (rt0.c2)) IN ((rt0.c2 IN ('-1793056328'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t0.c3) NOT BETWEEN (rt0.c2) AND (NULL)))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt1 ON ((((((vt1.c0)<(0xffffffff968bdea7)))AND(rt0.c1)))AND(LIKELY(DISTINCT rt0.c2))) ORDER BY ((- (rt0.c2)) IN ((rt0.c2 IN ('-1793056328'))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 CROSS JOIN vt1 ON ((((((vt1.c0)<(0xffffffff968bdea7)))AND(rt0.c1)))AND(LIKELY(DISTINCT rt0.c2))) WHERE (ABS(((t0.c3) NOT BETWEEN (rt0.c2) AND (NULL)))) ORDER BY ((- (rt0.c2)) IN ((rt0.c2 IN ('-1793056328'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t0.c3) NOT BETWEEN (rt0.c2) AND (NULL)))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt1 ON ((((((vt1.c0)<(0xffffffff968bdea7)))AND(rt0.c1)))AND(LIKELY(DISTINCT rt0.c2))) ORDER BY ((- (rt0.c2)) IN ((rt0.c2 IN ('-1793056328'))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 CROSS JOIN vt1 ON ((((((vt1.c0)<(0xffffffff968bdea7)))AND(rt0.c1)))AND(LIKELY(DISTINCT rt0.c2))) WHERE (ABS(((t0.c3) NOT BETWEEN (rt0.c2) AND (NULL)))) ORDER BY ((- (rt0.c2)) IN ((rt0.c2 IN ('-1793056328'))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON (~ ((- (rt0.c2)))) CROSS JOIN t0 ON CAST(((t0.c3)>(vt1.c0)) AS REAL) WHERE (((((x'')<<(rt0.c0)))<((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')<<(rt0.c0)))<((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (~ ((- (rt0.c2)))) CROSS JOIN t0 ON CAST(((t0.c3)>(vt1.c0)) AS REAL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON (~ ((- (rt0.c2)))) CROSS JOIN t0 ON CAST(((t0.c3)>(vt1.c0)) AS REAL) WHERE (((((x'')<<(rt0.c0)))<((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')<<(rt0.c0)))<((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (~ ((- (rt0.c2)))) CROSS JOIN t0 ON CAST(((t0.c3)>(vt1.c0)) AS REAL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON (~ ((- (rt0.c2)))) CROSS JOIN t0 ON CAST(((t0.c3)>(vt1.c0)) AS REAL) WHERE (((((x'')<<(rt0.c0)))<((vt1.c0 IN ()))));
SELECT ALL * FROM vt1, t0, vt0 WHERE (t0.c33) ORDER BY ((((((((((vt0.c1)OR(vt0.c0)))AND(t0.c33)))OR(vt0.c1)))AND(t0.c33)))-(t0.c3 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c33) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((((((((vt0.c1)OR(vt0.c0)))AND(t0.c33)))OR(vt0.c1)))AND(t0.c33)))-(t0.c3 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (t0.c33) ORDER BY ((((((((((vt0.c1)OR(vt0.c0)))AND(t0.c33)))OR(vt0.c1)))AND(t0.c33)))-(t0.c3 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c33) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((((((((vt0.c1)OR(vt0.c0)))AND(t0.c33)))OR(vt0.c1)))AND(t0.c33)))-(t0.c3 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (t0.c33) ORDER BY ((((((((((vt0.c1)OR(vt0.c0)))AND(t0.c33)))OR(vt0.c1)))AND(t0.c33)))-(t0.c3 COLLATE BINARY)) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((NOT (t0.c3)) IN ((~ (t0.c3)))));
SELECT SUM(count) FROM (SELECT ((((NOT (t0.c3)) IN ((~ (t0.c3))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((NOT (t0.c3)) IN ((~ (t0.c3)))));
SELECT SUM(count) FROM (SELECT ((((NOT (t0.c3)) IN ((~ (t0.c3))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((NOT (t0.c3)) IN ((~ (t0.c3)))));
SELECT * FROM vt0, t0, vt1 WHERE (vt1.c0) ORDER BY ((((vt0.c0)*(vt0.c0)))|(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((vt0.c0)*(vt0.c0)))|(vt0.c1)));
SELECT * FROM vt0, t0, vt1 WHERE (vt1.c0) ORDER BY ((((vt0.c0)*(vt0.c0)))|(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((vt0.c0)*(vt0.c0)))|(vt0.c1)));
SELECT * FROM vt0, t0, vt1 WHERE (vt1.c0) ORDER BY ((((vt0.c0)*(vt0.c0)))|(vt0.c1));
SELECT * FROM vt1, vt0, rt0 WHERE ((((((vt1.c0) ISNULL), x'9217', (NULL IN ())))<((0.5867433481727395, ((rt0.c0) BETWEEN (x'') AND (vt0.c0)), (((vt1.c0, vt0.c0, 1.236862784E9)) NOT BETWEEN ((vt0.c1, vt1.c0, x'')) AND ((rt0.c2, rt0.c2, vt0.c1))))))) ORDER BY (((((0.23898183018297314)/(vt0.c1)), json_valid(vt0.c0), (- (vt0.c1))))<=((vt0.c1, ((vt0.c1)&(vt0.c0)), 0.6999397576167061)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) ISNULL), x'9217', (NULL IN ())))<((0.5867433481727395, ((rt0.c0) BETWEEN (x'') AND (vt0.c0)), (((vt1.c0, vt0.c0, 1.236862784E9)) NOT BETWEEN ((vt0.c1, vt1.c0, x'')) AND ((rt0.c2, rt0.c2, vt0.c1))))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((((0.23898183018297314)/(vt0.c1)), json_valid(vt0.c0), (- (vt0.c1))))<=((vt0.c1, ((vt0.c1)&(vt0.c0)), 0.6999397576167061)))  NULLS LAST);
SELECT * FROM vt1, vt0, rt0 WHERE ((((((vt1.c0) ISNULL), x'9217', (NULL IN ())))<((0.5867433481727395, ((rt0.c0) BETWEEN (x'') AND (vt0.c0)), (((vt1.c0, vt0.c0, 1.236862784E9)) NOT BETWEEN ((vt0.c1, vt1.c0, x'')) AND ((rt0.c2, rt0.c2, vt0.c1))))))) ORDER BY (((((0.23898183018297314)/(vt0.c1)), json_valid(vt0.c0), (- (vt0.c1))))<=((vt0.c1, ((vt0.c1)&(vt0.c0)), 0.6999397576167061)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) ISNULL), x'9217', (NULL IN ())))<((0.5867433481727395, ((rt0.c0) BETWEEN (x'') AND (vt0.c0)), (((vt1.c0, vt0.c0, 1.236862784E9)) NOT BETWEEN ((vt0.c1, vt1.c0, x'')) AND ((rt0.c2, rt0.c2, vt0.c1))))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((((0.23898183018297314)/(vt0.c1)), json_valid(vt0.c0), (- (vt0.c1))))<=((vt0.c1, ((vt0.c1)&(vt0.c0)), 0.6999397576167061)))  NULLS LAST);
SELECT * FROM vt1, vt0, rt0 WHERE ((((((vt1.c0) ISNULL), x'9217', (NULL IN ())))<((0.5867433481727395, ((rt0.c0) BETWEEN (x'') AND (vt0.c0)), (((vt1.c0, vt0.c0, 1.236862784E9)) NOT BETWEEN ((vt0.c1, vt1.c0, x'')) AND ((rt0.c2, rt0.c2, vt0.c1))))))) ORDER BY (((((0.23898183018297314)/(vt0.c1)), json_valid(vt0.c0), (- (vt0.c1))))<=((vt0.c1, ((vt0.c1)&(vt0.c0)), 0.6999397576167061)))  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c33 IN ()), t0.c33 COLLATE RTRIM, CASE WHEN NULL THEN t0.c3 ELSE t0.c3 END))<>((CAST(t0.c3 AS INTEGER), ((t0.c3) ISNULL), NULLIF(DISTINCT NULL, t0.c33)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c33 IN ()), t0.c33 COLLATE RTRIM, CASE WHEN NULL THEN t0.c3 ELSE t0.c3 END))!=((CAST(t0.c3 AS INTEGER), ((t0.c3) ISNULL), NULLIF(DISTINCT NULL, t0.c33))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c33 IN ()), t0.c33 COLLATE RTRIM, CASE WHEN NULL THEN t0.c3 ELSE t0.c3 END))<>((CAST(t0.c3 AS INTEGER), ((t0.c3) ISNULL), NULLIF(DISTINCT NULL, t0.c33)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c33 IN ()), t0.c33 COLLATE RTRIM, CASE WHEN NULL THEN t0.c3 ELSE t0.c3 END))!=((CAST(t0.c3 AS INTEGER), ((t0.c3) ISNULL), NULLIF(DISTINCT NULL, t0.c33))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c33 IN ()), t0.c33 COLLATE RTRIM, CASE WHEN NULL THEN t0.c3 ELSE t0.c3 END))<>((CAST(t0.c3 AS INTEGER), ((t0.c3) ISNULL), NULLIF(DISTINCT NULL, t0.c33)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, '\n+*l)Bɛ'))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, '\n+*l)Bɛ'))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, '\n+*l)Bɛ'))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, '\n+*l)Bɛ'))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, '\n+*l)Bɛ'))) COLLATE NOCASE);
SELECT * FROM rt0, vt1 WHERE (((x'445400ea')<(((rt0.c2)<(rt0.c1))))) ORDER BY (((((rt0.c0 IN ()))OR(CAST(rt0.c1 AS BLOB))))OR(((vt1.c0)IS NOT(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((x'445400ea')<(((rt0.c2)<(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c0 IN ()))OR(CAST(rt0.c1 AS BLOB))))OR(((vt1.c0)IS NOT(rt0.c2)))) DESC);
SELECT * FROM rt0, vt1 WHERE (((x'445400ea')<(((rt0.c2)<(rt0.c1))))) ORDER BY (((((rt0.c0 IN ()))OR(CAST(rt0.c1 AS BLOB))))OR(((vt1.c0)IS NOT(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((x'445400ea')<(((rt0.c2)<(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c0 IN ()))OR(CAST(rt0.c1 AS BLOB))))OR(((vt1.c0)IS NOT(rt0.c2)))) DESC);
SELECT * FROM rt0, vt1 WHERE (((x'445400ea')<(((rt0.c2)<(rt0.c1))))) ORDER BY (((((rt0.c0 IN ()))OR(CAST(rt0.c1 AS BLOB))))OR(((vt1.c0)IS NOT(rt0.c2)))) DESC;
SELECT * FROM rt0, t0 WHERE ((((t0.c33 IN ())) BETWEEN (rt0.c1 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN t0.c33 END)));
SELECT SUM(count) FROM (SELECT (((((t0.c33 IN ())) BETWEEN (rt0.c1 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN t0.c33 END))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((t0.c33 IN ())) BETWEEN (rt0.c1 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN t0.c33 END)));
SELECT SUM(count) FROM (SELECT (((((t0.c33 IN ())) BETWEEN (rt0.c1 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN t0.c33 END))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((t0.c33 IN ())) BETWEEN (rt0.c1 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN t0.c33 END)));
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c1 COLLATE BINARY) IS FALSE)) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c1 COLLATE BINARY) IS FALSE)) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c1 COLLATE BINARY) IS FALSE)) ORDER BY rt0.c1 ASC;
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (SUBSTR((- (vt1.c0)), (('')*(t0.c33))));
SELECT SUM(count) FROM (SELECT ((SUBSTR((- (vt1.c0)), (('')*(t0.c33)))) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (SUBSTR((- (vt1.c0)), (('')*(t0.c33))));
SELECT SUM(count) FROM (SELECT ((SUBSTR((- (vt1.c0)), (('')*(t0.c33)))) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (SUBSTR((- (vt1.c0)), (('')*(t0.c33))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CAST(((1551765041)=(rt0.c0)) AS TEXT) INNER JOIN rt0 ON (((((rt0.c2)OR(t0.c33)))AND(rt0.c0)) IN (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE (((((((((CASE WHEN t0.c33 THEN vt1.c0 END)AND(((rt0.c2)*(rt0.c1)))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))))OR(((0X6215ca52)OR(t0.c3)))))OR((((vt1.c0)) NOT BETWEEN ((t0.c33)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t0.c33 THEN vt1.c0 END)AND(((rt0.c2)*(rt0.c1)))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))))OR(((0X6215ca52)OR(t0.c3)))))OR((((vt1.c0)) NOT BETWEEN ((t0.c33)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CAST(((1551765041)==(rt0.c0)) AS TEXT) INNER JOIN rt0 ON (((((rt0.c2)OR(t0.c33)))AND(rt0.c0)) IN (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CAST(((1551765041)=(rt0.c0)) AS TEXT) INNER JOIN rt0 ON (((((rt0.c2)OR(t0.c33)))AND(rt0.c0)) IN (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE (((((((((CASE WHEN t0.c33 THEN vt1.c0 END)AND(((rt0.c2)*(rt0.c1)))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))))OR(((0X6215ca52)OR(t0.c3)))))OR((((vt1.c0)) NOT BETWEEN ((t0.c33)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t0.c33 THEN vt1.c0 END)AND(((rt0.c2)*(rt0.c1)))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))))OR(((0X6215ca52)OR(t0.c3)))))OR((((vt1.c0)) NOT BETWEEN ((t0.c33)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CAST(((1551765041)==(rt0.c0)) AS TEXT) INNER JOIN rt0 ON (((((rt0.c2)OR(t0.c33)))AND(rt0.c0)) IN (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))OR('-1077156594')))==(((vt0.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c1)))OR('-1077156594')))=(((vt0.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))OR('-1077156594')))==(((vt0.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c1)))OR('-1077156594')))=(((vt0.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))OR('-1077156594')))==(((vt0.c0)-(vt1.c0)))));
SELECT * FROM rt0, t0 WHERE (CAST((- (t0.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((- (t0.c3)) AS TEXT)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST((- (t0.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((- (t0.c3)) AS TEXT)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST((- (t0.c3)) AS TEXT));
SELECT * FROM vt0 CROSS JOIN t0 ON 0.8668020609975129 INNER JOIN vt1 ON CASE (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((t0.c33)))  WHEN ((t0.c3) IS FALSE) THEN CASE WHEN t0.c33 THEN vt0.c0 END WHEN CAST(t0.c33 AS REAL) THEN ((t0.c3)&('{3''Dp}vV')) WHEN (- (vt0.c1)) THEN ((vt0.c1) NOT NULL) END LEFT OUTER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (NULL) AND (CASE t0.c33  WHEN t0.c3 THEN vt0.c1 END)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON 0.8668020609975129 INNER JOIN vt1 ON CASE (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((t0.c33)))  WHEN ((t0.c3) IS FALSE) THEN CASE WHEN t0.c33 THEN vt0.c0 END WHEN CAST(t0.c33 AS REAL) THEN ((t0.c3)&('{3''Dp}vV')) WHEN (- (vt0.c1)) THEN ((vt0.c1) NOT NULL) END LEFT OUTER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (NULL) AND (CASE t0.c33  WHEN t0.c3 THEN vt0.c1 END)));
SELECT * FROM vt0 CROSS JOIN t0 ON 0.8668020609975129 INNER JOIN vt1 ON CASE (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((t0.c33)))  WHEN ((t0.c3) IS FALSE) THEN CASE WHEN t0.c33 THEN vt0.c0 END WHEN CAST(t0.c33 AS REAL) THEN ((t0.c3)&('{3''Dp}vV')) WHEN (- (vt0.c1)) THEN ((vt0.c1) NOT NULL) END LEFT OUTER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (NULL) AND (CASE t0.c33  WHEN t0.c3 THEN vt0.c1 END)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON 0.8668020609975129 INNER JOIN vt1 ON CASE (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((t0.c33)))  WHEN ((t0.c3) IS FALSE) THEN CASE WHEN t0.c33 THEN vt0.c0 END WHEN CAST(t0.c33 AS REAL) THEN ((t0.c3)&('{3''Dp}vV')) WHEN (- (vt0.c1)) THEN ((vt0.c1) NOT NULL) END LEFT OUTER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (NULL) AND (CASE t0.c33  WHEN t0.c3 THEN vt0.c1 END)));
SELECT * FROM vt0 CROSS JOIN t0 ON 0.8668020609975129 INNER JOIN vt1 ON CASE (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((t0.c33)))  WHEN ((t0.c3) IS FALSE) THEN CASE WHEN t0.c33 THEN vt0.c0 END WHEN CAST(t0.c33 AS REAL) THEN ((t0.c3)&('{3''Dp}vV')) WHEN (- (vt0.c1)) THEN ((vt0.c1) NOT NULL) END LEFT OUTER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (NULL) AND (CASE t0.c33  WHEN t0.c3 THEN vt0.c1 END)) WHERE (x'');
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.2089259718657578)>=(vt1.c0 COLLATE BINARY))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((((0.2089259718657578)>=(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.2089259718657578)>=(vt1.c0 COLLATE BINARY))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((((0.2089259718657578)>=(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.2089259718657578)>=(vt1.c0 COLLATE BINARY))) ORDER BY vt1.c0;
SELECT * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) ISNULL));
SELECT * FROM vt1 WHERE ('\nH');
SELECT SUM(count) FROM (SELECT ALL (('\nH') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('\nH');
SELECT SUM(count) FROM (SELECT ALL (('\nH') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('\nH');
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c0)+(rt0.c2)) COLLATE RTRIM WHERE (STRFTIME((vt0.c1 IN ()), CASE WHEN rt0.c0 THEN vt0.c1 END, CASE WHEN vt1.c0 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((STRFTIME((vt0.c1 IN ()), CASE WHEN rt0.c0 THEN vt0.c1 END, CASE WHEN vt1.c0 THEN rt0.c0 END)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c0)+(rt0.c2)) COLLATE RTRIM);
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c0)+(rt0.c2)) COLLATE RTRIM WHERE (STRFTIME((vt0.c1 IN ()), CASE WHEN rt0.c0 THEN vt0.c1 END, CASE WHEN vt1.c0 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((STRFTIME((vt0.c1 IN ()), CASE WHEN rt0.c0 THEN vt0.c1 END, CASE WHEN vt1.c0 THEN rt0.c0 END)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c0)+(rt0.c2)) COLLATE RTRIM);
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c0)+(rt0.c2)) COLLATE RTRIM WHERE (STRFTIME((vt0.c1 IN ()), CASE WHEN rt0.c0 THEN vt0.c1 END, CASE WHEN vt1.c0 THEN rt0.c0 END));
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c1);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (vt1.c0);
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE (CASE WHEN ((vt1.c0)|(t0.c33)) THEN ((NULL)<<(rt0.c2)) WHEN ((vt0.c0)!=(rt0.c1)) THEN (- (rt0.c1)) WHEN (+ ('157302866')) THEN ((vt1.c0) NOT BETWEEN (t0.c33) AND ('503916508')) ELSE t0.c3 END) ORDER BY (((NULL)) NOT BETWEEN (((t0.c33 IN ()))) AND ((((((((((x'')AND(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)))OR(t0.c3)))))  NULLS FIRST, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)|(t0.c33)) THEN ((NULL)<<(rt0.c2)) WHEN ((vt0.c0)!=(rt0.c1)) THEN (- (rt0.c1)) WHEN (+ ('157302866')) THEN ((vt1.c0) NOT BETWEEN (t0.c33) AND ('503916508')) ELSE t0.c3 END) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY (((NULL)) NOT BETWEEN (((t0.c33 IN ()))) AND ((((((((((x'')AND(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)))OR(t0.c3)))))  NULLS FIRST, NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE (CASE WHEN ((vt1.c0)|(t0.c33)) THEN ((NULL)<<(rt0.c2)) WHEN ((vt0.c0)!=(rt0.c1)) THEN (- (rt0.c1)) WHEN (+ ('157302866')) THEN ((vt1.c0) NOT BETWEEN (t0.c33) AND ('503916508')) ELSE t0.c3 END) ORDER BY (((NULL)) NOT BETWEEN (((t0.c33 IN ()))) AND ((((((((((x'')AND(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)))OR(t0.c3)))))  NULLS FIRST, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)|(t0.c33)) THEN ((NULL)<<(rt0.c2)) WHEN ((vt0.c0)!=(rt0.c1)) THEN (- (rt0.c1)) WHEN (+ ('157302866')) THEN ((vt1.c0) NOT BETWEEN (t0.c33) AND ('503916508')) ELSE t0.c3 END) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY (((NULL)) NOT BETWEEN (((t0.c33 IN ()))) AND ((((((((((x'')AND(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)))OR(t0.c3)))))  NULLS FIRST, NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE (CASE WHEN ((vt1.c0)|(t0.c33)) THEN ((NULL)<<(rt0.c2)) WHEN ((vt0.c0)!=(rt0.c1)) THEN (- (rt0.c1)) WHEN (+ ('157302866')) THEN ((vt1.c0) NOT BETWEEN (t0.c33) AND ('503916508')) ELSE t0.c3 END) ORDER BY (((NULL)) NOT BETWEEN (((t0.c33 IN ()))) AND ((((((((((x'')AND(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)))OR(t0.c3)))))  NULLS FIRST, NULL ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))!=(((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))!=(((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))!=(((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))!=(((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))!=(((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0)))));
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY (t0.c3 IN ()) ASC, ((t0.c3)%(t0.c33)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY (t0.c3 IN ()) ASC, ((t0.c3)%(t0.c33)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY (t0.c3 IN ()) ASC, ((t0.c3)%(t0.c33)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY (t0.c3 IN ()) ASC, ((t0.c3)%(t0.c33)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY (t0.c3 IN ()) ASC, ((t0.c3)%(t0.c33)) COLLATE RTRIM ASC;
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE ((json_valid(rt0.c0) IN ())) ORDER BY ((((t0.c3) BETWEEN (NULL) AND (t0.c3)))||(((((((((t0.c3)AND(t0.c3)))OR(rt0.c2)))AND(t0.c33)))OR(t0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((json_valid(rt0.c0) IN ())) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY ((((t0.c3) BETWEEN (NULL) AND (t0.c3)))||(((((((((t0.c3)AND(t0.c3)))OR(rt0.c2)))AND(t0.c33)))OR(t0.c3))))  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE ((json_valid(rt0.c0) IN ())) ORDER BY ((((t0.c3) BETWEEN (NULL) AND (t0.c3)))||(((((((((t0.c3)AND(t0.c3)))OR(rt0.c2)))AND(t0.c33)))OR(t0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((json_valid(rt0.c0) IN ())) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY ((((t0.c3) BETWEEN (NULL) AND (t0.c3)))||(((((((((t0.c3)AND(t0.c3)))OR(rt0.c2)))AND(t0.c33)))OR(t0.c3))))  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE ((json_valid(rt0.c0) IN ())) ORDER BY ((((t0.c3) BETWEEN (NULL) AND (t0.c3)))||(((((((((t0.c3)AND(t0.c3)))OR(rt0.c2)))AND(t0.c33)))OR(t0.c3))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((((rt0.c1)IS NOT(rt0.c2)))GLOB(((((rt0.c0)OR(x'82edd9a6')))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(rt0.c2)))GLOB(((((rt0.c0)OR(x'82edd9a6')))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((((rt0.c1)IS NOT(rt0.c2)))GLOB(((((rt0.c0)OR(x'82edd9a6')))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(rt0.c2)))GLOB(((((rt0.c0)OR(x'82edd9a6')))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((((rt0.c1)IS NOT(rt0.c2)))GLOB(((((rt0.c0)OR(x'82edd9a6')))OR(rt0.c0)))));
SELECT COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (NULL) ORDER BY ((' ?w9*Ir') NOT BETWEEN (((rt0.c0)/(t0.c33))) AND (CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY ((' ?w9*Ir') NOT BETWEEN (((rt0.c0)/(t0.c33))) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (NULL) ORDER BY ((' ?w9*Ir') NOT BETWEEN (((rt0.c0)/(t0.c33))) AND (CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY ((' ?w9*Ir') NOT BETWEEN (((rt0.c0)/(t0.c33))) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (NULL) ORDER BY ((' ?w9*Ir') NOT BETWEEN (((rt0.c0)/(t0.c33))) AND (CAST(vt0.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CAST((((t0.c33)) BETWEEN ((t0.c3)) AND (('1236862784'))) AS BLOB) FULL OUTER JOIN rt0 ON ((CASE WHEN t0.c33 THEN rt0.c0 ELSE vt0.c1 END) BETWEEN (((t0.c3)-(0.19824156236994683))) AND (NULL)) WHERE (((((t0.c33) BETWEEN (vt0.c1) AND (t0.c3)))<<('a')));
SELECT SUM(count) FROM (SELECT ((((((t0.c33) BETWEEN (vt0.c1) AND (t0.c3)))<<('a'))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CAST((((t0.c33)) BETWEEN ((t0.c3)) AND (('1236862784'))) AS BLOB) FULL OUTER JOIN rt0 ON ((CASE WHEN t0.c33 THEN rt0.c0 ELSE vt0.c1 END) BETWEEN (((t0.c3)-(0.19824156236994683))) AND (NULL)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CAST((((t0.c33)) BETWEEN ((t0.c3)) AND (('1236862784'))) AS BLOB) FULL OUTER JOIN rt0 ON ((CASE WHEN t0.c33 THEN rt0.c0 ELSE vt0.c1 END) BETWEEN (((t0.c3)-(0.19824156236994683))) AND (NULL)) WHERE (((((t0.c33) BETWEEN (vt0.c1) AND (t0.c3)))<<('a')));
SELECT SUM(count) FROM (SELECT ((((((t0.c33) BETWEEN (vt0.c1) AND (t0.c3)))<<('a'))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CAST((((t0.c33)) BETWEEN ((t0.c3)) AND (('1236862784'))) AS BLOB) FULL OUTER JOIN rt0 ON ((CASE WHEN t0.c33 THEN rt0.c0 ELSE vt0.c1 END) BETWEEN (((t0.c3)-(0.19824156236994683))) AND (NULL)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CAST((((t0.c33)) BETWEEN ((t0.c3)) AND (('1236862784'))) AS BLOB) FULL OUTER JOIN rt0 ON ((CASE WHEN t0.c33 THEN rt0.c0 ELSE vt0.c1 END) BETWEEN (((t0.c3)-(0.19824156236994683))) AND (NULL)) WHERE (((((t0.c33) BETWEEN (vt0.c1) AND (t0.c3)))<<('a')));
SELECT COUNT(*) FROM vt0, vt1, t0 INDEXED BY i91, rt0 WHERE (t0.c33);
SELECT SUM(count) FROM (SELECT ALL ((t0.c33) IS TRUE)  as count FROM vt0, vt1, t0 INDEXED BY i91, rt0);
SELECT COUNT(*) FROM vt0, vt1, t0 INDEXED BY i91, rt0 WHERE (t0.c33);
SELECT SUM(count) FROM (SELECT ALL ((t0.c33) IS TRUE)  as count FROM vt0, vt1, t0 INDEXED BY i91, rt0);
SELECT COUNT(*) FROM vt0, vt1, t0 INDEXED BY i91, rt0 WHERE (t0.c33);
SELECT * FROM vt0, rt0, vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (rt0.c0);
SELECT * FROM vt0, t0 WHERE ((((t0.c3) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c3) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c3) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c3) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c3) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT * FROM vt1, rt0, t0, vt0 WHERE (CAST((vt0.c1 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN ()) AS REAL)) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT * FROM vt1, rt0, t0, vt0 WHERE (CAST((vt0.c1 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN ()) AS REAL)) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT * FROM vt1, rt0, t0, vt0 WHERE (CAST((vt0.c1 IN ()) AS REAL));
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN t0 WHERE (CASE vt0.c1  WHEN t0.c33 THEN x'5410' END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN t0.c33 THEN x'5410' END COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN t0 WHERE (CASE vt0.c1  WHEN t0.c33 THEN x'5410' END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN t0.c33 THEN x'5410' END COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN t0 WHERE (CASE vt0.c1  WHEN t0.c33 THEN x'5410' END COLLATE RTRIM);
SELECT ALL * FROM t0, vt0 WHERE (CAST(CASE WHEN t0.c33 THEN t0.c3 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c3 THEN t0.c3 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c3 ELSE vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c33 THEN t0.c3 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c3 THEN t0.c3 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c3 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(CASE WHEN t0.c33 THEN t0.c3 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c3 THEN t0.c3 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c3 ELSE vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c33 THEN t0.c3 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c3 THEN t0.c3 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c3 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(CASE WHEN t0.c33 THEN t0.c3 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c3 THEN t0.c3 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c3 ELSE vt0.c0 END AS TEXT));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (CAST((+ (rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (CAST((+ (rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (CAST((+ (rt0.c2)) AS REAL));
SELECT * FROM rt0 WHERE (CASE WHEN (((rt0.c1))<=((rt0.c1))) THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1))<=((rt0.c1))) THEN rt0.c0 END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (((rt0.c1))<=((rt0.c1))) THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1))<=((rt0.c1))) THEN rt0.c0 END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (((rt0.c1))<=((rt0.c1))) THEN rt0.c0 END);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1)>=(NULL))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>=(NULL))) ISNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1)>=(NULL))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>=(NULL))) ISNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1)>=(NULL))) ISNULL));
SELECT ALL * FROM t0, vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c0)LIKE(t0.c3)))AND(t0.c33)))OR(ABS(DISTINCT NULL)))) ORDER BY ((((((x'')<>(vt0.c1)))OR(((((((((t0.c3)OR(vt0.c1)))OR(rt0.c2)))OR(0.603530649605807)))OR(rt0.c2)))))OR(t0.c33))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)LIKE(t0.c3)))AND(t0.c33)))OR(ABS(DISTINCT NULL)))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt0 ORDER BY ((((((x'')<>(vt0.c1)))OR(((((((((t0.c3)OR(vt0.c1)))OR(rt0.c2)))OR(0.603530649605807)))OR(rt0.c2)))))OR(t0.c33))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c0)LIKE(t0.c3)))AND(t0.c33)))OR(ABS(DISTINCT NULL)))) ORDER BY ((((((x'')<>(vt0.c1)))OR(((((((((t0.c3)OR(vt0.c1)))OR(rt0.c2)))OR(0.603530649605807)))OR(rt0.c2)))))OR(t0.c33))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)LIKE(t0.c3)))AND(t0.c33)))OR(ABS(DISTINCT NULL)))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt0 ORDER BY ((((((x'')<>(vt0.c1)))OR(((((((((t0.c3)OR(vt0.c1)))OR(rt0.c2)))OR(0.603530649605807)))OR(rt0.c2)))))OR(t0.c33))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c0)LIKE(t0.c3)))AND(t0.c33)))OR(ABS(DISTINCT NULL)))) ORDER BY ((((((x'')<>(vt0.c1)))OR(((((((((t0.c3)OR(vt0.c1)))OR(rt0.c2)))OR(0.603530649605807)))OR(rt0.c2)))))OR(t0.c33))  NULLS FIRST;
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (CAST(vt0.c1 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL)) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (CAST(vt0.c1 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL)) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (CAST(vt0.c1 AS REAL));
SELECT ALL * FROM vt1, t0 WHERE ((((t0.c3)) BETWEEN ((((vt1.c0) ISNULL))) AND ((json_array_length(t0.c33, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c3)) BETWEEN ((((vt1.c0) ISNULL))) AND ((json_array_length(t0.c33, vt1.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((t0.c3)) BETWEEN ((((vt1.c0) ISNULL))) AND ((json_array_length(t0.c33, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c3)) BETWEEN ((((vt1.c0) ISNULL))) AND ((json_array_length(t0.c33, vt1.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED, t0);
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((((((((((((((vt0.c0) NOT NULL))OR(((vt1.c0)&(vt1.c0)))))OR(((vt1.c0) IS TRUE))))AND(((t0.c33) BETWEEN (t0.c3) AND (vt1.c0)))))AND(((t0.c3) ISNULL))))AND(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(t0.c3)))))AND(TRIM(DISTINCT vt0.c1))) WHERE ((((t0.c33) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c33) IS FALSE) IN ())) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((((((((((((((vt0.c0) NOT NULL))OR(((vt1.c0)&(vt1.c0)))))OR(((vt1.c0) IS TRUE))))AND(((t0.c33) BETWEEN (t0.c3) AND (vt1.c0)))))AND(((t0.c3) ISNULL))))AND(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(t0.c3)))))AND(TRIM(DISTINCT vt0.c1))));
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((((((((((((((vt0.c0) NOT NULL))OR(((vt1.c0)&(vt1.c0)))))OR(((vt1.c0) IS TRUE))))AND(((t0.c33) BETWEEN (t0.c3) AND (vt1.c0)))))AND(((t0.c3) ISNULL))))AND(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(t0.c3)))))AND(TRIM(DISTINCT vt0.c1))) WHERE ((((t0.c33) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c33) IS FALSE) IN ())) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((((((((((((((vt0.c0) NOT NULL))OR(((vt1.c0)&(vt1.c0)))))OR(((vt1.c0) IS TRUE))))AND(((t0.c33) BETWEEN (t0.c3) AND (vt1.c0)))))AND(((t0.c3) ISNULL))))AND(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(t0.c3)))))AND(TRIM(DISTINCT vt0.c1))));
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((((((((((((((vt0.c0) NOT NULL))OR(((vt1.c0)&(vt1.c0)))))OR(((vt1.c0) IS TRUE))))AND(((t0.c33) BETWEEN (t0.c3) AND (vt1.c0)))))AND(((t0.c3) ISNULL))))AND(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(t0.c3)))))AND(TRIM(DISTINCT vt0.c1))) WHERE ((((t0.c33) IS FALSE) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 RIGHT OUTER JOIN vt1 ON '1549127918' WHERE (((((vt0.c1)>=(t0.c3)))||(((rt0.c0)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(t0.c3)))||(((rt0.c0)/(rt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0 RIGHT OUTER JOIN vt1 ON '1549127918');
SELECT ALL COUNT(*) FROM vt0, t0, rt0 RIGHT OUTER JOIN vt1 ON '1549127918' WHERE (((((vt0.c1)>=(t0.c3)))||(((rt0.c0)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(t0.c3)))||(((rt0.c0)/(rt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0 RIGHT OUTER JOIN vt1 ON '1549127918');
SELECT ALL COUNT(*) FROM vt0, t0, rt0 RIGHT OUTER JOIN vt1 ON '1549127918' WHERE (((((vt0.c1)>=(t0.c3)))||(((rt0.c0)/(rt0.c2)))));
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(CAST(vt0.c0 AS TEXT))))OR((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(CAST(vt0.c0 AS TEXT))))OR((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(CAST(vt0.c0 AS TEXT))))OR((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(CAST(vt0.c0 AS TEXT))))OR((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(CAST(vt0.c0 AS TEXT))))OR((((vt0.c0))<=((vt0.c0))))));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((((t0.c3) IS FALSE))IS(vt0.c0)) INNER JOIN vt0 ON ((((((t0.c3) ISNULL))AND(CASE WHEN '0.31560256780407625' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t0.c33 END)))AND(TRIM(DISTINCT vt1.c0, t0.c3))) WHERE (CAST('2135491231' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('2135491231' AS REAL)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((t0.c3) IS FALSE))IS(vt0.c0)) INNER JOIN vt0 ON ((((((t0.c3) ISNULL))AND(CASE WHEN '0.31560256780407625' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t0.c33 END)))AND(TRIM(DISTINCT vt1.c0, t0.c3))));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((((t0.c3) IS FALSE))IS(vt0.c0)) INNER JOIN vt0 ON ((((((t0.c3) ISNULL))AND(CASE WHEN '0.31560256780407625' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t0.c33 END)))AND(TRIM(DISTINCT vt1.c0, t0.c3))) WHERE (CAST('2135491231' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('2135491231' AS REAL)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((t0.c3) IS FALSE))IS(vt0.c0)) INNER JOIN vt0 ON ((((((t0.c3) ISNULL))AND(CASE WHEN '0.31560256780407625' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t0.c33 END)))AND(TRIM(DISTINCT vt1.c0, t0.c3))));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((((t0.c3) IS FALSE))IS(vt0.c0)) INNER JOIN vt0 ON ((((((t0.c3) ISNULL))AND(CASE WHEN '0.31560256780407625' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t0.c33 END)))AND(TRIM(DISTINCT vt1.c0, t0.c3))) WHERE (CAST('2135491231' AS REAL));
SELECT * FROM t0, vt0, rt0 WHERE (((((((((ABS(DISTINCT rt0.c1))AND(t0.c33 COLLATE BINARY)))OR(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)))))AND(((((rt0.c2)OR(vt0.c1)))OR(rt0.c2)))))OR(t0.c3))) ORDER BY ((((((vt0.c1)OR(rt0.c0)))OR(vt0.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((ABS(DISTINCT rt0.c1))AND(t0.c33 COLLATE BINARY)))OR(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)))))AND(((((rt0.c2)OR(vt0.c1)))OR(rt0.c2)))))OR(t0.c3))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((vt0.c1)OR(rt0.c0)))OR(vt0.c1))) IS TRUE) ASC);
SELECT * FROM t0, vt0, rt0 WHERE (((((((((ABS(DISTINCT rt0.c1))AND(t0.c33 COLLATE BINARY)))OR(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)))))AND(((((rt0.c2)OR(vt0.c1)))OR(rt0.c2)))))OR(t0.c3))) ORDER BY ((((((vt0.c1)OR(rt0.c0)))OR(vt0.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((ABS(DISTINCT rt0.c1))AND(t0.c33 COLLATE BINARY)))OR(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)))))AND(((((rt0.c2)OR(vt0.c1)))OR(rt0.c2)))))OR(t0.c3))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((vt0.c1)OR(rt0.c0)))OR(vt0.c1))) IS TRUE) ASC);
SELECT * FROM t0, vt0, rt0 WHERE (((((((((ABS(DISTINCT rt0.c1))AND(t0.c33 COLLATE BINARY)))OR(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)))))AND(((((rt0.c2)OR(vt0.c1)))OR(rt0.c2)))))OR(t0.c3))) ORDER BY ((((((vt0.c1)OR(rt0.c0)))OR(vt0.c1))) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt0 WHERE ((((((((1058302888))=((NULL))))OR(CASE WHEN vt0.c0 THEN rt0.c0 END)))OR(((((rt0.c1)AND(t0.c3)))AND(t0.c3))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (((((((((1058302888))==((NULL))))OR(CASE WHEN vt0.c0 THEN rt0.c0 END)))OR(((((rt0.c1)AND(t0.c3)))AND(t0.c3))))) IS TRUE)  as count FROM t0, vt0, vt1, rt0 ORDER BY x'');
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt0 WHERE ((((((((1058302888))=((NULL))))OR(CASE WHEN vt0.c0 THEN rt0.c0 END)))OR(((((rt0.c1)AND(t0.c3)))AND(t0.c3))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (((((((((1058302888))==((NULL))))OR(CASE WHEN vt0.c0 THEN rt0.c0 END)))OR(((((rt0.c1)AND(t0.c3)))AND(t0.c3))))) IS TRUE)  as count FROM t0, vt0, vt1, rt0 ORDER BY x'');
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt0 WHERE ((((((((1058302888))=((NULL))))OR(CASE WHEN vt0.c0 THEN rt0.c0 END)))OR(((((rt0.c1)AND(t0.c3)))AND(t0.c3))))) ORDER BY x'';
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN vt0 ON 0Xffffffffeeafdbac WHERE (CAST(((((rt0.c0)OR(vt1.c0)))AND(rt0.c1)) AS BLOB)) ORDER BY CAST((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c0)OR(vt1.c0)))AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN vt0 ON 0xffffffffeeafdbac ORDER BY CAST((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))) AS BLOB) ASC);
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN vt0 ON 0Xffffffffeeafdbac WHERE (CAST(((((rt0.c0)OR(vt1.c0)))AND(rt0.c1)) AS BLOB)) ORDER BY CAST((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c0)OR(vt1.c0)))AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN vt0 ON 0xffffffffeeafdbac ORDER BY CAST((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))) AS BLOB) ASC);
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN vt0 ON 0Xffffffffeeafdbac WHERE (CAST(((((rt0.c0)OR(vt1.c0)))AND(rt0.c1)) AS BLOB)) ORDER BY CAST((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((t0.c33) NOT NULL))LIKE(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((t0.c33) NOT NULL))LIKE(vt0.c1))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((t0.c33) NOT NULL))LIKE(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((t0.c33) NOT NULL))LIKE(vt0.c1))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((t0.c33) NOT NULL))LIKE(vt0.c1)));
SELECT ALL * FROM vt1 INDEXED BY i91 CROSS JOIN rt0 ON CAST(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC) WHERE ((NOT (1146258318))) ORDER BY (NOT (CAST(rt0.c2 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (1146258318))) IS TRUE)  as count FROM vt1 INDEXED BY i91 CROSS JOIN rt0 ON CAST(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC) ORDER BY (NOT (CAST(rt0.c2 AS NUMERIC)))  NULLS LAST);
SELECT ALL * FROM vt1 INDEXED BY i91 CROSS JOIN rt0 ON CAST(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC) WHERE ((NOT (1146258318))) ORDER BY (NOT (CAST(rt0.c2 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (1146258318))) IS TRUE)  as count FROM vt1 INDEXED BY i91 CROSS JOIN rt0 ON CAST(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC) ORDER BY (NOT (CAST(rt0.c2 AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((+ (x'4a60'))) NOT NULL) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((+ (x'4a60'))) NOT NULL));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((+ (x'4a60'))) NOT NULL) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((+ (x'4a60'))) NOT NULL));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((+ (x'4a60'))) NOT NULL) WHERE (rt0.c1);
SELECT ALL * FROM t0 INNER JOIN rt0 ON CASE (+ (t0.c33))  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((0.5040162653029747) NOT NULL) END WHERE (CASE WHEN ((((-2.90464852E8)OR(rt0.c1)))AND(rt0.c2)) THEN TRIM(DISTINCT rt0.c2, rt0.c1) ELSE ((t0.c33)>>('1e500')) END) ORDER BY ((rt0.c2) NOT BETWEEN ((~ (rt0.c0))) AND (CASE WHEN t0.c33 THEN 0.38201247636481517 WHEN t0.c33 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c33 END)), (((rt0.c1, rt0.c0, NULL)) NOT BETWEEN ((rt0.c1, (((t0.c33))=((t0.c33))), ((rt0.c0) IS FALSE))) AND ((CAST(rt0.c2 AS TEXT), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c3)), ((rt0.c0)LIKE(0Xffffffffba944e7d))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((-2.90464852E8)OR(rt0.c1)))AND(rt0.c2)) THEN TRIM(DISTINCT rt0.c2, rt0.c1) ELSE ((t0.c33)>>('1e500')) END) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE (+ (t0.c33))  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((0.5040162653029747) NOT NULL) END ORDER BY ((rt0.c2) NOT BETWEEN ((~ (rt0.c0))) AND (CASE WHEN t0.c33 THEN 0.38201247636481517 WHEN t0.c33 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c33 END)), (((rt0.c1, rt0.c0, NULL)) NOT BETWEEN ((rt0.c1, (((t0.c33))=((t0.c33))), ((rt0.c0) IS FALSE))) AND ((CAST(rt0.c2 AS TEXT), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c3)), ((rt0.c0)LIKE(0xffffffffba944e7d))))) DESC);
SELECT ALL * FROM t0 INNER JOIN rt0 ON CASE (+ (t0.c33))  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((0.5040162653029747) NOT NULL) END WHERE (CASE WHEN ((((-2.90464852E8)OR(rt0.c1)))AND(rt0.c2)) THEN TRIM(DISTINCT rt0.c2, rt0.c1) ELSE ((t0.c33)>>('1e500')) END) ORDER BY ((rt0.c2) NOT BETWEEN ((~ (rt0.c0))) AND (CASE WHEN t0.c33 THEN 0.38201247636481517 WHEN t0.c33 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c33 END)), (((rt0.c1, rt0.c0, NULL)) NOT BETWEEN ((rt0.c1, (((t0.c33))=((t0.c33))), ((rt0.c0) IS FALSE))) AND ((CAST(rt0.c2 AS TEXT), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c3)), ((rt0.c0)LIKE(0Xffffffffba944e7d))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((-2.90464852E8)OR(rt0.c1)))AND(rt0.c2)) THEN TRIM(DISTINCT rt0.c2, rt0.c1) ELSE ((t0.c33)>>('1e500')) END) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE (+ (t0.c33))  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((0.5040162653029747) NOT NULL) END ORDER BY ((rt0.c2) NOT BETWEEN ((~ (rt0.c0))) AND (CASE WHEN t0.c33 THEN 0.38201247636481517 WHEN t0.c33 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c33 END)), (((rt0.c1, rt0.c0, NULL)) NOT BETWEEN ((rt0.c1, (((t0.c33))=((t0.c33))), ((rt0.c0) IS FALSE))) AND ((CAST(rt0.c2 AS TEXT), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c3)), ((rt0.c0)LIKE(0xffffffffba944e7d))))) DESC);
SELECT ALL * FROM t0 INNER JOIN rt0 ON CASE (+ (t0.c33))  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((0.5040162653029747) NOT NULL) END WHERE (CASE WHEN ((((-2.90464852E8)OR(rt0.c1)))AND(rt0.c2)) THEN TRIM(DISTINCT rt0.c2, rt0.c1) ELSE ((t0.c33)>>('1e500')) END) ORDER BY ((rt0.c2) NOT BETWEEN ((~ (rt0.c0))) AND (CASE WHEN t0.c33 THEN 0.38201247636481517 WHEN t0.c33 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c33 END)), (((rt0.c1, rt0.c0, NULL)) NOT BETWEEN ((rt0.c1, (((t0.c33))=((t0.c33))), ((rt0.c0) IS FALSE))) AND ((CAST(rt0.c2 AS TEXT), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c3)), ((rt0.c0)LIKE(0Xffffffffba944e7d))))) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (IFNULL(((0.6728820477451624) ISNULL), LENGTH(vt1.c0))) ORDER BY vt1.c0 ASC  NULLS LAST, (('-2072223984')GLOB((~ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((0.6728820477451624) ISNULL), LENGTH(vt1.c0))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY vt1.c0 ASC  NULLS LAST, (('-2072223984')GLOB((~ (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (IFNULL(((0.6728820477451624) ISNULL), LENGTH(vt1.c0))) ORDER BY vt1.c0 ASC  NULLS LAST, (('-2072223984')GLOB((~ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((0.6728820477451624) ISNULL), LENGTH(vt1.c0))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY vt1.c0 ASC  NULLS LAST, (('-2072223984')GLOB((~ (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (IFNULL(((0.6728820477451624) ISNULL), LENGTH(vt1.c0))) ORDER BY vt1.c0 ASC  NULLS LAST, (('-2072223984')GLOB((~ (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (0X1e0927dc) ORDER BY MAX('-1938632897', vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0x1e0927dc) IS TRUE)  as count FROM vt0 ORDER BY MAX('-1938632897', vt0.c0 COLLATE BINARY));
SELECT ALL * FROM vt0 WHERE (0X1e0927dc) ORDER BY MAX('-1938632897', vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0x1e0927dc) IS TRUE)  as count FROM vt0 ORDER BY MAX('-1938632897', vt0.c0 COLLATE BINARY));
SELECT ALL * FROM vt0 WHERE (0X1e0927dc) ORDER BY MAX('-1938632897', vt0.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN NULL THEN vt1.c0 END IN (((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN NULL THEN vt1.c0 END IN (((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN NULL THEN vt1.c0 END IN (((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN NULL THEN vt1.c0 END IN (((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN NULL THEN vt1.c0 END IN (((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))));
SELECT * FROM rt0, vt0, t0 WHERE (((((((((x'')OR(((rt0.c2)%('葘䲽A>M')))))AND(((t0.c3)|(rt0.c2)))))OR((((t0.c33, vt0.c1, vt0.c1))>=((rt0.c0, rt0.c2, NULL))))))OR(((x'7e97') NOTNULL)))) ORDER BY ((((t0.c33) IS FALSE))>=(((vt0.c1) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(((rt0.c2)%('葘䲽A>M')))))AND(((t0.c3)|(rt0.c2)))))OR((((t0.c33, vt0.c1, vt0.c1))>=((rt0.c0, rt0.c2, NULL))))))OR(((x'7e97') NOTNULL)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((t0.c33) IS FALSE))>=(((vt0.c1) NOT NULL))) DESC);
SELECT * FROM rt0, vt0, t0 WHERE (((((((((x'')OR(((rt0.c2)%('葘䲽A>M')))))AND(((t0.c3)|(rt0.c2)))))OR((((t0.c33, vt0.c1, vt0.c1))>=((rt0.c0, rt0.c2, NULL))))))OR(((x'7e97') NOTNULL)))) ORDER BY ((((t0.c33) IS FALSE))>=(((vt0.c1) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(((rt0.c2)%('葘䲽A>M')))))AND(((t0.c3)|(rt0.c2)))))OR((((t0.c33, vt0.c1, vt0.c1))>=((rt0.c0, rt0.c2, NULL))))))OR(((x'7e97') NOTNULL)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((t0.c33) IS FALSE))>=(((vt0.c1) NOT NULL))) DESC);
SELECT * FROM rt0, vt0, t0 WHERE (((((((((x'')OR(((rt0.c2)%('葘䲽A>M')))))AND(((t0.c3)|(rt0.c2)))))OR((((t0.c33, vt0.c1, vt0.c1))>=((rt0.c0, rt0.c2, NULL))))))OR(((x'7e97') NOTNULL)))) ORDER BY ((((t0.c33) IS FALSE))>=(((vt0.c1) NOT NULL))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (((CAST(NULL AS INTEGER))==(CAST(t0.c33 AS REAL)))) ORDER BY 0.6809267313128122  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS INTEGER))=(CAST(t0.c33 AS REAL)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY 0.6809267313128122  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (((CAST(NULL AS INTEGER))==(CAST(t0.c33 AS REAL)))) ORDER BY 0.6809267313128122  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS INTEGER))=(CAST(t0.c33 AS REAL)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY 0.6809267313128122  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (((CAST(NULL AS INTEGER))==(CAST(t0.c33 AS REAL)))) ORDER BY 0.6809267313128122  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE ('SZ02I');
SELECT SUM(count) FROM (SELECT ALL (('SZ02I') IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE ('SZ02I');
SELECT SUM(count) FROM (SELECT ALL (('SZ02I') IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE ('SZ02I');
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (((~ (x'')))=((~ (vt0.c1)))) INNER JOIN rt0 ON (((t0.c3 IN (vt0.c1)))<=(rt0.c1 COLLATE BINARY)) CROSS JOIN t0 ON ((((vt1.c0)+(rt0.c1))) NOTNULL) WHERE (((vt1.c0)<=(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<=(vt0.c1))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((~ (x'')))=((~ (vt0.c1)))) INNER JOIN rt0 ON (((t0.c3 IN (vt0.c1)))<=(rt0.c1 COLLATE BINARY)) CROSS JOIN t0 ON ((((vt1.c0)+(rt0.c1))) NOTNULL));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (((~ (x'')))=((~ (vt0.c1)))) INNER JOIN rt0 ON (((t0.c3 IN (vt0.c1)))<=(rt0.c1 COLLATE BINARY)) CROSS JOIN t0 ON ((((vt1.c0)+(rt0.c1))) NOTNULL) WHERE (((vt1.c0)<=(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<=(vt0.c1))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((~ (x'')))=((~ (vt0.c1)))) INNER JOIN rt0 ON (((t0.c3 IN (vt0.c1)))<=(rt0.c1 COLLATE BINARY)) CROSS JOIN t0 ON ((((vt1.c0)+(rt0.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt0.c1) NOTNULL)) ISNULL)) ORDER BY ((((((t0.c3)AND(vt0.c1)))OR(t0.c33))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((t0.c3)AND(vt0.c1)))OR(t0.c33))) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt0.c1) NOTNULL)) ISNULL)) ORDER BY ((((((t0.c3)AND(vt0.c1)))OR(t0.c33))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((t0.c3)AND(vt0.c1)))OR(t0.c33))) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt0.c1) NOTNULL)) ISNULL)) ORDER BY ((((((t0.c3)AND(vt0.c1)))OR(t0.c33))) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END COLLATE BINARY);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON INSTR(((rt0.c2)<(vt0.c1)), ((vt0.c0)||(rt0.c0))) WHERE ('') ORDER BY (((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c1 END, NULL, (~ (rt0.c2))))<>(((vt0.c0 IN (vt0.c1, rt0.c2, rt0.c2)), ((vt0.c1)OR(vt0.c1)), vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON INSTR(((rt0.c2)<(vt0.c1)), ((vt0.c0)||(rt0.c0))) ORDER BY (((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c1 END, NULL, (~ (rt0.c2))))<>(((vt0.c0 IN (vt0.c1, rt0.c2, rt0.c2)), ((vt0.c1)OR(vt0.c1)), vt0.c0))) DESC);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON INSTR(((rt0.c2)<(vt0.c1)), ((vt0.c0)||(rt0.c0))) WHERE ('') ORDER BY (((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c1 END, NULL, (~ (rt0.c2))))<>(((vt0.c0 IN (vt0.c1, rt0.c2, rt0.c2)), ((vt0.c1)OR(vt0.c1)), vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON INSTR(((rt0.c2)<(vt0.c1)), ((vt0.c0)||(rt0.c0))) ORDER BY (((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c1 END, NULL, (~ (rt0.c2))))<>(((vt0.c0 IN (vt0.c1, rt0.c2, rt0.c2)), ((vt0.c1)OR(vt0.c1)), vt0.c0))) DESC);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON INSTR(((rt0.c2)<(vt0.c1)), ((vt0.c0)||(rt0.c0))) WHERE ('') ORDER BY (((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c1 END, NULL, (~ (rt0.c2))))<>(((vt0.c0 IN (vt0.c1, rt0.c2, rt0.c2)), ((vt0.c1)OR(vt0.c1)), vt0.c0))) DESC;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2)) END RIGHT OUTER JOIN vt0 ON ((((((((rt0.c0)OR(vt1.c0)))OR(rt0.c1)))AND('-599316805')))AND(rt0.c1)) COLLATE NOCASE WHERE ((((vt0.c1)) NOT BETWEEN ((((((155244486)OR(vt1.c0)))OR(vt0.c0)))) AND ((vt1.c0)))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((((155244486)OR(vt1.c0)))OR(vt0.c0)))) AND ((vt1.c0)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2)) END RIGHT OUTER JOIN vt0 ON ((((((((rt0.c0)OR(vt1.c0)))OR(rt0.c1)))AND('-599316805')))AND(rt0.c1)) COLLATE NOCASE ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2)) END RIGHT OUTER JOIN vt0 ON ((((((((rt0.c0)OR(vt1.c0)))OR(rt0.c1)))AND('-599316805')))AND(rt0.c1)) COLLATE NOCASE WHERE ((((vt0.c1)) NOT BETWEEN ((((((155244486)OR(vt1.c0)))OR(vt0.c0)))) AND ((vt1.c0)))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((((155244486)OR(vt1.c0)))OR(vt0.c0)))) AND ((vt1.c0)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2)) END RIGHT OUTER JOIN vt0 ON ((((((((rt0.c0)OR(vt1.c0)))OR(rt0.c1)))AND('-599316805')))AND(rt0.c1)) COLLATE NOCASE ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS REAL)  NULLS LAST);
SELECT * FROM rt0 WHERE (NULL) ORDER BY (CAST(rt0.c1 AS REAL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c1 AS REAL) IN ()) ASC);
SELECT * FROM rt0 WHERE (NULL) ORDER BY (CAST(rt0.c1 AS REAL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c1 AS REAL) IN ()) ASC);
SELECT * FROM rt0 WHERE (NULL) ORDER BY (CAST(rt0.c1 AS REAL) IN ()) ASC;
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE (CASE TRIM(DISTINCT rt0.c1, -1798608289)  WHEN ((vt1.c0) ISNULL) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) END) ORDER BY CASE WHEN NULL THEN ((vt0.c0) NOTNULL) WHEN vt0.c1 THEN ((((t0.c33)AND(rt0.c0)))OR(t0.c3)) WHEN vt0.c0 THEN ((((((((rt0.c1)AND(rt0.c0)))AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)) WHEN (t0.c3 IN ()) THEN ((((((((rt0.c1)OR(vt0.c1)))OR(NULL)))AND('-1238938678')))AND(t0.c3)) WHEN (((vt0.c1))<=((rt0.c2))) THEN (((vt0.c1)) NOT BETWEEN ((t0.c33)) AND ((t0.c3))) ELSE ((rt0.c0)-(7.29343025E8)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE TRIM(DISTINCT rt0.c1, -1798608289)  WHEN ((vt1.c0) ISNULL) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY CASE WHEN NULL THEN ((vt0.c0) NOTNULL) WHEN vt0.c1 THEN ((((t0.c33)AND(rt0.c0)))OR(t0.c3)) WHEN vt0.c0 THEN ((((((((rt0.c1)AND(rt0.c0)))AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)) WHEN (t0.c3 IN ()) THEN ((((((((rt0.c1)OR(vt0.c1)))OR(NULL)))AND('-1238938678')))AND(t0.c3)) WHEN (((vt0.c1))<=((rt0.c2))) THEN (((vt0.c1)) NOT BETWEEN ((t0.c33)) AND ((t0.c3))) ELSE ((rt0.c0)-(7.29343025E8)) END DESC);
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE (CASE TRIM(DISTINCT rt0.c1, -1798608289)  WHEN ((vt1.c0) ISNULL) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) END) ORDER BY CASE WHEN NULL THEN ((vt0.c0) NOTNULL) WHEN vt0.c1 THEN ((((t0.c33)AND(rt0.c0)))OR(t0.c3)) WHEN vt0.c0 THEN ((((((((rt0.c1)AND(rt0.c0)))AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)) WHEN (t0.c3 IN ()) THEN ((((((((rt0.c1)OR(vt0.c1)))OR(NULL)))AND('-1238938678')))AND(t0.c3)) WHEN (((vt0.c1))<=((rt0.c2))) THEN (((vt0.c1)) NOT BETWEEN ((t0.c33)) AND ((t0.c3))) ELSE ((rt0.c0)-(7.29343025E8)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE TRIM(DISTINCT rt0.c1, -1798608289)  WHEN ((vt1.c0) ISNULL) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY CASE WHEN NULL THEN ((vt0.c0) NOTNULL) WHEN vt0.c1 THEN ((((t0.c33)AND(rt0.c0)))OR(t0.c3)) WHEN vt0.c0 THEN ((((((((rt0.c1)AND(rt0.c0)))AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)) WHEN (t0.c3 IN ()) THEN ((((((((rt0.c1)OR(vt0.c1)))OR(NULL)))AND('-1238938678')))AND(t0.c3)) WHEN (((vt0.c1))<=((rt0.c2))) THEN (((vt0.c1)) NOT BETWEEN ((t0.c33)) AND ((t0.c3))) ELSE ((rt0.c0)-(7.29343025E8)) END DESC);
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE (CASE TRIM(DISTINCT rt0.c1, -1798608289)  WHEN ((vt1.c0) ISNULL) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) END) ORDER BY CASE WHEN NULL THEN ((vt0.c0) NOTNULL) WHEN vt0.c1 THEN ((((t0.c33)AND(rt0.c0)))OR(t0.c3)) WHEN vt0.c0 THEN ((((((((rt0.c1)AND(rt0.c0)))AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)) WHEN (t0.c3 IN ()) THEN ((((((((rt0.c1)OR(vt0.c1)))OR(NULL)))AND('-1238938678')))AND(t0.c3)) WHEN (((vt0.c1))<=((rt0.c2))) THEN (((vt0.c1)) NOT BETWEEN ((t0.c33)) AND ((t0.c3))) ELSE ((rt0.c0)-(7.29343025E8)) END DESC;
SELECT ALL * FROM vt0, vt1, t0 WHERE (t0.c3) ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE, CAST((~ (t0.c3)) AS BLOB) DESC  NULLS LAST, TRIM(DISTINCT (- (vt0.c0)), ((NULL)|(t0.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE, CAST((~ (t0.c3)) AS BLOB) DESC  NULLS LAST, TRIM(DISTINCT (- (vt0.c0)), ((NULL)|(t0.c3)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0 WHERE (t0.c3) ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE, CAST((~ (t0.c3)) AS BLOB) DESC  NULLS LAST, TRIM(DISTINCT (- (vt0.c0)), ((NULL)|(t0.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE, CAST((~ (t0.c3)) AS BLOB) DESC  NULLS LAST, TRIM(DISTINCT (- (vt0.c0)), ((NULL)|(t0.c3)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0 WHERE (t0.c3) ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE, CAST((~ (t0.c3)) AS BLOB) DESC  NULLS LAST, TRIM(DISTINCT (- (vt0.c0)), ((NULL)|(t0.c3)))  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(t0.c3)))>(((t0.c33) BETWEEN (t0.c33) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c0)))AND(t0.c3)))>(((t0.c33) BETWEEN (t0.c33) AND (vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(t0.c3)))>(((t0.c33) BETWEEN (t0.c33) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c0)))AND(t0.c3)))>(((t0.c33) BETWEEN (t0.c33) AND (vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(t0.c3)))>(((t0.c33) BETWEEN (t0.c33) AND (vt0.c1)))));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) NOTNULL))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY NULLIF(((vt1.c0) IS FALSE), vt1.c0 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOTNULL))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY NULLIF(((vt1.c0) IS FALSE), vt1.c0 COLLATE BINARY)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) NOTNULL))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY NULLIF(((vt1.c0) IS FALSE), vt1.c0 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOTNULL))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY NULLIF(((vt1.c0) IS FALSE), vt1.c0 COLLATE BINARY)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) NOTNULL))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY NULLIF(((vt1.c0) IS FALSE), vt1.c0 COLLATE BINARY)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE ((~ (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE ((~ (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE ((~ (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((t0.c33 COLLATE NOCASE))<=(((+ (rt0.c2))))) WHERE (((((((((CAST(rt0.c2 AS NUMERIC))OR((- (NULL)))))AND((((rt0.c2)) NOT BETWEEN ((-1544355251)) AND ((t0.c33))))))AND(CASE rt0.c1  WHEN t0.c3 THEN t0.c3 WHEN rt0.c0 THEN t0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE '-1864702854' END)))AND(((t0.c3)AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c2 AS NUMERIC))OR((- (NULL)))))AND((((rt0.c2)) NOT BETWEEN ((-1544355251)) AND ((t0.c33))))))AND(CASE rt0.c1  WHEN t0.c3 THEN t0.c3 WHEN rt0.c0 THEN t0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE '-1864702854' END)))AND(((t0.c3)AND(rt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((t0.c33 COLLATE NOCASE))<=(((+ (rt0.c2))))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((t0.c33 COLLATE NOCASE))<=(((+ (rt0.c2))))) WHERE (((((((((CAST(rt0.c2 AS NUMERIC))OR((- (NULL)))))AND((((rt0.c2)) NOT BETWEEN ((-1544355251)) AND ((t0.c33))))))AND(CASE rt0.c1  WHEN t0.c3 THEN t0.c3 WHEN rt0.c0 THEN t0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE '-1864702854' END)))AND(((t0.c3)AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c2 AS NUMERIC))OR((- (NULL)))))AND((((rt0.c2)) NOT BETWEEN ((-1544355251)) AND ((t0.c33))))))AND(CASE rt0.c1  WHEN t0.c3 THEN t0.c3 WHEN rt0.c0 THEN t0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE '-1864702854' END)))AND(((t0.c3)AND(rt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((t0.c33 COLLATE NOCASE))<=(((+ (rt0.c2))))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((t0.c33 COLLATE NOCASE))<=(((+ (rt0.c2))))) WHERE (((((((((CAST(rt0.c2 AS NUMERIC))OR((- (NULL)))))AND((((rt0.c2)) NOT BETWEEN ((-1544355251)) AND ((t0.c33))))))AND(CASE rt0.c1  WHEN t0.c3 THEN t0.c3 WHEN rt0.c0 THEN t0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE '-1864702854' END)))AND(((t0.c3)AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1)/(vt0.c1)) THEN 0Xffffffff8de6f51d WHEN CAST(vt0.c1 AS TEXT) THEN (((vt0.c1))>=((vt0.c1))) WHEN vt0.c1 THEN CAST(vt0.c1 AS BLOB) ELSE vt0.c0 COLLATE RTRIM END) ORDER BY (((- (NULL)))>>(((vt0.c1) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)/(vt0.c1)) THEN 0xffffffff8de6f51d WHEN CAST(vt0.c1 AS TEXT) THEN (((vt0.c1))>=((vt0.c1))) WHEN vt0.c1 THEN CAST(vt0.c1 AS BLOB) ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY (((- (NULL)))>>(((vt0.c1) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1)/(vt0.c1)) THEN 0Xffffffff8de6f51d WHEN CAST(vt0.c1 AS TEXT) THEN (((vt0.c1))>=((vt0.c1))) WHEN vt0.c1 THEN CAST(vt0.c1 AS BLOB) ELSE vt0.c0 COLLATE RTRIM END) ORDER BY (((- (NULL)))>>(((vt0.c1) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)/(vt0.c1)) THEN 0xffffffff8de6f51d WHEN CAST(vt0.c1 AS TEXT) THEN (((vt0.c1))>=((vt0.c1))) WHEN vt0.c1 THEN CAST(vt0.c1 AS BLOB) ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY (((- (NULL)))>>(((vt0.c1) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1)/(vt0.c1)) THEN 0Xffffffff8de6f51d WHEN CAST(vt0.c1 AS TEXT) THEN (((vt0.c1))>=((vt0.c1))) WHEN vt0.c1 THEN CAST(vt0.c1 AS BLOB) ELSE vt0.c0 COLLATE RTRIM END) ORDER BY (((- (NULL)))>>(((vt0.c1) IS TRUE))) DESC;
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((CASE t0.c3  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN t0.c33 WHEN t0.c33 THEN t0.c33 END)GLOB(((((vt0.c0)AND(t0.c33)))OR(vt0.c0))))) ORDER BY CASE WHEN t0.c3 THEN vt0.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c3  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN t0.c33 WHEN t0.c33 THEN t0.c33 END)GLOB(((((vt0.c0)AND(t0.c33)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE WHEN t0.c3 THEN vt0.c0 COLLATE BINARY END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((CASE t0.c3  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN t0.c33 WHEN t0.c33 THEN t0.c33 END)GLOB(((((vt0.c0)AND(t0.c33)))OR(vt0.c0))))) ORDER BY CASE WHEN t0.c3 THEN vt0.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c3  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN t0.c33 WHEN t0.c33 THEN t0.c33 END)GLOB(((((vt0.c0)AND(t0.c33)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE WHEN t0.c3 THEN vt0.c0 COLLATE BINARY END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((CASE t0.c3  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN t0.c33 WHEN t0.c33 THEN t0.c33 END)GLOB(((((vt0.c0)AND(t0.c33)))OR(vt0.c0))))) ORDER BY CASE WHEN t0.c3 THEN vt0.c0 COLLATE BINARY END  NULLS LAST;
SELECT ALL * FROM rt0, t0, vt1 WHERE (((((rt0.c2) NOT BETWEEN (t0.c33) AND (t0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (t0.c33) AND (t0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (((((rt0.c2) NOT BETWEEN (t0.c33) AND (t0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (t0.c33) AND (t0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (((((rt0.c2) NOT BETWEEN (t0.c33) AND (t0.c3))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((~ (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((~ (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((~ (rt0.c2)) IN ()));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)AND(''))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) IS FALSE)  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)AND(''))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) IS FALSE)  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)AND(''))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) IS FALSE)  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)AND(''))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) IS FALSE)  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)AND(''))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) IS FALSE)  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ());
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2) BETWEEN (NULLIF(vt0.c0, rt0.c2)) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (NULLIF(vt0.c0, rt0.c2)) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2) BETWEEN (NULLIF(vt0.c0, rt0.c2)) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (NULLIF(vt0.c0, rt0.c2)) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2) BETWEEN (NULLIF(vt0.c0, rt0.c2)) AND (((vt0.c0) IS FALSE))));
SELECT ALL * FROM vt1, t0, vt0 WHERE (((CAST(t0.c3 AS INTEGER))AND(((vt0.c0)>(t0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c3 AS INTEGER))AND(((vt0.c0)>(t0.c3))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((CAST(t0.c3 AS INTEGER))AND(((vt0.c0)>(t0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c3 AS INTEGER))AND(((vt0.c0)>(t0.c3))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((CAST(t0.c3 AS INTEGER))AND(((vt0.c0)>(t0.c3)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) IS TRUE) AS REAL)) ORDER BY CAST(x'' AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) IS TRUE) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(x'' AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) IS TRUE) AS REAL)) ORDER BY CAST(x'' AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) IS TRUE) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(x'' AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) IS TRUE) AS REAL)) ORDER BY CAST(x'' AS REAL);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((CAST('{3''Dp}vV' AS NUMERIC)) NOT BETWEEN (CHAR(rt0.c2)) AND (rt0.c1 COLLATE RTRIM)) WHERE (0xffffffff8a08a973) ORDER BY ((TYPEOF(0x100c3d7c)) BETWEEN (CASE WHEN rt0.c2 THEN 1.116876276E9 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) AND (CASE rt0.c1  WHEN '-1088340306' THEN vt1.c0 END)) DESC  NULLS LAST, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff8a08a973) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((CAST('{3''Dp}vV' AS NUMERIC)) NOT BETWEEN (CHAR(rt0.c2)) AND (rt0.c1 COLLATE RTRIM)) ORDER BY ((TYPEOF(0X100c3d7c)) BETWEEN (CASE WHEN rt0.c2 THEN 1.116876276E9 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) AND (CASE rt0.c1  WHEN '-1088340306' THEN vt1.c0 END)) DESC  NULLS LAST, NULL DESC  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((CAST('{3''Dp}vV' AS NUMERIC)) NOT BETWEEN (CHAR(rt0.c2)) AND (rt0.c1 COLLATE RTRIM)) WHERE (0xffffffff8a08a973) ORDER BY ((TYPEOF(0x100c3d7c)) BETWEEN (CASE WHEN rt0.c2 THEN 1.116876276E9 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) AND (CASE rt0.c1  WHEN '-1088340306' THEN vt1.c0 END)) DESC  NULLS LAST, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff8a08a973) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((CAST('{3''Dp}vV' AS NUMERIC)) NOT BETWEEN (CHAR(rt0.c2)) AND (rt0.c1 COLLATE RTRIM)) ORDER BY ((TYPEOF(0X100c3d7c)) BETWEEN (CASE WHEN rt0.c2 THEN 1.116876276E9 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) AND (CASE rt0.c1  WHEN '-1088340306' THEN vt1.c0 END)) DESC  NULLS LAST, NULL DESC  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((CAST('{3''Dp}vV' AS NUMERIC)) NOT BETWEEN (CHAR(rt0.c2)) AND (rt0.c1 COLLATE RTRIM)) WHERE (0xffffffff8a08a973) ORDER BY ((TYPEOF(0x100c3d7c)) BETWEEN (CASE WHEN rt0.c2 THEN 1.116876276E9 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) AND (CASE rt0.c1  WHEN '-1088340306' THEN vt1.c0 END)) DESC  NULLS LAST, NULL DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (NOT (((rt0.c2)>(rt0.c1)))) WHERE ((~ (((rt0.c2)|(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)|(rt0.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (NOT (((rt0.c2)>(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (NOT (((rt0.c2)>(rt0.c1)))) WHERE ((~ (((rt0.c2)|(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)|(rt0.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (NOT (((rt0.c2)>(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (NOT (((rt0.c2)>(rt0.c1)))) WHERE ((~ (((rt0.c2)|(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((('-1103079801' IN ())) NOTNULL) WHERE (((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((('-1103079801' IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((('-1103079801' IN ())) NOTNULL) WHERE (((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((('-1103079801' IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((('-1103079801' IN ())) NOTNULL) WHERE (((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON CAST(((((((((rt0.c2)AND(vt1.c0)))OR(t0.c33)))AND(rt0.c1)))AND('b#^TfQ0sj')) AS BLOB) RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c0 COLLATE RTRIM THEN (((rt0.c2))>=((t0.c33))) ELSE ((vt1.c0) NOTNULL) END WHERE (CASE ((rt0.c1)/(rt0.c1))  WHEN ((t0.c33) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN (~ (vt1.c0)) ELSE ((0.12536687463706986)>=(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)/(rt0.c1))  WHEN ((t0.c33) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN (~ (vt1.c0)) ELSE ((0.12536687463706986)>=(vt1.c0)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CAST(((((((((rt0.c2)AND(vt1.c0)))OR(t0.c33)))AND(rt0.c1)))AND('b#^TfQ0sj')) AS BLOB) RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c0 COLLATE RTRIM THEN (((rt0.c2))>=((t0.c33))) ELSE ((vt1.c0) NOTNULL) END);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON CAST(((((((((rt0.c2)AND(vt1.c0)))OR(t0.c33)))AND(rt0.c1)))AND('b#^TfQ0sj')) AS BLOB) RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c0 COLLATE RTRIM THEN (((rt0.c2))>=((t0.c33))) ELSE ((vt1.c0) NOTNULL) END WHERE (CASE ((rt0.c1)/(rt0.c1))  WHEN ((t0.c33) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN (~ (vt1.c0)) ELSE ((0.12536687463706986)>=(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)/(rt0.c1))  WHEN ((t0.c33) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN (~ (vt1.c0)) ELSE ((0.12536687463706986)>=(vt1.c0)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CAST(((((((((rt0.c2)AND(vt1.c0)))OR(t0.c33)))AND(rt0.c1)))AND('b#^TfQ0sj')) AS BLOB) RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c0 COLLATE RTRIM THEN (((rt0.c2))>=((t0.c33))) ELSE ((vt1.c0) NOTNULL) END);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM t0 WHERE (((((((t0.c3)AND(t0.c33)))OR(t0.c33))) BETWEEN ((- (t0.c3))) AND (CAST(t0.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c3)AND(t0.c33)))OR(t0.c33))) BETWEEN ((- (t0.c3))) AND (CAST(t0.c3 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c3)AND(t0.c33)))OR(t0.c33))) BETWEEN ((- (t0.c3))) AND (CAST(t0.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c3)AND(t0.c33)))OR(t0.c33))) BETWEEN ((- (t0.c3))) AND (CAST(t0.c3 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c3)AND(t0.c33)))OR(t0.c33))) BETWEEN ((- (t0.c3))) AND (CAST(t0.c3 AS NUMERIC))));
SELECT ALL * FROM rt0, vt1 INDEXED BY i91 WHERE ((~ (0.35402132526435626)));
SELECT SUM(count) FROM (SELECT (((~ (0.35402132526435626))) IS TRUE)  as count FROM rt0, vt1 INDEXED BY i91);
SELECT ALL * FROM rt0, vt1 INDEXED BY i91 WHERE ((~ (0.35402132526435626)));
SELECT SUM(count) FROM (SELECT (((~ (0.35402132526435626))) IS TRUE)  as count FROM rt0, vt1 INDEXED BY i91);
SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))) NOTNULL));
SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))) NOTNULL));
SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))) NOTNULL);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((rt0.c2) BETWEEN ((((t0.c33))>((t0.c33)))) AND (UNICODE(x'1b8e')))) ORDER BY LENGTH(CAST(rt0.c0 AS NUMERIC)) DESC  NULLS LAST, CASE t0.c3  WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM DESC  NULLS FIRST, (NOT (((((rt0.c2)OR('  zS]0')))OR('')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN ((((t0.c33))>((t0.c33)))) AND (UNICODE(x'1b8e')))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY LENGTH(CAST(rt0.c0 AS NUMERIC)) DESC  NULLS LAST, CASE t0.c3  WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM DESC  NULLS FIRST, (NOT (((((rt0.c2)OR('  zS]0')))OR('')))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((rt0.c2) BETWEEN ((((t0.c33))>((t0.c33)))) AND (UNICODE(x'1b8e')))) ORDER BY LENGTH(CAST(rt0.c0 AS NUMERIC)) DESC  NULLS LAST, CASE t0.c3  WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM DESC  NULLS FIRST, (NOT (((((rt0.c2)OR('  zS]0')))OR('')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN ((((t0.c33))>((t0.c33)))) AND (UNICODE(x'1b8e')))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY LENGTH(CAST(rt0.c0 AS NUMERIC)) DESC  NULLS LAST, CASE t0.c3  WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM DESC  NULLS FIRST, (NOT (((((rt0.c2)OR('  zS]0')))OR('')))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((rt0.c2) BETWEEN ((((t0.c33))>((t0.c33)))) AND (UNICODE(x'1b8e')))) ORDER BY LENGTH(CAST(rt0.c0 AS NUMERIC)) DESC  NULLS LAST, CASE t0.c3  WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM DESC  NULLS FIRST, (NOT (((((rt0.c2)OR('  zS]0')))OR('')))) ASC;
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE ((~ (((t0.c33) IS TRUE)))) ORDER BY ((((0x506cecf8)>>(rt0.c1)))+(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c33) IS TRUE)))) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY ((((0x506cecf8)>>(rt0.c1)))+(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE ((~ (((t0.c33) IS TRUE)))) ORDER BY ((((0x506cecf8)>>(rt0.c1)))+(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c33) IS TRUE)))) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY ((((0x506cecf8)>>(rt0.c1)))+(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE ((~ (((t0.c33) IS TRUE)))) ORDER BY ((((0x506cecf8)>>(rt0.c1)))+(vt0.c0)) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS TEXT) IN (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS TEXT) IN (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN (vt1.c0)));
SELECT ALL * FROM rt0 WHERE (highlight(((rt0.c1)+(rt0.c0)), (((NULL, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, -2070021195)) AND ((rt0.c1, rt0.c2, rt0.c2))), (rt0.c2 IN ()), ((rt0.c0)/(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((highlight(((rt0.c1)+(rt0.c0)), (((NULL, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, -2070021195)) AND ((rt0.c1, rt0.c2, rt0.c2))), (rt0.c2 IN ()), ((rt0.c0)/(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (highlight(((rt0.c1)+(rt0.c0)), (((NULL, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, -2070021195)) AND ((rt0.c1, rt0.c2, rt0.c2))), (rt0.c2 IN ()), ((rt0.c0)/(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((highlight(((rt0.c1)+(rt0.c0)), (((NULL, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, -2070021195)) AND ((rt0.c1, rt0.c2, rt0.c2))), (rt0.c2 IN ()), ((rt0.c0)/(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(((vt1.c0) IS FALSE))))AND((+ (vt1.c0))))) ORDER BY ((CAST(vt1.c0 AS BLOB))/(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(((vt1.c0) IS FALSE))))AND((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB))/(CAST(vt1.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(((vt1.c0) IS FALSE))))AND((+ (vt1.c0))))) ORDER BY ((CAST(vt1.c0 AS BLOB))/(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(((vt1.c0) IS FALSE))))AND((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB))/(CAST(vt1.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(((vt1.c0) IS FALSE))))AND((+ (vt1.c0))))) ORDER BY ((CAST(vt1.c0 AS BLOB))/(CAST(vt1.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('') ORDER BY LIKE(vt0.c0, vt0.c1) COLLATE NOCASE COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, vt0 ORDER BY LIKE(vt0.c0, vt0.c1) COLLATE NOCASE COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('') ORDER BY LIKE(vt0.c0, vt0.c1) COLLATE NOCASE COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, vt0 ORDER BY LIKE(vt0.c0, vt0.c1) COLLATE NOCASE COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('') ORDER BY LIKE(vt0.c0, vt0.c1) COLLATE NOCASE COLLATE RTRIM DESC;
SELECT * FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON ((((((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR((~ (vt1.c0)))))OR(((rt0.c2) IS TRUE))))OR((NOT (rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (t0.c3) AND (t0.c33)))) WHERE ((((vt0.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND (((((vt0.c1))<>((','))))))) ORDER BY CASE ((((-1.266951001E9)OR(rt0.c1)))AND(t0.c33))  WHEN CAST(vt0.c0 AS REAL) THEN t0.c3 WHEN CASE rt0.c0  WHEN NULL THEN t0.c3 WHEN 0.5040162653029747 THEN t0.c3 WHEN vt1.c0 THEN t0.c33 END THEN ((rt0.c2)<=(vt1.c0)) WHEN (((x''))>(('1393640220'))) THEN ((rt0.c1)*('1788124203')) ELSE CAST(t0.c3 AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND (((((vt0.c1))<>((','))))))) IS TRUE)  as count FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON ((((((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR((~ (vt1.c0)))))OR(((rt0.c2) IS TRUE))))OR((NOT (rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (t0.c3) AND (t0.c33)))) ORDER BY CASE ((((-1.266951001E9)OR(rt0.c1)))AND(t0.c33))  WHEN CAST(vt0.c0 AS REAL) THEN t0.c3 WHEN CASE rt0.c0  WHEN NULL THEN t0.c3 WHEN 0.5040162653029747 THEN t0.c3 WHEN vt1.c0 THEN t0.c33 END THEN ((rt0.c2)<=(vt1.c0)) WHEN (((x''))>(('1393640220'))) THEN ((rt0.c1)*('1788124203')) ELSE CAST(t0.c3 AS BLOB) END ASC);
SELECT * FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON ((((((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR((~ (vt1.c0)))))OR(((rt0.c2) IS TRUE))))OR((NOT (rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (t0.c3) AND (t0.c33)))) WHERE ((((vt0.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND (((((vt0.c1))<>((','))))))) ORDER BY CASE ((((-1.266951001E9)OR(rt0.c1)))AND(t0.c33))  WHEN CAST(vt0.c0 AS REAL) THEN t0.c3 WHEN CASE rt0.c0  WHEN NULL THEN t0.c3 WHEN 0.5040162653029747 THEN t0.c3 WHEN vt1.c0 THEN t0.c33 END THEN ((rt0.c2)<=(vt1.c0)) WHEN (((x''))>(('1393640220'))) THEN ((rt0.c1)*('1788124203')) ELSE CAST(t0.c3 AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND (((((vt0.c1))<>((','))))))) IS TRUE)  as count FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON ((((((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR((~ (vt1.c0)))))OR(((rt0.c2) IS TRUE))))OR((NOT (rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (t0.c3) AND (t0.c33)))) ORDER BY CASE ((((-1.266951001E9)OR(rt0.c1)))AND(t0.c33))  WHEN CAST(vt0.c0 AS REAL) THEN t0.c3 WHEN CASE rt0.c0  WHEN NULL THEN t0.c3 WHEN 0.5040162653029747 THEN t0.c3 WHEN vt1.c0 THEN t0.c33 END THEN ((rt0.c2)<=(vt1.c0)) WHEN (((x''))>(('1393640220'))) THEN ((rt0.c1)*('1788124203')) ELSE CAST(t0.c3 AS BLOB) END ASC);
SELECT * FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON ((((((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR((~ (vt1.c0)))))OR(((rt0.c2) IS TRUE))))OR((NOT (rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (t0.c3) AND (t0.c33)))) WHERE ((((vt0.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND (((((vt0.c1))<>((','))))))) ORDER BY CASE ((((-1.266951001E9)OR(rt0.c1)))AND(t0.c33))  WHEN CAST(vt0.c0 AS REAL) THEN t0.c3 WHEN CASE rt0.c0  WHEN NULL THEN t0.c3 WHEN 0.5040162653029747 THEN t0.c3 WHEN vt1.c0 THEN t0.c33 END THEN ((rt0.c2)<=(vt1.c0)) WHEN (((x''))>(('1393640220'))) THEN ((rt0.c1)*('1788124203')) ELSE CAST(t0.c3 AS BLOB) END ASC;
SELECT * FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN (~ (t0.c3)) THEN (NOT (vt1.c0)) ELSE CAST(rt0.c1 AS BLOB) END RIGHT OUTER JOIN rt0 ON (LAST_INSERT_ROWID() IN ()) WHERE (((CASE WHEN x'29fe' THEN rt0.c0 END) IS TRUE)) ORDER BY ((((vt1.c0)IS(rt0.c1))) IS FALSE)  NULLS LAST, ((rt0.c0)IS NOT(((t0.c33) BETWEEN (vt1.c0) AND (t0.c33)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'29fe' THEN rt0.c0 END) IS TRUE)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN (~ (t0.c3)) THEN (NOT (vt1.c0)) ELSE CAST(rt0.c1 AS BLOB) END RIGHT OUTER JOIN rt0 ON (LAST_INSERT_ROWID() IN ()) ORDER BY ((((vt1.c0)IS(rt0.c1))) IS FALSE)  NULLS LAST, ((rt0.c0)IS NOT(((t0.c33) BETWEEN (vt1.c0) AND (t0.c33)))) DESC);
SELECT * FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN (~ (t0.c3)) THEN (NOT (vt1.c0)) ELSE CAST(rt0.c1 AS BLOB) END RIGHT OUTER JOIN rt0 ON (LAST_INSERT_ROWID() IN ()) WHERE (((CASE WHEN x'29fe' THEN rt0.c0 END) IS TRUE)) ORDER BY ((((vt1.c0)IS(rt0.c1))) IS FALSE)  NULLS LAST, ((rt0.c0)IS NOT(((t0.c33) BETWEEN (vt1.c0) AND (t0.c33)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'29fe' THEN rt0.c0 END) IS TRUE)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN (~ (t0.c3)) THEN (NOT (vt1.c0)) ELSE CAST(rt0.c1 AS BLOB) END RIGHT OUTER JOIN rt0 ON (LAST_INSERT_ROWID() IN ()) ORDER BY ((((vt1.c0)IS(rt0.c1))) IS FALSE)  NULLS LAST, ((rt0.c0)IS NOT(((t0.c33) BETWEEN (vt1.c0) AND (t0.c33)))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 NATURAL JOIN vt0 WHERE (CAST((('1539780974')GLOB(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('1539780974')GLOB(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, rt0, vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 NATURAL JOIN vt0 WHERE (CAST((('1539780974')GLOB(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('1539780974')GLOB(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, rt0, vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 NATURAL JOIN vt0 WHERE (CAST((('1539780974')GLOB(vt0.c0)) AS INTEGER));
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE (((t0.c33 COLLATE BINARY) BETWEEN ((((t0.c3))=((rt0.c2)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))) ORDER BY ((((json_array(t0.c3, vt1.c0))AND(TOTAL_CHANGES())))OR(((rt0.c2) IS FALSE)))  NULLS LAST, CAST((+ (vt0.c0)) AS BLOB) DESC  NULLS LAST, NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c33 COLLATE BINARY) BETWEEN ((((t0.c3))=((rt0.c2)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0, vt1, t0 ORDER BY ((((json_array(t0.c3, vt1.c0))AND(TOTAL_CHANGES())))OR(((rt0.c2) IS FALSE)))  NULLS LAST, CAST((+ (vt0.c0)) AS BLOB) DESC  NULLS LAST, NULL DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE (((t0.c33 COLLATE BINARY) BETWEEN ((((t0.c3))=((rt0.c2)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))) ORDER BY ((((json_array(t0.c3, vt1.c0))AND(TOTAL_CHANGES())))OR(((rt0.c2) IS FALSE)))  NULLS LAST, CAST((+ (vt0.c0)) AS BLOB) DESC  NULLS LAST, NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c33 COLLATE BINARY) BETWEEN ((((t0.c3))=((rt0.c2)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0, vt1, t0 ORDER BY ((((json_array(t0.c3, vt1.c0))AND(TOTAL_CHANGES())))OR(((rt0.c2) IS FALSE)))  NULLS LAST, CAST((+ (vt0.c0)) AS BLOB) DESC  NULLS LAST, NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) AS NUMERIC) INNER JOIN rt0 ON (CASE WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END IN ()) WHERE ((((((vt0.c0)!=(vt1.c0))))<=((((vt1.c0)IS(rt0.c1)))))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)<>(vt1.c0))))<=((((vt1.c0)IS(rt0.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) AS NUMERIC) INNER JOIN rt0 ON (CASE WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END IN ()) ORDER BY vt1.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) AS NUMERIC) INNER JOIN rt0 ON (CASE WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END IN ()) WHERE ((((((vt0.c0)!=(vt1.c0))))<=((((vt1.c0)IS(rt0.c1)))))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)<>(vt1.c0))))<=((((vt1.c0)IS(rt0.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) AS NUMERIC) INNER JOIN rt0 ON (CASE WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END IN ()) ORDER BY vt1.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) AS NUMERIC) INNER JOIN rt0 ON (CASE WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END IN ()) WHERE ((((((vt0.c0)!=(vt1.c0))))<=((((vt1.c0)IS(rt0.c1)))))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((UNICODE(vt1.c0))AND(UNLIKELY(DISTINCT vt1.c0))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY (((vt1.c0))>((vt1.c0))) COLLATE RTRIM, vt1.c0  NULLS LAST, (((((~ (vt1.c0)))AND(CAST(vt1.c0 AS REAL))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (x'4214'))));
SELECT SUM(count) FROM (SELECT ALL ((((((UNICODE(vt1.c0))AND(UNLIKELY(DISTINCT vt1.c0))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))>((vt1.c0))) COLLATE RTRIM, vt1.c0  NULLS LAST, (((((~ (vt1.c0)))AND(CAST(vt1.c0 AS REAL))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (x'4214')))));
SELECT COUNT(*) FROM vt1 WHERE (((((UNICODE(vt1.c0))AND(UNLIKELY(DISTINCT vt1.c0))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY (((vt1.c0))>((vt1.c0))) COLLATE RTRIM, vt1.c0  NULLS LAST, (((((~ (vt1.c0)))AND(CAST(vt1.c0 AS REAL))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (x'4214'))));
SELECT SUM(count) FROM (SELECT ALL ((((((UNICODE(vt1.c0))AND(UNLIKELY(DISTINCT vt1.c0))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))>((vt1.c0))) COLLATE RTRIM, vt1.c0  NULLS LAST, (((((~ (vt1.c0)))AND(CAST(vt1.c0 AS REAL))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (x'4214')))));
SELECT COUNT(*) FROM vt1 WHERE (((((UNICODE(vt1.c0))AND(UNLIKELY(DISTINCT vt1.c0))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY (((vt1.c0))>((vt1.c0))) COLLATE RTRIM, vt1.c0  NULLS LAST, (((((~ (vt1.c0)))AND(CAST(vt1.c0 AS REAL))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (x'4214'))));
SELECT * FROM t0, vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c3))) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(t0.c33))) AND ((('1790900075') NOT NULL)))) ORDER BY ((((t0.c33) NOT NULL))IS NOT((((vt1.c0, vt0.c0, t0.c3, t0.c33, t0.c3))==((t0.c3, t0.c3, t0.c33, vt0.c0, vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c3))) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(t0.c33))) AND ((('1790900075') NOT NULL)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((t0.c33) NOT NULL))IS NOT((((vt1.c0, vt0.c0, t0.c3, t0.c33, t0.c3))=((t0.c3, t0.c3, t0.c33, vt0.c0, vt0.c1)))))  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c3))) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(t0.c33))) AND ((('1790900075') NOT NULL)))) ORDER BY ((((t0.c33) NOT NULL))IS NOT((((vt1.c0, vt0.c0, t0.c3, t0.c33, t0.c3))==((t0.c3, t0.c3, t0.c33, vt0.c0, vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c3))) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(t0.c33))) AND ((('1790900075') NOT NULL)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((t0.c33) NOT NULL))IS NOT((((vt1.c0, vt0.c0, t0.c3, t0.c33, t0.c3))=((t0.c3, t0.c3, t0.c33, vt0.c0, vt0.c1)))))  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c3))) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(t0.c33))) AND ((('1790900075') NOT NULL)))) ORDER BY ((((t0.c33) NOT NULL))IS NOT((((vt1.c0, vt0.c0, t0.c3, t0.c33, t0.c3))==((t0.c3, t0.c3, t0.c33, vt0.c0, vt0.c1)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, vt1 CROSS JOIN rt0 ON ((t0.c3)|(((rt0.c0)+(0.4980290653177556)))) WHERE (COALESCE(json_insert('-290464852', '-1342247185', rt0.c0), CAST(vt0.c0 AS INTEGER))) ORDER BY ((t0.c3)<>(vt1.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((COALESCE(json_insert('-290464852', '-1342247185', rt0.c0), CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, t0, vt1 CROSS JOIN rt0 ON ((t0.c3)|(((rt0.c0)+(0.4980290653177556)))) ORDER BY ((t0.c3)!=(vt1.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0, t0, vt1 CROSS JOIN rt0 ON ((t0.c3)|(((rt0.c0)+(0.4980290653177556)))) WHERE (COALESCE(json_insert('-290464852', '-1342247185', rt0.c0), CAST(vt0.c0 AS INTEGER))) ORDER BY ((t0.c3)<>(vt1.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((COALESCE(json_insert('-290464852', '-1342247185', rt0.c0), CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, t0, vt1 CROSS JOIN rt0 ON ((t0.c3)|(((rt0.c0)+(0.4980290653177556)))) ORDER BY ((t0.c3)!=(vt1.c0)) COLLATE BINARY DESC);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END);
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((((t0.c3)) NOT BETWEEN (((~ (rt0.c2)))) AND ((json_array_length(NULL))))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c3)) NOT BETWEEN (((~ (rt0.c2)))) AND ((json_array_length(NULL))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY x''  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((((t0.c3)) NOT BETWEEN (((~ (rt0.c2)))) AND ((json_array_length(NULL))))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c3)) NOT BETWEEN (((~ (rt0.c2)))) AND ((json_array_length(NULL))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY x''  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((((t0.c3)) NOT BETWEEN (((~ (rt0.c2)))) AND ((json_array_length(NULL))))) ORDER BY x''  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL)) ORDER BY ((((vt0.c1) NOT NULL)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c1) NOT NULL)) NOTNULL) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL)) ORDER BY ((((vt0.c1) NOT NULL)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c1) NOT NULL)) NOTNULL) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL)) ORDER BY ((((vt0.c1) NOT NULL)) NOTNULL) DESC;
SELECT * FROM rt0 CROSS JOIN vt0 ON ((rt0.c1) ISNULL) WHERE (x'') ORDER BY (((TIME(vt0.c0, rt0.c1, vt0.c1)))<>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c1) ISNULL) ORDER BY (((TIME(vt0.c0, rt0.c1, vt0.c1)))!=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ASC);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((rt0.c1) ISNULL) WHERE (x'') ORDER BY (((TIME(vt0.c0, rt0.c1, vt0.c1)))<>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c1) ISNULL) ORDER BY (((TIME(vt0.c0, rt0.c1, vt0.c1)))!=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ASC);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((rt0.c1) ISNULL) WHERE (x'') ORDER BY (((TIME(vt0.c0, rt0.c1, vt0.c1)))<>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)) IN ())) ORDER BY (((rt0.c0)!=(rt0.c0)) IN (((rt0.c2)/(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c0)!=(rt0.c0)) IN (((rt0.c2)/(rt0.c1)))) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)) IN ())) ORDER BY (((rt0.c0)!=(rt0.c0)) IN (((rt0.c2)/(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c0)!=(rt0.c0)) IN (((rt0.c2)/(rt0.c1)))) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)) IN ())) ORDER BY (((rt0.c0)!=(rt0.c0)) IN (((rt0.c2)/(rt0.c1)))) DESC;
SELECT ALL * FROM rt0 WHERE (MAX((('?^s ') BETWEEN (NULL) AND (rt0.c0)), rt0.c0));
SELECT SUM(count) FROM (SELECT ((MAX((('?^s ') BETWEEN (NULL) AND (rt0.c0)), rt0.c0)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (MAX((('?^s ') BETWEEN (NULL) AND (rt0.c0)), rt0.c0));
SELECT SUM(count) FROM (SELECT ((MAX((('?^s ') BETWEEN (NULL) AND (rt0.c0)), rt0.c0)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (MAX((('?^s ') BETWEEN (NULL) AND (rt0.c0)), rt0.c0));
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (NULL) ORDER BY CASE 'qB2E'  WHEN ((t0.c33)==(t0.c33)) THEN (vt0.c0 IN (vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY CASE 'qB2E'  WHEN ((t0.c33)==(t0.c33)) THEN (vt0.c0 IN (vt0.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (NULL) ORDER BY CASE 'qB2E'  WHEN ((t0.c33)==(t0.c33)) THEN (vt0.c0 IN (vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY CASE 'qB2E'  WHEN ((t0.c33)==(t0.c33)) THEN (vt0.c0 IN (vt0.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (NULL) ORDER BY CASE 'qB2E'  WHEN ((t0.c33)==(t0.c33)) THEN (vt0.c0 IN (vt0.c0)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS INTEGER)) ORDER BY ((((CASE t0.c33  WHEN rt0.c1 THEN rt0.c0 ELSE t0.c3 END)AND(CAST(rt0.c2 AS NUMERIC))))AND((- (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((CASE t0.c33  WHEN rt0.c1 THEN rt0.c0 ELSE t0.c3 END)AND(CAST(rt0.c2 AS NUMERIC))))AND((- (rt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS INTEGER)) ORDER BY ((((CASE t0.c33  WHEN rt0.c1 THEN rt0.c0 ELSE t0.c3 END)AND(CAST(rt0.c2 AS NUMERIC))))AND((- (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((CASE t0.c33  WHEN rt0.c1 THEN rt0.c0 ELSE t0.c3 END)AND(CAST(rt0.c2 AS NUMERIC))))AND((- (rt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS INTEGER)) ORDER BY ((((CASE t0.c33  WHEN rt0.c1 THEN rt0.c0 ELSE t0.c3 END)AND(CAST(rt0.c2 AS NUMERIC))))AND((- (rt0.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((NULL COLLATE BINARY)AND(((vt1.c0) ISNULL))) CROSS JOIN rt0 ON (- (((vt0.c1) BETWEEN (t0.c3) AND (vt0.c0)))) WHERE ((((((vt0.c0)AND(rt0.c0)))OR(vt0.c1)) IN ())) ORDER BY SQLITE_COMPILEOPTION_GET((((NULL)) BETWEEN ((rt0.c0)) AND ((t0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(rt0.c0)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((NULL COLLATE BINARY)AND(((vt1.c0) ISNULL))) CROSS JOIN rt0 ON (- (((vt0.c1) BETWEEN (t0.c3) AND (vt0.c0)))) ORDER BY SQLITE_COMPILEOPTION_GET((((NULL)) BETWEEN ((rt0.c0)) AND ((t0.c3)))));
SELECT ALL COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((NULL COLLATE BINARY)AND(((vt1.c0) ISNULL))) CROSS JOIN rt0 ON (- (((vt0.c1) BETWEEN (t0.c3) AND (vt0.c0)))) WHERE ((((((vt0.c0)AND(rt0.c0)))OR(vt0.c1)) IN ())) ORDER BY SQLITE_COMPILEOPTION_GET((((NULL)) BETWEEN ((rt0.c0)) AND ((t0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(rt0.c0)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((NULL COLLATE BINARY)AND(((vt1.c0) ISNULL))) CROSS JOIN rt0 ON (- (((vt0.c1) BETWEEN (t0.c3) AND (vt0.c0)))) ORDER BY SQLITE_COMPILEOPTION_GET((((NULL)) BETWEEN ((rt0.c0)) AND ((t0.c3)))));
SELECT ALL COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((NULL COLLATE BINARY)AND(((vt1.c0) ISNULL))) CROSS JOIN rt0 ON (- (((vt0.c1) BETWEEN (t0.c3) AND (vt0.c0)))) WHERE ((((((vt0.c0)AND(rt0.c0)))OR(vt0.c1)) IN ())) ORDER BY SQLITE_COMPILEOPTION_GET((((NULL)) BETWEEN ((rt0.c0)) AND ((t0.c3))));
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN vt0 ON ((((t0.c3, vt1.c0, -1.72514448E9, '', vt1.c0))<((rt0.c0, vt1.c0, rt0.c0, rt0.c0, vt0.c0))) IN ()) CROSS JOIN t0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (((((((((vt1.c0)AND(rt0.c0)))AND(t0.c33)))OR(vt0.c0)))OR(rt0.c0))) AND (CAST(vt0.c0 AS REAL))) WHERE ((((rt0.c1)IS(t0.c33)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)IS(t0.c33)) IN ())) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON ((((t0.c3, vt1.c0, -1.72514448E9, '', vt1.c0))<((rt0.c0, vt1.c0, rt0.c0, rt0.c0, vt0.c0))) IN ()) CROSS JOIN t0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (((((((((vt1.c0)AND(rt0.c0)))AND(t0.c33)))OR(vt0.c0)))OR(rt0.c0))) AND (CAST(vt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN vt0 ON ((((t0.c3, vt1.c0, -1.72514448E9, '', vt1.c0))<((rt0.c0, vt1.c0, rt0.c0, rt0.c0, vt0.c0))) IN ()) CROSS JOIN t0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (((((((((vt1.c0)AND(rt0.c0)))AND(t0.c33)))OR(vt0.c0)))OR(rt0.c0))) AND (CAST(vt0.c0 AS REAL))) WHERE ((((rt0.c1)IS(t0.c33)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)IS(t0.c33)) IN ())) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON ((((t0.c3, vt1.c0, -1.72514448E9, '', vt1.c0))<((rt0.c0, vt1.c0, rt0.c0, rt0.c0, vt0.c0))) IN ()) CROSS JOIN t0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (((((((((vt1.c0)AND(rt0.c0)))AND(t0.c33)))OR(vt0.c0)))OR(rt0.c0))) AND (CAST(vt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN vt0 ON ((((t0.c3, vt1.c0, -1.72514448E9, '', vt1.c0))<((rt0.c0, vt1.c0, rt0.c0, rt0.c0, vt0.c0))) IN ()) CROSS JOIN t0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (((((((((vt1.c0)AND(rt0.c0)))AND(t0.c33)))OR(vt0.c0)))OR(rt0.c0))) AND (CAST(vt0.c0 AS REAL))) WHERE ((((rt0.c1)IS(t0.c33)) IN ()));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)IS(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)IS(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)IS(rt0.c2))) IS FALSE));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)))<<(vt1.c0))) ORDER BY x'fc35'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)))<<(vt1.c0))) IS TRUE)  as count FROM rt0, vt1 ORDER BY x'fc35'  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)))<<(vt1.c0))) ORDER BY x'fc35'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)))<<(vt1.c0))) IS TRUE)  as count FROM rt0, vt1 ORDER BY x'fc35'  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)))<<(vt1.c0))) ORDER BY x'fc35'  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (~ (HEX(DISTINCT rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (~ (HEX(DISTINCT rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (~ (HEX(DISTINCT rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (~ (HEX(DISTINCT rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (~ (HEX(DISTINCT rt0.c2)));
SELECT COUNT(*) FROM rt0 WHERE ((~ (HEX(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((~ (HEX(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (HEX(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((~ (HEX(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (HEX(rt0.c2))));
SELECT * FROM rt0, vt1, vt0, t0 WHERE (NULL) ORDER BY ((((((rt0.c0)AND(t0.c33)))OR(rt0.c1)))OR(CAST(rt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY ((((((rt0.c0)AND(t0.c33)))OR(rt0.c1)))OR(CAST(rt0.c2 AS INTEGER))));
SELECT * FROM rt0, vt1, vt0, t0 WHERE (NULL) ORDER BY ((((((rt0.c0)AND(t0.c33)))OR(rt0.c1)))OR(CAST(rt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY ((((((rt0.c0)AND(t0.c33)))OR(rt0.c1)))OR(CAST(rt0.c2 AS INTEGER))));
SELECT * FROM rt0, vt1, vt0, t0 WHERE (NULL) ORDER BY ((((((rt0.c0)AND(t0.c33)))OR(rt0.c1)))OR(CAST(rt0.c2 AS INTEGER)));
SELECT COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (CASE WHEN ((x'2e9f') IS TRUE) THEN ((((t0.c33)OR('1068882751')))AND(vt0.c0)) WHEN ((rt0.c0)IS(rt0.c2)) THEN ((rt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) WHEN LIKELY(DISTINCT vt1.c0) THEN (t0.c33 IN (x'')) ELSE (rt0.c0 IN (t0.c33)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'2e9f') IS TRUE) THEN ((((t0.c33)OR('1068882751')))AND(vt0.c0)) WHEN ((rt0.c0)IS(rt0.c2)) THEN ((rt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) WHEN LIKELY(DISTINCT vt1.c0) THEN (t0.c33 IN (x'')) ELSE (rt0.c0 IN (t0.c33)) END) IS TRUE)  as count FROM vt1, t0 NOT INDEXED, vt0, rt0);
SELECT COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (CASE WHEN ((x'2e9f') IS TRUE) THEN ((((t0.c33)OR('1068882751')))AND(vt0.c0)) WHEN ((rt0.c0)IS(rt0.c2)) THEN ((rt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) WHEN LIKELY(DISTINCT vt1.c0) THEN (t0.c33 IN (x'')) ELSE (rt0.c0 IN (t0.c33)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'2e9f') IS TRUE) THEN ((((t0.c33)OR('1068882751')))AND(vt0.c0)) WHEN ((rt0.c0)IS(rt0.c2)) THEN ((rt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) WHEN LIKELY(DISTINCT vt1.c0) THEN (t0.c33 IN (x'')) ELSE (rt0.c0 IN (t0.c33)) END) IS TRUE)  as count FROM vt1, t0 NOT INDEXED, vt0, rt0);
SELECT COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (CASE WHEN ((x'2e9f') IS TRUE) THEN ((((t0.c33)OR('1068882751')))AND(vt0.c0)) WHEN ((rt0.c0)IS(rt0.c2)) THEN ((rt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) WHEN LIKELY(DISTINCT vt1.c0) THEN (t0.c33 IN (x'')) ELSE (rt0.c0 IN (t0.c33)) END);
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN t0 ON INSTR('', LIKE(t0.c3, vt0.c1, 'U')) WHERE ((((vt0.c1 COLLATE NOCASE))<=((t0.c3 COLLATE RTRIM)))) ORDER BY CAST(CASE WHEN vt0.c0 THEN t0.c33 ELSE NULL END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE NOCASE))<=((t0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON INSTR('', LIKE(t0.c3, vt0.c1, 'U')) ORDER BY CAST(CASE WHEN vt0.c0 THEN t0.c33 ELSE NULL END AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN t0 ON INSTR('', LIKE(t0.c3, vt0.c1, 'U')) WHERE ((((vt0.c1 COLLATE NOCASE))<=((t0.c3 COLLATE RTRIM)))) ORDER BY CAST(CASE WHEN vt0.c0 THEN t0.c33 ELSE NULL END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE NOCASE))<=((t0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON INSTR('', LIKE(t0.c3, vt0.c1, 'U')) ORDER BY CAST(CASE WHEN vt0.c0 THEN t0.c33 ELSE NULL END AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN t0 ON INSTR('', LIKE(t0.c3, vt0.c1, 'U')) WHERE ((((vt0.c1 COLLATE NOCASE))<=((t0.c3 COLLATE RTRIM)))) ORDER BY CAST(CASE WHEN vt0.c0 THEN t0.c33 ELSE NULL END AS NUMERIC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (TOTAL_CHANGES()) ORDER BY CAST(vt0.c1 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(vt0.c1 AS BLOB) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (TOTAL_CHANGES()) ORDER BY CAST(vt0.c1 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(vt0.c1 AS BLOB) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (TOTAL_CHANGES()) ORDER BY CAST(vt0.c1 AS BLOB) DESC;
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON LIKELY(DISTINCT ((((rt0.c2)OR(vt0.c0)))AND(t0.c33))) LEFT OUTER JOIN t0 ON CAST(((((((((((((t0.c33)OR(t0.c3)))AND(vt1.c0)))OR(rt0.c2)))OR(-1226570474)))AND(1.7976931348623157E308)))OR(vt1.c0)) AS TEXT) FULL OUTER JOIN vt0 ON (NOT (CAST(rt0.c2 AS BLOB))) WHERE ((('-959680970')AND(((vt1.c0)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('-959680970')AND(((vt1.c0)<=(rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON LIKELY(DISTINCT ((((rt0.c2)OR(vt0.c0)))AND(t0.c33))) LEFT OUTER JOIN t0 ON CAST(((((((((((((t0.c33)OR(t0.c3)))AND(vt1.c0)))OR(rt0.c2)))OR(-1226570474)))AND(1.7976931348623157E308)))OR(vt1.c0)) AS TEXT) FULL OUTER JOIN vt0 ON (NOT (CAST(rt0.c2 AS BLOB))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON LIKELY(DISTINCT ((((rt0.c2)OR(vt0.c0)))AND(t0.c33))) LEFT OUTER JOIN t0 ON CAST(((((((((((((t0.c33)OR(t0.c3)))AND(vt1.c0)))OR(rt0.c2)))OR(-1226570474)))AND(1.7976931348623157E308)))OR(vt1.c0)) AS TEXT) FULL OUTER JOIN vt0 ON (NOT (CAST(rt0.c2 AS BLOB))) WHERE ((('-959680970')AND(((vt1.c0)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('-959680970')AND(((vt1.c0)<=(rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON LIKELY(DISTINCT ((((rt0.c2)OR(vt0.c0)))AND(t0.c33))) LEFT OUTER JOIN t0 ON CAST(((((((((((((t0.c33)OR(t0.c3)))AND(vt1.c0)))OR(rt0.c2)))OR(-1226570474)))AND(1.7976931348623157E308)))OR(vt1.c0)) AS TEXT) FULL OUTER JOIN vt0 ON (NOT (CAST(rt0.c2 AS BLOB))));
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON ((rt0.c0 COLLATE BINARY)/(CAST(rt0.c0 AS TEXT))) CROSS JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE BINARY WHERE ((+ (ABS(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((+ (ABS(rt0.c1)))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((rt0.c0 COLLATE BINARY)/(CAST(rt0.c0 AS TEXT))) CROSS JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE BINARY);
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON ((rt0.c0 COLLATE BINARY)/(CAST(rt0.c0 AS TEXT))) CROSS JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE BINARY WHERE ((+ (ABS(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((+ (ABS(rt0.c1)))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((rt0.c0 COLLATE BINARY)/(CAST(rt0.c0 AS TEXT))) CROSS JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE BINARY);
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON ((rt0.c0 COLLATE BINARY)/(CAST(rt0.c0 AS TEXT))) CROSS JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE BINARY WHERE ((+ (ABS(rt0.c1))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- (((NULL)<(rt0.c1))))) ORDER BY ((+ (rt0.c1)) IN ())  NULLS LAST, rt0.c2;
SELECT SUM(count) FROM (SELECT (((- (((NULL)<(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((+ (rt0.c1)) IN ())  NULLS LAST, rt0.c2);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- (((NULL)<(rt0.c1))))) ORDER BY ((+ (rt0.c1)) IN ())  NULLS LAST, rt0.c2;
SELECT SUM(count) FROM (SELECT (((- (((NULL)<(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((+ (rt0.c1)) IN ())  NULLS LAST, rt0.c2);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- (((NULL)<(rt0.c1))))) ORDER BY ((+ (rt0.c1)) IN ())  NULLS LAST, rt0.c2;
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i70, rt0, vt0, t0 WHERE ((((NULL) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((NULL) ISNULL) IN ())) IS TRUE)  as count FROM vt1 INDEXED BY i70, rt0, vt0, t0);
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i70, rt0, vt0, t0 WHERE ((((NULL) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((NULL) ISNULL) IN ())) IS TRUE)  as count FROM vt1 INDEXED BY i70, rt0, vt0, t0);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)|(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)|(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)|(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)|(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)|(vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((NULL) NOT BETWEEN ('2091083610') AND ((vt0.c0 IN (rt0.c2))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN ('2091083610') AND ((vt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((NULL) NOT BETWEEN ('2091083610') AND ((vt0.c0 IN (rt0.c2))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN ('2091083610') AND ((vt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((NULL) NOT BETWEEN ('2091083610') AND ((vt0.c0 IN (rt0.c2))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((rt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((rt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((rt0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM vt0, t0 WHERE ('1539780974');
SELECT SUM(count) FROM (SELECT (('1539780974') IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ('1539780974');
SELECT SUM(count) FROM (SELECT (('1539780974') IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ('1539780974');
SELECT ALL * FROM vt1 WHERE ((~ (((0.603530649605807)%(vt1.c0))))) ORDER BY ((x'7b9f') NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((0.603530649605807)%(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((x'7b9f') NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((~ (((0.603530649605807)%(vt1.c0))))) ORDER BY ((x'7b9f') NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((0.603530649605807)%(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((x'7b9f') NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((~ (((0.603530649605807)%(vt1.c0))))) ORDER BY ((x'7b9f') NOTNULL) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE ((- ((rt0.c0 IN (t0.c33)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c0 IN (t0.c33))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((- ((rt0.c0 IN (t0.c33)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c0 IN (t0.c33))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((- ((rt0.c0 IN (t0.c33)))));
SELECT COUNT(*) FROM vt0 WHERE (json_quote(STRFTIME(x'', vt0.c0, 0.7563704507733084)));
SELECT SUM(count) FROM (SELECT ((json_quote(STRFTIME(x'', vt0.c0, 0.7563704507733084))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (json_quote(STRFTIME(x'', vt0.c0, 0.7563704507733084)));
SELECT SUM(count) FROM (SELECT ((json_quote(STRFTIME(x'', vt0.c0, 0.7563704507733084))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (json_quote(STRFTIME(x'', vt0.c0, 0.7563704507733084)));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (TRIM(t0.c33)) ORDER BY (+ (((t0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(t0.c33)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (+ (((t0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (TRIM(t0.c33)) ORDER BY (+ (((t0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(t0.c33)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (+ (((t0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (TRIM(t0.c33)) ORDER BY (+ (((t0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE (((((NULL)OR(CAST(vt0.c0 AS BLOB))))OR(((t0.c33)IS NOT(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(CAST(vt0.c0 AS BLOB))))OR(((t0.c33)IS NOT(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE (((((NULL)OR(CAST(vt0.c0 AS BLOB))))OR(((t0.c33)IS NOT(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(CAST(vt0.c0 AS BLOB))))OR(((t0.c33)IS NOT(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE (((((NULL)OR(CAST(vt0.c0 AS BLOB))))OR(((t0.c33)IS NOT(vt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt0 ON UNICODE(((vt0.c0)IS NOT(rt0.c1))) RIGHT OUTER JOIN vt1 ON ((rt0.c0)=(vt0.c1)) COLLATE NOCASE WHERE (((0.02943331588481568)!=(((((rt0.c2)OR(rt0.c2)))AND(t0.c33))))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((0.02943331588481568)<>(((((rt0.c2)OR(rt0.c2)))AND(t0.c33))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON UNICODE(((vt0.c0)IS NOT(rt0.c1))) RIGHT OUTER JOIN vt1 ON ((rt0.c0)=(vt0.c1)) COLLATE NOCASE ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt0 ON UNICODE(((vt0.c0)IS NOT(rt0.c1))) RIGHT OUTER JOIN vt1 ON ((rt0.c0)=(vt0.c1)) COLLATE NOCASE WHERE (((0.02943331588481568)!=(((((rt0.c2)OR(rt0.c2)))AND(t0.c33))))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((0.02943331588481568)<>(((((rt0.c2)OR(rt0.c2)))AND(t0.c33))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON UNICODE(((vt0.c0)IS NOT(rt0.c1))) RIGHT OUTER JOIN vt1 ON ((rt0.c0)=(vt0.c1)) COLLATE NOCASE ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt0 ON UNICODE(((vt0.c0)IS NOT(rt0.c1))) RIGHT OUTER JOIN vt1 ON ((rt0.c0)=(vt0.c1)) COLLATE NOCASE WHERE (((0.02943331588481568)!=(((((rt0.c2)OR(rt0.c2)))AND(t0.c33))))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS INTEGER);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c0 AS TEXT)  WHEN vt1.c0 COLLATE NOCASE THEN rt0.c0 WHEN '' THEN (rt0.c1 IN (vt1.c0)) WHEN (rt0.c1 IN ()) THEN ((rt0.c0)>=(rt0.c2)) END WHERE (0.6583999328708461 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((0.6583999328708461 COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c0 AS TEXT)  WHEN vt1.c0 COLLATE NOCASE THEN rt0.c0 WHEN '' THEN (rt0.c1 IN (vt1.c0)) WHEN (rt0.c1 IN ()) THEN ((rt0.c0)>=(rt0.c2)) END);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c0 AS TEXT)  WHEN vt1.c0 COLLATE NOCASE THEN rt0.c0 WHEN '' THEN (rt0.c1 IN (vt1.c0)) WHEN (rt0.c1 IN ()) THEN ((rt0.c0)>=(rt0.c2)) END WHERE (0.6583999328708461 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((0.6583999328708461 COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c0 AS TEXT)  WHEN vt1.c0 COLLATE NOCASE THEN rt0.c0 WHEN '' THEN (rt0.c1 IN (vt1.c0)) WHEN (rt0.c1 IN ()) THEN ((rt0.c0)>=(rt0.c2)) END);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c0 AS TEXT)  WHEN vt1.c0 COLLATE NOCASE THEN rt0.c0 WHEN '' THEN (rt0.c1 IN (vt1.c0)) WHEN (rt0.c1 IN ()) THEN ((rt0.c0)>=(rt0.c2)) END WHERE (0.6583999328708461 COLLATE NOCASE);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((~ (t0.c3)))!=(t0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c3)))<>(t0.c3 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((~ (t0.c3)))!=(t0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c3)))<>(t0.c3 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((~ (t0.c3)))!=(t0.c3 COLLATE BINARY)));
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((('0.23898183018297314' IN (rt0.c2, vt0.c1)))AND(((rt0.c1) BETWEEN (0.2669455182927899) AND (vt0.c0)))))AND(rt0.c1)))AND((vt0.c1 IN (vt0.c1, rt0.c1)))))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((('0.23898183018297314' IN (rt0.c2, vt0.c1)))AND(((rt0.c1) BETWEEN (0.2669455182927899) AND (vt0.c0)))))AND(rt0.c1)))AND((vt0.c1 IN (vt0.c1, rt0.c1)))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((('0.23898183018297314' IN (rt0.c2, vt0.c1)))AND(((rt0.c1) BETWEEN (0.2669455182927899) AND (vt0.c0)))))AND(rt0.c1)))AND((vt0.c1 IN (vt0.c1, rt0.c1)))))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((('0.23898183018297314' IN (rt0.c2, vt0.c1)))AND(((rt0.c1) BETWEEN (0.2669455182927899) AND (vt0.c0)))))AND(rt0.c1)))AND((vt0.c1 IN (vt0.c1, rt0.c1)))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((('0.23898183018297314' IN (rt0.c2, vt0.c1)))AND(((rt0.c1) BETWEEN (0.2669455182927899) AND (vt0.c0)))))AND(rt0.c1)))AND((vt0.c1 IN (vt0.c1, rt0.c1)))))AND(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOT NULL));
SELECT * FROM t0 WHERE (GLOB(CAST(t0.c3 AS TEXT), PRINTF(t0.c3)));
SELECT SUM(count) FROM (SELECT ((GLOB(CAST(t0.c3 AS TEXT), PRINTF(t0.c3))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (GLOB(CAST(t0.c3 AS TEXT), PRINTF(t0.c3)));
SELECT SUM(count) FROM (SELECT ((GLOB(CAST(t0.c3 AS TEXT), PRINTF(t0.c3))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (GLOB(CAST(t0.c3 AS TEXT), PRINTF(t0.c3)));
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON json_array((vt0.c0 IN ()), ((rt0.c2)&(vt0.c1))) CROSS JOIN vt1 ON x'' WHERE (t0.c3);
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON json_array((vt0.c0 IN ()), ((rt0.c2)&(vt0.c1))) CROSS JOIN vt1 ON x'');
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON json_array((vt0.c0 IN ()), ((rt0.c2)&(vt0.c1))) CROSS JOIN vt1 ON x'' WHERE (t0.c3);
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON json_array((vt0.c0 IN ()), ((rt0.c2)&(vt0.c1))) CROSS JOIN vt1 ON x'');
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON json_array((vt0.c0 IN ()), ((rt0.c2)&(vt0.c1))) CROSS JOIN vt1 ON x'' WHERE (t0.c3);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY  NULLS LAST, CASE (+ (vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c1) IS FALSE) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY  NULLS LAST, CASE (+ (vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c1) IS FALSE) END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY  NULLS LAST, CASE (+ (vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c1) IS FALSE) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY  NULLS LAST, CASE (+ (vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c1) IS FALSE) END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY  NULLS LAST, CASE (+ (vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c1) IS FALSE) END DESC;
SELECT * FROM t0, rt0 WHERE (LIKE(-1167525752, ((rt0.c2) BETWEEN (t0.c3) AND (rt0.c0)), 'k')) ORDER BY rt0.c1 DESC  NULLS LAST, CAST(x'dd6b' COLLATE BINARY AS INTEGER) DESC  NULLS LAST, TRIM(CASE WHEN rt0.c0 THEN rt0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(-1167525752, ((rt0.c2) BETWEEN (t0.c3) AND (rt0.c0)), 'k')) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c1 DESC  NULLS LAST, CAST(x'dd6b' COLLATE BINARY AS INTEGER) DESC  NULLS LAST, TRIM(CASE WHEN rt0.c0 THEN rt0.c0 END) ASC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (LIKE(-1167525752, ((rt0.c2) BETWEEN (t0.c3) AND (rt0.c0)), 'k')) ORDER BY rt0.c1 DESC  NULLS LAST, CAST(x'dd6b' COLLATE BINARY AS INTEGER) DESC  NULLS LAST, TRIM(CASE WHEN rt0.c0 THEN rt0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(-1167525752, ((rt0.c2) BETWEEN (t0.c3) AND (rt0.c0)), 'k')) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c1 DESC  NULLS LAST, CAST(x'dd6b' COLLATE BINARY AS INTEGER) DESC  NULLS LAST, TRIM(CASE WHEN rt0.c0 THEN rt0.c0 END) ASC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (LIKE(-1167525752, ((rt0.c2) BETWEEN (t0.c3) AND (rt0.c0)), 'k')) ORDER BY rt0.c1 DESC  NULLS LAST, CAST(x'dd6b' COLLATE BINARY AS INTEGER) DESC  NULLS LAST, TRIM(CASE WHEN rt0.c0 THEN rt0.c0 END) ASC  NULLS LAST;
SELECT * FROM vt1, vt0, t0 INNER JOIN rt0 ON ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1))) ISNULL) WHERE (t0.c3) ORDER BY (NOT ((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM vt1, vt0, t0 INNER JOIN rt0 ON ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1))) ISNULL) ORDER BY (NOT ((vt0.c1 IN ()))));
SELECT * FROM vt1, vt0, t0 INNER JOIN rt0 ON ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1))) ISNULL) WHERE (t0.c3) ORDER BY (NOT ((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM vt1, vt0, t0 INNER JOIN rt0 ON ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1))) ISNULL) ORDER BY (NOT ((vt0.c1 IN ()))));
SELECT * FROM vt1, vt0, t0 INNER JOIN rt0 ON ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1))) ISNULL) WHERE (t0.c3) ORDER BY (NOT ((vt0.c1 IN ())));
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(vt0.c0));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(vt0.c0));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(vt0.c0));
SELECT ALL * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))&(((rt0.c2)&(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))&(((rt0.c2)&(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))&(((rt0.c2)&(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))&(((rt0.c2)&(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))&(((rt0.c2)&(rt0.c2))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((vt1.c0)AND(((vt0.c1) NOT NULL))))AND(((vt0.c1)>(vt0.c0)))))OR(((vt0.c1)AND(vt1.c0)))))OR(((vt1.c0)<<(NULL))))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt1.c0)))&(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(((vt0.c1) NOT NULL))))AND(((vt0.c1)>(vt0.c0)))))OR(((vt0.c1)AND(vt1.c0)))))OR(((vt1.c0)<<(NULL))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt1.c0)))&(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((vt1.c0)AND(((vt0.c1) NOT NULL))))AND(((vt0.c1)>(vt0.c0)))))OR(((vt0.c1)AND(vt1.c0)))))OR(((vt1.c0)<<(NULL))))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt1.c0)))&(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(((vt0.c1) NOT NULL))))AND(((vt0.c1)>(vt0.c0)))))OR(((vt0.c1)AND(vt1.c0)))))OR(((vt1.c0)<<(NULL))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt1.c0)))&(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((vt1.c0)AND(((vt0.c1) NOT NULL))))AND(((vt0.c1)>(vt0.c0)))))OR(((vt0.c1)AND(vt1.c0)))))OR(((vt1.c0)<<(NULL))))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt1.c0)))&(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC;
SELECT * FROM t0, vt1 INNER JOIN rt0 ON ((rt0.c2)LIKE((rt0.c0 IN ()))) FULL OUTER JOIN vt0 ON ((((t0.c3)>=(rt0.c0))) NOT NULL) WHERE (t0.c33);
SELECT SUM(count) FROM (SELECT ALL ((t0.c33) IS TRUE)  as count FROM t0, vt1 INNER JOIN rt0 ON ((rt0.c2)LIKE((rt0.c0 IN ()))) FULL OUTER JOIN vt0 ON ((((t0.c3)>=(rt0.c0))) NOT NULL));
SELECT * FROM t0, vt1 INNER JOIN rt0 ON ((rt0.c2)LIKE((rt0.c0 IN ()))) FULL OUTER JOIN vt0 ON ((((t0.c3)>=(rt0.c0))) NOT NULL) WHERE (t0.c33);
SELECT SUM(count) FROM (SELECT ALL ((t0.c33) IS TRUE)  as count FROM t0, vt1 INNER JOIN rt0 ON ((rt0.c2)LIKE((rt0.c0 IN ()))) FULL OUTER JOIN vt0 ON ((((t0.c3)>=(rt0.c0))) NOT NULL));
SELECT * FROM t0, vt1 INNER JOIN rt0 ON ((rt0.c2)LIKE((rt0.c0 IN ()))) FULL OUTER JOIN vt0 ON ((((t0.c3)>=(rt0.c0))) NOT NULL) WHERE (t0.c33);
SELECT COUNT(*) FROM vt1, t0 WHERE (((TYPEOF(t0.c33))&(((t0.c33) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(t0.c33))&(((t0.c33) IS FALSE)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((TYPEOF(t0.c33))&(((t0.c33) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(t0.c33))&(((t0.c33) IS FALSE)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((TYPEOF(t0.c33))&(((t0.c33) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((t0.c3)*('')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c3)*('')) IN ())) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((t0.c3)*('')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c3)*('')) IN ())) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((t0.c3)*('')) IN ()));
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN vt1 WHERE (PRINTF(CAST(rt0.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(CAST(rt0.c2 AS TEXT))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN vt1 WHERE (PRINTF(CAST(rt0.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(CAST(rt0.c2 AS TEXT))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN vt1 WHERE (PRINTF(CAST(rt0.c2 AS TEXT)));
SELECT COUNT(*) FROM t0, vt0, vt1 NOT INDEXED WHERE (((0.9822614820700147) NOT BETWEEN (((vt0.c0)/(t0.c3))) AND ((NOT (t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.9822614820700147) NOT BETWEEN (((vt0.c0)/(t0.c3))) AND ((NOT (t0.c3))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 NOT INDEXED WHERE (((0.9822614820700147) NOT BETWEEN (((vt0.c0)/(t0.c3))) AND ((NOT (t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.9822614820700147) NOT BETWEEN (((vt0.c0)/(t0.c3))) AND ((NOT (t0.c3))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 NOT INDEXED WHERE (((0.9822614820700147) NOT BETWEEN (((vt0.c0)/(t0.c3))) AND ((NOT (t0.c3)))));
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1) NOT BETWEEN (rt0.c2) AND (0x359376ef)))%((+ (vt0.c1)))) WHERE (((NULLIF(rt0.c1, vt0.c0))IS NOT((rt0.c2 IN (rt0.c0))))) ORDER BY (((+ (rt0.c1)))&(((vt0.c0) IS TRUE))), CASE (rt0.c1 IN (rt0.c1, t0.c33))  WHEN ((((((((rt0.c2)AND(rt0.c1)))OR(x'062b')))OR(rt0.c2)))OR(t0.c33)) THEN rt0.c2 ELSE ((t0.c33)LIKE(rt0.c2)) END DESC, CAST((t0.c33 IN ()) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt0.c1, vt0.c0))IS NOT((rt0.c2 IN (rt0.c0))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1) NOT BETWEEN (rt0.c2) AND (0x359376ef)))%((+ (vt0.c1)))) ORDER BY (((+ (rt0.c1)))&(((vt0.c0) IS TRUE))), CASE (rt0.c1 IN (rt0.c1, t0.c33))  WHEN ((((((((rt0.c2)AND(rt0.c1)))OR(x'062b')))OR(rt0.c2)))OR(t0.c33)) THEN rt0.c2 ELSE ((t0.c33)LIKE(rt0.c2)) END DESC, CAST((t0.c33 IN ()) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1) NOT BETWEEN (rt0.c2) AND (0x359376ef)))%((+ (vt0.c1)))) WHERE (((NULLIF(rt0.c1, vt0.c0))IS NOT((rt0.c2 IN (rt0.c0))))) ORDER BY (((+ (rt0.c1)))&(((vt0.c0) IS TRUE))), CASE (rt0.c1 IN (rt0.c1, t0.c33))  WHEN ((((((((rt0.c2)AND(rt0.c1)))OR(x'062b')))OR(rt0.c2)))OR(t0.c33)) THEN rt0.c2 ELSE ((t0.c33)LIKE(rt0.c2)) END DESC, CAST((t0.c33 IN ()) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt0.c1, vt0.c0))IS NOT((rt0.c2 IN (rt0.c0))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1) NOT BETWEEN (rt0.c2) AND (0x359376ef)))%((+ (vt0.c1)))) ORDER BY (((+ (rt0.c1)))&(((vt0.c0) IS TRUE))), CASE (rt0.c1 IN (rt0.c1, t0.c33))  WHEN ((((((((rt0.c2)AND(rt0.c1)))OR(x'062b')))OR(rt0.c2)))OR(t0.c33)) THEN rt0.c2 ELSE ((t0.c33)LIKE(rt0.c2)) END DESC, CAST((t0.c33 IN ()) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1) NOT BETWEEN (rt0.c2) AND (0x359376ef)))%((+ (vt0.c1)))) WHERE (((NULLIF(rt0.c1, vt0.c0))IS NOT((rt0.c2 IN (rt0.c0))))) ORDER BY (((+ (rt0.c1)))&(((vt0.c0) IS TRUE))), CASE (rt0.c1 IN (rt0.c1, t0.c33))  WHEN ((((((((rt0.c2)AND(rt0.c1)))OR(x'062b')))OR(rt0.c2)))OR(t0.c33)) THEN rt0.c2 ELSE ((t0.c33)LIKE(rt0.c2)) END DESC, CAST((t0.c33 IN ()) AS INTEGER)  NULLS LAST;
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON vt1.c0 WHERE ((- (((vt1.c0) BETWEEN (t0.c3) AND (t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) BETWEEN (t0.c3) AND (t0.c3))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON vt1.c0);
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON vt1.c0 WHERE ((- (((vt1.c0) BETWEEN (t0.c3) AND (t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) BETWEEN (t0.c3) AND (t0.c3))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON vt1.c0);
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON vt1.c0 WHERE ((- (((vt1.c0) BETWEEN (t0.c3) AND (t0.c3)))));
SELECT * FROM t0 WHERE (((CAST(t0.c3 AS BLOB))>(((t0.c3)|(t0.c3))))) ORDER BY ((t0.c3 COLLATE RTRIM)<((t0.c3 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c3 AS BLOB))>(((t0.c3)|(t0.c3))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c3 COLLATE RTRIM)<((t0.c3 IN ()))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((CAST(t0.c3 AS BLOB))>(((t0.c3)|(t0.c3))))) ORDER BY ((t0.c3 COLLATE RTRIM)<((t0.c3 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c3 AS BLOB))>(((t0.c3)|(t0.c3))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c3 COLLATE RTRIM)<((t0.c3 IN ()))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((CAST(t0.c3 AS BLOB))>(((t0.c3)|(t0.c3))))) ORDER BY ((t0.c3 COLLATE RTRIM)<((t0.c3 IN ()))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (((CAST(t0.c33 AS TEXT))-((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) ORDER BY ((x'') NOTNULL);
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c33 AS TEXT))-((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY ((x'') NOTNULL));
SELECT COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (((CAST(t0.c33 AS TEXT))-((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) ORDER BY ((x'') NOTNULL);
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c33 AS TEXT))-((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY ((x'') NOTNULL));
SELECT COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (((CAST(t0.c33 AS TEXT))-((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) ORDER BY ((x'') NOTNULL);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (CAST(t0.c3 AS REAL) COLLATE BINARY) ORDER BY (NOT (CAST(t0.c33 AS INTEGER)))  NULLS FIRST, LOWER(DISTINCT rt0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c3 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY (NOT (CAST(t0.c33 AS INTEGER)))  NULLS FIRST, LOWER(DISTINCT rt0.c0) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (CAST(t0.c3 AS REAL) COLLATE BINARY) ORDER BY (NOT (CAST(t0.c33 AS INTEGER)))  NULLS FIRST, LOWER(DISTINCT rt0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c3 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY (NOT (CAST(t0.c33 AS INTEGER)))  NULLS FIRST, LOWER(DISTINCT rt0.c0) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (CAST(t0.c3 AS REAL) COLLATE BINARY) ORDER BY (NOT (CAST(t0.c33 AS INTEGER)))  NULLS FIRST, LOWER(DISTINCT rt0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (vt1.c0) ORDER BY ((COALESCE('255318557', rt0.c1))AND(((rt0.c2)GLOB(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY ((COALESCE('255318557', rt0.c1))AND(((rt0.c2)GLOB(rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (vt1.c0) ORDER BY ((COALESCE('255318557', rt0.c1))AND(((rt0.c2)GLOB(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY ((COALESCE('255318557', rt0.c1))AND(((rt0.c2)GLOB(rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (vt1.c0) ORDER BY ((COALESCE('255318557', rt0.c1))AND(((rt0.c2)GLOB(rt0.c1)))) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON TYPEOF(((vt1.c0)&(vt0.c0))) LEFT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN vt1.c0 THEN vt0.c1 ELSE rt0.c2 END) ISNULL) WHERE (rt0.c2) ORDER BY ((((rt0.c0)||(vt0.c1))) BETWEEN ((- (x''))) AND (((t0.c3)+('1302200078')))), CAST(CAST(vt1.c0 AS INTEGER) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON TYPEOF(((vt1.c0)&(vt0.c0))) LEFT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN vt1.c0 THEN vt0.c1 ELSE rt0.c2 END) ISNULL) ORDER BY ((((rt0.c0)||(vt0.c1))) BETWEEN ((- (x''))) AND (((t0.c3)+('1302200078')))), CAST(CAST(vt1.c0 AS INTEGER) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON TYPEOF(((vt1.c0)&(vt0.c0))) LEFT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN vt1.c0 THEN vt0.c1 ELSE rt0.c2 END) ISNULL) WHERE (rt0.c2) ORDER BY ((((rt0.c0)||(vt0.c1))) BETWEEN ((- (x''))) AND (((t0.c3)+('1302200078')))), CAST(CAST(vt1.c0 AS INTEGER) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON TYPEOF(((vt1.c0)&(vt0.c0))) LEFT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN vt1.c0 THEN vt0.c1 ELSE rt0.c2 END) ISNULL) ORDER BY ((((rt0.c0)||(vt0.c1))) BETWEEN ((- (x''))) AND (((t0.c3)+('1302200078')))), CAST(CAST(vt1.c0 AS INTEGER) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON TYPEOF(((vt1.c0)&(vt0.c0))) LEFT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN vt1.c0 THEN vt0.c1 ELSE rt0.c2 END) ISNULL) WHERE (rt0.c2) ORDER BY ((((rt0.c0)||(vt0.c1))) BETWEEN ((- (x''))) AND (((t0.c3)+('1302200078')))), CAST(CAST(vt1.c0 AS INTEGER) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY ((CAST(t0.c3 AS BLOB)) NOT BETWEEN ((((rt0.c0, x'', t0.c33)) NOT BETWEEN ((vt0.c0, rt0.c2, t0.c3)) AND ((rt0.c1, rt0.c1, rt0.c2)))) AND (((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((CAST(t0.c3 AS BLOB)) NOT BETWEEN ((((rt0.c0, x'', t0.c33)) NOT BETWEEN ((vt0.c0, rt0.c2, t0.c3)) AND ((rt0.c1, rt0.c1, rt0.c2)))) AND (((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY ((CAST(t0.c3 AS BLOB)) NOT BETWEEN ((((rt0.c0, x'', t0.c33)) NOT BETWEEN ((vt0.c0, rt0.c2, t0.c3)) AND ((rt0.c1, rt0.c1, rt0.c2)))) AND (((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((CAST(t0.c3 AS BLOB)) NOT BETWEEN ((((rt0.c0, x'', t0.c33)) NOT BETWEEN ((vt0.c0, rt0.c2, t0.c3)) AND ((rt0.c1, rt0.c1, rt0.c2)))) AND (((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY ((CAST(t0.c3 AS BLOB)) NOT BETWEEN ((((rt0.c0, x'', t0.c33)) NOT BETWEEN ((vt0.c0, rt0.c2, t0.c3)) AND ((rt0.c1, rt0.c1, rt0.c2)))) AND (((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (LTRIM(((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((LTRIM(((vt1.c0) ISNULL))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (LTRIM(((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((LTRIM(((vt1.c0) ISNULL))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (LTRIM(((vt1.c0) ISNULL)));
SELECT * FROM t0 WHERE (SUBSTR(t0.c3, t0.c33)) ORDER BY (CAST(t0.c33 AS REAL) IN ()) ASC, t0.c33  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SUBSTR(t0.c3, t0.c33)) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c33 AS REAL) IN ()) ASC, t0.c33  NULLS LAST);
SELECT * FROM t0 WHERE (SUBSTR(t0.c3, t0.c33)) ORDER BY (CAST(t0.c33 AS REAL) IN ()) ASC, t0.c33  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SUBSTR(t0.c3, t0.c33)) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c33 AS REAL) IN ()) ASC, t0.c33  NULLS LAST);
SELECT * FROM t0 WHERE (SUBSTR(t0.c3, t0.c33)) ORDER BY (CAST(t0.c33 AS REAL) IN ()) ASC, t0.c33  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON rt0.c0 INNER JOIN vt1 ON CAST(rt0.c0 AS TEXT) COLLATE BINARY WHERE (CAST(t0.c33 AS BLOB)) ORDER BY (NOT ((rt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c33 AS BLOB)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON rt0.c0 INNER JOIN vt1 ON CAST(rt0.c0 AS TEXT) COLLATE BINARY ORDER BY (NOT ((rt0.c0 IN ()))) DESC);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON rt0.c0 INNER JOIN vt1 ON CAST(rt0.c0 AS TEXT) COLLATE BINARY WHERE (CAST(t0.c33 AS BLOB)) ORDER BY (NOT ((rt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c33 AS BLOB)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON rt0.c0 INNER JOIN vt1 ON CAST(rt0.c0 AS TEXT) COLLATE BINARY ORDER BY (NOT ((rt0.c0 IN ()))) DESC);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON rt0.c0 INNER JOIN vt1 ON CAST(rt0.c0 AS TEXT) COLLATE BINARY WHERE (CAST(t0.c33 AS BLOB)) ORDER BY (NOT ((rt0.c0 IN ()))) DESC;
SELECT * FROM t0, vt1 WHERE (IFNULL(DISTINCT (((t0.c3, t0.c3, '1481525743', t0.c3, t0.c33)) BETWEEN ((t0.c3, vt1.c0, 1816686752, vt1.c0, t0.c3)) AND ((t0.c3, t0.c3, '[Q檷c	Og9{}', t0.c33, t0.c33))), (t0.c3 IN (t0.c33))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (((t0.c3, t0.c3, '1481525743', t0.c3, t0.c33)) BETWEEN ((t0.c3, vt1.c0, 1816686752, vt1.c0, t0.c3)) AND ((t0.c3, t0.c3, '[Q檷c	Og9{}', t0.c33, t0.c33))), (t0.c3 IN (t0.c33)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (IFNULL(DISTINCT (((t0.c3, t0.c3, '1481525743', t0.c3, t0.c33)) BETWEEN ((t0.c3, vt1.c0, 1816686752, vt1.c0, t0.c3)) AND ((t0.c3, t0.c3, '[Q檷c	Og9{}', t0.c33, t0.c33))), (t0.c3 IN (t0.c33))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (((t0.c3, t0.c3, '1481525743', t0.c3, t0.c33)) BETWEEN ((t0.c3, vt1.c0, 1816686752, vt1.c0, t0.c3)) AND ((t0.c3, t0.c3, '[Q檷c	Og9{}', t0.c33, t0.c33))), (t0.c3 IN (t0.c33)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (IFNULL(DISTINCT (((t0.c3, t0.c3, '1481525743', t0.c3, t0.c33)) BETWEEN ((t0.c3, vt1.c0, 1816686752, vt1.c0, t0.c3)) AND ((t0.c3, t0.c3, '[Q檷c	Og9{}', t0.c33, t0.c33))), (t0.c3 IN (t0.c33))));
SELECT * FROM vt0, rt0, t0, vt1 WHERE (CASE vt0.c0  WHEN NULL THEN (+ (-1.960129203E9)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN NULL THEN (+ (-1.960129203E9)) END) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (CASE vt0.c0  WHEN NULL THEN (+ (-1.960129203E9)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN NULL THEN (+ (-1.960129203E9)) END) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (CASE vt0.c0  WHEN NULL THEN (+ (-1.960129203E9)) END);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((((((rt0.c0 IN ()))AND(CASE 0.6809267313128122  WHEN NULL THEN vt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 ELSE '-1182618032' END)))OR(CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN ()))AND(CASE 0.6809267313128122  WHEN NULL THEN vt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 ELSE '-1182618032' END)))OR(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((((((rt0.c0 IN ()))AND(CASE 0.6809267313128122  WHEN NULL THEN vt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 ELSE '-1182618032' END)))OR(CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN ()))AND(CASE 0.6809267313128122  WHEN NULL THEN vt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 ELSE '-1182618032' END)))OR(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((((((rt0.c0 IN ()))AND(CASE 0.6809267313128122  WHEN NULL THEN vt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 ELSE '-1182618032' END)))OR(CAST(rt0.c0 AS TEXT))));
SELECT * FROM vt1, t0 WHERE ((+ (LOWER(DISTINCT t0.c3)))) ORDER BY t0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (LOWER(DISTINCT t0.c3)))) IS TRUE)  as count FROM vt1, t0 ORDER BY t0.c3  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ((+ (LOWER(DISTINCT t0.c3)))) ORDER BY t0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (LOWER(DISTINCT t0.c3)))) IS TRUE)  as count FROM vt1, t0 ORDER BY t0.c3  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ((+ (LOWER(DISTINCT t0.c3)))) ORDER BY t0.c3  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((~ (rt0.c2))))!=(((~ (rt0.c0))))) RIGHT OUTER JOIN t0 ON CAST(((((rt0.c2)OR(rt0.c1)))OR(t0.c33)) AS INTEGER) WHERE (CASE WHEN (vt0.c1 IN ()) THEN ((t0.c3)<(vt0.c1)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND (('U1'))) END) ORDER BY (((('i䇖')AND(rt0.c0 COLLATE NOCASE)))AND(CAST(t0.c33 AS REAL))) DESC  NULLS LAST, (~ (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c1 IN ()) THEN ((t0.c3)<(vt0.c1)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND (('U1'))) END) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((~ (rt0.c2))))!=(((~ (rt0.c0))))) RIGHT OUTER JOIN t0 ON CAST(((((rt0.c2)OR(rt0.c1)))OR(t0.c33)) AS INTEGER) ORDER BY (((('i䇖')AND(rt0.c0 COLLATE NOCASE)))AND(CAST(t0.c33 AS REAL))) DESC  NULLS LAST, (~ (x''))  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((~ (rt0.c2))))!=(((~ (rt0.c0))))) RIGHT OUTER JOIN t0 ON CAST(((((rt0.c2)OR(rt0.c1)))OR(t0.c33)) AS INTEGER) WHERE (CASE WHEN (vt0.c1 IN ()) THEN ((t0.c3)<(vt0.c1)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND (('U1'))) END) ORDER BY (((('i䇖')AND(rt0.c0 COLLATE NOCASE)))AND(CAST(t0.c33 AS REAL))) DESC  NULLS LAST, (~ (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c1 IN ()) THEN ((t0.c3)<(vt0.c1)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND (('U1'))) END) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((~ (rt0.c2))))!=(((~ (rt0.c0))))) RIGHT OUTER JOIN t0 ON CAST(((((rt0.c2)OR(rt0.c1)))OR(t0.c33)) AS INTEGER) ORDER BY (((('i䇖')AND(rt0.c0 COLLATE NOCASE)))AND(CAST(t0.c33 AS REAL))) DESC  NULLS LAST, (~ (x''))  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((~ (rt0.c2))))!=(((~ (rt0.c0))))) RIGHT OUTER JOIN t0 ON CAST(((((rt0.c2)OR(rt0.c1)))OR(t0.c33)) AS INTEGER) WHERE (CASE WHEN (vt0.c1 IN ()) THEN ((t0.c3)<(vt0.c1)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND (('U1'))) END) ORDER BY (((('i䇖')AND(rt0.c0 COLLATE NOCASE)))AND(CAST(t0.c33 AS REAL))) DESC  NULLS LAST, (~ (x''))  NULLS FIRST;
SELECT * FROM rt0, vt1, t0, vt0 WHERE (CAST(((NULL) NOT BETWEEN (0X7c2308aa) AND (x'')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOT BETWEEN (0x7c2308aa) AND (x'')) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT * FROM rt0, vt1, t0, vt0 WHERE (CAST(((NULL) NOT BETWEEN (0X7c2308aa) AND (x'')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOT BETWEEN (0x7c2308aa) AND (x'')) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT * FROM rt0, vt1, t0, vt0 WHERE (CAST(((NULL) NOT BETWEEN (0X7c2308aa) AND (x'')) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY x'' DESC  NULLS LAST;
SELECT * FROM vt0 INNER JOIN vt1 ON vt0.c1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON vt0.c1);
SELECT * FROM vt0 INNER JOIN vt1 ON vt0.c1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON vt0.c1);
SELECT * FROM vt0 INNER JOIN vt1 ON vt0.c1 WHERE (vt1.c0);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (((((CAST(t0.c3 AS BLOB))OR(((rt0.c1)IS NOT(-1853105822)))))AND(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c3 AS BLOB))OR(((rt0.c1)IS NOT(-1853105822)))))AND(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (((((CAST(t0.c3 AS BLOB))OR(((rt0.c1)IS NOT(-1853105822)))))AND(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c3 AS BLOB))OR(((rt0.c1)IS NOT(-1853105822)))))AND(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (((((CAST(t0.c3 AS BLOB))OR(((rt0.c1)IS NOT(-1853105822)))))AND(CAST(rt0.c0 AS BLOB))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON TYPEOF(((((x'7f0f0d47')OR(rt0.c1)))AND(t0.c33))) INNER JOIN rt0 ON x'' LEFT OUTER JOIN vt1 ON (((0.6566378816794174) IS TRUE) IN (IFNULL(t0.c3, vt1.c0), ((t0.c33)IS NOT(x'8e2f')))) WHERE ('-1117886394');
SELECT SUM(count) FROM (SELECT (('-1117886394') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON TYPEOF(((((x'7f0f0d47')OR(rt0.c1)))AND(t0.c33))) INNER JOIN rt0 ON x'' LEFT OUTER JOIN vt1 ON (((0.6566378816794174) IS TRUE) IN (IFNULL(t0.c3, vt1.c0), ((t0.c33)IS NOT(x'8e2f')))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON TYPEOF(((((x'7f0f0d47')OR(rt0.c1)))AND(t0.c33))) INNER JOIN rt0 ON x'' LEFT OUTER JOIN vt1 ON (((0.6566378816794174) IS TRUE) IN (IFNULL(t0.c3, vt1.c0), ((t0.c33)IS NOT(x'8e2f')))) WHERE ('-1117886394');
SELECT SUM(count) FROM (SELECT (('-1117886394') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON TYPEOF(((((x'7f0f0d47')OR(rt0.c1)))AND(t0.c33))) INNER JOIN rt0 ON x'' LEFT OUTER JOIN vt1 ON (((0.6566378816794174) IS TRUE) IN (IFNULL(t0.c3, vt1.c0), ((t0.c33)IS NOT(x'8e2f')))));
SELECT * FROM t0, rt0, vt0, vt1 WHERE (((CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN '-1993872387' THEN t0.c33 WHEN t0.c33 THEN vt1.c0 WHEN t0.c3 THEN rt0.c1 WHEN t0.c3 THEN rt0.c1 ELSE rt0.c2 END)=((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN '-1993872387' THEN t0.c33 WHEN t0.c33 THEN vt1.c0 WHEN t0.c3 THEN rt0.c1 WHEN t0.c3 THEN rt0.c1 ELSE rt0.c2 END)=((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (((CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN '-1993872387' THEN t0.c33 WHEN t0.c33 THEN vt1.c0 WHEN t0.c3 THEN rt0.c1 WHEN t0.c3 THEN rt0.c1 ELSE rt0.c2 END)=((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN '-1993872387' THEN t0.c33 WHEN t0.c33 THEN vt1.c0 WHEN t0.c3 THEN rt0.c1 WHEN t0.c3 THEN rt0.c1 ELSE rt0.c2 END)=((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (((CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN '-1993872387' THEN t0.c33 WHEN t0.c33 THEN vt1.c0 WHEN t0.c3 THEN rt0.c1 WHEN t0.c3 THEN rt0.c1 ELSE rt0.c2 END)=((rt0.c1 IN ()))));
SELECT * FROM rt0, vt1, t0, vt0 WHERE ((- ((t0.c3 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((t0.c3 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT * FROM rt0, vt1, t0, vt0 WHERE ((- ((t0.c3 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((t0.c3 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT * FROM rt0, vt1, t0, vt0 WHERE ((- ((t0.c3 IN (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (UNICODE(((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND ((((vt0.c0, vt0.c1, vt0.c1))<((vt0.c1, vt0.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((UNICODE(((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND ((((vt0.c0, vt0.c1, vt0.c1))<((vt0.c1, vt0.c0, vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (UNICODE(((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND ((((vt0.c0, vt0.c1, vt0.c1))<((vt0.c1, vt0.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((UNICODE(((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND ((((vt0.c0, vt0.c1, vt0.c1))<((vt0.c1, vt0.c0, vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (UNICODE(((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND ((((vt0.c0, vt0.c1, vt0.c1))<((vt0.c1, vt0.c0, vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 LEFT OUTER JOIN vt1 ON CASE vt0.c1 COLLATE BINARY  WHEN CAST(vt1.c0 AS REAL) THEN '' ELSE UNLIKELY(rt0.c2) END WHERE ((((~ ('-1117886394'))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ ('-1117886394'))) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt0 LEFT OUTER JOIN vt1 ON CASE vt0.c1 COLLATE BINARY  WHEN CAST(vt1.c0 AS REAL) THEN '' ELSE UNLIKELY(rt0.c2) END);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 LEFT OUTER JOIN vt1 ON CASE vt0.c1 COLLATE BINARY  WHEN CAST(vt1.c0 AS REAL) THEN '' ELSE UNLIKELY(rt0.c2) END WHERE ((((~ ('-1117886394'))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ ('-1117886394'))) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt0 LEFT OUTER JOIN vt1 ON CASE vt0.c1 COLLATE BINARY  WHEN CAST(vt1.c0 AS REAL) THEN '' ELSE UNLIKELY(rt0.c2) END);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 LEFT OUTER JOIN vt1 ON CASE vt0.c1 COLLATE BINARY  WHEN CAST(vt1.c0 AS REAL) THEN '' ELSE UNLIKELY(rt0.c2) END WHERE ((((~ ('-1117886394'))) NOT NULL));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((-515720947)) NOT BETWEEN ((t0.c33)) AND ((t0.c33)))) NOT BETWEEN (LIKELY(DISTINCT t0.c33)) AND (((t0.c33) BETWEEN ('729343025') AND (t0.c3))))) ORDER BY x'', ((HEX(t0.c3)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((-515720947)) NOT BETWEEN ((t0.c33)) AND ((t0.c33)))) NOT BETWEEN (LIKELY(DISTINCT t0.c33)) AND (((t0.c33) BETWEEN ('729343025') AND (t0.c3))))) IS TRUE)  as count FROM t0 ORDER BY x'', ((HEX(t0.c3)) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((-515720947)) NOT BETWEEN ((t0.c33)) AND ((t0.c33)))) NOT BETWEEN (LIKELY(DISTINCT t0.c33)) AND (((t0.c33) BETWEEN ('729343025') AND (t0.c3))))) ORDER BY x'', ((HEX(t0.c3)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((-515720947)) NOT BETWEEN ((t0.c33)) AND ((t0.c33)))) NOT BETWEEN (LIKELY(DISTINCT t0.c33)) AND (((t0.c33) BETWEEN ('729343025') AND (t0.c3))))) IS TRUE)  as count FROM t0 ORDER BY x'', ((HEX(t0.c3)) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((-515720947)) NOT BETWEEN ((t0.c33)) AND ((t0.c33)))) NOT BETWEEN (LIKELY(DISTINCT t0.c33)) AND (((t0.c33) BETWEEN ('729343025') AND (t0.c3))))) ORDER BY x'', ((HEX(t0.c3)) NOTNULL) DESC;
SELECT ALL * FROM rt0, t0 WHERE (((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT NULL)) ORDER BY CAST((((t0.c3))>=((t0.c33))) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST((((t0.c3))>=((t0.c33))) AS REAL));
SELECT ALL * FROM rt0, t0 WHERE (((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT NULL)) ORDER BY CAST((((t0.c3))>=((t0.c33))) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST((((t0.c3))>=((t0.c33))) AS REAL));
SELECT ALL * FROM rt0, t0 WHERE (((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT NULL)) ORDER BY CAST((((t0.c3))>=((t0.c33))) AS REAL);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((x'1b49') IS TRUE)) NOT BETWEEN ((((rt0.c2, t0.c33, t0.c3, NULL, rt0.c0))<>((t0.c33, rt0.c1, rt0.c0, t0.c3, rt0.c0)))) AND (LOWER(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'1b49') IS TRUE)) NOT BETWEEN ((((rt0.c2, t0.c33, t0.c3, NULL, rt0.c0))!=((t0.c33, rt0.c1, rt0.c0, t0.c3, rt0.c0)))) AND (LOWER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((x'1b49') IS TRUE)) NOT BETWEEN ((((rt0.c2, t0.c33, t0.c3, NULL, rt0.c0))<>((t0.c33, rt0.c1, rt0.c0, t0.c3, rt0.c0)))) AND (LOWER(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'1b49') IS TRUE)) NOT BETWEEN ((((rt0.c2, t0.c33, t0.c3, NULL, rt0.c0))!=((t0.c33, rt0.c1, rt0.c0, t0.c3, rt0.c0)))) AND (LOWER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((x'1b49') IS TRUE)) NOT BETWEEN ((((rt0.c2, t0.c33, t0.c3, NULL, rt0.c0))<>((t0.c33, rt0.c1, rt0.c0, t0.c3, rt0.c0)))) AND (LOWER(DISTINCT rt0.c0))));
SELECT COUNT(*) FROM t0, vt1 WHERE (LOWER((- (t0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((- (t0.c3)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (LOWER((- (t0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((- (t0.c3)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (LOWER((- (t0.c3))));
SELECT ALL * FROM t0 WHERE ('') ORDER BY STRFTIME(NULLIF(t0.c33, t0.c33), CAST(NULL AS NUMERIC), LIKELIHOOD(DISTINCT t0.c3, 0.7720269796465006)) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 ORDER BY STRFTIME(NULLIF(t0.c33, t0.c33), CAST(NULL AS NUMERIC), LIKELIHOOD(DISTINCT t0.c3, 0.7720269796465006)) ASC);
SELECT ALL * FROM t0 WHERE ('') ORDER BY STRFTIME(NULLIF(t0.c33, t0.c33), CAST(NULL AS NUMERIC), LIKELIHOOD(DISTINCT t0.c3, 0.7720269796465006)) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 ORDER BY STRFTIME(NULLIF(t0.c33, t0.c33), CAST(NULL AS NUMERIC), LIKELIHOOD(DISTINCT t0.c3, 0.7720269796465006)) ASC);
SELECT ALL * FROM t0 WHERE ('') ORDER BY STRFTIME(NULLIF(t0.c33, t0.c33), CAST(NULL AS NUMERIC), LIKELIHOOD(DISTINCT t0.c3, 0.7720269796465006)) ASC;
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON (((((t0.c33)>=(vt1.c0))))<=((((rt0.c1)&(NULL))))) RIGHT OUTER JOIN rt0 ON CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c33 THEN vt0.c0 WHEN t0.c3 THEN rt0.c1 WHEN rt0.c1 THEN NULL ELSE rt0.c0 END AS REAL) RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (((((t0.c33)>=(vt1.c0))))<=((((rt0.c1)&(NULL))))) RIGHT OUTER JOIN rt0 ON CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c33 THEN vt0.c0 WHEN t0.c3 THEN rt0.c1 WHEN rt0.c1 THEN NULL ELSE rt0.c0 END AS REAL) RIGHT OUTER JOIN vt0 ON vt1.c0);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON (((((t0.c33)>=(vt1.c0))))<=((((rt0.c1)&(NULL))))) RIGHT OUTER JOIN rt0 ON CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c33 THEN vt0.c0 WHEN t0.c3 THEN rt0.c1 WHEN rt0.c1 THEN NULL ELSE rt0.c0 END AS REAL) RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (((((t0.c33)>=(vt1.c0))))<=((((rt0.c1)&(NULL))))) RIGHT OUTER JOIN rt0 ON CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c33 THEN vt0.c0 WHEN t0.c3 THEN rt0.c1 WHEN rt0.c1 THEN NULL ELSE rt0.c0 END AS REAL) RIGHT OUTER JOIN vt0 ON vt1.c0);
SELECT * FROM vt0, vt1, rt0 WHERE ((((vt0.c1 IN ())) NOT NULL)) ORDER BY ((~ (vt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((~ (vt1.c0)) IN ()) DESC);
SELECT * FROM vt0, vt1, rt0 WHERE ((((vt0.c1 IN ())) NOT NULL)) ORDER BY ((~ (vt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((~ (vt1.c0)) IN ()) DESC);
SELECT * FROM vt0, vt1, rt0 WHERE ((((vt0.c1 IN ())) NOT NULL)) ORDER BY ((~ (vt1.c0)) IN ()) DESC;
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) IN ()));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((rt0.c0) NOTNULL) COLLATE BINARY) ORDER BY ((NULL) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 END) AND (((0Xffffffffdbc75f39) BETWEEN (rt0.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((NULL) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 END) AND (((0xffffffffdbc75f39) BETWEEN (rt0.c0) AND (vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((rt0.c0) NOTNULL) COLLATE BINARY) ORDER BY ((NULL) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 END) AND (((0Xffffffffdbc75f39) BETWEEN (rt0.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((NULL) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 END) AND (((0xffffffffdbc75f39) BETWEEN (rt0.c0) AND (vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((rt0.c0) NOTNULL) COLLATE BINARY) ORDER BY ((NULL) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 END) AND (((0Xffffffffdbc75f39) BETWEEN (rt0.c0) AND (vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (TRIM(vt0.c1 COLLATE RTRIM, '2179612120890853790'));
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.c1 COLLATE RTRIM, '2179612120890853790')) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (TRIM(vt0.c1 COLLATE RTRIM, '2179612120890853790'));
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.c1 COLLATE RTRIM, '2179612120890853790')) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (TRIM(vt0.c1 COLLATE RTRIM, '2179612120890853790'));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((((((CAST(vt0.c1 AS NUMERIC))AND((~ (rt0.c0)))))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))))AND((- (rt0.c2)))))AND(CAST(vt0.c1 AS BLOB))) RIGHT OUTER JOIN vt1 ON (((((((((- (rt0.c2)))OR(((vt0.c0)==(rt0.c2)))))AND(rt0.c2)))OR(0.9000940893491745)))OR((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((0.5044602355722265))))) WHERE ((((vt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((((vt0.c0)/(rt0.c2)), ((rt0.c2)||(x'')), rt0.c2)) AND (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))), vt1.c0 COLLATE NOCASE, (- (vt0.c0)))))) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((((vt0.c0)/(rt0.c2)), ((rt0.c2)||(x'')), rt0.c2)) AND (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))), vt1.c0 COLLATE NOCASE, (- (vt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((((((CAST(vt0.c1 AS NUMERIC))AND((~ (rt0.c0)))))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))))AND((- (rt0.c2)))))AND(CAST(vt0.c1 AS BLOB))) RIGHT OUTER JOIN vt1 ON (((((((((- (rt0.c2)))OR(((vt0.c0)=(rt0.c2)))))AND(rt0.c2)))OR(0.9000940893491745)))OR((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((0.5044602355722265))))) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE ASC);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((((((CAST(vt0.c1 AS NUMERIC))AND((~ (rt0.c0)))))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))))AND((- (rt0.c2)))))AND(CAST(vt0.c1 AS BLOB))) RIGHT OUTER JOIN vt1 ON (((((((((- (rt0.c2)))OR(((vt0.c0)==(rt0.c2)))))AND(rt0.c2)))OR(0.9000940893491745)))OR((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((0.5044602355722265))))) WHERE ((((vt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((((vt0.c0)/(rt0.c2)), ((rt0.c2)||(x'')), rt0.c2)) AND (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))), vt1.c0 COLLATE NOCASE, (- (vt0.c0)))))) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((((vt0.c0)/(rt0.c2)), ((rt0.c2)||(x'')), rt0.c2)) AND (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))), vt1.c0 COLLATE NOCASE, (- (vt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((((((CAST(vt0.c1 AS NUMERIC))AND((~ (rt0.c0)))))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))))AND((- (rt0.c2)))))AND(CAST(vt0.c1 AS BLOB))) RIGHT OUTER JOIN vt1 ON (((((((((- (rt0.c2)))OR(((vt0.c0)=(rt0.c2)))))AND(rt0.c2)))OR(0.9000940893491745)))OR((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((0.5044602355722265))))) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE ASC);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((((((CAST(vt0.c1 AS NUMERIC))AND((~ (rt0.c0)))))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))))AND((- (rt0.c2)))))AND(CAST(vt0.c1 AS BLOB))) RIGHT OUTER JOIN vt1 ON (((((((((- (rt0.c2)))OR(((vt0.c0)==(rt0.c2)))))AND(rt0.c2)))OR(0.9000940893491745)))OR((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((0.5044602355722265))))) WHERE ((((vt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((((vt0.c0)/(rt0.c2)), ((rt0.c2)||(x'')), rt0.c2)) AND (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))), vt1.c0 COLLATE NOCASE, (- (vt0.c0)))))) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (vt1.c0 COLLATE BINARY)));
SELECT * FROM t0, vt1, rt0 WHERE (rtreenode(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (NOT (t0.c33))));
SELECT SUM(count) FROM (SELECT ((rtreenode(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (NOT (t0.c33)))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE (rtreenode(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (NOT (t0.c33))));
SELECT SUM(count) FROM (SELECT ((rtreenode(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (NOT (t0.c33)))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE (rtreenode(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (NOT (t0.c33))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1)IS('954695372')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)IS('954695372')) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)IS('954695372')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)IS('954695372')) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)IS('954695372')) COLLATE NOCASE);
SELECT ALL * FROM rt0, t0 FULL OUTER JOIN vt0 ON (t0.c3 COLLATE RTRIM IN ()) WHERE (t0.c3);
SELECT SUM(count) FROM (SELECT ALL ((t0.c3) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON (t0.c3 COLLATE RTRIM IN ()));
SELECT ALL * FROM rt0, t0 FULL OUTER JOIN vt0 ON (t0.c3 COLLATE RTRIM IN ()) WHERE (t0.c3);
SELECT SUM(count) FROM (SELECT ALL ((t0.c3) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON (t0.c3 COLLATE RTRIM IN ()));
SELECT ALL * FROM rt0, t0 FULL OUTER JOIN vt0 ON (t0.c3 COLLATE RTRIM IN ()) WHERE (t0.c3);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0))))>=((LTRIM(vt1.c0))))) ORDER BY (((vt1.c0)*(vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0))))>=((LTRIM(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)*(vt1.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0))))>=((LTRIM(vt1.c0))))) ORDER BY (((vt1.c0)*(vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0))))>=((LTRIM(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)*(vt1.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0))))>=((LTRIM(vt1.c0))))) ORDER BY (((vt1.c0)*(vt1.c0)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) NOTNULL)) NOT NULL));
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED, rt0, vt1 WHERE (((((((((((rt0.c2)AND(vt0.c0)))OR(t0.c33)))AND(vt0.c1)))OR(rt0.c2)))>(((rt0.c1)GLOB(t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)AND(vt0.c0)))OR(t0.c33)))AND(vt0.c1)))OR(rt0.c2)))>(((rt0.c1)GLOB(t0.c3))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED, rt0, vt1 WHERE (((((((((((rt0.c2)AND(vt0.c0)))OR(t0.c33)))AND(vt0.c1)))OR(rt0.c2)))>(((rt0.c1)GLOB(t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)AND(vt0.c0)))OR(t0.c33)))AND(vt0.c1)))OR(rt0.c2)))>(((rt0.c1)GLOB(t0.c3))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED, rt0, vt1 WHERE (((((((((((rt0.c2)AND(vt0.c0)))OR(t0.c33)))AND(vt0.c1)))OR(rt0.c2)))>(((rt0.c1)GLOB(t0.c3)))));
SELECT ALL * FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (((- (vt0.c0)))>>('uḗc*bZ멆I')) INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (t0.c33) AND (vt0.c0)))||((((t0.c3, vt0.c0, vt0.c0))>=((vt0.c0, t0.c3, t0.c3))))) WHERE (CASE WHEN ((t0.c3) IS FALSE) THEN (((t0.c33)) BETWEEN ((vt0.c1)) AND (('-1044643237'))) ELSE HEX(DISTINCT rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c3) IS FALSE) THEN (((t0.c33)) BETWEEN ((vt0.c1)) AND (('-1044643237'))) ELSE HEX(DISTINCT rt0.c2) END) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (((- (vt0.c0)))>>('uḗc*bZ멆I')) INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (t0.c33) AND (vt0.c0)))||((((t0.c3, vt0.c0, vt0.c0))>=((vt0.c0, t0.c3, t0.c3))))));
SELECT ALL * FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (((- (vt0.c0)))>>('uḗc*bZ멆I')) INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (t0.c33) AND (vt0.c0)))||((((t0.c3, vt0.c0, vt0.c0))>=((vt0.c0, t0.c3, t0.c3))))) WHERE (CASE WHEN ((t0.c3) IS FALSE) THEN (((t0.c33)) BETWEEN ((vt0.c1)) AND (('-1044643237'))) ELSE HEX(DISTINCT rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c3) IS FALSE) THEN (((t0.c33)) BETWEEN ((vt0.c1)) AND (('-1044643237'))) ELSE HEX(DISTINCT rt0.c2) END) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (((- (vt0.c0)))>>('uḗc*bZ멆I')) INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (t0.c33) AND (vt0.c0)))||((((t0.c3, vt0.c0, vt0.c0))>=((vt0.c0, t0.c3, t0.c3))))));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (',') ORDER BY (('C') BETWEEN (((vt1.c0) IS TRUE)) AND (((0.2771962709139545)=(rt0.c1))))  NULLS FIRST, (CASE ''  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END IN ((((rt0.c1, vt0.c0, vt1.c0))<=((vt0.c1, vt0.c0, vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((',') IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (('C') BETWEEN (((vt1.c0) IS TRUE)) AND (((0.2771962709139545)==(rt0.c1))))  NULLS FIRST, (CASE ''  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END IN ((((rt0.c1, vt0.c0, vt1.c0))<=((vt0.c1, vt0.c0, vt0.c1))))) ASC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (',') ORDER BY (('C') BETWEEN (((vt1.c0) IS TRUE)) AND (((0.2771962709139545)=(rt0.c1))))  NULLS FIRST, (CASE ''  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END IN ((((rt0.c1, vt0.c0, vt1.c0))<=((vt0.c1, vt0.c0, vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((',') IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (('C') BETWEEN (((vt1.c0) IS TRUE)) AND (((0.2771962709139545)==(rt0.c1))))  NULLS FIRST, (CASE ''  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END IN ((((rt0.c1, vt0.c0, vt1.c0))<=((vt0.c1, vt0.c0, vt0.c1))))) ASC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (',') ORDER BY (('C') BETWEEN (((vt1.c0) IS TRUE)) AND (((0.2771962709139545)=(rt0.c1))))  NULLS FIRST, (CASE ''  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END IN ((((rt0.c1, vt0.c0, vt1.c0))<=((vt0.c1, vt0.c0, vt0.c1))))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c3) ORDER BY (- (((t0.c3)LIKE(t0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c3)LIKE(t0.c3)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c3) ORDER BY (- (((t0.c3)LIKE(t0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c3)LIKE(t0.c3)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c3) ORDER BY (- (((t0.c3)LIKE(t0.c3)))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ ((~ (x''))))) ORDER BY vt0.c0 DESC, (((rt0.c2, (rt0.c0 IN ()), '[]'))==(((rt0.c1 IN ()), (vt0.c0 IN ()), ((((vt0.c1)OR(rt0.c2)))OR(0.5305902971298018))))), (((x'' IN ())) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (CAST(rt0.c0 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (x''))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0 DESC, (((rt0.c2, (rt0.c0 IN ()), '[]'))==(((rt0.c1 IN ()), (vt0.c0 IN ()), ((((vt0.c1)OR(rt0.c2)))OR(0.5305902971298018))))), (((x'' IN ())) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (CAST(rt0.c0 AS BLOB))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ ((~ (x''))))) ORDER BY vt0.c0 DESC, (((rt0.c2, (rt0.c0 IN ()), '[]'))==(((rt0.c1 IN ()), (vt0.c0 IN ()), ((((vt0.c1)OR(rt0.c2)))OR(0.5305902971298018))))), (((x'' IN ())) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (CAST(rt0.c0 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (x''))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0 DESC, (((rt0.c2, (rt0.c0 IN ()), '[]'))==(((rt0.c1 IN ()), (vt0.c0 IN ()), ((((vt0.c1)OR(rt0.c2)))OR(0.5305902971298018))))), (((x'' IN ())) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (CAST(rt0.c0 AS BLOB))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ ((~ (x''))))) ORDER BY vt0.c0 DESC, (((rt0.c2, (rt0.c0 IN ()), '[]'))==(((rt0.c1 IN ()), (vt0.c0 IN ()), ((((vt0.c1)OR(rt0.c2)))OR(0.5305902971298018))))), (((x'' IN ())) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (CAST(rt0.c0 AS BLOB))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 COLLATE RTRIM, ((((NULL)AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0) IS TRUE)))<=((CAST(vt1.c0 AS BLOB), ((vt1.c0)LIKE(vt1.c0)), LENGTH(NULL))))) ORDER BY ((((vt1.c0 IN ())))<>((CAST(vt1.c0 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 COLLATE RTRIM, ((((NULL)AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0) IS TRUE)))<=((CAST(vt1.c0 AS BLOB), ((vt1.c0)LIKE(vt1.c0)), LENGTH(NULL))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0 IN ())))!=((CAST(vt1.c0 AS NUMERIC)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 COLLATE RTRIM, ((((NULL)AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0) IS TRUE)))<=((CAST(vt1.c0 AS BLOB), ((vt1.c0)LIKE(vt1.c0)), LENGTH(NULL))))) ORDER BY ((((vt1.c0 IN ())))<>((CAST(vt1.c0 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 COLLATE RTRIM, ((((NULL)AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0) IS TRUE)))<=((CAST(vt1.c0 AS BLOB), ((vt1.c0)LIKE(vt1.c0)), LENGTH(NULL))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0 IN ())))!=((CAST(vt1.c0 AS NUMERIC)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 COLLATE RTRIM, ((((NULL)AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0) IS TRUE)))<=((CAST(vt1.c0 AS BLOB), ((vt1.c0)LIKE(vt1.c0)), LENGTH(NULL))))) ORDER BY ((((vt1.c0 IN ())))<>((CAST(vt1.c0 AS NUMERIC)))) ASC;
SELECT COUNT(*) FROM t0, vt1, vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)-(rt0.c0)) IN (((((t0.c3)OR(rt0.c2)))OR(vt0.c0)))) WHERE (((((t0.c3) IS FALSE))LIKE(CAST(t0.c33 AS TEXT)))) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c3) IS FALSE))LIKE(CAST(t0.c33 AS TEXT)))) IS TRUE)  as count FROM t0, vt1, vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)-(rt0.c0)) IN (((((t0.c3)OR(rt0.c2)))OR(vt0.c0)))) ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)-(rt0.c0)) IN (((((t0.c3)OR(rt0.c2)))OR(vt0.c0)))) WHERE (((((t0.c3) IS FALSE))LIKE(CAST(t0.c33 AS TEXT)))) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c3) IS FALSE))LIKE(CAST(t0.c33 AS TEXT)))) IS TRUE)  as count FROM t0, vt1, vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)-(rt0.c0)) IN (((((t0.c3)OR(rt0.c2)))OR(vt0.c0)))) ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)-(rt0.c0)) IN (((((t0.c3)OR(rt0.c2)))OR(vt0.c0)))) WHERE (((((t0.c3) IS FALSE))LIKE(CAST(t0.c33 AS TEXT)))) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT * FROM rt0, vt1, t0 NATURAL JOIN vt0 WHERE (CAST(t0.c3 COLLATE RTRIM AS TEXT)) ORDER BY CAST(((((vt0.c0)AND(t0.c3)))AND(t0.c3)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c3 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt0, vt1, t0 NATURAL JOIN vt0 ORDER BY CAST(((((vt0.c0)AND(t0.c3)))AND(t0.c3)) AS TEXT) DESC  NULLS LAST);
SELECT * FROM rt0, vt1, t0 NATURAL JOIN vt0 WHERE (CAST(t0.c3 COLLATE RTRIM AS TEXT)) ORDER BY CAST(((((vt0.c0)AND(t0.c3)))AND(t0.c3)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c3 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt0, vt1, t0 NATURAL JOIN vt0 ORDER BY CAST(((((vt0.c0)AND(t0.c3)))AND(t0.c3)) AS TEXT) DESC  NULLS LAST);
SELECT * FROM rt0, vt1, t0 NATURAL JOIN vt0 WHERE (CAST(t0.c3 COLLATE RTRIM AS TEXT)) ORDER BY CAST(((((vt0.c0)AND(t0.c3)))AND(t0.c3)) AS TEXT) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((CASE WHEN t0.c3 THEN t0.c33 WHEN t0.c33 THEN t0.c3 WHEN t0.c33 THEN t0.c3 END))<=((((t0.c33)==(t0.c33))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c3 THEN t0.c33 WHEN t0.c33 THEN t0.c3 WHEN t0.c33 THEN t0.c3 END))<=((((t0.c33)==(t0.c33)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((CASE WHEN t0.c3 THEN t0.c33 WHEN t0.c33 THEN t0.c3 WHEN t0.c33 THEN t0.c3 END))<=((((t0.c33)==(t0.c33))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c3 THEN t0.c33 WHEN t0.c33 THEN t0.c3 WHEN t0.c33 THEN t0.c3 END))<=((((t0.c33)==(t0.c33)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((CASE WHEN t0.c3 THEN t0.c33 WHEN t0.c33 THEN t0.c3 WHEN t0.c33 THEN t0.c3 END))<=((((t0.c33)==(t0.c33))))));
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE ((((rt0.c2 COLLATE NOCASE))<=((((rt0.c2)OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE NOCASE))<=((((rt0.c2)OR(rt0.c2)))))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE ((((rt0.c2 COLLATE NOCASE))<=((((rt0.c2)OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE NOCASE))<=((((rt0.c2)OR(rt0.c2)))))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE ((((rt0.c2 COLLATE NOCASE))<=((((rt0.c2)OR(rt0.c2))))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((((t0.c33) BETWEEN (vt1.c0) AND (vt1.c0))))=((NULL))));
SELECT SUM(count) FROM (SELECT (((((((t0.c33) BETWEEN (vt1.c0) AND (vt1.c0))))=((NULL)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((((t0.c33) BETWEEN (vt1.c0) AND (vt1.c0))))=((NULL))));
SELECT SUM(count) FROM (SELECT (((((((t0.c33) BETWEEN (vt1.c0) AND (vt1.c0))))=((NULL)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((((t0.c33) BETWEEN (vt1.c0) AND (vt1.c0))))=((NULL))));
SELECT ALL * FROM t0, vt1 WHERE (t0.c33);
SELECT SUM(count) FROM (SELECT ((t0.c33) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (t0.c33);
SELECT SUM(count) FROM (SELECT ((t0.c33) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (t0.c33);
SELECT * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN ('Na') AND (vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((~ (vt1.c0))) NOT BETWEEN (PRINTF(vt1.c0)) AND (0x72b9a2d5)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN ('Na') AND (vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0))) NOT BETWEEN (PRINTF(vt1.c0)) AND (0x72b9a2d5)) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN ('Na') AND (vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((~ (vt1.c0))) NOT BETWEEN (PRINTF(vt1.c0)) AND (0x72b9a2d5)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN ('Na') AND (vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0))) NOT BETWEEN (PRINTF(vt1.c0)) AND (0x72b9a2d5)) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN ('Na') AND (vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((~ (vt1.c0))) NOT BETWEEN (PRINTF(vt1.c0)) AND (0x72b9a2d5)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (((NOT (t0.c3)) IN ())) ORDER BY x'b10d', ((((((rt0.c1)OR(0xffffffffac4d3a81)))OR(vt0.c0)))<<(CASE WHEN vt0.c1 THEN t0.c33 WHEN rt0.c2 THEN t0.c3 WHEN NULL THEN '210107305' ELSE t0.c33 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t0.c3)) IN ())) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY x'b10d', ((((((rt0.c1)OR(0xffffffffac4d3a81)))OR(vt0.c0)))<<(CASE WHEN vt0.c1 THEN t0.c33 WHEN rt0.c2 THEN t0.c3 WHEN NULL THEN '210107305' ELSE t0.c33 END)) DESC);
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (((NOT (t0.c3)) IN ())) ORDER BY x'b10d', ((((((rt0.c1)OR(0xffffffffac4d3a81)))OR(vt0.c0)))<<(CASE WHEN vt0.c1 THEN t0.c33 WHEN rt0.c2 THEN t0.c3 WHEN NULL THEN '210107305' ELSE t0.c33 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t0.c3)) IN ())) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY x'b10d', ((((((rt0.c1)OR(0xffffffffac4d3a81)))OR(vt0.c0)))<<(CASE WHEN vt0.c1 THEN t0.c33 WHEN rt0.c2 THEN t0.c3 WHEN NULL THEN '210107305' ELSE t0.c33 END)) DESC);
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (((NOT (t0.c3)) IN ())) ORDER BY x'b10d', ((((((rt0.c1)OR(0xffffffffac4d3a81)))OR(vt0.c0)))<<(CASE WHEN vt0.c1 THEN t0.c33 WHEN rt0.c2 THEN t0.c3 WHEN NULL THEN '210107305' ELSE t0.c33 END)) DESC;
SELECT ALL COUNT(*) FROM rt0, vt1 NATURAL JOIN vt0 WHERE (((((- (rt0.c0))))==((vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((- (rt0.c0))))==((vt0.c1)))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0, vt1 NATURAL JOIN vt0 WHERE (((((- (rt0.c0))))==((vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((- (rt0.c0))))==((vt0.c1)))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0, vt1 NATURAL JOIN vt0 WHERE (((((- (rt0.c0))))==((vt0.c1))));
SELECT * FROM rt0 WHERE (x'' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'' COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 INDEXED BY i81 CROSS JOIN vt0 ON (((((vt0.c1 IN (rt0.c0, vt0.c1)))OR((~ (rt0.c2)))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) ORDER BY (((vt0.c1 IN ())) IS FALSE) ASC, (('294586615')%(((vt0.c0)*(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 INDEXED BY i81 CROSS JOIN vt0 ON (((((vt0.c1 IN (rt0.c0, vt0.c1)))OR((~ (rt0.c2)))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY (((vt0.c1 IN ())) IS FALSE) ASC, (('294586615')%(((vt0.c0)*(vt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0 INDEXED BY i81 CROSS JOIN vt0 ON (((((vt0.c1 IN (rt0.c0, vt0.c1)))OR((~ (rt0.c2)))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) ORDER BY (((vt0.c1 IN ())) IS FALSE) ASC, (('294586615')%(((vt0.c0)*(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 INDEXED BY i81 CROSS JOIN vt0 ON (((((vt0.c1 IN (rt0.c0, vt0.c1)))OR((~ (rt0.c2)))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY (((vt0.c1 IN ())) IS FALSE) ASC, (('294586615')%(((vt0.c0)*(vt0.c0)))) ASC);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON json_insert((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t0.c33))), (('215576273') ISNULL), ((rt0.c2) IS TRUE), CAST(t0.c3 AS BLOB), ((t0.c33)|(t0.c3))) WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((t0.c33)LIKE(rt0.c0)))))) ORDER BY ABS(((t0.c3) IS FALSE))  NULLS LAST, NULL, ((((t0.c3)OR(rt0.c2)))AND(NULL)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((t0.c33)LIKE(rt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON json_insert((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t0.c33))), (('215576273') ISNULL), ((rt0.c2) IS TRUE), CAST(t0.c3 AS BLOB), ((t0.c33)|(t0.c3))) ORDER BY ABS(((t0.c3) IS FALSE))  NULLS LAST, NULL, ((((t0.c3)OR(rt0.c2)))AND(NULL)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON json_insert((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t0.c33))), (('215576273') ISNULL), ((rt0.c2) IS TRUE), CAST(t0.c3 AS BLOB), ((t0.c33)|(t0.c3))) WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((t0.c33)LIKE(rt0.c0)))))) ORDER BY ABS(((t0.c3) IS FALSE))  NULLS LAST, NULL, ((((t0.c3)OR(rt0.c2)))AND(NULL)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((t0.c33)LIKE(rt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON json_insert((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t0.c33))), (('215576273') ISNULL), ((rt0.c2) IS TRUE), CAST(t0.c3 AS BLOB), ((t0.c33)|(t0.c3))) ORDER BY ABS(((t0.c3) IS FALSE))  NULLS LAST, NULL, ((((t0.c3)OR(rt0.c2)))AND(NULL)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((vt0.c1 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((vt0.c1 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((vt0.c1 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c33)) BETWEEN (((((t0.c3))>((t0.c3))))) AND ((t0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c33)) BETWEEN (((((t0.c3))>((t0.c3))))) AND ((t0.c3)))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c33)) BETWEEN (((((t0.c3))>((t0.c3))))) AND ((t0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c33)) BETWEEN (((((t0.c3))>((t0.c3))))) AND ((t0.c3)))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c33)) BETWEEN (((((t0.c3))>((t0.c3))))) AND ((t0.c3))));
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((rt0.c2) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) ISNULL) IN ())) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((rt0.c2) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) ISNULL) IN ())) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((rt0.c2) ISNULL) IN ()));
SELECT ALL * FROM rt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (SQLITE_VERSION());
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) IS FALSE)) NOT BETWEEN (vt0.c1) AND (NULL))) ORDER BY ((rt0.c2 IN ()) IN ()) ASC, x'1058';
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE)) NOT BETWEEN (vt0.c1) AND (NULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2 IN ()) IN ()) ASC, x'1058');
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) IS FALSE)) NOT BETWEEN (vt0.c1) AND (NULL))) ORDER BY ((rt0.c2 IN ()) IN ()) ASC, x'1058';
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE)) NOT BETWEEN (vt0.c1) AND (NULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2 IN ()) IN ()) ASC, x'1058');
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) IS FALSE)) NOT BETWEEN (vt0.c1) AND (NULL))) ORDER BY ((rt0.c2 IN ()) IN ()) ASC, x'1058';
SELECT * FROM rt0, t0 WHERE (x'') ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN t0.c33 ELSE t0.c3 END)%(rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN t0.c33 ELSE t0.c3 END)%(rt0.c1 COLLATE RTRIM)));
SELECT * FROM rt0, t0 WHERE (x'') ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN t0.c33 ELSE t0.c3 END)%(rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN t0.c33 ELSE t0.c3 END)%(rt0.c1 COLLATE RTRIM)));
SELECT * FROM rt0, t0 WHERE (x'') ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN t0.c33 ELSE t0.c3 END)%(rt0.c1 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT * FROM vt1, t0 WHERE (CAST(CAST(t0.c3 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c3 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CAST(CAST(t0.c3 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c3 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CAST(CAST(t0.c3 AS REAL) AS TEXT));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c33) NOT BETWEEN (t0.c3) AND (vt1.c0)) COLLATE RTRIM) ORDER BY CASE ((t0.c3)<=(vt1.c0))  WHEN ((t0.c3) ISNULL) THEN ((((t0.c3)AND(vt1.c0)))AND(t0.c33)) ELSE t0.c33 END, NULL;
SELECT SUM(count) FROM (SELECT ((((t0.c33) NOT BETWEEN (t0.c3) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE ((t0.c3)<=(vt1.c0))  WHEN ((t0.c3) ISNULL) THEN ((((t0.c3)AND(vt1.c0)))AND(t0.c33)) ELSE t0.c33 END, NULL);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c33) NOT BETWEEN (t0.c3) AND (vt1.c0)) COLLATE RTRIM) ORDER BY CASE ((t0.c3)<=(vt1.c0))  WHEN ((t0.c3) ISNULL) THEN ((((t0.c3)AND(vt1.c0)))AND(t0.c33)) ELSE t0.c33 END, NULL;
SELECT SUM(count) FROM (SELECT ((((t0.c33) NOT BETWEEN (t0.c3) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE ((t0.c3)<=(vt1.c0))  WHEN ((t0.c3) ISNULL) THEN ((((t0.c3)AND(vt1.c0)))AND(t0.c33)) ELSE t0.c33 END, NULL);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c33) NOT BETWEEN (t0.c3) AND (vt1.c0)) COLLATE RTRIM) ORDER BY CASE ((t0.c3)<=(vt1.c0))  WHEN ((t0.c3) ISNULL) THEN ((((t0.c3)AND(vt1.c0)))AND(t0.c33)) ELSE t0.c33 END, NULL;
SELECT ALL * FROM vt1 WHERE ((- ((vt1.c0 IN ())))) ORDER BY (((((((((vt1.c0 IN ()))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(NULL)))OR(CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((vt1.c0 IN ()))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(NULL)))OR(CAST(vt1.c0 AS INTEGER))));
SELECT ALL * FROM vt1 WHERE ((- ((vt1.c0 IN ())))) ORDER BY (((((((((vt1.c0 IN ()))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(NULL)))OR(CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((vt1.c0 IN ()))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(NULL)))OR(CAST(vt1.c0 AS INTEGER))));
SELECT ALL * FROM vt1 WHERE ((- ((vt1.c0 IN ())))) ORDER BY (((((((((vt1.c0 IN ()))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(NULL)))OR(CAST(vt1.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c0)) NOT BETWEEN ((t0.c33)) AND ((t0.c3))) IN ()) INNER JOIN t0 ON t0.c3 WHERE (((((rt0.c2)IS NOT(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS NOT(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c0)) NOT BETWEEN ((t0.c33)) AND ((t0.c3))) IN ()) INNER JOIN t0 ON t0.c3);
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c0)) NOT BETWEEN ((t0.c33)) AND ((t0.c3))) IN ()) INNER JOIN t0 ON t0.c3 WHERE (((((rt0.c2)IS NOT(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS NOT(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c0)) NOT BETWEEN ((t0.c33)) AND ((t0.c3))) IN ()) INNER JOIN t0 ON t0.c3);
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c0)) NOT BETWEEN ((t0.c33)) AND ((t0.c3))) IN ()) INNER JOIN t0 ON t0.c3 WHERE (((((rt0.c2)IS NOT(rt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LIKELY(DISTINCT rt0.c2)) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))), rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT rt0.c2)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))), rt0.c2 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LIKELY(DISTINCT rt0.c2)) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))), rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT rt0.c2)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))), rt0.c2 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LIKELY(DISTINCT rt0.c2)) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))), rt0.c2 ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((NOT ((t0.c33 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c33 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT ((t0.c33 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c33 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT ((t0.c33 IN ()))));
SELECT ALL * FROM vt0, t0 WHERE (CASE ((((t0.c3)AND(vt0.c0)))AND(vt0.c0))  WHEN t0.c3 THEN vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c3)AND(vt0.c0)))AND(vt0.c0))  WHEN t0.c3 THEN vt0.c1 END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE ((((t0.c3)AND(vt0.c0)))AND(vt0.c0))  WHEN t0.c3 THEN vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c3)AND(vt0.c0)))AND(vt0.c0))  WHEN t0.c3 THEN vt0.c1 END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE ((((t0.c3)AND(vt0.c0)))AND(vt0.c0))  WHEN t0.c3 THEN vt0.c1 END);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c3)>=(t0.c33))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c3)>=(t0.c33))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c3)>=(t0.c33))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c3)>=(t0.c33))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c3)>=(t0.c33))) ISNULL));
SELECT ALL * FROM vt0 WHERE (RTRIM(((vt0.c0)AND(NULL))));
SELECT SUM(count) FROM (SELECT ((RTRIM(((vt0.c0)AND(NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (RTRIM(((vt0.c0)AND(NULL))));
SELECT SUM(count) FROM (SELECT ((RTRIM(((vt0.c0)AND(NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (RTRIM(((vt0.c0)AND(NULL))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c1 IN (vt1.c0))) BETWEEN (x'' COLLATE RTRIM) AND (((vt1.c0) ISNULL))) WHERE (((((((vt1.c0)<=(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))OR(vt1.c0 COLLATE BINARY))) ORDER BY (- (((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)<=(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))OR(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c1 IN (vt1.c0))) BETWEEN (x'' COLLATE RTRIM) AND (((vt1.c0) ISNULL))) ORDER BY (- (((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c1 IN (vt1.c0))) BETWEEN (x'' COLLATE RTRIM) AND (((vt1.c0) ISNULL))) WHERE (((((((vt1.c0)<=(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))OR(vt1.c0 COLLATE BINARY))) ORDER BY (- (((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)<=(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))OR(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c1 IN (vt1.c0))) BETWEEN (x'' COLLATE RTRIM) AND (((vt1.c0) ISNULL))) ORDER BY (- (((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c1 IN (vt1.c0))) BETWEEN (x'' COLLATE RTRIM) AND (((vt1.c0) ISNULL))) WHERE (((((((vt1.c0)<=(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))OR(vt1.c0 COLLATE BINARY))) ORDER BY (- (((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c0)IS(vt0.c0)) AS INTEGER) FULL OUTER JOIN t0 ON json_valid(t0.c3) WHERE ((((vt1.c0 IN ()))=((((t0.c33)) BETWEEN ((t0.c3)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))==((((t0.c33)) BETWEEN ((t0.c3)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c0)IS(vt0.c0)) AS INTEGER) FULL OUTER JOIN t0 ON json_valid(t0.c3));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c0)IS(vt0.c0)) AS INTEGER) FULL OUTER JOIN t0 ON json_valid(t0.c3) WHERE ((((vt1.c0 IN ()))=((((t0.c33)) BETWEEN ((t0.c3)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))==((((t0.c33)) BETWEEN ((t0.c3)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c0)IS(vt0.c0)) AS INTEGER) FULL OUTER JOIN t0 ON json_valid(t0.c3));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c0)IS(vt0.c0)) AS INTEGER) FULL OUTER JOIN t0 ON json_valid(t0.c3) WHERE ((((vt1.c0 IN ()))=((((t0.c33)) BETWEEN ((t0.c3)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((CASE 'p*'  WHEN x'' THEN -2.104509882E9 END))>(((- (x'386f'))))) FULL OUTER JOIN vt1 ON NULL WHERE ((NOT (t0.c3))) ORDER BY (NOT (SQLITE_COMPILEOPTION_GET(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c3))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((CASE 'p*'  WHEN x'' THEN -2.104509882E9 END))>(((- (x'386f'))))) FULL OUTER JOIN vt1 ON NULL ORDER BY (NOT (SQLITE_COMPILEOPTION_GET(vt0.c1))) DESC);
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((CASE 'p*'  WHEN x'' THEN -2.104509882E9 END))>(((- (x'386f'))))) FULL OUTER JOIN vt1 ON NULL WHERE ((NOT (t0.c3))) ORDER BY (NOT (SQLITE_COMPILEOPTION_GET(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c3))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((CASE 'p*'  WHEN x'' THEN -2.104509882E9 END))>(((- (x'386f'))))) FULL OUTER JOIN vt1 ON NULL ORDER BY (NOT (SQLITE_COMPILEOPTION_GET(vt0.c1))) DESC);
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((CASE 'p*'  WHEN x'' THEN -2.104509882E9 END))>(((- (x'386f'))))) FULL OUTER JOIN vt1 ON NULL WHERE ((NOT (t0.c3))) ORDER BY (NOT (SQLITE_COMPILEOPTION_GET(vt0.c1))) DESC;
SELECT * FROM rt0, t0, vt0 WHERE ((((((vt0.c0))<>((t0.c33))))/(json_array_length(rt0.c0, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))!=((t0.c33))))/(json_array_length(rt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((((vt0.c0))<>((t0.c33))))/(json_array_length(rt0.c0, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))!=((t0.c33))))/(json_array_length(rt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (((vt0.c1)<(vt0.c1))) AND (((t0.c33) BETWEEN (t0.c33) AND (rt0.c2)))) WHERE ('D');
SELECT SUM(count) FROM (SELECT ALL (('D') IS TRUE)  as count FROM vt1, t0, vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (((vt0.c1)<(vt0.c1))) AND (((t0.c33) BETWEEN (t0.c33) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (((vt0.c1)<(vt0.c1))) AND (((t0.c33) BETWEEN (t0.c33) AND (rt0.c2)))) WHERE ('D');
SELECT SUM(count) FROM (SELECT ALL (('D') IS TRUE)  as count FROM vt1, t0, vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (((vt0.c1)<(vt0.c1))) AND (((t0.c33) BETWEEN (t0.c33) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (((vt0.c1)<(vt0.c1))) AND (((t0.c33) BETWEEN (t0.c33) AND (rt0.c2)))) WHERE ('D');
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)LIKE(vt1.c0)) IN ())) ORDER BY TYPEOF(DISTINCT vt1.c0 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)LIKE(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY TYPEOF(DISTINCT vt1.c0 COLLATE BINARY) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)LIKE(vt1.c0)) IN ())) ORDER BY TYPEOF(DISTINCT vt1.c0 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)LIKE(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY TYPEOF(DISTINCT vt1.c0 COLLATE BINARY) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)LIKE(vt1.c0)) IN ())) ORDER BY TYPEOF(DISTINCT vt1.c0 COLLATE BINARY) ASC;
SELECT * FROM rt0, vt0, vt1 INNER JOIN t0 ON (((0.9985589204250935)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((((vt0.c1))<((vt0.c0)))))) WHERE (CASE WHEN (vt1.c0 IN (vt0.c1)) THEN (((vt1.c0, vt0.c1, vt0.c0))<((rt0.c1, 1.816686752E9, vt0.c1))) WHEN TRIM(NULL, rt0.c2) THEN (('qhd ') ISNULL) WHEN CASE vt1.c0  WHEN rt0.c1 THEN vt0.c0 END THEN x'c47e' ELSE ((t0.c33)GLOB(rt0.c1)) END) ORDER BY (- (((rt0.c2)<>(t0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN (vt0.c1)) THEN (((vt1.c0, vt0.c1, vt0.c0))<((rt0.c1, 1.816686752E9, vt0.c1))) WHEN TRIM(NULL, rt0.c2) THEN (('qhd ') ISNULL) WHEN CASE vt1.c0  WHEN rt0.c1 THEN vt0.c0 END THEN x'c47e' ELSE ((t0.c33)GLOB(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0, vt1 INNER JOIN t0 ON (((0.9985589204250935)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((((vt0.c1))<((vt0.c0)))))) ORDER BY (- (((rt0.c2)<>(t0.c3))))  NULLS FIRST);
SELECT * FROM rt0, vt0, vt1 INNER JOIN t0 ON (((0.9985589204250935)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((((vt0.c1))<((vt0.c0)))))) WHERE (CASE WHEN (vt1.c0 IN (vt0.c1)) THEN (((vt1.c0, vt0.c1, vt0.c0))<((rt0.c1, 1.816686752E9, vt0.c1))) WHEN TRIM(NULL, rt0.c2) THEN (('qhd ') ISNULL) WHEN CASE vt1.c0  WHEN rt0.c1 THEN vt0.c0 END THEN x'c47e' ELSE ((t0.c33)GLOB(rt0.c1)) END) ORDER BY (- (((rt0.c2)<>(t0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN (vt0.c1)) THEN (((vt1.c0, vt0.c1, vt0.c0))<((rt0.c1, 1.816686752E9, vt0.c1))) WHEN TRIM(NULL, rt0.c2) THEN (('qhd ') ISNULL) WHEN CASE vt1.c0  WHEN rt0.c1 THEN vt0.c0 END THEN x'c47e' ELSE ((t0.c33)GLOB(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0, vt1 INNER JOIN t0 ON (((0.9985589204250935)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((((vt0.c1))<((vt0.c0)))))) ORDER BY (- (((rt0.c2)<>(t0.c3))))  NULLS FIRST);
SELECT * FROM rt0, vt0, vt1 INNER JOIN t0 ON (((0.9985589204250935)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((((vt0.c1))<((vt0.c0)))))) WHERE (CASE WHEN (vt1.c0 IN (vt0.c1)) THEN (((vt1.c0, vt0.c1, vt0.c0))<((rt0.c1, 1.816686752E9, vt0.c1))) WHEN TRIM(NULL, rt0.c2) THEN (('qhd ') ISNULL) WHEN CASE vt1.c0  WHEN rt0.c1 THEN vt0.c0 END THEN x'c47e' ELSE ((t0.c33)GLOB(rt0.c1)) END) ORDER BY (- (((rt0.c2)<>(t0.c3))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON HEX(((t0.c33)GLOB(rt0.c2))) WHERE (((((rt0.c2) NOTNULL))>>(((rt0.c1)-(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL))>>(((rt0.c1)-(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON HEX(((t0.c33)GLOB(rt0.c2))));
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON HEX(((t0.c33)GLOB(rt0.c2))) WHERE (((((rt0.c2) NOTNULL))>>(((rt0.c1)-(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL))>>(((rt0.c1)-(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON HEX(((t0.c33)GLOB(rt0.c2))));
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON HEX(((t0.c33)GLOB(rt0.c2))) WHERE (((((rt0.c2) NOTNULL))>>(((rt0.c1)-(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((LIKE(t0.c3, rt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(t0.c3, rt0.c1)) NOTNULL)) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((LIKE(t0.c3, rt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(t0.c3, rt0.c1)) NOTNULL)) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((LIKE(t0.c3, rt0.c1)) NOTNULL));
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((rtreenode(rt0.c2, 0.9859439893474037))OR(((vt0.c0)LIKE(rt0.c0)))))OR((- (vt0.c0)))) RIGHT OUTER JOIN vt0 ON (((0.8255579823438551))!=((((rt0.c2)+(rt0.c0))))) WHERE (CAST(CAST(t0.c3 AS TEXT) AS REAL)) ORDER BY (((((((((- (vt0.c1)))OR(LIKELY(DISTINCT vt0.c0))))OR((+ (rt0.c1)))))OR(((((rt0.c0)AND(t0.c33)))AND(t0.c33)))))OR(((rt0.c0)OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c3 AS TEXT) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((rtreenode(rt0.c2, 0.9859439893474037))OR(((vt0.c0)LIKE(rt0.c0)))))OR((- (vt0.c0)))) RIGHT OUTER JOIN vt0 ON (((0.8255579823438551))<>((((rt0.c2)+(rt0.c0))))) ORDER BY (((((((((- (vt0.c1)))OR(LIKELY(DISTINCT vt0.c0))))OR((+ (rt0.c1)))))OR(((((rt0.c0)AND(t0.c33)))AND(t0.c33)))))OR(((rt0.c0)OR(rt0.c1)))) ASC);
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((rtreenode(rt0.c2, 0.9859439893474037))OR(((vt0.c0)LIKE(rt0.c0)))))OR((- (vt0.c0)))) RIGHT OUTER JOIN vt0 ON (((0.8255579823438551))!=((((rt0.c2)+(rt0.c0))))) WHERE (CAST(CAST(t0.c3 AS TEXT) AS REAL)) ORDER BY (((((((((- (vt0.c1)))OR(LIKELY(DISTINCT vt0.c0))))OR((+ (rt0.c1)))))OR(((((rt0.c0)AND(t0.c33)))AND(t0.c33)))))OR(((rt0.c0)OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c3 AS TEXT) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((rtreenode(rt0.c2, 0.9859439893474037))OR(((vt0.c0)LIKE(rt0.c0)))))OR((- (vt0.c0)))) RIGHT OUTER JOIN vt0 ON (((0.8255579823438551))<>((((rt0.c2)+(rt0.c0))))) ORDER BY (((((((((- (vt0.c1)))OR(LIKELY(DISTINCT vt0.c0))))OR((+ (rt0.c1)))))OR(((((rt0.c0)AND(t0.c33)))AND(t0.c33)))))OR(((rt0.c0)OR(rt0.c1)))) ASC);
SELECT * FROM t0 WHERE (((((t0.c33) IS FALSE))<>(((t0.c3) NOT BETWEEN (x'') AND (t0.c3))))) ORDER BY ((CAST(t0.c33 AS NUMERIC)) NOT BETWEEN (((t0.c33)IS NOT(t0.c3))) AND (CASE WHEN t0.c33 THEN t0.c33 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c33) IS FALSE))<>(((t0.c3) NOT BETWEEN (x'') AND (t0.c3))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c33 AS NUMERIC)) NOT BETWEEN (((t0.c33)IS NOT(t0.c3))) AND (CASE WHEN t0.c33 THEN t0.c33 END)) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c33) IS FALSE))<>(((t0.c3) NOT BETWEEN (x'') AND (t0.c3))))) ORDER BY ((CAST(t0.c33 AS NUMERIC)) NOT BETWEEN (((t0.c33)IS NOT(t0.c3))) AND (CASE WHEN t0.c33 THEN t0.c33 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c33) IS FALSE))<>(((t0.c3) NOT BETWEEN (x'') AND (t0.c3))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c33 AS NUMERIC)) NOT BETWEEN (((t0.c33)IS NOT(t0.c3))) AND (CASE WHEN t0.c33 THEN t0.c33 END)) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c33) IS FALSE))<>(((t0.c3) NOT BETWEEN (x'') AND (t0.c3))))) ORDER BY ((CAST(t0.c33 AS NUMERIC)) NOT BETWEEN (((t0.c33)IS NOT(t0.c3))) AND (CASE WHEN t0.c33 THEN t0.c33 END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC));
SELECT * FROM t0, rt0, vt0, vt1 WHERE (((((CAST(vt0.c1 AS REAL))AND((~ (vt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC)))) ORDER BY CASE ((rt0.c0) NOT NULL)  WHEN CAST(t0.c3 AS BLOB) THEN (- (t0.c33)) ELSE x'5139' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c1 AS REAL))AND((~ (vt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY CASE ((rt0.c0) NOT NULL)  WHEN CAST(t0.c3 AS BLOB) THEN (- (t0.c33)) ELSE x'5139' END  NULLS LAST);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (((((CAST(vt0.c1 AS REAL))AND((~ (vt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC)))) ORDER BY CASE ((rt0.c0) NOT NULL)  WHEN CAST(t0.c3 AS BLOB) THEN (- (t0.c33)) ELSE x'5139' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c1 AS REAL))AND((~ (vt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY CASE ((rt0.c0) NOT NULL)  WHEN CAST(t0.c3 AS BLOB) THEN (- (t0.c33)) ELSE x'5139' END  NULLS LAST);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (((((CAST(vt0.c1 AS REAL))AND((~ (vt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC)))) ORDER BY CASE ((rt0.c0) NOT NULL)  WHEN CAST(t0.c3 AS BLOB) THEN (- (t0.c33)) ELSE x'5139' END  NULLS LAST;
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON (((((vt0.c0))<=((vt1.c0))))&(((vt0.c0)>=(t0.c33)))) WHERE ('-1044643237');
SELECT SUM(count) FROM (SELECT (('-1044643237') IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON (((((vt0.c0))<=((vt1.c0))))&(((vt0.c0)>=(t0.c33)))));
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON (((((vt0.c0))<=((vt1.c0))))&(((vt0.c0)>=(t0.c33)))) WHERE ('-1044643237');
SELECT SUM(count) FROM (SELECT (('-1044643237') IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON (((((vt0.c0))<=((vt1.c0))))&(((vt0.c0)>=(t0.c33)))));
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON (((((vt0.c0))<=((vt1.c0))))&(((vt0.c0)>=(t0.c33)))) WHERE ('-1044643237');
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (((((rt0.c1)<=(vt1.c0))) NOT BETWEEN (((((((((x'')AND(t0.c33)))AND(vt0.c0)))AND(t0.c3)))AND(x'a502'))) AND (ABS(DISTINCT rt0.c2)))) ORDER BY CASE WHEN COALESCE(DISTINCT NULL, t0.c3) THEN SQLITE_VERSION() WHEN ((rt0.c2) ISNULL) THEN ((rt0.c2)OR(0.39288487020559104)) WHEN CAST(vt1.c0 AS REAL) THEN (NOT (rt0.c1)) ELSE t0.c33 END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(vt1.c0))) NOT BETWEEN (((((((((x'')AND(t0.c33)))AND(vt0.c0)))AND(t0.c3)))AND(x'a502'))) AND (ABS(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY CASE WHEN COALESCE(DISTINCT NULL, t0.c3) THEN SQLITE_VERSION() WHEN ((rt0.c2) ISNULL) THEN ((rt0.c2)OR(0.39288487020559104)) WHEN CAST(vt1.c0 AS REAL) THEN (NOT (rt0.c1)) ELSE t0.c33 END);
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (((((rt0.c1)<=(vt1.c0))) NOT BETWEEN (((((((((x'')AND(t0.c33)))AND(vt0.c0)))AND(t0.c3)))AND(x'a502'))) AND (ABS(DISTINCT rt0.c2)))) ORDER BY CASE WHEN COALESCE(DISTINCT NULL, t0.c3) THEN SQLITE_VERSION() WHEN ((rt0.c2) ISNULL) THEN ((rt0.c2)OR(0.39288487020559104)) WHEN CAST(vt1.c0 AS REAL) THEN (NOT (rt0.c1)) ELSE t0.c33 END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(vt1.c0))) NOT BETWEEN (((((((((x'')AND(t0.c33)))AND(vt0.c0)))AND(t0.c3)))AND(x'a502'))) AND (ABS(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY CASE WHEN COALESCE(DISTINCT NULL, t0.c3) THEN SQLITE_VERSION() WHEN ((rt0.c2) ISNULL) THEN ((rt0.c2)OR(0.39288487020559104)) WHEN CAST(vt1.c0 AS REAL) THEN (NOT (rt0.c1)) ELSE t0.c33 END);
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (((((rt0.c1)<=(vt1.c0))) NOT BETWEEN (((((((((x'')AND(t0.c33)))AND(vt0.c0)))AND(t0.c3)))AND(x'a502'))) AND (ABS(DISTINCT rt0.c2)))) ORDER BY CASE WHEN COALESCE(DISTINCT NULL, t0.c3) THEN SQLITE_VERSION() WHEN ((rt0.c2) ISNULL) THEN ((rt0.c2)OR(0.39288487020559104)) WHEN CAST(vt1.c0 AS REAL) THEN (NOT (rt0.c1)) ELSE t0.c33 END;
SELECT ALL * FROM rt0 WHERE (CASE x'c3bf'  WHEN ((rt0.c0) NOTNULL) THEN 0.6217456167456898 WHEN ((rt0.c0)>=(rt0.c0)) THEN (((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, '275617569'))) WHEN rt0.c1 THEN CAST(rt0.c0 AS TEXT) ELSE CAST(rt0.c0 AS BLOB) END) ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x'c3bf'  WHEN ((rt0.c0) NOTNULL) THEN 0.6217456167456898 WHEN ((rt0.c0)>=(rt0.c0)) THEN (((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, '275617569'))) WHEN rt0.c1 THEN CAST(rt0.c0 AS TEXT) ELSE CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE x'c3bf'  WHEN ((rt0.c0) NOTNULL) THEN 0.6217456167456898 WHEN ((rt0.c0)>=(rt0.c0)) THEN (((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, '275617569'))) WHEN rt0.c1 THEN CAST(rt0.c0 AS TEXT) ELSE CAST(rt0.c0 AS BLOB) END) ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x'c3bf'  WHEN ((rt0.c0) NOTNULL) THEN 0.6217456167456898 WHEN ((rt0.c0)>=(rt0.c0)) THEN (((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, '275617569'))) WHEN rt0.c1 THEN CAST(rt0.c0 AS TEXT) ELSE CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE x'c3bf'  WHEN ((rt0.c0) NOTNULL) THEN 0.6217456167456898 WHEN ((rt0.c0)>=(rt0.c0)) THEN (((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, '275617569'))) WHEN rt0.c1 THEN CAST(rt0.c0 AS TEXT) ELSE CAST(rt0.c0 AS BLOB) END) ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt0 INNER JOIN vt0 ON x'' CROSS JOIN vt1 ON vt0.c1 WHERE (((((rt0.c2)OR(rt0.c2))) NOTNULL)) ORDER BY x''  NULLS LAST, UPPER(CAST(vt0.c1 AS INTEGER)) ASC  NULLS FIRST, rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON x'' CROSS JOIN vt1 ON vt0.c1 ORDER BY x''  NULLS LAST, UPPER(CAST(vt0.c1 AS INTEGER)) ASC  NULLS FIRST, rt0.c2 ASC);
SELECT * FROM rt0 INNER JOIN vt0 ON x'' CROSS JOIN vt1 ON vt0.c1 WHERE (((((rt0.c2)OR(rt0.c2))) NOTNULL)) ORDER BY x''  NULLS LAST, UPPER(CAST(vt0.c1 AS INTEGER)) ASC  NULLS FIRST, rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON x'' CROSS JOIN vt1 ON vt0.c1 ORDER BY x''  NULLS LAST, UPPER(CAST(vt0.c1 AS INTEGER)) ASC  NULLS FIRST, rt0.c2 ASC);
SELECT * FROM rt0 INNER JOIN vt0 ON x'' CROSS JOIN vt1 ON vt0.c1 WHERE (((((rt0.c2)OR(rt0.c2))) NOTNULL)) ORDER BY x''  NULLS LAST, UPPER(CAST(vt0.c1 AS INTEGER)) ASC  NULLS FIRST, rt0.c2 ASC;
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CASE (+ (rt0.c2))  WHEN '' THEN rt0.c0 COLLATE RTRIM END) ORDER BY ((((t0.c33) IS FALSE))||(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt0.c2))  WHEN '' THEN rt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((t0.c33) IS FALSE))||(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CASE (+ (rt0.c2))  WHEN '' THEN rt0.c0 COLLATE RTRIM END) ORDER BY ((((t0.c33) IS FALSE))||(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt0.c2))  WHEN '' THEN rt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((t0.c33) IS FALSE))||(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CASE (+ (rt0.c2))  WHEN '' THEN rt0.c0 COLLATE RTRIM END) ORDER BY ((((t0.c33) IS FALSE))||(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2, rt0.c1, '159604254', x'd647', vt0.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN 0.4219243512150991 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END, (- (rt0.c1)), ((rt0.c0) IS FALSE), rt0.c1, ((rt0.c0)==(rt0.c1)))) AND ((vt0.c1 COLLATE NOCASE, '-1769218393', ((rt0.c2)LIKE(vt0.c1)), 0x5323cb39, rt0.c0)))) ORDER BY (~ (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c1, '159604254', x'd647', vt0.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN 0.4219243512150991 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END, (- (rt0.c1)), ((rt0.c0) IS FALSE), rt0.c1, ((rt0.c0)==(rt0.c1)))) AND ((vt0.c1 COLLATE NOCASE, '-1769218393', ((rt0.c2)LIKE(vt0.c1)), 0x5323cb39, rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (rt0.c0)) DESC);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2, rt0.c1, '159604254', x'd647', vt0.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN 0.4219243512150991 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END, (- (rt0.c1)), ((rt0.c0) IS FALSE), rt0.c1, ((rt0.c0)==(rt0.c1)))) AND ((vt0.c1 COLLATE NOCASE, '-1769218393', ((rt0.c2)LIKE(vt0.c1)), 0x5323cb39, rt0.c0)))) ORDER BY (~ (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c1, '159604254', x'd647', vt0.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN 0.4219243512150991 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END, (- (rt0.c1)), ((rt0.c0) IS FALSE), rt0.c1, ((rt0.c0)==(rt0.c1)))) AND ((vt0.c1 COLLATE NOCASE, '-1769218393', ((rt0.c2)LIKE(vt0.c1)), 0x5323cb39, rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (rt0.c0)) DESC);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2, rt0.c1, '159604254', x'd647', vt0.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN 0.4219243512150991 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END, (- (rt0.c1)), ((rt0.c0) IS FALSE), rt0.c1, ((rt0.c0)==(rt0.c1)))) AND ((vt0.c1 COLLATE NOCASE, '-1769218393', ((rt0.c2)LIKE(vt0.c1)), 0x5323cb39, rt0.c0)))) ORDER BY (~ (rt0.c0)) DESC;
SELECT COUNT(*) FROM vt1, vt0, rt0 FULL OUTER JOIN t0 ON ((vt1.c0) NOT BETWEEN (((vt1.c0)<<(t0.c3))) AND ((+ (NULL)))) WHERE (UNLIKELY(DISTINCT (+ (rt0.c0)))) ORDER BY ((((((((((rt0.c1) IS TRUE))OR((vt0.c1 IN ()))))OR(t0.c33)))AND(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END)))OR(((rt0.c2)>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (+ (rt0.c0)))) IS TRUE)  as count FROM vt1, vt0, rt0 FULL OUTER JOIN t0 ON ((vt1.c0) NOT BETWEEN (((vt1.c0)<<(t0.c3))) AND ((+ (NULL)))) ORDER BY ((((((((((rt0.c1) IS TRUE))OR((vt0.c1 IN ()))))OR(t0.c33)))AND(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END)))OR(((rt0.c2)>(rt0.c2)))));
SELECT COUNT(*) FROM vt1, vt0, rt0 FULL OUTER JOIN t0 ON ((vt1.c0) NOT BETWEEN (((vt1.c0)<<(t0.c3))) AND ((+ (NULL)))) WHERE (UNLIKELY(DISTINCT (+ (rt0.c0)))) ORDER BY ((((((((((rt0.c1) IS TRUE))OR((vt0.c1 IN ()))))OR(t0.c33)))AND(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END)))OR(((rt0.c2)>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (+ (rt0.c0)))) IS TRUE)  as count FROM vt1, vt0, rt0 FULL OUTER JOIN t0 ON ((vt1.c0) NOT BETWEEN (((vt1.c0)<<(t0.c3))) AND ((+ (NULL)))) ORDER BY ((((((((((rt0.c1) IS TRUE))OR((vt0.c1 IN ()))))OR(t0.c33)))AND(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END)))OR(((rt0.c2)>(rt0.c2)))));
SELECT COUNT(*) FROM vt1, vt0, rt0 FULL OUTER JOIN t0 ON ((vt1.c0) NOT BETWEEN (((vt1.c0)<<(t0.c3))) AND ((+ (NULL)))) WHERE (UNLIKELY(DISTINCT (+ (rt0.c0)))) ORDER BY ((((((((((rt0.c1) IS TRUE))OR((vt0.c1 IN ()))))OR(t0.c33)))AND(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END)))OR(((rt0.c2)>(rt0.c2))));
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (((t0.c33) IS FALSE) COLLATE RTRIM) ORDER BY (((((NOT (t0.c33)))OR(((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))))OR(((((rt0.c2)OR(t0.c3)))OR(0.6809267313128122)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c33) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY (((((NOT (t0.c33)))OR(((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))))OR(((((rt0.c2)OR(t0.c3)))OR(0.6809267313128122)))) DESC);
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (((t0.c33) IS FALSE) COLLATE RTRIM) ORDER BY (((((NOT (t0.c33)))OR(((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))))OR(((((rt0.c2)OR(t0.c3)))OR(0.6809267313128122)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c33) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY (((((NOT (t0.c33)))OR(((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))))OR(((((rt0.c2)OR(t0.c3)))OR(0.6809267313128122)))) DESC);
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (((t0.c33) IS FALSE) COLLATE RTRIM) ORDER BY (((((NOT (t0.c33)))OR(((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))))OR(((((rt0.c2)OR(t0.c3)))OR(0.6809267313128122)))) DESC;
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON ((rt0.c1 COLLATE BINARY) IS TRUE) FULL OUTER JOIN rt0 ON ((((rt0.c2)|(rt0.c2)))-(CASE WHEN rt0.c1 THEN rt0.c1 WHEN t0.c33 THEN '莎{-]i' WHEN t0.c3 THEN t0.c33 END)) WHERE (((+ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON ((rt0.c1 COLLATE BINARY) IS TRUE) FULL OUTER JOIN rt0 ON ((((rt0.c2)|(rt0.c2)))-(CASE WHEN rt0.c1 THEN rt0.c1 WHEN t0.c33 THEN '莎{-]i' WHEN t0.c3 THEN t0.c33 END)));
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON ((rt0.c1 COLLATE BINARY) IS TRUE) FULL OUTER JOIN rt0 ON ((((rt0.c2)|(rt0.c2)))-(CASE WHEN rt0.c1 THEN rt0.c1 WHEN t0.c33 THEN '莎{-]i' WHEN t0.c3 THEN t0.c33 END)) WHERE (((+ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON ((rt0.c1 COLLATE BINARY) IS TRUE) FULL OUTER JOIN rt0 ON ((((rt0.c2)|(rt0.c2)))-(CASE WHEN rt0.c1 THEN rt0.c1 WHEN t0.c33 THEN '莎{-]i' WHEN t0.c3 THEN t0.c33 END)));
SELECT * FROM vt0, rt0, vt1, t0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY CASE WHEN t0.c33 THEN '1244509923' ELSE vt0.c1 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY CASE WHEN t0.c33 THEN '1244509923' ELSE vt0.c1 END COLLATE BINARY  NULLS LAST);
SELECT * FROM vt0, rt0, vt1, t0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY CASE WHEN t0.c33 THEN '1244509923' ELSE vt0.c1 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY CASE WHEN t0.c33 THEN '1244509923' ELSE vt0.c1 END COLLATE BINARY  NULLS LAST);
SELECT * FROM vt0, rt0, vt1, t0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY CASE WHEN t0.c33 THEN '1244509923' ELSE vt0.c1 END COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0)))/((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0)))/((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0)))/((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0)))/((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0)))/((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT * FROM vt0, rt0 WHERE ((((+ (rt0.c1)))>>(NULL)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))>>(NULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((+ (rt0.c1)))>>(NULL)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))>>(NULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((+ (rt0.c1)))>>(NULL)));
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt1 ON (+ ((('(}0')GLOB(rt0.c0)))) WHERE ((~ (NULLIF(DISTINCT rt0.c0, t0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((~ (NULLIF(DISTINCT rt0.c0, t0.c3)))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt1 ON (+ ((('(}0')GLOB(rt0.c0)))));
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt1 ON (+ ((('(}0')GLOB(rt0.c0)))) WHERE ((~ (NULLIF(DISTINCT rt0.c0, t0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((~ (NULLIF(DISTINCT rt0.c0, t0.c3)))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt1 ON (+ ((('(}0')GLOB(rt0.c0)))));
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt1 ON (+ ((('(}0')GLOB(rt0.c0)))) WHERE ((~ (NULLIF(DISTINCT rt0.c0, t0.c3))));
SELECT ALL * FROM t0, vt0 WHERE (((((~ ('-841462615'))))>(((- (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((~ ('-841462615'))))>(((- (vt0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((~ ('-841462615'))))>(((- (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((~ ('-841462615'))))>(((- (vt0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((~ ('-841462615'))))>(((- (vt0.c1))))));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((rt0.c0) NOTNULL))IS(0Xffffffffe7a4c928)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))IS(0Xffffffffe7a4c928))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((rt0.c0) NOTNULL))IS(0Xffffffffe7a4c928)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))IS(0Xffffffffe7a4c928))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((rt0.c0) NOTNULL))IS(0Xffffffffe7a4c928)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((rt0.c0)<(x'')))OR((~ (t0.c33)))))AND(((((0.5960322488646244)AND(rt0.c1)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)<(x'')))OR((~ (t0.c33)))))AND(((((0.5960322488646244)AND(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((rt0.c0)<(x'')))OR((~ (t0.c33)))))AND(((((0.5960322488646244)AND(rt0.c1)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)<(x'')))OR((~ (t0.c33)))))AND(((((0.5960322488646244)AND(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((rt0.c0)<(x'')))OR((~ (t0.c33)))))AND(((((0.5960322488646244)AND(rt0.c1)))AND(rt0.c1)))));
SELECT * FROM rt0 INNER JOIN vt0 ON ((load_extension(vt0.c0, vt0.c1)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((vt0.c1) IS TRUE))) WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(CAST(rt0.c1 AS TEXT))))AND(vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c1 ASC, (NOT (((x'') NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(CAST(rt0.c1 AS TEXT))))AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((load_extension(vt0.c0, vt0.c1)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((vt0.c1) IS TRUE))) ORDER BY vt0.c1 ASC, (NOT (((x'') NOTNULL))) ASC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt0 ON ((load_extension(vt0.c0, vt0.c1)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((vt0.c1) IS TRUE))) WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(CAST(rt0.c1 AS TEXT))))AND(vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c1 ASC, (NOT (((x'') NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(CAST(rt0.c1 AS TEXT))))AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((load_extension(vt0.c0, vt0.c1)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((vt0.c1) IS TRUE))) ORDER BY vt0.c1 ASC, (NOT (((x'') NOTNULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1)<=(t0.c33)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)<=(t0.c33)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1)<=(t0.c33)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)<=(t0.c33)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1)<=(t0.c33)) IN ()));
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((vt0.c1, vt0.c0, vt0.c1, 0.4115521128991666, t0.c33)) NOT BETWEEN ((vt0.c0, t0.c33, rt0.c0, vt0.c1, rt0.c0)) AND ((rt0.c0, vt0.c0, t0.c3, '-1422479284', t0.c33)))))==(((~ (rt0.c2)))))) ORDER BY (+ (TYPEOF(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1, vt0.c0, vt0.c1, 0.4115521128991666, t0.c33)) NOT BETWEEN ((vt0.c0, t0.c33, rt0.c0, vt0.c1, rt0.c0)) AND ((rt0.c0, vt0.c0, t0.c3, '-1422479284', t0.c33)))))=(((~ (rt0.c2)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (+ (TYPEOF(rt0.c2))));
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((vt0.c1, vt0.c0, vt0.c1, 0.4115521128991666, t0.c33)) NOT BETWEEN ((vt0.c0, t0.c33, rt0.c0, vt0.c1, rt0.c0)) AND ((rt0.c0, vt0.c0, t0.c3, '-1422479284', t0.c33)))))==(((~ (rt0.c2)))))) ORDER BY (+ (TYPEOF(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1, vt0.c0, vt0.c1, 0.4115521128991666, t0.c33)) NOT BETWEEN ((vt0.c0, t0.c33, rt0.c0, vt0.c1, rt0.c0)) AND ((rt0.c0, vt0.c0, t0.c3, '-1422479284', t0.c33)))))=(((~ (rt0.c2)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (+ (TYPEOF(rt0.c2))));
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((vt0.c1, vt0.c0, vt0.c1, 0.4115521128991666, t0.c33)) NOT BETWEEN ((vt0.c0, t0.c33, rt0.c0, vt0.c1, rt0.c0)) AND ((rt0.c0, vt0.c0, t0.c3, '-1422479284', t0.c33)))))==(((~ (rt0.c2)))))) ORDER BY (+ (TYPEOF(rt0.c2)));
SELECT * FROM vt1 NOT INDEXED, vt0, rt0 WHERE (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1 NOT INDEXED, vt0, rt0 WHERE (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1 NOT INDEXED, vt0, rt0 WHERE (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON LENGTH(-30703041) WHERE (ABS(((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON LENGTH(-30703041));
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON LENGTH(-30703041) WHERE (ABS(((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON LENGTH(-30703041));
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON LENGTH(-30703041) WHERE (ABS(((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0))));
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (CAST(((rt0.c1) ISNULL) AS NUMERIC)) ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))OR(0.15475975558708321)))OR(rt0.c2)))AND(rt0.c1))) NOTNULL) DESC, ((((((((((vt1.c0)LIKE(vt1.c0)))AND(((((((((rt0.c0)AND(t0.c3)))AND(t0.c33)))OR(vt0.c1)))OR(vt1.c0)))))OR((NOT (vt1.c0)))))AND(rt0.c0 COLLATE BINARY)))OR((((t0.c33))>=((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))OR(0.15475975558708321)))OR(rt0.c2)))AND(rt0.c1))) NOTNULL) DESC, ((((((((((vt1.c0)LIKE(vt1.c0)))AND(((((((((rt0.c0)AND(t0.c3)))AND(t0.c33)))OR(vt0.c1)))OR(vt1.c0)))))OR((NOT (vt1.c0)))))AND(rt0.c0 COLLATE BINARY)))OR((((t0.c33))>=((rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (CAST(((rt0.c1) ISNULL) AS NUMERIC)) ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))OR(0.15475975558708321)))OR(rt0.c2)))AND(rt0.c1))) NOTNULL) DESC, ((((((((((vt1.c0)LIKE(vt1.c0)))AND(((((((((rt0.c0)AND(t0.c3)))AND(t0.c33)))OR(vt0.c1)))OR(vt1.c0)))))OR((NOT (vt1.c0)))))AND(rt0.c0 COLLATE BINARY)))OR((((t0.c33))>=((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))OR(0.15475975558708321)))OR(rt0.c2)))AND(rt0.c1))) NOTNULL) DESC, ((((((((((vt1.c0)LIKE(vt1.c0)))AND(((((((((rt0.c0)AND(t0.c3)))AND(t0.c33)))OR(vt0.c1)))OR(vt1.c0)))))OR((NOT (vt1.c0)))))AND(rt0.c0 COLLATE BINARY)))OR((((t0.c33))>=((rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (CAST(((rt0.c1) ISNULL) AS NUMERIC)) ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))OR(0.15475975558708321)))OR(rt0.c2)))AND(rt0.c1))) NOTNULL) DESC, ((((((((((vt1.c0)LIKE(vt1.c0)))AND(((((((((rt0.c0)AND(t0.c3)))AND(t0.c33)))OR(vt0.c1)))OR(vt1.c0)))))OR((NOT (vt1.c0)))))AND(rt0.c0 COLLATE BINARY)))OR((((t0.c33))>=((rt0.c2)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((vt1.c0)GLOB(t0.c3)) COLLATE BINARY) ORDER BY ((UNLIKELY('{}')) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)GLOB(t0.c3)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1 ORDER BY ((UNLIKELY('{}')) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((vt1.c0)GLOB(t0.c3)) COLLATE BINARY) ORDER BY ((UNLIKELY('{}')) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)GLOB(t0.c3)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1 ORDER BY ((UNLIKELY('{}')) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((vt1.c0)GLOB(t0.c3)) COLLATE BINARY) ORDER BY ((UNLIKELY('{}')) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS REAL)) IS FALSE) CROSS JOIN rt0 ON (~ (((rt0.c1) IS FALSE))) RIGHT OUTER JOIN t0 ON (('0s.')%(rt0.c1)) COLLATE NOCASE WHERE (((COALESCE('1816686752', rt0.c2))/(((vt0.c1) NOT BETWEEN (t0.c33) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE('1816686752', rt0.c2))/(((vt0.c1) NOT BETWEEN (t0.c33) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS REAL)) IS FALSE) CROSS JOIN rt0 ON (~ (((rt0.c1) IS FALSE))) RIGHT OUTER JOIN t0 ON (('0s.')%(rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS REAL)) IS FALSE) CROSS JOIN rt0 ON (~ (((rt0.c1) IS FALSE))) RIGHT OUTER JOIN t0 ON (('0s.')%(rt0.c1)) COLLATE NOCASE WHERE (((COALESCE('1816686752', rt0.c2))/(((vt0.c1) NOT BETWEEN (t0.c33) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE('1816686752', rt0.c2))/(((vt0.c1) NOT BETWEEN (t0.c33) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS REAL)) IS FALSE) CROSS JOIN rt0 ON (~ (((rt0.c1) IS FALSE))) RIGHT OUTER JOIN t0 ON (('0s.')%(rt0.c1)) COLLATE NOCASE);
SELECT * FROM rt0, vt1, vt0 WHERE (TRIM(DISTINCT CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST(rt0.c0 AS REAL))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (TRIM(DISTINCT CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST(rt0.c0 AS REAL))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (TRIM(DISTINCT CAST(rt0.c0 AS REAL)));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((t0.c3 IN (NULL)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((t0.c3 IN (NULL)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((t0.c3 IN (NULL)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((t0.c3 IN (NULL)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((t0.c3 IN (NULL)) COLLATE NOCASE);
SELECT * FROM vt0, rt0, vt1, t0 WHERE (HEX(DISTINCT (~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (~ (vt1.c0)))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, vt1, t0);
SELECT * FROM vt0, rt0, vt1, t0 WHERE (HEX(DISTINCT (~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (~ (vt1.c0)))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, vt1, t0);
SELECT * FROM vt0, rt0, vt1, t0 WHERE (HEX(DISTINCT (~ (vt1.c0))));
SELECT ALL * FROM vt0, vt1, t0 FULL OUTER JOIN rt0 ON 0x22af688e WHERE (TYPEOF(DISTINCT 0x3e692e7));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT 0X3e692e7)) IS TRUE)  as count FROM vt0, vt1, t0 FULL OUTER JOIN rt0 ON 0X22af688e);
SELECT ALL * FROM vt0, vt1, t0 FULL OUTER JOIN rt0 ON 0x22af688e WHERE (TYPEOF(DISTINCT 0x3e692e7));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT 0X3e692e7)) IS TRUE)  as count FROM vt0, vt1, t0 FULL OUTER JOIN rt0 ON 0X22af688e);
SELECT ALL * FROM vt0, vt1, t0 FULL OUTER JOIN rt0 ON 0x22af688e WHERE (TYPEOF(DISTINCT 0x3e692e7));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((- (rt0.c2)) IN ()) WHERE ((~ (((rt0.c0) NOT NULL)))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((- (rt0.c2)) IN ()) ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((- (rt0.c2)) IN ()) WHERE ((~ (((rt0.c0) NOT NULL)))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((- (rt0.c2)) IN ()) ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((- (rt0.c2)) IN ()) WHERE ((~ (((rt0.c0) NOT NULL)))) ORDER BY x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (CASE ((((rt0.c2)AND(vt0.c1)))AND(vt0.c0))  WHEN vt0.c0 THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(t0.c33)))OR('')) END) ORDER BY (((~ (rt0.c1)))<<((~ (rt0.c0))))  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c2)AND(vt0.c1)))AND(vt0.c0))  WHEN vt0.c0 THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(t0.c33)))OR('')) END) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY (((~ (rt0.c1)))<<((~ (rt0.c0))))  NULLS FIRST, vt0.c0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (CASE ((((rt0.c2)AND(vt0.c1)))AND(vt0.c0))  WHEN vt0.c0 THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(t0.c33)))OR('')) END) ORDER BY (((~ (rt0.c1)))<<((~ (rt0.c0))))  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c2)AND(vt0.c1)))AND(vt0.c0))  WHEN vt0.c0 THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(t0.c33)))OR('')) END) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY (((~ (rt0.c1)))<<((~ (rt0.c0))))  NULLS FIRST, vt0.c0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (CASE ((((rt0.c2)AND(vt0.c1)))AND(vt0.c0))  WHEN vt0.c0 THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(t0.c33)))OR('')) END) ORDER BY (((~ (rt0.c1)))<<((~ (rt0.c0))))  NULLS FIRST, vt0.c0;
SELECT ALL * FROM vt1, t0, vt0 WHERE ('!%/J5vz^>');
SELECT SUM(count) FROM (SELECT (('!%/J5vz^>') IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE ('!%/J5vz^>');
SELECT SUM(count) FROM (SELECT (('!%/J5vz^>') IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE ('!%/J5vz^>');
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (((((rt0.c0) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (((((rt0.c0) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (((((rt0.c0) NOT NULL)) IS FALSE));
SELECT * FROM t0 WHERE (CASE WHEN CASE WHEN t0.c3 THEN 0.7342693587756918 END THEN ((t0.c33)>>(t0.c3)) END) ORDER BY (((((t0.c33))=((t0.c33))))IS NOT(CAST(t0.c33 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c3 THEN 0.7342693587756918 END THEN ((t0.c33)>>(t0.c3)) END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c33))=((t0.c33))))IS NOT(CAST(t0.c33 AS TEXT))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CASE WHEN CASE WHEN t0.c3 THEN 0.7342693587756918 END THEN ((t0.c33)>>(t0.c3)) END) ORDER BY (((((t0.c33))=((t0.c33))))IS NOT(CAST(t0.c33 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c3 THEN 0.7342693587756918 END THEN ((t0.c33)>>(t0.c3)) END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c33))=((t0.c33))))IS NOT(CAST(t0.c33 AS TEXT))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CASE WHEN CASE WHEN t0.c3 THEN 0.7342693587756918 END THEN ((t0.c33)>>(t0.c3)) END) ORDER BY (((((t0.c33))=((t0.c33))))IS NOT(CAST(t0.c33 AS TEXT))) ASC  NULLS FIRST;
SELECT * FROM vt0, rt0 NOT INDEXED, vt1, t0 WHERE (CASE CASE vt0.c1  WHEN rt0.c2 THEN x'aa93' WHEN rt0.c2 THEN t0.c3 WHEN vt0.c1 THEN rt0.c0 ELSE NULL END  WHEN json_extract(vt0.c0, t0.c33) THEN 1.707311524E9 COLLATE RTRIM ELSE vt0.c1 COLLATE NOCASE END) ORDER BY DATE(((((((((rt0.c0)AND(rt0.c0)))OR(t0.c33)))AND(t0.c33)))OR(vt1.c0)), (vt0.c0 IN (rt0.c1)), (((t0.c3)) NOT BETWEEN ((t0.c33)) AND ((vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c1  WHEN rt0.c2 THEN x'aa93' WHEN rt0.c2 THEN t0.c3 WHEN vt0.c1 THEN rt0.c0 ELSE NULL END  WHEN json_extract(vt0.c0, t0.c33) THEN 1.707311524E9 COLLATE RTRIM ELSE vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY DATE(((((((((rt0.c0)AND(rt0.c0)))OR(t0.c33)))AND(t0.c33)))OR(vt1.c0)), (vt0.c0 IN (rt0.c1)), (((t0.c3)) NOT BETWEEN ((t0.c33)) AND ((vt0.c0)))) ASC);
SELECT * FROM vt0, rt0 NOT INDEXED, vt1, t0 WHERE (CASE CASE vt0.c1  WHEN rt0.c2 THEN x'aa93' WHEN rt0.c2 THEN t0.c3 WHEN vt0.c1 THEN rt0.c0 ELSE NULL END  WHEN json_extract(vt0.c0, t0.c33) THEN 1.707311524E9 COLLATE RTRIM ELSE vt0.c1 COLLATE NOCASE END) ORDER BY DATE(((((((((rt0.c0)AND(rt0.c0)))OR(t0.c33)))AND(t0.c33)))OR(vt1.c0)), (vt0.c0 IN (rt0.c1)), (((t0.c3)) NOT BETWEEN ((t0.c33)) AND ((vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c1  WHEN rt0.c2 THEN x'aa93' WHEN rt0.c2 THEN t0.c3 WHEN vt0.c1 THEN rt0.c0 ELSE NULL END  WHEN json_extract(vt0.c0, t0.c33) THEN 1.707311524E9 COLLATE RTRIM ELSE vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY DATE(((((((((rt0.c0)AND(rt0.c0)))OR(t0.c33)))AND(t0.c33)))OR(vt1.c0)), (vt0.c0 IN (rt0.c1)), (((t0.c3)) NOT BETWEEN ((t0.c33)) AND ((vt0.c0)))) ASC);
SELECT * FROM vt0, rt0 NOT INDEXED, vt1, t0 WHERE (CASE CASE vt0.c1  WHEN rt0.c2 THEN x'aa93' WHEN rt0.c2 THEN t0.c3 WHEN vt0.c1 THEN rt0.c0 ELSE NULL END  WHEN json_extract(vt0.c0, t0.c33) THEN 1.707311524E9 COLLATE RTRIM ELSE vt0.c1 COLLATE NOCASE END) ORDER BY DATE(((((((((rt0.c0)AND(rt0.c0)))OR(t0.c33)))AND(t0.c33)))OR(vt1.c0)), (vt0.c0 IN (rt0.c1)), (((t0.c3)) NOT BETWEEN ((t0.c33)) AND ((vt0.c0)))) ASC;
SELECT ALL * FROM vt1, vt0 WHERE (((QUOTE(vt1.c0))>(((vt0.c1)IS(vt0.c1))))) ORDER BY ((('m0'))>((NULLIF(DISTINCT vt1.c0, vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(vt1.c0))>(((vt0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((('m0'))>((NULLIF(DISTINCT vt1.c0, vt0.c1)))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (((QUOTE(vt1.c0))>(((vt0.c1)IS(vt0.c1))))) ORDER BY ((('m0'))>((NULLIF(DISTINCT vt1.c0, vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(vt1.c0))>(((vt0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((('m0'))>((NULLIF(DISTINCT vt1.c0, vt0.c1)))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (((QUOTE(vt1.c0))>(((vt0.c1)IS(vt0.c1))))) ORDER BY ((('m0'))>((NULLIF(DISTINCT vt1.c0, vt0.c1)))) ASC;
SELECT ALL * FROM vt1, rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) IS TRUE));
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE ((((rt0.c1 IN ()))!=(((((vt0.c0)AND(t0.c3)))AND(rt0.c1))))) ORDER BY CASE WHEN (x'06df' IN (rt0.c2)) THEN ((vt0.c1)IS NOT(vt0.c1)) WHEN rt0.c0 THEN (- (vt0.c0)) WHEN UNLIKELY(DISTINCT 'H(fM') THEN (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS INTEGER) WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c2 AS BLOB) END ASC, json(((vt0.c0) IS TRUE)) DESC  NULLS FIRST, TRIM(((((rt0.c2)AND('2029724621')))OR(vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))<>(((((vt0.c0)AND(t0.c3)))AND(rt0.c1))))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY CASE WHEN (x'06df' IN (rt0.c2)) THEN ((vt0.c1)IS NOT(vt0.c1)) WHEN rt0.c0 THEN (- (vt0.c0)) WHEN UNLIKELY(DISTINCT 'H(fM') THEN (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS INTEGER) WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c2 AS BLOB) END ASC, json(((vt0.c0) IS TRUE)) DESC  NULLS FIRST, TRIM(((((rt0.c2)AND('2029724621')))OR(vt1.c0)))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE ((((rt0.c1 IN ()))!=(((((vt0.c0)AND(t0.c3)))AND(rt0.c1))))) ORDER BY CASE WHEN (x'06df' IN (rt0.c2)) THEN ((vt0.c1)IS NOT(vt0.c1)) WHEN rt0.c0 THEN (- (vt0.c0)) WHEN UNLIKELY(DISTINCT 'H(fM') THEN (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS INTEGER) WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c2 AS BLOB) END ASC, json(((vt0.c0) IS TRUE)) DESC  NULLS FIRST, TRIM(((((rt0.c2)AND('2029724621')))OR(vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))<>(((((vt0.c0)AND(t0.c3)))AND(rt0.c1))))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY CASE WHEN (x'06df' IN (rt0.c2)) THEN ((vt0.c1)IS NOT(vt0.c1)) WHEN rt0.c0 THEN (- (vt0.c0)) WHEN UNLIKELY(DISTINCT 'H(fM') THEN (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS INTEGER) WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c2 AS BLOB) END ASC, json(((vt0.c0) IS TRUE)) DESC  NULLS FIRST, TRIM(((((rt0.c2)AND('2029724621')))OR(vt1.c0)))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE ((((rt0.c1 IN ()))!=(((((vt0.c0)AND(t0.c3)))AND(rt0.c1))))) ORDER BY CASE WHEN (x'06df' IN (rt0.c2)) THEN ((vt0.c1)IS NOT(vt0.c1)) WHEN rt0.c0 THEN (- (vt0.c0)) WHEN UNLIKELY(DISTINCT 'H(fM') THEN (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS INTEGER) WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c2 AS BLOB) END ASC, json(((vt0.c0) IS TRUE)) DESC  NULLS FIRST, TRIM(((((rt0.c2)AND('2029724621')))OR(vt1.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((t0.c3) BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE NOCASE FULL OUTER JOIN rt0 ON (+ ((~ (t0.c33)))) LEFT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((t0.c3) NOTNULL)))) WHERE ((((+ (vt0.c0)))||(CAST(rt0.c0 AS BLOB)))) ORDER BY (((rt0.c0)%(vt0.c1)) IN (((t0.c3) BETWEEN (t0.c3) AND (vt0.c0))))  NULLS FIRST, rt0.c1  NULLS FIRST, (((rt0.c1)) BETWEEN (((+ (vt1.c0)))) AND ((CASE WHEN t0.c3 THEN vt0.c1 ELSE t0.c3 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))||(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((t0.c3) BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE NOCASE FULL OUTER JOIN rt0 ON (+ ((~ (t0.c33)))) LEFT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((t0.c3) NOTNULL)))) ORDER BY (((rt0.c0)%(vt0.c1)) IN (((t0.c3) BETWEEN (t0.c3) AND (vt0.c0))))  NULLS FIRST, rt0.c1  NULLS FIRST, (((rt0.c1)) BETWEEN (((+ (vt1.c0)))) AND ((CASE WHEN t0.c3 THEN vt0.c1 ELSE t0.c3 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((t0.c3) BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE NOCASE FULL OUTER JOIN rt0 ON (+ ((~ (t0.c33)))) LEFT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((t0.c3) NOTNULL)))) WHERE ((((+ (vt0.c0)))||(CAST(rt0.c0 AS BLOB)))) ORDER BY (((rt0.c0)%(vt0.c1)) IN (((t0.c3) BETWEEN (t0.c3) AND (vt0.c0))))  NULLS FIRST, rt0.c1  NULLS FIRST, (((rt0.c1)) BETWEEN (((+ (vt1.c0)))) AND ((CASE WHEN t0.c3 THEN vt0.c1 ELSE t0.c3 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))||(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((t0.c3) BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE NOCASE FULL OUTER JOIN rt0 ON (+ ((~ (t0.c33)))) LEFT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((t0.c3) NOTNULL)))) ORDER BY (((rt0.c0)%(vt0.c1)) IN (((t0.c3) BETWEEN (t0.c3) AND (vt0.c0))))  NULLS FIRST, rt0.c1  NULLS FIRST, (((rt0.c1)) BETWEEN (((+ (vt1.c0)))) AND ((CASE WHEN t0.c3 THEN vt0.c1 ELSE t0.c3 END)))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1)IS NOT(vt0.c0)))LIKE((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0)))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS NOT(vt0.c0)))LIKE((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c1 ASC);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1)IS NOT(vt0.c0)))LIKE((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0)))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS NOT(vt0.c0)))LIKE((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c1 ASC);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1)IS NOT(vt0.c0)))LIKE((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0)))))) ORDER BY vt0.c1 ASC;
SELECT * FROM vt0, vt1, t0 WHERE (((((t0.c3)%(vt0.c0))) BETWEEN (((((((((t0.c33)AND(vt0.c0)))AND(vt0.c1)))OR('-1521435129')))OR(NULL))) AND (UNLIKELY(NULL)))) ORDER BY ((json_insert(t0.c33, t0.c3, t0.c3, t0.c3, vt1.c0)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c3)%(vt0.c0))) BETWEEN (((((((((t0.c33)AND(vt0.c0)))AND(vt0.c1)))OR('-1521435129')))OR(NULL))) AND (UNLIKELY(NULL)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((json_insert(t0.c33, t0.c3, t0.c3, t0.c3, vt1.c0)) NOT NULL)  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE (((((t0.c3)%(vt0.c0))) BETWEEN (((((((((t0.c33)AND(vt0.c0)))AND(vt0.c1)))OR('-1521435129')))OR(NULL))) AND (UNLIKELY(NULL)))) ORDER BY ((json_insert(t0.c33, t0.c3, t0.c3, t0.c3, vt1.c0)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c3)%(vt0.c0))) BETWEEN (((((((((t0.c33)AND(vt0.c0)))AND(vt0.c1)))OR('-1521435129')))OR(NULL))) AND (UNLIKELY(NULL)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((json_insert(t0.c33, t0.c3, t0.c3, t0.c3, vt1.c0)) NOT NULL)  NULLS FIRST);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (((x'')IS(t0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')IS(t0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (((x'')IS(t0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')IS(t0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (((x'')IS(t0.c3 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (UPPER(DISTINCT (((vt0.c1)) BETWEEN ((t0.c33)) AND ((t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((vt0.c1)) BETWEEN ((t0.c33)) AND ((t0.c3))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (UPPER(DISTINCT (((vt0.c1)) BETWEEN ((t0.c33)) AND ((t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((vt0.c1)) BETWEEN ((t0.c33)) AND ((t0.c3))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (UPPER(DISTINCT (((vt0.c1)) BETWEEN ((t0.c33)) AND ((t0.c3)))));
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) AS REAL));
SELECT * FROM vt0, vt1 WHERE (TRIM(((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))) ORDER BY (((~ (vt1.c0)))IS(vt1.c0)) DESC, ((CAST(vt1.c0 AS NUMERIC)) IS TRUE), vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((~ (vt1.c0)))IS(vt1.c0)) DESC, ((CAST(vt1.c0 AS NUMERIC)) IS TRUE), vt0.c0  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (TRIM(((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))) ORDER BY (((~ (vt1.c0)))IS(vt1.c0)) DESC, ((CAST(vt1.c0 AS NUMERIC)) IS TRUE), vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((~ (vt1.c0)))IS(vt1.c0)) DESC, ((CAST(vt1.c0 AS NUMERIC)) IS TRUE), vt0.c0  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (TRIM(((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))) ORDER BY (((~ (vt1.c0)))IS(vt1.c0)) DESC, ((CAST(vt1.c0 AS NUMERIC)) IS TRUE), vt0.c0  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE ((((vt1.c0, CASE t0.c3  WHEN t0.c33 THEN rt0.c2 END, (((t0.c33))<>((rt0.c0)))))<(('1603240510', ((t0.c3) NOT BETWEEN (t0.c33) AND (rt0.c1)), CAST(rt0.c2 AS BLOB))))) ORDER BY ((vt1.c0 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, CASE t0.c3  WHEN t0.c33 THEN rt0.c2 END, (((t0.c33))!=((rt0.c0)))))<(('1603240510', ((t0.c3) NOT BETWEEN (t0.c33) AND (rt0.c1)), CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((vt1.c0 IN ()) IN ()) ASC);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE ((((vt1.c0, CASE t0.c3  WHEN t0.c33 THEN rt0.c2 END, (((t0.c33))<>((rt0.c0)))))<(('1603240510', ((t0.c3) NOT BETWEEN (t0.c33) AND (rt0.c1)), CAST(rt0.c2 AS BLOB))))) ORDER BY ((vt1.c0 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, CASE t0.c3  WHEN t0.c33 THEN rt0.c2 END, (((t0.c33))!=((rt0.c0)))))<(('1603240510', ((t0.c3) NOT BETWEEN (t0.c33) AND (rt0.c1)), CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((vt1.c0 IN ()) IN ()) ASC);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE ((((vt1.c0, CASE t0.c3  WHEN t0.c33 THEN rt0.c2 END, (((t0.c33))<>((rt0.c0)))))<(('1603240510', ((t0.c3) NOT BETWEEN (t0.c33) AND (rt0.c1)), CAST(rt0.c2 AS BLOB))))) ORDER BY ((vt1.c0 IN ()) IN ()) ASC;
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE ((((rt0.c0 COLLATE NOCASE))<>((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 COLLATE NOCASE))!=((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 END)))) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE ((((rt0.c0 COLLATE NOCASE))<>((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 COLLATE NOCASE))!=((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 END)))) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE ((((rt0.c0 COLLATE NOCASE))<>((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 END))));
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((t0.c3, vt0.c0, t0.c33)) BETWEEN ((vt0.c1, t0.c3, t0.c3)) AND ((t0.c3, vt0.c0, vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c3, vt0.c0, t0.c33)) BETWEEN ((vt0.c1, t0.c3, t0.c3)) AND ((t0.c3, vt0.c0, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((t0.c3, vt0.c0, t0.c33)) BETWEEN ((vt0.c1, t0.c3, t0.c3)) AND ((t0.c3, vt0.c0, vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c3, vt0.c0, t0.c33)) BETWEEN ((vt0.c1, t0.c3, t0.c3)) AND ((t0.c3, vt0.c0, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((t0.c3, vt0.c0, t0.c33)) BETWEEN ((vt0.c1, t0.c3, t0.c3)) AND ((t0.c3, vt0.c0, vt0.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((~ (t0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c3))) IS TRUE)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((~ (t0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c3))) IS TRUE)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((~ (t0.c3))) IS TRUE));
SELECT * FROM t0, rt0, vt0, vt1 WHERE (CAST((~ (t0.c3)) AS REAL)) ORDER BY x'' DESC, CAST(rt0.c0 AS INTEGER) COLLATE RTRIM ASC  NULLS FIRST, TYPEOF(((0.5774337868721421) NOTNULL)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c3)) AS REAL)) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY x'' DESC, CAST(rt0.c0 AS INTEGER) COLLATE RTRIM ASC  NULLS FIRST, TYPEOF(((0.5774337868721421) NOTNULL)) ASC);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (CAST((~ (t0.c3)) AS REAL)) ORDER BY x'' DESC, CAST(rt0.c0 AS INTEGER) COLLATE RTRIM ASC  NULLS FIRST, TYPEOF(((0.5774337868721421) NOTNULL)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c3)) AS REAL)) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY x'' DESC, CAST(rt0.c0 AS INTEGER) COLLATE RTRIM ASC  NULLS FIRST, TYPEOF(((0.5774337868721421) NOTNULL)) ASC);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (CAST((~ (t0.c3)) AS REAL)) ORDER BY x'' DESC, CAST(rt0.c0 AS INTEGER) COLLATE RTRIM ASC  NULLS FIRST, TYPEOF(((0.5774337868721421) NOTNULL)) ASC;
SELECT * FROM t0 WHERE (((((CASE WHEN t0.c33 THEN t0.c3 END)AND((((t0.c33, 1707311524, t0.c33, t0.c33, t0.c33)) BETWEEN ((t0.c3, 0Xffffffff916fbf6d, t0.c33, t0.c33, t0.c3)) AND ((t0.c3, t0.c33, t0.c3, t0.c33, t0.c33))))))AND(t0.c3))) ORDER BY (((((t0.c3)AND(t0.c33)))AND(t0.c33)) IN ()), (((t0.c3, t0.c33, t0.c33, t0.c33, t0.c3)) BETWEEN ((((((t0.c3)AND(t0.c33)))OR(t0.c3)), ((t0.c33)>(t0.c3)), ((t0.c3)==(t0.c3)), UNLIKELY(t0.c33), t0.c33)) AND ((x'37ae', ((((t0.c3)AND(t0.c3)))AND(t0.c33)), ((t0.c3) IS TRUE), (((t0.c33)) BETWEEN ((t0.c3)) AND (('~l'))), ((t0.c33)>(t0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t0.c33 THEN t0.c3 END)AND((((t0.c33, 1707311524, t0.c33, t0.c33, t0.c33)) BETWEEN ((t0.c3, 0Xffffffff916fbf6d, t0.c33, t0.c33, t0.c3)) AND ((t0.c3, t0.c33, t0.c3, t0.c33, t0.c33))))))AND(t0.c3))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c3)AND(t0.c33)))AND(t0.c33)) IN ()), (((t0.c3, t0.c33, t0.c33, t0.c33, t0.c3)) BETWEEN ((((((t0.c3)AND(t0.c33)))OR(t0.c3)), ((t0.c33)>(t0.c3)), ((t0.c3)=(t0.c3)), UNLIKELY(t0.c33), t0.c33)) AND ((x'37ae', ((((t0.c3)AND(t0.c3)))AND(t0.c33)), ((t0.c3) IS TRUE), (((t0.c33)) BETWEEN ((t0.c3)) AND (('~l'))), ((t0.c33)>(t0.c3))))) DESC);
SELECT * FROM t0 WHERE (((((CASE WHEN t0.c33 THEN t0.c3 END)AND((((t0.c33, 1707311524, t0.c33, t0.c33, t0.c33)) BETWEEN ((t0.c3, 0Xffffffff916fbf6d, t0.c33, t0.c33, t0.c3)) AND ((t0.c3, t0.c33, t0.c3, t0.c33, t0.c33))))))AND(t0.c3))) ORDER BY (((((t0.c3)AND(t0.c33)))AND(t0.c33)) IN ()), (((t0.c3, t0.c33, t0.c33, t0.c33, t0.c3)) BETWEEN ((((((t0.c3)AND(t0.c33)))OR(t0.c3)), ((t0.c33)>(t0.c3)), ((t0.c3)==(t0.c3)), UNLIKELY(t0.c33), t0.c33)) AND ((x'37ae', ((((t0.c3)AND(t0.c3)))AND(t0.c33)), ((t0.c3) IS TRUE), (((t0.c33)) BETWEEN ((t0.c3)) AND (('~l'))), ((t0.c33)>(t0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t0.c33 THEN t0.c3 END)AND((((t0.c33, 1707311524, t0.c33, t0.c33, t0.c33)) BETWEEN ((t0.c3, 0Xffffffff916fbf6d, t0.c33, t0.c33, t0.c3)) AND ((t0.c3, t0.c33, t0.c3, t0.c33, t0.c33))))))AND(t0.c3))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c3)AND(t0.c33)))AND(t0.c33)) IN ()), (((t0.c3, t0.c33, t0.c33, t0.c33, t0.c3)) BETWEEN ((((((t0.c3)AND(t0.c33)))OR(t0.c3)), ((t0.c33)>(t0.c3)), ((t0.c3)=(t0.c3)), UNLIKELY(t0.c33), t0.c33)) AND ((x'37ae', ((((t0.c3)AND(t0.c3)))AND(t0.c33)), ((t0.c3) IS TRUE), (((t0.c33)) BETWEEN ((t0.c3)) AND (('~l'))), ((t0.c33)>(t0.c3))))) DESC);
SELECT * FROM t0 WHERE (((((CASE WHEN t0.c33 THEN t0.c3 END)AND((((t0.c33, 1707311524, t0.c33, t0.c33, t0.c33)) BETWEEN ((t0.c3, 0Xffffffff916fbf6d, t0.c33, t0.c33, t0.c3)) AND ((t0.c3, t0.c33, t0.c3, t0.c33, t0.c33))))))AND(t0.c3))) ORDER BY (((((t0.c3)AND(t0.c33)))AND(t0.c33)) IN ()), (((t0.c3, t0.c33, t0.c33, t0.c33, t0.c3)) BETWEEN ((((((t0.c3)AND(t0.c33)))OR(t0.c3)), ((t0.c33)>(t0.c3)), ((t0.c3)==(t0.c3)), UNLIKELY(t0.c33), t0.c33)) AND ((x'37ae', ((((t0.c3)AND(t0.c3)))AND(t0.c33)), ((t0.c3) IS TRUE), (((t0.c33)) BETWEEN ((t0.c3)) AND (('~l'))), ((t0.c33)>(t0.c3))))) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1)|(rt0.c1)), NULL, ((vt0.c0)IS(rt0.c1))))=(((+ (vt0.c0)), 0.9822614820700147, json_type('5G}K')))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)|(rt0.c1)), NULL, ((vt0.c0)IS(rt0.c1))))=(((+ (vt0.c0)), 0.9822614820700147, json_type('5G}K'))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1)|(rt0.c1)), NULL, ((vt0.c0)IS(rt0.c1))))=(((+ (vt0.c0)), 0.9822614820700147, json_type('5G}K')))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)|(rt0.c1)), NULL, ((vt0.c0)IS(rt0.c1))))=(((+ (vt0.c0)), 0.9822614820700147, json_type('5G}K'))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM t0 WHERE ((- (t0.c3)) COLLATE RTRIM) ORDER BY ((t0.c33) BETWEEN (t0.c3) AND (t0.c3)) COLLATE BINARY DESC, ((((json_remove(x'', t0.c33))AND(((t0.c3) BETWEEN (t0.c3) AND (t0.c33)))))AND(((t0.c33)||(t0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (t0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((t0.c33) BETWEEN (t0.c3) AND (t0.c3)) COLLATE BINARY DESC, ((((json_remove(x'', t0.c33))AND(((t0.c3) BETWEEN (t0.c3) AND (t0.c33)))))AND(((t0.c33)||(t0.c3)))) ASC);
SELECT COUNT(*) FROM t0 WHERE ((- (t0.c3)) COLLATE RTRIM) ORDER BY ((t0.c33) BETWEEN (t0.c3) AND (t0.c3)) COLLATE BINARY DESC, ((((json_remove(x'', t0.c33))AND(((t0.c3) BETWEEN (t0.c3) AND (t0.c33)))))AND(((t0.c33)||(t0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (t0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((t0.c33) BETWEEN (t0.c3) AND (t0.c3)) COLLATE BINARY DESC, ((((json_remove(x'', t0.c33))AND(((t0.c3) BETWEEN (t0.c3) AND (t0.c33)))))AND(((t0.c33)||(t0.c3)))) ASC);
SELECT ALL * FROM t0 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))>(((vt1.c0)LIKE(vt1.c0))))) ORDER BY COALESCE(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0) ASC  NULLS FIRST, ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(0.9419995642982648)))OR(vt1.c0))  NULLS FIRST, GLOB((~ (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>(vt1.c0)))>(((vt1.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY COALESCE(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0) ASC  NULLS FIRST, ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(0.9419995642982648)))OR(vt1.c0))  NULLS FIRST, GLOB((~ (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))>(((vt1.c0)LIKE(vt1.c0))))) ORDER BY COALESCE(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0) ASC  NULLS FIRST, ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(0.9419995642982648)))OR(vt1.c0))  NULLS FIRST, GLOB((~ (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>(vt1.c0)))>(((vt1.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY COALESCE(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0) ASC  NULLS FIRST, ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(0.9419995642982648)))OR(vt1.c0))  NULLS FIRST, GLOB((~ (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))>(((vt1.c0)LIKE(vt1.c0))))) ORDER BY COALESCE(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0) ASC  NULLS FIRST, ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(0.9419995642982648)))OR(vt1.c0))  NULLS FIRST, GLOB((~ (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN '0.29541198152770853' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 COLLATE NOCASE THEN '0.29541198152770853' END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN '0.29541198152770853' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 COLLATE NOCASE THEN '0.29541198152770853' END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN '0.29541198152770853' END);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((+ (((vt1.c0) NOT BETWEEN (0.53595246821458) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) NOT BETWEEN (0.53595246821458) AND (rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((+ (((vt1.c0) NOT BETWEEN (0.53595246821458) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) NOT BETWEEN (0.53595246821458) AND (rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((+ (((vt1.c0) NOT BETWEEN (0.53595246821458) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((x'5b7a')LIKE(TRIM(t0.c33))));
SELECT SUM(count) FROM (SELECT ((((x'5b7a')LIKE(TRIM(t0.c33)))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((x'5b7a')LIKE(TRIM(t0.c33))));
SELECT SUM(count) FROM (SELECT ((((x'5b7a')LIKE(TRIM(t0.c33)))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((x'5b7a')LIKE(TRIM(t0.c33))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM vt1, t0 WHERE (CASE WHEN ((((((((vt1.c0)OR(t0.c3)))AND(vt1.c0)))OR('Hl\r+6Ld\')))OR(vt1.c0)) THEN CAST(t0.c33 AS NUMERIC) WHEN ((((((((-409308796)AND(t0.c33)))AND(vt1.c0)))AND(t0.c3)))OR(t0.c33)) THEN CAST(vt1.c0 AS BLOB) WHEN ((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c3)) THEN CASE WHEN t0.c3 THEN t0.c3 END WHEN NULLIF(t0.c33, vt1.c0) THEN LOWER(DISTINCT NULL) WHEN ((((((((vt1.c0)OR(0.16928560534568282)))AND(t0.c3)))AND(NULL)))AND(t0.c33)) THEN (+ (t0.c3)) ELSE t0.c3 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt1.c0)OR(t0.c3)))AND(vt1.c0)))OR('Hl\r+6Ld\')))OR(vt1.c0)) THEN CAST(t0.c33 AS NUMERIC) WHEN ((((((((-409308796)AND(t0.c33)))AND(vt1.c0)))AND(t0.c3)))OR(t0.c33)) THEN CAST(vt1.c0 AS BLOB) WHEN ((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c3)) THEN CASE WHEN t0.c3 THEN t0.c3 END WHEN NULLIF(t0.c33, vt1.c0) THEN LOWER(DISTINCT NULL) WHEN ((((((((vt1.c0)OR(0.16928560534568282)))AND(t0.c3)))AND(NULL)))AND(t0.c33)) THEN (+ (t0.c3)) ELSE t0.c3 END) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CASE WHEN ((((((((vt1.c0)OR(t0.c3)))AND(vt1.c0)))OR('Hl\r+6Ld\')))OR(vt1.c0)) THEN CAST(t0.c33 AS NUMERIC) WHEN ((((((((-409308796)AND(t0.c33)))AND(vt1.c0)))AND(t0.c3)))OR(t0.c33)) THEN CAST(vt1.c0 AS BLOB) WHEN ((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c3)) THEN CASE WHEN t0.c3 THEN t0.c3 END WHEN NULLIF(t0.c33, vt1.c0) THEN LOWER(DISTINCT NULL) WHEN ((((((((vt1.c0)OR(0.16928560534568282)))AND(t0.c3)))AND(NULL)))AND(t0.c33)) THEN (+ (t0.c3)) ELSE t0.c3 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt1.c0)OR(t0.c3)))AND(vt1.c0)))OR('Hl\r+6Ld\')))OR(vt1.c0)) THEN CAST(t0.c33 AS NUMERIC) WHEN ((((((((-409308796)AND(t0.c33)))AND(vt1.c0)))AND(t0.c3)))OR(t0.c33)) THEN CAST(vt1.c0 AS BLOB) WHEN ((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c3)) THEN CASE WHEN t0.c3 THEN t0.c3 END WHEN NULLIF(t0.c33, vt1.c0) THEN LOWER(DISTINCT NULL) WHEN ((((((((vt1.c0)OR(0.16928560534568282)))AND(t0.c3)))AND(NULL)))AND(t0.c33)) THEN (+ (t0.c3)) ELSE t0.c3 END) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CASE WHEN ((((((((vt1.c0)OR(t0.c3)))AND(vt1.c0)))OR('Hl\r+6Ld\')))OR(vt1.c0)) THEN CAST(t0.c33 AS NUMERIC) WHEN ((((((((-409308796)AND(t0.c33)))AND(vt1.c0)))AND(t0.c3)))OR(t0.c33)) THEN CAST(vt1.c0 AS BLOB) WHEN ((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c3)) THEN CASE WHEN t0.c3 THEN t0.c3 END WHEN NULLIF(t0.c33, vt1.c0) THEN LOWER(DISTINCT NULL) WHEN ((((((((vt1.c0)OR(0.16928560534568282)))AND(t0.c3)))AND(NULL)))AND(t0.c33)) THEN (+ (t0.c3)) ELSE t0.c3 END);
SELECT ALL * FROM vt0, vt1, t0 WHERE (t0.c3);
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (t0.c3);
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (t0.c3);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt1.c0)AND(t0.c3)))AND(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(t0.c3)))AND(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt1.c0)AND(t0.c3)))AND(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(t0.c3)))AND(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt1.c0)AND(t0.c3)))AND(vt0.c1)) COLLATE RTRIM);
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt0.c1)) BETWEEN ((MAX(vt1.c0, vt1.c0, vt1.c0, vt0.c0))) AND ((((vt0.c0) ISNULL)))) WHERE (vt0.c0) ORDER BY ((vt0.c0) IS TRUE), 0xfffffffff654b0ce DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt0.c1)) BETWEEN ((MAX(vt1.c0, vt1.c0, vt1.c0, vt0.c0))) AND ((((vt0.c0) ISNULL)))) ORDER BY ((vt0.c0) IS TRUE), 0Xfffffffff654b0ce DESC  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt0.c1)) BETWEEN ((MAX(vt1.c0, vt1.c0, vt1.c0, vt0.c0))) AND ((((vt0.c0) ISNULL)))) WHERE (vt0.c0) ORDER BY ((vt0.c0) IS TRUE), 0xfffffffff654b0ce DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt0.c1)) BETWEEN ((MAX(vt1.c0, vt1.c0, vt1.c0, vt0.c0))) AND ((((vt0.c0) ISNULL)))) ORDER BY ((vt0.c0) IS TRUE), 0Xfffffffff654b0ce DESC  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt0.c1)) BETWEEN ((MAX(vt1.c0, vt1.c0, vt1.c0, vt0.c0))) AND ((((vt0.c0) ISNULL)))) WHERE (vt0.c0) ORDER BY ((vt0.c0) IS TRUE), 0xfffffffff654b0ce DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CAST(ABS(DISTINCT t0.c3) AS REAL)) ORDER BY ((t0.c33 IN ()) IN ()) DESC  NULLS FIRST, ((CAST(t0.c33 AS INTEGER)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(ABS(DISTINCT t0.c3) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c33 IN ()) IN ()) DESC  NULLS FIRST, ((CAST(t0.c33 AS INTEGER)) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(ABS(DISTINCT t0.c3) AS REAL)) ORDER BY ((t0.c33 IN ()) IN ()) DESC  NULLS FIRST, ((CAST(t0.c33 AS INTEGER)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(ABS(DISTINCT t0.c3) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c33 IN ()) IN ()) DESC  NULLS FIRST, ((CAST(t0.c33 AS INTEGER)) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(ABS(DISTINCT t0.c3) AS REAL)) ORDER BY ((t0.c33 IN ()) IN ()) DESC  NULLS FIRST, ((CAST(t0.c33 AS INTEGER)) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c1) ORDER BY UPPER(DISTINCT NULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY UPPER(DISTINCT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c1) ORDER BY UPPER(DISTINCT NULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY UPPER(DISTINCT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c1) ORDER BY UPPER(DISTINCT NULL) COLLATE NOCASE;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS TEXT) WHERE ((COALESCE(vt0.c0, vt0.c0, vt0.c1, vt0.c0) IN (vt0.c0 COLLATE NOCASE, CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ((((((((x'')AND(vt1.c0 COLLATE NOCASE)))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((vt1.c0)IS(vt0.c0)))))AND(((vt0.c1) IS FALSE)))  NULLS LAST, CHAR(((vt1.c0)GLOB(vt0.c1)), CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.20421087120918724 WHEN vt1.c0 THEN '1205965149' WHEN vt0.c1 THEN vt0.c0 END, NULL, '1236862784', ((vt0.c1)||(vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((COALESCE(vt0.c0, vt0.c0, vt0.c1, vt0.c0) IN (vt0.c0 COLLATE NOCASE, CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS TEXT) ORDER BY ((((((((x'')AND(vt1.c0 COLLATE NOCASE)))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((vt1.c0)IS(vt0.c0)))))AND(((vt0.c1) IS FALSE)))  NULLS LAST, CHAR(((vt1.c0)GLOB(vt0.c1)), CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.20421087120918724 WHEN vt1.c0 THEN '1205965149' WHEN vt0.c1 THEN vt0.c0 END, NULL, '1236862784', ((vt0.c1)||(vt0.c1))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS TEXT) WHERE ((COALESCE(vt0.c0, vt0.c0, vt0.c1, vt0.c0) IN (vt0.c0 COLLATE NOCASE, CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ((((((((x'')AND(vt1.c0 COLLATE NOCASE)))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((vt1.c0)IS(vt0.c0)))))AND(((vt0.c1) IS FALSE)))  NULLS LAST, CHAR(((vt1.c0)GLOB(vt0.c1)), CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.20421087120918724 WHEN vt1.c0 THEN '1205965149' WHEN vt0.c1 THEN vt0.c0 END, NULL, '1236862784', ((vt0.c1)||(vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((COALESCE(vt0.c0, vt0.c0, vt0.c1, vt0.c0) IN (vt0.c0 COLLATE NOCASE, CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS TEXT) ORDER BY ((((((((x'')AND(vt1.c0 COLLATE NOCASE)))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((vt1.c0)IS(vt0.c0)))))AND(((vt0.c1) IS FALSE)))  NULLS LAST, CHAR(((vt1.c0)GLOB(vt0.c1)), CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.20421087120918724 WHEN vt1.c0 THEN '1205965149' WHEN vt0.c1 THEN vt0.c0 END, NULL, '1236862784', ((vt0.c1)||(vt0.c1))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS TEXT) WHERE ((COALESCE(vt0.c0, vt0.c0, vt0.c1, vt0.c0) IN (vt0.c0 COLLATE NOCASE, CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ((((((((x'')AND(vt1.c0 COLLATE NOCASE)))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((vt1.c0)IS(vt0.c0)))))AND(((vt0.c1) IS FALSE)))  NULLS LAST, CHAR(((vt1.c0)GLOB(vt0.c1)), CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.20421087120918724 WHEN vt1.c0 THEN '1205965149' WHEN vt0.c1 THEN vt0.c0 END, NULL, '1236862784', ((vt0.c1)||(vt0.c1))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (((((t0.c3)==(NULL))))<((((rt0.c1)IS('rTT}MP8'))))) RIGHT OUTER JOIN t0 ON ((rt0.c1)OR(((((t0.c33)AND(vt1.c0)))AND(t0.c3)))) FULL OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE WHERE ((((rt0.c2)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((((t0.c3)=(NULL))))<((((rt0.c1)IS('rTT}MP8'))))) RIGHT OUTER JOIN t0 ON ((rt0.c1)OR(((((t0.c33)AND(vt1.c0)))AND(t0.c3)))) FULL OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (((((t0.c3)==(NULL))))<((((rt0.c1)IS('rTT}MP8'))))) RIGHT OUTER JOIN t0 ON ((rt0.c1)OR(((((t0.c33)AND(vt1.c0)))AND(t0.c3)))) FULL OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE WHERE ((((rt0.c2)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((((t0.c3)=(NULL))))<((((rt0.c1)IS('rTT}MP8'))))) RIGHT OUTER JOIN t0 ON ((rt0.c1)OR(((((t0.c33)AND(vt1.c0)))AND(t0.c3)))) FULL OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT * FROM t0, vt1 WHERE ((((t0.c33))>=((t0.c3))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c33))>=((t0.c3))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((((t0.c33))>=((t0.c3))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c33))>=((t0.c3))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((((t0.c33))>=((t0.c3))) COLLATE BINARY);
SELECT * FROM vt0, t0, rt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT))AND(((((rt0.c1)OR(rt0.c2)))AND(t0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))AND(((((rt0.c1)OR(rt0.c2)))AND(t0.c3))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT * FROM vt0, t0, rt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT))AND(((((rt0.c1)OR(rt0.c2)))AND(t0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))AND(((((rt0.c1)OR(rt0.c2)))AND(t0.c3))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT * FROM vt0, t0, rt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT))AND(((((rt0.c1)OR(rt0.c2)))AND(t0.c3)))));
SELECT * FROM vt0 WHERE ((vt0.c1 COLLATE RTRIM IN ())) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, x'', vt0.c1))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, x'', vt0.c1))) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 WHERE ((vt0.c1 COLLATE RTRIM IN ())) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, x'', vt0.c1))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, x'', vt0.c1))) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 WHERE ((vt0.c1 COLLATE RTRIM IN ())) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, x'', vt0.c1))) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ('H(FM' COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('H(FM' COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('H(FM' COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('H(FM' COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('H(FM' COLLATE BINARY COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c1 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN '' THEN (('')<<(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN '' THEN (('')<<(vt0.c1)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c1);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c1 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN '' THEN (('')<<(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN '' THEN (('')<<(vt0.c1)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c1);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c1 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN '' THEN (('')<<(vt0.c1)) END);
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON ((((rt0.c0)=(rt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (rt0.c0 COLLATE NOCASE)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON ((((rt0.c0)=(rt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON ((((rt0.c0)=(rt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (rt0.c0 COLLATE NOCASE)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON ((((rt0.c0)=(rt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON ((((rt0.c0)=(rt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (rt0.c0 COLLATE NOCASE)) WHERE (rt0.c0);
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((rt0.c2 IN ()))OR((~ ('-9223372036854775808')))) FULL OUTER JOIN vt1 ON vt1.c0 WHERE (((CASE WHEN NULL THEN vt1.c0 ELSE rt0.c1 END) BETWEEN (vt1.c0) AND (IFNULL(DISTINCT rt0.c0, '806276459')))) ORDER BY ((((vt1.c0) BETWEEN (t0.c33) AND (rt0.c1))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN vt1.c0 ELSE rt0.c1 END) BETWEEN (vt1.c0) AND (IFNULL(DISTINCT rt0.c0, '806276459')))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((rt0.c2 IN ()))OR((~ ('-9223372036854775808')))) FULL OUTER JOIN vt1 ON vt1.c0 ORDER BY ((((vt1.c0) BETWEEN (t0.c33) AND (rt0.c1))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((rt0.c2 IN ()))OR((~ ('-9223372036854775808')))) FULL OUTER JOIN vt1 ON vt1.c0 WHERE (((CASE WHEN NULL THEN vt1.c0 ELSE rt0.c1 END) BETWEEN (vt1.c0) AND (IFNULL(DISTINCT rt0.c0, '806276459')))) ORDER BY ((((vt1.c0) BETWEEN (t0.c33) AND (rt0.c1))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN vt1.c0 ELSE rt0.c1 END) BETWEEN (vt1.c0) AND (IFNULL(DISTINCT rt0.c0, '806276459')))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((rt0.c2 IN ()))OR((~ ('-9223372036854775808')))) FULL OUTER JOIN vt1 ON vt1.c0 ORDER BY ((((vt1.c0) BETWEEN (t0.c33) AND (rt0.c1))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((rt0.c2 IN ()))OR((~ ('-9223372036854775808')))) FULL OUTER JOIN vt1 ON vt1.c0 WHERE (((CASE WHEN NULL THEN vt1.c0 ELSE rt0.c1 END) BETWEEN (vt1.c0) AND (IFNULL(DISTINCT rt0.c0, '806276459')))) ORDER BY ((((vt1.c0) BETWEEN (t0.c33) AND (rt0.c1))) IS TRUE) DESC  NULLS FIRST;
SELECT * FROM t0 NOT INDEXED WHERE (CAST((NOT (t0.c33)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c33)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 NOT INDEXED WHERE (CAST((NOT (t0.c33)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c33)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 NOT INDEXED WHERE (CAST((NOT (t0.c33)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 WHERE (('' IN ()));
SELECT SUM(count) FROM (SELECT ((('' IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (('' IN ()));
SELECT SUM(count) FROM (SELECT ((('' IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (('' IN ()));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (0.43642862192719645);
SELECT SUM(count) FROM (SELECT ALL ((0.43642862192719645) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (0.43642862192719645);
SELECT SUM(count) FROM (SELECT ALL ((0.43642862192719645) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (0.43642862192719645);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))OR(-1251326290 COLLATE BINARY)))AND(((rt0.c2)>>(0x9604052))))) ORDER BY ((((rt0.c1)AND(0.535564122979799)))>(CAST(vt0.c1 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))OR(-1251326290 COLLATE BINARY)))AND(((rt0.c2)>>(0X9604052))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1)AND(0.535564122979799)))>(CAST(vt0.c1 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))OR(-1251326290 COLLATE BINARY)))AND(((rt0.c2)>>(0x9604052))))) ORDER BY ((((rt0.c1)AND(0.535564122979799)))>(CAST(vt0.c1 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))OR(-1251326290 COLLATE BINARY)))AND(((rt0.c2)>>(0X9604052))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1)AND(0.535564122979799)))>(CAST(vt0.c1 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))OR(-1251326290 COLLATE BINARY)))AND(((rt0.c2)>>(0x9604052))))) ORDER BY ((((rt0.c1)AND(0.535564122979799)))>(CAST(vt0.c1 AS NUMERIC))) ASC;
SELECT ALL * FROM vt0, vt1 WHERE ((- (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((- (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((- (vt1.c0)));
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CASE (vt1.c0 IN (vt1.c0))  WHEN ((x'a688')/(vt0.c0)) THEN vt0.c1 COLLATE NOCASE END) ORDER BY TRIM((((vt0.c1, rt0.c1, vt0.c0))!=((vt0.c1, vt0.c1, vt0.c1))))  NULLS FIRST, (CAST(vt1.c0 AS TEXT) IN ((((vt0.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c0, vt0.c0)) AND ((x'2b79', rt0.c0, 0.6566378816794174))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (vt1.c0 IN (vt1.c0))  WHEN ((x'a688')/(vt0.c0)) THEN vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY TRIM((((vt0.c1, rt0.c1, vt0.c0))!=((vt0.c1, vt0.c1, vt0.c1))))  NULLS FIRST, (CAST(vt1.c0 AS TEXT) IN ((((vt0.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c0, vt0.c0)) AND ((x'2b79', rt0.c0, 0.6566378816794174))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CASE (vt1.c0 IN (vt1.c0))  WHEN ((x'a688')/(vt0.c0)) THEN vt0.c1 COLLATE NOCASE END) ORDER BY TRIM((((vt0.c1, rt0.c1, vt0.c0))!=((vt0.c1, vt0.c1, vt0.c1))))  NULLS FIRST, (CAST(vt1.c0 AS TEXT) IN ((((vt0.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c0, vt0.c0)) AND ((x'2b79', rt0.c0, 0.6566378816794174))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (vt1.c0 IN (vt1.c0))  WHEN ((x'a688')/(vt0.c0)) THEN vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY TRIM((((vt0.c1, rt0.c1, vt0.c0))!=((vt0.c1, vt0.c1, vt0.c1))))  NULLS FIRST, (CAST(vt1.c0 AS TEXT) IN ((((vt0.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c0, vt0.c0)) AND ((x'2b79', rt0.c0, 0.6566378816794174))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CASE (vt1.c0 IN (vt1.c0))  WHEN ((x'a688')/(vt0.c0)) THEN vt0.c1 COLLATE NOCASE END) ORDER BY TRIM((((vt0.c1, rt0.c1, vt0.c0))!=((vt0.c1, vt0.c1, vt0.c1))))  NULLS FIRST, (CAST(vt1.c0 AS TEXT) IN ((((vt0.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c0, vt0.c0)) AND ((x'2b79', rt0.c0, 0.6566378816794174))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) BETWEEN (rt0.c2) AND ('mzT*#p!v'))) BETWEEN (0.999578509037374) AND (((((rt0.c0)OR(t0.c33)))AND(vt1.c0)))) FULL OUTER JOIN t0 ON (((((NOT (rt0.c1)))OR(((rt0.c0)>>(vt1.c0)))))OR(((t0.c3)/(rt0.c1)))) WHERE ((((((t0.c33) NOT BETWEEN (t0.c33) AND (rt0.c1)), NULL, ((t0.c3) BETWEEN (t0.c33) AND (t0.c3))))>(((+ (t0.c33)), CAST(t0.c33 AS INTEGER), vt1.c0)))) ORDER BY ((TRIM(DISTINCT t0.c3))*((NOT (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c33) NOT BETWEEN (t0.c33) AND (rt0.c1)), NULL, ((t0.c3) BETWEEN (t0.c33) AND (t0.c3))))>(((+ (t0.c33)), CAST(t0.c33 AS INTEGER), vt1.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) BETWEEN (rt0.c2) AND ('mzT*#p!v'))) BETWEEN (0.999578509037374) AND (((((rt0.c0)OR(t0.c33)))AND(vt1.c0)))) FULL OUTER JOIN t0 ON (((((NOT (rt0.c1)))OR(((rt0.c0)>>(vt1.c0)))))OR(((t0.c3)/(rt0.c1)))) ORDER BY ((TRIM(DISTINCT t0.c3))*((NOT (rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) BETWEEN (rt0.c2) AND ('mzT*#p!v'))) BETWEEN (0.999578509037374) AND (((((rt0.c0)OR(t0.c33)))AND(vt1.c0)))) FULL OUTER JOIN t0 ON (((((NOT (rt0.c1)))OR(((rt0.c0)>>(vt1.c0)))))OR(((t0.c3)/(rt0.c1)))) WHERE ((((((t0.c33) NOT BETWEEN (t0.c33) AND (rt0.c1)), NULL, ((t0.c3) BETWEEN (t0.c33) AND (t0.c3))))>(((+ (t0.c33)), CAST(t0.c33 AS INTEGER), vt1.c0)))) ORDER BY ((TRIM(DISTINCT t0.c3))*((NOT (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c33) NOT BETWEEN (t0.c33) AND (rt0.c1)), NULL, ((t0.c3) BETWEEN (t0.c33) AND (t0.c3))))>(((+ (t0.c33)), CAST(t0.c33 AS INTEGER), vt1.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) BETWEEN (rt0.c2) AND ('mzT*#p!v'))) BETWEEN (0.999578509037374) AND (((((rt0.c0)OR(t0.c33)))AND(vt1.c0)))) FULL OUTER JOIN t0 ON (((((NOT (rt0.c1)))OR(((rt0.c0)>>(vt1.c0)))))OR(((t0.c3)/(rt0.c1)))) ORDER BY ((TRIM(DISTINCT t0.c3))*((NOT (rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (LTRIM(((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c1 AS TEXT))) ORDER BY (((((('-1979143821')) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1)))))>((((((vt0.c1)AND('<hꞿ')))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LTRIM(((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c1 AS TEXT))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((('-1979143821')) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1)))))>((((((vt0.c1)AND('<hꞿ')))AND(rt0.c0))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (LTRIM(((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c1 AS TEXT))) ORDER BY (((((('-1979143821')) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1)))))>((((((vt0.c1)AND('<hꞿ')))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LTRIM(((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c1 AS TEXT))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((('-1979143821')) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1)))))>((((((vt0.c1)AND('<hꞿ')))AND(rt0.c0))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (LTRIM(((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c1 AS TEXT))) ORDER BY (((((('-1979143821')) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1)))))>((((((vt0.c1)AND('<hꞿ')))AND(rt0.c0)))));
SELECT ALL * FROM t0, vt1, rt0 WHERE ((((0.48173766098039217)||(t0.c33)) IN (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((0.48173766098039217)||(t0.c33)) IN (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE ((((0.48173766098039217)||(t0.c33)) IN (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((0.48173766098039217)||(t0.c33)) IN (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE ((((0.48173766098039217)||(t0.c33)) IN (rt0.c2 COLLATE NOCASE)));
SELECT ALL * FROM vt1, t0 WHERE (NULL) ORDER BY t0.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0 ORDER BY t0.c3 ASC);
SELECT ALL * FROM vt1, t0 WHERE (NULL) ORDER BY t0.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0 ORDER BY t0.c3 ASC);
SELECT ALL * FROM vt1, t0 WHERE (NULL) ORDER BY t0.c3 ASC;
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY CHANGES() DESC);
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY CHANGES() DESC);
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY CHANGES() DESC;
SELECT ALL * FROM t0, rt0, vt1, vt0 WHERE (((((vt1.c0) BETWEEN (t0.c3) AND (vt0.c0))) IS FALSE)) ORDER BY (((rt0.c2 IN ()))<<(((((((((vt0.c1)AND(t0.c33)))AND(t0.c3)))AND(t0.c33)))AND(rt0.c1)))), ((((NULL)OR((((vt0.c1)) BETWEEN ((0.8696481984258853)) AND ((t0.c3))))))AND(rt0.c2 COLLATE RTRIM)), ((((t0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))||(0.939607811812823)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (t0.c3) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY (((rt0.c2 IN ()))<<(((((((((vt0.c1)AND(t0.c33)))AND(t0.c3)))AND(t0.c33)))AND(rt0.c1)))), ((((NULL)OR((((vt0.c1)) BETWEEN ((0.8696481984258853)) AND ((t0.c3))))))AND(rt0.c2 COLLATE RTRIM)), ((((t0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))||(0.939607811812823)) ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt1, vt0 WHERE (((((vt1.c0) BETWEEN (t0.c3) AND (vt0.c0))) IS FALSE)) ORDER BY (((rt0.c2 IN ()))<<(((((((((vt0.c1)AND(t0.c33)))AND(t0.c3)))AND(t0.c33)))AND(rt0.c1)))), ((((NULL)OR((((vt0.c1)) BETWEEN ((0.8696481984258853)) AND ((t0.c3))))))AND(rt0.c2 COLLATE RTRIM)), ((((t0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))||(0.939607811812823)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (t0.c3) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY (((rt0.c2 IN ()))<<(((((((((vt0.c1)AND(t0.c33)))AND(t0.c3)))AND(t0.c33)))AND(rt0.c1)))), ((((NULL)OR((((vt0.c1)) BETWEEN ((0.8696481984258853)) AND ((t0.c3))))))AND(rt0.c2 COLLATE RTRIM)), ((((t0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))||(0.939607811812823)) ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt1, vt0 WHERE (((((vt1.c0) BETWEEN (t0.c3) AND (vt0.c0))) IS FALSE)) ORDER BY (((rt0.c2 IN ()))<<(((((((((vt0.c1)AND(t0.c33)))AND(t0.c3)))AND(t0.c33)))AND(rt0.c1)))), ((((NULL)OR((((vt0.c1)) BETWEEN ((0.8696481984258853)) AND ((t0.c3))))))AND(rt0.c2 COLLATE RTRIM)), ((((t0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))||(0.939607811812823)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE json_array_length(vt0.c0, vt0.c1)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN -248397452 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN (+ (vt0.c0)) THEN CAST(vt0.c1 AS REAL) WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0)GLOB(vt0.c0)) END) ORDER BY ((CAST(vt0.c0 AS REAL))/(((('-1767537576', vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE json_array_length(vt0.c0, vt0.c1)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN -248397452 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN (+ (vt0.c0)) THEN CAST(vt0.c1 AS REAL) WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0)GLOB(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))/(((('-1767537576', vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE json_array_length(vt0.c0, vt0.c1)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN -248397452 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN (+ (vt0.c0)) THEN CAST(vt0.c1 AS REAL) WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0)GLOB(vt0.c0)) END) ORDER BY ((CAST(vt0.c0 AS REAL))/(((('-1767537576', vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE json_array_length(vt0.c0, vt0.c1)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN -248397452 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN (+ (vt0.c0)) THEN CAST(vt0.c1 AS REAL) WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0)GLOB(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))/(((('-1767537576', vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE json_array_length(vt0.c0, vt0.c1)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN -248397452 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN (+ (vt0.c0)) THEN CAST(vt0.c1 AS REAL) WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0)GLOB(vt0.c0)) END) ORDER BY ((CAST(vt0.c0 AS REAL))/(((('-1767537576', vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))))) ASC;
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (ABS(DISTINCT (vt0.c1 IN ()))) ORDER BY (((t0.c33, (t0.c33 IN ()), (NOT (rt0.c1))))<>((rtreenode(vt0.c1, rt0.c1), ((rt0.c0)*(rt0.c1)), ((0.8776613118895661)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (vt0.c1 IN ()))) IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY (((t0.c33, (t0.c33 IN ()), (NOT (rt0.c1))))!=((rtreenode(vt0.c1, rt0.c1), ((rt0.c0)*(rt0.c1)), ((0.8776613118895661)>=(vt1.c0))))));
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (ABS(DISTINCT (vt0.c1 IN ()))) ORDER BY (((t0.c33, (t0.c33 IN ()), (NOT (rt0.c1))))<>((rtreenode(vt0.c1, rt0.c1), ((rt0.c0)*(rt0.c1)), ((0.8776613118895661)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (vt0.c1 IN ()))) IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY (((t0.c33, (t0.c33 IN ()), (NOT (rt0.c1))))!=((rtreenode(vt0.c1, rt0.c1), ((rt0.c0)*(rt0.c1)), ((0.8776613118895661)>=(vt1.c0))))));
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (ABS(DISTINCT (vt0.c1 IN ()))) ORDER BY (((t0.c33, (t0.c33 IN ()), (NOT (rt0.c1))))<>((rtreenode(vt0.c1, rt0.c1), ((rt0.c0)*(rt0.c1)), ((0.8776613118895661)>=(vt1.c0)))));
SELECT * FROM t0 INNER JOIN vt1 ON CASE WHEN (vt1.c0 IN (t0.c3)) THEN NULL WHEN (((t0.c33)) BETWEEN ((t0.c3)) AND ((t0.c3))) THEN CASE WHEN t0.c33 THEN t0.c3 ELSE vt1.c0 END WHEN (((t0.c33))<=((t0.c33))) THEN CAST(vt1.c0 AS NUMERIC) END WHERE (((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) ORDER BY ((((((((vt1.c0 COLLATE NOCASE)AND((((t0.c33, t0.c33, t0.c33))<=((t0.c3, t0.c3, vt1.c0))))))OR((t0.c3 IN ()))))OR(CAST(t0.c33 AS REAL))))AND(((vt1.c0)=(vt1.c0))))  NULLS LAST, (((t0.c3, t0.c3, t0.c3, t0.c3, t0.c3)) BETWEEN ((((t0.c33)-(t0.c33)), (t0.c3 IN ()), (x'' IN (vt1.c0)), ((vt1.c0)AND(t0.c3)), TRIM(DISTINCT vt1.c0))) AND ((LIKELY(DISTINCT t0.c33), ((((vt1.c0)OR(x'')))AND(vt1.c0)), ((t0.c3)>(t0.c3)), ((((vt1.c0)AND(t0.c3)))AND('')), ((0.793917367825256) ISNULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON CASE WHEN (vt1.c0 IN (t0.c3)) THEN NULL WHEN (((t0.c33)) BETWEEN ((t0.c3)) AND ((t0.c3))) THEN CASE WHEN t0.c33 THEN t0.c3 ELSE vt1.c0 END WHEN (((t0.c33))<=((t0.c33))) THEN CAST(vt1.c0 AS NUMERIC) END ORDER BY ((((((((vt1.c0 COLLATE NOCASE)AND((((t0.c33, t0.c33, t0.c33))<=((t0.c3, t0.c3, vt1.c0))))))OR((t0.c3 IN ()))))OR(CAST(t0.c33 AS REAL))))AND(((vt1.c0)=(vt1.c0))))  NULLS LAST, (((t0.c3, t0.c3, t0.c3, t0.c3, t0.c3)) BETWEEN ((((t0.c33)-(t0.c33)), (t0.c3 IN ()), (x'' IN (vt1.c0)), ((vt1.c0)AND(t0.c3)), TRIM(DISTINCT vt1.c0))) AND ((LIKELY(DISTINCT t0.c33), ((((vt1.c0)OR(x'')))AND(vt1.c0)), ((t0.c3)>(t0.c3)), ((((vt1.c0)AND(t0.c3)))AND('')), ((0.793917367825256) ISNULL)))) DESC);
SELECT * FROM t0 INNER JOIN vt1 ON CASE WHEN (vt1.c0 IN (t0.c3)) THEN NULL WHEN (((t0.c33)) BETWEEN ((t0.c3)) AND ((t0.c3))) THEN CASE WHEN t0.c33 THEN t0.c3 ELSE vt1.c0 END WHEN (((t0.c33))<=((t0.c33))) THEN CAST(vt1.c0 AS NUMERIC) END WHERE (((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) ORDER BY ((((((((vt1.c0 COLLATE NOCASE)AND((((t0.c33, t0.c33, t0.c33))<=((t0.c3, t0.c3, vt1.c0))))))OR((t0.c3 IN ()))))OR(CAST(t0.c33 AS REAL))))AND(((vt1.c0)=(vt1.c0))))  NULLS LAST, (((t0.c3, t0.c3, t0.c3, t0.c3, t0.c3)) BETWEEN ((((t0.c33)-(t0.c33)), (t0.c3 IN ()), (x'' IN (vt1.c0)), ((vt1.c0)AND(t0.c3)), TRIM(DISTINCT vt1.c0))) AND ((LIKELY(DISTINCT t0.c33), ((((vt1.c0)OR(x'')))AND(vt1.c0)), ((t0.c3)>(t0.c3)), ((((vt1.c0)AND(t0.c3)))AND('')), ((0.793917367825256) ISNULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON CASE WHEN (vt1.c0 IN (t0.c3)) THEN NULL WHEN (((t0.c33)) BETWEEN ((t0.c3)) AND ((t0.c3))) THEN CASE WHEN t0.c33 THEN t0.c3 ELSE vt1.c0 END WHEN (((t0.c33))<=((t0.c33))) THEN CAST(vt1.c0 AS NUMERIC) END ORDER BY ((((((((vt1.c0 COLLATE NOCASE)AND((((t0.c33, t0.c33, t0.c33))<=((t0.c3, t0.c3, vt1.c0))))))OR((t0.c3 IN ()))))OR(CAST(t0.c33 AS REAL))))AND(((vt1.c0)=(vt1.c0))))  NULLS LAST, (((t0.c3, t0.c3, t0.c3, t0.c3, t0.c3)) BETWEEN ((((t0.c33)-(t0.c33)), (t0.c3 IN ()), (x'' IN (vt1.c0)), ((vt1.c0)AND(t0.c3)), TRIM(DISTINCT vt1.c0))) AND ((LIKELY(DISTINCT t0.c33), ((((vt1.c0)OR(x'')))AND(vt1.c0)), ((t0.c3)>(t0.c3)), ((((vt1.c0)AND(t0.c3)))AND('')), ((0.793917367825256) ISNULL)))) DESC);
SELECT * FROM t0 INNER JOIN vt1 ON CASE WHEN (vt1.c0 IN (t0.c3)) THEN NULL WHEN (((t0.c33)) BETWEEN ((t0.c3)) AND ((t0.c3))) THEN CASE WHEN t0.c33 THEN t0.c3 ELSE vt1.c0 END WHEN (((t0.c33))<=((t0.c33))) THEN CAST(vt1.c0 AS NUMERIC) END WHERE (((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) ORDER BY ((((((((vt1.c0 COLLATE NOCASE)AND((((t0.c33, t0.c33, t0.c33))<=((t0.c3, t0.c3, vt1.c0))))))OR((t0.c3 IN ()))))OR(CAST(t0.c33 AS REAL))))AND(((vt1.c0)=(vt1.c0))))  NULLS LAST, (((t0.c3, t0.c3, t0.c3, t0.c3, t0.c3)) BETWEEN ((((t0.c33)-(t0.c33)), (t0.c3 IN ()), (x'' IN (vt1.c0)), ((vt1.c0)AND(t0.c3)), TRIM(DISTINCT vt1.c0))) AND ((LIKELY(DISTINCT t0.c33), ((((vt1.c0)OR(x'')))AND(vt1.c0)), ((t0.c3)>(t0.c3)), ((((vt1.c0)AND(t0.c3)))AND('')), ((0.793917367825256) ISNULL)))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((~ (((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((~ (((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((~ (((rt0.c2) NOTNULL))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c33)) BETWEEN ((((((t0.c33)OR(t0.c33)))AND(t0.c33)))) AND (((t0.c3 IN (t0.c3)))))) ORDER BY CAST((~ (t0.c33)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c33)) BETWEEN ((((((t0.c33)OR(t0.c33)))AND(t0.c33)))) AND (((t0.c3 IN (t0.c3)))))) IS TRUE)  as count FROM t0 ORDER BY CAST((~ (t0.c33)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c33)) BETWEEN ((((((t0.c33)OR(t0.c33)))AND(t0.c33)))) AND (((t0.c3 IN (t0.c3)))))) ORDER BY CAST((~ (t0.c33)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c33)) BETWEEN ((((((t0.c33)OR(t0.c33)))AND(t0.c33)))) AND (((t0.c3 IN (t0.c3)))))) IS TRUE)  as count FROM t0 ORDER BY CAST((~ (t0.c33)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c33)) BETWEEN ((((((t0.c33)OR(t0.c33)))AND(t0.c33)))) AND (((t0.c3 IN (t0.c3)))))) ORDER BY CAST((~ (t0.c33)) AS BLOB) DESC  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (CAST((t0.c3 IN ()) AS NUMERIC)) ORDER BY ((((rt0.c0)AND(t0.c3)))>(((rt0.c0)LIKE(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c3 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0)AND(t0.c3)))>(((rt0.c0)LIKE(rt0.c1)))) ASC);
SELECT * FROM t0, rt0 WHERE (CAST((t0.c3 IN ()) AS NUMERIC)) ORDER BY ((((rt0.c0)AND(t0.c3)))>(((rt0.c0)LIKE(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c3 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0)AND(t0.c3)))>(((rt0.c0)LIKE(rt0.c1)))) ASC);
SELECT * FROM t0, rt0 WHERE (CAST((t0.c3 IN ()) AS NUMERIC)) ORDER BY ((((rt0.c0)AND(t0.c3)))>(((rt0.c0)LIKE(rt0.c1)))) ASC;
SELECT * FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((- (rt0.c0)))-(vt0.c0)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((- (rt0.c0)))-(vt0.c0)));
SELECT * FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((- (rt0.c0)))-(vt0.c0)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((- (rt0.c0)))-(vt0.c0)));
SELECT * FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((- (rt0.c0)))-(vt0.c0)) WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((+ (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((+ (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((+ (vt1.c0)) AS NUMERIC));
SELECT ALL * FROM vt0, vt1 WHERE (UPPER(CASE WHEN vt0.c0 THEN vt0.c1 END)) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((((vt0.c0)&(vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CASE WHEN vt0.c0 THEN vt0.c1 END)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((((vt0.c0)&(vt0.c1))))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (UPPER(CASE WHEN vt0.c0 THEN vt0.c1 END)) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((((vt0.c0)&(vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CASE WHEN vt0.c0 THEN vt0.c1 END)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((((vt0.c0)&(vt0.c1))))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (UPPER(CASE WHEN vt0.c0 THEN vt0.c1 END)) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((((vt0.c0)&(vt0.c1))))) DESC;
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0, vt1 WHERE (((-1.266951001E9)>=(((vt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((-1.266951001E9)>=(((vt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0, vt1 WHERE (((-1.266951001E9)>=(((vt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((-1.266951001E9)>=(((vt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0, vt1 WHERE (((-1.266951001E9)>=(((vt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST(((rt0.c0) NOTNULL) AS TEXT)) ORDER BY CAST(((vt0.c1)<<(vt0.c1)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOTNULL) AS TEXT)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CAST(((vt0.c1)<<(vt0.c1)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST(((rt0.c0) NOTNULL) AS TEXT)) ORDER BY CAST(((vt0.c1)<<(vt0.c1)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOTNULL) AS TEXT)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CAST(((vt0.c1)<<(vt0.c1)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST(((rt0.c0) NOTNULL) AS TEXT)) ORDER BY CAST(((vt0.c1)<<(vt0.c1)) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))+(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS REAL))+(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))+(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS REAL))+(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))+(vt0.c1)));
SELECT ALL * FROM vt1, t0 WHERE ('') ORDER BY ((((vt1.c0)<(t0.c33))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, t0 ORDER BY ((((vt1.c0)<(t0.c33))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE ('') ORDER BY ((((vt1.c0)<(t0.c33))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, t0 ORDER BY ((((vt1.c0)<(t0.c33))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE ('') ORDER BY ((((vt1.c0)<(t0.c33))) IS TRUE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (UPPER(((t0.c3)>(t0.c3)))) ORDER BY (((((t0.c3, t0.c3, t0.c33)) NOT BETWEEN ((vt0.c0, '', vt0.c0)) AND ((t0.c3, vt0.c0, vt0.c1)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((t0.c3)>(t0.c3)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c3, t0.c3, t0.c33)) NOT BETWEEN ((vt0.c0, '', vt0.c0)) AND ((t0.c3, vt0.c0, vt0.c1)))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (UPPER(((t0.c3)>(t0.c3)))) ORDER BY (((((t0.c3, t0.c3, t0.c33)) NOT BETWEEN ((vt0.c0, '', vt0.c0)) AND ((t0.c3, vt0.c0, vt0.c1)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((t0.c3)>(t0.c3)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c3, t0.c3, t0.c33)) NOT BETWEEN ((vt0.c0, '', vt0.c0)) AND ((t0.c3, vt0.c0, vt0.c1)))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (UPPER(((t0.c3)>(t0.c3)))) ORDER BY (((((t0.c3, t0.c3, t0.c33)) NOT BETWEEN ((vt0.c0, '', vt0.c0)) AND ((t0.c3, vt0.c0, vt0.c1)))) IS TRUE)  NULLS FIRST;
SELECT * FROM t0 WHERE (((((('')>=(t0.c3))))>((t0.c33)))) ORDER BY (+ (((t0.c3)&(t0.c33)))), CASE WHEN CAST(t0.c33 AS NUMERIC) THEN load_extension(t0.c3, t0.c33) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((('')>=(t0.c3))))>((t0.c33)))) IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c3)&(t0.c33)))), CASE WHEN CAST(t0.c33 AS NUMERIC) THEN load_extension(t0.c3, t0.c33) END DESC);
SELECT * FROM t0 WHERE (((((('')>=(t0.c3))))>((t0.c33)))) ORDER BY (+ (((t0.c3)&(t0.c33)))), CASE WHEN CAST(t0.c33 AS NUMERIC) THEN load_extension(t0.c3, t0.c33) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((('')>=(t0.c3))))>((t0.c33)))) IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c3)&(t0.c33)))), CASE WHEN CAST(t0.c33 AS NUMERIC) THEN load_extension(t0.c3, t0.c33) END DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c3) ORDER BY ((((t0.c3)AND(x'')))AND(t0.c33)) COLLATE NOCASE DESC  NULLS FIRST, (CASE t0.c33  WHEN t0.c3 THEN t0.c33 END IN (((t0.c33)IS(t0.c33)))) ASC, (((t0.c3 IN ()))*(((t0.c3)OR(t0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c3)AND(x'')))AND(t0.c33)) COLLATE NOCASE DESC  NULLS FIRST, (CASE t0.c33  WHEN t0.c3 THEN t0.c33 END IN (((t0.c33)IS(t0.c33)))) ASC, (((t0.c3 IN ()))*(((t0.c3)OR(t0.c3))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (t0.c3) ORDER BY ((((t0.c3)AND(x'')))AND(t0.c33)) COLLATE NOCASE DESC  NULLS FIRST, (CASE t0.c33  WHEN t0.c3 THEN t0.c33 END IN (((t0.c33)IS(t0.c33)))) ASC, (((t0.c3 IN ()))*(((t0.c3)OR(t0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c3)AND(x'')))AND(t0.c33)) COLLATE NOCASE DESC  NULLS FIRST, (CASE t0.c33  WHEN t0.c3 THEN t0.c33 END IN (((t0.c33)IS(t0.c33)))) ASC, (((t0.c3 IN ()))*(((t0.c3)OR(t0.c3))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (t0.c3) ORDER BY ((((t0.c3)AND(x'')))AND(t0.c33)) COLLATE NOCASE DESC  NULLS FIRST, (CASE t0.c33  WHEN t0.c3 THEN t0.c33 END IN (((t0.c33)IS(t0.c33)))) ASC, (((t0.c3 IN ()))*(((t0.c3)OR(t0.c3))))  NULLS FIRST;
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c2)IS NOT(rt0.c0)) AS NUMERIC) WHERE ('1551765041');
SELECT SUM(count) FROM (SELECT ALL (('1551765041') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c2)IS NOT(rt0.c0)) AS NUMERIC));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c2)IS NOT(rt0.c0)) AS NUMERIC) WHERE ('1551765041');
SELECT SUM(count) FROM (SELECT ALL (('1551765041') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c2)IS NOT(rt0.c0)) AS NUMERIC));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c2)IS NOT(rt0.c0)) AS NUMERIC) WHERE ('1551765041');
SELECT ALL COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c33 WHEN t0.c3 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c1 COLLATE NOCASE))) ORDER BY x'90da' DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c33 WHEN t0.c3 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0 ORDER BY x'90da' DESC);
SELECT ALL COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c33 WHEN t0.c3 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c1 COLLATE NOCASE))) ORDER BY x'90da' DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c33 WHEN t0.c3 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0 ORDER BY x'90da' DESC);
SELECT ALL COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c33 WHEN t0.c3 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c1 COLLATE NOCASE))) ORDER BY x'90da' DESC;
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((((0.289415585328634)||(vt1.c0))) BETWEEN (((t0.c33) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (TYPEOF(vt0.c1))) INNER JOIN rt0 ON CAST(((0.42945045301977114)<=(rt0.c1)) AS TEXT) INNER JOIN vt1 ON ((CAST(t0.c33 AS REAL)) ISNULL) WHERE (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((rt0.c0)IS(rt0.c0))) AND (((((rt0.c1)AND(rt0.c2)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((rt0.c0)IS(rt0.c0))) AND (((((rt0.c1)AND(rt0.c2)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((0.289415585328634)||(vt1.c0))) BETWEEN (((t0.c33) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (TYPEOF(vt0.c1))) INNER JOIN rt0 ON CAST(((0.42945045301977114)<=(rt0.c1)) AS TEXT) INNER JOIN vt1 ON ((CAST(t0.c33 AS REAL)) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((((0.289415585328634)||(vt1.c0))) BETWEEN (((t0.c33) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (TYPEOF(vt0.c1))) INNER JOIN rt0 ON CAST(((0.42945045301977114)<=(rt0.c1)) AS TEXT) INNER JOIN vt1 ON ((CAST(t0.c33 AS REAL)) ISNULL) WHERE (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((rt0.c0)IS(rt0.c0))) AND (((((rt0.c1)AND(rt0.c2)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((rt0.c0)IS(rt0.c0))) AND (((((rt0.c1)AND(rt0.c2)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((0.289415585328634)||(vt1.c0))) BETWEEN (((t0.c33) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (TYPEOF(vt0.c1))) INNER JOIN rt0 ON CAST(((0.42945045301977114)<=(rt0.c1)) AS TEXT) INNER JOIN vt1 ON ((CAST(t0.c33 AS REAL)) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((((0.289415585328634)||(vt1.c0))) BETWEEN (((t0.c33) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (TYPEOF(vt0.c1))) INNER JOIN rt0 ON CAST(((0.42945045301977114)<=(rt0.c1)) AS TEXT) INNER JOIN vt1 ON ((CAST(t0.c33 AS REAL)) ISNULL) WHERE (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((rt0.c0)IS(rt0.c0))) AND (((((rt0.c1)AND(rt0.c2)))OR(vt0.c1)))));
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((CASE 't⍉[Kk'  WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN x'eb03' THEN rt0.c0 ELSE vt1.c0 END) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt1.c0) IS TRUE)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE 't⍉[Kk'  WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN x'eb03' THEN rt0.c0 ELSE vt1.c0 END) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((CASE 't⍉[Kk'  WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN x'eb03' THEN rt0.c0 ELSE vt1.c0 END) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt1.c0) IS TRUE)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE 't⍉[Kk'  WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN x'eb03' THEN rt0.c0 ELSE vt1.c0 END) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((CASE 't⍉[Kk'  WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN x'eb03' THEN rt0.c0 ELSE vt1.c0 END) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt1.c0) IS TRUE)))) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c3))>((x'fe6c')))) IS TRUE)) ORDER BY (((((t0.c3, t0.c33, t0.c33))<(('1357170199', t0.c3, t0.c3)))) NOT BETWEEN ((((t0.c33, t0.c3, t0.c3)) BETWEEN ((t0.c33, t0.c3, t0.c33)) AND ((t0.c3, '10z]Q0', t0.c3)))) AND (t0.c3 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c3))>((x'fe6c')))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c3, t0.c33, t0.c33))<(('1357170199', t0.c3, t0.c3)))) NOT BETWEEN ((((t0.c33, t0.c3, t0.c3)) BETWEEN ((t0.c33, t0.c3, t0.c33)) AND ((t0.c3, '10z]Q0', t0.c3)))) AND (t0.c3 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c3))>((x'fe6c')))) IS TRUE)) ORDER BY (((((t0.c3, t0.c33, t0.c33))<(('1357170199', t0.c3, t0.c3)))) NOT BETWEEN ((((t0.c33, t0.c3, t0.c3)) BETWEEN ((t0.c33, t0.c3, t0.c33)) AND ((t0.c3, '10z]Q0', t0.c3)))) AND (t0.c3 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c3))>((x'fe6c')))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c3, t0.c33, t0.c33))<(('1357170199', t0.c3, t0.c3)))) NOT BETWEEN ((((t0.c33, t0.c3, t0.c3)) BETWEEN ((t0.c33, t0.c3, t0.c33)) AND ((t0.c3, '10z]Q0', t0.c3)))) AND (t0.c3 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c3))>((x'fe6c')))) IS TRUE)) ORDER BY (((((t0.c3, t0.c33, t0.c33))<(('1357170199', t0.c3, t0.c3)))) NOT BETWEEN ((((t0.c33, t0.c3, t0.c3)) BETWEEN ((t0.c33, t0.c3, t0.c33)) AND ((t0.c3, '10z]Q0', t0.c3)))) AND (t0.c3 COLLATE NOCASE))  NULLS LAST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((t0.c3)*(rt0.c2))) AND (((t0.c33)AND(t0.c33)))) INNER JOIN t0 ON ((CASE x''  WHEN t0.c3 THEN t0.c33 WHEN vt1.c0 THEN '' WHEN t0.c3 THEN rt0.c0 END) NOT NULL) WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN CAST(rt0.c2 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN CAST(rt0.c2 AS REAL) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((t0.c3)*(rt0.c2))) AND (((t0.c33)AND(t0.c33)))) INNER JOIN t0 ON ((CASE x''  WHEN t0.c3 THEN t0.c33 WHEN vt1.c0 THEN '' WHEN t0.c3 THEN rt0.c0 END) NOT NULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((t0.c3)*(rt0.c2))) AND (((t0.c33)AND(t0.c33)))) INNER JOIN t0 ON ((CASE x''  WHEN t0.c3 THEN t0.c33 WHEN vt1.c0 THEN '' WHEN t0.c3 THEN rt0.c0 END) NOT NULL) WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN CAST(rt0.c2 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN CAST(rt0.c2 AS REAL) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((t0.c3)*(rt0.c2))) AND (((t0.c33)AND(t0.c33)))) INNER JOIN t0 ON ((CASE x''  WHEN t0.c3 THEN t0.c33 WHEN vt1.c0 THEN '' WHEN t0.c3 THEN rt0.c0 END) NOT NULL));
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (UNLIKELY((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c1, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c1, vt0.c1))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (UNLIKELY((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c1, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c1, vt0.c1))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (UNLIKELY((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c1, vt0.c1)))));
SELECT ALL * FROM vt1, rt0 WHERE ((((((((((((((((rt0.c2)OR(rt0.c2)))AND(vt1.c0)))OR(0xfffffffff09ace9f)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)), ((vt1.c0) IS FALSE), (((rt0.c0, rt0.c2, rt0.c1, rt0.c2, '1068882751'))==((vt1.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c0)))))<=((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, CAST('-135759210' AS TEXT), (((vt1.c0, x'74290511', rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, vt1.c0)) AND ((rt0.c0, rt0.c2, vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((rt0.c2)OR(rt0.c2)))AND(vt1.c0)))OR(0xfffffffff09ace9f)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)), ((vt1.c0) IS FALSE), (((rt0.c0, rt0.c2, rt0.c1, rt0.c2, '1068882751'))=((vt1.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c0)))))<=((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, CAST('-135759210' AS TEXT), (((vt1.c0, x'74290511', rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, vt1.c0)) AND ((rt0.c0, rt0.c2, vt1.c0))))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((((((((((((((rt0.c2)OR(rt0.c2)))AND(vt1.c0)))OR(0xfffffffff09ace9f)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)), ((vt1.c0) IS FALSE), (((rt0.c0, rt0.c2, rt0.c1, rt0.c2, '1068882751'))==((vt1.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c0)))))<=((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, CAST('-135759210' AS TEXT), (((vt1.c0, x'74290511', rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, vt1.c0)) AND ((rt0.c0, rt0.c2, vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((rt0.c2)OR(rt0.c2)))AND(vt1.c0)))OR(0xfffffffff09ace9f)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)), ((vt1.c0) IS FALSE), (((rt0.c0, rt0.c2, rt0.c1, rt0.c2, '1068882751'))=((vt1.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c0)))))<=((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, CAST('-135759210' AS TEXT), (((vt1.c0, x'74290511', rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, vt1.c0)) AND ((rt0.c0, rt0.c2, vt1.c0))))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((((((((((((((rt0.c2)OR(rt0.c2)))AND(vt1.c0)))OR(0xfffffffff09ace9f)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)), ((vt1.c0) IS FALSE), (((rt0.c0, rt0.c2, rt0.c1, rt0.c2, '1068882751'))==((vt1.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c0)))))<=((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, CAST('-135759210' AS TEXT), (((vt1.c0, x'74290511', rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, vt1.c0)) AND ((rt0.c0, rt0.c2, vt1.c0)))))));
SELECT ALL * FROM rt0 WHERE (((rt0.c0)<(((rt0.c0) IS FALSE)))) ORDER BY ((rt0.c2) IS TRUE), (((+ (rt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1)>>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) IS TRUE), (((+ (rt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1)>>(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((rt0.c0)<(((rt0.c0) IS FALSE)))) ORDER BY ((rt0.c2) IS TRUE), (((+ (rt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1)>>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) IS TRUE), (((+ (rt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1)>>(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((rt0.c0)<(((rt0.c0) IS FALSE)))) ORDER BY ((rt0.c2) IS TRUE), (((+ (rt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1)>>(rt0.c1))));
SELECT * FROM t0, rt0, vt0 WHERE (((((((vt0.c1)AND(rt0.c1)))OR(t0.c3)))+((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(rt0.c1)))OR(t0.c3)))+((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((((((vt0.c1)AND(rt0.c1)))OR(t0.c3)))+((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(rt0.c1)))OR(t0.c3)))+((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((((((vt0.c1)AND(rt0.c1)))OR(t0.c3)))+((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))))));
SELECT * FROM t0 WHERE (' ?w9*ir') ORDER BY ((((((t0.c3)AND(t0.c33)))OR(t0.c3))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((' ?w9*ir') IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c3)AND(t0.c33)))OR(t0.c3))) IS FALSE)  NULLS LAST);
SELECT * FROM t0 WHERE (' ?w9*ir') ORDER BY ((((((t0.c3)AND(t0.c33)))OR(t0.c3))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((' ?w9*ir') IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c3)AND(t0.c33)))OR(t0.c3))) IS FALSE)  NULLS LAST);
SELECT * FROM t0 WHERE (' ?w9*ir') ORDER BY ((((((t0.c3)AND(t0.c33)))OR(t0.c3))) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND('-1769064879')))AND(NULL)) THEN (vt0.c0 IN (vt0.c0)) WHEN (((vt0.c1, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c1))) THEN (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) WHEN LIKELY(vt0.c0) THEN CAST(vt0.c0 AS BLOB) ELSE CASE 0.6728820477451624  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)AND('-1769064879')))AND(NULL)) THEN (vt0.c0 IN (vt0.c0)) WHEN (((vt0.c1, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c1))) THEN (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) WHEN LIKELY(vt0.c0) THEN CAST(vt0.c0 AS BLOB) ELSE CASE 0.6728820477451624  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND('-1769064879')))AND(NULL)) THEN (vt0.c0 IN (vt0.c0)) WHEN (((vt0.c1, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c1))) THEN (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) WHEN LIKELY(vt0.c0) THEN CAST(vt0.c0 AS BLOB) ELSE CASE 0.6728820477451624  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)AND('-1769064879')))AND(NULL)) THEN (vt0.c0 IN (vt0.c0)) WHEN (((vt0.c1, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c1))) THEN (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) WHEN LIKELY(vt0.c0) THEN CAST(vt0.c0 AS BLOB) ELSE CASE 0.6728820477451624  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND('-1769064879')))AND(NULL)) THEN (vt0.c0 IN (vt0.c0)) WHEN (((vt0.c1, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c1))) THEN (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) WHEN LIKELY(vt0.c0) THEN CAST(vt0.c0 AS BLOB) ELSE CASE 0.6728820477451624  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ((((rt0.c0)%(rt0.c1)) IN (((vt0.c1)+(vt0.c1)), ((vt1.c0) NOT BETWEEN (t0.c33) AND (-1725144480))))) ORDER BY CAST(((t0.c33)==(vt0.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)%(rt0.c1)) IN (((vt0.c1)+(vt0.c1)), ((vt1.c0) NOT BETWEEN (t0.c33) AND (-1725144480))))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY CAST(((t0.c33)==(vt0.c1)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ((((rt0.c0)%(rt0.c1)) IN (((vt0.c1)+(vt0.c1)), ((vt1.c0) NOT BETWEEN (t0.c33) AND (-1725144480))))) ORDER BY CAST(((t0.c33)==(vt0.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)%(rt0.c1)) IN (((vt0.c1)+(vt0.c1)), ((vt1.c0) NOT BETWEEN (t0.c33) AND (-1725144480))))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY CAST(((t0.c33)==(vt0.c1)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ((((rt0.c0)%(rt0.c1)) IN (((vt0.c1)+(vt0.c1)), ((vt1.c0) NOT BETWEEN (t0.c33) AND (-1725144480))))) ORDER BY CAST(((t0.c33)==(vt0.c1)) AS REAL)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(((vt0.c1) NOT NULL))))OR(0.8150595946317789)))AND((vt0.c1 IN (vt0.c1, vt0.c1)))))AND(CASE WHEN vt0.c0 THEN '-1993363118' END))) ORDER BY ((((((((x'')OR((((vt0.c1))<=((vt0.c1))))))OR(NULL)))OR((vt0.c1 IN (vt0.c0)))))OR((NOT (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(((vt0.c1) NOT NULL))))OR(0.8150595946317789)))AND((vt0.c1 IN (vt0.c1, vt0.c1)))))AND(CASE WHEN vt0.c0 THEN '-1993363118' END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((x'')OR((((vt0.c1))<=((vt0.c1))))))OR(NULL)))OR((vt0.c1 IN (vt0.c0)))))OR((NOT (vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(((vt0.c1) NOT NULL))))OR(0.8150595946317789)))AND((vt0.c1 IN (vt0.c1, vt0.c1)))))AND(CASE WHEN vt0.c0 THEN '-1993363118' END))) ORDER BY ((((((((x'')OR((((vt0.c1))<=((vt0.c1))))))OR(NULL)))OR((vt0.c1 IN (vt0.c0)))))OR((NOT (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(((vt0.c1) NOT NULL))))OR(0.8150595946317789)))AND((vt0.c1 IN (vt0.c1, vt0.c1)))))AND(CASE WHEN vt0.c0 THEN '-1993363118' END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((x'')OR((((vt0.c1))<=((vt0.c1))))))OR(NULL)))OR((vt0.c1 IN (vt0.c0)))))OR((NOT (vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(((vt0.c1) NOT NULL))))OR(0.8150595946317789)))AND((vt0.c1 IN (vt0.c1, vt0.c1)))))AND(CASE WHEN vt0.c0 THEN '-1993363118' END))) ORDER BY ((((((((x'')OR((((vt0.c1))<=((vt0.c1))))))OR(NULL)))OR((vt0.c1 IN (vt0.c0)))))OR((NOT (vt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE ((((~ (rt0.c2)))/(CASE WHEN t0.c3 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))/(CASE WHEN t0.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt1, vt0, t0);
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE ((((~ (rt0.c2)))/(CASE WHEN t0.c3 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))/(CASE WHEN t0.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt1, vt0, t0);
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE ((((~ (rt0.c2)))/(CASE WHEN t0.c3 THEN rt0.c2 END)));
SELECT * FROM rt0, t0, vt0 WHERE (((((((((t0.c33)AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c2)<(rt0.c2)))))AND((NOT (rt0.c1))))) ORDER BY ((((rt0.c0) IS FALSE))IS NOT((- (NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c33)AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c2)<(rt0.c2)))))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((rt0.c0) IS FALSE))IS NOT((- (NULL)))));
SELECT * FROM rt0, t0, vt0 WHERE (((((((((t0.c33)AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c2)<(rt0.c2)))))AND((NOT (rt0.c1))))) ORDER BY ((((rt0.c0) IS FALSE))IS NOT((- (NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c33)AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c2)<(rt0.c2)))))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((rt0.c0) IS FALSE))IS NOT((- (NULL)))));
SELECT * FROM rt0, t0, vt0 WHERE (((((((((t0.c33)AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c2)<(rt0.c2)))))AND((NOT (rt0.c1))))) ORDER BY ((((rt0.c0) IS FALSE))IS NOT((- (NULL))));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c3 THEN t0.c3 END)<<(SUBSTR(t0.c3, t0.c3)))) ORDER BY CAST(CAST(t0.c33 AS REAL) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c3 THEN t0.c3 END)<<(SUBSTR(t0.c3, t0.c3)))) IS TRUE)  as count FROM t0 ORDER BY CAST(CAST(t0.c33 AS REAL) AS TEXT) DESC);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c3 THEN t0.c3 END)<<(SUBSTR(t0.c3, t0.c3)))) ORDER BY CAST(CAST(t0.c33 AS REAL) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c3 THEN t0.c3 END)<<(SUBSTR(t0.c3, t0.c3)))) IS TRUE)  as count FROM t0 ORDER BY CAST(CAST(t0.c33 AS REAL) AS TEXT) DESC);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c3 THEN t0.c3 END)<<(SUBSTR(t0.c3, t0.c3)))) ORDER BY CAST(CAST(t0.c33 AS REAL) AS TEXT) DESC;
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c1)) AS BLOB));
SELECT ALL * FROM t0 WHERE (((((((t0.c3)*(t0.c33)))OR((+ (t0.c33)))))OR(CASE t0.c33  WHEN t0.c33 THEN t0.c33 END))) ORDER BY ((t0.c33)*((((t0.c33)) NOT BETWEEN ((t0.c3)) AND ((t0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c3)*(t0.c33)))OR((+ (t0.c33)))))OR(CASE t0.c33  WHEN t0.c33 THEN t0.c33 END))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c33)*((((t0.c33)) NOT BETWEEN ((t0.c3)) AND ((t0.c3)))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((((t0.c3)*(t0.c33)))OR((+ (t0.c33)))))OR(CASE t0.c33  WHEN t0.c33 THEN t0.c33 END))) ORDER BY ((t0.c33)*((((t0.c33)) NOT BETWEEN ((t0.c3)) AND ((t0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c3)*(t0.c33)))OR((+ (t0.c33)))))OR(CASE t0.c33  WHEN t0.c33 THEN t0.c33 END))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c33)*((((t0.c33)) NOT BETWEEN ((t0.c3)) AND ((t0.c3)))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((((t0.c3)*(t0.c33)))OR((+ (t0.c33)))))OR(CASE t0.c33  WHEN t0.c33 THEN t0.c33 END))) ORDER BY ((t0.c33)*((((t0.c33)) NOT BETWEEN ((t0.c3)) AND ((t0.c3)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 INDEXED BY i91, rt0, vt0, t0 WHERE (((((((vt1.c0)*(rt0.c1)))OR(t0.c33)))OR(TIME(t0.c3, vt0.c1, rt0.c1)))) ORDER BY CASE rt0.c0  WHEN ((rt0.c1) IS TRUE) THEN CASE WHEN rt0.c2 THEN NULL END WHEN ((t0.c33)>(vt0.c0)) THEN ((rt0.c1)+(rt0.c0)) WHEN (NOT (t0.c3)) THEN SQLITE_SOURCE_ID() ELSE (+ (vt1.c0)) END ASC, t0.c33 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)*(rt0.c1)))OR(t0.c33)))OR(TIME(t0.c3, vt0.c1, rt0.c1)))) IS TRUE)  as count FROM vt1 INDEXED BY i91, rt0, vt0, t0 ORDER BY CASE rt0.c0  WHEN ((rt0.c1) IS TRUE) THEN CASE WHEN rt0.c2 THEN NULL END WHEN ((t0.c33)>(vt0.c0)) THEN ((rt0.c1)+(rt0.c0)) WHEN (NOT (t0.c3)) THEN SQLITE_SOURCE_ID() ELSE (+ (vt1.c0)) END ASC, t0.c33 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 INDEXED BY i91, rt0, vt0, t0 WHERE (((((((vt1.c0)*(rt0.c1)))OR(t0.c33)))OR(TIME(t0.c3, vt0.c1, rt0.c1)))) ORDER BY CASE rt0.c0  WHEN ((rt0.c1) IS TRUE) THEN CASE WHEN rt0.c2 THEN NULL END WHEN ((t0.c33)>(vt0.c0)) THEN ((rt0.c1)+(rt0.c0)) WHEN (NOT (t0.c3)) THEN SQLITE_SOURCE_ID() ELSE (+ (vt1.c0)) END ASC, t0.c33 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)*(rt0.c1)))OR(t0.c33)))OR(TIME(t0.c3, vt0.c1, rt0.c1)))) IS TRUE)  as count FROM vt1 INDEXED BY i91, rt0, vt0, t0 ORDER BY CASE rt0.c0  WHEN ((rt0.c1) IS TRUE) THEN CASE WHEN rt0.c2 THEN NULL END WHEN ((t0.c33)>(vt0.c0)) THEN ((rt0.c1)+(rt0.c0)) WHEN (NOT (t0.c3)) THEN SQLITE_SOURCE_ID() ELSE (+ (vt1.c0)) END ASC, t0.c33 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON CASE WHEN vt0.c1 THEN NULL WHEN ((t0.c3)|(vt0.c1)) THEN HEX(DISTINCT vt0.c1) WHEN CAST(t0.c3 AS TEXT) THEN ((t0.c3)!=(t0.c33)) WHEN 0xffffffff8d183654 THEN ((vt0.c0) NOT BETWEEN (t0.c33) AND (t0.c3)) WHEN CAST(-1.927793068E9 AS NUMERIC) THEN CAST(t0.c33 AS TEXT) END INNER JOIN vt0 ON ((((((vt0.c1) NOT BETWEEN (t0.c3) AND (vt1.c0)))AND(((t0.c3) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))OR(CAST(t0.c33 AS INTEGER))) WHERE (CAST((t0.c3 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c3 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON CASE WHEN vt0.c1 THEN NULL WHEN ((t0.c3)|(vt0.c1)) THEN HEX(DISTINCT vt0.c1) WHEN CAST(t0.c3 AS TEXT) THEN ((t0.c3)!=(t0.c33)) WHEN 0Xffffffff8d183654 THEN ((vt0.c0) NOT BETWEEN (t0.c33) AND (t0.c3)) WHEN CAST(-1.927793068E9 AS NUMERIC) THEN CAST(t0.c33 AS TEXT) END INNER JOIN vt0 ON ((((((vt0.c1) NOT BETWEEN (t0.c3) AND (vt1.c0)))AND(((t0.c3) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))OR(CAST(t0.c33 AS INTEGER))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON CASE WHEN vt0.c1 THEN NULL WHEN ((t0.c3)|(vt0.c1)) THEN HEX(DISTINCT vt0.c1) WHEN CAST(t0.c3 AS TEXT) THEN ((t0.c3)!=(t0.c33)) WHEN 0xffffffff8d183654 THEN ((vt0.c0) NOT BETWEEN (t0.c33) AND (t0.c3)) WHEN CAST(-1.927793068E9 AS NUMERIC) THEN CAST(t0.c33 AS TEXT) END INNER JOIN vt0 ON ((((((vt0.c1) NOT BETWEEN (t0.c3) AND (vt1.c0)))AND(((t0.c3) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))OR(CAST(t0.c33 AS INTEGER))) WHERE (CAST((t0.c3 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c3 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON CASE WHEN vt0.c1 THEN NULL WHEN ((t0.c3)|(vt0.c1)) THEN HEX(DISTINCT vt0.c1) WHEN CAST(t0.c3 AS TEXT) THEN ((t0.c3)!=(t0.c33)) WHEN 0Xffffffff8d183654 THEN ((vt0.c0) NOT BETWEEN (t0.c33) AND (t0.c3)) WHEN CAST(-1.927793068E9 AS NUMERIC) THEN CAST(t0.c33 AS TEXT) END INNER JOIN vt0 ON ((((((vt0.c1) NOT BETWEEN (t0.c3) AND (vt1.c0)))AND(((t0.c3) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))OR(CAST(t0.c33 AS INTEGER))));
SELECT ALL * FROM t0 NOT INDEXED, vt1, rt0, vt0 WHERE (x'') ORDER BY ((t0.c33 IN ()) IN ((t0.c33 IN ()))) ASC, json_quote(rt0.c2 COLLATE NOCASE)  NULLS LAST, ((MIN(vt1.c0, vt0.c0, vt0.c1, t0.c3))||(((rt0.c0)>=(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY ((t0.c33 IN ()) IN ((t0.c33 IN ()))) ASC, json_quote(rt0.c2 COLLATE NOCASE)  NULLS LAST, ((MIN(vt1.c0, vt0.c0, vt0.c1, t0.c3))||(((rt0.c0)>=(rt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 NOT INDEXED, vt1, rt0, vt0 WHERE (x'') ORDER BY ((t0.c33 IN ()) IN ((t0.c33 IN ()))) ASC, json_quote(rt0.c2 COLLATE NOCASE)  NULLS LAST, ((MIN(vt1.c0, vt0.c0, vt0.c1, t0.c3))||(((rt0.c0)>=(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY ((t0.c33 IN ()) IN ((t0.c33 IN ()))) ASC, json_quote(rt0.c2 COLLATE NOCASE)  NULLS LAST, ((MIN(vt1.c0, vt0.c0, vt0.c1, t0.c3))||(((rt0.c0)>=(rt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 NOT INDEXED, vt1, rt0, vt0 WHERE (x'') ORDER BY ((t0.c33 IN ()) IN ((t0.c33 IN ()))) ASC, json_quote(rt0.c2 COLLATE NOCASE)  NULLS LAST, ((MIN(vt1.c0, vt0.c0, vt0.c1, t0.c3))||(((rt0.c0)>=(rt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (CAST(CASE WHEN t0.c33 THEN t0.c3 ELSE rt0.c0 END AS TEXT)) ORDER BY (~ (((rt0.c1)&(t0.c3))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c33 THEN t0.c3 ELSE rt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY (~ (((rt0.c1)&(t0.c3)))));
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (CAST(CASE WHEN t0.c33 THEN t0.c3 ELSE rt0.c0 END AS TEXT)) ORDER BY (~ (((rt0.c1)&(t0.c3))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c33 THEN t0.c3 ELSE rt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY (~ (((rt0.c1)&(t0.c3)))));
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (CAST(CASE WHEN t0.c33 THEN t0.c3 ELSE rt0.c0 END AS TEXT)) ORDER BY (~ (((rt0.c1)&(t0.c3))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY ((((((rt0.c2) NOT NULL))AND((rt0.c0 IN ()))))OR(NULL)) DESC, '-1960129203' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((rt0.c2) NOT NULL))AND((rt0.c0 IN ()))))OR(NULL)) DESC, '-1960129203' COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY ((((((rt0.c2) NOT NULL))AND((rt0.c0 IN ()))))OR(NULL)) DESC, '-1960129203' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((rt0.c2) NOT NULL))AND((rt0.c0 IN ()))))OR(NULL)) DESC, '-1960129203' COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY ((((((rt0.c2) NOT NULL))AND((rt0.c0 IN ()))))OR(NULL)) DESC, '-1960129203' COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (rt0.c0) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM, CASE IFNULL(vt0.c0, t0.c33)  WHEN t0.c33 THEN rt0.c1 COLLATE BINARY ELSE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM, CASE IFNULL(vt0.c0, t0.c33)  WHEN t0.c33 THEN rt0.c1 COLLATE BINARY ELSE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END ASC);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (rt0.c0) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM, CASE IFNULL(vt0.c0, t0.c33)  WHEN t0.c33 THEN rt0.c1 COLLATE BINARY ELSE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM, CASE IFNULL(vt0.c0, t0.c33)  WHEN t0.c33 THEN rt0.c1 COLLATE BINARY ELSE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END ASC);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (rt0.c0) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM, CASE IFNULL(vt0.c0, t0.c33)  WHEN t0.c33 THEN rt0.c1 COLLATE BINARY ELSE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END ASC;
SELECT * FROM vt0, vt1 WHERE (((LIKELIHOOD(vt1.c0, 0.29714569788808687))&(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(vt1.c0, 0.29714569788808687))&(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((LIKELIHOOD(vt1.c0, 0.29714569788808687))&(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(vt1.c0, 0.29714569788808687))&(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((LIKELIHOOD(vt1.c0, 0.29714569788808687))&(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt1 ON ((((t0.c33)LIKE(vt0.c1)))IS(ABS(DISTINCT t0.c3))) INNER JOIN vt0 ON (x'878d' IN ()) WHERE (CASE WHEN 0.9047819258171789 THEN SQLITE_VERSION() WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((t0.c33)&(0.8668020609975129)) WHEN rt0.c2 THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.9047819258171789 THEN SQLITE_VERSION() WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((t0.c33)&(0.8668020609975129)) WHEN rt0.c2 THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt1 ON ((((t0.c33)LIKE(vt0.c1)))IS(ABS(DISTINCT t0.c3))) INNER JOIN vt0 ON (x'878d' IN ()));
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt1 ON ((((t0.c33)LIKE(vt0.c1)))IS(ABS(DISTINCT t0.c3))) INNER JOIN vt0 ON (x'878d' IN ()) WHERE (CASE WHEN 0.9047819258171789 THEN SQLITE_VERSION() WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((t0.c33)&(0.8668020609975129)) WHEN rt0.c2 THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.9047819258171789 THEN SQLITE_VERSION() WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((t0.c33)&(0.8668020609975129)) WHEN rt0.c2 THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt1 ON ((((t0.c33)LIKE(vt0.c1)))IS(ABS(DISTINCT t0.c3))) INNER JOIN vt0 ON (x'878d' IN ()));
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt1 ON ((((t0.c33)LIKE(vt0.c1)))IS(ABS(DISTINCT t0.c3))) INNER JOIN vt0 ON (x'878d' IN ()) WHERE (CASE WHEN 0.9047819258171789 THEN SQLITE_VERSION() WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((t0.c33)&(0.8668020609975129)) WHEN rt0.c2 THEN (vt0.c0 IN ()) END);
SELECT ALL * FROM t0, vt1 WHERE ((((CAST(vt1.c0 AS INTEGER), (~ (t0.c33)), ((t0.c3) BETWEEN (vt1.c0) AND (t0.c3))))>((((vt1.c0) ISNULL), ((vt1.c0) NOT BETWEEN (t0.c33) AND (t0.c33)), vt1.c0)))) ORDER BY CAST(((t0.c3)/(t0.c33)) AS TEXT)  NULLS FIRST, CAST('-959680970' AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(vt1.c0 AS INTEGER), (~ (t0.c33)), ((t0.c3) BETWEEN (vt1.c0) AND (t0.c3))))>((((vt1.c0) ISNULL), ((vt1.c0) NOT BETWEEN (t0.c33) AND (t0.c33)), vt1.c0)))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(((t0.c3)/(t0.c33)) AS TEXT)  NULLS FIRST, CAST('-959680970' AS INTEGER) ASC);
SELECT ALL * FROM t0, vt1 WHERE ((((CAST(vt1.c0 AS INTEGER), (~ (t0.c33)), ((t0.c3) BETWEEN (vt1.c0) AND (t0.c3))))>((((vt1.c0) ISNULL), ((vt1.c0) NOT BETWEEN (t0.c33) AND (t0.c33)), vt1.c0)))) ORDER BY CAST(((t0.c3)/(t0.c33)) AS TEXT)  NULLS FIRST, CAST('-959680970' AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(vt1.c0 AS INTEGER), (~ (t0.c33)), ((t0.c3) BETWEEN (vt1.c0) AND (t0.c3))))>((((vt1.c0) ISNULL), ((vt1.c0) NOT BETWEEN (t0.c33) AND (t0.c33)), vt1.c0)))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(((t0.c3)/(t0.c33)) AS TEXT)  NULLS FIRST, CAST('-959680970' AS INTEGER) ASC);
SELECT ALL * FROM t0, vt1 WHERE ((((CAST(vt1.c0 AS INTEGER), (~ (t0.c33)), ((t0.c3) BETWEEN (vt1.c0) AND (t0.c3))))>((((vt1.c0) ISNULL), ((vt1.c0) NOT BETWEEN (t0.c33) AND (t0.c33)), vt1.c0)))) ORDER BY CAST(((t0.c3)/(t0.c33)) AS TEXT)  NULLS FIRST, CAST('-959680970' AS INTEGER) ASC;
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE (x'7fbb');
SELECT SUM(count) FROM (SELECT ALL ((x'7fbb') IS TRUE)  as count FROM rt0, vt1, vt0, t0);
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE (x'7fbb');
SELECT SUM(count) FROM (SELECT ALL ((x'7fbb') IS TRUE)  as count FROM rt0, vt1, vt0, t0);
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE (x'7fbb');
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (CAST(vt1.c0 COLLATE BINARY AS REAL)) ORDER BY ((LIKELIHOOD(rt0.c1, 0.11308372218314067))IS NOT(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) ASC, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL) DESC, (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0 ORDER BY ((LIKELIHOOD(rt0.c1, 0.11308372218314067))IS NOT(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) ASC, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL) DESC, (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (CAST(vt1.c0 COLLATE BINARY AS REAL)) ORDER BY ((LIKELIHOOD(rt0.c1, 0.11308372218314067))IS NOT(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) ASC, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL) DESC, (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0 ORDER BY ((LIKELIHOOD(rt0.c1, 0.11308372218314067))IS NOT(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) ASC, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL) DESC, (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (CAST(vt1.c0 COLLATE BINARY AS REAL)) ORDER BY ((LIKELIHOOD(rt0.c1, 0.11308372218314067))IS NOT(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) ASC, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL) DESC, (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((t0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((t0.c3)))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((t0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((t0.c3)))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((t0.c3))));
SELECT COUNT(*) FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'3762' THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY ((vt1.c0) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'3762' THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) ISNULL) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'3762' THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY ((vt1.c0) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'3762' THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) ISNULL) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'3762' THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY ((vt1.c0) ISNULL) ASC;
SELECT * FROM t0, vt0 WHERE (((t0.c3 COLLATE BINARY)==(-1607925219)));
SELECT SUM(count) FROM (SELECT ((((t0.c3 COLLATE BINARY)==(-1607925219))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c3 COLLATE BINARY)==(-1607925219)));
SELECT SUM(count) FROM (SELECT ((((t0.c3 COLLATE BINARY)==(-1607925219))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c3 COLLATE BINARY)==(-1607925219)));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c3)/(t0.c33)))==(((t0.c3)GLOB(t0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c3)/(t0.c33)))==(((t0.c3)GLOB(t0.c3))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c3)/(t0.c33)))==(((t0.c3)GLOB(t0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c3)/(t0.c33)))==(((t0.c3)GLOB(t0.c3))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c3)/(t0.c33)))==(((t0.c3)GLOB(t0.c3)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c33) NOTNULL) INNER JOIN vt0 ON (- (t0.c3)) COLLATE NOCASE WHERE (CAST(LTRIM(t0.c33, 0.6240835071621355) AS BLOB)) ORDER BY ((((rt0.c0)&(rt0.c2)))==(((t0.c33) NOT BETWEEN (rt0.c2) AND (t0.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LTRIM(t0.c33, 0.6240835071621355) AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c33) NOTNULL) INNER JOIN vt0 ON (- (t0.c3)) COLLATE NOCASE ORDER BY ((((rt0.c0)&(rt0.c2)))=(((t0.c33) NOT BETWEEN (rt0.c2) AND (t0.c3)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c33) NOTNULL) INNER JOIN vt0 ON (- (t0.c3)) COLLATE NOCASE WHERE (CAST(LTRIM(t0.c33, 0.6240835071621355) AS BLOB)) ORDER BY ((((rt0.c0)&(rt0.c2)))==(((t0.c33) NOT BETWEEN (rt0.c2) AND (t0.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LTRIM(t0.c33, 0.6240835071621355) AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c33) NOTNULL) INNER JOIN vt0 ON (- (t0.c3)) COLLATE NOCASE ORDER BY ((((rt0.c0)&(rt0.c2)))=(((t0.c33) NOT BETWEEN (rt0.c2) AND (t0.c3)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c33) NOTNULL) INNER JOIN vt0 ON (- (t0.c3)) COLLATE NOCASE WHERE (CAST(LTRIM(t0.c33, 0.6240835071621355) AS BLOB)) ORDER BY ((((rt0.c0)&(rt0.c2)))==(((t0.c33) NOT BETWEEN (rt0.c2) AND (t0.c3)))) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0, t0 FULL OUTER JOIN vt1 ON (0.7811385485939243 IN ()) WHERE ((TYPEOF(DISTINCT vt0.c1) IN ())) ORDER BY UNLIKELY(DISTINCT CAST(vt0.c1 AS BLOB))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TYPEOF(DISTINCT vt0.c1) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 FULL OUTER JOIN vt1 ON (0.7811385485939243 IN ()) ORDER BY UNLIKELY(DISTINCT CAST(vt0.c1 AS BLOB))  NULLS LAST);
SELECT * FROM rt0, vt0, t0 FULL OUTER JOIN vt1 ON (0.7811385485939243 IN ()) WHERE ((TYPEOF(DISTINCT vt0.c1) IN ())) ORDER BY UNLIKELY(DISTINCT CAST(vt0.c1 AS BLOB))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TYPEOF(DISTINCT vt0.c1) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 FULL OUTER JOIN vt1 ON (0.7811385485939243 IN ()) ORDER BY UNLIKELY(DISTINCT CAST(vt0.c1 AS BLOB))  NULLS LAST);
SELECT * FROM rt0, vt0, t0 FULL OUTER JOIN vt1 ON (0.7811385485939243 IN ()) WHERE ((TYPEOF(DISTINCT vt0.c1) IN ())) ORDER BY UNLIKELY(DISTINCT CAST(vt0.c1 AS BLOB))  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (((((((-1452514228) NOT BETWEEN (vt0.c0) AND (vt1.c0)))OR((- (vt0.c0)))))AND(((vt1.c0)>>(rt0.c1))))) ORDER BY rt0.c0 ASC  NULLS LAST, CASE ((vt0.c0) IS TRUE)  WHEN (rt0.c1 IN ()) THEN ((t0.c3)*(x'')) ELSE CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE t0.c33 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((-1452514228) NOT BETWEEN (vt0.c0) AND (vt1.c0)))OR((- (vt0.c0)))))AND(((vt1.c0)>>(rt0.c1))))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY rt0.c0 ASC  NULLS LAST, CASE ((vt0.c0) IS TRUE)  WHEN (rt0.c1 IN ()) THEN ((t0.c3)*(x'')) ELSE CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE t0.c33 END END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (((((((-1452514228) NOT BETWEEN (vt0.c0) AND (vt1.c0)))OR((- (vt0.c0)))))AND(((vt1.c0)>>(rt0.c1))))) ORDER BY rt0.c0 ASC  NULLS LAST, CASE ((vt0.c0) IS TRUE)  WHEN (rt0.c1 IN ()) THEN ((t0.c3)*(x'')) ELSE CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE t0.c33 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((-1452514228) NOT BETWEEN (vt0.c0) AND (vt1.c0)))OR((- (vt0.c0)))))AND(((vt1.c0)>>(rt0.c1))))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY rt0.c0 ASC  NULLS LAST, CASE ((vt0.c0) IS TRUE)  WHEN (rt0.c1 IN ()) THEN ((t0.c3)*(x'')) ELSE CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE t0.c33 END END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (((((((-1452514228) NOT BETWEEN (vt0.c0) AND (vt1.c0)))OR((- (vt0.c0)))))AND(((vt1.c0)>>(rt0.c1))))) ORDER BY rt0.c0 ASC  NULLS LAST, CASE ((vt0.c0) IS TRUE)  WHEN (rt0.c1 IN ()) THEN ((t0.c3)*(x'')) ELSE CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE t0.c33 END END ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (CASE UNLIKELY(DISTINCT t0.c3)  WHEN (- (t0.c3)) THEN (((t0.c33, 0.20802759476836885, t0.c3)) NOT BETWEEN ((t0.c3, vt1.c0, t0.c33)) AND ((vt0.c0, t0.c33, t0.c33))) ELSE CASE WHEN NULL THEN vt0.c0 WHEN t0.c3 THEN vt0.c1 WHEN vt0.c1 THEN t0.c3 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE UNLIKELY(DISTINCT t0.c3)  WHEN (- (t0.c3)) THEN (((t0.c33, 0.20802759476836885, t0.c3)) NOT BETWEEN ((t0.c3, vt1.c0, t0.c33)) AND ((vt0.c0, t0.c33, t0.c33))) ELSE CASE WHEN NULL THEN vt0.c0 WHEN t0.c3 THEN vt0.c1 WHEN vt0.c1 THEN t0.c3 END END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CASE UNLIKELY(DISTINCT t0.c3)  WHEN (- (t0.c3)) THEN (((t0.c33, 0.20802759476836885, t0.c3)) NOT BETWEEN ((t0.c3, vt1.c0, t0.c33)) AND ((vt0.c0, t0.c33, t0.c33))) ELSE CASE WHEN NULL THEN vt0.c0 WHEN t0.c3 THEN vt0.c1 WHEN vt0.c1 THEN t0.c3 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE UNLIKELY(DISTINCT t0.c3)  WHEN (- (t0.c3)) THEN (((t0.c33, 0.20802759476836885, t0.c3)) NOT BETWEEN ((t0.c3, vt1.c0, t0.c33)) AND ((vt0.c0, t0.c33, t0.c33))) ELSE CASE WHEN NULL THEN vt0.c0 WHEN t0.c3 THEN vt0.c1 WHEN vt0.c1 THEN t0.c3 END END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CASE UNLIKELY(DISTINCT t0.c3)  WHEN (- (t0.c3)) THEN (((t0.c33, 0.20802759476836885, t0.c3)) NOT BETWEEN ((t0.c3, vt1.c0, t0.c33)) AND ((vt0.c0, t0.c33, t0.c33))) ELSE CASE WHEN NULL THEN vt0.c0 WHEN t0.c3 THEN vt0.c1 WHEN vt0.c1 THEN t0.c3 END END);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((((((json_type(vt0.c1))AND(CAST(t0.c3 AS INTEGER))))AND(((t0.c3) BETWEEN (t0.c3) AND (vt1.c0)))))OR((('')>(t0.c3)))))OR(CASE -1853105822  WHEN vt1.c0 THEN vt0.c1 ELSE t0.c33 END))) ORDER BY (CAST(vt1.c0 AS TEXT) IN ((+ (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((json_type(vt0.c1))AND(CAST(t0.c3 AS INTEGER))))AND(((t0.c3) BETWEEN (t0.c3) AND (vt1.c0)))))OR((('')>(t0.c3)))))OR(CASE -1853105822  WHEN vt1.c0 THEN vt0.c1 ELSE t0.c33 END))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (CAST(vt1.c0 AS TEXT) IN ((+ (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((((((json_type(vt0.c1))AND(CAST(t0.c3 AS INTEGER))))AND(((t0.c3) BETWEEN (t0.c3) AND (vt1.c0)))))OR((('')>(t0.c3)))))OR(CASE -1853105822  WHEN vt1.c0 THEN vt0.c1 ELSE t0.c33 END))) ORDER BY (CAST(vt1.c0 AS TEXT) IN ((+ (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((json_type(vt0.c1))AND(CAST(t0.c3 AS INTEGER))))AND(((t0.c3) BETWEEN (t0.c3) AND (vt1.c0)))))OR((('')>(t0.c3)))))OR(CASE -1853105822  WHEN vt1.c0 THEN vt0.c1 ELSE t0.c33 END))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (CAST(vt1.c0 AS TEXT) IN ((+ (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (((((vt0.c1)<<(rt0.c1)))=(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<<(rt0.c1)))==(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (((((vt0.c1)<<(rt0.c1)))=(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<<(rt0.c1)))==(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (((((vt0.c1)<<(rt0.c1)))=(((rt0.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (rt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (0.4025090225661828) ORDER BY ((((((((0.9730899848069736)OR(rt0.c0)))AND(rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c2)GLOB(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((0.4025090225661828) IS TRUE)  as count FROM rt0 ORDER BY ((((((((0.9730899848069736)OR(rt0.c0)))AND(rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c2)GLOB(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (0.4025090225661828) ORDER BY ((((((((0.9730899848069736)OR(rt0.c0)))AND(rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c2)GLOB(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((0.4025090225661828) IS TRUE)  as count FROM rt0 ORDER BY ((((((((0.9730899848069736)OR(rt0.c0)))AND(rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c2)GLOB(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (0.4025090225661828) ORDER BY ((((((((0.9730899848069736)OR(rt0.c0)))AND(rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c2)GLOB(rt0.c2))));
SELECT * FROM vt1, t0 WHERE (NULLIF(vt1.c0 COLLATE RTRIM, t0.c3)) ORDER BY CAST(((vt1.c0) IS FALSE) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(vt1.c0 COLLATE RTRIM, t0.c3)) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(((vt1.c0) IS FALSE) AS TEXT) DESC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (NULLIF(vt1.c0 COLLATE RTRIM, t0.c3)) ORDER BY CAST(((vt1.c0) IS FALSE) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(vt1.c0 COLLATE RTRIM, t0.c3)) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(((vt1.c0) IS FALSE) AS TEXT) DESC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (NULLIF(vt1.c0 COLLATE RTRIM, t0.c3)) ORDER BY CAST(((vt1.c0) IS FALSE) AS TEXT) DESC  NULLS LAST;
SELECT * FROM rt0, vt0, t0, vt1 WHERE (rt0.c2) ORDER BY ((CAST(t0.c3 AS NUMERIC))>>(414195223));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY ((CAST(t0.c3 AS NUMERIC))>>(414195223)));
SELECT * FROM rt0, vt0, t0, vt1 WHERE (rt0.c2) ORDER BY ((CAST(t0.c3 AS NUMERIC))>>(414195223));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY ((CAST(t0.c3 AS NUMERIC))>>(414195223)));
SELECT * FROM rt0, vt0, t0, vt1 WHERE (rt0.c2) ORDER BY ((CAST(t0.c3 AS NUMERIC))>>(414195223));
SELECT * FROM vt0, vt1, rt0, t0 WHERE ('') ORDER BY ((((vt0.c0)!=(rt0.c0)))IS NOT((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((((vt0.c0)!=(rt0.c0)))IS NOT((rt0.c0 IN ())))  NULLS LAST);
SELECT * FROM vt0, vt1, rt0, t0 WHERE ('') ORDER BY ((((vt0.c0)!=(rt0.c0)))IS NOT((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((((vt0.c0)!=(rt0.c0)))IS NOT((rt0.c0 IN ())))  NULLS LAST);
SELECT * FROM vt0, vt1, rt0, t0 WHERE ('') ORDER BY ((((vt0.c0)!=(rt0.c0)))IS NOT((rt0.c0 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1, t0, vt0 WHERE ((((((((((((vt1.c0, vt1.c0, t0.c3)) BETWEEN ((vt1.c0, t0.c33, rt0.c0)) AND ((0.6294590367536478, rt0.c2, rt0.c1))))OR(((rt0.c1) NOTNULL))))OR(((t0.c33)&(rt0.c0)))))OR(t0.c3)))AND(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt1.c0, vt1.c0, t0.c3)) BETWEEN ((vt1.c0, t0.c33, rt0.c0)) AND ((0.6294590367536478, rt0.c2, rt0.c1))))OR(((rt0.c1) NOTNULL))))OR(((t0.c33)&(rt0.c0)))))OR(t0.c3)))AND(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0, vt0 WHERE ((((((((((((vt1.c0, vt1.c0, t0.c3)) BETWEEN ((vt1.c0, t0.c33, rt0.c0)) AND ((0.6294590367536478, rt0.c2, rt0.c1))))OR(((rt0.c1) NOTNULL))))OR(((t0.c33)&(rt0.c0)))))OR(t0.c3)))AND(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt1.c0, vt1.c0, t0.c3)) BETWEEN ((vt1.c0, t0.c33, rt0.c0)) AND ((0.6294590367536478, rt0.c2, rt0.c1))))OR(((rt0.c1) NOTNULL))))OR(((t0.c33)&(rt0.c0)))))OR(t0.c3)))AND(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0, vt0 WHERE ((((((((((((vt1.c0, vt1.c0, t0.c3)) BETWEEN ((vt1.c0, t0.c33, rt0.c0)) AND ((0.6294590367536478, rt0.c2, rt0.c1))))OR(((rt0.c1) NOTNULL))))OR(((t0.c33)&(rt0.c0)))))OR(t0.c3)))AND(CAST(vt1.c0 AS TEXT))));
SELECT * FROM t0, vt0, vt1 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c3, vt1.c0))))OR(LIKELIHOOD(DISTINCT t0.c33, 0.4599063304750539))))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.760568972623321))))AND('')))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c3, vt1.c0))))OR(LIKELIHOOD(DISTINCT t0.c33, 0.4599063304750539))))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.760568972623321))))AND('')))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c3, vt1.c0))))OR(LIKELIHOOD(DISTINCT t0.c33, 0.4599063304750539))))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.760568972623321))))AND('')))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c3, vt1.c0))))OR(LIKELIHOOD(DISTINCT t0.c33, 0.4599063304750539))))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.760568972623321))))AND('')))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c3, vt1.c0))))OR(LIKELIHOOD(DISTINCT t0.c33, 0.4599063304750539))))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.760568972623321))))AND('')))OR((vt1.c0 IN ()))));
SELECT * FROM t0 WHERE (((t0.c33 IN ()) IN ())) ORDER BY (NOT (((t0.c3) BETWEEN (t0.c33) AND ('543326626'))));
SELECT SUM(count) FROM (SELECT ((((t0.c33 IN ()) IN ())) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c3) BETWEEN (t0.c33) AND ('543326626')))));
SELECT * FROM t0 WHERE (((t0.c33 IN ()) IN ())) ORDER BY (NOT (((t0.c3) BETWEEN (t0.c33) AND ('543326626'))));
SELECT SUM(count) FROM (SELECT ((((t0.c33 IN ()) IN ())) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c3) BETWEEN (t0.c33) AND ('543326626')))));
SELECT * FROM t0 WHERE (((t0.c33 IN ()) IN ())) ORDER BY (NOT (((t0.c3) BETWEEN (t0.c33) AND ('543326626'))));
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) NOT BETWEEN (((vt0.c0)||(0x5248f899))) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1))) NOT BETWEEN (((vt0.c0)||(0x5248f899))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) NOT BETWEEN (((vt0.c0)||(0x5248f899))) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1))) NOT BETWEEN (((vt0.c0)||(0x5248f899))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) NOT BETWEEN (((vt0.c0)||(0x5248f899))) AND (((vt0.c0) IS FALSE))));
SELECT ALL * FROM t0, vt0 WHERE (x'') ORDER BY ('' COLLATE NOCASE IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY ('' COLLATE NOCASE IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (x'') ORDER BY ('' COLLATE NOCASE IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY ('' COLLATE NOCASE IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (x'') ORDER BY ('' COLLATE NOCASE IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (+ (NULLIF(DISTINCT rt0.c2, rt0.c0))) WHERE (((((vt1.c0)>=(rt0.c2))) IS TRUE)) ORDER BY 0.5305902971298018 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (+ (NULLIF(DISTINCT rt0.c2, rt0.c0))) ORDER BY 0.5305902971298018 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (+ (NULLIF(DISTINCT rt0.c2, rt0.c0))) WHERE (((((vt1.c0)>=(rt0.c2))) IS TRUE)) ORDER BY 0.5305902971298018 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (+ (NULLIF(DISTINCT rt0.c2, rt0.c0))) ORDER BY 0.5305902971298018 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (+ (NULLIF(DISTINCT rt0.c2, rt0.c0))) WHERE (((((vt1.c0)>=(rt0.c2))) IS TRUE)) ORDER BY 0.5305902971298018 ASC  NULLS LAST;
