-- Time: 2024/06/10 12:56:50
-- Database: database44
-- Database version: 3.40.0
-- seed value: 3331604144
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 INTEGER ); -- 0ms;
END; -- 0ms;
PRAGMA main.auto_vacuum; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=NULL; -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES ('hSiZ,'), (0xffffffff9a65e673), ('hsiz,'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL); -- 0ms;
INSERT OR FAIL INTO rt0(c1) VALUES ('1303819085'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('', x'', NULL, x'61cd9934'); -- 0ms;
END; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x'a6f5'); -- 0ms;
INSERT OR ABORT INTO rt0 VALUES ('\nG', x'', 1303819085, 0.5908620211972664); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES ('-1704597901'), (0.19836598268088124), (0.8157192084700988); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (-1571599586, NULL, x'', NULL); -- 6ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3, c0) VALUES (x'4eabdb3f', NULL, NULL), (0xffffffffa2534b1e, 'I,', x''), (0xffffffffcc394b44, 0.159299542562926, ''); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0, c1) VALUES (0.159299542562926, NULL, 381076329); -- 0ms;
UPDATE OR ABORT rt0 SET c1=x''; -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
PRAGMA temp.ignore_check_constraints = true; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(-8.68660412E8) WHERE (0xffffffffb565fe1d IN ()); -- 1ms;
REINDEX  rt0; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=-2064499591, c3=x'' WHERE CASE WHEN CAST(rt0.c2 AS INTEGER) THEN CAST(NULL AS INTEGER) ELSE LIKE(rt0.c2, rt0.c2) END; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=NULL WHERE '1303819085'; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c2='-249161324' WHERE load_extension((((rt0.c3))>((rt0.c1))), CAST(rt0.c1 AS NUMERIC)); -- 0ms;
UPDATE OR IGNORE rt0 SET c3=0.6199628809401233; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1311547416 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3676932544227196 IN ()))>(((NULL)GLOB('\nG')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4142112626534963) NOT NULL)) NOT BETWEEN ('[5+5' COLLATE RTRIM) AND ((((x'')) NOT BETWEEN ((NULL)) AND (('-1704597901'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN -2064499591 THEN '' ELSE -1.571599586E9 END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('j	8\o' COLLATE BINARY)AND(((1078185754) IS FALSE))))OR(-1311547416)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1311547416 sz=2076464004 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('1041753604')IS NOT('-1704597901')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL))IS NOT(('0.19836598268088124' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') BETWEEN ('381076329') AND (' )g7~W3yw')) THEN x'' WHEN ((0.8004155001299614) NOT BETWEEN (NULL) AND ('1987189235')) THEN (('hcwD,')&('Hr')) WHEN UPPER(0.6028815576074599) THEN CAST(NULL AS BLOB) ELSE (('0.5908620211972664')<<(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'25f8')) BETWEEN ((x'f3b5')) AND (('︝of2	T䬞A䬞')))) NOT BETWEEN ((('') IS TRUE)) AND ((('-G') BETWEEN (NULL) AND (-944450401)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-434903910 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1813666842 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-944450401'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -1744833918 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1024670308 -2039731337 0 sz=1535221186'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1041753604 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN ('CYGCzI3') AND (0.6028815576074599)))<<(((('I,')) NOT BETWEEN (('-249161324')) AND ((0X7bc45384))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1961873442 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (CAST('0.8157192084700988' AS BLOB) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '381076329'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(((x'')*('-1744833918')), ((x'') NOT BETWEEN (0.49721530873507) AND (0.22918598317819194)), UPPER(DISTINCT '/Y\nf'), ('' IN ()), ((504954534)&(0x28cb0413))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (TRIM(-944450401))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-434903910 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1877345096) IS TRUE))LIKE(LIKELIHOOD(1.877345096E9, 0.4088762872294076))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 381076329'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-631788628 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=54146632 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2120085279'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1873337660 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-148259932 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UPPER(DISTINCT '-2105512305') AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY(((((((((0.6028815576074599)AND(-944450401)))OR(NULL)))OR(NULL)))OR('r鞁R)&|럭O')), (((('')OR(NULL)))OR(NULL)), ((NULL)!=('381076329'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE highlight(5.04954534E8, x'', 0.6028815576074599, 'lc') COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '381076329 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<<('1399644792'))) NOT BETWEEN ((+ (x''))) AND (((0X14cfef)OR('bꈟ{g|dK')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<<(x''))) NOT BETWEEN (((NULL)IS(''))) AND ('zimj' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('81J'))>=((('-1744833918' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'4e23fa9284c7') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1399644792 sz=-2105512305 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2064499591 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '54146632 sz=-2086629947 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST('1422120099' AS REAL))OR((((x'')) NOT BETWEEN ((0.8898586958960735)) AND ((0x7f496861))))))OR(((0.7105067421266407)GLOB('7{ZX9{s')))))OR(CASE WHEN 'cR]CEY+_*' THEN 'P' END)))OR(((x'') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1961873442 sz=-429510252 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (STRFTIME(0.8898586958960735, -1711710309, '-1635803264'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1024670308 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1186119092 sz=-1939435334'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=214767648'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 9.345988400589755E-4; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-271304822'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MIN(CAST(NULL AS REAL), json_valid(5.4146632E7), (('375026381') NOT BETWEEN (0.8157192084700988) AND (NULL)), NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2127823208 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1329877629 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('q^MD*6[WQ')OR(0.5920027284328075))  WHEN CAST(NULL AS INTEGER) THEN ((0.7129660063768902)AND(x'')) ELSE (+ ('686930191')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-563710290 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1991707817 sz=2135517281 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '905731190 sz=-1873337660'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-229416526 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1215812526 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-457373211 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5738056696573768)LIKE('-1123495208')))-(CASE 0xffffffffdd0037aa  WHEN x'' THEN '曽)?᧳[' WHEN NULL THEN 0.5719139381636562 WHEN x'627d' THEN 0.32426242607166833 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1521598106 sz=-1671366235 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1106581270 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-711133355 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '504954534 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHAR(((0.31455559106981235)LIKE(0.7637697286482473))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-148259932'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(0.6939964488232877 COLLATE RTRIM, ((('-1460894038')) BETWEEN ((0Xccd1820)) AND ((NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.25043326057269033)<=('-1305680692'))) BETWEEN (((x'')!=(x'c333'))) AND (((x'')>(-1233161329)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1106581270 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY('1813666842' COLLATE BINARY, ((('!+'))>=((NULL))), (('-1311547416') NOT BETWEEN (0.307324521950916) AND (0.4443530646679432))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=357126322 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-434903910'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.25686590320095926)AND(x'')))OR(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1004669865'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((('1877345096') IS TRUE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5920027284328075) NOT BETWEEN (x'1c5f') AND (''))))==((((x'') BETWEEN (NULL) AND (x'f0b2953684aa'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN 0.24060447966332976 END) NOT BETWEEN (HEX(DISTINCT x'')) AND (CAST(0.9928706404585758 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -234622233 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1112288025 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(0.18836568379669028 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))-(((x'')OR(0.17112491594006252)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-720510242 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')AND(x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)AND((((x'21fc')) NOT BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN x'' THEN x'' ELSE '퉒z}A rE' END) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1343789537 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-206971447 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=346888649 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-720510242'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0Xffffffffa2a5e971 AS REAL))<=((((NULL))>=(('-348191040'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-302162819'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-659824076 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.006808470971837677 IN ()))OR(((x'')LIKE(NULL)))))OR(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=241813428 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1078185754)OR(1.422120099E9)))OR(1.535221186E9)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('9#WCp45') ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ('0.7637697286482473')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(x'b085')) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2006145616'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('1934127580')AND(NULL)))OR(x'')))AND('')))OR(0.145476512707863)))OR(NULL)))AND(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(CAST('LB' AS TEXT), ((x'3134') BETWEEN ('') AND (x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'7291')) NOT BETWEEN ((NULL)) AND ((NULL)))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1112288025 0 sz=-809369075'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-864509311 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=54146632 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'a992')))&(SUBSTR(NULL, x'2559'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN x'' THEN 'q~e/G*q7M' WHEN x'' THEN NULL WHEN NULL THEN 2.006145616E9 END) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1865555885 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=979973996'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'9cb316bf')!=('-1158683207'))))>=((CASE x''  WHEN 0.6698466733545413 THEN x'' WHEN x'' THEN '5Z' WHEN '-1571599586' THEN NULL END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 876136360'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=372887432'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-148259932'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 425827003 sz=-1521598106 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1552567111 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1960945260 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '0.9928706404585758' THEN (((0.6633464786939756, '-4049316', x'')) BETWEEN ((x'3167', x'', '1303819085')) AND ((NULL, NULL, x'd26c'))) ELSE ('lS揷l' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=684733804'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE BINARY AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((270399864 IN ()) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1991707817 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1362152424) IS FALSE) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-962668071'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.145476512707863)%(0Xffffffffd751ad93))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (STRFTIME(x'', x'0112c857', 0.3596183635788638, '\nG', x'096e2fb8') IN (((((((((NULL)OR(x'')))OR(0.16092958937372548)))OR('0.7129660063768902')))OR(0.4142112626534963)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -2091357884 sz=905731190 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-691048962'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1878474981 0 sz=-1381828435 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1363951 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-37901021 sz=730636270 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-332853358 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=425827003'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((2008762108) NOT NULL))>((+ (0xffffffff841a63f7)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1520851329 sz=-760351003 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-434903910 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1671366235')OR('-1362152424')))AND(0.5385436465274817)))LIKE(((0Xffffffff88651ac5)=(0.2401267939167141)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID() COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0xfffffffff057eaf4 THEN 0X33a3648 ELSE x'' END)==(((0.6939964488232877)OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=514345547'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE INSTR(IFNULL(DISTINCT NULL, x'b1bf'), ((NULL) NOT BETWEEN (x'') AND (x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.8004155001299614)>>('ZRq'))  WHEN (((('bQ''(B0')OR(2.41813428E8)))AND('T夙ᠠE')) THEN (((('260017562')OR(x'')))OR(0.25043326057269033)) ELSE ((NULL)+('1')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1934127580'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-2066755141'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-794956388 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=754370968 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=372887432'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((('M?IQ?1]Wa')<('곱Hc\8F.	b')), ((('0.6199628809401233', -823507123, 0.7571785368778748, NULL, '-944450401')) BETWEEN ((x'', -8.64509311E8, '>x{}', NULL, '-1332421673')) AND (('Oj', 0.6890393006501843, 0.29455150617498915, NULL, -4.3490391E8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((5.04954534E8) NOT BETWEEN (x'') AND (0x18c46002))))<=((CAST(9.0573119E8 AS NUMERIC)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(NULL AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1027632804'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') ISNULL)  WHEN (((''))<=((''))) THEN ((x'')>=(x'')) ELSE ((((x'')OR('')))OR('-1329877629')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.6939964488232877' IN ('0.6633464786939756')), (NOT (372887432)), CAST(-4.29510252E8 AS REAL)))>(((0.6326850648403831 IN ()), (((((((('[5+5')AND('1958188350')))AND('')))AND('L')))AND(NULL)), ((NULL) ISNULL)))); -- 2ms;
DELETE FROM sqlite_stat1 WHERE (('H\n\n3-')/(((('1112288025'))>((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.629770811354664) BETWEEN (x'') AND (NULL)))AND((('2127823208')>('-711133355')))))AND(0.5464244093228583 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1506571186 sz=143738676 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1633234304 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT 0.7158023374916205)) BETWEEN (((NULL)AND(x''))) AND ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 sz=1636242114 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1341451589'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.11448630153692518)) NOT BETWEEN ((((NULL)>>(NULL)))) AND (((+ ('D3v'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=905731190 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-631788628 0 sz=1041753604 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1311547416'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1793944702 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=833658577'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1357183689 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '571854480'  WHEN ((-1215812526)-(NULL)) THEN (((x'')) NOT BETWEEN ((x'')) AND ((-1.123495208E9))) ELSE ((((x'')AND(NULL)))AND(0.49721530873507)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN '-1183503543' THEN NULL WHEN '1466011022' THEN NULL WHEN NULL THEN 'X\' ELSE 0.6326850648403831 END THEN ('1144468233' IN ()) ELSE ((0.32608212560496785)&(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((0xffffffffcc394b44))==(('-302162819'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=357126322 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1648583218 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=357126322'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-271304822'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1334185103'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1724839553 sz=-1914583934'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-492664557 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-701610603 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(CAST('兩D' AS NUMERIC)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1675194806 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1922819141 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN ((NOT (x'07d9'))) AND (((-1.711710309E9) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1562124543 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '217019608'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=905731190 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)GLOB(NULL)) THEN ((0.9187565811272437)<<('372887432')) ELSE ((((((((x'')AND(NULL)))AND(2.135517281E9)))AND(0.9920490428497297)))OR(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2122498017 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1466187882 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1578318131', 'ADR', NULL)) BETWEEN (((NULL IN ()), ((0Xffffffff97fff282) NOT BETWEEN (0.60116743569267) AND ('-188813839')), (0.6993908308939627 IN ()))) AND (((('0.6698466733545413') IS TRUE), ((('0.5738056696573768', -1960945260, 0.44045535618404086))>=((0.145476512707863, x'', NULL))), ((0Xffffffffaff04587)||(0Xffffffffd254c6ba))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)==(x'')) IN ((- ('')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1304361004 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1405187294 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 2023810575 sz=-313090853'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1914745771'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '177253985 sz=-828387917 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-782891215 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))*(0.6914438577051938 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-416502922 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-593974429'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((''))==((((x'')||(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=717970597 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=-1540324758 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=524849028 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1971958621 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL('\n\n', 1961873442)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1534512766 sz=1409503102 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-720510242'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-950600725 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'184c')OR('-1159643004')))AND(0xffffffffbad7d5ce)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=769633278 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE UNLIKELY(x'')  WHEN ((((NULL)AND(0.3298285957069702)))AND(x'')) THEN NULLIF('0.5738056696573768', x'') ELSE 1747951196 COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-594135027 sz=-1922662268'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-261306214 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1813666842 sz=-518240980 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1636599928 0 sz=372887432 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1934127580 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((x'') NOT BETWEEN (NULL) AND (NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.16621130425646224)>(0.25043326057269033))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))>>('now個	' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=539233636 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 4 sz=684733804 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1618525342 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1482779363 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1239516985 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=109950907'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS REAL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffff930d0492)) BETWEEN ((CAST('-989679017' AS INTEGER))) AND ((((NULL) IS TRUE)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (TOTAL_CHANGES())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1730789011'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LAST_INSERT_ROWID()) BETWEEN ((~ (''))) AND (CAST(0.7919996171122461 AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN 'o''&' WHEN NULL THEN NULL WHEN NULL THEN '5	|9' ELSE 0xffffffffb4474fb4 END) NOT BETWEEN (CAST(0x7ed40168 AS NUMERIC)) AND (((x'5c49')>>('346888649')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.37003031622137494)%(NULL)))OR(('&X' IN ()))))OR(CASE '-271304822'  WHEN x'' THEN 0xfffffffff6362946 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT CAST(x'' AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((((((NULL)AND('}L*dG?lQ')))OR(x'b9b1')))AND(NULL)))OR('1078185754')))OR('xF&')))AND(6.84393491E8)))AND((('0.6890393006501843')>('3yPJ6g⋟')))))AND('/⋄a,.A')))AND(CASE WHEN 'ȍ%[g4A>' THEN x'' END)))OR(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-265005905)|(NULL)))*((('ዥHi?LFtoD') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 2038935841 sz=-553751837 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.5702379479711089 AS TEXT) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=488806418 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL((x'' IN ()), ('1599915492' IN (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-2075678045 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.11838134612176787) NOT BETWEEN (-1929514594) AND ('1618115361')))/(((((((((x'287f087b')AND('M[⚛]')))OR('')))OR(0.5940756367832609)))OR('1515876071')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((2.076464004E9, 1635837883, NULL))<=(('0.5385436465274817', NULL, '1043167100'))))AND(CAST(0.3411104652392474 AS NUMERIC))))AND((+ (x'')))))AND('2i' COLLATE NOCASE)))OR(0.33605410019081194)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('1422120099')+(NULL)))OR(((x'') BETWEEN (x'') AND ('?i෵')))))AND(((x'')>>(NULL)))))OR(CAST(0.42530098601223953 AS TEXT))))AND(((NULL) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=46648742 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=517653754 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=386789325 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1329877629 sz=1363951 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1760929839 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1455331022 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.6028815576074599 COLLATE BINARY AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2055162093'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1703174358 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR('826954418')))AND(NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-119134755'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)<('357126322')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '219649848'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN NULL THEN '-4049316' END, ((('1399644792'))<>((NULL))), ('' IN (0xffffffffcaabf86a, 0.39254203273797417))))=((((((x'')OR(NULL)))AND(0.8732271663147543)), ((0X2bb1910b) BETWEEN (0X2d383d82) AND ('979973996')), (NOT (-89250806))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-962668071 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (x'') AND (0.45651813395789376)))>=(SUBSTR(0.25686590320095926, '*KO䉌'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'')))<<(((0xffffffffaa9af6c6)||('1961873442')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2110521862'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN SQLITE_SOURCE_ID() END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-4.29510252E8)AND('0.8157192084700988')))>(CAST(-6.31788628E8 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-64529999'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-526735706 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1925425490 sz=-894741219 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1460894038 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0xffffffff9c60f9a5)AND((('xj')IS(x'')))))OR(TYPEOF('0.8004155001299614'))))OR(((NULL) ISNULL))))AND(DATETIME(NULL, 0.9145786008442062, NULL, x'7303', '-2120085279'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1787624062')-(NULL)))>>(((NULL)+('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '729724385 sz=-326715871 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(((((((((((((NULL)AND('')))OR(NULL)))AND(0.08776912905326617)))AND(NULL)))OR(0X86132a6)))OR('-682513005'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -1991707817 sz=1369158534 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) BETWEEN ('') AND (1377564859)), ((NULL)GLOB('-1521598106')), (~ ('')), 0.7965542817504587 COLLATE RTRIM, (('kP㞊')!=(0.37305367537869394))))==((0.11725938733458907 COLLATE BINARY, (0xffffffffb7882c52 IN ()), ((0.18836568379669028)||(NULL)), CASE WHEN x'9099' THEN NULL WHEN x'' THEN -234622233 WHEN '\nV^' THEN x'' WHEN x'' THEN 0.7865459262609318 WHEN x'ba4f' THEN '-1106581270' ELSE '' END, NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=270399864 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(CAST('2138690130' AS NUMERIC)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-105836998 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=54146632 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((DATETIME(NULL, NULL, x'')) NOT BETWEEN (((0.5800777177705883) IS FALSE)) AND (CASE WHEN NULL THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-812701254'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.0894336470189866) NOT BETWEEN (0xfffffffffda6ee1c) AND (x''))) ISNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '6'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=479369029'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2076464004 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<(LIKELIHOOD('}MbD', 0.3609243993944933))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) IS TRUE)  WHEN '?I෵' COLLATE RTRIM THEN CAST(0.16367262924537052 AS NUMERIC) ELSE (((((((('-417112553')OR('z-WG')))AND(0.012155776921941919)))OR(NULL)))AND(0Xfffffffff203f2e7)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'5277' AS NUMERIC) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (0.29856250822104136 IN ())  WHEN '268922094' THEN (((0.6399112910971193)) NOT BETWEEN ((NULL)) AND ((0.846620801717349))) WHEN (NULL IN ('2i')) THEN ((('241813428', '?(SLR1	4', x'bb21'))>((NULL, '0.7129660063768902', x''))) WHEN (((NULL)) NOT BETWEEN ((0x14035689)) AND ((NULL))) THEN CASE NULL  WHEN NULL THEN NULL ELSE '372887432' END ELSE ((NULL) IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-476684887'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(x'50150a9a')) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1384427120 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-429510252 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-809369075 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=835845244 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1704597901 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-1346364342 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=233573850 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1997886737'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'2d5b') NOT BETWEEN (NULL) AND (0.0058482273306349475)))||(((NULL)/('0.8157192084700988')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -2086629947 sz=-1343789537 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1865555885 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=550028195 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-864509311'  WHEN x'' THEN x'' WHEN '' THEN x'' WHEN 'Oj' THEN '1475917394' WHEN 0.2531912950416938 THEN NULL WHEN NULL THEN x'' ELSE NULL END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-457373211 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1987189235'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1701066515 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-170592039', x'', x'fa6a')) NOT BETWEEN (((~ (x'')), (0.49721530873507 IN (NULL)), ((('-962968350'))<(('684393491'))))) AND ((LIKELY(0.04437815723897254), (- (NULL)), ((NULL)||(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE json_array_length(-1329877629)  WHEN x'd772' COLLATE NOCASE THEN ((6.84733804E8)-('2141535367')) WHEN CAST(0.11725938733458907 AS TEXT) THEN CAST(-1630487408 AS REAL) WHEN TRIM(DISTINCT NULL, x'') THEN (((x''))>=((x''))) ELSE ((('')) BETWEEN ((0.21235792247287222)) AND (('-691017376'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-498072099'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -682513005 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(0.6633464786939756) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1682998688 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1841207555 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (NULL)))<=(((((NULL)OR('rU%O(\rPtN')))AND(0.006808470971837677)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-659824076'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '876136360 1112288025'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1877253607'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1303819085 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-610625246 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-631788628 AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=735068397 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN 0.5578317305516308 THEN 0.22673178549631778 WHEN '-1460894038' THEN 'qk' WHEN 1752925321 THEN '' ELSE '()' END  WHEN IFNULL('ax', x'5223') THEN CASE WHEN 0Xffffffffc2ecc59c THEN '-348191040' ELSE 0.43035218606122394 END WHEN CAST(x'' AS NUMERIC) THEN (((('0.0894336470189866')OR('qK')))OR(-4049316.0)) WHEN CAST(x'' AS REAL) THEN (((x''))!=((NULL))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(NULL, x'd341')) NOT BETWEEN ((NOT (0.246712098679164))) AND (CAST(x'' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1410031885') BETWEEN ('') AND (x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER('0.5738056696573768')) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1709397606 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-65485010 2 sz=-282121694'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1787967600 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '1886427656' THEN NULL WHEN x'5c35' THEN x'' WHEN 0Xffffffffafe7661f THEN 0.2685903104397598 END) BETWEEN ((((x'')) BETWEEN ((-1741513502)) AND ((x'64a1')))) AND (TYPEOF(DISTINCT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(3.72887432E8 AS REAL) COLLATE BINARY COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('tOwc1y')<(x'')) IN (((-595250730)GLOB(0.159299542562926)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2054065598 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-271304822'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-868660412'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=1503146657 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '310744289 54146632 2 sz=-1329877629 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-720886286 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1832885202'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2037542483 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('*Bx/R\U4r' COLLATE NOCASE)AND(((-1796420653) IS TRUE))))OR(CAST(x'' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-944450401 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-625229385 sz=-1455839409 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1702061505 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-568912143 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '718303910 sz=1877345096 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.2578146396409424)||(-1311547416)))<>(((('', 1.041753604E9, NULL, '363540184', 0.3855123019816663))>=((x'', x'', NULL, 0.20044630447980516, NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1495050359 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2146342680 sz=-1939435334'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 2 sz=-297057647 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1671444760 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (UPPER(DISTINCT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN ('8XbŨ\n*(d') AND ('2138690130')) COLLATE BINARY COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (0xffffffff989bec31)) IN (((x'')==(0.4370448972253449)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1808635777 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1521598106'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=-2055359496 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', NULL, '7Z', '713770358', '')) BETWEEN (('', NULL, x'baa5', ',|L+', '-659824076')) AND ((-2.078645257E9, NULL, x'', NULL, 0.2578146396409424)))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1031865279 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1379664646 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6293879963590822 COLLATE BINARY) BETWEEN ('\nV^' COLLATE NOCASE) AND ((((0.9761342597279967)) NOT BETWEEN ((0x74efd022)) AND ((x'9e9d'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1785639258'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1112288025 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1445117840 -205622117 -1873337660 sz=111298754 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-4049316'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1399644792 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-920080412 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('Y''~(#zv星7') NOT BETWEEN ('') AND (NULL)))OR(CASE '2122443573'  WHEN '0.2401267939167141' THEN '' WHEN NULL THEN 0.2578146396409424 WHEN -1778298061 THEN x'd8a3' END)))AND((~ (0.49271582061582186)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1311547416'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -2064499591 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=870074121 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-249161324 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN ('1935147475') AND (0xffffffffa05577cc))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1865555885 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1691500264 sz=-2091357884 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')<=(0.7965542817504587)))|(LIKELY('830684353'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1637013270 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 'y 	x4i,La'  WHEN NULL THEN x'' WHEN '0.0' THEN NULL WHEN '-1233161329' THEN NULL ELSE NULL END, (('-395495983') ISNULL), ((((-8.68660412E8)OR('I,')))AND(NULL))))>((CAST(x'' AS NUMERIC), CASE NULL  WHEN '0.9761342597279967' THEN NULL ELSE x'' END, (('1550077099') BETWEEN (x'') AND (0.28018835660914254))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=375026381 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-563710290 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1362152424 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((('P'))<>((-2078645257))))OR(COALESCE(DISTINCT -1962850320, NULL))))AND((((('-1939435334')AND('qK')))OR(x'2d37')))))OR('')))AND(((x'')!=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (-1.311547416E9)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1552567111 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '803494458 2 sz=-482208170'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1650925852 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-935895018'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2059019312 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -229416526 sz=-1724839553'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('115650608' IN ())  WHEN CASE WHEN 0.334961386409927 THEN 0.39254203273797417 ELSE 0x5b8dd15a END THEN ROUND('1646608179', NULL) WHEN CASE '7᳖Y\o'  WHEN 0.6129896951065987 THEN NULL END THEN (((-531965554))<=((''))) WHEN CAST(NULL AS REAL) THEN 0.7327846757923997 COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-269042570 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-3.02162819E8) IS TRUE) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1112288025 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-816808314 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((((((((('Cs')OR(0.17944585112104805)))OR(0.14178193905003744)))AND(x'')))AND(x'f31d')), ((((0X62a1730c)AND(1808635777)))OR(0.49271582061582186))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('N%SF' AS TEXT) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN NULL THEN x'' WHEN NULL THEN x'' WHEN 0.32312528160085185 THEN '-148259932' END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=687079523'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1305680692 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1953182296'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-957369634'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('HbkWZ')|((((NULL)) BETWEEN (('>u|)f')) AND ((',|L+'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)) BETWEEN ((NULL)) AND ((x''))) IN ('-779532734' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT ((((0.8628770202202103)OR(NULL)))AND(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-774795309 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-429510252 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-558909341'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'6ffd'))>((NULL))))%(CAST('0.32426242607166833' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '813106735 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '312512067 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')GLOB(0.49271582061582186)); -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-356363405 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '536121126 0 sz=684733804 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('1386669781')))%(((2.076464004E9) NOT BETWEEN (x'') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1859903274'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2144423554 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1708494725 381076329 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-348191040 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-1842412566') NOT BETWEEN (x'') AND (x''))  WHEN (+ (NULL)) THEN CASE NULL  WHEN '-2105512305' THEN '' ELSE '-1210198940' END END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-572433524 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1934127580 0 sz=-321070071'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 1422120099 sz=-269546692'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-60073949 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('풣덍t6bL' IN ()) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-786667379')AND('3yPJ6g⋟')))OR('')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-234622233') IS TRUE)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 0.16903877334993667  WHEN NULL THEN 0.4443530646679432 WHEN x'' THEN '-1763845040' WHEN NULL THEN '' WHEN '' THEN NULL WHEN NULL THEN 0.9398388757384081 ELSE '204166101' END AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1724839553') IS TRUE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1846543493 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1004669865'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x74efd022) IS FALSE))IS((('')==('j]J*B6')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1145701803'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1371689450 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1718584279 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (x'f3e3')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1625261894 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'6807')/(2122992148 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2115511235 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=241813428 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=244873020 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-587183809 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'e381')>(0xffffffffc7b4d49f)), ((('63748077'))>((''))), CASE x''  WHEN -920093033 THEN 0.503684510471974 ELSE 0.8170987445357095 END))<=((((((-2.039731337E9)OR('2135517281')))AND(0.42486787243696966)), ((((x'd3fc')AND(-630227247)))AND(x'')), ((-1939435334)<=('M퉒_'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1581862135')<('%*4''v7F鮍N')), HEX(x'698e'), CAST(NULL AS INTEGER)))<((((NULL)GLOB('-365323667')), CAST(-431310785 AS INTEGER), ((((x'')AND('1e500')))AND(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1700224586 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('\rWS700f5') BETWEEN ('791272675') AND ('719652920')) THEN (x'f6e1' IN ()) ELSE ((0.7452979143909298) IS TRUE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=1131542698 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1702718144'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-24250787'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(((((163497170)AND(-2109557740)))OR(0xffffffff84f23c79))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')||(''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1752229393 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT (NOT (0.570490448217178)), ((x'92cea518') NOT BETWEEN (NULL) AND (NULL)), -8.64509311E8 COLLATE RTRIM, (+ (-166384605))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('900754483') IS TRUE))AND((((('P')OR('-1591088671')))AND(NULL)))))OR(((0Xffffffffb22ce4cc)GLOB(-6.82513005E8)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')|('T狍'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2051455724 sz=-148259932 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-891577978 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')=(x'235b')))<>(NULLIF(DISTINCT NULL, 0.8869142581964252))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.10935257253664932) BETWEEN (x'') AND ('')))); -- 3ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') IS FALSE) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE x'9dcf'  WHEN ',|L+' THEN NULL ELSE '-1823593928' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -380214441 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN 0.5678800479548166 END)<=(CAST(NULL AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-615681786')OR(x'48ab')))OR(0.9140883775194716)))|(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1143788081 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1647774420 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1)) NOT BETWEEN ((0x54c3d4a3 COLLATE RTRIM)) AND (((+ (x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.8813162387892228 COLLATE NOCASE THEN (('253659581')IS('243084528')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-108499862'  WHEN UNLIKELY('k	') THEN CAST(x'7845' AS REAL) WHEN x'892d' THEN NULL COLLATE RTRIM WHEN (~ (0.9521745627324666)) THEN ((x'')GLOB(0.06600428146963344)) ELSE (('-2120085279') BETWEEN ('1078185754') AND (0.6214292404134626)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2135517281 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=952608428 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=115522806 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE ''  WHEN '6~Z[?}^' THEN NULL ELSE 8.991206993027578E-4 END)AND(((('63748077'))!=((-611689519))))))OR('6~1[?}^')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '63748077 sz=-864970835 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-597017500 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR((('-1136590004')IS('357126322')))))OR(CAST('1961873442' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1106581270'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2063368635'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=375026381 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '698627015 1399644792 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1614751587'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=737139922'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-2010576794 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 sz=-1046761273 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1543324254)<>(0xffffffffc23e3a86)))%(((((0.6399112910971193)OR(-2.086629947E9)))AND(-1770974805)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=876136360'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '425827003 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-2039731337') ISNULL)) NOT BETWEEN ((('H\n\n3-') IS TRUE)) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0Xffffffffacc1d45c)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.023948397671142874 IN ()))OR('1363951' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL COLLATE RTRIM  WHEN x'' THEN CASE WHEN 0.7327846757923997 THEN 0Xffffffff91ff2b53 END WHEN '0.629770811354664' COLLATE RTRIM THEN 0.43035218606122394 COLLATE RTRIM WHEN (('5	|9') NOT BETWEEN (NULL) AND (NULL)) THEN ((NULL)|(NULL)) ELSE (((('')OR(0.079962054179189)))OR(-1083637840)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=945295122 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-475990235 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1017775371 sz=1892943429 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=545446751 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((-858424039) NOT NULL) THEN CAST('-148259932' AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME(((NULL) NOT BETWEEN (-29105672) AND (0.47908617589906766)), (+ (NULL)), ((x'') BETWEEN (x'acc1') AND ('565669155'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=9223372036854775807 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')OR(0.2681936895980209)))AND('')) IN ((((('372887432')OR(x'')))OR('-908663971')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, 0.11725938733458907, 0.9258152414481208)) BETWEEN (('', '-1362152424', NULL)) AND ((x'', NULL, '-1704597901'))))*(((1594821239)IS(0.592037638578112)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('6320618')) NOT BETWEEN ((NULL)) AND ((0.8157192084700988))))AND((('0.2401267939167141') ISNULL))))OR(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1002080434 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.8659607430254942)+(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7595379354991719 COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(NULL AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'')AND(NULL)))AND('1961873442')))OR('')))OR('1438018406')) IN (((0.8662505577403729) BETWEEN ('퉒Z}A RE') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-519774886 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(INSTR(NULL, NULL) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((x'' IN (0Xffffffffcc1d59fb)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1233161329'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=381076329 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1186119092 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c2)=(0.5506068307267182, '63748077'); -- 0ms;
UPDATE OR ABORT rt0 SET c2='x\' WHERE -1154482348; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('-1091249178', NULL); -- 0ms;
REINDEX BINARY; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c3=x''; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA application_id; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES ('1959670998', 0xffffffffab1a0c34, 0.406332234890158), (NULL, 0X6bf9c7b2, 0Xffffffffb1474231), (0.9261217369515323, '-864509311', '~y븴\n8'); -- 0ms;
UPDATE rt0 SET c0=NULL, c0=-1e500; -- 0ms;
UPDATE rt0 SET (c0, c3)=(x'f965', x''); -- 0ms;
UPDATE rt0 SET (c0)=(x''); -- 3ms;
UPDATE OR IGNORE rt0 SET c2=NULL, c3=-636937456 WHERE CAST(((rt0.c3)OR(rt0.c3)) AS NUMERIC); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c3, c2, c1) VALUES (NULL, -348191040, NULL, '561514268'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0) VALUES (NULL, NULL, NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(0Xffffffffb0312890) WHERE (((rt0.c1 IN (x'')))%(rt0.c3)); -- 0ms;
UPDATE rt0 SET (c0)=(0.6012340341393658) WHERE (((- (rt0.c2)))||(((('\r', rt0.c2, x'')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c3, rt0.c1, rt0.c3))))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c2, c1) VALUES ('da}	', '}xiO''䒧&M', '-13896136'); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1, c3) VALUES (x'', x'78bc', 0.45651813395789376); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (0.2055642815592149, x''); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c3, c2, c0) VALUES (x'', x'', '9qbQ꩙FN', x''); -- 1ms;
UPDATE OR IGNORE rt0 SET (c1)=(0.143188846465235); -- 0ms;
UPDATE OR ABORT rt0 SET c2=0.9123992836714722 WHERE ((NOT (rt0.c0)) IN (CAST(rt0.c2 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c0) VALUES (NULL, '-863673268', '-1939435334'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=-9.44450401E8, c0=x'f465'; -- 1ms;
UPDATE OR IGNORE rt0 SET c2=NULL, c2=390845851 WHERE ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))<=(UNICODE(rt0.c3))); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=''; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL) WHERE x'0031192d'; -- 0ms;
UPDATE rt0 SET (c1)=('9223372036854775807') WHERE (- (rt0.c0)); -- 0ms;
UPDATE OR ABORT rt0 SET c2=x'' WHERE '>	Vs늆' COLLATE NOCASE; -- 0ms;
UPDATE OR ABORT rt0 SET c0=NULL, c2=2006145616 WHERE COALESCE(rt0.c0, rt0.c2) COLLATE BINARY; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c0, c3, c2) VALUES (NULL, 452584263, '8XbŨ\n*(d', 0.2521778608069941); -- 0ms;
UPDATE OR IGNORE rt0 SET c2='6l', c0=0.02867735030761287 WHERE (((NULLIF(rt0.c3, rt0.c2)))>=((((((rt0.c1)OR(rt0.c1)))AND(x'3302'))))); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c3='0.5702379479711089', c2=NULL WHERE ((((('S>(G~YXX')|(rt0.c0))))>((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE rt0; -- 1ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((NULL IN ()))AND((((('G跅d&G{_')OR('5	|9')))AND(NULL)))))AND(NULL COLLATE BINARY))); -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('뚦*{9'); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c3) VALUES (NULL, 'xi'); -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (~ ((rt0.c0 IN ()))), ((0.12526580822831002) IS FALSE);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (~ ((rt0.c0 IN ()))), ((0.12526580822831002) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (~ ((rt0.c0 IN ()))), ((0.12526580822831002) IS FALSE);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (~ ((rt0.c0 IN ()))), ((0.12526580822831002) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (~ ((rt0.c0 IN ()))), ((0.12526580822831002) IS FALSE);
SELECT COUNT(*) FROM rt0, v0 WHERE (((NULL) BETWEEN (v0.c0 COLLATE NOCASE) AND ((((rt0.c0))<=((rt0.c1)))))) ORDER BY ((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c3))  NULLS LAST, (CASE v0.c0  WHEN x'' THEN rt0.c3 ELSE rt0.c2 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (v0.c0 COLLATE NOCASE) AND ((((rt0.c0))<=((rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c3))  NULLS LAST, (CASE v0.c0  WHEN x'' THEN rt0.c3 ELSE rt0.c2 END IN ()) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((NULL) BETWEEN (v0.c0 COLLATE NOCASE) AND ((((rt0.c0))<=((rt0.c1)))))) ORDER BY ((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c3))  NULLS LAST, (CASE v0.c0  WHEN x'' THEN rt0.c3 ELSE rt0.c2 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (v0.c0 COLLATE NOCASE) AND ((((rt0.c0))<=((rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c3))  NULLS LAST, (CASE v0.c0  WHEN x'' THEN rt0.c3 ELSE rt0.c2 END IN ()) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((NULL) BETWEEN (v0.c0 COLLATE NOCASE) AND ((((rt0.c0))<=((rt0.c1)))))) ORDER BY ((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c3))  NULLS LAST, (CASE v0.c0  WHEN x'' THEN rt0.c3 ELSE rt0.c2 END IN ()) ASC;
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c3 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c3 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c3 AS TEXT) COLLATE RTRIM);
SELECT * FROM v0 WHERE ((((((v0.c0))<=((v0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<=((v0.c0)))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0))<=((v0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<=((v0.c0)))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0))<=((v0.c0)))) ISNULL));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN (((((v0.c0))>=((v0.c0))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), (v0.c0 IN ()))) AND ((rt0.c0 COLLATE BINARY, (~ (v0.c0)), CAST(rt0.c3 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN (((((v0.c0))>=((v0.c0))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), (v0.c0 IN ()))) AND ((rt0.c0 COLLATE BINARY, (~ (v0.c0)), CAST(rt0.c3 AS BLOB))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN (((((v0.c0))>=((v0.c0))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), (v0.c0 IN ()))) AND ((rt0.c0 COLLATE BINARY, (~ (v0.c0)), CAST(rt0.c3 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN (((((v0.c0))>=((v0.c0))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), (v0.c0 IN ()))) AND ((rt0.c0 COLLATE BINARY, (~ (v0.c0)), CAST(rt0.c3 AS BLOB))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN (((((v0.c0))>=((v0.c0))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), (v0.c0 IN ()))) AND ((rt0.c0 COLLATE BINARY, (~ (v0.c0)), CAST(rt0.c3 AS BLOB)))));
SELECT * FROM v0 WHERE (LIKELIHOOD((v0.c0 IN (v0.c0, '-1772411879')), 0.965897024562489)) ORDER BY (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()), ((0.013175579987720565)>=((('}')IS NOT(v0.c0)))) ASC, (- (v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((v0.c0 IN (v0.c0, '-1772411879')), 0.965897024562489)) IS TRUE)  as count FROM v0 ORDER BY (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()), ((0.013175579987720565)>=((('}')IS NOT(v0.c0)))) ASC, (- (v0.c0 COLLATE RTRIM)));
SELECT * FROM v0 WHERE (LIKELIHOOD((v0.c0 IN (v0.c0, '-1772411879')), 0.965897024562489)) ORDER BY (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()), ((0.013175579987720565)>=((('}')IS NOT(v0.c0)))) ASC, (- (v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((v0.c0 IN (v0.c0, '-1772411879')), 0.965897024562489)) IS TRUE)  as count FROM v0 ORDER BY (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()), ((0.013175579987720565)>=((('}')IS NOT(v0.c0)))) ASC, (- (v0.c0 COLLATE RTRIM)));
SELECT * FROM v0 WHERE (LIKELIHOOD((v0.c0 IN (v0.c0, '-1772411879')), 0.965897024562489)) ORDER BY (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()), ((0.013175579987720565)>=((('}')IS NOT(v0.c0)))) ASC, (- (v0.c0 COLLATE RTRIM));
SELECT * FROM rt0 WHERE (((((rt0.c0) IS FALSE))>((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))>((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) IS FALSE))>((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))>((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) IS FALSE))>((NOT (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CAST(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER) WHERE (((((rt0.c3)|(v0.c0)))<(rt0.c2 COLLATE BINARY))) ORDER BY CAST(((rt0.c3)IS NOT(NULL)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)|(v0.c0)))<(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CAST(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER) ORDER BY CAST(((rt0.c3)IS NOT(NULL)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CAST(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER) WHERE (((((rt0.c3)|(v0.c0)))<(rt0.c2 COLLATE BINARY))) ORDER BY CAST(((rt0.c3)IS NOT(NULL)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)|(v0.c0)))<(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CAST(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER) ORDER BY CAST(((rt0.c3)IS NOT(NULL)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CAST(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER) WHERE (((((rt0.c3)|(v0.c0)))<(rt0.c2 COLLATE BINARY))) ORDER BY CAST(((rt0.c3)IS NOT(NULL)) AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((('SH')) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((HEX(DISTINCT rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((('SH')) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((HEX(DISTINCT rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((('SH')) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((HEX(DISTINCT rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((('SH')) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((HEX(DISTINCT rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((('SH')) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((HEX(DISTINCT rt0.c2)))));
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (('-348191040', v0.c0, v0.c0)) AND ((v0.c0, v0.c0, NULL))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (('-348191040', v0.c0, v0.c0)) AND ((v0.c0, v0.c0, NULL))) AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (('-348191040', v0.c0, v0.c0)) AND ((v0.c0, v0.c0, NULL))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (('-348191040', v0.c0, v0.c0)) AND ((v0.c0, v0.c0, NULL))) AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (('-348191040', v0.c0, v0.c0)) AND ((v0.c0, v0.c0, NULL))) AS REAL));
SELECT ALL * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY v0.c0 DESC, (((((- (v0.c0)))AND(INSTR(v0.c0, v0.c0))))OR(x'')) ASC  NULLS LAST, JULIANDAY(((v0.c0) NOT NULL), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC, (((((- (v0.c0)))AND(INSTR(v0.c0, v0.c0))))OR(x'')) ASC  NULLS LAST, JULIANDAY(((v0.c0) NOT NULL), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY v0.c0 DESC, (((((- (v0.c0)))AND(INSTR(v0.c0, v0.c0))))OR(x'')) ASC  NULLS LAST, JULIANDAY(((v0.c0) NOT NULL), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC, (((((- (v0.c0)))AND(INSTR(v0.c0, v0.c0))))OR(x'')) ASC  NULLS LAST, JULIANDAY(((v0.c0) NOT NULL), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY v0.c0 DESC, (((((- (v0.c0)))AND(INSTR(v0.c0, v0.c0))))OR(x'')) ASC  NULLS LAST, JULIANDAY(((v0.c0) NOT NULL), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ASC  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN '-1973008930' END)IS NOT(CAST(v0.c0 AS BLOB)))) ORDER BY ((((CAST(v0.c0 AS INTEGER))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x''))))))OR(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN '-1973008930' END)IS NOT(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c0 AS INTEGER))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x''))))))OR(v0.c0)) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN '-1973008930' END)IS NOT(CAST(v0.c0 AS BLOB)))) ORDER BY ((((CAST(v0.c0 AS INTEGER))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x''))))))OR(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN '-1973008930' END)IS NOT(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c0 AS INTEGER))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x''))))))OR(v0.c0)) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN '-1973008930' END)IS NOT(CAST(v0.c0 AS BLOB)))) ORDER BY ((((CAST(v0.c0 AS INTEGER))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x''))))))OR(v0.c0)) DESC;
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL) WHERE ('-720510242');
SELECT SUM(count) FROM (SELECT ALL (('-720510242') IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL) WHERE ('-720510242');
SELECT SUM(count) FROM (SELECT ALL (('-720510242') IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL) WHERE ('-720510242');
SELECT * FROM v0 CROSS JOIN rt0 ON CASE rt0.c3  WHEN rt0.c2 THEN v0.c0 END COLLATE NOCASE WHERE (((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<>(((('{}')) BETWEEN ((rt0.c1)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<>(((('{}')) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CASE rt0.c3  WHEN rt0.c2 THEN v0.c0 END COLLATE NOCASE);
SELECT * FROM v0 CROSS JOIN rt0 ON CASE rt0.c3  WHEN rt0.c2 THEN v0.c0 END COLLATE NOCASE WHERE (((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<>(((('{}')) BETWEEN ((rt0.c1)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<>(((('{}')) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CASE rt0.c3  WHEN rt0.c2 THEN v0.c0 END COLLATE NOCASE);
SELECT * FROM v0 CROSS JOIN rt0 ON CASE rt0.c3  WHEN rt0.c2 THEN v0.c0 END COLLATE NOCASE WHERE (((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<>(((('{}')) BETWEEN ((rt0.c1)) AND ((rt0.c3))))));
SELECT ALL * FROM v0, rt0 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c3, rt0.c3, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c1, v0.c0, '}3yFb.ꃞ', rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c3, rt0.c0, v0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, rt0.c1, rt0.c3, rt0.c3, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c1, v0.c0, '}3yFb.ꃞ', rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c3, rt0.c0, v0.c0))) AS REAL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c3, rt0.c3, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c1, v0.c0, '}3yFb.ꃞ', rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c3, rt0.c0, v0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, rt0.c1, rt0.c3, rt0.c3, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c1, v0.c0, '}3yFb.ꃞ', rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c3, rt0.c0, v0.c0))) AS REAL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c3, rt0.c3, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c1, v0.c0, '}3yFb.ꃞ', rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c3, rt0.c0, v0.c0))) AS REAL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON (((((v0.c0))>((rt0.c0)))) NOTNULL) WHERE (-1.305680692E9);
SELECT SUM(count) FROM (SELECT ((-1.305680692E9) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((((v0.c0))>((rt0.c0)))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON (((((v0.c0))>((rt0.c0)))) NOTNULL) WHERE (-1.305680692E9);
SELECT SUM(count) FROM (SELECT ((-1.305680692E9) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((((v0.c0))>((rt0.c0)))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON (((((v0.c0))>((rt0.c0)))) NOTNULL) WHERE (-1.305680692E9);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN (0.8653630703948367)) IN ())) ORDER BY rt0.c2 COLLATE NOCASE COLLATE NOCASE, ((((rt0.c3)|(rt0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (0.8653630703948367)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE NOCASE COLLATE NOCASE, ((((rt0.c3)|(rt0.c0))) NOTNULL) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN (0.8653630703948367)) IN ())) ORDER BY rt0.c2 COLLATE NOCASE COLLATE NOCASE, ((((rt0.c3)|(rt0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (0.8653630703948367)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE NOCASE COLLATE NOCASE, ((((rt0.c3)|(rt0.c0))) NOTNULL) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN (0.8653630703948367)) IN ())) ORDER BY rt0.c2 COLLATE NOCASE COLLATE NOCASE, ((((rt0.c3)|(rt0.c0))) NOTNULL) ASC;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON x'' WHERE (json_extract((rt0.c1 IN ()), ((v0.c0)<=(rt0.c1)))) ORDER BY ((((rt0.c3))<((rt0.c3))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_extract((rt0.c1 IN ()), ((v0.c0)<=(rt0.c1)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON x'' ORDER BY ((((rt0.c3))<((rt0.c3))) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON x'' WHERE (json_extract((rt0.c1 IN ()), ((v0.c0)<=(rt0.c1)))) ORDER BY ((((rt0.c3))<((rt0.c3))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_extract((rt0.c1 IN ()), ((v0.c0)<=(rt0.c1)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON x'' ORDER BY ((((rt0.c3))<((rt0.c3))) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON x'' WHERE (json_extract((rt0.c1 IN ()), ((v0.c0)<=(rt0.c1)))) ORDER BY ((((rt0.c3))<((rt0.c3))) IN ())  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)OR(((rt0.c0) NOTNULL))))OR(((rt0.c3) ISNULL)))) ORDER BY CAST(((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)) AS INTEGER), rt0.c0, (json_valid(rt0.c3) IN (CASE rt0.c0  WHEN rt0.c2 THEN '*~' WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE BINARY)OR(((rt0.c0) NOTNULL))))OR(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)) AS INTEGER), rt0.c0, (json_valid(rt0.c3) IN (CASE rt0.c0  WHEN rt0.c2 THEN '*~' WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)OR(((rt0.c0) NOTNULL))))OR(((rt0.c3) ISNULL)))) ORDER BY CAST(((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)) AS INTEGER), rt0.c0, (json_valid(rt0.c3) IN (CASE rt0.c0  WHEN rt0.c2 THEN '*~' WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE BINARY)OR(((rt0.c0) NOTNULL))))OR(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)) AS INTEGER), rt0.c0, (json_valid(rt0.c3) IN (CASE rt0.c0  WHEN rt0.c2 THEN '*~' WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)OR(((rt0.c0) NOTNULL))))OR(((rt0.c3) ISNULL)))) ORDER BY CAST(((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)) AS INTEGER), rt0.c0, (json_valid(rt0.c3) IN (CASE rt0.c0  WHEN rt0.c2 THEN '*~' WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (0.9616610327796953 COLLATE NOCASE) ORDER BY (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE '' END IN ((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.9616610327796953 COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE '' END IN ((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.9616610327796953 COLLATE NOCASE) ORDER BY (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE '' END IN ((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.9616610327796953 COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE '' END IN ((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.9616610327796953 COLLATE NOCASE) ORDER BY (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE '' END IN ((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (CAST(UPPER(DISTINCT rt0.c1) AS INTEGER)) ORDER BY (- (rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(DISTINCT rt0.c1) AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (rt0.c1)));
SELECT * FROM rt0, v0 WHERE (CAST(UPPER(DISTINCT rt0.c1) AS INTEGER)) ORDER BY (- (rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(DISTINCT rt0.c1) AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (rt0.c1)));
SELECT * FROM rt0, v0 WHERE (CAST(UPPER(DISTINCT rt0.c1) AS INTEGER)) ORDER BY (- (rt0.c1));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((CASE WHEN '2(Th' THEN rt0.c0 ELSE rt0.c2 END)/(((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)))) WHERE (((((NULL) BETWEEN (v0.c0) AND (rt0.c2)))>>((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (v0.c0) AND (rt0.c2)))>>((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((CASE WHEN '2(Th' THEN rt0.c0 ELSE rt0.c2 END)/(((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((CASE WHEN '2(Th' THEN rt0.c0 ELSE rt0.c2 END)/(((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)))) WHERE (((((NULL) BETWEEN (v0.c0) AND (rt0.c2)))>>((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (v0.c0) AND (rt0.c2)))>>((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((CASE WHEN '2(Th' THEN rt0.c0 ELSE rt0.c2 END)/(((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((CASE WHEN '2(Th' THEN rt0.c0 ELSE rt0.c2 END)/(((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)))) WHERE (((((NULL) BETWEEN (v0.c0) AND (rt0.c2)))>>((NOT (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (NULLIF(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)), rt0.c3)) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)), rt0.c3)) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (NULLIF(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)), rt0.c3)) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)), rt0.c3)) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (NULLIF(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)), rt0.c3)) ORDER BY NULL DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)%((((v0.c0))>=((v0.c0)))))) ORDER BY (((v0.c0 IN ())) BETWEEN (IFNULL(DISTINCT v0.c0, v0.c0)) AND (load_extension(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)%((((v0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) BETWEEN (IFNULL(DISTINCT v0.c0, v0.c0)) AND (load_extension(v0.c0)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)%((((v0.c0))>=((v0.c0)))))) ORDER BY (((v0.c0 IN ())) BETWEEN (IFNULL(DISTINCT v0.c0, v0.c0)) AND (load_extension(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)%((((v0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) BETWEEN (IFNULL(DISTINCT v0.c0, v0.c0)) AND (load_extension(v0.c0)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)%((((v0.c0))>=((v0.c0)))))) ORDER BY (((v0.c0 IN ())) BETWEEN (IFNULL(DISTINCT v0.c0, v0.c0)) AND (load_extension(v0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (json_insert(v0.c0, v0.c0, v0.c0)) AND (((v0.c0)GLOB(v0.c0))))) ORDER BY CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (json_insert(v0.c0, v0.c0, v0.c0)) AND (((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (json_insert(v0.c0, v0.c0, v0.c0)) AND (((v0.c0)GLOB(v0.c0))))) ORDER BY CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (json_insert(v0.c0, v0.c0, v0.c0)) AND (((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (json_insert(v0.c0, v0.c0, v0.c0)) AND (((v0.c0)GLOB(v0.c0))))) ORDER BY CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (((v0.c0 COLLATE NOCASE)<=((- (rt0.c3))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((0x4c416050)) AND ((rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)<=((- (rt0.c3))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c3)) NOT BETWEEN ((0X4c416050)) AND ((rt0.c3 COLLATE NOCASE))));
SELECT ALL * FROM rt0, v0 WHERE (((v0.c0 COLLATE NOCASE)<=((- (rt0.c3))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((0x4c416050)) AND ((rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)<=((- (rt0.c3))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c3)) NOT BETWEEN ((0X4c416050)) AND ((rt0.c3 COLLATE NOCASE))));
SELECT ALL * FROM rt0, v0 WHERE (((v0.c0 COLLATE NOCASE)<=((- (rt0.c3))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((0x4c416050)) AND ((rt0.c3 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (- ((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3))))) WHERE (((NULL)!=(rt0.c1)) COLLATE NOCASE) ORDER BY COALESCE(CASE WHEN rt0.c0 THEN rt0.c0 END, CAST(rt0.c3 AS TEXT)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)!=(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (- ((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3))))) ORDER BY COALESCE(CASE WHEN rt0.c0 THEN rt0.c0 END, CAST(rt0.c3 AS TEXT)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (- ((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3))))) WHERE (((NULL)!=(rt0.c1)) COLLATE NOCASE) ORDER BY COALESCE(CASE WHEN rt0.c0 THEN rt0.c0 END, CAST(rt0.c3 AS TEXT)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)!=(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (- ((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3))))) ORDER BY COALESCE(CASE WHEN rt0.c0 THEN rt0.c0 END, CAST(rt0.c3 AS TEXT)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (- ((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3))))) WHERE (((NULL)!=(rt0.c1)) COLLATE NOCASE) ORDER BY COALESCE(CASE WHEN rt0.c0 THEN rt0.c0 END, CAST(rt0.c3 AS TEXT)) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (((LIKELIHOOD(v0.c0, 0.010236500620444344)) NOT BETWEEN (((v0.c0) BETWEEN (0.5419536718877981) AND (v0.c0))) AND (v0.c0 COLLATE NOCASE))) ORDER BY NULL COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(v0.c0, 0.010236500620444344)) NOT BETWEEN (((v0.c0) BETWEEN (0.5419536718877981) AND (v0.c0))) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY NULL COLLATE RTRIM ASC);
SELECT * FROM v0 WHERE (((LIKELIHOOD(v0.c0, 0.010236500620444344)) NOT BETWEEN (((v0.c0) BETWEEN (0.5419536718877981) AND (v0.c0))) AND (v0.c0 COLLATE NOCASE))) ORDER BY NULL COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(v0.c0, 0.010236500620444344)) NOT BETWEEN (((v0.c0) BETWEEN (0.5419536718877981) AND (v0.c0))) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY NULL COLLATE RTRIM ASC);
SELECT * FROM v0 WHERE (((LIKELIHOOD(v0.c0, 0.010236500620444344)) NOT BETWEEN (((v0.c0) BETWEEN (0.5419536718877981) AND (v0.c0))) AND (v0.c0 COLLATE NOCASE))) ORDER BY NULL COLLATE RTRIM ASC;
SELECT ALL * FROM rt0 WHERE (CAST(json(rt0.c3) AS TEXT)) ORDER BY CASE (((rt0.c3, rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c3, x'b635')) AND ((rt0.c2, rt0.c1, rt0.c3)))  WHEN ((rt0.c2)%(rt0.c2)) THEN ('iS82f' IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(json(rt0.c3) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c3, rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c3, x'b635')) AND ((rt0.c2, rt0.c1, rt0.c3)))  WHEN ((rt0.c2)%(rt0.c2)) THEN ('iS82f' IN ()) END DESC);
SELECT ALL * FROM rt0 WHERE (CAST(json(rt0.c3) AS TEXT)) ORDER BY CASE (((rt0.c3, rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c3, x'b635')) AND ((rt0.c2, rt0.c1, rt0.c3)))  WHEN ((rt0.c2)%(rt0.c2)) THEN ('iS82f' IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(json(rt0.c3) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c3, rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c3, x'b635')) AND ((rt0.c2, rt0.c1, rt0.c3)))  WHEN ((rt0.c2)%(rt0.c2)) THEN ('iS82f' IN ()) END DESC);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON TOTAL_CHANGES() WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) COLLATE BINARY) ORDER BY PRINTF(CAST(rt0.c3 AS NUMERIC)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) COLLATE BINARY) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON TOTAL_CHANGES() ORDER BY PRINTF(CAST(rt0.c3 AS NUMERIC)) DESC  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON TOTAL_CHANGES() WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) COLLATE BINARY) ORDER BY PRINTF(CAST(rt0.c3 AS NUMERIC)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) COLLATE BINARY) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON TOTAL_CHANGES() ORDER BY PRINTF(CAST(rt0.c3 AS NUMERIC)) DESC  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON TOTAL_CHANGES() WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) COLLATE BINARY) ORDER BY PRINTF(CAST(rt0.c3 AS NUMERIC)) DESC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (((NOT (rt0.c2)) IN ())) ORDER BY QUOTE(((((v0.c0)OR(rt0.c0)))OR(rt0.c2)))  NULLS FIRST, (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))OR(CASE v0.c0  WHEN 0.27483287868297324 THEN rt0.c2 ELSE rt0.c3 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST, 0.03489376266972699 DESC;
SELECT SUM(count) FROM (SELECT ((((NOT (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY QUOTE(((((v0.c0)OR(rt0.c0)))OR(rt0.c2)))  NULLS FIRST, (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))OR(CASE v0.c0  WHEN 0.27483287868297324 THEN rt0.c2 ELSE rt0.c3 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST, 0.03489376266972699 DESC);
SELECT * FROM rt0, v0 WHERE (((NOT (rt0.c2)) IN ())) ORDER BY QUOTE(((((v0.c0)OR(rt0.c0)))OR(rt0.c2)))  NULLS FIRST, (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))OR(CASE v0.c0  WHEN 0.27483287868297324 THEN rt0.c2 ELSE rt0.c3 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST, 0.03489376266972699 DESC;
SELECT SUM(count) FROM (SELECT ((((NOT (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY QUOTE(((((v0.c0)OR(rt0.c0)))OR(rt0.c2)))  NULLS FIRST, (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))OR(CASE v0.c0  WHEN 0.27483287868297324 THEN rt0.c2 ELSE rt0.c3 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST, 0.03489376266972699 DESC);
SELECT * FROM rt0, v0 WHERE (((NOT (rt0.c2)) IN ())) ORDER BY QUOTE(((((v0.c0)OR(rt0.c0)))OR(rt0.c2)))  NULLS FIRST, (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))OR(CASE v0.c0  WHEN 0.27483287868297324 THEN rt0.c2 ELSE rt0.c3 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST, 0.03489376266972699 DESC;
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ()))<=(rt0.c2))) ORDER BY CASE (rt0.c3 IN (rt0.c2))  WHEN ((rt0.c3) IS FALSE) THEN (('-674394807') NOT NULL) WHEN ((rt0.c2) NOT BETWEEN ('t夙ᠠe') AND (rt0.c1)) THEN NULL WHEN rt0.c1 COLLATE BINARY THEN CHAR(rt0.c2, rt0.c3, rt0.c2) ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))<=(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c3 IN (rt0.c2))  WHEN ((rt0.c3) IS FALSE) THEN (('-674394807') NOT NULL) WHEN ((rt0.c2) NOT BETWEEN ('t夙ᠠe') AND (rt0.c1)) THEN NULL WHEN rt0.c1 COLLATE BINARY THEN CHAR(rt0.c2, rt0.c3, rt0.c2) ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) END ASC);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ()))<=(rt0.c2))) ORDER BY CASE (rt0.c3 IN (rt0.c2))  WHEN ((rt0.c3) IS FALSE) THEN (('-674394807') NOT NULL) WHEN ((rt0.c2) NOT BETWEEN ('t夙ᠠe') AND (rt0.c1)) THEN NULL WHEN rt0.c1 COLLATE BINARY THEN CHAR(rt0.c2, rt0.c3, rt0.c2) ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))<=(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c3 IN (rt0.c2))  WHEN ((rt0.c3) IS FALSE) THEN (('-674394807') NOT NULL) WHEN ((rt0.c2) NOT BETWEEN ('t夙ᠠe') AND (rt0.c1)) THEN NULL WHEN rt0.c1 COLLATE BINARY THEN CHAR(rt0.c2, rt0.c3, rt0.c2) ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) END ASC);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ()))<=(rt0.c2))) ORDER BY CASE (rt0.c3 IN (rt0.c2))  WHEN ((rt0.c3) IS FALSE) THEN (('-674394807') NOT NULL) WHEN ((rt0.c2) NOT BETWEEN ('t夙ᠠe') AND (rt0.c1)) THEN NULL WHEN rt0.c1 COLLATE BINARY THEN CHAR(rt0.c2, rt0.c3, rt0.c2) ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) END ASC;
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN ((v0.c0) ISNULL) THEN v0.c0 ELSE COALESCE(v0.c0, v0.c0, v0.c0, v0.c0) END) ORDER BY (((~ (v0.c0)))IS(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, ((v0.c0)<=(v0.c0)) COLLATE RTRIM  NULLS LAST, (NOT ((NOT (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c0 AS INTEGER)  WHEN ((v0.c0) ISNULL) THEN v0.c0 ELSE COALESCE(v0.c0, v0.c0, v0.c0, v0.c0) END) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c0)))IS(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, ((v0.c0)<=(v0.c0)) COLLATE RTRIM  NULLS LAST, (NOT ((NOT (v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN ((v0.c0) ISNULL) THEN v0.c0 ELSE COALESCE(v0.c0, v0.c0, v0.c0, v0.c0) END) ORDER BY (((~ (v0.c0)))IS(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, ((v0.c0)<=(v0.c0)) COLLATE RTRIM  NULLS LAST, (NOT ((NOT (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c0 AS INTEGER)  WHEN ((v0.c0) ISNULL) THEN v0.c0 ELSE COALESCE(v0.c0, v0.c0, v0.c0, v0.c0) END) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c0)))IS(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, ((v0.c0)<=(v0.c0)) COLLATE RTRIM  NULLS LAST, (NOT ((NOT (v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN ((v0.c0) ISNULL) THEN v0.c0 ELSE COALESCE(v0.c0, v0.c0, v0.c0, v0.c0) END) ORDER BY (((~ (v0.c0)))IS(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, ((v0.c0)<=(v0.c0)) COLLATE RTRIM  NULLS LAST, (NOT ((NOT (v0.c0)))) ASC;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE RTRIM, (~ (v0.c0)), CAST(v0.c0 AS INTEGER)))<=(((('0.25686590320095926')-(v0.c0)), (NOT (v0.c0)), CAST(v0.c0 AS BLOB))))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE RTRIM, (~ (v0.c0)), CAST(v0.c0 AS INTEGER)))<=(((('0.25686590320095926')-(v0.c0)), (NOT (v0.c0)), CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE RTRIM, (~ (v0.c0)), CAST(v0.c0 AS INTEGER)))<=(((('0.25686590320095926')-(v0.c0)), (NOT (v0.c0)), CAST(v0.c0 AS BLOB))))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE RTRIM, (~ (v0.c0)), CAST(v0.c0 AS INTEGER)))<=(((('0.25686590320095926')-(v0.c0)), (NOT (v0.c0)), CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE RTRIM, (~ (v0.c0)), CAST(v0.c0 AS INTEGER)))<=(((('0.25686590320095926')-(v0.c0)), (NOT (v0.c0)), CAST(v0.c0 AS BLOB))))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL) DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (((CASE rt0.c0  WHEN v0.c0 THEN 0.8221465448762157 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN v0.c0 THEN 0.8221465448762157 END) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((CASE rt0.c0  WHEN v0.c0 THEN 0.8221465448762157 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN v0.c0 THEN 0.8221465448762157 END) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((CASE rt0.c0  WHEN v0.c0 THEN 0.8221465448762157 END) NOT NULL));
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM) ORDER BY ((v0.c0)IS(v0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)IS(v0.c0)) COLLATE NOCASE);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM) ORDER BY ((v0.c0)IS(v0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)IS(v0.c0)) COLLATE NOCASE);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM) ORDER BY ((v0.c0)IS(v0.c0)) COLLATE NOCASE;
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END) IS FALSE) WHERE (((LIKELIHOOD(rt0.c2, 0.27459539609947514)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt0.c2, 0.27459539609947514)) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END) IS FALSE));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END) IS FALSE) WHERE (((LIKELIHOOD(rt0.c2, 0.27459539609947514)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt0.c2, 0.27459539609947514)) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END) IS FALSE));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END) IS FALSE) WHERE (((LIKELIHOOD(rt0.c2, 0.27459539609947514)) IS TRUE));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0)==(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)==(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0)==(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)==(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0)==(rt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()));
SELECT * FROM rt0 WHERE ((~ (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (rt0.c0)));
SELECT COUNT(*) FROM rt0 WHERE (((x'')>(NULL)));
SELECT SUM(count) FROM (SELECT ((((x'')>(NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((x'')>(NULL)));
SELECT SUM(count) FROM (SELECT ((((x'')>(NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((x'')>(NULL)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON CAST(v0.c0 AS INTEGER) COLLATE BINARY WHERE (CAST((+ (rt0.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c3)) AS TEXT)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON CAST(v0.c0 AS INTEGER) COLLATE BINARY);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON CAST(v0.c0 AS INTEGER) COLLATE BINARY WHERE (CAST((+ (rt0.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c3)) AS TEXT)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON CAST(v0.c0 AS INTEGER) COLLATE BINARY);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON CAST(v0.c0 AS INTEGER) COLLATE BINARY WHERE (CAST((+ (rt0.c3)) AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL))<<((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))<<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL))<<((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))<<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL))<<((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('0.16621130425646224') ORDER BY CAST(rt0.c3 AS BLOB) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (('0.16621130425646224') IS TRUE)  as count FROM v0 NOT INDEXED, rt0 ORDER BY CAST(rt0.c3 AS BLOB) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('0.16621130425646224') ORDER BY CAST(rt0.c3 AS BLOB) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (('0.16621130425646224') IS TRUE)  as count FROM v0 NOT INDEXED, rt0 ORDER BY CAST(rt0.c3 AS BLOB) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('0.16621130425646224') ORDER BY CAST(rt0.c3 AS BLOB) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((x'')||(((rt0.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')||(((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((x'')||(((rt0.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')||(((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((x'')||(((rt0.c3) IS FALSE))));
SELECT ALL COUNT(*) FROM v0 WHERE (HEX(DISTINCT (v0.c0 IN (v0.c0, 0x736e86d7)))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (v0.c0 IN (v0.c0, 0x736e86d7)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (HEX(DISTINCT (v0.c0 IN (v0.c0, 0x736e86d7)))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (v0.c0 IN (v0.c0, 0x736e86d7)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (HEX(DISTINCT (v0.c0 IN (v0.c0, 0x736e86d7)))) ORDER BY v0.c0  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE ((('')OR((rt0.c3 IN (v0.c0))))) ORDER BY rt0.c3 ASC;
SELECT SUM(count) FROM (SELECT (((('')OR((rt0.c3 IN (v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c3 ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((('')OR((rt0.c3 IN (v0.c0))))) ORDER BY rt0.c3 ASC;
SELECT SUM(count) FROM (SELECT (((('')OR((rt0.c3 IN (v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c3 ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((('')OR((rt0.c3 IN (v0.c0))))) ORDER BY rt0.c3 ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN (MIN(v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (MIN(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN (MIN(v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (MIN(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN (MIN(v0.c0, v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0) NOTNULL))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0) NOTNULL))))AND(((v0.c0)IS('-1200752969')))))OR((NOT (v0.c0))))) ORDER BY (((NULL)<<(v0.c0)) IN (x'', '')) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0) NOTNULL))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0) NOTNULL))))AND(((v0.c0)IS('-1200752969')))))OR((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((NULL)<<(v0.c0)) IN (x'', '')) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0) NOTNULL))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0) NOTNULL))))AND(((v0.c0)IS('-1200752969')))))OR((NOT (v0.c0))))) ORDER BY (((NULL)<<(v0.c0)) IN (x'', '')) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0) NOTNULL))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0) NOTNULL))))AND(((v0.c0)IS('-1200752969')))))OR((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((NULL)<<(v0.c0)) IN (x'', '')) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0) NOTNULL))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0) NOTNULL))))AND(((v0.c0)IS('-1200752969')))))OR((NOT (v0.c0))))) ORDER BY (((NULL)<<(v0.c0)) IN (x'', '')) ASC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(rt0.c3 AS BLOB)) NOTNULL)) ORDER BY ((((rt0.c0) BETWEEN ('0.6399112910971193') AND (rt0.c0))) NOT BETWEEN (((v0.c0)>>(rt0.c2))) AND (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 0.4938647143109891 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0) BETWEEN ('0.6399112910971193') AND (rt0.c0))) NOT BETWEEN (((v0.c0)>>(rt0.c2))) AND (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 0.4938647143109891 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(rt0.c3 AS BLOB)) NOTNULL)) ORDER BY ((((rt0.c0) BETWEEN ('0.6399112910971193') AND (rt0.c0))) NOT BETWEEN (((v0.c0)>>(rt0.c2))) AND (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 0.4938647143109891 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0) BETWEEN ('0.6399112910971193') AND (rt0.c0))) NOT BETWEEN (((v0.c0)>>(rt0.c2))) AND (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 0.4938647143109891 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(rt0.c3 AS BLOB)) NOTNULL)) ORDER BY ((((rt0.c0) BETWEEN ('0.6399112910971193') AND (rt0.c0))) NOT BETWEEN (((v0.c0)>>(rt0.c2))) AND (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 0.4938647143109891 END COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1))>=((rt0.c3)))))<((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c1 END) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1))>=((rt0.c3)))))<((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c1 END) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1))>=((rt0.c3)))))<((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c1 END) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1))>=((rt0.c3)))))<((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c1 END) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1))>=((rt0.c3)))))<((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c1 END) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0))) NOT BETWEEN ((- (rt0.c3))) AND ('-318857985')));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0))) NOT BETWEEN ((- (rt0.c3))) AND ('-318857985'))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0))) NOT BETWEEN ((- (rt0.c3))) AND ('-318857985')));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0))) NOT BETWEEN ((- (rt0.c3))) AND ('-318857985'))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0))) NOT BETWEEN ((- (rt0.c3))) AND ('-318857985')));
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0)!=(rt0.c2))) BETWEEN (((rt0.c3) IS TRUE)) AND (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)!=(rt0.c2))) BETWEEN (((rt0.c3) IS TRUE)) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0)!=(rt0.c2))) BETWEEN (((rt0.c3) IS TRUE)) AND (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)!=(rt0.c2))) BETWEEN (((rt0.c3) IS TRUE)) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0)!=(rt0.c2))) BETWEEN (((rt0.c3) IS TRUE)) AND (CAST(v0.c0 AS NUMERIC))));
SELECT * FROM rt0 WHERE ((~ ((((rt0.c0))>=((rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0))>=((rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ ((((rt0.c0))>=((rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0))>=((rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ ((((rt0.c0))>=((rt0.c3))))));
SELECT * FROM rt0 WHERE (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))<>((0x2fd575ed))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))<>((0X2fd575ed)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))<>((0x2fd575ed))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))<>((0X2fd575ed)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))<>((0x2fd575ed))));
SELECT COUNT(*) FROM rt0 WHERE (((NULL) NOT BETWEEN (((rt0.c2)||(rt0.c1))) AND ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((rt0.c2)||(rt0.c1))) AND ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((NULL) NOT BETWEEN (((rt0.c2)||(rt0.c1))) AND ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((rt0.c2)||(rt0.c1))) AND ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((NULL) NOT BETWEEN (((rt0.c2)||(rt0.c1))) AND ((~ (rt0.c0)))));
SELECT * FROM v0, rt0 WHERE (rt0.c3) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c0);
SELECT * FROM v0, rt0 WHERE (rt0.c3) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c0);
SELECT * FROM v0, rt0 WHERE (rt0.c3) ORDER BY rt0.c0;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c2)>(rt0.c1)) AS REAL)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)>(rt0.c1)) AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c2)>(rt0.c1)) AS REAL)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)>(rt0.c1)) AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c2)>(rt0.c1)) AS REAL)) ORDER BY rt0.c1;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c3 IN ()) AS INTEGER) WHERE ((CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END IN (x'', ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0))))) ORDER BY CASE (rt0.c0 IN ())  WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)) THEN (rt0.c3 IN (rt0.c0, v0.c0)) END  NULLS FIRST, COALESCE(((rt0.c1)<<(0.6477367443890815)), ((((x'')OR(NULL)))OR(v0.c0))) ASC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c3))) NOT BETWEEN (v0.c0) AND (v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END IN (x'', ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c3 IN ()) AS INTEGER) ORDER BY CASE (rt0.c0 IN ())  WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)) THEN (rt0.c3 IN (rt0.c0, v0.c0)) END  NULLS FIRST, COALESCE(((rt0.c1)<<(0.6477367443890815)), ((((x'')OR(NULL)))OR(v0.c0))) ASC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c3))) NOT BETWEEN (v0.c0) AND (v0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c3 IN ()) AS INTEGER) WHERE ((CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END IN (x'', ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0))))) ORDER BY CASE (rt0.c0 IN ())  WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)) THEN (rt0.c3 IN (rt0.c0, v0.c0)) END  NULLS FIRST, COALESCE(((rt0.c1)<<(0.6477367443890815)), ((((x'')OR(NULL)))OR(v0.c0))) ASC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c3))) NOT BETWEEN (v0.c0) AND (v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END IN (x'', ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c3 IN ()) AS INTEGER) ORDER BY CASE (rt0.c0 IN ())  WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)) THEN (rt0.c3 IN (rt0.c0, v0.c0)) END  NULLS FIRST, COALESCE(((rt0.c1)<<(0.6477367443890815)), ((((x'')OR(NULL)))OR(v0.c0))) ASC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c3))) NOT BETWEEN (v0.c0) AND (v0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c3 IN ()) AS INTEGER) WHERE ((CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END IN (x'', ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0))))) ORDER BY CASE (rt0.c0 IN ())  WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)) THEN (rt0.c3 IN (rt0.c0, v0.c0)) END  NULLS FIRST, COALESCE(((rt0.c1)<<(0.6477367443890815)), ((((x'')OR(NULL)))OR(v0.c0))) ASC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c3))) NOT BETWEEN (v0.c0) AND (v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((rt0.c3)&(rt0.c0))) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((rt0.c3)&(rt0.c0))) AND (x''))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((rt0.c3)&(rt0.c0))) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((rt0.c3)&(rt0.c0))) AND (x''))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((rt0.c3)&(rt0.c0))) AND (x'')));
SELECT * FROM rt0, v0 WHERE (x'') ORDER BY (((rt0.c0 IN ())) IS FALSE) DESC  NULLS FIRST, CASE WHEN TRIM(DISTINCT rt0.c0, x'87b7') THEN (((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3)) AND ((x'', rt0.c3, rt0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, v0 NOT INDEXED ORDER BY (((rt0.c0 IN ())) IS FALSE) DESC  NULLS FIRST, CASE WHEN TRIM(DISTINCT rt0.c0, x'87b7') THEN (((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3)) AND ((x'', rt0.c3, rt0.c0))) END);
SELECT * FROM rt0, v0 WHERE (x'') ORDER BY (((rt0.c0 IN ())) IS FALSE) DESC  NULLS FIRST, CASE WHEN TRIM(DISTINCT rt0.c0, x'87b7') THEN (((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3)) AND ((x'', rt0.c3, rt0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, v0 NOT INDEXED ORDER BY (((rt0.c0 IN ())) IS FALSE) DESC  NULLS FIRST, CASE WHEN TRIM(DISTINCT rt0.c0, x'87b7') THEN (((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3)) AND ((x'', rt0.c3, rt0.c0))) END);
SELECT * FROM rt0, v0 WHERE (x'') ORDER BY (((rt0.c0 IN ())) IS FALSE) DESC  NULLS FIRST, CASE WHEN TRIM(DISTINCT rt0.c0, x'87b7') THEN (((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3)) AND ((x'', rt0.c3, rt0.c0))) END;
SELECT * FROM rt0, v0 WHERE ((((v0.c0)=(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)=(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((v0.c0)=(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)=(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((v0.c0)=(rt0.c0)) IN ()));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0) IS FALSE) ELSE ((v0.c0)IS NOT(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN v0.c0 WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0) IS FALSE) ELSE ((v0.c0)IS NOT(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0) IS FALSE) ELSE ((v0.c0)IS NOT(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN v0.c0 WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0) IS FALSE) ELSE ((v0.c0)IS NOT(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0) IS FALSE) ELSE ((v0.c0)IS NOT(v0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c0)) AND (((NOT (v0.c0)))))) ORDER BY ((-1e500) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c0)) AND (((NOT (v0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((-1e500) ISNULL));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c0)) AND (((NOT (v0.c0)))))) ORDER BY ((-1e500) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c0)) AND (((NOT (v0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((-1e500) ISNULL));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c0)) AND (((NOT (v0.c0)))))) ORDER BY ((-1e500) ISNULL);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC));
SELECT ALL * FROM rt0 WHERE (json_array_length(((rt0.c2) IS TRUE), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((rt0.c2) IS TRUE), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (json_array_length(((rt0.c2) IS TRUE), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((rt0.c2) IS TRUE), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM v0 WHERE (((((((((x'')OR(CAST(v0.c0 AS REAL))))AND(CAST(v0.c0 AS REAL))))AND(v0.c0)))AND(((v0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(CAST(v0.c0 AS REAL))))AND(CAST(v0.c0 AS REAL))))AND(v0.c0)))AND(((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((x'')OR(CAST(v0.c0 AS REAL))))AND(CAST(v0.c0 AS REAL))))AND(v0.c0)))AND(((v0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(CAST(v0.c0 AS REAL))))AND(CAST(v0.c0 AS REAL))))AND(v0.c0)))AND(((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((x'')OR(CAST(v0.c0 AS REAL))))AND(CAST(v0.c0 AS REAL))))AND(v0.c0)))AND(((v0.c0)*(v0.c0)))));
SELECT * FROM v0, rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2) IS FALSE)))) ORDER BY ((((rt0.c2) NOT NULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2) NOT NULL)) IS TRUE)  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2) IS FALSE)))) ORDER BY ((((rt0.c2) NOT NULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2) NOT NULL)) IS TRUE)  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2) IS FALSE)))) ORDER BY ((((rt0.c2) NOT NULL)) IS TRUE)  NULLS LAST;
SELECT ALL * FROM v0 WHERE (x'' COLLATE BINARY) ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (x'' COLLATE BINARY) ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (x'' COLLATE BINARY) ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE)  NULLS LAST;
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((NULL IN ()));
SELECT COUNT(*) FROM v0, rt0 WHERE (x'') ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY NULL);
SELECT COUNT(*) FROM v0, rt0 WHERE (x'') ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY NULL);
SELECT COUNT(*) FROM v0, rt0 WHERE (x'') ORDER BY NULL;
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (NOT ((((rt0.c3))=((NULL))))) WHERE ((((((rt0.c1, 0.980289930339394, rt0.c1))<((v0.c0, rt0.c2, rt0.c0)))) BETWEEN (NULLIF(rt0.c0, rt0.c3)) AND (TRIM(DISTINCT rt0.c3, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, 0.980289930339394, rt0.c1))<((v0.c0, rt0.c2, rt0.c0)))) BETWEEN (NULLIF(rt0.c0, rt0.c3)) AND (TRIM(DISTINCT rt0.c3, rt0.c2)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (NOT ((((rt0.c3))=((NULL))))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (NOT ((((rt0.c3))=((NULL))))) WHERE ((((((rt0.c1, 0.980289930339394, rt0.c1))<((v0.c0, rt0.c2, rt0.c0)))) BETWEEN (NULLIF(rt0.c0, rt0.c3)) AND (TRIM(DISTINCT rt0.c3, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, 0.980289930339394, rt0.c1))<((v0.c0, rt0.c2, rt0.c0)))) BETWEEN (NULLIF(rt0.c0, rt0.c3)) AND (TRIM(DISTINCT rt0.c3, rt0.c2)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (NOT ((((rt0.c3))=((NULL))))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (NOT ((((rt0.c3))=((NULL))))) WHERE ((((((rt0.c1, 0.980289930339394, rt0.c1))<((v0.c0, rt0.c2, rt0.c0)))) BETWEEN (NULLIF(rt0.c0, rt0.c3)) AND (TRIM(DISTINCT rt0.c3, rt0.c2))));
SELECT ALL * FROM v0 WHERE (((UNLIKELY(v0.c0)) NOT BETWEEN ((((v0.c0))<=((v0.c0)))) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c0)) NOT BETWEEN ((((v0.c0))<=((v0.c0)))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((UNLIKELY(v0.c0)) NOT BETWEEN ((((v0.c0))<=((v0.c0)))) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c0)) NOT BETWEEN ((((v0.c0))<=((v0.c0)))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((UNLIKELY(v0.c0)) NOT BETWEEN ((((v0.c0))<=((v0.c0)))) AND ((v0.c0 IN ()))));
SELECT ALL * FROM v0 WHERE ((+ (((v0.c0)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((+ (((v0.c0)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((+ (((v0.c0)>>(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE NULL  WHEN 141412798 THEN TRIM(v0.c0) END) ORDER BY COALESCE(v0.c0, ((0Xffffffffba9be541)IS NOT(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN 141412798 THEN TRIM(v0.c0) END) IS TRUE)  as count FROM v0 ORDER BY COALESCE(v0.c0, ((0xffffffffba9be541)IS NOT(v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE NULL  WHEN 141412798 THEN TRIM(v0.c0) END) ORDER BY COALESCE(v0.c0, ((0Xffffffffba9be541)IS NOT(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN 141412798 THEN TRIM(v0.c0) END) IS TRUE)  as count FROM v0 ORDER BY COALESCE(v0.c0, ((0xffffffffba9be541)IS NOT(v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE NULL  WHEN 141412798 THEN TRIM(v0.c0) END) ORDER BY COALESCE(v0.c0, ((0Xffffffffba9be541)IS NOT(v0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((~ (rt0.c1)))AND(NULL)))AND((rt0.c3 IN ())))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c1)))AND(NULL)))AND((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((~ (rt0.c1)))AND(NULL)))AND((rt0.c3 IN ())))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c1)))AND(NULL)))AND((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((~ (rt0.c1)))AND(NULL)))AND((rt0.c3 IN ())))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ('gv?R');
SELECT SUM(count) FROM (SELECT (('gv?R') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('gv?R');
SELECT SUM(count) FROM (SELECT (('gv?R') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('gv?R');
SELECT ALL * FROM v0 WHERE (CAST(x'5262' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'5262' AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(x'5262' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'5262' AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(x'5262' AS REAL));
SELECT COUNT(*) FROM rt0, v0 WHERE (LIKELIHOOD(DISTINCT ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)), 0.30693254014886917)) ORDER BY (((((x'', rt0.c2, 'hR')) NOT BETWEEN ((rt0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, v0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c3)=(rt0.c1))) AND (json_quote(rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)), 0.30693254014886917)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((x'', rt0.c2, 'hR')) NOT BETWEEN ((rt0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, v0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c3)==(rt0.c1))) AND (json_quote(rt0.c3))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (LIKELIHOOD(DISTINCT ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)), 0.30693254014886917)) ORDER BY (((((x'', rt0.c2, 'hR')) NOT BETWEEN ((rt0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, v0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c3)=(rt0.c1))) AND (json_quote(rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)), 0.30693254014886917)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((x'', rt0.c2, 'hR')) NOT BETWEEN ((rt0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, v0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c3)==(rt0.c1))) AND (json_quote(rt0.c3))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (LIKELIHOOD(DISTINCT ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)), 0.30693254014886917)) ORDER BY (((((x'', rt0.c2, 'hR')) NOT BETWEEN ((rt0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, v0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c3)=(rt0.c1))) AND (json_quote(rt0.c3))) ASC;
SELECT * FROM v0 WHERE ((~ (CASE WHEN v0.c0 THEN v0.c0 WHEN 0.8662350251050999 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0 COLLATE NOCASE)OR(((v0.c0)<<(v0.c0)))))AND(((v0.c0)&(v0.c0)))), (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN v0.c0 THEN v0.c0 WHEN 0.8662350251050999 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 COLLATE NOCASE)OR(((v0.c0)<<(v0.c0)))))AND(((v0.c0)&(v0.c0)))), (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((~ (CASE WHEN v0.c0 THEN v0.c0 WHEN 0.8662350251050999 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0 COLLATE NOCASE)OR(((v0.c0)<<(v0.c0)))))AND(((v0.c0)&(v0.c0)))), (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN v0.c0 THEN v0.c0 WHEN 0.8662350251050999 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 COLLATE NOCASE)OR(((v0.c0)<<(v0.c0)))))AND(((v0.c0)&(v0.c0)))), (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((~ (CASE WHEN v0.c0 THEN v0.c0 WHEN 0.8662350251050999 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0 COLLATE NOCASE)OR(((v0.c0)<<(v0.c0)))))AND(((v0.c0)&(v0.c0)))), (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (TYPEOF(DISTINCT v0.c0)))) ORDER BY x'' ASC, 0.5836595352537245 COLLATE BINARY  NULLS FIRST, json_extract(((686930191)|(v0.c0)), (v0.c0 IN ()), ((v0.c0)GLOB(rt0.c3)), (rt0.c2 IN ())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (TYPEOF(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY x'' ASC, 0.5836595352537245 COLLATE BINARY  NULLS FIRST, json_extract(((686930191)|(v0.c0)), (v0.c0 IN ()), ((v0.c0)GLOB(rt0.c3)), (rt0.c2 IN ())) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (TYPEOF(DISTINCT v0.c0)))) ORDER BY x'' ASC, 0.5836595352537245 COLLATE BINARY  NULLS FIRST, json_extract(((686930191)|(v0.c0)), (v0.c0 IN ()), ((v0.c0)GLOB(rt0.c3)), (rt0.c2 IN ())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (TYPEOF(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY x'' ASC, 0.5836595352537245 COLLATE BINARY  NULLS FIRST, json_extract(((686930191)|(v0.c0)), (v0.c0 IN ()), ((v0.c0)GLOB(rt0.c3)), (rt0.c2 IN ())) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (TYPEOF(DISTINCT v0.c0)))) ORDER BY x'' ASC, 0.5836595352537245 COLLATE BINARY  NULLS FIRST, json_extract(((686930191)|(v0.c0)), (v0.c0 IN ()), ((v0.c0)GLOB(rt0.c3)), (rt0.c2 IN ())) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(0.18624831415740772 AS NUMERIC)) ORDER BY (((v0.c0, v0.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB), v0.c0, (v0.c0 IN (v0.c0)))) AND (((('1456674702')>(v0.c0)), (+ (rt0.c0)), ((rt0.c1)%(rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(0.18624831415740772 AS NUMERIC)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c0, v0.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB), v0.c0, (v0.c0 IN (v0.c0)))) AND (((('1456674702')>(v0.c0)), (+ (rt0.c0)), ((rt0.c1)%(rt0.c0))))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(0.18624831415740772 AS NUMERIC)) ORDER BY (((v0.c0, v0.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB), v0.c0, (v0.c0 IN (v0.c0)))) AND (((('1456674702')>(v0.c0)), (+ (rt0.c0)), ((rt0.c1)%(rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(0.18624831415740772 AS NUMERIC)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c0, v0.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB), v0.c0, (v0.c0 IN (v0.c0)))) AND (((('1456674702')>(v0.c0)), (+ (rt0.c0)), ((rt0.c1)%(rt0.c0))))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(0.18624831415740772 AS NUMERIC)) ORDER BY (((v0.c0, v0.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB), v0.c0, (v0.c0 IN (v0.c0)))) AND (((('1456674702')>(v0.c0)), (+ (rt0.c0)), ((rt0.c1)%(rt0.c0))))) DESC;
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0) IS TRUE)))) ORDER BY ((((v0.c0)>(v0.c0)))||((- (v0.c0))))  NULLS LAST, (((x'1753', v0.c0, ((v0.c0)&(v0.c0))))>=((((v0.c0) NOTNULL), CAST(0.359813667080056 AS INTEGER), x'294c'))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0)))||((- (v0.c0))))  NULLS LAST, (((x'1753', v0.c0, ((v0.c0)&(v0.c0))))>=((((v0.c0) NOTNULL), CAST(0.359813667080056 AS INTEGER), x'294c'))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0) IS TRUE)))) ORDER BY ((((v0.c0)>(v0.c0)))||((- (v0.c0))))  NULLS LAST, (((x'1753', v0.c0, ((v0.c0)&(v0.c0))))>=((((v0.c0) NOTNULL), CAST(0.359813667080056 AS INTEGER), x'294c'))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0)))||((- (v0.c0))))  NULLS LAST, (((x'1753', v0.c0, ((v0.c0)&(v0.c0))))>=((((v0.c0) NOTNULL), CAST(0.359813667080056 AS INTEGER), x'294c'))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0) IS TRUE)))) ORDER BY ((((v0.c0)>(v0.c0)))||((- (v0.c0))))  NULLS LAST, (((x'1753', v0.c0, ((v0.c0)&(v0.c0))))>=((((v0.c0) NOTNULL), CAST(0.359813667080056 AS INTEGER), x'294c'))) ASC;
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST('}' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('}' AS BLOB)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST('}' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('}' AS BLOB)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST('}' AS BLOB));
SELECT ALL * FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS REAL));
SELECT ALL * FROM rt0, v0 WHERE (((((((((json_object(0xcec1a64, v0.c0, v0.c0, rt0.c2))AND(CASE WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN NULL END)))AND(v0.c0 COLLATE BINARY)))OR(CAST(rt0.c2 AS REAL))))AND(NULL))) ORDER BY ((rt0.c2 COLLATE RTRIM)>>(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((((((((((json_object(0Xcec1a64, v0.c0, v0.c0, rt0.c2))AND(CASE WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN NULL END)))AND(v0.c0 COLLATE BINARY)))OR(CAST(rt0.c2 AS REAL))))AND(NULL))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c2 COLLATE RTRIM)>>(rt0.c2)));
SELECT ALL * FROM rt0, v0 WHERE (((((((((json_object(0xcec1a64, v0.c0, v0.c0, rt0.c2))AND(CASE WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN NULL END)))AND(v0.c0 COLLATE BINARY)))OR(CAST(rt0.c2 AS REAL))))AND(NULL))) ORDER BY ((rt0.c2 COLLATE RTRIM)>>(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((((((((((json_object(0Xcec1a64, v0.c0, v0.c0, rt0.c2))AND(CASE WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN NULL END)))AND(v0.c0 COLLATE BINARY)))OR(CAST(rt0.c2 AS REAL))))AND(NULL))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c2 COLLATE RTRIM)>>(rt0.c2)));
SELECT ALL * FROM rt0, v0 WHERE (((((((((json_object(0xcec1a64, v0.c0, v0.c0, rt0.c2))AND(CASE WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN NULL END)))AND(v0.c0 COLLATE BINARY)))OR(CAST(rt0.c2 AS REAL))))AND(NULL))) ORDER BY ((rt0.c2 COLLATE RTRIM)>>(rt0.c2));
SELECT * FROM rt0 WHERE (x'') ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ()) DESC);
SELECT * FROM rt0 WHERE (x'') ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ()) DESC);
SELECT * FROM rt0 WHERE (x'') ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ()) DESC;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((rt0.c3)-(0.5925150737370245))) NOT NULL) WHERE ((- (((((v0.c0)OR(NULL)))OR(rt0.c3))))) ORDER BY ((((((rt0.c0, v0.c0, rt0.c3)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c2)))))!=(((-8.64509311E8 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((v0.c0)OR(NULL)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((rt0.c3)-(0.5925150737370245))) NOT NULL) ORDER BY ((((((rt0.c0, v0.c0, rt0.c3)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c2)))))<>(((-8.64509311E8 IN ())))) ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((rt0.c3)-(0.5925150737370245))) NOT NULL) WHERE ((- (((((v0.c0)OR(NULL)))OR(rt0.c3))))) ORDER BY ((((((rt0.c0, v0.c0, rt0.c3)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c2)))))!=(((-8.64509311E8 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((v0.c0)OR(NULL)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((rt0.c3)-(0.5925150737370245))) NOT NULL) ORDER BY ((((((rt0.c0, v0.c0, rt0.c3)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c2)))))<>(((-8.64509311E8 IN ())))) ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((rt0.c3)-(0.5925150737370245))) NOT NULL) WHERE ((- (((((v0.c0)OR(NULL)))OR(rt0.c3))))) ORDER BY ((((((rt0.c0, v0.c0, rt0.c3)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c2)))))!=(((-8.64509311E8 IN ())))) ASC;
SELECT * FROM rt0 NOT INDEXED RIGHT OUTER JOIN v0 ON ((((rt0.c1) NOT NULL)) ISNULL) WHERE ((((rt0.c2 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END, (+ (rt0.c1))))>((v0.c0 COLLATE NOCASE, ((rt0.c0)||(rt0.c3)), (((v0.c0))<=((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END, (+ (rt0.c1))))>((v0.c0 COLLATE NOCASE, ((rt0.c0)||(rt0.c3)), (((v0.c0))<=((rt0.c1))))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1) NOT NULL)) ISNULL));
SELECT * FROM rt0 NOT INDEXED RIGHT OUTER JOIN v0 ON ((((rt0.c1) NOT NULL)) ISNULL) WHERE ((((rt0.c2 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END, (+ (rt0.c1))))>((v0.c0 COLLATE NOCASE, ((rt0.c0)||(rt0.c3)), (((v0.c0))<=((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END, (+ (rt0.c1))))>((v0.c0 COLLATE NOCASE, ((rt0.c0)||(rt0.c3)), (((v0.c0))<=((rt0.c1))))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1) NOT NULL)) ISNULL));
SELECT * FROM rt0 NOT INDEXED RIGHT OUTER JOIN v0 ON ((((rt0.c1) NOT NULL)) ISNULL) WHERE ((((rt0.c2 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END, (+ (rt0.c1))))>((v0.c0 COLLATE NOCASE, ((rt0.c0)||(rt0.c3)), (((v0.c0))<=((rt0.c1)))))));
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))GLOB(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))GLOB(rt0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))GLOB(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))GLOB(rt0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))GLOB(rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))GLOB(((((rt0.c3)AND(v0.c0)))OR(rt0.c0)))) WHERE (((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))GLOB(((((rt0.c3)AND(v0.c0)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))GLOB(((((rt0.c3)AND(v0.c0)))OR(rt0.c0)))) WHERE (((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))GLOB(((((rt0.c3)AND(v0.c0)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))GLOB(((((rt0.c3)AND(v0.c0)))OR(rt0.c0)))) WHERE (((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOTNULL));
SELECT COUNT(*) FROM v0 WHERE ((+ (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (((v0.c0) IS FALSE))));
SELECT * FROM v0 WHERE (CAST((+ (v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST((+ (v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST((+ (v0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('1884695653') ORDER BY rt0.c2 DESC  NULLS FIRST, UNLIKELY((((rt0.c2))>=((rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1884695653') IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2 DESC  NULLS FIRST, UNLIKELY((((rt0.c2))>=((rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('1884695653') ORDER BY rt0.c2 DESC  NULLS FIRST, UNLIKELY((((rt0.c2))>=((rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1884695653') IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2 DESC  NULLS FIRST, UNLIKELY((((rt0.c2))>=((rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('1884695653') ORDER BY rt0.c2 DESC  NULLS FIRST, UNLIKELY((((rt0.c2))>=((rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)OR(CAST(rt0.c1 AS BLOB))))OR(rt0.c3))) ORDER BY rt0.c0, (- (1.961873442E9)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(CAST(rt0.c1 AS BLOB))))OR(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0, (- (1.961873442E9)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)OR(CAST(rt0.c1 AS BLOB))))OR(rt0.c3))) ORDER BY rt0.c0, (- (1.961873442E9)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(CAST(rt0.c1 AS BLOB))))OR(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0, (- (1.961873442E9)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)OR(CAST(rt0.c1 AS BLOB))))OR(rt0.c3))) ORDER BY rt0.c0, (- (1.961873442E9)) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON v0.c0 WHERE ((((rt0.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON v0.c0);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON v0.c0 WHERE ((((rt0.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON v0.c0);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON v0.c0 WHERE ((((rt0.c0) IS TRUE) IN ()));
SELECT ALL * FROM v0, rt0 WHERE (CASE CAST(rt0.c1 AS INTEGER)  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS INTEGER)  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE CAST(rt0.c1 AS INTEGER)  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS INTEGER)  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE CAST(rt0.c1 AS INTEGER)  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))) END);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c3);
SELECT * FROM v0, rt0 WHERE ('-2091359164') ORDER BY rt0.c0 DESC, NULL ASC, ((('951581014')IS NOT(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL (('-2091359164') IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c0 DESC, NULL ASC, ((('951581014')IS NOT(rt0.c1)) IN ()));
SELECT * FROM v0, rt0 WHERE ('-2091359164') ORDER BY rt0.c0 DESC, NULL ASC, ((('951581014')IS NOT(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL (('-2091359164') IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c0 DESC, NULL ASC, ((('951581014')IS NOT(rt0.c1)) IN ()));
SELECT * FROM v0, rt0 WHERE ('-2091359164') ORDER BY rt0.c0 DESC, NULL ASC, ((('951581014')IS NOT(rt0.c1)) IN ());
SELECT * FROM v0, rt0 WHERE ((+ (rt0.c3 COLLATE BINARY))) ORDER BY COALESCE(((rt0.c1) IS TRUE), x'0b13')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 ORDER BY COALESCE(((rt0.c1) IS TRUE), x'0b13')  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE ((+ (rt0.c3 COLLATE BINARY))) ORDER BY COALESCE(((rt0.c1) IS TRUE), x'0b13')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 ORDER BY COALESCE(((rt0.c1) IS TRUE), x'0b13')  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE ((+ (rt0.c3 COLLATE BINARY))) ORDER BY COALESCE(((rt0.c1) IS TRUE), x'0b13')  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((rt0.c0) ISNULL) THEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((0.9926988752259991))) WHEN ((v0.c0) NOT NULL) THEN CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END ELSE ((rt0.c0) NOT NULL) END) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((rt0.c0) ISNULL) THEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((0.9926988752259991))) WHEN ((v0.c0) NOT NULL) THEN CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END ELSE ((rt0.c0) NOT NULL) END) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((rt0.c0) ISNULL) THEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((0.9926988752259991))) WHEN ((v0.c0) NOT NULL) THEN CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END ELSE ((rt0.c0) NOT NULL) END) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((rt0.c0) ISNULL) THEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((0.9926988752259991))) WHEN ((v0.c0) NOT NULL) THEN CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END ELSE ((rt0.c0) NOT NULL) END) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((rt0.c0) ISNULL) THEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((0.9926988752259991))) WHEN ((v0.c0) NOT NULL) THEN CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END ELSE ((rt0.c0) NOT NULL) END) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT * FROM rt0 CROSS JOIN v0 ON (~ (v0.c0 COLLATE RTRIM)) WHERE (x'') ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (~ (v0.c0 COLLATE RTRIM)) ORDER BY rt0.c3  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN v0 ON (~ (v0.c0 COLLATE RTRIM)) WHERE (x'') ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (~ (v0.c0 COLLATE RTRIM)) ORDER BY rt0.c3  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN v0 ON (~ (v0.c0 COLLATE RTRIM)) WHERE (x'') ORDER BY rt0.c3  NULLS LAST;
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) THEN ((v0.c0)>=(x'f5ec')) ELSE (v0.c0 IN (x'')) END WHERE ((('-1343789537')||(rt0.c1)) COLLATE BINARY) ORDER BY LIKELY(((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))OR(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('-1343789537')||(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) THEN ((v0.c0)>=(x'f5ec')) ELSE (v0.c0 IN (x'')) END ORDER BY LIKELY(((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))OR(v0.c0))) DESC);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) THEN ((v0.c0)>=(x'f5ec')) ELSE (v0.c0 IN (x'')) END WHERE ((('-1343789537')||(rt0.c1)) COLLATE BINARY) ORDER BY LIKELY(((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))OR(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('-1343789537')||(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) THEN ((v0.c0)>=(x'f5ec')) ELSE (v0.c0 IN (x'')) END ORDER BY LIKELY(((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))OR(v0.c0))) DESC);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) THEN ((v0.c0)>=(x'f5ec')) ELSE (v0.c0 IN (x'')) END WHERE ((('-1343789537')||(rt0.c1)) COLLATE BINARY) ORDER BY LIKELY(((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))OR(v0.c0))) DESC;
SELECT * FROM rt0 WHERE (((((((((rt0.c3)OR(((rt0.c3)OR(rt0.c1)))))OR(((NULL)%(rt0.c1)))))OR(((((rt0.c0)AND(x'')))AND(rt0.c1)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE 0.2756022726369248 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c3)OR(((rt0.c3)OR(rt0.c1)))))OR(((NULL)%(rt0.c1)))))OR(((((rt0.c0)AND(x'')))AND(rt0.c1)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE 0.2756022726369248 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((rt0.c3)OR(((rt0.c3)OR(rt0.c1)))))OR(((NULL)%(rt0.c1)))))OR(((((rt0.c0)AND(x'')))AND(rt0.c1)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE 0.2756022726369248 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c3)OR(((rt0.c3)OR(rt0.c1)))))OR(((NULL)%(rt0.c1)))))OR(((((rt0.c0)AND(x'')))AND(rt0.c1)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE 0.2756022726369248 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((rt0.c3)OR(((rt0.c3)OR(rt0.c1)))))OR(((NULL)%(rt0.c1)))))OR(((((rt0.c0)AND(x'')))AND(rt0.c1)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE 0.2756022726369248 END)));
SELECT ALL COUNT(*) FROM v0 WHERE (TRIM(DISTINCT ((v0.c0) ISNULL), (- (v0.c0)))) ORDER BY CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS BLOB) ASC  NULLS FIRST, v0.c0 ASC, ((v0.c0)/(((v0.c0)==('-631788628')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((v0.c0) ISNULL), (- (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS BLOB) ASC  NULLS FIRST, v0.c0 ASC, ((v0.c0)/(((v0.c0)=('-631788628')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (TRIM(DISTINCT ((v0.c0) ISNULL), (- (v0.c0)))) ORDER BY CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS BLOB) ASC  NULLS FIRST, v0.c0 ASC, ((v0.c0)/(((v0.c0)==('-631788628')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((v0.c0) ISNULL), (- (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS BLOB) ASC  NULLS FIRST, v0.c0 ASC, ((v0.c0)/(((v0.c0)=('-631788628')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (TRIM(DISTINCT ((v0.c0) ISNULL), (- (v0.c0)))) ORDER BY CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS BLOB) ASC  NULLS FIRST, v0.c0 ASC, ((v0.c0)/(((v0.c0)==('-631788628')))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ('1422120099');
SELECT SUM(count) FROM (SELECT ALL (('1422120099') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('1422120099');
SELECT SUM(count) FROM (SELECT ALL (('1422120099') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('1422120099');
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((rt0.c2)IS(CAST(v0.c0 AS INTEGER))) WHERE ('684733804') ORDER BY (rt0.c1 IN (((rt0.c2) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('684733804') IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((rt0.c2)IS(CAST(v0.c0 AS INTEGER))) ORDER BY (rt0.c1 IN (((rt0.c2) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((rt0.c2)IS(CAST(v0.c0 AS INTEGER))) WHERE ('684733804') ORDER BY (rt0.c1 IN (((rt0.c2) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('684733804') IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((rt0.c2)IS(CAST(v0.c0 AS INTEGER))) ORDER BY (rt0.c1 IN (((rt0.c2) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((rt0.c2)IS(CAST(v0.c0 AS INTEGER))) WHERE ('684733804') ORDER BY (rt0.c1 IN (((rt0.c2) IS FALSE)))  NULLS FIRST;
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (x'958f32ad') ORDER BY (- ((((rt0.c0, rt0.c0, rt0.c1))>((x'', rt0.c3, rt0.c3))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'958f32ad') IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY (- ((((rt0.c0, rt0.c0, rt0.c1))>((x'', rt0.c3, rt0.c3))))) ASC  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (x'958f32ad') ORDER BY (- ((((rt0.c0, rt0.c0, rt0.c1))>((x'', rt0.c3, rt0.c3))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'958f32ad') IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY (- ((((rt0.c0, rt0.c0, rt0.c1))>((x'', rt0.c3, rt0.c3))))) ASC  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (x'958f32ad') ORDER BY (- ((((rt0.c0, rt0.c0, rt0.c1))>((x'', rt0.c3, rt0.c3))))) ASC  NULLS LAST;
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((CASE WHEN v0.c0 THEN v0.c0 END)OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((CASE WHEN v0.c0 THEN v0.c0 END)OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(NULL)) ASC);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((CASE WHEN v0.c0 THEN v0.c0 END)OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((CASE WHEN v0.c0 THEN v0.c0 END)OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(NULL)) ASC);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((CASE WHEN v0.c0 THEN v0.c0 END)OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(NULL)) ASC;
SELECT ALL * FROM v0 WHERE (0X74efd022) ORDER BY CAST(((((v0.c0)OR('adr')))AND(v0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X74efd022) IS TRUE)  as count FROM v0 ORDER BY CAST(((((v0.c0)OR('adr')))AND(v0.c0)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (0X74efd022) ORDER BY CAST(((((v0.c0)OR('adr')))AND(v0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X74efd022) IS TRUE)  as count FROM v0 ORDER BY CAST(((((v0.c0)OR('adr')))AND(v0.c0)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (0X74efd022) ORDER BY CAST(((((v0.c0)OR('adr')))AND(v0.c0)) AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (((rt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (((rt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (((rt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) AS TEXT)) ORDER BY ((v0.c0 COLLATE RTRIM)IS(NULL)) ASC  NULLS FIRST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM)IS(NULL)) ASC  NULLS FIRST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) AS TEXT)) ORDER BY ((v0.c0 COLLATE RTRIM)IS(NULL)) ASC  NULLS FIRST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM)IS(NULL)) ASC  NULLS FIRST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) AS TEXT)) ORDER BY ((v0.c0 COLLATE RTRIM)IS(NULL)) ASC  NULLS FIRST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT NULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((LIKELY(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((LIKELY(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((LIKELY(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((LIKELY(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((LIKELY(v0.c0)))));
SELECT * FROM rt0 WHERE (JULIANDAY((NOT (rt0.c2)), ((rt0.c2)IS NOT(0.8042065388684367)), ((x'')=(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY((NOT (rt0.c2)), ((rt0.c2)IS NOT(0.8042065388684367)), ((x'')==(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (JULIANDAY((NOT (rt0.c2)), ((rt0.c2)IS NOT(0.8042065388684367)), ((x'')=(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY((NOT (rt0.c2)), ((rt0.c2)IS NOT(0.8042065388684367)), ((x'')==(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (JULIANDAY((NOT (rt0.c2)), ((rt0.c2)IS NOT(0.8042065388684367)), ((x'')=(rt0.c3))));
SELECT ALL * FROM rt0, v0 WHERE ((('-402724353')||(CASE WHEN v0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 END))) ORDER BY ((v0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-402724353')||(CASE WHEN v0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((('-402724353')||(CASE WHEN v0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 END))) ORDER BY ((v0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-402724353')||(CASE WHEN v0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((('-402724353')||(CASE WHEN v0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 END))) ORDER BY ((v0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (LENGTH('541939464')) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH('541939464')) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL * FROM v0 WHERE (LENGTH('541939464')) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH('541939464')) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL * FROM v0 WHERE (LENGTH('541939464')) ORDER BY v0.c0  NULLS LAST;
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE ((~ (UPPER(DISTINCT rt0.c2)))) ORDER BY ((0X30e661cb) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (UPPER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((0x30e661cb) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE ((~ (UPPER(DISTINCT rt0.c2)))) ORDER BY ((0X30e661cb) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (UPPER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((0x30e661cb) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE ((~ (UPPER(DISTINCT rt0.c2)))) ORDER BY ((0X30e661cb) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)+(rt0.c1)))IS NOT(((v0.c0)GLOB(rt0.c1)))) WHERE ((((NOT (v0.c0))) IS TRUE)) ORDER BY ((((rt0.c0) BETWEEN ('-2086629947') AND (rt0.c0))) IS FALSE)  NULLS LAST, rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)+(rt0.c1)))IS NOT(((v0.c0)GLOB(rt0.c1)))) ORDER BY ((((rt0.c0) BETWEEN ('-2086629947') AND (rt0.c0))) IS FALSE)  NULLS LAST, rt0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)+(rt0.c1)))IS NOT(((v0.c0)GLOB(rt0.c1)))) WHERE ((((NOT (v0.c0))) IS TRUE)) ORDER BY ((((rt0.c0) BETWEEN ('-2086629947') AND (rt0.c0))) IS FALSE)  NULLS LAST, rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)+(rt0.c1)))IS NOT(((v0.c0)GLOB(rt0.c1)))) ORDER BY ((((rt0.c0) BETWEEN ('-2086629947') AND (rt0.c0))) IS FALSE)  NULLS LAST, rt0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)+(rt0.c1)))IS NOT(((v0.c0)GLOB(rt0.c1)))) WHERE ((((NOT (v0.c0))) IS TRUE)) ORDER BY ((((rt0.c0) BETWEEN ('-2086629947') AND (rt0.c0))) IS FALSE)  NULLS LAST, rt0.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CASE rt0.c1  WHEN v0.c0 THEN '-729653119' END)>>(((v0.c0)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN v0.c0 THEN '-729653119' END)>>(((v0.c0)<=(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CASE rt0.c1  WHEN v0.c0 THEN '-729653119' END)>>(((v0.c0)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN v0.c0 THEN '-729653119' END)>>(((v0.c0)<=(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CASE rt0.c1  WHEN v0.c0 THEN '-729653119' END)>>(((v0.c0)<=(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0 IN ()))<<(((v0.c0)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))<<(((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0 IN ()))<<(((v0.c0)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))<<(((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0 IN ()))<<(((v0.c0)<(v0.c0)))));
SELECT * FROM v0, rt0 WHERE ('T' COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST((rt0.c3 IN (rt0.c1, '1182697649')) AS TEXT), load_extension(rt0.c1, rt0.c3) COLLATE BINARY, rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('T' COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((rt0.c3 IN (rt0.c1, '1182697649')) AS TEXT), load_extension(rt0.c1, rt0.c3) COLLATE BINARY, rt0.c3  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ('T' COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST((rt0.c3 IN (rt0.c1, '1182697649')) AS TEXT), load_extension(rt0.c1, rt0.c3) COLLATE BINARY, rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('T' COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((rt0.c3 IN (rt0.c1, '1182697649')) AS TEXT), load_extension(rt0.c1, rt0.c3) COLLATE BINARY, rt0.c3  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ('T' COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST((rt0.c3 IN (rt0.c1, '1182697649')) AS TEXT), load_extension(rt0.c1, rt0.c3) COLLATE BINARY, rt0.c3  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 END)<=(((rt0.c2)>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c2 END)<=(((rt0.c2)>(rt0.c3))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 END)<=(((rt0.c2)>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c2 END)<=(((rt0.c2)>(rt0.c3))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 END)<=(((rt0.c2)>(rt0.c3)))));
SELECT COUNT(*) FROM v0, rt0 WHERE (HEX(((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c3 ELSE '' END IN ());
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (CASE WHEN rt0.c1 THEN rt0.c3 ELSE '' END IN ()));
SELECT COUNT(*) FROM v0, rt0 WHERE (HEX(((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c3 ELSE '' END IN ());
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (CASE WHEN rt0.c1 THEN rt0.c3 ELSE '' END IN ()));
SELECT COUNT(*) FROM v0, rt0 WHERE (HEX(((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c3 ELSE '' END IN ());
SELECT * FROM v0, rt0 WHERE (0.4738970135709215) ORDER BY (('')OR(CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS FIRST, ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.4738970135709215) IS TRUE)  as count FROM v0, rt0 ORDER BY (('')OR(CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS FIRST, ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))) ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (0.4738970135709215) ORDER BY (('')OR(CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS FIRST, ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.4738970135709215) IS TRUE)  as count FROM v0, rt0 ORDER BY (('')OR(CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS FIRST, ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))) ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (0.4738970135709215) ORDER BY (('')OR(CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS FIRST, ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))) IS FALSE)) ORDER BY ((((v0.c0)LIKE(-9223372036854775808))) NOT BETWEEN ((rt0.c3 IN ())) AND ((~ (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0)LIKE(-9223372036854775808))) NOT BETWEEN ((rt0.c3 IN ())) AND ((~ (rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))) IS FALSE)) ORDER BY ((((v0.c0)LIKE(-9223372036854775808))) NOT BETWEEN ((rt0.c3 IN ())) AND ((~ (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0)LIKE(-9223372036854775808))) NOT BETWEEN ((rt0.c3 IN ())) AND ((~ (rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))) IS FALSE)) ORDER BY ((((v0.c0)LIKE(-9223372036854775808))) NOT BETWEEN ((rt0.c3 IN ())) AND ((~ (rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2) NOTNULL)) ORDER BY ((((((((rt0.c3 COLLATE RTRIM)OR((+ (v0.c0)))))AND(x'')))AND(((v0.c0)*(v0.c0)))))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3))))  NULLS LAST, CAST(((x'')-(rt0.c3)) AS BLOB)  NULLS LAST, ((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c0 END)+(((v0.c0)!=(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((rt0.c3 COLLATE RTRIM)OR((+ (v0.c0)))))AND(x'')))AND(((v0.c0)*(v0.c0)))))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3))))  NULLS LAST, CAST(((x'')-(rt0.c3)) AS BLOB)  NULLS LAST, ((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c0 END)+(((v0.c0)!=(rt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2) NOTNULL)) ORDER BY ((((((((rt0.c3 COLLATE RTRIM)OR((+ (v0.c0)))))AND(x'')))AND(((v0.c0)*(v0.c0)))))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3))))  NULLS LAST, CAST(((x'')-(rt0.c3)) AS BLOB)  NULLS LAST, ((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c0 END)+(((v0.c0)!=(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((rt0.c3 COLLATE RTRIM)OR((+ (v0.c0)))))AND(x'')))AND(((v0.c0)*(v0.c0)))))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3))))  NULLS LAST, CAST(((x'')-(rt0.c3)) AS BLOB)  NULLS LAST, ((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c0 END)+(((v0.c0)!=(rt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2) NOTNULL)) ORDER BY ((((((((rt0.c3 COLLATE RTRIM)OR((+ (v0.c0)))))AND(x'')))AND(((v0.c0)*(v0.c0)))))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3))))  NULLS LAST, CAST(((x'')-(rt0.c3)) AS BLOB)  NULLS LAST, ((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c0 END)+(((v0.c0)!=(rt0.c0)))) ASC  NULLS LAST;
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CAST(((rt0.c1) IS TRUE) AS BLOB) WHERE (((x'')<(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c1))))) ORDER BY ((((rt0.c2) IS FALSE))<(v0.c0 COLLATE RTRIM))  NULLS FIRST, COALESCE(rt0.c0, rt0.c0) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'')<(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CAST(((rt0.c1) IS TRUE) AS BLOB) ORDER BY ((((rt0.c2) IS FALSE))<(v0.c0 COLLATE RTRIM))  NULLS FIRST, COALESCE(rt0.c0, rt0.c0) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CAST(((rt0.c1) IS TRUE) AS BLOB) WHERE (((x'')<(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c1))))) ORDER BY ((((rt0.c2) IS FALSE))<(v0.c0 COLLATE RTRIM))  NULLS FIRST, COALESCE(rt0.c0, rt0.c0) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'')<(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CAST(((rt0.c1) IS TRUE) AS BLOB) ORDER BY ((((rt0.c2) IS FALSE))<(v0.c0 COLLATE RTRIM))  NULLS FIRST, COALESCE(rt0.c0, rt0.c0) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CAST(((rt0.c1) IS TRUE) AS BLOB) WHERE (((x'')<(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c1))))) ORDER BY ((((rt0.c2) IS FALSE))<(v0.c0 COLLATE RTRIM))  NULLS FIRST, COALESCE(rt0.c0, rt0.c0) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((NULL) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE NOCASE WHERE (((CAST(rt0.c1 AS INTEGER))<=(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))<=(NULL))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((NULL) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((NULL) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE NOCASE WHERE (((CAST(rt0.c1 AS INTEGER))<=(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))<=(NULL))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((NULL) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((NULL) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE NOCASE WHERE (((CAST(rt0.c1 AS INTEGER))<=(NULL)));
SELECT * FROM v0 WHERE ((~ (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((~ (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((~ (v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON 'R.''Yf{2' WHERE (((1469484116) NOT BETWEEN (RTRIM(rt0.c1)) AND (((rt0.c3)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((1469484116) NOT BETWEEN (RTRIM(rt0.c1)) AND (((rt0.c3)OR(v0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON 'R.''Yf{2');
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON 'R.''Yf{2' WHERE (((1469484116) NOT BETWEEN (RTRIM(rt0.c1)) AND (((rt0.c3)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((1469484116) NOT BETWEEN (RTRIM(rt0.c1)) AND (((rt0.c3)OR(v0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON 'R.''Yf{2');
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON 'R.''Yf{2' WHERE (((1469484116) NOT BETWEEN (RTRIM(rt0.c1)) AND (((rt0.c3)OR(v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (- (CASE WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)) WHERE (((((rt0.c0) IS TRUE))<>(CHAR(rt0.c3)))) ORDER BY CAST(((((v0.c0)AND(rt0.c2)))AND(rt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE))<>(CHAR(rt0.c3)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (- (CASE WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)) ORDER BY CAST(((((v0.c0)AND(rt0.c2)))AND(rt0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (- (CASE WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)) WHERE (((((rt0.c0) IS TRUE))<>(CHAR(rt0.c3)))) ORDER BY CAST(((((v0.c0)AND(rt0.c2)))AND(rt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE))<>(CHAR(rt0.c3)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (- (CASE WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)) ORDER BY CAST(((((v0.c0)AND(rt0.c2)))AND(rt0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (- (CASE WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)) WHERE (((((rt0.c0) IS TRUE))<>(CHAR(rt0.c3)))) ORDER BY CAST(((((v0.c0)AND(rt0.c2)))AND(rt0.c0)) AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (0.31016482347806684);
SELECT SUM(count) FROM (SELECT ((0.31016482347806684) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (0.31016482347806684);
SELECT SUM(count) FROM (SELECT ((0.31016482347806684) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (0.31016482347806684);
SELECT * FROM rt0, v0 WHERE ((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)) IN (((v0.c0)GLOB(rt0.c1))))) ORDER BY ((((rt0.c0) IS FALSE))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))), rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)) IN (((v0.c0)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c0) IS FALSE))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))), rt0.c1 DESC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)) IN (((v0.c0)GLOB(rt0.c1))))) ORDER BY ((((rt0.c0) IS FALSE))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))), rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)) IN (((v0.c0)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c0) IS FALSE))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))), rt0.c1 DESC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)) IN (((v0.c0)GLOB(rt0.c1))))) ORDER BY ((((rt0.c0) IS FALSE))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))), rt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3, rt0.c1, rt0.c3))>((rt0.c0, rt0.c3, rt0.c3)))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (UNLIKELY(DISTINCT rt0.c2)))) ORDER BY ((rt0.c1)<<(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END))  NULLS FIRST, ((((rt0.c0)GLOB(rt0.c3))) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c0))) AND ((rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3, rt0.c1, rt0.c3))>((rt0.c0, rt0.c3, rt0.c3)))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (UNLIKELY(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)<<(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END))  NULLS FIRST, ((((rt0.c0)GLOB(rt0.c3))) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c0))) AND ((rt0.c3 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3, rt0.c1, rt0.c3))>((rt0.c0, rt0.c3, rt0.c3)))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (UNLIKELY(DISTINCT rt0.c2)))) ORDER BY ((rt0.c1)<<(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END))  NULLS FIRST, ((((rt0.c0)GLOB(rt0.c3))) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c0))) AND ((rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3, rt0.c1, rt0.c3))>((rt0.c0, rt0.c3, rt0.c3)))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (UNLIKELY(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)<<(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END))  NULLS FIRST, ((((rt0.c0)GLOB(rt0.c3))) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c0))) AND ((rt0.c3 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3, rt0.c1, rt0.c3))>((rt0.c0, rt0.c3, rt0.c3)))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (UNLIKELY(DISTINCT rt0.c2)))) ORDER BY ((rt0.c1)<<(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END))  NULLS FIRST, ((((rt0.c0)GLOB(rt0.c3))) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c0))) AND ((rt0.c3 IN ())));
SELECT * FROM v0, rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c1)<=(rt0.c3)))!=((+ (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1)<=(rt0.c3)))!=((+ (v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c1)<=(rt0.c3)))!=((+ (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1)<=(rt0.c3)))!=((+ (v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c1)<=(rt0.c3)))!=((+ (v0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0 WHERE ((~ (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0 WHERE ((~ (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0 WHERE ((~ (v0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM);
SELECT * FROM v0, rt0 WHERE ((((+ (rt0.c1))) IS TRUE)) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c3  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((((+ (rt0.c1))) IS TRUE)) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c3  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((((+ (rt0.c1))) IS TRUE)) ORDER BY rt0.c3  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN '#ᧉ\nD' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' END)) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN '#ᧉ\nD' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' END)) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN '#ᧉ\nD' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' END)) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN '#ᧉ\nD' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' END)) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN '#ᧉ\nD' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' END)) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))));
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN LIKELY(DISTINCT rt0.c0) THEN ((rt0.c0) IS FALSE) END) ORDER BY (- (((rt0.c0)LIKE(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELY(DISTINCT rt0.c0) THEN ((rt0.c0) IS FALSE) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (((rt0.c0)LIKE(rt0.c1)))));
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN LIKELY(DISTINCT rt0.c0) THEN ((rt0.c0) IS FALSE) END) ORDER BY (- (((rt0.c0)LIKE(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELY(DISTINCT rt0.c0) THEN ((rt0.c0) IS FALSE) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (((rt0.c0)LIKE(rt0.c1)))));
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN LIKELY(DISTINCT rt0.c0) THEN ((rt0.c0) IS FALSE) END) ORDER BY (- (((rt0.c0)LIKE(rt0.c1))));
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((v0.c0))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((+ (v0.c0)) IN ())) ORDER BY CASE ((((v0.c0)OR(rt0.c1)))AND('-1329877629'))  WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 WHEN (rt0.c1 IN (rt0.c3)) THEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN rt0.c3 COLLATE BINARY THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (v0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((((v0.c0)OR(rt0.c1)))AND('-1329877629'))  WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 WHEN (rt0.c1 IN (rt0.c3)) THEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN rt0.c3 COLLATE BINARY THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((+ (v0.c0)) IN ())) ORDER BY CASE ((((v0.c0)OR(rt0.c1)))AND('-1329877629'))  WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 WHEN (rt0.c1 IN (rt0.c3)) THEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN rt0.c3 COLLATE BINARY THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (v0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((((v0.c0)OR(rt0.c1)))AND('-1329877629'))  WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 WHEN (rt0.c1 IN (rt0.c3)) THEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN rt0.c3 COLLATE BINARY THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((+ (v0.c0)) IN ())) ORDER BY CASE ((((v0.c0)OR(rt0.c1)))AND('-1329877629'))  WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 WHEN (rt0.c1 IN (rt0.c3)) THEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN rt0.c3 COLLATE BINARY THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END END ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((((rt0.c3, 0.14825308388290237, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c1, rt0.c1, rt0.c2)))) BETWEEN ((~ (rt0.c1))) AND ((- (rt0.c2))))) ORDER BY ((((((NULL) NOT NULL))AND(((rt0.c1)|(rt0.c2)))))AND(rt0.c3 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, 0.14825308388290237, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c1, rt0.c1, rt0.c2)))) BETWEEN ((~ (rt0.c1))) AND ((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((NULL) NOT NULL))AND(((rt0.c1)|(rt0.c2)))))AND(rt0.c3 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c3, 0.14825308388290237, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c1, rt0.c1, rt0.c2)))) BETWEEN ((~ (rt0.c1))) AND ((- (rt0.c2))))) ORDER BY ((((((NULL) NOT NULL))AND(((rt0.c1)|(rt0.c2)))))AND(rt0.c3 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, 0.14825308388290237, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c1, rt0.c1, rt0.c2)))) BETWEEN ((~ (rt0.c1))) AND ((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((NULL) NOT NULL))AND(((rt0.c1)|(rt0.c2)))))AND(rt0.c3 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c3, 0.14825308388290237, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c1, rt0.c1, rt0.c2)))) BETWEEN ((~ (rt0.c1))) AND ((- (rt0.c2))))) ORDER BY ((((((NULL) NOT NULL))AND(((rt0.c1)|(rt0.c2)))))AND(rt0.c3 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (rt0.c1 IN (rt0.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN (rt0.c2)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (rt0.c1 IN (rt0.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN (rt0.c2)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (rt0.c1 IN (rt0.c2)) COLLATE RTRIM ASC;
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)-(v0.c0))  WHEN ((v0.c0)>(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)-(v0.c0))  WHEN ((v0.c0)>(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)-(v0.c0))  WHEN ((v0.c0)>(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)-(v0.c0))  WHEN ((v0.c0)>(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)-(v0.c0))  WHEN ((v0.c0)>(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (0.759868545038808) ORDER BY (((0.25784370592157035)) NOT BETWEEN ((v0.c0)) AND ((((rt0.c0) IS FALSE)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.759868545038808) IS TRUE)  as count FROM rt0, v0 ORDER BY (((0.25784370592157035)) NOT BETWEEN ((v0.c0)) AND ((((rt0.c0) IS FALSE)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (0.759868545038808) ORDER BY (((0.25784370592157035)) NOT BETWEEN ((v0.c0)) AND ((((rt0.c0) IS FALSE)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.759868545038808) IS TRUE)  as count FROM rt0, v0 ORDER BY (((0.25784370592157035)) NOT BETWEEN ((v0.c0)) AND ((((rt0.c0) IS FALSE)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (0.759868545038808) ORDER BY (((0.25784370592157035)) NOT BETWEEN ((v0.c0)) AND ((((rt0.c0) IS FALSE)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY LIKELY(((v0.c0) NOT BETWEEN (v0.c0) AND ('T狍'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY LIKELY(((v0.c0) NOT BETWEEN (v0.c0) AND ('T狍'))) DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY LIKELY(((v0.c0) NOT BETWEEN (v0.c0) AND ('T狍'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY LIKELY(((v0.c0) NOT BETWEEN (v0.c0) AND ('T狍'))) DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY LIKELY(((v0.c0) NOT BETWEEN (v0.c0) AND ('T狍'))) DESC;
SELECT ALL * FROM v0, rt0 WHERE (0X3a69376c) ORDER BY ((INSTR(rt0.c2, rt0.c2))>((('-1103345206')OR(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0X3a69376c) IS TRUE)  as count FROM v0, rt0 ORDER BY ((INSTR(rt0.c2, rt0.c2))>((('-1103345206')OR(rt0.c0)))) ASC);
SELECT ALL * FROM v0, rt0 WHERE (0X3a69376c) ORDER BY ((INSTR(rt0.c2, rt0.c2))>((('-1103345206')OR(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0X3a69376c) IS TRUE)  as count FROM v0, rt0 ORDER BY ((INSTR(rt0.c2, rt0.c2))>((('-1103345206')OR(rt0.c0)))) ASC);
SELECT ALL * FROM v0, rt0 WHERE (0X3a69376c) ORDER BY ((INSTR(rt0.c2, rt0.c2))>((('-1103345206')OR(rt0.c0)))) ASC;
SELECT * FROM rt0, v0 WHERE (CASE CASE rt0.c2  WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END  WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN '笸s_F' COLLATE BINARY END) ORDER BY LIKELY(NULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c2  WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END  WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN '笸s_F' COLLATE BINARY END) IS TRUE)  as count FROM rt0, v0 ORDER BY LIKELY(NULL));
SELECT * FROM rt0, v0 WHERE (CASE CASE rt0.c2  WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END  WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN '笸s_F' COLLATE BINARY END) ORDER BY LIKELY(NULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c2  WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END  WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN '笸s_F' COLLATE BINARY END) IS TRUE)  as count FROM rt0, v0 ORDER BY LIKELY(NULL));
SELECT * FROM rt0, v0 WHERE (CASE CASE rt0.c2  WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END  WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN '笸s_F' COLLATE BINARY END) ORDER BY LIKELY(NULL);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) ISNULL));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) IS TRUE)) ORDER BY x'830d', 'CYGCzI3' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY x'830d', 'CYGCzI3' DESC);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) IS TRUE)) ORDER BY x'830d', 'CYGCzI3' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY x'830d', 'CYGCzI3' DESC);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) IS TRUE)) ORDER BY x'830d', 'CYGCzI3' DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((-2078645257 COLLATE NOCASE, ((6.86930191E8) NOT NULL), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))=(((((rt0.c3))>((rt0.c2))), ((((((((rt0.c2)OR('5|')))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((-2078645257 COLLATE NOCASE, ((6.86930191E8) NOT NULL), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))=(((((rt0.c3))>((rt0.c2))), ((((((((rt0.c2)OR('5|')))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((-2078645257 COLLATE NOCASE, ((6.86930191E8) NOT NULL), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))=(((((rt0.c3))>((rt0.c2))), ((((((((rt0.c2)OR('5|')))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((-2078645257 COLLATE NOCASE, ((6.86930191E8) NOT NULL), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))=(((((rt0.c3))>((rt0.c2))), ((((((((rt0.c2)OR('5|')))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((-2078645257 COLLATE NOCASE, ((6.86930191E8) NOT NULL), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))=(((((rt0.c3))>((rt0.c2))), ((((((((rt0.c2)OR('5|')))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))))));
SELECT * FROM v0 WHERE (CASE (~ (v0.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (~ (v0.c0)) ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (v0.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (~ (v0.c0)) ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE (~ (v0.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (~ (v0.c0)) ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (v0.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (~ (v0.c0)) ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE (~ (v0.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (~ (v0.c0)) ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))LIKE((rt0.c1 IN ())))) ORDER BY (~ (CASE WHEN rt0.c3 THEN rt0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))LIKE((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (~ (CASE WHEN rt0.c3 THEN rt0.c3 END)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))LIKE((rt0.c1 IN ())))) ORDER BY (~ (CASE WHEN rt0.c3 THEN rt0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))LIKE((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (~ (CASE WHEN rt0.c3 THEN rt0.c3 END)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))LIKE((rt0.c1 IN ())))) ORDER BY (~ (CASE WHEN rt0.c3 THEN rt0.c3 END)) DESC;
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0 IN (v0.c0, v0.c0)))LIKE((v0.c0 IN ()))), (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, 0.5538171761674763))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0, v0.c0)))LIKE((v0.c0 IN ()))), (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, 0.5538171761674763))) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0 IN (v0.c0, v0.c0)))LIKE((v0.c0 IN ()))), (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, 0.5538171761674763))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0, v0.c0)))LIKE((v0.c0 IN ()))), (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, 0.5538171761674763))) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0 IN (v0.c0, v0.c0)))LIKE((v0.c0 IN ()))), (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, 0.5538171761674763))) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CAST(v0.c0 AS NUMERIC) WHERE (ABS(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) ORDER BY ((v0.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CAST(v0.c0 AS NUMERIC) ORDER BY ((v0.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CAST(v0.c0 AS NUMERIC) WHERE (ABS(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) ORDER BY ((v0.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CAST(v0.c0 AS NUMERIC) ORDER BY ((v0.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CAST(v0.c0 AS NUMERIC) WHERE (ABS(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) ORDER BY ((v0.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE rt0.c3  WHEN NULLIF(rt0.c1, rt0.c3) THEN CAST(rt0.c1 AS TEXT) WHEN ((rt0.c3)|(x'')) THEN ((v0.c0) ISNULL) WHEN ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)) THEN 'n	' ELSE CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN 0X5a240f61 THEN v0.c0 ELSE rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN NULLIF(rt0.c1, rt0.c3) THEN CAST(rt0.c1 AS TEXT) WHEN ((rt0.c3)|(x'')) THEN ((v0.c0) ISNULL) WHEN ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)) THEN 'n	' ELSE CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN 0X5a240f61 THEN v0.c0 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE rt0.c3  WHEN NULLIF(rt0.c1, rt0.c3) THEN CAST(rt0.c1 AS TEXT) WHEN ((rt0.c3)|(x'')) THEN ((v0.c0) ISNULL) WHEN ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)) THEN 'n	' ELSE CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN 0X5a240f61 THEN v0.c0 ELSE rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN NULLIF(rt0.c1, rt0.c3) THEN CAST(rt0.c1 AS TEXT) WHEN ((rt0.c3)|(x'')) THEN ((v0.c0) ISNULL) WHEN ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)) THEN 'n	' ELSE CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN 0X5a240f61 THEN v0.c0 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE rt0.c3  WHEN NULLIF(rt0.c1, rt0.c3) THEN CAST(rt0.c1 AS TEXT) WHEN ((rt0.c3)|(x'')) THEN ((v0.c0) ISNULL) WHEN ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)) THEN 'n	' ELSE CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN 0X5a240f61 THEN v0.c0 ELSE rt0.c0 END END);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT ALL * FROM rt0, v0 WHERE (2005304025);
SELECT SUM(count) FROM (SELECT ((2005304025) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (2005304025);
SELECT SUM(count) FROM (SELECT ((2005304025) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (2005304025);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((rt0.c0)/(rt0.c2)) THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)/(rt0.c2)) THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((rt0.c0)/(rt0.c2)) THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)/(rt0.c2)) THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((rt0.c0)/(rt0.c2)) THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END);
SELECT ALL * FROM rt0 WHERE ((NULL IN ())) ORDER BY (((((((((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x''))))))AND(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)))AND((rt0.c0 IN (rt0.c3, '㞊*'))));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x''))))))AND(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)))AND((rt0.c0 IN (rt0.c3, '㞊*')))));
SELECT ALL * FROM rt0 WHERE ((NULL IN ())) ORDER BY (((((((((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x''))))))AND(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)))AND((rt0.c0 IN (rt0.c3, '㞊*'))));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x''))))))AND(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)))AND((rt0.c0 IN (rt0.c3, '㞊*')))));
SELECT ALL * FROM rt0 WHERE ((NULL IN ())) ORDER BY (((((((((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x''))))))AND(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)))AND((rt0.c0 IN (rt0.c3, '㞊*'))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (rt0.c0 COLLATE NOCASE))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (rt0.c0 COLLATE NOCASE))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (rt0.c0 COLLATE NOCASE))) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM rt0 NOT INDEXED CROSS JOIN v0 ON (((rt0.c1 IN (rt0.c2, rt0.c3)))=(x'29df')) WHERE (((rt0.c3) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((rt0.c1 IN (rt0.c2, rt0.c3)))==(x'29df')));
SELECT COUNT(*) FROM rt0 NOT INDEXED CROSS JOIN v0 ON (((rt0.c1 IN (rt0.c2, rt0.c3)))=(x'29df')) WHERE (((rt0.c3) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((rt0.c1 IN (rt0.c2, rt0.c3)))==(x'29df')));
SELECT COUNT(*) FROM rt0 NOT INDEXED CROSS JOIN v0 ON (((rt0.c1 IN (rt0.c2, rt0.c3)))=(x'29df')) WHERE (((rt0.c3) NOTNULL) COLLATE BINARY);
SELECT * FROM v0 WHERE (456444304) ORDER BY ((v0.c0 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((456444304) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (456444304) ORDER BY ((v0.c0 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((456444304) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (456444304) ORDER BY ((v0.c0 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ (rt0.c1)) COLLATE BINARY) ORDER BY ((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND ((rt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND ((rt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ (rt0.c1)) COLLATE BINARY) ORDER BY ((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND ((rt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND ((rt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ (rt0.c1)) COLLATE BINARY) ORDER BY ((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND ((rt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (((((0.6326850648403831)OR((NOT (rt0.c1)))))AND(((rt0.c1) BETWEEN (v0.c0) AND (NULL))))) ORDER BY (((rt0.c3)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((((rt0.c0, rt0.c0, rt0.c0))>((x'', v0.c0, rt0.c0))))))  NULLS LAST, (+ (((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.6326850648403831)OR((NOT (rt0.c1)))))AND(((rt0.c1) BETWEEN (v0.c0) AND (NULL))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c3)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((((rt0.c0, rt0.c0, rt0.c0))>((x'', v0.c0, rt0.c0))))))  NULLS LAST, (+ (((rt0.c0) NOTNULL))));
SELECT * FROM rt0, v0 WHERE (((((0.6326850648403831)OR((NOT (rt0.c1)))))AND(((rt0.c1) BETWEEN (v0.c0) AND (NULL))))) ORDER BY (((rt0.c3)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((((rt0.c0, rt0.c0, rt0.c0))>((x'', v0.c0, rt0.c0))))))  NULLS LAST, (+ (((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.6326850648403831)OR((NOT (rt0.c1)))))AND(((rt0.c1) BETWEEN (v0.c0) AND (NULL))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c3)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((((rt0.c0, rt0.c0, rt0.c0))>((x'', v0.c0, rt0.c0))))))  NULLS LAST, (+ (((rt0.c0) NOTNULL))));
SELECT * FROM rt0, v0 WHERE (((((0.6326850648403831)OR((NOT (rt0.c1)))))AND(((rt0.c1) BETWEEN (v0.c0) AND (NULL))))) ORDER BY (((rt0.c3)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((((rt0.c0, rt0.c0, rt0.c0))>((x'', v0.c0, rt0.c0))))))  NULLS LAST, (+ (((rt0.c0) NOTNULL)));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN ()))+(((((((((0.908624077825464)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2))))) ORDER BY ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (rt0.c0) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS FIRST, HEX(((rt0.c2) IS TRUE))  NULLS FIRST, x'' COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))+(((((((((0.908624077825464)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (rt0.c0) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS FIRST, HEX(((rt0.c2) IS TRUE))  NULLS FIRST, x'' COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN ()))+(((((((((0.908624077825464)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2))))) ORDER BY ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (rt0.c0) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS FIRST, HEX(((rt0.c2) IS TRUE))  NULLS FIRST, x'' COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))+(((((((((0.908624077825464)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (rt0.c0) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS FIRST, HEX(((rt0.c2) IS TRUE))  NULLS FIRST, x'' COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN ()))+(((((((((0.908624077825464)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2))))) ORDER BY ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (rt0.c0) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS FIRST, HEX(((rt0.c2) IS TRUE))  NULLS FIRST, x'' COLLATE NOCASE COLLATE RTRIM;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TRIM(DISTINCT (rt0.c3 IN ()), rt0.c2)) ORDER BY CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (rt0.c3 IN ()), rt0.c2)) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TRIM(DISTINCT (rt0.c3 IN ()), rt0.c2)) ORDER BY CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (rt0.c3 IN ()), rt0.c2)) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TRIM(DISTINCT (rt0.c3 IN ()), rt0.c2)) ORDER BY CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((rt0.c3 IN ()) IN ()) WHERE (rt0.c1) ORDER BY v0.c0 COLLATE RTRIM  NULLS FIRST, ABS(((rt0.c1) BETWEEN (rt0.c1) AND (x'')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((rt0.c3 IN ()) IN ()) ORDER BY v0.c0 COLLATE RTRIM  NULLS FIRST, ABS(((rt0.c1) BETWEEN (rt0.c1) AND (x'')))  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((rt0.c3 IN ()) IN ()) WHERE (rt0.c1) ORDER BY v0.c0 COLLATE RTRIM  NULLS FIRST, ABS(((rt0.c1) BETWEEN (rt0.c1) AND (x'')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((rt0.c3 IN ()) IN ()) ORDER BY v0.c0 COLLATE RTRIM  NULLS FIRST, ABS(((rt0.c1) BETWEEN (rt0.c1) AND (x'')))  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((rt0.c3 IN ()) IN ()) WHERE (rt0.c1) ORDER BY v0.c0 COLLATE RTRIM  NULLS FIRST, ABS(((rt0.c1) BETWEEN (rt0.c1) AND (x'')))  NULLS FIRST;
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (NOT (1368076121)) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) THEN CASE WHEN v0.c0 THEN 0.4015620539662972 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE CASE v0.c0  WHEN 'T' THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) ORDER BY ((((CAST(v0.c0 AS INTEGER))AND(x'')))OR('-355997124'));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (NOT (1368076121)) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) THEN CASE WHEN v0.c0 THEN 0.4015620539662972 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE CASE v0.c0  WHEN 'T' THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c0 AS INTEGER))AND(x'')))OR('-355997124')));
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (NOT (1368076121)) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) THEN CASE WHEN v0.c0 THEN 0.4015620539662972 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE CASE v0.c0  WHEN 'T' THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) ORDER BY ((((CAST(v0.c0 AS INTEGER))AND(x'')))OR('-355997124'));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (NOT (1368076121)) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) THEN CASE WHEN v0.c0 THEN 0.4015620539662972 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE CASE v0.c0  WHEN 'T' THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c0 AS INTEGER))AND(x'')))OR('-355997124')));
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (NOT (1368076121)) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) THEN CASE WHEN v0.c0 THEN 0.4015620539662972 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE CASE v0.c0  WHEN 'T' THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) ORDER BY ((((CAST(v0.c0 AS INTEGER))AND(x'')))OR('-355997124'));
SELECT * FROM rt0, v0 WHERE ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) COLLATE RTRIM) ORDER BY (((rt0.c1 IN (0.6886071476159191)))<(CAST(rt0.c2 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c1 IN (0.6886071476159191)))<(CAST(rt0.c2 AS TEXT))) DESC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) COLLATE RTRIM) ORDER BY (((rt0.c1 IN (0.6886071476159191)))<(CAST(rt0.c2 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c1 IN (0.6886071476159191)))<(CAST(rt0.c2 AS TEXT))) DESC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) COLLATE RTRIM) ORDER BY (((rt0.c1 IN (0.6886071476159191)))<(CAST(rt0.c2 AS TEXT))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(CASE v0.c0  WHEN 0.30699996404874874 THEN rt0.c1 ELSE rt0.c0 END AS REAL)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c2)<<(rt0.c3))) AND (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN '予}''Yq' ELSE v0.c0 END)) ASC, rt0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN 0.30699996404874874 THEN rt0.c1 ELSE rt0.c0 END AS REAL)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c2)<<(rt0.c3))) AND (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN '予}''Yq' ELSE v0.c0 END)) ASC, rt0.c3 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(CASE v0.c0  WHEN 0.30699996404874874 THEN rt0.c1 ELSE rt0.c0 END AS REAL)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c2)<<(rt0.c3))) AND (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN '予}''Yq' ELSE v0.c0 END)) ASC, rt0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN 0.30699996404874874 THEN rt0.c1 ELSE rt0.c0 END AS REAL)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c2)<<(rt0.c3))) AND (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN '予}''Yq' ELSE v0.c0 END)) ASC, rt0.c3 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(CASE v0.c0  WHEN 0.30699996404874874 THEN rt0.c1 ELSE rt0.c0 END AS REAL)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c2)<<(rt0.c3))) AND (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN '予}''Yq' ELSE v0.c0 END)) ASC, rt0.c3 DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST((rt0.c3 IN ()) AS TEXT)) ORDER BY (CAST(rt0.c1 AS NUMERIC) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c3 IN ()) AS TEXT)) IS TRUE)  as count FROM v0, rt0 ORDER BY (CAST(rt0.c1 AS NUMERIC) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST((rt0.c3 IN ()) AS TEXT)) ORDER BY (CAST(rt0.c1 AS NUMERIC) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c3 IN ()) AS TEXT)) IS TRUE)  as count FROM v0, rt0 ORDER BY (CAST(rt0.c1 AS NUMERIC) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST((rt0.c3 IN ()) AS TEXT)) ORDER BY (CAST(rt0.c1 AS NUMERIC) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (TIME(rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((TIME(rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TIME(rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((TIME(rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TIME(rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c2) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_VERSION()) ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) IS TRUE), (- ((- (rt0.c0)))), (((~ (rt0.c2))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) IS TRUE), (- ((- (rt0.c0)))), (((~ (rt0.c2))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_VERSION()) ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) IS TRUE), (- ((- (rt0.c0)))), (((~ (rt0.c2))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) IS TRUE), (- ((- (rt0.c0)))), (((~ (rt0.c2))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_VERSION()) ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) IS TRUE), (- ((- (rt0.c0)))), (((~ (rt0.c2))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT * FROM v0 INNER JOIN rt0 ON NULL WHERE (CAST(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(v0.c0)) AS TEXT)) ORDER BY ((((((NULL)+(rt0.c0)))OR(TYPEOF(rt0.c3))))OR(((((rt0.c3)OR(rt0.c2)))AND(v0.c0))))  NULLS LAST, CASE CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END  WHEN ((rt0.c1) IS TRUE) THEN ('-1927264426' IN ()) ELSE ((((((((v0.c0)OR(rt0.c3)))AND(rt0.c1)))AND(0Xffffffff9be5d5ea)))AND(rt0.c3)) END DESC  NULLS FIRST, CASE WHEN CAST(rt0.c3 AS TEXT) THEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON NULL ORDER BY ((((((NULL)+(rt0.c0)))OR(TYPEOF(rt0.c3))))OR(((((rt0.c3)OR(rt0.c2)))AND(v0.c0))))  NULLS LAST, CASE CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END  WHEN ((rt0.c1) IS TRUE) THEN ('-1927264426' IN ()) ELSE ((((((((v0.c0)OR(rt0.c3)))AND(rt0.c1)))AND(0xffffffff9be5d5ea)))AND(rt0.c3)) END DESC  NULLS FIRST, CASE WHEN CAST(rt0.c3 AS TEXT) THEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) END  NULLS LAST);
SELECT * FROM v0 INNER JOIN rt0 ON NULL WHERE (CAST(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(v0.c0)) AS TEXT)) ORDER BY ((((((NULL)+(rt0.c0)))OR(TYPEOF(rt0.c3))))OR(((((rt0.c3)OR(rt0.c2)))AND(v0.c0))))  NULLS LAST, CASE CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END  WHEN ((rt0.c1) IS TRUE) THEN ('-1927264426' IN ()) ELSE ((((((((v0.c0)OR(rt0.c3)))AND(rt0.c1)))AND(0Xffffffff9be5d5ea)))AND(rt0.c3)) END DESC  NULLS FIRST, CASE WHEN CAST(rt0.c3 AS TEXT) THEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON NULL ORDER BY ((((((NULL)+(rt0.c0)))OR(TYPEOF(rt0.c3))))OR(((((rt0.c3)OR(rt0.c2)))AND(v0.c0))))  NULLS LAST, CASE CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END  WHEN ((rt0.c1) IS TRUE) THEN ('-1927264426' IN ()) ELSE ((((((((v0.c0)OR(rt0.c3)))AND(rt0.c1)))AND(0xffffffff9be5d5ea)))AND(rt0.c3)) END DESC  NULLS FIRST, CASE WHEN CAST(rt0.c3 AS TEXT) THEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) END  NULLS LAST);
SELECT * FROM v0 INNER JOIN rt0 ON NULL WHERE (CAST(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(v0.c0)) AS TEXT)) ORDER BY ((((((NULL)+(rt0.c0)))OR(TYPEOF(rt0.c3))))OR(((((rt0.c3)OR(rt0.c2)))AND(v0.c0))))  NULLS LAST, CASE CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END  WHEN ((rt0.c1) IS TRUE) THEN ('-1927264426' IN ()) ELSE ((((((((v0.c0)OR(rt0.c3)))AND(rt0.c1)))AND(0Xffffffff9be5d5ea)))AND(rt0.c3)) END DESC  NULLS FIRST, CASE WHEN CAST(rt0.c3 AS TEXT) THEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) END  NULLS LAST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c1) IS FALSE))OR(CASE WHEN rt0.c0 THEN v0.c0 END)))AND(((rt0.c3) IS TRUE))))AND(CASE WHEN '+1PMP' THEN rt0.c2 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(rt0.c3)) WHERE (((((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))OR(((((rt0.c1)OR(v0.c0)))AND(rt0.c1)))))OR(rt0.c0 COLLATE NOCASE))) ORDER BY ((((((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(v0.c0)))OR(rt0.c0)))AND(((('614232010')) NOT BETWEEN ((v0.c0)) AND ((0.8749974380688319))))))OR(((v0.c0)*('')))))AND((~ (rt0.c3)))))AND(LIKELY(DISTINCT rt0.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))OR(((((rt0.c1)OR(v0.c0)))AND(rt0.c1)))))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c1) IS FALSE))OR(CASE WHEN rt0.c0 THEN v0.c0 END)))AND(((rt0.c3) IS TRUE))))AND(CASE WHEN '+1PMP' THEN rt0.c2 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(rt0.c3)) ORDER BY ((((((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(v0.c0)))OR(rt0.c0)))AND(((('614232010')) NOT BETWEEN ((v0.c0)) AND ((0.8749974380688319))))))OR(((v0.c0)*('')))))AND((~ (rt0.c3)))))AND(LIKELY(DISTINCT rt0.c3)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c1) IS FALSE))OR(CASE WHEN rt0.c0 THEN v0.c0 END)))AND(((rt0.c3) IS TRUE))))AND(CASE WHEN '+1PMP' THEN rt0.c2 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(rt0.c3)) WHERE (((((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))OR(((((rt0.c1)OR(v0.c0)))AND(rt0.c1)))))OR(rt0.c0 COLLATE NOCASE))) ORDER BY ((((((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(v0.c0)))OR(rt0.c0)))AND(((('614232010')) NOT BETWEEN ((v0.c0)) AND ((0.8749974380688319))))))OR(((v0.c0)*('')))))AND((~ (rt0.c3)))))AND(LIKELY(DISTINCT rt0.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))OR(((((rt0.c1)OR(v0.c0)))AND(rt0.c1)))))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c1) IS FALSE))OR(CASE WHEN rt0.c0 THEN v0.c0 END)))AND(((rt0.c3) IS TRUE))))AND(CASE WHEN '+1PMP' THEN rt0.c2 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(rt0.c3)) ORDER BY ((((((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(v0.c0)))OR(rt0.c0)))AND(((('614232010')) NOT BETWEEN ((v0.c0)) AND ((0.8749974380688319))))))OR(((v0.c0)*('')))))AND((~ (rt0.c3)))))AND(LIKELY(DISTINCT rt0.c3)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c1) IS FALSE))OR(CASE WHEN rt0.c0 THEN v0.c0 END)))AND(((rt0.c3) IS TRUE))))AND(CASE WHEN '+1PMP' THEN rt0.c2 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(rt0.c3)) WHERE (((((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))OR(((((rt0.c1)OR(v0.c0)))AND(rt0.c1)))))OR(rt0.c0 COLLATE NOCASE))) ORDER BY ((((((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(v0.c0)))OR(rt0.c0)))AND(((('614232010')) NOT BETWEEN ((v0.c0)) AND ((0.8749974380688319))))))OR(((v0.c0)*('')))))AND((~ (rt0.c3)))))AND(LIKELY(DISTINCT rt0.c3)))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((NULL)!=(x''))) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END) AND (((v0.c0)&(rt0.c3))))) ORDER BY json_array_length(((0.3615782202409835) IS TRUE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)!=(x''))) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END) AND (((v0.c0)&(rt0.c3))))) IS TRUE)  as count FROM v0, rt0 ORDER BY json_array_length(((0.3615782202409835) IS TRUE))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((NULL)!=(x''))) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END) AND (((v0.c0)&(rt0.c3))))) ORDER BY json_array_length(((0.3615782202409835) IS TRUE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)!=(x''))) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END) AND (((v0.c0)&(rt0.c3))))) IS TRUE)  as count FROM v0, rt0 ORDER BY json_array_length(((0.3615782202409835) IS TRUE))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((NULL)!=(x''))) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END) AND (((v0.c0)&(rt0.c3))))) ORDER BY json_array_length(((0.3615782202409835) IS TRUE))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))>(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))>(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))>(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))>(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))>(rt0.c2 COLLATE NOCASE)));
SELECT * FROM v0, rt0 WHERE (CAST(IFNULL(DISTINCT rt0.c2, rt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(DISTINCT rt0.c2, rt0.c0) AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CAST(IFNULL(DISTINCT rt0.c2, rt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(DISTINCT rt0.c2, rt0.c0) AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CAST(IFNULL(DISTINCT rt0.c2, rt0.c0) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c1);
SELECT COUNT(*) FROM v0, rt0 WHERE (0.19836598268088124);
SELECT SUM(count) FROM (SELECT ALL ((0.19836598268088124) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (0.19836598268088124);
SELECT SUM(count) FROM (SELECT ALL ((0.19836598268088124) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (0.19836598268088124);
SELECT ALL * FROM v0, rt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT NULL) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT NULL) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS TEXT));
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)/(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (NOT ((v0.c0 IN ()))), (('jDS釼' COLLATE RTRIM)>>((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)/(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (NOT ((v0.c0 IN ()))), (('jDS釼' COLLATE RTRIM)>>((~ (v0.c0)))));
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)/(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (NOT ((v0.c0 IN ()))), (('jDS釼' COLLATE RTRIM)>>((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)/(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (NOT ((v0.c0 IN ()))), (('jDS釼' COLLATE RTRIM)>>((~ (v0.c0)))));
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)/(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (NOT ((v0.c0 IN ()))), (('jDS釼' COLLATE RTRIM)>>((~ (v0.c0))));
SELECT ALL * FROM rt0 WHERE ((- ((((rt0.c2, rt0.c2, rt0.c2, rt0.c1, rt0.c3))<=((rt0.c1, rt0.c0, rt0.c0, rt0.c0, rt0.c1)))))) ORDER BY ((((0.23065986763442659) BETWEEN (rt0.c2) AND (rt0.c2)))>(CAST(rt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c2, rt0.c2, rt0.c2, rt0.c1, rt0.c3))<=((rt0.c1, rt0.c0, rt0.c0, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((0.23065986763442659) BETWEEN (rt0.c2) AND (rt0.c2)))>(CAST(rt0.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- ((((rt0.c2, rt0.c2, rt0.c2, rt0.c1, rt0.c3))<=((rt0.c1, rt0.c0, rt0.c0, rt0.c0, rt0.c1)))))) ORDER BY ((((0.23065986763442659) BETWEEN (rt0.c2) AND (rt0.c2)))>(CAST(rt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c2, rt0.c2, rt0.c2, rt0.c1, rt0.c3))<=((rt0.c1, rt0.c0, rt0.c0, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((0.23065986763442659) BETWEEN (rt0.c2) AND (rt0.c2)))>(CAST(rt0.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- ((((rt0.c2, rt0.c2, rt0.c2, rt0.c1, rt0.c3))<=((rt0.c1, rt0.c0, rt0.c0, rt0.c0, rt0.c1)))))) ORDER BY ((((0.23065986763442659) BETWEEN (rt0.c2) AND (rt0.c2)))>(CAST(rt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c0) NOTNULL))||(CASE WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY CASE CAST(NULL AS TEXT)  WHEN ((rt0.c3)-(rt0.c1)) THEN ((1363951.0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) WHEN ((rt0.c0)>(rt0.c0)) THEN rt0.c3 WHEN TRIM(rt0.c2) THEN CAST(rt0.c2 AS NUMERIC) ELSE CAST(381076329 AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))||(CASE WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(NULL AS TEXT)  WHEN ((rt0.c3)-(rt0.c1)) THEN ((1363951.0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) WHEN ((rt0.c0)>(rt0.c0)) THEN rt0.c3 WHEN TRIM(rt0.c2) THEN CAST(rt0.c2 AS NUMERIC) ELSE CAST(381076329 AS TEXT) END  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c0) NOTNULL))||(CASE WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY CASE CAST(NULL AS TEXT)  WHEN ((rt0.c3)-(rt0.c1)) THEN ((1363951.0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) WHEN ((rt0.c0)>(rt0.c0)) THEN rt0.c3 WHEN TRIM(rt0.c2) THEN CAST(rt0.c2 AS NUMERIC) ELSE CAST(381076329 AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))||(CASE WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(NULL AS TEXT)  WHEN ((rt0.c3)-(rt0.c1)) THEN ((1363951.0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) WHEN ((rt0.c0)>(rt0.c0)) THEN rt0.c3 WHEN TRIM(rt0.c2) THEN CAST(rt0.c2 AS NUMERIC) ELSE CAST(381076329 AS TEXT) END  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c0) NOTNULL))||(CASE WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY CASE CAST(NULL AS TEXT)  WHEN ((rt0.c3)-(rt0.c1)) THEN ((1363951.0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) WHEN ((rt0.c0)>(rt0.c0)) THEN rt0.c3 WHEN TRIM(rt0.c2) THEN CAST(rt0.c2 AS NUMERIC) ELSE CAST(381076329 AS TEXT) END  NULLS FIRST;
SELECT * FROM rt0 NATURAL JOIN v0 WHERE ((((rt0.c2 IN ()))AND((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))AND((- (rt0.c3))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE ((((rt0.c2 IN ()))AND((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))AND((- (rt0.c3))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE ((((rt0.c2 IN ()))AND((- (rt0.c3)))));
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)>>(rt0.c0)))>>(CAST(-1227072944 AS BLOB)))) ORDER BY ((((CAST(rt0.c1 AS BLOB))OR(((v0.c0)LIKE(v0.c0)))))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))) DESC, ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)))<<((~ (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>(rt0.c0)))>>(CAST(-1227072944 AS BLOB)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CAST(rt0.c1 AS BLOB))OR(((v0.c0)LIKE(v0.c0)))))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))) DESC, ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)))<<((~ (rt0.c2))))  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)>>(rt0.c0)))>>(CAST(-1227072944 AS BLOB)))) ORDER BY ((((CAST(rt0.c1 AS BLOB))OR(((v0.c0)LIKE(v0.c0)))))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))) DESC, ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)))<<((~ (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>(rt0.c0)))>>(CAST(-1227072944 AS BLOB)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CAST(rt0.c1 AS BLOB))OR(((v0.c0)LIKE(v0.c0)))))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))) DESC, ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)))<<((~ (rt0.c2))))  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)>>(rt0.c0)))>>(CAST(-1227072944 AS BLOB)))) ORDER BY ((((CAST(rt0.c1 AS BLOB))OR(((v0.c0)LIKE(v0.c0)))))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))) DESC, ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)))<<((~ (rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((ABS((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((ABS((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2)IS(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2)IS(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2)IS(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (CAST(COALESCE(rt0.c1, rt0.c0) AS REAL)) ORDER BY LIKELIHOOD(((0.689932719427183) ISNULL), 0.2911777550069895)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(rt0.c1, rt0.c0) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(((0.689932719427183) ISNULL), 0.2911777550069895)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(COALESCE(rt0.c1, rt0.c0) AS REAL)) ORDER BY LIKELIHOOD(((0.689932719427183) ISNULL), 0.2911777550069895)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(rt0.c1, rt0.c0) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(((0.689932719427183) ISNULL), 0.2911777550069895)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(COALESCE(rt0.c1, rt0.c0) AS REAL)) ORDER BY LIKELIHOOD(((0.689932719427183) ISNULL), 0.2911777550069895)  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE ((').%uI' IN ())) ORDER BY (NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((').%uI' IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((').%uI' IN ())) ORDER BY (NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((').%uI' IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((').%uI' IN ())) ORDER BY (NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))*(((((((((rt0.c2)OR(rt0.c1)))AND(0.12321610825291751)))OR(x'')))OR(rt0.c1))))) ORDER BY ((((((((((rt0.c1)>>(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))AND(rtreenode(rt0.c2, rt0.c3))))AND((rt0.c2 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))*(((((((((rt0.c2)OR(rt0.c1)))AND(0.12321610825291751)))OR(x'')))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)>>(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))AND(rtreenode(rt0.c2, rt0.c3))))AND((rt0.c2 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))*(((((((((rt0.c2)OR(rt0.c1)))AND(0.12321610825291751)))OR(x'')))OR(rt0.c1))))) ORDER BY ((((((((((rt0.c1)>>(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))AND(rtreenode(rt0.c2, rt0.c3))))AND((rt0.c2 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))*(((((((((rt0.c2)OR(rt0.c1)))AND(0.12321610825291751)))OR(x'')))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)>>(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))AND(rtreenode(rt0.c2, rt0.c3))))AND((rt0.c2 IN ()))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC)) ORDER BY (((NULL)) BETWEEN ((((v0.c0)<(v0.c0)))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (((NULL)) BETWEEN ((((v0.c0)<(v0.c0)))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC)) ORDER BY (((NULL)) BETWEEN ((((v0.c0)<(v0.c0)))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (((NULL)) BETWEEN ((((v0.c0)<(v0.c0)))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC)) ORDER BY (((NULL)) BETWEEN ((((v0.c0)<(v0.c0)))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))  NULLS FIRST;
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (+ (((rt0.c2)-(v0.c0)))) WHERE (CAST(CAST(rt0.c3 AS TEXT) AS BLOB)) ORDER BY (((- (rt0.c3))) NOT BETWEEN (rt0.c2) AND ('-206971447')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c3 AS TEXT) AS BLOB)) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (+ (((rt0.c2)-(v0.c0)))) ORDER BY (((- (rt0.c3))) NOT BETWEEN (rt0.c2) AND ('-206971447')) DESC);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (+ (((rt0.c2)-(v0.c0)))) WHERE (CAST(CAST(rt0.c3 AS TEXT) AS BLOB)) ORDER BY (((- (rt0.c3))) NOT BETWEEN (rt0.c2) AND ('-206971447')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c3 AS TEXT) AS BLOB)) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (+ (((rt0.c2)-(v0.c0)))) ORDER BY (((- (rt0.c3))) NOT BETWEEN (rt0.c2) AND ('-206971447')) DESC);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (+ (((rt0.c2)-(v0.c0)))) WHERE (CAST(CAST(rt0.c3 AS TEXT) AS BLOB)) ORDER BY (((- (rt0.c3))) NOT BETWEEN (rt0.c2) AND ('-206971447')) DESC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>>(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>>(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>>(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>>(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>>(rt0.c0))) IS FALSE));
SELECT * FROM v0, rt0 WHERE (((CAST(rt0.c3 AS INTEGER)) NOT NULL)) ORDER BY (((v0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((((v0.c0)LIKE(rt0.c0)), v0.c0 COLLATE NOCASE, ((v0.c0) IS FALSE))) AND ((rt0.c3 COLLATE NOCASE, ((v0.c0)&(rt0.c0)), rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((((v0.c0)LIKE(rt0.c0)), v0.c0 COLLATE NOCASE, ((v0.c0) IS FALSE))) AND ((rt0.c3 COLLATE NOCASE, ((v0.c0)&(rt0.c0)), rt0.c0))));
SELECT * FROM v0, rt0 WHERE (((CAST(rt0.c3 AS INTEGER)) NOT NULL)) ORDER BY (((v0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((((v0.c0)LIKE(rt0.c0)), v0.c0 COLLATE NOCASE, ((v0.c0) IS FALSE))) AND ((rt0.c3 COLLATE NOCASE, ((v0.c0)&(rt0.c0)), rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((((v0.c0)LIKE(rt0.c0)), v0.c0 COLLATE NOCASE, ((v0.c0) IS FALSE))) AND ((rt0.c3 COLLATE NOCASE, ((v0.c0)&(rt0.c0)), rt0.c0))));
SELECT * FROM v0, rt0 WHERE (((CAST(rt0.c3 AS INTEGER)) NOT NULL)) ORDER BY (((v0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((((v0.c0)LIKE(rt0.c0)), v0.c0 COLLATE NOCASE, ((v0.c0) IS FALSE))) AND ((rt0.c3 COLLATE NOCASE, ((v0.c0)&(rt0.c0)), rt0.c0)));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c1)>(rt0.c3)))) WHERE (CAST(rt0.c0 COLLATE BINARY AS REAL)) ORDER BY ((v0.c0 COLLATE NOCASE)IS(CASE rt0.c0  WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c1)>(rt0.c3)))) ORDER BY ((v0.c0 COLLATE NOCASE)IS(CASE rt0.c0  WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c1)>(rt0.c3)))) WHERE (CAST(rt0.c0 COLLATE BINARY AS REAL)) ORDER BY ((v0.c0 COLLATE NOCASE)IS(CASE rt0.c0  WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c1)>(rt0.c3)))) ORDER BY ((v0.c0 COLLATE NOCASE)IS(CASE rt0.c0  WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c1)>(rt0.c3)))) WHERE (CAST(rt0.c0 COLLATE BINARY AS REAL)) ORDER BY ((v0.c0 COLLATE NOCASE)IS(CASE rt0.c0  WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)GLOB(NULL))) ORDER BY (CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN (((v0.c0)>=(v0.c0)), ((((v0.c0)AND(x'89a2')))OR(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)GLOB(NULL))) IS TRUE)  as count FROM v0 ORDER BY (CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN (((v0.c0)>=(v0.c0)), ((((v0.c0)AND(x'89a2')))OR(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)GLOB(NULL))) ORDER BY (CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN (((v0.c0)>=(v0.c0)), ((((v0.c0)AND(x'89a2')))OR(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)GLOB(NULL))) IS TRUE)  as count FROM v0 ORDER BY (CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN (((v0.c0)>=(v0.c0)), ((((v0.c0)AND(x'89a2')))OR(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)GLOB(NULL))) ORDER BY (CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN (((v0.c0)>=(v0.c0)), ((((v0.c0)AND(x'89a2')))OR(v0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(DISTINCT ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(DISTINCT ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(DISTINCT ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT * FROM rt0, v0 WHERE ((((rt0.c1 IN ())) NOT NULL)) ORDER BY ((((rt0.c3) NOT NULL))&(((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c3) NOT NULL))&(((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((rt0.c1 IN ())) NOT NULL)) ORDER BY ((((rt0.c3) NOT NULL))&(((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c3) NOT NULL))&(((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((rt0.c1 IN ())) NOT NULL)) ORDER BY ((((rt0.c3) NOT NULL))&(((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c3)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3))), (~ (0.2344756602708573))))<(((~ (v0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (v0.c0)), rt0.c3 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c3)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3))), (~ (0.2344756602708573))))<(((~ (v0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (v0.c0)), rt0.c3 COLLATE BINARY)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c3)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3))), (~ (0.2344756602708573))))<(((~ (v0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (v0.c0)), rt0.c3 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c3)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3))), (~ (0.2344756602708573))))<(((~ (v0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (v0.c0)), rt0.c3 COLLATE BINARY)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c3)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3))), (~ (0.2344756602708573))))<(((~ (v0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (v0.c0)), rt0.c3 COLLATE BINARY))));
SELECT COUNT(*) FROM v0 WHERE (LIKELY(json_extract(v0.c0, x'dc01'))) ORDER BY ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), v0.c0))<>((((v0.c0)==(0.7753719597394726)), (NOT (v0.c0)), CAST(NULL AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(json_extract(v0.c0, x'dc01'))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), v0.c0))<>((((v0.c0)==(0.7753719597394726)), (NOT (v0.c0)), CAST(NULL AS REAL)))) DESC);
SELECT COUNT(*) FROM v0 WHERE (LIKELY(json_extract(v0.c0, x'dc01'))) ORDER BY ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), v0.c0))<>((((v0.c0)==(0.7753719597394726)), (NOT (v0.c0)), CAST(NULL AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(json_extract(v0.c0, x'dc01'))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), v0.c0))<>((((v0.c0)==(0.7753719597394726)), (NOT (v0.c0)), CAST(NULL AS REAL)))) DESC);
SELECT COUNT(*) FROM v0 WHERE (LIKELY(json_extract(v0.c0, x'dc01'))) ORDER BY ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), v0.c0))<>((((v0.c0)==(0.7753719597394726)), (NOT (v0.c0)), CAST(NULL AS REAL)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS TEXT));
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c1) NOT NULL))OR(((rt0.c2) NOT BETWEEN (x'') AND (rt0.c3)))))AND(''))) ORDER BY SUBSTR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, (rt0.c3 IN (rt0.c3))) ASC, (((~ (v0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) NOT NULL))OR(((rt0.c2) NOT BETWEEN (x'') AND (rt0.c3)))))AND(''))) IS TRUE)  as count FROM v0, rt0 ORDER BY SUBSTR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, (rt0.c3 IN (rt0.c3))) ASC, (((~ (v0.c0))) ISNULL) ASC);
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c1) NOT NULL))OR(((rt0.c2) NOT BETWEEN (x'') AND (rt0.c3)))))AND(''))) ORDER BY SUBSTR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, (rt0.c3 IN (rt0.c3))) ASC, (((~ (v0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) NOT NULL))OR(((rt0.c2) NOT BETWEEN (x'') AND (rt0.c3)))))AND(''))) IS TRUE)  as count FROM v0, rt0 ORDER BY SUBSTR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, (rt0.c3 IN (rt0.c3))) ASC, (((~ (v0.c0))) ISNULL) ASC);
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c1) NOT NULL))OR(((rt0.c2) NOT BETWEEN (x'') AND (rt0.c3)))))AND(''))) ORDER BY SUBSTR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, (rt0.c3 IN (rt0.c3))) ASC, (((~ (v0.c0))) ISNULL) ASC;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON rt0.c0 WHERE (((((0.5551076500639716) NOT NULL))<=(CASE WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.5551076500639716) NOT NULL))<=(CASE WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON rt0.c0);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON rt0.c0 WHERE (((((0.5551076500639716) NOT NULL))<=(CASE WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.5551076500639716) NOT NULL))<=(CASE WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON rt0.c0);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON rt0.c0 WHERE (((((0.5551076500639716) NOT NULL))<=(CASE WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c0 ELSE rt0.c0 END)));
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT COUNT(*) FROM v0, rt0 WHERE ((rt0.c3 IN (((rt0.c1) IS TRUE)))) ORDER BY (((((((((~ (v0.c0)))OR(((rt0.c3) IS FALSE))))OR(rt0.c3 COLLATE NOCASE)))OR((+ (rt0.c1)))))OR(((rt0.c3)>=(rt0.c3)))) ASC  NULLS LAST, (((((('') NOTNULL))OR(((rt0.c1)/(rt0.c1)))))AND((((rt0.c1)) NOT BETWEEN ((x'a12f')) AND ((rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((((~ (v0.c0)))OR(((rt0.c3) IS FALSE))))OR(rt0.c3 COLLATE NOCASE)))OR((+ (rt0.c1)))))OR(((rt0.c3)>=(rt0.c3)))) ASC  NULLS LAST, (((((('') NOTNULL))OR(((rt0.c1)/(rt0.c1)))))AND((((rt0.c1)) NOT BETWEEN ((x'a12f')) AND ((rt0.c3))))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((rt0.c3 IN (((rt0.c1) IS TRUE)))) ORDER BY (((((((((~ (v0.c0)))OR(((rt0.c3) IS FALSE))))OR(rt0.c3 COLLATE NOCASE)))OR((+ (rt0.c1)))))OR(((rt0.c3)>=(rt0.c3)))) ASC  NULLS LAST, (((((('') NOTNULL))OR(((rt0.c1)/(rt0.c1)))))AND((((rt0.c1)) NOT BETWEEN ((x'a12f')) AND ((rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((((~ (v0.c0)))OR(((rt0.c3) IS FALSE))))OR(rt0.c3 COLLATE NOCASE)))OR((+ (rt0.c1)))))OR(((rt0.c3)>=(rt0.c3)))) ASC  NULLS LAST, (((((('') NOTNULL))OR(((rt0.c1)/(rt0.c1)))))AND((((rt0.c1)) NOT BETWEEN ((x'a12f')) AND ((rt0.c3))))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((rt0.c3 IN (((rt0.c1) IS TRUE)))) ORDER BY (((((((((~ (v0.c0)))OR(((rt0.c3) IS FALSE))))OR(rt0.c3 COLLATE NOCASE)))OR((+ (rt0.c1)))))OR(((rt0.c3)>=(rt0.c3)))) ASC  NULLS LAST, (((((('') NOTNULL))OR(((rt0.c1)/(rt0.c1)))))AND((((rt0.c1)) NOT BETWEEN ((x'a12f')) AND ((rt0.c3)))));
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1)|(((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)|(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1)|(((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)|(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1)|(((rt0.c1) ISNULL))));
SELECT ALL * FROM rt0, v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS REAL));
SELECT * FROM rt0, v0 NOT INDEXED WHERE ((((((((rt0.c0, rt0.c0, rt0.c1))=((rt0.c2, rt0.c1, rt0.c0))))OR((((rt0.c1))>=((rt0.c2))))))AND(rt0.c0 COLLATE NOCASE))) ORDER BY ((~ (NULL)) IN (CASE WHEN x'323f' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 END, ((rt0.c1) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0, rt0.c0, rt0.c1))==((rt0.c2, rt0.c1, rt0.c0))))OR((((rt0.c1))>=((rt0.c2))))))AND(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((~ (NULL)) IN (CASE WHEN x'323f' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 END, ((rt0.c1) NOT NULL))) ASC  NULLS LAST);
SELECT * FROM rt0, v0 NOT INDEXED WHERE ((((((((rt0.c0, rt0.c0, rt0.c1))=((rt0.c2, rt0.c1, rt0.c0))))OR((((rt0.c1))>=((rt0.c2))))))AND(rt0.c0 COLLATE NOCASE))) ORDER BY ((~ (NULL)) IN (CASE WHEN x'323f' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 END, ((rt0.c1) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0, rt0.c0, rt0.c1))==((rt0.c2, rt0.c1, rt0.c0))))OR((((rt0.c1))>=((rt0.c2))))))AND(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((~ (NULL)) IN (CASE WHEN x'323f' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 END, ((rt0.c1) NOT NULL))) ASC  NULLS LAST);
SELECT * FROM rt0, v0 NOT INDEXED WHERE ((((((((rt0.c0, rt0.c0, rt0.c1))=((rt0.c2, rt0.c1, rt0.c0))))OR((((rt0.c1))>=((rt0.c2))))))AND(rt0.c0 COLLATE NOCASE))) ORDER BY ((~ (NULL)) IN (CASE WHEN x'323f' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 END, ((rt0.c1) NOT NULL))) ASC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE ((((((rt0.c0 IN ()))AND(json_array(rt0.c2, rt0.c2))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND (('S''')))))) ORDER BY ((((rt0.c0)AND(rt0.c2)))&(NULL))  NULLS FIRST, (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))<(CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))AND(json_array(rt0.c2, rt0.c2))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND (('S''')))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0)AND(rt0.c2)))&(NULL))  NULLS FIRST, (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))<(CAST(v0.c0 AS TEXT))));
SELECT * FROM v0, rt0 WHERE ((((((rt0.c0 IN ()))AND(json_array(rt0.c2, rt0.c2))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND (('S''')))))) ORDER BY ((((rt0.c0)AND(rt0.c2)))&(NULL))  NULLS FIRST, (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))<(CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))AND(json_array(rt0.c2, rt0.c2))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND (('S''')))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0)AND(rt0.c2)))&(NULL))  NULLS FIRST, (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))<(CAST(v0.c0 AS TEXT))));
SELECT * FROM v0, rt0 WHERE ((((((rt0.c0 IN ()))AND(json_array(rt0.c2, rt0.c2))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND (('S''')))))) ORDER BY ((((rt0.c0)AND(rt0.c2)))&(NULL))  NULLS FIRST, (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))<(CAST(v0.c0 AS TEXT)));
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN 0.3518822187163716 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c0) NOT NULL) ELSE (~ (rt0.c2)) END) ORDER BY '-1e500';
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN 0.3518822187163716 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c0) NOT NULL) ELSE (~ (rt0.c2)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY '-1e500');
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN 0.3518822187163716 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c0) NOT NULL) ELSE (~ (rt0.c2)) END) ORDER BY '-1e500';
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN 0.3518822187163716 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c0) NOT NULL) ELSE (~ (rt0.c2)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY '-1e500');
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN 0.3518822187163716 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c0) NOT NULL) ELSE (~ (rt0.c2)) END) ORDER BY '-1e500';
SELECT * FROM v0 INNER JOIN rt0 ON json_type(((rt0.c3) NOT NULL)) WHERE ((0x11561616 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0x11561616 IN ())) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON json_type(((rt0.c3) NOT NULL)));
SELECT * FROM v0 INNER JOIN rt0 ON json_type(((rt0.c3) NOT NULL)) WHERE ((0x11561616 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0x11561616 IN ())) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON json_type(((rt0.c3) NOT NULL)));
SELECT * FROM v0 INNER JOIN rt0 ON json_type(((rt0.c3) NOT NULL)) WHERE ((0x11561616 IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((((rt0.c3, 'E6y', v0.c0)) NOT BETWEEN ((rt0.c0, 0.7042882946150829, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c3)))) BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))) AND (((0.16092958937372548) IS TRUE))) WHERE (((CASE rt0.c2  WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END)<(rt0.c1 COLLATE NOCASE))) ORDER BY rt0.c2 ASC  NULLS LAST, ((((((((CAST(v0.c0 AS NUMERIC))OR(-587188310)))OR(json_array_length(rt0.c2, 0X6fb8519a))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))))AND(((rt0.c1)||(v0.c0)))), ((rt0.c2) NOT NULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END)<(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((((rt0.c3, 'E6y', v0.c0)) NOT BETWEEN ((rt0.c0, 0.7042882946150829, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c3)))) BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))) AND (((0.16092958937372548) IS TRUE))) ORDER BY rt0.c2 ASC  NULLS LAST, ((((((((CAST(v0.c0 AS NUMERIC))OR(-587188310)))OR(json_array_length(rt0.c2, 0X6fb8519a))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))))AND(((rt0.c1)||(v0.c0)))), ((rt0.c2) NOT NULL) COLLATE RTRIM);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((((rt0.c3, 'E6y', v0.c0)) NOT BETWEEN ((rt0.c0, 0.7042882946150829, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c3)))) BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))) AND (((0.16092958937372548) IS TRUE))) WHERE (((CASE rt0.c2  WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END)<(rt0.c1 COLLATE NOCASE))) ORDER BY rt0.c2 ASC  NULLS LAST, ((((((((CAST(v0.c0 AS NUMERIC))OR(-587188310)))OR(json_array_length(rt0.c2, 0X6fb8519a))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))))AND(((rt0.c1)||(v0.c0)))), ((rt0.c2) NOT NULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END)<(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((((rt0.c3, 'E6y', v0.c0)) NOT BETWEEN ((rt0.c0, 0.7042882946150829, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c3)))) BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))) AND (((0.16092958937372548) IS TRUE))) ORDER BY rt0.c2 ASC  NULLS LAST, ((((((((CAST(v0.c0 AS NUMERIC))OR(-587188310)))OR(json_array_length(rt0.c2, 0X6fb8519a))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))))AND(((rt0.c1)||(v0.c0)))), ((rt0.c2) NOT NULL) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT rt0.c1, (rt0.c2 IN ()))) ORDER BY ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)||((((rt0.c1))==((rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt0.c1, (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)||((((rt0.c1))==((rt0.c2))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT rt0.c1, (rt0.c2 IN ()))) ORDER BY ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)||((((rt0.c1))==((rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt0.c1, (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)||((((rt0.c1))==((rt0.c2))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT rt0.c1, (rt0.c2 IN ()))) ORDER BY ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)||((((rt0.c1))==((rt0.c2))))) DESC  NULLS LAST;
SELECT * FROM rt0, v0 NOT INDEXED WHERE (((highlight(x'', v0.c0, rt0.c3, 'xt'))|(((((rt0.c1)AND(rt0.c3)))AND(NULL))))) ORDER BY (((+ (rt0.c3)))+(((v0.c0)<(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((highlight(x'', v0.c0, rt0.c3, 'xt'))|(((((rt0.c1)AND(rt0.c3)))AND(NULL))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((+ (rt0.c3)))+(((v0.c0)<(rt0.c1))))  NULLS LAST);
SELECT * FROM rt0, v0 NOT INDEXED WHERE (((highlight(x'', v0.c0, rt0.c3, 'xt'))|(((((rt0.c1)AND(rt0.c3)))AND(NULL))))) ORDER BY (((+ (rt0.c3)))+(((v0.c0)<(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((highlight(x'', v0.c0, rt0.c3, 'xt'))|(((((rt0.c1)AND(rt0.c3)))AND(NULL))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((+ (rt0.c3)))+(((v0.c0)<(rt0.c1))))  NULLS LAST);
SELECT * FROM rt0, v0 NOT INDEXED WHERE (((highlight(x'', v0.c0, rt0.c3, 'xt'))|(((((rt0.c1)AND(rt0.c3)))AND(NULL))))) ORDER BY (((+ (rt0.c3)))+(((v0.c0)<(rt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)OR(rt0.c0))))=((((rt0.c2) NOTNULL))))) ORDER BY (rt0.c3 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)OR(rt0.c0))))=((((rt0.c2) NOTNULL))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c3 IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)OR(rt0.c0))))=((((rt0.c2) NOTNULL))))) ORDER BY (rt0.c3 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)OR(rt0.c0))))=((((rt0.c2) NOTNULL))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c3 IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)OR(rt0.c0))))=((((rt0.c2) NOTNULL))))) ORDER BY (rt0.c3 IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c3)>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3)>(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c3)>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3)>(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c3)>(rt0.c0)))));
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) ORDER BY CASE WHEN ((v0.c0)<(v0.c0)) THEN (v0.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0)<(v0.c0)) THEN (v0.c0 IN ()) END  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) ORDER BY CASE WHEN ((v0.c0)<(v0.c0)) THEN (v0.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0)<(v0.c0)) THEN (v0.c0 IN ()) END  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) ORDER BY CASE WHEN ((v0.c0)<(v0.c0)) THEN (v0.c0 IN ()) END  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE ((((rt0.c0)AND(rt0.c3)))OR(rt0.c1))  WHEN ((rt0.c0)=(rt0.c1)) THEN INSTR(x'', rt0.c3) END) ORDER BY (+ (LIKELY(DISTINCT rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c0)AND(rt0.c3)))OR(rt0.c1))  WHEN ((rt0.c0)=(rt0.c1)) THEN INSTR(x'', rt0.c3) END) IS TRUE)  as count FROM rt0 ORDER BY (+ (LIKELY(DISTINCT rt0.c2))) DESC);
SELECT * FROM rt0 WHERE (CASE ((((rt0.c0)AND(rt0.c3)))OR(rt0.c1))  WHEN ((rt0.c0)=(rt0.c1)) THEN INSTR(x'', rt0.c3) END) ORDER BY (+ (LIKELY(DISTINCT rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c0)AND(rt0.c3)))OR(rt0.c1))  WHEN ((rt0.c0)=(rt0.c1)) THEN INSTR(x'', rt0.c3) END) IS TRUE)  as count FROM rt0 ORDER BY (+ (LIKELY(DISTINCT rt0.c2))) DESC);
SELECT * FROM rt0 WHERE (CASE ((((rt0.c0)AND(rt0.c3)))OR(rt0.c1))  WHEN ((rt0.c0)=(rt0.c1)) THEN INSTR(x'', rt0.c3) END) ORDER BY (+ (LIKELY(DISTINCT rt0.c2))) DESC;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) IN (rt0.c2))) ORDER BY (((((rt0.c2))>(('-1960945260')))) IS FALSE)  NULLS LAST, (((('-680487748' IN ()), ((rt0.c1) NOT NULL), ((rt0.c3)LIKE('g8nN	|풣'))))>((((rt0.c1)-(rt0.c2)), rt0.c3, (rt0.c3 IN ())))) DESC  NULLS FIRST, rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) IN (rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2))>(('-1960945260')))) IS FALSE)  NULLS LAST, (((('-680487748' IN ()), ((rt0.c1) NOT NULL), ((rt0.c3)LIKE('g8nN	|풣'))))>((((rt0.c1)-(rt0.c2)), rt0.c3, (rt0.c3 IN ())))) DESC  NULLS FIRST, rt0.c2);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) IN (rt0.c2))) ORDER BY (((((rt0.c2))>(('-1960945260')))) IS FALSE)  NULLS LAST, (((('-680487748' IN ()), ((rt0.c1) NOT NULL), ((rt0.c3)LIKE('g8nN	|풣'))))>((((rt0.c1)-(rt0.c2)), rt0.c3, (rt0.c3 IN ())))) DESC  NULLS FIRST, rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) IN (rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2))>(('-1960945260')))) IS FALSE)  NULLS LAST, (((('-680487748' IN ()), ((rt0.c1) NOT NULL), ((rt0.c3)LIKE('g8nN	|풣'))))>((((rt0.c1)-(rt0.c2)), rt0.c3, (rt0.c3 IN ())))) DESC  NULLS FIRST, rt0.c2);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) IN (rt0.c2))) ORDER BY (((((rt0.c2))>(('-1960945260')))) IS FALSE)  NULLS LAST, (((('-680487748' IN ()), ((rt0.c1) NOT NULL), ((rt0.c3)LIKE('g8nN	|풣'))))>((((rt0.c1)-(rt0.c2)), rt0.c3, (rt0.c3 IN ())))) DESC  NULLS FIRST, rt0.c2;
SELECT ALL COUNT(*) FROM v0 WHERE ((- (1363951))) ORDER BY (((((- (v0.c0)))AND(v0.c0 COLLATE RTRIM)))AND(ROUND(v0.c0, v0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (1363951))) IS TRUE)  as count FROM v0 ORDER BY (((((- (v0.c0)))AND(v0.c0 COLLATE RTRIM)))AND(ROUND(v0.c0, v0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (1363951))) ORDER BY (((((- (v0.c0)))AND(v0.c0 COLLATE RTRIM)))AND(ROUND(v0.c0, v0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (1363951))) IS TRUE)  as count FROM v0 ORDER BY (((((- (v0.c0)))AND(v0.c0 COLLATE RTRIM)))AND(ROUND(v0.c0, v0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (1363951))) ORDER BY (((((- (v0.c0)))AND(v0.c0 COLLATE RTRIM)))AND(ROUND(v0.c0, v0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE ((INSTR(v0.c0, rt0.c3) IN ())) ORDER BY ((0.7105067421266407)!=(((rt0.c1)|(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((INSTR(v0.c0, rt0.c3) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((0.7105067421266407)<>(((rt0.c1)|(rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE ((INSTR(v0.c0, rt0.c3) IN ())) ORDER BY ((0.7105067421266407)!=(((rt0.c1)|(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((INSTR(v0.c0, rt0.c3) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((0.7105067421266407)<>(((rt0.c1)|(rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE ((INSTR(v0.c0, rt0.c3) IN ())) ORDER BY ((0.7105067421266407)!=(((rt0.c1)|(rt0.c1)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 END)AND(CASE WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 END)AND(CASE WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 END)AND(CASE WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 END)AND(CASE WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 END)AND(CASE WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c0 END)) ASC  NULLS FIRST;
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c0 END)OR(((rt0.c3) BETWEEN (v0.c0) AND (rt0.c2)))) WHERE ('뚦*{9');
SELECT SUM(count) FROM (SELECT (('뚦*{9') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c0 END)OR(((rt0.c3) BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c0 END)OR(((rt0.c3) BETWEEN (v0.c0) AND (rt0.c2)))) WHERE ('뚦*{9');
SELECT SUM(count) FROM (SELECT (('뚦*{9') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c0 END)OR(((rt0.c3) BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c0 END)OR(((rt0.c3) BETWEEN (v0.c0) AND (rt0.c2)))) WHERE ('뚦*{9');
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN (((rt0.c1, rt0.c3, 0.19836598268088124, rt0.c2, rt0.c3))==((rt0.c3, rt0.c0, rt0.c1, 0.8197859832990211, rt0.c2))) THEN x'' ELSE (rt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1, rt0.c3, 0.19836598268088124, rt0.c2, rt0.c3))=((rt0.c3, rt0.c0, rt0.c1, 0.8197859832990211, rt0.c2))) THEN x'' ELSE (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN (((rt0.c1, rt0.c3, 0.19836598268088124, rt0.c2, rt0.c3))==((rt0.c3, rt0.c0, rt0.c1, 0.8197859832990211, rt0.c2))) THEN x'' ELSE (rt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1, rt0.c3, 0.19836598268088124, rt0.c2, rt0.c3))=((rt0.c3, rt0.c0, rt0.c1, 0.8197859832990211, rt0.c2))) THEN x'' ELSE (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN (((rt0.c1, rt0.c3, 0.19836598268088124, rt0.c2, rt0.c3))==((rt0.c3, rt0.c0, rt0.c1, 0.8197859832990211, rt0.c2))) THEN x'' ELSE (rt0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (NOT (rt0.c2)) THEN ((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)) ELSE (((rt0.c1))<>((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (rt0.c2)) THEN ((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)) ELSE (((rt0.c1))<>((rt0.c2))) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (NOT (rt0.c2)) THEN ((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)) ELSE (((rt0.c1))<>((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (rt0.c2)) THEN ((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)) ELSE (((rt0.c1))<>((rt0.c2))) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (NOT (rt0.c2)) THEN ((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)) ELSE (((rt0.c1))<>((rt0.c2))) END);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS BLOB))<<(LIKELY(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS BLOB))<<(LIKELY(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS BLOB))<<(LIKELY(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS BLOB))<<(LIKELY(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS BLOB))<<(LIKELY(rt0.c0))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON CASE rt0.c2  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c2 END COLLATE NOCASE WHERE ((((v0.c0 COLLATE BINARY))<((NULLIF(rt0.c2, rt0.c0))))) ORDER BY UPPER(x'') DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE BINARY))<((NULLIF(rt0.c2, rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CASE rt0.c2  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c2 END COLLATE NOCASE ORDER BY UPPER(x'') DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON CASE rt0.c2  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c2 END COLLATE NOCASE WHERE ((((v0.c0 COLLATE BINARY))<((NULLIF(rt0.c2, rt0.c0))))) ORDER BY UPPER(x'') DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE BINARY))<((NULLIF(rt0.c2, rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CASE rt0.c2  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c2 END COLLATE NOCASE ORDER BY UPPER(x'') DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON CASE rt0.c2  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c2 END COLLATE NOCASE WHERE ((((v0.c0 COLLATE BINARY))<((NULLIF(rt0.c2, rt0.c0))))) ORDER BY UPPER(x'') DESC;
SELECT * FROM v0 WHERE (((((v0.c0)<=(v0.c0)))<>((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0))>((v0.c0))))) AND ((((v0.c0)>>(v0.c0))))), -1.123495208E9, CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<=(v0.c0)))<>((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0))>((v0.c0))))) AND ((((v0.c0)>>(v0.c0))))), -1.123495208E9, CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS BLOB)  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c0)<=(v0.c0)))<>((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0))>((v0.c0))))) AND ((((v0.c0)>>(v0.c0))))), -1.123495208E9, CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<=(v0.c0)))<>((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0))>((v0.c0))))) AND ((((v0.c0)>>(v0.c0))))), -1.123495208E9, CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS BLOB)  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c0)<=(v0.c0)))<>((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0))>((v0.c0))))) AND ((((v0.c0)>>(v0.c0))))), -1.123495208E9, CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS BLOB)  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((+ (json_insert(v0.c0, 2086131423, v0.c0, v0.c0, v0.c0)))) ORDER BY v0.c0 ASC  NULLS LAST, (CAST(v0.c0 AS REAL) IN ((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (json_insert(v0.c0, 2086131423, v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS LAST, (CAST(v0.c0 AS REAL) IN ((~ (v0.c0)))));
SELECT ALL * FROM v0 WHERE ((+ (json_insert(v0.c0, 2086131423, v0.c0, v0.c0, v0.c0)))) ORDER BY v0.c0 ASC  NULLS LAST, (CAST(v0.c0 AS REAL) IN ((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (json_insert(v0.c0, 2086131423, v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS LAST, (CAST(v0.c0 AS REAL) IN ((~ (v0.c0)))));
SELECT ALL * FROM v0 WHERE ((+ (json_insert(v0.c0, 2086131423, v0.c0, v0.c0, v0.c0)))) ORDER BY v0.c0 ASC  NULLS LAST, (CAST(v0.c0 AS REAL) IN ((~ (v0.c0))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((0.6614035542539394) IS FALSE)) BETWEEN (SQLITE_COMPILEOPTION_GET(rt0.c2)) AND (json_valid(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.6614035542539394) IS FALSE)) BETWEEN (SQLITE_COMPILEOPTION_GET(rt0.c2)) AND (json_valid(NULL)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((0.6614035542539394) IS FALSE)) BETWEEN (SQLITE_COMPILEOPTION_GET(rt0.c2)) AND (json_valid(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.6614035542539394) IS FALSE)) BETWEEN (SQLITE_COMPILEOPTION_GET(rt0.c2)) AND (json_valid(NULL)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((0.6614035542539394) IS FALSE)) BETWEEN (SQLITE_COMPILEOPTION_GET(rt0.c2)) AND (json_valid(NULL))));
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((rt0.c3)>>(rt0.c2)) THEN rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)>>(rt0.c2)) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((rt0.c3)>>(rt0.c2)) THEN rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)>>(rt0.c2)) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((rt0.c3)>>(rt0.c2)) THEN rt0.c2 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((-2.120085279E9)<((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((-2.120085279E9)<((rt0.c1 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((-2.120085279E9)<((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((-2.120085279E9)<((rt0.c1 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((-2.120085279E9)<((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c2))=((rt0.c1)))))) ORDER BY ('' IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c2))==((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ('' IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c2))=((rt0.c1)))))) ORDER BY ('' IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c2))==((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ('' IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c2))=((rt0.c1)))))) ORDER BY ('' IN ());
SELECT * FROM v0 WHERE (((-1777203132) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0)&(v0.c0))))) ORDER BY CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((-1777203132) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0)&(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER)  NULLS LAST);
SELECT * FROM v0 WHERE (((-1777203132) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0)&(v0.c0))))) ORDER BY CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((-1777203132) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0)&(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER)  NULLS LAST);
SELECT * FROM v0 WHERE (((-1777203132) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0)&(v0.c0))))) ORDER BY CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER)  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (((CASE rt0.c3  WHEN NULL THEN rt0.c0 END) NOT NULL)) ORDER BY (((CAST(rt0.c2 AS REAL), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), ((rt0.c1)|(rt0.c0))))<((((rt0.c1) ISNULL), v0.c0, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN NULL THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((CAST(rt0.c2 AS REAL), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), ((rt0.c1)|(rt0.c0))))<((((rt0.c1) ISNULL), v0.c0, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((CASE rt0.c3  WHEN NULL THEN rt0.c0 END) NOT NULL)) ORDER BY (((CAST(rt0.c2 AS REAL), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), ((rt0.c1)|(rt0.c0))))<((((rt0.c1) ISNULL), v0.c0, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN NULL THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((CAST(rt0.c2 AS REAL), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), ((rt0.c1)|(rt0.c0))))<((((rt0.c1) ISNULL), v0.c0, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((CASE rt0.c3  WHEN NULL THEN rt0.c0 END) NOT NULL)) ORDER BY (((CAST(rt0.c2 AS REAL), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), ((rt0.c1)|(rt0.c0))))<((((rt0.c1) ISNULL), v0.c0, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (TIME(((rt0.c2)%(rt0.c0)), ((rt0.c1)IS(2076464004)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END, (((rt0.c2))<=((x''))), (rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((TIME(((rt0.c2)%(rt0.c0)), ((rt0.c1)IS(2076464004)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END, (((rt0.c2))<=((x''))), (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TIME(((rt0.c2)%(rt0.c0)), ((rt0.c1)IS(2076464004)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END, (((rt0.c2))<=((x''))), (rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((TIME(((rt0.c2)%(rt0.c0)), ((rt0.c1)IS(2076464004)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END, (((rt0.c2))<=((x''))), (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TIME(((rt0.c2)%(rt0.c0)), ((rt0.c1)IS(2076464004)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END, (((rt0.c2))<=((x''))), (rt0.c2 IN ())));
SELECT ALL * FROM rt0, v0 WHERE (COALESCE(DISTINCT rt0.c0, 68043116) COLLATE RTRIM) ORDER BY ((CAST(v0.c0 AS BLOB)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT rt0.c0, 68043116) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(v0.c0 AS BLOB)) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (COALESCE(DISTINCT rt0.c0, 68043116) COLLATE RTRIM) ORDER BY ((CAST(v0.c0 AS BLOB)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT rt0.c0, 68043116) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(v0.c0 AS BLOB)) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (COALESCE(DISTINCT rt0.c0, 68043116) COLLATE RTRIM) ORDER BY ((CAST(v0.c0 AS BLOB)) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((SQLITE_SOURCE_ID())<=(((((x'b12d')OR(v0.c0)))AND(v0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID())<=(((((x'b12d')OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((SQLITE_SOURCE_ID())<=(((((x'b12d')OR(v0.c0)))AND(v0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID())<=(((((x'b12d')OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((SQLITE_SOURCE_ID())<=(((((x'b12d')OR(v0.c0)))AND(v0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c3)<=(rt0.c1)))LIKE(LIKELIHOOD(DISTINCT rt0.c1, 0.7002841864206794))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)<=(rt0.c1)))LIKE(LIKELIHOOD(DISTINCT rt0.c1, 0.7002841864206794)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c3)<=(rt0.c1)))LIKE(LIKELIHOOD(DISTINCT rt0.c1, 0.7002841864206794))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)<=(rt0.c1)))LIKE(LIKELIHOOD(DISTINCT rt0.c1, 0.7002841864206794)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c3)<=(rt0.c1)))LIKE(LIKELIHOOD(DISTINCT rt0.c1, 0.7002841864206794))));
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ()))GLOB(((rt0.c3) NOTNULL)))) ORDER BY ((~ (rt0.c1)) IN ())  NULLS LAST, (~ (CASE WHEN rt0.c3 THEN rt0.c0 END)), CASE '-1305680692'  WHEN STRFTIME(rt0.c1, x'e0d2', rt0.c1) THEN CAST(rt0.c2 AS NUMERIC) ELSE 0.7885992030214115 END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))GLOB(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((~ (rt0.c1)) IN ())  NULLS LAST, (~ (CASE WHEN rt0.c3 THEN rt0.c0 END)), CASE '-1305680692'  WHEN STRFTIME(rt0.c1, x'e0d2', rt0.c1) THEN CAST(rt0.c2 AS NUMERIC) ELSE 0.7885992030214115 END);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ()))GLOB(((rt0.c3) NOTNULL)))) ORDER BY ((~ (rt0.c1)) IN ())  NULLS LAST, (~ (CASE WHEN rt0.c3 THEN rt0.c0 END)), CASE '-1305680692'  WHEN STRFTIME(rt0.c1, x'e0d2', rt0.c1) THEN CAST(rt0.c2 AS NUMERIC) ELSE 0.7885992030214115 END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))GLOB(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((~ (rt0.c1)) IN ())  NULLS LAST, (~ (CASE WHEN rt0.c3 THEN rt0.c0 END)), CASE '-1305680692'  WHEN STRFTIME(rt0.c1, x'e0d2', rt0.c1) THEN CAST(rt0.c2 AS NUMERIC) ELSE 0.7885992030214115 END);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ()))GLOB(((rt0.c3) NOTNULL)))) ORDER BY ((~ (rt0.c1)) IN ())  NULLS LAST, (~ (CASE WHEN rt0.c3 THEN rt0.c0 END)), CASE '-1305680692'  WHEN STRFTIME(rt0.c1, x'e0d2', rt0.c1) THEN CAST(rt0.c2 AS NUMERIC) ELSE 0.7885992030214115 END;
SELECT * FROM rt0 WHERE ((rt0.c3 IN (((rt0.c1) IS TRUE)))) ORDER BY CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0 WHERE ((rt0.c3 IN (((rt0.c1) IS TRUE)))) ORDER BY CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0 WHERE ((rt0.c3 IN (((rt0.c1) IS TRUE)))) ORDER BY CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY NULL ASC, (((- (-1865555885))) NOT BETWEEN (((((rt0.c0)OR(rt0.c3)))OR(rt0.c3))) AND ((+ (rt0.c1)))) ASC, (((rt0.c2)IS NOT(rt0.c3)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC, (((- (-1865555885))) NOT BETWEEN (((((rt0.c0)OR(rt0.c3)))OR(rt0.c3))) AND ((+ (rt0.c1)))) ASC, (((rt0.c2)IS NOT(rt0.c3)) IN ()) ASC);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY NULL ASC, (((- (-1865555885))) NOT BETWEEN (((((rt0.c0)OR(rt0.c3)))OR(rt0.c3))) AND ((+ (rt0.c1)))) ASC, (((rt0.c2)IS NOT(rt0.c3)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC, (((- (-1865555885))) NOT BETWEEN (((((rt0.c0)OR(rt0.c3)))OR(rt0.c3))) AND ((+ (rt0.c1)))) ASC, (((rt0.c2)IS NOT(rt0.c3)) IN ()) ASC);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY NULL ASC, (((- (-1865555885))) NOT BETWEEN (((((rt0.c0)OR(rt0.c3)))OR(rt0.c3))) AND ((+ (rt0.c1)))) ASC, (((rt0.c2)IS NOT(rt0.c3)) IN ()) ASC;
SELECT ALL * FROM v0, rt0 WHERE (0.9206912361237701);
SELECT SUM(count) FROM (SELECT ((0.9206912361237701) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (0.9206912361237701);
SELECT SUM(count) FROM (SELECT ((0.9206912361237701) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (0.9206912361237701);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c0))  WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 END THEN ((rt0.c2) NOT BETWEEN ('-1251607011') AND (0.39254203273797417)) ELSE CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c0))  WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 END THEN ((rt0.c2) NOT BETWEEN ('-1251607011') AND (0.39254203273797417)) ELSE CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c0))  WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 END THEN ((rt0.c2) NOT BETWEEN ('-1251607011') AND (0.39254203273797417)) ELSE CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c0))  WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 END THEN ((rt0.c2) NOT BETWEEN ('-1251607011') AND (0.39254203273797417)) ELSE CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c0))  WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 END THEN ((rt0.c2) NOT BETWEEN ('-1251607011') AND (0.39254203273797417)) ELSE CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END END);
SELECT ALL COUNT(*) FROM v0 WHERE (x'0585');
SELECT SUM(count) FROM (SELECT ((x'0585') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (x'0585');
SELECT SUM(count) FROM (SELECT ((x'0585') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (x'0585');
SELECT * FROM v0 WHERE ((load_extension(v0.c0) IN ())) ORDER BY ((((v0.c0)||(v0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((load_extension(v0.c0) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)||(v0.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM v0 WHERE ((load_extension(v0.c0) IN ())) ORDER BY ((((v0.c0)||(v0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((load_extension(v0.c0) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)||(v0.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM v0 WHERE ((load_extension(v0.c0) IN ())) ORDER BY ((((v0.c0)||(v0.c0))) NOTNULL)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE COLLATE BINARY) ORDER BY ((((rt0.c2)>>(rt0.c0)))GLOB((((rt0.c0, 0.6506292111883165, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>>(rt0.c0)))GLOB((((rt0.c0, 0.6506292111883165, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c3))))));
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE COLLATE BINARY) ORDER BY ((((rt0.c2)>>(rt0.c0)))GLOB((((rt0.c0, 0.6506292111883165, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>>(rt0.c0)))GLOB((((rt0.c0, 0.6506292111883165, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c3))))));
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE COLLATE BINARY) ORDER BY ((((rt0.c2)>>(rt0.c0)))GLOB((((rt0.c0, 0.6506292111883165, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c3)))));
SELECT * FROM rt0 WHERE ((+ ((x'' IN ())))) ORDER BY (((((- (x'8b32')))AND(rt0.c2 COLLATE BINARY)))AND(rt0.c3)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((x'' IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((((- (x'8b32')))AND(rt0.c2 COLLATE BINARY)))AND(rt0.c3)) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((+ ((x'' IN ())))) ORDER BY (((((- (x'8b32')))AND(rt0.c2 COLLATE BINARY)))AND(rt0.c3)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((x'' IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((((- (x'8b32')))AND(rt0.c2 COLLATE BINARY)))AND(rt0.c3)) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((+ ((x'' IN ())))) ORDER BY (((((- (x'8b32')))AND(rt0.c2 COLLATE BINARY)))AND(rt0.c3)) ASC  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)) THEN ((rt0.c0) IS TRUE) ELSE (((v0.c0))<((rt0.c0))) END) ORDER BY ((((rt0.c3)>('Kk?,')))<>(((rt0.c0)GLOB(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)) THEN ((rt0.c0) IS TRUE) ELSE (((v0.c0))<((rt0.c0))) END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c3)>('Kk?,')))<>(((rt0.c0)GLOB(rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)) THEN ((rt0.c0) IS TRUE) ELSE (((v0.c0))<((rt0.c0))) END) ORDER BY ((((rt0.c3)>('Kk?,')))<>(((rt0.c0)GLOB(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)) THEN ((rt0.c0) IS TRUE) ELSE (((v0.c0))<((rt0.c0))) END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c3)>('Kk?,')))<>(((rt0.c0)GLOB(rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)) THEN ((rt0.c0) IS TRUE) ELSE (((v0.c0))<((rt0.c0))) END) ORDER BY ((((rt0.c3)>('Kk?,')))<>(((rt0.c0)GLOB(rt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c2, (rt0.c3 IN ()), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))>((rt0.c3 COLLATE NOCASE, (rt0.c0 IN ()), (NOT (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, (rt0.c3 IN ()), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))>((rt0.c3 COLLATE NOCASE, (rt0.c0 IN ()), (NOT (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2, (rt0.c3 IN ()), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))>((rt0.c3 COLLATE NOCASE, (rt0.c0 IN ()), (NOT (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, (rt0.c3 IN ()), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))>((rt0.c3 COLLATE NOCASE, (rt0.c0 IN ()), (NOT (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2, (rt0.c3 IN ()), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))>((rt0.c3 COLLATE NOCASE, (rt0.c0 IN ()), (NOT (rt0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('2135517281');
SELECT SUM(count) FROM (SELECT (('2135517281') IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('2135517281');
SELECT SUM(count) FROM (SELECT (('2135517281') IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('2135517281');
SELECT * FROM v0, rt0 WHERE (NULL) ORDER BY (((('1222749471') NOT BETWEEN (rt0.c1) AND (v0.c0)))IS NOT(((v0.c0)>(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY (((('1222749471') NOT BETWEEN (rt0.c1) AND (v0.c0)))IS NOT(((v0.c0)>(rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (NULL) ORDER BY (((('1222749471') NOT BETWEEN (rt0.c1) AND (v0.c0)))IS NOT(((v0.c0)>(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY (((('1222749471') NOT BETWEEN (rt0.c1) AND (v0.c0)))IS NOT(((v0.c0)>(rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (NULL) ORDER BY (((('1222749471') NOT BETWEEN (rt0.c1) AND (v0.c0)))IS NOT(((v0.c0)>(rt0.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (+ ((((rt0.c1))<((rt0.c0))))) WHERE (-1631412579);
SELECT SUM(count) FROM (SELECT ALL ((-1631412579) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (+ ((((rt0.c1))<((rt0.c0))))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (+ ((((rt0.c1))<((rt0.c0))))) WHERE (-1631412579);
SELECT SUM(count) FROM (SELECT ALL ((-1631412579) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (+ ((((rt0.c1))<((rt0.c0))))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (+ ((((rt0.c1))<((rt0.c0))))) WHERE (-1631412579);
SELECT * FROM v0 INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (('0.16367262924537052' COLLATE NOCASE))) WHERE ((((NOT (rt0.c2)))IS((- (x'')))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))IS((- (x''))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (('0.16367262924537052' COLLATE NOCASE))));
SELECT * FROM v0 INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (('0.16367262924537052' COLLATE NOCASE))) WHERE ((((NOT (rt0.c2)))IS((- (x'')))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))IS((- (x''))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (('0.16367262924537052' COLLATE NOCASE))));
SELECT * FROM v0 INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (('0.16367262924537052' COLLATE NOCASE))) WHERE ((((NOT (rt0.c2)))IS((- (x'')))));
SELECT ALL * FROM rt0, v0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN ((rt0.c1)*(rt0.c2)) THEN rt0.c3 ELSE SQLITE_SOURCE_ID() END) ORDER BY (((((v0.c0) BETWEEN (v0.c0) AND (rt0.c1))))>=(((+ (rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0 COLLATE NOCASE  WHEN ((rt0.c1)*(rt0.c2)) THEN rt0.c3 ELSE SQLITE_SOURCE_ID() END) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((v0.c0) BETWEEN (v0.c0) AND (rt0.c1))))>=(((+ (rt0.c3))))) ASC);
SELECT ALL * FROM rt0, v0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN ((rt0.c1)*(rt0.c2)) THEN rt0.c3 ELSE SQLITE_SOURCE_ID() END) ORDER BY (((((v0.c0) BETWEEN (v0.c0) AND (rt0.c1))))>=(((+ (rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0 COLLATE NOCASE  WHEN ((rt0.c1)*(rt0.c2)) THEN rt0.c3 ELSE SQLITE_SOURCE_ID() END) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((v0.c0) BETWEEN (v0.c0) AND (rt0.c1))))>=(((+ (rt0.c3))))) ASC);
SELECT ALL * FROM rt0, v0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN ((rt0.c1)*(rt0.c2)) THEN rt0.c3 ELSE SQLITE_SOURCE_ID() END) ORDER BY (((((v0.c0) BETWEEN (v0.c0) AND (rt0.c1))))>=(((+ (rt0.c3))))) ASC;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<(((v0.c0)=(v0.c0))))) ORDER BY (v0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<(((v0.c0)==(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<(((v0.c0)=(v0.c0))))) ORDER BY (v0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<(((v0.c0)==(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<(((v0.c0)=(v0.c0))))) ORDER BY (v0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ('') ORDER BY (((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)) IN ()) ASC, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)) IN ()) ASC, NULL DESC);
SELECT ALL * FROM rt0 WHERE ('') ORDER BY (((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)) IN ()) ASC, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)) IN ()) ASC, NULL DESC);
SELECT ALL * FROM rt0 WHERE ('') ORDER BY (((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)) IN ()) ASC, NULL DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (((rt0.c2)LIKE(rt0.c3))))) ORDER BY rt0.c3, RTRIM(v0.c0);
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2)LIKE(rt0.c3))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c3, RTRIM(v0.c0));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (((rt0.c2)LIKE(rt0.c3))))) ORDER BY rt0.c3, RTRIM(v0.c0);
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2)LIKE(rt0.c3))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c3, RTRIM(v0.c0));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (((rt0.c2)LIKE(rt0.c3))))) ORDER BY rt0.c3, RTRIM(v0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3) NOT BETWEEN (0x697b8e4 COLLATE BINARY) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOT BETWEEN (0X697b8e4 COLLATE BINARY) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3) NOT BETWEEN (0x697b8e4 COLLATE BINARY) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOT BETWEEN (0X697b8e4 COLLATE BINARY) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3) NOT BETWEEN (0x697b8e4 COLLATE BINARY) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT * FROM v0 WHERE (v0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0 COLLATE BINARY);
SELECT * FROM rt0 WHERE ((- ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- ((NOT (rt0.c1)))));
SELECT ALL * FROM v0 WHERE (v0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0 COLLATE RTRIM);
SELECT * FROM rt0 WHERE ((~ (MIN(rt0.c3, rt0.c0)))) ORDER BY (((rt0.c0 IN ()))>>((rt0.c2 IN ())))  NULLS LAST, ((((rt0.c1)-(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c2) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (MIN(rt0.c3, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))>>((rt0.c2 IN ())))  NULLS LAST, ((((rt0.c1)-(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c2) NOT NULL))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((~ (MIN(rt0.c3, rt0.c0)))) ORDER BY (((rt0.c0 IN ()))>>((rt0.c2 IN ())))  NULLS LAST, ((((rt0.c1)-(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c2) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (MIN(rt0.c3, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))>>((rt0.c2 IN ())))  NULLS LAST, ((((rt0.c1)-(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c2) NOT NULL))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((~ (MIN(rt0.c3, rt0.c0)))) ORDER BY (((rt0.c0 IN ()))>>((rt0.c2 IN ())))  NULLS LAST, ((((rt0.c1)-(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c2) NOT NULL))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY SQLITE_VERSION()  NULLS FIRST, (((((NOT (rt0.c1)))OR((rt0.c3 IN ()))))AND((rt0.c1 IN (rt0.c3, 'x (''')))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_VERSION()  NULLS FIRST, (((((NOT (rt0.c1)))OR((rt0.c3 IN ()))))AND((rt0.c1 IN (rt0.c3, 'x (''')))) DESC);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY SQLITE_VERSION()  NULLS FIRST, (((((NOT (rt0.c1)))OR((rt0.c3 IN ()))))AND((rt0.c1 IN (rt0.c3, 'x (''')))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_VERSION()  NULLS FIRST, (((((NOT (rt0.c1)))OR((rt0.c3 IN ()))))AND((rt0.c1 IN (rt0.c3, 'x (''')))) DESC);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY SQLITE_VERSION()  NULLS FIRST, (((((NOT (rt0.c1)))OR((rt0.c3 IN ()))))AND((rt0.c1 IN (rt0.c3, 'x (''')))) DESC;
SELECT * FROM rt0 WHERE (json_quote(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_quote(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_quote(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c1) IS TRUE) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c1) IS TRUE) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c1) IS TRUE) END);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c2)LIKE(rt0.c0)))OR(((rt0.c1) ISNULL))))OR(((rt0.c0) IS TRUE))))OR(rt0.c2 COLLATE BINARY)))OR(rt0.c3)) WHERE (TRIM(DISTINCT ((rt0.c3) ISNULL), '?\r' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((rt0.c3) ISNULL), '?\r' COLLATE NOCASE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c2)LIKE(rt0.c0)))OR(((rt0.c1) ISNULL))))OR(((rt0.c0) IS TRUE))))OR(rt0.c2 COLLATE BINARY)))OR(rt0.c3)));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c2)LIKE(rt0.c0)))OR(((rt0.c1) ISNULL))))OR(((rt0.c0) IS TRUE))))OR(rt0.c2 COLLATE BINARY)))OR(rt0.c3)) WHERE (TRIM(DISTINCT ((rt0.c3) ISNULL), '?\r' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((rt0.c3) ISNULL), '?\r' COLLATE NOCASE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c2)LIKE(rt0.c0)))OR(((rt0.c1) ISNULL))))OR(((rt0.c0) IS TRUE))))OR(rt0.c2 COLLATE BINARY)))OR(rt0.c3)));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c2)LIKE(rt0.c0)))OR(((rt0.c1) ISNULL))))OR(((rt0.c0) IS TRUE))))OR(rt0.c2 COLLATE BINARY)))OR(rt0.c3)) WHERE (TRIM(DISTINCT ((rt0.c3) ISNULL), '?\r' COLLATE NOCASE));
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(-302162819)))OR(v0.c0))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(-302162819)))OR(v0.c0))) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(-302162819)))OR(v0.c0))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(-302162819)))OR(v0.c0))) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(-302162819)))OR(v0.c0))) ISNULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (ABS((('0.7129660063768902')<=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((('0.7129660063768902')<=(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (ABS((('0.7129660063768902')<=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((('0.7129660063768902')<=(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (ABS((('0.7129660063768902')<=(rt0.c0))));
SELECT * FROM rt0, v0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) BETWEEN (((rt0.c3) IS FALSE)) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) BETWEEN (((rt0.c3) IS FALSE)) AND (rt0.c0))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) BETWEEN (((rt0.c3) IS FALSE)) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) BETWEEN (((rt0.c3) IS FALSE)) AND (rt0.c0))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) BETWEEN (((rt0.c3) IS FALSE)) AND (rt0.c0)));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON rt0.c2);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON rt0.c2);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE ((rt0.c0 IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((((NOT (rt0.c0))))<>((IFNULL(rt0.c0, rt0.c2))))) ORDER BY (((rt0.c3)==(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt0.c0))))<>((IFNULL(rt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)==(rt0.c2)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((((NOT (rt0.c0))))<>((IFNULL(rt0.c0, rt0.c2))))) ORDER BY (((rt0.c3)==(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt0.c0))))<>((IFNULL(rt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)==(rt0.c2)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((((NOT (rt0.c0))))<>((IFNULL(rt0.c0, rt0.c2))))) ORDER BY (((rt0.c3)==(rt0.c2)) IN ());
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)LIKE(rt0.c3))) IS TRUE)) ORDER BY STRFTIME(NULL, rt0.c1, LIKELY(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)LIKE(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY STRFTIME(NULL, rt0.c1, LIKELY(rt0.c2))  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)LIKE(rt0.c3))) IS TRUE)) ORDER BY STRFTIME(NULL, rt0.c1, LIKELY(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)LIKE(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY STRFTIME(NULL, rt0.c1, LIKELY(rt0.c2))  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)LIKE(rt0.c3))) IS TRUE)) ORDER BY STRFTIME(NULL, rt0.c1, LIKELY(rt0.c2))  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (CASE ((v0.c0)IS(rt0.c0))  WHEN v0.c0 THEN ((rt0.c2)-(rt0.c2)) ELSE ABS(v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)IS(rt0.c0))  WHEN v0.c0 THEN ((rt0.c2)-(rt0.c2)) ELSE ABS(v0.c0) END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE ((v0.c0)IS(rt0.c0))  WHEN v0.c0 THEN ((rt0.c2)-(rt0.c2)) ELSE ABS(v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)IS(rt0.c0))  WHEN v0.c0 THEN ((rt0.c2)-(rt0.c2)) ELSE ABS(v0.c0) END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE ((v0.c0)IS(rt0.c0))  WHEN v0.c0 THEN ((rt0.c2)-(rt0.c2)) ELSE ABS(v0.c0) END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c0) IS TRUE)) NOT BETWEEN ('tp4NkUHg') AND ((((NULL, '', rt0.c2))!=((rt0.c1, rt0.c3, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE)) NOT BETWEEN ('tp4NkUHg') AND ((((NULL, '', rt0.c2))<>((rt0.c1, rt0.c3, rt0.c3)))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c0) IS TRUE)) NOT BETWEEN ('tp4NkUHg') AND ((((NULL, '', rt0.c2))!=((rt0.c1, rt0.c3, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE)) NOT BETWEEN ('tp4NkUHg') AND ((((NULL, '', rt0.c2))<>((rt0.c1, rt0.c3, rt0.c3)))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c0) IS TRUE)) NOT BETWEEN ('tp4NkUHg') AND ((((NULL, '', rt0.c2))!=((rt0.c1, rt0.c3, rt0.c3))))));
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(v0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TYPEOF(v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(v0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TYPEOF(v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(v0.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1 COLLATE NOCASE) IS TRUE));
SELECT ALL * FROM v0 WHERE (((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(-940118076)))<>((v0.c0 IN (v0.c0, v0.c0))))) ORDER BY CAST(((v0.c0)!=(v0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(-940118076)))<>((v0.c0 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)!=(v0.c0)) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(-940118076)))<>((v0.c0 IN (v0.c0, v0.c0))))) ORDER BY CAST(((v0.c0)!=(v0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(-940118076)))<>((v0.c0 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)!=(v0.c0)) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(-940118076)))<>((v0.c0 IN (v0.c0, v0.c0))))) ORDER BY CAST(((v0.c0)!=(v0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((((((((~ (v0.c0)))AND(((v0.c0)!=(v0.c0)))))OR(LIKE(x'', v0.c0, '-'))))AND(-237729830)))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((((~ (v0.c0)))AND(((v0.c0)<>(v0.c0)))))OR(LIKE(x'', v0.c0, '-'))))AND(-237729830)))AND(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((((~ (v0.c0)))AND(((v0.c0)!=(v0.c0)))))OR(LIKE(x'', v0.c0, '-'))))AND(-237729830)))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((((~ (v0.c0)))AND(((v0.c0)<>(v0.c0)))))OR(LIKE(x'', v0.c0, '-'))))AND(-237729830)))AND(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((((~ (v0.c0)))AND(((v0.c0)!=(v0.c0)))))OR(LIKE(x'', v0.c0, '-'))))AND(-237729830)))AND(v0.c0)));
SELECT * FROM v0, rt0 WHERE ((ABS(v0.c0) IN (((rt0.c1) NOT NULL), (~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((ABS(v0.c0) IN (((rt0.c1) NOT NULL), (~ (v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((ABS(v0.c0) IN (((rt0.c1) NOT NULL), (~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((ABS(v0.c0) IN (((rt0.c1) NOT NULL), (~ (v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((ABS(v0.c0) IN (((rt0.c1) NOT NULL), (~ (v0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((('om') NOT NULL))=(CAST(rt0.c2 AS TEXT)))) ORDER BY ((((((rt0.c1) NOTNULL))AND((((rt0.c1))<((rt0.c0))))))AND(((rt0.c3) NOTNULL))) ASC, (((((v0.c0))<>((rt0.c2))))=(((rt0.c0) IS TRUE)))  NULLS LAST, INSTR(((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)), CAST(rt0.c0 AS NUMERIC)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('om') NOT NULL))==(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c1) NOTNULL))AND((((rt0.c1))<((rt0.c0))))))AND(((rt0.c3) NOTNULL))) ASC, (((((v0.c0))!=((rt0.c2))))=(((rt0.c0) IS TRUE)))  NULLS LAST, INSTR(((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)), CAST(rt0.c0 AS NUMERIC)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((('om') NOT NULL))=(CAST(rt0.c2 AS TEXT)))) ORDER BY ((((((rt0.c1) NOTNULL))AND((((rt0.c1))<((rt0.c0))))))AND(((rt0.c3) NOTNULL))) ASC, (((((v0.c0))<>((rt0.c2))))=(((rt0.c0) IS TRUE)))  NULLS LAST, INSTR(((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)), CAST(rt0.c0 AS NUMERIC)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('om') NOT NULL))==(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c1) NOTNULL))AND((((rt0.c1))<((rt0.c0))))))AND(((rt0.c3) NOTNULL))) ASC, (((((v0.c0))!=((rt0.c2))))=(((rt0.c0) IS TRUE)))  NULLS LAST, INSTR(((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)), CAST(rt0.c0 AS NUMERIC)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((('om') NOT NULL))=(CAST(rt0.c2 AS TEXT)))) ORDER BY ((((((rt0.c1) NOTNULL))AND((((rt0.c1))<((rt0.c0))))))AND(((rt0.c3) NOTNULL))) ASC, (((((v0.c0))<>((rt0.c2))))=(((rt0.c0) IS TRUE)))  NULLS LAST, INSTR(((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)), CAST(rt0.c0 AS NUMERIC)) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((v0.c0)<(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)<(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)<(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)<(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)<(v0.c0)) IN ()));
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL * FROM v0 INNER JOIN rt0 ON (CAST(v0.c0 AS TEXT) IN ()) WHERE (((((rt0.c3)LIKE(0.8735055294853399)))!=(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN -197560336 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY CAST(CAST(v0.c0 AS REAL) AS BLOB) ASC  NULLS FIRST, ((((v0.c0)/(NULL))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)LIKE(0.8735055294853399)))!=(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN -197560336 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (CAST(v0.c0 AS TEXT) IN ()) ORDER BY CAST(CAST(v0.c0 AS REAL) AS BLOB) ASC  NULLS FIRST, ((((v0.c0)/(NULL))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM v0 INNER JOIN rt0 ON (CAST(v0.c0 AS TEXT) IN ()) WHERE (((((rt0.c3)LIKE(0.8735055294853399)))!=(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN -197560336 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY CAST(CAST(v0.c0 AS REAL) AS BLOB) ASC  NULLS FIRST, ((((v0.c0)/(NULL))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)LIKE(0.8735055294853399)))!=(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN -197560336 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (CAST(v0.c0 AS TEXT) IN ()) ORDER BY CAST(CAST(v0.c0 AS REAL) AS BLOB) ASC  NULLS FIRST, ((((v0.c0)/(NULL))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM v0 INNER JOIN rt0 ON (CAST(v0.c0 AS TEXT) IN ()) WHERE (((((rt0.c3)LIKE(0.8735055294853399)))!=(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN -197560336 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY CAST(CAST(v0.c0 AS REAL) AS BLOB) ASC  NULLS FIRST, ((((v0.c0)/(NULL))) IS FALSE)  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (((((((((((rt0.c3)AND(rt0.c1)))OR('1248804457')))AND(rt0.c1)))OR(v0.c0))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END) AND ((NOT (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3)AND(rt0.c1)))OR('1248804457')))AND(rt0.c1)))OR(v0.c0))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END) AND ((NOT (rt0.c3))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((((((rt0.c3)AND(rt0.c1)))OR('1248804457')))AND(rt0.c1)))OR(v0.c0))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END) AND ((NOT (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3)AND(rt0.c1)))OR('1248804457')))AND(rt0.c1)))OR(v0.c0))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END) AND ((NOT (rt0.c3))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((((((rt0.c3)AND(rt0.c1)))OR('1248804457')))AND(rt0.c1)))OR(v0.c0))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END) AND ((NOT (rt0.c3)))));
SELECT COUNT(*) FROM v0 WHERE ((- ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- ((v0.c0 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((NULL)!=(x'')))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((NULL)!=(x'')))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((NULL)!=(x'')))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((NULL)!=(x'')))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((NULL)!=(x'')))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 END))));
SELECT ALL COUNT(*) FROM v0 WHERE (((0.3411104652392474) ISNULL)) ORDER BY ((((v0.c0)>(v0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.3411104652392474) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((0.3411104652392474) ISNULL)) ORDER BY ((((v0.c0)>(v0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.3411104652392474) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((0.3411104652392474) ISNULL)) ORDER BY ((((v0.c0)>(v0.c0))) IS TRUE)  NULLS LAST;
SELECT * FROM v0 CROSS JOIN rt0 ON json_extract(CAST(rt0.c0 AS REAL), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) WHERE (-809369075);
SELECT SUM(count) FROM (SELECT ALL ((-809369075) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON json_extract(CAST(rt0.c0 AS REAL), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))));
SELECT * FROM v0 CROSS JOIN rt0 ON json_extract(CAST(rt0.c0 AS REAL), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) WHERE (-809369075);
SELECT SUM(count) FROM (SELECT ALL ((-809369075) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON json_extract(CAST(rt0.c0 AS REAL), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))));
SELECT * FROM v0 CROSS JOIN rt0 ON json_extract(CAST(rt0.c0 AS REAL), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) WHERE (-809369075);
SELECT * FROM v0 WHERE ((v0.c0 COLLATE RTRIM IN (((v0.c0) IS FALSE)))) ORDER BY ((((v0.c0)<<(v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE RTRIM IN (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<<(v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((v0.c0 COLLATE RTRIM IN (((v0.c0) IS FALSE)))) ORDER BY ((((v0.c0)<<(v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE RTRIM IN (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<<(v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((v0.c0 COLLATE RTRIM IN (((v0.c0) IS FALSE)))) ORDER BY ((((v0.c0)<<(v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((('-1724839553')IS(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((('-1724839553')IS(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((('-1724839553')IS(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((('-1724839553')IS(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((('-1724839553')IS(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (((v0.c0) IS TRUE)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((v0.c0 COLLATE RTRIM)<=(CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT BETWEEN (((v0.c0) IS TRUE)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM)<=(CAST(v0.c0 AS NUMERIC))));
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (((v0.c0) IS TRUE)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((v0.c0 COLLATE RTRIM)<=(CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT BETWEEN (((v0.c0) IS TRUE)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM)<=(CAST(v0.c0 AS NUMERIC))));
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (((v0.c0) IS TRUE)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((v0.c0 COLLATE RTRIM)<=(CAST(v0.c0 AS NUMERIC)));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)>(v0.c0)))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)>(v0.c0)))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)>(v0.c0)))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)>(v0.c0)))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)>(v0.c0)))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((CAST(rt0.c1 AS REAL) IN ())) ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN 0Xffffffffcc394b44 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END THEN (- (NULL)) END;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN 0Xffffffffcc394b44 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END THEN (- (NULL)) END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((CAST(rt0.c1 AS REAL) IN ())) ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN 0Xffffffffcc394b44 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END THEN (- (NULL)) END;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN 0Xffffffffcc394b44 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END THEN (- (NULL)) END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((CAST(rt0.c1 AS REAL) IN ())) ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN 0Xffffffffcc394b44 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END THEN (- (NULL)) END;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE UNLIKELY(rt0.c1)  WHEN (((375026381, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c3)) AND ((rt0.c2, '', rt0.c3))) THEN rt0.c1 COLLATE NOCASE END) ORDER BY ((CAST(x'' AS INTEGER))>>(((rt0.c1)AND(x'')))) DESC, ((((((((((((LTRIM(rt0.c2))OR(HEX(rt0.c2))))AND(((rt0.c0)LIKE(rt0.c2)))))OR(((-1650653870) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR(UPPER(DISTINCT rt0.c0))))AND(0.26098386702172793)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) DESC, ((HEX(rt0.c1))>(((0Xfffffffffb54e03a) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(rt0.c1)  WHEN (((375026381, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c3)) AND ((rt0.c2, '', rt0.c3))) THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(x'' AS INTEGER))>>(((rt0.c1)AND(x'')))) DESC, ((((((((((((LTRIM(rt0.c2))OR(HEX(rt0.c2))))AND(((rt0.c0)LIKE(rt0.c2)))))OR(((-1650653870) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR(UPPER(DISTINCT rt0.c0))))AND(0.26098386702172793)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) DESC, ((HEX(rt0.c1))>(((0xfffffffffb54e03a) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE UNLIKELY(rt0.c1)  WHEN (((375026381, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c3)) AND ((rt0.c2, '', rt0.c3))) THEN rt0.c1 COLLATE NOCASE END) ORDER BY ((CAST(x'' AS INTEGER))>>(((rt0.c1)AND(x'')))) DESC, ((((((((((((LTRIM(rt0.c2))OR(HEX(rt0.c2))))AND(((rt0.c0)LIKE(rt0.c2)))))OR(((-1650653870) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR(UPPER(DISTINCT rt0.c0))))AND(0.26098386702172793)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) DESC, ((HEX(rt0.c1))>(((0Xfffffffffb54e03a) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(rt0.c1)  WHEN (((375026381, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c3)) AND ((rt0.c2, '', rt0.c3))) THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(x'' AS INTEGER))>>(((rt0.c1)AND(x'')))) DESC, ((((((((((((LTRIM(rt0.c2))OR(HEX(rt0.c2))))AND(((rt0.c0)LIKE(rt0.c2)))))OR(((-1650653870) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR(UPPER(DISTINCT rt0.c0))))AND(0.26098386702172793)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) DESC, ((HEX(rt0.c1))>(((0xfffffffffb54e03a) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE UNLIKELY(rt0.c1)  WHEN (((375026381, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c3)) AND ((rt0.c2, '', rt0.c3))) THEN rt0.c1 COLLATE NOCASE END) ORDER BY ((CAST(x'' AS INTEGER))>>(((rt0.c1)AND(x'')))) DESC, ((((((((((((LTRIM(rt0.c2))OR(HEX(rt0.c2))))AND(((rt0.c0)LIKE(rt0.c2)))))OR(((-1650653870) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR(UPPER(DISTINCT rt0.c0))))AND(0.26098386702172793)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) DESC, ((HEX(rt0.c1))>(((0Xfffffffffb54e03a) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)))<=(CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)))<=(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)))<=(CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)))<=(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)))<=(CAST(rt0.c2 AS REAL))));
SELECT ALL COUNT(*) FROM v0 WHERE (0.2855903730053885);
SELECT SUM(count) FROM (SELECT ((0.2855903730053885) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0.2855903730053885);
SELECT SUM(count) FROM (SELECT ((0.2855903730053885) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0.2855903730053885);
SELECT * FROM v0, rt0 WHERE (load_extension(CAST('340211888' AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CAST('340211888' AS BLOB))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (load_extension(CAST('340211888' AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CAST('340211888' AS BLOB))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (load_extension(CAST('340211888' AS BLOB)));
SELECT * FROM rt0 WHERE (((((((((TRIM(DISTINCT rt0.c0))OR(-1841207555)))AND(rt0.c0 COLLATE RTRIM)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)))AND(((rt0.c0)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((TRIM(DISTINCT rt0.c0))OR(-1841207555)))AND(rt0.c0 COLLATE RTRIM)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)))AND(((rt0.c0)|(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((TRIM(DISTINCT rt0.c0))OR(-1841207555)))AND(rt0.c0 COLLATE RTRIM)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)))AND(((rt0.c0)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((TRIM(DISTINCT rt0.c0))OR(-1841207555)))AND(rt0.c0 COLLATE RTRIM)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)))AND(((rt0.c0)|(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((TRIM(DISTINCT rt0.c0))OR(-1841207555)))AND(rt0.c0 COLLATE RTRIM)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)))AND(((rt0.c0)|(rt0.c0)))));
SELECT * FROM rt0, v0 WHERE (((((rt0.c1)%(v0.c0))) NOT BETWEEN (rt0.c0) AND ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)%(v0.c0))) NOT BETWEEN (rt0.c0) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((rt0.c1)%(v0.c0))) NOT BETWEEN (rt0.c0) AND ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)%(v0.c0))) NOT BETWEEN (rt0.c0) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((rt0.c1)%(v0.c0))) NOT BETWEEN (rt0.c0) AND ((~ (rt0.c1)))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(((rt0.c2) IS TRUE))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS TEXT))OR(((rt0.c2) IS TRUE))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 END))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(((rt0.c2) IS TRUE))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS TEXT))OR(((rt0.c2) IS TRUE))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 END))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(((rt0.c2) IS TRUE))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 END)));
SELECT ALL * FROM rt0, v0 WHERE (((((((((((((v0.c0)AND(rt0.c3)))OR(v0.c0)))OR(rt0.c0)))OR(x'')))OR(DATE(v0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c2))))OR('1172585844')));
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)AND(rt0.c3)))OR(v0.c0)))OR(rt0.c0)))OR(x'')))OR(DATE(v0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c2))))OR('1172585844'))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((((((((((v0.c0)AND(rt0.c3)))OR(v0.c0)))OR(rt0.c0)))OR(x'')))OR(DATE(v0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c2))))OR('1172585844')));
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)AND(rt0.c3)))OR(v0.c0)))OR(rt0.c0)))OR(x'')))OR(DATE(v0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c2))))OR('1172585844'))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((((((((((v0.c0)AND(rt0.c3)))OR(v0.c0)))OR(rt0.c0)))OR(x'')))OR(DATE(v0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c2))))OR('1172585844')));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((x'')) AND (((~ ('P''\n尚*A'))))) WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c3)))AND(v0.c0)))) AND ((-942071513)))) ORDER BY (((+ (rt0.c3))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c3)))AND(v0.c0)))) AND ((-942071513)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((x'')) AND (((~ ('P''\n尚*A'))))) ORDER BY (((+ (rt0.c3))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((x'')) AND (((~ ('P''\n尚*A'))))) WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c3)))AND(v0.c0)))) AND ((-942071513)))) ORDER BY (((+ (rt0.c3))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c3)))AND(v0.c0)))) AND ((-942071513)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((x'')) AND (((~ ('P''\n尚*A'))))) ORDER BY (((+ (rt0.c3))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((x'')) AND (((~ ('P''\n尚*A'))))) WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c3)))AND(v0.c0)))) AND ((-942071513)))) ORDER BY (((+ (rt0.c3))) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)), ((rt0.c3)&(rt0.c0)))) ORDER BY (- (CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)), ((rt0.c3)&(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (- (CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)), ((rt0.c3)&(rt0.c0)))) ORDER BY (- (CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)), ((rt0.c3)&(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (- (CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)), ((rt0.c3)&(rt0.c0)))) ORDER BY (- (CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE ((((((~ (1363951)))AND((('e\r') IS TRUE))))OR(rt0.c3 COLLATE BINARY))) ORDER BY (rt0.c2 COLLATE RTRIM IN ('-1106581270'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((~ (1363951)))AND((('e\r') IS TRUE))))OR(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c2 COLLATE RTRIM IN ('-1106581270'))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((((~ (1363951)))AND((('e\r') IS TRUE))))OR(rt0.c3 COLLATE BINARY))) ORDER BY (rt0.c2 COLLATE RTRIM IN ('-1106581270'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((~ (1363951)))AND((('e\r') IS TRUE))))OR(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c2 COLLATE RTRIM IN ('-1106581270'))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((((~ (1363951)))AND((('e\r') IS TRUE))))OR(rt0.c3 COLLATE BINARY))) ORDER BY (rt0.c2 COLLATE RTRIM IN ('-1106581270'))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)), (rt0.c0 IN ()), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE '1409094093' END, ((rt0.c1)*(rt0.c3)), (rt0.c2 IN ()))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))+((NULL IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)), (rt0.c0 IN ()), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE '1409094093' END, ((rt0.c1)*(rt0.c3)), (rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))+((NULL IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)), (rt0.c0 IN ()), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE '1409094093' END, ((rt0.c1)*(rt0.c3)), (rt0.c2 IN ()))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))+((NULL IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)), (rt0.c0 IN ()), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE '1409094093' END, ((rt0.c1)*(rt0.c3)), (rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))+((NULL IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)), (rt0.c0 IN ()), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE '1409094093' END, ((rt0.c1)*(rt0.c3)), (rt0.c2 IN ()))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))+((NULL IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN rt0.c2 THEN CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END END) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END END) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c1 DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN rt0.c2 THEN CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END END) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END END) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c1 DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN rt0.c2 THEN CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END END) ORDER BY rt0.c1 DESC;
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2)IS NOT(rt0.c0)))%(UNLIKELY(DISTINCT rt0.c0)))) ORDER BY rt0.c1 DESC  NULLS LAST, ((((rt0.c0) IS TRUE)) ISNULL), ((((rt0.c3)==(x'dd26')))>=(((rt0.c1)||(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS NOT(rt0.c0)))%(UNLIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c1 DESC  NULLS LAST, ((((rt0.c0) IS TRUE)) ISNULL), ((((rt0.c3)==(x'dd26')))>=(((rt0.c1)||(rt0.c0)))));
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2)IS NOT(rt0.c0)))%(UNLIKELY(DISTINCT rt0.c0)))) ORDER BY rt0.c1 DESC  NULLS LAST, ((((rt0.c0) IS TRUE)) ISNULL), ((((rt0.c3)==(x'dd26')))>=(((rt0.c1)||(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS NOT(rt0.c0)))%(UNLIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c1 DESC  NULLS LAST, ((((rt0.c0) IS TRUE)) ISNULL), ((((rt0.c3)==(x'dd26')))>=(((rt0.c1)||(rt0.c0)))));
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2)IS NOT(rt0.c0)))%(UNLIKELY(DISTINCT rt0.c0)))) ORDER BY rt0.c1 DESC  NULLS LAST, ((((rt0.c0) IS TRUE)) ISNULL), ((((rt0.c3)==(x'dd26')))>=(((rt0.c1)||(rt0.c0))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CASE (((rt0.c3))==((rt0.c2)))  WHEN (rt0.c2 IN ()) THEN ((((rt0.c0)OR(v0.c0)))AND(rt0.c1)) END WHERE (LIKELIHOOD(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END, 0.586253272584996));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END, 0.586253272584996)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE (((rt0.c3))==((rt0.c2)))  WHEN (rt0.c2 IN ()) THEN ((((rt0.c0)OR(v0.c0)))AND(rt0.c1)) END);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CASE (((rt0.c3))==((rt0.c2)))  WHEN (rt0.c2 IN ()) THEN ((((rt0.c0)OR(v0.c0)))AND(rt0.c1)) END WHERE (LIKELIHOOD(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END, 0.586253272584996));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END, 0.586253272584996)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE (((rt0.c3))==((rt0.c2)))  WHEN (rt0.c2 IN ()) THEN ((((rt0.c0)OR(v0.c0)))AND(rt0.c1)) END);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CASE (((rt0.c3))==((rt0.c2)))  WHEN (rt0.c2 IN ()) THEN ((((rt0.c0)OR(v0.c0)))AND(rt0.c1)) END WHERE (LIKELIHOOD(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END, 0.586253272584996));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.211004021918741)))AND(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c1)&(rt0.c1)))) WHERE (rt0.c1) ORDER BY ((((((((((rt0.c1) IS FALSE))AND(NULL)))OR((rt0.c0 IN ()))))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c3) ISNULL))), ((((v0.c0)<=(x'd46b'))) BETWEEN (rt0.c2 COLLATE BINARY) AND (v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.211004021918741)))AND(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c1)&(rt0.c1)))) ORDER BY ((((((((((rt0.c1) IS FALSE))AND(NULL)))OR((rt0.c0 IN ()))))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c3) ISNULL))), ((((v0.c0)<=(x'd46b'))) BETWEEN (rt0.c2 COLLATE BINARY) AND (v0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.211004021918741)))AND(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c1)&(rt0.c1)))) WHERE (rt0.c1) ORDER BY ((((((((((rt0.c1) IS FALSE))AND(NULL)))OR((rt0.c0 IN ()))))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c3) ISNULL))), ((((v0.c0)<=(x'd46b'))) BETWEEN (rt0.c2 COLLATE BINARY) AND (v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.211004021918741)))AND(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c1)&(rt0.c1)))) ORDER BY ((((((((((rt0.c1) IS FALSE))AND(NULL)))OR((rt0.c0 IN ()))))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c3) ISNULL))), ((((v0.c0)<=(x'd46b'))) BETWEEN (rt0.c2 COLLATE BINARY) AND (v0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.211004021918741)))AND(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c1)&(rt0.c1)))) WHERE (rt0.c1) ORDER BY ((((((((((rt0.c1) IS FALSE))AND(NULL)))OR((rt0.c0 IN ()))))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c3) ISNULL))), ((((v0.c0)<=(x'd46b'))) BETWEEN (rt0.c2 COLLATE BINARY) AND (v0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END)OR(((rt0.c0)&(rt0.c2)))))OR(((rt0.c1)>>(0.3411104652392474)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END)OR(((rt0.c0)&(rt0.c2)))))OR(((rt0.c1)>>(0.3411104652392474))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END)OR(((rt0.c0)&(rt0.c2)))))OR(((rt0.c1)>>(0.3411104652392474)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END)OR(((rt0.c0)&(rt0.c2)))))OR(((rt0.c1)>>(0.3411104652392474))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END)OR(((rt0.c0)&(rt0.c2)))))OR(((rt0.c1)>>(0.3411104652392474)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c0 COLLATE NOCASE)>>(NULLIF(rt0.c0, v0.c0))) WHERE (CAST(CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0.4370448972253449 WHEN v0.c0 THEN rt0.c3 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0.4370448972253449 WHEN v0.c0 THEN rt0.c3 END AS BLOB)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c0 COLLATE NOCASE)>>(NULLIF(rt0.c0, v0.c0))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c0 COLLATE NOCASE)>>(NULLIF(rt0.c0, v0.c0))) WHERE (CAST(CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0.4370448972253449 WHEN v0.c0 THEN rt0.c3 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0.4370448972253449 WHEN v0.c0 THEN rt0.c3 END AS BLOB)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c0 COLLATE NOCASE)>>(NULLIF(rt0.c0, v0.c0))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c0 COLLATE NOCASE)>>(NULLIF(rt0.c0, v0.c0))) WHERE (CAST(CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0.4370448972253449 WHEN v0.c0 THEN rt0.c3 END AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(rt0.c3 COLLATE BINARY, rt0.c2)) ORDER BY NULLIF(DISTINCT ((0.5786958262335508) NOT BETWEEN (rt0.c0) AND (rt0.c0)), '>X{}'), '' ASC, (((((rt0.c3)LIKE(rt0.c0))))!=((LIKELY(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(rt0.c3 COLLATE BINARY, rt0.c2)) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(DISTINCT ((0.5786958262335508) NOT BETWEEN (rt0.c0) AND (rt0.c0)), '>X{}'), '' ASC, (((((rt0.c3)LIKE(rt0.c0))))!=((LIKELY(DISTINCT rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(rt0.c3 COLLATE BINARY, rt0.c2)) ORDER BY NULLIF(DISTINCT ((0.5786958262335508) NOT BETWEEN (rt0.c0) AND (rt0.c0)), '>X{}'), '' ASC, (((((rt0.c3)LIKE(rt0.c0))))!=((LIKELY(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(rt0.c3 COLLATE BINARY, rt0.c2)) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(DISTINCT ((0.5786958262335508) NOT BETWEEN (rt0.c0) AND (rt0.c0)), '>X{}'), '' ASC, (((((rt0.c3)LIKE(rt0.c0))))!=((LIKELY(DISTINCT rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(rt0.c3 COLLATE BINARY, rt0.c2)) ORDER BY NULLIF(DISTINCT ((0.5786958262335508) NOT BETWEEN (rt0.c0) AND (rt0.c0)), '>X{}'), '' ASC, (((((rt0.c3)LIKE(rt0.c0))))!=((LIKELY(DISTINCT rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON 2059853246 WHERE (CASE ((v0.c0)AND(rt0.c3))  WHEN CAST(rt0.c1 AS BLOB) THEN (- (rt0.c0)) ELSE CASE rt0.c2  WHEN v0.c0 THEN 1552567111 WHEN rt0.c3 THEN rt0.c0 WHEN -9.44450401E8 THEN rt0.c1 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)AND(rt0.c3))  WHEN CAST(rt0.c1 AS BLOB) THEN (- (rt0.c0)) ELSE CASE rt0.c2  WHEN v0.c0 THEN 1552567111 WHEN rt0.c3 THEN rt0.c0 WHEN -9.44450401E8 THEN rt0.c1 ELSE v0.c0 END END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON 2059853246);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON 2059853246 WHERE (CASE ((v0.c0)AND(rt0.c3))  WHEN CAST(rt0.c1 AS BLOB) THEN (- (rt0.c0)) ELSE CASE rt0.c2  WHEN v0.c0 THEN 1552567111 WHEN rt0.c3 THEN rt0.c0 WHEN -9.44450401E8 THEN rt0.c1 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)AND(rt0.c3))  WHEN CAST(rt0.c1 AS BLOB) THEN (- (rt0.c0)) ELSE CASE rt0.c2  WHEN v0.c0 THEN 1552567111 WHEN rt0.c3 THEN rt0.c0 WHEN -9.44450401E8 THEN rt0.c1 ELSE v0.c0 END END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON 2059853246);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON 2059853246 WHERE (CASE ((v0.c0)AND(rt0.c3))  WHEN CAST(rt0.c1 AS BLOB) THEN (- (rt0.c0)) ELSE CASE rt0.c2  WHEN v0.c0 THEN 1552567111 WHEN rt0.c3 THEN rt0.c0 WHEN -9.44450401E8 THEN rt0.c1 ELSE v0.c0 END END);
SELECT ALL COUNT(*) FROM v0 WHERE (0.9808495933913116);
SELECT SUM(count) FROM (SELECT ALL ((0.9808495933913116) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0.9808495933913116);
SELECT SUM(count) FROM (SELECT ALL ((0.9808495933913116) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0.9808495933913116);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0, rt0.c3, rt0.c1))!=((rt0.c3, NULL, rt0.c1))) AS INTEGER)) ORDER BY CAST(((((((((rt0.c2)AND(rt0.c1)))OR(x'')))AND(0.846620801717349)))OR(rt0.c0)) AS NUMERIC), (rt0.c3 IN ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0, rt0.c3, rt0.c1))!=((rt0.c3, NULL, rt0.c1))) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((((((rt0.c2)AND(rt0.c1)))OR(x'')))AND(0.846620801717349)))OR(rt0.c0)) AS NUMERIC), (rt0.c3 IN ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0, rt0.c3, rt0.c1))!=((rt0.c3, NULL, rt0.c1))) AS INTEGER)) ORDER BY CAST(((((((((rt0.c2)AND(rt0.c1)))OR(x'')))AND(0.846620801717349)))OR(rt0.c0)) AS NUMERIC), (rt0.c3 IN ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0, rt0.c3, rt0.c1))!=((rt0.c3, NULL, rt0.c1))) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((((((rt0.c2)AND(rt0.c1)))OR(x'')))AND(0.846620801717349)))OR(rt0.c0)) AS NUMERIC), (rt0.c3 IN ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0, rt0.c3, rt0.c1))!=((rt0.c3, NULL, rt0.c1))) AS INTEGER)) ORDER BY CAST(((((((((rt0.c2)AND(rt0.c1)))OR(x'')))AND(0.846620801717349)))OR(rt0.c0)) AS NUMERIC), (rt0.c3 IN ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((((((((rt0.c3) IS TRUE))OR(((rt0.c3) IS TRUE))))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c3)))))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0)-(v0.c0))))) ORDER BY (rt0.c3 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3) IS TRUE))OR(((rt0.c3) IS TRUE))))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c3)))))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0)-(v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY (rt0.c3 IN ()) DESC);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((((((((rt0.c3) IS TRUE))OR(((rt0.c3) IS TRUE))))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c3)))))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0)-(v0.c0))))) ORDER BY (rt0.c3 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3) IS TRUE))OR(((rt0.c3) IS TRUE))))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c3)))))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0)-(v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY (rt0.c3 IN ()) DESC);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((((((((rt0.c3) IS TRUE))OR(((rt0.c3) IS TRUE))))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c3)))))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0)-(v0.c0))))) ORDER BY (rt0.c3 IN ()) DESC;
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<=((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<=((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<=((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<=((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<=((~ (v0.c0)))));
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c1)GLOB(rt0.c0))) IS TRUE)) ORDER BY ((rt0.c1)IS NOT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)GLOB(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1)IS NOT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c1)GLOB(rt0.c0))) IS TRUE)) ORDER BY ((rt0.c1)IS NOT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)GLOB(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1)IS NOT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c1)GLOB(rt0.c0))) IS TRUE)) ORDER BY ((rt0.c1)IS NOT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))GLOB(CAST(v0.c0 AS TEXT)))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -348191040 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (((NULL) IS FALSE)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))GLOB(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -348191040 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (((NULL) IS FALSE)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))GLOB(CAST(v0.c0 AS TEXT)))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -348191040 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (((NULL) IS FALSE)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))GLOB(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -348191040 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (((NULL) IS FALSE)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))GLOB(CAST(v0.c0 AS TEXT)))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -348191040 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (((NULL) IS FALSE)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST(rt0.c3 AS TEXT) IN ())) ORDER BY CASE x'' COLLATE BINARY  WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END THEN (((v0.c0, x'', v0.c0)) BETWEEN ((v0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c3, rt0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c3 AS TEXT) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE x'' COLLATE BINARY  WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END THEN (((v0.c0, x'', v0.c0)) BETWEEN ((v0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c3, rt0.c0))) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST(rt0.c3 AS TEXT) IN ())) ORDER BY CASE x'' COLLATE BINARY  WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END THEN (((v0.c0, x'', v0.c0)) BETWEEN ((v0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c3, rt0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c3 AS TEXT) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE x'' COLLATE BINARY  WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END THEN (((v0.c0, x'', v0.c0)) BETWEEN ((v0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c3, rt0.c0))) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST(rt0.c3 AS TEXT) IN ())) ORDER BY CASE x'' COLLATE BINARY  WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END THEN (((v0.c0, x'', v0.c0)) BETWEEN ((v0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c3, rt0.c0))) END  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END) NOT NULL));
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (IFNULL(v0.c0, v0.c0)))) ORDER BY ((((v0.c0)>=(v0.c0))) NOTNULL) ASC, (((v0.c0 COLLATE RTRIM, ((v0.c0)|('-21497210')), ((NULL)<<(v0.c0))))<>(((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((0.8638567361638786, v0.c0, v0.c0, v0.c0, v0.c0))), v0.c0 COLLATE BINARY, v0.c0 COLLATE BINARY))) ASC, (((NOT (v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (0.5702379479711089)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (IFNULL(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>=(v0.c0))) NOTNULL) ASC, (((v0.c0 COLLATE RTRIM, ((v0.c0)|('-21497210')), ((NULL)<<(v0.c0))))<>(((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((0.8638567361638786, v0.c0, v0.c0, v0.c0, v0.c0))), v0.c0 COLLATE BINARY, v0.c0 COLLATE BINARY))) ASC, (((NOT (v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (0.5702379479711089)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (IFNULL(v0.c0, v0.c0)))) ORDER BY ((((v0.c0)>=(v0.c0))) NOTNULL) ASC, (((v0.c0 COLLATE RTRIM, ((v0.c0)|('-21497210')), ((NULL)<<(v0.c0))))<>(((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((0.8638567361638786, v0.c0, v0.c0, v0.c0, v0.c0))), v0.c0 COLLATE BINARY, v0.c0 COLLATE BINARY))) ASC, (((NOT (v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (0.5702379479711089)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (IFNULL(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>=(v0.c0))) NOTNULL) ASC, (((v0.c0 COLLATE RTRIM, ((v0.c0)|('-21497210')), ((NULL)<<(v0.c0))))<>(((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((0.8638567361638786, v0.c0, v0.c0, v0.c0, v0.c0))), v0.c0 COLLATE BINARY, v0.c0 COLLATE BINARY))) ASC, (((NOT (v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (0.5702379479711089)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (IFNULL(v0.c0, v0.c0)))) ORDER BY ((((v0.c0)>=(v0.c0))) NOTNULL) ASC, (((v0.c0 COLLATE RTRIM, ((v0.c0)|('-21497210')), ((NULL)<<(v0.c0))))<>(((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((0.8638567361638786, v0.c0, v0.c0, v0.c0, v0.c0))), v0.c0 COLLATE BINARY, v0.c0 COLLATE BINARY))) ASC, (((NOT (v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (0.5702379479711089)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0))<(((v0.c0 IN ()))))) ORDER BY (~ ((((0.9832090382440888, v0.c0, v0.c0)) NOT BETWEEN (('1744741363', v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))<(((v0.c0 IN ()))))) IS TRUE)  as count FROM v0 ORDER BY (~ ((((0.9832090382440888, v0.c0, v0.c0)) NOT BETWEEN (('1744741363', v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0))<(((v0.c0 IN ()))))) ORDER BY (~ ((((0.9832090382440888, v0.c0, v0.c0)) NOT BETWEEN (('1744741363', v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))<(((v0.c0 IN ()))))) IS TRUE)  as count FROM v0 ORDER BY (~ ((((0.9832090382440888, v0.c0, v0.c0)) NOT BETWEEN (('1744741363', v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0))<(((v0.c0 IN ()))))) ORDER BY (~ ((((0.9832090382440888, v0.c0, v0.c0)) NOT BETWEEN (('1744741363', v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c3, rt0.c3, rt0.c2, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, ((((0.4666657534455474)AND(v0.c0)))OR(rt0.c0)), (rt0.c0 IN (rt0.c1)), (+ (v0.c0)), 0.037932735995467315)) AND ((((rt0.c2) IS TRUE), ((rt0.c0)==(rt0.c3)), ((((((((((((v0.c0)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(rt0.c3)))AND(v0.c0)), (rt0.c2 IN ()), CASE WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c3, rt0.c2, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, ((((0.4666657534455474)AND(v0.c0)))OR(rt0.c0)), (rt0.c0 IN (rt0.c1)), (+ (v0.c0)), 0.037932735995467315)) AND ((((rt0.c2) IS TRUE), ((rt0.c0)==(rt0.c3)), ((((((((((((v0.c0)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(rt0.c3)))AND(v0.c0)), (rt0.c2 IN ()), CASE WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c3, rt0.c3, rt0.c2, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, ((((0.4666657534455474)AND(v0.c0)))OR(rt0.c0)), (rt0.c0 IN (rt0.c1)), (+ (v0.c0)), 0.037932735995467315)) AND ((((rt0.c2) IS TRUE), ((rt0.c0)==(rt0.c3)), ((((((((((((v0.c0)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(rt0.c3)))AND(v0.c0)), (rt0.c2 IN ()), CASE WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c3, rt0.c2, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, ((((0.4666657534455474)AND(v0.c0)))OR(rt0.c0)), (rt0.c0 IN (rt0.c1)), (+ (v0.c0)), 0.037932735995467315)) AND ((((rt0.c2) IS TRUE), ((rt0.c0)==(rt0.c3)), ((((((((((((v0.c0)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(rt0.c3)))AND(v0.c0)), (rt0.c2 IN ()), CASE WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c3, rt0.c3, rt0.c2, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, ((((0.4666657534455474)AND(v0.c0)))OR(rt0.c0)), (rt0.c0 IN (rt0.c1)), (+ (v0.c0)), 0.037932735995467315)) AND ((((rt0.c2) IS TRUE), ((rt0.c0)==(rt0.c3)), ((((((((((((v0.c0)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(rt0.c3)))AND(v0.c0)), (rt0.c2 IN ()), CASE WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((((0.7365101013532973))<=((rt0.c1)))))<((v0.c0 COLLATE BINARY))) WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))<=(CAST(rt0.c1 AS TEXT)))) ORDER BY (((rt0.c1)) BETWEEN ((979973996)) AND (((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))<=(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((((0.7365101013532973))<=((rt0.c1)))))<((v0.c0 COLLATE BINARY))) ORDER BY (((rt0.c1)) BETWEEN ((979973996)) AND (((rt0.c0 IN ())))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((((0.7365101013532973))<=((rt0.c1)))))<((v0.c0 COLLATE BINARY))) WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))<=(CAST(rt0.c1 AS TEXT)))) ORDER BY (((rt0.c1)) BETWEEN ((979973996)) AND (((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))<=(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((((0.7365101013532973))<=((rt0.c1)))))<((v0.c0 COLLATE BINARY))) ORDER BY (((rt0.c1)) BETWEEN ((979973996)) AND (((rt0.c0 IN ())))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((((0.7365101013532973))<=((rt0.c1)))))<((v0.c0 COLLATE BINARY))) WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))<=(CAST(rt0.c1 AS TEXT)))) ORDER BY (((rt0.c1)) BETWEEN ((979973996)) AND (((rt0.c0 IN ()))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS INTEGER) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (v0.c0 COLLATE NOCASE))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND ('0.04437815723897254')))-((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND ('0.04437815723897254')))-((NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (v0.c0 COLLATE NOCASE))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND ('0.04437815723897254')))-((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND ('0.04437815723897254')))-((NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (v0.c0 COLLATE NOCASE))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND ('0.04437815723897254')))-((NOT (v0.c0))));
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY ((((v0.c0)||(rt0.c0)))<((NOT ('uuCF')))) ASC, (((rt0.c0))=(((('')GLOB(rt0.c2))))) ASC, ((((((((((rt0.c2)<(v0.c0)))AND((- (rt0.c2)))))AND(((((rt0.c2)AND(rt0.c0)))OR(0.9972612922091328)))))OR(UNLIKELY(rt0.c0))))OR(CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0)||(rt0.c0)))<((NOT ('uuCF')))) ASC, (((rt0.c0))==(((('')GLOB(rt0.c2))))) ASC, ((((((((((rt0.c2)<(v0.c0)))AND((- (rt0.c2)))))AND(((((rt0.c2)AND(rt0.c0)))OR(0.9972612922091328)))))OR(UNLIKELY(rt0.c0))))OR(CAST(v0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY ((((v0.c0)||(rt0.c0)))<((NOT ('uuCF')))) ASC, (((rt0.c0))=(((('')GLOB(rt0.c2))))) ASC, ((((((((((rt0.c2)<(v0.c0)))AND((- (rt0.c2)))))AND(((((rt0.c2)AND(rt0.c0)))OR(0.9972612922091328)))))OR(UNLIKELY(rt0.c0))))OR(CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0)||(rt0.c0)))<((NOT ('uuCF')))) ASC, (((rt0.c0))==(((('')GLOB(rt0.c2))))) ASC, ((((((((((rt0.c2)<(v0.c0)))AND((- (rt0.c2)))))AND(((((rt0.c2)AND(rt0.c0)))OR(0.9972612922091328)))))OR(UNLIKELY(rt0.c0))))OR(CAST(v0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY ((((v0.c0)||(rt0.c0)))<((NOT ('uuCF')))) ASC, (((rt0.c0))=(((('')GLOB(rt0.c2))))) ASC, ((((((((((rt0.c2)<(v0.c0)))AND((- (rt0.c2)))))AND(((((rt0.c2)AND(rt0.c0)))OR(0.9972612922091328)))))OR(UNLIKELY(rt0.c0))))OR(CAST(v0.c0 AS NUMERIC)));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON rt0.c0 WHERE (((rt0.c3) ISNULL)) ORDER BY CASE (+ (rt0.c3))  WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2) NOT NULL) ELSE '' END;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) ISNULL)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON rt0.c0 ORDER BY CASE (+ (rt0.c3))  WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2) NOT NULL) ELSE '' END);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON rt0.c0 WHERE (((rt0.c3) ISNULL)) ORDER BY CASE (+ (rt0.c3))  WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2) NOT NULL) ELSE '' END;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) ISNULL)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON rt0.c0 ORDER BY CASE (+ (rt0.c3))  WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2) NOT NULL) ELSE '' END);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON rt0.c0 WHERE (((rt0.c3) ISNULL)) ORDER BY CASE (+ (rt0.c3))  WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2) NOT NULL) ELSE '' END;
SELECT ALL * FROM rt0, v0 WHERE ((((+ (0.33332294611740687)))>=(HEX(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (0.33332294611740687)))>=(HEX(v0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((+ (0.33332294611740687)))>=(HEX(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (0.33332294611740687)))>=(HEX(v0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((+ (0.33332294611740687)))>=(HEX(v0.c0))));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON rt0.c3 WHERE ((((rt0.c2 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON rt0.c3);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON rt0.c3 WHERE ((((rt0.c2 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON rt0.c3);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON rt0.c3 WHERE ((((rt0.c2 IN ())) NOTNULL));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c2 IN ())))<=((CAST(rt0.c3 AS TEXT))))  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) IS FALSE), CASE ((((rt0.c2)AND(rt0.c2)))OR(x''))  WHEN ((rt0.c3) IS TRUE) THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)) ELSE rt0.c2 END DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 IN ())))<=((CAST(rt0.c3 AS TEXT))))  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) IS FALSE), CASE ((((rt0.c2)AND(rt0.c2)))OR(x''))  WHEN ((rt0.c3) IS TRUE) THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)) ELSE rt0.c2 END DESC);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c2 IN ())))<=((CAST(rt0.c3 AS TEXT))))  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) IS FALSE), CASE ((((rt0.c2)AND(rt0.c2)))OR(x''))  WHEN ((rt0.c3) IS TRUE) THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)) ELSE rt0.c2 END DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 IN ())))<=((CAST(rt0.c3 AS TEXT))))  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) IS FALSE), CASE ((((rt0.c2)AND(rt0.c2)))OR(x''))  WHEN ((rt0.c3) IS TRUE) THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)) ELSE rt0.c2 END DESC);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c2 IN ())))<=((CAST(rt0.c3 AS TEXT))))  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) IS FALSE), CASE ((((rt0.c2)AND(rt0.c2)))OR(x''))  WHEN ((rt0.c3) IS TRUE) THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)) ELSE rt0.c2 END DESC;
SELECT * FROM rt0, v0 WHERE (((v0.c0)/(rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0)/(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((v0.c0)/(rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0)/(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((v0.c0)/(rt0.c3)) COLLATE NOCASE);
SELECT * FROM v0 WHERE (((((v0.c0)|(v0.c0)))-(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY PRINTF((- (v0.c0)), (v0.c0 IN ()), IFNULL(v0.c0, v0.c0))  NULLS FIRST, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)|(v0.c0)))-(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY PRINTF((- (v0.c0)), (v0.c0 IN ()), IFNULL(v0.c0, v0.c0))  NULLS FIRST, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c0)|(v0.c0)))-(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY PRINTF((- (v0.c0)), (v0.c0 IN ()), IFNULL(v0.c0, v0.c0))  NULLS FIRST, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)|(v0.c0)))-(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY PRINTF((- (v0.c0)), (v0.c0 IN ()), IFNULL(v0.c0, v0.c0))  NULLS FIRST, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c0)|(v0.c0)))-(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY PRINTF((- (v0.c0)), (v0.c0 IN ()), IFNULL(v0.c0, v0.c0))  NULLS FIRST, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((rt0.c3 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3 IN ())) ISNULL));
SELECT ALL * FROM rt0 WHERE (((0Xfffffffff11a28f4 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0xfffffffff11a28f4 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((0Xfffffffff11a28f4 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0xfffffffff11a28f4 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((0Xfffffffff11a28f4 COLLATE BINARY) NOTNULL));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((LOWER(DISTINCT rt0.c3))AND(CAST(rt0.c1 AS NUMERIC))))OR(((((rt0.c2)OR(rt0.c0)))AND(v0.c0))))) ORDER BY (0.39556282100538176 IN ()) COLLATE RTRIM COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((LOWER(DISTINCT rt0.c3))AND(CAST(rt0.c1 AS NUMERIC))))OR(((((rt0.c2)OR(rt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (0.39556282100538176 IN ()) COLLATE RTRIM COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((LOWER(DISTINCT rt0.c3))AND(CAST(rt0.c1 AS NUMERIC))))OR(((((rt0.c2)OR(rt0.c0)))AND(v0.c0))))) ORDER BY (0.39556282100538176 IN ()) COLLATE RTRIM COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((LOWER(DISTINCT rt0.c3))AND(CAST(rt0.c1 AS NUMERIC))))OR(((((rt0.c2)OR(rt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (0.39556282100538176 IN ()) COLLATE RTRIM COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((LOWER(DISTINCT rt0.c3))AND(CAST(rt0.c1 AS NUMERIC))))OR(((((rt0.c2)OR(rt0.c0)))AND(v0.c0))))) ORDER BY (0.39556282100538176 IN ()) COLLATE RTRIM COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE ((((rt0.c0))<=((0Xfffffffff729bba4))) COLLATE RTRIM) ORDER BY (((rt0.c2 IN ())) BETWEEN (((rt0.c1) IS TRUE)) AND (((v0.c0) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))<=((0xfffffffff729bba4))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2 IN ())) BETWEEN (((rt0.c1) IS TRUE)) AND (((v0.c0) IS TRUE))) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((rt0.c0))<=((0Xfffffffff729bba4))) COLLATE RTRIM) ORDER BY (((rt0.c2 IN ())) BETWEEN (((rt0.c1) IS TRUE)) AND (((v0.c0) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))<=((0xfffffffff729bba4))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2 IN ())) BETWEEN (((rt0.c1) IS TRUE)) AND (((v0.c0) IS TRUE))) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((rt0.c0))<=((0Xfffffffff729bba4))) COLLATE RTRIM) ORDER BY (((rt0.c2 IN ())) BETWEEN (((rt0.c1) IS TRUE)) AND (((v0.c0) IS TRUE))) DESC  NULLS LAST;
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ())) ISNULL) WHERE (((((rt0.c0)IS(rt0.c1)))>(CASE WHEN rt0.c1 THEN x'b6bc' END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS(rt0.c1)))>(CASE WHEN rt0.c1 THEN x'b6bc' END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ())) ISNULL));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ())) ISNULL) WHERE (((((rt0.c0)IS(rt0.c1)))>(CASE WHEN rt0.c1 THEN x'b6bc' END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS(rt0.c1)))>(CASE WHEN rt0.c1 THEN x'b6bc' END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ())) ISNULL));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ())) ISNULL) WHERE (((((rt0.c0)IS(rt0.c1)))>(CASE WHEN rt0.c1 THEN x'b6bc' END)));
SELECT * FROM v0, rt0 WHERE ((x'' IN (rt0.c3))) ORDER BY (((rt0.c0, v0.c0, '')) NOT BETWEEN ((ROUND(v0.c0, rt0.c3), (rt0.c1 IN ()), (NULL IN (rt0.c3, rt0.c3)))) AND ((v0.c0, ((rt0.c0)LIKE(rt0.c1)), rt0.c2 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (rt0.c3))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c0, v0.c0, '')) NOT BETWEEN ((ROUND(v0.c0, rt0.c3), (rt0.c1 IN ()), (NULL IN (rt0.c3, rt0.c3)))) AND ((v0.c0, ((rt0.c0)LIKE(rt0.c1)), rt0.c2 COLLATE NOCASE)))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((x'' IN (rt0.c3))) ORDER BY (((rt0.c0, v0.c0, '')) NOT BETWEEN ((ROUND(v0.c0, rt0.c3), (rt0.c1 IN ()), (NULL IN (rt0.c3, rt0.c3)))) AND ((v0.c0, ((rt0.c0)LIKE(rt0.c1)), rt0.c2 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (rt0.c3))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c0, v0.c0, '')) NOT BETWEEN ((ROUND(v0.c0, rt0.c3), (rt0.c1 IN ()), (NULL IN (rt0.c3, rt0.c3)))) AND ((v0.c0, ((rt0.c0)LIKE(rt0.c1)), rt0.c2 COLLATE NOCASE)))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((x'' IN (rt0.c3))) ORDER BY (((rt0.c0, v0.c0, '')) NOT BETWEEN ((ROUND(v0.c0, rt0.c3), (rt0.c1 IN ()), (NULL IN (rt0.c3, rt0.c3)))) AND ((v0.c0, ((rt0.c0)LIKE(rt0.c1)), rt0.c2 COLLATE NOCASE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON JULIANDAY(0xffffffffc55b49ff, v0.c0 COLLATE BINARY, (NOT (NULL))) WHERE (CAST(((rt0.c2)=(rt0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)==(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON JULIANDAY(0Xffffffffc55b49ff, v0.c0 COLLATE BINARY, (NOT (NULL))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON JULIANDAY(0xffffffffc55b49ff, v0.c0 COLLATE BINARY, (NOT (NULL))) WHERE (CAST(((rt0.c2)=(rt0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)==(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON JULIANDAY(0Xffffffffc55b49ff, v0.c0 COLLATE BINARY, (NOT (NULL))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON JULIANDAY(0xffffffffc55b49ff, v0.c0 COLLATE BINARY, (NOT (NULL))) WHERE (CAST(((rt0.c2)=(rt0.c3)) AS INTEGER));
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END AS NUMERIC));
SELECT * FROM v0 WHERE (CASE ((v0.c0)IS(v0.c0))  WHEN LIKELY(DISTINCT v0.c0) THEN (((v0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0))) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((v0.c0)LIKE(v0.c0)) WHEN (((0x54597269, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))) THEN (v0.c0 IN ()) END) ORDER BY CHAR(((v0.c0)<(v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)IS(v0.c0))  WHEN LIKELY(DISTINCT v0.c0) THEN (((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((v0.c0)LIKE(v0.c0)) WHEN (((0X54597269, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0 ORDER BY CHAR(((v0.c0)<(v0.c0))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE ((v0.c0)IS(v0.c0))  WHEN LIKELY(DISTINCT v0.c0) THEN (((v0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0))) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((v0.c0)LIKE(v0.c0)) WHEN (((0x54597269, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))) THEN (v0.c0 IN ()) END) ORDER BY CHAR(((v0.c0)<(v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)IS(v0.c0))  WHEN LIKELY(DISTINCT v0.c0) THEN (((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((v0.c0)LIKE(v0.c0)) WHEN (((0X54597269, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0 ORDER BY CHAR(((v0.c0)<(v0.c0))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE ((v0.c0)IS(v0.c0))  WHEN LIKELY(DISTINCT v0.c0) THEN (((v0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0))) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((v0.c0)LIKE(v0.c0)) WHEN (((0x54597269, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))) THEN (v0.c0 IN ()) END) ORDER BY CHAR(((v0.c0)<(v0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)AND(((rt0.c3) NOT NULL))))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)AND(((rt0.c3) NOT NULL))))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)AND(((rt0.c3) NOT NULL))))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)AND(((rt0.c3) NOT NULL))))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)AND(((rt0.c3) NOT NULL))))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 END)));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((TYPEOF(rt0.c1))LIKE(((rt0.c2)==(v0.c0)))) WHERE ((((v0.c0)IS(rt0.c1)) IN ((rt0.c1 IN (3.81076329E8, rt0.c0))))) ORDER BY (NOT (CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((v0.c0)IS(rt0.c1)) IN ((rt0.c1 IN (3.81076329E8, rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((TYPEOF(rt0.c1))LIKE(((rt0.c2)==(v0.c0)))) ORDER BY (NOT (CAST(v0.c0 AS NUMERIC))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((TYPEOF(rt0.c1))LIKE(((rt0.c2)==(v0.c0)))) WHERE ((((v0.c0)IS(rt0.c1)) IN ((rt0.c1 IN (3.81076329E8, rt0.c0))))) ORDER BY (NOT (CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((v0.c0)IS(rt0.c1)) IN ((rt0.c1 IN (3.81076329E8, rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((TYPEOF(rt0.c1))LIKE(((rt0.c2)==(v0.c0)))) ORDER BY (NOT (CAST(v0.c0 AS NUMERIC))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((TYPEOF(rt0.c1))LIKE(((rt0.c2)==(v0.c0)))) WHERE ((((v0.c0)IS(rt0.c1)) IN ((rt0.c1 IN (3.81076329E8, rt0.c0))))) ORDER BY (NOT (CAST(v0.c0 AS NUMERIC)));
SELECT ALL * FROM rt0 WHERE (ABS(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((ABS(rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (ABS(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((ABS(rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (ABS(rt0.c1 COLLATE BINARY));
SELECT COUNT(*) FROM v0 WHERE ((((((((v0.c0))<((v0.c0))))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(((((x'')OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0))<((v0.c0))))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(((((x'')OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((((v0.c0))<((v0.c0))))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(((((x'')OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0))<((v0.c0))))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(((((x'')OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((((v0.c0))<((v0.c0))))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(((((x'')OR(v0.c0)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY (NOT (v0.c0)) ASC, HEX(DISTINCT ((v0.c0)LIKE('0.5800777177705883'))) DESC;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c0)) ASC, HEX(DISTINCT ((v0.c0)LIKE('0.5800777177705883'))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY (NOT (v0.c0)) ASC, HEX(DISTINCT ((v0.c0)LIKE('0.5800777177705883'))) DESC;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c0)) ASC, HEX(DISTINCT ((v0.c0)LIKE('0.5800777177705883'))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY (NOT (v0.c0)) ASC, HEX(DISTINCT ((v0.c0)LIKE('0.5800777177705883'))) DESC;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c1) NOTNULL))OR((((v0.c0, rt0.c0, rt0.c0))<>((0.9017373813690713, rt0.c0, rt0.c3))))))OR(0.7549083480935634)) WHERE ((~ (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c1) NOTNULL))OR((((v0.c0, rt0.c0, rt0.c0))<>((0.9017373813690713, rt0.c0, rt0.c3))))))OR(0.7549083480935634)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c1) NOTNULL))OR((((v0.c0, rt0.c0, rt0.c0))<>((0.9017373813690713, rt0.c0, rt0.c3))))))OR(0.7549083480935634)) WHERE ((~ (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c1) NOTNULL))OR((((v0.c0, rt0.c0, rt0.c0))<>((0.9017373813690713, rt0.c0, rt0.c3))))))OR(0.7549083480935634)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c1) NOTNULL))OR((((v0.c0, rt0.c0, rt0.c0))<>((0.9017373813690713, rt0.c0, rt0.c3))))))OR(0.7549083480935634)) WHERE ((~ (rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON load_extension(CAST(0.15280397566410786 AS TEXT)) WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON load_extension(CAST(0.15280397566410786 AS TEXT)));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON load_extension(CAST(0.15280397566410786 AS TEXT)) WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON load_extension(CAST(0.15280397566410786 AS TEXT)));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON load_extension(CAST(0.15280397566410786 AS TEXT)) WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT * FROM v0, rt0 WHERE ((((NOT (v0.c0)))>>((0xffffffff886aa4c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))>>((0xffffffff886aa4c1 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((NOT (v0.c0)))>>((0xffffffff886aa4c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))>>((0xffffffff886aa4c1 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((NOT (v0.c0)))>>((0xffffffff886aa4c1 IN ()))));
SELECT * FROM rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((HEX(rt0.c0), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END, TRIM(rt0.c2, rt0.c2))) AND ((rt0.c0, rt0.c0, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))))) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT NULL), ((((rt0.c3)*(rt0.c2))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((HEX(rt0.c0), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END, TRIM(rt0.c2, rt0.c2))) AND ((rt0.c0, rt0.c0, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT NULL), ((((rt0.c3)*(rt0.c2))) NOT NULL) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((HEX(rt0.c0), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END, TRIM(rt0.c2, rt0.c2))) AND ((rt0.c0, rt0.c0, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))))) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT NULL), ((((rt0.c3)*(rt0.c2))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((HEX(rt0.c0), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END, TRIM(rt0.c2, rt0.c2))) AND ((rt0.c0, rt0.c0, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT NULL), ((((rt0.c3)*(rt0.c2))) NOT NULL) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((HEX(rt0.c0), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END, TRIM(rt0.c2, rt0.c2))) AND ((rt0.c0, rt0.c0, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))))) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT NULL), ((((rt0.c3)*(rt0.c2))) NOT NULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE ((((('961276283')AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))OR(((x'3df6')LIKE(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('961276283')AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))OR(((x'3df6')LIKE(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE ((((('961276283')AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))OR(((x'3df6')LIKE(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('961276283')AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))OR(((x'3df6')LIKE(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE ((((('961276283')AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))OR(((x'3df6')LIKE(v0.c0)))));
SELECT * FROM rt0 WHERE (CAST((((rt0.c3, rt0.c0, rt0.c3, 0x205d138b, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c1, rt0.c0, rt0.c2, rt0.c0))) AS REAL)) ORDER BY ((CAST('V5\He' AS INTEGER)) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END) AND (CASE WHEN rt0.c2 THEN rt0.c3 WHEN x'' THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c3, rt0.c0, rt0.c3, 0x205d138b, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c1, rt0.c0, rt0.c2, rt0.c0))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST('V5\He' AS INTEGER)) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END) AND (CASE WHEN rt0.c2 THEN rt0.c3 WHEN x'' THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 END)) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST((((rt0.c3, rt0.c0, rt0.c3, 0x205d138b, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c1, rt0.c0, rt0.c2, rt0.c0))) AS REAL)) ORDER BY ((CAST('V5\He' AS INTEGER)) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END) AND (CASE WHEN rt0.c2 THEN rt0.c3 WHEN x'' THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c3, rt0.c0, rt0.c3, 0x205d138b, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c1, rt0.c0, rt0.c2, rt0.c0))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST('V5\He' AS INTEGER)) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END) AND (CASE WHEN rt0.c2 THEN rt0.c3 WHEN x'' THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 END)) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST((((rt0.c3, rt0.c0, rt0.c3, 0x205d138b, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c1, rt0.c0, rt0.c2, rt0.c0))) AS REAL)) ORDER BY ((CAST('V5\He' AS INTEGER)) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END) AND (CASE WHEN rt0.c2 THEN rt0.c3 WHEN x'' THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 END)) DESC  NULLS FIRST;
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((((rt0.c2)-(rt0.c1))) NOTNULL) WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2)>>(v0.c0)) THEN CAST(0.41613454349415946 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2)>>(v0.c0)) THEN CAST(0.41613454349415946 AS NUMERIC) END) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((rt0.c2)-(rt0.c1))) NOTNULL));
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((((rt0.c2)-(rt0.c1))) NOTNULL) WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2)>>(v0.c0)) THEN CAST(0.41613454349415946 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2)>>(v0.c0)) THEN CAST(0.41613454349415946 AS NUMERIC) END) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((rt0.c2)-(rt0.c1))) NOTNULL));
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((((rt0.c2)-(rt0.c1))) NOTNULL) WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2)>>(v0.c0)) THEN CAST(0.41613454349415946 AS NUMERIC) END);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2) IS FALSE)))==((((((x'7ec73c3b')OR(rt0.c2)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) IS FALSE)))=((((((x'7ec73c3b')OR(rt0.c2)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2) IS FALSE)))==((((((x'7ec73c3b')OR(rt0.c2)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) IS FALSE)))=((((((x'7ec73c3b')OR(rt0.c2)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2) IS FALSE)))==((((((x'7ec73c3b')OR(rt0.c2)))AND(rt0.c0))))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((rt0.c3 IN ()) IN ((rt0.c2 IN (v0.c0)))) WHERE (((((rt0.c2)&(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)&(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((rt0.c3 IN ()) IN ((rt0.c2 IN (v0.c0)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((rt0.c3 IN ()) IN ((rt0.c2 IN (v0.c0)))) WHERE (((((rt0.c2)&(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)&(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((rt0.c3 IN ()) IN ((rt0.c2 IN (v0.c0)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((rt0.c3 IN ()) IN ((rt0.c2 IN (v0.c0)))) WHERE (((((rt0.c2)&(rt0.c2))) IS FALSE));
SELECT ALL * FROM rt0, v0 WHERE (((0.4681717593089949)<=(((rt0.c3)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.4681717593089949)<=(((rt0.c3)<<(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((0.4681717593089949)<=(((rt0.c3)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.4681717593089949)<=(((rt0.c3)<<(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((0.4681717593089949)<=(((rt0.c3)<<(rt0.c0)))));
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c2) ORDER BY ((rt0.c3)<<(((((rt0.c1)OR(rt0.c1)))OR(NULL)))) DESC  NULLS LAST, CASE CHAR(rt0.c1)  WHEN ((rt0.c0) IS TRUE) THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) WHEN ((rt0.c0)GLOB(v0.c0)) THEN (((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, v0.c0)) AND ((rt0.c1, v0.c0, NULL))) WHEN CAST(v0.c0 AS TEXT) THEN ((0xffffffff8b318a92)=(v0.c0)) WHEN (('') BETWEEN (rt0.c3) AND (v0.c0)) THEN ((((rt0.c2)OR(rt0.c3)))OR(v0.c0)) WHEN ((v0.c0)LIKE(rt0.c3)) THEN ((((rt0.c3)AND(0.0058482273306349475)))AND(rt0.c2)) END, ((((CAST(rt0.c0 AS REAL))AND(((rt0.c3)AND(v0.c0)))))OR('o''&' COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c3)<<(((((rt0.c1)OR(rt0.c1)))OR(NULL)))) DESC  NULLS LAST, CASE CHAR(rt0.c1)  WHEN ((rt0.c0) IS TRUE) THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) WHEN ((rt0.c0)GLOB(v0.c0)) THEN (((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, v0.c0)) AND ((rt0.c1, v0.c0, NULL))) WHEN CAST(v0.c0 AS TEXT) THEN ((0Xffffffff8b318a92)=(v0.c0)) WHEN (('') BETWEEN (rt0.c3) AND (v0.c0)) THEN ((((rt0.c2)OR(rt0.c3)))OR(v0.c0)) WHEN ((v0.c0)LIKE(rt0.c3)) THEN ((((rt0.c3)AND(0.0058482273306349475)))AND(rt0.c2)) END, ((((CAST(rt0.c0 AS REAL))AND(((rt0.c3)AND(v0.c0)))))OR('o''&' COLLATE NOCASE)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c2) ORDER BY ((rt0.c3)<<(((((rt0.c1)OR(rt0.c1)))OR(NULL)))) DESC  NULLS LAST, CASE CHAR(rt0.c1)  WHEN ((rt0.c0) IS TRUE) THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) WHEN ((rt0.c0)GLOB(v0.c0)) THEN (((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, v0.c0)) AND ((rt0.c1, v0.c0, NULL))) WHEN CAST(v0.c0 AS TEXT) THEN ((0xffffffff8b318a92)=(v0.c0)) WHEN (('') BETWEEN (rt0.c3) AND (v0.c0)) THEN ((((rt0.c2)OR(rt0.c3)))OR(v0.c0)) WHEN ((v0.c0)LIKE(rt0.c3)) THEN ((((rt0.c3)AND(0.0058482273306349475)))AND(rt0.c2)) END, ((((CAST(rt0.c0 AS REAL))AND(((rt0.c3)AND(v0.c0)))))OR('o''&' COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c3)<<(((((rt0.c1)OR(rt0.c1)))OR(NULL)))) DESC  NULLS LAST, CASE CHAR(rt0.c1)  WHEN ((rt0.c0) IS TRUE) THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) WHEN ((rt0.c0)GLOB(v0.c0)) THEN (((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, v0.c0)) AND ((rt0.c1, v0.c0, NULL))) WHEN CAST(v0.c0 AS TEXT) THEN ((0Xffffffff8b318a92)=(v0.c0)) WHEN (('') BETWEEN (rt0.c3) AND (v0.c0)) THEN ((((rt0.c2)OR(rt0.c3)))OR(v0.c0)) WHEN ((v0.c0)LIKE(rt0.c3)) THEN ((((rt0.c3)AND(0.0058482273306349475)))AND(rt0.c2)) END, ((((CAST(rt0.c0 AS REAL))AND(((rt0.c3)AND(v0.c0)))))OR('o''&' COLLATE NOCASE)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c2) ORDER BY ((rt0.c3)<<(((((rt0.c1)OR(rt0.c1)))OR(NULL)))) DESC  NULLS LAST, CASE CHAR(rt0.c1)  WHEN ((rt0.c0) IS TRUE) THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) WHEN ((rt0.c0)GLOB(v0.c0)) THEN (((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, v0.c0)) AND ((rt0.c1, v0.c0, NULL))) WHEN CAST(v0.c0 AS TEXT) THEN ((0xffffffff8b318a92)=(v0.c0)) WHEN (('') BETWEEN (rt0.c3) AND (v0.c0)) THEN ((((rt0.c2)OR(rt0.c3)))OR(v0.c0)) WHEN ((v0.c0)LIKE(rt0.c3)) THEN ((((rt0.c3)AND(0.0058482273306349475)))AND(rt0.c2)) END, ((((CAST(rt0.c0 AS REAL))AND(((rt0.c3)AND(v0.c0)))))OR('o''&' COLLATE NOCASE)) ASC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (CAST(rt0.c1 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CAST(rt0.c1 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CAST(rt0.c1 AS NUMERIC));
SELECT COUNT(*) FROM v0, rt0 WHERE (0.5464244093228583);
SELECT SUM(count) FROM (SELECT ALL ((0.5464244093228583) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (0.5464244093228583);
SELECT SUM(count) FROM (SELECT ALL ((0.5464244093228583) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (0.5464244093228583);
SELECT ALL * FROM v0 WHERE ((((((((((v0.c0 IN ()))AND(v0.c0)))OR(((v0.c0) NOTNULL))))OR(((v0.c0) ISNULL))))AND((((v0.c0, v0.c0, v0.c0))<((v0.c0, NULL, v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0 IN ()))AND(v0.c0)))OR(((v0.c0) NOTNULL))))OR(((v0.c0) ISNULL))))AND((((v0.c0, v0.c0, v0.c0))<((v0.c0, NULL, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((((v0.c0 IN ()))AND(v0.c0)))OR(((v0.c0) NOTNULL))))OR(((v0.c0) ISNULL))))AND((((v0.c0, v0.c0, v0.c0))<((v0.c0, NULL, v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0 IN ()))AND(v0.c0)))OR(((v0.c0) NOTNULL))))OR(((v0.c0) ISNULL))))AND((((v0.c0, v0.c0, v0.c0))<((v0.c0, NULL, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((((v0.c0 IN ()))AND(v0.c0)))OR(((v0.c0) NOTNULL))))OR(((v0.c0) ISNULL))))AND((((v0.c0, v0.c0, v0.c0))<((v0.c0, NULL, v0.c0))))));
SELECT ALL * FROM v0, rt0 WHERE (x'') ORDER BY TRIM(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)), ((rt0.c0)<>(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY TRIM(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)), ((rt0.c0)<>(v0.c0))) ASC);
SELECT ALL * FROM v0, rt0 WHERE (x'') ORDER BY TRIM(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)), ((rt0.c0)<>(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY TRIM(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)), ((rt0.c0)<>(v0.c0))) ASC);
SELECT ALL * FROM v0, rt0 WHERE (x'') ORDER BY TRIM(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)), ((rt0.c0)<>(v0.c0))) ASC;
SELECT * FROM rt0, v0 WHERE (((((rt0.c1)<(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((rt0.c1)<(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((rt0.c1)<(rt0.c0))) IS FALSE));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)|(rt0.c2)))!=((((rt0.c3))<((rt0.c0)))))) ORDER BY JULIANDAY(CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END, ((('1987189235'))>=((rt0.c1))), (+ (rt0.c1))) DESC  NULLS LAST, (+ (CAST(rt0.c1 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(rt0.c2)))<>((((rt0.c3))<((rt0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY JULIANDAY(CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END, ((('1987189235'))>=((rt0.c1))), (+ (rt0.c1))) DESC  NULLS LAST, (+ (CAST(rt0.c1 AS NUMERIC))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)|(rt0.c2)))!=((((rt0.c3))<((rt0.c0)))))) ORDER BY JULIANDAY(CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END, ((('1987189235'))>=((rt0.c1))), (+ (rt0.c1))) DESC  NULLS LAST, (+ (CAST(rt0.c1 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(rt0.c2)))<>((((rt0.c3))<((rt0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY JULIANDAY(CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END, ((('1987189235'))>=((rt0.c1))), (+ (rt0.c1))) DESC  NULLS LAST, (+ (CAST(rt0.c1 AS NUMERIC))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)|(rt0.c2)))!=((((rt0.c3))<((rt0.c0)))))) ORDER BY JULIANDAY(CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END, ((('1987189235'))>=((rt0.c1))), (+ (rt0.c1))) DESC  NULLS LAST, (+ (CAST(rt0.c1 AS NUMERIC))) DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST((((rt0.c2))=((rt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))=((rt0.c0))) AS TEXT)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST((((rt0.c2))=((rt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))=((rt0.c0))) AS TEXT)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST((((rt0.c2))=((rt0.c0))) AS TEXT));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (- (((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))) WHERE (('^巤Mpg9' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('^巤Mpg9' IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (- (((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (- (((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))) WHERE (('^巤Mpg9' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('^巤Mpg9' IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (- (((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (- (((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))) WHERE (('^巤Mpg9' IN ()));
SELECT ALL * FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))AND((v0.c0 IN ()))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN 2.14767648E8 THEN '<4~8	X' ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS INTEGER))AND((v0.c0 IN ()))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN 2.14767648E8 THEN '<4~8	X' ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))AND((v0.c0 IN ()))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN 2.14767648E8 THEN '<4~8	X' ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS INTEGER))AND((v0.c0 IN ()))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN 2.14767648E8 THEN '<4~8	X' ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))AND((v0.c0 IN ()))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN 2.14767648E8 THEN '<4~8	X' ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((x'1277')) NOT BETWEEN (((NOT (rt0.c1)))) AND ((COALESCE(rt0.c2, v0.c0))))) ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c0)+(rt0.c1)))) AND ((((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((x'1277')) NOT BETWEEN (((NOT (rt0.c1)))) AND ((COALESCE(rt0.c2, v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c0)+(rt0.c1)))) AND ((((v0.c0) ISNULL)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((x'1277')) NOT BETWEEN (((NOT (rt0.c1)))) AND ((COALESCE(rt0.c2, v0.c0))))) ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c0)+(rt0.c1)))) AND ((((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((x'1277')) NOT BETWEEN (((NOT (rt0.c1)))) AND ((COALESCE(rt0.c2, v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c0)+(rt0.c1)))) AND ((((v0.c0) ISNULL)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((x'1277')) NOT BETWEEN (((NOT (rt0.c1)))) AND ((COALESCE(rt0.c2, v0.c0))))) ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c0)+(rt0.c1)))) AND ((((v0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (UNLIKELY(x'') COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(x'') COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (UNLIKELY(x'') COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(x'') COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (UNLIKELY(x'') COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE ((- (-2.039731337E9)));
SELECT SUM(count) FROM (SELECT ALL (((- (-2.039731337E9))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (-2.039731337E9)));
SELECT SUM(count) FROM (SELECT ALL (((- (-2.039731337E9))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (-2.039731337E9)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((324008012) IS TRUE)) ORDER BY ((0Xffffffff8d5e7d23) NOT BETWEEN (CAST('' AS REAL)) AND (rt0.c0 COLLATE NOCASE)), ((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN ((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c3)))) AND (CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((324008012) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((0Xffffffff8d5e7d23) NOT BETWEEN (CAST('' AS REAL)) AND (rt0.c0 COLLATE NOCASE)), ((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN ((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c3)))) AND (CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((324008012) IS TRUE)) ORDER BY ((0Xffffffff8d5e7d23) NOT BETWEEN (CAST('' AS REAL)) AND (rt0.c0 COLLATE NOCASE)), ((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN ((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c3)))) AND (CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((324008012) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((0Xffffffff8d5e7d23) NOT BETWEEN (CAST('' AS REAL)) AND (rt0.c0 COLLATE NOCASE)), ((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN ((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c3)))) AND (CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((324008012) IS TRUE)) ORDER BY ((0Xffffffff8d5e7d23) NOT BETWEEN (CAST('' AS REAL)) AND (rt0.c0 COLLATE NOCASE)), ((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN ((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c3)))) AND (CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 END))  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE 0x16b6c369 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE 0x16b6c369 END) IS TRUE)) IS TRUE)  as count FROM rt0, v0 NOT INDEXED);
SELECT ALL * FROM rt0, v0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE 0x16b6c369 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE 0x16b6c369 END) IS TRUE)) IS TRUE)  as count FROM rt0, v0 NOT INDEXED);
SELECT ALL * FROM rt0, v0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE 0x16b6c369 END) IS TRUE));
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_SOURCE_ID());
SELECT ALL * FROM rt0, v0 WHERE (TRIM(DISTINCT LIKELIHOOD(DISTINCT rt0.c0, 0.2812495925032401), NULLIF(rt0.c1, rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT LIKELIHOOD(DISTINCT rt0.c0, 0.2812495925032401), NULLIF(rt0.c1, rt0.c3))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (TRIM(DISTINCT LIKELIHOOD(DISTINCT rt0.c0, 0.2812495925032401), NULLIF(rt0.c1, rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT LIKELIHOOD(DISTINCT rt0.c0, 0.2812495925032401), NULLIF(rt0.c1, rt0.c3))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (TRIM(DISTINCT LIKELIHOOD(DISTINCT rt0.c0, 0.2812495925032401), NULLIF(rt0.c1, rt0.c3)));
SELECT COUNT(*) FROM v0 WHERE ('jdj	/^V{G' COLLATE BINARY) ORDER BY CAST(CAST(v0.c0 AS REAL) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (('jdj	/^V{G' COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS REAL) AS BLOB));
SELECT COUNT(*) FROM v0 WHERE ('jdj	/^V{G' COLLATE BINARY) ORDER BY CAST(CAST(v0.c0 AS REAL) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (('jdj	/^V{G' COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS REAL) AS BLOB));
SELECT COUNT(*) FROM v0 WHERE ('jdj	/^V{G' COLLATE BINARY) ORDER BY CAST(CAST(v0.c0 AS REAL) AS BLOB);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN ()));
SELECT ALL * FROM rt0, v0 WHERE ((((2.127823208E9))>=((rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((2.127823208E9))>=((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((2.127823208E9))>=((rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((2.127823208E9))>=((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((2.127823208E9))>=((rt0.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)+(rt0.c0))) NOT BETWEEN ((rt0.c1 IN (rt0.c3, rt0.c1))) AND ('2127823208'))) ORDER BY (- (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN '곱Hc\8F.	b' THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)), (+ (NULL))  NULLS LAST, (((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c3)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)+(rt0.c0))) NOT BETWEEN ((rt0.c1 IN (rt0.c3, rt0.c1))) AND ('2127823208'))) IS TRUE)  as count FROM rt0 ORDER BY (- (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN '곱Hc\8F.	b' THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)), (+ (NULL))  NULLS LAST, (((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c3)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)+(rt0.c0))) NOT BETWEEN ((rt0.c1 IN (rt0.c3, rt0.c1))) AND ('2127823208'))) ORDER BY (- (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN '곱Hc\8F.	b' THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)), (+ (NULL))  NULLS LAST, (((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c3)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)+(rt0.c0))) NOT BETWEEN ((rt0.c1 IN (rt0.c3, rt0.c1))) AND ('2127823208'))) IS TRUE)  as count FROM rt0 ORDER BY (- (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN '곱Hc\8F.	b' THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)), (+ (NULL))  NULLS LAST, (((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c3)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)+(rt0.c0))) NOT BETWEEN ((rt0.c1 IN (rt0.c3, rt0.c1))) AND ('2127823208'))) ORDER BY (- (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN '곱Hc\8F.	b' THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)), (+ (NULL))  NULLS LAST, (((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c3)) IN ())  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((((-944450401)OR(rt0.c0)))AND(x'')))OR(('' IN (0Xffffffff9423e410)))))OR(((((rt0.c0)OR(rt0.c0)))AND(x''))))) ORDER BY ((((rt0.c1)>=(rt0.c2))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((-944450401)OR(rt0.c0)))AND(x'')))OR(('' IN (0xffffffff9423e410)))))OR(((((rt0.c0)OR(rt0.c0)))AND(x''))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)>=(rt0.c2))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((((-944450401)OR(rt0.c0)))AND(x'')))OR(('' IN (0Xffffffff9423e410)))))OR(((((rt0.c0)OR(rt0.c0)))AND(x''))))) ORDER BY ((((rt0.c1)>=(rt0.c2))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((-944450401)OR(rt0.c0)))AND(x'')))OR(('' IN (0xffffffff9423e410)))))OR(((((rt0.c0)OR(rt0.c0)))AND(x''))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)>=(rt0.c2))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((((-944450401)OR(rt0.c0)))AND(x'')))OR(('' IN (0Xffffffff9423e410)))))OR(((((rt0.c0)OR(rt0.c0)))AND(x''))))) ORDER BY ((((rt0.c1)>=(rt0.c2))) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN (NOT (rt0.c3)) THEN UPPER(rt0.c3) END) ORDER BY (((rt0.c0 IN (rt0.c1, rt0.c1))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt0.c3)) THEN UPPER(rt0.c3) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN (rt0.c1, rt0.c1))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (NOT (rt0.c3)) THEN UPPER(rt0.c3) END) ORDER BY (((rt0.c0 IN (rt0.c1, rt0.c1))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt0.c3)) THEN UPPER(rt0.c3) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN (rt0.c1, rt0.c1))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (NOT (rt0.c3)) THEN UPPER(rt0.c3) END) ORDER BY (((rt0.c0 IN (rt0.c1, rt0.c1))) NOTNULL)  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (CASE ((v0.c0)<<(v0.c0))  WHEN x'' THEN 'gbB^뀕{0_' ELSE rt0.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)<<(v0.c0))  WHEN x'' THEN 'gbB^뀕{0_' ELSE rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE ((v0.c0)<<(v0.c0))  WHEN x'' THEN 'gbB^뀕{0_' ELSE rt0.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)<<(v0.c0))  WHEN x'' THEN 'gbB^뀕{0_' ELSE rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE ((v0.c0)<<(v0.c0))  WHEN x'' THEN 'gbB^뀕{0_' ELSE rt0.c2 COLLATE NOCASE END);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)>(((rt0.c3) ISNULL))) WHERE (DATETIME((~ (rt0.c0)), v0.c0 COLLATE NOCASE, (rt0.c2 IN ()))) ORDER BY (((v0.c0 IN (rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c3)))OR(rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END)), ((-6.59824076E8) BETWEEN ((- (rt0.c2))) AND (rt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((DATETIME((~ (rt0.c0)), v0.c0 COLLATE NOCASE, (rt0.c2 IN ()))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)>(((rt0.c3) ISNULL))) ORDER BY (((v0.c0 IN (rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c3)))OR(rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END)), ((-6.59824076E8) BETWEEN ((- (rt0.c2))) AND (rt0.c0 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)>(((rt0.c3) ISNULL))) WHERE (DATETIME((~ (rt0.c0)), v0.c0 COLLATE NOCASE, (rt0.c2 IN ()))) ORDER BY (((v0.c0 IN (rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c3)))OR(rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END)), ((-6.59824076E8) BETWEEN ((- (rt0.c2))) AND (rt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((DATETIME((~ (rt0.c0)), v0.c0 COLLATE NOCASE, (rt0.c2 IN ()))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)>(((rt0.c3) ISNULL))) ORDER BY (((v0.c0 IN (rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c3)))OR(rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END)), ((-6.59824076E8) BETWEEN ((- (rt0.c2))) AND (rt0.c0 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)>(((rt0.c3) ISNULL))) WHERE (DATETIME((~ (rt0.c0)), v0.c0 COLLATE NOCASE, (rt0.c2 IN ()))) ORDER BY (((v0.c0 IN (rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c3)))OR(rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END)), ((-6.59824076E8) BETWEEN ((- (rt0.c2))) AND (rt0.c0 COLLATE NOCASE)) DESC;
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c3)))-(x'')) WHERE ((- ('H\n\n3-'))) ORDER BY (- (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))), ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND ((((v0.c0, rt0.c0, v0.c0))<=((v0.c0, v0.c0, 0x3e17e604)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ('H\n\n3-'))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c3)))-(x'')) ORDER BY (- (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))), ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND ((((v0.c0, rt0.c0, v0.c0))<=((v0.c0, v0.c0, 0x3e17e604)))))  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c3)))-(x'')) WHERE ((- ('H\n\n3-'))) ORDER BY (- (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))), ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND ((((v0.c0, rt0.c0, v0.c0))<=((v0.c0, v0.c0, 0x3e17e604)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ('H\n\n3-'))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c3)))-(x'')) ORDER BY (- (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))), ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND ((((v0.c0, rt0.c0, v0.c0))<=((v0.c0, v0.c0, 0x3e17e604)))))  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c3)))-(x'')) WHERE ((- ('H\n\n3-'))) ORDER BY (- (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))), ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND ((((v0.c0, rt0.c0, v0.c0))<=((v0.c0, v0.c0, 0x3e17e604)))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((x'')OR((+ (v0.c0)))))OR(rt0.c2 COLLATE RTRIM))) ORDER BY HEX(DISTINCT CAST(rt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR((+ (v0.c0)))))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0 ORDER BY HEX(DISTINCT CAST(rt0.c0 AS REAL)));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((x'')OR((+ (v0.c0)))))OR(rt0.c2 COLLATE RTRIM))) ORDER BY HEX(DISTINCT CAST(rt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR((+ (v0.c0)))))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0 ORDER BY HEX(DISTINCT CAST(rt0.c0 AS REAL)));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((x'')OR((+ (v0.c0)))))OR(rt0.c2 COLLATE RTRIM))) ORDER BY HEX(DISTINCT CAST(rt0.c0 AS REAL));
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END  WHEN ((v0.c0) IS FALSE) THEN (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END  WHEN ((v0.c0) IS FALSE) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END  WHEN ((v0.c0) IS FALSE) THEN (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END  WHEN ((v0.c0) IS FALSE) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END  WHEN ((v0.c0) IS FALSE) THEN (v0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (v0.c0))) ORDER BY LIKELY(((v0.c0)<=(v0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(((v0.c0)<=(v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (v0.c0))) ORDER BY LIKELY(((v0.c0)<=(v0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(((v0.c0)<=(v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (v0.c0))) ORDER BY LIKELY(((v0.c0)<=(v0.c0)));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN (CHANGES()) AND (CAST(rt0.c0 AS REAL)))) ORDER BY ((((rt0.c0) IS TRUE))*(rt0.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) BETWEEN (CHANGES()) AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS TRUE))*(rt0.c2 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN (CHANGES()) AND (CAST(rt0.c0 AS REAL)))) ORDER BY ((((rt0.c0) IS TRUE))*(rt0.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) BETWEEN (CHANGES()) AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS TRUE))*(rt0.c2 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN (CHANGES()) AND (CAST(rt0.c0 AS REAL)))) ORDER BY ((((rt0.c0) IS TRUE))*(rt0.c2 COLLATE RTRIM)) ASC;
SELECT ALL * FROM rt0, v0 WHERE (1565742486) ORDER BY ((CAST(0.6501322933167483 AS REAL))||(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((1565742486) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(0.6501322933167483 AS REAL))||(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))) DESC);
SELECT ALL * FROM rt0, v0 WHERE (1565742486) ORDER BY ((CAST(0.6501322933167483 AS REAL))||(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((1565742486) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(0.6501322933167483 AS REAL))||(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))) DESC);
SELECT ALL * FROM rt0, v0 WHERE (1565742486) ORDER BY ((CAST(0.6501322933167483 AS REAL))||(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ('2135517281');
SELECT SUM(count) FROM (SELECT ALL (('2135517281') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('2135517281');
SELECT SUM(count) FROM (SELECT ALL (('2135517281') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('2135517281');
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (x'd1bd'))) ORDER BY v0.c0 COLLATE RTRIM ASC  NULLS LAST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (x'd1bd'))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE RTRIM ASC  NULLS LAST, NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (x'd1bd'))) ORDER BY v0.c0 COLLATE RTRIM ASC  NULLS LAST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (x'd1bd'))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE RTRIM ASC  NULLS LAST, NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (x'd1bd'))) ORDER BY v0.c0 COLLATE RTRIM ASC  NULLS LAST, NULL  NULLS FIRST;
SELECT * FROM v0 WHERE ((('') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((('') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((('') NOT NULL));
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c3)GLOB(CAST(rt0.c1 AS REAL)))) ORDER BY CAST(NULL AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)GLOB(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY CAST(NULL AS REAL) DESC);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c3)GLOB(CAST(rt0.c1 AS REAL)))) ORDER BY CAST(NULL AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)GLOB(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY CAST(NULL AS REAL) DESC);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c3)GLOB(CAST(rt0.c1 AS REAL)))) ORDER BY CAST(NULL AS REAL) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))OR(NULL)))OR(((rt0.c1)>=(rt0.c3)))))AND(CASE rt0.c1  WHEN 0Xfffffffff25361b2 THEN rt0.c3 ELSE rt0.c1 END)))OR(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))OR(NULL)))OR(((rt0.c1)>=(rt0.c3)))))AND(CASE rt0.c1  WHEN 0xfffffffff25361b2 THEN rt0.c3 ELSE rt0.c1 END)))OR(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))OR(NULL)))OR(((rt0.c1)>=(rt0.c3)))))AND(CASE rt0.c1  WHEN 0Xfffffffff25361b2 THEN rt0.c3 ELSE rt0.c1 END)))OR(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))OR(NULL)))OR(((rt0.c1)>=(rt0.c3)))))AND(CASE rt0.c1  WHEN 0xfffffffff25361b2 THEN rt0.c3 ELSE rt0.c1 END)))OR(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))OR(NULL)))OR(((rt0.c1)>=(rt0.c3)))))AND(CASE rt0.c1  WHEN 0Xfffffffff25361b2 THEN rt0.c3 ELSE rt0.c1 END)))OR(CAST(rt0.c1 AS REAL))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1) NOT BETWEEN ('p*') AND (rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT BETWEEN ('p*') AND (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1) NOT BETWEEN ('p*') AND (rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT BETWEEN ('p*') AND (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1) NOT BETWEEN ('p*') AND (rt0.c3)) IN ()));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c3))  WHEN (rt0.c3 IN (rt0.c0, rt0.c1, '1552567111')) THEN v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c3))  WHEN (rt0.c3 IN (rt0.c0, rt0.c1, '1552567111')) THEN v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c3))  WHEN (rt0.c3 IN (rt0.c0, rt0.c1, '1552567111')) THEN v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c3))  WHEN (rt0.c3 IN (rt0.c0, rt0.c1, '1552567111')) THEN v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c3))  WHEN (rt0.c3 IN (rt0.c0, rt0.c1, '1552567111')) THEN v0.c0 COLLATE RTRIM END);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON 'SyꐢLBᓃW' WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON 'SyꐢLBᓃW');
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON 'SyꐢLBᓃW' WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON 'SyꐢLBᓃW');
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON 'SyꐢLBᓃW' WHERE (v0.c0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CAST((~ (rt0.c2)) AS NUMERIC)) ORDER BY (((rt0.c0, v0.c0, rt0.c0)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c2 END, (rt0.c1 IN ()), CASE rt0.c3  WHEN v0.c0 THEN v0.c0 END)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((NULL))), (v0.c0 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY (((rt0.c0, v0.c0, rt0.c0)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c2 END, (rt0.c1 IN ()), CASE rt0.c3  WHEN v0.c0 THEN v0.c0 END)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((NULL))), (v0.c0 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ASC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CAST((~ (rt0.c2)) AS NUMERIC)) ORDER BY (((rt0.c0, v0.c0, rt0.c0)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c2 END, (rt0.c1 IN ()), CASE rt0.c3  WHEN v0.c0 THEN v0.c0 END)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((NULL))), (v0.c0 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY (((rt0.c0, v0.c0, rt0.c0)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c2 END, (rt0.c1 IN ()), CASE rt0.c3  WHEN v0.c0 THEN v0.c0 END)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((NULL))), (v0.c0 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ASC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CAST((~ (rt0.c2)) AS NUMERIC)) ORDER BY (((rt0.c0, v0.c0, rt0.c0)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c2 END, (rt0.c1 IN ()), CASE rt0.c3  WHEN v0.c0 THEN v0.c0 END)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((NULL))), (v0.c0 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ASC;
SELECT * FROM v0, rt0 WHERE ((((NOT (x'c017'))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NOT (x'c017'))) IS FALSE)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((NOT (x'c017'))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NOT (x'c017'))) IS FALSE)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((NOT (x'c017'))) IS FALSE));
SELECT COUNT(*) FROM v0, rt0 WHERE (LTRIM(((rt0.c2)>>(rt0.c2)))) ORDER BY (- (((rt0.c1) BETWEEN (x'') AND (rt0.c0)))) ASC  NULLS FIRST, (rt0.c2 IN (((v0.c0)AND(rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((rt0.c2)>>(rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (((rt0.c1) BETWEEN (x'') AND (rt0.c0)))) ASC  NULLS FIRST, (rt0.c2 IN (((v0.c0)AND(rt0.c3)))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (LTRIM(((rt0.c2)>>(rt0.c2)))) ORDER BY (- (((rt0.c1) BETWEEN (x'') AND (rt0.c0)))) ASC  NULLS FIRST, (rt0.c2 IN (((v0.c0)AND(rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((rt0.c2)>>(rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (((rt0.c1) BETWEEN (x'') AND (rt0.c0)))) ASC  NULLS FIRST, (rt0.c2 IN (((v0.c0)AND(rt0.c3)))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (LTRIM(((rt0.c2)>>(rt0.c2)))) ORDER BY (- (((rt0.c1) BETWEEN (x'') AND (rt0.c0)))) ASC  NULLS FIRST, (rt0.c2 IN (((v0.c0)AND(rt0.c3)))) ASC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CASE x''  WHEN v0.c0 THEN 0.7146554746785034 ELSE x'' END)IS(((rt0.c2) NOT NULL)))) ORDER BY ((LOWER(rt0.c1)) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST, ((rt0.c0 COLLATE RTRIM) BETWEEN (((0.24462742029866147) NOT BETWEEN (x'') AND (rt0.c0))) AND ((((rt0.c1, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c3, v0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN v0.c0 THEN 0.7146554746785034 ELSE x'' END)IS(((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((LOWER(rt0.c1)) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST, ((rt0.c0 COLLATE RTRIM) BETWEEN (((0.24462742029866147) NOT BETWEEN (x'') AND (rt0.c0))) AND ((((rt0.c1, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c3, v0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CASE x''  WHEN v0.c0 THEN 0.7146554746785034 ELSE x'' END)IS(((rt0.c2) NOT NULL)))) ORDER BY ((LOWER(rt0.c1)) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST, ((rt0.c0 COLLATE RTRIM) BETWEEN (((0.24462742029866147) NOT BETWEEN (x'') AND (rt0.c0))) AND ((((rt0.c1, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c3, v0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN v0.c0 THEN 0.7146554746785034 ELSE x'' END)IS(((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((LOWER(rt0.c1)) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST, ((rt0.c0 COLLATE RTRIM) BETWEEN (((0.24462742029866147) NOT BETWEEN (x'') AND (rt0.c0))) AND ((((rt0.c1, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c3, v0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CASE x''  WHEN v0.c0 THEN 0.7146554746785034 ELSE x'' END)IS(((rt0.c2) NOT NULL)))) ORDER BY ((LOWER(rt0.c1)) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST, ((rt0.c0 COLLATE RTRIM) BETWEEN (((0.24462742029866147) NOT BETWEEN (x'') AND (rt0.c0))) AND ((((rt0.c1, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c3, v0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2)))))  NULLS FIRST;
SELECT * FROM rt0 NOT INDEXED NATURAL JOIN v0 WHERE (((('b&U6bZ'))<((((rt0.c1)GLOB(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('b&U6bZ'))<((((rt0.c1)GLOB(v0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NOT INDEXED NATURAL JOIN v0 WHERE (((('b&U6bZ'))<((((rt0.c1)GLOB(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('b&U6bZ'))<((((rt0.c1)GLOB(v0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NOT INDEXED NATURAL JOIN v0 WHERE (((('b&U6bZ'))<((((rt0.c1)GLOB(v0.c0))))));
SELECT * FROM v0 WHERE (LTRIM(v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LTRIM(v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LTRIM(v0.c0) COLLATE RTRIM);
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c3))>=((v0.c0)))) ISNULL)) ORDER BY HEX(DISTINCT (((rt0.c0))<=((rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))>=((v0.c0)))) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY HEX(DISTINCT (((rt0.c0))<=((rt0.c0)))) DESC);
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c3))>=((v0.c0)))) ISNULL)) ORDER BY HEX(DISTINCT (((rt0.c0))<=((rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))>=((v0.c0)))) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY HEX(DISTINCT (((rt0.c0))<=((rt0.c0)))) DESC);
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c3))>=((v0.c0)))) ISNULL)) ORDER BY HEX(DISTINCT (((rt0.c0))<=((rt0.c0)))) DESC;
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0) NOT NULL) ELSE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0) NOT NULL) ELSE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0) NOT NULL) ELSE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0) NOT NULL) ELSE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0) NOT NULL) ELSE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((v0.c0 IN ())))) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((v0.c0 IN ())))) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((v0.c0 IN ())))) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS NUMERIC)));
SELECT * FROM rt0, v0 WHERE (((rt0.c0)IS NOT(NULL COLLATE NOCASE))) ORDER BY ((((((v0.c0)OR(rt0.c1)))OR(x'')))!=(((((v0.c0)AND(rt0.c3)))OR(rt0.c2))))  NULLS FIRST, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)IS NOT(NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((v0.c0)OR(rt0.c1)))OR(x'')))<>(((((v0.c0)AND(rt0.c3)))OR(rt0.c2))))  NULLS FIRST, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END COLLATE NOCASE);
SELECT * FROM rt0, v0 WHERE (((rt0.c0)IS NOT(NULL COLLATE NOCASE))) ORDER BY ((((((v0.c0)OR(rt0.c1)))OR(x'')))!=(((((v0.c0)AND(rt0.c3)))OR(rt0.c2))))  NULLS FIRST, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)IS NOT(NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((v0.c0)OR(rt0.c1)))OR(x'')))<>(((((v0.c0)AND(rt0.c3)))OR(rt0.c2))))  NULLS FIRST, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END COLLATE NOCASE);
SELECT * FROM rt0, v0 WHERE (((rt0.c0)IS NOT(NULL COLLATE NOCASE))) ORDER BY ((((((v0.c0)OR(rt0.c1)))OR(x'')))!=(((((v0.c0)AND(rt0.c3)))OR(rt0.c2))))  NULLS FIRST, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END COLLATE NOCASE;
SELECT * FROM rt0 WHERE (((((((rt0.c2)=(rt0.c2)))AND(HEX(rt0.c2))))AND(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)=(rt0.c2)))AND(HEX(rt0.c2))))AND(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c2)=(rt0.c2)))AND(HEX(rt0.c2))))AND(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)=(rt0.c2)))AND(HEX(rt0.c2))))AND(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c2)=(rt0.c2)))AND(HEX(rt0.c2))))AND(rt0.c2 COLLATE BINARY)));
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0)+(rt0.c2)) IN ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)+(rt0.c2)) IN ((NOT (rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0)+(rt0.c2)) IN ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)+(rt0.c2)) IN ((NOT (rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0)+(rt0.c2)) IN ((NOT (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c3) ORDER BY ((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)))IS(CAST(rt0.c1 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)))IS(CAST(rt0.c1 AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c3) ORDER BY ((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)))IS(CAST(rt0.c1 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)))IS(CAST(rt0.c1 AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c3) ORDER BY ((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)))IS(CAST(rt0.c1 AS REAL)))  NULLS FIRST;
SELECT * FROM v0 WHERE (((v0.c0) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) IS FALSE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))LIKE((((rt0.c2, rt0.c1, rt0.c3))<((rt0.c3, rt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))LIKE((((rt0.c2, rt0.c1, rt0.c3))<((rt0.c3, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))LIKE((((rt0.c2, rt0.c1, rt0.c3))<((rt0.c3, rt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))LIKE((((rt0.c2, rt0.c1, rt0.c3))<((rt0.c3, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))LIKE((((rt0.c2, rt0.c1, rt0.c3))<((rt0.c3, rt0.c0, rt0.c1))))));
SELECT * FROM rt0, v0 WHERE ((((((((((~ (rt0.c2)))OR(CAST(v0.c0 AS BLOB))))OR(((v0.c0)IS(rt0.c1)))))AND(-962668071)))OR((- (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (rt0.c2)))OR(CAST(v0.c0 AS BLOB))))OR(((v0.c0)IS(rt0.c1)))))AND(-962668071)))OR((- (NULL))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((((((~ (rt0.c2)))OR(CAST(v0.c0 AS BLOB))))OR(((v0.c0)IS(rt0.c1)))))AND(-962668071)))OR((- (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (rt0.c2)))OR(CAST(v0.c0 AS BLOB))))OR(((v0.c0)IS(rt0.c1)))))AND(-962668071)))OR((- (NULL))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((((((~ (rt0.c2)))OR(CAST(v0.c0 AS BLOB))))OR(((v0.c0)IS(rt0.c1)))))AND(-962668071)))OR((- (NULL)))));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) IS TRUE))AND((v0.c0 IN ()))))OR(CASE WHEN '-809369075' THEN v0.c0 ELSE v0.c0 END))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) IS TRUE))AND((v0.c0 IN ()))))OR(CASE WHEN '-809369075' THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) IS TRUE))AND((v0.c0 IN ()))))OR(CASE WHEN '-809369075' THEN v0.c0 ELSE v0.c0 END))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) IS TRUE))AND((v0.c0 IN ()))))OR(CASE WHEN '-809369075' THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) IS TRUE))AND((v0.c0 IN ()))))OR(CASE WHEN '-809369075' THEN v0.c0 ELSE v0.c0 END))) ORDER BY v0.c0  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((HEX(v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((HEX(v0.c0) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((HEX(v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((HEX(v0.c0) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((HEX(v0.c0) IN ()));
SELECT ALL * FROM rt0 WHERE (CASE WHEN '549165255' THEN ((rt0.c2) NOT NULL) ELSE ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '549165255' THEN ((rt0.c2) NOT NULL) ELSE ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN '549165255' THEN ((rt0.c2) NOT NULL) ELSE ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '549165255' THEN ((rt0.c2) NOT NULL) ELSE ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN '549165255' THEN ((rt0.c2) NOT NULL) ELSE ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)) END);
SELECT COUNT(*) FROM v0 WHERE (((((((((((((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('Cb')))OR(x'a513')))))AND((+ (v0.c0)))))AND(((v0.c0) ISNULL))))AND((v0.c0 IN (v0.c0, v0.c0)))))AND(v0.c0 COLLATE BINARY)))OR(((v0.c0) ISNULL))))AND(((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('Cb')))OR(x'a513')))))AND((+ (v0.c0)))))AND(((v0.c0) ISNULL))))AND((v0.c0 IN (v0.c0, v0.c0)))))AND(v0.c0 COLLATE BINARY)))OR(((v0.c0) ISNULL))))AND(((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((((((((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('Cb')))OR(x'a513')))))AND((+ (v0.c0)))))AND(((v0.c0) ISNULL))))AND((v0.c0 IN (v0.c0, v0.c0)))))AND(v0.c0 COLLATE BINARY)))OR(((v0.c0) ISNULL))))AND(((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('Cb')))OR(x'a513')))))AND((+ (v0.c0)))))AND(((v0.c0) ISNULL))))AND((v0.c0 IN (v0.c0, v0.c0)))))AND(v0.c0 COLLATE BINARY)))OR(((v0.c0) ISNULL))))AND(((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((((((((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('Cb')))OR(x'a513')))))AND((+ (v0.c0)))))AND(((v0.c0) ISNULL))))AND((v0.c0 IN (v0.c0, v0.c0)))))AND(v0.c0 COLLATE BINARY)))OR(((v0.c0) ISNULL))))AND(((v0.c0)AND(v0.c0)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1 IN ())) IS TRUE) WHERE ((('-682513005')IS NOT((rt0.c0 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((('-682513005')IS NOT((rt0.c0 IN (rt0.c3))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1 IN ())) IS TRUE));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1 IN ())) IS TRUE) WHERE ((('-682513005')IS NOT((rt0.c0 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((('-682513005')IS NOT((rt0.c0 IN (rt0.c3))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1 IN ())) IS TRUE));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1 IN ())) IS TRUE) WHERE ((('-682513005')IS NOT((rt0.c0 IN (rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)/((- ('1877345096')))) WHERE (((rt0.c3)<>(((rt0.c2)<=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)!=(((rt0.c2)<=(rt0.c3))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)/((- ('1877345096')))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)/((- ('1877345096')))) WHERE (((rt0.c3)<>(((rt0.c2)<=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)!=(((rt0.c2)<=(rt0.c3))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)/((- ('1877345096')))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)/((- ('1877345096')))) WHERE (((rt0.c3)<>(((rt0.c2)<=(rt0.c3)))));
SELECT ALL * FROM v0 WHERE ((((((v0.c0) IS FALSE)))=((LIKELIHOOD('-1303446539', 0.15812435598936347)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) IS FALSE)))==((LIKELIHOOD('-1303446539', 0.15812435598936347))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0) IS FALSE)))=((LIKELIHOOD('-1303446539', 0.15812435598936347)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) IS FALSE)))==((LIKELIHOOD('-1303446539', 0.15812435598936347))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0) IS FALSE)))=((LIKELIHOOD('-1303446539', 0.15812435598936347)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST((rt0.c3 IN ()) AS REAL)) ORDER BY SQLITE_VERSION() ASC  NULLS LAST, ((((rt0.c1) NOT NULL))||(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c3 IN ()) AS REAL)) IS TRUE)  as count FROM rt0, v0 ORDER BY SQLITE_VERSION() ASC  NULLS LAST, ((((rt0.c1) NOT NULL))||(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST((rt0.c3 IN ()) AS REAL)) ORDER BY SQLITE_VERSION() ASC  NULLS LAST, ((((rt0.c1) NOT NULL))||(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c3 IN ()) AS REAL)) IS TRUE)  as count FROM rt0, v0 ORDER BY SQLITE_VERSION() ASC  NULLS LAST, ((((rt0.c1) NOT NULL))||(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST((rt0.c3 IN ()) AS REAL)) ORDER BY SQLITE_VERSION() ASC  NULLS LAST, ((((rt0.c1) NOT NULL))||(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON LIKELIHOOD(((rt0.c1) IS TRUE), 0.36190407447717365) WHERE (((CAST(rt0.c0 AS REAL))<=(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))))) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c1) IS TRUE) WHEN TRIM(DISTINCT rt0.c2, rt0.c1) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((rt0.c0) IS TRUE) THEN ((((rt0.c1)AND(v0.c0)))OR(rt0.c0)) WHEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END THEN (((v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c1, rt0.c0, v0.c0)) AND ((v0.c0, -605850033, NULL))) WHEN '~yKN' COLLATE RTRIM THEN ((rt0.c2) IS TRUE) ELSE 0xffffffffc41df457 END ASC  NULLS FIRST, (((((((('')OR(((v0.c0)&(rt0.c0)))))OR((rt0.c2 IN ()))))AND(((0.6984262714352649)<<(rt0.c1)))))OR(CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)), ((rt0.c3) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL))<=(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON LIKELIHOOD(((rt0.c1) IS TRUE), 0.36190407447717365) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c1) IS TRUE) WHEN TRIM(DISTINCT rt0.c2, rt0.c1) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((rt0.c0) IS TRUE) THEN ((((rt0.c1)AND(v0.c0)))OR(rt0.c0)) WHEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END THEN (((v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c1, rt0.c0, v0.c0)) AND ((v0.c0, -605850033, NULL))) WHEN '~yKN' COLLATE RTRIM THEN ((rt0.c2) IS TRUE) ELSE 0Xffffffffc41df457 END ASC  NULLS FIRST, (((((((('')OR(((v0.c0)&(rt0.c0)))))OR((rt0.c2 IN ()))))AND(((0.6984262714352649)<<(rt0.c1)))))OR(CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)), ((rt0.c3) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON LIKELIHOOD(((rt0.c1) IS TRUE), 0.36190407447717365) WHERE (((CAST(rt0.c0 AS REAL))<=(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))))) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c1) IS TRUE) WHEN TRIM(DISTINCT rt0.c2, rt0.c1) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((rt0.c0) IS TRUE) THEN ((((rt0.c1)AND(v0.c0)))OR(rt0.c0)) WHEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END THEN (((v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c1, rt0.c0, v0.c0)) AND ((v0.c0, -605850033, NULL))) WHEN '~yKN' COLLATE RTRIM THEN ((rt0.c2) IS TRUE) ELSE 0xffffffffc41df457 END ASC  NULLS FIRST, (((((((('')OR(((v0.c0)&(rt0.c0)))))OR((rt0.c2 IN ()))))AND(((0.6984262714352649)<<(rt0.c1)))))OR(CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)), ((rt0.c3) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL))<=(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON LIKELIHOOD(((rt0.c1) IS TRUE), 0.36190407447717365) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c1) IS TRUE) WHEN TRIM(DISTINCT rt0.c2, rt0.c1) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((rt0.c0) IS TRUE) THEN ((((rt0.c1)AND(v0.c0)))OR(rt0.c0)) WHEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END THEN (((v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c1, rt0.c0, v0.c0)) AND ((v0.c0, -605850033, NULL))) WHEN '~yKN' COLLATE RTRIM THEN ((rt0.c2) IS TRUE) ELSE 0Xffffffffc41df457 END ASC  NULLS FIRST, (((((((('')OR(((v0.c0)&(rt0.c0)))))OR((rt0.c2 IN ()))))AND(((0.6984262714352649)<<(rt0.c1)))))OR(CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)), ((rt0.c3) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON LIKELIHOOD(((rt0.c1) IS TRUE), 0.36190407447717365) WHERE (((CAST(rt0.c0 AS REAL))<=(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))))) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c1) IS TRUE) WHEN TRIM(DISTINCT rt0.c2, rt0.c1) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((rt0.c0) IS TRUE) THEN ((((rt0.c1)AND(v0.c0)))OR(rt0.c0)) WHEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END THEN (((v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c1, rt0.c0, v0.c0)) AND ((v0.c0, -605850033, NULL))) WHEN '~yKN' COLLATE RTRIM THEN ((rt0.c2) IS TRUE) ELSE 0xffffffffc41df457 END ASC  NULLS FIRST, (((((((('')OR(((v0.c0)&(rt0.c0)))))OR((rt0.c2 IN ()))))AND(((0.6984262714352649)<<(rt0.c1)))))OR(CASE v0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)), ((rt0.c3) IS FALSE) DESC;
SELECT * FROM rt0, v0 WHERE ((- (((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((- (((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((- (((v0.c0) NOTNULL))));
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0))))==(((((rt0.c3))==((rt0.c3)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0))))==(((((rt0.c3))==((rt0.c3))))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0))))==(((((rt0.c3))==((rt0.c3)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0))))==(((((rt0.c3))==((rt0.c3))))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0))))==(((((rt0.c3))==((rt0.c3)))))));
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (((((CHANGES())AND(TYPEOF(rt0.c1))))OR((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CHANGES())AND(TYPEOF(rt0.c1))))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (((((CHANGES())AND(TYPEOF(rt0.c1))))OR((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CHANGES())AND(TYPEOF(rt0.c1))))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (((((CHANGES())AND(TYPEOF(rt0.c1))))OR((v0.c0 IN ()))));
SELECT * FROM rt0 WHERE (((STRFTIME(rt0.c0, 0.8843024458153897, rt0.c0, rt0.c1, rt0.c3, rt0.c3, rt0.c2))>=(((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((STRFTIME(rt0.c0, 0.8843024458153897, rt0.c0, rt0.c1, rt0.c3, rt0.c3, rt0.c2))>=(((((rt0.c0)OR(rt0.c0)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((STRFTIME(rt0.c0, 0.8843024458153897, rt0.c0, rt0.c1, rt0.c3, rt0.c3, rt0.c2))>=(((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((STRFTIME(rt0.c0, 0.8843024458153897, rt0.c0, rt0.c1, rt0.c3, rt0.c3, rt0.c2))>=(((((rt0.c0)OR(rt0.c0)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((STRFTIME(rt0.c0, 0.8843024458153897, rt0.c0, rt0.c1, rt0.c3, rt0.c3, rt0.c2))>=(((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ()))>>(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))>>(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ()))>>(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))>>(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ()))>>(CAST(rt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((-1149715704 COLLATE NOCASE) BETWEEN (((rt0.c1) IS TRUE)) AND ('-682513005'))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)-(rt0.c3 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-1149715704 COLLATE NOCASE) BETWEEN (((rt0.c1) IS TRUE)) AND ('-682513005'))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)-(rt0.c3 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((-1149715704 COLLATE NOCASE) BETWEEN (((rt0.c1) IS TRUE)) AND ('-682513005'))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)-(rt0.c3 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-1149715704 COLLATE NOCASE) BETWEEN (((rt0.c1) IS TRUE)) AND ('-682513005'))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)-(rt0.c3 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((-1149715704 COLLATE NOCASE) BETWEEN (((rt0.c1) IS TRUE)) AND ('-682513005'))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)-(rt0.c3 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (CAST(CAST(NULL AS REAL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(NULL AS REAL) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(CAST(NULL AS REAL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(NULL AS REAL) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(CAST(NULL AS REAL) AS BLOB));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN '' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)GLOB(((v0.c0)+(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)GLOB(((v0.c0)+(rt0.c3))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN '' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)GLOB(((v0.c0)+(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)GLOB(((v0.c0)+(rt0.c3))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN '' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)GLOB(((v0.c0)+(rt0.c3)))));
SELECT * FROM v0, rt0 NOT INDEXED WHERE (CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE NOCASE) ORDER BY CAST(((((v0.c0)OR(v0.c0)))OR(rt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((((v0.c0)OR(v0.c0)))OR(rt0.c0)) AS REAL));
SELECT * FROM v0, rt0 NOT INDEXED WHERE (CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE NOCASE) ORDER BY CAST(((((v0.c0)OR(v0.c0)))OR(rt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((((v0.c0)OR(v0.c0)))OR(rt0.c0)) AS REAL));
SELECT * FROM v0, rt0 NOT INDEXED WHERE (CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE NOCASE) ORDER BY CAST(((((v0.c0)OR(v0.c0)))OR(rt0.c0)) AS REAL);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON x'4dc6' COLLATE NOCASE WHERE ((((rt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON x'4dc6' COLLATE NOCASE);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON x'4dc6' COLLATE NOCASE WHERE ((((rt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON x'4dc6' COLLATE NOCASE);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON x'4dc6' COLLATE NOCASE WHERE ((((rt0.c0) NOTNULL) IN ()));
SELECT COUNT(*) FROM v0 WHERE ((((- ('-229416526'))) IS FALSE)) ORDER BY ((v0.c0)!=(v0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- ('-229416526'))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)!=(v0.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM v0 WHERE ((((- ('-229416526'))) IS FALSE)) ORDER BY ((v0.c0)!=(v0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- ('-229416526'))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)!=(v0.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM v0 WHERE ((((- ('-229416526'))) IS FALSE)) ORDER BY ((v0.c0)!=(v0.c0 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM v0 WHERE ((~ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT * FROM rt0 WHERE (((rt0.c1 IN ()) IN (((rt0.c0)IS NOT(rt0.c0)), ((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN (((rt0.c0)IS NOT(rt0.c0)), ((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1 IN ()) IN (((rt0.c0)IS NOT(rt0.c0)), ((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN (((rt0.c0)IS NOT(rt0.c0)), ((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1 IN ()) IN (((rt0.c0)IS NOT(rt0.c0)), ((rt0.c1) IS FALSE))));
SELECT ALL * FROM v0, rt0 WHERE ((((x'1fb1' IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((x'1fb1' IN ())) NOTNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((x'1fb1' IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((x'1fb1' IN ())) NOTNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((x'1fb1' IN ())) NOTNULL));
SELECT ALL * FROM v0 WHERE (((((((v0.c0)-(v0.c0)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)-(v0.c0)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)-(v0.c0)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)-(v0.c0)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)-(v0.c0)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(CAST(v0.c0 AS TEXT))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((NULL)IS(rt0.c0)) WHERE (CASE ((rt0.c1)OR(rt0.c1))  WHEN ((rt0.c0) IS TRUE) THEN (v0.c0 IN ()) END) ORDER BY ((LIKELIHOOD(rt0.c3, 0.5632729794392606)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)OR(rt0.c1))  WHEN ((rt0.c0) IS TRUE) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((NULL)IS(rt0.c0)) ORDER BY ((LIKELIHOOD(rt0.c3, 0.5632729794392606)) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((NULL)IS(rt0.c0)) WHERE (CASE ((rt0.c1)OR(rt0.c1))  WHEN ((rt0.c0) IS TRUE) THEN (v0.c0 IN ()) END) ORDER BY ((LIKELIHOOD(rt0.c3, 0.5632729794392606)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)OR(rt0.c1))  WHEN ((rt0.c0) IS TRUE) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((NULL)IS(rt0.c0)) ORDER BY ((LIKELIHOOD(rt0.c3, 0.5632729794392606)) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((NULL)IS(rt0.c0)) WHERE (CASE ((rt0.c1)OR(rt0.c1))  WHEN ((rt0.c0) IS TRUE) THEN (v0.c0 IN ()) END) ORDER BY ((LIKELIHOOD(rt0.c3, 0.5632729794392606)) IS TRUE) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT * FROM v0 WHERE (((((v0.c0)LIKE(v0.c0)))IS(((v0.c0) NOT NULL)))) ORDER BY TRIM((v0.c0 IN (v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)LIKE(v0.c0)))IS(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY TRIM((v0.c0 IN (v0.c0))) DESC);
SELECT * FROM v0 WHERE (((((v0.c0)LIKE(v0.c0)))IS(((v0.c0) NOT NULL)))) ORDER BY TRIM((v0.c0 IN (v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)LIKE(v0.c0)))IS(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY TRIM((v0.c0 IN (v0.c0))) DESC);
SELECT * FROM v0 WHERE (((((v0.c0)LIKE(v0.c0)))IS(((v0.c0) NOT NULL)))) ORDER BY TRIM((v0.c0 IN (v0.c0))) DESC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE (HEX(DISTINCT ((rt0.c2)||(rt0.c0)))) ORDER BY NULL, ((CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END) NOT BETWEEN (TOTAL_CHANGES()) AND (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((rt0.c2)||(rt0.c0)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 ORDER BY NULL, ((CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END) NOT BETWEEN (TOTAL_CHANGES()) AND (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE (HEX(DISTINCT ((rt0.c2)||(rt0.c0)))) ORDER BY NULL, ((CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END) NOT BETWEEN (TOTAL_CHANGES()) AND (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((rt0.c2)||(rt0.c0)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 ORDER BY NULL, ((CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END) NOT BETWEEN (TOTAL_CHANGES()) AND (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE (HEX(DISTINCT ((rt0.c2)||(rt0.c0)))) ORDER BY NULL, ((CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END) NOT BETWEEN (TOTAL_CHANGES()) AND (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((((rt0.c1)OR(-682513005)))OR(v0.c0)) IN ()) WHERE (((rt0.c3 COLLATE NOCASE)||((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE)||((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((rt0.c1)OR(-682513005)))OR(v0.c0)) IN ()));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((((rt0.c1)OR(-682513005)))OR(v0.c0)) IN ()) WHERE (((rt0.c3 COLLATE NOCASE)||((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE)||((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((rt0.c1)OR(-682513005)))OR(v0.c0)) IN ()));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((((rt0.c1)OR(-682513005)))OR(v0.c0)) IN ()) WHERE (((rt0.c3 COLLATE NOCASE)||((rt0.c3 IN ()))));
SELECT * FROM v0 WHERE (((NULL)/(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL)/(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((NULL)/(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL)/(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((NULL)/(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(x'', ((v0.c0)-(v0.c0)))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(x'', ((v0.c0)-(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(x'', ((v0.c0)-(v0.c0)))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(x'', ((v0.c0)-(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(x'', ((v0.c0)-(v0.c0)))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (((((((((v0.c0)AND(rt0.c1)))OR(v0.c0)))AND(CASE v0.c0  WHEN rt0.c3 THEN rt0.c2 END)))OR(MIN(rt0.c1, rt0.c2, rt0.c2, rt0.c2)))) ORDER BY x'' ASC  NULLS LAST, (~ (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)AND(rt0.c1)))OR(v0.c0)))AND(CASE v0.c0  WHEN rt0.c3 THEN rt0.c2 END)))OR(MIN(rt0.c1, rt0.c2, rt0.c2, rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY x'' ASC  NULLS LAST, (~ (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((((((v0.c0)AND(rt0.c1)))OR(v0.c0)))AND(CASE v0.c0  WHEN rt0.c3 THEN rt0.c2 END)))OR(MIN(rt0.c1, rt0.c2, rt0.c2, rt0.c2)))) ORDER BY x'' ASC  NULLS LAST, (~ (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)AND(rt0.c1)))OR(v0.c0)))AND(CASE v0.c0  WHEN rt0.c3 THEN rt0.c2 END)))OR(MIN(rt0.c1, rt0.c2, rt0.c2, rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY x'' ASC  NULLS LAST, (~ (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((((((v0.c0)AND(rt0.c1)))OR(v0.c0)))AND(CASE v0.c0  WHEN rt0.c3 THEN rt0.c2 END)))OR(MIN(rt0.c1, rt0.c2, rt0.c2, rt0.c2)))) ORDER BY x'' ASC  NULLS LAST, (~ (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE ((rt0.c3 IN ())) ORDER BY ((rt0.c1) NOTNULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c1) NOTNULL) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((rt0.c3 IN ())) ORDER BY ((rt0.c1) NOTNULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c1) NOTNULL) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((rt0.c3 IN ())) ORDER BY ((rt0.c1) NOTNULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (((NULL) BETWEEN (NULL) AND (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (NULL) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((NULL) BETWEEN (NULL) AND (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (NULL) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((NULL) BETWEEN (NULL) AND (((rt0.c2) IS FALSE))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))<=(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))<=(rt0.c3))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))<=(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))<=(rt0.c3))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))<=(rt0.c3)));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(CAST(v0.c0 AS INTEGER))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY ((((v0.c0)>(v0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(CAST(v0.c0 AS INTEGER))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0))) IS FALSE));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(CAST(v0.c0 AS INTEGER))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY ((((v0.c0)>(v0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(CAST(v0.c0 AS INTEGER))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0))) IS FALSE));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(CAST(v0.c0 AS INTEGER))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY ((((v0.c0)>(v0.c0))) IS FALSE);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN ())) BETWEEN (((rt0.c1)LIKE(rt0.c2))) AND ((- (NULL)))) WHERE (((HEX(rt0.c3)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((HEX(rt0.c3)) IS FALSE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN ())) BETWEEN (((rt0.c1)LIKE(rt0.c2))) AND ((- (NULL)))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN ())) BETWEEN (((rt0.c1)LIKE(rt0.c2))) AND ((- (NULL)))) WHERE (((HEX(rt0.c3)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((HEX(rt0.c3)) IS FALSE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN ())) BETWEEN (((rt0.c1)LIKE(rt0.c2))) AND ((- (NULL)))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN ())) BETWEEN (((rt0.c1)LIKE(rt0.c2))) AND ((- (NULL)))) WHERE (((HEX(rt0.c3)) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS TEXT)) ORDER BY ((((rt0.c2) IS FALSE))>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT NULL) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS FALSE))>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS TEXT)) ORDER BY ((((rt0.c2) IS FALSE))>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT NULL) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS FALSE))>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS TEXT)) ORDER BY ((((rt0.c2) IS FALSE))>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c3)) BETWEEN ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))) AND ((((v0.c0)<(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))) AND ((((v0.c0)<(rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c3)) BETWEEN ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))) AND ((((v0.c0)<(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))) AND ((((v0.c0)<(rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c3)) BETWEEN ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))) AND ((((v0.c0)<(rt0.c2))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((((rt0.c3)OR(v0.c0)))AND(rt0.c3)) AS BLOB)) ORDER BY ((((rt0.c2) NOTNULL))/(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)))), '-1158683207'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c3)OR(v0.c0)))AND(rt0.c3)) AS BLOB)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2) NOTNULL))/(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)))), '-1158683207'  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((((rt0.c3)OR(v0.c0)))AND(rt0.c3)) AS BLOB)) ORDER BY ((((rt0.c2) NOTNULL))/(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)))), '-1158683207'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c3)OR(v0.c0)))AND(rt0.c3)) AS BLOB)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2) NOTNULL))/(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)))), '-1158683207'  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((((rt0.c3)OR(v0.c0)))AND(rt0.c3)) AS BLOB)) ORDER BY ((((rt0.c2) NOTNULL))/(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)))), '-1158683207'  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE ((v0.c0) NOTNULL)  WHEN ((rt0.c3) IS FALSE) THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOTNULL)  WHEN ((rt0.c3) IS FALSE) THEN rt0.c0 END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE ((v0.c0) NOTNULL)  WHEN ((rt0.c3) IS FALSE) THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOTNULL)  WHEN ((rt0.c3) IS FALSE) THEN rt0.c0 END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE ((v0.c0) NOTNULL)  WHEN ((rt0.c3) IS FALSE) THEN rt0.c0 END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c3 IN ()))>(((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ()))>(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c3 IN ()))>(((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ()))>(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c3 IN ()))>(((rt0.c1) ISNULL))));
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS REAL));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (UNLIKELY(DISTINCT x'44e4'));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT x'44e4')) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (UNLIKELY(DISTINCT x'44e4'));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT x'44e4')) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (UNLIKELY(DISTINCT x'44e4'));
SELECT ALL * FROM v0, rt0 WHERE (LOWER(DISTINCT rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt0.c0)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (LOWER(DISTINCT rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt0.c0)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (LOWER(DISTINCT rt0.c0));
SELECT ALL COUNT(*) FROM v0 WHERE (TRIM((- (v0.c0)))) ORDER BY (((((v0.c0) IS FALSE), (v0.c0 IN ('1735824428')), ((v0.c0) IS FALSE)))>=((((v0.c0) IS FALSE), (- (v0.c0)), v0.c0))), ((CASE 0.6892859546661206  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)||(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)), NULLIF(DISTINCT 0X3438c7a8, CASE WHEN 1.552567111E9 THEN v0.c0 ELSE v0.c0 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((- (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0) IS FALSE), (v0.c0 IN ('1735824428')), ((v0.c0) IS FALSE)))>=((((v0.c0) IS FALSE), (- (v0.c0)), v0.c0))), ((CASE 0.6892859546661206  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)||(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)), NULLIF(DISTINCT 0x3438c7a8, CASE WHEN 1.552567111E9 THEN v0.c0 ELSE v0.c0 END) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (TRIM((- (v0.c0)))) ORDER BY (((((v0.c0) IS FALSE), (v0.c0 IN ('1735824428')), ((v0.c0) IS FALSE)))>=((((v0.c0) IS FALSE), (- (v0.c0)), v0.c0))), ((CASE 0.6892859546661206  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)||(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)), NULLIF(DISTINCT 0X3438c7a8, CASE WHEN 1.552567111E9 THEN v0.c0 ELSE v0.c0 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((- (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0) IS FALSE), (v0.c0 IN ('1735824428')), ((v0.c0) IS FALSE)))>=((((v0.c0) IS FALSE), (- (v0.c0)), v0.c0))), ((CASE 0.6892859546661206  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)||(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)), NULLIF(DISTINCT 0x3438c7a8, CASE WHEN 1.552567111E9 THEN v0.c0 ELSE v0.c0 END) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (TRIM((- (v0.c0)))) ORDER BY (((((v0.c0) IS FALSE), (v0.c0 IN ('1735824428')), ((v0.c0) IS FALSE)))>=((((v0.c0) IS FALSE), (- (v0.c0)), v0.c0))), ((CASE 0.6892859546661206  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)||(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)), NULLIF(DISTINCT 0X3438c7a8, CASE WHEN 1.552567111E9 THEN v0.c0 ELSE v0.c0 END) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c1)<<(x''))))>=((((rt0.c0)>=(rt0.c3)))))) ORDER BY (- (MAX(rt0.c0, rt0.c3, rt0.c0, rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)<<(x''))))>=((((rt0.c0)>=(rt0.c3)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (MAX(rt0.c0, rt0.c3, rt0.c0, rt0.c2)))  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c1)<<(x''))))>=((((rt0.c0)>=(rt0.c3)))))) ORDER BY (- (MAX(rt0.c0, rt0.c3, rt0.c0, rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)<<(x''))))>=((((rt0.c0)>=(rt0.c3)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (MAX(rt0.c0, rt0.c3, rt0.c0, rt0.c2)))  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c1)<<(x''))))>=((((rt0.c0)>=(rt0.c3)))))) ORDER BY (- (MAX(rt0.c0, rt0.c3, rt0.c0, rt0.c2)))  NULLS LAST;
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((v0.c0 IN ()) IN (x''))) ORDER BY CAST(CAST(v0.c0 AS TEXT) AS BLOB) DESC, TYPEOF(rt0.c1) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN (x''))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY CAST(CAST(v0.c0 AS TEXT) AS BLOB) DESC, TYPEOF(rt0.c1) COLLATE NOCASE);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((v0.c0 IN ()) IN (x''))) ORDER BY CAST(CAST(v0.c0 AS TEXT) AS BLOB) DESC, TYPEOF(rt0.c1) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN (x''))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY CAST(CAST(v0.c0 AS TEXT) AS BLOB) DESC, TYPEOF(rt0.c1) COLLATE NOCASE);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((v0.c0 IN ()) IN (x''))) ORDER BY CAST(CAST(v0.c0 AS TEXT) AS BLOB) DESC, TYPEOF(rt0.c1) COLLATE NOCASE;
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0)>>(rt0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (rt0.c0))) ORDER BY (((((((rt0.c0))=((rt0.c1))))AND(rt0.c1 COLLATE RTRIM)))OR(((v0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>>(rt0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (rt0.c0))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((rt0.c0))==((rt0.c1))))AND(rt0.c1 COLLATE RTRIM)))OR(((v0.c0) NOT NULL))) ASC);
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0)>>(rt0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (rt0.c0))) ORDER BY (((((((rt0.c0))=((rt0.c1))))AND(rt0.c1 COLLATE RTRIM)))OR(((v0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>>(rt0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (rt0.c0))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((rt0.c0))==((rt0.c1))))AND(rt0.c1 COLLATE RTRIM)))OR(((v0.c0) NOT NULL))) ASC);
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0)>>(rt0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (rt0.c0))) ORDER BY (((((((rt0.c0))=((rt0.c1))))AND(rt0.c1 COLLATE RTRIM)))OR(((v0.c0) NOT NULL))) ASC;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) ISNULL) WHERE (CAST(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) AS BLOB)) ORDER BY UNLIKELY(CAST(rt0.c2 AS INTEGER)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) ISNULL) ORDER BY UNLIKELY(CAST(rt0.c2 AS INTEGER)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) ISNULL) WHERE (CAST(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) AS BLOB)) ORDER BY UNLIKELY(CAST(rt0.c2 AS INTEGER)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) ISNULL) ORDER BY UNLIKELY(CAST(rt0.c2 AS INTEGER)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) ISNULL) WHERE (CAST(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) AS BLOB)) ORDER BY UNLIKELY(CAST(rt0.c2 AS INTEGER)) DESC  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE ((CAST(rt0.c3 AS INTEGER) IN ())) ORDER BY ((v0.c0 COLLATE RTRIM)<=(ABS(rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c3 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c0 COLLATE RTRIM)<=(ABS(rt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE ((CAST(rt0.c3 AS INTEGER) IN ())) ORDER BY ((v0.c0 COLLATE RTRIM)<=(ABS(rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c3 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c0 COLLATE RTRIM)<=(ABS(rt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE ((CAST(rt0.c3 AS INTEGER) IN ())) ORDER BY ((v0.c0 COLLATE RTRIM)<=(ABS(rt0.c0))) DESC  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (CAST(v0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(v0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(v0.c0 AS TEXT));
SELECT ALL * FROM rt0 WHERE ((((COALESCE(rt0.c1, '3X', rt0.c3, '1535221186')))>((((rt0.c1)IS NOT(''))))));
SELECT SUM(count) FROM (SELECT (((((COALESCE(rt0.c1, '3X', rt0.c3, '1535221186')))>((((rt0.c1)IS NOT('')))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((COALESCE(rt0.c1, '3X', rt0.c3, '1535221186')))>((((rt0.c1)IS NOT(''))))));
SELECT SUM(count) FROM (SELECT (((((COALESCE(rt0.c1, '3X', rt0.c3, '1535221186')))>((((rt0.c1)IS NOT('')))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((COALESCE(rt0.c1, '3X', rt0.c3, '1535221186')))>((((rt0.c1)IS NOT(''))))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON CAST(rt0.c1 AS INTEGER) WHERE (((rt0.c0) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CAST(rt0.c1 AS INTEGER));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON CAST(rt0.c1 AS INTEGER) WHERE (((rt0.c0) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CAST(rt0.c1 AS INTEGER));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON CAST(rt0.c1 AS INTEGER) WHERE (((rt0.c0) NOT NULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN rt0.c3 WHEN rt0.c0 THEN x'' ELSE NULL END AS TEXT) WHERE (rt0.c1) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN rt0.c3 WHEN rt0.c0 THEN x'' ELSE NULL END AS TEXT) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END AS REAL) DESC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN rt0.c3 WHEN rt0.c0 THEN x'' ELSE NULL END AS TEXT) WHERE (rt0.c1) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN rt0.c3 WHEN rt0.c0 THEN x'' ELSE NULL END AS TEXT) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END AS REAL) DESC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN rt0.c3 WHEN rt0.c0 THEN x'' ELSE NULL END AS TEXT) WHERE (rt0.c1) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END AS REAL) DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((((((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))OR(((v0.c0) NOTNULL))))OR(CAST('' AS REAL))))OR(((rt0.c3)<>(rt0.c3)))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))OR(((v0.c0) NOTNULL))))OR(CAST('' AS REAL))))OR(((rt0.c3)!=(rt0.c3)))))AND(NULL))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((((((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))OR(((v0.c0) NOTNULL))))OR(CAST('' AS REAL))))OR(((rt0.c3)<>(rt0.c3)))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))OR(((v0.c0) NOTNULL))))OR(CAST('' AS REAL))))OR(((rt0.c3)!=(rt0.c3)))))AND(NULL))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((((((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))OR(((v0.c0) NOTNULL))))OR(CAST('' AS REAL))))OR(((rt0.c3)<>(rt0.c3)))))AND(NULL)));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END)>((((1656451058))<((rt0.c2))))) WHERE (((v0.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END)>((((1656451058))<((rt0.c2))))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END)>((((1656451058))<((rt0.c2))))) WHERE (((v0.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END)>((((1656451058))<((rt0.c2))))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END)>((((1656451058))<((rt0.c2))))) WHERE (((v0.c0 COLLATE NOCASE) ISNULL));
SELECT * FROM v0 WHERE (((+ (v0.c0)) IN ((((v0.c0))<((v0.c0)))))) ORDER BY (((v0.c0 IN (v0.c0))) BETWEEN (((v0.c0)||(v0.c0))) AND (((v0.c0)/(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (v0.c0)) IN ((((v0.c0))<((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0))) BETWEEN (((v0.c0)||(v0.c0))) AND (((v0.c0)/(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((+ (v0.c0)) IN ((((v0.c0))<((v0.c0)))))) ORDER BY (((v0.c0 IN (v0.c0))) BETWEEN (((v0.c0)||(v0.c0))) AND (((v0.c0)/(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (v0.c0)) IN ((((v0.c0))<((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0))) BETWEEN (((v0.c0)||(v0.c0))) AND (((v0.c0)/(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((+ (v0.c0)) IN ((((v0.c0))<((v0.c0)))))) ORDER BY (((v0.c0 IN (v0.c0))) BETWEEN (((v0.c0)||(v0.c0))) AND (((v0.c0)/(v0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((((((COALESCE(DISTINCT v0.c0, v0.c0))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0x339fe5a8 ELSE v0.c0 END)))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR(((((((((v0.c0)OR(v0.c0)))AND(NULL)))OR(NULL)))OR(v0.c0)))))AND(LIKELIHOOD(DISTINCT v0.c0, 0.4720538338744589)))) ORDER BY UPPER(((((v0.c0)OR(x'23b2')))OR(v0.c0)))  NULLS FIRST, ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((((((COALESCE(DISTINCT v0.c0, v0.c0))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0X339fe5a8 ELSE v0.c0 END)))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR(((((((((v0.c0)OR(v0.c0)))AND(NULL)))OR(NULL)))OR(v0.c0)))))AND(LIKELIHOOD(DISTINCT v0.c0, 0.4720538338744589)))) IS TRUE)  as count FROM v0 ORDER BY UPPER(((((v0.c0)OR(x'23b2')))OR(v0.c0)))  NULLS FIRST, ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM v0 WHERE (((((((((COALESCE(DISTINCT v0.c0, v0.c0))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0x339fe5a8 ELSE v0.c0 END)))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR(((((((((v0.c0)OR(v0.c0)))AND(NULL)))OR(NULL)))OR(v0.c0)))))AND(LIKELIHOOD(DISTINCT v0.c0, 0.4720538338744589)))) ORDER BY UPPER(((((v0.c0)OR(x'23b2')))OR(v0.c0)))  NULLS FIRST, ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((((((COALESCE(DISTINCT v0.c0, v0.c0))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0X339fe5a8 ELSE v0.c0 END)))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR(((((((((v0.c0)OR(v0.c0)))AND(NULL)))OR(NULL)))OR(v0.c0)))))AND(LIKELIHOOD(DISTINCT v0.c0, 0.4720538338744589)))) IS TRUE)  as count FROM v0 ORDER BY UPPER(((((v0.c0)OR(x'23b2')))OR(v0.c0)))  NULLS FIRST, ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM v0 WHERE (((((((((COALESCE(DISTINCT v0.c0, v0.c0))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0x339fe5a8 ELSE v0.c0 END)))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR(((((((((v0.c0)OR(v0.c0)))AND(NULL)))OR(NULL)))OR(v0.c0)))))AND(LIKELIHOOD(DISTINCT v0.c0, 0.4720538338744589)))) ORDER BY UPPER(((((v0.c0)OR(x'23b2')))OR(v0.c0)))  NULLS FIRST, ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE RTRIM DESC;
SELECT ALL * FROM v0 WHERE (((((3.81076329E8)>>(v0.c0)))<=((v0.c0 IN ())))) ORDER BY ((((v0.c0)<('mGj풟ix96Y'))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((3.81076329E8)>>(v0.c0)))<=((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<('mGj풟ix96Y'))) NOTNULL) ASC);
SELECT ALL * FROM v0 WHERE (((((3.81076329E8)>>(v0.c0)))<=((v0.c0 IN ())))) ORDER BY ((((v0.c0)<('mGj풟ix96Y'))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((3.81076329E8)>>(v0.c0)))<=((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<('mGj풟ix96Y'))) NOTNULL) ASC);
SELECT ALL * FROM v0 WHERE (((((3.81076329E8)>>(v0.c0)))<=((v0.c0 IN ())))) ORDER BY ((((v0.c0)<('mGj풟ix96Y'))) NOTNULL) ASC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)-(rt0.c3)))|(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)-(rt0.c3)))|(rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)-(rt0.c3)))|(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)-(rt0.c3)))|(rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)-(rt0.c3)))|(rt0.c3)));
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((rt0.c1)OR(rt0.c1))  WHEN ((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(v0.c0)))OR(v0.c0)) THEN rt0.c3 COLLATE NOCASE END) ORDER BY CASE CAST(v0.c0 AS TEXT)  WHEN (rt0.c2 IN (rt0.c3)) THEN ((rt0.c1)&(v0.c0)) ELSE TRIM(DISTINCT rt0.c3, rt0.c1) END, rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)OR(rt0.c1))  WHEN ((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(v0.c0)))OR(v0.c0)) THEN rt0.c3 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE CAST(v0.c0 AS TEXT)  WHEN (rt0.c2 IN (rt0.c3)) THEN ((rt0.c1)&(v0.c0)) ELSE TRIM(DISTINCT rt0.c3, rt0.c1) END, rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((rt0.c1)OR(rt0.c1))  WHEN ((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(v0.c0)))OR(v0.c0)) THEN rt0.c3 COLLATE NOCASE END) ORDER BY CASE CAST(v0.c0 AS TEXT)  WHEN (rt0.c2 IN (rt0.c3)) THEN ((rt0.c1)&(v0.c0)) ELSE TRIM(DISTINCT rt0.c3, rt0.c1) END, rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)OR(rt0.c1))  WHEN ((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(v0.c0)))OR(v0.c0)) THEN rt0.c3 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE CAST(v0.c0 AS TEXT)  WHEN (rt0.c2 IN (rt0.c3)) THEN ((rt0.c1)&(v0.c0)) ELSE TRIM(DISTINCT rt0.c3, rt0.c1) END, rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((rt0.c1)OR(rt0.c1))  WHEN ((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(v0.c0)))OR(v0.c0)) THEN rt0.c3 COLLATE NOCASE END) ORDER BY CASE CAST(v0.c0 AS TEXT)  WHEN (rt0.c2 IN (rt0.c3)) THEN ((rt0.c1)&(v0.c0)) ELSE TRIM(DISTINCT rt0.c3, rt0.c1) END, rt0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (((((((rt0.c3) NOTNULL))OR(CAST(0 AS BLOB))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOTNULL))OR(CAST(0 AS BLOB))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (((((((rt0.c3) NOTNULL))OR(CAST(0 AS BLOB))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOTNULL))OR(CAST(0 AS BLOB))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (((((((rt0.c3) NOTNULL))OR(CAST(0 AS BLOB))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT * FROM v0 WHERE ((+ ((v0.c0 IN ())))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((+ ((v0.c0 IN ())))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((+ ((v0.c0 IN ())))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
