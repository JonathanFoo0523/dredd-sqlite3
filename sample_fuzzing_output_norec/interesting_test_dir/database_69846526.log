-- Time: 2024/06/10 04:51:41
-- Database: database26
-- Database version: 3.40.0
-- seed value: 69846526
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1 UNINDEXED); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 1ms;
PRAGMA recursive_triggers = true; -- 0ms;
REINDEX; -- 4ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.7294234458697963); -- 1ms;
END; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1307329708); -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (NULL); -- 4ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (NULL), (''), (0.7294234458697963); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 15ms;
UPDATE OR IGNORE vt0 SET (c1, c1)=(0.7094345856468656, NULL); -- 1ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=('}P') WHERE PRINTF(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)), (vt0.c1 IN ()), CAST(vt0.c0 AS INTEGER)); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('()'); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA temp.threads; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (0.43579656819284196); -- 2ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-522165521,3');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1374404167); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(0.8615085300651733); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ANALYZE main; -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES ((- (CASE x'ff10'  WHEN '' THEN '>O' END))); -- 1ms;
ANALYZE; -- 1ms;
INSERT OR ABORT INTO vt1 VALUES (x''), (''), (-5.22165521E8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 435695153); -- 0ms;
VACUUM; -- 1ms;
COMMIT; -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.8591264037976702); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR ABORT INTO vt1 VALUES (0.9021781204672291), (''), (x''), ('4'), ('IL|\b'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.67013477653758); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA auto_vacuum = NONE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-522165521'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (NULL); -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
PRAGMA temp.reverse_unordered_selects = true; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c1, c0) VALUES (0.37177821805521716, x''), (x'', NULL), (0.1860975444051589, x''); -- 0ms;
PRAGMA main.stats; -- 0ms;
UPDATE OR FAIL vt0 SET c0=NULL; -- 1ms;
INSERT OR FAIL INTO vt1 VALUES (0.27010424083781026), (x''), ('535366366'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR ABORT INTO vt1 VALUES (0x5ca38928); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (x'', 0xffffffffe0e062ef), (x'', '2013613551'), ('Ll', '	˨弨HD'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x'324e'), (0.7294234458697963), (''); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES ((~ ((- (x'5361'))))); -- 0ms;
UPDATE OR REPLACE vt1 SET (c0, c0, c0)=(NULL, '-1109549727', 0.052126559730238387) WHERE (((+ (vt1.c0))) BETWEEN (((vt1.c0)+(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))); -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (NULL), (NULL), ('ak'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('156286093'), (NULL), ('{䂰H}KVyi6l'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -2137752740);\n; -- 0ms;
REINDEX  vt1; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA auto_vacuum = FULL; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.auto_vacuum = INCREMENTAL; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (x''), ('2013613551'), (343268215); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0x5b2c7205); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (NULL, '414243556'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
CREATE TEMP TABLE t0 (c0 REAL  CHECK ( (((((c0)) NOT BETWEEN ((c0)) AND ((c0))))<(CAST(c0 AS REAL))))); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0Xffffffff8aafec7a); -- 0ms;
PRAGMA journal_mode = MEMORY; -- 0ms;
UPDATE vt1 SET c0=NULL, c0=0.8194589933830745, c0=-2.13775274E9; -- 1ms;
CREATE VIRTUAL TABLE vt2 USING fts5(c0, prefix = 562, , columnsize=1); -- 1ms;
ALTER TABLE t0 ADD COLUMN c67 TEXT; -- 0ms;
INSERT OR IGNORE INTO t0(c67) VALUES (x''), (NULL), (0.6002426134543898); -- 0ms;
ALTER TABLE t0 ADD COLUMN c73 REAL; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (0x78054def); -- 0ms;
PRAGMA busy_timeout; -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('+ _'), ('-1968182150'), (1529639429); -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.stats; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1)!=(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)!=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1)!=(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)!=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1)!=(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c1) IS TRUE)) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((- (vt1.c0)))) WHERE ((vt0.c0 COLLATE BINARY IN (((vt0.c0) NOTNULL), vt1.c0))) ORDER BY CAST((+ (vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN (((vt0.c0) NOTNULL), vt1.c0))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c1) IS TRUE)) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((- (vt1.c0)))) ORDER BY CAST((+ (vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c1) IS TRUE)) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((- (vt1.c0)))) WHERE ((vt0.c0 COLLATE BINARY IN (((vt0.c0) NOTNULL), vt1.c0))) ORDER BY CAST((+ (vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN (((vt0.c0) NOTNULL), vt1.c0))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c1) IS TRUE)) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((- (vt1.c0)))) ORDER BY CAST((+ (vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c1) IS TRUE)) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((- (vt1.c0)))) WHERE ((vt0.c0 COLLATE BINARY IN (((vt0.c0) NOTNULL), vt1.c0))) ORDER BY CAST((+ (vt0.c0)) AS BLOB);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)<=(0X7a3cc09d)) IN ())) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)<=(0X7a3cc09d)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)<=(0X7a3cc09d)) IN ())) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)<=(0X7a3cc09d)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)<=(0X7a3cc09d)) IN ())) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(CASE WHEN vt1.c0 THEN '^4%HXP^r\n' END))) ORDER BY UPPER(UPPER(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(CASE WHEN vt1.c0 THEN '^4%HXP^r\n' END))) IS TRUE)  as count FROM vt1 ORDER BY UPPER(UPPER(vt1.c0)) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(CASE WHEN vt1.c0 THEN '^4%HXP^r\n' END))) ORDER BY UPPER(UPPER(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(CASE WHEN vt1.c0 THEN '^4%HXP^r\n' END))) IS TRUE)  as count FROM vt1 ORDER BY UPPER(UPPER(vt1.c0)) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(CASE WHEN vt1.c0 THEN '^4%HXP^r\n' END))) ORDER BY UPPER(UPPER(vt1.c0)) ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)AND(1529639429)))GLOB((((vt1.c0, vt0.c0, vt0.c0))<=((vt0.c1, vt0.c0, vt0.c0)))))) ORDER BY CASE WHEN (+ (vt0.c1)) THEN (vt1.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(1529639429)))GLOB((((vt1.c0, vt0.c0, vt0.c0))<=((vt0.c1, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY CASE WHEN (+ (vt0.c1)) THEN (vt1.c0 IN ()) END  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)AND(1529639429)))GLOB((((vt1.c0, vt0.c0, vt0.c0))<=((vt0.c1, vt0.c0, vt0.c0)))))) ORDER BY CASE WHEN (+ (vt0.c1)) THEN (vt1.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(1529639429)))GLOB((((vt1.c0, vt0.c0, vt0.c0))<=((vt0.c1, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY CASE WHEN (+ (vt0.c1)) THEN (vt1.c0 IN ()) END  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)AND(1529639429)))GLOB((((vt1.c0, vt0.c0, vt0.c0))<=((vt0.c1, vt0.c0, vt0.c0)))))) ORDER BY CASE WHEN (+ (vt0.c1)) THEN (vt1.c0 IN ()) END  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (0.7174902009516);
SELECT SUM(count) FROM (SELECT ALL ((0.7174902009516) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.7174902009516);
SELECT SUM(count) FROM (SELECT ALL ((0.7174902009516) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.7174902009516);
SELECT * FROM vt0 WHERE (((TOTAL_CHANGES())>(((vt0.c0)<(vt0.c1))))) ORDER BY ((NULL)-(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES())>(((vt0.c0)<(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL)-(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (((TOTAL_CHANGES())>(((vt0.c0)<(vt0.c1))))) ORDER BY ((NULL)-(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES())>(((vt0.c0)<(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL)-(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (((TOTAL_CHANGES())>(((vt0.c0)<(vt0.c1))))) ORDER BY ((NULL)-(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))) DESC;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)>(vt0.c0)))IS NOT((+ (0.4869695077324485)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>(vt0.c0)))IS NOT((+ (0.4869695077324485))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)>(vt0.c0)))IS NOT((+ (0.4869695077324485)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>(vt0.c0)))IS NOT((+ (0.4869695077324485))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)>(vt0.c0)))IS NOT((+ (0.4869695077324485)))));
SELECT * FROM vt1, vt0 WHERE (CASE ((vt0.c0)IS(vt1.c0))  WHEN CAST(vt1.c0 AS REAL) THEN NULL WHEN ((vt1.c0)LIKE(vt1.c0)) THEN ((vt1.c0)<(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (- ('|')) ELSE -748240028 END) ORDER BY (- (((vt0.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)IS(vt1.c0))  WHEN CAST(vt1.c0 AS REAL) THEN NULL WHEN ((vt1.c0)LIKE(vt1.c0)) THEN ((vt1.c0)<(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (- ('|')) ELSE -748240028 END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (((vt0.c1) IS FALSE))) DESC);
SELECT * FROM vt1, vt0 WHERE (CASE ((vt0.c0)IS(vt1.c0))  WHEN CAST(vt1.c0 AS REAL) THEN NULL WHEN ((vt1.c0)LIKE(vt1.c0)) THEN ((vt1.c0)<(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (- ('|')) ELSE -748240028 END) ORDER BY (- (((vt0.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)IS(vt1.c0))  WHEN CAST(vt1.c0 AS REAL) THEN NULL WHEN ((vt1.c0)LIKE(vt1.c0)) THEN ((vt1.c0)<(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (- ('|')) ELSE -748240028 END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (((vt0.c1) IS FALSE))) DESC);
SELECT * FROM vt1, vt0 WHERE (CASE ((vt0.c0)IS(vt1.c0))  WHEN CAST(vt1.c0 AS REAL) THEN NULL WHEN ((vt1.c0)LIKE(vt1.c0)) THEN ((vt1.c0)<(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (- ('|')) ELSE -748240028 END) ORDER BY (- (((vt0.c1) IS FALSE))) DESC;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c1 AS TEXT) IN ()) WHERE (vt0.c0) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))AND('-853012461')))AND(vt1.c0)))AND(vt0.c1))) BETWEEN (((vt1.c0)OR(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN '-454220749' THEN '2039718628' WHEN vt1.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, ((vt0.c0 IN ()) IN ()), ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))IS(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c1 AS TEXT) IN ()) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))AND('-853012461')))AND(vt1.c0)))AND(vt0.c1))) BETWEEN (((vt1.c0)OR(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN '-454220749' THEN '2039718628' WHEN vt1.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, ((vt0.c0 IN ()) IN ()), ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))IS(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c1 AS TEXT) IN ()) WHERE (vt0.c0) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))AND('-853012461')))AND(vt1.c0)))AND(vt0.c1))) BETWEEN (((vt1.c0)OR(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN '-454220749' THEN '2039718628' WHEN vt1.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, ((vt0.c0 IN ()) IN ()), ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))IS(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c1 AS TEXT) IN ()) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))AND('-853012461')))AND(vt1.c0)))AND(vt0.c1))) BETWEEN (((vt1.c0)OR(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN '-454220749' THEN '2039718628' WHEN vt1.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, ((vt0.c0 IN ()) IN ()), ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))IS(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c1 AS TEXT) IN ()) WHERE (vt0.c0) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))AND('-853012461')))AND(vt1.c0)))AND(vt0.c1))) BETWEEN (((vt1.c0)OR(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN '-454220749' THEN '2039718628' WHEN vt1.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, ((vt0.c0 IN ()) IN ()), ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))IS(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0))));
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT vt0.c1 COLLATE BINARY));
SELECT COUNT(*) FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0))-(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))))) ORDER BY (((~ (vt0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(vt0.c0, vt0.c0))-(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) IS FALSE) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0))-(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))))) ORDER BY (((~ (vt0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(vt0.c0, vt0.c0))-(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) IS FALSE) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0))-(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))))) ORDER BY (((~ (vt0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'') NOT BETWEEN (vt1.c0) AND (vt0.c0)))=(((vt0.c0) IS FALSE)))) ORDER BY ((((0X33fc549e, 0.557973655984083, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (vt1.c0) AND (vt0.c0)))=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((0X33fc549e, 0.557973655984083, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))) IN ()) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'') NOT BETWEEN (vt1.c0) AND (vt0.c0)))=(((vt0.c0) IS FALSE)))) ORDER BY ((((0X33fc549e, 0.557973655984083, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (vt1.c0) AND (vt0.c0)))=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((0X33fc549e, 0.557973655984083, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))) IN ()) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'') NOT BETWEEN (vt1.c0) AND (vt0.c0)))=(((vt0.c0) IS FALSE)))) ORDER BY ((((0X33fc549e, 0.557973655984083, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))) IN ()) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c1)OR(vt0.c0)))AND(NULL)), CAST(vt0.c0 AS REAL), NULL, TRIM(vt0.c1), vt0.c1)) AND ((0.9000397674948245, x'', '1048083780', vt0.c0, ((vt0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c1)OR(vt0.c0)))AND(NULL)), CAST(vt0.c0 AS REAL), NULL, TRIM(vt0.c1), vt0.c1)) AND ((0.9000397674948245, x'', '1048083780', vt0.c0, ((vt0.c1) IS TRUE))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c1)OR(vt0.c0)))AND(NULL)), CAST(vt0.c0 AS REAL), NULL, TRIM(vt0.c1), vt0.c1)) AND ((0.9000397674948245, x'', '1048083780', vt0.c0, ((vt0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c1)OR(vt0.c0)))AND(NULL)), CAST(vt0.c0 AS REAL), NULL, TRIM(vt0.c1), vt0.c1)) AND ((0.9000397674948245, x'', '1048083780', vt0.c0, ((vt0.c1) IS TRUE))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c1)OR(vt0.c0)))AND(NULL)), CAST(vt0.c0 AS REAL), NULL, TRIM(vt0.c1), vt0.c1)) AND ((0.9000397674948245, x'', '1048083780', vt0.c0, ((vt0.c1) IS TRUE)))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt1 WHERE (((SQLITE_COMPILEOPTION_GET(vt1.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(vt1.c0)) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((SQLITE_COMPILEOPTION_GET(vt1.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(vt1.c0)) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((SQLITE_COMPILEOPTION_GET(vt1.c0)) IS TRUE));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON '-1693098200' WHERE ((((vt0.c1 IN (vt0.c1)))<<(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (((((NOT (vt0.c0)))AND((((vt0.c1, vt1.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0))))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c1)))<<(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON '-1693098200' ORDER BY (((((NOT (vt0.c0)))AND((((vt0.c1, vt1.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0))))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON '-1693098200' WHERE ((((vt0.c1 IN (vt0.c1)))<<(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (((((NOT (vt0.c0)))AND((((vt0.c1, vt1.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0))))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c1)))<<(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON '-1693098200' ORDER BY (((((NOT (vt0.c0)))AND((((vt0.c1, vt1.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0))))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON '-1693098200' WHERE ((((vt0.c1 IN (vt0.c1)))<<(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (((((NOT (vt0.c0)))AND((((vt0.c1, vt1.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0))))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)<>(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.6270359979531714 ELSE vt1.c0 END))>=((vt1.c0, ((vt1.c0)<(vt1.c0)), CAST(vt1.c0 AS INTEGER))))) ORDER BY '-1845797256' COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)!=(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.6270359979531714 ELSE vt1.c0 END))>=((vt1.c0, ((vt1.c0)<(vt1.c0)), CAST(vt1.c0 AS INTEGER))))) IS TRUE)  as count FROM vt1 ORDER BY '-1845797256' COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)<>(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.6270359979531714 ELSE vt1.c0 END))>=((vt1.c0, ((vt1.c0)<(vt1.c0)), CAST(vt1.c0 AS INTEGER))))) ORDER BY '-1845797256' COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)!=(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.6270359979531714 ELSE vt1.c0 END))>=((vt1.c0, ((vt1.c0)<(vt1.c0)), CAST(vt1.c0 AS INTEGER))))) IS TRUE)  as count FROM vt1 ORDER BY '-1845797256' COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)<>(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.6270359979531714 ELSE vt1.c0 END))>=((vt1.c0, ((vt1.c0)<(vt1.c0)), CAST(vt1.c0 AS INTEGER))))) ORDER BY '-1845797256' COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (x''))) ORDER BY ((vt1.c0 IN (vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 IN (vt0.c1)) IN ()));
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (x''))) ORDER BY ((vt1.c0 IN (vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 IN (vt0.c1)) IN ()));
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (x''))) ORDER BY ((vt1.c0 IN (vt0.c1)) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE ('()') ORDER BY ((((+ (vt0.c0))))<((vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (('()') IS TRUE)  as count FROM vt0 ORDER BY ((((+ (vt0.c0))))<((vt0.c1 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('()') ORDER BY ((((+ (vt0.c0))))<((vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (('()') IS TRUE)  as count FROM vt0 ORDER BY ((((+ (vt0.c0))))<((vt0.c1 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('()') ORDER BY ((((+ (vt0.c0))))<((vt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt0.c1 COLLATE NOCASE THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END ELSE '343268215' END) ORDER BY CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) DESC  NULLS FIRST, CAST(((vt0.c1) NOTNULL) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 COLLATE NOCASE THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END ELSE '343268215' END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) DESC  NULLS FIRST, CAST(((vt0.c1) NOTNULL) AS BLOB));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt0.c1 COLLATE NOCASE THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END ELSE '343268215' END) ORDER BY CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) DESC  NULLS FIRST, CAST(((vt0.c1) NOTNULL) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 COLLATE NOCASE THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END ELSE '343268215' END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) DESC  NULLS FIRST, CAST(((vt0.c1) NOTNULL) AS BLOB));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt0.c1 COLLATE NOCASE THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END ELSE '343268215' END) ORDER BY CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) DESC  NULLS FIRST, CAST(((vt0.c1) NOTNULL) AS BLOB);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (((vt0.c0))<((vt0.c0)))  WHEN (NOT (vt0.c1)) THEN ((vt1.c0)GLOB(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))<((vt0.c0)))  WHEN (NOT (vt0.c1)) THEN ((vt1.c0)GLOB(vt0.c1)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (((vt0.c0))<((vt0.c0)))  WHEN (NOT (vt0.c1)) THEN ((vt1.c0)GLOB(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))<((vt0.c0)))  WHEN (NOT (vt0.c1)) THEN ((vt1.c0)GLOB(vt0.c1)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (((vt0.c0))<((vt0.c0)))  WHEN (NOT (vt0.c1)) THEN ((vt1.c0)GLOB(vt0.c1)) END);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY CASE (- (vt0.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE (- (vt0.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)) END  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY CASE (- (vt0.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE (- (vt0.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)) END  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY CASE (- (vt0.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)) END  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))!=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))))) ORDER BY ((((vt1.c0 COLLATE BINARY)AND((vt1.c0 IN (vt1.c0)))))AND((vt1.c0 IN ()))) DESC, ((((((((((x'1ac3d7f6')OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))!=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0 COLLATE BINARY)AND((vt1.c0 IN (vt1.c0)))))AND((vt1.c0 IN ()))) DESC, ((((((((((x'1ac3d7f6')OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))!=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))))) ORDER BY ((((vt1.c0 COLLATE BINARY)AND((vt1.c0 IN (vt1.c0)))))AND((vt1.c0 IN ()))) DESC, ((((((((((x'1ac3d7f6')OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))!=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0 COLLATE BINARY)AND((vt1.c0 IN (vt1.c0)))))AND((vt1.c0 IN ()))) DESC, ((((((((((x'1ac3d7f6')OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (QUOTE(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))) ORDER BY ((NULL)GLOB((vt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((NULL)GLOB((vt0.c1 IN ())))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (QUOTE(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))) ORDER BY ((NULL)GLOB((vt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((NULL)GLOB((vt0.c1 IN ())))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (QUOTE(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))) ORDER BY ((NULL)GLOB((vt0.c1 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))*(((vt0.c0)OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))*(((vt0.c0)OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))*(((vt0.c0)OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))*(((vt0.c0)OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))*(((vt0.c0)OR(vt0.c1)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ''  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END THEN ((vt1.c0)*(vt0.c0)) END) ORDER BY (((vt0.c0 IN ()))>(CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ''  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END THEN ((vt1.c0)*(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0 IN ()))>(CAST(vt1.c0 AS BLOB))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ''  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END THEN ((vt1.c0)*(vt0.c0)) END) ORDER BY (((vt0.c0 IN ()))>(CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ''  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END THEN ((vt1.c0)*(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0 IN ()))>(CAST(vt1.c0 AS BLOB))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ''  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END THEN ((vt1.c0)*(vt0.c0)) END) ORDER BY (((vt0.c0 IN ()))>(CAST(vt1.c0 AS BLOB)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) AND (((vt1.c0)<<(vt1.c0))))) ORDER BY ((LIKELIHOOD(DISTINCT vt0.c1, 0.4429711967444502))>=((+ (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) BETWEEN (((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) AND (((vt1.c0)<<(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((LIKELIHOOD(DISTINCT vt0.c1, 0.4429711967444502))>=((+ (vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) AND (((vt1.c0)<<(vt1.c0))))) ORDER BY ((LIKELIHOOD(DISTINCT vt0.c1, 0.4429711967444502))>=((+ (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) BETWEEN (((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) AND (((vt1.c0)<<(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((LIKELIHOOD(DISTINCT vt0.c1, 0.4429711967444502))>=((+ (vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) AND (((vt1.c0)<<(vt1.c0))))) ORDER BY ((LIKELIHOOD(DISTINCT vt0.c1, 0.4429711967444502))>=((+ (vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (TYPEOF(DISTINCT (('-2010300240') ISNULL)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (('-2010300240') ISNULL))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (TYPEOF(DISTINCT (('-2010300240') ISNULL)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (('-2010300240') ISNULL))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (TYPEOF(DISTINCT (('-2010300240') ISNULL)));
SELECT COUNT(*) FROM vt0 WHERE (((((x'dd0f')AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY CAST(((vt0.c1) IS TRUE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((x'dd0f')AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) IS TRUE) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (((((x'dd0f')AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY CAST(((vt0.c1) IS TRUE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((x'dd0f')AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) IS TRUE) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (((((x'dd0f')AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY CAST(((vt0.c1) IS TRUE) AS INTEGER);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)GLOB(vt1.c0)) THEN ((vt1.c0)||(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)GLOB(vt1.c0)) THEN ((vt1.c0)||(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)GLOB(vt1.c0)) THEN ((vt1.c0)||(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)GLOB(vt1.c0)) THEN ((vt1.c0)||(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)GLOB(vt1.c0)) THEN ((vt1.c0)||(vt1.c0)) END);
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN (CASE '743477317'  WHEN 0.052126559730238387 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-421840197' END) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((UNLIKELY(DISTINCT vt1.c0))LIKE(vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (CASE '743477317'  WHEN 0.052126559730238387 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-421840197' END) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((UNLIKELY(DISTINCT vt1.c0))LIKE(vt1.c0))  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN (CASE '743477317'  WHEN 0.052126559730238387 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-421840197' END) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((UNLIKELY(DISTINCT vt1.c0))LIKE(vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (CASE '743477317'  WHEN 0.052126559730238387 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-421840197' END) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((UNLIKELY(DISTINCT vt1.c0))LIKE(vt1.c0))  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN (CASE '743477317'  WHEN 0.052126559730238387 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-421840197' END) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((UNLIKELY(DISTINCT vt1.c0))LIKE(vt1.c0))  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (LOWER(DISTINCT 0.13167794369174135));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT 0.13167794369174135)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (LOWER(DISTINCT 0.13167794369174135));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT 0.13167794369174135)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (LOWER(DISTINCT 0.13167794369174135));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) ORDER BY (((vt0.c1, ((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)), ((((((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))AND(0.7094345856468656)))OR(vt0.c1))))<((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt1.c0)<=(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1, ((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)), ((((((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))AND(0.7094345856468656)))OR(vt0.c1))))<((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt1.c0)<=(x''))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) ORDER BY (((vt0.c1, ((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)), ((((((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))AND(0.7094345856468656)))OR(vt0.c1))))<((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt1.c0)<=(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1, ((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)), ((((((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))AND(0.7094345856468656)))OR(vt0.c1))))<((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt1.c0)<=(x''))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) ORDER BY (((vt0.c1, ((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)), ((((((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))AND(0.7094345856468656)))OR(vt0.c1))))<((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt1.c0)<=(x'')))));
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0) IS FALSE))OR(vt1.c0 COLLATE BINARY)))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) IS FALSE))OR(vt1.c0 COLLATE BINARY)))OR(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0) IS FALSE))OR(vt1.c0 COLLATE BINARY)))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) IS FALSE))OR(vt1.c0 COLLATE BINARY)))OR(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0) IS FALSE))OR(vt1.c0 COLLATE BINARY)))OR(vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((+ ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((+ ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((+ ((vt0.c0 IN ()))));
SELECT * FROM vt0, vt1 WHERE (((((((vt0.c0) IS TRUE))AND(((0.07557585116603804) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))OR(((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS TRUE))AND(((0.07557585116603804) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))OR(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((((vt0.c0) IS TRUE))AND(((0.07557585116603804) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))OR(((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS TRUE))AND(((0.07557585116603804) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))OR(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((((vt0.c0) IS TRUE))AND(((0.07557585116603804) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))OR(((vt0.c1) IS TRUE))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(ABS(vt1.c0) AS NUMERIC)) ORDER BY CASE WHEN DATETIME(vt0.c0, vt0.c1, vt1.c0) THEN (- (x'')) WHEN TRIM(DISTINCT '-743818367', vt0.c1) THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(-2.01030024E9)))AND(vt0.c1)) WHEN vt0.c0 THEN ((vt1.c0) ISNULL) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(ABS(vt1.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN DATETIME(vt0.c0, vt0.c1, vt1.c0) THEN (- (x'')) WHEN TRIM(DISTINCT '-743818367', vt0.c1) THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(-2.01030024E9)))AND(vt0.c1)) WHEN vt0.c0 THEN ((vt1.c0) ISNULL) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(ABS(vt1.c0) AS NUMERIC)) ORDER BY CASE WHEN DATETIME(vt0.c0, vt0.c1, vt1.c0) THEN (- (x'')) WHEN TRIM(DISTINCT '-743818367', vt0.c1) THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(-2.01030024E9)))AND(vt0.c1)) WHEN vt0.c0 THEN ((vt1.c0) ISNULL) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(ABS(vt1.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN DATETIME(vt0.c0, vt0.c1, vt1.c0) THEN (- (x'')) WHEN TRIM(DISTINCT '-743818367', vt0.c1) THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(-2.01030024E9)))AND(vt0.c1)) WHEN vt0.c0 THEN ((vt1.c0) ISNULL) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(ABS(vt1.c0) AS NUMERIC)) ORDER BY CASE WHEN DATETIME(vt0.c0, vt0.c1, vt1.c0) THEN (- (x'')) WHEN TRIM(DISTINCT '-743818367', vt0.c1) THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(-2.01030024E9)))AND(vt0.c1)) WHEN vt0.c0 THEN ((vt1.c0) ISNULL) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY -5.22165521E8;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY -5.22165521E8);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY -5.22165521E8;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY -5.22165521E8);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY -5.22165521E8;
SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))OR(NULL))))) ORDER BY ((((0x4f4deaf3) ISNULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt1.c0)OR(vt1.c0)))OR(NULL))))) IS TRUE)  as count FROM vt1 ORDER BY ((((0X4f4deaf3) ISNULL)) NOT NULL));
SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))OR(NULL))))) ORDER BY ((((0x4f4deaf3) ISNULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt1.c0)OR(vt1.c0)))OR(NULL))))) IS TRUE)  as count FROM vt1 ORDER BY ((((0X4f4deaf3) ISNULL)) NOT NULL));
SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))OR(NULL))))) ORDER BY ((((0x4f4deaf3) ISNULL)) NOT NULL);
SELECT * FROM vt1 WHERE (ABS((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (ABS((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (ABS((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM vt1 WHERE ((- (((0.7907788299489293)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((0.7907788299489293)&(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- (((0.7907788299489293)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((0.7907788299489293)&(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- (((0.7907788299489293)&(vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE ((- (((vt0.c0)OR(vt1.c0))))) ORDER BY (((vt0.c1 IN ()))-(',?'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1 IN ()))-(',?'))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((- (((vt0.c0)OR(vt1.c0))))) ORDER BY (((vt0.c1 IN ()))-(',?'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1 IN ()))-(',?'))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((- (((vt0.c0)OR(vt1.c0))))) ORDER BY (((vt0.c1 IN ()))-(',?'))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY WHERE ((((NULL)||(0.13167794369174135)) IN (NULLIF(DISTINCT vt0.c1, vt1.c0), (vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)||(0.13167794369174135)) IN (NULLIF(DISTINCT vt0.c1, vt1.c0), (vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY WHERE ((((NULL)||(0.13167794369174135)) IN (NULLIF(DISTINCT vt0.c1, vt1.c0), (vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)||(0.13167794369174135)) IN (NULLIF(DISTINCT vt0.c1, vt1.c0), (vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY WHERE ((((NULL)||(0.13167794369174135)) IN (NULLIF(DISTINCT vt0.c1, vt1.c0), (vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) BETWEEN ((((vt1.c0))=((vt1.c0)))) AND ((('4') NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) BETWEEN ((((vt1.c0))=((vt1.c0)))) AND ((('4') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) BETWEEN ((((vt1.c0))=((vt1.c0)))) AND ((('4') NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) BETWEEN ((((vt1.c0))=((vt1.c0)))) AND ((('4') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) BETWEEN ((((vt1.c0))=((vt1.c0)))) AND ((('4') NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELY(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((vt1.c0)IS NOT(vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)IS NOT(vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELY(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((vt1.c0)IS NOT(vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)IS NOT(vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELY(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((vt1.c0)IS NOT(vt1.c0)) COLLATE BINARY;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL))<=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) WHERE (((((('') ISNULL)))<((((vt1.c0)*(vt1.c0)))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((('') ISNULL)))<((((vt1.c0)*(vt1.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL))<=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY vt0.c0);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL))<=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) WHERE (((((('') ISNULL)))<((((vt1.c0)*(vt1.c0)))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((('') ISNULL)))<((((vt1.c0)*(vt1.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL))<=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY vt0.c0);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL))<=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) WHERE (((((('') ISNULL)))<((((vt1.c0)*(vt1.c0)))))) ORDER BY vt0.c0;
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((0.8322560783398385 IN (vt1.c0, vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))AND(IFNULL(DISTINCT vt0.c1, vt1.c0))))AND(((vt1.c0) IS FALSE))))AND(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY ((CAST('' AS NUMERIC))|((vt1.c0 IN ()))) ASC  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))) AND ((vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((0.8322560783398385 IN (vt1.c0, vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))AND(IFNULL(DISTINCT vt0.c1, vt1.c0))))AND(((vt1.c0) IS FALSE))))AND(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST('' AS NUMERIC))|((vt1.c0 IN ()))) ASC  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((0.8322560783398385 IN (vt1.c0, vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))AND(IFNULL(DISTINCT vt0.c1, vt1.c0))))AND(((vt1.c0) IS FALSE))))AND(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY ((CAST('' AS NUMERIC))|((vt1.c0 IN ()))) ASC  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))) AND ((vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((0.8322560783398385 IN (vt1.c0, vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))AND(IFNULL(DISTINCT vt0.c1, vt1.c0))))AND(((vt1.c0) IS FALSE))))AND(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST('' AS NUMERIC))|((vt1.c0 IN ()))) ASC  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((0.8322560783398385 IN (vt1.c0, vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))AND(IFNULL(DISTINCT vt0.c1, vt1.c0))))AND(((vt1.c0) IS FALSE))))AND(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY ((CAST('' AS NUMERIC))|((vt1.c0 IN ()))) ASC  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))) AND ((vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0 IN ())))<=((HEX(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ())))<=((HEX(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0 IN ())))<=((HEX(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ())))<=((HEX(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0 IN ())))<=((HEX(vt1.c0)))));
SELECT * FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c1, 0.5947105872902916))%(vt0.c1))) ORDER BY LTRIM(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt0.c1, 0.5947105872902916))%(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY LTRIM(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))  NULLS LAST);
SELECT * FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c1, 0.5947105872902916))%(vt0.c1))) ORDER BY LTRIM(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt0.c1, 0.5947105872902916))%(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY LTRIM(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))  NULLS LAST);
SELECT * FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c1, 0.5947105872902916))%(vt0.c1))) ORDER BY LTRIM(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((QUOTE(vt0.c0))<(CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((QUOTE(vt0.c0))<(CASE WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((QUOTE(vt0.c0))<(CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((QUOTE(vt0.c0))<(CASE WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((QUOTE(vt0.c0))<(CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY json_extract(((NULL) ISNULL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt0.c1)) BETWEEN (('-748240028')) AND ((vt0.c0))), ((vt1.c0)<(vt1.c0)), ((vt0.c0)!=(vt0.c0)), vt0.c1) ASC, CASE CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END  WHEN '{Ax[aR>a' THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN LIKELY(vt0.c0) WHEN ('2013613551' IN ()) THEN CAST(vt0.c1 AS TEXT) END ASC, (((((((vt0.c1, vt1.c0, vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((vt1.c0, vt0.c1, x'', vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt1.c0, vt0.c0, vt0.c0))))OR(((vt0.c1) IS FALSE))))OR('!T|')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_extract(((NULL) ISNULL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt0.c1)) BETWEEN (('-748240028')) AND ((vt0.c0))), ((vt1.c0)<(vt1.c0)), ((vt0.c0)<>(vt0.c0)), vt0.c1) ASC, CASE CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END  WHEN '{Ax[aR>a' THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN LIKELY(vt0.c0) WHEN ('2013613551' IN ()) THEN CAST(vt0.c1 AS TEXT) END ASC, (((((((vt0.c1, vt1.c0, vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((vt1.c0, vt0.c1, x'', vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt1.c0, vt0.c0, vt0.c0))))OR(((vt0.c1) IS FALSE))))OR('!T|')) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY json_extract(((NULL) ISNULL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt0.c1)) BETWEEN (('-748240028')) AND ((vt0.c0))), ((vt1.c0)<(vt1.c0)), ((vt0.c0)!=(vt0.c0)), vt0.c1) ASC, CASE CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END  WHEN '{Ax[aR>a' THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN LIKELY(vt0.c0) WHEN ('2013613551' IN ()) THEN CAST(vt0.c1 AS TEXT) END ASC, (((((((vt0.c1, vt1.c0, vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((vt1.c0, vt0.c1, x'', vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt1.c0, vt0.c0, vt0.c0))))OR(((vt0.c1) IS FALSE))))OR('!T|')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_extract(((NULL) ISNULL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt0.c1)) BETWEEN (('-748240028')) AND ((vt0.c0))), ((vt1.c0)<(vt1.c0)), ((vt0.c0)<>(vt0.c0)), vt0.c1) ASC, CASE CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END  WHEN '{Ax[aR>a' THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN LIKELY(vt0.c0) WHEN ('2013613551' IN ()) THEN CAST(vt0.c1 AS TEXT) END ASC, (((((((vt0.c1, vt1.c0, vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((vt1.c0, vt0.c1, x'', vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt1.c0, vt0.c0, vt0.c0))))OR(((vt0.c1) IS FALSE))))OR('!T|')) ASC);
SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY CASE (+ (NULL))  WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE (+ (NULL))  WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 END  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY CASE (+ (NULL))  WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE (+ (NULL))  WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 END  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY CASE (+ (NULL))  WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 END  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c1) IS TRUE)))) ORDER BY (((((vt0.c0))=((vt0.c1))))&((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))=((vt0.c1))))&((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c1) IS TRUE)))) ORDER BY (((((vt0.c0))=((vt0.c1))))&((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))=((vt0.c1))))&((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c1) IS TRUE)))) ORDER BY (((((vt0.c0))=((vt0.c1))))&((vt0.c0 IN ())));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT * FROM vt0, vt1 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, vt1 WHERE (-342037552);
SELECT SUM(count) FROM (SELECT ((-342037552) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (-342037552);
SELECT SUM(count) FROM (SELECT ((-342037552) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (-342037552);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)IS(vt0.c0)) COLLATE BINARY) ORDER BY ((json_array_length(vt0.c1, vt0.c1))IS NOT((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)IS(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((json_array_length(vt0.c1, vt0.c1))IS NOT((vt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)IS(vt0.c0)) COLLATE BINARY) ORDER BY ((json_array_length(vt0.c1, vt0.c1))IS NOT((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)IS(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((json_array_length(vt0.c1, vt0.c1))IS NOT((vt0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB)) ORDER BY ((((0.3326034553258175)>>(vt1.c0)))&(PRINTF(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((((0.3326034553258175)>>(vt1.c0)))&(PRINTF(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB)) ORDER BY ((((0.3326034553258175)>>(vt1.c0)))&(PRINTF(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((((0.3326034553258175)>>(vt1.c0)))&(PRINTF(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB)) ORDER BY ((((0.3326034553258175)>>(vt1.c0)))&(PRINTF(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) COLLATE NOCASE) ORDER BY ((((IFNULL(DISTINCT vt1.c0, vt0.c1))AND(((vt1.c0)|(vt1.c0)))))AND(vt1.c0))  NULLS LAST, (NOT ((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, 0.1860975444051589)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((IFNULL(DISTINCT vt1.c0, vt0.c1))AND(((vt1.c0)|(vt1.c0)))))AND(vt1.c0))  NULLS LAST, (NOT ((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, 0.1860975444051589)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) COLLATE NOCASE) ORDER BY ((((IFNULL(DISTINCT vt1.c0, vt0.c1))AND(((vt1.c0)|(vt1.c0)))))AND(vt1.c0))  NULLS LAST, (NOT ((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, 0.1860975444051589)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((IFNULL(DISTINCT vt1.c0, vt0.c1))AND(((vt1.c0)|(vt1.c0)))))AND(vt1.c0))  NULLS LAST, (NOT ((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, 0.1860975444051589)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) COLLATE NOCASE) ORDER BY ((((IFNULL(DISTINCT vt1.c0, vt0.c1))AND(((vt1.c0)|(vt1.c0)))))AND(vt1.c0))  NULLS LAST, (NOT ((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, 0.1860975444051589)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))==((0.7422482380256592)))) IS TRUE)) ORDER BY TRIM(DISTINCT CAST(vt1.c0 AS REAL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))=((0.7422482380256592)))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT CAST(vt1.c0 AS REAL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))==((0.7422482380256592)))) IS TRUE)) ORDER BY TRIM(DISTINCT CAST(vt1.c0 AS REAL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))=((0.7422482380256592)))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT CAST(vt1.c0 AS REAL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))==((0.7422482380256592)))) IS TRUE)) ORDER BY TRIM(DISTINCT CAST(vt1.c0 AS REAL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON UNLIKELY(vt0.c0 COLLATE RTRIM) WHERE ((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN 'O Ps' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN 'O Ps' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON UNLIKELY(vt0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON UNLIKELY(vt0.c0 COLLATE RTRIM) WHERE ((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN 'O Ps' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN 'O Ps' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON UNLIKELY(vt0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON UNLIKELY(vt0.c0 COLLATE RTRIM) WHERE ((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN 'O Ps' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END IN ()));
SELECT * FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS REAL));
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0)<<(vt1.c0)) ELSE ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) ORDER BY CASE WHEN ((vt1.c0)IS(vt1.c0)) THEN '0.3326034553258175' END ASC  NULLS LAST, COALESCE(((((vt1.c0)AND(vt1.c0)))AND(1419798455)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0)<<(vt1.c0)) ELSE ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)IS(vt1.c0)) THEN '0.3326034553258175' END ASC  NULLS LAST, COALESCE(((((vt1.c0)AND(vt1.c0)))AND(1419798455)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) DESC);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0)<<(vt1.c0)) ELSE ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) ORDER BY CASE WHEN ((vt1.c0)IS(vt1.c0)) THEN '0.3326034553258175' END ASC  NULLS LAST, COALESCE(((((vt1.c0)AND(vt1.c0)))AND(1419798455)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0)<<(vt1.c0)) ELSE ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)IS(vt1.c0)) THEN '0.3326034553258175' END ASC  NULLS LAST, COALESCE(((((vt1.c0)AND(vt1.c0)))AND(1419798455)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) DESC);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0)<<(vt1.c0)) ELSE ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) ORDER BY CASE WHEN ((vt1.c0)IS(vt1.c0)) THEN '0.3326034553258175' END ASC  NULLS LAST, COALESCE(((((vt1.c0)AND(vt1.c0)))AND(1419798455)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN (((vt1.c0))<>((vt0.c0))) THEN '-421840197' END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS TEXT)  WHEN (((vt1.c0))<>((vt0.c0))) THEN '-421840197' END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN (((vt1.c0))<>((vt0.c0))) THEN '-421840197' END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS TEXT)  WHEN (((vt1.c0))<>((vt0.c0))) THEN '-421840197' END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN (((vt1.c0))<>((vt0.c0))) THEN '-421840197' END);
SELECT * FROM vt1 WHERE (json_array_length((- (vt1.c0)), (vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((- (vt1.c0)), (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (json_array_length((- (vt1.c0)), (vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((- (vt1.c0)), (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) END) ORDER BY (NOT (CAST(vt0.c1 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CAST(vt0.c1 AS REAL)))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) END) ORDER BY (NOT (CAST(vt0.c1 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CAST(vt0.c1 AS REAL)))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) END) ORDER BY (NOT (CAST(vt0.c1 AS REAL)))  NULLS LAST;
SELECT * FROM vt1 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((((vt1.c0)AND(vt1.c0))) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(vt1.c0))) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((((vt1.c0)AND(vt1.c0))) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(vt1.c0))) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((((vt1.c0)AND(vt1.c0))) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) AND (CAST(vt1.c0 AS TEXT))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (((- (vt1.c0)))AND(((vt1.c0)%(vt1.c0))))  NULLS FIRST, ((((((vt1.c0) IS TRUE))OR(((vt1.c0)&(vt1.c0)))))OR(vt1.c0 COLLATE RTRIM))  NULLS FIRST, ((RTRIM(vt1.c0)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((- (vt1.c0)))AND(((vt1.c0)%(vt1.c0))))  NULLS FIRST, ((((((vt1.c0) IS TRUE))OR(((vt1.c0)&(vt1.c0)))))OR(vt1.c0 COLLATE RTRIM))  NULLS FIRST, ((RTRIM(vt1.c0)) NOTNULL)  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (((- (vt1.c0)))AND(((vt1.c0)%(vt1.c0))))  NULLS FIRST, ((((((vt1.c0) IS TRUE))OR(((vt1.c0)&(vt1.c0)))))OR(vt1.c0 COLLATE RTRIM))  NULLS FIRST, ((RTRIM(vt1.c0)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((- (vt1.c0)))AND(((vt1.c0)%(vt1.c0))))  NULLS FIRST, ((((((vt1.c0) IS TRUE))OR(((vt1.c0)&(vt1.c0)))))OR(vt1.c0 COLLATE RTRIM))  NULLS FIRST, ((RTRIM(vt1.c0)) NOTNULL)  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (((- (vt1.c0)))AND(((vt1.c0)%(vt1.c0))))  NULLS FIRST, ((((((vt1.c0) IS TRUE))OR(((vt1.c0)&(vt1.c0)))))OR(vt1.c0 COLLATE RTRIM))  NULLS FIRST, ((RTRIM(vt1.c0)) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) ISNULL)) ORDER BY ('-322910205' IN (((vt1.c0)<<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ('-322910205' IN (((vt1.c0)<<(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) ISNULL)) ORDER BY ('-322910205' IN (((vt1.c0)<<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ('-322910205' IN (((vt1.c0)<<(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) ISNULL)) ORDER BY ('-322910205' IN (((vt1.c0)<<(vt1.c0))));
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((NULL) BETWEEN ((((('')OR(vt0.c1)))OR(vt0.c1))) AND (CASE WHEN 'r_.X+E,Z' THEN vt0.c0 ELSE vt1.c0 END)), ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((NULL) BETWEEN ((((('')OR(vt0.c1)))OR(vt0.c1))) AND (CASE WHEN 'r_.X+E,Z' THEN vt0.c0 ELSE vt1.c0 END)), ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((NULL) BETWEEN ((((('')OR(vt0.c1)))OR(vt0.c1))) AND (CASE WHEN 'r_.X+E,Z' THEN vt0.c0 ELSE vt1.c0 END)), ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((NULL) BETWEEN ((((('')OR(vt0.c1)))OR(vt0.c1))) AND (CASE WHEN 'r_.X+E,Z' THEN vt0.c0 ELSE vt1.c0 END)), ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((NULL) BETWEEN ((((('')OR(vt0.c1)))OR(vt0.c1))) AND (CASE WHEN 'r_.X+E,Z' THEN vt0.c0 ELSE vt1.c0 END)), ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) COLLATE NOCASE  NULLS LAST;
SELECT * FROM vt0 WHERE (((x'') NOT NULL)) ORDER BY ((NULL)=(vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((NULL)==(vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((x'') NOT NULL)) ORDER BY ((NULL)=(vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((NULL)==(vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((x'') NOT NULL)) ORDER BY ((NULL)=(vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT (NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (NOT (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT (NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (NOT (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT (NOT (vt0.c0))));
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS TEXT)) ORDER BY ((vt1.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) IS TRUE));
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS TEXT)) ORDER BY ((vt1.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) IS TRUE));
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS TEXT)) ORDER BY ((vt1.c0) IS TRUE);
SELECT ALL * FROM vt0 WHERE (QUOTE(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((QUOTE(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (QUOTE(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((QUOTE(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (QUOTE(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))));
SELECT * FROM vt1 NOT INDEXED WHERE (CASE ((((((((vt1.c0)AND(vt1.c0)))AND(0.7094345856468656)))OR(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND ('0.43579656819284196')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt1.c0)AND(vt1.c0)))AND(0.7094345856468656)))OR(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND ('0.43579656819284196')) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 NOT INDEXED WHERE (CASE ((((((((vt1.c0)AND(vt1.c0)))AND(0.7094345856468656)))OR(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND ('0.43579656819284196')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt1.c0)AND(vt1.c0)))AND(0.7094345856468656)))OR(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND ('0.43579656819284196')) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 NOT INDEXED WHERE (CASE ((((((((vt1.c0)AND(vt1.c0)))AND(0.7094345856468656)))OR(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND ('0.43579656819284196')) END);
SELECT COUNT(*) FROM vt0 WHERE (CASE 'n|F''T*''x'  WHEN 0.12186377875412058 THEN vt0.c1 COLLATE NOCASE ELSE 0.13235346871617537 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 'n|F''T*''x'  WHEN 0.12186377875412058 THEN vt0.c1 COLLATE NOCASE ELSE 0.13235346871617537 END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE 'n|F''T*''x'  WHEN 0.12186377875412058 THEN vt0.c1 COLLATE NOCASE ELSE 0.13235346871617537 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 'n|F''T*''x'  WHEN 0.12186377875412058 THEN vt0.c1 COLLATE NOCASE ELSE 0.13235346871617537 END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE 'n|F''T*''x'  WHEN 0.12186377875412058 THEN vt0.c1 COLLATE NOCASE ELSE 0.13235346871617537 END);
SELECT ALL * FROM vt0 WHERE (((TYPEOF(vt0.c1))IS(((NULL)<>(vt0.c1))))) ORDER BY (((LIKE(vt0.c0, vt0.c0, '8')))<((((vt0.c0)OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(vt0.c1))IS(((NULL)!=(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((LIKE(vt0.c0, vt0.c0, '8')))<((((vt0.c0)OR(vt0.c0))))) ASC);
SELECT ALL * FROM vt0 WHERE (((TYPEOF(vt0.c1))IS(((NULL)<>(vt0.c1))))) ORDER BY (((LIKE(vt0.c0, vt0.c0, '8')))<((((vt0.c0)OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(vt0.c1))IS(((NULL)!=(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((LIKE(vt0.c0, vt0.c0, '8')))<((((vt0.c0)OR(vt0.c0))))) ASC);
SELECT ALL * FROM vt0 WHERE (((TYPEOF(vt0.c1))IS(((NULL)<>(vt0.c1))))) ORDER BY (((LIKE(vt0.c0, vt0.c0, '8')))<((((vt0.c0)OR(vt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(0.10504001500041027 COLLATE NOCASE)))OR((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS INTEGER))OR(0.10504001500041027 COLLATE NOCASE)))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(0.10504001500041027 COLLATE NOCASE)))OR((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS INTEGER))OR(0.10504001500041027 COLLATE NOCASE)))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(0.10504001500041027 COLLATE NOCASE)))OR((vt0.c1 IN ()))));
SELECT ALL * FROM vt0 WHERE (0.5470769850317074 COLLATE RTRIM) ORDER BY LIKE(vt0.c1, vt0.c0, ' ') COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((0.5470769850317074 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY LIKE(vt0.c1, vt0.c0, ' ') COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (0.5470769850317074 COLLATE RTRIM) ORDER BY LIKE(vt0.c1, vt0.c0, ' ') COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((0.5470769850317074 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY LIKE(vt0.c1, vt0.c0, ' ') COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (0.5470769850317074 COLLATE RTRIM) ORDER BY LIKE(vt0.c1, vt0.c0, ' ') COLLATE BINARY;
SELECT * FROM vt0, vt1 WHERE (LOWER(DISTINCT vt1.c0)) ORDER BY ((((x'')AND((((vt0.c1, vt0.c1, '343268215', NULL, vt1.c0))==((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))))AND(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((x'')AND((((vt0.c1, vt0.c1, '343268215', NULL, vt1.c0))=((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))))AND(NULL))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (LOWER(DISTINCT vt1.c0)) ORDER BY ((((x'')AND((((vt0.c1, vt0.c1, '343268215', NULL, vt1.c0))==((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))))AND(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((x'')AND((((vt0.c1, vt0.c1, '343268215', NULL, vt1.c0))=((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))))AND(NULL))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (LOWER(DISTINCT vt1.c0)) ORDER BY ((((x'')AND((((vt0.c1, vt0.c1, '343268215', NULL, vt1.c0))==((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))))AND(NULL))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((('쌵T')) BETWEEN ((vt0.c0)) AND ((vt0.c1))))|(vt0.c0))) ORDER BY (vt0.c1 COLLATE NOCASE IN ()) ASC, ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((('쌵T')) BETWEEN ((vt0.c0)) AND ((vt0.c1))))|(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 COLLATE NOCASE IN ()) ASC, ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((((('쌵T')) BETWEEN ((vt0.c0)) AND ((vt0.c1))))|(vt0.c0))) ORDER BY (vt0.c1 COLLATE NOCASE IN ()) ASC, ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((('쌵T')) BETWEEN ((vt0.c0)) AND ((vt0.c1))))|(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 COLLATE NOCASE IN ()) ASC, ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((((('쌵T')) BETWEEN ((vt0.c0)) AND ((vt0.c1))))|(vt0.c0))) ORDER BY (vt0.c1 COLLATE NOCASE IN ()) ASC, ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM;
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN vt1.c0 COLLATE RTRIM THEN (- (vt1.c0)) WHEN ((vt0.c0) ISNULL) THEN TRIM(vt0.c0, vt0.c0) WHEN (vt1.c0 IN ()) THEN ((vt0.c1)GLOB(vt0.c0)) ELSE ((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)) END) ORDER BY vt0.c0 COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS TRUE)  WHEN vt1.c0 COLLATE RTRIM THEN (- (vt1.c0)) WHEN ((vt0.c0) ISNULL) THEN TRIM(vt0.c0, vt0.c0) WHEN (vt1.c0 IN ()) THEN ((vt0.c1)GLOB(vt0.c0)) ELSE ((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 COLLATE NOCASE COLLATE RTRIM);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN vt1.c0 COLLATE RTRIM THEN (- (vt1.c0)) WHEN ((vt0.c0) ISNULL) THEN TRIM(vt0.c0, vt0.c0) WHEN (vt1.c0 IN ()) THEN ((vt0.c1)GLOB(vt0.c0)) ELSE ((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)) END) ORDER BY vt0.c0 COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS TRUE)  WHEN vt1.c0 COLLATE RTRIM THEN (- (vt1.c0)) WHEN ((vt0.c0) ISNULL) THEN TRIM(vt0.c0, vt0.c0) WHEN (vt1.c0 IN ()) THEN ((vt0.c1)GLOB(vt0.c0)) ELSE ((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 COLLATE NOCASE COLLATE RTRIM);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN vt1.c0 COLLATE RTRIM THEN (- (vt1.c0)) WHEN ((vt0.c0) ISNULL) THEN TRIM(vt0.c0, vt0.c0) WHEN (vt1.c0 IN ()) THEN ((vt0.c1)GLOB(vt0.c0)) ELSE ((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)) END) ORDER BY vt0.c0 COLLATE NOCASE COLLATE RTRIM;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c0) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c0) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c0) ISNULL)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT)) ORDER BY (NOT (((vt0.c1)||(0.18170129711505745)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c1)||(0.18170129711505745)))) ASC);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT)) ORDER BY (NOT (((vt0.c1)||(0.18170129711505745)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c1)||(0.18170129711505745)))) ASC);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT)) ORDER BY (NOT (((vt0.c1)||(0.18170129711505745)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(TRIM(DISTINCT vt0.c1))))OR(CASE WHEN NULL THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(TRIM(DISTINCT vt0.c1))))OR(CASE WHEN NULL THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(TRIM(DISTINCT vt0.c1))))OR(CASE WHEN NULL THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(TRIM(DISTINCT vt0.c1))))OR(CASE WHEN NULL THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(TRIM(DISTINCT vt0.c1))))OR(CASE WHEN NULL THEN vt0.c1 ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS REAL) AS TEXT)) ORDER BY (((NOT (vt0.c0))) BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c1)) DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c1)) DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((- (vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS REAL) AS TEXT)) ORDER BY (((NOT (vt0.c0))) BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c1)) DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c1)) DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((- (vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS REAL) AS TEXT)) ORDER BY (((NOT (vt0.c0))) BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c1)) DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((- (vt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((((((((('')AND(((vt1.c0)IS NOT(vt1.c0)))))AND((- (vt1.c0)))))OR(((vt1.c0)*(vt1.c0)))))AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((-2.13775274E9, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS BLOB)  NULLS FIRST, ((CAST(vt1.c0 AS BLOB))%(((vt1.c0)AND(vt1.c0)))) DESC, (((vt1.c0)) NOT BETWEEN ((((vt1.c0)<<(vt1.c0)))) AND ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((('')AND(((vt1.c0)IS NOT(vt1.c0)))))AND((- (vt1.c0)))))OR(((vt1.c0)*(vt1.c0)))))AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((-2.13775274E9, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS BLOB)  NULLS FIRST, ((CAST(vt1.c0 AS BLOB))%(((vt1.c0)AND(vt1.c0)))) DESC, (((vt1.c0)) NOT BETWEEN ((((vt1.c0)<<(vt1.c0)))) AND ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((((((('')AND(((vt1.c0)IS NOT(vt1.c0)))))AND((- (vt1.c0)))))OR(((vt1.c0)*(vt1.c0)))))AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((-2.13775274E9, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS BLOB)  NULLS FIRST, ((CAST(vt1.c0 AS BLOB))%(((vt1.c0)AND(vt1.c0)))) DESC, (((vt1.c0)) NOT BETWEEN ((((vt1.c0)<<(vt1.c0)))) AND ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((('')AND(((vt1.c0)IS NOT(vt1.c0)))))AND((- (vt1.c0)))))OR(((vt1.c0)*(vt1.c0)))))AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((-2.13775274E9, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS BLOB)  NULLS FIRST, ((CAST(vt1.c0 AS BLOB))%(((vt1.c0)AND(vt1.c0)))) DESC, (((vt1.c0)) NOT BETWEEN ((((vt1.c0)<<(vt1.c0)))) AND ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((((((('')AND(((vt1.c0)IS NOT(vt1.c0)))))AND((- (vt1.c0)))))OR(((vt1.c0)*(vt1.c0)))))AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((-2.13775274E9, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS BLOB)  NULLS FIRST, ((CAST(vt1.c0 AS BLOB))%(((vt1.c0)AND(vt1.c0)))) DESC, (((vt1.c0)) NOT BETWEEN ((((vt1.c0)<<(vt1.c0)))) AND ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))))) DESC;
SELECT ALL * FROM vt0 NOT INDEXED, vt1 WHERE (json_patch('IG', (((vt1.c0))<((vt0.c0))))) ORDER BY (- (((0.052126559730238387) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch('IG', (((vt1.c0))<((vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (((0.052126559730238387) ISNULL)))  NULLS FIRST);
SELECT ALL * FROM vt0 NOT INDEXED, vt1 WHERE (json_patch('IG', (((vt1.c0))<((vt0.c0))))) ORDER BY (- (((0.052126559730238387) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch('IG', (((vt1.c0))<((vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (((0.052126559730238387) ISNULL)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (2.013613551E9) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (NULL) AND (((vt0.c0)<=(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((2.013613551E9) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (NULL) AND (((vt0.c0)<=(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (2.013613551E9) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (NULL) AND (((vt0.c0)<=(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((2.013613551E9) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (NULL) AND (((vt0.c0)<=(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (2.013613551E9) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (NULL) AND (((vt0.c0)<=(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((COALESCE(DISTINCT vt1.c0, vt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN (0.27010424083781026) AND ((('1048083780')&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt1.c0, vt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN (0.27010424083781026) AND ((('1048083780')&(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((COALESCE(DISTINCT vt1.c0, vt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN (0.27010424083781026) AND ((('1048083780')&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt1.c0, vt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN (0.27010424083781026) AND ((('1048083780')&(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((COALESCE(DISTINCT vt1.c0, vt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN (0.27010424083781026) AND ((('1048083780')&(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((vt0.c0 IN (vt1.c0)))) ASC, vt0.c1;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((vt0.c0 IN (vt1.c0)))) ASC, vt0.c1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((vt0.c0 IN (vt1.c0)))) ASC, vt0.c1;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((vt0.c0 IN (vt1.c0)))) ASC, vt0.c1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((vt0.c0 IN (vt1.c0)))) ASC, vt0.c1;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt0.c1 THEN (((vt0.c0, vt1.c0, vt0.c0))>((vt0.c0, vt0.c0, vt1.c0))) ELSE 523697659 END) ORDER BY vt1.c0 DESC  NULLS LAST, HEX(DISTINCT vt0.c1) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN (((vt0.c0, vt1.c0, vt0.c0))>((vt0.c0, vt0.c0, vt1.c0))) ELSE 523697659 END) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0 DESC  NULLS LAST, HEX(DISTINCT vt0.c1) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt0.c1 THEN (((vt0.c0, vt1.c0, vt0.c0))>((vt0.c0, vt0.c0, vt1.c0))) ELSE 523697659 END) ORDER BY vt1.c0 DESC  NULLS LAST, HEX(DISTINCT vt0.c1) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN (((vt0.c0, vt1.c0, vt0.c0))>((vt0.c0, vt0.c0, vt1.c0))) ELSE 523697659 END) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0 DESC  NULLS LAST, HEX(DISTINCT vt0.c1) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt0.c1 THEN (((vt0.c0, vt1.c0, vt0.c0))>((vt0.c0, vt0.c0, vt1.c0))) ELSE 523697659 END) ORDER BY vt1.c0 DESC  NULLS LAST, HEX(DISTINCT vt0.c1) COLLATE RTRIM DESC;
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c0;
SELECT * FROM vt1 WHERE ('()');
SELECT SUM(count) FROM (SELECT ALL (('()') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('()');
SELECT SUM(count) FROM (SELECT ALL (('()') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('()');
SELECT * FROM vt0 WHERE (vt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1 COLLATE RTRIM);
SELECT * FROM vt1, vt0 WHERE (((vt0.c1 IN (vt0.c1, x'')) IN ())) ORDER BY ((((vt0.c1) NOTNULL))<(CAST(vt0.c0 AS REAL))), (NULL IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN (vt0.c1, x'')) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c1) NOTNULL))<(CAST(vt0.c0 AS REAL))), (NULL IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((vt0.c1 IN (vt0.c1, x'')) IN ())) ORDER BY ((((vt0.c1) NOTNULL))<(CAST(vt0.c0 AS REAL))), (NULL IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN (vt0.c1, x'')) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c1) NOTNULL))<(CAST(vt0.c0 AS REAL))), (NULL IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((vt0.c1 IN (vt0.c1, x'')) IN ())) ORDER BY ((((vt0.c1) NOTNULL))<(CAST(vt0.c0 AS REAL))), (NULL IN ()) DESC  NULLS FIRST;
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((((((x'7a4c')AND(((vt1.c0)>=(NULL)))))AND(((0.5809849902739029)>(vt1.c0)))))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))))AND((vt0.c0 IN ()))) WHERE (vt0.c0) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))>>(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((((x'7a4c')AND(((vt1.c0)>=(NULL)))))AND(((0.5809849902739029)>(vt1.c0)))))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))))AND((vt0.c0 IN ()))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))>>(vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((((((x'7a4c')AND(((vt1.c0)>=(NULL)))))AND(((0.5809849902739029)>(vt1.c0)))))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))))AND((vt0.c0 IN ()))) WHERE (vt0.c0) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))>>(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((((x'7a4c')AND(((vt1.c0)>=(NULL)))))AND(((0.5809849902739029)>(vt1.c0)))))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))))AND((vt0.c0 IN ()))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))>>(vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((((((x'7a4c')AND(((vt1.c0)>=(NULL)))))AND(((0.5809849902739029)>(vt1.c0)))))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))))AND((vt0.c0 IN ()))) WHERE (vt0.c0) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))>>(vt0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS REAL) THEN (((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN vt1.c0 COLLATE RTRIM THEN (((vt1.c0))<>((vt1.c0))) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)IS('')) ELSE vt1.c0 END) ORDER BY (+ (vt1.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS REAL) THEN (((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN vt1.c0 COLLATE RTRIM THEN (((vt1.c0))<>((vt1.c0))) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)IS('')) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1 ORDER BY (+ (vt1.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS REAL) THEN (((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN vt1.c0 COLLATE RTRIM THEN (((vt1.c0))<>((vt1.c0))) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)IS('')) ELSE vt1.c0 END) ORDER BY (+ (vt1.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS REAL) THEN (((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN vt1.c0 COLLATE RTRIM THEN (((vt1.c0))<>((vt1.c0))) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)IS('')) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1 ORDER BY (+ (vt1.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS REAL) THEN (((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN vt1.c0 COLLATE RTRIM THEN (((vt1.c0))<>((vt1.c0))) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)IS('')) ELSE vt1.c0 END) ORDER BY (+ (vt1.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM vt1 INNER JOIN vt0 ON ((((CASE vt0.c0  WHEN vt0.c0 THEN x'a6c2' ELSE vt1.c0 END)AND('~<\rF8U')))AND((- (vt0.c0)))) WHERE (CASE ((((((((vt0.c0)OR(NULL)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0))  WHEN (NULL IN ()) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) ELSE (+ (vt0.c1)) END) ORDER BY ((((vt0.c1)>(vt1.c0))) BETWEEN ((((vt0.c0, NULL, x'5e242624'))>((vt0.c1, vt0.c0, vt1.c0)))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST, (vt1.c0 IN (vt0.c1)) COLLATE NOCASE ASC  NULLS LAST, ((((vt1.c0) NOTNULL))/(((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt0.c0)OR(NULL)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0))  WHEN (NULL IN ()) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) ELSE (+ (vt0.c1)) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((CASE vt0.c0  WHEN vt0.c0 THEN x'a6c2' ELSE vt1.c0 END)AND('~<\rF8U')))AND((- (vt0.c0)))) ORDER BY ((((vt0.c1)>(vt1.c0))) BETWEEN ((((vt0.c0, NULL, x'5e242624'))>((vt0.c1, vt0.c0, vt1.c0)))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST, (vt1.c0 IN (vt0.c1)) COLLATE NOCASE ASC  NULLS LAST, ((((vt1.c0) NOTNULL))/(((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(NULL)))) ASC);
SELECT * FROM vt1 INNER JOIN vt0 ON ((((CASE vt0.c0  WHEN vt0.c0 THEN x'a6c2' ELSE vt1.c0 END)AND('~<\rF8U')))AND((- (vt0.c0)))) WHERE (CASE ((((((((vt0.c0)OR(NULL)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0))  WHEN (NULL IN ()) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) ELSE (+ (vt0.c1)) END) ORDER BY ((((vt0.c1)>(vt1.c0))) BETWEEN ((((vt0.c0, NULL, x'5e242624'))>((vt0.c1, vt0.c0, vt1.c0)))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST, (vt1.c0 IN (vt0.c1)) COLLATE NOCASE ASC  NULLS LAST, ((((vt1.c0) NOTNULL))/(((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt0.c0)OR(NULL)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0))  WHEN (NULL IN ()) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) ELSE (+ (vt0.c1)) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((CASE vt0.c0  WHEN vt0.c0 THEN x'a6c2' ELSE vt1.c0 END)AND('~<\rF8U')))AND((- (vt0.c0)))) ORDER BY ((((vt0.c1)>(vt1.c0))) BETWEEN ((((vt0.c0, NULL, x'5e242624'))>((vt0.c1, vt0.c0, vt1.c0)))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST, (vt1.c0 IN (vt0.c1)) COLLATE NOCASE ASC  NULLS LAST, ((((vt1.c0) NOTNULL))/(((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(NULL)))) ASC);
SELECT * FROM vt1 INNER JOIN vt0 ON ((((CASE vt0.c0  WHEN vt0.c0 THEN x'a6c2' ELSE vt1.c0 END)AND('~<\rF8U')))AND((- (vt0.c0)))) WHERE (CASE ((((((((vt0.c0)OR(NULL)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0))  WHEN (NULL IN ()) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) ELSE (+ (vt0.c1)) END) ORDER BY ((((vt0.c1)>(vt1.c0))) BETWEEN ((((vt0.c0, NULL, x'5e242624'))>((vt0.c1, vt0.c0, vt1.c0)))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST, (vt1.c0 IN (vt0.c1)) COLLATE NOCASE ASC  NULLS LAST, ((((vt1.c0) NOTNULL))/(((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(NULL)))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1 CROSS JOIN vt0 ON LIKELIHOOD((((((((('S_')OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(vt1.c0)), 0.9140104666614164) WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))>((((vt1.c0))==((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))>((((vt1.c0))==((vt0.c1)))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON LIKELIHOOD((((((((('S_')OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(vt1.c0)), 0.9140104666614164));
SELECT * FROM vt1 CROSS JOIN vt0 ON LIKELIHOOD((((((((('S_')OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(vt1.c0)), 0.9140104666614164) WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))>((((vt1.c0))==((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))>((((vt1.c0))==((vt0.c1)))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON LIKELIHOOD((((((((('S_')OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(vt1.c0)), 0.9140104666614164));
SELECT * FROM vt1 CROSS JOIN vt0 ON LIKELIHOOD((((((((('S_')OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(vt1.c0)), 0.9140104666614164) WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))>((((vt1.c0))==((vt0.c1))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY (x'' IN ()) ASC  NULLS FIRST, ((NULLIF(vt0.c0, vt1.c0)) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((NULL) BETWEEN (vt0.c0) AND (0x2d0deb1f))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY (x'' IN ()) ASC  NULLS FIRST, ((NULLIF(vt0.c0, vt1.c0)) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((NULL) BETWEEN (vt0.c0) AND (0X2d0deb1f))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY (x'' IN ()) ASC  NULLS FIRST, ((NULLIF(vt0.c0, vt1.c0)) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((NULL) BETWEEN (vt0.c0) AND (0x2d0deb1f))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY (x'' IN ()) ASC  NULLS FIRST, ((NULLIF(vt0.c0, vt1.c0)) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((NULL) BETWEEN (vt0.c0) AND (0X2d0deb1f))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY (x'' IN ()) ASC  NULLS FIRST, ((NULLIF(vt0.c0, vt1.c0)) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((NULL) BETWEEN (vt0.c0) AND (0x2d0deb1f))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT NULL)) ORDER BY (((NOT (vt0.c0))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT NULL)) ORDER BY (((NOT (vt0.c0))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT NULL)) ORDER BY (((NOT (vt0.c0))) NOT NULL) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))&(LOWER(vt0.c0)))) ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL), NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt0.c0)))&(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL), NULL ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))&(LOWER(vt0.c0)))) ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL), NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt0.c0)))&(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL), NULL ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))&(LOWER(vt0.c0)))) ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL), NULL ASC;
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY CAST(json_insert(vt1.c0, vt1.c0, vt1.c0) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 ORDER BY CAST(json_insert(vt1.c0, vt1.c0, vt1.c0) AS INTEGER) DESC);
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY CAST(json_insert(vt1.c0, vt1.c0, vt1.c0) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 ORDER BY CAST(json_insert(vt1.c0, vt1.c0, vt1.c0) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (vt1.c0)) COLLATE NOCASE) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (vt1.c0)) COLLATE NOCASE) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (vt1.c0)) COLLATE NOCASE) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((SQLITE_COMPILEOPTION_GET(vt0.c0)) NOT NULL)) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_GET(vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (((SQLITE_COMPILEOPTION_GET(vt0.c0)) NOT NULL)) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_GET(vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (((SQLITE_COMPILEOPTION_GET(vt0.c0)) NOT NULL)) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON '\DA''Rcf2j' WHERE (((CAST('743477317' AS TEXT))IS(vt0.c0))) ORDER BY (('') IS TRUE), (CAST(vt1.c0 AS REAL) IN (CAST(vt0.c1 AS INTEGER))) ASC, vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('743477317' AS TEXT))IS(vt0.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON '\DA''Rcf2j' ORDER BY (('') IS TRUE), (CAST(vt1.c0 AS REAL) IN (CAST(vt0.c1 AS INTEGER))) ASC, vt1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON '\DA''Rcf2j' WHERE (((CAST('743477317' AS TEXT))IS(vt0.c0))) ORDER BY (('') IS TRUE), (CAST(vt1.c0 AS REAL) IN (CAST(vt0.c1 AS INTEGER))) ASC, vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('743477317' AS TEXT))IS(vt0.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON '\DA''Rcf2j' ORDER BY (('') IS TRUE), (CAST(vt1.c0 AS REAL) IN (CAST(vt0.c1 AS INTEGER))) ASC, vt1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON '\DA''Rcf2j' WHERE (((CAST('743477317' AS TEXT))IS(vt0.c0))) ORDER BY (('') IS TRUE), (CAST(vt1.c0 AS REAL) IN (CAST(vt0.c1 AS INTEGER))) ASC, vt1.c0 ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(0.8322560783398385)))OR(0.4387882402858333)))OR(LTRIM(vt1.c0, vt1.c0))))OR(vt1.c0 COLLATE NOCASE))) ORDER BY (((vt1.c0) ISNULL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(0.8322560783398385)))OR(0.4387882402858333)))OR(LTRIM(vt1.c0, vt1.c0))))OR(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) ISNULL) IN ()));
SELECT * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(0.8322560783398385)))OR(0.4387882402858333)))OR(LTRIM(vt1.c0, vt1.c0))))OR(vt1.c0 COLLATE NOCASE))) ORDER BY (((vt1.c0) ISNULL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(0.8322560783398385)))OR(0.4387882402858333)))OR(LTRIM(vt1.c0, vt1.c0))))OR(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) ISNULL) IN ()));
SELECT * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(0.8322560783398385)))OR(0.4387882402858333)))OR(LTRIM(vt1.c0, vt1.c0))))OR(vt1.c0 COLLATE NOCASE))) ORDER BY (((vt1.c0) ISNULL) IN ());
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY ABS(json_quote(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY ABS(json_quote(vt0.c0)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY ABS(json_quote(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY ABS(json_quote(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (0.1860975444051589) ORDER BY ((((vt0.c0) NOT NULL))-(((vt0.c0)+(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.1860975444051589) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))-(((vt0.c0)+(vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (0.1860975444051589) ORDER BY ((((vt0.c0) NOT NULL))-(((vt0.c0)+(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.1860975444051589) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))-(((vt0.c0)+(vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (0.1860975444051589) ORDER BY ((((vt0.c0) NOT NULL))-(((vt0.c0)+(vt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0))<((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0))<((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0))<((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0))<((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0))<((vt0.c1))))));
SELECT * FROM vt1, vt0 WHERE (((0Xffffffffcd281013) NOT BETWEEN (((vt0.c0) ISNULL)) AND ('ak')));
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffcd281013) NOT BETWEEN (((vt0.c0) ISNULL)) AND ('ak'))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((0Xffffffffcd281013) NOT BETWEEN (((vt0.c0) ISNULL)) AND ('ak')));
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffcd281013) NOT BETWEEN (((vt0.c0) ISNULL)) AND ('ak'))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((0Xffffffffcd281013) NOT BETWEEN (((vt0.c0) ISNULL)) AND ('ak')));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((((vt0.c1)>(vt0.c1))))>(((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)>(vt0.c1))))>(((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1)))))));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((((vt0.c1)>(vt0.c1))))>(((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)>(vt0.c1))))>(((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1)))))));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((((vt0.c1)>(vt0.c1))))>(((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))))));
SELECT COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (((NULL) ISNULL));
SELECT * FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN ())) ORDER BY CAST((+ (vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)LIKE(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST((+ (vt0.c0)) AS NUMERIC) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN ())) ORDER BY CAST((+ (vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)LIKE(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST((+ (vt0.c0)) AS NUMERIC) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN ())) ORDER BY CAST((+ (vt0.c0)) AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN x'b5c527fadcf7' WHEN vt0.c0 THEN (('-167832532') IS TRUE) WHEN x'' THEN HEX(DISTINCT vt0.c0) ELSE NULL END) ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN vt0.c1 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN x'b5c527fadcf7' WHEN vt0.c0 THEN (('-167832532') IS TRUE) WHEN x'' THEN HEX(DISTINCT vt0.c0) ELSE NULL END) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN vt0.c1 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN x'b5c527fadcf7' WHEN vt0.c0 THEN (('-167832532') IS TRUE) WHEN x'' THEN HEX(DISTINCT vt0.c0) ELSE NULL END) ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN vt0.c1 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN x'b5c527fadcf7' WHEN vt0.c0 THEN (('-167832532') IS TRUE) WHEN x'' THEN HEX(DISTINCT vt0.c0) ELSE NULL END) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN vt0.c1 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN x'b5c527fadcf7' WHEN vt0.c0 THEN (('-167832532') IS TRUE) WHEN x'' THEN HEX(DISTINCT vt0.c0) ELSE NULL END) ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN vt0.c1 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)OR(x'')))OR((((0.9676305326746858)) BETWEEN ((vt1.c0)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(x'')))OR((((0.9676305326746858)) BETWEEN ((vt1.c0)) AND ((NULL)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)OR(x'')))OR((((0.9676305326746858)) BETWEEN ((vt1.c0)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(x'')))OR((((0.9676305326746858)) BETWEEN ((vt1.c0)) AND ((NULL)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)OR(x'')))OR((((0.9676305326746858)) BETWEEN ((vt1.c0)) AND ((NULL))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST((((vt0.c1))<=((vt0.c0))) AS BLOB)) ORDER BY (~ (((vt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1))<=((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (((vt0.c1) NOTNULL))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST((((vt0.c1))<=((vt0.c0))) AS BLOB)) ORDER BY (~ (((vt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1))<=((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (((vt0.c1) NOTNULL))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST((((vt0.c1))<=((vt0.c0))) AS BLOB)) ORDER BY (~ (((vt0.c1) NOTNULL))) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))) NOTNULL)) ORDER BY ((UPPER(NULL))>>((vt1.c0 IN ()))) DESC  NULLS LAST, JULIANDAY(LIKELIHOOD(DISTINCT vt1.c0, 0.6265449692275081), (NOT (vt0.c0)), (vt1.c0 IN (vt0.c0)), CAST(vt0.c1 AS BLOB), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((UPPER(NULL))>>((vt1.c0 IN ()))) DESC  NULLS LAST, JULIANDAY(LIKELIHOOD(DISTINCT vt1.c0, 0.6265449692275081), (NOT (vt0.c0)), (vt1.c0 IN (vt0.c0)), CAST(vt0.c1 AS BLOB), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))) NOTNULL)) ORDER BY ((UPPER(NULL))>>((vt1.c0 IN ()))) DESC  NULLS LAST, JULIANDAY(LIKELIHOOD(DISTINCT vt1.c0, 0.6265449692275081), (NOT (vt0.c0)), (vt1.c0 IN (vt0.c0)), CAST(vt0.c1 AS BLOB), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((UPPER(NULL))>>((vt1.c0 IN ()))) DESC  NULLS LAST, JULIANDAY(LIKELIHOOD(DISTINCT vt1.c0, 0.6265449692275081), (NOT (vt0.c0)), (vt1.c0 IN (vt0.c0)), CAST(vt0.c1 AS BLOB), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))) NOTNULL)) ORDER BY ((UPPER(NULL))>>((vt1.c0 IN ()))) DESC  NULLS LAST, JULIANDAY(LIKELIHOOD(DISTINCT vt1.c0, 0.6265449692275081), (NOT (vt0.c0)), (vt1.c0 IN (vt0.c0)), CAST(vt0.c1 AS BLOB), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT ALL * FROM vt1 WHERE (((NOT (vt1.c0)) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), CAST(vt1.c0 AS NUMERIC)))) ORDER BY CAST(vt1.c0 AS NUMERIC) ASC, ((CAST(vt1.c0 AS NUMERIC))>=(0X78054def));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt1.c0)) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS NUMERIC) ASC, ((CAST(vt1.c0 AS NUMERIC))>=(0x78054def)));
SELECT ALL * FROM vt1 WHERE (((NOT (vt1.c0)) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), CAST(vt1.c0 AS NUMERIC)))) ORDER BY CAST(vt1.c0 AS NUMERIC) ASC, ((CAST(vt1.c0 AS NUMERIC))>=(0X78054def));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt1.c0)) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS NUMERIC) ASC, ((CAST(vt1.c0 AS NUMERIC))>=(0x78054def)));
SELECT ALL * FROM vt1 WHERE (((NOT (vt1.c0)) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), CAST(vt1.c0 AS NUMERIC)))) ORDER BY CAST(vt1.c0 AS NUMERIC) ASC, ((CAST(vt1.c0 AS NUMERIC))>=(0X78054def));
SELECT ALL * FROM vt0, vt1 NOT INDEXED WHERE (LIKELY(DISTINCT (vt1.c0 IN (vt1.c0)))) ORDER BY CASE ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR('755886879')))OR(vt1.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) THEN 7.43477317E8 WHEN ((vt1.c0)IS NOT(vt0.c0)) THEN ((vt0.c1) ISNULL) WHEN NULL COLLATE BINARY THEN vt0.c0 ELSE vt0.c1 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (vt1.c0 IN (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR('755886879')))OR(vt1.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) THEN 7.43477317E8 WHEN ((vt1.c0)IS NOT(vt0.c0)) THEN ((vt0.c1) ISNULL) WHEN NULL COLLATE BINARY THEN vt0.c0 ELSE vt0.c1 END DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 NOT INDEXED WHERE (LIKELY(DISTINCT (vt1.c0 IN (vt1.c0)))) ORDER BY CASE ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR('755886879')))OR(vt1.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) THEN 7.43477317E8 WHEN ((vt1.c0)IS NOT(vt0.c0)) THEN ((vt0.c1) ISNULL) WHEN NULL COLLATE BINARY THEN vt0.c0 ELSE vt0.c1 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (vt1.c0 IN (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR('755886879')))OR(vt1.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) THEN 7.43477317E8 WHEN ((vt1.c0)IS NOT(vt0.c0)) THEN ((vt0.c1) ISNULL) WHEN NULL COLLATE BINARY THEN vt0.c0 ELSE vt0.c1 END DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 NOT INDEXED WHERE (LIKELY(DISTINCT (vt1.c0 IN (vt1.c0)))) ORDER BY CASE ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR('755886879')))OR(vt1.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) THEN 7.43477317E8 WHEN ((vt1.c0)IS NOT(vt0.c0)) THEN ((vt0.c1) ISNULL) WHEN NULL COLLATE BINARY THEN vt0.c0 ELSE vt0.c1 END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE x'374d'  WHEN (+ (vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) WHEN vt0.c1 COLLATE BINARY THEN vt1.c0 COLLATE BINARY WHEN ((vt0.c1) IS FALSE) THEN ((((((((vt0.c0)OR(vt0.c1)))OR(0.7327294627895672)))OR(vt1.c0)))AND(vt0.c1)) END WHERE ((CAST(vt1.c0 AS INTEGER) IN ((~ (vt1.c0))))) ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c1)AND(vt0.c1)))) AND ((((vt0.c1)AND(vt0.c0))))), ((vt1.c0 IN ()) IN (CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS INTEGER) IN ((~ (vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE x'374d'  WHEN (+ (vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) WHEN vt0.c1 COLLATE BINARY THEN vt1.c0 COLLATE BINARY WHEN ((vt0.c1) IS FALSE) THEN ((((((((vt0.c0)OR(vt0.c1)))OR(0.7327294627895672)))OR(vt1.c0)))AND(vt0.c1)) END ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c1)AND(vt0.c1)))) AND ((((vt0.c1)AND(vt0.c0))))), ((vt1.c0 IN ()) IN (CAST(vt0.c0 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE x'374d'  WHEN (+ (vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) WHEN vt0.c1 COLLATE BINARY THEN vt1.c0 COLLATE BINARY WHEN ((vt0.c1) IS FALSE) THEN ((((((((vt0.c0)OR(vt0.c1)))OR(0.7327294627895672)))OR(vt1.c0)))AND(vt0.c1)) END WHERE ((CAST(vt1.c0 AS INTEGER) IN ((~ (vt1.c0))))) ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c1)AND(vt0.c1)))) AND ((((vt0.c1)AND(vt0.c0))))), ((vt1.c0 IN ()) IN (CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS INTEGER) IN ((~ (vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE x'374d'  WHEN (+ (vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) WHEN vt0.c1 COLLATE BINARY THEN vt1.c0 COLLATE BINARY WHEN ((vt0.c1) IS FALSE) THEN ((((((((vt0.c0)OR(vt0.c1)))OR(0.7327294627895672)))OR(vt1.c0)))AND(vt0.c1)) END ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c1)AND(vt0.c1)))) AND ((((vt0.c1)AND(vt0.c0))))), ((vt1.c0 IN ()) IN (CAST(vt0.c0 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE x'374d'  WHEN (+ (vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) WHEN vt0.c1 COLLATE BINARY THEN vt1.c0 COLLATE BINARY WHEN ((vt0.c1) IS FALSE) THEN ((((((((vt0.c0)OR(vt0.c1)))OR(0.7327294627895672)))OR(vt1.c0)))AND(vt0.c1)) END WHERE ((CAST(vt1.c0 AS INTEGER) IN ((~ (vt1.c0))))) ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c1)AND(vt0.c1)))) AND ((((vt0.c1)AND(vt0.c0))))), ((vt1.c0 IN ()) IN (CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(NULL AS NUMERIC)  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN 's_' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c0) NOTNULL) END) ORDER BY CAST(x'' AS NUMERIC), ((vt0.c1 IN (vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE CAST(NULL AS NUMERIC)  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN 's_' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'' AS NUMERIC), ((vt0.c1 IN (vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(NULL AS NUMERIC)  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN 's_' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c0) NOTNULL) END) ORDER BY CAST(x'' AS NUMERIC), ((vt0.c1 IN (vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE CAST(NULL AS NUMERIC)  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN 's_' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'' AS NUMERIC), ((vt0.c1 IN (vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(NULL AS NUMERIC)  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN 's_' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c0) NOTNULL) END) ORDER BY CAST(x'' AS NUMERIC), ((vt0.c1 IN (vt0.c1)) IN ());
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT NULL));
SELECT * FROM vt1 WHERE (((((vt1.c0)|(vt1.c0))) NOT BETWEEN (vt1.c0) AND ((x'' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)|(vt1.c0))) NOT BETWEEN (vt1.c0) AND ((x'' IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)|(vt1.c0))) NOT BETWEEN (vt1.c0) AND ((x'' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)|(vt1.c0))) NOT BETWEEN (vt1.c0) AND ((x'' IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)|(vt1.c0))) NOT BETWEEN (vt1.c0) AND ((x'' IN ()))));
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, ''))<=((vt0.c1, vt0.c1, vt0.c0)))) NOTNULL)) ORDER BY CAST(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, ''))<=((vt0.c1, vt0.c1, vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) AS BLOB)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, ''))<=((vt0.c1, vt0.c1, vt0.c0)))) NOTNULL)) ORDER BY CAST(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, ''))<=((vt0.c1, vt0.c1, vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) AS BLOB)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, ''))<=((vt0.c1, vt0.c1, vt0.c0)))) NOTNULL)) ORDER BY CAST(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((- (CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN '1' THEN vt0.c1 END))) ORDER BY x''  NULLS LAST, (~ (vt0.c1)) DESC  NULLS LAST, UNLIKELY(DISTINCT (((vt0.c0))=((vt0.c1))));
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN '1' THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS LAST, (~ (vt0.c1)) DESC  NULLS LAST, UNLIKELY(DISTINCT (((vt0.c0))=((vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((- (CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN '1' THEN vt0.c1 END))) ORDER BY x''  NULLS LAST, (~ (vt0.c1)) DESC  NULLS LAST, UNLIKELY(DISTINCT (((vt0.c0))=((vt0.c1))));
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN '1' THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS LAST, (~ (vt0.c1)) DESC  NULLS LAST, UNLIKELY(DISTINCT (((vt0.c0))=((vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((- (CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN '1' THEN vt0.c1 END))) ORDER BY x''  NULLS LAST, (~ (vt0.c1)) DESC  NULLS LAST, UNLIKELY(DISTINCT (((vt0.c0))=((vt0.c1))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) IN (((vt0.c0)IS NOT(vt0.c0)), ((vt0.c1)IS(vt0.c1)))) WHERE (((vt1.c0 COLLATE BINARY) NOT NULL)) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c1) AND ('Fn')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) IN (((vt0.c0)IS NOT(vt0.c0)), ((vt0.c1)IS(vt0.c1)))) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c1) AND ('Fn')))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) IN (((vt0.c0)IS NOT(vt0.c0)), ((vt0.c1)IS(vt0.c1)))) WHERE (((vt1.c0 COLLATE BINARY) NOT NULL)) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c1) AND ('Fn')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) IN (((vt0.c0)IS NOT(vt0.c0)), ((vt0.c1)IS(vt0.c1)))) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c1) AND ('Fn')))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) IN (((vt0.c0)IS NOT(vt0.c0)), ((vt0.c1)IS(vt0.c1)))) WHERE (((vt1.c0 COLLATE BINARY) NOT NULL)) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c1) AND ('Fn')))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))LIKE(CASE NULL  WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY (((vt0.c0 IN ()))IS NOT((+ (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))LIKE(CASE NULL  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0 IN ()))IS NOT((+ (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))LIKE(CASE NULL  WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY (((vt0.c0 IN ()))IS NOT((+ (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))LIKE(CASE NULL  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0 IN ()))IS NOT((+ (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))LIKE(CASE NULL  WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY (((vt0.c0 IN ()))IS NOT((+ (vt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)*(((vt0.c0)IS(vt0.c0))))) ORDER BY NULLIF(vt0.c1, vt0.c0) COLLATE BINARY ASC  NULLS LAST, ((CASE '1529639429'  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (x'febc'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(vt0.c1, vt0.c0) COLLATE BINARY ASC  NULLS LAST, ((CASE '1529639429'  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (x'febc'))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)*(((vt0.c0)IS(vt0.c0))))) ORDER BY NULLIF(vt0.c1, vt0.c0) COLLATE BINARY ASC  NULLS LAST, ((CASE '1529639429'  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (x'febc'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(vt0.c1, vt0.c0) COLLATE BINARY ASC  NULLS LAST, ((CASE '1529639429'  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (x'febc'))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)*(((vt0.c0)IS(vt0.c0))))) ORDER BY NULLIF(vt0.c1, vt0.c0) COLLATE BINARY ASC  NULLS LAST, ((CASE '1529639429'  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (x'febc'))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1))=((vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1))==((vt0.c1)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1))=((vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1))==((vt0.c1)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1))=((vt0.c1))));
SELECT * FROM vt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c1)) COLLATE NOCASE) ORDER BY CAST(((vt0.c1)>>(vt1.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt0.c1)>>(vt1.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c1)) COLLATE NOCASE) ORDER BY CAST(((vt0.c1)>>(vt1.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt0.c1)>>(vt1.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c1)) COLLATE NOCASE) ORDER BY CAST(((vt0.c1)>>(vt1.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)>(-1301720263))) ORDER BY CASE ((vt0.c1) ISNULL)  WHEN vt1.c0 COLLATE RTRIM THEN x'aa31' END;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(-1301720263))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE ((vt0.c1) ISNULL)  WHEN vt1.c0 COLLATE RTRIM THEN x'aa31' END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)>(-1301720263))) ORDER BY CASE ((vt0.c1) ISNULL)  WHEN vt1.c0 COLLATE RTRIM THEN x'aa31' END;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(-1301720263))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE ((vt0.c1) ISNULL)  WHEN vt1.c0 COLLATE RTRIM THEN x'aa31' END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)>(-1301720263))) ORDER BY CASE ((vt0.c1) ISNULL)  WHEN vt1.c0 COLLATE RTRIM THEN x'aa31' END;
SELECT * FROM vt0, vt1 WHERE ((~ (((vt0.c1)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1)<<(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((~ (((vt0.c1)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1)<<(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((~ (((vt0.c1)<<(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((CAST(vt0.c1 AS TEXT) IN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY TRIM('523697659' COLLATE RTRIM, TRIM(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS TEXT) IN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TRIM('523697659' COLLATE RTRIM, TRIM(vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((CAST(vt0.c1 AS TEXT) IN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY TRIM('523697659' COLLATE RTRIM, TRIM(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS TEXT) IN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TRIM('523697659' COLLATE RTRIM, TRIM(vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((CAST(vt0.c1 AS TEXT) IN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY TRIM('523697659' COLLATE RTRIM, TRIM(vt1.c0)) ASC;
SELECT * FROM vt0 WHERE (((((vt0.c1)OR(vt0.c1)))OR(NULL)) COLLATE NOCASE) ORDER BY ((0.06120360123211033)<<(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(vt0.c1)))OR(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((0.06120360123211033)<<(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1)OR(vt0.c1)))OR(NULL)) COLLATE NOCASE) ORDER BY ((0.06120360123211033)<<(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(vt0.c1)))OR(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((0.06120360123211033)<<(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1)OR(vt0.c1)))OR(NULL)) COLLATE NOCASE) ORDER BY ((0.06120360123211033)<<(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (vt0.c0 COLLATE RTRIM IN ((vt0.c1 IN (vt0.c0)), ((vt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE RTRIM IN ((vt0.c1 IN (vt0.c0)), ((vt0.c1) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (vt0.c0 COLLATE RTRIM IN ((vt0.c1 IN (vt0.c0)), ((vt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE RTRIM IN ((vt0.c1 IN (vt0.c0)), ((vt0.c1) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (vt0.c0 COLLATE RTRIM IN ((vt0.c1 IN (vt0.c0)), ((vt0.c1) IS TRUE)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ ((- (vt1.c0))))) ORDER BY ((((((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((- (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ ((- (vt1.c0))))) ORDER BY ((((((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((- (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ ((- (vt1.c0))))) ORDER BY ((((((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (COALESCE(CAST(vt1.c0 AS REAL), ((vt1.c0)OR(vt1.c0)))) ORDER BY x'' COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(vt1.c0 AS REAL), ((vt1.c0)OR(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY x'' COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (COALESCE(CAST(vt1.c0 AS REAL), ((vt1.c0)OR(vt1.c0)))) ORDER BY x'' COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(vt1.c0 AS REAL), ((vt1.c0)OR(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY x'' COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (COALESCE(CAST(vt1.c0 AS REAL), ((vt1.c0)OR(vt1.c0)))) ORDER BY x'' COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN (vt1.c0)) AS TEXT)) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND (((((vt1.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt1.c0)))))) DESC, '668089570' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND (((((vt1.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt1.c0)))))) DESC, '668089570' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN (vt1.c0)) AS TEXT)) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND (((((vt1.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt1.c0)))))) DESC, '668089570' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND (((((vt1.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt1.c0)))))) DESC, '668089570' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN (vt1.c0)) AS TEXT)) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND (((((vt1.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt1.c0)))))) DESC, '668089570' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) IS FALSE) COLLATE NOCASE) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((vt0.c0 COLLATE BINARY))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((vt0.c0 COLLATE BINARY))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) IS FALSE) COLLATE NOCASE) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((vt0.c0 COLLATE BINARY))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((vt0.c0 COLLATE BINARY))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) IS FALSE) COLLATE NOCASE) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((vt0.c0 COLLATE BINARY))) ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY ((((vt0.c1)<(vt1.c0)))<<(vt1.c0)) ASC  NULLS FIRST, (((((vt0.c1 IN (vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(TRIM(DISTINCT vt0.c1))), ((('B,lo' IN ()))<(((vt0.c0) IS FALSE))), STRFTIME(((vt0.c1) BETWEEN (vt0.c1) AND ('-2130336947')), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 ELSE vt0.c1 END, vt0.c0) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c1)<(vt1.c0)))<<(vt1.c0)) ASC  NULLS FIRST, (((((vt0.c1 IN (vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(TRIM(DISTINCT vt0.c1))), ((('B,lo' IN ()))<(((vt0.c0) IS FALSE))), STRFTIME(((vt0.c1) BETWEEN (vt0.c1) AND ('-2130336947')), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 ELSE vt0.c1 END, vt0.c0) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY ((((vt0.c1)<(vt1.c0)))<<(vt1.c0)) ASC  NULLS FIRST, (((((vt0.c1 IN (vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(TRIM(DISTINCT vt0.c1))), ((('B,lo' IN ()))<(((vt0.c0) IS FALSE))), STRFTIME(((vt0.c1) BETWEEN (vt0.c1) AND ('-2130336947')), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 ELSE vt0.c1 END, vt0.c0) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c1)<(vt1.c0)))<<(vt1.c0)) ASC  NULLS FIRST, (((((vt0.c1 IN (vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(TRIM(DISTINCT vt0.c1))), ((('B,lo' IN ()))<(((vt0.c0) IS FALSE))), STRFTIME(((vt0.c1) BETWEEN (vt0.c1) AND ('-2130336947')), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 ELSE vt0.c1 END, vt0.c0) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY ((((vt0.c1)<(vt1.c0)))<<(vt1.c0)) ASC  NULLS FIRST, (((((vt0.c1 IN (vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(TRIM(DISTINCT vt0.c1))), ((('B,lo' IN ()))<(((vt0.c0) IS FALSE))), STRFTIME(((vt0.c1) BETWEEN (vt0.c1) AND ('-2130336947')), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 ELSE vt0.c1 END, vt0.c0) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))OR('+Rime*g_'))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c1)))OR('+Rime*g_'))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))OR('+Rime*g_'))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c1)))OR('+Rime*g_'))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))OR('+Rime*g_'))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND ((NOT (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0))<=((vt0.c0))))&((vt0.c0 IN (vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))<=((vt0.c0))))&((vt0.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0))<=((vt0.c0))))&((vt0.c0 IN (vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))<=((vt0.c0))))&((vt0.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0))<=((vt0.c0))))&((vt0.c0 IN (vt1.c0, vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN '-187226978' THEN CASE WHEN '535366366' THEN vt0.c1 END WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN (vt0.c1 IN (vt0.c1)) WHEN ((0x45bf9f90)<<(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOTNULL)  WHEN '-187226978' THEN CASE WHEN '535366366' THEN vt0.c1 END WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN (vt0.c1 IN (vt0.c1)) WHEN ((0X45bf9f90)<<(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN '-187226978' THEN CASE WHEN '535366366' THEN vt0.c1 END WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN (vt0.c1 IN (vt0.c1)) WHEN ((0x45bf9f90)<<(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOTNULL)  WHEN '-187226978' THEN CASE WHEN '535366366' THEN vt0.c1 END WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN (vt0.c1 IN (vt0.c1)) WHEN ((0X45bf9f90)<<(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN '-187226978' THEN CASE WHEN '535366366' THEN vt0.c1 END WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN (vt0.c1 IN (vt0.c1)) WHEN ((0x45bf9f90)<<(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) END);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) ORDER BY (+ (CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY (+ (CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) ORDER BY (+ (CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY (+ (CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) ORDER BY (+ (CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOTNULL))AND(CAST(vt0.c1 AS TEXT))))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOTNULL))AND(CAST(vt0.c1 AS TEXT))))AND(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOTNULL))AND(CAST(vt0.c1 AS TEXT))))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOTNULL))AND(CAST(vt0.c1 AS TEXT))))AND(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOTNULL))AND(CAST(vt0.c1 AS TEXT))))AND(vt0.c1)));
SELECT COUNT(*) FROM vt0 WHERE (0.206068042143436) ORDER BY (((vt0.c0 IN (vt0.c1, vt0.c1)))IS NOT(((vt0.c0) ISNULL))) ASC  NULLS LAST, ((vt0.c0) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.206068042143436) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c1, vt0.c1)))IS NOT(((vt0.c0) ISNULL))) ASC  NULLS LAST, ((vt0.c0) NOTNULL) DESC);
SELECT COUNT(*) FROM vt0 WHERE (0.206068042143436) ORDER BY (((vt0.c0 IN (vt0.c1, vt0.c1)))IS NOT(((vt0.c0) ISNULL))) ASC  NULLS LAST, ((vt0.c0) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.206068042143436) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c1, vt0.c1)))IS NOT(((vt0.c0) ISNULL))) ASC  NULLS LAST, ((vt0.c0) NOTNULL) DESC);
SELECT COUNT(*) FROM vt0 WHERE (0.206068042143436) ORDER BY (((vt0.c0 IN (vt0.c1, vt0.c1)))IS NOT(((vt0.c0) ISNULL))) ASC  NULLS LAST, ((vt0.c0) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE ((NULL) BETWEEN (vt1.c0) AND (vt0.c1))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 END THEN '0.206068042143436' ELSE vt1.c0 END WHERE ((- (((((((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))OR('')))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((('0.557973655984083')) BETWEEN ((((vt0.c0) NOT NULL))) AND ((CAST(vt0.c0 AS INTEGER))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((((((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))OR('')))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE ((NULL) BETWEEN (vt1.c0) AND (vt0.c1))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 END THEN '0.206068042143436' ELSE vt1.c0 END ORDER BY ((('0.557973655984083')) BETWEEN ((((vt0.c0) NOT NULL))) AND ((CAST(vt0.c0 AS INTEGER))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE ((NULL) BETWEEN (vt1.c0) AND (vt0.c1))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 END THEN '0.206068042143436' ELSE vt1.c0 END WHERE ((- (((((((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))OR('')))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((('0.557973655984083')) BETWEEN ((((vt0.c0) NOT NULL))) AND ((CAST(vt0.c0 AS INTEGER))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((((((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))OR('')))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE ((NULL) BETWEEN (vt1.c0) AND (vt0.c1))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 END THEN '0.206068042143436' ELSE vt1.c0 END ORDER BY ((('0.557973655984083')) BETWEEN ((((vt0.c0) NOT NULL))) AND ((CAST(vt0.c0 AS INTEGER))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE ((NULL) BETWEEN (vt1.c0) AND (vt0.c1))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 END THEN '0.206068042143436' ELSE vt1.c0 END WHERE ((- (((((((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))OR('')))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((('0.557973655984083')) BETWEEN ((((vt0.c0) NOT NULL))) AND ((CAST(vt0.c0 AS INTEGER))))  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((((vt1.c0)/(vt1.c0)), ((vt1.c0)>=(vt1.c0)), (vt1.c0 IN ())))!=((((134692016) ISNULL), TRIM('lQ'), COALESCE(DISTINCT vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)/(vt1.c0)), ((vt1.c0)>=(vt1.c0)), (vt1.c0 IN ())))<>((((134692016) ISNULL), TRIM('lQ'), COALESCE(DISTINCT vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0)/(vt1.c0)), ((vt1.c0)>=(vt1.c0)), (vt1.c0 IN ())))!=((((134692016) ISNULL), TRIM('lQ'), COALESCE(DISTINCT vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)/(vt1.c0)), ((vt1.c0)>=(vt1.c0)), (vt1.c0 IN ())))<>((((134692016) ISNULL), TRIM('lQ'), COALESCE(DISTINCT vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0)/(vt1.c0)), ((vt1.c0)>=(vt1.c0)), (vt1.c0 IN ())))!=((((134692016) ISNULL), TRIM('lQ'), COALESCE(DISTINCT vt1.c0, vt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.060270197816862714))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.060270197816862714))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.060270197816862714))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.060270197816862714))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.060270197816862714))) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((LIKE(vt0.c0, vt0.c0))+(((vt0.c0)>=(0.42638327067906157))))) ORDER BY 0.6334972473276521  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(vt0.c0, vt0.c0))+(((vt0.c0)>=(0.42638327067906157))))) IS TRUE)  as count FROM vt0 ORDER BY 0.6334972473276521  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((LIKE(vt0.c0, vt0.c0))+(((vt0.c0)>=(0.42638327067906157))))) ORDER BY 0.6334972473276521  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(vt0.c0, vt0.c0))+(((vt0.c0)>=(0.42638327067906157))))) IS TRUE)  as count FROM vt0 ORDER BY 0.6334972473276521  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((LIKE(vt0.c0, vt0.c0))+(((vt0.c0)>=(0.42638327067906157))))) ORDER BY 0.6334972473276521  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))OR((((vt0.c0))<=((vt0.c0))))))OR(((vt1.c0) IS TRUE))))OR((x'6ea8' IN (vt0.c0)))))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))OR((((vt0.c0))<=((vt0.c0))))))OR(((vt1.c0) IS TRUE))))OR((x'6ea8' IN (vt0.c0)))))AND(vt0.c1))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))OR((((vt0.c0))<=((vt0.c0))))))OR(((vt1.c0) IS TRUE))))OR((x'6ea8' IN (vt0.c0)))))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))OR((((vt0.c0))<=((vt0.c0))))))OR(((vt1.c0) IS TRUE))))OR((x'6ea8' IN (vt0.c0)))))AND(vt0.c1))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))OR((((vt0.c0))<=((vt0.c0))))))OR(((vt1.c0) IS TRUE))))OR((x'6ea8' IN (vt0.c0)))))AND(vt0.c1)));
SELECT ALL * FROM vt0 WHERE (((LTRIM(NULL))AND(((((vt0.c0)OR(x'0f69')))OR(vt0.c1))))) ORDER BY TYPEOF(((vt0.c1)IS(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((LTRIM(NULL))AND(((((vt0.c0)OR(x'0f69')))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(((vt0.c1)IS(vt0.c0))) ASC);
SELECT ALL * FROM vt0 WHERE (((LTRIM(NULL))AND(((((vt0.c0)OR(x'0f69')))OR(vt0.c1))))) ORDER BY TYPEOF(((vt0.c1)IS(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((LTRIM(NULL))AND(((((vt0.c0)OR(x'0f69')))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(((vt0.c1)IS(vt0.c0))) ASC);
SELECT ALL * FROM vt0 WHERE (((LTRIM(NULL))AND(((((vt0.c0)OR(x'0f69')))OR(vt0.c1))))) ORDER BY TYPEOF(((vt0.c1)IS(vt0.c0))) ASC;
SELECT * FROM vt1 WHERE (CAST(NULL AS REAL) COLLATE BINARY) ORDER BY ((((vt1.c0)=(vt1.c0))) BETWEEN ((~ (vt1.c0))) AND (CASE vt1.c0  WHEN vt1.c0 THEN NULL END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS REAL) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)=(vt1.c0))) BETWEEN ((~ (vt1.c0))) AND (CASE vt1.c0  WHEN vt1.c0 THEN NULL END)));
SELECT * FROM vt1 WHERE (CAST(NULL AS REAL) COLLATE BINARY) ORDER BY ((((vt1.c0)=(vt1.c0))) BETWEEN ((~ (vt1.c0))) AND (CASE vt1.c0  WHEN vt1.c0 THEN NULL END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS REAL) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)=(vt1.c0))) BETWEEN ((~ (vt1.c0))) AND (CASE vt1.c0  WHEN vt1.c0 THEN NULL END)));
SELECT * FROM vt1 WHERE (CAST(NULL AS REAL) COLLATE BINARY) ORDER BY ((((vt1.c0)=(vt1.c0))) BETWEEN ((~ (vt1.c0))) AND (CASE vt1.c0  WHEN vt1.c0 THEN NULL END));
SELECT * FROM vt0 WHERE (((((vt0.c1)OR(vt0.c1)))<>((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(vt0.c1)))!=((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)OR(vt0.c1)))<>((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(vt0.c1)))!=((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)OR(vt0.c1)))<>((vt0.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((0.43579656819284196)*((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((0.43579656819284196)*((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((0.43579656819284196)*((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((0.43579656819284196)*((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((0.43579656819284196)*((vt0.c1 IN ()))));
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CAST(vt0.c0 AS REAL) THEN CHANGES() END) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, (vt0.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CAST(vt0.c0 AS REAL) THEN CHANGES() END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, (vt0.c1 IN ()) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CAST(vt0.c0 AS REAL) THEN CHANGES() END) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, (vt0.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CAST(vt0.c0 AS REAL) THEN CHANGES() END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, (vt0.c1 IN ()) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CAST(vt0.c0 AS REAL) THEN CHANGES() END) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, (vt0.c1 IN ()) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(x'9e11' AS INTEGER))IS(highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c1)))) ORDER BY CASE ((vt1.c0)<(vt1.c0))  WHEN (vt0.c1 IN ()) THEN (~ (vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((NULL))) WHEN vt0.c0 THEN (~ (vt0.c0)) END ASC  NULLS FIRST, vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(x'9e11' AS INTEGER))IS(highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((vt1.c0)<(vt1.c0))  WHEN (vt0.c1 IN ()) THEN (~ (vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((NULL))) WHEN vt0.c0 THEN (~ (vt0.c0)) END ASC  NULLS FIRST, vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(x'9e11' AS INTEGER))IS(highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c1)))) ORDER BY CASE ((vt1.c0)<(vt1.c0))  WHEN (vt0.c1 IN ()) THEN (~ (vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((NULL))) WHEN vt0.c0 THEN (~ (vt0.c0)) END ASC  NULLS FIRST, vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(x'9e11' AS INTEGER))IS(highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((vt1.c0)<(vt1.c0))  WHEN (vt0.c1 IN ()) THEN (~ (vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((NULL))) WHEN vt0.c0 THEN (~ (vt0.c0)) END ASC  NULLS FIRST, vt0.c1  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0 IN (vt0.c1, vt0.c1)))<(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))))) ORDER BY (- (((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)))OR(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c1, vt0.c1)))<(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)))OR(vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0 IN (vt0.c1, vt0.c1)))<(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))))) ORDER BY (- (((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)))OR(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c1, vt0.c1)))<(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)))OR(vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0 IN (vt0.c1, vt0.c1)))<(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))))) ORDER BY (- (((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)))OR(vt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))))|(0.36114175340835697 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))))|(0.36114175340835697 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))))|(0.36114175340835697 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))))|(0.36114175340835697 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))))|(0.36114175340835697 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)OR(((vt0.c0) NOT BETWEEN (0.3114335042175709) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((((((((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(CAST(0.06034400261621664 AS BLOB))))AND(x'')))AND(((vt0.c1) IS TRUE))))OR((+ (x'')))))AND(NULL)))AND((vt0.c0 IN ()))), vt0.c0, 0Xffffffffa774c708  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)OR(((vt0.c0) NOT BETWEEN (0.3114335042175709) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(CAST(0.06034400261621664 AS BLOB))))AND(x'')))AND(((vt0.c1) IS TRUE))))OR((+ (x'')))))AND(NULL)))AND((vt0.c0 IN ()))), vt0.c0, 0Xffffffffa774c708  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)OR(((vt0.c0) NOT BETWEEN (0.3114335042175709) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((((((((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(CAST(0.06034400261621664 AS BLOB))))AND(x'')))AND(((vt0.c1) IS TRUE))))OR((+ (x'')))))AND(NULL)))AND((vt0.c0 IN ()))), vt0.c0, 0Xffffffffa774c708  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)OR(((vt0.c0) NOT BETWEEN (0.3114335042175709) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(CAST(0.06034400261621664 AS BLOB))))AND(x'')))AND(((vt0.c1) IS TRUE))))OR((+ (x'')))))AND(NULL)))AND((vt0.c0 IN ()))), vt0.c0, 0Xffffffffa774c708  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((- (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((- (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((- (vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((''))<>((((vt0.c0)IS NOT(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((''))!=((((vt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((''))<>((((vt0.c0)IS NOT(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((''))!=((((vt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((''))<>((((vt0.c0)IS NOT(vt0.c0))))));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)&(vt1.c0)) IN (((vt1.c0)OR(vt1.c0))))) ORDER BY ((vt0.c1 COLLATE NOCASE)||('-1219994823'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)&(vt1.c0)) IN (((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1 COLLATE NOCASE)||('-1219994823'))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)&(vt1.c0)) IN (((vt1.c0)OR(vt1.c0))))) ORDER BY ((vt0.c1 COLLATE NOCASE)||('-1219994823'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)&(vt1.c0)) IN (((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1 COLLATE NOCASE)||('-1219994823'))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)&(vt1.c0)) IN (((vt1.c0)OR(vt1.c0))))) ORDER BY ((vt0.c1 COLLATE NOCASE)||('-1219994823'))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM) ORDER BY CAST(NULL AS NUMERIC) DESC  NULLS LAST, ((vt0.c0 COLLATE BINARY) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) AND (vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(NULL AS NUMERIC) DESC  NULLS LAST, ((vt0.c0 COLLATE BINARY) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) AND (vt1.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM) ORDER BY CAST(NULL AS NUMERIC) DESC  NULLS LAST, ((vt0.c0 COLLATE BINARY) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) AND (vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(NULL AS NUMERIC) DESC  NULLS LAST, ((vt0.c0 COLLATE BINARY) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) AND (vt1.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM) ORDER BY CAST(NULL AS NUMERIC) DESC  NULLS LAST, ((vt0.c0 COLLATE BINARY) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) AND (vt1.c0))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((JULIANDAY(vt1.c0, vt1.c0, vt1.c0) IN (vt1.c0, '0.10504001500041027')));
SELECT SUM(count) FROM (SELECT ALL (((JULIANDAY(vt1.c0, vt1.c0, vt1.c0) IN (vt1.c0, '0.10504001500041027'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((JULIANDAY(vt1.c0, vt1.c0, vt1.c0) IN (vt1.c0, '0.10504001500041027')));
SELECT SUM(count) FROM (SELECT ALL (((JULIANDAY(vt1.c0, vt1.c0, vt1.c0) IN (vt1.c0, '0.10504001500041027'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((JULIANDAY(vt1.c0, vt1.c0, vt1.c0) IN (vt1.c0, '0.10504001500041027')));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (~ (LTRIM(vt0.c1, vt0.c1)))  NULLS FIRST, vt0.c1;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (LTRIM(vt0.c1, vt0.c1)))  NULLS FIRST, vt0.c1);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (~ (LTRIM(vt0.c1, vt0.c1)))  NULLS FIRST, vt0.c1;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (LTRIM(vt0.c1, vt0.c1)))  NULLS FIRST, vt0.c1);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (~ (LTRIM(vt0.c1, vt0.c1)))  NULLS FIRST, vt0.c1;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))IS(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))IS(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))IS(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))IS(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))IS(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE ((((((('Nj7^.')OR(vt0.c1)))AND(vt1.c0)))/(vt1.c0))) ORDER BY (NOT (CAST(vt1.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT (((((((('Nj7^.')OR(vt0.c1)))AND(vt1.c0)))/(vt1.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (CAST(vt1.c0 AS TEXT))) ASC);
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE ((((((('Nj7^.')OR(vt0.c1)))AND(vt1.c0)))/(vt1.c0))) ORDER BY (NOT (CAST(vt1.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT (((((((('Nj7^.')OR(vt0.c1)))AND(vt1.c0)))/(vt1.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (CAST(vt1.c0 AS TEXT))) ASC);
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE ((((((('Nj7^.')OR(vt0.c1)))AND(vt1.c0)))/(vt1.c0))) ORDER BY (NOT (CAST(vt1.c0 AS TEXT))) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (-1109549727);
SELECT SUM(count) FROM (SELECT ((-1109549727) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (-1109549727);
SELECT SUM(count) FROM (SELECT ((-1109549727) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (-1109549727);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt1.c0)<>(vt1.c0))) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt1.c0)!=(vt1.c0))) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt1.c0)<>(vt1.c0))) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt1.c0)!=(vt1.c0))) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt1.c0)<>(vt1.c0))) AND ((vt1.c0 IN ()))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>=(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)>=(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>=(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)>=(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>=(vt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (+ (((vt0.c0) BETWEEN (vt0.c0) AND (x'')))) WHERE (((343268215) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((343268215) IS TRUE)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (+ (((vt0.c0) BETWEEN (vt0.c0) AND (x'')))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (+ (((vt0.c0) BETWEEN (vt0.c0) AND (x'')))) WHERE (((343268215) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((343268215) IS TRUE)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (+ (((vt0.c0) BETWEEN (vt0.c0) AND (x'')))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (+ (((vt0.c0) BETWEEN (vt0.c0) AND (x'')))) WHERE (((343268215) IS TRUE));
SELECT * FROM vt1 WHERE (NULLIF(((vt1.c0) NOT NULL), SQLITE_VERSION()));
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt1.c0) NOT NULL), SQLITE_VERSION())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULLIF(((vt1.c0) NOT NULL), SQLITE_VERSION()));
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt1.c0) NOT NULL), SQLITE_VERSION())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULLIF(((vt1.c0) NOT NULL), SQLITE_VERSION()));
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt1.c0)))OR(NULL)))<<(COALESCE(vt1.c0, vt0.c1))) WHERE ((vt0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt1.c0)))OR(NULL)))<<(COALESCE(vt1.c0, vt0.c1))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt1.c0)))OR(NULL)))<<(COALESCE(vt1.c0, vt0.c1))) WHERE ((vt0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt1.c0)))OR(NULL)))<<(COALESCE(vt1.c0, vt0.c1))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt1.c0)))OR(NULL)))<<(COALESCE(vt1.c0, vt0.c1))) WHERE ((vt0.c1 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((((vt0.c0, vt0.c0, vt0.c1))=((vt0.c0, vt0.c1, vt0.c0))))AND((- ('\rUp-kvI4\n')))))OR(((NULL)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0, vt0.c0, vt0.c1))=((vt0.c0, vt0.c1, vt0.c0))))AND((- ('\rUp-kvI4\n')))))OR(((NULL)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((((vt0.c0, vt0.c0, vt0.c1))=((vt0.c0, vt0.c1, vt0.c0))))AND((- ('\rUp-kvI4\n')))))OR(((NULL)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0, vt0.c0, vt0.c1))=((vt0.c0, vt0.c1, vt0.c0))))AND((- ('\rUp-kvI4\n')))))OR(((NULL)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((((vt0.c0, vt0.c0, vt0.c1))=((vt0.c0, vt0.c1, vt0.c0))))AND((- ('\rUp-kvI4\n')))))OR(((NULL)-(vt0.c0)))));
SELECT ALL * FROM vt1 WHERE (((((UPPER(vt1.c0))AND((+ (-1109549727)))))OR(((vt1.c0)AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(vt1.c0))AND((+ (-1109549727)))))OR(((vt1.c0)AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((UPPER(vt1.c0))AND((+ (-1109549727)))))OR(((vt1.c0)AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(vt1.c0))AND((+ (-1109549727)))))OR(((vt1.c0)AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((UPPER(vt1.c0))AND((+ (-1109549727)))))OR(((vt1.c0)AND(vt1.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0, 0x56c958f1, vt0.c1)) BETWEEN (((vt0.c1 IN ()), vt0.c0 COLLATE BINARY, vt1.c0)) AND ((((vt0.c0)*(vt1.c0)), 0.8510692898713772, CAST(vt0.c0 AS NUMERIC))))) ORDER BY ((((((((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0) IS FALSE))))AND(((vt1.c0)|(vt0.c1)))))OR(((vt1.c0)GLOB('-1426744402')))))OR(((vt0.c0) BETWEEN (vt1.c0) AND ('xa0M*g/~')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, 0x56c958f1, vt0.c1)) BETWEEN (((vt0.c1 IN ()), vt0.c0 COLLATE BINARY, vt1.c0)) AND ((((vt0.c0)*(vt1.c0)), 0.8510692898713772, CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0) IS FALSE))))AND(((vt1.c0)|(vt0.c1)))))OR(((vt1.c0)GLOB('-1426744402')))))OR(((vt0.c0) BETWEEN (vt1.c0) AND ('xa0M*g/~')))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0, 0x56c958f1, vt0.c1)) BETWEEN (((vt0.c1 IN ()), vt0.c0 COLLATE BINARY, vt1.c0)) AND ((((vt0.c0)*(vt1.c0)), 0.8510692898713772, CAST(vt0.c0 AS NUMERIC))))) ORDER BY ((((((((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0) IS FALSE))))AND(((vt1.c0)|(vt0.c1)))))OR(((vt1.c0)GLOB('-1426744402')))))OR(((vt0.c0) BETWEEN (vt1.c0) AND ('xa0M*g/~')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, 0x56c958f1, vt0.c1)) BETWEEN (((vt0.c1 IN ()), vt0.c0 COLLATE BINARY, vt1.c0)) AND ((((vt0.c0)*(vt1.c0)), 0.8510692898713772, CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0) IS FALSE))))AND(((vt1.c0)|(vt0.c1)))))OR(((vt1.c0)GLOB('-1426744402')))))OR(((vt0.c0) BETWEEN (vt1.c0) AND ('xa0M*g/~')))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0, 0x56c958f1, vt0.c1)) BETWEEN (((vt0.c1 IN ()), vt0.c0 COLLATE BINARY, vt1.c0)) AND ((((vt0.c0)*(vt1.c0)), 0.8510692898713772, CAST(vt0.c0 AS NUMERIC))))) ORDER BY ((((((((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0) IS FALSE))))AND(((vt1.c0)|(vt0.c1)))))OR(((vt1.c0)GLOB('-1426744402')))))OR(((vt0.c0) BETWEEN (vt1.c0) AND ('xa0M*g/~')))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON LIKELIHOOD(((vt0.c1)|(vt0.c1)), 0.18447154274251587) WHERE ((~ (((vt1.c0) NOT BETWEEN ('') AND (vt0.c1))))) ORDER BY (((vt0.c1)) BETWEEN (((- (vt0.c0)))) AND (((((vt1.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, '2039718628')))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) NOT BETWEEN ('') AND (vt0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON LIKELIHOOD(((vt0.c1)|(vt0.c1)), 0.18447154274251587) ORDER BY (((vt0.c1)) BETWEEN (((- (vt0.c0)))) AND (((((vt1.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, '2039718628')))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON LIKELIHOOD(((vt0.c1)|(vt0.c1)), 0.18447154274251587) WHERE ((~ (((vt1.c0) NOT BETWEEN ('') AND (vt0.c1))))) ORDER BY (((vt0.c1)) BETWEEN (((- (vt0.c0)))) AND (((((vt1.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, '2039718628')))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) NOT BETWEEN ('') AND (vt0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON LIKELIHOOD(((vt0.c1)|(vt0.c1)), 0.18447154274251587) ORDER BY (((vt0.c1)) BETWEEN (((- (vt0.c0)))) AND (((((vt1.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, '2039718628')))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON LIKELIHOOD(((vt0.c1)|(vt0.c1)), 0.18447154274251587) WHERE ((~ (((vt1.c0) NOT BETWEEN ('') AND (vt0.c1))))) ORDER BY (((vt0.c1)) BETWEEN (((- (vt0.c0)))) AND (((((vt1.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, '2039718628')))))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((- (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) ORDER BY vt0.c1 DESC  NULLS LAST, (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS LAST, (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE ((- (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) ORDER BY vt0.c1 DESC  NULLS LAST, (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS LAST, (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE ((- (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) ORDER BY vt0.c1 DESC  NULLS LAST, (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0 IN ())) NOT BETWEEN ((+ (vt0.c1))) AND (TRIM(DISTINCT vt0.c0)))) ORDER BY IFNULL(DISTINCT CAST(vt0.c0 AS REAL), ((vt1.c0) ISNULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT BETWEEN ((+ (vt0.c1))) AND (TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY IFNULL(DISTINCT CAST(vt0.c0 AS REAL), ((vt1.c0) ISNULL)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0 IN ())) NOT BETWEEN ((+ (vt0.c1))) AND (TRIM(DISTINCT vt0.c0)))) ORDER BY IFNULL(DISTINCT CAST(vt0.c0 AS REAL), ((vt1.c0) ISNULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT BETWEEN ((+ (vt0.c1))) AND (TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY IFNULL(DISTINCT CAST(vt0.c0 AS REAL), ((vt1.c0) ISNULL)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0 IN ())) NOT BETWEEN ((+ (vt0.c1))) AND (TRIM(DISTINCT vt0.c0)))) ORDER BY IFNULL(DISTINCT CAST(vt0.c0 AS REAL), ((vt1.c0) ISNULL)) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (((vt1.c0 IN ()) IN (((vt1.c0) IS TRUE)))) ORDER BY ((0.2187489571551089) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY ((0.2187489571551089) NOT NULL));
SELECT * FROM vt1 WHERE (((vt1.c0 IN ()) IN (((vt1.c0) IS TRUE)))) ORDER BY ((0.2187489571551089) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY ((0.2187489571551089) NOT NULL));
SELECT * FROM vt1 WHERE (((vt1.c0 IN ()) IN (((vt1.c0) IS TRUE)))) ORDER BY ((0.2187489571551089) NOT NULL);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE RTRIM WHERE (IFNULL(DISTINCT (vt0.c0 IN ()), ((-1107398761)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (vt0.c0 IN ()), ((-1107398761)>(vt0.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE RTRIM WHERE (IFNULL(DISTINCT (vt0.c0 IN ()), ((-1107398761)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (vt0.c0 IN ()), ((-1107398761)>(vt0.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE RTRIM WHERE (IFNULL(DISTINCT (vt0.c0 IN ()), ((-1107398761)>(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) IN ()));
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))*(vt0.c1 COLLATE BINARY))) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))*(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS TEXT) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))*(vt0.c1 COLLATE BINARY))) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))*(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS TEXT) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))*(vt0.c1 COLLATE BINARY))) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS TEXT) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (ABS(DISTINCT (('') NOT BETWEEN (-1426744402) AND (vt1.c0)))) ORDER BY ((((vt1.c0) IS FALSE))=(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (('') NOT BETWEEN (-1426744402) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS FALSE))==(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT * FROM vt1 WHERE (ABS(DISTINCT (('') NOT BETWEEN (-1426744402) AND (vt1.c0)))) ORDER BY ((((vt1.c0) IS FALSE))=(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (('') NOT BETWEEN (-1426744402) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS FALSE))==(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT * FROM vt1 WHERE (ABS(DISTINCT (('') NOT BETWEEN (-1426744402) AND (vt1.c0)))) ORDER BY ((((vt1.c0) IS FALSE))=(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, '-1950458774', x'2b877105')) BETWEEN (((vt1.c0 IN ()), 0.41487629357820677 COLLATE BINARY, (NOT (vt1.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((('9223372036854775807', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, NULL))), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, '-1950458774', x'2b877105')) BETWEEN (((vt1.c0 IN ()), 0.41487629357820677 COLLATE BINARY, (NOT (vt1.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((('9223372036854775807', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, NULL))), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, '-1950458774', x'2b877105')) BETWEEN (((vt1.c0 IN ()), 0.41487629357820677 COLLATE BINARY, (NOT (vt1.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((('9223372036854775807', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, NULL))), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, '-1950458774', x'2b877105')) BETWEEN (((vt1.c0 IN ()), 0.41487629357820677 COLLATE BINARY, (NOT (vt1.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((('9223372036854775807', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, NULL))), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, '-1950458774', x'2b877105')) BETWEEN (((vt1.c0 IN ()), 0.41487629357820677 COLLATE BINARY, (NOT (vt1.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((('9223372036854775807', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, NULL))), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))));
SELECT * FROM vt0, vt1 WHERE (COALESCE(((vt0.c0) IS TRUE), ((vt0.c0)!=(vt0.c1)), 0.37099159910716417, ((x'') BETWEEN (0.10976934174088226) AND (vt1.c0)))) ORDER BY CASE WHEN (((vt1.c0))=((vt1.c0))) THEN CASE WHEN vt1.c0 THEN vt0.c0 END ELSE 0.7422482380256592 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((vt0.c0) IS TRUE), ((vt0.c0)<>(vt0.c1)), 0.37099159910716417, ((x'') BETWEEN (0.10976934174088226) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (((vt1.c0))==((vt1.c0))) THEN CASE WHEN vt1.c0 THEN vt0.c0 END ELSE 0.7422482380256592 END  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (COALESCE(((vt0.c0) IS TRUE), ((vt0.c0)!=(vt0.c1)), 0.37099159910716417, ((x'') BETWEEN (0.10976934174088226) AND (vt1.c0)))) ORDER BY CASE WHEN (((vt1.c0))=((vt1.c0))) THEN CASE WHEN vt1.c0 THEN vt0.c0 END ELSE 0.7422482380256592 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((vt0.c0) IS TRUE), ((vt0.c0)<>(vt0.c1)), 0.37099159910716417, ((x'') BETWEEN (0.10976934174088226) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (((vt1.c0))==((vt1.c0))) THEN CASE WHEN vt1.c0 THEN vt0.c0 END ELSE 0.7422482380256592 END  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (COALESCE(((vt0.c0) IS TRUE), ((vt0.c0)!=(vt0.c1)), 0.37099159910716417, ((x'') BETWEEN (0.10976934174088226) AND (vt1.c0)))) ORDER BY CASE WHEN (((vt1.c0))=((vt1.c0))) THEN CASE WHEN vt1.c0 THEN vt0.c0 END ELSE 0.7422482380256592 END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((-1609130758) IS TRUE)) ISNULL)) ORDER BY ((((vt0.c0)+(vt0.c0)))+((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((-1609130758) IS TRUE)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)+(vt0.c0)))+((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((-1609130758) IS TRUE)) ISNULL)) ORDER BY ((((vt0.c0)+(vt0.c0)))+((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((-1609130758) IS TRUE)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)+(vt0.c0)))+((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((-1609130758) IS TRUE)) ISNULL)) ORDER BY ((((vt0.c0)+(vt0.c0)))+((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((-958404357) IS FALSE)) ORDER BY ((UNLIKELY(vt0.c0)) NOT BETWEEN ((~ (vt0.c1))) AND (vt0.c1)) DESC  NULLS LAST, (~ (((vt0.c0)-('now')))), (((vt0.c1)<<(x'a21c')) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-958404357) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(vt0.c0)) NOT BETWEEN ((~ (vt0.c1))) AND (vt0.c1)) DESC  NULLS LAST, (~ (((vt0.c0)-('now')))), (((vt0.c1)<<(x'a21c')) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((-958404357) IS FALSE)) ORDER BY ((UNLIKELY(vt0.c0)) NOT BETWEEN ((~ (vt0.c1))) AND (vt0.c1)) DESC  NULLS LAST, (~ (((vt0.c0)-('now')))), (((vt0.c1)<<(x'a21c')) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-958404357) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(vt0.c0)) NOT BETWEEN ((~ (vt0.c1))) AND (vt0.c1)) DESC  NULLS LAST, (~ (((vt0.c0)-('now')))), (((vt0.c1)<<(x'a21c')) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((-958404357) IS FALSE)) ORDER BY ((UNLIKELY(vt0.c0)) NOT BETWEEN ((~ (vt0.c1))) AND (vt0.c1)) DESC  NULLS LAST, (~ (((vt0.c0)-('now')))), (((vt0.c1)<<(x'a21c')) IN ())  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt0.c0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<>(CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ()) DESC  NULLS FIRST, vt0.c0, ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))!=(CASE WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ()) DESC  NULLS FIRST, vt0.c0, ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ()));
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<>(CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ()) DESC  NULLS FIRST, vt0.c0, ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))!=(CASE WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ()) DESC  NULLS FIRST, vt0.c0, ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ()));
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<>(CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ()) DESC  NULLS FIRST, vt0.c0, ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ());
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0))<((vt1.c0))))>=(((vt1.c0) ISNULL))), CASE ((vt1.c0)<<(vt1.c0))  WHEN (NOT (vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0)+(vt1.c0)) END, (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.23998807780691245))))<=((((vt1.c0) IS TRUE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<((vt1.c0))))>=(((vt1.c0) ISNULL))), CASE ((vt1.c0)<<(vt1.c0))  WHEN (NOT (vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0)+(vt1.c0)) END, (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.23998807780691245))))<=((((vt1.c0) IS TRUE)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0))<((vt1.c0))))>=(((vt1.c0) ISNULL))), CASE ((vt1.c0)<<(vt1.c0))  WHEN (NOT (vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0)+(vt1.c0)) END, (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.23998807780691245))))<=((((vt1.c0) IS TRUE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<((vt1.c0))))>=(((vt1.c0) ISNULL))), CASE ((vt1.c0)<<(vt1.c0))  WHEN (NOT (vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0)+(vt1.c0)) END, (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.23998807780691245))))<=((((vt1.c0) IS TRUE)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0))<((vt1.c0))))>=(((vt1.c0) ISNULL))), CASE ((vt1.c0)<<(vt1.c0))  WHEN (NOT (vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0)+(vt1.c0)) END, (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.23998807780691245))))<=((((vt1.c0) IS TRUE)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, (NOT (vt0.c1)), (~ (vt0.c1)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c0) IS FALSE), LIKELY(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, (NOT (vt0.c1)), (~ (vt0.c1)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c0) IS FALSE), LIKELY(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, (NOT (vt0.c1)), (~ (vt0.c1)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c0) IS FALSE), LIKELY(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, (NOT (vt0.c1)), (~ (vt0.c1)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c0) IS FALSE), LIKELY(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, (NOT (vt0.c1)), (~ (vt0.c1)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c0) IS FALSE), LIKELY(vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>((- (vt1.c0))))) ORDER BY (vt1.c0 IN ()) DESC, CASE WHEN ((((((((0.7157627602737907)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)<(vt1.c0)) ELSE (- (vt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()) DESC, CASE WHEN ((((((((0.7157627602737907)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)<(vt1.c0)) ELSE (- (vt1.c0)) END DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>((- (vt1.c0))))) ORDER BY (vt1.c0 IN ()) DESC, CASE WHEN ((((((((0.7157627602737907)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)<(vt1.c0)) ELSE (- (vt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()) DESC, CASE WHEN ((((((((0.7157627602737907)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)<(vt1.c0)) ELSE (- (vt1.c0)) END DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>((- (vt1.c0))))) ORDER BY (vt1.c0 IN ()) DESC, CASE WHEN ((((((((0.7157627602737907)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)<(vt1.c0)) ELSE (- (vt1.c0)) END DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)&(vt0.c1))) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))))) ORDER BY ((vt0.c1 IN ()) IN ((+ (vt1.c0)))), vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c1))) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1 IN ()) IN ((+ (vt1.c0)))), vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)&(vt0.c1))) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))))) ORDER BY ((vt0.c1 IN ()) IN ((+ (vt1.c0)))), vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c1))) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1 IN ()) IN ((+ (vt1.c0)))), vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)&(vt0.c1))) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))))) ORDER BY ((vt0.c1 IN ()) IN ((+ (vt1.c0)))), vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c0))) ORDER BY COALESCE((((vt0.c1, vt0.c1, vt1.c0))>=((vt0.c1, vt1.c0, vt0.c0))), vt1.c0 COLLATE RTRIM, CAST(vt0.c1 AS BLOB), CAST(vt1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY COALESCE((((vt0.c1, vt0.c1, vt1.c0))>=((vt0.c1, vt1.c0, vt0.c0))), vt1.c0 COLLATE RTRIM, CAST(vt0.c1 AS BLOB), CAST(vt1.c0 AS REAL)));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c0))) ORDER BY COALESCE((((vt0.c1, vt0.c1, vt1.c0))>=((vt0.c1, vt1.c0, vt0.c0))), vt1.c0 COLLATE RTRIM, CAST(vt0.c1 AS BLOB), CAST(vt1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY COALESCE((((vt0.c1, vt0.c1, vt1.c0))>=((vt0.c1, vt1.c0, vt0.c0))), vt1.c0 COLLATE RTRIM, CAST(vt0.c1 AS BLOB), CAST(vt1.c0 AS REAL)));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c0))) ORDER BY COALESCE((((vt0.c1, vt0.c1, vt1.c0))>=((vt0.c1, vt1.c0, vt0.c0))), vt1.c0 COLLATE RTRIM, CAST(vt0.c1 AS BLOB), CAST(vt1.c0 AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE ('bA') ORDER BY (~ ((vt1.c0 IN (vt1.c0))))  NULLS FIRST, ((('1048083780')) NOT BETWEEN ((NULL)) AND ((vt1.c0))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('bA') IS TRUE)  as count FROM vt1 ORDER BY (~ ((vt1.c0 IN (vt1.c0))))  NULLS FIRST, ((('1048083780')) NOT BETWEEN ((NULL)) AND ((vt1.c0))) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ('bA') ORDER BY (~ ((vt1.c0 IN (vt1.c0))))  NULLS FIRST, ((('1048083780')) NOT BETWEEN ((NULL)) AND ((vt1.c0))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('bA') IS TRUE)  as count FROM vt1 ORDER BY (~ ((vt1.c0 IN (vt1.c0))))  NULLS FIRST, ((('1048083780')) NOT BETWEEN ((NULL)) AND ((vt1.c0))) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ('bA') ORDER BY (~ ((vt1.c0 IN (vt1.c0))))  NULLS FIRST, ((('1048083780')) NOT BETWEEN ((NULL)) AND ((vt1.c0))) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (json_array_length(CASE WHEN vt0.c0 THEN vt0.c1 END, vt1.c0 COLLATE NOCASE)) ORDER BY ((((vt1.c0)AND(vt0.c1)))>=((('s_')>=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_array_length(CASE WHEN vt0.c0 THEN vt0.c1 END, vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0)AND(vt0.c1)))>=((('s_')>=(vt0.c0)))) DESC);
SELECT * FROM vt1, vt0 WHERE (json_array_length(CASE WHEN vt0.c0 THEN vt0.c1 END, vt1.c0 COLLATE NOCASE)) ORDER BY ((((vt1.c0)AND(vt0.c1)))>=((('s_')>=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_array_length(CASE WHEN vt0.c0 THEN vt0.c1 END, vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0)AND(vt0.c1)))>=((('s_')>=(vt0.c0)))) DESC);
SELECT * FROM vt1, vt0 WHERE (json_array_length(CASE WHEN vt0.c0 THEN vt0.c1 END, vt1.c0 COLLATE NOCASE)) ORDER BY ((((vt1.c0)AND(vt0.c1)))>=((('s_')>=(vt0.c0)))) DESC;
SELECT ALL * FROM vt1 NOT INDEXED, vt0 WHERE (((vt0.c1)<<(((((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1))))) ORDER BY ((load_extension(vt1.c0)) NOT NULL)  NULLS FIRST, CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN 0X27c17eb8 THEN vt0.c0 WHEN x'' THEN vt0.c0 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<<(((((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((load_extension(vt1.c0)) NOT NULL)  NULLS FIRST, CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN 0X27c17eb8 THEN vt0.c0 WHEN x'' THEN vt0.c0 END AS NUMERIC) ASC);
SELECT ALL * FROM vt1 NOT INDEXED, vt0 WHERE (((vt0.c1)<<(((((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1))))) ORDER BY ((load_extension(vt1.c0)) NOT NULL)  NULLS FIRST, CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN 0X27c17eb8 THEN vt0.c0 WHEN x'' THEN vt0.c0 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<<(((((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((load_extension(vt1.c0)) NOT NULL)  NULLS FIRST, CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN 0X27c17eb8 THEN vt0.c0 WHEN x'' THEN vt0.c0 END AS NUMERIC) ASC);
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0))<(((vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<(((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0))<(((vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<(((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0))<(((vt1.c0 IN ())))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((((vt0.c0)IS NOT(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((((vt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((((vt0.c0)IS NOT(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((((vt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((((vt0.c0)IS NOT(vt0.c0))))));
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (NOT (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0)OR(vt0.c1)) WHEN (((vt0.c1))>((vt0.c1))) THEN CAST(vt0.c1 AS NUMERIC) END) ORDER BY ((((vt0.c1) ISNULL))LIKE((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE BINARY THEN (NOT (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0)OR(vt0.c1)) WHEN (((vt0.c1))>((vt0.c1))) THEN CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) ISNULL))LIKE((vt0.c0 IN ())))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (NOT (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0)OR(vt0.c1)) WHEN (((vt0.c1))>((vt0.c1))) THEN CAST(vt0.c1 AS NUMERIC) END) ORDER BY ((((vt0.c1) ISNULL))LIKE((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE BINARY THEN (NOT (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0)OR(vt0.c1)) WHEN (((vt0.c1))>((vt0.c1))) THEN CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) ISNULL))LIKE((vt0.c0 IN ())))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (NOT (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0)OR(vt0.c1)) WHEN (((vt0.c1))>((vt0.c1))) THEN CAST(vt0.c1 AS NUMERIC) END) ORDER BY ((((vt0.c1) ISNULL))LIKE((vt0.c0 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(SQLITE_SOURCE_ID()))) ORDER BY (UNLIKELY(0.2674269675364658) IN (CASE vt1.c0  WHEN vt0.c0 THEN 'P' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END))  NULLS LAST, (((NOT (vt1.c0))) NOT BETWEEN ((NOT (vt0.c1))) AND (((vt0.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (UNLIKELY(0.2674269675364658) IN (CASE vt1.c0  WHEN vt0.c0 THEN 'P' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END))  NULLS LAST, (((NOT (vt1.c0))) NOT BETWEEN ((NOT (vt0.c1))) AND (((vt0.c1) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(SQLITE_SOURCE_ID()))) ORDER BY (UNLIKELY(0.2674269675364658) IN (CASE vt1.c0  WHEN vt0.c0 THEN 'P' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END))  NULLS LAST, (((NOT (vt1.c0))) NOT BETWEEN ((NOT (vt0.c1))) AND (((vt0.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (UNLIKELY(0.2674269675364658) IN (CASE vt1.c0  WHEN vt0.c0 THEN 'P' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END))  NULLS LAST, (((NOT (vt1.c0))) NOT BETWEEN ((NOT (vt0.c1))) AND (((vt0.c1) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(SQLITE_SOURCE_ID()))) ORDER BY (UNLIKELY(0.2674269675364658) IN (CASE vt1.c0  WHEN vt0.c0 THEN 'P' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END))  NULLS LAST, (((NOT (vt1.c0))) NOT BETWEEN ((NOT (vt0.c1))) AND (((vt0.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE NOCASE) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(x'e1de')))OR(vt1.c0)))AND(vt1.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(x'e1de')))OR(vt1.c0)))AND(vt1.c0))) NOT NULL) ASC);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE NOCASE) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(x'e1de')))OR(vt1.c0)))AND(vt1.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(x'e1de')))OR(vt1.c0)))AND(vt1.c0))) NOT NULL) ASC);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE NOCASE) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(x'e1de')))OR(vt1.c0)))AND(vt1.c0))) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY vt1.c0 ASC;
SELECT COUNT(*) FROM vt1 WHERE (((- (vt1.c0)) IN ())) ORDER BY 0.8440430269221096  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY 0.8440430269221096  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((- (vt1.c0)) IN ())) ORDER BY 0.8440430269221096  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY 0.8440430269221096  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((- (vt1.c0)) IN ())) ORDER BY 0.8440430269221096  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((vt0.c1)*('')))||(((vt0.c1)LIKE(0x4227eb05)))) WHERE (x'') ORDER BY ((LIKELY(DISTINCT vt1.c0)) BETWEEN (((vt0.c0)+(vt1.c0))) AND ((((('0.3114335042175709')OR(NULL)))AND(vt0.c1))))  NULLS FIRST, (((~ (vt1.c0)))||(vt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((vt0.c1)*('')))||(((vt0.c1)LIKE(0X4227eb05)))) ORDER BY ((LIKELY(DISTINCT vt1.c0)) BETWEEN (((vt0.c0)+(vt1.c0))) AND ((((('0.3114335042175709')OR(NULL)))AND(vt0.c1))))  NULLS FIRST, (((~ (vt1.c0)))||(vt1.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((vt0.c1)*('')))||(((vt0.c1)LIKE(0x4227eb05)))) WHERE (x'') ORDER BY ((LIKELY(DISTINCT vt1.c0)) BETWEEN (((vt0.c0)+(vt1.c0))) AND ((((('0.3114335042175709')OR(NULL)))AND(vt0.c1))))  NULLS FIRST, (((~ (vt1.c0)))||(vt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((vt0.c1)*('')))||(((vt0.c1)LIKE(0X4227eb05)))) ORDER BY ((LIKELY(DISTINCT vt1.c0)) BETWEEN (((vt0.c0)+(vt1.c0))) AND ((((('0.3114335042175709')OR(NULL)))AND(vt0.c1))))  NULLS FIRST, (((~ (vt1.c0)))||(vt1.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((vt0.c1)*('')))||(((vt0.c1)LIKE(0x4227eb05)))) WHERE (x'') ORDER BY ((LIKELY(DISTINCT vt1.c0)) BETWEEN (((vt0.c0)+(vt1.c0))) AND ((((('0.3114335042175709')OR(NULL)))AND(vt0.c1))))  NULLS FIRST, (((~ (vt1.c0)))||(vt1.c0 COLLATE BINARY)) ASC;
SELECT ALL * FROM vt0, vt1 WHERE (load_extension((vt0.c1 IN (vt1.c0)))) ORDER BY CAST(vt1.c0 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension((vt0.c1 IN (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt1.c0 AS REAL)  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (load_extension((vt0.c1 IN (vt1.c0)))) ORDER BY CAST(vt1.c0 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension((vt0.c1 IN (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt1.c0 AS REAL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1))!=(((vt0.c1 IN (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1))!=(((vt0.c1 IN (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1))!=(((vt0.c1 IN (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1))!=(((vt0.c1 IN (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1))!=(((vt0.c1 IN (vt0.c0))))));
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE (CAST(((vt0.c1) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE (CAST(((vt0.c1) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE (CAST(((vt0.c1) IS FALSE) AS INTEGER));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)|(0x380c02e8))) NOT BETWEEN (vt0.c1) AND (CASE WHEN '-547886324' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY CASE WHEN vt1.c0 THEN (((vt0.c0))<>((vt1.c0))) WHEN CAST(vt1.c0 AS TEXT) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN (+ (vt1.c0)) THEN ((vt1.c0) IS FALSE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(0x380c02e8))) NOT BETWEEN (vt0.c1) AND (CASE WHEN '-547886324' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN vt1.c0 THEN (((vt0.c0))!=((vt1.c0))) WHEN CAST(vt1.c0 AS TEXT) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN (+ (vt1.c0)) THEN ((vt1.c0) IS FALSE) END DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)|(0x380c02e8))) NOT BETWEEN (vt0.c1) AND (CASE WHEN '-547886324' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY CASE WHEN vt1.c0 THEN (((vt0.c0))<>((vt1.c0))) WHEN CAST(vt1.c0 AS TEXT) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN (+ (vt1.c0)) THEN ((vt1.c0) IS FALSE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(0x380c02e8))) NOT BETWEEN (vt0.c1) AND (CASE WHEN '-547886324' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN vt1.c0 THEN (((vt0.c0))!=((vt1.c0))) WHEN CAST(vt1.c0 AS TEXT) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN (+ (vt1.c0)) THEN ((vt1.c0) IS FALSE) END DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)|(0x380c02e8))) NOT BETWEEN (vt0.c1) AND (CASE WHEN '-547886324' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY CASE WHEN vt1.c0 THEN (((vt0.c0))<>((vt1.c0))) WHEN CAST(vt1.c0 AS TEXT) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN (+ (vt1.c0)) THEN ((vt1.c0) IS FALSE) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((('t1&\ਰr衛-')>=(((vt1.c0) NOTNULL)))) ORDER BY ((((vt1.c0) NOT BETWEEN (x'192c5548') AND (vt1.c0)))<(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((('t1&\ਰr衛-')>=(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (x'192c5548') AND (vt1.c0)))<(vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('t1&\ਰr衛-')>=(((vt1.c0) NOTNULL)))) ORDER BY ((((vt1.c0) NOT BETWEEN (x'192c5548') AND (vt1.c0)))<(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((('t1&\ਰr衛-')>=(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (x'192c5548') AND (vt1.c0)))<(vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('t1&\ਰr衛-')>=(((vt1.c0) NOTNULL)))) ORDER BY ((((vt1.c0) NOT BETWEEN (x'192c5548') AND (vt1.c0)))<(vt1.c0)) ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)<<(vt1.c0)))+(((vt1.c0)LIKE(vt0.c0))))) ORDER BY ((((((((((((CAST(vt0.c1 AS BLOB))OR(0.49856241845611216)))OR((vt1.c0 IN (vt0.c1, vt1.c0)))))AND((+ (vt0.c1)))))AND((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND (('n|F''T*''x'))))))AND(NULL)))AND(((vt1.c0)OR('1109912325')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<<(vt1.c0)))+(((vt1.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((((CAST(vt0.c1 AS BLOB))OR(0.49856241845611216)))OR((vt1.c0 IN (vt0.c1, vt1.c0)))))AND((+ (vt0.c1)))))AND((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND (('n|F''T*''x'))))))AND(NULL)))AND(((vt1.c0)OR('1109912325')))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)<<(vt1.c0)))+(((vt1.c0)LIKE(vt0.c0))))) ORDER BY ((((((((((((CAST(vt0.c1 AS BLOB))OR(0.49856241845611216)))OR((vt1.c0 IN (vt0.c1, vt1.c0)))))AND((+ (vt0.c1)))))AND((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND (('n|F''T*''x'))))))AND(NULL)))AND(((vt1.c0)OR('1109912325')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<<(vt1.c0)))+(((vt1.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((((CAST(vt0.c1 AS BLOB))OR(0.49856241845611216)))OR((vt1.c0 IN (vt0.c1, vt1.c0)))))AND((+ (vt0.c1)))))AND((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND (('n|F''T*''x'))))))AND(NULL)))AND(((vt1.c0)OR('1109912325')))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)<<(vt1.c0)))+(((vt1.c0)LIKE(vt0.c0))))) ORDER BY ((((((((((((CAST(vt0.c1 AS BLOB))OR(0.49856241845611216)))OR((vt1.c0 IN (vt0.c1, vt1.c0)))))AND((+ (vt0.c1)))))AND((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND (('n|F''T*''x'))))))AND(NULL)))AND(((vt1.c0)OR('1109912325')))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE NOCASE);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS INTEGER));
SELECT ALL * FROM vt1, vt0 WHERE (0.5957328610454303) ORDER BY ((((0Xffffffffd740d522)|(vt0.c1)))&(x'')), (((((vt0.c0))==((vt0.c0))))-(ABS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((0.5957328610454303) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((0xffffffffd740d522)|(vt0.c1)))&(x'')), (((((vt0.c0))=((vt0.c0))))-(ABS(vt0.c0))));
SELECT ALL * FROM vt1, vt0 WHERE (0.5957328610454303) ORDER BY ((((0Xffffffffd740d522)|(vt0.c1)))&(x'')), (((((vt0.c0))==((vt0.c0))))-(ABS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((0.5957328610454303) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((0xffffffffd740d522)|(vt0.c1)))&(x'')), (((((vt0.c0))=((vt0.c0))))-(ABS(vt0.c0))));
SELECT ALL * FROM vt1, vt0 WHERE (0.5957328610454303) ORDER BY ((((0Xffffffffd740d522)|(vt0.c1)))&(x'')), (((((vt0.c0))==((vt0.c0))))-(ABS(vt0.c0)));
SELECT * FROM vt0 WHERE (PRINTF(vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((PRINTF(vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (PRINTF(vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((PRINTF(vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (PRINTF(vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1) COLLATE BINARY);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE) COLLATE BINARY);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c1) ORDER BY CASE ((((vt0.c1)OR(vt1.c0)))OR(vt0.c0))  WHEN ((vt1.c0)>=(vt0.c0)) THEN (vt0.c1 IN ()) WHEN ABS(DISTINCT vt0.c0) THEN CAST(NULL AS INTEGER) WHEN CASE vt0.c0  WHEN 'Vx*엣x2_b' THEN vt0.c0 END THEN CAST(vt0.c1 AS REAL) ELSE NULL END  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt0.c0 END)&(((vt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((((vt0.c1)OR(vt1.c0)))OR(vt0.c0))  WHEN ((vt1.c0)>=(vt0.c0)) THEN (vt0.c1 IN ()) WHEN ABS(DISTINCT vt0.c0) THEN CAST(NULL AS INTEGER) WHEN CASE vt0.c0  WHEN 'Vx*엣x2_b' THEN vt0.c0 END THEN CAST(vt0.c1 AS REAL) ELSE NULL END  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt0.c0 END)&(((vt0.c1) NOTNULL))) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c1) ORDER BY CASE ((((vt0.c1)OR(vt1.c0)))OR(vt0.c0))  WHEN ((vt1.c0)>=(vt0.c0)) THEN (vt0.c1 IN ()) WHEN ABS(DISTINCT vt0.c0) THEN CAST(NULL AS INTEGER) WHEN CASE vt0.c0  WHEN 'Vx*엣x2_b' THEN vt0.c0 END THEN CAST(vt0.c1 AS REAL) ELSE NULL END  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt0.c0 END)&(((vt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((((vt0.c1)OR(vt1.c0)))OR(vt0.c0))  WHEN ((vt1.c0)>=(vt0.c0)) THEN (vt0.c1 IN ()) WHEN ABS(DISTINCT vt0.c0) THEN CAST(NULL AS INTEGER) WHEN CASE vt0.c0  WHEN 'Vx*엣x2_b' THEN vt0.c0 END THEN CAST(vt0.c1 AS REAL) ELSE NULL END  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt0.c0 END)&(((vt0.c1) NOTNULL))) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c1) ORDER BY CASE ((((vt0.c1)OR(vt1.c0)))OR(vt0.c0))  WHEN ((vt1.c0)>=(vt0.c0)) THEN (vt0.c1 IN ()) WHEN ABS(DISTINCT vt0.c0) THEN CAST(NULL AS INTEGER) WHEN CASE vt0.c0  WHEN 'Vx*엣x2_b' THEN vt0.c0 END THEN CAST(vt0.c1 AS REAL) ELSE NULL END  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt0.c0 END)&(((vt0.c1) NOTNULL))) DESC;
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0)<=(NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<=(NULL)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0)<=(NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<=(NULL)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0)<=(NULL)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c0 AS BLOB)))=(((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS BLOB)))=(((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c0 AS BLOB)))=(((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS BLOB)))=(((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c0 AS BLOB)))=(((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))));
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY (((vt1.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((vt1.c0))) ASC, (~ (UPPER(vt1.c0))) DESC  NULLS LAST, (((vt1.c0, NULL, vt1.c0)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)&(vt1.c0)), CAST(vt1.c0 AS BLOB))) AND (((vt1.c0 IN ()), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((vt1.c0))) ASC, (~ (UPPER(vt1.c0))) DESC  NULLS LAST, (((vt1.c0, NULL, vt1.c0)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)&(vt1.c0)), CAST(vt1.c0 AS BLOB))) AND (((vt1.c0 IN ()), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS REAL)))));
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY (((vt1.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((vt1.c0))) ASC, (~ (UPPER(vt1.c0))) DESC  NULLS LAST, (((vt1.c0, NULL, vt1.c0)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)&(vt1.c0)), CAST(vt1.c0 AS BLOB))) AND (((vt1.c0 IN ()), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((vt1.c0))) ASC, (~ (UPPER(vt1.c0))) DESC  NULLS LAST, (((vt1.c0, NULL, vt1.c0)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)&(vt1.c0)), CAST(vt1.c0 AS BLOB))) AND (((vt1.c0 IN ()), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS REAL)))));
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY (((vt1.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((vt1.c0))) ASC, (~ (UPPER(vt1.c0))) DESC  NULLS LAST, (((vt1.c0, NULL, vt1.c0)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)&(vt1.c0)), CAST(vt1.c0 AS BLOB))) AND (((vt1.c0 IN ()), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt1 WHERE ('-1109549727') ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (('-1109549727') IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE ('-1109549727') ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (('-1109549727') IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE ('-1109549727') ORDER BY vt1.c0;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, vt0.c0))) AS REAL)) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, vt0.c0))) AS REAL)) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, vt0.c0))) AS REAL)) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(x'' AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'' AS TEXT) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(x'' AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'' AS TEXT) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(x'' AS TEXT) ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (NULL COLLATE RTRIM);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((IFNULL(vt0.c1, vt0.c1)))) WHERE (CAST((vt1.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((IFNULL(vt0.c1, vt0.c1)))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((IFNULL(vt0.c1, vt0.c1)))) WHERE (CAST((vt1.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((IFNULL(vt0.c1, vt0.c1)))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((IFNULL(vt0.c1, vt0.c1)))) WHERE (CAST((vt1.c0 IN ()) AS BLOB));
SELECT * FROM vt0 INNER JOIN vt1 ON vt0.c1 WHERE ((NOT (2.050801821E9)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (2.050801821E9))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON vt0.c1);
SELECT * FROM vt0 INNER JOIN vt1 ON vt0.c1 WHERE ((NOT (2.050801821E9)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (2.050801821E9))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON vt0.c1);
SELECT * FROM vt0 INNER JOIN vt1 ON vt0.c1 WHERE ((NOT (2.050801821E9)));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)IS(vt1.c0))) IS TRUE) WHERE ((+ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)IS(vt1.c0))) IS TRUE));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)IS(vt1.c0))) IS TRUE) WHERE ((+ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)IS(vt1.c0))) IS TRUE));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)IS(vt1.c0))) IS TRUE) WHERE ((+ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0)&(vt1.c0))))) ORDER BY ((((0.2309985169755122) IS FALSE)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((0.2309985169755122) IS FALSE)) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0)&(vt1.c0))))) ORDER BY ((((0.2309985169755122) IS FALSE)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((0.2309985169755122) IS FALSE)) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0)&(vt1.c0))))) ORDER BY ((((0.2309985169755122) IS FALSE)) IS TRUE) ASC;
SELECT * FROM vt1 WHERE (CASE (+ (vt1.c0))  WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) WHEN vt1.c0 COLLATE RTRIM THEN (~ (vt1.c0)) WHEN ((0xffffffff8105a34d)+(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) ELSE (NOT (vt1.c0)) END) ORDER BY ((((vt1.c0)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt1.c0))  WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) WHEN vt1.c0 COLLATE RTRIM THEN (~ (vt1.c0)) WHEN ((0Xffffffff8105a34d)+(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) ELSE (NOT (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) IS FALSE))) ASC);
SELECT * FROM vt1 WHERE (CASE (+ (vt1.c0))  WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) WHEN vt1.c0 COLLATE RTRIM THEN (~ (vt1.c0)) WHEN ((0xffffffff8105a34d)+(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) ELSE (NOT (vt1.c0)) END) ORDER BY ((((vt1.c0)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt1.c0))  WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) WHEN vt1.c0 COLLATE RTRIM THEN (~ (vt1.c0)) WHEN ((0Xffffffff8105a34d)+(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) ELSE (NOT (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) IS FALSE))) ASC);
SELECT * FROM vt1 WHERE (CASE (+ (vt1.c0))  WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) WHEN vt1.c0 COLLATE RTRIM THEN (~ (vt1.c0)) WHEN ((0xffffffff8105a34d)+(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) ELSE (NOT (vt1.c0)) END) ORDER BY ((((vt1.c0)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) IS FALSE))) ASC;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, 0.42638327067906157, vt0.c0))!=((vt0.c1, x'b788', vt0.c1, vt0.c0, vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0, 0.42638327067906157, vt0.c0))!=((vt0.c1, x'b788', vt0.c1, vt0.c0, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, 0.42638327067906157, vt0.c0))!=((vt0.c1, x'b788', vt0.c1, vt0.c0, vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0, 0.42638327067906157, vt0.c0))!=((vt0.c1, x'b788', vt0.c1, vt0.c0, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, 0.42638327067906157, vt0.c0))!=((vt0.c1, x'b788', vt0.c1, vt0.c0, vt0.c0)))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c1);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY CAST(((vt1.c0) NOTNULL) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt1.c0) NOTNULL) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY CAST(((vt1.c0) NOTNULL) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt1.c0) NOTNULL) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY CAST(((vt1.c0) NOTNULL) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((CASE 0Xffffffffb570a27f  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((((vt0.c0)OR(vt0.c0)))OR(x'8049'))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((CASE 0xffffffffb570a27f  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((((vt0.c0)OR(vt0.c0)))OR(x'8049')))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((CASE 0Xffffffffb570a27f  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((((vt0.c0)OR(vt0.c0)))OR(x'8049'))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((CASE 0xffffffffb570a27f  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((((vt0.c0)OR(vt0.c0)))OR(x'8049')))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((CASE 0Xffffffffb570a27f  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((((vt0.c0)OR(vt0.c0)))OR(x'8049'))))));
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT ALL * FROM vt0 WHERE ((((((NULL))<>((vt0.c1))))IS NOT(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))!=((vt0.c1))))IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((NULL))<>((vt0.c1))))IS NOT(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))!=((vt0.c1))))IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((NULL))<>((vt0.c1))))IS NOT(vt0.c0)));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((vt0.c1)IS(vt0.c0)))==(x'a541')) WHERE ((((vt1.c0 IN ()))GLOB(((vt1.c0) NOT BETWEEN (vt0.c1) AND ('ms&Y\nJ\ng'))))) ORDER BY ((((x'0ac8a471')AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY  NULLS LAST, (((('+ _') BETWEEN (vt0.c0) AND (vt1.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))GLOB(((vt1.c0) NOT BETWEEN (vt0.c1) AND ('ms&Y\nJ\ng'))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((vt0.c1)IS(vt0.c0)))=(x'a541')) ORDER BY ((((x'0ac8a471')AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY  NULLS LAST, (((('+ _') BETWEEN (vt0.c0) AND (vt1.c0))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((vt0.c1)IS(vt0.c0)))==(x'a541')) WHERE ((((vt1.c0 IN ()))GLOB(((vt1.c0) NOT BETWEEN (vt0.c1) AND ('ms&Y\nJ\ng'))))) ORDER BY ((((x'0ac8a471')AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY  NULLS LAST, (((('+ _') BETWEEN (vt0.c0) AND (vt1.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))GLOB(((vt1.c0) NOT BETWEEN (vt0.c1) AND ('ms&Y\nJ\ng'))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((vt0.c1)IS(vt0.c0)))=(x'a541')) ORDER BY ((((x'0ac8a471')AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY  NULLS LAST, (((('+ _') BETWEEN (vt0.c0) AND (vt1.c0))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((vt0.c1)IS(vt0.c0)))==(x'a541')) WHERE ((((vt1.c0 IN ()))GLOB(((vt1.c0) NOT BETWEEN (vt0.c1) AND ('ms&Y\nJ\ng'))))) ORDER BY ((((x'0ac8a471')AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY  NULLS LAST, (((('+ _') BETWEEN (vt0.c0) AND (vt1.c0))) IS FALSE)  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((((NULL)OR(vt0.c0)))AND(vt0.c1)) AS TEXT)) ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c1)) THEN vt1.c0 WHEN ((vt0.c1)%(vt0.c1)) THEN (((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt1.c0))) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.c0)-(vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((NULL)OR(vt0.c0)))AND(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c1)) THEN vt1.c0 WHEN ((vt0.c1)%(vt0.c1)) THEN (((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt1.c0))) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.c0)-(vt1.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((((NULL)OR(vt0.c0)))AND(vt0.c1)) AS TEXT)) ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c1)) THEN vt1.c0 WHEN ((vt0.c1)%(vt0.c1)) THEN (((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt1.c0))) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.c0)-(vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((NULL)OR(vt0.c0)))AND(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c1)) THEN vt1.c0 WHEN ((vt0.c1)%(vt0.c1)) THEN (((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt1.c0))) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.c0)-(vt1.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((((NULL)OR(vt0.c0)))AND(vt0.c1)) AS TEXT)) ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c1)) THEN vt1.c0 WHEN ((vt0.c1)%(vt0.c1)) THEN (((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt1.c0))) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.c0)-(vt1.c0)) END ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((- ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c1)||(vt0.c0)))) AND (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) ASC, '-683616990';
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c1)||(vt0.c0)))) AND (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) ASC, '-683616990');
SELECT * FROM vt0 WHERE ((- ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c1)||(vt0.c0)))) AND (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) ASC, '-683616990';
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c1)||(vt0.c0)))) AND (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) ASC, '-683616990');
SELECT * FROM vt0 WHERE ((- ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c1)||(vt0.c0)))) AND (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) ASC, '-683616990';
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((vt0.c0))<(((vt0.c1 IN ())))) WHERE (((((((((CAST(vt1.c0 AS NUMERIC))OR(((vt0.c1)<(vt0.c0)))))OR(((vt1.c0)<(vt0.c0)))))OR((((vt0.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c1, 1.330506483E9, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))))OR(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt1.c0 AS NUMERIC))OR(((vt0.c1)<(vt0.c0)))))OR(((vt1.c0)<(vt0.c0)))))OR((((vt0.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c1, 1.330506483E9, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))))OR(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt0.c0))<(((vt0.c1 IN ())))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((vt0.c0))<(((vt0.c1 IN ())))) WHERE (((((((((CAST(vt1.c0 AS NUMERIC))OR(((vt0.c1)<(vt0.c0)))))OR(((vt1.c0)<(vt0.c0)))))OR((((vt0.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c1, 1.330506483E9, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))))OR(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt1.c0 AS NUMERIC))OR(((vt0.c1)<(vt0.c0)))))OR(((vt1.c0)<(vt0.c0)))))OR((((vt0.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c1, 1.330506483E9, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))))OR(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt0.c0))<(((vt0.c1 IN ())))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((vt0.c0))<(((vt0.c1 IN ())))) WHERE (((((((((CAST(vt1.c0 AS NUMERIC))OR(((vt0.c1)<(vt0.c0)))))OR(((vt1.c0)<(vt0.c0)))))OR((((vt0.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c1, 1.330506483E9, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))))OR(CAST(vt0.c1 AS BLOB))));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1, vt1.c0, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c1) ISNULL), ((vt0.c0)OR(vt0.c1)))) AND ((((vt0.c0) NOTNULL), CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN 0Xffffffffce573f5d WHEN NULL THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))) ORDER BY (((vt0.c1) ISNULL) IN (((vt0.c0)OR(vt0.c0)), NULL COLLATE RTRIM))  NULLS LAST, CAST(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)) AS REAL) DESC  NULLS LAST, ((((vt0.c1)=(vt1.c0))) NOT BETWEEN (0X202feee4) AND (vt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt1.c0, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c1) ISNULL), ((vt0.c0)OR(vt0.c1)))) AND ((((vt0.c0) NOTNULL), CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN 0Xffffffffce573f5d WHEN NULL THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1) ISNULL) IN (((vt0.c0)OR(vt0.c0)), NULL COLLATE RTRIM))  NULLS LAST, CAST(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)) AS REAL) DESC  NULLS LAST, ((((vt0.c1)=(vt1.c0))) NOT BETWEEN (0X202feee4) AND (vt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1, vt1.c0, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c1) ISNULL), ((vt0.c0)OR(vt0.c1)))) AND ((((vt0.c0) NOTNULL), CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN 0Xffffffffce573f5d WHEN NULL THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))) ORDER BY (((vt0.c1) ISNULL) IN (((vt0.c0)OR(vt0.c0)), NULL COLLATE RTRIM))  NULLS LAST, CAST(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)) AS REAL) DESC  NULLS LAST, ((((vt0.c1)=(vt1.c0))) NOT BETWEEN (0X202feee4) AND (vt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt1.c0, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c1) ISNULL), ((vt0.c0)OR(vt0.c1)))) AND ((((vt0.c0) NOTNULL), CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN 0Xffffffffce573f5d WHEN NULL THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1) ISNULL) IN (((vt0.c0)OR(vt0.c0)), NULL COLLATE RTRIM))  NULLS LAST, CAST(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)) AS REAL) DESC  NULLS LAST, ((((vt0.c1)=(vt1.c0))) NOT BETWEEN (0X202feee4) AND (vt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1, vt1.c0, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c1) ISNULL), ((vt0.c0)OR(vt0.c1)))) AND ((((vt0.c0) NOTNULL), CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN 0Xffffffffce573f5d WHEN NULL THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))) ORDER BY (((vt0.c1) ISNULL) IN (((vt0.c0)OR(vt0.c0)), NULL COLLATE RTRIM))  NULLS LAST, CAST(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)) AS REAL) DESC  NULLS LAST, ((((vt0.c1)=(vt1.c0))) NOT BETWEEN (0X202feee4) AND (vt0.c1)) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE NOCASE) ORDER BY (~ (((vt0.c0)>=(vt0.c1))))  NULLS LAST, ((vt0.c1) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0)>=(vt0.c1))))  NULLS LAST, ((vt0.c1) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE NOCASE) ORDER BY (~ (((vt0.c0)>=(vt0.c1))))  NULLS LAST, ((vt0.c1) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0)>=(vt0.c1))))  NULLS LAST, ((vt0.c1) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE NOCASE) ORDER BY (~ (((vt0.c0)>=(vt0.c1))))  NULLS LAST, ((vt0.c1) IS TRUE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY (((- (vt0.c1)))>(CAST(vt0.c1 AS BLOB))) ASC  NULLS FIRST, '1330506483'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c1)))>(CAST(vt0.c1 AS BLOB))) ASC  NULLS FIRST, '1330506483'  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY (((- (vt0.c1)))>(CAST(vt0.c1 AS BLOB))) ASC  NULLS FIRST, '1330506483'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c1)))>(CAST(vt0.c1 AS BLOB))) ASC  NULLS FIRST, '1330506483'  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY (((- (vt0.c1)))>(CAST(vt0.c1 AS BLOB))) ASC  NULLS FIRST, '1330506483'  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN (vt0.c1 IN (NULL)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0)<=(vt0.c0)) THEN CAST(x'b931' AS BLOB) WHEN (((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, 0.5753906316183834, vt0.c1, vt0.c1))) THEN vt0.c0 WHEN ((vt0.c0)IS(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN (vt0.c1 IN (NULL)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0)<=(vt0.c0)) THEN CAST(x'b931' AS BLOB) WHEN (((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, 0.5753906316183834, vt0.c1, vt0.c1))) THEN vt0.c0 WHEN ((vt0.c0)IS(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE NULL END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN (vt0.c1 IN (NULL)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0)<=(vt0.c0)) THEN CAST(x'b931' AS BLOB) WHEN (((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, 0.5753906316183834, vt0.c1, vt0.c1))) THEN vt0.c0 WHEN ((vt0.c0)IS(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN (vt0.c1 IN (NULL)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0)<=(vt0.c0)) THEN CAST(x'b931' AS BLOB) WHEN (((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, 0.5753906316183834, vt0.c1, vt0.c1))) THEN vt0.c0 WHEN ((vt0.c0)IS(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE NULL END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN (vt0.c1 IN (NULL)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0)<=(vt0.c0)) THEN CAST(x'b931' AS BLOB) WHEN (((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, 0.5753906316183834, vt0.c1, vt0.c1))) THEN vt0.c0 WHEN ((vt0.c0)IS(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE NULL END);
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN (((vt1.c0)GLOB(vt1.c0))) AND (((vt1.c0) ISNULL)))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (((vt1.c0)GLOB(vt1.c0))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY '' ASC);
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN (((vt1.c0)GLOB(vt1.c0))) AND (((vt1.c0) ISNULL)))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (((vt1.c0)GLOB(vt1.c0))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY '' ASC);
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN (((vt1.c0)GLOB(vt1.c0))) AND (((vt1.c0) ISNULL)))) ORDER BY '' ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY CASE (- (vt1.c0))  WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)/(vt0.c0)) ELSE ((vt1.c0)AND(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE (- (vt1.c0))  WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)/(vt0.c0)) ELSE ((vt1.c0)AND(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY CASE (- (vt1.c0))  WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)/(vt0.c0)) ELSE ((vt1.c0)AND(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE (- (vt1.c0))  WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)/(vt0.c0)) ELSE ((vt1.c0)AND(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY CASE (- (vt1.c0))  WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)/(vt0.c0)) ELSE ((vt1.c0)AND(vt0.c0)) END;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS NUMERIC) DESC;
SELECT ALL * FROM vt1 WHERE (CAST((NOT (vt1.c0)) AS BLOB)) ORDER BY CAST((('-1007541564')!=(vt1.c0)) AS BLOB) ASC, ((vt1.c0 COLLATE BINARY) NOT BETWEEN (CASE WHEN '1246593547' THEN NULL WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ((vt1.c0 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY CAST((('-1007541564')<>(vt1.c0)) AS BLOB) ASC, ((vt1.c0 COLLATE BINARY) NOT BETWEEN (CASE WHEN '1246593547' THEN NULL WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ((vt1.c0 IN (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (CAST((NOT (vt1.c0)) AS BLOB)) ORDER BY CAST((('-1007541564')!=(vt1.c0)) AS BLOB) ASC, ((vt1.c0 COLLATE BINARY) NOT BETWEEN (CASE WHEN '1246593547' THEN NULL WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ((vt1.c0 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY CAST((('-1007541564')<>(vt1.c0)) AS BLOB) ASC, ((vt1.c0 COLLATE BINARY) NOT BETWEEN (CASE WHEN '1246593547' THEN NULL WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ((vt1.c0 IN (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (CAST((NOT (vt1.c0)) AS BLOB)) ORDER BY CAST((('-1007541564')!=(vt1.c0)) AS BLOB) ASC, ((vt1.c0 COLLATE BINARY) NOT BETWEEN (CASE WHEN '1246593547' THEN NULL WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ((vt1.c0 IN (vt1.c0))));
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((NULL)) AND (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) ORDER BY CAST(ABS(vt0.c0) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((NULL)) AND (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(ABS(vt0.c0) AS INTEGER) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((NULL)) AND (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) ORDER BY CAST(ABS(vt0.c0) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((NULL)) AND (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(ABS(vt0.c0) AS INTEGER) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((NULL)) AND (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) ORDER BY CAST(ABS(vt0.c0) AS INTEGER) DESC;
SELECT * FROM vt1 WHERE (540012260);
SELECT SUM(count) FROM (SELECT ALL ((540012260) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (540012260);
SELECT SUM(count) FROM (SELECT ALL ((540012260) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (540012260);
SELECT ALL * FROM vt0 WHERE (LIKE(((((x'f2ab')AND(vt0.c0)))OR(vt0.c0)), (vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((LIKE(((((x'f2ab')AND(vt0.c0)))OR(vt0.c0)), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKE(((((x'f2ab')AND(vt0.c0)))OR(vt0.c0)), (vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((LIKE(((((x'f2ab')AND(vt0.c0)))OR(vt0.c0)), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKE(((((x'f2ab')AND(vt0.c0)))OR(vt0.c0)), (vt0.c1 IN ())));
SELECT ALL * FROM vt1 WHERE (((NULL)>>((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((NULL)>>((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((NULL)>>((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((CAST(vt0.c1 AS INTEGER))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('0.9021781204672291'))))))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY (((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0))))<=((CAST(vt0.c0 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c1 AS INTEGER))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('0.9021781204672291'))))))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0))))<=((CAST(vt0.c0 AS BLOB)))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((CAST(vt0.c1 AS INTEGER))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('0.9021781204672291'))))))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY (((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0))))<=((CAST(vt0.c0 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c1 AS INTEGER))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('0.9021781204672291'))))))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0))))<=((CAST(vt0.c0 AS BLOB)))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((CAST(vt0.c1 AS INTEGER))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('0.9021781204672291'))))))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY (((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0))))<=((CAST(vt0.c0 AS BLOB)))) ASC;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0)<=(vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((vt1.c0)<=(vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0)<=(vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((vt1.c0)<=(vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0)<=(vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))) ORDER BY vt1.c0;
SELECT * FROM vt1, vt0 WHERE (UNLIKELY((vt1.c0 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((vt1.c0 IN (vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (UNLIKELY((vt1.c0 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((vt1.c0 IN (vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (UNLIKELY((vt1.c0 IN (vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) ELSE 0.027501286065142683 END) ORDER BY (vt0.c1 IN (((vt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) ELSE 0.027501286065142683 END) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN (((vt0.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) ELSE 0.027501286065142683 END) ORDER BY (vt0.c1 IN (((vt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) ELSE 0.027501286065142683 END) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN (((vt0.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) ELSE 0.027501286065142683 END) ORDER BY (vt0.c1 IN (((vt0.c1) IS TRUE)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (x'43af') ORDER BY ((CASE -1999134150  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)/('ba'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'43af') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE -1999134150  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)/('ba'))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (x'43af') ORDER BY ((CASE -1999134150  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)/('ba'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'43af') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE -1999134150  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)/('ba'))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (x'43af') ORDER BY ((CASE -1999134150  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)/('ba'))  NULLS LAST;
SELECT * FROM vt1 WHERE (0.67013477653758) ORDER BY LIKELY(vt1.c0) ASC, ((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))|(CAST(vt1.c0 AS INTEGER))), ((((vt1.c0)&(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.67013477653758) IS TRUE)  as count FROM vt1 ORDER BY LIKELY(vt1.c0) ASC, ((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))|(CAST(vt1.c0 AS INTEGER))), ((((vt1.c0)&(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (0.67013477653758) ORDER BY LIKELY(vt1.c0) ASC, ((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))|(CAST(vt1.c0 AS INTEGER))), ((((vt1.c0)&(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.67013477653758) IS TRUE)  as count FROM vt1 ORDER BY LIKELY(vt1.c0) ASC, ((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))|(CAST(vt1.c0 AS INTEGER))), ((((vt1.c0)&(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (0.67013477653758) ORDER BY LIKELY(vt1.c0) ASC, ((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))|(CAST(vt1.c0 AS INTEGER))), ((((vt1.c0)&(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY ((((vt0.c1 COLLATE NOCASE)AND(CAST(vt1.c0 AS TEXT))))AND(((vt1.c0) BETWEEN ('419542684') AND (vt0.c1))))  NULLS LAST, CAST((- (x'0d1a')) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1 COLLATE NOCASE)AND(CAST(vt1.c0 AS TEXT))))AND(((vt1.c0) BETWEEN ('419542684') AND (vt0.c1))))  NULLS LAST, CAST((- (x'0d1a')) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY ((((vt0.c1 COLLATE NOCASE)AND(CAST(vt1.c0 AS TEXT))))AND(((vt1.c0) BETWEEN ('419542684') AND (vt0.c1))))  NULLS LAST, CAST((- (x'0d1a')) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1 COLLATE NOCASE)AND(CAST(vt1.c0 AS TEXT))))AND(((vt1.c0) BETWEEN ('419542684') AND (vt0.c1))))  NULLS LAST, CAST((- (x'0d1a')) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY ((((vt0.c1 COLLATE NOCASE)AND(CAST(vt1.c0 AS TEXT))))AND(((vt1.c0) BETWEEN ('419542684') AND (vt0.c1))))  NULLS LAST, CAST((- (x'0d1a')) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((TYPEOF(DISTINCT vt0.c0)))>(((+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((TYPEOF(DISTINCT vt0.c0)))>(((+ (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((TYPEOF(DISTINCT vt0.c0)))>(((+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((TYPEOF(DISTINCT vt0.c0)))>(((+ (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((TYPEOF(DISTINCT vt0.c0)))>(((+ (vt0.c0))))));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))) AND ((TRIM(DISTINCT vt0.c1))))) ORDER BY UNLIKELY(0.34488553117974263) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))) AND ((TRIM(DISTINCT vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY UNLIKELY(0.34488553117974263) ASC);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))) AND ((TRIM(DISTINCT vt0.c1))))) ORDER BY UNLIKELY(0.34488553117974263) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))) AND ((TRIM(DISTINCT vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY UNLIKELY(0.34488553117974263) ASC);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))) AND ((TRIM(DISTINCT vt0.c1))))) ORDER BY UNLIKELY(0.34488553117974263) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)*(NULL)))<('I\''Q''zA'))) ORDER BY (((((vt0.c1, vt0.c0, vt1.c0))=((vt1.c0, vt0.c0, vt0.c1)))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(NULL)))<('I\''Q''zA'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c1, vt0.c0, vt1.c0))=((vt1.c0, vt0.c0, vt0.c1)))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)*(NULL)))<('I\''Q''zA'))) ORDER BY (((((vt0.c1, vt0.c0, vt1.c0))=((vt1.c0, vt0.c0, vt0.c1)))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(NULL)))<('I\''Q''zA'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c1, vt0.c0, vt1.c0))=((vt1.c0, vt0.c0, vt0.c1)))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)*(NULL)))<('I\''Q''zA'))) ORDER BY (((((vt0.c1, vt0.c0, vt1.c0))=((vt1.c0, vt0.c0, vt0.c1)))) NOT NULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (ABS(((vt0.c1)>(vt1.c0)))) ORDER BY ((((vt0.c1)|(vt1.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((vt0.c1)>(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c1)|(vt1.c0))) IS FALSE) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (ABS(((vt0.c1)>(vt1.c0)))) ORDER BY ((((vt0.c1)|(vt1.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((vt0.c1)>(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c1)|(vt1.c0))) IS FALSE) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (ABS(((vt0.c1)>(vt1.c0)))) ORDER BY ((((vt0.c1)|(vt1.c0))) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c1) NOTNULL))) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c1) NOTNULL))) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c1) NOTNULL))) WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NULL)|(json(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((NULL)|(json(vt0.c1)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NULL)|(json(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((NULL)|(json(vt0.c1)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN -2.01030024E9 COLLATE BINARY THEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt1.c0)|(x'641d')) THEN ((((vt1.c0)AND(0.6270023166093885)))OR(vt1.c0)) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -2.01030024E9 COLLATE BINARY THEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt1.c0)|(x'641d')) THEN ((((vt1.c0)AND(0.6270023166093885)))OR(vt1.c0)) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN -2.01030024E9 COLLATE BINARY THEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt1.c0)|(x'641d')) THEN ((((vt1.c0)AND(0.6270023166093885)))OR(vt1.c0)) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -2.01030024E9 COLLATE BINARY THEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt1.c0)|(x'641d')) THEN ((((vt1.c0)AND(0.6270023166093885)))OR(vt1.c0)) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN -2.01030024E9 COLLATE BINARY THEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt1.c0)|(x'641d')) THEN ((((vt1.c0)AND(0.6270023166093885)))OR(vt1.c0)) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) END);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0)-(vt0.c0)) IN ('Er')));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)-(vt0.c0)) IN ('Er'))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0)-(vt0.c0)) IN ('Er')));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)-(vt0.c0)) IN ('Er'))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0)-(vt0.c0)) IN ('Er')));
SELECT COUNT(*) FROM vt1, vt0 WHERE (0.12186377875412058) ORDER BY CASE x'1e75'  WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END THEN vt0.c0 ELSE vt1.c0 END;
SELECT SUM(count) FROM (SELECT ((0.12186377875412058) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE x'1e75'  WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END THEN vt0.c0 ELSE vt1.c0 END);
SELECT COUNT(*) FROM vt1, vt0 WHERE (0.12186377875412058) ORDER BY CASE x'1e75'  WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END THEN vt0.c0 ELSE vt1.c0 END;
SELECT SUM(count) FROM (SELECT ((0.12186377875412058) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE x'1e75'  WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END THEN vt0.c0 ELSE vt1.c0 END);
SELECT COUNT(*) FROM vt1, vt0 WHERE (0.12186377875412058) ORDER BY CASE x'1e75'  WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END THEN vt0.c0 ELSE vt1.c0 END;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST, DATETIME(x'', ((vt0.c1) ISNULL), ((('-P\r0yS')) BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((vt0.c1) NOTNULL), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))), ((((vt0.c0 COLLATE BINARY)AND((- ('-1702483904')))))AND(((vt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST, DATETIME(x'', ((vt0.c1) ISNULL), ((('-P\r0yS')) BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((vt0.c1) NOTNULL), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))), ((((vt0.c0 COLLATE BINARY)AND((- ('-1702483904')))))AND(((vt0.c0) ISNULL))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST, DATETIME(x'', ((vt0.c1) ISNULL), ((('-P\r0yS')) BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((vt0.c1) NOTNULL), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))), ((((vt0.c0 COLLATE BINARY)AND((- ('-1702483904')))))AND(((vt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST, DATETIME(x'', ((vt0.c1) ISNULL), ((('-P\r0yS')) BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((vt0.c1) NOTNULL), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))), ((((vt0.c0 COLLATE BINARY)AND((- ('-1702483904')))))AND(((vt0.c0) ISNULL))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST, DATETIME(x'', ((vt0.c1) ISNULL), ((('-P\r0yS')) BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((vt0.c1) NOTNULL), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))), ((((vt0.c0 COLLATE BINARY)AND((- ('-1702483904')))))AND(((vt0.c0) ISNULL))) ASC;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON 1529639429 WHERE (-2130685308);
SELECT SUM(count) FROM (SELECT ALL ((-2130685308) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON 1529639429);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON 1529639429 WHERE (-2130685308);
SELECT SUM(count) FROM (SELECT ALL ((-2130685308) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON 1529639429);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON 1529639429 WHERE (-2130685308);
SELECT * FROM vt0 WHERE (((((vt0.c1))!=((vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1))!=((vt0.c1))) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1))!=((vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1))!=((vt0.c1))) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1))!=((vt0.c1))) IN ()));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT BETWEEN (((((vt0.c1)OR(vt1.c0)))AND(vt0.c0))) AND (vt0.c0 COLLATE RTRIM)) WHERE (CASE ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN 6.66992312E8 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN 6.66992312E8 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT BETWEEN (((((vt0.c1)OR(vt1.c0)))AND(vt0.c0))) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT BETWEEN (((((vt0.c1)OR(vt1.c0)))AND(vt0.c0))) AND (vt0.c0 COLLATE RTRIM)) WHERE (CASE ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN 6.66992312E8 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN 6.66992312E8 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT BETWEEN (((((vt0.c1)OR(vt1.c0)))AND(vt0.c0))) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT BETWEEN (((((vt0.c1)OR(vt1.c0)))AND(vt0.c0))) AND (vt0.c0 COLLATE RTRIM)) WHERE (CASE ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN 6.66992312E8 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (vt0.c1 IN ()) END);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ((((vt1.c0))<((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ((((vt1.c0))<((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ((((vt1.c0))<((vt1.c0))))));
SELECT * FROM vt0, vt1 WHERE (NULLIF(']S', '	KW{'));
SELECT SUM(count) FROM (SELECT ((NULLIF(']S', '	KW{')) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULLIF(']S', '	KW{'));
SELECT SUM(count) FROM (SELECT ((NULLIF(']S', '	KW{')) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULLIF(']S', '	KW{'));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)&(vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)&(vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)&(vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)&(vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)&(vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((((((vt1.c0)AND(vt1.c0)))OR(CAST(NULL AS REAL))))AND(vt0.c1 COLLATE RTRIM)))AND(0Xffffffffaddc4f9e)))AND(((NULL) IS TRUE))) WHERE (((NULLIF(vt0.c1, vt1.c0)) NOT BETWEEN (vt0.c1) AND (vt0.c1 COLLATE BINARY))) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c1)AND(8.7217475E8)), vt0.c1 COLLATE NOCASE, ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) AND ((vt0.c0 COLLATE RTRIM, CAST(vt1.c0 AS TEXT), ((((vt1.c0)AND(vt0.c1)))OR(vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt0.c1, vt1.c0)) NOT BETWEEN (vt0.c1) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((((((vt1.c0)AND(vt1.c0)))OR(CAST(NULL AS REAL))))AND(vt0.c1 COLLATE RTRIM)))AND(0xffffffffaddc4f9e)))AND(((NULL) IS TRUE))) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c1)AND(8.7217475E8)), vt0.c1 COLLATE NOCASE, ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) AND ((vt0.c0 COLLATE RTRIM, CAST(vt1.c0 AS TEXT), ((((vt1.c0)AND(vt0.c1)))OR(vt1.c0))))) ASC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((((((vt1.c0)AND(vt1.c0)))OR(CAST(NULL AS REAL))))AND(vt0.c1 COLLATE RTRIM)))AND(0Xffffffffaddc4f9e)))AND(((NULL) IS TRUE))) WHERE (((NULLIF(vt0.c1, vt1.c0)) NOT BETWEEN (vt0.c1) AND (vt0.c1 COLLATE BINARY))) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c1)AND(8.7217475E8)), vt0.c1 COLLATE NOCASE, ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) AND ((vt0.c0 COLLATE RTRIM, CAST(vt1.c0 AS TEXT), ((((vt1.c0)AND(vt0.c1)))OR(vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt0.c1, vt1.c0)) NOT BETWEEN (vt0.c1) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((((((vt1.c0)AND(vt1.c0)))OR(CAST(NULL AS REAL))))AND(vt0.c1 COLLATE RTRIM)))AND(0xffffffffaddc4f9e)))AND(((NULL) IS TRUE))) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c1)AND(8.7217475E8)), vt0.c1 COLLATE NOCASE, ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) AND ((vt0.c0 COLLATE RTRIM, CAST(vt1.c0 AS TEXT), ((((vt1.c0)AND(vt0.c1)))OR(vt1.c0))))) ASC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((((((vt1.c0)AND(vt1.c0)))OR(CAST(NULL AS REAL))))AND(vt0.c1 COLLATE RTRIM)))AND(0Xffffffffaddc4f9e)))AND(((NULL) IS TRUE))) WHERE (((NULLIF(vt0.c1, vt1.c0)) NOT BETWEEN (vt0.c1) AND (vt0.c1 COLLATE BINARY))) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c1)AND(8.7217475E8)), vt0.c1 COLLATE NOCASE, ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) AND ((vt0.c0 COLLATE RTRIM, CAST(vt1.c0 AS TEXT), ((((vt1.c0)AND(vt0.c1)))OR(vt1.c0))))) ASC;
SELECT * FROM vt1 WHERE (CASE '-0.0'  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c0 AS NUMERIC) END) ORDER BY (+ ((vt1.c0 IN (vt1.c0, vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE '-0.0'  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1 ORDER BY (+ ((vt1.c0 IN (vt1.c0, vt1.c0)))) DESC);
SELECT * FROM vt1 WHERE (CASE '-0.0'  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c0 AS NUMERIC) END) ORDER BY (+ ((vt1.c0 IN (vt1.c0, vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE '-0.0'  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1 ORDER BY (+ ((vt1.c0 IN (vt1.c0, vt1.c0)))) DESC);
SELECT * FROM vt1 WHERE (CASE '-0.0'  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c0 AS NUMERIC) END) ORDER BY (+ ((vt1.c0 IN (vt1.c0, vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (((((vt0.c1)-('''17676/Z'))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)-('''17676/Z'))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)-('''17676/Z'))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)-('''17676/Z'))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)-('''17676/Z'))) NOT NULL));
SELECT ALL * FROM vt0, vt1 WHERE (((((x'c3dc')) BETWEEN (('0.06034400261621664')) AND ((vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((x'c3dc')) BETWEEN (('0.06034400261621664')) AND ((vt0.c1))) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((x'c3dc')) BETWEEN (('0.06034400261621664')) AND ((vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((x'c3dc')) BETWEEN (('0.06034400261621664')) AND ((vt0.c1))) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((x'c3dc')) BETWEEN (('0.06034400261621664')) AND ((vt0.c1))) IN ()));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0 IN (NULL))) NOT BETWEEN (vt0.c1) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt1.c0 IN (NULL))) NOT BETWEEN (vt0.c1) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0 IN (NULL))) NOT BETWEEN (vt0.c1) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt1.c0 IN (NULL))) NOT BETWEEN (vt0.c1) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0 IN (NULL))) NOT BETWEEN (vt0.c1) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (vt0.c0);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt0.c1)|(vt0.c0)))) AND ((NULL)))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR(CAST(vt1.c0 AS TEXT))))OR((vt0.c1 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((vt0.c1)|(vt0.c0)))) AND ((NULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR(CAST(vt1.c0 AS TEXT))))OR((vt0.c1 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt0.c1)|(vt0.c0)))) AND ((NULL)))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR(CAST(vt1.c0 AS TEXT))))OR((vt0.c1 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((vt0.c1)|(vt0.c0)))) AND ((NULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR(CAST(vt1.c0 AS TEXT))))OR((vt0.c1 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt0.c1)|(vt0.c0)))) AND ((NULL)))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR(CAST(vt1.c0 AS TEXT))))OR((vt0.c1 IN ()))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('-2029511556') ISNULL)) NOTNULL)) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-2029511556') ISNULL)) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('-2029511556') ISNULL)) NOTNULL)) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-2029511556') ISNULL)) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('-2029511556') ISNULL)) NOTNULL)) ORDER BY vt1.c0  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN vt0.c1 COLLATE RTRIM THEN ((NULL) IS TRUE) END) ORDER BY '-743818367' ASC  NULLS LAST, HEX(DISTINCT ((vt1.c0)%(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 COLLATE RTRIM THEN ((NULL) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY '-743818367' ASC  NULLS LAST, HEX(DISTINCT ((vt1.c0)%(vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN vt0.c1 COLLATE RTRIM THEN ((NULL) IS TRUE) END) ORDER BY '-743818367' ASC  NULLS LAST, HEX(DISTINCT ((vt1.c0)%(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 COLLATE RTRIM THEN ((NULL) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY '-743818367' ASC  NULLS LAST, HEX(DISTINCT ((vt1.c0)%(vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN vt0.c1 COLLATE RTRIM THEN ((NULL) IS TRUE) END) ORDER BY '-743818367' ASC  NULLS LAST, HEX(DISTINCT ((vt1.c0)%(vt1.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END) AND (CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END) AND (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END) AND (CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END) AND (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END) AND (CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (NULL) ORDER BY ((CAST(vt0.c0 AS TEXT))-((- (vt0.c0)))) ASC, vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))-((- (vt0.c0)))) ASC, vt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (NULL) ORDER BY ((CAST(vt0.c0 AS TEXT))-((- (vt0.c0)))) ASC, vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))-((- (vt0.c0)))) ASC, vt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (NULL) ORDER BY ((CAST(vt0.c0 AS TEXT))-((- (vt0.c0)))) ASC, vt0.c1  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((+ (CASE WHEN vt0.c1 THEN vt1.c0 WHEN '0.8322560783398385' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN vt0.c1 THEN vt1.c0 WHEN '0.8322560783398385' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT ALL * FROM vt0, vt1 WHERE ((+ (CASE WHEN vt0.c1 THEN vt1.c0 WHEN '0.8322560783398385' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN vt0.c1 THEN vt1.c0 WHEN '0.8322560783398385' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT ALL * FROM vt0, vt1 WHERE ((+ (CASE WHEN vt0.c1 THEN vt1.c0 WHEN '0.8322560783398385' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1))=((vt0.c0))))<=(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))=((vt0.c0))))<=(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1))=((vt0.c0))))<=(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))=((vt0.c0))))<=(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1))=((vt0.c0))))<=(CAST(vt0.c0 AS BLOB))));
SELECT ALL * FROM vt0 WHERE ((LOWER(vt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LOWER(vt0.c1) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((LOWER(vt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LOWER(vt0.c1) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((LOWER(vt0.c1) IN ()));
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (0.6824322004952831) AND (-7.43818367E8))) ORDER BY UNLIKELY(DISTINCT CAST(vt1.c0 AS BLOB)) DESC  NULLS LAST, CAST(CAST(vt0.c0 AS REAL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (0.6824322004952831) AND (-7.43818367E8))) IS TRUE)  as count FROM vt0, vt1 ORDER BY UNLIKELY(DISTINCT CAST(vt1.c0 AS BLOB)) DESC  NULLS LAST, CAST(CAST(vt0.c0 AS REAL) AS INTEGER));
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (0.6824322004952831) AND (-7.43818367E8))) ORDER BY UNLIKELY(DISTINCT CAST(vt1.c0 AS BLOB)) DESC  NULLS LAST, CAST(CAST(vt0.c0 AS REAL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (0.6824322004952831) AND (-7.43818367E8))) IS TRUE)  as count FROM vt0, vt1 ORDER BY UNLIKELY(DISTINCT CAST(vt1.c0 AS BLOB)) DESC  NULLS LAST, CAST(CAST(vt0.c0 AS REAL) AS INTEGER));
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (0.6824322004952831) AND (-7.43818367E8))) ORDER BY UNLIKELY(DISTINCT CAST(vt1.c0 AS BLOB)) DESC  NULLS LAST, CAST(CAST(vt0.c0 AS REAL) AS INTEGER);
SELECT ALL * FROM vt1 WHERE (((((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))AND((NOT (vt1.c0)))))OR(0.7040127529241624)))AND(vt1.c0)))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0) BETWEEN (0X693e6534) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))AND((NOT (vt1.c0)))))OR(0.7040127529241624)))AND(vt1.c0)))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0) BETWEEN (0X693e6534) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))AND((NOT (vt1.c0)))))OR(0.7040127529241624)))AND(vt1.c0)))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0) BETWEEN (0X693e6534) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))AND((NOT (vt1.c0)))))OR(0.7040127529241624)))AND(vt1.c0)))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0) BETWEEN (0X693e6534) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))AND((NOT (vt1.c0)))))OR(0.7040127529241624)))AND(vt1.c0)))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0) BETWEEN (0X693e6534) AND (vt1.c0)))));
SELECT * FROM vt0, vt1 WHERE (((((-2044602157)>=(vt1.c0))) NOT BETWEEN (vt0.c0) AND (TYPEOF(vt0.c1)))) ORDER BY (('.jXe8XP')LIKE(vt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((-2044602157)>=(vt1.c0))) NOT BETWEEN (vt0.c0) AND (TYPEOF(vt0.c1)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (('.jXe8XP')LIKE(vt0.c1 COLLATE NOCASE)));
SELECT * FROM vt0, vt1 WHERE (((((-2044602157)>=(vt1.c0))) NOT BETWEEN (vt0.c0) AND (TYPEOF(vt0.c1)))) ORDER BY (('.jXe8XP')LIKE(vt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((-2044602157)>=(vt1.c0))) NOT BETWEEN (vt0.c0) AND (TYPEOF(vt0.c1)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (('.jXe8XP')LIKE(vt0.c1 COLLATE NOCASE)));
SELECT * FROM vt0, vt1 WHERE (((((-2044602157)>=(vt1.c0))) NOT BETWEEN (vt0.c0) AND (TYPEOF(vt0.c1)))) ORDER BY (('.jXe8XP')LIKE(vt0.c1 COLLATE NOCASE));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND ((((vt1.c0)GLOB(vt1.c0)))))) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND ((((vt1.c0)GLOB(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS REAL) AS INTEGER) DESC);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND ((((vt1.c0)GLOB(vt1.c0)))))) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND ((((vt1.c0)GLOB(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS REAL) AS INTEGER) DESC);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND ((((vt1.c0)GLOB(vt1.c0)))))) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS INTEGER) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY) ORDER BY CAST((vt0.c0 IN (vt0.c0, vt1.c0)) AS TEXT), json_patch(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), LOWER(vt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((vt0.c0 IN (vt0.c0, vt1.c0)) AS TEXT), json_patch(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), LOWER(vt0.c1))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY) ORDER BY CAST((vt0.c0 IN (vt0.c0, vt1.c0)) AS TEXT), json_patch(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), LOWER(vt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((vt0.c0 IN (vt0.c0, vt1.c0)) AS TEXT), json_patch(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), LOWER(vt0.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c1))>=((vt0.c1)))) IS TRUE)) ORDER BY (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((CAST(vt0.c1 AS TEXT)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>=((vt0.c1)))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((CAST(vt0.c1 AS TEXT)))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c1))>=((vt0.c1)))) IS TRUE)) ORDER BY (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((CAST(vt0.c1 AS TEXT)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>=((vt0.c1)))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((CAST(vt0.c1 AS TEXT)))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c1))>=((vt0.c1)))) IS TRUE)) ORDER BY (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((CAST(vt0.c1 AS TEXT)))) ASC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)|(vt0.c1))) NOTNULL) WHERE (LTRIM(vt0.c1) COLLATE NOCASE) ORDER BY ((((vt1.c0) NOT NULL))<((((vt0.c0, vt1.c0, x'')) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, 0X2d0deb1f)))))  NULLS FIRST, ((CAST(0.7762408092824643 AS BLOB)) NOT BETWEEN ((+ (vt0.c1))) AND ((NOT (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((LTRIM(vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)|(vt0.c1))) NOTNULL) ORDER BY ((((vt1.c0) NOT NULL))<((((vt0.c0, vt1.c0, x'')) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, 0X2d0deb1f)))))  NULLS FIRST, ((CAST(0.7762408092824643 AS BLOB)) NOT BETWEEN ((+ (vt0.c1))) AND ((NOT (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)|(vt0.c1))) NOTNULL) WHERE (LTRIM(vt0.c1) COLLATE NOCASE) ORDER BY ((((vt1.c0) NOT NULL))<((((vt0.c0, vt1.c0, x'')) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, 0X2d0deb1f)))))  NULLS FIRST, ((CAST(0.7762408092824643 AS BLOB)) NOT BETWEEN ((+ (vt0.c1))) AND ((NOT (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((LTRIM(vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)|(vt0.c1))) NOTNULL) ORDER BY ((((vt1.c0) NOT NULL))<((((vt0.c0, vt1.c0, x'')) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, 0X2d0deb1f)))))  NULLS FIRST, ((CAST(0.7762408092824643 AS BLOB)) NOT BETWEEN ((+ (vt0.c1))) AND ((NOT (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)|(vt0.c1))) NOTNULL) WHERE (LTRIM(vt0.c1) COLLATE NOCASE) ORDER BY ((((vt1.c0) NOT NULL))<((((vt0.c0, vt1.c0, x'')) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, 0X2d0deb1f)))))  NULLS FIRST, ((CAST(0.7762408092824643 AS BLOB)) NOT BETWEEN ((+ (vt0.c1))) AND ((NOT (vt0.c0)))) DESC;
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c1;
SELECT * FROM vt1, vt0 WHERE ((((((((((((vt1.c0))==((vt0.c0))))OR(((vt1.c0) NOT NULL))))AND(((vt0.c1)LIKE(vt0.c1)))))OR((((vt0.c1))>((vt1.c0))))))AND(((vt0.c0) BETWEEN (vt1.c0) AND ('d6')))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt1.c0))=((vt0.c0))))OR(((vt1.c0) NOT NULL))))AND(((vt0.c1)LIKE(vt0.c1)))))OR((((vt0.c1))>((vt1.c0))))))AND(((vt0.c0) BETWEEN (vt1.c0) AND ('d6'))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((((((((vt1.c0))==((vt0.c0))))OR(((vt1.c0) NOT NULL))))AND(((vt0.c1)LIKE(vt0.c1)))))OR((((vt0.c1))>((vt1.c0))))))AND(((vt0.c0) BETWEEN (vt1.c0) AND ('d6')))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt1.c0))=((vt0.c0))))OR(((vt1.c0) NOT NULL))))AND(((vt0.c1)LIKE(vt0.c1)))))OR((((vt0.c1))>((vt1.c0))))))AND(((vt0.c0) BETWEEN (vt1.c0) AND ('d6'))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((((((((vt1.c0))==((vt0.c0))))OR(((vt1.c0) NOT NULL))))AND(((vt0.c1)LIKE(vt0.c1)))))OR((((vt0.c1))>((vt1.c0))))))AND(((vt0.c0) BETWEEN (vt1.c0) AND ('d6')))));
SELECT * FROM vt0, vt1 WHERE (((((vt0.c1)AND(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))))OR(((vt1.c0)LIKE(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))))OR(((vt1.c0)LIKE(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c1)AND(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))))OR(((vt1.c0)LIKE(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))))OR(((vt1.c0)LIKE(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c1)AND(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))))OR(((vt1.c0)LIKE(vt0.c1)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((x'', vt0.c1, ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))))<=((0.2765082116846741, CASE WHEN x'e1bc' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN '1330506483' THEN vt1.c0 ELSE vt0.c0 END, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((x'', vt0.c1, ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))))<=((0.2765082116846741, CASE WHEN x'e1bc' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN '1330506483' THEN vt1.c0 ELSE vt0.c0 END, vt0.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((x'', vt0.c1, ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))))<=((0.2765082116846741, CASE WHEN x'e1bc' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN '1330506483' THEN vt1.c0 ELSE vt0.c0 END, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((x'', vt0.c1, ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))))<=((0.2765082116846741, CASE WHEN x'e1bc' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN '1330506483' THEN vt1.c0 ELSE vt0.c0 END, vt0.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((x'', vt0.c1, ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))))<=((0.2765082116846741, CASE WHEN x'e1bc' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN '1330506483' THEN vt1.c0 ELSE vt0.c0 END, vt0.c1))));
SELECT ALL * FROM vt1 WHERE (((((json_array_length(vt1.c0))AND(((vt1.c0)>>('68⡀9')))))OR(vt1.c0))) ORDER BY ((UNLIKELY(x'09ca')) IS FALSE)  NULLS LAST, (((vt1.c0)<(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((json_array_length(vt1.c0))AND(((vt1.c0)>>('68⡀9')))))OR(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((UNLIKELY(x'09ca')) IS FALSE)  NULLS LAST, (((vt1.c0)<(vt1.c0)) IN ()));
SELECT ALL * FROM vt1 WHERE (((((json_array_length(vt1.c0))AND(((vt1.c0)>>('68⡀9')))))OR(vt1.c0))) ORDER BY ((UNLIKELY(x'09ca')) IS FALSE)  NULLS LAST, (((vt1.c0)<(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((json_array_length(vt1.c0))AND(((vt1.c0)>>('68⡀9')))))OR(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((UNLIKELY(x'09ca')) IS FALSE)  NULLS LAST, (((vt1.c0)<(vt1.c0)) IN ()));
SELECT ALL * FROM vt1, vt0 WHERE (0.9207174314196146);
SELECT SUM(count) FROM (SELECT ((0.9207174314196146) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (0.9207174314196146);
SELECT SUM(count) FROM (SELECT ((0.9207174314196146) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (0.9207174314196146);
SELECT ALL * FROM vt1, vt0 WHERE ('-1845797256') ORDER BY ((NULLIF(vt0.c0, 0.027501286065142683))*((((vt0.c0, vt0.c1, vt1.c0))==((vt0.c0, 0.8440430269221096, vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1845797256') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((NULLIF(vt0.c0, 0.027501286065142683))*((((vt0.c0, vt0.c1, vt1.c0))==((vt0.c0, 0.8440430269221096, vt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ('-1845797256') ORDER BY ((NULLIF(vt0.c0, 0.027501286065142683))*((((vt0.c0, vt0.c1, vt1.c0))==((vt0.c0, 0.8440430269221096, vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1845797256') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((NULLIF(vt0.c0, 0.027501286065142683))*((((vt0.c0, vt0.c1, vt1.c0))==((vt0.c0, 0.8440430269221096, vt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ('-1845797256') ORDER BY ((NULLIF(vt0.c0, 0.027501286065142683))*((((vt0.c0, vt0.c1, vt1.c0))==((vt0.c0, 0.8440430269221096, vt0.c1))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN (((vt0.c1))!=((vt0.c1))) THEN ((vt1.c0) IS FALSE) ELSE (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c1))!=((vt0.c1))) THEN ((vt1.c0) IS FALSE) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN (((vt0.c1))!=((vt0.c1))) THEN ((vt1.c0) IS FALSE) ELSE (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c1))!=((vt0.c1))) THEN ((vt1.c0) IS FALSE) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN (((vt0.c1))!=((vt0.c1))) THEN ((vt1.c0) IS FALSE) ELSE (vt0.c1 IN ()) END);
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN x'' THEN vt0.c1 END) BETWEEN (vt1.c0) AND (NULL))) ORDER BY LIKE((vt0.c0 IN (vt0.c1)), CASE WHEN vt1.c0 THEN vt0.c1 END) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'' THEN vt0.c1 END) BETWEEN (vt1.c0) AND (NULL))) IS TRUE)  as count FROM vt1, vt0 ORDER BY LIKE((vt0.c0 IN (vt0.c1)), CASE WHEN vt1.c0 THEN vt0.c1 END) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN x'' THEN vt0.c1 END) BETWEEN (vt1.c0) AND (NULL))) ORDER BY LIKE((vt0.c0 IN (vt0.c1)), CASE WHEN vt1.c0 THEN vt0.c1 END) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'' THEN vt0.c1 END) BETWEEN (vt1.c0) AND (NULL))) IS TRUE)  as count FROM vt1, vt0 ORDER BY LIKE((vt0.c0 IN (vt0.c1)), CASE WHEN vt1.c0 THEN vt0.c1 END) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN x'' THEN vt0.c1 END) BETWEEN (vt1.c0) AND (NULL))) ORDER BY LIKE((vt0.c0 IN (vt0.c1)), CASE WHEN vt1.c0 THEN vt0.c1 END) DESC;
SELECT * FROM vt1, vt0 WHERE (CAST(((vt1.c0)&(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)&(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(((vt1.c0)&(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)&(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(((vt1.c0)&(vt1.c0)) AS REAL));
SELECT * FROM vt1 WHERE (((((((((CAST(vt1.c0 AS INTEGER))OR(((vt1.c0)<>(vt1.c0)))))OR((- (vt1.c0)))))AND((vt1.c0 IN ()))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt1.c0 AS INTEGER))OR(((vt1.c0)<>(vt1.c0)))))OR((- (vt1.c0)))))AND((vt1.c0 IN ()))))AND(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((CAST(vt1.c0 AS INTEGER))OR(((vt1.c0)<>(vt1.c0)))))OR((- (vt1.c0)))))AND((vt1.c0 IN ()))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt1.c0 AS INTEGER))OR(((vt1.c0)<>(vt1.c0)))))OR((- (vt1.c0)))))AND((vt1.c0 IN ()))))AND(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((CAST(vt1.c0 AS INTEGER))OR(((vt1.c0)<>(vt1.c0)))))OR((- (vt1.c0)))))AND((vt1.c0 IN ()))))AND(vt1.c0)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (+ (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN '-1845797256' WHEN ((x'')/(vt0.c0)) THEN (('-1648246714') NOT NULL) WHEN ((vt1.c0)-(vt0.c1)) THEN vt0.c1 ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)) END) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND (('||7')))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN '-1845797256' WHEN ((x'')/(vt0.c0)) THEN (('-1648246714') NOT NULL) WHEN ((vt1.c0)-(vt0.c1)) THEN vt0.c1 ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND (('||7')))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (+ (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN '-1845797256' WHEN ((x'')/(vt0.c0)) THEN (('-1648246714') NOT NULL) WHEN ((vt1.c0)-(vt0.c1)) THEN vt0.c1 ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)) END) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND (('||7')))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN '-1845797256' WHEN ((x'')/(vt0.c0)) THEN (('-1648246714') NOT NULL) WHEN ((vt1.c0)-(vt0.c1)) THEN vt0.c1 ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND (('||7')))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (+ (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN '-1845797256' WHEN ((x'')/(vt0.c0)) THEN (('-1648246714') NOT NULL) WHEN ((vt1.c0)-(vt0.c1)) THEN vt0.c1 ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)) END) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND (('||7')))) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST((NOT (vt0.c1)) AS NUMERIC) WHERE (((LIKE(vt1.c0, vt0.c1))<(0X2db006ba COLLATE BINARY))) ORDER BY (((- (NULL)))IS(((vt0.c0)=('')))) DESC  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)>=((vt0.c0 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(vt1.c0, vt0.c1))<(0x2db006ba COLLATE BINARY))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST((NOT (vt0.c1)) AS NUMERIC) ORDER BY (((- (NULL)))IS(((vt0.c0)==('')))) DESC  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)>=((vt0.c0 IN (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST((NOT (vt0.c1)) AS NUMERIC) WHERE (((LIKE(vt1.c0, vt0.c1))<(0X2db006ba COLLATE BINARY))) ORDER BY (((- (NULL)))IS(((vt0.c0)=('')))) DESC  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)>=((vt0.c0 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(vt1.c0, vt0.c1))<(0x2db006ba COLLATE BINARY))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST((NOT (vt0.c1)) AS NUMERIC) ORDER BY (((- (NULL)))IS(((vt0.c0)==('')))) DESC  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)>=((vt0.c0 IN (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST((NOT (vt0.c1)) AS NUMERIC) WHERE (((LIKE(vt1.c0, vt0.c1))<(0X2db006ba COLLATE BINARY))) ORDER BY (((- (NULL)))IS(((vt0.c0)=('')))) DESC  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)>=((vt0.c0 IN (vt1.c0))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CASE vt0.c0  WHEN ((vt1.c0)&(vt0.c1)) THEN HEX(DISTINCT vt0.c0) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END THEN ((vt0.c1) NOTNULL) WHEN (vt0.c1 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE vt0.c0  WHEN ((vt1.c0)&(vt0.c1)) THEN HEX(DISTINCT vt0.c0) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END THEN ((vt0.c1) NOTNULL) WHEN (vt0.c1 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CASE vt0.c0  WHEN ((vt1.c0)&(vt0.c1)) THEN HEX(DISTINCT vt0.c0) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END THEN ((vt0.c1) NOTNULL) WHEN (vt0.c1 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE vt0.c0  WHEN ((vt1.c0)&(vt0.c1)) THEN HEX(DISTINCT vt0.c0) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END THEN ((vt0.c1) NOTNULL) WHEN (vt0.c1 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CASE vt0.c0  WHEN ((vt1.c0)&(vt0.c1)) THEN HEX(DISTINCT vt0.c0) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END THEN ((vt0.c1) NOTNULL) WHEN (vt0.c1 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END WHERE (x'');
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((NULL) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((NULL) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((NULL) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((NULL) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((NULL) IS TRUE)) IS FALSE));
SELECT * FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS TEXT))-(vt1.c0))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT))-(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 ASC);
SELECT * FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS TEXT))-(vt1.c0))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT))-(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 ASC);
SELECT * FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS TEXT))-(vt1.c0))) ORDER BY vt1.c0 ASC;
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()));
SELECT COUNT(*) FROM vt0, vt1 WHERE (ABS(DISTINCT (vt1.c0 IN ()))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (vt1.c0 IN ()))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0, vt1 WHERE (ABS(DISTINCT (vt1.c0 IN ()))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (vt1.c0 IN ()))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0, vt1 WHERE (ABS(DISTINCT (vt1.c0 IN ()))) ORDER BY vt0.c0;
SELECT ALL * FROM vt0 WHERE ('+ _');
SELECT SUM(count) FROM (SELECT ALL (('+ _') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('+ _');
SELECT SUM(count) FROM (SELECT ALL (('+ _') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('+ _');
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END COLLATE NOCASE WHERE (((((vt1.c0) NOTNULL)) NOT BETWEEN (0.4106255481783083) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) NOT BETWEEN (0.4106255481783083) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END COLLATE NOCASE WHERE (((((vt1.c0) NOTNULL)) NOT BETWEEN (0.4106255481783083) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) NOT BETWEEN (0.4106255481783083) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END COLLATE NOCASE WHERE (((((vt1.c0) NOTNULL)) NOT BETWEEN (0.4106255481783083) AND (vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (0.46717224582866435))) ORDER BY CASE (+ ('0.8322560783398385'))  WHEN CAST(x'86cb' AS BLOB) THEN (vt0.c1 IN (vt0.c0, vt0.c0)) ELSE CASE WHEN vt1.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c1 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (0.46717224582866435))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE (+ ('0.8322560783398385'))  WHEN CAST(x'86cb' AS BLOB) THEN (vt0.c1 IN (vt0.c0, vt0.c0)) ELSE CASE WHEN vt1.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c1 END END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (0.46717224582866435))) ORDER BY CASE (+ ('0.8322560783398385'))  WHEN CAST(x'86cb' AS BLOB) THEN (vt0.c1 IN (vt0.c0, vt0.c0)) ELSE CASE WHEN vt1.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c1 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (0.46717224582866435))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE (+ ('0.8322560783398385'))  WHEN CAST(x'86cb' AS BLOB) THEN (vt0.c1 IN (vt0.c0, vt0.c0)) ELSE CASE WHEN vt1.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c1 END END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (0.46717224582866435))) ORDER BY CASE (+ ('0.8322560783398385'))  WHEN CAST(x'86cb' AS BLOB) THEN (vt0.c1 IN (vt0.c0, vt0.c0)) ELSE CASE WHEN vt1.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c1 END END  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((NULL IN ()))IS NOT(vt0.c1))) ORDER BY CAST((+ ('0.5809849902739029')) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))IS NOT(vt0.c1))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((+ ('0.5809849902739029')) AS TEXT) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((NULL IN ()))IS NOT(vt0.c1))) ORDER BY CAST((+ ('0.5809849902739029')) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))IS NOT(vt0.c1))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((+ ('0.5809849902739029')) AS TEXT) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((NULL IN ()))IS NOT(vt0.c1))) ORDER BY CAST((+ ('0.5809849902739029')) AS TEXT) ASC;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ())) ORDER BY (((((vt1.c0)<>(vt1.c0))))>=(('xa0M*g/~'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)!=(vt1.c0))))>=(('xa0M*g/~'))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ())) ORDER BY (((((vt1.c0)<>(vt1.c0))))>=(('xa0M*g/~'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)!=(vt1.c0))))>=(('xa0M*g/~'))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ())) ORDER BY (((((vt1.c0)<>(vt1.c0))))>=(('xa0M*g/~'))) ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (CAST(vt0.c1 COLLATE RTRIM AS TEXT)) ORDER BY (((- (vt0.c1))) BETWEEN (vt0.c1 COLLATE BINARY) AND (((vt1.c0) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY (((- (vt0.c1))) BETWEEN (vt0.c1 COLLATE BINARY) AND (((vt1.c0) IS TRUE))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (CAST(vt0.c1 COLLATE RTRIM AS TEXT)) ORDER BY (((- (vt0.c1))) BETWEEN (vt0.c1 COLLATE BINARY) AND (((vt1.c0) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY (((- (vt0.c1))) BETWEEN (vt0.c1 COLLATE BINARY) AND (((vt1.c0) IS TRUE))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (CAST(vt0.c1 COLLATE RTRIM AS TEXT)) ORDER BY (((- (vt0.c1))) BETWEEN (vt0.c1 COLLATE BINARY) AND (((vt1.c0) IS TRUE))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((((((((((((x'')AND(-1937610122)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)) AS REAL)) ORDER BY ((vt1.c0) NOT BETWEEN (((((((((((((vt1.c0)OR(vt1.c0)))OR(0.9609436988528277)))AND(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(x''))) AND (((vt0.c1)<<(vt0.c1)))) ASC  NULLS LAST, (- (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST, (vt1.c0 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((x'')AND(-1937610122)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) NOT BETWEEN (((((((((((((vt1.c0)OR(vt1.c0)))OR(0.9609436988528277)))AND(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(x''))) AND (((vt0.c1)<<(vt0.c1)))) ASC  NULLS LAST, (- (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST, (vt1.c0 IN ()) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((((((((((((x'')AND(-1937610122)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)) AS REAL)) ORDER BY ((vt1.c0) NOT BETWEEN (((((((((((((vt1.c0)OR(vt1.c0)))OR(0.9609436988528277)))AND(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(x''))) AND (((vt0.c1)<<(vt0.c1)))) ASC  NULLS LAST, (- (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST, (vt1.c0 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((x'')AND(-1937610122)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) NOT BETWEEN (((((((((((((vt1.c0)OR(vt1.c0)))OR(0.9609436988528277)))AND(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(x''))) AND (((vt0.c1)<<(vt0.c1)))) ASC  NULLS LAST, (- (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST, (vt1.c0 IN ()) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((((((((((((x'')AND(-1937610122)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)) AS REAL)) ORDER BY ((vt1.c0) NOT BETWEEN (((((((((((((vt1.c0)OR(vt1.c0)))OR(0.9609436988528277)))AND(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(x''))) AND (((vt0.c1)<<(vt0.c1)))) ASC  NULLS LAST, (- (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST, (vt1.c0 IN ()) COLLATE BINARY DESC;
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c1)IS NOT(vt0.c1))) NOT NULL), (((('.%\3*q{')GLOB(vt0.c1)))==((('B,lo') NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1)IS NOT(vt0.c1))) NOT NULL), (((('.%\3*q{')GLOB(vt0.c1)))=((('B,lo') NOT NULL)))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c1)IS NOT(vt0.c1))) NOT NULL), (((('.%\3*q{')GLOB(vt0.c1)))==((('B,lo') NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1)IS NOT(vt0.c1))) NOT NULL), (((('.%\3*q{')GLOB(vt0.c1)))=((('B,lo') NOT NULL)))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c1)IS NOT(vt0.c1))) NOT NULL), (((('.%\3*q{')GLOB(vt0.c1)))==((('B,lo') NOT NULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1 IN ()))%((((vt0.c0, vt1.c0, vt1.c0))<(('6', -1428553015, '-775073713'))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))%((((vt0.c0, vt1.c0, vt1.c0))<(('6', -1428553015, '-775073713')))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1 IN ()))%((((vt0.c0, vt1.c0, vt1.c0))<(('6', -1428553015, '-775073713'))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))%((((vt0.c0, vt1.c0, vt1.c0))<(('6', -1428553015, '-775073713')))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1 IN ()))%((((vt0.c0, vt1.c0, vt1.c0))<(('6', -1428553015, '-775073713'))))));
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((x'ffee' IN (vt1.c0))))!=((NULL))));
SELECT SUM(count) FROM (SELECT ((((((x'ffee' IN (vt1.c0))))<>((NULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((x'ffee' IN (vt1.c0))))!=((NULL))));
SELECT SUM(count) FROM (SELECT ((((((x'ffee' IN (vt1.c0))))<>((NULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((x'ffee' IN (vt1.c0))))!=((NULL))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((ROUND(vt1.c0, NULL)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))) AND (((vt1.c0) IS FALSE))) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (vt1.c0) AND (CASE WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (vt1.c0) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((ROUND(vt1.c0, NULL)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))) AND (((vt1.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((ROUND(vt1.c0, NULL)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))) AND (((vt1.c0) IS FALSE))) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (vt1.c0) AND (CASE WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (vt1.c0) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((ROUND(vt1.c0, NULL)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))) AND (((vt1.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((ROUND(vt1.c0, NULL)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))) AND (((vt1.c0) IS FALSE))) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (vt1.c0) AND (CASE WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt0.c1)=(vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c0)<(vt1.c0)) ELSE CASE NULL  WHEN vt0.c1 THEN 0.019935772548516417 ELSE vt1.c0 END END) ORDER BY CAST(vt1.c0 AS REAL) COLLATE RTRIM DESC  NULLS LAST, ((((((vt1.c0)!=(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))OR((((vt1.c0))<=((vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)==(vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c0)<(vt1.c0)) ELSE CASE NULL  WHEN vt0.c1 THEN 0.019935772548516417 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt1.c0 AS REAL) COLLATE RTRIM DESC  NULLS LAST, ((((((vt1.c0)!=(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))OR((((vt1.c0))<=((vt0.c1)))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt0.c1)=(vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c0)<(vt1.c0)) ELSE CASE NULL  WHEN vt0.c1 THEN 0.019935772548516417 ELSE vt1.c0 END END) ORDER BY CAST(vt1.c0 AS REAL) COLLATE RTRIM DESC  NULLS LAST, ((((((vt1.c0)!=(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))OR((((vt1.c0))<=((vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)==(vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c0)<(vt1.c0)) ELSE CASE NULL  WHEN vt0.c1 THEN 0.019935772548516417 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt1.c0 AS REAL) COLLATE RTRIM DESC  NULLS LAST, ((((((vt1.c0)!=(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))OR((((vt1.c0))<=((vt0.c1)))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt0.c1)=(vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c0)<(vt1.c0)) ELSE CASE NULL  WHEN vt0.c1 THEN 0.019935772548516417 ELSE vt1.c0 END END) ORDER BY CAST(vt1.c0 AS REAL) COLLATE RTRIM DESC  NULLS LAST, ((((((vt1.c0)!=(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))OR((((vt1.c0))<=((vt0.c1)))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((1865532899)LIKE(vt1.c0))) BETWEEN (LIKELY(DISTINCT vt1.c0)) AND ((vt1.c0 IN ())))) ORDER BY (((CAST(vt1.c0 AS BLOB)))=((((0.4536321407399754) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((1865532899)LIKE(vt1.c0))) BETWEEN (LIKELY(DISTINCT vt1.c0)) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (((CAST(vt1.c0 AS BLOB)))==((((0.4536321407399754) ISNULL)))));
SELECT ALL * FROM vt1 WHERE (((((1865532899)LIKE(vt1.c0))) BETWEEN (LIKELY(DISTINCT vt1.c0)) AND ((vt1.c0 IN ())))) ORDER BY (((CAST(vt1.c0 AS BLOB)))=((((0.4536321407399754) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((1865532899)LIKE(vt1.c0))) BETWEEN (LIKELY(DISTINCT vt1.c0)) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (((CAST(vt1.c0 AS BLOB)))==((((0.4536321407399754) ISNULL)))));
SELECT ALL * FROM vt1 WHERE (((((1865532899)LIKE(vt1.c0))) BETWEEN (LIKELY(DISTINCT vt1.c0)) AND ((vt1.c0 IN ())))) ORDER BY (((CAST(vt1.c0 AS BLOB)))=((((0.4536321407399754) ISNULL))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((x'' COLLATE RTRIM) BETWEEN (((((vt0.c0)OR(vt1.c0)))OR(x'a520'))) AND ((+ (vt0.c1)))) WHERE (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((x'' COLLATE RTRIM) BETWEEN (((((vt0.c0)OR(vt1.c0)))OR(x'a520'))) AND ((+ (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((x'' COLLATE RTRIM) BETWEEN (((((vt0.c0)OR(vt1.c0)))OR(x'a520'))) AND ((+ (vt0.c1)))) WHERE (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((x'' COLLATE RTRIM) BETWEEN (((((vt0.c0)OR(vt1.c0)))OR(x'a520'))) AND ((+ (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((x'' COLLATE RTRIM) BETWEEN (((((vt0.c0)OR(vt1.c0)))OR(x'a520'))) AND ((+ (vt0.c1)))) WHERE (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))==((vt0.c1)))) BETWEEN (NULL) AND (LENGTH(vt0.c1)))) ORDER BY CAST(CASE vt0.c1  WHEN '' THEN vt0.c1 END AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))==((vt0.c1)))) BETWEEN (NULL) AND (LENGTH(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c1  WHEN '' THEN vt0.c1 END AS BLOB) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))==((vt0.c1)))) BETWEEN (NULL) AND (LENGTH(vt0.c1)))) ORDER BY CAST(CASE vt0.c1  WHEN '' THEN vt0.c1 END AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))==((vt0.c1)))) BETWEEN (NULL) AND (LENGTH(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c1  WHEN '' THEN vt0.c1 END AS BLOB) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))==((vt0.c1)))) BETWEEN (NULL) AND (LENGTH(vt0.c1)))) ORDER BY CAST(CASE vt0.c1  WHEN '' THEN vt0.c1 END AS BLOB) ASC;
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY ((((((((('ur' IN ()))OR(((vt1.c0)GLOB(vt1.c0)))))OR(LIKELY(vt1.c0))))OR((+ (vt1.c0)))))AND(((vt1.c0)IS(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((('ur' IN ()))OR(((vt1.c0)GLOB(vt1.c0)))))OR(LIKELY(vt1.c0))))OR((+ (vt1.c0)))))AND(((vt1.c0)IS(x'')))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY ((((((((('ur' IN ()))OR(((vt1.c0)GLOB(vt1.c0)))))OR(LIKELY(vt1.c0))))OR((+ (vt1.c0)))))AND(((vt1.c0)IS(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((('ur' IN ()))OR(((vt1.c0)GLOB(vt1.c0)))))OR(LIKELY(vt1.c0))))OR((+ (vt1.c0)))))AND(((vt1.c0)IS(x'')))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY ((((((((('ur' IN ()))OR(((vt1.c0)GLOB(vt1.c0)))))OR(LIKELY(vt1.c0))))OR((+ (vt1.c0)))))AND(((vt1.c0)IS(x'')))) DESC;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))IS NOT(LIKELIHOOD(DISTINCT vt1.c0, 0.3638037448927274)))) ORDER BY json_patch((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), (NOT (vt1.c0)))  NULLS LAST, (((vt1.c0 IN (vt1.c0, vt1.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))IS NOT(LIKELIHOOD(DISTINCT vt1.c0, 0.3638037448927274)))) IS TRUE)  as count FROM vt1 ORDER BY json_patch((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), (NOT (vt1.c0)))  NULLS LAST, (((vt1.c0 IN (vt1.c0, vt1.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))IS NOT(LIKELIHOOD(DISTINCT vt1.c0, 0.3638037448927274)))) ORDER BY json_patch((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), (NOT (vt1.c0)))  NULLS LAST, (((vt1.c0 IN (vt1.c0, vt1.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))IS NOT(LIKELIHOOD(DISTINCT vt1.c0, 0.3638037448927274)))) IS TRUE)  as count FROM vt1 ORDER BY json_patch((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), (NOT (vt1.c0)))  NULLS LAST, (((vt1.c0 IN (vt1.c0, vt1.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))IS NOT(LIKELIHOOD(DISTINCT vt1.c0, 0.3638037448927274)))) ORDER BY json_patch((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), (NOT (vt1.c0)))  NULLS LAST, (((vt1.c0 IN (vt1.c0, vt1.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY (NOT (((vt0.c0) NOT NULL))) DESC  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c1) AND (x''))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) NOT NULL))) DESC  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c1) AND (x''))) ISNULL) DESC);
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY (NOT (((vt0.c0) NOT NULL))) DESC  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c1) AND (x''))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) NOT NULL))) DESC  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c1) AND (x''))) ISNULL) DESC);
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY (NOT (((vt0.c0) NOT NULL))) DESC  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c1) AND (x''))) ISNULL) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((UPPER(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((UPPER(DISTINCT vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((UPPER(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((UPPER(DISTINCT vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((UPPER(DISTINCT vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (vt1.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL))>=(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))>=(NULL))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL))>=(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))>=(NULL))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL))>=(NULL)));
SELECT * FROM vt1, vt0 WHERE (CAST(((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(0.10976934174088226)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(0.10976934174088226)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(0.10976934174088226)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(0.10976934174088226)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(0.10976934174088226)) AS INTEGER));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))<(((vt0.c1) ISNULL))) WHERE ((~ (1503810056)));
SELECT SUM(count) FROM (SELECT (((~ (1503810056))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))<(((vt0.c1) ISNULL))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))<(((vt0.c1) ISNULL))) WHERE ((~ (1503810056)));
SELECT SUM(count) FROM (SELECT (((~ (1503810056))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))<(((vt0.c1) ISNULL))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))<(((vt0.c1) ISNULL))) WHERE ((~ (1503810056)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END)) AND ((((vt0.c0) IS FALSE)))) WHERE ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, vt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, vt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END)) AND ((((vt0.c0) IS FALSE)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END)) AND ((((vt0.c0) IS FALSE)))) WHERE ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, vt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, vt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END)) AND ((((vt0.c0) IS FALSE)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END)) AND ((((vt0.c0) IS FALSE)))) WHERE ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, vt0.c1))) COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)*(((vt1.c0)!=(vt1.c0))))) ORDER BY CHANGES() ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)*(((vt1.c0)!=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CHANGES() ASC);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)*(((vt1.c0)!=(vt1.c0))))) ORDER BY CHANGES() ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)*(((vt1.c0)!=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CHANGES() ASC);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)*(((vt1.c0)!=(vt1.c0))))) ORDER BY CHANGES() ASC;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0)<=(vt1.c0)))))) ORDER BY ABS(DISTINCT vt1.c0) COLLATE RTRIM ASC, ((UPPER(DISTINCT vt1.c0)) ISNULL), ((NULL) BETWEEN ((- (vt1.c0))) AND (TRIM(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0)<=(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ABS(DISTINCT vt1.c0) COLLATE RTRIM ASC, ((UPPER(DISTINCT vt1.c0)) ISNULL), ((NULL) BETWEEN ((- (vt1.c0))) AND (TRIM(vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0)<=(vt1.c0)))))) ORDER BY ABS(DISTINCT vt1.c0) COLLATE RTRIM ASC, ((UPPER(DISTINCT vt1.c0)) ISNULL), ((NULL) BETWEEN ((- (vt1.c0))) AND (TRIM(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0)<=(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ABS(DISTINCT vt1.c0) COLLATE RTRIM ASC, ((UPPER(DISTINCT vt1.c0)) ISNULL), ((NULL) BETWEEN ((- (vt1.c0))) AND (TRIM(vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0)<=(vt1.c0)))))) ORDER BY ABS(DISTINCT vt1.c0) COLLATE RTRIM ASC, ((UPPER(DISTINCT vt1.c0)) ISNULL), ((NULL) BETWEEN ((- (vt1.c0))) AND (TRIM(vt1.c0)))  NULLS FIRST;
SELECT * FROM vt1 WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN ABS(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END END) ORDER BY (NOT (vt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS INTEGER)  WHEN ABS(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END END) IS TRUE)  as count FROM vt1 ORDER BY (NOT (vt1.c0)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN ABS(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END END) ORDER BY (NOT (vt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS INTEGER)  WHEN ABS(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END END) IS TRUE)  as count FROM vt1 ORDER BY (NOT (vt1.c0)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN ABS(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END END) ORDER BY (NOT (vt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((vt1.c0)AND('Anv[')) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)AND('Anv[')) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)AND('Anv[')) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)AND('Anv[')) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)AND('Anv[')) IN ()));
SELECT * FROM vt0 WHERE (NULLIF(CAST(vt0.c1 AS INTEGER), ((((vt0.c1)AND('-1609130758')))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(CAST(vt0.c1 AS INTEGER), ((((vt0.c1)AND('-1609130758')))OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULLIF(CAST(vt0.c1 AS INTEGER), ((((vt0.c1)AND('-1609130758')))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(CAST(vt0.c1 AS INTEGER), ((((vt0.c1)AND('-1609130758')))OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULLIF(CAST(vt0.c1 AS INTEGER), ((((vt0.c1)AND('-1609130758')))OR(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((0.465065559650618, 'Y|+O2㸧jD', ((vt1.c0) NOT NULL))) AND ((CAST(vt1.c0 AS TEXT), (((vt1.c0))<((vt1.c0))), (NOT (vt1.c0)))))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((0.465065559650618, 'Y|+O2㸧jD', ((vt1.c0) NOT NULL))) AND ((CAST(vt1.c0 AS TEXT), (((vt1.c0))<((vt1.c0))), (NOT (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((0.465065559650618, 'Y|+O2㸧jD', ((vt1.c0) NOT NULL))) AND ((CAST(vt1.c0 AS TEXT), (((vt1.c0))<((vt1.c0))), (NOT (vt1.c0)))))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((0.465065559650618, 'Y|+O2㸧jD', ((vt1.c0) NOT NULL))) AND ((CAST(vt1.c0 AS TEXT), (((vt1.c0))<((vt1.c0))), (NOT (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((0.465065559650618, 'Y|+O2㸧jD', ((vt1.c0) NOT NULL))) AND ((CAST(vt1.c0 AS TEXT), (((vt1.c0))<((vt1.c0))), (NOT (vt1.c0)))))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE) DESC;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN 0xffffffffd366c364 THEN ((vt0.c1)IS(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0xffffffffd366c364 THEN ((vt0.c1)IS(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN 0xffffffffd366c364 THEN ((vt0.c1)IS(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0xffffffffd366c364 THEN ((vt0.c1)IS(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN 0xffffffffd366c364 THEN ((vt0.c1)IS(vt0.c1)) END);
SELECT ALL * FROM vt1, vt0 WHERE ((('')OR(CASE WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY 'uJ(' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('')OR(CASE WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 'uJ(' DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((('')OR(CASE WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY 'uJ(' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('')OR(CASE WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 'uJ(' DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((('')OR(CASE WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY 'uJ(' DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (((NULL) IS TRUE)) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT BETWEEN (((NULL) IS TRUE)) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (((NULL) IS TRUE)) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT BETWEEN (((NULL) IS TRUE)) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (((NULL) IS TRUE)) AND (CAST(vt0.c0 AS REAL))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)||(vt0.c1))) ISNULL)) ORDER BY ((((vt0.c1) IS FALSE)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)||(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) IS FALSE)) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)||(vt0.c1))) ISNULL)) ORDER BY ((((vt0.c1) IS FALSE)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)||(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) IS FALSE)) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)||(vt0.c1))) ISNULL)) ORDER BY ((((vt0.c1) IS FALSE)) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1 WHERE (CAST((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1 WHERE (CAST((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1 WHERE (CAST((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS TEXT));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((NOT (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))<>((((vt0.c1)+(vt0.c1)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), (NOT (vt1.c0))))) WHERE ((((vt0.c0)) BETWEEN ((((('0.06120360123211033', vt0.c0, '897746753')) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c1))))) AND ((((vt0.c1)IS(vt1.c0)))))) ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((('0.06120360123211033', vt0.c0, '897746753')) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c1))))) AND ((((vt0.c1)IS(vt1.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((NOT (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))!=((((vt0.c1)+(vt0.c1)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), (NOT (vt1.c0))))) ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((NOT (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))<>((((vt0.c1)+(vt0.c1)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), (NOT (vt1.c0))))) WHERE ((((vt0.c0)) BETWEEN ((((('0.06120360123211033', vt0.c0, '897746753')) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c1))))) AND ((((vt0.c1)IS(vt1.c0)))))) ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((('0.06120360123211033', vt0.c0, '897746753')) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c1))))) AND ((((vt0.c1)IS(vt1.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((NOT (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))!=((((vt0.c1)+(vt0.c1)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), (NOT (vt1.c0))))) ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((NOT (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))<>((((vt0.c1)+(vt0.c1)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), (NOT (vt1.c0))))) WHERE ((((vt0.c0)) BETWEEN ((((('0.06120360123211033', vt0.c0, '897746753')) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c1))))) AND ((((vt0.c1)IS(vt1.c0)))))) ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)>=(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>=(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)>=(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>=(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)>=(vt1.c0))) IS TRUE));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY TRIM(DISTINCT ((vt1.c0) NOT NULL)) DESC  NULLS LAST, MAX(((vt1.c0)<>(vt1.c0)), (vt1.c0 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT ((vt1.c0) NOT NULL)) DESC  NULLS LAST, MAX(((vt1.c0)<>(vt1.c0)), (vt1.c0 IN ())) ASC);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY TRIM(DISTINCT ((vt1.c0) NOT NULL)) DESC  NULLS LAST, MAX(((vt1.c0)<>(vt1.c0)), (vt1.c0 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT ((vt1.c0) NOT NULL)) DESC  NULLS LAST, MAX(((vt1.c0)<>(vt1.c0)), (vt1.c0 IN ())) ASC);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY TRIM(DISTINCT ((vt1.c0) NOT NULL)) DESC  NULLS LAST, MAX(((vt1.c0)<>(vt1.c0)), (vt1.c0 IN ())) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN (CASE WHEN 'j⃅' THEN 0.22285897818750355 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN (CASE WHEN 'j⃅' THEN 0.22285897818750355 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN (CASE WHEN 'j⃅' THEN 0.22285897818750355 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN (CASE WHEN 'j⃅' THEN 0.22285897818750355 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN (CASE WHEN 'j⃅' THEN 0.22285897818750355 ELSE vt1.c0 END)));
SELECT * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0))<=(('134692016'))) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0))<=(('134692016'))) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0))<=(('134692016'))) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0))<=(('134692016'))) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0))<=(('134692016'))) COLLATE BINARY DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((0.08742496345855555) BETWEEN ((- (vt0.c1))) AND ((- ('766510778')))));
SELECT SUM(count) FROM (SELECT ALL ((((0.08742496345855555) BETWEEN ((- (vt0.c1))) AND ((- ('766510778'))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((0.08742496345855555) BETWEEN ((- (vt0.c1))) AND ((- ('766510778')))));
SELECT SUM(count) FROM (SELECT ALL ((((0.08742496345855555) BETWEEN ((- (vt0.c1))) AND ((- ('766510778'))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((0.08742496345855555) BETWEEN ((- (vt0.c1))) AND ((- ('766510778')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS TEXT)  WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS TEXT)  WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0) IS FALSE) END);
SELECT * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN (~ (vt0.c1)) WHEN (vt0.c1 IN (vt0.c1, vt0.c1)) THEN (('Ll') NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN (vt0.c1 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN (vt0.c1 IN ('IG')) WHEN '' THEN ((vt0.c0)%(vt0.c1)) WHEN vt0.c1 THEN ((vt0.c0)+(vt0.c1)) WHEN vt0.c0 THEN UNLIKELY(vt0.c1) END) ORDER BY (((vt0.c1, vt0.c1, x'')) NOT BETWEEN ((CAST(vt0.c1 AS REAL), HEX('Vx*엣x2_b'), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((HEX(vt0.c0), (vt0.c1 IN ()), vt0.c0 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS REAL) THEN (~ (vt0.c1)) WHEN (vt0.c1 IN (vt0.c1, vt0.c1)) THEN (('Ll') NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN (vt0.c1 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN (vt0.c1 IN ('IG')) WHEN '' THEN ((vt0.c0)%(vt0.c1)) WHEN vt0.c1 THEN ((vt0.c0)+(vt0.c1)) WHEN vt0.c0 THEN UNLIKELY(vt0.c1) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, x'')) NOT BETWEEN ((CAST(vt0.c1 AS REAL), HEX('Vx*엣x2_b'), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((HEX(vt0.c0), (vt0.c1 IN ()), vt0.c0 COLLATE RTRIM)))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN (~ (vt0.c1)) WHEN (vt0.c1 IN (vt0.c1, vt0.c1)) THEN (('Ll') NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN (vt0.c1 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN (vt0.c1 IN ('IG')) WHEN '' THEN ((vt0.c0)%(vt0.c1)) WHEN vt0.c1 THEN ((vt0.c0)+(vt0.c1)) WHEN vt0.c0 THEN UNLIKELY(vt0.c1) END) ORDER BY (((vt0.c1, vt0.c1, x'')) NOT BETWEEN ((CAST(vt0.c1 AS REAL), HEX('Vx*엣x2_b'), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((HEX(vt0.c0), (vt0.c1 IN ()), vt0.c0 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS REAL) THEN (~ (vt0.c1)) WHEN (vt0.c1 IN (vt0.c1, vt0.c1)) THEN (('Ll') NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN (vt0.c1 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN (vt0.c1 IN ('IG')) WHEN '' THEN ((vt0.c0)%(vt0.c1)) WHEN vt0.c1 THEN ((vt0.c0)+(vt0.c1)) WHEN vt0.c0 THEN UNLIKELY(vt0.c1) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, x'')) NOT BETWEEN ((CAST(vt0.c1 AS REAL), HEX('Vx*엣x2_b'), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((HEX(vt0.c0), (vt0.c1 IN ()), vt0.c0 COLLATE RTRIM)))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN (~ (vt0.c1)) WHEN (vt0.c1 IN (vt0.c1, vt0.c1)) THEN (('Ll') NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN (vt0.c1 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN (vt0.c1 IN ('IG')) WHEN '' THEN ((vt0.c0)%(vt0.c1)) WHEN vt0.c1 THEN ((vt0.c0)+(vt0.c1)) WHEN vt0.c0 THEN UNLIKELY(vt0.c1) END) ORDER BY (((vt0.c1, vt0.c1, x'')) NOT BETWEEN ((CAST(vt0.c1 AS REAL), HEX('Vx*엣x2_b'), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((HEX(vt0.c0), (vt0.c1 IN ()), vt0.c0 COLLATE RTRIM)))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c0)>>(vt0.c1))  WHEN ((vt0.c0) NOT NULL) THEN (('((') BETWEEN (vt0.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)>>(vt0.c1))  WHEN ((vt0.c0) NOT NULL) THEN (('((') BETWEEN (vt0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c0)>>(vt0.c1))  WHEN ((vt0.c0) NOT NULL) THEN (('((') BETWEEN (vt0.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)>>(vt0.c1))  WHEN ((vt0.c0) NOT NULL) THEN (('((') BETWEEN (vt0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c0)>>(vt0.c1))  WHEN ((vt0.c0) NOT NULL) THEN (('((') BETWEEN (vt0.c0) AND (vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0))>((IFNULL(DISTINCT vt1.c0, vt1.c0))))) ORDER BY NULLIF(CAST(vt1.c0 AS NUMERIC), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)  NULLS LAST, (NOT (vt1.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>((IFNULL(DISTINCT vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY NULLIF(CAST(vt1.c0 AS NUMERIC), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)  NULLS LAST, (NOT (vt1.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0))>((IFNULL(DISTINCT vt1.c0, vt1.c0))))) ORDER BY NULLIF(CAST(vt1.c0 AS NUMERIC), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)  NULLS LAST, (NOT (vt1.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>((IFNULL(DISTINCT vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY NULLIF(CAST(vt1.c0 AS NUMERIC), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)  NULLS LAST, (NOT (vt1.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0))>((IFNULL(DISTINCT vt1.c0, vt1.c0))))) ORDER BY NULLIF(CAST(vt1.c0 AS NUMERIC), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)  NULLS LAST, (NOT (vt1.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (rtreenode(((vt1.c0)IS NOT(vt1.c0)), NULL));
SELECT SUM(count) FROM (SELECT ((rtreenode(((vt1.c0)IS NOT(vt1.c0)), NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (rtreenode(((vt1.c0)IS NOT(vt1.c0)), NULL));
SELECT SUM(count) FROM (SELECT ((rtreenode(((vt1.c0)IS NOT(vt1.c0)), NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (rtreenode(((vt1.c0)IS NOT(vt1.c0)), NULL));
SELECT * FROM vt1, vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB)) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c1, vt0.c1, x'', vt0.c1))<((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0))) ELSE ((vt0.c1) IS FALSE) END  NULLS LAST, CASE CAST(0.2899933913135524 AS NUMERIC)  WHEN (vt0.c1 IN ()) THEN vt0.c1 WHEN ((-721408446) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE ((vt1.c0)!=(vt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c1, vt0.c1, x'', vt0.c1))<((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0))) ELSE ((vt0.c1) IS FALSE) END  NULLS LAST, CASE CAST(0.2899933913135524 AS NUMERIC)  WHEN (vt0.c1 IN ()) THEN vt0.c1 WHEN ((-721408446) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE ((vt1.c0)!=(vt0.c1)) END DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB)) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c1, vt0.c1, x'', vt0.c1))<((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0))) ELSE ((vt0.c1) IS FALSE) END  NULLS LAST, CASE CAST(0.2899933913135524 AS NUMERIC)  WHEN (vt0.c1 IN ()) THEN vt0.c1 WHEN ((-721408446) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE ((vt1.c0)!=(vt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c1, vt0.c1, x'', vt0.c1))<((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0))) ELSE ((vt0.c1) IS FALSE) END  NULLS LAST, CASE CAST(0.2899933913135524 AS NUMERIC)  WHEN (vt0.c1 IN ()) THEN vt0.c1 WHEN ((-721408446) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE ((vt1.c0)!=(vt0.c1)) END DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB)) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c1, vt0.c1, x'', vt0.c1))<((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0))) ELSE ((vt0.c1) IS FALSE) END  NULLS LAST, CASE CAST(0.2899933913135524 AS NUMERIC)  WHEN (vt0.c1 IN ()) THEN vt0.c1 WHEN ((-721408446) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE ((vt1.c0)!=(vt0.c1)) END DESC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((NULL)>>(CAST(vt1.c0 AS INTEGER)))) ORDER BY ((vt1.c0 COLLATE RTRIM)<(0.10332347849992252)) ASC  NULLS FIRST, ((vt0.c1 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)>>(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE RTRIM)<(0.10332347849992252)) ASC  NULLS FIRST, ((vt0.c1 IN ()) IN ())  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((NULL)>>(CAST(vt1.c0 AS INTEGER)))) ORDER BY ((vt1.c0 COLLATE RTRIM)<(0.10332347849992252)) ASC  NULLS FIRST, ((vt0.c1 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)>>(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE RTRIM)<(0.10332347849992252)) ASC  NULLS FIRST, ((vt0.c1 IN ()) IN ())  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((NULL)>>(CAST(vt1.c0 AS INTEGER)))) ORDER BY ((vt1.c0 COLLATE RTRIM)<(0.10332347849992252)) ASC  NULLS FIRST, ((vt0.c1 IN ()) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF((+ (vt1.c0)), 0.33421830515731166));
SELECT SUM(count) FROM (SELECT ((NULLIF((+ (vt1.c0)), 0.33421830515731166)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF((+ (vt1.c0)), 0.33421830515731166));
SELECT SUM(count) FROM (SELECT ((NULLIF((+ (vt1.c0)), 0.33421830515731166)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF((+ (vt1.c0)), 0.33421830515731166));
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((((vt0.c0)AND(vt0.c1)))OR(-286914330))  WHEN ((0.488518035096665) ISNULL) THEN ((((-5.47886324E8)OR('')))OR(vt0.c0)) ELSE (((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, 0Xffffffff88d7a23a)) AND ((vt1.c0, vt0.c1, vt0.c1))) END) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)AND(vt0.c1)))OR(-286914330))  WHEN ((0.488518035096665) ISNULL) THEN ((((-5.47886324E8)OR('')))OR(vt0.c0)) ELSE (((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, 0Xffffffff88d7a23a)) AND ((vt1.c0, vt0.c1, vt0.c1))) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((((vt0.c0)AND(vt0.c1)))OR(-286914330))  WHEN ((0.488518035096665) ISNULL) THEN ((((-5.47886324E8)OR('')))OR(vt0.c0)) ELSE (((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, 0Xffffffff88d7a23a)) AND ((vt1.c0, vt0.c1, vt0.c1))) END) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)AND(vt0.c1)))OR(-286914330))  WHEN ((0.488518035096665) ISNULL) THEN ((((-5.47886324E8)OR('')))OR(vt0.c0)) ELSE (((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, 0Xffffffff88d7a23a)) AND ((vt1.c0, vt0.c1, vt0.c1))) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((((vt0.c0)AND(vt0.c1)))OR(-286914330))  WHEN ((0.488518035096665) ISNULL) THEN ((((-5.47886324E8)OR('')))OR(vt0.c0)) ELSE (((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, 0Xffffffff88d7a23a)) AND ((vt1.c0, vt0.c1, vt0.c1))) END) ORDER BY NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY 0.5729332718627231 COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.5729332718627231 COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY 0.5729332718627231 COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.5729332718627231 COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY 0.5729332718627231 COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) ISNULL))OR((vt0.c0 IN (vt0.c1)))))OR(((vt0.c0)>(vt0.c0))))) ORDER BY ((x'7ad2' COLLATE RTRIM) BETWEEN (((vt0.c0)||(0.25728080099486916))) AND (vt0.c1))  NULLS FIRST, ((vt0.c1)||(vt0.c1)) COLLATE RTRIM  NULLS LAST, (CASE WHEN vt0.c1 THEN vt0.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) ISNULL))OR((vt0.c0 IN (vt0.c1)))))OR(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((x'7ad2' COLLATE RTRIM) BETWEEN (((vt0.c0)||(0.25728080099486916))) AND (vt0.c1))  NULLS FIRST, ((vt0.c1)||(vt0.c1)) COLLATE RTRIM  NULLS LAST, (CASE WHEN vt0.c1 THEN vt0.c0 END IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) ISNULL))OR((vt0.c0 IN (vt0.c1)))))OR(((vt0.c0)>(vt0.c0))))) ORDER BY ((x'7ad2' COLLATE RTRIM) BETWEEN (((vt0.c0)||(0.25728080099486916))) AND (vt0.c1))  NULLS FIRST, ((vt0.c1)||(vt0.c1)) COLLATE RTRIM  NULLS LAST, (CASE WHEN vt0.c1 THEN vt0.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) ISNULL))OR((vt0.c0 IN (vt0.c1)))))OR(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((x'7ad2' COLLATE RTRIM) BETWEEN (((vt0.c0)||(0.25728080099486916))) AND (vt0.c1))  NULLS FIRST, ((vt0.c1)||(vt0.c1)) COLLATE RTRIM  NULLS LAST, (CASE WHEN vt0.c1 THEN vt0.c0 END IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) ISNULL))OR((vt0.c0 IN (vt0.c1)))))OR(((vt0.c0)>(vt0.c0))))) ORDER BY ((x'7ad2' COLLATE RTRIM) BETWEEN (((vt0.c0)||(0.25728080099486916))) AND (vt0.c1))  NULLS FIRST, ((vt0.c1)||(vt0.c1)) COLLATE RTRIM  NULLS LAST, (CASE WHEN vt0.c1 THEN vt0.c0 END IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND (((+ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND (((+ (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND (((+ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND (((+ (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND (((+ (vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c1 COLLATE RTRIM) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END))) ORDER BY '113976869' ASC, CAST(CAST(vt0.c1 AS TEXT) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c1 COLLATE RTRIM) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY '113976869' ASC, CAST(CAST(vt0.c1 AS TEXT) AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c1 COLLATE RTRIM) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END))) ORDER BY '113976869' ASC, CAST(CAST(vt0.c1 AS TEXT) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c1 COLLATE RTRIM) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY '113976869' ASC, CAST(CAST(vt0.c1 AS TEXT) AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c1 COLLATE RTRIM) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END))) ORDER BY '113976869' ASC, CAST(CAST(vt0.c1 AS TEXT) AS BLOB) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE ((+ (vt0.c0))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9740409777644908)) AS NUMERIC) DESC, CASE WHEN NULL THEN CAST(vt0.c0 AS BLOB) END ASC  NULLS LAST, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CAST(vt0.c0 AS TEXT), (vt0.c0 IN ())))>((vt0.c1 COLLATE BINARY, ((vt1.c0)-(NULL)), 0.9447299541561928))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9740409777644908)) AS NUMERIC) DESC, CASE WHEN NULL THEN CAST(vt0.c0 AS BLOB) END ASC  NULLS LAST, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CAST(vt0.c0 AS TEXT), (vt0.c0 IN ())))>((vt0.c1 COLLATE BINARY, ((vt1.c0)-(NULL)), 0.9447299541561928))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE ((+ (vt0.c0))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9740409777644908)) AS NUMERIC) DESC, CASE WHEN NULL THEN CAST(vt0.c0 AS BLOB) END ASC  NULLS LAST, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CAST(vt0.c0 AS TEXT), (vt0.c0 IN ())))>((vt0.c1 COLLATE BINARY, ((vt1.c0)-(NULL)), 0.9447299541561928))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9740409777644908)) AS NUMERIC) DESC, CASE WHEN NULL THEN CAST(vt0.c0 AS BLOB) END ASC  NULLS LAST, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CAST(vt0.c0 AS TEXT), (vt0.c0 IN ())))>((vt0.c1 COLLATE BINARY, ((vt1.c0)-(NULL)), 0.9447299541561928))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE ((+ (vt0.c0))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9740409777644908)) AS NUMERIC) DESC, CASE WHEN NULL THEN CAST(vt0.c0 AS BLOB) END ASC  NULLS LAST, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CAST(vt0.c0 AS TEXT), (vt0.c0 IN ())))>((vt0.c1 COLLATE BINARY, ((vt1.c0)-(NULL)), 0.9447299541561928))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST((((0.7812256549004861))==((vt0.c1))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.7812256549004861))==((vt0.c1))) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((0.7812256549004861))==((vt0.c1))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.7812256549004861))==((vt0.c1))) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((0.7812256549004861))==((vt0.c1))) AS TEXT));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ())) ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ('||7' IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ('||7' IN ()) END  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ())) ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ('||7' IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ('||7' IN ()) END  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ())) ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ('||7' IN ()) END  NULLS LAST;
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (NOT ((vt0.c0 IN ())))  NULLS LAST, (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((vt0.c0 IN ())))  NULLS LAST, (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (NOT ((vt0.c0 IN ())))  NULLS LAST, (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((vt0.c0 IN ())))  NULLS LAST, (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (NOT ((vt0.c0 IN ())))  NULLS LAST, (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c1)OR('598614762')))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c1)OR('598614762')))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c1)OR('598614762')))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c1)OR('598614762')))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c1)OR('598614762')))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) AS BLOB));
SELECT ALL * FROM vt1, vt0 WHERE (CASE vt0.c1 COLLATE BINARY  WHEN (+ (vt0.c0)) THEN ((vt0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1 COLLATE BINARY  WHEN (+ (vt0.c0)) THEN ((vt0.c1) IS FALSE) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE vt0.c1 COLLATE BINARY  WHEN (+ (vt0.c0)) THEN ((vt0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1 COLLATE BINARY  WHEN (+ (vt0.c0)) THEN ((vt0.c1) IS FALSE) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE vt0.c1 COLLATE BINARY  WHEN (+ (vt0.c0)) THEN ((vt0.c1) IS FALSE) END);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)==(vt0.c1)))<>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (CASE NULL  WHEN x'2a0f' THEN '' ELSE x'5f5d' END IN ((+ (vt0.c1)), (((vt0.c1, '-1415531698', vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)==(vt0.c1)))<>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE NULL  WHEN x'2a0f' THEN '' ELSE x'5f5d' END IN ((+ (vt0.c1)), (((vt0.c1, '-1415531698', vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)==(vt0.c1)))<>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (CASE NULL  WHEN x'2a0f' THEN '' ELSE x'5f5d' END IN ((+ (vt0.c1)), (((vt0.c1, '-1415531698', vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)==(vt0.c1)))<>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE NULL  WHEN x'2a0f' THEN '' ELSE x'5f5d' END IN ((+ (vt0.c1)), (((vt0.c1, '-1415531698', vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)==(vt0.c1)))<>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (CASE NULL  WHEN x'2a0f' THEN '' ELSE x'5f5d' END IN ((+ (vt0.c1)), (((vt0.c1, '-1415531698', vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST;
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((((x'')AND(x'')))OR((+ (vt0.c1)))))OR(((NULL) NOT BETWEEN (vt0.c1) AND (0.34077738043794226)))))AND(((vt1.c0) NOT NULL))) WHERE (((vt1.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((((x'')AND(x'')))OR((+ (vt0.c1)))))OR(((NULL) NOT BETWEEN (vt0.c1) AND (0.34077738043794226)))))AND(((vt1.c0) NOT NULL))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((((x'')AND(x'')))OR((+ (vt0.c1)))))OR(((NULL) NOT BETWEEN (vt0.c1) AND (0.34077738043794226)))))AND(((vt1.c0) NOT NULL))) WHERE (((vt1.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((((x'')AND(x'')))OR((+ (vt0.c1)))))OR(((NULL) NOT BETWEEN (vt0.c1) AND (0.34077738043794226)))))AND(((vt1.c0) NOT NULL))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((((x'')AND(x'')))OR((+ (vt0.c1)))))OR(((NULL) NOT BETWEEN (vt0.c1) AND (0.34077738043794226)))))AND(((vt1.c0) NOT NULL))) WHERE (((vt1.c0 COLLATE BINARY) ISNULL));
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0)GLOB(x'')))<>(TRIM(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(x'')))<>(TRIM(vt1.c0)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0)GLOB(x'')))<>(TRIM(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(x'')))<>(TRIM(vt1.c0)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0)GLOB(x'')))<>(TRIM(vt1.c0))));
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY ((x'4355')AND(CAST(vt0.c1 AS NUMERIC))), vt0.c1, vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((x'4355')AND(CAST(vt0.c1 AS NUMERIC))), vt0.c1, vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY ((x'4355')AND(CAST(vt0.c1 AS NUMERIC))), vt0.c1, vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((x'4355')AND(CAST(vt0.c1 AS NUMERIC))), vt0.c1, vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY ((x'4355')AND(CAST(vt0.c1 AS NUMERIC))), vt0.c1, vt0.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN ((((vt0.c1)<=('1877374938')), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt1.c0) NOTNULL))) AND ((((vt0.c1)IS NOT(vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN ((((vt0.c1)<=('1877374938')), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt1.c0) NOTNULL))) AND ((((vt0.c1)IS NOT(vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN ((((vt0.c1)<=('1877374938')), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt1.c0) NOTNULL))) AND ((((vt0.c1)IS NOT(vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN ((((vt0.c1)<=('1877374938')), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt1.c0) NOTNULL))) AND ((((vt0.c1)IS NOT(vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN ((((vt0.c1)<=('1877374938')), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt1.c0) NOTNULL))) AND ((((vt0.c1)IS NOT(vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CASE (~ (vt0.c1))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c1))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c1)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CASE (~ (vt0.c1))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c1))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c1)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CASE (~ (vt0.c1))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c1)) END);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY IFNULL(0.05947222235879146, (NOT (vt1.c0))) DESC, vt1.c0  NULLS FIRST, json_insert(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0)>(vt1.c0)), ((vt1.c0)<=(vt1.c0)), vt1.c0, (0.14574805880988406 IN (vt1.c0, vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY IFNULL(0.05947222235879146, (NOT (vt1.c0))) DESC, vt1.c0  NULLS FIRST, json_insert(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0)>(vt1.c0)), ((vt1.c0)<=(vt1.c0)), vt1.c0, (0.14574805880988406 IN (vt1.c0, vt1.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY IFNULL(0.05947222235879146, (NOT (vt1.c0))) DESC, vt1.c0  NULLS FIRST, json_insert(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0)>(vt1.c0)), ((vt1.c0)<=(vt1.c0)), vt1.c0, (0.14574805880988406 IN (vt1.c0, vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY IFNULL(0.05947222235879146, (NOT (vt1.c0))) DESC, vt1.c0  NULLS FIRST, json_insert(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0)>(vt1.c0)), ((vt1.c0)<=(vt1.c0)), vt1.c0, (0.14574805880988406 IN (vt1.c0, vt1.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)OR(vt0.c0))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)OR(vt0.c0))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)OR(vt0.c0)));
SELECT * FROM vt1 WHERE (((((vt1.c0)IS NOT('0.23998807780691245')))<=(((vt1.c0)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT('0.23998807780691245')))<=(((vt1.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)IS NOT('0.23998807780691245')))<=(((vt1.c0)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT('0.23998807780691245')))<=(((vt1.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)IS NOT('0.23998807780691245')))<=(((vt1.c0)IS NOT(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR((- (vt1.c0)))))OR(((vt1.c0)%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR((- (vt1.c0)))))OR(((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR((- (vt1.c0)))))OR(((vt1.c0)%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR((- (vt1.c0)))))OR(((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR((- (vt1.c0)))))OR(((vt1.c0)%(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE NULL  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)<<(vt0.c0))) ORDER BY CASE (vt0.c1 IN ())  WHEN vt0.c0 COLLATE NOCASE THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) ELSE ((vt1.c0)>=(vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)<<(vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE (vt0.c1 IN ())  WHEN vt0.c0 COLLATE NOCASE THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) ELSE ((vt1.c0)>=(vt1.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE NULL  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)<<(vt0.c0))) ORDER BY CASE (vt0.c1 IN ())  WHEN vt0.c0 COLLATE NOCASE THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) ELSE ((vt1.c0)>=(vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)<<(vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE (vt0.c1 IN ())  WHEN vt0.c0 COLLATE NOCASE THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) ELSE ((vt1.c0)>=(vt1.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE NULL  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)<<(vt0.c0))) ORDER BY CASE (vt0.c1 IN ())  WHEN vt0.c0 COLLATE NOCASE THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) ELSE ((vt1.c0)>=(vt1.c0)) END ASC  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (LIKELIHOOD((((vt0.c1, vt0.c0, vt0.c1))<>((vt0.c0, '-1007541564', vt1.c0))), 0.6629648457897879));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((vt0.c1, vt0.c0, vt0.c1))<>((vt0.c0, '-1007541564', vt1.c0))), 0.6629648457897879)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (LIKELIHOOD((((vt0.c1, vt0.c0, vt0.c1))<>((vt0.c0, '-1007541564', vt1.c0))), 0.6629648457897879));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((vt0.c1, vt0.c0, vt0.c1))<>((vt0.c0, '-1007541564', vt1.c0))), 0.6629648457897879)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (LIKELIHOOD((((vt0.c1, vt0.c0, vt0.c1))<>((vt0.c0, '-1007541564', vt1.c0))), 0.6629648457897879));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (- (vt1.c0)), ((((((((0.19245666880040269)AND(((vt1.c0) NOT BETWEEN (0xffffffff952ad50f) AND (vt1.c0)))))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)GLOB(NULL)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) DESC, (LIKELIHOOD(x'', 0.4122053114169717) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)), ((((((((0.19245666880040269)AND(((vt1.c0) NOT BETWEEN (0Xffffffff952ad50f) AND (vt1.c0)))))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)GLOB(NULL)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) DESC, (LIKELIHOOD(x'', 0.4122053114169717) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (- (vt1.c0)), ((((((((0.19245666880040269)AND(((vt1.c0) NOT BETWEEN (0xffffffff952ad50f) AND (vt1.c0)))))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)GLOB(NULL)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) DESC, (LIKELIHOOD(x'', 0.4122053114169717) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)), ((((((((0.19245666880040269)AND(((vt1.c0) NOT BETWEEN (0Xffffffff952ad50f) AND (vt1.c0)))))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)GLOB(NULL)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) DESC, (LIKELIHOOD(x'', 0.4122053114169717) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (- (vt1.c0)), ((((((((0.19245666880040269)AND(((vt1.c0) NOT BETWEEN (0xffffffff952ad50f) AND (vt1.c0)))))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)GLOB(NULL)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) DESC, (LIKELIHOOD(x'', 0.4122053114169717) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (-775073713);
SELECT SUM(count) FROM (SELECT ALL ((-775073713) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (-775073713);
SELECT SUM(count) FROM (SELECT ALL ((-775073713) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (-775073713);
SELECT * FROM vt0, vt1 WHERE (((0.5957328610454303 COLLATE NOCASE)AND(TIME(NULL, vt0.c1, vt1.c0)))) ORDER BY CAST(((vt0.c1)-(vt0.c0)) AS TEXT) ASC, (((vt0.c1, vt0.c0, '872174750', '4B', vt0.c0)) NOT BETWEEN ((TYPEOF(vt0.c1), (vt0.c0 IN ()), ((vt1.c0)<=(vt1.c0)), CAST(vt0.c1 AS BLOB), vt0.c0)) AND ((((vt0.c1)+(vt0.c0)), 0.8440430269221096, ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt0.c0)+(vt0.c1)), (((vt0.c1)) BETWEEN ((x'1a53')) AND ((vt1.c0)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.5957328610454303 COLLATE NOCASE)AND(TIME(NULL, vt0.c1, vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt0.c1)-(vt0.c0)) AS TEXT) ASC, (((vt0.c1, vt0.c0, '872174750', '4B', vt0.c0)) NOT BETWEEN ((TYPEOF(vt0.c1), (vt0.c0 IN ()), ((vt1.c0)<=(vt1.c0)), CAST(vt0.c1 AS BLOB), vt0.c0)) AND ((((vt0.c1)+(vt0.c0)), 0.8440430269221096, ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt0.c0)+(vt0.c1)), (((vt0.c1)) BETWEEN ((x'1a53')) AND ((vt1.c0)))))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((0.5957328610454303 COLLATE NOCASE)AND(TIME(NULL, vt0.c1, vt1.c0)))) ORDER BY CAST(((vt0.c1)-(vt0.c0)) AS TEXT) ASC, (((vt0.c1, vt0.c0, '872174750', '4B', vt0.c0)) NOT BETWEEN ((TYPEOF(vt0.c1), (vt0.c0 IN ()), ((vt1.c0)<=(vt1.c0)), CAST(vt0.c1 AS BLOB), vt0.c0)) AND ((((vt0.c1)+(vt0.c0)), 0.8440430269221096, ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt0.c0)+(vt0.c1)), (((vt0.c1)) BETWEEN ((x'1a53')) AND ((vt1.c0)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.5957328610454303 COLLATE NOCASE)AND(TIME(NULL, vt0.c1, vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt0.c1)-(vt0.c0)) AS TEXT) ASC, (((vt0.c1, vt0.c0, '872174750', '4B', vt0.c0)) NOT BETWEEN ((TYPEOF(vt0.c1), (vt0.c0 IN ()), ((vt1.c0)<=(vt1.c0)), CAST(vt0.c1 AS BLOB), vt0.c0)) AND ((((vt0.c1)+(vt0.c0)), 0.8440430269221096, ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt0.c0)+(vt0.c1)), (((vt0.c1)) BETWEEN ((x'1a53')) AND ((vt1.c0)))))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((0.5957328610454303 COLLATE NOCASE)AND(TIME(NULL, vt0.c1, vt1.c0)))) ORDER BY CAST(((vt0.c1)-(vt0.c0)) AS TEXT) ASC, (((vt0.c1, vt0.c0, '872174750', '4B', vt0.c0)) NOT BETWEEN ((TYPEOF(vt0.c1), (vt0.c0 IN ()), ((vt1.c0)<=(vt1.c0)), CAST(vt0.c1 AS BLOB), vt0.c0)) AND ((((vt0.c1)+(vt0.c0)), 0.8440430269221096, ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt0.c0)+(vt0.c1)), (((vt0.c1)) BETWEEN ((x'1a53')) AND ((vt1.c0)))))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (CAST((- (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((- (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((- (vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0))))<(CAST(0.05161764448522821 AS REAL)))) ORDER BY TYPEOF(DISTINCT (((vt0.c0))<((vt0.c0)))) ASC, vt0.c1;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0))))<(CAST(0.05161764448522821 AS REAL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TYPEOF(DISTINCT (((vt0.c0))<((vt0.c0)))) ASC, vt0.c1);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0))))<(CAST(0.05161764448522821 AS REAL)))) ORDER BY TYPEOF(DISTINCT (((vt0.c0))<((vt0.c0)))) ASC, vt0.c1;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0))))<(CAST(0.05161764448522821 AS REAL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TYPEOF(DISTINCT (((vt0.c0))<((vt0.c0)))) ASC, vt0.c1);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0))))<(CAST(0.05161764448522821 AS REAL)))) ORDER BY TYPEOF(DISTINCT (((vt0.c0))<((vt0.c0)))) ASC, vt0.c1;
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((((vt1.c0, 492372670, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)<>(vt1.c0))))) ORDER BY CAST(LIKELY(vt1.c0) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((((vt1.c0, 492372670, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)<>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(LIKELY(vt1.c0) AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((((vt1.c0, 492372670, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)<>(vt1.c0))))) ORDER BY CAST(LIKELY(vt1.c0) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((((vt1.c0, 492372670, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)<>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(LIKELY(vt1.c0) AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((((vt1.c0, 492372670, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)<>(vt1.c0))))) ORDER BY CAST(LIKELY(vt1.c0) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ ('1109912325')));
SELECT SUM(count) FROM (SELECT (((+ ('1109912325'))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ ('1109912325')));
SELECT SUM(count) FROM (SELECT (((+ ('1109912325'))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ ('1109912325')));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))>(((vt0.c1)=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))>(((vt0.c1)==(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))>(((vt0.c1)=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))>(((vt0.c1)==(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))>(((vt0.c1)=(vt1.c0)))));
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c0 COLLATE RTRIM)LIKE('')));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)LIKE(''))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c0 COLLATE RTRIM)LIKE('')));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)LIKE(''))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c0 COLLATE RTRIM)LIKE('')));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) BETWEEN (((vt1.c0)%(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) BETWEEN (((vt1.c0)%(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) BETWEEN (((vt1.c0)%(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) BETWEEN (((vt1.c0)%(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) BETWEEN (((vt1.c0)%(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0))>((vt0.c0))))||(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>((vt0.c0))))||(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB));
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0))>((vt0.c0))))||(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>((vt0.c0))))||(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB));
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0))>((vt0.c0))))||(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB);
SELECT * FROM vt0, vt1 WHERE (((('-1301720263' IN ())) NOT BETWEEN ((vt0.c1 IN ())) AND (((((x'986a')OR(vt1.c0)))AND(vt1.c0))))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE ((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)) END ASC, (((((vt0.c1)AND(NULL))))=(((('6') ISNULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((('-1301720263' IN ())) NOT BETWEEN ((vt0.c1 IN ())) AND (((((x'986a')OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE ((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)) END ASC, (((((vt0.c1)AND(NULL))))==(((('6') ISNULL)))) DESC);
SELECT * FROM vt0, vt1 WHERE (((('-1301720263' IN ())) NOT BETWEEN ((vt0.c1 IN ())) AND (((((x'986a')OR(vt1.c0)))AND(vt1.c0))))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE ((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)) END ASC, (((((vt0.c1)AND(NULL))))=(((('6') ISNULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((('-1301720263' IN ())) NOT BETWEEN ((vt0.c1 IN ())) AND (((((x'986a')OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE ((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)) END ASC, (((((vt0.c1)AND(NULL))))==(((('6') ISNULL)))) DESC);
SELECT * FROM vt0, vt1 WHERE (((('-1301720263' IN ())) NOT BETWEEN ((vt0.c1 IN ())) AND (((((x'986a')OR(vt1.c0)))AND(vt1.c0))))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE ((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)) END ASC, (((((vt0.c1)AND(NULL))))=(((('6') ISNULL)))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))<=(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(vt1.c0)))<=(NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))<=(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(vt1.c0)))<=(NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))<=(NULL)));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) AS REAL)) ORDER BY CAST(vt0.c1 AS TEXT) COLLATE BINARY  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(COALESCE(DISTINCT vt0.c0, vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS TEXT) COLLATE BINARY  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(COALESCE(DISTINCT vt0.c0, vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) AS REAL)) ORDER BY CAST(vt0.c1 AS TEXT) COLLATE BINARY  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(COALESCE(DISTINCT vt0.c0, vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS TEXT) COLLATE BINARY  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(COALESCE(DISTINCT vt0.c0, vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) AS REAL)) ORDER BY CAST(vt0.c1 AS TEXT) COLLATE BINARY  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(COALESCE(DISTINCT vt0.c0, vt0.c0))) ASC;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0))!=((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))!=((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ASC);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0))!=((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))!=((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ASC);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0))!=((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((CHANGES() IN (((vt0.c0) IS TRUE)))) ORDER BY ((vt0.c0)=(CAST(vt0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CHANGES() IN (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)==(CAST(vt0.c0 AS TEXT))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((CHANGES() IN (((vt0.c0) IS TRUE)))) ORDER BY ((vt0.c0)=(CAST(vt0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CHANGES() IN (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)==(CAST(vt0.c0 AS TEXT))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((CHANGES() IN (((vt0.c0) IS TRUE)))) ORDER BY ((vt0.c0)=(CAST(vt0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((NULL IN (vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NULL IN (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((NULL IN (vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NULL IN (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((NULL IN (vt0.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 COLLATE RTRIM, ((vt0.c1)/(vt0.c1)), CAST(vt0.c0 AS REAL)))>((((vt0.c0)>=(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)), ((vt0.c1)&(vt0.c1)))))) ORDER BY (((((0.6021715013132636, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))) NOT BETWEEN ((NOT (vt0.c1))) AND ((- (vt0.c1)))), ((((((vt0.c1) IS FALSE))AND(vt0.c1 COLLATE BINARY)))OR(((vt0.c0)-(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE RTRIM, ((vt0.c1)/(vt0.c1)), CAST(vt0.c0 AS REAL)))>((((vt0.c0)>=(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)), ((vt0.c1)&(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((0.6021715013132636, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))) NOT BETWEEN ((NOT (vt0.c1))) AND ((- (vt0.c1)))), ((((((vt0.c1) IS FALSE))AND(vt0.c1 COLLATE BINARY)))OR(((vt0.c0)-(vt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 COLLATE RTRIM, ((vt0.c1)/(vt0.c1)), CAST(vt0.c0 AS REAL)))>((((vt0.c0)>=(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)), ((vt0.c1)&(vt0.c1)))))) ORDER BY (((((0.6021715013132636, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))) NOT BETWEEN ((NOT (vt0.c1))) AND ((- (vt0.c1)))), ((((((vt0.c1) IS FALSE))AND(vt0.c1 COLLATE BINARY)))OR(((vt0.c0)-(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE RTRIM, ((vt0.c1)/(vt0.c1)), CAST(vt0.c0 AS REAL)))>((((vt0.c0)>=(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)), ((vt0.c1)&(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((0.6021715013132636, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))) NOT BETWEEN ((NOT (vt0.c1))) AND ((- (vt0.c1)))), ((((((vt0.c1) IS FALSE))AND(vt0.c1 COLLATE BINARY)))OR(((vt0.c0)-(vt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 COLLATE RTRIM, ((vt0.c1)/(vt0.c1)), CAST(vt0.c0 AS REAL)))>((((vt0.c0)>=(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)), ((vt0.c1)&(vt0.c1)))))) ORDER BY (((((0.6021715013132636, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))) NOT BETWEEN ((NOT (vt0.c1))) AND ((- (vt0.c1)))), ((((((vt0.c1) IS FALSE))AND(vt0.c1 COLLATE BINARY)))OR(((vt0.c0)-(vt0.c1)))) ASC;
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE ('') ORDER BY 0.7165676284814394;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.7165676284814394);
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE ('') ORDER BY 0.7165676284814394;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.7165676284814394);
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE ('') ORDER BY 0.7165676284814394;
SELECT * FROM vt1, vt0 WHERE (((+ (vt0.c0)) IN ((- (vt0.c1)), ((vt0.c1)OR(vt0.c1))))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOT BETWEEN ((((vt1.c0, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c0)))) AND (NULL)) DESC  NULLS LAST, ((x'')<<(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ((- (vt0.c1)), ((vt0.c1)OR(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c1 COLLATE RTRIM) NOT BETWEEN ((((vt1.c0, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c0)))) AND (NULL)) DESC  NULLS LAST, ((x'')<<(NULL))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((+ (vt0.c0)) IN ((- (vt0.c1)), ((vt0.c1)OR(vt0.c1))))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOT BETWEEN ((((vt1.c0, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c0)))) AND (NULL)) DESC  NULLS LAST, ((x'')<<(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ((- (vt0.c1)), ((vt0.c1)OR(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c1 COLLATE RTRIM) NOT BETWEEN ((((vt1.c0, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c0)))) AND (NULL)) DESC  NULLS LAST, ((x'')<<(NULL))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((+ (vt0.c0)) IN ((- (vt0.c1)), ((vt0.c1)OR(vt0.c1))))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOT BETWEEN ((((vt1.c0, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c0)))) AND (NULL)) DESC  NULLS LAST, ((x'')<<(NULL))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (x'37e8') ORDER BY (- ((vt1.c0 IN (vt0.c1, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((x'37e8') IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((vt1.c0 IN (vt0.c1, vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (x'37e8') ORDER BY (- ((vt1.c0 IN (vt0.c1, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((x'37e8') IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((vt1.c0 IN (vt0.c1, vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (x'37e8') ORDER BY (- ((vt1.c0 IN (vt0.c1, vt0.c0))));
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c0)GLOB((~ (vt0.c1))))) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT (vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c0)GLOB((~ (vt0.c1))))) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT (vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c0)GLOB((~ (vt0.c1))))) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT (vt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))<((0.29376016708670283))))+((((vt0.c0))<>((vt0.c1)))))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))<((0.29376016708670283))))+((((vt0.c0))<>((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))<((0.29376016708670283))))+((((vt0.c0))<>((vt0.c1)))))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))<((0.29376016708670283))))+((((vt0.c0))<>((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))<((0.29376016708670283))))+((((vt0.c0))<>((vt0.c1)))))) ORDER BY vt0.c0 DESC;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))||(CAST('1' AS TEXT))) WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))||(CAST('1' AS TEXT))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))||(CAST('1' AS TEXT))) WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))||(CAST('1' AS TEXT))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))||(CAST('1' AS TEXT))) WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((((vt0.c1)AND(vt0.c0)))AND(0x6e035d44)) THEN (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c1)AND(vt0.c0)))AND(0X6e035d44)) THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((((vt0.c1)AND(vt0.c0)))AND(0x6e035d44)) THEN (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c1)AND(vt0.c0)))AND(0X6e035d44)) THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((((vt0.c1)AND(vt0.c0)))AND(0x6e035d44)) THEN (~ (vt1.c0)) END);
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE ((vt0.c1 IN ()) COLLATE BINARY) ORDER BY vt0.c0 COLLATE NOCASE, CASE vt0.c1  WHEN (NOT (vt0.c0)) THEN vt0.c1 END  NULLS LAST, CAST(((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))AND('-547886324')))OR(vt0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 COLLATE NOCASE, CASE vt0.c1  WHEN (NOT (vt0.c0)) THEN vt0.c1 END  NULLS LAST, CAST(((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))AND('-547886324')))OR(vt0.c0)) AS BLOB) ASC);
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE ((vt0.c1 IN ()) COLLATE BINARY) ORDER BY vt0.c0 COLLATE NOCASE, CASE vt0.c1  WHEN (NOT (vt0.c0)) THEN vt0.c1 END  NULLS LAST, CAST(((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))AND('-547886324')))OR(vt0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 COLLATE NOCASE, CASE vt0.c1  WHEN (NOT (vt0.c0)) THEN vt0.c1 END  NULLS LAST, CAST(((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))AND('-547886324')))OR(vt0.c0)) AS BLOB) ASC);
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE ((vt0.c1 IN ()) COLLATE BINARY) ORDER BY vt0.c0 COLLATE NOCASE, CASE vt0.c1  WHEN (NOT (vt0.c0)) THEN vt0.c1 END  NULLS LAST, CAST(((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))AND('-547886324')))OR(vt0.c0)) AS BLOB) ASC;
SELECT ALL * FROM vt0, vt1 WHERE ((((((((((((((vt0.c1 IN ()))AND(ABS(vt0.c0))))AND((+ (vt0.c0)))))AND(((vt0.c0)|(vt0.c1)))))OR(((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(NULL)))OR(((((vt1.c0)OR('0.14574805880988406')))OR(0.557973655984083))))) ORDER BY (CASE WHEN vt0.c1 THEN vt1.c0 END IN ((NOT (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c1 IN ()))AND(ABS(vt0.c0))))AND((+ (vt0.c0)))))AND(((vt0.c0)|(vt0.c1)))))OR(((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(NULL)))OR(((((vt1.c0)OR('0.14574805880988406')))OR(0.557973655984083))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (CASE WHEN vt0.c1 THEN vt1.c0 END IN ((NOT (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((((((((((vt0.c1 IN ()))AND(ABS(vt0.c0))))AND((+ (vt0.c0)))))AND(((vt0.c0)|(vt0.c1)))))OR(((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(NULL)))OR(((((vt1.c0)OR('0.14574805880988406')))OR(0.557973655984083))))) ORDER BY (CASE WHEN vt0.c1 THEN vt1.c0 END IN ((NOT (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c1 IN ()))AND(ABS(vt0.c0))))AND((+ (vt0.c0)))))AND(((vt0.c0)|(vt0.c1)))))OR(((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(NULL)))OR(((((vt1.c0)OR('0.14574805880988406')))OR(0.557973655984083))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (CASE WHEN vt0.c1 THEN vt1.c0 END IN ((NOT (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((((((((((vt0.c1 IN ()))AND(ABS(vt0.c0))))AND((+ (vt0.c0)))))AND(((vt0.c0)|(vt0.c1)))))OR(((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(NULL)))OR(((((vt1.c0)OR('0.14574805880988406')))OR(0.557973655984083))))) ORDER BY (CASE WHEN vt0.c1 THEN vt1.c0 END IN ((NOT (vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS TEXT)) ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS TEXT)) ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS TEXT)) ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE) DESC;
SELECT COUNT(*) FROM vt1 WHERE (UNLIKELY((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((~ (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (UNLIKELY((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((~ (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (UNLIKELY((~ (vt1.c0))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS INTEGER) AS TEXT) WHERE (((CASE vt1.c0  WHEN 0.8054431137830902 THEN vt0.c1 ELSE vt0.c1 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN 0.8054431137830902 THEN vt0.c1 ELSE vt0.c1 END) IS TRUE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS INTEGER) AS TEXT));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS INTEGER) AS TEXT) WHERE (((CASE vt1.c0  WHEN 0.8054431137830902 THEN vt0.c1 ELSE vt0.c1 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN 0.8054431137830902 THEN vt0.c1 ELSE vt0.c1 END) IS TRUE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS INTEGER) AS TEXT));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS INTEGER) AS TEXT) WHERE (((CASE vt1.c0  WHEN 0.8054431137830902 THEN vt0.c1 ELSE vt0.c1 END) IS TRUE));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1)OR(vt0.c0))) NOTNULL)) ORDER BY (((((((((- (vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(IFNULL(vt1.c0, vt0.c1))))OR((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((- (vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(IFNULL(vt1.c0, vt0.c1))))OR((NOT (vt0.c1)))));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1)OR(vt0.c0))) NOTNULL)) ORDER BY (((((((((- (vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(IFNULL(vt1.c0, vt0.c1))))OR((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((- (vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(IFNULL(vt1.c0, vt0.c1))))OR((NOT (vt0.c1)))));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1)OR(vt0.c0))) NOTNULL)) ORDER BY (((((((((- (vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(IFNULL(vt1.c0, vt0.c1))))OR((NOT (vt0.c1))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (UPPER((~ (vt1.c0)))) ORDER BY (~ (CAST(vt1.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((~ (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (CAST(vt1.c0 AS TEXT))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (UPPER((~ (vt1.c0)))) ORDER BY (~ (CAST(vt1.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((~ (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (CAST(vt1.c0 AS TEXT))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (UPPER((~ (vt1.c0)))) ORDER BY (~ (CAST(vt1.c0 AS TEXT))) ASC;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE ((vt1.c0) ISNULL)  WHEN CAST(vt0.c1 AS REAL) THEN ((vt1.c0) IS FALSE) END WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE ((vt1.c0) ISNULL)  WHEN CAST(vt0.c1 AS REAL) THEN ((vt1.c0) IS FALSE) END);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE ((vt1.c0) ISNULL)  WHEN CAST(vt0.c1 AS REAL) THEN ((vt1.c0) IS FALSE) END WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE ((vt1.c0) ISNULL)  WHEN CAST(vt0.c1 AS REAL) THEN ((vt1.c0) IS FALSE) END);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE ((vt1.c0) ISNULL)  WHEN CAST(vt0.c1 AS REAL) THEN ((vt1.c0) IS FALSE) END WHERE (vt1.c0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c1)>=(vt1.c0)) THEN vt0.c1 WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (((984086243))==((vt0.c0))) WHEN ((vt0.c1)<=(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN '260425182' WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END END) ORDER BY ((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))AND(((vt1.c0)GLOB(-1.925169625E9)))))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c1)>=(vt1.c0)) THEN vt0.c1 WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (((984086243))=((vt0.c0))) WHEN ((vt0.c1)<=(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN '260425182' WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))AND(((vt1.c0)GLOB(-1.925169625E9)))))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c1)>=(vt1.c0)) THEN vt0.c1 WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (((984086243))==((vt0.c0))) WHEN ((vt0.c1)<=(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN '260425182' WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END END) ORDER BY ((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))AND(((vt1.c0)GLOB(-1.925169625E9)))))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c1)>=(vt1.c0)) THEN vt0.c1 WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (((984086243))=((vt0.c0))) WHEN ((vt0.c1)<=(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN '260425182' WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))AND(((vt1.c0)GLOB(-1.925169625E9)))))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c1)>=(vt1.c0)) THEN vt0.c1 WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (((984086243))==((vt0.c0))) WHEN ((vt0.c1)<=(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN '260425182' WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END END) ORDER BY ((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))AND(((vt1.c0)GLOB(-1.925169625E9)))))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ('-1341592615' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('-1341592615' COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ('-1341592615' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('-1341592615' COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ('-1341592615' COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN highlight(vt0.c0, vt0.c1, vt0.c1, vt0.c0) THEN ((('1865532899', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))) END) ORDER BY ((MIN(vt0.c0, vt0.c0)) NOT NULL) ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN highlight(vt0.c0, vt0.c1, vt0.c1, vt0.c0) THEN ((('1865532899', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))) END) IS TRUE)  as count FROM vt0 ORDER BY ((MIN(vt0.c0, vt0.c0)) NOT NULL) ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((((vt0.c1) IS FALSE)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN highlight(vt0.c0, vt0.c1, vt0.c1, vt0.c0) THEN ((('1865532899', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))) END) ORDER BY ((MIN(vt0.c0, vt0.c0)) NOT NULL) ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN highlight(vt0.c0, vt0.c1, vt0.c1, vt0.c0) THEN ((('1865532899', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))) END) IS TRUE)  as count FROM vt0 ORDER BY ((MIN(vt0.c0, vt0.c0)) NOT NULL) ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((((vt0.c1) IS FALSE)))));
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt0.c1)AND(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (x'3da3')))) WHERE (((((+ (vt0.c1))))>=((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((+ (vt0.c1))))>=((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((vt0.c1)AND(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (x'3da3')))));
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt0.c1)AND(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (x'3da3')))) WHERE (((((+ (vt0.c1))))>=((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((+ (vt0.c1))))>=((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((vt0.c1)AND(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (x'3da3')))));
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt0.c1)AND(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (x'3da3')))) WHERE (((((+ (vt0.c1))))>=((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (LIKELY(DISTINCT vt0.c0)))) ORDER BY ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())  NULLS LAST, CASE WHEN vt0.c1 THEN CASE WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-1287371882' END END;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())  NULLS LAST, CASE WHEN vt0.c1 THEN CASE WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-1287371882' END END);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (LIKELY(DISTINCT vt0.c0)))) ORDER BY ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())  NULLS LAST, CASE WHEN vt0.c1 THEN CASE WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-1287371882' END END;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())  NULLS LAST, CASE WHEN vt0.c1 THEN CASE WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-1287371882' END END);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (LIKELY(DISTINCT vt0.c0)))) ORDER BY ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())  NULLS LAST, CASE WHEN vt0.c1 THEN CASE WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-1287371882' END END;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c1))) ORDER BY '-322910205' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY '-322910205' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c1))) ORDER BY '-322910205' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY '-322910205' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c1))) ORDER BY '-322910205' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS TRUE))OR((0.6536305814521951 IN ()))))AND(vt0.c1 COLLATE BINARY))) ORDER BY UNLIKELY(DISTINCT CASE WHEN vt0.c1 THEN x'2263' ELSE vt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS TRUE))OR((0.6536305814521951 IN ()))))AND(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT CASE WHEN vt0.c1 THEN x'2263' ELSE vt0.c0 END) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS TRUE))OR((0.6536305814521951 IN ()))))AND(vt0.c1 COLLATE BINARY))) ORDER BY UNLIKELY(DISTINCT CASE WHEN vt0.c1 THEN x'2263' ELSE vt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS TRUE))OR((0.6536305814521951 IN ()))))AND(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT CASE WHEN vt0.c1 THEN x'2263' ELSE vt0.c0 END) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS TRUE))OR((0.6536305814521951 IN ()))))AND(vt0.c1 COLLATE BINARY))) ORDER BY UNLIKELY(DISTINCT CASE WHEN vt0.c1 THEN x'2263' ELSE vt0.c0 END) DESC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c1) NOT NULL)) AND (CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c1) NOT NULL)) AND (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c1) NOT NULL)) AND (CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c1) NOT NULL)) AND (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c1) NOT NULL)) AND (CAST(vt0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((-1.937610122E9) NOTNULL)) ORDER BY (((- (vt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((-1.937610122E9) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((-1.937610122E9) NOTNULL)) ORDER BY (((- (vt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((-1.937610122E9) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((-1.937610122E9) NOTNULL)) ORDER BY (((- (vt0.c0))) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (((((NULL)OR(vt0.c1)))AND(vt1.c0))))) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ((~ (vt1.c0))) AND (CASE vt0.c1  WHEN vt0.c0 THEN NULL ELSE vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((NULL)OR(vt0.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ((~ (vt1.c0))) AND (CASE vt0.c1  WHEN vt0.c0 THEN NULL ELSE vt0.c1 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (((((NULL)OR(vt0.c1)))AND(vt1.c0))))) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ((~ (vt1.c0))) AND (CASE vt0.c1  WHEN vt0.c0 THEN NULL ELSE vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((NULL)OR(vt0.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ((~ (vt1.c0))) AND (CASE vt0.c1  WHEN vt0.c0 THEN NULL ELSE vt0.c1 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (((((NULL)OR(vt0.c1)))AND(vt1.c0))))) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ((~ (vt1.c0))) AND (CASE vt0.c1  WHEN vt0.c0 THEN NULL ELSE vt0.c1 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, '-1206038266')))) IS TRUE)) ORDER BY ((((((((((vt0.c1)AND(vt0.c0)))OR(-1231864325)))OR(vt0.c1)))AND(vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, '-1206038266')))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1)AND(vt0.c0)))OR(-1231864325)))OR(vt0.c1)))AND(vt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, '-1206038266')))) IS TRUE)) ORDER BY ((((((((((vt0.c1)AND(vt0.c0)))OR(-1231864325)))OR(vt0.c1)))AND(vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, '-1206038266')))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1)AND(vt0.c0)))OR(-1231864325)))OR(vt0.c1)))AND(vt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, '-1206038266')))) IS TRUE)) ORDER BY ((((((((((vt0.c1)AND(vt0.c0)))OR(-1231864325)))OR(vt0.c1)))AND(vt0.c0))) NOT NULL);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 END THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c0)||(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 END ELSE vt0.c1 END) ORDER BY ((vt1.c0)*(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 END THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c0)||(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 END ELSE vt0.c1 END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0)*(vt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 END THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c0)||(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 END ELSE vt0.c1 END) ORDER BY ((vt1.c0)*(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 END THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c0)||(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 END ELSE vt0.c1 END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0)*(vt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 END THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c0)||(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 END ELSE vt0.c1 END) ORDER BY ((vt1.c0)*(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0 IN ()))OR((+ (vt0.c0)))))AND((vt0.c1 IN (vt0.c1, vt1.c0)))) WHERE (vt0.c0) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0 IN ()))OR((+ (vt0.c0)))))AND((vt0.c1 IN (vt0.c1, vt1.c0)))) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB) ASC);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0 IN ()))OR((+ (vt0.c0)))))AND((vt0.c1 IN (vt0.c1, vt1.c0)))) WHERE (vt0.c0) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0 IN ()))OR((+ (vt0.c0)))))AND((vt0.c1 IN (vt0.c1, vt1.c0)))) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB) ASC);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0 IN ()))OR((+ (vt0.c0)))))AND((vt0.c1 IN (vt0.c1, vt1.c0)))) WHERE (vt0.c0) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB) ASC;
SELECT * FROM vt1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((((vt0.c0)>=(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((((vt0.c0)>=(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((((vt0.c0)>=(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((((vt0.c0)>=(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((((vt0.c0)>=(vt0.c1))))));
SELECT * FROM vt0 WHERE (((((LIKELIHOOD(vt0.c0, 0.8995233697709712))AND((- (vt0.c0)))))AND((((vt0.c1, vt0.c0, vt0.c1))<((vt0.c0, vt0.c0, vt0.c1)))))) ORDER BY ((vt0.c1)AND(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, ((((((((((((((vt0.c1)OR(vt0.c0)))OR(x'')))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))GLOB(((vt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(vt0.c0, 0.8995233697709712))AND((- (vt0.c0)))))AND((((vt0.c1, vt0.c0, vt0.c1))<((vt0.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)AND(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, ((((((((((((((vt0.c1)OR(vt0.c0)))OR(x'')))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))GLOB(((vt0.c1) NOTNULL))) DESC);
SELECT * FROM vt0 WHERE (((((LIKELIHOOD(vt0.c0, 0.8995233697709712))AND((- (vt0.c0)))))AND((((vt0.c1, vt0.c0, vt0.c1))<((vt0.c0, vt0.c0, vt0.c1)))))) ORDER BY ((vt0.c1)AND(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, ((((((((((((((vt0.c1)OR(vt0.c0)))OR(x'')))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))GLOB(((vt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(vt0.c0, 0.8995233697709712))AND((- (vt0.c0)))))AND((((vt0.c1, vt0.c0, vt0.c1))<((vt0.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)AND(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, ((((((((((((((vt0.c1)OR(vt0.c0)))OR(x'')))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))GLOB(((vt0.c1) NOTNULL))) DESC);
SELECT * FROM vt0 WHERE (((((LIKELIHOOD(vt0.c0, 0.8995233697709712))AND((- (vt0.c0)))))AND((((vt0.c1, vt0.c0, vt0.c1))<((vt0.c0, vt0.c0, vt0.c1)))))) ORDER BY ((vt0.c1)AND(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, ((((((((((((((vt0.c1)OR(vt0.c0)))OR(x'')))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))GLOB(((vt0.c1) NOTNULL))) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT (rtreenode(vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (rtreenode(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT (rtreenode(vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (rtreenode(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT (rtreenode(vt1.c0, vt1.c0))));
SELECT ALL * FROM vt0 WHERE (CAST(((0x33fc549e) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((0X33fc549e) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((0x33fc549e) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((0X33fc549e) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((0x33fc549e) NOT NULL) AS TEXT));
SELECT ALL COUNT(*) FROM vt1 WHERE ((0.1922572255006587 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((0.1922572255006587 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((0.1922572255006587 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((0.1922572255006587 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((0.1922572255006587 IN ()) COLLATE BINARY);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(-1.287371882E9 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(-1.287371882E9 AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(-1.287371882E9 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(-1.287371882E9 AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(-1.287371882E9 AS INTEGER));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS TRUE)) ORDER BY NULLIF(CAST(x'' AS REAL), (NOT (vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY NULLIF(CAST(x'' AS REAL), (NOT (vt1.c0))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS TRUE)) ORDER BY NULLIF(CAST(x'' AS REAL), (NOT (vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY NULLIF(CAST(x'' AS REAL), (NOT (vt1.c0))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS TRUE)) ORDER BY NULLIF(CAST(x'' AS REAL), (NOT (vt1.c0))) ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE RTRIM COLLATE BINARY) ORDER BY ((CAST(vt0.c1 AS INTEGER))|('-1206038266'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c0)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS INTEGER))|('-1206038266'))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE RTRIM COLLATE BINARY) ORDER BY ((CAST(vt0.c1 AS INTEGER))|('-1206038266'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c0)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS INTEGER))|('-1206038266'))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE RTRIM COLLATE BINARY) ORDER BY ((CAST(vt0.c1 AS INTEGER))|('-1206038266'))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0)<<(vt1.c0)) END) ORDER BY CAST(LOWER(vt0.c1) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0)<<(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(LOWER(vt0.c1) AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0)<<(vt1.c0)) END) ORDER BY CAST(LOWER(vt0.c1) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0)<<(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(LOWER(vt0.c1) AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0)<<(vt1.c0)) END) ORDER BY CAST(LOWER(vt0.c1) AS INTEGER) DESC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM) ORDER BY (~ (0.6937862379164581)), vt1.c0 DESC  NULLS FIRST, ((((vt0.c1)IS NOT(vt0.c1))) BETWEEN ((~ (vt0.c0))) AND ('525586788'));
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (0.6937862379164581)), vt1.c0 DESC  NULLS FIRST, ((((vt0.c1)IS NOT(vt0.c1))) BETWEEN ((~ (vt0.c0))) AND ('525586788')));
SELECT ALL * FROM vt0, vt1 WHERE (CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM) ORDER BY (~ (0.6937862379164581)), vt1.c0 DESC  NULLS FIRST, ((((vt0.c1)IS NOT(vt0.c1))) BETWEEN ((~ (vt0.c0))) AND ('525586788'));
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (0.6937862379164581)), vt1.c0 DESC  NULLS FIRST, ((((vt0.c1)IS NOT(vt0.c1))) BETWEEN ((~ (vt0.c0))) AND ('525586788')));
SELECT ALL * FROM vt0, vt1 WHERE (CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM) ORDER BY (~ (0.6937862379164581)), vt1.c0 DESC  NULLS FIRST, ((((vt0.c1)IS NOT(vt0.c1))) BETWEEN ((~ (vt0.c0))) AND ('525586788'));
SELECT * FROM vt0, vt1 WHERE (231531028) ORDER BY ((vt0.c0)<<(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))) DESC, CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS INTEGER) ASC, ((((((0.7537927223126816)OR(vt0.c0)))OR(NULL))) BETWEEN ('' COLLATE RTRIM) AND (CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((231531028) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0)<<(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))) DESC, CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS INTEGER) ASC, ((((((0.7537927223126816)OR(vt0.c0)))OR(NULL))) BETWEEN ('' COLLATE RTRIM) AND (CAST(vt0.c1 AS NUMERIC))));
SELECT * FROM vt0, vt1 WHERE (231531028) ORDER BY ((vt0.c0)<<(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))) DESC, CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS INTEGER) ASC, ((((((0.7537927223126816)OR(vt0.c0)))OR(NULL))) BETWEEN ('' COLLATE RTRIM) AND (CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((231531028) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0)<<(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))) DESC, CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS INTEGER) ASC, ((((((0.7537927223126816)OR(vt0.c0)))OR(NULL))) BETWEEN ('' COLLATE RTRIM) AND (CAST(vt0.c1 AS NUMERIC))));
SELECT * FROM vt0, vt1 WHERE (231531028) ORDER BY ((vt0.c0)<<(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))) DESC, CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS INTEGER) ASC, ((((((0.7537927223126816)OR(vt0.c0)))OR(NULL))) BETWEEN ('' COLLATE RTRIM) AND (CAST(vt0.c1 AS NUMERIC)));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS FALSE)) IS TRUE)) ORDER BY ((((vt1.c0)<=(vt1.c0)))GLOB(((vt1.c0)-(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<=(vt1.c0)))GLOB(((vt1.c0)-(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS FALSE)) IS TRUE)) ORDER BY ((((vt1.c0)<=(vt1.c0)))GLOB(((vt1.c0)-(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<=(vt1.c0)))GLOB(((vt1.c0)-(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS FALSE)) IS TRUE)) ORDER BY ((((vt1.c0)<=(vt1.c0)))GLOB(((vt1.c0)-(vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))<(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((((vt0.c0)>=(vt0.c1)))AND(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c0)))<(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)>=(vt0.c1)))AND(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) NOTNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))<(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((((vt0.c0)>=(vt0.c1)))AND(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c0)))<(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)>=(vt0.c1)))AND(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) NOTNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))<(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((((vt0.c0)>=(vt0.c1)))AND(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT * FROM vt1 WHERE (JULIANDAY(LIKE(vt1.c0, vt1.c0, '0'), CAST(vt1.c0 AS REAL), (((vt1.c0))>=((x''))))) ORDER BY IFNULL(vt1.c0 COLLATE BINARY, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(LIKE(vt1.c0, vt1.c0, '0'), CAST(vt1.c0 AS REAL), (((vt1.c0))>=((x''))))) IS TRUE)  as count FROM vt1 ORDER BY IFNULL(vt1.c0 COLLATE BINARY, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) DESC);
SELECT * FROM vt1 WHERE (JULIANDAY(LIKE(vt1.c0, vt1.c0, '0'), CAST(vt1.c0 AS REAL), (((vt1.c0))>=((x''))))) ORDER BY IFNULL(vt1.c0 COLLATE BINARY, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(LIKE(vt1.c0, vt1.c0, '0'), CAST(vt1.c0 AS REAL), (((vt1.c0))>=((x''))))) IS TRUE)  as count FROM vt1 ORDER BY IFNULL(vt1.c0 COLLATE BINARY, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) DESC);
SELECT * FROM vt1 WHERE (JULIANDAY(LIKE(vt1.c0, vt1.c0, '0'), CAST(vt1.c0 AS REAL), (((vt1.c0))>=((x''))))) ORDER BY IFNULL(vt1.c0 COLLATE BINARY, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) ISNULL))OR((((vt0.c1))<((NULL))))))OR(((4.9237267E8)<=(vt0.c1))))) ORDER BY (((- (0.669924721868764))) NOT BETWEEN (UNICODE(vt0.c0)) AND ((vt0.c0 IN (vt0.c1)))) DESC  NULLS LAST, '慏aa9\D''' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) ISNULL))OR((((vt0.c1))<((NULL))))))OR(((4.9237267E8)<=(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((- (0.669924721868764))) NOT BETWEEN (UNICODE(vt0.c0)) AND ((vt0.c0 IN (vt0.c1)))) DESC  NULLS LAST, '慏aa9\D''' DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) ISNULL))OR((((vt0.c1))<((NULL))))))OR(((4.9237267E8)<=(vt0.c1))))) ORDER BY (((- (0.669924721868764))) NOT BETWEEN (UNICODE(vt0.c0)) AND ((vt0.c0 IN (vt0.c1)))) DESC  NULLS LAST, '慏aa9\D''' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) ISNULL))OR((((vt0.c1))<((NULL))))))OR(((4.9237267E8)<=(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((- (0.669924721868764))) NOT BETWEEN (UNICODE(vt0.c0)) AND ((vt0.c0 IN (vt0.c1)))) DESC  NULLS LAST, '慏aa9\D''' DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) ISNULL))OR((((vt0.c1))<((NULL))))))OR(((4.9237267E8)<=(vt0.c1))))) ORDER BY (((- (0.669924721868764))) NOT BETWEEN (UNICODE(vt0.c0)) AND ((vt0.c0 IN (vt0.c1)))) DESC  NULLS LAST, '慏aa9\D''' DESC;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((- (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((- (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((- (vt1.c0)));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1 IN ()))AND(((vt0.c1)<=(vt0.c0)))))AND(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN ()))AND(((vt0.c1)<=(vt0.c0)))))AND(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1 IN ()))AND(((vt0.c1)<=(vt0.c0)))))AND(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN ()))AND(((vt0.c1)<=(vt0.c0)))))AND(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1 IN ()))AND(((vt0.c1)<=(vt0.c0)))))AND(vt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (+ (((vt1.c0)%(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c0)%(vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (+ (((vt1.c0)%(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c0)%(vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (+ (((vt1.c0)%(vt1.c0)))) ASC;
SELECT * FROM vt1, vt0 WHERE (NULL) ORDER BY NULL ASC, (UNLIKELY(DISTINCT vt0.c1) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL ASC, (UNLIKELY(DISTINCT vt0.c1) IN ())  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (NULL) ORDER BY NULL ASC, (UNLIKELY(DISTINCT vt0.c1) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL ASC, (UNLIKELY(DISTINCT vt0.c1) IN ())  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (NULL) ORDER BY NULL ASC, (UNLIKELY(DISTINCT vt0.c1) IN ())  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (UPPER(DISTINCT ((vt1.c0)OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((vt1.c0)OR(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (UPPER(DISTINCT ((vt1.c0)OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((vt1.c0)OR(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (UPPER(DISTINCT ((vt1.c0)OR(vt1.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((- (vt0.c1)) AS BLOB)) ORDER BY vt0.c0 DESC  NULLS FIRST, ((0.8113365231874191) NOT BETWEEN ((vt0.c1 IN ())) AND (vt0.c1))  NULLS LAST, CAST(vt1.c0 COLLATE RTRIM AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 DESC  NULLS FIRST, ((0.8113365231874191) NOT BETWEEN ((vt0.c1 IN ())) AND (vt0.c1))  NULLS LAST, CAST(vt1.c0 COLLATE RTRIM AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((- (vt0.c1)) AS BLOB)) ORDER BY vt0.c0 DESC  NULLS FIRST, ((0.8113365231874191) NOT BETWEEN ((vt0.c1 IN ())) AND (vt0.c1))  NULLS LAST, CAST(vt1.c0 COLLATE RTRIM AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 DESC  NULLS FIRST, ((0.8113365231874191) NOT BETWEEN ((vt0.c1 IN ())) AND (vt0.c1))  NULLS LAST, CAST(vt1.c0 COLLATE RTRIM AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((- (vt0.c1)) AS BLOB)) ORDER BY vt0.c0 DESC  NULLS FIRST, ((0.8113365231874191) NOT BETWEEN ((vt0.c1 IN ())) AND (vt0.c1))  NULLS LAST, CAST(vt1.c0 COLLATE RTRIM AS BLOB) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) ISNULL)) ORDER BY (((((vt1.c0)-(vt1.c0))))<((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)-(vt1.c0))))<((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) ISNULL)) ORDER BY (((((vt1.c0)-(vt1.c0))))<((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)-(vt1.c0))))<((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) ISNULL)) ORDER BY (((((vt1.c0)-(vt1.c0))))<((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN vt0.c0 END)<>(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE ((((vt0.c1)) NOT BETWEEN ((LOWER(DISTINCT vt1.c0))) AND ((((vt0.c0)AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((LOWER(DISTINCT vt1.c0))) AND ((((vt0.c0)AND(vt0.c0)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN vt0.c0 END)<>(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN vt0.c0 END)<>(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE ((((vt0.c1)) NOT BETWEEN ((LOWER(DISTINCT vt1.c0))) AND ((((vt0.c0)AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((LOWER(DISTINCT vt1.c0))) AND ((((vt0.c0)AND(vt0.c0)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN vt0.c0 END)<>(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN vt0.c0 END)<>(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE ((((vt0.c1)) NOT BETWEEN ((LOWER(DISTINCT vt1.c0))) AND ((((vt0.c0)AND(vt0.c0))))));
SELECT ALL * FROM vt1 WHERE (json_extract(vt1.c0, (((vt1.c0))<=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((json_extract(vt1.c0, (((vt1.c0))<=((vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (json_extract(vt1.c0, (((vt1.c0))<=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((json_extract(vt1.c0, (((vt1.c0))<=((vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (x'');
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOTNULL) AS REAL) WHERE (CASE WHEN (NOT (vt0.c1)) THEN vt0.c0 COLLATE RTRIM WHEN CAST(vt0.c1 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN LIKELY(vt1.c0) THEN LOWER(vt0.c1) ELSE vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c1)) THEN vt0.c0 COLLATE RTRIM WHEN CAST(vt0.c1 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN LIKELY(vt1.c0) THEN LOWER(vt0.c1) ELSE vt0.c1 END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOTNULL) AS REAL));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOTNULL) AS REAL) WHERE (CASE WHEN (NOT (vt0.c1)) THEN vt0.c0 COLLATE RTRIM WHEN CAST(vt0.c1 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN LIKELY(vt1.c0) THEN LOWER(vt0.c1) ELSE vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c1)) THEN vt0.c0 COLLATE RTRIM WHEN CAST(vt0.c1 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN LIKELY(vt1.c0) THEN LOWER(vt0.c1) ELSE vt0.c1 END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOTNULL) AS REAL));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOTNULL) AS REAL) WHERE (CASE WHEN (NOT (vt0.c1)) THEN vt0.c0 COLLATE RTRIM WHEN CAST(vt0.c1 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN LIKELY(vt1.c0) THEN LOWER(vt0.c1) ELSE vt0.c1 END);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)|(vt1.c0)))&((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'2ae5')))))) ORDER BY (((x'6fe9')%(484057978)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(vt1.c0)))&((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'2ae5')))))) IS TRUE)  as count FROM vt1 ORDER BY (((x'6fe9')%(484057978)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)|(vt1.c0)))&((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'2ae5')))))) ORDER BY (((x'6fe9')%(484057978)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(vt1.c0)))&((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'2ae5')))))) IS TRUE)  as count FROM vt1 ORDER BY (((x'6fe9')%(484057978)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)|(vt1.c0)))&((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'2ae5')))))) ORDER BY (((x'6fe9')%(484057978)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1 IN ()), (((vt0.c0, x'', vt0.c1)) NOT BETWEEN (('&</鵡cwA\', vt1.c0, x'be03')) AND ((vt0.c1, vt1.c0, vt0.c0))), vt0.c1 COLLATE RTRIM))>((CASE WHEN vt0.c0 THEN vt1.c0 END, CAST(vt0.c1 AS INTEGER), HEX(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN ()), (((vt0.c0, x'', vt0.c1)) NOT BETWEEN (('&</鵡cwA\', vt1.c0, x'be03')) AND ((vt0.c1, vt1.c0, vt0.c0))), vt0.c1 COLLATE RTRIM))>((CASE WHEN vt0.c0 THEN vt1.c0 END, CAST(vt0.c1 AS INTEGER), HEX(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1 IN ()), (((vt0.c0, x'', vt0.c1)) NOT BETWEEN (('&</鵡cwA\', vt1.c0, x'be03')) AND ((vt0.c1, vt1.c0, vt0.c0))), vt0.c1 COLLATE RTRIM))>((CASE WHEN vt0.c0 THEN vt1.c0 END, CAST(vt0.c1 AS INTEGER), HEX(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN ()), (((vt0.c0, x'', vt0.c1)) NOT BETWEEN (('&</鵡cwA\', vt1.c0, x'be03')) AND ((vt0.c1, vt1.c0, vt0.c0))), vt0.c1 COLLATE RTRIM))>((CASE WHEN vt0.c0 THEN vt1.c0 END, CAST(vt0.c1 AS INTEGER), HEX(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1 IN ()), (((vt0.c0, x'', vt0.c1)) NOT BETWEEN (('&</鵡cwA\', vt1.c0, x'be03')) AND ((vt0.c1, vt1.c0, vt0.c0))), vt0.c1 COLLATE RTRIM))>((CASE WHEN vt0.c0 THEN vt1.c0 END, CAST(vt0.c1 AS INTEGER), HEX(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT ((vt0.c1)>(vt0.c0)))) ORDER BY 592534991;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((vt0.c1)>(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 592534991);
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT ((vt0.c1)>(vt0.c0)))) ORDER BY 592534991;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((vt0.c1)>(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 592534991);
SELECT ALL * FROM vt0 WHERE (((((0.4633204952988347)||(vt0.c0))) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))) AND (NULLIF(DISTINCT vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.4633204952988347)||(vt0.c0))) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))) AND (NULLIF(DISTINCT vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((0.4633204952988347)||(vt0.c0))) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))) AND (NULLIF(DISTINCT vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.4633204952988347)||(vt0.c0))) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))) AND (NULLIF(DISTINCT vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((0.4633204952988347)||(vt0.c0))) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))) AND (NULLIF(DISTINCT vt0.c0, vt0.c1))));
SELECT * FROM vt1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT (TYPEOF(DISTINCT vt0.c1)))) ORDER BY (- (vt0.c0)), SQLITE_COMPILEOPTION_GET(vt1.c0 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (TYPEOF(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (vt0.c0)), SQLITE_COMPILEOPTION_GET(vt1.c0 COLLATE NOCASE) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT (TYPEOF(DISTINCT vt0.c1)))) ORDER BY (- (vt0.c0)), SQLITE_COMPILEOPTION_GET(vt1.c0 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (TYPEOF(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (vt0.c0)), SQLITE_COMPILEOPTION_GET(vt1.c0 COLLATE NOCASE) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT (TYPEOF(DISTINCT vt0.c1)))) ORDER BY (- (vt0.c0)), SQLITE_COMPILEOPTION_GET(vt1.c0 COLLATE NOCASE) ASC;
SELECT ALL * FROM vt0, vt1 WHERE (CASE CAST('> <pzPu''' AS TEXT)  WHEN (NOT (vt0.c1)) THEN '0.4106255481783083' END) ORDER BY CAST(NULL AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST('> <pzPu''' AS TEXT)  WHEN (NOT (vt0.c1)) THEN '0.4106255481783083' END) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(NULL AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE CAST('> <pzPu''' AS TEXT)  WHEN (NOT (vt0.c1)) THEN '0.4106255481783083' END) ORDER BY CAST(NULL AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST('> <pzPu''' AS TEXT)  WHEN (NOT (vt0.c1)) THEN '0.4106255481783083' END) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(NULL AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE CAST('> <pzPu''' AS TEXT)  WHEN (NOT (vt0.c1)) THEN '0.4106255481783083' END) ORDER BY CAST(NULL AS REAL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)>('㷻 ')));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>('㷻 '))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)>('㷻 ')));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>('㷻 '))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)>('㷻 ')));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN UNLIKELY(vt1.c0) THEN CASE WHEN vt0.c1 THEN vt1.c0 END ELSE (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN UNLIKELY(vt1.c0) THEN CASE WHEN vt0.c1 THEN vt1.c0 END ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN UNLIKELY(vt1.c0) THEN CASE WHEN vt0.c1 THEN vt1.c0 END ELSE (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN UNLIKELY(vt1.c0) THEN CASE WHEN vt0.c1 THEN vt1.c0 END ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN UNLIKELY(vt1.c0) THEN CASE WHEN vt0.c1 THEN vt1.c0 END ELSE (vt0.c1 IN ()) END);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c1 IN ())) NOTNULL) WHERE ((SQLITE_COMPILEOPTION_USED(x'') IN ())) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((~ (vt0.c1)))))AND(CAST(vt0.c0 AS BLOB)))  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_USED(x'') IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c1 IN ())) NOTNULL) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((~ (vt0.c1)))))AND(CAST(vt0.c0 AS BLOB)))  NULLS LAST, NULL);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c1 IN ())) NOTNULL) WHERE ((SQLITE_COMPILEOPTION_USED(x'') IN ())) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((~ (vt0.c1)))))AND(CAST(vt0.c0 AS BLOB)))  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_USED(x'') IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c1 IN ())) NOTNULL) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((~ (vt0.c1)))))AND(CAST(vt0.c0 AS BLOB)))  NULLS LAST, NULL);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c1 IN ())) NOTNULL) WHERE ((SQLITE_COMPILEOPTION_USED(x'') IN ())) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((~ (vt0.c1)))))AND(CAST(vt0.c0 AS BLOB)))  NULLS LAST, NULL;
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((((vt0.c1)OR(COALESCE(0.1849797231531387, vt0.c0))))OR(CAST(vt1.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1)OR(COALESCE(0.1849797231531387, vt0.c0))))OR(CAST(vt1.c0 AS TEXT))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((((vt0.c1)OR(COALESCE(0.1849797231531387, vt0.c0))))OR(CAST(vt1.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1)OR(COALESCE(0.1849797231531387, vt0.c0))))OR(CAST(vt1.c0 AS TEXT))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((((vt0.c1)OR(COALESCE(0.1849797231531387, vt0.c0))))OR(CAST(vt1.c0 AS TEXT))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(((vt1.c0)LIKE(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(((vt1.c0)LIKE(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(((vt1.c0)LIKE(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(((vt1.c0)LIKE(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(((vt1.c0)LIKE(vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (RTRIM(vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (RTRIM(vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (RTRIM(vt1.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)>=(CAST('{Ax[aR>a' AS TEXT)))) ORDER BY LOWER(DISTINCT vt1.c0 COLLATE NOCASE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>=(CAST('{Ax[aR>a' AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY LOWER(DISTINCT vt1.c0 COLLATE NOCASE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)>=(CAST('{Ax[aR>a' AS TEXT)))) ORDER BY LOWER(DISTINCT vt1.c0 COLLATE NOCASE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>=(CAST('{Ax[aR>a' AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY LOWER(DISTINCT vt1.c0 COLLATE NOCASE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)>=(CAST('{Ax[aR>a' AS TEXT)))) ORDER BY LOWER(DISTINCT vt1.c0 COLLATE NOCASE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (LIKELY(TYPEOF(0.5043647003973213))) ORDER BY (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE NOCASE, ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)>>(vt1.c0)))) AND ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END, vt0.c1 COLLATE RTRIM, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(TYPEOF(0.5043647003973213))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE NOCASE, ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)>>(vt1.c0)))) AND ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END, vt0.c1 COLLATE RTRIM, vt0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (LIKELY(TYPEOF(0.5043647003973213))) ORDER BY (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE NOCASE, ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)>>(vt1.c0)))) AND ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END, vt0.c1 COLLATE RTRIM, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(TYPEOF(0.5043647003973213))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE NOCASE, ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)>>(vt1.c0)))) AND ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END, vt0.c1 COLLATE RTRIM, vt0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (LIKELY(TYPEOF(0.5043647003973213))) ORDER BY (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE NOCASE, ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)>>(vt1.c0)))) AND ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END, vt0.c1 COLLATE RTRIM, vt0.c0))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((MIN(vt1.c0, vt1.c0))/((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY CASE WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ABS(vt1.c0) END DESC;
SELECT SUM(count) FROM (SELECT ((((MIN(vt1.c0, vt1.c0))/((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ABS(vt1.c0) END DESC);
SELECT COUNT(*) FROM vt1 WHERE (((MIN(vt1.c0, vt1.c0))/((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY CASE WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ABS(vt1.c0) END DESC;
SELECT SUM(count) FROM (SELECT ((((MIN(vt1.c0, vt1.c0))/((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ABS(vt1.c0) END DESC);
SELECT COUNT(*) FROM vt1 WHERE (((MIN(vt1.c0, vt1.c0))/((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY CASE WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ABS(vt1.c0) END DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c1)))!=(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))!=(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c1)))!=(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))!=(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c1)))!=(vt0.c0 COLLATE BINARY)));
