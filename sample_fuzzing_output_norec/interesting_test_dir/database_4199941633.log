-- Time: 2024/06/10 14:37:31
-- Database: database33
-- Database version: 3.40.0
-- seed value: 4199941633
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1, c2); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=882254237 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1698219799'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=882254237 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS INTEGER) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '882254237 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((NULL)%(1698219799)), CASE 0.39208799912106684  WHEN '-487965129' THEN '|0/u]6' ELSE 0Xffffffffe2ea3e37 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '576706689'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=882254237 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (SUBSTR(NULL, NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=576706689 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATETIME(CAST(x'9c42' AS TEXT), (~ (x'')), 322723667 COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=322723667'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(NULL AS NUMERIC) THEN (('K') IS FALSE) WHEN (('882254237')>=(0.8942244154246347)) THEN (NOT (NULL)) WHEN ((0.5418663137564903) NOT BETWEEN (0Xffffffff812147c1) AND (0.04913942784899239)) THEN '-2111869339' COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(CAST('' AS NUMERIC)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-487965129 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=670995089 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=882254237 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1246101059 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1144595883 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=482992737 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '243549219 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1219535732 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('K' IN ()))AND(highlight(x'2984', 714473205, '882254237', NULL))))AND(((NULL)|(0x7024a840)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1246101059 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 4.82992737E8; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1457409420 sz=1539476380'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=688867268 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=688867268 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1940156453 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1931765803 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=171382037 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1968866434 sz=-1701587682'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1854137504 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-946401308 -1884977380 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1283621881 sz=942955966 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-523719468 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-344469014 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.5418663137564903' IN (7.14473205E8)))+(((((NULL)AND('171382037')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=792416986 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1968866434'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=714473205 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-201022953 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('>蜜' COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=322723667'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (NULL))  WHEN ((x'')-('-1854137504')) THEN ((x'') BETWEEN (x'') AND (0Xffffffffb08be789)) ELSE highlight(0.44458015142334806, x'59cd', 0Xffffffffa472d424, '1389615853') END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((+ (NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((0Xffffffff8fa5871c)OR(NULL)))OR(x''))  WHEN ((((0.8430607424337678)AND('396507508')))OR(NULL)) THEN (x'' IN (-656797965, '')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((NULL)OR(0Xa371515)))AND(0X52d3daed))  WHEN ((0.04913942784899239)OR(x'')) THEN ('-1184043344' IN (x'daad')) ELSE (('0.8942244154246347') IS TRUE) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2039897636 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('243549219')OR(NULL)))OR(NULL)))AND((NULL IN ()))))AND((NOT (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOT BETWEEN ('扦W+Hki99') AND (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-853338611 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=576706689 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-782613272'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=882254237'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-9073073'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.8491570118458537 IN (NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1863078486 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=373243786 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-853338611 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')AND(''))) BETWEEN ((('-775467848')AND(x''))) AND ((('')||(x'b58f')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.043999114199471556)OR('0.8430607424337678'))) NOT BETWEEN (((-193323819)+('2132068986'))) AND (((NULL) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(IFNULL(DISTINCT NULL, NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-230198125 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1771024836 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('3E')) BETWEEN ((IFNULL(1408367166, NULL))) AND (((((('-344469014')AND(0.15260194850652442)))OR('0.8942244154246347'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=666808109 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE highlight(((x'') NOTNULL), 0.7950138495694101 COLLATE BINARY, ((0.15260194850652442) IS FALSE), (((NULL))>=((NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x37147c4e)) NOT BETWEEN (((('讜1') IS FALSE))) AND ((x'6cc0' COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-989607893 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '688867268' COLLATE RTRIM THEN CASE '942955966'  WHEN NULL THEN 0Xffffffff8f1d0c41 END WHEN (- ('')) THEN ((NULL)<>('')) WHEN ((NULL)>=(0.6114211621388392)) THEN (+ (NULL)) ELSE (((x''))==(('-142072876'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-514028697'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=2039897636 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1535978460)) NOT BETWEEN (((('-201022953') IS FALSE))) AND (((NOT ('}'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1408367166') ISNULL)) NOT BETWEEN (((1408367166)AND(-3.44469014E8))) AND ((('0.44458015142334806')/('-2128525375')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1689711758 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=924089422 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT '990043209' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1389615853'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('0.043999114199471556') IS TRUE)  WHEN CASE x'cc4d'  WHEN 0.6114211621388392 THEN x'' END THEN (- (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'331c', '-1815878898', '6+>!g')) BETWEEN ((('-193323819' IN ()), x'' COLLATE RTRIM, CASE WHEN 0.680430777681853 THEN '3>mE䲸' WHEN '-1184043344' THEN x'35b7d1d2' WHEN x'3bed' THEN 0.5828311457846319 ELSE '904717650' END)) AND ((((0X79965e24) NOTNULL), (NULL IN ()), CAST(NULL AS BLOB)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'') NOTNULL))AND(CAST(NULL AS NUMERIC))))OR(CAST('?z' AS INTEGER))))AND(TRIM('-9073073'))))OR(((NULL) NOT BETWEEN (171382037) AND (1.219535732E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 sz=904717650'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('ZtH*jfZy0') NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=50570474'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=945365522'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x'51f7'  WHEN NULL THEN '' WHEN '' THEN 0.36609114380492647 WHEN NULL THEN 0X48b0a374 END)!=(x'c42c')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'4285')>>(x'1875'))  WHEN ((9.42955966E8) BETWEEN (x'9847') AND (0.33386945425184267)) THEN (+ ('r&')) WHEN (NOT (171382037)) THEN (~ (x'')) WHEN CAST('-1701587682' AS INTEGER) THEN CASE WHEN 0x5d645999 THEN NULL END END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -991617328 sz=-679132582 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '898789818'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-6.56797965E8)||(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 sz=-738917460 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)%(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-972116458 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1698219799 sz=-457872617 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('')AND(0x225fd881)))OR(0.7185292040315334)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X3aa2d549)<(((x'44fa') NOTNULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=587489675 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=316313428'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('-1701587682')))<((~ (x'f40d')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-739520930 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.10270466096327435)*(NULL)) COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1539476380'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1881450560 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '688750939 sz=-1259251449 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1535978460 -131639525'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(IFNULL(DISTINCT 0.11512240450423217, '-1863078486') AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=990043209 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(DISTINCT x'3e07', NULL))+((0.6114211621388392 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((-1.31639525E8) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1720938241 sz=-1720938241'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT ('}'))))<=((((NULL)%(0.02837301256694036))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=670995089 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.10677025379476135)&(x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('0.10270466096327435')))>=(((x'9ff1') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1001877294 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1223763429 sz=-989607893 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('!-M\r' IN (0.9480296354592594, x'')))<<(('-845816323' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR('')))OR(('243549219' IN ()))))AND(CASE WHEN 0.7185292040315334 THEN 0.0038240279164361013 END)))OR('')))AND(CAST(0xffffffff90f3adaa AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0xffffffffb397422e)OR(0.5813905167414888)))OR(NULL)))/(CAST(0.6126147889615966 AS TEXT))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1940156453 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2039897636') BETWEEN (NULL) AND (NULL))) BETWEEN (((((NULL)OR(x'')))AND(x'cea3'))) AND (((x'34f5') NOT BETWEEN (x'726c') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('q9')&('-1246101059' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1281932754 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0.1711374401441068)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(NULL AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST('RL' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-679132582 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'0121', '0.8430607424337678')) NOT BETWEEN ((((((NULL)OR(x'e86a')))AND(NULL)), ((x'') NOT NULL), ((0.3985977966640549)<=(x'')))) AND (((~ ('0.15260194850652442')), (('FALSE')*(0.49535662564811034)), TRIM(x'', 0X64b6f48e)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN '' THEN NULL WHEN 'a' THEN '' WHEN x'' THEN NULL ELSE NULL END AS INTEGER); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('' IN (NULL)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1781518834 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5828311457846319) IS TRUE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=155500552'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1752044052 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1333008503 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN ('') AND (x'0836'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-149088095 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1346455901 0 2 sz=557244318'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(LIKE(NULL, '373243786', '!') AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>>(NULL)))>(CASE '3Wll6(tK'  WHEN '#{4/<^' THEN x'' ELSE '-27361693' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=482992737'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1061856594 sz=-1594013426 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')>(NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN x'495d' THEN NULL END AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=495430762 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1152465764'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('373243786' AS BLOB)))>=(((NOT (''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1607966556 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-142072876'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') IS FALSE) THEN ((NULL) NOT NULL) ELSE ((x'e815') BETWEEN (NULL) AND (0.02448623366075786)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((3.16313428E8 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'64aa')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1457921207'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)OR(NULL)))AND('1759009053')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.6011879429061076)<=(0.49645179213514634)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1223763429 0 sz=-377010296'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND(x'')))AND('TRUE')))>(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '306081718 0 sz=-1621147955'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT NULL COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS NUMERIC) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1466961681 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1058288441 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-319393747 sz=-1277183846 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=921266898 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=373243786 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -2134177335 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x944c008 IN ()))|((- (0.2913989684275734)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json(-1179450329); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=396507508 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=983749961'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1726324995 sz=-1517942968 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('') BETWEEN (NULL) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((CAST('688750939' AS INTEGER))) AND ((CAST(x'3acf' AS TEXT)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.1509407510710158) BETWEEN ('-1595939682') AND (0xffffffffc23374d8)) THEN ((NULL) IS TRUE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (NULL)) THEN TRIM(DISTINCT x'') END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((-4.87965129E8)AND(x'ce8b')))OR(0xffffffffd3e89a10)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.043999114199471556'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '664310177 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=-245763990 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-902296758 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE '74732199'  WHEN '666808109' THEN x'' END)AND((('Ii') NOT NULL))))OR((('r&')&(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '9223372036854775807 205400565 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)LIKE('-2111869339')))%(CASE WHEN '341463166' THEN x'' ELSE x'a43a' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.29418971728820886) BETWEEN ('2039897636') AND ('-1704871291')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '688750939' COLLATE NOCASE THEN ((-1289078973)&(0.3741090719174953)) ELSE ((NULL)-('')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('') IS FALSE))OR(x'a113')))AND(TRIM(DISTINCT -9.72116458E8))))AND(((-1.45740942E9) NOTNULL))))AND((('') BETWEEN (NULL) AND (0.0285438282573669)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1043366715')AND(NULL)))<=((((NULL, -4.57872617E8, '983749961', 0.5607474111014848, 0.905119129113491))<((x'', NULL, -871847188, NULL, 0.02837301256694036))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=684518123 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=942955966'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2013094824 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '-1720938241' COLLATE BINARY THEN 'C\rnUr횊c' ELSE ((x'')%(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1736407255 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-259857576 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1701587682'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((x'39fb')LIKE(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0X7fac62b6 AS REAL)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) IS TRUE)))<>((CAST(NULL AS TEXT)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1503122019'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE INSTR(CASE 0.8491570118458537  WHEN '877935486' THEN NULL ELSE x'' END, (((NULL, -1934147147, NULL))>=((NULL, '-1283621881', '-853338611')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.28290113538546513)>(x''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'ff82' COLLATE NOCASE THEN '?q' WHEN (NULL IN ()) THEN LTRIM('-1338768322') WHEN ((('u''.(.')) BETWEEN (('|')) AND ((-972116458))) THEN (((NULL, 'a]\nte⏔Xj', 'j\n '))>(('a', 1249445829, x''))) ELSE ((NULL) ISNULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0xffffffff8a0c0965)==('0.6126147889615966')), ((0.9966119996890324) NOT BETWEEN (0.9766708413823286) AND (x'')), CASE WHEN NULL THEN x'44d3' ELSE '1520975565' END))<=((((-329048886) NOTNULL), (NULL IN (x'1802', NULL)), ((((NULL)OR(0.8590379178226316)))AND('-775467848'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2034695753 -1457409420 sz=-1572627256 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('?' AS INTEGER))>(SQLITE_COMPILEOPTION_GET('-991617328'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN x'' THEN '-149088095' WHEN NULL THEN -2016357468 WHEN x'8c45' THEN x'3203' END THEN ((NULL)IS(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((((-1.88497738E9) NOTNULL))) AND ((((4.95430762E8)%(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((-9.46401308E8)>>(NULL)))>=(((1.53947638E9)<(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((' aᖙd/(') NOT NULL)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT ((0.9881206351414615) BETWEEN (NULL) AND ('0.44458015142334806'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1609528222 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1701587682'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-755014680 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1621147955 sz=875113735 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1.720938241E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-829474255 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'6305') BETWEEN (NULL) AND ('?'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=180683073 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1061856594')) NOT BETWEEN (((((0.36197988408030124))!=((''))))) AND ((0.19847890298795434 COLLATE NOCASE))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-738917460'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=373243786'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '769882613 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1606388936 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((((('')AND(NULL)))AND(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1731678635 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE 0X56e61cb7  WHEN NULL THEN '-853338611' END  WHEN (((((((('FWP0')AND(0.5844410983428471)))OR(0.6117890553440123)))AND(NULL)))OR('-989607893')) THEN 0.31700902220177574 ELSE ((x'') ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 2132068986 610370479 sz=-1929955807 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=55279852 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) BETWEEN (0Xffffffffe15c8b67) AND (0.07831312281310732)) AS INTEGER); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(3.22723667E8 AS NUMERIC))>=(CASE ''  WHEN 0.9782554688810985 THEN 0.5824466092046409 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1161898028 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=688750939 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1140684291 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=751606629 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1376345041 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-262925510 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-514028697 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1502091215'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=701555872 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN x'' THEN x'3942' ELSE 0.3023743218609771 END THEN (((0.33461501443292574)) BETWEEN ((x'')) AND ((0.04913942784899239))) WHEN (('e ') ISNULL) THEN 'S6' WHEN CASE x''  WHEN NULL THEN '' END THEN ('j\n ' IN (x'', 0.8147171375789188)) ELSE ('1811132549' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('1813079857')LIKE(NULL)) THEN ((x'')IS NOT(NULL)) WHEN ((((NULL)AND('T)c-	')))AND('-1e500')) THEN CASE NULL  WHEN NULL THEN 'YR' END WHEN (+ ('396507508')) THEN (- (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-1466961681 AS NUMERIC))||(((0.8983013780470684) BETWEEN (0.7471148931296147) AND ('-739520930')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS INTEGER) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'0b2b')OR(0.6013838553135664)))OR(NULL)))IS NOT(((((x'')AND('R1')))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1801476041 1758751285 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-201022953 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1782257614 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.7849037115521312) NOT NULL))AND((- (0.9782554688810985)))))OR(((NULL)||('0.0')))))AND(((0.07231711237281568) BETWEEN (0.16179326639988456) AND (0.40798038143366067)))))AND(((NULL)<(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1950200733 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_USED('6+>!G')) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'')))LIKE('?')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1271160713 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1744862942' COLLATE RTRIM)%((('')LIKE('Q')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN (NULL) AND (0.060307578357995384)))IS(2.43549219E8)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('s>I5' COLLATE NOCASE))>((((('-9073073'))=((x'0c11')))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN ((0.7818958759234209)) AND (('-2128289076'))))=((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('387144871' COLLATE BINARY))<=((NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((- ('Q'))) NOT BETWEEN ((('806310726') BETWEEN (-2.01022953E8) AND (NULL))) AND ((('-995014528') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')AND('7y髴)_.4H'))) NOT BETWEEN (TYPEOF(x'')) AND (((x'') BETWEEN (NULL) AND (' 9')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.044698562625445803) NOT BETWEEN ('') AND (x''))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (NULL) AND (0.4356286252668581))) BETWEEN (((x'') IS FALSE)) AND ((((NULL)) NOT BETWEEN (('2134891405')) AND ((0.41397458231450635))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1281744810 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('7y髴)_.4h') NOT BETWEEN (x'') AND (x'0d76'))) NOT BETWEEN ((('-715205862') NOT BETWEEN (x'') AND (0.8191403830215316))) AND (CAST(x'7c13' AS BLOB))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'b895')<=(CAST(NULL AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=685269965 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1701587682 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN NULL END) NOT BETWEEN (x'feb2') AND (CASE '-387638243'  WHEN NULL THEN x'' WHEN x'' THEN '-946401308' WHEN '1698219799' THEN '{/Pca!' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-991617328')) BETWEEN ((0.3749379231984753)) AND (('2032013105'))))AND((NOT (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=251286953 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1956281860 2 sz=1093279756 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((''))<(('-1457409420'))))<>(0.2706097281623041)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 1986032015 sz=666808109'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '808541085'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE BINARY)%((((x'', NULL, 0.10654373644999982))<(('-1061856594', '-1e500', NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1518159824 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-407864517 -2107497853 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=682497489'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1424281400 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x17a23974) BETWEEN (x'') AND (0.3023743218609771))) BETWEEN (((x'1f4e2310')=(NULL))) AND (CASE NULL  WHEN '-1223763429' THEN '-2128525375' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-991617328 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-9073073.0) NOTNULL))OR((x'' IN ('396507508')))))AND((((0.3917266373959256))>(('2143940231'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(IFNULL('2039897636', '') AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((UNLIKELY(x''))OR((- (0.4833367233440746)))))AND(((((NULL)OR(x'e28f')))AND('-1405027047')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.566857625E9; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.4686268551557409; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.9782554688810985')<=((('155500552')+(x'da4f')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1803770676 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('2132068986')AND(0.4833367233440746)))OR('KጂtVlqX')))OR(CASE WHEN NULL THEN '|0/u]6' END)))OR(LIKELIHOOD(NULL, 0.16055471459220882))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.12249658870354252)%(0.56792086733133)) IN (((('E젫+q뗩.')) NOT BETWEEN ((832944356)) AND ((NULL))), ('' IN ()), (((((((('')OR('-1846156896')))OR(1624201605)))OR(NULL)))OR(1046963717)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN ('316313428')))AND(((x'') NOT BETWEEN (0.0038240279164361013) AND ('0.07831312281310732')))))OR(((0.11950523938112667) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-989607893 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1193816759'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=945365522 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((~ (x'bc53')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1511284139 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1881450560'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NOT (-632128427)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '144335004 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(x'' AS TEXT) THEN (('Hv4I!aX	')LIKE(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-656797965 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1607966556')==('')))AND((NOT ('-2011732448')))))OR((('-1535978460') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 sz=703355531'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-207058074 sz=-180734358 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('쩺y_rhWsr') ISNULL) IN (((x'8eb6') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((882254237) NOT BETWEEN ('') AND (0.071941109665283)) AS NUMERIC); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'529e52c6') IS TRUE)) NOT BETWEEN ((((0.1509407510710158)) BETWEEN ((-184967850)) AND ((NULL)))) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8054280603701726; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1864054804 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(0xffffffff821f6e65 COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-679132582 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1550965299 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2028693471 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0xffffffffd67b163b AS INTEGER) IN ((((NULL)) BETWEEN (('>)')) AND ((0X37147c4e))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1900626737 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(((937256086) NOT NULL))))OR(('' IN (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.13479837706978692 AS INTEGER) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=983749961 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ ((0.1974551707207819 IN (NULL, 9.24089422E8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', '-1720938241', 0.8590379178226316, NULL, NULL)) BETWEEN (((((x''))>((NULL))), (('-738917460') BETWEEN (x'') AND (0.882788128876023)), '-1893921727' COLLATE NOCASE, 0xffffffffb0bcc9ee, CASE WHEN -487965129 THEN '-1184043344' END)) AND ((((NULL) BETWEEN (-9.89607893E8) AND (NULL)), (('W2lym?')AND(x'4295')), ((x'f32c') IS TRUE), (x'' IN ()), (NULL IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1752044052 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1698219799 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-66411007 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('9審4V' AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '569309234 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((4.82992737E8) IS TRUE))OR(CASE '0.28290113538546513'  WHEN x'' THEN '' ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=482992737 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOT BETWEEN (0.6799721794541356) AND (0.6094322185964143)) COLLATE NOCASE COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOT NULL))OR((('')IS(' b')))))AND((5.76706689E8 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '171382037 sz=-1218847766'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 322723667'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ABS(' w䟁Zl#]W') THEN CASE ''  WHEN '616495946' THEN 0.8491570118458537 END WHEN (((('2034479940')OR('-418005676')))AND(x'115d')) THEN CAST(x'' AS NUMERIC) WHEN NULL THEN NULL COLLATE RTRIM ELSE UNLIKELY('ULkAr&') END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(0.060307578357995384)))AND(NULL))) BETWEEN (NULL COLLATE BINARY) AND (((x'')==(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1607966556 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-0.0') IS TRUE)) NOT BETWEEN ('''' COLLATE RTRIM) AND ((((NULL))>((x'e2d3'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json(x''))GLOB((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2128525375 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1738276882 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1447335576 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5844410983428471) ISNULL)) BETWEEN (((((NULL)AND(x'')))AND('688750939'))) AND (((x'356d2076')-(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7244644873121348; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>('')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)*(0.5828311457846319)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.26363641336477683 AS BLOB))>((-9.46401308E8 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT 0X29e772b0, x'')) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.1560662683631575 THEN NULL END)>>((((NULL))<=((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=81936543'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1044093818 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '767345503 222155408 sz=1728248808 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-438971719 sz=-666011065 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1400180413'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1831578609 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffcd95ddfd))<=((x''))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-850055168 noskipscan'); -- 7ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1878285158 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.11512240450423217)) BETWEEN ((UNLIKELY(DISTINCT 1.152465764E9))) AND ((CASE WHEN 0.29418971728820886 THEN '882254237' ELSE 0.15700671107890618 END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('7Y髴)_.4H')) NOT BETWEEN ((0.052864887949361394)) AND (('扦w+hki99'))))<>(CASE WHEN 0.9480296354592594 THEN 0Xffffffffd8acc31b END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '944377750'; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'de93')AND(NULL)))OR(x'5ed9')))AND('%n6')))AND(x'')))||((~ ('-991617328')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.40326942612406624, NULL, ''))<=(('Je+pt.Xnz', '-1330454421', '-1839671295')))) BETWEEN ((+ (NULL))) AND (NULLIF('-1333008503', 306081718))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-946401308 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN x'' THEN 0Xc7a3a5c ELSE '' END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1489043734 unordered noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array((('Id?H')<<(1.7976931348623157E308)), (~ (0.16179326639988456)), (('')<<('1462064330')), ((666808109)IS('2039897636'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((6.66808109E8)AND('e迂')))AND(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1391093277 576706689 -2051330079'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 688008143 sz=1330374248 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((9.0471765E8)) BETWEEN (((~ (0.8590379178226316)))) AND (((x'7e919c8e' IN ())))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0.46391512500753473) AND (x''))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)AND(NULL)))OR('-193323819'))))>=((NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.2634123519342081 COLLATE NOCASE)<(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=306081718'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM)GLOB(UNLIKELY(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=763916267 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1904997585 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '351164230 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.7244644873121348) NOT NULL) THEN CASE WHEN '' THEN 0.5042065531847314 END ELSE '1382434448' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.38356003201857747 IN ()))*(((x'')<<(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(1101358673, NULL) COLLATE BINARY COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-111679755 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '168051456 sz=-1987147580'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-74276246'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'e21f'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-617899935 0 sz=-1499718889'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '㄀S䅧a'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=171382037 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=752451717'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1144595883 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 1491602070'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('')AND(x'7302')))AND(NULL)))AND('')))OR('eN')))OR((+ (0.19847890298795434)))))AND(((((NULL)AND('_^P飞')))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1676725206 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1943495716 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1660062780 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-149088095 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1819802222 0 0 sz=981090206'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '515372008 -1354158224'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-382098391 -913238934'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-667191811 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-774661008' IN ()) IN (0.39643094306788595)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1903679453 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2132068986 -1143648186 sz=-1295939080'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1904007204 sz=-1309292948 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x2dbdf9f6; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=792416986 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-758976287 1709501589 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=587489675 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((x'af7f' IN (x'', 'c[sRf\r)Ჷ1')), ((('61098242', NULL, 0.6478136057283608))<=(('-2111869339', x'', NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')GLOB(x'')))AND(CASE '['  WHEN 0.19847890298795434 THEN '-523719468' ELSE x'9c7d' END)))OR(((((0.3135299121048255)OR(0.24546620297673982)))OR('1144595883')))))OR((~ ('sN❆')))))AND('519192941')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE 0.2634123519342081  WHEN 0.07831312281310732 THEN 666808109 ELSE 'o2*' END THEN ((NULL)||(0.29089503485840573)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2025304921 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9720493180938329) BETWEEN (x'343a') AND ('3>mE䲸')))OR(((-1258510741) BETWEEN ('?') AND (0.8543470689543107)))))OR(((0.710270487873071)GLOB(0Xc05efbb)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-82202753 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-42060149 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1953337660 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-323958474 sz=1513144716'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('~\r熺' IN ()))GLOB((((NULL)) NOT BETWEEN ((0.43841124873963866)) AND ((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-929527485 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.450395354176204)||(0x2f8a743f))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=316313428'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1834183930'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1689711758 882254237 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-370067652 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '482992737 -164226240 sz=482992737 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (-659603486)))&((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 1270477040'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1250223519 sz=945365522'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1363983369 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=500922921 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-641153771'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.36720749360271954; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-1640770214' AS REAL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-105943363'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'71ce' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2104028657 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1086301416 1921863926 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-127598282 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((336303557)OR(x'')))AND(0.7307894553535416)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-946401308 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1781308737' COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-2104657367' AS REAL))OR(((0.5646158272159413)+(x'3279')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.6460553446400499)OR('-43702691')))AND(0xffffffff9e531ea7))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7873422268575645, '', 0.9863451382838141))>((NULL, '-1730027480', x'85951e7a')))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'zO~5a'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.33461501443292574)) BETWEEN (('1112683241' COLLATE RTRIM)) AND ((0.8460811190783798))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1870344747 sz=-441316500 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '635820448'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1931765803 sz=1275783075 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1928750257 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0x5fd79f5c) BETWEEN ('1e500') AND (NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1806814655 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (NULL)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)<=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('A	?' AS NUMERIC))<=((NOT (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 942955966 sz=1219535732 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-845816323 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1174759511'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1365839540 sz=84026745'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-59891237'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((CAST(NULL AS TEXT))) AND (((('1891550476') NOT BETWEEN (0.052864887949361394) AND (-487965129))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('0)|-t' AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7137994913864855)+(0.9327214614567517)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 -1991967224 sz=-2082011426'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('S6'))) BETWEEN ((((('')OR(0.4580594144908907)))OR(x''))) AND (((-1261693762) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-801586051'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 'I9'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1061856594 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1244359378 sz=714721832 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('<7l')) NOT BETWEEN ((x'')) AND ((-2039754654)))) BETWEEN (1.457921207E9) AND (((0.7060038499694258) NOT BETWEEN (NULL) AND ('0\T')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-1061856594')IS(')곔?-\lq')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1144595883' IN (-237853804)), ((((0.9418572884832777)OR(NULL)))OR(x'')), COALESCE(DISTINCT NULL, NULL)))<(((('2100607809')LIKE(x'f619')), CAST(x'' AS BLOB), ((((NULL)AND('0.31700902220177574')))AND(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1333008503 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1529131499 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-845816323 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1594013426', NULL, x'27225c31', NULL, 0.03725175473661224))!=((0.5814453210404767, x'', -989607893, -8.53338611E8, x'')))) NOT BETWEEN ((('1275197422') NOT BETWEEN (-1965351285) AND (0xffffffffe15c8b67))) AND (((((NULL)OR('0.3749379231984753')))AND('zO~5a')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0Xffffffff9a121018 IN ((((NULL)) BETWEEN ((NULL)) AND ((0.7818958759234209))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=945365522'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=587489675 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1200976418'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1141296964'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-27361693 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1535978460 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('1395702946') AND (''))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0.40657356450752513 THEN 0x44cf3f9c WHEN '0.3749379231984753' THEN NULL WHEN NULL THEN NULL ELSE x'' END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1307590370 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.4304640187763956)>=(NULL))  WHEN CASE x''  WHEN -1e500 THEN 0.48037345835448375 WHEN 0.17803237542723782 THEN 0.15550911802708545 WHEN -7.3891746E8 THEN -1815878898 ELSE 0.5824466092046409 END THEN (((NULL))<=(('1940156453'))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1948625590'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1652930621 0 sz=-148590203 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1303263210'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=990043209 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((NULL)OR('')))OR(-1.88497738E9)))OR(IFNULL(DISTINCT '-2010579709', x''))))OR(IFNULL('', 0.9525253393038644))))AND(CASE x''  WHEN NULL THEN 0Xffffffffeccef2f2 WHEN '\n' THEN 0.8557380433000256 WHEN NULL THEN '1224538861' ELSE '' END)))OR(HEX(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(NULLIF(NULL, NULL), ((0Xfffffffffa00960d)OR(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN ((NULL)) AND ((NULL)))) BETWEEN (((1152465764)!=(''))) AND (1.689711758E9)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'db88' AS NUMERIC))>>(((0.680430777681853) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1174994778 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1884977380 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.20525041036373615 AS REAL))+(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL IN (0.5298983491362659)))OR(CASE NULL  WHEN '-149088095' THEN 'Ws' ELSE x'' END)))OR(UPPER(DISTINCT 0.5149075240626843))))AND(((NULL)IS('-516702144')))))AND((('886982890') BETWEEN ('-775467848') AND ('-2111869339')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1090658296 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=481276152 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '859984068'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('+') NOTNULL))OR(((x'd5ec') NOT NULL))))OR(('n쟤)1_F' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=557244318 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1061856594'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_GET(0.8969931930004506))<=(CASE WHEN '0.0285438282573669' THEN 0.9667950263854126 WHEN NULL THEN NULL WHEN '396507508' THEN '-514028697' WHEN '' THEN 306081718 WHEN 0X5b725b78 THEN x'4693' WHEN NULL THEN 0.4398706158363802 WHEN 'p&~S<5~!' THEN 0Xffffffff9c1dffaa ELSE '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=155500552 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'a0讜.tz'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1259251449 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1854137504 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1912251354'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.6126147889615966) NOT BETWEEN ('') AND (0.6489852709387995)) THEN (NOT (0.3696467054235718)) WHEN ((NULL) NOT BETWEEN (0.31250602059683885) AND (x'')) THEN ((NULL)>>('1930095565')) WHEN (('688867268')||(x'')) THEN (('-1988748201')<=(x'')) ELSE ((0Xffffffffb6017965)IS(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-8.45816323E8) IS FALSE))IS NOT(((((0.6238911016975536)OR(x'')))OR(0.2490695889443536)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2132068986 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1607966556 4 -1702704912 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-925848484 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('') NOT BETWEEN (NULL) AND (x'aeb1')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1346455901'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1078989527 unordered'); -- 0ms;
REINDEX; -- 0ms;
END; -- 0ms;
PRAGMA threads = 6962531044395599969; -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt0 SET (c2)=('') WHERE (((NOT (vt0.c1))) BETWEEN ((((vt0.c1, NULL, vt0.c1))<>((vt0.c1, vt0.c1, NULL)))) AND (0x7fffffffffffffff)); -- 0ms;
UPDATE vt0 SET (c1)=(x'') WHERE ((((x'') NOT BETWEEN (vt0.c1) AND (vt0.c0)))<>((vt0.c2 IN ()))); -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES ('-514028697'), (0.36609114380492647), (''); -- 0ms;
PRAGMA temp.optimize; -- 0ms;
END; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.4356286252668581); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -614103826);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1708734410); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1024199); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '34831'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 5ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '32014'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE TABLE t0 (c0 BLOB ); -- 0ms;
PRAGMA main.application_id = -5956618693978393364; -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE vt0 SET (c2, c1)=('Jp)BHo7', -615983749); -- 7ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA temp.default_cache_size = 1840613425; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1467629378); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1955752605); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '60115'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '25458'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 730211351); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c2; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (-7.82613272E8); -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 1ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2, c2)=('898789818', NULL, NULL); -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
INSERT OR ROLLBACK INTO t0(c2) VALUES (0.5418663137564903), ('-2111869339'), (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE INDEX i6 ON t0(CAST(NULL AS TEXT) COLLATE RTRIM); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
UPDATE t0 SET c2=0.6594614289158997; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.auto_vacuum; -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29792'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
PRAGMA application_id = -3952402116467036116; -- 0ms;
REINDEX  t1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '54942'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'20e9' WHERE (CASE WHEN vt0.c2 THEN vt0.c0 END IN ()); -- 0ms;
PRAGMA short_column_names; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1282994519);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '47498'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1754114738);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES ('-1281932754'); -- 0ms;
CREATE INDEX i72 ON t1(((((c2) NOT BETWEEN (c2) AND (c2))) BETWEEN (((c2)IS NOT(c2))) AND (((c2)/(c2)))) COLLATE RTRIM DESC); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
PRAGMA foreign_keys = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1290735778); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ALTER TABLE t1 ADD COLUMN c61 TEXT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '24229'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1884528684); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '10488'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '46741'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '37912'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58906'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1746171470); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '33477'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '20991'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2012870917); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA temp.stats; -- 0ms;
INSERT OR ABORT INTO t1(c2) VALUES ('1781518834'); -- 0ms;
INSERT OR FAIL INTO vt0(c2, c1) VALUES ('-656797965', x''); -- 0ms;
INSERT OR ABORT INTO t1(c61, c2) VALUES ('V0', 0.33405706140038616); -- 0ms;
PRAGMA integrity_check; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA main.journal_mode = DELETE; -- 0ms;
DELETE FROM vt0; -- 1ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (NULL); -- 0ms;
PRAGMA temp.default_cache_size = 720281162; -- 0ms;
UPDATE OR IGNORE t1 SET (c61)=(''); -- 0ms;
INSERT OR ROLLBACK INTO t1(c61) VALUES (0.2269980830150361); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c2)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2))) COLLATE RTRIM WHERE ((+ ((((t0.c2, '-1283254182', t0.c2)) BETWEEN ((vt0.c1, t0.c2, t0.c2)) AND ((vt0.c2, vt0.c0, ''))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((t0.c2, '-1283254182', t0.c2)) BETWEEN ((vt0.c1, t0.c2, t0.c2)) AND ((vt0.c2, vt0.c0, '')))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c2)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c2)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2))) COLLATE RTRIM WHERE ((+ ((((t0.c2, '-1283254182', t0.c2)) BETWEEN ((vt0.c1, t0.c2, t0.c2)) AND ((vt0.c2, vt0.c0, ''))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((t0.c2, '-1283254182', t0.c2)) BETWEEN ((vt0.c1, t0.c2, t0.c2)) AND ((vt0.c2, vt0.c0, '')))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c2)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c2)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2))) COLLATE RTRIM WHERE ((+ ((((t0.c2, '-1283254182', t0.c2)) BETWEEN ((vt0.c1, t0.c2, t0.c2)) AND ((vt0.c2, vt0.c0, ''))))));
SELECT ALL * FROM t0 WHERE ((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) BETWEEN (('' IN ())) AND ((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) BETWEEN (('' IN ())) AND ((~ (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) BETWEEN (('' IN ())) AND ((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) BETWEEN (('' IN ())) AND ((~ (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) BETWEEN (('' IN ())) AND ((~ (t0.c2)))));
SELECT COUNT(*) FROM t0 WHERE ((((+ (t0.c2)))=((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c2)))=((NOT (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((+ (t0.c2)))=((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c2)))=((NOT (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((+ (t0.c2)))=((NOT (t0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.013943050783168043) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.013943050783168043) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.013943050783168043) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.013943050783168043) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.013943050783168043) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 END)>=(NULLIF(t0.c2, t0.c2))) ASC, ((TYPEOF(DISTINCT t0.c2)) NOT BETWEEN ((((t0.c2, t0.c2, t0.c2))!=((t0.c2, 0.8156901911444535, '2098315734')))) AND (((t0.c2)OR(-1.281932754E9))))  NULLS FIRST, (NOT (CASE 945365522  WHEN t0.c2 THEN t0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 END)>=(NULLIF(t0.c2, t0.c2))) ASC, ((TYPEOF(DISTINCT t0.c2)) NOT BETWEEN ((((t0.c2, t0.c2, t0.c2))<>((t0.c2, 0.8156901911444535, '2098315734')))) AND (((t0.c2)OR(-1.281932754E9))))  NULLS FIRST, (NOT (CASE 945365522  WHEN t0.c2 THEN t0.c2 END)));
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 END)>=(NULLIF(t0.c2, t0.c2))) ASC, ((TYPEOF(DISTINCT t0.c2)) NOT BETWEEN ((((t0.c2, t0.c2, t0.c2))!=((t0.c2, 0.8156901911444535, '2098315734')))) AND (((t0.c2)OR(-1.281932754E9))))  NULLS FIRST, (NOT (CASE 945365522  WHEN t0.c2 THEN t0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 END)>=(NULLIF(t0.c2, t0.c2))) ASC, ((TYPEOF(DISTINCT t0.c2)) NOT BETWEEN ((((t0.c2, t0.c2, t0.c2))<>((t0.c2, 0.8156901911444535, '2098315734')))) AND (((t0.c2)OR(-1.281932754E9))))  NULLS FIRST, (NOT (CASE 945365522  WHEN t0.c2 THEN t0.c2 END)));
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 END)>=(NULLIF(t0.c2, t0.c2))) ASC, ((TYPEOF(DISTINCT t0.c2)) NOT BETWEEN ((((t0.c2, t0.c2, t0.c2))!=((t0.c2, 0.8156901911444535, '2098315734')))) AND (((t0.c2)OR(-1.281932754E9))))  NULLS FIRST, (NOT (CASE 945365522  WHEN t0.c2 THEN t0.c2 END));
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((+ (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((+ (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((+ (vt0.c0))) ISNULL));
SELECT * FROM vt0 NOT INDEXED, t0 WHERE ((NOT (t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0 NOT INDEXED, t0 WHERE ((NOT (t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0 NOT INDEXED, t0 WHERE ((NOT (t0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0)%(vt0.c0)))) AND (((((vt0.c2, t0.c2, t0.c2))<=((vt0.c1, vt0.c2, vt0.c0))))))) ORDER BY ((((t0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))*(((vt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c0)%(vt0.c0)))) AND (((((vt0.c2, t0.c2, t0.c2))<=((vt0.c1, vt0.c2, vt0.c0))))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))*(((vt0.c1) NOTNULL))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0)%(vt0.c0)))) AND (((((vt0.c2, t0.c2, t0.c2))<=((vt0.c1, vt0.c2, vt0.c0))))))) ORDER BY ((((t0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))*(((vt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c0)%(vt0.c0)))) AND (((((vt0.c2, t0.c2, t0.c2))<=((vt0.c1, vt0.c2, vt0.c0))))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))*(((vt0.c1) NOTNULL))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0)%(vt0.c0)))) AND (((((vt0.c2, t0.c2, t0.c2))<=((vt0.c1, vt0.c2, vt0.c0))))))) ORDER BY ((((t0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))*(((vt0.c1) NOTNULL))) DESC;
SELECT COUNT(*) FROM t0 WHERE (CAST((t0.c2 IN ()) AS NUMERIC)) ORDER BY (((+ (t0.c2)))IS(CAST(t0.c2 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((+ (t0.c2)))IS(CAST(t0.c2 AS INTEGER))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST((t0.c2 IN ()) AS NUMERIC)) ORDER BY (((+ (t0.c2)))IS(CAST(t0.c2 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((+ (t0.c2)))IS(CAST(t0.c2 AS INTEGER))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST((t0.c2 IN ()) AS NUMERIC)) ORDER BY (((+ (t0.c2)))IS(CAST(t0.c2 AS INTEGER))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((t0.c2 COLLATE NOCASE IN (((((t0.c2)OR(t0.c2)))OR(t0.c2))))) ORDER BY ((t0.c2 COLLATE BINARY)||(((t0.c2) BETWEEN (x'') AND (t0.c2)))) DESC, CASE WHEN ((t0.c2)OR(t0.c2)) THEN ((t0.c2)/(t0.c2)) WHEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) THEN (- (t0.c2)) WHEN (NOT (t0.c2)) THEN 0.659501380431179 WHEN (t0.c2 IN ()) THEN ((t0.c2) IS TRUE) WHEN ((((t0.c2)OR(t0.c2)))AND(t0.c2)) THEN ((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(x'ca44762e')))AND(t0.c2)) ELSE TRIM(DISTINCT x'463c') END DESC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c2 COLLATE NOCASE IN (((((t0.c2)OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2 COLLATE BINARY)||(((t0.c2) BETWEEN (x'') AND (t0.c2)))) DESC, CASE WHEN ((t0.c2)OR(t0.c2)) THEN ((t0.c2)/(t0.c2)) WHEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) THEN (- (t0.c2)) WHEN (NOT (t0.c2)) THEN 0.659501380431179 WHEN (t0.c2 IN ()) THEN ((t0.c2) IS TRUE) WHEN ((((t0.c2)OR(t0.c2)))AND(t0.c2)) THEN ((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(x'ca44762e')))AND(t0.c2)) ELSE TRIM(DISTINCT x'463c') END DESC);
SELECT ALL * FROM t0 WHERE ((t0.c2 COLLATE NOCASE IN (((((t0.c2)OR(t0.c2)))OR(t0.c2))))) ORDER BY ((t0.c2 COLLATE BINARY)||(((t0.c2) BETWEEN (x'') AND (t0.c2)))) DESC, CASE WHEN ((t0.c2)OR(t0.c2)) THEN ((t0.c2)/(t0.c2)) WHEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) THEN (- (t0.c2)) WHEN (NOT (t0.c2)) THEN 0.659501380431179 WHEN (t0.c2 IN ()) THEN ((t0.c2) IS TRUE) WHEN ((((t0.c2)OR(t0.c2)))AND(t0.c2)) THEN ((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(x'ca44762e')))AND(t0.c2)) ELSE TRIM(DISTINCT x'463c') END DESC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c2 COLLATE NOCASE IN (((((t0.c2)OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2 COLLATE BINARY)||(((t0.c2) BETWEEN (x'') AND (t0.c2)))) DESC, CASE WHEN ((t0.c2)OR(t0.c2)) THEN ((t0.c2)/(t0.c2)) WHEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) THEN (- (t0.c2)) WHEN (NOT (t0.c2)) THEN 0.659501380431179 WHEN (t0.c2 IN ()) THEN ((t0.c2) IS TRUE) WHEN ((((t0.c2)OR(t0.c2)))AND(t0.c2)) THEN ((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(x'ca44762e')))AND(t0.c2)) ELSE TRIM(DISTINCT x'463c') END DESC);
SELECT ALL * FROM t0 WHERE ((t0.c2 COLLATE NOCASE IN (((((t0.c2)OR(t0.c2)))OR(t0.c2))))) ORDER BY ((t0.c2 COLLATE BINARY)||(((t0.c2) BETWEEN (x'') AND (t0.c2)))) DESC, CASE WHEN ((t0.c2)OR(t0.c2)) THEN ((t0.c2)/(t0.c2)) WHEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) THEN (- (t0.c2)) WHEN (NOT (t0.c2)) THEN 0.659501380431179 WHEN (t0.c2 IN ()) THEN ((t0.c2) IS TRUE) WHEN ((((t0.c2)OR(t0.c2)))AND(t0.c2)) THEN ((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(x'ca44762e')))AND(t0.c2)) ELSE TRIM(DISTINCT x'463c') END DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (t0.c2)))>=(((t0.c2)<=(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c2)))>=(((t0.c2)<=(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (t0.c2)))>=(((t0.c2)<=(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c2)))>=(((t0.c2)<=(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (t0.c2)))>=(((t0.c2)<=(t0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c2))*(x'e941')));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT vt0.c2))*(x'e941'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c2))*(x'e941')));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT vt0.c2))*(x'e941'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c2))*(x'e941')));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (CAST(t0.c2 AS INTEGER)))) ORDER BY (NOT (((t0.c2)!=(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (((t0.c2)!=(vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (CAST(t0.c2 AS INTEGER)))) ORDER BY (NOT (((t0.c2)!=(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (((t0.c2)!=(vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (CAST(t0.c2 AS INTEGER)))) ORDER BY (NOT (((t0.c2)!=(vt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)IS NOT(((vt0.c0) NOT NULL)))) ORDER BY ((((vt0.c0)<(vt0.c2))) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END) AND (vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)IS NOT(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c2))) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END) AND (vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)IS NOT(((vt0.c0) NOT NULL)))) ORDER BY ((((vt0.c0)<(vt0.c2))) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END) AND (vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)IS NOT(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c2))) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END) AND (vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)IS NOT(((vt0.c0) NOT NULL)))) ORDER BY ((((vt0.c0)<(vt0.c2))) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END) AND (vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((((TRIM(DISTINCT vt0.c2))AND(vt0.c0)))OR((vt0.c1 IN ())))) ORDER BY CAST(((0.07494225257174258)>(vt0.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(DISTINCT vt0.c2))AND(vt0.c0)))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY CAST(((0.07494225257174258)>(vt0.c2)) AS INTEGER));
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((((TRIM(DISTINCT vt0.c2))AND(vt0.c0)))OR((vt0.c1 IN ())))) ORDER BY CAST(((0.07494225257174258)>(vt0.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(DISTINCT vt0.c2))AND(vt0.c0)))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY CAST(((0.07494225257174258)>(vt0.c2)) AS INTEGER));
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((((TRIM(DISTINCT vt0.c2))AND(vt0.c0)))OR((vt0.c1 IN ())))) ORDER BY CAST(((0.07494225257174258)>(vt0.c2)) AS INTEGER);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((~ (t0.c2)))GLOB(CAST(t0.c2 AS BLOB)))) ORDER BY (- (((vt0.c1)=(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c2)))GLOB(CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((vt0.c1)==(t0.c2)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((~ (t0.c2)))GLOB(CAST(t0.c2 AS BLOB)))) ORDER BY (- (((vt0.c1)=(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c2)))GLOB(CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((vt0.c1)==(t0.c2)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((~ (t0.c2)))GLOB(CAST(t0.c2 AS BLOB)))) ORDER BY (- (((vt0.c1)=(t0.c2))));
SELECT * FROM vt0 INNER JOIN t0 ON (NOT ((((vt0.c2, t0.c2, '0.44458015142334806')) BETWEEN ((vt0.c2, vt0.c2, vt0.c2)) AND (('924089422', vt0.c2, vt0.c2))))) WHERE (((((((((((vt0.c1)OR(t0.c2)))AND('-1890255037')))AND(vt0.c0)))AND(vt0.c2)))/(1.781518834E9))) ORDER BY CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c2 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)OR(t0.c2)))AND('-1890255037')))AND(vt0.c0)))AND(vt0.c2)))/(1.781518834E9))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (NOT ((((vt0.c2, t0.c2, '0.44458015142334806')) BETWEEN ((vt0.c2, vt0.c2, vt0.c2)) AND (('924089422', vt0.c2, vt0.c2))))) ORDER BY CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c2 END COLLATE BINARY);
SELECT * FROM vt0 INNER JOIN t0 ON (NOT ((((vt0.c2, t0.c2, '0.44458015142334806')) BETWEEN ((vt0.c2, vt0.c2, vt0.c2)) AND (('924089422', vt0.c2, vt0.c2))))) WHERE (((((((((((vt0.c1)OR(t0.c2)))AND('-1890255037')))AND(vt0.c0)))AND(vt0.c2)))/(1.781518834E9))) ORDER BY CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c2 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)OR(t0.c2)))AND('-1890255037')))AND(vt0.c0)))AND(vt0.c2)))/(1.781518834E9))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (NOT ((((vt0.c2, t0.c2, '0.44458015142334806')) BETWEEN ((vt0.c2, vt0.c2, vt0.c2)) AND (('924089422', vt0.c2, vt0.c2))))) ORDER BY CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c2 END COLLATE BINARY);
SELECT * FROM vt0 INNER JOIN t0 ON (NOT ((((vt0.c2, t0.c2, '0.44458015142334806')) BETWEEN ((vt0.c2, vt0.c2, vt0.c2)) AND (('924089422', vt0.c2, vt0.c2))))) WHERE (((((((((((vt0.c1)OR(t0.c2)))AND('-1890255037')))AND(vt0.c0)))AND(vt0.c2)))/(1.781518834E9))) ORDER BY CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c2 END COLLATE BINARY;
SELECT ALL COUNT(*) FROM t0 WHERE (HEX(t0.c2) COLLATE RTRIM) ORDER BY ((json_type(t0.c2)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((HEX(t0.c2) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((json_type(t0.c2)) NOTNULL));
SELECT ALL COUNT(*) FROM t0 WHERE (HEX(t0.c2) COLLATE RTRIM) ORDER BY ((json_type(t0.c2)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((HEX(t0.c2) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((json_type(t0.c2)) NOTNULL));
SELECT ALL COUNT(*) FROM t0 WHERE (HEX(t0.c2) COLLATE RTRIM) ORDER BY ((json_type(t0.c2)) NOTNULL);
SELECT * FROM t0 NOT INDEXED WHERE ((((((t0.c2)AND(t0.c2)))OR(t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)AND(t0.c2)))OR(t0.c2)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 NOT INDEXED WHERE ((((((t0.c2)AND(t0.c2)))OR(t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)AND(t0.c2)))OR(t0.c2)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 NOT INDEXED WHERE ((((((t0.c2)AND(t0.c2)))OR(t0.c2)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c2) IS FALSE))) AND ((vt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c2) IS FALSE))) AND ((vt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c2) IS FALSE))) AND ((vt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c2) IS FALSE))) AND ((vt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c2) IS FALSE))) AND ((vt0.c2 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT ((+ (vt0.c1))))) ORDER BY ((x'')IS(vt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((x'')IS(vt0.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT ((+ (vt0.c1))))) ORDER BY ((x'')IS(vt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((x'')IS(vt0.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT ((+ (vt0.c1))))) ORDER BY ((x'')IS(vt0.c1)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((x'')AND(t0.c2)))AND(((((t0.c2)OR(t0.c2)))OR(t0.c2))))) ORDER BY NULL  NULLS LAST, (((- (t0.c2)))==(((t0.c2)/(t0.c2)))) ASC, t0.c2 COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(t0.c2)))AND(((((t0.c2)OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST, (((- (t0.c2)))==(((t0.c2)/(t0.c2)))) ASC, t0.c2 COLLATE NOCASE COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((x'')AND(t0.c2)))AND(((((t0.c2)OR(t0.c2)))OR(t0.c2))))) ORDER BY NULL  NULLS LAST, (((- (t0.c2)))==(((t0.c2)/(t0.c2)))) ASC, t0.c2 COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(t0.c2)))AND(((((t0.c2)OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST, (((- (t0.c2)))==(((t0.c2)/(t0.c2)))) ASC, t0.c2 COLLATE NOCASE COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((x'')AND(t0.c2)))AND(((((t0.c2)OR(t0.c2)))OR(t0.c2))))) ORDER BY NULL  NULLS LAST, (((- (t0.c2)))==(((t0.c2)/(t0.c2)))) ASC, t0.c2 COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c2 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c2  WHEN t0.c2 THEN t0.c2 END) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c2 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c2  WHEN t0.c2 THEN t0.c2 END) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c2 END) ISNULL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)AND(((vt0.c0)IS NOT(t0.c2)))))OR(((vt0.c2) NOT BETWEEN (0.23996268885200633) AND (t0.c2))))) ORDER BY CASE CAST(x'569362a3' AS REAL)  WHEN '1671669757' THEN CAST(t0.c2 AS REAL) ELSE SQLITE_COMPILEOPTION_GET(vt0.c2) END ASC;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)AND(((vt0.c0)IS NOT(t0.c2)))))OR(((vt0.c2) NOT BETWEEN (0.23996268885200633) AND (t0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE CAST(x'569362a3' AS REAL)  WHEN '1671669757' THEN CAST(t0.c2 AS REAL) ELSE SQLITE_COMPILEOPTION_GET(vt0.c2) END ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)AND(((vt0.c0)IS NOT(t0.c2)))))OR(((vt0.c2) NOT BETWEEN (0.23996268885200633) AND (t0.c2))))) ORDER BY CASE CAST(x'569362a3' AS REAL)  WHEN '1671669757' THEN CAST(t0.c2 AS REAL) ELSE SQLITE_COMPILEOPTION_GET(vt0.c2) END ASC;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)AND(((vt0.c0)IS NOT(t0.c2)))))OR(((vt0.c2) NOT BETWEEN (0.23996268885200633) AND (t0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE CAST(x'569362a3' AS REAL)  WHEN '1671669757' THEN CAST(t0.c2 AS REAL) ELSE SQLITE_COMPILEOPTION_GET(vt0.c2) END ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)AND(((vt0.c0)IS NOT(t0.c2)))))OR(((vt0.c2) NOT BETWEEN (0.23996268885200633) AND (t0.c2))))) ORDER BY CASE CAST(x'569362a3' AS REAL)  WHEN '1671669757' THEN CAST(t0.c2 AS REAL) ELSE SQLITE_COMPILEOPTION_GET(vt0.c2) END ASC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((((x'') BETWEEN (x'') AND (vt0.c1)))) AND ((((t0.c2)|(t0.c2)))))) ORDER BY CAST(vt0.c0 AS TEXT)  NULLS FIRST, (((t0.c2)) BETWEEN ((((vt0.c2)<=(vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c2 THEN NULL ELSE t0.c2 END))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN ((((x'') BETWEEN (x'') AND (vt0.c1)))) AND ((((t0.c2)|(t0.c2)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(vt0.c0 AS TEXT)  NULLS FIRST, (((t0.c2)) BETWEEN ((((vt0.c2)<=(vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c2 THEN NULL ELSE t0.c2 END))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((((x'') BETWEEN (x'') AND (vt0.c1)))) AND ((((t0.c2)|(t0.c2)))))) ORDER BY CAST(vt0.c0 AS TEXT)  NULLS FIRST, (((t0.c2)) BETWEEN ((((vt0.c2)<=(vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c2 THEN NULL ELSE t0.c2 END))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN ((((x'') BETWEEN (x'') AND (vt0.c1)))) AND ((((t0.c2)|(t0.c2)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(vt0.c0 AS TEXT)  NULLS FIRST, (((t0.c2)) BETWEEN ((((vt0.c2)<=(vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c2 THEN NULL ELSE t0.c2 END))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((((x'') BETWEEN (x'') AND (vt0.c1)))) AND ((((t0.c2)|(t0.c2)))))) ORDER BY CAST(vt0.c0 AS TEXT)  NULLS FIRST, (((t0.c2)) BETWEEN ((((vt0.c2)<=(vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c2 THEN NULL ELSE t0.c2 END))) ASC;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)) AS INTEGER));
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((vt0.c2 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((vt0.c2 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((vt0.c2 COLLATE NOCASE) NOT NULL));
SELECT * FROM t0 WHERE ((~ (0.9493257147622846)));
SELECT SUM(count) FROM (SELECT ALL (((~ (0.9493257147622846))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ (0.9493257147622846)));
SELECT SUM(count) FROM (SELECT ALL (((~ (0.9493257147622846))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ (0.9493257147622846)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)<<(vt0.c1)))OR(x'')))OR(t0.c2))) ORDER BY (- (((vt0.c1)>>(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<<(vt0.c1)))OR(x'')))OR(t0.c2))) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((vt0.c1)>>(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)<<(vt0.c1)))OR(x'')))OR(t0.c2))) ORDER BY (- (((vt0.c1)>>(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<<(vt0.c1)))OR(x'')))OR(t0.c2))) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((vt0.c1)>>(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)<<(vt0.c1)))OR(x'')))OR(t0.c2))) ORDER BY (- (((vt0.c1)>>(vt0.c1))));
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY ((TRIM(t0.c2, t0.c2)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((TRIM(t0.c2, t0.c2)) IS TRUE)  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY ((TRIM(t0.c2, t0.c2)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((TRIM(t0.c2, t0.c2)) IS TRUE)  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY ((TRIM(t0.c2, t0.c2)) IS TRUE)  NULLS LAST;
SELECT * FROM t0 WHERE (((LIKELIHOOD(DISTINCT 0.91552376673739, 0.6149997870284799)) IS FALSE)) ORDER BY (((((t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c2, t0.c2, t0.c2))))-(((t0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT 0.91552376673739, 0.6149997870284799)) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c2, t0.c2, t0.c2))))-(((t0.c2) NOTNULL)))  NULLS LAST);
SELECT * FROM t0 WHERE (((LIKELIHOOD(DISTINCT 0.91552376673739, 0.6149997870284799)) IS FALSE)) ORDER BY (((((t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c2, t0.c2, t0.c2))))-(((t0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT 0.91552376673739, 0.6149997870284799)) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c2, t0.c2, t0.c2))))-(((t0.c2) NOTNULL)))  NULLS LAST);
SELECT * FROM t0 WHERE (((LIKELIHOOD(DISTINCT 0.91552376673739, 0.6149997870284799)) IS FALSE)) ORDER BY (((((t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c2, t0.c2, t0.c2))))-(((t0.c2) NOTNULL)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(json_array_length(vt0.c1) AS NUMERIC)) ORDER BY (((vt0.c2)IS(x'')) IN (((vt0.c0)%(vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_array_length(vt0.c1) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)IS(x'')) IN (((vt0.c0)%(vt0.c2))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(json_array_length(vt0.c1) AS NUMERIC)) ORDER BY (((vt0.c2)IS(x'')) IN (((vt0.c0)%(vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_array_length(vt0.c1) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)IS(x'')) IN (((vt0.c0)%(vt0.c2))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(json_array_length(vt0.c1) AS NUMERIC)) ORDER BY (((vt0.c2)IS(x'')) IN (((vt0.c0)%(vt0.c2))))  NULLS FIRST;
SELECT * FROM t0 WHERE (UPPER(DISTINCT CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)) ORDER BY CAST('-739520930' AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)) IS TRUE)  as count FROM t0 ORDER BY CAST('-739520930' AS BLOB)  NULLS LAST);
SELECT * FROM t0 WHERE (UPPER(DISTINCT CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)) ORDER BY CAST('-739520930' AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)) IS TRUE)  as count FROM t0 ORDER BY CAST('-739520930' AS BLOB)  NULLS LAST);
SELECT * FROM t0 WHERE (UPPER(DISTINCT CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)) ORDER BY CAST('-739520930' AS BLOB)  NULLS LAST;
SELECT * FROM t0 WHERE ((t0.c2 IN ()) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((t0.c2 IN ()) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((t0.c2 IN ()) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((t0.c2 IN ()) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((t0.c2 IN ()) COLLATE NOCASE COLLATE RTRIM);
SELECT * FROM t0, vt0 WHERE (TYPEOF(DISTINCT ((1.566857625E9) NOTNULL))) ORDER BY vt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((1.566857625E9) NOTNULL))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c2  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (TYPEOF(DISTINCT ((1.566857625E9) NOTNULL))) ORDER BY vt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((1.566857625E9) NOTNULL))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c2  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (TYPEOF(DISTINCT ((1.566857625E9) NOTNULL))) ORDER BY vt0.c2  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((('269988366') IS TRUE)) ORDER BY (CAST(t0.c2 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT (((('269988366') IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c2 AS BLOB) IN ()));
SELECT ALL * FROM t0 WHERE ((('269988366') IS TRUE)) ORDER BY (CAST(t0.c2 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT (((('269988366') IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c2 AS BLOB) IN ()));
SELECT ALL * FROM t0 WHERE ((('269988366') IS TRUE)) ORDER BY (CAST(t0.c2 AS BLOB) IN ());
SELECT * FROM t0 WHERE ((NOT (CASE WHEN t0.c2 THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN t0.c2 THEN t0.c2 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (CASE WHEN t0.c2 THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN t0.c2 THEN t0.c2 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (CASE WHEN t0.c2 THEN t0.c2 END)));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON ((TRIM(vt0.c0))!=(vt0.c1 COLLATE RTRIM)) WHERE (((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((TRIM(vt0.c0))!=(vt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON ((TRIM(vt0.c0))!=(vt0.c1 COLLATE RTRIM)) WHERE (((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((TRIM(vt0.c0))!=(vt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON ((TRIM(vt0.c0))!=(vt0.c1 COLLATE RTRIM)) WHERE (((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (t0.c2) AND (vt0.c1)) THEN (~ (vt0.c1)) END) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) BETWEEN (t0.c2) AND (vt0.c1)) THEN (~ (vt0.c1)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (t0.c2) AND (vt0.c1)) THEN (~ (vt0.c1)) END) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) BETWEEN (t0.c2) AND (vt0.c1)) THEN (~ (vt0.c1)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (t0.c2) AND (vt0.c1)) THEN (~ (vt0.c1)) END) ORDER BY NULL ASC;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE BINARY);
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE (CASE WHEN t0.c2 COLLATE RTRIM THEN (((vt0.c2))<=((vt0.c2))) END) ORDER BY SUBSTR(((vt0.c2)IS(0.497190949479542)), ((t0.c2) BETWEEN (vt0.c2) AND (vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c2 COLLATE RTRIM THEN (((vt0.c2))<=((vt0.c2))) END) IS TRUE)  as count FROM vt0, t0 ORDER BY SUBSTR(((vt0.c2)IS(0.497190949479542)), ((t0.c2) BETWEEN (vt0.c2) AND (vt0.c2))));
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE (CASE WHEN t0.c2 COLLATE RTRIM THEN (((vt0.c2))<=((vt0.c2))) END) ORDER BY SUBSTR(((vt0.c2)IS(0.497190949479542)), ((t0.c2) BETWEEN (vt0.c2) AND (vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c2 COLLATE RTRIM THEN (((vt0.c2))<=((vt0.c2))) END) IS TRUE)  as count FROM vt0, t0 ORDER BY SUBSTR(((vt0.c2)IS(0.497190949479542)), ((t0.c2) BETWEEN (vt0.c2) AND (vt0.c2))));
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE (CASE WHEN t0.c2 COLLATE RTRIM THEN (((vt0.c2))<=((vt0.c2))) END) ORDER BY SUBSTR(((vt0.c2)IS(0.497190949479542)), ((t0.c2) BETWEEN (vt0.c2) AND (vt0.c2)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((+ (vt0.c2 COLLATE BINARY))) ORDER BY ((((vt0.c2)<(vt0.c1))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c2)<(vt0.c1))) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((+ (vt0.c2 COLLATE BINARY))) ORDER BY ((((vt0.c2)<(vt0.c1))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c2)<(vt0.c1))) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((+ (vt0.c2 COLLATE BINARY))) ORDER BY ((((vt0.c2)<(vt0.c1))) IS TRUE) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((+ (''))) AND (((vt0.c0)|(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN ((+ (''))) AND (((vt0.c0)|(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((+ (''))) AND (((vt0.c0)|(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN ((+ (''))) AND (((vt0.c0)|(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((+ (''))) AND (((vt0.c0)|(vt0.c1)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c2)<(t0.c2)))) AND ((vt0.c1)))) ORDER BY (vt0.c0 COLLATE RTRIM IN ((- (t0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((t0.c2)<(t0.c2)))) AND ((vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (vt0.c0 COLLATE RTRIM IN ((- (t0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c2)<(t0.c2)))) AND ((vt0.c1)))) ORDER BY (vt0.c0 COLLATE RTRIM IN ((- (t0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((t0.c2)<(t0.c2)))) AND ((vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (vt0.c0 COLLATE RTRIM IN ((- (t0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c2)<(t0.c2)))) AND ((vt0.c1)))) ORDER BY (vt0.c0 COLLATE RTRIM IN ((- (t0.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 INDEXED BY i6 CROSS JOIN vt0 ON ((((vt0.c1) IS TRUE))IS NOT(t0.c2 COLLATE NOCASE)) WHERE ((((CAST(vt0.c2 AS NUMERIC)))==((((vt0.c0) IS TRUE))))) ORDER BY (+ (vt0.c1)) COLLATE NOCASE, ((((t0.c2)GLOB(t0.c2)))OR(CAST(t0.c2 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c2 AS NUMERIC)))==((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM t0 INDEXED BY i6 CROSS JOIN vt0 ON ((((vt0.c1) IS TRUE))IS NOT(t0.c2 COLLATE NOCASE)) ORDER BY (+ (vt0.c1)) COLLATE NOCASE, ((((t0.c2)GLOB(t0.c2)))OR(CAST(t0.c2 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM t0 INDEXED BY i6 CROSS JOIN vt0 ON ((((vt0.c1) IS TRUE))IS NOT(t0.c2 COLLATE NOCASE)) WHERE ((((CAST(vt0.c2 AS NUMERIC)))==((((vt0.c0) IS TRUE))))) ORDER BY (+ (vt0.c1)) COLLATE NOCASE, ((((t0.c2)GLOB(t0.c2)))OR(CAST(t0.c2 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c2 AS NUMERIC)))==((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM t0 INDEXED BY i6 CROSS JOIN vt0 ON ((((vt0.c1) IS TRUE))IS NOT(t0.c2 COLLATE NOCASE)) ORDER BY (+ (vt0.c1)) COLLATE NOCASE, ((((t0.c2)GLOB(t0.c2)))OR(CAST(t0.c2 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM t0 INDEXED BY i6 CROSS JOIN vt0 ON ((((vt0.c1) IS TRUE))IS NOT(t0.c2 COLLATE NOCASE)) WHERE ((((CAST(vt0.c2 AS NUMERIC)))==((((vt0.c0) IS TRUE))))) ORDER BY (+ (vt0.c1)) COLLATE NOCASE, ((((t0.c2)GLOB(t0.c2)))OR(CAST(t0.c2 AS BLOB)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c2)))AND(vt0.c0)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c2)))AND(vt0.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c2)))AND(vt0.c0)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c2)))AND(vt0.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c2)))AND(vt0.c0)) COLLATE BINARY COLLATE BINARY);
SELECT * FROM t0 CROSS JOIN vt0 ON (((((vt0.c0) IS FALSE)))>((CASE vt0.c1  WHEN t0.c2 THEN vt0.c2 ELSE t0.c2 END))) WHERE ((('-1252040875')>=(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((('-1252040875')>=(vt0.c1))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((vt0.c0) IS FALSE)))>((CASE vt0.c1  WHEN t0.c2 THEN vt0.c2 ELSE t0.c2 END))));
SELECT * FROM t0 CROSS JOIN vt0 ON (((((vt0.c0) IS FALSE)))>((CASE vt0.c1  WHEN t0.c2 THEN vt0.c2 ELSE t0.c2 END))) WHERE ((('-1252040875')>=(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((('-1252040875')>=(vt0.c1))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((vt0.c0) IS FALSE)))>((CASE vt0.c1  WHEN t0.c2 THEN vt0.c2 ELSE t0.c2 END))));
SELECT * FROM t0 CROSS JOIN vt0 ON (((((vt0.c0) IS FALSE)))>((CASE vt0.c1  WHEN t0.c2 THEN vt0.c2 ELSE t0.c2 END))) WHERE ((('-1252040875')>=(vt0.c1)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY LIKELIHOOD((NOT (vt0.c1)), 0.906862127216985);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD((NOT (vt0.c1)), 0.906862127216985));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY LIKELIHOOD((NOT (vt0.c1)), 0.906862127216985);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD((NOT (vt0.c1)), 0.906862127216985));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY LIKELIHOOD((NOT (vt0.c1)), 0.906862127216985);
SELECT * FROM t0 WHERE (MIN(RTRIM(t0.c2), ((t0.c2)OR(t0.c2)), COALESCE(t0.c2, t0.c2), ((t0.c2)OR(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(RTRIM(t0.c2), ((t0.c2)OR(t0.c2)), COALESCE(t0.c2, t0.c2), ((t0.c2)OR(t0.c2)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (MIN(RTRIM(t0.c2), ((t0.c2)OR(t0.c2)), COALESCE(t0.c2, t0.c2), ((t0.c2)OR(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(RTRIM(t0.c2), ((t0.c2)OR(t0.c2)), COALESCE(t0.c2, t0.c2), ((t0.c2)OR(t0.c2)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (MIN(RTRIM(t0.c2), ((t0.c2)OR(t0.c2)), COALESCE(t0.c2, t0.c2), ((t0.c2)OR(t0.c2))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, ((vt0.c1)/(vt0.c2)), CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'1052b9c8' END)) AND ((((vt0.c0)|(vt0.c0)), '>蜜', (vt0.c1 IN ()))))) ORDER BY (NOT ((- (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, ((vt0.c1)/(vt0.c2)), CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'1052b9c8' END)) AND ((((vt0.c0)|(vt0.c0)), '>蜜', (vt0.c1 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((- (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, ((vt0.c1)/(vt0.c2)), CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'1052b9c8' END)) AND ((((vt0.c0)|(vt0.c0)), '>蜜', (vt0.c1 IN ()))))) ORDER BY (NOT ((- (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, ((vt0.c1)/(vt0.c2)), CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'1052b9c8' END)) AND ((((vt0.c0)|(vt0.c0)), '>蜜', (vt0.c1 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((- (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, ((vt0.c1)/(vt0.c2)), CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'1052b9c8' END)) AND ((((vt0.c0)|(vt0.c0)), '>蜜', (vt0.c1 IN ()))))) ORDER BY (NOT ((- (vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((NULLIF(DISTINCT t0.c2, -1e500))AND(((vt0.c2) NOT BETWEEN (t0.c2) AND (vt0.c2)))))OR(((t0.c2) ISNULL))))OR(-582579207)))AND(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((NULLIF(DISTINCT t0.c2, -1e500))AND(((vt0.c2) NOT BETWEEN (t0.c2) AND (vt0.c2)))))OR(((t0.c2) ISNULL))))OR(-582579207)))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((NULLIF(DISTINCT t0.c2, -1e500))AND(((vt0.c2) NOT BETWEEN (t0.c2) AND (vt0.c2)))))OR(((t0.c2) ISNULL))))OR(-582579207)))AND(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((NULLIF(DISTINCT t0.c2, -1e500))AND(((vt0.c2) NOT BETWEEN (t0.c2) AND (vt0.c2)))))OR(((t0.c2) ISNULL))))OR(-582579207)))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((NULLIF(DISTINCT t0.c2, -1e500))AND(((vt0.c2) NOT BETWEEN (t0.c2) AND (vt0.c2)))))OR(((t0.c2) ISNULL))))OR(-582579207)))AND(CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c2 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c2 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c2 COLLATE BINARY) NOTNULL));
SELECT ALL * FROM t0 WHERE (CASE WHEN t0.c2 COLLATE RTRIM THEN (t0.c2 IN (t0.c2, t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c2 COLLATE RTRIM THEN (t0.c2 IN (t0.c2, t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN t0.c2 COLLATE RTRIM THEN (t0.c2 IN (t0.c2, t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c2 COLLATE RTRIM THEN (t0.c2 IN (t0.c2, t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN t0.c2 COLLATE RTRIM THEN (t0.c2 IN (t0.c2, t0.c2)) END);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE WHEN CASE WHEN vt0.c2 THEN vt0.c0 ELSE t0.c2 END THEN LIKELIHOOD(vt0.c0, 0.3235979200307675) WHEN ((vt0.c0)IS(t0.c2)) THEN CAST(vt0.c2 AS TEXT) WHEN vt0.c2 THEN vt0.c0 END WHERE (((NULL)<((((vt0.c1))!=((vt0.c2)))))) ORDER BY ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<((((vt0.c1))!=((vt0.c2)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE WHEN CASE WHEN vt0.c2 THEN vt0.c0 ELSE t0.c2 END THEN LIKELIHOOD(vt0.c0, 0.3235979200307675) WHEN ((vt0.c0)IS(t0.c2)) THEN CAST(vt0.c2 AS TEXT) WHEN vt0.c2 THEN vt0.c0 END ORDER BY ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE WHEN CASE WHEN vt0.c2 THEN vt0.c0 ELSE t0.c2 END THEN LIKELIHOOD(vt0.c0, 0.3235979200307675) WHEN ((vt0.c0)IS(t0.c2)) THEN CAST(vt0.c2 AS TEXT) WHEN vt0.c2 THEN vt0.c0 END WHERE (((NULL)<((((vt0.c1))!=((vt0.c2)))))) ORDER BY ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<((((vt0.c1))!=((vt0.c2)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE WHEN CASE WHEN vt0.c2 THEN vt0.c0 ELSE t0.c2 END THEN LIKELIHOOD(vt0.c0, 0.3235979200307675) WHEN ((vt0.c0)IS(t0.c2)) THEN CAST(vt0.c2 AS TEXT) WHEN vt0.c2 THEN vt0.c0 END ORDER BY ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE WHEN CASE WHEN vt0.c2 THEN vt0.c0 ELSE t0.c2 END THEN LIKELIHOOD(vt0.c0, 0.3235979200307675) WHEN ((vt0.c0)IS(t0.c2)) THEN CAST(vt0.c2 AS TEXT) WHEN vt0.c2 THEN vt0.c0 END WHERE (((NULL)<((((vt0.c1))!=((vt0.c2)))))) ORDER BY ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END) NOTNULL);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2) ISNULL)) ORDER BY ((x'6702') BETWEEN (((t0.c2)AND(t0.c2))) AND (t0.c2 COLLATE RTRIM))  NULLS LAST, (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((x'6702') BETWEEN (((t0.c2)AND(t0.c2))) AND (t0.c2 COLLATE RTRIM))  NULLS LAST, (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2) ISNULL)) ORDER BY ((x'6702') BETWEEN (((t0.c2)AND(t0.c2))) AND (t0.c2 COLLATE RTRIM))  NULLS LAST, (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((x'6702') BETWEEN (((t0.c2)AND(t0.c2))) AND (t0.c2 COLLATE RTRIM))  NULLS LAST, (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2) ISNULL)) ORDER BY ((x'6702') BETWEEN (((t0.c2)AND(t0.c2))) AND (t0.c2 COLLATE RTRIM))  NULLS LAST, (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) IN ());
SELECT * FROM vt0, t0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT * FROM t0 WHERE (((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) IN (CAST(t0.c2 AS NUMERIC), t0.c2 COLLATE NOCASE))) ORDER BY LAST_INSERT_ROWID() COLLATE NOCASE, t0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) IN (CAST(t0.c2 AS NUMERIC), t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY LAST_INSERT_ROWID() COLLATE NOCASE, t0.c2 ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) IN (CAST(t0.c2 AS NUMERIC), t0.c2 COLLATE NOCASE))) ORDER BY LAST_INSERT_ROWID() COLLATE NOCASE, t0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) IN (CAST(t0.c2 AS NUMERIC), t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY LAST_INSERT_ROWID() COLLATE NOCASE, t0.c2 ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) IN (CAST(t0.c2 AS NUMERIC), t0.c2 COLLATE NOCASE))) ORDER BY LAST_INSERT_ROWID() COLLATE NOCASE, t0.c2 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((t0.c2))>=((vt0.c0))))&(CASE t0.c2  WHEN vt0.c2 THEN t0.c2 END))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((((((t0.c2))>=((vt0.c0))))&(CASE t0.c2  WHEN vt0.c2 THEN t0.c2 END))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((t0.c2))>=((vt0.c0))))&(CASE t0.c2  WHEN vt0.c2 THEN t0.c2 END))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((((((t0.c2))>=((vt0.c0))))&(CASE t0.c2  WHEN vt0.c2 THEN t0.c2 END))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((t0.c2))>=((vt0.c0))))&(CASE t0.c2  WHEN vt0.c2 THEN t0.c2 END))) ORDER BY x'' DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c1))=((t0.c2)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))=((t0.c2)))) NOT NULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c1))=((t0.c2)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))=((t0.c2)))) NOT NULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c1))=((t0.c2)))) NOT NULL));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)GLOB(vt0.c2))))=(((vt0.c2 IN (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)GLOB(vt0.c2))))=(((vt0.c2 IN (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)GLOB(vt0.c2))))=(((vt0.c2 IN (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)GLOB(vt0.c2))))=(((vt0.c2 IN (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)GLOB(vt0.c2))))=(((vt0.c2 IN (vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ORDER BY ((((vt0.c0) IS FALSE))+((- (vt0.c2)))), vt0.c2  NULLS LAST, ((((vt0.c0)LIKE(vt0.c2)))|(vt0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE))+((- (vt0.c2)))), vt0.c2  NULLS LAST, ((((vt0.c0)LIKE(vt0.c2)))|(vt0.c1 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ORDER BY ((((vt0.c0) IS FALSE))+((- (vt0.c2)))), vt0.c2  NULLS LAST, ((((vt0.c0)LIKE(vt0.c2)))|(vt0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE))+((- (vt0.c2)))), vt0.c2  NULLS LAST, ((((vt0.c0)LIKE(vt0.c2)))|(vt0.c1 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ORDER BY ((((vt0.c0) IS FALSE))+((- (vt0.c2)))), vt0.c2  NULLS LAST, ((((vt0.c0)LIKE(vt0.c2)))|(vt0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c2) NOTNULL))||(((((((((vt0.c0)AND(vt0.c2)))OR(t0.c2)))OR(vt0.c1)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOTNULL))||(((((((((vt0.c0)AND(vt0.c2)))OR(t0.c2)))OR(vt0.c1)))OR(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c2) NOTNULL))||(((((((((vt0.c0)AND(vt0.c2)))OR(t0.c2)))OR(vt0.c1)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOTNULL))||(((((((((vt0.c0)AND(vt0.c2)))OR(t0.c2)))OR(vt0.c1)))OR(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c2) NOTNULL))||(((((((((vt0.c0)AND(vt0.c2)))OR(t0.c2)))OR(vt0.c1)))OR(t0.c2)))));
SELECT ALL * FROM t0 WHERE ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) IN ())) ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 END) NOT BETWEEN ('-125377992') AND (t0.c2));
SELECT SUM(count) FROM (SELECT (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 END) NOT BETWEEN ('-125377992') AND (t0.c2)));
SELECT ALL * FROM t0 WHERE ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) IN ())) ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 END) NOT BETWEEN ('-125377992') AND (t0.c2));
SELECT SUM(count) FROM (SELECT (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 END) NOT BETWEEN ('-125377992') AND (t0.c2)));
SELECT ALL * FROM t0 WHERE ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) IN ())) ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 END) NOT BETWEEN ('-125377992') AND (t0.c2));
SELECT * FROM vt0 INDEXED BY i6 WHERE (((((((vt0.c2)*(0.6013838553135664)))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) ORDER BY ((((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c2))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)*(0.6013838553135664)))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt0 INDEXED BY i6 ORDER BY ((((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c2))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2)))) ASC  NULLS LAST);
SELECT * FROM vt0 INDEXED BY i6 WHERE (((((((vt0.c2)*(0.6013838553135664)))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) ORDER BY ((((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c2))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)*(0.6013838553135664)))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt0 INDEXED BY i6 ORDER BY ((((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c2))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c2)LIKE(vt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)LIKE(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c2)LIKE(vt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)LIKE(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c2)LIKE(vt0.c2)) IN ()));
SELECT ALL * FROM t0 NOT INDEXED, vt0 WHERE (((0.7834295154435732)/(0.02693154909338391))) ORDER BY CASE ((vt0.c0)LIKE(vt0.c2))  WHEN ((t0.c2) ISNULL) THEN (((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c2))) END DESC  NULLS LAST, CASE WHEN CAST(vt0.c0 AS REAL) THEN (vt0.c0 IN (t0.c2)) ELSE 'Hv4I!aX	' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.7834295154435732)/(0.02693154909338391))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE ((vt0.c0)LIKE(vt0.c2))  WHEN ((t0.c2) ISNULL) THEN (((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c2))) END DESC  NULLS LAST, CASE WHEN CAST(vt0.c0 AS REAL) THEN (vt0.c0 IN (t0.c2)) ELSE 'Hv4I!aX	' END DESC);
SELECT ALL * FROM t0 NOT INDEXED, vt0 WHERE (((0.7834295154435732)/(0.02693154909338391))) ORDER BY CASE ((vt0.c0)LIKE(vt0.c2))  WHEN ((t0.c2) ISNULL) THEN (((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c2))) END DESC  NULLS LAST, CASE WHEN CAST(vt0.c0 AS REAL) THEN (vt0.c0 IN (t0.c2)) ELSE 'Hv4I!aX	' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.7834295154435732)/(0.02693154909338391))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE ((vt0.c0)LIKE(vt0.c2))  WHEN ((t0.c2) ISNULL) THEN (((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c2))) END DESC  NULLS LAST, CASE WHEN CAST(vt0.c0 AS REAL) THEN (vt0.c0 IN (t0.c2)) ELSE 'Hv4I!aX	' END DESC);
SELECT ALL * FROM t0 NOT INDEXED, vt0 WHERE (((0.7834295154435732)/(0.02693154909338391))) ORDER BY CASE ((vt0.c0)LIKE(vt0.c2))  WHEN ((t0.c2) ISNULL) THEN (((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c2))) END DESC  NULLS LAST, CASE WHEN CAST(vt0.c0 AS REAL) THEN (vt0.c0 IN (t0.c2)) ELSE 'Hv4I!aX	' END DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c2) NOTNULL)) NOT NULL)) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c2) NOTNULL)) NOT NULL)) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c2) NOTNULL)) NOT NULL)) ORDER BY vt0.c1  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((~ (COALESCE(vt0.c2, vt0.c0)))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT (((~ (COALESCE(vt0.c2, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c1 END)) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((~ (COALESCE(vt0.c2, vt0.c0)))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT (((~ (COALESCE(vt0.c2, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c1 END)) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((~ (COALESCE(vt0.c2, vt0.c0)))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c1 END)) ASC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LIKELY(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))) ORDER BY (((vt0.c2)) BETWEEN (((NOT (vt0.c0)))) AND ((NULLIF(DISTINCT vt0.c0, t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c2)) BETWEEN (((NOT (vt0.c0)))) AND ((NULLIF(DISTINCT vt0.c0, t0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LIKELY(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))) ORDER BY (((vt0.c2)) BETWEEN (((NOT (vt0.c0)))) AND ((NULLIF(DISTINCT vt0.c0, t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c2)) BETWEEN (((NOT (vt0.c0)))) AND ((NULLIF(DISTINCT vt0.c0, t0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LIKELY(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))) ORDER BY (((vt0.c2)) BETWEEN (((NOT (vt0.c0)))) AND ((NULLIF(DISTINCT vt0.c0, t0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)*((((vt0.c1, vt0.c1, vt0.c2, vt0.c2, vt0.c1))>=((vt0.c2, vt0.c2, vt0.c1, vt0.c0, vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)*((((vt0.c1, vt0.c1, vt0.c2, vt0.c2, vt0.c1))>=((vt0.c2, vt0.c2, vt0.c1, vt0.c0, vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)*((((vt0.c1, vt0.c1, vt0.c2, vt0.c2, vt0.c1))>=((vt0.c2, vt0.c2, vt0.c1, vt0.c0, vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)*((((vt0.c1, vt0.c1, vt0.c2, vt0.c2, vt0.c1))>=((vt0.c2, vt0.c2, vt0.c1, vt0.c0, vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)*((((vt0.c1, vt0.c1, vt0.c2, vt0.c2, vt0.c1))>=((vt0.c2, vt0.c2, vt0.c1, vt0.c0, vt0.c2))))));
SELECT * FROM t0 WHERE (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN NULL THEN t0.c2 END COLLATE RTRIM) ORDER BY (- (((t0.c2)<=(t0.c2)))), ((t0.c2)IS(((((t0.c2)AND(t0.c2)))OR(t0.c2)))) DESC  NULLS LAST, UNLIKELY(CASE t0.c2  WHEN t0.c2 THEN x'' ELSE t0.c2 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN NULL THEN t0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c2)<=(t0.c2)))), ((t0.c2)IS(((((t0.c2)AND(t0.c2)))OR(t0.c2)))) DESC  NULLS LAST, UNLIKELY(CASE t0.c2  WHEN t0.c2 THEN x'' ELSE t0.c2 END)  NULLS LAST);
SELECT * FROM t0 WHERE (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN NULL THEN t0.c2 END COLLATE RTRIM) ORDER BY (- (((t0.c2)<=(t0.c2)))), ((t0.c2)IS(((((t0.c2)AND(t0.c2)))OR(t0.c2)))) DESC  NULLS LAST, UNLIKELY(CASE t0.c2  WHEN t0.c2 THEN x'' ELSE t0.c2 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN NULL THEN t0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c2)<=(t0.c2)))), ((t0.c2)IS(((((t0.c2)AND(t0.c2)))OR(t0.c2)))) DESC  NULLS LAST, UNLIKELY(CASE t0.c2  WHEN t0.c2 THEN x'' ELSE t0.c2 END)  NULLS LAST);
SELECT * FROM t0 WHERE (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN NULL THEN t0.c2 END COLLATE RTRIM) ORDER BY (- (((t0.c2)<=(t0.c2)))), ((t0.c2)IS(((((t0.c2)AND(t0.c2)))OR(t0.c2)))) DESC  NULLS LAST, UNLIKELY(CASE t0.c2  WHEN t0.c2 THEN x'' ELSE t0.c2 END)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 END  WHEN vt0.c1 THEN x'' ELSE (0.17515143408573897 IN (vt0.c1)) END) ORDER BY ((~ (vt0.c0)) IN (vt0.c2));
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 END  WHEN vt0.c1 THEN x'' ELSE (0.17515143408573897 IN (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c0)) IN (vt0.c2)));
SELECT COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 END  WHEN vt0.c1 THEN x'' ELSE (0.17515143408573897 IN (vt0.c1)) END) ORDER BY ((~ (vt0.c0)) IN (vt0.c2));
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 END  WHEN vt0.c1 THEN x'' ELSE (0.17515143408573897 IN (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c0)) IN (vt0.c2)));
SELECT COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 END  WHEN vt0.c1 THEN x'' ELSE (0.17515143408573897 IN (vt0.c1)) END) ORDER BY ((~ (vt0.c0)) IN (vt0.c2));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LTRIM((NOT (vt0.c2)), ((t0.c2)%('d繣?\n	^y6'))));
SELECT SUM(count) FROM (SELECT ((LTRIM((NOT (vt0.c2)), ((t0.c2)%('d繣?\n	^y6')))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LTRIM((NOT (vt0.c2)), ((t0.c2)%('d繣?\n	^y6'))));
SELECT SUM(count) FROM (SELECT ((LTRIM((NOT (vt0.c2)), ((t0.c2)%('d繣?\n	^y6')))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LTRIM((NOT (vt0.c2)), ((t0.c2)%('d繣?\n	^y6'))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((t0.c2)))))>((((vt0.c0)&(0.19471477778569468)))))) ORDER BY TRIM((((t0.c2)) BETWEEN ((t0.c2)) AND (('-1771024836'))), 'Au}w/uD9');
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((t0.c2)))))>((((vt0.c0)&(0.19471477778569468)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY TRIM((((t0.c2)) BETWEEN ((t0.c2)) AND (('-1771024836'))), 'Au}w/uD9'));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((t0.c2)))))>((((vt0.c0)&(0.19471477778569468)))))) ORDER BY TRIM((((t0.c2)) BETWEEN ((t0.c2)) AND (('-1771024836'))), 'Au}w/uD9');
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((t0.c2)))))>((((vt0.c0)&(0.19471477778569468)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY TRIM((((t0.c2)) BETWEEN ((t0.c2)) AND (('-1771024836'))), 'Au}w/uD9'));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((t0.c2)))))>((((vt0.c0)&(0.19471477778569468)))))) ORDER BY TRIM((((t0.c2)) BETWEEN ((t0.c2)) AND (('-1771024836'))), 'Au}w/uD9');
SELECT COUNT(*) FROM t0, vt0 WHERE ((((0.3638684504638563))>=((((t0.c2) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((0.3638684504638563))>=((((t0.c2) NOT NULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((0.3638684504638563))>=((((t0.c2) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((0.3638684504638563))>=((((t0.c2) NOT NULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((0.3638684504638563))>=((((t0.c2) NOT NULL)))));
SELECT ALL * FROM t0 WHERE (((1689711758 IN ()) IN ())) ORDER BY (((((t0.c2)AND(t0.c2)))AND(NULL)) IN ())  NULLS LAST, CAST(t0.c2 AS REAL) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((1689711758 IN ()) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c2)AND(t0.c2)))AND(NULL)) IN ())  NULLS LAST, CAST(t0.c2 AS REAL) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((1689711758 IN ()) IN ())) ORDER BY (((((t0.c2)AND(t0.c2)))AND(NULL)) IN ())  NULLS LAST, CAST(t0.c2 AS REAL) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((1689711758 IN ()) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c2)AND(t0.c2)))AND(NULL)) IN ())  NULLS LAST, CAST(t0.c2 AS REAL) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((1689711758 IN ()) IN ())) ORDER BY (((((t0.c2)AND(t0.c2)))AND(NULL)) IN ())  NULLS LAST, CAST(t0.c2 AS REAL) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CAST(x'' AS BLOB) WHERE (CASE '670995089'  WHEN (((t0.c2, NULL, t0.c2)) NOT BETWEEN ((vt0.c2, vt0.c2, t0.c2)) AND ((t0.c2, 0Xffffffffa0103f88, NULL))) THEN x'ed432182' END) ORDER BY CASE WHEN (- (vt0.c1)) THEN vt0.c0 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ((CASE '670995089'  WHEN (((t0.c2, NULL, t0.c2)) NOT BETWEEN ((vt0.c2, vt0.c2, t0.c2)) AND ((t0.c2, 0xffffffffa0103f88, NULL))) THEN x'ed432182' END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST(x'' AS BLOB) ORDER BY CASE WHEN (- (vt0.c1)) THEN vt0.c0 COLLATE BINARY END ASC);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CAST(x'' AS BLOB) WHERE (CASE '670995089'  WHEN (((t0.c2, NULL, t0.c2)) NOT BETWEEN ((vt0.c2, vt0.c2, t0.c2)) AND ((t0.c2, 0Xffffffffa0103f88, NULL))) THEN x'ed432182' END) ORDER BY CASE WHEN (- (vt0.c1)) THEN vt0.c0 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ((CASE '670995089'  WHEN (((t0.c2, NULL, t0.c2)) NOT BETWEEN ((vt0.c2, vt0.c2, t0.c2)) AND ((t0.c2, 0xffffffffa0103f88, NULL))) THEN x'ed432182' END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST(x'' AS BLOB) ORDER BY CASE WHEN (- (vt0.c1)) THEN vt0.c0 COLLATE BINARY END ASC);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CAST(x'' AS BLOB) WHERE (CASE '670995089'  WHEN (((t0.c2, NULL, t0.c2)) NOT BETWEEN ((vt0.c2, vt0.c2, t0.c2)) AND ((t0.c2, 0Xffffffffa0103f88, NULL))) THEN x'ed432182' END) ORDER BY CASE WHEN (- (vt0.c1)) THEN vt0.c0 COLLATE BINARY END ASC;
SELECT COUNT(*) FROM t0, vt0 WHERE ('f\n');
SELECT SUM(count) FROM (SELECT (('f\n') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ('f\n');
SELECT SUM(count) FROM (SELECT (('f\n') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ('f\n');
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((vt0.c0 IN ()));
SELECT ALL * FROM vt0 WHERE ((('1346455901' COLLATE NOCASE)AND(((vt0.c0) BETWEEN (x'') AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('1346455901' COLLATE NOCASE)AND(((vt0.c0) BETWEEN (x'') AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('1346455901' COLLATE NOCASE)AND(((vt0.c0) BETWEEN (x'') AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('1346455901' COLLATE NOCASE)AND(((vt0.c0) BETWEEN (x'') AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('1346455901' COLLATE NOCASE)AND(((vt0.c0) BETWEEN (x'') AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c2 AS REAL)) ORDER BY CASE ((((t0.c2)AND(0.6087836265873795)))AND(t0.c2))  WHEN (t0.c2 IN (t0.c2)) THEN (+ (t0.c2)) ELSE t0.c2 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 AS REAL)) IS TRUE)  as count FROM t0 ORDER BY CASE ((((t0.c2)AND(0.6087836265873795)))AND(t0.c2))  WHEN (t0.c2 IN (t0.c2)) THEN (+ (t0.c2)) ELSE t0.c2 COLLATE RTRIM END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c2 AS REAL)) ORDER BY CASE ((((t0.c2)AND(0.6087836265873795)))AND(t0.c2))  WHEN (t0.c2 IN (t0.c2)) THEN (+ (t0.c2)) ELSE t0.c2 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 AS REAL)) IS TRUE)  as count FROM t0 ORDER BY CASE ((((t0.c2)AND(0.6087836265873795)))AND(t0.c2))  WHEN (t0.c2 IN (t0.c2)) THEN (+ (t0.c2)) ELSE t0.c2 COLLATE RTRIM END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c2 AS REAL)) ORDER BY CASE ((((t0.c2)AND(0.6087836265873795)))AND(t0.c2))  WHEN (t0.c2 IN (t0.c2)) THEN (+ (t0.c2)) ELSE t0.c2 COLLATE RTRIM END ASC;
SELECT ALL * FROM vt0 WHERE (CASE CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END  WHEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 END THEN (((vt0.c0, vt0.c1, vt0.c2))<=((vt0.c1, vt0.c1, vt0.c2))) END) ORDER BY INSTR(CAST(vt0.c2 AS INTEGER), 0.06197736102139839) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END  WHEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 END THEN (((vt0.c0, vt0.c1, vt0.c2))<=((vt0.c1, vt0.c1, vt0.c2))) END) IS TRUE)  as count FROM vt0 ORDER BY INSTR(CAST(vt0.c2 AS INTEGER), 0.06197736102139839) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END  WHEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 END THEN (((vt0.c0, vt0.c1, vt0.c2))<=((vt0.c1, vt0.c1, vt0.c2))) END) ORDER BY INSTR(CAST(vt0.c2 AS INTEGER), 0.06197736102139839) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END  WHEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 END THEN (((vt0.c0, vt0.c1, vt0.c2))<=((vt0.c1, vt0.c1, vt0.c2))) END) IS TRUE)  as count FROM vt0 ORDER BY INSTR(CAST(vt0.c2 AS INTEGER), 0.06197736102139839) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END  WHEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 END THEN (((vt0.c0, vt0.c1, vt0.c2))<=((vt0.c1, vt0.c1, vt0.c2))) END) ORDER BY INSTR(CAST(vt0.c2 AS INTEGER), 0.06197736102139839) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)||((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)||((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)||((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)||((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)||((vt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CAST((+ (vt0.c2)) AS NUMERIC) WHERE (vt0.c1) ORDER BY (((t0.c2 IN ())) BETWEEN (((t0.c2) NOTNULL)) AND ((vt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CAST((+ (vt0.c2)) AS NUMERIC) ORDER BY (((t0.c2 IN ())) BETWEEN (((t0.c2) NOTNULL)) AND ((vt0.c2 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CAST((+ (vt0.c2)) AS NUMERIC) WHERE (vt0.c1) ORDER BY (((t0.c2 IN ())) BETWEEN (((t0.c2) NOTNULL)) AND ((vt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CAST((+ (vt0.c2)) AS NUMERIC) ORDER BY (((t0.c2 IN ())) BETWEEN (((t0.c2) NOTNULL)) AND ((vt0.c2 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CAST((+ (vt0.c2)) AS NUMERIC) WHERE (vt0.c1) ORDER BY (((t0.c2 IN ())) BETWEEN (((t0.c2) NOTNULL)) AND ((vt0.c2 IN ()))) ASC  NULLS LAST;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT CASE vt0.c1  WHEN vt0.c0 THEN 593958496 ELSE t0.c2 END, 0.9669863938882352) WHERE (((vt0.c0 IN ()) IN (CHAR(0.7913400233887415, vt0.c2, t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN (CHAR(0.7913400233887415, vt0.c2, t0.c2)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT CASE vt0.c1  WHEN vt0.c0 THEN 593958496 ELSE t0.c2 END, 0.9669863938882352));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT CASE vt0.c1  WHEN vt0.c0 THEN 593958496 ELSE t0.c2 END, 0.9669863938882352) WHERE (((vt0.c0 IN ()) IN (CHAR(0.7913400233887415, vt0.c2, t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN (CHAR(0.7913400233887415, vt0.c2, t0.c2)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT CASE vt0.c1  WHEN vt0.c0 THEN 593958496 ELSE t0.c2 END, 0.9669863938882352));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT CASE vt0.c1  WHEN vt0.c0 THEN 593958496 ELSE t0.c2 END, 0.9669863938882352) WHERE (((vt0.c0 IN ()) IN (CHAR(0.7913400233887415, vt0.c2, t0.c2))));
SELECT ALL * FROM vt0, t0 WHERE ((vt0.c1 IN (vt0.c0, t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN (vt0.c0, t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((vt0.c1 IN (vt0.c0, t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN (vt0.c0, t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((vt0.c1 IN (vt0.c0, t0.c2)) COLLATE RTRIM);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c1)OR(vt0.c0)) COLLATE BINARY WHERE (((((t0.c2 IN ())))>((((vt0.c1)*(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN ())))>((((vt0.c1)*(vt0.c1)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c1)OR(vt0.c0)) COLLATE BINARY);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c1)OR(vt0.c0)) COLLATE BINARY WHERE (((((t0.c2 IN ())))>((((vt0.c1)*(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN ())))>((((vt0.c1)*(vt0.c1)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c1)OR(vt0.c0)) COLLATE BINARY);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c1)OR(vt0.c0)) COLLATE BINARY WHERE (((((t0.c2 IN ())))>((((vt0.c1)*(vt0.c1))))));
SELECT ALL * FROM t0 WHERE ((NOT (t0.c2))) ORDER BY LOWER(((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c2))) IS TRUE)  as count FROM t0 ORDER BY LOWER(((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((NOT (t0.c2))) ORDER BY LOWER(((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c2))) IS TRUE)  as count FROM t0 ORDER BY LOWER(((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((NOT (t0.c2))) ORDER BY LOWER(((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)<=('')) THEN (- (vt0.c1)) WHEN (((NULL, x'd596', vt0.c0))<((vt0.c0, vt0.c0, vt0.c2))) THEN CAST('-1701587682' AS TEXT) WHEN vt0.c1 THEN (((vt0.c2))>=((vt0.c0))) ELSE (('e ')GLOB(vt0.c1)) END) ORDER BY (~ (NULL)) ASC, x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)<=('')) THEN (- (vt0.c1)) WHEN (((NULL, x'd596', vt0.c0))<((vt0.c0, vt0.c0, vt0.c2))) THEN CAST('-1701587682' AS TEXT) WHEN vt0.c1 THEN (((vt0.c2))>=((vt0.c0))) ELSE (('e ')GLOB(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (~ (NULL)) ASC, x'');
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)<=('')) THEN (- (vt0.c1)) WHEN (((NULL, x'd596', vt0.c0))<((vt0.c0, vt0.c0, vt0.c2))) THEN CAST('-1701587682' AS TEXT) WHEN vt0.c1 THEN (((vt0.c2))>=((vt0.c0))) ELSE (('e ')GLOB(vt0.c1)) END) ORDER BY (~ (NULL)) ASC, x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)<=('')) THEN (- (vt0.c1)) WHEN (((NULL, x'd596', vt0.c0))<((vt0.c0, vt0.c0, vt0.c2))) THEN CAST('-1701587682' AS TEXT) WHEN vt0.c1 THEN (((vt0.c2))>=((vt0.c0))) ELSE (('e ')GLOB(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (~ (NULL)) ASC, x'');
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)<=('')) THEN (- (vt0.c1)) WHEN (((NULL, x'd596', vt0.c0))<((vt0.c0, vt0.c0, vt0.c2))) THEN CAST('-1701587682' AS TEXT) WHEN vt0.c1 THEN (((vt0.c2))>=((vt0.c0))) ELSE (('e ')GLOB(vt0.c1)) END) ORDER BY (~ (NULL)) ASC, x'';
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 END IN ())) ORDER BY (((t0.c2)) BETWEEN ((((vt0.c2) NOT NULL))) AND (((~ ('1881450560')))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN vt0.c1 END IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c2)) BETWEEN ((((vt0.c2) NOT NULL))) AND (((~ ('1881450560'))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 END IN ())) ORDER BY (((t0.c2)) BETWEEN ((((vt0.c2) NOT NULL))) AND (((~ ('1881450560')))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN vt0.c1 END IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c2)) BETWEEN ((((vt0.c2) NOT NULL))) AND (((~ ('1881450560'))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 END IN ())) ORDER BY (((t0.c2)) BETWEEN ((((vt0.c2) NOT NULL))) AND (((~ ('1881450560')))));
SELECT COUNT(*) FROM vt0 WHERE ((((((0.8054280603701726))>((vt0.c2))))<(((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.8054280603701726))>((vt0.c2))))<(((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((0.8054280603701726))>((vt0.c2))))<(((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.8054280603701726))>((vt0.c2))))<(((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((0.8054280603701726))>((vt0.c2))))<(((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c2)))));
SELECT ALL * FROM t0 WHERE (((NULLIF(t0.c2, t0.c2)) NOT BETWEEN ((- (t0.c2))) AND ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(t0.c2, t0.c2)) NOT BETWEEN ((- (t0.c2))) AND ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((NULLIF(t0.c2, t0.c2)) NOT BETWEEN ((- (t0.c2))) AND ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(t0.c2, t0.c2)) NOT BETWEEN ((- (t0.c2))) AND ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((NULLIF(t0.c2, t0.c2)) NOT BETWEEN ((- (t0.c2))) AND ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))));
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE (((vt0.c0))<>((vt0.c1)))  WHEN (('-1583622642') NOTNULL) THEN ((vt0.c1)||(t0.c2)) WHEN ((vt0.c0)-(t0.c2)) THEN (NOT (vt0.c2)) WHEN (~ (vt0.c0)) THEN vt0.c0 ELSE ((t0.c2)+(vt0.c2)) END) ORDER BY CASE WHEN ((vt0.c2) ISNULL) THEN (- (vt0.c0)) ELSE CAST(t0.c2 AS REAL) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))!=((vt0.c1)))  WHEN (('-1583622642') NOTNULL) THEN ((vt0.c1)||(t0.c2)) WHEN ((vt0.c0)-(t0.c2)) THEN (NOT (vt0.c2)) WHEN (~ (vt0.c0)) THEN vt0.c0 ELSE ((t0.c2)+(vt0.c2)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((vt0.c2) ISNULL) THEN (- (vt0.c0)) ELSE CAST(t0.c2 AS REAL) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE (((vt0.c0))<>((vt0.c1)))  WHEN (('-1583622642') NOTNULL) THEN ((vt0.c1)||(t0.c2)) WHEN ((vt0.c0)-(t0.c2)) THEN (NOT (vt0.c2)) WHEN (~ (vt0.c0)) THEN vt0.c0 ELSE ((t0.c2)+(vt0.c2)) END) ORDER BY CASE WHEN ((vt0.c2) ISNULL) THEN (- (vt0.c0)) ELSE CAST(t0.c2 AS REAL) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))!=((vt0.c1)))  WHEN (('-1583622642') NOTNULL) THEN ((vt0.c1)||(t0.c2)) WHEN ((vt0.c0)-(t0.c2)) THEN (NOT (vt0.c2)) WHEN (~ (vt0.c0)) THEN vt0.c0 ELSE ((t0.c2)+(vt0.c2)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((vt0.c2) ISNULL) THEN (- (vt0.c0)) ELSE CAST(t0.c2 AS REAL) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE (((vt0.c0))<>((vt0.c1)))  WHEN (('-1583622642') NOTNULL) THEN ((vt0.c1)||(t0.c2)) WHEN ((vt0.c0)-(t0.c2)) THEN (NOT (vt0.c2)) WHEN (~ (vt0.c0)) THEN vt0.c0 ELSE ((t0.c2)+(vt0.c2)) END) ORDER BY CASE WHEN ((vt0.c2) ISNULL) THEN (- (vt0.c0)) ELSE CAST(t0.c2 AS REAL) END;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c1) ORDER BY (((vt0.c2)>=(t0.c2)) IN ())  NULLS FIRST, 0.28454236087320195 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c2)>=(t0.c2)) IN ())  NULLS FIRST, 0.28454236087320195 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c1) ORDER BY (((vt0.c2)>=(t0.c2)) IN ())  NULLS FIRST, 0.28454236087320195 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c2)>=(t0.c2)) IN ())  NULLS FIRST, 0.28454236087320195 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c1) ORDER BY (((vt0.c2)>=(t0.c2)) IN ())  NULLS FIRST, 0.28454236087320195 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c2 AS INTEGER))<(((((((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))OR(-1.88497738E9)))OR(vt0.c0)))AND(t0.c2)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS INTEGER))<(((((((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))OR(-1.88497738E9)))OR(vt0.c0)))AND(t0.c2)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c2 AS INTEGER))<(((((((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))OR(-1.88497738E9)))OR(vt0.c0)))AND(t0.c2)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS INTEGER))<(((((((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))OR(-1.88497738E9)))OR(vt0.c0)))AND(t0.c2)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c2 AS INTEGER))<(((((((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))OR(-1.88497738E9)))OR(vt0.c0)))AND(t0.c2)))OR(vt0.c2)))));
SELECT ALL * FROM t0 WHERE ((CAST(t0.c2 AS BLOB) IN ())) ORDER BY ((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))AND((((t0.c2))==((t0.c2))))))AND(((((t0.c2)OR(t0.c2)))AND(t0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c2 AS BLOB) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))AND((((t0.c2))=((t0.c2))))))AND(((((t0.c2)OR(t0.c2)))AND(t0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((CAST(t0.c2 AS BLOB) IN ())) ORDER BY ((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))AND((((t0.c2))==((t0.c2))))))AND(((((t0.c2)OR(t0.c2)))AND(t0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c2 AS BLOB) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))AND((((t0.c2))=((t0.c2))))))AND(((((t0.c2)OR(t0.c2)))AND(t0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((CAST(t0.c2 AS BLOB) IN ())) ORDER BY ((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))AND((((t0.c2))==((t0.c2))))))AND(((((t0.c2)OR(t0.c2)))AND(t0.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (json_extract(CAST(vt0.c0 AS INTEGER), ((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(CAST(vt0.c0 AS INTEGER), ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_extract(CAST(vt0.c0 AS INTEGER), ((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(CAST(vt0.c0 AS INTEGER), ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_extract(CAST(vt0.c0 AS INTEGER), ((vt0.c0) ISNULL)));
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c2))>((vt0.c1))))OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END)))OR(vt0.c1 COLLATE RTRIM))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))>(CAST(vt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c2))>((vt0.c1))))OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END)))OR(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))>(CAST(vt0.c2 AS INTEGER))));
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c2))>((vt0.c1))))OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END)))OR(vt0.c1 COLLATE RTRIM))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))>(CAST(vt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c2))>((vt0.c1))))OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END)))OR(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))>(CAST(vt0.c2 AS INTEGER))));
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c2))>((vt0.c1))))OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END)))OR(vt0.c1 COLLATE RTRIM))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))>(CAST(vt0.c2 AS INTEGER)));
SELECT * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS TEXT));
SELECT * FROM t0, vt0 WHERE ((((vt0.c0 IN (t0.c2)))>=(((vt0.c2) BETWEEN (t0.c2) AND (vt0.c2))))) ORDER BY LOWER(UNLIKELY(DISTINCT t0.c2)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (t0.c2)))>=(((vt0.c2) BETWEEN (t0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY LOWER(UNLIKELY(DISTINCT t0.c2)) ASC);
SELECT * FROM t0, vt0 WHERE ((((vt0.c0 IN (t0.c2)))>=(((vt0.c2) BETWEEN (t0.c2) AND (vt0.c2))))) ORDER BY LOWER(UNLIKELY(DISTINCT t0.c2)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (t0.c2)))>=(((vt0.c2) BETWEEN (t0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY LOWER(UNLIKELY(DISTINCT t0.c2)) ASC);
SELECT * FROM t0, vt0 WHERE ((((vt0.c0 IN (t0.c2)))>=(((vt0.c2) BETWEEN (t0.c2) AND (vt0.c2))))) ORDER BY LOWER(UNLIKELY(DISTINCT t0.c2)) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)<(vt0.c1)))IS((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c1, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)<(vt0.c1)))IS((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c1, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)<(vt0.c1)))IS((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c1, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)<(vt0.c1)))IS((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c1, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)<(vt0.c1)))IS((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c1, vt0.c0, vt0.c1))))));
SELECT ALL * FROM vt0, t0 WHERE ((((0X6da64d0d))<>(((vt0.c1 IN ()))))) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT (((((0X6da64d0d))!=(((vt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c2);
SELECT ALL * FROM vt0, t0 WHERE ((((0X6da64d0d))<>(((vt0.c1 IN ()))))) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT (((((0X6da64d0d))!=(((vt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c2);
SELECT ALL * FROM vt0, t0 WHERE ((((0X6da64d0d))<>(((vt0.c1 IN ()))))) ORDER BY t0.c2;
SELECT ALL * FROM vt0, t0 WHERE (((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))AND(vt0.c1 COLLATE NOCASE)))OR(NULLIF(DISTINCT vt0.c1, vt0.c1)))) ORDER BY (NOT (vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))AND(vt0.c1 COLLATE NOCASE)))OR(NULLIF(DISTINCT vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))AND(vt0.c1 COLLATE NOCASE)))OR(NULLIF(DISTINCT vt0.c1, vt0.c1)))) ORDER BY (NOT (vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))AND(vt0.c1 COLLATE NOCASE)))OR(NULLIF(DISTINCT vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))AND(vt0.c1 COLLATE NOCASE)))OR(NULLIF(DISTINCT vt0.c1, vt0.c1)))) ORDER BY (NOT (vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (LIKELY(DISTINCT 0.3023743218609771)) ORDER BY x'' DESC  NULLS LAST, vt0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT 0.3023743218609771)) IS TRUE)  as count FROM t0, vt0 ORDER BY x'' DESC  NULLS LAST, vt0.c0 COLLATE BINARY);
SELECT * FROM t0, vt0 WHERE (LIKELY(DISTINCT 0.3023743218609771)) ORDER BY x'' DESC  NULLS LAST, vt0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT 0.3023743218609771)) IS TRUE)  as count FROM t0, vt0 ORDER BY x'' DESC  NULLS LAST, vt0.c0 COLLATE BINARY);
SELECT * FROM t0, vt0 WHERE (LIKELY(DISTINCT 0.3023743218609771)) ORDER BY x'' DESC  NULLS LAST, vt0.c0 COLLATE BINARY;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELY(DISTINCT (vt0.c1 IN ()))) ORDER BY ((LAST_INSERT_ROWID()) NOT BETWEEN ((t0.c2 IN ())) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (vt0.c1 IN ()))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((LAST_INSERT_ROWID()) NOT BETWEEN ((t0.c2 IN ())) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELY(DISTINCT (vt0.c1 IN ()))) ORDER BY ((LAST_INSERT_ROWID()) NOT BETWEEN ((t0.c2 IN ())) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (vt0.c1 IN ()))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((LAST_INSERT_ROWID()) NOT BETWEEN ((t0.c2 IN ())) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELY(DISTINCT (vt0.c1 IN ()))) ORDER BY ((LAST_INSERT_ROWID()) NOT BETWEEN ((t0.c2 IN ())) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (HEX(t0.c2) COLLATE RTRIM) ORDER BY (((t0.c2 IN (t0.c2, t0.c2)))>(1401741737))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(t0.c2) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2 IN (t0.c2, t0.c2)))>(1401741737))  NULLS LAST);
SELECT * FROM t0 WHERE (HEX(t0.c2) COLLATE RTRIM) ORDER BY (((t0.c2 IN (t0.c2, t0.c2)))>(1401741737))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(t0.c2) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2 IN (t0.c2, t0.c2)))>(1401741737))  NULLS LAST);
SELECT * FROM t0 WHERE (HEX(t0.c2) COLLATE RTRIM) ORDER BY (((t0.c2 IN (t0.c2, t0.c2)))>(1401741737))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c2)OR(t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c2)OR(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c2)OR(t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c2)OR(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c2)OR(t0.c2)) COLLATE RTRIM);
SELECT * FROM t0, vt0 WHERE (CASE ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c2))  WHEN (t0.c2 IN ()) THEN vt0.c2 ELSE CAST(vt0.c2 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c2))  WHEN (t0.c2 IN ()) THEN vt0.c2 ELSE CAST(vt0.c2 AS INTEGER) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c2))  WHEN (t0.c2 IN ()) THEN vt0.c2 ELSE CAST(vt0.c2 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c2))  WHEN (t0.c2 IN ()) THEN vt0.c2 ELSE CAST(vt0.c2 AS INTEGER) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c2))  WHEN (t0.c2 IN ()) THEN vt0.c2 ELSE CAST(vt0.c2 AS INTEGER) END);
SELECT * FROM vt0, t0 WHERE ((('-27361693')>((((vt0.c1, vt0.c0, vt0.c2))>((vt0.c0, vt0.c1, t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((('-27361693')>((((vt0.c1, vt0.c0, vt0.c2))>((vt0.c0, vt0.c1, t0.c2)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((('-27361693')>((((vt0.c1, vt0.c0, vt0.c2))>((vt0.c0, vt0.c1, t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((('-27361693')>((((vt0.c1, vt0.c0, vt0.c2))>((vt0.c0, vt0.c1, t0.c2)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((('-27361693')>((((vt0.c1, vt0.c0, vt0.c2))>((vt0.c0, vt0.c1, t0.c2))))));
SELECT ALL COUNT(*) FROM t0 WHERE (json_remove(t0.c2, ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))) ORDER BY ('1408367166' IN ()), t0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((json_remove(t0.c2, ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))) IS TRUE)  as count FROM t0 ORDER BY ('1408367166' IN ()), t0.c2 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (json_remove(t0.c2, ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))) ORDER BY ('1408367166' IN ()), t0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((json_remove(t0.c2, ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))) IS TRUE)  as count FROM t0 ORDER BY ('1408367166' IN ()), t0.c2 DESC);
SELECT ALL * FROM t0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c2 END) NOT BETWEEN ((0xfffffffffd3cbb58 IN ())) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0))))) ORDER BY COALESCE((vt0.c2 IN ()), ((vt0.c1)<(vt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c2 END) NOT BETWEEN ((0Xfffffffffd3cbb58 IN ())) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY COALESCE((vt0.c2 IN ()), ((vt0.c1)<(vt0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c2 END) NOT BETWEEN ((0xfffffffffd3cbb58 IN ())) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0))))) ORDER BY COALESCE((vt0.c2 IN ()), ((vt0.c1)<(vt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c2 END) NOT BETWEEN ((0Xfffffffffd3cbb58 IN ())) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY COALESCE((vt0.c2 IN ()), ((vt0.c1)<(vt0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c2 END) NOT BETWEEN ((0xfffffffffd3cbb58 IN ())) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0))))) ORDER BY COALESCE((vt0.c2 IN ()), ((vt0.c1)<(vt0.c1))) ASC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE ((+ ((vt0.c1 IN (t0.c2, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c1 IN (t0.c2, vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((+ ((vt0.c1 IN (t0.c2, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c1 IN (t0.c2, vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((+ ((vt0.c1 IN (t0.c2, vt0.c0)))));
SELECT * FROM vt0 INNER JOIN t0 ON (((- (vt0.c1)))IS NOT(t0.c2 COLLATE BINARY)) WHERE (TIME(CASE WHEN vt0.c2 THEN vt0.c2 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END, CASE WHEN vt0.c1 THEN t0.c2 END, '', (((vt0.c0, vt0.c2, t0.c2))=((vt0.c1, t0.c2, vt0.c1))), (vt0.c2 IN (t0.c2, vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TIME(CASE WHEN vt0.c2 THEN vt0.c2 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END, CASE WHEN vt0.c1 THEN t0.c2 END, '', (((vt0.c0, vt0.c2, t0.c2))==((vt0.c1, t0.c2, vt0.c1))), (vt0.c2 IN (t0.c2, vt0.c2)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((- (vt0.c1)))IS NOT(t0.c2 COLLATE BINARY)));
SELECT * FROM vt0 INNER JOIN t0 ON (((- (vt0.c1)))IS NOT(t0.c2 COLLATE BINARY)) WHERE (TIME(CASE WHEN vt0.c2 THEN vt0.c2 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END, CASE WHEN vt0.c1 THEN t0.c2 END, '', (((vt0.c0, vt0.c2, t0.c2))=((vt0.c1, t0.c2, vt0.c1))), (vt0.c2 IN (t0.c2, vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TIME(CASE WHEN vt0.c2 THEN vt0.c2 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END, CASE WHEN vt0.c1 THEN t0.c2 END, '', (((vt0.c0, vt0.c2, t0.c2))==((vt0.c1, t0.c2, vt0.c1))), (vt0.c2 IN (t0.c2, vt0.c2)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((- (vt0.c1)))IS NOT(t0.c2 COLLATE BINARY)));
SELECT * FROM vt0 INNER JOIN t0 ON (((- (vt0.c1)))IS NOT(t0.c2 COLLATE BINARY)) WHERE (TIME(CASE WHEN vt0.c2 THEN vt0.c2 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END, CASE WHEN vt0.c1 THEN t0.c2 END, '', (((vt0.c0, vt0.c2, t0.c2))=((vt0.c1, t0.c2, vt0.c1))), (vt0.c2 IN (t0.c2, vt0.c2))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))IS((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))IS((~ (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))IS((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))IS((~ (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))IS((~ (t0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL)) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL)) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) NOTNULL));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) NOT NULL)) BETWEEN (((t0.c2)IS(t0.c2))) AND (((']K7{K')IS('-264828263'))))) ORDER BY t0.c2 DESC, LIKELIHOOD(t0.c2, 0.11537813909843309), t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT NULL)) BETWEEN (((t0.c2)IS(t0.c2))) AND (((']K7{K')IS('-264828263'))))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 DESC, LIKELIHOOD(t0.c2, 0.11537813909843309), t0.c2  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) NOT NULL)) BETWEEN (((t0.c2)IS(t0.c2))) AND (((']K7{K')IS('-264828263'))))) ORDER BY t0.c2 DESC, LIKELIHOOD(t0.c2, 0.11537813909843309), t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT NULL)) BETWEEN (((t0.c2)IS(t0.c2))) AND (((']K7{K')IS('-264828263'))))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 DESC, LIKELIHOOD(t0.c2, 0.11537813909843309), t0.c2  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) NOT NULL)) BETWEEN (((t0.c2)IS(t0.c2))) AND (((']K7{K')IS('-264828263'))))) ORDER BY t0.c2 DESC, LIKELIHOOD(t0.c2, 0.11537813909843309), t0.c2  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT ABS(DISTINCT t0.c2)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ABS(DISTINCT t0.c2))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT ABS(DISTINCT t0.c2)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ABS(DISTINCT t0.c2))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT ABS(DISTINCT t0.c2)));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS BLOB)) NOTNULL));
SELECT ALL * FROM vt0, t0 WHERE (0.05851265813738382) ORDER BY t0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.05851265813738382) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c2 ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (0.05851265813738382) ORDER BY t0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.05851265813738382) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c2 ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (0.05851265813738382) ORDER BY t0.c2 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON SQLITE_VERSION() WHERE (CASE WHEN ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))OR(t0.c2)))OR(vt0.c1)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c2)) END) ORDER BY ((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))OR(t0.c2)))OR(vt0.c1)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c2)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON SQLITE_VERSION() ORDER BY ((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON SQLITE_VERSION() WHERE (CASE WHEN ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))OR(t0.c2)))OR(vt0.c1)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c2)) END) ORDER BY ((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))OR(t0.c2)))OR(vt0.c1)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c2)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON SQLITE_VERSION() ORDER BY ((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON SQLITE_VERSION() WHERE (CASE WHEN ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))OR(t0.c2)))OR(vt0.c1)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c2)) END) ORDER BY ((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CASE (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))  WHEN 0.5536620422913429 THEN (~ (t0.c2)) ELSE CAST(t0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))  WHEN 0.5536620422913429 THEN (~ (t0.c2)) ELSE CAST(t0.c2 AS BLOB) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))  WHEN 0.5536620422913429 THEN (~ (t0.c2)) ELSE CAST(t0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))  WHEN 0.5536620422913429 THEN (~ (t0.c2)) ELSE CAST(t0.c2 AS BLOB) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))  WHEN 0.5536620422913429 THEN (~ (t0.c2)) ELSE CAST(t0.c2 AS BLOB) END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))) ORDER BY (CAST(vt0.c2 AS REAL) IN ((t0.c2 IN (t0.c2, t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (CAST(vt0.c2 AS REAL) IN ((t0.c2 IN (t0.c2, t0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))) ORDER BY (CAST(vt0.c2 AS REAL) IN ((t0.c2 IN (t0.c2, t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (CAST(vt0.c2 AS REAL) IN ((t0.c2 IN (t0.c2, t0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))) ORDER BY (CAST(vt0.c2 AS REAL) IN ((t0.c2 IN (t0.c2, t0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((NULL)>=(vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>=(vt0.c2))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((NULL)>=(vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>=(vt0.c2))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((NULL)>=(vt0.c2)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((('') IS FALSE)) ORDER BY ((vt0.c2) IS TRUE) COLLATE BINARY DESC  NULLS LAST, ((vt0.c1 COLLATE NOCASE) IS FALSE)  NULLS LAST, (vt0.c1 IN ());
SELECT SUM(count) FROM (SELECT ALL (((('') IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c2) IS TRUE) COLLATE BINARY DESC  NULLS LAST, ((vt0.c1 COLLATE NOCASE) IS FALSE)  NULLS LAST, (vt0.c1 IN ()));
SELECT COUNT(*) FROM t0, vt0 WHERE ((('') IS FALSE)) ORDER BY ((vt0.c2) IS TRUE) COLLATE BINARY DESC  NULLS LAST, ((vt0.c1 COLLATE NOCASE) IS FALSE)  NULLS LAST, (vt0.c1 IN ());
SELECT SUM(count) FROM (SELECT ALL (((('') IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c2) IS TRUE) COLLATE BINARY DESC  NULLS LAST, ((vt0.c1 COLLATE NOCASE) IS FALSE)  NULLS LAST, (vt0.c1 IN ()));
SELECT COUNT(*) FROM t0, vt0 WHERE ((('') IS FALSE)) ORDER BY ((vt0.c2) IS TRUE) COLLATE BINARY DESC  NULLS LAST, ((vt0.c1 COLLATE NOCASE) IS FALSE)  NULLS LAST, (vt0.c1 IN ());
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c1) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((vt0.c0 IN ()) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c1) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((vt0.c0 IN ()) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c1) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER)  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ()))GLOB(CASE WHEN vt0.c0 THEN 0.9433913653075662 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN x'' ELSE vt0.c2 END))) ORDER BY ((((vt0.c1)-(vt0.c0))) BETWEEN (NULL) AND (((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))GLOB(CASE WHEN vt0.c0 THEN 0.9433913653075662 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN x'' ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)-(vt0.c0))) BETWEEN (NULL) AND (((vt0.c0) NOT NULL))));
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ()))GLOB(CASE WHEN vt0.c0 THEN 0.9433913653075662 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN x'' ELSE vt0.c2 END))) ORDER BY ((((vt0.c1)-(vt0.c0))) BETWEEN (NULL) AND (((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))GLOB(CASE WHEN vt0.c0 THEN 0.9433913653075662 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN x'' ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)-(vt0.c0))) BETWEEN (NULL) AND (((vt0.c0) NOT NULL))));
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ()))GLOB(CASE WHEN vt0.c0 THEN 0.9433913653075662 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN x'' ELSE vt0.c2 END))) ORDER BY ((((vt0.c1)-(vt0.c0))) BETWEEN (NULL) AND (((vt0.c0) NOT NULL)));
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))OR(((vt0.c2)GLOB(vt0.c1)))))AND(CAST(vt0.c0 AS REAL))))AND((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))OR(((vt0.c2)GLOB(vt0.c1)))))AND(CAST(vt0.c0 AS REAL))))AND((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))OR(((vt0.c2)GLOB(vt0.c1)))))AND(CAST(vt0.c0 AS REAL))))AND((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))OR(((vt0.c2)GLOB(vt0.c1)))))AND(CAST(vt0.c0 AS REAL))))AND((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))OR(((vt0.c2)GLOB(vt0.c1)))))AND(CAST(vt0.c0 AS REAL))))AND((+ (vt0.c0)))));
SELECT * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c2)))<<(CAST(vt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt0.c2)))<<(CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c2)))<<(CAST(vt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt0.c2)))<<(CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c2)))<<(CAST(vt0.c2 AS REAL))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((x'')AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN ((- (vt0.c0))) AND (TRIM(DISTINCT vt0.c1, t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN ((- (vt0.c0))) AND (TRIM(DISTINCT vt0.c1, t0.c2)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((x'')AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN ((- (vt0.c0))) AND (TRIM(DISTINCT vt0.c1, t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN ((- (vt0.c0))) AND (TRIM(DISTINCT vt0.c1, t0.c2)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((x'')AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN ((- (vt0.c0))) AND (TRIM(DISTINCT vt0.c1, t0.c2))));
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))<>((vt0.c1 COLLATE BINARY)))) ORDER BY ((CAST(vt0.c2 AS BLOB)) IS FALSE)  NULLS LAST, TYPEOF(DISTINCT x'') DESC  NULLS FIRST, (((vt0.c0 IN ()))-(IFNULL(DISTINCT vt0.c2, 0.043999114199471556)))  NULLS LAST, ((INSTR(vt0.c2, vt0.c1)) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND (((vt0.c2)OR(vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE))<>((vt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c2 AS BLOB)) IS FALSE)  NULLS LAST, TYPEOF(DISTINCT x'') DESC  NULLS FIRST, (((vt0.c0 IN ()))-(IFNULL(DISTINCT vt0.c2, 0.043999114199471556)))  NULLS LAST, ((INSTR(vt0.c2, vt0.c1)) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND (((vt0.c2)OR(vt0.c2))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))<>((vt0.c1 COLLATE BINARY)))) ORDER BY ((CAST(vt0.c2 AS BLOB)) IS FALSE)  NULLS LAST, TYPEOF(DISTINCT x'') DESC  NULLS FIRST, (((vt0.c0 IN ()))-(IFNULL(DISTINCT vt0.c2, 0.043999114199471556)))  NULLS LAST, ((INSTR(vt0.c2, vt0.c1)) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND (((vt0.c2)OR(vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE))<>((vt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c2 AS BLOB)) IS FALSE)  NULLS LAST, TYPEOF(DISTINCT x'') DESC  NULLS FIRST, (((vt0.c0 IN ()))-(IFNULL(DISTINCT vt0.c2, 0.043999114199471556)))  NULLS LAST, ((INSTR(vt0.c2, vt0.c1)) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND (((vt0.c2)OR(vt0.c2))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))<>((vt0.c1 COLLATE BINARY)))) ORDER BY ((CAST(vt0.c2 AS BLOB)) IS FALSE)  NULLS LAST, TYPEOF(DISTINCT x'') DESC  NULLS FIRST, (((vt0.c0 IN ()))-(IFNULL(DISTINCT vt0.c2, 0.043999114199471556)))  NULLS LAST, ((INSTR(vt0.c2, vt0.c1)) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND (((vt0.c2)OR(vt0.c2))))  NULLS FIRST;
SELECT * FROM vt0 NOT INDEXED, t0 WHERE (UNLIKELY(CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0 NOT INDEXED, t0 WHERE (UNLIKELY(CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0 NOT INDEXED, t0 WHERE (UNLIKELY(CAST(vt0.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))&(t0.c2 COLLATE RTRIM))) ORDER BY UNLIKELY((('') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))&(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0 ORDER BY UNLIKELY((('') NOT NULL)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))&(t0.c2 COLLATE RTRIM))) ORDER BY UNLIKELY((('') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))&(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0 ORDER BY UNLIKELY((('') NOT NULL)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))&(t0.c2 COLLATE RTRIM))) ORDER BY UNLIKELY((('') NOT NULL));
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c0 AS INTEGER)) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) ISNULL) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c0 AS INTEGER)) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) ISNULL) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c0 AS INTEGER)) ISNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN HEX(DISTINCT t0.c2) THEN UNLIKELY(t0.c2) WHEN TYPEOF(DISTINCT '') THEN CAST(x'16d2' AS BLOB) WHEN CAST(0.2511422977009735 AS REAL) THEN t0.c2 COLLATE BINARY END) ORDER BY (((((((((((t0.c2, t0.c2, x''))=((t0.c2, t0.c2, t0.c2))))OR((t0.c2 IN ()))))OR(t0.c2)))AND(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(((NULL) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(DISTINCT t0.c2) THEN UNLIKELY(t0.c2) WHEN TYPEOF(DISTINCT '') THEN CAST(x'16d2' AS BLOB) WHEN CAST(0.2511422977009735 AS REAL) THEN t0.c2 COLLATE BINARY END) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c2, t0.c2, x''))==((t0.c2, t0.c2, t0.c2))))OR((t0.c2 IN ()))))OR(t0.c2)))AND(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(((NULL) ISNULL))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN HEX(DISTINCT t0.c2) THEN UNLIKELY(t0.c2) WHEN TYPEOF(DISTINCT '') THEN CAST(x'16d2' AS BLOB) WHEN CAST(0.2511422977009735 AS REAL) THEN t0.c2 COLLATE BINARY END) ORDER BY (((((((((((t0.c2, t0.c2, x''))=((t0.c2, t0.c2, t0.c2))))OR((t0.c2 IN ()))))OR(t0.c2)))AND(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(((NULL) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(DISTINCT t0.c2) THEN UNLIKELY(t0.c2) WHEN TYPEOF(DISTINCT '') THEN CAST(x'16d2' AS BLOB) WHEN CAST(0.2511422977009735 AS REAL) THEN t0.c2 COLLATE BINARY END) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c2, t0.c2, x''))==((t0.c2, t0.c2, t0.c2))))OR((t0.c2 IN ()))))OR(t0.c2)))AND(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(((NULL) ISNULL))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN HEX(DISTINCT t0.c2) THEN UNLIKELY(t0.c2) WHEN TYPEOF(DISTINCT '') THEN CAST(x'16d2' AS BLOB) WHEN CAST(0.2511422977009735 AS REAL) THEN t0.c2 COLLATE BINARY END) ORDER BY (((((((((((t0.c2, t0.c2, x''))=((t0.c2, t0.c2, t0.c2))))OR((t0.c2 IN ()))))OR(t0.c2)))AND(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(((NULL) ISNULL)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (((vt0.c2) NOT NULL)))) ORDER BY ((((vt0.c0)IS(vt0.c0)))IS NOT(((vt0.c2) BETWEEN (-8.53338611E8) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)IS(vt0.c0)))IS NOT(((vt0.c2) BETWEEN (-8.53338611E8) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (((vt0.c2) NOT NULL)))) ORDER BY ((((vt0.c0)IS(vt0.c0)))IS NOT(((vt0.c2) BETWEEN (-8.53338611E8) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)IS(vt0.c0)))IS NOT(((vt0.c2) BETWEEN (-8.53338611E8) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (((vt0.c2) NOT NULL)))) ORDER BY ((((vt0.c0)IS(vt0.c0)))IS NOT(((vt0.c2) BETWEEN (-8.53338611E8) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE) ORDER BY ((vt0.c1) NOT NULL) DESC  NULLS FIRST, vt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) NOT NULL) DESC  NULLS FIRST, vt0.c2);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE) ORDER BY ((vt0.c1) NOT NULL) DESC  NULLS FIRST, vt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) NOT NULL) DESC  NULLS FIRST, vt0.c2);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE) ORDER BY ((vt0.c1) NOT NULL) DESC  NULLS FIRST, vt0.c2;
SELECT COUNT(*) FROM t0 WHERE (COALESCE((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))), (+ (t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))), (+ (t0.c2)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (COALESCE((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))), (+ (t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))), (+ (t0.c2)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (COALESCE((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))), (+ (t0.c2))));
SELECT ALL * FROM vt0, t0 WHERE (0.7858556896287622) ORDER BY ((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))+((vt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7858556896287622) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))+((vt0.c2 IN ())))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (0.7858556896287622) ORDER BY ((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))+((vt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7858556896287622) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))+((vt0.c2 IN ())))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (0.7858556896287622) ORDER BY ((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))+((vt0.c2 IN ())))  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE ((((((((vt0.c2, vt0.c2, vt0.c1)) BETWEEN ((vt0.c1, t0.c2, NULL)) AND ((vt0.c0, vt0.c1, vt0.c0))))OR(((vt0.c2)>=(vt0.c0)))))OR(((((vt0.c0)OR(0.16716976463177158)))AND(vt0.c0))))) ORDER BY 'ᘁ	kHa+' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c2, vt0.c2, vt0.c1)) BETWEEN ((vt0.c1, t0.c2, NULL)) AND ((vt0.c0, vt0.c1, vt0.c0))))OR(((vt0.c2)>=(vt0.c0)))))OR(((((vt0.c0)OR(0.16716976463177158)))AND(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY 'ᘁ	kHa+' COLLATE RTRIM);
SELECT ALL * FROM t0, vt0 WHERE ((((((((vt0.c2, vt0.c2, vt0.c1)) BETWEEN ((vt0.c1, t0.c2, NULL)) AND ((vt0.c0, vt0.c1, vt0.c0))))OR(((vt0.c2)>=(vt0.c0)))))OR(((((vt0.c0)OR(0.16716976463177158)))AND(vt0.c0))))) ORDER BY 'ᘁ	kHa+' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c2, vt0.c2, vt0.c1)) BETWEEN ((vt0.c1, t0.c2, NULL)) AND ((vt0.c0, vt0.c1, vt0.c0))))OR(((vt0.c2)>=(vt0.c0)))))OR(((((vt0.c0)OR(0.16716976463177158)))AND(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY 'ᘁ	kHa+' COLLATE RTRIM);
SELECT ALL * FROM t0, vt0 WHERE ((((((((vt0.c2, vt0.c2, vt0.c1)) BETWEEN ((vt0.c1, t0.c2, NULL)) AND ((vt0.c0, vt0.c1, vt0.c0))))OR(((vt0.c2)>=(vt0.c0)))))OR(((((vt0.c0)OR(0.16716976463177158)))AND(vt0.c0))))) ORDER BY 'ᘁ	kHa+' COLLATE RTRIM;
SELECT * FROM vt0 WHERE (((vt0.c1) BETWEEN (((((((((x'')AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c0))) AND (((vt0.c0)>=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (((((((((x'')AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c0))) AND (((vt0.c0)>=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1) BETWEEN (((((((((x'')AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c0))) AND (((vt0.c0)>=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (((((((((x'')AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c0))) AND (((vt0.c0)>=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1) BETWEEN (((((((((x'')AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c0))) AND (((vt0.c0)>=(vt0.c1)))));
SELECT * FROM vt0, t0 WHERE (((((t0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOTNULL));
SELECT * FROM vt0, t0 WHERE (CAST(((2064275879) NOTNULL) AS BLOB)) ORDER BY (- (vt0.c0));
SELECT SUM(count) FROM (SELECT ((CAST(((2064275879) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (vt0.c0)));
SELECT * FROM vt0, t0 WHERE (CAST(((2064275879) NOTNULL) AS BLOB)) ORDER BY (- (vt0.c0));
SELECT SUM(count) FROM (SELECT ((CAST(((2064275879) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (vt0.c0)));
SELECT * FROM vt0, t0 WHERE (CAST(((2064275879) NOTNULL) AS BLOB)) ORDER BY (- (vt0.c0));
SELECT * FROM t0 WHERE (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c2)-(vt0.c1))))) ORDER BY (~ (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c2)-(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c2)-(vt0.c1))))) ORDER BY (~ (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c2)-(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c2)-(vt0.c1))))) ORDER BY (~ (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM t0 WHERE (LAST_INSERT_ROWID()) ORDER BY ((((((t0.c2)OR(t0.c2)))OR(t0.c2))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2)OR(t0.c2)))OR(t0.c2))) ISNULL) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (LAST_INSERT_ROWID()) ORDER BY ((((((t0.c2)OR(t0.c2)))OR(t0.c2))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2)OR(t0.c2)))OR(t0.c2))) ISNULL) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (LAST_INSERT_ROWID()) ORDER BY ((((((t0.c2)OR(t0.c2)))OR(t0.c2))) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((CAST(t0.c2 AS NUMERIC)) NOT NULL) WHERE ((((vt0.c0)*(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)*(vt0.c1)) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN vt0 ON ((CAST(t0.c2 AS NUMERIC)) NOT NULL));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((CAST(t0.c2 AS NUMERIC)) NOT NULL) WHERE ((((vt0.c0)*(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)*(vt0.c1)) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN vt0 ON ((CAST(t0.c2 AS NUMERIC)) NOT NULL));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((CAST(t0.c2 AS NUMERIC)) NOT NULL) WHERE ((((vt0.c0)*(vt0.c1)) IN ()));
SELECT COUNT(*) FROM vt0, t0 WHERE ((vt0.c1 COLLATE RTRIM IN (HEX(-362184723))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE RTRIM IN (HEX(-362184723)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((vt0.c1 COLLATE RTRIM IN (HEX(-362184723))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE RTRIM IN (HEX(-362184723)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((vt0.c1 COLLATE RTRIM IN (HEX(-362184723))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 IN ()) IN ()));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c2 IN ())))<((((vt0.c2) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN ())))<((((vt0.c2) NOT NULL))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c2 IN ())))<((((vt0.c2) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN ())))<((((vt0.c2) NOT NULL))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c2 IN ())))<((((vt0.c2) NOT NULL)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((x'ba1b' COLLATE NOCASE)AND(((t0.c2) ISNULL))))OR(((t0.c2)=(t0.c2)))))AND(t0.c2)))OR(((t0.c2)<<(t0.c2))))) ORDER BY CASE WHEN (t0.c2 IN ()) THEN ((t0.c2)*(t0.c2)) ELSE x'' END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'ba1b' COLLATE NOCASE)AND(((t0.c2) ISNULL))))OR(((t0.c2)=(t0.c2)))))AND(t0.c2)))OR(((t0.c2)<<(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (t0.c2 IN ()) THEN ((t0.c2)*(t0.c2)) ELSE x'' END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((x'ba1b' COLLATE NOCASE)AND(((t0.c2) ISNULL))))OR(((t0.c2)=(t0.c2)))))AND(t0.c2)))OR(((t0.c2)<<(t0.c2))))) ORDER BY CASE WHEN (t0.c2 IN ()) THEN ((t0.c2)*(t0.c2)) ELSE x'' END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'ba1b' COLLATE NOCASE)AND(((t0.c2) ISNULL))))OR(((t0.c2)=(t0.c2)))))AND(t0.c2)))OR(((t0.c2)<<(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (t0.c2 IN ()) THEN ((t0.c2)*(t0.c2)) ELSE x'' END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((x'ba1b' COLLATE NOCASE)AND(((t0.c2) ISNULL))))OR(((t0.c2)=(t0.c2)))))AND(t0.c2)))OR(((t0.c2)<<(t0.c2))))) ORDER BY CASE WHEN (t0.c2 IN ()) THEN ((t0.c2)*(t0.c2)) ELSE x'' END ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS TEXT)) IS TRUE)) ORDER BY ((CAST(t0.c2 AS TEXT))IS NOT(((((0.1498623543139771)OR(t0.c2)))AND(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c2 AS TEXT))IS NOT(((((0.1498623543139771)OR(t0.c2)))AND(t0.c2))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS TEXT)) IS TRUE)) ORDER BY ((CAST(t0.c2 AS TEXT))IS NOT(((((0.1498623543139771)OR(t0.c2)))AND(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c2 AS TEXT))IS NOT(((((0.1498623543139771)OR(t0.c2)))AND(t0.c2))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS TEXT)) IS TRUE)) ORDER BY ((CAST(t0.c2 AS TEXT))IS NOT(((((0.1498623543139771)OR(t0.c2)))AND(t0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ORDER BY (- (CASE vt0.c0  WHEN t0.c2 THEN vt0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (- (CASE vt0.c0  WHEN t0.c2 THEN vt0.c2 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ORDER BY (- (CASE vt0.c0  WHEN t0.c2 THEN vt0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (- (CASE vt0.c0  WHEN t0.c2 THEN vt0.c2 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ORDER BY (- (CASE vt0.c0  WHEN t0.c2 THEN vt0.c2 END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY CAST((((vt0.c1))=(('-1863078486'))) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST((((vt0.c1))=(('-1863078486'))) AS TEXT) DESC);
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY CAST((((vt0.c1))=(('-1863078486'))) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST((((vt0.c1))=(('-1863078486'))) AS TEXT) DESC);
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY CAST((((vt0.c1))=(('-1863078486'))) AS TEXT) DESC;
SELECT * FROM t0, vt0 WHERE (CAST(vt0.c2 AS REAL) COLLATE NOCASE) ORDER BY ((CAST(vt0.c1 AS REAL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c2 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(vt0.c1 AS REAL)) NOT NULL)  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (CAST(vt0.c2 AS REAL) COLLATE NOCASE) ORDER BY ((CAST(vt0.c1 AS REAL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c2 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(vt0.c1 AS REAL)) NOT NULL)  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (CAST(vt0.c2 AS REAL) COLLATE NOCASE) ORDER BY ((CAST(vt0.c1 AS REAL)) NOT NULL)  NULLS FIRST;
SELECT * FROM t0 WHERE (-1092657184);
SELECT SUM(count) FROM (SELECT ((-1092657184) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (-1092657184);
SELECT SUM(count) FROM (SELECT ((-1092657184) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (-1092657184);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM)<((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)<((+ (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM)<((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)<((+ (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM)<((+ (vt0.c0)))));
SELECT * FROM vt0 WHERE (vt0.c2) ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 END COLLATE BINARY DESC);
SELECT * FROM vt0 WHERE (vt0.c2) ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 END COLLATE BINARY DESC);
SELECT * FROM vt0 WHERE (vt0.c2) ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 END COLLATE BINARY DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)>=(t0.c2)))/((vt0.c2 IN (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(t0.c2)))/((vt0.c2 IN (t0.c2))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)>=(t0.c2)))/((vt0.c2 IN (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(t0.c2)))/((vt0.c2 IN (t0.c2))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)>=(t0.c2)))/((vt0.c2 IN (t0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c1)) IN ())) ORDER BY (((x'f9e8e322')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)) AND ((vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)LIKE(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((x'f9e8e322')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)) AND ((vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c1)) IN ())) ORDER BY (((x'f9e8e322')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)) AND ((vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)LIKE(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((x'f9e8e322')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)) AND ((vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c1)) IN ())) ORDER BY (((x'f9e8e322')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)) AND ((vt0.c0)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((0.8256791596033417)/(vt0.c0)))AND((NOT (vt0.c1))))) ORDER BY CASE CAST(t0.c2 AS INTEGER)  WHEN ((vt0.c1) IS TRUE) THEN (+ (vt0.c2)) ELSE ((vt0.c0) BETWEEN (t0.c2) AND (t0.c2)) END DESC, '-782613272' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((0.8256791596033417)/(vt0.c0)))AND((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY CASE CAST(t0.c2 AS INTEGER)  WHEN ((vt0.c1) IS TRUE) THEN (+ (vt0.c2)) ELSE ((vt0.c0) BETWEEN (t0.c2) AND (t0.c2)) END DESC, '-782613272' COLLATE BINARY ASC);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((0.8256791596033417)/(vt0.c0)))AND((NOT (vt0.c1))))) ORDER BY CASE CAST(t0.c2 AS INTEGER)  WHEN ((vt0.c1) IS TRUE) THEN (+ (vt0.c2)) ELSE ((vt0.c0) BETWEEN (t0.c2) AND (t0.c2)) END DESC, '-782613272' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((0.8256791596033417)/(vt0.c0)))AND((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY CASE CAST(t0.c2 AS INTEGER)  WHEN ((vt0.c1) IS TRUE) THEN (+ (vt0.c2)) ELSE ((vt0.c0) BETWEEN (t0.c2) AND (t0.c2)) END DESC, '-782613272' COLLATE BINARY ASC);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((0.8256791596033417)/(vt0.c0)))AND((NOT (vt0.c1))))) ORDER BY CASE CAST(t0.c2 AS INTEGER)  WHEN ((vt0.c1) IS TRUE) THEN (+ (vt0.c2)) ELSE ((vt0.c0) BETWEEN (t0.c2) AND (t0.c2)) END DESC, '-782613272' COLLATE BINARY ASC;
SELECT * FROM vt0, t0 WHERE (((((((((((((vt0.c0)OR(0.710270487873071)))AND(vt0.c2)))OR(((t0.c2) ISNULL))))OR(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))))OR(t0.c2 COLLATE NOCASE)))OR(x''))) ORDER BY ((TIME(t0.c2, vt0.c0, vt0.c2)) BETWEEN (t0.c2) AND (((vt0.c1)>>(vt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(0.710270487873071)))AND(vt0.c2)))OR(((t0.c2) ISNULL))))OR(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))))OR(t0.c2 COLLATE NOCASE)))OR(x''))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((TIME(t0.c2, vt0.c0, vt0.c2)) BETWEEN (t0.c2) AND (((vt0.c1)>>(vt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((((((((((((vt0.c0)OR(0.710270487873071)))AND(vt0.c2)))OR(((t0.c2) ISNULL))))OR(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))))OR(t0.c2 COLLATE NOCASE)))OR(x''))) ORDER BY ((TIME(t0.c2, vt0.c0, vt0.c2)) BETWEEN (t0.c2) AND (((vt0.c1)>>(vt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(0.710270487873071)))AND(vt0.c2)))OR(((t0.c2) ISNULL))))OR(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))))OR(t0.c2 COLLATE NOCASE)))OR(x''))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((TIME(t0.c2, vt0.c0, vt0.c2)) BETWEEN (t0.c2) AND (((vt0.c1)>>(vt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((((((((((((vt0.c0)OR(0.710270487873071)))AND(vt0.c2)))OR(((t0.c2) ISNULL))))OR(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))))OR(t0.c2 COLLATE NOCASE)))OR(x''))) ORDER BY ((TIME(t0.c2, vt0.c0, vt0.c2)) BETWEEN (t0.c2) AND (((vt0.c1)>>(vt0.c2)))) DESC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE ((~ (vt0.c2 COLLATE RTRIM))) ORDER BY (((vt0.c0 IN ()))*(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, ((((vt0.c2 COLLATE NOCASE)AND(((((vt0.c2)OR(vt0.c1)))AND(vt0.c2)))))OR(((vt0.c0)IS NOT(t0.c2)))) ASC, ((CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)%((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 IN ()))*(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, ((((vt0.c2 COLLATE NOCASE)AND(((((vt0.c2)OR(vt0.c1)))AND(vt0.c2)))))OR(((vt0.c0)IS NOT(t0.c2)))) ASC, ((CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)%((vt0.c0 IN ()))));
SELECT * FROM vt0, t0 WHERE ((~ (vt0.c2 COLLATE RTRIM))) ORDER BY (((vt0.c0 IN ()))*(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, ((((vt0.c2 COLLATE NOCASE)AND(((((vt0.c2)OR(vt0.c1)))AND(vt0.c2)))))OR(((vt0.c0)IS NOT(t0.c2)))) ASC, ((CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)%((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 IN ()))*(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, ((((vt0.c2 COLLATE NOCASE)AND(((((vt0.c2)OR(vt0.c1)))AND(vt0.c2)))))OR(((vt0.c0)IS NOT(t0.c2)))) ASC, ((CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)%((vt0.c0 IN ()))));
SELECT * FROM vt0, t0 WHERE ((~ (vt0.c2 COLLATE RTRIM))) ORDER BY (((vt0.c0 IN ()))*(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, ((((vt0.c2 COLLATE NOCASE)AND(((((vt0.c2)OR(vt0.c1)))AND(vt0.c2)))))OR(((vt0.c0)IS NOT(t0.c2)))) ASC, ((CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)%((vt0.c0 IN ())));
SELECT * FROM t0 WHERE (((((((((((((t0.c2)AND(t0.c2)))OR(t0.c2)))AND('L')))OR(((t0.c2) IS TRUE))))AND(((x'') BETWEEN (NULL) AND (t0.c2)))))OR((+ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c2)AND(t0.c2)))OR(t0.c2)))AND('L')))OR(((t0.c2) IS TRUE))))AND(((x'') BETWEEN (NULL) AND (t0.c2)))))OR((+ (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((((t0.c2)AND(t0.c2)))OR(t0.c2)))AND('L')))OR(((t0.c2) IS TRUE))))AND(((x'') BETWEEN (NULL) AND (t0.c2)))))OR((+ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c2)AND(t0.c2)))OR(t0.c2)))AND('L')))OR(((t0.c2) IS TRUE))))AND(((x'') BETWEEN (NULL) AND (t0.c2)))))OR((+ (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((((t0.c2)AND(t0.c2)))OR(t0.c2)))AND('L')))OR(((t0.c2) IS TRUE))))AND(((x'') BETWEEN (NULL) AND (t0.c2)))))OR((+ (t0.c2)))));
SELECT * FROM vt0 WHERE (((((vt0.c2)|('NaN')))<>((+ (vt0.c1))))) ORDER BY CASE (('-656797965')>(vt0.c0))  WHEN ((vt0.c1) BETWEEN ('0.33386945425184267') AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c1)&(vt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)|('NaN')))!=((+ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE (('-656797965')>(vt0.c0))  WHEN ((vt0.c1) BETWEEN ('0.33386945425184267') AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c1)&(vt0.c2)) END  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c2)|('NaN')))<>((+ (vt0.c1))))) ORDER BY CASE (('-656797965')>(vt0.c0))  WHEN ((vt0.c1) BETWEEN ('0.33386945425184267') AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c1)&(vt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)|('NaN')))!=((+ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE (('-656797965')>(vt0.c0))  WHEN ((vt0.c1) BETWEEN ('0.33386945425184267') AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c1)&(vt0.c2)) END  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c2)|('NaN')))<>((+ (vt0.c1))))) ORDER BY CASE (('-656797965')>(vt0.c0))  WHEN ((vt0.c1) BETWEEN ('0.33386945425184267') AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c1)&(vt0.c2)) END  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (LOWER(DISTINCT '{/pca!') COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT '{/pca!') COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (LOWER(DISTINCT '{/pca!') COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT '{/pca!') COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (LOWER(DISTINCT '{/pca!') COLLATE RTRIM COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c2 COLLATE NOCASE)OR((t0.c2 IN ()))))OR(t0.c2 COLLATE BINARY)))OR(t0.c2)))AND((t0.c2 IN ())))) ORDER BY (('-423492394')==(t0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c2 COLLATE NOCASE)OR((t0.c2 IN ()))))OR(t0.c2 COLLATE BINARY)))OR(t0.c2)))AND((t0.c2 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (('-423492394')=(t0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c2 COLLATE NOCASE)OR((t0.c2 IN ()))))OR(t0.c2 COLLATE BINARY)))OR(t0.c2)))AND((t0.c2 IN ())))) ORDER BY (('-423492394')==(t0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c2 COLLATE NOCASE)OR((t0.c2 IN ()))))OR(t0.c2 COLLATE BINARY)))OR(t0.c2)))AND((t0.c2 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (('-423492394')=(t0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c2 COLLATE NOCASE)OR((t0.c2 IN ()))))OR(t0.c2 COLLATE BINARY)))OR(t0.c2)))AND((t0.c2 IN ())))) ORDER BY (('-423492394')==(t0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (0.588121595438377) ORDER BY ((((t0.c2) NOT NULL)) NOT BETWEEN ((((vt0.c2, 0.02128283365400019, vt0.c2)) BETWEEN ((vt0.c2, t0.c2, '')) AND ((vt0.c0, vt0.c1, t0.c2)))) AND ((+ (vt0.c2)))), (((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((t0.c2)))) NOTNULL) DESC  NULLS FIRST, ((((((((((((((((((((t0.c2)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c0)))AND(t0.c2)))AND(((t0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))))AND(TRIM(t0.c2, t0.c2))))OR(COALESCE(DISTINCT vt0.c1, vt0.c2))))AND(((t0.c2)>(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.588121595438377) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c2) NOT NULL)) NOT BETWEEN ((((vt0.c2, 0.02128283365400019, vt0.c2)) BETWEEN ((vt0.c2, t0.c2, '')) AND ((vt0.c0, vt0.c1, t0.c2)))) AND ((+ (vt0.c2)))), (((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((t0.c2)))) NOTNULL) DESC  NULLS FIRST, ((((((((((((((((((((t0.c2)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c0)))AND(t0.c2)))AND(((t0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))))AND(TRIM(t0.c2, t0.c2))))OR(COALESCE(DISTINCT vt0.c1, vt0.c2))))AND(((t0.c2)>(vt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (0.588121595438377) ORDER BY ((((t0.c2) NOT NULL)) NOT BETWEEN ((((vt0.c2, 0.02128283365400019, vt0.c2)) BETWEEN ((vt0.c2, t0.c2, '')) AND ((vt0.c0, vt0.c1, t0.c2)))) AND ((+ (vt0.c2)))), (((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((t0.c2)))) NOTNULL) DESC  NULLS FIRST, ((((((((((((((((((((t0.c2)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c0)))AND(t0.c2)))AND(((t0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))))AND(TRIM(t0.c2, t0.c2))))OR(COALESCE(DISTINCT vt0.c1, vt0.c2))))AND(((t0.c2)>(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.588121595438377) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c2) NOT NULL)) NOT BETWEEN ((((vt0.c2, 0.02128283365400019, vt0.c2)) BETWEEN ((vt0.c2, t0.c2, '')) AND ((vt0.c0, vt0.c1, t0.c2)))) AND ((+ (vt0.c2)))), (((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((t0.c2)))) NOTNULL) DESC  NULLS FIRST, ((((((((((((((((((((t0.c2)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c0)))AND(t0.c2)))AND(((t0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))))AND(TRIM(t0.c2, t0.c2))))OR(COALESCE(DISTINCT vt0.c1, vt0.c2))))AND(((t0.c2)>(vt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (0.588121595438377) ORDER BY ((((t0.c2) NOT NULL)) NOT BETWEEN ((((vt0.c2, 0.02128283365400019, vt0.c2)) BETWEEN ((vt0.c2, t0.c2, '')) AND ((vt0.c0, vt0.c1, t0.c2)))) AND ((+ (vt0.c2)))), (((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((t0.c2)))) NOTNULL) DESC  NULLS FIRST, ((((((((((((((((((((t0.c2)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c0)))AND(t0.c2)))AND(((t0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))))AND(TRIM(t0.c2, t0.c2))))OR(COALESCE(DISTINCT vt0.c1, vt0.c2))))AND(((t0.c2)>(vt0.c1)))) DESC  NULLS FIRST;
SELECT * FROM vt0 NOT INDEXED, t0 WHERE ((((('po4YE b]U') BETWEEN (t0.c2) AND (vt0.c0)))LIKE(CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((('po4YE b]U') BETWEEN (t0.c2) AND (vt0.c0)))LIKE(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0 NOT INDEXED, t0 WHERE ((((('po4YE b]U') BETWEEN (t0.c2) AND (vt0.c0)))LIKE(CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((('po4YE b]U') BETWEEN (t0.c2) AND (vt0.c0)))LIKE(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0 NOT INDEXED, t0 WHERE ((((('po4YE b]U') BETWEEN (t0.c2) AND (vt0.c0)))LIKE(CAST(vt0.c1 AS REAL))));
SELECT * FROM vt0 WHERE (ROUND(vt0.c2 COLLATE RTRIM, '0.11950523938112667')) ORDER BY CAST(vt0.c2 AS TEXT) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ROUND(vt0.c2 COLLATE RTRIM, '0.11950523938112667')) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c2 AS TEXT) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt0 WHERE (ROUND(vt0.c2 COLLATE RTRIM, '0.11950523938112667')) ORDER BY CAST(vt0.c2 AS TEXT) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ROUND(vt0.c2 COLLATE RTRIM, '0.11950523938112667')) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c2 AS TEXT) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt0 WHERE (ROUND(vt0.c2 COLLATE RTRIM, '0.11950523938112667')) ORDER BY CAST(vt0.c2 AS TEXT) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((((x'')AND(((t0.c2)==(t0.c2)))))OR((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))))OR((t0.c2 IN (t0.c2, -845816323)))))AND((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')AND(((t0.c2)=(t0.c2)))))OR((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))))OR((t0.c2 IN (t0.c2, -845816323)))))AND((t0.c2 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((x'')AND(((t0.c2)==(t0.c2)))))OR((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))))OR((t0.c2 IN (t0.c2, -845816323)))))AND((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')AND(((t0.c2)=(t0.c2)))))OR((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))))OR((t0.c2 IN (t0.c2, -845816323)))))AND((t0.c2 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((x'')AND(((t0.c2)==(t0.c2)))))OR((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))))OR((t0.c2 IN (t0.c2, -845816323)))))AND((t0.c2 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(x'')))||(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(x'')))||(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(x'')))||(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(x'')))||(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(x'')))||(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM t0 WHERE (INSTR(((t0.c2)==(x'')), x'')) ORDER BY t0.c2 COLLATE RTRIM COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((INSTR(((t0.c2)==(x'')), x'')) IS TRUE)  as count FROM t0 ORDER BY t0.c2 COLLATE RTRIM COLLATE BINARY DESC);
SELECT COUNT(*) FROM t0 WHERE (INSTR(((t0.c2)==(x'')), x'')) ORDER BY t0.c2 COLLATE RTRIM COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((INSTR(((t0.c2)==(x'')), x'')) IS TRUE)  as count FROM t0 ORDER BY t0.c2 COLLATE RTRIM COLLATE BINARY DESC);
SELECT COUNT(*) FROM t0 WHERE (INSTR(((t0.c2)==(x'')), x'')) ORDER BY t0.c2 COLLATE RTRIM COLLATE BINARY DESC;
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE (((CAST(vt0.c1 AS TEXT)) IS FALSE)) ORDER BY 'Wf3\rYFRf';
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY 'Wf3\rYFRf');
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE (((CAST(vt0.c1 AS TEXT)) IS FALSE)) ORDER BY 'Wf3\rYFRf';
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY 'Wf3\rYFRf');
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE (((CAST(vt0.c1 AS TEXT)) IS FALSE)) ORDER BY 'Wf3\rYFRf';
SELECT ALL COUNT(*) FROM t0 WHERE ((NULL IN ())) ORDER BY ((((t0.c2)AND(t0.c2)))OR(0X27ea3224)) COLLATE NOCASE DESC  NULLS FIRST, t0.c2, ((PRINTF(t0.c2)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2)AND(t0.c2)))OR(0x27ea3224)) COLLATE NOCASE DESC  NULLS FIRST, t0.c2, ((PRINTF(t0.c2)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((NULL IN ())) ORDER BY ((((t0.c2)AND(t0.c2)))OR(0X27ea3224)) COLLATE NOCASE DESC  NULLS FIRST, t0.c2, ((PRINTF(t0.c2)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2)AND(t0.c2)))OR(0x27ea3224)) COLLATE NOCASE DESC  NULLS FIRST, t0.c2, ((PRINTF(t0.c2)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((NULL IN ())) ORDER BY ((((t0.c2)AND(t0.c2)))OR(0X27ea3224)) COLLATE NOCASE DESC  NULLS FIRST, t0.c2, ((PRINTF(t0.c2)) IS TRUE)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))-(((vt0.c2) BETWEEN (vt0.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0)))-(((vt0.c2) BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))-(((vt0.c2) BETWEEN (vt0.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0)))-(((vt0.c2) BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))-(((vt0.c2) BETWEEN (vt0.c0) AND (NULL)))));
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c2  WHEN '1744404586' THEN t0.c2 END) BETWEEN (t0.c2) AND (((t0.c2)==(t0.c2))))) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c2) AND (NULL))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c2  WHEN '1744404586' THEN t0.c2 END) BETWEEN (t0.c2) AND (((t0.c2)==(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) NOT BETWEEN (t0.c2) AND (NULL))) NOT NULL));
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c2  WHEN '1744404586' THEN t0.c2 END) BETWEEN (t0.c2) AND (((t0.c2)==(t0.c2))))) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c2) AND (NULL))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c2  WHEN '1744404586' THEN t0.c2 END) BETWEEN (t0.c2) AND (((t0.c2)==(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) NOT BETWEEN (t0.c2) AND (NULL))) NOT NULL));
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c2  WHEN '1744404586' THEN t0.c2 END) BETWEEN (t0.c2) AND (((t0.c2)==(t0.c2))))) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c2) AND (NULL))) NOT NULL);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))>=(((vt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))>=(((vt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))>=(((vt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))>=(((vt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))>=(((vt0.c2) IS FALSE))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c2)) BETWEEN ((UNLIKELY(DISTINCT t0.c2))) AND ((((vt0.c0)OR(vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN ((UNLIKELY(DISTINCT t0.c2))) AND ((((vt0.c0)OR(vt0.c2)))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c2)) BETWEEN ((UNLIKELY(DISTINCT t0.c2))) AND ((((vt0.c0)OR(vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN ((UNLIKELY(DISTINCT t0.c2))) AND ((((vt0.c0)OR(vt0.c2)))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c2)) BETWEEN ((UNLIKELY(DISTINCT t0.c2))) AND ((((vt0.c0)OR(vt0.c2))))));
SELECT * FROM t0 INNER JOIN vt0 ON ((((((((CASE WHEN t0.c2 THEN vt0.c2 ELSE vt0.c2 END)AND(CAST(t0.c2 AS INTEGER))))OR(vt0.c1)))OR((- (t0.c2)))))AND(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)))) WHERE ((((NOT (t0.c2))) ISNULL)) ORDER BY ((vt0.c1) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c2))) ISNULL)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((((((CASE WHEN t0.c2 THEN vt0.c2 ELSE vt0.c2 END)AND(CAST(t0.c2 AS INTEGER))))OR(vt0.c1)))OR((- (t0.c2)))))AND(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)))) ORDER BY ((vt0.c1) NOT NULL) DESC);
SELECT * FROM t0 INNER JOIN vt0 ON ((((((((CASE WHEN t0.c2 THEN vt0.c2 ELSE vt0.c2 END)AND(CAST(t0.c2 AS INTEGER))))OR(vt0.c1)))OR((- (t0.c2)))))AND(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)))) WHERE ((((NOT (t0.c2))) ISNULL)) ORDER BY ((vt0.c1) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c2))) ISNULL)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((((((CASE WHEN t0.c2 THEN vt0.c2 ELSE vt0.c2 END)AND(CAST(t0.c2 AS INTEGER))))OR(vt0.c1)))OR((- (t0.c2)))))AND(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)))) ORDER BY ((vt0.c1) NOT NULL) DESC);
SELECT * FROM t0 INNER JOIN vt0 ON ((((((((CASE WHEN t0.c2 THEN vt0.c2 ELSE vt0.c2 END)AND(CAST(t0.c2 AS INTEGER))))OR(vt0.c1)))OR((- (t0.c2)))))AND(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)))) WHERE ((((NOT (t0.c2))) ISNULL)) ORDER BY ((vt0.c1) NOT NULL) DESC;
SELECT * FROM t0, vt0 WHERE (((t0.c2)IS NOT(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)IS NOT(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c2)IS NOT(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)IS NOT(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c2)IS NOT(vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE CAST(x'' AS NUMERIC)  WHEN (- (vt0.c0)) THEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(x'' AS NUMERIC)  WHEN (- (vt0.c0)) THEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE CAST(x'' AS NUMERIC)  WHEN (- (vt0.c0)) THEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(x'' AS NUMERIC)  WHEN (- (vt0.c0)) THEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE CAST(x'' AS NUMERIC)  WHEN (- (vt0.c0)) THEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) ELSE (vt0.c0 IN ()) END);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c2)) BETWEEN ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE t0.c2 END)) AND ((((((vt0.c1)OR(0.17901355235633076)))AND(vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) BETWEEN ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE t0.c2 END)) AND ((((((vt0.c1)OR(0.17901355235633076)))AND(vt0.c2)))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c2)) BETWEEN ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE t0.c2 END)) AND ((((((vt0.c1)OR(0.17901355235633076)))AND(vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) BETWEEN ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE t0.c2 END)) AND ((((((vt0.c1)OR(0.17901355235633076)))AND(vt0.c2)))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c2)) BETWEEN ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE t0.c2 END)) AND ((((((vt0.c1)OR(0.17901355235633076)))AND(vt0.c2))))));
SELECT * FROM vt0 WHERE ((((vt0.c1, vt0.c1 COLLATE BINARY, ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c1))))<>(((+ (vt0.c1)), x'0841' COLLATE RTRIM, (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1 COLLATE BINARY, ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c1))))<>(((+ (vt0.c1)), x'0841' COLLATE RTRIM, (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1, vt0.c1 COLLATE BINARY, ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c1))))<>(((+ (vt0.c1)), x'0841' COLLATE RTRIM, (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1 COLLATE BINARY, ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c1))))<>(((+ (vt0.c1)), x'0841' COLLATE RTRIM, (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1, vt0.c1 COLLATE BINARY, ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c1))))<>(((+ (vt0.c1)), x'0841' COLLATE RTRIM, (vt0.c0 IN ())))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c2)))*(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c2)))*(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c2)))*(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c2)))*(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c2)))*(vt0.c0)));
SELECT * FROM vt0, t0 WHERE (((((vt0.c2) IS FALSE)) IS TRUE)) ORDER BY ((t0.c2) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c2) IS TRUE)  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((vt0.c2) IS FALSE)) IS TRUE)) ORDER BY ((t0.c2) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c2) IS TRUE)  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((vt0.c2) IS FALSE)) IS TRUE)) ORDER BY ((t0.c2) IS TRUE)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT ALL * FROM vt0 WHERE (((0.3353052408582965)>=(((vt0.c2) NOT NULL)))) ORDER BY IFNULL(((vt0.c1) NOTNULL), CASE WHEN vt0.c0 THEN vt0.c1 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.3353052408582965)>=(((vt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(((vt0.c1) NOTNULL), CASE WHEN vt0.c0 THEN vt0.c1 END) DESC);
SELECT ALL * FROM vt0 WHERE (((0.3353052408582965)>=(((vt0.c2) NOT NULL)))) ORDER BY IFNULL(((vt0.c1) NOTNULL), CASE WHEN vt0.c0 THEN vt0.c1 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.3353052408582965)>=(((vt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(((vt0.c1) NOTNULL), CASE WHEN vt0.c0 THEN vt0.c1 END) DESC);
SELECT ALL * FROM vt0 WHERE (((0.3353052408582965)>=(((vt0.c2) NOT NULL)))) ORDER BY IFNULL(((vt0.c1) NOTNULL), CASE WHEN vt0.c0 THEN vt0.c1 END) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c1)<(vt0.c0)))) ORDER BY (- ((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((vt0.c1)<(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (- ((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c1)<(vt0.c0)))) ORDER BY (- ((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((vt0.c1)<(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (- ((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c1)<(vt0.c0)))) ORDER BY (- ((NOT (vt0.c0))));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((vt0.c1)<=((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<=((- (vt0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((vt0.c1)<=((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<=((- (vt0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((vt0.c1)<=((- (vt0.c1)))));
SELECT COUNT(*) FROM t0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((x'' IN ()));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c2)IS NOT((~ (t0.c2)))), (~ (((t0.c2)&(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2)IS NOT((~ (t0.c2)))), (~ (((t0.c2)&(t0.c2)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c2)IS NOT((~ (t0.c2)))), (~ (((t0.c2)&(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2)IS NOT((~ (t0.c2)))), (~ (((t0.c2)&(t0.c2)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c2)IS NOT((~ (t0.c2)))), (~ (((t0.c2)&(t0.c2)))) DESC;
SELECT * FROM t0 WHERE (((((t0.c2)%(t0.c2))) BETWEEN (((((t0.c2)OR(t0.c2)))AND(t0.c2))) AND ((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)%(t0.c2))) BETWEEN (((((t0.c2)OR(t0.c2)))AND(t0.c2))) AND ((NOT (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2)%(t0.c2))) BETWEEN (((((t0.c2)OR(t0.c2)))AND(t0.c2))) AND ((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)%(t0.c2))) BETWEEN (((((t0.c2)OR(t0.c2)))AND(t0.c2))) AND ((NOT (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2)%(t0.c2))) BETWEEN (((((t0.c2)OR(t0.c2)))AND(t0.c2))) AND ((NOT (t0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))/(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))/(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))/(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))/(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))/(vt0.c1)));
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c2)) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))IS NOT(CASE t0.c2  WHEN NULL THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))IS NOT(CASE t0.c2  WHEN NULL THEN t0.c2 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))IS NOT(CASE t0.c2  WHEN NULL THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))IS NOT(CASE t0.c2  WHEN NULL THEN t0.c2 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))IS NOT(CASE t0.c2  WHEN NULL THEN t0.c2 END)));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((+ (vt0.c2)))) AND ((vt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((+ (vt0.c2)))) AND ((vt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((+ (vt0.c2)))) AND ((vt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((+ (vt0.c2)))) AND ((vt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((+ (vt0.c2)))) AND ((vt0.c1 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c2))>=((vt0.c0, vt0.c1, vt0.c2))) IN (vt0.c1 COLLATE BINARY))) ORDER BY ((vt0.c2)GLOB(vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c0, vt0.c2))>=((vt0.c0, vt0.c1, vt0.c2))) IN (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2)GLOB(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c2))>=((vt0.c0, vt0.c1, vt0.c2))) IN (vt0.c1 COLLATE BINARY))) ORDER BY ((vt0.c2)GLOB(vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c0, vt0.c2))>=((vt0.c0, vt0.c1, vt0.c2))) IN (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2)GLOB(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c2))>=((vt0.c0, vt0.c1, vt0.c2))) IN (vt0.c1 COLLATE BINARY))) ORDER BY ((vt0.c2)GLOB(vt0.c0)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2)>(vt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c2)>(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2)>(vt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c2)>(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2)>(vt0.c2)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)) ORDER BY LOWER(((vt0.c1)>>(vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY LOWER(((vt0.c1)>>(vt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)) ORDER BY LOWER(((vt0.c1)>>(vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY LOWER(((vt0.c1)>>(vt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)) ORDER BY LOWER(((vt0.c1)>>(vt0.c1))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN NULL THEN t0.c2 END IN ())) ORDER BY CASE WHEN (((t0.c2, t0.c2, t0.c2))>((NULL, '0.1711374401441068', t0.c2))) THEN CAST(t0.c2 AS BLOB) END, CASE ((t0.c2)+(t0.c2))  WHEN ((((t0.c2)OR(t0.c2)))OR(t0.c2)) THEN TIME(t0.c2, NULL, t0.c2, t0.c2, t0.c2) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN NULL THEN t0.c2 END IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (((t0.c2, t0.c2, t0.c2))>((NULL, '0.1711374401441068', t0.c2))) THEN CAST(t0.c2 AS BLOB) END, CASE ((t0.c2)+(t0.c2))  WHEN ((((t0.c2)OR(t0.c2)))OR(t0.c2)) THEN TIME(t0.c2, NULL, t0.c2, t0.c2, t0.c2) END  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN NULL THEN t0.c2 END IN ())) ORDER BY CASE WHEN (((t0.c2, t0.c2, t0.c2))>((NULL, '0.1711374401441068', t0.c2))) THEN CAST(t0.c2 AS BLOB) END, CASE ((t0.c2)+(t0.c2))  WHEN ((((t0.c2)OR(t0.c2)))OR(t0.c2)) THEN TIME(t0.c2, NULL, t0.c2, t0.c2, t0.c2) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN NULL THEN t0.c2 END IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (((t0.c2, t0.c2, t0.c2))>((NULL, '0.1711374401441068', t0.c2))) THEN CAST(t0.c2 AS BLOB) END, CASE ((t0.c2)+(t0.c2))  WHEN ((((t0.c2)OR(t0.c2)))OR(t0.c2)) THEN TIME(t0.c2, NULL, t0.c2, t0.c2, t0.c2) END  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN NULL THEN t0.c2 END IN ())) ORDER BY CASE WHEN (((t0.c2, t0.c2, t0.c2))>((NULL, '0.1711374401441068', t0.c2))) THEN CAST(t0.c2 AS BLOB) END, CASE ((t0.c2)+(t0.c2))  WHEN ((((t0.c2)OR(t0.c2)))OR(t0.c2)) THEN TIME(t0.c2, NULL, t0.c2, t0.c2, t0.c2) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((json_type(vt0.c0)) BETWEEN (vt0.c0) AND ((((('-294927')OR(vt0.c2)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_type(vt0.c0)) BETWEEN (vt0.c0) AND ((((('-294927')OR(vt0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((json_type(vt0.c0)) BETWEEN (vt0.c0) AND ((((('-294927')OR(vt0.c2)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_type(vt0.c0)) BETWEEN (vt0.c0) AND ((((('-294927')OR(vt0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((json_type(vt0.c0)) BETWEEN (vt0.c0) AND ((((('-294927')OR(vt0.c2)))OR(vt0.c0)))));
SELECT ALL * FROM t0 WHERE (((((t0.c2)|('629766534'))) BETWEEN (QUOTE(t0.c2)) AND (((((t0.c2)AND('0.4356286252668581')))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)|('629766534'))) BETWEEN (QUOTE(t0.c2)) AND (((((t0.c2)AND('0.4356286252668581')))AND(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c2)|('629766534'))) BETWEEN (QUOTE(t0.c2)) AND (((((t0.c2)AND('0.4356286252668581')))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)|('629766534'))) BETWEEN (QUOTE(t0.c2)) AND (((((t0.c2)AND('0.4356286252668581')))AND(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c2)|('629766534'))) BETWEEN (QUOTE(t0.c2)) AND (((((t0.c2)AND('0.4356286252668581')))AND(t0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT ALL COUNT(*) FROM t0 WHERE ((- (LIKELIHOOD(t0.c2, 0.11015990037064827)))) ORDER BY ((((((((CASE t0.c2  WHEN t0.c2 THEN t0.c2 END)OR((t0.c2 IN (t0.c2, t0.c2)))))OR(((t0.c2) ISNULL))))OR(((0x4698df00) NOTNULL))))OR(((NULL)IS(t0.c2))));
SELECT SUM(count) FROM (SELECT (((- (LIKELIHOOD(t0.c2, 0.11015990037064827)))) IS TRUE)  as count FROM t0 ORDER BY ((((((((CASE t0.c2  WHEN t0.c2 THEN t0.c2 END)OR((t0.c2 IN (t0.c2, t0.c2)))))OR(((t0.c2) ISNULL))))OR(((0X4698df00) NOTNULL))))OR(((NULL)IS(t0.c2)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((- (LIKELIHOOD(t0.c2, 0.11015990037064827)))) ORDER BY ((((((((CASE t0.c2  WHEN t0.c2 THEN t0.c2 END)OR((t0.c2 IN (t0.c2, t0.c2)))))OR(((t0.c2) ISNULL))))OR(((0x4698df00) NOTNULL))))OR(((NULL)IS(t0.c2))));
SELECT SUM(count) FROM (SELECT (((- (LIKELIHOOD(t0.c2, 0.11015990037064827)))) IS TRUE)  as count FROM t0 ORDER BY ((((((((CASE t0.c2  WHEN t0.c2 THEN t0.c2 END)OR((t0.c2 IN (t0.c2, t0.c2)))))OR(((t0.c2) ISNULL))))OR(((0X4698df00) NOTNULL))))OR(((NULL)IS(t0.c2)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((- (LIKELIHOOD(t0.c2, 0.11015990037064827)))) ORDER BY ((((((((CASE t0.c2  WHEN t0.c2 THEN t0.c2 END)OR((t0.c2 IN (t0.c2, t0.c2)))))OR(((t0.c2) ISNULL))))OR(((0x4698df00) NOTNULL))))OR(((NULL)IS(t0.c2))));
SELECT ALL * FROM t0 WHERE (CASE NULL  WHEN CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c2) IS TRUE) WHEN ((t0.c2)LIKE(t0.c2)) THEN ((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))AND(t0.c2)) WHEN '-472075634' THEN ((((t0.c2)OR(t0.c2)))OR(t0.c2)) ELSE ((t0.c2)<(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c2) IS TRUE) WHEN ((t0.c2)LIKE(t0.c2)) THEN ((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))AND(t0.c2)) WHEN '-472075634' THEN ((((t0.c2)OR(t0.c2)))OR(t0.c2)) ELSE ((t0.c2)<(t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE NULL  WHEN CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c2) IS TRUE) WHEN ((t0.c2)LIKE(t0.c2)) THEN ((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))AND(t0.c2)) WHEN '-472075634' THEN ((((t0.c2)OR(t0.c2)))OR(t0.c2)) ELSE ((t0.c2)<(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c2) IS TRUE) WHEN ((t0.c2)LIKE(t0.c2)) THEN ((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))AND(t0.c2)) WHEN '-472075634' THEN ((((t0.c2)OR(t0.c2)))OR(t0.c2)) ELSE ((t0.c2)<(t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE NULL  WHEN CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c2) IS TRUE) WHEN ((t0.c2)LIKE(t0.c2)) THEN ((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))AND(t0.c2)) WHEN '-472075634' THEN ((((t0.c2)OR(t0.c2)))OR(t0.c2)) ELSE ((t0.c2)<(t0.c2)) END);
SELECT ALL * FROM t0, vt0 WHERE (t0.c2) ORDER BY (((x'd818') IS FALSE) IN (vt0.c2 COLLATE NOCASE, CASE WHEN vt0.c1 THEN t0.c2 END)), (((((((((vt0.c1 IN ()))OR((((vt0.c2, vt0.c2, vt0.c2))>((t0.c2, vt0.c0, t0.c2))))))AND((NOT (t0.c2)))))OR(((vt0.c2) NOT NULL))))AND(((vt0.c2)+(vt0.c0))))  NULLS FIRST, (((((x'c8e0' IN ()))AND((- (t0.c2)))))OR(vt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY (((x'd818') IS FALSE) IN (vt0.c2 COLLATE NOCASE, CASE WHEN vt0.c1 THEN t0.c2 END)), (((((((((vt0.c1 IN ()))OR((((vt0.c2, vt0.c2, vt0.c2))>((t0.c2, vt0.c0, t0.c2))))))AND((NOT (t0.c2)))))OR(((vt0.c2) NOT NULL))))AND(((vt0.c2)+(vt0.c0))))  NULLS FIRST, (((((x'c8e0' IN ()))AND((- (t0.c2)))))OR(vt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM t0, vt0 WHERE (t0.c2) ORDER BY (((x'd818') IS FALSE) IN (vt0.c2 COLLATE NOCASE, CASE WHEN vt0.c1 THEN t0.c2 END)), (((((((((vt0.c1 IN ()))OR((((vt0.c2, vt0.c2, vt0.c2))>((t0.c2, vt0.c0, t0.c2))))))AND((NOT (t0.c2)))))OR(((vt0.c2) NOT NULL))))AND(((vt0.c2)+(vt0.c0))))  NULLS FIRST, (((((x'c8e0' IN ()))AND((- (t0.c2)))))OR(vt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY (((x'd818') IS FALSE) IN (vt0.c2 COLLATE NOCASE, CASE WHEN vt0.c1 THEN t0.c2 END)), (((((((((vt0.c1 IN ()))OR((((vt0.c2, vt0.c2, vt0.c2))>((t0.c2, vt0.c0, t0.c2))))))AND((NOT (t0.c2)))))OR(((vt0.c2) NOT NULL))))AND(((vt0.c2)+(vt0.c0))))  NULLS FIRST, (((((x'c8e0' IN ()))AND((- (t0.c2)))))OR(vt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM t0, vt0 WHERE (t0.c2) ORDER BY (((x'd818') IS FALSE) IN (vt0.c2 COLLATE NOCASE, CASE WHEN vt0.c1 THEN t0.c2 END)), (((((((((vt0.c1 IN ()))OR((((vt0.c2, vt0.c2, vt0.c2))>((t0.c2, vt0.c0, t0.c2))))))AND((NOT (t0.c2)))))OR(((vt0.c2) NOT NULL))))AND(((vt0.c2)+(vt0.c0))))  NULLS FIRST, (((((x'c8e0' IN ()))AND((- (t0.c2)))))OR(vt0.c1 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) ISNULL)) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) ISNULL)) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2) ISNULL)) ISNULL));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE vt0.c2  WHEN ((vt0.c1)==(t0.c2)) THEN '316313428' ELSE ((t0.c2)GLOB(vt0.c2)) END WHERE (((((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (((vt0.c1)<(vt0.c2))) AND (((((0Xfffffffff78823d4)OR(vt0.c1)))OR(vt0.c2))))) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (((vt0.c1)<(vt0.c2))) AND (((((0xfffffffff78823d4)OR(vt0.c1)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE vt0.c2  WHEN ((vt0.c1)=(t0.c2)) THEN '316313428' ELSE ((t0.c2)GLOB(vt0.c2)) END ORDER BY t0.c2 DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE vt0.c2  WHEN ((vt0.c1)==(t0.c2)) THEN '316313428' ELSE ((t0.c2)GLOB(vt0.c2)) END WHERE (((((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (((vt0.c1)<(vt0.c2))) AND (((((0Xfffffffff78823d4)OR(vt0.c1)))OR(vt0.c2))))) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (((vt0.c1)<(vt0.c2))) AND (((((0xfffffffff78823d4)OR(vt0.c1)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE vt0.c2  WHEN ((vt0.c1)=(t0.c2)) THEN '316313428' ELSE ((t0.c2)GLOB(vt0.c2)) END ORDER BY t0.c2 DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE vt0.c2  WHEN ((vt0.c1)==(t0.c2)) THEN '316313428' ELSE ((t0.c2)GLOB(vt0.c2)) END WHERE (((((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (((vt0.c1)<(vt0.c2))) AND (((((0Xfffffffff78823d4)OR(vt0.c1)))OR(vt0.c2))))) ORDER BY t0.c2 DESC;
SELECT * FROM t0 WHERE (CAST(((0.010537126401235608) BETWEEN (t0.c2) AND (t0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.010537126401235608) BETWEEN (t0.c2) AND (t0.c2)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((0.010537126401235608) BETWEEN (t0.c2) AND (t0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.010537126401235608) BETWEEN (t0.c2) AND (t0.c2)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((0.010537126401235608) BETWEEN (t0.c2) AND (t0.c2)) AS INTEGER));
SELECT ALL * FROM vt0, t0 WHERE ((((((0xffffffffc6b25558))!=((vt0.c2)))) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ORDER BY ((('p.' IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((((0Xffffffffc6b25558))<>((vt0.c2)))) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((('p.' IN ())) IS TRUE));
SELECT ALL * FROM vt0, t0 WHERE ((((((0xffffffffc6b25558))!=((vt0.c2)))) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ORDER BY ((('p.' IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((((0Xffffffffc6b25558))<>((vt0.c2)))) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((('p.' IN ())) IS TRUE));
SELECT ALL * FROM vt0, t0 WHERE ((((((0xffffffffc6b25558))!=((vt0.c2)))) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ORDER BY ((('p.' IN ())) IS TRUE);
SELECT * FROM vt0, t0 WHERE (((((HEX(vt0.c0))OR(((vt0.c0) IS FALSE))))AND(((((vt0.c1)OR(vt0.c2)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(vt0.c0))OR(((vt0.c0) IS FALSE))))AND(((((vt0.c1)OR(vt0.c2)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((HEX(vt0.c0))OR(((vt0.c0) IS FALSE))))AND(((((vt0.c1)OR(vt0.c2)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(vt0.c0))OR(((vt0.c0) IS FALSE))))AND(((((vt0.c1)OR(vt0.c2)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((HEX(vt0.c0))OR(((vt0.c0) IS FALSE))))AND(((((vt0.c1)OR(vt0.c2)))OR(vt0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY ((((((t0.c2)AND(t0.c2)))OR(t0.c2))) IS TRUE), t0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2)AND(t0.c2)))OR(t0.c2))) IS TRUE), t0.c2 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY ((((((t0.c2)AND(t0.c2)))OR(t0.c2))) IS TRUE), t0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2)AND(t0.c2)))OR(t0.c2))) IS TRUE), t0.c2 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY ((((((t0.c2)AND(t0.c2)))OR(t0.c2))) IS TRUE), t0.c2 DESC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((t0.c2 COLLATE BINARY)) AND ((LIKE(NULL, vt0.c0, 'p'))))) ORDER BY (NOT (vt0.c2)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN ((t0.c2 COLLATE BINARY)) AND ((LIKE(NULL, vt0.c0, 'p'))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (vt0.c2)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((t0.c2 COLLATE BINARY)) AND ((LIKE(NULL, vt0.c0, 'p'))))) ORDER BY (NOT (vt0.c2)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN ((t0.c2 COLLATE BINARY)) AND ((LIKE(NULL, vt0.c0, 'p'))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (vt0.c2)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((t0.c2 COLLATE BINARY)) AND ((LIKE(NULL, vt0.c0, 'p'))))) ORDER BY (NOT (vt0.c2)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE ((t0.c2 COLLATE BINARY IN ())) ORDER BY ((((vt0.c0)<<(vt0.c1))) BETWEEN ((((vt0.c1, vt0.c2, vt0.c1, vt0.c2, vt0.c0))>((vt0.c1, vt0.c2, t0.c2, t0.c2, t0.c2)))) AND (x'b778')) ASC;
SELECT SUM(count) FROM (SELECT (((t0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)<<(vt0.c1))) BETWEEN ((((vt0.c1, vt0.c2, vt0.c1, vt0.c2, vt0.c0))>((vt0.c1, vt0.c2, t0.c2, t0.c2, t0.c2)))) AND (x'b778')) ASC);
SELECT ALL * FROM t0, vt0 WHERE ((t0.c2 COLLATE BINARY IN ())) ORDER BY ((((vt0.c0)<<(vt0.c1))) BETWEEN ((((vt0.c1, vt0.c2, vt0.c1, vt0.c2, vt0.c0))>((vt0.c1, vt0.c2, t0.c2, t0.c2, t0.c2)))) AND (x'b778')) ASC;
SELECT SUM(count) FROM (SELECT (((t0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)<<(vt0.c1))) BETWEEN ((((vt0.c1, vt0.c2, vt0.c1, vt0.c2, vt0.c0))>((vt0.c1, vt0.c2, t0.c2, t0.c2, t0.c2)))) AND (x'b778')) ASC);
SELECT ALL * FROM t0, vt0 WHERE ((t0.c2 COLLATE BINARY IN ())) ORDER BY ((((vt0.c0)<<(vt0.c1))) BETWEEN ((((vt0.c1, vt0.c2, vt0.c1, vt0.c2, vt0.c0))>((vt0.c1, vt0.c2, t0.c2, t0.c2, t0.c2)))) AND (x'b778')) ASC;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN (((((((((t0.c2)AND('꒩?\vDSd')))AND(t0.c2)))OR(t0.c2)))OR(t0.c2))) AND (t0.c2))) ORDER BY CASE CAST(t0.c2 AS INTEGER)  WHEN ((((t0.c2)OR(t0.c2)))AND(t0.c2)) THEN json_quote(NULL) ELSE (((t0.c2)) BETWEEN ((t0.c2)) AND ((x''))) END  NULLS LAST, ((((((((((t0.c2)<(t0.c2)))OR(((t0.c2) NOT BETWEEN (x'') AND (t0.c2)))))OR(((t0.c2) NOT NULL))))AND(t0.c2)))AND(COALESCE(t0.c2, 0Xffffffff8d5a3cee, t0.c2, t0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN (((((((((t0.c2)AND('꒩?\vDSd')))AND(t0.c2)))OR(t0.c2)))OR(t0.c2))) AND (t0.c2))) IS TRUE)  as count FROM t0 ORDER BY CASE CAST(t0.c2 AS INTEGER)  WHEN ((((t0.c2)OR(t0.c2)))AND(t0.c2)) THEN json_quote(NULL) ELSE (((t0.c2)) BETWEEN ((t0.c2)) AND ((x''))) END  NULLS LAST, ((((((((((t0.c2)<(t0.c2)))OR(((t0.c2) NOT BETWEEN (x'') AND (t0.c2)))))OR(((t0.c2) NOT NULL))))AND(t0.c2)))AND(COALESCE(t0.c2, 0Xffffffff8d5a3cee, t0.c2, t0.c2)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN (((((((((t0.c2)AND('꒩?\vDSd')))AND(t0.c2)))OR(t0.c2)))OR(t0.c2))) AND (t0.c2))) ORDER BY CASE CAST(t0.c2 AS INTEGER)  WHEN ((((t0.c2)OR(t0.c2)))AND(t0.c2)) THEN json_quote(NULL) ELSE (((t0.c2)) BETWEEN ((t0.c2)) AND ((x''))) END  NULLS LAST, ((((((((((t0.c2)<(t0.c2)))OR(((t0.c2) NOT BETWEEN (x'') AND (t0.c2)))))OR(((t0.c2) NOT NULL))))AND(t0.c2)))AND(COALESCE(t0.c2, 0Xffffffff8d5a3cee, t0.c2, t0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN (((((((((t0.c2)AND('꒩?\vDSd')))AND(t0.c2)))OR(t0.c2)))OR(t0.c2))) AND (t0.c2))) IS TRUE)  as count FROM t0 ORDER BY CASE CAST(t0.c2 AS INTEGER)  WHEN ((((t0.c2)OR(t0.c2)))AND(t0.c2)) THEN json_quote(NULL) ELSE (((t0.c2)) BETWEEN ((t0.c2)) AND ((x''))) END  NULLS LAST, ((((((((((t0.c2)<(t0.c2)))OR(((t0.c2) NOT BETWEEN (x'') AND (t0.c2)))))OR(((t0.c2) NOT NULL))))AND(t0.c2)))AND(COALESCE(t0.c2, 0Xffffffff8d5a3cee, t0.c2, t0.c2)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN (((((((((t0.c2)AND('꒩?\vDSd')))AND(t0.c2)))OR(t0.c2)))OR(t0.c2))) AND (t0.c2))) ORDER BY CASE CAST(t0.c2 AS INTEGER)  WHEN ((((t0.c2)OR(t0.c2)))AND(t0.c2)) THEN json_quote(NULL) ELSE (((t0.c2)) BETWEEN ((t0.c2)) AND ((x''))) END  NULLS LAST, ((((((((((t0.c2)<(t0.c2)))OR(((t0.c2) NOT BETWEEN (x'') AND (t0.c2)))))OR(((t0.c2) NOT NULL))))AND(t0.c2)))AND(COALESCE(t0.c2, 0Xffffffff8d5a3cee, t0.c2, t0.c2)))  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON vt0.c2 WHERE (0Xffffffff8fa5871c);
SELECT SUM(count) FROM (SELECT ((0xffffffff8fa5871c) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON vt0.c2);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON vt0.c2 WHERE (0Xffffffff8fa5871c);
SELECT SUM(count) FROM (SELECT ((0xffffffff8fa5871c) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON vt0.c2);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON vt0.c2 WHERE (0Xffffffff8fa5871c);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c2 IN ())  WHEN ((NULL) IS TRUE) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END ELSE (vt0.c1 IN (vt0.c1)) END) ORDER BY (- (HEX(DISTINCT -1.259251449E9)));
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c2 IN ())  WHEN ((NULL) IS TRUE) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END ELSE (vt0.c1 IN (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (- (HEX(DISTINCT -1.259251449E9))));
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c2 IN ())  WHEN ((NULL) IS TRUE) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END ELSE (vt0.c1 IN (vt0.c1)) END) ORDER BY (- (HEX(DISTINCT -1.259251449E9)));
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c2 IN ())  WHEN ((NULL) IS TRUE) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END ELSE (vt0.c1 IN (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (- (HEX(DISTINCT -1.259251449E9))));
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c2 IN ())  WHEN ((NULL) IS TRUE) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END ELSE (vt0.c1 IN (vt0.c1)) END) ORDER BY (- (HEX(DISTINCT -1.259251449E9)));
SELECT ALL * FROM vt0, t0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c2 THEN t0.c2 WHEN t0.c2 THEN vt0.c1 WHEN t0.c2 THEN t0.c2 END)>((vt0.c0 IN (vt0.c1, vt0.c0))))) ORDER BY (((t0.c2))==((vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c2 THEN t0.c2 WHEN t0.c2 THEN vt0.c1 WHEN t0.c2 THEN t0.c2 END)>((vt0.c0 IN (vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c2))=((vt0.c1))));
SELECT ALL * FROM vt0, t0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c2 THEN t0.c2 WHEN t0.c2 THEN vt0.c1 WHEN t0.c2 THEN t0.c2 END)>((vt0.c0 IN (vt0.c1, vt0.c0))))) ORDER BY (((t0.c2))==((vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c2 THEN t0.c2 WHEN t0.c2 THEN vt0.c1 WHEN t0.c2 THEN t0.c2 END)>((vt0.c0 IN (vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c2))=((vt0.c1))));
SELECT ALL * FROM vt0, t0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c2 THEN t0.c2 WHEN t0.c2 THEN vt0.c1 WHEN t0.c2 THEN t0.c2 END)>((vt0.c0 IN (vt0.c1, vt0.c0))))) ORDER BY (((t0.c2))==((vt0.c1)));
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN (vt0.c2 IN (vt0.c0)) THEN ((vt0.c2) ISNULL) WHEN (NOT (vt0.c2)) THEN UPPER(vt0.c1) WHEN (0.319073946882907 IN ()) THEN LIKELY(DISTINCT vt0.c1) ELSE ((t0.c2) BETWEEN (NULL) AND ('V2VL䪉')) END) ORDER BY (((t0.c2)) NOT BETWEEN ((((vt0.c2) NOTNULL))) AND ((((((t0.c2)AND('Lc')))OR(vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c2 IN (vt0.c0)) THEN ((vt0.c2) ISNULL) WHEN (NOT (vt0.c2)) THEN UPPER(vt0.c1) WHEN (0.319073946882907 IN ()) THEN LIKELY(DISTINCT vt0.c1) ELSE ((t0.c2) BETWEEN (NULL) AND ('V2VL䪉')) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c2)) NOT BETWEEN ((((vt0.c2) NOTNULL))) AND ((((((t0.c2)AND('Lc')))OR(vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN (vt0.c2 IN (vt0.c0)) THEN ((vt0.c2) ISNULL) WHEN (NOT (vt0.c2)) THEN UPPER(vt0.c1) WHEN (0.319073946882907 IN ()) THEN LIKELY(DISTINCT vt0.c1) ELSE ((t0.c2) BETWEEN (NULL) AND ('V2VL䪉')) END) ORDER BY (((t0.c2)) NOT BETWEEN ((((vt0.c2) NOTNULL))) AND ((((((t0.c2)AND('Lc')))OR(vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c2 IN (vt0.c0)) THEN ((vt0.c2) ISNULL) WHEN (NOT (vt0.c2)) THEN UPPER(vt0.c1) WHEN (0.319073946882907 IN ()) THEN LIKELY(DISTINCT vt0.c1) ELSE ((t0.c2) BETWEEN (NULL) AND ('V2VL䪉')) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c2)) NOT BETWEEN ((((vt0.c2) NOTNULL))) AND ((((((t0.c2)AND('Lc')))OR(vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN (vt0.c2 IN (vt0.c0)) THEN ((vt0.c2) ISNULL) WHEN (NOT (vt0.c2)) THEN UPPER(vt0.c1) WHEN (0.319073946882907 IN ()) THEN LIKELY(DISTINCT vt0.c1) ELSE ((t0.c2) BETWEEN (NULL) AND ('V2VL䪉')) END) ORDER BY (((t0.c2)) NOT BETWEEN ((((vt0.c2) NOTNULL))) AND ((((((t0.c2)AND('Lc')))OR(vt0.c0))))) DESC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (CASE WHEN ((t0.c2) NOTNULL) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE t0.c2 END END) ORDER BY ((((vt0.c0)|(vt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2) NOTNULL) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE t0.c2 END END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)|(vt0.c0))) NOT NULL)  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (CASE WHEN ((t0.c2) NOTNULL) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE t0.c2 END END) ORDER BY ((((vt0.c0)|(vt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2) NOTNULL) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE t0.c2 END END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)|(vt0.c0))) NOT NULL)  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (CASE WHEN ((t0.c2) NOTNULL) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE t0.c2 END END) ORDER BY ((((vt0.c0)|(vt0.c0))) NOT NULL)  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE ((vt0.c1 COLLATE NOCASE IN ())) ORDER BY ((((((t0.c2)AND(vt0.c1)))AND(NULL))) IS FALSE), ((t0.c2)-((~ (vt0.c2)))) DESC, CASE vt0.c1  WHEN (vt0.c0 IN (x'')) THEN ('' IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c2)AND(vt0.c1)))AND(NULL))) IS FALSE), ((t0.c2)-((~ (vt0.c2)))) DESC, CASE vt0.c1  WHEN (vt0.c0 IN (x'')) THEN ('' IN ()) END  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((vt0.c1 COLLATE NOCASE IN ())) ORDER BY ((((((t0.c2)AND(vt0.c1)))AND(NULL))) IS FALSE), ((t0.c2)-((~ (vt0.c2)))) DESC, CASE vt0.c1  WHEN (vt0.c0 IN (x'')) THEN ('' IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c2)AND(vt0.c1)))AND(NULL))) IS FALSE), ((t0.c2)-((~ (vt0.c2)))) DESC, CASE vt0.c1  WHEN (vt0.c0 IN (x'')) THEN ('' IN ()) END  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((vt0.c1 COLLATE NOCASE IN ())) ORDER BY ((((((t0.c2)AND(vt0.c1)))AND(NULL))) IS FALSE), ((t0.c2)-((~ (vt0.c2)))) DESC, CASE vt0.c1  WHEN (vt0.c0 IN (x'')) THEN ('' IN ()) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((((((((((0Xffffffff863f2c48)AND((t0.c2 IN ()))))OR(((vt0.c2)GLOB(vt0.c2)))))AND(vt0.c1)))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))AND((vt0.c2 IN ()))))OR(vt0.c1 COLLATE RTRIM))) ORDER BY MIN(CASE vt0.c0  WHEN t0.c2 THEN vt0.c2 ELSE t0.c2 END, ABS(vt0.c2));
SELECT SUM(count) FROM (SELECT ((((((((((((((0Xffffffff863f2c48)AND((t0.c2 IN ()))))OR(((vt0.c2)GLOB(vt0.c2)))))AND(vt0.c1)))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))AND((vt0.c2 IN ()))))OR(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY MIN(CASE vt0.c0  WHEN t0.c2 THEN vt0.c2 ELSE t0.c2 END, ABS(vt0.c2)));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((((((((((0Xffffffff863f2c48)AND((t0.c2 IN ()))))OR(((vt0.c2)GLOB(vt0.c2)))))AND(vt0.c1)))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))AND((vt0.c2 IN ()))))OR(vt0.c1 COLLATE RTRIM))) ORDER BY MIN(CASE vt0.c0  WHEN t0.c2 THEN vt0.c2 ELSE t0.c2 END, ABS(vt0.c2));
SELECT SUM(count) FROM (SELECT ((((((((((((((0Xffffffff863f2c48)AND((t0.c2 IN ()))))OR(((vt0.c2)GLOB(vt0.c2)))))AND(vt0.c1)))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))AND((vt0.c2 IN ()))))OR(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY MIN(CASE vt0.c0  WHEN t0.c2 THEN vt0.c2 ELSE t0.c2 END, ABS(vt0.c2)));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((((((((((0Xffffffff863f2c48)AND((t0.c2 IN ()))))OR(((vt0.c2)GLOB(vt0.c2)))))AND(vt0.c1)))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))AND((vt0.c2 IN ()))))OR(vt0.c1 COLLATE RTRIM))) ORDER BY MIN(CASE vt0.c0  WHEN t0.c2 THEN vt0.c2 ELSE t0.c2 END, ABS(vt0.c2));
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (~ (vt0.c2)) THEN (((('-22533000')OR(t0.c2)))OR(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c2)) THEN (((('-22533000')OR(t0.c2)))OR(vt0.c1)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (~ (vt0.c2)) THEN (((('-22533000')OR(t0.c2)))OR(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c2)) THEN (((('-22533000')OR(t0.c2)))OR(vt0.c1)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (~ (vt0.c2)) THEN (((('-22533000')OR(t0.c2)))OR(vt0.c1)) END);
SELECT ALL * FROM t0, vt0 WHERE ((NULL IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((NULL IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((NULL IN ()) COLLATE RTRIM);
SELECT * FROM vt0, t0 WHERE (((vt0.c2 COLLATE RTRIM) NOTNULL)) ORDER BY '0.882788128876023' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY '0.882788128876023' DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((vt0.c2 COLLATE RTRIM) NOTNULL)) ORDER BY '0.882788128876023' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY '0.882788128876023' DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((vt0.c2 COLLATE RTRIM) NOTNULL)) ORDER BY '0.882788128876023' DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) AS INTEGER)) ORDER BY ((((((t0.c2)AND(t0.c2)))OR(t0.c2))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) AND (t0.c2)) DESC, ((t0.c2 COLLATE BINARY)LIKE(CAST(t0.c2 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2)AND(t0.c2)))OR(t0.c2))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) AND (t0.c2)) DESC, ((t0.c2 COLLATE BINARY)LIKE(CAST(t0.c2 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) AS INTEGER)) ORDER BY ((((((t0.c2)AND(t0.c2)))OR(t0.c2))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) AND (t0.c2)) DESC, ((t0.c2 COLLATE BINARY)LIKE(CAST(t0.c2 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2)AND(t0.c2)))OR(t0.c2))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) AND (t0.c2)) DESC, ((t0.c2 COLLATE BINARY)LIKE(CAST(t0.c2 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) AS INTEGER)) ORDER BY ((((((t0.c2)AND(t0.c2)))OR(t0.c2))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) AND (t0.c2)) DESC, ((t0.c2 COLLATE BINARY)LIKE(CAST(t0.c2 AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (CAST(((((t0.c2)OR(vt0.c1)))OR(t0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c2)OR(vt0.c1)))OR(t0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST(((((t0.c2)OR(vt0.c1)))OR(t0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c2)OR(vt0.c1)))OR(t0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST(((((t0.c2)OR(vt0.c1)))OR(t0.c2)) AS INTEGER));
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((vt0.c1) BETWEEN (x'902f') AND (vt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) BETWEEN (x'902f') AND (vt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((vt0.c1) BETWEEN (x'902f') AND (vt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) BETWEEN (x'902f') AND (vt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((vt0.c1) BETWEEN (x'902f') AND (vt0.c2)) AS NUMERIC));
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c2))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) AND (NULL))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c2))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) AND (NULL))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c2))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) AND (NULL)));
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN COALESCE(DISTINCT t0.c2, vt0.c1) THEN CAST(0Xffffffffe5150de3 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN COALESCE(DISTINCT t0.c2, vt0.c1) THEN CAST(0Xffffffffe5150de3 AS TEXT) END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN COALESCE(DISTINCT t0.c2, vt0.c1) THEN CAST(0Xffffffffe5150de3 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN COALESCE(DISTINCT t0.c2, vt0.c1) THEN CAST(0Xffffffffe5150de3 AS TEXT) END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN COALESCE(DISTINCT t0.c2, vt0.c1) THEN CAST(0Xffffffffe5150de3 AS TEXT) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c2 COLLATE NOCASE) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE NOCASE) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c2 COLLATE NOCASE) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE NOCASE) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c2 COLLATE NOCASE) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((vt0.c1 IN ()))));
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c2)&(vt0.c2))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)&(vt0.c2))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (vt0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c2)&(vt0.c2))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)&(vt0.c2))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (vt0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c2)&(vt0.c2))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (vt0.c0)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c2)OR(t0.c2))) NOT BETWEEN ('50' COLLATE BINARY) AND (vt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)OR(t0.c2))) NOT BETWEEN ('50' COLLATE BINARY) AND (vt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c2)OR(t0.c2))) NOT BETWEEN ('50' COLLATE BINARY) AND (vt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)OR(t0.c2))) NOT BETWEEN ('50' COLLATE BINARY) AND (vt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c2)OR(t0.c2))) NOT BETWEEN ('50' COLLATE BINARY) AND (vt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((((((vt0.c0)OR(vt0.c1)))AND(0.8061793353843354)))AND(((t0.c2)<=(t0.c2)))))AND(NULL))) ORDER BY vt0.c2, (~ (vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c1)))AND(0.8061793353843354)))AND(((t0.c2)<=(t0.c2)))))AND(NULL))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY vt0.c2, (~ (vt0.c0)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((((((vt0.c0)OR(vt0.c1)))AND(0.8061793353843354)))AND(((t0.c2)<=(t0.c2)))))AND(NULL))) ORDER BY vt0.c2, (~ (vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c1)))AND(0.8061793353843354)))AND(((t0.c2)<=(t0.c2)))))AND(NULL))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY vt0.c2, (~ (vt0.c0)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((((((vt0.c0)OR(vt0.c1)))AND(0.8061793353843354)))AND(((t0.c2)<=(t0.c2)))))AND(NULL))) ORDER BY vt0.c2, (~ (vt0.c0)) COLLATE NOCASE ASC;
SELECT * FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))*('688867268'))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))*('688867268'))) IS TRUE)  as count FROM t0 ORDER BY x'');
SELECT * FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))*('688867268'))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))*('688867268'))) IS TRUE)  as count FROM t0 ORDER BY x'');
SELECT * FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))*('688867268'))) ORDER BY x'';
SELECT * FROM vt0 WHERE ((~ (((((((((((((NULL)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((((((NULL)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (((((((((((((NULL)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((((((NULL)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (((((((((((((NULL)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c2)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(0.3831565701400751 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(0.3831565701400751 AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(0.3831565701400751 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(0.3831565701400751 AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(0.3831565701400751 AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c2) BETWEEN (NULL) AND (vt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) BETWEEN (NULL) AND (vt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c2) BETWEEN (NULL) AND (vt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) BETWEEN (NULL) AND (vt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c2) BETWEEN (NULL) AND (vt0.c2)) AS REAL));
SELECT ALL * FROM vt0, t0 WHERE ((+ ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((+ ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((+ ((- (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)))OR(vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)))OR(vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)))OR(vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)))OR(vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)))OR(vt0.c2)));
SELECT ALL * FROM vt0 WHERE ((((TYPEOF(DISTINCT vt0.c2)))=((((((396507508)OR(vt0.c0)))AND(vt0.c1)))))) ORDER BY ((((vt0.c2)AND(((vt0.c0)<(NULL)))))OR('~\r熺' COLLATE BINARY)), ((CAST(vt0.c1 AS BLOB)) IS FALSE)  NULLS FIRST, (- (vt0.c1)) COLLATE RTRIM ASC, vt0.c2;
SELECT SUM(count) FROM (SELECT (((((TYPEOF(DISTINCT vt0.c2)))=((((((396507508)OR(vt0.c0)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)AND(((vt0.c0)<(NULL)))))OR('~\r熺' COLLATE BINARY)), ((CAST(vt0.c1 AS BLOB)) IS FALSE)  NULLS FIRST, (- (vt0.c1)) COLLATE RTRIM ASC, vt0.c2);
SELECT ALL * FROM vt0 WHERE ((((TYPEOF(DISTINCT vt0.c2)))=((((((396507508)OR(vt0.c0)))AND(vt0.c1)))))) ORDER BY ((((vt0.c2)AND(((vt0.c0)<(NULL)))))OR('~\r熺' COLLATE BINARY)), ((CAST(vt0.c1 AS BLOB)) IS FALSE)  NULLS FIRST, (- (vt0.c1)) COLLATE RTRIM ASC, vt0.c2;
SELECT SUM(count) FROM (SELECT (((((TYPEOF(DISTINCT vt0.c2)))=((((((396507508)OR(vt0.c0)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)AND(((vt0.c0)<(NULL)))))OR('~\r熺' COLLATE BINARY)), ((CAST(vt0.c1 AS BLOB)) IS FALSE)  NULLS FIRST, (- (vt0.c1)) COLLATE RTRIM ASC, vt0.c2);
SELECT ALL * FROM vt0 WHERE ((((TYPEOF(DISTINCT vt0.c2)))=((((((396507508)OR(vt0.c0)))AND(vt0.c1)))))) ORDER BY ((((vt0.c2)AND(((vt0.c0)<(NULL)))))OR('~\r熺' COLLATE BINARY)), ((CAST(vt0.c1 AS BLOB)) IS FALSE)  NULLS FIRST, (- (vt0.c1)) COLLATE RTRIM ASC, vt0.c2;
SELECT * FROM vt0 WHERE (((vt0.c2 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)+(vt0.c1))) AND (((vt0.c0)>>(vt0.c1))))) ORDER BY (~ (((vt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)+(vt0.c1))) AND (((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c2) ISNULL))));
SELECT * FROM vt0 WHERE (((vt0.c2 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)+(vt0.c1))) AND (((vt0.c0)>>(vt0.c1))))) ORDER BY (~ (((vt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)+(vt0.c1))) AND (((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c2) ISNULL))));
SELECT * FROM vt0 WHERE (((vt0.c2 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)+(vt0.c1))) AND (((vt0.c0)>>(vt0.c1))))) ORDER BY (~ (((vt0.c2) ISNULL)));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)=(vt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)=(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)=(vt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)=(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)=(vt0.c2)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((vt0.c1)IS(vt0.c2)))|((+ (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS(vt0.c2)))|((+ (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)IS(vt0.c2)))|((+ (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS(vt0.c2)))|((+ (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)IS(vt0.c2)))|((+ (vt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c2  WHEN (vt0.c0 IN ()) THEN CASE WHEN NULL THEN vt0.c2 END WHEN ((((NULL)AND(vt0.c0)))OR(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c2  WHEN (vt0.c0 IN ()) THEN CASE WHEN NULL THEN vt0.c2 END WHEN ((((NULL)AND(vt0.c0)))OR(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c2  WHEN (vt0.c0 IN ()) THEN CASE WHEN NULL THEN vt0.c2 END WHEN ((((NULL)AND(vt0.c0)))OR(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c2  WHEN (vt0.c0 IN ()) THEN CASE WHEN NULL THEN vt0.c2 END WHEN ((((NULL)AND(vt0.c0)))OR(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c2  WHEN (vt0.c0 IN ()) THEN CASE WHEN NULL THEN vt0.c2 END WHEN ((((NULL)AND(vt0.c0)))OR(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 END);
SELECT * FROM t0 WHERE (((((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))AND(t0.c2)))AND(t0.c2))) NOT BETWEEN (((t0.c2) NOT NULL)) AND (NULL))) ORDER BY CAST(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))AND(t0.c2)))AND(t0.c2))) NOT BETWEEN (((t0.c2) NOT NULL)) AND (NULL))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) AS NUMERIC));
SELECT * FROM t0 WHERE (((((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))AND(t0.c2)))AND(t0.c2))) NOT BETWEEN (((t0.c2) NOT NULL)) AND (NULL))) ORDER BY CAST(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))AND(t0.c2)))AND(t0.c2))) NOT BETWEEN (((t0.c2) NOT NULL)) AND (NULL))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) AS NUMERIC));
SELECT * FROM t0 WHERE (((((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))AND(t0.c2)))AND(t0.c2))) NOT BETWEEN (((t0.c2) NOT NULL)) AND (NULL))) ORDER BY CAST(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) AS NUMERIC);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST((NOT (vt0.c2)) AS NUMERIC) WHERE (CASE ''  WHEN (((vt0.c1, '0.02837301256694036', vt0.c1))>((t0.c2, vt0.c2, t0.c2))) THEN (((vt0.c1))>((t0.c2))) ELSE vt0.c1 COLLATE NOCASE END) ORDER BY json_remove(((vt0.c2)=(NULL)), NULL, ((vt0.c2) NOTNULL), ((vt0.c2)IS(vt0.c0))) ASC, ((((vt0.c2)|(0.41244173358226854)))OR(TRIM(vt0.c2, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ''  WHEN (((vt0.c1, '0.02837301256694036', vt0.c1))>((t0.c2, vt0.c2, t0.c2))) THEN (((vt0.c1))>((t0.c2))) ELSE vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST((NOT (vt0.c2)) AS NUMERIC) ORDER BY json_remove(((vt0.c2)==(NULL)), NULL, ((vt0.c2) NOTNULL), ((vt0.c2)IS(vt0.c0))) ASC, ((((vt0.c2)|(0.41244173358226854)))OR(TRIM(vt0.c2, vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST((NOT (vt0.c2)) AS NUMERIC) WHERE (CASE ''  WHEN (((vt0.c1, '0.02837301256694036', vt0.c1))>((t0.c2, vt0.c2, t0.c2))) THEN (((vt0.c1))>((t0.c2))) ELSE vt0.c1 COLLATE NOCASE END) ORDER BY json_remove(((vt0.c2)=(NULL)), NULL, ((vt0.c2) NOTNULL), ((vt0.c2)IS(vt0.c0))) ASC, ((((vt0.c2)|(0.41244173358226854)))OR(TRIM(vt0.c2, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ''  WHEN (((vt0.c1, '0.02837301256694036', vt0.c1))>((t0.c2, vt0.c2, t0.c2))) THEN (((vt0.c1))>((t0.c2))) ELSE vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST((NOT (vt0.c2)) AS NUMERIC) ORDER BY json_remove(((vt0.c2)==(NULL)), NULL, ((vt0.c2) NOTNULL), ((vt0.c2)IS(vt0.c0))) ASC, ((((vt0.c2)|(0.41244173358226854)))OR(TRIM(vt0.c2, vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST((NOT (vt0.c2)) AS NUMERIC) WHERE (CASE ''  WHEN (((vt0.c1, '0.02837301256694036', vt0.c1))>((t0.c2, vt0.c2, t0.c2))) THEN (((vt0.c1))>((t0.c2))) ELSE vt0.c1 COLLATE NOCASE END) ORDER BY json_remove(((vt0.c2)=(NULL)), NULL, ((vt0.c2) NOTNULL), ((vt0.c2)IS(vt0.c0))) ASC, ((((vt0.c2)|(0.41244173358226854)))OR(TRIM(vt0.c2, vt0.c0))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((NULL)>(t0.c2))) NOTNULL)) ORDER BY (- (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)))) DESC, (+ (((vt0.c0)>(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)>(t0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)))) DESC, (+ (((vt0.c0)>(vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((NULL)>(t0.c2))) NOTNULL)) ORDER BY (- (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)))) DESC, (+ (((vt0.c0)>(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)>(t0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)))) DESC, (+ (((vt0.c0)>(vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((NULL)>(t0.c2))) NOTNULL)) ORDER BY (- (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)))) DESC, (+ (((vt0.c0)>(vt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((((vt0.c2)<<(vt0.c1)))) AND ((json_patch(t0.c2, vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN ((((vt0.c2)<<(vt0.c1)))) AND ((json_patch(t0.c2, vt0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((((vt0.c2)<<(vt0.c1)))) AND ((json_patch(t0.c2, vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN ((((vt0.c2)<<(vt0.c1)))) AND ((json_patch(t0.c2, vt0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)>=(t0.c2))) NOT NULL) WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c2 THEN t0.c2 ELSE vt0.c1 END)<>(((0xffffffffd1071a06) BETWEEN (t0.c2) AND (vt0.c2))))) ORDER BY ((CAST(vt0.c2 AS REAL))AND((((vt0.c0))<((vt0.c1))))) DESC  NULLS LAST, CASE ((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0))  WHEN LOWER(vt0.c1) THEN (+ (vt0.c1)) WHEN ((((((((t0.c2)OR(vt0.c0)))OR(t0.c2)))OR(vt0.c0)))OR(0xffffffffb397422e)) THEN (~ (t0.c2)) WHEN CASE t0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END THEN (vt0.c1 IN (x'74c8')) ELSE ((vt0.c1) NOT BETWEEN (vt0.c2) AND (t0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c2 THEN t0.c2 ELSE vt0.c1 END)!=(((0Xffffffffd1071a06) BETWEEN (t0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)>=(t0.c2))) NOT NULL) ORDER BY ((CAST(vt0.c2 AS REAL))AND((((vt0.c0))<((vt0.c1))))) DESC  NULLS LAST, CASE ((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0))  WHEN LOWER(vt0.c1) THEN (+ (vt0.c1)) WHEN ((((((((t0.c2)OR(vt0.c0)))OR(t0.c2)))OR(vt0.c0)))OR(0xffffffffb397422e)) THEN (~ (t0.c2)) WHEN CASE t0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END THEN (vt0.c1 IN (x'74c8')) ELSE ((vt0.c1) NOT BETWEEN (vt0.c2) AND (t0.c2)) END);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)>=(t0.c2))) NOT NULL) WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c2 THEN t0.c2 ELSE vt0.c1 END)<>(((0xffffffffd1071a06) BETWEEN (t0.c2) AND (vt0.c2))))) ORDER BY ((CAST(vt0.c2 AS REAL))AND((((vt0.c0))<((vt0.c1))))) DESC  NULLS LAST, CASE ((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0))  WHEN LOWER(vt0.c1) THEN (+ (vt0.c1)) WHEN ((((((((t0.c2)OR(vt0.c0)))OR(t0.c2)))OR(vt0.c0)))OR(0xffffffffb397422e)) THEN (~ (t0.c2)) WHEN CASE t0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END THEN (vt0.c1 IN (x'74c8')) ELSE ((vt0.c1) NOT BETWEEN (vt0.c2) AND (t0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c2 THEN t0.c2 ELSE vt0.c1 END)!=(((0Xffffffffd1071a06) BETWEEN (t0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)>=(t0.c2))) NOT NULL) ORDER BY ((CAST(vt0.c2 AS REAL))AND((((vt0.c0))<((vt0.c1))))) DESC  NULLS LAST, CASE ((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0))  WHEN LOWER(vt0.c1) THEN (+ (vt0.c1)) WHEN ((((((((t0.c2)OR(vt0.c0)))OR(t0.c2)))OR(vt0.c0)))OR(0xffffffffb397422e)) THEN (~ (t0.c2)) WHEN CASE t0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END THEN (vt0.c1 IN (x'74c8')) ELSE ((vt0.c1) NOT BETWEEN (vt0.c2) AND (t0.c2)) END);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)>=(t0.c2))) NOT NULL) WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c2 THEN t0.c2 ELSE vt0.c1 END)<>(((0xffffffffd1071a06) BETWEEN (t0.c2) AND (vt0.c2))))) ORDER BY ((CAST(vt0.c2 AS REAL))AND((((vt0.c0))<((vt0.c1))))) DESC  NULLS LAST, CASE ((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0))  WHEN LOWER(vt0.c1) THEN (+ (vt0.c1)) WHEN ((((((((t0.c2)OR(vt0.c0)))OR(t0.c2)))OR(vt0.c0)))OR(0xffffffffb397422e)) THEN (~ (t0.c2)) WHEN CASE t0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END THEN (vt0.c1 IN (x'74c8')) ELSE ((vt0.c1) NOT BETWEEN (vt0.c2) AND (t0.c2)) END;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c2);
SELECT COUNT(*) FROM t0 WHERE ((((((((((((((t0.c2 IN ()))OR(((NULL) BETWEEN (t0.c2) AND (t0.c2)))))AND(CAST(0.11950523938112667 AS NUMERIC))))AND((~ (t0.c2)))))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(t0.c2 COLLATE NOCASE)))OR(((t0.c2)IS(t0.c2))))) ORDER BY t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((t0.c2 IN ()))OR(((NULL) BETWEEN (t0.c2) AND (t0.c2)))))AND(CAST(0.11950523938112667 AS NUMERIC))))AND((~ (t0.c2)))))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(t0.c2 COLLATE NOCASE)))OR(((t0.c2)IS(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY t0.c2  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((((((((((t0.c2 IN ()))OR(((NULL) BETWEEN (t0.c2) AND (t0.c2)))))AND(CAST(0.11950523938112667 AS NUMERIC))))AND((~ (t0.c2)))))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(t0.c2 COLLATE NOCASE)))OR(((t0.c2)IS(t0.c2))))) ORDER BY t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((t0.c2 IN ()))OR(((NULL) BETWEEN (t0.c2) AND (t0.c2)))))AND(CAST(0.11950523938112667 AS NUMERIC))))AND((~ (t0.c2)))))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(t0.c2 COLLATE NOCASE)))OR(((t0.c2)IS(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY t0.c2  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((((((((((t0.c2 IN ()))OR(((NULL) BETWEEN (t0.c2) AND (t0.c2)))))AND(CAST(0.11950523938112667 AS NUMERIC))))AND((~ (t0.c2)))))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(t0.c2 COLLATE NOCASE)))OR(((t0.c2)IS(t0.c2))))) ORDER BY t0.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN x'' THEN vt0.c0 ELSE vt0.c2 END IN ())) ORDER BY ((((vt0.c0)<=(0.9846280809301075)))%(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN x'' THEN vt0.c0 ELSE vt0.c2 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<=(0.9846280809301075)))%(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN x'' THEN vt0.c0 ELSE vt0.c2 END IN ())) ORDER BY ((((vt0.c0)<=(0.9846280809301075)))%(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN x'' THEN vt0.c0 ELSE vt0.c2 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<=(0.9846280809301075)))%(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN x'' THEN vt0.c0 ELSE vt0.c2 END IN ())) ORDER BY ((((vt0.c0)<=(0.9846280809301075)))%(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST('讜1' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST('讜1' AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST('讜1' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST('讜1' AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST('讜1' AS REAL));
SELECT * FROM vt0 CROSS JOIN t0 ON IFNULL(DISTINCT x'fbd9', vt0.c0) COLLATE RTRIM WHERE ((((((vt0.c0)OR(vt0.c2)))AND(5.777709373206985E-4)) IN ())) ORDER BY ((vt0.c0)-(((vt0.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c2)))AND(5.777709373206985E-4)) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON IFNULL(DISTINCT x'fbd9', vt0.c0) COLLATE RTRIM ORDER BY ((vt0.c0)-(((vt0.c1) ISNULL))) DESC);
SELECT * FROM vt0 CROSS JOIN t0 ON IFNULL(DISTINCT x'fbd9', vt0.c0) COLLATE RTRIM WHERE ((((((vt0.c0)OR(vt0.c2)))AND(5.777709373206985E-4)) IN ())) ORDER BY ((vt0.c0)-(((vt0.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c2)))AND(5.777709373206985E-4)) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON IFNULL(DISTINCT x'fbd9', vt0.c0) COLLATE RTRIM ORDER BY ((vt0.c0)-(((vt0.c1) ISNULL))) DESC);
SELECT * FROM vt0 CROSS JOIN t0 ON IFNULL(DISTINCT x'fbd9', vt0.c0) COLLATE RTRIM WHERE ((((((vt0.c0)OR(vt0.c2)))AND(5.777709373206985E-4)) IN ())) ORDER BY ((vt0.c0)-(((vt0.c1) ISNULL))) DESC;
SELECT ALL COUNT(*) FROM t0 INDEXED BY i6 WHERE (((((((((((t0.c2)<(t0.c2)))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))))OR(CASE WHEN t0.c2 THEN t0.c2 END)))AND(((t0.c2) ISNULL))))AND(json_type(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2)<(t0.c2)))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))))OR(CASE WHEN t0.c2 THEN t0.c2 END)))AND(((t0.c2) ISNULL))))AND(json_type(t0.c2)))) IS TRUE)  as count FROM t0 INDEXED BY i6);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i6 WHERE (((((((((((t0.c2)<(t0.c2)))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))))OR(CASE WHEN t0.c2 THEN t0.c2 END)))AND(((t0.c2) ISNULL))))AND(json_type(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2)<(t0.c2)))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))))OR(CASE WHEN t0.c2 THEN t0.c2 END)))AND(((t0.c2) ISNULL))))AND(json_type(t0.c2)))) IS TRUE)  as count FROM t0 INDEXED BY i6);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i6 WHERE (((((((((((t0.c2)<(t0.c2)))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))))OR(CASE WHEN t0.c2 THEN t0.c2 END)))AND(((t0.c2) ISNULL))))AND(json_type(t0.c2))));
SELECT * FROM vt0 NOT INDEXED, t0 WHERE ((((vt0.c2 IN ())) ISNULL)) ORDER BY CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ())) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED, t0 WHERE ((((vt0.c2 IN ())) ISNULL)) ORDER BY CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ())) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED, t0 WHERE ((((vt0.c2 IN ())) ISNULL)) ORDER BY CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 WHERE (CAST(CAST(t0.c2 AS TEXT) AS NUMERIC)) ORDER BY (((((((((t0.c2 IN ()))AND(((t0.c2) ISNULL))))OR(GLOB(vt0.c0, ''))))AND(CASE t0.c2  WHEN '' THEN vt0.c2 END)))AND(vt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c2 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 ORDER BY (((((((((t0.c2 IN ()))AND(((t0.c2) ISNULL))))OR(GLOB(vt0.c0, ''))))AND(CASE t0.c2  WHEN '' THEN vt0.c2 END)))AND(vt0.c2)) ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 WHERE (CAST(CAST(t0.c2 AS TEXT) AS NUMERIC)) ORDER BY (((((((((t0.c2 IN ()))AND(((t0.c2) ISNULL))))OR(GLOB(vt0.c0, ''))))AND(CASE t0.c2  WHEN '' THEN vt0.c2 END)))AND(vt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c2 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 ORDER BY (((((((((t0.c2 IN ()))AND(((t0.c2) ISNULL))))OR(GLOB(vt0.c0, ''))))AND(CASE t0.c2  WHEN '' THEN vt0.c2 END)))AND(vt0.c2)) ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 WHERE (CAST(CAST(t0.c2 AS TEXT) AS NUMERIC)) ORDER BY (((((((((t0.c2 IN ()))AND(((t0.c2) ISNULL))))OR(GLOB(vt0.c0, ''))))AND(CASE t0.c2  WHEN '' THEN vt0.c2 END)))AND(vt0.c2)) ASC;
SELECT ALL * FROM t0 WHERE ((~ (((t0.c2)&(t0.c2))))) ORDER BY -1248513887;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c2)&(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY -1248513887);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c2)&(t0.c2))))) ORDER BY -1248513887;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c2)&(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY -1248513887);
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT ALL * FROM t0, vt0 WHERE ((((~ (vt0.c1)))<(((vt0.c2) NOT NULL)))) ORDER BY 'j' ASC;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1)))<(((vt0.c2) NOT NULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY 'j' ASC);
SELECT ALL * FROM t0, vt0 WHERE ((((~ (vt0.c1)))<(((vt0.c2) NOT NULL)))) ORDER BY 'j' ASC;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1)))<(((vt0.c2) NOT NULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY 'j' ASC);
SELECT ALL * FROM t0, vt0 WHERE ((((~ (vt0.c1)))<(((vt0.c2) NOT NULL)))) ORDER BY 'j' ASC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (DATETIME(vt0.c0 COLLATE NOCASE, LIKELIHOOD(DISTINCT vt0.c2, 0.18484738174470616), CAST(vt0.c2 AS BLOB))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))) BETWEEN ((('983749961') ISNULL)) AND (((t0.c2)/(vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(vt0.c0 COLLATE NOCASE, LIKELIHOOD(DISTINCT vt0.c2, 0.18484738174470616), CAST(vt0.c2 AS BLOB))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))) BETWEEN ((('983749961') ISNULL)) AND (((t0.c2)/(vt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (DATETIME(vt0.c0 COLLATE NOCASE, LIKELIHOOD(DISTINCT vt0.c2, 0.18484738174470616), CAST(vt0.c2 AS BLOB))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))) BETWEEN ((('983749961') ISNULL)) AND (((t0.c2)/(vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(vt0.c0 COLLATE NOCASE, LIKELIHOOD(DISTINCT vt0.c2, 0.18484738174470616), CAST(vt0.c2 AS BLOB))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))) BETWEEN ((('983749961') ISNULL)) AND (((t0.c2)/(vt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (DATETIME(vt0.c0 COLLATE NOCASE, LIKELIHOOD(DISTINCT vt0.c2, 0.18484738174470616), CAST(vt0.c2 AS BLOB))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))) BETWEEN ((('983749961') ISNULL)) AND (((t0.c2)/(vt0.c2)))) DESC;
SELECT ALL * FROM vt0 WHERE (((0.8543470689543107)-((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((0.8543470689543107)-((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.8543470689543107)-((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((0.8543470689543107)-((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.8543470689543107)-((vt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(t0.c2))) ISNULL)) ORDER BY ((t0.c2)IS NOT(t0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(t0.c2))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2)IS NOT(t0.c2)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(t0.c2))) ISNULL)) ORDER BY ((t0.c2)IS NOT(t0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(t0.c2))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2)IS NOT(t0.c2)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(t0.c2))) ISNULL)) ORDER BY ((t0.c2)IS NOT(t0.c2)) COLLATE RTRIM DESC;
SELECT ALL * FROM t0 NOT INDEXED WHERE ((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END IN (json_type(t0.c2), (- (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END IN (json_type(t0.c2), (- (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 NOT INDEXED WHERE ((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END IN (json_type(t0.c2), (- (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END IN (json_type(t0.c2), (- (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 NOT INDEXED WHERE ((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END IN (json_type(t0.c2), (- (t0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1)|(0Xffffffffb397422e))) NOTNULL) WHERE (((((x'')AND(((vt0.c0) BETWEEN (1414496205) AND (vt0.c2)))))AND(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))))) ORDER BY ((CASE 0.7432676611878724  WHEN x'' THEN t0.c2 WHEN t0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(((vt0.c0) BETWEEN (1414496205) AND (vt0.c2)))))AND(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1)|(0Xffffffffb397422e))) NOTNULL) ORDER BY ((CASE 0.7432676611878724  WHEN x'' THEN t0.c2 WHEN t0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1)|(0Xffffffffb397422e))) NOTNULL) WHERE (((((x'')AND(((vt0.c0) BETWEEN (1414496205) AND (vt0.c2)))))AND(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))))) ORDER BY ((CASE 0.7432676611878724  WHEN x'' THEN t0.c2 WHEN t0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(((vt0.c0) BETWEEN (1414496205) AND (vt0.c2)))))AND(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1)|(0Xffffffffb397422e))) NOTNULL) ORDER BY ((CASE 0.7432676611878724  WHEN x'' THEN t0.c2 WHEN t0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1)|(0Xffffffffb397422e))) NOTNULL) WHERE (((((x'')AND(((vt0.c0) BETWEEN (1414496205) AND (vt0.c2)))))AND(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))))) ORDER BY ((CASE 0.7432676611878724  WHEN x'' THEN t0.c2 WHEN t0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END) NOTNULL)  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE ((NOT (CAST(t0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((NOT (CAST(t0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((NOT (CAST(t0.c2 AS REAL))));
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY CASE '1088926611'  WHEN ABS(DISTINCT t0.c2) THEN ((t0.c2)!=(t0.c2)) ELSE ((t0.c2)=(t0.c2)) END DESC, 621020516 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY CASE '1088926611'  WHEN ABS(DISTINCT t0.c2) THEN ((t0.c2)!=(t0.c2)) ELSE ((t0.c2)=(t0.c2)) END DESC, 621020516 DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY CASE '1088926611'  WHEN ABS(DISTINCT t0.c2) THEN ((t0.c2)!=(t0.c2)) ELSE ((t0.c2)=(t0.c2)) END DESC, 621020516 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY CASE '1088926611'  WHEN ABS(DISTINCT t0.c2) THEN ((t0.c2)!=(t0.c2)) ELSE ((t0.c2)=(t0.c2)) END DESC, 621020516 DESC  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((t0.c2 COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((t0.c2 COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c2 COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (TRIM(TYPEOF(DISTINCT t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(TYPEOF(DISTINCT t0.c2))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TRIM(TYPEOF(DISTINCT t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(TYPEOF(DISTINCT t0.c2))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TRIM(TYPEOF(DISTINCT t0.c2)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c1;
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY vt0.c1  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (json_patch('W	5A>tP?', vt0.c1)) ORDER BY ((((vt0.c1)LIKE(vt0.c1)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)) DESC  NULLS FIRST, (((CAST(vt0.c0 AS INTEGER)))<(((vt0.c2 IN (vt0.c2, '155500552'))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch('W	5A>tP?', vt0.c1)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)LIKE(vt0.c1)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)) DESC  NULLS FIRST, (((CAST(vt0.c0 AS INTEGER)))<(((vt0.c2 IN (vt0.c2, '155500552'))))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (json_patch('W	5A>tP?', vt0.c1)) ORDER BY ((((vt0.c1)LIKE(vt0.c1)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)) DESC  NULLS FIRST, (((CAST(vt0.c0 AS INTEGER)))<(((vt0.c2 IN (vt0.c2, '155500552'))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch('W	5A>tP?', vt0.c1)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)LIKE(vt0.c1)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)) DESC  NULLS FIRST, (((CAST(vt0.c0 AS INTEGER)))<(((vt0.c2 IN (vt0.c2, '155500552'))))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((((t0.c2)OR(t0.c2)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((((t0.c2)OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((((t0.c2)OR(t0.c2)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((((t0.c2)OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((((t0.c2)OR(t0.c2)))OR(t0.c2)))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)LIKE(t0.c2))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) AND (((((t0.c2)AND(t0.c2)))AND('-659446591'))))) ORDER BY t0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)LIKE(t0.c2))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) AND (((((t0.c2)AND(t0.c2)))AND('-659446591'))))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)LIKE(t0.c2))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) AND (((((t0.c2)AND(t0.c2)))AND('-659446591'))))) ORDER BY t0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)LIKE(t0.c2))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) AND (((((t0.c2)AND(t0.c2)))AND('-659446591'))))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)LIKE(t0.c2))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) AND (((((t0.c2)AND(t0.c2)))AND('-659446591'))))) ORDER BY t0.c2 DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c2 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c2 AS BLOB) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c2 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c2 AS BLOB) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c2 AS BLOB) AS TEXT));
SELECT * FROM t0 WHERE (((((((t0.c2)OR(t0.c2)))OR(t0.c2)))&(((t0.c2)<=(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))&(((t0.c2)<=(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c2)OR(t0.c2)))OR(t0.c2)))&(((t0.c2)<=(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))&(((t0.c2)<=(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c2)OR(t0.c2)))OR(t0.c2)))&(((t0.c2)<=(t0.c2)))));
SELECT ALL * FROM t0, vt0 WHERE (NULL) ORDER BY (t0.c2 COLLATE NOCASE IN ())  NULLS FIRST, (CASE vt0.c2  WHEN t0.c2 THEN vt0.c2 ELSE vt0.c2 END IN (CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY (t0.c2 COLLATE NOCASE IN ())  NULLS FIRST, (CASE vt0.c2  WHEN t0.c2 THEN vt0.c2 ELSE vt0.c2 END IN (CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (NULL) ORDER BY (t0.c2 COLLATE NOCASE IN ())  NULLS FIRST, (CASE vt0.c2  WHEN t0.c2 THEN vt0.c2 ELSE vt0.c2 END IN (CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY (t0.c2 COLLATE NOCASE IN ())  NULLS FIRST, (CASE vt0.c2  WHEN t0.c2 THEN vt0.c2 ELSE vt0.c2 END IN (CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (NULL) ORDER BY (t0.c2 COLLATE NOCASE IN ())  NULLS FIRST, (CASE vt0.c2  WHEN t0.c2 THEN vt0.c2 ELSE vt0.c2 END IN (CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((NOT (vt0.c1))) BETWEEN (((vt0.c2) NOTNULL)) AND (((t0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1))) BETWEEN (((vt0.c2) NOTNULL)) AND (((t0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((NOT (vt0.c1))) BETWEEN (((vt0.c2) NOTNULL)) AND (((t0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1))) BETWEEN (((vt0.c2) NOTNULL)) AND (((t0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((NOT (vt0.c1))) BETWEEN (((vt0.c2) NOTNULL)) AND (((t0.c2) NOT NULL))));
SELECT COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c2))>>(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt0.c2))>>(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c2))>>(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt0.c2))>>(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c2))>>(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))));
SELECT ALL * FROM vt0, t0 WHERE (x'17e5') ORDER BY (((vt0.c2, vt0.c1, vt0.c2)) BETWEEN (('', t0.c2, vt0.c0)) AND ((vt0.c0, vt0.c2, t0.c2))) COLLATE BINARY  NULLS LAST, (~ (x'1a019ab3')), NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'17e5') IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c2, vt0.c1, vt0.c2)) BETWEEN (('', t0.c2, vt0.c0)) AND ((vt0.c0, vt0.c2, t0.c2))) COLLATE BINARY  NULLS LAST, (~ (x'1a019ab3')), NULL  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (x'17e5') ORDER BY (((vt0.c2, vt0.c1, vt0.c2)) BETWEEN (('', t0.c2, vt0.c0)) AND ((vt0.c0, vt0.c2, t0.c2))) COLLATE BINARY  NULLS LAST, (~ (x'1a019ab3')), NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'17e5') IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c2, vt0.c1, vt0.c2)) BETWEEN (('', t0.c2, vt0.c0)) AND ((vt0.c0, vt0.c2, t0.c2))) COLLATE BINARY  NULLS LAST, (~ (x'1a019ab3')), NULL  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (x'17e5') ORDER BY (((vt0.c2, vt0.c1, vt0.c2)) BETWEEN (('', t0.c2, vt0.c0)) AND ((vt0.c0, vt0.c2, t0.c2))) COLLATE BINARY  NULLS LAST, (~ (x'1a019ab3')), NULL  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (vt0.c2);
SELECT COUNT(*) FROM t0 WHERE ((- (((t0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c2) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (((t0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c2) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (((t0.c2) NOTNULL))));
SELECT * FROM t0 WHERE ((((((('kSHabx.(') NOT BETWEEN (t0.c2) AND (t0.c2)))OR((t0.c2 IN ()))))OR(((t0.c2)|(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((('kSHabx.(') NOT BETWEEN (t0.c2) AND (t0.c2)))OR((t0.c2 IN ()))))OR(((t0.c2)|(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((('kSHabx.(') NOT BETWEEN (t0.c2) AND (t0.c2)))OR((t0.c2 IN ()))))OR(((t0.c2)|(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((('kSHabx.(') NOT BETWEEN (t0.c2) AND (t0.c2)))OR((t0.c2 IN ()))))OR(((t0.c2)|(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((('kSHabx.(') NOT BETWEEN (t0.c2) AND (t0.c2)))OR((t0.c2 IN ()))))OR(((t0.c2)|(t0.c2)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((vt0.c2)>(t0.c2)) THEN (- (vt0.c2)) END) ORDER BY CASE (- (vt0.c0))  WHEN vt0.c2 COLLATE RTRIM THEN ((vt0.c2) IS FALSE) END ASC  NULLS LAST, (vt0.c0 IN (t0.c2))  NULLS FIRST, (((('1566857625')OR('576706689')))AND(((vt0.c0)+(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c2)>(t0.c2)) THEN (- (vt0.c2)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (- (vt0.c0))  WHEN vt0.c2 COLLATE RTRIM THEN ((vt0.c2) IS FALSE) END ASC  NULLS LAST, (vt0.c0 IN (t0.c2))  NULLS FIRST, (((('1566857625')OR('576706689')))AND(((vt0.c0)+(vt0.c2)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((vt0.c2)>(t0.c2)) THEN (- (vt0.c2)) END) ORDER BY CASE (- (vt0.c0))  WHEN vt0.c2 COLLATE RTRIM THEN ((vt0.c2) IS FALSE) END ASC  NULLS LAST, (vt0.c0 IN (t0.c2))  NULLS FIRST, (((('1566857625')OR('576706689')))AND(((vt0.c0)+(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c2)>(t0.c2)) THEN (- (vt0.c2)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (- (vt0.c0))  WHEN vt0.c2 COLLATE RTRIM THEN ((vt0.c2) IS FALSE) END ASC  NULLS LAST, (vt0.c0 IN (t0.c2))  NULLS FIRST, (((('1566857625')OR('576706689')))AND(((vt0.c0)+(vt0.c2)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((vt0.c2)>(t0.c2)) THEN (- (vt0.c2)) END) ORDER BY CASE (- (vt0.c0))  WHEN vt0.c2 COLLATE RTRIM THEN ((vt0.c2) IS FALSE) END ASC  NULLS LAST, (vt0.c0 IN (t0.c2))  NULLS FIRST, (((('1566857625')OR('576706689')))AND(((vt0.c0)+(vt0.c2))));
SELECT COUNT(*) FROM vt0 WHERE ((((NULLIF(vt0.c0, vt0.c1)))==((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULLIF(vt0.c0, vt0.c1)))==((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NULLIF(vt0.c0, vt0.c1)))==((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULLIF(vt0.c0, vt0.c1)))==((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NULLIF(vt0.c0, vt0.c1)))==((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))))));
SELECT * FROM t0, vt0 WHERE (json_array_length(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)), (+ (vt0.c1)))) ORDER BY TRIM(DISTINCT (((vt0.c2))!=((vt0.c2))), ((vt0.c1)>(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)), (+ (vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY TRIM(DISTINCT (((vt0.c2))!=((vt0.c2))), ((vt0.c1)>(vt0.c0))) ASC);
SELECT * FROM t0, vt0 WHERE (json_array_length(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)), (+ (vt0.c1)))) ORDER BY TRIM(DISTINCT (((vt0.c2))!=((vt0.c2))), ((vt0.c1)>(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)), (+ (vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY TRIM(DISTINCT (((vt0.c2))!=((vt0.c2))), ((vt0.c1)>(vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i6 WHERE ((((((+ (vt0.c2)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))))OR(((vt0.c1)-(vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((+ (vt0.c2)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))))OR(((vt0.c1)-(vt0.c2))))) IS TRUE)  as count FROM vt0 INDEXED BY i6);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i6 WHERE ((((((+ (vt0.c2)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))))OR(((vt0.c1)-(vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((+ (vt0.c2)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))))OR(((vt0.c1)-(vt0.c2))))) IS TRUE)  as count FROM vt0 INDEXED BY i6);
SELECT ALL COUNT(*) FROM vt0 WHERE (PRINTF((~ (vt0.c0)))) ORDER BY ((vt0.c1 COLLATE NOCASE)<<(((vt0.c2)IS(vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE NOCASE)<<(((vt0.c2)IS(vt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (PRINTF((~ (vt0.c0)))) ORDER BY ((vt0.c1 COLLATE NOCASE)<<(((vt0.c2)IS(vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE NOCASE)<<(((vt0.c2)IS(vt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (PRINTF((~ (vt0.c0)))) ORDER BY ((vt0.c1 COLLATE NOCASE)<<(((vt0.c2)IS(vt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM t0 WHERE (0.44121208661116385) ORDER BY CASE WHEN CASE WHEN 0.18663765418060785 THEN t0.c2 ELSE t0.c2 END THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((0.8423178302035584))) ELSE (((t0.c2, t0.c2, t0.c2))==((t0.c2, t0.c2, t0.c2))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.44121208661116385) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CASE WHEN 0.18663765418060785 THEN t0.c2 ELSE t0.c2 END THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((0.8423178302035584))) ELSE (((t0.c2, t0.c2, t0.c2))=((t0.c2, t0.c2, t0.c2))) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (0.44121208661116385) ORDER BY CASE WHEN CASE WHEN 0.18663765418060785 THEN t0.c2 ELSE t0.c2 END THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((0.8423178302035584))) ELSE (((t0.c2, t0.c2, t0.c2))==((t0.c2, t0.c2, t0.c2))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.44121208661116385) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CASE WHEN 0.18663765418060785 THEN t0.c2 ELSE t0.c2 END THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((0.8423178302035584))) ELSE (((t0.c2, t0.c2, t0.c2))=((t0.c2, t0.c2, t0.c2))) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (0.44121208661116385) ORDER BY CASE WHEN CASE WHEN 0.18663765418060785 THEN t0.c2 ELSE t0.c2 END THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((0.8423178302035584))) ELSE (((t0.c2, t0.c2, t0.c2))==((t0.c2, t0.c2, t0.c2))) END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (((NULL))>((vt0.c1))) THEN vt0.c2 END) ORDER BY ((((((0xbedb5b4)!=(vt0.c0)))AND((vt0.c1 IN ()))))AND((((('3TacG+]')AND(vt0.c1)))OR('d~'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (((NULL))>((vt0.c1))) THEN vt0.c2 END) IS TRUE)  as count FROM vt0 ORDER BY ((((((0xbedb5b4)<>(vt0.c0)))AND((vt0.c1 IN ()))))AND((((('3TacG+]')AND(vt0.c1)))OR('d~'))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (((NULL))>((vt0.c1))) THEN vt0.c2 END) ORDER BY ((((((0xbedb5b4)!=(vt0.c0)))AND((vt0.c1 IN ()))))AND((((('3TacG+]')AND(vt0.c1)))OR('d~'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (((NULL))>((vt0.c1))) THEN vt0.c2 END) IS TRUE)  as count FROM vt0 ORDER BY ((((((0xbedb5b4)<>(vt0.c0)))AND((vt0.c1 IN ()))))AND((((('3TacG+]')AND(vt0.c1)))OR('d~'))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2))<>((t0.c2)))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) AND (t0.c2))) ORDER BY (((t0.c2, t0.c2, 0x52d3daed)) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c2)/(t0.c2)), (~ (t0.c2)))) AND ((t0.c2, 942955966, (((t0.c2)) NOT BETWEEN ((-1e500)) AND (('')))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))!=((t0.c2)))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) AND (t0.c2))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2, t0.c2, 0x52d3daed)) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c2)/(t0.c2)), (~ (t0.c2)))) AND ((t0.c2, 942955966, (((t0.c2)) NOT BETWEEN ((-1e500)) AND (('')))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2))<>((t0.c2)))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) AND (t0.c2))) ORDER BY (((t0.c2, t0.c2, 0x52d3daed)) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c2)/(t0.c2)), (~ (t0.c2)))) AND ((t0.c2, 942955966, (((t0.c2)) NOT BETWEEN ((-1e500)) AND (('')))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))!=((t0.c2)))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) AND (t0.c2))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2, t0.c2, 0x52d3daed)) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c2)/(t0.c2)), (~ (t0.c2)))) AND ((t0.c2, 942955966, (((t0.c2)) NOT BETWEEN ((-1e500)) AND (('')))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2))<>((t0.c2)))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) AND (t0.c2))) ORDER BY (((t0.c2, t0.c2, 0x52d3daed)) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c2)/(t0.c2)), (~ (t0.c2)))) AND ((t0.c2, 942955966, (((t0.c2)) NOT BETWEEN ((-1e500)) AND (('')))))) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN NULL END) IS TRUE)) ORDER BY ((((((vt0.c1)AND(vt0.c1)))AND(-243170885)))%(NULLIF(vt0.c1, x'6b4a'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN NULL END) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c1)AND(vt0.c1)))AND(-243170885)))%(NULLIF(vt0.c1, x'6b4a'))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN NULL END) IS TRUE)) ORDER BY ((((((vt0.c1)AND(vt0.c1)))AND(-243170885)))%(NULLIF(vt0.c1, x'6b4a'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN NULL END) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c1)AND(vt0.c1)))AND(-243170885)))%(NULLIF(vt0.c1, x'6b4a'))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN NULL END) IS TRUE)) ORDER BY ((((((vt0.c1)AND(vt0.c1)))AND(-243170885)))%(NULLIF(vt0.c1, x'6b4a'))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c2)>(t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c2)>(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2)>(t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c2)>(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2)>(t0.c2)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1))) BETWEEN (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END) AND ((NOT (vt0.c1))))) ORDER BY 0.591482292613035  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1))) BETWEEN (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY 0.591482292613035  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1))) BETWEEN (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END) AND ((NOT (vt0.c1))))) ORDER BY 0.591482292613035  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1))) BETWEEN (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY 0.591482292613035  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1))) BETWEEN (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END) AND ((NOT (vt0.c1))))) ORDER BY 0.591482292613035  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c2);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2 COLLATE RTRIM) BETWEEN (TRIM(vt0.c0, vt0.c0)) AND ((('彳BPI2u._a')==(''))))) ORDER BY ((((vt0.c0)+(vt0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE RTRIM) BETWEEN (TRIM(vt0.c0, vt0.c0)) AND ((('彳BPI2u._a')==(''))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)+(vt0.c1))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2 COLLATE RTRIM) BETWEEN (TRIM(vt0.c0, vt0.c0)) AND ((('彳BPI2u._a')==(''))))) ORDER BY ((((vt0.c0)+(vt0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE RTRIM) BETWEEN (TRIM(vt0.c0, vt0.c0)) AND ((('彳BPI2u._a')==(''))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)+(vt0.c1))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2 COLLATE RTRIM) BETWEEN (TRIM(vt0.c0, vt0.c0)) AND ((('彳BPI2u._a')==(''))))) ORDER BY ((((vt0.c0)+(vt0.c1))) NOTNULL);
SELECT * FROM t0 CROSS JOIN vt0 ON ABS(DISTINCT -120303669) WHERE (t0.c2 COLLATE RTRIM) ORDER BY UNLIKELY(((vt0.c0)*(vt0.c2))) DESC  NULLS LAST, ((((+ (t0.c2))))==((t0.c2))) DESC, CAST(rtreenode(vt0.c2, vt0.c0) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c2 COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ABS(DISTINCT -120303669) ORDER BY UNLIKELY(((vt0.c0)*(vt0.c2))) DESC  NULLS LAST, ((((+ (t0.c2))))==((t0.c2))) DESC, CAST(rtreenode(vt0.c2, vt0.c0) AS REAL) DESC);
SELECT * FROM t0 CROSS JOIN vt0 ON ABS(DISTINCT -120303669) WHERE (t0.c2 COLLATE RTRIM) ORDER BY UNLIKELY(((vt0.c0)*(vt0.c2))) DESC  NULLS LAST, ((((+ (t0.c2))))==((t0.c2))) DESC, CAST(rtreenode(vt0.c2, vt0.c0) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c2 COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ABS(DISTINCT -120303669) ORDER BY UNLIKELY(((vt0.c0)*(vt0.c2))) DESC  NULLS LAST, ((((+ (t0.c2))))==((t0.c2))) DESC, CAST(rtreenode(vt0.c2, vt0.c0) AS REAL) DESC);
SELECT * FROM t0 CROSS JOIN vt0 ON ABS(DISTINCT -120303669) WHERE (t0.c2 COLLATE RTRIM) ORDER BY UNLIKELY(((vt0.c0)*(vt0.c2))) DESC  NULLS LAST, ((((+ (t0.c2))))==((t0.c2))) DESC, CAST(rtreenode(vt0.c2, vt0.c0) AS REAL) DESC;
SELECT * FROM vt0 WHERE (CASE '-556688726'  WHEN ((vt0.c2)+(vt0.c1)) THEN CAST('945365522' AS INTEGER) ELSE ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE '-556688726'  WHEN ((vt0.c2)+(vt0.c1)) THEN CAST('945365522' AS INTEGER) ELSE ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE '-556688726'  WHEN ((vt0.c2)+(vt0.c1)) THEN CAST('945365522' AS INTEGER) ELSE ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE '-556688726'  WHEN ((vt0.c2)+(vt0.c1)) THEN CAST('945365522' AS INTEGER) ELSE ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE '-556688726'  WHEN ((vt0.c2)+(vt0.c1)) THEN CAST('945365522' AS INTEGER) ELSE ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (SQLITE_VERSION()) ORDER BY INSTR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)||(vt0.c0))) ASC, CASE WHEN (~ (vt0.c1)) THEN ((((0.21081225394234093)OR(vt0.c2)))OR(t0.c2)) ELSE CASE WHEN vt0.c2 THEN t0.c2 WHEN 0.7537412665026588 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE NULL END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM t0, vt0 ORDER BY INSTR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)||(vt0.c0))) ASC, CASE WHEN (~ (vt0.c1)) THEN ((((0.21081225394234093)OR(vt0.c2)))OR(t0.c2)) ELSE CASE WHEN vt0.c2 THEN t0.c2 WHEN 0.7537412665026588 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE NULL END END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (SQLITE_VERSION()) ORDER BY INSTR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)||(vt0.c0))) ASC, CASE WHEN (~ (vt0.c1)) THEN ((((0.21081225394234093)OR(vt0.c2)))OR(t0.c2)) ELSE CASE WHEN vt0.c2 THEN t0.c2 WHEN 0.7537412665026588 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE NULL END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM t0, vt0 ORDER BY INSTR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)||(vt0.c0))) ASC, CASE WHEN (~ (vt0.c1)) THEN ((((0.21081225394234093)OR(vt0.c2)))OR(t0.c2)) ELSE CASE WHEN vt0.c2 THEN t0.c2 WHEN 0.7537412665026588 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE NULL END END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (SQLITE_VERSION()) ORDER BY INSTR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)||(vt0.c0))) ASC, CASE WHEN (~ (vt0.c1)) THEN ((((0.21081225394234093)OR(vt0.c2)))OR(t0.c2)) ELSE CASE WHEN vt0.c2 THEN t0.c2 WHEN 0.7537412665026588 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE NULL END END  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (t0.c2)) COLLATE RTRIM);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((vt0.c1)&(0Xffffffff8c562302)) AS NUMERIC)) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)&(0xffffffff8c562302)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((vt0.c1)&(0Xffffffff8c562302)) AS NUMERIC)) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)&(0xffffffff8c562302)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((vt0.c1)&(0Xffffffff8c562302)) AS NUMERIC)) ORDER BY NULL DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN NULL WHEN vt0.c2 THEN vt0.c2 END IN ())) ORDER BY ((((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)OR((NOT (vt0.c2)))))OR(CAST(vt0.c2 AS NUMERIC))) DESC, ((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END)LIKE(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN NULL WHEN vt0.c2 THEN vt0.c2 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)OR((NOT (vt0.c2)))))OR(CAST(vt0.c2 AS NUMERIC))) DESC, ((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END)LIKE(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN NULL WHEN vt0.c2 THEN vt0.c2 END IN ())) ORDER BY ((((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)OR((NOT (vt0.c2)))))OR(CAST(vt0.c2 AS NUMERIC))) DESC, ((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END)LIKE(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN NULL WHEN vt0.c2 THEN vt0.c2 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)OR((NOT (vt0.c2)))))OR(CAST(vt0.c2 AS NUMERIC))) DESC, ((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END)LIKE(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN NULL WHEN vt0.c2 THEN vt0.c2 END IN ())) ORDER BY ((((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)OR((NOT (vt0.c2)))))OR(CAST(vt0.c2 AS NUMERIC))) DESC, ((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END)LIKE(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((~ (t0.c2))))<=((CASE t0.c2  WHEN vt0.c2 THEN t0.c2 ELSE t0.c2 END))));
SELECT SUM(count) FROM (SELECT ((((((~ (t0.c2))))<=((CASE t0.c2  WHEN vt0.c2 THEN t0.c2 ELSE t0.c2 END)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((~ (t0.c2))))<=((CASE t0.c2  WHEN vt0.c2 THEN t0.c2 ELSE t0.c2 END))));
SELECT SUM(count) FROM (SELECT ((((((~ (t0.c2))))<=((CASE t0.c2  WHEN vt0.c2 THEN t0.c2 ELSE t0.c2 END)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((~ (t0.c2))))<=((CASE t0.c2  WHEN vt0.c2 THEN t0.c2 ELSE t0.c2 END))));
SELECT ALL * FROM vt0, t0 WHERE ('LBNyX\rS~');
SELECT SUM(count) FROM (SELECT (('LBNyX\rS~') IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ('LBNyX\rS~');
SELECT SUM(count) FROM (SELECT (('LBNyX\rS~') IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ('LBNyX\rS~');
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c1) ORDER BY CASE WHEN ((vt0.c1)>(vt0.c2)) THEN COALESCE(vt0.c1, t0.c2, vt0.c0, vt0.c1, vt0.c2, vt0.c2) WHEN NULL THEN vt0.c2 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN vt0.c1 ELSE vt0.c1 END ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN ((vt0.c1)>(vt0.c2)) THEN COALESCE(vt0.c1, t0.c2, vt0.c0, vt0.c1, vt0.c2, vt0.c2) WHEN NULL THEN vt0.c2 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN vt0.c1 ELSE vt0.c1 END ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c1) ORDER BY CASE WHEN ((vt0.c1)>(vt0.c2)) THEN COALESCE(vt0.c1, t0.c2, vt0.c0, vt0.c1, vt0.c2, vt0.c2) WHEN NULL THEN vt0.c2 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN vt0.c1 ELSE vt0.c1 END ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN ((vt0.c1)>(vt0.c2)) THEN COALESCE(vt0.c1, t0.c2, vt0.c0, vt0.c1, vt0.c2, vt0.c2) WHEN NULL THEN vt0.c2 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN vt0.c1 ELSE vt0.c1 END ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c1) ORDER BY CASE WHEN ((vt0.c1)>(vt0.c2)) THEN COALESCE(vt0.c1, t0.c2, vt0.c0, vt0.c1, vt0.c2, vt0.c2) WHEN NULL THEN vt0.c2 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN vt0.c1 ELSE vt0.c1 END ASC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN (~ (vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN (vt0.c2 IN ()) WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN x'3843' ELSE ((vt0.c0) ISNULL) END) ORDER BY ((((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(((((vt0.c1)OR(0.00500635008304029)))OR(vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt0.c1)) THEN (~ (vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN (vt0.c2 IN ()) WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN x'3843' ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(((((vt0.c1)OR(0.00500635008304029)))OR(vt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN (~ (vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN (vt0.c2 IN ()) WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN x'3843' ELSE ((vt0.c0) ISNULL) END) ORDER BY ((((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(((((vt0.c1)OR(0.00500635008304029)))OR(vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt0.c1)) THEN (~ (vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN (vt0.c2 IN ()) WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN x'3843' ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(((((vt0.c1)OR(0.00500635008304029)))OR(vt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN (~ (vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN (vt0.c2 IN ()) WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN x'3843' ELSE ((vt0.c0) ISNULL) END) ORDER BY ((((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(((((vt0.c1)OR(0.00500635008304029)))OR(vt0.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (((t0.c2)<(vt0.c2))))) ORDER BY '-915587114'  NULLS FIRST, ((vt0.c1)IS(((t0.c2)-(vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c2)<(vt0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY '-915587114'  NULLS FIRST, ((vt0.c1)IS(((t0.c2)-(vt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (((t0.c2)<(vt0.c2))))) ORDER BY '-915587114'  NULLS FIRST, ((vt0.c1)IS(((t0.c2)-(vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c2)<(vt0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY '-915587114'  NULLS FIRST, ((vt0.c1)IS(((t0.c2)-(vt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (((t0.c2)<(vt0.c2))))) ORDER BY '-915587114'  NULLS FIRST, ((vt0.c1)IS(((t0.c2)-(vt0.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c2 AS NUMERIC)) AND ((vt0.c1 IN ())))) ORDER BY CAST(CHAR(NULL, vt0.c0, vt0.c2) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c2 AS NUMERIC)) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CHAR(NULL, vt0.c0, vt0.c2) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c2 AS NUMERIC)) AND ((vt0.c1 IN ())))) ORDER BY CAST(CHAR(NULL, vt0.c0, vt0.c2) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c2 AS NUMERIC)) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CHAR(NULL, vt0.c0, vt0.c2) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c2 AS NUMERIC)) AND ((vt0.c1 IN ())))) ORDER BY CAST(CHAR(NULL, vt0.c0, vt0.c2) AS BLOB) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c2 COLLATE BINARY) NOT BETWEEN (((vt0.c1)%(vt0.c0))) AND (((x'a2c4') NOT BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))>=(COALESCE(vt0.c0, vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE BINARY) NOT BETWEEN (((vt0.c1)%(vt0.c0))) AND (((x'a2c4') NOT BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))>=(COALESCE(vt0.c0, vt0.c2))));
SELECT ALL * FROM vt0 WHERE (((vt0.c2 COLLATE BINARY) NOT BETWEEN (((vt0.c1)%(vt0.c0))) AND (((x'a2c4') NOT BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))>=(COALESCE(vt0.c0, vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE BINARY) NOT BETWEEN (((vt0.c1)%(vt0.c0))) AND (((x'a2c4') NOT BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))>=(COALESCE(vt0.c0, vt0.c2))));
SELECT ALL * FROM vt0 WHERE (((vt0.c2 COLLATE BINARY) NOT BETWEEN (((vt0.c1)%(vt0.c0))) AND (((x'a2c4') NOT BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))>=(COALESCE(vt0.c0, vt0.c2)));
SELECT ALL * FROM t0, vt0 WHERE (((('')) NOT BETWEEN (('1445996566' COLLATE NOCASE)) AND ((((((vt0.c1)AND(t0.c2)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('')) NOT BETWEEN (('1445996566' COLLATE NOCASE)) AND ((((((vt0.c1)AND(t0.c2)))AND(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((('')) NOT BETWEEN (('1445996566' COLLATE NOCASE)) AND ((((((vt0.c1)AND(t0.c2)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('')) NOT BETWEEN (('1445996566' COLLATE NOCASE)) AND ((((((vt0.c1)AND(t0.c2)))AND(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((('')) NOT BETWEEN (('1445996566' COLLATE NOCASE)) AND ((((((vt0.c1)AND(t0.c2)))AND(vt0.c0))))));
SELECT * FROM t0 WHERE ((t0.c2 COLLATE BINARY IN (t0.c2, ((t0.c2)IS(t0.c2))))) ORDER BY ((CASE WHEN t0.c2 THEN x'' END) BETWEEN (CAST(t0.c2 AS TEXT)) AND (CAST(x'' AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT (((t0.c2 COLLATE BINARY IN (t0.c2, ((t0.c2)IS(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c2 THEN x'' END) BETWEEN (CAST(t0.c2 AS TEXT)) AND (CAST(x'' AS BLOB))) DESC);
SELECT * FROM t0 WHERE ((t0.c2 COLLATE BINARY IN (t0.c2, ((t0.c2)IS(t0.c2))))) ORDER BY ((CASE WHEN t0.c2 THEN x'' END) BETWEEN (CAST(t0.c2 AS TEXT)) AND (CAST(x'' AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT (((t0.c2 COLLATE BINARY IN (t0.c2, ((t0.c2)IS(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c2 THEN x'' END) BETWEEN (CAST(t0.c2 AS TEXT)) AND (CAST(x'' AS BLOB))) DESC);
SELECT * FROM t0 WHERE ((t0.c2 COLLATE BINARY IN (t0.c2, ((t0.c2)IS(t0.c2))))) ORDER BY ((CASE WHEN t0.c2 THEN x'' END) BETWEEN (CAST(t0.c2 AS TEXT)) AND (CAST(x'' AS BLOB))) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(TRIM(DISTINCT vt0.c2) AS REAL)) ORDER BY (((((vt0.c2)|(vt0.c1)), ((((t0.c2)OR(vt0.c0)))OR(t0.c2)), t0.c2))>((x'babca4eb' COLLATE BINARY, (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), vt0.c1))) DESC, ((((('')GLOB(vt0.c1))))<=((((t0.c2)&(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT vt0.c2) AS REAL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c2)|(vt0.c1)), ((((t0.c2)OR(vt0.c0)))OR(t0.c2)), t0.c2))>((x'babca4eb' COLLATE BINARY, (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), vt0.c1))) DESC, ((((('')GLOB(vt0.c1))))<=((((t0.c2)&(t0.c2))))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(TRIM(DISTINCT vt0.c2) AS REAL)) ORDER BY (((((vt0.c2)|(vt0.c1)), ((((t0.c2)OR(vt0.c0)))OR(t0.c2)), t0.c2))>((x'babca4eb' COLLATE BINARY, (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), vt0.c1))) DESC, ((((('')GLOB(vt0.c1))))<=((((t0.c2)&(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT vt0.c2) AS REAL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c2)|(vt0.c1)), ((((t0.c2)OR(vt0.c0)))OR(t0.c2)), t0.c2))>((x'babca4eb' COLLATE BINARY, (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), vt0.c1))) DESC, ((((('')GLOB(vt0.c1))))<=((((t0.c2)&(t0.c2))))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(TRIM(DISTINCT vt0.c2) AS REAL)) ORDER BY (((((vt0.c2)|(vt0.c1)), ((((t0.c2)OR(vt0.c0)))OR(t0.c2)), t0.c2))>((x'babca4eb' COLLATE BINARY, (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), vt0.c1))) DESC, ((((('')GLOB(vt0.c1))))<=((((t0.c2)&(t0.c2)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON t0.c2 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(t0.c2)))OR(vt0.c0))))<(((- (0.2637638047655797))))) DESC, (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) IN (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON t0.c2 ORDER BY (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(t0.c2)))OR(vt0.c0))))<(((- (0.2637638047655797))))) DESC, (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) IN (CAST(vt0.c0 AS INTEGER))) ASC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON t0.c2 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(t0.c2)))OR(vt0.c0))))<(((- (0.2637638047655797))))) DESC, (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) IN (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON t0.c2 ORDER BY (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(t0.c2)))OR(vt0.c0))))<(((- (0.2637638047655797))))) DESC, (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) IN (CAST(vt0.c0 AS INTEGER))) ASC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON t0.c2 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(t0.c2)))OR(vt0.c0))))<(((- (0.2637638047655797))))) DESC, (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) IN (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN 0.621392687015416 COLLATE NOCASE THEN ((vt0.c0)>(1.144595883E9)) WHEN vt0.c0 THEN (+ (vt0.c2)) WHEN ((vt0.c2) IS TRUE) THEN (vt0.c2 IN ()) ELSE ((vt0.c0)LIKE(vt0.c2)) END) ORDER BY ((((0X290f47c4)OR(((vt0.c1)>(vt0.c2)))))AND(((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.621392687015416 COLLATE NOCASE THEN ((vt0.c0)>(1.144595883E9)) WHEN vt0.c0 THEN (+ (vt0.c2)) WHEN ((vt0.c2) IS TRUE) THEN (vt0.c2 IN ()) ELSE ((vt0.c0)LIKE(vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((0X290f47c4)OR(((vt0.c1)>(vt0.c2)))))AND(((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN 0.621392687015416 COLLATE NOCASE THEN ((vt0.c0)>(1.144595883E9)) WHEN vt0.c0 THEN (+ (vt0.c2)) WHEN ((vt0.c2) IS TRUE) THEN (vt0.c2 IN ()) ELSE ((vt0.c0)LIKE(vt0.c2)) END) ORDER BY ((((0X290f47c4)OR(((vt0.c1)>(vt0.c2)))))AND(((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.621392687015416 COLLATE NOCASE THEN ((vt0.c0)>(1.144595883E9)) WHEN vt0.c0 THEN (+ (vt0.c2)) WHEN ((vt0.c2) IS TRUE) THEN (vt0.c2 IN ()) ELSE ((vt0.c0)LIKE(vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((0X290f47c4)OR(((vt0.c1)>(vt0.c2)))))AND(((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN 0.621392687015416 COLLATE NOCASE THEN ((vt0.c0)>(1.144595883E9)) WHEN vt0.c0 THEN (+ (vt0.c2)) WHEN ((vt0.c2) IS TRUE) THEN (vt0.c2 IN ()) ELSE ((vt0.c0)LIKE(vt0.c2)) END) ORDER BY ((((0X290f47c4)OR(((vt0.c1)>(vt0.c2)))))AND(((vt0.c0) NOT NULL)));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)<>(t0.c2)) IN (((t0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)<>(t0.c2)) IN (((t0.c2) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)<>(t0.c2)) IN (((t0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)<>(t0.c2)) IN (((t0.c2) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)<>(t0.c2)) IN (((t0.c2) ISNULL))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1 IN ()))OR(((0.4686268551557409) BETWEEN (vt0.c2) AND (vt0.c1)))))OR(0.10009850442251278))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1 IN ()))OR(((0.4686268551557409) BETWEEN (vt0.c2) AND (vt0.c1)))))OR(0.10009850442251278))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1 IN ()))OR(((0.4686268551557409) BETWEEN (vt0.c2) AND (vt0.c1)))))OR(0.10009850442251278))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1 IN ()))OR(((0.4686268551557409) BETWEEN (vt0.c2) AND (vt0.c1)))))OR(0.10009850442251278))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1 IN ()))OR(((0.4686268551557409) BETWEEN (vt0.c2) AND (vt0.c1)))))OR(0.10009850442251278))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) IN ()) ASC;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (NULL IN ()) COLLATE RTRIM COLLATE RTRIM WHERE ((NULL COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (NULL IN ()) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (NULL IN ()) COLLATE RTRIM COLLATE RTRIM WHERE ((NULL COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (NULL IN ()) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (NULL IN ()) COLLATE RTRIM COLLATE RTRIM WHERE ((NULL COLLATE RTRIM IN ()));
SELECT ALL * FROM t0 WHERE (((((t0.c2)>=(t0.c2))) NOTNULL)) ORDER BY CASE WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c2 END THEN t0.c2 ELSE ((x'') NOT BETWEEN (t0.c2) AND (-1720938241)) END DESC  NULLS FIRST, PRINTF(t0.c2, t0.c2, t0.c2) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>=(t0.c2))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c2 END THEN t0.c2 ELSE ((x'') NOT BETWEEN (t0.c2) AND (-1720938241)) END DESC  NULLS FIRST, PRINTF(t0.c2, t0.c2, t0.c2) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c2)>=(t0.c2))) NOTNULL)) ORDER BY CASE WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c2 END THEN t0.c2 ELSE ((x'') NOT BETWEEN (t0.c2) AND (-1720938241)) END DESC  NULLS FIRST, PRINTF(t0.c2, t0.c2, t0.c2) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>=(t0.c2))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c2 END THEN t0.c2 ELSE ((x'') NOT BETWEEN (t0.c2) AND (-1720938241)) END DESC  NULLS FIRST, PRINTF(t0.c2, t0.c2, t0.c2) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c2)>=(t0.c2))) NOTNULL)) ORDER BY CASE WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c2 END THEN t0.c2 ELSE ((x'') NOT BETWEEN (t0.c2) AND (-1720938241)) END DESC  NULLS FIRST, PRINTF(t0.c2, t0.c2, t0.c2) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (vt0.c0))) ORDER BY (((t0.c2)) BETWEEN (((~ (vt0.c2)))) AND ((((((t0.c2)AND(vt0.c2)))OR(x''))))), ((t0.c2) NOTNULL), LIKELIHOOD(DISTINCT t0.c2, 0.43611839262768637);
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c2)) BETWEEN (((~ (vt0.c2)))) AND ((((((t0.c2)AND(vt0.c2)))OR(x''))))), ((t0.c2) NOTNULL), LIKELIHOOD(DISTINCT t0.c2, 0.43611839262768637));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (vt0.c0))) ORDER BY (((t0.c2)) BETWEEN (((~ (vt0.c2)))) AND ((((((t0.c2)AND(vt0.c2)))OR(x''))))), ((t0.c2) NOTNULL), LIKELIHOOD(DISTINCT t0.c2, 0.43611839262768637);
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c2)) BETWEEN (((~ (vt0.c2)))) AND ((((((t0.c2)AND(vt0.c2)))OR(x''))))), ((t0.c2) NOTNULL), LIKELIHOOD(DISTINCT t0.c2, 0.43611839262768637));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (vt0.c0))) ORDER BY (((t0.c2)) BETWEEN (((~ (vt0.c2)))) AND ((((((t0.c2)AND(vt0.c2)))OR(x''))))), ((t0.c2) NOTNULL), LIKELIHOOD(DISTINCT t0.c2, 0.43611839262768637);
SELECT ALL * FROM vt0, t0 WHERE ((+ ((t0.c2 IN ())))) ORDER BY 0Xffffffffa4018cbb ASC, (((CASE WHEN t0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)), CAST(t0.c2 AS BLOB)))>((((vt0.c1) IS FALSE), CAST('587489675' AS REAL), CAST(vt0.c2 AS TEXT))))  NULLS LAST, CASE ((vt0.c1)/(vt0.c1))  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c0)<=(0Xfffffffff52d5d45)) WHEN vt0.c0 THEN t0.c2 WHEN (((t0.c2, t0.c2, vt0.c1)) NOT BETWEEN ((t0.c2, vt0.c1, vt0.c0)) AND ((x'', vt0.c1, t0.c2))) THEN ((x'') BETWEEN (vt0.c1) AND (vt0.c1)) END;
SELECT SUM(count) FROM (SELECT (((+ ((t0.c2 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0Xffffffffa4018cbb ASC, (((CASE WHEN t0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)), CAST(t0.c2 AS BLOB)))>((((vt0.c1) IS FALSE), CAST('587489675' AS REAL), CAST(vt0.c2 AS TEXT))))  NULLS LAST, CASE ((vt0.c1)/(vt0.c1))  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c0)<=(0xfffffffff52d5d45)) WHEN vt0.c0 THEN t0.c2 WHEN (((t0.c2, t0.c2, vt0.c1)) NOT BETWEEN ((t0.c2, vt0.c1, vt0.c0)) AND ((x'', vt0.c1, t0.c2))) THEN ((x'') BETWEEN (vt0.c1) AND (vt0.c1)) END);
SELECT ALL * FROM vt0, t0 WHERE ((+ ((t0.c2 IN ())))) ORDER BY 0Xffffffffa4018cbb ASC, (((CASE WHEN t0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)), CAST(t0.c2 AS BLOB)))>((((vt0.c1) IS FALSE), CAST('587489675' AS REAL), CAST(vt0.c2 AS TEXT))))  NULLS LAST, CASE ((vt0.c1)/(vt0.c1))  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c0)<=(0Xfffffffff52d5d45)) WHEN vt0.c0 THEN t0.c2 WHEN (((t0.c2, t0.c2, vt0.c1)) NOT BETWEEN ((t0.c2, vt0.c1, vt0.c0)) AND ((x'', vt0.c1, t0.c2))) THEN ((x'') BETWEEN (vt0.c1) AND (vt0.c1)) END;
SELECT SUM(count) FROM (SELECT (((+ ((t0.c2 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0Xffffffffa4018cbb ASC, (((CASE WHEN t0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)), CAST(t0.c2 AS BLOB)))>((((vt0.c1) IS FALSE), CAST('587489675' AS REAL), CAST(vt0.c2 AS TEXT))))  NULLS LAST, CASE ((vt0.c1)/(vt0.c1))  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c0)<=(0xfffffffff52d5d45)) WHEN vt0.c0 THEN t0.c2 WHEN (((t0.c2, t0.c2, vt0.c1)) NOT BETWEEN ((t0.c2, vt0.c1, vt0.c0)) AND ((x'', vt0.c1, t0.c2))) THEN ((x'') BETWEEN (vt0.c1) AND (vt0.c1)) END);
SELECT ALL * FROM vt0, t0 WHERE ((+ ((t0.c2 IN ())))) ORDER BY 0Xffffffffa4018cbb ASC, (((CASE WHEN t0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)), CAST(t0.c2 AS BLOB)))>((((vt0.c1) IS FALSE), CAST('587489675' AS REAL), CAST(vt0.c2 AS TEXT))))  NULLS LAST, CASE ((vt0.c1)/(vt0.c1))  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c0)<=(0Xfffffffff52d5d45)) WHEN vt0.c0 THEN t0.c2 WHEN (((t0.c2, t0.c2, vt0.c1)) NOT BETWEEN ((t0.c2, vt0.c1, vt0.c0)) AND ((x'', vt0.c1, t0.c2))) THEN ((x'') BETWEEN (vt0.c1) AND (vt0.c1)) END;
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((vt0.c0)LIKE('-255727092')) THEN (vt0.c2 IN ()) WHEN ((vt0.c2) IS FALSE) THEN CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END WHEN vt0.c0 THEN ((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)) ELSE vt0.c2 COLLATE BINARY END) ORDER BY (((vt0.c2) NOT NULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)LIKE('-255727092')) THEN (vt0.c2 IN ()) WHEN ((vt0.c2) IS FALSE) THEN CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END WHEN vt0.c0 THEN ((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)) ELSE vt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c2) NOT NULL) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((vt0.c0)LIKE('-255727092')) THEN (vt0.c2 IN ()) WHEN ((vt0.c2) IS FALSE) THEN CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END WHEN vt0.c0 THEN ((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)) ELSE vt0.c2 COLLATE BINARY END) ORDER BY (((vt0.c2) NOT NULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)LIKE('-255727092')) THEN (vt0.c2 IN ()) WHEN ((vt0.c2) IS FALSE) THEN CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END WHEN vt0.c0 THEN ((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)) ELSE vt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c2) NOT NULL) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((vt0.c0)LIKE('-255727092')) THEN (vt0.c2 IN ()) WHEN ((vt0.c2) IS FALSE) THEN CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END WHEN vt0.c0 THEN ((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)) ELSE vt0.c2 COLLATE BINARY END) ORDER BY (((vt0.c2) NOT NULL) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN -701917596 WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c2, t0.c2, vt0.c1))=((vt0.c0, 80090961, '-1084876942'))) WHEN (((vt0.c1))<((vt0.c2))) THEN (('2132068986') NOT BETWEEN (vt0.c0) AND (t0.c2)) ELSE (vt0.c0 IN (t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c1 IN ()) THEN -701917596 WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c2, t0.c2, vt0.c1))==((vt0.c0, 80090961, '-1084876942'))) WHEN (((vt0.c1))<((vt0.c2))) THEN (('2132068986') NOT BETWEEN (vt0.c0) AND (t0.c2)) ELSE (vt0.c0 IN (t0.c2)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN -701917596 WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c2, t0.c2, vt0.c1))=((vt0.c0, 80090961, '-1084876942'))) WHEN (((vt0.c1))<((vt0.c2))) THEN (('2132068986') NOT BETWEEN (vt0.c0) AND (t0.c2)) ELSE (vt0.c0 IN (t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c1 IN ()) THEN -701917596 WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c2, t0.c2, vt0.c1))==((vt0.c0, 80090961, '-1084876942'))) WHEN (((vt0.c1))<((vt0.c2))) THEN (('2132068986') NOT BETWEEN (vt0.c0) AND (t0.c2)) ELSE (vt0.c0 IN (t0.c2)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN -701917596 WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c2, t0.c2, vt0.c1))=((vt0.c0, 80090961, '-1084876942'))) WHEN (((vt0.c1))<((vt0.c2))) THEN (('2132068986') NOT BETWEEN (vt0.c0) AND (t0.c2)) ELSE (vt0.c0 IN (t0.c2)) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c2) NOT BETWEEN (x'') AND (t0.c2))) ISNULL)) ORDER BY (((DATE(vt0.c1, vt0.c2, t0.c2, vt0.c0, vt0.c2)))<=((ABS(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (x'') AND (t0.c2))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((DATE(vt0.c1, vt0.c2, t0.c2, vt0.c0, vt0.c2)))<=((ABS(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c2) NOT BETWEEN (x'') AND (t0.c2))) ISNULL)) ORDER BY (((DATE(vt0.c1, vt0.c2, t0.c2, vt0.c0, vt0.c2)))<=((ABS(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (x'') AND (t0.c2))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((DATE(vt0.c1, vt0.c2, t0.c2, vt0.c0, vt0.c2)))<=((ABS(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c2) NOT BETWEEN (x'') AND (t0.c2))) ISNULL)) ORDER BY (((DATE(vt0.c1, vt0.c2, t0.c2, vt0.c0, vt0.c2)))<=((ABS(vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY ((((((((((vt0.c2) NOT NULL))AND(((((vt0.c2)OR(vt0.c2)))OR(vt0.c2)))))AND(((0.29418971728820886)<>(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))))OR(((vt0.c1)|(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c2) NOT NULL))AND(((((vt0.c2)OR(vt0.c2)))OR(vt0.c2)))))AND(((0.29418971728820886)!=(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))))OR(((vt0.c1)|(vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY ((((((((((vt0.c2) NOT NULL))AND(((((vt0.c2)OR(vt0.c2)))OR(vt0.c2)))))AND(((0.29418971728820886)<>(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))))OR(((vt0.c1)|(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c2) NOT NULL))AND(((((vt0.c2)OR(vt0.c2)))OR(vt0.c2)))))AND(((0.29418971728820886)!=(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))))OR(((vt0.c1)|(vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY ((((((((((vt0.c2) NOT NULL))AND(((((vt0.c2)OR(vt0.c2)))OR(vt0.c2)))))AND(((0.29418971728820886)<>(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))))OR(((vt0.c1)|(vt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c2 COLLATE RTRIM) IS TRUE)) ORDER BY CAST(((vt0.c2)<<(vt0.c0)) AS INTEGER), (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((vt0.c2)<<(vt0.c0)) AS INTEGER), (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)) IN ())  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c2 COLLATE RTRIM) IS TRUE)) ORDER BY CAST(((vt0.c2)<<(vt0.c0)) AS INTEGER), (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((vt0.c2)<<(vt0.c0)) AS INTEGER), (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)) IN ())  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c2 COLLATE RTRIM) IS TRUE)) ORDER BY CAST(((vt0.c2)<<(vt0.c0)) AS INTEGER), (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)) IN ())  NULLS FIRST;
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT ALL * FROM t0, vt0 WHERE ((((NOT ('a\r'))) IS FALSE)) ORDER BY ((((vt0.c2)>>(vt0.c1)))%(((vt0.c2) NOT NULL))), vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT ('a\r'))) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c2)>>(vt0.c1)))%(((vt0.c2) NOT NULL))), vt0.c0  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((NOT ('a\r'))) IS FALSE)) ORDER BY ((((vt0.c2)>>(vt0.c1)))%(((vt0.c2) NOT NULL))), vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT ('a\r'))) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c2)>>(vt0.c1)))%(((vt0.c2) NOT NULL))), vt0.c0  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((NOT ('a\r'))) IS FALSE)) ORDER BY ((((vt0.c2)>>(vt0.c1)))%(((vt0.c2) NOT NULL))), vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (((vt0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c2, vt0.c1)))  WHEN (((vt0.c2))<>((vt0.c1))) THEN ((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)) ELSE json_remove(vt0.c2, vt0.c2, vt0.c1, vt0.c2) END) ORDER BY ((((vt0.c2)<=(vt0.c0))) NOT BETWEEN (((vt0.c2)-(vt0.c1))) AND ((vt0.c1 IN ())))  NULLS LAST, ((((((((((vt0.c1)>=(vt0.c1)))AND((- (vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END)))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND((- (vt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c2, vt0.c1)))  WHEN (((vt0.c2))<>((vt0.c1))) THEN ((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)) ELSE json_remove(vt0.c2, vt0.c2, vt0.c1, vt0.c2) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)<=(vt0.c0))) NOT BETWEEN (((vt0.c2)-(vt0.c1))) AND ((vt0.c1 IN ())))  NULLS LAST, ((((((((((vt0.c1)>=(vt0.c1)))AND((- (vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END)))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND((- (vt0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (((vt0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c2, vt0.c1)))  WHEN (((vt0.c2))<>((vt0.c1))) THEN ((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)) ELSE json_remove(vt0.c2, vt0.c2, vt0.c1, vt0.c2) END) ORDER BY ((((vt0.c2)<=(vt0.c0))) NOT BETWEEN (((vt0.c2)-(vt0.c1))) AND ((vt0.c1 IN ())))  NULLS LAST, ((((((((((vt0.c1)>=(vt0.c1)))AND((- (vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END)))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND((- (vt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c2, vt0.c1)))  WHEN (((vt0.c2))<>((vt0.c1))) THEN ((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)) ELSE json_remove(vt0.c2, vt0.c2, vt0.c1, vt0.c2) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)<=(vt0.c0))) NOT BETWEEN (((vt0.c2)-(vt0.c1))) AND ((vt0.c1 IN ())))  NULLS LAST, ((((((((((vt0.c1)>=(vt0.c1)))AND((- (vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END)))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND((- (vt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c2 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c2 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c2 AS INTEGER)) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(x'' AS BLOB))OR(((vt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS BLOB))OR(((vt0.c2) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(x'' AS BLOB))OR(((vt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS BLOB))OR(((vt0.c2) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(x'' AS BLOB))OR(((vt0.c2) ISNULL))));
SELECT ALL * FROM t0 WHERE (((((((t0.c2)AND(t0.c2)))AND(x'160c')))=((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))) ORDER BY (((x'e25a' IN ()))GLOB(((t0.c2) BETWEEN (-9.89607893E8) AND (t0.c2)))) ASC, (((((NULL))<=((t0.c2))))<>((~ (t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)AND(t0.c2)))AND(x'160c')))=((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY (((x'e25a' IN ()))GLOB(((t0.c2) BETWEEN (-9.89607893E8) AND (t0.c2)))) ASC, (((((NULL))<=((t0.c2))))!=((~ (t0.c2))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((((t0.c2)AND(t0.c2)))AND(x'160c')))=((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))) ORDER BY (((x'e25a' IN ()))GLOB(((t0.c2) BETWEEN (-9.89607893E8) AND (t0.c2)))) ASC, (((((NULL))<=((t0.c2))))<>((~ (t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)AND(t0.c2)))AND(x'160c')))=((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY (((x'e25a' IN ()))GLOB(((t0.c2) BETWEEN (-9.89607893E8) AND (t0.c2)))) ASC, (((((NULL))<=((t0.c2))))!=((~ (t0.c2))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((((t0.c2)AND(t0.c2)))AND(x'160c')))=((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))) ORDER BY (((x'e25a' IN ()))GLOB(((t0.c2) BETWEEN (-9.89607893E8) AND (t0.c2)))) ASC, (((((NULL))<=((t0.c2))))<>((~ (t0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c2 COLLATE BINARY)*(UNICODE(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE BINARY)*(UNICODE(vt0.c1)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c2 COLLATE BINARY)*(UNICODE(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE BINARY)*(UNICODE(vt0.c1)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c2 COLLATE BINARY)*(UNICODE(vt0.c1))));
SELECT * FROM t0, vt0 WHERE (CASE CASE WHEN vt0.c2 THEN vt0.c2 ELSE t0.c2 END  WHEN NULL THEN (NOT (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c2 THEN vt0.c2 ELSE t0.c2 END  WHEN NULL THEN (NOT (vt0.c1)) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE CASE WHEN vt0.c2 THEN vt0.c2 ELSE t0.c2 END  WHEN NULL THEN (NOT (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c2 THEN vt0.c2 ELSE t0.c2 END  WHEN NULL THEN (NOT (vt0.c1)) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE CASE WHEN vt0.c2 THEN vt0.c2 ELSE t0.c2 END  WHEN NULL THEN (NOT (vt0.c1)) END);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((- (t0.c2))) NOT NULL) WHERE (t0.c2) ORDER BY (NOT (((((vt0.c0)OR(vt0.c2)))OR('')))), (~ (((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((- (t0.c2))) NOT NULL) ORDER BY (NOT (((((vt0.c0)OR(vt0.c2)))OR('')))), (~ (((vt0.c0) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((- (t0.c2))) NOT NULL) WHERE (t0.c2) ORDER BY (NOT (((((vt0.c0)OR(vt0.c2)))OR('')))), (~ (((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((- (t0.c2))) NOT NULL) ORDER BY (NOT (((((vt0.c0)OR(vt0.c2)))OR('')))), (~ (((vt0.c0) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((- (t0.c2))) NOT NULL) WHERE (t0.c2) ORDER BY (NOT (((((vt0.c0)OR(vt0.c2)))OR('')))), (~ (((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)&((vt0.c1 IN ())))) ORDER BY NULL  NULLS FIRST, ((vt0.c1)>=(CAST(vt0.c1 AS REAL))) DESC  NULLS LAST, CAST(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)&((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST, ((vt0.c1)>=(CAST(vt0.c1 AS REAL))) DESC  NULLS LAST, CAST(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) AS INTEGER) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)&((vt0.c1 IN ())))) ORDER BY NULL  NULLS FIRST, ((vt0.c1)>=(CAST(vt0.c1 AS REAL))) DESC  NULLS LAST, CAST(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)&((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST, ((vt0.c1)>=(CAST(vt0.c1 AS REAL))) DESC  NULLS LAST, CAST(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) AS INTEGER) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)&((vt0.c1 IN ())))) ORDER BY NULL  NULLS FIRST, ((vt0.c1)>=(CAST(vt0.c1 AS REAL))) DESC  NULLS LAST, CAST(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (json_type(TRIM(DISTINCT t0.c2, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((json_type(TRIM(DISTINCT t0.c2, vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (json_type(TRIM(DISTINCT t0.c2, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((json_type(TRIM(DISTINCT t0.c2, vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (json_type(TRIM(DISTINCT t0.c2, vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c2 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c2 AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c2 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c2 AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c2 AS BLOB));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2 IN ()))OR(((t0.c2) IS FALSE))))AND(t0.c2)));
SELECT SUM(count) FROM (SELECT (((((((t0.c2 IN ()))OR(((t0.c2) IS FALSE))))AND(t0.c2))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2 IN ()))OR(((t0.c2) IS FALSE))))AND(t0.c2)));
SELECT SUM(count) FROM (SELECT (((((((t0.c2 IN ()))OR(((t0.c2) IS FALSE))))AND(t0.c2))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2 IN ()))OR(((t0.c2) IS FALSE))))AND(t0.c2)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c2) ORDER BY (((((0.28162109711810857)AND(t0.c2)))OR(vt0.c1)) IN (CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((0.28162109711810857)AND(t0.c2)))OR(vt0.c1)) IN (CAST(vt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c2) ORDER BY (((((0.28162109711810857)AND(t0.c2)))OR(vt0.c1)) IN (CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((0.28162109711810857)AND(t0.c2)))OR(vt0.c1)) IN (CAST(vt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c2) ORDER BY (((((0.28162109711810857)AND(t0.c2)))OR(vt0.c1)) IN (CAST(vt0.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c1)>>(t0.c2)) COLLATE RTRIM) ORDER BY ((vt0.c2 COLLATE NOCASE) BETWEEN (0x6a2fd1f2) AND ((vt0.c1 IN ()))), CASE ((vt0.c0) ISNULL)  WHEN ((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c1 WHEN (- (t0.c2)) THEN 0Xffffffffdfcef594 COLLATE BINARY WHEN x'' THEN ((((vt0.c0)AND(NULL)))AND(t0.c2)) ELSE CASE vt0.c0  WHEN t0.c2 THEN vt0.c1 END END DESC  NULLS LAST, ((vt0.c0 COLLATE NOCASE)||(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>>(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c2 COLLATE NOCASE) BETWEEN (0X6a2fd1f2) AND ((vt0.c1 IN ()))), CASE ((vt0.c0) ISNULL)  WHEN ((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c1 WHEN (- (t0.c2)) THEN 0xffffffffdfcef594 COLLATE BINARY WHEN x'' THEN ((((vt0.c0)AND(NULL)))AND(t0.c2)) ELSE CASE vt0.c0  WHEN t0.c2 THEN vt0.c1 END END DESC  NULLS LAST, ((vt0.c0 COLLATE NOCASE)||(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c2 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c1)>>(t0.c2)) COLLATE RTRIM) ORDER BY ((vt0.c2 COLLATE NOCASE) BETWEEN (0x6a2fd1f2) AND ((vt0.c1 IN ()))), CASE ((vt0.c0) ISNULL)  WHEN ((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c1 WHEN (- (t0.c2)) THEN 0Xffffffffdfcef594 COLLATE BINARY WHEN x'' THEN ((((vt0.c0)AND(NULL)))AND(t0.c2)) ELSE CASE vt0.c0  WHEN t0.c2 THEN vt0.c1 END END DESC  NULLS LAST, ((vt0.c0 COLLATE NOCASE)||(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>>(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c2 COLLATE NOCASE) BETWEEN (0X6a2fd1f2) AND ((vt0.c1 IN ()))), CASE ((vt0.c0) ISNULL)  WHEN ((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c1 WHEN (- (t0.c2)) THEN 0xffffffffdfcef594 COLLATE BINARY WHEN x'' THEN ((((vt0.c0)AND(NULL)))AND(t0.c2)) ELSE CASE vt0.c0  WHEN t0.c2 THEN vt0.c1 END END DESC  NULLS LAST, ((vt0.c0 COLLATE NOCASE)||(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c2 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c1)>>(t0.c2)) COLLATE RTRIM) ORDER BY ((vt0.c2 COLLATE NOCASE) BETWEEN (0x6a2fd1f2) AND ((vt0.c1 IN ()))), CASE ((vt0.c0) ISNULL)  WHEN ((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c1 WHEN (- (t0.c2)) THEN 0Xffffffffdfcef594 COLLATE BINARY WHEN x'' THEN ((((vt0.c0)AND(NULL)))AND(t0.c2)) ELSE CASE vt0.c0  WHEN t0.c2 THEN vt0.c1 END END DESC  NULLS LAST, ((vt0.c0 COLLATE NOCASE)||(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c2 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c2))) NOT NULL)) ORDER BY 0.4668231663157456;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY 0.4668231663157456);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c2))) NOT NULL)) ORDER BY 0.4668231663157456;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY 0.4668231663157456);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c2))) NOT NULL)) ORDER BY 0.4668231663157456;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) ISNULL)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)))>=(((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)))>=(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)))>=(((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)))>=(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)))>=(((vt0.c0)IS(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((NOT (((vt0.c0)IS NOT(t0.c2))))) ORDER BY NULLIF(((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)), CASE WHEN vt0.c2 THEN '983994663' ELSE vt0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)IS NOT(t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY NULLIF(((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)), CASE WHEN vt0.c2 THEN '983994663' ELSE vt0.c0 END) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((NOT (((vt0.c0)IS NOT(t0.c2))))) ORDER BY NULLIF(((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)), CASE WHEN vt0.c2 THEN '983994663' ELSE vt0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)IS NOT(t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY NULLIF(((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)), CASE WHEN vt0.c2 THEN '983994663' ELSE vt0.c0 END) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((NOT (((vt0.c0)IS NOT(t0.c2))))) ORDER BY NULLIF(((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)), CASE WHEN vt0.c2 THEN '983994663' ELSE vt0.c0 END) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((((NULL)AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((NULL)AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((((NULL)AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((NULL)AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((((NULL)AND(vt0.c0)))OR(vt0.c0))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON LOWER(DISTINCT ((0X5d645999) IS TRUE)) WHERE ((((t0.c2)) NOT BETWEEN ((((t0.c2) NOT NULL))) AND ((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN ((((t0.c2) NOT NULL))) AND ((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON LOWER(DISTINCT ((0X5d645999) IS TRUE)));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON LOWER(DISTINCT ((0X5d645999) IS TRUE)) WHERE ((((t0.c2)) NOT BETWEEN ((((t0.c2) NOT NULL))) AND ((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN ((((t0.c2) NOT NULL))) AND ((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON LOWER(DISTINCT ((0X5d645999) IS TRUE)));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON LOWER(DISTINCT ((0X5d645999) IS TRUE)) WHERE ((((t0.c2)) NOT BETWEEN ((((t0.c2) NOT NULL))) AND ((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1))))));
SELECT COUNT(*) FROM t0, vt0 WHERE (json_insert(rtreenode(t0.c2, vt0.c0), (vt0.c0 IN ()), ((t0.c2)<(vt0.c0)), NULL, CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END, vt0.c2, ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(0.7306740194399757)))AND(t0.c2)))) ORDER BY CAST('-1450476740' AS TEXT), (((CAST(t0.c2 AS INTEGER)))>((((vt0.c2)>(vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_insert(rtreenode(t0.c2, vt0.c0), (vt0.c0 IN ()), ((t0.c2)<(vt0.c0)), NULL, CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END, vt0.c2, ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(0.7306740194399757)))AND(t0.c2)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST('-1450476740' AS TEXT), (((CAST(t0.c2 AS INTEGER)))>((((vt0.c2)>(vt0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (json_insert(rtreenode(t0.c2, vt0.c0), (vt0.c0 IN ()), ((t0.c2)<(vt0.c0)), NULL, CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END, vt0.c2, ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(0.7306740194399757)))AND(t0.c2)))) ORDER BY CAST('-1450476740' AS TEXT), (((CAST(t0.c2 AS INTEGER)))>((((vt0.c2)>(vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_insert(rtreenode(t0.c2, vt0.c0), (vt0.c0 IN ()), ((t0.c2)<(vt0.c0)), NULL, CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END, vt0.c2, ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(0.7306740194399757)))AND(t0.c2)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST('-1450476740' AS TEXT), (((CAST(t0.c2 AS INTEGER)))>((((vt0.c2)>(vt0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (json_insert(rtreenode(t0.c2, vt0.c0), (vt0.c0 IN ()), ((t0.c2)<(vt0.c0)), NULL, CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END, vt0.c2, ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(0.7306740194399757)))AND(t0.c2)))) ORDER BY CAST('-1450476740' AS TEXT), (((CAST(t0.c2 AS INTEGER)))>((((vt0.c2)>(vt0.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((vt0.c1)) BETWEEN ((((0.14019590945640936)LIKE(vt0.c2)))) AND ((t0.c2 COLLATE NOCASE)))) ORDER BY (~ (t0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((0.14019590945640936)LIKE(vt0.c2)))) AND ((t0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (~ (t0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((vt0.c1)) BETWEEN ((((0.14019590945640936)LIKE(vt0.c2)))) AND ((t0.c2 COLLATE NOCASE)))) ORDER BY (~ (t0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((0.14019590945640936)LIKE(vt0.c2)))) AND ((t0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (~ (t0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((vt0.c1)) BETWEEN ((((0.14019590945640936)LIKE(vt0.c2)))) AND ((t0.c2 COLLATE NOCASE)))) ORDER BY (~ (t0.c2 COLLATE BINARY));
SELECT * FROM t0, vt0 WHERE (((vt0.c0 COLLATE BINARY)%((((vt0.c1))==((vt0.c2)))))) ORDER BY ((((vt0.c1)OR((((vt0.c0))<((vt0.c2))))))AND(((t0.c2) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)%((((vt0.c1))=((vt0.c2)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c1)OR((((vt0.c0))<((vt0.c2))))))AND(((t0.c2) IS FALSE))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((vt0.c0 COLLATE BINARY)%((((vt0.c1))==((vt0.c2)))))) ORDER BY ((((vt0.c1)OR((((vt0.c0))<((vt0.c2))))))AND(((t0.c2) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)%((((vt0.c1))=((vt0.c2)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c1)OR((((vt0.c0))<((vt0.c2))))))AND(((t0.c2) IS FALSE))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((vt0.c0 COLLATE BINARY)%((((vt0.c1))==((vt0.c2)))))) ORDER BY ((((vt0.c1)OR((((vt0.c0))<((vt0.c2))))))AND(((t0.c2) IS FALSE))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((((vt0.c0)==(t0.c2)))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))))AND(CAST(vt0.c0 AS BLOB))))OR(CASE WHEN t0.c2 THEN vt0.c0 WHEN vt0.c1 THEN t0.c2 WHEN NULL THEN vt0.c2 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE t0.c2 END)))OR(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)==(t0.c2)))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))))AND(CAST(vt0.c0 AS BLOB))))OR(CASE WHEN t0.c2 THEN vt0.c0 WHEN vt0.c1 THEN t0.c2 WHEN NULL THEN vt0.c2 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE t0.c2 END)))OR(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((((vt0.c0)==(t0.c2)))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))))AND(CAST(vt0.c0 AS BLOB))))OR(CASE WHEN t0.c2 THEN vt0.c0 WHEN vt0.c1 THEN t0.c2 WHEN NULL THEN vt0.c2 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE t0.c2 END)))OR(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)==(t0.c2)))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))))AND(CAST(vt0.c0 AS BLOB))))OR(CASE WHEN t0.c2 THEN vt0.c0 WHEN vt0.c1 THEN t0.c2 WHEN NULL THEN vt0.c2 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE t0.c2 END)))OR(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((((vt0.c0)==(t0.c2)))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))))AND(CAST(vt0.c0 AS BLOB))))OR(CASE WHEN t0.c2 THEN vt0.c0 WHEN vt0.c1 THEN t0.c2 WHEN NULL THEN vt0.c2 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE t0.c2 END)))OR(vt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c2)IS(vt0.c0)))||(((vt0.c2)<>(vt0.c0))))) ORDER BY TRIM(DISTINCT ((vt0.c1)GLOB(vt0.c0))) ASC  NULLS LAST, vt0.c2 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)IS(vt0.c0)))||(((vt0.c2)<>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((vt0.c1)GLOB(vt0.c0))) ASC  NULLS LAST, vt0.c2 COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((((vt0.c2)IS(vt0.c0)))||(((vt0.c2)<>(vt0.c0))))) ORDER BY TRIM(DISTINCT ((vt0.c1)GLOB(vt0.c0))) ASC  NULLS LAST, vt0.c2 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)IS(vt0.c0)))||(((vt0.c2)<>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((vt0.c1)GLOB(vt0.c0))) ASC  NULLS LAST, vt0.c2 COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((((vt0.c2)IS(vt0.c0)))||(((vt0.c2)<>(vt0.c0))))) ORDER BY TRIM(DISTINCT ((vt0.c1)GLOB(vt0.c0))) ASC  NULLS LAST, vt0.c2 COLLATE NOCASE;
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1 COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE)/((- (vt0.c0)))) WHERE (((vt0.c2 COLLATE RTRIM) NOT BETWEEN ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))) AND ((((t0.c2))==((vt0.c1)))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0)))) AND ((((vt0.c2)<=(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE RTRIM) NOT BETWEEN ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))) AND ((((t0.c2))=((vt0.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE)/((- (vt0.c0)))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0)))) AND ((((vt0.c2)<=(vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE)/((- (vt0.c0)))) WHERE (((vt0.c2 COLLATE RTRIM) NOT BETWEEN ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))) AND ((((t0.c2))==((vt0.c1)))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0)))) AND ((((vt0.c2)<=(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE RTRIM) NOT BETWEEN ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))) AND ((((t0.c2))=((vt0.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE)/((- (vt0.c0)))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0)))) AND ((((vt0.c2)<=(vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE)/((- (vt0.c0)))) WHERE (((vt0.c2 COLLATE RTRIM) NOT BETWEEN ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))) AND ((((t0.c2))==((vt0.c1)))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0)))) AND ((((vt0.c2)<=(vt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2))) IS FALSE) WHERE ((- (vt0.c2))) ORDER BY ((((vt0.c2) ISNULL))<>(vt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c2))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2))) IS FALSE) ORDER BY ((((vt0.c2) ISNULL))!=(vt0.c2)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2))) IS FALSE) WHERE ((- (vt0.c2))) ORDER BY ((((vt0.c2) ISNULL))<>(vt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c2))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2))) IS FALSE) ORDER BY ((((vt0.c2) ISNULL))!=(vt0.c2)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2))) IS FALSE) WHERE ((- (vt0.c2))) ORDER BY ((((vt0.c2) ISNULL))<>(vt0.c2)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((CAST(t0.c2 AS TEXT))OR((+ (t0.c2)))))OR(((t0.c2)<<(t0.c2))))) ORDER BY CASE CASE t0.c2  WHEN t0.c2 THEN t0.c2 END  WHEN (((t0.c2, t0.c2, t0.c2))>=((t0.c2, t0.c2, t0.c2))) THEN CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c2 AS TEXT))OR((+ (t0.c2)))))OR(((t0.c2)<<(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY CASE CASE t0.c2  WHEN t0.c2 THEN t0.c2 END  WHEN (((t0.c2, t0.c2, t0.c2))>=((t0.c2, t0.c2, t0.c2))) THEN CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((CAST(t0.c2 AS TEXT))OR((+ (t0.c2)))))OR(((t0.c2)<<(t0.c2))))) ORDER BY CASE CASE t0.c2  WHEN t0.c2 THEN t0.c2 END  WHEN (((t0.c2, t0.c2, t0.c2))>=((t0.c2, t0.c2, t0.c2))) THEN CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c2 AS TEXT))OR((+ (t0.c2)))))OR(((t0.c2)<<(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY CASE CASE t0.c2  WHEN t0.c2 THEN t0.c2 END  WHEN (((t0.c2, t0.c2, t0.c2))>=((t0.c2, t0.c2, t0.c2))) THEN CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((CAST(t0.c2 AS TEXT))OR((+ (t0.c2)))))OR(((t0.c2)<<(t0.c2))))) ORDER BY CASE CASE t0.c2  WHEN t0.c2 THEN t0.c2 END  WHEN (((t0.c2, t0.c2, t0.c2))>=((t0.c2, t0.c2, t0.c2))) THEN CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (json_patch((vt0.c1 IN (vt0.c2)), 0.08497035306793732)) ORDER BY CAST(IFNULL(vt0.c1, vt0.c1) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch((vt0.c1 IN (vt0.c2)), 0.08497035306793732)) IS TRUE)  as count FROM vt0 ORDER BY CAST(IFNULL(vt0.c1, vt0.c1) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (json_patch((vt0.c1 IN (vt0.c2)), 0.08497035306793732)) ORDER BY CAST(IFNULL(vt0.c1, vt0.c1) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch((vt0.c1 IN (vt0.c2)), 0.08497035306793732)) IS TRUE)  as count FROM vt0 ORDER BY CAST(IFNULL(vt0.c1, vt0.c1) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (json_patch((vt0.c1 IN (vt0.c2)), 0.08497035306793732)) ORDER BY CAST(IFNULL(vt0.c1, vt0.c1) AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c1, vt0.c0))>((vt0.c0, vt0.c2, '-1825902674'))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0, vt0.c1, vt0.c0))>((vt0.c0, vt0.c2, '-1825902674')))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c1, vt0.c0))>((vt0.c0, vt0.c2, '-1825902674'))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0, vt0.c1, vt0.c0))>((vt0.c0, vt0.c2, '-1825902674')))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c1, vt0.c0))>((vt0.c0, vt0.c2, '-1825902674'))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE ((((vt0.c1)OR(t0.c2)))AND(vt0.c2))  WHEN ((((((((t0.c2)AND(vt0.c1)))OR(1.219535732E9)))AND(vt0.c2)))AND(vt0.c1)) THEN vt0.c2 WHEN (x'' IN (t0.c2)) THEN CAST(vt0.c2 AS NUMERIC) WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c0)IS(vt0.c0)) END) ORDER BY ((CASE t0.c2  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN 0.6560216178277972 WHEN t0.c2 THEN vt0.c2 ELSE t0.c2 END) IS FALSE), (((((((((('Jj')OR(vt0.c2)))OR(vt0.c0)))AND(t0.c2)))OR(t0.c2)))>=((- (x'0ee0')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c1)OR(t0.c2)))AND(vt0.c2))  WHEN ((((((((t0.c2)AND(vt0.c1)))OR(1.219535732E9)))AND(vt0.c2)))AND(vt0.c1)) THEN vt0.c2 WHEN (x'' IN (t0.c2)) THEN CAST(vt0.c2 AS NUMERIC) WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c0)IS(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE t0.c2  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN 0.6560216178277972 WHEN t0.c2 THEN vt0.c2 ELSE t0.c2 END) IS FALSE), (((((((((('Jj')OR(vt0.c2)))OR(vt0.c0)))AND(t0.c2)))OR(t0.c2)))>=((- (x'0ee0')))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE ((((vt0.c1)OR(t0.c2)))AND(vt0.c2))  WHEN ((((((((t0.c2)AND(vt0.c1)))OR(1.219535732E9)))AND(vt0.c2)))AND(vt0.c1)) THEN vt0.c2 WHEN (x'' IN (t0.c2)) THEN CAST(vt0.c2 AS NUMERIC) WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c0)IS(vt0.c0)) END) ORDER BY ((CASE t0.c2  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN 0.6560216178277972 WHEN t0.c2 THEN vt0.c2 ELSE t0.c2 END) IS FALSE), (((((((((('Jj')OR(vt0.c2)))OR(vt0.c0)))AND(t0.c2)))OR(t0.c2)))>=((- (x'0ee0')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c1)OR(t0.c2)))AND(vt0.c2))  WHEN ((((((((t0.c2)AND(vt0.c1)))OR(1.219535732E9)))AND(vt0.c2)))AND(vt0.c1)) THEN vt0.c2 WHEN (x'' IN (t0.c2)) THEN CAST(vt0.c2 AS NUMERIC) WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c0)IS(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE t0.c2  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN 0.6560216178277972 WHEN t0.c2 THEN vt0.c2 ELSE t0.c2 END) IS FALSE), (((((((((('Jj')OR(vt0.c2)))OR(vt0.c0)))AND(t0.c2)))OR(t0.c2)))>=((- (x'0ee0')))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE ((((vt0.c1)OR(t0.c2)))AND(vt0.c2))  WHEN ((((((((t0.c2)AND(vt0.c1)))OR(1.219535732E9)))AND(vt0.c2)))AND(vt0.c1)) THEN vt0.c2 WHEN (x'' IN (t0.c2)) THEN CAST(vt0.c2 AS NUMERIC) WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c0)IS(vt0.c0)) END) ORDER BY ((CASE t0.c2  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN 0.6560216178277972 WHEN t0.c2 THEN vt0.c2 ELSE t0.c2 END) IS FALSE), (((((((((('Jj')OR(vt0.c2)))OR(vt0.c0)))AND(t0.c2)))OR(t0.c2)))>=((- (x'0ee0')))) ASC;
SELECT * FROM vt0 WHERE (CAST(vt0.c2 AS NUMERIC) COLLATE NOCASE) ORDER BY (((((((((vt0.c0 IN ()))AND((- (vt0.c0)))))OR(CAST(vt0.c1 AS REAL))))OR(CAST(vt0.c2 AS REAL))))OR(CAST(vt0.c1 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c2 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0 IN ()))AND((- (vt0.c0)))))OR(CAST(vt0.c1 AS REAL))))OR(CAST(vt0.c2 AS REAL))))OR(CAST(vt0.c1 AS TEXT)))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(vt0.c2 AS NUMERIC) COLLATE NOCASE) ORDER BY (((((((((vt0.c0 IN ()))AND((- (vt0.c0)))))OR(CAST(vt0.c1 AS REAL))))OR(CAST(vt0.c2 AS REAL))))OR(CAST(vt0.c1 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c2 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0 IN ()))AND((- (vt0.c0)))))OR(CAST(vt0.c1 AS REAL))))OR(CAST(vt0.c2 AS REAL))))OR(CAST(vt0.c1 AS TEXT)))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(vt0.c2 AS NUMERIC) COLLATE NOCASE) ORDER BY (((((((((vt0.c0 IN ()))AND((- (vt0.c0)))))OR(CAST(vt0.c1 AS REAL))))OR(CAST(vt0.c2 AS REAL))))OR(CAST(vt0.c1 AS TEXT)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (NULLIF((vt0.c0 IN ()), (((x'a971', t0.c2, t0.c2))==((vt0.c0, vt0.c0, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((vt0.c0 IN ()), (((x'a971', t0.c2, t0.c2))=((vt0.c0, vt0.c0, vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (NULLIF((vt0.c0 IN ()), (((x'a971', t0.c2, t0.c2))==((vt0.c0, vt0.c0, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((vt0.c0 IN ()), (((x'a971', t0.c2, t0.c2))=((vt0.c0, vt0.c0, vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (NULLIF((vt0.c0 IN ()), (((x'a971', t0.c2, t0.c2))==((vt0.c0, vt0.c0, vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, vt0.c1, t0.c2)) BETWEEN ((vt0.c0 COLLATE NOCASE, vt0.c0, ((t0.c2) IS FALSE))) AND ((((t0.c2) NOTNULL), vt0.c2, TYPEOF(vt0.c2))))) ORDER BY CASE WHEN t0.c2 COLLATE RTRIM THEN ((t0.c2)IS NOT(vt0.c2)) WHEN ((((((((vt0.c2)AND(vt0.c2)))AND(t0.c2)))AND(vt0.c2)))AND('-679132582')) THEN ((t0.c2)<<(vt0.c1)) WHEN '' THEN ((x'1c64') IS TRUE) ELSE (((vt0.c2))>((vt0.c2))) END DESC  NULLS FIRST, ((((((vt0.c2)AND(t0.c2)))OR(vt0.c2)))<(((t0.c2)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, t0.c2)) BETWEEN ((vt0.c0 COLLATE NOCASE, vt0.c0, ((t0.c2) IS FALSE))) AND ((((t0.c2) NOTNULL), vt0.c2, TYPEOF(vt0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN t0.c2 COLLATE RTRIM THEN ((t0.c2)IS NOT(vt0.c2)) WHEN ((((((((vt0.c2)AND(vt0.c2)))AND(t0.c2)))AND(vt0.c2)))AND('-679132582')) THEN ((t0.c2)<<(vt0.c1)) WHEN '' THEN ((x'1c64') IS TRUE) ELSE (((vt0.c2))>((vt0.c2))) END DESC  NULLS FIRST, ((((((vt0.c2)AND(t0.c2)))OR(vt0.c2)))<(((t0.c2)>(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, vt0.c1, t0.c2)) BETWEEN ((vt0.c0 COLLATE NOCASE, vt0.c0, ((t0.c2) IS FALSE))) AND ((((t0.c2) NOTNULL), vt0.c2, TYPEOF(vt0.c2))))) ORDER BY CASE WHEN t0.c2 COLLATE RTRIM THEN ((t0.c2)IS NOT(vt0.c2)) WHEN ((((((((vt0.c2)AND(vt0.c2)))AND(t0.c2)))AND(vt0.c2)))AND('-679132582')) THEN ((t0.c2)<<(vt0.c1)) WHEN '' THEN ((x'1c64') IS TRUE) ELSE (((vt0.c2))>((vt0.c2))) END DESC  NULLS FIRST, ((((((vt0.c2)AND(t0.c2)))OR(vt0.c2)))<(((t0.c2)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, t0.c2)) BETWEEN ((vt0.c0 COLLATE NOCASE, vt0.c0, ((t0.c2) IS FALSE))) AND ((((t0.c2) NOTNULL), vt0.c2, TYPEOF(vt0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN t0.c2 COLLATE RTRIM THEN ((t0.c2)IS NOT(vt0.c2)) WHEN ((((((((vt0.c2)AND(vt0.c2)))AND(t0.c2)))AND(vt0.c2)))AND('-679132582')) THEN ((t0.c2)<<(vt0.c1)) WHEN '' THEN ((x'1c64') IS TRUE) ELSE (((vt0.c2))>((vt0.c2))) END DESC  NULLS FIRST, ((((((vt0.c2)AND(t0.c2)))OR(vt0.c2)))<(((t0.c2)>(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, vt0.c1, t0.c2)) BETWEEN ((vt0.c0 COLLATE NOCASE, vt0.c0, ((t0.c2) IS FALSE))) AND ((((t0.c2) NOTNULL), vt0.c2, TYPEOF(vt0.c2))))) ORDER BY CASE WHEN t0.c2 COLLATE RTRIM THEN ((t0.c2)IS NOT(vt0.c2)) WHEN ((((((((vt0.c2)AND(vt0.c2)))AND(t0.c2)))AND(vt0.c2)))AND('-679132582')) THEN ((t0.c2)<<(vt0.c1)) WHEN '' THEN ((x'1c64') IS TRUE) ELSE (((vt0.c2))>((vt0.c2))) END DESC  NULLS FIRST, ((((((vt0.c2)AND(t0.c2)))OR(vt0.c2)))<(((t0.c2)>(vt0.c0))));
SELECT * FROM vt0 WHERE ((((('-377010296')AND((+ (vt0.c2)))))OR(((vt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((('-377010296')AND((+ (vt0.c2)))))OR(((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((('-377010296')AND((+ (vt0.c2)))))OR(((vt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((('-377010296')AND((+ (vt0.c2)))))OR(((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((('-377010296')AND((+ (vt0.c2)))))OR(((vt0.c2) NOTNULL))));
SELECT * FROM t0 WHERE (((((UNLIKELY(t0.c2))OR(CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE 0xffffffffe15c8b67 END)))AND(((((((((t0.c2)AND(t0.c2)))AND('1169945950')))OR(t0.c2)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((UNLIKELY(t0.c2))OR(CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE 0Xffffffffe15c8b67 END)))AND(((((((((t0.c2)AND(t0.c2)))AND('1169945950')))OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((UNLIKELY(t0.c2))OR(CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE 0xffffffffe15c8b67 END)))AND(((((((((t0.c2)AND(t0.c2)))AND('1169945950')))OR(t0.c2)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((UNLIKELY(t0.c2))OR(CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE 0Xffffffffe15c8b67 END)))AND(((((((((t0.c2)AND(t0.c2)))AND('1169945950')))OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((UNLIKELY(t0.c2))OR(CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE 0xffffffffe15c8b67 END)))AND(((((((((t0.c2)AND(t0.c2)))AND('1169945950')))OR(t0.c2)))OR(t0.c2)))));
SELECT * FROM t0 WHERE (t0.c2) ORDER BY CASE WHEN STRFTIME(x'', t0.c2, t0.c2) THEN (- (t0.c2)) WHEN ((((t0.c2)OR(t0.c2)))AND(t0.c2)) THEN CAST(t0.c2 AS REAL) WHEN ((t0.c2) NOTNULL) THEN ((x'')*(0.7537109006563507)) ELSE CAST(t0.c2 AS NUMERIC) END ASC;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN STRFTIME(x'', t0.c2, t0.c2) THEN (- (t0.c2)) WHEN ((((t0.c2)OR(t0.c2)))AND(t0.c2)) THEN CAST(t0.c2 AS REAL) WHEN ((t0.c2) NOTNULL) THEN ((x'')*(0.7537109006563507)) ELSE CAST(t0.c2 AS NUMERIC) END ASC);
SELECT * FROM t0 WHERE (t0.c2) ORDER BY CASE WHEN STRFTIME(x'', t0.c2, t0.c2) THEN (- (t0.c2)) WHEN ((((t0.c2)OR(t0.c2)))AND(t0.c2)) THEN CAST(t0.c2 AS REAL) WHEN ((t0.c2) NOTNULL) THEN ((x'')*(0.7537109006563507)) ELSE CAST(t0.c2 AS NUMERIC) END ASC;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN STRFTIME(x'', t0.c2, t0.c2) THEN (- (t0.c2)) WHEN ((((t0.c2)OR(t0.c2)))AND(t0.c2)) THEN CAST(t0.c2 AS REAL) WHEN ((t0.c2) NOTNULL) THEN ((x'')*(0.7537109006563507)) ELSE CAST(t0.c2 AS NUMERIC) END ASC);
SELECT * FROM t0 WHERE (t0.c2) ORDER BY CASE WHEN STRFTIME(x'', t0.c2, t0.c2) THEN (- (t0.c2)) WHEN ((((t0.c2)OR(t0.c2)))AND(t0.c2)) THEN CAST(t0.c2 AS REAL) WHEN ((t0.c2) NOTNULL) THEN ((x'')*(0.7537109006563507)) ELSE CAST(t0.c2 AS NUMERIC) END ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c2, vt0.c2, vt0.c2))))>=(((((0X6ab88960)OR(vt0.c1)))AND(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c2, vt0.c2, vt0.c2))))>=(((((0X6ab88960)OR(vt0.c1)))AND(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c2, vt0.c2, vt0.c2))))>=(((((0X6ab88960)OR(vt0.c1)))AND(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c2, vt0.c2, vt0.c2))))>=(((((0X6ab88960)OR(vt0.c1)))AND(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c2, vt0.c2, vt0.c2))))>=(((((0X6ab88960)OR(vt0.c1)))AND(vt0.c2)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c2))>((vt0.c1))) IN ('-1565900273', TYPEOF('-27361693'))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2))>((vt0.c1))) IN ('-1565900273', TYPEOF('-27361693')))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c2))>((vt0.c1))) IN ('-1565900273', TYPEOF('-27361693'))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2))>((vt0.c1))) IN ('-1565900273', TYPEOF('-27361693')))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c2))>((vt0.c1))) IN ('-1565900273', TYPEOF('-27361693'))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((((vt0.c1) IS TRUE))AND(NULL)))OR(((vt0.c0) BETWEEN (0.44369071469878174) AND (t0.c2)))) WHERE (0.46391512500753473) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))  WHEN (vt0.c0 IN ()) THEN CAST(vt0.c2 AS REAL) END DESC  NULLS LAST, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.46391512500753473) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((((vt0.c1) IS TRUE))AND(NULL)))OR(((vt0.c0) BETWEEN (0.44369071469878174) AND (t0.c2)))) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))  WHEN (vt0.c0 IN ()) THEN CAST(vt0.c2 AS REAL) END DESC  NULLS LAST, vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((((vt0.c1) IS TRUE))AND(NULL)))OR(((vt0.c0) BETWEEN (0.44369071469878174) AND (t0.c2)))) WHERE (0.46391512500753473) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))  WHEN (vt0.c0 IN ()) THEN CAST(vt0.c2 AS REAL) END DESC  NULLS LAST, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.46391512500753473) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((((vt0.c1) IS TRUE))AND(NULL)))OR(((vt0.c0) BETWEEN (0.44369071469878174) AND (t0.c2)))) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))  WHEN (vt0.c0 IN ()) THEN CAST(vt0.c2 AS REAL) END DESC  NULLS LAST, vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((((vt0.c1) IS TRUE))AND(NULL)))OR(((vt0.c0) BETWEEN (0.44369071469878174) AND (t0.c2)))) WHERE (0.46391512500753473) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))  WHEN (vt0.c0 IN ()) THEN CAST(vt0.c2 AS REAL) END DESC  NULLS LAST, vt0.c0 ASC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c2)OR(t0.c2)) WHEN CAST(t0.c2 AS REAL) THEN vt0.c0 COLLATE RTRIM WHEN ((t0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) THEN (+ (t0.c2)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c2)OR(t0.c2)) WHEN CAST(t0.c2 AS REAL) THEN vt0.c0 COLLATE RTRIM WHEN ((t0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) THEN (+ (t0.c2)) ELSE NULL END) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c2)OR(t0.c2)) WHEN CAST(t0.c2 AS REAL) THEN vt0.c0 COLLATE RTRIM WHEN ((t0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) THEN (+ (t0.c2)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c2)OR(t0.c2)) WHEN CAST(t0.c2 AS REAL) THEN vt0.c0 COLLATE RTRIM WHEN ((t0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) THEN (+ (t0.c2)) ELSE NULL END) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c2)OR(t0.c2)) WHEN CAST(t0.c2 AS REAL) THEN vt0.c0 COLLATE RTRIM WHEN ((t0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) THEN (+ (t0.c2)) ELSE NULL END);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((NULL, vt0.c2, vt0.c2)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), CASE WHEN vt0.c2 THEN vt0.c0 END, CAST(vt0.c1 AS BLOB))) AND (('0.1711374401441068', (- (t0.c2)), '-1893921727'))));
SELECT SUM(count) FROM (SELECT (((((NULL, vt0.c2, vt0.c2)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), CASE WHEN vt0.c2 THEN vt0.c0 END, CAST(vt0.c1 AS BLOB))) AND (('0.1711374401441068', (- (t0.c2)), '-1893921727')))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((NULL, vt0.c2, vt0.c2)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), CASE WHEN vt0.c2 THEN vt0.c0 END, CAST(vt0.c1 AS BLOB))) AND (('0.1711374401441068', (- (t0.c2)), '-1893921727'))));
SELECT SUM(count) FROM (SELECT (((((NULL, vt0.c2, vt0.c2)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), CASE WHEN vt0.c2 THEN vt0.c0 END, CAST(vt0.c1 AS BLOB))) AND (('0.1711374401441068', (- (t0.c2)), '-1893921727')))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((NULL, vt0.c2, vt0.c2)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), CASE WHEN vt0.c2 THEN vt0.c0 END, CAST(vt0.c1 AS BLOB))) AND (('0.1711374401441068', (- (t0.c2)), '-1893921727'))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((('6+>!g')GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((vt0.c1)<=(vt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((('6+>!g')GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)<=(vt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('6+>!g')GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((vt0.c1)<=(vt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((('6+>!g')GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)<=(vt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('6+>!g')GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((vt0.c1)<=(vt0.c2)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2 IN (''))) BETWEEN (LTRIM(vt0.c0, vt0.c2)) AND (('243549219' IN (vt0.c1))))) ORDER BY CAST(vt0.c2 AS REAL) ASC, ((vt0.c1 COLLATE BINARY) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN (''))) BETWEEN (LTRIM(vt0.c0, vt0.c2)) AND (('243549219' IN (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c2 AS REAL) ASC, ((vt0.c1 COLLATE BINARY) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2 IN (''))) BETWEEN (LTRIM(vt0.c0, vt0.c2)) AND (('243549219' IN (vt0.c1))))) ORDER BY CAST(vt0.c2 AS REAL) ASC, ((vt0.c1 COLLATE BINARY) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN (''))) BETWEEN (LTRIM(vt0.c0, vt0.c2)) AND (('243549219' IN (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c2 AS REAL) ASC, ((vt0.c1 COLLATE BINARY) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2 IN (''))) BETWEEN (LTRIM(vt0.c0, vt0.c2)) AND (('243549219' IN (vt0.c1))))) ORDER BY CAST(vt0.c2 AS REAL) ASC, ((vt0.c1 COLLATE BINARY) NOTNULL) ASC;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c2 COLLATE NOCASE))>((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))))) WHERE (x'') ORDER BY ((vt0.c1 COLLATE NOCASE)IS(CAST(vt0.c2 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c2 COLLATE NOCASE))>((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))))) ORDER BY ((vt0.c1 COLLATE NOCASE)IS(CAST(vt0.c2 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c2 COLLATE NOCASE))>((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))))) WHERE (x'') ORDER BY ((vt0.c1 COLLATE NOCASE)IS(CAST(vt0.c2 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c2 COLLATE NOCASE))>((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))))) ORDER BY ((vt0.c1 COLLATE NOCASE)IS(CAST(vt0.c2 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c2 COLLATE NOCASE))>((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))))) WHERE (x'') ORDER BY ((vt0.c1 COLLATE NOCASE)IS(CAST(vt0.c2 AS NUMERIC)))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((t0.c2)OR(t0.c2)))OR(t0.c2))) BETWEEN ((('') NOT BETWEEN (t0.c2) AND (0xffffffffd24045b3))) AND ((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)OR(t0.c2)))OR(t0.c2))) BETWEEN ((('') NOT BETWEEN (t0.c2) AND (0Xffffffffd24045b3))) AND ((NOT (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c2)OR(t0.c2)))OR(t0.c2))) BETWEEN ((('') NOT BETWEEN (t0.c2) AND (0xffffffffd24045b3))) AND ((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)OR(t0.c2)))OR(t0.c2))) BETWEEN ((('') NOT BETWEEN (t0.c2) AND (0Xffffffffd24045b3))) AND ((NOT (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c2)OR(t0.c2)))OR(t0.c2))) BETWEEN ((('') NOT BETWEEN (t0.c2) AND (0xffffffffd24045b3))) AND ((NOT (t0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT * FROM vt0, t0 WHERE (json_valid((((vt0.c2, NULL, vt0.c1))=((vt0.c1, vt0.c2, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_valid((((vt0.c2, NULL, vt0.c1))=((vt0.c1, vt0.c2, vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (json_valid((((vt0.c2, NULL, vt0.c1))=((vt0.c1, vt0.c2, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_valid((((vt0.c2, NULL, vt0.c1))=((vt0.c1, vt0.c2, vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (json_valid((((vt0.c2, NULL, vt0.c1))=((vt0.c1, vt0.c2, vt0.c0)))));
SELECT ALL * FROM t0, vt0 WHERE (CAST(((vt0.c0) ISNULL) AS REAL)) ORDER BY TYPEOF((((t0.c2, vt0.c0, vt0.c2))<((t0.c2, t0.c2, vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) ISNULL) AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY TYPEOF((((t0.c2, vt0.c0, vt0.c2))<((t0.c2, t0.c2, vt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((vt0.c0) ISNULL) AS REAL)) ORDER BY TYPEOF((((t0.c2, vt0.c0, vt0.c2))<((t0.c2, t0.c2, vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) ISNULL) AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY TYPEOF((((t0.c2, vt0.c0, vt0.c2))<((t0.c2, t0.c2, vt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((vt0.c0) ISNULL) AS REAL)) ORDER BY TYPEOF((((t0.c2, vt0.c0, vt0.c2))<((t0.c2, t0.c2, vt0.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((NULL)%(vt0.c0))) ISNULL)) ORDER BY CASE CAST(vt0.c2 AS BLOB)  WHEN t0.c2 THEN -979277220 WHEN '-39018504' THEN COALESCE(vt0.c2, t0.c2, t0.c2, t0.c2) WHEN 0.7696509423132847 THEN vt0.c2 COLLATE RTRIM ELSE CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)%(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE CAST(vt0.c2 AS BLOB)  WHEN t0.c2 THEN -979277220 WHEN '-39018504' THEN COALESCE(vt0.c2, t0.c2, t0.c2, t0.c2) WHEN 0.7696509423132847 THEN vt0.c2 COLLATE RTRIM ELSE CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((NULL)%(vt0.c0))) ISNULL)) ORDER BY CASE CAST(vt0.c2 AS BLOB)  WHEN t0.c2 THEN -979277220 WHEN '-39018504' THEN COALESCE(vt0.c2, t0.c2, t0.c2, t0.c2) WHEN 0.7696509423132847 THEN vt0.c2 COLLATE RTRIM ELSE CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)%(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE CAST(vt0.c2 AS BLOB)  WHEN t0.c2 THEN -979277220 WHEN '-39018504' THEN COALESCE(vt0.c2, t0.c2, t0.c2, t0.c2) WHEN 0.7696509423132847 THEN vt0.c2 COLLATE RTRIM ELSE CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((NULL)%(vt0.c0))) ISNULL)) ORDER BY CASE CAST(vt0.c2 AS BLOB)  WHEN t0.c2 THEN -979277220 WHEN '-39018504' THEN COALESCE(vt0.c2, t0.c2, t0.c2, t0.c2) WHEN 0.7696509423132847 THEN vt0.c2 COLLATE RTRIM ELSE CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END END  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (((0X303a4ea) BETWEEN (t0.c2) AND (vt0.c1)) COLLATE NOCASE) ORDER BY -989607893 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0x303a4ea) BETWEEN (t0.c2) AND (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY -989607893 ASC);
SELECT ALL * FROM t0, vt0 WHERE (((0X303a4ea) BETWEEN (t0.c2) AND (vt0.c1)) COLLATE NOCASE) ORDER BY -989607893 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0x303a4ea) BETWEEN (t0.c2) AND (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY -989607893 ASC);
SELECT * FROM vt0, t0 WHERE (((((((t0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, t0.c2)))))!=((CASE WHEN vt0.c0 THEN vt0.c2 END)))) ORDER BY (((vt0.c0) IS FALSE) IN ()), CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))  WHEN CHAR(vt0.c2) THEN vt0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, t0.c2)))))<>((CASE WHEN vt0.c0 THEN vt0.c2 END)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0) IS FALSE) IN ()), CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))  WHEN CHAR(vt0.c2) THEN vt0.c0 END DESC);
SELECT * FROM vt0, t0 WHERE (((((((t0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, t0.c2)))))!=((CASE WHEN vt0.c0 THEN vt0.c2 END)))) ORDER BY (((vt0.c0) IS FALSE) IN ()), CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))  WHEN CHAR(vt0.c2) THEN vt0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, t0.c2)))))<>((CASE WHEN vt0.c0 THEN vt0.c2 END)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0) IS FALSE) IN ()), CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))  WHEN CHAR(vt0.c2) THEN vt0.c0 END DESC);
SELECT * FROM vt0, t0 WHERE (((((((t0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, t0.c2)))))!=((CASE WHEN vt0.c0 THEN vt0.c2 END)))) ORDER BY (((vt0.c0) IS FALSE) IN ()), CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))  WHEN CHAR(vt0.c2) THEN vt0.c0 END DESC;
SELECT ALL * FROM t0 WHERE ((((((((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))OR(CAST(t0.c2 AS REAL))))OR(COALESCE(t0.c2, t0.c2))))AND(SQLITE_COMPILEOPTION_GET(t0.c2))))AND(((t0.c2)<<(t0.c2))))) ORDER BY CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE  NULLS LAST, HEX(t0.c2)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))OR(CAST(t0.c2 AS REAL))))OR(COALESCE(t0.c2, t0.c2))))AND(SQLITE_COMPILEOPTION_GET(t0.c2))))AND(((t0.c2)<<(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE  NULLS LAST, HEX(t0.c2)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))OR(CAST(t0.c2 AS REAL))))OR(COALESCE(t0.c2, t0.c2))))AND(SQLITE_COMPILEOPTION_GET(t0.c2))))AND(((t0.c2)<<(t0.c2))))) ORDER BY CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE  NULLS LAST, HEX(t0.c2)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))OR(CAST(t0.c2 AS REAL))))OR(COALESCE(t0.c2, t0.c2))))AND(SQLITE_COMPILEOPTION_GET(t0.c2))))AND(((t0.c2)<<(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE  NULLS LAST, HEX(t0.c2)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))OR(CAST(t0.c2 AS REAL))))OR(COALESCE(t0.c2, t0.c2))))AND(SQLITE_COMPILEOPTION_GET(t0.c2))))AND(((t0.c2)<<(t0.c2))))) ORDER BY CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE  NULLS LAST, HEX(t0.c2)  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c2 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)) THEN (NOT (vt0.c0)) WHEN ((vt0.c2)GLOB(vt0.c2)) THEN 0.7655473640688872 WHEN ((0.2726415322996377) ISNULL) THEN ((vt0.c0)GLOB(vt0.c1)) END) ORDER BY CAST(vt0.c0 AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)) THEN (NOT (vt0.c0)) WHEN ((vt0.c2)GLOB(vt0.c2)) THEN 0.7655473640688872 WHEN ((0.2726415322996377) ISNULL) THEN ((vt0.c0)GLOB(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)) THEN (NOT (vt0.c0)) WHEN ((vt0.c2)GLOB(vt0.c2)) THEN 0.7655473640688872 WHEN ((0.2726415322996377) ISNULL) THEN ((vt0.c0)GLOB(vt0.c1)) END) ORDER BY CAST(vt0.c0 AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)) THEN (NOT (vt0.c0)) WHEN ((vt0.c2)GLOB(vt0.c2)) THEN 0.7655473640688872 WHEN ((0.2726415322996377) ISNULL) THEN ((vt0.c0)GLOB(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)) THEN (NOT (vt0.c0)) WHEN ((vt0.c2)GLOB(vt0.c2)) THEN 0.7655473640688872 WHEN ((0.2726415322996377) ISNULL) THEN ((vt0.c0)GLOB(vt0.c1)) END) ORDER BY CAST(vt0.c0 AS BLOB)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (DATETIME(((vt0.c2) IS FALSE), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN t0.c2 THEN vt0.c1 WHEN t0.c2 THEN '-1811388343' WHEN vt0.c1 THEN vt0.c1 END, ((vt0.c0)>>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((DATETIME(((vt0.c2) IS FALSE), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN t0.c2 THEN vt0.c1 WHEN t0.c2 THEN '-1811388343' WHEN vt0.c1 THEN vt0.c1 END, ((vt0.c0)>>(vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (DATETIME(((vt0.c2) IS FALSE), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN t0.c2 THEN vt0.c1 WHEN t0.c2 THEN '-1811388343' WHEN vt0.c1 THEN vt0.c1 END, ((vt0.c0)>>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((DATETIME(((vt0.c2) IS FALSE), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN t0.c2 THEN vt0.c1 WHEN t0.c2 THEN '-1811388343' WHEN vt0.c1 THEN vt0.c1 END, ((vt0.c0)>>(vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (DATETIME(((vt0.c2) IS FALSE), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN t0.c2 THEN vt0.c1 WHEN t0.c2 THEN '-1811388343' WHEN vt0.c1 THEN vt0.c1 END, ((vt0.c0)>>(vt0.c0))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((~ (t0.c2)))>(CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY (((~ (t0.c2)))>(CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((~ (t0.c2)))>(CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY (((~ (t0.c2)))>(CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((~ (t0.c2)))>(CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN STRFTIME(NULL, 0.7185292040315334, vt0.c1, vt0.c2, vt0.c2) THEN ((vt0.c2)>(vt0.c0)) WHEN (((9.45365522E8)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) THEN CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN vt0.c1 THEN ((NULL) BETWEEN ('') AND (vt0.c1)) WHEN ((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)) WHEN vt0.c2 THEN CAST(vt0.c2 AS INTEGER) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN STRFTIME(NULL, 0.7185292040315334, vt0.c1, vt0.c2, vt0.c2) THEN ((vt0.c2)>(vt0.c0)) WHEN (((9.45365522E8)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) THEN CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN vt0.c1 THEN ((NULL) BETWEEN ('') AND (vt0.c1)) WHEN ((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)) WHEN vt0.c2 THEN CAST(vt0.c2 AS INTEGER) ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN STRFTIME(NULL, 0.7185292040315334, vt0.c1, vt0.c2, vt0.c2) THEN ((vt0.c2)>(vt0.c0)) WHEN (((9.45365522E8)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) THEN CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN vt0.c1 THEN ((NULL) BETWEEN ('') AND (vt0.c1)) WHEN ((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)) WHEN vt0.c2 THEN CAST(vt0.c2 AS INTEGER) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN STRFTIME(NULL, 0.7185292040315334, vt0.c1, vt0.c2, vt0.c2) THEN ((vt0.c2)>(vt0.c0)) WHEN (((9.45365522E8)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) THEN CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN vt0.c1 THEN ((NULL) BETWEEN ('') AND (vt0.c1)) WHEN ((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)) WHEN vt0.c2 THEN CAST(vt0.c2 AS INTEGER) ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN STRFTIME(NULL, 0.7185292040315334, vt0.c1, vt0.c2, vt0.c2) THEN ((vt0.c2)>(vt0.c0)) WHEN (((9.45365522E8)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) THEN CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN vt0.c1 THEN ((NULL) BETWEEN ('') AND (vt0.c1)) WHEN ((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)) WHEN vt0.c2 THEN CAST(vt0.c2 AS INTEGER) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((t0.c2 IN ())) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2 IN ())) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((t0.c2 IN ())) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2 IN ())) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((t0.c2 IN ())) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (NULL) ORDER BY json_array_length(CASE '1519860865'  WHEN t0.c2 THEN vt0.c2 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY json_array_length(CASE '1519860865'  WHEN t0.c2 THEN vt0.c2 END) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (NULL) ORDER BY json_array_length(CASE '1519860865'  WHEN t0.c2 THEN vt0.c2 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY json_array_length(CASE '1519860865'  WHEN t0.c2 THEN vt0.c2 END) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (NULL) ORDER BY json_array_length(CASE '1519860865'  WHEN t0.c2 THEN vt0.c2 END) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((((t0.c2)AND(t0.c2)))AND(t0.c2)) THEN (NOT (t0.c2)) WHEN (t0.c2 IN ()) THEN (((t0.c2, t0.c2, t0.c2, t0.c2, t0.c2))<>((t0.c2, t0.c2, t0.c2, NULL, t0.c2))) WHEN ((NULL) BETWEEN (0Xffffffff821f6e65) AND (t0.c2)) THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((''))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c2)AND(t0.c2)))AND(t0.c2)) THEN (NOT (t0.c2)) WHEN (t0.c2 IN ()) THEN (((t0.c2, t0.c2, t0.c2, t0.c2, t0.c2))<>((t0.c2, t0.c2, t0.c2, NULL, t0.c2))) WHEN ((NULL) BETWEEN (0xffffffff821f6e65) AND (t0.c2)) THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((''))) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((((t0.c2)AND(t0.c2)))AND(t0.c2)) THEN (NOT (t0.c2)) WHEN (t0.c2 IN ()) THEN (((t0.c2, t0.c2, t0.c2, t0.c2, t0.c2))<>((t0.c2, t0.c2, t0.c2, NULL, t0.c2))) WHEN ((NULL) BETWEEN (0Xffffffff821f6e65) AND (t0.c2)) THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((''))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c2)AND(t0.c2)))AND(t0.c2)) THEN (NOT (t0.c2)) WHEN (t0.c2 IN ()) THEN (((t0.c2, t0.c2, t0.c2, t0.c2, t0.c2))<>((t0.c2, t0.c2, t0.c2, NULL, t0.c2))) WHEN ((NULL) BETWEEN (0xffffffff821f6e65) AND (t0.c2)) THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((''))) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((((t0.c2)AND(t0.c2)))AND(t0.c2)) THEN (NOT (t0.c2)) WHEN (t0.c2 IN ()) THEN (((t0.c2, t0.c2, t0.c2, t0.c2, t0.c2))<>((t0.c2, t0.c2, t0.c2, NULL, t0.c2))) WHEN ((NULL) BETWEEN (0Xffffffff821f6e65) AND (t0.c2)) THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((''))) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB)))>((vt0.c1)))) ORDER BY ((((~ (vt0.c1))))>=((0.2621296118098314))), ((('171382037')) NOT BETWEEN ((vt0.c2 COLLATE BINARY)) AND ((vt0.c1 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS BLOB)))>((vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((((~ (vt0.c1))))>=((0.2621296118098314))), ((('171382037')) NOT BETWEEN ((vt0.c2 COLLATE BINARY)) AND ((vt0.c1 COLLATE RTRIM)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB)))>((vt0.c1)))) ORDER BY ((((~ (vt0.c1))))>=((0.2621296118098314))), ((('171382037')) NOT BETWEEN ((vt0.c2 COLLATE BINARY)) AND ((vt0.c1 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS BLOB)))>((vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((((~ (vt0.c1))))>=((0.2621296118098314))), ((('171382037')) NOT BETWEEN ((vt0.c2 COLLATE BINARY)) AND ((vt0.c1 COLLATE RTRIM)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB)))>((vt0.c1)))) ORDER BY ((((~ (vt0.c1))))>=((0.2621296118098314))), ((('171382037')) NOT BETWEEN ((vt0.c2 COLLATE BINARY)) AND ((vt0.c1 COLLATE RTRIM)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT ((+ (vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT ((+ (vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT ((+ (vt0.c2)))));
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN t0.c2 COLLATE NOCASE THEN UNICODE(t0.c2) ELSE ((t0.c2) NOTNULL) END) ORDER BY (((~ (vt0.c0))) BETWEEN (COALESCE(t0.c2, t0.c2)) AND (((vt0.c0)/(vt0.c1)))) ASC, ((((vt0.c0 IN (vt0.c0, t0.c2)), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))))<=((((vt0.c0)&(t0.c2)), vt0.c1, CAST(vt0.c2 AS BLOB))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c2 COLLATE NOCASE THEN UNICODE(t0.c2) ELSE ((t0.c2) NOTNULL) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (((~ (vt0.c0))) BETWEEN (COALESCE(t0.c2, t0.c2)) AND (((vt0.c0)/(vt0.c1)))) ASC, ((((vt0.c0 IN (vt0.c0, t0.c2)), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))))<=((((vt0.c0)&(t0.c2)), vt0.c1, CAST(vt0.c2 AS BLOB))))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN t0.c2 COLLATE NOCASE THEN UNICODE(t0.c2) ELSE ((t0.c2) NOTNULL) END) ORDER BY (((~ (vt0.c0))) BETWEEN (COALESCE(t0.c2, t0.c2)) AND (((vt0.c0)/(vt0.c1)))) ASC, ((((vt0.c0 IN (vt0.c0, t0.c2)), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))))<=((((vt0.c0)&(t0.c2)), vt0.c1, CAST(vt0.c2 AS BLOB))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c2 COLLATE NOCASE THEN UNICODE(t0.c2) ELSE ((t0.c2) NOTNULL) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (((~ (vt0.c0))) BETWEEN (COALESCE(t0.c2, t0.c2)) AND (((vt0.c0)/(vt0.c1)))) ASC, ((((vt0.c0 IN (vt0.c0, t0.c2)), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))))<=((((vt0.c0)&(t0.c2)), vt0.c1, CAST(vt0.c2 AS BLOB))))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN t0.c2 COLLATE NOCASE THEN UNICODE(t0.c2) ELSE ((t0.c2) NOTNULL) END) ORDER BY (((~ (vt0.c0))) BETWEEN (COALESCE(t0.c2, t0.c2)) AND (((vt0.c0)/(vt0.c1)))) ASC, ((((vt0.c0 IN (vt0.c0, t0.c2)), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))))<=((((vt0.c0)&(t0.c2)), vt0.c1, CAST(vt0.c2 AS BLOB))))  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c2 IN (t0.c2))))>=((((t0.c2)>=(t0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN (t0.c2))))>=((((t0.c2)>=(t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2 IN (t0.c2))))>=((((t0.c2)>=(t0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN (t0.c2))))>=((((t0.c2)>=(t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2 IN (t0.c2))))>=((((t0.c2)>=(t0.c2))))));
SELECT ALL * FROM t0 WHERE (0.3342196109509197);
SELECT SUM(count) FROM (SELECT ((0.3342196109509197) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (0.3342196109509197);
SELECT SUM(count) FROM (SELECT ((0.3342196109509197) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (0.3342196109509197);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c2)<(vt0.c1)) IN (CAST(t0.c2 AS BLOB)))) ORDER BY (NULL IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)<(vt0.c1)) IN (CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NULL IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c2)<(vt0.c1)) IN (CAST(t0.c2 AS BLOB)))) ORDER BY (NULL IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)<(vt0.c1)) IN (CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NULL IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c2)<(vt0.c1)) IN (CAST(t0.c2 AS BLOB)))) ORDER BY (NULL IN ())  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE ('-1594013426');
SELECT SUM(count) FROM (SELECT (('-1594013426') IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ('-1594013426');
SELECT SUM(count) FROM (SELECT (('-1594013426') IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ('-1594013426');
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE WHEN json_object(t0.c2, t0.c2, vt0.c0, vt0.c1) THEN '1759009053' ELSE (~ (vt0.c1)) END WHERE (LIKELIHOOD('0.5418663137564903', 0.534358019587023)) ORDER BY COALESCE(CAST(t0.c2 AS TEXT), ((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)), ((t0.c2) NOTNULL), (('64600304') NOT BETWEEN (t0.c2) AND (vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD('0.5418663137564903', 0.534358019587023)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE WHEN json_object(t0.c2, t0.c2, vt0.c0, vt0.c1) THEN '1759009053' ELSE (~ (vt0.c1)) END ORDER BY COALESCE(CAST(t0.c2 AS TEXT), ((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)), ((t0.c2) NOTNULL), (('64600304') NOT BETWEEN (t0.c2) AND (vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE WHEN json_object(t0.c2, t0.c2, vt0.c0, vt0.c1) THEN '1759009053' ELSE (~ (vt0.c1)) END WHERE (LIKELIHOOD('0.5418663137564903', 0.534358019587023)) ORDER BY COALESCE(CAST(t0.c2 AS TEXT), ((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)), ((t0.c2) NOTNULL), (('64600304') NOT BETWEEN (t0.c2) AND (vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD('0.5418663137564903', 0.534358019587023)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE WHEN json_object(t0.c2, t0.c2, vt0.c0, vt0.c1) THEN '1759009053' ELSE (~ (vt0.c1)) END ORDER BY COALESCE(CAST(t0.c2 AS TEXT), ((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)), ((t0.c2) NOTNULL), (('64600304') NOT BETWEEN (t0.c2) AND (vt0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c0 IN (vt0.c2)) IN (vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c2)) IN (vt0.c2))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c0 IN (vt0.c2)) IN (vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c2)) IN (vt0.c2))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c0 IN (vt0.c2)) IN (vt0.c2)));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)>(t0.c2)))<((NOT (t0.c2))))) ORDER BY (+ (t0.c2 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>(t0.c2)))<((NOT (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c2 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)>(t0.c2)))<((NOT (t0.c2))))) ORDER BY (+ (t0.c2 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>(t0.c2)))<((NOT (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c2 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)>(t0.c2)))<((NOT (t0.c2))))) ORDER BY (+ (t0.c2 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c2)LIKE(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)LIKE(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c2)LIKE(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)LIKE(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c2)LIKE(vt0.c1))) ISNULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (+ (vt0.c2)) COLLATE BINARY WHERE (((((vt0.c0)<=(vt0.c2))) NOT BETWEEN (((vt0.c0)IS(vt0.c1))) AND (((t0.c2) NOTNULL)))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c2))) NOT BETWEEN (((vt0.c0)IS(vt0.c1))) AND (((t0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (+ (vt0.c2)) COLLATE BINARY ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (+ (vt0.c2)) COLLATE BINARY WHERE (((((vt0.c0)<=(vt0.c2))) NOT BETWEEN (((vt0.c0)IS(vt0.c1))) AND (((t0.c2) NOTNULL)))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c2))) NOT BETWEEN (((vt0.c0)IS(vt0.c1))) AND (((t0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (+ (vt0.c2)) COLLATE BINARY ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (+ (vt0.c2)) COLLATE BINARY WHERE (((((vt0.c0)<=(vt0.c2))) NOT BETWEEN (((vt0.c0)IS(vt0.c1))) AND (((t0.c2) NOTNULL)))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB);
SELECT * FROM t0, vt0 WHERE (HEX((+ (vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((+ (vt0.c2)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (HEX((+ (vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((+ (vt0.c2)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (HEX((+ (vt0.c2))));
SELECT * FROM vt0 WHERE ((- ((- (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- ((- (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- ((- (vt0.c2)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL COLLATE BINARY COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL COLLATE BINARY COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL COLLATE BINARY COLLATE NOCASE COLLATE NOCASE);
SELECT * FROM t0 WHERE (((t0.c2 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2 COLLATE BINARY) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (LOWER((+ (vt0.c0)))) ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((LOWER((+ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (LOWER((+ (vt0.c0)))) ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((LOWER((+ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (LOWER((+ (vt0.c0)))) ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)) AS BLOB)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)) AS BLOB)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)) AS BLOB)) ORDER BY NULL  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE ''  WHEN t0.c2 THEN (((t0.c2, t0.c2, t0.c2, t0.c2, t0.c2))!=((t0.c2, t0.c2, 0.5136738229540733, t0.c2, t0.c2))) ELSE (((t0.c2)) NOT BETWEEN ((NULL)) AND ((t0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ''  WHEN t0.c2 THEN (((t0.c2, t0.c2, t0.c2, t0.c2, t0.c2))<>((t0.c2, t0.c2, 0.5136738229540733, t0.c2, t0.c2))) ELSE (((t0.c2)) NOT BETWEEN ((NULL)) AND ((t0.c2))) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE ''  WHEN t0.c2 THEN (((t0.c2, t0.c2, t0.c2, t0.c2, t0.c2))!=((t0.c2, t0.c2, 0.5136738229540733, t0.c2, t0.c2))) ELSE (((t0.c2)) NOT BETWEEN ((NULL)) AND ((t0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ''  WHEN t0.c2 THEN (((t0.c2, t0.c2, t0.c2, t0.c2, t0.c2))<>((t0.c2, t0.c2, 0.5136738229540733, t0.c2, t0.c2))) ELSE (((t0.c2)) NOT BETWEEN ((NULL)) AND ((t0.c2))) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE ''  WHEN t0.c2 THEN (((t0.c2, t0.c2, t0.c2, t0.c2, t0.c2))!=((t0.c2, t0.c2, 0.5136738229540733, t0.c2, t0.c2))) ELSE (((t0.c2)) NOT BETWEEN ((NULL)) AND ((t0.c2))) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (TYPEOF(CAST(vt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(vt0.c1 AS BLOB))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (TYPEOF(CAST(vt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(vt0.c1 AS BLOB))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (TYPEOF(CAST(vt0.c1 AS BLOB)));
SELECT ALL * FROM t0 WHERE (((((1.940156453E9)IS(t0.c2)))!=(CAST(t0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((1.940156453E9)IS(t0.c2)))<>(CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((1.940156453E9)IS(t0.c2)))!=(CAST(t0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((1.940156453E9)IS(t0.c2)))<>(CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((1.940156453E9)IS(t0.c2)))!=(CAST(t0.c2 AS BLOB))));
SELECT ALL * FROM t0, vt0 WHERE (CASE vt0.c2 COLLATE NOCASE  WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) THEN UNLIKELY(DISTINCT vt0.c2) END) ORDER BY CASE vt0.c2  WHEN ((vt0.c0)-(t0.c2)) THEN vt0.c1 COLLATE NOCASE ELSE (~ (vt0.c0)) END  NULLS FIRST, CAST(((vt0.c2)==(vt0.c2)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c2 COLLATE NOCASE  WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) THEN UNLIKELY(DISTINCT vt0.c2) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE vt0.c2  WHEN ((vt0.c0)-(t0.c2)) THEN vt0.c1 COLLATE NOCASE ELSE (~ (vt0.c0)) END  NULLS FIRST, CAST(((vt0.c2)==(vt0.c2)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CASE vt0.c2 COLLATE NOCASE  WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) THEN UNLIKELY(DISTINCT vt0.c2) END) ORDER BY CASE vt0.c2  WHEN ((vt0.c0)-(t0.c2)) THEN vt0.c1 COLLATE NOCASE ELSE (~ (vt0.c0)) END  NULLS FIRST, CAST(((vt0.c2)==(vt0.c2)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c2 COLLATE NOCASE  WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) THEN UNLIKELY(DISTINCT vt0.c2) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE vt0.c2  WHEN ((vt0.c0)-(t0.c2)) THEN vt0.c1 COLLATE NOCASE ELSE (~ (vt0.c0)) END  NULLS FIRST, CAST(((vt0.c2)==(vt0.c2)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CASE vt0.c2 COLLATE NOCASE  WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) THEN UNLIKELY(DISTINCT vt0.c2) END) ORDER BY CASE vt0.c2  WHEN ((vt0.c0)-(t0.c2)) THEN vt0.c1 COLLATE NOCASE ELSE (~ (vt0.c0)) END  NULLS FIRST, CAST(((vt0.c2)==(vt0.c2)) AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c2 IN ())) BETWEEN ((+ (vt0.c0))) AND ((((((((('214237191')AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c2))))) ORDER BY ((((vt0.c1)<=(vt0.c0)))>>((t0.c2 IN ())))  NULLS LAST, ((TYPEOF(DISTINCT t0.c2))/((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ())) BETWEEN ((+ (vt0.c0))) AND ((((((((('214237191')AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c1)<=(vt0.c0)))>>((t0.c2 IN ())))  NULLS LAST, ((TYPEOF(DISTINCT t0.c2))/((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c2 IN ())) BETWEEN ((+ (vt0.c0))) AND ((((((((('214237191')AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c2))))) ORDER BY ((((vt0.c1)<=(vt0.c0)))>>((t0.c2 IN ())))  NULLS LAST, ((TYPEOF(DISTINCT t0.c2))/((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ())) BETWEEN ((+ (vt0.c0))) AND ((((((((('214237191')AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c1)<=(vt0.c0)))>>((t0.c2 IN ())))  NULLS LAST, ((TYPEOF(DISTINCT t0.c2))/((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c2 IN ())) BETWEEN ((+ (vt0.c0))) AND ((((((((('214237191')AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c2))))) ORDER BY ((((vt0.c1)<=(vt0.c0)))>>((t0.c2 IN ())))  NULLS LAST, ((TYPEOF(DISTINCT t0.c2))/((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i6, t0 WHERE (((((0xffffffff95184a3d) NOT BETWEEN (vt0.c2) AND (vt0.c1))) BETWEEN (((vt0.c0)AND(vt0.c2))) AND (CAST(vt0.c2 AS REAL)))) ORDER BY ((((((((((t0.c2)!=(vt0.c1)))OR(((vt0.c2)>=(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c2)/(vt0.c0)))))AND(vt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((0Xffffffff95184a3d) NOT BETWEEN (vt0.c2) AND (vt0.c1))) BETWEEN (((vt0.c0)AND(vt0.c2))) AND (CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0 INDEXED BY i6, t0 ORDER BY ((((((((((t0.c2)<>(vt0.c1)))OR(((vt0.c2)>=(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c2)/(vt0.c0)))))AND(vt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i6, t0 WHERE (((((0xffffffff95184a3d) NOT BETWEEN (vt0.c2) AND (vt0.c1))) BETWEEN (((vt0.c0)AND(vt0.c2))) AND (CAST(vt0.c2 AS REAL)))) ORDER BY ((((((((((t0.c2)!=(vt0.c1)))OR(((vt0.c2)>=(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c2)/(vt0.c0)))))AND(vt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((0Xffffffff95184a3d) NOT BETWEEN (vt0.c2) AND (vt0.c1))) BETWEEN (((vt0.c0)AND(vt0.c2))) AND (CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0 INDEXED BY i6, t0 ORDER BY ((((((((((t0.c2)<>(vt0.c1)))OR(((vt0.c2)>=(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c2)/(vt0.c0)))))AND(vt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))LIKE(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN '1517114185' WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))LIKE(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN '1517114185' WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))LIKE(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN '1517114185' WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))LIKE(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN '1517114185' WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))LIKE(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN '1517114185' WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((((vt0.c0)<(vt0.c2)))-((vt0.c2 IN ()))) WHERE (((((((((INSTR(vt0.c2, t0.c2))OR(x'd060da73')))AND(SQLITE_VERSION())))OR(((t0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))))AND((((445211799)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((INSTR(vt0.c2, t0.c2))OR(x'd060da73')))AND(SQLITE_VERSION())))OR(((t0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))))AND((((445211799)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((vt0.c0)<(vt0.c2)))-((vt0.c2 IN ()))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((((vt0.c0)<(vt0.c2)))-((vt0.c2 IN ()))) WHERE (((((((((INSTR(vt0.c2, t0.c2))OR(x'd060da73')))AND(SQLITE_VERSION())))OR(((t0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))))AND((((445211799)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((INSTR(vt0.c2, t0.c2))OR(x'd060da73')))AND(SQLITE_VERSION())))OR(((t0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))))AND((((445211799)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((vt0.c0)<(vt0.c2)))-((vt0.c2 IN ()))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((((vt0.c0)<(vt0.c2)))-((vt0.c2 IN ()))) WHERE (((((((((INSTR(vt0.c2, t0.c2))OR(x'd060da73')))AND(SQLITE_VERSION())))OR(((t0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))))AND((((445211799)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2) IS FALSE)) ORDER BY ((t0.c2) IS FALSE) COLLATE RTRIM DESC  NULLS LAST, CASE ''  WHEN NULL THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2) IS FALSE) COLLATE RTRIM DESC  NULLS LAST, CASE ''  WHEN NULL THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2) IS FALSE)) ORDER BY ((t0.c2) IS FALSE) COLLATE RTRIM DESC  NULLS LAST, CASE ''  WHEN NULL THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2) IS FALSE) COLLATE RTRIM DESC  NULLS LAST, CASE ''  WHEN NULL THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2) IS FALSE)) ORDER BY ((t0.c2) IS FALSE) COLLATE RTRIM DESC  NULLS LAST, CASE ''  WHEN NULL THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST((NULL IN ()) AS TEXT) WHERE ((((t0.c2)) NOT BETWEEN ((0.2759360200065485)) AND ((IFNULL(t0.c2, t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN ((0.2759360200065485)) AND ((IFNULL(t0.c2, t0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST((NULL IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST((NULL IN ()) AS TEXT) WHERE ((((t0.c2)) NOT BETWEEN ((0.2759360200065485)) AND ((IFNULL(t0.c2, t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN ((0.2759360200065485)) AND ((IFNULL(t0.c2, t0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST((NULL IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST((NULL IN ()) AS TEXT) WHERE ((((t0.c2)) NOT BETWEEN ((0.2759360200065485)) AND ((IFNULL(t0.c2, t0.c2)))));
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((((~ (vt0.c2)))=(((t0.c2)*(vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c2)))=(((t0.c2)*(vt0.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((((~ (vt0.c2)))=(((t0.c2)*(vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c2)))=(((t0.c2)*(vt0.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((((~ (vt0.c2)))=(((t0.c2)*(vt0.c2)))));
SELECT ALL * FROM t0, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN NULL THEN t0.c2 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)LIKE(((vt0.c2) NOT BETWEEN (vt0.c2) AND (0.4397064759824314)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN NULL THEN t0.c2 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)LIKE(((vt0.c2) NOT BETWEEN (vt0.c2) AND (0.4397064759824314))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN NULL THEN t0.c2 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)LIKE(((vt0.c2) NOT BETWEEN (vt0.c2) AND (0.4397064759824314)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN NULL THEN t0.c2 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)LIKE(((vt0.c2) NOT BETWEEN (vt0.c2) AND (0.4397064759824314))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN NULL THEN t0.c2 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)LIKE(((vt0.c2) NOT BETWEEN (vt0.c2) AND (0.4397064759824314)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)OR(vt0.c1))) NOT BETWEEN (vt0.c1) AND (((vt0.c1)<('?z')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(vt0.c1))) NOT BETWEEN (vt0.c1) AND (((vt0.c1)<('?z'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)OR(vt0.c1))) NOT BETWEEN (vt0.c1) AND (((vt0.c1)<('?z')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(vt0.c1))) NOT BETWEEN (vt0.c1) AND (((vt0.c1)<('?z'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)OR(vt0.c1))) NOT BETWEEN (vt0.c1) AND (((vt0.c1)<('?z')))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((t0.c2)AND(((t0.c2)*(vt0.c1)))))OR((((('1698219799')AND(vt0.c1)))AND(vt0.c1)))))AND((NOT (0x3599be5e)))))AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0))))) ORDER BY ((((((((t0.c2)OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c2)AND(((t0.c2)*(vt0.c1)))))OR((((('1698219799')AND(vt0.c1)))AND(vt0.c1)))))AND((NOT (0X3599be5e)))))AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((t0.c2)OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((t0.c2)AND(((t0.c2)*(vt0.c1)))))OR((((('1698219799')AND(vt0.c1)))AND(vt0.c1)))))AND((NOT (0x3599be5e)))))AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0))))) ORDER BY ((((((((t0.c2)OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c2)AND(((t0.c2)*(vt0.c1)))))OR((((('1698219799')AND(vt0.c1)))AND(vt0.c1)))))AND((NOT (0X3599be5e)))))AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((t0.c2)OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((t0.c2)AND(((t0.c2)*(vt0.c1)))))OR((((('1698219799')AND(vt0.c1)))AND(vt0.c1)))))AND((NOT (0x3599be5e)))))AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0))))) ORDER BY ((((((((t0.c2)OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)) COLLATE BINARY;
SELECT * FROM vt0 WHERE (UNLIKELY(CASE 1.698219799E9  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CASE 1.698219799E9  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UNLIKELY(CASE 1.698219799E9  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CASE 1.698219799E9  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UNLIKELY(CASE 1.698219799E9  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS NUMERIC))LIKE(CAST(t0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS NUMERIC))LIKE(CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS NUMERIC))LIKE(CAST(t0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS NUMERIC))LIKE(CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS NUMERIC))LIKE(CAST(t0.c2 AS INTEGER))));
SELECT ALL * FROM t0 WHERE ((((NULL, 0.032928052044717715, t0.c2 COLLATE NOCASE))==(((t0.c2 IN ('', t0.c2)), (- (t0.c2)), CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN NULL WHEN t0.c2 THEN NULL END))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, 0.032928052044717715, t0.c2 COLLATE NOCASE))=(((t0.c2 IN ('', t0.c2)), (- (t0.c2)), CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN NULL WHEN t0.c2 THEN NULL END)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((NULL, 0.032928052044717715, t0.c2 COLLATE NOCASE))==(((t0.c2 IN ('', t0.c2)), (- (t0.c2)), CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN NULL WHEN t0.c2 THEN NULL END))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, 0.032928052044717715, t0.c2 COLLATE NOCASE))=(((t0.c2 IN ('', t0.c2)), (- (t0.c2)), CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN NULL WHEN t0.c2 THEN NULL END)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((NULL, 0.032928052044717715, t0.c2 COLLATE NOCASE))==(((t0.c2 IN ('', t0.c2)), (- (t0.c2)), CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN NULL WHEN t0.c2 THEN NULL END))));
SELECT * FROM t0, vt0 WHERE ((~ (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((~ (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((~ (((vt0.c0) ISNULL))));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS BLOB)) IS FALSE)) ORDER BY CAST(((t0.c2)>>(t0.c2)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c2)>>(t0.c2)) AS TEXT) DESC);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS BLOB)) IS FALSE)) ORDER BY CAST(((t0.c2)>>(t0.c2)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c2)>>(t0.c2)) AS TEXT) DESC);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS BLOB)) IS FALSE)) ORDER BY CAST(((t0.c2)>>(t0.c2)) AS TEXT) DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c2) ORDER BY CASE CASE WHEN vt0.c2 THEN vt0.c1 END  WHEN t0.c2 COLLATE RTRIM THEN ((((vt0.c0)OR(0.9921666074693022)))AND(vt0.c0)) END DESC  NULLS FIRST, ((vt0.c1 COLLATE NOCASE)>=((- (vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE CASE WHEN vt0.c2 THEN vt0.c1 END  WHEN t0.c2 COLLATE RTRIM THEN ((((vt0.c0)OR(0.9921666074693022)))AND(vt0.c0)) END DESC  NULLS FIRST, ((vt0.c1 COLLATE NOCASE)>=((- (vt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c2) ORDER BY CASE CASE WHEN vt0.c2 THEN vt0.c1 END  WHEN t0.c2 COLLATE RTRIM THEN ((((vt0.c0)OR(0.9921666074693022)))AND(vt0.c0)) END DESC  NULLS FIRST, ((vt0.c1 COLLATE NOCASE)>=((- (vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE CASE WHEN vt0.c2 THEN vt0.c1 END  WHEN t0.c2 COLLATE RTRIM THEN ((((vt0.c0)OR(0.9921666074693022)))AND(vt0.c0)) END DESC  NULLS FIRST, ((vt0.c1 COLLATE NOCASE)>=((- (vt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c2) ORDER BY CASE CASE WHEN vt0.c2 THEN vt0.c1 END  WHEN t0.c2 COLLATE RTRIM THEN ((((vt0.c0)OR(0.9921666074693022)))AND(vt0.c0)) END DESC  NULLS FIRST, ((vt0.c1 COLLATE NOCASE)>=((- (vt0.c2))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c1)<>(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)!=(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1)<>(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)!=(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1)<>(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((0Xffffffffb6082aff))<=((0x6939855))))OR(((vt0.c1)>(t0.c2)))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((0Xffffffffb6082aff))<=((0x6939855))))OR(((vt0.c1)>(t0.c2)))))AND(vt0.c0))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((0Xffffffffb6082aff))<=((0x6939855))))OR(((vt0.c1)>(t0.c2)))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((0Xffffffffb6082aff))<=((0x6939855))))OR(((vt0.c1)>(t0.c2)))))AND(vt0.c0))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((0Xffffffffb6082aff))<=((0x6939855))))OR(((vt0.c1)>(t0.c2)))))AND(vt0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c2 END)*(CAST(vt0.c1 AS BLOB)))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))AND(t0.c2))) NOT BETWEEN (t0.c2) AND (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN 0.06602282391082837 WHEN t0.c2 THEN vt0.c0 END)), vt0.c2 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c2 END)*(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c1)AND(vt0.c1)))AND(t0.c2))) NOT BETWEEN (t0.c2) AND (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN 0.06602282391082837 WHEN t0.c2 THEN vt0.c0 END)), vt0.c2 COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c2 END)*(CAST(vt0.c1 AS BLOB)))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))AND(t0.c2))) NOT BETWEEN (t0.c2) AND (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN 0.06602282391082837 WHEN t0.c2 THEN vt0.c0 END)), vt0.c2 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c2 END)*(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c1)AND(vt0.c1)))AND(t0.c2))) NOT BETWEEN (t0.c2) AND (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN 0.06602282391082837 WHEN t0.c2 THEN vt0.c0 END)), vt0.c2 COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c2 END)*(CAST(vt0.c1 AS BLOB)))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))AND(t0.c2))) NOT BETWEEN (t0.c2) AND (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN 0.06602282391082837 WHEN t0.c2 THEN vt0.c0 END)), vt0.c2 COLLATE BINARY;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c2)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c2)<>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c2)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c2)<>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c2)!=(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (- ((vt0.c0 IN ()))) WHERE ((((- (t0.c2))) BETWEEN (((vt0.c1) NOTNULL)) AND (((vt0.c1)&(NULL)))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c2))) BETWEEN (((vt0.c1) NOTNULL)) AND (((vt0.c1)&(NULL))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (- ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (- ((vt0.c0 IN ()))) WHERE ((((- (t0.c2))) BETWEEN (((vt0.c1) NOTNULL)) AND (((vt0.c1)&(NULL)))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c2))) BETWEEN (((vt0.c1) NOTNULL)) AND (((vt0.c1)&(NULL))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (- ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (- ((vt0.c0 IN ()))) WHERE ((((- (t0.c2))) BETWEEN (((vt0.c1) NOTNULL)) AND (((vt0.c1)&(NULL)))));
SELECT ALL * FROM t0 WHERE ((('1389615853') BETWEEN (((NULL) BETWEEN (t0.c2) AND (t0.c2))) AND (CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))) ORDER BY ((~ (t0.c2)) IN ((t0.c2 IN (t0.c2, t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((('1389615853') BETWEEN (((NULL) BETWEEN (t0.c2) AND (t0.c2))) AND (CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))) IS TRUE)  as count FROM t0 ORDER BY ((~ (t0.c2)) IN ((t0.c2 IN (t0.c2, t0.c2)))) ASC);
SELECT ALL * FROM t0 WHERE ((('1389615853') BETWEEN (((NULL) BETWEEN (t0.c2) AND (t0.c2))) AND (CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))) ORDER BY ((~ (t0.c2)) IN ((t0.c2 IN (t0.c2, t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((('1389615853') BETWEEN (((NULL) BETWEEN (t0.c2) AND (t0.c2))) AND (CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))) IS TRUE)  as count FROM t0 ORDER BY ((~ (t0.c2)) IN ((t0.c2 IN (t0.c2, t0.c2)))) ASC);
SELECT ALL * FROM t0 WHERE ((('1389615853') BETWEEN (((NULL) BETWEEN (t0.c2) AND (t0.c2))) AND (CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))) ORDER BY ((~ (t0.c2)) IN ((t0.c2 IN (t0.c2, t0.c2)))) ASC;
SELECT COUNT(*) FROM t0 WHERE ('7䭎') ORDER BY t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('7䭎') IS TRUE)  as count FROM t0 ORDER BY t0.c2  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ('7䭎') ORDER BY t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('7䭎') IS TRUE)  as count FROM t0 ORDER BY t0.c2  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ('7䭎') ORDER BY t0.c2  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN 0.8942244154246347 THEN vt0.c2 ELSE vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.8942244154246347 THEN vt0.c2 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN 0.8942244154246347 THEN vt0.c2 ELSE vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.8942244154246347 THEN vt0.c2 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN 0.8942244154246347 THEN vt0.c2 ELSE vt0.c0 END) NOT NULL));
SELECT * FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((x'')) AND ((x'')))) ORDER BY (vt0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((x'')) AND ((x'')))) IS TRUE)  as count FROM vt0, t0 ORDER BY (vt0.c0 IN ())  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((x'')) AND ((x'')))) ORDER BY (vt0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((x'')) AND ((x'')))) IS TRUE)  as count FROM vt0, t0 ORDER BY (vt0.c0 IN ())  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((x'')) AND ((x'')))) ORDER BY (vt0.c0 IN ())  NULLS FIRST;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(vt0.c2 AS BLOB) THEN ((vt0.c2) NOTNULL) END WHERE (((((((t0.c2)%(-1318132450)))AND(((((vt0.c2)OR(-1e500)))OR(t0.c2)))))OR(((vt0.c1) NOTNULL)))) ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST, CASE ABS(vt0.c1)  WHEN (vt0.c1 IN ()) THEN NULL COLLATE BINARY ELSE (((vt0.c1, t0.c2, vt0.c0))<=((vt0.c0, vt0.c2, vt0.c2))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)%(-1318132450)))AND(((((vt0.c2)OR(-1e500)))OR(t0.c2)))))OR(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(vt0.c2 AS BLOB) THEN ((vt0.c2) NOTNULL) END ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST, CASE ABS(vt0.c1)  WHEN (vt0.c1 IN ()) THEN NULL COLLATE BINARY ELSE (((vt0.c1, t0.c2, vt0.c0))<=((vt0.c0, vt0.c2, vt0.c2))) END ASC  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(vt0.c2 AS BLOB) THEN ((vt0.c2) NOTNULL) END WHERE (((((((t0.c2)%(-1318132450)))AND(((((vt0.c2)OR(-1e500)))OR(t0.c2)))))OR(((vt0.c1) NOTNULL)))) ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST, CASE ABS(vt0.c1)  WHEN (vt0.c1 IN ()) THEN NULL COLLATE BINARY ELSE (((vt0.c1, t0.c2, vt0.c0))<=((vt0.c0, vt0.c2, vt0.c2))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)%(-1318132450)))AND(((((vt0.c2)OR(-1e500)))OR(t0.c2)))))OR(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(vt0.c2 AS BLOB) THEN ((vt0.c2) NOTNULL) END ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST, CASE ABS(vt0.c1)  WHEN (vt0.c1 IN ()) THEN NULL COLLATE BINARY ELSE (((vt0.c1, t0.c2, vt0.c0))<=((vt0.c0, vt0.c2, vt0.c2))) END ASC  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(vt0.c2 AS BLOB) THEN ((vt0.c2) NOTNULL) END WHERE (((((((t0.c2)%(-1318132450)))AND(((((vt0.c2)OR(-1e500)))OR(t0.c2)))))OR(((vt0.c1) NOTNULL)))) ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST, CASE ABS(vt0.c1)  WHEN (vt0.c1 IN ()) THEN NULL COLLATE BINARY ELSE (((vt0.c1, t0.c2, vt0.c0))<=((vt0.c0, vt0.c2, vt0.c2))) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)!=(vt0.c1)) COLLATE NOCASE) ORDER BY ((0.1365205608236031) BETWEEN (vt0.c1) AND (IFNULL(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<>(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((0.1365205608236031) BETWEEN (vt0.c1) AND (IFNULL(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)!=(vt0.c1)) COLLATE NOCASE) ORDER BY ((0.1365205608236031) BETWEEN (vt0.c1) AND (IFNULL(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<>(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((0.1365205608236031) BETWEEN (vt0.c1) AND (IFNULL(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)!=(vt0.c1)) COLLATE NOCASE) ORDER BY ((0.1365205608236031) BETWEEN (vt0.c1) AND (IFNULL(vt0.c0, vt0.c0)));
SELECT * FROM t0 CROSS JOIN vt0 ON (((((((((((t0.c2)OR(vt0.c2)))AND(vt0.c0)))OR(0.6249685852512102)))AND(t0.c2)), t0.c2, ((vt0.c2) NOTNULL)))=((CAST(vt0.c0 AS INTEGER), t0.c2 COLLATE BINARY, (vt0.c2 IN (vt0.c0, t0.c2))))) WHERE (NULL) ORDER BY ((UNLIKELY(vt0.c0))%(((((((((vt0.c2)OR(0.5644295164681393)))AND(vt0.c0)))OR(vt0.c1)))OR(NULL)))), ((((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN ('.a*)') AND (((vt0.c2)>>(vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((((((((t0.c2)OR(vt0.c2)))AND(vt0.c0)))OR(0.6249685852512102)))AND(t0.c2)), t0.c2, ((vt0.c2) NOTNULL)))==((CAST(vt0.c0 AS INTEGER), t0.c2 COLLATE BINARY, (vt0.c2 IN (vt0.c0, t0.c2))))) ORDER BY ((UNLIKELY(vt0.c0))%(((((((((vt0.c2)OR(0.5644295164681393)))AND(vt0.c0)))OR(vt0.c1)))OR(NULL)))), ((((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN ('.a*)') AND (((vt0.c2)>>(vt0.c2)))) ASC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON (((((((((((t0.c2)OR(vt0.c2)))AND(vt0.c0)))OR(0.6249685852512102)))AND(t0.c2)), t0.c2, ((vt0.c2) NOTNULL)))=((CAST(vt0.c0 AS INTEGER), t0.c2 COLLATE BINARY, (vt0.c2 IN (vt0.c0, t0.c2))))) WHERE (NULL) ORDER BY ((UNLIKELY(vt0.c0))%(((((((((vt0.c2)OR(0.5644295164681393)))AND(vt0.c0)))OR(vt0.c1)))OR(NULL)))), ((((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN ('.a*)') AND (((vt0.c2)>>(vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((((((((t0.c2)OR(vt0.c2)))AND(vt0.c0)))OR(0.6249685852512102)))AND(t0.c2)), t0.c2, ((vt0.c2) NOTNULL)))==((CAST(vt0.c0 AS INTEGER), t0.c2 COLLATE BINARY, (vt0.c2 IN (vt0.c0, t0.c2))))) ORDER BY ((UNLIKELY(vt0.c0))%(((((((((vt0.c2)OR(0.5644295164681393)))AND(vt0.c0)))OR(vt0.c1)))OR(NULL)))), ((((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN ('.a*)') AND (((vt0.c2)>>(vt0.c2)))) ASC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON (((((((((((t0.c2)OR(vt0.c2)))AND(vt0.c0)))OR(0.6249685852512102)))AND(t0.c2)), t0.c2, ((vt0.c2) NOTNULL)))=((CAST(vt0.c0 AS INTEGER), t0.c2 COLLATE BINARY, (vt0.c2 IN (vt0.c0, t0.c2))))) WHERE (NULL) ORDER BY ((UNLIKELY(vt0.c0))%(((((((((vt0.c2)OR(0.5644295164681393)))AND(vt0.c0)))OR(vt0.c1)))OR(NULL)))), ((((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN ('.a*)') AND (((vt0.c2)>>(vt0.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT * FROM t0, vt0 WHERE (((vt0.c2) BETWEEN (vt0.c2) AND (t0.c2)) COLLATE BINARY) ORDER BY ((((((vt0.c1)AND(t0.c2)))OR(t0.c2)))LIKE(x'c57b'))  NULLS LAST, t0.c2;
SELECT SUM(count) FROM (SELECT ((((vt0.c2) BETWEEN (vt0.c2) AND (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c1)AND(t0.c2)))OR(t0.c2)))LIKE(x'c57b'))  NULLS LAST, t0.c2);
SELECT * FROM t0, vt0 WHERE (((vt0.c2) BETWEEN (vt0.c2) AND (t0.c2)) COLLATE BINARY) ORDER BY ((((((vt0.c1)AND(t0.c2)))OR(t0.c2)))LIKE(x'c57b'))  NULLS LAST, t0.c2;
SELECT SUM(count) FROM (SELECT ((((vt0.c2) BETWEEN (vt0.c2) AND (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c1)AND(t0.c2)))OR(t0.c2)))LIKE(x'c57b'))  NULLS LAST, t0.c2);
SELECT * FROM t0, vt0 WHERE (((vt0.c2) BETWEEN (vt0.c2) AND (t0.c2)) COLLATE BINARY) ORDER BY ((((((vt0.c1)AND(t0.c2)))OR(t0.c2)))LIKE(x'c57b'))  NULLS LAST, t0.c2;
SELECT ALL COUNT(*) FROM t0 WHERE ((- (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END)));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((t0.c2)%(vt0.c0)) IN ()) WHERE (CASE NULL COLLATE BINARY  WHEN ((((x'')OR(vt0.c0)))AND(vt0.c2)) THEN TRIM(DISTINCT t0.c2) ELSE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) END) ORDER BY '' ASC  NULLS LAST, (- (((vt0.c2)|(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE NULL COLLATE BINARY  WHEN ((((x'')OR(vt0.c0)))AND(vt0.c2)) THEN TRIM(DISTINCT t0.c2) ELSE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((t0.c2)%(vt0.c0)) IN ()) ORDER BY '' ASC  NULLS LAST, (- (((vt0.c2)|(vt0.c1)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((t0.c2)%(vt0.c0)) IN ()) WHERE (CASE NULL COLLATE BINARY  WHEN ((((x'')OR(vt0.c0)))AND(vt0.c2)) THEN TRIM(DISTINCT t0.c2) ELSE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) END) ORDER BY '' ASC  NULLS LAST, (- (((vt0.c2)|(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE NULL COLLATE BINARY  WHEN ((((x'')OR(vt0.c0)))AND(vt0.c2)) THEN TRIM(DISTINCT t0.c2) ELSE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((t0.c2)%(vt0.c0)) IN ()) ORDER BY '' ASC  NULLS LAST, (- (((vt0.c2)|(vt0.c1)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((t0.c2)%(vt0.c0)) IN ()) WHERE (CASE NULL COLLATE BINARY  WHEN ((((x'')OR(vt0.c0)))AND(vt0.c2)) THEN TRIM(DISTINCT t0.c2) ELSE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) END) ORDER BY '' ASC  NULLS LAST, (- (((vt0.c2)|(vt0.c1))));
SELECT * FROM vt0, t0 WHERE (((((t0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))*(((vt0.c0)|(vt0.c2))))) ORDER BY LAST_INSERT_ROWID() ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))*(((vt0.c0)|(vt0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY LAST_INSERT_ROWID() ASC);
SELECT * FROM vt0, t0 WHERE (((((t0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))*(((vt0.c0)|(vt0.c2))))) ORDER BY LAST_INSERT_ROWID() ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))*(((vt0.c0)|(vt0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY LAST_INSERT_ROWID() ASC);
SELECT * FROM vt0, t0 WHERE (((((t0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))*(((vt0.c0)|(vt0.c2))))) ORDER BY LAST_INSERT_ROWID() ASC;
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c2)||(t0.c2)) ELSE 0.11512240450423217 END WHERE (((((vt0.c1)LIKE(vt0.c0)))%((((0.41397458231450635))>((vt0.c0)))))) ORDER BY (vt0.c2 COLLATE BINARY IN ((((vt0.c2)) NOT BETWEEN (('')) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)LIKE(vt0.c0)))%((((0.41397458231450635))>((vt0.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c2)||(t0.c2)) ELSE 0.11512240450423217 END ORDER BY (vt0.c2 COLLATE BINARY IN ((((vt0.c2)) NOT BETWEEN (('')) AND ((vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c2)||(t0.c2)) ELSE 0.11512240450423217 END WHERE (((((vt0.c1)LIKE(vt0.c0)))%((((0.41397458231450635))>((vt0.c0)))))) ORDER BY (vt0.c2 COLLATE BINARY IN ((((vt0.c2)) NOT BETWEEN (('')) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)LIKE(vt0.c0)))%((((0.41397458231450635))>((vt0.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c2)||(t0.c2)) ELSE 0.11512240450423217 END ORDER BY (vt0.c2 COLLATE BINARY IN ((((vt0.c2)) NOT BETWEEN (('')) AND ((vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c2)||(t0.c2)) ELSE 0.11512240450423217 END WHERE (((((vt0.c1)LIKE(vt0.c0)))%((((0.41397458231450635))>((vt0.c0)))))) ORDER BY (vt0.c2 COLLATE BINARY IN ((((vt0.c2)) NOT BETWEEN (('')) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((1.88145056E9) NOT BETWEEN (t0.c2) AND (vt0.c2))))>=((CAST(vt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((((1.88145056E9) NOT BETWEEN (t0.c2) AND (vt0.c2))))>=((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((1.88145056E9) NOT BETWEEN (t0.c2) AND (vt0.c2))))>=((CAST(vt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((((1.88145056E9) NOT BETWEEN (t0.c2) AND (vt0.c2))))>=((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((1.88145056E9) NOT BETWEEN (t0.c2) AND (vt0.c2))))>=((CAST(vt0.c0 AS BLOB)))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON t0.c2 WHERE ((((t0.c2) IS FALSE) IN ())) ORDER BY ((UNICODE('')) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c2) IS FALSE) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON t0.c2 ORDER BY ((UNICODE('')) IS FALSE) ASC);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON t0.c2 WHERE ((((t0.c2) IS FALSE) IN ())) ORDER BY ((UNICODE('')) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c2) IS FALSE) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON t0.c2 ORDER BY ((UNICODE('')) IS FALSE) ASC);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON t0.c2 WHERE ((((t0.c2) IS FALSE) IN ())) ORDER BY ((UNICODE('')) IS FALSE) ASC;
SELECT ALL * FROM t0 WHERE (((TYPEOF(t0.c2))||(((t0.c2)+(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(t0.c2))||(((t0.c2)+(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((TYPEOF(t0.c2))||(((t0.c2)+(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(t0.c2))||(((t0.c2)+(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((TYPEOF(t0.c2))||(((t0.c2)+(t0.c2)))));
SELECT * FROM vt0, t0 WHERE ((((((0.39643094306788595) BETWEEN (vt0.c0) AND (vt0.c2))))<=((((((t0.c2)OR(vt0.c2)))AND(t0.c2)))))) ORDER BY (((0.38312564934601245)) BETWEEN ((vt0.c1)) AND ((t0.c2 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((0.39643094306788595) BETWEEN (vt0.c0) AND (vt0.c2))))<=((((((t0.c2)OR(vt0.c2)))AND(t0.c2)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((0.38312564934601245)) BETWEEN ((vt0.c1)) AND ((t0.c2 COLLATE RTRIM))) ASC);
SELECT * FROM vt0, t0 WHERE ((((((0.39643094306788595) BETWEEN (vt0.c0) AND (vt0.c2))))<=((((((t0.c2)OR(vt0.c2)))AND(t0.c2)))))) ORDER BY (((0.38312564934601245)) BETWEEN ((vt0.c1)) AND ((t0.c2 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((0.39643094306788595) BETWEEN (vt0.c0) AND (vt0.c2))))<=((((((t0.c2)OR(vt0.c2)))AND(t0.c2)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((0.38312564934601245)) BETWEEN ((vt0.c1)) AND ((t0.c2 COLLATE RTRIM))) ASC);
SELECT * FROM vt0, t0 WHERE ((((((0.39643094306788595) BETWEEN (vt0.c0) AND (vt0.c2))))<=((((((t0.c2)OR(vt0.c2)))AND(t0.c2)))))) ORDER BY (((0.38312564934601245)) BETWEEN ((vt0.c1)) AND ((t0.c2 COLLATE RTRIM))) ASC;
SELECT * FROM vt0 WHERE (NULL) ORDER BY UNLIKELY(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END));
SELECT * FROM vt0 WHERE (NULL) ORDER BY UNLIKELY(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END));
SELECT * FROM vt0 WHERE (NULL) ORDER BY UNLIKELY(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0)&(t0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(t0.c2))) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0)&(t0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(t0.c2))) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0)&(t0.c2))) ISNULL));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((vt0.c2)OR(t0.c2)))AND(vt0.c2)))OR('1408367166')))AND(t0.c2))) BETWEEN (((vt0.c1)IS NOT(NULL))) AND (t0.c2 COLLATE NOCASE))) ORDER BY CAST(((vt0.c2)%(t0.c2)) AS REAL), (((+ (t0.c2))) IS FALSE) ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE t0.c2 END)&(vt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c2)OR(t0.c2)))AND(vt0.c2)))OR('1408367166')))AND(t0.c2))) BETWEEN (((vt0.c1)IS NOT(NULL))) AND (t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((vt0.c2)%(t0.c2)) AS REAL), (((+ (t0.c2))) IS FALSE) ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE t0.c2 END)&(vt0.c1)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((vt0.c2)OR(t0.c2)))AND(vt0.c2)))OR('1408367166')))AND(t0.c2))) BETWEEN (((vt0.c1)IS NOT(NULL))) AND (t0.c2 COLLATE NOCASE))) ORDER BY CAST(((vt0.c2)%(t0.c2)) AS REAL), (((+ (t0.c2))) IS FALSE) ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE t0.c2 END)&(vt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c2)OR(t0.c2)))AND(vt0.c2)))OR('1408367166')))AND(t0.c2))) BETWEEN (((vt0.c1)IS NOT(NULL))) AND (t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((vt0.c2)%(t0.c2)) AS REAL), (((+ (t0.c2))) IS FALSE) ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE t0.c2 END)&(vt0.c1)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((vt0.c2)OR(t0.c2)))AND(vt0.c2)))OR('1408367166')))AND(t0.c2))) BETWEEN (((vt0.c1)IS NOT(NULL))) AND (t0.c2 COLLATE NOCASE))) ORDER BY CAST(((vt0.c2)%(t0.c2)) AS REAL), (((+ (t0.c2))) IS FALSE) ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE t0.c2 END)&(vt0.c1)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD((- (vt0.c0)), 0.0802373299199054));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((- (vt0.c0)), 0.0802373299199054)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD((- (vt0.c0)), 0.0802373299199054));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((- (vt0.c0)), 0.0802373299199054)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD((- (vt0.c0)), 0.0802373299199054));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)OR((((vt0.c2))<>((vt0.c2))))))OR(CAST(vt0.c2 AS NUMERIC)))) ORDER BY ((vt0.c2)<>(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))) ASC, (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))AND(NULL)))AND(vt0.c2)) IN (((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR((((vt0.c2))!=((vt0.c2))))))OR(CAST(vt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c2)<>(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))) ASC, (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))AND(NULL)))AND(vt0.c2)) IN (((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)OR((((vt0.c2))<>((vt0.c2))))))OR(CAST(vt0.c2 AS NUMERIC)))) ORDER BY ((vt0.c2)<>(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))) ASC, (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))AND(NULL)))AND(vt0.c2)) IN (((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR((((vt0.c2))!=((vt0.c2))))))OR(CAST(vt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c2)<>(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))) ASC, (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))AND(NULL)))AND(vt0.c2)) IN (((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)OR((((vt0.c2))<>((vt0.c2))))))OR(CAST(vt0.c2 AS NUMERIC)))) ORDER BY ((vt0.c2)<>(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))) ASC, (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))AND(NULL)))AND(vt0.c2)) IN (((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)))OR(CHAR(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)))OR(CHAR(vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)))OR(CHAR(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)))OR(CHAR(vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)))OR(CHAR(vt0.c2))));
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c2 END)-(((vt0.c2)OR(0x25500ee7))))) ORDER BY ((vt0.c1) ISNULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c2 END)-(((vt0.c2)OR(0x25500ee7))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) ISNULL) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c2 END)-(((vt0.c2)OR(0x25500ee7))))) ORDER BY ((vt0.c1) ISNULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c2 END)-(((vt0.c2)OR(0x25500ee7))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) ISNULL) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c2 END)-(((vt0.c2)OR(0x25500ee7))))) ORDER BY ((vt0.c1) ISNULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (DATETIME((((vt0.c1))=((vt0.c0))), ((vt0.c0)<<(t0.c2)), ((vt0.c2) BETWEEN (vt0.c2) AND (t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME((((vt0.c1))=((vt0.c0))), ((vt0.c0)<<(t0.c2)), ((vt0.c2) BETWEEN (vt0.c2) AND (t0.c2)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (DATETIME((((vt0.c1))=((vt0.c0))), ((vt0.c0)<<(t0.c2)), ((vt0.c2) BETWEEN (vt0.c2) AND (t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME((((vt0.c1))=((vt0.c0))), ((vt0.c0)<<(t0.c2)), ((vt0.c2) BETWEEN (vt0.c2) AND (t0.c2)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (DATETIME((((vt0.c1))=((vt0.c0))), ((vt0.c0)<<(t0.c2)), ((vt0.c2) BETWEEN (vt0.c2) AND (t0.c2))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (t0.c2)))IS NOT(t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2)))IS NOT(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (t0.c2)))IS NOT(t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2)))IS NOT(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (t0.c2)))IS NOT(t0.c2 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE (((0.38684749140602304)==(((t0.c2)+(0xffffffffb98b89af)))));
SELECT SUM(count) FROM (SELECT ((((0.38684749140602304)==(((t0.c2)+(0xffffffffb98b89af))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((0.38684749140602304)==(((t0.c2)+(0xffffffffb98b89af)))));
SELECT SUM(count) FROM (SELECT ((((0.38684749140602304)==(((t0.c2)+(0xffffffffb98b89af))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((0.38684749140602304)==(((t0.c2)+(0xffffffffb98b89af)))));
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c2))<((NULL))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2))<((NULL))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c2))<((NULL))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2))<((NULL))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c2))<((NULL))) COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE (CASE ''  WHEN TRIM(t0.c2, t0.c2) THEN '퇲' WHEN json(t0.c2) THEN ((t0.c2) ISNULL) WHEN ((t0.c2)<=(t0.c2)) THEN ((((((((x'48de')AND(t0.c2)))OR(t0.c2)))OR(NULL)))AND(t0.c2)) WHEN CAST(t0.c2 AS REAL) THEN t0.c2 WHEN CAST(t0.c2 AS INTEGER) THEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) ELSE t0.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ''  WHEN TRIM(t0.c2, t0.c2) THEN '퇲' WHEN json(t0.c2) THEN ((t0.c2) ISNULL) WHEN ((t0.c2)<=(t0.c2)) THEN ((((((((x'48de')AND(t0.c2)))OR(t0.c2)))OR(NULL)))AND(t0.c2)) WHEN CAST(t0.c2 AS REAL) THEN t0.c2 WHEN CAST(t0.c2 AS INTEGER) THEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) ELSE t0.c2 COLLATE BINARY END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE ''  WHEN TRIM(t0.c2, t0.c2) THEN '퇲' WHEN json(t0.c2) THEN ((t0.c2) ISNULL) WHEN ((t0.c2)<=(t0.c2)) THEN ((((((((x'48de')AND(t0.c2)))OR(t0.c2)))OR(NULL)))AND(t0.c2)) WHEN CAST(t0.c2 AS REAL) THEN t0.c2 WHEN CAST(t0.c2 AS INTEGER) THEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) ELSE t0.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ''  WHEN TRIM(t0.c2, t0.c2) THEN '퇲' WHEN json(t0.c2) THEN ((t0.c2) ISNULL) WHEN ((t0.c2)<=(t0.c2)) THEN ((((((((x'48de')AND(t0.c2)))OR(t0.c2)))OR(NULL)))AND(t0.c2)) WHEN CAST(t0.c2 AS REAL) THEN t0.c2 WHEN CAST(t0.c2 AS INTEGER) THEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) ELSE t0.c2 COLLATE BINARY END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE ''  WHEN TRIM(t0.c2, t0.c2) THEN '퇲' WHEN json(t0.c2) THEN ((t0.c2) ISNULL) WHEN ((t0.c2)<=(t0.c2)) THEN ((((((((x'48de')AND(t0.c2)))OR(t0.c2)))OR(NULL)))AND(t0.c2)) WHEN CAST(t0.c2 AS REAL) THEN t0.c2 WHEN CAST(t0.c2 AS INTEGER) THEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) ELSE t0.c2 COLLATE BINARY END);
SELECT COUNT(*) FROM vt0, t0 WHERE ('-1333008503') ORDER BY 0.15260194850652442  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1333008503') IS TRUE)  as count FROM vt0, t0 ORDER BY 0.15260194850652442  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ('-1333008503') ORDER BY 0.15260194850652442  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1333008503') IS TRUE)  as count FROM vt0, t0 ORDER BY 0.15260194850652442  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ('-1333008503') ORDER BY 0.15260194850652442  NULLS FIRST;
SELECT * FROM vt0 WHERE ((~ (TRIM(DISTINCT vt0.c2)))) ORDER BY ((vt0.c1)%(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((~ (TRIM(DISTINCT vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)%(vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((~ (TRIM(DISTINCT vt0.c2)))) ORDER BY ((vt0.c1)%(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((~ (TRIM(DISTINCT vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)%(vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((~ (TRIM(DISTINCT vt0.c2)))) ORDER BY ((vt0.c1)%(vt0.c0)) COLLATE RTRIM;
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN vt0.c1 THEN vt0.c2 ELSE t0.c2 END COLLATE NOCASE WHERE (vt0.c0) ORDER BY (((~ (vt0.c2)))>(UPPER(DISTINCT vt0.c0))) ASC  NULLS FIRST, ((((t0.c2)LIKE(t0.c2)))*(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN vt0.c1 THEN vt0.c2 ELSE t0.c2 END COLLATE NOCASE ORDER BY (((~ (vt0.c2)))>(UPPER(DISTINCT vt0.c0))) ASC  NULLS FIRST, ((((t0.c2)LIKE(t0.c2)))*(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN vt0.c1 THEN vt0.c2 ELSE t0.c2 END COLLATE NOCASE WHERE (vt0.c0) ORDER BY (((~ (vt0.c2)))>(UPPER(DISTINCT vt0.c0))) ASC  NULLS FIRST, ((((t0.c2)LIKE(t0.c2)))*(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN vt0.c1 THEN vt0.c2 ELSE t0.c2 END COLLATE NOCASE ORDER BY (((~ (vt0.c2)))>(UPPER(DISTINCT vt0.c0))) ASC  NULLS FIRST, ((((t0.c2)LIKE(t0.c2)))*(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN vt0.c1 THEN vt0.c2 ELSE t0.c2 END COLLATE NOCASE WHERE (vt0.c0) ORDER BY (((~ (vt0.c2)))>(UPPER(DISTINCT vt0.c0))) ASC  NULLS FIRST, ((((t0.c2)LIKE(t0.c2)))*(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c2) ORDER BY CAST(((((vt0.c1)AND(t0.c2)))OR(vt0.c1)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((((vt0.c1)AND(t0.c2)))OR(vt0.c1)) AS TEXT) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c2) ORDER BY CAST(((((vt0.c1)AND(t0.c2)))OR(vt0.c1)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((((vt0.c1)AND(t0.c2)))OR(vt0.c1)) AS TEXT) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c2) ORDER BY CAST(((((vt0.c1)AND(t0.c2)))OR(vt0.c1)) AS TEXT) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c2))<=((vt0.c1))))OR(0.40798038143366067)))AND((vt0.c2 IN ()))))OR(LOWER(x''))))OR(CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY ((((vt0.c0)OR(((vt0.c2)AND('4m[lm')))))OR(vt0.c2 COLLATE NOCASE)) DESC, ((((- (vt0.c1)), CAST(vt0.c2 AS INTEGER), ((vt0.c2)IS NOT(vt0.c1))))>((((vt0.c2)IS NOT(vt0.c2)), ((vt0.c2)>(vt0.c0)), (- (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c2))<=((vt0.c1))))OR(0.40798038143366067)))AND((vt0.c2 IN ()))))OR(LOWER(x''))))OR(CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(((vt0.c2)AND('4m[lm')))))OR(vt0.c2 COLLATE NOCASE)) DESC, ((((- (vt0.c1)), CAST(vt0.c2 AS INTEGER), ((vt0.c2)IS NOT(vt0.c1))))>((((vt0.c2)IS NOT(vt0.c2)), ((vt0.c2)>(vt0.c0)), (- (vt0.c2))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c2))<=((vt0.c1))))OR(0.40798038143366067)))AND((vt0.c2 IN ()))))OR(LOWER(x''))))OR(CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY ((((vt0.c0)OR(((vt0.c2)AND('4m[lm')))))OR(vt0.c2 COLLATE NOCASE)) DESC, ((((- (vt0.c1)), CAST(vt0.c2 AS INTEGER), ((vt0.c2)IS NOT(vt0.c1))))>((((vt0.c2)IS NOT(vt0.c2)), ((vt0.c2)>(vt0.c0)), (- (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c2))<=((vt0.c1))))OR(0.40798038143366067)))AND((vt0.c2 IN ()))))OR(LOWER(x''))))OR(CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(((vt0.c2)AND('4m[lm')))))OR(vt0.c2 COLLATE NOCASE)) DESC, ((((- (vt0.c1)), CAST(vt0.c2 AS INTEGER), ((vt0.c2)IS NOT(vt0.c1))))>((((vt0.c2)IS NOT(vt0.c2)), ((vt0.c2)>(vt0.c0)), (- (vt0.c2))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c2))<=((vt0.c1))))OR(0.40798038143366067)))AND((vt0.c2 IN ()))))OR(LOWER(x''))))OR(CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY ((((vt0.c0)OR(((vt0.c2)AND('4m[lm')))))OR(vt0.c2 COLLATE NOCASE)) DESC, ((((- (vt0.c1)), CAST(vt0.c2 AS INTEGER), ((vt0.c2)IS NOT(vt0.c1))))>((((vt0.c2)IS NOT(vt0.c2)), ((vt0.c2)>(vt0.c0)), (- (vt0.c2)))));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON 0.09613537218173751 WHERE ((NOT (((vt0.c1)>=(t0.c2))))) ORDER BY ((((((t0.c2)OR(vt0.c2)))OR(NULL))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1)>=(t0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON 0.09613537218173751 ORDER BY ((((((t0.c2)OR(vt0.c2)))OR(NULL))) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON 0.09613537218173751 WHERE ((NOT (((vt0.c1)>=(t0.c2))))) ORDER BY ((((((t0.c2)OR(vt0.c2)))OR(NULL))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1)>=(t0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON 0.09613537218173751 ORDER BY ((((((t0.c2)OR(vt0.c2)))OR(NULL))) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON 0.09613537218173751 WHERE ((NOT (((vt0.c1)>=(t0.c2))))) ORDER BY ((((((t0.c2)OR(vt0.c2)))OR(NULL))) ISNULL);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CAST(vt0.c2 AS REAL) COLLATE NOCASE WHERE ((((((((((t0.c2 IN (vt0.c0)))OR(vt0.c2)))OR(((((((((((((((((t0.c2)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))OR(0.8454693899573613)))AND(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c1))<((vt0.c0))))))OR((((t0.c2, t0.c2, vt0.c2))>((t0.c2, '?z', vt0.c1)))))) ORDER BY CAST((vt0.c2 IN ()) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((t0.c2 IN (vt0.c0)))OR(vt0.c2)))OR(((((((((((((((((t0.c2)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))OR(0.8454693899573613)))AND(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c1))<((vt0.c0))))))OR((((t0.c2, t0.c2, vt0.c2))>((t0.c2, '?z', vt0.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST(vt0.c2 AS REAL) COLLATE NOCASE ORDER BY CAST((vt0.c2 IN ()) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CAST(vt0.c2 AS REAL) COLLATE NOCASE WHERE ((((((((((t0.c2 IN (vt0.c0)))OR(vt0.c2)))OR(((((((((((((((((t0.c2)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))OR(0.8454693899573613)))AND(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c1))<((vt0.c0))))))OR((((t0.c2, t0.c2, vt0.c2))>((t0.c2, '?z', vt0.c1)))))) ORDER BY CAST((vt0.c2 IN ()) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((t0.c2 IN (vt0.c0)))OR(vt0.c2)))OR(((((((((((((((((t0.c2)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))OR(0.8454693899573613)))AND(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c1))<((vt0.c0))))))OR((((t0.c2, t0.c2, vt0.c2))>((t0.c2, '?z', vt0.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST(vt0.c2 AS REAL) COLLATE NOCASE ORDER BY CAST((vt0.c2 IN ()) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CAST(vt0.c2 AS REAL) COLLATE NOCASE WHERE ((((((((((t0.c2 IN (vt0.c0)))OR(vt0.c2)))OR(((((((((((((((((t0.c2)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))OR(0.8454693899573613)))AND(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c1))<((vt0.c0))))))OR((((t0.c2, t0.c2, vt0.c2))>((t0.c2, '?z', vt0.c1)))))) ORDER BY CAST((vt0.c2 IN ()) AS INTEGER) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c2)*(vt0.c1)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)*(vt0.c1)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c2)*(vt0.c1)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)*(vt0.c1)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c2)*(vt0.c1)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, 8.82254237E8, vt0.c0)) AND ((vt0.c0, vt0.c0, -4.87965129E8))))LIKE(vt0.c1))) ORDER BY (t0.c2 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, 8.82254237E8, vt0.c0)) AND ((vt0.c0, vt0.c0, -4.87965129E8))))LIKE(vt0.c1))) IS TRUE)  as count FROM t0, vt0 ORDER BY (t0.c2 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, 8.82254237E8, vt0.c0)) AND ((vt0.c0, vt0.c0, -4.87965129E8))))LIKE(vt0.c1))) ORDER BY (t0.c2 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, 8.82254237E8, vt0.c0)) AND ((vt0.c0, vt0.c0, -4.87965129E8))))LIKE(vt0.c1))) IS TRUE)  as count FROM t0, vt0 ORDER BY (t0.c2 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, 8.82254237E8, vt0.c0)) AND ((vt0.c0, vt0.c0, -4.87965129E8))))LIKE(vt0.c1))) ORDER BY (t0.c2 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((t0.c2)<=(t0.c2))))>(((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)<=(t0.c2))))>(((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c2)<=(t0.c2))))>(((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)<=(t0.c2))))>(((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c2)<=(t0.c2))))>(((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2)))))));
SELECT ALL * FROM vt0, t0 WHERE (((TYPEOF(vt0.c0)) BETWEEN (0.3500403132137413) AND ((~ (vt0.c2))))) ORDER BY ('924089422' IN ())  NULLS FIRST, (((('-1478034130')*(t0.c2))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(vt0.c0)) BETWEEN (0.3500403132137413) AND ((~ (vt0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ('924089422' IN ())  NULLS FIRST, (((('-1478034130')*(t0.c2))) IS FALSE) ASC);
SELECT ALL * FROM vt0, t0 WHERE (((TYPEOF(vt0.c0)) BETWEEN (0.3500403132137413) AND ((~ (vt0.c2))))) ORDER BY ('924089422' IN ())  NULLS FIRST, (((('-1478034130')*(t0.c2))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(vt0.c0)) BETWEEN (0.3500403132137413) AND ((~ (vt0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ('924089422' IN ())  NULLS FIRST, (((('-1478034130')*(t0.c2))) IS FALSE) ASC);
SELECT ALL * FROM vt0, t0 WHERE (((TYPEOF(vt0.c0)) BETWEEN (0.3500403132137413) AND ((~ (vt0.c2))))) ORDER BY ('924089422' IN ())  NULLS FIRST, (((('-1478034130')*(t0.c2))) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0)%(vt0.c2)))LIKE((((vt0.c2, t0.c2, t0.c2))>((vt0.c2, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c2)))LIKE((((vt0.c2, t0.c2, t0.c2))>((vt0.c2, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0)%(vt0.c2)))LIKE((((vt0.c2, t0.c2, t0.c2))>((vt0.c2, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c2)))LIKE((((vt0.c2, t0.c2, t0.c2))>((vt0.c2, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0)%(vt0.c2)))LIKE((((vt0.c2, t0.c2, t0.c2))>((vt0.c2, vt0.c0, vt0.c1))))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CASE ((((vt0.c2)AND(vt0.c0)))AND(0.07803689532949332))  WHEN (((t0.c2, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, t0.c2, vt0.c2, vt0.c0, vt0.c2)) AND ((t0.c2, vt0.c0, vt0.c1, vt0.c1, t0.c2))) THEN ((((((((t0.c2)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(0.8089212985053852)) END WHERE (((CASE 0.13581188506457997  WHEN vt0.c2 THEN '1881450560' ELSE -1994621825 END) IS TRUE)) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ((((CASE 0.13581188506457997  WHEN vt0.c2 THEN '1881450560' ELSE -1994621825 END) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE ((((vt0.c2)AND(vt0.c0)))AND(0.07803689532949332))  WHEN (((t0.c2, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, t0.c2, vt0.c2, vt0.c0, vt0.c2)) AND ((t0.c2, vt0.c0, vt0.c1, vt0.c1, t0.c2))) THEN ((((((((t0.c2)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(0.8089212985053852)) END ORDER BY t0.c2);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CASE ((((vt0.c2)AND(vt0.c0)))AND(0.07803689532949332))  WHEN (((t0.c2, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, t0.c2, vt0.c2, vt0.c0, vt0.c2)) AND ((t0.c2, vt0.c0, vt0.c1, vt0.c1, t0.c2))) THEN ((((((((t0.c2)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(0.8089212985053852)) END WHERE (((CASE 0.13581188506457997  WHEN vt0.c2 THEN '1881450560' ELSE -1994621825 END) IS TRUE)) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ((((CASE 0.13581188506457997  WHEN vt0.c2 THEN '1881450560' ELSE -1994621825 END) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE ((((vt0.c2)AND(vt0.c0)))AND(0.07803689532949332))  WHEN (((t0.c2, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, t0.c2, vt0.c2, vt0.c0, vt0.c2)) AND ((t0.c2, vt0.c0, vt0.c1, vt0.c1, t0.c2))) THEN ((((((((t0.c2)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(0.8089212985053852)) END ORDER BY t0.c2);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CASE ((((vt0.c2)AND(vt0.c0)))AND(0.07803689532949332))  WHEN (((t0.c2, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, t0.c2, vt0.c2, vt0.c0, vt0.c2)) AND ((t0.c2, vt0.c0, vt0.c1, vt0.c1, t0.c2))) THEN ((((((((t0.c2)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(0.8089212985053852)) END WHERE (((CASE 0.13581188506457997  WHEN vt0.c2 THEN '1881450560' ELSE -1994621825 END) IS TRUE)) ORDER BY t0.c2;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (((t0.c2)>=(t0.c2)), ((vt0.c2) NOTNULL))) WHERE (0X5494be1) ORDER BY x'' DESC  NULLS FIRST, ((((((vt0.c1)<=(vt0.c2)))AND((((t0.c2, vt0.c2, vt0.c2)) BETWEEN ((vt0.c2, vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c2, vt0.c2))))))OR(((t0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST, (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND (((vt0.c0) BETWEEN (t0.c2) AND ('')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0X5494be1) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (((t0.c2)>=(t0.c2)), ((vt0.c2) NOTNULL))) ORDER BY x'' DESC  NULLS FIRST, ((((((vt0.c1)<=(vt0.c2)))AND((((t0.c2, vt0.c2, vt0.c2)) BETWEEN ((vt0.c2, vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c2, vt0.c2))))))OR(((t0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST, (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND (((vt0.c0) BETWEEN (t0.c2) AND ('')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (((t0.c2)>=(t0.c2)), ((vt0.c2) NOTNULL))) WHERE (0X5494be1) ORDER BY x'' DESC  NULLS FIRST, ((((((vt0.c1)<=(vt0.c2)))AND((((t0.c2, vt0.c2, vt0.c2)) BETWEEN ((vt0.c2, vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c2, vt0.c2))))))OR(((t0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST, (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND (((vt0.c0) BETWEEN (t0.c2) AND ('')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0X5494be1) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (((t0.c2)>=(t0.c2)), ((vt0.c2) NOTNULL))) ORDER BY x'' DESC  NULLS FIRST, ((((((vt0.c1)<=(vt0.c2)))AND((((t0.c2, vt0.c2, vt0.c2)) BETWEEN ((vt0.c2, vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c2, vt0.c2))))))OR(((t0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST, (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND (((vt0.c0) BETWEEN (t0.c2) AND ('')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (((t0.c2)>=(t0.c2)), ((vt0.c2) NOTNULL))) WHERE (0X5494be1) ORDER BY x'' DESC  NULLS FIRST, ((((((vt0.c1)<=(vt0.c2)))AND((((t0.c2, vt0.c2, vt0.c2)) BETWEEN ((vt0.c2, vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c2, vt0.c2))))))OR(((t0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST, (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND (((vt0.c0) BETWEEN (t0.c2) AND ('')))) ASC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (t0.c2) AND (0.9720493180938329)) IN (vt0.c2))) ORDER BY CASE UPPER(vt0.c1)  WHEN 'po4YE b]U' THEN x'' WHEN CAST('示now{' AS INTEGER) THEN ((((vt0.c2)OR(x'')))OR(vt0.c1)) WHEN json(0.3035180433844932) THEN (vt0.c2 IN ()) WHEN ((vt0.c2)<=(t0.c2)) THEN (+ (vt0.c1)) WHEN vt0.c0 THEN CASE WHEN t0.c2 THEN vt0.c0 WHEN 0.7818958759234209 THEN t0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END ELSE CASE t0.c2  WHEN vt0.c0 THEN t0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN t0.c2 ELSE vt0.c2 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (t0.c2) AND (0.9720493180938329)) IN (vt0.c2))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE UPPER(vt0.c1)  WHEN 'po4YE b]U' THEN x'' WHEN CAST('示now{' AS INTEGER) THEN ((((vt0.c2)OR(x'')))OR(vt0.c1)) WHEN json(0.3035180433844932) THEN (vt0.c2 IN ()) WHEN ((vt0.c2)<=(t0.c2)) THEN (+ (vt0.c1)) WHEN vt0.c0 THEN CASE WHEN t0.c2 THEN vt0.c0 WHEN 0.7818958759234209 THEN t0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END ELSE CASE t0.c2  WHEN vt0.c0 THEN t0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN t0.c2 ELSE vt0.c2 END END ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (t0.c2) AND (0.9720493180938329)) IN (vt0.c2))) ORDER BY CASE UPPER(vt0.c1)  WHEN 'po4YE b]U' THEN x'' WHEN CAST('示now{' AS INTEGER) THEN ((((vt0.c2)OR(x'')))OR(vt0.c1)) WHEN json(0.3035180433844932) THEN (vt0.c2 IN ()) WHEN ((vt0.c2)<=(t0.c2)) THEN (+ (vt0.c1)) WHEN vt0.c0 THEN CASE WHEN t0.c2 THEN vt0.c0 WHEN 0.7818958759234209 THEN t0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END ELSE CASE t0.c2  WHEN vt0.c0 THEN t0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN t0.c2 ELSE vt0.c2 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (t0.c2) AND (0.9720493180938329)) IN (vt0.c2))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE UPPER(vt0.c1)  WHEN 'po4YE b]U' THEN x'' WHEN CAST('示now{' AS INTEGER) THEN ((((vt0.c2)OR(x'')))OR(vt0.c1)) WHEN json(0.3035180433844932) THEN (vt0.c2 IN ()) WHEN ((vt0.c2)<=(t0.c2)) THEN (+ (vt0.c1)) WHEN vt0.c0 THEN CASE WHEN t0.c2 THEN vt0.c0 WHEN 0.7818958759234209 THEN t0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END ELSE CASE t0.c2  WHEN vt0.c0 THEN t0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN t0.c2 ELSE vt0.c2 END END ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (t0.c2) AND (0.9720493180938329)) IN (vt0.c2))) ORDER BY CASE UPPER(vt0.c1)  WHEN 'po4YE b]U' THEN x'' WHEN CAST('示now{' AS INTEGER) THEN ((((vt0.c2)OR(x'')))OR(vt0.c1)) WHEN json(0.3035180433844932) THEN (vt0.c2 IN ()) WHEN ((vt0.c2)<=(t0.c2)) THEN (+ (vt0.c1)) WHEN vt0.c0 THEN CASE WHEN t0.c2 THEN vt0.c0 WHEN 0.7818958759234209 THEN t0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END ELSE CASE t0.c2  WHEN vt0.c0 THEN t0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN t0.c2 ELSE vt0.c2 END END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((t0.c2 IN (((t0.c2)IS NOT(vt0.c0))))) ORDER BY (- (CAST(vt0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c2 IN (((t0.c2)IS NOT(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (- (CAST(vt0.c0 AS BLOB)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((t0.c2 IN (((t0.c2)IS NOT(vt0.c0))))) ORDER BY (- (CAST(vt0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c2 IN (((t0.c2)IS NOT(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (- (CAST(vt0.c0 AS BLOB)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((t0.c2 IN (((t0.c2)IS NOT(vt0.c0))))) ORDER BY (- (CAST(vt0.c0 AS BLOB)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) THEN ((vt0.c1) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) THEN ((vt0.c1) NOTNULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) THEN ((vt0.c1) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) THEN ((vt0.c1) NOTNULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) THEN ((vt0.c1) NOTNULL) END);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON '-193323819' WHERE ((- (CASE vt0.c1  WHEN t0.c2 THEN vt0.c1 WHEN '\蹏' THEN t0.c2 WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c1  WHEN t0.c2 THEN vt0.c1 WHEN '\蹏' THEN t0.c2 WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON '-193323819');
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON '-193323819' WHERE ((- (CASE vt0.c1  WHEN t0.c2 THEN vt0.c1 WHEN '\蹏' THEN t0.c2 WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c1  WHEN t0.c2 THEN vt0.c1 WHEN '\蹏' THEN t0.c2 WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON '-193323819');
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON '-193323819' WHERE ((- (CASE vt0.c1  WHEN t0.c2 THEN vt0.c1 WHEN '\蹏' THEN t0.c2 WHEN vt0.c1 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((vt0.c1)OR(vt0.c2)))OR(t0.c2)))AND(((((vt0.c1)AND(x'deb3')))AND(vt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC)))) ORDER BY CASE (NOT (t0.c2))  WHEN (((t0.c2, vt0.c2, t0.c2)) NOT BETWEEN ((t0.c2, '', vt0.c2)) AND ((vt0.c1, vt0.c2, vt0.c0))) THEN t0.c2 END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)OR(vt0.c2)))OR(t0.c2)))AND(((((vt0.c1)AND(x'deb3')))AND(vt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (NOT (t0.c2))  WHEN (((t0.c2, vt0.c2, t0.c2)) NOT BETWEEN ((t0.c2, '', vt0.c2)) AND ((vt0.c1, vt0.c2, vt0.c0))) THEN t0.c2 END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((vt0.c1)OR(vt0.c2)))OR(t0.c2)))AND(((((vt0.c1)AND(x'deb3')))AND(vt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC)))) ORDER BY CASE (NOT (t0.c2))  WHEN (((t0.c2, vt0.c2, t0.c2)) NOT BETWEEN ((t0.c2, '', vt0.c2)) AND ((vt0.c1, vt0.c2, vt0.c0))) THEN t0.c2 END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)OR(vt0.c2)))OR(t0.c2)))AND(((((vt0.c1)AND(x'deb3')))AND(vt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (NOT (t0.c2))  WHEN (((t0.c2, vt0.c2, t0.c2)) NOT BETWEEN ((t0.c2, '', vt0.c2)) AND ((vt0.c1, vt0.c2, vt0.c0))) THEN t0.c2 END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((vt0.c1)OR(vt0.c2)))OR(t0.c2)))AND(((((vt0.c1)AND(x'deb3')))AND(vt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC)))) ORDER BY CASE (NOT (t0.c2))  WHEN (((t0.c2, vt0.c2, t0.c2)) NOT BETWEEN ((t0.c2, '', vt0.c2)) AND ((vt0.c1, vt0.c2, vt0.c0))) THEN t0.c2 END;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) WHERE (CAST(((vt0.c0) NOT NULL) AS REAL)) ORDER BY 0Xffffffffa88ff0ef  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) ORDER BY 0xffffffffa88ff0ef  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) WHERE (CAST(((vt0.c0) NOT NULL) AS REAL)) ORDER BY 0Xffffffffa88ff0ef  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) ORDER BY 0xffffffffa88ff0ef  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) WHERE (CAST(((vt0.c0) NOT NULL) AS REAL)) ORDER BY 0Xffffffffa88ff0ef  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (NULL) ORDER BY (((t0.c2 IN ())) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((+ (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c2 IN ())) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((+ (vt0.c1)))) ASC);
SELECT * FROM vt0, t0 WHERE (NULL) ORDER BY (((t0.c2 IN ())) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((+ (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c2 IN ())) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((+ (vt0.c1)))) ASC);
SELECT * FROM vt0, t0 WHERE (NULL) ORDER BY (((t0.c2 IN ())) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((+ (vt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (0.9008036070457563 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (0.9008036070457563 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (0.9008036070457563 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (0.9008036070457563 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (0.9008036070457563 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CAST(((vt0.c1) NOT NULL) AS NUMERIC) WHERE ((((NOT (t0.c2))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (json_valid(vt0.c0)))) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (json_valid(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST(((vt0.c1) NOT NULL) AS NUMERIC) ORDER BY t0.c2);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CAST(((vt0.c1) NOT NULL) AS NUMERIC) WHERE ((((NOT (t0.c2))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (json_valid(vt0.c0)))) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (json_valid(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST(((vt0.c1) NOT NULL) AS NUMERIC) ORDER BY t0.c2);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CAST(((vt0.c1) NOT NULL) AS NUMERIC) WHERE ((((NOT (t0.c2))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (json_valid(vt0.c0)))) ORDER BY t0.c2;
SELECT * FROM vt0, t0 WHERE (((NULL)*((vt0.c1 IN ())))) ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)), '0.15700671107890618', ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))))<>((CASE WHEN vt0.c0 THEN vt0.c0 END, ((((((((t0.c2)OR(vt0.c2)))OR(t0.c2)))OR(vt0.c2)))OR('Oa')), CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((NULL)*((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)), '0.15700671107890618', ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))))<>((CASE WHEN vt0.c0 THEN vt0.c0 END, ((((((((t0.c2)OR(vt0.c2)))OR(t0.c2)))OR(vt0.c2)))OR('Oa')), CAST(vt0.c1 AS NUMERIC)))));
SELECT * FROM vt0, t0 WHERE (((NULL)*((vt0.c1 IN ())))) ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)), '0.15700671107890618', ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))))<>((CASE WHEN vt0.c0 THEN vt0.c0 END, ((((((((t0.c2)OR(vt0.c2)))OR(t0.c2)))OR(vt0.c2)))OR('Oa')), CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((NULL)*((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)), '0.15700671107890618', ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))))<>((CASE WHEN vt0.c0 THEN vt0.c0 END, ((((((((t0.c2)OR(vt0.c2)))OR(t0.c2)))OR(vt0.c2)))OR('Oa')), CAST(vt0.c1 AS NUMERIC)))));
SELECT * FROM vt0, t0 WHERE (((NULL)*((vt0.c1 IN ())))) ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)), '0.15700671107890618', ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))))<>((CASE WHEN vt0.c0 THEN vt0.c0 END, ((((((((t0.c2)OR(vt0.c2)))OR(t0.c2)))OR(vt0.c2)))OR('Oa')), CAST(vt0.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c2 THEN t0.c2 ELSE vt0.c1 END)IS(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c2 THEN t0.c2 ELSE vt0.c1 END)IS(t0.c2))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c2 THEN t0.c2 ELSE vt0.c1 END)IS(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c2 THEN t0.c2 ELSE vt0.c1 END)IS(t0.c2))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c2 THEN t0.c2 ELSE vt0.c1 END)IS(t0.c2)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c1 AS TEXT))%((((vt0.c1, vt0.c2, vt0.c1))!=((vt0.c1, t0.c2, t0.c2))))) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c1 AS TEXT))%((((vt0.c1, vt0.c2, vt0.c1))<>((vt0.c1, t0.c2, t0.c2))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c1 AS TEXT))%((((vt0.c1, vt0.c2, vt0.c1))!=((vt0.c1, t0.c2, t0.c2))))) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c1 AS TEXT))%((((vt0.c1, vt0.c2, vt0.c1))<>((vt0.c1, t0.c2, t0.c2))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c1 AS TEXT))%((((vt0.c1, vt0.c2, vt0.c1))!=((vt0.c1, t0.c2, t0.c2))))) WHERE (t0.c2);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((LOWER(DISTINCT vt0.c0))LIKE((~ (0.023885163925145947)))) WHERE ((~ (((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((LOWER(DISTINCT vt0.c0))LIKE((~ (0.023885163925145947)))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((LOWER(DISTINCT vt0.c0))LIKE((~ (0.023885163925145947)))) WHERE ((~ (((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((LOWER(DISTINCT vt0.c0))LIKE((~ (0.023885163925145947)))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((LOWER(DISTINCT vt0.c0))LIKE((~ (0.023885163925145947)))) WHERE ((~ (((vt0.c0)*(vt0.c0)))));
SELECT * FROM t0 WHERE ((((((((((((x''))<=((193240158))))AND(TRIM(t0.c2, t0.c2))))OR(CASE t0.c2  WHEN 'Jp)BHo7' THEN t0.c2 END)))AND(((((t0.c2)AND(t0.c2)))OR(t0.c2)))))AND(((t0.c2)>=(t0.c2))))) ORDER BY t0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((x''))<=((193240158))))AND(TRIM(t0.c2, t0.c2))))OR(CASE t0.c2  WHEN 'Jp)BHo7' THEN t0.c2 END)))AND(((((t0.c2)AND(t0.c2)))OR(t0.c2)))))AND(((t0.c2)>=(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((((((((x''))<=((193240158))))AND(TRIM(t0.c2, t0.c2))))OR(CASE t0.c2  WHEN 'Jp)BHo7' THEN t0.c2 END)))AND(((((t0.c2)AND(t0.c2)))OR(t0.c2)))))AND(((t0.c2)>=(t0.c2))))) ORDER BY t0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((x''))<=((193240158))))AND(TRIM(t0.c2, t0.c2))))OR(CASE t0.c2  WHEN 'Jp)BHo7' THEN t0.c2 END)))AND(((((t0.c2)AND(t0.c2)))OR(t0.c2)))))AND(((t0.c2)>=(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((((((((x''))<=((193240158))))AND(TRIM(t0.c2, t0.c2))))OR(CASE t0.c2  WHEN 'Jp)BHo7' THEN t0.c2 END)))AND(((((t0.c2)AND(t0.c2)))OR(t0.c2)))))AND(((t0.c2)>=(t0.c2))))) ORDER BY t0.c2 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((~ (vt0.c2)))IS(((vt0.c1) IS TRUE)))) ORDER BY ((((vt0.c1)<(vt0.c2)))GLOB(t0.c2 COLLATE RTRIM)) DESC, CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN LIKELIHOOD(vt0.c1, 0.47332758130975994) END;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c2)))IS(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((((vt0.c1)<(vt0.c2)))GLOB(t0.c2 COLLATE RTRIM)) DESC, CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN LIKELIHOOD(vt0.c1, 0.47332758130975994) END);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((~ (vt0.c2)))IS(((vt0.c1) IS TRUE)))) ORDER BY ((((vt0.c1)<(vt0.c2)))GLOB(t0.c2 COLLATE RTRIM)) DESC, CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN LIKELIHOOD(vt0.c1, 0.47332758130975994) END;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c2)))IS(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((((vt0.c1)<(vt0.c2)))GLOB(t0.c2 COLLATE RTRIM)) DESC, CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN LIKELIHOOD(vt0.c1, 0.47332758130975994) END);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((~ (vt0.c2)))IS(((vt0.c1) IS TRUE)))) ORDER BY ((((vt0.c1)<(vt0.c2)))GLOB(t0.c2 COLLATE RTRIM)) DESC, CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN LIKELIHOOD(vt0.c1, 0.47332758130975994) END;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((NULL) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1)|(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1)|(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((NULL) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1)|(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1)|(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((NULL) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1)|(vt0.c1)))));
SELECT COUNT(*) FROM t0 WHERE ((TOTAL_CHANGES() IN (t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((TOTAL_CHANGES() IN (t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((TOTAL_CHANGES() IN (t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((TOTAL_CHANGES() IN (t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((TOTAL_CHANGES() IN (t0.c2 COLLATE BINARY)));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON CASE ((vt0.c2)||(vt0.c0))  WHEN (vt0.c2 IN ()) THEN t0.c2 COLLATE RTRIM WHEN (vt0.c1 IN ()) THEN (vt0.c0 IN ()) WHEN (('-1247296025') BETWEEN (0Xffffffffbc746eda) AND (t0.c2)) THEN LTRIM(t0.c2) END WHERE (-632885275);
SELECT SUM(count) FROM (SELECT ALL ((-632885275) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE ((vt0.c2)||(vt0.c0))  WHEN (vt0.c2 IN ()) THEN t0.c2 COLLATE RTRIM WHEN (vt0.c1 IN ()) THEN (vt0.c0 IN ()) WHEN (('-1247296025') BETWEEN (0xffffffffbc746eda) AND (t0.c2)) THEN LTRIM(t0.c2) END);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON CASE ((vt0.c2)||(vt0.c0))  WHEN (vt0.c2 IN ()) THEN t0.c2 COLLATE RTRIM WHEN (vt0.c1 IN ()) THEN (vt0.c0 IN ()) WHEN (('-1247296025') BETWEEN (0Xffffffffbc746eda) AND (t0.c2)) THEN LTRIM(t0.c2) END WHERE (-632885275);
SELECT SUM(count) FROM (SELECT ALL ((-632885275) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE ((vt0.c2)||(vt0.c0))  WHEN (vt0.c2 IN ()) THEN t0.c2 COLLATE RTRIM WHEN (vt0.c1 IN ()) THEN (vt0.c0 IN ()) WHEN (('-1247296025') BETWEEN (0xffffffffbc746eda) AND (t0.c2)) THEN LTRIM(t0.c2) END);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON CASE ((vt0.c2)||(vt0.c0))  WHEN (vt0.c2 IN ()) THEN t0.c2 COLLATE RTRIM WHEN (vt0.c1 IN ()) THEN (vt0.c0 IN ()) WHEN (('-1247296025') BETWEEN (0Xffffffffbc746eda) AND (t0.c2)) THEN LTRIM(t0.c2) END WHERE (-632885275);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c2, vt0.c2, vt0.c2))>((vt0.c1, vt0.c1, vt0.c0))) THEN CAST(vt0.c0 AS NUMERIC) END) ORDER BY (((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN x'c368' THEN vt0.c0 END))<(((+ (vt0.c1))))) DESC  NULLS LAST, (- (((vt0.c0)+(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c2, vt0.c2, vt0.c2))>((vt0.c1, vt0.c1, vt0.c0))) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY (((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN x'c368' THEN vt0.c0 END))<(((+ (vt0.c1))))) DESC  NULLS LAST, (- (((vt0.c0)+(vt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c2, vt0.c2, vt0.c2))>((vt0.c1, vt0.c1, vt0.c0))) THEN CAST(vt0.c0 AS NUMERIC) END) ORDER BY (((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN x'c368' THEN vt0.c0 END))<(((+ (vt0.c1))))) DESC  NULLS LAST, (- (((vt0.c0)+(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c2, vt0.c2, vt0.c2))>((vt0.c1, vt0.c1, vt0.c0))) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY (((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN x'c368' THEN vt0.c0 END))<(((+ (vt0.c1))))) DESC  NULLS LAST, (- (((vt0.c0)+(vt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c2, vt0.c2, vt0.c2))>((vt0.c1, vt0.c1, vt0.c0))) THEN CAST(vt0.c0 AS NUMERIC) END) ORDER BY (((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN x'c368' THEN vt0.c0 END))<(((+ (vt0.c1))))) DESC  NULLS LAST, (- (((vt0.c0)+(vt0.c1)))) DESC;
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((vt0.c0) NOTNULL) WHERE (((t0.c2)>(t0.c2)) COLLATE RTRIM) ORDER BY ((((vt0.c2)IS NOT(t0.c2)))>(((vt0.c1)>('372003299')))) DESC, ((((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c2))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2)>(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((vt0.c0) NOTNULL) ORDER BY ((((vt0.c2)IS NOT(t0.c2)))>(((vt0.c1)>('372003299')))) DESC, ((((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c2))) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((vt0.c0) NOTNULL) WHERE (((t0.c2)>(t0.c2)) COLLATE RTRIM) ORDER BY ((((vt0.c2)IS NOT(t0.c2)))>(((vt0.c1)>('372003299')))) DESC, ((((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c2))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2)>(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((vt0.c0) NOTNULL) ORDER BY ((((vt0.c2)IS NOT(t0.c2)))>(((vt0.c1)>('372003299')))) DESC, ((((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c2))) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((vt0.c0) NOTNULL) WHERE (((t0.c2)>(t0.c2)) COLLATE RTRIM) ORDER BY ((((vt0.c2)IS NOT(t0.c2)))>(((vt0.c1)>('372003299')))) DESC, ((((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c2))) IS TRUE) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (x'5ca9');
SELECT SUM(count) FROM (SELECT ALL ((x'5ca9') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'5ca9');
SELECT SUM(count) FROM (SELECT ALL ((x'5ca9') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'5ca9');
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((0.16422556582893422)))) ISNULL) WHERE (((x'') IS FALSE)) ORDER BY ((((vt0.c0)<>(vt0.c1))) BETWEEN ((- (vt0.c2))) AND (((t0.c2)>=(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((0.16422556582893422)))) ISNULL) ORDER BY ((((vt0.c0)!=(vt0.c1))) BETWEEN ((- (vt0.c2))) AND (((t0.c2)>=(vt0.c1)))) ASC  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((0.16422556582893422)))) ISNULL) WHERE (((x'') IS FALSE)) ORDER BY ((((vt0.c0)<>(vt0.c1))) BETWEEN ((- (vt0.c2))) AND (((t0.c2)>=(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((0.16422556582893422)))) ISNULL) ORDER BY ((((vt0.c0)!=(vt0.c1))) BETWEEN ((- (vt0.c2))) AND (((t0.c2)>=(vt0.c1)))) ASC  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((0.16422556582893422)))) ISNULL) WHERE (((x'') IS FALSE)) ORDER BY ((((vt0.c0)<>(vt0.c1))) BETWEEN ((- (vt0.c2))) AND (((t0.c2)>=(vt0.c1)))) ASC  NULLS LAST;
