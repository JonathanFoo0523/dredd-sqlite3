-- Time: 2024/06/10 01:29:08
-- Database: database36
-- Database version: 3.40.0
-- seed value: 966503636
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1, c2 UNINDEXED); -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (',}'), (NULL), ('454623680'); -- 0ms;
UPDATE vt0 SET (c1, c2)=('', '') WHERE CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN '454623680' THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c2) VALUES (NULL, -294100702); -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c1) VALUES (0.8949589932938241, NULL), (0.8949589932938241, 0X7cfd84da), (0.22321608735863596, '2096989402'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.3155724302900098), (-1110748678), (x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-239044433); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x'beeca0a079dc', -1110748678, 0.10427828325113153); -- 0ms;
END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
ANALYZE vt0; -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, c1); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.7263025233132799), (NULL), (0.036770404798755485); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0xffffffffb8129869, x''); -- 1ms;
BEGIN  TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE main; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.10427828325113153) BETWEEN (x'') AND (0.5019345404274737)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (NULL), (NULL), (x''), (0.15713904278527113), ('Cr'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'', NULL, x''), (NULL, x'', '1'), ('165257912', '731168005', '蓚'); -- 1ms;
INSERT OR ABORT INTO vt0(c0, c2) VALUES ('165257912', 0.5540106663474887); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c2=0.4826280151841018; -- 1ms;
PRAGMA stats; -- 0ms;
CREATE VIEW v0(c0, c1, c2) AS SELECT DISTINCT CASE WHEN (NOT (vt0.c2)) THEN vt1.c0 END, CAST(vt0.c0 AS BLOB), NTH_VALUE(CASE WHEN vt1.c0 THEN (vt1.c0 IN ()) ELSE ((vt1.c1) NOT NULL) END, json_array_length(vt1.c0, 0.8898934816988366) COLLATE RTRIM) OVER () FROM vt1, vt0 WHERE ((('-1363282781') NOT NULL)) GROUP BY ((vt1.c1 COLLATE NOCASE) IS TRUE); -- 3ms;
PRAGMA short_column_names; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c1)=(0.036770404798755485) WHERE (('731168005')<=(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)); -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (x''), (4.5462368E8), (x'b28a'); -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA recursive_triggers; -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=('-294100702') WHERE (((vt0.c2 IN ()))==(((vt0.c1) IS FALSE))); -- 1ms;
UPDATE OR IGNORE vt0 SET c2=0X2dbf0c2c; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt1(c1) VALUES (0.8949589932938241); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES ('', 'Z6E '), (-1110748678, 4.5462368E8), (NULL, 0.5476115119360364); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (7.31168005E8, 0X398dbfe7, NULL); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x'3b9d'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c2, c2)=(NULL, '-239044433'); -- 1ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
CREATE TABLE t0 (c0 INT ); -- 0ms;
END TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
UPDATE OR IGNORE t1 SET (c0)=(NULL) WHERE (+ (((t1.c0)>=(t1.c0)))); -- 0ms;
PRAGMA mmap_size; -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES ('1e500'), ('165257912'), (0.03802979605565171); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '20863230 0 sz=454623680 noskipscan'); -- 0ms;
UPDATE vt0 SET c0='-2027041110', c0='1910631265', c2='1390617228' WHERE CAST((+ (vt0.c2)) AS NUMERIC); -- 0ms;
REINDEX  t1; -- 0ms;
CREATE UNIQUE INDEX i53 ON t1(((c0) IS FALSE) COLLATE RTRIM) WHERE DATETIME((c0 IN ()), ((((c0)AND(c0)))OR(c0)), ((c0) NOTNULL)); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c2, c0) VALUES (x'6c60', 'ZKL켏iqW', 'yL1{N|t'), ('731168005', 446934975, x'a791'), (-1.363282781E9, '', ',}'); -- 0ms;
REINDEX; -- 1ms;
END TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1910631265);\n; -- 0ms;
INSERT OR ABORT INTO vt1(c1, c0) VALUES ('264359737', NULL); -- 1ms;
INSERT OR IGNORE INTO t1(c0) VALUES (x'd788'); -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(x'') WHERE (((NOT (t1.c0))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES (x'', NULL); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c1, c2) VALUES (1186977834, ''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO t1(c0) VALUES ('-1052599842'), (0.7109311970451311), (NULL); -- 0ms;
END; -- 0ms;
DROP INDEX IF EXISTS "i53"; -- 6ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('!^fee'), (x'82d6def7883b'), (x''); -- 0ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c1) VALUES (0.018033741119244717), (NULL), (x'2a89'); -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 1ms;
CREATE INDEX i90 ON t1((((c0, c0, c0, x'1aaa0d42', c0)) NOT BETWEEN ((UNICODE(c0), CAST(c0 AS INTEGER), (c0 IN (c0, c0)), COALESCE(c0, NULL), '0.10427828325113153')) AND (((((c0, c0, c0))=((c0, c0, c0))), (+ (c0)), ((((c0)AND(c0)))AND(NULL)), c0, ((c0)>>(c0))))) ASC); -- 0ms;
PRAGMA mmap_size = 5473518450201611861; -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
CREATE INDEX i98 ON t1(IFNULL(c0 COLLATE BINARY, ((c0) NOT NULL)) COLLATE RTRIM ASC); -- 1ms;
INSERT OR ABORT INTO vt1 VALUES (0.948719438627343, NULL); -- 0ms;
COMMIT; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP VIEW v0; -- 0ms;
SELECT COUNT(*) FROM t1 INNER JOIN vt1 ON CAST(NULL AS TEXT) WHERE ((((((t1.c0))>((t1.c0))))%(CAST(t1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0))>((t1.c0))))%(CAST(t1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON CAST(NULL AS TEXT));
SELECT COUNT(*) FROM t1 INNER JOIN vt1 ON CAST(NULL AS TEXT) WHERE ((((((t1.c0))>((t1.c0))))%(CAST(t1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0))>((t1.c0))))%(CAST(t1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON CAST(NULL AS TEXT));
SELECT COUNT(*) FROM t1 INNER JOIN vt1 ON CAST(NULL AS TEXT) WHERE ((((((t1.c0))>((t1.c0))))%(CAST(t1.c0 AS NUMERIC))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON NULL WHERE (((((vt1.c1))<((t1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1))<((t1.c0))) IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON NULL);
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON NULL WHERE (((((vt1.c1))<((t1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1))<((t1.c0))) IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON NULL);
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON NULL WHERE (((((vt1.c1))<((t1.c0))) IN ()));
SELECT * FROM vt1, t1 WHERE (CAST(LOWER(vt1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(vt1.c0) AS REAL)) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE (CAST(LOWER(vt1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(vt1.c0) AS REAL)) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE (CAST(LOWER(vt1.c0) AS REAL));
SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))))) ORDER BY MAX(((vt1.c1)/(vt1.c1)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN '-1976799413' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY MAX(((vt1.c1)/(vt1.c1)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN '-1976799413' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)  NULLS FIRST);
SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))))) ORDER BY MAX(((vt1.c1)/(vt1.c1)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN '-1976799413' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY MAX(((vt1.c1)/(vt1.c1)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN '-1976799413' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)  NULLS FIRST);
SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))))) ORDER BY MAX(((vt1.c1)/(vt1.c1)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN '-1976799413' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) NOT NULL));
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t1 ON ((UNLIKELY(DISTINCT t1.c0)) NOTNULL) WHERE ((((vt0.c2 IN ())) NOT BETWEEN (((vt0.c2)>=(vt0.c2))) AND ((~ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ())) NOT BETWEEN (((vt0.c2)>=(vt0.c2))) AND ((~ (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t1 ON ((UNLIKELY(DISTINCT t1.c0)) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t1 ON ((UNLIKELY(DISTINCT t1.c0)) NOTNULL) WHERE ((((vt0.c2 IN ())) NOT BETWEEN (((vt0.c2)>=(vt0.c2))) AND ((~ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ())) NOT BETWEEN (((vt0.c2)>=(vt0.c2))) AND ((~ (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t1 ON ((UNLIKELY(DISTINCT t1.c0)) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t1 ON ((UNLIKELY(DISTINCT t1.c0)) NOTNULL) WHERE ((((vt0.c2 IN ())) NOT BETWEEN (((vt0.c2)>=(vt0.c2))) AND ((~ (vt1.c1)))));
SELECT * FROM t1, vt1 WHERE (((((((((((vt1.c1) BETWEEN (t1.c0) AND ('454004882')))AND(CASE t1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))OR(((vt1.c0)LIKE(vt1.c1)))))OR(t1.c0 COLLATE NOCASE)))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (t1.c0))))) ORDER BY t1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1) BETWEEN (t1.c0) AND ('454004882')))AND(CASE t1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))OR(((vt1.c0)LIKE(vt1.c1)))))OR(t1.c0 COLLATE NOCASE)))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (t1.c0))))) IS TRUE)  as count FROM t1, vt1 ORDER BY t1.c0 DESC  NULLS LAST);
SELECT * FROM t1, vt1 WHERE (((((((((((vt1.c1) BETWEEN (t1.c0) AND ('454004882')))AND(CASE t1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))OR(((vt1.c0)LIKE(vt1.c1)))))OR(t1.c0 COLLATE NOCASE)))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (t1.c0))))) ORDER BY t1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1) BETWEEN (t1.c0) AND ('454004882')))AND(CASE t1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))OR(((vt1.c0)LIKE(vt1.c1)))))OR(t1.c0 COLLATE NOCASE)))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (t1.c0))))) IS TRUE)  as count FROM t1, vt1 ORDER BY t1.c0 DESC  NULLS LAST);
SELECT * FROM t1, vt1 WHERE (((((((((((vt1.c1) BETWEEN (t1.c0) AND ('454004882')))AND(CASE t1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))OR(((vt1.c0)LIKE(vt1.c1)))))OR(t1.c0 COLLATE NOCASE)))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (t1.c0))))) ORDER BY t1.c0 DESC  NULLS LAST;
SELECT ALL * FROM vt0, t1, vt1 WHERE (((((((vt1.c1) BETWEEN (vt0.c2) AND (t1.c0)))OR(((vt1.c1) NOT BETWEEN (vt0.c2) AND (t1.c0)))))AND(((t1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) BETWEEN (vt0.c2) AND (t1.c0)))OR(((vt1.c1) NOT BETWEEN (vt0.c2) AND (t1.c0)))))AND(((t1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE (((((((vt1.c1) BETWEEN (vt0.c2) AND (t1.c0)))OR(((vt1.c1) NOT BETWEEN (vt0.c2) AND (t1.c0)))))AND(((t1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) BETWEEN (vt0.c2) AND (t1.c0)))OR(((vt1.c1) NOT BETWEEN (vt0.c2) AND (t1.c0)))))AND(((t1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE (((((((vt1.c1) BETWEEN (vt0.c2) AND (t1.c0)))OR(((vt1.c1) NOT BETWEEN (vt0.c2) AND (t1.c0)))))AND(((t1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)<<(vt0.c0)))!=(vt1.c1))) ORDER BY (((vt0.c0) IS FALSE) IN ())  NULLS LAST, TRIM(DISTINCT x'', ((vt0.c0)>(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)<<(vt0.c0)))!=(vt1.c1))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0) IS FALSE) IN ())  NULLS LAST, TRIM(DISTINCT x'', ((vt0.c0)>(vt0.c1))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)<<(vt0.c0)))!=(vt1.c1))) ORDER BY (((vt0.c0) IS FALSE) IN ())  NULLS LAST, TRIM(DISTINCT x'', ((vt0.c0)>(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)<<(vt0.c0)))!=(vt1.c1))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0) IS FALSE) IN ())  NULLS LAST, TRIM(DISTINCT x'', ((vt0.c0)>(vt0.c1))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)<<(vt0.c0)))!=(vt1.c1))) ORDER BY (((vt0.c0) IS FALSE) IN ())  NULLS LAST, TRIM(DISTINCT x'', ((vt0.c0)>(vt0.c1)));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY ((((((t1.c0) ISNULL))OR((t1.c0 IN ()))))AND(('731168005' IN ()))), ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))<(CASE WHEN t1.c0 THEN t1.c0 END)) ASC, NULLIF(DISTINCT (t1.c0 IN ()), ((((t1.c0)AND(t1.c0)))OR(t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0) ISNULL))OR((t1.c0 IN ()))))AND(('731168005' IN ()))), ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))<(CASE WHEN t1.c0 THEN t1.c0 END)) ASC, NULLIF(DISTINCT (t1.c0 IN ()), ((((t1.c0)AND(t1.c0)))OR(t1.c0))));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY ((((((t1.c0) ISNULL))OR((t1.c0 IN ()))))AND(('731168005' IN ()))), ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))<(CASE WHEN t1.c0 THEN t1.c0 END)) ASC, NULLIF(DISTINCT (t1.c0 IN ()), ((((t1.c0)AND(t1.c0)))OR(t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0) ISNULL))OR((t1.c0 IN ()))))AND(('731168005' IN ()))), ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))<(CASE WHEN t1.c0 THEN t1.c0 END)) ASC, NULLIF(DISTINCT (t1.c0 IN ()), ((((t1.c0)AND(t1.c0)))OR(t1.c0))));
SELECT ALL * FROM vt0, t1, vt1 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((t1.c0)OR(vt0.c0)) WHEN ((t1.c0) IS TRUE) THEN 0.4485457597898759 COLLATE RTRIM WHEN json_valid(vt0.c2) THEN ((vt1.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN ()) THEN ((t1.c0)OR(vt0.c0)) WHEN ((t1.c0) IS TRUE) THEN 0.4485457597898759 COLLATE RTRIM WHEN json_valid(vt0.c2) THEN ((vt1.c1) NOT NULL) END) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((t1.c0)OR(vt0.c0)) WHEN ((t1.c0) IS TRUE) THEN 0.4485457597898759 COLLATE RTRIM WHEN json_valid(vt0.c2) THEN ((vt1.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN ()) THEN ((t1.c0)OR(vt0.c0)) WHEN ((t1.c0) IS TRUE) THEN 0.4485457597898759 COLLATE RTRIM WHEN json_valid(vt0.c2) THEN ((vt1.c1) NOT NULL) END) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((t1.c0)OR(vt0.c0)) WHEN ((t1.c0) IS TRUE) THEN 0.4485457597898759 COLLATE RTRIM WHEN json_valid(vt0.c2) THEN ((vt1.c1) NOT NULL) END);
SELECT COUNT(*) FROM t1, vt1 WHERE (((vt1.c1) IS FALSE)) ORDER BY '1111686472' DESC  NULLS LAST, CAST(vt1.c1 AS REAL) COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) IS FALSE)) IS TRUE)  as count FROM t1, vt1 ORDER BY '1111686472' DESC  NULLS LAST, CAST(vt1.c1 AS REAL) COLLATE NOCASE COLLATE NOCASE);
SELECT COUNT(*) FROM t1, vt1 WHERE (((vt1.c1) IS FALSE)) ORDER BY '1111686472' DESC  NULLS LAST, CAST(vt1.c1 AS REAL) COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) IS FALSE)) IS TRUE)  as count FROM t1, vt1 ORDER BY '1111686472' DESC  NULLS LAST, CAST(vt1.c1 AS REAL) COLLATE NOCASE COLLATE NOCASE);
SELECT COUNT(*) FROM t1, vt1 WHERE (((vt1.c1) IS FALSE)) ORDER BY '1111686472' DESC  NULLS LAST, CAST(vt1.c1 AS REAL) COLLATE NOCASE COLLATE NOCASE;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN (('-1e500')) AND ((CAST(vt1.c0 AS REAL))))) ORDER BY 'pU''	K\r' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (('-1e500')) AND ((CAST(vt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1 ORDER BY 'pU''	K\r' DESC);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN (('-1e500')) AND ((CAST(vt1.c0 AS REAL))))) ORDER BY 'pU''	K\r' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (('-1e500')) AND ((CAST(vt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1 ORDER BY 'pU''	K\r' DESC);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN (('-1e500')) AND ((CAST(vt1.c0 AS REAL))))) ORDER BY 'pU''	K\r' DESC;
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('>]') IS FALSE)) NOT BETWEEN (((((((((((((x'')OR('-1052599842')))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR('-294100702'))) AND (((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('>]') IS FALSE)) NOT BETWEEN (((((((((((((x'')OR('-1052599842')))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR('-294100702'))) AND (((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('>]') IS FALSE)) NOT BETWEEN (((((((((((((x'')OR('-1052599842')))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR('-294100702'))) AND (((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('>]') IS FALSE)) NOT BETWEEN (((((((((((((x'')OR('-1052599842')))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR('-294100702'))) AND (((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('>]') IS FALSE)) NOT BETWEEN (((((((((((((x'')OR('-1052599842')))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR('-294100702'))) AND (((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((0.7045639177198322)) AND ((COALESCE(4.5462368E8, 0.3565942273874776, 0X34cc10a, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((0.7045639177198322)) AND ((COALESCE(4.5462368E8, 0.3565942273874776, 0x34cc10a, vt0.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((0.7045639177198322)) AND ((COALESCE(4.5462368E8, 0.3565942273874776, 0X34cc10a, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((0.7045639177198322)) AND ((COALESCE(4.5462368E8, 0.3565942273874776, 0x34cc10a, vt0.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((0.7045639177198322)) AND ((COALESCE(4.5462368E8, 0.3565942273874776, 0X34cc10a, vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((json_insert(vt0.c2, vt1.c1, vt0.c0, vt0.c1, vt0.c2)) ISNULL) WHERE (((CAST(vt0.c0 AS NUMERIC))IS NOT(CAST(vt0.c2 AS TEXT)))) ORDER BY ((vt1.c0) NOTNULL) COLLATE RTRIM COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))IS NOT(CAST(vt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((json_insert(vt0.c2, vt1.c1, vt0.c0, vt0.c1, vt0.c2)) ISNULL) ORDER BY ((vt1.c0) NOTNULL) COLLATE RTRIM COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((json_insert(vt0.c2, vt1.c1, vt0.c0, vt0.c1, vt0.c2)) ISNULL) WHERE (((CAST(vt0.c0 AS NUMERIC))IS NOT(CAST(vt0.c2 AS TEXT)))) ORDER BY ((vt1.c0) NOTNULL) COLLATE RTRIM COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))IS NOT(CAST(vt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((json_insert(vt0.c2, vt1.c1, vt0.c0, vt0.c1, vt0.c2)) ISNULL) ORDER BY ((vt1.c0) NOTNULL) COLLATE RTRIM COLLATE NOCASE);
SELECT * FROM t1 NOT INDEXED WHERE ((((t1.c0)/(0X7fffffffffffffff)) IN ('1186977834')));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)/(0X7fffffffffffffff)) IN ('1186977834'))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 NOT INDEXED WHERE ((((t1.c0)/(0X7fffffffffffffff)) IN ('1186977834')));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)/(0X7fffffffffffffff)) IN ('1186977834'))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 NOT INDEXED WHERE ((((t1.c0)/(0X7fffffffffffffff)) IN ('1186977834')));
SELECT * FROM t1, vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN (+ (vt0.c1)) THEN x'4517' WHEN ((vt0.c1)IS('')) THEN '965591015' WHEN (+ (vt0.c2)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '0.4485457597898759' ELSE vt0.c0 END END) ORDER BY (vt0.c2 IN ()) COLLATE NOCASE DESC  NULLS FIRST, ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)OR((((vt0.c1, vt0.c1, vt0.c1, t1.c0, vt0.c0, vt0.c1, vt0.c2))<=((t1.c0, vt0.c0, vt0.c0, vt0.c0, 0Xffffffff8865b755, vt0.c1, vt0.c0))))))AND(((t1.c0) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS NUMERIC)  WHEN (+ (vt0.c1)) THEN x'4517' WHEN ((vt0.c1)IS('')) THEN '965591015' WHEN (+ (vt0.c2)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '0.4485457597898759' ELSE vt0.c0 END END) IS TRUE)  as count FROM t1, vt0 ORDER BY (vt0.c2 IN ()) COLLATE NOCASE DESC  NULLS FIRST, ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)OR((((vt0.c1, vt0.c1, vt0.c1, t1.c0, vt0.c0, vt0.c1, vt0.c2))<=((t1.c0, vt0.c0, vt0.c0, vt0.c0, 0Xffffffff8865b755, vt0.c1, vt0.c0))))))AND(((t1.c0) IS FALSE))) DESC);
SELECT * FROM t1, vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN (+ (vt0.c1)) THEN x'4517' WHEN ((vt0.c1)IS('')) THEN '965591015' WHEN (+ (vt0.c2)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '0.4485457597898759' ELSE vt0.c0 END END) ORDER BY (vt0.c2 IN ()) COLLATE NOCASE DESC  NULLS FIRST, ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)OR((((vt0.c1, vt0.c1, vt0.c1, t1.c0, vt0.c0, vt0.c1, vt0.c2))<=((t1.c0, vt0.c0, vt0.c0, vt0.c0, 0Xffffffff8865b755, vt0.c1, vt0.c0))))))AND(((t1.c0) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS NUMERIC)  WHEN (+ (vt0.c1)) THEN x'4517' WHEN ((vt0.c1)IS('')) THEN '965591015' WHEN (+ (vt0.c2)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '0.4485457597898759' ELSE vt0.c0 END END) IS TRUE)  as count FROM t1, vt0 ORDER BY (vt0.c2 IN ()) COLLATE NOCASE DESC  NULLS FIRST, ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)OR((((vt0.c1, vt0.c1, vt0.c1, t1.c0, vt0.c0, vt0.c1, vt0.c2))<=((t1.c0, vt0.c0, vt0.c0, vt0.c0, 0Xffffffff8865b755, vt0.c1, vt0.c0))))))AND(((t1.c0) IS FALSE))) DESC);
SELECT * FROM t1, vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN (+ (vt0.c1)) THEN x'4517' WHEN ((vt0.c1)IS('')) THEN '965591015' WHEN (+ (vt0.c2)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '0.4485457597898759' ELSE vt0.c0 END END) ORDER BY (vt0.c2 IN ()) COLLATE NOCASE DESC  NULLS FIRST, ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)OR((((vt0.c1, vt0.c1, vt0.c1, t1.c0, vt0.c0, vt0.c1, vt0.c2))<=((t1.c0, vt0.c0, vt0.c0, vt0.c0, 0Xffffffff8865b755, vt0.c1, vt0.c0))))))AND(((t1.c0) IS FALSE))) DESC;
SELECT COUNT(*) FROM t1 WHERE ((((NOT (t1.c0)))+(NULL))) ORDER BY LTRIM((t1.c0 IN ()), (t1.c0 IN ('y\rJ8'))) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c0)))+(NULL))) IS TRUE)  as count FROM t1 ORDER BY LTRIM((t1.c0 IN ()), (t1.c0 IN ('y\rJ8'))) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((NOT (t1.c0)))+(NULL))) ORDER BY LTRIM((t1.c0 IN ()), (t1.c0 IN ('y\rJ8'))) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c0)))+(NULL))) IS TRUE)  as count FROM t1 ORDER BY LTRIM((t1.c0 IN ()), (t1.c0 IN ('y\rJ8'))) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((NOT (t1.c0)))+(NULL))) ORDER BY LTRIM((t1.c0 IN ()), (t1.c0 IN ('y\rJ8'))) DESC;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((((- (vt1.c0)))OR((- (vt0.c0)))))AND(((t1.c0) IS FALSE))) INNER JOIN t1 ON TRIM(DISTINCT (- (vt1.c0)), CASE WHEN vt0.c1 THEN vt0.c1 END) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((((- (vt1.c0)))OR((- (vt0.c0)))))AND(((t1.c0) IS FALSE))) INNER JOIN t1 ON TRIM(DISTINCT (- (vt1.c0)), CASE WHEN vt0.c1 THEN vt0.c1 END));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((((- (vt1.c0)))OR((- (vt0.c0)))))AND(((t1.c0) IS FALSE))) INNER JOIN t1 ON TRIM(DISTINCT (- (vt1.c0)), CASE WHEN vt0.c1 THEN vt0.c1 END) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((((- (vt1.c0)))OR((- (vt0.c0)))))AND(((t1.c0) IS FALSE))) INNER JOIN t1 ON TRIM(DISTINCT (- (vt1.c0)), CASE WHEN vt0.c1 THEN vt0.c1 END));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((((- (vt1.c0)))OR((- (vt0.c0)))))AND(((t1.c0) IS FALSE))) INNER JOIN t1 ON TRIM(DISTINCT (- (vt1.c0)), CASE WHEN vt0.c1 THEN vt0.c1 END) WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1, t1 WHERE (((CAST(x'' AS INTEGER)) NOT BETWEEN ((t1.c0 IN ())) AND (((vt1.c1) BETWEEN (t1.c0) AND (vt1.c0))))) ORDER BY '-646149582' ASC, ((- (0.7551816957305914)) IN ());
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS INTEGER)) NOT BETWEEN ((t1.c0 IN ())) AND (((vt1.c1) BETWEEN (t1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, t1 ORDER BY '-646149582' ASC, ((- (0.7551816957305914)) IN ()));
SELECT COUNT(*) FROM vt1, t1 WHERE (((CAST(x'' AS INTEGER)) NOT BETWEEN ((t1.c0 IN ())) AND (((vt1.c1) BETWEEN (t1.c0) AND (vt1.c0))))) ORDER BY '-646149582' ASC, ((- (0.7551816957305914)) IN ());
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS INTEGER)) NOT BETWEEN ((t1.c0 IN ())) AND (((vt1.c1) BETWEEN (t1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, t1 ORDER BY '-646149582' ASC, ((- (0.7551816957305914)) IN ()));
SELECT COUNT(*) FROM vt1, t1 WHERE (((CAST(x'' AS INTEGER)) NOT BETWEEN ((t1.c0 IN ())) AND (((vt1.c1) BETWEEN (t1.c0) AND (vt1.c0))))) ORDER BY '-646149582' ASC, ((- (0.7551816957305914)) IN ());
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c0)>>(vt0.c2)) AS REAL)) ORDER BY CASE NULL  WHEN (('613936962')*(vt1.c0)) THEN (((vt0.c2)) BETWEEN ((vt1.c0)) AND ((0x398dbfe7))) WHEN ((vt0.c0)AND(vt1.c0)) THEN (vt1.c0 IN ()) WHEN ((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c1) ISNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>>(vt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE NULL  WHEN (('613936962')*(vt1.c0)) THEN (((vt0.c2)) BETWEEN ((vt1.c0)) AND ((0x398dbfe7))) WHEN ((vt0.c0)AND(vt1.c0)) THEN (vt1.c0 IN ()) WHEN ((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c1) ISNULL) END  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c0)>>(vt0.c2)) AS REAL)) ORDER BY CASE NULL  WHEN (('613936962')*(vt1.c0)) THEN (((vt0.c2)) BETWEEN ((vt1.c0)) AND ((0x398dbfe7))) WHEN ((vt0.c0)AND(vt1.c0)) THEN (vt1.c0 IN ()) WHEN ((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c1) ISNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>>(vt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE NULL  WHEN (('613936962')*(vt1.c0)) THEN (((vt0.c2)) BETWEEN ((vt1.c0)) AND ((0x398dbfe7))) WHEN ((vt0.c0)AND(vt1.c0)) THEN (vt1.c0 IN ()) WHEN ((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c1) ISNULL) END  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c0)>>(vt0.c2)) AS REAL)) ORDER BY CASE NULL  WHEN (('613936962')*(vt1.c0)) THEN (((vt0.c2)) BETWEEN ((vt1.c0)) AND ((0x398dbfe7))) WHEN ((vt0.c0)AND(vt1.c0)) THEN (vt1.c0 IN ()) WHEN ((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c1) ISNULL) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (CAST((NOT (t1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (CAST((NOT (t1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (CAST((NOT (t1.c0)) AS BLOB));
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS INTEGER))|((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS INTEGER))|((t1.c0 IN ())))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS INTEGER))|((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS INTEGER))|((t1.c0 IN ())))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS INTEGER))|((t1.c0 IN ()))));
SELECT ALL * FROM t1, vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c2) ISNULL))<<(((((vt1.c0)AND(vt1.c0)))AND(t1.c0)))) WHERE (((0.7551816957305914) BETWEEN (vt0.c2 COLLATE BINARY) AND (((vt0.c2)AND(t1.c0))))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.7551816957305914) BETWEEN (vt0.c2 COLLATE BINARY) AND (((vt0.c2)AND(t1.c0))))) IS TRUE)  as count FROM t1, vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c2) ISNULL))<<(((((vt1.c0)AND(vt1.c0)))AND(t1.c0)))) ORDER BY vt1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c2) ISNULL))<<(((((vt1.c0)AND(vt1.c0)))AND(t1.c0)))) WHERE (((0.7551816957305914) BETWEEN (vt0.c2 COLLATE BINARY) AND (((vt0.c2)AND(t1.c0))))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.7551816957305914) BETWEEN (vt0.c2 COLLATE BINARY) AND (((vt0.c2)AND(t1.c0))))) IS TRUE)  as count FROM t1, vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c2) ISNULL))<<(((((vt1.c0)AND(vt1.c0)))AND(t1.c0)))) ORDER BY vt1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c2) ISNULL))<<(((((vt1.c0)AND(vt1.c0)))AND(t1.c0)))) WHERE (((0.7551816957305914) BETWEEN (vt0.c2 COLLATE BINARY) AND (((vt0.c2)AND(t1.c0))))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST(((t1.c0)|(t1.c0)) AS TEXT) RIGHT OUTER JOIN t1 ON (((- (vt0.c2))) BETWEEN (((vt1.c1) NOT BETWEEN (454623680) AND (x'dbe7'))) AND (((vt0.c0) NOT NULL))) WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CAST(((t1.c0)|(t1.c0)) AS TEXT) RIGHT OUTER JOIN t1 ON (((- (vt0.c2))) BETWEEN (((vt1.c1) NOT BETWEEN (454623680) AND (x'dbe7'))) AND (((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST(((t1.c0)|(t1.c0)) AS TEXT) RIGHT OUTER JOIN t1 ON (((- (vt0.c2))) BETWEEN (((vt1.c1) NOT BETWEEN (454623680) AND (x'dbe7'))) AND (((vt0.c0) NOT NULL))) WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CAST(((t1.c0)|(t1.c0)) AS TEXT) RIGHT OUTER JOIN t1 ON (((- (vt0.c2))) BETWEEN (((vt1.c1) NOT BETWEEN (454623680) AND (x'dbe7'))) AND (((vt0.c0) NOT NULL))));
SELECT ALL * FROM t1 WHERE (((COALESCE(t1.c0, t1.c0))<<(((t1.c0)&(t1.c0))))) ORDER BY CASE WHEN (t1.c0 IN ()) THEN t1.c0 COLLATE NOCASE ELSE t1.c0 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ((((COALESCE(t1.c0, t1.c0))<<(((t1.c0)&(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (t1.c0 IN ()) THEN t1.c0 COLLATE NOCASE ELSE t1.c0 COLLATE BINARY END);
SELECT ALL * FROM t1 WHERE (((COALESCE(t1.c0, t1.c0))<<(((t1.c0)&(t1.c0))))) ORDER BY CASE WHEN (t1.c0 IN ()) THEN t1.c0 COLLATE NOCASE ELSE t1.c0 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ((((COALESCE(t1.c0, t1.c0))<<(((t1.c0)&(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (t1.c0 IN ()) THEN t1.c0 COLLATE NOCASE ELSE t1.c0 COLLATE BINARY END);
SELECT ALL * FROM t1 WHERE (((COALESCE(t1.c0, t1.c0))<<(((t1.c0)&(t1.c0))))) ORDER BY CASE WHEN (t1.c0 IN ()) THEN t1.c0 COLLATE NOCASE ELSE t1.c0 COLLATE BINARY END;
SELECT * FROM t1, vt0, vt1 WHERE (vt1.c1) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE DESC  NULLS FIRST, ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c0))) IS FALSE)  NULLS FIRST, vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE DESC  NULLS FIRST, ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c0))) IS FALSE)  NULLS FIRST, vt1.c0 ASC);
SELECT * FROM t1, vt0, vt1 WHERE (vt1.c1) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE DESC  NULLS FIRST, ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c0))) IS FALSE)  NULLS FIRST, vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE DESC  NULLS FIRST, ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c0))) IS FALSE)  NULLS FIRST, vt1.c0 ASC);
SELECT * FROM t1, vt0, vt1 WHERE (vt1.c1) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE DESC  NULLS FIRST, ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c0))) IS FALSE)  NULLS FIRST, vt1.c0 ASC;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt1.c1) IS FALSE) COLLATE RTRIM WHERE ((- (vt0.c0 COLLATE RTRIM))) ORDER BY (((- (vt0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt1.c1) IS FALSE) COLLATE RTRIM ORDER BY (((- (vt0.c0))) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt1.c1) IS FALSE) COLLATE RTRIM WHERE ((- (vt0.c0 COLLATE RTRIM))) ORDER BY (((- (vt0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt1.c1) IS FALSE) COLLATE RTRIM ORDER BY (((- (vt0.c0))) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt1.c1) IS FALSE) COLLATE RTRIM WHERE ((- (vt0.c0 COLLATE RTRIM))) ORDER BY (((- (vt0.c0))) ISNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL))<>((vt1.c1 IN ())))) ORDER BY SQLITE_VERSION();
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL))<>((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_VERSION());
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL))<>((vt1.c1 IN ())))) ORDER BY SQLITE_VERSION();
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL))<>((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_VERSION());
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL))<>((vt1.c1 IN ())))) ORDER BY SQLITE_VERSION();
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (CAST(vt1.c1 AS NUMERIC)) ORDER BY (CASE vt1.c1  WHEN t1.c0 THEN t1.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS NUMERIC)) IS TRUE)  as count FROM t1, vt1 ORDER BY (CASE vt1.c1  WHEN t1.c0 THEN t1.c0 END IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (CAST(vt1.c1 AS NUMERIC)) ORDER BY (CASE vt1.c1  WHEN t1.c0 THEN t1.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS NUMERIC)) IS TRUE)  as count FROM t1, vt1 ORDER BY (CASE vt1.c1  WHEN t1.c0 THEN t1.c0 END IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (CAST(vt1.c1 AS NUMERIC)) ORDER BY (CASE vt1.c1  WHEN t1.c0 THEN t1.c0 END IN ())  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c0 IN ())) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (NULL))) AND (vt0.c1)) WHERE (0.5117589351288104);
SELECT SUM(count) FROM (SELECT ALL ((0.5117589351288104) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c0 IN ())) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (NULL))) AND (vt0.c1)));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c0 IN ())) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (NULL))) AND (vt0.c1)) WHERE (0.5117589351288104);
SELECT SUM(count) FROM (SELECT ALL ((0.5117589351288104) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c0 IN ())) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (NULL))) AND (vt0.c1)));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c0 IN ())) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (NULL))) AND (vt0.c1)) WHERE (0.5117589351288104);
SELECT COUNT(*) FROM vt0, vt1 WHERE (-2.39044433E8) ORDER BY IFNULL(DISTINCT 0X46bfd82a, vt1.c0 COLLATE BINARY)  NULLS FIRST, (((vt1.c1, vt1.c1, vt0.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)), ((((((((vt1.c0)AND('R6')))OR(vt1.c1)))OR(vt0.c0)))OR(vt0.c2)), (((vt1.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, -1.206740887E9))))) AND ((vt1.c1 COLLATE BINARY, vt0.c1, SQLITE_SOURCE_ID()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-2.39044433E8) IS TRUE)  as count FROM vt0, vt1 ORDER BY IFNULL(DISTINCT 0x46bfd82a, vt1.c0 COLLATE BINARY)  NULLS FIRST, (((vt1.c1, vt1.c1, vt0.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)), ((((((((vt1.c0)AND('R6')))OR(vt1.c1)))OR(vt0.c0)))OR(vt0.c2)), (((vt1.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, -1.206740887E9))))) AND ((vt1.c1 COLLATE BINARY, vt0.c1, SQLITE_SOURCE_ID()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (-2.39044433E8) ORDER BY IFNULL(DISTINCT 0X46bfd82a, vt1.c0 COLLATE BINARY)  NULLS FIRST, (((vt1.c1, vt1.c1, vt0.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)), ((((((((vt1.c0)AND('R6')))OR(vt1.c1)))OR(vt0.c0)))OR(vt0.c2)), (((vt1.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, -1.206740887E9))))) AND ((vt1.c1 COLLATE BINARY, vt0.c1, SQLITE_SOURCE_ID()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-2.39044433E8) IS TRUE)  as count FROM vt0, vt1 ORDER BY IFNULL(DISTINCT 0x46bfd82a, vt1.c0 COLLATE BINARY)  NULLS FIRST, (((vt1.c1, vt1.c1, vt0.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)), ((((((((vt1.c0)AND('R6')))OR(vt1.c1)))OR(vt0.c0)))OR(vt0.c2)), (((vt1.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, -1.206740887E9))))) AND ((vt1.c1 COLLATE BINARY, vt0.c1, SQLITE_SOURCE_ID()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (-2.39044433E8) ORDER BY IFNULL(DISTINCT 0X46bfd82a, vt1.c0 COLLATE BINARY)  NULLS FIRST, (((vt1.c1, vt1.c1, vt0.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)), ((((((((vt1.c0)AND('R6')))OR(vt1.c1)))OR(vt0.c0)))OR(vt0.c2)), (((vt1.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, -1.206740887E9))))) AND ((vt1.c1 COLLATE BINARY, vt0.c1, SQLITE_SOURCE_ID()))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((((((((t1.c0)LIKE(t1.c0)))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((t1.c0) NOT NULL))))OR(((t1.c0)+(t1.c0)))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY x''  NULLS LAST, ((t1.c0) NOT BETWEEN (t1.c0) AND (((t1.c0)>(t1.c0)))) DESC, (CAST(t1.c0 AS NUMERIC) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)LIKE(t1.c0)))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((t1.c0) NOT NULL))))OR(((t1.c0)+(t1.c0)))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY x''  NULLS LAST, ((t1.c0) NOT BETWEEN (t1.c0) AND (((t1.c0)>(t1.c0)))) DESC, (CAST(t1.c0 AS NUMERIC) IN ())  NULLS FIRST);
SELECT * FROM t1 WHERE (((((((((((t1.c0)LIKE(t1.c0)))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((t1.c0) NOT NULL))))OR(((t1.c0)+(t1.c0)))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY x''  NULLS LAST, ((t1.c0) NOT BETWEEN (t1.c0) AND (((t1.c0)>(t1.c0)))) DESC, (CAST(t1.c0 AS NUMERIC) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)LIKE(t1.c0)))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((t1.c0) NOT NULL))))OR(((t1.c0)+(t1.c0)))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY x''  NULLS LAST, ((t1.c0) NOT BETWEEN (t1.c0) AND (((t1.c0)>(t1.c0)))) DESC, (CAST(t1.c0 AS NUMERIC) IN ())  NULLS FIRST);
SELECT * FROM t1 WHERE (((((((((((t1.c0)LIKE(t1.c0)))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((t1.c0) NOT NULL))))OR(((t1.c0)+(t1.c0)))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY x''  NULLS LAST, ((t1.c0) NOT BETWEEN (t1.c0) AND (((t1.c0)>(t1.c0)))) DESC, (CAST(t1.c0 AS NUMERIC) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (CAST(vt1.c1 AS TEXT) IN ()) WHERE ((((((0x4242fd48 IN (NULL)))OR(HEX(vt1.c0))))AND(TRIM(vt0.c0, vt0.c1)))) ORDER BY (((vt1.c0, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c1 END, HEX(x'0d83')))<=((((vt1.c1)GLOB('')), ((vt0.c0)IS(vt1.c1)), CAST(vt1.c1 AS REAL)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((0X4242fd48 IN (NULL)))OR(HEX(vt1.c0))))AND(TRIM(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (CAST(vt1.c1 AS TEXT) IN ()) ORDER BY (((vt1.c0, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c1 END, HEX(x'0d83')))<=((((vt1.c1)GLOB('')), ((vt0.c0)IS(vt1.c1)), CAST(vt1.c1 AS REAL)))) ASC);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (CAST(vt1.c1 AS TEXT) IN ()) WHERE ((((((0x4242fd48 IN (NULL)))OR(HEX(vt1.c0))))AND(TRIM(vt0.c0, vt0.c1)))) ORDER BY (((vt1.c0, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c1 END, HEX(x'0d83')))<=((((vt1.c1)GLOB('')), ((vt0.c0)IS(vt1.c1)), CAST(vt1.c1 AS REAL)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((0X4242fd48 IN (NULL)))OR(HEX(vt1.c0))))AND(TRIM(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (CAST(vt1.c1 AS TEXT) IN ()) ORDER BY (((vt1.c0, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c1 END, HEX(x'0d83')))<=((((vt1.c1)GLOB('')), ((vt0.c0)IS(vt1.c1)), CAST(vt1.c1 AS REAL)))) ASC);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (CAST(vt1.c1 AS TEXT) IN ()) WHERE ((((((0x4242fd48 IN (NULL)))OR(HEX(vt1.c0))))AND(TRIM(vt0.c0, vt0.c1)))) ORDER BY (((vt1.c0, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c1 END, HEX(x'0d83')))<=((((vt1.c1)GLOB('')), ((vt0.c0)IS(vt1.c1)), CAST(vt1.c1 AS REAL)))) ASC;
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((- ((+ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((- ((+ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((- ((+ (vt1.c1)))));
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (0.5587359113358539) ORDER BY '-2006599851';
SELECT SUM(count) FROM (SELECT ALL ((0.5587359113358539) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY '-2006599851');
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (0.5587359113358539) ORDER BY '-2006599851';
SELECT SUM(count) FROM (SELECT ALL ((0.5587359113358539) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY '-2006599851');
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (0.5587359113358539) ORDER BY '-2006599851';
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CASE (NOT (vt0.c1))  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (- (t1.c0)) WHEN CAST(vt1.c1 AS INTEGER) THEN LIKE(t1.c0, vt0.c1, 'h') WHEN (NOT (vt0.c2)) THEN ((vt1.c0)IS NOT(vt1.c0)) ELSE (((vt0.c1)) NOT BETWEEN ((0.967430850311047)) AND ((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c1))  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (- (t1.c0)) WHEN CAST(vt1.c1 AS INTEGER) THEN LIKE(t1.c0, vt0.c1, 'h') WHEN (NOT (vt0.c2)) THEN ((vt1.c0)IS NOT(vt1.c0)) ELSE (((vt0.c1)) NOT BETWEEN ((0.967430850311047)) AND ((vt1.c0))) END) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CASE (NOT (vt0.c1))  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (- (t1.c0)) WHEN CAST(vt1.c1 AS INTEGER) THEN LIKE(t1.c0, vt0.c1, 'h') WHEN (NOT (vt0.c2)) THEN ((vt1.c0)IS NOT(vt1.c0)) ELSE (((vt0.c1)) NOT BETWEEN ((0.967430850311047)) AND ((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c1))  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (- (t1.c0)) WHEN CAST(vt1.c1 AS INTEGER) THEN LIKE(t1.c0, vt0.c1, 'h') WHEN (NOT (vt0.c2)) THEN ((vt1.c0)IS NOT(vt1.c0)) ELSE (((vt0.c1)) NOT BETWEEN ((0.967430850311047)) AND ((vt1.c0))) END) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CASE (NOT (vt0.c1))  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (- (t1.c0)) WHEN CAST(vt1.c1 AS INTEGER) THEN LIKE(t1.c0, vt0.c1, 'h') WHEN (NOT (vt0.c2)) THEN ((vt1.c0)IS NOT(vt1.c0)) ELSE (((vt0.c1)) NOT BETWEEN ((0.967430850311047)) AND ((vt1.c0))) END);
SELECT ALL * FROM vt0, t1, vt1 WHERE (((((vt1.c0)OR(((vt0.c2)<<(vt1.c0)))))AND(((t1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(((vt0.c2)<<(vt1.c0)))))AND(((t1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE (((((vt1.c0)OR(((vt0.c2)<<(vt1.c0)))))AND(((t1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(((vt0.c2)<<(vt1.c0)))))AND(((t1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE (((((vt1.c0)OR(((vt0.c2)<<(vt1.c0)))))AND(((t1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)))));
SELECT * FROM t1, vt1 WHERE (CASE WHEN '1546456017' THEN (NOT (0Xffffffff872dceaa)) WHEN vt1.c1 COLLATE NOCASE THEN (('-845431176')<>(vt1.c0)) WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c0))) END) ORDER BY ((((((((((t1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))AND((+ (vt1.c1)))))OR('k*P')))OR((NOT (vt1.c1)))))AND(t1.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '1546456017' THEN (NOT (0Xffffffff872dceaa)) WHEN vt1.c1 COLLATE NOCASE THEN (('-845431176')<>(vt1.c0)) WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c0))) END) IS TRUE)  as count FROM t1, vt1 ORDER BY ((((((((((t1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))AND((+ (vt1.c1)))))OR('k*P')))OR((NOT (vt1.c1)))))AND(t1.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT * FROM t1, vt1 WHERE (CASE WHEN '1546456017' THEN (NOT (0Xffffffff872dceaa)) WHEN vt1.c1 COLLATE NOCASE THEN (('-845431176')<>(vt1.c0)) WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c0))) END) ORDER BY ((((((((((t1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))AND((+ (vt1.c1)))))OR('k*P')))OR((NOT (vt1.c1)))))AND(t1.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '1546456017' THEN (NOT (0Xffffffff872dceaa)) WHEN vt1.c1 COLLATE NOCASE THEN (('-845431176')<>(vt1.c0)) WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c0))) END) IS TRUE)  as count FROM t1, vt1 ORDER BY ((((((((((t1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))AND((+ (vt1.c1)))))OR('k*P')))OR((NOT (vt1.c1)))))AND(t1.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT * FROM t1, vt1 WHERE (CASE WHEN '1546456017' THEN (NOT (0Xffffffff872dceaa)) WHEN vt1.c1 COLLATE NOCASE THEN (('-845431176')<>(vt1.c0)) WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c0))) END) ORDER BY ((((((((((t1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))AND((+ (vt1.c1)))))OR('k*P')))OR((NOT (vt1.c1)))))AND(t1.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((~ ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((~ ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((~ ((+ (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (NULLIF(DISTINCT (~ (vt0.c0)), CAST(t1.c0 AS REAL))) ORDER BY CASE WHEN (((2.086323E7)) BETWEEN ((vt1.c0)) AND ((vt0.c2))) THEN (vt1.c0 IN ()) ELSE t1.c0 END ASC;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (~ (vt0.c0)), CAST(t1.c0 AS REAL))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CASE WHEN (((2.086323E7)) BETWEEN ((vt1.c0)) AND ((vt0.c2))) THEN (vt1.c0 IN ()) ELSE t1.c0 END ASC);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (NULLIF(DISTINCT (~ (vt0.c0)), CAST(t1.c0 AS REAL))) ORDER BY CASE WHEN (((2.086323E7)) BETWEEN ((vt1.c0)) AND ((vt0.c2))) THEN (vt1.c0 IN ()) ELSE t1.c0 END ASC;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (~ (vt0.c0)), CAST(t1.c0 AS REAL))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CASE WHEN (((2.086323E7)) BETWEEN ((vt1.c0)) AND ((vt0.c2))) THEN (vt1.c0 IN ()) ELSE t1.c0 END ASC);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (NULLIF(DISTINCT (~ (vt0.c0)), CAST(t1.c0 AS REAL))) ORDER BY CASE WHEN (((2.086323E7)) BETWEEN ((vt1.c0)) AND ((vt0.c2))) THEN (vt1.c0 IN ()) ELSE t1.c0 END ASC;
SELECT COUNT(*) FROM t1, vt1 WHERE (LIKELIHOOD(((t1.c0) ISNULL), 0.08036522259643253)) ORDER BY vt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((t1.c0) ISNULL), 0.08036522259643253)) IS TRUE)  as count FROM t1, vt1 ORDER BY vt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt1 WHERE (LIKELIHOOD(((t1.c0) ISNULL), 0.08036522259643253)) ORDER BY vt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((t1.c0) ISNULL), 0.08036522259643253)) IS TRUE)  as count FROM t1, vt1 ORDER BY vt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt1 WHERE (LIKELIHOOD(((t1.c0) ISNULL), 0.08036522259643253)) ORDER BY vt1.c1  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c2))) BETWEEN (vt0.c1 COLLATE NOCASE) AND ((((vt0.c0))=((vt0.c2)))))) ORDER BY x'461e'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c2))) BETWEEN (vt0.c1 COLLATE NOCASE) AND ((((vt0.c0))=((vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY x'461e'  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c2))) BETWEEN (vt0.c1 COLLATE NOCASE) AND ((((vt0.c0))=((vt0.c2)))))) ORDER BY x'461e'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c2))) BETWEEN (vt0.c1 COLLATE NOCASE) AND ((((vt0.c0))=((vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY x'461e'  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c2))) BETWEEN (vt0.c1 COLLATE NOCASE) AND ((((vt0.c0))=((vt0.c2)))))) ORDER BY x'461e'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((((((((((((((vt0.c1)OR(0.8898934816988366)))OR(vt0.c0)))OR(t1.c0)))OR(t1.c0)))AND(vt0.c0)))OR(vt0.c2)))OR('-502592279' COLLATE NOCASE)))AND(CASE vt0.c1  WHEN t1.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((vt0.c1)OR(0.8898934816988366)))OR(vt0.c0)))OR(t1.c0)))OR(t1.c0)))AND(vt0.c0)))OR(vt0.c2)))OR('-502592279' COLLATE NOCASE)))AND(CASE vt0.c1  WHEN t1.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((((((((((((((vt0.c1)OR(0.8898934816988366)))OR(vt0.c0)))OR(t1.c0)))OR(t1.c0)))AND(vt0.c0)))OR(vt0.c2)))OR('-502592279' COLLATE NOCASE)))AND(CASE vt0.c1  WHEN t1.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((vt0.c1)OR(0.8898934816988366)))OR(vt0.c0)))OR(t1.c0)))OR(t1.c0)))AND(vt0.c0)))OR(vt0.c2)))OR('-502592279' COLLATE NOCASE)))AND(CASE vt0.c1  WHEN t1.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((((((((((((((vt0.c1)OR(0.8898934816988366)))OR(vt0.c0)))OR(t1.c0)))OR(t1.c0)))AND(vt0.c0)))OR(vt0.c2)))OR('-502592279' COLLATE NOCASE)))AND(CASE vt0.c1  WHEN t1.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END)));
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (CASE WHEN '-239044433' COLLATE RTRIM THEN 1.455279887E9 WHEN (vt0.c1 IN ()) THEN (vt0.c1 IN (vt0.c2, vt1.c0)) WHEN ((vt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c0)OR(t1.c0)) END) ORDER BY CASE WHEN CAST(t1.c0 AS NUMERIC) THEN vt0.c0 COLLATE BINARY END  NULLS FIRST, ((NULL) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '-239044433' COLLATE RTRIM THEN 1.455279887E9 WHEN (vt0.c1 IN ()) THEN (vt0.c1 IN (vt0.c2, vt1.c0)) WHEN ((vt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c0)OR(t1.c0)) END) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY CASE WHEN CAST(t1.c0 AS NUMERIC) THEN vt0.c0 COLLATE BINARY END  NULLS FIRST, ((NULL) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (CASE WHEN '-239044433' COLLATE RTRIM THEN 1.455279887E9 WHEN (vt0.c1 IN ()) THEN (vt0.c1 IN (vt0.c2, vt1.c0)) WHEN ((vt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c0)OR(t1.c0)) END) ORDER BY CASE WHEN CAST(t1.c0 AS NUMERIC) THEN vt0.c0 COLLATE BINARY END  NULLS FIRST, ((NULL) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '-239044433' COLLATE RTRIM THEN 1.455279887E9 WHEN (vt0.c1 IN ()) THEN (vt0.c1 IN (vt0.c2, vt1.c0)) WHEN ((vt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c0)OR(t1.c0)) END) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY CASE WHEN CAST(t1.c0 AS NUMERIC) THEN vt0.c0 COLLATE BINARY END  NULLS FIRST, ((NULL) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (CASE WHEN '-239044433' COLLATE RTRIM THEN 1.455279887E9 WHEN (vt0.c1 IN ()) THEN (vt0.c1 IN (vt0.c2, vt1.c0)) WHEN ((vt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c0)OR(t1.c0)) END) ORDER BY CASE WHEN CAST(t1.c0 AS NUMERIC) THEN vt0.c0 COLLATE BINARY END  NULLS FIRST, ((NULL) NOTNULL) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (NULL);
SELECT ALL * FROM vt0 WHERE (((vt0.c2)&(vt0.c0)) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (x'')))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST, ((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN ((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((0Xffffffffb8129869, vt0.c0, vt0.c1)))) AND ((('?')%(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c2)&(vt0.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (x'')))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST, ((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN ((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((0xffffffffb8129869, vt0.c0, vt0.c1)))) AND ((('?')%(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c2)&(vt0.c0)) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (x'')))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST, ((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN ((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((0Xffffffffb8129869, vt0.c0, vt0.c1)))) AND ((('?')%(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c2)&(vt0.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (x'')))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST, ((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN ((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((0xffffffffb8129869, vt0.c0, vt0.c1)))) AND ((('?')%(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c2)&(vt0.c0)) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (x'')))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST, ((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN ((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((0Xffffffffb8129869, vt0.c0, vt0.c1)))) AND ((('?')%(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((((vt1.c0) BETWEEN (vt1.c0) AND (0.004479499958922051)))AND((vt1.c1 IN ()))))OR(IFNULL(DISTINCT vt1.c0, vt1.c0))))OR(vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))))OR(CAST(vt1.c0 AS REAL))))OR(vt1.c1))) ORDER BY ((NULL) BETWEEN (vt1.c1 COLLATE BINARY) AND (((vt1.c0) BETWEEN ('') AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0) BETWEEN (vt1.c0) AND (0.004479499958922051)))AND((vt1.c1 IN ()))))OR(IFNULL(DISTINCT vt1.c0, vt1.c0))))OR(vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))))OR(CAST(vt1.c0 AS REAL))))OR(vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY ((NULL) BETWEEN (vt1.c1 COLLATE BINARY) AND (((vt1.c0) BETWEEN ('') AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((((vt1.c0) BETWEEN (vt1.c0) AND (0.004479499958922051)))AND((vt1.c1 IN ()))))OR(IFNULL(DISTINCT vt1.c0, vt1.c0))))OR(vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))))OR(CAST(vt1.c0 AS REAL))))OR(vt1.c1))) ORDER BY ((NULL) BETWEEN (vt1.c1 COLLATE BINARY) AND (((vt1.c0) BETWEEN ('') AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0) BETWEEN (vt1.c0) AND (0.004479499958922051)))AND((vt1.c1 IN ()))))OR(IFNULL(DISTINCT vt1.c0, vt1.c0))))OR(vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))))OR(CAST(vt1.c0 AS REAL))))OR(vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY ((NULL) BETWEEN (vt1.c1 COLLATE BINARY) AND (((vt1.c0) BETWEEN ('') AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((((vt1.c0) BETWEEN (vt1.c0) AND (0.004479499958922051)))AND((vt1.c1 IN ()))))OR(IFNULL(DISTINCT vt1.c0, vt1.c0))))OR(vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))))OR(CAST(vt1.c0 AS REAL))))OR(vt1.c1))) ORDER BY ((NULL) BETWEEN (vt1.c1 COLLATE BINARY) AND (((vt1.c0) BETWEEN ('') AND (vt1.c0))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((CAST(t1.c0 AS INTEGER))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((x''))))) CROSS JOIN t1 ON vt1.c1 COLLATE RTRIM WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((CAST(t1.c0 AS INTEGER))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((x''))))) CROSS JOIN t1 ON vt1.c1 COLLATE RTRIM);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((CAST(t1.c0 AS INTEGER))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((x''))))) CROSS JOIN t1 ON vt1.c1 COLLATE RTRIM WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((CAST(t1.c0 AS INTEGER))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((x''))))) CROSS JOIN t1 ON vt1.c1 COLLATE RTRIM);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((CAST(t1.c0 AS INTEGER))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((x''))))) CROSS JOIN t1 ON vt1.c1 COLLATE RTRIM WHERE (x'');
SELECT COUNT(*) FROM t1, vt1 WHERE (((CASE vt1.c1  WHEN x'' THEN vt1.c0 ELSE vt1.c1 END) BETWEEN ((- (vt1.c1))) AND (((vt1.c0)<=(vt1.c0))))) ORDER BY (((((vt1.c0, vt1.c0, t1.c0))!=((vt1.c0, vt1.c0, vt1.c1))))AND(CASE vt1.c0  WHEN '{傁hMQK' THEN t1.c0 END)) DESC, ((((vt1.c1)AND(vt1.c1))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c1  WHEN x'' THEN vt1.c0 ELSE vt1.c1 END) BETWEEN ((- (vt1.c1))) AND (((vt1.c0)<=(vt1.c0))))) IS TRUE)  as count FROM t1, vt1 ORDER BY (((((vt1.c0, vt1.c0, t1.c0))!=((vt1.c0, vt1.c0, vt1.c1))))AND(CASE vt1.c0  WHEN '{傁hMQK' THEN t1.c0 END)) DESC, ((((vt1.c1)AND(vt1.c1))) IS FALSE) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1 WHERE (((CASE vt1.c1  WHEN x'' THEN vt1.c0 ELSE vt1.c1 END) BETWEEN ((- (vt1.c1))) AND (((vt1.c0)<=(vt1.c0))))) ORDER BY (((((vt1.c0, vt1.c0, t1.c0))!=((vt1.c0, vt1.c0, vt1.c1))))AND(CASE vt1.c0  WHEN '{傁hMQK' THEN t1.c0 END)) DESC, ((((vt1.c1)AND(vt1.c1))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c1  WHEN x'' THEN vt1.c0 ELSE vt1.c1 END) BETWEEN ((- (vt1.c1))) AND (((vt1.c0)<=(vt1.c0))))) IS TRUE)  as count FROM t1, vt1 ORDER BY (((((vt1.c0, vt1.c0, t1.c0))!=((vt1.c0, vt1.c0, vt1.c1))))AND(CASE vt1.c0  WHEN '{傁hMQK' THEN t1.c0 END)) DESC, ((((vt1.c1)AND(vt1.c1))) IS FALSE) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1 WHERE (((CASE vt1.c1  WHEN x'' THEN vt1.c0 ELSE vt1.c1 END) BETWEEN ((- (vt1.c1))) AND (((vt1.c0)<=(vt1.c0))))) ORDER BY (((((vt1.c0, vt1.c0, t1.c0))!=((vt1.c0, vt1.c0, vt1.c1))))AND(CASE vt1.c0  WHEN '{傁hMQK' THEN t1.c0 END)) DESC, ((((vt1.c1)AND(vt1.c1))) IS FALSE) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON vt1.c1 WHERE ((((vt0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt1.c1);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON vt1.c1 WHERE ((((vt0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt1.c1);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON vt1.c1 WHERE ((((vt0.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c2)|(vt0.c2)) IN (((vt0.c2)<(vt0.c2)), ((vt0.c0)AND(vt0.c2)))) WHERE ((((((vt0.c0))!=((vt0.c1))))*(((vt0.c0)>>(vt0.c1))))) ORDER BY ((vt1.c1)<<(-646149582)) COLLATE RTRIM ASC, ((((vt0.c1) NOTNULL)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))!=((vt0.c1))))*(((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c2)|(vt0.c2)) IN (((vt0.c2)<(vt0.c2)), ((vt0.c0)AND(vt0.c2)))) ORDER BY ((vt1.c1)<<(-646149582)) COLLATE RTRIM ASC, ((((vt0.c1) NOTNULL)) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c2)|(vt0.c2)) IN (((vt0.c2)<(vt0.c2)), ((vt0.c0)AND(vt0.c2)))) WHERE ((((((vt0.c0))!=((vt0.c1))))*(((vt0.c0)>>(vt0.c1))))) ORDER BY ((vt1.c1)<<(-646149582)) COLLATE RTRIM ASC, ((((vt0.c1) NOTNULL)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))!=((vt0.c1))))*(((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c2)|(vt0.c2)) IN (((vt0.c2)<(vt0.c2)), ((vt0.c0)AND(vt0.c2)))) ORDER BY ((vt1.c1)<<(-646149582)) COLLATE RTRIM ASC, ((((vt0.c1) NOTNULL)) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c2)|(vt0.c2)) IN (((vt0.c2)<(vt0.c2)), ((vt0.c0)AND(vt0.c2)))) WHERE ((((((vt0.c0))!=((vt0.c1))))*(((vt0.c0)>>(vt0.c1))))) ORDER BY ((vt1.c1)<<(-646149582)) COLLATE RTRIM ASC, ((((vt0.c1) NOTNULL)) NOT NULL) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((~ ((((t1.c0, '5.', t1.c0))=((t1.c0, x'', t1.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((t1.c0, '5.', t1.c0))==((t1.c0, x'', t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((~ ((((t1.c0, '5.', t1.c0))=((t1.c0, x'', t1.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((t1.c0, '5.', t1.c0))==((t1.c0, x'', t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((~ ((((t1.c0, '5.', t1.c0))=((t1.c0, x'', t1.c0))))));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CASE WHEN ABS(DISTINCT vt1.c1) THEN CAST(t1.c0 AS NUMERIC) WHEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c1 END THEN vt1.c0 WHEN ((vt1.c1)>=(vt1.c0)) THEN (NOT (vt0.c1)) END) ORDER BY ((((vt0.c1) BETWEEN ('-397411450') AND (-954578279))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c1)<<(vt1.c1)))), ((((((((LOWER(DISTINCT vt1.c0))OR(((vt0.c2) BETWEEN (vt0.c1) AND (t1.c0)))))OR((vt1.c1 IN ()))))AND(NULL COLLATE NOCASE)))OR(x'b971'))  NULLS LAST, CASE WHEN (t1.c0 IN ()) THEN ((vt1.c0)+(vt1.c1)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)AND('y빸')) WHEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c1 END THEN x'' COLLATE RTRIM ELSE NULL END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(DISTINCT vt1.c1) THEN CAST(t1.c0 AS NUMERIC) WHEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c1 END THEN vt1.c0 WHEN ((vt1.c1)>=(vt1.c0)) THEN (NOT (vt0.c1)) END) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((vt0.c1) BETWEEN ('-397411450') AND (-954578279))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c1)<<(vt1.c1)))), ((((((((LOWER(DISTINCT vt1.c0))OR(((vt0.c2) BETWEEN (vt0.c1) AND (t1.c0)))))OR((vt1.c1 IN ()))))AND(NULL COLLATE NOCASE)))OR(x'b971'))  NULLS LAST, CASE WHEN (t1.c0 IN ()) THEN ((vt1.c0)+(vt1.c1)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)AND('y빸')) WHEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c1 END THEN x'' COLLATE RTRIM ELSE NULL END);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CASE WHEN ABS(DISTINCT vt1.c1) THEN CAST(t1.c0 AS NUMERIC) WHEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c1 END THEN vt1.c0 WHEN ((vt1.c1)>=(vt1.c0)) THEN (NOT (vt0.c1)) END) ORDER BY ((((vt0.c1) BETWEEN ('-397411450') AND (-954578279))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c1)<<(vt1.c1)))), ((((((((LOWER(DISTINCT vt1.c0))OR(((vt0.c2) BETWEEN (vt0.c1) AND (t1.c0)))))OR((vt1.c1 IN ()))))AND(NULL COLLATE NOCASE)))OR(x'b971'))  NULLS LAST, CASE WHEN (t1.c0 IN ()) THEN ((vt1.c0)+(vt1.c1)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)AND('y빸')) WHEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c1 END THEN x'' COLLATE RTRIM ELSE NULL END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(DISTINCT vt1.c1) THEN CAST(t1.c0 AS NUMERIC) WHEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c1 END THEN vt1.c0 WHEN ((vt1.c1)>=(vt1.c0)) THEN (NOT (vt0.c1)) END) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((vt0.c1) BETWEEN ('-397411450') AND (-954578279))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c1)<<(vt1.c1)))), ((((((((LOWER(DISTINCT vt1.c0))OR(((vt0.c2) BETWEEN (vt0.c1) AND (t1.c0)))))OR((vt1.c1 IN ()))))AND(NULL COLLATE NOCASE)))OR(x'b971'))  NULLS LAST, CASE WHEN (t1.c0 IN ()) THEN ((vt1.c0)+(vt1.c1)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)AND('y빸')) WHEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c1 END THEN x'' COLLATE RTRIM ELSE NULL END);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CASE WHEN ABS(DISTINCT vt1.c1) THEN CAST(t1.c0 AS NUMERIC) WHEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c1 END THEN vt1.c0 WHEN ((vt1.c1)>=(vt1.c0)) THEN (NOT (vt0.c1)) END) ORDER BY ((((vt0.c1) BETWEEN ('-397411450') AND (-954578279))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c1)<<(vt1.c1)))), ((((((((LOWER(DISTINCT vt1.c0))OR(((vt0.c2) BETWEEN (vt0.c1) AND (t1.c0)))))OR((vt1.c1 IN ()))))AND(NULL COLLATE NOCASE)))OR(x'b971'))  NULLS LAST, CASE WHEN (t1.c0 IN ()) THEN ((vt1.c0)+(vt1.c1)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)AND('y빸')) WHEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c1 END THEN x'' COLLATE RTRIM ELSE NULL END;
SELECT * FROM vt1 WHERE (NULLIF(DISTINCT CAST(vt1.c1 AS NUMERIC), RTRIM(0.8228241913934853))) ORDER BY ((vt1.c1)GLOB((NOT (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CAST(vt1.c1 AS NUMERIC), RTRIM(0.8228241913934853))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1)GLOB((NOT (vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE (NULLIF(DISTINCT CAST(vt1.c1 AS NUMERIC), RTRIM(0.8228241913934853))) ORDER BY ((vt1.c1)GLOB((NOT (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CAST(vt1.c1 AS NUMERIC), RTRIM(0.8228241913934853))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1)GLOB((NOT (vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE (NULLIF(DISTINCT CAST(vt1.c1 AS NUMERIC), RTRIM(0.8228241913934853))) ORDER BY ((vt1.c1)GLOB((NOT (vt1.c0)))) ASC;
SELECT COUNT(*) FROM t1 NOT INDEXED, vt1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1 NOT INDEXED, vt1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1 NOT INDEXED, vt1, vt0 WHERE (vt0.c1);
SELECT * FROM vt1, t1, vt0 WHERE (((LTRIM(vt0.c2, vt1.c1)) IS FALSE)) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN CAST(vt1.c1 AS BLOB) THEN (((vt0.c2))=((vt0.c0))) WHEN vt1.c1 THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c2))) WHEN t1.c0 COLLATE BINARY THEN ((-1.052599842E9) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt1.c0)>=(vt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c2, vt1.c1)) IS FALSE)) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN CAST(vt1.c1 AS BLOB) THEN (((vt0.c2))==((vt0.c0))) WHEN vt1.c1 THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c2))) WHEN t1.c0 COLLATE BINARY THEN ((-1.052599842E9) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt1.c0)>=(vt1.c1)) END DESC);
SELECT * FROM vt1, t1, vt0 WHERE (((LTRIM(vt0.c2, vt1.c1)) IS FALSE)) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN CAST(vt1.c1 AS BLOB) THEN (((vt0.c2))=((vt0.c0))) WHEN vt1.c1 THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c2))) WHEN t1.c0 COLLATE BINARY THEN ((-1.052599842E9) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt1.c0)>=(vt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c2, vt1.c1)) IS FALSE)) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN CAST(vt1.c1 AS BLOB) THEN (((vt0.c2))==((vt0.c0))) WHEN vt1.c1 THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c2))) WHEN t1.c0 COLLATE BINARY THEN ((-1.052599842E9) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt1.c0)>=(vt1.c1)) END DESC);
SELECT * FROM vt1, t1, vt0 WHERE (((LTRIM(vt0.c2, vt1.c1)) IS FALSE)) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN CAST(vt1.c1 AS BLOB) THEN (((vt0.c2))=((vt0.c0))) WHEN vt1.c1 THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c2))) WHEN t1.c0 COLLATE BINARY THEN ((-1.052599842E9) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt1.c0)>=(vt1.c1)) END DESC;
SELECT * FROM vt0 WHERE ((- (vt0.c1))) ORDER BY (- (((vt0.c1) NOTNULL))), ((((((vt0.c1) BETWEEN (0X34cc10a) AND (vt0.c2)))AND(vt0.c2)))AND(((1.7976931348623157E308)||(vt0.c0)))) ASC, TRIM(((vt0.c1)%('QnPmcd')), ((x'')OR(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c1) NOTNULL))), ((((((vt0.c1) BETWEEN (0x34cc10a) AND (vt0.c2)))AND(vt0.c2)))AND(((1.7976931348623157E308)||(vt0.c0)))) ASC, TRIM(((vt0.c1)%('QnPmcd')), ((x'')OR(vt0.c0)))  NULLS LAST);
SELECT * FROM vt0 WHERE ((- (vt0.c1))) ORDER BY (- (((vt0.c1) NOTNULL))), ((((((vt0.c1) BETWEEN (0X34cc10a) AND (vt0.c2)))AND(vt0.c2)))AND(((1.7976931348623157E308)||(vt0.c0)))) ASC, TRIM(((vt0.c1)%('QnPmcd')), ((x'')OR(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c1) NOTNULL))), ((((((vt0.c1) BETWEEN (0x34cc10a) AND (vt0.c2)))AND(vt0.c2)))AND(((1.7976931348623157E308)||(vt0.c0)))) ASC, TRIM(((vt0.c1)%('QnPmcd')), ((x'')OR(vt0.c0)))  NULLS LAST);
SELECT * FROM vt0 WHERE ((- (vt0.c1))) ORDER BY (- (((vt0.c1) NOTNULL))), ((((((vt0.c1) BETWEEN (0X34cc10a) AND (vt0.c2)))AND(vt0.c2)))AND(((1.7976931348623157E308)||(vt0.c0)))) ASC, TRIM(((vt0.c1)%('QnPmcd')), ((x'')OR(vt0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i98 RIGHT OUTER JOIN vt0 ON CAST((~ (vt0.c1)) AS TEXT) INNER JOIN t1 ON vt1.c0 WHERE (((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))AND(t1.c0)))AND(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))AND(t1.c0)))AND(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c1))) IS TRUE)  as count FROM vt1 INDEXED BY i98 RIGHT OUTER JOIN vt0 ON CAST((~ (vt0.c1)) AS TEXT) INNER JOIN t1 ON vt1.c0);
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i98 RIGHT OUTER JOIN vt0 ON CAST((~ (vt0.c1)) AS TEXT) INNER JOIN t1 ON vt1.c0 WHERE (((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))AND(t1.c0)))AND(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))AND(t1.c0)))AND(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c1))) IS TRUE)  as count FROM vt1 INDEXED BY i98 RIGHT OUTER JOIN vt0 ON CAST((~ (vt0.c1)) AS TEXT) INNER JOIN t1 ON vt1.c0);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((+ (((vt1.c0)IS(vt1.c1))))) ORDER BY CAST(CHAR(t1.c0) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)IS(vt1.c1))))) IS TRUE)  as count FROM vt1, t1 ORDER BY CAST(CHAR(t1.c0) AS REAL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((+ (((vt1.c0)IS(vt1.c1))))) ORDER BY CAST(CHAR(t1.c0) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)IS(vt1.c1))))) IS TRUE)  as count FROM vt1, t1 ORDER BY CAST(CHAR(t1.c0) AS REAL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((+ (((vt1.c0)IS(vt1.c1))))) ORDER BY CAST(CHAR(t1.c0) AS REAL) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS TRUE))OR(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))))OR(vt0.c0))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))OR(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS TRUE))OR(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))))OR(vt0.c0))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))OR(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS TRUE))OR(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))))OR(vt0.c0))) ORDER BY vt0.c1;
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (NULL) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (NULL) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (NULL) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT * FROM t1 WHERE (CASE WHEN '-880364873' COLLATE BINARY THEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) WHEN t1.c0 THEN (t1.c0 IN (t1.c0)) WHEN t1.c0 COLLATE NOCASE THEN (t1.c0 IN (0.4485457597898759)) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (x'6030250e')) THEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) WHEN CAST(t1.c0 AS REAL) THEN CASE WHEN t1.c0 THEN t1.c0 END ELSE (- (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '-880364873' COLLATE BINARY THEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) WHEN t1.c0 THEN (t1.c0 IN (t1.c0)) WHEN t1.c0 COLLATE NOCASE THEN (t1.c0 IN (0.4485457597898759)) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (x'6030250e')) THEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) WHEN CAST(t1.c0 AS REAL) THEN CASE WHEN t1.c0 THEN t1.c0 END ELSE (- (t1.c0)) END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE WHEN '-880364873' COLLATE BINARY THEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) WHEN t1.c0 THEN (t1.c0 IN (t1.c0)) WHEN t1.c0 COLLATE NOCASE THEN (t1.c0 IN (0.4485457597898759)) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (x'6030250e')) THEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) WHEN CAST(t1.c0 AS REAL) THEN CASE WHEN t1.c0 THEN t1.c0 END ELSE (- (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '-880364873' COLLATE BINARY THEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) WHEN t1.c0 THEN (t1.c0 IN (t1.c0)) WHEN t1.c0 COLLATE NOCASE THEN (t1.c0 IN (0.4485457597898759)) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (x'6030250e')) THEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) WHEN CAST(t1.c0 AS REAL) THEN CASE WHEN t1.c0 THEN t1.c0 END ELSE (- (t1.c0)) END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE WHEN '-880364873' COLLATE BINARY THEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) WHEN t1.c0 THEN (t1.c0 IN (t1.c0)) WHEN t1.c0 COLLATE NOCASE THEN (t1.c0 IN (0.4485457597898759)) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (x'6030250e')) THEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) WHEN CAST(t1.c0 AS REAL) THEN CASE WHEN t1.c0 THEN t1.c0 END ELSE (- (t1.c0)) END);
SELECT ALL * FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt0, t1 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt1.c1 END) NOT BETWEEN (((t1.c0) IS FALSE)) AND (vt1.c1)) WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c1) BETWEEN (vt1.c0) AND (t1.c0)))) AND ((CASE t1.c0  WHEN vt0.c1 THEN vt0.c2 END)))) ORDER BY vt1.c1 ASC, ((vt1.c0 COLLATE NOCASE)LIKE(CASE WHEN t1.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN t1.c0 END)) DESC, ((((x'')>=(vt1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((vt1.c1) BETWEEN (vt1.c0) AND (t1.c0)))) AND ((CASE t1.c0  WHEN vt0.c1 THEN vt0.c2 END)))) IS TRUE)  as count FROM vt0, t1 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt1.c1 END) NOT BETWEEN (((t1.c0) IS FALSE)) AND (vt1.c1)) ORDER BY vt1.c1 ASC, ((vt1.c0 COLLATE NOCASE)LIKE(CASE WHEN t1.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN t1.c0 END)) DESC, ((((x'')>=(vt1.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, t1 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt1.c1 END) NOT BETWEEN (((t1.c0) IS FALSE)) AND (vt1.c1)) WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c1) BETWEEN (vt1.c0) AND (t1.c0)))) AND ((CASE t1.c0  WHEN vt0.c1 THEN vt0.c2 END)))) ORDER BY vt1.c1 ASC, ((vt1.c0 COLLATE NOCASE)LIKE(CASE WHEN t1.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN t1.c0 END)) DESC, ((((x'')>=(vt1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((vt1.c1) BETWEEN (vt1.c0) AND (t1.c0)))) AND ((CASE t1.c0  WHEN vt0.c1 THEN vt0.c2 END)))) IS TRUE)  as count FROM vt0, t1 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt1.c1 END) NOT BETWEEN (((t1.c0) IS FALSE)) AND (vt1.c1)) ORDER BY vt1.c1 ASC, ((vt1.c0 COLLATE NOCASE)LIKE(CASE WHEN t1.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN t1.c0 END)) DESC, ((((x'')>=(vt1.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, t1 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt1.c1 END) NOT BETWEEN (((t1.c0) IS FALSE)) AND (vt1.c1)) WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c1) BETWEEN (vt1.c0) AND (t1.c0)))) AND ((CASE t1.c0  WHEN vt0.c1 THEN vt0.c2 END)))) ORDER BY vt1.c1 ASC, ((vt1.c0 COLLATE NOCASE)LIKE(CASE WHEN t1.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN t1.c0 END)) DESC, ((((x'')>=(vt1.c0))) IS FALSE);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t1 ON (((vt0.c2 IN ())) ISNULL) WHERE (vt0.c1) ORDER BY ((((vt0.c0) NOT BETWEEN (0.47605170848495826) AND (9.65591015E8))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t1 ON (((vt0.c2 IN ())) ISNULL) ORDER BY ((((vt0.c0) NOT BETWEEN (0.47605170848495826) AND (9.65591015E8))) NOTNULL) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t1 ON (((vt0.c2 IN ())) ISNULL) WHERE (vt0.c1) ORDER BY ((((vt0.c0) NOT BETWEEN (0.47605170848495826) AND (9.65591015E8))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t1 ON (((vt0.c2 IN ())) ISNULL) ORDER BY ((((vt0.c0) NOT BETWEEN (0.47605170848495826) AND (9.65591015E8))) NOTNULL) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t1 ON (((vt0.c2 IN ())) ISNULL) WHERE (vt0.c1) ORDER BY ((((vt0.c0) NOT BETWEEN (0.47605170848495826) AND (9.65591015E8))) NOTNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)OR(vt0.c2)))AND(vt1.c0)))OR(vt0.c2)))AND(vt0.c2)))) AND ((((vt1.c1) NOT BETWEEN (vt0.c2) AND (vt1.c1))))) WHERE ((vt0.c0 IN (vt0.c1)) COLLATE RTRIM) ORDER BY ((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt1.c1 END)<<(((0.03802979605565171)IS NOT(vt0.c1))))  NULLS FIRST, (0.5723073504608043 IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)OR(vt0.c2)))AND(vt1.c0)))OR(vt0.c2)))AND(vt0.c2)))) AND ((((vt1.c1) NOT BETWEEN (vt0.c2) AND (vt1.c1))))) ORDER BY ((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt1.c1 END)<<(((0.03802979605565171)IS NOT(vt0.c1))))  NULLS FIRST, (0.5723073504608043 IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)OR(vt0.c2)))AND(vt1.c0)))OR(vt0.c2)))AND(vt0.c2)))) AND ((((vt1.c1) NOT BETWEEN (vt0.c2) AND (vt1.c1))))) WHERE ((vt0.c0 IN (vt0.c1)) COLLATE RTRIM) ORDER BY ((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt1.c1 END)<<(((0.03802979605565171)IS NOT(vt0.c1))))  NULLS FIRST, (0.5723073504608043 IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)OR(vt0.c2)))AND(vt1.c0)))OR(vt0.c2)))AND(vt0.c2)))) AND ((((vt1.c1) NOT BETWEEN (vt0.c2) AND (vt1.c1))))) ORDER BY ((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt1.c1 END)<<(((0.03802979605565171)IS NOT(vt0.c1))))  NULLS FIRST, (0.5723073504608043 IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)OR(vt0.c2)))AND(vt1.c0)))OR(vt0.c2)))AND(vt0.c2)))) AND ((((vt1.c1) NOT BETWEEN (vt0.c2) AND (vt1.c1))))) WHERE ((vt0.c0 IN (vt0.c1)) COLLATE RTRIM) ORDER BY ((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt1.c1 END)<<(((0.03802979605565171)IS NOT(vt0.c1))))  NULLS FIRST, (0.5723073504608043 IN ()) ASC;
SELECT COUNT(*) FROM vt1, t1 WHERE ((((((t1.c0))>=(('>Ck')))) NOTNULL)) ORDER BY ((vt1.c0) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0))>=(('>Ck')))) NOTNULL)) IS TRUE)  as count FROM vt1, t1 ORDER BY ((vt1.c0) IS TRUE) ASC);
SELECT COUNT(*) FROM vt1, t1 WHERE ((((((t1.c0))>=(('>Ck')))) NOTNULL)) ORDER BY ((vt1.c0) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0))>=(('>Ck')))) NOTNULL)) IS TRUE)  as count FROM vt1, t1 ORDER BY ((vt1.c0) IS TRUE) ASC);
SELECT COUNT(*) FROM vt1, t1 WHERE ((((((t1.c0))>=(('>Ck')))) NOTNULL)) ORDER BY ((vt1.c0) IS TRUE) ASC;
SELECT ALL * FROM t1, vt1 WHERE (((((((t1.c0)AND(vt1.c1)))AND(vt1.c0)))>=(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)AND(vt1.c1)))AND(vt1.c0)))>=(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (((((((t1.c0)AND(vt1.c1)))AND(vt1.c0)))>=(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)AND(vt1.c1)))AND(vt1.c0)))>=(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (((((((t1.c0)AND(vt1.c1)))AND(vt1.c0)))>=(((vt1.c0) NOT NULL))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2)) BETWEEN (((vt0.c2 IN (x'')))) AND ((vt0.c0)))) ORDER BY (~ (((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN (((vt0.c2 IN (x'')))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2)) BETWEEN (((vt0.c2 IN (x'')))) AND ((vt0.c0)))) ORDER BY (~ (((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN (((vt0.c2 IN (x'')))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2)) BETWEEN (((vt0.c2 IN (x'')))) AND ((vt0.c0)))) ORDER BY (~ (((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))) ASC;
SELECT * FROM t1, vt0 WHERE ((((vt0.c2)) BETWEEN ((-820756354)) AND (((vt0.c0 IN ()))))) ORDER BY ((vt0.c0)/(((((((((((((vt0.c2)OR(vt0.c1)))AND(x'')))OR(vt0.c0)))OR(t1.c0)))AND(vt0.c1)))AND(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) BETWEEN ((-820756354)) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((vt0.c0)/(((((((((((((vt0.c2)OR(vt0.c1)))AND(x'')))OR(vt0.c0)))OR(t1.c0)))AND(vt0.c1)))AND(t1.c0)))));
SELECT * FROM t1, vt0 WHERE ((((vt0.c2)) BETWEEN ((-820756354)) AND (((vt0.c0 IN ()))))) ORDER BY ((vt0.c0)/(((((((((((((vt0.c2)OR(vt0.c1)))AND(x'')))OR(vt0.c0)))OR(t1.c0)))AND(vt0.c1)))AND(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) BETWEEN ((-820756354)) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((vt0.c0)/(((((((((((((vt0.c2)OR(vt0.c1)))AND(x'')))OR(vt0.c0)))OR(t1.c0)))AND(vt0.c1)))AND(t1.c0)))));
SELECT * FROM t1, vt0 WHERE ((((vt0.c2)) BETWEEN ((-820756354)) AND (((vt0.c0 IN ()))))) ORDER BY ((vt0.c0)/(((((((((((((vt0.c2)OR(vt0.c1)))AND(x'')))OR(vt0.c0)))OR(t1.c0)))AND(vt0.c1)))AND(t1.c0))));
SELECT * FROM vt0, vt1, t1 WHERE ((+ (((t1.c0) IS TRUE)))) ORDER BY CASE (NOT (vt1.c1))  WHEN ((vt1.c1) IS TRUE) THEN NULLIF(vt1.c0, vt0.c1) WHEN vt1.c0 THEN ((vt0.c2) NOT BETWEEN (9.65591015E8) AND (vt1.c1)) WHEN ((vt0.c1)||(vt1.c0)) THEN (+ (vt0.c0)) END  NULLS LAST, ((((vt1.c0) NOT NULL))=((0.7584157326794576 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY CASE (NOT (vt1.c1))  WHEN ((vt1.c1) IS TRUE) THEN NULLIF(vt1.c0, vt0.c1) WHEN vt1.c0 THEN ((vt0.c2) NOT BETWEEN (9.65591015E8) AND (vt1.c1)) WHEN ((vt0.c1)||(vt1.c0)) THEN (+ (vt0.c0)) END  NULLS LAST, ((((vt1.c0) NOT NULL))==((0.7584157326794576 IN ()))));
SELECT * FROM vt0, vt1, t1 WHERE ((+ (((t1.c0) IS TRUE)))) ORDER BY CASE (NOT (vt1.c1))  WHEN ((vt1.c1) IS TRUE) THEN NULLIF(vt1.c0, vt0.c1) WHEN vt1.c0 THEN ((vt0.c2) NOT BETWEEN (9.65591015E8) AND (vt1.c1)) WHEN ((vt0.c1)||(vt1.c0)) THEN (+ (vt0.c0)) END  NULLS LAST, ((((vt1.c0) NOT NULL))=((0.7584157326794576 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY CASE (NOT (vt1.c1))  WHEN ((vt1.c1) IS TRUE) THEN NULLIF(vt1.c0, vt0.c1) WHEN vt1.c0 THEN ((vt0.c2) NOT BETWEEN (9.65591015E8) AND (vt1.c1)) WHEN ((vt0.c1)||(vt1.c0)) THEN (+ (vt0.c0)) END  NULLS LAST, ((((vt1.c0) NOT NULL))==((0.7584157326794576 IN ()))));
SELECT * FROM vt0, vt1, t1 WHERE ((+ (((t1.c0) IS TRUE)))) ORDER BY CASE (NOT (vt1.c1))  WHEN ((vt1.c1) IS TRUE) THEN NULLIF(vt1.c0, vt0.c1) WHEN vt1.c0 THEN ((vt0.c2) NOT BETWEEN (9.65591015E8) AND (vt1.c1)) WHEN ((vt0.c1)||(vt1.c0)) THEN (+ (vt0.c0)) END  NULLS LAST, ((((vt1.c0) NOT NULL))=((0.7584157326794576 IN ())));
SELECT ALL * FROM t1 CROSS JOIN vt1 ON ((((((vt1.c1) ISNULL))AND((+ (t1.c0)))))OR(CAST(vt1.c1 AS TEXT))) WHERE (((t1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t1.c0 IN ()) IN ())) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON ((((((vt1.c1) ISNULL))AND((+ (t1.c0)))))OR(CAST(vt1.c1 AS TEXT))));
SELECT ALL * FROM t1 CROSS JOIN vt1 ON ((((((vt1.c1) ISNULL))AND((+ (t1.c0)))))OR(CAST(vt1.c1 AS TEXT))) WHERE (((t1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t1.c0 IN ()) IN ())) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON ((((((vt1.c1) ISNULL))AND((+ (t1.c0)))))OR(CAST(vt1.c1 AS TEXT))));
SELECT ALL * FROM t1 CROSS JOIN vt1 ON ((((((vt1.c1) ISNULL))AND((+ (t1.c0)))))OR(CAST(vt1.c1 AS TEXT))) WHERE (((t1.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (vt1.c0 COLLATE BINARY IN ('Oj')) LEFT OUTER JOIN vt1 ON -93339171 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c2) NOT BETWEEN (t1.c0) AND (vt0.c2)))) AND ((((((vt0.c2)AND(vt0.c0)))OR(vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((vt0.c2) NOT BETWEEN (t1.c0) AND (vt0.c2)))) AND ((((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (vt1.c0 COLLATE BINARY IN ('Oj')) LEFT OUTER JOIN vt1 ON -93339171);
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (vt1.c0 COLLATE BINARY IN ('Oj')) LEFT OUTER JOIN vt1 ON -93339171 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c2) NOT BETWEEN (t1.c0) AND (vt0.c2)))) AND ((((((vt0.c2)AND(vt0.c0)))OR(vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((vt0.c2) NOT BETWEEN (t1.c0) AND (vt0.c2)))) AND ((((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (vt1.c0 COLLATE BINARY IN ('Oj')) LEFT OUTER JOIN vt1 ON -93339171);
SELECT COUNT(*) FROM t1 WHERE (((LIKE(t1.c0, '4Xc2K', '-')) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((LIKE(t1.c0, '4Xc2K', '-')) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((LIKE(t1.c0, '4Xc2K', '-')) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((LIKE(t1.c0, '4Xc2K', '-')) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((LIKE(t1.c0, '4Xc2K', '-')) NOTNULL));
SELECT COUNT(*) FROM vt1, t1 WHERE (((CAST(t1.c0 AS TEXT))+(t1.c0 COLLATE RTRIM))) ORDER BY (~ ((NULL IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS TEXT))+(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t1 ORDER BY (~ ((NULL IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1 WHERE (((CAST(t1.c0 AS TEXT))+(t1.c0 COLLATE RTRIM))) ORDER BY (~ ((NULL IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS TEXT))+(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t1 ORDER BY (~ ((NULL IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1 WHERE (((CAST(t1.c0 AS TEXT))+(t1.c0 COLLATE RTRIM))) ORDER BY (~ ((NULL IN ()))) DESC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (CAST(vt0.c1 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(vt0.c1 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(vt0.c1 COLLATE RTRIM AS REAL));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((NULL) NOT BETWEEN (vt0.c2) AND (vt0.c0))) ISNULL) INNER JOIN t1 ON (((vt1.c1)) BETWEEN (((((('\\')AND(vt0.c2)))AND(t1.c0)))) AND ((((((((((((((vt1.c0)AND(t1.c0)))AND(vt0.c2)))AND(x'18c5')))OR(vt0.c1)))OR(t1.c0)))AND(vt0.c0))))) WHERE ((- (((vt0.c1)<=(vt1.c1))))) ORDER BY (((((vt1.c1))<((vt0.c2))))|(CASE 0.018033741119244717  WHEN x'337e' THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN t1.c0 THEN vt0.c2 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1)<=(vt1.c1))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((NULL) NOT BETWEEN (vt0.c2) AND (vt0.c0))) ISNULL) INNER JOIN t1 ON (((vt1.c1)) BETWEEN (((((('\\')AND(vt0.c2)))AND(t1.c0)))) AND ((((((((((((((vt1.c0)AND(t1.c0)))AND(vt0.c2)))AND(x'18c5')))OR(vt0.c1)))OR(t1.c0)))AND(vt0.c0))))) ORDER BY (((((vt1.c1))<((vt0.c2))))|(CASE 0.018033741119244717  WHEN x'337e' THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN t1.c0 THEN vt0.c2 ELSE vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((NULL) NOT BETWEEN (vt0.c2) AND (vt0.c0))) ISNULL) INNER JOIN t1 ON (((vt1.c1)) BETWEEN (((((('\\')AND(vt0.c2)))AND(t1.c0)))) AND ((((((((((((((vt1.c0)AND(t1.c0)))AND(vt0.c2)))AND(x'18c5')))OR(vt0.c1)))OR(t1.c0)))AND(vt0.c0))))) WHERE ((- (((vt0.c1)<=(vt1.c1))))) ORDER BY (((((vt1.c1))<((vt0.c2))))|(CASE 0.018033741119244717  WHEN x'337e' THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN t1.c0 THEN vt0.c2 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1)<=(vt1.c1))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((NULL) NOT BETWEEN (vt0.c2) AND (vt0.c0))) ISNULL) INNER JOIN t1 ON (((vt1.c1)) BETWEEN (((((('\\')AND(vt0.c2)))AND(t1.c0)))) AND ((((((((((((((vt1.c0)AND(t1.c0)))AND(vt0.c2)))AND(x'18c5')))OR(vt0.c1)))OR(t1.c0)))AND(vt0.c0))))) ORDER BY (((((vt1.c1))<((vt0.c2))))|(CASE 0.018033741119244717  WHEN x'337e' THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN t1.c0 THEN vt0.c2 ELSE vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((NULL) NOT BETWEEN (vt0.c2) AND (vt0.c0))) ISNULL) INNER JOIN t1 ON (((vt1.c1)) BETWEEN (((((('\\')AND(vt0.c2)))AND(t1.c0)))) AND ((((((((((((((vt1.c0)AND(t1.c0)))AND(vt0.c2)))AND(x'18c5')))OR(vt0.c1)))OR(t1.c0)))AND(vt0.c0))))) WHERE ((- (((vt0.c1)<=(vt1.c1))))) ORDER BY (((((vt1.c1))<((vt0.c2))))|(CASE 0.018033741119244717  WHEN x'337e' THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN t1.c0 THEN vt0.c2 ELSE vt0.c1 END));
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)%(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)%(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)%(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)%(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)%(vt1.c1)) IN ()));
SELECT * FROM vt0 WHERE ((~ ((vt0.c2 IN (vt0.c1, vt0.c2))))) ORDER BY ((((vt0.c0)>>(vt0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c2 IN (vt0.c1, vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>>(vt0.c0))) NOTNULL) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((~ ((vt0.c2 IN (vt0.c1, vt0.c2))))) ORDER BY ((((vt0.c0)>>(vt0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c2 IN (vt0.c1, vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>>(vt0.c0))) NOTNULL) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((~ ((vt0.c2 IN (vt0.c1, vt0.c2))))) ORDER BY ((((vt0.c0)>>(vt0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON ((((((((t1.c0 COLLATE RTRIM)OR(0.5793379457815881)))AND(LOWER(vt1.c1))))AND(CAST(vt1.c0 AS BLOB))))OR(((((vt1.c0)AND(t1.c0)))AND(x'')))) WHERE (CASE ((t1.c0)IS(vt1.c0))  WHEN ABS(DISTINCT t1.c0) THEN ((((vt1.c0)AND(vt1.c1)))OR(t1.c0)) ELSE CASE vt1.c0  WHEN vt1.c1 THEN NULL WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0)IS(vt1.c0))  WHEN ABS(DISTINCT t1.c0) THEN ((((vt1.c0)AND(vt1.c1)))OR(t1.c0)) ELSE CASE vt1.c0  WHEN vt1.c1 THEN NULL WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON ((((((((t1.c0 COLLATE RTRIM)OR(0.5793379457815881)))AND(LOWER(vt1.c1))))AND(CAST(vt1.c0 AS BLOB))))OR(((((vt1.c0)AND(t1.c0)))AND(x'')))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON ((((((((t1.c0 COLLATE RTRIM)OR(0.5793379457815881)))AND(LOWER(vt1.c1))))AND(CAST(vt1.c0 AS BLOB))))OR(((((vt1.c0)AND(t1.c0)))AND(x'')))) WHERE (CASE ((t1.c0)IS(vt1.c0))  WHEN ABS(DISTINCT t1.c0) THEN ((((vt1.c0)AND(vt1.c1)))OR(t1.c0)) ELSE CASE vt1.c0  WHEN vt1.c1 THEN NULL WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0)IS(vt1.c0))  WHEN ABS(DISTINCT t1.c0) THEN ((((vt1.c0)AND(vt1.c1)))OR(t1.c0)) ELSE CASE vt1.c0  WHEN vt1.c1 THEN NULL WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON ((((((((t1.c0 COLLATE RTRIM)OR(0.5793379457815881)))AND(LOWER(vt1.c1))))AND(CAST(vt1.c0 AS BLOB))))OR(((((vt1.c0)AND(t1.c0)))AND(x'')))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON ((((((((t1.c0 COLLATE RTRIM)OR(0.5793379457815881)))AND(LOWER(vt1.c1))))AND(CAST(vt1.c0 AS BLOB))))OR(((((vt1.c0)AND(t1.c0)))AND(x'')))) WHERE (CASE ((t1.c0)IS(vt1.c0))  WHEN ABS(DISTINCT t1.c0) THEN ((((vt1.c0)AND(vt1.c1)))OR(t1.c0)) ELSE CASE vt1.c0  WHEN vt1.c1 THEN NULL WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END);
SELECT * FROM vt0, vt1, t1 WHERE (((((vt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)))LIKE(vt1.c1))) ORDER BY vt1.c0  NULLS FIRST, ((((((((((((((t1.c0)OR(t1.c0)))OR(vt0.c0)))AND(x'54e9')))OR(vt1.c1)))AND(vt0.c1)))OR(t1.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)))LIKE(vt1.c1))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY vt1.c0  NULLS FIRST, ((((((((((((((t1.c0)OR(t1.c0)))OR(vt0.c0)))AND(x'54e9')))OR(vt1.c1)))AND(vt0.c1)))OR(t1.c0))) IS FALSE)  NULLS FIRST);
SELECT * FROM vt0, vt1, t1 WHERE (((((vt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)))LIKE(vt1.c1))) ORDER BY vt1.c0  NULLS FIRST, ((((((((((((((t1.c0)OR(t1.c0)))OR(vt0.c0)))AND(x'54e9')))OR(vt1.c1)))AND(vt0.c1)))OR(t1.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)))LIKE(vt1.c1))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY vt1.c0  NULLS FIRST, ((((((((((((((t1.c0)OR(t1.c0)))OR(vt0.c0)))AND(x'54e9')))OR(vt1.c1)))AND(vt0.c1)))OR(t1.c0))) IS FALSE)  NULLS FIRST);
SELECT * FROM vt0, vt1, t1 WHERE (((((vt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)))LIKE(vt1.c1))) ORDER BY vt1.c0  NULLS FIRST, ((((((((((((((t1.c0)OR(t1.c0)))OR(vt0.c0)))AND(x'54e9')))OR(vt1.c1)))AND(vt0.c1)))OR(t1.c0))) IS FALSE)  NULLS FIRST;
SELECT * FROM vt1, vt0, t1 WHERE (vt0.c2 COLLATE RTRIM COLLATE BINARY) ORDER BY (~ (x'')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2 COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (~ (x'')) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0, t1 WHERE (vt0.c2 COLLATE RTRIM COLLATE BINARY) ORDER BY (~ (x'')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2 COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (~ (x'')) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0, t1 WHERE (vt0.c2 COLLATE RTRIM COLLATE BINARY) ORDER BY (~ (x'')) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((((vt0.c0)) BETWEEN (('')) AND ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c2)))))) ORDER BY LIKELIHOOD((((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c2, vt1.c1, vt0.c0))), 0.8095784388778959)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (('')) AND ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c2)))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY LIKELIHOOD((((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c2, vt1.c1, vt0.c0))), 0.8095784388778959)  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((((vt0.c0)) BETWEEN (('')) AND ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c2)))))) ORDER BY LIKELIHOOD((((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c2, vt1.c1, vt0.c0))), 0.8095784388778959)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (('')) AND ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c2)))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY LIKELIHOOD((((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c2, vt1.c1, vt0.c0))), 0.8095784388778959)  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((((vt0.c0)) BETWEEN (('')) AND ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c2)))))) ORDER BY LIKELIHOOD((((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c2, vt1.c1, vt0.c0))), 0.8095784388778959)  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (JULIANDAY(vt1.c1, (+ (t1.c0)), CASE WHEN NULL THEN vt0.c1 ELSE '' END)) ORDER BY (((+ (vt0.c2)))<(vt0.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(vt1.c1, (+ (t1.c0)), CASE WHEN NULL THEN vt0.c1 ELSE '' END)) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY (((+ (vt0.c2)))<(vt0.c1 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (JULIANDAY(vt1.c1, (+ (t1.c0)), CASE WHEN NULL THEN vt0.c1 ELSE '' END)) ORDER BY (((+ (vt0.c2)))<(vt0.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(vt1.c1, (+ (t1.c0)), CASE WHEN NULL THEN vt0.c1 ELSE '' END)) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY (((+ (vt0.c2)))<(vt0.c1 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (JULIANDAY(vt1.c1, (+ (t1.c0)), CASE WHEN NULL THEN vt0.c1 ELSE '' END)) ORDER BY (((+ (vt0.c2)))<(vt0.c1 COLLATE NOCASE)) DESC;
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c0) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c0) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c0) NOT NULL)) ISNULL));
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c1))) IS FALSE)) ORDER BY ((vt1.c1)%(vt1.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1)%(vt1.c1)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c1))) IS FALSE)) ORDER BY ((vt1.c1)%(vt1.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1)%(vt1.c1)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c1))) IS FALSE)) ORDER BY ((vt1.c1)%(vt1.c1)) COLLATE RTRIM ASC;
SELECT ALL * FROM vt1, t1, vt0 NOT INDEXED WHERE (((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))IS NOT(UNLIKELY(t1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))IS NOT(UNLIKELY(t1.c0)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 NOT INDEXED WHERE (((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))IS NOT(UNLIKELY(t1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))IS NOT(UNLIKELY(t1.c0)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 NOT INDEXED WHERE (((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))IS NOT(UNLIKELY(t1.c0))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1))!=((vt1.c0))) IN ())) ORDER BY '0.967430850311047' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1))!=((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY '0.967430850311047' DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1))!=((vt1.c0))) IN ())) ORDER BY '0.967430850311047' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1))!=((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY '0.967430850311047' DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1))!=((vt1.c0))) IN ())) ORDER BY '0.967430850311047' DESC;
SELECT ALL * FROM vt1, vt0, t1 WHERE (((vt0.c1) ISNULL) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) ISNULL) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE (((vt0.c1) ISNULL) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) ISNULL) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE (((vt0.c1) ISNULL) COLLATE NOCASE COLLATE NOCASE);
SELECT * FROM vt0, vt1 WHERE ((((((vt1.c1))<>((vt0.c1))))AND((((vt0.c0))<=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1))<>((vt0.c1))))AND((((vt0.c0))<=((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((((vt1.c1))<>((vt0.c1))))AND((((vt0.c0))<=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1))<>((vt0.c1))))AND((((vt0.c0))<=((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((((vt1.c1))<>((vt0.c1))))AND((((vt0.c0))<=((vt1.c0))))));
SELECT ALL * FROM vt0, vt1, t1 WHERE ((((vt1.c1)|(vt0.c1)) IN ())) ORDER BY (((vt0.c1 IN (vt0.c2))) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((vt0.c0)LIKE(vt0.c1)))), CAST(((t1.c0) IS TRUE) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)|(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (((vt0.c1 IN (vt0.c2))) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((vt0.c0)LIKE(vt0.c1)))), CAST(((t1.c0) IS TRUE) AS BLOB)  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t1 WHERE ((((vt1.c1)|(vt0.c1)) IN ())) ORDER BY (((vt0.c1 IN (vt0.c2))) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((vt0.c0)LIKE(vt0.c1)))), CAST(((t1.c0) IS TRUE) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)|(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (((vt0.c1 IN (vt0.c2))) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((vt0.c0)LIKE(vt0.c1)))), CAST(((t1.c0) IS TRUE) AS BLOB)  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t1 WHERE ((((vt1.c1)|(vt0.c1)) IN ())) ORDER BY (((vt0.c1 IN (vt0.c2))) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((vt0.c0)LIKE(vt0.c1)))), CAST(((t1.c0) IS TRUE) AS BLOB)  NULLS LAST;
SELECT * FROM vt0, vt1, t1 WHERE (x'') ORDER BY LTRIM((((('-2027041110')AND(vt1.c1)))OR(vt1.c1)), ((((vt0.c0)OR(vt0.c2)))OR(vt0.c0))) DESC  NULLS FIRST, CASE ((((vt0.c2)OR(t1.c0)))OR(vt0.c2))  WHEN ((vt0.c2)IS NOT(vt1.c0)) THEN CAST(t1.c0 AS REAL) WHEN ((t1.c0)<(t1.c0)) THEN ((((NULL)AND(vt1.c1)))AND(vt0.c0)) WHEN (vt0.c2 IN (NULL)) THEN CASE t1.c0  WHEN t1.c0 THEN vt1.c1 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY LTRIM((((('-2027041110')AND(vt1.c1)))OR(vt1.c1)), ((((vt0.c0)OR(vt0.c2)))OR(vt0.c0))) DESC  NULLS FIRST, CASE ((((vt0.c2)OR(t1.c0)))OR(vt0.c2))  WHEN ((vt0.c2)IS NOT(vt1.c0)) THEN CAST(t1.c0 AS REAL) WHEN ((t1.c0)<(t1.c0)) THEN ((((NULL)AND(vt1.c1)))AND(vt0.c0)) WHEN (vt0.c2 IN (NULL)) THEN CASE t1.c0  WHEN t1.c0 THEN vt1.c1 END END  NULLS LAST);
SELECT * FROM vt0, vt1, t1 WHERE (x'') ORDER BY LTRIM((((('-2027041110')AND(vt1.c1)))OR(vt1.c1)), ((((vt0.c0)OR(vt0.c2)))OR(vt0.c0))) DESC  NULLS FIRST, CASE ((((vt0.c2)OR(t1.c0)))OR(vt0.c2))  WHEN ((vt0.c2)IS NOT(vt1.c0)) THEN CAST(t1.c0 AS REAL) WHEN ((t1.c0)<(t1.c0)) THEN ((((NULL)AND(vt1.c1)))AND(vt0.c0)) WHEN (vt0.c2 IN (NULL)) THEN CASE t1.c0  WHEN t1.c0 THEN vt1.c1 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY LTRIM((((('-2027041110')AND(vt1.c1)))OR(vt1.c1)), ((((vt0.c0)OR(vt0.c2)))OR(vt0.c0))) DESC  NULLS FIRST, CASE ((((vt0.c2)OR(t1.c0)))OR(vt0.c2))  WHEN ((vt0.c2)IS NOT(vt1.c0)) THEN CAST(t1.c0 AS REAL) WHEN ((t1.c0)<(t1.c0)) THEN ((((NULL)AND(vt1.c1)))AND(vt0.c0)) WHEN (vt0.c2 IN (NULL)) THEN CASE t1.c0  WHEN t1.c0 THEN vt1.c1 END END  NULLS LAST);
SELECT * FROM vt0, vt1, t1 WHERE (x'') ORDER BY LTRIM((((('-2027041110')AND(vt1.c1)))OR(vt1.c1)), ((((vt0.c0)OR(vt0.c2)))OR(vt0.c0))) DESC  NULLS FIRST, CASE ((((vt0.c2)OR(t1.c0)))OR(vt0.c2))  WHEN ((vt0.c2)IS NOT(vt1.c0)) THEN CAST(t1.c0 AS REAL) WHEN ((t1.c0)<(t1.c0)) THEN ((((NULL)AND(vt1.c1)))AND(vt0.c0)) WHEN (vt0.c2 IN (NULL)) THEN CASE t1.c0  WHEN t1.c0 THEN vt1.c1 END END  NULLS LAST;
SELECT * FROM vt0, t1, vt1 WHERE ((~ (((vt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE ((~ (((vt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE ((~ (((vt0.c0)<(vt0.c0)))));
SELECT * FROM vt0, t1 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)&(TOTAL_CHANGES())) WHERE (((IFNULL(vt0.c2, vt0.c1)) NOT BETWEEN ((((vt0.c0, vt1.c1, vt0.c2)) BETWEEN ((vt0.c2, vt1.c1, vt0.c2)) AND ((vt1.c1, vt1.c0, t1.c0)))) AND (((vt0.c1)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt0.c2, vt0.c1)) NOT BETWEEN ((((vt0.c0, vt1.c1, vt0.c2)) BETWEEN ((vt0.c2, vt1.c1, vt0.c2)) AND ((vt1.c1, vt1.c0, t1.c0)))) AND (((vt0.c1)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, t1 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)&(TOTAL_CHANGES())));
SELECT * FROM vt0, t1 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)&(TOTAL_CHANGES())) WHERE (((IFNULL(vt0.c2, vt0.c1)) NOT BETWEEN ((((vt0.c0, vt1.c1, vt0.c2)) BETWEEN ((vt0.c2, vt1.c1, vt0.c2)) AND ((vt1.c1, vt1.c0, t1.c0)))) AND (((vt0.c1)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt0.c2, vt0.c1)) NOT BETWEEN ((((vt0.c0, vt1.c1, vt0.c2)) BETWEEN ((vt0.c2, vt1.c1, vt0.c2)) AND ((vt1.c1, vt1.c0, t1.c0)))) AND (((vt0.c1)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, t1 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)&(TOTAL_CHANGES())));
SELECT * FROM vt0, t1 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)&(TOTAL_CHANGES())) WHERE (((IFNULL(vt0.c2, vt0.c1)) NOT BETWEEN ((((vt0.c0, vt1.c1, vt0.c2)) BETWEEN ((vt0.c2, vt1.c1, vt0.c2)) AND ((vt1.c1, vt1.c0, t1.c0)))) AND (((vt0.c1)IS(vt0.c0)))));
SELECT ALL * FROM vt0, vt1, t1 WHERE (((((((t1.c0)AND(vt1.c0)))AND(vt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)AND(vt1.c0)))AND(vt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE (((((((t1.c0)AND(vt1.c0)))AND(vt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)AND(vt1.c0)))AND(vt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE (((((((t1.c0)AND(vt1.c0)))AND(vt0.c2))) IS TRUE));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1) IS FALSE))%('-1206740887')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) IS FALSE))%('-1206740887'))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1) IS FALSE))%('-1206740887')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) IS FALSE))%('-1206740887'))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1) IS FALSE))%('-1206740887')));
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (NULL)));
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 END COLLATE RTRIM) ORDER BY (((((+ (t1.c0)))OR((- (t1.c0)))))OR(CASE t1.c0  WHEN '.nw&RR' THEN t1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c0 THEN t1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY (((((+ (t1.c0)))OR((- (t1.c0)))))OR(CASE t1.c0  WHEN '.nw&RR' THEN t1.c0 END))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 END COLLATE RTRIM) ORDER BY (((((+ (t1.c0)))OR((- (t1.c0)))))OR(CASE t1.c0  WHEN '.nw&RR' THEN t1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c0 THEN t1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY (((((+ (t1.c0)))OR((- (t1.c0)))))OR(CASE t1.c0  WHEN '.nw&RR' THEN t1.c0 END))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 END COLLATE RTRIM) ORDER BY (((((+ (t1.c0)))OR((- (t1.c0)))))OR(CASE t1.c0  WHEN '.nw&RR' THEN t1.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1 WHERE (CAST(CAST(t1.c0 AS INTEGER) AS REAL)) ORDER BY ((((t1.c0))=((vt0.c1))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c0 AS INTEGER) AS REAL)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((t1.c0))==((vt0.c1))) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE (CAST(CAST(t1.c0 AS INTEGER) AS REAL)) ORDER BY ((((t1.c0))=((vt0.c1))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c0 AS INTEGER) AS REAL)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((t1.c0))==((vt0.c1))) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE (CAST(CAST(t1.c0 AS INTEGER) AS REAL)) ORDER BY ((((t1.c0))=((vt0.c1))) IN ())  NULLS FIRST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (t1.c0) AND (((t1.c0)IS(t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (t1.c0) AND (((t1.c0)IS(t1.c0)))) DESC);
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (t1.c0) AND (((t1.c0)IS(t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (t1.c0) AND (((t1.c0)IS(t1.c0)))) DESC);
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (t1.c0) AND (((t1.c0)IS(t1.c0)))) DESC;
SELECT * FROM t1, vt1, vt0 WHERE ((~ (((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE ((~ (((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE ((~ (((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT * FROM t1, vt1, vt0 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt1.c0) BETWEEN (4.54004882E8) AND (vt0.c0)) COLLATE BINARY WHERE ((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) IN ((NOT ('1910631265')))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) IN ((NOT ('1910631265'))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((vt1.c0) BETWEEN (4.54004882E8) AND (vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt1.c0) BETWEEN (4.54004882E8) AND (vt0.c0)) COLLATE BINARY WHERE ((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) IN ((NOT ('1910631265')))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) IN ((NOT ('1910631265'))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((vt1.c0) BETWEEN (4.54004882E8) AND (vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt1.c0) BETWEEN (4.54004882E8) AND (vt0.c0)) COLLATE BINARY WHERE ((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) IN ((NOT ('1910631265')))));
SELECT ALL * FROM t1, vt0, vt1 WHERE (-1.012313983E9) ORDER BY (PRINTF(0.013899693946965663) IN ())  NULLS LAST, (HEX(vt0.c2) IN ()) ASC, (((t1.c0)+(vt0.c1)) IN ((((NULL))<((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((-1.012313983E9) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (PRINTF(0.013899693946965663) IN ())  NULLS LAST, (HEX(vt0.c2) IN ()) ASC, (((t1.c0)+(vt0.c1)) IN ((((NULL))<((vt1.c0))))) ASC);
SELECT ALL * FROM t1, vt0, vt1 WHERE (-1.012313983E9) ORDER BY (PRINTF(0.013899693946965663) IN ())  NULLS LAST, (HEX(vt0.c2) IN ()) ASC, (((t1.c0)+(vt0.c1)) IN ((((NULL))<((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((-1.012313983E9) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (PRINTF(0.013899693946965663) IN ())  NULLS LAST, (HEX(vt0.c2) IN ()) ASC, (((t1.c0)+(vt0.c1)) IN ((((NULL))<((vt1.c0))))) ASC);
SELECT ALL * FROM t1, vt0, vt1 WHERE (-1.012313983E9) ORDER BY (PRINTF(0.013899693946965663) IN ())  NULLS LAST, (HEX(vt0.c2) IN ()) ASC, (((t1.c0)+(vt0.c1)) IN ((((NULL))<((vt1.c0))))) ASC;
SELECT COUNT(*) FROM vt1, t1 WHERE (CAST(((vt1.c1)<>(t1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)!=(t1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (CAST(((vt1.c1)<>(t1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)!=(t1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (CAST(((vt1.c1)<>(t1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (((LIKELIHOOD(vt0.c1, 0.46753912888359117))||(load_extension(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(vt0.c1, 0.46753912888359117))||(load_extension(vt0.c0)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (((LIKELIHOOD(vt0.c1, 0.46753912888359117))||(load_extension(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(vt0.c1, 0.46753912888359117))||(load_extension(vt0.c0)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((NULL)=(((vt0.c1)>=(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL)=(((vt0.c1)>=(t1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((NULL)=(((vt0.c1)>=(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL)=(((vt0.c1)>=(t1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((NULL)=(((vt0.c1)>=(t1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ ((vt1.c0 IN (vt1.c1, vt1.c1))))) ORDER BY TYPEOF(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt1.c0 IN (vt1.c1, vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY TYPEOF(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ ((vt1.c0 IN (vt1.c1, vt1.c1))))) ORDER BY TYPEOF(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt1.c0 IN (vt1.c1, vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY TYPEOF(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ ((vt1.c0 IN (vt1.c1, vt1.c1))))) ORDER BY TYPEOF(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))  NULLS FIRST;
SELECT ALL * FROM vt1, t1, vt0 WHERE (TRIM(DISTINCT vt0.c0, vt1.c0) COLLATE RTRIM) ORDER BY UNLIKELY(DISTINCT CAST(vt0.c2 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt0.c0, vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY UNLIKELY(DISTINCT CAST(vt0.c2 AS NUMERIC)));
SELECT ALL * FROM vt1, t1, vt0 WHERE (TRIM(DISTINCT vt0.c0, vt1.c0) COLLATE RTRIM) ORDER BY UNLIKELY(DISTINCT CAST(vt0.c2 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt0.c0, vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY UNLIKELY(DISTINCT CAST(vt0.c2 AS NUMERIC)));
SELECT ALL * FROM vt1, t1, vt0 WHERE (TRIM(DISTINCT vt0.c0, vt1.c0) COLLATE RTRIM) ORDER BY UNLIKELY(DISTINCT CAST(vt0.c2 AS NUMERIC));
SELECT ALL * FROM vt0, t1 LEFT OUTER JOIN vt1 ON (((- (vt1.c1)))%(((vt1.c1)>=(vt0.c1)))) WHERE (LIKELIHOOD(DISTINCT ((((((((((((vt1.c0)OR(vt1.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(t1.c0)))OR(vt1.c1)), 0.12850000286134866));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((((((((((((vt1.c0)OR(vt1.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(t1.c0)))OR(vt1.c1)), 0.12850000286134866)) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN vt1 ON (((- (vt1.c1)))%(((vt1.c1)>=(vt0.c1)))));
SELECT ALL * FROM vt0, t1 LEFT OUTER JOIN vt1 ON (((- (vt1.c1)))%(((vt1.c1)>=(vt0.c1)))) WHERE (LIKELIHOOD(DISTINCT ((((((((((((vt1.c0)OR(vt1.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(t1.c0)))OR(vt1.c1)), 0.12850000286134866));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((((((((((((vt1.c0)OR(vt1.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(t1.c0)))OR(vt1.c1)), 0.12850000286134866)) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN vt1 ON (((- (vt1.c1)))%(((vt1.c1)>=(vt0.c1)))));
SELECT ALL * FROM vt0, t1 LEFT OUTER JOIN vt1 ON (((- (vt1.c1)))%(((vt1.c1)>=(vt0.c1)))) WHERE (LIKELIHOOD(DISTINCT ((((((((((((vt1.c0)OR(vt1.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(t1.c0)))OR(vt1.c1)), 0.12850000286134866));
SELECT ALL * FROM t1 INNER JOIN vt0 ON vt0.c0 INNER JOIN vt1 ON (- (((t1.c0)<=(vt0.c2)))) WHERE (1.455279887E9);
SELECT SUM(count) FROM (SELECT ((1.455279887E9) IS TRUE)  as count FROM t1 NOT INDEXED INNER JOIN vt0 ON vt0.c0 INNER JOIN vt1 ON (- (((t1.c0)<=(vt0.c2)))));
SELECT ALL * FROM t1 INNER JOIN vt0 ON vt0.c0 INNER JOIN vt1 ON (- (((t1.c0)<=(vt0.c2)))) WHERE (1.455279887E9);
SELECT SUM(count) FROM (SELECT ((1.455279887E9) IS TRUE)  as count FROM t1 NOT INDEXED INNER JOIN vt0 ON vt0.c0 INNER JOIN vt1 ON (- (((t1.c0)<=(vt0.c2)))));
SELECT ALL * FROM t1 INNER JOIN vt0 ON vt0.c0 INNER JOIN vt1 ON (- (((t1.c0)<=(vt0.c2)))) WHERE (1.455279887E9);
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE ((vt0.c0) ISNULL)  WHEN vt0.c2 COLLATE NOCASE THEN t1.c0 COLLATE BINARY END) ORDER BY ((((((((NULLIF(t1.c0, vt0.c1))OR(((((vt0.c1)OR(vt0.c2)))OR(0.7584157326794576)))))AND(vt0.c1)))AND(((vt0.c1) NOT BETWEEN ('1455279887') AND (t1.c0)))))OR((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) ISNULL)  WHEN vt0.c2 COLLATE NOCASE THEN t1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((((((NULLIF(t1.c0, vt0.c1))OR(((((vt0.c1)OR(vt0.c2)))OR(0.7584157326794576)))))AND(vt0.c1)))AND(((vt0.c1) NOT BETWEEN ('1455279887') AND (t1.c0)))))OR((vt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE ((vt0.c0) ISNULL)  WHEN vt0.c2 COLLATE NOCASE THEN t1.c0 COLLATE BINARY END) ORDER BY ((((((((NULLIF(t1.c0, vt0.c1))OR(((((vt0.c1)OR(vt0.c2)))OR(0.7584157326794576)))))AND(vt0.c1)))AND(((vt0.c1) NOT BETWEEN ('1455279887') AND (t1.c0)))))OR((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) ISNULL)  WHEN vt0.c2 COLLATE NOCASE THEN t1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((((((NULLIF(t1.c0, vt0.c1))OR(((((vt0.c1)OR(vt0.c2)))OR(0.7584157326794576)))))AND(vt0.c1)))AND(((vt0.c1) NOT BETWEEN ('1455279887') AND (t1.c0)))))OR((vt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE ((vt0.c0) ISNULL)  WHEN vt0.c2 COLLATE NOCASE THEN t1.c0 COLLATE BINARY END) ORDER BY ((((((((NULLIF(t1.c0, vt0.c1))OR(((((vt0.c1)OR(vt0.c2)))OR(0.7584157326794576)))))AND(vt0.c1)))AND(((vt0.c1) NOT BETWEEN ('1455279887') AND (t1.c0)))))OR((vt0.c1 IN ())));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)==(vt0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)==(vt0.c0)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)==(vt0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)==(vt0.c0)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)==(vt0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CASE WHEN (((vt1.c1, vt0.c2, vt0.c0))=((t1.c0, vt0.c1, vt0.c0))) THEN t1.c0 COLLATE RTRIM ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c1, vt0.c2, vt0.c0))=((t1.c0, vt0.c1, vt0.c0))) THEN t1.c0 COLLATE RTRIM ELSE x'' END) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CASE WHEN (((vt1.c1, vt0.c2, vt0.c0))=((t1.c0, vt0.c1, vt0.c0))) THEN t1.c0 COLLATE RTRIM ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c1, vt0.c2, vt0.c0))=((t1.c0, vt0.c1, vt0.c0))) THEN t1.c0 COLLATE RTRIM ELSE x'' END) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CASE WHEN (((vt1.c1, vt0.c2, vt0.c0))=((t1.c0, vt0.c1, vt0.c0))) THEN t1.c0 COLLATE RTRIM ELSE x'' END);
SELECT * FROM t1 WHERE (0Xffffffffce62679c);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffce62679c) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (0Xffffffffce62679c);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffce62679c) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (0Xffffffffce62679c);
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN vt0 ON x'' WHERE (CASE WHEN t1.c0 COLLATE BINARY THEN ((vt0.c1)*(vt1.c0)) WHEN (NOT (vt1.c1)) THEN (((vt0.c0, t1.c0, x'')) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((t1.c0, vt0.c0, '613936962'))) WHEN (vt0.c2 IN ()) THEN (~ (t1.c0)) END) ORDER BY vt1.c0, ((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) ISNULL) DESC  NULLS LAST, CASE (~ (vt1.c1))  WHEN (((('0.5793379457815881')OR(vt1.c0)))OR(t1.c0)) THEN vt0.c0 ELSE (((vt0.c1, vt0.c1, x''))==((t1.c0, vt1.c1, vt1.c1))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 COLLATE BINARY THEN ((vt0.c1)*(vt1.c0)) WHEN (NOT (vt1.c1)) THEN (((vt0.c0, t1.c0, x'')) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((t1.c0, vt0.c0, '613936962'))) WHEN (vt0.c2 IN ()) THEN (~ (t1.c0)) END) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON x'' ORDER BY vt1.c0, ((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) ISNULL) DESC  NULLS LAST, CASE (~ (vt1.c1))  WHEN (((('0.5793379457815881')OR(vt1.c0)))OR(t1.c0)) THEN vt0.c0 ELSE (((vt0.c1, vt0.c1, x''))==((t1.c0, vt1.c1, vt1.c1))) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN vt0 ON x'' WHERE (CASE WHEN t1.c0 COLLATE BINARY THEN ((vt0.c1)*(vt1.c0)) WHEN (NOT (vt1.c1)) THEN (((vt0.c0, t1.c0, x'')) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((t1.c0, vt0.c0, '613936962'))) WHEN (vt0.c2 IN ()) THEN (~ (t1.c0)) END) ORDER BY vt1.c0, ((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) ISNULL) DESC  NULLS LAST, CASE (~ (vt1.c1))  WHEN (((('0.5793379457815881')OR(vt1.c0)))OR(t1.c0)) THEN vt0.c0 ELSE (((vt0.c1, vt0.c1, x''))==((t1.c0, vt1.c1, vt1.c1))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 COLLATE BINARY THEN ((vt0.c1)*(vt1.c0)) WHEN (NOT (vt1.c1)) THEN (((vt0.c0, t1.c0, x'')) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((t1.c0, vt0.c0, '613936962'))) WHEN (vt0.c2 IN ()) THEN (~ (t1.c0)) END) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON x'' ORDER BY vt1.c0, ((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) ISNULL) DESC  NULLS LAST, CASE (~ (vt1.c1))  WHEN (((('0.5793379457815881')OR(vt1.c0)))OR(t1.c0)) THEN vt0.c0 ELSE (((vt0.c1, vt0.c1, x''))==((t1.c0, vt1.c1, vt1.c1))) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN vt0 ON x'' WHERE (CASE WHEN t1.c0 COLLATE BINARY THEN ((vt0.c1)*(vt1.c0)) WHEN (NOT (vt1.c1)) THEN (((vt0.c0, t1.c0, x'')) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((t1.c0, vt0.c0, '613936962'))) WHEN (vt0.c2 IN ()) THEN (~ (t1.c0)) END) ORDER BY vt1.c0, ((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) ISNULL) DESC  NULLS LAST, CASE (~ (vt1.c1))  WHEN (((('0.5793379457815881')OR(vt1.c0)))OR(t1.c0)) THEN vt0.c0 ELSE (((vt0.c1, vt0.c1, x''))==((t1.c0, vt1.c1, vt1.c1))) END ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN ((+ (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((0.2655472282733228)&(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((0.2655472282733228)&(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((0.2655472282733228)&(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((0.2655472282733228)&(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((0.2655472282733228)&(vt1.c0)) IN ()));
SELECT * FROM vt0 WHERE (CAST(TRIM(vt0.c1, '') AS BLOB)) ORDER BY (('0.967430850311047') NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(vt0.c1, '') AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (('0.967430850311047') NOT NULL) ASC);
SELECT * FROM vt0 WHERE (CAST(TRIM(vt0.c1, '') AS BLOB)) ORDER BY (('0.967430850311047') NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(vt0.c1, '') AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (('0.967430850311047') NOT NULL) ASC);
SELECT * FROM vt0 WHERE (CAST(TRIM(vt0.c1, '') AS BLOB)) ORDER BY (('0.967430850311047') NOT NULL) ASC;
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN ())  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN ())  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN ())  NULLS LAST;
SELECT * FROM vt1, vt0, t1 WHERE (((((((((vt1.c1)AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c2)))OR(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c2)))OR(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (((((((((vt1.c1)AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c2)))OR(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c2)))OR(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (((((((((vt1.c1)AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c2)))OR(vt0.c1)) COLLATE BINARY);
SELECT * FROM t1, vt1, vt0 WHERE ((~ ('')));
SELECT SUM(count) FROM (SELECT (((~ (''))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE ((~ ('')));
SELECT SUM(count) FROM (SELECT (((~ (''))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE ((~ ('')));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)|(vt0.c2)))!=((~ (vt0.c1))))) ORDER BY (((((vt0.c2)*(vt0.c0)), vt0.c2, '731168005'))!=((vt0.c1, (NULL IN ()), NULL COLLATE NOCASE))) DESC, 'R6';
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)|(vt0.c2)))<>((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2)*(vt0.c0)), vt0.c2, '731168005'))!=((vt0.c1, (NULL IN ()), NULL COLLATE NOCASE))) DESC, 'R6');
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)|(vt0.c2)))!=((~ (vt0.c1))))) ORDER BY (((((vt0.c2)*(vt0.c0)), vt0.c2, '731168005'))!=((vt0.c1, (NULL IN ()), NULL COLLATE NOCASE))) DESC, 'R6';
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)|(vt0.c2)))<>((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2)*(vt0.c0)), vt0.c2, '731168005'))!=((vt0.c1, (NULL IN ()), NULL COLLATE NOCASE))) DESC, 'R6');
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)|(vt0.c2)))!=((~ (vt0.c1))))) ORDER BY (((((vt0.c2)*(vt0.c0)), vt0.c2, '731168005'))!=((vt0.c1, (NULL IN ()), NULL COLLATE NOCASE))) DESC, 'R6';
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, t1, vt0 WHERE (((vt0.c0)<<(NULL))) ORDER BY CASE (+ (t1.c0))  WHEN ((((vt0.c2)AND(t1.c0)))OR(vt0.c0)) THEN rtreenode(vt0.c2, vt0.c1) ELSE CAST(t1.c0 AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<(NULL))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CASE (+ (t1.c0))  WHEN ((((vt0.c2)AND(t1.c0)))OR(vt0.c0)) THEN rtreenode(vt0.c2, vt0.c1) ELSE CAST(t1.c0 AS TEXT) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, t1, vt0 WHERE (((vt0.c0)<<(NULL))) ORDER BY CASE (+ (t1.c0))  WHEN ((((vt0.c2)AND(t1.c0)))OR(vt0.c0)) THEN rtreenode(vt0.c2, vt0.c1) ELSE CAST(t1.c0 AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<(NULL))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CASE (+ (t1.c0))  WHEN ((((vt0.c2)AND(t1.c0)))OR(vt0.c0)) THEN rtreenode(vt0.c2, vt0.c1) ELSE CAST(t1.c0 AS TEXT) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, t1, vt0 WHERE (((vt0.c0)<<(NULL))) ORDER BY CASE (+ (t1.c0))  WHEN ((((vt0.c2)AND(t1.c0)))OR(vt0.c0)) THEN rtreenode(vt0.c2, vt0.c1) ELSE CAST(t1.c0 AS TEXT) END  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (((((((((CASE vt0.c2  WHEN vt1.c1 THEN vt0.c0 ELSE -1277536007 END)OR(CASE WHEN vt0.c2 THEN t1.c0 ELSE vt0.c2 END)))AND(((vt0.c1)>(vt1.c0)))))AND((vt0.c2 IN ()))))OR(((vt0.c0) NOT BETWEEN (0X9d9a2b8) AND (vt0.c0))))) ORDER BY (+ (t1.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE vt0.c2  WHEN vt1.c1 THEN vt0.c0 ELSE -1277536007 END)OR(CASE WHEN vt0.c2 THEN t1.c0 ELSE vt0.c2 END)))AND(((vt0.c1)>(vt1.c0)))))AND((vt0.c2 IN ()))))OR(((vt0.c0) NOT BETWEEN (0X9d9a2b8) AND (vt0.c0))))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (+ (t1.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (((((((((CASE vt0.c2  WHEN vt1.c1 THEN vt0.c0 ELSE -1277536007 END)OR(CASE WHEN vt0.c2 THEN t1.c0 ELSE vt0.c2 END)))AND(((vt0.c1)>(vt1.c0)))))AND((vt0.c2 IN ()))))OR(((vt0.c0) NOT BETWEEN (0X9d9a2b8) AND (vt0.c0))))) ORDER BY (+ (t1.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE vt0.c2  WHEN vt1.c1 THEN vt0.c0 ELSE -1277536007 END)OR(CASE WHEN vt0.c2 THEN t1.c0 ELSE vt0.c2 END)))AND(((vt0.c1)>(vt1.c0)))))AND((vt0.c2 IN ()))))OR(((vt0.c0) NOT BETWEEN (0X9d9a2b8) AND (vt0.c0))))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (+ (t1.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (((((((((CASE vt0.c2  WHEN vt1.c1 THEN vt0.c0 ELSE -1277536007 END)OR(CASE WHEN vt0.c2 THEN t1.c0 ELSE vt0.c2 END)))AND(((vt0.c1)>(vt1.c0)))))AND((vt0.c2 IN ()))))OR(((vt0.c0) NOT BETWEEN (0X9d9a2b8) AND (vt0.c0))))) ORDER BY (+ (t1.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM t1, vt1 WHERE (LIKELIHOOD((('767495212')|(vt1.c1)), 0.027190324885079553));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((('767495212')|(vt1.c1)), 0.027190324885079553)) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE (LIKELIHOOD((('767495212')|(vt1.c1)), 0.027190324885079553));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((('767495212')|(vt1.c1)), 0.027190324885079553)) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE (LIKELIHOOD((('767495212')|(vt1.c1)), 0.027190324885079553));
SELECT ALL * FROM t1, vt1 WHERE (((((vt1.c0) IS FALSE)) BETWEEN ((NOT (t1.c0))) AND (vt1.c1 COLLATE NOCASE))) ORDER BY ((vt1.c1) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE)) BETWEEN ((NOT (t1.c0))) AND (vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt1 ORDER BY ((vt1.c1) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM t1, vt1 WHERE (((((vt1.c0) IS FALSE)) BETWEEN ((NOT (t1.c0))) AND (vt1.c1 COLLATE NOCASE))) ORDER BY ((vt1.c1) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE)) BETWEEN ((NOT (t1.c0))) AND (vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt1 ORDER BY ((vt1.c1) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM t1, vt1 WHERE (((((vt1.c0) IS FALSE)) BETWEEN ((NOT (t1.c0))) AND (vt1.c1 COLLATE NOCASE))) ORDER BY ((vt1.c1) NOTNULL) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((- ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- ((+ (vt0.c1)))));
SELECT ALL * FROM vt1, t1, vt0 WHERE (0.9198056631680951) ORDER BY (((vt0.c2)+(vt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9198056631680951) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (((vt0.c2)+(vt0.c1)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt1, t1, vt0 WHERE (0.9198056631680951) ORDER BY (((vt0.c2)+(vt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9198056631680951) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (((vt0.c2)+(vt0.c1)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt1, t1, vt0 WHERE (0.9198056631680951) ORDER BY (((vt0.c2)+(vt0.c1)) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c2)OR(((vt0.c1)OR(vt1.c0)))))AND((((vt1.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)OR(((vt0.c1)OR(vt1.c0)))))AND((((vt1.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c2)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c2)OR(((vt0.c1)OR(vt1.c0)))))AND((((vt1.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)OR(((vt0.c1)OR(vt1.c0)))))AND((((vt1.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c2)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c2)OR(((vt0.c1)OR(vt1.c0)))))AND((((vt1.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c2))))));
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((((t1.c0) BETWEEN (t1.c0) AND (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) BETWEEN (t1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((((t1.c0) BETWEEN (t1.c0) AND (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) BETWEEN (t1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((((t1.c0) BETWEEN (t1.c0) AND (vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END)OR(((((0.03212648290949183)OR(vt0.c2)))AND(vt0.c2)))))AND(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))))OR(CAST(vt0.c1 AS INTEGER))))AND(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((']訲')IS NOT(vt0.c0)))))OR(CAST(vt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END)OR(((((0.03212648290949183)OR(vt0.c2)))AND(vt0.c2)))))AND(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))))OR(CAST(vt0.c1 AS INTEGER))))AND(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((']訲')IS NOT(vt0.c0)))))OR(CAST(vt0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END)OR(((((0.03212648290949183)OR(vt0.c2)))AND(vt0.c2)))))AND(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))))OR(CAST(vt0.c1 AS INTEGER))))AND(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((']訲')IS NOT(vt0.c0)))))OR(CAST(vt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END)OR(((((0.03212648290949183)OR(vt0.c2)))AND(vt0.c2)))))AND(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))))OR(CAST(vt0.c1 AS INTEGER))))AND(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((']訲')IS NOT(vt0.c0)))))OR(CAST(vt0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END)OR(((((0.03212648290949183)OR(vt0.c2)))AND(vt0.c2)))))AND(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))))OR(CAST(vt0.c1 AS INTEGER))))AND(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((']訲')IS NOT(vt0.c0)))))OR(CAST(vt0.c2 AS INTEGER))));
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((x'')>(vt1.c1)) IN ())) ORDER BY ((CASE WHEN vt0.c1 THEN vt1.c0 END)-(UNLIKELY(vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'')>(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((CASE WHEN vt0.c1 THEN vt1.c0 END)-(UNLIKELY(vt1.c0)))  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((x'')>(vt1.c1)) IN ())) ORDER BY ((CASE WHEN vt0.c1 THEN vt1.c0 END)-(UNLIKELY(vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'')>(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((CASE WHEN vt0.c1 THEN vt1.c0 END)-(UNLIKELY(vt1.c0)))  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((x'')>(vt1.c1)) IN ())) ORDER BY ((CASE WHEN vt0.c1 THEN vt1.c0 END)-(UNLIKELY(vt1.c0)))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (CAST(t1.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY ((((x'ee84')AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0)OR(t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((((x'ee84')AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0)OR(t1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CAST(t1.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY ((((x'ee84')AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0)OR(t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((((x'ee84')AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0)OR(t1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CAST(t1.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY ((((x'ee84')AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0)OR(t1.c0))))  NULLS FIRST;
SELECT * FROM vt1, vt0, t1 WHERE (0.5847750958456265);
SELECT SUM(count) FROM (SELECT ALL ((0.5847750958456265) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (0.5847750958456265);
SELECT SUM(count) FROM (SELECT ALL ((0.5847750958456265) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (0.5847750958456265);
SELECT * FROM vt0, t1 WHERE (CASE WHEN 4.54004882E8 THEN ((vt0.c0)LIKE(vt0.c0)) WHEN ((((vt0.c2)OR(t1.c0)))OR(vt0.c0)) THEN vt0.c2 WHEN (((vt0.c2, vt0.c1, -820756354))>((vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)) ELSE ((vt0.c1)AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 4.54004882E8 THEN ((vt0.c0)LIKE(vt0.c0)) WHEN ((((vt0.c2)OR(t1.c0)))OR(vt0.c0)) THEN vt0.c2 WHEN (((vt0.c2, vt0.c1, -820756354))>((vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)) ELSE ((vt0.c1)AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (CASE WHEN 4.54004882E8 THEN ((vt0.c0)LIKE(vt0.c0)) WHEN ((((vt0.c2)OR(t1.c0)))OR(vt0.c0)) THEN vt0.c2 WHEN (((vt0.c2, vt0.c1, -820756354))>((vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)) ELSE ((vt0.c1)AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 4.54004882E8 THEN ((vt0.c0)LIKE(vt0.c0)) WHEN ((((vt0.c2)OR(t1.c0)))OR(vt0.c0)) THEN vt0.c2 WHEN (((vt0.c2, vt0.c1, -820756354))>((vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)) ELSE ((vt0.c1)AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (CASE WHEN 4.54004882E8 THEN ((vt0.c0)LIKE(vt0.c0)) WHEN ((((vt0.c2)OR(t1.c0)))OR(vt0.c0)) THEN vt0.c2 WHEN (((vt0.c2, vt0.c1, -820756354))>((vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)) ELSE ((vt0.c1)AND(vt0.c0)) END);
SELECT * FROM vt0 WHERE (x'') ORDER BY (((CAST(vt0.c1 AS BLOB)))<=((((x'')IS NOT(vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c1 AS BLOB)))<=((((x'')IS NOT(vt0.c1))))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (x'') ORDER BY (((CAST(vt0.c1 AS BLOB)))<=((((x'')IS NOT(vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c1 AS BLOB)))<=((((x'')IS NOT(vt0.c1))))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (x'') ORDER BY (((CAST(vt0.c1 AS BLOB)))<=((((x'')IS NOT(vt0.c1))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (-1020494408 COLLATE BINARY) ORDER BY vt0.c2;
SELECT SUM(count) FROM (SELECT ((-1020494408 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, t1 ORDER BY vt0.c2);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (-1020494408 COLLATE BINARY) ORDER BY vt0.c2;
SELECT SUM(count) FROM (SELECT ((-1020494408 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, t1 ORDER BY vt0.c2);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (-1020494408 COLLATE BINARY) ORDER BY vt0.c2;
SELECT ALL * FROM t1, vt0 WHERE ((- (vt0.c2)) COLLATE NOCASE) ORDER BY ((((((((t1.c0 COLLATE NOCASE)AND(((vt0.c0) ISNULL))))OR((NOT (t1.c0)))))AND(((t1.c0) IS TRUE))))OR('NT'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((((t1.c0 COLLATE NOCASE)AND(((vt0.c0) ISNULL))))OR((NOT (t1.c0)))))AND(((t1.c0) IS TRUE))))OR('NT'))  NULLS LAST);
SELECT ALL * FROM t1, vt0 WHERE ((- (vt0.c2)) COLLATE NOCASE) ORDER BY ((((((((t1.c0 COLLATE NOCASE)AND(((vt0.c0) ISNULL))))OR((NOT (t1.c0)))))AND(((t1.c0) IS TRUE))))OR('NT'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((((t1.c0 COLLATE NOCASE)AND(((vt0.c0) ISNULL))))OR((NOT (t1.c0)))))AND(((t1.c0) IS TRUE))))OR('NT'))  NULLS LAST);
SELECT ALL * FROM t1, vt0 WHERE ((- (vt0.c2)) COLLATE NOCASE) ORDER BY ((((((((t1.c0 COLLATE NOCASE)AND(((vt0.c0) ISNULL))))OR((NOT (t1.c0)))))AND(((t1.c0) IS TRUE))))OR('NT'))  NULLS LAST;
SELECT * FROM vt1, t1 WHERE (0.5476115119360364) ORDER BY t1.c0  NULLS LAST, (~ (((t1.c0)OR(vt1.c1)))) ASC  NULLS FIRST, CAST((NOT (vt1.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ((0.5476115119360364) IS TRUE)  as count FROM vt1 NOT INDEXED, t1 ORDER BY t1.c0  NULLS LAST, (~ (((t1.c0)OR(vt1.c1)))) ASC  NULLS FIRST, CAST((NOT (vt1.c1)) AS REAL));
SELECT * FROM vt1, t1 WHERE (0.5476115119360364) ORDER BY t1.c0  NULLS LAST, (~ (((t1.c0)OR(vt1.c1)))) ASC  NULLS FIRST, CAST((NOT (vt1.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ((0.5476115119360364) IS TRUE)  as count FROM vt1 NOT INDEXED, t1 ORDER BY t1.c0  NULLS LAST, (~ (((t1.c0)OR(vt1.c1)))) ASC  NULLS FIRST, CAST((NOT (vt1.c1)) AS REAL));
SELECT * FROM vt1, t1 WHERE (0.5476115119360364) ORDER BY t1.c0  NULLS LAST, (~ (((t1.c0)OR(vt1.c1)))) ASC  NULLS FIRST, CAST((NOT (vt1.c1)) AS REAL);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE NOCASE IN ()) WHERE ((- (x'df28')));
SELECT SUM(count) FROM (SELECT (((- (x'df28'))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE NOCASE IN ()) WHERE ((- (x'df28')));
SELECT SUM(count) FROM (SELECT (((- (x'df28'))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE NOCASE IN ()) WHERE ((- (x'df28')));
SELECT * FROM vt1 WHERE (((CAST('613936962' AS NUMERIC))AND(((vt1.c0)>>(vt1.c0))))) ORDER BY HEX(((vt1.c0)AND(NULL)))  NULLS LAST, vt1.c0;
SELECT SUM(count) FROM (SELECT ((((CAST('613936962' AS NUMERIC))AND(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY HEX(((vt1.c0)AND(NULL)))  NULLS LAST, vt1.c0);
SELECT * FROM vt1 WHERE (((CAST('613936962' AS NUMERIC))AND(((vt1.c0)>>(vt1.c0))))) ORDER BY HEX(((vt1.c0)AND(NULL)))  NULLS LAST, vt1.c0;
SELECT SUM(count) FROM (SELECT ((((CAST('613936962' AS NUMERIC))AND(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY HEX(((vt1.c0)AND(NULL)))  NULLS LAST, vt1.c0);
SELECT * FROM vt1 WHERE (((CAST('613936962' AS NUMERIC))AND(((vt1.c0)>>(vt1.c0))))) ORDER BY HEX(((vt1.c0)AND(NULL)))  NULLS LAST, vt1.c0;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((+ (vt0.c0)) IN ()));
SELECT COUNT(*) FROM t1, vt1 WHERE (((((vt1.c0)>=(vt1.c0)))=(((t1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(vt1.c0)))=(((t1.c0) NOTNULL)))) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (((((vt1.c0)>=(vt1.c0)))=(((t1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(vt1.c0)))=(((t1.c0) NOTNULL)))) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (((((vt1.c0)>=(vt1.c0)))=(((t1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) ORDER BY (t1.c0 IN (t1.c0, 0.5509780973913384)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY (t1.c0 IN (t1.c0, 0.5509780973913384)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) ORDER BY (t1.c0 IN (t1.c0, 0.5509780973913384)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY (t1.c0 IN (t1.c0, 0.5509780973913384)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) ORDER BY (t1.c0 IN (t1.c0, 0.5509780973913384)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) ISNULL))>(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1))))>=((TOTAL_CHANGES())))  NULLS FIRST, ((vt1.c0 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) ISNULL))>(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1))))>=((TOTAL_CHANGES())))  NULLS FIRST, ((vt1.c0 IN ()) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) ISNULL))>(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1))))>=((TOTAL_CHANGES())))  NULLS FIRST, ((vt1.c0 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) ISNULL))>(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1))))>=((TOTAL_CHANGES())))  NULLS FIRST, ((vt1.c0 IN ()) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) ISNULL))>(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1))))>=((TOTAL_CHANGES())))  NULLS FIRST, ((vt1.c0 IN ()) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i98, t1 FULL OUTER JOIN vt1 ON (((((vt0.c2))=((vt0.c1))))=(((((t1.c0)OR(vt0.c0)))AND(vt0.c2)))) WHERE ((((((t1.c0)>=(vt0.c2))))<((UPPER(vt0.c2))))) ORDER BY vt1.c0, ((((vt0.c2)!=(vt1.c1)))OR((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)>=(vt0.c2))))<((UPPER(vt0.c2))))) IS TRUE)  as count FROM vt0 INDEXED BY i98, t1 FULL OUTER JOIN vt1 ON (((((vt0.c2))=((vt0.c1))))==(((((t1.c0)OR(vt0.c0)))AND(vt0.c2)))) ORDER BY vt1.c0, ((((vt0.c2)!=(vt1.c1)))OR((NOT (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i98, t1 FULL OUTER JOIN vt1 ON (((((vt0.c2))=((vt0.c1))))=(((((t1.c0)OR(vt0.c0)))AND(vt0.c2)))) WHERE ((((((t1.c0)>=(vt0.c2))))<((UPPER(vt0.c2))))) ORDER BY vt1.c0, ((((vt0.c2)!=(vt1.c1)))OR((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)>=(vt0.c2))))<((UPPER(vt0.c2))))) IS TRUE)  as count FROM vt0 INDEXED BY i98, t1 FULL OUTER JOIN vt1 ON (((((vt0.c2))=((vt0.c1))))==(((((t1.c0)OR(vt0.c0)))AND(vt0.c2)))) ORDER BY vt1.c0, ((((vt0.c2)!=(vt1.c1)))OR((NOT (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF((~ ('%\')), ((vt1.c0) BETWEEN (vt1.c0) AND (0.1682937440613732)))) ORDER BY ((((((vt1.c1)%(vt1.c1)))OR('-')))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((~ ('%\')), ((vt1.c0) BETWEEN (vt1.c0) AND (0.1682937440613732)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)%(vt1.c1)))OR('-')))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF((~ ('%\')), ((vt1.c0) BETWEEN (vt1.c0) AND (0.1682937440613732)))) ORDER BY ((((((vt1.c1)%(vt1.c1)))OR('-')))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((~ ('%\')), ((vt1.c0) BETWEEN (vt1.c0) AND (0.1682937440613732)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)%(vt1.c1)))OR('-')))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF((~ ('%\')), ((vt1.c0) BETWEEN (vt1.c0) AND (0.1682937440613732)))) ORDER BY ((((((vt1.c1)%(vt1.c1)))OR('-')))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (TRIM(('' IN ()))) ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN (0.47605170848495826) AND (TRIM(t1.c0)));
SELECT SUM(count) FROM (SELECT ((TRIM(('' IN ()))) IS TRUE)  as count FROM vt1, t1 ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN (0.47605170848495826) AND (TRIM(t1.c0))));
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (TRIM(('' IN ()))) ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN (0.47605170848495826) AND (TRIM(t1.c0)));
SELECT SUM(count) FROM (SELECT ((TRIM(('' IN ()))) IS TRUE)  as count FROM vt1, t1 ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN (0.47605170848495826) AND (TRIM(t1.c0))));
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (TRIM(('' IN ()))) ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN (0.47605170848495826) AND (TRIM(t1.c0)));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON CAST(((t1.c0)!=(vt0.c1)) AS INTEGER) WHERE ((t1.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((t1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON CAST(((t1.c0)!=(vt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON CAST(((t1.c0)!=(vt0.c1)) AS INTEGER) WHERE ((t1.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((t1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON CAST(((t1.c0)!=(vt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON CAST(((t1.c0)!=(vt0.c1)) AS INTEGER) WHERE ((t1.c0 COLLATE NOCASE IN ()));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((x'') NOT BETWEEN (vt0.c0) AND (((vt1.c0)==(vt1.c1)))) WHERE ((((vt0.c2)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(vt1.c0))) AND ((vt1.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(vt1.c0))) AND ((vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((x'') NOT BETWEEN (vt0.c0) AND (((vt1.c0)==(vt1.c1)))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((x'') NOT BETWEEN (vt0.c0) AND (((vt1.c0)==(vt1.c1)))) WHERE ((((vt0.c2)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(vt1.c0))) AND ((vt1.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(vt1.c0))) AND ((vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((x'') NOT BETWEEN (vt0.c0) AND (((vt1.c0)==(vt1.c1)))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((x'') NOT BETWEEN (vt0.c0) AND (((vt1.c0)==(vt1.c1)))) WHERE ((((vt0.c2)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(vt1.c0))) AND ((vt1.c1 COLLATE NOCASE))));
SELECT * FROM t1, vt0, vt1 WHERE (CASE WHEN (NOT (vt1.c0)) THEN vt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt1.c0)) THEN vt0.c2 END) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (CASE WHEN (NOT (vt1.c0)) THEN vt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt1.c0)) THEN vt0.c2 END) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (CASE WHEN (NOT (vt1.c0)) THEN vt0.c2 END);
SELECT ALL * FROM vt1, vt0 WHERE (-397411450) ORDER BY (((~ (vt0.c0))) BETWEEN (vt1.c0) AND (((vt1.c1)LIKE(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((-397411450) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (vt0.c0))) BETWEEN (vt1.c0) AND (((vt1.c1)LIKE(vt0.c1)))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (-397411450) ORDER BY (((~ (vt0.c0))) BETWEEN (vt1.c0) AND (((vt1.c1)LIKE(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((-397411450) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (vt0.c0))) BETWEEN (vt1.c0) AND (((vt1.c1)LIKE(vt0.c1)))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (-397411450) ORDER BY (((~ (vt0.c0))) BETWEEN (vt1.c0) AND (((vt1.c1)LIKE(vt0.c1)))) ASC;
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (((((~ (vt0.c0))))<((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))<((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (((((~ (vt0.c0))))<((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))<((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (((((~ (vt0.c0))))<((CAST(vt1.c0 AS NUMERIC)))));
SELECT * FROM t1, vt0, vt1 WHERE (((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) IN (((((t1.c0)OR(0.3217561109486634)))OR(vt1.c1))))) ORDER BY SQLITE_SOURCE_ID() DESC, CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN NULL ELSE ((vt1.c0)AND(0.2831950749949733)) END ASC, LTRIM(((((vt0.c1)OR(t1.c0)))OR(vt0.c0)), (((vt0.c2, vt0.c1, vt0.c0))!=((vt1.c0, vt1.c1, vt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) IN (((((t1.c0)OR(0.3217561109486634)))OR(vt1.c1))))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY SQLITE_SOURCE_ID() DESC, CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN NULL ELSE ((vt1.c0)AND(0.2831950749949733)) END ASC, LTRIM(((((vt0.c1)OR(t1.c0)))OR(vt0.c0)), (((vt0.c2, vt0.c1, vt0.c0))<>((vt1.c0, vt1.c1, vt1.c1)))) ASC  NULLS LAST);
SELECT * FROM t1, vt0, vt1 WHERE (((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) IN (((((t1.c0)OR(0.3217561109486634)))OR(vt1.c1))))) ORDER BY SQLITE_SOURCE_ID() DESC, CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN NULL ELSE ((vt1.c0)AND(0.2831950749949733)) END ASC, LTRIM(((((vt0.c1)OR(t1.c0)))OR(vt0.c0)), (((vt0.c2, vt0.c1, vt0.c0))!=((vt1.c0, vt1.c1, vt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) IN (((((t1.c0)OR(0.3217561109486634)))OR(vt1.c1))))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY SQLITE_SOURCE_ID() DESC, CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN NULL ELSE ((vt1.c0)AND(0.2831950749949733)) END ASC, LTRIM(((((vt0.c1)OR(t1.c0)))OR(vt0.c0)), (((vt0.c2, vt0.c1, vt0.c0))<>((vt1.c0, vt1.c1, vt1.c1)))) ASC  NULLS LAST);
SELECT * FROM t1, vt0, vt1 WHERE (((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) IN (((((t1.c0)OR(0.3217561109486634)))OR(vt1.c1))))) ORDER BY SQLITE_SOURCE_ID() DESC, CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN NULL ELSE ((vt1.c0)AND(0.2831950749949733)) END ASC, LTRIM(((((vt0.c1)OR(t1.c0)))OR(vt0.c0)), (((vt0.c2, vt0.c1, vt0.c0))!=((vt1.c0, vt1.c1, vt1.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT * FROM vt0, vt1 WHERE (x'' COLLATE BINARY) ORDER BY CASE (vt1.c0 IN ())  WHEN ((((((((vt0.c0)AND(vt1.c1)))OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c1)) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) ELSE CASE WHEN vt0.c2 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END END  NULLS FIRST, ((LAST_INSERT_ROWID())<<(((vt1.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE (vt1.c0 IN ())  WHEN ((((((((vt0.c0)AND(vt1.c1)))OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c1)) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) ELSE CASE WHEN vt0.c2 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END END  NULLS FIRST, ((LAST_INSERT_ROWID())<<(((vt1.c0) ISNULL)))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (x'' COLLATE BINARY) ORDER BY CASE (vt1.c0 IN ())  WHEN ((((((((vt0.c0)AND(vt1.c1)))OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c1)) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) ELSE CASE WHEN vt0.c2 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END END  NULLS FIRST, ((LAST_INSERT_ROWID())<<(((vt1.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE (vt1.c0 IN ())  WHEN ((((((((vt0.c0)AND(vt1.c1)))OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c1)) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) ELSE CASE WHEN vt0.c2 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END END  NULLS FIRST, ((LAST_INSERT_ROWID())<<(((vt1.c0) ISNULL)))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (x'' COLLATE BINARY) ORDER BY CASE (vt1.c0 IN ())  WHEN ((((((((vt0.c0)AND(vt1.c1)))OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c1)) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) ELSE CASE WHEN vt0.c2 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END END  NULLS FIRST, ((LAST_INSERT_ROWID())<<(((vt1.c0) ISNULL)))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (0.5948611476146757);
SELECT SUM(count) FROM (SELECT ALL ((0.5948611476146757) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.5948611476146757);
SELECT SUM(count) FROM (SELECT ALL ((0.5948611476146757) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.5948611476146757);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((vt1.c1)=(vt0.c2))))) ORDER BY ((x'')AND(vt0.c0)) ASC, CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN NULL ELSE vt1.c1 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c1)=(vt0.c2))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((x'')AND(vt0.c0)) ASC, CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN NULL ELSE vt1.c1 END COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((vt1.c1)=(vt0.c2))))) ORDER BY ((x'')AND(vt0.c0)) ASC, CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN NULL ELSE vt1.c1 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c1)=(vt0.c2))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((x'')AND(vt0.c0)) ASC, CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN NULL ELSE vt1.c1 END COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((vt1.c1)=(vt0.c2))))) ORDER BY ((x'')AND(vt0.c0)) ASC, CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN NULL ELSE vt1.c1 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c2);
SELECT * FROM t1, vt0, vt1 WHERE (CASE ((vt1.c1) IS TRUE)  WHEN (~ (vt0.c2)) THEN ((((((((((((vt1.c0)OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c1) IS TRUE)  WHEN (~ (vt0.c2)) THEN ((((((((((((vt1.c0)OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c2)) END) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (CASE ((vt1.c1) IS TRUE)  WHEN (~ (vt0.c2)) THEN ((((((((((((vt1.c0)OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c1) IS TRUE)  WHEN (~ (vt0.c2)) THEN ((((((((((((vt1.c0)OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c2)) END) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (CASE ((vt1.c1) IS TRUE)  WHEN (~ (vt0.c2)) THEN ((((((((((((vt1.c0)OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c2)) END);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((NOT (CASE vt0.c2  WHEN vt0.c1 THEN t1.c0 WHEN vt1.c0 THEN t1.c0 WHEN vt0.c2 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt0.c2  WHEN vt0.c1 THEN t1.c0 WHEN vt1.c0 THEN t1.c0 WHEN vt0.c2 THEN vt1.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((NOT (CASE vt0.c2  WHEN vt0.c1 THEN t1.c0 WHEN vt1.c0 THEN t1.c0 WHEN vt0.c2 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt0.c2  WHEN vt0.c1 THEN t1.c0 WHEN vt1.c0 THEN t1.c0 WHEN vt0.c2 THEN vt1.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((NOT (CASE vt0.c2  WHEN vt0.c1 THEN t1.c0 WHEN vt1.c0 THEN t1.c0 WHEN vt0.c2 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (CAST((- (vt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (CAST((- (vt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (CAST((- (vt1.c1)) AS TEXT));
SELECT ALL * FROM t1, vt1, vt0 WHERE (CAST(NULL AS NUMERIC)) ORDER BY LOWER(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY LOWER(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2))) ASC);
SELECT ALL * FROM t1, vt1, vt0 WHERE (CAST(NULL AS NUMERIC)) ORDER BY LOWER(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY LOWER(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2))) ASC);
SELECT ALL * FROM t1, vt1, vt0 WHERE (CAST(NULL AS NUMERIC)) ORDER BY LOWER(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2))) ASC;
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c2, vt0.c0, vt1.c1))>((vt1.c1, x'', vt0.c1))))/((('FALSE')>(vt1.c0))))) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((0.36337337443807116 IN ())) AND (JULIANDAY(vt0.c1, vt0.c2, vt0.c1, vt1.c0, vt0.c0))) DESC  NULLS FIRST, vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2, vt0.c0, vt1.c1))>((vt1.c1, x'', vt0.c1))))/((('FALSE')>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((0.36337337443807116 IN ())) AND (JULIANDAY(vt0.c1, vt0.c2, vt0.c1, vt1.c0, vt0.c0))) DESC  NULLS FIRST, vt1.c1 ASC);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c2, vt0.c0, vt1.c1))>((vt1.c1, x'', vt0.c1))))/((('FALSE')>(vt1.c0))))) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((0.36337337443807116 IN ())) AND (JULIANDAY(vt0.c1, vt0.c2, vt0.c1, vt1.c0, vt0.c0))) DESC  NULLS FIRST, vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2, vt0.c0, vt1.c1))>((vt1.c1, x'', vt0.c1))))/((('FALSE')>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((0.36337337443807116 IN ())) AND (JULIANDAY(vt0.c1, vt0.c2, vt0.c1, vt1.c0, vt0.c0))) DESC  NULLS FIRST, vt1.c1 ASC);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c2, vt0.c0, vt1.c1))>((vt1.c1, x'', vt0.c1))))/((('FALSE')>(vt1.c0))))) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((0.36337337443807116 IN ())) AND (JULIANDAY(vt0.c1, vt0.c2, vt0.c1, vt1.c0, vt0.c0))) DESC  NULLS FIRST, vt1.c1 ASC;
SELECT * FROM vt1 INDEXED BY i90, t1, vt0 WHERE (UNLIKELY(DISTINCT ((vt1.c0) NOT NULL))) ORDER BY ((vt1.c0 IN (vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((vt1.c0) NOT NULL))) IS TRUE)  as count FROM vt1 INDEXED BY i90, t1, vt0 ORDER BY ((vt1.c0 IN (vt0.c1)) IN ()));
SELECT * FROM vt1 INDEXED BY i90, t1, vt0 WHERE (UNLIKELY(DISTINCT ((vt1.c0) NOT NULL))) ORDER BY ((vt1.c0 IN (vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((vt1.c0) NOT NULL))) IS TRUE)  as count FROM vt1 INDEXED BY i90, t1, vt0 ORDER BY ((vt1.c0 IN (vt0.c1)) IN ()));
SELECT ALL * FROM vt1 INNER JOIN t1 ON ((CAST(vt0.c0 AS REAL))<<((+ (vt0.c1)))) INNER JOIN vt0 ON (((((vt0.c2, 1.65257912E8, vt0.c0)) NOT BETWEEN ((vt0.c2, t1.c0, vt0.c0)) AND ((vt1.c1, vt0.c1, t1.c0))))<=(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0)))) WHERE ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c2)) IN ())) ORDER BY t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c2)) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON ((CAST(vt0.c0 AS REAL))<<((+ (vt0.c1)))) INNER JOIN vt0 ON (((((vt0.c2, 1.65257912E8, vt0.c0)) NOT BETWEEN ((vt0.c2, t1.c0, vt0.c0)) AND ((vt1.c1, vt0.c1, t1.c0))))<=(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0)))) ORDER BY t1.c0  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN t1 ON ((CAST(vt0.c0 AS REAL))<<((+ (vt0.c1)))) INNER JOIN vt0 ON (((((vt0.c2, 1.65257912E8, vt0.c0)) NOT BETWEEN ((vt0.c2, t1.c0, vt0.c0)) AND ((vt1.c1, vt0.c1, t1.c0))))<=(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0)))) WHERE ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c2)) IN ())) ORDER BY t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c2)) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON ((CAST(vt0.c0 AS REAL))<<((+ (vt0.c1)))) INNER JOIN vt0 ON (((((vt0.c2, 1.65257912E8, vt0.c0)) NOT BETWEEN ((vt0.c2, t1.c0, vt0.c0)) AND ((vt1.c1, vt0.c1, t1.c0))))<=(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0)))) ORDER BY t1.c0  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN t1 ON ((CAST(vt0.c0 AS REAL))<<((+ (vt0.c1)))) INNER JOIN vt0 ON (((((vt0.c2, 1.65257912E8, vt0.c0)) NOT BETWEEN ((vt0.c2, t1.c0, vt0.c0)) AND ((vt1.c1, vt0.c1, t1.c0))))<=(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0)))) WHERE ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c2)) IN ())) ORDER BY t1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((HEX(vt1.c1))) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((HEX(vt1.c1))) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((HEX(vt1.c1))) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((HEX(vt1.c1))) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((HEX(vt1.c1))) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON t1.c0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON t1.c0);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON t1.c0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON t1.c0);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON t1.c0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL)) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c2)-(vt0.c0)), (vt0.c2 IN ()), (NOT (vt0.c2)))) AND ((((vt0.c1)>=(vt0.c1)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)), ((vt0.c1)OR(vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c2)-(vt0.c0)), (vt0.c2 IN ()), (NOT (vt0.c2)))) AND ((((vt0.c1)>=(vt0.c1)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)), ((vt0.c1)OR(vt0.c1))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL)) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c2)-(vt0.c0)), (vt0.c2 IN ()), (NOT (vt0.c2)))) AND ((((vt0.c1)>=(vt0.c1)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)), ((vt0.c1)OR(vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c2)-(vt0.c0)), (vt0.c2 IN ()), (NOT (vt0.c2)))) AND ((((vt0.c1)>=(vt0.c1)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)), ((vt0.c1)OR(vt0.c1))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL)) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c2)-(vt0.c0)), (vt0.c2 IN ()), (NOT (vt0.c2)))) AND ((((vt0.c1)>=(vt0.c1)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)), ((vt0.c1)OR(vt0.c1))))) ASC;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CAST('165257912' AS TEXT) WHERE (((0.689779359229203) NOT BETWEEN ('-2027041110') AND (((vt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((0.689779359229203) NOT BETWEEN ('-2027041110') AND (((vt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST('165257912' AS TEXT));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CAST('165257912' AS TEXT) WHERE (((0.689779359229203) NOT BETWEEN ('-2027041110') AND (((vt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((0.689779359229203) NOT BETWEEN ('-2027041110') AND (((vt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST('165257912' AS TEXT));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CAST('165257912' AS TEXT) WHERE (((0.689779359229203) NOT BETWEEN ('-2027041110') AND (((vt1.c1) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE (IFNULL((vt0.c2 IN ()), vt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((vt0.c2 IN ()), vt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL((vt0.c2 IN ()), vt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((vt0.c2 IN ()), vt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL((vt0.c2 IN ()), vt0.c2 COLLATE RTRIM));
SELECT ALL * FROM t1 INNER JOIN vt0 ON t1.c0 INNER JOIN vt1 ON (((((- (vt1.c0)))AND(((vt0.c0)>>(t1.c0)))))OR((vt0.c1 IN ()))) WHERE (CASE WHEN 0.30223478775570134 THEN ((((((((vt1.c1)OR('U\r*|\S%8')))AND(vt0.c1)))AND(vt1.c1)))AND(vt1.c0)) END) ORDER BY t1.c0  NULLS LAST, (((CASE WHEN vt1.c1 THEN x'' WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 ELSE NULL END))==((CASE WHEN 0xffffffff8b735014 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.30223478775570134 THEN ((((((((vt1.c1)OR('U\r*|\S%8')))AND(vt0.c1)))AND(vt1.c1)))AND(vt1.c0)) END) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON t1.c0 INNER JOIN vt1 ON (((((- (vt1.c0)))AND(((vt0.c0)>>(t1.c0)))))OR((vt0.c1 IN ()))) ORDER BY t1.c0  NULLS LAST, (((CASE WHEN vt1.c1 THEN x'' WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 ELSE NULL END))=((CASE WHEN 0Xffffffff8b735014 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END)))  NULLS FIRST);
SELECT ALL * FROM t1 INNER JOIN vt0 ON t1.c0 INNER JOIN vt1 ON (((((- (vt1.c0)))AND(((vt0.c0)>>(t1.c0)))))OR((vt0.c1 IN ()))) WHERE (CASE WHEN 0.30223478775570134 THEN ((((((((vt1.c1)OR('U\r*|\S%8')))AND(vt0.c1)))AND(vt1.c1)))AND(vt1.c0)) END) ORDER BY t1.c0  NULLS LAST, (((CASE WHEN vt1.c1 THEN x'' WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 ELSE NULL END))==((CASE WHEN 0xffffffff8b735014 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.30223478775570134 THEN ((((((((vt1.c1)OR('U\r*|\S%8')))AND(vt0.c1)))AND(vt1.c1)))AND(vt1.c0)) END) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON t1.c0 INNER JOIN vt1 ON (((((- (vt1.c0)))AND(((vt0.c0)>>(t1.c0)))))OR((vt0.c1 IN ()))) ORDER BY t1.c0  NULLS LAST, (((CASE WHEN vt1.c1 THEN x'' WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 ELSE NULL END))=((CASE WHEN 0Xffffffff8b735014 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END)))  NULLS FIRST);
SELECT ALL * FROM t1 INNER JOIN vt0 ON t1.c0 INNER JOIN vt1 ON (((((- (vt1.c0)))AND(((vt0.c0)>>(t1.c0)))))OR((vt0.c1 IN ()))) WHERE (CASE WHEN 0.30223478775570134 THEN ((((((((vt1.c1)OR('U\r*|\S%8')))AND(vt0.c1)))AND(vt1.c1)))AND(vt1.c0)) END) ORDER BY t1.c0  NULLS LAST, (((CASE WHEN vt1.c1 THEN x'' WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 ELSE NULL END))==((CASE WHEN 0xffffffff8b735014 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END)))  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) BETWEEN ((((t1.c0)LIKE(t1.c0)), ((t1.c0)LIKE(t1.c0)), (t1.c0 IN ()))) AND ((CAST(t1.c0 AS NUMERIC), t1.c0 COLLATE NOCASE, CASE x'c865'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))) ORDER BY CAST(x'' AS BLOB) COLLATE RTRIM ASC, t1.c0 ASC, t1.c0, (- (t1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((((t1.c0)LIKE(t1.c0)), ((t1.c0)LIKE(t1.c0)), (t1.c0 IN ()))) AND ((CAST(t1.c0 AS NUMERIC), t1.c0 COLLATE NOCASE, CASE x'c865'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))) IS TRUE)  as count FROM t1 ORDER BY CAST(x'' AS BLOB) COLLATE RTRIM ASC, t1.c0 ASC, t1.c0, (- (t1.c0))  NULLS LAST);
SELECT * FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) BETWEEN ((((t1.c0)LIKE(t1.c0)), ((t1.c0)LIKE(t1.c0)), (t1.c0 IN ()))) AND ((CAST(t1.c0 AS NUMERIC), t1.c0 COLLATE NOCASE, CASE x'c865'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))) ORDER BY CAST(x'' AS BLOB) COLLATE RTRIM ASC, t1.c0 ASC, t1.c0, (- (t1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((((t1.c0)LIKE(t1.c0)), ((t1.c0)LIKE(t1.c0)), (t1.c0 IN ()))) AND ((CAST(t1.c0 AS NUMERIC), t1.c0 COLLATE NOCASE, CASE x'c865'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))) IS TRUE)  as count FROM t1 ORDER BY CAST(x'' AS BLOB) COLLATE RTRIM ASC, t1.c0 ASC, t1.c0, (- (t1.c0))  NULLS LAST);
SELECT * FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) BETWEEN ((((t1.c0)LIKE(t1.c0)), ((t1.c0)LIKE(t1.c0)), (t1.c0 IN ()))) AND ((CAST(t1.c0 AS NUMERIC), t1.c0 COLLATE NOCASE, CASE x'c865'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))) ORDER BY CAST(x'' AS BLOB) COLLATE RTRIM ASC, t1.c0 ASC, t1.c0, (- (t1.c0))  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 CROSS JOIN vt1 ON (LOWER(DISTINCT vt0.c0) IN ()) WHERE ((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)) IN ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)) IN ((vt1.c0 IN ())))) IS TRUE)  as count FROM t1, vt0 CROSS JOIN vt1 ON (LOWER(DISTINCT vt0.c0) IN ()));
SELECT COUNT(*) FROM t1, vt0 CROSS JOIN vt1 ON (LOWER(DISTINCT vt0.c0) IN ()) WHERE ((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)) IN ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)) IN ((vt1.c0 IN ())))) IS TRUE)  as count FROM t1, vt0 CROSS JOIN vt1 ON (LOWER(DISTINCT vt0.c0) IN ()));
SELECT COUNT(*) FROM t1, vt0 CROSS JOIN vt1 ON (LOWER(DISTINCT vt0.c0) IN ()) WHERE ((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)) IN ((vt1.c0 IN ()))));
SELECT * FROM vt1, t1, vt0 WHERE (x'') ORDER BY ((((vt1.c0)>>(vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((((vt1.c0)>>(vt1.c0))) NOTNULL));
SELECT * FROM vt1, t1, vt0 WHERE (x'') ORDER BY ((((vt1.c0)>>(vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((((vt1.c0)>>(vt1.c0))) NOTNULL));
SELECT * FROM vt1, t1, vt0 WHERE (x'') ORDER BY ((((vt1.c0)>>(vt1.c0))) NOTNULL);
SELECT * FROM t1, vt1 CROSS JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN t1.c0 END)OR(vt1.c1 COLLATE BINARY)))AND(vt1.c1)) WHERE ((~ ('-1110748678')));
SELECT SUM(count) FROM (SELECT ALL (((~ ('-1110748678'))) IS TRUE)  as count FROM t1, vt1 CROSS JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN t1.c0 END)OR(vt1.c1 COLLATE BINARY)))AND(vt1.c1)));
SELECT * FROM t1, vt1 CROSS JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN t1.c0 END)OR(vt1.c1 COLLATE BINARY)))AND(vt1.c1)) WHERE ((~ ('-1110748678')));
SELECT SUM(count) FROM (SELECT ALL (((~ ('-1110748678'))) IS TRUE)  as count FROM t1, vt1 CROSS JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN t1.c0 END)OR(vt1.c1 COLLATE BINARY)))AND(vt1.c1)));
SELECT * FROM t1, vt1 CROSS JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN t1.c0 END)OR(vt1.c1 COLLATE BINARY)))AND(vt1.c1)) WHERE ((~ ('-1110748678')));
SELECT * FROM t1 WHERE (((t1.c0)IS(t1.c0)) COLLATE NOCASE) ORDER BY ((((0.9263849780910981)>=(t1.c0))) NOTNULL)  NULLS FIRST, (((((t1.c0))>((t1.c0))))/(CHANGES()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)IS(t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((((0.9263849780910981)>=(t1.c0))) NOTNULL)  NULLS FIRST, (((((t1.c0))>((t1.c0))))/(CHANGES()))  NULLS FIRST);
SELECT * FROM t1 WHERE (((t1.c0)IS(t1.c0)) COLLATE NOCASE) ORDER BY ((((0.9263849780910981)>=(t1.c0))) NOTNULL)  NULLS FIRST, (((((t1.c0))>((t1.c0))))/(CHANGES()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)IS(t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((((0.9263849780910981)>=(t1.c0))) NOTNULL)  NULLS FIRST, (((((t1.c0))>((t1.c0))))/(CHANGES()))  NULLS FIRST);
SELECT * FROM t1 WHERE (((t1.c0)IS(t1.c0)) COLLATE NOCASE) ORDER BY ((((0.9263849780910981)>=(t1.c0))) NOTNULL)  NULLS FIRST, (((((t1.c0))>((t1.c0))))/(CHANGES()))  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt1 WHERE ((((vt1.c0)) BETWEEN (((((t1.c0))<=((NULL))))) AND ((((NULL)==(vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((((t1.c0))<=((NULL))))) AND ((((NULL)=(vt1.c1)))))) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE ((((vt1.c0)) BETWEEN (((((t1.c0))<=((NULL))))) AND ((((NULL)==(vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((((t1.c0))<=((NULL))))) AND ((((NULL)=(vt1.c1)))))) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE ((((vt1.c0)) BETWEEN (((((t1.c0))<=((NULL))))) AND ((((NULL)==(vt1.c1))))));
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c1)>=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c1)>=(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c1)>=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c1)>=(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c1)>=(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i98 WHERE ((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))))!=((((('', vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))))<>((((('', vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c0))))))) IS TRUE)  as count FROM vt1 INDEXED BY i98);
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i98 WHERE ((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))))!=((((('', vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))))<>((((('', vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c0))))))) IS TRUE)  as count FROM vt1 INDEXED BY i98);
SELECT ALL * FROM t1, vt0, vt1 WHERE (CAST(CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c2 WHEN t1.c0 THEN vt0.c2 ELSE vt1.c1 END AS INTEGER)) ORDER BY ((((((vt0.c0) IS TRUE))OR((~ (vt1.c0)))))AND(((NULL)*(-1778981540)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c2 WHEN t1.c0 THEN vt0.c2 ELSE vt1.c1 END AS INTEGER)) IS TRUE)  as count FROM t1, vt0 NOT INDEXED, vt1 ORDER BY ((((((vt0.c0) IS TRUE))OR((~ (vt1.c0)))))AND(((NULL)*(-1778981540)))) DESC  NULLS LAST);
SELECT ALL * FROM t1, vt0, vt1 WHERE (CAST(CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c2 WHEN t1.c0 THEN vt0.c2 ELSE vt1.c1 END AS INTEGER)) ORDER BY ((((((vt0.c0) IS TRUE))OR((~ (vt1.c0)))))AND(((NULL)*(-1778981540)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c2 WHEN t1.c0 THEN vt0.c2 ELSE vt1.c1 END AS INTEGER)) IS TRUE)  as count FROM t1, vt0 NOT INDEXED, vt1 ORDER BY ((((((vt0.c0) IS TRUE))OR((~ (vt1.c0)))))AND(((NULL)*(-1778981540)))) DESC  NULLS LAST);
SELECT ALL * FROM t1, vt0, vt1 WHERE (CAST(CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c2 WHEN t1.c0 THEN vt0.c2 ELSE vt1.c1 END AS INTEGER)) ORDER BY ((((((vt0.c0) IS TRUE))OR((~ (vt1.c0)))))AND(((NULL)*(-1778981540)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((x'' IN ())) ORDER BY ((vt0.c0) NOTNULL)  NULLS FIRST, ((CASE vt0.c1  WHEN vt0.c0 THEN t1.c0 END)/(UNLIKELY(DISTINCT vt0.c2)));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0) NOTNULL)  NULLS FIRST, ((CASE vt0.c1  WHEN vt0.c0 THEN t1.c0 END)/(UNLIKELY(DISTINCT vt0.c2))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((x'' IN ())) ORDER BY ((vt0.c0) NOTNULL)  NULLS FIRST, ((CASE vt0.c1  WHEN vt0.c0 THEN t1.c0 END)/(UNLIKELY(DISTINCT vt0.c2)));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0) NOTNULL)  NULLS FIRST, ((CASE vt0.c1  WHEN vt0.c0 THEN t1.c0 END)/(UNLIKELY(DISTINCT vt0.c2))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((x'' IN ())) ORDER BY ((vt0.c0) NOTNULL)  NULLS FIRST, ((CASE vt0.c1  WHEN vt0.c0 THEN t1.c0 END)/(UNLIKELY(DISTINCT vt0.c2)));
SELECT ALL * FROM vt1, vt0 WHERE (ROUND(vt0.c0, vt1.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((ROUND(vt0.c0, vt1.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (ROUND(vt0.c0, vt1.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((ROUND(vt0.c0, vt1.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (ROUND(vt0.c0, vt1.c1) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((((TRIM(DISTINCT vt0.c2))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR((NOT (vt0.c2))))) ORDER BY (('4z')IS(vt0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT vt0.c2))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR((NOT (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY (('4z')IS(vt0.c2)) COLLATE RTRIM DESC);
SELECT ALL * FROM vt0 WHERE (((((TRIM(DISTINCT vt0.c2))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR((NOT (vt0.c2))))) ORDER BY (('4z')IS(vt0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT vt0.c2))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR((NOT (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY (('4z')IS(vt0.c2)) COLLATE RTRIM DESC);
SELECT ALL * FROM vt0 WHERE (((((TRIM(DISTINCT vt0.c2))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR((NOT (vt0.c2))))) ORDER BY (('4z')IS(vt0.c2)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (((t1.c0)) NOT BETWEEN ((((NULL) BETWEEN (t1.c0) AND (t1.c0)))) AND ((t1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)) NOT BETWEEN ((((NULL) BETWEEN (t1.c0) AND (t1.c0)))) AND ((t1.c0))) DESC);
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (((t1.c0)) NOT BETWEEN ((((NULL) BETWEEN (t1.c0) AND (t1.c0)))) AND ((t1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)) NOT BETWEEN ((((NULL) BETWEEN (t1.c0) AND (t1.c0)))) AND ((t1.c0))) DESC);
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (((t1.c0)) NOT BETWEEN ((((NULL) BETWEEN (t1.c0) AND (t1.c0)))) AND ((t1.c0))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)-(vt0.c0)) IN ((~ (vt0.c1))))) ORDER BY vt0.c1  NULLS FIRST, ((((SQLITE_SOURCE_ID())AND(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 END)))OR(((vt0.c0) BETWEEN (x'') AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)-(vt0.c0)) IN ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST, ((((SQLITE_SOURCE_ID())AND(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 END)))OR(((vt0.c0) BETWEEN (x'') AND (vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)-(vt0.c0)) IN ((~ (vt0.c1))))) ORDER BY vt0.c1  NULLS FIRST, ((((SQLITE_SOURCE_ID())AND(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 END)))OR(((vt0.c0) BETWEEN (x'') AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)-(vt0.c0)) IN ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST, ((((SQLITE_SOURCE_ID())AND(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 END)))OR(((vt0.c0) BETWEEN (x'') AND (vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)-(vt0.c0)) IN ((~ (vt0.c1))))) ORDER BY vt0.c1  NULLS FIRST, ((((SQLITE_SOURCE_ID())AND(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 END)))OR(((vt0.c0) BETWEEN (x'') AND (vt0.c1))));
SELECT * FROM vt0, t1, vt1 WHERE ((NOT (CASE WHEN vt0.c1 THEN vt1.c0 END))) ORDER BY (NOT (((vt1.c1)<<(vt1.c0)))) ASC  NULLS FIRST, CASE WHEN ((((vt0.c0)OR(t1.c0)))AND(vt0.c0)) THEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 END WHEN DATETIME(vt0.c2, vt1.c1, '-646149582') THEN ROUND(0.7045639177198322, t1.c0) WHEN NULL THEN x'' COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY (NOT (((vt1.c1)<<(vt1.c0)))) ASC  NULLS FIRST, CASE WHEN ((((vt0.c0)OR(t1.c0)))AND(vt0.c0)) THEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 END WHEN DATETIME(vt0.c2, vt1.c1, '-646149582') THEN ROUND(0.7045639177198322, t1.c0) WHEN NULL THEN x'' COLLATE BINARY END);
SELECT * FROM vt0, t1, vt1 WHERE ((NOT (CASE WHEN vt0.c1 THEN vt1.c0 END))) ORDER BY (NOT (((vt1.c1)<<(vt1.c0)))) ASC  NULLS FIRST, CASE WHEN ((((vt0.c0)OR(t1.c0)))AND(vt0.c0)) THEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 END WHEN DATETIME(vt0.c2, vt1.c1, '-646149582') THEN ROUND(0.7045639177198322, t1.c0) WHEN NULL THEN x'' COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY (NOT (((vt1.c1)<<(vt1.c0)))) ASC  NULLS FIRST, CASE WHEN ((((vt0.c0)OR(t1.c0)))AND(vt0.c0)) THEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 END WHEN DATETIME(vt0.c2, vt1.c1, '-646149582') THEN ROUND(0.7045639177198322, t1.c0) WHEN NULL THEN x'' COLLATE BINARY END);
SELECT * FROM vt0, t1, vt1 WHERE ((NOT (CASE WHEN vt0.c1 THEN vt1.c0 END))) ORDER BY (NOT (((vt1.c1)<<(vt1.c0)))) ASC  NULLS FIRST, CASE WHEN ((((vt0.c0)OR(t1.c0)))AND(vt0.c0)) THEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 END WHEN DATETIME(vt0.c2, vt1.c1, '-646149582') THEN ROUND(0.7045639177198322, t1.c0) WHEN NULL THEN x'' COLLATE BINARY END;
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c1 IN (vt0.c0)))) AND (((vt0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((vt0.c1 IN (vt0.c0)))) AND (((vt0.c2 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c1 IN (vt0.c0)))) AND (((vt0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((vt0.c1 IN (vt0.c0)))) AND (((vt0.c2 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c1 IN (vt0.c0)))) AND (((vt0.c2 IN ())))));
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((NOT (((((vt1.c1)AND(vt0.c1)))OR(vt0.c2))))) ORDER BY (((((t1.c0)<>(vt1.c0))))>=((((vt1.c0)&(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt1.c1)AND(vt0.c1)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY (((((t1.c0)<>(vt1.c0))))>=((((vt1.c0)&(vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((NOT (((((vt1.c1)AND(vt0.c1)))OR(vt0.c2))))) ORDER BY (((((t1.c0)<>(vt1.c0))))>=((((vt1.c0)&(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt1.c1)AND(vt0.c1)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY (((((t1.c0)<>(vt1.c0))))>=((((vt1.c0)&(vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((NOT (((((vt1.c1)AND(vt0.c1)))OR(vt0.c2))))) ORDER BY (((((t1.c0)<>(vt1.c0))))>=((((vt1.c0)&(vt0.c0)))))  NULLS LAST;
SELECT * FROM t1, vt0, vt1 WHERE (((((((((vt0.c0 COLLATE RTRIM)OR((((vt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((''))))))OR((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c1)))))AND(HEX(vt0.c2)))) ORDER BY 'g!iZd\ncz['  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE RTRIM)OR((((vt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((''))))))OR((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c1)))))AND(HEX(vt0.c2)))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY 'g!iZd\ncz['  NULLS LAST);
SELECT * FROM t1, vt0, vt1 WHERE (((((((((vt0.c0 COLLATE RTRIM)OR((((vt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((''))))))OR((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c1)))))AND(HEX(vt0.c2)))) ORDER BY 'g!iZd\ncz['  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE RTRIM)OR((((vt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((''))))))OR((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c1)))))AND(HEX(vt0.c2)))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY 'g!iZd\ncz['  NULLS LAST);
SELECT * FROM t1, vt0, vt1 WHERE (((((((((vt0.c0 COLLATE RTRIM)OR((((vt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((''))))))OR((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c1)))))AND(HEX(vt0.c2)))) ORDER BY 'g!iZd\ncz['  NULLS LAST;
SELECT ALL * FROM vt1, vt0, t1 WHERE (x'986e') ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) BETWEEN ((vt0.c2 IN ())) AND ('1390617228'));
SELECT SUM(count) FROM (SELECT ALL ((x'986e') IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) BETWEEN ((vt0.c2 IN ())) AND ('1390617228')));
SELECT ALL * FROM vt1, vt0, t1 WHERE (x'986e') ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) BETWEEN ((vt0.c2 IN ())) AND ('1390617228'));
SELECT SUM(count) FROM (SELECT ALL ((x'986e') IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) BETWEEN ((vt0.c2 IN ())) AND ('1390617228')));
SELECT ALL * FROM vt1, vt0, t1 WHERE (x'986e') ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) BETWEEN ((vt0.c2 IN ())) AND ('1390617228'));
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((~ (vt0.c2)))>(((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c2)))>(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((~ (vt0.c2)))>(((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c2)))>(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((~ (vt0.c2)))>(((vt0.c0)IS(vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (CAST((x'' IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST((x'' IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST((x'' IN ()) AS NUMERIC));
SELECT ALL * FROM t1 WHERE (((((t1.c0)>(t1.c0)))>(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY (((t1.c0)) BETWEEN (('767495212' COLLATE NOCASE)) AND ((t1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)>(t1.c0)))>(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)) BETWEEN (('767495212' COLLATE NOCASE)) AND ((t1.c0))) ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((t1.c0)>(t1.c0)))>(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY (((t1.c0)) BETWEEN (('767495212' COLLATE NOCASE)) AND ((t1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)>(t1.c0)))>(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)) BETWEEN (('767495212' COLLATE NOCASE)) AND ((t1.c0))) ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((t1.c0)>(t1.c0)))>(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY (((t1.c0)) BETWEEN (('767495212' COLLATE NOCASE)) AND ((t1.c0))) ASC  NULLS LAST;
SELECT * FROM t1, vt1, vt0 WHERE (CASE (vt1.c1 IN ())  WHEN (((vt1.c0))>=((vt0.c1))) THEN ((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY (~ ('454004882')) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt1.c1 IN ())  WHEN (((vt1.c0))>=((vt0.c1))) THEN ((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (~ ('454004882')) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM t1, vt1, vt0 WHERE (CASE (vt1.c1 IN ())  WHEN (((vt1.c0))>=((vt0.c1))) THEN ((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY (~ ('454004882')) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt1.c1 IN ())  WHEN (((vt1.c0))>=((vt0.c1))) THEN ((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (~ ('454004882')) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM t1, vt1, vt0 WHERE (CASE (vt1.c1 IN ())  WHEN (((vt1.c0))>=((vt0.c1))) THEN ((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY (~ ('454004882')) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (0Xffffffff9d48b182);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff9d48b182) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0Xffffffff9d48b182);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff9d48b182) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0Xffffffff9d48b182);
SELECT * FROM t1 WHERE (x'') ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 ORDER BY NULL  NULLS FIRST);
SELECT * FROM t1 WHERE (x'') ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 ORDER BY NULL  NULLS FIRST);
SELECT * FROM t1 WHERE (x'') ORDER BY NULL  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((IFNULL(vt0.c2, vt0.c2) IN ())) ORDER BY json_remove(((vt0.c1) NOT NULL), CASE WHEN vt1.c1 THEN vt0.c1 ELSE vt0.c2 END);
SELECT SUM(count) FROM (SELECT (((IFNULL(vt0.c2, vt0.c2) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_remove(((vt0.c1) NOT NULL), CASE WHEN vt1.c1 THEN vt0.c1 ELSE vt0.c2 END));
SELECT * FROM vt1, vt0 WHERE ((IFNULL(vt0.c2, vt0.c2) IN ())) ORDER BY json_remove(((vt0.c1) NOT NULL), CASE WHEN vt1.c1 THEN vt0.c1 ELSE vt0.c2 END);
SELECT SUM(count) FROM (SELECT (((IFNULL(vt0.c2, vt0.c2) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_remove(((vt0.c1) NOT NULL), CASE WHEN vt1.c1 THEN vt0.c1 ELSE vt0.c2 END));
SELECT ALL * FROM t1, vt0, vt1 WHERE (((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c2)))OR(((vt0.c2)+(t1.c0)))))OR(((((vt0.c2)AND(vt0.c2)))AND(vt0.c2))))) ORDER BY TRIM(HEX(DISTINCT vt0.c1), ((vt1.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c2)))OR(((vt0.c2)+(t1.c0)))))OR(((((vt0.c2)AND(vt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY TRIM(HEX(DISTINCT vt0.c1), ((vt1.c0) ISNULL)));
SELECT ALL * FROM t1, vt0, vt1 WHERE (((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c2)))OR(((vt0.c2)+(t1.c0)))))OR(((((vt0.c2)AND(vt0.c2)))AND(vt0.c2))))) ORDER BY TRIM(HEX(DISTINCT vt0.c1), ((vt1.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c2)))OR(((vt0.c2)+(t1.c0)))))OR(((((vt0.c2)AND(vt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY TRIM(HEX(DISTINCT vt0.c1), ((vt1.c0) ISNULL)));
SELECT ALL * FROM t1, vt0, vt1 WHERE (((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c2)))OR(((vt0.c2)+(t1.c0)))))OR(((((vt0.c2)AND(vt0.c2)))AND(vt0.c2))))) ORDER BY TRIM(HEX(DISTINCT vt0.c1), ((vt1.c0) ISNULL));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON CAST((((vt0.c1, vt0.c0, vt0.c2))>=((vt0.c1, vt1.c0, vt0.c0))) AS BLOB) WHERE (((ABS(vt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt1 NOT INDEXED CROSS JOIN vt0 ON CAST((((vt0.c1, vt0.c0, vt0.c2))>=((vt0.c1, vt1.c0, vt0.c0))) AS BLOB));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON CAST((((vt0.c1, vt0.c0, vt0.c2))>=((vt0.c1, vt1.c0, vt0.c0))) AS BLOB) WHERE (((ABS(vt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt1 NOT INDEXED CROSS JOIN vt0 ON CAST((((vt0.c1, vt0.c0, vt0.c2))>=((vt0.c1, vt1.c0, vt0.c0))) AS BLOB));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON CAST((((vt0.c1, vt0.c0, vt0.c2))>=((vt0.c1, vt1.c0, vt0.c0))) AS BLOB) WHERE (((ABS(vt0.c0)) ISNULL));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((0.9081342107819039)AND(t1.c0)))OR(CASE vt0.c0  WHEN t1.c0 THEN vt0.c2 ELSE vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((0.9081342107819039)AND(t1.c0)))OR(CASE vt0.c0  WHEN t1.c0 THEN vt0.c2 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((0.9081342107819039)AND(t1.c0)))OR(CASE vt0.c0  WHEN t1.c0 THEN vt0.c2 ELSE vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((0.9081342107819039)AND(t1.c0)))OR(CASE vt0.c0  WHEN t1.c0 THEN vt0.c2 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((0.9081342107819039)AND(t1.c0)))OR(CASE vt0.c0  WHEN t1.c0 THEN vt0.c2 ELSE vt0.c2 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c2 AS NUMERIC)) IS FALSE)) ORDER BY load_extension(HEX(vt0.c1), (vt0.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY load_extension(HEX(vt0.c1), (vt0.c0 IN ())) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c2 AS NUMERIC)) IS FALSE)) ORDER BY load_extension(HEX(vt0.c1), (vt0.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY load_extension(HEX(vt0.c1), (vt0.c0 IN ())) DESC);
SELECT * FROM vt1 INDEXED BY i90 NATURAL JOIN vt0 WHERE (((((vt0.c2)-(vt0.c2))) IS FALSE)) ORDER BY ((vt0.c1 IN (vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)-(vt0.c2))) IS FALSE)) IS TRUE)  as count FROM vt1 INDEXED BY i90 NATURAL JOIN vt0 ORDER BY ((vt0.c1 IN (vt1.c0)) IN ())  NULLS FIRST);
SELECT * FROM vt1 INDEXED BY i90 NATURAL JOIN vt0 WHERE (((((vt0.c2)-(vt0.c2))) IS FALSE)) ORDER BY ((vt0.c1 IN (vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)-(vt0.c2))) IS FALSE)) IS TRUE)  as count FROM vt1 INDEXED BY i90 NATURAL JOIN vt0 ORDER BY ((vt0.c1 IN (vt1.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((((((CAST(vt0.c0 AS TEXT))AND((vt1.c0 IN ()))))OR(vt0.c0)))OR((((vt0.c2))<=((vt0.c2))))))OR((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt1.c1, vt1.c1)) AND ((vt0.c0, t1.c0, vt1.c1))))) INNER JOIN t1 ON LIKELIHOOD(vt1.c0 COLLATE BINARY, 0.34730320904483736) WHERE ((((vt0.c2)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c2) IS FALSE))))) ORDER BY ((((t1.c0) NOT NULL))-(vt1.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c2) IS FALSE))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((((((CAST(vt0.c0 AS TEXT))AND((vt1.c0 IN ()))))OR(vt0.c0)))OR((((vt0.c2))<=((vt0.c2))))))OR((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt1.c1, vt1.c1)) AND ((vt0.c0, t1.c0, vt1.c1))))) INNER JOIN t1 ON LIKELIHOOD(vt1.c0 COLLATE BINARY, 0.34730320904483736) ORDER BY ((((t1.c0) NOT NULL))-(vt1.c1 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((((((CAST(vt0.c0 AS TEXT))AND((vt1.c0 IN ()))))OR(vt0.c0)))OR((((vt0.c2))<=((vt0.c2))))))OR((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt1.c1, vt1.c1)) AND ((vt0.c0, t1.c0, vt1.c1))))) INNER JOIN t1 ON LIKELIHOOD(vt1.c0 COLLATE BINARY, 0.34730320904483736) WHERE ((((vt0.c2)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c2) IS FALSE))))) ORDER BY ((((t1.c0) NOT NULL))-(vt1.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c2) IS FALSE))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((((((CAST(vt0.c0 AS TEXT))AND((vt1.c0 IN ()))))OR(vt0.c0)))OR((((vt0.c2))<=((vt0.c2))))))OR((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt1.c1, vt1.c1)) AND ((vt0.c0, t1.c0, vt1.c1))))) INNER JOIN t1 ON LIKELIHOOD(vt1.c0 COLLATE BINARY, 0.34730320904483736) ORDER BY ((((t1.c0) NOT NULL))-(vt1.c1 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((((((CAST(vt0.c0 AS TEXT))AND((vt1.c0 IN ()))))OR(vt0.c0)))OR((((vt0.c2))<=((vt0.c2))))))OR((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt1.c1, vt1.c1)) AND ((vt0.c0, t1.c0, vt1.c1))))) INNER JOIN t1 ON LIKELIHOOD(vt1.c0 COLLATE BINARY, 0.34730320904483736) WHERE ((((vt0.c2)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c2) IS FALSE))))) ORDER BY ((((t1.c0) NOT NULL))-(vt1.c1 COLLATE RTRIM)) ASC;
SELECT ALL * FROM t1, vt0 WHERE ((- (((vt0.c2) IS FALSE)))) ORDER BY 0X1810dd23 ASC, LOWER(t1.c0) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c2) IS FALSE)))) IS TRUE)  as count FROM t1, vt0 ORDER BY 0x1810dd23 ASC, LOWER(t1.c0) COLLATE NOCASE);
SELECT ALL * FROM t1, vt0 WHERE ((- (((vt0.c2) IS FALSE)))) ORDER BY 0X1810dd23 ASC, LOWER(t1.c0) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c2) IS FALSE)))) IS TRUE)  as count FROM t1, vt0 ORDER BY 0x1810dd23 ASC, LOWER(t1.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((CAST(t1.c0 AS REAL))OR(t1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS REAL))OR(t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((CAST(t1.c0 AS REAL))OR(t1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS REAL))OR(t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((CAST(t1.c0 AS REAL))OR(t1.c0 COLLATE BINARY)));
SELECT * FROM vt1, vt0 WHERE ((((((vt1.c1))!=((vt0.c2)))) IS FALSE)) ORDER BY (vt1.c0 IN ()) COLLATE RTRIM  NULLS FIRST, (LIKELIHOOD(DISTINCT vt0.c2, 0.2762663951913109) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1))<>((vt0.c2)))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt1.c0 IN ()) COLLATE RTRIM  NULLS FIRST, (LIKELIHOOD(DISTINCT vt0.c2, 0.2762663951913109) IN ()) ASC);
SELECT * FROM vt1, vt0 WHERE ((((((vt1.c1))!=((vt0.c2)))) IS FALSE)) ORDER BY (vt1.c0 IN ()) COLLATE RTRIM  NULLS FIRST, (LIKELIHOOD(DISTINCT vt0.c2, 0.2762663951913109) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1))<>((vt0.c2)))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt1.c0 IN ()) COLLATE RTRIM  NULLS FIRST, (LIKELIHOOD(DISTINCT vt0.c2, 0.2762663951913109) IN ()) ASC);
SELECT * FROM vt1, vt0 WHERE ((((((vt1.c1))!=((vt0.c2)))) IS FALSE)) ORDER BY (vt1.c0 IN ()) COLLATE RTRIM  NULLS FIRST, (LIKELIHOOD(DISTINCT vt0.c2, 0.2762663951913109) IN ()) ASC;
SELECT * FROM vt0, t1 WHERE (((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) ORDER BY NULL DESC, CAST(vt0.c0 AS TEXT) COLLATE BINARY DESC, ((((x'989c')|(vt0.c2))) BETWEEN (vt0.c1) AND (CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'42f7' WHEN vt0.c2 THEN vt0.c1 ELSE 0.6819489022590356 END)) DESC  NULLS LAST, t1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t1 ORDER BY NULL DESC, CAST(vt0.c0 AS TEXT) COLLATE BINARY DESC, ((((x'989c')|(vt0.c2))) BETWEEN (vt0.c1) AND (CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'42f7' WHEN vt0.c2 THEN vt0.c1 ELSE 0.6819489022590356 END)) DESC  NULLS LAST, t1.c0 ASC  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) ORDER BY NULL DESC, CAST(vt0.c0 AS TEXT) COLLATE BINARY DESC, ((((x'989c')|(vt0.c2))) BETWEEN (vt0.c1) AND (CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'42f7' WHEN vt0.c2 THEN vt0.c1 ELSE 0.6819489022590356 END)) DESC  NULLS LAST, t1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t1 ORDER BY NULL DESC, CAST(vt0.c0 AS TEXT) COLLATE BINARY DESC, ((((x'989c')|(vt0.c2))) BETWEEN (vt0.c1) AND (CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'42f7' WHEN vt0.c2 THEN vt0.c1 ELSE 0.6819489022590356 END)) DESC  NULLS LAST, t1.c0 ASC  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) ORDER BY NULL DESC, CAST(vt0.c0 AS TEXT) COLLATE BINARY DESC, ((((x'989c')|(vt0.c2))) BETWEEN (vt0.c1) AND (CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'42f7' WHEN vt0.c2 THEN vt0.c1 ELSE 0.6819489022590356 END)) DESC  NULLS LAST, t1.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((CASE t1.c0  WHEN vt0.c2 THEN vt1.c1 END IN ())) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (NULLIF(DISTINCT vt0.c1, vt0.c2)) AND (LIKELY(vt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t1.c0  WHEN vt0.c2 THEN vt1.c1 END IN ())) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (NULLIF(DISTINCT vt0.c1, vt0.c2)) AND (LIKELY(vt0.c2))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((CASE t1.c0  WHEN vt0.c2 THEN vt1.c1 END IN ())) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (NULLIF(DISTINCT vt0.c1, vt0.c2)) AND (LIKELY(vt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t1.c0  WHEN vt0.c2 THEN vt1.c1 END IN ())) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (NULLIF(DISTINCT vt0.c1, vt0.c2)) AND (LIKELY(vt0.c2))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((CASE t1.c0  WHEN vt0.c2 THEN vt1.c1 END IN ())) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (NULLIF(DISTINCT vt0.c1, vt0.c2)) AND (LIKELY(vt0.c2))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, t1 WHERE (((((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))OR((+ (t1.c0)))))AND(((vt1.c0) IS FALSE))))OR((+ (vt1.c1)))))AND(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))OR((+ (t1.c0)))))AND(((vt1.c0) IS FALSE))))OR((+ (vt1.c1)))))AND(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE (((((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))OR((+ (t1.c0)))))AND(((vt1.c0) IS FALSE))))OR((+ (vt1.c1)))))AND(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))OR((+ (t1.c0)))))AND(((vt1.c0) IS FALSE))))OR((+ (vt1.c1)))))AND(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE (((((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))OR((+ (t1.c0)))))AND(((vt1.c0) IS FALSE))))OR((+ (vt1.c1)))))AND(((vt1.c0) IS TRUE))));
SELECT ALL * FROM t1, vt1, vt0 WHERE ((((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))))==(CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c2 THEN vt1.c1 WHEN vt0.c2 THEN 'Z6E ' WHEN t1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((((vt0.c0 IN (x'')))AND((NOT (vt0.c0)))))AND(CASE vt0.c0  WHEN '-502592279' THEN vt1.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))))==(CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c2 THEN vt1.c1 WHEN vt0.c2 THEN 'Z6E ' WHEN t1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (((((vt0.c0 IN (x'')))AND((NOT (vt0.c0)))))AND(CASE vt0.c0  WHEN '-502592279' THEN vt1.c1 END)) DESC  NULLS LAST);
SELECT ALL * FROM t1, vt1, vt0 WHERE ((((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))))==(CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c2 THEN vt1.c1 WHEN vt0.c2 THEN 'Z6E ' WHEN t1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((((vt0.c0 IN (x'')))AND((NOT (vt0.c0)))))AND(CASE vt0.c0  WHEN '-502592279' THEN vt1.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))))==(CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c2 THEN vt1.c1 WHEN vt0.c2 THEN 'Z6E ' WHEN t1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (((((vt0.c0 IN (x'')))AND((NOT (vt0.c0)))))AND(CASE vt0.c0  WHEN '-502592279' THEN vt1.c1 END)) DESC  NULLS LAST);
SELECT ALL * FROM t1, vt1, vt0 WHERE ((((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))))==(CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c2 THEN vt1.c1 WHEN vt0.c2 THEN 'Z6E ' WHEN t1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((((vt0.c0 IN (x'')))AND((NOT (vt0.c0)))))AND(CASE vt0.c0  WHEN '-502592279' THEN vt1.c1 END)) DESC  NULLS LAST;
SELECT * FROM t1, vt0 WHERE (((((((((((vt0.c2)IS NOT(vt0.c1)))AND(((vt0.c0) IS TRUE))))AND(((((((((t1.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))))OR(TIME(vt0.c2, t1.c0, '-293503831'))))OR(CAST(NULL AS INTEGER)))) ORDER BY (~ (0.6841647413147162)), 'g!iZd\ncz['  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c2)IS NOT(vt0.c1)))AND(((vt0.c0) IS TRUE))))AND(((((((((t1.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))))OR(TIME(vt0.c2, t1.c0, '-293503831'))))OR(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM t1, vt0 ORDER BY (~ (0.6841647413147162)), 'g!iZd\ncz['  NULLS LAST);
SELECT * FROM t1, vt0 WHERE (((((((((((vt0.c2)IS NOT(vt0.c1)))AND(((vt0.c0) IS TRUE))))AND(((((((((t1.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))))OR(TIME(vt0.c2, t1.c0, '-293503831'))))OR(CAST(NULL AS INTEGER)))) ORDER BY (~ (0.6841647413147162)), 'g!iZd\ncz['  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c2)IS NOT(vt0.c1)))AND(((vt0.c0) IS TRUE))))AND(((((((((t1.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))))OR(TIME(vt0.c2, t1.c0, '-293503831'))))OR(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM t1, vt0 ORDER BY (~ (0.6841647413147162)), 'g!iZd\ncz['  NULLS LAST);
SELECT * FROM t1, vt0 WHERE (((((((((((vt0.c2)IS NOT(vt0.c1)))AND(((vt0.c0) IS TRUE))))AND(((((((((t1.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))))OR(TIME(vt0.c2, t1.c0, '-293503831'))))OR(CAST(NULL AS INTEGER)))) ORDER BY (~ (0.6841647413147162)), 'g!iZd\ncz['  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)+(vt1.c1)))<((vt1.c0 IN (vt1.c1, x'')))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)+(vt1.c1)))<((vt1.c0 IN (vt1.c1, x''))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)+(vt1.c1)))<((vt1.c0 IN (vt1.c1, x'')))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)+(vt1.c1)))<((vt1.c0 IN (vt1.c1, x''))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)+(vt1.c1)))<((vt1.c0 IN (vt1.c1, x'')))));
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY (~ (vt1.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c1)) COLLATE NOCASE);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY (~ (vt1.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c1)) COLLATE NOCASE);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY (~ (vt1.c1)) COLLATE NOCASE;
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((((t1.c0) NOTNULL))>>((+ (vt1.c0))))) ORDER BY x'818c' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOTNULL))>>((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY x'818c' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((((t1.c0) NOTNULL))>>((+ (vt1.c0))))) ORDER BY x'818c' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOTNULL))>>((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY x'818c' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((((t1.c0) NOTNULL))>>((+ (vt1.c0))))) ORDER BY x'818c' DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON ((((((((((x'484d')AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL) WHERE (((((x'')OR(t1.c0)))OR(t1.c0 COLLATE BINARY))) ORDER BY ((IFNULL(DISTINCT vt1.c0, vt1.c1))==(vt1.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')OR(t1.c0)))OR(t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON ((((((((((x'484d')AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL) ORDER BY ((IFNULL(DISTINCT vt1.c0, vt1.c1))=(vt1.c1)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON ((((((((((x'484d')AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL) WHERE (((((x'')OR(t1.c0)))OR(t1.c0 COLLATE BINARY))) ORDER BY ((IFNULL(DISTINCT vt1.c0, vt1.c1))==(vt1.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')OR(t1.c0)))OR(t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON ((((((((((x'484d')AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL) ORDER BY ((IFNULL(DISTINCT vt1.c0, vt1.c1))=(vt1.c1)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON ((((((((((x'484d')AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL) WHERE (((((x'')OR(t1.c0)))OR(t1.c0 COLLATE BINARY))) ORDER BY ((IFNULL(DISTINCT vt1.c0, vt1.c1))==(vt1.c1)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(ABS(vt1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(vt1.c0) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(ABS(vt1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(vt1.c0) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(ABS(vt1.c0) AS REAL));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((('2013983807')%(vt1.c1)))+(1.65257912E8)) LEFT OUTER JOIN t1 ON ((((vt1.c1) IS FALSE)) IS FALSE) WHERE (json_array_length(((t1.c0) NOT BETWEEN (vt0.c1) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length(((t1.c0) NOT BETWEEN (vt0.c1) AND (t1.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((('2013983807')%(vt1.c1)))+(1.65257912E8)) LEFT OUTER JOIN t1 ON ((((vt1.c1) IS FALSE)) IS FALSE));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((('2013983807')%(vt1.c1)))+(1.65257912E8)) LEFT OUTER JOIN t1 ON ((((vt1.c1) IS FALSE)) IS FALSE) WHERE (json_array_length(((t1.c0) NOT BETWEEN (vt0.c1) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length(((t1.c0) NOT BETWEEN (vt0.c1) AND (t1.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((('2013983807')%(vt1.c1)))+(1.65257912E8)) LEFT OUTER JOIN t1 ON ((((vt1.c1) IS FALSE)) IS FALSE));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((('2013983807')%(vt1.c1)))+(1.65257912E8)) LEFT OUTER JOIN t1 ON ((((vt1.c1) IS FALSE)) IS FALSE) WHERE (json_array_length(((t1.c0) NOT BETWEEN (vt0.c1) AND (t1.c0))));
SELECT * FROM vt1, t1, vt0 WHERE (0.6819489022590356) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c2))  WHEN ((vt1.c1)!=(vt0.c0)) THEN ((t1.c0)-(vt1.c1)) WHEN ((0.37891794615254104) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c1)LIKE(vt1.c0)) WHEN (((t1.c0))!=((vt1.c1))) THEN ((vt0.c0)&(t1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((0.6819489022590356) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c2))  WHEN ((vt1.c1)!=(vt0.c0)) THEN ((t1.c0)-(vt1.c1)) WHEN ((0.37891794615254104) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c1)LIKE(vt1.c0)) WHEN (((t1.c0))!=((vt1.c1))) THEN ((vt0.c0)&(t1.c0)) END DESC);
SELECT * FROM vt1, t1, vt0 WHERE (0.6819489022590356) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c2))  WHEN ((vt1.c1)!=(vt0.c0)) THEN ((t1.c0)-(vt1.c1)) WHEN ((0.37891794615254104) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c1)LIKE(vt1.c0)) WHEN (((t1.c0))!=((vt1.c1))) THEN ((vt0.c0)&(t1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((0.6819489022590356) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c2))  WHEN ((vt1.c1)!=(vt0.c0)) THEN ((t1.c0)-(vt1.c1)) WHEN ((0.37891794615254104) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c1)LIKE(vt1.c0)) WHEN (((t1.c0))!=((vt1.c1))) THEN ((vt0.c0)&(t1.c0)) END DESC);
SELECT * FROM vt1, t1, vt0 WHERE (0.6819489022590356) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c2))  WHEN ((vt1.c1)!=(vt0.c0)) THEN ((t1.c0)-(vt1.c1)) WHEN ((0.37891794615254104) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c1)LIKE(vt1.c0)) WHEN (((t1.c0))!=((vt1.c1))) THEN ((vt0.c0)&(t1.c0)) END DESC;
SELECT COUNT(*) FROM t1 CROSS JOIN vt1 ON vt1.c0 WHERE (((json(vt1.c1)) NOTNULL)) ORDER BY ((0.3528934244442612)%((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((json(vt1.c1)) NOTNULL)) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON vt1.c0 ORDER BY ((0.3528934244442612)%((vt1.c0 IN ()))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt1 ON vt1.c0 WHERE (((json(vt1.c1)) NOTNULL)) ORDER BY ((0.3528934244442612)%((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((json(vt1.c1)) NOTNULL)) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON vt1.c0 ORDER BY ((0.3528934244442612)%((vt1.c0 IN ()))));
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON CASE LOWER(vt1.c1)  WHEN (~ (vt0.c0)) THEN ((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c1)))OR(t1.c0)))OR(vt1.c0)) ELSE CASE x''  WHEN vt0.c2 THEN vt0.c0 END END FULL OUTER JOIN vt0 ON (((((t1.c0))<>((vt0.c2))))+((((vt0.c1, vt1.c0, vt1.c0))>=((vt1.c1, '-1656180350', vt1.c1))))) WHERE ((+ ((((vt1.c0, x'', vt0.c2, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, 0.6255926565460319, vt0.c0, vt1.c1, vt1.c0)) AND ((vt0.c1, vt1.c1, vt0.c1, NULL, t1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt1.c0, x'', vt0.c2, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, 0.6255926565460319, vt0.c0, vt1.c1, vt1.c0)) AND ((vt0.c1, vt1.c1, vt0.c1, NULL, t1.c0)))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON CASE LOWER(vt1.c1)  WHEN (~ (vt0.c0)) THEN ((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c1)))OR(t1.c0)))OR(vt1.c0)) ELSE CASE x''  WHEN vt0.c2 THEN vt0.c0 END END FULL OUTER JOIN vt0 ON (((((t1.c0))<>((vt0.c2))))+((((vt0.c1, vt1.c0, vt1.c0))>=((vt1.c1, '-1656180350', vt1.c1))))));
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON CASE LOWER(vt1.c1)  WHEN (~ (vt0.c0)) THEN ((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c1)))OR(t1.c0)))OR(vt1.c0)) ELSE CASE x''  WHEN vt0.c2 THEN vt0.c0 END END FULL OUTER JOIN vt0 ON (((((t1.c0))<>((vt0.c2))))+((((vt0.c1, vt1.c0, vt1.c0))>=((vt1.c1, '-1656180350', vt1.c1))))) WHERE ((+ ((((vt1.c0, x'', vt0.c2, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, 0.6255926565460319, vt0.c0, vt1.c1, vt1.c0)) AND ((vt0.c1, vt1.c1, vt0.c1, NULL, t1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt1.c0, x'', vt0.c2, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, 0.6255926565460319, vt0.c0, vt1.c1, vt1.c0)) AND ((vt0.c1, vt1.c1, vt0.c1, NULL, t1.c0)))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON CASE LOWER(vt1.c1)  WHEN (~ (vt0.c0)) THEN ((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c1)))OR(t1.c0)))OR(vt1.c0)) ELSE CASE x''  WHEN vt0.c2 THEN vt0.c0 END END FULL OUTER JOIN vt0 ON (((((t1.c0))<>((vt0.c2))))+((((vt0.c1, vt1.c0, vt1.c0))>=((vt1.c1, '-1656180350', vt1.c1))))));
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c2)) COLLATE RTRIM) ORDER BY ((TYPEOF(vt0.c1)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((((((((vt0.c0)AND(vt0.c0)))AND(0X69a52ea)))AND(vt0.c1)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(vt0.c1)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((((((((vt0.c0)AND(vt0.c0)))AND(0x69a52ea)))AND(vt0.c1)))AND(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c2)) COLLATE RTRIM) ORDER BY ((TYPEOF(vt0.c1)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((((((((vt0.c0)AND(vt0.c0)))AND(0X69a52ea)))AND(vt0.c1)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(vt0.c1)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((((((((vt0.c0)AND(vt0.c0)))AND(0x69a52ea)))AND(vt0.c1)))AND(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c2)) COLLATE RTRIM) ORDER BY ((TYPEOF(vt0.c1)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((((((((vt0.c0)AND(vt0.c0)))AND(0X69a52ea)))AND(vt0.c1)))AND(vt0.c0)))) ASC;
SELECT COUNT(*) FROM t1 WHERE (((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND((t1.c0 IN ()))))AND(DATE(t1.c0, t1.c0, t1.c0)))) ORDER BY ((((t1.c0)OR(t1.c0)))>((((t1.c0))<>((t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND((t1.c0 IN ()))))AND(DATE(t1.c0, t1.c0, t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)OR(t1.c0)))>((((t1.c0))!=((t1.c0))))) DESC);
SELECT COUNT(*) FROM t1 WHERE (((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND((t1.c0 IN ()))))AND(DATE(t1.c0, t1.c0, t1.c0)))) ORDER BY ((((t1.c0)OR(t1.c0)))>((((t1.c0))<>((t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND((t1.c0 IN ()))))AND(DATE(t1.c0, t1.c0, t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)OR(t1.c0)))>((((t1.c0))!=((t1.c0))))) DESC);
SELECT COUNT(*) FROM t1 WHERE (((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND((t1.c0 IN ()))))AND(DATE(t1.c0, t1.c0, t1.c0)))) ORDER BY ((((t1.c0)OR(t1.c0)))>((((t1.c0))<>((t1.c0))))) DESC;
SELECT ALL * FROM vt0 WHERE (CAST(TIME(vt0.c1, vt0.c2, vt0.c0) AS NUMERIC)) ORDER BY CASE WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) THEN vt0.c1 COLLATE NOCASE ELSE (+ (vt0.c2)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TIME(vt0.c1, vt0.c2, vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) THEN vt0.c1 COLLATE NOCASE ELSE (+ (vt0.c2)) END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(TIME(vt0.c1, vt0.c2, vt0.c0) AS NUMERIC)) ORDER BY CASE WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) THEN vt0.c1 COLLATE NOCASE ELSE (+ (vt0.c2)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TIME(vt0.c1, vt0.c2, vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) THEN vt0.c1 COLLATE NOCASE ELSE (+ (vt0.c2)) END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(TIME(vt0.c1, vt0.c2, vt0.c0) AS NUMERIC)) ORDER BY CASE WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) THEN vt0.c1 COLLATE NOCASE ELSE (+ (vt0.c2)) END ASC  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (LOWER(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (LOWER(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (LOWER(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT * FROM vt0, t1 WHERE ((NULL IN ())) ORDER BY DATETIME(vt0.c0, CAST(vt0.c2 AS TEXT), ((vt0.c1)>=(0.36337337443807116)), 0.6609973321587438, ((vt0.c1) NOT NULL)) DESC, (((NULL)*(vt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY DATETIME(vt0.c0, CAST(vt0.c2 AS TEXT), ((vt0.c1)>=(0.36337337443807116)), 0.6609973321587438, ((vt0.c1) NOT NULL)) DESC, (((NULL)*(vt0.c2)) IN ()));
SELECT * FROM vt0, t1 WHERE ((NULL IN ())) ORDER BY DATETIME(vt0.c0, CAST(vt0.c2 AS TEXT), ((vt0.c1)>=(0.36337337443807116)), 0.6609973321587438, ((vt0.c1) NOT NULL)) DESC, (((NULL)*(vt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY DATETIME(vt0.c0, CAST(vt0.c2 AS TEXT), ((vt0.c1)>=(0.36337337443807116)), 0.6609973321587438, ((vt0.c1) NOT NULL)) DESC, (((NULL)*(vt0.c2)) IN ()));
SELECT * FROM vt0, t1 WHERE ((NULL IN ())) ORDER BY DATETIME(vt0.c0, CAST(vt0.c2 AS TEXT), ((vt0.c1)>=(0.36337337443807116)), 0.6609973321587438, ((vt0.c1) NOT NULL)) DESC, (((NULL)*(vt0.c2)) IN ());
SELECT ALL * FROM t1, vt1, vt0 WHERE ((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt1.c1))) COLLATE RTRIM) ORDER BY (((vt1.c0 COLLATE RTRIM))>(((vt0.c1 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt1.c1))) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (((vt1.c0 COLLATE RTRIM))>(((vt0.c1 IN ())))) ASC);
SELECT ALL * FROM t1, vt1, vt0 WHERE ((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt1.c1))) COLLATE RTRIM) ORDER BY (((vt1.c0 COLLATE RTRIM))>(((vt0.c1 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt1.c1))) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (((vt1.c0 COLLATE RTRIM))>(((vt0.c1 IN ())))) ASC);
SELECT ALL * FROM t1, vt1, vt0 WHERE ((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt1.c1))) COLLATE RTRIM) ORDER BY (((vt1.c0 COLLATE RTRIM))>(((vt0.c1 IN ())))) ASC;
SELECT COUNT(*) FROM t1 WHERE ((NOT (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN x'' END))) ORDER BY (((t1.c0 IN ()))AND((NOT (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN x'' END))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN ()))AND((NOT (t1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((NOT (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN x'' END))) ORDER BY (((t1.c0 IN ()))AND((NOT (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN x'' END))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN ()))AND((NOT (t1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (((CAST(vt0.c1 AS TEXT))LIKE(t1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS TEXT))LIKE(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (((CAST(vt0.c1 AS TEXT))LIKE(t1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS TEXT))LIKE(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (((CAST(vt0.c1 AS TEXT))LIKE(t1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((json_array_length(vt1.c0), ((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)), HEX(DISTINCT vt1.c1))) AND (((((''))<=(('?'))), (~ (vt1.c1)), (- (vt1.c0)))))) ORDER BY (((''))>(((vt1.c0 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((json_array_length(vt1.c0), ((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)), HEX(DISTINCT vt1.c1))) AND (((((''))<=(('?'))), (~ (vt1.c1)), (- (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((''))>(((vt1.c0 IN ())))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((json_array_length(vt1.c0), ((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)), HEX(DISTINCT vt1.c1))) AND (((((''))<=(('?'))), (~ (vt1.c1)), (- (vt1.c0)))))) ORDER BY (((''))>(((vt1.c0 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((json_array_length(vt1.c0), ((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)), HEX(DISTINCT vt1.c1))) AND (((((''))<=(('?'))), (~ (vt1.c1)), (- (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((''))>(((vt1.c0 IN ())))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 CROSS JOIN t1 ON ((vt0.c1)>=(((((vt0.c2)AND(vt1.c1)))OR(0.21669783473646764)))) WHERE (json_type(((((t1.c0)AND(vt1.c1)))AND(t1.c0)))) ORDER BY vt1.c1 ASC, CAST(HEX(vt0.c2) AS TEXT), (((vt0.c2 IN ())) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_type(((((t1.c0)AND(vt1.c1)))AND(t1.c0)))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t1 ON ((vt0.c1)>=(((((vt0.c2)AND(vt1.c1)))OR(0.21669783473646764)))) ORDER BY vt1.c1 ASC, CAST(HEX(vt0.c2) AS TEXT), (((vt0.c2 IN ())) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 CROSS JOIN t1 ON ((vt0.c1)>=(((((vt0.c2)AND(vt1.c1)))OR(0.21669783473646764)))) WHERE (json_type(((((t1.c0)AND(vt1.c1)))AND(t1.c0)))) ORDER BY vt1.c1 ASC, CAST(HEX(vt0.c2) AS TEXT), (((vt0.c2 IN ())) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_type(((((t1.c0)AND(vt1.c1)))AND(t1.c0)))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t1 ON ((vt0.c1)>=(((((vt0.c2)AND(vt1.c1)))OR(0.21669783473646764)))) ORDER BY vt1.c1 ASC, CAST(HEX(vt0.c2) AS TEXT), (((vt0.c2 IN ())) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 CROSS JOIN t1 ON ((vt0.c1)>=(((((vt0.c2)AND(vt1.c1)))OR(0.21669783473646764)))) WHERE (json_type(((((t1.c0)AND(vt1.c1)))AND(t1.c0)))) ORDER BY vt1.c1 ASC, CAST(HEX(vt0.c2) AS TEXT), (((vt0.c2 IN ())) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM vt1, t1 WHERE (ABS((t1.c0 IN ()))) ORDER BY CAST(((vt1.c1)>(t1.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS((t1.c0 IN ()))) IS TRUE)  as count FROM vt1, t1 ORDER BY CAST(((vt1.c1)>(t1.c0)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt1, t1 WHERE (ABS((t1.c0 IN ()))) ORDER BY CAST(((vt1.c1)>(t1.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS((t1.c0 IN ()))) IS TRUE)  as count FROM vt1, t1 ORDER BY CAST(((vt1.c1)>(t1.c0)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt1, t1 WHERE (ABS((t1.c0 IN ()))) ORDER BY CAST(((vt1.c1)>(t1.c0)) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL) ORDER BY (((((vt0.c0)IS(vt1.c0)), (vt1.c1 IN ()), vt1.c1 COLLATE RTRIM))>(((~ (vt1.c0)), (((x'', vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c2))), ((vt1.c0) NOTNULL))))  NULLS LAST, ((((((vt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt1.c1)==(vt1.c1)), ((((vt0.c1)AND(vt1.c1)))OR(vt1.c1))))>((CASE WHEN 0xffffffffaab8b0ad THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END, ((vt1.c0) NOTNULL), CASE vt0.c0  WHEN vt1.c0 THEN '2013983807' END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0)IS(vt1.c0)), (vt1.c1 IN ()), vt1.c1 COLLATE RTRIM))>(((~ (vt1.c0)), (((x'', vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c2))), ((vt1.c0) NOTNULL))))  NULLS LAST, ((((((vt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt1.c1)=(vt1.c1)), ((((vt0.c1)AND(vt1.c1)))OR(vt1.c1))))>((CASE WHEN 0xffffffffaab8b0ad THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END, ((vt1.c0) NOTNULL), CASE vt0.c0  WHEN vt1.c0 THEN '2013983807' END)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL) ORDER BY (((((vt0.c0)IS(vt1.c0)), (vt1.c1 IN ()), vt1.c1 COLLATE RTRIM))>(((~ (vt1.c0)), (((x'', vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c2))), ((vt1.c0) NOTNULL))))  NULLS LAST, ((((((vt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt1.c1)==(vt1.c1)), ((((vt0.c1)AND(vt1.c1)))OR(vt1.c1))))>((CASE WHEN 0xffffffffaab8b0ad THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END, ((vt1.c0) NOTNULL), CASE vt0.c0  WHEN vt1.c0 THEN '2013983807' END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0)IS(vt1.c0)), (vt1.c1 IN ()), vt1.c1 COLLATE RTRIM))>(((~ (vt1.c0)), (((x'', vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c2))), ((vt1.c0) NOTNULL))))  NULLS LAST, ((((((vt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt1.c1)=(vt1.c1)), ((((vt0.c1)AND(vt1.c1)))OR(vt1.c1))))>((CASE WHEN 0xffffffffaab8b0ad THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END, ((vt1.c0) NOTNULL), CASE vt0.c0  WHEN vt1.c0 THEN '2013983807' END)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL) ORDER BY (((((vt0.c0)IS(vt1.c0)), (vt1.c1 IN ()), vt1.c1 COLLATE RTRIM))>(((~ (vt1.c0)), (((x'', vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c2))), ((vt1.c0) NOTNULL))))  NULLS LAST, ((((((vt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt1.c1)==(vt1.c1)), ((((vt0.c1)AND(vt1.c1)))OR(vt1.c1))))>((CASE WHEN 0xffffffffaab8b0ad THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END, ((vt1.c0) NOTNULL), CASE vt0.c0  WHEN vt1.c0 THEN '2013983807' END)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((('-397411450'))<((vt1.c0))) COLLATE NOCASE) ORDER BY CAST((- (vt1.c1)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('-397411450'))<((vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY CAST((- (vt1.c1)) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((('-397411450'))<((vt1.c0))) COLLATE NOCASE) ORDER BY CAST((- (vt1.c1)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('-397411450'))<((vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY CAST((- (vt1.c1)) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((('-397411450'))<((vt1.c0))) COLLATE NOCASE) ORDER BY CAST((- (vt1.c1)) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt1 ON ((((vt1.c1) BETWEEN (vt0.c1) AND (vt1.c0))) IS FALSE) INNER JOIN vt0 ON t1.c0 WHERE (LOWER(((vt1.c0)LIKE(vt0.c1)))) ORDER BY vt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt1.c0)LIKE(vt0.c1)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON ((((vt1.c1) BETWEEN (vt0.c1) AND (vt1.c0))) IS FALSE) INNER JOIN vt0 ON t1.c0 ORDER BY vt0.c2  NULLS LAST);
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt1 ON ((((vt1.c1) BETWEEN (vt0.c1) AND (vt1.c0))) IS FALSE) INNER JOIN vt0 ON t1.c0 WHERE (LOWER(((vt1.c0)LIKE(vt0.c1)))) ORDER BY vt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt1.c0)LIKE(vt0.c1)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON ((((vt1.c1) BETWEEN (vt0.c1) AND (vt1.c0))) IS FALSE) INNER JOIN vt0 ON t1.c0 ORDER BY vt0.c2  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c1 IN (vt1.c1))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((((0.9198056631680951)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY ((((vt1.c1)>(vt1.c1))) BETWEEN ((+ (NULL))) AND (((vt1.c1)>=(vt1.c0)))) DESC  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))) AND ((vt1.c1))) ASC, (vt1.c1 IN (CAST(vt1.c1 AS NUMERIC), ((x'')IS NOT(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN (vt1.c1))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((((0.9198056631680951)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)>(vt1.c1))) BETWEEN ((+ (NULL))) AND (((vt1.c1)>=(vt1.c0)))) DESC  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))) AND ((vt1.c1))) ASC, (vt1.c1 IN (CAST(vt1.c1 AS NUMERIC), ((x'')IS NOT(vt1.c0))))  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c1 IN (vt1.c1))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((((0.9198056631680951)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY ((((vt1.c1)>(vt1.c1))) BETWEEN ((+ (NULL))) AND (((vt1.c1)>=(vt1.c0)))) DESC  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))) AND ((vt1.c1))) ASC, (vt1.c1 IN (CAST(vt1.c1 AS NUMERIC), ((x'')IS NOT(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN (vt1.c1))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((((0.9198056631680951)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)>(vt1.c1))) BETWEEN ((+ (NULL))) AND (((vt1.c1)>=(vt1.c0)))) DESC  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))) AND ((vt1.c1))) ASC, (vt1.c1 IN (CAST(vt1.c1 AS NUMERIC), ((x'')IS NOT(vt1.c0))))  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c1 IN (vt1.c1))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((((0.9198056631680951)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY ((((vt1.c1)>(vt1.c1))) BETWEEN ((+ (NULL))) AND (((vt1.c1)>=(vt1.c0)))) DESC  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))) AND ((vt1.c1))) ASC, (vt1.c1 IN (CAST(vt1.c1 AS NUMERIC), ((x'')IS NOT(vt1.c0))))  NULLS LAST;
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((t1.c0)>>(vt1.c1))) BETWEEN ((((vt0.c2)) NOT BETWEEN ((0.39317282599275494)) AND ((t1.c0)))) AND (((t1.c0) BETWEEN (-1.020494408E9) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)>>(vt1.c1))) BETWEEN ((((vt0.c2)) NOT BETWEEN ((0.39317282599275494)) AND ((t1.c0)))) AND (((t1.c0) BETWEEN (-1.020494408E9) AND (vt1.c0))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((t1.c0)>>(vt1.c1))) BETWEEN ((((vt0.c2)) NOT BETWEEN ((0.39317282599275494)) AND ((t1.c0)))) AND (((t1.c0) BETWEEN (-1.020494408E9) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)>>(vt1.c1))) BETWEEN ((((vt0.c2)) NOT BETWEEN ((0.39317282599275494)) AND ((t1.c0)))) AND (((t1.c0) BETWEEN (-1.020494408E9) AND (vt1.c0))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((t1.c0)>>(vt1.c1))) BETWEEN ((((vt0.c2)) NOT BETWEEN ((0.39317282599275494)) AND ((t1.c0)))) AND (((t1.c0) BETWEEN (-1.020494408E9) AND (vt1.c0)))));
SELECT * FROM vt0, t1 WHERE (CASE WHEN ((vt0.c1)/(vt0.c1)) THEN ((t1.c0)+(vt0.c0)) END) ORDER BY CAST(((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS REAL)  NULLS FIRST, vt0.c2 COLLATE BINARY  NULLS LAST, (+ ('!8h	''Ij'))  NULLS FIRST, json_array(((t1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)), CASE vt0.c1  WHEN t1.c0 THEN vt0.c1 ELSE vt0.c1 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)/(vt0.c1)) THEN ((t1.c0)+(vt0.c0)) END) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS REAL)  NULLS FIRST, vt0.c2 COLLATE BINARY  NULLS LAST, (+ ('!8h	''Ij'))  NULLS FIRST, json_array(((t1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)), CASE vt0.c1  WHEN t1.c0 THEN vt0.c1 ELSE vt0.c1 END)  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (CASE WHEN ((vt0.c1)/(vt0.c1)) THEN ((t1.c0)+(vt0.c0)) END) ORDER BY CAST(((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS REAL)  NULLS FIRST, vt0.c2 COLLATE BINARY  NULLS LAST, (+ ('!8h	''Ij'))  NULLS FIRST, json_array(((t1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)), CASE vt0.c1  WHEN t1.c0 THEN vt0.c1 ELSE vt0.c1 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)/(vt0.c1)) THEN ((t1.c0)+(vt0.c0)) END) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS REAL)  NULLS FIRST, vt0.c2 COLLATE BINARY  NULLS LAST, (+ ('!8h	''Ij'))  NULLS FIRST, json_array(((t1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)), CASE vt0.c1  WHEN t1.c0 THEN vt0.c1 ELSE vt0.c1 END)  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS TEXT)) ORDER BY ((+ (t1.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY ((+ (t1.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS TEXT)) ORDER BY ((+ (t1.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY ((+ (t1.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS TEXT)) ORDER BY ((+ (t1.c0)) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t1 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC)) ORDER BY ((((((((CAST(vt1.c0 AS BLOB))AND(CASE vt1.c1  WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END)))OR((((vt1.c1))>((t1.c0))))))AND(CASE x'f9d45ae4'  WHEN t1.c0 THEN t1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN t1.c0 END)))AND(CAST(t1.c0 AS BLOB))) DESC  NULLS LAST, (~ (CAST(vt1.c0 AS BLOB))) DESC  NULLS LAST, (~ (MAX(vt1.c1, t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((((((CAST(vt1.c0 AS BLOB))AND(CASE vt1.c1  WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END)))OR((((vt1.c1))>((t1.c0))))))AND(CASE x'f9d45ae4'  WHEN t1.c0 THEN t1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN t1.c0 END)))AND(CAST(t1.c0 AS BLOB))) DESC  NULLS LAST, (~ (CAST(vt1.c0 AS BLOB))) DESC  NULLS LAST, (~ (MAX(vt1.c1, t1.c0))));
SELECT COUNT(*) FROM vt1, t1 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC)) ORDER BY ((((((((CAST(vt1.c0 AS BLOB))AND(CASE vt1.c1  WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END)))OR((((vt1.c1))>((t1.c0))))))AND(CASE x'f9d45ae4'  WHEN t1.c0 THEN t1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN t1.c0 END)))AND(CAST(t1.c0 AS BLOB))) DESC  NULLS LAST, (~ (CAST(vt1.c0 AS BLOB))) DESC  NULLS LAST, (~ (MAX(vt1.c1, t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((((((CAST(vt1.c0 AS BLOB))AND(CASE vt1.c1  WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END)))OR((((vt1.c1))>((t1.c0))))))AND(CASE x'f9d45ae4'  WHEN t1.c0 THEN t1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN t1.c0 END)))AND(CAST(t1.c0 AS BLOB))) DESC  NULLS LAST, (~ (CAST(vt1.c0 AS BLOB))) DESC  NULLS LAST, (~ (MAX(vt1.c1, t1.c0))));
SELECT COUNT(*) FROM vt1, t1 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC)) ORDER BY ((((((((CAST(vt1.c0 AS BLOB))AND(CASE vt1.c1  WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END)))OR((((vt1.c1))>((t1.c0))))))AND(CASE x'f9d45ae4'  WHEN t1.c0 THEN t1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN t1.c0 END)))AND(CAST(t1.c0 AS BLOB))) DESC  NULLS LAST, (~ (CAST(vt1.c0 AS BLOB))) DESC  NULLS LAST, (~ (MAX(vt1.c1, t1.c0)));
SELECT ALL * FROM t1, vt0, vt1 WHERE ((('0.7584157326794576')IS NOT((((vt0.c0, vt1.c1, vt0.c1))!=((1984460366, vt0.c1, -1274681101))))));
SELECT SUM(count) FROM (SELECT ALL (((('0.7584157326794576')IS NOT((((vt0.c0, vt1.c1, vt0.c1))!=((1984460366, vt0.c1, -1274681101)))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL * FROM t1, vt0, vt1 WHERE ((('0.7584157326794576')IS NOT((((vt0.c0, vt1.c1, vt0.c1))!=((1984460366, vt0.c1, -1274681101))))));
SELECT SUM(count) FROM (SELECT ALL (((('0.7584157326794576')IS NOT((((vt0.c0, vt1.c1, vt0.c1))!=((1984460366, vt0.c1, -1274681101)))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL * FROM t1, vt0, vt1 WHERE ((('0.7584157326794576')IS NOT((((vt0.c0, vt1.c1, vt0.c1))!=((1984460366, vt0.c1, -1274681101))))));
SELECT ALL * FROM vt0 WHERE ((~ ((vt0.c1 IN ())))) ORDER BY ((CAST(-1595992102 AS TEXT))<=((+ (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(-1595992102 AS TEXT))<=((+ (vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((~ ((vt0.c1 IN ())))) ORDER BY ((CAST(-1595992102 AS TEXT))<=((+ (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(-1595992102 AS TEXT))<=((+ (vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((~ ((vt0.c1 IN ())))) ORDER BY ((CAST(-1595992102 AS TEXT))<=((+ (vt0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((((t1.c0))==((t1.c0))))OR(CAST(t1.c0 AS TEXT))))AND(((0.35545903043038796) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t1.c0))=((t1.c0))))OR(CAST(t1.c0 AS TEXT))))AND(((0.35545903043038796) IS FALSE)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((((t1.c0))==((t1.c0))))OR(CAST(t1.c0 AS TEXT))))AND(((0.35545903043038796) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t1.c0))=((t1.c0))))OR(CAST(t1.c0 AS TEXT))))AND(((0.35545903043038796) IS FALSE)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((((t1.c0))==((t1.c0))))OR(CAST(t1.c0 AS TEXT))))AND(((0.35545903043038796) IS FALSE))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN (((((vt0.c0))<((vt0.c0))))) AND ((((((vt0.c1)AND(vt1.c0)))AND(t1.c0))))) RIGHT OUTER JOIN t1 ON vt1.c1 WHERE (NULL) ORDER BY CASE WHEN TRIM(DISTINCT vt0.c1, x'') THEN ((vt1.c0)||(vt0.c2)) WHEN t1.c0 THEN (NOT (t1.c0)) WHEN ((vt1.c0)/(vt0.c2)) THEN (((vt0.c2, vt0.c1, vt0.c0, vt0.c0, t1.c0))<>((vt1.c0, t1.c0, vt0.c0, vt0.c2, vt0.c2))) ELSE LOWER(DISTINCT vt0.c2) END, ((((t1.c0) ISNULL))&(vt0.c2 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN (((((vt0.c0))<((vt0.c0))))) AND ((((((vt0.c1)AND(vt1.c0)))AND(t1.c0))))) RIGHT OUTER JOIN t1 ON vt1.c1 ORDER BY CASE WHEN TRIM(DISTINCT vt0.c1, x'') THEN ((vt1.c0)||(vt0.c2)) WHEN t1.c0 THEN (NOT (t1.c0)) WHEN ((vt1.c0)/(vt0.c2)) THEN (((vt0.c2, vt0.c1, vt0.c0, vt0.c0, t1.c0))<>((vt1.c0, t1.c0, vt0.c0, vt0.c2, vt0.c2))) ELSE LOWER(DISTINCT vt0.c2) END, ((((t1.c0) ISNULL))&(vt0.c2 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN (((((vt0.c0))<((vt0.c0))))) AND ((((((vt0.c1)AND(vt1.c0)))AND(t1.c0))))) RIGHT OUTER JOIN t1 ON vt1.c1 WHERE (NULL) ORDER BY CASE WHEN TRIM(DISTINCT vt0.c1, x'') THEN ((vt1.c0)||(vt0.c2)) WHEN t1.c0 THEN (NOT (t1.c0)) WHEN ((vt1.c0)/(vt0.c2)) THEN (((vt0.c2, vt0.c1, vt0.c0, vt0.c0, t1.c0))<>((vt1.c0, t1.c0, vt0.c0, vt0.c2, vt0.c2))) ELSE LOWER(DISTINCT vt0.c2) END, ((((t1.c0) ISNULL))&(vt0.c2 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN (((((vt0.c0))<((vt0.c0))))) AND ((((((vt0.c1)AND(vt1.c0)))AND(t1.c0))))) RIGHT OUTER JOIN t1 ON vt1.c1 ORDER BY CASE WHEN TRIM(DISTINCT vt0.c1, x'') THEN ((vt1.c0)||(vt0.c2)) WHEN t1.c0 THEN (NOT (t1.c0)) WHEN ((vt1.c0)/(vt0.c2)) THEN (((vt0.c2, vt0.c1, vt0.c0, vt0.c0, t1.c0))<>((vt1.c0, t1.c0, vt0.c0, vt0.c2, vt0.c2))) ELSE LOWER(DISTINCT vt0.c2) END, ((((t1.c0) ISNULL))&(vt0.c2 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c1)>>(vt1.c0))) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))) AND (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)>>(vt1.c0))) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))) AND (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c1)>>(vt1.c0))) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))) AND (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)>>(vt1.c0))) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))) AND (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c1)>>(vt1.c0))) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))) AND (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((x''))==((CAST(vt0.c1 AS REAL))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x''))=((CAST(vt0.c1 AS REAL))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((x''))==((CAST(vt0.c1 AS REAL))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x''))=((CAST(vt0.c1 AS REAL))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((x''))==((CAST(vt0.c1 AS REAL))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((TRIM(DISTINCT vt0.c2, vt0.c2) IN ((+ (vt0.c0)), ((vt1.c1) NOTNULL)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (((vt0.c0)<=(vt1.c0))) AND (((vt0.c2)-(0.2991523229259898)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT vt0.c2, vt0.c2) IN ((+ (vt0.c0)), ((vt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (((vt0.c0)<=(vt1.c0))) AND (((vt0.c2)-(0.2991523229259898)))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((TRIM(DISTINCT vt0.c2, vt0.c2) IN ((+ (vt0.c0)), ((vt1.c1) NOTNULL)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (((vt0.c0)<=(vt1.c0))) AND (((vt0.c2)-(0.2991523229259898)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT vt0.c2, vt0.c2) IN ((+ (vt0.c0)), ((vt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (((vt0.c0)<=(vt1.c0))) AND (((vt0.c2)-(0.2991523229259898)))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((TRIM(DISTINCT vt0.c2, vt0.c2) IN ((+ (vt0.c0)), ((vt1.c1) NOTNULL)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (((vt0.c0)<=(vt1.c0))) AND (((vt0.c2)-(0.2991523229259898)))) DESC;
SELECT * FROM vt0 WHERE ((- ('-234228443' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- ('-234228443' COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- ('-234228443' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- ('-234228443' COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- ('-234228443' COLLATE BINARY)));
SELECT ALL * FROM vt1, vt0, t1 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM) ORDER BY vt1.c0 DESC, vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY vt1.c0 DESC, vt0.c1 ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t1 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM) ORDER BY vt1.c0 DESC, vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY vt1.c0 DESC, vt0.c1 ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t1 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM) ORDER BY vt1.c0 DESC, vt0.c1 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (NOT (''));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (NOT ('')));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (NOT (''));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (NOT ('')));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (NOT (''));
SELECT * FROM vt0, t1, vt1 WHERE (((NULL)IS((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c1)))))) ORDER BY (~ ((((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY (~ ((((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))) ASC);
SELECT * FROM vt0, t1, vt1 WHERE (((NULL)IS((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c1)))))) ORDER BY (~ ((((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY (~ ((((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))) ASC);
SELECT * FROM vt0, t1, vt1 WHERE (((NULL)IS((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c1)))))) ORDER BY (~ ((((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((json_array_length(vt0.c0, vt0.c1)) NOT BETWEEN (((vt0.c2)/(vt0.c1))) AND (CASE t1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END))) ORDER BY LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(vt0.c0, vt0.c1)) NOT BETWEEN (((vt0.c2)/(vt0.c1))) AND (CASE t1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END))) IS TRUE)  as count FROM t1, vt0 ORDER BY LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((json_array_length(vt0.c0, vt0.c1)) NOT BETWEEN (((vt0.c2)/(vt0.c1))) AND (CASE t1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END))) ORDER BY LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(vt0.c0, vt0.c1)) NOT BETWEEN (((vt0.c2)/(vt0.c1))) AND (CASE t1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END))) IS TRUE)  as count FROM t1, vt0 ORDER BY LAST_INSERT_ROWID());
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (t1.c0);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END IN ())) ORDER BY vt1.c0 DESC, CASE WHEN ((vt0.c1) NOT NULL) THEN CAST(vt0.c0 AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY vt1.c0 DESC, CASE WHEN ((vt0.c1) NOT NULL) THEN CAST(vt0.c0 AS TEXT) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END IN ())) ORDER BY vt1.c0 DESC, CASE WHEN ((vt0.c1) NOT NULL) THEN CAST(vt0.c0 AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY vt1.c0 DESC, CASE WHEN ((vt0.c1) NOT NULL) THEN CAST(vt0.c0 AS TEXT) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END IN ())) ORDER BY vt1.c0 DESC, CASE WHEN ((vt0.c1) NOT NULL) THEN CAST(vt0.c0 AS TEXT) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((((CAST(vt0.c0 AS REAL))AND('rom&')))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END))) ORDER BY CAST((((vt0.c0, vt1.c0, vt0.c2))<>((vt0.c0, vt1.c0, t1.c0))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))AND('rom&')))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, t1 ORDER BY CAST((((vt0.c0, vt1.c0, vt0.c2))!=((vt0.c0, vt1.c0, t1.c0))) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((((CAST(vt0.c0 AS REAL))AND('rom&')))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END))) ORDER BY CAST((((vt0.c0, vt1.c0, vt0.c2))<>((vt0.c0, vt1.c0, t1.c0))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))AND('rom&')))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, t1 ORDER BY CAST((((vt0.c0, vt1.c0, vt0.c2))!=((vt0.c0, vt1.c0, t1.c0))) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((((CAST(vt0.c0 AS REAL))AND('rom&')))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END))) ORDER BY CAST((((vt0.c0, vt1.c0, vt0.c2))<>((vt0.c0, vt1.c0, t1.c0))) AS BLOB) DESC;
SELECT ALL * FROM vt0, vt1, t1 WHERE ('134827335');
SELECT SUM(count) FROM (SELECT ALL (('134827335') IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE ('134827335');
SELECT SUM(count) FROM (SELECT ALL (('134827335') IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE ('134827335');
SELECT * FROM vt0 WHERE (((((vt0.c2) ISNULL))<=((+ (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) ISNULL))<=((+ (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c2) ISNULL))<=((+ (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) ISNULL))<=((+ (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c2) ISNULL))<=((+ (vt0.c2)))));
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((((CASE vt0.c2  WHEN vt1.c1 THEN vt0.c1 ELSE vt1.c0 END)OR(CAST(t1.c0 AS BLOB))))AND(LIKELIHOOD(vt1.c1, 0.8714518385077422))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c2  WHEN vt1.c1 THEN vt0.c1 ELSE vt1.c0 END)OR(CAST(t1.c0 AS BLOB))))AND(LIKELIHOOD(vt1.c1, 0.8714518385077422)))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((((CASE vt0.c2  WHEN vt1.c1 THEN vt0.c1 ELSE vt1.c0 END)OR(CAST(t1.c0 AS BLOB))))AND(LIKELIHOOD(vt1.c1, 0.8714518385077422))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c2  WHEN vt1.c1 THEN vt0.c1 ELSE vt1.c0 END)OR(CAST(t1.c0 AS BLOB))))AND(LIKELIHOOD(vt1.c1, 0.8714518385077422)))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((((CASE vt0.c2  WHEN vt1.c1 THEN vt0.c1 ELSE vt1.c0 END)OR(CAST(t1.c0 AS BLOB))))AND(LIKELIHOOD(vt1.c1, 0.8714518385077422))));
SELECT ALL * FROM t1, vt1 WHERE (((vt1.c0 COLLATE RTRIM)=(((vt1.c0)%(vt1.c1))))) ORDER BY CAST(((vt1.c0)*(t1.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)==(((vt1.c0)%(vt1.c1))))) IS TRUE)  as count FROM t1, vt1 ORDER BY CAST(((vt1.c0)*(t1.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM t1, vt1 WHERE (((vt1.c0 COLLATE RTRIM)=(((vt1.c0)%(vt1.c1))))) ORDER BY CAST(((vt1.c0)*(t1.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)==(((vt1.c0)%(vt1.c1))))) IS TRUE)  as count FROM t1, vt1 ORDER BY CAST(((vt1.c0)*(t1.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM t1, vt1 WHERE (((vt1.c0 COLLATE RTRIM)=(((vt1.c0)%(vt1.c1))))) ORDER BY CAST(((vt1.c0)*(t1.c0)) AS INTEGER)  NULLS LAST;
SELECT ALL * FROM vt0, vt1, t1 WHERE (CAST(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END AS REAL)) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE (CAST(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END AS REAL)) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE (CAST(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END AS REAL));
SELECT * FROM vt1 INNER JOIN t1 ON ((((('-168299478', vt1.c1, vt1.c0, vt0.c2, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, t1.c0, t1.c0, vt0.c2)) AND ((vt1.c1, vt1.c1, vt0.c2, vt1.c0, t1.c0)))) ISNULL) CROSS JOIN vt0 ON CAST(t1.c0 COLLATE BINARY AS TEXT) WHERE (((CASE WHEN t1.c0 THEN vt1.c1 END)>((0Xfffffffff8289d0a IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN vt1.c1 END)>((0Xfffffffff8289d0a IN ())))) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON ((((('-168299478', vt1.c1, vt1.c0, vt0.c2, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, t1.c0, t1.c0, vt0.c2)) AND ((vt1.c1, vt1.c1, vt0.c2, vt1.c0, t1.c0)))) ISNULL) CROSS JOIN vt0 ON CAST(t1.c0 COLLATE BINARY AS TEXT));
SELECT * FROM vt1 INNER JOIN t1 ON ((((('-168299478', vt1.c1, vt1.c0, vt0.c2, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, t1.c0, t1.c0, vt0.c2)) AND ((vt1.c1, vt1.c1, vt0.c2, vt1.c0, t1.c0)))) ISNULL) CROSS JOIN vt0 ON CAST(t1.c0 COLLATE BINARY AS TEXT) WHERE (((CASE WHEN t1.c0 THEN vt1.c1 END)>((0Xfffffffff8289d0a IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN vt1.c1 END)>((0Xfffffffff8289d0a IN ())))) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON ((((('-168299478', vt1.c1, vt1.c0, vt0.c2, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, t1.c0, t1.c0, vt0.c2)) AND ((vt1.c1, vt1.c1, vt0.c2, vt1.c0, t1.c0)))) ISNULL) CROSS JOIN vt0 ON CAST(t1.c0 COLLATE BINARY AS TEXT));
SELECT * FROM vt1 INNER JOIN t1 ON ((((('-168299478', vt1.c1, vt1.c0, vt0.c2, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, t1.c0, t1.c0, vt0.c2)) AND ((vt1.c1, vt1.c1, vt0.c2, vt1.c0, t1.c0)))) ISNULL) CROSS JOIN vt0 ON CAST(t1.c0 COLLATE BINARY AS TEXT) WHERE (((CASE WHEN t1.c0 THEN vt1.c1 END)>((0Xfffffffff8289d0a IN ()))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((vt1.c0))>((vt1.c0))))) AND (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))))) ORDER BY TRIM(DISTINCT ((vt1.c0) IS FALSE), (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (((((vt1.c0))>((vt1.c0))))) AND (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))))) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT ((vt1.c0) IS FALSE), (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((vt1.c0))>((vt1.c0))))) AND (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))))) ORDER BY TRIM(DISTINCT ((vt1.c0) IS FALSE), (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (((((vt1.c0))>((vt1.c0))))) AND (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))))) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT ((vt1.c0) IS FALSE), (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((vt1.c0))>((vt1.c0))))) AND (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))))) ORDER BY TRIM(DISTINCT ((vt1.c0) IS FALSE), (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))));
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, vt1);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, vt1);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (t1.c0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((('-1020494408')=(-820756354 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((('-1020494408')=(-820756354 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((('-1020494408')=(-820756354 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((('-1020494408')=(-820756354 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((('-1020494408')=(-820756354 COLLATE NOCASE)));
SELECT * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((((vt1.c0)AND(vt0.c1)))AND('')) THEN vt0.c2 WHEN ((vt1.c1) NOTNULL) THEN ((vt0.c1)==(vt0.c0)) WHEN ((vt0.c2) NOTNULL) THEN ((vt0.c0)IS NOT(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c0)AND(vt0.c1)))AND('')) THEN vt0.c2 WHEN ((vt1.c1) NOTNULL) THEN ((vt0.c1)==(vt0.c0)) WHEN ((vt0.c2) NOTNULL) THEN ((vt0.c0)IS NOT(vt0.c2)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((((vt1.c0)AND(vt0.c1)))AND('')) THEN vt0.c2 WHEN ((vt1.c1) NOTNULL) THEN ((vt0.c1)==(vt0.c0)) WHEN ((vt0.c2) NOTNULL) THEN ((vt0.c0)IS NOT(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c0)AND(vt0.c1)))AND('')) THEN vt0.c2 WHEN ((vt1.c1) NOTNULL) THEN ((vt0.c1)==(vt0.c0)) WHEN ((vt0.c2) NOTNULL) THEN ((vt0.c0)IS NOT(vt0.c2)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((((vt1.c0)AND(vt0.c1)))AND('')) THEN vt0.c2 WHEN ((vt1.c1) NOTNULL) THEN ((vt0.c1)==(vt0.c0)) WHEN ((vt0.c2) NOTNULL) THEN ((vt0.c0)IS NOT(vt0.c2)) END);
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON UNLIKELY((((t1.c0))<((t1.c0)))) WHERE (CAST(((t1.c0)IS NOT(t1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0)IS NOT(t1.c0)) AS INTEGER)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON UNLIKELY((((t1.c0))<((t1.c0)))));
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON UNLIKELY((((t1.c0))<((t1.c0)))) WHERE (CAST(((t1.c0)IS NOT(t1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0)IS NOT(t1.c0)) AS INTEGER)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON UNLIKELY((((t1.c0))<((t1.c0)))));
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON UNLIKELY((((t1.c0))<((t1.c0)))) WHERE (CAST(((t1.c0)IS NOT(t1.c0)) AS INTEGER));
SELECT * FROM t1 WHERE ((((t1.c0)>=(t1.c0)) IN ((- (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)>=(t1.c0)) IN ((- (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c0)>=(t1.c0)) IN ((- (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)>=(t1.c0)) IN ((- (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c0)>=(t1.c0)) IN ((- (t1.c0)))));
SELECT ALL * FROM vt1, t1 WHERE ((((vt1.c1 IN ())) NOT BETWEEN (CASE WHEN t1.c0 THEN vt1.c1 END) AND (CAST(vt1.c1 AS NUMERIC)))) ORDER BY ((((NULL)AND(vt1.c1))) IS TRUE), (((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE t1.c0 END))>=((t1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN ())) NOT BETWEEN (CASE WHEN t1.c0 THEN vt1.c1 END) AND (CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((NULL)AND(vt1.c1))) IS TRUE), (((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE t1.c0 END))>=((t1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1, t1 WHERE ((((vt1.c1 IN ())) NOT BETWEEN (CASE WHEN t1.c0 THEN vt1.c1 END) AND (CAST(vt1.c1 AS NUMERIC)))) ORDER BY ((((NULL)AND(vt1.c1))) IS TRUE), (((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE t1.c0 END))>=((t1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN ())) NOT BETWEEN (CASE WHEN t1.c0 THEN vt1.c1 END) AND (CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((NULL)AND(vt1.c1))) IS TRUE), (((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE t1.c0 END))>=((t1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1, t1 WHERE ((((vt1.c1 IN ())) NOT BETWEEN (CASE WHEN t1.c0 THEN vt1.c1 END) AND (CAST(vt1.c1 AS NUMERIC)))) ORDER BY ((((NULL)AND(vt1.c1))) IS TRUE), (((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE t1.c0 END))>=((t1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((((t1.c0)) NOT BETWEEN (((vt1.c1 IN ()))) AND ((((vt0.c1)GLOB(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN (((vt1.c1 IN ()))) AND ((((vt0.c1)GLOB(vt0.c0)))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((((t1.c0)) NOT BETWEEN (((vt1.c1 IN ()))) AND ((((vt0.c1)GLOB(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN (((vt1.c1 IN ()))) AND ((((vt0.c1)GLOB(vt0.c0)))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((((t1.c0)) NOT BETWEEN (((vt1.c1 IN ()))) AND ((((vt0.c1)GLOB(vt0.c0))))));
SELECT * FROM vt1 WHERE (json_array_length(vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM)) ORDER BY (((((((vt1.c0)OR(-1296536086)))AND(x''))))>((((vt1.c0) NOT NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0)OR(-1296536086)))AND(x''))))>((((vt1.c0) NOT NULL)))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (json_array_length(vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM)) ORDER BY (((((((vt1.c0)OR(-1296536086)))AND(x''))))>((((vt1.c0) NOT NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0)OR(-1296536086)))AND(x''))))>((((vt1.c0) NOT NULL)))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0, t1 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((~ (vt0.c2))) AND (TYPEOF(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN ((~ (vt0.c2))) AND (TYPEOF(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((~ (vt0.c2))) AND (TYPEOF(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN ((~ (vt0.c2))) AND (TYPEOF(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((~ (vt0.c2))) AND (TYPEOF(DISTINCT vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i98 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_GET(((vt0.c1)<>(vt0.c0))) WHERE (CASE WHEN '2085778199' THEN ABS(vt0.c2) END) ORDER BY CAST((vt1.c0 IN ()) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '2085778199' THEN ABS(vt0.c2) END) IS TRUE)  as count FROM vt1 INDEXED BY i98 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_GET(((vt0.c1)<>(vt0.c0))) ORDER BY CAST((vt1.c0 IN ()) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i98 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_GET(((vt0.c1)<>(vt0.c0))) WHERE (CASE WHEN '2085778199' THEN ABS(vt0.c2) END) ORDER BY CAST((vt1.c0 IN ()) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '2085778199' THEN ABS(vt0.c2) END) IS TRUE)  as count FROM vt1 INDEXED BY i98 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_GET(((vt0.c1)<>(vt0.c0))) ORDER BY CAST((vt1.c0 IN ()) AS TEXT) DESC);
SELECT COUNT(*) FROM t1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN (- (t1.c0)) THEN ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) ELSE (((t1.c0))>=((t1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN (- (t1.c0)) THEN ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) ELSE (((t1.c0))>=((t1.c0))) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN (- (t1.c0)) THEN ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) ELSE (((t1.c0))>=((t1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN (- (t1.c0)) THEN ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) ELSE (((t1.c0))>=((t1.c0))) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN (- (t1.c0)) THEN ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) ELSE (((t1.c0))>=((t1.c0))) END);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((- (t1.c0)) IN ()) FULL OUTER JOIN t1 ON (((((t1.c0)AND(vt1.c1)))OR(vt1.c0)) IN ()) WHERE (((((vt1.c0)OR(CAST(vt0.c1 AS REAL))))AND(((vt0.c0)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(CAST(vt0.c1 AS REAL))))AND(((vt0.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((- (t1.c0)) IN ()) FULL OUTER JOIN t1 ON (((((t1.c0)AND(vt1.c1)))OR(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((- (t1.c0)) IN ()) FULL OUTER JOIN t1 ON (((((t1.c0)AND(vt1.c1)))OR(vt1.c0)) IN ()) WHERE (((((vt1.c0)OR(CAST(vt0.c1 AS REAL))))AND(((vt0.c0)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(CAST(vt0.c1 AS REAL))))AND(((vt0.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((- (t1.c0)) IN ()) FULL OUTER JOIN t1 ON (((((t1.c0)AND(vt1.c1)))OR(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((- (t1.c0)) IN ()) FULL OUTER JOIN t1 ON (((((t1.c0)AND(vt1.c1)))OR(vt1.c0)) IN ()) WHERE (((((vt1.c0)OR(CAST(vt0.c1 AS REAL))))AND(((vt0.c0)IS NOT(vt1.c0)))));
SELECT COUNT(*) FROM vt1 INDEXED BY i90 WHERE ((((vt1.c1)) BETWEEN ((json_object(vt1.c0, vt1.c0))) AND ((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN ((json_object(vt1.c0, vt1.c0))) AND ((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))))) IS TRUE)  as count FROM vt1 INDEXED BY i90);
SELECT COUNT(*) FROM vt1 INDEXED BY i90 WHERE ((((vt1.c1)) BETWEEN ((json_object(vt1.c0, vt1.c0))) AND ((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN ((json_object(vt1.c0, vt1.c0))) AND ((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))))) IS TRUE)  as count FROM vt1 INDEXED BY i90);
SELECT ALL * FROM t1, vt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL)) ORDER BY CAST(x'' AS BLOB), vt0.c1 DESC  NULLS FIRST, t1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(x'' AS BLOB), vt0.c1 DESC  NULLS FIRST, t1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL)) ORDER BY CAST(x'' AS BLOB), vt0.c1 DESC  NULLS FIRST, t1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(x'' AS BLOB), vt0.c1 DESC  NULLS FIRST, t1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL)) ORDER BY CAST(x'' AS BLOB), vt0.c1 DESC  NULLS FIRST, t1.c0 ASC  NULLS FIRST;
SELECT ALL * FROM t1, vt0, vt1 WHERE ((((vt0.c1) BETWEEN (x'9ebc') AND (vt1.c0)) IN (((vt1.c1)==(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) BETWEEN (x'9ebc') AND (vt1.c0)) IN (((vt1.c1)==(vt1.c0))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL * FROM t1, vt0, vt1 WHERE ((((vt0.c1) BETWEEN (x'9ebc') AND (vt1.c0)) IN (((vt1.c1)==(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) BETWEEN (x'9ebc') AND (vt1.c0)) IN (((vt1.c1)==(vt1.c0))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL * FROM t1, vt0, vt1 WHERE ((((vt0.c1) BETWEEN (x'9ebc') AND (vt1.c0)) IN (((vt1.c1)==(vt1.c0)))));
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS BLOB)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS BLOB)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS BLOB));
SELECT * FROM t1, vt0, vt1 WHERE (CAST(((vt0.c2) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS NUMERIC)) ORDER BY ((vt0.c1)<<(t1.c0)) COLLATE RTRIM ASC, ((((CAST(vt1.c1 AS NUMERIC))OR(vt0.c0)))OR((vt1.c1 IN (vt0.c1, vt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((vt0.c1)<<(t1.c0)) COLLATE RTRIM ASC, ((((CAST(vt1.c1 AS NUMERIC))OR(vt0.c0)))OR((vt1.c1 IN (vt0.c1, vt0.c2)))));
SELECT * FROM t1, vt0, vt1 WHERE (CAST(((vt0.c2) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS NUMERIC)) ORDER BY ((vt0.c1)<<(t1.c0)) COLLATE RTRIM ASC, ((((CAST(vt1.c1 AS NUMERIC))OR(vt0.c0)))OR((vt1.c1 IN (vt0.c1, vt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((vt0.c1)<<(t1.c0)) COLLATE RTRIM ASC, ((((CAST(vt1.c1 AS NUMERIC))OR(vt0.c0)))OR((vt1.c1 IN (vt0.c1, vt0.c2)))));
SELECT * FROM t1, vt0, vt1 WHERE (CAST(((vt0.c2) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS NUMERIC)) ORDER BY ((vt0.c1)<<(t1.c0)) COLLATE RTRIM ASC, ((((CAST(vt1.c1 AS NUMERIC))OR(vt0.c0)))OR((vt1.c1 IN (vt0.c1, vt0.c2))));
SELECT * FROM vt0 WHERE (vt0.c2) ORDER BY DATE(vt0.c0, CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END, (((vt0.c0))<=((vt0.c1))), CAST(vt0.c2 AS NUMERIC), NULL)  NULLS FIRST, ((('403758371')) NOT BETWEEN ((vt0.c2 COLLATE RTRIM)) AND ((((NULL) IS FALSE))))  NULLS LAST, vt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY DATE(vt0.c0, CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END, (((vt0.c0))<=((vt0.c1))), CAST(vt0.c2 AS NUMERIC), NULL)  NULLS FIRST, ((('403758371')) NOT BETWEEN ((vt0.c2 COLLATE RTRIM)) AND ((((NULL) IS FALSE))))  NULLS LAST, vt0.c2 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c2) ORDER BY DATE(vt0.c0, CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END, (((vt0.c0))<=((vt0.c1))), CAST(vt0.c2 AS NUMERIC), NULL)  NULLS FIRST, ((('403758371')) NOT BETWEEN ((vt0.c2 COLLATE RTRIM)) AND ((((NULL) IS FALSE))))  NULLS LAST, vt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY DATE(vt0.c0, CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END, (((vt0.c0))<=((vt0.c1))), CAST(vt0.c2 AS NUMERIC), NULL)  NULLS FIRST, ((('403758371')) NOT BETWEEN ((vt0.c2 COLLATE RTRIM)) AND ((((NULL) IS FALSE))))  NULLS LAST, vt0.c2 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c2) ORDER BY DATE(vt0.c0, CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END, (((vt0.c0))<=((vt0.c1))), CAST(vt0.c2 AS NUMERIC), NULL)  NULLS FIRST, ((('403758371')) NOT BETWEEN ((vt0.c2 COLLATE RTRIM)) AND ((((NULL) IS FALSE))))  NULLS LAST, vt0.c2 ASC  NULLS FIRST;
SELECT * FROM t1 INDEXED BY i98 INNER JOIN vt1 ON (((vt1.c1, vt0.c1, t1.c0, vt1.c0, vt0.c2)) NOT BETWEEN (((((vt1.c0))<((t1.c0))), NULL, ((vt0.c0)<<(vt1.c1)), CHANGES(), ((vt1.c1)>=(t1.c0)))) AND (('TRc\eBfj', (~ (t1.c0)), (- (vt0.c0)), '-1976799413', CAST(t1.c0 AS TEXT)))) RIGHT OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (CASE 0.12671668371467937  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END) AND (0.5723073504608043)) WHERE ((((NOT (vt0.c0)))>(((((NULL)AND(vt0.c2)))AND(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))>(((((NULL)AND(vt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM t1 INDEXED BY i98 INNER JOIN vt1 ON (((vt1.c1, vt0.c1, t1.c0, vt1.c0, vt0.c2)) NOT BETWEEN (((((vt1.c0))<((t1.c0))), NULL, ((vt0.c0)<<(vt1.c1)), CHANGES(), ((vt1.c1)>=(t1.c0)))) AND (('TRc\eBfj', (~ (t1.c0)), (- (vt0.c0)), '-1976799413', CAST(t1.c0 AS TEXT)))) RIGHT OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (CASE 0.12671668371467937  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END) AND (0.5723073504608043)));
SELECT * FROM t1 INDEXED BY i98 INNER JOIN vt1 ON (((vt1.c1, vt0.c1, t1.c0, vt1.c0, vt0.c2)) NOT BETWEEN (((((vt1.c0))<((t1.c0))), NULL, ((vt0.c0)<<(vt1.c1)), CHANGES(), ((vt1.c1)>=(t1.c0)))) AND (('TRc\eBfj', (~ (t1.c0)), (- (vt0.c0)), '-1976799413', CAST(t1.c0 AS TEXT)))) RIGHT OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (CASE 0.12671668371467937  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END) AND (0.5723073504608043)) WHERE ((((NOT (vt0.c0)))>(((((NULL)AND(vt0.c2)))AND(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))>(((((NULL)AND(vt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM t1 INDEXED BY i98 INNER JOIN vt1 ON (((vt1.c1, vt0.c1, t1.c0, vt1.c0, vt0.c2)) NOT BETWEEN (((((vt1.c0))<((t1.c0))), NULL, ((vt0.c0)<<(vt1.c1)), CHANGES(), ((vt1.c1)>=(t1.c0)))) AND (('TRc\eBfj', (~ (t1.c0)), (- (vt0.c0)), '-1976799413', CAST(t1.c0 AS TEXT)))) RIGHT OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (CASE 0.12671668371467937  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END) AND (0.5723073504608043)));
SELECT ALL COUNT(*) FROM t1, vt0 RIGHT OUTER JOIN vt1 ON ((((((0.6610384750224788)OR(t1.c0)))OR(NULL)))AND(((vt0.c2) ISNULL))) WHERE ((vt1.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t1, vt0 RIGHT OUTER JOIN vt1 ON ((((((0.6610384750224788)OR(t1.c0)))OR(NULL)))AND(((vt0.c2) ISNULL))));
SELECT ALL COUNT(*) FROM t1, vt0 RIGHT OUTER JOIN vt1 ON ((((((0.6610384750224788)OR(t1.c0)))OR(NULL)))AND(((vt0.c2) ISNULL))) WHERE ((vt1.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t1, vt0 RIGHT OUTER JOIN vt1 ON ((((((0.6610384750224788)OR(t1.c0)))OR(NULL)))AND(((vt0.c2) ISNULL))));
SELECT ALL COUNT(*) FROM t1, vt0 RIGHT OUTER JOIN vt1 ON ((((((0.6610384750224788)OR(t1.c0)))OR(NULL)))AND(((vt0.c2) ISNULL))) WHERE ((vt1.c1 COLLATE NOCASE IN ()));
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)-(((((vt0.c1)OR(vt0.c2)))AND(NULL))))) ORDER BY (~ (vt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)-(((((vt0.c1)OR(vt0.c2)))AND(NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c2)) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)-(((((vt0.c1)OR(vt0.c2)))AND(NULL))))) ORDER BY (~ (vt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)-(((((vt0.c1)OR(vt0.c2)))AND(NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c2)) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)-(((((vt0.c1)OR(vt0.c2)))AND(NULL))))) ORDER BY (~ (vt0.c2)) DESC;
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((CASE t1.c0  WHEN vt0.c2 THEN x'ffaf' ELSE vt0.c2 END)<(((vt1.c1) NOTNULL))) WHERE (CASE CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END  WHEN x'' THEN ((('-1206740887')) NOT BETWEEN ((t1.c0)) AND ((vt0.c2))) END) ORDER BY (((vt1.c1 IN ()))|(0.2991523229259898)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END  WHEN x'' THEN ((('-1206740887')) NOT BETWEEN ((t1.c0)) AND ((vt0.c2))) END) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((CASE t1.c0  WHEN vt0.c2 THEN x'ffaf' ELSE vt0.c2 END)<(((vt1.c1) NOTNULL))) ORDER BY (((vt1.c1 IN ()))|(0.2991523229259898)) ASC);
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((CASE t1.c0  WHEN vt0.c2 THEN x'ffaf' ELSE vt0.c2 END)<(((vt1.c1) NOTNULL))) WHERE (CASE CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END  WHEN x'' THEN ((('-1206740887')) NOT BETWEEN ((t1.c0)) AND ((vt0.c2))) END) ORDER BY (((vt1.c1 IN ()))|(0.2991523229259898)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END  WHEN x'' THEN ((('-1206740887')) NOT BETWEEN ((t1.c0)) AND ((vt0.c2))) END) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((CASE t1.c0  WHEN vt0.c2 THEN x'ffaf' ELSE vt0.c2 END)<(((vt1.c1) NOTNULL))) ORDER BY (((vt1.c1 IN ()))|(0.2991523229259898)) ASC);
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((CASE t1.c0  WHEN vt0.c2 THEN x'ffaf' ELSE vt0.c2 END)<(((vt1.c1) NOTNULL))) WHERE (CASE CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END  WHEN x'' THEN ((('-1206740887')) NOT BETWEEN ((t1.c0)) AND ((vt0.c2))) END) ORDER BY (((vt1.c1 IN ()))|(0.2991523229259898)) ASC;
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (vt1.c0) ORDER BY ((((((0Xfffffffffd1240bf)<<(vt1.c1)))AND(((vt1.c0)%(vt1.c1)))))OR(vt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, vt1 ORDER BY ((((((0Xfffffffffd1240bf)<<(vt1.c1)))AND(((vt1.c0)%(vt1.c1)))))OR(vt1.c1)) DESC);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (vt1.c0) ORDER BY ((((((0Xfffffffffd1240bf)<<(vt1.c1)))AND(((vt1.c0)%(vt1.c1)))))OR(vt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, vt1 ORDER BY ((((((0Xfffffffffd1240bf)<<(vt1.c1)))AND(((vt1.c0)%(vt1.c1)))))OR(vt1.c1)) DESC);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (vt1.c0) ORDER BY ((((((0Xfffffffffd1240bf)<<(vt1.c1)))AND(((vt1.c0)%(vt1.c1)))))OR(vt1.c1)) DESC;
SELECT * FROM vt0 WHERE (((vt0.c2)%(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c2)%(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c2)%(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c2)%(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c2)%(vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (CAST(((vt0.c2) NOT NULL) AS REAL)) ORDER BY (~ (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2) NOT NULL) AS REAL)) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (~ (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (CAST(((vt0.c2) NOT NULL) AS REAL)) ORDER BY (~ (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2) NOT NULL) AS REAL)) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (~ (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (CAST(((vt0.c2) NOT NULL) AS REAL)) ORDER BY (~ (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ('-2120814336') ORDER BY (vt1.c1 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (('-2120814336') IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 IN ()) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt1 WHERE ('-2120814336') ORDER BY (vt1.c1 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (('-2120814336') IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 IN ()) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt1 WHERE ('-2120814336') ORDER BY (vt1.c1 IN ()) COLLATE RTRIM ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL))!=(IFNULL(DISTINCT vt0.c2, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))<>(IFNULL(DISTINCT vt0.c2, vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL))!=(IFNULL(DISTINCT vt0.c2, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))<>(IFNULL(DISTINCT vt0.c2, vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL))!=(IFNULL(DISTINCT vt0.c2, vt1.c0))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((NOT (vt0.c2)))-(((NULL) ISNULL)))) ORDER BY (NOT ((- (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c2)))-(((NULL) ISNULL)))) IS TRUE)  as count FROM vt0, t1 ORDER BY (NOT ((- (vt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((NOT (vt0.c2)))-(((NULL) ISNULL)))) ORDER BY (NOT ((- (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c2)))-(((NULL) ISNULL)))) IS TRUE)  as count FROM vt0, t1 ORDER BY (NOT ((- (vt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((NOT (vt0.c2)))-(((NULL) ISNULL)))) ORDER BY (NOT ((- (vt0.c1)))) DESC  NULLS LAST;
SELECT * FROM vt1, t1, vt0 WHERE (CAST(TYPEOF(vt0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(vt0.c1) AS INTEGER)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT * FROM vt1, t1, vt0 WHERE (CAST(TYPEOF(vt0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(vt0.c1) AS INTEGER)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT * FROM vt1, t1, vt0 WHERE (CAST(TYPEOF(vt0.c1) AS INTEGER));
SELECT COUNT(*) FROM t1, vt0 WHERE ((((vt0.c1)AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)AND(vt0.c0)) IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((vt0.c1)AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)AND(vt0.c0)) IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((vt0.c1)AND(vt0.c0)) IN ()));
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (t1.c0 COLLATE BINARY) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) BETWEEN (t1.c0 COLLATE BINARY) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (t1.c0 COLLATE BINARY) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) BETWEEN (t1.c0 COLLATE BINARY) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (t1.c0 COLLATE BINARY) AND (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t1 ON vt0.c1 WHERE ((HEX(vt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((HEX(vt0.c1) IN ())) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t1 ON vt0.c1);
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t1 ON vt0.c1 WHERE ((HEX(vt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((HEX(vt0.c1) IN ())) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t1 ON vt0.c1);
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t1 ON vt0.c1 WHERE ((HEX(vt0.c1) IN ()));
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i90 WHERE (CASE WHEN CASE '-1299477207'  WHEN vt1.c0 THEN vt1.c1 END THEN (('0.036770404798755485') BETWEEN (vt1.c0) AND (vt1.c1)) ELSE 0.8261432225355462 COLLATE RTRIM END) ORDER BY (((((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(SQLITE_SOURCE_ID())))AND(((vt1.c1)OR(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE '-1299477207'  WHEN vt1.c0 THEN vt1.c1 END THEN (('0.036770404798755485') BETWEEN (vt1.c0) AND (vt1.c1)) ELSE 0.8261432225355462 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 INDEXED BY i90 ORDER BY (((((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(SQLITE_SOURCE_ID())))AND(((vt1.c1)OR(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i90 WHERE (CASE WHEN CASE '-1299477207'  WHEN vt1.c0 THEN vt1.c1 END THEN (('0.036770404798755485') BETWEEN (vt1.c0) AND (vt1.c1)) ELSE 0.8261432225355462 COLLATE RTRIM END) ORDER BY (((((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(SQLITE_SOURCE_ID())))AND(((vt1.c1)OR(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE '-1299477207'  WHEN vt1.c0 THEN vt1.c1 END THEN (('0.036770404798755485') BETWEEN (vt1.c0) AND (vt1.c1)) ELSE 0.8261432225355462 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 INDEXED BY i90 ORDER BY (((((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(SQLITE_SOURCE_ID())))AND(((vt1.c1)OR(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((1483121517 IN (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((1483121517 IN (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((1483121517 IN (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((1483121517 IN (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((1483121517 IN (vt1.c0)) AS BLOB));
SELECT * FROM vt0, vt1, t1 WHERE (((((((((vt1.c1)AND(LOWER(DISTINCT NULL))))AND((+ (vt1.c0)))))AND((x'6d1b' IN (vt0.c1)))))OR(((vt0.c0)=(vt0.c0))))) ORDER BY (((vt0.c1 IN ()))>=(vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c1)AND(LOWER(DISTINCT NULL))))AND((+ (vt1.c0)))))AND((x'6d1b' IN (vt0.c1)))))OR(((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (((vt0.c1 IN ()))>=(vt1.c0 COLLATE NOCASE)));
SELECT * FROM vt0, vt1, t1 WHERE (((((((((vt1.c1)AND(LOWER(DISTINCT NULL))))AND((+ (vt1.c0)))))AND((x'6d1b' IN (vt0.c1)))))OR(((vt0.c0)=(vt0.c0))))) ORDER BY (((vt0.c1 IN ()))>=(vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c1)AND(LOWER(DISTINCT NULL))))AND((+ (vt1.c0)))))AND((x'6d1b' IN (vt0.c1)))))OR(((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (((vt0.c1 IN ()))>=(vt1.c0 COLLATE NOCASE)));
SELECT * FROM vt0, vt1, t1 WHERE (((((((((vt1.c1)AND(LOWER(DISTINCT NULL))))AND((+ (vt1.c0)))))AND((x'6d1b' IN (vt0.c1)))))OR(((vt0.c0)=(vt0.c0))))) ORDER BY (((vt0.c1 IN ()))>=(vt1.c0 COLLATE NOCASE));
SELECT COUNT(*) FROM t1, vt1 WHERE (x'') ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1, vt1 ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) DESC);
SELECT COUNT(*) FROM t1, vt1 WHERE (x'') ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1, vt1 ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) DESC);
SELECT COUNT(*) FROM t1, vt1 WHERE (x'') ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) DESC;
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c1)&(vt1.c1)) THEN CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0)<<(vt1.c0)) WHEN (((vt1.c0))!=((NULL))) THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1)&(vt1.c1)) THEN CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0)<<(vt1.c0)) WHEN (((vt1.c0))<>((NULL))) THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c1)&(vt1.c1)) THEN CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0)<<(vt1.c0)) WHEN (((vt1.c0))!=((NULL))) THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1)&(vt1.c1)) THEN CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0)<<(vt1.c0)) WHEN (((vt1.c0))<>((NULL))) THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c1)&(vt1.c1)) THEN CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0)<<(vt1.c0)) WHEN (((vt1.c0))!=((NULL))) THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) END);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((CAST(vt1.c0 AS TEXT))OR((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT))OR((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((CAST(vt1.c0 AS TEXT))OR((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT))OR((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((CAST(vt1.c0 AS TEXT))OR((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c2))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((~ (vt1.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c1))) ISNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((~ (vt1.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c1))) ISNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((~ (vt1.c1))) ISNULL));
SELECT ALL * FROM vt0, t1 LEFT OUTER JOIN vt1 ON CASE WHEN NULL THEN (vt0.c2 IN ()) END WHERE (((vt1.c1 COLLATE NOCASE) NOT NULL)) ORDER BY (((vt0.c2)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) DESC, (((vt0.c0)&(vt1.c1)) IN ()) ASC  NULLS FIRST, ((((((((((((((x'')AND(vt1.c1)))OR(0.5984513845779885)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))LIKE(vt1.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN vt1 ON CASE WHEN NULL THEN (vt0.c2 IN ()) END ORDER BY (((vt0.c2)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) DESC, (((vt0.c0)&(vt1.c1)) IN ()) ASC  NULLS FIRST, ((((((((((((((x'')AND(vt1.c1)))OR(0.5984513845779885)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))LIKE(vt1.c1 COLLATE BINARY)) ASC);
SELECT ALL * FROM vt0, t1 LEFT OUTER JOIN vt1 ON CASE WHEN NULL THEN (vt0.c2 IN ()) END WHERE (((vt1.c1 COLLATE NOCASE) NOT NULL)) ORDER BY (((vt0.c2)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) DESC, (((vt0.c0)&(vt1.c1)) IN ()) ASC  NULLS FIRST, ((((((((((((((x'')AND(vt1.c1)))OR(0.5984513845779885)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))LIKE(vt1.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN vt1 ON CASE WHEN NULL THEN (vt0.c2 IN ()) END ORDER BY (((vt0.c2)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) DESC, (((vt0.c0)&(vt1.c1)) IN ()) ASC  NULLS FIRST, ((((((((((((((x'')AND(vt1.c1)))OR(0.5984513845779885)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))LIKE(vt1.c1 COLLATE BINARY)) ASC);
SELECT ALL * FROM vt0, t1 LEFT OUTER JOIN vt1 ON CASE WHEN NULL THEN (vt0.c2 IN ()) END WHERE (((vt1.c1 COLLATE NOCASE) NOT NULL)) ORDER BY (((vt0.c2)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) DESC, (((vt0.c0)&(vt1.c1)) IN ()) ASC  NULLS FIRST, ((((((((((((((x'')AND(vt1.c1)))OR(0.5984513845779885)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))LIKE(vt1.c1 COLLATE BINARY)) ASC;
SELECT * FROM vt0, vt1, t1 WHERE ((((((vt1.c0))<((vt1.c0)))) IS TRUE)) ORDER BY (~ (TRIM(vt0.c2, vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (~ (TRIM(vt0.c2, vt0.c0)))  NULLS LAST);
SELECT * FROM vt0, vt1, t1 WHERE ((((((vt1.c0))<((vt1.c0)))) IS TRUE)) ORDER BY (~ (TRIM(vt0.c2, vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (~ (TRIM(vt0.c2, vt0.c0)))  NULLS LAST);
SELECT * FROM vt0, vt1, t1 WHERE ((((((vt1.c0))<((vt1.c0)))) IS TRUE)) ORDER BY (~ (TRIM(vt0.c2, vt0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1 WHERE (TRIM(((vt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c2) ISNULL))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (TRIM(((vt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c2) ISNULL))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (TRIM(((vt0.c2) ISNULL)));
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT * FROM t1 WHERE (CAST(t1.c0 AS TEXT)) ORDER BY CASE WHEN (t1.c0 IN ()) THEN LOWER(DISTINCT t1.c0) WHEN ((t1.c0)/(t1.c0)) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END WHEN 0.5442733469860348 COLLATE NOCASE THEN t1.c0 COLLATE RTRIM ELSE t1.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (t1.c0 IN ()) THEN LOWER(DISTINCT t1.c0) WHEN ((t1.c0)/(t1.c0)) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END WHEN 0.5442733469860348 COLLATE NOCASE THEN t1.c0 COLLATE RTRIM ELSE t1.c0 END  NULLS LAST);
SELECT * FROM t1 WHERE (CAST(t1.c0 AS TEXT)) ORDER BY CASE WHEN (t1.c0 IN ()) THEN LOWER(DISTINCT t1.c0) WHEN ((t1.c0)/(t1.c0)) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END WHEN 0.5442733469860348 COLLATE NOCASE THEN t1.c0 COLLATE RTRIM ELSE t1.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (t1.c0 IN ()) THEN LOWER(DISTINCT t1.c0) WHEN ((t1.c0)/(t1.c0)) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END WHEN 0.5442733469860348 COLLATE NOCASE THEN t1.c0 COLLATE RTRIM ELSE t1.c0 END  NULLS LAST);
SELECT * FROM t1 WHERE (CAST(t1.c0 AS TEXT)) ORDER BY CASE WHEN (t1.c0 IN ()) THEN LOWER(DISTINCT t1.c0) WHEN ((t1.c0)/(t1.c0)) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END WHEN 0.5442733469860348 COLLATE NOCASE THEN t1.c0 COLLATE RTRIM ELSE t1.c0 END  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))))) ORDER BY (((((((((NOT (vt0.c2)))AND(LIKELIHOOD(DISTINCT vt0.c0, 0.17488505710522328))))AND(vt0.c2 COLLATE RTRIM)))OR(LIKELY(DISTINCT t1.c0))))OR(((t1.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((((((((NOT (vt0.c2)))AND(LIKELIHOOD(DISTINCT vt0.c0, 0.17488505710522328))))AND(vt0.c2 COLLATE RTRIM)))OR(LIKELY(DISTINCT t1.c0))))OR(((t1.c0) ISNULL))) ASC);
SELECT ALL * FROM vt0, t1 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))))) ORDER BY (((((((((NOT (vt0.c2)))AND(LIKELIHOOD(DISTINCT vt0.c0, 0.17488505710522328))))AND(vt0.c2 COLLATE RTRIM)))OR(LIKELY(DISTINCT t1.c0))))OR(((t1.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((((((((NOT (vt0.c2)))AND(LIKELIHOOD(DISTINCT vt0.c0, 0.17488505710522328))))AND(vt0.c2 COLLATE RTRIM)))OR(LIKELY(DISTINCT t1.c0))))OR(((t1.c0) ISNULL))) ASC);
SELECT ALL * FROM vt0, t1 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))))) ORDER BY (((((((((NOT (vt0.c2)))AND(LIKELIHOOD(DISTINCT vt0.c0, 0.17488505710522328))))AND(vt0.c2 COLLATE RTRIM)))OR(LIKELY(DISTINCT t1.c0))))OR(((t1.c0) ISNULL))) ASC;
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt0.c1)), ((NULL)*(vt1.c0)), vt0.c2 COLLATE BINARY))>((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)), CAST(vt0.c1 AS REAL), (- (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c1)), ((NULL)*(vt1.c0)), vt0.c2 COLLATE BINARY))>((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)), CAST(vt0.c1 AS REAL), (- (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt0.c1)), ((NULL)*(vt1.c0)), vt0.c2 COLLATE BINARY))>((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)), CAST(vt0.c1 AS REAL), (- (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c1)), ((NULL)*(vt1.c0)), vt0.c2 COLLATE BINARY))>((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)), CAST(vt0.c1 AS REAL), (- (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt0.c1)), ((NULL)*(vt1.c0)), vt0.c2 COLLATE BINARY))>((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)), CAST(vt0.c1 AS REAL), (- (vt0.c0))))));
SELECT COUNT(*) FROM t1 WHERE (((t1.c0)OR(((t1.c0) ISNULL)))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)OR(((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY t1.c0);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0)OR(((t1.c0) ISNULL)))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)OR(((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY t1.c0);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0)OR(((t1.c0) ISNULL)))) ORDER BY t1.c0;
SELECT * FROM vt0, vt1, t1 WHERE ((((vt0.c0)) BETWEEN (((((vt1.c0))==((vt0.c2))))) AND ((vt1.c1)))) ORDER BY x'889ddcea' COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((((vt1.c0))=((vt0.c2))))) AND ((vt1.c1)))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY x'889ddcea' COLLATE RTRIM ASC);
SELECT * FROM vt0, vt1, t1 WHERE ((((vt0.c0)) BETWEEN (((((vt1.c0))==((vt0.c2))))) AND ((vt1.c1)))) ORDER BY x'889ddcea' COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((((vt1.c0))=((vt0.c2))))) AND ((vt1.c1)))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY x'889ddcea' COLLATE RTRIM ASC);
SELECT * FROM vt0, vt1, t1 WHERE ((((vt0.c0)) BETWEEN (((((vt1.c0))==((vt0.c2))))) AND ((vt1.c1)))) ORDER BY x'889ddcea' COLLATE RTRIM ASC;
SELECT * FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS REAL)) ORDER BY ((IFNULL(DISTINCT t1.c0, NULL)) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS REAL)) IS TRUE)  as count FROM t1 ORDER BY ((IFNULL(DISTINCT t1.c0, NULL)) ISNULL) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS REAL)) ORDER BY ((IFNULL(DISTINCT t1.c0, NULL)) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS REAL)) IS TRUE)  as count FROM t1 ORDER BY ((IFNULL(DISTINCT t1.c0, NULL)) ISNULL) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS REAL)) ORDER BY ((IFNULL(DISTINCT t1.c0, NULL)) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM vt1 FULL OUTER JOIN t1 ON (+ (vt1.c1 COLLATE BINARY)) CROSS JOIN vt0 ON (((vt0.c2, 'y&_', vt1.c1)) NOT BETWEEN ((((t1.c0) BETWEEN (vt0.c1) AND (0.26937546047729133)), ((NULL) IS FALSE), '-49818065' COLLATE RTRIM)) AND ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (~ (vt0.c1)), LIKELY(t1.c0)))) WHERE (((((vt0.c2) NOT NULL)) NOT BETWEEN ((t1.c0 IN ())) AND ((~ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOT NULL)) NOT BETWEEN ((t1.c0 IN ())) AND ((~ (vt1.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON (+ (vt1.c1 COLLATE BINARY)) CROSS JOIN vt0 ON (((vt0.c2, 'y&_', vt1.c1)) NOT BETWEEN ((((t1.c0) BETWEEN (vt0.c1) AND (0.26937546047729133)), ((NULL) IS FALSE), '-49818065' COLLATE RTRIM)) AND ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (~ (vt0.c1)), LIKELY(t1.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t1 ON (+ (vt1.c1 COLLATE BINARY)) CROSS JOIN vt0 ON (((vt0.c2, 'y&_', vt1.c1)) NOT BETWEEN ((((t1.c0) BETWEEN (vt0.c1) AND (0.26937546047729133)), ((NULL) IS FALSE), '-49818065' COLLATE RTRIM)) AND ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (~ (vt0.c1)), LIKELY(t1.c0)))) WHERE (((((vt0.c2) NOT NULL)) NOT BETWEEN ((t1.c0 IN ())) AND ((~ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOT NULL)) NOT BETWEEN ((t1.c0 IN ())) AND ((~ (vt1.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON (+ (vt1.c1 COLLATE BINARY)) CROSS JOIN vt0 ON (((vt0.c2, 'y&_', vt1.c1)) NOT BETWEEN ((((t1.c0) BETWEEN (vt0.c1) AND (0.26937546047729133)), ((NULL) IS FALSE), '-49818065' COLLATE RTRIM)) AND ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (~ (vt0.c1)), LIKELY(t1.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t1 ON (+ (vt1.c1 COLLATE BINARY)) CROSS JOIN vt0 ON (((vt0.c2, 'y&_', vt1.c1)) NOT BETWEEN ((((t1.c0) BETWEEN (vt0.c1) AND (0.26937546047729133)), ((NULL) IS FALSE), '-49818065' COLLATE RTRIM)) AND ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (~ (vt0.c1)), LIKELY(t1.c0)))) WHERE (((((vt0.c2) NOT NULL)) NOT BETWEEN ((t1.c0 IN ())) AND ((~ (vt1.c1)))));
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON 0x398dbfe7 WHERE (CAST((('W') IS FALSE) AS INTEGER)) ORDER BY (((+ (NULL)))/(((vt0.c2) BETWEEN (vt1.c1) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('W') IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON 0x398dbfe7 ORDER BY (((+ (NULL)))/(((vt0.c2) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON 0x398dbfe7 WHERE (CAST((('W') IS FALSE) AS INTEGER)) ORDER BY (((+ (NULL)))/(((vt0.c2) BETWEEN (vt1.c1) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('W') IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON 0x398dbfe7 ORDER BY (((+ (NULL)))/(((vt0.c2) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON 0x398dbfe7 WHERE (CAST((('W') IS FALSE) AS INTEGER)) ORDER BY (((+ (NULL)))/(((vt0.c2) BETWEEN (vt1.c1) AND (vt1.c1))));
SELECT COUNT(*) FROM vt1, t1 WHERE (CAST((- (vt1.c1)) AS TEXT)) ORDER BY vt1.c0 DESC  NULLS FIRST, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt1, t1 ORDER BY vt1.c0 DESC  NULLS FIRST, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1 WHERE (CAST((- (vt1.c1)) AS TEXT)) ORDER BY vt1.c0 DESC  NULLS FIRST, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt1, t1 ORDER BY vt1.c0 DESC  NULLS FIRST, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1 WHERE (CAST((- (vt1.c1)) AS TEXT)) ORDER BY vt1.c0 DESC  NULLS FIRST, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((NULL IN ()));
SELECT ALL * FROM vt0, vt1 WHERE (-723206180);
SELECT SUM(count) FROM (SELECT ((-723206180) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (-723206180);
SELECT SUM(count) FROM (SELECT ((-723206180) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (-723206180);
SELECT * FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('');
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CASE vt0.c2  WHEN ((vt1.c0)GLOB(vt0.c2)) THEN IFNULL(DISTINCT vt1.c1, vt1.c1) WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)IS(vt1.c0)) WHEN vt0.c1 COLLATE NOCASE THEN (((vt0.c0, vt0.c1, 0.5723073504608043)) NOT BETWEEN ((vt1.c0, vt0.c2, vt0.c0)) AND ((vt0.c2, vt1.c1, vt0.c1))) ELSE CAST(vt1.c1 AS INTEGER) END) ORDER BY ((CASE 0X46bfd82a  WHEN 1909198659 THEN vt1.c0 ELSE '' END) NOT BETWEEN ((t1.c0 IN ())) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c2  WHEN ((vt1.c0)GLOB(vt0.c2)) THEN IFNULL(DISTINCT vt1.c1, vt1.c1) WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)IS(vt1.c0)) WHEN vt0.c1 COLLATE NOCASE THEN (((vt0.c0, vt0.c1, 0.5723073504608043)) NOT BETWEEN ((vt1.c0, vt0.c2, vt0.c0)) AND ((vt0.c2, vt1.c1, vt0.c1))) ELSE CAST(vt1.c1 AS INTEGER) END) IS TRUE)  as count FROM vt0, t1 NOT INDEXED, vt1 ORDER BY ((CASE 0x46bfd82a  WHEN 1909198659 THEN vt1.c0 ELSE '' END) NOT BETWEEN ((t1.c0 IN ())) AND (vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CASE vt0.c2  WHEN ((vt1.c0)GLOB(vt0.c2)) THEN IFNULL(DISTINCT vt1.c1, vt1.c1) WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)IS(vt1.c0)) WHEN vt0.c1 COLLATE NOCASE THEN (((vt0.c0, vt0.c1, 0.5723073504608043)) NOT BETWEEN ((vt1.c0, vt0.c2, vt0.c0)) AND ((vt0.c2, vt1.c1, vt0.c1))) ELSE CAST(vt1.c1 AS INTEGER) END) ORDER BY ((CASE 0X46bfd82a  WHEN 1909198659 THEN vt1.c0 ELSE '' END) NOT BETWEEN ((t1.c0 IN ())) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c2  WHEN ((vt1.c0)GLOB(vt0.c2)) THEN IFNULL(DISTINCT vt1.c1, vt1.c1) WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)IS(vt1.c0)) WHEN vt0.c1 COLLATE NOCASE THEN (((vt0.c0, vt0.c1, 0.5723073504608043)) NOT BETWEEN ((vt1.c0, vt0.c2, vt0.c0)) AND ((vt0.c2, vt1.c1, vt0.c1))) ELSE CAST(vt1.c1 AS INTEGER) END) IS TRUE)  as count FROM vt0, t1 NOT INDEXED, vt1 ORDER BY ((CASE 0x46bfd82a  WHEN 1909198659 THEN vt1.c0 ELSE '' END) NOT BETWEEN ((t1.c0 IN ())) AND (vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CASE vt0.c2  WHEN ((vt1.c0)GLOB(vt0.c2)) THEN IFNULL(DISTINCT vt1.c1, vt1.c1) WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)IS(vt1.c0)) WHEN vt0.c1 COLLATE NOCASE THEN (((vt0.c0, vt0.c1, 0.5723073504608043)) NOT BETWEEN ((vt1.c0, vt0.c2, vt0.c0)) AND ((vt0.c2, vt1.c1, vt0.c1))) ELSE CAST(vt1.c1 AS INTEGER) END) ORDER BY ((CASE 0X46bfd82a  WHEN 1909198659 THEN vt1.c0 ELSE '' END) NOT BETWEEN ((t1.c0 IN ())) AND (vt0.c0))  NULLS LAST;
SELECT * FROM vt1, t1, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT * FROM vt1, t1, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT * FROM vt1, t1, vt0 WHERE (vt0.c2);
SELECT ALL * FROM t1, vt1 LEFT OUTER JOIN vt0 ON CAST((vt0.c1 IN (vt0.c2)) AS TEXT) WHERE (((t1.c0)-(vt1.c1 COLLATE NOCASE))) ORDER BY ((((vt1.c1)>=(vt0.c2))) IS FALSE), CAST(((vt0.c1) BETWEEN (0.3155724302900098) AND (t1.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)-(vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt1 LEFT OUTER JOIN vt0 ON CAST((vt0.c1 IN (vt0.c2)) AS TEXT) ORDER BY ((((vt1.c1)>=(vt0.c2))) IS FALSE), CAST(((vt0.c1) BETWEEN (0.3155724302900098) AND (t1.c0)) AS REAL));
SELECT ALL * FROM t1, vt1 LEFT OUTER JOIN vt0 ON CAST((vt0.c1 IN (vt0.c2)) AS TEXT) WHERE (((t1.c0)-(vt1.c1 COLLATE NOCASE))) ORDER BY ((((vt1.c1)>=(vt0.c2))) IS FALSE), CAST(((vt0.c1) BETWEEN (0.3155724302900098) AND (t1.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)-(vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt1 LEFT OUTER JOIN vt0 ON CAST((vt0.c1 IN (vt0.c2)) AS TEXT) ORDER BY ((((vt1.c1)>=(vt0.c2))) IS FALSE), CAST(((vt0.c1) BETWEEN (0.3155724302900098) AND (t1.c0)) AS REAL));
SELECT ALL * FROM t1, vt1 LEFT OUTER JOIN vt0 ON CAST((vt0.c1 IN (vt0.c2)) AS TEXT) WHERE (((t1.c0)-(vt1.c1 COLLATE NOCASE))) ORDER BY ((((vt1.c1)>=(vt0.c2))) IS FALSE), CAST(((vt0.c1) BETWEEN (0.3155724302900098) AND (t1.c0)) AS REAL);
SELECT * FROM t1, vt0 INNER JOIN vt1 ON ((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN (0.7045639177198322) AND (CAST(vt1.c1 AS NUMERIC))) WHERE (((TYPEOF(DISTINCT vt0.c1))GLOB(((0.6609973321587438) BETWEEN (t1.c0) AND (vt0.c2))))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS REAL)  NULLS LAST, vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT vt0.c1))GLOB(((0.6609973321587438) BETWEEN (t1.c0) AND (vt0.c2))))) IS TRUE)  as count FROM t1, vt0 INNER JOIN vt1 ON ((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN (0.7045639177198322) AND (CAST(vt1.c1 AS NUMERIC))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS REAL)  NULLS LAST, vt1.c1 ASC);
SELECT * FROM t1, vt0 INNER JOIN vt1 ON ((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN (0.7045639177198322) AND (CAST(vt1.c1 AS NUMERIC))) WHERE (((TYPEOF(DISTINCT vt0.c1))GLOB(((0.6609973321587438) BETWEEN (t1.c0) AND (vt0.c2))))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS REAL)  NULLS LAST, vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT vt0.c1))GLOB(((0.6609973321587438) BETWEEN (t1.c0) AND (vt0.c2))))) IS TRUE)  as count FROM t1, vt0 INNER JOIN vt1 ON ((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN (0.7045639177198322) AND (CAST(vt1.c1 AS NUMERIC))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS REAL)  NULLS LAST, vt1.c1 ASC);
SELECT * FROM t1, vt0 INNER JOIN vt1 ON ((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN (0.7045639177198322) AND (CAST(vt1.c1 AS NUMERIC))) WHERE (((TYPEOF(DISTINCT vt0.c1))GLOB(((0.6609973321587438) BETWEEN (t1.c0) AND (vt0.c2))))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS REAL)  NULLS LAST, vt1.c1 ASC;
SELECT * FROM vt1, vt0, t1 WHERE (((vt1.c1 COLLATE BINARY) NOT BETWEEN (0x1fd844f8) AND ((vt1.c0 IN (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY) NOT BETWEEN (0X1fd844f8) AND ((vt1.c0 IN (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (((vt1.c1 COLLATE BINARY) NOT BETWEEN (0x1fd844f8) AND ((vt1.c0 IN (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY) NOT BETWEEN (0X1fd844f8) AND ((vt1.c0 IN (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (((vt1.c1 COLLATE BINARY) NOT BETWEEN (0x1fd844f8) AND ((vt1.c0 IN (vt1.c1)))));
SELECT COUNT(*) FROM vt1, t1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE ((vt1.c0 IN ()));
SELECT COUNT(*) FROM vt1, t1 WHERE (((((vt1.c1)<=(vt1.c1)))IS NOT(((vt1.c0) IS TRUE)))) ORDER BY CAST(((vt1.c0)IS(t1.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)<=(vt1.c1)))IS NOT(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, t1 ORDER BY CAST(((vt1.c0)IS(t1.c0)) AS TEXT) DESC);
SELECT COUNT(*) FROM vt1, t1 WHERE (((((vt1.c1)<=(vt1.c1)))IS NOT(((vt1.c0) IS TRUE)))) ORDER BY CAST(((vt1.c0)IS(t1.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)<=(vt1.c1)))IS NOT(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, t1 ORDER BY CAST(((vt1.c0)IS(t1.c0)) AS TEXT) DESC);
SELECT COUNT(*) FROM vt1, t1 WHERE (((((vt1.c1)<=(vt1.c1)))IS NOT(((vt1.c0) IS TRUE)))) ORDER BY CAST(((vt1.c0)IS(t1.c0)) AS TEXT) DESC;
SELECT ALL * FROM t1, vt0, vt1 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY ((((vt0.c2)<('1575010336')))<(((vt0.c1)>=(t1.c0))))  NULLS FIRST, (((t1.c0, t1.c0, vt1.c0)) BETWEEN (((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (NULL IN ()), (- (vt1.c0)))) AND ((((vt1.c0)<(vt1.c0)), (vt0.c2 IN ()), (NOT (vt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((((vt0.c2)<('1575010336')))<(((vt0.c1)>=(t1.c0))))  NULLS FIRST, (((t1.c0, t1.c0, vt1.c0)) BETWEEN (((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (NULL IN ()), (- (vt1.c0)))) AND ((((vt1.c0)<(vt1.c0)), (vt0.c2 IN ()), (NOT (vt0.c2))))) ASC  NULLS LAST);
SELECT ALL * FROM t1, vt0, vt1 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY ((((vt0.c2)<('1575010336')))<(((vt0.c1)>=(t1.c0))))  NULLS FIRST, (((t1.c0, t1.c0, vt1.c0)) BETWEEN (((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (NULL IN ()), (- (vt1.c0)))) AND ((((vt1.c0)<(vt1.c0)), (vt0.c2 IN ()), (NOT (vt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((((vt0.c2)<('1575010336')))<(((vt0.c1)>=(t1.c0))))  NULLS FIRST, (((t1.c0, t1.c0, vt1.c0)) BETWEEN (((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (NULL IN ()), (- (vt1.c0)))) AND ((((vt1.c0)<(vt1.c0)), (vt0.c2 IN ()), (NOT (vt0.c2))))) ASC  NULLS LAST);
SELECT ALL * FROM t1, vt0, vt1 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY ((((vt0.c2)<('1575010336')))<(((vt0.c1)>=(t1.c0))))  NULLS FIRST, (((t1.c0, t1.c0, vt1.c0)) BETWEEN (((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (NULL IN ()), (- (vt1.c0)))) AND ((((vt1.c0)<(vt1.c0)), (vt0.c2 IN ()), (NOT (vt0.c2))))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE ((((t1.c0 IN ())) NOTNULL)) ORDER BY ABS(DISTINCT (('485955200') NOT BETWEEN (t1.c0) AND (t1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY ABS(DISTINCT (('485955200') NOT BETWEEN (t1.c0) AND (t1.c0)))  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c0 IN ())) NOTNULL)) ORDER BY ABS(DISTINCT (('485955200') NOT BETWEEN (t1.c0) AND (t1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY ABS(DISTINCT (('485955200') NOT BETWEEN (t1.c0) AND (t1.c0)))  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c0 IN ())) NOTNULL)) ORDER BY ABS(DISTINCT (('485955200') NOT BETWEEN (t1.c0) AND (t1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN '245248215' THEN ((vt1.c1) NOTNULL) END) ORDER BY ((((((((((((CAST(x'' AS TEXT))OR(json_object(vt1.c0, vt1.c1, vt1.c0, vt1.c1))))AND(((vt1.c0) NOT NULL))))AND((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND((~ (vt1.c0)))))OR(((vt1.c0)%(vt1.c1)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '245248215' THEN ((vt1.c1) NOTNULL) END) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((CAST(x'' AS TEXT))OR(json_object(vt1.c0, vt1.c1, vt1.c0, vt1.c1))))AND(((vt1.c0) NOT NULL))))AND((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND((~ (vt1.c0)))))OR(((vt1.c0)%(vt1.c1)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN '245248215' THEN ((vt1.c1) NOTNULL) END) ORDER BY ((((((((((((CAST(x'' AS TEXT))OR(json_object(vt1.c0, vt1.c1, vt1.c0, vt1.c1))))AND(((vt1.c0) NOT NULL))))AND((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND((~ (vt1.c0)))))OR(((vt1.c0)%(vt1.c1)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '245248215' THEN ((vt1.c1) NOTNULL) END) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((CAST(x'' AS TEXT))OR(json_object(vt1.c0, vt1.c1, vt1.c0, vt1.c1))))AND(((vt1.c0) NOT NULL))))AND((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND((~ (vt1.c0)))))OR(((vt1.c0)%(vt1.c1)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 NOT INDEXED INNER JOIN t1 ON ((((((vt1.c1)AND(vt0.c0)))AND(vt0.c2)))LIKE(((((((((vt0.c1)OR(vt1.c1)))OR('55361802')))OR(vt0.c1)))AND(t1.c0)))) FULL OUTER JOIN vt0 ON vt0.c2 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END THEN NULL ELSE (((vt0.c0))<((vt0.c2))) END) ORDER BY (((t1.c0 IN (vt1.c0)))IS((+ (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END THEN NULL ELSE (((vt0.c0))<((vt0.c2))) END) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON ((((((vt1.c1)AND(vt0.c0)))AND(vt0.c2)))LIKE(((((((((vt0.c1)OR(vt1.c1)))OR('55361802')))OR(vt0.c1)))AND(t1.c0)))) FULL OUTER JOIN vt0 ON vt0.c2 ORDER BY (((t1.c0 IN (vt1.c0)))IS((+ (vt1.c1)))));
SELECT COUNT(*) FROM vt1 NOT INDEXED INNER JOIN t1 ON ((((((vt1.c1)AND(vt0.c0)))AND(vt0.c2)))LIKE(((((((((vt0.c1)OR(vt1.c1)))OR('55361802')))OR(vt0.c1)))AND(t1.c0)))) FULL OUTER JOIN vt0 ON vt0.c2 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END THEN NULL ELSE (((vt0.c0))<((vt0.c2))) END) ORDER BY (((t1.c0 IN (vt1.c0)))IS((+ (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END THEN NULL ELSE (((vt0.c0))<((vt0.c2))) END) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON ((((((vt1.c1)AND(vt0.c0)))AND(vt0.c2)))LIKE(((((((((vt0.c1)OR(vt1.c1)))OR('55361802')))OR(vt0.c1)))AND(t1.c0)))) FULL OUTER JOIN vt0 ON vt0.c2 ORDER BY (((t1.c0 IN (vt1.c0)))IS((+ (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF((~ (vt1.c0)), ((vt1.c0)>(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF((~ (vt1.c0)), ((vt1.c0)>(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF((~ (vt1.c0)), ((vt1.c0)>(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF((~ (vt1.c0)), ((vt1.c0)>(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF((~ (vt1.c0)), ((vt1.c0)>(vt1.c0))));
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c0)OR(vt1.c1)) IN ()) INNER JOIN vt1 ON ((((((((((((((((t1.c0)AND(vt0.c2)))AND(vt1.c1)))AND(t1.c0)))OR(vt1.c1)))OR(vt0.c2)))AND(vt0.c2)))OR(((vt0.c1)<(vt1.c1)))))OR(((vt0.c1)OR(vt1.c1)))) WHERE (((((vt1.c0) IS TRUE))<<(CASE WHEN '[][d]]' THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE))<<(CASE WHEN '[][d]]' THEN vt1.c1 END))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c0)OR(vt1.c1)) IN ()) INNER JOIN vt1 ON ((((((((((((((((t1.c0)AND(vt0.c2)))AND(vt1.c1)))AND(t1.c0)))OR(vt1.c1)))OR(vt0.c2)))AND(vt0.c2)))OR(((vt0.c1)<(vt1.c1)))))OR(((vt0.c1)OR(vt1.c1)))));
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c0)OR(vt1.c1)) IN ()) INNER JOIN vt1 ON ((((((((((((((((t1.c0)AND(vt0.c2)))AND(vt1.c1)))AND(t1.c0)))OR(vt1.c1)))OR(vt0.c2)))AND(vt0.c2)))OR(((vt0.c1)<(vt1.c1)))))OR(((vt0.c1)OR(vt1.c1)))) WHERE (((((vt1.c0) IS TRUE))<<(CASE WHEN '[][d]]' THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE))<<(CASE WHEN '[][d]]' THEN vt1.c1 END))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c0)OR(vt1.c1)) IN ()) INNER JOIN vt1 ON ((((((((((((((((t1.c0)AND(vt0.c2)))AND(vt1.c1)))AND(t1.c0)))OR(vt1.c1)))OR(vt0.c2)))AND(vt0.c2)))OR(((vt0.c1)<(vt1.c1)))))OR(((vt0.c1)OR(vt1.c1)))));
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c0)OR(vt1.c1)) IN ()) INNER JOIN vt1 ON ((((((((((((((((t1.c0)AND(vt0.c2)))AND(vt1.c1)))AND(t1.c0)))OR(vt1.c1)))OR(vt0.c2)))AND(vt0.c2)))OR(((vt0.c1)<(vt1.c1)))))OR(((vt0.c1)OR(vt1.c1)))) WHERE (((((vt1.c0) IS TRUE))<<(CASE WHEN '[][d]]' THEN vt1.c1 END)));
SELECT COUNT(*) FROM vt1, t1 WHERE (CASE ((vt1.c0)<(vt1.c1))  WHEN ((vt1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((vt1.c0) IS FALSE) ELSE (vt1.c1 IN ()) END) ORDER BY (((((vt1.c1 IN ()))OR(t1.c0)))AND((~ (t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)<(vt1.c1))  WHEN ((vt1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((vt1.c0) IS FALSE) ELSE (vt1.c1 IN ()) END) IS TRUE)  as count FROM vt1, t1 ORDER BY (((((vt1.c1 IN ()))OR(t1.c0)))AND((~ (t1.c0)))) DESC);
SELECT COUNT(*) FROM vt1, t1 WHERE (CASE ((vt1.c0)<(vt1.c1))  WHEN ((vt1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((vt1.c0) IS FALSE) ELSE (vt1.c1 IN ()) END) ORDER BY (((((vt1.c1 IN ()))OR(t1.c0)))AND((~ (t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)<(vt1.c1))  WHEN ((vt1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((vt1.c0) IS FALSE) ELSE (vt1.c1 IN ()) END) IS TRUE)  as count FROM vt1, t1 ORDER BY (((((vt1.c1 IN ()))OR(t1.c0)))AND((~ (t1.c0)))) DESC);
SELECT COUNT(*) FROM vt1, t1 WHERE (CASE ((vt1.c0)<(vt1.c1))  WHEN ((vt1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((vt1.c0) IS FALSE) ELSE (vt1.c1 IN ()) END) ORDER BY (((((vt1.c1 IN ()))OR(t1.c0)))AND((~ (t1.c0)))) DESC;
SELECT * FROM t1, vt1 WHERE ((((t1.c0, 0Xffffffffd181b05a, vt1.c1)) NOT BETWEEN ((((vt1.c1)|(t1.c0)), ((vt1.c1) ISNULL), ((vt1.c1) IS FALSE))) AND ((CAST(vt1.c1 AS NUMERIC), (t1.c0 IN ()), ((t1.c0)GLOB(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0, 0Xffffffffd181b05a, vt1.c1)) NOT BETWEEN ((((vt1.c1)|(t1.c0)), ((vt1.c1) ISNULL), ((vt1.c1) IS FALSE))) AND ((CAST(vt1.c1 AS NUMERIC), (t1.c0 IN ()), ((t1.c0)GLOB(vt1.c0)))))) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE ((((t1.c0, 0Xffffffffd181b05a, vt1.c1)) NOT BETWEEN ((((vt1.c1)|(t1.c0)), ((vt1.c1) ISNULL), ((vt1.c1) IS FALSE))) AND ((CAST(vt1.c1 AS NUMERIC), (t1.c0 IN ()), ((t1.c0)GLOB(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0, 0Xffffffffd181b05a, vt1.c1)) NOT BETWEEN ((((vt1.c1)|(t1.c0)), ((vt1.c1) ISNULL), ((vt1.c1) IS FALSE))) AND ((CAST(vt1.c1 AS NUMERIC), (t1.c0 IN ()), ((t1.c0)GLOB(vt1.c0)))))) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE ((((t1.c0, 0Xffffffffd181b05a, vt1.c1)) NOT BETWEEN ((((vt1.c1)|(t1.c0)), ((vt1.c1) ISNULL), ((vt1.c1) IS FALSE))) AND ((CAST(vt1.c1 AS NUMERIC), (t1.c0 IN ()), ((t1.c0)GLOB(vt1.c0))))));
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ('[OWh' IN ()) THEN (~ (vt1.c0)) END) ORDER BY (((((((x'')) BETWEEN ((vt0.c1)) AND ((vt1.c0))))AND(((vt1.c1) IS FALSE))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ('[OWh' IN ()) THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((x'')) BETWEEN ((vt0.c1)) AND ((vt1.c0))))AND(((vt1.c1) IS FALSE))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ('[OWh' IN ()) THEN (~ (vt1.c0)) END) ORDER BY (((((((x'')) BETWEEN ((vt0.c1)) AND ((vt1.c0))))AND(((vt1.c1) IS FALSE))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ('[OWh' IN ()) THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((x'')) BETWEEN ((vt0.c1)) AND ((vt1.c0))))AND(((vt1.c1) IS FALSE))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ('[OWh' IN ()) THEN (~ (vt1.c0)) END) ORDER BY (((((((x'')) BETWEEN ((vt0.c1)) AND ((vt1.c0))))AND(((vt1.c1) IS FALSE))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS FIRST;
SELECT * FROM t1 CROSS JOIN vt0 ON (((NULL, ((vt0.c0)<(t1.c0)), (t1.c0 IN ())))<((x'f400', vt0.c0, vt0.c2 COLLATE NOCASE))) WHERE (CAST((((t1.c0, vt0.c0, vt0.c2))<>((vt0.c1, vt0.c1, vt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((t1.c0, vt0.c0, vt0.c2))<>((vt0.c1, vt0.c1, vt0.c1))) AS INTEGER)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((NULL, ((vt0.c0)<(t1.c0)), (t1.c0 IN ())))<((x'f400', vt0.c0, vt0.c2 COLLATE NOCASE))));
SELECT * FROM t1 CROSS JOIN vt0 ON (((NULL, ((vt0.c0)<(t1.c0)), (t1.c0 IN ())))<((x'f400', vt0.c0, vt0.c2 COLLATE NOCASE))) WHERE (CAST((((t1.c0, vt0.c0, vt0.c2))<>((vt0.c1, vt0.c1, vt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((t1.c0, vt0.c0, vt0.c2))<>((vt0.c1, vt0.c1, vt0.c1))) AS INTEGER)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((NULL, ((vt0.c0)<(t1.c0)), (t1.c0 IN ())))<((x'f400', vt0.c0, vt0.c2 COLLATE NOCASE))));
SELECT * FROM t1 CROSS JOIN vt0 ON (((NULL, ((vt0.c0)<(t1.c0)), (t1.c0 IN ())))<((x'f400', vt0.c0, vt0.c2 COLLATE NOCASE))) WHERE (CAST((((t1.c0, vt0.c0, vt0.c2))<>((vt0.c1, vt0.c1, vt0.c1))) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)/(vt0.c0 COLLATE RTRIM))) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<>((CAST(vt0.c0 AS INTEGER))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)/(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<>((CAST(vt0.c0 AS INTEGER))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)/(vt0.c0 COLLATE RTRIM))) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<>((CAST(vt0.c0 AS INTEGER))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)/(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<>((CAST(vt0.c0 AS INTEGER))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)/(vt0.c0 COLLATE RTRIM))) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<>((CAST(vt0.c0 AS INTEGER))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))) ORDER BY vt0.c2, CAST((((vt0.c2, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c2, vt0.c2)) AND ((vt0.c1, 0.2135671388889, vt0.c0))) AS NUMERIC)  NULLS LAST, UPPER(vt0.c1 COLLATE RTRIM)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2, CAST((((vt0.c2, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c2, vt0.c2)) AND ((vt0.c1, 0.2135671388889, vt0.c0))) AS NUMERIC)  NULLS LAST, UPPER(vt0.c1 COLLATE RTRIM)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))) ORDER BY vt0.c2, CAST((((vt0.c2, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c2, vt0.c2)) AND ((vt0.c1, 0.2135671388889, vt0.c0))) AS NUMERIC)  NULLS LAST, UPPER(vt0.c1 COLLATE RTRIM)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2, CAST((((vt0.c2, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c2, vt0.c2)) AND ((vt0.c1, 0.2135671388889, vt0.c0))) AS NUMERIC)  NULLS LAST, UPPER(vt0.c1 COLLATE RTRIM)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))) ORDER BY vt0.c2, CAST((((vt0.c2, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c2, vt0.c2)) AND ((vt0.c1, 0.2135671388889, vt0.c0))) AS NUMERIC)  NULLS LAST, UPPER(vt0.c1 COLLATE RTRIM)  NULLS LAST;
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((((CASE WHEN vt0.c2 THEN vt0.c1 END))<>(((~ (vt0.c1)))))) ORDER BY vt1.c0 DESC, ((((vt1.c1) BETWEEN (t1.c0) AND (vt1.c1)))||(CASE WHEN t1.c0 THEN t1.c0 WHEN 'yN8-T jY' THEN vt0.c2 WHEN vt1.c0 THEN vt0.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c2 THEN vt0.c1 END))!=(((~ (vt0.c1)))))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY vt1.c0 DESC, ((((vt1.c1) BETWEEN (t1.c0) AND (vt1.c1)))||(CASE WHEN t1.c0 THEN t1.c0 WHEN 'yN8-T jY' THEN vt0.c2 WHEN vt1.c0 THEN vt0.c2 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((((CASE WHEN vt0.c2 THEN vt0.c1 END))<>(((~ (vt0.c1)))))) ORDER BY vt1.c0 DESC, ((((vt1.c1) BETWEEN (t1.c0) AND (vt1.c1)))||(CASE WHEN t1.c0 THEN t1.c0 WHEN 'yN8-T jY' THEN vt0.c2 WHEN vt1.c0 THEN vt0.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c2 THEN vt0.c1 END))!=(((~ (vt0.c1)))))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY vt1.c0 DESC, ((((vt1.c1) BETWEEN (t1.c0) AND (vt1.c1)))||(CASE WHEN t1.c0 THEN t1.c0 WHEN 'yN8-T jY' THEN vt0.c2 WHEN vt1.c0 THEN vt0.c2 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((((CASE WHEN vt0.c2 THEN vt0.c1 END))<>(((~ (vt0.c1)))))) ORDER BY vt1.c0 DESC, ((((vt1.c1) BETWEEN (t1.c0) AND (vt1.c1)))||(CASE WHEN t1.c0 THEN t1.c0 WHEN 'yN8-T jY' THEN vt0.c2 WHEN vt1.c0 THEN vt0.c2 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((NULL)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((((t1.c0) NOTNULL))))) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) ISNULL)  NULLS LAST, (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))) NOTNULL), (((((+ (t1.c0)))AND(t1.c0)))OR((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((((t1.c0) NOTNULL))))) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) ISNULL)  NULLS LAST, (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))) NOTNULL), (((((+ (t1.c0)))AND(t1.c0)))OR((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((NULL)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((((t1.c0) NOTNULL))))) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) ISNULL)  NULLS LAST, (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))) NOTNULL), (((((+ (t1.c0)))AND(t1.c0)))OR((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((((t1.c0) NOTNULL))))) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) ISNULL)  NULLS LAST, (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))) NOTNULL), (((((+ (t1.c0)))AND(t1.c0)))OR((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((NULL)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((((t1.c0) NOTNULL))))) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) ISNULL)  NULLS LAST, (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))) NOTNULL), (((((+ (t1.c0)))AND(t1.c0)))OR((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))) DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((CASE vt0.c2  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c2 END))>(('2013983807'))));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c2  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c2 END))>(('2013983807')))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((CASE vt0.c2  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c2 END))>(('2013983807'))));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c2  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c2 END))>(('2013983807')))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((CASE vt0.c2  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c2 END))>(('2013983807'))));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((NOT ('534267128')));
SELECT SUM(count) FROM (SELECT ALL (((NOT ('534267128'))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((NOT ('534267128')));
SELECT SUM(count) FROM (SELECT ALL (((NOT ('534267128'))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((NOT ('534267128')));
SELECT * FROM t1 CROSS JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((LTRIM(NULL, vt0.c2))) AND ((((t1.c0)!=(vt0.c2))))) WHERE (((((vt0.c2)IS NOT(t1.c0))) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)IS NOT(t1.c0))) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((LTRIM(NULL, vt0.c2))) AND ((((t1.c0)<>(vt0.c2))))));
SELECT * FROM t1 CROSS JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((LTRIM(NULL, vt0.c2))) AND ((((t1.c0)!=(vt0.c2))))) WHERE (((((vt0.c2)IS NOT(t1.c0))) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)IS NOT(t1.c0))) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((LTRIM(NULL, vt0.c2))) AND ((((t1.c0)<>(vt0.c2))))));
SELECT * FROM t1 CROSS JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((LTRIM(NULL, vt0.c2))) AND ((((t1.c0)!=(vt0.c2))))) WHERE (((((vt0.c2)IS NOT(t1.c0))) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL * FROM t1, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt1 WHERE (t1.c0);
SELECT * FROM t1, vt0 INNER JOIN vt1 ON (((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((t1.c0)))) BETWEEN ((+ (vt0.c1))) AND (vt1.c1 COLLATE RTRIM)) WHERE ((((((vt0.c2)AND(vt0.c1)))AND(t1.c0)) IN (((vt0.c0)||(vt0.c0)), (vt0.c0 IN ())))) ORDER BY (- (((vt1.c0)<(vt1.c0)))) DESC  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt1.c1 END)*((((vt0.c1))<>((vt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c2)AND(vt0.c1)))AND(t1.c0)) IN (((vt0.c0)||(vt0.c0)), (vt0.c0 IN ())))) IS TRUE)  as count FROM t1, vt0 INNER JOIN vt1 ON (((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((t1.c0)))) BETWEEN ((+ (vt0.c1))) AND (vt1.c1 COLLATE RTRIM)) ORDER BY (- (((vt1.c0)<(vt1.c0)))) DESC  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt1.c1 END)*((((vt0.c1))<>((vt0.c2))))) DESC  NULLS LAST);
SELECT * FROM t1, vt0 INNER JOIN vt1 ON (((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((t1.c0)))) BETWEEN ((+ (vt0.c1))) AND (vt1.c1 COLLATE RTRIM)) WHERE ((((((vt0.c2)AND(vt0.c1)))AND(t1.c0)) IN (((vt0.c0)||(vt0.c0)), (vt0.c0 IN ())))) ORDER BY (- (((vt1.c0)<(vt1.c0)))) DESC  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt1.c1 END)*((((vt0.c1))<>((vt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c2)AND(vt0.c1)))AND(t1.c0)) IN (((vt0.c0)||(vt0.c0)), (vt0.c0 IN ())))) IS TRUE)  as count FROM t1, vt0 INNER JOIN vt1 ON (((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((t1.c0)))) BETWEEN ((+ (vt0.c1))) AND (vt1.c1 COLLATE RTRIM)) ORDER BY (- (((vt1.c0)<(vt1.c0)))) DESC  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt1.c1 END)*((((vt0.c1))<>((vt0.c2))))) DESC  NULLS LAST);
SELECT * FROM t1, vt0 INNER JOIN vt1 ON (((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((t1.c0)))) BETWEEN ((+ (vt0.c1))) AND (vt1.c1 COLLATE RTRIM)) WHERE ((((((vt0.c2)AND(vt0.c1)))AND(t1.c0)) IN (((vt0.c0)||(vt0.c0)), (vt0.c0 IN ())))) ORDER BY (- (((vt1.c0)<(vt1.c0)))) DESC  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt1.c1 END)*((((vt0.c1))<>((vt0.c2))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (UPPER(((vt0.c2)==(vt0.c0)))) ORDER BY (((x'', vt0.c1, vt1.c1)) NOT BETWEEN ((((t1.c0) NOT NULL), (vt0.c1 IN ()), vt1.c0)) AND ((((vt0.c0) ISNULL), (((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((t1.c0))), ((vt1.c1)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((UPPER(((vt0.c2)==(vt0.c0)))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (((x'', vt0.c1, vt1.c1)) NOT BETWEEN ((((t1.c0) NOT NULL), (vt0.c1 IN ()), vt1.c0)) AND ((((vt0.c0) ISNULL), (((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((t1.c0))), ((vt1.c1)OR(vt0.c0))))));
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (UPPER(((vt0.c2)==(vt0.c0)))) ORDER BY (((x'', vt0.c1, vt1.c1)) NOT BETWEEN ((((t1.c0) NOT NULL), (vt0.c1 IN ()), vt1.c0)) AND ((((vt0.c0) ISNULL), (((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((t1.c0))), ((vt1.c1)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((UPPER(((vt0.c2)==(vt0.c0)))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (((x'', vt0.c1, vt1.c1)) NOT BETWEEN ((((t1.c0) NOT NULL), (vt0.c1 IN ()), vt1.c0)) AND ((((vt0.c0) ISNULL), (((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((t1.c0))), ((vt1.c1)OR(vt0.c0))))));
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (UPPER(((vt0.c2)==(vt0.c0)))) ORDER BY (((x'', vt0.c1, vt1.c1)) NOT BETWEEN ((((t1.c0) NOT NULL), (vt0.c1 IN ()), vt1.c0)) AND ((((vt0.c0) ISNULL), (((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((t1.c0))), ((vt1.c1)OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ('-1299477207') ORDER BY (1192748152 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1299477207') IS TRUE)  as count FROM vt0, t1 ORDER BY (1192748152 IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ('-1299477207') ORDER BY (1192748152 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1299477207') IS TRUE)  as count FROM vt0, t1 ORDER BY (1192748152 IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ('-1299477207') ORDER BY (1192748152 IN ()) ASC;
SELECT ALL * FROM t1 WHERE ((((t1.c0)&(t1.c0)) IN ())) ORDER BY TRIM(DISTINCT (t1.c0 IN ()), ((((0x16a9c293)AND(t1.c0)))OR(t1.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c0)&(t1.c0)) IN ())) IS TRUE)  as count FROM t1 ORDER BY TRIM(DISTINCT (t1.c0 IN ()), ((((0X16a9c293)AND(t1.c0)))OR(t1.c0))) DESC);
SELECT ALL * FROM t1 WHERE ((((t1.c0)&(t1.c0)) IN ())) ORDER BY TRIM(DISTINCT (t1.c0 IN ()), ((((0x16a9c293)AND(t1.c0)))OR(t1.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c0)&(t1.c0)) IN ())) IS TRUE)  as count FROM t1 ORDER BY TRIM(DISTINCT (t1.c0 IN ()), ((((0X16a9c293)AND(t1.c0)))OR(t1.c0))) DESC);
SELECT ALL * FROM t1 WHERE ((((t1.c0)&(t1.c0)) IN ())) ORDER BY TRIM(DISTINCT (t1.c0 IN ()), ((((0x16a9c293)AND(t1.c0)))OR(t1.c0))) DESC;
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (CAST(((0.1062530951095757) IS FALSE) AS BLOB)) ORDER BY ((((0.18685159381186756, vt0.c1, x'b533')) BETWEEN ((x'', t1.c0, NULL)) AND ((vt1.c0, vt0.c0, vt1.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.1062530951095757) IS FALSE) AS BLOB)) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((((0.18685159381186756, vt0.c1, x'b533')) BETWEEN ((x'', t1.c0, NULL)) AND ((vt1.c0, vt0.c0, vt1.c0))) IN ()) DESC);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (CAST(((0.1062530951095757) IS FALSE) AS BLOB)) ORDER BY ((((0.18685159381186756, vt0.c1, x'b533')) BETWEEN ((x'', t1.c0, NULL)) AND ((vt1.c0, vt0.c0, vt1.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.1062530951095757) IS FALSE) AS BLOB)) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((((0.18685159381186756, vt0.c1, x'b533')) BETWEEN ((x'', t1.c0, NULL)) AND ((vt1.c0, vt0.c0, vt1.c0))) IN ()) DESC);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (CAST(((0.1062530951095757) IS FALSE) AS BLOB)) ORDER BY ((((0.18685159381186756, vt0.c1, x'b533')) BETWEEN ((x'', t1.c0, NULL)) AND ((vt1.c0, vt0.c0, vt1.c0))) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (json_remove(((((vt0.c1)OR(vt0.c1)))OR(vt1.c1)), (vt0.c0 IN ()))) ORDER BY CASE vt0.c0  WHEN (vt0.c1 IN ()) THEN (- (vt0.c2)) ELSE (NOT (vt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((((vt0.c1)OR(vt0.c1)))OR(vt1.c1)), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE vt0.c0  WHEN (vt0.c1 IN ()) THEN (- (vt0.c2)) ELSE (NOT (vt0.c1)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (json_remove(((((vt0.c1)OR(vt0.c1)))OR(vt1.c1)), (vt0.c0 IN ()))) ORDER BY CASE vt0.c0  WHEN (vt0.c1 IN ()) THEN (- (vt0.c2)) ELSE (NOT (vt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((((vt0.c1)OR(vt0.c1)))OR(vt1.c1)), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE vt0.c0  WHEN (vt0.c1 IN ()) THEN (- (vt0.c2)) ELSE (NOT (vt0.c1)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS REAL) WHERE (CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC)) ORDER BY ((CAST(vt0.c0 AS BLOB))<<(((('1938649438', vt1.c1, vt1.c1, vt0.c2, '-93339171')) BETWEEN ((NULL, vt0.c1, 0.6904666686946423, NULL, vt1.c0)) AND ((vt1.c1, vt0.c1, vt0.c0, vt0.c2, vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS REAL) ORDER BY ((CAST(vt0.c0 AS BLOB))<<(((('1938649438', vt1.c1, vt1.c1, vt0.c2, '-93339171')) BETWEEN ((NULL, vt0.c1, 0.6904666686946423, NULL, vt1.c0)) AND ((vt1.c1, vt0.c1, vt0.c0, vt0.c2, vt0.c0))))) DESC);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS REAL) WHERE (CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC)) ORDER BY ((CAST(vt0.c0 AS BLOB))<<(((('1938649438', vt1.c1, vt1.c1, vt0.c2, '-93339171')) BETWEEN ((NULL, vt0.c1, 0.6904666686946423, NULL, vt1.c0)) AND ((vt1.c1, vt0.c1, vt0.c0, vt0.c2, vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS REAL) ORDER BY ((CAST(vt0.c0 AS BLOB))<<(((('1938649438', vt1.c1, vt1.c1, vt0.c2, '-93339171')) BETWEEN ((NULL, vt0.c1, 0.6904666686946423, NULL, vt1.c0)) AND ((vt1.c1, vt0.c1, vt0.c0, vt0.c2, vt0.c0))))) DESC);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS REAL) WHERE (CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC)) ORDER BY ((CAST(vt0.c0 AS BLOB))<<(((('1938649438', vt1.c1, vt1.c1, vt0.c2, '-93339171')) BETWEEN ((NULL, vt0.c1, 0.6904666686946423, NULL, vt1.c0)) AND ((vt1.c1, vt0.c1, vt0.c0, vt0.c2, vt0.c0))))) DESC;
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((((((vt0.c2))<((t1.c0))))OR(TYPEOF(vt0.c0)))) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN '-249102714' END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c2))<((t1.c0))))OR(TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN '-249102714' END IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((((((vt0.c2))<((t1.c0))))OR(TYPEOF(vt0.c0)))) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN '-249102714' END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c2))<((t1.c0))))OR(TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN '-249102714' END IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((((((vt0.c2))<((t1.c0))))OR(TYPEOF(vt0.c0)))) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN '-249102714' END IN ()) DESC  NULLS FIRST;
SELECT * FROM t1 CROSS JOIN vt0 ON (NOT (((vt0.c2)AND(vt0.c0)))) WHERE ((((vt0.c0)) BETWEEN (((vt0.c1 IN ()))) AND (('')))) ORDER BY (((+ (t1.c0)))>>(NULL)) ASC  NULLS FIRST, TOTAL_CHANGES() COLLATE BINARY ASC, ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((vt0.c1 IN ()))) AND (('')))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (NOT (((vt0.c2)AND(vt0.c0)))) ORDER BY (((+ (t1.c0)))>>(NULL)) ASC  NULLS FIRST, TOTAL_CHANGES() COLLATE BINARY ASC, ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM t1 CROSS JOIN vt0 ON (NOT (((vt0.c2)AND(vt0.c0)))) WHERE ((((vt0.c0)) BETWEEN (((vt0.c1 IN ()))) AND (('')))) ORDER BY (((+ (t1.c0)))>>(NULL)) ASC  NULLS FIRST, TOTAL_CHANGES() COLLATE BINARY ASC, ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((vt0.c1 IN ()))) AND (('')))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (NOT (((vt0.c2)AND(vt0.c0)))) ORDER BY (((+ (t1.c0)))>>(NULL)) ASC  NULLS FIRST, TOTAL_CHANGES() COLLATE BINARY ASC, ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM t1 CROSS JOIN vt0 ON (NOT (((vt0.c2)AND(vt0.c0)))) WHERE ((((vt0.c0)) BETWEEN (((vt0.c1 IN ()))) AND (('')))) ORDER BY (((+ (t1.c0)))>>(NULL)) ASC  NULLS FIRST, TOTAL_CHANGES() COLLATE BINARY ASC, ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) COLLATE BINARY ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)*(HEX(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)*(HEX(vt0.c2)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)*(HEX(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)*(HEX(vt0.c2)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)*(HEX(vt0.c2))));
SELECT ALL * FROM t1 WHERE (((((t1.c0)|(t1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)|(t1.c0))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c0)|(t1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)|(t1.c0))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c0)|(t1.c0))) ISNULL));
SELECT * FROM vt0, t1 WHERE (CASE CAST(t1.c0 AS NUMERIC)  WHEN ((((vt0.c2)AND(t1.c0)))AND(t1.c0)) THEN ABS(vt0.c0) WHEN ((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN 0.4826280151841018 END WHEN ((vt0.c2) NOT NULL) THEN CAST(vt0.c0 AS REAL) WHEN (((vt0.c2, t1.c0, vt0.c1)) NOT BETWEEN ((vt0.c2, t1.c0, vt0.c0)) AND ((t1.c0, t1.c0, t1.c0))) THEN ((vt0.c1) BETWEEN (vt0.c2) AND (0.9702431208649686)) WHEN ((vt0.c2) BETWEEN (t1.c0) AND (vt0.c1)) THEN t1.c0 END) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0)))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t1.c0 AS NUMERIC)  WHEN ((((vt0.c2)AND(t1.c0)))AND(t1.c0)) THEN ABS(vt0.c0) WHEN ((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN 0.4826280151841018 END WHEN ((vt0.c2) NOT NULL) THEN CAST(vt0.c0 AS REAL) WHEN (((vt0.c2, t1.c0, vt0.c1)) NOT BETWEEN ((vt0.c2, t1.c0, vt0.c0)) AND ((t1.c0, t1.c0, t1.c0))) THEN ((vt0.c1) BETWEEN (vt0.c2) AND (0.9702431208649686)) WHEN ((vt0.c2) BETWEEN (t1.c0) AND (vt0.c1)) THEN t1.c0 END) IS TRUE)  as count FROM vt0, t1 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0)))) NOTNULL)  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (CASE CAST(t1.c0 AS NUMERIC)  WHEN ((((vt0.c2)AND(t1.c0)))AND(t1.c0)) THEN ABS(vt0.c0) WHEN ((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN 0.4826280151841018 END WHEN ((vt0.c2) NOT NULL) THEN CAST(vt0.c0 AS REAL) WHEN (((vt0.c2, t1.c0, vt0.c1)) NOT BETWEEN ((vt0.c2, t1.c0, vt0.c0)) AND ((t1.c0, t1.c0, t1.c0))) THEN ((vt0.c1) BETWEEN (vt0.c2) AND (0.9702431208649686)) WHEN ((vt0.c2) BETWEEN (t1.c0) AND (vt0.c1)) THEN t1.c0 END) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0)))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t1.c0 AS NUMERIC)  WHEN ((((vt0.c2)AND(t1.c0)))AND(t1.c0)) THEN ABS(vt0.c0) WHEN ((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN 0.4826280151841018 END WHEN ((vt0.c2) NOT NULL) THEN CAST(vt0.c0 AS REAL) WHEN (((vt0.c2, t1.c0, vt0.c1)) NOT BETWEEN ((vt0.c2, t1.c0, vt0.c0)) AND ((t1.c0, t1.c0, t1.c0))) THEN ((vt0.c1) BETWEEN (vt0.c2) AND (0.9702431208649686)) WHEN ((vt0.c2) BETWEEN (t1.c0) AND (vt0.c1)) THEN t1.c0 END) IS TRUE)  as count FROM vt0, t1 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0)))) NOTNULL)  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (CASE CAST(t1.c0 AS NUMERIC)  WHEN ((((vt0.c2)AND(t1.c0)))AND(t1.c0)) THEN ABS(vt0.c0) WHEN ((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN 0.4826280151841018 END WHEN ((vt0.c2) NOT NULL) THEN CAST(vt0.c0 AS REAL) WHEN (((vt0.c2, t1.c0, vt0.c1)) NOT BETWEEN ((vt0.c2, t1.c0, vt0.c0)) AND ((t1.c0, t1.c0, t1.c0))) THEN ((vt0.c1) BETWEEN (vt0.c2) AND (0.9702431208649686)) WHEN ((vt0.c2) BETWEEN (t1.c0) AND (vt0.c1)) THEN t1.c0 END) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0)))) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(((vt0.c2)<=(vt0.c0)), 0.9740434039744459));
SELECT SUM(count) FROM (SELECT ((IFNULL(((vt0.c2)<=(vt0.c0)), 0.9740434039744459)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(((vt0.c2)<=(vt0.c0)), 0.9740434039744459));
SELECT SUM(count) FROM (SELECT ((IFNULL(((vt0.c2)<=(vt0.c0)), 0.9740434039744459)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(((vt0.c2)<=(vt0.c0)), 0.9740434039744459));
SELECT ALL COUNT(*) FROM vt0 WHERE (MIN(vt0.c1, (vt0.c2 IN (vt0.c2, '-1139292082', vt0.c2)), ((vt0.c2)LIKE(vt0.c0)), '264359737'));
SELECT SUM(count) FROM (SELECT ALL ((MIN(vt0.c1, (vt0.c2 IN (vt0.c2, '-1139292082', vt0.c2)), ((vt0.c2)LIKE(vt0.c0)), '264359737')) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (MIN(vt0.c1, (vt0.c2 IN (vt0.c2, '-1139292082', vt0.c2)), ((vt0.c2)LIKE(vt0.c0)), '264359737'));
SELECT SUM(count) FROM (SELECT ALL ((MIN(vt0.c1, (vt0.c2 IN (vt0.c2, '-1139292082', vt0.c2)), ((vt0.c2)LIKE(vt0.c0)), '264359737')) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (MIN(vt0.c1, (vt0.c2 IN (vt0.c2, '-1139292082', vt0.c2)), ((vt0.c2)LIKE(vt0.c0)), '264359737'));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT ALL * FROM vt1, t1, vt0 WHERE (((0Xffffffffedfcbb14)=((vt1.c0 IN ())))) ORDER BY (((vt0.c1 IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffedfcbb14)=((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (((vt0.c1 IN ())) NOT NULL));
SELECT ALL * FROM vt1, t1, vt0 WHERE (((0Xffffffffedfcbb14)=((vt1.c0 IN ())))) ORDER BY (((vt0.c1 IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffedfcbb14)=((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (((vt0.c1 IN ())) NOT NULL));
SELECT ALL * FROM vt1, t1, vt0 WHERE (((0Xffffffffedfcbb14)=((vt1.c0 IN ())))) ORDER BY (((vt0.c1 IN ())) NOT NULL);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON IFNULL(vt1.c0, vt0.c2 COLLATE RTRIM) WHERE (TRIM(((vt1.c0) BETWEEN (NULL) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)) ORDER BY NULLIF((vt1.c1 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 WHEN '0.0' THEN vt1.c0 WHEN vt1.c1 THEN '' ELSE 1074859701 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((vt1.c0) BETWEEN (NULL) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON IFNULL(vt1.c0, vt0.c2 COLLATE RTRIM) ORDER BY NULLIF((vt1.c1 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 WHEN '0.0' THEN vt1.c0 WHEN vt1.c1 THEN '' ELSE 1074859701 END) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON IFNULL(vt1.c0, vt0.c2 COLLATE RTRIM) WHERE (TRIM(((vt1.c0) BETWEEN (NULL) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)) ORDER BY NULLIF((vt1.c1 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 WHEN '0.0' THEN vt1.c0 WHEN vt1.c1 THEN '' ELSE 1074859701 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((vt1.c0) BETWEEN (NULL) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON IFNULL(vt1.c0, vt0.c2 COLLATE RTRIM) ORDER BY NULLIF((vt1.c1 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 WHEN '0.0' THEN vt1.c0 WHEN vt1.c1 THEN '' ELSE 1074859701 END) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON IFNULL(vt1.c0, vt0.c2 COLLATE RTRIM) WHERE (TRIM(((vt1.c0) BETWEEN (NULL) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)) ORDER BY NULLIF((vt1.c1 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 WHEN '0.0' THEN vt1.c0 WHEN vt1.c1 THEN '' ELSE 1074859701 END) DESC  NULLS FIRST;
SELECT * FROM t1, vt0, vt1 WHERE (CAST(((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c1)) AS BLOB)) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (CAST(((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c1)) AS BLOB)) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (CAST(((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c1)) AS BLOB));
SELECT ALL * FROM vt1, t1 WHERE (((vt1.c1) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0)))) AND (((vt1.c0) ISNULL)))) ORDER BY vt1.c0  NULLS FIRST, 'ju&f40ki'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0)))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1, t1 ORDER BY vt1.c0  NULLS FIRST, 'ju&f40ki'  NULLS LAST);
SELECT ALL * FROM vt1, t1 WHERE (((vt1.c1) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0)))) AND (((vt1.c0) ISNULL)))) ORDER BY vt1.c0  NULLS FIRST, 'ju&f40ki'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0)))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1, t1 ORDER BY vt1.c0  NULLS FIRST, 'ju&f40ki'  NULLS LAST);
SELECT ALL * FROM vt1, t1 WHERE (((vt1.c1) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0)))) AND (((vt1.c0) ISNULL)))) ORDER BY vt1.c0  NULLS FIRST, 'ju&f40ki'  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c2) AND (t1.c0))  WHEN (vt0.c0 IN ()) THEN (- (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) NOT BETWEEN (vt0.c2) AND (t1.c0))  WHEN (vt0.c0 IN ()) THEN (- (vt0.c1)) END) IS TRUE)  as count FROM t1, vt0 NOT INDEXED);
SELECT ALL * FROM t1, vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c2) AND (t1.c0))  WHEN (vt0.c0 IN ()) THEN (- (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) NOT BETWEEN (vt0.c2) AND (t1.c0))  WHEN (vt0.c0 IN ()) THEN (- (vt0.c1)) END) IS TRUE)  as count FROM t1, vt0 NOT INDEXED);
SELECT ALL * FROM t1, vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c2) AND (t1.c0))  WHEN (vt0.c0 IN ()) THEN (- (vt0.c1)) END);
SELECT * FROM vt0 INNER JOIN t1 ON t1.c0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY (((vt0.c2)<<(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON t1.c0 ORDER BY (((vt0.c2)<<(vt0.c0)) IN ()) ASC);
SELECT * FROM vt0 INNER JOIN t1 ON t1.c0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY (((vt0.c2)<<(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON t1.c0 ORDER BY (((vt0.c2)<<(vt0.c0)) IN ()) ASC);
SELECT * FROM vt0 INNER JOIN t1 ON t1.c0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY (((vt0.c2)<<(vt0.c0)) IN ()) ASC;
SELECT ALL * FROM vt1, vt0, t1 WHERE (((TIME(vt1.c1, t1.c0, vt0.c0))<<((0.5654851082176898 IN ())))) ORDER BY (~ (((NULL) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TIME(vt1.c1, t1.c0, vt0.c0))<<((0.5654851082176898 IN ())))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (~ (((NULL) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t1 WHERE (((TIME(vt1.c1, t1.c0, vt0.c0))<<((0.5654851082176898 IN ())))) ORDER BY (~ (((NULL) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TIME(vt1.c1, t1.c0, vt0.c0))<<((0.5654851082176898 IN ())))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (~ (((NULL) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t1 WHERE (((TIME(vt1.c1, t1.c0, vt0.c0))<<((0.5654851082176898 IN ())))) ORDER BY (~ (((NULL) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt1 RIGHT OUTER JOIN t1 ON (((vt0.c1) NOT BETWEEN ('1516437122') AND (vt0.c2)) IN ()) RIGHT OUTER JOIN vt0 ON CAST(0.40085672028698394 AS BLOB) WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON (((vt0.c1) NOT BETWEEN ('1516437122') AND (vt0.c2)) IN ()) RIGHT OUTER JOIN vt0 ON CAST(0.40085672028698394 AS BLOB));
SELECT * FROM vt1 RIGHT OUTER JOIN t1 ON (((vt0.c1) NOT BETWEEN ('1516437122') AND (vt0.c2)) IN ()) RIGHT OUTER JOIN vt0 ON CAST(0.40085672028698394 AS BLOB) WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON (((vt0.c1) NOT BETWEEN ('1516437122') AND (vt0.c2)) IN ()) RIGHT OUTER JOIN vt0 ON CAST(0.40085672028698394 AS BLOB));
SELECT * FROM vt1 RIGHT OUTER JOIN t1 ON (((vt0.c1) NOT BETWEEN ('1516437122') AND (vt0.c2)) IN ()) RIGHT OUTER JOIN vt0 ON CAST(0.40085672028698394 AS BLOB) WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((t1.c0)AND(t1.c0)))AND(vt0.c0))) NOTNULL)) ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)AND(t1.c0)))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL) ASC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((t1.c0)AND(t1.c0)))AND(vt0.c0))) NOTNULL)) ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)AND(t1.c0)))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL) ASC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((t1.c0)AND(t1.c0)))AND(vt0.c0))) NOTNULL)) ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL) ASC;
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CAST((((vt0.c0))!=((vt1.c0))) AS BLOB)) ORDER BY CAST((vt1.c1 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))!=((vt1.c0))) AS BLOB)) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY CAST((vt1.c1 IN ()) AS BLOB));
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CAST((((vt0.c0))!=((vt1.c0))) AS BLOB)) ORDER BY CAST((vt1.c1 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))!=((vt1.c0))) AS BLOB)) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY CAST((vt1.c1 IN ()) AS BLOB));
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CAST((((vt0.c0))!=((vt1.c0))) AS BLOB)) ORDER BY CAST((vt1.c1 IN ()) AS BLOB);
SELECT COUNT(*) FROM t1, vt0 INNER JOIN vt1 ON vt0.c1 WHERE (((((t1.c0 IN (vt1.c0, vt1.c0))))>(((((vt0.c0, vt0.c2, vt1.c0))>((vt0.c2, t1.c0, vt0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0 IN (vt1.c0, vt1.c0))))>(((((vt0.c0, vt0.c2, vt1.c0))>((vt0.c2, t1.c0, vt0.c1))))))) IS TRUE)  as count FROM t1, vt0 INNER JOIN vt1 ON vt0.c1);
SELECT COUNT(*) FROM t1, vt0 INNER JOIN vt1 ON vt0.c1 WHERE (((((t1.c0 IN (vt1.c0, vt1.c0))))>(((((vt0.c0, vt0.c2, vt1.c0))>((vt0.c2, t1.c0, vt0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0 IN (vt1.c0, vt1.c0))))>(((((vt0.c0, vt0.c2, vt1.c0))>((vt0.c2, t1.c0, vt0.c1))))))) IS TRUE)  as count FROM t1, vt0 INNER JOIN vt1 ON vt0.c1);
SELECT COUNT(*) FROM t1, vt0 INNER JOIN vt1 ON vt0.c1 WHERE (((((t1.c0 IN (vt1.c0, vt1.c0))))>(((((vt0.c0, vt0.c2, vt1.c0))>((vt0.c2, t1.c0, vt0.c1)))))));
SELECT COUNT(*) FROM t1, vt0 WHERE (((((CAST(vt0.c2 AS INTEGER))AND(((vt0.c1)GLOB(t1.c0)))))AND(((vt0.c2) BETWEEN (t1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c2 AS INTEGER))AND(((vt0.c1)GLOB(t1.c0)))))AND(((vt0.c2) BETWEEN (t1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((CAST(vt0.c2 AS INTEGER))AND(((vt0.c1)GLOB(t1.c0)))))AND(((vt0.c2) BETWEEN (t1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c2 AS INTEGER))AND(((vt0.c1)GLOB(t1.c0)))))AND(((vt0.c2) BETWEEN (t1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((CAST(vt0.c2 AS INTEGER))AND(((vt0.c1)GLOB(t1.c0)))))AND(((vt0.c2) BETWEEN (t1.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt1, t1 CROSS JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE vt0.c2  WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c1 END))) WHERE ((((NULL IN ())) BETWEEN (((vt1.c1)GLOB(vt0.c0))) AND (((vt1.c0) BETWEEN ('') AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) BETWEEN (((vt1.c1)GLOB(vt0.c0))) AND (((vt1.c0) BETWEEN ('') AND (vt0.c0))))) IS TRUE)  as count FROM vt1, t1 CROSS JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE vt0.c2  WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c1 END))));
SELECT ALL * FROM vt1, t1 CROSS JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE vt0.c2  WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c1 END))) WHERE ((((NULL IN ())) BETWEEN (((vt1.c1)GLOB(vt0.c0))) AND (((vt1.c0) BETWEEN ('') AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) BETWEEN (((vt1.c1)GLOB(vt0.c0))) AND (((vt1.c0) BETWEEN ('') AND (vt0.c0))))) IS TRUE)  as count FROM vt1, t1 CROSS JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE vt0.c2  WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c1 END))));
SELECT ALL * FROM vt1, t1 CROSS JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE vt0.c2  WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c1 END))) WHERE ((((NULL IN ())) BETWEEN (((vt1.c1)GLOB(vt0.c0))) AND (((vt1.c0) BETWEEN ('') AND (vt0.c0)))));
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((((((vt0.c1)OR(t1.c0)))AND(x'8ad2'))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(t1.c0)))AND(x'8ad2'))) IS TRUE)) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((((((vt0.c1)OR(t1.c0)))AND(x'8ad2'))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(t1.c0)))AND(x'8ad2'))) IS TRUE)) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((((((vt0.c1)OR(t1.c0)))AND(x'8ad2'))) IS TRUE));
SELECT COUNT(*) FROM t1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(((((((((vt1.c0)OR(NULL)))AND(0X15e4df48)))OR(vt1.c0)))OR(vt1.c1)))))AND(TYPEOF(DISTINCT vt1.c1)))) ORDER BY CASE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(x''))  WHEN (vt1.c1 IN (vt1.c1, vt1.c0)) THEN (0.6487596788790939 IN ()) ELSE (((vt1.c1))<=((vt1.c1))) END;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN ()))AND(((((((((vt1.c0)OR(NULL)))AND(0x15e4df48)))OR(vt1.c0)))OR(vt1.c1)))))AND(TYPEOF(DISTINCT vt1.c1)))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(x''))  WHEN (vt1.c1 IN (vt1.c1, vt1.c0)) THEN (0.6487596788790939 IN ()) ELSE (((vt1.c1))<=((vt1.c1))) END);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(((((((((vt1.c0)OR(NULL)))AND(0X15e4df48)))OR(vt1.c0)))OR(vt1.c1)))))AND(TYPEOF(DISTINCT vt1.c1)))) ORDER BY CASE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(x''))  WHEN (vt1.c1 IN (vt1.c1, vt1.c0)) THEN (0.6487596788790939 IN ()) ELSE (((vt1.c1))<=((vt1.c1))) END;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN ()))AND(((((((((vt1.c0)OR(NULL)))AND(0x15e4df48)))OR(vt1.c0)))OR(vt1.c1)))))AND(TYPEOF(DISTINCT vt1.c1)))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(x''))  WHEN (vt1.c1 IN (vt1.c1, vt1.c0)) THEN (0.6487596788790939 IN ()) ELSE (((vt1.c1))<=((vt1.c1))) END);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(((((((((vt1.c0)OR(NULL)))AND(0X15e4df48)))OR(vt1.c0)))OR(vt1.c1)))))AND(TYPEOF(DISTINCT vt1.c1)))) ORDER BY CASE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(x''))  WHEN (vt1.c1 IN (vt1.c1, vt1.c0)) THEN (0.6487596788790939 IN ()) ELSE (((vt1.c1))<=((vt1.c1))) END;
SELECT ALL * FROM vt1 WHERE (((((((((((((vt1.c1 COLLATE NOCASE)OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)))AND(((vt1.c0)<<(vt1.c0)))))AND(CAST(NULL AS BLOB))))AND(((vt1.c1)IS NOT(vt1.c0)))))OR(((vt1.c1) NOT NULL))))OR(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c1 COLLATE NOCASE)OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)))AND(((vt1.c0)<<(vt1.c0)))))AND(CAST(NULL AS BLOB))))AND(((vt1.c1)IS NOT(vt1.c0)))))OR(((vt1.c1) NOT NULL))))OR(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((((vt1.c1 COLLATE NOCASE)OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)))AND(((vt1.c0)<<(vt1.c0)))))AND(CAST(NULL AS BLOB))))AND(((vt1.c1)IS NOT(vt1.c0)))))OR(((vt1.c1) NOT NULL))))OR(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c1 COLLATE NOCASE)OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)))AND(((vt1.c0)<<(vt1.c0)))))AND(CAST(NULL AS BLOB))))AND(((vt1.c1)IS NOT(vt1.c0)))))OR(((vt1.c1) NOT NULL))))OR(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((((vt1.c1 COLLATE NOCASE)OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)))AND(((vt1.c0)<<(vt1.c0)))))AND(CAST(NULL AS BLOB))))AND(((vt1.c1)IS NOT(vt1.c0)))))OR(((vt1.c1) NOT NULL))))OR(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(COALESCE(vt0.c2, vt0.c0) AS REAL)) ORDER BY (- ('1546456017'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(vt0.c2, vt0.c0) AS REAL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- ('1546456017'))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(COALESCE(vt0.c2, vt0.c0) AS REAL)) ORDER BY (- ('1546456017'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(vt0.c2, vt0.c0) AS REAL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- ('1546456017'))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(COALESCE(vt0.c2, vt0.c0) AS REAL)) ORDER BY (- ('1546456017'))  NULLS LAST;
SELECT * FROM t1, vt0, vt1 WHERE (((('')) NOT BETWEEN ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((UNLIKELY(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((('')) NOT BETWEEN ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((UNLIKELY(t1.c0))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (((('')) NOT BETWEEN ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((UNLIKELY(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((('')) NOT BETWEEN ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((UNLIKELY(t1.c0))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (((('')) NOT BETWEEN ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((UNLIKELY(t1.c0)))));
SELECT COUNT(*) FROM t1 INNER JOIN vt1 ON (((vt1.c0 IN ())) NOTNULL) WHERE (((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1))) IS TRUE)) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON (((vt1.c0 IN ())) NOTNULL));
SELECT COUNT(*) FROM t1 INNER JOIN vt1 ON (((vt1.c0 IN ())) NOTNULL) WHERE (((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1))) IS TRUE)) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON (((vt1.c0 IN ())) NOTNULL));
SELECT COUNT(*) FROM t1 INNER JOIN vt1 ON (((vt1.c0 IN ())) NOTNULL) WHERE (((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1))) IS TRUE));
SELECT ALL * FROM t1, vt1 WHERE (((((vt1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c0))) IN (((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)), ((t1.c0)IS NOT(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c0))) IN (((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)), ((t1.c0)IS NOT(vt1.c1))))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (((((vt1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c0))) IN (((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)), ((t1.c0)IS NOT(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c0))) IN (((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)), ((t1.c0)IS NOT(vt1.c1))))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (((((vt1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c0))) IN (((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)), ((t1.c0)IS NOT(vt1.c1)))));
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)!=(vt1.c0)))OR((~ (vt1.c0)))))OR(vt1.c0))) ORDER BY vt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)!=(vt1.c0)))OR((~ (vt1.c0)))))OR(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)!=(vt1.c0)))OR((~ (vt1.c0)))))OR(vt1.c0))) ORDER BY vt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)!=(vt1.c0)))OR((~ (vt1.c0)))))OR(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)!=(vt1.c0)))OR((~ (vt1.c0)))))OR(vt1.c0))) ORDER BY vt1.c1 DESC  NULLS FIRST;
SELECT ALL * FROM vt1, t1 WHERE (((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))AND('ǀxG睥'))) ISNULL)) ORDER BY ((NULLIF(t1.c0, vt1.c0)) BETWEEN (((vt1.c1)!=(vt1.c1))) AND ((+ (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))AND('ǀxG睥'))) ISNULL)) IS TRUE)  as count FROM vt1, t1 ORDER BY ((NULLIF(t1.c0, vt1.c0)) BETWEEN (((vt1.c1)<>(vt1.c1))) AND ((+ (t1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1, t1 WHERE (((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))AND('ǀxG睥'))) ISNULL)) ORDER BY ((NULLIF(t1.c0, vt1.c0)) BETWEEN (((vt1.c1)!=(vt1.c1))) AND ((+ (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))AND('ǀxG睥'))) ISNULL)) IS TRUE)  as count FROM vt1, t1 ORDER BY ((NULLIF(t1.c0, vt1.c0)) BETWEEN (((vt1.c1)<>(vt1.c1))) AND ((+ (t1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1, t1 WHERE (((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))AND('ǀxG睥'))) ISNULL)) ORDER BY ((NULLIF(t1.c0, vt1.c0)) BETWEEN (((vt1.c1)!=(vt1.c1))) AND ((+ (t1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NOT (NULL)))%(((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (NULL)))%(((((vt1.c0)AND(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NOT (NULL)))%(((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (NULL)))%(((((vt1.c0)AND(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NOT (NULL)))%(((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))));
SELECT ALL COUNT(*) FROM t1 WHERE (TRIM(DISTINCT (t1.c0 IN ()), (- (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (t1.c0 IN ()), (- (t1.c0)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (TRIM(DISTINCT (t1.c0 IN ()), (- (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (t1.c0 IN ()), (- (t1.c0)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (TRIM(DISTINCT (t1.c0 IN ()), (- (t1.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (CASE WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) WHEN (+ (t1.c0)) THEN ((t1.c0) NOTNULL) WHEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN CAST(vt1.c1 AS TEXT) ELSE ((vt0.c1)==(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) WHEN (+ (t1.c0)) THEN ((t1.c0) NOTNULL) WHEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN CAST(vt1.c1 AS TEXT) ELSE ((vt0.c1)==(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (CASE WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) WHEN (+ (t1.c0)) THEN ((t1.c0) NOTNULL) WHEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN CAST(vt1.c1 AS TEXT) ELSE ((vt0.c1)==(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) WHEN (+ (t1.c0)) THEN ((t1.c0) NOTNULL) WHEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN CAST(vt1.c1 AS TEXT) ELSE ((vt0.c1)==(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (CASE WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) WHEN (+ (t1.c0)) THEN ((t1.c0) NOTNULL) WHEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN CAST(vt1.c1 AS TEXT) ELSE ((vt0.c1)==(vt1.c0)) END);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT * FROM t1 WHERE (((x'79d3') BETWEEN ((t1.c0 IN ())) AND (((t1.c0) ISNULL)))) ORDER BY (((x''))=((((((t1.c0)AND(t1.c0)))AND(t1.c0))))), t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'79d3') BETWEEN ((t1.c0 IN ())) AND (((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY (((x''))==((((((t1.c0)AND(t1.c0)))AND(t1.c0))))), t1.c0  NULLS LAST);
SELECT * FROM t1 WHERE (((x'79d3') BETWEEN ((t1.c0 IN ())) AND (((t1.c0) ISNULL)))) ORDER BY (((x''))=((((((t1.c0)AND(t1.c0)))AND(t1.c0))))), t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'79d3') BETWEEN ((t1.c0 IN ())) AND (((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY (((x''))==((((((t1.c0)AND(t1.c0)))AND(t1.c0))))), t1.c0  NULLS LAST);
SELECT * FROM t1 WHERE (((x'79d3') BETWEEN ((t1.c0 IN ())) AND (((t1.c0) ISNULL)))) ORDER BY (((x''))=((((((t1.c0)AND(t1.c0)))AND(t1.c0))))), t1.c0  NULLS LAST;
SELECT ALL * FROM t1, vt1 WHERE (((((((((((vt1.c1)<>(vt1.c1)))OR(CAST(t1.c0 AS BLOB))))OR((NOT (t1.c0)))))AND(LOWER(vt1.c0))))AND((+ (vt1.c0))))) ORDER BY (((+ (t1.c0)))*(((NULL) NOT NULL))) ASC, (((t1.c0 IN (vt1.c0))) BETWEEN (((((((((NULL)OR(vt1.c0)))AND(vt1.c1)))AND(t1.c0)))OR(t1.c0))) AND (((((vt1.c0)AND('AS')))AND(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1)<>(vt1.c1)))OR(CAST(t1.c0 AS BLOB))))OR((NOT (t1.c0)))))AND(LOWER(vt1.c0))))AND((+ (vt1.c0))))) IS TRUE)  as count FROM t1, vt1 ORDER BY (((+ (t1.c0)))*(((NULL) NOT NULL))) ASC, (((t1.c0 IN (vt1.c0))) BETWEEN (((((((((NULL)OR(vt1.c0)))AND(vt1.c1)))AND(t1.c0)))OR(t1.c0))) AND (((((vt1.c0)AND('AS')))AND(t1.c0))))  NULLS LAST);
SELECT ALL * FROM t1, vt1 WHERE (((((((((((vt1.c1)<>(vt1.c1)))OR(CAST(t1.c0 AS BLOB))))OR((NOT (t1.c0)))))AND(LOWER(vt1.c0))))AND((+ (vt1.c0))))) ORDER BY (((+ (t1.c0)))*(((NULL) NOT NULL))) ASC, (((t1.c0 IN (vt1.c0))) BETWEEN (((((((((NULL)OR(vt1.c0)))AND(vt1.c1)))AND(t1.c0)))OR(t1.c0))) AND (((((vt1.c0)AND('AS')))AND(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1)<>(vt1.c1)))OR(CAST(t1.c0 AS BLOB))))OR((NOT (t1.c0)))))AND(LOWER(vt1.c0))))AND((+ (vt1.c0))))) IS TRUE)  as count FROM t1, vt1 ORDER BY (((+ (t1.c0)))*(((NULL) NOT NULL))) ASC, (((t1.c0 IN (vt1.c0))) BETWEEN (((((((((NULL)OR(vt1.c0)))AND(vt1.c1)))AND(t1.c0)))OR(t1.c0))) AND (((((vt1.c0)AND('AS')))AND(t1.c0))))  NULLS LAST);
SELECT ALL * FROM t1, vt1 WHERE (((((((((((vt1.c1)<>(vt1.c1)))OR(CAST(t1.c0 AS BLOB))))OR((NOT (t1.c0)))))AND(LOWER(vt1.c0))))AND((+ (vt1.c0))))) ORDER BY (((+ (t1.c0)))*(((NULL) NOT NULL))) ASC, (((t1.c0 IN (vt1.c0))) BETWEEN (((((((((NULL)OR(vt1.c0)))AND(vt1.c1)))AND(t1.c0)))OR(t1.c0))) AND (((((vt1.c0)AND('AS')))AND(t1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 NATURAL JOIN t1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM vt1, vt0 NATURAL JOIN t1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM vt1, vt0 NATURAL JOIN t1 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, vt0 CROSS JOIN vt1 ON ((CAST(vt0.c2 AS INTEGER)) BETWEEN (((vt0.c2)LIKE(vt0.c0))) AND ((~ (vt0.c2)))) WHERE ((((((((((NOT (vt0.c0)))OR(vt0.c1)))AND(((t1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(STRFTIME(NULL, vt0.c2, vt0.c2))))AND(vt0.c2))) ORDER BY ((((CASE WHEN vt1.c0 THEN NULL END)AND(-1.596491931E9)))OR(vt0.c0))  NULLS LAST, ((((vt1.c0 COLLATE RTRIM)AND(((vt0.c2)<(vt0.c0)))))AND(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (vt0.c0)))OR(vt0.c1)))AND(((t1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(STRFTIME(NULL, vt0.c2, vt0.c2))))AND(vt0.c2))) IS TRUE)  as count FROM t1, vt0 CROSS JOIN vt1 ON ((CAST(vt0.c2 AS INTEGER)) BETWEEN (((vt0.c2)LIKE(vt0.c0))) AND ((~ (vt0.c2)))) ORDER BY ((((CASE WHEN vt1.c0 THEN NULL END)AND(-1.596491931E9)))OR(vt0.c0))  NULLS LAST, ((((vt1.c0 COLLATE RTRIM)AND(((vt0.c2)<(vt0.c0)))))AND(vt0.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, vt0 CROSS JOIN vt1 ON ((CAST(vt0.c2 AS INTEGER)) BETWEEN (((vt0.c2)LIKE(vt0.c0))) AND ((~ (vt0.c2)))) WHERE ((((((((((NOT (vt0.c0)))OR(vt0.c1)))AND(((t1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(STRFTIME(NULL, vt0.c2, vt0.c2))))AND(vt0.c2))) ORDER BY ((((CASE WHEN vt1.c0 THEN NULL END)AND(-1.596491931E9)))OR(vt0.c0))  NULLS LAST, ((((vt1.c0 COLLATE RTRIM)AND(((vt0.c2)<(vt0.c0)))))AND(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (vt0.c0)))OR(vt0.c1)))AND(((t1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(STRFTIME(NULL, vt0.c2, vt0.c2))))AND(vt0.c2))) IS TRUE)  as count FROM t1, vt0 CROSS JOIN vt1 ON ((CAST(vt0.c2 AS INTEGER)) BETWEEN (((vt0.c2)LIKE(vt0.c0))) AND ((~ (vt0.c2)))) ORDER BY ((((CASE WHEN vt1.c0 THEN NULL END)AND(-1.596491931E9)))OR(vt0.c0))  NULLS LAST, ((((vt1.c0 COLLATE RTRIM)AND(((vt0.c2)<(vt0.c0)))))AND(vt0.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, vt0 CROSS JOIN vt1 ON ((CAST(vt0.c2 AS INTEGER)) BETWEEN (((vt0.c2)LIKE(vt0.c0))) AND ((~ (vt0.c2)))) WHERE ((((((((((NOT (vt0.c0)))OR(vt0.c1)))AND(((t1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(STRFTIME(NULL, vt0.c2, vt0.c2))))AND(vt0.c2))) ORDER BY ((((CASE WHEN vt1.c0 THEN NULL END)AND(-1.596491931E9)))OR(vt0.c0))  NULLS LAST, ((((vt1.c0 COLLATE RTRIM)AND(((vt0.c2)<(vt0.c0)))))AND(vt0.c0)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((((x'')) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) IN (((t1.c0)+(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'')) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) IN (((t1.c0)+(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((x'')) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) IN (((t1.c0)+(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'')) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) IN (((t1.c0)+(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((x'')) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) IN (((t1.c0)+(t1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (CASE (~ (vt0.c1))  WHEN (~ (vt0.c2)) THEN ((vt0.c0)|(vt0.c1)) WHEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0) ISNULL) WHEN vt0.c2 THEN ((vt0.c2) IS FALSE) ELSE load_extension(vt0.c2, vt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c1))  WHEN (~ (vt0.c2)) THEN ((vt0.c0)|(vt0.c1)) WHEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0) ISNULL) WHEN vt0.c2 THEN ((vt0.c2) IS FALSE) ELSE load_extension(vt0.c2, vt0.c1) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE (~ (vt0.c1))  WHEN (~ (vt0.c2)) THEN ((vt0.c0)|(vt0.c1)) WHEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0) ISNULL) WHEN vt0.c2 THEN ((vt0.c2) IS FALSE) ELSE load_extension(vt0.c2, vt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c1))  WHEN (~ (vt0.c2)) THEN ((vt0.c0)|(vt0.c1)) WHEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0) ISNULL) WHEN vt0.c2 THEN ((vt0.c2) IS FALSE) ELSE load_extension(vt0.c2, vt0.c1) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT CAST(vt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT CAST(vt0.c2 AS INTEGER))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT CAST(vt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT CAST(vt0.c2 AS INTEGER))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT CAST(vt0.c2 AS INTEGER)));
SELECT * FROM t1, vt1, vt0 WHERE (t1.c0) ORDER BY COALESCE((vt1.c1 IN ()), (vt0.c2 IN (vt1.c0)), ((vt0.c1) ISNULL), ((vt0.c1) ISNULL), ((vt0.c1)|(t1.c0)), CAST(vt1.c0 AS BLOB)) ASC, CAST((((vt1.c1))>=((vt0.c2))) AS NUMERIC)  NULLS LAST, CASE WHEN ((vt0.c1)<=(vt0.c1)) THEN UPPER(DISTINCT '') ELSE IFNULL(DISTINCT vt0.c2, vt0.c1) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY COALESCE((vt1.c1 IN ()), (vt0.c2 IN (vt1.c0)), ((vt0.c1) ISNULL), ((vt0.c1) ISNULL), ((vt0.c1)|(t1.c0)), CAST(vt1.c0 AS BLOB)) ASC, CAST((((vt1.c1))>=((vt0.c2))) AS NUMERIC)  NULLS LAST, CASE WHEN ((vt0.c1)<=(vt0.c1)) THEN UPPER(DISTINCT '') ELSE IFNULL(DISTINCT vt0.c2, vt0.c1) END DESC  NULLS FIRST);
SELECT * FROM t1, vt1, vt0 WHERE (t1.c0) ORDER BY COALESCE((vt1.c1 IN ()), (vt0.c2 IN (vt1.c0)), ((vt0.c1) ISNULL), ((vt0.c1) ISNULL), ((vt0.c1)|(t1.c0)), CAST(vt1.c0 AS BLOB)) ASC, CAST((((vt1.c1))>=((vt0.c2))) AS NUMERIC)  NULLS LAST, CASE WHEN ((vt0.c1)<=(vt0.c1)) THEN UPPER(DISTINCT '') ELSE IFNULL(DISTINCT vt0.c2, vt0.c1) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY COALESCE((vt1.c1 IN ()), (vt0.c2 IN (vt1.c0)), ((vt0.c1) ISNULL), ((vt0.c1) ISNULL), ((vt0.c1)|(t1.c0)), CAST(vt1.c0 AS BLOB)) ASC, CAST((((vt1.c1))>=((vt0.c2))) AS NUMERIC)  NULLS LAST, CASE WHEN ((vt0.c1)<=(vt0.c1)) THEN UPPER(DISTINCT '') ELSE IFNULL(DISTINCT vt0.c2, vt0.c1) END DESC  NULLS FIRST);
SELECT * FROM t1, vt1, vt0 WHERE (t1.c0) ORDER BY COALESCE((vt1.c1 IN ()), (vt0.c2 IN (vt1.c0)), ((vt0.c1) ISNULL), ((vt0.c1) ISNULL), ((vt0.c1)|(t1.c0)), CAST(vt1.c0 AS BLOB)) ASC, CAST((((vt1.c1))>=((vt0.c2))) AS NUMERIC)  NULLS LAST, CASE WHEN ((vt0.c1)<=(vt0.c1)) THEN UPPER(DISTINCT '') ELSE IFNULL(DISTINCT vt0.c2, vt0.c1) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((CAST(t1.c0 AS REAL) IN ())) ORDER BY ((((((((((vt0.c2)OR(t1.c0)))OR(vt0.c0)))AND(vt1.c1)))OR(vt0.c2)))AND(((vt1.c1)GLOB(vt0.c2)))) DESC  NULLS FIRST, HEX(CAST(vt0.c1 AS INTEGER))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t1.c0 AS REAL) IN ())) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY ((((((((((vt0.c2)OR(t1.c0)))OR(vt0.c0)))AND(vt1.c1)))OR(vt0.c2)))AND(((vt1.c1)GLOB(vt0.c2)))) DESC  NULLS FIRST, HEX(CAST(vt0.c1 AS INTEGER))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((CAST(t1.c0 AS REAL) IN ())) ORDER BY ((((((((((vt0.c2)OR(t1.c0)))OR(vt0.c0)))AND(vt1.c1)))OR(vt0.c2)))AND(((vt1.c1)GLOB(vt0.c2)))) DESC  NULLS FIRST, HEX(CAST(vt0.c1 AS INTEGER))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t1.c0 AS REAL) IN ())) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY ((((((((((vt0.c2)OR(t1.c0)))OR(vt0.c0)))AND(vt1.c1)))OR(vt0.c2)))AND(((vt1.c1)GLOB(vt0.c2)))) DESC  NULLS FIRST, HEX(CAST(vt0.c1 AS INTEGER))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((CAST(t1.c0 AS REAL) IN ())) ORDER BY ((((((((((vt0.c2)OR(t1.c0)))OR(vt0.c0)))AND(vt1.c1)))OR(vt0.c2)))AND(((vt1.c1)GLOB(vt0.c2)))) DESC  NULLS FIRST, HEX(CAST(vt0.c1 AS INTEGER))  NULLS FIRST;
SELECT * FROM vt1, vt0, t1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT));
SELECT * FROM t1 WHERE ((((t1.c0)+(x'1a60')) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0)+(x'1a60')) IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c0)+(x'1a60')) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0)+(x'1a60')) IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c0)+(x'1a60')) IN ()));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((t1.c0, vt1.c1, vt1.c0, vt0.c2, '1546456017')) NOT BETWEEN (((((vt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((-316525326)&(vt0.c1)), ((t1.c0) IS TRUE), ((vt0.c0) BETWEEN (vt0.c0) AND (t1.c0)), ((((vt0.c1)AND(vt0.c2)))OR(vt1.c1)))) AND ((NULLIF(vt0.c1, vt1.c1), (+ (t1.c0)), ((vt1.c1) IS TRUE), (vt1.c1 IN ()), ((t1.c0)/(NULL))))) CROSS JOIN t1 ON ((((vt0.c2) IS FALSE)) BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))) AND ((t1.c0 IN ()))) WHERE (((((((vt0.c0) IS TRUE))AND((NOT (vt0.c1)))))OR(x''))) ORDER BY ((vt1.c1 COLLATE BINARY)|(((vt0.c0)<=(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))AND((NOT (vt0.c1)))))OR(x''))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((t1.c0, vt1.c1, vt1.c0, vt0.c2, '1546456017')) NOT BETWEEN (((((vt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((-316525326)&(vt0.c1)), ((t1.c0) IS TRUE), ((vt0.c0) BETWEEN (vt0.c0) AND (t1.c0)), ((((vt0.c1)AND(vt0.c2)))OR(vt1.c1)))) AND ((NULLIF(vt0.c1, vt1.c1), (+ (t1.c0)), ((vt1.c1) IS TRUE), (vt1.c1 IN ()), ((t1.c0)/(NULL))))) CROSS JOIN t1 ON ((((vt0.c2) IS FALSE)) BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))) AND ((t1.c0 IN ()))) ORDER BY ((vt1.c1 COLLATE BINARY)|(((vt0.c0)<=(vt1.c1)))) ASC);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((t1.c0, vt1.c1, vt1.c0, vt0.c2, '1546456017')) NOT BETWEEN (((((vt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((-316525326)&(vt0.c1)), ((t1.c0) IS TRUE), ((vt0.c0) BETWEEN (vt0.c0) AND (t1.c0)), ((((vt0.c1)AND(vt0.c2)))OR(vt1.c1)))) AND ((NULLIF(vt0.c1, vt1.c1), (+ (t1.c0)), ((vt1.c1) IS TRUE), (vt1.c1 IN ()), ((t1.c0)/(NULL))))) CROSS JOIN t1 ON ((((vt0.c2) IS FALSE)) BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))) AND ((t1.c0 IN ()))) WHERE (((((((vt0.c0) IS TRUE))AND((NOT (vt0.c1)))))OR(x''))) ORDER BY ((vt1.c1 COLLATE BINARY)|(((vt0.c0)<=(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))AND((NOT (vt0.c1)))))OR(x''))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((t1.c0, vt1.c1, vt1.c0, vt0.c2, '1546456017')) NOT BETWEEN (((((vt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((-316525326)&(vt0.c1)), ((t1.c0) IS TRUE), ((vt0.c0) BETWEEN (vt0.c0) AND (t1.c0)), ((((vt0.c1)AND(vt0.c2)))OR(vt1.c1)))) AND ((NULLIF(vt0.c1, vt1.c1), (+ (t1.c0)), ((vt1.c1) IS TRUE), (vt1.c1 IN ()), ((t1.c0)/(NULL))))) CROSS JOIN t1 ON ((((vt0.c2) IS FALSE)) BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))) AND ((t1.c0 IN ()))) ORDER BY ((vt1.c1 COLLATE BINARY)|(((vt0.c0)<=(vt1.c1)))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0))<>((t1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((t1.c0))<>((t1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0))<>((t1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((t1.c0))<>((t1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0))<>((t1.c0 COLLATE NOCASE))));
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c1))>=((vt1.c0)))) IS TRUE)) ORDER BY CASE WHEN CASE vt0.c1  WHEN '' THEN vt0.c2 WHEN vt1.c1 THEN 0.034624330554598015 WHEN vt0.c2 THEN vt0.c0 ELSE vt1.c1 END THEN ((x'85f3') NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 END THEN vt0.c2 COLLATE RTRIM WHEN (NOT (vt1.c0)) THEN vt1.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))>=((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN CASE vt0.c1  WHEN '' THEN vt0.c2 WHEN vt1.c1 THEN 0.034624330554598015 WHEN vt0.c2 THEN vt0.c0 ELSE vt1.c1 END THEN ((x'85f3') NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 END THEN vt0.c2 COLLATE RTRIM WHEN (NOT (vt1.c0)) THEN vt1.c0 END DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c1))>=((vt1.c0)))) IS TRUE)) ORDER BY CASE WHEN CASE vt0.c1  WHEN '' THEN vt0.c2 WHEN vt1.c1 THEN 0.034624330554598015 WHEN vt0.c2 THEN vt0.c0 ELSE vt1.c1 END THEN ((x'85f3') NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 END THEN vt0.c2 COLLATE RTRIM WHEN (NOT (vt1.c0)) THEN vt1.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))>=((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN CASE vt0.c1  WHEN '' THEN vt0.c2 WHEN vt1.c1 THEN 0.034624330554598015 WHEN vt0.c2 THEN vt0.c0 ELSE vt1.c1 END THEN ((x'85f3') NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 END THEN vt0.c2 COLLATE RTRIM WHEN (NOT (vt1.c0)) THEN vt1.c0 END DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c1))>=((vt1.c0)))) IS TRUE)) ORDER BY CASE WHEN CASE vt0.c1  WHEN '' THEN vt0.c2 WHEN vt1.c1 THEN 0.034624330554598015 WHEN vt0.c2 THEN vt0.c0 ELSE vt1.c1 END THEN ((x'85f3') NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 END THEN vt0.c2 COLLATE RTRIM WHEN (NOT (vt1.c0)) THEN vt1.c0 END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)%(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 END) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)%(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 END) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)%(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 END) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)%(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 END) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)%(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 END) AND ((vt0.c1 IN ()))));
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((vt0.c2)IS NOT(vt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)IS NOT(vt1.c1))) NOT NULL)) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((vt0.c2)IS NOT(vt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)IS NOT(vt1.c1))) NOT NULL)) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((vt0.c2)IS NOT(vt1.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((((- (vt0.c1)))LIKE((('p\r') IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))LIKE((('p\r') IS FALSE)))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((((- (vt0.c1)))LIKE((('p\r') IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))LIKE((('p\r') IS FALSE)))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((((- (vt0.c1)))LIKE((('p\r') IS FALSE))));
SELECT ALL * FROM vt0 WHERE (ABS(DISTINCT rtreenode(vt0.c1, vt0.c2))) ORDER BY ((vt0.c0)<<(vt0.c0)) COLLATE RTRIM, (- ((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT rtreenode(vt0.c1, vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<<(vt0.c0)) COLLATE RTRIM, (- ((vt0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (ABS(DISTINCT rtreenode(vt0.c1, vt0.c2))) ORDER BY ((vt0.c0)<<(vt0.c0)) COLLATE RTRIM, (- ((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT rtreenode(vt0.c1, vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<<(vt0.c0)) COLLATE RTRIM, (- ((vt0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (ABS(DISTINCT rtreenode(vt0.c1, vt0.c2))) ORDER BY ((vt0.c0)<<(vt0.c0)) COLLATE RTRIM, (- ((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT * FROM t1, vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE (vt1.c0);
SELECT * FROM vt1, t1, vt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1)|(vt0.c0))) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (vt1.c1))))) ORDER BY (((vt1.c1, 'H<', vt0.c1)) BETWEEN ((LTRIM(vt0.c2), vt1.c1 COLLATE BINARY, ((vt1.c0)IS(vt0.c0)))) AND ((UNICODE(vt0.c0), (vt0.c2 IN ()), (t1.c0 IN (t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1)|(vt0.c0))) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (((vt1.c1, 'H<', vt0.c1)) BETWEEN ((LTRIM(vt0.c2), vt1.c1 COLLATE BINARY, ((vt1.c0)IS(vt0.c0)))) AND ((UNICODE(vt0.c0), (vt0.c2 IN ()), (t1.c0 IN (t1.c0))))) DESC);
SELECT * FROM vt1, t1, vt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1)|(vt0.c0))) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (vt1.c1))))) ORDER BY (((vt1.c1, 'H<', vt0.c1)) BETWEEN ((LTRIM(vt0.c2), vt1.c1 COLLATE BINARY, ((vt1.c0)IS(vt0.c0)))) AND ((UNICODE(vt0.c0), (vt0.c2 IN ()), (t1.c0 IN (t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1)|(vt0.c0))) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (((vt1.c1, 'H<', vt0.c1)) BETWEEN ((LTRIM(vt0.c2), vt1.c1 COLLATE BINARY, ((vt1.c0)IS(vt0.c0)))) AND ((UNICODE(vt0.c0), (vt0.c2 IN ()), (t1.c0 IN (t1.c0))))) DESC);
SELECT * FROM vt1, t1, vt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1)|(vt0.c0))) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (vt1.c1))))) ORDER BY (((vt1.c1, 'H<', vt0.c1)) BETWEEN ((LTRIM(vt0.c2), vt1.c1 COLLATE BINARY, ((vt1.c0)IS(vt0.c0)))) AND ((UNICODE(vt0.c0), (vt0.c2 IN ()), (t1.c0 IN (t1.c0))))) DESC;
SELECT * FROM vt0, t1 WHERE (((((x'')IS(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((x'')IS(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((((x'')IS(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((x'')IS(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((((x'')IS(vt0.c1))) ISNULL));
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN t1 ON HEX(((vt1.c1)GLOB(vt1.c1))) WHERE ((vt1.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t1 ON HEX(((vt1.c1)GLOB(vt1.c1))));
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN t1 ON HEX(((vt1.c1)GLOB(vt1.c1))) WHERE ((vt1.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t1 ON HEX(((vt1.c1)GLOB(vt1.c1))));
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN t1 ON HEX(((vt1.c1)GLOB(vt1.c1))) WHERE ((vt1.c1 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (0.5651265681300074);
SELECT SUM(count) FROM (SELECT ((0.5651265681300074) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (0.5651265681300074);
SELECT SUM(count) FROM (SELECT ((0.5651265681300074) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (0.5651265681300074);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '173534672' WHEN vt0.c2 THEN x'' END THEN ((vt0.c2) ISNULL) ELSE vt0.c1 COLLATE BINARY END) ORDER BY ((CASE WHEN vt0.c2 THEN vt0.c0 ELSE NULL END)|((((vt0.c1))<=((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '173534672' WHEN vt0.c2 THEN x'' END THEN ((vt0.c2) ISNULL) ELSE vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c2 THEN vt0.c0 ELSE NULL END)|((((vt0.c1))<=((vt0.c0))))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '173534672' WHEN vt0.c2 THEN x'' END THEN ((vt0.c2) ISNULL) ELSE vt0.c1 COLLATE BINARY END) ORDER BY ((CASE WHEN vt0.c2 THEN vt0.c0 ELSE NULL END)|((((vt0.c1))<=((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '173534672' WHEN vt0.c2 THEN x'' END THEN ((vt0.c2) ISNULL) ELSE vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c2 THEN vt0.c0 ELSE NULL END)|((((vt0.c1))<=((vt0.c0))))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '173534672' WHEN vt0.c2 THEN x'' END THEN ((vt0.c2) ISNULL) ELSE vt0.c1 COLLATE BINARY END) ORDER BY ((CASE WHEN vt0.c2 THEN vt0.c0 ELSE NULL END)|((((vt0.c1))<=((vt0.c0))))) DESC;
SELECT COUNT(*) FROM vt0, t1 WHERE (UPPER((- (vt0.c1)))) ORDER BY (vt0.c0 IN (NULL)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((UPPER((- (vt0.c1)))) IS TRUE)  as count FROM vt0, t1 ORDER BY (vt0.c0 IN (NULL)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, t1 WHERE (UPPER((- (vt0.c1)))) ORDER BY (vt0.c0 IN (NULL)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((UPPER((- (vt0.c1)))) IS TRUE)  as count FROM vt0, t1 ORDER BY (vt0.c0 IN (NULL)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, t1 WHERE (UPPER((- (vt0.c1)))) ORDER BY (vt0.c0 IN (NULL)) COLLATE BINARY;
SELECT COUNT(*) FROM vt0, vt1 WHERE (0.04970544655250253);
SELECT SUM(count) FROM (SELECT ((0.04970544655250253) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (0.04970544655250253);
SELECT SUM(count) FROM (SELECT ((0.04970544655250253) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (0.04970544655250253);
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)==(vt1.c0)))OR(((vt1.c0)OR(vt1.c1)))))AND(vt1.c0 COLLATE NOCASE)))AND(CAST(vt1.c1 AS TEXT))))AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END))) ORDER BY (- (((vt1.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)==(vt1.c0)))OR(((vt1.c0)OR(vt1.c1)))))AND(vt1.c0 COLLATE NOCASE)))AND(CAST(vt1.c1 AS TEXT))))AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c1) NOT NULL))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)==(vt1.c0)))OR(((vt1.c0)OR(vt1.c1)))))AND(vt1.c0 COLLATE NOCASE)))AND(CAST(vt1.c1 AS TEXT))))AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END))) ORDER BY (- (((vt1.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)==(vt1.c0)))OR(((vt1.c0)OR(vt1.c1)))))AND(vt1.c0 COLLATE NOCASE)))AND(CAST(vt1.c1 AS TEXT))))AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c1) NOT NULL))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)==(vt1.c0)))OR(((vt1.c0)OR(vt1.c1)))))AND(vt1.c0 COLLATE NOCASE)))AND(CAST(vt1.c1 AS TEXT))))AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END))) ORDER BY (- (((vt1.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1, t1 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT * FROM vt0, vt1, t1 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT * FROM vt0, vt1, t1 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY 0xfffffffff5053acd DESC, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY 0xfffffffff5053acd DESC, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY 0xfffffffff5053acd DESC, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY 0xfffffffff5053acd DESC, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY 0xfffffffff5053acd DESC, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM  NULLS LAST;
SELECT * FROM t1, vt0, vt1 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c0 THEN 0Xffffffffcb86b2b7 ELSE t1.c0 END) NOT BETWEEN (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0))) AND (x''))) ORDER BY (((t1.c0)) NOT BETWEEN (((((x'')) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) AND ((t1.c0 COLLATE NOCASE))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN 0Xffffffffcb86b2b7 ELSE t1.c0 END) NOT BETWEEN (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0))) AND (x''))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)) NOT BETWEEN (((((x'')) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) AND ((t1.c0 COLLATE NOCASE))) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c0 THEN 0Xffffffffcb86b2b7 ELSE t1.c0 END) NOT BETWEEN (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0))) AND (x''))) ORDER BY (((t1.c0)) NOT BETWEEN (((((x'')) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) AND ((t1.c0 COLLATE NOCASE))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN 0Xffffffffcb86b2b7 ELSE t1.c0 END) NOT BETWEEN (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0))) AND (x''))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)) NOT BETWEEN (((((x'')) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) AND ((t1.c0 COLLATE NOCASE))) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c0 THEN 0Xffffffffcb86b2b7 ELSE t1.c0 END) NOT BETWEEN (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0))) AND (x''))) ORDER BY (((t1.c0)) NOT BETWEEN (((((x'')) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) AND ((t1.c0 COLLATE NOCASE))) DESC;
SELECT * FROM t1 WHERE (CASE WHEN t1.c0 THEN (((2088003098))<>((t1.c0))) END) ORDER BY CASE CAST(t1.c0 AS NUMERIC)  WHEN ((-1.110748678E9) NOT NULL) THEN '-1206740887' ELSE (((t1.c0))>((t1.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c0 THEN (((2088003098))<>((t1.c0))) END) IS TRUE)  as count FROM t1 ORDER BY CASE CAST(t1.c0 AS NUMERIC)  WHEN ((-1.110748678E9) NOT NULL) THEN '-1206740887' ELSE (((t1.c0))>((t1.c0))) END  NULLS LAST);
SELECT * FROM t1 WHERE (CASE WHEN t1.c0 THEN (((2088003098))<>((t1.c0))) END) ORDER BY CASE CAST(t1.c0 AS NUMERIC)  WHEN ((-1.110748678E9) NOT NULL) THEN '-1206740887' ELSE (((t1.c0))>((t1.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c0 THEN (((2088003098))<>((t1.c0))) END) IS TRUE)  as count FROM t1 ORDER BY CASE CAST(t1.c0 AS NUMERIC)  WHEN ((-1.110748678E9) NOT NULL) THEN '-1206740887' ELSE (((t1.c0))>((t1.c0))) END  NULLS LAST);
SELECT * FROM t1 WHERE (CASE WHEN t1.c0 THEN (((2088003098))<>((t1.c0))) END) ORDER BY CASE CAST(t1.c0 AS NUMERIC)  WHEN ((-1.110748678E9) NOT NULL) THEN '-1206740887' ELSE (((t1.c0))>((t1.c0))) END  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((((((~ (0.062496101878262156)))AND(((vt0.c1) NOT NULL))))AND((((('&hDRCC\n')AND(vt1.c1)))OR(vt0.c0))))) ORDER BY CASE vt0.c1  WHEN vt0.c2 THEN vt1.c1 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((((~ (0.062496101878262156)))AND(((vt0.c1) NOT NULL))))AND((((('&hDRCC\n')AND(vt1.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY CASE vt0.c1  WHEN vt0.c2 THEN vt1.c1 END COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((((((~ (0.062496101878262156)))AND(((vt0.c1) NOT NULL))))AND((((('&hDRCC\n')AND(vt1.c1)))OR(vt0.c0))))) ORDER BY CASE vt0.c1  WHEN vt0.c2 THEN vt1.c1 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((((~ (0.062496101878262156)))AND(((vt0.c1) NOT NULL))))AND((((('&hDRCC\n')AND(vt1.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY CASE vt0.c1  WHEN vt0.c2 THEN vt1.c1 END COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((((((~ (0.062496101878262156)))AND(((vt0.c1) NOT NULL))))AND((((('&hDRCC\n')AND(vt1.c1)))OR(vt0.c0))))) ORDER BY CASE vt0.c1  WHEN vt0.c2 THEN vt1.c1 END COLLATE BINARY DESC;
SELECT COUNT(*) FROM t1, vt1 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))AND(t1.c0))))) ORDER BY (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((t1.c0))))+(t1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt1.c0)OR(vt1.c0)))AND(t1.c0))))) IS TRUE)  as count FROM t1, vt1 ORDER BY (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((t1.c0))))+(t1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))AND(t1.c0))))) ORDER BY (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((t1.c0))))+(t1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt1.c0)OR(vt1.c0)))AND(t1.c0))))) IS TRUE)  as count FROM t1, vt1 ORDER BY (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((t1.c0))))+(t1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))AND(t1.c0))))) ORDER BY (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((t1.c0))))+(t1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (NULL) ORDER BY (((NOT (vt0.c2))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NOT (vt0.c2))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (NULL) ORDER BY (((NOT (vt0.c2))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NOT (vt0.c2))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (NULL) ORDER BY (((NOT (vt0.c2))) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt1 WHERE ((vt1.c0 IN (vt1.c1, vt1.c0)) COLLATE RTRIM) ORDER BY (((vt1.c1)==(t1.c0)) IN (((vt1.c1) BETWEEN (t1.c0) AND (t1.c0)), ''));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (vt1.c1, vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt1 ORDER BY (((vt1.c1)==(t1.c0)) IN (((vt1.c1) BETWEEN (t1.c0) AND (t1.c0)), '')));
SELECT COUNT(*) FROM t1, vt1 WHERE ((vt1.c0 IN (vt1.c1, vt1.c0)) COLLATE RTRIM) ORDER BY (((vt1.c1)==(t1.c0)) IN (((vt1.c1) BETWEEN (t1.c0) AND (t1.c0)), ''));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (vt1.c1, vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt1 ORDER BY (((vt1.c1)==(t1.c0)) IN (((vt1.c1) BETWEEN (t1.c0) AND (t1.c0)), '')));
SELECT COUNT(*) FROM t1, vt1 WHERE ((vt1.c0 IN (vt1.c1, vt1.c0)) COLLATE RTRIM) ORDER BY (((vt1.c1)==(t1.c0)) IN (((vt1.c1) BETWEEN (t1.c0) AND (t1.c0)), ''));
SELECT * FROM vt1, t1 INNER JOIN vt0 ON ((CHANGES())/((vt1.c1 IN ()))) WHERE (CASE ((vt1.c1)||(vt1.c0))  WHEN ((vt0.c0)>(vt0.c0)) THEN ((vt0.c2)*(x'')) WHEN CAST(vt0.c0 AS TEXT) THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c1))) WHEN (((t1.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))) THEN vt0.c2 COLLATE NOCASE ELSE ((vt0.c0)+(vt1.c1)) END) ORDER BY CAST(0.7263025233132799 AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c1)||(vt1.c0))  WHEN ((vt0.c0)>(vt0.c0)) THEN ((vt0.c2)*(x'')) WHEN CAST(vt0.c0 AS TEXT) THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c1))) WHEN (((t1.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))) THEN vt0.c2 COLLATE NOCASE ELSE ((vt0.c0)+(vt1.c1)) END) IS TRUE)  as count FROM vt1, t1 INNER JOIN vt0 ON ((CHANGES())/((vt1.c1 IN ()))) ORDER BY CAST(0.7263025233132799 AS TEXT)  NULLS LAST);
SELECT * FROM vt1, t1 INNER JOIN vt0 ON ((CHANGES())/((vt1.c1 IN ()))) WHERE (CASE ((vt1.c1)||(vt1.c0))  WHEN ((vt0.c0)>(vt0.c0)) THEN ((vt0.c2)*(x'')) WHEN CAST(vt0.c0 AS TEXT) THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c1))) WHEN (((t1.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))) THEN vt0.c2 COLLATE NOCASE ELSE ((vt0.c0)+(vt1.c1)) END) ORDER BY CAST(0.7263025233132799 AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c1)||(vt1.c0))  WHEN ((vt0.c0)>(vt0.c0)) THEN ((vt0.c2)*(x'')) WHEN CAST(vt0.c0 AS TEXT) THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c1))) WHEN (((t1.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))) THEN vt0.c2 COLLATE NOCASE ELSE ((vt0.c0)+(vt1.c1)) END) IS TRUE)  as count FROM vt1, t1 INNER JOIN vt0 ON ((CHANGES())/((vt1.c1 IN ()))) ORDER BY CAST(0.7263025233132799 AS TEXT)  NULLS LAST);
SELECT * FROM vt1, t1 INNER JOIN vt0 ON ((CHANGES())/((vt1.c1 IN ()))) WHERE (CASE ((vt1.c1)||(vt1.c0))  WHEN ((vt0.c0)>(vt0.c0)) THEN ((vt0.c2)*(x'')) WHEN CAST(vt0.c0 AS TEXT) THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c1))) WHEN (((t1.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))) THEN vt0.c2 COLLATE NOCASE ELSE ((vt0.c0)+(vt1.c1)) END) ORDER BY CAST(0.7263025233132799 AS TEXT)  NULLS LAST;
SELECT * FROM t1 LEFT OUTER JOIN vt1 ON (((((t1.c0 IN ()))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))))AND(((vt1.c1)GLOB(vt1.c1)))) WHERE (((((((((CAST(t1.c0 AS BLOB))OR(((((((((vt1.c1)AND(t1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(t1.c0)))))AND((- (vt1.c1)))))OR(load_extension(vt1.c1, t1.c0))))OR(t1.c0))) ORDER BY (((vt1.c1 IN ()))GLOB(((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c0)))), (NOT ((vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t1.c0 AS BLOB))OR(((((((((vt1.c1)AND(t1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(t1.c0)))))AND((- (vt1.c1)))))OR(load_extension(vt1.c1, t1.c0))))OR(t1.c0))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt1 ON (((((t1.c0 IN ()))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))))AND(((vt1.c1)GLOB(vt1.c1)))) ORDER BY (((vt1.c1 IN ()))GLOB(((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c0)))), (NOT ((vt1.c0 IN ()))) ASC);
SELECT * FROM t1 LEFT OUTER JOIN vt1 ON (((((t1.c0 IN ()))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))))AND(((vt1.c1)GLOB(vt1.c1)))) WHERE (((((((((CAST(t1.c0 AS BLOB))OR(((((((((vt1.c1)AND(t1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(t1.c0)))))AND((- (vt1.c1)))))OR(load_extension(vt1.c1, t1.c0))))OR(t1.c0))) ORDER BY (((vt1.c1 IN ()))GLOB(((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c0)))), (NOT ((vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t1.c0 AS BLOB))OR(((((((((vt1.c1)AND(t1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(t1.c0)))))AND((- (vt1.c1)))))OR(load_extension(vt1.c1, t1.c0))))OR(t1.c0))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt1 ON (((((t1.c0 IN ()))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))))AND(((vt1.c1)GLOB(vt1.c1)))) ORDER BY (((vt1.c1 IN ()))GLOB(((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c0)))), (NOT ((vt1.c0 IN ()))) ASC);
SELECT * FROM t1, vt0 WHERE (((TOTAL_CHANGES())!=((t1.c0 IN (t1.c0))))) ORDER BY ((((((vt0.c0)OR(t1.c0)))AND(vt0.c2)))IS NOT(((vt0.c1) NOT BETWEEN (vt0.c2) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES())<>((t1.c0 IN (t1.c0))))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((vt0.c0)OR(t1.c0)))AND(vt0.c2)))IS NOT(((vt0.c1) NOT BETWEEN (vt0.c2) AND (t1.c0)))));
SELECT * FROM t1, vt0 WHERE (((TOTAL_CHANGES())!=((t1.c0 IN (t1.c0))))) ORDER BY ((((((vt0.c0)OR(t1.c0)))AND(vt0.c2)))IS NOT(((vt0.c1) NOT BETWEEN (vt0.c2) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES())<>((t1.c0 IN (t1.c0))))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((vt0.c0)OR(t1.c0)))AND(vt0.c2)))IS NOT(((vt0.c1) NOT BETWEEN (vt0.c2) AND (t1.c0)))));
SELECT * FROM t1, vt0 WHERE (((TOTAL_CHANGES())!=((t1.c0 IN (t1.c0))))) ORDER BY ((((((vt0.c0)OR(t1.c0)))AND(vt0.c2)))IS NOT(((vt0.c1) NOT BETWEEN (vt0.c2) AND (t1.c0))));
SELECT * FROM vt1, vt0, t1 WHERE (((CAST(vt1.c0 AS INTEGER))*(((((((((t1.c0)AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))*(((((((((t1.c0)AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c2))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (((CAST(vt1.c0 AS INTEGER))*(((((((((t1.c0)AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))*(((((((((t1.c0)AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c2))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (((CAST(vt1.c0 AS INTEGER))*(((((((((t1.c0)AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (x''))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND (vt0.c1)) DESC, (((vt0.c1)) BETWEEN ((vt0.c2 COLLATE RTRIM)) AND (((((vt0.c0, vt0.c2, vt0.c2))<=((vt0.c2, NULL, vt0.c1)))))) ASC, ((((vt0.c1)+('-103494833')))+(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND (vt0.c1)) DESC, (((vt0.c1)) BETWEEN ((vt0.c2 COLLATE RTRIM)) AND (((((vt0.c0, vt0.c2, vt0.c2))<=((vt0.c2, NULL, vt0.c1)))))) ASC, ((((vt0.c1)+('-103494833')))+(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (x''))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND (vt0.c1)) DESC, (((vt0.c1)) BETWEEN ((vt0.c2 COLLATE RTRIM)) AND (((((vt0.c0, vt0.c2, vt0.c2))<=((vt0.c2, NULL, vt0.c1)))))) ASC, ((((vt0.c1)+('-103494833')))+(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND (vt0.c1)) DESC, (((vt0.c1)) BETWEEN ((vt0.c2 COLLATE RTRIM)) AND (((((vt0.c0, vt0.c2, vt0.c2))<=((vt0.c2, NULL, vt0.c1)))))) ASC, ((((vt0.c1)+('-103494833')))+(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (x''))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND (vt0.c1)) DESC, (((vt0.c1)) BETWEEN ((vt0.c2 COLLATE RTRIM)) AND (((((vt0.c0, vt0.c2, vt0.c2))<=((vt0.c2, NULL, vt0.c1)))))) ASC, ((((vt0.c1)+('-103494833')))+(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c2)||(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2)||(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c2)||(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2)||(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c2)||(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t1 ON ((t1.c0 COLLATE NOCASE)>>(LOWER(DISTINCT vt1.c1))) WHERE (CAST(((t1.c0)OR(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0)OR(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON ((t1.c0 COLLATE NOCASE)>>(LOWER(DISTINCT vt1.c1))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t1 ON ((t1.c0 COLLATE NOCASE)>>(LOWER(DISTINCT vt1.c1))) WHERE (CAST(((t1.c0)OR(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0)OR(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON ((t1.c0 COLLATE NOCASE)>>(LOWER(DISTINCT vt1.c1))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t1 ON ((t1.c0 COLLATE NOCASE)>>(LOWER(DISTINCT vt1.c1))) WHERE (CAST(((t1.c0)OR(vt1.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t1 ON LIKELIHOOD(CAST('-253431076' AS TEXT), 0.860618937506739) WHERE ((- (LIKELIHOOD(t1.c0, 0.8940195441276158))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(t1.c0, 0.8940195441276158)))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t1 ON LIKELIHOOD(CAST('-253431076' AS TEXT), 0.860618937506739));
SELECT COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t1 ON LIKELIHOOD(CAST('-253431076' AS TEXT), 0.860618937506739) WHERE ((- (LIKELIHOOD(t1.c0, 0.8940195441276158))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(t1.c0, 0.8940195441276158)))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t1 ON LIKELIHOOD(CAST('-253431076' AS TEXT), 0.860618937506739));
SELECT COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t1 ON LIKELIHOOD(CAST('-253431076' AS TEXT), 0.860618937506739) WHERE ((- (LIKELIHOOD(t1.c0, 0.8940195441276158))));
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (vt1.c1);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((vt0.c2)AND(SQLITE_COMPILEOPTION_GET(vt0.c2)))) ORDER BY ((((vt0.c2 COLLATE BINARY)OR(CASE '950032596'  WHEN vt0.c1 THEN vt1.c1 END)))AND((((0x174e8051))<>((vt0.c2)))))  NULLS FIRST, vt0.c1  NULLS FIRST, (((~ (vt0.c0)))OR(IFNULL(DISTINCT t1.c0, NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)AND(SQLITE_COMPILEOPTION_GET(vt0.c2)))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((((vt0.c2 COLLATE BINARY)OR(CASE '950032596'  WHEN vt0.c1 THEN vt1.c1 END)))AND((((0x174e8051))<>((vt0.c2)))))  NULLS FIRST, vt0.c1  NULLS FIRST, (((~ (vt0.c0)))OR(IFNULL(DISTINCT t1.c0, NULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((vt0.c2)AND(SQLITE_COMPILEOPTION_GET(vt0.c2)))) ORDER BY ((((vt0.c2 COLLATE BINARY)OR(CASE '950032596'  WHEN vt0.c1 THEN vt1.c1 END)))AND((((0x174e8051))<>((vt0.c2)))))  NULLS FIRST, vt0.c1  NULLS FIRST, (((~ (vt0.c0)))OR(IFNULL(DISTINCT t1.c0, NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)AND(SQLITE_COMPILEOPTION_GET(vt0.c2)))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((((vt0.c2 COLLATE BINARY)OR(CASE '950032596'  WHEN vt0.c1 THEN vt1.c1 END)))AND((((0x174e8051))<>((vt0.c2)))))  NULLS FIRST, vt0.c1  NULLS FIRST, (((~ (vt0.c0)))OR(IFNULL(DISTINCT t1.c0, NULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((vt0.c2)AND(SQLITE_COMPILEOPTION_GET(vt0.c2)))) ORDER BY ((((vt0.c2 COLLATE BINARY)OR(CASE '950032596'  WHEN vt0.c1 THEN vt1.c1 END)))AND((((0x174e8051))<>((vt0.c2)))))  NULLS FIRST, vt0.c1  NULLS FIRST, (((~ (vt0.c0)))OR(IFNULL(DISTINCT t1.c0, NULL))) DESC  NULLS LAST;
SELECT * FROM vt1 INDEXED BY i90 FULL OUTER JOIN t1 ON CAST(((vt1.c0) BETWEEN (vt1.c1) AND (t1.c0)) AS BLOB) INNER JOIN vt0 ON 0.2401930496330611 WHERE (((CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c2 THEN 1984460366 WHEN vt1.c1 THEN t1.c0 END)>=(CASE WHEN 0.11728133718705602 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c2 THEN 1984460366 WHEN vt1.c1 THEN t1.c0 END)>=(CASE WHEN 0.11728133718705602 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1 INDEXED BY i90 FULL OUTER JOIN t1 ON CAST(((vt1.c0) BETWEEN (vt1.c1) AND (t1.c0)) AS BLOB) INNER JOIN vt0 ON 0.2401930496330611);
SELECT * FROM vt1 INDEXED BY i90 FULL OUTER JOIN t1 ON CAST(((vt1.c0) BETWEEN (vt1.c1) AND (t1.c0)) AS BLOB) INNER JOIN vt0 ON 0.2401930496330611 WHERE (((CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c2 THEN 1984460366 WHEN vt1.c1 THEN t1.c0 END)>=(CASE WHEN 0.11728133718705602 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c2 THEN 1984460366 WHEN vt1.c1 THEN t1.c0 END)>=(CASE WHEN 0.11728133718705602 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1 INDEXED BY i90 FULL OUTER JOIN t1 ON CAST(((vt1.c0) BETWEEN (vt1.c1) AND (t1.c0)) AS BLOB) INNER JOIN vt0 ON 0.2401930496330611);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c2) IS TRUE) AS REAL) INNER JOIN t1 ON 0X5a00e67b WHERE (NULL) ORDER BY (((NULL, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, '咴|#(遼', ABS(vt0.c1))) AND ((CAST(vt0.c2 AS REAL), ((vt1.c0) BETWEEN ('') AND (vt1.c0)), (((vt1.c1))<>((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c2) IS TRUE) AS REAL) INNER JOIN t1 ON 0X5a00e67b ORDER BY (((NULL, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, '咴|#(遼', ABS(vt0.c1))) AND ((CAST(vt0.c2 AS REAL), ((vt1.c0) BETWEEN ('') AND (vt1.c0)), (((vt1.c1))<>((vt0.c1)))))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c2) IS TRUE) AS REAL) INNER JOIN t1 ON 0X5a00e67b WHERE (NULL) ORDER BY (((NULL, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, '咴|#(遼', ABS(vt0.c1))) AND ((CAST(vt0.c2 AS REAL), ((vt1.c0) BETWEEN ('') AND (vt1.c0)), (((vt1.c1))<>((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c2) IS TRUE) AS REAL) INNER JOIN t1 ON 0X5a00e67b ORDER BY (((NULL, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, '咴|#(遼', ABS(vt0.c1))) AND ((CAST(vt0.c2 AS REAL), ((vt1.c0) BETWEEN ('') AND (vt1.c0)), (((vt1.c1))<>((vt0.c1)))))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c2) IS TRUE) AS REAL) INNER JOIN t1 ON 0X5a00e67b WHERE (NULL) ORDER BY (((NULL, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, '咴|#(遼', ABS(vt0.c1))) AND ((CAST(vt0.c2 AS REAL), ((vt1.c0) BETWEEN ('') AND (vt1.c0)), (((vt1.c1))<>((vt0.c1))))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON x'' COLLATE RTRIM RIGHT OUTER JOIN t1 ON CASE ((vt0.c2) IS TRUE)  WHEN ((vt0.c0)<=(vt1.c0)) THEN (vt1.c0 IN (vt1.c1)) ELSE CAST(vt1.c1 AS TEXT) END WHERE (CAST(((vt1.c0)>(vt0.c0)) AS INTEGER)) ORDER BY (((CAST(t1.c0 AS REAL), vt0.c1 COLLATE NOCASE, vt1.c1 COLLATE NOCASE))!=((CAST(vt0.c1 AS REAL), (vt0.c0 IN ()), ((vt0.c2)+(vt1.c0))))) DESC  NULLS LAST, ((((vt0.c1) NOT NULL)) BETWEEN ((vt0.c2 IN (vt0.c0))) AND ((- (t1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON x'' COLLATE RTRIM RIGHT OUTER JOIN t1 ON CASE ((vt0.c2) IS TRUE)  WHEN ((vt0.c0)<=(vt1.c0)) THEN (vt1.c0 IN (vt1.c1)) ELSE CAST(vt1.c1 AS TEXT) END ORDER BY (((CAST(t1.c0 AS REAL), vt0.c1 COLLATE NOCASE, vt1.c1 COLLATE NOCASE))!=((CAST(vt0.c1 AS REAL), (vt0.c0 IN ()), ((vt0.c2)+(vt1.c0))))) DESC  NULLS LAST, ((((vt0.c1) NOT NULL)) BETWEEN ((vt0.c2 IN (vt0.c0))) AND ((- (t1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON x'' COLLATE RTRIM RIGHT OUTER JOIN t1 ON CASE ((vt0.c2) IS TRUE)  WHEN ((vt0.c0)<=(vt1.c0)) THEN (vt1.c0 IN (vt1.c1)) ELSE CAST(vt1.c1 AS TEXT) END WHERE (CAST(((vt1.c0)>(vt0.c0)) AS INTEGER)) ORDER BY (((CAST(t1.c0 AS REAL), vt0.c1 COLLATE NOCASE, vt1.c1 COLLATE NOCASE))!=((CAST(vt0.c1 AS REAL), (vt0.c0 IN ()), ((vt0.c2)+(vt1.c0))))) DESC  NULLS LAST, ((((vt0.c1) NOT NULL)) BETWEEN ((vt0.c2 IN (vt0.c0))) AND ((- (t1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON x'' COLLATE RTRIM RIGHT OUTER JOIN t1 ON CASE ((vt0.c2) IS TRUE)  WHEN ((vt0.c0)<=(vt1.c0)) THEN (vt1.c0 IN (vt1.c1)) ELSE CAST(vt1.c1 AS TEXT) END ORDER BY (((CAST(t1.c0 AS REAL), vt0.c1 COLLATE NOCASE, vt1.c1 COLLATE NOCASE))!=((CAST(vt0.c1 AS REAL), (vt0.c0 IN ()), ((vt0.c2)+(vt1.c0))))) DESC  NULLS LAST, ((((vt0.c1) NOT NULL)) BETWEEN ((vt0.c2 IN (vt0.c0))) AND ((- (t1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON x'' COLLATE RTRIM RIGHT OUTER JOIN t1 ON CASE ((vt0.c2) IS TRUE)  WHEN ((vt0.c0)<=(vt1.c0)) THEN (vt1.c0 IN (vt1.c1)) ELSE CAST(vt1.c1 AS TEXT) END WHERE (CAST(((vt1.c0)>(vt0.c0)) AS INTEGER)) ORDER BY (((CAST(t1.c0 AS REAL), vt0.c1 COLLATE NOCASE, vt1.c1 COLLATE NOCASE))!=((CAST(vt0.c1 AS REAL), (vt0.c0 IN ()), ((vt0.c2)+(vt1.c0))))) DESC  NULLS LAST, ((((vt0.c1) NOT NULL)) BETWEEN ((vt0.c2 IN (vt0.c0))) AND ((- (t1.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0, vt1, t1 WHERE (((CAST(vt1.c0 AS REAL))<<((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt1.c0)))))) ORDER BY (((vt1.c1)) BETWEEN ((CASE WHEN vt1.c1 THEN t1.c0 ELSE NULL END)) AND ((DATETIME(vt1.c0, t1.c0, vt1.c0, t1.c0, vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL))<<((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (((vt1.c1)) BETWEEN ((CASE WHEN vt1.c1 THEN t1.c0 ELSE NULL END)) AND ((DATETIME(vt1.c0, t1.c0, vt1.c0, t1.c0, vt0.c1))))  NULLS LAST);
SELECT * FROM vt0, vt1, t1 WHERE (((CAST(vt1.c0 AS REAL))<<((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt1.c0)))))) ORDER BY (((vt1.c1)) BETWEEN ((CASE WHEN vt1.c1 THEN t1.c0 ELSE NULL END)) AND ((DATETIME(vt1.c0, t1.c0, vt1.c0, t1.c0, vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL))<<((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (((vt1.c1)) BETWEEN ((CASE WHEN vt1.c1 THEN t1.c0 ELSE NULL END)) AND ((DATETIME(vt1.c0, t1.c0, vt1.c0, t1.c0, vt0.c1))))  NULLS LAST);
SELECT * FROM vt0, vt1, t1 WHERE (((CAST(vt1.c0 AS REAL))<<((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt1.c0)))))) ORDER BY (((vt1.c1)) BETWEEN ((CASE WHEN vt1.c1 THEN t1.c0 ELSE NULL END)) AND ((DATETIME(vt1.c0, t1.c0, vt1.c0, t1.c0, vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((((t1.c0) NOTNULL))AND(vt0.c1)) WHERE (((((0.6904666686946423)>=(vt0.c2)))+(CAST(x'' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((0.6904666686946423)>=(vt0.c2)))+(CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((((t1.c0) NOTNULL))AND(vt0.c1)));
SELECT ALL COUNT(*) FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((((t1.c0) NOTNULL))AND(vt0.c1)) WHERE (((((0.6904666686946423)>=(vt0.c2)))+(CAST(x'' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((0.6904666686946423)>=(vt0.c2)))+(CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((((t1.c0) NOTNULL))AND(vt0.c1)));
SELECT ALL COUNT(*) FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((((t1.c0) NOTNULL))AND(vt0.c1)) WHERE (((((0.6904666686946423)>=(vt0.c2)))+(CAST(x'' AS INTEGER))));
SELECT ALL * FROM vt0, t1 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c1) IS TRUE) END) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c1) IS TRUE) END) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c1) IS TRUE) END);
SELECT * FROM vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))>(UNLIKELY(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))>(UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))>(UNLIKELY(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))>(UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))>(UNLIKELY(vt1.c0))));
SELECT COUNT(*) FROM t1 NATURAL JOIN vt1 WHERE ((~ ((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c1)))))) IS TRUE)  as count FROM t1 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t1 NATURAL JOIN vt1 WHERE ((~ ((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c1)))))) IS TRUE)  as count FROM t1 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t1 NATURAL JOIN vt1 WHERE ((~ ((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c1))))));
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((CAST(vt1.c1 AS BLOB))<(((((vt1.c0)AND(vt0.c0)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS BLOB))<(((((vt1.c0)AND(vt0.c0)))OR(t1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((CAST(vt1.c1 AS BLOB))<(((((vt1.c0)AND(vt0.c0)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS BLOB))<(((((vt1.c0)AND(vt0.c0)))OR(t1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((CAST(vt1.c1 AS BLOB))<(((((vt1.c0)AND(vt0.c0)))OR(t1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('h<') NOT BETWEEN (vt1.c0) AND (vt1.c1)))|(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((('h<') NOT BETWEEN (vt1.c0) AND (vt1.c1)))|(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('h<') NOT BETWEEN (vt1.c0) AND (vt1.c1)))|(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((('h<') NOT BETWEEN (vt1.c0) AND (vt1.c1)))|(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('h<') NOT BETWEEN (vt1.c0) AND (vt1.c1)))|(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((COALESCE(vt0.c0, vt0.c0)) NOT BETWEEN ((+ (''))) AND (((1.909198659E9)%(vt1.c1)))) WHERE ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((COALESCE(vt0.c0, vt0.c0)) NOT BETWEEN ((+ (''))) AND (((1.909198659E9)%(vt1.c1)))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((COALESCE(vt0.c0, vt0.c0)) NOT BETWEEN ((+ (''))) AND (((1.909198659E9)%(vt1.c1)))) WHERE ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((COALESCE(vt0.c0, vt0.c0)) NOT BETWEEN ((+ (''))) AND (((1.909198659E9)%(vt1.c1)))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((COALESCE(vt0.c0, vt0.c0)) NOT BETWEEN ((+ (''))) AND (((1.909198659E9)%(vt1.c1)))) WHERE ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ('1390617228');
SELECT SUM(count) FROM (SELECT (('1390617228') IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ('1390617228');
SELECT SUM(count) FROM (SELECT (('1390617228') IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ('1390617228');
SELECT ALL * FROM t1, vt1, vt0 WHERE (CASE WHEN ((((((((t1.c0)OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)) THEN ((((((((vt1.c0)AND(vt0.c0)))OR(t1.c0)))AND(vt1.c1)))AND(vt0.c2)) WHEN CAST(vt1.c1 AS INTEGER) THEN ((vt1.c0)-(t1.c0)) WHEN '1408556512' THEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1)) END) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((t1.c0)OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)) THEN ((((((((vt1.c0)AND(vt0.c0)))OR(t1.c0)))AND(vt1.c1)))AND(vt0.c2)) WHEN CAST(vt1.c1 AS INTEGER) THEN ((vt1.c0)-(t1.c0)) WHEN '1408556512' THEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1)) END) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt1, vt0 WHERE (CASE WHEN ((((((((t1.c0)OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)) THEN ((((((((vt1.c0)AND(vt0.c0)))OR(t1.c0)))AND(vt1.c1)))AND(vt0.c2)) WHEN CAST(vt1.c1 AS INTEGER) THEN ((vt1.c0)-(t1.c0)) WHEN '1408556512' THEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1)) END) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((t1.c0)OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)) THEN ((((((((vt1.c0)AND(vt0.c0)))OR(t1.c0)))AND(vt1.c1)))AND(vt0.c2)) WHEN CAST(vt1.c1 AS INTEGER) THEN ((vt1.c0)-(t1.c0)) WHEN '1408556512' THEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1)) END) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt1, vt0 WHERE (CASE WHEN ((((((((t1.c0)OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)) THEN ((((((((vt1.c0)AND(vt0.c0)))OR(t1.c0)))AND(vt1.c1)))AND(vt0.c2)) WHEN CAST(vt1.c1 AS INTEGER) THEN ((vt1.c0)-(t1.c0)) WHEN '1408556512' THEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1)) END) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT * FROM t1 CROSS JOIN vt0 ON vt0.c0 CROSS JOIN vt1 ON ((('0.5442733469860348' IN ()))!=(((vt0.c0)>(vt0.c1)))) WHERE ((CASE vt0.c0  WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END IN ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END IN ((vt0.c1 IN ())))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON vt0.c0 CROSS JOIN vt1 ON ((('0.5442733469860348' IN ()))!=(((vt0.c0)>(vt0.c1)))));
SELECT * FROM t1 CROSS JOIN vt0 ON vt0.c0 CROSS JOIN vt1 ON ((('0.5442733469860348' IN ()))!=(((vt0.c0)>(vt0.c1)))) WHERE ((CASE vt0.c0  WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END IN ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END IN ((vt0.c1 IN ())))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON vt0.c0 CROSS JOIN vt1 ON ((('0.5442733469860348' IN ()))!=(((vt0.c0)>(vt0.c1)))));
SELECT * FROM t1 CROSS JOIN vt0 ON vt0.c0 CROSS JOIN vt1 ON ((('0.5442733469860348' IN ()))!=(((vt0.c0)>(vt0.c1)))) WHERE ((CASE vt0.c0  WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END IN ((vt0.c1 IN ()))));
SELECT ALL * FROM vt0, t1 WHERE ((('250594363')<((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY CAST(vt0.c1 AS TEXT) ASC, ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((~ (0.42294594135964947))) AND (7.33013434E8))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('250594363')<((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(vt0.c1 AS TEXT) ASC, ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((~ (0.42294594135964947))) AND (7.33013434E8))  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE ((('250594363')<((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY CAST(vt0.c1 AS TEXT) ASC, ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((~ (0.42294594135964947))) AND (7.33013434E8))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('250594363')<((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(vt0.c1 AS TEXT) ASC, ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((~ (0.42294594135964947))) AND (7.33013434E8))  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE ((('250594363')<((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY CAST(vt0.c1 AS TEXT) ASC, ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((~ (0.42294594135964947))) AND (7.33013434E8))  NULLS FIRST;
SELECT * FROM t1 WHERE (json_array(((t1.c0)=(t1.c0)), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), (t1.c0 IN ()), LIKELY(t1.c0)));
SELECT SUM(count) FROM (SELECT ((json_array(((t1.c0)=(t1.c0)), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), (t1.c0 IN ()), LIKELY(t1.c0))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (json_array(((t1.c0)=(t1.c0)), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), (t1.c0 IN ()), LIKELY(t1.c0)));
SELECT SUM(count) FROM (SELECT ((json_array(((t1.c0)=(t1.c0)), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), (t1.c0 IN ()), LIKELY(t1.c0))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM vt1, t1 WHERE (CAST(((vt1.c0)GLOB(vt1.c1)) AS INTEGER)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)GLOB(vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, t1 ORDER BY NULL);
SELECT ALL * FROM vt1, t1 WHERE (CAST(((vt1.c0)GLOB(vt1.c1)) AS INTEGER)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)GLOB(vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, t1 ORDER BY NULL);
SELECT ALL * FROM vt1, t1 WHERE (CAST(((vt1.c0)GLOB(vt1.c1)) AS INTEGER)) ORDER BY NULL;
SELECT COUNT(*) FROM vt1 INNER JOIN t1 ON ((t1.c0 COLLATE RTRIM) NOTNULL) WHERE (((vt1.c1 COLLATE BINARY)+(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY)+(vt1.c1))) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON ((t1.c0 COLLATE RTRIM) NOTNULL));
SELECT COUNT(*) FROM vt1 INNER JOIN t1 ON ((t1.c0 COLLATE RTRIM) NOTNULL) WHERE (((vt1.c1 COLLATE BINARY)+(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY)+(vt1.c1))) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON ((t1.c0 COLLATE RTRIM) NOTNULL));
SELECT COUNT(*) FROM vt1 INNER JOIN t1 ON ((t1.c0 COLLATE RTRIM) NOTNULL) WHERE (((vt1.c1 COLLATE BINARY)+(vt1.c1)));
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN t1 ON CAST(((vt0.c2)>(vt0.c2)) AS INTEGER) WHERE ((((vt1.c0)) NOT BETWEEN ((((0Xfffffffff81d54b4)LIKE(vt0.c2)))) AND (((~ (vt1.c1)))))) ORDER BY LIKE(CAST(vt0.c1 AS NUMERIC), vt0.c2 COLLATE RTRIM, '0')  NULLS FIRST, (((((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c1))))AND(t1.c0 COLLATE BINARY)))AND(((vt0.c0)+(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((0xfffffffff81d54b4)LIKE(vt0.c2)))) AND (((~ (vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t1 ON CAST(((vt0.c2)>(vt0.c2)) AS INTEGER) ORDER BY LIKE(CAST(vt0.c1 AS NUMERIC), vt0.c2 COLLATE RTRIM, '0')  NULLS FIRST, (((((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c1))))AND(t1.c0 COLLATE BINARY)))AND(((vt0.c0)+(vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN t1 ON CAST(((vt0.c2)>(vt0.c2)) AS INTEGER) WHERE ((((vt1.c0)) NOT BETWEEN ((((0Xfffffffff81d54b4)LIKE(vt0.c2)))) AND (((~ (vt1.c1)))))) ORDER BY LIKE(CAST(vt0.c1 AS NUMERIC), vt0.c2 COLLATE RTRIM, '0')  NULLS FIRST, (((((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c1))))AND(t1.c0 COLLATE BINARY)))AND(((vt0.c0)+(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((0xfffffffff81d54b4)LIKE(vt0.c2)))) AND (((~ (vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t1 ON CAST(((vt0.c2)>(vt0.c2)) AS INTEGER) ORDER BY LIKE(CAST(vt0.c1 AS NUMERIC), vt0.c2 COLLATE RTRIM, '0')  NULLS FIRST, (((((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c1))))AND(t1.c0 COLLATE BINARY)))AND(((vt0.c0)+(vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN t1 ON CAST(((vt0.c2)>(vt0.c2)) AS INTEGER) WHERE ((((vt1.c0)) NOT BETWEEN ((((0Xfffffffff81d54b4)LIKE(vt0.c2)))) AND (((~ (vt1.c1)))))) ORDER BY LIKE(CAST(vt0.c1 AS NUMERIC), vt0.c2 COLLATE RTRIM, '0')  NULLS FIRST, (((((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c1))))AND(t1.c0 COLLATE BINARY)))AND(((vt0.c0)+(vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) NOT NULL)) ORDER BY CASE CAST(vt0.c2 AS INTEGER)  WHEN CASE vt0.c1  WHEN vt0.c2 THEN x'334a' WHEN vt0.c0 THEN '18632745' WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c2 AS INTEGER)  WHEN CASE vt0.c1  WHEN vt0.c2 THEN x'334a' WHEN vt0.c0 THEN '18632745' WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) NOT NULL)) ORDER BY CASE CAST(vt0.c2 AS INTEGER)  WHEN CASE vt0.c1  WHEN vt0.c2 THEN x'334a' WHEN vt0.c0 THEN '18632745' WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c2 AS INTEGER)  WHEN CASE vt0.c1  WHEN vt0.c2 THEN x'334a' WHEN vt0.c0 THEN '18632745' WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) NOT NULL)) ORDER BY CASE CAST(vt0.c2 AS INTEGER)  WHEN CASE vt0.c1  WHEN vt0.c2 THEN x'334a' WHEN vt0.c0 THEN '18632745' WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t1 WHERE (json_array(('' IN (vt1.c1)), CAST(t1.c0 AS INTEGER))) ORDER BY ((json_object(t1.c0, vt1.c0)) NOT BETWEEN (vt1.c0) AND (CASE vt1.c1  WHEN t1.c0 THEN t1.c0 END)) ASC  NULLS LAST, IFNULL(t1.c0, ((((((((((((0X4242fd48)AND(vt1.c1)))AND(vt1.c1)))OR(t1.c0)))OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_array(('' IN (vt1.c1)), CAST(t1.c0 AS INTEGER))) IS TRUE)  as count FROM vt1, t1 ORDER BY ((json_object(t1.c0, vt1.c0)) NOT BETWEEN (vt1.c0) AND (CASE vt1.c1  WHEN t1.c0 THEN t1.c0 END)) ASC  NULLS LAST, IFNULL(t1.c0, ((((((((((((0X4242fd48)AND(vt1.c1)))AND(vt1.c1)))OR(t1.c0)))OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c1))) ASC);
SELECT COUNT(*) FROM vt1, t1 WHERE (json_array(('' IN (vt1.c1)), CAST(t1.c0 AS INTEGER))) ORDER BY ((json_object(t1.c0, vt1.c0)) NOT BETWEEN (vt1.c0) AND (CASE vt1.c1  WHEN t1.c0 THEN t1.c0 END)) ASC  NULLS LAST, IFNULL(t1.c0, ((((((((((((0X4242fd48)AND(vt1.c1)))AND(vt1.c1)))OR(t1.c0)))OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_array(('' IN (vt1.c1)), CAST(t1.c0 AS INTEGER))) IS TRUE)  as count FROM vt1, t1 ORDER BY ((json_object(t1.c0, vt1.c0)) NOT BETWEEN (vt1.c0) AND (CASE vt1.c1  WHEN t1.c0 THEN t1.c0 END)) ASC  NULLS LAST, IFNULL(t1.c0, ((((((((((((0X4242fd48)AND(vt1.c1)))AND(vt1.c1)))OR(t1.c0)))OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c1))) ASC);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c2)>>(vt0.c2))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (JULIANDAY(vt1.c1, vt0.c1, vt0.c0, vt0.c2, vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)>>(vt0.c2))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (JULIANDAY(vt1.c1, vt0.c1, vt0.c0, vt0.c2, vt0.c2)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c2)>>(vt0.c2))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (JULIANDAY(vt1.c1, vt0.c1, vt0.c0, vt0.c2, vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)>>(vt0.c2))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (JULIANDAY(vt1.c1, vt0.c1, vt0.c0, vt0.c2, vt0.c2)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c2)>>(vt0.c2))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (JULIANDAY(vt1.c1, vt0.c1, vt0.c0, vt0.c2, vt0.c2))));
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (LIKELIHOOD(DISTINCT CAST(vt1.c1 AS BLOB), 0.9053568964988111));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(vt1.c1 AS BLOB), 0.9053568964988111)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (LIKELIHOOD(DISTINCT CAST(vt1.c1 AS BLOB), 0.9053568964988111));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(vt1.c1 AS BLOB), 0.9053568964988111)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (LIKELIHOOD(DISTINCT CAST(vt1.c1 AS BLOB), 0.9053568964988111));
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY x'46e4' DESC  NULLS FIRST, (- (CASE WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY x'46e4' DESC  NULLS FIRST, (- (CASE WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)) ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY x'46e4' DESC  NULLS FIRST, (- (CASE WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY x'46e4' DESC  NULLS FIRST, (- (CASE WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)) ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY x'46e4' DESC  NULLS FIRST, (- (CASE WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((+ (vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((+ (vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((+ (vt0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((vt0.c1)&(vt0.c1))) IS TRUE)) ORDER BY 0Xffffffffd2169675 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)&(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM t1, vt0 ORDER BY 0xffffffffd2169675 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((vt0.c1)&(vt0.c1))) IS TRUE)) ORDER BY 0Xffffffffd2169675 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)&(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM t1, vt0 ORDER BY 0xffffffffd2169675 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((vt0.c1)&(vt0.c1))) IS TRUE)) ORDER BY 0Xffffffffd2169675 ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((t1.c0 IN ()) IN ())) ORDER BY t1.c0 ASC, NULL  NULLS FIRST, ((((((((SQLITE_VERSION())AND(0x1f5b94ad COLLATE RTRIM)))AND(CASE WHEN t1.c0 THEN '454004882' END)))OR(((t1.c0) BETWEEN (NULL) AND (t1.c0)))))AND(t1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 IN ()) IN ())) IS TRUE)  as count FROM t1 ORDER BY t1.c0 ASC, NULL  NULLS FIRST, ((((((((SQLITE_VERSION())AND(0x1f5b94ad COLLATE RTRIM)))AND(CASE WHEN t1.c0 THEN '454004882' END)))OR(((t1.c0) BETWEEN (NULL) AND (t1.c0)))))AND(t1.c0)) ASC);
SELECT ALL * FROM t1 WHERE (((t1.c0 IN ()) IN ())) ORDER BY t1.c0 ASC, NULL  NULLS FIRST, ((((((((SQLITE_VERSION())AND(0x1f5b94ad COLLATE RTRIM)))AND(CASE WHEN t1.c0 THEN '454004882' END)))OR(((t1.c0) BETWEEN (NULL) AND (t1.c0)))))AND(t1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 IN ()) IN ())) IS TRUE)  as count FROM t1 ORDER BY t1.c0 ASC, NULL  NULLS FIRST, ((((((((SQLITE_VERSION())AND(0x1f5b94ad COLLATE RTRIM)))AND(CASE WHEN t1.c0 THEN '454004882' END)))OR(((t1.c0) BETWEEN (NULL) AND (t1.c0)))))AND(t1.c0)) ASC);
SELECT ALL * FROM t1 WHERE (((t1.c0 IN ()) IN ())) ORDER BY t1.c0 ASC, NULL  NULLS FIRST, ((((((((SQLITE_VERSION())AND(0x1f5b94ad COLLATE RTRIM)))AND(CASE WHEN t1.c0 THEN '454004882' END)))OR(((t1.c0) BETWEEN (NULL) AND (t1.c0)))))AND(t1.c0)) ASC;
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c2 THEN vt0.c0 END))) ORDER BY (((NOT (vt0.c2))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c2))) ISNULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c2 THEN vt0.c0 END))) ORDER BY (((NOT (vt0.c2))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c2))) ISNULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c2 THEN vt0.c0 END))) ORDER BY (((NOT (vt0.c2))) ISNULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)<=((vt1.c1 IN ())))) ORDER BY ABS(((vt1.c1)IS(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<=((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ABS(((vt1.c1)IS(vt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)<=((vt1.c1 IN ())))) ORDER BY ABS(((vt1.c1)IS(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<=((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ABS(((vt1.c1)IS(vt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)<=((vt1.c1 IN ())))) ORDER BY ABS(((vt1.c1)IS(vt0.c0))) ASC  NULLS FIRST;
SELECT * FROM t1, vt1, vt0 WHERE (((t1.c0)<<((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((t1.c0)<<((vt0.c0 IN ())))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE (((t1.c0)<<((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((t1.c0)<<((vt0.c0 IN ())))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE (((t1.c0)<<((vt0.c0 IN ()))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0)))IS(vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS NOT(vt1.c0)))IS(vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0)))IS(vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS NOT(vt1.c0)))IS(vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0)))IS(vt1.c1 COLLATE BINARY)));
SELECT ALL * FROM t1 WHERE (((((t1.c0)<(t1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<(t1.c0))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c0)<(t1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<(t1.c0))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c0)<(t1.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, t1 CROSS JOIN vt0 ON ((CASE t1.c0  WHEN vt0.c2 THEN NULL WHEN vt1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c2 END)|(CAST(t1.c0 AS NUMERIC))) WHERE (CAST((('w')*(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('w')*(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, t1 CROSS JOIN vt0 ON ((CASE t1.c0  WHEN vt0.c2 THEN NULL WHEN vt1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c2 END)|(CAST(t1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1, t1 CROSS JOIN vt0 ON ((CASE t1.c0  WHEN vt0.c2 THEN NULL WHEN vt1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c2 END)|(CAST(t1.c0 AS NUMERIC))) WHERE (CAST((('w')*(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('w')*(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, t1 CROSS JOIN vt0 ON ((CASE t1.c0  WHEN vt0.c2 THEN NULL WHEN vt1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c2 END)|(CAST(t1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1, t1 CROSS JOIN vt0 ON ((CASE t1.c0  WHEN vt0.c2 THEN NULL WHEN vt1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c2 END)|(CAST(t1.c0 AS NUMERIC))) WHERE (CAST((('w')*(vt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON CAST(CASE t1.c0  WHEN vt1.c1 THEN '0.4826280151841018' WHEN vt1.c0 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 'bUSGo' END AS TEXT) WHERE (NULL) ORDER BY json_patch((vt1.c1 IN ()), CASE vt1.c0  WHEN vt1.c1 THEN t1.c0 ELSE vt1.c1 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON CAST(CASE t1.c0  WHEN vt1.c1 THEN '0.4826280151841018' WHEN vt1.c0 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 'bUSGo' END AS TEXT) ORDER BY json_patch((vt1.c1 IN ()), CASE vt1.c0  WHEN vt1.c1 THEN t1.c0 ELSE vt1.c1 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON CAST(CASE t1.c0  WHEN vt1.c1 THEN '0.4826280151841018' WHEN vt1.c0 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 'bUSGo' END AS TEXT) WHERE (NULL) ORDER BY json_patch((vt1.c1 IN ()), CASE vt1.c0  WHEN vt1.c1 THEN t1.c0 ELSE vt1.c1 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON CAST(CASE t1.c0  WHEN vt1.c1 THEN '0.4826280151841018' WHEN vt1.c0 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 'bUSGo' END AS TEXT) ORDER BY json_patch((vt1.c1 IN ()), CASE vt1.c0  WHEN vt1.c1 THEN t1.c0 ELSE vt1.c1 END)  NULLS LAST);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (((NULL) NOT NULL));
SELECT * FROM vt0 WHERE ((NOT (vt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (vt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (vt0.c2 COLLATE NOCASE)));
SELECT ALL * FROM vt0, vt1, t1 WHERE (JULIANDAY(json_quote(vt0.c0), ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), (((vt0.c2, NULL, t1.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, t1.c0))))) ORDER BY CASE ''  WHEN ((NULL) BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c1)>=(vt0.c0)) ELSE vt1.c1 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(json_quote(vt0.c0), ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), (((vt0.c2, NULL, t1.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, t1.c0))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY CASE ''  WHEN ((NULL) BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c1)>=(vt0.c0)) ELSE vt1.c1 COLLATE RTRIM END);
SELECT ALL * FROM vt0, vt1, t1 WHERE (JULIANDAY(json_quote(vt0.c0), ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), (((vt0.c2, NULL, t1.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, t1.c0))))) ORDER BY CASE ''  WHEN ((NULL) BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c1)>=(vt0.c0)) ELSE vt1.c1 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(json_quote(vt0.c0), ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), (((vt0.c2, NULL, t1.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, t1.c0))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY CASE ''  WHEN ((NULL) BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c1)>=(vt0.c0)) ELSE vt1.c1 COLLATE RTRIM END);
SELECT * FROM t1, vt0 INDEXED BY i90 RIGHT OUTER JOIN vt1 ON (((vt0.c1)<<(x'8c3c')) IN ()) WHERE (((vt1.c0 COLLATE NOCASE)-((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)-((vt1.c1 IN ())))) IS TRUE)  as count FROM t1, vt0 INDEXED BY i90 RIGHT OUTER JOIN vt1 ON (((vt0.c1)<<(x'8c3c')) IN ()));
SELECT * FROM t1, vt0 INDEXED BY i90 RIGHT OUTER JOIN vt1 ON (((vt0.c1)<<(x'8c3c')) IN ()) WHERE (((vt1.c0 COLLATE NOCASE)-((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)-((vt1.c1 IN ())))) IS TRUE)  as count FROM t1, vt0 INDEXED BY i90 RIGHT OUTER JOIN vt1 ON (((vt0.c1)<<(x'8c3c')) IN ()));
SELECT * FROM vt0, vt1 WHERE (((vt0.c2) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c0)*(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c0)*(vt0.c2))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt0.c2) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c0)*(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c0)*(vt0.c2))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt0.c2) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c0)*(vt0.c2)))));
SELECT COUNT(*) FROM vt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (NULL);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('&y	E-W-9^')GLOB(((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((('&y	E-W-9^')GLOB(((((vt0.c2)OR(vt0.c0)))OR(vt0.c2))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('&y	E-W-9^')GLOB(((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((('&y	E-W-9^')GLOB(((((vt0.c2)OR(vt0.c0)))OR(vt0.c2))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('&y	E-W-9^')GLOB(((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)))));
SELECT COUNT(*) FROM t1 WHERE ((((NULL)) NOT BETWEEN (((t1.c0 IN ()))) AND (((~ (t1.c0)))))) ORDER BY (((t1.c0 IN ())) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) NOT BETWEEN (((t1.c0 IN ()))) AND (((~ (t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN ())) ISNULL) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((NULL)) NOT BETWEEN (((t1.c0 IN ()))) AND (((~ (t1.c0)))))) ORDER BY (((t1.c0 IN ())) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) NOT BETWEEN (((t1.c0 IN ()))) AND (((~ (t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN ())) ISNULL) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((NULL)) NOT BETWEEN (((t1.c0 IN ()))) AND (((~ (t1.c0)))))) ORDER BY (((t1.c0 IN ())) ISNULL) DESC;
SELECT * FROM t1, vt0 WHERE (0.82261680072868);
SELECT SUM(count) FROM (SELECT ALL ((0.82261680072868) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (0.82261680072868);
SELECT SUM(count) FROM (SELECT ALL ((0.82261680072868) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (0.82261680072868);
SELECT ALL * FROM t1, vt1, vt0 WHERE ((((~ (t1.c0)))>=((- (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t1.c0)))>=((- (vt0.c2))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1, vt0 WHERE ((((~ (t1.c0)))>=((- (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t1.c0)))>=((- (vt0.c2))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1, vt0 WHERE ((((~ (t1.c0)))>=((- (vt0.c2)))));
SELECT COUNT(*) FROM vt0, t1 WHERE (((vt0.c2 IN ()) IN ())) ORDER BY ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))/(((((NULL)AND(vt0.c1)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 IN ()) IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))/(((((NULL)AND(vt0.c1)))OR(vt0.c1)))));
SELECT COUNT(*) FROM vt0, t1 WHERE (((vt0.c2 IN ()) IN ())) ORDER BY ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))/(((((NULL)AND(vt0.c1)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 IN ()) IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))/(((((NULL)AND(vt0.c1)))OR(vt0.c1)))));
SELECT COUNT(*) FROM vt0, t1 WHERE (((vt0.c2 IN ()) IN ())) ORDER BY ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))/(((((NULL)AND(vt0.c1)))OR(vt0.c1))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((vt0.c2)) BETWEEN ((((vt0.c0) IS TRUE))) AND (((~ (t1.c0)))))) ORDER BY (((vt0.c0 IN ()))>>(((vt0.c1) ISNULL))), HEX(((vt0.c2) ISNULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((((vt0.c0) IS TRUE))) AND (((~ (t1.c0)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((vt0.c0 IN ()))>>(((vt0.c1) ISNULL))), HEX(((vt0.c2) ISNULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((vt0.c2)) BETWEEN ((((vt0.c0) IS TRUE))) AND (((~ (t1.c0)))))) ORDER BY (((vt0.c0 IN ()))>>(((vt0.c1) ISNULL))), HEX(((vt0.c2) ISNULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((((vt0.c0) IS TRUE))) AND (((~ (t1.c0)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((vt0.c0 IN ()))>>(((vt0.c1) ISNULL))), HEX(((vt0.c2) ISNULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((vt0.c2)) BETWEEN ((((vt0.c0) IS TRUE))) AND (((~ (t1.c0)))))) ORDER BY (((vt0.c0 IN ()))>>(((vt0.c1) ISNULL))), HEX(((vt0.c2) ISNULL)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((~ (vt0.c1)))GLOB(NULL COLLATE NOCASE))) ORDER BY '1794484262' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1)))GLOB(NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY '1794484262' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((~ (vt0.c1)))GLOB(NULL COLLATE NOCASE))) ORDER BY '1794484262' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1)))GLOB(NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY '1794484262' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((~ (vt0.c1)))GLOB(NULL COLLATE NOCASE))) ORDER BY '1794484262' DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN t1 ON NULL WHERE ((((((('')AND(vt0.c1)))AND(vt0.c2))) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt0.c2 ELSE t1.c0 END) AND (t1.c0))) ORDER BY ((CASE t1.c0  WHEN vt1.c0 THEN vt0.c2 END)*(DATETIME(vt1.c0, vt0.c0, vt1.c0))), QUOTE(vt1.c1) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((('')AND(vt0.c1)))AND(vt0.c2))) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt0.c2 ELSE t1.c0 END) AND (t1.c0))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t1 ON NULL ORDER BY ((CASE t1.c0  WHEN vt1.c0 THEN vt0.c2 END)*(DATETIME(vt1.c0, vt0.c0, vt1.c0))), QUOTE(vt1.c1) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN t1 ON NULL WHERE ((((((('')AND(vt0.c1)))AND(vt0.c2))) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt0.c2 ELSE t1.c0 END) AND (t1.c0))) ORDER BY ((CASE t1.c0  WHEN vt1.c0 THEN vt0.c2 END)*(DATETIME(vt1.c0, vt0.c0, vt1.c0))), QUOTE(vt1.c1) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((('')AND(vt0.c1)))AND(vt0.c2))) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt0.c2 ELSE t1.c0 END) AND (t1.c0))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t1 ON NULL ORDER BY ((CASE t1.c0  WHEN vt1.c0 THEN vt0.c2 END)*(DATETIME(vt1.c0, vt0.c0, vt1.c0))), QUOTE(vt1.c1) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN t1 ON NULL WHERE ((((((('')AND(vt0.c1)))AND(vt0.c2))) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt0.c2 ELSE t1.c0 END) AND (t1.c0))) ORDER BY ((CASE t1.c0  WHEN vt1.c0 THEN vt0.c2 END)*(DATETIME(vt1.c0, vt0.c0, vt1.c0))), QUOTE(vt1.c1) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE ((- ((((t1.c0))<=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((t1.c0))<=((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE ((- ((((t1.c0))<=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((t1.c0))<=((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE ((- ((((t1.c0))<=((vt1.c0))))));
SELECT * FROM t1 WHERE ((((t1.c0 IN ())) BETWEEN (0.3126406714830634) AND (((t1.c0) IS FALSE)))) ORDER BY ((t1.c0)IS(t1.c0)) COLLATE BINARY, t1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ())) BETWEEN (0.3126406714830634) AND (((t1.c0) IS FALSE)))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0)IS(t1.c0)) COLLATE BINARY, t1.c0);
SELECT * FROM t1 WHERE ((((t1.c0 IN ())) BETWEEN (0.3126406714830634) AND (((t1.c0) IS FALSE)))) ORDER BY ((t1.c0)IS(t1.c0)) COLLATE BINARY, t1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ())) BETWEEN (0.3126406714830634) AND (((t1.c0) IS FALSE)))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0)IS(t1.c0)) COLLATE BINARY, t1.c0);
SELECT * FROM t1 WHERE ((((t1.c0 IN ())) BETWEEN (0.3126406714830634) AND (((t1.c0) IS FALSE)))) ORDER BY ((t1.c0)IS(t1.c0)) COLLATE BINARY, t1.c0;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c2 AS REAL)) BETWEEN ((+ (0.10419657158408124))) AND ((~ (vt0.c2))))) ORDER BY CAST((NOT (vt0.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS REAL)) BETWEEN ((+ (0.10419657158408124))) AND ((~ (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((NOT (vt0.c2)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c2 AS REAL)) BETWEEN ((+ (0.10419657158408124))) AND ((~ (vt0.c2))))) ORDER BY CAST((NOT (vt0.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS REAL)) BETWEEN ((+ (0.10419657158408124))) AND ((~ (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((NOT (vt0.c2)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c2 AS REAL)) BETWEEN ((+ (0.10419657158408124))) AND ((~ (vt0.c2))))) ORDER BY CAST((NOT (vt0.c2)) AS INTEGER);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))%(((0.2731037819794433) BETWEEN (vt0.c1) AND (vt0.c2))))) ORDER BY (((vt0.c2)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((vt0.c0)==(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0)))%(((0.2731037819794433) BETWEEN (vt0.c1) AND (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((vt0.c0)==(NULL))))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))%(((0.2731037819794433) BETWEEN (vt0.c1) AND (vt0.c2))))) ORDER BY (((vt0.c2)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((vt0.c0)==(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0)))%(((0.2731037819794433) BETWEEN (vt0.c1) AND (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((vt0.c0)==(NULL))))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))%(((0.2731037819794433) BETWEEN (vt0.c1) AND (vt0.c2))))) ORDER BY (((vt0.c2)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((vt0.c0)==(NULL)))));
SELECT * FROM vt1, vt0, t1 WHERE (UPPER(vt0.c2) COLLATE RTRIM) ORDER BY ((json_array_length(vt1.c0, vt1.c1))<=(((((((((vt0.c0)OR(vt1.c1)))OR(vt1.c0)))AND(vt0.c2)))AND(vt1.c1)))), CAST(t1.c0 COLLATE BINARY AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((json_array_length(vt1.c0, vt1.c1))<=(((((((((vt0.c0)OR(vt1.c1)))OR(vt1.c0)))AND(vt0.c2)))AND(vt1.c1)))), CAST(t1.c0 COLLATE BINARY AS INTEGER)  NULLS LAST);
SELECT * FROM vt1, vt0, t1 WHERE (UPPER(vt0.c2) COLLATE RTRIM) ORDER BY ((json_array_length(vt1.c0, vt1.c1))<=(((((((((vt0.c0)OR(vt1.c1)))OR(vt1.c0)))AND(vt0.c2)))AND(vt1.c1)))), CAST(t1.c0 COLLATE BINARY AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((json_array_length(vt1.c0, vt1.c1))<=(((((((((vt0.c0)OR(vt1.c1)))OR(vt1.c0)))AND(vt0.c2)))AND(vt1.c1)))), CAST(t1.c0 COLLATE BINARY AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY ((((vt0.c2)AND(vt0.c1)))AND(((vt0.c1)|(vt0.c2)))), (- (CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)AND(vt0.c1)))AND(((vt0.c1)|(vt0.c2)))), (- (CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY ((((vt0.c2)AND(vt0.c1)))AND(((vt0.c1)|(vt0.c2)))), (- (CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)AND(vt0.c1)))AND(((vt0.c1)|(vt0.c2)))), (- (CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY ((((vt0.c2)AND(vt0.c1)))AND(((vt0.c1)|(vt0.c2)))), (- (CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (json_patch(CAST(vt0.c1 AS TEXT), CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((json_patch(CAST(vt0.c1 AS TEXT), CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_patch(CAST(vt0.c1 AS TEXT), CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((json_patch(CAST(vt0.c1 AS TEXT), CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1)) BETWEEN ((((vt0.c2) ISNULL))) AND ((CASE vt0.c2  WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((((vt0.c2) ISNULL))) AND ((CASE vt0.c2  WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c2 END)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1)) BETWEEN ((((vt0.c2) ISNULL))) AND ((CASE vt0.c2  WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((((vt0.c2) ISNULL))) AND ((CASE vt0.c2  WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c2 END)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1)) BETWEEN ((((vt0.c2) ISNULL))) AND ((CASE vt0.c2  WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c2 END))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2 COLLATE BINARY) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c2 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2 COLLATE BINARY) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c2 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2 COLLATE BINARY) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM DESC;
SELECT ALL * FROM vt1 FULL OUTER JOIN t1 ON ((((vt0.c0) IS TRUE))GLOB(((((((((t1.c0)AND(vt0.c0)))OR(t1.c0)))AND(vt1.c0)))AND(vt0.c0)))) LEFT OUTER JOIN vt0 ON (((vt1.c1)IS NOT(vt1.c1)) IN ()) WHERE (LOWER(INSTR(vt1.c1, t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(INSTR(vt1.c1, t1.c0))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON ((((vt0.c0) IS TRUE))GLOB(((((((((t1.c0)AND(vt0.c0)))OR(t1.c0)))AND(vt1.c0)))AND(vt0.c0)))) LEFT OUTER JOIN vt0 ON (((vt1.c1)IS NOT(vt1.c1)) IN ()));
SELECT ALL * FROM vt1 FULL OUTER JOIN t1 ON ((((vt0.c0) IS TRUE))GLOB(((((((((t1.c0)AND(vt0.c0)))OR(t1.c0)))AND(vt1.c0)))AND(vt0.c0)))) LEFT OUTER JOIN vt0 ON (((vt1.c1)IS NOT(vt1.c1)) IN ()) WHERE (LOWER(INSTR(vt1.c1, t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(INSTR(vt1.c1, t1.c0))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON ((((vt0.c0) IS TRUE))GLOB(((((((((t1.c0)AND(vt0.c0)))OR(t1.c0)))AND(vt1.c0)))AND(vt0.c0)))) LEFT OUTER JOIN vt0 ON (((vt1.c1)IS NOT(vt1.c1)) IN ()));
SELECT ALL COUNT(*) FROM t1, vt1 WHERE ((((((t1.c0))<=((t1.c0)))) NOT BETWEEN (((t1.c0) NOTNULL)) AND (1186977834))) ORDER BY ((((((((((((3.67320904E8)OR(vt1.c1)))AND(vt1.c1)))OR(((vt1.c0)<=(0.40210707526599265)))))AND(((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0) ISNULL))))AND(((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0))<=((t1.c0)))) NOT BETWEEN (((t1.c0) NOTNULL)) AND (1186977834))) IS TRUE)  as count FROM t1, vt1 ORDER BY ((((((((((((3.67320904E8)OR(vt1.c1)))AND(vt1.c1)))OR(((vt1.c0)<=(0.40210707526599265)))))AND(((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0) ISNULL))))AND(((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE ((((((t1.c0))<=((t1.c0)))) NOT BETWEEN (((t1.c0) NOTNULL)) AND (1186977834))) ORDER BY ((((((((((((3.67320904E8)OR(vt1.c1)))AND(vt1.c1)))OR(((vt1.c0)<=(0.40210707526599265)))))AND(((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0) ISNULL))))AND(((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0))<=((t1.c0)))) NOT BETWEEN (((t1.c0) NOTNULL)) AND (1186977834))) IS TRUE)  as count FROM t1, vt1 ORDER BY ((((((((((((3.67320904E8)OR(vt1.c1)))AND(vt1.c1)))OR(((vt1.c0)<=(0.40210707526599265)))))AND(((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0) ISNULL))))AND(((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE ((((((t1.c0))<=((t1.c0)))) NOT BETWEEN (((t1.c0) NOTNULL)) AND (1186977834))) ORDER BY ((((((((((((3.67320904E8)OR(vt1.c1)))AND(vt1.c1)))OR(((vt1.c0)<=(0.40210707526599265)))))AND(((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0) ISNULL))))AND(((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0))))  NULLS LAST;
SELECT * FROM t1 INNER JOIN vt1 ON ((vt1.c1 IN (vt1.c1)) IN ()) WHERE (CASE t1.c0  WHEN t1.c0 THEN vt1.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE t1.c0  WHEN t1.c0 THEN vt1.c0 END COLLATE BINARY) IS TRUE)  as count FROM t1 NOT INDEXED INNER JOIN vt1 ON ((vt1.c1 IN (vt1.c1)) IN ()));
SELECT * FROM t1 INNER JOIN vt1 ON ((vt1.c1 IN (vt1.c1)) IN ()) WHERE (CASE t1.c0  WHEN t1.c0 THEN vt1.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE t1.c0  WHEN t1.c0 THEN vt1.c0 END COLLATE BINARY) IS TRUE)  as count FROM t1 NOT INDEXED INNER JOIN vt1 ON ((vt1.c1 IN (vt1.c1)) IN ()));
SELECT * FROM t1 INNER JOIN vt1 ON ((vt1.c1 IN (vt1.c1)) IN ()) WHERE (CASE t1.c0  WHEN t1.c0 THEN vt1.c0 END COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1)*(vt0.c0))  WHEN vt0.c2 THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)*(vt0.c0))  WHEN vt0.c2 THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1)*(vt0.c0))  WHEN vt0.c2 THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)*(vt0.c0))  WHEN vt0.c2 THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1)*(vt0.c0))  WHEN vt0.c2 THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) COLLATE RTRIM) ORDER BY COALESCE(DISTINCT vt0.c0, NULL, vt0.c1, vt0.c1, vt0.c2, vt0.c2) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT vt0.c0, NULL, vt0.c1, vt0.c1, vt0.c2, vt0.c2) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) COLLATE RTRIM) ORDER BY COALESCE(DISTINCT vt0.c0, NULL, vt0.c1, vt0.c1, vt0.c2, vt0.c2) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT vt0.c0, NULL, vt0.c1, vt0.c1, vt0.c2, vt0.c2) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) COLLATE RTRIM) ORDER BY COALESCE(DISTINCT vt0.c0, NULL, vt0.c1, vt0.c1, vt0.c2, vt0.c2) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM vt0, t1 FULL OUTER JOIN vt1 ON (((((vt0.c1, vt0.c1, NULL, x'', t1.c0))<=((vt0.c0, t1.c0, t1.c0, vt0.c2, vt0.c0)))) NOT BETWEEN (((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c2))) AND (CASE WHEN vt0.c0 THEN vt1.c1 END)) WHERE ((NOT (CASE t1.c0  WHEN x'' THEN vt1.c1 ELSE 'B(ꠦ%F5wU/' END))) ORDER BY CASE CAST(NULL AS BLOB)  WHEN ((vt0.c1)*(vt0.c2)) THEN ((vt1.c1) IS FALSE) WHEN x'4598' THEN '' WHEN ((((((((vt1.c1)OR(x'')))AND(vt0.c0)))AND(vt0.c0)))OR(t1.c0)) THEN TRIM(vt1.c0) ELSE ((0Xffffffffd37ac024)=(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE t1.c0  WHEN x'' THEN vt1.c1 ELSE 'B(ꠦ%F5wU/' END))) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN vt1 ON (((((vt0.c1, vt0.c1, NULL, x'', t1.c0))<=((vt0.c0, t1.c0, t1.c0, vt0.c2, vt0.c0)))) NOT BETWEEN (((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c2))) AND (CASE WHEN vt0.c0 THEN vt1.c1 END)) ORDER BY CASE CAST(NULL AS BLOB)  WHEN ((vt0.c1)*(vt0.c2)) THEN ((vt1.c1) IS FALSE) WHEN x'4598' THEN '' WHEN ((((((((vt1.c1)OR(x'')))AND(vt0.c0)))AND(vt0.c0)))OR(t1.c0)) THEN TRIM(vt1.c0) ELSE ((0Xffffffffd37ac024)==(vt0.c0)) END);
SELECT ALL * FROM vt0, t1 FULL OUTER JOIN vt1 ON (((((vt0.c1, vt0.c1, NULL, x'', t1.c0))<=((vt0.c0, t1.c0, t1.c0, vt0.c2, vt0.c0)))) NOT BETWEEN (((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c2))) AND (CASE WHEN vt0.c0 THEN vt1.c1 END)) WHERE ((NOT (CASE t1.c0  WHEN x'' THEN vt1.c1 ELSE 'B(ꠦ%F5wU/' END))) ORDER BY CASE CAST(NULL AS BLOB)  WHEN ((vt0.c1)*(vt0.c2)) THEN ((vt1.c1) IS FALSE) WHEN x'4598' THEN '' WHEN ((((((((vt1.c1)OR(x'')))AND(vt0.c0)))AND(vt0.c0)))OR(t1.c0)) THEN TRIM(vt1.c0) ELSE ((0Xffffffffd37ac024)=(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE t1.c0  WHEN x'' THEN vt1.c1 ELSE 'B(ꠦ%F5wU/' END))) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN vt1 ON (((((vt0.c1, vt0.c1, NULL, x'', t1.c0))<=((vt0.c0, t1.c0, t1.c0, vt0.c2, vt0.c0)))) NOT BETWEEN (((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c2))) AND (CASE WHEN vt0.c0 THEN vt1.c1 END)) ORDER BY CASE CAST(NULL AS BLOB)  WHEN ((vt0.c1)*(vt0.c2)) THEN ((vt1.c1) IS FALSE) WHEN x'4598' THEN '' WHEN ((((((((vt1.c1)OR(x'')))AND(vt0.c0)))AND(vt0.c0)))OR(t1.c0)) THEN TRIM(vt1.c0) ELSE ((0Xffffffffd37ac024)==(vt0.c0)) END);
SELECT ALL * FROM vt0, t1 FULL OUTER JOIN vt1 ON (((((vt0.c1, vt0.c1, NULL, x'', t1.c0))<=((vt0.c0, t1.c0, t1.c0, vt0.c2, vt0.c0)))) NOT BETWEEN (((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c2))) AND (CASE WHEN vt0.c0 THEN vt1.c1 END)) WHERE ((NOT (CASE t1.c0  WHEN x'' THEN vt1.c1 ELSE 'B(ꠦ%F5wU/' END))) ORDER BY CASE CAST(NULL AS BLOB)  WHEN ((vt0.c1)*(vt0.c2)) THEN ((vt1.c1) IS FALSE) WHEN x'4598' THEN '' WHEN ((((((((vt1.c1)OR(x'')))AND(vt0.c0)))AND(vt0.c0)))OR(t1.c0)) THEN TRIM(vt1.c0) ELSE ((0Xffffffffd37ac024)=(vt0.c0)) END;
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((vt0.c0)/((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)/((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((NULL)))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((vt0.c0)/((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)/((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((NULL)))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((vt0.c0)/((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((NULL))))));
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (CASE WHEN (((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) THEN vt1.c0 COLLATE NOCASE ELSE (t1.c0 IN ()) END) ORDER BY TRIM(t1.c0 COLLATE NOCASE, vt1.c1 COLLATE BINARY) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) THEN vt1.c0 COLLATE NOCASE ELSE (t1.c0 IN ()) END) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY TRIM(t1.c0 COLLATE NOCASE, vt1.c1 COLLATE BINARY) DESC);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (CASE WHEN (((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) THEN vt1.c0 COLLATE NOCASE ELSE (t1.c0 IN ()) END) ORDER BY TRIM(t1.c0 COLLATE NOCASE, vt1.c1 COLLATE BINARY) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) THEN vt1.c0 COLLATE NOCASE ELSE (t1.c0 IN ()) END) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY TRIM(t1.c0 COLLATE NOCASE, vt1.c1 COLLATE BINARY) DESC);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (CASE WHEN (((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) THEN vt1.c0 COLLATE NOCASE ELSE (t1.c0 IN ()) END) ORDER BY TRIM(t1.c0 COLLATE NOCASE, vt1.c1 COLLATE BINARY) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c2)OR(((((((((vt1.c0)OR(vt0.c2)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c2))))) ORDER BY ((((vt0.c0)<=(vt0.c1)))AND(CASE WHEN vt0.c2 THEN vt1.c1 ELSE vt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c2)OR(((((((((vt1.c0)OR(vt0.c2)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c2))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)<=(vt0.c1)))AND(CASE WHEN vt0.c2 THEN vt1.c1 ELSE vt0.c2 END)) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c2)OR(((((((((vt1.c0)OR(vt0.c2)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c2))))) ORDER BY ((((vt0.c0)<=(vt0.c1)))AND(CASE WHEN vt0.c2 THEN vt1.c1 ELSE vt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c2)OR(((((((((vt1.c0)OR(vt0.c2)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c2))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)<=(vt0.c1)))AND(CASE WHEN vt0.c2 THEN vt1.c1 ELSE vt0.c2 END)) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c2)OR(((((((((vt1.c0)OR(vt0.c2)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c2))))) ORDER BY ((((vt0.c0)<=(vt0.c1)))AND(CASE WHEN vt0.c2 THEN vt1.c1 ELSE vt0.c2 END)) ASC;
SELECT * FROM vt0, t1 WHERE (NULL) ORDER BY ((((vt0.c2)-(t1.c0)))LIKE(((vt0.c0)>>(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((vt0.c2)-(t1.c0)))LIKE(((vt0.c0)>>(t1.c0))))  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (NULL) ORDER BY ((((vt0.c2)-(t1.c0)))LIKE(((vt0.c0)>>(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((vt0.c2)-(t1.c0)))LIKE(((vt0.c0)>>(t1.c0))))  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (NULL) ORDER BY ((((vt0.c2)-(t1.c0)))LIKE(((vt0.c0)>>(t1.c0))))  NULLS LAST;
SELECT * FROM vt1 WHERE (CAST(((vt1.c1)*(vt1.c1)) AS TEXT)) ORDER BY ((((vt1.c1)<=(vt1.c0)))*(vt1.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)*(vt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)<=(vt1.c0)))*(vt1.c1)) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(((vt1.c1)*(vt1.c1)) AS TEXT)) ORDER BY ((((vt1.c1)<=(vt1.c0)))*(vt1.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)*(vt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)<=(vt1.c0)))*(vt1.c1)) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(((vt1.c1)*(vt1.c1)) AS TEXT)) ORDER BY ((((vt1.c1)<=(vt1.c0)))*(vt1.c1)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((((~ (vt1.c0))) BETWEEN ((vt1.c1 IN (vt1.c1))) AND (((vt1.c1)-(t1.c0))))) ORDER BY ABS(((((vt1.c0)OR(vt1.c0)))OR(NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) BETWEEN ((vt1.c1 IN (vt1.c1))) AND (((vt1.c1)-(t1.c0))))) IS TRUE)  as count FROM vt1, t1 ORDER BY ABS(((((vt1.c0)OR(vt1.c0)))OR(NULL))) ASC);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((((~ (vt1.c0))) BETWEEN ((vt1.c1 IN (vt1.c1))) AND (((vt1.c1)-(t1.c0))))) ORDER BY ABS(((((vt1.c0)OR(vt1.c0)))OR(NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) BETWEEN ((vt1.c1 IN (vt1.c1))) AND (((vt1.c1)-(t1.c0))))) IS TRUE)  as count FROM vt1, t1 ORDER BY ABS(((((vt1.c0)OR(vt1.c0)))OR(NULL))) ASC);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((((~ (vt1.c0))) BETWEEN ((vt1.c1 IN (vt1.c1))) AND (((vt1.c1)-(t1.c0))))) ORDER BY ABS(((((vt1.c0)OR(vt1.c0)))OR(NULL))) ASC;
SELECT ALL * FROM t1 WHERE (((t1.c0)|(t1.c0))) ORDER BY t1.c0  NULLS LAST, CAST(((t1.c0)<>(t1.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((t1.c0)|(t1.c0))) IS TRUE)  as count FROM t1 ORDER BY t1.c0  NULLS LAST, CAST(((t1.c0)<>(t1.c0)) AS INTEGER));
SELECT ALL * FROM t1 WHERE (((t1.c0)|(t1.c0))) ORDER BY t1.c0  NULLS LAST, CAST(((t1.c0)<>(t1.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((t1.c0)|(t1.c0))) IS TRUE)  as count FROM t1 ORDER BY t1.c0  NULLS LAST, CAST(((t1.c0)<>(t1.c0)) AS INTEGER));
SELECT ALL * FROM t1 WHERE (((t1.c0)|(t1.c0))) ORDER BY t1.c0  NULLS LAST, CAST(((t1.c0)<>(t1.c0)) AS INTEGER);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT ALL * FROM vt1, t1 WHERE (-1761504634);
SELECT SUM(count) FROM (SELECT ALL ((-1761504634) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE (-1761504634);
SELECT SUM(count) FROM (SELECT ALL ((-1761504634) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE (-1761504634);
SELECT ALL * FROM vt1 CROSS JOIN t1 ON ((('1984460366')>=(vt1.c1)) IN ()) WHERE ((- ((NOT (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON ((('1984460366')>=(vt1.c1)) IN ()));
SELECT ALL * FROM vt1 CROSS JOIN t1 ON ((('1984460366')>=(vt1.c1)) IN ()) WHERE ((- ((NOT (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON ((('1984460366')>=(vt1.c1)) IN ()));
SELECT ALL * FROM vt1 CROSS JOIN t1 ON ((('1984460366')>=(vt1.c1)) IN ()) WHERE ((- ((NOT (vt1.c1)))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON x'' WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM t1 NOT INDEXED FULL OUTER JOIN vt1 ON x'');
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON x'' WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM t1 NOT INDEXED FULL OUTER JOIN vt1 ON x'');
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON x'' WHERE (vt1.c0 COLLATE BINARY);
SELECT * FROM vt0, t1 WHERE (vt0.c1) ORDER BY HEX(DISTINCT (+ (vt0.c0))) DESC, CAST(((((((((((((((((0Xffffffffc3a95081)AND(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(0.3892169106629695)))OR(vt0.c0)))AND(t1.c0)))AND(vt0.c0)))AND(vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t1 ORDER BY HEX(DISTINCT (+ (vt0.c0))) DESC, CAST(((((((((((((((((0Xffffffffc3a95081)AND(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(0.3892169106629695)))OR(vt0.c0)))AND(t1.c0)))AND(vt0.c0)))AND(vt0.c0)) AS INTEGER)  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (vt0.c1) ORDER BY HEX(DISTINCT (+ (vt0.c0))) DESC, CAST(((((((((((((((((0Xffffffffc3a95081)AND(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(0.3892169106629695)))OR(vt0.c0)))AND(t1.c0)))AND(vt0.c0)))AND(vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t1 ORDER BY HEX(DISTINCT (+ (vt0.c0))) DESC, CAST(((((((((((((((((0Xffffffffc3a95081)AND(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(0.3892169106629695)))OR(vt0.c0)))AND(t1.c0)))AND(vt0.c0)))AND(vt0.c0)) AS INTEGER)  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (vt0.c1) ORDER BY HEX(DISTINCT (+ (vt0.c0))) DESC, CAST(((((((((((((((((0Xffffffffc3a95081)AND(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(0.3892169106629695)))OR(vt0.c0)))AND(t1.c0)))AND(vt0.c0)))AND(vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT * FROM t1 WHERE ((((((('Mu~k里SzDN') ISNULL))AND(CAST(t1.c0 AS INTEGER))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE 0.8464590831763814 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((('Mu~k里SzDN') ISNULL))AND(CAST(t1.c0 AS INTEGER))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE 0.8464590831763814 END))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((('Mu~k里SzDN') ISNULL))AND(CAST(t1.c0 AS INTEGER))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE 0.8464590831763814 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((('Mu~k里SzDN') ISNULL))AND(CAST(t1.c0 AS INTEGER))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE 0.8464590831763814 END))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((('Mu~k里SzDN') ISNULL))AND(CAST(t1.c0 AS INTEGER))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE 0.8464590831763814 END)));
SELECT * FROM vt1 WHERE (((((~ (vt1.c0))))>((((vt1.c1)|(vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((~ (vt1.c0))))>((((vt1.c1)|(vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((~ (vt1.c0))))>((((vt1.c1)|(vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((~ (vt1.c0))))>((((vt1.c1)|(vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((~ (vt1.c0))))>((((vt1.c1)|(vt1.c1))))));
SELECT ALL * FROM vt1, vt0, t1 WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((t1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (CASE vt1.c0  WHEN vt0.c2 THEN 0.9312045612477466 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((t1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (CASE vt1.c0  WHEN vt0.c2 THEN 0.9312045612477466 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((t1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (CASE vt1.c0  WHEN vt0.c2 THEN 0.9312045612477466 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((t1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (CASE vt1.c0  WHEN vt0.c2 THEN 0.9312045612477466 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((t1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (CASE vt1.c0  WHEN vt0.c2 THEN 0.9312045612477466 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 END)));
SELECT COUNT(*) FROM vt1, t1 CROSS JOIN vt0 ON ((((vt0.c1)<=(t1.c0))) ISNULL) WHERE (((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)) COLLATE NOCASE) ORDER BY ((CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END)|(CASE vt1.c0  WHEN t1.c0 THEN vt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 NOT INDEXED, t1 CROSS JOIN vt0 ON ((((vt0.c1)<=(t1.c0))) ISNULL) ORDER BY ((CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END)|(CASE vt1.c0  WHEN t1.c0 THEN vt0.c2 END)) DESC);
SELECT COUNT(*) FROM vt1, t1 CROSS JOIN vt0 ON ((((vt0.c1)<=(t1.c0))) ISNULL) WHERE (((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)) COLLATE NOCASE) ORDER BY ((CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END)|(CASE vt1.c0  WHEN t1.c0 THEN vt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 NOT INDEXED, t1 CROSS JOIN vt0 ON ((((vt0.c1)<=(t1.c0))) ISNULL) ORDER BY ((CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END)|(CASE vt1.c0  WHEN t1.c0 THEN vt0.c2 END)) DESC);
SELECT COUNT(*) FROM vt1, t1 CROSS JOIN vt0 ON ((((vt0.c1)<=(t1.c0))) ISNULL) WHERE (((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)) COLLATE NOCASE) ORDER BY ((CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END)|(CASE vt1.c0  WHEN t1.c0 THEN vt0.c2 END)) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((((vt0.c1 IN ())))>((((((vt1.c1)AND(vt0.c1)))AND(vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN ())))>((((((vt1.c1)AND(vt0.c1)))AND(vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((((vt0.c1 IN ())))>((((((vt1.c1)AND(vt0.c1)))AND(vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN ())))>((((((vt1.c1)AND(vt0.c1)))AND(vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((((vt0.c1 IN ())))>((((((vt1.c1)AND(vt0.c1)))AND(vt1.c1))))));
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CASE ((NULL)*(vt1.c0))  WHEN CAST(vt1.c1 AS NUMERIC) THEN ((vt0.c2) BETWEEN ('tz*6놂h0S') AND (vt0.c1)) ELSE ABS(DISTINCT 0.8537745854273396) END);
SELECT SUM(count) FROM (SELECT ((CASE ((NULL)*(vt1.c0))  WHEN CAST(vt1.c1 AS NUMERIC) THEN ((vt0.c2) BETWEEN ('tz*6놂h0S') AND (vt0.c1)) ELSE ABS(DISTINCT 0.8537745854273396) END) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CASE ((NULL)*(vt1.c0))  WHEN CAST(vt1.c1 AS NUMERIC) THEN ((vt0.c2) BETWEEN ('tz*6놂h0S') AND (vt0.c1)) ELSE ABS(DISTINCT 0.8537745854273396) END);
SELECT SUM(count) FROM (SELECT ((CASE ((NULL)*(vt1.c0))  WHEN CAST(vt1.c1 AS NUMERIC) THEN ((vt0.c2) BETWEEN ('tz*6놂h0S') AND (vt0.c1)) ELSE ABS(DISTINCT 0.8537745854273396) END) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CASE ((NULL)*(vt1.c0))  WHEN CAST(vt1.c1 AS NUMERIC) THEN ((vt0.c2) BETWEEN ('tz*6놂h0S') AND (vt0.c1)) ELSE ABS(DISTINCT 0.8537745854273396) END);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((((NOT (t1.c0))) NOT BETWEEN (199542079) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c0))) NOT BETWEEN (199542079) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((((NOT (t1.c0))) NOT BETWEEN (199542079) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c0))) NOT BETWEEN (199542079) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((((NOT (t1.c0))) NOT BETWEEN (199542079) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT * FROM vt1, vt0 WHERE (CASE WHEN vt0.c1 THEN ((((((((vt0.c2)AND(vt1.c1)))AND(vt1.c1)))AND(vt0.c2)))AND(vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c2)==(vt0.c2)) WHEN CASE vt0.c2  WHEN vt1.c1 THEN vt0.c0 END THEN CASE vt1.c1  WHEN 0X723c6a87 THEN vt0.c2 END ELSE 1580161301 END) ORDER BY (- (load_extension(NULL))), (((vt1.c1) BETWEEN (vt0.c2) AND (vt0.c0)) IN ()) DESC  NULLS LAST, vt0.c0, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN ((((((((vt0.c2)AND(vt1.c1)))AND(vt1.c1)))AND(vt0.c2)))AND(vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c2)==(vt0.c2)) WHEN CASE vt0.c2  WHEN vt1.c1 THEN vt0.c0 END THEN CASE vt1.c1  WHEN 0X723c6a87 THEN vt0.c2 END ELSE 1580161301 END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (load_extension(NULL))), (((vt1.c1) BETWEEN (vt0.c2) AND (vt0.c0)) IN ()) DESC  NULLS LAST, vt0.c0, x'' DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN vt0.c1 THEN ((((((((vt0.c2)AND(vt1.c1)))AND(vt1.c1)))AND(vt0.c2)))AND(vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c2)==(vt0.c2)) WHEN CASE vt0.c2  WHEN vt1.c1 THEN vt0.c0 END THEN CASE vt1.c1  WHEN 0X723c6a87 THEN vt0.c2 END ELSE 1580161301 END) ORDER BY (- (load_extension(NULL))), (((vt1.c1) BETWEEN (vt0.c2) AND (vt0.c0)) IN ()) DESC  NULLS LAST, vt0.c0, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN ((((((((vt0.c2)AND(vt1.c1)))AND(vt1.c1)))AND(vt0.c2)))AND(vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c2)==(vt0.c2)) WHEN CASE vt0.c2  WHEN vt1.c1 THEN vt0.c0 END THEN CASE vt1.c1  WHEN 0X723c6a87 THEN vt0.c2 END ELSE 1580161301 END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (load_extension(NULL))), (((vt1.c1) BETWEEN (vt0.c2) AND (vt0.c0)) IN ()) DESC  NULLS LAST, vt0.c0, x'' DESC  NULLS LAST);
SELECT * FROM vt0, vt1 INDEXED BY i90 WHERE (DATE(vt1.c0 COLLATE NOCASE, ((vt1.c0)>(vt0.c1)), ((vt0.c0)>=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((DATE(vt1.c0 COLLATE NOCASE, ((vt1.c0)>(vt0.c1)), ((vt0.c0)>=(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i90);
SELECT * FROM vt0, vt1 INDEXED BY i90 WHERE (DATE(vt1.c0 COLLATE NOCASE, ((vt1.c0)>(vt0.c1)), ((vt0.c0)>=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((DATE(vt1.c0 COLLATE NOCASE, ((vt1.c0)>(vt0.c1)), ((vt0.c0)>=(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i90);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) AS REAL)) ORDER BY (NOT (0.8450846600430401)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (0.8450846600430401)) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) AS REAL)) ORDER BY (NOT (0.8450846600430401)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (0.8450846600430401)) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) AS REAL)) ORDER BY (NOT (0.8450846600430401)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 LEFT OUTER JOIN vt1 ON ((vt0.c1) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c1 END) AND (vt0.c2)) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN vt1 ON ((vt0.c1) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c1 END) AND (vt0.c2)));
SELECT COUNT(*) FROM t1, vt0 LEFT OUTER JOIN vt1 ON ((vt0.c1) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c1 END) AND (vt0.c2)) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN vt1 ON ((vt0.c1) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c1 END) AND (vt0.c2)));
SELECT COUNT(*) FROM t1, vt0 LEFT OUTER JOIN vt1 ON ((vt0.c1) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c1 END) AND (vt0.c2)) WHERE (t1.c0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (NULLIF(DISTINCT ((vt1.c1) ISNULL), (+ (vt1.c1))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((vt1.c1) ISNULL), (+ (vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (NULLIF(DISTINCT ((vt1.c1) ISNULL), (+ (vt1.c1))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((vt1.c1) ISNULL), (+ (vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (NULLIF(DISTINCT ((vt1.c1) ISNULL), (+ (vt1.c1))));
SELECT ALL COUNT(*) FROM t1 WHERE ('U?KxO䪙Kj[') ORDER BY LTRIM(CASE t1.c0  WHEN t1.c0 THEN 'zt' ELSE '-1307763732' END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('U?KxO䪙Kj[') IS TRUE)  as count FROM t1 ORDER BY LTRIM(CASE t1.c0  WHEN t1.c0 THEN 'zt' ELSE '-1307763732' END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ('U?KxO䪙Kj[') ORDER BY LTRIM(CASE t1.c0  WHEN t1.c0 THEN 'zt' ELSE '-1307763732' END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('U?KxO䪙Kj[') IS TRUE)  as count FROM t1 ORDER BY LTRIM(CASE t1.c0  WHEN t1.c0 THEN 'zt' ELSE '-1307763732' END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ('U?KxO䪙Kj[') ORDER BY LTRIM(CASE t1.c0  WHEN t1.c0 THEN 'zt' ELSE '-1307763732' END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC;
SELECT COUNT(*) FROM t1, vt1 WHERE (((vt1.c1)/(((t1.c0)-(vt1.c1))))) ORDER BY (('-1757315158') NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)/(((t1.c0)-(vt1.c1))))) IS TRUE)  as count FROM t1, vt1 ORDER BY (('-1757315158') NOTNULL));
SELECT COUNT(*) FROM t1, vt1 WHERE (((vt1.c1)/(((t1.c0)-(vt1.c1))))) ORDER BY (('-1757315158') NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)/(((t1.c0)-(vt1.c1))))) IS TRUE)  as count FROM t1, vt1 ORDER BY (('-1757315158') NOTNULL));
SELECT COUNT(*) FROM t1, vt1 WHERE (((vt1.c1)/(((t1.c0)-(vt1.c1))))) ORDER BY (('-1757315158') NOTNULL);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER));
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((((vt0.c0)AND(vt0.c2)))OR(vt1.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)AND(vt0.c2)))OR(vt1.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((((vt0.c0)AND(vt0.c2)))OR(vt1.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)AND(vt0.c2)))OR(vt1.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((((vt0.c0)AND(vt0.c2)))OR(vt1.c0)) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM t1, vt1 INNER JOIN vt0 ON CASE vt0.c1  WHEN t1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 END COLLATE BINARY WHERE ((((((('-1363282781')*(vt0.c2)))AND((((vt1.c1))<=((vt1.c0))))))OR(((vt0.c2)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((('-1363282781')*(vt0.c2)))AND((((vt1.c1))<=((vt1.c0))))))OR(((vt0.c2)<=(vt0.c0))))) IS TRUE)  as count FROM t1, vt1 INNER JOIN vt0 ON CASE vt0.c1  WHEN t1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 END COLLATE BINARY);
SELECT ALL * FROM t1, vt1 INNER JOIN vt0 ON CASE vt0.c1  WHEN t1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 END COLLATE BINARY WHERE ((((((('-1363282781')*(vt0.c2)))AND((((vt1.c1))<=((vt1.c0))))))OR(((vt0.c2)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((('-1363282781')*(vt0.c2)))AND((((vt1.c1))<=((vt1.c0))))))OR(((vt0.c2)<=(vt0.c0))))) IS TRUE)  as count FROM t1, vt1 INNER JOIN vt0 ON CASE vt0.c1  WHEN t1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 END COLLATE BINARY);
SELECT ALL * FROM t1, vt1 INNER JOIN vt0 ON CASE vt0.c1  WHEN t1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 END COLLATE BINARY WHERE ((((((('-1363282781')*(vt0.c2)))AND((((vt1.c1))<=((vt1.c0))))))OR(((vt0.c2)<=(vt0.c0)))));
SELECT ALL * FROM t1 WHERE (json_quote(t1.c0)) ORDER BY CAST(((0.44322326927711164) IS FALSE) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((json_quote(t1.c0)) IS TRUE)  as count FROM t1 ORDER BY CAST(((0.44322326927711164) IS FALSE) AS BLOB) ASC);
SELECT ALL * FROM t1 WHERE (json_quote(t1.c0)) ORDER BY CAST(((0.44322326927711164) IS FALSE) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((json_quote(t1.c0)) IS TRUE)  as count FROM t1 ORDER BY CAST(((0.44322326927711164) IS FALSE) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i90, t1 WHERE (CASE ((vt0.c1) NOT BETWEEN (t1.c0) AND (446934975))  WHEN ((vt0.c0) ISNULL) THEN (NOT (vt0.c1)) WHEN ((t1.c0)-(t1.c0)) THEN CAST(vt0.c1 AS BLOB) WHEN NULL THEN ABS(t1.c0) END) ORDER BY CAST(vt0.c2 AS BLOB) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) NOT BETWEEN (t1.c0) AND (446934975))  WHEN ((vt0.c0) ISNULL) THEN (NOT (vt0.c1)) WHEN ((t1.c0)-(t1.c0)) THEN CAST(vt0.c1 AS BLOB) WHEN NULL THEN ABS(t1.c0) END) IS TRUE)  as count FROM vt0 INDEXED BY i90, t1 ORDER BY CAST(vt0.c2 AS BLOB) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i90, t1 WHERE (CASE ((vt0.c1) NOT BETWEEN (t1.c0) AND (446934975))  WHEN ((vt0.c0) ISNULL) THEN (NOT (vt0.c1)) WHEN ((t1.c0)-(t1.c0)) THEN CAST(vt0.c1 AS BLOB) WHEN NULL THEN ABS(t1.c0) END) ORDER BY CAST(vt0.c2 AS BLOB) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) NOT BETWEEN (t1.c0) AND (446934975))  WHEN ((vt0.c0) ISNULL) THEN (NOT (vt0.c1)) WHEN ((t1.c0)-(t1.c0)) THEN CAST(vt0.c1 AS BLOB) WHEN NULL THEN ABS(t1.c0) END) IS TRUE)  as count FROM vt0 INDEXED BY i90, t1 ORDER BY CAST(vt0.c2 AS BLOB) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (TYPEOF(((vt0.c1) NOT NULL))) ORDER BY (((vt0.c0 IN ())) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c1) NOT NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (TYPEOF(((vt0.c1) NOT NULL))) ORDER BY (((vt0.c0 IN ())) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c1) NOT NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (TYPEOF(((vt0.c1) NOT NULL))) ORDER BY (((vt0.c0 IN ())) ISNULL)  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((vt0.c1)AND(t1.c0)))AND(vt0.c0))) NOTNULL) LEFT OUTER JOIN t1 ON json_valid(((t1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0))) WHERE (0.07167317070507784);
SELECT SUM(count) FROM (SELECT ALL ((0.07167317070507784) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((vt0.c1)AND(t1.c0)))AND(vt0.c0))) NOTNULL) LEFT OUTER JOIN t1 ON json_valid(((t1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((vt0.c1)AND(t1.c0)))AND(vt0.c0))) NOTNULL) LEFT OUTER JOIN t1 ON json_valid(((t1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0))) WHERE (0.07167317070507784);
SELECT SUM(count) FROM (SELECT ALL ((0.07167317070507784) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((vt0.c1)AND(t1.c0)))AND(vt0.c0))) NOTNULL) LEFT OUTER JOIN t1 ON json_valid(((t1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((vt0.c1)AND(t1.c0)))AND(vt0.c0))) NOTNULL) LEFT OUTER JOIN t1 ON json_valid(((t1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0))) WHERE (0.07167317070507784);
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c2)*(vt0.c2)) IN (((vt0.c0) IS TRUE)))) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)*(vt0.c2)) IN (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM t1, vt0 ORDER BY t1.c0  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c2)*(vt0.c2)) IN (((vt0.c0) IS TRUE)))) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)*(vt0.c2)) IN (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM t1, vt0 ORDER BY t1.c0  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c2)*(vt0.c2)) IN (((vt0.c0) IS TRUE)))) ORDER BY t1.c0  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c2)==('''21{En')))IS((((vt0.c2))!=((vt0.c0)))))) ORDER BY (~ (vt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)==('''21{En')))IS((((vt0.c2))<>((vt0.c0)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY (~ (vt0.c2)));
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c2)==('''21{En')))IS((((vt0.c2))!=((vt0.c0)))))) ORDER BY (~ (vt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)==('''21{En')))IS((((vt0.c2))<>((vt0.c0)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY (~ (vt0.c2)));
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c2)==('''21{En')))IS((((vt0.c2))!=((vt0.c0)))))) ORDER BY (~ (vt0.c2));
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS TEXT)) ORDER BY '侒tbH}szD'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY '侒tbH}szD'  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS TEXT)) ORDER BY '侒tbH}szD'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY '侒tbH}szD'  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS TEXT)) ORDER BY '侒tbH}szD'  NULLS FIRST;
