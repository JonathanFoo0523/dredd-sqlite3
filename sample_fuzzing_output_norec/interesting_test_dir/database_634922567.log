-- Time: 2024/06/11 12:50:37
-- Database: database67
-- Database version: 3.40.0
-- seed value: 634922567
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 TEXT , c1 BLOB , c2 TEXT , c3 INT , c4 REAL ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, c1, c2, order=ASC); -- 1ms;
UPDATE OR IGNORE vt1 SET c2='!Z', c1=0.79472423231133 WHERE x'f66a'; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '7378'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1337650065);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 3ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -543330437);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 399613962); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1337650065,6');\n; -- 0ms;
UPDATE t0 SET (c4, c2)=(0.7029626948288044, NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 10); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1257409121); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 410722224); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 0ms;
REINDEX  vt1; -- 0ms;
CREATE INDEX i26 ON t0((('D\bC5EHyQ')IS NOT((c0 IN ()))) COLLATE RTRIM DESC,((((((((c1 COLLATE BINARY)AND(c0)))AND(CAST(c1 AS NUMERIC))))AND(((((((((c1)AND('1337650065')))AND(c3)))AND(c3)))OR('gC')))))AND(((c2)AND(c0)))) COLLATE NOCASE ASC,CASE WHEN (c4 IN ()) THEN CASE x'1fa1'  WHEN c3 THEN c0 END ELSE CASE c3  WHEN c3 THEN c2 ELSE c0 END END COLLATE RTRIM,CASE WHEN ((c0)==(NULL)) THEN CAST(c4 AS BLOB) END COLLATE NOCASE DESC,x'cfcc' COLLATE RTRIM COLLATE NOCASE ASC) WHERE ((c3 COLLATE RTRIM)=((c3 IN (x'')))); -- 0ms;
INSERT OR FAIL INTO t0(c1, c0) VALUES ('-257605432', 't%dX^aVQ\n)9'); -- 0ms;
INSERT OR IGNORE INTO t0(c4, c2, c1, c0, c3) VALUES ('\n}', NULL, '*[', x'', 'I⒅'), (NULL, 1731588107, NULL, x'', NULL), (NULL, NULL, NULL, '1337650065', 'I⒅'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1337650065,14');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1128541587); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -778361952);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1601122154,10');\n; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO t0 VALUES ('-257605432', NULL, NULL, '', x''), (x'', x'', x'', x'', 0X55584ded), (0.08145288801458783, NULL, NULL, 'Kl', NULL); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt1 SET c2=0.9180332050946152, c0=x'9600' WHERE ((((x''))<=((vt1.c2))) IN ()); -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL); -- 0ms;
ANALYZE; -- 1ms;
PRAGMA incremental_vacuum(-133343283); -- 0ms;
ANALYZE t0; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (0X6735f00b); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL), ('-58379346'), (NULL), (NULL), ('261652964'); -- 0ms;
ANALYZE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1337650065') NOT BETWEEN ('u8n') AND (0xffffffffbc2d4e21)) IN (((0Xfffffffff80d57cd) IS FALSE))); -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (x'', x'', '-939478366'), (x'', 0Xffffffffbfe88ade, NULL), (0.8023416309546445, 0.012441161982416404, ((('0.9180332050946152') NOT BETWEEN ('-456854576') AND (0X69c7001e)) IN ())); -- 0ms;
INSERT OR REPLACE INTO t0(c4, c1, c2, c3, c0) VALUES (0.08145288801458783, NULL, x'', NULL, 1637253244); -- 0ms;
UPDATE t0 SET (c4, c1)=(NULL, '-58379346') WHERE (((t0.c3)) BETWEEN ((((t0.c0)&(t0.c0)))) AND ((((t0.c3) IS TRUE)))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '40833'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
REINDEX  vt1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c4, c3, c1, c2) VALUES ('''', NULL, 1637253244, 'db39ﺎY', 9.9543903E7); -- 0ms;
UPDATE vt1 SET c2=0.032065864586990345; -- 1ms;
UPDATE OR IGNORE t0 SET (c2)=(0.4542732795246839) WHERE UNLIKELY(DISTINCT ((t0.c0) ISNULL)); -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c3, c1, c0) VALUES ('聼%*,wyU', x'b1fb', 0.5786916494422684), (0.5834679890632353, 1.431850477E9, 1637253244), (x'', 0xffffffffed2a2170, 0.5786916494422684); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (x''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2000858253); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-149148331,5');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '17465'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x'ef2b'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1852728148); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 216324753); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '26996'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '34894'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR ABORT INTO t0(c2, c0, c1, c4) VALUES ('1637253244', x'03c7', x'', '-1892572888'); -- 0ms;
DELETE FROM vt1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE t0 SET (c1)=('0.8023416309546445'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR ABORT vt1 SET (c2)=('An\na\n2'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET c3=x'6daf'; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'a9e7') WHERE (((((t0.c0 IN (t0.c2)))OR(((t0.c3) BETWEEN (x'') AND (t0.c2)))))AND((NOT (t0.c3)))); -- 0ms;
UPDATE OR IGNORE vt1 SET (c1)=(1431850477); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4, c5, c6); -- 1ms;
UPDATE OR IGNORE t0 SET c0='' WHERE '9<'; -- 0ms;
ANALYZE; -- 0ms;
VACUUM temp; -- 0ms;
REINDEX  vt1; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '28437'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 644717336); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
PRAGMA default_cache_size; -- 0ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr2 AFTER UPDATE ON t0 FOR EACH ROW  WHEN ((((CASE WHEN t0.c3 THEN t0.c4 WHEN t0.c2 THEN NULL WHEN t0.c3 THEN t0.c3 END)AND(json_patch(t0.c2, t0.c0))))OR((((t0.c1))>=((t0.c0))))) BEGIN UPDATE OR IGNORE rt0 SET c2=NULL;END; -- 0ms;
UPDATE t0 SET (c2)=(NULL); -- 1ms;
UPDATE OR ABORT t0 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(-1.137881567E9) WHERE ((((((rt0.c2) NOT NULL))AND(TYPEOF(rt0.c2))))AND(x'')); -- 0ms;
INSERT OR IGNORE INTO vt1(c2, c0, c1) VALUES (0.010701733919566414, 0.46245242051515056, 0.34161447469901896); -- 1ms;
UPDATE vt1 SET c1=x'', c2=x'', c0=-1.075279138E9 WHERE ((vt1.c0) NOT NULL) COLLATE BINARY; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE rt0 SET c3=x''; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=1'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 3ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '49792'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 4); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1637253244,7');\n; -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c2) VALUES (938848529, 0.08145288801458783); -- 0ms;
UPDATE OR FAIL vt1 SET c2=NULL; -- 1ms;
VACUUM main; -- 17ms;
INSERT OR ABORT INTO vt1(c2, c0) VALUES (0.032065864586990345, '-1124022682'); -- 2ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((COALESCE(rt0.c4, t0.c2))OR(((rt0.c1)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c4, t0.c2))OR(((rt0.c1)&(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((COALESCE(rt0.c4, t0.c2))OR(((rt0.c1)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c4, t0.c2))OR(((rt0.c1)&(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((COALESCE(rt0.c4, t0.c2))OR(((rt0.c1)&(rt0.c1)))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON CAST((((rt0.c5))<((rt0.c4))) AS BLOB) WHERE (((rt0.c0)!=(vt1.c0)) COLLATE NOCASE) ORDER BY '' ASC  NULLS LAST, (((rt0.c1)) BETWEEN (((((rt0.c3, vt1.c2, vt1.c2)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c5)) AND ((rt0.c1, vt1.c0, rt0.c0))))) AND ((((((rt0.c4)AND(rt0.c3)))AND(rt0.c6))))), NULLIF(DISTINCT json_insert(vt1.c2, rt0.c3, rt0.c1, vt1.c2, rt0.c1), (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c6)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<>(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST((((rt0.c5))<((rt0.c4))) AS BLOB) ORDER BY '' ASC  NULLS LAST, (((rt0.c1)) BETWEEN (((((rt0.c3, vt1.c2, vt1.c2)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c5)) AND ((rt0.c1, vt1.c0, rt0.c0))))) AND ((((((rt0.c4)AND(rt0.c3)))AND(rt0.c6))))), NULLIF(DISTINCT json_insert(vt1.c2, rt0.c3, rt0.c1, vt1.c2, rt0.c1), (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c6)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON CAST((((rt0.c5))<((rt0.c4))) AS BLOB) WHERE (((rt0.c0)!=(vt1.c0)) COLLATE NOCASE) ORDER BY '' ASC  NULLS LAST, (((rt0.c1)) BETWEEN (((((rt0.c3, vt1.c2, vt1.c2)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c5)) AND ((rt0.c1, vt1.c0, rt0.c0))))) AND ((((((rt0.c4)AND(rt0.c3)))AND(rt0.c6))))), NULLIF(DISTINCT json_insert(vt1.c2, rt0.c3, rt0.c1, vt1.c2, rt0.c1), (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c6)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<>(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST((((rt0.c5))<((rt0.c4))) AS BLOB) ORDER BY '' ASC  NULLS LAST, (((rt0.c1)) BETWEEN (((((rt0.c3, vt1.c2, vt1.c2)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c5)) AND ((rt0.c1, vt1.c0, rt0.c0))))) AND ((((((rt0.c4)AND(rt0.c3)))AND(rt0.c6))))), NULLIF(DISTINCT json_insert(vt1.c2, rt0.c3, rt0.c1, vt1.c2, rt0.c1), (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c6)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON CAST((((rt0.c5))<((rt0.c4))) AS BLOB) WHERE (((rt0.c0)!=(vt1.c0)) COLLATE NOCASE) ORDER BY '' ASC  NULLS LAST, (((rt0.c1)) BETWEEN (((((rt0.c3, vt1.c2, vt1.c2)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c5)) AND ((rt0.c1, vt1.c0, rt0.c0))))) AND ((((((rt0.c4)AND(rt0.c3)))AND(rt0.c6))))), NULLIF(DISTINCT json_insert(vt1.c2, rt0.c3, rt0.c1, vt1.c2, rt0.c1), (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c6)))) ASC  NULLS LAST;
SELECT * FROM t0, vt1 WHERE (CAST(((NULL)<<(t0.c1)) AS INTEGER)) ORDER BY (+ (((t0.c0) NOT BETWEEN ('-456854576') AND (t0.c4))))  NULLS LAST, ((((t0.c1) NOT NULL))||(((t0.c3) BETWEEN (t0.c2) AND (t0.c1))))  NULLS LAST, ((CAST(t0.c4 AS TEXT))<>(t0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)<<(t0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ (((t0.c0) NOT BETWEEN ('-456854576') AND (t0.c4))))  NULLS LAST, ((((t0.c1) NOT NULL))||(((t0.c3) BETWEEN (t0.c2) AND (t0.c1))))  NULLS LAST, ((CAST(t0.c4 AS TEXT))!=(t0.c1)) ASC);
SELECT * FROM t0, vt1 WHERE (CAST(((NULL)<<(t0.c1)) AS INTEGER)) ORDER BY (+ (((t0.c0) NOT BETWEEN ('-456854576') AND (t0.c4))))  NULLS LAST, ((((t0.c1) NOT NULL))||(((t0.c3) BETWEEN (t0.c2) AND (t0.c1))))  NULLS LAST, ((CAST(t0.c4 AS TEXT))<>(t0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)<<(t0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ (((t0.c0) NOT BETWEEN ('-456854576') AND (t0.c4))))  NULLS LAST, ((((t0.c1) NOT NULL))||(((t0.c3) BETWEEN (t0.c2) AND (t0.c1))))  NULLS LAST, ((CAST(t0.c4 AS TEXT))!=(t0.c1)) ASC);
SELECT * FROM t0, vt1 WHERE (CAST(((NULL)<<(t0.c1)) AS INTEGER)) ORDER BY (+ (((t0.c0) NOT BETWEEN ('-456854576') AND (t0.c4))))  NULLS LAST, ((((t0.c1) NOT NULL))||(((t0.c3) BETWEEN (t0.c2) AND (t0.c1))))  NULLS LAST, ((CAST(t0.c4 AS TEXT))<>(t0.c1)) ASC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0, '>', rt0.c2)) NOT BETWEEN ((CAST(rt0.c6 AS TEXT), (- (rt0.c5)), ((rt0.c4) IS FALSE))) AND ((((((rt0.c6)AND(rt0.c2)))OR('0.4542732795246839')), ((vt1.c0) BETWEEN (rt0.c6) AND (vt1.c0)), (- (rt0.c5))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, '>', rt0.c2)) NOT BETWEEN ((CAST(rt0.c6 AS TEXT), (- (rt0.c5)), ((rt0.c4) IS FALSE))) AND ((((((rt0.c6)AND(rt0.c2)))OR('0.4542732795246839')), ((vt1.c0) BETWEEN (rt0.c6) AND (vt1.c0)), (- (rt0.c5)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0, '>', rt0.c2)) NOT BETWEEN ((CAST(rt0.c6 AS TEXT), (- (rt0.c5)), ((rt0.c4) IS FALSE))) AND ((((((rt0.c6)AND(rt0.c2)))OR('0.4542732795246839')), ((vt1.c0) BETWEEN (rt0.c6) AND (vt1.c0)), (- (rt0.c5))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, '>', rt0.c2)) NOT BETWEEN ((CAST(rt0.c6 AS TEXT), (- (rt0.c5)), ((rt0.c4) IS FALSE))) AND ((((((rt0.c6)AND(rt0.c2)))OR('0.4542732795246839')), ((vt1.c0) BETWEEN (rt0.c6) AND (vt1.c0)), (- (rt0.c5)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0, '>', rt0.c2)) NOT BETWEEN ((CAST(rt0.c6 AS TEXT), (- (rt0.c5)), ((rt0.c4) IS FALSE))) AND ((((((rt0.c6)AND(rt0.c2)))OR('0.4542732795246839')), ((vt1.c0) BETWEEN (rt0.c6) AND (vt1.c0)), (- (rt0.c5))))));
SELECT ALL * FROM vt1, t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL * FROM vt1, t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL * FROM vt1, t0, rt0 WHERE (rt0.c2);
SELECT * FROM rt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (t0.c0);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c2  WHEN '[''_LX\rFlt' THEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) ORDER BY ((((vt1.c2)<(vt1.c0)))=(x'40c3')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c2  WHEN '[''_LX\rFlt' THEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c2)<(vt1.c0)))==(x'40c3')) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c2  WHEN '[''_LX\rFlt' THEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) ORDER BY ((((vt1.c2)<(vt1.c0)))=(x'40c3')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c2  WHEN '[''_LX\rFlt' THEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c2)<(vt1.c0)))==(x'40c3')) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c2  WHEN '[''_LX\rFlt' THEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) ORDER BY ((((vt1.c2)<(vt1.c0)))=(x'40c3')) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((('-1892572888')IS NOT(t0.c1)) COLLATE NOCASE) ORDER BY 0X6faceb4f ASC;
SELECT SUM(count) FROM (SELECT ALL (((('-1892572888')IS NOT(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY 0X6faceb4f ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((('-1892572888')IS NOT(t0.c1)) COLLATE NOCASE) ORDER BY 0X6faceb4f ASC;
SELECT SUM(count) FROM (SELECT ALL (((('-1892572888')IS NOT(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY 0X6faceb4f ASC);
SELECT * FROM t0 WHERE (((t0.c3 COLLATE NOCASE) NOT BETWEEN (((t0.c2)<>(t0.c1))) AND (((t0.c1) BETWEEN (t0.c3) AND (t0.c1))))) ORDER BY ((t0.c3 COLLATE RTRIM)IS(t0.c0))  NULLS FIRST, CASE WHEN t0.c2 THEN t0.c1 ELSE '0.012441161982416404' END COLLATE RTRIM COLLATE NOCASE DESC, (+ (t0.c0 COLLATE BINARY)), (((t0.c1)) NOT BETWEEN (((t0.c2 IN (t0.c0)))) AND ((((((t0.c4)AND(t0.c0)))AND(t0.c4))))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c3 COLLATE NOCASE) NOT BETWEEN (((t0.c2)!=(t0.c1))) AND (((t0.c1) BETWEEN (t0.c3) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c3 COLLATE RTRIM)IS(t0.c0))  NULLS FIRST, CASE WHEN t0.c2 THEN t0.c1 ELSE '0.012441161982416404' END COLLATE RTRIM COLLATE NOCASE DESC, (+ (t0.c0 COLLATE BINARY)), (((t0.c1)) NOT BETWEEN (((t0.c2 IN (t0.c0)))) AND ((((((t0.c4)AND(t0.c0)))AND(t0.c4))))) ASC);
SELECT * FROM t0 WHERE (((t0.c3 COLLATE NOCASE) NOT BETWEEN (((t0.c2)<>(t0.c1))) AND (((t0.c1) BETWEEN (t0.c3) AND (t0.c1))))) ORDER BY ((t0.c3 COLLATE RTRIM)IS(t0.c0))  NULLS FIRST, CASE WHEN t0.c2 THEN t0.c1 ELSE '0.012441161982416404' END COLLATE RTRIM COLLATE NOCASE DESC, (+ (t0.c0 COLLATE BINARY)), (((t0.c1)) NOT BETWEEN (((t0.c2 IN (t0.c0)))) AND ((((((t0.c4)AND(t0.c0)))AND(t0.c4))))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c3 COLLATE NOCASE) NOT BETWEEN (((t0.c2)!=(t0.c1))) AND (((t0.c1) BETWEEN (t0.c3) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c3 COLLATE RTRIM)IS(t0.c0))  NULLS FIRST, CASE WHEN t0.c2 THEN t0.c1 ELSE '0.012441161982416404' END COLLATE RTRIM COLLATE NOCASE DESC, (+ (t0.c0 COLLATE BINARY)), (((t0.c1)) NOT BETWEEN (((t0.c2 IN (t0.c0)))) AND ((((((t0.c4)AND(t0.c0)))AND(t0.c4))))) ASC);
SELECT * FROM t0 WHERE (((t0.c3 COLLATE NOCASE) NOT BETWEEN (((t0.c2)<>(t0.c1))) AND (((t0.c1) BETWEEN (t0.c3) AND (t0.c1))))) ORDER BY ((t0.c3 COLLATE RTRIM)IS(t0.c0))  NULLS FIRST, CASE WHEN t0.c2 THEN t0.c1 ELSE '0.012441161982416404' END COLLATE RTRIM COLLATE NOCASE DESC, (+ (t0.c0 COLLATE BINARY)), (((t0.c1)) NOT BETWEEN (((t0.c2 IN (t0.c0)))) AND ((((((t0.c4)AND(t0.c0)))AND(t0.c4))))) ASC;
SELECT ALL * FROM vt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (NULL);
SELECT * FROM rt0, vt1, t0 WHERE ((((rt0.c5)>>(rt0.c0)) IN ())) ORDER BY '1096628539';
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5)>>(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY '1096628539');
SELECT * FROM rt0, vt1, t0 WHERE ((((rt0.c5)>>(rt0.c0)) IN ())) ORDER BY '1096628539';
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5)>>(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY '1096628539');
SELECT * FROM rt0, vt1, t0 WHERE ((((rt0.c5)>>(rt0.c0)) IN ())) ORDER BY '1096628539';
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c0, vt1.c2, rt0.c1, rt0.c4, vt1.c1))=((x'', rt0.c4, vt1.c2, vt1.c0, rt0.c2))) COLLATE BINARY WHERE (rt0.c3) ORDER BY ((((rt0.c4)||(vt1.c2))) NOT BETWEEN ('ZA') AND (CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c0, vt1.c2, rt0.c1, rt0.c4, vt1.c1))==((x'', rt0.c4, vt1.c2, vt1.c0, rt0.c2))) COLLATE BINARY ORDER BY ((((rt0.c4)||(vt1.c2))) NOT BETWEEN ('ZA') AND (CAST(vt1.c0 AS NUMERIC))));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c0, vt1.c2, rt0.c1, rt0.c4, vt1.c1))=((x'', rt0.c4, vt1.c2, vt1.c0, rt0.c2))) COLLATE BINARY WHERE (rt0.c3) ORDER BY ((((rt0.c4)||(vt1.c2))) NOT BETWEEN ('ZA') AND (CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c0, vt1.c2, rt0.c1, rt0.c4, vt1.c1))==((x'', rt0.c4, vt1.c2, vt1.c0, rt0.c2))) COLLATE BINARY ORDER BY ((((rt0.c4)||(vt1.c2))) NOT BETWEEN ('ZA') AND (CAST(vt1.c0 AS NUMERIC))));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c0, vt1.c2, rt0.c1, rt0.c4, vt1.c1))=((x'', rt0.c4, vt1.c2, vt1.c0, rt0.c2))) COLLATE BINARY WHERE (rt0.c3) ORDER BY ((((rt0.c4)||(vt1.c2))) NOT BETWEEN ('ZA') AND (CAST(vt1.c0 AS NUMERIC)));
SELECT * FROM vt1, t0, rt0 WHERE ((((vt1.c2)) NOT BETWEEN ((LIKELY(rt0.c6))) AND (((((rt0.c3)) BETWEEN ((rt0.c6)) AND (('-456854576')))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2)) NOT BETWEEN ((LIKELY(rt0.c6))) AND (((((rt0.c3)) BETWEEN ((rt0.c6)) AND (('-456854576'))))))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE ((((vt1.c2)) NOT BETWEEN ((LIKELY(rt0.c6))) AND (((((rt0.c3)) BETWEEN ((rt0.c6)) AND (('-456854576')))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2)) NOT BETWEEN ((LIKELY(rt0.c6))) AND (((((rt0.c3)) BETWEEN ((rt0.c6)) AND (('-456854576'))))))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE ((((vt1.c2)) NOT BETWEEN ((LIKELY(rt0.c6))) AND (((((rt0.c3)) BETWEEN ((rt0.c6)) AND (('-456854576')))))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((rt0.c0) BETWEEN (vt1.c0) AND (0.9176470611472776)) COLLATE RTRIM COLLATE RTRIM) ORDER BY (((((vt1.c2))<((vt1.c1))))GLOB(rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (vt1.c0) AND (0.9176470611472776)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((vt1.c2))<((vt1.c1))))GLOB(rt0.c2)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((rt0.c0) BETWEEN (vt1.c0) AND (0.9176470611472776)) COLLATE RTRIM COLLATE RTRIM) ORDER BY (((((vt1.c2))<((vt1.c1))))GLOB(rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (vt1.c0) AND (0.9176470611472776)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((vt1.c2))<((vt1.c1))))GLOB(rt0.c2)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((rt0.c0) BETWEEN (vt1.c0) AND (0.9176470611472776)) COLLATE RTRIM COLLATE RTRIM) ORDER BY (((((vt1.c2))<((vt1.c1))))GLOB(rt0.c2)) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (0.4216455792570719) ORDER BY (((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)), CAST(rt0.c0 AS BLOB), (rt0.c2 IN (rt0.c3, rt0.c3))))<=((CAST(x'2011' AS TEXT), 0.6554250098511761, rt0.c3 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.4216455792570719) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)), CAST(rt0.c0 AS BLOB), (rt0.c2 IN (rt0.c3, rt0.c3))))<=((CAST(x'2011' AS TEXT), 0.6554250098511761, rt0.c3 COLLATE RTRIM)))  NULLS LAST);
SELECT * FROM rt0 WHERE (0.4216455792570719) ORDER BY (((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)), CAST(rt0.c0 AS BLOB), (rt0.c2 IN (rt0.c3, rt0.c3))))<=((CAST(x'2011' AS TEXT), 0.6554250098511761, rt0.c3 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.4216455792570719) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)), CAST(rt0.c0 AS BLOB), (rt0.c2 IN (rt0.c3, rt0.c3))))<=((CAST(x'2011' AS TEXT), 0.6554250098511761, rt0.c3 COLLATE RTRIM)))  NULLS LAST);
SELECT * FROM rt0 WHERE (0.4216455792570719) ORDER BY (((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)), CAST(rt0.c0 AS BLOB), (rt0.c2 IN (rt0.c3, rt0.c3))))<=((CAST(x'2011' AS TEXT), 0.6554250098511761, rt0.c3 COLLATE RTRIM)))  NULLS LAST;
SELECT ALL * FROM t0, vt1, rt0 WHERE (((0x5eeeb5f) BETWEEN (rt0.c0) AND (t0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((0x5eeeb5f) BETWEEN (rt0.c0) AND (t0.c3)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE (((0x5eeeb5f) BETWEEN (rt0.c0) AND (t0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((0x5eeeb5f) BETWEEN (rt0.c0) AND (t0.c3)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE (((0x5eeeb5f) BETWEEN (rt0.c0) AND (t0.c3)) COLLATE BINARY);
SELECT * FROM rt0, t0 WHERE ((((t0.c4 IN (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c4 IN (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((t0.c4 IN (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c4 IN (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((t0.c4 IN (rt0.c2))) IS TRUE));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (- (SQLITE_COMPILEOPTION_USED(rt0.c1))) LEFT OUTER JOIN vt1 ON ((((t0.c4) IS TRUE)) NOT NULL) WHERE ((+ (CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (- (SQLITE_COMPILEOPTION_USED(rt0.c1))) LEFT OUTER JOIN vt1 ON ((((t0.c4) IS TRUE)) NOT NULL));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (- (SQLITE_COMPILEOPTION_USED(rt0.c1))) LEFT OUTER JOIN vt1 ON ((((t0.c4) IS TRUE)) NOT NULL) WHERE ((+ (CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (- (SQLITE_COMPILEOPTION_USED(rt0.c1))) LEFT OUTER JOIN vt1 ON ((((t0.c4) IS TRUE)) NOT NULL));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (- (SQLITE_COMPILEOPTION_USED(rt0.c1))) LEFT OUTER JOIN vt1 ON ((((t0.c4) IS TRUE)) NOT NULL) WHERE ((+ (CAST(rt0.c0 AS BLOB))));
SELECT * FROM rt0, t0 WHERE ((((t0.c4, rt0.c2, rt0.c1)) BETWEEN ((CAST(t0.c4 AS BLOB), (~ (t0.c0)), rt0.c0)) AND ((rt0.c4, x'', ((((t0.c1)OR(t0.c4)))OR(t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c4, rt0.c2, rt0.c1)) BETWEEN ((CAST(t0.c4 AS BLOB), (~ (t0.c0)), rt0.c0)) AND ((rt0.c4, x'', ((((t0.c1)OR(t0.c4)))OR(t0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((t0.c4, rt0.c2, rt0.c1)) BETWEEN ((CAST(t0.c4 AS BLOB), (~ (t0.c0)), rt0.c0)) AND ((rt0.c4, x'', ((((t0.c1)OR(t0.c4)))OR(t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c4, rt0.c2, rt0.c1)) BETWEEN ((CAST(t0.c4 AS BLOB), (~ (t0.c0)), rt0.c0)) AND ((rt0.c4, x'', ((((t0.c1)OR(t0.c4)))OR(t0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((t0.c4, rt0.c2, rt0.c1)) BETWEEN ((CAST(t0.c4 AS BLOB), (~ (t0.c0)), rt0.c0)) AND ((rt0.c4, x'', ((((t0.c1)OR(t0.c4)))OR(t0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)&(rt0.c4)))OR(rt0.c1)))OR(IFNULL(rt0.c4, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)&(rt0.c4)))OR(rt0.c1)))OR(IFNULL(rt0.c4, rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)&(rt0.c4)))OR(rt0.c1)))OR(IFNULL(rt0.c4, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)&(rt0.c4)))OR(rt0.c1)))OR(IFNULL(rt0.c4, rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)&(rt0.c4)))OR(rt0.c1)))OR(IFNULL(rt0.c4, rt0.c1))));
SELECT * FROM vt1 CROSS JOIN rt0 ON (+ (((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt1.c1)))) WHERE ((((((rt0.c5, rt0.c0, vt1.c0))<>((rt0.c5, vt1.c1, vt1.c1))))<=(('' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5, rt0.c0, vt1.c0))<>((rt0.c5, vt1.c1, vt1.c1))))<=(('' IN ())))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (+ (((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt1.c1)))));
SELECT * FROM vt1 CROSS JOIN rt0 ON (+ (((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt1.c1)))) WHERE ((((((rt0.c5, rt0.c0, vt1.c0))<>((rt0.c5, vt1.c1, vt1.c1))))<=(('' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5, rt0.c0, vt1.c0))<>((rt0.c5, vt1.c1, vt1.c1))))<=(('' IN ())))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (+ (((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt1.c1)))));
SELECT * FROM vt1 CROSS JOIN rt0 ON (+ (((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt1.c1)))) WHERE ((((((rt0.c5, rt0.c0, vt1.c0))<>((rt0.c5, vt1.c1, vt1.c1))))<=(('' IN ()))));
SELECT * FROM t0, rt0, vt1 WHERE ((~ ((((t0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))))) ORDER BY '1903865536'  NULLS LAST, t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY '1903865536'  NULLS LAST, t0.c0 ASC);
SELECT * FROM t0, rt0, vt1 WHERE ((~ ((((t0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))))) ORDER BY '1903865536'  NULLS LAST, t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY '1903865536'  NULLS LAST, t0.c0 ASC);
SELECT * FROM t0, rt0, vt1 WHERE ((~ ((((t0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))))) ORDER BY '1903865536'  NULLS LAST, t0.c0 ASC;
SELECT ALL * FROM vt1 WHERE ((SQLITE_VERSION() IN ())) ORDER BY (NOT (NULLIF(vt1.c0, 0.017124955730801195)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((SQLITE_VERSION() IN ())) IS TRUE)  as count FROM vt1 ORDER BY (NOT (NULLIF(vt1.c0, 0.017124955730801195)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((SQLITE_VERSION() IN ())) ORDER BY (NOT (NULLIF(vt1.c0, 0.017124955730801195)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((SQLITE_VERSION() IN ())) IS TRUE)  as count FROM vt1 ORDER BY (NOT (NULLIF(vt1.c0, 0.017124955730801195)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((SQLITE_VERSION() IN ())) ORDER BY (NOT (NULLIF(vt1.c0, 0.017124955730801195)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((NULL, rt0.c1, rt0.c5)))))<((((0x63c7881e) ISNULL))))) ORDER BY (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)) IN (CAST(rt0.c1 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((NULL, rt0.c1, rt0.c5)))))<((((0x63c7881e) ISNULL))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)) IN (CAST(rt0.c1 AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((NULL, rt0.c1, rt0.c5)))))<((((0x63c7881e) ISNULL))))) ORDER BY (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)) IN (CAST(rt0.c1 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((NULL, rt0.c1, rt0.c5)))))<((((0x63c7881e) ISNULL))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)) IN (CAST(rt0.c1 AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((NULL, rt0.c1, rt0.c5)))))<((((0x63c7881e) ISNULL))))) ORDER BY (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)) IN (CAST(rt0.c1 AS NUMERIC)))  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (t0.c2);
SELECT COUNT(*) FROM rt0 WHERE (CAST('X5FFu֏w' AS NUMERIC)) ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST, (~ (((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c4)))) ASC, ((((rt0.c0)!=(rt0.c2))) NOT BETWEEN (((rt0.c3) NOTNULL)) AND ((~ (NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('X5FFu֏w' AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST, (~ (((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c4)))) ASC, ((((rt0.c0)!=(rt0.c2))) NOT BETWEEN (((rt0.c3) NOTNULL)) AND ((~ (NULL))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST('X5FFu֏w' AS NUMERIC)) ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST, (~ (((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c4)))) ASC, ((((rt0.c0)!=(rt0.c2))) NOT BETWEEN (((rt0.c3) NOTNULL)) AND ((~ (NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('X5FFu֏w' AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST, (~ (((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c4)))) ASC, ((((rt0.c0)!=(rt0.c2))) NOT BETWEEN (((rt0.c3) NOTNULL)) AND ((~ (NULL))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST('X5FFu֏w' AS NUMERIC)) ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST, (~ (((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c4)))) ASC, ((((rt0.c0)!=(rt0.c2))) NOT BETWEEN (((rt0.c3) NOTNULL)) AND ((~ (NULL))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 AS INTEGER) INNER JOIN rt0 ON ((((((((((t0.c2)OR(t0.c1)))AND(vt1.c1)))AND('')))OR(t0.c3)))<=(CAST(vt1.c0 AS REAL))) WHERE (-5.8379346E7) ORDER BY ((((((rt0.c6)OR(rt0.c6)))OR(((((x'555a')OR(rt0.c2)))AND(rt0.c5)))))OR(NULL))  NULLS FIRST, (((((t0.c2))>=((t0.c4)))) NOT BETWEEN (((vt1.c2)||(rt0.c1))) AND (rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((-5.8379346E7) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 AS INTEGER) INNER JOIN rt0 ON ((((((((((t0.c2)OR(t0.c1)))AND(vt1.c1)))AND('')))OR(t0.c3)))<=(CAST(vt1.c0 AS REAL))) ORDER BY ((((((rt0.c6)OR(rt0.c6)))OR(((((x'555a')OR(rt0.c2)))AND(rt0.c5)))))OR(NULL))  NULLS FIRST, (((((t0.c2))>=((t0.c4)))) NOT BETWEEN (((vt1.c2)||(rt0.c1))) AND (rt0.c1)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 AS INTEGER) INNER JOIN rt0 ON ((((((((((t0.c2)OR(t0.c1)))AND(vt1.c1)))AND('')))OR(t0.c3)))<=(CAST(vt1.c0 AS REAL))) WHERE (-5.8379346E7) ORDER BY ((((((rt0.c6)OR(rt0.c6)))OR(((((x'555a')OR(rt0.c2)))AND(rt0.c5)))))OR(NULL))  NULLS FIRST, (((((t0.c2))>=((t0.c4)))) NOT BETWEEN (((vt1.c2)||(rt0.c1))) AND (rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((-5.8379346E7) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 AS INTEGER) INNER JOIN rt0 ON ((((((((((t0.c2)OR(t0.c1)))AND(vt1.c1)))AND('')))OR(t0.c3)))<=(CAST(vt1.c0 AS REAL))) ORDER BY ((((((rt0.c6)OR(rt0.c6)))OR(((((x'555a')OR(rt0.c2)))AND(rt0.c5)))))OR(NULL))  NULLS FIRST, (((((t0.c2))>=((t0.c4)))) NOT BETWEEN (((vt1.c2)||(rt0.c1))) AND (rt0.c1)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 AS INTEGER) INNER JOIN rt0 ON ((((((((((t0.c2)OR(t0.c1)))AND(vt1.c1)))AND('')))OR(t0.c3)))<=(CAST(vt1.c0 AS REAL))) WHERE (-5.8379346E7) ORDER BY ((((((rt0.c6)OR(rt0.c6)))OR(((((x'555a')OR(rt0.c2)))AND(rt0.c5)))))OR(NULL))  NULLS FIRST, (((((t0.c2))>=((t0.c4)))) NOT BETWEEN (((vt1.c2)||(rt0.c1))) AND (rt0.c1));
SELECT COUNT(*) FROM t0, rt0 WHERE (((NULLIF(DISTINCT rt0.c1, rt0.c5))-(''))) ORDER BY 1685589596;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT rt0.c1, rt0.c5))-(''))) IS TRUE)  as count FROM t0, rt0 ORDER BY 1685589596);
SELECT COUNT(*) FROM t0, rt0 WHERE (((NULLIF(DISTINCT rt0.c1, rt0.c5))-(''))) ORDER BY 1685589596;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT rt0.c1, rt0.c5))-(''))) IS TRUE)  as count FROM t0, rt0 ORDER BY 1685589596);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((((vt1.c1) BETWEEN (rt0.c5) AND (rt0.c6)))+((((rt0.c3, rt0.c4, vt1.c1)) BETWEEN ((rt0.c2, rt0.c3, vt1.c1)) AND ((rt0.c2, vt1.c2, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) BETWEEN (rt0.c5) AND (rt0.c6)))+((((rt0.c3, rt0.c4, vt1.c1)) BETWEEN ((rt0.c2, rt0.c3, vt1.c1)) AND ((rt0.c2, vt1.c2, vt1.c0)))))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((((vt1.c1) BETWEEN (rt0.c5) AND (rt0.c6)))+((((rt0.c3, rt0.c4, vt1.c1)) BETWEEN ((rt0.c2, rt0.c3, vt1.c1)) AND ((rt0.c2, vt1.c2, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) BETWEEN (rt0.c5) AND (rt0.c6)))+((((rt0.c3, rt0.c4, vt1.c1)) BETWEEN ((rt0.c2, rt0.c3, vt1.c1)) AND ((rt0.c2, vt1.c2, vt1.c0)))))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((((vt1.c1) BETWEEN (rt0.c5) AND (rt0.c6)))+((((rt0.c3, rt0.c4, vt1.c1)) BETWEEN ((rt0.c2, rt0.c3, vt1.c1)) AND ((rt0.c2, vt1.c2, vt1.c0))))));
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c0)>>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)>>(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c0)>>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)>>(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c0)>>(rt0.c1)))));
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY CASE NULLIF(DISTINCT vt1.c1, vt1.c2)  WHEN (vt1.c1 IN ()) THEN vt1.c2 WHEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2)) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END WHEN json_quote(vt1.c1) THEN vt1.c0 COLLATE RTRIM WHEN (~ (vt1.c1)) THEN CAST(vt1.c2 AS NUMERIC) ELSE CAST(vt1.c0 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY CASE NULLIF(DISTINCT vt1.c1, vt1.c2)  WHEN (vt1.c1 IN ()) THEN vt1.c2 WHEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2)) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END WHEN json_quote(vt1.c1) THEN vt1.c0 COLLATE RTRIM WHEN (~ (vt1.c1)) THEN CAST(vt1.c2 AS NUMERIC) ELSE CAST(vt1.c0 AS REAL) END  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY CASE NULLIF(DISTINCT vt1.c1, vt1.c2)  WHEN (vt1.c1 IN ()) THEN vt1.c2 WHEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2)) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END WHEN json_quote(vt1.c1) THEN vt1.c0 COLLATE RTRIM WHEN (~ (vt1.c1)) THEN CAST(vt1.c2 AS NUMERIC) ELSE CAST(vt1.c0 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY CASE NULLIF(DISTINCT vt1.c1, vt1.c2)  WHEN (vt1.c1 IN ()) THEN vt1.c2 WHEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2)) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END WHEN json_quote(vt1.c1) THEN vt1.c0 COLLATE RTRIM WHEN (~ (vt1.c1)) THEN CAST(vt1.c2 AS NUMERIC) ELSE CAST(vt1.c0 AS REAL) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c2 AS INTEGER))>=((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c2 AS INTEGER))>=((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c2 AS INTEGER))>=((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c2 AS INTEGER))>=((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c2 AS INTEGER))>=((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT * FROM rt0, t0 WHERE (CASE ((rt0.c3) IS FALSE)  WHEN (+ (t0.c2)) THEN NULL WHEN (- (rt0.c0)) THEN ((((t0.c2)OR(0.12128307582967146)))AND(t0.c2)) WHEN t0.c1 COLLATE RTRIM THEN (rt0.c0 IN ()) ELSE rt0.c4 COLLATE BINARY END) ORDER BY CASE WHEN (- (rt0.c0)) THEN ((rt0.c4)<>(rt0.c4)) ELSE (- (t0.c3)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3) IS FALSE)  WHEN (+ (t0.c2)) THEN NULL WHEN (- (rt0.c0)) THEN ((((t0.c2)OR(0.12128307582967146)))AND(t0.c2)) WHEN t0.c1 COLLATE RTRIM THEN (rt0.c0 IN ()) ELSE rt0.c4 COLLATE BINARY END) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN (- (rt0.c0)) THEN ((rt0.c4)!=(rt0.c4)) ELSE (- (t0.c3)) END DESC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (CASE ((rt0.c3) IS FALSE)  WHEN (+ (t0.c2)) THEN NULL WHEN (- (rt0.c0)) THEN ((((t0.c2)OR(0.12128307582967146)))AND(t0.c2)) WHEN t0.c1 COLLATE RTRIM THEN (rt0.c0 IN ()) ELSE rt0.c4 COLLATE BINARY END) ORDER BY CASE WHEN (- (rt0.c0)) THEN ((rt0.c4)<>(rt0.c4)) ELSE (- (t0.c3)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3) IS FALSE)  WHEN (+ (t0.c2)) THEN NULL WHEN (- (rt0.c0)) THEN ((((t0.c2)OR(0.12128307582967146)))AND(t0.c2)) WHEN t0.c1 COLLATE RTRIM THEN (rt0.c0 IN ()) ELSE rt0.c4 COLLATE BINARY END) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN (- (rt0.c0)) THEN ((rt0.c4)!=(rt0.c4)) ELSE (- (t0.c3)) END DESC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (CASE ((rt0.c3) IS FALSE)  WHEN (+ (t0.c2)) THEN NULL WHEN (- (rt0.c0)) THEN ((((t0.c2)OR(0.12128307582967146)))AND(t0.c2)) WHEN t0.c1 COLLATE RTRIM THEN (rt0.c0 IN ()) ELSE rt0.c4 COLLATE BINARY END) ORDER BY CASE WHEN (- (rt0.c0)) THEN ((rt0.c4)<>(rt0.c4)) ELSE (- (t0.c3)) END DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c4)>=(t0.c4)))<(CASE WHEN t0.c0 THEN t0.c3 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END))) ORDER BY (((((('1674020894')<=(t0.c1)))OR(IFNULL(DISTINCT t0.c1, t0.c4))))OR(-1.7976931348623157E308)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c4)>=(t0.c4)))<(CASE WHEN t0.c0 THEN t0.c3 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END))) IS TRUE)  as count FROM t0 ORDER BY (((((('1674020894')<=(t0.c1)))OR(IFNULL(DISTINCT t0.c1, t0.c4))))OR(-1.7976931348623157E308)) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c4)>=(t0.c4)))<(CASE WHEN t0.c0 THEN t0.c3 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END))) ORDER BY (((((('1674020894')<=(t0.c1)))OR(IFNULL(DISTINCT t0.c1, t0.c4))))OR(-1.7976931348623157E308)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c4)>=(t0.c4)))<(CASE WHEN t0.c0 THEN t0.c3 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END))) IS TRUE)  as count FROM t0 ORDER BY (((((('1674020894')<=(t0.c1)))OR(IFNULL(DISTINCT t0.c1, t0.c4))))OR(-1.7976931348623157E308)) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c4)>=(t0.c4)))<(CASE WHEN t0.c0 THEN t0.c3 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END))) ORDER BY (((((('1674020894')<=(t0.c1)))OR(IFNULL(DISTINCT t0.c1, t0.c4))))OR(-1.7976931348623157E308)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE CAST(t0.c0 AS INTEGER)  WHEN t0.c0 THEN (((t0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE (rt0.c2 IN ()) END) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c0 AS INTEGER)  WHEN t0.c0 THEN (((t0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE CAST(t0.c0 AS INTEGER)  WHEN t0.c0 THEN (((t0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE (rt0.c2 IN ()) END) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c0 AS INTEGER)  WHEN t0.c0 THEN (((t0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE CAST(t0.c0 AS INTEGER)  WHEN t0.c0 THEN (((t0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE (rt0.c2 IN ()) END) ORDER BY rt0.c2;
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c2)AND(vt1.c2)))OR(x'')))OR(vt1.c2)))OR(x''))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c2)AND(vt1.c2)))OR(x'')))OR(vt1.c2)))OR(x''))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c2)AND(vt1.c2)))OR(x'')))OR(vt1.c2)))OR(x''))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c2)AND(vt1.c2)))OR(x'')))OR(vt1.c2)))OR(x''))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c2)AND(vt1.c2)))OR(x'')))OR(vt1.c2)))OR(x''))) ISNULL));
SELECT ALL * FROM vt1 WHERE (DATE(vt1.c0, TRIM(vt1.c0), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ((DATE(vt1.c0, TRIM(vt1.c0), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (DATE(vt1.c0, TRIM(vt1.c0), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ((DATE(vt1.c0, TRIM(vt1.c0), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (DATE(vt1.c0, TRIM(vt1.c0), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))));
SELECT ALL * FROM rt0, t0, vt1 WHERE ((((vt1.c1)) BETWEEN (((((x''))>((rt0.c1))))) AND (((rt0.c6 IN ()))))) ORDER BY (+ ((((rt0.c4, rt0.c6, rt0.c6)) BETWEEN ((t0.c2, t0.c1, vt1.c1)) AND ((t0.c0, rt0.c0, rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN (((((x''))>((rt0.c1))))) AND (((rt0.c6 IN ()))))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (+ ((((rt0.c4, rt0.c6, rt0.c6)) BETWEEN ((t0.c2, t0.c1, vt1.c1)) AND ((t0.c0, rt0.c0, rt0.c0))))) ASC);
SELECT ALL * FROM rt0, t0, vt1 WHERE ((((vt1.c1)) BETWEEN (((((x''))>((rt0.c1))))) AND (((rt0.c6 IN ()))))) ORDER BY (+ ((((rt0.c4, rt0.c6, rt0.c6)) BETWEEN ((t0.c2, t0.c1, vt1.c1)) AND ((t0.c0, rt0.c0, rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN (((((x''))>((rt0.c1))))) AND (((rt0.c6 IN ()))))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (+ ((((rt0.c4, rt0.c6, rt0.c6)) BETWEEN ((t0.c2, t0.c1, vt1.c1)) AND ((t0.c0, rt0.c0, rt0.c0))))) ASC);
SELECT ALL * FROM rt0, t0, vt1 WHERE ((((vt1.c1)) BETWEEN (((((x''))>((rt0.c1))))) AND (((rt0.c6 IN ()))))) ORDER BY (+ ((((rt0.c4, rt0.c6, rt0.c6)) BETWEEN ((t0.c2, t0.c1, vt1.c1)) AND ((t0.c0, rt0.c0, rt0.c0))))) ASC;
SELECT ALL * FROM rt0, vt1, t0 NOT INDEXED WHERE (NULL) ORDER BY CASE WHEN ((t0.c2)OR(rt0.c3)) THEN ((rt0.c5) BETWEEN (t0.c1) AND (vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY CASE WHEN ((t0.c2)OR(rt0.c3)) THEN ((rt0.c5) BETWEEN (t0.c1) AND (vt1.c0)) END  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, t0 NOT INDEXED WHERE (NULL) ORDER BY CASE WHEN ((t0.c2)OR(rt0.c3)) THEN ((rt0.c5) BETWEEN (t0.c1) AND (vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY CASE WHEN ((t0.c2)OR(rt0.c3)) THEN ((rt0.c5) BETWEEN (t0.c1) AND (vt1.c0)) END  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, t0 NOT INDEXED WHERE (NULL) ORDER BY CASE WHEN ((t0.c2)OR(rt0.c3)) THEN ((rt0.c5) BETWEEN (t0.c1) AND (vt1.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON CASE ((t0.c0) BETWEEN (rt0.c3) AND (rt0.c3))  WHEN ((rt0.c1) NOT BETWEEN (t0.c4) AND (t0.c0)) THEN CASE WHEN rt0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN rt0.c1 THEN t0.c3 ELSE t0.c2 END ELSE CAST(rt0.c3 AS TEXT) END WHERE (((0.7029626948288044)%(((t0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.7029626948288044)%(((t0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CASE ((t0.c0) BETWEEN (rt0.c3) AND (rt0.c3))  WHEN ((rt0.c1) NOT BETWEEN (t0.c4) AND (t0.c0)) THEN CASE WHEN rt0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN rt0.c1 THEN t0.c3 ELSE t0.c2 END ELSE CAST(rt0.c3 AS TEXT) END);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON CASE ((t0.c0) BETWEEN (rt0.c3) AND (rt0.c3))  WHEN ((rt0.c1) NOT BETWEEN (t0.c4) AND (t0.c0)) THEN CASE WHEN rt0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN rt0.c1 THEN t0.c3 ELSE t0.c2 END ELSE CAST(rt0.c3 AS TEXT) END WHERE (((0.7029626948288044)%(((t0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.7029626948288044)%(((t0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CASE ((t0.c0) BETWEEN (rt0.c3) AND (rt0.c3))  WHEN ((rt0.c1) NOT BETWEEN (t0.c4) AND (t0.c0)) THEN CASE WHEN rt0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN rt0.c1 THEN t0.c3 ELSE t0.c2 END ELSE CAST(rt0.c3 AS TEXT) END);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON CASE ((t0.c0) BETWEEN (rt0.c3) AND (rt0.c3))  WHEN ((rt0.c1) NOT BETWEEN (t0.c4) AND (t0.c0)) THEN CASE WHEN rt0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN rt0.c1 THEN t0.c3 ELSE t0.c2 END ELSE CAST(rt0.c3 AS TEXT) END WHERE (((0.7029626948288044)%(((t0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON (((CASE vt1.c2  WHEN t0.c1 THEN rt0.c2 END))<=((CAST(vt1.c2 AS BLOB)))) RIGHT OUTER JOIN rt0 ON (((((((rt0.c1, vt1.c2, t0.c2)) BETWEEN ((rt0.c6, rt0.c1, vt1.c2)) AND ((t0.c2, rt0.c6, t0.c4))))OR(((((0.13604135535422734)AND(t0.c4)))AND(rt0.c4)))))OR(((((NULL)AND(x'')))OR(rt0.c5)))) WHERE (((((((rt0.c2)AND(t0.c2)))OR(rt0.c3)))>(HEX(rt0.c0)))) ORDER BY ((((((vt1.c2) NOT BETWEEN (0.25163058669215665) AND (t0.c1)))OR('N')))OR((rt0.c0 IN (rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(t0.c2)))OR(rt0.c3)))>(HEX(rt0.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (((CASE vt1.c2  WHEN t0.c1 THEN rt0.c2 END))<=((CAST(vt1.c2 AS BLOB)))) RIGHT OUTER JOIN rt0 ON (((((((rt0.c1, vt1.c2, t0.c2)) BETWEEN ((rt0.c6, rt0.c1, vt1.c2)) AND ((t0.c2, rt0.c6, t0.c4))))OR(((((0.13604135535422734)AND(t0.c4)))AND(rt0.c4)))))OR(((((NULL)AND(x'')))OR(rt0.c5)))) ORDER BY ((((((vt1.c2) NOT BETWEEN (0.25163058669215665) AND (t0.c1)))OR('N')))OR((rt0.c0 IN (rt0.c4))))  NULLS LAST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON (((CASE vt1.c2  WHEN t0.c1 THEN rt0.c2 END))<=((CAST(vt1.c2 AS BLOB)))) RIGHT OUTER JOIN rt0 ON (((((((rt0.c1, vt1.c2, t0.c2)) BETWEEN ((rt0.c6, rt0.c1, vt1.c2)) AND ((t0.c2, rt0.c6, t0.c4))))OR(((((0.13604135535422734)AND(t0.c4)))AND(rt0.c4)))))OR(((((NULL)AND(x'')))OR(rt0.c5)))) WHERE (((((((rt0.c2)AND(t0.c2)))OR(rt0.c3)))>(HEX(rt0.c0)))) ORDER BY ((((((vt1.c2) NOT BETWEEN (0.25163058669215665) AND (t0.c1)))OR('N')))OR((rt0.c0 IN (rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(t0.c2)))OR(rt0.c3)))>(HEX(rt0.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (((CASE vt1.c2  WHEN t0.c1 THEN rt0.c2 END))<=((CAST(vt1.c2 AS BLOB)))) RIGHT OUTER JOIN rt0 ON (((((((rt0.c1, vt1.c2, t0.c2)) BETWEEN ((rt0.c6, rt0.c1, vt1.c2)) AND ((t0.c2, rt0.c6, t0.c4))))OR(((((0.13604135535422734)AND(t0.c4)))AND(rt0.c4)))))OR(((((NULL)AND(x'')))OR(rt0.c5)))) ORDER BY ((((((vt1.c2) NOT BETWEEN (0.25163058669215665) AND (t0.c1)))OR('N')))OR((rt0.c0 IN (rt0.c4))))  NULLS LAST);
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE (((COALESCE(DISTINCT 1521192774, t0.c2, t0.c1, vt1.c0, vt1.c2, t0.c3)) NOT BETWEEN (LOWER(DISTINCT t0.c3)) AND (t0.c1))) ORDER BY CAST(x'' AS BLOB), (NOT ((((vt1.c2)) BETWEEN ((t0.c1)) AND ((t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT 1521192774, t0.c2, t0.c1, vt1.c0, vt1.c2, t0.c3)) NOT BETWEEN (LOWER(DISTINCT t0.c3)) AND (t0.c1))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY CAST(x'' AS BLOB), (NOT ((((vt1.c2)) BETWEEN ((t0.c1)) AND ((t0.c2))))));
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE (((COALESCE(DISTINCT 1521192774, t0.c2, t0.c1, vt1.c0, vt1.c2, t0.c3)) NOT BETWEEN (LOWER(DISTINCT t0.c3)) AND (t0.c1))) ORDER BY CAST(x'' AS BLOB), (NOT ((((vt1.c2)) BETWEEN ((t0.c1)) AND ((t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT 1521192774, t0.c2, t0.c1, vt1.c0, vt1.c2, t0.c3)) NOT BETWEEN (LOWER(DISTINCT t0.c3)) AND (t0.c1))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY CAST(x'' AS BLOB), (NOT ((((vt1.c2)) BETWEEN ((t0.c1)) AND ((t0.c2))))));
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE (((COALESCE(DISTINCT 1521192774, t0.c2, t0.c1, vt1.c0, vt1.c2, t0.c3)) NOT BETWEEN (LOWER(DISTINCT t0.c3)) AND (t0.c1))) ORDER BY CAST(x'' AS BLOB), (NOT ((((vt1.c2)) BETWEEN ((t0.c1)) AND ((t0.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (((((rt0.c1) BETWEEN (t0.c3) AND (rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (t0.c3) AND (rt0.c2))) ISNULL)) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (((((rt0.c1) BETWEEN (t0.c3) AND (rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (t0.c3) AND (rt0.c2))) ISNULL)) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (((((rt0.c1) BETWEEN (t0.c3) AND (rt0.c2))) ISNULL));
SELECT * FROM rt0, vt1, t0 WHERE ((NOT (((rt0.c2) IS FALSE)))) ORDER BY (((rt0.c1)) BETWEEN ((vt1.c1)) AND ((x'4d9d0825'))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY (((rt0.c1)) BETWEEN ((vt1.c1)) AND ((x'4d9d0825'))) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0, vt1, t0 WHERE ((NOT (((rt0.c2) IS FALSE)))) ORDER BY (((rt0.c1)) BETWEEN ((vt1.c1)) AND ((x'4d9d0825'))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY (((rt0.c1)) BETWEEN ((vt1.c1)) AND ((x'4d9d0825'))) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0, vt1, t0 WHERE ((NOT (((rt0.c2) IS FALSE)))) ORDER BY (((rt0.c1)) BETWEEN ((vt1.c1)) AND ((x'4d9d0825'))) COLLATE BINARY  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c5 END) NOT BETWEEN (((rt0.c1)%(rt0.c5))) AND (((rt0.c6) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN rt0.c5 END) NOT BETWEEN (((rt0.c1)%(rt0.c5))) AND (((rt0.c6) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c5 END) NOT BETWEEN (((rt0.c1)%(rt0.c5))) AND (((rt0.c6) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN rt0.c5 END) NOT BETWEEN (((rt0.c1)%(rt0.c5))) AND (((rt0.c6) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c5 END) NOT BETWEEN (((rt0.c1)%(rt0.c5))) AND (((rt0.c6) NOTNULL))));
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (x'b628') ORDER BY ((((t0.c2) BETWEEN (t0.c0) AND (rt0.c4))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'b628') IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY ((((t0.c2) BETWEEN (t0.c0) AND (rt0.c4))) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (x'b628') ORDER BY ((((t0.c2) BETWEEN (t0.c0) AND (rt0.c4))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'b628') IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY ((((t0.c2) BETWEEN (t0.c0) AND (rt0.c4))) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (x'b628') ORDER BY ((((t0.c2) BETWEEN (t0.c0) AND (rt0.c4))) ISNULL) DESC  NULLS FIRST;
SELECT * FROM vt1, t0, rt0 WHERE (CAST(-743584882 AS REAL)) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c1 END)AND(((rt0.c3)==(vt1.c0)))))AND(x'')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(-743584882 AS REAL)) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c1 END)AND(((rt0.c3)=(vt1.c0)))))AND(x'')) DESC  NULLS LAST);
SELECT * FROM vt1, t0, rt0 WHERE (CAST(-743584882 AS REAL)) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c1 END)AND(((rt0.c3)==(vt1.c0)))))AND(x'')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(-743584882 AS REAL)) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c1 END)AND(((rt0.c3)=(vt1.c0)))))AND(x'')) DESC  NULLS LAST);
SELECT * FROM vt1, t0, rt0 WHERE (CAST(-743584882 AS REAL)) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c1 END)AND(((rt0.c3)==(vt1.c0)))))AND(x'')) DESC  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE ((((((t0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c5))))IS NOT(((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c5))))IS NOT(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((t0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c5))))IS NOT(((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c5))))IS NOT(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((t0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c5))))IS NOT(((rt0.c3) NOT NULL))));
SELECT ALL * FROM t0 WHERE ((~ (((t0.c4)OR(t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c4)OR(t0.c3))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c4)OR(t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c4)OR(t0.c3))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c4)OR(t0.c3)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3 IN ())))>=((((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))))) ORDER BY ((((rt0.c4, rt0.c1, rt0.c3))>=((rt0.c3, rt0.c6, rt0.c1))) IN ()) ASC, CAST(IFNULL(DISTINCT rt0.c0, rt0.c2) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 IN ())))>=((((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4, rt0.c1, rt0.c3))>=((rt0.c3, rt0.c6, rt0.c1))) IN ()) ASC, CAST(IFNULL(DISTINCT rt0.c0, rt0.c2) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3 IN ())))>=((((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))))) ORDER BY ((((rt0.c4, rt0.c1, rt0.c3))>=((rt0.c3, rt0.c6, rt0.c1))) IN ()) ASC, CAST(IFNULL(DISTINCT rt0.c0, rt0.c2) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 IN ())))>=((((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4, rt0.c1, rt0.c3))>=((rt0.c3, rt0.c6, rt0.c1))) IN ()) ASC, CAST(IFNULL(DISTINCT rt0.c0, rt0.c2) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3 IN ())))>=((((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))))) ORDER BY ((((rt0.c4, rt0.c1, rt0.c3))>=((rt0.c3, rt0.c6, rt0.c1))) IN ()) ASC, CAST(IFNULL(DISTINCT rt0.c0, rt0.c2) AS BLOB)  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((rt0.c5)OR(rt0.c3)))OR(rt0.c6))) BETWEEN ((rt0.c2 IN ())) AND (TRIM(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)OR(rt0.c3)))OR(rt0.c6))) BETWEEN ((rt0.c2 IN ())) AND (TRIM(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c5)OR(rt0.c3)))OR(rt0.c6))) BETWEEN ((rt0.c2 IN ())) AND (TRIM(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)OR(rt0.c3)))OR(rt0.c6))) BETWEEN ((rt0.c2 IN ())) AND (TRIM(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c5)OR(rt0.c3)))OR(rt0.c6))) BETWEEN ((rt0.c2 IN ())) AND (TRIM(rt0.c3))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN vt1.c1 THEN vt1.c2 ELSE rt0.c4 END COLLATE RTRIM) ORDER BY (((rt0.c3 IN (rt0.c3)))%(((x'0510')<(vt1.c1))))  NULLS FIRST, ((((((((CASE vt1.c1  WHEN vt1.c2 THEN rt0.c2 ELSE vt1.c1 END)OR(((vt1.c0) NOT NULL))))OR(HEX(vt1.c1))))AND(rt0.c6)))OR(0.7928256338070818)) ASC  NULLS LAST, ((rt0.c6) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c1 THEN vt1.c2 ELSE rt0.c4 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3 IN (rt0.c3)))%(((x'0510')<(vt1.c1))))  NULLS FIRST, ((((((((CASE vt1.c1  WHEN vt1.c2 THEN rt0.c2 ELSE vt1.c1 END)OR(((vt1.c0) NOT NULL))))OR(HEX(vt1.c1))))AND(rt0.c6)))OR(0.7928256338070818)) ASC  NULLS LAST, ((rt0.c6) IS TRUE) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN vt1.c1 THEN vt1.c2 ELSE rt0.c4 END COLLATE RTRIM) ORDER BY (((rt0.c3 IN (rt0.c3)))%(((x'0510')<(vt1.c1))))  NULLS FIRST, ((((((((CASE vt1.c1  WHEN vt1.c2 THEN rt0.c2 ELSE vt1.c1 END)OR(((vt1.c0) NOT NULL))))OR(HEX(vt1.c1))))AND(rt0.c6)))OR(0.7928256338070818)) ASC  NULLS LAST, ((rt0.c6) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c1 THEN vt1.c2 ELSE rt0.c4 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3 IN (rt0.c3)))%(((x'0510')<(vt1.c1))))  NULLS FIRST, ((((((((CASE vt1.c1  WHEN vt1.c2 THEN rt0.c2 ELSE vt1.c1 END)OR(((vt1.c0) NOT NULL))))OR(HEX(vt1.c1))))AND(rt0.c6)))OR(0.7928256338070818)) ASC  NULLS LAST, ((rt0.c6) IS TRUE) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN vt1.c1 THEN vt1.c2 ELSE rt0.c4 END COLLATE RTRIM) ORDER BY (((rt0.c3 IN (rt0.c3)))%(((x'0510')<(vt1.c1))))  NULLS FIRST, ((((((((CASE vt1.c1  WHEN vt1.c2 THEN rt0.c2 ELSE vt1.c1 END)OR(((vt1.c0) NOT NULL))))OR(HEX(vt1.c1))))AND(rt0.c6)))OR(0.7928256338070818)) ASC  NULLS LAST, ((rt0.c6) IS TRUE) ASC;
SELECT * FROM t0, rt0, vt1 WHERE (((((rt0.c4)+(rt0.c1)))>=(CASE rt0.c5  WHEN vt1.c2 THEN t0.c3 END))) ORDER BY ((((t0.c3))>=((vt1.c0))) IN (((vt1.c0)||(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)+(rt0.c1)))>=(CASE rt0.c5  WHEN vt1.c2 THEN t0.c3 END))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((t0.c3))>=((vt1.c0))) IN (((vt1.c0)||(rt0.c2))))  NULLS FIRST);
SELECT * FROM t0, rt0, vt1 WHERE (((((rt0.c4)+(rt0.c1)))>=(CASE rt0.c5  WHEN vt1.c2 THEN t0.c3 END))) ORDER BY ((((t0.c3))>=((vt1.c0))) IN (((vt1.c0)||(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)+(rt0.c1)))>=(CASE rt0.c5  WHEN vt1.c2 THEN t0.c3 END))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((t0.c3))>=((vt1.c0))) IN (((vt1.c0)||(rt0.c2))))  NULLS FIRST);
SELECT * FROM t0, rt0, vt1 WHERE (((((rt0.c4)+(rt0.c1)))>=(CASE rt0.c5  WHEN vt1.c2 THEN t0.c3 END))) ORDER BY ((((t0.c3))>=((vt1.c0))) IN (((vt1.c0)||(rt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0 CROSS JOIN rt0 ON (CASE WHEN vt1.c2 THEN '0.017124955730801195' END IN ()) WHERE ((CAST(rt0.c1 AS BLOB) IN ((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c5)))))) ORDER BY (((rt0.c0) BETWEEN (t0.c3) AND (rt0.c3)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS BLOB) IN ((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c5)))))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt0 ON (CASE WHEN vt1.c2 THEN '0.017124955730801195' END IN ()) ORDER BY (((rt0.c0) BETWEEN (t0.c3) AND (rt0.c3)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 CROSS JOIN rt0 ON (CASE WHEN vt1.c2 THEN '0.017124955730801195' END IN ()) WHERE ((CAST(rt0.c1 AS BLOB) IN ((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c5)))))) ORDER BY (((rt0.c0) BETWEEN (t0.c3) AND (rt0.c3)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS BLOB) IN ((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c5)))))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt0 ON (CASE WHEN vt1.c2 THEN '0.017124955730801195' END IN ()) ORDER BY (((rt0.c0) BETWEEN (t0.c3) AND (rt0.c3)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 CROSS JOIN rt0 ON (CASE WHEN vt1.c2 THEN '0.017124955730801195' END IN ()) WHERE ((CAST(rt0.c1 AS BLOB) IN ((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c5)))))) ORDER BY (((rt0.c0) BETWEEN (t0.c3) AND (rt0.c3)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((((((((vt1.c1)OR(((rt0.c4) NOT BETWEEN (t0.c0) AND (t0.c3)))))AND(HEX('607454607'))))AND(((x'5afb467d542b') ISNULL))))OR(rt0.c2)))AND(((t0.c0)|('')))))AND(2013945173)) INNER JOIN t0 ON (~ ((((vt1.c2, vt1.c1, -9.39478366E8, rt0.c1, rt0.c0))!=((x'', t0.c0, rt0.c3, t0.c4, rt0.c6))))) WHERE (CASE t0.c3  WHEN rt0.c1 THEN vt1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c3  WHEN rt0.c1 THEN vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((((((((vt1.c1)OR(((rt0.c4) NOT BETWEEN (t0.c0) AND (t0.c3)))))AND(HEX('607454607'))))AND(((x'5afb467d542b') ISNULL))))OR(rt0.c2)))AND(((t0.c0)|('')))))AND(2013945173)) INNER JOIN t0 ON (~ ((((vt1.c2, vt1.c1, -9.39478366E8, rt0.c1, rt0.c0))!=((x'', t0.c0, rt0.c3, t0.c4, rt0.c6))))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((((((((vt1.c1)OR(((rt0.c4) NOT BETWEEN (t0.c0) AND (t0.c3)))))AND(HEX('607454607'))))AND(((x'5afb467d542b') ISNULL))))OR(rt0.c2)))AND(((t0.c0)|('')))))AND(2013945173)) INNER JOIN t0 ON (~ ((((vt1.c2, vt1.c1, -9.39478366E8, rt0.c1, rt0.c0))!=((x'', t0.c0, rt0.c3, t0.c4, rt0.c6))))) WHERE (CASE t0.c3  WHEN rt0.c1 THEN vt1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c3  WHEN rt0.c1 THEN vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((((((((vt1.c1)OR(((rt0.c4) NOT BETWEEN (t0.c0) AND (t0.c3)))))AND(HEX('607454607'))))AND(((x'5afb467d542b') ISNULL))))OR(rt0.c2)))AND(((t0.c0)|('')))))AND(2013945173)) INNER JOIN t0 ON (~ ((((vt1.c2, vt1.c1, -9.39478366E8, rt0.c1, rt0.c0))!=((x'', t0.c0, rt0.c3, t0.c4, rt0.c6))))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c1, t0.c1, rt0.c5, rt0.c4, t0.c2))>((rt0.c1, t0.c1, '-58379346', rt0.c5, t0.c0))))IS((- ('-1879383095'))))) ORDER BY ((CASE WHEN t0.c1 THEN rt0.c0 END) BETWEEN (((rt0.c6) NOTNULL)) AND (((rt0.c6)&(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, t0.c1, rt0.c5, rt0.c4, t0.c2))>((rt0.c1, t0.c1, '-58379346', rt0.c5, t0.c0))))IS((- ('-1879383095'))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE WHEN t0.c1 THEN rt0.c0 END) BETWEEN (((rt0.c6) NOTNULL)) AND (((rt0.c6)&(t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c1, t0.c1, rt0.c5, rt0.c4, t0.c2))>((rt0.c1, t0.c1, '-58379346', rt0.c5, t0.c0))))IS((- ('-1879383095'))))) ORDER BY ((CASE WHEN t0.c1 THEN rt0.c0 END) BETWEEN (((rt0.c6) NOTNULL)) AND (((rt0.c6)&(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, t0.c1, rt0.c5, rt0.c4, t0.c2))>((rt0.c1, t0.c1, '-58379346', rt0.c5, t0.c0))))IS((- ('-1879383095'))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE WHEN t0.c1 THEN rt0.c0 END) BETWEEN (((rt0.c6) NOTNULL)) AND (((rt0.c6)&(t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c1, t0.c1, rt0.c5, rt0.c4, t0.c2))>((rt0.c1, t0.c1, '-58379346', rt0.c5, t0.c0))))IS((- ('-1879383095'))))) ORDER BY ((CASE WHEN t0.c1 THEN rt0.c0 END) BETWEEN (((rt0.c6) NOTNULL)) AND (((rt0.c6)&(t0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((x'')OR(rt0.c0))  WHEN (- (rt0.c4)) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((rt0.c0)|(rt0.c5)) END WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((x'')OR(rt0.c0))  WHEN (- (rt0.c4)) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((rt0.c0)|(rt0.c5)) END);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((x'')OR(rt0.c0))  WHEN (- (rt0.c4)) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((rt0.c0)|(rt0.c5)) END WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((x'')OR(rt0.c0))  WHEN (- (rt0.c4)) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((rt0.c0)|(rt0.c5)) END);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((x'')OR(rt0.c0))  WHEN (- (rt0.c4)) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((rt0.c0)|(rt0.c5)) END WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (NOT ('\u%]')) WHERE (CAST((t0.c0 IN ()) AS TEXT)) ORDER BY (((((t0.c0)OR(t0.c0)))OR(t0.c1)) IN (((vt1.c2) NOT BETWEEN (t0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (NOT ('\u%]')) ORDER BY (((((t0.c0)OR(t0.c0)))OR(t0.c1)) IN (((vt1.c2) NOT BETWEEN (t0.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (NOT ('\u%]')) WHERE (CAST((t0.c0 IN ()) AS TEXT)) ORDER BY (((((t0.c0)OR(t0.c0)))OR(t0.c1)) IN (((vt1.c2) NOT BETWEEN (t0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (NOT ('\u%]')) ORDER BY (((((t0.c0)OR(t0.c0)))OR(t0.c1)) IN (((vt1.c2) NOT BETWEEN (t0.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (NOT ('\u%]')) WHERE (CAST((t0.c0 IN ()) AS TEXT)) ORDER BY (((((t0.c0)OR(t0.c0)))OR(t0.c1)) IN (((vt1.c2) NOT BETWEEN (t0.c0) AND (vt1.c0))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)AND(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c5))))) ORDER BY ((((rt0.c5)AND(rt0.c0)))AND(rt0.c5)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)AND(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c5))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c5)AND(rt0.c0)))AND(rt0.c5)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)AND(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c5))))) ORDER BY ((((rt0.c5)AND(rt0.c0)))AND(rt0.c5)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)AND(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c5))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c5)AND(rt0.c0)))AND(rt0.c5)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)AND(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c5))))) ORDER BY ((((rt0.c5)AND(rt0.c0)))AND(rt0.c5)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((rt0.c1)IS(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((rt0.c1)IS(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((rt0.c1)IS(rt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (CAST(vt1.c2 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c2 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (CAST(vt1.c2 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c2 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (CAST(vt1.c2 AS TEXT) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE (json_array_length((~ (t0.c4)), CASE t0.c1  WHEN t0.c0 THEN t0.c3 WHEN t0.c0 THEN t0.c4 WHEN t0.c1 THEN t0.c1 END)) ORDER BY ((((((t0.c3)AND(t0.c2)))OR(t0.c3)))&(x''));
SELECT SUM(count) FROM (SELECT ((json_array_length((~ (t0.c4)), CASE t0.c1  WHEN t0.c0 THEN t0.c3 WHEN t0.c0 THEN t0.c4 WHEN t0.c1 THEN t0.c1 END)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c3)AND(t0.c2)))OR(t0.c3)))&(x'')));
SELECT ALL COUNT(*) FROM t0 WHERE (json_array_length((~ (t0.c4)), CASE t0.c1  WHEN t0.c0 THEN t0.c3 WHEN t0.c0 THEN t0.c4 WHEN t0.c1 THEN t0.c1 END)) ORDER BY ((((((t0.c3)AND(t0.c2)))OR(t0.c3)))&(x''));
SELECT SUM(count) FROM (SELECT ((json_array_length((~ (t0.c4)), CASE t0.c1  WHEN t0.c0 THEN t0.c3 WHEN t0.c0 THEN t0.c4 WHEN t0.c1 THEN t0.c1 END)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c3)AND(t0.c2)))OR(t0.c3)))&(x'')));
SELECT * FROM rt0, vt1, t0 WHERE ((((t0.c1) ISNULL) IN ())) ORDER BY vt1.c0 ASC, (~ (((t0.c3) ISNULL)))  NULLS LAST, ((((t0.c0)=(t0.c2))) NOT BETWEEN ('96680734') AND (((((rt0.c2)AND(rt0.c4)))OR(t0.c1)))), ((('1774649374', t0.c3, t0.c0)) BETWEEN (((rt0.c0 IN ()), CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c6 END, (rt0.c6 IN ()))) AND ((rt0.c0 COLLATE NOCASE, '-1879383095', (((''))<=((t0.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY vt1.c0 ASC, (~ (((t0.c3) ISNULL)))  NULLS LAST, ((((t0.c0)==(t0.c2))) NOT BETWEEN ('96680734') AND (((((rt0.c2)AND(rt0.c4)))OR(t0.c1)))), ((('1774649374', t0.c3, t0.c0)) BETWEEN (((rt0.c0 IN ()), CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c6 END, (rt0.c6 IN ()))) AND ((rt0.c0 COLLATE NOCASE, '-1879383095', (((''))<=((t0.c0)))))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1, t0 WHERE ((((t0.c1) ISNULL) IN ())) ORDER BY vt1.c0 ASC, (~ (((t0.c3) ISNULL)))  NULLS LAST, ((((t0.c0)=(t0.c2))) NOT BETWEEN ('96680734') AND (((((rt0.c2)AND(rt0.c4)))OR(t0.c1)))), ((('1774649374', t0.c3, t0.c0)) BETWEEN (((rt0.c0 IN ()), CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c6 END, (rt0.c6 IN ()))) AND ((rt0.c0 COLLATE NOCASE, '-1879383095', (((''))<=((t0.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY vt1.c0 ASC, (~ (((t0.c3) ISNULL)))  NULLS LAST, ((((t0.c0)==(t0.c2))) NOT BETWEEN ('96680734') AND (((((rt0.c2)AND(rt0.c4)))OR(t0.c1)))), ((('1774649374', t0.c3, t0.c0)) BETWEEN (((rt0.c0 IN ()), CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c6 END, (rt0.c6 IN ()))) AND ((rt0.c0 COLLATE NOCASE, '-1879383095', (((''))<=((t0.c0)))))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1, t0 WHERE ((((t0.c1) ISNULL) IN ())) ORDER BY vt1.c0 ASC, (~ (((t0.c3) ISNULL)))  NULLS LAST, ((((t0.c0)=(t0.c2))) NOT BETWEEN ('96680734') AND (((((rt0.c2)AND(rt0.c4)))OR(t0.c1)))), ((('1774649374', t0.c3, t0.c0)) BETWEEN (((rt0.c0 IN ()), CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c6 END, (rt0.c6 IN ()))) AND ((rt0.c0 COLLATE NOCASE, '-1879383095', (((''))<=((t0.c0)))))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (CAST(((0.9868834660651439)<=(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((0.9868834660651439)<=(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((0.9868834660651439)<=(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((0.9868834660651439)<=(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((0.9868834660651439)<=(vt1.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN vt1 WHERE (CAST((- (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN vt1 WHERE (CAST((- (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN vt1 WHERE (CAST((- (vt1.c0)) AS BLOB));
SELECT * FROM vt1, t0 INNER JOIN rt0 ON ((CAST(rt0.c5 AS TEXT))!=(LIKELIHOOD(vt1.c0, 0.7198621622067206))) WHERE ((UPPER(t0.c1) IN ())) ORDER BY ((x'') NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((t0.c1)==(t0.c2)))) DESC  NULLS FIRST, CAST(((vt1.c2) NOT BETWEEN (t0.c4) AND (t0.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT (((UPPER(t0.c1) IN ())) IS TRUE)  as count FROM vt1, t0 INNER JOIN rt0 ON ((CAST(rt0.c5 AS TEXT))<>(LIKELIHOOD(vt1.c0, 0.7198621622067206))) ORDER BY ((x'') NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((t0.c1)==(t0.c2)))) DESC  NULLS FIRST, CAST(((vt1.c2) NOT BETWEEN (t0.c4) AND (t0.c1)) AS TEXT));
SELECT * FROM vt1, t0 INNER JOIN rt0 ON ((CAST(rt0.c5 AS TEXT))!=(LIKELIHOOD(vt1.c0, 0.7198621622067206))) WHERE ((UPPER(t0.c1) IN ())) ORDER BY ((x'') NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((t0.c1)==(t0.c2)))) DESC  NULLS FIRST, CAST(((vt1.c2) NOT BETWEEN (t0.c4) AND (t0.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT (((UPPER(t0.c1) IN ())) IS TRUE)  as count FROM vt1, t0 INNER JOIN rt0 ON ((CAST(rt0.c5 AS TEXT))<>(LIKELIHOOD(vt1.c0, 0.7198621622067206))) ORDER BY ((x'') NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((t0.c1)==(t0.c2)))) DESC  NULLS FIRST, CAST(((vt1.c2) NOT BETWEEN (t0.c4) AND (t0.c1)) AS TEXT));
SELECT * FROM vt1, t0 INNER JOIN rt0 ON ((CAST(rt0.c5 AS TEXT))!=(LIKELIHOOD(vt1.c0, 0.7198621622067206))) WHERE ((UPPER(t0.c1) IN ())) ORDER BY ((x'') NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((t0.c1)==(t0.c2)))) DESC  NULLS FIRST, CAST(((vt1.c2) NOT BETWEEN (t0.c4) AND (t0.c1)) AS TEXT);
SELECT * FROM t0 INNER JOIN rt0 ON UPPER(DISTINCT (- (t0.c2))) FULL OUTER JOIN vt1 ON ((CASE WHEN t0.c4 THEN t0.c1 ELSE rt0.c0 END)||((('')OR(t0.c4)))) WHERE (((((t0.c3)!=(rt0.c1))) NOT BETWEEN (TRIM(rt0.c0)) AND ((NOT (rt0.c3))))) ORDER BY ((((((vt1.c1)OR(vt1.c0)))AND(x'7fa8'))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((((vt1.c2)AND(rt0.c2)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c3)!=(rt0.c1))) NOT BETWEEN (TRIM(rt0.c0)) AND ((NOT (rt0.c3))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON UPPER(DISTINCT (- (t0.c2))) FULL OUTER JOIN vt1 ON ((CASE WHEN t0.c4 THEN t0.c1 ELSE rt0.c0 END)||((('')OR(t0.c4)))) ORDER BY ((((((vt1.c1)OR(vt1.c0)))AND(x'7fa8'))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((((vt1.c2)AND(rt0.c2)))OR(rt0.c1)))));
SELECT * FROM t0 INNER JOIN rt0 ON UPPER(DISTINCT (- (t0.c2))) FULL OUTER JOIN vt1 ON ((CASE WHEN t0.c4 THEN t0.c1 ELSE rt0.c0 END)||((('')OR(t0.c4)))) WHERE (((((t0.c3)!=(rt0.c1))) NOT BETWEEN (TRIM(rt0.c0)) AND ((NOT (rt0.c3))))) ORDER BY ((((((vt1.c1)OR(vt1.c0)))AND(x'7fa8'))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((((vt1.c2)AND(rt0.c2)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c3)!=(rt0.c1))) NOT BETWEEN (TRIM(rt0.c0)) AND ((NOT (rt0.c3))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON UPPER(DISTINCT (- (t0.c2))) FULL OUTER JOIN vt1 ON ((CASE WHEN t0.c4 THEN t0.c1 ELSE rt0.c0 END)||((('')OR(t0.c4)))) ORDER BY ((((((vt1.c1)OR(vt1.c0)))AND(x'7fa8'))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((((vt1.c2)AND(rt0.c2)))OR(rt0.c1)))));
SELECT * FROM t0 INNER JOIN rt0 ON UPPER(DISTINCT (- (t0.c2))) FULL OUTER JOIN vt1 ON ((CASE WHEN t0.c4 THEN t0.c1 ELSE rt0.c0 END)||((('')OR(t0.c4)))) WHERE (((((t0.c3)!=(rt0.c1))) NOT BETWEEN (TRIM(rt0.c0)) AND ((NOT (rt0.c3))))) ORDER BY ((((((vt1.c1)OR(vt1.c0)))AND(x'7fa8'))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((((vt1.c2)AND(rt0.c2)))OR(rt0.c1))));
SELECT ALL COUNT(*) FROM vt1 WHERE ('429724813') ORDER BY ((((vt1.c0)|('523000129')))GLOB(CAST(vt1.c1 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('429724813') IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)|('523000129')))GLOB(CAST(vt1.c1 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ('429724813') ORDER BY ((((vt1.c0)|('523000129')))GLOB(CAST(vt1.c1 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('429724813') IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)|('523000129')))GLOB(CAST(vt1.c1 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ('429724813') ORDER BY ((((vt1.c0)|('523000129')))GLOB(CAST(vt1.c1 AS BLOB))) ASC;
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c2  WHEN NULL THEN t0.c1 WHEN x'' THEN t0.c2 WHEN 0.9384595009377488 THEN t0.c2 ELSE t0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c2  WHEN NULL THEN t0.c1 WHEN x'' THEN t0.c2 WHEN 0.9384595009377488 THEN t0.c2 ELSE t0.c0 END) ISNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c2  WHEN NULL THEN t0.c1 WHEN x'' THEN t0.c2 WHEN 0.9384595009377488 THEN t0.c2 ELSE t0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c2  WHEN NULL THEN t0.c1 WHEN x'' THEN t0.c2 WHEN 0.9384595009377488 THEN t0.c2 ELSE t0.c0 END) ISNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c2  WHEN NULL THEN t0.c1 WHEN x'' THEN t0.c2 WHEN 0.9384595009377488 THEN t0.c2 ELSE t0.c0 END) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c1))>=((vt1.c1))))AND(((vt1.c0)AND(vt1.c0)))))AND(((((((((vt1.c0)AND(vt1.c2)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c2))))) ORDER BY UNLIKELY(DISTINCT PRINTF(vt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c1))>=((vt1.c1))))AND(((vt1.c0)AND(vt1.c0)))))AND(((((((((vt1.c0)AND(vt1.c2)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY UNLIKELY(DISTINCT PRINTF(vt1.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c1))>=((vt1.c1))))AND(((vt1.c0)AND(vt1.c0)))))AND(((((((((vt1.c0)AND(vt1.c2)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c2))))) ORDER BY UNLIKELY(DISTINCT PRINTF(vt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c1))>=((vt1.c1))))AND(((vt1.c0)AND(vt1.c0)))))AND(((((((((vt1.c0)AND(vt1.c2)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY UNLIKELY(DISTINCT PRINTF(vt1.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c1))>=((vt1.c1))))AND(((vt1.c0)AND(vt1.c0)))))AND(((((((((vt1.c0)AND(vt1.c2)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c2))))) ORDER BY UNLIKELY(DISTINCT PRINTF(vt1.c1))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((x'')>=(vt1.c2)) COLLATE NOCASE) ORDER BY (((((rt0.c3))<=((vt1.c2)))) IS FALSE)  NULLS LAST, (((((t0.c0)OR(rt0.c6)))AND(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((x'')>=(vt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY (((((rt0.c3))<=((vt1.c2)))) IS FALSE)  NULLS LAST, (((((t0.c0)OR(rt0.c6)))AND(rt0.c1)) IN ()));
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((x'')>=(vt1.c2)) COLLATE NOCASE) ORDER BY (((((rt0.c3))<=((vt1.c2)))) IS FALSE)  NULLS LAST, (((((t0.c0)OR(rt0.c6)))AND(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((x'')>=(vt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY (((((rt0.c3))<=((vt1.c2)))) IS FALSE)  NULLS LAST, (((((t0.c0)OR(rt0.c6)))AND(rt0.c1)) IN ()));
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((x'')>=(vt1.c2)) COLLATE NOCASE) ORDER BY (((((rt0.c3))<=((vt1.c2)))) IS FALSE)  NULLS LAST, (((((t0.c0)OR(rt0.c6)))AND(rt0.c1)) IN ());
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c2 COLLATE RTRIM)/(vt1.c2))) ORDER BY ((((((((((((((vt1.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c5)))OR(rt0.c4)))OR(rt0.c1)))/('')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)/(vt1.c2))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((((((((vt1.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c5)))OR(rt0.c4)))OR(rt0.c1)))/('')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c2 COLLATE RTRIM)/(vt1.c2))) ORDER BY ((((((((((((((vt1.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c5)))OR(rt0.c4)))OR(rt0.c1)))/('')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)/(vt1.c2))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((((((((vt1.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c5)))OR(rt0.c4)))OR(rt0.c1)))/('')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c2 COLLATE RTRIM)/(vt1.c2))) ORDER BY ((((((((((((((vt1.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c5)))OR(rt0.c4)))OR(rt0.c1)))/('')) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((((((((((vt1.c0)OR(t0.c4)))AND(vt1.c0)))OR(rt0.c6)))AND(t0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(t0.c4)))AND(vt1.c0)))OR(rt0.c6)))AND(t0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((((((((((vt1.c0)OR(t0.c4)))AND(vt1.c0)))OR(rt0.c6)))AND(t0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(t0.c4)))AND(vt1.c0)))OR(rt0.c6)))AND(t0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((((((((((vt1.c0)OR(t0.c4)))AND(vt1.c0)))OR(rt0.c6)))AND(t0.c3))) IS FALSE));
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c1 IN ())) IS FALSE) WHERE ((NOT (CASE WHEN t0.c2 THEN t0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c6 THEN t0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN t0.c2 THEN t0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c6 THEN t0.c3 END))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c1 IN ())) IS FALSE));
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c1 IN ())) IS FALSE) WHERE ((NOT (CASE WHEN t0.c2 THEN t0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c6 THEN t0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN t0.c2 THEN t0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c6 THEN t0.c3 END))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c1 IN ())) IS FALSE));
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c1 IN ())) IS FALSE) WHERE ((NOT (CASE WHEN t0.c2 THEN t0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c6 THEN t0.c3 END)));
SELECT COUNT(*) FROM t0, rt0 WHERE (((x'cab1')/((((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((x'cab1')/((((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((x'cab1')/((((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((x'cab1')/((((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((x'cab1')/((((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c1))))));
SELECT ALL * FROM vt1, rt0 WHERE (COALESCE(DISTINCT ((rt0.c0)>(vt1.c2)), (NOT (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((rt0.c0)>(vt1.c2)), (NOT (rt0.c4)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (COALESCE(DISTINCT ((rt0.c0)>(vt1.c2)), (NOT (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((rt0.c0)>(vt1.c2)), (NOT (rt0.c4)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (COALESCE(DISTINCT ((rt0.c0)>(vt1.c2)), (NOT (rt0.c4))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (NULL COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((((ABS(t0.c2))OR(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c1)))))OR((((vt1.c0, t0.c2, rt0.c0))<>((rt0.c0, rt0.c0, '1306857566'))))) RIGHT OUTER JOIN rt0 ON 0.08145288801458783 WHERE ((- (STRFTIME(t0.c1, rt0.c3, vt1.c0)))) ORDER BY (((((rt0.c1) NOTNULL)))>((((rt0.c6)|(t0.c4))))) ASC;
SELECT SUM(count) FROM (SELECT (((- (STRFTIME(t0.c1, rt0.c3, vt1.c0)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((((ABS(t0.c2))OR(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c1)))))OR((((vt1.c0, t0.c2, rt0.c0))<>((rt0.c0, rt0.c0, '1306857566'))))) RIGHT OUTER JOIN rt0 ON 0.08145288801458783 ORDER BY (((((rt0.c1) NOTNULL)))>((((rt0.c6)|(t0.c4))))) ASC);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((((ABS(t0.c2))OR(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c1)))))OR((((vt1.c0, t0.c2, rt0.c0))<>((rt0.c0, rt0.c0, '1306857566'))))) RIGHT OUTER JOIN rt0 ON 0.08145288801458783 WHERE ((- (STRFTIME(t0.c1, rt0.c3, vt1.c0)))) ORDER BY (((((rt0.c1) NOTNULL)))>((((rt0.c6)|(t0.c4))))) ASC;
SELECT SUM(count) FROM (SELECT (((- (STRFTIME(t0.c1, rt0.c3, vt1.c0)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((((ABS(t0.c2))OR(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c1)))))OR((((vt1.c0, t0.c2, rt0.c0))<>((rt0.c0, rt0.c0, '1306857566'))))) RIGHT OUTER JOIN rt0 ON 0.08145288801458783 ORDER BY (((((rt0.c1) NOTNULL)))>((((rt0.c6)|(t0.c4))))) ASC);
SELECT * FROM t0, vt1, rt0 WHERE (((0.34622680236420555) NOT BETWEEN (((rt0.c5)|(rt0.c0))) AND (CASE rt0.c6  WHEN t0.c1 THEN x'' ELSE rt0.c5 END))) ORDER BY ((JULIANDAY(rt0.c3, t0.c4, rt0.c2, rt0.c5, vt1.c0)) BETWEEN (((t0.c4)|(rt0.c4))) AND (((t0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.34622680236420555) NOT BETWEEN (((rt0.c5)|(rt0.c0))) AND (CASE rt0.c6  WHEN t0.c1 THEN x'' ELSE rt0.c5 END))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((JULIANDAY(rt0.c3, t0.c4, rt0.c2, rt0.c5, vt1.c0)) BETWEEN (((t0.c4)|(rt0.c4))) AND (((t0.c2) NOTNULL)))  NULLS LAST);
SELECT * FROM t0, vt1, rt0 WHERE (((0.34622680236420555) NOT BETWEEN (((rt0.c5)|(rt0.c0))) AND (CASE rt0.c6  WHEN t0.c1 THEN x'' ELSE rt0.c5 END))) ORDER BY ((JULIANDAY(rt0.c3, t0.c4, rt0.c2, rt0.c5, vt1.c0)) BETWEEN (((t0.c4)|(rt0.c4))) AND (((t0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.34622680236420555) NOT BETWEEN (((rt0.c5)|(rt0.c0))) AND (CASE rt0.c6  WHEN t0.c1 THEN x'' ELSE rt0.c5 END))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((JULIANDAY(rt0.c3, t0.c4, rt0.c2, rt0.c5, vt1.c0)) BETWEEN (((t0.c4)|(rt0.c4))) AND (((t0.c2) NOTNULL)))  NULLS LAST);
SELECT * FROM t0, vt1, rt0 WHERE (((0.34622680236420555) NOT BETWEEN (((rt0.c5)|(rt0.c0))) AND (CASE rt0.c6  WHEN t0.c1 THEN x'' ELSE rt0.c5 END))) ORDER BY ((JULIANDAY(rt0.c3, t0.c4, rt0.c2, rt0.c5, vt1.c0)) BETWEEN (((t0.c4)|(rt0.c4))) AND (((t0.c2) NOTNULL)))  NULLS LAST;
SELECT ALL * FROM vt1, rt0, t0 WHERE ((~ ((NOT (t0.c1))))) ORDER BY ((((((vt1.c0, rt0.c6, vt1.c0))=((vt1.c2, t0.c4, t0.c3)))))<>(((('-58379346') BETWEEN (rt0.c5) AND (vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (t0.c1))))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, t0 ORDER BY ((((((vt1.c0, rt0.c6, vt1.c0))=((vt1.c2, t0.c4, t0.c3)))))!=(((('-58379346') BETWEEN (rt0.c5) AND (vt1.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, t0 WHERE ((~ ((NOT (t0.c1))))) ORDER BY ((((((vt1.c0, rt0.c6, vt1.c0))=((vt1.c2, t0.c4, t0.c3)))))<>(((('-58379346') BETWEEN (rt0.c5) AND (vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (t0.c1))))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, t0 ORDER BY ((((((vt1.c0, rt0.c6, vt1.c0))=((vt1.c2, t0.c4, t0.c3)))))!=(((('-58379346') BETWEEN (rt0.c5) AND (vt1.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, t0 WHERE ((~ ((NOT (t0.c1))))) ORDER BY ((((((vt1.c0, rt0.c6, vt1.c0))=((vt1.c2, t0.c4, t0.c3)))))<>(((('-58379346') BETWEEN (rt0.c5) AND (vt1.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((- (((vt1.c2)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c2)-(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- (((vt1.c2)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c2)-(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- (((vt1.c2)-(vt1.c0)))));
SELECT ALL * FROM vt1, rt0 WHERE ((((((((((((((((vt1.c0))=((rt0.c6))))AND(((('')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))))OR(((NULL) BETWEEN (rt0.c4) AND (vt1.c0)))))OR(rt0.c5)))OR(rt0.c0)))OR((~ (vt1.c1)))))AND((((rt0.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((vt1.c0))==((rt0.c6))))AND(((('')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))))OR(((NULL) BETWEEN (rt0.c4) AND (vt1.c0)))))OR(rt0.c5)))OR(rt0.c0)))OR((~ (vt1.c1)))))AND((((rt0.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c3)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((((((((((((((vt1.c0))=((rt0.c6))))AND(((('')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))))OR(((NULL) BETWEEN (rt0.c4) AND (vt1.c0)))))OR(rt0.c5)))OR(rt0.c0)))OR((~ (vt1.c1)))))AND((((rt0.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((vt1.c0))==((rt0.c6))))AND(((('')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))))OR(((NULL) BETWEEN (rt0.c4) AND (vt1.c0)))))OR(rt0.c5)))OR(rt0.c0)))OR((~ (vt1.c1)))))AND((((rt0.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c3)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((((((((((((((vt1.c0))=((rt0.c6))))AND(((('')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))))OR(((NULL) BETWEEN (rt0.c4) AND (vt1.c0)))))OR(rt0.c5)))OR(rt0.c0)))OR((~ (vt1.c1)))))AND((((rt0.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c3))))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)<>(vt1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)!=(vt1.c2)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)<>(vt1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)!=(vt1.c2)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)<>(vt1.c2)) AS INTEGER));
SELECT * FROM t0, rt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c2)))) AND (CAST(rt0.c2 AS REAL)))) ORDER BY (CASE x'810e'  WHEN vt1.c1 THEN rt0.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c2)))) AND (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY (CASE x'810e'  WHEN vt1.c1 THEN rt0.c1 END IN ())  NULLS LAST);
SELECT * FROM t0, rt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c2)))) AND (CAST(rt0.c2 AS REAL)))) ORDER BY (CASE x'810e'  WHEN vt1.c1 THEN rt0.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c2)))) AND (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY (CASE x'810e'  WHEN vt1.c1 THEN rt0.c1 END IN ())  NULLS LAST);
SELECT * FROM t0, rt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c2)))) AND (CAST(rt0.c2 AS REAL)))) ORDER BY (CASE x'810e'  WHEN vt1.c1 THEN rt0.c1 END IN ())  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE ((- (((rt0.c6)AND(rt0.c4))))) ORDER BY ((t0.c2 COLLATE BINARY)>>((t0.c3 IN ()))), json_object(vt1.c2, HEX(DISTINCT t0.c2))  NULLS FIRST, SQLITE_COMPILEOPTION_GET((- (t0.c4))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c6)AND(rt0.c4))))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((t0.c2 COLLATE BINARY)>>((t0.c3 IN ()))), json_object(vt1.c2, HEX(DISTINCT t0.c2))  NULLS FIRST, SQLITE_COMPILEOPTION_GET((- (t0.c4))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE ((- (((rt0.c6)AND(rt0.c4))))) ORDER BY ((t0.c2 COLLATE BINARY)>>((t0.c3 IN ()))), json_object(vt1.c2, HEX(DISTINCT t0.c2))  NULLS FIRST, SQLITE_COMPILEOPTION_GET((- (t0.c4))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c6)AND(rt0.c4))))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((t0.c2 COLLATE BINARY)>>((t0.c3 IN ()))), json_object(vt1.c2, HEX(DISTINCT t0.c2))  NULLS FIRST, SQLITE_COMPILEOPTION_GET((- (t0.c4))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE ((- (((rt0.c6)AND(rt0.c4))))) ORDER BY ((t0.c2 COLLATE BINARY)>>((t0.c3 IN ()))), json_object(vt1.c2, HEX(DISTINCT t0.c2))  NULLS FIRST, SQLITE_COMPILEOPTION_GET((- (t0.c4))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN (rt0.c0) AND ((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((t0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS BLOB)) NOT BETWEEN (rt0.c0) AND ((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((t0.c3)))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN (rt0.c0) AND ((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((t0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS BLOB)) NOT BETWEEN (rt0.c0) AND ((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((t0.c3)))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN (rt0.c0) AND ((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((t0.c3))))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON t0.c2 RIGHT OUTER JOIN vt1 ON ((CAST('i꣒6G' AS REAL)) NOT BETWEEN (CASE rt0.c5  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c5 END) AND (TRIM(rt0.c3))) WHERE ((((vt1.c1)) NOT BETWEEN ((x'')) AND (((NOT (rt0.c5))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) NOT BETWEEN ((x'')) AND (((NOT (rt0.c5)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON t0.c2 RIGHT OUTER JOIN vt1 ON ((CAST('i꣒6G' AS REAL)) NOT BETWEEN (CASE rt0.c5  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c5 END) AND (TRIM(rt0.c3))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON t0.c2 RIGHT OUTER JOIN vt1 ON ((CAST('i꣒6G' AS REAL)) NOT BETWEEN (CASE rt0.c5  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c5 END) AND (TRIM(rt0.c3))) WHERE ((((vt1.c1)) NOT BETWEEN ((x'')) AND (((NOT (rt0.c5))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) NOT BETWEEN ((x'')) AND (((NOT (rt0.c5)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON t0.c2 RIGHT OUTER JOIN vt1 ON ((CAST('i꣒6G' AS REAL)) NOT BETWEEN (CASE rt0.c5  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c5 END) AND (TRIM(rt0.c3))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON t0.c2 RIGHT OUTER JOIN vt1 ON ((CAST('i꣒6G' AS REAL)) NOT BETWEEN (CASE rt0.c5  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c5 END) AND (TRIM(rt0.c3))) WHERE ((((vt1.c1)) NOT BETWEEN ((x'')) AND (((NOT (rt0.c5))))));
SELECT * FROM t0, vt1 NATURAL JOIN rt0 WHERE ((- (t0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- (t0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN rt0);
SELECT * FROM t0, vt1 NATURAL JOIN rt0 WHERE ((- (t0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- (t0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN rt0);
SELECT * FROM t0, vt1 NATURAL JOIN rt0 WHERE ((- (t0.c3 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE ((- (((((((((0.27912866073831466)OR(rt0.c4)))AND(rt0.c6)))OR(rt0.c6)))AND(-1925055855))))) ORDER BY ((load_extension(rt0.c2))<(IFNULL(DISTINCT '0.7928256338070818', rt0.c6))) DESC;
SELECT SUM(count) FROM (SELECT (((- (((((((((0.27912866073831466)OR(rt0.c4)))AND(rt0.c6)))OR(rt0.c6)))AND(-1925055855))))) IS TRUE)  as count FROM rt0 ORDER BY ((load_extension(rt0.c2))<(IFNULL(DISTINCT '0.7928256338070818', rt0.c6))) DESC);
SELECT * FROM rt0 WHERE ((- (((((((((0.27912866073831466)OR(rt0.c4)))AND(rt0.c6)))OR(rt0.c6)))AND(-1925055855))))) ORDER BY ((load_extension(rt0.c2))<(IFNULL(DISTINCT '0.7928256338070818', rt0.c6))) DESC;
SELECT SUM(count) FROM (SELECT (((- (((((((((0.27912866073831466)OR(rt0.c4)))AND(rt0.c6)))OR(rt0.c6)))AND(-1925055855))))) IS TRUE)  as count FROM rt0 ORDER BY ((load_extension(rt0.c2))<(IFNULL(DISTINCT '0.7928256338070818', rt0.c6))) DESC);
SELECT * FROM rt0 WHERE ((- (((((((((0.27912866073831466)OR(rt0.c4)))AND(rt0.c6)))OR(rt0.c6)))AND(-1925055855))))) ORDER BY ((load_extension(rt0.c2))<(IFNULL(DISTINCT '0.7928256338070818', rt0.c6))) DESC;
SELECT ALL * FROM vt1 NOT INDEXED WHERE (((((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c1))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (((((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c1))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (((((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (CASE WHEN CAST(vt1.c2 AS INTEGER) THEN NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c2 AS INTEGER) THEN NULL END) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (CASE WHEN CAST(vt1.c2 AS INTEGER) THEN NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c2 AS INTEGER) THEN NULL END) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (CASE WHEN CAST(vt1.c2 AS INTEGER) THEN NULL END);
SELECT ALL COUNT(*) FROM t0 WHERE ('.kN\r');
SELECT SUM(count) FROM (SELECT ALL (('.kN\r') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('.kN\r');
SELECT SUM(count) FROM (SELECT ALL (('.kN\r') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('.kN\r');
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c0)) NOT BETWEEN ((TRIM(DISTINCT t0.c4, t0.c2))) AND (((- (vt1.c2)))))) ORDER BY (~ (((t0.c1) NOT NULL))) DESC  NULLS LAST, (NOT (CASE 0.19505519558724305  WHEN t0.c1 THEN t0.c1 ELSE vt1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((TRIM(DISTINCT t0.c4, t0.c2))) AND (((- (vt1.c2)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (~ (((t0.c1) NOT NULL))) DESC  NULLS LAST, (NOT (CASE 0.19505519558724305  WHEN t0.c1 THEN t0.c1 ELSE vt1.c2 END)) ASC);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c0)) NOT BETWEEN ((TRIM(DISTINCT t0.c4, t0.c2))) AND (((- (vt1.c2)))))) ORDER BY (~ (((t0.c1) NOT NULL))) DESC  NULLS LAST, (NOT (CASE 0.19505519558724305  WHEN t0.c1 THEN t0.c1 ELSE vt1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((TRIM(DISTINCT t0.c4, t0.c2))) AND (((- (vt1.c2)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (~ (((t0.c1) NOT NULL))) DESC  NULLS LAST, (NOT (CASE 0.19505519558724305  WHEN t0.c1 THEN t0.c1 ELSE vt1.c2 END)) ASC);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c0)) NOT BETWEEN ((TRIM(DISTINCT t0.c4, t0.c2))) AND (((- (vt1.c2)))))) ORDER BY (~ (((t0.c1) NOT NULL))) DESC  NULLS LAST, (NOT (CASE 0.19505519558724305  WHEN t0.c1 THEN t0.c1 ELSE vt1.c2 END)) ASC;
SELECT * FROM vt1, t0 CROSS JOIN rt0 ON ((CASE WHEN t0.c0 THEN 0.541091999593307 ELSE rt0.c0 END) NOT BETWEEN (((((((((t0.c4)OR(rt0.c4)))AND(vt1.c1)))OR(t0.c2)))AND(rt0.c0))) AND ('')) WHERE (CAST(t0.c3 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c3 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt0 ON ((CASE WHEN t0.c0 THEN 0.541091999593307 ELSE rt0.c0 END) NOT BETWEEN (((((((((t0.c4)OR(rt0.c4)))AND(vt1.c1)))OR(t0.c2)))AND(rt0.c0))) AND ('')));
SELECT * FROM vt1, t0 CROSS JOIN rt0 ON ((CASE WHEN t0.c0 THEN 0.541091999593307 ELSE rt0.c0 END) NOT BETWEEN (((((((((t0.c4)OR(rt0.c4)))AND(vt1.c1)))OR(t0.c2)))AND(rt0.c0))) AND ('')) WHERE (CAST(t0.c3 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c3 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt0 ON ((CASE WHEN t0.c0 THEN 0.541091999593307 ELSE rt0.c0 END) NOT BETWEEN (((((((((t0.c4)OR(rt0.c4)))AND(vt1.c1)))OR(t0.c2)))AND(rt0.c0))) AND ('')));
SELECT * FROM vt1, t0 CROSS JOIN rt0 ON ((CASE WHEN t0.c0 THEN 0.541091999593307 ELSE rt0.c0 END) NOT BETWEEN (((((((((t0.c4)OR(rt0.c4)))AND(vt1.c1)))OR(t0.c2)))AND(rt0.c0))) AND ('')) WHERE (CAST(t0.c3 AS INTEGER) COLLATE BINARY);
SELECT * FROM rt0 CROSS JOIN vt1 ON ((((t0.c1, t0.c1, t0.c4)) BETWEEN ((vt1.c1, t0.c3, rt0.c4)) AND ((vt1.c0, rt0.c3, rt0.c2))) IN ()) CROSS JOIN t0 ON (((((NOT (rt0.c4)))OR(0.032065864586990345)))OR(((((rt0.c2)AND(rt0.c1)))AND(t0.c1)))) WHERE (((((((t0.c3)OR(rt0.c5)))OR(rt0.c2)))!=(TRIM(DISTINCT rt0.c0, t0.c0)))) ORDER BY 0.08135327147205118 ASC, ((((((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (t0.c0)))AND((((vt1.c0))<>((rt0.c2))))))AND(((t0.c2) NOT NULL))))AND(NULL)))AND(0.02260231931715162)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c3)OR(rt0.c5)))OR(rt0.c2)))!=(TRIM(DISTINCT rt0.c0, t0.c0)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((t0.c1, t0.c1, t0.c4)) BETWEEN ((vt1.c1, t0.c3, rt0.c4)) AND ((vt1.c0, rt0.c3, rt0.c2))) IN ()) CROSS JOIN t0 ON (((((NOT (rt0.c4)))OR(0.032065864586990345)))OR(((((rt0.c2)AND(rt0.c1)))AND(t0.c1)))) ORDER BY 0.08135327147205118 ASC, ((((((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (t0.c0)))AND((((vt1.c0))!=((rt0.c2))))))AND(((t0.c2) NOT NULL))))AND(NULL)))AND(0.02260231931715162)) DESC);
SELECT * FROM rt0 CROSS JOIN vt1 ON ((((t0.c1, t0.c1, t0.c4)) BETWEEN ((vt1.c1, t0.c3, rt0.c4)) AND ((vt1.c0, rt0.c3, rt0.c2))) IN ()) CROSS JOIN t0 ON (((((NOT (rt0.c4)))OR(0.032065864586990345)))OR(((((rt0.c2)AND(rt0.c1)))AND(t0.c1)))) WHERE (((((((t0.c3)OR(rt0.c5)))OR(rt0.c2)))!=(TRIM(DISTINCT rt0.c0, t0.c0)))) ORDER BY 0.08135327147205118 ASC, ((((((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (t0.c0)))AND((((vt1.c0))<>((rt0.c2))))))AND(((t0.c2) NOT NULL))))AND(NULL)))AND(0.02260231931715162)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c3)OR(rt0.c5)))OR(rt0.c2)))!=(TRIM(DISTINCT rt0.c0, t0.c0)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((t0.c1, t0.c1, t0.c4)) BETWEEN ((vt1.c1, t0.c3, rt0.c4)) AND ((vt1.c0, rt0.c3, rt0.c2))) IN ()) CROSS JOIN t0 ON (((((NOT (rt0.c4)))OR(0.032065864586990345)))OR(((((rt0.c2)AND(rt0.c1)))AND(t0.c1)))) ORDER BY 0.08135327147205118 ASC, ((((((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (t0.c0)))AND((((vt1.c0))!=((rt0.c2))))))AND(((t0.c2) NOT NULL))))AND(NULL)))AND(0.02260231931715162)) DESC);
SELECT * FROM rt0 CROSS JOIN vt1 ON ((((t0.c1, t0.c1, t0.c4)) BETWEEN ((vt1.c1, t0.c3, rt0.c4)) AND ((vt1.c0, rt0.c3, rt0.c2))) IN ()) CROSS JOIN t0 ON (((((NOT (rt0.c4)))OR(0.032065864586990345)))OR(((((rt0.c2)AND(rt0.c1)))AND(t0.c1)))) WHERE (((((((t0.c3)OR(rt0.c5)))OR(rt0.c2)))!=(TRIM(DISTINCT rt0.c0, t0.c0)))) ORDER BY 0.08135327147205118 ASC, ((((((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (t0.c0)))AND((((vt1.c0))<>((rt0.c2))))))AND(((t0.c2) NOT NULL))))AND(NULL)))AND(0.02260231931715162)) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((0.7029626948288044 IN ()));
SELECT SUM(count) FROM (SELECT (((0.7029626948288044 IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((0.7029626948288044 IN ()));
SELECT SUM(count) FROM (SELECT (((0.7029626948288044 IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((0.7029626948288044 IN ()));
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (0.1659757565347637);
SELECT SUM(count) FROM (SELECT ALL ((0.1659757565347637) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (0.1659757565347637);
SELECT SUM(count) FROM (SELECT ALL ((0.1659757565347637) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (0.1659757565347637);
SELECT ALL * FROM rt0, vt1, t0 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0, vt1, t0 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0, vt1, t0 WHERE (vt1.c2);
SELECT ALL * FROM rt0, t0, vt1 WHERE (0Xffffffff99cf6c17);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff99cf6c17) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (0Xffffffff99cf6c17);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff99cf6c17) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (0Xffffffff99cf6c17);
SELECT ALL * FROM t0, rt0, vt1 WHERE (CASE WHEN CAST(rt0.c5 AS TEXT) THEN ((t0.c3) BETWEEN (rt0.c3) AND (t0.c3)) ELSE ((vt1.c2) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c5 AS TEXT) THEN ((t0.c3) BETWEEN (rt0.c3) AND (t0.c3)) ELSE ((vt1.c2) ISNULL) END) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE (CASE WHEN CAST(rt0.c5 AS TEXT) THEN ((t0.c3) BETWEEN (rt0.c3) AND (t0.c3)) ELSE ((vt1.c2) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c5 AS TEXT) THEN ((t0.c3) BETWEEN (rt0.c3) AND (t0.c3)) ELSE ((vt1.c2) ISNULL) END) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE (CASE WHEN CAST(rt0.c5 AS TEXT) THEN ((t0.c3) BETWEEN (rt0.c3) AND (t0.c3)) ELSE ((vt1.c2) ISNULL) END);
SELECT * FROM vt1 WHERE (CASE WHEN IFNULL(vt1.c1, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c2 END ELSE ((vt1.c0)*(vt1.c0)) END) ORDER BY ((((MAX(vt1.c0, vt1.c1))OR((((vt1.c0, vt1.c1, vt1.c2)) BETWEEN ((vt1.c1, vt1.c2, vt1.c0)) AND ((vt1.c2, vt1.c2, vt1.c0))))))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN IFNULL(vt1.c1, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c2 END ELSE ((vt1.c0)*(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((MAX(vt1.c0, vt1.c1))OR((((vt1.c0, vt1.c1, vt1.c2)) BETWEEN ((vt1.c1, vt1.c2, vt1.c0)) AND ((vt1.c2, vt1.c2, vt1.c0))))))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE WHEN IFNULL(vt1.c1, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c2 END ELSE ((vt1.c0)*(vt1.c0)) END) ORDER BY ((((MAX(vt1.c0, vt1.c1))OR((((vt1.c0, vt1.c1, vt1.c2)) BETWEEN ((vt1.c1, vt1.c2, vt1.c0)) AND ((vt1.c2, vt1.c2, vt1.c0))))))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN IFNULL(vt1.c1, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c2 END ELSE ((vt1.c0)*(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((MAX(vt1.c0, vt1.c1))OR((((vt1.c0, vt1.c1, vt1.c2)) BETWEEN ((vt1.c1, vt1.c2, vt1.c0)) AND ((vt1.c2, vt1.c2, vt1.c0))))))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE WHEN IFNULL(vt1.c1, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c2 END ELSE ((vt1.c0)*(vt1.c0)) END) ORDER BY ((((MAX(vt1.c0, vt1.c1))OR((((vt1.c0, vt1.c1, vt1.c2)) BETWEEN ((vt1.c1, vt1.c2, vt1.c0)) AND ((vt1.c2, vt1.c2, vt1.c0))))))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c3 THEN t0.c4 WHEN t0.c2 THEN t0.c2 ELSE t0.c4 END))==((((t0.c2)=(t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c3 THEN t0.c4 WHEN t0.c2 THEN t0.c2 ELSE t0.c4 END))=((((t0.c2)=(t0.c2)))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0 WHERE ((((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c3 THEN t0.c4 WHEN t0.c2 THEN t0.c2 ELSE t0.c4 END))==((((t0.c2)=(t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c3 THEN t0.c4 WHEN t0.c2 THEN t0.c2 ELSE t0.c4 END))=((((t0.c2)=(t0.c2)))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0 WHERE ((((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c3 THEN t0.c4 WHEN t0.c2 THEN t0.c2 ELSE t0.c4 END))==((((t0.c2)=(t0.c2))))));
SELECT COUNT(*) FROM t0 WHERE (CAST(NULL AS REAL)) ORDER BY (((((t0.c1)) BETWEEN ((0X4fbaeb91)) AND ((t0.c4)))) IS TRUE), (NOT (((t0.c4)*(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c1)) BETWEEN ((0X4fbaeb91)) AND ((t0.c4)))) IS TRUE), (NOT (((t0.c4)*(t0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST(NULL AS REAL)) ORDER BY (((((t0.c1)) BETWEEN ((0X4fbaeb91)) AND ((t0.c4)))) IS TRUE), (NOT (((t0.c4)*(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c1)) BETWEEN ((0X4fbaeb91)) AND ((t0.c4)))) IS TRUE), (NOT (((t0.c4)*(t0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST(NULL AS REAL)) ORDER BY (((((t0.c1)) BETWEEN ((0X4fbaeb91)) AND ((t0.c4)))) IS TRUE), (NOT (((t0.c4)*(t0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt1, t0 WHERE (x'' COLLATE BINARY) ORDER BY (((+ (rt0.c3)))IS(((t0.c4)>(rt0.c4))))  NULLS FIRST, (((rt0.c1 COLLATE NOCASE, (((((((('')OR(rt0.c2)))OR(rt0.c5)))OR(rt0.c1)))AND(t0.c1)), ((vt1.c1) ISNULL)))>=(((((t0.c4))==((rt0.c6))), ((rt0.c4) NOTNULL), json_object(t0.c4, rt0.c6))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY (((+ (rt0.c3)))IS(((t0.c4)>(rt0.c4))))  NULLS FIRST, (((rt0.c1 COLLATE NOCASE, (((((((('')OR(rt0.c2)))OR(rt0.c5)))OR(rt0.c1)))AND(t0.c1)), ((vt1.c1) ISNULL)))>=(((((t0.c4))=((rt0.c6))), ((rt0.c4) NOTNULL), json_object(t0.c4, rt0.c6))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1, t0 WHERE (x'' COLLATE BINARY) ORDER BY (((+ (rt0.c3)))IS(((t0.c4)>(rt0.c4))))  NULLS FIRST, (((rt0.c1 COLLATE NOCASE, (((((((('')OR(rt0.c2)))OR(rt0.c5)))OR(rt0.c1)))AND(t0.c1)), ((vt1.c1) ISNULL)))>=(((((t0.c4))==((rt0.c6))), ((rt0.c4) NOTNULL), json_object(t0.c4, rt0.c6))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY (((+ (rt0.c3)))IS(((t0.c4)>(rt0.c4))))  NULLS FIRST, (((rt0.c1 COLLATE NOCASE, (((((((('')OR(rt0.c2)))OR(rt0.c5)))OR(rt0.c1)))AND(t0.c1)), ((vt1.c1) ISNULL)))>=(((((t0.c4))=((rt0.c6))), ((rt0.c4) NOTNULL), json_object(t0.c4, rt0.c6))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1, t0 WHERE (x'' COLLATE BINARY) ORDER BY (((+ (rt0.c3)))IS(((t0.c4)>(rt0.c4))))  NULLS FIRST, (((rt0.c1 COLLATE NOCASE, (((((((('')OR(rt0.c2)))OR(rt0.c5)))OR(rt0.c1)))AND(t0.c1)), ((vt1.c1) ISNULL)))>=(((((t0.c4))==((rt0.c6))), ((rt0.c4) NOTNULL), json_object(t0.c4, rt0.c6))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c1 THEN t0.c4 WHEN NULL THEN t0.c3 WHEN t0.c0 THEN -0.0 END)OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))))OR(CASE WHEN t0.c1 THEN t0.c4 WHEN 0.8955274023262075 THEN t0.c1 WHEN t0.c0 THEN t0.c0 ELSE t0.c4 END))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c0  WHEN t0.c1 THEN t0.c4 WHEN NULL THEN t0.c3 WHEN t0.c0 THEN -0.0 END)OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))))OR(CASE WHEN t0.c1 THEN t0.c4 WHEN 0.8955274023262075 THEN t0.c1 WHEN t0.c0 THEN t0.c0 ELSE t0.c4 END))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c1 THEN t0.c4 WHEN NULL THEN t0.c3 WHEN t0.c0 THEN -0.0 END)OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))))OR(CASE WHEN t0.c1 THEN t0.c4 WHEN 0.8955274023262075 THEN t0.c1 WHEN t0.c0 THEN t0.c0 ELSE t0.c4 END))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c0  WHEN t0.c1 THEN t0.c4 WHEN NULL THEN t0.c3 WHEN t0.c0 THEN -0.0 END)OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))))OR(CASE WHEN t0.c1 THEN t0.c4 WHEN 0.8955274023262075 THEN t0.c1 WHEN t0.c0 THEN t0.c0 ELSE t0.c4 END))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c1 THEN t0.c4 WHEN NULL THEN t0.c3 WHEN t0.c0 THEN -0.0 END)OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))))OR(CASE WHEN t0.c1 THEN t0.c4 WHEN 0.8955274023262075 THEN t0.c1 WHEN t0.c0 THEN t0.c0 ELSE t0.c4 END))) ORDER BY t0.c0 DESC;
SELECT ALL * FROM t0, vt1, rt0 WHERE (MAX(((((((((vt1.c0)AND(t0.c2)))OR(vt1.c2)))AND(x'b1cb')))AND(rt0.c1)), CASE WHEN rt0.c5 THEN t0.c2 WHEN t0.c2 THEN rt0.c5 WHEN t0.c2 THEN rt0.c1 WHEN t0.c1 THEN rt0.c0 WHEN rt0.c3 THEN t0.c3 ELSE rt0.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((MAX(((((((((vt1.c0)AND(t0.c2)))OR(vt1.c2)))AND(x'b1cb')))AND(rt0.c1)), CASE WHEN rt0.c5 THEN t0.c2 WHEN t0.c2 THEN rt0.c5 WHEN t0.c2 THEN rt0.c1 WHEN t0.c1 THEN rt0.c0 WHEN rt0.c3 THEN t0.c3 ELSE rt0.c4 END)) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE (MAX(((((((((vt1.c0)AND(t0.c2)))OR(vt1.c2)))AND(x'b1cb')))AND(rt0.c1)), CASE WHEN rt0.c5 THEN t0.c2 WHEN t0.c2 THEN rt0.c5 WHEN t0.c2 THEN rt0.c1 WHEN t0.c1 THEN rt0.c0 WHEN rt0.c3 THEN t0.c3 ELSE rt0.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((MAX(((((((((vt1.c0)AND(t0.c2)))OR(vt1.c2)))AND(x'b1cb')))AND(rt0.c1)), CASE WHEN rt0.c5 THEN t0.c2 WHEN t0.c2 THEN rt0.c5 WHEN t0.c2 THEN rt0.c1 WHEN t0.c1 THEN rt0.c0 WHEN rt0.c3 THEN t0.c3 ELSE rt0.c4 END)) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE (MAX(((((((((vt1.c0)AND(t0.c2)))OR(vt1.c2)))AND(x'b1cb')))AND(rt0.c1)), CASE WHEN rt0.c5 THEN t0.c2 WHEN t0.c2 THEN rt0.c5 WHEN t0.c2 THEN rt0.c1 WHEN t0.c1 THEN rt0.c0 WHEN rt0.c3 THEN t0.c3 ELSE rt0.c4 END));
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(t0.c4 AS NUMERIC) COLLATE NOCASE) ORDER BY CAST(((t0.c3)IS NOT(t0.c4)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c4 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(((t0.c3)IS NOT(t0.c4)) AS INTEGER));
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(t0.c4 AS NUMERIC) COLLATE NOCASE) ORDER BY CAST(((t0.c3)IS NOT(t0.c4)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c4 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(((t0.c3)IS NOT(t0.c4)) AS INTEGER));
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(t0.c4 AS NUMERIC) COLLATE NOCASE) ORDER BY CAST(((t0.c3)IS NOT(t0.c4)) AS INTEGER);
SELECT * FROM vt1 WHERE ((+ (vt1.c0))) ORDER BY CAST(vt1.c0 AS TEXT) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS TEXT) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((+ (vt1.c0))) ORDER BY CAST(vt1.c0 AS TEXT) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS TEXT) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((+ (vt1.c0))) ORDER BY CAST(vt1.c0 AS TEXT) COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 FULL OUTER JOIN t0 ON '' WHERE (CAST(((t0.c0) BETWEEN (vt1.c1) AND (1.096628539E9)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (vt1.c1) AND (1.096628539E9)) AS BLOB)) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN t0 ON '');
SELECT COUNT(*) FROM vt1, rt0 FULL OUTER JOIN t0 ON '' WHERE (CAST(((t0.c0) BETWEEN (vt1.c1) AND (1.096628539E9)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (vt1.c1) AND (1.096628539E9)) AS BLOB)) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN t0 ON '');
SELECT COUNT(*) FROM vt1, rt0 FULL OUTER JOIN t0 ON '' WHERE (CAST(((t0.c0) BETWEEN (vt1.c1) AND (1.096628539E9)) AS BLOB));
SELECT ALL * FROM t0, vt1 WHERE (((((((((COALESCE(vt1.c1, 0x6faceb4f))AND((t0.c1 IN ()))))AND(((t0.c0) BETWEEN (vt1.c2) AND (vt1.c2)))))OR(t0.c0 COLLATE NOCASE)))OR((vt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((COALESCE(vt1.c1, 0X6faceb4f))AND((t0.c1 IN ()))))AND(((t0.c0) BETWEEN (vt1.c2) AND (vt1.c2)))))OR(t0.c0 COLLATE NOCASE)))OR((vt1.c2 IN ())))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (((((((((COALESCE(vt1.c1, 0x6faceb4f))AND((t0.c1 IN ()))))AND(((t0.c0) BETWEEN (vt1.c2) AND (vt1.c2)))))OR(t0.c0 COLLATE NOCASE)))OR((vt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((COALESCE(vt1.c1, 0X6faceb4f))AND((t0.c1 IN ()))))AND(((t0.c0) BETWEEN (vt1.c2) AND (vt1.c2)))))OR(t0.c0 COLLATE NOCASE)))OR((vt1.c2 IN ())))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (((((((((COALESCE(vt1.c1, 0x6faceb4f))AND((t0.c1 IN ()))))AND(((t0.c0) BETWEEN (vt1.c2) AND (vt1.c2)))))OR(t0.c0 COLLATE NOCASE)))OR((vt1.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CHAR(CAST('' AS INTEGER))) ORDER BY (rt0.c3 COLLATE RTRIM IN ())  NULLS FIRST, TYPEOF(DISTINCT ((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c5)))AND(0.4246067555485016)))AND(rt0.c5)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CHAR(CAST('' AS INTEGER))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c3 COLLATE RTRIM IN ())  NULLS FIRST, TYPEOF(DISTINCT ((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c5)))AND(0.4246067555485016)))AND(rt0.c5)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CHAR(CAST('' AS INTEGER))) ORDER BY (rt0.c3 COLLATE RTRIM IN ())  NULLS FIRST, TYPEOF(DISTINCT ((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c5)))AND(0.4246067555485016)))AND(rt0.c5)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CHAR(CAST('' AS INTEGER))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c3 COLLATE RTRIM IN ())  NULLS FIRST, TYPEOF(DISTINCT ((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c5)))AND(0.4246067555485016)))AND(rt0.c5)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CHAR(CAST('' AS INTEGER))) ORDER BY (rt0.c3 COLLATE RTRIM IN ())  NULLS FIRST, TYPEOF(DISTINCT ((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c5)))AND(0.4246067555485016)))AND(rt0.c5)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (TRIM((vt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((vt1.c1 IN ()))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (TRIM((vt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((vt1.c1 IN ()))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (TRIM((vt1.c1 IN ())));
SELECT * FROM rt0, vt1 NATURAL JOIN t0 WHERE (((ABS(rt0.c3))<=(CASE WHEN rt0.c1 THEN t0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c3))<=(CASE WHEN rt0.c1 THEN t0.c1 END))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN t0);
SELECT * FROM rt0, vt1 NATURAL JOIN t0 WHERE (((ABS(rt0.c3))<=(CASE WHEN rt0.c1 THEN t0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c3))<=(CASE WHEN rt0.c1 THEN t0.c1 END))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN t0);
SELECT * FROM rt0, vt1 NATURAL JOIN t0 WHERE (((ABS(rt0.c3))<=(CASE WHEN rt0.c1 THEN t0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((~ (vt1.c2)))+(NULLIF(DISTINCT t0.c4, vt1.c0))) LEFT OUTER JOIN vt1 ON CAST(rt0.c1 AS INTEGER) WHERE (CAST(((0.4520309278994967) NOT NULL) AS BLOB)) ORDER BY ((vt1.c2 COLLATE BINARY) NOT BETWEEN (((((((((((((vt1.c2)OR(t0.c0)))AND(rt0.c2)))OR('1521192774')))AND(0.3112228800956063)))AND(rt0.c1)))OR(rt0.c1))) AND ((+ (vt1.c2)))) ASC  NULLS FIRST, rt0.c6;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.4520309278994967) NOT NULL) AS BLOB)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((~ (vt1.c2)))+(NULLIF(DISTINCT t0.c4, vt1.c0))) LEFT OUTER JOIN vt1 ON CAST(rt0.c1 AS INTEGER) ORDER BY ((vt1.c2 COLLATE BINARY) NOT BETWEEN (((((((((((((vt1.c2)OR(t0.c0)))AND(rt0.c2)))OR('1521192774')))AND(0.3112228800956063)))AND(rt0.c1)))OR(rt0.c1))) AND ((+ (vt1.c2)))) ASC  NULLS FIRST, rt0.c6);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((~ (vt1.c2)))+(NULLIF(DISTINCT t0.c4, vt1.c0))) LEFT OUTER JOIN vt1 ON CAST(rt0.c1 AS INTEGER) WHERE (CAST(((0.4520309278994967) NOT NULL) AS BLOB)) ORDER BY ((vt1.c2 COLLATE BINARY) NOT BETWEEN (((((((((((((vt1.c2)OR(t0.c0)))AND(rt0.c2)))OR('1521192774')))AND(0.3112228800956063)))AND(rt0.c1)))OR(rt0.c1))) AND ((+ (vt1.c2)))) ASC  NULLS FIRST, rt0.c6;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.4520309278994967) NOT NULL) AS BLOB)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((~ (vt1.c2)))+(NULLIF(DISTINCT t0.c4, vt1.c0))) LEFT OUTER JOIN vt1 ON CAST(rt0.c1 AS INTEGER) ORDER BY ((vt1.c2 COLLATE BINARY) NOT BETWEEN (((((((((((((vt1.c2)OR(t0.c0)))AND(rt0.c2)))OR('1521192774')))AND(0.3112228800956063)))AND(rt0.c1)))OR(rt0.c1))) AND ((+ (vt1.c2)))) ASC  NULLS FIRST, rt0.c6);
SELECT * FROM t0 WHERE (((((t0.c2)AND(x'011b'))) BETWEEN (t0.c1) AND (NULLIF(t0.c1, t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)AND(x'011b'))) BETWEEN (t0.c1) AND (NULLIF(t0.c1, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2)AND(x'011b'))) BETWEEN (t0.c1) AND (NULLIF(t0.c1, t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)AND(x'011b'))) BETWEEN (t0.c1) AND (NULLIF(t0.c1, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2)AND(x'011b'))) BETWEEN (t0.c1) AND (NULLIF(t0.c1, t0.c0))));
SELECT * FROM t0, vt1, rt0 WHERE (((((t0.c4) NOT NULL)) ISNULL)) ORDER BY ((((vt1.c2)+(vt1.c1)))LIKE(CASE WHEN rt0.c6 THEN rt0.c2 WHEN 'yyQ\<UL' THEN t0.c0 WHEN t0.c3 THEN rt0.c6 ELSE rt0.c2 END))  NULLS LAST, CASE WHEN rt0.c3 THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c5))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c4) NOT NULL)) ISNULL)) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((vt1.c2)+(vt1.c1)))LIKE(CASE WHEN rt0.c6 THEN rt0.c2 WHEN 'yyQ\<UL' THEN t0.c0 WHEN t0.c3 THEN rt0.c6 ELSE rt0.c2 END))  NULLS LAST, CASE WHEN rt0.c3 THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c5))) END  NULLS FIRST);
SELECT * FROM t0, vt1, rt0 WHERE (((((t0.c4) NOT NULL)) ISNULL)) ORDER BY ((((vt1.c2)+(vt1.c1)))LIKE(CASE WHEN rt0.c6 THEN rt0.c2 WHEN 'yyQ\<UL' THEN t0.c0 WHEN t0.c3 THEN rt0.c6 ELSE rt0.c2 END))  NULLS LAST, CASE WHEN rt0.c3 THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c5))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c4) NOT NULL)) ISNULL)) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((vt1.c2)+(vt1.c1)))LIKE(CASE WHEN rt0.c6 THEN rt0.c2 WHEN 'yyQ\<UL' THEN t0.c0 WHEN t0.c3 THEN rt0.c6 ELSE rt0.c2 END))  NULLS LAST, CASE WHEN rt0.c3 THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c5))) END  NULLS FIRST);
SELECT * FROM t0, vt1, rt0 WHERE (((((t0.c4) NOT NULL)) ISNULL)) ORDER BY ((((vt1.c2)+(vt1.c1)))LIKE(CASE WHEN rt0.c6 THEN rt0.c2 WHEN 'yyQ\<UL' THEN t0.c0 WHEN t0.c3 THEN rt0.c6 ELSE rt0.c2 END))  NULLS LAST, CASE WHEN rt0.c3 THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c5))) END  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1 WHERE ((((~ (t0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c1))) NOT NULL)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((~ (t0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c1))) NOT NULL)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((~ (t0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM t0 WHERE (((HEX(DISTINCT t0.c2)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT t0.c2)) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((HEX(DISTINCT t0.c2)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT t0.c2)) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((HEX(DISTINCT t0.c2)) IS FALSE));
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN (rt0.c4 COLLATE BINARY) AND (((((((((rt0.c0)OR(rt0.c6)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))))) ORDER BY ((((rt0.c3)*(rt0.c4)))&(TRIM(rt0.c6, '')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) BETWEEN (rt0.c4 COLLATE BINARY) AND (((((((((rt0.c0)OR(rt0.c6)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)*(rt0.c4)))&(TRIM(rt0.c6, ''))));
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN (rt0.c4 COLLATE BINARY) AND (((((((((rt0.c0)OR(rt0.c6)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))))) ORDER BY ((((rt0.c3)*(rt0.c4)))&(TRIM(rt0.c6, '')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) BETWEEN (rt0.c4 COLLATE BINARY) AND (((((((((rt0.c0)OR(rt0.c6)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)*(rt0.c4)))&(TRIM(rt0.c6, ''))));
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN (rt0.c4 COLLATE BINARY) AND (((((((((rt0.c0)OR(rt0.c6)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))))) ORDER BY ((((rt0.c3)*(rt0.c4)))&(TRIM(rt0.c6, '')));
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((((t0.c3 IN ()))+(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((t0.c3 IN ()))+(rt0.c2))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((((t0.c3 IN ()))+(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((t0.c3 IN ()))+(rt0.c2))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((((t0.c3 IN ()))+(rt0.c2)));
SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC);
SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC);
SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY rt0.c0 DESC;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c3 END)>=(('-25469799' IN (rt0.c1)))) LEFT OUTER JOIN t0 ON t0.c2 WHERE ((rt0.c3 IN ((((t0.c3)) BETWEEN ((rt0.c5)) AND ((rt0.c4)))))) ORDER BY 1.903865536E9 ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ((((t0.c3)) BETWEEN ((rt0.c5)) AND ((rt0.c4)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c3 END)>=(('-25469799' IN (rt0.c1)))) LEFT OUTER JOIN t0 ON t0.c2 ORDER BY 1.903865536E9 ASC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c3 END)>=(('-25469799' IN (rt0.c1)))) LEFT OUTER JOIN t0 ON t0.c2 WHERE ((rt0.c3 IN ((((t0.c3)) BETWEEN ((rt0.c5)) AND ((rt0.c4)))))) ORDER BY 1.903865536E9 ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ((((t0.c3)) BETWEEN ((rt0.c5)) AND ((rt0.c4)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c3 END)>=(('-25469799' IN (rt0.c1)))) LEFT OUTER JOIN t0 ON t0.c2 ORDER BY 1.903865536E9 ASC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c3 END)>=(('-25469799' IN (rt0.c1)))) LEFT OUTER JOIN t0 ON t0.c2 WHERE ((rt0.c3 IN ((((t0.c3)) BETWEEN ((rt0.c5)) AND ((rt0.c4)))))) ORDER BY 1.903865536E9 ASC;
SELECT * FROM rt0, t0 CROSS JOIN vt1 ON (((t0.c1))!=((((0.709268391927394) NOT NULL)))) WHERE ((CASE WHEN t0.c2 THEN rt0.c6 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c5 END IN (UPPER(t0.c4)))) ORDER BY ((1055945626) ISNULL) DESC, t0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c2 THEN rt0.c6 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c5 END IN (UPPER(t0.c4)))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt1 ON (((t0.c1))<>((((0.709268391927394) NOT NULL)))) ORDER BY ((1055945626) ISNULL) DESC, t0.c2 DESC  NULLS FIRST);
SELECT * FROM rt0, t0 CROSS JOIN vt1 ON (((t0.c1))!=((((0.709268391927394) NOT NULL)))) WHERE ((CASE WHEN t0.c2 THEN rt0.c6 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c5 END IN (UPPER(t0.c4)))) ORDER BY ((1055945626) ISNULL) DESC, t0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c2 THEN rt0.c6 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c5 END IN (UPPER(t0.c4)))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt1 ON (((t0.c1))<>((((0.709268391927394) NOT NULL)))) ORDER BY ((1055945626) ISNULL) DESC, t0.c2 DESC  NULLS FIRST);
SELECT * FROM rt0, t0 CROSS JOIN vt1 ON (((t0.c1))!=((((0.709268391927394) NOT NULL)))) WHERE ((CASE WHEN t0.c2 THEN rt0.c6 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c5 END IN (UPPER(t0.c4)))) ORDER BY ((1055945626) ISNULL) DESC, t0.c2 DESC  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON NULLIF(DISTINCT ((rt0.c0)<<(t0.c4)), ((NULL)/(t0.c2))) WHERE (rt0.c2 COLLATE RTRIM) ORDER BY CASE WHEN 1774649374 THEN NULL COLLATE NOCASE WHEN ((((rt0.c5)AND(t0.c1)))AND(t0.c0)) THEN CAST(t0.c3 AS INTEGER) WHEN CASE WHEN rt0.c4 THEN rt0.c3 END THEN (+ (t0.c3)) ELSE CASE rt0.c6  WHEN rt0.c6 THEN rt0.c3 WHEN rt0.c6 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c2 END END ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON NULLIF(DISTINCT ((rt0.c0)<<(t0.c4)), ((NULL)/(t0.c2))) ORDER BY CASE WHEN 1774649374 THEN NULL COLLATE NOCASE WHEN ((((rt0.c5)AND(t0.c1)))AND(t0.c0)) THEN CAST(t0.c3 AS INTEGER) WHEN CASE WHEN rt0.c4 THEN rt0.c3 END THEN (+ (t0.c3)) ELSE CASE rt0.c6  WHEN rt0.c6 THEN rt0.c3 WHEN rt0.c6 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c2 END END ASC);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON NULLIF(DISTINCT ((rt0.c0)<<(t0.c4)), ((NULL)/(t0.c2))) WHERE (rt0.c2 COLLATE RTRIM) ORDER BY CASE WHEN 1774649374 THEN NULL COLLATE NOCASE WHEN ((((rt0.c5)AND(t0.c1)))AND(t0.c0)) THEN CAST(t0.c3 AS INTEGER) WHEN CASE WHEN rt0.c4 THEN rt0.c3 END THEN (+ (t0.c3)) ELSE CASE rt0.c6  WHEN rt0.c6 THEN rt0.c3 WHEN rt0.c6 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c2 END END ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON NULLIF(DISTINCT ((rt0.c0)<<(t0.c4)), ((NULL)/(t0.c2))) ORDER BY CASE WHEN 1774649374 THEN NULL COLLATE NOCASE WHEN ((((rt0.c5)AND(t0.c1)))AND(t0.c0)) THEN CAST(t0.c3 AS INTEGER) WHEN CASE WHEN rt0.c4 THEN rt0.c3 END THEN (+ (t0.c3)) ELSE CASE rt0.c6  WHEN rt0.c6 THEN rt0.c3 WHEN rt0.c6 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c2 END END ASC);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON NULLIF(DISTINCT ((rt0.c0)<<(t0.c4)), ((NULL)/(t0.c2))) WHERE (rt0.c2 COLLATE RTRIM) ORDER BY CASE WHEN 1774649374 THEN NULL COLLATE NOCASE WHEN ((((rt0.c5)AND(t0.c1)))AND(t0.c0)) THEN CAST(t0.c3 AS INTEGER) WHEN CASE WHEN rt0.c4 THEN rt0.c3 END THEN (+ (t0.c3)) ELSE CASE rt0.c6  WHEN rt0.c6 THEN rt0.c3 WHEN rt0.c6 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c2 END END ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (0.2516465858325212) ORDER BY CASE LTRIM(t0.c1)  WHEN LIKE(x'6a08', t0.c4, '늢') THEN LIKELY('-1059750210') WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c4)) THEN ((t0.c2) NOT NULL) WHEN ((t0.c2) NOTNULL) THEN (t0.c1 IN (t0.c0)) WHEN (+ (t0.c2)) THEN ((((t0.c3)AND(t0.c2)))AND(t0.c2)) WHEN ((t0.c0) IS FALSE) THEN ((t0.c4) IS TRUE) ELSE (t0.c3 IN ()) END DESC  NULLS LAST, ((((((((0.2707819297470394)OR((- ('QH,s*')))))AND((NOT (t0.c1)))))AND(CASE WHEN t0.c3 THEN t0.c1 ELSE t0.c2 END)))OR((((0X66679d6c))<=((t0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.2516465858325212) IS TRUE)  as count FROM t0 ORDER BY CASE LTRIM(t0.c1)  WHEN LIKE(x'6a08', t0.c4, '늢') THEN LIKELY('-1059750210') WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c4)) THEN ((t0.c2) NOT NULL) WHEN ((t0.c2) NOTNULL) THEN (t0.c1 IN (t0.c0)) WHEN (+ (t0.c2)) THEN ((((t0.c3)AND(t0.c2)))AND(t0.c2)) WHEN ((t0.c0) IS FALSE) THEN ((t0.c4) IS TRUE) ELSE (t0.c3 IN ()) END DESC  NULLS LAST, ((((((((0.2707819297470394)OR((- ('QH,s*')))))AND((NOT (t0.c1)))))AND(CASE WHEN t0.c3 THEN t0.c1 ELSE t0.c2 END)))OR((((0X66679d6c))<=((t0.c3)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (0.2516465858325212) ORDER BY CASE LTRIM(t0.c1)  WHEN LIKE(x'6a08', t0.c4, '늢') THEN LIKELY('-1059750210') WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c4)) THEN ((t0.c2) NOT NULL) WHEN ((t0.c2) NOTNULL) THEN (t0.c1 IN (t0.c0)) WHEN (+ (t0.c2)) THEN ((((t0.c3)AND(t0.c2)))AND(t0.c2)) WHEN ((t0.c0) IS FALSE) THEN ((t0.c4) IS TRUE) ELSE (t0.c3 IN ()) END DESC  NULLS LAST, ((((((((0.2707819297470394)OR((- ('QH,s*')))))AND((NOT (t0.c1)))))AND(CASE WHEN t0.c3 THEN t0.c1 ELSE t0.c2 END)))OR((((0X66679d6c))<=((t0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.2516465858325212) IS TRUE)  as count FROM t0 ORDER BY CASE LTRIM(t0.c1)  WHEN LIKE(x'6a08', t0.c4, '늢') THEN LIKELY('-1059750210') WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c4)) THEN ((t0.c2) NOT NULL) WHEN ((t0.c2) NOTNULL) THEN (t0.c1 IN (t0.c0)) WHEN (+ (t0.c2)) THEN ((((t0.c3)AND(t0.c2)))AND(t0.c2)) WHEN ((t0.c0) IS FALSE) THEN ((t0.c4) IS TRUE) ELSE (t0.c3 IN ()) END DESC  NULLS LAST, ((((((((0.2707819297470394)OR((- ('QH,s*')))))AND((NOT (t0.c1)))))AND(CASE WHEN t0.c3 THEN t0.c1 ELSE t0.c2 END)))OR((((0X66679d6c))<=((t0.c3)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (0.2516465858325212) ORDER BY CASE LTRIM(t0.c1)  WHEN LIKE(x'6a08', t0.c4, '늢') THEN LIKELY('-1059750210') WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c4)) THEN ((t0.c2) NOT NULL) WHEN ((t0.c2) NOTNULL) THEN (t0.c1 IN (t0.c0)) WHEN (+ (t0.c2)) THEN ((((t0.c3)AND(t0.c2)))AND(t0.c2)) WHEN ((t0.c0) IS FALSE) THEN ((t0.c4) IS TRUE) ELSE (t0.c3 IN ()) END DESC  NULLS LAST, ((((((((0.2707819297470394)OR((- ('QH,s*')))))AND((NOT (t0.c1)))))AND(CASE WHEN t0.c3 THEN t0.c1 ELSE t0.c2 END)))OR((((0X66679d6c))<=((t0.c3)))))  NULLS LAST;
SELECT * FROM t0, vt1 WHERE (CAST(((vt1.c2) NOTNULL) AS BLOB)) ORDER BY CASE CAST(t0.c4 AS BLOB)  WHEN ((t0.c1)OR(vt1.c2)) THEN ((((((((vt1.c0)OR(vt1.c0)))OR(t0.c3)))OR(vt1.c2)))AND(t0.c1)) WHEN ((t0.c4)>(t0.c2)) THEN CASE WHEN t0.c2 THEN t0.c3 ELSE vt1.c2 END WHEN (- (t0.c3)) THEN (((vt1.c0, t0.c1, t0.c1)) NOT BETWEEN ((t0.c4, t0.c4, vt1.c1)) AND ((vt1.c2, '1431850477', t0.c3))) ELSE RTRIM(t0.c1) END, ((CAST(t0.c3 AS NUMERIC)) NOT BETWEEN (t0.c2 COLLATE NOCASE) AND (CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2) NOTNULL) AS BLOB)) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE CAST(t0.c4 AS BLOB)  WHEN ((t0.c1)OR(vt1.c2)) THEN ((((((((vt1.c0)OR(vt1.c0)))OR(t0.c3)))OR(vt1.c2)))AND(t0.c1)) WHEN ((t0.c4)>(t0.c2)) THEN CASE WHEN t0.c2 THEN t0.c3 ELSE vt1.c2 END WHEN (- (t0.c3)) THEN (((vt1.c0, t0.c1, t0.c1)) NOT BETWEEN ((t0.c4, t0.c4, vt1.c1)) AND ((vt1.c2, '1431850477', t0.c3))) ELSE RTRIM(t0.c1) END, ((CAST(t0.c3 AS NUMERIC)) NOT BETWEEN (t0.c2 COLLATE NOCASE) AND (CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (CAST(((vt1.c2) NOTNULL) AS BLOB)) ORDER BY CASE CAST(t0.c4 AS BLOB)  WHEN ((t0.c1)OR(vt1.c2)) THEN ((((((((vt1.c0)OR(vt1.c0)))OR(t0.c3)))OR(vt1.c2)))AND(t0.c1)) WHEN ((t0.c4)>(t0.c2)) THEN CASE WHEN t0.c2 THEN t0.c3 ELSE vt1.c2 END WHEN (- (t0.c3)) THEN (((vt1.c0, t0.c1, t0.c1)) NOT BETWEEN ((t0.c4, t0.c4, vt1.c1)) AND ((vt1.c2, '1431850477', t0.c3))) ELSE RTRIM(t0.c1) END, ((CAST(t0.c3 AS NUMERIC)) NOT BETWEEN (t0.c2 COLLATE NOCASE) AND (CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2) NOTNULL) AS BLOB)) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE CAST(t0.c4 AS BLOB)  WHEN ((t0.c1)OR(vt1.c2)) THEN ((((((((vt1.c0)OR(vt1.c0)))OR(t0.c3)))OR(vt1.c2)))AND(t0.c1)) WHEN ((t0.c4)>(t0.c2)) THEN CASE WHEN t0.c2 THEN t0.c3 ELSE vt1.c2 END WHEN (- (t0.c3)) THEN (((vt1.c0, t0.c1, t0.c1)) NOT BETWEEN ((t0.c4, t0.c4, vt1.c1)) AND ((vt1.c2, '1431850477', t0.c3))) ELSE RTRIM(t0.c1) END, ((CAST(t0.c3 AS NUMERIC)) NOT BETWEEN (t0.c2 COLLATE NOCASE) AND (CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (CAST(((vt1.c2) NOTNULL) AS BLOB)) ORDER BY CASE CAST(t0.c4 AS BLOB)  WHEN ((t0.c1)OR(vt1.c2)) THEN ((((((((vt1.c0)OR(vt1.c0)))OR(t0.c3)))OR(vt1.c2)))AND(t0.c1)) WHEN ((t0.c4)>(t0.c2)) THEN CASE WHEN t0.c2 THEN t0.c3 ELSE vt1.c2 END WHEN (- (t0.c3)) THEN (((vt1.c0, t0.c1, t0.c1)) NOT BETWEEN ((t0.c4, t0.c4, vt1.c1)) AND ((vt1.c2, '1431850477', t0.c3))) ELSE RTRIM(t0.c1) END, ((CAST(t0.c3 AS NUMERIC)) NOT BETWEEN (t0.c2 COLLATE NOCASE) AND (CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((t0.c2) IS FALSE))AND(t0.c2)))OR(t0.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) IS FALSE))AND(t0.c2)))OR(t0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c2) IS FALSE))AND(t0.c2)))OR(t0.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) IS FALSE))AND(t0.c2)))OR(t0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c2) IS FALSE))AND(t0.c2)))OR(t0.c4 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0, rt0 WHERE (MIN(((rt0.c1) BETWEEN (rt0.c6) AND (x'')), -5.43330437E8)) ORDER BY (((rt0.c5 IN ()))<((rt0.c1 IN ())))  NULLS FIRST, ((((rt0.c4)&(t0.c0))) NOTNULL) DESC  NULLS LAST, rt0.c2;
SELECT SUM(count) FROM (SELECT ((MIN(((rt0.c1) BETWEEN (rt0.c6) AND (x'')), -5.43330437E8)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c5 IN ()))<((rt0.c1 IN ())))  NULLS FIRST, ((((rt0.c4)&(t0.c0))) NOTNULL) DESC  NULLS LAST, rt0.c2);
SELECT COUNT(*) FROM t0, rt0 WHERE (MIN(((rt0.c1) BETWEEN (rt0.c6) AND (x'')), -5.43330437E8)) ORDER BY (((rt0.c5 IN ()))<((rt0.c1 IN ())))  NULLS FIRST, ((((rt0.c4)&(t0.c0))) NOTNULL) DESC  NULLS LAST, rt0.c2;
SELECT SUM(count) FROM (SELECT ((MIN(((rt0.c1) BETWEEN (rt0.c6) AND (x'')), -5.43330437E8)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c5 IN ()))<((rt0.c1 IN ())))  NULLS FIRST, ((((rt0.c4)&(t0.c0))) NOTNULL) DESC  NULLS LAST, rt0.c2);
SELECT COUNT(*) FROM t0, rt0 WHERE (MIN(((rt0.c1) BETWEEN (rt0.c6) AND (x'')), -5.43330437E8)) ORDER BY (((rt0.c5 IN ()))<((rt0.c1 IN ())))  NULLS FIRST, ((((rt0.c4)&(t0.c0))) NOTNULL) DESC  NULLS LAST, rt0.c2;
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN vt1 WHERE (((((rt0.c1)=(rt0.c5)))>=('1447599020')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)=(rt0.c5)))>=('1447599020'))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN vt1 WHERE (((((rt0.c1)=(rt0.c5)))>=('1447599020')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)=(rt0.c5)))>=('1447599020'))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN vt1 WHERE (((((rt0.c1)=(rt0.c5)))>=('1447599020')));
SELECT * FROM rt0, t0 WHERE (((rt0.c0) BETWEEN (t0.c3) AND (t0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (t0.c3) AND (t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((rt0.c0) BETWEEN (t0.c3) AND (t0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (t0.c3) AND (t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((rt0.c0) BETWEEN (t0.c3) AND (t0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON CAST(rt0.c1 AS INTEGER) COLLATE NOCASE WHERE (((NULL)%(((rt0.c2)>(99543903))))) ORDER BY (+ ((((((((('607454607')OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((NULL)%(((rt0.c2)>(99543903))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CAST(rt0.c1 AS INTEGER) COLLATE NOCASE ORDER BY (+ ((((((((('607454607')OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON CAST(rt0.c1 AS INTEGER) COLLATE NOCASE WHERE (((NULL)%(((rt0.c2)>(99543903))))) ORDER BY (+ ((((((((('607454607')OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((NULL)%(((rt0.c2)>(99543903))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CAST(rt0.c1 AS INTEGER) COLLATE NOCASE ORDER BY (+ ((((((((('607454607')OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON CAST(rt0.c1 AS INTEGER) COLLATE NOCASE WHERE (((NULL)%(((rt0.c2)>(99543903))))) ORDER BY (+ ((((((((('607454607')OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c2))));
SELECT ALL * FROM t0, rt0, vt1 WHERE ((((('i꣒6G')IS NOT(rt0.c4))) BETWEEN (((NULL)IS NOT(rt0.c6))) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((('i꣒6G')IS NOT(rt0.c4))) BETWEEN (((NULL)IS NOT(rt0.c6))) AND (rt0.c2))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE ((((('i꣒6G')IS NOT(rt0.c4))) BETWEEN (((NULL)IS NOT(rt0.c6))) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((('i꣒6G')IS NOT(rt0.c4))) BETWEEN (((NULL)IS NOT(rt0.c6))) AND (rt0.c2))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE ((((('i꣒6G')IS NOT(rt0.c4))) BETWEEN (((NULL)IS NOT(rt0.c6))) AND (rt0.c2)));
SELECT * FROM vt1, t0 WHERE (((((-1e500) IS TRUE))AND(ROUND(t0.c2, vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((-1e500) IS TRUE))AND(ROUND(t0.c2, vt1.c1)))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((((-1e500) IS TRUE))AND(ROUND(t0.c2, vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((-1e500) IS TRUE))AND(ROUND(t0.c2, vt1.c1)))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((((-1e500) IS TRUE))AND(ROUND(t0.c2, vt1.c1))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c2) BETWEEN (vt1.c2) AND (vt1.c2)), (vt1.c1 IN ('w}5e')), ((((vt1.c2)OR(vt1.c0)))AND(rt0.c6))))=((CASE WHEN rt0.c0 THEN vt1.c1 END, (+ (vt1.c1)), ((rt0.c6) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) BETWEEN (vt1.c2) AND (vt1.c2)), (vt1.c1 IN ('w}5e')), ((((vt1.c2)OR(vt1.c0)))AND(rt0.c6))))==((CASE WHEN rt0.c0 THEN vt1.c1 END, (+ (vt1.c1)), ((rt0.c6) NOTNULL))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c2) BETWEEN (vt1.c2) AND (vt1.c2)), (vt1.c1 IN ('w}5e')), ((((vt1.c2)OR(vt1.c0)))AND(rt0.c6))))=((CASE WHEN rt0.c0 THEN vt1.c1 END, (+ (vt1.c1)), ((rt0.c6) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) BETWEEN (vt1.c2) AND (vt1.c2)), (vt1.c1 IN ('w}5e')), ((((vt1.c2)OR(vt1.c0)))AND(rt0.c6))))==((CASE WHEN rt0.c0 THEN vt1.c1 END, (+ (vt1.c1)), ((rt0.c6) NOTNULL))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c2) BETWEEN (vt1.c2) AND (vt1.c2)), (vt1.c1 IN ('w}5e')), ((((vt1.c2)OR(vt1.c0)))AND(rt0.c6))))=((CASE WHEN rt0.c0 THEN vt1.c1 END, (+ (vt1.c1)), ((rt0.c6) NOTNULL)))));
SELECT * FROM vt1, t0, rt0 WHERE (((((vt1.c0)<<(rt0.c5)))LIKE(HEX(vt1.c2)))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<<(rt0.c5)))LIKE(HEX(vt1.c2)))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY '' ASC);
SELECT * FROM vt1, t0, rt0 WHERE (((((vt1.c0)<<(rt0.c5)))LIKE(HEX(vt1.c2)))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<<(rt0.c5)))LIKE(HEX(vt1.c2)))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY '' ASC);
SELECT * FROM vt1, t0, rt0 WHERE (((((vt1.c0)<<(rt0.c5)))LIKE(HEX(vt1.c2)))) ORDER BY '' ASC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (0.1515024378759393);
SELECT SUM(count) FROM (SELECT ((0.1515024378759393) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (0.1515024378759393);
SELECT SUM(count) FROM (SELECT ((0.1515024378759393) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (0.1515024378759393);
SELECT * FROM rt0, vt1 LEFT OUTER JOIN t0 ON (((t0.c4, rt0.c5, t0.c1)) BETWEEN (((rt0.c3 IN ()), (~ (t0.c0)), ((t0.c2) IS FALSE))) AND ((json_array(rt0.c4, vt1.c1), (((vt1.c2)) BETWEEN ((t0.c1)) AND ((rt0.c1))), CAST(vt1.c0 AS REAL)))) WHERE (((vt1.c2) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2) ISNULL)) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN t0 ON (((t0.c4, rt0.c5, t0.c1)) BETWEEN (((rt0.c3 IN ()), (~ (t0.c0)), ((t0.c2) IS FALSE))) AND ((json_array(rt0.c4, vt1.c1), (((vt1.c2)) BETWEEN ((t0.c1)) AND ((rt0.c1))), CAST(vt1.c0 AS REAL)))));
SELECT * FROM rt0, vt1 LEFT OUTER JOIN t0 ON (((t0.c4, rt0.c5, t0.c1)) BETWEEN (((rt0.c3 IN ()), (~ (t0.c0)), ((t0.c2) IS FALSE))) AND ((json_array(rt0.c4, vt1.c1), (((vt1.c2)) BETWEEN ((t0.c1)) AND ((rt0.c1))), CAST(vt1.c0 AS REAL)))) WHERE (((vt1.c2) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2) ISNULL)) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN t0 ON (((t0.c4, rt0.c5, t0.c1)) BETWEEN (((rt0.c3 IN ()), (~ (t0.c0)), ((t0.c2) IS FALSE))) AND ((json_array(rt0.c4, vt1.c1), (((vt1.c2)) BETWEEN ((t0.c1)) AND ((rt0.c1))), CAST(vt1.c0 AS REAL)))));
SELECT * FROM rt0, vt1 LEFT OUTER JOIN t0 ON (((t0.c4, rt0.c5, t0.c1)) BETWEEN (((rt0.c3 IN ()), (~ (t0.c0)), ((t0.c2) IS FALSE))) AND ((json_array(rt0.c4, vt1.c1), (((vt1.c2)) BETWEEN ((t0.c1)) AND ((rt0.c1))), CAST(vt1.c0 AS REAL)))) WHERE (((vt1.c2) ISNULL));
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT ALL * FROM t0 WHERE (((((((((((((((((((t0.c3)!=(t0.c0)))OR(CAST(t0.c1 AS TEXT))))AND((((t0.c4, t0.c3, t0.c3))>((t0.c1, t0.c2, t0.c4))))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND((- (t0.c4)))))AND(((t0.c4) IS FALSE))))OR(t0.c1 COLLATE BINARY)))AND(((t0.c0) IS TRUE))))OR(((t0.c1)<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((t0.c3)!=(t0.c0)))OR(CAST(t0.c1 AS TEXT))))AND((((t0.c4, t0.c3, t0.c3))>((t0.c1, t0.c2, t0.c4))))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND((- (t0.c4)))))AND(((t0.c4) IS FALSE))))OR(t0.c1 COLLATE BINARY)))AND(((t0.c0) IS TRUE))))OR(((t0.c1)<(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((((((((((t0.c3)!=(t0.c0)))OR(CAST(t0.c1 AS TEXT))))AND((((t0.c4, t0.c3, t0.c3))>((t0.c1, t0.c2, t0.c4))))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND((- (t0.c4)))))AND(((t0.c4) IS FALSE))))OR(t0.c1 COLLATE BINARY)))AND(((t0.c0) IS TRUE))))OR(((t0.c1)<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((t0.c3)!=(t0.c0)))OR(CAST(t0.c1 AS TEXT))))AND((((t0.c4, t0.c3, t0.c3))>((t0.c1, t0.c2, t0.c4))))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND((- (t0.c4)))))AND(((t0.c4) IS FALSE))))OR(t0.c1 COLLATE BINARY)))AND(((t0.c0) IS TRUE))))OR(((t0.c1)<(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((((((((((t0.c3)!=(t0.c0)))OR(CAST(t0.c1 AS TEXT))))AND((((t0.c4, t0.c3, t0.c3))>((t0.c1, t0.c2, t0.c4))))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND((- (t0.c4)))))AND(((t0.c4) IS FALSE))))OR(t0.c1 COLLATE BINARY)))AND(((t0.c0) IS TRUE))))OR(((t0.c1)<(t0.c0)))));
SELECT * FROM rt0 WHERE (((CASE WHEN x'c434' THEN rt0.c6 END) BETWEEN (((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c0))) AND (rt0.c4))) ORDER BY (NOT (json(rt0.c4))), ((NULL) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'c434' THEN rt0.c6 END) BETWEEN (((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c0))) AND (rt0.c4))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (json(rt0.c4))), ((NULL) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE WHEN x'c434' THEN rt0.c6 END) BETWEEN (((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c0))) AND (rt0.c4))) ORDER BY (NOT (json(rt0.c4))), ((NULL) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'c434' THEN rt0.c6 END) BETWEEN (((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c0))) AND (rt0.c4))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (json(rt0.c4))), ((NULL) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE WHEN x'c434' THEN rt0.c6 END) BETWEEN (((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c0))) AND (rt0.c4))) ORDER BY (NOT (json(rt0.c4))), ((NULL) NOT NULL) ASC  NULLS FIRST;
SELECT * FROM t0, rt0, vt1 WHERE ((((x''))=((t0.c0 COLLATE NOCASE)))) ORDER BY ((((CASE rt0.c6  WHEN rt0.c2 THEN rt0.c4 END)OR(((vt1.c1)OR(rt0.c1)))))OR((((rt0.c4, t0.c1, t0.c3, vt1.c1, rt0.c6))>=((t0.c4, rt0.c5, rt0.c0, vt1.c0, rt0.c4)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x''))=((t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((CASE rt0.c6  WHEN rt0.c2 THEN rt0.c4 END)OR(((vt1.c1)OR(rt0.c1)))))OR((((rt0.c4, t0.c1, t0.c3, vt1.c1, rt0.c6))>=((t0.c4, rt0.c5, rt0.c0, vt1.c0, rt0.c4)))))  NULLS LAST);
SELECT * FROM t0, rt0, vt1 WHERE ((((x''))=((t0.c0 COLLATE NOCASE)))) ORDER BY ((((CASE rt0.c6  WHEN rt0.c2 THEN rt0.c4 END)OR(((vt1.c1)OR(rt0.c1)))))OR((((rt0.c4, t0.c1, t0.c3, vt1.c1, rt0.c6))>=((t0.c4, rt0.c5, rt0.c0, vt1.c0, rt0.c4)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x''))=((t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((CASE rt0.c6  WHEN rt0.c2 THEN rt0.c4 END)OR(((vt1.c1)OR(rt0.c1)))))OR((((rt0.c4, t0.c1, t0.c3, vt1.c1, rt0.c6))>=((t0.c4, rt0.c5, rt0.c0, vt1.c0, rt0.c4)))))  NULLS LAST);
SELECT * FROM t0, rt0, vt1 WHERE ((((x''))=((t0.c0 COLLATE NOCASE)))) ORDER BY ((((CASE rt0.c6  WHEN rt0.c2 THEN rt0.c4 END)OR(((vt1.c1)OR(rt0.c1)))))OR((((rt0.c4, t0.c1, t0.c3, vt1.c1, rt0.c6))>=((t0.c4, rt0.c5, rt0.c0, vt1.c0, rt0.c4)))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))<((vt1.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (vt1.c0 COLLATE NOCASE))) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<((vt1.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))<((vt1.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (vt1.c0 COLLATE NOCASE))) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<((vt1.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))<((vt1.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (vt1.c0 COLLATE NOCASE))) ORDER BY vt1.c1 DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2))) NOT NULL)) ORDER BY json_remove(((vt1.c1)>>(vt1.c0)), IFNULL(DISTINCT vt1.c0, vt1.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY json_remove(((vt1.c1)>>(vt1.c0)), IFNULL(DISTINCT vt1.c0, vt1.c2))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2))) NOT NULL)) ORDER BY json_remove(((vt1.c1)>>(vt1.c0)), IFNULL(DISTINCT vt1.c0, vt1.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY json_remove(((vt1.c1)>>(vt1.c0)), IFNULL(DISTINCT vt1.c0, vt1.c2))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c2 IN (NULL)))*(TIME(vt1.c2, vt1.c2, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN (NULL)))*(TIME(vt1.c2, vt1.c2, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c2 IN (NULL)))*(TIME(vt1.c2, vt1.c2, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN (NULL)))*(TIME(vt1.c2, vt1.c2, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c2 IN (NULL)))*(TIME(vt1.c2, vt1.c2, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))));
SELECT ALL * FROM vt1 WHERE (((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE RTRIM) ORDER BY CAST(((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0)) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE RTRIM) ORDER BY CAST(((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0)) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE RTRIM) ORDER BY CAST(((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0)) AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON CASE CAST(vt1.c2 AS REAL)  WHEN t0.c4 COLLATE BINARY THEN LIKELY(vt1.c0) ELSE CHANGES() END WHERE (CAST(CAST(vt1.c1 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON CASE CAST(vt1.c2 AS REAL)  WHEN t0.c4 COLLATE BINARY THEN LIKELY(vt1.c0) ELSE CHANGES() END);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON CASE CAST(vt1.c2 AS REAL)  WHEN t0.c4 COLLATE BINARY THEN LIKELY(vt1.c0) ELSE CHANGES() END WHERE (CAST(CAST(vt1.c1 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON CASE CAST(vt1.c2 AS REAL)  WHEN t0.c4 COLLATE BINARY THEN LIKELY(vt1.c0) ELSE CHANGES() END);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON CASE CAST(vt1.c2 AS REAL)  WHEN t0.c4 COLLATE BINARY THEN LIKELY(vt1.c0) ELSE CHANGES() END WHERE (CAST(CAST(vt1.c1 AS BLOB) AS TEXT));
SELECT * FROM vt1, rt0, t0 WHERE (((((t0.c3)LIKE(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c3)LIKE(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (((((t0.c3)LIKE(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c3)LIKE(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (((((t0.c3)LIKE(vt1.c0))) NOT NULL));
SELECT ALL * FROM rt0, vt1, t0 WHERE ((NOT ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0, vt1, t0 WHERE ((NOT ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0, vt1, t0 WHERE ((NOT ((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN t0 ON ((((rt0.c5)AND(vt1.c1)))OR(rt0.c5)) COLLATE NOCASE WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t0 ON ((((rt0.c5)AND(vt1.c1)))OR(rt0.c5)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN t0 ON ((((rt0.c5)AND(vt1.c1)))OR(rt0.c5)) COLLATE NOCASE WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t0 ON ((((rt0.c5)AND(vt1.c1)))OR(rt0.c5)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN t0 ON ((((rt0.c5)AND(vt1.c1)))OR(rt0.c5)) COLLATE NOCASE WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('-81565166')*(vt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((('-81565166')*(vt1.c2))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('-81565166')*(vt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((('-81565166')*(vt1.c2))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('-81565166')*(vt1.c2))) ISNULL));
SELECT ALL * FROM vt1, rt0 INNER JOIN t0 ON (NOT (x'')) WHERE (((((t0.c2)LIKE(rt0.c3)))%(((rt0.c4) BETWEEN (rt0.c6) AND (rt0.c6))))) ORDER BY SQLITE_VERSION() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)LIKE(rt0.c3)))%(((rt0.c4) BETWEEN (rt0.c6) AND (rt0.c6))))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t0 ON (NOT (x'')) ORDER BY SQLITE_VERSION() DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 INNER JOIN t0 ON (NOT (x'')) WHERE (((((t0.c2)LIKE(rt0.c3)))%(((rt0.c4) BETWEEN (rt0.c6) AND (rt0.c6))))) ORDER BY SQLITE_VERSION() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)LIKE(rt0.c3)))%(((rt0.c4) BETWEEN (rt0.c6) AND (rt0.c6))))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t0 ON (NOT (x'')) ORDER BY SQLITE_VERSION() DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 INNER JOIN t0 ON (NOT (x'')) WHERE (((((t0.c2)LIKE(rt0.c3)))%(((rt0.c4) BETWEEN (rt0.c6) AND (rt0.c6))))) ORDER BY SQLITE_VERSION() DESC  NULLS LAST;
SELECT * FROM rt0 WHERE ((('489388015') IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((('489388015') IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('489388015') IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((('489388015') IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('489388015') IS FALSE) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((((NULL) BETWEEN (t0.c4) AND (rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT (((((NULL) BETWEEN (t0.c4) AND (rt0.c4)) IN ())) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((((NULL) BETWEEN (t0.c4) AND (rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT (((((NULL) BETWEEN (t0.c4) AND (rt0.c4)) IN ())) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((((NULL) BETWEEN (t0.c4) AND (rt0.c4)) IN ()));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (NOT (((rt0.c3)<>(t0.c2)))) RIGHT OUTER JOIN vt1 ON ((((t0.c1)/(rt0.c2)))IS(rt0.c4)) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (NOT (((rt0.c3)<>(t0.c2)))) RIGHT OUTER JOIN vt1 ON ((((t0.c1)/(rt0.c2)))IS(rt0.c4)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (NOT (((rt0.c3)<>(t0.c2)))) RIGHT OUTER JOIN vt1 ON ((((t0.c1)/(rt0.c2)))IS(rt0.c4)) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (NOT (((rt0.c3)<>(t0.c2)))) RIGHT OUTER JOIN vt1 ON ((((t0.c1)/(rt0.c2)))IS(rt0.c4)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (NOT (((rt0.c3)<>(t0.c2)))) RIGHT OUTER JOIN vt1 ON ((((t0.c1)/(rt0.c2)))IS(rt0.c4)) WHERE (rt0.c2);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) BETWEEN ((CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)) AND ((t0.c1)))) ORDER BY (- (t0.c3)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)) AND ((t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY (- (t0.c3)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) BETWEEN ((CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)) AND ((t0.c1)))) ORDER BY (- (t0.c3)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)) AND ((t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY (- (t0.c3)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) BETWEEN ((CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)) AND ((t0.c1)))) ORDER BY (- (t0.c3)) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (-116719986) ORDER BY (+ (t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-116719986) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (-116719986) ORDER BY (+ (t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-116719986) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (-116719986) ORDER BY (+ (t0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON CASE ((rt0.c3) IS TRUE)  WHEN (- (rt0.c0)) THEN ((((t0.c0)OR(vt1.c1)))OR(vt1.c0)) END INNER JOIN vt1 ON (- (((0.541091999593307)GLOB(rt0.c3)))) WHERE (CASE MIN(t0.c1, t0.c3, t0.c1, NULL, rt0.c4, vt1.c2)  WHEN vt1.c0 THEN (((x'a4b6')) NOT BETWEEN ((t0.c0)) AND ((t0.c4))) ELSE CASE WHEN t0.c2 THEN NULL ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE MIN(t0.c1, t0.c3, t0.c1, NULL, rt0.c4, vt1.c2)  WHEN vt1.c0 THEN (((x'a4b6')) NOT BETWEEN ((t0.c0)) AND ((t0.c4))) ELSE CASE WHEN t0.c2 THEN NULL ELSE rt0.c2 END END) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CASE ((rt0.c3) IS TRUE)  WHEN (- (rt0.c0)) THEN ((((t0.c0)OR(vt1.c1)))OR(vt1.c0)) END INNER JOIN vt1 ON (- (((0.541091999593307)GLOB(rt0.c3)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON CASE ((rt0.c3) IS TRUE)  WHEN (- (rt0.c0)) THEN ((((t0.c0)OR(vt1.c1)))OR(vt1.c0)) END INNER JOIN vt1 ON (- (((0.541091999593307)GLOB(rt0.c3)))) WHERE (CASE MIN(t0.c1, t0.c3, t0.c1, NULL, rt0.c4, vt1.c2)  WHEN vt1.c0 THEN (((x'a4b6')) NOT BETWEEN ((t0.c0)) AND ((t0.c4))) ELSE CASE WHEN t0.c2 THEN NULL ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE MIN(t0.c1, t0.c3, t0.c1, NULL, rt0.c4, vt1.c2)  WHEN vt1.c0 THEN (((x'a4b6')) NOT BETWEEN ((t0.c0)) AND ((t0.c4))) ELSE CASE WHEN t0.c2 THEN NULL ELSE rt0.c2 END END) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CASE ((rt0.c3) IS TRUE)  WHEN (- (rt0.c0)) THEN ((((t0.c0)OR(vt1.c1)))OR(vt1.c0)) END INNER JOIN vt1 ON (- (((0.541091999593307)GLOB(rt0.c3)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON CASE ((rt0.c3) IS TRUE)  WHEN (- (rt0.c0)) THEN ((((t0.c0)OR(vt1.c1)))OR(vt1.c0)) END INNER JOIN vt1 ON (- (((0.541091999593307)GLOB(rt0.c3)))) WHERE (CASE MIN(t0.c1, t0.c3, t0.c1, NULL, rt0.c4, vt1.c2)  WHEN vt1.c0 THEN (((x'a4b6')) NOT BETWEEN ((t0.c0)) AND ((t0.c4))) ELSE CASE WHEN t0.c2 THEN NULL ELSE rt0.c2 END END);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (CASE WHEN rt0.c6 THEN rt0.c6 END IN ()) WHERE ((~ ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (rt0.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (CASE WHEN rt0.c6 THEN rt0.c6 END IN ()));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (CASE WHEN rt0.c6 THEN rt0.c6 END IN ()) WHERE ((~ ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (rt0.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (CASE WHEN rt0.c6 THEN rt0.c6 END IN ()));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (CASE WHEN rt0.c6 THEN rt0.c6 END IN ()) WHERE ((~ ((+ (rt0.c0)))));
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'')AND(rt0.c5)))OR(highlight(rt0.c0, rt0.c3, rt0.c0, rt0.c6))));
SELECT SUM(count) FROM (SELECT ((((((x'')AND(rt0.c5)))OR(highlight(rt0.c0, rt0.c3, rt0.c0, rt0.c6)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'')AND(rt0.c5)))OR(highlight(rt0.c0, rt0.c3, rt0.c0, rt0.c6))));
SELECT SUM(count) FROM (SELECT ((((((x'')AND(rt0.c5)))OR(highlight(rt0.c0, rt0.c3, rt0.c0, rt0.c6)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'')AND(rt0.c5)))OR(highlight(rt0.c0, rt0.c3, rt0.c0, rt0.c6))));
SELECT COUNT(*) FROM vt1, rt0 CROSS JOIN t0 ON x'' WHERE (CASE rt0.c4  WHEN rt0.c4 THEN t0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c3 THEN '1306857566' ELSE rt0.c4 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN rt0.c4 THEN t0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c3 THEN '1306857566' ELSE rt0.c4 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED CROSS JOIN t0 ON x'');
SELECT COUNT(*) FROM vt1, rt0 CROSS JOIN t0 ON x'' WHERE (CASE rt0.c4  WHEN rt0.c4 THEN t0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c3 THEN '1306857566' ELSE rt0.c4 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN rt0.c4 THEN t0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c3 THEN '1306857566' ELSE rt0.c4 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED CROSS JOIN t0 ON x'');
SELECT COUNT(*) FROM vt1, rt0 CROSS JOIN t0 ON x'' WHERE (CASE rt0.c4  WHEN rt0.c4 THEN t0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c3 THEN '1306857566' ELSE rt0.c4 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c4);
SELECT SUM(count) FROM (SELECT ALL ((t0.c4) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c4);
SELECT SUM(count) FROM (SELECT ALL ((t0.c4) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c4);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)IS NOT(vt1.c0)) IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM)<=((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)IS NOT(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)<=((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)IS NOT(vt1.c0)) IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM)<=((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)IS NOT(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)<=((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)IS NOT(vt1.c0)) IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM)<=((vt1.c0 IN ())));
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c4)+(vt1.c0))) AND (rt0.c2)) WHERE (((((rt0.c6) NOTNULL))*(CASE WHEN rt0.c5 THEN 0.6189004980127997 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c6) NOTNULL))*(CASE WHEN rt0.c5 THEN 0.6189004980127997 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c4)+(vt1.c0))) AND (rt0.c2)));
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c4)+(vt1.c0))) AND (rt0.c2)) WHERE (((((rt0.c6) NOTNULL))*(CASE WHEN rt0.c5 THEN 0.6189004980127997 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c6) NOTNULL))*(CASE WHEN rt0.c5 THEN 0.6189004980127997 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c4)+(vt1.c0))) AND (rt0.c2)));
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c4)+(vt1.c0))) AND (rt0.c2)) WHERE (((((rt0.c6) NOTNULL))*(CASE WHEN rt0.c5 THEN 0.6189004980127997 ELSE rt0.c1 END)));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((((0.669812100226485)OR(vt1.c1)))AND(rt0.c2)))AND((((vt1.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))))AND(((rt0.c0)<>(vt1.c0)))) WHERE ((NOT (0.493404020179417))) ORDER BY (((~ (vt1.c0))) NOT BETWEEN (CAST(rt0.c5 AS INTEGER)) AND (((rt0.c5)/(rt0.c6))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.493404020179417))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((((0.669812100226485)OR(vt1.c1)))AND(rt0.c2)))AND((((vt1.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))))AND(((rt0.c0)<>(vt1.c0)))) ORDER BY (((~ (vt1.c0))) NOT BETWEEN (CAST(rt0.c5 AS INTEGER)) AND (((rt0.c5)/(rt0.c6))))  NULLS FIRST);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((((0.669812100226485)OR(vt1.c1)))AND(rt0.c2)))AND((((vt1.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))))AND(((rt0.c0)<>(vt1.c0)))) WHERE ((NOT (0.493404020179417))) ORDER BY (((~ (vt1.c0))) NOT BETWEEN (CAST(rt0.c5 AS INTEGER)) AND (((rt0.c5)/(rt0.c6))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.493404020179417))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((((0.669812100226485)OR(vt1.c1)))AND(rt0.c2)))AND((((vt1.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))))AND(((rt0.c0)<>(vt1.c0)))) ORDER BY (((~ (vt1.c0))) NOT BETWEEN (CAST(rt0.c5 AS INTEGER)) AND (((rt0.c5)/(rt0.c6))))  NULLS FIRST);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((((0.669812100226485)OR(vt1.c1)))AND(rt0.c2)))AND((((vt1.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))))AND(((rt0.c0)<>(vt1.c0)))) WHERE ((NOT (0.493404020179417))) ORDER BY (((~ (vt1.c0))) NOT BETWEEN (CAST(rt0.c5 AS INTEGER)) AND (((rt0.c5)/(rt0.c6))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))) THEN (~ (vt1.c2)) END) ORDER BY CAST(vt1.c0 AS TEXT) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))) THEN (~ (vt1.c2)) END) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS TEXT) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))) THEN (~ (vt1.c2)) END) ORDER BY CAST(vt1.c0 AS TEXT) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))) THEN (~ (vt1.c2)) END) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS TEXT) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))) THEN (~ (vt1.c2)) END) ORDER BY CAST(vt1.c0 AS TEXT) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM t0, vt1, rt0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN (CASE WHEN rt0.c0 THEN 0.7129597758840932 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c3 THEN rt0.c2 END))) ORDER BY ((CAST(rt0.c1 AS BLOB))/(((rt0.c6)<=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS NUMERIC) IN (CASE WHEN rt0.c0 THEN 0.7129597758840932 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((CAST(rt0.c1 AS BLOB))/(((rt0.c6)<=(rt0.c2)))));
SELECT ALL * FROM t0, vt1, rt0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN (CASE WHEN rt0.c0 THEN 0.7129597758840932 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c3 THEN rt0.c2 END))) ORDER BY ((CAST(rt0.c1 AS BLOB))/(((rt0.c6)<=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS NUMERIC) IN (CASE WHEN rt0.c0 THEN 0.7129597758840932 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((CAST(rt0.c1 AS BLOB))/(((rt0.c6)<=(rt0.c2)))));
SELECT ALL * FROM t0, vt1, rt0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN (CASE WHEN rt0.c0 THEN 0.7129597758840932 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c3 THEN rt0.c2 END))) ORDER BY ((CAST(rt0.c1 AS BLOB))/(((rt0.c6)<=(rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE (LOWER((((rt0.c5))>((rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((rt0.c5))>((rt0.c5))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LOWER((((rt0.c5))>((rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((rt0.c5))>((rt0.c5))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LOWER((((rt0.c5))>((rt0.c5)))));
SELECT * FROM rt0, t0, vt1 WHERE (((((rt0.c4) BETWEEN (1447599020) AND (vt1.c2)))>>((((vt1.c1)) BETWEEN ((t0.c4)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) BETWEEN (1447599020) AND (vt1.c2)))>>((((vt1.c1)) BETWEEN ((t0.c4)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT * FROM rt0, t0, vt1 WHERE (((((rt0.c4) BETWEEN (1447599020) AND (vt1.c2)))>>((((vt1.c1)) BETWEEN ((t0.c4)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) BETWEEN (1447599020) AND (vt1.c2)))>>((((vt1.c1)) BETWEEN ((t0.c4)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT * FROM rt0, t0, vt1 WHERE (((((rt0.c4) BETWEEN (1447599020) AND (vt1.c2)))>>((((vt1.c1)) BETWEEN ((t0.c4)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (((CAST(t0.c4 AS BLOB)) BETWEEN (((NULL) NOT NULL)) AND ((+ (rt0.c4))))) ORDER BY -116719986 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c4 AS BLOB)) BETWEEN (((NULL) NOT NULL)) AND ((+ (rt0.c4))))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY -116719986 ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (((CAST(t0.c4 AS BLOB)) BETWEEN (((NULL) NOT NULL)) AND ((+ (rt0.c4))))) ORDER BY -116719986 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c4 AS BLOB)) BETWEEN (((NULL) NOT NULL)) AND ((+ (rt0.c4))))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY -116719986 ASC);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c2) NOT NULL) THEN (((0.08581971591492155)) BETWEEN ((t0.c4)) AND ((t0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2) NOT NULL) THEN (((0.08581971591492155)) BETWEEN ((t0.c4)) AND ((t0.c1))) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c2) NOT NULL) THEN (((0.08581971591492155)) BETWEEN ((t0.c4)) AND ((t0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2) NOT NULL) THEN (((0.08581971591492155)) BETWEEN ((t0.c4)) AND ((t0.c1))) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c2) NOT NULL) THEN (((0.08581971591492155)) BETWEEN ((t0.c4)) AND ((t0.c1))) END);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ABS(IFNULL(NULL, vt1.c0)) LEFT OUTER JOIN rt0 ON (~ (ABS(DISTINCT t0.c1))) WHERE ((~ ((('1306857566') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((('1306857566') NOT NULL)))) IS TRUE)  as count FROM vt1 NOT INDEXED CROSS JOIN t0 ON ABS(IFNULL(NULL, vt1.c0)) LEFT OUTER JOIN rt0 ON (~ (ABS(DISTINCT t0.c1))));
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ABS(IFNULL(NULL, vt1.c0)) LEFT OUTER JOIN rt0 ON (~ (ABS(DISTINCT t0.c1))) WHERE ((~ ((('1306857566') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((('1306857566') NOT NULL)))) IS TRUE)  as count FROM vt1 NOT INDEXED CROSS JOIN t0 ON ABS(IFNULL(NULL, vt1.c0)) LEFT OUTER JOIN rt0 ON (~ (ABS(DISTINCT t0.c1))));
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ABS(IFNULL(NULL, vt1.c0)) LEFT OUTER JOIN rt0 ON (~ (ABS(DISTINCT t0.c1))) WHERE ((~ ((('1306857566') NOT NULL))));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))))!=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))))<>((((((vt1.c0)AND(vt1.c0)))AND(vt1.c2)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))))!=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))))<>((((((vt1.c0)AND(vt1.c0)))AND(vt1.c2)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))))!=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c2))))));
SELECT * FROM rt0 WHERE (((((rt0.c4 IN ('00'))))<>(((~ (rt0.c1)))))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE x'' END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4 IN ('00'))))!=(((~ (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE x'' END AS INTEGER) ASC);
SELECT * FROM rt0 WHERE (((((rt0.c4 IN ('00'))))<>(((~ (rt0.c1)))))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE x'' END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4 IN ('00'))))!=(((~ (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE x'' END AS INTEGER) ASC);
SELECT * FROM rt0 WHERE (((((rt0.c4 IN ('00'))))<>(((~ (rt0.c1)))))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE x'' END AS INTEGER) ASC;
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((vt1.c0) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((vt1.c0) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((vt1.c0) IS FALSE)) IS FALSE));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((t0.c2 COLLATE BINARY)AND(t0.c3)))OR(((t0.c1) NOT NULL))))OR((NOT (t0.c2)))))OR(((((0.08092681888656716)OR(t0.c0)))AND(vt1.c0)))) WHERE (CAST((((vt1.c2, vt1.c0, vt1.c1))>=((t0.c4, t0.c0, t0.c0))) AS INTEGER)) ORDER BY (((vt1.c0)) NOT BETWEEN (((((vt1.c0))<=((t0.c0))))) AND ((((((vt1.c0)AND(vt1.c1)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c2, vt1.c0, vt1.c1))>=((t0.c4, t0.c0, t0.c0))) AS INTEGER)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((t0.c2 COLLATE BINARY)AND(t0.c3)))OR(((t0.c1) NOT NULL))))OR((NOT (t0.c2)))))OR(((((0.08092681888656716)OR(t0.c0)))AND(vt1.c0)))) ORDER BY (((vt1.c0)) NOT BETWEEN (((((vt1.c0))<=((t0.c0))))) AND ((((((vt1.c0)AND(vt1.c1)))AND(t0.c1))))));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((t0.c2 COLLATE BINARY)AND(t0.c3)))OR(((t0.c1) NOT NULL))))OR((NOT (t0.c2)))))OR(((((0.08092681888656716)OR(t0.c0)))AND(vt1.c0)))) WHERE (CAST((((vt1.c2, vt1.c0, vt1.c1))>=((t0.c4, t0.c0, t0.c0))) AS INTEGER)) ORDER BY (((vt1.c0)) NOT BETWEEN (((((vt1.c0))<=((t0.c0))))) AND ((((((vt1.c0)AND(vt1.c1)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c2, vt1.c0, vt1.c1))>=((t0.c4, t0.c0, t0.c0))) AS INTEGER)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((t0.c2 COLLATE BINARY)AND(t0.c3)))OR(((t0.c1) NOT NULL))))OR((NOT (t0.c2)))))OR(((((0.08092681888656716)OR(t0.c0)))AND(vt1.c0)))) ORDER BY (((vt1.c0)) NOT BETWEEN (((((vt1.c0))<=((t0.c0))))) AND ((((((vt1.c0)AND(vt1.c1)))AND(t0.c1))))));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((t0.c2 COLLATE BINARY)AND(t0.c3)))OR(((t0.c1) NOT NULL))))OR((NOT (t0.c2)))))OR(((((0.08092681888656716)OR(t0.c0)))AND(vt1.c0)))) WHERE (CAST((((vt1.c2, vt1.c0, vt1.c1))>=((t0.c4, t0.c0, t0.c0))) AS INTEGER)) ORDER BY (((vt1.c0)) NOT BETWEEN (((((vt1.c0))<=((t0.c0))))) AND ((((((vt1.c0)AND(vt1.c1)))AND(t0.c1)))));
SELECT ALL * FROM vt1, t0 WHERE (((((((((((t0.c2)OR(t0.c4)))OR(t0.c0)))AND(vt1.c2)))AND(t0.c3))) ISNULL)) ORDER BY CASE WHEN 'AN\nA\n2' THEN ((((((((vt1.c0)OR(t0.c3)))AND(t0.c3)))OR(t0.c0)))OR(vt1.c0)) ELSE ((t0.c3)OR(t0.c3)) END, ((((t0.c3) NOT BETWEEN (vt1.c0) AND ('Yw0')))&((NOT (vt1.c2)))), CASE WHEN t0.c4 THEN ((((vt1.c1)OR(t0.c0)))OR(t0.c4)) WHEN ((vt1.c0) BETWEEN (t0.c4) AND (t0.c3)) THEN (+ (t0.c3)) WHEN ((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN ((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c1)) ELSE CASE vt1.c0  WHEN t0.c3 THEN t0.c1 ELSE 0.7219962392152672 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)OR(t0.c4)))OR(t0.c0)))AND(vt1.c2)))AND(t0.c3))) ISNULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN 'AN\nA\n2' THEN ((((((((vt1.c0)OR(t0.c3)))AND(t0.c3)))OR(t0.c0)))OR(vt1.c0)) ELSE ((t0.c3)OR(t0.c3)) END, ((((t0.c3) NOT BETWEEN (vt1.c0) AND ('Yw0')))&((NOT (vt1.c2)))), CASE WHEN t0.c4 THEN ((((vt1.c1)OR(t0.c0)))OR(t0.c4)) WHEN ((vt1.c0) BETWEEN (t0.c4) AND (t0.c3)) THEN (+ (t0.c3)) WHEN ((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN ((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c1)) ELSE CASE vt1.c0  WHEN t0.c3 THEN t0.c1 ELSE 0.7219962392152672 END END DESC);
SELECT ALL * FROM vt1, t0 WHERE (((((((((((t0.c2)OR(t0.c4)))OR(t0.c0)))AND(vt1.c2)))AND(t0.c3))) ISNULL)) ORDER BY CASE WHEN 'AN\nA\n2' THEN ((((((((vt1.c0)OR(t0.c3)))AND(t0.c3)))OR(t0.c0)))OR(vt1.c0)) ELSE ((t0.c3)OR(t0.c3)) END, ((((t0.c3) NOT BETWEEN (vt1.c0) AND ('Yw0')))&((NOT (vt1.c2)))), CASE WHEN t0.c4 THEN ((((vt1.c1)OR(t0.c0)))OR(t0.c4)) WHEN ((vt1.c0) BETWEEN (t0.c4) AND (t0.c3)) THEN (+ (t0.c3)) WHEN ((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN ((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c1)) ELSE CASE vt1.c0  WHEN t0.c3 THEN t0.c1 ELSE 0.7219962392152672 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)OR(t0.c4)))OR(t0.c0)))AND(vt1.c2)))AND(t0.c3))) ISNULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN 'AN\nA\n2' THEN ((((((((vt1.c0)OR(t0.c3)))AND(t0.c3)))OR(t0.c0)))OR(vt1.c0)) ELSE ((t0.c3)OR(t0.c3)) END, ((((t0.c3) NOT BETWEEN (vt1.c0) AND ('Yw0')))&((NOT (vt1.c2)))), CASE WHEN t0.c4 THEN ((((vt1.c1)OR(t0.c0)))OR(t0.c4)) WHEN ((vt1.c0) BETWEEN (t0.c4) AND (t0.c3)) THEN (+ (t0.c3)) WHEN ((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN ((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c1)) ELSE CASE vt1.c0  WHEN t0.c3 THEN t0.c1 ELSE 0.7219962392152672 END END DESC);
SELECT ALL * FROM vt1, t0 WHERE (((((((((((t0.c2)OR(t0.c4)))OR(t0.c0)))AND(vt1.c2)))AND(t0.c3))) ISNULL)) ORDER BY CASE WHEN 'AN\nA\n2' THEN ((((((((vt1.c0)OR(t0.c3)))AND(t0.c3)))OR(t0.c0)))OR(vt1.c0)) ELSE ((t0.c3)OR(t0.c3)) END, ((((t0.c3) NOT BETWEEN (vt1.c0) AND ('Yw0')))&((NOT (vt1.c2)))), CASE WHEN t0.c4 THEN ((((vt1.c1)OR(t0.c0)))OR(t0.c4)) WHEN ((vt1.c0) BETWEEN (t0.c4) AND (t0.c3)) THEN (+ (t0.c3)) WHEN ((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN ((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c1)) ELSE CASE vt1.c0  WHEN t0.c3 THEN t0.c1 ELSE 0.7219962392152672 END END DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c2) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2) IS FALSE) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c2) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2) IS FALSE) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c2) IS FALSE) AS REAL));
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (rt0.c5) ORDER BY t0.c1 DESC  NULLS LAST, ((t0.c4) BETWEEN (vt1.c2) AND (rt0.c1)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY t0.c1 DESC  NULLS LAST, ((t0.c4) BETWEEN (vt1.c2) AND (rt0.c1)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (rt0.c5) ORDER BY t0.c1 DESC  NULLS LAST, ((t0.c4) BETWEEN (vt1.c2) AND (rt0.c1)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY t0.c1 DESC  NULLS LAST, ((t0.c4) BETWEEN (vt1.c2) AND (rt0.c1)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (rt0.c5) ORDER BY t0.c1 DESC  NULLS LAST, ((t0.c4) BETWEEN (vt1.c2) AND (rt0.c1)) COLLATE BINARY  NULLS LAST;
SELECT * FROM rt0, t0 WHERE (((TRIM(DISTINCT t0.c4, rt0.c4)) IS TRUE)) ORDER BY CAST('?U~.' AS BLOB) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t0.c4, rt0.c4)) IS TRUE)) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST('?U~.' AS BLOB) COLLATE RTRIM);
SELECT * FROM rt0, t0 WHERE (((TRIM(DISTINCT t0.c4, rt0.c4)) IS TRUE)) ORDER BY CAST('?U~.' AS BLOB) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t0.c4, rt0.c4)) IS TRUE)) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST('?U~.' AS BLOB) COLLATE RTRIM);
SELECT * FROM rt0, t0 WHERE (((TRIM(DISTINCT t0.c4, rt0.c4)) IS TRUE)) ORDER BY CAST('?U~.' AS BLOB) COLLATE RTRIM;
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (((rt0.c2) IS TRUE)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE)) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY x'');
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (((rt0.c2) IS TRUE)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE)) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY x'');
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (((rt0.c2) IS TRUE)) ORDER BY x'';
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((((rt0.c1)IS NOT(rt0.c3)))AND(CAST(t0.c0 AS TEXT))))AND(rt0.c4))) ORDER BY CASE (vt1.c0 IN ())  WHEN ((rt0.c6) BETWEEN (rt0.c5) AND (rt0.c2)) THEN ((t0.c4)+(vt1.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)IS NOT(rt0.c3)))AND(CAST(t0.c0 AS TEXT))))AND(rt0.c4))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY CASE (vt1.c0 IN ())  WHEN ((rt0.c6) BETWEEN (rt0.c5) AND (rt0.c2)) THEN ((t0.c4)+(vt1.c1)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((((rt0.c1)IS NOT(rt0.c3)))AND(CAST(t0.c0 AS TEXT))))AND(rt0.c4))) ORDER BY CASE (vt1.c0 IN ())  WHEN ((rt0.c6) BETWEEN (rt0.c5) AND (rt0.c2)) THEN ((t0.c4)+(vt1.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)IS NOT(rt0.c3)))AND(CAST(t0.c0 AS TEXT))))AND(rt0.c4))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY CASE (vt1.c0 IN ())  WHEN ((rt0.c6) BETWEEN (rt0.c5) AND (rt0.c2)) THEN ((t0.c4)+(vt1.c1)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((((rt0.c1)IS NOT(rt0.c3)))AND(CAST(t0.c0 AS TEXT))))AND(rt0.c4))) ORDER BY CASE (vt1.c0 IN ())  WHEN ((rt0.c6) BETWEEN (rt0.c5) AND (rt0.c2)) THEN ((t0.c4)+(vt1.c1)) END DESC  NULLS LAST;
SELECT * FROM t0, rt0 WHERE (((((((((t0.c3)AND(CAST(t0.c4 AS INTEGER))))OR(((NULL) NOT BETWEEN (rt0.c3) AND (NULL)))))AND(((t0.c4) IS TRUE))))OR(NULL))) ORDER BY (((((~ (rt0.c3)))AND((- (t0.c1)))))OR((t0.c1 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c3)AND(CAST(t0.c4 AS INTEGER))))OR(((NULL) NOT BETWEEN (rt0.c3) AND (NULL)))))AND(((t0.c4) IS TRUE))))OR(NULL))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((~ (rt0.c3)))AND((- (t0.c1)))))OR((t0.c1 IN (rt0.c0)))));
SELECT * FROM t0, rt0 WHERE (((((((((t0.c3)AND(CAST(t0.c4 AS INTEGER))))OR(((NULL) NOT BETWEEN (rt0.c3) AND (NULL)))))AND(((t0.c4) IS TRUE))))OR(NULL))) ORDER BY (((((~ (rt0.c3)))AND((- (t0.c1)))))OR((t0.c1 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c3)AND(CAST(t0.c4 AS INTEGER))))OR(((NULL) NOT BETWEEN (rt0.c3) AND (NULL)))))AND(((t0.c4) IS TRUE))))OR(NULL))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((~ (rt0.c3)))AND((- (t0.c1)))))OR((t0.c1 IN (rt0.c0)))));
SELECT * FROM t0, rt0 WHERE (((((((((t0.c3)AND(CAST(t0.c4 AS INTEGER))))OR(((NULL) NOT BETWEEN (rt0.c3) AND (NULL)))))AND(((t0.c4) IS TRUE))))OR(NULL))) ORDER BY (((((~ (rt0.c3)))AND((- (t0.c1)))))OR((t0.c1 IN (rt0.c0))));
SELECT ALL * FROM t0, rt0, vt1 WHERE (((CASE WHEN NULL THEN rt0.c3 ELSE '\rFIqVTz葼' END) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN rt0.c3 ELSE '\rFIqVTz葼' END) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((CASE WHEN NULL THEN rt0.c3 ELSE '\rFIqVTz葼' END) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN rt0.c3 ELSE '\rFIqVTz葼' END) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((CASE WHEN NULL THEN rt0.c3 ELSE '\rFIqVTz葼' END) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (CAST(rt0.c3 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt1 WHERE (UNLIKELY(((vt1.c0) NOT NULL))) ORDER BY (- (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt1.c0) NOT NULL))) IS TRUE)  as count FROM vt1 ORDER BY (- (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c2 END)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (UNLIKELY(((vt1.c0) NOT NULL))) ORDER BY (- (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt1.c0) NOT NULL))) IS TRUE)  as count FROM vt1 ORDER BY (- (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c2 END)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (UNLIKELY(((vt1.c0) NOT NULL))) ORDER BY (- (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c2 END)) ASC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (x'') ORDER BY (((rt0.c5 IN ()))OR((((rt0.c1))>((vt1.c1))))) ASC  NULLS FIRST, CASE ((rt0.c6) NOT BETWEEN (rt0.c6) AND (vt1.c1))  WHEN ((rt0.c6) NOTNULL) THEN (('-1058879574')AND(vt1.c1)) ELSE ((vt1.c1) NOTNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c5 IN ()))OR((((rt0.c1))>((vt1.c1))))) ASC  NULLS FIRST, CASE ((rt0.c6) NOT BETWEEN (rt0.c6) AND (vt1.c1))  WHEN ((rt0.c6) NOTNULL) THEN (('-1058879574')AND(vt1.c1)) ELSE ((vt1.c1) NOTNULL) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (x'') ORDER BY (((rt0.c5 IN ()))OR((((rt0.c1))>((vt1.c1))))) ASC  NULLS FIRST, CASE ((rt0.c6) NOT BETWEEN (rt0.c6) AND (vt1.c1))  WHEN ((rt0.c6) NOTNULL) THEN (('-1058879574')AND(vt1.c1)) ELSE ((vt1.c1) NOTNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c5 IN ()))OR((((rt0.c1))>((vt1.c1))))) ASC  NULLS FIRST, CASE ((rt0.c6) NOT BETWEEN (rt0.c6) AND (vt1.c1))  WHEN ((rt0.c6) NOTNULL) THEN (('-1058879574')AND(vt1.c1)) ELSE ((vt1.c1) NOTNULL) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (x'') ORDER BY (((rt0.c5 IN ()))OR((((rt0.c1))>((vt1.c1))))) ASC  NULLS FIRST, CASE ((rt0.c6) NOT BETWEEN (rt0.c6) AND (vt1.c1))  WHEN ((rt0.c6) NOTNULL) THEN (('-1058879574')AND(vt1.c1)) ELSE ((vt1.c1) NOTNULL) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((rt0.c6)IS(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c6)IS(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((rt0.c6)IS(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c6)IS(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((rt0.c6)IS(rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c6)+(rt0.c5)))<<(((-1774127349) NOT BETWEEN (rt0.c1) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c6)+(rt0.c5)))<<(((-1774127349) NOT BETWEEN (rt0.c1) AND (NULL))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c6)+(rt0.c5)))<<(((-1774127349) NOT BETWEEN (rt0.c1) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c6)+(rt0.c5)))<<(((-1774127349) NOT BETWEEN (rt0.c1) AND (NULL))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c6)+(rt0.c5)))<<(((-1774127349) NOT BETWEEN (rt0.c1) AND (NULL)))));
SELECT ALL * FROM vt1 WHERE ((+ ((vt1.c1 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c1 IN (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ ((vt1.c1 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c1 IN (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ ((vt1.c1 IN (vt1.c0)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((vt1.c0)<=(vt1.c1)))IS(((t0.c3)||(rt0.c6)))) INNER JOIN vt1 ON ((((t0.c4) BETWEEN (t0.c2) AND (vt1.c1)))+(((rt0.c6)||(t0.c4)))) WHERE ((((t0.c3 IN ())) BETWEEN ((NOT (vt1.c2))) AND ((((t0.c0, 0.5763159750214761, t0.c4)) NOT BETWEEN ((rt0.c2, rt0.c4, vt1.c0)) AND ((t0.c1, rt0.c4, vt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c3 IN ())) BETWEEN ((NOT (vt1.c2))) AND ((((t0.c0, 0.5763159750214761, t0.c4)) NOT BETWEEN ((rt0.c2, rt0.c4, vt1.c0)) AND ((t0.c1, rt0.c4, vt1.c2)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((vt1.c0)<=(vt1.c1)))IS(((t0.c3)||(rt0.c6)))) INNER JOIN vt1 ON ((((t0.c4) BETWEEN (t0.c2) AND (vt1.c1)))+(((rt0.c6)||(t0.c4)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((vt1.c0)<=(vt1.c1)))IS(((t0.c3)||(rt0.c6)))) INNER JOIN vt1 ON ((((t0.c4) BETWEEN (t0.c2) AND (vt1.c1)))+(((rt0.c6)||(t0.c4)))) WHERE ((((t0.c3 IN ())) BETWEEN ((NOT (vt1.c2))) AND ((((t0.c0, 0.5763159750214761, t0.c4)) NOT BETWEEN ((rt0.c2, rt0.c4, vt1.c0)) AND ((t0.c1, rt0.c4, vt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c3 IN ())) BETWEEN ((NOT (vt1.c2))) AND ((((t0.c0, 0.5763159750214761, t0.c4)) NOT BETWEEN ((rt0.c2, rt0.c4, vt1.c0)) AND ((t0.c1, rt0.c4, vt1.c2)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((vt1.c0)<=(vt1.c1)))IS(((t0.c3)||(rt0.c6)))) INNER JOIN vt1 ON ((((t0.c4) BETWEEN (t0.c2) AND (vt1.c1)))+(((rt0.c6)||(t0.c4)))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON ((((0.3371230284491803)IS(t0.c4)))IS(CAST(t0.c3 AS BLOB))) CROSS JOIN rt0 ON ((rt0.c1) BETWEEN (((vt1.c2)GLOB(t0.c2))) AND ((NOT (t0.c3)))) WHERE (((vt1.c2) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((((0.3371230284491803)IS(t0.c4)))IS(CAST(t0.c3 AS BLOB))) CROSS JOIN rt0 ON ((rt0.c1) BETWEEN (((vt1.c2)GLOB(t0.c2))) AND ((NOT (t0.c3)))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON ((((0.3371230284491803)IS(t0.c4)))IS(CAST(t0.c3 AS BLOB))) CROSS JOIN rt0 ON ((rt0.c1) BETWEEN (((vt1.c2)GLOB(t0.c2))) AND ((NOT (t0.c3)))) WHERE (((vt1.c2) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((((0.3371230284491803)IS(t0.c4)))IS(CAST(t0.c3 AS BLOB))) CROSS JOIN rt0 ON ((rt0.c1) BETWEEN (((vt1.c2)GLOB(t0.c2))) AND ((NOT (t0.c3)))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON ((((0.3371230284491803)IS(t0.c4)))IS(CAST(t0.c3 AS BLOB))) CROSS JOIN rt0 ON ((rt0.c1) BETWEEN (((vt1.c2)GLOB(t0.c2))) AND ((NOT (t0.c3)))) WHERE (((vt1.c2) IS TRUE) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE NOCASE);
SELECT * FROM t0 WHERE ((((t0.c1)AND(t0.c4)) IN ())) ORDER BY ((CAST(t0.c4 AS INTEGER))<=(((t0.c1) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)AND(t0.c4)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c4 AS INTEGER))<=(((t0.c1) NOTNULL))) ASC);
SELECT * FROM t0 WHERE ((((t0.c1)AND(t0.c4)) IN ())) ORDER BY ((CAST(t0.c4 AS INTEGER))<=(((t0.c1) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)AND(t0.c4)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c4 AS INTEGER))<=(((t0.c1) NOTNULL))) ASC);
SELECT * FROM t0 WHERE ((((t0.c1)AND(t0.c4)) IN ())) ORDER BY ((CAST(t0.c4 AS INTEGER))<=(((t0.c1) NOTNULL))) ASC;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST((- (')룶')) AS REAL) WHERE ((rt0.c2 COLLATE RTRIM IN (((t0.c0) NOT BETWEEN (rt0.c5) AND (t0.c3)))));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN (((t0.c0) NOT BETWEEN (rt0.c5) AND (t0.c3))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST((- (')룶')) AS REAL));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST((- (')룶')) AS REAL) WHERE ((rt0.c2 COLLATE RTRIM IN (((t0.c0) NOT BETWEEN (rt0.c5) AND (t0.c3)))));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN (((t0.c0) NOT BETWEEN (rt0.c5) AND (t0.c3))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST((- (')룶')) AS REAL));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST((- (')룶')) AS REAL) WHERE ((rt0.c2 COLLATE RTRIM IN (((t0.c0) NOT BETWEEN (rt0.c5) AND (t0.c3)))));
SELECT COUNT(*) FROM vt1 WHERE (((- (vt1.c2)) IN ((+ (vt1.c0)), ((vt1.c0)||(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c2)) IN ((+ (vt1.c0)), ((vt1.c0)||(vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((- (vt1.c2)) IN ((+ (vt1.c0)), ((vt1.c0)||(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c2)) IN ((+ (vt1.c0)), ((vt1.c0)||(vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((- (vt1.c2)) IN ((+ (vt1.c0)), ((vt1.c0)||(vt1.c2)))));
SELECT * FROM vt1 NATURAL JOIN t0 WHERE (CASE WHEN (t0.c4 IN ()) THEN (NOT (1774649374)) ELSE (((t0.c1, t0.c4, t0.c2)) BETWEEN ((t0.c4, vt1.c2, t0.c1)) AND ((vt1.c0, t0.c1, t0.c3))) END) ORDER BY t0.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c4 IN ()) THEN (NOT (1774649374)) ELSE (((t0.c1, t0.c4, t0.c2)) BETWEEN ((t0.c4, vt1.c2, t0.c1)) AND ((vt1.c0, t0.c1, t0.c3))) END) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY t0.c0 COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt1 NATURAL JOIN t0 WHERE (CASE WHEN (t0.c4 IN ()) THEN (NOT (1774649374)) ELSE (((t0.c1, t0.c4, t0.c2)) BETWEEN ((t0.c4, vt1.c2, t0.c1)) AND ((vt1.c0, t0.c1, t0.c3))) END) ORDER BY t0.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c4 IN ()) THEN (NOT (1774649374)) ELSE (((t0.c1, t0.c4, t0.c2)) BETWEEN ((t0.c4, vt1.c2, t0.c1)) AND ((vt1.c0, t0.c1, t0.c3))) END) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY t0.c0 COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt1 NATURAL JOIN t0 WHERE (CASE WHEN (t0.c4 IN ()) THEN (NOT (1774649374)) ELSE (((t0.c1, t0.c4, t0.c2)) BETWEEN ((t0.c4, vt1.c2, t0.c1)) AND ((vt1.c0, t0.c1, t0.c3))) END) ORDER BY t0.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((NOT (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (t0.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt0, t0 WHERE (((CASE t0.c4  WHEN rt0.c1 THEN rt0.c3 WHEN t0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c5 END)/(((((rt0.c5)OR(rt0.c6)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c4  WHEN rt0.c1 THEN rt0.c3 WHEN t0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c5 END)/(((((rt0.c5)OR(rt0.c6)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((CASE t0.c4  WHEN rt0.c1 THEN rt0.c3 WHEN t0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c5 END)/(((((rt0.c5)OR(rt0.c6)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c4  WHEN rt0.c1 THEN rt0.c3 WHEN t0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c5 END)/(((((rt0.c5)OR(rt0.c6)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((CASE t0.c4  WHEN rt0.c1 THEN rt0.c3 WHEN t0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c5 END)/(((((rt0.c5)OR(rt0.c6)))AND(rt0.c4)))));
SELECT ALL * FROM vt1 INNER JOIN t0 ON (((vt1.c1) NOT BETWEEN (t0.c3) AND (t0.c4)) IN (CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c2 END)) WHERE (('-116719986' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-116719986' IN ())) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (((vt1.c1) NOT BETWEEN (t0.c3) AND (t0.c4)) IN (CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c2 END)));
SELECT ALL * FROM vt1 INNER JOIN t0 ON (((vt1.c1) NOT BETWEEN (t0.c3) AND (t0.c4)) IN (CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c2 END)) WHERE (('-116719986' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-116719986' IN ())) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (((vt1.c1) NOT BETWEEN (t0.c3) AND (t0.c4)) IN (CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c2 END)));
SELECT ALL * FROM vt1 INNER JOIN t0 ON (((vt1.c1) NOT BETWEEN (t0.c3) AND (t0.c4)) IN (CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c2 END)) WHERE (('-116719986' IN ()));
SELECT * FROM vt1, rt0 WHERE (CAST((vt1.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CAST((vt1.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CAST((vt1.c0 IN ()) AS INTEGER));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ((vt1.c1 COLLATE NOCASE)<<(CASE rt0.c5  WHEN rt0.c3 THEN rt0.c1 END)) WHERE (CAST(rt0.c3 AS TEXT)) ORDER BY ((('' IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS TEXT)) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((vt1.c1 COLLATE NOCASE)<<(CASE rt0.c5  WHEN rt0.c3 THEN rt0.c1 END)) ORDER BY ((('' IN ())) ISNULL));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ((vt1.c1 COLLATE NOCASE)<<(CASE rt0.c5  WHEN rt0.c3 THEN rt0.c1 END)) WHERE (CAST(rt0.c3 AS TEXT)) ORDER BY ((('' IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS TEXT)) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((vt1.c1 COLLATE NOCASE)<<(CASE rt0.c5  WHEN rt0.c3 THEN rt0.c1 END)) ORDER BY ((('' IN ())) ISNULL));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ((vt1.c1 COLLATE NOCASE)<<(CASE rt0.c5  WHEN rt0.c3 THEN rt0.c1 END)) WHERE (CAST(rt0.c3 AS TEXT)) ORDER BY ((('' IN ())) ISNULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (((MIN(vt1.c0, vt1.c1))!=(CASE WHEN vt1.c2 THEN vt1.c1 END))) ORDER BY ((((((((((((vt1.c2 COLLATE BINARY)AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'20df' END)))OR(CAST(vt1.c2 AS INTEGER))))AND(((vt1.c1)=(NULL)))))OR(CASE vt1.c2  WHEN vt1.c0 THEN 'x5ffu֏w' WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END)))AND(((('r10#HU_\9', vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt1.c2)) AND ((vt1.c0, vt1.c1, vt1.c2))))))OR(0x28e295bf)) ASC;
SELECT SUM(count) FROM (SELECT ((((MIN(vt1.c0, vt1.c1))<>(CASE WHEN vt1.c2 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((vt1.c2 COLLATE BINARY)AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'20df' END)))OR(CAST(vt1.c2 AS INTEGER))))AND(((vt1.c1)=(NULL)))))OR(CASE vt1.c2  WHEN vt1.c0 THEN 'x5ffu֏w' WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END)))AND(((('r10#HU_\9', vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt1.c2)) AND ((vt1.c0, vt1.c1, vt1.c2))))))OR(0x28e295bf)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((MIN(vt1.c0, vt1.c1))!=(CASE WHEN vt1.c2 THEN vt1.c1 END))) ORDER BY ((((((((((((vt1.c2 COLLATE BINARY)AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'20df' END)))OR(CAST(vt1.c2 AS INTEGER))))AND(((vt1.c1)=(NULL)))))OR(CASE vt1.c2  WHEN vt1.c0 THEN 'x5ffu֏w' WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END)))AND(((('r10#HU_\9', vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt1.c2)) AND ((vt1.c0, vt1.c1, vt1.c2))))))OR(0x28e295bf)) ASC;
SELECT SUM(count) FROM (SELECT ((((MIN(vt1.c0, vt1.c1))<>(CASE WHEN vt1.c2 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((vt1.c2 COLLATE BINARY)AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'20df' END)))OR(CAST(vt1.c2 AS INTEGER))))AND(((vt1.c1)=(NULL)))))OR(CASE vt1.c2  WHEN vt1.c0 THEN 'x5ffu֏w' WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END)))AND(((('r10#HU_\9', vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt1.c2)) AND ((vt1.c0, vt1.c1, vt1.c2))))))OR(0x28e295bf)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((MIN(vt1.c0, vt1.c1))!=(CASE WHEN vt1.c2 THEN vt1.c1 END))) ORDER BY ((((((((((((vt1.c2 COLLATE BINARY)AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'20df' END)))OR(CAST(vt1.c2 AS INTEGER))))AND(((vt1.c1)=(NULL)))))OR(CASE vt1.c2  WHEN vt1.c0 THEN 'x5ffu֏w' WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END)))AND(((('r10#HU_\9', vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt1.c2)) AND ((vt1.c0, vt1.c1, vt1.c2))))))OR(0x28e295bf)) ASC;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c3))<=((t0.c2)))) BETWEEN (t0.c0) AND (t0.c3 COLLATE BINARY))) ORDER BY (t0.c4 IN ()) ASC  NULLS LAST, ((JULIANDAY(t0.c2, t0.c1, t0.c1, t0.c2, t0.c4))%(CAST(t0.c1 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c3))<=((t0.c2)))) BETWEEN (t0.c0) AND (t0.c3 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY (t0.c4 IN ()) ASC  NULLS LAST, ((JULIANDAY(t0.c2, t0.c1, t0.c1, t0.c2, t0.c4))%(CAST(t0.c1 AS BLOB))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c3))<=((t0.c2)))) BETWEEN (t0.c0) AND (t0.c3 COLLATE BINARY))) ORDER BY (t0.c4 IN ()) ASC  NULLS LAST, ((JULIANDAY(t0.c2, t0.c1, t0.c1, t0.c2, t0.c4))%(CAST(t0.c1 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c3))<=((t0.c2)))) BETWEEN (t0.c0) AND (t0.c3 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY (t0.c4 IN ()) ASC  NULLS LAST, ((JULIANDAY(t0.c2, t0.c1, t0.c1, t0.c2, t0.c4))%(CAST(t0.c1 AS BLOB))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c3))<=((t0.c2)))) BETWEEN (t0.c0) AND (t0.c3 COLLATE BINARY))) ORDER BY (t0.c4 IN ()) ASC  NULLS LAST, ((JULIANDAY(t0.c2, t0.c1, t0.c1, t0.c2, t0.c4))%(CAST(t0.c1 AS BLOB))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((((((t0.c1)AND(x'16fc')))AND(t0.c2)))AND(t0.c1)))AND(t0.c1)))<=(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) ORDER BY CAST(CASE t0.c4  WHEN vt1.c2 THEN vt1.c1 ELSE t0.c1 END AS TEXT)  NULLS FIRST, ((+ (vt1.c1)) IN (((t0.c4) NOT BETWEEN (vt1.c0) AND (t0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c1)AND(x'16fc')))AND(t0.c2)))AND(t0.c1)))AND(t0.c1)))<=(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(CASE t0.c4  WHEN vt1.c2 THEN vt1.c1 ELSE t0.c1 END AS TEXT)  NULLS FIRST, ((+ (vt1.c1)) IN (((t0.c4) NOT BETWEEN (vt1.c0) AND (t0.c3)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((((((t0.c1)AND(x'16fc')))AND(t0.c2)))AND(t0.c1)))AND(t0.c1)))<=(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) ORDER BY CAST(CASE t0.c4  WHEN vt1.c2 THEN vt1.c1 ELSE t0.c1 END AS TEXT)  NULLS FIRST, ((+ (vt1.c1)) IN (((t0.c4) NOT BETWEEN (vt1.c0) AND (t0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c1)AND(x'16fc')))AND(t0.c2)))AND(t0.c1)))AND(t0.c1)))<=(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(CASE t0.c4  WHEN vt1.c2 THEN vt1.c1 ELSE t0.c1 END AS TEXT)  NULLS FIRST, ((+ (vt1.c1)) IN (((t0.c4) NOT BETWEEN (vt1.c0) AND (t0.c3)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((((((t0.c1)AND(x'16fc')))AND(t0.c2)))AND(t0.c1)))AND(t0.c1)))<=(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) ORDER BY CAST(CASE t0.c4  WHEN vt1.c2 THEN vt1.c1 ELSE t0.c1 END AS TEXT)  NULLS FIRST, ((+ (vt1.c1)) IN (((t0.c4) NOT BETWEEN (vt1.c0) AND (t0.c3)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE ((((x''))>=(((NOT (rt0.c6))))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))>=(((NOT (rt0.c6)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((x''))>=(((NOT (rt0.c6))))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))>=(((NOT (rt0.c6)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((x''))>=(((NOT (rt0.c6))))));
SELECT ALL * FROM rt0, vt1, t0 WHERE ('1340961725');
SELECT SUM(count) FROM (SELECT (('1340961725') IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0, vt1, t0 WHERE ('1340961725');
SELECT SUM(count) FROM (SELECT (('1340961725') IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0, vt1, t0 WHERE ('1340961725');
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt1 WHERE (json_remove(((vt1.c2) IS FALSE), CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((vt1.c2) IS FALSE), CAST(rt0.c1 AS REAL))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt1 WHERE (json_remove(((vt1.c2) IS FALSE), CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((vt1.c2) IS FALSE), CAST(rt0.c1 AS REAL))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt1 WHERE (json_remove(((vt1.c2) IS FALSE), CAST(rt0.c1 AS REAL)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END  WHEN ((vt1.c2)IS(vt1.c2)) THEN CAST(vt1.c2 AS REAL) WHEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN TRIM(vt1.c1, NULL) WHEN vt1.c1 COLLATE NOCASE THEN ((((vt1.c2)OR(vt1.c2)))AND(vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END  WHEN ((vt1.c2)IS(vt1.c2)) THEN CAST(vt1.c2 AS REAL) WHEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN TRIM(vt1.c1, NULL) WHEN vt1.c1 COLLATE NOCASE THEN ((((vt1.c2)OR(vt1.c2)))AND(vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END  WHEN ((vt1.c2)IS(vt1.c2)) THEN CAST(vt1.c2 AS REAL) WHEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN TRIM(vt1.c1, NULL) WHEN vt1.c1 COLLATE NOCASE THEN ((((vt1.c2)OR(vt1.c2)))AND(vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END  WHEN ((vt1.c2)IS(vt1.c2)) THEN CAST(vt1.c2 AS REAL) WHEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN TRIM(vt1.c1, NULL) WHEN vt1.c1 COLLATE NOCASE THEN ((((vt1.c2)OR(vt1.c2)))AND(vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END  WHEN ((vt1.c2)IS(vt1.c2)) THEN CAST(vt1.c2 AS REAL) WHEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN TRIM(vt1.c1, NULL) WHEN vt1.c1 COLLATE NOCASE THEN ((((vt1.c2)OR(vt1.c2)))AND(vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT * FROM rt0 WHERE (0.5247224620936316) ORDER BY rt0.c2 COLLATE NOCASE COLLATE RTRIM COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.5247224620936316) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE NOCASE COLLATE RTRIM COLLATE RTRIM DESC);
SELECT * FROM rt0 WHERE (0.5247224620936316) ORDER BY rt0.c2 COLLATE NOCASE COLLATE RTRIM COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.5247224620936316) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE NOCASE COLLATE RTRIM COLLATE RTRIM DESC);
SELECT * FROM rt0 WHERE (0.5247224620936316) ORDER BY rt0.c2 COLLATE NOCASE COLLATE RTRIM COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (0.9168854821190908);
SELECT SUM(count) FROM (SELECT ALL ((0.9168854821190908) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (0.9168854821190908);
SELECT SUM(count) FROM (SELECT ALL ((0.9168854821190908) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (0.9168854821190908);
SELECT * FROM vt1, rt0, t0 WHERE ((((~ (t0.c3)))|((']kIlf6C쮎' IN (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c3)))|((']kIlf6C쮎' IN (rt0.c4))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE ((((~ (t0.c3)))|((']kIlf6C쮎' IN (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c3)))|((']kIlf6C쮎' IN (rt0.c4))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE ((((~ (t0.c3)))|((']kIlf6C쮎' IN (rt0.c4)))));
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c1 IN ()) COLLATE BINARY) ORDER BY CASE WHEN (vt1.c1 IN ()) THEN CAST(vt1.c0 AS INTEGER) END, (((vt1.c2)) BETWEEN (((vt1.c0 IN ()))) AND ((vt1.c1))), ((((vt1.c0)GLOB(vt1.c1)))*(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (vt1.c1 IN ()) THEN CAST(vt1.c0 AS INTEGER) END, (((vt1.c2)) BETWEEN (((vt1.c0 IN ()))) AND ((vt1.c1))), ((((vt1.c0)GLOB(vt1.c1)))*(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c1 IN ()) COLLATE BINARY) ORDER BY CASE WHEN (vt1.c1 IN ()) THEN CAST(vt1.c0 AS INTEGER) END, (((vt1.c2)) BETWEEN (((vt1.c0 IN ()))) AND ((vt1.c1))), ((((vt1.c0)GLOB(vt1.c1)))*(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (vt1.c1 IN ()) THEN CAST(vt1.c0 AS INTEGER) END, (((vt1.c2)) BETWEEN (((vt1.c0 IN ()))) AND ((vt1.c1))), ((((vt1.c0)GLOB(vt1.c1)))*(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c1 IN ()) COLLATE BINARY) ORDER BY CASE WHEN (vt1.c1 IN ()) THEN CAST(vt1.c0 AS INTEGER) END, (((vt1.c2)) BETWEEN (((vt1.c0 IN ()))) AND ((vt1.c1))), ((((vt1.c0)GLOB(vt1.c1)))*(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt1, t0 WHERE (UPPER(vt1.c2 COLLATE BINARY)) ORDER BY ((((rt0.c5)-(rt0.c3))) BETWEEN (((rt0.c3)||(vt1.c2))) AND (((rt0.c0)-('-132184005')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt1.c2 COLLATE BINARY)) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((((rt0.c5)-(rt0.c3))) BETWEEN (((rt0.c3)||(vt1.c2))) AND (((rt0.c0)-('-132184005')))) ASC);
SELECT ALL * FROM rt0, vt1, t0 WHERE (UPPER(vt1.c2 COLLATE BINARY)) ORDER BY ((((rt0.c5)-(rt0.c3))) BETWEEN (((rt0.c3)||(vt1.c2))) AND (((rt0.c0)-('-132184005')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt1.c2 COLLATE BINARY)) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((((rt0.c5)-(rt0.c3))) BETWEEN (((rt0.c3)||(vt1.c2))) AND (((rt0.c0)-('-132184005')))) ASC);
SELECT ALL * FROM rt0, vt1, t0 WHERE (UPPER(vt1.c2 COLLATE BINARY)) ORDER BY ((((rt0.c5)-(rt0.c3))) BETWEEN (((rt0.c3)||(vt1.c2))) AND (((rt0.c0)-('-132184005')))) ASC;
SELECT * FROM t0 WHERE (((((t0.c3) BETWEEN (t0.c4) AND (t0.c4))) NOT BETWEEN (HEX(t0.c4)) AND (((('', t0.c2, t0.c1))!=((t0.c2, t0.c1, t0.c1)))))) ORDER BY ((CASE WHEN t0.c1 THEN t0.c3 END)<<(t0.c1 COLLATE RTRIM)) DESC, (((((((('-743584882')AND(t0.c2)))OR(t0.c4)))AND(((t0.c3) BETWEEN (t0.c4) AND (t0.c3)))))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c3) BETWEEN (t0.c4) AND (t0.c4))) NOT BETWEEN (HEX(t0.c4)) AND (((('', t0.c2, t0.c1))<>((t0.c2, t0.c1, t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c1 THEN t0.c3 END)<<(t0.c1 COLLATE RTRIM)) DESC, (((((((('-743584882')AND(t0.c2)))OR(t0.c4)))AND(((t0.c3) BETWEEN (t0.c4) AND (t0.c3)))))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))) DESC);
SELECT * FROM t0 WHERE (((((t0.c3) BETWEEN (t0.c4) AND (t0.c4))) NOT BETWEEN (HEX(t0.c4)) AND (((('', t0.c2, t0.c1))!=((t0.c2, t0.c1, t0.c1)))))) ORDER BY ((CASE WHEN t0.c1 THEN t0.c3 END)<<(t0.c1 COLLATE RTRIM)) DESC, (((((((('-743584882')AND(t0.c2)))OR(t0.c4)))AND(((t0.c3) BETWEEN (t0.c4) AND (t0.c3)))))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c3) BETWEEN (t0.c4) AND (t0.c4))) NOT BETWEEN (HEX(t0.c4)) AND (((('', t0.c2, t0.c1))<>((t0.c2, t0.c1, t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c1 THEN t0.c3 END)<<(t0.c1 COLLATE RTRIM)) DESC, (((((((('-743584882')AND(t0.c2)))OR(t0.c4)))AND(((t0.c3) BETWEEN (t0.c4) AND (t0.c3)))))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))) DESC);
SELECT * FROM t0 WHERE (((((t0.c3) BETWEEN (t0.c4) AND (t0.c4))) NOT BETWEEN (HEX(t0.c4)) AND (((('', t0.c2, t0.c1))!=((t0.c2, t0.c1, t0.c1)))))) ORDER BY ((CASE WHEN t0.c1 THEN t0.c3 END)<<(t0.c1 COLLATE RTRIM)) DESC, (((((((('-743584882')AND(t0.c2)))OR(t0.c4)))AND(((t0.c3) BETWEEN (t0.c4) AND (t0.c3)))))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c2, vt1.c2, vt1.c2))=((vt1.c2, vt1.c0, vt1.c0))))*(((((vt1.c1)OR(vt1.c2)))AND(vt1.c0))))) ORDER BY (+ ((0.5131819622536429 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c2, vt1.c2, vt1.c2))=((vt1.c2, vt1.c0, vt1.c0))))*(((((vt1.c1)OR(vt1.c2)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (+ ((0.5131819622536429 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c2, vt1.c2, vt1.c2))=((vt1.c2, vt1.c0, vt1.c0))))*(((((vt1.c1)OR(vt1.c2)))AND(vt1.c0))))) ORDER BY (+ ((0.5131819622536429 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c2, vt1.c2, vt1.c2))=((vt1.c2, vt1.c0, vt1.c0))))*(((((vt1.c1)OR(vt1.c2)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (+ ((0.5131819622536429 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c2, vt1.c2, vt1.c2))=((vt1.c2, vt1.c0, vt1.c0))))*(((((vt1.c1)OR(vt1.c2)))AND(vt1.c0))))) ORDER BY (+ ((0.5131819622536429 IN ()))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((vt1.c2) BETWEEN (vt1.c2) AND (rt0.c0)) COLLATE RTRIM WHERE (CASE ((vt1.c0)|(rt0.c5))  WHEN ((((rt0.c6)OR(rt0.c3)))OR(rt0.c3)) THEN (NOT (rt0.c4)) WHEN ((rt0.c3)/(rt0.c1)) THEN CAST(-1.16719986E8 AS NUMERIC) WHEN ((rt0.c0) IS FALSE) THEN CAST('&u' AS BLOB) END) ORDER BY CAST(((rt0.c4) IS FALSE) AS TEXT) ASC  NULLS FIRST, 0.7928256338070818 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)|(rt0.c5))  WHEN ((((rt0.c6)OR(rt0.c3)))OR(rt0.c3)) THEN (NOT (rt0.c4)) WHEN ((rt0.c3)/(rt0.c1)) THEN CAST(-1.16719986E8 AS NUMERIC) WHEN ((rt0.c0) IS FALSE) THEN CAST('&u' AS BLOB) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((vt1.c2) BETWEEN (vt1.c2) AND (rt0.c0)) COLLATE RTRIM ORDER BY CAST(((rt0.c4) IS FALSE) AS TEXT) ASC  NULLS FIRST, 0.7928256338070818 ASC  NULLS FIRST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((vt1.c2) BETWEEN (vt1.c2) AND (rt0.c0)) COLLATE RTRIM WHERE (CASE ((vt1.c0)|(rt0.c5))  WHEN ((((rt0.c6)OR(rt0.c3)))OR(rt0.c3)) THEN (NOT (rt0.c4)) WHEN ((rt0.c3)/(rt0.c1)) THEN CAST(-1.16719986E8 AS NUMERIC) WHEN ((rt0.c0) IS FALSE) THEN CAST('&u' AS BLOB) END) ORDER BY CAST(((rt0.c4) IS FALSE) AS TEXT) ASC  NULLS FIRST, 0.7928256338070818 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)|(rt0.c5))  WHEN ((((rt0.c6)OR(rt0.c3)))OR(rt0.c3)) THEN (NOT (rt0.c4)) WHEN ((rt0.c3)/(rt0.c1)) THEN CAST(-1.16719986E8 AS NUMERIC) WHEN ((rt0.c0) IS FALSE) THEN CAST('&u' AS BLOB) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((vt1.c2) BETWEEN (vt1.c2) AND (rt0.c0)) COLLATE RTRIM ORDER BY CAST(((rt0.c4) IS FALSE) AS TEXT) ASC  NULLS FIRST, 0.7928256338070818 ASC  NULLS FIRST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((vt1.c2) BETWEEN (vt1.c2) AND (rt0.c0)) COLLATE RTRIM WHERE (CASE ((vt1.c0)|(rt0.c5))  WHEN ((((rt0.c6)OR(rt0.c3)))OR(rt0.c3)) THEN (NOT (rt0.c4)) WHEN ((rt0.c3)/(rt0.c1)) THEN CAST(-1.16719986E8 AS NUMERIC) WHEN ((rt0.c0) IS FALSE) THEN CAST('&u' AS BLOB) END) ORDER BY CAST(((rt0.c4) IS FALSE) AS TEXT) ASC  NULLS FIRST, 0.7928256338070818 ASC  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (((rt0.c3)<(rt0.c0)) COLLATE BINARY) ORDER BY ((NOT (vt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)<(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((NOT (vt1.c1)) IN ()));
SELECT * FROM rt0, vt1 WHERE (((rt0.c3)<(rt0.c0)) COLLATE BINARY) ORDER BY ((NOT (vt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)<(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((NOT (vt1.c1)) IN ()));
SELECT * FROM rt0, vt1 WHERE (((rt0.c3)<(rt0.c0)) COLLATE BINARY) ORDER BY ((NOT (vt1.c1)) IN ());
SELECT * FROM vt1 WHERE (((((((vt1.c0, vt1.c2, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c2, vt1.c0, vt1.c1))), (vt1.c1 IN ()), (NOT (vt1.c1))))>((LOWER(DISTINCT vt1.c0), ((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1)), (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) ORDER BY CASE ((vt1.c0)>(0X56489bac))  WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c2) IS FALSE) ELSE ((vt1.c2) NOTNULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0, vt1.c2, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c2, vt1.c0, vt1.c1))), (vt1.c1 IN ()), (NOT (vt1.c1))))>((LOWER(DISTINCT vt1.c0), ((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1)), (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0)>(0X56489bac))  WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c2) IS FALSE) ELSE ((vt1.c2) NOTNULL) END ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((((vt1.c0, vt1.c2, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c2, vt1.c0, vt1.c1))), (vt1.c1 IN ()), (NOT (vt1.c1))))>((LOWER(DISTINCT vt1.c0), ((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1)), (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) ORDER BY CASE ((vt1.c0)>(0X56489bac))  WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c2) IS FALSE) ELSE ((vt1.c2) NOTNULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0, vt1.c2, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c2, vt1.c0, vt1.c1))), (vt1.c1 IN ()), (NOT (vt1.c1))))>((LOWER(DISTINCT vt1.c0), ((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1)), (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0)>(0X56489bac))  WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c2) IS FALSE) ELSE ((vt1.c2) NOTNULL) END ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((((vt1.c0, vt1.c2, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c2, vt1.c0, vt1.c1))), (vt1.c1 IN ()), (NOT (vt1.c1))))>((LOWER(DISTINCT vt1.c0), ((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1)), (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) ORDER BY CASE ((vt1.c0)>(0X56489bac))  WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c2) IS FALSE) ELSE ((vt1.c2) NOTNULL) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE ((CASE WHEN vt1.c2 THEN t0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c2 THEN t0.c1 END IN ())) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE ((CASE WHEN vt1.c2 THEN t0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c2 THEN t0.c1 END IN ())) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE ((CASE WHEN vt1.c2 THEN t0.c1 END IN ()));
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((+ (rt0.c3)) AS REAL)) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c3)) AS REAL)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((+ (rt0.c3)) AS REAL)) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c3)) AS REAL)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((+ (rt0.c3)) AS REAL)) ORDER BY rt0.c1  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED WHERE ((((NULL) NOT NULL) IN (CASE 0.5786916494422684  WHEN vt1.c2 THEN vt1.c0 END))) ORDER BY vt1.c2, (((t0.c3 COLLATE BINARY, t0.c3, x''))=(((((t0.c3)) NOT BETWEEN (('*w^x')) AND ((t0.c0))), CAST(t0.c3 AS BLOB), ((t0.c0)>=(t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL) NOT NULL) IN (CASE 0.5786916494422684  WHEN vt1.c2 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c2, (((t0.c3 COLLATE BINARY, t0.c3, x''))=(((((t0.c3)) NOT BETWEEN (('*w^x')) AND ((t0.c0))), CAST(t0.c3 AS BLOB), ((t0.c0)>=(t0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED WHERE ((((NULL) NOT NULL) IN (CASE 0.5786916494422684  WHEN vt1.c2 THEN vt1.c0 END))) ORDER BY vt1.c2, (((t0.c3 COLLATE BINARY, t0.c3, x''))=(((((t0.c3)) NOT BETWEEN (('*w^x')) AND ((t0.c0))), CAST(t0.c3 AS BLOB), ((t0.c0)>=(t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL) NOT NULL) IN (CASE 0.5786916494422684  WHEN vt1.c2 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c2, (((t0.c3 COLLATE BINARY, t0.c3, x''))=(((((t0.c3)) NOT BETWEEN (('*w^x')) AND ((t0.c0))), CAST(t0.c3 AS BLOB), ((t0.c0)>=(t0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED WHERE ((((NULL) NOT NULL) IN (CASE 0.5786916494422684  WHEN vt1.c2 THEN vt1.c0 END))) ORDER BY vt1.c2, (((t0.c3 COLLATE BINARY, t0.c3, x''))=(((((t0.c3)) NOT BETWEEN (('*w^x')) AND ((t0.c0))), CAST(t0.c3 AS BLOB), ((t0.c0)>=(t0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (((- (t0.c1))) BETWEEN (((rt0.c2) IS TRUE)) AND ((- (rt0.c5)))) WHERE (t0.c1) ORDER BY (+ (HEX(t0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (((- (t0.c1))) BETWEEN (((rt0.c2) IS TRUE)) AND ((- (rt0.c5)))) ORDER BY (+ (HEX(t0.c2))) ASC);
SELECT COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (((- (t0.c1))) BETWEEN (((rt0.c2) IS TRUE)) AND ((- (rt0.c5)))) WHERE (t0.c1) ORDER BY (+ (HEX(t0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (((- (t0.c1))) BETWEEN (((rt0.c2) IS TRUE)) AND ((- (rt0.c5)))) ORDER BY (+ (HEX(t0.c2))) ASC);
SELECT COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (((- (t0.c1))) BETWEEN (((rt0.c2) IS TRUE)) AND ((- (rt0.c5)))) WHERE (t0.c1) ORDER BY (+ (HEX(t0.c2))) ASC;
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((CASE WHEN t0.c4 THEN t0.c1 ELSE rt0.c6 END)<=((((t0.c4, t0.c4, rt0.c6)) BETWEEN ((rt0.c0, rt0.c6, rt0.c4)) AND ((vt1.c1, vt1.c2, vt1.c0))))) CROSS JOIN rt0 ON CAST(((rt0.c3) IS FALSE) AS BLOB) WHERE (rt0.c2 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(CASE WHEN rt0.c6 THEN 0.015271172914606557 ELSE '~_~H' END AS INTEGER)  NULLS LAST, (((((((((((rt0.c2))!=(('QQtz_﨟w'))))AND(CASE rt0.c0  WHEN t0.c3 THEN t0.c2 WHEN rt0.c0 THEN t0.c0 WHEN t0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(SQLITE_COMPILEOPTION_USED(rt0.c5))))AND(CAST(vt1.c2 AS REAL))))OR(((t0.c3) IS FALSE))) ASC, CASE vt1.c0 COLLATE RTRIM  WHEN NULL THEN ((((t0.c0)OR(t0.c1)))AND(vt1.c1)) WHEN CASE vt1.c1  WHEN rt0.c5 THEN rt0.c0 END THEN ((rt0.c2)<<(vt1.c0)) WHEN CASE vt1.c1  WHEN rt0.c6 THEN rt0.c6 WHEN vt1.c2 THEN rt0.c0 WHEN t0.c2 THEN vt1.c1 END THEN ((t0.c2) IS FALSE) ELSE t0.c2 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((CASE WHEN t0.c4 THEN t0.c1 ELSE rt0.c6 END)<=((((t0.c4, t0.c4, rt0.c6)) BETWEEN ((rt0.c0, rt0.c6, rt0.c4)) AND ((vt1.c1, vt1.c2, vt1.c0))))) CROSS JOIN rt0 ON CAST(((rt0.c3) IS FALSE) AS BLOB) ORDER BY CAST(CASE WHEN rt0.c6 THEN 0.015271172914606557 ELSE '~_~H' END AS INTEGER)  NULLS LAST, (((((((((((rt0.c2))<>(('QQtz_﨟w'))))AND(CASE rt0.c0  WHEN t0.c3 THEN t0.c2 WHEN rt0.c0 THEN t0.c0 WHEN t0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(SQLITE_COMPILEOPTION_USED(rt0.c5))))AND(CAST(vt1.c2 AS REAL))))OR(((t0.c3) IS FALSE))) ASC, CASE vt1.c0 COLLATE RTRIM  WHEN NULL THEN ((((t0.c0)OR(t0.c1)))AND(vt1.c1)) WHEN CASE vt1.c1  WHEN rt0.c5 THEN rt0.c0 END THEN ((rt0.c2)<<(vt1.c0)) WHEN CASE vt1.c1  WHEN rt0.c6 THEN rt0.c6 WHEN vt1.c2 THEN rt0.c0 WHEN t0.c2 THEN vt1.c1 END THEN ((t0.c2) IS FALSE) ELSE t0.c2 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((CASE WHEN t0.c4 THEN t0.c1 ELSE rt0.c6 END)<=((((t0.c4, t0.c4, rt0.c6)) BETWEEN ((rt0.c0, rt0.c6, rt0.c4)) AND ((vt1.c1, vt1.c2, vt1.c0))))) CROSS JOIN rt0 ON CAST(((rt0.c3) IS FALSE) AS BLOB) WHERE (rt0.c2 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(CASE WHEN rt0.c6 THEN 0.015271172914606557 ELSE '~_~H' END AS INTEGER)  NULLS LAST, (((((((((((rt0.c2))!=(('QQtz_﨟w'))))AND(CASE rt0.c0  WHEN t0.c3 THEN t0.c2 WHEN rt0.c0 THEN t0.c0 WHEN t0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(SQLITE_COMPILEOPTION_USED(rt0.c5))))AND(CAST(vt1.c2 AS REAL))))OR(((t0.c3) IS FALSE))) ASC, CASE vt1.c0 COLLATE RTRIM  WHEN NULL THEN ((((t0.c0)OR(t0.c1)))AND(vt1.c1)) WHEN CASE vt1.c1  WHEN rt0.c5 THEN rt0.c0 END THEN ((rt0.c2)<<(vt1.c0)) WHEN CASE vt1.c1  WHEN rt0.c6 THEN rt0.c6 WHEN vt1.c2 THEN rt0.c0 WHEN t0.c2 THEN vt1.c1 END THEN ((t0.c2) IS FALSE) ELSE t0.c2 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((CASE WHEN t0.c4 THEN t0.c1 ELSE rt0.c6 END)<=((((t0.c4, t0.c4, rt0.c6)) BETWEEN ((rt0.c0, rt0.c6, rt0.c4)) AND ((vt1.c1, vt1.c2, vt1.c0))))) CROSS JOIN rt0 ON CAST(((rt0.c3) IS FALSE) AS BLOB) ORDER BY CAST(CASE WHEN rt0.c6 THEN 0.015271172914606557 ELSE '~_~H' END AS INTEGER)  NULLS LAST, (((((((((((rt0.c2))<>(('QQtz_﨟w'))))AND(CASE rt0.c0  WHEN t0.c3 THEN t0.c2 WHEN rt0.c0 THEN t0.c0 WHEN t0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(SQLITE_COMPILEOPTION_USED(rt0.c5))))AND(CAST(vt1.c2 AS REAL))))OR(((t0.c3) IS FALSE))) ASC, CASE vt1.c0 COLLATE RTRIM  WHEN NULL THEN ((((t0.c0)OR(t0.c1)))AND(vt1.c1)) WHEN CASE vt1.c1  WHEN rt0.c5 THEN rt0.c0 END THEN ((rt0.c2)<<(vt1.c0)) WHEN CASE vt1.c1  WHEN rt0.c6 THEN rt0.c6 WHEN vt1.c2 THEN rt0.c0 WHEN t0.c2 THEN vt1.c1 END THEN ((t0.c2) IS FALSE) ELSE t0.c2 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((CASE WHEN t0.c4 THEN t0.c1 ELSE rt0.c6 END)<=((((t0.c4, t0.c4, rt0.c6)) BETWEEN ((rt0.c0, rt0.c6, rt0.c4)) AND ((vt1.c1, vt1.c2, vt1.c0))))) CROSS JOIN rt0 ON CAST(((rt0.c3) IS FALSE) AS BLOB) WHERE (rt0.c2 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(CASE WHEN rt0.c6 THEN 0.015271172914606557 ELSE '~_~H' END AS INTEGER)  NULLS LAST, (((((((((((rt0.c2))!=(('QQtz_﨟w'))))AND(CASE rt0.c0  WHEN t0.c3 THEN t0.c2 WHEN rt0.c0 THEN t0.c0 WHEN t0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(SQLITE_COMPILEOPTION_USED(rt0.c5))))AND(CAST(vt1.c2 AS REAL))))OR(((t0.c3) IS FALSE))) ASC, CASE vt1.c0 COLLATE RTRIM  WHEN NULL THEN ((((t0.c0)OR(t0.c1)))AND(vt1.c1)) WHEN CASE vt1.c1  WHEN rt0.c5 THEN rt0.c0 END THEN ((rt0.c2)<<(vt1.c0)) WHEN CASE vt1.c1  WHEN rt0.c6 THEN rt0.c6 WHEN vt1.c2 THEN rt0.c0 WHEN t0.c2 THEN vt1.c1 END THEN ((t0.c2) IS FALSE) ELSE t0.c2 COLLATE RTRIM END;
SELECT ALL COUNT(*) FROM t0 WHERE (LOWER(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c1))) IS FALSE)  NULLS LAST, t0.c4 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c1))) IS FALSE)  NULLS LAST, t0.c4 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (LOWER(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c1))) IS FALSE)  NULLS LAST, t0.c4 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c1))) IS FALSE)  NULLS LAST, t0.c4 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (LOWER(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c1))) IS FALSE)  NULLS LAST, t0.c4 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON rt0.c4 WHERE (CAST(vt1.c2 AS REAL)) ORDER BY (NOT (((rt0.c0)=(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c2 AS REAL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON rt0.c4 ORDER BY (NOT (((rt0.c0)==(vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON rt0.c4 WHERE (CAST(vt1.c2 AS REAL)) ORDER BY (NOT (((rt0.c0)=(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c2 AS REAL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON rt0.c4 ORDER BY (NOT (((rt0.c0)==(vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON rt0.c4 WHERE (CAST(vt1.c2 AS REAL)) ORDER BY (NOT (((rt0.c0)=(vt1.c0)))) ASC;
SELECT ALL * FROM t0, rt0, vt1 WHERE ((('-1010532412' COLLATE BINARY)OR(0xffffffffbcba27f1)));
SELECT SUM(count) FROM (SELECT (((('-1010532412' COLLATE BINARY)OR(0Xffffffffbcba27f1))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE ((('-1010532412' COLLATE BINARY)OR(0xffffffffbcba27f1)));
SELECT SUM(count) FROM (SELECT (((('-1010532412' COLLATE BINARY)OR(0Xffffffffbcba27f1))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE ((('-1010532412' COLLATE BINARY)OR(0xffffffffbcba27f1)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN CAST(x'' AS INTEGER) THEN ((rt0.c1)IS(vt1.c1)) END) ORDER BY 0.9716213591278621, CASE CASE rt0.c2  WHEN rt0.c5 THEN 0.1581721598924717 WHEN rt0.c0 THEN vt1.c1 WHEN 'R\rL4q]' THEN rt0.c1 ELSE vt1.c1 END  WHEN NULLIF(DISTINCT vt1.c2, NULL) THEN (rt0.c5 IN (rt0.c0)) WHEN ((vt1.c2) BETWEEN (rt0.c3) AND (rt0.c6)) THEN (('cl{I+O')OR(rt0.c0)) WHEN vt1.c0 THEN ((x'a1e4')IS NOT(vt1.c2)) ELSE CASE rt0.c3  WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c2 THEN rt0.c6 ELSE rt0.c4 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(x'' AS INTEGER) THEN ((rt0.c1)IS(vt1.c1)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY 0.9716213591278621, CASE CASE rt0.c2  WHEN rt0.c5 THEN 0.1581721598924717 WHEN rt0.c0 THEN vt1.c1 WHEN 'R\rL4q]' THEN rt0.c1 ELSE vt1.c1 END  WHEN NULLIF(DISTINCT vt1.c2, NULL) THEN (rt0.c5 IN (rt0.c0)) WHEN ((vt1.c2) BETWEEN (rt0.c3) AND (rt0.c6)) THEN (('cl{I+O')OR(rt0.c0)) WHEN vt1.c0 THEN ((x'a1e4')IS NOT(vt1.c2)) ELSE CASE rt0.c3  WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c2 THEN rt0.c6 ELSE rt0.c4 END END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN CAST(x'' AS INTEGER) THEN ((rt0.c1)IS(vt1.c1)) END) ORDER BY 0.9716213591278621, CASE CASE rt0.c2  WHEN rt0.c5 THEN 0.1581721598924717 WHEN rt0.c0 THEN vt1.c1 WHEN 'R\rL4q]' THEN rt0.c1 ELSE vt1.c1 END  WHEN NULLIF(DISTINCT vt1.c2, NULL) THEN (rt0.c5 IN (rt0.c0)) WHEN ((vt1.c2) BETWEEN (rt0.c3) AND (rt0.c6)) THEN (('cl{I+O')OR(rt0.c0)) WHEN vt1.c0 THEN ((x'a1e4')IS NOT(vt1.c2)) ELSE CASE rt0.c3  WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c2 THEN rt0.c6 ELSE rt0.c4 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(x'' AS INTEGER) THEN ((rt0.c1)IS(vt1.c1)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY 0.9716213591278621, CASE CASE rt0.c2  WHEN rt0.c5 THEN 0.1581721598924717 WHEN rt0.c0 THEN vt1.c1 WHEN 'R\rL4q]' THEN rt0.c1 ELSE vt1.c1 END  WHEN NULLIF(DISTINCT vt1.c2, NULL) THEN (rt0.c5 IN (rt0.c0)) WHEN ((vt1.c2) BETWEEN (rt0.c3) AND (rt0.c6)) THEN (('cl{I+O')OR(rt0.c0)) WHEN vt1.c0 THEN ((x'a1e4')IS NOT(vt1.c2)) ELSE CASE rt0.c3  WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c2 THEN rt0.c6 ELSE rt0.c4 END END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN CAST(x'' AS INTEGER) THEN ((rt0.c1)IS(vt1.c1)) END) ORDER BY 0.9716213591278621, CASE CASE rt0.c2  WHEN rt0.c5 THEN 0.1581721598924717 WHEN rt0.c0 THEN vt1.c1 WHEN 'R\rL4q]' THEN rt0.c1 ELSE vt1.c1 END  WHEN NULLIF(DISTINCT vt1.c2, NULL) THEN (rt0.c5 IN (rt0.c0)) WHEN ((vt1.c2) BETWEEN (rt0.c3) AND (rt0.c6)) THEN (('cl{I+O')OR(rt0.c0)) WHEN vt1.c0 THEN ((x'a1e4')IS NOT(vt1.c2)) ELSE CASE rt0.c3  WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c2 THEN rt0.c6 ELSE rt0.c4 END END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (LOWER((((rt0.c6)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LOWER((((rt0.c6)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LOWER((((rt0.c6)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LOWER((((rt0.c6)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LOWER((((rt0.c6)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (((((LTRIM(rt0.c5, vt1.c1))OR(CASE WHEN t0.c4 THEN t0.c4 END)))AND(((vt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((LTRIM(rt0.c5, vt1.c1))OR(CASE WHEN t0.c4 THEN t0.c4 END)))AND(((vt1.c2) NOTNULL)))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (((((LTRIM(rt0.c5, vt1.c1))OR(CASE WHEN t0.c4 THEN t0.c4 END)))AND(((vt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((LTRIM(rt0.c5, vt1.c1))OR(CASE WHEN t0.c4 THEN t0.c4 END)))AND(((vt1.c2) NOTNULL)))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (((((LTRIM(rt0.c5, vt1.c1))OR(CASE WHEN t0.c4 THEN t0.c4 END)))AND(((vt1.c2) NOTNULL))));
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((((x'') NOT BETWEEN (vt1.c0) AND (rt0.c1)))AND(((NULL)*(rt0.c6)))))AND(json(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((((((((x'') NOT BETWEEN (vt1.c0) AND (rt0.c1)))AND(((NULL)*(rt0.c6)))))AND(json(rt0.c4)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((((x'') NOT BETWEEN (vt1.c0) AND (rt0.c1)))AND(((NULL)*(rt0.c6)))))AND(json(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((((((((x'') NOT BETWEEN (vt1.c0) AND (rt0.c1)))AND(((NULL)*(rt0.c6)))))AND(json(rt0.c4)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((((x'') NOT BETWEEN (vt1.c0) AND (rt0.c1)))AND(((NULL)*(rt0.c6)))))AND(json(rt0.c4))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c3 AS REAL)) IS FALSE)) ORDER BY ((((t0.c1) BETWEEN (t0.c3) AND (x'da17'))) NOT BETWEEN (CASE rt0.c0  WHEN '' THEN rt0.c0 WHEN NULL THEN rt0.c6 WHEN 0.6494999673529445 THEN rt0.c3 ELSE rt0.c2 END) AND (CASE WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN t0.c4 WHEN x'' THEN t0.c1 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c3 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c1) BETWEEN (t0.c3) AND (x'da17'))) NOT BETWEEN (CASE rt0.c0  WHEN '' THEN rt0.c0 WHEN NULL THEN rt0.c6 WHEN 0.6494999673529445 THEN rt0.c3 ELSE rt0.c2 END) AND (CASE WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN t0.c4 WHEN x'' THEN t0.c1 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c3 AS REAL)) IS FALSE)) ORDER BY ((((t0.c1) BETWEEN (t0.c3) AND (x'da17'))) NOT BETWEEN (CASE rt0.c0  WHEN '' THEN rt0.c0 WHEN NULL THEN rt0.c6 WHEN 0.6494999673529445 THEN rt0.c3 ELSE rt0.c2 END) AND (CASE WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN t0.c4 WHEN x'' THEN t0.c1 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c3 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c1) BETWEEN (t0.c3) AND (x'da17'))) NOT BETWEEN (CASE rt0.c0  WHEN '' THEN rt0.c0 WHEN NULL THEN rt0.c6 WHEN 0.6494999673529445 THEN rt0.c3 ELSE rt0.c2 END) AND (CASE WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN t0.c4 WHEN x'' THEN t0.c1 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c3 AS REAL)) IS FALSE)) ORDER BY ((((t0.c1) BETWEEN (t0.c3) AND (x'da17'))) NOT BETWEEN (CASE rt0.c0  WHEN '' THEN rt0.c0 WHEN NULL THEN rt0.c6 WHEN 0.6494999673529445 THEN rt0.c3 ELSE rt0.c2 END) AND (CASE WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN t0.c4 WHEN x'' THEN t0.c1 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END))  NULLS LAST;
SELECT * FROM vt1 WHERE (CAST((((vt1.c2))>=((vt1.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c2))>=((vt1.c2))) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((((vt1.c2))>=((vt1.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c2))>=((vt1.c2))) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((((vt1.c2))>=((vt1.c2))) AS NUMERIC));
SELECT * FROM vt1 WHERE ((~ (INSTR(vt1.c2, x'f7ea'))));
SELECT SUM(count) FROM (SELECT ALL (((~ (INSTR(vt1.c2, x'f7ea')))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (INSTR(vt1.c2, x'f7ea'))));
SELECT SUM(count) FROM (SELECT ALL (((~ (INSTR(vt1.c2, x'f7ea')))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (INSTR(vt1.c2, x'f7ea'))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((NULL))) IN ('-1452469324' COLLATE BINARY))) ORDER BY ((((x'') BETWEEN (vt1.c1) AND (vt1.c1)))||(CASE vt1.c1  WHEN '607454607' THEN vt1.c1 ELSE rt0.c6 END))  NULLS LAST, vt1.c0, CASE TRIM(696430470)  WHEN ((rt0.c5)%('0.2707819297470394')) THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((NULL))) IN ('-1452469324' COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((x'') BETWEEN (vt1.c1) AND (vt1.c1)))||(CASE vt1.c1  WHEN '607454607' THEN vt1.c1 ELSE rt0.c6 END))  NULLS LAST, vt1.c0, CASE TRIM(696430470)  WHEN ((rt0.c5)%('0.2707819297470394')) THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((NULL))) IN ('-1452469324' COLLATE BINARY))) ORDER BY ((((x'') BETWEEN (vt1.c1) AND (vt1.c1)))||(CASE vt1.c1  WHEN '607454607' THEN vt1.c1 ELSE rt0.c6 END))  NULLS LAST, vt1.c0, CASE TRIM(696430470)  WHEN ((rt0.c5)%('0.2707819297470394')) THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((NULL))) IN ('-1452469324' COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((x'') BETWEEN (vt1.c1) AND (vt1.c1)))||(CASE vt1.c1  WHEN '607454607' THEN vt1.c1 ELSE rt0.c6 END))  NULLS LAST, vt1.c0, CASE TRIM(696430470)  WHEN ((rt0.c5)%('0.2707819297470394')) THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((NULL))) IN ('-1452469324' COLLATE BINARY))) ORDER BY ((((x'') BETWEEN (vt1.c1) AND (vt1.c1)))||(CASE vt1.c1  WHEN '607454607' THEN vt1.c1 ELSE rt0.c6 END))  NULLS LAST, vt1.c0, CASE TRIM(696430470)  WHEN ((rt0.c5)%('0.2707819297470394')) THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)) END  NULLS FIRST;
SELECT ALL * FROM t0, vt1, rt0 WHERE (((json_array_length(t0.c1)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((json_array_length(t0.c1)) ISNULL)) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE (((json_array_length(t0.c1)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((json_array_length(t0.c1)) ISNULL)) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON t0.c4 WHERE (((t0.c1) BETWEEN (t0.c4) AND (vt1.c0)) COLLATE RTRIM) ORDER BY NULL DESC, (((vt1.c1)) BETWEEN (((('-1075279138')>('j袚')))) AND (((('E*') NOT NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c1) BETWEEN (t0.c4) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON t0.c4 ORDER BY NULL DESC, (((vt1.c1)) BETWEEN (((('-1075279138')>('j袚')))) AND (((('E*') NOT NULL)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON t0.c4 WHERE (((t0.c1) BETWEEN (t0.c4) AND (vt1.c0)) COLLATE RTRIM) ORDER BY NULL DESC, (((vt1.c1)) BETWEEN (((('-1075279138')>('j袚')))) AND (((('E*') NOT NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c1) BETWEEN (t0.c4) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON t0.c4 ORDER BY NULL DESC, (((vt1.c1)) BETWEEN (((('-1075279138')>('j袚')))) AND (((('E*') NOT NULL)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON t0.c4 WHERE (((t0.c1) BETWEEN (t0.c4) AND (vt1.c0)) COLLATE RTRIM) ORDER BY NULL DESC, (((vt1.c1)) BETWEEN (((('-1075279138')>('j袚')))) AND (((('E*') NOT NULL)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1)=(x'd73b')));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)==(x'd73b'))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1)=(x'd73b')));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)==(x'd73b'))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1)=(x'd73b')));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (json_insert(CAST(t0.c0 AS INTEGER), ((((rt0.c1)AND('-1058879574')))AND(t0.c0)), t0.c0)) ORDER BY (+ (t0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((json_insert(CAST(t0.c0 AS INTEGER), ((((rt0.c1)AND('-1058879574')))AND(t0.c0)), t0.c0)) IS TRUE)  as count FROM rt0, t0 ORDER BY (+ (t0.c0 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (json_insert(CAST(t0.c0 AS INTEGER), ((((rt0.c1)AND('-1058879574')))AND(t0.c0)), t0.c0)) ORDER BY (+ (t0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((json_insert(CAST(t0.c0 AS INTEGER), ((((rt0.c1)AND('-1058879574')))AND(t0.c0)), t0.c0)) IS TRUE)  as count FROM rt0, t0 ORDER BY (+ (t0.c0 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (json_insert(CAST(t0.c0 AS INTEGER), ((((rt0.c1)AND('-1058879574')))AND(t0.c0)), t0.c0)) ORDER BY (+ (t0.c0 COLLATE RTRIM)) ASC;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (SQLITE_VERSION());
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON ((((rt0.c4) BETWEEN (rt0.c4) AND (t0.c0))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (((rt0.c5) NOT BETWEEN (vt1.c2) AND (t0.c1)))) FULL OUTER JOIN rt0 ON (((((vt1.c1) NOTNULL)))>((CAST(rt0.c4 AS INTEGER)))) WHERE ((((((rt0.c3)) BETWEEN ((t0.c2)) AND ((rt0.c6)))) NOT BETWEEN ((NOT (t0.c0))) AND (((rt0.c2) ISNULL)))) ORDER BY ((JULIANDAY(rt0.c6, t0.c4, rt0.c3))%(((rt0.c4)<=(rt0.c6)))), ((((rt0.c3) BETWEEN (t0.c0) AND (rt0.c3)))GLOB(rt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) BETWEEN ((t0.c2)) AND ((rt0.c6)))) NOT BETWEEN ((NOT (t0.c0))) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((((rt0.c4) BETWEEN (rt0.c4) AND (t0.c0))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (((rt0.c5) NOT BETWEEN (vt1.c2) AND (t0.c1)))) FULL OUTER JOIN rt0 ON (((((vt1.c1) NOTNULL)))>((CAST(rt0.c4 AS INTEGER)))) ORDER BY ((JULIANDAY(rt0.c6, t0.c4, rt0.c3))%(((rt0.c4)<=(rt0.c6)))), ((((rt0.c3) BETWEEN (t0.c0) AND (rt0.c3)))GLOB(rt0.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON ((((rt0.c4) BETWEEN (rt0.c4) AND (t0.c0))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (((rt0.c5) NOT BETWEEN (vt1.c2) AND (t0.c1)))) FULL OUTER JOIN rt0 ON (((((vt1.c1) NOTNULL)))>((CAST(rt0.c4 AS INTEGER)))) WHERE ((((((rt0.c3)) BETWEEN ((t0.c2)) AND ((rt0.c6)))) NOT BETWEEN ((NOT (t0.c0))) AND (((rt0.c2) ISNULL)))) ORDER BY ((JULIANDAY(rt0.c6, t0.c4, rt0.c3))%(((rt0.c4)<=(rt0.c6)))), ((((rt0.c3) BETWEEN (t0.c0) AND (rt0.c3)))GLOB(rt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) BETWEEN ((t0.c2)) AND ((rt0.c6)))) NOT BETWEEN ((NOT (t0.c0))) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((((rt0.c4) BETWEEN (rt0.c4) AND (t0.c0))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (((rt0.c5) NOT BETWEEN (vt1.c2) AND (t0.c1)))) FULL OUTER JOIN rt0 ON (((((vt1.c1) NOTNULL)))>((CAST(rt0.c4 AS INTEGER)))) ORDER BY ((JULIANDAY(rt0.c6, t0.c4, rt0.c3))%(((rt0.c4)<=(rt0.c6)))), ((((rt0.c3) BETWEEN (t0.c0) AND (rt0.c3)))GLOB(rt0.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (x'') ORDER BY ((t0.c3 COLLATE BINARY)<<((((t0.c3)) BETWEEN ((vt1.c1)) AND (('855790409'))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t0 ORDER BY ((t0.c3 COLLATE BINARY)<<((((t0.c3)) BETWEEN ((vt1.c1)) AND (('855790409'))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (x'') ORDER BY ((t0.c3 COLLATE BINARY)<<((((t0.c3)) BETWEEN ((vt1.c1)) AND (('855790409'))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t0 ORDER BY ((t0.c3 COLLATE BINARY)<<((((t0.c3)) BETWEEN ((vt1.c1)) AND (('855790409'))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (x'') ORDER BY ((t0.c3 COLLATE BINARY)<<((((t0.c3)) BETWEEN ((vt1.c1)) AND (('855790409'))))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)GLOB(rt0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)GLOB(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)GLOB(rt0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)GLOB(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)GLOB(rt0.c3)) AS INTEGER));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON (- ((t0.c3 IN ()))) WHERE (CASE '-1925055855'  WHEN vt1.c2 COLLATE BINARY THEN (((vt1.c1))=((t0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE '-1925055855'  WHEN vt1.c2 COLLATE BINARY THEN (((vt1.c1))==((t0.c0))) END) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (- ((t0.c3 IN ()))));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON (- ((t0.c3 IN ()))) WHERE (CASE '-1925055855'  WHEN vt1.c2 COLLATE BINARY THEN (((vt1.c1))=((t0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE '-1925055855'  WHEN vt1.c2 COLLATE BINARY THEN (((vt1.c1))==((t0.c0))) END) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (- ((t0.c3 IN ()))));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON (- ((t0.c3 IN ()))) WHERE (CASE '-1925055855'  WHEN vt1.c2 COLLATE BINARY THEN (((vt1.c1))=((t0.c0))) END);
SELECT ALL * FROM rt0, vt1 WHERE ((+ (((0.012441161982416404) BETWEEN (rt0.c0) AND (rt0.c5))))) ORDER BY LIKELIHOOD(((rt0.c2) IS FALSE), 0.9965780376423181);
SELECT SUM(count) FROM (SELECT ALL (((+ (((0.012441161982416404) BETWEEN (rt0.c0) AND (rt0.c5))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY LIKELIHOOD(((rt0.c2) IS FALSE), 0.9965780376423181));
SELECT ALL * FROM rt0, vt1 WHERE ((+ (((0.012441161982416404) BETWEEN (rt0.c0) AND (rt0.c5))))) ORDER BY LIKELIHOOD(((rt0.c2) IS FALSE), 0.9965780376423181);
SELECT SUM(count) FROM (SELECT ALL (((+ (((0.012441161982416404) BETWEEN (rt0.c0) AND (rt0.c5))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY LIKELIHOOD(((rt0.c2) IS FALSE), 0.9965780376423181));
SELECT ALL * FROM rt0, vt1 WHERE ((+ (((0.012441161982416404) BETWEEN (rt0.c0) AND (rt0.c5))))) ORDER BY LIKELIHOOD(((rt0.c2) IS FALSE), 0.9965780376423181);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((554705926)|(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((554705926)|(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((554705926)|(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((554705926)|(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((554705926)|(CAST(vt1.c0 AS TEXT))));
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2)))OR(((vt1.c0) NOT NULL))))AND(vt1.c0)))OR((vt1.c0 IN ()))))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2)))OR(((vt1.c0) NOT NULL))))AND(vt1.c0)))OR((vt1.c0 IN ()))))OR(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2)))OR(((vt1.c0) NOT NULL))))AND(vt1.c0)))OR((vt1.c0 IN ()))))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2)))OR(((vt1.c0) NOT NULL))))AND(vt1.c0)))OR((vt1.c0 IN ()))))OR(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2)))OR(((vt1.c0) NOT NULL))))AND(vt1.c0)))OR((vt1.c0 IN ()))))OR(vt1.c0)));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c2))) ISNULL)) ORDER BY CAST(vt1.c2 AS REAL) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c2))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c2 AS REAL) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c2))) ISNULL)) ORDER BY CAST(vt1.c2 AS REAL) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c2))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c2 AS REAL) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c2))) ISNULL)) ORDER BY CAST(vt1.c2 AS REAL) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((t0.c3) IS FALSE))IS((((t0.c1)) BETWEEN ((vt1.c2)) AND ((t0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c3) IS FALSE))IS((((t0.c1)) BETWEEN ((vt1.c2)) AND ((t0.c4)))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((t0.c3) IS FALSE))IS((((t0.c1)) BETWEEN ((vt1.c2)) AND ((t0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c3) IS FALSE))IS((((t0.c1)) BETWEEN ((vt1.c2)) AND ((t0.c4)))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((t0.c3) IS FALSE))IS((((t0.c1)) BETWEEN ((vt1.c2)) AND ((t0.c4))))));
SELECT * FROM rt0 INNER JOIN t0 ON ((TRIM(DISTINCT t0.c0)) NOT NULL) WHERE ((((rt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((-994699715)!=(t0.c2)))))) ORDER BY CAST('' COLLATE RTRIM AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((-994699715)<>(t0.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((TRIM(DISTINCT t0.c0)) NOT NULL) ORDER BY CAST('' COLLATE RTRIM AS NUMERIC) DESC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN t0 ON ((TRIM(DISTINCT t0.c0)) NOT NULL) WHERE ((((rt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((-994699715)!=(t0.c2)))))) ORDER BY CAST('' COLLATE RTRIM AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((-994699715)<>(t0.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((TRIM(DISTINCT t0.c0)) NOT NULL) ORDER BY CAST('' COLLATE RTRIM AS NUMERIC) DESC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN t0 ON ((TRIM(DISTINCT t0.c0)) NOT NULL) WHERE ((((rt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((-994699715)!=(t0.c2)))))) ORDER BY CAST('' COLLATE RTRIM AS NUMERIC) DESC  NULLS LAST;
SELECT * FROM rt0, t0, vt1 WHERE (((t0.c1 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT * FROM rt0, t0, vt1 WHERE (((t0.c1 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT * FROM rt0, t0, vt1 WHERE (((t0.c1 COLLATE BINARY) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)LIKE(vt1.c0)))AND(UPPER('H,\ZH\'))))OR(((vt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)LIKE(vt1.c0)))AND(UPPER('H,\ZH\'))))OR(((vt1.c1) IS FALSE)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)LIKE(vt1.c0)))AND(UPPER('H,\ZH\'))))OR(((vt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)LIKE(vt1.c0)))AND(UPPER('H,\ZH\'))))OR(((vt1.c1) IS FALSE)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)LIKE(vt1.c0)))AND(UPPER('H,\ZH\'))))OR(((vt1.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CASE WHEN -2023789737 THEN rt0.c5 END THEN ((((rt0.c5)AND(rt0.c2)))AND(vt1.c2)) WHEN PRINTF(rt0.c3, vt1.c2, vt1.c0) THEN rt0.c0 WHEN vt1.c2 THEN vt1.c1 COLLATE NOCASE ELSE ((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0)) END) ORDER BY (rt0.c2 IN (rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN -2023789737 THEN rt0.c5 END THEN ((((rt0.c5)AND(rt0.c2)))AND(vt1.c2)) WHEN PRINTF(rt0.c3, vt1.c2, vt1.c0) THEN rt0.c0 WHEN vt1.c2 THEN vt1.c1 COLLATE NOCASE ELSE ((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY (rt0.c2 IN (rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CASE WHEN -2023789737 THEN rt0.c5 END THEN ((((rt0.c5)AND(rt0.c2)))AND(vt1.c2)) WHEN PRINTF(rt0.c3, vt1.c2, vt1.c0) THEN rt0.c0 WHEN vt1.c2 THEN vt1.c1 COLLATE NOCASE ELSE ((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0)) END) ORDER BY (rt0.c2 IN (rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN -2023789737 THEN rt0.c5 END THEN ((((rt0.c5)AND(rt0.c2)))AND(vt1.c2)) WHEN PRINTF(rt0.c3, vt1.c2, vt1.c0) THEN rt0.c0 WHEN vt1.c2 THEN vt1.c1 COLLATE NOCASE ELSE ((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY (rt0.c2 IN (rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CASE WHEN -2023789737 THEN rt0.c5 END THEN ((((rt0.c5)AND(rt0.c2)))AND(vt1.c2)) WHEN PRINTF(rt0.c3, vt1.c2, vt1.c0) THEN rt0.c0 WHEN vt1.c2 THEN vt1.c1 COLLATE NOCASE ELSE ((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0)) END) ORDER BY (rt0.c2 IN (rt0.c2)) COLLATE BINARY;
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (NOT (x'a2eb')) COLLATE BINARY WHERE (((vt1.c2)||('719059487'))) ORDER BY ((CAST(vt1.c0 AS REAL))!=((+ (rt0.c2))))  NULLS LAST, (((- (rt0.c3)))IS(((rt0.c5) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((((vt1.c2)||('719059487'))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (NOT (x'a2eb')) COLLATE BINARY ORDER BY ((CAST(vt1.c0 AS REAL))!=((+ (rt0.c2))))  NULLS LAST, (((- (rt0.c3)))IS(((rt0.c5) NOT NULL))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (NOT (x'a2eb')) COLLATE BINARY WHERE (((vt1.c2)||('719059487'))) ORDER BY ((CAST(vt1.c0 AS REAL))!=((+ (rt0.c2))))  NULLS LAST, (((- (rt0.c3)))IS(((rt0.c5) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((((vt1.c2)||('719059487'))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (NOT (x'a2eb')) COLLATE BINARY ORDER BY ((CAST(vt1.c0 AS REAL))!=((+ (rt0.c2))))  NULLS LAST, (((- (rt0.c3)))IS(((rt0.c5) NOT NULL))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (NOT (x'a2eb')) COLLATE BINARY WHERE (((vt1.c2)||('719059487'))) ORDER BY ((CAST(vt1.c0 AS REAL))!=((+ (rt0.c2))))  NULLS LAST, (((- (rt0.c3)))IS(((rt0.c5) NOT NULL)));
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((t0.c2)OR(0.2756487738763438)))AND(t0.c0)) COLLATE NOCASE) ORDER BY ((vt1.c2) NOTNULL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)OR(0.2756487738763438)))AND(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((vt1.c2) NOTNULL) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((t0.c2)OR(0.2756487738763438)))AND(t0.c0)) COLLATE NOCASE) ORDER BY ((vt1.c2) NOTNULL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)OR(0.2756487738763438)))AND(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((vt1.c2) NOTNULL) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((t0.c2)OR(0.2756487738763438)))AND(t0.c0)) COLLATE NOCASE) ORDER BY ((vt1.c2) NOTNULL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((- (ABS(DISTINCT x'14f8')))) ORDER BY (((((t0.c2 IN (vt1.c0)))OR(t0.c2)))OR(CASE WHEN vt1.c2 THEN NULL ELSE vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (ABS(DISTINCT x'14f8')))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((t0.c2 IN (vt1.c0)))OR(t0.c2)))OR(CASE WHEN vt1.c2 THEN NULL ELSE vt1.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((- (ABS(DISTINCT x'14f8')))) ORDER BY (((((t0.c2 IN (vt1.c0)))OR(t0.c2)))OR(CASE WHEN vt1.c2 THEN NULL ELSE vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (ABS(DISTINCT x'14f8')))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((t0.c2 IN (vt1.c0)))OR(t0.c2)))OR(CASE WHEN vt1.c2 THEN NULL ELSE vt1.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((- (ABS(DISTINCT x'14f8')))) ORDER BY (((((t0.c2 IN (vt1.c0)))OR(t0.c2)))OR(CASE WHEN vt1.c2 THEN NULL ELSE vt1.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON load_extension(((((((((vt1.c0)OR(t0.c0)))AND(t0.c1)))OR(t0.c4)))AND(t0.c1))) RIGHT OUTER JOIN t0 ON (~ (rt0.c5)) COLLATE NOCASE WHERE (GLOB(rt0.c6, TRIM(DISTINCT t0.c3, vt1.c1))) ORDER BY CAST(CASE WHEN t0.c4 THEN t0.c4 END AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((GLOB(rt0.c6, TRIM(DISTINCT t0.c3, vt1.c1))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON load_extension(((((((((vt1.c0)OR(t0.c0)))AND(t0.c1)))OR(t0.c4)))AND(t0.c1))) RIGHT OUTER JOIN t0 ON (~ (rt0.c5)) COLLATE NOCASE ORDER BY CAST(CASE WHEN t0.c4 THEN t0.c4 END AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON load_extension(((((((((vt1.c0)OR(t0.c0)))AND(t0.c1)))OR(t0.c4)))AND(t0.c1))) RIGHT OUTER JOIN t0 ON (~ (rt0.c5)) COLLATE NOCASE WHERE (GLOB(rt0.c6, TRIM(DISTINCT t0.c3, vt1.c1))) ORDER BY CAST(CASE WHEN t0.c4 THEN t0.c4 END AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((GLOB(rt0.c6, TRIM(DISTINCT t0.c3, vt1.c1))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON load_extension(((((((((vt1.c0)OR(t0.c0)))AND(t0.c1)))OR(t0.c4)))AND(t0.c1))) RIGHT OUTER JOIN t0 ON (~ (rt0.c5)) COLLATE NOCASE ORDER BY CAST(CASE WHEN t0.c4 THEN t0.c4 END AS REAL) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (CASE t0.c1  WHEN (t0.c2 IN ()) THEN ((t0.c4) IS TRUE) END) ORDER BY CASE WHEN (- (t0.c1)) THEN ((t0.c2) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c1  WHEN (t0.c2 IN ()) THEN ((t0.c4) IS TRUE) END) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (- (t0.c1)) THEN ((t0.c2) IS TRUE) END ASC);
SELECT * FROM t0 WHERE (CASE t0.c1  WHEN (t0.c2 IN ()) THEN ((t0.c4) IS TRUE) END) ORDER BY CASE WHEN (- (t0.c1)) THEN ((t0.c2) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c1  WHEN (t0.c2 IN ()) THEN ((t0.c4) IS TRUE) END) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (- (t0.c1)) THEN ((t0.c2) IS TRUE) END ASC);
SELECT * FROM t0 WHERE (CASE t0.c1  WHEN (t0.c2 IN ()) THEN ((t0.c4) IS TRUE) END) ORDER BY CASE WHEN (- (t0.c1)) THEN ((t0.c2) IS TRUE) END ASC;
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE (((((t0.c1)LIKE(vt1.c1))) BETWEEN (x'') AND ((((vt1.c1, t0.c3, NULL)) BETWEEN ((t0.c0, t0.c0, t0.c3)) AND ((vt1.c1, t0.c1, t0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)LIKE(vt1.c1))) BETWEEN (x'') AND ((((vt1.c1, t0.c3, NULL)) BETWEEN ((t0.c0, t0.c0, t0.c3)) AND ((vt1.c1, t0.c1, t0.c3)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE (((((t0.c1)LIKE(vt1.c1))) BETWEEN (x'') AND ((((vt1.c1, t0.c3, NULL)) BETWEEN ((t0.c0, t0.c0, t0.c3)) AND ((vt1.c1, t0.c1, t0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)LIKE(vt1.c1))) BETWEEN (x'') AND ((((vt1.c1, t0.c3, NULL)) BETWEEN ((t0.c0, t0.c0, t0.c3)) AND ((vt1.c1, t0.c1, t0.c3)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE (((((t0.c1)LIKE(vt1.c1))) BETWEEN (x'') AND ((((vt1.c1, t0.c3, NULL)) BETWEEN ((t0.c0, t0.c0, t0.c3)) AND ((vt1.c1, t0.c1, t0.c3))))));
SELECT ALL * FROM rt0, vt1 WHERE (MIN(rt0.c4, ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((MIN(rt0.c4, ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (MIN(rt0.c4, ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((MIN(rt0.c4, ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (MIN(rt0.c4, ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.c0))));
SELECT * FROM vt1 WHERE (CASE ((vt1.c1)-(vt1.c2))  WHEN (vt1.c1 IN ()) THEN (+ (vt1.c0)) ELSE vt1.c2 COLLATE NOCASE END) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1)-(vt1.c2))  WHEN (vt1.c1 IN ()) THEN (+ (vt1.c0)) ELSE vt1.c2 COLLATE NOCASE END) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_SOURCE_ID() ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE ((vt1.c1)-(vt1.c2))  WHEN (vt1.c1 IN ()) THEN (+ (vt1.c0)) ELSE vt1.c2 COLLATE NOCASE END) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1)-(vt1.c2))  WHEN (vt1.c1 IN ()) THEN (+ (vt1.c0)) ELSE vt1.c2 COLLATE NOCASE END) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_SOURCE_ID() ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE ((vt1.c1)-(vt1.c2))  WHEN (vt1.c1 IN ()) THEN (+ (vt1.c0)) ELSE vt1.c2 COLLATE NOCASE END) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS FIRST;
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON NULL WHERE (((NULL) NOT BETWEEN (((((((((rt0.c0)OR(t0.c0)))AND(t0.c1)))OR(rt0.c5)))AND(t0.c3))) AND (((0.34664753475645094) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((rt0.c1) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((((((((rt0.c0)OR(t0.c0)))AND(t0.c1)))OR(rt0.c5)))AND(t0.c3))) AND (((0.34664753475645094) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON NULL ORDER BY ((rt0.c1) IS FALSE)  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON NULL WHERE (((NULL) NOT BETWEEN (((((((((rt0.c0)OR(t0.c0)))AND(t0.c1)))OR(rt0.c5)))AND(t0.c3))) AND (((0.34664753475645094) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((rt0.c1) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((((((((rt0.c0)OR(t0.c0)))AND(t0.c1)))OR(rt0.c5)))AND(t0.c3))) AND (((0.34664753475645094) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON NULL ORDER BY ((rt0.c1) IS FALSE)  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON NULL WHERE (((NULL) NOT BETWEEN (((((((((rt0.c0)OR(t0.c0)))AND(t0.c1)))OR(rt0.c5)))AND(t0.c3))) AND (((0.34664753475645094) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((rt0.c1) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((((- (vt1.c0)))AND(CAST('1017566164' AS NUMERIC))))OR((vt1.c2 IN (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((- (vt1.c0)))AND(CAST('1017566164' AS NUMERIC))))OR((vt1.c2 IN (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((- (vt1.c0)))AND(CAST('1017566164' AS NUMERIC))))OR((vt1.c2 IN (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((- (vt1.c0)))AND(CAST('1017566164' AS NUMERIC))))OR((vt1.c2 IN (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((- (vt1.c0)))AND(CAST('1017566164' AS NUMERIC))))OR((vt1.c2 IN (vt1.c1)))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c1 COLLATE BINARY))<>((0.1169022219388951)))) ORDER BY (((((vt1.c1)OR(vt1.c0)))OR(vt1.c2)) IN ()), CAST((vt1.c2 IN (vt1.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((vt1.c1 COLLATE BINARY))<>((0.1169022219388951)))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c1)OR(vt1.c0)))OR(vt1.c2)) IN ()), CAST((vt1.c2 IN (vt1.c1)) AS BLOB));
SELECT ALL * FROM vt1 WHERE ((((vt1.c1 COLLATE BINARY))<>((0.1169022219388951)))) ORDER BY (((((vt1.c1)OR(vt1.c0)))OR(vt1.c2)) IN ()), CAST((vt1.c2 IN (vt1.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((vt1.c1 COLLATE BINARY))<>((0.1169022219388951)))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c1)OR(vt1.c0)))OR(vt1.c2)) IN ()), CAST((vt1.c2 IN (vt1.c1)) AS BLOB));
SELECT ALL * FROM vt1 WHERE ((((vt1.c1 COLLATE BINARY))<>((0.1169022219388951)))) ORDER BY (((((vt1.c1)OR(vt1.c0)))OR(vt1.c2)) IN ()), CAST((vt1.c2 IN (vt1.c1)) AS BLOB);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c6) BETWEEN (rt0.c3) AND (rt0.c6)))AND((((rt0.c2, rt0.c5, rt0.c0))=((rt0.c4, rt0.c2, rt0.c1))))))OR(((rt0.c6)%(rt0.c6)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c6) BETWEEN (rt0.c3) AND (rt0.c6)))AND((((rt0.c2, rt0.c5, rt0.c0))==((rt0.c4, rt0.c2, rt0.c1))))))OR(((rt0.c6)%(rt0.c6))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c6) BETWEEN (rt0.c3) AND (rt0.c6)))AND((((rt0.c2, rt0.c5, rt0.c0))=((rt0.c4, rt0.c2, rt0.c1))))))OR(((rt0.c6)%(rt0.c6)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c6) BETWEEN (rt0.c3) AND (rt0.c6)))AND((((rt0.c2, rt0.c5, rt0.c0))==((rt0.c4, rt0.c2, rt0.c1))))))OR(((rt0.c6)%(rt0.c6))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c6) BETWEEN (rt0.c3) AND (rt0.c6)))AND((((rt0.c2, rt0.c5, rt0.c0))=((rt0.c4, rt0.c2, rt0.c1))))))OR(((rt0.c6)%(rt0.c6)))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (rt0.c3);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((t0.c1) NOT NULL))OR(((t0.c2)<=(t0.c2)))))OR(((vt1.c0)<=(t0.c1)))) WHERE ((((t0.c0)) BETWEEN ((NULL)) AND ((((t0.c1)<=(vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((NULL)) AND ((((t0.c1)<=(vt1.c1)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((((t0.c1) NOT NULL))OR(((t0.c2)<=(t0.c2)))))OR(((vt1.c0)<=(t0.c1)))));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((t0.c1) NOT NULL))OR(((t0.c2)<=(t0.c2)))))OR(((vt1.c0)<=(t0.c1)))) WHERE ((((t0.c0)) BETWEEN ((NULL)) AND ((((t0.c1)<=(vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((NULL)) AND ((((t0.c1)<=(vt1.c1)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((((t0.c1) NOT NULL))OR(((t0.c2)<=(t0.c2)))))OR(((vt1.c0)<=(t0.c1)))));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((t0.c1) NOT NULL))OR(((t0.c2)<=(t0.c2)))))OR(((vt1.c0)<=(t0.c1)))) WHERE ((((t0.c0)) BETWEEN ((NULL)) AND ((((t0.c1)<=(vt1.c1))))));
SELECT * FROM t0, vt1 WHERE (7.19059487E8) ORDER BY 0.1515024378759393 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((7.19059487E8) IS TRUE)  as count FROM t0, vt1 ORDER BY 0.1515024378759393 COLLATE BINARY DESC);
SELECT * FROM t0, vt1 WHERE (7.19059487E8) ORDER BY 0.1515024378759393 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((7.19059487E8) IS TRUE)  as count FROM t0, vt1 ORDER BY 0.1515024378759393 COLLATE BINARY DESC);
SELECT * FROM t0, vt1 WHERE (7.19059487E8) ORDER BY 0.1515024378759393 COLLATE BINARY DESC;
SELECT * FROM vt1 WHERE ((+ ((((vt1.c0, vt1.c1, vt1.c1))>=((vt1.c2, vt1.c1, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt1.c0, vt1.c1, vt1.c1))>=((vt1.c2, vt1.c1, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ ((((vt1.c0, vt1.c1, vt1.c1))>=((vt1.c2, vt1.c1, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt1.c0, vt1.c1, vt1.c1))>=((vt1.c2, vt1.c1, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ ((((vt1.c0, vt1.c1, vt1.c1))>=((vt1.c2, vt1.c1, vt1.c0))))));
SELECT * FROM t0, rt0, vt1 WHERE ((((((vt1.c2) NOTNULL)))>((UNLIKELY(DISTINCT t0.c4))))) ORDER BY TRIM(((rt0.c5) BETWEEN (t0.c3) AND (rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2) NOTNULL)))>((UNLIKELY(DISTINCT t0.c4))))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY TRIM(((rt0.c5) BETWEEN (t0.c3) AND (rt0.c4))));
SELECT * FROM t0, rt0, vt1 WHERE ((((((vt1.c2) NOTNULL)))>((UNLIKELY(DISTINCT t0.c4))))) ORDER BY TRIM(((rt0.c5) BETWEEN (t0.c3) AND (rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2) NOTNULL)))>((UNLIKELY(DISTINCT t0.c4))))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY TRIM(((rt0.c5) BETWEEN (t0.c3) AND (rt0.c4))));
SELECT * FROM t0, rt0, vt1 WHERE ((((((vt1.c2) NOTNULL)))>((UNLIKELY(DISTINCT t0.c4))))) ORDER BY TRIM(((rt0.c5) BETWEEN (t0.c3) AND (rt0.c4)));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((~ (((t0.c4)AND(t0.c1))))) ORDER BY (+ ((((t0.c2))==((t0.c4))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c4)AND(t0.c1))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ ((((t0.c2))=((t0.c4))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((~ (((t0.c4)AND(t0.c1))))) ORDER BY (+ ((((t0.c2))==((t0.c4))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c4)AND(t0.c1))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ ((((t0.c2))=((t0.c4))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((~ (((t0.c4)AND(t0.c1))))) ORDER BY (+ ((((t0.c2))==((t0.c4))))) DESC  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE ((((t0.c1, t0.c3, vt1.c0)) BETWEEN ((t0.c2, vt1.c1, vt1.c1)) AND ((t0.c0, NULL, vt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c3, vt1.c0)) BETWEEN ((t0.c2, vt1.c1, vt1.c1)) AND ((t0.c0, NULL, vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((((t0.c1, t0.c3, vt1.c0)) BETWEEN ((t0.c2, vt1.c1, vt1.c1)) AND ((t0.c0, NULL, vt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c3, vt1.c0)) BETWEEN ((t0.c2, vt1.c1, vt1.c1)) AND ((t0.c0, NULL, vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((((t0.c1, t0.c3, vt1.c0)) BETWEEN ((t0.c2, vt1.c1, vt1.c1)) AND ((t0.c0, NULL, vt1.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c2) ORDER BY CASE vt1.c2  WHEN ((vt1.c2)IS(vt1.c1)) THEN (~ (vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c2  WHEN ((vt1.c2)IS(vt1.c1)) THEN (~ (vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c2) ORDER BY CASE vt1.c2  WHEN ((vt1.c2)IS(vt1.c1)) THEN (~ (vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c2  WHEN ((vt1.c2)IS(vt1.c1)) THEN (~ (vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c2) ORDER BY CASE vt1.c2  WHEN ((vt1.c2)IS(vt1.c1)) THEN (~ (vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END END ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((((((t0.c2)AND(t0.c4)))AND(t0.c4)), CAST(t0.c1 AS REAL), (t0.c3 IN ())))==((CAST(t0.c3 AS TEXT), t0.c2, ((0.8023416309546445) NOT BETWEEN (t0.c1) AND (t0.c4)))))) ORDER BY t0.c1 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((((t0.c2)AND(t0.c4)))AND(t0.c4)), CAST(t0.c1 AS REAL), (t0.c3 IN ())))=((CAST(t0.c3 AS TEXT), t0.c2, ((0.8023416309546445) NOT BETWEEN (t0.c1) AND (t0.c4)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c1 COLLATE RTRIM);
SELECT * FROM t0 WHERE ((((((((t0.c2)AND(t0.c4)))AND(t0.c4)), CAST(t0.c1 AS REAL), (t0.c3 IN ())))==((CAST(t0.c3 AS TEXT), t0.c2, ((0.8023416309546445) NOT BETWEEN (t0.c1) AND (t0.c4)))))) ORDER BY t0.c1 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((((t0.c2)AND(t0.c4)))AND(t0.c4)), CAST(t0.c1 AS REAL), (t0.c3 IN ())))=((CAST(t0.c3 AS TEXT), t0.c2, ((0.8023416309546445) NOT BETWEEN (t0.c1) AND (t0.c4)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c1 COLLATE RTRIM);
SELECT * FROM t0 WHERE ((((((((t0.c2)AND(t0.c4)))AND(t0.c4)), CAST(t0.c1 AS REAL), (t0.c3 IN ())))==((CAST(t0.c3 AS TEXT), t0.c2, ((0.8023416309546445) NOT BETWEEN (t0.c1) AND (t0.c4)))))) ORDER BY t0.c1 COLLATE RTRIM;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (t0.c2);
SELECT * FROM t0, vt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE (rt0.c2);
SELECT * FROM vt1, rt0 WHERE (CASE ((((((((vt1.c0)OR(rt0.c5)))AND(vt1.c0)))AND(rt0.c6)))OR(rt0.c5))  WHEN ((vt1.c2)!=(rt0.c2)) THEN rt0.c6 WHEN ((rt0.c3)LIKE(rt0.c6)) THEN ((rt0.c5) NOTNULL) WHEN -7.78361952E8 THEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt1.c0)OR(rt0.c5)))AND(vt1.c0)))AND(rt0.c6)))OR(rt0.c5))  WHEN ((vt1.c2)!=(rt0.c2)) THEN rt0.c6 WHEN ((rt0.c3)LIKE(rt0.c6)) THEN ((rt0.c5) NOTNULL) WHEN -7.78361952E8 THEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE ((((((((vt1.c0)OR(rt0.c5)))AND(vt1.c0)))AND(rt0.c6)))OR(rt0.c5))  WHEN ((vt1.c2)!=(rt0.c2)) THEN rt0.c6 WHEN ((rt0.c3)LIKE(rt0.c6)) THEN ((rt0.c5) NOTNULL) WHEN -7.78361952E8 THEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt1.c0)OR(rt0.c5)))AND(vt1.c0)))AND(rt0.c6)))OR(rt0.c5))  WHEN ((vt1.c2)!=(rt0.c2)) THEN rt0.c6 WHEN ((rt0.c3)LIKE(rt0.c6)) THEN ((rt0.c5) NOTNULL) WHEN -7.78361952E8 THEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE ((((((((vt1.c0)OR(rt0.c5)))AND(vt1.c0)))AND(rt0.c6)))OR(rt0.c5))  WHEN ((vt1.c2)!=(rt0.c2)) THEN rt0.c6 WHEN ((rt0.c3)LIKE(rt0.c6)) THEN ((rt0.c5) NOTNULL) WHEN -7.78361952E8 THEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)) END);
SELECT * FROM rt0 WHERE ((~ ((((rt0.c5)) BETWEEN ((rt0.c3)) AND ((rt0.c5)))))) ORDER BY rt0.c6  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c5)) BETWEEN ((rt0.c3)) AND ((rt0.c5)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c6  NULLS FIRST);
SELECT * FROM rt0 WHERE ((~ ((((rt0.c5)) BETWEEN ((rt0.c3)) AND ((rt0.c5)))))) ORDER BY rt0.c6  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c5)) BETWEEN ((rt0.c3)) AND ((rt0.c5)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c6  NULLS FIRST);
SELECT * FROM rt0 WHERE ((~ ((((rt0.c5)) BETWEEN ((rt0.c3)) AND ((rt0.c5)))))) ORDER BY rt0.c6  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((((((((13146876)AND(((x'') NOTNULL))))OR('좁]1G뿔')))AND(rt0.c6)))OR(((rt0.c4)LIKE(rt0.c6)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((13146876)AND(((x'') NOTNULL))))OR('좁]1G뿔')))AND(rt0.c6)))OR(((rt0.c4)LIKE(rt0.c6))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((((((((13146876)AND(((x'') NOTNULL))))OR('좁]1G뿔')))AND(rt0.c6)))OR(((rt0.c4)LIKE(rt0.c6)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((13146876)AND(((x'') NOTNULL))))OR('좁]1G뿔')))AND(rt0.c6)))OR(((rt0.c4)LIKE(rt0.c6))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((((((((13146876)AND(((x'') NOTNULL))))OR('좁]1G뿔')))AND(rt0.c6)))OR(((rt0.c4)LIKE(rt0.c6)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CAST(((rt0.c6)<<(rt0.c5)) AS NUMERIC) WHERE (rt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CAST(((rt0.c6)<<(rt0.c5)) AS NUMERIC));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CAST(((rt0.c6)<<(rt0.c5)) AS NUMERIC) WHERE (rt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CAST(((rt0.c6)<<(rt0.c5)) AS NUMERIC));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CAST(((rt0.c6)<<(rt0.c5)) AS NUMERIC) WHERE (rt0.c0 COLLATE RTRIM);
SELECT * FROM rt0, vt1 WHERE (x'f4d0') ORDER BY ((((((((((rt0.c0)AND(vt1.c1)))AND(0.5131819622536429)))OR(vt1.c0)))AND(vt1.c1)))!=(((rt0.c1)>(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((x'f4d0') IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((((rt0.c0)AND(vt1.c1)))AND(0.5131819622536429)))OR(vt1.c0)))AND(vt1.c1)))<>(((rt0.c1)>(rt0.c0)))));
SELECT * FROM rt0, vt1 WHERE (x'f4d0') ORDER BY ((((((((((rt0.c0)AND(vt1.c1)))AND(0.5131819622536429)))OR(vt1.c0)))AND(vt1.c1)))!=(((rt0.c1)>(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((x'f4d0') IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((((rt0.c0)AND(vt1.c1)))AND(0.5131819622536429)))OR(vt1.c0)))AND(vt1.c1)))<>(((rt0.c1)>(rt0.c0)))));
SELECT * FROM rt0, vt1 WHERE (x'f4d0') ORDER BY ((((((((((rt0.c0)AND(vt1.c1)))AND(0.5131819622536429)))OR(vt1.c0)))AND(vt1.c1)))!=(((rt0.c1)>(rt0.c0))));
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1)+(rt0.c0)))>=(CASE WHEN rt0.c4 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)+(rt0.c0)))>=(CASE WHEN rt0.c4 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1)+(rt0.c0)))>=(CASE WHEN rt0.c4 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)+(rt0.c0)))>=(CASE WHEN rt0.c4 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1)+(rt0.c0)))>=(CASE WHEN rt0.c4 THEN rt0.c2 END)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c6, '', rt0.c4, rt0.c4, rt0.c4)) NOT BETWEEN (((- (rt0.c2)), ((rt0.c4) NOTNULL), '-1058879574', 'qE', ((0.08581971591492155) ISNULL))) AND ((LOWER(rt0.c6), ((rt0.c1)IS(rt0.c3)), (+ (rt0.c6)), CASE WHEN rt0.c4 THEN rt0.c6 END, ((((rt0.c6)OR(rt0.c6)))AND(rt0.c1)))))) ORDER BY CAST(ABS(DISTINCT x'e98e') AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c6, '', rt0.c4, rt0.c4, rt0.c4)) NOT BETWEEN (((- (rt0.c2)), ((rt0.c4) NOTNULL), '-1058879574', 'qE', ((0.08581971591492155) ISNULL))) AND ((LOWER(rt0.c6), ((rt0.c1)IS(rt0.c3)), (+ (rt0.c6)), CASE WHEN rt0.c4 THEN rt0.c6 END, ((((rt0.c6)OR(rt0.c6)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(ABS(DISTINCT x'e98e') AS BLOB)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c6, '', rt0.c4, rt0.c4, rt0.c4)) NOT BETWEEN (((- (rt0.c2)), ((rt0.c4) NOTNULL), '-1058879574', 'qE', ((0.08581971591492155) ISNULL))) AND ((LOWER(rt0.c6), ((rt0.c1)IS(rt0.c3)), (+ (rt0.c6)), CASE WHEN rt0.c4 THEN rt0.c6 END, ((((rt0.c6)OR(rt0.c6)))AND(rt0.c1)))))) ORDER BY CAST(ABS(DISTINCT x'e98e') AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c6, '', rt0.c4, rt0.c4, rt0.c4)) NOT BETWEEN (((- (rt0.c2)), ((rt0.c4) NOTNULL), '-1058879574', 'qE', ((0.08581971591492155) ISNULL))) AND ((LOWER(rt0.c6), ((rt0.c1)IS(rt0.c3)), (+ (rt0.c6)), CASE WHEN rt0.c4 THEN rt0.c6 END, ((((rt0.c6)OR(rt0.c6)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(ABS(DISTINCT x'e98e') AS BLOB)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c6, '', rt0.c4, rt0.c4, rt0.c4)) NOT BETWEEN (((- (rt0.c2)), ((rt0.c4) NOTNULL), '-1058879574', 'qE', ((0.08581971591492155) ISNULL))) AND ((LOWER(rt0.c6), ((rt0.c1)IS(rt0.c3)), (+ (rt0.c6)), CASE WHEN rt0.c4 THEN rt0.c6 END, ((((rt0.c6)OR(rt0.c6)))AND(rt0.c1)))))) ORDER BY CAST(ABS(DISTINCT x'e98e') AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0 WHERE ((((t0.c2 IN ())) NOT BETWEEN ((((t0.c1, t0.c1, t0.c4)) NOT BETWEEN ((NULL, vt1.c0, vt1.c0)) AND ((t0.c4, t0.c1, vt1.c0)))) AND (IFNULL(DISTINCT vt1.c2, vt1.c1))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ())) NOT BETWEEN ((((t0.c1, t0.c1, t0.c4)) NOT BETWEEN ((NULL, vt1.c0, vt1.c0)) AND ((t0.c4, t0.c1, vt1.c0)))) AND (IFNULL(DISTINCT vt1.c2, vt1.c1)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((t0.c2 IN ())) NOT BETWEEN ((((t0.c1, t0.c1, t0.c4)) NOT BETWEEN ((NULL, vt1.c0, vt1.c0)) AND ((t0.c4, t0.c1, vt1.c0)))) AND (IFNULL(DISTINCT vt1.c2, vt1.c1))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ())) NOT BETWEEN ((((t0.c1, t0.c1, t0.c4)) NOT BETWEEN ((NULL, vt1.c0, vt1.c0)) AND ((t0.c4, t0.c1, vt1.c0)))) AND (IFNULL(DISTINCT vt1.c2, vt1.c1)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((t0.c2 IN ())) NOT BETWEEN ((((t0.c1, t0.c1, t0.c4)) NOT BETWEEN ((NULL, vt1.c0, vt1.c0)) AND ((t0.c4, t0.c1, vt1.c0)))) AND (IFNULL(DISTINCT vt1.c2, vt1.c1))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON (+ (((rt0.c6) ISNULL))) FULL OUTER JOIN rt0 ON (((((rt0.c1, t0.c4, rt0.c3))>=((t0.c3, vt1.c1, rt0.c6)))) IS FALSE) WHERE (CASE WHEN 1138817134 THEN (+ (t0.c4)) END) ORDER BY (((vt1.c1)>>(vt1.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 1138817134 THEN (+ (t0.c4)) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (+ (((rt0.c6) ISNULL))) FULL OUTER JOIN rt0 ON (((((rt0.c1, t0.c4, rt0.c3))>=((t0.c3, vt1.c1, rt0.c6)))) IS FALSE) ORDER BY (((vt1.c1)>>(vt1.c2)) IN ())  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON (+ (((rt0.c6) ISNULL))) FULL OUTER JOIN rt0 ON (((((rt0.c1, t0.c4, rt0.c3))>=((t0.c3, vt1.c1, rt0.c6)))) IS FALSE) WHERE (CASE WHEN 1138817134 THEN (+ (t0.c4)) END) ORDER BY (((vt1.c1)>>(vt1.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 1138817134 THEN (+ (t0.c4)) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (+ (((rt0.c6) ISNULL))) FULL OUTER JOIN rt0 ON (((((rt0.c1, t0.c4, rt0.c3))>=((t0.c3, vt1.c1, rt0.c6)))) IS FALSE) ORDER BY (((vt1.c1)>>(vt1.c2)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c4)) NOT BETWEEN ((t0.c4)) AND ((t0.c3))) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c4)) NOT BETWEEN ((t0.c4)) AND ((t0.c3))) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c4)) NOT BETWEEN ((t0.c4)) AND ((t0.c3))) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c4)) NOT BETWEEN ((t0.c4)) AND ((t0.c3))) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c4)) NOT BETWEEN ((t0.c4)) AND ((t0.c3))) COLLATE BINARY COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (CAST(CASE t0.c4  WHEN rt0.c2 THEN t0.c2 WHEN vt1.c1 THEN t0.c1 WHEN t0.c2 THEN rt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE t0.c4  WHEN rt0.c2 THEN t0.c2 WHEN vt1.c1 THEN t0.c1 WHEN t0.c2 THEN rt0.c0 END AS REAL)) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (CAST(CASE t0.c4  WHEN rt0.c2 THEN t0.c2 WHEN vt1.c1 THEN t0.c1 WHEN t0.c2 THEN rt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE t0.c4  WHEN rt0.c2 THEN t0.c2 WHEN vt1.c1 THEN t0.c1 WHEN t0.c2 THEN rt0.c0 END AS REAL)) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (CAST(CASE t0.c4  WHEN rt0.c2 THEN t0.c2 WHEN vt1.c1 THEN t0.c1 WHEN t0.c2 THEN rt0.c0 END AS REAL));
SELECT ALL * FROM vt1, t0 WHERE (CASE WHEN 0X4007bfd4 THEN (- (t0.c4)) WHEN (NOT (t0.c1)) THEN TRIM(DISTINCT vt1.c1) WHEN ((t0.c1)GLOB(NULL)) THEN (NOT (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0x4007bfd4 THEN (- (t0.c4)) WHEN (NOT (t0.c1)) THEN TRIM(DISTINCT vt1.c1) WHEN ((t0.c1)GLOB(NULL)) THEN (NOT (vt1.c0)) END) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CASE WHEN 0X4007bfd4 THEN (- (t0.c4)) WHEN (NOT (t0.c1)) THEN TRIM(DISTINCT vt1.c1) WHEN ((t0.c1)GLOB(NULL)) THEN (NOT (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0x4007bfd4 THEN (- (t0.c4)) WHEN (NOT (t0.c1)) THEN TRIM(DISTINCT vt1.c1) WHEN ((t0.c1)GLOB(NULL)) THEN (NOT (vt1.c0)) END) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CASE WHEN 0X4007bfd4 THEN (- (t0.c4)) WHEN (NOT (t0.c1)) THEN TRIM(DISTINCT vt1.c1) WHEN ((t0.c1)GLOB(NULL)) THEN (NOT (vt1.c0)) END);
SELECT COUNT(*) FROM t0, rt0 INNER JOIN vt1 ON SQLITE_SOURCE_ID() WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt1 ON SQLITE_SOURCE_ID());
SELECT COUNT(*) FROM t0, rt0 INNER JOIN vt1 ON SQLITE_SOURCE_ID() WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt1 ON SQLITE_SOURCE_ID());
SELECT COUNT(*) FROM t0, rt0 INNER JOIN vt1 ON SQLITE_SOURCE_ID() WHERE (((NULL) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (((t0.c3 COLLATE NOCASE)<=(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c3 COLLATE NOCASE)<=(NULL))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (((t0.c3 COLLATE NOCASE)<=(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c3 COLLATE NOCASE)<=(NULL))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (((t0.c3 COLLATE NOCASE)<=(NULL)));
SELECT * FROM t0, rt0, vt1 WHERE (((rt0.c6)IS NOT(((rt0.c3) NOT BETWEEN (rt0.c6) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c6)IS NOT(((rt0.c3) NOT BETWEEN (rt0.c6) AND (rt0.c4))))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE (((rt0.c6)IS NOT(((rt0.c3) NOT BETWEEN (rt0.c6) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c6)IS NOT(((rt0.c3) NOT BETWEEN (rt0.c6) AND (rt0.c4))))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE (((rt0.c6)IS NOT(((rt0.c3) NOT BETWEEN (rt0.c6) AND (rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c5) NOT BETWEEN (vt1.c1) AND (vt1.c0))) IS TRUE)) ORDER BY CASE WHEN LOWER(rt0.c6) THEN (((vt1.c0, vt1.c0, '6\m(<y7	l')) BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((vt1.c0, rt0.c2, rt0.c2))) WHEN '-778361952' THEN rt0.c0 WHEN CAST(rt0.c6 AS INTEGER) THEN (~ (vt1.c2)) ELSE rt0.c2 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) NOT BETWEEN (vt1.c1) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN LOWER(rt0.c6) THEN (((vt1.c0, vt1.c0, '6\m(<y7	l')) BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((vt1.c0, rt0.c2, rt0.c2))) WHEN '-778361952' THEN rt0.c0 WHEN CAST(rt0.c6 AS INTEGER) THEN (~ (vt1.c2)) ELSE rt0.c2 END DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c5) NOT BETWEEN (vt1.c1) AND (vt1.c0))) IS TRUE)) ORDER BY CASE WHEN LOWER(rt0.c6) THEN (((vt1.c0, vt1.c0, '6\m(<y7	l')) BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((vt1.c0, rt0.c2, rt0.c2))) WHEN '-778361952' THEN rt0.c0 WHEN CAST(rt0.c6 AS INTEGER) THEN (~ (vt1.c2)) ELSE rt0.c2 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) NOT BETWEEN (vt1.c1) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN LOWER(rt0.c6) THEN (((vt1.c0, vt1.c0, '6\m(<y7	l')) BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((vt1.c0, rt0.c2, rt0.c2))) WHEN '-778361952' THEN rt0.c0 WHEN CAST(rt0.c6 AS INTEGER) THEN (~ (vt1.c2)) ELSE rt0.c2 END DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c5) NOT BETWEEN (vt1.c1) AND (vt1.c0))) IS TRUE)) ORDER BY CASE WHEN LOWER(rt0.c6) THEN (((vt1.c0, vt1.c0, '6\m(<y7	l')) BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((vt1.c0, rt0.c2, rt0.c2))) WHEN '-778361952' THEN rt0.c0 WHEN CAST(rt0.c6 AS INTEGER) THEN (~ (vt1.c2)) ELSE rt0.c2 END DESC;
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c1) ORDER BY (((- (rt0.c6)))>>((- (vt1.c0)))) ASC, ((((rt0.c3) NOT NULL)) NOT BETWEEN (rt0.c4) AND (vt1.c0 COLLATE BINARY))  NULLS FIRST, ((rt0.c3)<<(vt1.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((- (rt0.c6)))>>((- (vt1.c0)))) ASC, ((((rt0.c3) NOT NULL)) NOT BETWEEN (rt0.c4) AND (vt1.c0 COLLATE BINARY))  NULLS FIRST, ((rt0.c3)<<(vt1.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c1) ORDER BY (((- (rt0.c6)))>>((- (vt1.c0)))) ASC, ((((rt0.c3) NOT NULL)) NOT BETWEEN (rt0.c4) AND (vt1.c0 COLLATE BINARY))  NULLS FIRST, ((rt0.c3)<<(vt1.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((- (rt0.c6)))>>((- (vt1.c0)))) ASC, ((((rt0.c3) NOT NULL)) NOT BETWEEN (rt0.c4) AND (vt1.c0 COLLATE BINARY))  NULLS FIRST, ((rt0.c3)<<(vt1.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c1) ORDER BY (((- (rt0.c6)))>>((- (vt1.c0)))) ASC, ((((rt0.c3) NOT NULL)) NOT BETWEEN (rt0.c4) AND (vt1.c0 COLLATE BINARY))  NULLS FIRST, ((rt0.c3)<<(vt1.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (((((((((((rt0.c6) NOT BETWEEN (rt0.c6) AND (0X25f046e7)))AND(CASE WHEN t0.c1 THEN rt0.c4 WHEN t0.c4 THEN rt0.c5 WHEN t0.c0 THEN rt0.c2 ELSE vt1.c0 END)))AND(t0.c4)))AND((((rt0.c4))<>((rt0.c3))))))AND(((t0.c2)OR(t0.c2))))) ORDER BY ((((((((rt0.c6)OR(-1.16719986E8)))OR(rt0.c6)))OR(rt0.c2 COLLATE RTRIM)))OR(CAST(vt1.c2 AS REAL))) DESC  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c6) NOT BETWEEN (rt0.c6) AND (0X25f046e7)))AND(CASE WHEN t0.c1 THEN rt0.c4 WHEN t0.c4 THEN rt0.c5 WHEN t0.c0 THEN rt0.c2 ELSE vt1.c0 END)))AND(t0.c4)))AND((((rt0.c4))<>((rt0.c3))))))AND(((t0.c2)OR(t0.c2))))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((((((rt0.c6)OR(-1.16719986E8)))OR(rt0.c6)))OR(rt0.c2 COLLATE RTRIM)))OR(CAST(vt1.c2 AS REAL))) DESC  NULLS FIRST, NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (((((((((((rt0.c6) NOT BETWEEN (rt0.c6) AND (0X25f046e7)))AND(CASE WHEN t0.c1 THEN rt0.c4 WHEN t0.c4 THEN rt0.c5 WHEN t0.c0 THEN rt0.c2 ELSE vt1.c0 END)))AND(t0.c4)))AND((((rt0.c4))<>((rt0.c3))))))AND(((t0.c2)OR(t0.c2))))) ORDER BY ((((((((rt0.c6)OR(-1.16719986E8)))OR(rt0.c6)))OR(rt0.c2 COLLATE RTRIM)))OR(CAST(vt1.c2 AS REAL))) DESC  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c6) NOT BETWEEN (rt0.c6) AND (0X25f046e7)))AND(CASE WHEN t0.c1 THEN rt0.c4 WHEN t0.c4 THEN rt0.c5 WHEN t0.c0 THEN rt0.c2 ELSE vt1.c0 END)))AND(t0.c4)))AND((((rt0.c4))<>((rt0.c3))))))AND(((t0.c2)OR(t0.c2))))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((((((rt0.c6)OR(-1.16719986E8)))OR(rt0.c6)))OR(rt0.c2 COLLATE RTRIM)))OR(CAST(vt1.c2 AS REAL))) DESC  NULLS FIRST, NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (((((((((((rt0.c6) NOT BETWEEN (rt0.c6) AND (0X25f046e7)))AND(CASE WHEN t0.c1 THEN rt0.c4 WHEN t0.c4 THEN rt0.c5 WHEN t0.c0 THEN rt0.c2 ELSE vt1.c0 END)))AND(t0.c4)))AND((((rt0.c4))<>((rt0.c3))))))AND(((t0.c2)OR(t0.c2))))) ORDER BY ((((((((rt0.c6)OR(-1.16719986E8)))OR(rt0.c6)))OR(rt0.c2 COLLATE RTRIM)))OR(CAST(vt1.c2 AS REAL))) DESC  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((CASE t0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c6 END))<((((t0.c2) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE t0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c6 END))<((((t0.c2) IS FALSE))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((CASE t0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c6 END))<((((t0.c2) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE t0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c6 END))<((((t0.c2) IS FALSE))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((CASE t0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c6 END))<((((t0.c2) IS FALSE)))));
SELECT * FROM t0, rt0, vt1 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE (rt0.c4);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE ((((t0.c1)&(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c1)&(rt0.c3)) IN ())) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE ((((t0.c1)&(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c1)&(rt0.c3)) IN ())) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE ((((t0.c1)&(rt0.c3)) IN ()));
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c0))<>((CAST(t0.c0 AS BLOB))))) ORDER BY ((vt1.c0)GLOB(t0.c2)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))!=((CAST(t0.c0 AS BLOB))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((vt1.c0)GLOB(t0.c2)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c0))<>((CAST(t0.c0 AS BLOB))))) ORDER BY ((vt1.c0)GLOB(t0.c2)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))!=((CAST(t0.c0 AS BLOB))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((vt1.c0)GLOB(t0.c2)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c0))<>((CAST(t0.c0 AS BLOB))))) ORDER BY ((vt1.c0)GLOB(t0.c2)) COLLATE NOCASE DESC;
SELECT * FROM t0, rt0, vt1 NOT INDEXED WHERE (rt0.c6);
SELECT SUM(count) FROM (SELECT ((rt0.c6) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 NOT INDEXED WHERE (rt0.c6);
SELECT SUM(count) FROM (SELECT ((rt0.c6) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 NOT INDEXED WHERE (rt0.c6);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c6 IN (((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c6 IN (((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c6 IN (((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c6 IN (((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c6 IN (((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c2)))));
SELECT * FROM vt1 WHERE (((CASE vt1.c2  WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c2 THEN NULL WHEN vt1.c2 THEN vt1.c1 END)IS(TRIM(0Xffffffffb88f0d69, x'')))) ORDER BY (- (TRIM(DISTINCT vt1.c1, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c2  WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c2 THEN NULL WHEN vt1.c2 THEN vt1.c1 END)IS(TRIM(0Xffffffffb88f0d69, x'')))) IS TRUE)  as count FROM vt1 ORDER BY (- (TRIM(DISTINCT vt1.c1, vt1.c0))));
SELECT * FROM vt1 WHERE (((CASE vt1.c2  WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c2 THEN NULL WHEN vt1.c2 THEN vt1.c1 END)IS(TRIM(0Xffffffffb88f0d69, x'')))) ORDER BY (- (TRIM(DISTINCT vt1.c1, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c2  WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c2 THEN NULL WHEN vt1.c2 THEN vt1.c1 END)IS(TRIM(0Xffffffffb88f0d69, x'')))) IS TRUE)  as count FROM vt1 ORDER BY (- (TRIM(DISTINCT vt1.c1, vt1.c0))));
SELECT * FROM vt1 WHERE (((CASE vt1.c2  WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c2 THEN NULL WHEN vt1.c2 THEN vt1.c1 END)IS(TRIM(0Xffffffffb88f0d69, x'')))) ORDER BY (- (TRIM(DISTINCT vt1.c1, vt1.c0)));
SELECT ALL * FROM t0, vt1 WHERE (((-1223231939) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c3)))) AND (((t0.c1) BETWEEN (t0.c1) AND (vt1.c0))))) ORDER BY (((- (t0.c0)))AND((((((((('~_~H')OR('1980286176')))AND(vt1.c2)))AND(x'')))OR('bY1F')))) DESC, vt1.c2;
SELECT SUM(count) FROM (SELECT ALL ((((-1223231939) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c3)))) AND (((t0.c1) BETWEEN (t0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((- (t0.c0)))AND((((((((('~_~H')OR('1980286176')))AND(vt1.c2)))AND(x'')))OR('bY1F')))) DESC, vt1.c2);
SELECT ALL * FROM t0, vt1 WHERE (((-1223231939) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c3)))) AND (((t0.c1) BETWEEN (t0.c1) AND (vt1.c0))))) ORDER BY (((- (t0.c0)))AND((((((((('~_~H')OR('1980286176')))AND(vt1.c2)))AND(x'')))OR('bY1F')))) DESC, vt1.c2;
SELECT SUM(count) FROM (SELECT ALL ((((-1223231939) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c3)))) AND (((t0.c1) BETWEEN (t0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((- (t0.c0)))AND((((((((('~_~H')OR('1980286176')))AND(vt1.c2)))AND(x'')))OR('bY1F')))) DESC, vt1.c2);
SELECT ALL * FROM t0, vt1 WHERE (((-1223231939) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c3)))) AND (((t0.c1) BETWEEN (t0.c1) AND (vt1.c0))))) ORDER BY (((- (t0.c0)))AND((((((((('~_~H')OR('1980286176')))AND(vt1.c2)))AND(x'')))OR('bY1F')))) DESC, vt1.c2;
SELECT * FROM rt0, t0 WHERE (CAST(LIKELY(DISTINCT rt0.c5) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(DISTINCT rt0.c5) AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST(LIKELY(DISTINCT rt0.c5) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(DISTINCT rt0.c5) AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST(LIKELY(DISTINCT rt0.c5) AS BLOB));
SELECT * FROM t0, rt0, vt1 WHERE (((CAST(t0.c4 AS INTEGER)) IS FALSE)) ORDER BY ((x'') NOT BETWEEN (CASE WHEN vt1.c2 THEN t0.c2 END) AND (CASE rt0.c5  WHEN '' THEN t0.c0 ELSE rt0.c4 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c4 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((x'') NOT BETWEEN (CASE WHEN vt1.c2 THEN t0.c2 END) AND (CASE rt0.c5  WHEN '' THEN t0.c0 ELSE rt0.c4 END)) ASC);
SELECT * FROM t0, rt0, vt1 WHERE (((CAST(t0.c4 AS INTEGER)) IS FALSE)) ORDER BY ((x'') NOT BETWEEN (CASE WHEN vt1.c2 THEN t0.c2 END) AND (CASE rt0.c5  WHEN '' THEN t0.c0 ELSE rt0.c4 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c4 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((x'') NOT BETWEEN (CASE WHEN vt1.c2 THEN t0.c2 END) AND (CASE rt0.c5  WHEN '' THEN t0.c0 ELSE rt0.c4 END)) ASC);
SELECT * FROM t0, rt0, vt1 WHERE (((CAST(t0.c4 AS INTEGER)) IS FALSE)) ORDER BY ((x'') NOT BETWEEN (CASE WHEN vt1.c2 THEN t0.c2 END) AND (CASE rt0.c5  WHEN '' THEN t0.c0 ELSE rt0.c4 END)) ASC;
SELECT ALL * FROM t0 CROSS JOIN vt1 ON (((t0.c3 IN ())) IS FALSE) WHERE (vt1.c2) ORDER BY (NOT (((t0.c0) BETWEEN (t0.c3) AND (vt1.c0)))) DESC  NULLS FIRST, CASE ((t0.c1) ISNULL)  WHEN vt1.c0 THEN t0.c0 ELSE ((((((((t0.c0)AND(t0.c0)))AND(t0.c2)))OR(vt1.c0)))OR(vt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((t0.c3 IN ())) IS FALSE) ORDER BY (NOT (((t0.c0) BETWEEN (t0.c3) AND (vt1.c0)))) DESC  NULLS FIRST, CASE ((t0.c1) ISNULL)  WHEN vt1.c0 THEN t0.c0 ELSE ((((((((t0.c0)AND(t0.c0)))AND(t0.c2)))OR(vt1.c0)))OR(vt1.c0)) END DESC);
SELECT ALL * FROM t0 CROSS JOIN vt1 ON (((t0.c3 IN ())) IS FALSE) WHERE (vt1.c2) ORDER BY (NOT (((t0.c0) BETWEEN (t0.c3) AND (vt1.c0)))) DESC  NULLS FIRST, CASE ((t0.c1) ISNULL)  WHEN vt1.c0 THEN t0.c0 ELSE ((((((((t0.c0)AND(t0.c0)))AND(t0.c2)))OR(vt1.c0)))OR(vt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((t0.c3 IN ())) IS FALSE) ORDER BY (NOT (((t0.c0) BETWEEN (t0.c3) AND (vt1.c0)))) DESC  NULLS FIRST, CASE ((t0.c1) ISNULL)  WHEN vt1.c0 THEN t0.c0 ELSE ((((((((t0.c0)AND(t0.c0)))AND(t0.c2)))OR(vt1.c0)))OR(vt1.c0)) END DESC);
SELECT ALL * FROM t0 CROSS JOIN vt1 ON (((t0.c3 IN ())) IS FALSE) WHERE (vt1.c2) ORDER BY (NOT (((t0.c0) BETWEEN (t0.c3) AND (vt1.c0)))) DESC  NULLS FIRST, CASE ((t0.c1) ISNULL)  WHEN vt1.c0 THEN t0.c0 ELSE ((((((((t0.c0)AND(t0.c0)))AND(t0.c2)))OR(vt1.c0)))OR(vt1.c0)) END DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((0Xfffffffff81f083b)IS(vt1.c2)))>>(CASE WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((0xfffffffff81f083b)IS(vt1.c2)))>>(CASE WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((0Xfffffffff81f083b)IS(vt1.c2)))>>(CASE WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((0xfffffffff81f083b)IS(vt1.c2)))>>(CASE WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((0Xfffffffff81f083b)IS(vt1.c2)))>>(CASE WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c0 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c3) NOT BETWEEN ('1401301851') AND (t0.c0))) NOT BETWEEN (t0.c2) AND (CASE t0.c1  WHEN 0X5bb223d7 THEN t0.c0 END))) ORDER BY (- (((t0.c4)=(t0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c3) NOT BETWEEN ('1401301851') AND (t0.c0))) NOT BETWEEN (t0.c2) AND (CASE t0.c1  WHEN 0X5bb223d7 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c4)=(t0.c3)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c3) NOT BETWEEN ('1401301851') AND (t0.c0))) NOT BETWEEN (t0.c2) AND (CASE t0.c1  WHEN 0X5bb223d7 THEN t0.c0 END))) ORDER BY (- (((t0.c4)=(t0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c3) NOT BETWEEN ('1401301851') AND (t0.c0))) NOT BETWEEN (t0.c2) AND (CASE t0.c1  WHEN 0X5bb223d7 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c4)=(t0.c3)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c3) NOT BETWEEN ('1401301851') AND (t0.c0))) NOT BETWEEN (t0.c2) AND (CASE t0.c1  WHEN 0X5bb223d7 THEN t0.c0 END))) ORDER BY (- (((t0.c4)=(t0.c3)))) DESC;
SELECT * FROM rt0 WHERE ((~ (0.28633906512842444))) ORDER BY 1.521192774E9, rt0.c4 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (0.28633906512842444))) IS TRUE)  as count FROM rt0 ORDER BY 1.521192774E9, rt0.c4 ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((~ (0.28633906512842444))) ORDER BY 1.521192774E9, rt0.c4 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (0.28633906512842444))) IS TRUE)  as count FROM rt0 ORDER BY 1.521192774E9, rt0.c4 ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((~ (0.28633906512842444))) ORDER BY 1.521192774E9, rt0.c4 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (LENGTH(((rt0.c2)=(rt0.c5))));
SELECT SUM(count) FROM (SELECT ((LENGTH(((rt0.c2)=(rt0.c5)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LENGTH(((rt0.c2)=(rt0.c5))));
SELECT SUM(count) FROM (SELECT ((LENGTH(((rt0.c2)=(rt0.c5)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LENGTH(((rt0.c2)=(rt0.c5))));
SELECT COUNT(*) FROM t0, vt1 WHERE (ABS(((vt1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((ABS(((vt1.c0) IS TRUE))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (ABS(((vt1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((ABS(((vt1.c0) IS TRUE))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (ABS(((vt1.c0) IS TRUE)));
SELECT * FROM t0, vt1 WHERE (CASE ((vt1.c0)==(vt1.c2))  WHEN ((t0.c1)IS(t0.c3)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END) ORDER BY 0.015271172914606557, ((((vt1.c2)OR(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM DESC, (((('-1997835283')OR(vt1.c1)))AND(CASE vt1.c2  WHEN vt1.c1 THEN vt1.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)==(vt1.c2))  WHEN ((t0.c1)IS(t0.c3)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END) IS TRUE)  as count FROM t0 NOT INDEXED, vt1 ORDER BY 0.015271172914606557, ((((vt1.c2)OR(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM DESC, (((('-1997835283')OR(vt1.c1)))AND(CASE vt1.c2  WHEN vt1.c1 THEN vt1.c1 END)) ASC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (CASE ((vt1.c0)==(vt1.c2))  WHEN ((t0.c1)IS(t0.c3)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END) ORDER BY 0.015271172914606557, ((((vt1.c2)OR(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM DESC, (((('-1997835283')OR(vt1.c1)))AND(CASE vt1.c2  WHEN vt1.c1 THEN vt1.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)==(vt1.c2))  WHEN ((t0.c1)IS(t0.c3)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END) IS TRUE)  as count FROM t0 NOT INDEXED, vt1 ORDER BY 0.015271172914606557, ((((vt1.c2)OR(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM DESC, (((('-1997835283')OR(vt1.c1)))AND(CASE vt1.c2  WHEN vt1.c1 THEN vt1.c1 END)) ASC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (CASE ((vt1.c0)==(vt1.c2))  WHEN ((t0.c1)IS(t0.c3)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END) ORDER BY 0.015271172914606557, ((((vt1.c2)OR(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM DESC, (((('-1997835283')OR(vt1.c1)))AND(CASE vt1.c2  WHEN vt1.c1 THEN vt1.c1 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((CASE WHEN t0.c2 THEN t0.c0 ELSE vt1.c2 END) NOTNULL) LEFT OUTER JOIN t0 ON (((((('o?')!=(rt0.c2)))AND((rt0.c0 IN ()))))OR(CAST(t0.c4 AS INTEGER))) WHERE (((CASE WHEN vt1.c2 THEN rt0.c1 END)!=(((t0.c3)>(vt1.c2))))) ORDER BY ((((t0.c4)<=(NULL)))>(((vt1.c0) NOT BETWEEN (rt0.c5) AND (']{'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c2 THEN rt0.c1 END)!=(((t0.c3)>(vt1.c2))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((CASE WHEN t0.c2 THEN t0.c0 ELSE vt1.c2 END) NOTNULL) LEFT OUTER JOIN t0 ON (((((('o?')<>(rt0.c2)))AND((rt0.c0 IN ()))))OR(CAST(t0.c4 AS INTEGER))) ORDER BY ((((t0.c4)<=(NULL)))>(((vt1.c0) NOT BETWEEN (rt0.c5) AND (']{'))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((CASE WHEN t0.c2 THEN t0.c0 ELSE vt1.c2 END) NOTNULL) LEFT OUTER JOIN t0 ON (((((('o?')!=(rt0.c2)))AND((rt0.c0 IN ()))))OR(CAST(t0.c4 AS INTEGER))) WHERE (((CASE WHEN vt1.c2 THEN rt0.c1 END)!=(((t0.c3)>(vt1.c2))))) ORDER BY ((((t0.c4)<=(NULL)))>(((vt1.c0) NOT BETWEEN (rt0.c5) AND (']{'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c2 THEN rt0.c1 END)!=(((t0.c3)>(vt1.c2))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((CASE WHEN t0.c2 THEN t0.c0 ELSE vt1.c2 END) NOTNULL) LEFT OUTER JOIN t0 ON (((((('o?')<>(rt0.c2)))AND((rt0.c0 IN ()))))OR(CAST(t0.c4 AS INTEGER))) ORDER BY ((((t0.c4)<=(NULL)))>(((vt1.c0) NOT BETWEEN (rt0.c5) AND (']{'))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((CASE WHEN t0.c2 THEN t0.c0 ELSE vt1.c2 END) NOTNULL) LEFT OUTER JOIN t0 ON (((((('o?')!=(rt0.c2)))AND((rt0.c0 IN ()))))OR(CAST(t0.c4 AS INTEGER))) WHERE (((CASE WHEN vt1.c2 THEN rt0.c1 END)!=(((t0.c3)>(vt1.c2))))) ORDER BY ((((t0.c4)<=(NULL)))>(((vt1.c0) NOT BETWEEN (rt0.c5) AND (']{'))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((((vt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c6))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c6))) AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((((vt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c6))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c6))) AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((((vt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c6))) AS REAL));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((NULL)) BETWEEN ((rt0.c6 COLLATE RTRIM)) AND ((((rt0.c6) BETWEEN (vt1.c1) AND (rt0.c5))))));
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((rt0.c6 COLLATE RTRIM)) AND ((((rt0.c6) BETWEEN (vt1.c1) AND (rt0.c5)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((NULL)) BETWEEN ((rt0.c6 COLLATE RTRIM)) AND ((((rt0.c6) BETWEEN (vt1.c1) AND (rt0.c5))))));
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((rt0.c6 COLLATE RTRIM)) AND ((((rt0.c6) BETWEEN (vt1.c1) AND (rt0.c5)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((NULL)) BETWEEN ((rt0.c6 COLLATE RTRIM)) AND ((((rt0.c6) BETWEEN (vt1.c1) AND (rt0.c5))))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON ((rt0.c0 COLLATE RTRIM) IS FALSE) INNER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (vt1.c1) AND (CASE WHEN t0.c1 THEN rt0.c4 ELSE t0.c3 END)) WHERE (((((t0.c0)LIKE(vt1.c0)))=(t0.c2))) ORDER BY ((rt0.c1)<=(rt0.c6)) COLLATE RTRIM COLLATE RTRIM, ((t0.c1 COLLATE NOCASE)AND((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)LIKE(vt1.c0)))=(t0.c2))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((rt0.c0 COLLATE RTRIM) IS FALSE) INNER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (vt1.c1) AND (CASE WHEN t0.c1 THEN rt0.c4 ELSE t0.c3 END)) ORDER BY ((rt0.c1)<=(rt0.c6)) COLLATE RTRIM COLLATE RTRIM, ((t0.c1 COLLATE NOCASE)AND((rt0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON ((rt0.c0 COLLATE RTRIM) IS FALSE) INNER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (vt1.c1) AND (CASE WHEN t0.c1 THEN rt0.c4 ELSE t0.c3 END)) WHERE (((((t0.c0)LIKE(vt1.c0)))=(t0.c2))) ORDER BY ((rt0.c1)<=(rt0.c6)) COLLATE RTRIM COLLATE RTRIM, ((t0.c1 COLLATE NOCASE)AND((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)LIKE(vt1.c0)))=(t0.c2))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((rt0.c0 COLLATE RTRIM) IS FALSE) INNER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (vt1.c1) AND (CASE WHEN t0.c1 THEN rt0.c4 ELSE t0.c3 END)) ORDER BY ((rt0.c1)<=(rt0.c6)) COLLATE RTRIM COLLATE RTRIM, ((t0.c1 COLLATE NOCASE)AND((rt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON LIKELY(DISTINCT ((rt0.c5) NOT NULL)) WHERE (0.07961564014507072) ORDER BY (- (t0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((0.07961564014507072) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON LIKELY(DISTINCT ((rt0.c5) NOT NULL)) ORDER BY (- (t0.c2)) DESC);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON LIKELY(DISTINCT ((rt0.c5) NOT NULL)) WHERE (0.07961564014507072) ORDER BY (- (t0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((0.07961564014507072) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON LIKELY(DISTINCT ((rt0.c5) NOT NULL)) ORDER BY (- (t0.c2)) DESC);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON LIKELY(DISTINCT ((rt0.c5) NOT NULL)) WHERE (0.07961564014507072) ORDER BY (- (t0.c2)) DESC;
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((rt0.c5, rt0.c6, rt0.c1))<=((rt0.c4, t0.c1, rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5, rt0.c6, rt0.c1))<=((rt0.c4, t0.c1, rt0.c1))) IN ())) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((rt0.c5, rt0.c6, rt0.c1))<=((rt0.c4, t0.c1, rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5, rt0.c6, rt0.c1))<=((rt0.c4, t0.c1, rt0.c1))) IN ())) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((rt0.c5, rt0.c6, rt0.c1))<=((rt0.c4, t0.c1, rt0.c1))) IN ()));
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((((((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))AND(CASE 0.49789487745631766  WHEN -1925055855 THEN t0.c1 WHEN rt0.c5 THEN '-1925055855' WHEN rt0.c0 THEN vt1.c1 END)))OR(((vt1.c0) BETWEEN (t0.c2) AND (rt0.c5)))))AND((1.055945626E9 IN ()))))OR((vt1.c1 IN (vt1.c1))))) ORDER BY (((t0.c3)<<(t0.c4)) IN ((~ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))AND(CASE 0.49789487745631766  WHEN -1925055855 THEN t0.c1 WHEN rt0.c5 THEN '-1925055855' WHEN rt0.c0 THEN vt1.c1 END)))OR(((vt1.c0) BETWEEN (t0.c2) AND (rt0.c5)))))AND((1.055945626E9 IN ()))))OR((vt1.c1 IN (vt1.c1))))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY (((t0.c3)<<(t0.c4)) IN ((~ (rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((((((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))AND(CASE 0.49789487745631766  WHEN -1925055855 THEN t0.c1 WHEN rt0.c5 THEN '-1925055855' WHEN rt0.c0 THEN vt1.c1 END)))OR(((vt1.c0) BETWEEN (t0.c2) AND (rt0.c5)))))AND((1.055945626E9 IN ()))))OR((vt1.c1 IN (vt1.c1))))) ORDER BY (((t0.c3)<<(t0.c4)) IN ((~ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))AND(CASE 0.49789487745631766  WHEN -1925055855 THEN t0.c1 WHEN rt0.c5 THEN '-1925055855' WHEN rt0.c0 THEN vt1.c1 END)))OR(((vt1.c0) BETWEEN (t0.c2) AND (rt0.c5)))))AND((1.055945626E9 IN ()))))OR((vt1.c1 IN (vt1.c1))))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY (((t0.c3)<<(t0.c4)) IN ((~ (rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((((((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))AND(CASE 0.49789487745631766  WHEN -1925055855 THEN t0.c1 WHEN rt0.c5 THEN '-1925055855' WHEN rt0.c0 THEN vt1.c1 END)))OR(((vt1.c0) BETWEEN (t0.c2) AND (rt0.c5)))))AND((1.055945626E9 IN ()))))OR((vt1.c1 IN (vt1.c1))))) ORDER BY (((t0.c3)<<(t0.c4)) IN ((~ (rt0.c2)))) DESC;
SELECT * FROM vt1, t0, rt0 WHERE (CASE ((0.30291681508122115) ISNULL)  WHEN t0.c1 COLLATE BINARY THEN CASE t0.c3  WHEN t0.c3 THEN t0.c4 WHEN NULL THEN t0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END ELSE CASE WHEN rt0.c4 THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((0.30291681508122115) ISNULL)  WHEN t0.c1 COLLATE BINARY THEN CASE t0.c3  WHEN t0.c3 THEN t0.c4 WHEN NULL THEN t0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END ELSE CASE WHEN rt0.c4 THEN t0.c0 END END) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE (CASE ((0.30291681508122115) ISNULL)  WHEN t0.c1 COLLATE BINARY THEN CASE t0.c3  WHEN t0.c3 THEN t0.c4 WHEN NULL THEN t0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END ELSE CASE WHEN rt0.c4 THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((0.30291681508122115) ISNULL)  WHEN t0.c1 COLLATE BINARY THEN CASE t0.c3  WHEN t0.c3 THEN t0.c4 WHEN NULL THEN t0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END ELSE CASE WHEN rt0.c4 THEN t0.c0 END END) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE (CASE ((0.30291681508122115) ISNULL)  WHEN t0.c1 COLLATE BINARY THEN CASE t0.c3  WHEN t0.c3 THEN t0.c4 WHEN NULL THEN t0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END ELSE CASE WHEN rt0.c4 THEN t0.c0 END END);
SELECT ALL * FROM t0 WHERE ((((((t0.c1)) NOT BETWEEN ((t0.c4)) AND ((t0.c3)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((t0.c1)) NOT BETWEEN ((t0.c4)) AND ((t0.c3)))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c1)) NOT BETWEEN ((t0.c4)) AND ((t0.c3)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((t0.c1)) NOT BETWEEN ((t0.c4)) AND ((t0.c3)))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c1)) NOT BETWEEN ((t0.c4)) AND ((t0.c3)))) IS TRUE));
SELECT ALL * FROM vt1, rt0 INNER JOIN t0 ON 0x2bf37c46 WHERE (rt0.c6);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c6) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t0 ON 0X2bf37c46);
SELECT ALL * FROM vt1, rt0 INNER JOIN t0 ON 0x2bf37c46 WHERE (rt0.c6);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c6) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t0 ON 0X2bf37c46);
SELECT ALL * FROM vt1, rt0 INNER JOIN t0 ON 0x2bf37c46 WHERE (rt0.c6);
SELECT * FROM t0, vt1, rt0 WHERE (((((CAST(t0.c1 AS TEXT))OR(((((((((rt0.c5)AND(rt0.c3)))AND(vt1.c1)))OR(t0.c1)))OR(vt1.c0)))))OR(json(0.47409296355535313)))) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c0 END)>(((rt0.c2)GLOB(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c1 AS TEXT))OR(((((((((rt0.c5)AND(rt0.c3)))AND(vt1.c1)))OR(t0.c1)))OR(vt1.c0)))))OR(json(0.47409296355535313)))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c0 END)>(((rt0.c2)GLOB(vt1.c1)))) ASC  NULLS FIRST);
SELECT * FROM t0, vt1, rt0 WHERE (((((CAST(t0.c1 AS TEXT))OR(((((((((rt0.c5)AND(rt0.c3)))AND(vt1.c1)))OR(t0.c1)))OR(vt1.c0)))))OR(json(0.47409296355535313)))) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c0 END)>(((rt0.c2)GLOB(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c1 AS TEXT))OR(((((((((rt0.c5)AND(rt0.c3)))AND(vt1.c1)))OR(t0.c1)))OR(vt1.c0)))))OR(json(0.47409296355535313)))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c0 END)>(((rt0.c2)GLOB(vt1.c1)))) ASC  NULLS FIRST);
SELECT * FROM t0, vt1, rt0 WHERE (((((CAST(t0.c1 AS TEXT))OR(((((((((rt0.c5)AND(rt0.c3)))AND(vt1.c1)))OR(t0.c1)))OR(vt1.c0)))))OR(json(0.47409296355535313)))) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c0 END)>(((rt0.c2)GLOB(vt1.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CASE WHEN t0.c2 THEN t0.c2 END) NOT BETWEEN ((~ (vt1.c2))) AND (((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c2 THEN t0.c2 END) NOT BETWEEN ((~ (vt1.c2))) AND (((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CASE WHEN t0.c2 THEN t0.c2 END) NOT BETWEEN ((~ (vt1.c2))) AND (((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c2 THEN t0.c2 END) NOT BETWEEN ((~ (vt1.c2))) AND (((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CASE WHEN t0.c2 THEN t0.c2 END) NOT BETWEEN ((~ (vt1.c2))) AND (((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c0)))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((t0.c4)|(t0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c4)|(t0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((t0.c4)|(t0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c4)|(t0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((t0.c4)|(t0.c3)) COLLATE BINARY);
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON (GLOB(t0.c3, rt0.c2) IN ()) RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c6 AS TEXT) THEN ((((t0.c4)OR(rt0.c3)))OR(vt1.c1)) WHEN ((rt0.c5)OR(rt0.c1)) THEN ((t0.c0)IS(-1261335501)) WHEN ((((((((((((-1220164111)OR(rt0.c4)))AND(rt0.c1)))AND(t0.c3)))OR(t0.c1)))OR(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c6)>(vt1.c2)) ELSE (NOT (t0.c4)) END WHERE (((((rt0.c1) NOTNULL))GLOB(((rt0.c0) BETWEEN (t0.c4) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL))GLOB(((rt0.c0) BETWEEN (t0.c4) AND (rt0.c3))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (GLOB(t0.c3, rt0.c2) IN ()) RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c6 AS TEXT) THEN ((((t0.c4)OR(rt0.c3)))OR(vt1.c1)) WHEN ((rt0.c5)OR(rt0.c1)) THEN ((t0.c0)IS(-1261335501)) WHEN ((((((((((((-1220164111)OR(rt0.c4)))AND(rt0.c1)))AND(t0.c3)))OR(t0.c1)))OR(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c6)>(vt1.c2)) ELSE (NOT (t0.c4)) END);
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON (GLOB(t0.c3, rt0.c2) IN ()) RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c6 AS TEXT) THEN ((((t0.c4)OR(rt0.c3)))OR(vt1.c1)) WHEN ((rt0.c5)OR(rt0.c1)) THEN ((t0.c0)IS(-1261335501)) WHEN ((((((((((((-1220164111)OR(rt0.c4)))AND(rt0.c1)))AND(t0.c3)))OR(t0.c1)))OR(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c6)>(vt1.c2)) ELSE (NOT (t0.c4)) END WHERE (((((rt0.c1) NOTNULL))GLOB(((rt0.c0) BETWEEN (t0.c4) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL))GLOB(((rt0.c0) BETWEEN (t0.c4) AND (rt0.c3))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (GLOB(t0.c3, rt0.c2) IN ()) RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c6 AS TEXT) THEN ((((t0.c4)OR(rt0.c3)))OR(vt1.c1)) WHEN ((rt0.c5)OR(rt0.c1)) THEN ((t0.c0)IS(-1261335501)) WHEN ((((((((((((-1220164111)OR(rt0.c4)))AND(rt0.c1)))AND(t0.c3)))OR(t0.c1)))OR(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c6)>(vt1.c2)) ELSE (NOT (t0.c4)) END);
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON (GLOB(t0.c3, rt0.c2) IN ()) RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c6 AS TEXT) THEN ((((t0.c4)OR(rt0.c3)))OR(vt1.c1)) WHEN ((rt0.c5)OR(rt0.c1)) THEN ((t0.c0)IS(-1261335501)) WHEN ((((((((((((-1220164111)OR(rt0.c4)))AND(rt0.c1)))AND(t0.c3)))OR(t0.c1)))OR(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c6)>(vt1.c2)) ELSE (NOT (t0.c4)) END WHERE (((((rt0.c1) NOTNULL))GLOB(((rt0.c0) BETWEEN (t0.c4) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((CAST(vt1.c2 AS NUMERIC))OR(((((t0.c4)OR(vt1.c0)))OR(t0.c1)))))AND(((vt1.c1) ISNULL)))) ORDER BY (+ (((vt1.c1)>=(t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c2 AS NUMERIC))OR(((((t0.c4)OR(vt1.c0)))OR(t0.c1)))))AND(((vt1.c1) ISNULL)))) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ (((vt1.c1)>=(t0.c2)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((CAST(vt1.c2 AS NUMERIC))OR(((((t0.c4)OR(vt1.c0)))OR(t0.c1)))))AND(((vt1.c1) ISNULL)))) ORDER BY (+ (((vt1.c1)>=(t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c2 AS NUMERIC))OR(((((t0.c4)OR(vt1.c0)))OR(t0.c1)))))AND(((vt1.c1) ISNULL)))) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ (((vt1.c1)>=(t0.c2)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((CAST(vt1.c2 AS NUMERIC))OR(((((t0.c4)OR(vt1.c0)))OR(t0.c1)))))AND(((vt1.c1) ISNULL)))) ORDER BY (+ (((vt1.c1)>=(t0.c2)))) ASC;
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN rt0 ON rt0.c4 WHERE ('636503783');
SELECT SUM(count) FROM (SELECT ALL (('636503783') IS TRUE)  as count FROM vt1, t0 INNER JOIN rt0 ON rt0.c4);
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN rt0 ON rt0.c4 WHERE ('636503783');
SELECT SUM(count) FROM (SELECT ALL (('636503783') IS TRUE)  as count FROM vt1, t0 INNER JOIN rt0 ON rt0.c4);
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN rt0 ON rt0.c4 WHERE ('636503783');
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1)<<(((t0.c0)+(t0.c0))))) ORDER BY ((((+ (t0.c3))))==((COALESCE(DISTINCT t0.c0, t0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)<<(((t0.c0)+(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((+ (t0.c3))))=((COALESCE(DISTINCT t0.c0, t0.c3)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1)<<(((t0.c0)+(t0.c0))))) ORDER BY ((((+ (t0.c3))))==((COALESCE(DISTINCT t0.c0, t0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)<<(((t0.c0)+(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((+ (t0.c3))))=((COALESCE(DISTINCT t0.c0, t0.c3)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1)<<(((t0.c0)+(t0.c0))))) ORDER BY ((((+ (t0.c3))))==((COALESCE(DISTINCT t0.c0, t0.c3))));
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (CAST(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c2 ELSE 'v(,)1.Mj' END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c2 ELSE 'v(,)1.Mj' END AS BLOB)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (CAST(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c2 ELSE 'v(,)1.Mj' END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c2 ELSE 'v(,)1.Mj' END AS BLOB)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (CAST(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c2 ELSE 'v(,)1.Mj' END AS BLOB));
SELECT ALL * FROM t0, vt1 WHERE (((((((((CAST(t0.c1 AS BLOB))OR('')))OR(((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))))OR(t0.c1 COLLATE RTRIM)))AND((((t0.c0, t0.c1, vt1.c1, vt1.c1, t0.c4))>=((t0.c1, t0.c1, NULL, t0.c4, t0.c2)))))) ORDER BY CASE WHEN ((t0.c3) BETWEEN (x'') AND (vt1.c2)) THEN vt1.c2 COLLATE BINARY END, (((t0.c0)>(vt1.c2)) IN (((vt1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t0.c1 AS BLOB))OR('')))OR(((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))))OR(t0.c1 COLLATE RTRIM)))AND((((t0.c0, t0.c1, vt1.c1, vt1.c1, t0.c4))>=((t0.c1, t0.c1, NULL, t0.c4, t0.c2)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN ((t0.c3) BETWEEN (x'') AND (vt1.c2)) THEN vt1.c2 COLLATE BINARY END, (((t0.c0)>(vt1.c2)) IN (((vt1.c0) NOT NULL))) ASC);
SELECT ALL * FROM t0, vt1 WHERE (((((((((CAST(t0.c1 AS BLOB))OR('')))OR(((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))))OR(t0.c1 COLLATE RTRIM)))AND((((t0.c0, t0.c1, vt1.c1, vt1.c1, t0.c4))>=((t0.c1, t0.c1, NULL, t0.c4, t0.c2)))))) ORDER BY CASE WHEN ((t0.c3) BETWEEN (x'') AND (vt1.c2)) THEN vt1.c2 COLLATE BINARY END, (((t0.c0)>(vt1.c2)) IN (((vt1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t0.c1 AS BLOB))OR('')))OR(((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))))OR(t0.c1 COLLATE RTRIM)))AND((((t0.c0, t0.c1, vt1.c1, vt1.c1, t0.c4))>=((t0.c1, t0.c1, NULL, t0.c4, t0.c2)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN ((t0.c3) BETWEEN (x'') AND (vt1.c2)) THEN vt1.c2 COLLATE BINARY END, (((t0.c0)>(vt1.c2)) IN (((vt1.c0) NOT NULL))) ASC);
SELECT ALL * FROM t0, vt1 WHERE (((((((((CAST(t0.c1 AS BLOB))OR('')))OR(((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))))OR(t0.c1 COLLATE RTRIM)))AND((((t0.c0, t0.c1, vt1.c1, vt1.c1, t0.c4))>=((t0.c1, t0.c1, NULL, t0.c4, t0.c2)))))) ORDER BY CASE WHEN ((t0.c3) BETWEEN (x'') AND (vt1.c2)) THEN vt1.c2 COLLATE BINARY END, (((t0.c0)>(vt1.c2)) IN (((vt1.c0) NOT NULL))) ASC;
SELECT ALL * FROM t0 WHERE (((((t0.c3)IS(t0.c0))) IS TRUE)) ORDER BY ((t0.c4)*((t0.c4 IN ()))), ((489388015) NOTNULL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c3)IS(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c4)*((t0.c4 IN ()))), ((489388015) NOTNULL) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c3)IS(t0.c0))) IS TRUE)) ORDER BY ((t0.c4)*((t0.c4 IN ()))), ((489388015) NOTNULL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c3)IS(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c4)*((t0.c4 IN ()))), ((489388015) NOTNULL) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c3)IS(t0.c0))) IS TRUE)) ORDER BY ((t0.c4)*((t0.c4 IN ()))), ((489388015) NOTNULL) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (0x2bf37c46);
SELECT SUM(count) FROM (SELECT ((0X2bf37c46) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0x2bf37c46);
SELECT SUM(count) FROM (SELECT ((0X2bf37c46) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0x2bf37c46);
SELECT * FROM vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((vt1.c0)>>(vt1.c2)) THEN ((((vt1.c1)AND(-1.261335501E9)))OR(vt1.c2)) WHEN CASE WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c1 END THEN (vt1.c1 IN ()) ELSE ((vt1.c1) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((vt1.c0)>>(vt1.c2)) THEN ((((vt1.c1)AND(-1.261335501E9)))OR(vt1.c2)) WHEN CASE WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c1 END THEN (vt1.c1 IN ()) ELSE ((vt1.c1) ISNULL) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((vt1.c0)>>(vt1.c2)) THEN ((((vt1.c1)AND(-1.261335501E9)))OR(vt1.c2)) WHEN CASE WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c1 END THEN (vt1.c1 IN ()) ELSE ((vt1.c1) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((vt1.c0)>>(vt1.c2)) THEN ((((vt1.c1)AND(-1.261335501E9)))OR(vt1.c2)) WHEN CASE WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c1 END THEN (vt1.c1 IN ()) ELSE ((vt1.c1) ISNULL) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((vt1.c0)>>(vt1.c2)) THEN ((((vt1.c1)AND(-1.261335501E9)))OR(vt1.c2)) WHEN CASE WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c1 END THEN (vt1.c1 IN ()) ELSE ((vt1.c1) ISNULL) END);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c2 AS NUMERIC))AND((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c2 AS NUMERIC))AND((~ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c2 AS NUMERIC))AND((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c2 AS NUMERIC))AND((~ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c2 AS NUMERIC))AND((~ (vt1.c0)))));
SELECT ALL * FROM rt0 WHERE (((((-1879383095) IS TRUE))<>(((rt0.c3) NOT BETWEEN ('-662429772') AND (rt0.c4))))) ORDER BY ((('0.34622680236420555')) NOT BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((rt0.c5)+(rt0.c5)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((-1879383095) IS TRUE))<>(((rt0.c3) NOT BETWEEN ('-662429772') AND (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((('0.34622680236420555')) NOT BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((rt0.c5)+(rt0.c5)))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((-1879383095) IS TRUE))<>(((rt0.c3) NOT BETWEEN ('-662429772') AND (rt0.c4))))) ORDER BY ((('0.34622680236420555')) NOT BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((rt0.c5)+(rt0.c5)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((-1879383095) IS TRUE))<>(((rt0.c3) NOT BETWEEN ('-662429772') AND (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((('0.34622680236420555')) NOT BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((rt0.c5)+(rt0.c5)))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((-1879383095) IS TRUE))<>(((rt0.c3) NOT BETWEEN ('-662429772') AND (rt0.c4))))) ORDER BY ((('0.34622680236420555')) NOT BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((rt0.c5)+(rt0.c5)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c1)IS NOT(rt0.c3)), ((rt0.c4)AND(rt0.c5)), rt0.c5))<=((((vt1.c0)>=(rt0.c3)), 0.7643243516143803, ((vt1.c1)-(rt0.c5))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)IS NOT(rt0.c3)), ((rt0.c4)AND(rt0.c5)), rt0.c5))<=((((vt1.c0)>=(rt0.c3)), 0.7643243516143803, ((vt1.c1)-(rt0.c5)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c1)IS NOT(rt0.c3)), ((rt0.c4)AND(rt0.c5)), rt0.c5))<=((((vt1.c0)>=(rt0.c3)), 0.7643243516143803, ((vt1.c1)-(rt0.c5))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)IS NOT(rt0.c3)), ((rt0.c4)AND(rt0.c5)), rt0.c5))<=((((vt1.c0)>=(rt0.c3)), 0.7643243516143803, ((vt1.c1)-(rt0.c5)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c1)IS NOT(rt0.c3)), ((rt0.c4)AND(rt0.c5)), rt0.c5))<=((((vt1.c0)>=(rt0.c3)), 0.7643243516143803, ((vt1.c1)-(rt0.c5))))));
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN rt0 ON t0.c4 WHERE (((rt0.c2)IS NOT((- (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS NOT((- (vt1.c2))))) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN rt0 ON t0.c4);
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN rt0 ON t0.c4 WHERE (((rt0.c2)IS NOT((- (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS NOT((- (vt1.c2))))) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN rt0 ON t0.c4);
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN rt0 ON t0.c4 WHERE (((rt0.c2)IS NOT((- (vt1.c2)))));
SELECT * FROM t0 WHERE (((CAST(t0.c4 AS BLOB))>>(t0.c0 COLLATE RTRIM))) ORDER BY (((((~ (t0.c1)))OR(t0.c2 COLLATE NOCASE)))AND((((t0.c2)) BETWEEN ((t0.c4)) AND ((1723639365))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c4 AS BLOB))>>(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY (((((~ (t0.c1)))OR(t0.c2 COLLATE NOCASE)))AND((((t0.c2)) BETWEEN ((t0.c4)) AND ((1723639365))))) DESC);
SELECT * FROM t0 WHERE (((CAST(t0.c4 AS BLOB))>>(t0.c0 COLLATE RTRIM))) ORDER BY (((((~ (t0.c1)))OR(t0.c2 COLLATE NOCASE)))AND((((t0.c2)) BETWEEN ((t0.c4)) AND ((1723639365))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c4 AS BLOB))>>(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY (((((~ (t0.c1)))OR(t0.c2 COLLATE NOCASE)))AND((((t0.c2)) BETWEEN ((t0.c4)) AND ((1723639365))))) DESC);
SELECT * FROM t0 WHERE (((CAST(t0.c4 AS BLOB))>>(t0.c0 COLLATE RTRIM))) ORDER BY (((((~ (t0.c1)))OR(t0.c2 COLLATE NOCASE)))AND((((t0.c2)) BETWEEN ((t0.c4)) AND ((1723639365))))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((ABS(rt0.c6))<=(0.49789487745631766)));
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c6))<=(0.49789487745631766))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((ABS(rt0.c6))<=(0.49789487745631766)));
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c6))<=(0.49789487745631766))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((ABS(rt0.c6))<=(0.49789487745631766)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((t0.c3, rt0.c2, t0.c0)) BETWEEN ((t0.c1, CAST(t0.c0 AS BLOB), ((696430470)AND(t0.c0)))) AND ((rt0.c3 COLLATE BINARY, CASE rt0.c3  WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c6 END, rt0.c2 COLLATE NOCASE))) WHERE (((x'694a')<=(((rt0.c2)+(x'')))));
SELECT SUM(count) FROM (SELECT ((((x'694a')<=(((rt0.c2)+(x''))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((t0.c3, rt0.c2, t0.c0)) BETWEEN ((t0.c1, CAST(t0.c0 AS BLOB), ((696430470)AND(t0.c0)))) AND ((rt0.c3 COLLATE BINARY, CASE rt0.c3  WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c6 END, rt0.c2 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((t0.c3, rt0.c2, t0.c0)) BETWEEN ((t0.c1, CAST(t0.c0 AS BLOB), ((696430470)AND(t0.c0)))) AND ((rt0.c3 COLLATE BINARY, CASE rt0.c3  WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c6 END, rt0.c2 COLLATE NOCASE))) WHERE (((x'694a')<=(((rt0.c2)+(x'')))));
SELECT SUM(count) FROM (SELECT ((((x'694a')<=(((rt0.c2)+(x''))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((t0.c3, rt0.c2, t0.c0)) BETWEEN ((t0.c1, CAST(t0.c0 AS BLOB), ((696430470)AND(t0.c0)))) AND ((rt0.c3 COLLATE BINARY, CASE rt0.c3  WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c6 END, rt0.c2 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((t0.c3, rt0.c2, t0.c0)) BETWEEN ((t0.c1, CAST(t0.c0 AS BLOB), ((696430470)AND(t0.c0)))) AND ((rt0.c3 COLLATE BINARY, CASE rt0.c3  WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c6 END, rt0.c2 COLLATE NOCASE))) WHERE (((x'694a')<=(((rt0.c2)+(x'')))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN ()))OR(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c2))))) ORDER BY (- ((vt1.c0 IN ()))) ASC, (((vt1.c1))==((vt1.c1))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))OR(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY (- ((vt1.c0 IN ()))) ASC, (((vt1.c1))==((vt1.c1))) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN ()))OR(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c2))))) ORDER BY (- ((vt1.c0 IN ()))) ASC, (((vt1.c1))==((vt1.c1))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))OR(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY (- ((vt1.c0 IN ()))) ASC, (((vt1.c1))==((vt1.c1))) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN ()))OR(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c2))))) ORDER BY (- ((vt1.c0 IN ()))) ASC, (((vt1.c1))==((vt1.c1))) COLLATE RTRIM DESC;
SELECT ALL * FROM vt1 WHERE (vt1.c2) ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE);
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE));
SELECT ALL * FROM vt1 WHERE (vt1.c2) ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE);
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE));
SELECT ALL * FROM vt1 WHERE (vt1.c2) ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE);
SELECT * FROM t0, rt0 WHERE (((((((rt0.c5)&(t0.c3)))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c4)))))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)&(t0.c3)))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c4)))))OR(x''))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((((rt0.c5)&(t0.c3)))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c4)))))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)&(t0.c3)))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c4)))))OR(x''))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((((rt0.c5)&(t0.c3)))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c4)))))OR(x'')));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c5)) AS INTEGER)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))IS(rt0.c6));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (rt0.c5)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))IS(rt0.c6)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c5)) AS INTEGER)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))IS(rt0.c6));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (rt0.c5)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))IS(rt0.c6)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c5)) AS INTEGER)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))IS(rt0.c6));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((rt0.c6 IN (rt0.c6, rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c6 IN (rt0.c6, rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((rt0.c6 IN (rt0.c6, rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c6 IN (rt0.c6, rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((rt0.c6 IN (rt0.c6, rt0.c0)) IN ()));
SELECT COUNT(*) FROM vt1, t0 WHERE (TYPEOF(CAST(vt1.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(vt1.c2 AS REAL))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (TYPEOF(CAST(vt1.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(vt1.c2 AS REAL))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (TYPEOF(CAST(vt1.c2 AS REAL)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c4);
SELECT * FROM rt0, t0 WHERE (CASE ((((((((rt0.c5)AND(rt0.c1)))AND(t0.c3)))AND(rt0.c5)))AND(rt0.c0))  WHEN ((rt0.c3) IS FALSE) THEN (((t0.c2, rt0.c3, t0.c2)) BETWEEN ((t0.c1, t0.c4, t0.c3)) AND ((x'', rt0.c6, t0.c4))) WHEN ((t0.c4)&(rt0.c6)) THEN CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 WHEN t0.c1 THEN '늢Z#' WHEN rt0.c1 THEN rt0.c1 ELSE t0.c1 END WHEN (((t0.c1))=((rt0.c3))) THEN ((t0.c4) BETWEEN (t0.c2) AND (t0.c0)) WHEN ((rt0.c1) BETWEEN (t0.c4) AND (t0.c3)) THEN ((t0.c4) BETWEEN (rt0.c4) AND (rt0.c0)) WHEN t0.c1 COLLATE NOCASE THEN ((rt0.c1) NOTNULL) ELSE CASE t0.c2  WHEN rt0.c5 THEN t0.c1 ELSE rt0.c0 END END) ORDER BY (TYPEOF(rt0.c3) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c5)AND(rt0.c1)))AND(t0.c3)))AND(rt0.c5)))AND(rt0.c0))  WHEN ((rt0.c3) IS FALSE) THEN (((t0.c2, rt0.c3, t0.c2)) BETWEEN ((t0.c1, t0.c4, t0.c3)) AND ((x'', rt0.c6, t0.c4))) WHEN ((t0.c4)&(rt0.c6)) THEN CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 WHEN t0.c1 THEN '늢Z#' WHEN rt0.c1 THEN rt0.c1 ELSE t0.c1 END WHEN (((t0.c1))=((rt0.c3))) THEN ((t0.c4) BETWEEN (t0.c2) AND (t0.c0)) WHEN ((rt0.c1) BETWEEN (t0.c4) AND (t0.c3)) THEN ((t0.c4) BETWEEN (rt0.c4) AND (rt0.c0)) WHEN t0.c1 COLLATE NOCASE THEN ((rt0.c1) NOTNULL) ELSE CASE t0.c2  WHEN rt0.c5 THEN t0.c1 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0, t0 ORDER BY (TYPEOF(rt0.c3) IN ()) ASC);
SELECT * FROM rt0, t0 WHERE (CASE ((((((((rt0.c5)AND(rt0.c1)))AND(t0.c3)))AND(rt0.c5)))AND(rt0.c0))  WHEN ((rt0.c3) IS FALSE) THEN (((t0.c2, rt0.c3, t0.c2)) BETWEEN ((t0.c1, t0.c4, t0.c3)) AND ((x'', rt0.c6, t0.c4))) WHEN ((t0.c4)&(rt0.c6)) THEN CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 WHEN t0.c1 THEN '늢Z#' WHEN rt0.c1 THEN rt0.c1 ELSE t0.c1 END WHEN (((t0.c1))=((rt0.c3))) THEN ((t0.c4) BETWEEN (t0.c2) AND (t0.c0)) WHEN ((rt0.c1) BETWEEN (t0.c4) AND (t0.c3)) THEN ((t0.c4) BETWEEN (rt0.c4) AND (rt0.c0)) WHEN t0.c1 COLLATE NOCASE THEN ((rt0.c1) NOTNULL) ELSE CASE t0.c2  WHEN rt0.c5 THEN t0.c1 ELSE rt0.c0 END END) ORDER BY (TYPEOF(rt0.c3) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c5)AND(rt0.c1)))AND(t0.c3)))AND(rt0.c5)))AND(rt0.c0))  WHEN ((rt0.c3) IS FALSE) THEN (((t0.c2, rt0.c3, t0.c2)) BETWEEN ((t0.c1, t0.c4, t0.c3)) AND ((x'', rt0.c6, t0.c4))) WHEN ((t0.c4)&(rt0.c6)) THEN CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 WHEN t0.c1 THEN '늢Z#' WHEN rt0.c1 THEN rt0.c1 ELSE t0.c1 END WHEN (((t0.c1))=((rt0.c3))) THEN ((t0.c4) BETWEEN (t0.c2) AND (t0.c0)) WHEN ((rt0.c1) BETWEEN (t0.c4) AND (t0.c3)) THEN ((t0.c4) BETWEEN (rt0.c4) AND (rt0.c0)) WHEN t0.c1 COLLATE NOCASE THEN ((rt0.c1) NOTNULL) ELSE CASE t0.c2  WHEN rt0.c5 THEN t0.c1 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0, t0 ORDER BY (TYPEOF(rt0.c3) IN ()) ASC);
SELECT * FROM rt0, t0 WHERE (CASE ((((((((rt0.c5)AND(rt0.c1)))AND(t0.c3)))AND(rt0.c5)))AND(rt0.c0))  WHEN ((rt0.c3) IS FALSE) THEN (((t0.c2, rt0.c3, t0.c2)) BETWEEN ((t0.c1, t0.c4, t0.c3)) AND ((x'', rt0.c6, t0.c4))) WHEN ((t0.c4)&(rt0.c6)) THEN CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 WHEN t0.c1 THEN '늢Z#' WHEN rt0.c1 THEN rt0.c1 ELSE t0.c1 END WHEN (((t0.c1))=((rt0.c3))) THEN ((t0.c4) BETWEEN (t0.c2) AND (t0.c0)) WHEN ((rt0.c1) BETWEEN (t0.c4) AND (t0.c3)) THEN ((t0.c4) BETWEEN (rt0.c4) AND (rt0.c0)) WHEN t0.c1 COLLATE NOCASE THEN ((rt0.c1) NOTNULL) ELSE CASE t0.c2  WHEN rt0.c5 THEN t0.c1 ELSE rt0.c0 END END) ORDER BY (TYPEOF(rt0.c3) IN ()) ASC;
SELECT ALL * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'');
SELECT ALL * FROM rt0, vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0, vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0, vt1, t0 WHERE (vt1.c0);
SELECT ALL * FROM t0 WHERE ((((RTRIM(t0.c0)))>((t0.c2)))) ORDER BY ((t0.c1)%(t0.c4)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((RTRIM(t0.c0)))>((t0.c2)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1)%(t0.c4)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((RTRIM(t0.c0)))>((t0.c2)))) ORDER BY ((t0.c1)%(t0.c4)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((RTRIM(t0.c0)))>((t0.c2)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1)%(t0.c4)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((RTRIM(t0.c0)))>((t0.c2)))) ORDER BY ((t0.c1)%(t0.c4)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE ((+ (t0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c3))) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE ((+ (t0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c3))) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE ((+ (t0.c3)));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON (((rt0.c4 IN (rt0.c3, t0.c4)))%(((t0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c1)))) RIGHT OUTER JOIN t0 ON ((('610135592'))==((((vt1.c0)%(t0.c0))))) WHERE ((((NOT (0X6a2609fb))) NOT NULL)) ORDER BY ((vt1.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((NOT (0X6a2609fb))) NOT NULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((rt0.c4 IN (rt0.c3, t0.c4)))%(((t0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c1)))) RIGHT OUTER JOIN t0 ON ((('610135592'))=((((vt1.c0)%(t0.c0))))) ORDER BY ((vt1.c0) IS FALSE));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON (((rt0.c4 IN (rt0.c3, t0.c4)))%(((t0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c1)))) RIGHT OUTER JOIN t0 ON ((('610135592'))==((((vt1.c0)%(t0.c0))))) WHERE ((((NOT (0X6a2609fb))) NOT NULL)) ORDER BY ((vt1.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((NOT (0X6a2609fb))) NOT NULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((rt0.c4 IN (rt0.c3, t0.c4)))%(((t0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c1)))) RIGHT OUTER JOIN t0 ON ((('610135592'))=((((vt1.c0)%(t0.c0))))) ORDER BY ((vt1.c0) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (CASE ((0Xffffffffaf2feb8d)+(vt1.c0))  WHEN ((rt0.c2) NOT BETWEEN (NULL) AND (t0.c0)) THEN CAST(vt1.c0 AS REAL) END) ORDER BY ((((rt0.c4)||(t0.c0)))/(rt0.c1)), ((RTRIM(rt0.c2)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0xffffffffaf2feb8d)+(vt1.c0))  WHEN ((rt0.c2) NOT BETWEEN (NULL) AND (t0.c0)) THEN CAST(vt1.c0 AS REAL) END) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((rt0.c4)||(t0.c0)))/(rt0.c1)), ((RTRIM(rt0.c2)) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (CASE ((0Xffffffffaf2feb8d)+(vt1.c0))  WHEN ((rt0.c2) NOT BETWEEN (NULL) AND (t0.c0)) THEN CAST(vt1.c0 AS REAL) END) ORDER BY ((((rt0.c4)||(t0.c0)))/(rt0.c1)), ((RTRIM(rt0.c2)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0xffffffffaf2feb8d)+(vt1.c0))  WHEN ((rt0.c2) NOT BETWEEN (NULL) AND (t0.c0)) THEN CAST(vt1.c0 AS REAL) END) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((rt0.c4)||(t0.c0)))/(rt0.c1)), ((RTRIM(rt0.c2)) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (CASE ((0Xffffffffaf2feb8d)+(vt1.c0))  WHEN ((rt0.c2) NOT BETWEEN (NULL) AND (t0.c0)) THEN CAST(vt1.c0 AS REAL) END) ORDER BY ((((rt0.c4)||(t0.c0)))/(rt0.c1)), ((RTRIM(rt0.c2)) NOTNULL)  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (TRIM(DISTINCT (~ (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (~ (t0.c1)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (TRIM(DISTINCT (~ (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (~ (t0.c1)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (TRIM(DISTINCT (~ (t0.c1))));
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c3) IS TRUE))) ORDER BY (CAST(rt0.c6 AS INTEGER) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((rt0.c3) IS TRUE))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c6 AS INTEGER) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c3) IS TRUE))) ORDER BY (CAST(rt0.c6 AS INTEGER) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((rt0.c3) IS TRUE))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c6 AS INTEGER) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c3) IS TRUE))) ORDER BY (CAST(rt0.c6 AS INTEGER) IN ())  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((t0.c1)) BETWEEN ((CAST(NULL AS TEXT))) AND (((t0.c3 IN (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) BETWEEN ((CAST(NULL AS TEXT))) AND (((t0.c3 IN (t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c1)) BETWEEN ((CAST(NULL AS TEXT))) AND (((t0.c3 IN (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) BETWEEN ((CAST(NULL AS TEXT))) AND (((t0.c3 IN (t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c1)) BETWEEN ((CAST(NULL AS TEXT))) AND (((t0.c3 IN (t0.c2))))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1);
SELECT ALL * FROM rt0, t0 WHERE ((((((t0.c3))<((t0.c2))))<>(((rt0.c2)>>(t0.c4)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c3))<((t0.c2))))<>(((rt0.c2)>>(t0.c4))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((t0.c3))<((t0.c2))))<>(((rt0.c2)>>(t0.c4)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c3))<((t0.c2))))<>(((rt0.c2)>>(t0.c4))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((t0.c3))<((t0.c2))))<>(((rt0.c2)>>(t0.c4)))));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((load_extension(rt0.c4, t0.c2))OR(((t0.c3)IS NOT(t0.c0))))) ORDER BY ((((((rt0.c5)OR(rt0.c6)))AND(rt0.c6)))IS NOT((~ (t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(rt0.c4, t0.c2))OR(((t0.c3)IS NOT(t0.c0))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY ((((((rt0.c5)OR(rt0.c6)))AND(rt0.c6)))IS NOT((~ (t0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((load_extension(rt0.c4, t0.c2))OR(((t0.c3)IS NOT(t0.c0))))) ORDER BY ((((((rt0.c5)OR(rt0.c6)))AND(rt0.c6)))IS NOT((~ (t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(rt0.c4, t0.c2))OR(((t0.c3)IS NOT(t0.c0))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY ((((((rt0.c5)OR(rt0.c6)))AND(rt0.c6)))IS NOT((~ (t0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((load_extension(rt0.c4, t0.c2))OR(((t0.c3)IS NOT(t0.c0))))) ORDER BY ((((((rt0.c5)OR(rt0.c6)))AND(rt0.c6)))IS NOT((~ (t0.c1)))) DESC;
SELECT * FROM t0 INNER JOIN rt0 ON LOWER(DISTINCT LIKELY(DISTINCT '1910596886')) WHERE (IFNULL(DISTINCT '1903865536', t0.c3 COLLATE BINARY)) ORDER BY CASE ((((x'')AND(t0.c3)))AND('-743584882'))  WHEN (((rt0.c6, rt0.c2, rt0.c1))<=((t0.c4, t0.c1, rt0.c6))) THEN (- (rt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT '1903865536', t0.c3 COLLATE BINARY)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON LOWER(DISTINCT LIKELY(DISTINCT '1910596886')) ORDER BY CASE ((((x'')AND(t0.c3)))AND('-743584882'))  WHEN (((rt0.c6, rt0.c2, rt0.c1))<=((t0.c4, t0.c1, rt0.c6))) THEN (- (rt0.c0)) END ASC  NULLS FIRST);
SELECT * FROM t0 INNER JOIN rt0 ON LOWER(DISTINCT LIKELY(DISTINCT '1910596886')) WHERE (IFNULL(DISTINCT '1903865536', t0.c3 COLLATE BINARY)) ORDER BY CASE ((((x'')AND(t0.c3)))AND('-743584882'))  WHEN (((rt0.c6, rt0.c2, rt0.c1))<=((t0.c4, t0.c1, rt0.c6))) THEN (- (rt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT '1903865536', t0.c3 COLLATE BINARY)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON LOWER(DISTINCT LIKELY(DISTINCT '1910596886')) ORDER BY CASE ((((x'')AND(t0.c3)))AND('-743584882'))  WHEN (((rt0.c6, rt0.c2, rt0.c1))<=((t0.c4, t0.c1, rt0.c6))) THEN (- (rt0.c0)) END ASC  NULLS FIRST);
SELECT * FROM t0 INNER JOIN rt0 ON LOWER(DISTINCT LIKELY(DISTINCT '1910596886')) WHERE (IFNULL(DISTINCT '1903865536', t0.c3 COLLATE BINARY)) ORDER BY CASE ((((x'')AND(t0.c3)))AND('-743584882'))  WHEN (((rt0.c6, rt0.c2, rt0.c1))<=((t0.c4, t0.c1, rt0.c6))) THEN (- (rt0.c0)) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)IS NOT(rt0.c5)) COLLATE BINARY) ORDER BY ((((rt0.c4)<=(rt0.c3))) BETWEEN (LTRIM(rt0.c4)) AND ((+ (rt0.c5))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)IS NOT(rt0.c5)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)<=(rt0.c3))) BETWEEN (LTRIM(rt0.c4)) AND ((+ (rt0.c5)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)IS NOT(rt0.c5)) COLLATE BINARY) ORDER BY ((((rt0.c4)<=(rt0.c3))) BETWEEN (LTRIM(rt0.c4)) AND ((+ (rt0.c5))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)IS NOT(rt0.c5)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)<=(rt0.c3))) BETWEEN (LTRIM(rt0.c4)) AND ((+ (rt0.c5)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)IS NOT(rt0.c5)) COLLATE BINARY) ORDER BY ((((rt0.c4)<=(rt0.c3))) BETWEEN (LTRIM(rt0.c4)) AND ((+ (rt0.c5))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON (((vt1.c1)GLOB(t0.c4)) IN ()) WHERE (((((((-1075279138)AND(t0.c1)))OR(t0.c4)))<(((('-1537020239'))<((t0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((-1075279138)AND(t0.c1)))OR(t0.c4)))<(((('-1537020239'))<((t0.c3)))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (((vt1.c1)GLOB(t0.c4)) IN ()));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON (((vt1.c1)GLOB(t0.c4)) IN ()) WHERE (((((((-1075279138)AND(t0.c1)))OR(t0.c4)))<(((('-1537020239'))<((t0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((-1075279138)AND(t0.c1)))OR(t0.c4)))<(((('-1537020239'))<((t0.c3)))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (((vt1.c1)GLOB(t0.c4)) IN ()));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON (((vt1.c1)GLOB(t0.c4)) IN ()) WHERE (((((((-1075279138)AND(t0.c1)))OR(t0.c4)))<(((('-1537020239'))<((t0.c3))))));
SELECT COUNT(*) FROM vt1 WHERE (CASE (- (vt1.c2))  WHEN ((vt1.c2) IS TRUE) THEN CASE WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN 0.6167282397235547 END WHEN ((vt1.c2) BETWEEN (x'') AND (vt1.c0)) THEN (+ (1944581319)) WHEN ((x'55fb') IS FALSE) THEN (~ (vt1.c1)) ELSE '-1261335501' END);
SELECT SUM(count) FROM (SELECT ((CASE (- (vt1.c2))  WHEN ((vt1.c2) IS TRUE) THEN CASE WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN 0.6167282397235547 END WHEN ((vt1.c2) BETWEEN (x'') AND (vt1.c0)) THEN (+ (1944581319)) WHEN ((x'55fb') IS FALSE) THEN (~ (vt1.c1)) ELSE '-1261335501' END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE (- (vt1.c2))  WHEN ((vt1.c2) IS TRUE) THEN CASE WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN 0.6167282397235547 END WHEN ((vt1.c2) BETWEEN (x'') AND (vt1.c0)) THEN (+ (1944581319)) WHEN ((x'55fb') IS FALSE) THEN (~ (vt1.c1)) ELSE '-1261335501' END);
SELECT SUM(count) FROM (SELECT ((CASE (- (vt1.c2))  WHEN ((vt1.c2) IS TRUE) THEN CASE WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN 0.6167282397235547 END WHEN ((vt1.c2) BETWEEN (x'') AND (vt1.c0)) THEN (+ (1944581319)) WHEN ((x'55fb') IS FALSE) THEN (~ (vt1.c1)) ELSE '-1261335501' END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE (- (vt1.c2))  WHEN ((vt1.c2) IS TRUE) THEN CASE WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN 0.6167282397235547 END WHEN ((vt1.c2) BETWEEN (x'') AND (vt1.c0)) THEN (+ (1944581319)) WHEN ((x'55fb') IS FALSE) THEN (~ (vt1.c1)) ELSE '-1261335501' END);
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((((vt1.c0) IS TRUE))OR(ABS(rt0.c0))))OR(HEX(rt0.c6)))) ORDER BY ((((t0.c3) NOT BETWEEN (t0.c4) AND (rt0.c2))) NOT BETWEEN (((t0.c2) IS FALSE)) AND (((rt0.c0)+(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) IS TRUE))OR(ABS(rt0.c0))))OR(HEX(rt0.c6)))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((t0.c3) NOT BETWEEN (t0.c4) AND (rt0.c2))) NOT BETWEEN (((t0.c2) IS FALSE)) AND (((rt0.c0)+(rt0.c2)))));
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((((vt1.c0) IS TRUE))OR(ABS(rt0.c0))))OR(HEX(rt0.c6)))) ORDER BY ((((t0.c3) NOT BETWEEN (t0.c4) AND (rt0.c2))) NOT BETWEEN (((t0.c2) IS FALSE)) AND (((rt0.c0)+(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) IS TRUE))OR(ABS(rt0.c0))))OR(HEX(rt0.c6)))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((t0.c3) NOT BETWEEN (t0.c4) AND (rt0.c2))) NOT BETWEEN (((t0.c2) IS FALSE)) AND (((rt0.c0)+(rt0.c2)))));
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((((vt1.c0) IS TRUE))OR(ABS(rt0.c0))))OR(HEX(rt0.c6)))) ORDER BY ((((t0.c3) NOT BETWEEN (t0.c4) AND (rt0.c2))) NOT BETWEEN (((t0.c2) IS FALSE)) AND (((rt0.c0)+(rt0.c2))));
SELECT * FROM vt1, rt0 WHERE (((HEX(rt0.c4))>(((((vt1.c1)AND(vt1.c1)))AND(rt0.c3))))) ORDER BY CASE (~ (0.8648575177918509))  WHEN CAST(vt1.c0 AS NUMERIC) THEN HEX(DISTINCT rt0.c2) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt1.c2 ELSE rt0.c0 END THEN rt0.c5 COLLATE RTRIM WHEN rt0.c1 THEN (rt0.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c4))>(((((vt1.c1)AND(vt1.c1)))AND(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE (~ (0.8648575177918509))  WHEN CAST(vt1.c0 AS NUMERIC) THEN HEX(DISTINCT rt0.c2) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt1.c2 ELSE rt0.c0 END THEN rt0.c5 COLLATE RTRIM WHEN rt0.c1 THEN (rt0.c0 IN ()) END);
SELECT * FROM vt1, rt0 WHERE (((HEX(rt0.c4))>(((((vt1.c1)AND(vt1.c1)))AND(rt0.c3))))) ORDER BY CASE (~ (0.8648575177918509))  WHEN CAST(vt1.c0 AS NUMERIC) THEN HEX(DISTINCT rt0.c2) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt1.c2 ELSE rt0.c0 END THEN rt0.c5 COLLATE RTRIM WHEN rt0.c1 THEN (rt0.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c4))>(((((vt1.c1)AND(vt1.c1)))AND(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE (~ (0.8648575177918509))  WHEN CAST(vt1.c0 AS NUMERIC) THEN HEX(DISTINCT rt0.c2) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt1.c2 ELSE rt0.c0 END THEN rt0.c5 COLLATE RTRIM WHEN rt0.c1 THEN (rt0.c0 IN ()) END);
SELECT * FROM vt1, rt0 WHERE (((HEX(rt0.c4))>(((((vt1.c1)AND(vt1.c1)))AND(rt0.c3))))) ORDER BY CASE (~ (0.8648575177918509))  WHEN CAST(vt1.c0 AS NUMERIC) THEN HEX(DISTINCT rt0.c2) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt1.c2 ELSE rt0.c0 END THEN rt0.c5 COLLATE RTRIM WHEN rt0.c1 THEN (rt0.c0 IN ()) END;
SELECT * FROM vt1 CROSS JOIN t0 ON (CAST(t0.c2 AS REAL) IN (((t0.c4) BETWEEN (x'') AND (vt1.c2)))) WHERE (t0.c4) ORDER BY ((t0.c0 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c4) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (CAST(t0.c2 AS REAL) IN (((t0.c4) BETWEEN (x'') AND (vt1.c2)))) ORDER BY ((t0.c0 IN ()) IN ()) ASC);
SELECT * FROM vt1 CROSS JOIN t0 ON (CAST(t0.c2 AS REAL) IN (((t0.c4) BETWEEN (x'') AND (vt1.c2)))) WHERE (t0.c4) ORDER BY ((t0.c0 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c4) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (CAST(t0.c2 AS REAL) IN (((t0.c4) BETWEEN (x'') AND (vt1.c2)))) ORDER BY ((t0.c0 IN ()) IN ()) ASC);
SELECT * FROM vt1 CROSS JOIN t0 ON (CAST(t0.c2 AS REAL) IN (((t0.c4) BETWEEN (x'') AND (vt1.c2)))) WHERE (t0.c4) ORDER BY ((t0.c0 IN ()) IN ()) ASC;
SELECT ALL * FROM t0, rt0, vt1 WHERE (((CAST('' AS BLOB))-(CHANGES()))) ORDER BY LIKELIHOOD(DISTINCT ((t0.c4)*(rt0.c5)), 0.6777325180809537), CAST(NULL AS TEXT) DESC, (((vt1.c2 COLLATE RTRIM))<=(('qE')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST('' AS BLOB))-(CHANGES()))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY LIKELIHOOD(DISTINCT ((t0.c4)*(rt0.c5)), 0.6777325180809537), CAST(NULL AS TEXT) DESC, (((vt1.c2 COLLATE RTRIM))<=(('qE')))  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((CAST('' AS BLOB))-(CHANGES()))) ORDER BY LIKELIHOOD(DISTINCT ((t0.c4)*(rt0.c5)), 0.6777325180809537), CAST(NULL AS TEXT) DESC, (((vt1.c2 COLLATE RTRIM))<=(('qE')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST('' AS BLOB))-(CHANGES()))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY LIKELIHOOD(DISTINCT ((t0.c4)*(rt0.c5)), 0.6777325180809537), CAST(NULL AS TEXT) DESC, (((vt1.c2 COLLATE RTRIM))<=(('qE')))  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((CAST('' AS BLOB))-(CHANGES()))) ORDER BY LIKELIHOOD(DISTINCT ((t0.c4)*(rt0.c5)), 0.6777325180809537), CAST(NULL AS TEXT) DESC, (((vt1.c2 COLLATE RTRIM))<=(('qE')))  NULLS FIRST;
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON '' CROSS JOIN t0 ON ((((rt0.c0) IS TRUE)) IS TRUE) WHERE (((((((rt0.c5)OR(rt0.c2)))AND(vt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c5)OR(rt0.c2)))AND(vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON '' CROSS JOIN t0 ON ((((rt0.c0) IS TRUE)) IS TRUE));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON '' CROSS JOIN t0 ON ((((rt0.c0) IS TRUE)) IS TRUE) WHERE (((((((rt0.c5)OR(rt0.c2)))AND(vt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c5)OR(rt0.c2)))AND(vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON '' CROSS JOIN t0 ON ((((rt0.c0) IS TRUE)) IS TRUE));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON '' CROSS JOIN t0 ON ((((rt0.c0) IS TRUE)) IS TRUE) WHERE (((((((rt0.c5)OR(rt0.c2)))AND(vt1.c1))) NOT NULL));
SELECT * FROM t0 WHERE ((((t0.c0 COLLATE RTRIM))<((((((((((t0.c2)AND(t0.c4)))AND(t0.c0)))OR(t0.c0)))AND(t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE RTRIM))<((((((((((t0.c2)AND(t0.c4)))AND(t0.c0)))OR(t0.c0)))AND(t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0 COLLATE RTRIM))<((((((((((t0.c2)AND(t0.c4)))AND(t0.c0)))OR(t0.c0)))AND(t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE RTRIM))<((((((((((t0.c2)AND(t0.c4)))AND(t0.c0)))OR(t0.c0)))AND(t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0 COLLATE RTRIM))<((((((((((t0.c2)AND(t0.c4)))AND(t0.c0)))OR(t0.c0)))AND(t0.c1))))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c0, rt0.c3, t0.c4)) NOT BETWEEN ((((t0.c1)=(rt0.c2)), (((rt0.c2)) NOT BETWEEN ((t0.c4)) AND ((rt0.c2))), rt0.c3 COLLATE NOCASE)) AND ((rt0.c3 COLLATE RTRIM, (~ (t0.c1)), CASE WHEN rt0.c6 THEN t0.c1 WHEN -755685606 THEN rt0.c0 WHEN rt0.c6 THEN t0.c4 ELSE NULL END)))) ORDER BY ((rt0.c0 COLLATE BINARY)==(((rt0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt0.c3, t0.c4)) NOT BETWEEN ((((t0.c1)=(rt0.c2)), (((rt0.c2)) NOT BETWEEN ((t0.c4)) AND ((rt0.c2))), rt0.c3 COLLATE NOCASE)) AND ((rt0.c3 COLLATE RTRIM, (~ (t0.c1)), CASE WHEN rt0.c6 THEN t0.c1 WHEN -755685606 THEN rt0.c0 WHEN rt0.c6 THEN t0.c4 ELSE NULL END)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c0 COLLATE BINARY)=(((rt0.c0) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c0, rt0.c3, t0.c4)) NOT BETWEEN ((((t0.c1)=(rt0.c2)), (((rt0.c2)) NOT BETWEEN ((t0.c4)) AND ((rt0.c2))), rt0.c3 COLLATE NOCASE)) AND ((rt0.c3 COLLATE RTRIM, (~ (t0.c1)), CASE WHEN rt0.c6 THEN t0.c1 WHEN -755685606 THEN rt0.c0 WHEN rt0.c6 THEN t0.c4 ELSE NULL END)))) ORDER BY ((rt0.c0 COLLATE BINARY)==(((rt0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt0.c3, t0.c4)) NOT BETWEEN ((((t0.c1)=(rt0.c2)), (((rt0.c2)) NOT BETWEEN ((t0.c4)) AND ((rt0.c2))), rt0.c3 COLLATE NOCASE)) AND ((rt0.c3 COLLATE RTRIM, (~ (t0.c1)), CASE WHEN rt0.c6 THEN t0.c1 WHEN -755685606 THEN rt0.c0 WHEN rt0.c6 THEN t0.c4 ELSE NULL END)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c0 COLLATE BINARY)=(((rt0.c0) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c0, rt0.c3, t0.c4)) NOT BETWEEN ((((t0.c1)=(rt0.c2)), (((rt0.c2)) NOT BETWEEN ((t0.c4)) AND ((rt0.c2))), rt0.c3 COLLATE NOCASE)) AND ((rt0.c3 COLLATE RTRIM, (~ (t0.c1)), CASE WHEN rt0.c6 THEN t0.c1 WHEN -755685606 THEN rt0.c0 WHEN rt0.c6 THEN t0.c4 ELSE NULL END)))) ORDER BY ((rt0.c0 COLLATE BINARY)==(((rt0.c0) IS TRUE)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 FULL OUTER JOIN t0 ON ((vt1.c1 IN ()) IN ((rt0.c0 IN ()))) WHERE ((NULL IN ())) ORDER BY (((t0.c1)) BETWEEN ((x'')) AND ((rt0.c3))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN t0 ON ((vt1.c1 IN ()) IN ((rt0.c0 IN ()))) ORDER BY (((t0.c1)) BETWEEN ((x'')) AND ((rt0.c3))) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt1 FULL OUTER JOIN t0 ON ((vt1.c1 IN ()) IN ((rt0.c0 IN ()))) WHERE ((NULL IN ())) ORDER BY (((t0.c1)) BETWEEN ((x'')) AND ((rt0.c3))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN t0 ON ((vt1.c1 IN ()) IN ((rt0.c0 IN ()))) ORDER BY (((t0.c1)) BETWEEN ((x'')) AND ((rt0.c3))) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt1 FULL OUTER JOIN t0 ON ((vt1.c1 IN ()) IN ((rt0.c0 IN ()))) WHERE ((NULL IN ())) ORDER BY (((t0.c1)) BETWEEN ((x'')) AND ((rt0.c3))) COLLATE RTRIM;
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c3) BETWEEN (rt0.c6) AND (NULL)) IN (CASE t0.c4  WHEN rt0.c4 THEN rt0.c6 WHEN t0.c2 THEN rt0.c1 WHEN t0.c3 THEN t0.c3 ELSE t0.c1 END))) ORDER BY '1780877819' DESC, CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN (rt0.c4 IN (rt0.c1, 'c!')) END, IFNULL(((t0.c3)>>(rt0.c6)), (rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) BETWEEN (rt0.c6) AND (NULL)) IN (CASE t0.c4  WHEN rt0.c4 THEN rt0.c6 WHEN t0.c2 THEN rt0.c1 WHEN t0.c3 THEN t0.c3 ELSE t0.c1 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY '1780877819' DESC, CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN (rt0.c4 IN (rt0.c1, 'c!')) END, IFNULL(((t0.c3)>>(rt0.c6)), (rt0.c0 IN ())));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c3) BETWEEN (rt0.c6) AND (NULL)) IN (CASE t0.c4  WHEN rt0.c4 THEN rt0.c6 WHEN t0.c2 THEN rt0.c1 WHEN t0.c3 THEN t0.c3 ELSE t0.c1 END))) ORDER BY '1780877819' DESC, CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN (rt0.c4 IN (rt0.c1, 'c!')) END, IFNULL(((t0.c3)>>(rt0.c6)), (rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) BETWEEN (rt0.c6) AND (NULL)) IN (CASE t0.c4  WHEN rt0.c4 THEN rt0.c6 WHEN t0.c2 THEN rt0.c1 WHEN t0.c3 THEN t0.c3 ELSE t0.c1 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY '1780877819' DESC, CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN (rt0.c4 IN (rt0.c1, 'c!')) END, IFNULL(((t0.c3)>>(rt0.c6)), (rt0.c0 IN ())));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c3) BETWEEN (rt0.c6) AND (NULL)) IN (CASE t0.c4  WHEN rt0.c4 THEN rt0.c6 WHEN t0.c2 THEN rt0.c1 WHEN t0.c3 THEN t0.c3 ELSE t0.c1 END))) ORDER BY '1780877819' DESC, CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN (rt0.c4 IN (rt0.c1, 'c!')) END, IFNULL(((t0.c3)>>(rt0.c6)), (rt0.c0 IN ()));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED INNER JOIN t0 ON load_extension(((t0.c4)/(t0.c0)), vt1.c2 COLLATE BINARY) WHERE ((- (CASE WHEN vt1.c1 THEN t0.c1 WHEN '1490980899' THEN t0.c2 WHEN t0.c4 THEN t0.c0 ELSE t0.c1 END))) ORDER BY CASE WHEN CASE t0.c1  WHEN '' THEN t0.c4 WHEN vt1.c1 THEN t0.c2 WHEN NULL THEN t0.c0 WHEN t0.c1 THEN vt1.c2 WHEN vt1.c2 THEN t0.c0 END THEN ((vt1.c2) NOT NULL) WHEN NULL THEN t0.c4 COLLATE NOCASE WHEN x'' THEN (- (vt1.c0)) WHEN (((vt1.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) THEN json_extract(t0.c2, t0.c4, vt1.c1, t0.c4) WHEN ((((t0.c0)AND(t0.c4)))AND(t0.c0)) THEN ((t0.c1) IS FALSE) ELSE ((vt1.c2) NOT BETWEEN (-515925200) AND (t0.c2)) END DESC  NULLS FIRST, (((((t0.c4)LIKE(t0.c0))))=((((t0.c1) IS TRUE)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt1.c1 THEN t0.c1 WHEN '1490980899' THEN t0.c2 WHEN t0.c4 THEN t0.c0 ELSE t0.c1 END))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON load_extension(((t0.c4)/(t0.c0)), vt1.c2 COLLATE BINARY) ORDER BY CASE WHEN CASE t0.c1  WHEN '' THEN t0.c4 WHEN vt1.c1 THEN t0.c2 WHEN NULL THEN t0.c0 WHEN t0.c1 THEN vt1.c2 WHEN vt1.c2 THEN t0.c0 END THEN ((vt1.c2) NOT NULL) WHEN NULL THEN t0.c4 COLLATE NOCASE WHEN x'' THEN (- (vt1.c0)) WHEN (((vt1.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) THEN json_extract(t0.c2, t0.c4, vt1.c1, t0.c4) WHEN ((((t0.c0)AND(t0.c4)))AND(t0.c0)) THEN ((t0.c1) IS FALSE) ELSE ((vt1.c2) NOT BETWEEN (-515925200) AND (t0.c2)) END DESC  NULLS FIRST, (((((t0.c4)LIKE(t0.c0))))=((((t0.c1) IS TRUE)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED INNER JOIN t0 ON load_extension(((t0.c4)/(t0.c0)), vt1.c2 COLLATE BINARY) WHERE ((- (CASE WHEN vt1.c1 THEN t0.c1 WHEN '1490980899' THEN t0.c2 WHEN t0.c4 THEN t0.c0 ELSE t0.c1 END))) ORDER BY CASE WHEN CASE t0.c1  WHEN '' THEN t0.c4 WHEN vt1.c1 THEN t0.c2 WHEN NULL THEN t0.c0 WHEN t0.c1 THEN vt1.c2 WHEN vt1.c2 THEN t0.c0 END THEN ((vt1.c2) NOT NULL) WHEN NULL THEN t0.c4 COLLATE NOCASE WHEN x'' THEN (- (vt1.c0)) WHEN (((vt1.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) THEN json_extract(t0.c2, t0.c4, vt1.c1, t0.c4) WHEN ((((t0.c0)AND(t0.c4)))AND(t0.c0)) THEN ((t0.c1) IS FALSE) ELSE ((vt1.c2) NOT BETWEEN (-515925200) AND (t0.c2)) END DESC  NULLS FIRST, (((((t0.c4)LIKE(t0.c0))))=((((t0.c1) IS TRUE)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt1.c1 THEN t0.c1 WHEN '1490980899' THEN t0.c2 WHEN t0.c4 THEN t0.c0 ELSE t0.c1 END))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON load_extension(((t0.c4)/(t0.c0)), vt1.c2 COLLATE BINARY) ORDER BY CASE WHEN CASE t0.c1  WHEN '' THEN t0.c4 WHEN vt1.c1 THEN t0.c2 WHEN NULL THEN t0.c0 WHEN t0.c1 THEN vt1.c2 WHEN vt1.c2 THEN t0.c0 END THEN ((vt1.c2) NOT NULL) WHEN NULL THEN t0.c4 COLLATE NOCASE WHEN x'' THEN (- (vt1.c0)) WHEN (((vt1.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) THEN json_extract(t0.c2, t0.c4, vt1.c1, t0.c4) WHEN ((((t0.c0)AND(t0.c4)))AND(t0.c0)) THEN ((t0.c1) IS FALSE) ELSE ((vt1.c2) NOT BETWEEN (-515925200) AND (t0.c2)) END DESC  NULLS FIRST, (((((t0.c4)LIKE(t0.c0))))=((((t0.c1) IS TRUE)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY CASE WHEN TRIM(DISTINCT t0.c4) THEN (- (t0.c0)) WHEN t0.c1 THEN CASE t0.c4  WHEN t0.c4 THEN t0.c1 WHEN t0.c3 THEN t0.c3 WHEN t0.c1 THEN t0.c3 END WHEN CAST(t0.c3 AS TEXT) THEN (- (t0.c1)) WHEN ABS(DISTINCT t0.c1) THEN (t0.c0 IN ()) WHEN (((t0.c2, t0.c4, t0.c3))=((t0.c3, x'9c7b5b73', t0.c0))) THEN ((t0.c4) IS TRUE) END DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN TRIM(DISTINCT t0.c4) THEN (- (t0.c0)) WHEN t0.c1 THEN CASE t0.c4  WHEN t0.c4 THEN t0.c1 WHEN t0.c3 THEN t0.c3 WHEN t0.c1 THEN t0.c3 END WHEN CAST(t0.c3 AS TEXT) THEN (- (t0.c1)) WHEN ABS(DISTINCT t0.c1) THEN (t0.c0 IN ()) WHEN (((t0.c2, t0.c4, t0.c3))==((t0.c3, x'9c7b5b73', t0.c0))) THEN ((t0.c4) IS TRUE) END DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY CASE WHEN TRIM(DISTINCT t0.c4) THEN (- (t0.c0)) WHEN t0.c1 THEN CASE t0.c4  WHEN t0.c4 THEN t0.c1 WHEN t0.c3 THEN t0.c3 WHEN t0.c1 THEN t0.c3 END WHEN CAST(t0.c3 AS TEXT) THEN (- (t0.c1)) WHEN ABS(DISTINCT t0.c1) THEN (t0.c0 IN ()) WHEN (((t0.c2, t0.c4, t0.c3))=((t0.c3, x'9c7b5b73', t0.c0))) THEN ((t0.c4) IS TRUE) END DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN TRIM(DISTINCT t0.c4) THEN (- (t0.c0)) WHEN t0.c1 THEN CASE t0.c4  WHEN t0.c4 THEN t0.c1 WHEN t0.c3 THEN t0.c3 WHEN t0.c1 THEN t0.c3 END WHEN CAST(t0.c3 AS TEXT) THEN (- (t0.c1)) WHEN ABS(DISTINCT t0.c1) THEN (t0.c0 IN ()) WHEN (((t0.c2, t0.c4, t0.c3))==((t0.c3, x'9c7b5b73', t0.c0))) THEN ((t0.c4) IS TRUE) END DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY CASE WHEN TRIM(DISTINCT t0.c4) THEN (- (t0.c0)) WHEN t0.c1 THEN CASE t0.c4  WHEN t0.c4 THEN t0.c1 WHEN t0.c3 THEN t0.c3 WHEN t0.c1 THEN t0.c3 END WHEN CAST(t0.c3 AS TEXT) THEN (- (t0.c1)) WHEN ABS(DISTINCT t0.c1) THEN (t0.c0 IN ()) WHEN (((t0.c2, t0.c4, t0.c3))=((t0.c3, x'9c7b5b73', t0.c0))) THEN ((t0.c4) IS TRUE) END DESC;
SELECT COUNT(*) FROM t0 WHERE (QUOTE((((t0.c1))==((t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE((((t0.c1))==((t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (QUOTE((((t0.c1))==((t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE((((t0.c1))==((t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (QUOTE((((t0.c1))==((t0.c1)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- ((((('920562441')AND(rt0.c1)))OR(vt1.c2))))) ORDER BY CASE ((((vt1.c2)AND(rt0.c3)))AND(rt0.c6))  WHEN ((rt0.c2)-(rt0.c2)) THEN ROUND(0xffffffffc0e2c7aa, x'') ELSE ((((rt0.c1)AND(0.6494999673529445)))AND(x'')) END DESC  NULLS LAST, (rt0.c2 IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((- ((((('920562441')AND(rt0.c1)))OR(vt1.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE ((((vt1.c2)AND(rt0.c3)))AND(rt0.c6))  WHEN ((rt0.c2)-(rt0.c2)) THEN ROUND(0Xffffffffc0e2c7aa, x'') ELSE ((((rt0.c1)AND(0.6494999673529445)))AND(x'')) END DESC  NULLS LAST, (rt0.c2 IN ()) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- ((((('920562441')AND(rt0.c1)))OR(vt1.c2))))) ORDER BY CASE ((((vt1.c2)AND(rt0.c3)))AND(rt0.c6))  WHEN ((rt0.c2)-(rt0.c2)) THEN ROUND(0xffffffffc0e2c7aa, x'') ELSE ((((rt0.c1)AND(0.6494999673529445)))AND(x'')) END DESC  NULLS LAST, (rt0.c2 IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((- ((((('920562441')AND(rt0.c1)))OR(vt1.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE ((((vt1.c2)AND(rt0.c3)))AND(rt0.c6))  WHEN ((rt0.c2)-(rt0.c2)) THEN ROUND(0Xffffffffc0e2c7aa, x'') ELSE ((((rt0.c1)AND(0.6494999673529445)))AND(x'')) END DESC  NULLS LAST, (rt0.c2 IN ()) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- ((((('920562441')AND(rt0.c1)))OR(vt1.c2))))) ORDER BY CASE ((((vt1.c2)AND(rt0.c3)))AND(rt0.c6))  WHEN ((rt0.c2)-(rt0.c2)) THEN ROUND(0xffffffffc0e2c7aa, x'') ELSE ((((rt0.c1)AND(0.6494999673529445)))AND(x'')) END DESC  NULLS LAST, (rt0.c2 IN ()) ASC;
SELECT ALL * FROM t0 WHERE ((((((t0.c3)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) NOTNULL)) ORDER BY ((t0.c1 IN (t0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c3)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1 IN (t0.c1)) IN ()) ASC);
SELECT ALL * FROM t0 WHERE ((((((t0.c3)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) NOTNULL)) ORDER BY ((t0.c1 IN (t0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c3)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1 IN (t0.c1)) IN ()) ASC);
SELECT ALL * FROM t0 WHERE ((((((t0.c3)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) NOTNULL)) ORDER BY ((t0.c1 IN (t0.c1)) IN ()) ASC;
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON ((CAST(rt0.c4 AS REAL)) IS FALSE) CROSS JOIN rt0 ON ((x'')<((t0.c3 IN ()))) WHERE ((((~ (rt0.c3)))<<((((vt1.c1))>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c3)))<<((((vt1.c1))>((rt0.c2)))))) IS TRUE)  as count FROM t0 NOT INDEXED INNER JOIN vt1 ON ((CAST(rt0.c4 AS REAL)) IS FALSE) CROSS JOIN rt0 ON ((x'')<((t0.c3 IN ()))));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON ((CAST(rt0.c4 AS REAL)) IS FALSE) CROSS JOIN rt0 ON ((x'')<((t0.c3 IN ()))) WHERE ((((~ (rt0.c3)))<<((((vt1.c1))>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c3)))<<((((vt1.c1))>((rt0.c2)))))) IS TRUE)  as count FROM t0 NOT INDEXED INNER JOIN vt1 ON ((CAST(rt0.c4 AS REAL)) IS FALSE) CROSS JOIN rt0 ON ((x'')<((t0.c3 IN ()))));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON ((CAST(rt0.c4 AS REAL)) IS FALSE) CROSS JOIN rt0 ON ((x'')<((t0.c3 IN ()))) WHERE ((((~ (rt0.c3)))<<((((vt1.c1))>((rt0.c2))))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (''))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (''))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c2  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (''))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (''))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c2  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (''))) ORDER BY rt0.c2  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN t0 ON CAST(LAST_INSERT_ROWID() AS NUMERIC) LEFT OUTER JOIN vt1 ON rt0.c1 WHERE (((((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(((((vt1.c0)OR(rt0.c0)))OR(t0.c0)))))AND(((t0.c0) NOT NULL))))OR(((x'') BETWEEN (vt1.c2) AND (t0.c4)))))OR(((rt0.c2) NOT NULL)))) ORDER BY ((CAST(t0.c3 AS INTEGER)) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(((((vt1.c0)OR(rt0.c0)))OR(t0.c0)))))AND(((t0.c0) NOT NULL))))OR(((x'') BETWEEN (vt1.c2) AND (t0.c4)))))OR(((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST(LAST_INSERT_ROWID() AS NUMERIC) LEFT OUTER JOIN vt1 ON rt0.c1 ORDER BY ((CAST(t0.c3 AS INTEGER)) IS FALSE) DESC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN t0 ON CAST(LAST_INSERT_ROWID() AS NUMERIC) LEFT OUTER JOIN vt1 ON rt0.c1 WHERE (((((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(((((vt1.c0)OR(rt0.c0)))OR(t0.c0)))))AND(((t0.c0) NOT NULL))))OR(((x'') BETWEEN (vt1.c2) AND (t0.c4)))))OR(((rt0.c2) NOT NULL)))) ORDER BY ((CAST(t0.c3 AS INTEGER)) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(((((vt1.c0)OR(rt0.c0)))OR(t0.c0)))))AND(((t0.c0) NOT NULL))))OR(((x'') BETWEEN (vt1.c2) AND (t0.c4)))))OR(((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST(LAST_INSERT_ROWID() AS NUMERIC) LEFT OUTER JOIN vt1 ON rt0.c1 ORDER BY ((CAST(t0.c3 AS INTEGER)) IS FALSE) DESC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN t0 ON CAST(LAST_INSERT_ROWID() AS NUMERIC) LEFT OUTER JOIN vt1 ON rt0.c1 WHERE (((((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(((((vt1.c0)OR(rt0.c0)))OR(t0.c0)))))AND(((t0.c0) NOT NULL))))OR(((x'') BETWEEN (vt1.c2) AND (t0.c4)))))OR(((rt0.c2) NOT NULL)))) ORDER BY ((CAST(t0.c3 AS INTEGER)) IS FALSE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY (((NOT (t0.c3))) NOT BETWEEN (((t0.c2)IS(t0.c2))) AND (((t0.c3)||(t0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c3))) NOT BETWEEN (((t0.c2)IS(t0.c2))) AND (((t0.c3)||(t0.c4))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY (((NOT (t0.c3))) NOT BETWEEN (((t0.c2)IS(t0.c2))) AND (((t0.c3)||(t0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c3))) NOT BETWEEN (((t0.c2)IS(t0.c2))) AND (((t0.c3)||(t0.c4))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY (((NOT (t0.c3))) NOT BETWEEN (((t0.c2)IS(t0.c2))) AND (((t0.c3)||(t0.c4))))  NULLS FIRST;
SELECT * FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c3)IS(rt0.c1)))LIKE(t0.c4)) WHERE (UNLIKELY(DISTINCT ((rt0.c3) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt0.c3) ISNULL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c3)IS(rt0.c1)))LIKE(t0.c4)));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c3)IS(rt0.c1)))LIKE(t0.c4)) WHERE (UNLIKELY(DISTINCT ((rt0.c3) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt0.c3) ISNULL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c3)IS(rt0.c1)))LIKE(t0.c4)));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c3)IS(rt0.c1)))LIKE(t0.c4)) WHERE (UNLIKELY(DISTINCT ((rt0.c3) ISNULL)));
SELECT ALL * FROM t0, vt1 WHERE (((vt1.c0)>=(t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (((vt1.c0)>=(t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (((vt1.c0)>=(t0.c2)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE ((+ (((NULL) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((NULL) IS TRUE)))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE ((+ (((NULL) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((NULL) IS TRUE)))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE ((+ (((NULL) IS TRUE))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((- (t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- (t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((- (t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- (t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((- (t0.c2 COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON CAST(0X199d148d AS TEXT) WHERE (((((rt0.c0) ISNULL))|(((((NULL)OR(rt0.c5)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL))|(((((NULL)OR(rt0.c5)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CAST(0x199d148d AS TEXT));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON CAST(0X199d148d AS TEXT) WHERE (((((rt0.c0) ISNULL))|(((((NULL)OR(rt0.c5)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL))|(((((NULL)OR(rt0.c5)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CAST(0x199d148d AS TEXT));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON CAST(0X199d148d AS TEXT) WHERE (((((rt0.c0) ISNULL))|(((((NULL)OR(rt0.c5)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ((((t0.c2)<=(t0.c0)) IN ())) ORDER BY CASE vt1.c1  WHEN ((t0.c3)>>(rt0.c3)) THEN ((t0.c2)!=(vt1.c2)) END DESC, (vt1.c0 COLLATE BINARY IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)<=(t0.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY CASE vt1.c1  WHEN ((t0.c3)>>(rt0.c3)) THEN ((t0.c2)!=(vt1.c2)) END DESC, (vt1.c0 COLLATE BINARY IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ((((t0.c2)<=(t0.c0)) IN ())) ORDER BY CASE vt1.c1  WHEN ((t0.c3)>>(rt0.c3)) THEN ((t0.c2)!=(vt1.c2)) END DESC, (vt1.c0 COLLATE BINARY IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)<=(t0.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY CASE vt1.c1  WHEN ((t0.c3)>>(rt0.c3)) THEN ((t0.c2)!=(vt1.c2)) END DESC, (vt1.c0 COLLATE BINARY IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ((((t0.c2)<=(t0.c0)) IN ())) ORDER BY CASE vt1.c1  WHEN ((t0.c3)>>(rt0.c3)) THEN ((t0.c2)!=(vt1.c2)) END DESC, (vt1.c0 COLLATE BINARY IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c2)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CASE WHEN vt1.c2 THEN 'u鱂<~+m' WHEN NULL THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))) ORDER BY (((vt1.c1)) NOT BETWEEN ((((vt1.c0)IS NOT(vt1.c2)))) AND ((CAST('()' AS BLOB)))) DESC, (((vt1.c2) NOTNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c2)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CASE WHEN vt1.c2 THEN 'u鱂<~+m' WHEN NULL THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)) NOT BETWEEN ((((vt1.c0)IS NOT(vt1.c2)))) AND ((CAST('()' AS BLOB)))) DESC, (((vt1.c2) NOTNULL) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c2)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CASE WHEN vt1.c2 THEN 'u鱂<~+m' WHEN NULL THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))) ORDER BY (((vt1.c1)) NOT BETWEEN ((((vt1.c0)IS NOT(vt1.c2)))) AND ((CAST('()' AS BLOB)))) DESC, (((vt1.c2) NOTNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c2)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CASE WHEN vt1.c2 THEN 'u鱂<~+m' WHEN NULL THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)) NOT BETWEEN ((((vt1.c0)IS NOT(vt1.c2)))) AND ((CAST('()' AS BLOB)))) DESC, (((vt1.c2) NOTNULL) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c2)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CASE WHEN vt1.c2 THEN 'u鱂<~+m' WHEN NULL THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))) ORDER BY (((vt1.c1)) NOT BETWEEN ((((vt1.c0)IS NOT(vt1.c2)))) AND ((CAST('()' AS BLOB)))) DESC, (((vt1.c2) NOTNULL) IN ()) DESC;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN x'' THEN ((t0.c4) NOTNULL) WHEN (((t0.c3, t0.c3, t0.c2))!=((t0.c1, t0.c4, t0.c2))) THEN CAST(t0.c0 AS TEXT) WHEN ((t0.c1) BETWEEN (t0.c4) AND (t0.c4)) THEN t0.c3 COLLATE NOCASE END) ORDER BY ((t0.c0) BETWEEN (t0.c0 COLLATE NOCASE) AND (((((t0.c0)OR(t0.c4)))OR(t0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN ((t0.c4) NOTNULL) WHEN (((t0.c3, t0.c3, t0.c2))<>((t0.c1, t0.c4, t0.c2))) THEN CAST(t0.c0 AS TEXT) WHEN ((t0.c1) BETWEEN (t0.c4) AND (t0.c4)) THEN t0.c3 COLLATE NOCASE END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) BETWEEN (t0.c0 COLLATE NOCASE) AND (((((t0.c0)OR(t0.c4)))OR(t0.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN x'' THEN ((t0.c4) NOTNULL) WHEN (((t0.c3, t0.c3, t0.c2))!=((t0.c1, t0.c4, t0.c2))) THEN CAST(t0.c0 AS TEXT) WHEN ((t0.c1) BETWEEN (t0.c4) AND (t0.c4)) THEN t0.c3 COLLATE NOCASE END) ORDER BY ((t0.c0) BETWEEN (t0.c0 COLLATE NOCASE) AND (((((t0.c0)OR(t0.c4)))OR(t0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN ((t0.c4) NOTNULL) WHEN (((t0.c3, t0.c3, t0.c2))<>((t0.c1, t0.c4, t0.c2))) THEN CAST(t0.c0 AS TEXT) WHEN ((t0.c1) BETWEEN (t0.c4) AND (t0.c4)) THEN t0.c3 COLLATE NOCASE END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) BETWEEN (t0.c0 COLLATE NOCASE) AND (((((t0.c0)OR(t0.c4)))OR(t0.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN x'' THEN ((t0.c4) NOTNULL) WHEN (((t0.c3, t0.c3, t0.c2))!=((t0.c1, t0.c4, t0.c2))) THEN CAST(t0.c0 AS TEXT) WHEN ((t0.c1) BETWEEN (t0.c4) AND (t0.c4)) THEN t0.c3 COLLATE NOCASE END) ORDER BY ((t0.c0) BETWEEN (t0.c0 COLLATE NOCASE) AND (((((t0.c0)OR(t0.c4)))OR(t0.c3))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (rt0.c1) ORDER BY CASE WHEN ((((x'61c4')AND(rt0.c0)))OR(t0.c4)) THEN rt0.c4 WHEN vt1.c0 THEN (NOT (rt0.c2)) WHEN (- (rt0.c3)) THEN CASE vt1.c1  WHEN rt0.c3 THEN rt0.c5 WHEN '-890371303' THEN t0.c1 WHEN t0.c3 THEN rt0.c2 END WHEN (- (rt0.c5)) THEN (rt0.c0 IN ()) WHEN ((t0.c0)!=(rt0.c3)) THEN CAST(vt1.c0 AS REAL) END DESC  NULLS FIRST, ((((rt0.c4) BETWEEN (rt0.c4) AND (vt1.c0))) BETWEEN (json_array_length(t0.c0)) AND (CASE WHEN t0.c1 THEN rt0.c3 END)) DESC, CAST((t0.c2 IN ()) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY CASE WHEN ((((x'61c4')AND(rt0.c0)))OR(t0.c4)) THEN rt0.c4 WHEN vt1.c0 THEN (NOT (rt0.c2)) WHEN (- (rt0.c3)) THEN CASE vt1.c1  WHEN rt0.c3 THEN rt0.c5 WHEN '-890371303' THEN t0.c1 WHEN t0.c3 THEN rt0.c2 END WHEN (- (rt0.c5)) THEN (rt0.c0 IN ()) WHEN ((t0.c0)<>(rt0.c3)) THEN CAST(vt1.c0 AS REAL) END DESC  NULLS FIRST, ((((rt0.c4) BETWEEN (rt0.c4) AND (vt1.c0))) BETWEEN (json_array_length(t0.c0)) AND (CASE WHEN t0.c1 THEN rt0.c3 END)) DESC, CAST((t0.c2 IN ()) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (rt0.c1) ORDER BY CASE WHEN ((((x'61c4')AND(rt0.c0)))OR(t0.c4)) THEN rt0.c4 WHEN vt1.c0 THEN (NOT (rt0.c2)) WHEN (- (rt0.c3)) THEN CASE vt1.c1  WHEN rt0.c3 THEN rt0.c5 WHEN '-890371303' THEN t0.c1 WHEN t0.c3 THEN rt0.c2 END WHEN (- (rt0.c5)) THEN (rt0.c0 IN ()) WHEN ((t0.c0)!=(rt0.c3)) THEN CAST(vt1.c0 AS REAL) END DESC  NULLS FIRST, ((((rt0.c4) BETWEEN (rt0.c4) AND (vt1.c0))) BETWEEN (json_array_length(t0.c0)) AND (CASE WHEN t0.c1 THEN rt0.c3 END)) DESC, CAST((t0.c2 IN ()) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY CASE WHEN ((((x'61c4')AND(rt0.c0)))OR(t0.c4)) THEN rt0.c4 WHEN vt1.c0 THEN (NOT (rt0.c2)) WHEN (- (rt0.c3)) THEN CASE vt1.c1  WHEN rt0.c3 THEN rt0.c5 WHEN '-890371303' THEN t0.c1 WHEN t0.c3 THEN rt0.c2 END WHEN (- (rt0.c5)) THEN (rt0.c0 IN ()) WHEN ((t0.c0)<>(rt0.c3)) THEN CAST(vt1.c0 AS REAL) END DESC  NULLS FIRST, ((((rt0.c4) BETWEEN (rt0.c4) AND (vt1.c0))) BETWEEN (json_array_length(t0.c0)) AND (CASE WHEN t0.c1 THEN rt0.c3 END)) DESC, CAST((t0.c2 IN ()) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (rt0.c1) ORDER BY CASE WHEN ((((x'61c4')AND(rt0.c0)))OR(t0.c4)) THEN rt0.c4 WHEN vt1.c0 THEN (NOT (rt0.c2)) WHEN (- (rt0.c3)) THEN CASE vt1.c1  WHEN rt0.c3 THEN rt0.c5 WHEN '-890371303' THEN t0.c1 WHEN t0.c3 THEN rt0.c2 END WHEN (- (rt0.c5)) THEN (rt0.c0 IN ()) WHEN ((t0.c0)!=(rt0.c3)) THEN CAST(vt1.c0 AS REAL) END DESC  NULLS FIRST, ((((rt0.c4) BETWEEN (rt0.c4) AND (vt1.c0))) BETWEEN (json_array_length(t0.c0)) AND (CASE WHEN t0.c1 THEN rt0.c3 END)) DESC, CAST((t0.c2 IN ()) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((SQLITE_VERSION())=(((((t0.c2)OR(rt0.c0)))AND(vt1.c0))))) ORDER BY ((((((t0.c3) NOT NULL))AND((+ (rt0.c6)))))OR(rt0.c5)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())=(((((t0.c2)OR(rt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((((t0.c3) NOT NULL))AND((+ (rt0.c6)))))OR(rt0.c5)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((SQLITE_VERSION())=(((((t0.c2)OR(rt0.c0)))AND(vt1.c0))))) ORDER BY ((((((t0.c3) NOT NULL))AND((+ (rt0.c6)))))OR(rt0.c5)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())=(((((t0.c2)OR(rt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((((t0.c3) NOT NULL))AND((+ (rt0.c6)))))OR(rt0.c5)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((SQLITE_VERSION())=(((((t0.c2)OR(rt0.c0)))AND(vt1.c0))))) ORDER BY ((((((t0.c3) NOT NULL))AND((+ (rt0.c6)))))OR(rt0.c5)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOTNULL));
SELECT * FROM rt0, t0 WHERE (NULL) ORDER BY (((rt0.c5 IN (0.4665377674024733))) NOT BETWEEN ((((t0.c3)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1)))) AND (NULL));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c5 IN (0.4665377674024733))) NOT BETWEEN ((((t0.c3)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1)))) AND (NULL)));
SELECT * FROM rt0, t0 WHERE (NULL) ORDER BY (((rt0.c5 IN (0.4665377674024733))) NOT BETWEEN ((((t0.c3)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1)))) AND (NULL));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c5 IN (0.4665377674024733))) NOT BETWEEN ((((t0.c3)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1)))) AND (NULL)));
SELECT * FROM rt0, t0 WHERE (NULL) ORDER BY (((rt0.c5 IN (0.4665377674024733))) NOT BETWEEN ((((t0.c3)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1)))) AND (NULL));
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (((NULL)>((('-125800488') NOT NULL)))) ORDER BY ((((((t0.c0)-(rt0.c0)))AND(((t0.c2) ISNULL))))AND(ABS(DISTINCT vt1.c0)))  NULLS FIRST, ((((vt1.c2 IN (rt0.c0, t0.c3)), ((rt0.c3)OR(vt1.c1)), rt0.c6 COLLATE NOCASE))>((((t0.c3) NOT BETWEEN (0Xffffffffbe2ab12c) AND (vt1.c1)), ((((rt0.c5)AND(t0.c4)))AND(rt0.c1)), CAST(rt0.c1 AS INTEGER))))  NULLS FIRST, CAST(((rt0.c1) ISNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>((('-125800488') NOT NULL)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((((((t0.c0)-(rt0.c0)))AND(((t0.c2) ISNULL))))AND(ABS(DISTINCT vt1.c0)))  NULLS FIRST, ((((vt1.c2 IN (rt0.c0, t0.c3)), ((rt0.c3)OR(vt1.c1)), rt0.c6 COLLATE NOCASE))>((((t0.c3) NOT BETWEEN (0xffffffffbe2ab12c) AND (vt1.c1)), ((((rt0.c5)AND(t0.c4)))AND(rt0.c1)), CAST(rt0.c1 AS INTEGER))))  NULLS FIRST, CAST(((rt0.c1) ISNULL) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (((NULL)>((('-125800488') NOT NULL)))) ORDER BY ((((((t0.c0)-(rt0.c0)))AND(((t0.c2) ISNULL))))AND(ABS(DISTINCT vt1.c0)))  NULLS FIRST, ((((vt1.c2 IN (rt0.c0, t0.c3)), ((rt0.c3)OR(vt1.c1)), rt0.c6 COLLATE NOCASE))>((((t0.c3) NOT BETWEEN (0Xffffffffbe2ab12c) AND (vt1.c1)), ((((rt0.c5)AND(t0.c4)))AND(rt0.c1)), CAST(rt0.c1 AS INTEGER))))  NULLS FIRST, CAST(((rt0.c1) ISNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>((('-125800488') NOT NULL)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((((((t0.c0)-(rt0.c0)))AND(((t0.c2) ISNULL))))AND(ABS(DISTINCT vt1.c0)))  NULLS FIRST, ((((vt1.c2 IN (rt0.c0, t0.c3)), ((rt0.c3)OR(vt1.c1)), rt0.c6 COLLATE NOCASE))>((((t0.c3) NOT BETWEEN (0xffffffffbe2ab12c) AND (vt1.c1)), ((((rt0.c5)AND(t0.c4)))AND(rt0.c1)), CAST(rt0.c1 AS INTEGER))))  NULLS FIRST, CAST(((rt0.c1) ISNULL) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (((NULL)>((('-125800488') NOT NULL)))) ORDER BY ((((((t0.c0)-(rt0.c0)))AND(((t0.c2) ISNULL))))AND(ABS(DISTINCT vt1.c0)))  NULLS FIRST, ((((vt1.c2 IN (rt0.c0, t0.c3)), ((rt0.c3)OR(vt1.c1)), rt0.c6 COLLATE NOCASE))>((((t0.c3) NOT BETWEEN (0Xffffffffbe2ab12c) AND (vt1.c1)), ((((rt0.c5)AND(t0.c4)))AND(rt0.c1)), CAST(rt0.c1 AS INTEGER))))  NULLS FIRST, CAST(((rt0.c1) ISNULL) AS INTEGER);
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0))) NOT BETWEEN (TRIM(vt1.c2, vt1.c2)) AND (((vt1.c0)OR(vt1.c1))))) ORDER BY ((-1721648293)IS NOT((vt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0))) NOT BETWEEN (TRIM(vt1.c2, vt1.c2)) AND (((vt1.c0)OR(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((-1721648293)IS NOT((vt1.c1 IN ()))));
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0))) NOT BETWEEN (TRIM(vt1.c2, vt1.c2)) AND (((vt1.c0)OR(vt1.c1))))) ORDER BY ((-1721648293)IS NOT((vt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0))) NOT BETWEEN (TRIM(vt1.c2, vt1.c2)) AND (((vt1.c0)OR(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((-1721648293)IS NOT((vt1.c1 IN ()))));
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0))) NOT BETWEEN (TRIM(vt1.c2, vt1.c2)) AND (((vt1.c0)OR(vt1.c1))))) ORDER BY ((-1721648293)IS NOT((vt1.c1 IN ())));
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((((((((t0.c1)OR('-1632699172')))OR(t0.c4)))AND(t0.c0)))OR(t0.c3))))) ORDER BY (((NOT (t0.c1)))!=(((t0.c2)AND(t0.c0)))) ASC  NULLS LAST, (((t0.c0)LIKE(t0.c1)) IN ((t0.c2 IN (t0.c3)), ((t0.c2)&(x'')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((t0.c1)OR('-1632699172')))OR(t0.c4)))AND(t0.c0)))OR(t0.c3))))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c1)))<>(((t0.c2)AND(t0.c0)))) ASC  NULLS LAST, (((t0.c0)LIKE(t0.c1)) IN ((t0.c2 IN (t0.c3)), ((t0.c2)&(x'')))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((((((((t0.c1)OR('-1632699172')))OR(t0.c4)))AND(t0.c0)))OR(t0.c3))))) ORDER BY (((NOT (t0.c1)))!=(((t0.c2)AND(t0.c0)))) ASC  NULLS LAST, (((t0.c0)LIKE(t0.c1)) IN ((t0.c2 IN (t0.c3)), ((t0.c2)&(x'')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((t0.c1)OR('-1632699172')))OR(t0.c4)))AND(t0.c0)))OR(t0.c3))))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c1)))<>(((t0.c2)AND(t0.c0)))) ASC  NULLS LAST, (((t0.c0)LIKE(t0.c1)) IN ((t0.c2 IN (t0.c3)), ((t0.c2)&(x'')))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((((((((t0.c1)OR('-1632699172')))OR(t0.c4)))AND(t0.c0)))OR(t0.c3))))) ORDER BY (((NOT (t0.c1)))!=(((t0.c2)AND(t0.c0)))) ASC  NULLS LAST, (((t0.c0)LIKE(t0.c1)) IN ((t0.c2 IN (t0.c3)), ((t0.c2)&(x'')))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((CASE vt1.c2  WHEN vt1.c0 THEN 0.046312907935513015 ELSE vt1.c1 END)<>(CASE WHEN vt1.c0 THEN vt1.c2 END))) ORDER BY (- (0.5145822483899599)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c2  WHEN vt1.c0 THEN 0.046312907935513015 ELSE vt1.c1 END)!=(CASE WHEN vt1.c0 THEN vt1.c2 END))) IS TRUE)  as count FROM vt1 ORDER BY (- (0.5145822483899599)) DESC);
SELECT ALL * FROM vt1 WHERE (((CASE vt1.c2  WHEN vt1.c0 THEN 0.046312907935513015 ELSE vt1.c1 END)<>(CASE WHEN vt1.c0 THEN vt1.c2 END))) ORDER BY (- (0.5145822483899599)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c2  WHEN vt1.c0 THEN 0.046312907935513015 ELSE vt1.c1 END)!=(CASE WHEN vt1.c0 THEN vt1.c2 END))) IS TRUE)  as count FROM vt1 ORDER BY (- (0.5145822483899599)) DESC);
SELECT ALL * FROM vt1 WHERE (((CASE vt1.c2  WHEN vt1.c0 THEN 0.046312907935513015 ELSE vt1.c1 END)<>(CASE WHEN vt1.c0 THEN vt1.c2 END))) ORDER BY (- (0.5145822483899599)) DESC;
SELECT ALL * FROM rt0, vt1 WHERE ((~ (HEX(DISTINCT rt0.c4))));
SELECT SUM(count) FROM (SELECT (((~ (HEX(DISTINCT rt0.c4)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((~ (HEX(DISTINCT rt0.c4))));
SELECT SUM(count) FROM (SELECT (((~ (HEX(DISTINCT rt0.c4)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((~ (HEX(DISTINCT rt0.c4))));
SELECT ALL * FROM rt0, vt1, t0 WHERE (CAST((t0.c2 IN (t0.c0, rt0.c3)) AS REAL)) ORDER BY ((((((((((vt1.c2)!=(t0.c3)))AND((+ (vt1.c0)))))OR(CASE WHEN rt0.c6 THEN rt0.c4 WHEN rt0.c3 THEN t0.c1 WHEN vt1.c2 THEN rt0.c6 ELSE rt0.c6 END)))AND(CAST(rt0.c2 AS NUMERIC))))AND(CASE WHEN 'P<ZFgNu ' THEN rt0.c6 ELSE t0.c4 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c2 IN (t0.c0, rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((((((((((vt1.c2)<>(t0.c3)))AND((+ (vt1.c0)))))OR(CASE WHEN rt0.c6 THEN rt0.c4 WHEN rt0.c3 THEN t0.c1 WHEN vt1.c2 THEN rt0.c6 ELSE rt0.c6 END)))AND(CAST(rt0.c2 AS NUMERIC))))AND(CASE WHEN 'P<ZFgNu ' THEN rt0.c6 ELSE t0.c4 END))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, t0 WHERE (CAST((t0.c2 IN (t0.c0, rt0.c3)) AS REAL)) ORDER BY ((((((((((vt1.c2)!=(t0.c3)))AND((+ (vt1.c0)))))OR(CASE WHEN rt0.c6 THEN rt0.c4 WHEN rt0.c3 THEN t0.c1 WHEN vt1.c2 THEN rt0.c6 ELSE rt0.c6 END)))AND(CAST(rt0.c2 AS NUMERIC))))AND(CASE WHEN 'P<ZFgNu ' THEN rt0.c6 ELSE t0.c4 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c2 IN (t0.c0, rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((((((((((vt1.c2)<>(t0.c3)))AND((+ (vt1.c0)))))OR(CASE WHEN rt0.c6 THEN rt0.c4 WHEN rt0.c3 THEN t0.c1 WHEN vt1.c2 THEN rt0.c6 ELSE rt0.c6 END)))AND(CAST(rt0.c2 AS NUMERIC))))AND(CASE WHEN 'P<ZFgNu ' THEN rt0.c6 ELSE t0.c4 END))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, t0 WHERE (CAST((t0.c2 IN (t0.c0, rt0.c3)) AS REAL)) ORDER BY ((((((((((vt1.c2)!=(t0.c3)))AND((+ (vt1.c0)))))OR(CASE WHEN rt0.c6 THEN rt0.c4 WHEN rt0.c3 THEN t0.c1 WHEN vt1.c2 THEN rt0.c6 ELSE rt0.c6 END)))AND(CAST(rt0.c2 AS NUMERIC))))AND(CASE WHEN 'P<ZFgNu ' THEN rt0.c6 ELSE t0.c4 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c0)))AND(COALESCE(t0.c4, x'2e38'))))AND(((t0.c1)>>(t0.c3))))) ORDER BY ((0.5252218780464585 COLLATE RTRIM)||((((t0.c0, NULL, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c0)) AND ((t0.c2, t0.c1, t0.c2))))) ASC, t0.c4 DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c0)))AND(COALESCE(t0.c4, x'2e38'))))AND(((t0.c1)>>(t0.c3))))) IS TRUE)  as count FROM t0 ORDER BY ((0.5252218780464585 COLLATE RTRIM)||((((t0.c0, NULL, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c0)) AND ((t0.c2, t0.c1, t0.c2))))) ASC, t0.c4 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c0)))AND(COALESCE(t0.c4, x'2e38'))))AND(((t0.c1)>>(t0.c3))))) ORDER BY ((0.5252218780464585 COLLATE RTRIM)||((((t0.c0, NULL, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c0)) AND ((t0.c2, t0.c1, t0.c2))))) ASC, t0.c4 DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c0)))AND(COALESCE(t0.c4, x'2e38'))))AND(((t0.c1)>>(t0.c3))))) IS TRUE)  as count FROM t0 ORDER BY ((0.5252218780464585 COLLATE RTRIM)||((((t0.c0, NULL, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c0)) AND ((t0.c2, t0.c1, t0.c2))))) ASC, t0.c4 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c0)))AND(COALESCE(t0.c4, x'2e38'))))AND(((t0.c1)>>(t0.c3))))) ORDER BY ((0.5252218780464585 COLLATE RTRIM)||((((t0.c0, NULL, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c0)) AND ((t0.c2, t0.c1, t0.c2))))) ASC, t0.c4 DESC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ (SUBSTR(rt0.c3, t0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((~ (SUBSTR(rt0.c3, t0.c3)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ (SUBSTR(rt0.c3, t0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((~ (SUBSTR(rt0.c3, t0.c3)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ (SUBSTR(rt0.c3, t0.c3))));
SELECT * FROM rt0, vt1 WHERE ((((((rt0.c2) IS TRUE)))<(((rt0.c6 IN (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) IS TRUE)))<(((rt0.c6 IN (vt1.c0)))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt1);
SELECT * FROM rt0, vt1 WHERE ((((((rt0.c2) IS TRUE)))<(((rt0.c6 IN (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) IS TRUE)))<(((rt0.c6 IN (vt1.c0)))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt1);
SELECT * FROM rt0, vt1 WHERE ((((((rt0.c2) IS TRUE)))<(((rt0.c6 IN (vt1.c0))))));
SELECT * FROM vt1 WHERE ((((('c_En')IS NOT(vt1.c0))) NOT BETWEEN (CAST(vt1.c1 AS BLOB)) AND ((~ (vt1.c2))))) ORDER BY (((((vt1.c2))<=((vt1.c0))))==(((((((((vt1.c2)OR(vt1.c0)))AND(vt1.c2)))OR(2005707890)))AND(vt1.c2))))  NULLS FIRST, ((((vt1.c2) BETWEEN (NULL) AND (vt1.c1)))LIKE(vt1.c0)) DESC  NULLS FIRST, 0xfffffffff8806fd8 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('c_En')IS NOT(vt1.c0))) NOT BETWEEN (CAST(vt1.c1 AS BLOB)) AND ((~ (vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c2))<=((vt1.c0))))=(((((((((vt1.c2)OR(vt1.c0)))AND(vt1.c2)))OR(2005707890)))AND(vt1.c2))))  NULLS FIRST, ((((vt1.c2) BETWEEN (NULL) AND (vt1.c1)))LIKE(vt1.c0)) DESC  NULLS FIRST, 0xfffffffff8806fd8 DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ((((('c_En')IS NOT(vt1.c0))) NOT BETWEEN (CAST(vt1.c1 AS BLOB)) AND ((~ (vt1.c2))))) ORDER BY (((((vt1.c2))<=((vt1.c0))))==(((((((((vt1.c2)OR(vt1.c0)))AND(vt1.c2)))OR(2005707890)))AND(vt1.c2))))  NULLS FIRST, ((((vt1.c2) BETWEEN (NULL) AND (vt1.c1)))LIKE(vt1.c0)) DESC  NULLS FIRST, 0xfffffffff8806fd8 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('c_En')IS NOT(vt1.c0))) NOT BETWEEN (CAST(vt1.c1 AS BLOB)) AND ((~ (vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c2))<=((vt1.c0))))=(((((((((vt1.c2)OR(vt1.c0)))AND(vt1.c2)))OR(2005707890)))AND(vt1.c2))))  NULLS FIRST, ((((vt1.c2) BETWEEN (NULL) AND (vt1.c1)))LIKE(vt1.c0)) DESC  NULLS FIRST, 0xfffffffff8806fd8 DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ((((('c_En')IS NOT(vt1.c0))) NOT BETWEEN (CAST(vt1.c1 AS BLOB)) AND ((~ (vt1.c2))))) ORDER BY (((((vt1.c2))<=((vt1.c0))))==(((((((((vt1.c2)OR(vt1.c0)))AND(vt1.c2)))OR(2005707890)))AND(vt1.c2))))  NULLS FIRST, ((((vt1.c2) BETWEEN (NULL) AND (vt1.c1)))LIKE(vt1.c0)) DESC  NULLS FIRST, 0xfffffffff8806fd8 DESC  NULLS LAST;
SELECT ALL * FROM t0, rt0, vt1 WHERE ((((((((((((rt0.c4))<=((vt1.c0))))AND(CAST(rt0.c5 AS INTEGER))))AND((- (rt0.c3)))))AND((t0.c0 IN (x'a7eb')))))OR(vt1.c2 COLLATE RTRIM))) ORDER BY ((((((rt0.c4)AND(vt1.c0)))OR(vt1.c2))) IS FALSE) DESC  NULLS LAST, rt0.c4 DESC  NULLS LAST, ((((((rt0.c3, rt0.c3, vt1.c0)) NOT BETWEEN ((t0.c3, t0.c3, t0.c4)) AND ((t0.c4, t0.c1, x''))), (t0.c3 IN (t0.c2, rt0.c1)), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END))!=((CASE WHEN rt0.c0 THEN x'' ELSE rt0.c2 END, (~ (rt0.c3)), CASE rt0.c1  WHEN t0.c1 THEN '-441233884' ELSE rt0.c3 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c4))<=((vt1.c0))))AND(CAST(rt0.c5 AS INTEGER))))AND((- (rt0.c3)))))AND((t0.c0 IN (x'a7eb')))))OR(vt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((((rt0.c4)AND(vt1.c0)))OR(vt1.c2))) IS FALSE) DESC  NULLS LAST, rt0.c4 DESC  NULLS LAST, ((((((rt0.c3, rt0.c3, vt1.c0)) NOT BETWEEN ((t0.c3, t0.c3, t0.c4)) AND ((t0.c4, t0.c1, x''))), (t0.c3 IN (t0.c2, rt0.c1)), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END))<>((CASE WHEN rt0.c0 THEN x'' ELSE rt0.c2 END, (~ (rt0.c3)), CASE rt0.c1  WHEN t0.c1 THEN '-441233884' ELSE rt0.c3 END)))  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt1 WHERE ((((((((((((rt0.c4))<=((vt1.c0))))AND(CAST(rt0.c5 AS INTEGER))))AND((- (rt0.c3)))))AND((t0.c0 IN (x'a7eb')))))OR(vt1.c2 COLLATE RTRIM))) ORDER BY ((((((rt0.c4)AND(vt1.c0)))OR(vt1.c2))) IS FALSE) DESC  NULLS LAST, rt0.c4 DESC  NULLS LAST, ((((((rt0.c3, rt0.c3, vt1.c0)) NOT BETWEEN ((t0.c3, t0.c3, t0.c4)) AND ((t0.c4, t0.c1, x''))), (t0.c3 IN (t0.c2, rt0.c1)), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END))!=((CASE WHEN rt0.c0 THEN x'' ELSE rt0.c2 END, (~ (rt0.c3)), CASE rt0.c1  WHEN t0.c1 THEN '-441233884' ELSE rt0.c3 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c4))<=((vt1.c0))))AND(CAST(rt0.c5 AS INTEGER))))AND((- (rt0.c3)))))AND((t0.c0 IN (x'a7eb')))))OR(vt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((((rt0.c4)AND(vt1.c0)))OR(vt1.c2))) IS FALSE) DESC  NULLS LAST, rt0.c4 DESC  NULLS LAST, ((((((rt0.c3, rt0.c3, vt1.c0)) NOT BETWEEN ((t0.c3, t0.c3, t0.c4)) AND ((t0.c4, t0.c1, x''))), (t0.c3 IN (t0.c2, rt0.c1)), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END))<>((CASE WHEN rt0.c0 THEN x'' ELSE rt0.c2 END, (~ (rt0.c3)), CASE rt0.c1  WHEN t0.c1 THEN '-441233884' ELSE rt0.c3 END)))  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt1 WHERE ((((((((((((rt0.c4))<=((vt1.c0))))AND(CAST(rt0.c5 AS INTEGER))))AND((- (rt0.c3)))))AND((t0.c0 IN (x'a7eb')))))OR(vt1.c2 COLLATE RTRIM))) ORDER BY ((((((rt0.c4)AND(vt1.c0)))OR(vt1.c2))) IS FALSE) DESC  NULLS LAST, rt0.c4 DESC  NULLS LAST, ((((((rt0.c3, rt0.c3, vt1.c0)) NOT BETWEEN ((t0.c3, t0.c3, t0.c4)) AND ((t0.c4, t0.c1, x''))), (t0.c3 IN (t0.c2, rt0.c1)), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END))!=((CASE WHEN rt0.c0 THEN x'' ELSE rt0.c2 END, (~ (rt0.c3)), CASE rt0.c1  WHEN t0.c1 THEN '-441233884' ELSE rt0.c3 END)))  NULLS FIRST;
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (vt1.c1);
SELECT * FROM rt0, vt1, t0 WHERE (CASE WHEN t0.c4 COLLATE RTRIM THEN 0Xffffffffc3403a3a ELSE ((t0.c4)>=(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c4 COLLATE RTRIM THEN 0xffffffffc3403a3a ELSE ((t0.c4)>=(rt0.c2)) END) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE (CASE WHEN t0.c4 COLLATE RTRIM THEN 0Xffffffffc3403a3a ELSE ((t0.c4)>=(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c4 COLLATE RTRIM THEN 0xffffffffc3403a3a ELSE ((t0.c4)>=(rt0.c2)) END) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE (CASE WHEN t0.c4 COLLATE RTRIM THEN 0Xffffffffc3403a3a ELSE ((t0.c4)>=(rt0.c2)) END);
SELECT * FROM rt0, t0 WHERE ((TRIM(rt0.c5) IN ((0.44495612847489663 IN ()))));
SELECT SUM(count) FROM (SELECT (((TRIM(rt0.c5) IN ((0.44495612847489663 IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((TRIM(rt0.c5) IN ((0.44495612847489663 IN ()))));
SELECT SUM(count) FROM (SELECT (((TRIM(rt0.c5) IN ((0.44495612847489663 IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((TRIM(rt0.c5) IN ((0.44495612847489663 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c3)) NOT BETWEEN ((vt1.c2)) AND ((rt0.c3)))))<>((CASE WHEN rt0.c6 THEN vt1.c2 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)) NOT BETWEEN ((vt1.c2)) AND ((rt0.c3)))))!=((CASE WHEN rt0.c6 THEN vt1.c2 END)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c3)) NOT BETWEEN ((vt1.c2)) AND ((rt0.c3)))))<>((CASE WHEN rt0.c6 THEN vt1.c2 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)) NOT BETWEEN ((vt1.c2)) AND ((rt0.c3)))))!=((CASE WHEN rt0.c6 THEN vt1.c2 END)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c3)) NOT BETWEEN ((vt1.c2)) AND ((rt0.c3)))))<>((CASE WHEN rt0.c6 THEN vt1.c2 END))));
SELECT ALL COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN t0 ON ((vt1.c1) NOT NULL) COLLATE NOCASE WHERE ((CAST(rt0.c5 AS INTEGER) IN (((t0.c3)<=(rt0.c6))))) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND (((+ (rt0.c5)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c5 AS INTEGER) IN (((t0.c3)<=(rt0.c6))))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN t0 ON ((vt1.c1) NOT NULL) COLLATE NOCASE ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND (((+ (rt0.c5)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN t0 ON ((vt1.c1) NOT NULL) COLLATE NOCASE WHERE ((CAST(rt0.c5 AS INTEGER) IN (((t0.c3)<=(rt0.c6))))) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND (((+ (rt0.c5)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c5 AS INTEGER) IN (((t0.c3)<=(rt0.c6))))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN t0 ON ((vt1.c1) NOT NULL) COLLATE NOCASE ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND (((+ (rt0.c5)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN t0 ON ((vt1.c1) NOT NULL) COLLATE NOCASE WHERE ((CAST(rt0.c5 AS INTEGER) IN (((t0.c3)<=(rt0.c6))))) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND (((+ (rt0.c5)))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt1 ON ((t0.c3)AND(((rt0.c4)!=(rt0.c1)))) WHERE (CASE WHEN rt0.c0 THEN ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c5)))AND(vt1.c2)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c5)))AND(vt1.c2)))OR(t0.c0)) END) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt1 ON ((t0.c3)AND(((rt0.c4)<>(rt0.c1)))));
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt1 ON ((t0.c3)AND(((rt0.c4)!=(rt0.c1)))) WHERE (CASE WHEN rt0.c0 THEN ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c5)))AND(vt1.c2)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c5)))AND(vt1.c2)))OR(t0.c0)) END) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt1 ON ((t0.c3)AND(((rt0.c4)<>(rt0.c1)))));
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt1 ON ((t0.c3)AND(((rt0.c4)!=(rt0.c1)))) WHERE (CASE WHEN rt0.c0 THEN ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c5)))AND(vt1.c2)))OR(t0.c0)) END);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((((582264798)AND(rt0.c0)))AND((t0.c0 IN ()))) RIGHT OUTER JOIN rt0 ON (NOT (NULL)) WHERE (CASE ((('vo9\C'))<=((rt0.c5)))  WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c1)) THEN ((t0.c0) NOT BETWEEN (rt0.c6) AND (vt1.c1)) ELSE ((t0.c1) BETWEEN (vt1.c2) AND (rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((('vo9\C'))<=((rt0.c5)))  WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c1)) THEN ((t0.c0) NOT BETWEEN (rt0.c6) AND (vt1.c1)) ELSE ((t0.c1) BETWEEN (vt1.c2) AND (rt0.c4)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((582264798)AND(rt0.c0)))AND((t0.c0 IN ()))) RIGHT OUTER JOIN rt0 ON (NOT (NULL)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((((582264798)AND(rt0.c0)))AND((t0.c0 IN ()))) RIGHT OUTER JOIN rt0 ON (NOT (NULL)) WHERE (CASE ((('vo9\C'))<=((rt0.c5)))  WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c1)) THEN ((t0.c0) NOT BETWEEN (rt0.c6) AND (vt1.c1)) ELSE ((t0.c1) BETWEEN (vt1.c2) AND (rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((('vo9\C'))<=((rt0.c5)))  WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c1)) THEN ((t0.c0) NOT BETWEEN (rt0.c6) AND (vt1.c1)) ELSE ((t0.c1) BETWEEN (vt1.c2) AND (rt0.c4)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((582264798)AND(rt0.c0)))AND((t0.c0 IN ()))) RIGHT OUTER JOIN rt0 ON (NOT (NULL)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((((582264798)AND(rt0.c0)))AND((t0.c0 IN ()))) RIGHT OUTER JOIN rt0 ON (NOT (NULL)) WHERE (CASE ((('vo9\C'))<=((rt0.c5)))  WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c1)) THEN ((t0.c0) NOT BETWEEN (rt0.c6) AND (vt1.c1)) ELSE ((t0.c1) BETWEEN (vt1.c2) AND (rt0.c4)) END);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c1) NOT BETWEEN (vt1.c0) AND (((vt1.c0)|(vt1.c0))))) ORDER BY ((IFNULL(vt1.c0, vt1.c2))GLOB((((vt1.c2, x'cc4c', vt1.c2))=((vt1.c0, vt1.c0, vt1.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((IFNULL(vt1.c0, vt1.c2))GLOB((((vt1.c2, x'cc4c', vt1.c2))=((vt1.c0, vt1.c0, vt1.c2))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c1) NOT BETWEEN (vt1.c0) AND (((vt1.c0)|(vt1.c0))))) ORDER BY ((IFNULL(vt1.c0, vt1.c2))GLOB((((vt1.c2, x'cc4c', vt1.c2))=((vt1.c0, vt1.c0, vt1.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((IFNULL(vt1.c0, vt1.c2))GLOB((((vt1.c2, x'cc4c', vt1.c2))=((vt1.c0, vt1.c0, vt1.c2))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c1) NOT BETWEEN (vt1.c0) AND (((vt1.c0)|(vt1.c0))))) ORDER BY ((IFNULL(vt1.c0, vt1.c2))GLOB((((vt1.c2, x'cc4c', vt1.c2))=((vt1.c0, vt1.c0, vt1.c2))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c6)))AND(((rt0.c1) IS TRUE))))AND(((rt0.c2) IS TRUE)))) ORDER BY CASE ((((rt0.c4)OR(rt0.c6)))AND(rt0.c3))  WHEN (NOT (rt0.c5)) THEN rt0.c6 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c6)))AND(((rt0.c1) IS TRUE))))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((rt0.c4)OR(rt0.c6)))AND(rt0.c3))  WHEN (NOT (rt0.c5)) THEN rt0.c6 END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c6)))AND(((rt0.c1) IS TRUE))))AND(((rt0.c2) IS TRUE)))) ORDER BY CASE ((((rt0.c4)OR(rt0.c6)))AND(rt0.c3))  WHEN (NOT (rt0.c5)) THEN rt0.c6 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c6)))AND(((rt0.c1) IS TRUE))))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((rt0.c4)OR(rt0.c6)))AND(rt0.c3))  WHEN (NOT (rt0.c5)) THEN rt0.c6 END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c6)))AND(((rt0.c1) IS TRUE))))AND(((rt0.c2) IS TRUE)))) ORDER BY CASE ((((rt0.c4)OR(rt0.c6)))AND(rt0.c3))  WHEN (NOT (rt0.c5)) THEN rt0.c6 END  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE ((- (((rt0.c5)>(rt0.c0))))) ORDER BY ((CAST(vt1.c0 AS INTEGER))!=(((((rt0.c2)AND(rt0.c4)))AND(rt0.c4))))  NULLS FIRST, (~ (rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c5)>(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(vt1.c0 AS INTEGER))<>(((((rt0.c2)AND(rt0.c4)))AND(rt0.c4))))  NULLS FIRST, (~ (rt0.c2 COLLATE BINARY)));
SELECT ALL * FROM vt1, rt0 WHERE ((- (((rt0.c5)>(rt0.c0))))) ORDER BY ((CAST(vt1.c0 AS INTEGER))!=(((((rt0.c2)AND(rt0.c4)))AND(rt0.c4))))  NULLS FIRST, (~ (rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c5)>(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(vt1.c0 AS INTEGER))<>(((((rt0.c2)AND(rt0.c4)))AND(rt0.c4))))  NULLS FIRST, (~ (rt0.c2 COLLATE BINARY)));
SELECT ALL * FROM vt1, rt0 WHERE ((- (((rt0.c5)>(rt0.c0))))) ORDER BY ((CAST(vt1.c0 AS INTEGER))!=(((((rt0.c2)AND(rt0.c4)))AND(rt0.c4))))  NULLS FIRST, (~ (rt0.c2 COLLATE BINARY));
SELECT * FROM t0, rt0, vt1 WHERE ((((NOT (vt1.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c2))) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE ((((NOT (vt1.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c2))) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE ((((NOT (vt1.c2))) NOT NULL));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c3)))OR(t0.c0)))|((t0.c1 IN ())))) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c3)))OR(t0.c0)))|((t0.c1 IN ())))) IS TRUE)  as count FROM t0 ORDER BY t0.c1);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c3)))OR(t0.c0)))|((t0.c1 IN ())))) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c3)))OR(t0.c0)))|((t0.c1 IN ())))) IS TRUE)  as count FROM t0 ORDER BY t0.c1);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c3)))OR(t0.c0)))|((t0.c1 IN ())))) ORDER BY t0.c1;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2)) BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CHAR(vt1.c0, vt1.c0, vt1.c1))))) ORDER BY (((vt1.c1, vt1.c1, vt1.c1)) NOT BETWEEN ((((vt1.c0) NOTNULL), (vt1.c1 IN (vt1.c1, vt1.c1)), ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))) AND (((~ (vt1.c1)), vt1.c0, vt1.c0 COLLATE BINARY))) ASC  NULLS FIRST, (((0.5153536365730709, 0Xfffffffffb236a12, vt1.c1)) NOT BETWEEN (((- (vt1.c2)), TYPEOF(DISTINCT vt1.c2), (vt1.c0 IN ()))) AND ((((vt1.c2)!=(vt1.c0)), NULL, (+ ('2005707890')))));
SELECT SUM(count) FROM (SELECT (((((vt1.c2)) BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CHAR(vt1.c0, vt1.c0, vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1, vt1.c1, vt1.c1)) NOT BETWEEN ((((vt1.c0) NOTNULL), (vt1.c1 IN (vt1.c1, vt1.c1)), ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))) AND (((~ (vt1.c1)), vt1.c0, vt1.c0 COLLATE BINARY))) ASC  NULLS FIRST, (((0.5153536365730709, 0Xfffffffffb236a12, vt1.c1)) NOT BETWEEN (((- (vt1.c2)), TYPEOF(DISTINCT vt1.c2), (vt1.c0 IN ()))) AND ((((vt1.c2)<>(vt1.c0)), NULL, (+ ('2005707890'))))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2)) BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CHAR(vt1.c0, vt1.c0, vt1.c1))))) ORDER BY (((vt1.c1, vt1.c1, vt1.c1)) NOT BETWEEN ((((vt1.c0) NOTNULL), (vt1.c1 IN (vt1.c1, vt1.c1)), ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))) AND (((~ (vt1.c1)), vt1.c0, vt1.c0 COLLATE BINARY))) ASC  NULLS FIRST, (((0.5153536365730709, 0Xfffffffffb236a12, vt1.c1)) NOT BETWEEN (((- (vt1.c2)), TYPEOF(DISTINCT vt1.c2), (vt1.c0 IN ()))) AND ((((vt1.c2)!=(vt1.c0)), NULL, (+ ('2005707890')))));
SELECT SUM(count) FROM (SELECT (((((vt1.c2)) BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CHAR(vt1.c0, vt1.c0, vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1, vt1.c1, vt1.c1)) NOT BETWEEN ((((vt1.c0) NOTNULL), (vt1.c1 IN (vt1.c1, vt1.c1)), ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))) AND (((~ (vt1.c1)), vt1.c0, vt1.c0 COLLATE BINARY))) ASC  NULLS FIRST, (((0.5153536365730709, 0Xfffffffffb236a12, vt1.c1)) NOT BETWEEN (((- (vt1.c2)), TYPEOF(DISTINCT vt1.c2), (vt1.c0 IN ()))) AND ((((vt1.c2)<>(vt1.c0)), NULL, (+ ('2005707890'))))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2)) BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CHAR(vt1.c0, vt1.c0, vt1.c1))))) ORDER BY (((vt1.c1, vt1.c1, vt1.c1)) NOT BETWEEN ((((vt1.c0) NOTNULL), (vt1.c1 IN (vt1.c1, vt1.c1)), ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))) AND (((~ (vt1.c1)), vt1.c0, vt1.c0 COLLATE BINARY))) ASC  NULLS FIRST, (((0.5153536365730709, 0Xfffffffffb236a12, vt1.c1)) NOT BETWEEN (((- (vt1.c2)), TYPEOF(DISTINCT vt1.c2), (vt1.c0 IN ()))) AND ((((vt1.c2)!=(vt1.c0)), NULL, (+ ('2005707890')))));
SELECT * FROM vt1, rt0 WHERE (-8.1565166E7);
SELECT SUM(count) FROM (SELECT ((-8.1565166E7) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (-8.1565166E7);
SELECT SUM(count) FROM (SELECT ((-8.1565166E7) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (-8.1565166E7);
SELECT * FROM t0, vt1, rt0 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE (vt1.c2);
SELECT * FROM t0 WHERE (((((t0.c3)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c3)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c3)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c3)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c3)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON CAST(((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c2)) AS INTEGER) WHERE ((((rt0.c0)AND(t0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)AND(t0.c3)) IN ())) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CAST(((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c2)) AS INTEGER));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON CAST(((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c2)) AS INTEGER) WHERE ((((rt0.c0)AND(t0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)AND(t0.c3)) IN ())) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CAST(((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c2)) AS INTEGER));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON CAST(((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c2)) AS INTEGER) WHERE ((((rt0.c0)AND(t0.c3)) IN ()));
SELECT ALL * FROM vt1 WHERE (CAST(UPPER(vt1.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(vt1.c0) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(UPPER(vt1.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(vt1.c0) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(UPPER(vt1.c0) AS TEXT));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON CASE ((rt0.c3) NOTNULL)  WHEN (rt0.c5 IN (rt0.c5)) THEN ((x'') BETWEEN (rt0.c6) AND (rt0.c2)) END WHERE (((((CAST(vt1.c2 AS INTEGER))OR(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c5)))))AND((('')*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c2 AS INTEGER))OR(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c5)))))AND((('')*(rt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CASE ((rt0.c3) NOTNULL)  WHEN (rt0.c5 IN (rt0.c5)) THEN ((x'') BETWEEN (rt0.c6) AND (rt0.c2)) END);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON CASE ((rt0.c3) NOTNULL)  WHEN (rt0.c5 IN (rt0.c5)) THEN ((x'') BETWEEN (rt0.c6) AND (rt0.c2)) END WHERE (((((CAST(vt1.c2 AS INTEGER))OR(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c5)))))AND((('')*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c2 AS INTEGER))OR(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c5)))))AND((('')*(rt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CASE ((rt0.c3) NOTNULL)  WHEN (rt0.c5 IN (rt0.c5)) THEN ((x'') BETWEEN (rt0.c6) AND (rt0.c2)) END);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON CASE ((rt0.c3) NOTNULL)  WHEN (rt0.c5 IN (rt0.c5)) THEN ((x'') BETWEEN (rt0.c6) AND (rt0.c2)) END WHERE (((((CAST(vt1.c2 AS INTEGER))OR(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c5)))))AND((('')*(rt0.c0)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON ']̙' WHERE (((((t0.c1) BETWEEN (t0.c3) AND (vt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) BETWEEN (t0.c3) AND (vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ']̙');
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON ']̙' WHERE (((((t0.c1) BETWEEN (t0.c3) AND (vt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) BETWEEN (t0.c3) AND (vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ']̙');
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON ']̙' WHERE (((((t0.c1) BETWEEN (t0.c3) AND (vt1.c1))) NOT NULL));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c4) NOT BETWEEN (t0.c2) AND (t0.c0)) IN (x'24a1' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((t0.c4) NOT BETWEEN (t0.c2) AND (t0.c0)) IN (x'24a1' COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c4) NOT BETWEEN (t0.c2) AND (t0.c0)) IN (x'24a1' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((t0.c4) NOT BETWEEN (t0.c2) AND (t0.c0)) IN (x'24a1' COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c4) NOT BETWEEN (t0.c2) AND (t0.c0)) IN (x'24a1' COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((CASE rt0.c0  WHEN t0.c2 THEN vt1.c2 ELSE rt0.c6 END)+(t0.c2)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN t0.c2 THEN vt1.c2 ELSE rt0.c6 END)+(t0.c2))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((CASE rt0.c0  WHEN t0.c2 THEN vt1.c2 ELSE rt0.c6 END)+(t0.c2)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN t0.c2 THEN vt1.c2 ELSE rt0.c6 END)+(t0.c2))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((CASE rt0.c0  WHEN t0.c2 THEN vt1.c2 ELSE rt0.c6 END)+(t0.c2)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((t0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) AS TEXT)) ORDER BY (((NOT (rt0.c5))) BETWEEN (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c0))) AND ((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((NOT (rt0.c5))) BETWEEN (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c0))) AND ((+ (rt0.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((t0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) AS TEXT)) ORDER BY (((NOT (rt0.c5))) BETWEEN (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c0))) AND ((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((NOT (rt0.c5))) BETWEEN (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c0))) AND ((+ (rt0.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((t0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) AS TEXT)) ORDER BY (((NOT (rt0.c5))) BETWEEN (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c0))) AND ((+ (rt0.c2))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST((((t0.c1)) NOT BETWEEN ((t0.c3)) AND ((rt0.c6))) AS INTEGER)) ORDER BY (((((((((t0.c4)AND(rt0.c3)))AND(rt0.c0)))AND(t0.c4)))OR(rt0.c3)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c1)) NOT BETWEEN ((t0.c3)) AND ((rt0.c6))) AS INTEGER)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((((((t0.c4)AND(rt0.c3)))AND(rt0.c0)))AND(t0.c4)))OR(rt0.c3)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST((((t0.c1)) NOT BETWEEN ((t0.c3)) AND ((rt0.c6))) AS INTEGER)) ORDER BY (((((((((t0.c4)AND(rt0.c3)))AND(rt0.c0)))AND(t0.c4)))OR(rt0.c3)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c1)) NOT BETWEEN ((t0.c3)) AND ((rt0.c6))) AS INTEGER)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((((((t0.c4)AND(rt0.c3)))AND(rt0.c0)))AND(t0.c4)))OR(rt0.c3)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST((((t0.c1)) NOT BETWEEN ((t0.c3)) AND ((rt0.c6))) AS INTEGER)) ORDER BY (((((((((t0.c4)AND(rt0.c3)))AND(rt0.c0)))AND(t0.c4)))OR(rt0.c3)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (CAST((rt0.c4 IN (0Xfffffffff81f083b)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c4 IN (0xfffffffff81f083b)) AS TEXT)) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (CAST((rt0.c4 IN (0Xfffffffff81f083b)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c4 IN (0xfffffffff81f083b)) AS TEXT)) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (CAST((rt0.c4 IN (0Xfffffffff81f083b)) AS TEXT));
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((((t0.c1)AND(CASE WHEN t0.c1 THEN t0.c4 WHEN t0.c1 THEN t0.c2 WHEN vt1.c2 THEN t0.c3 END)))AND(((((((((vt1.c1)AND(t0.c4)))OR(t0.c0)))AND(t0.c2)))AND(t0.c1)))))AND(((t0.c2)/(t0.c3)))))OR((t0.c3 IN (vt1.c2))))) ORDER BY 0.9395732467207752 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c1)AND(CASE WHEN t0.c1 THEN t0.c4 WHEN t0.c1 THEN t0.c2 WHEN vt1.c2 THEN t0.c3 END)))AND(((((((((vt1.c1)AND(t0.c4)))OR(t0.c0)))AND(t0.c2)))AND(t0.c1)))))AND(((t0.c2)/(t0.c3)))))OR((t0.c3 IN (vt1.c2))))) IS TRUE)  as count FROM vt1, t0 ORDER BY 0.9395732467207752 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((((t0.c1)AND(CASE WHEN t0.c1 THEN t0.c4 WHEN t0.c1 THEN t0.c2 WHEN vt1.c2 THEN t0.c3 END)))AND(((((((((vt1.c1)AND(t0.c4)))OR(t0.c0)))AND(t0.c2)))AND(t0.c1)))))AND(((t0.c2)/(t0.c3)))))OR((t0.c3 IN (vt1.c2))))) ORDER BY 0.9395732467207752 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c1)AND(CASE WHEN t0.c1 THEN t0.c4 WHEN t0.c1 THEN t0.c2 WHEN vt1.c2 THEN t0.c3 END)))AND(((((((((vt1.c1)AND(t0.c4)))OR(t0.c0)))AND(t0.c2)))AND(t0.c1)))))AND(((t0.c2)/(t0.c3)))))OR((t0.c3 IN (vt1.c2))))) IS TRUE)  as count FROM vt1, t0 ORDER BY 0.9395732467207752 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((((t0.c1)AND(CASE WHEN t0.c1 THEN t0.c4 WHEN t0.c1 THEN t0.c2 WHEN vt1.c2 THEN t0.c3 END)))AND(((((((((vt1.c1)AND(t0.c4)))OR(t0.c0)))AND(t0.c2)))AND(t0.c1)))))AND(((t0.c2)/(t0.c3)))))OR((t0.c3 IN (vt1.c2))))) ORDER BY 0.9395732467207752 DESC  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE (((((vt1.c0)>=('-384663405'))) IS TRUE)) ORDER BY ((((x'415c') IS FALSE)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=('-384663405'))) IS TRUE)) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((x'415c') IS FALSE)) IS TRUE));
SELECT * FROM t0, vt1 WHERE (((((vt1.c0)>=('-384663405'))) IS TRUE)) ORDER BY ((((x'415c') IS FALSE)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=('-384663405'))) IS TRUE)) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((x'415c') IS FALSE)) IS TRUE));
SELECT * FROM t0, vt1 WHERE (((((vt1.c0)>=('-384663405'))) IS TRUE)) ORDER BY ((((x'415c') IS FALSE)) IS TRUE);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((t0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((t0.c1) IS TRUE))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((t0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((t0.c1) IS TRUE))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((t0.c1) IS TRUE)))));
SELECT * FROM rt0 WHERE (CAST(x'279c' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'279c' AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(x'279c' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'279c' AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(x'279c' AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c1);
SELECT ALL * FROM t0 WHERE (((TYPEOF(t0.c3))<=(((t0.c0) NOTNULL)))) ORDER BY (((((((t0.c3))<=((t0.c4))))AND(0.2323577486943973)))AND(((t0.c4) NOT NULL)))  NULLS FIRST, 0.7695943864820968 ASC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(t0.c3))<=(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY (((((((t0.c3))<=((t0.c4))))AND(0.2323577486943973)))AND(((t0.c4) NOT NULL)))  NULLS FIRST, 0.7695943864820968 ASC);
SELECT ALL * FROM t0 WHERE (((TYPEOF(t0.c3))<=(((t0.c0) NOTNULL)))) ORDER BY (((((((t0.c3))<=((t0.c4))))AND(0.2323577486943973)))AND(((t0.c4) NOT NULL)))  NULLS FIRST, 0.7695943864820968 ASC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(t0.c3))<=(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY (((((((t0.c3))<=((t0.c4))))AND(0.2323577486943973)))AND(((t0.c4) NOT NULL)))  NULLS FIRST, 0.7695943864820968 ASC);
SELECT ALL * FROM t0 WHERE (((TYPEOF(t0.c3))<=(((t0.c0) NOTNULL)))) ORDER BY (((((((t0.c3))<=((t0.c4))))AND(0.2323577486943973)))AND(((t0.c4) NOT NULL)))  NULLS FIRST, 0.7695943864820968 ASC;
SELECT COUNT(*) FROM vt1 WHERE (((((((NULL)<=(vt1.c0)))AND(((vt1.c1) IS FALSE))))AND(((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c0)))OR(x'0ab0')))OR(vt1.c1))))) ORDER BY RTRIM(x'') ASC;
SELECT SUM(count) FROM (SELECT ((((((((NULL)<=(vt1.c0)))AND(((vt1.c1) IS FALSE))))AND(((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c0)))OR(x'0ab0')))OR(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY RTRIM(x'') ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((((NULL)<=(vt1.c0)))AND(((vt1.c1) IS FALSE))))AND(((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c0)))OR(x'0ab0')))OR(vt1.c1))))) ORDER BY RTRIM(x'') ASC;
SELECT SUM(count) FROM (SELECT ((((((((NULL)<=(vt1.c0)))AND(((vt1.c1) IS FALSE))))AND(((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c0)))OR(x'0ab0')))OR(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY RTRIM(x'') ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((((NULL)<=(vt1.c0)))AND(((vt1.c1) IS FALSE))))AND(((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c0)))OR(x'0ab0')))OR(vt1.c1))))) ORDER BY RTRIM(x'') ASC;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c1) BETWEEN (rt0.c0) AND (NULL))) IS TRUE) RIGHT OUTER JOIN vt1 ON (((t0.c0 IN ()))<=((((vt1.c1)) NOT BETWEEN ((rt0.c4)) AND ((t0.c0))))) WHERE (((0xffffffffb4a150e6) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (vt1.c0))) ORDER BY ((CASE WHEN t0.c2 THEN rt0.c1 END) BETWEEN (((((rt0.c6)AND(rt0.c5)))OR(rt0.c2))) AND (((0.005246833740975454) BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((0xffffffffb4a150e6) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (vt1.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c1) BETWEEN (rt0.c0) AND (NULL))) IS TRUE) RIGHT OUTER JOIN vt1 ON (((t0.c0 IN ()))<=((((vt1.c1)) NOT BETWEEN ((rt0.c4)) AND ((t0.c0))))) ORDER BY ((CASE WHEN t0.c2 THEN rt0.c1 END) BETWEEN (((((rt0.c6)AND(rt0.c5)))OR(rt0.c2))) AND (((0.005246833740975454) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c1) BETWEEN (rt0.c0) AND (NULL))) IS TRUE) RIGHT OUTER JOIN vt1 ON (((t0.c0 IN ()))<=((((vt1.c1)) NOT BETWEEN ((rt0.c4)) AND ((t0.c0))))) WHERE (((0xffffffffb4a150e6) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (vt1.c0))) ORDER BY ((CASE WHEN t0.c2 THEN rt0.c1 END) BETWEEN (((((rt0.c6)AND(rt0.c5)))OR(rt0.c2))) AND (((0.005246833740975454) BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((0xffffffffb4a150e6) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (vt1.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c1) BETWEEN (rt0.c0) AND (NULL))) IS TRUE) RIGHT OUTER JOIN vt1 ON (((t0.c0 IN ()))<=((((vt1.c1)) NOT BETWEEN ((rt0.c4)) AND ((t0.c0))))) ORDER BY ((CASE WHEN t0.c2 THEN rt0.c1 END) BETWEEN (((((rt0.c6)AND(rt0.c5)))OR(rt0.c2))) AND (((0.005246833740975454) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c1) BETWEEN (rt0.c0) AND (NULL))) IS TRUE) RIGHT OUTER JOIN vt1 ON (((t0.c0 IN ()))<=((((vt1.c1)) NOT BETWEEN ((rt0.c4)) AND ((t0.c0))))) WHERE (((0xffffffffb4a150e6) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (vt1.c0))) ORDER BY ((CASE WHEN t0.c2 THEN rt0.c1 END) BETWEEN (((((rt0.c6)AND(rt0.c5)))OR(rt0.c2))) AND (((0.005246833740975454) BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT ALL * FROM rt0, vt1, t0 WHERE (((t0.c3) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c3) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0, vt1, t0 WHERE (((t0.c3) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c3) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0, vt1, t0 WHERE (((t0.c3) NOTNULL) COLLATE NOCASE);
SELECT ALL * FROM rt0, t0, vt1 WHERE (NULLIF(((rt0.c6) NOT BETWEEN (t0.c2) AND (rt0.c3)), (((0.611558223274912, rt0.c6, t0.c1))==((vt1.c2, vt1.c0, t0.c2)))));
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt0.c6) NOT BETWEEN (t0.c2) AND (rt0.c3)), (((0.611558223274912, rt0.c6, t0.c1))=((vt1.c2, vt1.c0, t0.c2))))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (NULLIF(((rt0.c6) NOT BETWEEN (t0.c2) AND (rt0.c3)), (((0.611558223274912, rt0.c6, t0.c1))==((vt1.c2, vt1.c0, t0.c2)))));
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt0.c6) NOT BETWEEN (t0.c2) AND (rt0.c3)), (((0.611558223274912, rt0.c6, t0.c1))=((vt1.c2, vt1.c0, t0.c2))))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (NULLIF(((rt0.c6) NOT BETWEEN (t0.c2) AND (rt0.c3)), (((0.611558223274912, rt0.c6, t0.c1))==((vt1.c2, vt1.c0, t0.c2)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((((((vt1.c2)IS NOT(t0.c1)))AND(((rt0.c2) NOT NULL))))AND(((((vt1.c2)AND(NULL)))OR(t0.c1))))) ORDER BY ((0.5763159750214761)LIKE(CASE WHEN t0.c2 THEN t0.c0 END)) DESC  NULLS FIRST, 0x4336abe DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c2)IS NOT(t0.c1)))AND(((rt0.c2) NOT NULL))))AND(((((vt1.c2)AND(NULL)))OR(t0.c1))))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((0.5763159750214761)LIKE(CASE WHEN t0.c2 THEN t0.c0 END)) DESC  NULLS FIRST, 0x4336abe DESC);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((((((vt1.c2)IS NOT(t0.c1)))AND(((rt0.c2) NOT NULL))))AND(((((vt1.c2)AND(NULL)))OR(t0.c1))))) ORDER BY ((0.5763159750214761)LIKE(CASE WHEN t0.c2 THEN t0.c0 END)) DESC  NULLS FIRST, 0x4336abe DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c2)IS NOT(t0.c1)))AND(((rt0.c2) NOT NULL))))AND(((((vt1.c2)AND(NULL)))OR(t0.c1))))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((0.5763159750214761)LIKE(CASE WHEN t0.c2 THEN t0.c0 END)) DESC  NULLS FIRST, 0x4336abe DESC);
SELECT * FROM vt1 WHERE (((CAST(vt1.c2 AS INTEGER))>=(CASE WHEN x'' THEN vt1.c2 ELSE vt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c2 AS INTEGER))>=(CASE WHEN x'' THEN vt1.c2 ELSE vt1.c2 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c2 AS INTEGER))>=(CASE WHEN x'' THEN vt1.c2 ELSE vt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c2 AS INTEGER))>=(CASE WHEN x'' THEN vt1.c2 ELSE vt1.c2 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c2 AS INTEGER))>=(CASE WHEN x'' THEN vt1.c2 ELSE vt1.c2 END)));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c3)-(t0.c3)))>=(((t0.c4)||(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c3)-(t0.c3)))>=(((t0.c4)||(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c3)-(t0.c3)))>=(((t0.c4)||(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c3)-(t0.c3)))>=(((t0.c4)||(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c3)-(t0.c3)))>=(((t0.c4)||(t0.c1)))));
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((rt0.c6) NOT NULL))%((rt0.c4 IN (t0.c0))))) ORDER BY ((((((((rt0.c0)AND(rt0.c3)))AND(t0.c1)))OR(t0.c0)))AND(CASE WHEN rt0.c6 THEN vt1.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c6) NOT NULL))%((rt0.c4 IN (t0.c0))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY ((((((((rt0.c0)AND(rt0.c3)))AND(t0.c1)))OR(t0.c0)))AND(CASE WHEN rt0.c6 THEN vt1.c2 END))  NULLS LAST);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((rt0.c6) NOT NULL))%((rt0.c4 IN (t0.c0))))) ORDER BY ((((((((rt0.c0)AND(rt0.c3)))AND(t0.c1)))OR(t0.c0)))AND(CASE WHEN rt0.c6 THEN vt1.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c6) NOT NULL))%((rt0.c4 IN (t0.c0))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY ((((((((rt0.c0)AND(rt0.c3)))AND(t0.c1)))OR(t0.c0)))AND(CASE WHEN rt0.c6 THEN vt1.c2 END))  NULLS LAST);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((rt0.c6) NOT NULL))%((rt0.c4 IN (t0.c0))))) ORDER BY ((((((((rt0.c0)AND(rt0.c3)))AND(t0.c1)))OR(t0.c0)))AND(CASE WHEN rt0.c6 THEN vt1.c2 END))  NULLS LAST;
SELECT * FROM vt1 WHERE ((((((vt1.c1)AND(vt1.c1)))AND(NULL)) IN ())) ORDER BY UNLIKELY(DISTINCT ((vt1.c2)<>(vt1.c2))) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (x''))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)AND(vt1.c1)))AND(NULL)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY UNLIKELY(DISTINCT ((vt1.c2)<>(vt1.c2))) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (x''))) NOT NULL)  NULLS LAST);
SELECT * FROM vt1 WHERE ((((((vt1.c1)AND(vt1.c1)))AND(NULL)) IN ())) ORDER BY UNLIKELY(DISTINCT ((vt1.c2)<>(vt1.c2))) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (x''))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)AND(vt1.c1)))AND(NULL)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY UNLIKELY(DISTINCT ((vt1.c2)<>(vt1.c2))) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (x''))) NOT NULL)  NULLS LAST);
SELECT * FROM vt1 WHERE ((((((vt1.c1)AND(vt1.c1)))AND(NULL)) IN ())) ORDER BY UNLIKELY(DISTINCT ((vt1.c2)<>(vt1.c2))) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (x''))) NOT NULL)  NULLS LAST;
SELECT ALL * FROM vt1, rt0, t0 WHERE (t0.c3) ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c2) AND (rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (UPPER(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c2) AND (rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (UPPER(vt1.c0))));
SELECT ALL * FROM vt1, rt0, t0 WHERE (t0.c3) ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c2) AND (rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (UPPER(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((t0.c3) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c2) AND (rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (UPPER(vt1.c0))));
SELECT ALL * FROM vt1, rt0, t0 WHERE (t0.c3) ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c2) AND (rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (UPPER(vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0 IN ()))AND((((vt1.c1, vt1.c2, vt1.c0))<((vt1.c1, '1447599020', vt1.c1))))))OR((('-204199980')AND(vt1.c2)))))OR(vt1.c1 COLLATE BINARY)))OR((((('15988507')OR(vt1.c1)))AND(vt1.c0))))) ORDER BY (((vt1.c1)IS NOT(vt1.c2)) IN (((vt1.c2) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0 IN ()))AND((((vt1.c1, vt1.c2, vt1.c0))<((vt1.c1, '1447599020', vt1.c1))))))OR((('-204199980')AND(vt1.c2)))))OR(vt1.c1 COLLATE BINARY)))OR((((('15988507')OR(vt1.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)IS NOT(vt1.c2)) IN (((vt1.c2) IS FALSE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0 IN ()))AND((((vt1.c1, vt1.c2, vt1.c0))<((vt1.c1, '1447599020', vt1.c1))))))OR((('-204199980')AND(vt1.c2)))))OR(vt1.c1 COLLATE BINARY)))OR((((('15988507')OR(vt1.c1)))AND(vt1.c0))))) ORDER BY (((vt1.c1)IS NOT(vt1.c2)) IN (((vt1.c2) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0 IN ()))AND((((vt1.c1, vt1.c2, vt1.c0))<((vt1.c1, '1447599020', vt1.c1))))))OR((('-204199980')AND(vt1.c2)))))OR(vt1.c1 COLLATE BINARY)))OR((((('15988507')OR(vt1.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)IS NOT(vt1.c2)) IN (((vt1.c2) IS FALSE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0 IN ()))AND((((vt1.c1, vt1.c2, vt1.c0))<((vt1.c1, '1447599020', vt1.c1))))))OR((('-204199980')AND(vt1.c2)))))OR(vt1.c1 COLLATE BINARY)))OR((((('15988507')OR(vt1.c1)))AND(vt1.c0))))) ORDER BY (((vt1.c1)IS NOT(vt1.c2)) IN (((vt1.c2) IS FALSE)))  NULLS LAST;
SELECT ALL * FROM vt1, rt0, t0 WHERE ((COALESCE(DISTINCT rt0.c0, t0.c0) IN (((rt0.c6)*(rt0.c3)), ((vt1.c2) ISNULL), CASE -1455917320  WHEN vt1.c0 THEN t0.c4 WHEN t0.c2 THEN 0.2192061757712872 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c2 THEN 1.674020894E9 WHEN '' THEN t0.c4 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c5 END)));
SELECT SUM(count) FROM (SELECT (((COALESCE(DISTINCT rt0.c0, t0.c0) IN (((rt0.c6)*(rt0.c3)), ((vt1.c2) ISNULL), CASE -1455917320  WHEN vt1.c0 THEN t0.c4 WHEN t0.c2 THEN 0.2192061757712872 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c2 THEN 1.674020894E9 WHEN '' THEN t0.c4 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c5 END))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE ((COALESCE(DISTINCT rt0.c0, t0.c0) IN (((rt0.c6)*(rt0.c3)), ((vt1.c2) ISNULL), CASE -1455917320  WHEN vt1.c0 THEN t0.c4 WHEN t0.c2 THEN 0.2192061757712872 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c2 THEN 1.674020894E9 WHEN '' THEN t0.c4 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c5 END)));
SELECT SUM(count) FROM (SELECT (((COALESCE(DISTINCT rt0.c0, t0.c0) IN (((rt0.c6)*(rt0.c3)), ((vt1.c2) ISNULL), CASE -1455917320  WHEN vt1.c0 THEN t0.c4 WHEN t0.c2 THEN 0.2192061757712872 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c2 THEN 1.674020894E9 WHEN '' THEN t0.c4 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c5 END))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE ((COALESCE(DISTINCT rt0.c0, t0.c0) IN (((rt0.c6)*(rt0.c3)), ((vt1.c2) ISNULL), CASE -1455917320  WHEN vt1.c0 THEN t0.c4 WHEN t0.c2 THEN 0.2192061757712872 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c2 THEN 1.674020894E9 WHEN '' THEN t0.c4 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c5 END)));
SELECT * FROM rt0 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c6 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END, (((0.78424803230021, rt0.c1, rt0.c5, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c5, rt0.c2, rt0.c1, rt0.c0, rt0.c4)) AND ((rt0.c4, rt0.c5, rt0.c2, rt0.c6, rt0.c4))), (~ (rt0.c5))))>=((rt0.c5, ((x'')IS(rt0.c3)), json_array(rt0.c6, rt0.c1))))) ORDER BY ((((rt0.c3)AND(rt0.c6)))AND(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c6 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END, (((0.78424803230021, rt0.c1, rt0.c5, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c5, rt0.c2, rt0.c1, rt0.c0, rt0.c4)) AND ((rt0.c4, rt0.c5, rt0.c2, rt0.c6, rt0.c4))), (~ (rt0.c5))))>=((rt0.c5, ((x'')IS(rt0.c3)), json_array(rt0.c6, rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)AND(rt0.c6)))AND(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c6 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END, (((0.78424803230021, rt0.c1, rt0.c5, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c5, rt0.c2, rt0.c1, rt0.c0, rt0.c4)) AND ((rt0.c4, rt0.c5, rt0.c2, rt0.c6, rt0.c4))), (~ (rt0.c5))))>=((rt0.c5, ((x'')IS(rt0.c3)), json_array(rt0.c6, rt0.c1))))) ORDER BY ((((rt0.c3)AND(rt0.c6)))AND(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c6 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END, (((0.78424803230021, rt0.c1, rt0.c5, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c5, rt0.c2, rt0.c1, rt0.c0, rt0.c4)) AND ((rt0.c4, rt0.c5, rt0.c2, rt0.c6, rt0.c4))), (~ (rt0.c5))))>=((rt0.c5, ((x'')IS(rt0.c3)), json_array(rt0.c6, rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)AND(rt0.c6)))AND(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c6 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END, (((0.78424803230021, rt0.c1, rt0.c5, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c5, rt0.c2, rt0.c1, rt0.c0, rt0.c4)) AND ((rt0.c4, rt0.c5, rt0.c2, rt0.c6, rt0.c4))), (~ (rt0.c5))))>=((rt0.c5, ((x'')IS(rt0.c3)), json_array(rt0.c6, rt0.c1))))) ORDER BY ((((rt0.c3)AND(rt0.c6)))AND(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (((((((vt1.c2)AND(x'')))OR(rt0.c1)))=((rt0.c0 IN ())))) ORDER BY ((((((vt1.c0)%(rt0.c3)))AND(rt0.c4)))OR(rt0.c3)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c2)AND(x'')))OR(rt0.c1)))=((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((vt1.c0)%(rt0.c3)))AND(rt0.c4)))OR(rt0.c3)) ASC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (((((((vt1.c2)AND(x'')))OR(rt0.c1)))=((rt0.c0 IN ())))) ORDER BY ((((((vt1.c0)%(rt0.c3)))AND(rt0.c4)))OR(rt0.c3)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c2)AND(x'')))OR(rt0.c1)))=((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((vt1.c0)%(rt0.c3)))AND(rt0.c4)))OR(rt0.c3)) ASC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (((((((vt1.c2)AND(x'')))OR(rt0.c1)))=((rt0.c0 IN ())))) ORDER BY ((((((vt1.c0)%(rt0.c3)))AND(rt0.c4)))OR(rt0.c3)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY ((0.8710574359165947 COLLATE BINARY) IS TRUE) DESC, CASE WHEN x'' THEN t0.c1 WHEN ((((x'')OR(t0.c4)))AND(t0.c1)) THEN (((t0.c4, t0.c4, t0.c2, t0.c2, t0.c1))==((t0.c0, t0.c1, t0.c3, t0.c4, t0.c3))) WHEN ((t0.c2)>(t0.c2)) THEN (((t0.c0))<=((t0.c2))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY ((0.8710574359165947 COLLATE BINARY) IS TRUE) DESC, CASE WHEN x'' THEN t0.c1 WHEN ((((x'')OR(t0.c4)))AND(t0.c1)) THEN (((t0.c4, t0.c4, t0.c2, t0.c2, t0.c1))==((t0.c0, t0.c1, t0.c3, t0.c4, t0.c3))) WHEN ((t0.c2)>(t0.c2)) THEN (((t0.c0))<=((t0.c2))) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY ((0.8710574359165947 COLLATE BINARY) IS TRUE) DESC, CASE WHEN x'' THEN t0.c1 WHEN ((((x'')OR(t0.c4)))AND(t0.c1)) THEN (((t0.c4, t0.c4, t0.c2, t0.c2, t0.c1))==((t0.c0, t0.c1, t0.c3, t0.c4, t0.c3))) WHEN ((t0.c2)>(t0.c2)) THEN (((t0.c0))<=((t0.c2))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY ((0.8710574359165947 COLLATE BINARY) IS TRUE) DESC, CASE WHEN x'' THEN t0.c1 WHEN ((((x'')OR(t0.c4)))AND(t0.c1)) THEN (((t0.c4, t0.c4, t0.c2, t0.c2, t0.c1))==((t0.c0, t0.c1, t0.c3, t0.c4, t0.c3))) WHEN ((t0.c2)>(t0.c2)) THEN (((t0.c0))<=((t0.c2))) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY ((0.8710574359165947 COLLATE BINARY) IS TRUE) DESC, CASE WHEN x'' THEN t0.c1 WHEN ((((x'')OR(t0.c4)))AND(t0.c1)) THEN (((t0.c4, t0.c4, t0.c2, t0.c2, t0.c1))==((t0.c0, t0.c1, t0.c3, t0.c4, t0.c3))) WHEN ((t0.c2)>(t0.c2)) THEN (((t0.c0))<=((t0.c2))) END ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE (((1.306857566E9)>(((vt1.c0) NOTNULL)))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2))) BETWEEN ((((vt1.c1))<((NULL)))) AND (((vt1.c1)<(vt1.c0))))  NULLS FIRST, (((vt1.c2, vt1.c0, vt1.c1)) BETWEEN ((((vt1.c0)IS(vt1.c2)), ((vt1.c1)OR(vt1.c1)), ((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c1)))) AND ((((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)), ((vt1.c1)*(vt1.c0)), CAST(NULL AS REAL))));
SELECT SUM(count) FROM (SELECT ((((1.306857566E9)>(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2))) BETWEEN ((((vt1.c1))<((NULL)))) AND (((vt1.c1)<(vt1.c0))))  NULLS FIRST, (((vt1.c2, vt1.c0, vt1.c1)) BETWEEN ((((vt1.c0)IS(vt1.c2)), ((vt1.c1)OR(vt1.c1)), ((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c1)))) AND ((((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)), ((vt1.c1)*(vt1.c0)), CAST(NULL AS REAL)))));
SELECT * FROM vt1 WHERE (((1.306857566E9)>(((vt1.c0) NOTNULL)))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2))) BETWEEN ((((vt1.c1))<((NULL)))) AND (((vt1.c1)<(vt1.c0))))  NULLS FIRST, (((vt1.c2, vt1.c0, vt1.c1)) BETWEEN ((((vt1.c0)IS(vt1.c2)), ((vt1.c1)OR(vt1.c1)), ((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c1)))) AND ((((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)), ((vt1.c1)*(vt1.c0)), CAST(NULL AS REAL))));
SELECT SUM(count) FROM (SELECT ((((1.306857566E9)>(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2))) BETWEEN ((((vt1.c1))<((NULL)))) AND (((vt1.c1)<(vt1.c0))))  NULLS FIRST, (((vt1.c2, vt1.c0, vt1.c1)) BETWEEN ((((vt1.c0)IS(vt1.c2)), ((vt1.c1)OR(vt1.c1)), ((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c1)))) AND ((((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)), ((vt1.c1)*(vt1.c0)), CAST(NULL AS REAL)))));
SELECT * FROM vt1 WHERE (((1.306857566E9)>(((vt1.c0) NOTNULL)))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2))) BETWEEN ((((vt1.c1))<((NULL)))) AND (((vt1.c1)<(vt1.c0))))  NULLS FIRST, (((vt1.c2, vt1.c0, vt1.c1)) BETWEEN ((((vt1.c0)IS(vt1.c2)), ((vt1.c1)OR(vt1.c1)), ((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c1)))) AND ((((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)), ((vt1.c1)*(vt1.c0)), CAST(NULL AS REAL))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((NOT (vt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((NOT (vt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((NOT (vt1.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt1 WHERE ((~ (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((~ (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((~ (vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE ('') ORDER BY ((UNICODE(rt0.c1))>=(((rt0.c0)IS NOT(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY ((UNICODE(rt0.c1))>=(((rt0.c0)IS NOT(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ('') ORDER BY ((UNICODE(rt0.c1))>=(((rt0.c0)IS NOT(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY ((UNICODE(rt0.c1))>=(((rt0.c0)IS NOT(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ('') ORDER BY ((UNICODE(rt0.c1))>=(((rt0.c0)IS NOT(rt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c6)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN rt0.c6 ELSE vt1.c1 END)) AND ((CAST(rt0.c2 AS TEXT)))) WHERE (CASE WHEN ((rt0.c5) BETWEEN (rt0.c3) AND (vt1.c1)) THEN ((rt0.c5) NOT BETWEEN (0.5032704509854257) AND (rt0.c6)) ELSE ' -' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c5) BETWEEN (rt0.c3) AND (vt1.c1)) THEN ((rt0.c5) NOT BETWEEN (0.5032704509854257) AND (rt0.c6)) ELSE ' -' END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c6)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN rt0.c6 ELSE vt1.c1 END)) AND ((CAST(rt0.c2 AS TEXT)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c6)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN rt0.c6 ELSE vt1.c1 END)) AND ((CAST(rt0.c2 AS TEXT)))) WHERE (CASE WHEN ((rt0.c5) BETWEEN (rt0.c3) AND (vt1.c1)) THEN ((rt0.c5) NOT BETWEEN (0.5032704509854257) AND (rt0.c6)) ELSE ' -' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c5) BETWEEN (rt0.c3) AND (vt1.c1)) THEN ((rt0.c5) NOT BETWEEN (0.5032704509854257) AND (rt0.c6)) ELSE ' -' END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c6)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN rt0.c6 ELSE vt1.c1 END)) AND ((CAST(rt0.c2 AS TEXT)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c6)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN rt0.c6 ELSE vt1.c1 END)) AND ((CAST(rt0.c2 AS TEXT)))) WHERE (CASE WHEN ((rt0.c5) BETWEEN (rt0.c3) AND (vt1.c1)) THEN ((rt0.c5) NOT BETWEEN (0.5032704509854257) AND (rt0.c6)) ELSE ' -' END);
SELECT ALL * FROM rt0 WHERE ((((rt0.c5 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5 IN ())) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c5 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5 IN ())) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c5 IN ())) ISNULL));
SELECT ALL * FROM rt0, t0, vt1 WHERE (CAST(((((vt1.c1)AND(rt0.c2)))OR(t0.c4)) AS NUMERIC)) ORDER BY CAST(((rt0.c3)<(rt0.c5)) AS TEXT) ASC, ((vt1.c0) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c1)AND(rt0.c2)))OR(t0.c4)) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY CAST(((rt0.c3)<(rt0.c5)) AS TEXT) ASC, ((vt1.c0) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt1 WHERE (CAST(((((vt1.c1)AND(rt0.c2)))OR(t0.c4)) AS NUMERIC)) ORDER BY CAST(((rt0.c3)<(rt0.c5)) AS TEXT) ASC, ((vt1.c0) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c1)AND(rt0.c2)))OR(t0.c4)) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY CAST(((rt0.c3)<(rt0.c5)) AS TEXT) ASC, ((vt1.c0) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt1 WHERE (CAST(((((vt1.c1)AND(rt0.c2)))OR(t0.c4)) AS NUMERIC)) ORDER BY CAST(((rt0.c3)<(rt0.c5)) AS TEXT) ASC, ((vt1.c0) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c5) NOTNULL))=((((''))>=((rt0.c5))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) NOTNULL))==((((''))>=((rt0.c5)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c5) NOTNULL))=((((''))>=((rt0.c5))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) NOTNULL))==((((''))>=((rt0.c5)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c5) NOTNULL))=((((''))>=((rt0.c5))))));
SELECT COUNT(*) FROM vt1 WHERE ((((((x'')) BETWEEN ((vt1.c0)) AND (('}⒘')))) NOT BETWEEN (0.601588933177314) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((x'')) BETWEEN ((vt1.c0)) AND (('}⒘')))) NOT BETWEEN (0.601588933177314) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((x'')) BETWEEN ((vt1.c0)) AND (('}⒘')))) NOT BETWEEN (0.601588933177314) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((x'')) BETWEEN ((vt1.c0)) AND (('}⒘')))) NOT BETWEEN (0.601588933177314) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((x'')) BETWEEN ((vt1.c0)) AND (('}⒘')))) NOT BETWEEN (0.601588933177314) AND ((+ (vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE BINARY) ORDER BY ((((rt0.c5, rt0.c2, x'6c82')) BETWEEN ((rt0.c2, rt0.c1, rt0.c5)) AND ((rt0.c3, rt0.c5, rt0.c1))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5, rt0.c2, x'6c82')) BETWEEN ((rt0.c2, rt0.c1, rt0.c5)) AND ((rt0.c3, rt0.c5, rt0.c1))) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE BINARY) ORDER BY ((((rt0.c5, rt0.c2, x'6c82')) BETWEEN ((rt0.c2, rt0.c1, rt0.c5)) AND ((rt0.c3, rt0.c5, rt0.c1))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5, rt0.c2, x'6c82')) BETWEEN ((rt0.c2, rt0.c1, rt0.c5)) AND ((rt0.c3, rt0.c5, rt0.c1))) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE BINARY) ORDER BY ((((rt0.c5, rt0.c2, x'6c82')) BETWEEN ((rt0.c2, rt0.c1, rt0.c5)) AND ((rt0.c3, rt0.c5, rt0.c1))) IN ()) DESC  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE ((((t0.c2) ISNULL) IN ((((rt0.c3))<>((rt0.c1))), rt0.c4))) ORDER BY ((0.30512104219956815)|(((((rt0.c1)OR(t0.c0)))OR(rt0.c6))));
SELECT SUM(count) FROM (SELECT (((((t0.c2) ISNULL) IN ((((rt0.c3))<>((rt0.c1))), rt0.c4))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((0.30512104219956815)|(((((rt0.c1)OR(t0.c0)))OR(rt0.c6)))));
SELECT * FROM rt0, t0 WHERE ((((t0.c2) ISNULL) IN ((((rt0.c3))<>((rt0.c1))), rt0.c4))) ORDER BY ((0.30512104219956815)|(((((rt0.c1)OR(t0.c0)))OR(rt0.c6))));
SELECT SUM(count) FROM (SELECT (((((t0.c2) ISNULL) IN ((((rt0.c3))<>((rt0.c1))), rt0.c4))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((0.30512104219956815)|(((((rt0.c1)OR(t0.c0)))OR(rt0.c6)))));
SELECT * FROM rt0, t0 WHERE ((((t0.c2) ISNULL) IN ((((rt0.c3))<>((rt0.c1))), rt0.c4))) ORDER BY ((0.30512104219956815)|(((((rt0.c1)OR(t0.c0)))OR(rt0.c6))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c2 IN ()) AS NUMERIC)) ORDER BY (((t0.c1, t0.c1, '0.4246067555485016')) NOT BETWEEN ((((((((((t0.c2)AND(t0.c4)))AND(t0.c4)))OR(t0.c1)))OR(t0.c4)), (((t0.c3))=((t0.c4))), (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c3))))) AND ((((t0.c1) NOTNULL), ((t0.c1) BETWEEN (t0.c4) AND ('''')), t0.c2))), (t0.c3 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1, t0.c1, '0.4246067555485016')) NOT BETWEEN ((((((((((t0.c2)AND(t0.c4)))AND(t0.c4)))OR(t0.c1)))OR(t0.c4)), (((t0.c3))=((t0.c4))), (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c3))))) AND ((((t0.c1) NOTNULL), ((t0.c1) BETWEEN (t0.c4) AND ('''')), t0.c2))), (t0.c3 IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c2 IN ()) AS NUMERIC)) ORDER BY (((t0.c1, t0.c1, '0.4246067555485016')) NOT BETWEEN ((((((((((t0.c2)AND(t0.c4)))AND(t0.c4)))OR(t0.c1)))OR(t0.c4)), (((t0.c3))=((t0.c4))), (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c3))))) AND ((((t0.c1) NOTNULL), ((t0.c1) BETWEEN (t0.c4) AND ('''')), t0.c2))), (t0.c3 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1, t0.c1, '0.4246067555485016')) NOT BETWEEN ((((((((((t0.c2)AND(t0.c4)))AND(t0.c4)))OR(t0.c1)))OR(t0.c4)), (((t0.c3))=((t0.c4))), (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c3))))) AND ((((t0.c1) NOTNULL), ((t0.c1) BETWEEN (t0.c4) AND ('''')), t0.c2))), (t0.c3 IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c2 IN ()) AS NUMERIC)) ORDER BY (((t0.c1, t0.c1, '0.4246067555485016')) NOT BETWEEN ((((((((((t0.c2)AND(t0.c4)))AND(t0.c4)))OR(t0.c1)))OR(t0.c4)), (((t0.c3))=((t0.c4))), (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c3))))) AND ((((t0.c1) NOTNULL), ((t0.c1) BETWEEN (t0.c4) AND ('''')), t0.c2))), (t0.c3 IN ()) ASC;
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) AS INTEGER)) ORDER BY ((CAST(rt0.c4 AS INTEGER)) BETWEEN (((((rt0.c6)OR('>U')))OR(rt0.c2))) AND (CAST(rt0.c5 AS REAL))) DESC, CASE WHEN ((rt0.c1)>=(rt0.c0)) THEN rt0.c3 COLLATE RTRIM END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c4 AS INTEGER)) BETWEEN (((((rt0.c6)OR('>U')))OR(rt0.c2))) AND (CAST(rt0.c5 AS REAL))) DESC, CASE WHEN ((rt0.c1)>=(rt0.c0)) THEN rt0.c3 COLLATE RTRIM END DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) AS INTEGER)) ORDER BY ((CAST(rt0.c4 AS INTEGER)) BETWEEN (((((rt0.c6)OR('>U')))OR(rt0.c2))) AND (CAST(rt0.c5 AS REAL))) DESC, CASE WHEN ((rt0.c1)>=(rt0.c0)) THEN rt0.c3 COLLATE RTRIM END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c4 AS INTEGER)) BETWEEN (((((rt0.c6)OR('>U')))OR(rt0.c2))) AND (CAST(rt0.c5 AS REAL))) DESC, CASE WHEN ((rt0.c1)>=(rt0.c0)) THEN rt0.c3 COLLATE RTRIM END DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) AS INTEGER)) ORDER BY ((CAST(rt0.c4 AS INTEGER)) BETWEEN (((((rt0.c6)OR('>U')))OR(rt0.c2))) AND (CAST(rt0.c5 AS REAL))) DESC, CASE WHEN ((rt0.c1)>=(rt0.c0)) THEN rt0.c3 COLLATE RTRIM END DESC  NULLS LAST;
SELECT * FROM rt0, t0 WHERE (((((t0.c3) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c3) NOTNULL)) ISNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((t0.c3) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c3) NOTNULL)) ISNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((t0.c3) NOTNULL)) ISNULL));
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((ABS(rt0.c5)) IS FALSE)) ORDER BY (((- (rt0.c0))) BETWEEN (0.9998370947952574) AND (((rt0.c6) NOTNULL))) ASC  NULLS FIRST, UNLIKELY(DISTINCT ((((vt1.c1)AND(rt0.c4)))OR(0x2d1cb910)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c5)) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (((- (rt0.c0))) BETWEEN (0.9998370947952574) AND (((rt0.c6) NOTNULL))) ASC  NULLS FIRST, UNLIKELY(DISTINCT ((((vt1.c1)AND(rt0.c4)))OR(0X2d1cb910)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((ABS(rt0.c5)) IS FALSE)) ORDER BY (((- (rt0.c0))) BETWEEN (0.9998370947952574) AND (((rt0.c6) NOTNULL))) ASC  NULLS FIRST, UNLIKELY(DISTINCT ((((vt1.c1)AND(rt0.c4)))OR(0x2d1cb910)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c5)) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (((- (rt0.c0))) BETWEEN (0.9998370947952574) AND (((rt0.c6) NOTNULL))) ASC  NULLS FIRST, UNLIKELY(DISTINCT ((((vt1.c1)AND(rt0.c4)))OR(0X2d1cb910)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((ABS(rt0.c5)) IS FALSE)) ORDER BY (((- (rt0.c0))) BETWEEN (0.9998370947952574) AND (((rt0.c6) NOTNULL))) ASC  NULLS FIRST, UNLIKELY(DISTINCT ((((vt1.c1)AND(rt0.c4)))OR(0x2d1cb910)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE LENGTH(vt1.c1)  WHEN (~ (vt1.c2)) THEN ((((((((vt1.c2)OR(vt1.c0)))OR(vt1.c2)))AND(vt1.c2)))AND(vt1.c2)) ELSE (vt1.c1 IN ()) END) ORDER BY (((+ (vt1.c2)))%((- (vt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE LENGTH(vt1.c1)  WHEN (~ (vt1.c2)) THEN ((((((((vt1.c2)OR(vt1.c0)))OR(vt1.c2)))AND(vt1.c2)))AND(vt1.c2)) ELSE (vt1.c1 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY (((+ (vt1.c2)))%((- (vt1.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE LENGTH(vt1.c1)  WHEN (~ (vt1.c2)) THEN ((((((((vt1.c2)OR(vt1.c0)))OR(vt1.c2)))AND(vt1.c2)))AND(vt1.c2)) ELSE (vt1.c1 IN ()) END) ORDER BY (((+ (vt1.c2)))%((- (vt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE LENGTH(vt1.c1)  WHEN (~ (vt1.c2)) THEN ((((((((vt1.c2)OR(vt1.c0)))OR(vt1.c2)))AND(vt1.c2)))AND(vt1.c2)) ELSE (vt1.c1 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY (((+ (vt1.c2)))%((- (vt1.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE LENGTH(vt1.c1)  WHEN (~ (vt1.c2)) THEN ((((((((vt1.c2)OR(vt1.c0)))OR(vt1.c2)))AND(vt1.c2)))AND(vt1.c2)) ELSE (vt1.c1 IN ()) END) ORDER BY (((+ (vt1.c2)))%((- (vt1.c2)))) DESC;
SELECT ALL * FROM vt1 WHERE (((vt1.c2 COLLATE BINARY) NOT BETWEEN (((vt1.c2)>>(vt1.c2))) AND (vt1.c1 COLLATE BINARY))) ORDER BY ('711229984' IN (((vt1.c2)%(vt1.c0)))), ((CASE vt1.c2  WHEN vt1.c0 THEN vt1.c1 END)AND((vt1.c2 IN (vt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c2 COLLATE BINARY) NOT BETWEEN (((vt1.c2)>>(vt1.c2))) AND (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY ('711229984' IN (((vt1.c2)%(vt1.c0)))), ((CASE vt1.c2  WHEN vt1.c0 THEN vt1.c1 END)AND((vt1.c2 IN (vt1.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c2 COLLATE BINARY) NOT BETWEEN (((vt1.c2)>>(vt1.c2))) AND (vt1.c1 COLLATE BINARY))) ORDER BY ('711229984' IN (((vt1.c2)%(vt1.c0)))), ((CASE vt1.c2  WHEN vt1.c0 THEN vt1.c1 END)AND((vt1.c2 IN (vt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c2 COLLATE BINARY) NOT BETWEEN (((vt1.c2)>>(vt1.c2))) AND (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY ('711229984' IN (((vt1.c2)%(vt1.c0)))), ((CASE vt1.c2  WHEN vt1.c0 THEN vt1.c1 END)AND((vt1.c2 IN (vt1.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c2 COLLATE BINARY) NOT BETWEEN (((vt1.c2)>>(vt1.c2))) AND (vt1.c1 COLLATE BINARY))) ORDER BY ('711229984' IN (((vt1.c2)%(vt1.c0)))), ((CASE vt1.c2  WHEN vt1.c0 THEN vt1.c1 END)AND((vt1.c2 IN (vt1.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c4)+(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c4)+(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c4)+(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c4)+(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c4)+(t0.c0)) COLLATE BINARY);
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((t0.c0) BETWEEN (rt0.c0) AND (NULL)) IN ()) WHERE ((((rt0.c5 IN ())) BETWEEN (((t0.c3) IS TRUE)) AND (CAST(0.669812100226485 AS NUMERIC)))) ORDER BY rt0.c1  NULLS LAST, CAST(((t0.c0) ISNULL) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5 IN ())) BETWEEN (((t0.c3) IS TRUE)) AND (CAST(0.669812100226485 AS NUMERIC)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((t0.c0) BETWEEN (rt0.c0) AND (NULL)) IN ()) ORDER BY rt0.c1  NULLS LAST, CAST(((t0.c0) ISNULL) AS BLOB) DESC);
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((t0.c0) BETWEEN (rt0.c0) AND (NULL)) IN ()) WHERE ((((rt0.c5 IN ())) BETWEEN (((t0.c3) IS TRUE)) AND (CAST(0.669812100226485 AS NUMERIC)))) ORDER BY rt0.c1  NULLS LAST, CAST(((t0.c0) ISNULL) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5 IN ())) BETWEEN (((t0.c3) IS TRUE)) AND (CAST(0.669812100226485 AS NUMERIC)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((t0.c0) BETWEEN (rt0.c0) AND (NULL)) IN ()) ORDER BY rt0.c1  NULLS LAST, CAST(((t0.c0) ISNULL) AS BLOB) DESC);
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((t0.c0) BETWEEN (rt0.c0) AND (NULL)) IN ()) WHERE ((((rt0.c5 IN ())) BETWEEN (((t0.c3) IS TRUE)) AND (CAST(0.669812100226485 AS NUMERIC)))) ORDER BY rt0.c1  NULLS LAST, CAST(((t0.c0) ISNULL) AS BLOB) DESC;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) AND ((CAST(vt1.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) AND ((CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) AND ((CAST(vt1.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) AND ((CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) AND ((CAST(vt1.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(t0.c4)))OR(t0.c0)))AND(((((((((NULL)OR(t0.c1)))OR(t0.c3)))OR(t0.c1)))OR(t0.c3)))))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c4 WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN '508512076' THEN t0.c3 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c1 ELSE t0.c4 END))) ORDER BY UNLIKELY(((t0.c0)||(t0.c0))) ASC  NULLS LAST, (+ (rtreenode(t0.c0, '99543903'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)OR(t0.c4)))OR(t0.c0)))AND(((((((((NULL)OR(t0.c1)))OR(t0.c3)))OR(t0.c1)))OR(t0.c3)))))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c4 WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN '508512076' THEN t0.c3 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c1 ELSE t0.c4 END))) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(((t0.c0)||(t0.c0))) ASC  NULLS LAST, (+ (rtreenode(t0.c0, '99543903'))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(t0.c4)))OR(t0.c0)))AND(((((((((NULL)OR(t0.c1)))OR(t0.c3)))OR(t0.c1)))OR(t0.c3)))))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c4 WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN '508512076' THEN t0.c3 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c1 ELSE t0.c4 END))) ORDER BY UNLIKELY(((t0.c0)||(t0.c0))) ASC  NULLS LAST, (+ (rtreenode(t0.c0, '99543903'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)OR(t0.c4)))OR(t0.c0)))AND(((((((((NULL)OR(t0.c1)))OR(t0.c3)))OR(t0.c1)))OR(t0.c3)))))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c4 WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN '508512076' THEN t0.c3 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c1 ELSE t0.c4 END))) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(((t0.c0)||(t0.c0))) ASC  NULLS LAST, (+ (rtreenode(t0.c0, '99543903'))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(t0.c4)))OR(t0.c0)))AND(((((((((NULL)OR(t0.c1)))OR(t0.c3)))OR(t0.c1)))OR(t0.c3)))))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c4 WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN '508512076' THEN t0.c3 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c1 ELSE t0.c4 END))) ORDER BY UNLIKELY(((t0.c0)||(t0.c0))) ASC  NULLS LAST, (+ (rtreenode(t0.c0, '99543903'))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((+ (t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (t0.c3))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((+ (t0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (t0.c3))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((+ (t0.c3)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'')AND((~ (rt0.c1)))))OR((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((x'')AND((~ (rt0.c1)))))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'')AND((~ (rt0.c1)))))OR((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((x'')AND((~ (rt0.c1)))))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'')AND((~ (rt0.c1)))))OR((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE (0Xffffffffa5b03824);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffa5b03824) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0Xffffffffa5b03824);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffa5b03824) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0Xffffffffa5b03824);
SELECT * FROM t0, rt0 WHERE ((- (rt0.c1)) COLLATE NOCASE) ORDER BY CAST(rt0.c1 AS REAL);
SELECT SUM(count) FROM (SELECT (((- (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 NOT INDEXED ORDER BY CAST(rt0.c1 AS REAL));
SELECT * FROM t0, rt0 WHERE ((- (rt0.c1)) COLLATE NOCASE) ORDER BY CAST(rt0.c1 AS REAL);
SELECT SUM(count) FROM (SELECT (((- (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 NOT INDEXED ORDER BY CAST(rt0.c1 AS REAL));
SELECT * FROM t0, rt0 WHERE ((- (rt0.c1)) COLLATE NOCASE) ORDER BY CAST(rt0.c1 AS REAL);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE UPPER(x'')  WHEN LIKELIHOOD(DISTINCT vt1.c2, 0.5553957856194665) THEN vt1.c2 WHEN NULL THEN CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c2 END WHEN (- (0Xffffffffbe1ebd1e)) THEN ((vt1.c1)%(0.13135979783599305)) END) ORDER BY CASE ((vt1.c1)<=(vt1.c1))  WHEN vt1.c2 COLLATE RTRIM THEN CASE WHEN vt1.c2 THEN vt1.c1 END ELSE ('1242603167' IN (vt1.c1, 0.1529513440919137, 1.3146876E7)) END, (((((((((('䄵u)H(e)qR~')OR(vt1.c2)))AND(vt1.c2)))OR(vt1.c0)))OR(vt1.c1)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE UPPER(x'')  WHEN LIKELIHOOD(DISTINCT vt1.c2, 0.5553957856194665) THEN vt1.c2 WHEN NULL THEN CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c2 END WHEN (- (0xffffffffbe1ebd1e)) THEN ((vt1.c1)%(0.13135979783599305)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c1)<=(vt1.c1))  WHEN vt1.c2 COLLATE RTRIM THEN CASE WHEN vt1.c2 THEN vt1.c1 END ELSE ('1242603167' IN (vt1.c1, 0.1529513440919137, 1.3146876E7)) END, (((((((((('䄵u)H(e)qR~')OR(vt1.c2)))AND(vt1.c2)))OR(vt1.c0)))OR(vt1.c1)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE UPPER(x'')  WHEN LIKELIHOOD(DISTINCT vt1.c2, 0.5553957856194665) THEN vt1.c2 WHEN NULL THEN CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c2 END WHEN (- (0Xffffffffbe1ebd1e)) THEN ((vt1.c1)%(0.13135979783599305)) END) ORDER BY CASE ((vt1.c1)<=(vt1.c1))  WHEN vt1.c2 COLLATE RTRIM THEN CASE WHEN vt1.c2 THEN vt1.c1 END ELSE ('1242603167' IN (vt1.c1, 0.1529513440919137, 1.3146876E7)) END, (((((((((('䄵u)H(e)qR~')OR(vt1.c2)))AND(vt1.c2)))OR(vt1.c0)))OR(vt1.c1)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE UPPER(x'')  WHEN LIKELIHOOD(DISTINCT vt1.c2, 0.5553957856194665) THEN vt1.c2 WHEN NULL THEN CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c2 END WHEN (- (0xffffffffbe1ebd1e)) THEN ((vt1.c1)%(0.13135979783599305)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c1)<=(vt1.c1))  WHEN vt1.c2 COLLATE RTRIM THEN CASE WHEN vt1.c2 THEN vt1.c1 END ELSE ('1242603167' IN (vt1.c1, 0.1529513440919137, 1.3146876E7)) END, (((((((((('䄵u)H(e)qR~')OR(vt1.c2)))AND(vt1.c2)))OR(vt1.c0)))OR(vt1.c1)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE UPPER(x'')  WHEN LIKELIHOOD(DISTINCT vt1.c2, 0.5553957856194665) THEN vt1.c2 WHEN NULL THEN CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c2 END WHEN (- (0Xffffffffbe1ebd1e)) THEN ((vt1.c1)%(0.13135979783599305)) END) ORDER BY CASE ((vt1.c1)<=(vt1.c1))  WHEN vt1.c2 COLLATE RTRIM THEN CASE WHEN vt1.c2 THEN vt1.c1 END ELSE ('1242603167' IN (vt1.c1, 0.1529513440919137, 1.3146876E7)) END, (((((((((('䄵u)H(e)qR~')OR(vt1.c2)))AND(vt1.c2)))OR(vt1.c0)))OR(vt1.c1)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c2)))) DESC;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON SQLITE_VERSION() WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON SQLITE_VERSION());
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON SQLITE_VERSION() WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON SQLITE_VERSION());
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON SQLITE_VERSION() WHERE (NULL);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c3) NOTNULL) AS TEXT)) ORDER BY (CAST(x'd7e9' AS INTEGER) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) NOTNULL) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (CAST(x'd7e9' AS INTEGER) IN ())  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c3) NOTNULL) AS TEXT)) ORDER BY (CAST(x'd7e9' AS INTEGER) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) NOTNULL) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (CAST(x'd7e9' AS INTEGER) IN ())  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c3) NOTNULL) AS TEXT)) ORDER BY (CAST(x'd7e9' AS INTEGER) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(x'' AS BLOB) IN (CASE WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 END))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 ELSE x'' END) BETWEEN ((vt1.c1 IN ())) AND (((vt1.c2)<=(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(x'' AS BLOB) IN (CASE WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 END))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 ELSE x'' END) BETWEEN ((vt1.c1 IN ())) AND (((vt1.c2)<=(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(x'' AS BLOB) IN (CASE WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 END))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 ELSE x'' END) BETWEEN ((vt1.c1 IN ())) AND (((vt1.c2)<=(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(x'' AS BLOB) IN (CASE WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 END))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 ELSE x'' END) BETWEEN ((vt1.c1 IN ())) AND (((vt1.c2)<=(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(x'' AS BLOB) IN (CASE WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 END))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 ELSE x'' END) BETWEEN ((vt1.c1 IN ())) AND (((vt1.c2)<=(vt1.c1))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0)|(vt1.c1)), ((vt1.c1) IS FALSE), ((t0.c3)%(vt1.c0))))>((((vt1.c1)LIKE(vt1.c0)), CASE t0.c1  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c1 END, vt1.c2)))) ORDER BY (((((vt1.c0))<=((vt1.c1)))) BETWEEN (t0.c0) AND ((((t0.c0))>=((t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)|(vt1.c1)), ((vt1.c1) IS FALSE), ((t0.c3)%(vt1.c0))))>((((vt1.c1)LIKE(vt1.c0)), CASE t0.c1  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c1 END, vt1.c2)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((vt1.c0))<=((vt1.c1)))) BETWEEN (t0.c0) AND ((((t0.c0))>=((t0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0)|(vt1.c1)), ((vt1.c1) IS FALSE), ((t0.c3)%(vt1.c0))))>((((vt1.c1)LIKE(vt1.c0)), CASE t0.c1  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c1 END, vt1.c2)))) ORDER BY (((((vt1.c0))<=((vt1.c1)))) BETWEEN (t0.c0) AND ((((t0.c0))>=((t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)|(vt1.c1)), ((vt1.c1) IS FALSE), ((t0.c3)%(vt1.c0))))>((((vt1.c1)LIKE(vt1.c0)), CASE t0.c1  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c1 END, vt1.c2)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((vt1.c0))<=((vt1.c1)))) BETWEEN (t0.c0) AND ((((t0.c0))>=((t0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0)|(vt1.c1)), ((vt1.c1) IS FALSE), ((t0.c3)%(vt1.c0))))>((((vt1.c1)LIKE(vt1.c0)), CASE t0.c1  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c1 END, vt1.c2)))) ORDER BY (((((vt1.c0))<=((vt1.c1)))) BETWEEN (t0.c0) AND ((((t0.c0))>=((t0.c0))))) DESC;
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (x'') ORDER BY ((((vt1.c0) NOT BETWEEN (rt0.c2) AND ('0.2516465858325212'))) ISNULL);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (rt0.c2) AND ('0.2516465858325212'))) ISNULL));
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (x'') ORDER BY ((((vt1.c0) NOT BETWEEN (rt0.c2) AND ('0.2516465858325212'))) ISNULL);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (rt0.c2) AND ('0.2516465858325212'))) ISNULL));
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (x'') ORDER BY ((((vt1.c0) NOT BETWEEN (rt0.c2) AND ('0.2516465858325212'))) ISNULL);
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON (((0.9777467298124034, rt0.c4, rt0.c0)) NOT BETWEEN ((LIKELY(DISTINCT vt1.c2), (rt0.c1 IN ()), (rt0.c3 IN (rt0.c4)))) AND ((((t0.c2)AND(rt0.c1)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c5 END, TRIM(DISTINCT rt0.c3, vt1.c1)))) CROSS JOIN t0 ON ((((((((((rt0.c0)>>(rt0.c2)))OR(((vt1.c0)-(rt0.c4)))))AND(((((t0.c4)AND(vt1.c1)))OR(t0.c4)))))OR(UNLIKELY(DISTINCT t0.c4))))AND(vt1.c0 COLLATE NOCASE)) WHERE (((((rt0.c1)||(rt0.c0))) NOT BETWEEN (((rt0.c0)|(rt0.c0))) AND (0Xc1f77c6)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)||(rt0.c0))) NOT BETWEEN (((rt0.c0)|(rt0.c0))) AND (0Xc1f77c6))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((0.9777467298124034, rt0.c4, rt0.c0)) NOT BETWEEN ((LIKELY(DISTINCT vt1.c2), (rt0.c1 IN ()), (rt0.c3 IN (rt0.c4)))) AND ((((t0.c2)AND(rt0.c1)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c5 END, TRIM(DISTINCT rt0.c3, vt1.c1)))) CROSS JOIN t0 ON ((((((((((rt0.c0)>>(rt0.c2)))OR(((vt1.c0)-(rt0.c4)))))AND(((((t0.c4)AND(vt1.c1)))OR(t0.c4)))))OR(UNLIKELY(DISTINCT t0.c4))))AND(vt1.c0 COLLATE NOCASE)));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON (((0.9777467298124034, rt0.c4, rt0.c0)) NOT BETWEEN ((LIKELY(DISTINCT vt1.c2), (rt0.c1 IN ()), (rt0.c3 IN (rt0.c4)))) AND ((((t0.c2)AND(rt0.c1)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c5 END, TRIM(DISTINCT rt0.c3, vt1.c1)))) CROSS JOIN t0 ON ((((((((((rt0.c0)>>(rt0.c2)))OR(((vt1.c0)-(rt0.c4)))))AND(((((t0.c4)AND(vt1.c1)))OR(t0.c4)))))OR(UNLIKELY(DISTINCT t0.c4))))AND(vt1.c0 COLLATE NOCASE)) WHERE (((((rt0.c1)||(rt0.c0))) NOT BETWEEN (((rt0.c0)|(rt0.c0))) AND (0Xc1f77c6)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)||(rt0.c0))) NOT BETWEEN (((rt0.c0)|(rt0.c0))) AND (0Xc1f77c6))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((0.9777467298124034, rt0.c4, rt0.c0)) NOT BETWEEN ((LIKELY(DISTINCT vt1.c2), (rt0.c1 IN ()), (rt0.c3 IN (rt0.c4)))) AND ((((t0.c2)AND(rt0.c1)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c5 END, TRIM(DISTINCT rt0.c3, vt1.c1)))) CROSS JOIN t0 ON ((((((((((rt0.c0)>>(rt0.c2)))OR(((vt1.c0)-(rt0.c4)))))AND(((((t0.c4)AND(vt1.c1)))OR(t0.c4)))))OR(UNLIKELY(DISTINCT t0.c4))))AND(vt1.c0 COLLATE NOCASE)));
SELECT * FROM vt1 WHERE ((((('-1730729660') NOT NULL)) NOT BETWEEN (CASE WHEN vt1.c2 THEN vt1.c0 END) AND ('1912847080')));
SELECT SUM(count) FROM (SELECT (((((('-1730729660') NOT NULL)) NOT BETWEEN (CASE WHEN vt1.c2 THEN vt1.c0 END) AND ('1912847080'))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((('-1730729660') NOT NULL)) NOT BETWEEN (CASE WHEN vt1.c2 THEN vt1.c0 END) AND ('1912847080')));
SELECT SUM(count) FROM (SELECT (((((('-1730729660') NOT NULL)) NOT BETWEEN (CASE WHEN vt1.c2 THEN vt1.c0 END) AND ('1912847080'))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((('-1730729660') NOT NULL)) NOT BETWEEN (CASE WHEN vt1.c2 THEN vt1.c0 END) AND ('1912847080')));
SELECT * FROM rt0, t0, vt1 WHERE (LIKE((rt0.c1 IN ()), (~ (vt1.c2)), '-')) ORDER BY (CASE WHEN t0.c3 THEN rt0.c2 ELSE t0.c3 END IN ()), 0.5813458695345045, (((rt0.c3 IN ()))>>(CAST(rt0.c4 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE((rt0.c1 IN ()), (~ (vt1.c2)), '-')) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (CASE WHEN t0.c3 THEN rt0.c2 ELSE t0.c3 END IN ()), 0.5813458695345045, (((rt0.c3 IN ()))>>(CAST(rt0.c4 AS NUMERIC))) DESC  NULLS LAST);
SELECT * FROM rt0, t0, vt1 WHERE (LIKE((rt0.c1 IN ()), (~ (vt1.c2)), '-')) ORDER BY (CASE WHEN t0.c3 THEN rt0.c2 ELSE t0.c3 END IN ()), 0.5813458695345045, (((rt0.c3 IN ()))>>(CAST(rt0.c4 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE((rt0.c1 IN ()), (~ (vt1.c2)), '-')) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (CASE WHEN t0.c3 THEN rt0.c2 ELSE t0.c3 END IN ()), 0.5813458695345045, (((rt0.c3 IN ()))>>(CAST(rt0.c4 AS NUMERIC))) DESC  NULLS LAST);
SELECT * FROM rt0, t0, vt1 WHERE (LIKE((rt0.c1 IN ()), (~ (vt1.c2)), '-')) ORDER BY (CASE WHEN t0.c3 THEN rt0.c2 ELSE t0.c3 END IN ()), 0.5813458695345045, (((rt0.c3 IN ()))>>(CAST(rt0.c4 AS NUMERIC))) DESC  NULLS LAST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)LIKE(rt0.c3))) IS FALSE) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)LIKE(rt0.c3))) IS FALSE));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)LIKE(rt0.c3))) IS FALSE) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)LIKE(rt0.c3))) IS FALSE));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)LIKE(rt0.c3))) IS FALSE) WHERE (x'');
SELECT ALL * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'');
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((NULL)>=(t0.c2)) THEN ((t0.c3)AND(x'9e3e976e')) END) ORDER BY CASE (((t0.c1, -1058879574, t0.c3))!=((t0.c1, t0.c3, t0.c4)))  WHEN (t0.c0 IN (t0.c2, t0.c2)) THEN HEX(DISTINCT t0.c1) WHEN CAST(t0.c3 AS NUMERIC) THEN ((t0.c0)&(t0.c3)) WHEN ((t0.c1) BETWEEN (t0.c4) AND (t0.c0)) THEN (- (t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL)>=(t0.c2)) THEN ((t0.c3)AND(x'9e3e976e')) END) IS TRUE)  as count FROM t0 ORDER BY CASE (((t0.c1, -1058879574, t0.c3))<>((t0.c1, t0.c3, t0.c4)))  WHEN (t0.c0 IN (t0.c2, t0.c2)) THEN HEX(DISTINCT t0.c1) WHEN CAST(t0.c3 AS NUMERIC) THEN ((t0.c0)&(t0.c3)) WHEN ((t0.c1) BETWEEN (t0.c4) AND (t0.c0)) THEN (- (t0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((NULL)>=(t0.c2)) THEN ((t0.c3)AND(x'9e3e976e')) END) ORDER BY CASE (((t0.c1, -1058879574, t0.c3))!=((t0.c1, t0.c3, t0.c4)))  WHEN (t0.c0 IN (t0.c2, t0.c2)) THEN HEX(DISTINCT t0.c1) WHEN CAST(t0.c3 AS NUMERIC) THEN ((t0.c0)&(t0.c3)) WHEN ((t0.c1) BETWEEN (t0.c4) AND (t0.c0)) THEN (- (t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL)>=(t0.c2)) THEN ((t0.c3)AND(x'9e3e976e')) END) IS TRUE)  as count FROM t0 ORDER BY CASE (((t0.c1, -1058879574, t0.c3))<>((t0.c1, t0.c3, t0.c4)))  WHEN (t0.c0 IN (t0.c2, t0.c2)) THEN HEX(DISTINCT t0.c1) WHEN CAST(t0.c3 AS NUMERIC) THEN ((t0.c0)&(t0.c3)) WHEN ((t0.c1) BETWEEN (t0.c4) AND (t0.c0)) THEN (- (t0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((NULL)>=(t0.c2)) THEN ((t0.c3)AND(x'9e3e976e')) END) ORDER BY CASE (((t0.c1, -1058879574, t0.c3))!=((t0.c1, t0.c3, t0.c4)))  WHEN (t0.c0 IN (t0.c2, t0.c2)) THEN HEX(DISTINCT t0.c1) WHEN CAST(t0.c3 AS NUMERIC) THEN ((t0.c0)&(t0.c3)) WHEN ((t0.c1) BETWEEN (t0.c4) AND (t0.c0)) THEN (- (t0.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (((((rt0.c6 COLLATE NOCASE)OR((~ (t0.c3)))))OR(t0.c0 COLLATE RTRIM))) ORDER BY (((rt0.c5) NOT NULL) IN (CASE WHEN t0.c2 THEN rt0.c2 WHEN NULL THEN t0.c0 WHEN NULL THEN rt0.c2 END)) ASC, LOWER(rt0.c5) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c6 COLLATE NOCASE)OR((~ (t0.c3)))))OR(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY (((rt0.c5) NOT NULL) IN (CASE WHEN t0.c2 THEN rt0.c2 WHEN NULL THEN t0.c0 WHEN NULL THEN rt0.c2 END)) ASC, LOWER(rt0.c5) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (((((rt0.c6 COLLATE NOCASE)OR((~ (t0.c3)))))OR(t0.c0 COLLATE RTRIM))) ORDER BY (((rt0.c5) NOT NULL) IN (CASE WHEN t0.c2 THEN rt0.c2 WHEN NULL THEN t0.c0 WHEN NULL THEN rt0.c2 END)) ASC, LOWER(rt0.c5) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c6 COLLATE NOCASE)OR((~ (t0.c3)))))OR(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY (((rt0.c5) NOT NULL) IN (CASE WHEN t0.c2 THEN rt0.c2 WHEN NULL THEN t0.c0 WHEN NULL THEN rt0.c2 END)) ASC, LOWER(rt0.c5) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (((((rt0.c6 COLLATE NOCASE)OR((~ (t0.c3)))))OR(t0.c0 COLLATE RTRIM))) ORDER BY (((rt0.c5) NOT NULL) IN (CASE WHEN t0.c2 THEN rt0.c2 WHEN NULL THEN t0.c0 WHEN NULL THEN rt0.c2 END)) ASC, LOWER(rt0.c5) COLLATE BINARY DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN t0 ON rt0.c0 WHERE ((((CAST(rt0.c2 AS REAL), (((vt1.c2))<=((t0.c0))), ((t0.c1)!=(rt0.c5))))!=((CASE t0.c3  WHEN rt0.c3 THEN t0.c4 END, t0.c1 COLLATE RTRIM, rt0.c2)))) ORDER BY CAST(CASE WHEN rt0.c5 THEN vt1.c1 END AS REAL);
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c2 AS REAL), (((vt1.c2))<=((t0.c0))), ((t0.c1)<>(rt0.c5))))!=((CASE t0.c3  WHEN rt0.c3 THEN t0.c4 END, t0.c1 COLLATE RTRIM, rt0.c2)))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN t0 ON rt0.c0 ORDER BY CAST(CASE WHEN rt0.c5 THEN vt1.c1 END AS REAL));
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN t0 ON rt0.c0 WHERE ((((CAST(rt0.c2 AS REAL), (((vt1.c2))<=((t0.c0))), ((t0.c1)!=(rt0.c5))))!=((CASE t0.c3  WHEN rt0.c3 THEN t0.c4 END, t0.c1 COLLATE RTRIM, rt0.c2)))) ORDER BY CAST(CASE WHEN rt0.c5 THEN vt1.c1 END AS REAL);
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c2 AS REAL), (((vt1.c2))<=((t0.c0))), ((t0.c1)<>(rt0.c5))))!=((CASE t0.c3  WHEN rt0.c3 THEN t0.c4 END, t0.c1 COLLATE RTRIM, rt0.c2)))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN t0 ON rt0.c0 ORDER BY CAST(CASE WHEN rt0.c5 THEN vt1.c1 END AS REAL));
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN t0 ON rt0.c0 WHERE ((((CAST(rt0.c2 AS REAL), (((vt1.c2))<=((t0.c0))), ((t0.c1)!=(rt0.c5))))!=((CASE t0.c3  WHEN rt0.c3 THEN t0.c4 END, t0.c1 COLLATE RTRIM, rt0.c2)))) ORDER BY CAST(CASE WHEN rt0.c5 THEN vt1.c1 END AS REAL);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c6) NOT BETWEEN (rt0.c5) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c6) NOT BETWEEN (rt0.c5) AND (rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c6) NOT BETWEEN (rt0.c5) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c6) NOT BETWEEN (rt0.c5) AND (rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c6) NOT BETWEEN (rt0.c5) AND (rt0.c4)))));
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT))AND(CASE WHEN rt0.c5 THEN rt0.c1 END)))OR(((rt0.c3)<=(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS TEXT))AND(CASE WHEN rt0.c5 THEN rt0.c1 END)))OR(((rt0.c3)<=(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT))AND(CASE WHEN rt0.c5 THEN rt0.c1 END)))OR(((rt0.c3)<=(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS TEXT))AND(CASE WHEN rt0.c5 THEN rt0.c1 END)))OR(((rt0.c3)<=(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT))AND(CASE WHEN rt0.c5 THEN rt0.c1 END)))OR(((rt0.c3)<=(rt0.c4)))));
SELECT * FROM vt1 NOT INDEXED, rt0, t0 WHERE ((((t0.c2 IN ())) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CASE WHEN t0.c0 THEN '-276865966' ELSE rt0.c1 END))) ORDER BY ((x'2372')=(LOWER(DISTINCT vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ())) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CASE WHEN t0.c0 THEN '-276865966' ELSE rt0.c1 END))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY ((x'2372')==(LOWER(DISTINCT vt1.c0))) DESC);
SELECT * FROM vt1 NOT INDEXED, rt0, t0 WHERE ((((t0.c2 IN ())) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CASE WHEN t0.c0 THEN '-276865966' ELSE rt0.c1 END))) ORDER BY ((x'2372')=(LOWER(DISTINCT vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ())) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CASE WHEN t0.c0 THEN '-276865966' ELSE rt0.c1 END))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY ((x'2372')==(LOWER(DISTINCT vt1.c0))) DESC);
SELECT * FROM vt1 NOT INDEXED, rt0, t0 WHERE ((((t0.c2 IN ())) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CASE WHEN t0.c0 THEN '-276865966' ELSE rt0.c1 END))) ORDER BY ((x'2372')=(LOWER(DISTINCT vt1.c0))) DESC;
SELECT * FROM t0 WHERE (((HEX(DISTINCT 0.32521476867930976)) NOT BETWEEN ((t0.c3 IN ())) AND (t0.c2 COLLATE BINARY))) ORDER BY (((NULL))==((t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT 0.32521476867930976)) NOT BETWEEN ((t0.c3 IN ())) AND (t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY (((NULL))==((t0.c2))));
SELECT * FROM t0 WHERE (((HEX(DISTINCT 0.32521476867930976)) NOT BETWEEN ((t0.c3 IN ())) AND (t0.c2 COLLATE BINARY))) ORDER BY (((NULL))==((t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT 0.32521476867930976)) NOT BETWEEN ((t0.c3 IN ())) AND (t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY (((NULL))==((t0.c2))));
SELECT * FROM t0 WHERE (((HEX(DISTINCT 0.32521476867930976)) NOT BETWEEN ((t0.c3 IN ())) AND (t0.c2 COLLATE BINARY))) ORDER BY (((NULL))==((t0.c2)));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))))=((x''))));
SELECT SUM(count) FROM (SELECT (((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))))==((x'')))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))))=((x''))));
SELECT SUM(count) FROM (SELECT (((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))))==((x'')))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))))=((x''))));
SELECT * FROM vt1, rt0, t0 WHERE ((((((((((0.48693403955414216)AND(rt0.c2)))AND(rt0.c1)))AND(vt1.c2)))OR(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((0.48693403955414216)AND(rt0.c2)))AND(rt0.c1)))AND(vt1.c2)))OR(rt0.c4)) IN ())) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE ((((((((((0.48693403955414216)AND(rt0.c2)))AND(rt0.c1)))AND(vt1.c2)))OR(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((0.48693403955414216)AND(rt0.c2)))AND(rt0.c1)))AND(vt1.c2)))OR(rt0.c4)) IN ())) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE ((((((((((0.48693403955414216)AND(rt0.c2)))AND(rt0.c1)))AND(vt1.c2)))OR(rt0.c4)) IN ()));
SELECT * FROM t0 CROSS JOIN vt1 ON rt0.c5 FULL OUTER JOIN rt0 ON json_type(t0.c1) COLLATE RTRIM WHERE ('-1925055855') ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1925055855') IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON rt0.c5 FULL OUTER JOIN rt0 ON json_type(t0.c1) COLLATE RTRIM ORDER BY vt1.c0  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt1 ON rt0.c5 FULL OUTER JOIN rt0 ON json_type(t0.c1) COLLATE RTRIM WHERE ('-1925055855') ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1925055855') IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON rt0.c5 FULL OUTER JOIN rt0 ON json_type(t0.c1) COLLATE RTRIM ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN 0Xffffffffd610a00c WHEN vt1.c2 THEN rt0.c2 WHEN vt1.c2 THEN t0.c4 ELSE rt0.c5 END) BETWEEN ((NOT (0.5834679890632353))) AND (MIN(t0.c3, rt0.c6, rt0.c1, t0.c0))) CROSS JOIN t0 ON ((((vt1.c0)<>(rt0.c6))) BETWEEN ((t0.c4 IN (vt1.c0, '-125800488', vt1.c2))) AND ((((rt0.c3))!=((rt0.c3))))) WHERE (((((rt0.c1)<=(vt1.c1)))>=((rt0.c0 IN ())))) ORDER BY (((((rt0.c6)) BETWEEN ((x'')) AND ((rt0.c1))))*((((rt0.c3)) NOT BETWEEN ((vt1.c2)) AND ((rt0.c4))))), CASE WHEN ((rt0.c0) NOT BETWEEN (t0.c1) AND (vt1.c0)) THEN (((t0.c1))!=((t0.c3))) ELSE ((((((((rt0.c6)AND(vt1.c2)))AND(0.11465001223852667)))AND(t0.c4)))AND(NULL)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=(vt1.c1)))>=((rt0.c0 IN ())))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN 0Xffffffffd610a00c WHEN vt1.c2 THEN rt0.c2 WHEN vt1.c2 THEN t0.c4 ELSE rt0.c5 END) BETWEEN ((NOT (0.5834679890632353))) AND (MIN(t0.c3, rt0.c6, rt0.c1, t0.c0))) CROSS JOIN t0 ON ((((vt1.c0)!=(rt0.c6))) BETWEEN ((t0.c4 IN (vt1.c0, '-125800488', vt1.c2))) AND ((((rt0.c3))<>((rt0.c3))))) ORDER BY (((((rt0.c6)) BETWEEN ((x'')) AND ((rt0.c1))))*((((rt0.c3)) NOT BETWEEN ((vt1.c2)) AND ((rt0.c4))))), CASE WHEN ((rt0.c0) NOT BETWEEN (t0.c1) AND (vt1.c0)) THEN (((t0.c1))!=((t0.c3))) ELSE ((((((((rt0.c6)AND(vt1.c2)))AND(0.11465001223852667)))AND(t0.c4)))AND(NULL)) END DESC);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN 0Xffffffffd610a00c WHEN vt1.c2 THEN rt0.c2 WHEN vt1.c2 THEN t0.c4 ELSE rt0.c5 END) BETWEEN ((NOT (0.5834679890632353))) AND (MIN(t0.c3, rt0.c6, rt0.c1, t0.c0))) CROSS JOIN t0 ON ((((vt1.c0)<>(rt0.c6))) BETWEEN ((t0.c4 IN (vt1.c0, '-125800488', vt1.c2))) AND ((((rt0.c3))!=((rt0.c3))))) WHERE (((((rt0.c1)<=(vt1.c1)))>=((rt0.c0 IN ())))) ORDER BY (((((rt0.c6)) BETWEEN ((x'')) AND ((rt0.c1))))*((((rt0.c3)) NOT BETWEEN ((vt1.c2)) AND ((rt0.c4))))), CASE WHEN ((rt0.c0) NOT BETWEEN (t0.c1) AND (vt1.c0)) THEN (((t0.c1))!=((t0.c3))) ELSE ((((((((rt0.c6)AND(vt1.c2)))AND(0.11465001223852667)))AND(t0.c4)))AND(NULL)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=(vt1.c1)))>=((rt0.c0 IN ())))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN 0Xffffffffd610a00c WHEN vt1.c2 THEN rt0.c2 WHEN vt1.c2 THEN t0.c4 ELSE rt0.c5 END) BETWEEN ((NOT (0.5834679890632353))) AND (MIN(t0.c3, rt0.c6, rt0.c1, t0.c0))) CROSS JOIN t0 ON ((((vt1.c0)!=(rt0.c6))) BETWEEN ((t0.c4 IN (vt1.c0, '-125800488', vt1.c2))) AND ((((rt0.c3))<>((rt0.c3))))) ORDER BY (((((rt0.c6)) BETWEEN ((x'')) AND ((rt0.c1))))*((((rt0.c3)) NOT BETWEEN ((vt1.c2)) AND ((rt0.c4))))), CASE WHEN ((rt0.c0) NOT BETWEEN (t0.c1) AND (vt1.c0)) THEN (((t0.c1))!=((t0.c3))) ELSE ((((((((rt0.c6)AND(vt1.c2)))AND(0.11465001223852667)))AND(t0.c4)))AND(NULL)) END DESC);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN 0Xffffffffd610a00c WHEN vt1.c2 THEN rt0.c2 WHEN vt1.c2 THEN t0.c4 ELSE rt0.c5 END) BETWEEN ((NOT (0.5834679890632353))) AND (MIN(t0.c3, rt0.c6, rt0.c1, t0.c0))) CROSS JOIN t0 ON ((((vt1.c0)<>(rt0.c6))) BETWEEN ((t0.c4 IN (vt1.c0, '-125800488', vt1.c2))) AND ((((rt0.c3))!=((rt0.c3))))) WHERE (((((rt0.c1)<=(vt1.c1)))>=((rt0.c0 IN ())))) ORDER BY (((((rt0.c6)) BETWEEN ((x'')) AND ((rt0.c1))))*((((rt0.c3)) NOT BETWEEN ((vt1.c2)) AND ((rt0.c4))))), CASE WHEN ((rt0.c0) NOT BETWEEN (t0.c1) AND (vt1.c0)) THEN (((t0.c1))!=((t0.c3))) ELSE ((((((((rt0.c6)AND(vt1.c2)))AND(0.11465001223852667)))AND(t0.c4)))AND(NULL)) END DESC;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE ((((((t0.c1)%(t0.c4)), CASE WHEN t0.c3 THEN t0.c4 ELSE t0.c2 END, ((t0.c1) NOT NULL), ((vt1.c2)*(vt1.c2)), ((t0.c3)AND(t0.c3))))<((QUOTE(t0.c1), TOTAL_CHANGES(), ((t0.c0) BETWEEN (t0.c4) AND (t0.c2)), t0.c1 COLLATE BINARY, vt1.c1 COLLATE NOCASE)))) ORDER BY CAST((((vt1.c1))>((t0.c4))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c1)%(t0.c4)), CASE WHEN t0.c3 THEN t0.c4 ELSE t0.c2 END, ((t0.c1) NOT NULL), ((vt1.c2)*(vt1.c2)), ((t0.c3)AND(t0.c3))))<((QUOTE(t0.c1), TOTAL_CHANGES(), ((t0.c0) BETWEEN (t0.c4) AND (t0.c2)), t0.c1 COLLATE BINARY, vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON vt1.c0 ORDER BY CAST((((vt1.c1))>((t0.c4))) AS INTEGER) ASC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE ((((((t0.c1)%(t0.c4)), CASE WHEN t0.c3 THEN t0.c4 ELSE t0.c2 END, ((t0.c1) NOT NULL), ((vt1.c2)*(vt1.c2)), ((t0.c3)AND(t0.c3))))<((QUOTE(t0.c1), TOTAL_CHANGES(), ((t0.c0) BETWEEN (t0.c4) AND (t0.c2)), t0.c1 COLLATE BINARY, vt1.c1 COLLATE NOCASE)))) ORDER BY CAST((((vt1.c1))>((t0.c4))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c1)%(t0.c4)), CASE WHEN t0.c3 THEN t0.c4 ELSE t0.c2 END, ((t0.c1) NOT NULL), ((vt1.c2)*(vt1.c2)), ((t0.c3)AND(t0.c3))))<((QUOTE(t0.c1), TOTAL_CHANGES(), ((t0.c0) BETWEEN (t0.c4) AND (t0.c2)), t0.c1 COLLATE BINARY, vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON vt1.c0 ORDER BY CAST((((vt1.c1))>((t0.c4))) AS INTEGER) ASC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE ((((((t0.c1)%(t0.c4)), CASE WHEN t0.c3 THEN t0.c4 ELSE t0.c2 END, ((t0.c1) NOT NULL), ((vt1.c2)*(vt1.c2)), ((t0.c3)AND(t0.c3))))<((QUOTE(t0.c1), TOTAL_CHANGES(), ((t0.c0) BETWEEN (t0.c4) AND (t0.c2)), t0.c1 COLLATE BINARY, vt1.c1 COLLATE NOCASE)))) ORDER BY CAST((((vt1.c1))>((t0.c4))) AS INTEGER) ASC;
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((((((((t0.c2)AND(rt0.c2)))AND(((vt1.c0) ISNULL))))AND(rt0.c4)))AND(((0.1581721598924717) ISNULL)))) ORDER BY (t0.c0 COLLATE RTRIM IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c2)AND(rt0.c2)))AND(((vt1.c0) ISNULL))))AND(rt0.c4)))AND(((0.1581721598924717) ISNULL)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY (t0.c0 COLLATE RTRIM IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((((((((t0.c2)AND(rt0.c2)))AND(((vt1.c0) ISNULL))))AND(rt0.c4)))AND(((0.1581721598924717) ISNULL)))) ORDER BY (t0.c0 COLLATE RTRIM IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c2)AND(rt0.c2)))AND(((vt1.c0) ISNULL))))AND(rt0.c4)))AND(((0.1581721598924717) ISNULL)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY (t0.c0 COLLATE RTRIM IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((((((((t0.c2)AND(rt0.c2)))AND(((vt1.c0) ISNULL))))AND(rt0.c4)))AND(((0.1581721598924717) ISNULL)))) ORDER BY (t0.c0 COLLATE RTRIM IN ()) ASC;
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((vt1.c1)%(vt1.c2 COLLATE NOCASE))) ORDER BY CAST((~ (rt0.c5)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)%(vt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY CAST((~ (rt0.c5)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((vt1.c1)%(vt1.c2 COLLATE NOCASE))) ORDER BY CAST((~ (rt0.c5)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)%(vt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY CAST((~ (rt0.c5)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((vt1.c1)%(vt1.c2 COLLATE NOCASE))) ORDER BY CAST((~ (rt0.c5)) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((x'') BETWEEN (t0.c0) AND (t0.c3)) THEN ((t0.c3)||(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'') BETWEEN (t0.c0) AND (t0.c3)) THEN ((t0.c3)||(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((x'') BETWEEN (t0.c0) AND (t0.c3)) THEN ((t0.c3)||(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'') BETWEEN (t0.c0) AND (t0.c3)) THEN ((t0.c3)||(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((x'') BETWEEN (t0.c0) AND (t0.c3)) THEN ((t0.c3)||(t0.c0)) END);
SELECT * FROM vt1, t0 NATURAL JOIN rt0 WHERE (((((t0.c0) NOT NULL)) BETWEEN ((+ (rt0.c4))) AND (rt0.c3 COLLATE NOCASE))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN (~ (vt1.c2)) WHEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 END THEN (rt0.c1 IN (t0.c4)) WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c0 AS TEXT) ELSE TRIM(t0.c3) END ASC  NULLS FIRST, ((('59z0㔝zT')) NOT BETWEEN (((t0.c2 IN ()))) AND ((CAST(rt0.c4 AS BLOB)))) DESC  NULLS FIRST, ((((((((CASE WHEN t0.c2 THEN vt1.c0 WHEN 0.6135516165587123 THEN rt0.c5 WHEN t0.c4 THEN x'41a0' ELSE rt0.c6 END)AND(CASE rt0.c1  WHEN t0.c2 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c4 WHEN t0.c3 THEN '' ELSE t0.c1 END)))OR(x'ff53ad89')))AND((((t0.c3))<=((rt0.c6))))))AND(TRIM(DISTINCT rt0.c1, rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL)) BETWEEN ((+ (rt0.c4))) AND (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN rt0 ORDER BY CASE WHEN (vt1.c0 IN ()) THEN (~ (vt1.c2)) WHEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 END THEN (rt0.c1 IN (t0.c4)) WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c0 AS TEXT) ELSE TRIM(t0.c3) END ASC  NULLS FIRST, ((('59z0㔝zT')) NOT BETWEEN (((t0.c2 IN ()))) AND ((CAST(rt0.c4 AS BLOB)))) DESC  NULLS FIRST, ((((((((CASE WHEN t0.c2 THEN vt1.c0 WHEN 0.6135516165587123 THEN rt0.c5 WHEN t0.c4 THEN x'41a0' ELSE rt0.c6 END)AND(CASE rt0.c1  WHEN t0.c2 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c4 WHEN t0.c3 THEN '' ELSE t0.c1 END)))OR(x'ff53ad89')))AND((((t0.c3))<=((rt0.c6))))))AND(TRIM(DISTINCT rt0.c1, rt0.c3))) DESC);
SELECT * FROM vt1, t0 NATURAL JOIN rt0 WHERE (((((t0.c0) NOT NULL)) BETWEEN ((+ (rt0.c4))) AND (rt0.c3 COLLATE NOCASE))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN (~ (vt1.c2)) WHEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 END THEN (rt0.c1 IN (t0.c4)) WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c0 AS TEXT) ELSE TRIM(t0.c3) END ASC  NULLS FIRST, ((('59z0㔝zT')) NOT BETWEEN (((t0.c2 IN ()))) AND ((CAST(rt0.c4 AS BLOB)))) DESC  NULLS FIRST, ((((((((CASE WHEN t0.c2 THEN vt1.c0 WHEN 0.6135516165587123 THEN rt0.c5 WHEN t0.c4 THEN x'41a0' ELSE rt0.c6 END)AND(CASE rt0.c1  WHEN t0.c2 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c4 WHEN t0.c3 THEN '' ELSE t0.c1 END)))OR(x'ff53ad89')))AND((((t0.c3))<=((rt0.c6))))))AND(TRIM(DISTINCT rt0.c1, rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL)) BETWEEN ((+ (rt0.c4))) AND (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN rt0 ORDER BY CASE WHEN (vt1.c0 IN ()) THEN (~ (vt1.c2)) WHEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 END THEN (rt0.c1 IN (t0.c4)) WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c0 AS TEXT) ELSE TRIM(t0.c3) END ASC  NULLS FIRST, ((('59z0㔝zT')) NOT BETWEEN (((t0.c2 IN ()))) AND ((CAST(rt0.c4 AS BLOB)))) DESC  NULLS FIRST, ((((((((CASE WHEN t0.c2 THEN vt1.c0 WHEN 0.6135516165587123 THEN rt0.c5 WHEN t0.c4 THEN x'41a0' ELSE rt0.c6 END)AND(CASE rt0.c1  WHEN t0.c2 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c4 WHEN t0.c3 THEN '' ELSE t0.c1 END)))OR(x'ff53ad89')))AND((((t0.c3))<=((rt0.c6))))))AND(TRIM(DISTINCT rt0.c1, rt0.c3))) DESC);
SELECT * FROM vt1, t0 NATURAL JOIN rt0 WHERE (((((t0.c0) NOT NULL)) BETWEEN ((+ (rt0.c4))) AND (rt0.c3 COLLATE NOCASE))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN (~ (vt1.c2)) WHEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 END THEN (rt0.c1 IN (t0.c4)) WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c0 AS TEXT) ELSE TRIM(t0.c3) END ASC  NULLS FIRST, ((('59z0㔝zT')) NOT BETWEEN (((t0.c2 IN ()))) AND ((CAST(rt0.c4 AS BLOB)))) DESC  NULLS FIRST, ((((((((CASE WHEN t0.c2 THEN vt1.c0 WHEN 0.6135516165587123 THEN rt0.c5 WHEN t0.c4 THEN x'41a0' ELSE rt0.c6 END)AND(CASE rt0.c1  WHEN t0.c2 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c4 WHEN t0.c3 THEN '' ELSE t0.c1 END)))OR(x'ff53ad89')))AND((((t0.c3))<=((rt0.c6))))))AND(TRIM(DISTINCT rt0.c1, rt0.c3))) DESC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (NULLIF(((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)), t0.c4 COLLATE RTRIM)) ORDER BY rt0.c3 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)), t0.c4 COLLATE RTRIM)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c3 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (NULLIF(((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)), t0.c4 COLLATE RTRIM)) ORDER BY rt0.c3 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)), t0.c4 COLLATE RTRIM)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c3 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (NULLIF(((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)), t0.c4 COLLATE RTRIM)) ORDER BY rt0.c3 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c5)) AND ((rt0.c5))))+(((rt0.c0)-(rt0.c6))))) ORDER BY (((((rt0.c5)OR(rt0.c2)))OR(rt0.c6)) IN ((((rt0.c3, rt0.c2, rt0.c5))==((0.1531104858685477, rt0.c4, rt0.c4)))))  NULLS FIRST, rt0.c3 DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c5)) AND ((rt0.c5))))+(((rt0.c0)-(rt0.c6))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c5)OR(rt0.c2)))OR(rt0.c6)) IN ((((rt0.c3, rt0.c2, rt0.c5))==((0.1531104858685477, rt0.c4, rt0.c4)))))  NULLS FIRST, rt0.c3 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c5)) AND ((rt0.c5))))+(((rt0.c0)-(rt0.c6))))) ORDER BY (((((rt0.c5)OR(rt0.c2)))OR(rt0.c6)) IN ((((rt0.c3, rt0.c2, rt0.c5))==((0.1531104858685477, rt0.c4, rt0.c4)))))  NULLS FIRST, rt0.c3 DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c5)) AND ((rt0.c5))))+(((rt0.c0)-(rt0.c6))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c5)OR(rt0.c2)))OR(rt0.c6)) IN ((((rt0.c3, rt0.c2, rt0.c5))==((0.1531104858685477, rt0.c4, rt0.c4)))))  NULLS FIRST, rt0.c3 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c5)) AND ((rt0.c5))))+(((rt0.c0)-(rt0.c6))))) ORDER BY (((((rt0.c5)OR(rt0.c2)))OR(rt0.c6)) IN ((((rt0.c3, rt0.c2, rt0.c5))==((0.1531104858685477, rt0.c4, rt0.c4)))))  NULLS FIRST, rt0.c3 DESC;
SELECT * FROM rt0, t0, vt1 WHERE (((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((t0.c3)IS NOT(vt1.c0))) AND (0.1529513440919137))) ORDER BY (- (((((((((rt0.c5)AND(rt0.c4)))AND(rt0.c4)))OR(t0.c3)))AND(t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((t0.c3)IS NOT(vt1.c0))) AND (0.1529513440919137))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (- (((((((((rt0.c5)AND(rt0.c4)))AND(rt0.c4)))OR(t0.c3)))AND(t0.c1))))  NULLS LAST);
SELECT * FROM rt0, t0, vt1 WHERE (((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((t0.c3)IS NOT(vt1.c0))) AND (0.1529513440919137))) ORDER BY (- (((((((((rt0.c5)AND(rt0.c4)))AND(rt0.c4)))OR(t0.c3)))AND(t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((t0.c3)IS NOT(vt1.c0))) AND (0.1529513440919137))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (- (((((((((rt0.c5)AND(rt0.c4)))AND(rt0.c4)))OR(t0.c3)))AND(t0.c1))))  NULLS LAST);
SELECT * FROM rt0, t0, vt1 WHERE (((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((t0.c3)IS NOT(vt1.c0))) AND (0.1529513440919137))) ORDER BY (- (((((((((rt0.c5)AND(rt0.c4)))AND(rt0.c4)))OR(t0.c3)))AND(t0.c1))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c2)AND(vt1.c0)))OR(vt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2)AND(vt1.c0)))OR(vt1.c1))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c2)AND(vt1.c0)))OR(vt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2)AND(vt1.c0)))OR(vt1.c1))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c2)AND(vt1.c0)))OR(vt1.c1))) IS TRUE));
SELECT * FROM t0 CROSS JOIN vt1 ON ((((((rt0.c0)AND('')))OR(t0.c4)))AND(rt0.c1 COLLATE RTRIM)) CROSS JOIN rt0 ON (((t0.c1 COLLATE RTRIM))=(((((t0.c1, rt0.c3, rt0.c0)) BETWEEN ((-743584882, rt0.c6, t0.c2)) AND ((rt0.c2, rt0.c4, t0.c0)))))) WHERE (((((((((((t0.c3) BETWEEN (rt0.c5) AND (t0.c2)))AND(((t0.c0)||(rt0.c2)))))OR(((rt0.c0)+('I{{')))))AND(((rt0.c3)>>(rt0.c3)))))AND(((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c3) BETWEEN (rt0.c5) AND (t0.c2)))AND(((t0.c0)||(rt0.c2)))))OR(((rt0.c0)+('I{{')))))AND(((rt0.c3)>>(rt0.c3)))))AND(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((((rt0.c0)AND('')))OR(t0.c4)))AND(rt0.c1 COLLATE RTRIM)) CROSS JOIN rt0 ON (((t0.c1 COLLATE RTRIM))==(((((t0.c1, rt0.c3, rt0.c0)) BETWEEN ((-743584882, rt0.c6, t0.c2)) AND ((rt0.c2, rt0.c4, t0.c0)))))));
SELECT * FROM t0 CROSS JOIN vt1 ON ((((((rt0.c0)AND('')))OR(t0.c4)))AND(rt0.c1 COLLATE RTRIM)) CROSS JOIN rt0 ON (((t0.c1 COLLATE RTRIM))=(((((t0.c1, rt0.c3, rt0.c0)) BETWEEN ((-743584882, rt0.c6, t0.c2)) AND ((rt0.c2, rt0.c4, t0.c0)))))) WHERE (((((((((((t0.c3) BETWEEN (rt0.c5) AND (t0.c2)))AND(((t0.c0)||(rt0.c2)))))OR(((rt0.c0)+('I{{')))))AND(((rt0.c3)>>(rt0.c3)))))AND(((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c3) BETWEEN (rt0.c5) AND (t0.c2)))AND(((t0.c0)||(rt0.c2)))))OR(((rt0.c0)+('I{{')))))AND(((rt0.c3)>>(rt0.c3)))))AND(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((((rt0.c0)AND('')))OR(t0.c4)))AND(rt0.c1 COLLATE RTRIM)) CROSS JOIN rt0 ON (((t0.c1 COLLATE RTRIM))==(((((t0.c1, rt0.c3, rt0.c0)) BETWEEN ((-743584882, rt0.c6, t0.c2)) AND ((rt0.c2, rt0.c4, t0.c0)))))));
SELECT * FROM t0 CROSS JOIN vt1 ON ((((((rt0.c0)AND('')))OR(t0.c4)))AND(rt0.c1 COLLATE RTRIM)) CROSS JOIN rt0 ON (((t0.c1 COLLATE RTRIM))=(((((t0.c1, rt0.c3, rt0.c0)) BETWEEN ((-743584882, rt0.c6, t0.c2)) AND ((rt0.c2, rt0.c4, t0.c0)))))) WHERE (((((((((((t0.c3) BETWEEN (rt0.c5) AND (t0.c2)))AND(((t0.c0)||(rt0.c2)))))OR(((rt0.c0)+('I{{')))))AND(((rt0.c3)>>(rt0.c3)))))AND(((t0.c0) NOTNULL))));
SELECT * FROM t0, rt0, vt1 WHERE (((((NOT (vt1.c1))))==(((((t0.c2)) NOT BETWEEN ((rt0.c4)) AND ((vt1.c1))))))) ORDER BY CASE WHEN (- (rt0.c6)) THEN t0.c4 ELSE rt0.c3 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (vt1.c1))))=(((((t0.c2)) NOT BETWEEN ((rt0.c4)) AND ((vt1.c1))))))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY CASE WHEN (- (rt0.c6)) THEN t0.c4 ELSE rt0.c3 COLLATE BINARY END DESC);
SELECT * FROM t0, rt0, vt1 WHERE (((((NOT (vt1.c1))))==(((((t0.c2)) NOT BETWEEN ((rt0.c4)) AND ((vt1.c1))))))) ORDER BY CASE WHEN (- (rt0.c6)) THEN t0.c4 ELSE rt0.c3 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (vt1.c1))))=(((((t0.c2)) NOT BETWEEN ((rt0.c4)) AND ((vt1.c1))))))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY CASE WHEN (- (rt0.c6)) THEN t0.c4 ELSE rt0.c3 COLLATE BINARY END DESC);
SELECT * FROM t0, rt0, vt1 WHERE (((((NOT (vt1.c1))))==(((((t0.c2)) NOT BETWEEN ((rt0.c4)) AND ((vt1.c1))))))) ORDER BY CASE WHEN (- (rt0.c6)) THEN t0.c4 ELSE rt0.c3 COLLATE BINARY END DESC;
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (0.4997239721978146) ORDER BY ((CASE vt1.c1  WHEN NULL THEN vt1.c0 ELSE rt0.c5 END)&(rt0.c6 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((0.4997239721978146) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((CASE vt1.c1  WHEN NULL THEN vt1.c0 ELSE rt0.c5 END)&(rt0.c6 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (0.4997239721978146) ORDER BY ((CASE vt1.c1  WHEN NULL THEN vt1.c0 ELSE rt0.c5 END)&(rt0.c6 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((0.4997239721978146) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((CASE vt1.c1  WHEN NULL THEN vt1.c0 ELSE rt0.c5 END)&(rt0.c6 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (0.4997239721978146) ORDER BY ((CASE vt1.c1  WHEN NULL THEN vt1.c0 ELSE rt0.c5 END)&(rt0.c6 COLLATE RTRIM));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (((vt1.c1)%(rt0.c3)) IN ()) WHERE ((((((((vt1.c0)OR(rt0.c1)))AND(rt0.c4))))>=((rt0.c6))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)OR(rt0.c1)))AND(rt0.c4))))>=((rt0.c6)))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((vt1.c1)%(rt0.c3)) IN ()));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (((vt1.c1)%(rt0.c3)) IN ()) WHERE ((((((((vt1.c0)OR(rt0.c1)))AND(rt0.c4))))>=((rt0.c6))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)OR(rt0.c1)))AND(rt0.c4))))>=((rt0.c6)))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((vt1.c1)%(rt0.c3)) IN ()));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (((vt1.c1)%(rt0.c3)) IN ()) WHERE ((((((((vt1.c0)OR(rt0.c1)))AND(rt0.c4))))>=((rt0.c6))));
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELY(((t0.c3) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((t0.c3) IS FALSE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELY(((t0.c3) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((t0.c3) IS FALSE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELY(((t0.c3) IS FALSE)));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE ((((t0.c2 IN ())) NOT NULL)) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE ((((t0.c2 IN ())) NOT NULL)) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE ((((t0.c2 IN ())) NOT NULL)) ORDER BY rt0.c0  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c6 THEN rt0.c5 ELSE rt0.c2 END)OR((((rt0.c3, rt0.c0, x''))>=((rt0.c4, NULL, NULL))))))AND(((rt0.c1)-(rt0.c4))))) ORDER BY ((((((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END)AND(((rt0.c3) IS FALSE))))OR(rt0.c0 COLLATE BINARY)))OR(MIN(rt0.c1, rt0.c2))))OR(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c5)))), ((((((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c5))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c6 THEN rt0.c5 ELSE rt0.c2 END)OR((((rt0.c3, rt0.c0, x''))>=((rt0.c4, NULL, NULL))))))AND(((rt0.c1)-(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END)AND(((rt0.c3) IS FALSE))))OR(rt0.c0 COLLATE BINARY)))OR(MIN(rt0.c1, rt0.c2))))OR(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c5)))), ((((((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c5))) NOTNULL)  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c6 THEN rt0.c5 ELSE rt0.c2 END)OR((((rt0.c3, rt0.c0, x''))>=((rt0.c4, NULL, NULL))))))AND(((rt0.c1)-(rt0.c4))))) ORDER BY ((((((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END)AND(((rt0.c3) IS FALSE))))OR(rt0.c0 COLLATE BINARY)))OR(MIN(rt0.c1, rt0.c2))))OR(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c5)))), ((((((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c5))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c6 THEN rt0.c5 ELSE rt0.c2 END)OR((((rt0.c3, rt0.c0, x''))>=((rt0.c4, NULL, NULL))))))AND(((rt0.c1)-(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END)AND(((rt0.c3) IS FALSE))))OR(rt0.c0 COLLATE BINARY)))OR(MIN(rt0.c1, rt0.c2))))OR(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c5)))), ((((((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c5))) NOTNULL)  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c6 THEN rt0.c5 ELSE rt0.c2 END)OR((((rt0.c3, rt0.c0, x''))>=((rt0.c4, NULL, NULL))))))AND(((rt0.c1)-(rt0.c4))))) ORDER BY ((((((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END)AND(((rt0.c3) IS FALSE))))OR(rt0.c0 COLLATE BINARY)))OR(MIN(rt0.c1, rt0.c2))))OR(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c5)))), ((((((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c5))) NOTNULL)  NULLS FIRST;
SELECT * FROM t0 WHERE ('719059487' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('719059487' COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('719059487' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('719059487' COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('719059487' COLLATE NOCASE);
SELECT * FROM t0, vt1, rt0 WHERE ((((t0.c1)IS(rt0.c1)) IN ())) ORDER BY ((((rt0.c1)IS NOT(t0.c0)))-(((rt0.c3) BETWEEN (t0.c3) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((t0.c1)IS(rt0.c1)) IN ())) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((rt0.c1)IS NOT(t0.c0)))-(((rt0.c3) BETWEEN (t0.c3) AND (rt0.c3)))));
SELECT * FROM t0, vt1, rt0 WHERE ((((t0.c1)IS(rt0.c1)) IN ())) ORDER BY ((((rt0.c1)IS NOT(t0.c0)))-(((rt0.c3) BETWEEN (t0.c3) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((t0.c1)IS(rt0.c1)) IN ())) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((rt0.c1)IS NOT(t0.c0)))-(((rt0.c3) BETWEEN (t0.c3) AND (rt0.c3)))));
SELECT * FROM t0, vt1, rt0 WHERE ((((t0.c1)IS(rt0.c1)) IN ())) ORDER BY ((((rt0.c1)IS NOT(t0.c0)))-(((rt0.c3) BETWEEN (t0.c3) AND (rt0.c3))));
SELECT * FROM t0 WHERE ((((t0.c0, 0.01071383178412555, t0.c1)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c3)), ((((t0.c1)OR(t0.c2)))OR(t0.c0)), CAST(t0.c1 AS BLOB))) AND ((t0.c4 COLLATE BINARY, IFNULL(DISTINCT t0.c0, t0.c1), ((x'') IS FALSE))))) ORDER BY '1731588107'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, 0.01071383178412555, t0.c1)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c3)), ((((t0.c1)OR(t0.c2)))OR(t0.c0)), CAST(t0.c1 AS BLOB))) AND ((t0.c4 COLLATE BINARY, IFNULL(DISTINCT t0.c0, t0.c1), ((x'') IS FALSE))))) IS TRUE)  as count FROM t0 ORDER BY '1731588107'  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c0, 0.01071383178412555, t0.c1)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c3)), ((((t0.c1)OR(t0.c2)))OR(t0.c0)), CAST(t0.c1 AS BLOB))) AND ((t0.c4 COLLATE BINARY, IFNULL(DISTINCT t0.c0, t0.c1), ((x'') IS FALSE))))) ORDER BY '1731588107'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, 0.01071383178412555, t0.c1)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c3)), ((((t0.c1)OR(t0.c2)))OR(t0.c0)), CAST(t0.c1 AS BLOB))) AND ((t0.c4 COLLATE BINARY, IFNULL(DISTINCT t0.c0, t0.c1), ((x'') IS FALSE))))) IS TRUE)  as count FROM t0 ORDER BY '1731588107'  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c0, 0.01071383178412555, t0.c1)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c3)), ((((t0.c1)OR(t0.c2)))OR(t0.c0)), CAST(t0.c1 AS BLOB))) AND ((t0.c4 COLLATE BINARY, IFNULL(DISTINCT t0.c0, t0.c1), ((x'') IS FALSE))))) ORDER BY '1731588107'  NULLS FIRST;
