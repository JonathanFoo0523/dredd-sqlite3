-- Time: 2024/06/11 15:05:55
-- Database: database22
-- Database version: 3.40.0
-- seed value: 2679590222
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
COMMIT TRANSACTION; -- 3ms;
UPDATE OR REPLACE rt0 SET (c2)=('1247016072'); -- 0ms;
ANALYZE temp; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '40175'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
REINDEX  vt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES (0.972703565295766, '-347984471'), (NULL, -299861869), (x'', x'e54c'); -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (0.14253378944718376); -- 1ms;
END; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '55426'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL IN ())))>=(((((NULL))<=((x'')))))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1848560969,15');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1718326404); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1375547403,11');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '22408'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35554'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 829329902); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1375547403,11');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
DROP TABLE rt0; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'494b', x''), (NULL, '-347984471'), (x'13bc', 'gOUXD7O&<'); -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT CASE WHEN '-1619882696' THEN 'gOUXD7O&<' WHEN '#㩙0(nLL' THEN x'' WHEN '-1375547403' THEN x'' WHEN NULL THEN NULL WHEN 0.19210112789922962 THEN '' ELSE 0xffffffffffc35355 END, (- ('-299861869')), (- ('-683083054')), ((((((((0X6a903a59)OR(289742257)))OR(NULL)))AND('0.14253378944718376')))OR('-1848560969'))); -- 0ms;
UPDATE vt0 SET c0=0.1113773343594856, c1='v䉠ᶱroF' WHERE (((+ (vt0.c0)))IS NOT(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))); -- 1ms;
END TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET c1=''; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (1411876071), (x''), (NULL); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1014907575);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=15'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c1) VALUES ('0.972703565295766'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('1488693700', NULL), (x'', -1341094521), ('0.14253378944718376', NULL), (NULL, '1411876071'), (NULL, 0.9416344614106791); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
UPDATE OR IGNORE vt0 SET c1=x'', c1='wn*A+Y홪' WHERE vt0.c0; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0Xffffffffb7950a58; -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=1243640559,13');\n; -- 0ms;
PRAGMA mmap_size; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1385266145);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '26537'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
END; -- 2ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1272378563); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '53211'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 43495104); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 54629182); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1341094521,6');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR FAIL INTO vt0(c1) VALUES (-1.014907575E9); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-1.375547403E9)%('')) AS NUMERIC); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1151124745); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
DELETE FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)||(vt0.c0)))))AND('a*')); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0, c1, c2, c3, c4) AS SELECT SUM(0xffffffffd748fad2) OVER (), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((COUNT(*), ((vt0.c0) NOT BETWEEN ('[2E') AND (vt0.c1)), (- (vt0.c1)))) AND ((TYPEOF(vt0.c0), CAST(vt0.c1 AS REAL), (((vt0.c1, vt0.c1, vt0.c1))<((vt0.c0, vt0.c0, vt0.c1)))))), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), '', ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((x'b731')GLOB(vt0.c0)), (- (vt0.c0)), ((vt0.c0) IS FALSE)))), '0.14253378944718376', ((vt0.c0) ISNULL) FROM vt0 WHERE ((+ (((x'') IS TRUE)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43889'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c2)) NOT BETWEEN ((CASE v0.c3  WHEN '-3976363' THEN '' WHEN v0.c2 THEN v0.c1 WHEN '-299861869' THEN v0.c4 ELSE vt0.c0 END)) AND ((CASE NULL  WHEN '1539892926' THEN v0.c4 WHEN v0.c3 THEN v0.c3 WHEN v0.c1 THEN 289742257 ELSE v0.c1 END)))) ORDER BY ABS(((v0.c2) ISNULL)) DESC, CASE WHEN ((v0.c4) ISNULL) THEN ((v0.c2)<(vt0.c1)) WHEN (NOT (v0.c4)) THEN ((v0.c4) IS FALSE) WHEN (- (vt0.c0)) THEN v0.c1 END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN ((CASE v0.c3  WHEN '-3976363' THEN '' WHEN v0.c2 THEN v0.c1 WHEN '-299861869' THEN v0.c4 ELSE vt0.c0 END)) AND ((CASE NULL  WHEN '1539892926' THEN v0.c4 WHEN v0.c3 THEN v0.c3 WHEN v0.c1 THEN 289742257 ELSE v0.c1 END)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ABS(((v0.c2) ISNULL)) DESC, CASE WHEN ((v0.c4) ISNULL) THEN ((v0.c2)<(vt0.c1)) WHEN (NOT (v0.c4)) THEN ((v0.c4) IS FALSE) WHEN (- (vt0.c0)) THEN v0.c1 END ASC);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c2)) NOT BETWEEN ((CASE v0.c3  WHEN '-3976363' THEN '' WHEN v0.c2 THEN v0.c1 WHEN '-299861869' THEN v0.c4 ELSE vt0.c0 END)) AND ((CASE NULL  WHEN '1539892926' THEN v0.c4 WHEN v0.c3 THEN v0.c3 WHEN v0.c1 THEN 289742257 ELSE v0.c1 END)))) ORDER BY ABS(((v0.c2) ISNULL)) DESC, CASE WHEN ((v0.c4) ISNULL) THEN ((v0.c2)<(vt0.c1)) WHEN (NOT (v0.c4)) THEN ((v0.c4) IS FALSE) WHEN (- (vt0.c0)) THEN v0.c1 END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN ((CASE v0.c3  WHEN '-3976363' THEN '' WHEN v0.c2 THEN v0.c1 WHEN '-299861869' THEN v0.c4 ELSE vt0.c0 END)) AND ((CASE NULL  WHEN '1539892926' THEN v0.c4 WHEN v0.c3 THEN v0.c3 WHEN v0.c1 THEN 289742257 ELSE v0.c1 END)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ABS(((v0.c2) ISNULL)) DESC, CASE WHEN ((v0.c4) ISNULL) THEN ((v0.c2)<(vt0.c1)) WHEN (NOT (v0.c4)) THEN ((v0.c4) IS FALSE) WHEN (- (vt0.c0)) THEN v0.c1 END ASC);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c2)) NOT BETWEEN ((CASE v0.c3  WHEN '-3976363' THEN '' WHEN v0.c2 THEN v0.c1 WHEN '-299861869' THEN v0.c4 ELSE vt0.c0 END)) AND ((CASE NULL  WHEN '1539892926' THEN v0.c4 WHEN v0.c3 THEN v0.c3 WHEN v0.c1 THEN 289742257 ELSE v0.c1 END)))) ORDER BY ABS(((v0.c2) ISNULL)) DESC, CASE WHEN ((v0.c4) ISNULL) THEN ((v0.c2)<(vt0.c1)) WHEN (NOT (v0.c4)) THEN ((v0.c4) IS FALSE) WHEN (- (vt0.c0)) THEN v0.c1 END ASC;
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT ((vt0.c0)IS(vt0.c0)))) ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN (+ (vt0.c1)) THEN vt0.c0 END;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((vt0.c0)IS(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN (+ (vt0.c1)) THEN vt0.c0 END);
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT ((vt0.c0)IS(vt0.c0)))) ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN (+ (vt0.c1)) THEN vt0.c0 END;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((vt0.c0)IS(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN (+ (vt0.c1)) THEN vt0.c0 END);
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT ((vt0.c0)IS(vt0.c0)))) ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN (+ (vt0.c1)) THEN vt0.c0 END;
SELECT ALL * FROM vt0 WHERE (CASE (- (0.5217023939969653))  WHEN ('' IN (vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE vt0.c0 END) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (0.5217023939969653))  WHEN ('' IN (vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE (- (0.5217023939969653))  WHEN ('' IN (vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE vt0.c0 END) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (0.5217023939969653))  WHEN ('' IN (vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE (- (0.5217023939969653))  WHEN ('' IN (vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE vt0.c0 END) ORDER BY vt0.c1  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((((((((((v0.c2)OR(v0.c4)))OR(v0.c1)))OR(vt0.c0)))OR(v0.c0))) NOT NULL), ((TIME(v0.c4, v0.c4, v0.c4))<(((v0.c1)+(v0.c0)))) DESC  NULLS FIRST, ((x'')!=(vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((v0.c2)OR(v0.c4)))OR(v0.c1)))OR(vt0.c0)))OR(v0.c0))) NOT NULL), ((TIME(v0.c4, v0.c4, v0.c4))<(((v0.c1)+(v0.c0)))) DESC  NULLS FIRST, ((x'')!=(vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((((((((((v0.c2)OR(v0.c4)))OR(v0.c1)))OR(vt0.c0)))OR(v0.c0))) NOT NULL), ((TIME(v0.c4, v0.c4, v0.c4))<(((v0.c1)+(v0.c0)))) DESC  NULLS FIRST, ((x'')!=(vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((v0.c2)OR(v0.c4)))OR(v0.c1)))OR(vt0.c0)))OR(v0.c0))) NOT NULL), ((TIME(v0.c4, v0.c4, v0.c4))<(((v0.c1)+(v0.c0)))) DESC  NULLS FIRST, ((x'')!=(vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((((((((((v0.c2)OR(v0.c4)))OR(v0.c1)))OR(vt0.c0)))OR(v0.c0))) NOT NULL), ((TIME(v0.c4, v0.c4, v0.c4))<(((v0.c1)+(v0.c0)))) DESC  NULLS FIRST, ((x'')!=(vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c2);
SELECT ALL * FROM v0 WHERE ((v0.c2 IN ()) COLLATE RTRIM) ORDER BY INSTR(((((v0.c4)OR(v0.c1)))AND(v0.c3)), 0Xffffffffee544c9e) DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY INSTR(((((v0.c4)OR(v0.c1)))AND(v0.c3)), 0xffffffffee544c9e) DESC);
SELECT ALL * FROM v0 WHERE ((v0.c2 IN ()) COLLATE RTRIM) ORDER BY INSTR(((((v0.c4)OR(v0.c1)))AND(v0.c3)), 0Xffffffffee544c9e) DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY INSTR(((((v0.c4)OR(v0.c1)))AND(v0.c3)), 0xffffffffee544c9e) DESC);
SELECT ALL * FROM v0 WHERE ((v0.c2 IN ()) COLLATE RTRIM) ORDER BY INSTR(((((v0.c4)OR(v0.c1)))AND(v0.c3)), 0Xffffffffee544c9e) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (v0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (v0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (v0.c2)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((vt0.c1))) AS TEXT)) ORDER BY GLOB((v0.c3 IN ()), ((1655574277) IS TRUE)) ASC  NULLS FIRST, ((((((((((vt0.c0)AND(vt0.c0)))AND(v0.c2)))OR(v0.c2)))OR(v0.c0)))<<(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((vt0.c1))) AS TEXT)) IS TRUE)  as count FROM vt0, v0 ORDER BY GLOB((v0.c3 IN ()), ((1655574277) IS TRUE)) ASC  NULLS FIRST, ((((((((((vt0.c0)AND(vt0.c0)))AND(v0.c2)))OR(v0.c2)))OR(v0.c0)))<<(CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((vt0.c1))) AS TEXT)) ORDER BY GLOB((v0.c3 IN ()), ((1655574277) IS TRUE)) ASC  NULLS FIRST, ((((((((((vt0.c0)AND(vt0.c0)))AND(v0.c2)))OR(v0.c2)))OR(v0.c0)))<<(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((vt0.c1))) AS TEXT)) IS TRUE)  as count FROM vt0, v0 ORDER BY GLOB((v0.c3 IN ()), ((1655574277) IS TRUE)) ASC  NULLS FIRST, ((((((((((vt0.c0)AND(vt0.c0)))AND(v0.c2)))OR(v0.c2)))OR(v0.c0)))<<(CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((vt0.c1))) AS TEXT)) ORDER BY GLOB((v0.c3 IN ()), ((1655574277) IS TRUE)) ASC  NULLS FIRST, ((((((((((vt0.c0)AND(vt0.c0)))AND(v0.c2)))OR(v0.c2)))OR(v0.c0)))<<(CAST(vt0.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 IN (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 IN (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 IN (vt0.c1)) IN ()));
SELECT * FROM v0 WHERE (((v0.c0)>(v0.c0)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0)>(v0.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)>(v0.c0)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0)>(v0.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)>(v0.c0)) COLLATE BINARY COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c1)AND(v0.c1)))AND(v0.c2)) THEN (v0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((v0.c1)AND(v0.c1)))AND(v0.c2)) THEN (v0.c2 IN ()) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c1)AND(v0.c1)))AND(v0.c2)) THEN (v0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((v0.c1)AND(v0.c1)))AND(v0.c2)) THEN (v0.c2 IN ()) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c1)AND(v0.c1)))AND(v0.c2)) THEN (v0.c2 IN ()) END);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON CASE WHEN (v0.c3 IN ()) THEN 1.655574277E9 ELSE ((vt0.c0) ISNULL) END WHERE (JULIANDAY((((v0.c2, v0.c2, v0.c2))>=((vt0.c1, v0.c3, 0.7182163941218332))), CASE WHEN v0.c1 THEN v0.c3 WHEN v0.c4 THEN v0.c3 WHEN 0.3399212584802036 THEN NULL ELSE v0.c2 END, ((x'')AND(0.12384485939164802)), 2010240618, x'3c2e'));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY((((v0.c2, v0.c2, v0.c2))>=((vt0.c1, v0.c3, 0.7182163941218332))), CASE WHEN v0.c1 THEN v0.c3 WHEN v0.c4 THEN v0.c3 WHEN 0.3399212584802036 THEN NULL ELSE v0.c2 END, ((x'')AND(0.12384485939164802)), 2010240618, x'3c2e')) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CASE WHEN (v0.c3 IN ()) THEN 1.655574277E9 ELSE ((vt0.c0) ISNULL) END);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON CASE WHEN (v0.c3 IN ()) THEN 1.655574277E9 ELSE ((vt0.c0) ISNULL) END WHERE (JULIANDAY((((v0.c2, v0.c2, v0.c2))>=((vt0.c1, v0.c3, 0.7182163941218332))), CASE WHEN v0.c1 THEN v0.c3 WHEN v0.c4 THEN v0.c3 WHEN 0.3399212584802036 THEN NULL ELSE v0.c2 END, ((x'')AND(0.12384485939164802)), 2010240618, x'3c2e'));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY((((v0.c2, v0.c2, v0.c2))>=((vt0.c1, v0.c3, 0.7182163941218332))), CASE WHEN v0.c1 THEN v0.c3 WHEN v0.c4 THEN v0.c3 WHEN 0.3399212584802036 THEN NULL ELSE v0.c2 END, ((x'')AND(0.12384485939164802)), 2010240618, x'3c2e')) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CASE WHEN (v0.c3 IN ()) THEN 1.655574277E9 ELSE ((vt0.c0) ISNULL) END);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON CASE WHEN (v0.c3 IN ()) THEN 1.655574277E9 ELSE ((vt0.c0) ISNULL) END WHERE (JULIANDAY((((v0.c2, v0.c2, v0.c2))>=((vt0.c1, v0.c3, 0.7182163941218332))), CASE WHEN v0.c1 THEN v0.c3 WHEN v0.c4 THEN v0.c3 WHEN 0.3399212584802036 THEN NULL ELSE v0.c2 END, ((x'')AND(0.12384485939164802)), 2010240618, x'3c2e'));
SELECT ALL * FROM v0 WHERE (((v0.c1) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c1) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c1) ISNULL) COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE ((-3976363 IN ()) COLLATE BINARY) ORDER BY CASE WHEN CAST(v0.c4 AS NUMERIC) THEN '1248720450' WHEN CAST(v0.c4 AS TEXT) THEN v0.c1 WHEN v0.c3 THEN ((v0.c3) IS TRUE) ELSE ((((v0.c0)OR(v0.c2)))OR(v0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((-3976363 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c4 AS NUMERIC) THEN '1248720450' WHEN CAST(v0.c4 AS TEXT) THEN v0.c1 WHEN v0.c3 THEN ((v0.c3) IS TRUE) ELSE ((((v0.c0)OR(v0.c2)))OR(v0.c2)) END  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((-3976363 IN ()) COLLATE BINARY) ORDER BY CASE WHEN CAST(v0.c4 AS NUMERIC) THEN '1248720450' WHEN CAST(v0.c4 AS TEXT) THEN v0.c1 WHEN v0.c3 THEN ((v0.c3) IS TRUE) ELSE ((((v0.c0)OR(v0.c2)))OR(v0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((-3976363 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c4 AS NUMERIC) THEN '1248720450' WHEN CAST(v0.c4 AS TEXT) THEN v0.c1 WHEN v0.c3 THEN ((v0.c3) IS TRUE) ELSE ((((v0.c0)OR(v0.c2)))OR(v0.c2)) END  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((-3976363 IN ()) COLLATE BINARY) ORDER BY CASE WHEN CAST(v0.c4 AS NUMERIC) THEN '1248720450' WHEN CAST(v0.c4 AS TEXT) THEN v0.c1 WHEN v0.c3 THEN ((v0.c3) IS TRUE) ELSE ((((v0.c0)OR(v0.c2)))OR(v0.c2)) END  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (0.12384485939164802);
SELECT SUM(count) FROM (SELECT ((0.12384485939164802) IS TRUE)  as count FROM v0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (0.12384485939164802);
SELECT SUM(count) FROM (SELECT ((0.12384485939164802) IS TRUE)  as count FROM v0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (0.12384485939164802);
SELECT * FROM v0, vt0 WHERE (((-475218122) BETWEEN (CASE v0.c4  WHEN v0.c4 THEN v0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c2 THEN v0.c4 END) AND (((v0.c1)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((-475218122) BETWEEN (CASE v0.c4  WHEN v0.c4 THEN v0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c2 THEN v0.c4 END) AND (((v0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((-475218122) BETWEEN (CASE v0.c4  WHEN v0.c4 THEN v0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c2 THEN v0.c4 END) AND (((v0.c1)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((-475218122) BETWEEN (CASE v0.c4  WHEN v0.c4 THEN v0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c2 THEN v0.c4 END) AND (((v0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((-475218122) BETWEEN (CASE v0.c4  WHEN v0.c4 THEN v0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c2 THEN v0.c4 END) AND (((v0.c1)IS(vt0.c1)))));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (('336202145' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('336202145' IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (('336202145' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('336202145' IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (('336202145' IN ()));
SELECT ALL * FROM v0, vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN ((((v0.c1)AND(v0.c1)))OR(v0.c0)) THEN (NOT (v0.c3)) WHEN v0.c1 THEN (+ (v0.c1)) WHEN ('-299861869' IN ()) THEN '-2084641617' ELSE ((v0.c0)<<(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOTNULL)  WHEN ((((v0.c1)AND(v0.c1)))OR(v0.c0)) THEN (NOT (v0.c3)) WHEN v0.c1 THEN (+ (v0.c1)) WHEN ('-299861869' IN ()) THEN '-2084641617' ELSE ((v0.c0)<<(vt0.c1)) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN ((((v0.c1)AND(v0.c1)))OR(v0.c0)) THEN (NOT (v0.c3)) WHEN v0.c1 THEN (+ (v0.c1)) WHEN ('-299861869' IN ()) THEN '-2084641617' ELSE ((v0.c0)<<(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOTNULL)  WHEN ((((v0.c1)AND(v0.c1)))OR(v0.c0)) THEN (NOT (v0.c3)) WHEN v0.c1 THEN (+ (v0.c1)) WHEN ('-299861869' IN ()) THEN '-2084641617' ELSE ((v0.c0)<<(vt0.c1)) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN ((((v0.c1)AND(v0.c1)))OR(v0.c0)) THEN (NOT (v0.c3)) WHEN v0.c1 THEN (+ (v0.c1)) WHEN ('-299861869' IN ()) THEN '-2084641617' ELSE ((v0.c0)<<(vt0.c1)) END);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) IN ()) DESC  NULLS FIRST, (((((vt0.c1))<((vt0.c1)))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0)IS(vt0.c0)))), (((((vt0.c0)AND(x'')))AND(0.7590519263040326)) IN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) IN ()) DESC  NULLS FIRST, (((((vt0.c1))<((vt0.c1)))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0)IS(vt0.c0)))), (((((vt0.c0)AND(x'')))AND(0.7590519263040326)) IN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) IN ()) DESC  NULLS FIRST, (((((vt0.c1))<((vt0.c1)))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0)IS(vt0.c0)))), (((((vt0.c0)AND(x'')))AND(0.7590519263040326)) IN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) IN ()) DESC  NULLS FIRST, (((((vt0.c1))<((vt0.c1)))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0)IS(vt0.c0)))), (((((vt0.c0)AND(x'')))AND(0.7590519263040326)) IN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) IN ()) DESC  NULLS FIRST, (((((vt0.c1))<((vt0.c1)))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0)IS(vt0.c0)))), (((((vt0.c0)AND(x'')))AND(0.7590519263040326)) IN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c1)<<(v0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)<<(v0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c1)<<(v0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)<<(v0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c1)<<(v0.c1)) AS NUMERIC));
SELECT * FROM v0 WHERE ((((((v0.c2) NOT NULL)))=(((((0.972703565295766)) NOT BETWEEN ((v0.c2)) AND ((v0.c4)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2) NOT NULL)))=(((((0.972703565295766)) NOT BETWEEN ((v0.c2)) AND ((v0.c4))))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c2) NOT NULL)))=(((((0.972703565295766)) NOT BETWEEN ((v0.c2)) AND ((v0.c4)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2) NOT NULL)))=(((((0.972703565295766)) NOT BETWEEN ((v0.c2)) AND ((v0.c4))))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c2) NOT NULL)))=(((((0.972703565295766)) NOT BETWEEN ((v0.c2)) AND ((v0.c4)))))));
SELECT * FROM vt0 WHERE (((((vt0.c0 IN ())))>((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)) THEN UNLIKELY(vt0.c0) WHEN (((0.45026859239420114)) BETWEEN ((vt0.c1)) AND (('-1214969256'))) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (x'')) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ())))>((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)) THEN UNLIKELY(vt0.c0) WHEN (((0.45026859239420114)) BETWEEN ((vt0.c1)) AND (('-1214969256'))) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (x'')) END DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0 IN ())))>((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)) THEN UNLIKELY(vt0.c0) WHEN (((0.45026859239420114)) BETWEEN ((vt0.c1)) AND (('-1214969256'))) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (x'')) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ())))>((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)) THEN UNLIKELY(vt0.c0) WHEN (((0.45026859239420114)) BETWEEN ((vt0.c1)) AND (('-1214969256'))) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (x'')) END DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0 IN ())))>((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)) THEN UNLIKELY(vt0.c0) WHEN (((0.45026859239420114)) BETWEEN ((vt0.c1)) AND (('-1214969256'))) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (x'')) END DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((0xffffffff89451510)>>(((v0.c4) NOT BETWEEN (vt0.c0) AND ('')))));
SELECT SUM(count) FROM (SELECT ((((0Xffffffff89451510)>>(((v0.c4) NOT BETWEEN (vt0.c0) AND (''))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((0xffffffff89451510)>>(((v0.c4) NOT BETWEEN (vt0.c0) AND ('')))));
SELECT SUM(count) FROM (SELECT ((((0Xffffffff89451510)>>(((v0.c4) NOT BETWEEN (vt0.c0) AND (''))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((0xffffffff89451510)>>(((v0.c4) NOT BETWEEN (vt0.c0) AND ('')))));
SELECT * FROM v0, vt0 WHERE (0X11451db1);
SELECT SUM(count) FROM (SELECT ((0x11451db1) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (0X11451db1);
SELECT SUM(count) FROM (SELECT ((0x11451db1) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (0X11451db1);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1)IS(v0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)IS(v0.c3))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1)IS(v0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)IS(v0.c3))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1)IS(v0.c3))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))|(((vt0.c1)OR(vt0.c1))))) ORDER BY ((vt0.c0)>=(vt0.c0)) DESC  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT((vt0.c0 IN (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))|(((vt0.c1)OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)>=(vt0.c0)) DESC  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT((vt0.c0 IN (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))|(((vt0.c1)OR(vt0.c1))))) ORDER BY ((vt0.c0)>=(vt0.c0)) DESC  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT((vt0.c0 IN (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))|(((vt0.c1)OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)>=(vt0.c0)) DESC  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT((vt0.c0 IN (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))|(((vt0.c1)OR(vt0.c1))))) ORDER BY ((vt0.c0)>=(vt0.c0)) DESC  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT((vt0.c0 IN (vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((v0.c0 IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((('.i')>=(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('.i')>=(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((('.i')>=(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('.i')>=(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((('.i')>=(vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c1) IS FALSE)) IS FALSE)) ORDER BY ((((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c1) IS FALSE)) IS FALSE)) ORDER BY ((((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c1) IS FALSE)) IS FALSE)) ORDER BY ((((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))) IS FALSE)  NULLS FIRST;
SELECT * FROM vt0 WHERE ((NOT (ABS(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (ABS(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (ABS(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (ABS(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (ABS(vt0.c1))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOTNULL));
SELECT ALL * FROM v0, vt0 WHERE (((((2.010240618E9) NOT BETWEEN (v0.c1) AND (v0.c4))) BETWEEN (CAST(v0.c1 AS BLOB)) AND (TYPEOF(v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((2.010240618E9) NOT BETWEEN (v0.c1) AND (v0.c4))) BETWEEN (CAST(v0.c1 AS BLOB)) AND (TYPEOF(v0.c1)))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((2.010240618E9) NOT BETWEEN (v0.c1) AND (v0.c4))) BETWEEN (CAST(v0.c1 AS BLOB)) AND (TYPEOF(v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((2.010240618E9) NOT BETWEEN (v0.c1) AND (v0.c4))) BETWEEN (CAST(v0.c1 AS BLOB)) AND (TYPEOF(v0.c1)))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((2.010240618E9) NOT BETWEEN (v0.c1) AND (v0.c4))) BETWEEN (CAST(v0.c1 AS BLOB)) AND (TYPEOF(v0.c1))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((741818270))))|(vt0.c1))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((741818270))))|(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((741818270))))|(vt0.c1))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((741818270))))|(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((741818270))))|(vt0.c1))) ORDER BY vt0.c0  NULLS LAST;
SELECT * FROM vt0 WHERE (((LOWER(vt0.c1))%(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt0.c1))%(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LOWER(vt0.c1))%(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt0.c1))%(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LOWER(vt0.c1))%(vt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) COLLATE RTRIM COLLATE NOCASE) ORDER BY UPPER((v0.c1 IN ())), ((((v0.c0)IS(v0.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY UPPER((v0.c1 IN ())), ((((v0.c0)IS(v0.c2))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) COLLATE RTRIM COLLATE NOCASE) ORDER BY UPPER((v0.c1 IN ())), ((((v0.c0)IS(v0.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY UPPER((v0.c1 IN ())), ((((v0.c0)IS(v0.c2))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) COLLATE RTRIM COLLATE NOCASE) ORDER BY UPPER((v0.c1 IN ())), ((((v0.c0)IS(v0.c2))) ISNULL);
SELECT COUNT(*) FROM vt0, v0 WHERE (json_extract(((v0.c0)/(v0.c4)), x'4b48', ((v0.c4) NOT NULL), ((vt0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_extract(((v0.c0)/(v0.c4)), x'4b48', ((v0.c4) NOT NULL), ((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (json_extract(((v0.c0)/(v0.c4)), x'4b48', ((v0.c4) NOT NULL), ((vt0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_extract(((v0.c0)/(v0.c4)), x'4b48', ((v0.c4) NOT NULL), ((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((CASE vt0.c0  WHEN v0.c2 THEN v0.c0 END)AND(NULLIF(v0.c0, v0.c0))))OR((((v0.c4))<=((0.7785998908207706))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN v0.c2 THEN v0.c0 END)AND(NULLIF(v0.c0, v0.c0))))OR((((v0.c4))<=((0.7785998908207706)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((CASE vt0.c0  WHEN v0.c2 THEN v0.c0 END)AND(NULLIF(v0.c0, v0.c0))))OR((((v0.c4))<=((0.7785998908207706))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN v0.c2 THEN v0.c0 END)AND(NULLIF(v0.c0, v0.c0))))OR((((v0.c4))<=((0.7785998908207706)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((CASE vt0.c0  WHEN v0.c2 THEN v0.c0 END)AND(NULLIF(v0.c0, v0.c0))))OR((((v0.c4))<=((0.7785998908207706))))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT (v0.c3))) ORDER BY ((((v0.c4)|(v0.c3)))/(CAST(v0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (v0.c3))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c4)|(v0.c3)))/(CAST(v0.c0 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT (v0.c3))) ORDER BY ((((v0.c4)|(v0.c3)))/(CAST(v0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (v0.c3))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c4)|(v0.c3)))/(CAST(v0.c0 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT (v0.c3))) ORDER BY ((((v0.c4)|(v0.c3)))/(CAST(v0.c0 AS BLOB)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (NULL) ORDER BY ((((- (v0.c0))))!=(((((v0.c4, v0.c2, vt0.c0)) NOT BETWEEN ((x'', v0.c4, v0.c3)) AND ((vt0.c1, vt0.c1, v0.c2))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((- (v0.c0))))!=(((((v0.c4, v0.c2, vt0.c0)) NOT BETWEEN ((x'', v0.c4, v0.c3)) AND ((vt0.c1, vt0.c1, v0.c2))))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (NULL) ORDER BY ((((- (v0.c0))))!=(((((v0.c4, v0.c2, vt0.c0)) NOT BETWEEN ((x'', v0.c4, v0.c3)) AND ((vt0.c1, vt0.c1, v0.c2))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((- (v0.c0))))!=(((((v0.c4, v0.c2, vt0.c0)) NOT BETWEEN ((x'', v0.c4, v0.c3)) AND ((vt0.c1, vt0.c1, v0.c2))))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (NULL) ORDER BY ((((- (v0.c0))))!=(((((v0.c4, v0.c2, vt0.c0)) NOT BETWEEN ((x'', v0.c4, v0.c3)) AND ((vt0.c1, vt0.c1, v0.c2))))))  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (((DATETIME(0.6144068284597071, 0.9535590668640025, vt0.c1)) NOT BETWEEN (((v0.c1)>>(vt0.c0))) AND (((v0.c3)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(0.6144068284597071, 0.9535590668640025, vt0.c1)) NOT BETWEEN (((v0.c1)>>(vt0.c0))) AND (((v0.c3)AND(vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((DATETIME(0.6144068284597071, 0.9535590668640025, vt0.c1)) NOT BETWEEN (((v0.c1)>>(vt0.c0))) AND (((v0.c3)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(0.6144068284597071, 0.9535590668640025, vt0.c1)) NOT BETWEEN (((v0.c1)>>(vt0.c0))) AND (((v0.c3)AND(vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((DATETIME(0.6144068284597071, 0.9535590668640025, vt0.c1)) NOT BETWEEN (((v0.c1)>>(vt0.c0))) AND (((v0.c3)AND(vt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((~ (v0.c0))) NOT NULL)) ORDER BY (((((+ (v0.c4)))AND(CASE v0.c3  WHEN v0.c2 THEN v0.c4 ELSE v0.c0 END)))OR((((v0.c2))>((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY (((((+ (v0.c4)))AND(CASE v0.c3  WHEN v0.c2 THEN v0.c4 ELSE v0.c0 END)))OR((((v0.c2))>((v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE ((((~ (v0.c0))) NOT NULL)) ORDER BY (((((+ (v0.c4)))AND(CASE v0.c3  WHEN v0.c2 THEN v0.c4 ELSE v0.c0 END)))OR((((v0.c2))>((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY (((((+ (v0.c4)))AND(CASE v0.c3  WHEN v0.c2 THEN v0.c4 ELSE v0.c0 END)))OR((((v0.c2))>((v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE ((((~ (v0.c0))) NOT NULL)) ORDER BY (((((+ (v0.c4)))AND(CASE v0.c3  WHEN v0.c2 THEN v0.c4 ELSE v0.c0 END)))OR((((v0.c2))>((v0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c2 IN ()))AND(((((((((v0.c2)OR(v0.c3)))AND(v0.c2)))AND(v0.c2)))AND(v0.c3)))))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2 IN ()))AND(((((((((v0.c2)OR(v0.c3)))AND(v0.c2)))AND(v0.c2)))AND(v0.c3)))))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c2 IN ()))AND(((((((((v0.c2)OR(v0.c3)))AND(v0.c2)))AND(v0.c2)))AND(v0.c3)))))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2 IN ()))AND(((((((((v0.c2)OR(v0.c3)))AND(v0.c2)))AND(v0.c2)))AND(v0.c3)))))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c2 IN ()))AND(((((((((v0.c2)OR(v0.c3)))AND(v0.c2)))AND(v0.c2)))AND(v0.c3)))))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (vt0.c1)))));
SELECT * FROM vt0, v0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT * FROM vt0, v0 WHERE (((ABS(v0.c0))IS(CASE v0.c3  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(v0.c0))IS(CASE v0.c3  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((ABS(v0.c0))IS(CASE v0.c3  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(v0.c0))IS(CASE v0.c3  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((ABS(v0.c0))IS(CASE v0.c3  WHEN v0.c0 THEN v0.c0 END)));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c3) ORDER BY ((CAST(v0.c2 AS TEXT))|(((v0.c2)AND(v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c2 AS TEXT))|(((v0.c2)AND(v0.c1)))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c3) ORDER BY ((CAST(v0.c2 AS TEXT))|(((v0.c2)AND(v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c2 AS TEXT))|(((v0.c2)AND(v0.c1)))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c3) ORDER BY ((CAST(v0.c2 AS TEXT))|(((v0.c2)AND(v0.c1)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<((~ (vt0.c0)))));
SELECT ALL * FROM v0 WHERE ((((((v0.c4) BETWEEN (v0.c0) AND (v0.c0))))!=((v0.c4 COLLATE RTRIM)))) ORDER BY CASE WHEN ((v0.c3) NOT NULL) THEN (v0.c3 IN ()) ELSE ((v0.c2)=(v0.c0)) END  NULLS LAST, v0.c4 DESC, ((~ (v0.c4)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c4) BETWEEN (v0.c0) AND (v0.c0))))!=((v0.c4 COLLATE RTRIM)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c3) NOT NULL) THEN (v0.c3 IN ()) ELSE ((v0.c2)=(v0.c0)) END  NULLS LAST, v0.c4 DESC, ((~ (v0.c4)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((v0.c4) BETWEEN (v0.c0) AND (v0.c0))))!=((v0.c4 COLLATE RTRIM)))) ORDER BY CASE WHEN ((v0.c3) NOT NULL) THEN (v0.c3 IN ()) ELSE ((v0.c2)=(v0.c0)) END  NULLS LAST, v0.c4 DESC, ((~ (v0.c4)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c4) BETWEEN (v0.c0) AND (v0.c0))))!=((v0.c4 COLLATE RTRIM)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c3) NOT NULL) THEN (v0.c3 IN ()) ELSE ((v0.c2)=(v0.c0)) END  NULLS LAST, v0.c4 DESC, ((~ (v0.c4)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((v0.c4) BETWEEN (v0.c0) AND (v0.c0))))!=((v0.c4 COLLATE RTRIM)))) ORDER BY CASE WHEN ((v0.c3) NOT NULL) THEN (v0.c3 IN ()) ELSE ((v0.c2)=(v0.c0)) END  NULLS LAST, v0.c4 DESC, ((~ (v0.c4)) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON ((((v0.c3)=(vt0.c0))) BETWEEN ((v0.c1 IN ())) AND (CAST('U/Yi}*[oa' AS TEXT))) WHERE ((((vt0.c0, v0.c2, vt0.c0, v0.c4, v0.c1)) NOT BETWEEN ((((v0.c0)LIKE(vt0.c0)), json_quote(v0.c2), ((v0.c2) BETWEEN (v0.c3) AND (v0.c2)), ((vt0.c0)|(vt0.c1)), ((v0.c4)||(vt0.c1)))) AND ((((vt0.c0)=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c3 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 ELSE x'' END, ((v0.c2) NOT NULL), vt0.c1, (((v0.c0, v0.c4, v0.c1))=((v0.c4, vt0.c0, v0.c4)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, v0.c2, vt0.c0, v0.c4, v0.c1)) NOT BETWEEN ((((v0.c0)LIKE(vt0.c0)), json_quote(v0.c2), ((v0.c2) BETWEEN (v0.c3) AND (v0.c2)), ((vt0.c0)|(vt0.c1)), ((v0.c4)||(vt0.c1)))) AND ((((vt0.c0)=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c3 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 ELSE x'' END, ((v0.c2) NOT NULL), vt0.c1, (((v0.c0, v0.c4, v0.c1))=((v0.c4, vt0.c0, v0.c4))))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((v0.c3)==(vt0.c0))) BETWEEN ((v0.c1 IN ())) AND (CAST('U/Yi}*[oa' AS TEXT))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON ((((v0.c3)=(vt0.c0))) BETWEEN ((v0.c1 IN ())) AND (CAST('U/Yi}*[oa' AS TEXT))) WHERE ((((vt0.c0, v0.c2, vt0.c0, v0.c4, v0.c1)) NOT BETWEEN ((((v0.c0)LIKE(vt0.c0)), json_quote(v0.c2), ((v0.c2) BETWEEN (v0.c3) AND (v0.c2)), ((vt0.c0)|(vt0.c1)), ((v0.c4)||(vt0.c1)))) AND ((((vt0.c0)=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c3 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 ELSE x'' END, ((v0.c2) NOT NULL), vt0.c1, (((v0.c0, v0.c4, v0.c1))=((v0.c4, vt0.c0, v0.c4)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, v0.c2, vt0.c0, v0.c4, v0.c1)) NOT BETWEEN ((((v0.c0)LIKE(vt0.c0)), json_quote(v0.c2), ((v0.c2) BETWEEN (v0.c3) AND (v0.c2)), ((vt0.c0)|(vt0.c1)), ((v0.c4)||(vt0.c1)))) AND ((((vt0.c0)=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c3 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 ELSE x'' END, ((v0.c2) NOT NULL), vt0.c1, (((v0.c0, v0.c4, v0.c1))=((v0.c4, vt0.c0, v0.c4))))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((v0.c3)==(vt0.c0))) BETWEEN ((v0.c1 IN ())) AND (CAST('U/Yi}*[oa' AS TEXT))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON ((((v0.c3)=(vt0.c0))) BETWEEN ((v0.c1 IN ())) AND (CAST('U/Yi}*[oa' AS TEXT))) WHERE ((((vt0.c0, v0.c2, vt0.c0, v0.c4, v0.c1)) NOT BETWEEN ((((v0.c0)LIKE(vt0.c0)), json_quote(v0.c2), ((v0.c2) BETWEEN (v0.c3) AND (v0.c2)), ((vt0.c0)|(vt0.c1)), ((v0.c4)||(vt0.c1)))) AND ((((vt0.c0)=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c3 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 ELSE x'' END, ((v0.c2) NOT NULL), vt0.c1, (((v0.c0, v0.c4, v0.c1))=((v0.c4, vt0.c0, v0.c4)))))));
SELECT * FROM vt0 NOT INDEXED, v0 WHERE (((((((v0.c0)*(0.3399212584802036)))OR(v0.c3)))OR(-833196359)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)*(0.3399212584802036)))OR(v0.c3)))OR(-833196359))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0 NOT INDEXED, v0 WHERE (((((((v0.c0)*(0.3399212584802036)))OR(v0.c3)))OR(-833196359)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)*(0.3399212584802036)))OR(v0.c3)))OR(-833196359))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0 NOT INDEXED, v0 WHERE (((((((v0.c0)*(0.3399212584802036)))OR(v0.c3)))OR(-833196359)));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((~ (''))) BETWEEN ((NOT (v0.c3))) AND ((((v0.c1))>=((v0.c3))))) WHERE ((+ (((v0.c2)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c2)IS(vt0.c1))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((~ (''))) BETWEEN ((NOT (v0.c3))) AND ((((v0.c1))>=((v0.c3))))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((~ (''))) BETWEEN ((NOT (v0.c3))) AND ((((v0.c1))>=((v0.c3))))) WHERE ((+ (((v0.c2)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c2)IS(vt0.c1))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((~ (''))) BETWEEN ((NOT (v0.c3))) AND ((((v0.c1))>=((v0.c3))))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((~ (''))) BETWEEN ((NOT (v0.c3))) AND ((((v0.c1))>=((v0.c3))))) WHERE ((+ (((v0.c2)IS(vt0.c1)))));
SELECT * FROM v0, vt0 WHERE (v0.c2) ORDER BY ((((((v0.c2)) BETWEEN ((v0.c4)) AND ((v0.c3))), NULL, CASE WHEN v0.c3 THEN v0.c2 END))!=((((('-1770728693', vt0.c1, v0.c4))>=((v0.c0, vt0.c1, v0.c2))), TRIM(DISTINCT v0.c4), CASE NULL  WHEN v0.c4 THEN vt0.c0 END))) DESC  NULLS FIRST, ((vt0.c1) IS FALSE) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c2)) BETWEEN ((v0.c4)) AND ((v0.c3))), NULL, CASE WHEN v0.c3 THEN v0.c2 END))<>((((('-1770728693', vt0.c1, v0.c4))>=((v0.c0, vt0.c1, v0.c2))), TRIM(DISTINCT v0.c4), CASE NULL  WHEN v0.c4 THEN vt0.c0 END))) DESC  NULLS FIRST, ((vt0.c1) IS FALSE) COLLATE BINARY  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (v0.c2) ORDER BY ((((((v0.c2)) BETWEEN ((v0.c4)) AND ((v0.c3))), NULL, CASE WHEN v0.c3 THEN v0.c2 END))!=((((('-1770728693', vt0.c1, v0.c4))>=((v0.c0, vt0.c1, v0.c2))), TRIM(DISTINCT v0.c4), CASE NULL  WHEN v0.c4 THEN vt0.c0 END))) DESC  NULLS FIRST, ((vt0.c1) IS FALSE) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c2)) BETWEEN ((v0.c4)) AND ((v0.c3))), NULL, CASE WHEN v0.c3 THEN v0.c2 END))<>((((('-1770728693', vt0.c1, v0.c4))>=((v0.c0, vt0.c1, v0.c2))), TRIM(DISTINCT v0.c4), CASE NULL  WHEN v0.c4 THEN vt0.c0 END))) DESC  NULLS FIRST, ((vt0.c1) IS FALSE) COLLATE BINARY  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (v0.c2) ORDER BY ((((((v0.c2)) BETWEEN ((v0.c4)) AND ((v0.c3))), NULL, CASE WHEN v0.c3 THEN v0.c2 END))!=((((('-1770728693', vt0.c1, v0.c4))>=((v0.c0, vt0.c1, v0.c2))), TRIM(DISTINCT v0.c4), CASE NULL  WHEN v0.c4 THEN vt0.c0 END))) DESC  NULLS FIRST, ((vt0.c1) IS FALSE) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ('X[)') ORDER BY CAST(vt0.c0 AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('X[)') IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ('X[)') ORDER BY CAST(vt0.c0 AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('X[)') IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ('X[)') ORDER BY CAST(vt0.c0 AS BLOB) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))+(vt0.c1))) ORDER BY ((QUOTE(vt0.c1)) NOT BETWEEN ((+ ('s}'))) AND (((vt0.c0)OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))+(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((QUOTE(vt0.c1)) NOT BETWEEN ((+ ('s}'))) AND (((vt0.c0)OR(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))+(vt0.c1))) ORDER BY ((QUOTE(vt0.c1)) NOT BETWEEN ((+ ('s}'))) AND (((vt0.c0)OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))+(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((QUOTE(vt0.c1)) NOT BETWEEN ((+ ('s}'))) AND (((vt0.c0)OR(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))+(vt0.c1))) ORDER BY ((QUOTE(vt0.c1)) NOT BETWEEN ((+ ('s}'))) AND (((vt0.c0)OR(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0, v0.c1, vt0.c0))!=((v0.c0, v0.c1, v0.c4))) IN ())) ORDER BY x'a7d4' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, v0.c1, vt0.c0))!=((v0.c0, v0.c1, v0.c4))) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY x'a7d4' ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0, v0.c1, vt0.c0))!=((v0.c0, v0.c1, v0.c4))) IN ())) ORDER BY x'a7d4' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, v0.c1, vt0.c0))!=((v0.c0, v0.c1, v0.c4))) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY x'a7d4' ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0, v0.c1, vt0.c0))!=((v0.c0, v0.c1, v0.c4))) IN ())) ORDER BY x'a7d4' ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((((((v0.c3)) BETWEEN ((v0.c0)) AND ((v0.c4))))AND(((v0.c1) BETWEEN (v0.c4) AND (v0.c0)))))AND('1811219021')));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c3)) BETWEEN ((v0.c0)) AND ((v0.c4))))AND(((v0.c1) BETWEEN (v0.c4) AND (v0.c0)))))AND('1811219021'))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((v0.c3)) BETWEEN ((v0.c0)) AND ((v0.c4))))AND(((v0.c1) BETWEEN (v0.c4) AND (v0.c0)))))AND('1811219021')));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c3)) BETWEEN ((v0.c0)) AND ((v0.c4))))AND(((v0.c1) BETWEEN (v0.c4) AND (v0.c0)))))AND('1811219021'))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((v0.c3)) BETWEEN ((v0.c0)) AND ((v0.c4))))AND(((v0.c1) BETWEEN (v0.c4) AND (v0.c0)))))AND('1811219021')));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON NULLIF((~ (vt0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c4))) WHERE (((((v0.c1)<(v0.c2))) BETWEEN (((vt0.c1)+(x'eda1'))) AND ((((v0.c2))=((v0.c3)))))) ORDER BY (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((TYPEOF(vt0.c0), ((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c3)), vt0.c1 COLLATE RTRIM)) AND ((((((((((v0.c1)OR(v0.c3)))OR(v0.c3)))AND(v0.c2)))AND(v0.c3)), CAST(vt0.c1 AS NUMERIC), CAST(v0.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)<(v0.c2))) BETWEEN (((vt0.c1)+(x'eda1'))) AND ((((v0.c2))=((v0.c3)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON NULLIF((~ (vt0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c4))) ORDER BY (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((TYPEOF(vt0.c0), ((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c3)), vt0.c1 COLLATE RTRIM)) AND ((((((((((v0.c1)OR(v0.c3)))OR(v0.c3)))AND(v0.c2)))AND(v0.c3)), CAST(vt0.c1 AS NUMERIC), CAST(v0.c3 AS NUMERIC)))));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON NULLIF((~ (vt0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c4))) WHERE (((((v0.c1)<(v0.c2))) BETWEEN (((vt0.c1)+(x'eda1'))) AND ((((v0.c2))=((v0.c3)))))) ORDER BY (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((TYPEOF(vt0.c0), ((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c3)), vt0.c1 COLLATE RTRIM)) AND ((((((((((v0.c1)OR(v0.c3)))OR(v0.c3)))AND(v0.c2)))AND(v0.c3)), CAST(vt0.c1 AS NUMERIC), CAST(v0.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)<(v0.c2))) BETWEEN (((vt0.c1)+(x'eda1'))) AND ((((v0.c2))=((v0.c3)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON NULLIF((~ (vt0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c4))) ORDER BY (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((TYPEOF(vt0.c0), ((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c3)), vt0.c1 COLLATE RTRIM)) AND ((((((((((v0.c1)OR(v0.c3)))OR(v0.c3)))AND(v0.c2)))AND(v0.c3)), CAST(vt0.c1 AS NUMERIC), CAST(v0.c3 AS NUMERIC)))));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON NULLIF((~ (vt0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c4))) WHERE (((((v0.c1)<(v0.c2))) BETWEEN (((vt0.c1)+(x'eda1'))) AND ((((v0.c2))=((v0.c3)))))) ORDER BY (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((TYPEOF(vt0.c0), ((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c3)), vt0.c1 COLLATE RTRIM)) AND ((((((((((v0.c1)OR(v0.c3)))OR(v0.c3)))AND(v0.c2)))AND(v0.c3)), CAST(vt0.c1 AS NUMERIC), CAST(v0.c3 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)IS NOT(((vt0.c1)*(vt0.c1))))) ORDER BY ((json_type(vt0.c0)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)IS NOT(((vt0.c1)*(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((json_type(vt0.c0)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)IS NOT(((vt0.c1)*(vt0.c1))))) ORDER BY ((json_type(vt0.c0)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)IS NOT(((vt0.c1)*(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((json_type(vt0.c0)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)IS NOT(((vt0.c1)*(vt0.c1))))) ORDER BY ((json_type(vt0.c0)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) DESC;
SELECT COUNT(*) FROM vt0, v0 WHERE ((vt0.c1 COLLATE RTRIM IN (NULL)));
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE RTRIM IN (NULL))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((vt0.c1 COLLATE RTRIM IN (NULL)));
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE RTRIM IN (NULL))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((vt0.c1 COLLATE RTRIM IN (NULL)));
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN COALESCE(v0.c0, v0.c0) THEN (((v0.c3, v0.c0, x'373b7165'))>=((v0.c0, v0.c3, vt0.c1))) WHEN (v0.c2 IN ()) THEN CAST(v0.c0 AS REAL) WHEN ((vt0.c0)<=(v0.c1)) THEN v0.c4 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN COALESCE(v0.c0, v0.c0) THEN (((v0.c3, v0.c0, x'373b7165'))>=((v0.c0, v0.c3, vt0.c1))) WHEN (v0.c2 IN ()) THEN CAST(v0.c0 AS REAL) WHEN ((vt0.c0)<=(v0.c1)) THEN v0.c4 COLLATE NOCASE END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN COALESCE(v0.c0, v0.c0) THEN (((v0.c3, v0.c0, x'373b7165'))>=((v0.c0, v0.c3, vt0.c1))) WHEN (v0.c2 IN ()) THEN CAST(v0.c0 AS REAL) WHEN ((vt0.c0)<=(v0.c1)) THEN v0.c4 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN COALESCE(v0.c0, v0.c0) THEN (((v0.c3, v0.c0, x'373b7165'))>=((v0.c0, v0.c3, vt0.c1))) WHEN (v0.c2 IN ()) THEN CAST(v0.c0 AS REAL) WHEN ((vt0.c0)<=(v0.c1)) THEN v0.c4 COLLATE NOCASE END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN COALESCE(v0.c0, v0.c0) THEN (((v0.c3, v0.c0, x'373b7165'))>=((v0.c0, v0.c3, vt0.c1))) WHEN (v0.c2 IN ()) THEN CAST(v0.c0 AS REAL) WHEN ((vt0.c0)<=(v0.c1)) THEN v0.c4 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c1)>=(v0.c4))) NOT BETWEEN (MIN(x'', vt0.c1, v0.c2, v0.c3)) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)>=(v0.c4))) NOT BETWEEN (MIN(x'', vt0.c1, v0.c2, v0.c3)) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c1)>=(v0.c4))) NOT BETWEEN (MIN(x'', vt0.c1, v0.c2, v0.c3)) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)>=(v0.c4))) NOT BETWEEN (MIN(x'', vt0.c1, v0.c2, v0.c3)) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c1)>=(v0.c4))) NOT BETWEEN (MIN(x'', vt0.c1, v0.c2, v0.c3)) AND ((vt0.c1 IN ()))));
SELECT ALL * FROM vt0, v0 WHERE (((v0.c2) BETWEEN (((0.3951726395728177) IS TRUE)) AND (((((v0.c1)OR(vt0.c0)))AND(v0.c0))))) ORDER BY (((LIKELIHOOD(vt0.c0, 0.8877302222416934)))>=((UPPER(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((v0.c2) BETWEEN (((0.3951726395728177) IS TRUE)) AND (((((v0.c1)OR(vt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((LIKELIHOOD(vt0.c0, 0.8877302222416934)))>=((UPPER(DISTINCT vt0.c0)))));
SELECT ALL * FROM vt0, v0 WHERE (((v0.c2) BETWEEN (((0.3951726395728177) IS TRUE)) AND (((((v0.c1)OR(vt0.c0)))AND(v0.c0))))) ORDER BY (((LIKELIHOOD(vt0.c0, 0.8877302222416934)))>=((UPPER(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((v0.c2) BETWEEN (((0.3951726395728177) IS TRUE)) AND (((((v0.c1)OR(vt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((LIKELIHOOD(vt0.c0, 0.8877302222416934)))>=((UPPER(DISTINCT vt0.c0)))));
SELECT ALL * FROM vt0, v0 WHERE (((v0.c2) BETWEEN (((0.3951726395728177) IS TRUE)) AND (((((v0.c1)OR(vt0.c0)))AND(v0.c0))))) ORDER BY (((LIKELIHOOD(vt0.c0, 0.8877302222416934)))>=((UPPER(DISTINCT vt0.c0))));
SELECT ALL * FROM v0 WHERE (CAST(((v0.c3)|(v0.c0)) AS TEXT)) ORDER BY CAST(((v0.c0) IS FALSE) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c3)|(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) IS FALSE) AS INTEGER) ASC);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c3)|(v0.c0)) AS TEXT)) ORDER BY CAST(((v0.c0) IS FALSE) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c3)|(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) IS FALSE) AS INTEGER) ASC);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c3)|(v0.c0)) AS TEXT)) ORDER BY CAST(((v0.c0) IS FALSE) AS INTEGER) ASC;
SELECT COUNT(*) FROM v0 WHERE (IFNULL(DISTINCT ((v0.c4)=(v0.c4)), ((1.7976931348623157E308)+(v0.c2))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((v0.c4)=(v0.c4)), ((1.7976931348623157E308)+(v0.c2)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (IFNULL(DISTINCT ((v0.c4)=(v0.c4)), ((1.7976931348623157E308)+(v0.c2))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((v0.c4)=(v0.c4)), ((1.7976931348623157E308)+(v0.c2)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (IFNULL(DISTINCT ((v0.c4)=(v0.c4)), ((1.7976931348623157E308)+(v0.c2))));
SELECT ALL * FROM v0 WHERE ((((((('-14570157')AND(v0.c0)))AND(v0.c2)))||(CASE v0.c3  WHEN v0.c2 THEN v0.c0 WHEN v0.c3 THEN NULL WHEN v0.c4 THEN v0.c0 END))) ORDER BY ((((v0.c2)LIKE(v0.c1)))>>(((v0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((('-14570157')AND(v0.c0)))AND(v0.c2)))||(CASE v0.c3  WHEN v0.c2 THEN v0.c0 WHEN v0.c3 THEN NULL WHEN v0.c4 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2)LIKE(v0.c1)))>>(((v0.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((((('-14570157')AND(v0.c0)))AND(v0.c2)))||(CASE v0.c3  WHEN v0.c2 THEN v0.c0 WHEN v0.c3 THEN NULL WHEN v0.c4 THEN v0.c0 END))) ORDER BY ((((v0.c2)LIKE(v0.c1)))>>(((v0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((('-14570157')AND(v0.c0)))AND(v0.c2)))||(CASE v0.c3  WHEN v0.c2 THEN v0.c0 WHEN v0.c3 THEN NULL WHEN v0.c4 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2)LIKE(v0.c1)))>>(((v0.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((((('-14570157')AND(v0.c0)))AND(v0.c2)))||(CASE v0.c3  WHEN v0.c2 THEN v0.c0 WHEN v0.c3 THEN NULL WHEN v0.c4 THEN v0.c0 END))) ORDER BY ((((v0.c2)LIKE(v0.c1)))>>(((v0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c2 AS BLOB)) BETWEEN (v0.c1) AND (v0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS BLOB)) BETWEEN (v0.c1) AND (v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c2 AS BLOB)) BETWEEN (v0.c1) AND (v0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS BLOB)) BETWEEN (v0.c1) AND (v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c2 AS BLOB)) BETWEEN (v0.c1) AND (v0.c2 COLLATE RTRIM)));
SELECT * FROM v0 WHERE (CAST(((v0.c0)GLOB(v0.c1)) AS REAL)) ORDER BY ((((v0.c2)+(v0.c2)))=((('-1619882696')|(v0.c2)))), ((v0.c4 COLLATE BINARY)IS(((v0.c4)>(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)GLOB(v0.c1)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2)+(v0.c2)))=((('-1619882696')|(v0.c2)))), ((v0.c4 COLLATE BINARY)IS(((v0.c4)>(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (CAST(((v0.c0)GLOB(v0.c1)) AS REAL)) ORDER BY ((((v0.c2)+(v0.c2)))=((('-1619882696')|(v0.c2)))), ((v0.c4 COLLATE BINARY)IS(((v0.c4)>(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)GLOB(v0.c1)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2)+(v0.c2)))=((('-1619882696')|(v0.c2)))), ((v0.c4 COLLATE BINARY)IS(((v0.c4)>(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (CAST(((v0.c0)GLOB(v0.c1)) AS REAL)) ORDER BY ((((v0.c2)+(v0.c2)))=((('-1619882696')|(v0.c2)))), ((v0.c4 COLLATE BINARY)IS(((v0.c4)>(v0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c3 COLLATE RTRIM) BETWEEN ((v0.c3 IN (vt0.c1))) AND (((v0.c1) BETWEEN (v0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((v0.c3 COLLATE RTRIM) BETWEEN ((v0.c3 IN (vt0.c1))) AND (((v0.c1) BETWEEN (v0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c3 COLLATE RTRIM) BETWEEN ((v0.c3 IN (vt0.c1))) AND (((v0.c1) BETWEEN (v0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((v0.c3 COLLATE RTRIM) BETWEEN ((v0.c3 IN (vt0.c1))) AND (((v0.c1) BETWEEN (v0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c3 COLLATE RTRIM) BETWEEN ((v0.c3 IN (vt0.c1))) AND (((v0.c1) BETWEEN (v0.c1) AND (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((x'8859') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'8859') NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'8859') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'8859') NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'8859') NOTNULL));
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(CAST(vt0.c0 AS BLOB), 0.4954409272308664)) ORDER BY json_extract((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), vt0.c1) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CAST(vt0.c0 AS BLOB), 0.4954409272308664)) IS TRUE)  as count FROM vt0 ORDER BY json_extract((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), vt0.c1) DESC);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(CAST(vt0.c0 AS BLOB), 0.4954409272308664)) ORDER BY json_extract((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), vt0.c1) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CAST(vt0.c0 AS BLOB), 0.4954409272308664)) IS TRUE)  as count FROM vt0 ORDER BY json_extract((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), vt0.c1) DESC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()) WHERE (((((vt0.c1)+(vt0.c0))) BETWEEN ('	>R' COLLATE BINARY) AND (vt0.c1 COLLATE RTRIM))) ORDER BY (((-1.991961328E9)) BETWEEN ((CASE vt0.c1  WHEN v0.c1 THEN vt0.c0 END)) AND ((((-1214969256) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)+(vt0.c0))) BETWEEN ('	>R' COLLATE BINARY) AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()) ORDER BY (((-1.991961328E9)) BETWEEN ((CASE vt0.c1  WHEN v0.c1 THEN vt0.c0 END)) AND ((((-1214969256) IS TRUE)))) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()) WHERE (((((vt0.c1)+(vt0.c0))) BETWEEN ('	>R' COLLATE BINARY) AND (vt0.c1 COLLATE RTRIM))) ORDER BY (((-1.991961328E9)) BETWEEN ((CASE vt0.c1  WHEN v0.c1 THEN vt0.c0 END)) AND ((((-1214969256) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)+(vt0.c0))) BETWEEN ('	>R' COLLATE BINARY) AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()) ORDER BY (((-1.991961328E9)) BETWEEN ((CASE vt0.c1  WHEN v0.c1 THEN vt0.c0 END)) AND ((((-1214969256) IS TRUE)))) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()) WHERE (((((vt0.c1)+(vt0.c0))) BETWEEN ('	>R' COLLATE BINARY) AND (vt0.c1 COLLATE RTRIM))) ORDER BY (((-1.991961328E9)) BETWEEN ((CASE vt0.c1  WHEN v0.c1 THEN vt0.c0 END)) AND ((((-1214969256) IS TRUE)))) ASC;
SELECT * FROM v0 WHERE (CAST(1247016072 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1247016072 AS REAL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(1247016072 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1247016072 AS REAL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(1247016072 AS REAL));
SELECT ALL * FROM vt0, v0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE v0.c1 END)OR(((v0.c0) BETWEEN (vt0.c1) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE v0.c1 END)OR(((v0.c0) BETWEEN (vt0.c1) AND (v0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE v0.c1 END)OR(((v0.c0) BETWEEN (vt0.c1) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE v0.c1 END)OR(((v0.c0) BETWEEN (vt0.c1) AND (v0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE v0.c1 END)OR(((v0.c0) BETWEEN (vt0.c1) AND (v0.c1)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c1);
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT * FROM v0, vt0 WHERE (((v0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((v0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((v0.c0) NOTNULL));
SELECT * FROM vt0 CROSS JOIN v0 ON 0.12403434790942702 WHERE (CAST(((vt0.c1) ISNULL) AS REAL)) ORDER BY CAST((((NULL)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0))) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) ISNULL) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON 0.12403434790942702 ORDER BY CAST((((NULL)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0))) AS TEXT) ASC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN v0 ON 0.12403434790942702 WHERE (CAST(((vt0.c1) ISNULL) AS REAL)) ORDER BY CAST((((NULL)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0))) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) ISNULL) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON 0.12403434790942702 ORDER BY CAST((((NULL)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0))) AS TEXT) ASC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN v0 ON 0.12403434790942702 WHERE (CAST(((vt0.c1) ISNULL) AS REAL)) ORDER BY CAST((((NULL)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0))) AS TEXT) ASC  NULLS LAST;
SELECT * FROM v0 WHERE (v0.c3) ORDER BY (- (((((v0.c2)OR(v0.c4)))OR(v0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM v0 ORDER BY (- (((((v0.c2)OR(v0.c4)))OR(v0.c2)))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c3) ORDER BY (- (((((v0.c2)OR(v0.c4)))OR(v0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM v0 ORDER BY (- (((((v0.c2)OR(v0.c4)))OR(v0.c2)))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c3) ORDER BY (- (((((v0.c2)OR(v0.c4)))OR(v0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1 COLLATE BINARY, LIKELY(vt0.c0), (vt0.c1 IN ()))) AND ((0.1168515220541807, CAST(vt0.c0 AS INTEGER), vt0.c1)))) ORDER BY (((~ (vt0.c0)))>>(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) DESC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (NULL COLLATE BINARY) AND ((- (x'd1190492'))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1 COLLATE BINARY, LIKELY(vt0.c0), (vt0.c1 IN ()))) AND ((0.1168515220541807, CAST(vt0.c0 AS INTEGER), vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))>>(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) DESC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (NULL COLLATE BINARY) AND ((- (x'd1190492')))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1 COLLATE BINARY, LIKELY(vt0.c0), (vt0.c1 IN ()))) AND ((0.1168515220541807, CAST(vt0.c0 AS INTEGER), vt0.c1)))) ORDER BY (((~ (vt0.c0)))>>(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) DESC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (NULL COLLATE BINARY) AND ((- (x'd1190492'))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1 COLLATE BINARY, LIKELY(vt0.c0), (vt0.c1 IN ()))) AND ((0.1168515220541807, CAST(vt0.c0 AS INTEGER), vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))>>(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) DESC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (NULL COLLATE BINARY) AND ((- (x'd1190492')))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1 COLLATE BINARY, LIKELY(vt0.c0), (vt0.c1 IN ()))) AND ((0.1168515220541807, CAST(vt0.c0 AS INTEGER), vt0.c1)))) ORDER BY (((~ (vt0.c0)))>>(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) DESC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (NULL COLLATE BINARY) AND ((- (x'd1190492'))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN (vt0.c1 IN (vt0.c1)) THEN v0.c2 COLLATE RTRIM ELSE v0.c2 COLLATE RTRIM END WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN (vt0.c1 IN (vt0.c1)) THEN v0.c2 COLLATE RTRIM ELSE v0.c2 COLLATE RTRIM END);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN (vt0.c1 IN (vt0.c1)) THEN v0.c2 COLLATE RTRIM ELSE v0.c2 COLLATE RTRIM END WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN (vt0.c1 IN (vt0.c1)) THEN v0.c2 COLLATE RTRIM ELSE v0.c2 COLLATE RTRIM END);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN (vt0.c1 IN (vt0.c1)) THEN v0.c2 COLLATE RTRIM ELSE v0.c2 COLLATE RTRIM END WHERE (v0.c0);
SELECT COUNT(*) FROM vt0 WHERE ('8W') ORDER BY ((((vt0.c0) NOT NULL)) ISNULL) ASC, ((((vt0.c0)|(vt0.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (('8W') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL)) ISNULL) ASC, ((((vt0.c0)|(vt0.c1))) NOTNULL) ASC);
SELECT COUNT(*) FROM vt0 WHERE ('8W') ORDER BY ((((vt0.c0) NOT NULL)) ISNULL) ASC, ((((vt0.c0)|(vt0.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (('8W') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL)) ISNULL) ASC, ((((vt0.c0)|(vt0.c1))) NOTNULL) ASC);
SELECT COUNT(*) FROM vt0 WHERE ('8W') ORDER BY ((((vt0.c0) NOT NULL)) ISNULL) ASC, ((((vt0.c0)|(vt0.c1))) NOTNULL) ASC;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((0.022239256257606477 IN (v0.c3)))+(((v0.c3) BETWEEN (vt0.c1) AND (x'')))));
SELECT SUM(count) FROM (SELECT (((((0.022239256257606477 IN (v0.c3)))+(((v0.c3) BETWEEN (vt0.c1) AND (x''))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((0.022239256257606477 IN (v0.c3)))+(((v0.c3) BETWEEN (vt0.c1) AND (x'')))));
SELECT SUM(count) FROM (SELECT (((((0.022239256257606477 IN (v0.c3)))+(((v0.c3) BETWEEN (vt0.c1) AND (x''))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((0.022239256257606477 IN (v0.c3)))+(((v0.c3) BETWEEN (vt0.c1) AND (x'')))));
SELECT COUNT(*) FROM v0, vt0 WHERE (ABS(((v0.c0)>=(vt0.c0)))) ORDER BY ((v0.c1) BETWEEN (v0.c4) AND ('0.3951726395728177')) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((v0.c0)>=(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c1) BETWEEN (v0.c4) AND ('0.3951726395728177')) COLLATE BINARY ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (ABS(((v0.c0)>=(vt0.c0)))) ORDER BY ((v0.c1) BETWEEN (v0.c4) AND ('0.3951726395728177')) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((v0.c0)>=(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c1) BETWEEN (v0.c4) AND ('0.3951726395728177')) COLLATE BINARY ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (ABS(((v0.c0)>=(vt0.c0)))) ORDER BY ((v0.c1) BETWEEN (v0.c4) AND ('0.3951726395728177')) COLLATE BINARY ASC;
SELECT * FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END IN ())) ORDER BY vt0.c0 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY  NULLS LAST);
SELECT * FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END IN ())) ORDER BY vt0.c0 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY  NULLS LAST);
SELECT * FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END IN ())) ORDER BY vt0.c0 COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0.5334830001248174, vt0.c1, vt0.c0)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((((3.36202145E8)OR(1307575836)))OR('23233978720672461007T1239-2531246866700492310-5')), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((((vt0.c1) NOTNULL), ((vt0.c0)GLOB(vt0.c0)), LOWER(vt0.c1))))) ORDER BY TRIM(CAST(vt0.c0 AS INTEGER), ((vt0.c1) BETWEEN (vt0.c1) AND (x''))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.5334830001248174, vt0.c1, vt0.c0)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((((3.36202145E8)OR(1307575836)))OR('23233978720672461007T1239-2531246866700492310-5')), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((((vt0.c1) NOTNULL), ((vt0.c0)GLOB(vt0.c0)), LOWER(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(CAST(vt0.c0 AS INTEGER), ((vt0.c1) BETWEEN (vt0.c1) AND (x''))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0.5334830001248174, vt0.c1, vt0.c0)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((((3.36202145E8)OR(1307575836)))OR('23233978720672461007T1239-2531246866700492310-5')), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((((vt0.c1) NOTNULL), ((vt0.c0)GLOB(vt0.c0)), LOWER(vt0.c1))))) ORDER BY TRIM(CAST(vt0.c0 AS INTEGER), ((vt0.c1) BETWEEN (vt0.c1) AND (x''))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.5334830001248174, vt0.c1, vt0.c0)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((((3.36202145E8)OR(1307575836)))OR('23233978720672461007T1239-2531246866700492310-5')), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((((vt0.c1) NOTNULL), ((vt0.c0)GLOB(vt0.c0)), LOWER(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(CAST(vt0.c0 AS INTEGER), ((vt0.c1) BETWEEN (vt0.c1) AND (x''))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0.5334830001248174, vt0.c1, vt0.c0)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((((3.36202145E8)OR(1307575836)))OR('23233978720672461007T1239-2531246866700492310-5')), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((((vt0.c1) NOTNULL), ((vt0.c0)GLOB(vt0.c0)), LOWER(vt0.c1))))) ORDER BY TRIM(CAST(vt0.c0 AS INTEGER), ((vt0.c1) BETWEEN (vt0.c1) AND (x''))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((v0.c4) NOT BETWEEN (v0.c2) AND (v0.c2))  WHEN CAST(v0.c4 AS REAL) THEN v0.c0 WHEN ((v0.c1)=(v0.c2)) THEN vt0.c0 COLLATE BINARY WHEN v0.c4 COLLATE RTRIM THEN (((v0.c0))=((v0.c2))) WHEN ((v0.c2) NOT BETWEEN (vt0.c0) AND ('-683083054')) THEN ((v0.c1)||(v0.c2)) WHEN ((vt0.c1) IS TRUE) THEN vt0.c1 ELSE ((v0.c1) IS TRUE) END) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c4) NOT BETWEEN (v0.c2) AND (v0.c2))  WHEN CAST(v0.c4 AS REAL) THEN v0.c0 WHEN ((v0.c1)==(v0.c2)) THEN vt0.c0 COLLATE BINARY WHEN v0.c4 COLLATE RTRIM THEN (((v0.c0))==((v0.c2))) WHEN ((v0.c2) NOT BETWEEN (vt0.c0) AND ('-683083054')) THEN ((v0.c1)||(v0.c2)) WHEN ((vt0.c1) IS TRUE) THEN vt0.c1 ELSE ((v0.c1) IS TRUE) END) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((v0.c4) NOT BETWEEN (v0.c2) AND (v0.c2))  WHEN CAST(v0.c4 AS REAL) THEN v0.c0 WHEN ((v0.c1)=(v0.c2)) THEN vt0.c0 COLLATE BINARY WHEN v0.c4 COLLATE RTRIM THEN (((v0.c0))=((v0.c2))) WHEN ((v0.c2) NOT BETWEEN (vt0.c0) AND ('-683083054')) THEN ((v0.c1)||(v0.c2)) WHEN ((vt0.c1) IS TRUE) THEN vt0.c1 ELSE ((v0.c1) IS TRUE) END) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c4) NOT BETWEEN (v0.c2) AND (v0.c2))  WHEN CAST(v0.c4 AS REAL) THEN v0.c0 WHEN ((v0.c1)==(v0.c2)) THEN vt0.c0 COLLATE BINARY WHEN v0.c4 COLLATE RTRIM THEN (((v0.c0))==((v0.c2))) WHEN ((v0.c2) NOT BETWEEN (vt0.c0) AND ('-683083054')) THEN ((v0.c1)||(v0.c2)) WHEN ((vt0.c1) IS TRUE) THEN vt0.c1 ELSE ((v0.c1) IS TRUE) END) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((v0.c4) NOT BETWEEN (v0.c2) AND (v0.c2))  WHEN CAST(v0.c4 AS REAL) THEN v0.c0 WHEN ((v0.c1)=(v0.c2)) THEN vt0.c0 COLLATE BINARY WHEN v0.c4 COLLATE RTRIM THEN (((v0.c0))=((v0.c2))) WHEN ((v0.c2) NOT BETWEEN (vt0.c0) AND ('-683083054')) THEN ((v0.c1)||(v0.c2)) WHEN ((vt0.c1) IS TRUE) THEN vt0.c1 ELSE ((v0.c1) IS TRUE) END) ORDER BY vt0.c0;
SELECT * FROM v0 WHERE ((NOT (((v0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c2) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (((v0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c2) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (((v0.c2) IS FALSE))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((('1405477905')||(-582099978)))&((('ɍI~42uL')-(v0.c0))))) ORDER BY ((((((((v0.c4)OR(DATETIME(vt0.c1, vt0.c0, v0.c4))))OR(((v0.c2)>(v0.c4)))))OR(((vt0.c0)OR(vt0.c1)))))OR('389972930')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('1405477905')||(-582099978)))&((('ɍI~42uL')-(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((v0.c4)OR(DATETIME(vt0.c1, vt0.c0, v0.c4))))OR(((v0.c2)>(v0.c4)))))OR(((vt0.c0)OR(vt0.c1)))))OR('389972930')) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((('1405477905')||(-582099978)))&((('ɍI~42uL')-(v0.c0))))) ORDER BY ((((((((v0.c4)OR(DATETIME(vt0.c1, vt0.c0, v0.c4))))OR(((v0.c2)>(v0.c4)))))OR(((vt0.c0)OR(vt0.c1)))))OR('389972930')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('1405477905')||(-582099978)))&((('ɍI~42uL')-(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((v0.c4)OR(DATETIME(vt0.c1, vt0.c0, v0.c4))))OR(((v0.c2)>(v0.c4)))))OR(((vt0.c0)OR(vt0.c1)))))OR('389972930')) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((('1405477905')||(-582099978)))&((('ɍI~42uL')-(v0.c0))))) ORDER BY ((((((((v0.c4)OR(DATETIME(vt0.c1, vt0.c0, v0.c4))))OR(((v0.c2)>(v0.c4)))))OR(((vt0.c0)OR(vt0.c1)))))OR('389972930')) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((STRFTIME(v0.c4, v0.c2, v0.c2, v0.c1, v0.c3))+(IFNULL(v0.c4, v0.c3))));
SELECT SUM(count) FROM (SELECT ((((STRFTIME(v0.c4, v0.c2, v0.c2, v0.c1, v0.c3))+(IFNULL(v0.c4, v0.c3)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((STRFTIME(v0.c4, v0.c2, v0.c2, v0.c1, v0.c3))+(IFNULL(v0.c4, v0.c3))));
SELECT SUM(count) FROM (SELECT ((((STRFTIME(v0.c4, v0.c2, v0.c2, v0.c1, v0.c3))+(IFNULL(v0.c4, v0.c3)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((STRFTIME(v0.c4, v0.c2, v0.c2, v0.c1, v0.c3))+(IFNULL(v0.c4, v0.c3))));
SELECT * FROM vt0, v0 WHERE (TIME(CAST(v0.c4 AS TEXT), (+ (v0.c3)), ((vt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((TIME(CAST(v0.c4 AS TEXT), (+ (v0.c3)), ((vt0.c1) IS FALSE))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (TIME(CAST(v0.c4 AS TEXT), (+ (v0.c3)), ((vt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((TIME(CAST(v0.c4 AS TEXT), (+ (v0.c3)), ((vt0.c1) IS FALSE))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (TIME(CAST(v0.c4 AS TEXT), (+ (v0.c3)), ((vt0.c1) IS FALSE)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((- (v0.c3))) BETWEEN (TRIM(0.9132175619173165)) AND (((vt0.c0)<<(v0.c1))))) ORDER BY v0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c3))) BETWEEN (TRIM(0.9132175619173165)) AND (((vt0.c0)<<(v0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c3 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((- (v0.c3))) BETWEEN (TRIM(0.9132175619173165)) AND (((vt0.c0)<<(v0.c1))))) ORDER BY v0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c3))) BETWEEN (TRIM(0.9132175619173165)) AND (((vt0.c0)<<(v0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c3 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((- (v0.c3))) BETWEEN (TRIM(0.9132175619173165)) AND (((vt0.c0)<<(v0.c1))))) ORDER BY v0.c3 DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c0)))+(((v0.c1) BETWEEN (v0.c3) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c0)))+(((v0.c1) BETWEEN (v0.c3) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c0)))+(((v0.c1) BETWEEN (v0.c3) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c0)))+(((v0.c1) BETWEEN (v0.c3) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c0)))+(((v0.c1) BETWEEN (v0.c3) AND (vt0.c0)))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON NULL WHERE (((x'') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT NULL)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON NULL);
SELECT ALL * FROM v0 INNER JOIN vt0 ON NULL WHERE (((x'') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT NULL)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON NULL);
SELECT ALL * FROM v0 INNER JOIN vt0 ON NULL WHERE (((x'') NOT NULL));
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(CAST(NULL AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(NULL AS TEXT) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(CAST(NULL AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(NULL AS TEXT) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(CAST(NULL AS TEXT) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (((UNICODE(vt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((UNICODE(vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((UNICODE(vt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((UNICODE(vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((UNICODE(vt0.c0)) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)));
SELECT * FROM vt0 CROSS JOIN v0 ON (('H\dK銌')||(((v0.c0)||(v0.c0)))) WHERE ((- (RTRIM(v0.c2))));
SELECT SUM(count) FROM (SELECT (((- (RTRIM(v0.c2)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (('H\dK銌')||(((v0.c0)||(v0.c0)))));
SELECT * FROM vt0 CROSS JOIN v0 ON (('H\dK銌')||(((v0.c0)||(v0.c0)))) WHERE ((- (RTRIM(v0.c2))));
SELECT SUM(count) FROM (SELECT (((- (RTRIM(v0.c2)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (('H\dK銌')||(((v0.c0)||(v0.c0)))));
SELECT * FROM vt0 CROSS JOIN v0 ON (('H\dK銌')||(((v0.c0)||(v0.c0)))) WHERE ((- (RTRIM(v0.c2))));
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CAST(v0.c4 AS NUMERIC) COLLATE RTRIM WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(v0.c4 AS NUMERIC) COLLATE RTRIM);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CAST(v0.c4 AS NUMERIC) COLLATE RTRIM WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(v0.c4 AS NUMERIC) COLLATE RTRIM);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CAST(v0.c4 AS NUMERIC) COLLATE RTRIM WHERE (x'');
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)-(v0.c4)))<=(((((v0.c0)OR(v0.c1)))AND(v0.c1))))) ORDER BY CAST(((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)-(v0.c4)))<=(((((v0.c0)OR(v0.c1)))AND(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c1)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)-(v0.c4)))<=(((((v0.c0)OR(v0.c1)))AND(v0.c1))))) ORDER BY CAST(((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)-(v0.c4)))<=(((((v0.c0)OR(v0.c1)))AND(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c1)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)-(v0.c4)))<=(((((v0.c0)OR(v0.c1)))AND(v0.c1))))) ORDER BY CAST(((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c1)) AS REAL) ASC;
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (((((v0.c4)) BETWEEN ((0.9132175619173165)) AND ((v0.c0))))<(CASE vt0.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END)) WHERE (0.7182163941218332) ORDER BY ((0.30306945910364547)*(NULLIF(0.1428210750176936, vt0.c1)))  NULLS FIRST, ((CAST(NULL AS BLOB))>=(((v0.c4) BETWEEN (v0.c3) AND (v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7182163941218332) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((((v0.c4)) BETWEEN ((0.9132175619173165)) AND ((v0.c0))))<(CASE vt0.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END)) ORDER BY ((0.30306945910364547)*(NULLIF(0.1428210750176936, vt0.c1)))  NULLS FIRST, ((CAST(NULL AS BLOB))>=(((v0.c4) BETWEEN (v0.c3) AND (v0.c2))))  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (((((v0.c4)) BETWEEN ((0.9132175619173165)) AND ((v0.c0))))<(CASE vt0.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END)) WHERE (0.7182163941218332) ORDER BY ((0.30306945910364547)*(NULLIF(0.1428210750176936, vt0.c1)))  NULLS FIRST, ((CAST(NULL AS BLOB))>=(((v0.c4) BETWEEN (v0.c3) AND (v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7182163941218332) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((((v0.c4)) BETWEEN ((0.9132175619173165)) AND ((v0.c0))))<(CASE vt0.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END)) ORDER BY ((0.30306945910364547)*(NULLIF(0.1428210750176936, vt0.c1)))  NULLS FIRST, ((CAST(NULL AS BLOB))>=(((v0.c4) BETWEEN (v0.c3) AND (v0.c2))))  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (((((v0.c4)) BETWEEN ((0.9132175619173165)) AND ((v0.c0))))<(CASE vt0.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END)) WHERE (0.7182163941218332) ORDER BY ((0.30306945910364547)*(NULLIF(0.1428210750176936, vt0.c1)))  NULLS FIRST, ((CAST(NULL AS BLOB))>=(((v0.c4) BETWEEN (v0.c3) AND (v0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c4)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c4)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c4)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c4)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c4)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) IN ()));
SELECT * FROM vt0 WHERE (CASE ((vt0.c1)/(vt0.c0))  WHEN ((vt0.c1) NOT NULL) THEN vt0.c0 COLLATE BINARY ELSE 0.3142657948264266 END) ORDER BY ((vt0.c1)LIKE(((vt0.c0)<<(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)/(vt0.c0))  WHEN ((vt0.c1) NOT NULL) THEN vt0.c0 COLLATE BINARY ELSE 0.3142657948264266 END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)LIKE(((vt0.c0)<<(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE ((vt0.c1)/(vt0.c0))  WHEN ((vt0.c1) NOT NULL) THEN vt0.c0 COLLATE BINARY ELSE 0.3142657948264266 END) ORDER BY ((vt0.c1)LIKE(((vt0.c0)<<(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)/(vt0.c0))  WHEN ((vt0.c1) NOT NULL) THEN vt0.c0 COLLATE BINARY ELSE 0.3142657948264266 END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)LIKE(((vt0.c0)<<(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE ((vt0.c1)/(vt0.c0))  WHEN ((vt0.c1) NOT NULL) THEN vt0.c0 COLLATE BINARY ELSE 0.3142657948264266 END) ORDER BY ((vt0.c1)LIKE(((vt0.c0)<<(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((v0.c4)|(v0.c4))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (((v0.c4)|(v0.c4))) AND (v0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((v0.c4)|(v0.c4))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (((v0.c4)|(v0.c4))) AND (v0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((v0.c4)|(v0.c4))) AND (v0.c0)));
SELECT * FROM v0 WHERE ((((v0.c1)>>(v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)>>(v0.c2)) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c1)>>(v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)>>(v0.c2)) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c1)>>(v0.c2)) IN ()));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((v0.c3)GLOB(v0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c3)GLOB(v0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((v0.c3)GLOB(v0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c3)GLOB(v0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((v0.c3)GLOB(v0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CASE WHEN ((vt0.c1)/(v0.c2)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN '-1390742615' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN v0.c1 COLLATE NOCASE THEN ((v0.c1)<<(vt0.c0)) WHEN v0.c0 THEN CASE v0.c1  WHEN v0.c0 THEN vt0.c1 END ELSE ((v0.c1)<=(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)/(v0.c2)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN '-1390742615' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN v0.c1 COLLATE NOCASE THEN ((v0.c1)<<(vt0.c0)) WHEN v0.c0 THEN CASE v0.c1  WHEN v0.c0 THEN vt0.c1 END ELSE ((v0.c1)<=(vt0.c1)) END) IS TRUE)  as count FROM v0 NOT INDEXED NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CASE WHEN ((vt0.c1)/(v0.c2)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN '-1390742615' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN v0.c1 COLLATE NOCASE THEN ((v0.c1)<<(vt0.c0)) WHEN v0.c0 THEN CASE v0.c1  WHEN v0.c0 THEN vt0.c1 END ELSE ((v0.c1)<=(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)/(v0.c2)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN '-1390742615' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN v0.c1 COLLATE NOCASE THEN ((v0.c1)<<(vt0.c0)) WHEN v0.c0 THEN CASE v0.c1  WHEN v0.c0 THEN vt0.c1 END ELSE ((v0.c1)<=(vt0.c1)) END) IS TRUE)  as count FROM v0 NOT INDEXED NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CASE WHEN ((vt0.c1)/(v0.c2)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN '-1390742615' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN v0.c1 COLLATE NOCASE THEN ((v0.c1)<<(vt0.c0)) WHEN v0.c0 THEN CASE v0.c1  WHEN v0.c0 THEN vt0.c1 END ELSE ((v0.c1)<=(vt0.c1)) END);
SELECT ALL * FROM vt0, v0 WHERE ((NOT (v0.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c4 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((NOT (v0.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c4 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((NOT (v0.c4 COLLATE BINARY)));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)!=(vt0.c0))  WHEN (vt0.c1 IN ()) THEN vt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<>(vt0.c0))  WHEN (vt0.c1 IN ()) THEN vt0.c1 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)!=(vt0.c0))  WHEN (vt0.c1 IN ()) THEN vt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<>(vt0.c0))  WHEN (vt0.c1 IN ()) THEN vt0.c1 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)!=(vt0.c0))  WHEN (vt0.c1 IN ()) THEN vt0.c1 END);
SELECT * FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.8261776708757953);
SELECT SUM(count) FROM (SELECT ALL ((0.8261776708757953) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.8261776708757953);
SELECT SUM(count) FROM (SELECT ALL ((0.8261776708757953) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.8261776708757953);
SELECT ALL * FROM v0, vt0 WHERE (v0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((v0.c2 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (v0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((v0.c2 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (v0.c2 COLLATE NOCASE);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c1)>=(v0.c0))) ISNULL) WHERE (CAST(((((vt0.c1)AND(v0.c1)))AND(vt0.c1)) AS REAL)) ORDER BY ((((((v0.c1)>(v0.c3)))OR(x'')))AND(v0.c1)) DESC  NULLS FIRST, CASE v0.c4  WHEN v0.c2 THEN v0.c0 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND(v0.c1)))AND(vt0.c1)) AS REAL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c1)>=(v0.c0))) ISNULL) ORDER BY ((((((v0.c1)>(v0.c3)))OR(x'')))AND(v0.c1)) DESC  NULLS FIRST, CASE v0.c4  WHEN v0.c2 THEN v0.c0 END COLLATE NOCASE DESC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c1)>=(v0.c0))) ISNULL) WHERE (CAST(((((vt0.c1)AND(v0.c1)))AND(vt0.c1)) AS REAL)) ORDER BY ((((((v0.c1)>(v0.c3)))OR(x'')))AND(v0.c1)) DESC  NULLS FIRST, CASE v0.c4  WHEN v0.c2 THEN v0.c0 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND(v0.c1)))AND(vt0.c1)) AS REAL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c1)>=(v0.c0))) ISNULL) ORDER BY ((((((v0.c1)>(v0.c3)))OR(x'')))AND(v0.c1)) DESC  NULLS FIRST, CASE v0.c4  WHEN v0.c2 THEN v0.c0 END COLLATE NOCASE DESC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c1)>=(v0.c0))) ISNULL) WHERE (CAST(((((vt0.c1)AND(v0.c1)))AND(vt0.c1)) AS REAL)) ORDER BY ((((((v0.c1)>(v0.c3)))OR(x'')))AND(v0.c1)) DESC  NULLS FIRST, CASE v0.c4  WHEN v0.c2 THEN v0.c0 END COLLATE NOCASE DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (((NULL)/(vt0.c1))))) ORDER BY v0.c3 ASC;
SELECT SUM(count) FROM (SELECT (((~ (((NULL)/(vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c3 ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (((NULL)/(vt0.c1))))) ORDER BY v0.c3 ASC;
SELECT SUM(count) FROM (SELECT (((~ (((NULL)/(vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c3 ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (((NULL)/(vt0.c1))))) ORDER BY v0.c3 ASC;
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) IS TRUE));
SELECT ALL * FROM v0, vt0 WHERE (CAST((((v0.c3)) NOT BETWEEN ((v0.c3)) AND ((v0.c0))) AS TEXT)) ORDER BY ((CAST(v0.c3 AS INTEGER))|(vt0.c0));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c3)) NOT BETWEEN ((v0.c3)) AND ((v0.c0))) AS TEXT)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(v0.c3 AS INTEGER))|(vt0.c0)));
SELECT ALL * FROM v0, vt0 WHERE (CAST((((v0.c3)) NOT BETWEEN ((v0.c3)) AND ((v0.c0))) AS TEXT)) ORDER BY ((CAST(v0.c3 AS INTEGER))|(vt0.c0));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c3)) NOT BETWEEN ((v0.c3)) AND ((v0.c0))) AS TEXT)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(v0.c3 AS INTEGER))|(vt0.c0)));
SELECT ALL * FROM v0, vt0 WHERE (CAST((((v0.c3)) NOT BETWEEN ((v0.c3)) AND ((v0.c0))) AS TEXT)) ORDER BY ((CAST(v0.c3 AS INTEGER))|(vt0.c0));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE load_extension(vt0.c1)  WHEN LIKELY(vt0.c1) THEN ((vt0.c0)>(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE load_extension(vt0.c1)  WHEN LIKELY(vt0.c1) THEN ((vt0.c0)>(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE load_extension(vt0.c1)  WHEN LIKELY(vt0.c1) THEN ((vt0.c0)>(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE load_extension(vt0.c1)  WHEN LIKELY(vt0.c1) THEN ((vt0.c0)>(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM v0 WHERE ((((((v0.c1)) BETWEEN ((v0.c1)) AND ((x'1aaf'))))>('-588409268'))) ORDER BY (- (CASE WHEN v0.c2 THEN v0.c3 ELSE v0.c1 END)) ASC  NULLS FIRST, NULLIF(DISTINCT ((v0.c0) NOTNULL), '')  NULLS LAST, ((((((((((((((((x'')AND(v0.c1)))OR(v0.c2)))AND(v0.c2)))OR(v0.c1)))OR(ROUND(v0.c1, v0.c4))))AND(TRIM(DISTINCT v0.c0))))AND(((v0.c2)<>(v0.c4)))))AND(TYPEOF(x'b7dd')));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)) BETWEEN ((v0.c1)) AND ((x'1aaf'))))>('-588409268'))) IS TRUE)  as count FROM v0 ORDER BY (- (CASE WHEN v0.c2 THEN v0.c3 ELSE v0.c1 END)) ASC  NULLS FIRST, NULLIF(DISTINCT ((v0.c0) NOTNULL), '')  NULLS LAST, ((((((((((((((((x'')AND(v0.c1)))OR(v0.c2)))AND(v0.c2)))OR(v0.c1)))OR(ROUND(v0.c1, v0.c4))))AND(TRIM(DISTINCT v0.c0))))AND(((v0.c2)!=(v0.c4)))))AND(TYPEOF(x'b7dd'))));
SELECT * FROM v0 WHERE ((((((v0.c1)) BETWEEN ((v0.c1)) AND ((x'1aaf'))))>('-588409268'))) ORDER BY (- (CASE WHEN v0.c2 THEN v0.c3 ELSE v0.c1 END)) ASC  NULLS FIRST, NULLIF(DISTINCT ((v0.c0) NOTNULL), '')  NULLS LAST, ((((((((((((((((x'')AND(v0.c1)))OR(v0.c2)))AND(v0.c2)))OR(v0.c1)))OR(ROUND(v0.c1, v0.c4))))AND(TRIM(DISTINCT v0.c0))))AND(((v0.c2)<>(v0.c4)))))AND(TYPEOF(x'b7dd')));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)) BETWEEN ((v0.c1)) AND ((x'1aaf'))))>('-588409268'))) IS TRUE)  as count FROM v0 ORDER BY (- (CASE WHEN v0.c2 THEN v0.c3 ELSE v0.c1 END)) ASC  NULLS FIRST, NULLIF(DISTINCT ((v0.c0) NOTNULL), '')  NULLS LAST, ((((((((((((((((x'')AND(v0.c1)))OR(v0.c2)))AND(v0.c2)))OR(v0.c1)))OR(ROUND(v0.c1, v0.c4))))AND(TRIM(DISTINCT v0.c0))))AND(((v0.c2)!=(v0.c4)))))AND(TYPEOF(x'b7dd'))));
SELECT * FROM v0 WHERE ((((((v0.c1)) BETWEEN ((v0.c1)) AND ((x'1aaf'))))>('-588409268'))) ORDER BY (- (CASE WHEN v0.c2 THEN v0.c3 ELSE v0.c1 END)) ASC  NULLS FIRST, NULLIF(DISTINCT ((v0.c0) NOTNULL), '')  NULLS LAST, ((((((((((((((((x'')AND(v0.c1)))OR(v0.c2)))AND(v0.c2)))OR(v0.c1)))OR(ROUND(v0.c1, v0.c4))))AND(TRIM(DISTINCT v0.c0))))AND(((v0.c2)<>(v0.c4)))))AND(TYPEOF(x'b7dd')));
SELECT ALL * FROM v0, vt0 WHERE ((NOT (0.8261776708757953))) ORDER BY x'ba43' DESC  NULLS FIRST, ((v0.c1)&(v0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (0.8261776708757953))) IS TRUE)  as count FROM v0, vt0 ORDER BY x'ba43' DESC  NULLS FIRST, ((v0.c1)&(v0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((NOT (0.8261776708757953))) ORDER BY x'ba43' DESC  NULLS FIRST, ((v0.c1)&(v0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (0.8261776708757953))) IS TRUE)  as count FROM v0, vt0 ORDER BY x'ba43' DESC  NULLS FIRST, ((v0.c1)&(v0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((NOT (0.8261776708757953))) ORDER BY x'ba43' DESC  NULLS FIRST, ((v0.c1)&(v0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))<=((NOT (vt0.c0))))) ORDER BY -3976363.0;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))<=((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY -3976363.0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))<=((NOT (vt0.c0))))) ORDER BY -3976363.0;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))<=((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY -3976363.0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))<=((NOT (vt0.c0))))) ORDER BY -3976363.0;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((((NULL)) BETWEEN ((v0.c1)) AND ((v0.c3)))))>=((((((v0.c1)OR('0.9535590668640025')))AND(''))))) WHERE (json_array_length(load_extension(v0.c0), v0.c3 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(load_extension(v0.c0), v0.c3 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((((NULL)) BETWEEN ((v0.c1)) AND ((v0.c3)))))>=((((((v0.c1)OR('0.9535590668640025')))AND(''))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((((NULL)) BETWEEN ((v0.c1)) AND ((v0.c3)))))>=((((((v0.c1)OR('0.9535590668640025')))AND(''))))) WHERE (json_array_length(load_extension(v0.c0), v0.c3 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(load_extension(v0.c0), v0.c3 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((((NULL)) BETWEEN ((v0.c1)) AND ((v0.c3)))))>=((((((v0.c1)OR('0.9535590668640025')))AND(''))))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN CAST(v0.c4 AS TEXT) THEN x'' WHEN v0.c2 THEN CASE WHEN v0.c1 THEN 175267601 WHEN v0.c4 THEN v0.c3 WHEN v0.c2 THEN v0.c4 END WHEN (((v0.c3, v0.c3, v0.c4)) BETWEEN ((v0.c0, v0.c1, v0.c2)) AND ((v0.c2, v0.c0, v0.c0))) THEN (((v0.c0))<=((v0.c4))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c4 AS TEXT) THEN x'' WHEN v0.c2 THEN CASE WHEN v0.c1 THEN 175267601 WHEN v0.c4 THEN v0.c3 WHEN v0.c2 THEN v0.c4 END WHEN (((v0.c3, v0.c3, v0.c4)) BETWEEN ((v0.c0, v0.c1, v0.c2)) AND ((v0.c2, v0.c0, v0.c0))) THEN (((v0.c0))<=((v0.c4))) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN CAST(v0.c4 AS TEXT) THEN x'' WHEN v0.c2 THEN CASE WHEN v0.c1 THEN 175267601 WHEN v0.c4 THEN v0.c3 WHEN v0.c2 THEN v0.c4 END WHEN (((v0.c3, v0.c3, v0.c4)) BETWEEN ((v0.c0, v0.c1, v0.c2)) AND ((v0.c2, v0.c0, v0.c0))) THEN (((v0.c0))<=((v0.c4))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c4 AS TEXT) THEN x'' WHEN v0.c2 THEN CASE WHEN v0.c1 THEN 175267601 WHEN v0.c4 THEN v0.c3 WHEN v0.c2 THEN v0.c4 END WHEN (((v0.c3, v0.c3, v0.c4)) BETWEEN ((v0.c0, v0.c1, v0.c2)) AND ((v0.c2, v0.c0, v0.c0))) THEN (((v0.c0))<=((v0.c4))) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN CAST(v0.c4 AS TEXT) THEN x'' WHEN v0.c2 THEN CASE WHEN v0.c1 THEN 175267601 WHEN v0.c4 THEN v0.c3 WHEN v0.c2 THEN v0.c4 END WHEN (((v0.c3, v0.c3, v0.c4)) BETWEEN ((v0.c0, v0.c1, v0.c2)) AND ((v0.c2, v0.c0, v0.c0))) THEN (((v0.c0))<=((v0.c4))) END);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER)) ORDER BY LOWER(((vt0.c0) BETWEEN (vt0.c1) AND ('-347984471')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY LOWER(((vt0.c0) BETWEEN (vt0.c1) AND ('-347984471')))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER)) ORDER BY LOWER(((vt0.c0) BETWEEN (vt0.c1) AND ('-347984471')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY LOWER(((vt0.c0) BETWEEN (vt0.c1) AND ('-347984471')))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER)) ORDER BY LOWER(((vt0.c0) BETWEEN (vt0.c1) AND ('-347984471')))  NULLS LAST;
SELECT * FROM vt0 WHERE ((~ (x''))) ORDER BY LIKELIHOOD(DISTINCT ((vt0.c0)<<(vt0.c1)), 0.6154802373269052) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (x''))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT ((vt0.c0)<<(vt0.c1)), 0.6154802373269052) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((~ (x''))) ORDER BY LIKELIHOOD(DISTINCT ((vt0.c0)<<(vt0.c1)), 0.6154802373269052) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (x''))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT ((vt0.c0)<<(vt0.c1)), 0.6154802373269052) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((~ (x''))) ORDER BY LIKELIHOOD(DISTINCT ((vt0.c0)<<(vt0.c1)), 0.6154802373269052) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))AND(v0.c4)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0)))AND(v0.c4))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))AND(v0.c4)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0)))AND(v0.c4))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))AND(v0.c4)));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((((v0.c0)AND(v0.c2)))AND(v0.c4)))AND(v0.c2)))OR(v0.c4))))==((CAST(v0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c0)AND(v0.c2)))AND(v0.c4)))AND(v0.c2)))OR(v0.c4))))==((CAST(v0.c0 AS INTEGER))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((((v0.c0)AND(v0.c2)))AND(v0.c4)))AND(v0.c2)))OR(v0.c4))))==((CAST(v0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c0)AND(v0.c2)))AND(v0.c4)))AND(v0.c2)))OR(v0.c4))))==((CAST(v0.c0 AS INTEGER))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((((v0.c0)AND(v0.c2)))AND(v0.c4)))AND(v0.c2)))OR(v0.c4))))==((CAST(v0.c0 AS INTEGER)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)LIKE(vt0.c0)) AS NUMERIC)) ORDER BY ((((vt0.c0)==(vt0.c1))) NOT BETWEEN ((- (vt0.c1))) AND (vt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)LIKE(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)==(vt0.c1))) NOT BETWEEN ((- (vt0.c1))) AND (vt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)LIKE(vt0.c0)) AS NUMERIC)) ORDER BY ((((vt0.c0)==(vt0.c1))) NOT BETWEEN ((- (vt0.c1))) AND (vt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)LIKE(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)==(vt0.c1))) NOT BETWEEN ((- (vt0.c1))) AND (vt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)LIKE(vt0.c0)) AS NUMERIC)) ORDER BY ((((vt0.c0)==(vt0.c1))) NOT BETWEEN ((- (vt0.c1))) AND (vt0.c1 COLLATE RTRIM));
SELECT ALL * FROM vt0, v0 WHERE ((((-1.619882696E9)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((HEX(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((-1.619882696E9)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((HEX(vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((-1.619882696E9)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((HEX(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((-1.619882696E9)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((HEX(vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((-1.619882696E9)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((HEX(vt0.c1)))));
SELECT * FROM vt0, v0 WHERE (UNLIKELY(DISTINCT v0.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT v0.c3 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (UNLIKELY(DISTINCT v0.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT v0.c3 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (UNLIKELY(DISTINCT v0.c3 COLLATE NOCASE));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (+ (v0.c0)) WHERE (CASE ((v0.c0)==(vt0.c0))  WHEN (~ (v0.c1)) THEN (NOT (0.1428210750176936)) ELSE ((vt0.c1) NOT BETWEEN (v0.c4) AND (v0.c4)) END) ORDER BY (((0.6144068284597071)) NOT BETWEEN ((((((v0.c4)AND(v0.c2)))AND(v0.c3)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c3 WHEN NULL THEN vt0.c1 ELSE v0.c4 END)))  NULLS FIRST, (((0.7915692571109343, ((((vt0.c1)OR(v0.c0)))AND('651903581')), TRIM(v0.c4)))!=((((vt0.c0)LIKE(vt0.c0)), (v0.c3 IN ()), CAST(v0.c0 AS NUMERIC))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)==(vt0.c0))  WHEN (~ (v0.c1)) THEN (NOT (0.1428210750176936)) ELSE ((vt0.c1) NOT BETWEEN (v0.c4) AND (v0.c4)) END) IS TRUE)  as count FROM v0 NOT INDEXED INNER JOIN vt0 ON (+ (v0.c0)) ORDER BY (((0.6144068284597071)) NOT BETWEEN ((((((v0.c4)AND(v0.c2)))AND(v0.c3)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c3 WHEN NULL THEN vt0.c1 ELSE v0.c4 END)))  NULLS FIRST, (((0.7915692571109343, ((((vt0.c1)OR(v0.c0)))AND('651903581')), TRIM(v0.c4)))<>((((vt0.c0)LIKE(vt0.c0)), (v0.c3 IN ()), CAST(v0.c0 AS NUMERIC))))  NULLS LAST);
SELECT ALL * FROM v0 INNER JOIN vt0 ON (+ (v0.c0)) WHERE (CASE ((v0.c0)==(vt0.c0))  WHEN (~ (v0.c1)) THEN (NOT (0.1428210750176936)) ELSE ((vt0.c1) NOT BETWEEN (v0.c4) AND (v0.c4)) END) ORDER BY (((0.6144068284597071)) NOT BETWEEN ((((((v0.c4)AND(v0.c2)))AND(v0.c3)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c3 WHEN NULL THEN vt0.c1 ELSE v0.c4 END)))  NULLS FIRST, (((0.7915692571109343, ((((vt0.c1)OR(v0.c0)))AND('651903581')), TRIM(v0.c4)))!=((((vt0.c0)LIKE(vt0.c0)), (v0.c3 IN ()), CAST(v0.c0 AS NUMERIC))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)==(vt0.c0))  WHEN (~ (v0.c1)) THEN (NOT (0.1428210750176936)) ELSE ((vt0.c1) NOT BETWEEN (v0.c4) AND (v0.c4)) END) IS TRUE)  as count FROM v0 NOT INDEXED INNER JOIN vt0 ON (+ (v0.c0)) ORDER BY (((0.6144068284597071)) NOT BETWEEN ((((((v0.c4)AND(v0.c2)))AND(v0.c3)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c3 WHEN NULL THEN vt0.c1 ELSE v0.c4 END)))  NULLS FIRST, (((0.7915692571109343, ((((vt0.c1)OR(v0.c0)))AND('651903581')), TRIM(v0.c4)))<>((((vt0.c0)LIKE(vt0.c0)), (v0.c3 IN ()), CAST(v0.c0 AS NUMERIC))))  NULLS LAST);
SELECT ALL * FROM v0 INNER JOIN vt0 ON (+ (v0.c0)) WHERE (CASE ((v0.c0)==(vt0.c0))  WHEN (~ (v0.c1)) THEN (NOT (0.1428210750176936)) ELSE ((vt0.c1) NOT BETWEEN (v0.c4) AND (v0.c4)) END) ORDER BY (((0.6144068284597071)) NOT BETWEEN ((((((v0.c4)AND(v0.c2)))AND(v0.c3)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c3 WHEN NULL THEN vt0.c1 ELSE v0.c4 END)))  NULLS FIRST, (((0.7915692571109343, ((((vt0.c1)OR(v0.c0)))AND('651903581')), TRIM(v0.c4)))!=((((vt0.c0)LIKE(vt0.c0)), (v0.c3 IN ()), CAST(v0.c0 AS NUMERIC))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((v0.c2 IN ()))AND((((vt0.c1, v0.c3, v0.c4)) BETWEEN ((v0.c1, v0.c4, vt0.c0)) AND ((v0.c4, '/h', v0.c0))))))AND((v0.c0 IN ())))) ORDER BY ((((v0.c0)&(v0.c2))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2 IN ()))AND((((vt0.c1, v0.c3, v0.c4)) BETWEEN ((v0.c1, v0.c4, vt0.c0)) AND ((v0.c4, '/h', v0.c0))))))AND((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)&(v0.c2))) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((v0.c2 IN ()))AND((((vt0.c1, v0.c3, v0.c4)) BETWEEN ((v0.c1, v0.c4, vt0.c0)) AND ((v0.c4, '/h', v0.c0))))))AND((v0.c0 IN ())))) ORDER BY ((((v0.c0)&(v0.c2))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2 IN ()))AND((((vt0.c1, v0.c3, v0.c4)) BETWEEN ((v0.c1, v0.c4, vt0.c0)) AND ((v0.c4, '/h', v0.c0))))))AND((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)&(v0.c2))) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((v0.c2 IN ()))AND((((vt0.c1, v0.c3, v0.c4)) BETWEEN ((v0.c1, v0.c4, vt0.c0)) AND ((v0.c4, '/h', v0.c0))))))AND((v0.c0 IN ())))) ORDER BY ((((v0.c0)&(v0.c2))) ISNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c3)<<(v0.c1))))) ORDER BY (((- (v0.c0)))<=(((0.5114109066907835) NOTNULL))), v0.c4 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c3)<<(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c0)))<=(((0.5114109066907835) NOTNULL))), v0.c4 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c3)<<(v0.c1))))) ORDER BY (((- (v0.c0)))<=(((0.5114109066907835) NOTNULL))), v0.c4 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c3)<<(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c0)))<=(((0.5114109066907835) NOTNULL))), v0.c4 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c3)<<(v0.c1))))) ORDER BY (((- (v0.c0)))<=(((0.5114109066907835) NOTNULL))), v0.c4 ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON COALESCE(((v0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c1)OR(v0.c2))) WHERE (TYPEOF((((vt0.c1))<((v0.c4)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((((vt0.c1))<((v0.c4))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON COALESCE(((v0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c1)OR(v0.c2))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON COALESCE(((v0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c1)OR(v0.c2))) WHERE (TYPEOF((((vt0.c1))<((v0.c4)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((((vt0.c1))<((v0.c4))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON COALESCE(((v0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c1)OR(v0.c2))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON COALESCE(((v0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c1)OR(v0.c2))) WHERE (TYPEOF((((vt0.c1))<((v0.c4)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1)) NOT BETWEEN ((CASE WHEN v0.c1 THEN v0.c4 ELSE v0.c3 END)) AND ((((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c1)))))) ORDER BY ((((CAST(v0.c3 AS TEXT))OR(((v0.c3) BETWEEN (v0.c3) AND (v0.c3)))))OR((- (v0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((CASE WHEN v0.c1 THEN v0.c4 ELSE v0.c3 END)) AND ((((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c1)))))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c3 AS TEXT))OR(((v0.c3) BETWEEN (v0.c3) AND (v0.c3)))))OR((- (v0.c3)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1)) NOT BETWEEN ((CASE WHEN v0.c1 THEN v0.c4 ELSE v0.c3 END)) AND ((((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c1)))))) ORDER BY ((((CAST(v0.c3 AS TEXT))OR(((v0.c3) BETWEEN (v0.c3) AND (v0.c3)))))OR((- (v0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((CASE WHEN v0.c1 THEN v0.c4 ELSE v0.c3 END)) AND ((((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c1)))))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c3 AS TEXT))OR(((v0.c3) BETWEEN (v0.c3) AND (v0.c3)))))OR((- (v0.c3)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1)) NOT BETWEEN ((CASE WHEN v0.c1 THEN v0.c4 ELSE v0.c3 END)) AND ((((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c1)))))) ORDER BY ((((CAST(v0.c3 AS TEXT))OR(((v0.c3) BETWEEN (v0.c3) AND (v0.c3)))))OR((- (v0.c3)))) ASC;
SELECT ALL * FROM v0 WHERE (v0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((v0.c2 COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((v0.c2 COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c2 COLLATE BINARY);
SELECT ALL * FROM vt0 NOT INDEXED FULL OUTER JOIN v0 ON (v0.c3 COLLATE NOCASE IN ()) WHERE ((NOT (x'bedc')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x'bedc'))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (v0.c3 COLLATE NOCASE IN ()));
SELECT ALL * FROM vt0 NOT INDEXED FULL OUTER JOIN v0 ON (v0.c3 COLLATE NOCASE IN ()) WHERE ((NOT (x'bedc')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x'bedc'))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (v0.c3 COLLATE NOCASE IN ()));
SELECT ALL * FROM vt0 NOT INDEXED FULL OUTER JOIN v0 ON (v0.c3 COLLATE NOCASE IN ()) WHERE ((NOT (x'bedc')));
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))%((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))%((v0.c1 IN ())))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))%((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))%((v0.c1 IN ())))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))%((v0.c1 IN ()))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0))==((json_array(v0.c2, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))==((json_array(v0.c2, v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0))==((json_array(v0.c2, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))==((json_array(v0.c2, v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0))==((json_array(v0.c2, v0.c0)))));
SELECT * FROM vt0, v0 WHERE ((NOT (((v0.c2)>>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c2)>>(vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((NOT (((v0.c2)>>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c2)>>(vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((NOT (((v0.c2)>>(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c4) NOT BETWEEN (vt0.c1) AND (v0.c0)) THEN ((vt0.c0) NOT NULL) END WHERE (((vt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS TRUE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c4) NOT BETWEEN (vt0.c1) AND (v0.c0)) THEN ((vt0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c4) NOT BETWEEN (vt0.c1) AND (v0.c0)) THEN ((vt0.c0) NOT NULL) END WHERE (((vt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS TRUE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c4) NOT BETWEEN (vt0.c1) AND (v0.c0)) THEN ((vt0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c4) NOT BETWEEN (vt0.c1) AND (v0.c0)) THEN ((vt0.c0) NOT NULL) END WHERE (((vt0.c1) IS TRUE));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)GLOB(vt0.c1)))AND(((vt0.c1) NOTNULL))))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)GLOB(vt0.c1)))AND(((vt0.c1) NOTNULL))))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)GLOB(vt0.c1)))AND(((vt0.c1) NOTNULL))))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)GLOB(vt0.c1)))AND(((vt0.c1) NOTNULL))))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)GLOB(vt0.c1)))AND(((vt0.c1) NOTNULL))))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (vt0.c1))) ORDER BY vt0.c1 ASC  NULLS FIRST, (((((0.8054129423559747 IN (vt0.c1, vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c1)))))OR(COALESCE(vt0.c1, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS FIRST, (((((0.8054129423559747 IN (vt0.c1, vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c1)))))OR(COALESCE(vt0.c1, vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (vt0.c1))) ORDER BY vt0.c1 ASC  NULLS FIRST, (((((0.8054129423559747 IN (vt0.c1, vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c1)))))OR(COALESCE(vt0.c1, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS FIRST, (((((0.8054129423559747 IN (vt0.c1, vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c1)))))OR(COALESCE(vt0.c1, vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (vt0.c1))) ORDER BY vt0.c1 ASC  NULLS FIRST, (((((0.8054129423559747 IN (vt0.c1, vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c1)))))OR(COALESCE(vt0.c1, vt0.c0))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((NULLIF(DISTINCT v0.c0, x'298c'))AND((v0.c0 IN ()))))OR(((((v0.c0)OR(v0.c1)))OR(vt0.c1)))))AND(((('x[)'))=((NULL))))))AND(rtreenode(0.8122712279849986, v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULLIF(DISTINCT v0.c0, x'298c'))AND((v0.c0 IN ()))))OR(((((v0.c0)OR(v0.c1)))OR(vt0.c1)))))AND(((('x[)'))==((NULL))))))AND(rtreenode(0.8122712279849986, v0.c2)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((NULLIF(DISTINCT v0.c0, x'298c'))AND((v0.c0 IN ()))))OR(((((v0.c0)OR(v0.c1)))OR(vt0.c1)))))AND(((('x[)'))=((NULL))))))AND(rtreenode(0.8122712279849986, v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULLIF(DISTINCT v0.c0, x'298c'))AND((v0.c0 IN ()))))OR(((((v0.c0)OR(v0.c1)))OR(vt0.c1)))))AND(((('x[)'))==((NULL))))))AND(rtreenode(0.8122712279849986, v0.c2)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((NULLIF(DISTINCT v0.c0, x'298c'))AND((v0.c0 IN ()))))OR(((((v0.c0)OR(v0.c1)))OR(vt0.c1)))))AND(((('x[)'))=((NULL))))))AND(rtreenode(0.8122712279849986, v0.c2))));
SELECT * FROM v0 WHERE (((((v0.c2) NOTNULL)) BETWEEN (((v0.c1) NOT BETWEEN (v0.c4) AND (v0.c2))) AND (CAST(v0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOTNULL)) BETWEEN (((v0.c1) NOT BETWEEN (v0.c4) AND (v0.c2))) AND (CAST(v0.c1 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c2) NOTNULL)) BETWEEN (((v0.c1) NOT BETWEEN (v0.c4) AND (v0.c2))) AND (CAST(v0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOTNULL)) BETWEEN (((v0.c1) NOT BETWEEN (v0.c4) AND (v0.c2))) AND (CAST(v0.c1 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c2) NOTNULL)) BETWEEN (((v0.c1) NOT BETWEEN (v0.c4) AND (v0.c2))) AND (CAST(v0.c1 AS REAL))));
SELECT * FROM v0, vt0 WHERE ('Ls') ORDER BY (((CASE vt0.c0  WHEN v0.c0 THEN '-1214969256' ELSE v0.c4 END))==((CAST(v0.c0 AS BLOB)))), CAST(v0.c3 AS REAL), v0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('Ls') IS TRUE)  as count FROM v0, vt0 ORDER BY (((CASE vt0.c0  WHEN v0.c0 THEN '-1214969256' ELSE v0.c4 END))=((CAST(v0.c0 AS BLOB)))), CAST(v0.c3 AS REAL), v0.c1  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ('Ls') ORDER BY (((CASE vt0.c0  WHEN v0.c0 THEN '-1214969256' ELSE v0.c4 END))==((CAST(v0.c0 AS BLOB)))), CAST(v0.c3 AS REAL), v0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('Ls') IS TRUE)  as count FROM v0, vt0 ORDER BY (((CASE vt0.c0  WHEN v0.c0 THEN '-1214969256' ELSE v0.c4 END))=((CAST(v0.c0 AS BLOB)))), CAST(v0.c3 AS REAL), v0.c1  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ('Ls') ORDER BY (((CASE vt0.c0  WHEN v0.c0 THEN '-1214969256' ELSE v0.c4 END))==((CAST(v0.c0 AS BLOB)))), CAST(v0.c3 AS REAL), v0.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((CAST(v0.c2 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((CAST(v0.c2 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((CAST(v0.c2 AS INTEGER)) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)>(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)>(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)>(vt0.c1)) COLLATE BINARY);
SELECT ALL * FROM vt0, v0 WHERE ((((NULL, ((((((((v0.c0)AND(v0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(v0.c1)), (- (v0.c0))))!=((CASE v0.c3  WHEN v0.c0 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 WHEN v0.c2 THEN v0.c0 END, v0.c0, ((v0.c2) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((NULL, ((((((((v0.c0)AND(v0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(v0.c1)), (- (v0.c0))))!=((CASE v0.c3  WHEN v0.c0 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 WHEN v0.c2 THEN v0.c0 END, v0.c0, ((v0.c2) NOTNULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((NULL, ((((((((v0.c0)AND(v0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(v0.c1)), (- (v0.c0))))!=((CASE v0.c3  WHEN v0.c0 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 WHEN v0.c2 THEN v0.c0 END, v0.c0, ((v0.c2) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((NULL, ((((((((v0.c0)AND(v0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(v0.c1)), (- (v0.c0))))!=((CASE v0.c3  WHEN v0.c0 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 WHEN v0.c2 THEN v0.c0 END, v0.c0, ((v0.c2) NOTNULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((NULL, ((((((((v0.c0)AND(v0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(v0.c1)), (- (v0.c0))))!=((CASE v0.c3  WHEN v0.c0 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 WHEN v0.c2 THEN v0.c0 END, v0.c0, ((v0.c2) NOTNULL)))));
SELECT ALL * FROM vt0 WHERE (JULIANDAY(CAST(0.43983386438278016 AS INTEGER), CAST(vt0.c1 AS INTEGER), (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 0xffffffff91ae11ac, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(CAST(0.43983386438278016 AS INTEGER), CAST(vt0.c1 AS INTEGER), (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 0xffffffff91ae11ac, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (JULIANDAY(CAST(0.43983386438278016 AS INTEGER), CAST(vt0.c1 AS INTEGER), (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 0xffffffff91ae11ac, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(CAST(0.43983386438278016 AS INTEGER), CAST(vt0.c1 AS INTEGER), (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 0xffffffff91ae11ac, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (JULIANDAY(CAST(0.43983386438278016 AS INTEGER), CAST(vt0.c1 AS INTEGER), (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 0xffffffff91ae11ac, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT vt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT vt0.c1) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT vt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT vt0.c1) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT vt0.c1) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE (PRINTF(((v0.c0)IS(x'')))) ORDER BY ((((v0.c1) NOTNULL))IS NOT((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((v0.c0)IS(x'')))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) NOTNULL))IS NOT((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (PRINTF(((v0.c0)IS(x'')))) ORDER BY ((((v0.c1) NOTNULL))IS NOT((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((v0.c0)IS(x'')))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) NOTNULL))IS NOT((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (PRINTF(((v0.c0)IS(x'')))) ORDER BY ((((v0.c1) NOTNULL))IS NOT((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((('') IS FALSE)) ORDER BY x'cf81'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('') IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY x'cf81'  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((('') IS FALSE)) ORDER BY x'cf81'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('') IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY x'cf81'  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((('') IS FALSE)) ORDER BY x'cf81'  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (NULL) ORDER BY CASE WHEN (+ (v0.c2)) THEN ((v0.c4)-(v0.c0)) ELSE CAST(v0.c3 AS BLOB) END ASC  NULLS FIRST, (((NULL)) BETWEEN ((CASE v0.c4  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c1 WHEN NULL THEN v0.c0 WHEN x'' THEN v0.c0 WHEN x'' THEN v0.c2 END)) AND ((x'')));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE WHEN (+ (v0.c2)) THEN ((v0.c4)-(v0.c0)) ELSE CAST(v0.c3 AS BLOB) END ASC  NULLS FIRST, (((NULL)) BETWEEN ((CASE v0.c4  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c1 WHEN NULL THEN v0.c0 WHEN x'' THEN v0.c0 WHEN x'' THEN v0.c2 END)) AND ((x''))));
SELECT ALL * FROM vt0, v0 WHERE (NULL) ORDER BY CASE WHEN (+ (v0.c2)) THEN ((v0.c4)-(v0.c0)) ELSE CAST(v0.c3 AS BLOB) END ASC  NULLS FIRST, (((NULL)) BETWEEN ((CASE v0.c4  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c1 WHEN NULL THEN v0.c0 WHEN x'' THEN v0.c0 WHEN x'' THEN v0.c2 END)) AND ((x'')));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE WHEN (+ (v0.c2)) THEN ((v0.c4)-(v0.c0)) ELSE CAST(v0.c3 AS BLOB) END ASC  NULLS FIRST, (((NULL)) BETWEEN ((CASE v0.c4  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c1 WHEN NULL THEN v0.c0 WHEN x'' THEN v0.c0 WHEN x'' THEN v0.c2 END)) AND ((x''))));
SELECT ALL * FROM vt0, v0 WHERE (NULL) ORDER BY CASE WHEN (+ (v0.c2)) THEN ((v0.c4)-(v0.c0)) ELSE CAST(v0.c3 AS BLOB) END ASC  NULLS FIRST, (((NULL)) BETWEEN ((CASE v0.c4  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c1 WHEN NULL THEN v0.c0 WHEN x'' THEN v0.c0 WHEN x'' THEN v0.c2 END)) AND ((x'')));
SELECT * FROM vt0, v0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN ((((v0.c2)OR(NULL)))OR(v0.c4)) WHEN v0.c3 COLLATE RTRIM THEN (~ (vt0.c0)) WHEN ((v0.c3) BETWEEN (v0.c3) AND (v0.c1)) THEN vt0.c1 ELSE x'8bda' END) ORDER BY v0.c4 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c1)) THEN ((((v0.c2)OR(NULL)))OR(v0.c4)) WHEN v0.c3 COLLATE RTRIM THEN (~ (vt0.c0)) WHEN ((v0.c3) BETWEEN (v0.c3) AND (v0.c1)) THEN vt0.c1 ELSE x'8bda' END) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c4 ASC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN ((((v0.c2)OR(NULL)))OR(v0.c4)) WHEN v0.c3 COLLATE RTRIM THEN (~ (vt0.c0)) WHEN ((v0.c3) BETWEEN (v0.c3) AND (v0.c1)) THEN vt0.c1 ELSE x'8bda' END) ORDER BY v0.c4 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c1)) THEN ((((v0.c2)OR(NULL)))OR(v0.c4)) WHEN v0.c3 COLLATE RTRIM THEN (~ (vt0.c0)) WHEN ((v0.c3) BETWEEN (v0.c3) AND (v0.c1)) THEN vt0.c1 ELSE x'8bda' END) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c4 ASC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN ((((v0.c2)OR(NULL)))OR(v0.c4)) WHEN v0.c3 COLLATE RTRIM THEN (~ (vt0.c0)) WHEN ((v0.c3) BETWEEN (v0.c3) AND (v0.c1)) THEN vt0.c1 ELSE x'8bda' END) ORDER BY v0.c4 ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('');
SELECT ALL * FROM v0, vt0 WHERE (v0.c1) ORDER BY ((json_object(x'75ae', v0.c4)) NOT BETWEEN (((v0.c2)OR(vt0.c0))) AND (CASE WHEN v0.c0 THEN x'54f7' WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY ((json_object(x'75ae', v0.c4)) NOT BETWEEN (((v0.c2)OR(vt0.c0))) AND (CASE WHEN v0.c0 THEN x'54f7' WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)));
SELECT ALL * FROM v0, vt0 WHERE (v0.c1) ORDER BY ((json_object(x'75ae', v0.c4)) NOT BETWEEN (((v0.c2)OR(vt0.c0))) AND (CASE WHEN v0.c0 THEN x'54f7' WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY ((json_object(x'75ae', v0.c4)) NOT BETWEEN (((v0.c2)OR(vt0.c0))) AND (CASE WHEN v0.c0 THEN x'54f7' WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)));
SELECT ALL * FROM v0, vt0 WHERE (ABS(-1555585847)) ORDER BY ((CASE v0.c4  WHEN v0.c4 THEN v0.c4 ELSE '' END) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(-1555585847)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE v0.c4  WHEN v0.c4 THEN v0.c4 ELSE '' END) ISNULL) ASC);
SELECT ALL * FROM v0, vt0 WHERE (ABS(-1555585847)) ORDER BY ((CASE v0.c4  WHEN v0.c4 THEN v0.c4 ELSE '' END) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(-1555585847)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE v0.c4  WHEN v0.c4 THEN v0.c4 ELSE '' END) ISNULL) ASC);
SELECT ALL * FROM v0, vt0 WHERE (ABS(-1555585847)) ORDER BY ((CASE v0.c4  WHEN v0.c4 THEN v0.c4 ELSE '' END) ISNULL) ASC;
SELECT * FROM v0 WHERE (v0.c2) ORDER BY (((v0.c4 IN ('0.7785998908207706'))) NOT BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c4)) AND ((v0.c4)))) AND (CASE WHEN v0.c1 THEN v0.c4 WHEN v0.c1 THEN NULL WHEN v0.c1 THEN v0.c1 WHEN '-1014907575' THEN v0.c0 WHEN v0.c0 THEN v0.c4 END)) ASC  NULLS LAST, v0.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY (((v0.c4 IN ('0.7785998908207706'))) NOT BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c4)) AND ((v0.c4)))) AND (CASE WHEN v0.c1 THEN v0.c4 WHEN v0.c1 THEN NULL WHEN v0.c1 THEN v0.c1 WHEN '-1014907575' THEN v0.c0 WHEN v0.c0 THEN v0.c4 END)) ASC  NULLS LAST, v0.c3 ASC);
SELECT * FROM v0 WHERE (v0.c2) ORDER BY (((v0.c4 IN ('0.7785998908207706'))) NOT BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c4)) AND ((v0.c4)))) AND (CASE WHEN v0.c1 THEN v0.c4 WHEN v0.c1 THEN NULL WHEN v0.c1 THEN v0.c1 WHEN '-1014907575' THEN v0.c0 WHEN v0.c0 THEN v0.c4 END)) ASC  NULLS LAST, v0.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY (((v0.c4 IN ('0.7785998908207706'))) NOT BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c4)) AND ((v0.c4)))) AND (CASE WHEN v0.c1 THEN v0.c4 WHEN v0.c1 THEN NULL WHEN v0.c1 THEN v0.c1 WHEN '-1014907575' THEN v0.c0 WHEN v0.c0 THEN v0.c4 END)) ASC  NULLS LAST, v0.c3 ASC);
SELECT * FROM v0 WHERE (v0.c2) ORDER BY (((v0.c4 IN ('0.7785998908207706'))) NOT BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c4)) AND ((v0.c4)))) AND (CASE WHEN v0.c1 THEN v0.c4 WHEN v0.c1 THEN NULL WHEN v0.c1 THEN v0.c1 WHEN '-1014907575' THEN v0.c0 WHEN v0.c0 THEN v0.c4 END)) ASC  NULLS LAST, v0.c3 ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c4) NOT NULL))OR(((v0.c1)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c4) NOT NULL))OR(((v0.c1)<(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c4) NOT NULL))OR(((v0.c1)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c4) NOT NULL))OR(((v0.c1)<(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c4) NOT NULL))OR(((v0.c1)<(v0.c0)))));
SELECT * FROM vt0 WHERE (CAST(TYPEOF(DISTINCT vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(DISTINCT vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(TYPEOF(DISTINCT vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(DISTINCT vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(TYPEOF(DISTINCT vt0.c0) AS BLOB));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((NOT (v0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((NOT (v0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((NOT (v0.c2))) NOTNULL));
SELECT * FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c1, vt0.c1)) BETWEEN (vt0.c1) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt0.c1, vt0.c1)) BETWEEN (vt0.c1) AND (x''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c1, vt0.c1)) BETWEEN (vt0.c1) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt0.c1, vt0.c1)) BETWEEN (vt0.c1) AND (x''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c1, vt0.c1)) BETWEEN (vt0.c1) AND (x'')));
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((v0.c3)||(v0.c4))  WHEN v0.c4 THEN (((v0.c1, v0.c4, v0.c4))<((v0.c4, v0.c2, vt0.c0))) WHEN 0xffffffffae02cff5 THEN (v0.c0 IN ()) WHEN (~ (v0.c4)) THEN '846119916' ELSE (vt0.c1 IN (v0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c3)||(v0.c4))  WHEN v0.c4 THEN (((v0.c1, v0.c4, v0.c4))<((v0.c4, v0.c2, vt0.c0))) WHEN 0Xffffffffae02cff5 THEN (v0.c0 IN ()) WHEN (~ (v0.c4)) THEN '846119916' ELSE (vt0.c1 IN (v0.c3)) END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((v0.c3)||(v0.c4))  WHEN v0.c4 THEN (((v0.c1, v0.c4, v0.c4))<((v0.c4, v0.c2, vt0.c0))) WHEN 0xffffffffae02cff5 THEN (v0.c0 IN ()) WHEN (~ (v0.c4)) THEN '846119916' ELSE (vt0.c1 IN (v0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c3)||(v0.c4))  WHEN v0.c4 THEN (((v0.c1, v0.c4, v0.c4))<((v0.c4, v0.c2, vt0.c0))) WHEN 0Xffffffffae02cff5 THEN (v0.c0 IN ()) WHEN (~ (v0.c4)) THEN '846119916' ELSE (vt0.c1 IN (v0.c3)) END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((v0.c3)||(v0.c4))  WHEN v0.c4 THEN (((v0.c1, v0.c4, v0.c4))<((v0.c4, v0.c2, vt0.c0))) WHEN 0xffffffffae02cff5 THEN (v0.c0 IN ()) WHEN (~ (v0.c4)) THEN '846119916' ELSE (vt0.c1 IN (v0.c3)) END);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL)) ORDER BY (~ (v0.c1 COLLATE BINARY)) ASC  NULLS LAST, (0x62ae0f05 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (~ (v0.c1 COLLATE BINARY)) ASC  NULLS LAST, (0x62ae0f05 IN ()) ASC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL)) ORDER BY (~ (v0.c1 COLLATE BINARY)) ASC  NULLS LAST, (0x62ae0f05 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (~ (v0.c1 COLLATE BINARY)) ASC  NULLS LAST, (0x62ae0f05 IN ()) ASC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL)) ORDER BY (~ (v0.c1 COLLATE BINARY)) ASC  NULLS LAST, (0x62ae0f05 IN ()) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(NULLIF(DISTINCT v0.c0, v0.c4) AS BLOB)) ORDER BY (((((((v0.c1)) NOT BETWEEN ((v0.c4)) AND ((v0.c4))))AND(NULL)))OR(json_remove(v0.c1, x'', v0.c3, v0.c3, v0.c2, v0.c1)))  NULLS LAST, ((((((((((v0.c1)+(v0.c1)))AND((v0.c2 IN ()))))AND(CHANGES())))AND(((v0.c0)<(v0.c1)))))AND(((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(NULLIF(DISTINCT v0.c0, v0.c4) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c1)) NOT BETWEEN ((v0.c4)) AND ((v0.c4))))AND(NULL)))OR(json_remove(v0.c1, x'', v0.c3, v0.c3, v0.c2, v0.c1)))  NULLS LAST, ((((((((((v0.c1)+(v0.c1)))AND((v0.c2 IN ()))))AND(CHANGES())))AND(((v0.c0)<(v0.c1)))))AND(((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(NULLIF(DISTINCT v0.c0, v0.c4) AS BLOB)) ORDER BY (((((((v0.c1)) NOT BETWEEN ((v0.c4)) AND ((v0.c4))))AND(NULL)))OR(json_remove(v0.c1, x'', v0.c3, v0.c3, v0.c2, v0.c1)))  NULLS LAST, ((((((((((v0.c1)+(v0.c1)))AND((v0.c2 IN ()))))AND(CHANGES())))AND(((v0.c0)<(v0.c1)))))AND(((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(NULLIF(DISTINCT v0.c0, v0.c4) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c1)) NOT BETWEEN ((v0.c4)) AND ((v0.c4))))AND(NULL)))OR(json_remove(v0.c1, x'', v0.c3, v0.c3, v0.c2, v0.c1)))  NULLS LAST, ((((((((((v0.c1)+(v0.c1)))AND((v0.c2 IN ()))))AND(CHANGES())))AND(((v0.c0)<(v0.c1)))))AND(((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND ((((vt0.c1)-(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((NULL)) AND ((((vt0.c1)-(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND ((((vt0.c1)-(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((NULL)) AND ((((vt0.c1)-(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND ((((vt0.c1)-(vt0.c0))))));
SELECT * FROM vt0 NOT INDEXED WHERE (vt0.c1) ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((vt0.c1)));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((vt0.c1))));
SELECT * FROM vt0 NOT INDEXED WHERE (vt0.c1) ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((vt0.c1)));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((vt0.c1))));
SELECT * FROM vt0 NOT INDEXED WHERE (vt0.c1) ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((vt0.c1)));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)||(v0.c4)))IS NOT(CAST(NULL AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)||(v0.c4)))IS NOT(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)||(v0.c4)))IS NOT(CAST(NULL AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)||(v0.c4)))IS NOT(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)||(v0.c4)))IS NOT(CAST(NULL AS NUMERIC))));
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c2, v0.c3, vt0.c1, vt0.c1, v0.c2))<((v0.c1, vt0.c1, v0.c3, v0.c0, NULL)))) NOT NULL)) ORDER BY 0.39024508873180963  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2, v0.c3, vt0.c1, vt0.c1, v0.c2))<((v0.c1, vt0.c1, v0.c3, v0.c0, NULL)))) NOT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY 0.39024508873180963  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c2, v0.c3, vt0.c1, vt0.c1, v0.c2))<((v0.c1, vt0.c1, v0.c3, v0.c0, NULL)))) NOT NULL)) ORDER BY 0.39024508873180963  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2, v0.c3, vt0.c1, vt0.c1, v0.c2))<((v0.c1, vt0.c1, v0.c3, v0.c0, NULL)))) NOT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY 0.39024508873180963  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c2, v0.c3, vt0.c1, vt0.c1, v0.c2))<((v0.c1, vt0.c1, v0.c3, v0.c0, NULL)))) NOT NULL)) ORDER BY 0.39024508873180963  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((+ ((v0.c1 IN ())))) ORDER BY (~ (0.8664020786751307)) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((v0.c1 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (~ (0.8664020786751307)) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ ((v0.c1 IN ())))) ORDER BY (~ (0.8664020786751307)) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((v0.c1 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (~ (0.8664020786751307)) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ ((v0.c1 IN ())))) ORDER BY (~ (0.8664020786751307)) DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN (((vt0.c1))>=((v0.c2))) THEN '-299861869' WHEN CAST(vt0.c1 AS INTEGER) THEN (+ (vt0.c1)) WHEN (((v0.c2)) BETWEEN ((vt0.c1)) AND ((v0.c3))) THEN v0.c2 ELSE UPPER(DISTINCT v0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c1))>=((v0.c2))) THEN '-299861869' WHEN CAST(vt0.c1 AS INTEGER) THEN (+ (vt0.c1)) WHEN (((v0.c2)) BETWEEN ((vt0.c1)) AND ((v0.c3))) THEN v0.c2 ELSE UPPER(DISTINCT v0.c2) END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN (((vt0.c1))>=((v0.c2))) THEN '-299861869' WHEN CAST(vt0.c1 AS INTEGER) THEN (+ (vt0.c1)) WHEN (((v0.c2)) BETWEEN ((vt0.c1)) AND ((v0.c3))) THEN v0.c2 ELSE UPPER(DISTINCT v0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c1))>=((v0.c2))) THEN '-299861869' WHEN CAST(vt0.c1 AS INTEGER) THEN (+ (vt0.c1)) WHEN (((v0.c2)) BETWEEN ((vt0.c1)) AND ((v0.c3))) THEN v0.c2 ELSE UPPER(DISTINCT v0.c2) END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN (((vt0.c1))>=((v0.c2))) THEN '-299861869' WHEN CAST(vt0.c1 AS INTEGER) THEN (+ (vt0.c1)) WHEN (((v0.c2)) BETWEEN ((vt0.c1)) AND ((v0.c3))) THEN v0.c2 ELSE UPPER(DISTINCT v0.c2) END);
SELECT COUNT(*) FROM v0 WHERE ((- (v0.c1)) COLLATE NOCASE) ORDER BY v0.c0, LIKELY((v0.c4 IN ())) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY v0.c0, LIKELY((v0.c4 IN ())) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((- (v0.c1)) COLLATE NOCASE) ORDER BY v0.c0, LIKELY((v0.c4 IN ())) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY v0.c0, LIKELY((v0.c4 IN ())) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((- (v0.c1)) COLLATE NOCASE) ORDER BY v0.c0, LIKELY((v0.c4 IN ())) ASC  NULLS FIRST;
SELECT * FROM v0 INNER JOIN vt0 ON (NOT (((((vt0.c0)AND(v0.c4)))AND('v䉠ᶱrof')))) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (NOT (((((vt0.c0)AND(v0.c4)))AND('v䉠ᶱrof')))));
SELECT * FROM v0 INNER JOIN vt0 ON (NOT (((((vt0.c0)AND(v0.c4)))AND('v䉠ᶱrof')))) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (NOT (((((vt0.c0)AND(v0.c4)))AND('v䉠ᶱrof')))));
SELECT * FROM v0 INNER JOIN vt0 ON (NOT (((((vt0.c0)AND(v0.c4)))AND('v䉠ᶱrof')))) WHERE ('');
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))<(('1450227669'))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<(('1450227669'))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))<(('1450227669'))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<(('1450227669'))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))<(('1450227669'))) COLLATE NOCASE);
SELECT * FROM v0, vt0 WHERE (((LIKELY(DISTINCT v0.c4))>(0.4275250988474729))) ORDER BY (((((v0.c3)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))%(((v0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT v0.c4))>(0.4275250988474729))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c3)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))%(((v0.c0) NOT NULL))));
SELECT * FROM v0, vt0 WHERE (((LIKELY(DISTINCT v0.c4))>(0.4275250988474729))) ORDER BY (((((v0.c3)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))%(((v0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT v0.c4))>(0.4275250988474729))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c3)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))%(((v0.c0) NOT NULL))));
SELECT * FROM v0, vt0 WHERE (((LIKELY(DISTINCT v0.c4))>(0.4275250988474729))) ORDER BY (((((v0.c3)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))%(((v0.c0) NOT NULL)));
SELECT ALL * FROM v0, vt0 WHERE ((((CAST(v0.c3 AS INTEGER)))<>((CAST(v0.c3 AS REAL))))) ORDER BY ((NULL)>=((v0.c2 IN (vt0.c1, v0.c0)))) DESC  NULLS FIRST, v0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c3 AS INTEGER)))<>((CAST(v0.c3 AS REAL))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((NULL)>=((v0.c2 IN (vt0.c1, v0.c0)))) DESC  NULLS FIRST, v0.c2 DESC);
SELECT ALL * FROM v0, vt0 WHERE ((((CAST(v0.c3 AS INTEGER)))<>((CAST(v0.c3 AS REAL))))) ORDER BY ((NULL)>=((v0.c2 IN (vt0.c1, v0.c0)))) DESC  NULLS FIRST, v0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c3 AS INTEGER)))<>((CAST(v0.c3 AS REAL))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((NULL)>=((v0.c2 IN (vt0.c1, v0.c0)))) DESC  NULLS FIRST, v0.c2 DESC);
SELECT ALL * FROM v0, vt0 WHERE ((((CAST(v0.c3 AS INTEGER)))<>((CAST(v0.c3 AS REAL))))) ORDER BY ((NULL)>=((v0.c2 IN (vt0.c1, v0.c0)))) DESC  NULLS FIRST, v0.c2 DESC;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (((((NOT (0.2581612495795774)))AND(CAST(v0.c0 AS INTEGER))))AND(((x'85334ddf') NOT BETWEEN (v0.c1) AND (v0.c3)))) WHERE (0X5e69c455);
SELECT SUM(count) FROM (SELECT ((0X5e69c455) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((((NOT (0.2581612495795774)))AND(CAST(v0.c0 AS INTEGER))))AND(((x'85334ddf') NOT BETWEEN (v0.c1) AND (v0.c3)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (((((NOT (0.2581612495795774)))AND(CAST(v0.c0 AS INTEGER))))AND(((x'85334ddf') NOT BETWEEN (v0.c1) AND (v0.c3)))) WHERE (0X5e69c455);
SELECT SUM(count) FROM (SELECT ((0X5e69c455) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((((NOT (0.2581612495795774)))AND(CAST(v0.c0 AS INTEGER))))AND(((x'85334ddf') NOT BETWEEN (v0.c1) AND (v0.c3)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (((((NOT (0.2581612495795774)))AND(CAST(v0.c0 AS INTEGER))))AND(((x'85334ddf') NOT BETWEEN (v0.c1) AND (v0.c3)))) WHERE (0X5e69c455);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN UPPER(v0.c1) THEN ((vt0.c1) IS FALSE) WHEN ((((((((vt0.c1)OR(v0.c0)))OR(v0.c2)))OR(v0.c1)))OR('TRUE')) THEN vt0.c1 WHEN 0.8122712279849986 THEN ((((((((v0.c1)OR(v0.c1)))AND(v0.c4)))OR(v0.c1)))OR(vt0.c0)) END) ORDER BY CAST(v0.c0 AS NUMERIC)  NULLS LAST, LTRIM((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER(v0.c1) THEN ((vt0.c1) IS FALSE) WHEN ((((((((vt0.c1)OR(v0.c0)))OR(v0.c2)))OR(v0.c1)))OR('TRUE')) THEN vt0.c1 WHEN 0.8122712279849986 THEN ((((((((v0.c1)OR(v0.c1)))AND(v0.c4)))OR(v0.c1)))OR(vt0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(v0.c0 AS NUMERIC)  NULLS LAST, LTRIM((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN UPPER(v0.c1) THEN ((vt0.c1) IS FALSE) WHEN ((((((((vt0.c1)OR(v0.c0)))OR(v0.c2)))OR(v0.c1)))OR('TRUE')) THEN vt0.c1 WHEN 0.8122712279849986 THEN ((((((((v0.c1)OR(v0.c1)))AND(v0.c4)))OR(v0.c1)))OR(vt0.c0)) END) ORDER BY CAST(v0.c0 AS NUMERIC)  NULLS LAST, LTRIM((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER(v0.c1) THEN ((vt0.c1) IS FALSE) WHEN ((((((((vt0.c1)OR(v0.c0)))OR(v0.c2)))OR(v0.c1)))OR('TRUE')) THEN vt0.c1 WHEN 0.8122712279849986 THEN ((((((((v0.c1)OR(v0.c1)))AND(v0.c4)))OR(v0.c1)))OR(vt0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(v0.c0 AS NUMERIC)  NULLS LAST, LTRIM((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN UPPER(v0.c1) THEN ((vt0.c1) IS FALSE) WHEN ((((((((vt0.c1)OR(v0.c0)))OR(v0.c2)))OR(v0.c1)))OR('TRUE')) THEN vt0.c1 WHEN 0.8122712279849986 THEN ((((((((v0.c1)OR(v0.c1)))AND(v0.c4)))OR(v0.c1)))OR(vt0.c0)) END) ORDER BY CAST(v0.c0 AS NUMERIC)  NULLS LAST, LTRIM((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))));
SELECT * FROM v0 WHERE (((((v0.c2)-(v0.c4))) ISNULL)) ORDER BY (CAST(v0.c0 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ((((((v0.c2)-(v0.c4))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (CAST(v0.c0 AS NUMERIC) IN ()));
SELECT * FROM v0 WHERE (((((v0.c2)-(v0.c4))) ISNULL)) ORDER BY (CAST(v0.c0 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ((((((v0.c2)-(v0.c4))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (CAST(v0.c0 AS NUMERIC) IN ()));
SELECT * FROM v0 WHERE (((((v0.c2)-(v0.c4))) ISNULL)) ORDER BY (CAST(v0.c0 AS NUMERIC) IN ());
SELECT COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY CAST(((v0.c3) NOT BETWEEN ('') AND (v0.c2)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c3) NOT BETWEEN ('') AND (v0.c2)) AS TEXT));
SELECT COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY CAST(((v0.c3) NOT BETWEEN ('') AND (v0.c2)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c3) NOT BETWEEN ('') AND (v0.c2)) AS TEXT));
SELECT COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY CAST(((v0.c3) NOT BETWEEN ('') AND (v0.c2)) AS TEXT);
SELECT COUNT(*) FROM vt0 WHERE ((((''))>=((((vt0.c0)IS(vt0.c0)))))) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN (vt0.c0)) ELSE (+ (vt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((''))>=((((vt0.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN (vt0.c0)) ELSE (+ (vt0.c1)) END ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((''))>=((((vt0.c0)IS(vt0.c0)))))) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN (vt0.c0)) ELSE (+ (vt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((''))>=((((vt0.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN (vt0.c0)) ELSE (+ (vt0.c1)) END ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((''))>=((((vt0.c0)IS(vt0.c0)))))) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN (vt0.c0)) ELSE (+ (vt0.c1)) END ASC;
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((((vt0.c0))<((vt0.c1)))) NOT BETWEEN (('' IN ())) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN NULL ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))<((vt0.c1)))) NOT BETWEEN (('' IN ())) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN NULL ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((((vt0.c0))<((vt0.c1)))) NOT BETWEEN (('' IN ())) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN NULL ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))<((vt0.c1)))) NOT BETWEEN (('' IN ())) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN NULL ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((((vt0.c0))<((vt0.c1)))) NOT BETWEEN (('' IN ())) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN NULL ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (((((v0.c1)=(v0.c4)))<=(0.972703565295766))) ORDER BY (- (((vt0.c0)!=(v0.c1)))), CAST(((vt0.c1)LIKE(vt0.c1)) AS BLOB) DESC  NULLS LAST, (((((((((v0.c4)AND(v0.c1)))OR(v0.c0)))AND(v0.c2)))OR(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((v0.c1)==(v0.c4)))<=(0.972703565295766))) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (((vt0.c0)<>(v0.c1)))), CAST(((vt0.c1)LIKE(vt0.c1)) AS BLOB) DESC  NULLS LAST, (((((((((v0.c4)AND(v0.c1)))OR(v0.c0)))AND(v0.c2)))OR(v0.c0)) IN ()));
SELECT * FROM v0, vt0 WHERE (((((v0.c1)=(v0.c4)))<=(0.972703565295766))) ORDER BY (- (((vt0.c0)!=(v0.c1)))), CAST(((vt0.c1)LIKE(vt0.c1)) AS BLOB) DESC  NULLS LAST, (((((((((v0.c4)AND(v0.c1)))OR(v0.c0)))AND(v0.c2)))OR(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((v0.c1)==(v0.c4)))<=(0.972703565295766))) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (((vt0.c0)<>(v0.c1)))), CAST(((vt0.c1)LIKE(vt0.c1)) AS BLOB) DESC  NULLS LAST, (((((((((v0.c4)AND(v0.c1)))OR(v0.c0)))AND(v0.c2)))OR(v0.c0)) IN ()));
SELECT * FROM v0, vt0 WHERE (((((v0.c1)=(v0.c4)))<=(0.972703565295766))) ORDER BY (- (((vt0.c0)!=(v0.c1)))), CAST(((vt0.c1)LIKE(vt0.c1)) AS BLOB) DESC  NULLS LAST, (((((((((v0.c4)AND(v0.c1)))OR(v0.c0)))AND(v0.c2)))OR(v0.c0)) IN ());
SELECT * FROM v0 CROSS JOIN vt0 ON CAST(vt0.c1 AS NUMERIC) WHERE (((x'818a' COLLATE NOCASE)>>(((vt0.c1)/(vt0.c1))))) ORDER BY (((v0.c4, vt0.c0, v0.c1)) BETWEEN (((((v0.c2)) BETWEEN ((v0.c3)) AND ((993849623))), (vt0.c1 IN (v0.c2)), ((v0.c2) NOTNULL))) AND (((((v0.c4, v0.c3, vt0.c0))<=((v0.c2, v0.c1, v0.c3))), (v0.c0 IN ()), v0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'818a' COLLATE NOCASE)>>(((vt0.c1)/(vt0.c1))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(vt0.c1 AS NUMERIC) ORDER BY (((v0.c4, vt0.c0, v0.c1)) BETWEEN (((((v0.c2)) BETWEEN ((v0.c3)) AND ((993849623))), (vt0.c1 IN (v0.c2)), ((v0.c2) NOTNULL))) AND (((((v0.c4, v0.c3, vt0.c0))<=((v0.c2, v0.c1, v0.c3))), (v0.c0 IN ()), v0.c1))) DESC);
SELECT * FROM v0 CROSS JOIN vt0 ON CAST(vt0.c1 AS NUMERIC) WHERE (((x'818a' COLLATE NOCASE)>>(((vt0.c1)/(vt0.c1))))) ORDER BY (((v0.c4, vt0.c0, v0.c1)) BETWEEN (((((v0.c2)) BETWEEN ((v0.c3)) AND ((993849623))), (vt0.c1 IN (v0.c2)), ((v0.c2) NOTNULL))) AND (((((v0.c4, v0.c3, vt0.c0))<=((v0.c2, v0.c1, v0.c3))), (v0.c0 IN ()), v0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'818a' COLLATE NOCASE)>>(((vt0.c1)/(vt0.c1))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(vt0.c1 AS NUMERIC) ORDER BY (((v0.c4, vt0.c0, v0.c1)) BETWEEN (((((v0.c2)) BETWEEN ((v0.c3)) AND ((993849623))), (vt0.c1 IN (v0.c2)), ((v0.c2) NOTNULL))) AND (((((v0.c4, v0.c3, vt0.c0))<=((v0.c2, v0.c1, v0.c3))), (v0.c0 IN ()), v0.c1))) DESC);
SELECT * FROM v0 CROSS JOIN vt0 ON CAST(vt0.c1 AS NUMERIC) WHERE (((x'818a' COLLATE NOCASE)>>(((vt0.c1)/(vt0.c1))))) ORDER BY (((v0.c4, vt0.c0, v0.c1)) BETWEEN (((((v0.c2)) BETWEEN ((v0.c3)) AND ((993849623))), (vt0.c1 IN (v0.c2)), ((v0.c2) NOTNULL))) AND (((((v0.c4, v0.c3, vt0.c0))<=((v0.c2, v0.c1, v0.c3))), (v0.c0 IN ()), v0.c1))) DESC;
SELECT ALL * FROM v0 WHERE (CASE ((v0.c3) IS FALSE)  WHEN '' THEN ((v0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c3) IS FALSE)  WHEN '' THEN ((v0.c0) IS TRUE) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c3) IS FALSE)  WHEN '' THEN ((v0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c3) IS FALSE)  WHEN '' THEN ((v0.c0) IS TRUE) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c3) IS FALSE)  WHEN '' THEN ((v0.c0) IS TRUE) END);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON LIKE(((v0.c4) BETWEEN (0xffffffffd04c9a45) AND (v0.c3)), CASE v0.c3  WHEN v0.c4 THEN v0.c3 WHEN vt0.c1 THEN v0.c3 WHEN v0.c2 THEN vt0.c0 ELSE NULL END, '-') WHERE (((v0.c4)GLOB(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c4)GLOB(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON LIKE(((v0.c4) BETWEEN (0xffffffffd04c9a45) AND (v0.c3)), CASE v0.c3  WHEN v0.c4 THEN v0.c3 WHEN vt0.c1 THEN v0.c3 WHEN v0.c2 THEN vt0.c0 ELSE NULL END, '-'));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON LIKE(((v0.c4) BETWEEN (0xffffffffd04c9a45) AND (v0.c3)), CASE v0.c3  WHEN v0.c4 THEN v0.c3 WHEN vt0.c1 THEN v0.c3 WHEN v0.c2 THEN vt0.c0 ELSE NULL END, '-') WHERE (((v0.c4)GLOB(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c4)GLOB(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON LIKE(((v0.c4) BETWEEN (0xffffffffd04c9a45) AND (v0.c3)), CASE v0.c3  WHEN v0.c4 THEN v0.c3 WHEN vt0.c1 THEN v0.c3 WHEN v0.c2 THEN vt0.c0 ELSE NULL END, '-'));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON LIKE(((v0.c4) BETWEEN (0xffffffffd04c9a45) AND (v0.c3)), CASE v0.c3  WHEN v0.c4 THEN v0.c3 WHEN vt0.c1 THEN v0.c3 WHEN v0.c2 THEN vt0.c0 ELSE NULL END, '-') WHERE (((v0.c4)GLOB(vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, 0.1113773343594856)) BETWEEN ((((vt0.c1)/(vt0.c0)), CAST(vt0.c1 AS INTEGER), (vt0.c1 IN (vt0.c0, vt0.c1)))) AND ((((vt0.c0)GLOB(vt0.c0)), (((vt0.c1))<=((vt0.c0))), CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, 0.1113773343594856)) BETWEEN ((((vt0.c1)/(vt0.c0)), CAST(vt0.c1 AS INTEGER), (vt0.c1 IN (vt0.c0, vt0.c1)))) AND ((((vt0.c0)GLOB(vt0.c0)), (((vt0.c1))<=((vt0.c0))), CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, 0.1113773343594856)) BETWEEN ((((vt0.c1)/(vt0.c0)), CAST(vt0.c1 AS INTEGER), (vt0.c1 IN (vt0.c0, vt0.c1)))) AND ((((vt0.c0)GLOB(vt0.c0)), (((vt0.c1))<=((vt0.c0))), CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, 0.1113773343594856)) BETWEEN ((((vt0.c1)/(vt0.c0)), CAST(vt0.c1 AS INTEGER), (vt0.c1 IN (vt0.c0, vt0.c1)))) AND ((((vt0.c0)GLOB(vt0.c0)), (((vt0.c1))<=((vt0.c0))), CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, 0.1113773343594856)) BETWEEN ((((vt0.c1)/(vt0.c0)), CAST(vt0.c1 AS INTEGER), (vt0.c1 IN (vt0.c0, vt0.c1)))) AND ((((vt0.c0)GLOB(vt0.c0)), (((vt0.c1))<=((vt0.c0))), CAST(vt0.c0 AS NUMERIC)))));
SELECT ALL * FROM vt0, v0 WHERE ((v0.c4 IN (v0.c4, v0.c4)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((v0.c4 IN (v0.c4, v0.c4)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((v0.c4 IN (v0.c4, v0.c4)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((v0.c4 IN (v0.c4, v0.c4)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((v0.c4 IN (v0.c4, v0.c4)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'') ORDER BY LIKE(vt0.c0 COLLATE NOCASE, ((vt0.c1)IS(vt0.c1)), 'r');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt0 ORDER BY LIKE(vt0.c0 COLLATE NOCASE, ((vt0.c1)IS(vt0.c1)), 'r'));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'') ORDER BY LIKE(vt0.c0 COLLATE NOCASE, ((vt0.c1)IS(vt0.c1)), 'r');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt0 ORDER BY LIKE(vt0.c0 COLLATE NOCASE, ((vt0.c1)IS(vt0.c1)), 'r'));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'') ORDER BY LIKE(vt0.c0 COLLATE NOCASE, ((vt0.c1)IS(vt0.c1)), 'r');
SELECT * FROM v0, vt0 WHERE (((((((x'')<(v0.c2)))OR(((vt0.c0)<(v0.c0)))))AND(json_extract(v0.c3, v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((x'')<(v0.c2)))OR(((vt0.c0)<(v0.c0)))))AND(json_extract(v0.c3, v0.c1)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((x'')<(v0.c2)))OR(((vt0.c0)<(v0.c0)))))AND(json_extract(v0.c3, v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((x'')<(v0.c2)))OR(((vt0.c0)<(v0.c0)))))AND(json_extract(v0.c3, v0.c1)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((x'')<(v0.c2)))OR(((vt0.c0)<(v0.c0)))))AND(json_extract(v0.c3, v0.c1))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c1) IS TRUE));
SELECT * FROM vt0 WHERE (CAST(TRIM(vt0.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(vt0.c1) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(TRIM(vt0.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(vt0.c1) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(TRIM(vt0.c1) AS REAL));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1)<>(vt0.c1))  WHEN 0X1aca6522 THEN ((vt0.c0)||(vt0.c1)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN -1675919641 ELSE NULL END THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c1)&(vt0.c0)) THEN ((vt0.c1)OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)!=(vt0.c1))  WHEN 0X1aca6522 THEN ((vt0.c0)||(vt0.c1)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN -1675919641 ELSE NULL END THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c1)&(vt0.c0)) THEN ((vt0.c1)OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1)<>(vt0.c1))  WHEN 0X1aca6522 THEN ((vt0.c0)||(vt0.c1)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN -1675919641 ELSE NULL END THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c1)&(vt0.c0)) THEN ((vt0.c1)OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)!=(vt0.c1))  WHEN 0X1aca6522 THEN ((vt0.c0)||(vt0.c1)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN -1675919641 ELSE NULL END THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c1)&(vt0.c0)) THEN ((vt0.c1)OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1)<>(vt0.c1))  WHEN 0X1aca6522 THEN ((vt0.c0)||(vt0.c1)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN -1675919641 ELSE NULL END THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c1)&(vt0.c0)) THEN ((vt0.c1)OR(vt0.c0)) END);
SELECT * FROM v0 WHERE (0.011446547789120909) ORDER BY (((NULL) BETWEEN (v0.c0) AND ('389972930')) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.011446547789120909) IS TRUE)  as count FROM v0 ORDER BY (((NULL) BETWEEN (v0.c0) AND ('389972930')) IN ()) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (0.011446547789120909) ORDER BY (((NULL) BETWEEN (v0.c0) AND ('389972930')) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.011446547789120909) IS TRUE)  as count FROM v0 ORDER BY (((NULL) BETWEEN (v0.c0) AND ('389972930')) IN ()) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (0.011446547789120909) ORDER BY (((NULL) BETWEEN (v0.c0) AND ('389972930')) IN ()) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (UPPER(DISTINCT ((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UPPER(DISTINCT ((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UPPER(DISTINCT ((vt0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)<(NULL)));
SELECT SUM(count) FROM (SELECT ((((NULL)<(NULL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)<(NULL)));
SELECT SUM(count) FROM (SELECT ((((NULL)<(NULL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)<(NULL)));
SELECT ALL * FROM vt0, v0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN v0.c4 THEN ((v0.c2) ISNULL) END) ORDER BY CAST(v0.c3 COLLATE BINARY AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN v0.c4 THEN ((v0.c2) ISNULL) END) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(v0.c3 COLLATE BINARY AS INTEGER));
SELECT ALL * FROM vt0, v0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN v0.c4 THEN ((v0.c2) ISNULL) END) ORDER BY CAST(v0.c3 COLLATE BINARY AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN v0.c4 THEN ((v0.c2) ISNULL) END) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(v0.c3 COLLATE BINARY AS INTEGER));
SELECT ALL * FROM vt0, v0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN v0.c4 THEN ((v0.c2) ISNULL) END) ORDER BY CAST(v0.c3 COLLATE BINARY AS INTEGER);
SELECT ALL * FROM vt0, v0 WHERE (v0.c3) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (v0.c3) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (v0.c3) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((NOT (vt0.c1))) AND (TYPEOF(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((NOT (vt0.c1))) AND (TYPEOF(DISTINCT vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((NOT (vt0.c1))) AND (TYPEOF(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((NOT (vt0.c1))) AND (TYPEOF(DISTINCT vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((NOT (vt0.c1))) AND (TYPEOF(DISTINCT vt0.c0))) ASC;
SELECT * FROM v0, vt0 WHERE (LIKELIHOOD(DISTINCT (v0.c2 IN (x'')), 0.5354545306705426));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (v0.c2 IN (x'')), 0.5354545306705426)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (LIKELIHOOD(DISTINCT (v0.c2 IN (x'')), 0.5354545306705426));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (v0.c2 IN (x'')), 0.5354545306705426)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (LIKELIHOOD(DISTINCT (v0.c2 IN (x'')), 0.5354545306705426));
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((((v0.c0 IN ()))AND(TYPEOF(v0.c2)))) ORDER BY (((CAST(v0.c3 AS BLOB), (((vt0.c0)) NOT BETWEEN ((v0.c4)) AND ((vt0.c1))), (vt0.c1 IN (v0.c2))))==((((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)), ((NULL)||(v0.c4)), (NOT (v0.c3))))), ((CAST('-1619882696' AS NUMERIC)) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))AND(TYPEOF(v0.c2)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (((CAST(v0.c3 AS BLOB), (((vt0.c0)) NOT BETWEEN ((v0.c4)) AND ((vt0.c1))), (vt0.c1 IN (v0.c2))))=((((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)), ((NULL)||(v0.c4)), (NOT (v0.c3))))), ((CAST('-1619882696' AS NUMERIC)) IS TRUE));
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((((v0.c0 IN ()))AND(TYPEOF(v0.c2)))) ORDER BY (((CAST(v0.c3 AS BLOB), (((vt0.c0)) NOT BETWEEN ((v0.c4)) AND ((vt0.c1))), (vt0.c1 IN (v0.c2))))==((((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)), ((NULL)||(v0.c4)), (NOT (v0.c3))))), ((CAST('-1619882696' AS NUMERIC)) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))AND(TYPEOF(v0.c2)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (((CAST(v0.c3 AS BLOB), (((vt0.c0)) NOT BETWEEN ((v0.c4)) AND ((vt0.c1))), (vt0.c1 IN (v0.c2))))=((((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)), ((NULL)||(v0.c4)), (NOT (v0.c3))))), ((CAST('-1619882696' AS NUMERIC)) IS TRUE));
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((((v0.c0 IN ()))AND(TYPEOF(v0.c2)))) ORDER BY (((CAST(v0.c3 AS BLOB), (((vt0.c0)) NOT BETWEEN ((v0.c4)) AND ((vt0.c1))), (vt0.c1 IN (v0.c2))))==((((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)), ((NULL)||(v0.c4)), (NOT (v0.c3))))), ((CAST('-1619882696' AS NUMERIC)) IS TRUE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1)IS NOT(v0.c3)))IS(((vt0.c1)/(v0.c0)))) WHERE (((LOWER(DISTINCT v0.c1))=(((v0.c4) ISNULL)))) ORDER BY ((v0.c4 COLLATE RTRIM) BETWEEN (0.5114109066907835) AND (((v0.c0)|(v0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT v0.c1))==(((v0.c4) ISNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1)IS NOT(v0.c3)))IS(((vt0.c1)/(v0.c0)))) ORDER BY ((v0.c4 COLLATE RTRIM) BETWEEN (0.5114109066907835) AND (((v0.c0)|(v0.c4))))  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1)IS NOT(v0.c3)))IS(((vt0.c1)/(v0.c0)))) WHERE (((LOWER(DISTINCT v0.c1))=(((v0.c4) ISNULL)))) ORDER BY ((v0.c4 COLLATE RTRIM) BETWEEN (0.5114109066907835) AND (((v0.c0)|(v0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT v0.c1))==(((v0.c4) ISNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1)IS NOT(v0.c3)))IS(((vt0.c1)/(v0.c0)))) ORDER BY ((v0.c4 COLLATE RTRIM) BETWEEN (0.5114109066907835) AND (((v0.c0)|(v0.c4))))  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1)IS NOT(v0.c3)))IS(((vt0.c1)/(v0.c0)))) WHERE (((LOWER(DISTINCT v0.c1))=(((v0.c4) ISNULL)))) ORDER BY ((v0.c4 COLLATE RTRIM) BETWEEN (0.5114109066907835) AND (((v0.c0)|(v0.c4))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT * FROM vt0, v0 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c0) IS TRUE))))OR(v0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c0) IS TRUE))))OR(v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c0) IS TRUE))))OR(v0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c0) IS TRUE))))OR(v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c0) IS TRUE))))OR(v0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE (((((((('-921836313')AND(vt0.c1)))AND(vt0.c0))))<((-559086732)))) ORDER BY ABS(DISTINCT (vt0.c1 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ((((((((('-921836313')AND(vt0.c1)))AND(vt0.c0))))<((-559086732)))) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT (vt0.c1 IN ())) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((('-921836313')AND(vt0.c1)))AND(vt0.c0))))<((-559086732)))) ORDER BY ABS(DISTINCT (vt0.c1 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ((((((((('-921836313')AND(vt0.c1)))AND(vt0.c0))))<((-559086732)))) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT (vt0.c1 IN ())) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((('-921836313')AND(vt0.c1)))AND(vt0.c0))))<((-559086732)))) ORDER BY ABS(DISTINCT (vt0.c1 IN ())) DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE (((x'')OR((((v0.c4)) NOT BETWEEN ((v0.c2)) AND ((v0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')OR((((v0.c4)) NOT BETWEEN ((v0.c2)) AND ((v0.c4)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((x'')OR((((v0.c4)) NOT BETWEEN ((v0.c2)) AND ((v0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')OR((((v0.c4)) NOT BETWEEN ((v0.c2)) AND ((v0.c4)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((x'')OR((((v0.c4)) NOT BETWEEN ((v0.c2)) AND ((v0.c4))))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((NULL)OR((~ (v0.c3)))));
SELECT SUM(count) FROM (SELECT ((((NULL)OR((~ (v0.c3))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((NULL)OR((~ (v0.c3)))));
SELECT SUM(count) FROM (SELECT ((((NULL)OR((~ (v0.c3))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((NULL)OR((~ (v0.c3)))));
SELECT ALL * FROM vt0, v0 WHERE (vt0.c1) ORDER BY (NOT ((- (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT ((- (v0.c0)))) DESC);
SELECT ALL * FROM vt0, v0 WHERE (vt0.c1) ORDER BY (NOT ((- (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT ((- (v0.c0)))) DESC);
SELECT ALL * FROM vt0, v0 WHERE (vt0.c1) ORDER BY (NOT ((- (v0.c0)))) DESC;
SELECT * FROM vt0, v0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 THEN ((((vt0.c1)AND(v0.c3)))AND(v0.c3)) ELSE ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)) END) ORDER BY CAST((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 THEN ((((vt0.c1)AND(v0.c3)))AND(v0.c3)) ELSE ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))) AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 THEN ((((vt0.c1)AND(v0.c3)))AND(v0.c3)) ELSE ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)) END) ORDER BY CAST((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 THEN ((((vt0.c1)AND(v0.c3)))AND(v0.c3)) ELSE ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))) AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 THEN ((((vt0.c1)AND(v0.c3)))AND(v0.c3)) ELSE ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)) END) ORDER BY CAST((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))) AS INTEGER) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON 0.35419403486107537 WHERE ((((((vt0.c0))<((v0.c2))))<(((0.944944191581249)>>(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((v0.c2))))<(((0.944944191581249)>>(v0.c1))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON 0.35419403486107537);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON 0.35419403486107537 WHERE ((((((vt0.c0))<((v0.c2))))<(((0.944944191581249)>>(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((v0.c2))))<(((0.944944191581249)>>(v0.c1))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON 0.35419403486107537);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON 0.35419403486107537 WHERE ((((((vt0.c0))<((v0.c2))))<(((0.944944191581249)>>(v0.c1)))));
SELECT ALL * FROM v0 WHERE ((~ (CAST(v0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (CAST(v0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (CAST(v0.c2 AS TEXT))));
SELECT * FROM v0, vt0 WHERE ((- ((('1185051773') NOT BETWEEN (v0.c4) AND (v0.c1))))) ORDER BY CASE ((v0.c2) IS TRUE)  WHEN (((vt0.c0)) BETWEEN ((v0.c3)) AND ((vt0.c1))) THEN ((0.30206364222550386)<<(vt0.c1)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 WHEN ((449471778)!=(vt0.c1)) THEN ((v0.c4) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(v0.c3 AS INTEGER) END, CASE vt0.c0 COLLATE BINARY  WHEN (~ (v0.c0)) THEN ((x'')/(vt0.c0)) ELSE (+ (v0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((('1185051773') NOT BETWEEN (v0.c4) AND (v0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE ((v0.c2) IS TRUE)  WHEN (((vt0.c0)) BETWEEN ((v0.c3)) AND ((vt0.c1))) THEN ((0.30206364222550386)<<(vt0.c1)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 WHEN ((449471778)!=(vt0.c1)) THEN ((v0.c4) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(v0.c3 AS INTEGER) END, CASE vt0.c0 COLLATE BINARY  WHEN (~ (v0.c0)) THEN ((x'')/(vt0.c0)) ELSE (+ (v0.c1)) END  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((- ((('1185051773') NOT BETWEEN (v0.c4) AND (v0.c1))))) ORDER BY CASE ((v0.c2) IS TRUE)  WHEN (((vt0.c0)) BETWEEN ((v0.c3)) AND ((vt0.c1))) THEN ((0.30206364222550386)<<(vt0.c1)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 WHEN ((449471778)!=(vt0.c1)) THEN ((v0.c4) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(v0.c3 AS INTEGER) END, CASE vt0.c0 COLLATE BINARY  WHEN (~ (v0.c0)) THEN ((x'')/(vt0.c0)) ELSE (+ (v0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((('1185051773') NOT BETWEEN (v0.c4) AND (v0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE ((v0.c2) IS TRUE)  WHEN (((vt0.c0)) BETWEEN ((v0.c3)) AND ((vt0.c1))) THEN ((0.30206364222550386)<<(vt0.c1)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 WHEN ((449471778)!=(vt0.c1)) THEN ((v0.c4) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(v0.c3 AS INTEGER) END, CASE vt0.c0 COLLATE BINARY  WHEN (~ (v0.c0)) THEN ((x'')/(vt0.c0)) ELSE (+ (v0.c1)) END  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((- ((('1185051773') NOT BETWEEN (v0.c4) AND (v0.c1))))) ORDER BY CASE ((v0.c2) IS TRUE)  WHEN (((vt0.c0)) BETWEEN ((v0.c3)) AND ((vt0.c1))) THEN ((0.30206364222550386)<<(vt0.c1)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 WHEN ((449471778)!=(vt0.c1)) THEN ((v0.c4) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(v0.c3 AS INTEGER) END, CASE vt0.c0 COLLATE BINARY  WHEN (~ (v0.c0)) THEN ((x'')/(vt0.c0)) ELSE (+ (v0.c1)) END  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (-2033344266);
SELECT SUM(count) FROM (SELECT ((-2033344266) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (-2033344266);
SELECT SUM(count) FROM (SELECT ((-2033344266) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (-2033344266);
SELECT COUNT(*) FROM vt0, v0 WHERE ((- (((x'')<>(v0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((x'')!=(v0.c3))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((- (((x'')<>(v0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((x'')!=(v0.c3))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((- (((x'')<>(v0.c3)))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((v0.c4 IN (1.811219021E9))) NOT BETWEEN (v0.c4 COLLATE NOCASE) AND (((v0.c3) NOT BETWEEN (v0.c2) AND (v0.c3)))) WHERE (((((CASE WHEN v0.c0 THEN v0.c3 WHEN v0.c1 THEN vt0.c1 WHEN v0.c4 THEN v0.c0 END)OR(((((v0.c1)AND(v0.c3)))AND(vt0.c1)))))OR((v0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c0 THEN v0.c3 WHEN v0.c1 THEN vt0.c1 WHEN v0.c4 THEN v0.c0 END)OR(((((v0.c1)AND(v0.c3)))AND(vt0.c1)))))OR((v0.c3 IN ())))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((v0.c4 IN (1.811219021E9))) NOT BETWEEN (v0.c4 COLLATE NOCASE) AND (((v0.c3) NOT BETWEEN (v0.c2) AND (v0.c3)))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((v0.c4 IN (1.811219021E9))) NOT BETWEEN (v0.c4 COLLATE NOCASE) AND (((v0.c3) NOT BETWEEN (v0.c2) AND (v0.c3)))) WHERE (((((CASE WHEN v0.c0 THEN v0.c3 WHEN v0.c1 THEN vt0.c1 WHEN v0.c4 THEN v0.c0 END)OR(((((v0.c1)AND(v0.c3)))AND(vt0.c1)))))OR((v0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c0 THEN v0.c3 WHEN v0.c1 THEN vt0.c1 WHEN v0.c4 THEN v0.c0 END)OR(((((v0.c1)AND(v0.c3)))AND(vt0.c1)))))OR((v0.c3 IN ())))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((v0.c4 IN (1.811219021E9))) NOT BETWEEN (v0.c4 COLLATE NOCASE) AND (((v0.c3) NOT BETWEEN (v0.c2) AND (v0.c3)))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((v0.c4 IN (1.811219021E9))) NOT BETWEEN (v0.c4 COLLATE NOCASE) AND (((v0.c3) NOT BETWEEN (v0.c2) AND (v0.c3)))) WHERE (((((CASE WHEN v0.c0 THEN v0.c3 WHEN v0.c1 THEN vt0.c1 WHEN v0.c4 THEN v0.c0 END)OR(((((v0.c1)AND(v0.c3)))AND(vt0.c1)))))OR((v0.c3 IN ()))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((- (v0.c1)), CAST(v0.c2 AS BLOB), CASE WHEN v0.c1 THEN v0.c4 ELSE v0.c0 END))<=((((v0.c4)<(v0.c3)), ((v0.c3)<=(v0.c2)), v0.c3 COLLATE BINARY)))) ORDER BY v0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((- (v0.c1)), CAST(v0.c2 AS BLOB), CASE WHEN v0.c1 THEN v0.c4 ELSE v0.c0 END))<=((((v0.c4)<(v0.c3)), ((v0.c3)<=(v0.c2)), v0.c3 COLLATE BINARY)))) IS TRUE)  as count FROM v0 ORDER BY v0.c3  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((- (v0.c1)), CAST(v0.c2 AS BLOB), CASE WHEN v0.c1 THEN v0.c4 ELSE v0.c0 END))<=((((v0.c4)<(v0.c3)), ((v0.c3)<=(v0.c2)), v0.c3 COLLATE BINARY)))) ORDER BY v0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((- (v0.c1)), CAST(v0.c2 AS BLOB), CASE WHEN v0.c1 THEN v0.c4 ELSE v0.c0 END))<=((((v0.c4)<(v0.c3)), ((v0.c3)<=(v0.c2)), v0.c3 COLLATE BINARY)))) IS TRUE)  as count FROM v0 ORDER BY v0.c3  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((- (v0.c1)), CAST(v0.c2 AS BLOB), CASE WHEN v0.c1 THEN v0.c4 ELSE v0.c0 END))<=((((v0.c4)<(v0.c3)), ((v0.c3)<=(v0.c2)), v0.c3 COLLATE BINARY)))) ORDER BY v0.c3  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT vt0.c1 COLLATE BINARY, CAST(vt0.c1 AS REAL))) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT vt0.c1 COLLATE BINARY, CAST(vt0.c1 AS REAL))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT vt0.c1 COLLATE BINARY, CAST(vt0.c1 AS REAL))) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT vt0.c1 COLLATE BINARY, CAST(vt0.c1 AS REAL))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT vt0.c1 COLLATE BINARY, CAST(vt0.c1 AS REAL))) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) DESC;
SELECT COUNT(*) FROM v0 WHERE ((((CAST(v0.c0 AS INTEGER)))<=(((v0.c2 IN ()))))) ORDER BY v0.c1 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c0 AS INTEGER)))<=(((v0.c2 IN ()))))) IS TRUE)  as count FROM v0 ORDER BY v0.c1 COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((CAST(v0.c0 AS INTEGER)))<=(((v0.c2 IN ()))))) ORDER BY v0.c1 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c0 AS INTEGER)))<=(((v0.c2 IN ()))))) IS TRUE)  as count FROM v0 ORDER BY v0.c1 COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((CAST(v0.c0 AS INTEGER)))<=(((v0.c2 IN ()))))) ORDER BY v0.c1 COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c1)OR(v0.c3)))OR(vt0.c1)) IN ())) ORDER BY (NULL IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)OR(v0.c3)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY (NULL IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c1)OR(v0.c3)))OR(vt0.c1)) IN ())) ORDER BY (NULL IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)OR(v0.c3)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY (NULL IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c1)OR(v0.c3)))OR(vt0.c1)) IN ())) ORDER BY (NULL IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((+ (vt0.c0))))!=((((vt0.c1) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ((((((+ (vt0.c0))))!=((((vt0.c1) NOTNULL))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((+ (vt0.c0))))!=((((vt0.c1) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ((((((+ (vt0.c0))))!=((((vt0.c1) NOTNULL))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((+ (vt0.c0))))!=((((vt0.c1) NOTNULL)))));
SELECT COUNT(*) FROM v0 WHERE (((((0.5097319625008284) NOT NULL))LIKE(((((v0.c4)AND(v0.c2)))AND(v0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.5097319625008284) NOT NULL))LIKE(((((v0.c4)AND(v0.c2)))AND(v0.c4))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((0.5097319625008284) NOT NULL))LIKE(((((v0.c4)AND(v0.c2)))AND(v0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.5097319625008284) NOT NULL))LIKE(((((v0.c4)AND(v0.c2)))AND(v0.c4))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((0.5097319625008284) NOT NULL))LIKE(((((v0.c4)AND(v0.c2)))AND(v0.c4)))));
SELECT * FROM v0 WHERE (((v0.c1) NOTNULL)) ORDER BY CASE ((((((((v0.c1)AND(v0.c2)))OR(v0.c0)))AND('H\dK銌')))AND(v0.c2))  WHEN '<J' THEN CAST(v0.c1 AS BLOB) ELSE (v0.c3 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY CASE ((((((((v0.c1)AND(v0.c2)))OR(v0.c0)))AND('H\dK銌')))AND(v0.c2))  WHEN '<J' THEN CAST(v0.c1 AS BLOB) ELSE (v0.c3 IN ()) END DESC);
SELECT * FROM v0 WHERE (((v0.c1) NOTNULL)) ORDER BY CASE ((((((((v0.c1)AND(v0.c2)))OR(v0.c0)))AND('H\dK銌')))AND(v0.c2))  WHEN '<J' THEN CAST(v0.c1 AS BLOB) ELSE (v0.c3 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY CASE ((((((((v0.c1)AND(v0.c2)))OR(v0.c0)))AND('H\dK銌')))AND(v0.c2))  WHEN '<J' THEN CAST(v0.c1 AS BLOB) ELSE (v0.c3 IN ()) END DESC);
SELECT * FROM v0 WHERE (((v0.c1) NOTNULL)) ORDER BY CASE ((((((((v0.c1)AND(v0.c2)))OR(v0.c0)))AND('H\dK銌')))AND(v0.c2))  WHEN '<J' THEN CAST(v0.c1 AS BLOB) ELSE (v0.c3 IN ()) END DESC;
SELECT * FROM v0 WHERE (CASE WHEN v0.c3 COLLATE RTRIM THEN ((((v0.c1)OR(v0.c3)))OR(v0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c3 COLLATE RTRIM THEN ((((v0.c1)OR(v0.c3)))OR(v0.c2)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN v0.c3 COLLATE RTRIM THEN ((((v0.c1)OR(v0.c3)))OR(v0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c3 COLLATE RTRIM THEN ((((v0.c1)OR(v0.c3)))OR(v0.c2)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN v0.c3 COLLATE RTRIM THEN ((((v0.c1)OR(v0.c3)))OR(v0.c2)) END);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (x'' IN ()) DESC, ((((vt0.c1 COLLATE NOCASE)AND(0.7140056394999288)))OR(COALESCE(vt0.c0, vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (x'' IN ()) DESC, ((((vt0.c1 COLLATE NOCASE)AND(0.7140056394999288)))OR(COALESCE(vt0.c0, vt0.c0))) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (x'' IN ()) DESC, ((((vt0.c1 COLLATE NOCASE)AND(0.7140056394999288)))OR(COALESCE(vt0.c0, vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (x'' IN ()) DESC, ((((vt0.c1 COLLATE NOCASE)AND(0.7140056394999288)))OR(COALESCE(vt0.c0, vt0.c0))) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (x'' IN ()) DESC, ((((vt0.c1 COLLATE NOCASE)AND(0.7140056394999288)))OR(COALESCE(vt0.c0, vt0.c0))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON TYPEOF((((v0.c3))=((vt0.c0)))) WHERE (((((v0.c3) IS TRUE)) NOT BETWEEN (CASE v0.c2  WHEN v0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c4 END) AND ((0xffffffffe69f87aa IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c3) IS TRUE)) NOT BETWEEN (CASE v0.c2  WHEN v0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c4 END) AND ((0Xffffffffe69f87aa IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON TYPEOF((((v0.c3))=((vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON TYPEOF((((v0.c3))=((vt0.c0)))) WHERE (((((v0.c3) IS TRUE)) NOT BETWEEN (CASE v0.c2  WHEN v0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c4 END) AND ((0xffffffffe69f87aa IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c3) IS TRUE)) NOT BETWEEN (CASE v0.c2  WHEN v0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c4 END) AND ((0Xffffffffe69f87aa IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON TYPEOF((((v0.c3))=((vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON TYPEOF((((v0.c3))=((vt0.c0)))) WHERE (((((v0.c3) IS TRUE)) NOT BETWEEN (CASE v0.c2  WHEN v0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c4 END) AND ((0xffffffffe69f87aa IN ()))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((x'c4bf')&(CAST(v0.c2 AS TEXT))) WHERE (CAST(TYPEOF(v0.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(v0.c2) AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((x'c4bf')&(CAST(v0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((x'c4bf')&(CAST(v0.c2 AS TEXT))) WHERE (CAST(TYPEOF(v0.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(v0.c2) AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((x'c4bf')&(CAST(v0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((x'c4bf')&(CAST(v0.c2 AS TEXT))) WHERE (CAST(TYPEOF(v0.c2) AS INTEGER));
SELECT * FROM v0 WHERE (0x30508bf) ORDER BY CAST(v0.c2 COLLATE RTRIM AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((0x30508bf) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c2 COLLATE RTRIM AS NUMERIC) ASC);
SELECT * FROM v0 WHERE (0x30508bf) ORDER BY CAST(v0.c2 COLLATE RTRIM AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((0x30508bf) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c2 COLLATE RTRIM AS NUMERIC) ASC);
SELECT * FROM v0 WHERE (0x30508bf) ORDER BY CAST(v0.c2 COLLATE RTRIM AS NUMERIC) ASC;
SELECT ALL * FROM v0, vt0 WHERE (CASE CASE v0.c2  WHEN v0.c0 THEN NULL ELSE v0.c0 END  WHEN ((v0.c3) BETWEEN (v0.c3) AND ('796027649')) THEN 0.7881708425597431 END) ORDER BY CASE ((v0.c3)AND(v0.c2))  WHEN ((v0.c0) NOT NULL) THEN ((((v0.c2)AND(v0.c1)))AND(-8.33196359E8)) WHEN ((v0.c3) IS FALSE) THEN ((v0.c4)-(v0.c4)) WHEN ((v0.c4) ISNULL) THEN CAST(v0.c2 AS BLOB) END, (((v0.c3, vt0.c0, -1.375547403E9)) BETWEEN (((+ (vt0.c1)), ((v0.c3) ISNULL), v0.c0 COLLATE RTRIM)) AND ((((((((((v0.c3)AND(v0.c3)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)), ((v0.c4) NOT BETWEEN (vt0.c1) AND (v0.c1)), ((v0.c1)||(v0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE v0.c2  WHEN v0.c0 THEN NULL ELSE v0.c0 END  WHEN ((v0.c3) BETWEEN (v0.c3) AND ('796027649')) THEN 0.7881708425597431 END) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE ((v0.c3)AND(v0.c2))  WHEN ((v0.c0) NOT NULL) THEN ((((v0.c2)AND(v0.c1)))AND(-8.33196359E8)) WHEN ((v0.c3) IS FALSE) THEN ((v0.c4)-(v0.c4)) WHEN ((v0.c4) ISNULL) THEN CAST(v0.c2 AS BLOB) END, (((v0.c3, vt0.c0, -1.375547403E9)) BETWEEN (((+ (vt0.c1)), ((v0.c3) ISNULL), v0.c0 COLLATE RTRIM)) AND ((((((((((v0.c3)AND(v0.c3)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)), ((v0.c4) NOT BETWEEN (vt0.c1) AND (v0.c1)), ((v0.c1)||(v0.c3)))))  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (CASE CASE v0.c2  WHEN v0.c0 THEN NULL ELSE v0.c0 END  WHEN ((v0.c3) BETWEEN (v0.c3) AND ('796027649')) THEN 0.7881708425597431 END) ORDER BY CASE ((v0.c3)AND(v0.c2))  WHEN ((v0.c0) NOT NULL) THEN ((((v0.c2)AND(v0.c1)))AND(-8.33196359E8)) WHEN ((v0.c3) IS FALSE) THEN ((v0.c4)-(v0.c4)) WHEN ((v0.c4) ISNULL) THEN CAST(v0.c2 AS BLOB) END, (((v0.c3, vt0.c0, -1.375547403E9)) BETWEEN (((+ (vt0.c1)), ((v0.c3) ISNULL), v0.c0 COLLATE RTRIM)) AND ((((((((((v0.c3)AND(v0.c3)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)), ((v0.c4) NOT BETWEEN (vt0.c1) AND (v0.c1)), ((v0.c1)||(v0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE v0.c2  WHEN v0.c0 THEN NULL ELSE v0.c0 END  WHEN ((v0.c3) BETWEEN (v0.c3) AND ('796027649')) THEN 0.7881708425597431 END) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE ((v0.c3)AND(v0.c2))  WHEN ((v0.c0) NOT NULL) THEN ((((v0.c2)AND(v0.c1)))AND(-8.33196359E8)) WHEN ((v0.c3) IS FALSE) THEN ((v0.c4)-(v0.c4)) WHEN ((v0.c4) ISNULL) THEN CAST(v0.c2 AS BLOB) END, (((v0.c3, vt0.c0, -1.375547403E9)) BETWEEN (((+ (vt0.c1)), ((v0.c3) ISNULL), v0.c0 COLLATE RTRIM)) AND ((((((((((v0.c3)AND(v0.c3)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)), ((v0.c4) NOT BETWEEN (vt0.c1) AND (v0.c1)), ((v0.c1)||(v0.c3)))))  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (CASE CASE v0.c2  WHEN v0.c0 THEN NULL ELSE v0.c0 END  WHEN ((v0.c3) BETWEEN (v0.c3) AND ('796027649')) THEN 0.7881708425597431 END) ORDER BY CASE ((v0.c3)AND(v0.c2))  WHEN ((v0.c0) NOT NULL) THEN ((((v0.c2)AND(v0.c1)))AND(-8.33196359E8)) WHEN ((v0.c3) IS FALSE) THEN ((v0.c4)-(v0.c4)) WHEN ((v0.c4) ISNULL) THEN CAST(v0.c2 AS BLOB) END, (((v0.c3, vt0.c0, -1.375547403E9)) BETWEEN (((+ (vt0.c1)), ((v0.c3) ISNULL), v0.c0 COLLATE RTRIM)) AND ((((((((((v0.c3)AND(v0.c3)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)), ((v0.c4) NOT BETWEEN (vt0.c1) AND (v0.c1)), ((v0.c1)||(v0.c3)))))  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c0))>((NULL)))) BETWEEN (vt0.c1) AND (CAST(0.7625679278759426 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((NULL)))) BETWEEN (vt0.c1) AND (CAST(0.7625679278759426 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0))>((NULL)))) BETWEEN (vt0.c1) AND (CAST(0.7625679278759426 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((NULL)))) BETWEEN (vt0.c1) AND (CAST(0.7625679278759426 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0))>((NULL)))) BETWEEN (vt0.c1) AND (CAST(0.7625679278759426 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (x'b604') ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)  NULLS FIRST, CAST(vt0.c1 AS NUMERIC) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((x'b604') IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)  NULLS FIRST, CAST(vt0.c1 AS NUMERIC) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (x'b604') ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)  NULLS FIRST, CAST(vt0.c1 AS NUMERIC) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((x'b604') IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)  NULLS FIRST, CAST(vt0.c1 AS NUMERIC) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (x'b604') ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)  NULLS FIRST, CAST(vt0.c1 AS NUMERIC) COLLATE BINARY;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON CAST(v0.c0 COLLATE NOCASE AS BLOB) WHERE ((((v0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((CHANGES(), v0.c4 COLLATE BINARY, CAST(v0.c4 AS BLOB))) AND ((((v0.c3) NOTNULL), (~ (x'')), ((v0.c1)<(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((CHANGES(), v0.c4 COLLATE BINARY, CAST(v0.c4 AS BLOB))) AND ((((v0.c3) NOTNULL), (~ (x'')), ((v0.c1)<(vt0.c0)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CAST(v0.c0 COLLATE NOCASE AS BLOB));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON CAST(v0.c0 COLLATE NOCASE AS BLOB) WHERE ((((v0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((CHANGES(), v0.c4 COLLATE BINARY, CAST(v0.c4 AS BLOB))) AND ((((v0.c3) NOTNULL), (~ (x'')), ((v0.c1)<(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((CHANGES(), v0.c4 COLLATE BINARY, CAST(v0.c4 AS BLOB))) AND ((((v0.c3) NOTNULL), (~ (x'')), ((v0.c1)<(vt0.c0)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CAST(v0.c0 COLLATE NOCASE AS BLOB));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON CAST(v0.c0 COLLATE NOCASE AS BLOB) WHERE ((((v0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((CHANGES(), v0.c4 COLLATE BINARY, CAST(v0.c4 AS BLOB))) AND ((((v0.c3) NOTNULL), (~ (x'')), ((v0.c1)<(vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM v0 NOT INDEXED, vt0 WHERE (((CAST(v0.c4 AS INTEGER)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c4 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0 NOT INDEXED, vt0 WHERE (((CAST(v0.c4 AS INTEGER)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c4 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0 NOT INDEXED, vt0 WHERE (((CAST(v0.c4 AS INTEGER)) NOT NULL));
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(x'')))AND(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(x'')))AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(x'')))AND(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(x'')))AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(x'')))AND(vt0.c0)) AS REAL));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)|(0.8658751576998447)))%(v0.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)|(0.8658751576998447)))%(v0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)|(0.8658751576998447)))%(v0.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)|(0.8658751576998447)))%(v0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)|(0.8658751576998447)))%(v0.c4 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'');
SELECT ALL * FROM v0 WHERE (highlight(CAST(v0.c3 AS TEXT), x'', (v0.c2 IN ()), ((v0.c3) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((highlight(CAST(v0.c3 AS TEXT), x'', (v0.c2 IN ()), ((v0.c3) NOT NULL))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (highlight(CAST(v0.c3 AS TEXT), x'', (v0.c2 IN ()), ((v0.c3) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((highlight(CAST(v0.c3 AS TEXT), x'', (v0.c2 IN ()), ((v0.c3) NOT NULL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((x'' COLLATE BINARY) BETWEEN (((v0.c0)AND(vt0.c1))) AND (0x26db425d COLLATE NOCASE)) WHERE (((((v0.c2))=((v0.c1))) IN ((NOT (v0.c0)), ((v0.c2)IS NOT(v0.c0))))) ORDER BY (((v0.c4)) BETWEEN (((((vt0.c1))==((vt0.c1))))) AND ((CAST(v0.c3 AS TEXT)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2))=((v0.c1))) IN ((NOT (v0.c0)), ((v0.c2)IS NOT(v0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((x'' COLLATE BINARY) BETWEEN (((v0.c0)AND(vt0.c1))) AND (0x26db425d COLLATE NOCASE)) ORDER BY (((v0.c4)) BETWEEN (((((vt0.c1))=((vt0.c1))))) AND ((CAST(v0.c3 AS TEXT)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((x'' COLLATE BINARY) BETWEEN (((v0.c0)AND(vt0.c1))) AND (0x26db425d COLLATE NOCASE)) WHERE (((((v0.c2))=((v0.c1))) IN ((NOT (v0.c0)), ((v0.c2)IS NOT(v0.c0))))) ORDER BY (((v0.c4)) BETWEEN (((((vt0.c1))==((vt0.c1))))) AND ((CAST(v0.c3 AS TEXT)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2))=((v0.c1))) IN ((NOT (v0.c0)), ((v0.c2)IS NOT(v0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((x'' COLLATE BINARY) BETWEEN (((v0.c0)AND(vt0.c1))) AND (0x26db425d COLLATE NOCASE)) ORDER BY (((v0.c4)) BETWEEN (((((vt0.c1))=((vt0.c1))))) AND ((CAST(v0.c3 AS TEXT)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((x'' COLLATE BINARY) BETWEEN (((v0.c0)AND(vt0.c1))) AND (0x26db425d COLLATE NOCASE)) WHERE (((((v0.c2))=((v0.c1))) IN ((NOT (v0.c0)), ((v0.c2)IS NOT(v0.c0))))) ORDER BY (((v0.c4)) BETWEEN (((((vt0.c1))==((vt0.c1))))) AND ((CAST(v0.c3 AS TEXT)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c3 COLLATE NOCASE)OR(CASE WHEN v0.c3 THEN v0.c2 WHEN NULL THEN v0.c2 WHEN v0.c4 THEN v0.c2 END)))OR(CAST(v0.c0 AS INTEGER)))) ORDER BY (((0.6236013951612318)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c3) NOT NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c3 COLLATE NOCASE)OR(CASE WHEN v0.c3 THEN v0.c2 WHEN NULL THEN v0.c2 WHEN v0.c4 THEN v0.c2 END)))OR(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY (((0.6236013951612318)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c3) NOT NULL)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c3 COLLATE NOCASE)OR(CASE WHEN v0.c3 THEN v0.c2 WHEN NULL THEN v0.c2 WHEN v0.c4 THEN v0.c2 END)))OR(CAST(v0.c0 AS INTEGER)))) ORDER BY (((0.6236013951612318)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c3) NOT NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c3 COLLATE NOCASE)OR(CASE WHEN v0.c3 THEN v0.c2 WHEN NULL THEN v0.c2 WHEN v0.c4 THEN v0.c2 END)))OR(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY (((0.6236013951612318)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c3) NOT NULL)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c3 COLLATE NOCASE)OR(CASE WHEN v0.c3 THEN v0.c2 WHEN NULL THEN v0.c2 WHEN v0.c4 THEN v0.c2 END)))OR(CAST(v0.c0 AS INTEGER)))) ORDER BY (((0.6236013951612318)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c3) NOT NULL)))) DESC  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c1 IN (v0.c3)))LIKE(((v0.c2)<<(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (v0.c3)))LIKE(((v0.c2)<<(v0.c2))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c1 IN (v0.c3)))LIKE(((v0.c2)<<(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (v0.c3)))LIKE(((v0.c2)<<(v0.c2))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c1 IN (v0.c3)))LIKE(((v0.c2)<<(v0.c2)))));
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c0)AND(v0.c1)))AND(v0.c2)) IN ())) ORDER BY -1919657646 DESC  NULLS FIRST, HEX(((v0.c4) IS FALSE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(v0.c1)))AND(v0.c2)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY -1919657646 DESC  NULLS FIRST, HEX(((v0.c4) IS FALSE)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c0)AND(v0.c1)))AND(v0.c2)) IN ())) ORDER BY -1919657646 DESC  NULLS FIRST, HEX(((v0.c4) IS FALSE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(v0.c1)))AND(v0.c2)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY -1919657646 DESC  NULLS FIRST, HEX(((v0.c4) IS FALSE)) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (CAST(((v0.c2) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2) IS FALSE) AS REAL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((v0.c2) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2) IS FALSE) AS REAL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((v0.c2) IS FALSE) AS REAL));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c4 IN (v0.c0)))*(((v0.c2)<>(v0.c2))))) ORDER BY ((((v0.c2) NOTNULL)) IS FALSE) DESC  NULLS LAST, ((((((NULL)IS NOT(v0.c0)))AND((((v0.c1))>((vt0.c1))))))AND((+ (v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c4 IN (v0.c0)))*(((v0.c2)<>(v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c2) NOTNULL)) IS FALSE) DESC  NULLS LAST, ((((((NULL)IS NOT(v0.c0)))AND((((v0.c1))>((vt0.c1))))))AND((+ (v0.c2)))) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c4 IN (v0.c0)))*(((v0.c2)<>(v0.c2))))) ORDER BY ((((v0.c2) NOTNULL)) IS FALSE) DESC  NULLS LAST, ((((((NULL)IS NOT(v0.c0)))AND((((v0.c1))>((vt0.c1))))))AND((+ (v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c4 IN (v0.c0)))*(((v0.c2)<>(v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c2) NOTNULL)) IS FALSE) DESC  NULLS LAST, ((((((NULL)IS NOT(v0.c0)))AND((((v0.c1))>((vt0.c1))))))AND((+ (v0.c2)))) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c4 IN (v0.c0)))*(((v0.c2)<>(v0.c2))))) ORDER BY ((((v0.c2) NOTNULL)) IS FALSE) DESC  NULLS LAST, ((((((NULL)IS NOT(v0.c0)))AND((((v0.c1))>((vt0.c1))))))AND((+ (v0.c2)))) DESC;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) IS TRUE)) ORDER BY ((((vt0.c1)<=(vt0.c0))) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c0 IN ()))), ((vt0.c1)>(vt0.c0)) COLLATE RTRIM, (COALESCE(DISTINCT vt0.c0, vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<=(vt0.c0))) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c0 IN ()))), ((vt0.c1)>(vt0.c0)) COLLATE RTRIM, (COALESCE(DISTINCT vt0.c0, vt0.c0) IN ()));
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) IS TRUE)) ORDER BY ((((vt0.c1)<=(vt0.c0))) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c0 IN ()))), ((vt0.c1)>(vt0.c0)) COLLATE RTRIM, (COALESCE(DISTINCT vt0.c0, vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<=(vt0.c0))) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c0 IN ()))), ((vt0.c1)>(vt0.c0)) COLLATE RTRIM, (COALESCE(DISTINCT vt0.c0, vt0.c0) IN ()));
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) IS TRUE)) ORDER BY ((((vt0.c1)<=(vt0.c0))) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c0 IN ()))), ((vt0.c1)>(vt0.c0)) COLLATE RTRIM, (COALESCE(DISTINCT vt0.c0, vt0.c0) IN ());
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'');
SELECT COUNT(*) FROM v0 WHERE (CAST(((((v0.c3)AND(v0.c2)))OR(v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c3)AND(v0.c2)))OR(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((((v0.c3)AND(v0.c2)))OR(v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c3)AND(v0.c2)))OR(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((((v0.c3)AND(v0.c2)))OR(v0.c0)) AS INTEGER));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (((v0.c0, v0.c1, NULL)) NOT BETWEEN ((vt0.c0, ((vt0.c0)+(v0.c2)), (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c3))))) AND (((((v0.c0, v0.c3, v0.c3)) BETWEEN ((v0.c2, NULL, v0.c0)) AND ((v0.c2, ' }lBa,6', v0.c3))), NULL, v0.c3 COLLATE NOCASE))) WHERE (CAST((- (v0.c2)) AS BLOB)) ORDER BY v0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((- (v0.c2)) AS BLOB)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((v0.c0, v0.c1, NULL)) NOT BETWEEN ((vt0.c0, ((vt0.c0)+(v0.c2)), (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c3))))) AND (((((v0.c0, v0.c3, v0.c3)) BETWEEN ((v0.c2, NULL, v0.c0)) AND ((v0.c2, ' }lBa,6', v0.c3))), NULL, v0.c3 COLLATE NOCASE))) ORDER BY v0.c3 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (((v0.c0, v0.c1, NULL)) NOT BETWEEN ((vt0.c0, ((vt0.c0)+(v0.c2)), (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c3))))) AND (((((v0.c0, v0.c3, v0.c3)) BETWEEN ((v0.c2, NULL, v0.c0)) AND ((v0.c2, ' }lBa,6', v0.c3))), NULL, v0.c3 COLLATE NOCASE))) WHERE (CAST((- (v0.c2)) AS BLOB)) ORDER BY v0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((- (v0.c2)) AS BLOB)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((v0.c0, v0.c1, NULL)) NOT BETWEEN ((vt0.c0, ((vt0.c0)+(v0.c2)), (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c3))))) AND (((((v0.c0, v0.c3, v0.c3)) BETWEEN ((v0.c2, NULL, v0.c0)) AND ((v0.c2, ' }lBa,6', v0.c3))), NULL, v0.c3 COLLATE NOCASE))) ORDER BY v0.c3 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (((v0.c0, v0.c1, NULL)) NOT BETWEEN ((vt0.c0, ((vt0.c0)+(v0.c2)), (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c3))))) AND (((((v0.c0, v0.c3, v0.c3)) BETWEEN ((v0.c2, NULL, v0.c0)) AND ((v0.c2, ' }lBa,6', v0.c3))), NULL, v0.c3 COLLATE NOCASE))) WHERE (CAST((- (v0.c2)) AS BLOB)) ORDER BY v0.c3 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (v0.c2 IN (vt0.c0)) COLLATE BINARY WHERE ((((v0.c0)) NOT BETWEEN ((x'')) AND ((((v0.c0)||(v0.c1)))))) ORDER BY CASE ((vt0.c0)<<(v0.c3))  WHEN ((vt0.c0) IS TRUE) THEN (((v0.c4))<=((vt0.c1))) ELSE v0.c4 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((x'')) AND ((((v0.c0)||(v0.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (v0.c2 IN (vt0.c0)) COLLATE BINARY ORDER BY CASE ((vt0.c0)<<(v0.c3))  WHEN ((vt0.c0) IS TRUE) THEN (((v0.c4))<=((vt0.c1))) ELSE v0.c4 END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (v0.c2 IN (vt0.c0)) COLLATE BINARY WHERE ((((v0.c0)) NOT BETWEEN ((x'')) AND ((((v0.c0)||(v0.c1)))))) ORDER BY CASE ((vt0.c0)<<(v0.c3))  WHEN ((vt0.c0) IS TRUE) THEN (((v0.c4))<=((vt0.c1))) ELSE v0.c4 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((x'')) AND ((((v0.c0)||(v0.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (v0.c2 IN (vt0.c0)) COLLATE BINARY ORDER BY CASE ((vt0.c0)<<(v0.c3))  WHEN ((vt0.c0) IS TRUE) THEN (((v0.c4))<=((vt0.c1))) ELSE v0.c4 END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (v0.c2 IN (vt0.c0)) COLLATE BINARY WHERE ((((v0.c0)) NOT BETWEEN ((x'')) AND ((((v0.c0)||(v0.c1)))))) ORDER BY CASE ((vt0.c0)<<(v0.c3))  WHEN ((vt0.c0) IS TRUE) THEN (((v0.c4))<=((vt0.c1))) ELSE v0.c4 END DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c4)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c4)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c4)) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)+(v0.c2)))%((- (v0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)+(v0.c2)))%((- (v0.c4))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)+(v0.c2)))%((- (v0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)+(v0.c2)))%((- (v0.c4))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)+(v0.c2)))%((- (v0.c4)))));
SELECT ALL * FROM vt0, v0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (NULL COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((((vt0.c0)AND(v0.c0)))AND(v0.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(v0.c0)))AND(v0.c3)) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((((vt0.c0)AND(v0.c0)))AND(v0.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(v0.c0)))AND(v0.c3)) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((((vt0.c0)AND(v0.c0)))AND(v0.c3)) AS REAL));
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c1 END))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c1 END))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c1 END)));
SELECT * FROM vt0 WHERE (((((HEX(vt0.c0))OR((vt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL))))) ORDER BY ((vt0.c1 IN ()) IN (((vt0.c0)LIKE(0.3128420813572421)), '-582099978')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(vt0.c0))OR((vt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 IN ()) IN (((vt0.c0)LIKE(0.3128420813572421)), '-582099978')) ASC);
SELECT * FROM vt0 WHERE (((((HEX(vt0.c0))OR((vt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL))))) ORDER BY ((vt0.c1 IN ()) IN (((vt0.c0)LIKE(0.3128420813572421)), '-582099978')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(vt0.c0))OR((vt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 IN ()) IN (((vt0.c0)LIKE(0.3128420813572421)), '-582099978')) ASC);
SELECT * FROM vt0 WHERE (((((HEX(vt0.c0))OR((vt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL))))) ORDER BY ((vt0.c1 IN ()) IN (((vt0.c0)LIKE(0.3128420813572421)), '-582099978')) ASC;
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN v0.c4 THEN vt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c4 THEN vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN v0.c4 THEN vt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c4 THEN vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN v0.c4 THEN vt0.c1 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ (((v0.c3)LIKE(v0.c1))))) ORDER BY (NULL IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c3)LIKE(v0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (NULL IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ (((v0.c3)LIKE(v0.c1))))) ORDER BY (NULL IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c3)LIKE(v0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (NULL IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ (((v0.c3)LIKE(v0.c1))))) ORDER BY (NULL IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c1) IS TRUE)) ORDER BY CASE (v0.c3 IN (vt0.c0))  WHEN CAST(-6.83083054E8 AS REAL) THEN (v0.c4 IN ()) WHEN (vt0.c1 IN ()) THEN ((v0.c1)OR(v0.c3)) WHEN '0.3142657948264266' THEN ((v0.c3) NOT BETWEEN (v0.c3) AND (v0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS TRUE)) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE (v0.c3 IN (vt0.c0))  WHEN CAST(-6.83083054E8 AS REAL) THEN (v0.c4 IN ()) WHEN (vt0.c1 IN ()) THEN ((v0.c1)OR(v0.c3)) WHEN '0.3142657948264266' THEN ((v0.c3) NOT BETWEEN (v0.c3) AND (v0.c1)) END);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c1) IS TRUE)) ORDER BY CASE (v0.c3 IN (vt0.c0))  WHEN CAST(-6.83083054E8 AS REAL) THEN (v0.c4 IN ()) WHEN (vt0.c1 IN ()) THEN ((v0.c1)OR(v0.c3)) WHEN '0.3142657948264266' THEN ((v0.c3) NOT BETWEEN (v0.c3) AND (v0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS TRUE)) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE (v0.c3 IN (vt0.c0))  WHEN CAST(-6.83083054E8 AS REAL) THEN (v0.c4 IN ()) WHEN (vt0.c1 IN ()) THEN ((v0.c1)OR(v0.c3)) WHEN '0.3142657948264266' THEN ((v0.c3) NOT BETWEEN (v0.c3) AND (v0.c1)) END);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c1) IS TRUE)) ORDER BY CASE (v0.c3 IN (vt0.c0))  WHEN CAST(-6.83083054E8 AS REAL) THEN (v0.c4 IN ()) WHEN (vt0.c1 IN ()) THEN ((v0.c1)OR(v0.c3)) WHEN '0.3142657948264266' THEN ((v0.c3) NOT BETWEEN (v0.c3) AND (v0.c1)) END;
SELECT ALL * FROM v0, vt0 WHERE (((((((vt0.c1)AND(v0.c2)))AND(v0.c2)))AND(((vt0.c0) IS TRUE)))) ORDER BY CASE ((((v0.c0)OR(v0.c1)))OR(v0.c3))  WHEN 0.11977054605684134 THEN (vt0.c0 IN ()) ELSE (((x'', v0.c0, vt0.c1)) BETWEEN ((vt0.c0, 0.11218954870744435, v0.c4)) AND ((v0.c3, v0.c1, NULL))) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(v0.c2)))AND(v0.c2)))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE ((((v0.c0)OR(v0.c1)))OR(v0.c3))  WHEN 0.11977054605684134 THEN (vt0.c0 IN ()) ELSE (((x'', v0.c0, vt0.c1)) BETWEEN ((vt0.c0, 0.11218954870744435, v0.c4)) AND ((v0.c3, v0.c1, NULL))) END);
SELECT ALL * FROM v0, vt0 WHERE (((((((vt0.c1)AND(v0.c2)))AND(v0.c2)))AND(((vt0.c0) IS TRUE)))) ORDER BY CASE ((((v0.c0)OR(v0.c1)))OR(v0.c3))  WHEN 0.11977054605684134 THEN (vt0.c0 IN ()) ELSE (((x'', v0.c0, vt0.c1)) BETWEEN ((vt0.c0, 0.11218954870744435, v0.c4)) AND ((v0.c3, v0.c1, NULL))) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(v0.c2)))AND(v0.c2)))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE ((((v0.c0)OR(v0.c1)))OR(v0.c3))  WHEN 0.11977054605684134 THEN (vt0.c0 IN ()) ELSE (((x'', v0.c0, vt0.c1)) BETWEEN ((vt0.c0, 0.11218954870744435, v0.c4)) AND ((v0.c3, v0.c1, NULL))) END);
SELECT ALL * FROM v0, vt0 WHERE (((((((vt0.c1)AND(v0.c2)))AND(v0.c2)))AND(((vt0.c0) IS TRUE)))) ORDER BY CASE ((((v0.c0)OR(v0.c1)))OR(v0.c3))  WHEN 0.11977054605684134 THEN (vt0.c0 IN ()) ELSE (((x'', v0.c0, vt0.c1)) BETWEEN ((vt0.c0, 0.11218954870744435, v0.c4)) AND ((v0.c3, v0.c1, NULL))) END;
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c4)|(v0.c1))) BETWEEN (v0.c4) AND (((v0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c4)|(v0.c1))) BETWEEN (v0.c4) AND (((v0.c3) NOT NULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c4)|(v0.c1))) BETWEEN (v0.c4) AND (((v0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c4)|(v0.c1))) BETWEEN (v0.c4) AND (((v0.c3) NOT NULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c4)|(v0.c1))) BETWEEN (v0.c4) AND (((v0.c3) NOT NULL))));
SELECT * FROM v0, vt0 WHERE (((((((((((v0.c1) NOT BETWEEN (v0.c4) AND (v0.c3)))OR((~ (v0.c2)))))AND(LOWER(DISTINCT v0.c3))))AND('0.9132175619173165')))AND((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1) NOT BETWEEN (v0.c4) AND (v0.c3)))OR((~ (v0.c2)))))AND(LOWER(DISTINCT v0.c3))))AND('0.9132175619173165')))AND((~ (vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((((((v0.c1) NOT BETWEEN (v0.c4) AND (v0.c3)))OR((~ (v0.c2)))))AND(LOWER(DISTINCT v0.c3))))AND('0.9132175619173165')))AND((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1) NOT BETWEEN (v0.c4) AND (v0.c3)))OR((~ (v0.c2)))))AND(LOWER(DISTINCT v0.c3))))AND('0.9132175619173165')))AND((~ (vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((((((v0.c1) NOT BETWEEN (v0.c4) AND (v0.c3)))OR((~ (v0.c2)))))AND(LOWER(DISTINCT v0.c3))))AND('0.9132175619173165')))AND((~ (vt0.c1)))));
SELECT ALL * FROM v0 WHERE (CAST(v0.c4 AS TEXT) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((((v0.c0)OR(v0.c2)))>>((- (v0.c1)))) ASC  NULLS FIRST, 8.46119916E8 DESC  NULLS LAST, (+ (((v0.c4)IS NOT(v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c4 AS TEXT) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR(v0.c2)))>>((- (v0.c1)))) ASC  NULLS FIRST, 8.46119916E8 DESC  NULLS LAST, (+ (((v0.c4)IS NOT(v0.c1)))) DESC);
SELECT ALL * FROM v0 WHERE (CAST(v0.c4 AS TEXT) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((((v0.c0)OR(v0.c2)))>>((- (v0.c1)))) ASC  NULLS FIRST, 8.46119916E8 DESC  NULLS LAST, (+ (((v0.c4)IS NOT(v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c4 AS TEXT) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR(v0.c2)))>>((- (v0.c1)))) ASC  NULLS FIRST, 8.46119916E8 DESC  NULLS LAST, (+ (((v0.c4)IS NOT(v0.c1)))) DESC);
SELECT ALL * FROM v0 WHERE (CAST(v0.c4 AS TEXT) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((((v0.c0)OR(v0.c2)))>>((- (v0.c1)))) ASC  NULLS FIRST, 8.46119916E8 DESC  NULLS LAST, (+ (((v0.c4)IS NOT(v0.c1)))) DESC;
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)AND(NULL)))OR(v0.c3)))AND(v0.c1)))OR(v0.c1)) COLLATE NOCASE COLLATE BINARY) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)AND(NULL)))OR(v0.c3)))AND(v0.c1)))OR(v0.c1)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY v0.c2);
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)AND(NULL)))OR(v0.c3)))AND(v0.c1)))OR(v0.c1)) COLLATE NOCASE COLLATE BINARY) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)AND(NULL)))OR(v0.c3)))AND(v0.c1)))OR(v0.c1)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY v0.c2);
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)AND(NULL)))OR(v0.c3)))AND(v0.c1)))OR(v0.c1)) COLLATE NOCASE COLLATE BINARY) ORDER BY v0.c2;
SELECT * FROM vt0, v0 WHERE (CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2))  WHEN v0.c1 COLLATE NOCASE THEN NULL ELSE CASE 0.7355955972676428  WHEN v0.c0 THEN v0.c3 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2))  WHEN v0.c1 COLLATE NOCASE THEN NULL ELSE CASE 0.7355955972676428  WHEN v0.c0 THEN v0.c3 END END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2))  WHEN v0.c1 COLLATE NOCASE THEN NULL ELSE CASE 0.7355955972676428  WHEN v0.c0 THEN v0.c3 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2))  WHEN v0.c1 COLLATE NOCASE THEN NULL ELSE CASE 0.7355955972676428  WHEN v0.c0 THEN v0.c3 END END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2))  WHEN v0.c1 COLLATE NOCASE THEN NULL ELSE CASE 0.7355955972676428  WHEN v0.c0 THEN v0.c3 END END);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (((vt0.c0 IN (vt0.c1)) IN (((vt0.c0) IS FALSE)))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c1)) IN (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE (((vt0.c0 IN (vt0.c1)) IN (((vt0.c0) IS FALSE)))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c1)) IN (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE (((vt0.c0 IN (vt0.c1)) IN (((vt0.c0) IS FALSE)))) ORDER BY vt0.c0 ASC;
SELECT * FROM vt0, v0 WHERE (((((CAST(v0.c4 AS TEXT))AND(((((((((v0.c1)OR(v0.c0)))OR(v0.c4)))OR(v0.c4)))AND(v0.c2)))))OR(((((v0.c0)OR(v0.c4)))OR(vt0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c4 AS TEXT))AND(((((((((v0.c1)OR(v0.c0)))OR(v0.c4)))OR(v0.c4)))AND(v0.c2)))))OR(((((v0.c0)OR(v0.c4)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (((((CAST(v0.c4 AS TEXT))AND(((((((((v0.c1)OR(v0.c0)))OR(v0.c4)))OR(v0.c4)))AND(v0.c2)))))OR(((((v0.c0)OR(v0.c4)))OR(vt0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c4 AS TEXT))AND(((((((((v0.c1)OR(v0.c0)))OR(v0.c4)))OR(v0.c4)))AND(v0.c2)))))OR(((((v0.c0)OR(v0.c4)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (((((CAST(v0.c4 AS TEXT))AND(((((((((v0.c1)OR(v0.c0)))OR(v0.c4)))OR(v0.c4)))AND(v0.c2)))))OR(((((v0.c0)OR(v0.c4)))OR(vt0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN MAX(vt0.c0, vt0.c0) THEN x'' ELSE LOWER(vt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN MAX(vt0.c0, vt0.c0) THEN x'' ELSE LOWER(vt0.c1) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN MAX(vt0.c0, vt0.c0) THEN x'' ELSE LOWER(vt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN MAX(vt0.c0, vt0.c0) THEN x'' ELSE LOWER(vt0.c1) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN MAX(vt0.c0, vt0.c0) THEN x'' ELSE LOWER(vt0.c1) END);
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c1))) ORDER BY TRIM(DISTINCT CAST(vt0.c0 AS INTEGER)) ASC, CAST(vt0.c1 AS BLOB) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT CAST(vt0.c0 AS INTEGER)) ASC, CAST(vt0.c1 AS BLOB) COLLATE BINARY ASC);
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c1))) ORDER BY TRIM(DISTINCT CAST(vt0.c0 AS INTEGER)) ASC, CAST(vt0.c1 AS BLOB) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT CAST(vt0.c0 AS INTEGER)) ASC, CAST(vt0.c1 AS BLOB) COLLATE BINARY ASC);
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c1))) ORDER BY TRIM(DISTINCT CAST(vt0.c0 AS INTEGER)) ASC, CAST(vt0.c1 AS BLOB) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((((((vt0.c1) NOT NULL))OR(((((v0.c2)AND(v0.c3)))AND(v0.c1)))))OR(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT NULL))OR(((((v0.c2)AND(v0.c3)))AND(v0.c1)))))OR(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((((((vt0.c1) NOT NULL))OR(((((v0.c2)AND(v0.c3)))AND(v0.c1)))))OR(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT NULL))OR(((((v0.c2)AND(v0.c3)))AND(v0.c1)))))OR(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((((((vt0.c1) NOT NULL))OR(((((v0.c2)AND(v0.c3)))AND(v0.c1)))))OR(((vt0.c1) ISNULL))));
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((v0.c4) IS TRUE) THEN (NOT (v0.c3)) WHEN NULL THEN CASE WHEN v0.c1 THEN v0.c1 ELSE vt0.c0 END WHEN ((v0.c2) BETWEEN (v0.c3) AND ('')) THEN CAST(v0.c2 AS NUMERIC) WHEN CASE vt0.c1  WHEN v0.c4 THEN v0.c2 ELSE v0.c4 END THEN ((v0.c3) ISNULL) WHEN '*Qed}' THEN ((v0.c4) ISNULL) WHEN (vt0.c1 IN ()) THEN vt0.c1 WHEN CASE v0.c3  WHEN v0.c0 THEN 0Xffffffffee544c9e ELSE '' END THEN (v0.c2 IN ()) ELSE json_object(v0.c3, v0.c4) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c4) IS TRUE) THEN (NOT (v0.c3)) WHEN NULL THEN CASE WHEN v0.c1 THEN v0.c1 ELSE vt0.c0 END WHEN ((v0.c2) BETWEEN (v0.c3) AND ('')) THEN CAST(v0.c2 AS NUMERIC) WHEN CASE vt0.c1  WHEN v0.c4 THEN v0.c2 ELSE v0.c4 END THEN ((v0.c3) ISNULL) WHEN '*Qed}' THEN ((v0.c4) ISNULL) WHEN (vt0.c1 IN ()) THEN vt0.c1 WHEN CASE v0.c3  WHEN v0.c0 THEN 0Xffffffffee544c9e ELSE '' END THEN (v0.c2 IN ()) ELSE json_object(v0.c3, v0.c4) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((v0.c4) IS TRUE) THEN (NOT (v0.c3)) WHEN NULL THEN CASE WHEN v0.c1 THEN v0.c1 ELSE vt0.c0 END WHEN ((v0.c2) BETWEEN (v0.c3) AND ('')) THEN CAST(v0.c2 AS NUMERIC) WHEN CASE vt0.c1  WHEN v0.c4 THEN v0.c2 ELSE v0.c4 END THEN ((v0.c3) ISNULL) WHEN '*Qed}' THEN ((v0.c4) ISNULL) WHEN (vt0.c1 IN ()) THEN vt0.c1 WHEN CASE v0.c3  WHEN v0.c0 THEN 0Xffffffffee544c9e ELSE '' END THEN (v0.c2 IN ()) ELSE json_object(v0.c3, v0.c4) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c4) IS TRUE) THEN (NOT (v0.c3)) WHEN NULL THEN CASE WHEN v0.c1 THEN v0.c1 ELSE vt0.c0 END WHEN ((v0.c2) BETWEEN (v0.c3) AND ('')) THEN CAST(v0.c2 AS NUMERIC) WHEN CASE vt0.c1  WHEN v0.c4 THEN v0.c2 ELSE v0.c4 END THEN ((v0.c3) ISNULL) WHEN '*Qed}' THEN ((v0.c4) ISNULL) WHEN (vt0.c1 IN ()) THEN vt0.c1 WHEN CASE v0.c3  WHEN v0.c0 THEN 0Xffffffffee544c9e ELSE '' END THEN (v0.c2 IN ()) ELSE json_object(v0.c3, v0.c4) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((v0.c4) IS TRUE) THEN (NOT (v0.c3)) WHEN NULL THEN CASE WHEN v0.c1 THEN v0.c1 ELSE vt0.c0 END WHEN ((v0.c2) BETWEEN (v0.c3) AND ('')) THEN CAST(v0.c2 AS NUMERIC) WHEN CASE vt0.c1  WHEN v0.c4 THEN v0.c2 ELSE v0.c4 END THEN ((v0.c3) ISNULL) WHEN '*Qed}' THEN ((v0.c4) ISNULL) WHEN (vt0.c1 IN ()) THEN vt0.c1 WHEN CASE v0.c3  WHEN v0.c0 THEN 0Xffffffffee544c9e ELSE '' END THEN (v0.c2 IN ()) ELSE json_object(v0.c3, v0.c4) END);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))<<(HEX(v0.c2))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))<<(HEX(v0.c2)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))<<(HEX(v0.c2))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))<<(HEX(v0.c2)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))<<(HEX(v0.c2))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c3) BETWEEN (NULL) AND (v0.c4)))/((v0.c3 IN ())))) ORDER BY (+ (CASE WHEN v0.c1 THEN vt0.c0 ELSE NULL END));
SELECT SUM(count) FROM (SELECT ((((((v0.c3) BETWEEN (NULL) AND (v0.c4)))/((v0.c3 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (CASE WHEN v0.c1 THEN vt0.c0 ELSE NULL END)));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c3) BETWEEN (NULL) AND (v0.c4)))/((v0.c3 IN ())))) ORDER BY (+ (CASE WHEN v0.c1 THEN vt0.c0 ELSE NULL END));
SELECT SUM(count) FROM (SELECT ((((((v0.c3) BETWEEN (NULL) AND (v0.c4)))/((v0.c3 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (CASE WHEN v0.c1 THEN vt0.c0 ELSE NULL END)));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c3) BETWEEN (NULL) AND (v0.c4)))/((v0.c3 IN ())))) ORDER BY (+ (CASE WHEN v0.c1 THEN vt0.c0 ELSE NULL END));
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)) IN ())) ORDER BY (- (((vt0.c0)%(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)%(vt0.c1)))) DESC);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)) IN ())) ORDER BY (- (((vt0.c0)%(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)%(vt0.c1)))) DESC);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)) IN ())) ORDER BY (- (((vt0.c0)%(vt0.c1)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c3);
SELECT COUNT(*) FROM vt0, v0 WHERE ((('X쭄jɟ+')<<(vt0.c1)) COLLATE NOCASE) ORDER BY (+ ((((v0.c0, vt0.c0, v0.c1)) NOT BETWEEN ((v0.c1, vt0.c0, v0.c2)) AND ((v0.c4, vt0.c0, v0.c4)))))  NULLS FIRST, ((((((v0.c2) BETWEEN (v0.c0) AND (v0.c4)))OR(NULL)))OR((NOT (v0.c0)))) ASC  NULLS LAST, (+ (CAST(v0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((('X쭄jɟ+')<<(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ ((((v0.c0, vt0.c0, v0.c1)) NOT BETWEEN ((v0.c1, vt0.c0, v0.c2)) AND ((v0.c4, vt0.c0, v0.c4)))))  NULLS FIRST, ((((((v0.c2) BETWEEN (v0.c0) AND (v0.c4)))OR(NULL)))OR((NOT (v0.c0)))) ASC  NULLS LAST, (+ (CAST(v0.c1 AS TEXT))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((('X쭄jɟ+')<<(vt0.c1)) COLLATE NOCASE) ORDER BY (+ ((((v0.c0, vt0.c0, v0.c1)) NOT BETWEEN ((v0.c1, vt0.c0, v0.c2)) AND ((v0.c4, vt0.c0, v0.c4)))))  NULLS FIRST, ((((((v0.c2) BETWEEN (v0.c0) AND (v0.c4)))OR(NULL)))OR((NOT (v0.c0)))) ASC  NULLS LAST, (+ (CAST(v0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((('X쭄jɟ+')<<(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ ((((v0.c0, vt0.c0, v0.c1)) NOT BETWEEN ((v0.c1, vt0.c0, v0.c2)) AND ((v0.c4, vt0.c0, v0.c4)))))  NULLS FIRST, ((((((v0.c2) BETWEEN (v0.c0) AND (v0.c4)))OR(NULL)))OR((NOT (v0.c0)))) ASC  NULLS LAST, (+ (CAST(v0.c1 AS TEXT))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((('X쭄jɟ+')<<(vt0.c1)) COLLATE NOCASE) ORDER BY (+ ((((v0.c0, vt0.c0, v0.c1)) NOT BETWEEN ((v0.c1, vt0.c0, v0.c2)) AND ((v0.c4, vt0.c0, v0.c4)))))  NULLS FIRST, ((((((v0.c2) BETWEEN (v0.c0) AND (v0.c4)))OR(NULL)))OR((NOT (v0.c0)))) ASC  NULLS LAST, (+ (CAST(v0.c1 AS TEXT)));
SELECT * FROM v0, vt0 WHERE ((((((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c2)))AND(v0.c1)))OR('')))OR(v0.c4)))AND(vt0.c0)), ((v0.c1)>>(v0.c0)), (((v0.c2, v0.c2, vt0.c0))!=((v0.c3, v0.c0, v0.c1)))))>=((x'cfada319', CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END, COALESCE(DISTINCT v0.c2, vt0.c0))))) ORDER BY ((((CASE WHEN vt0.c1 THEN v0.c4 WHEN NULL THEN v0.c0 WHEN v0.c3 THEN v0.c0 ELSE v0.c2 END)AND(v0.c0 COLLATE NOCASE)))AND(v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c2)))AND(v0.c1)))OR('')))OR(v0.c4)))AND(vt0.c0)), ((v0.c1)>>(v0.c0)), (((v0.c2, v0.c2, vt0.c0))!=((v0.c3, v0.c0, v0.c1)))))>=((x'cfada319', CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END, COALESCE(DISTINCT v0.c2, vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((CASE WHEN vt0.c1 THEN v0.c4 WHEN NULL THEN v0.c0 WHEN v0.c3 THEN v0.c0 ELSE v0.c2 END)AND(v0.c0 COLLATE NOCASE)))AND(v0.c0)) ASC);
SELECT * FROM v0, vt0 WHERE ((((((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c2)))AND(v0.c1)))OR('')))OR(v0.c4)))AND(vt0.c0)), ((v0.c1)>>(v0.c0)), (((v0.c2, v0.c2, vt0.c0))!=((v0.c3, v0.c0, v0.c1)))))>=((x'cfada319', CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END, COALESCE(DISTINCT v0.c2, vt0.c0))))) ORDER BY ((((CASE WHEN vt0.c1 THEN v0.c4 WHEN NULL THEN v0.c0 WHEN v0.c3 THEN v0.c0 ELSE v0.c2 END)AND(v0.c0 COLLATE NOCASE)))AND(v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c2)))AND(v0.c1)))OR('')))OR(v0.c4)))AND(vt0.c0)), ((v0.c1)>>(v0.c0)), (((v0.c2, v0.c2, vt0.c0))!=((v0.c3, v0.c0, v0.c1)))))>=((x'cfada319', CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END, COALESCE(DISTINCT v0.c2, vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((CASE WHEN vt0.c1 THEN v0.c4 WHEN NULL THEN v0.c0 WHEN v0.c3 THEN v0.c0 ELSE v0.c2 END)AND(v0.c0 COLLATE NOCASE)))AND(v0.c0)) ASC);
SELECT * FROM v0, vt0 WHERE ((((((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c2)))AND(v0.c1)))OR('')))OR(v0.c4)))AND(vt0.c0)), ((v0.c1)>>(v0.c0)), (((v0.c2, v0.c2, vt0.c0))!=((v0.c3, v0.c0, v0.c1)))))>=((x'cfada319', CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END, COALESCE(DISTINCT v0.c2, vt0.c0))))) ORDER BY ((((CASE WHEN vt0.c1 THEN v0.c4 WHEN NULL THEN v0.c0 WHEN v0.c3 THEN v0.c0 ELSE v0.c2 END)AND(v0.c0 COLLATE NOCASE)))AND(v0.c0)) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ('<J');
SELECT SUM(count) FROM (SELECT (('<J') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('<J');
SELECT SUM(count) FROM (SELECT (('<J') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('<J');
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON NULL WHERE (COALESCE(vt0.c1, ((((NULL)AND(v0.c1)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(vt0.c1, ((((NULL)AND(v0.c1)))AND(v0.c0)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON NULL);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON NULL WHERE (COALESCE(vt0.c1, ((((NULL)AND(v0.c1)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(vt0.c1, ((((NULL)AND(v0.c1)))AND(v0.c0)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON NULL);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON NULL WHERE (COALESCE(vt0.c1, ((((NULL)AND(v0.c1)))AND(v0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((~ (vt0.c0)) IN ((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c0)) IN ((NOT (vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((~ (vt0.c0)) IN ((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c0)) IN ((NOT (vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((~ (vt0.c0)) IN ((NOT (vt0.c1))));
SELECT ALL * FROM vt0 WHERE (((CASE WHEN x'' THEN 0.43387589443126784 END) NOT BETWEEN (LIKELY(vt0.c1)) AND (CASE WHEN vt0.c1 THEN x'' ELSE vt0.c1 END))) ORDER BY ((((vt0.c0)*(vt0.c0)))IS(vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'' THEN 0.43387589443126784 END) NOT BETWEEN (LIKELY(vt0.c1)) AND (CASE WHEN vt0.c1 THEN x'' ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)*(vt0.c0)))IS(vt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN x'' THEN 0.43387589443126784 END) NOT BETWEEN (LIKELY(vt0.c1)) AND (CASE WHEN vt0.c1 THEN x'' ELSE vt0.c1 END))) ORDER BY ((((vt0.c0)*(vt0.c0)))IS(vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'' THEN 0.43387589443126784 END) NOT BETWEEN (LIKELY(vt0.c1)) AND (CASE WHEN vt0.c1 THEN x'' ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)*(vt0.c0)))IS(vt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN x'' THEN 0.43387589443126784 END) NOT BETWEEN (LIKELY(vt0.c1)) AND (CASE WHEN vt0.c1 THEN x'' ELSE vt0.c1 END))) ORDER BY ((((vt0.c0)*(vt0.c0)))IS(vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((v0.c3)/(v0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c3)/(v0.c0)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c3)/(v0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c3)/(v0.c0)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c3)/(v0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE (x'') ORDER BY ((((((v0.c2) BETWEEN (v0.c0) AND (v0.c4)))AND(((v0.c2)AND(v0.c3)))))OR(((((v0.c0)AND(v0.c2)))AND(v0.c4))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c2) BETWEEN (v0.c0) AND (v0.c4)))AND(((v0.c2)AND(v0.c3)))))OR(((((v0.c0)AND(v0.c2)))AND(v0.c4)))));
SELECT ALL * FROM v0 WHERE (x'') ORDER BY ((((((v0.c2) BETWEEN (v0.c0) AND (v0.c4)))AND(((v0.c2)AND(v0.c3)))))OR(((((v0.c0)AND(v0.c2)))AND(v0.c4))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c2) BETWEEN (v0.c0) AND (v0.c4)))AND(((v0.c2)AND(v0.c3)))))OR(((((v0.c0)AND(v0.c2)))AND(v0.c4)))));
SELECT ALL * FROM v0 WHERE (x'') ORDER BY ((((((v0.c2) BETWEEN (v0.c0) AND (v0.c4)))AND(((v0.c2)AND(v0.c3)))))OR(((((v0.c0)AND(v0.c2)))AND(v0.c4))));
SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND((- (vt0.c0)))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND((- (vt0.c0)))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND((- (vt0.c0)))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND((- (vt0.c0)))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND((- (vt0.c0)))))AND(vt0.c0)));
SELECT COUNT(*) FROM v0 WHERE (CHAR(0.8571040058530166)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((CHAR(0.8571040058530166)) IS TRUE)  as count FROM v0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM v0 WHERE (CHAR(0.8571040058530166)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((CHAR(0.8571040058530166)) IS TRUE)  as count FROM v0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM v0 WHERE (CHAR(0.8571040058530166)) ORDER BY NULL DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE (((NULL) BETWEEN (((v0.c1)%(336202145))) AND (((v0.c2)/(v0.c2))))) ORDER BY '-c\nᛚu뻱' DESC;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((v0.c1)%(336202145))) AND (((v0.c2)/(v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY '-c\nᛚu뻱' DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((NULL) BETWEEN (((v0.c1)%(336202145))) AND (((v0.c2)/(v0.c2))))) ORDER BY '-c\nᛚu뻱' DESC;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((v0.c1)%(336202145))) AND (((v0.c2)/(v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY '-c\nᛚu뻱' DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((NULL) BETWEEN (((v0.c1)%(336202145))) AND (((v0.c2)/(v0.c2))))) ORDER BY '-c\nᛚu뻱' DESC;
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 END IN ())) ORDER BY (vt0.c0 COLLATE NOCASE IN ())  NULLS LAST, (((vt0.c0 IN ())) IS TRUE) ASC  NULLS FIRST, ((x'') ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN vt0.c1 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN ())  NULLS LAST, (((vt0.c0 IN ())) IS TRUE) ASC  NULLS FIRST, ((x'') ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 END IN ())) ORDER BY (vt0.c0 COLLATE NOCASE IN ())  NULLS LAST, (((vt0.c0 IN ())) IS TRUE) ASC  NULLS FIRST, ((x'') ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN vt0.c1 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN ())  NULLS LAST, (((vt0.c0 IN ())) IS TRUE) ASC  NULLS FIRST, ((x'') ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 END IN ())) ORDER BY (vt0.c0 COLLATE NOCASE IN ())  NULLS LAST, (((vt0.c0 IN ())) IS TRUE) ASC  NULLS FIRST, ((x'') ISNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT (CASE WHEN v0.c0 THEN vt0.c1 ELSE v0.c4 END))) ORDER BY (((v0.c2)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c1)))AND(v0.c2)))AND(vt0.c0)))OR(v0.c3)))) AND ((((v0.c2) BETWEEN (v0.c1) AND (v0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN v0.c0 THEN vt0.c1 ELSE v0.c4 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c2)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c1)))AND(v0.c2)))AND(vt0.c0)))OR(v0.c3)))) AND ((((v0.c2) BETWEEN (v0.c1) AND (v0.c3)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT (CASE WHEN v0.c0 THEN vt0.c1 ELSE v0.c4 END))) ORDER BY (((v0.c2)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c1)))AND(v0.c2)))AND(vt0.c0)))OR(v0.c3)))) AND ((((v0.c2) BETWEEN (v0.c1) AND (v0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN v0.c0 THEN vt0.c1 ELSE v0.c4 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c2)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c1)))AND(v0.c2)))AND(vt0.c0)))OR(v0.c3)))) AND ((((v0.c2) BETWEEN (v0.c1) AND (v0.c3)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT (CASE WHEN v0.c0 THEN vt0.c1 ELSE v0.c4 END))) ORDER BY (((v0.c2)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c1)))AND(v0.c2)))AND(vt0.c0)))OR(v0.c3)))) AND ((((v0.c2) BETWEEN (v0.c1) AND (v0.c3)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ((vt0.c1 IN ()), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ((vt0.c1 IN ()), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ((vt0.c1 IN ()), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ((vt0.c1 IN ()), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ((vt0.c1 IN ()), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((v0.c4, v0.c4, v0.c4, v0.c0, vt0.c0))>((v0.c2, v0.c0, v0.c3, v0.c2, vt0.c1)))) NOTNULL)) ORDER BY ((CAST(v0.c3 AS INTEGER)) NOT BETWEEN ((((v0.c4)) BETWEEN ((v0.c0)) AND ((v0.c3)))) AND (((vt0.c1)OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c4, v0.c4, v0.c4, v0.c0, vt0.c0))>((v0.c2, v0.c0, v0.c3, v0.c2, vt0.c1)))) NOTNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(v0.c3 AS INTEGER)) NOT BETWEEN ((((v0.c4)) BETWEEN ((v0.c0)) AND ((v0.c3)))) AND (((vt0.c1)OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((v0.c4, v0.c4, v0.c4, v0.c0, vt0.c0))>((v0.c2, v0.c0, v0.c3, v0.c2, vt0.c1)))) NOTNULL)) ORDER BY ((CAST(v0.c3 AS INTEGER)) NOT BETWEEN ((((v0.c4)) BETWEEN ((v0.c0)) AND ((v0.c3)))) AND (((vt0.c1)OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c4, v0.c4, v0.c4, v0.c0, vt0.c0))>((v0.c2, v0.c0, v0.c3, v0.c2, vt0.c1)))) NOTNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(v0.c3 AS INTEGER)) NOT BETWEEN ((((v0.c4)) BETWEEN ((v0.c0)) AND ((v0.c3)))) AND (((vt0.c1)OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((v0.c4, v0.c4, v0.c4, v0.c0, vt0.c0))>((v0.c2, v0.c0, v0.c3, v0.c2, vt0.c1)))) NOTNULL)) ORDER BY ((CAST(v0.c3 AS INTEGER)) NOT BETWEEN ((((v0.c4)) BETWEEN ((v0.c0)) AND ((v0.c3)))) AND (((vt0.c1)OR(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c3) ORDER BY ((((vt0.c1) NOT BETWEEN (x'0d82') AND (v0.c2))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1) NOT BETWEEN (x'0d82') AND (v0.c2))) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c3) ORDER BY ((((vt0.c1) NOT BETWEEN (x'0d82') AND (v0.c2))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1) NOT BETWEEN (x'0d82') AND (v0.c2))) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c3) ORDER BY ((((vt0.c1) NOT BETWEEN (x'0d82') AND (v0.c2))) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c2)) BETWEEN ((((0.5097319625008284)IS(0.42445728951778816)))) AND ((2115353004)))) ORDER BY (NOT ('-890836712')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((((0.5097319625008284)IS(0.42445728951778816)))) AND ((2115353004)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT ('-890836712')) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c2)) BETWEEN ((((0.5097319625008284)IS(0.42445728951778816)))) AND ((2115353004)))) ORDER BY (NOT ('-890836712')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((((0.5097319625008284)IS(0.42445728951778816)))) AND ((2115353004)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT ('-890836712')) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c2)) BETWEEN ((((0.5097319625008284)IS(0.42445728951778816)))) AND ((2115353004)))) ORDER BY (NOT ('-890836712')) DESC  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (json_type((- (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_type((- (vt0.c1)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (json_type((- (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_type((- (vt0.c1)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (json_type((- (vt0.c1))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((~ (v0.c0)))IS(MIN(x'1579ef69', v0.c2, v0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))IS(MIN(x'1579ef69', v0.c2, v0.c0, vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((~ (v0.c0)))IS(MIN(x'1579ef69', v0.c2, v0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))IS(MIN(x'1579ef69', v0.c2, v0.c0, vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((~ (v0.c0)))IS(MIN(x'1579ef69', v0.c2, v0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM v0 WHERE (STRFTIME(v0.c1, json_valid(v0.c4), '-54982986' COLLATE RTRIM, x'', v0.c4));
SELECT SUM(count) FROM (SELECT ((STRFTIME(v0.c1, json_valid(v0.c4), '-54982986' COLLATE RTRIM, x'', v0.c4)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (STRFTIME(v0.c1, json_valid(v0.c4), '-54982986' COLLATE RTRIM, x'', v0.c4));
SELECT SUM(count) FROM (SELECT ((STRFTIME(v0.c1, json_valid(v0.c4), '-54982986' COLLATE RTRIM, x'', v0.c4)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (STRFTIME(v0.c1, json_valid(v0.c4), '-54982986' COLLATE RTRIM, x'', v0.c4));
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN vt0.c1 COLLATE RTRIM THEN json_insert(v0.c2, '-974905765', v0.c1) ELSE ((vt0.c0) NOT BETWEEN (0.59756181203708) AND (vt0.c0)) END) ORDER BY (((v0.c2 COLLATE NOCASE, v0.c0, ((v0.c1)>(v0.c3)), ((v0.c1)*(v0.c1)), ((vt0.c1) BETWEEN (v0.c4) AND (vt0.c0))))>((((vt0.c0) IS FALSE), ((v0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)), LIKELY(vt0.c0), ((v0.c2)IS NOT(v0.c3)), (((v0.c1))>=((v0.c3))))))  NULLS FIRST, (((-3976363.0)) NOT BETWEEN ((TYPEOF(vt0.c1))) AND ((((v0.c3)||(v0.c1))))), ((vt0.c1)IS(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 COLLATE RTRIM THEN json_insert(v0.c2, '-974905765', v0.c1) ELSE ((vt0.c0) NOT BETWEEN (0.59756181203708) AND (vt0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c2 COLLATE NOCASE, v0.c0, ((v0.c1)>(v0.c3)), ((v0.c1)*(v0.c1)), ((vt0.c1) BETWEEN (v0.c4) AND (vt0.c0))))>((((vt0.c0) IS FALSE), ((v0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)), LIKELY(vt0.c0), ((v0.c2)IS NOT(v0.c3)), (((v0.c1))>=((v0.c3))))))  NULLS FIRST, (((-3976363.0)) NOT BETWEEN ((TYPEOF(vt0.c1))) AND ((((v0.c3)||(v0.c1))))), ((vt0.c1)IS(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN vt0.c1 COLLATE RTRIM THEN json_insert(v0.c2, '-974905765', v0.c1) ELSE ((vt0.c0) NOT BETWEEN (0.59756181203708) AND (vt0.c0)) END) ORDER BY (((v0.c2 COLLATE NOCASE, v0.c0, ((v0.c1)>(v0.c3)), ((v0.c1)*(v0.c1)), ((vt0.c1) BETWEEN (v0.c4) AND (vt0.c0))))>((((vt0.c0) IS FALSE), ((v0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)), LIKELY(vt0.c0), ((v0.c2)IS NOT(v0.c3)), (((v0.c1))>=((v0.c3))))))  NULLS FIRST, (((-3976363.0)) NOT BETWEEN ((TYPEOF(vt0.c1))) AND ((((v0.c3)||(v0.c1))))), ((vt0.c1)IS(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 COLLATE RTRIM THEN json_insert(v0.c2, '-974905765', v0.c1) ELSE ((vt0.c0) NOT BETWEEN (0.59756181203708) AND (vt0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c2 COLLATE NOCASE, v0.c0, ((v0.c1)>(v0.c3)), ((v0.c1)*(v0.c1)), ((vt0.c1) BETWEEN (v0.c4) AND (vt0.c0))))>((((vt0.c0) IS FALSE), ((v0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)), LIKELY(vt0.c0), ((v0.c2)IS NOT(v0.c3)), (((v0.c1))>=((v0.c3))))))  NULLS FIRST, (((-3976363.0)) NOT BETWEEN ((TYPEOF(vt0.c1))) AND ((((v0.c3)||(v0.c1))))), ((vt0.c1)IS(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN vt0.c1 COLLATE RTRIM THEN json_insert(v0.c2, '-974905765', v0.c1) ELSE ((vt0.c0) NOT BETWEEN (0.59756181203708) AND (vt0.c0)) END) ORDER BY (((v0.c2 COLLATE NOCASE, v0.c0, ((v0.c1)>(v0.c3)), ((v0.c1)*(v0.c1)), ((vt0.c1) BETWEEN (v0.c4) AND (vt0.c0))))>((((vt0.c0) IS FALSE), ((v0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)), LIKELY(vt0.c0), ((v0.c2)IS NOT(v0.c3)), (((v0.c1))>=((v0.c3))))))  NULLS FIRST, (((-3976363.0)) NOT BETWEEN ((TYPEOF(vt0.c1))) AND ((((v0.c3)||(v0.c1))))), ((vt0.c1)IS(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ('E<D' COLLATE RTRIM) ORDER BY json_remove(CAST(v0.c0 AS BLOB), (NOT (v0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('E<D' COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY json_remove(CAST(v0.c0 AS BLOB), (NOT (v0.c2))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ('E<D' COLLATE RTRIM) ORDER BY json_remove(CAST(v0.c0 AS BLOB), (NOT (v0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('E<D' COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY json_remove(CAST(v0.c0 AS BLOB), (NOT (v0.c2))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ('E<D' COLLATE RTRIM) ORDER BY json_remove(CAST(v0.c0 AS BLOB), (NOT (v0.c2))) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c3);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'cc94c250');
SELECT SUM(count) FROM (SELECT ((x'cc94c250') IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'cc94c250');
SELECT SUM(count) FROM (SELECT ((x'cc94c250') IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'cc94c250');
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE vt0.c1 COLLATE NOCASE  WHEN (((vt0.c1, v0.c0, '194729306')) NOT BETWEEN ((v0.c3, v0.c4, v0.c3)) AND ((v0.c3, v0.c0, vt0.c1))) THEN ((v0.c3)<(vt0.c0)) WHEN v0.c1 THEN (((v0.c0))!=(('j㰲'))) WHEN ((x'') IS TRUE) THEN CAST(v0.c4 AS INTEGER) ELSE ((vt0.c0)IS(v0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1 COLLATE NOCASE  WHEN (((vt0.c1, v0.c0, '194729306')) NOT BETWEEN ((v0.c3, v0.c4, v0.c3)) AND ((v0.c3, v0.c0, vt0.c1))) THEN ((v0.c3)<(vt0.c0)) WHEN v0.c1 THEN (((v0.c0))!=(('j㰲'))) WHEN ((x'') IS TRUE) THEN CAST(v0.c4 AS INTEGER) ELSE ((vt0.c0)IS(v0.c3)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE vt0.c1 COLLATE NOCASE  WHEN (((vt0.c1, v0.c0, '194729306')) NOT BETWEEN ((v0.c3, v0.c4, v0.c3)) AND ((v0.c3, v0.c0, vt0.c1))) THEN ((v0.c3)<(vt0.c0)) WHEN v0.c1 THEN (((v0.c0))!=(('j㰲'))) WHEN ((x'') IS TRUE) THEN CAST(v0.c4 AS INTEGER) ELSE ((vt0.c0)IS(v0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1 COLLATE NOCASE  WHEN (((vt0.c1, v0.c0, '194729306')) NOT BETWEEN ((v0.c3, v0.c4, v0.c3)) AND ((v0.c3, v0.c0, vt0.c1))) THEN ((v0.c3)<(vt0.c0)) WHEN v0.c1 THEN (((v0.c0))!=(('j㰲'))) WHEN ((x'') IS TRUE) THEN CAST(v0.c4 AS INTEGER) ELSE ((vt0.c0)IS(v0.c3)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE vt0.c1 COLLATE NOCASE  WHEN (((vt0.c1, v0.c0, '194729306')) NOT BETWEEN ((v0.c3, v0.c4, v0.c3)) AND ((v0.c3, v0.c0, vt0.c1))) THEN ((v0.c3)<(vt0.c0)) WHEN v0.c1 THEN (((v0.c0))!=(('j㰲'))) WHEN ((x'') IS TRUE) THEN CAST(v0.c4 AS INTEGER) ELSE ((vt0.c0)IS(v0.c3)) END);
SELECT COUNT(*) FROM vt0 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(NULL AS INTEGER));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c2)OR(v0.c4)))OR(v0.c4)) THEN CAST(v0.c0 AS INTEGER) WHEN (NOT (v0.c4)) THEN ((v0.c4)OR(NULL)) WHEN v0.c2 THEN ((((((((((((v0.c3)OR(v0.c3)))AND(v0.c1)))AND(v0.c4)))OR(v0.c2)))OR(v0.c3)))OR(v0.c4)) ELSE UPPER(DISTINCT v0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((v0.c2)OR(v0.c4)))OR(v0.c4)) THEN CAST(v0.c0 AS INTEGER) WHEN (NOT (v0.c4)) THEN ((v0.c4)OR(NULL)) WHEN v0.c2 THEN ((((((((((((v0.c3)OR(v0.c3)))AND(v0.c1)))AND(v0.c4)))OR(v0.c2)))OR(v0.c3)))OR(v0.c4)) ELSE UPPER(DISTINCT v0.c2) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c2)OR(v0.c4)))OR(v0.c4)) THEN CAST(v0.c0 AS INTEGER) WHEN (NOT (v0.c4)) THEN ((v0.c4)OR(NULL)) WHEN v0.c2 THEN ((((((((((((v0.c3)OR(v0.c3)))AND(v0.c1)))AND(v0.c4)))OR(v0.c2)))OR(v0.c3)))OR(v0.c4)) ELSE UPPER(DISTINCT v0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((v0.c2)OR(v0.c4)))OR(v0.c4)) THEN CAST(v0.c0 AS INTEGER) WHEN (NOT (v0.c4)) THEN ((v0.c4)OR(NULL)) WHEN v0.c2 THEN ((((((((((((v0.c3)OR(v0.c3)))AND(v0.c1)))AND(v0.c4)))OR(v0.c2)))OR(v0.c3)))OR(v0.c4)) ELSE UPPER(DISTINCT v0.c2) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c2)OR(v0.c4)))OR(v0.c4)) THEN CAST(v0.c0 AS INTEGER) WHEN (NOT (v0.c4)) THEN ((v0.c4)OR(NULL)) WHEN v0.c2 THEN ((((((((((((v0.c3)OR(v0.c3)))AND(v0.c1)))AND(v0.c4)))OR(v0.c2)))OR(v0.c3)))OR(v0.c4)) ELSE UPPER(DISTINCT v0.c2) END);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1)>>(-2017638217)) IN ())) ORDER BY ((CASE 0.05551902586539892  WHEN v0.c4 THEN v0.c2 ELSE v0.c1 END) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)>>(-2017638217)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((CASE 0.05551902586539892  WHEN v0.c4 THEN v0.c2 ELSE v0.c1 END) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1)>>(-2017638217)) IN ())) ORDER BY ((CASE 0.05551902586539892  WHEN v0.c4 THEN v0.c2 ELSE v0.c1 END) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)>>(-2017638217)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((CASE 0.05551902586539892  WHEN v0.c4 THEN v0.c2 ELSE v0.c1 END) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1)>>(-2017638217)) IN ())) ORDER BY ((CASE 0.05551902586539892  WHEN v0.c4 THEN v0.c2 ELSE v0.c1 END) NOT NULL) DESC  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (v0.c2);
SELECT * FROM v0 WHERE (v0.c1) ORDER BY ('W緻' IN ()) COLLATE RTRIM  NULLS LAST, (((v0.c0))>((((0.19391769076457532)GLOB(v0.c4))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY ('W緻' IN ()) COLLATE RTRIM  NULLS LAST, (((v0.c0))>((((0.19391769076457532)GLOB(v0.c4))))) DESC);
SELECT * FROM v0 WHERE (v0.c1) ORDER BY ('W緻' IN ()) COLLATE RTRIM  NULLS LAST, (((v0.c0))>((((0.19391769076457532)GLOB(v0.c4))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY ('W緻' IN ()) COLLATE RTRIM  NULLS LAST, (((v0.c0))>((((0.19391769076457532)GLOB(v0.c4))))) DESC);
SELECT * FROM v0 WHERE (v0.c1) ORDER BY ('W緻' IN ()) COLLATE RTRIM  NULLS LAST, (((v0.c0))>((((0.19391769076457532)GLOB(v0.c4))))) DESC;
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT * FROM v0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(CASE vt0.c1  WHEN vt0.c1 THEN v0.c3 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(CASE vt0.c1  WHEN vt0.c1 THEN v0.c3 ELSE v0.c0 END)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(CASE vt0.c1  WHEN vt0.c1 THEN v0.c3 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(CASE vt0.c1  WHEN vt0.c1 THEN v0.c3 ELSE v0.c0 END)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(CASE vt0.c1  WHEN vt0.c1 THEN v0.c3 ELSE v0.c0 END));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c3)<((((v0.c4))>=((v0.c2)))))) ORDER BY x'df25';
SELECT SUM(count) FROM (SELECT ((((v0.c3)<((((v0.c4))>=((v0.c2)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY x'df25');
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c3)<((((v0.c4))>=((v0.c2)))))) ORDER BY x'df25';
SELECT SUM(count) FROM (SELECT ((((v0.c3)<((((v0.c4))>=((v0.c2)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY x'df25');
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c3)<((((v0.c4))>=((v0.c2)))))) ORDER BY x'df25';
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ())) ORDER BY CAST(((vt0.c1)+(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)+(vt0.c0)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ())) ORDER BY CAST(((vt0.c1)+(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)+(vt0.c0)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ())) ORDER BY CAST(((vt0.c1)+(vt0.c0)) AS REAL) DESC;
SELECT * FROM v0 WHERE (IFNULL(DISTINCT ((((v0.c3)AND(0Xed77130)))OR(v0.c2)), ((v0.c2)+(v0.c1)))) ORDER BY ((CASE WHEN v0.c1 THEN v0.c3 ELSE v0.c1 END)||(((v0.c0)<>(v0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((((v0.c3)AND(0xed77130)))OR(v0.c2)), ((v0.c2)+(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c3 ELSE v0.c1 END)||(((v0.c0)<>(v0.c4))))  NULLS FIRST);
SELECT * FROM v0 WHERE (IFNULL(DISTINCT ((((v0.c3)AND(0Xed77130)))OR(v0.c2)), ((v0.c2)+(v0.c1)))) ORDER BY ((CASE WHEN v0.c1 THEN v0.c3 ELSE v0.c1 END)||(((v0.c0)<>(v0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((((v0.c3)AND(0xed77130)))OR(v0.c2)), ((v0.c2)+(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c3 ELSE v0.c1 END)||(((v0.c0)<>(v0.c4))))  NULLS FIRST);
SELECT * FROM v0 WHERE (IFNULL(DISTINCT ((((v0.c3)AND(0Xed77130)))OR(v0.c2)), ((v0.c2)+(v0.c1)))) ORDER BY ((CASE WHEN v0.c1 THEN v0.c3 ELSE v0.c1 END)||(((v0.c0)<>(v0.c4))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((((v0.c4)OR(v0.c0)))AND(vt0.c0)))OR(v0.c1)))AND(v0.c2)) IN ())) ORDER BY (NOT (((v0.c0) BETWEEN (v0.c4) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c4)OR(v0.c0)))AND(vt0.c0)))OR(v0.c1)))AND(v0.c2)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (((v0.c0) BETWEEN (v0.c4) AND (vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((((v0.c4)OR(v0.c0)))AND(vt0.c0)))OR(v0.c1)))AND(v0.c2)) IN ())) ORDER BY (NOT (((v0.c0) BETWEEN (v0.c4) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c4)OR(v0.c0)))AND(vt0.c0)))OR(v0.c1)))AND(v0.c2)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (((v0.c0) BETWEEN (v0.c4) AND (vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((((v0.c4)OR(v0.c0)))AND(vt0.c0)))OR(v0.c1)))AND(v0.c2)) IN ())) ORDER BY (NOT (((v0.c0) BETWEEN (v0.c4) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c2 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c2 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c2 AS INTEGER)) ISNULL));
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c4) ORDER BY HEX(((((((((v0.c3)OR(v0.c0)))AND(v0.c0)))AND(v0.c2)))AND(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM v0, vt0 ORDER BY HEX(((((((((v0.c3)OR(v0.c0)))AND(v0.c0)))AND(v0.c2)))AND(v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c4) ORDER BY HEX(((((((((v0.c3)OR(v0.c0)))AND(v0.c0)))AND(v0.c2)))AND(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM v0, vt0 ORDER BY HEX(((((((((v0.c3)OR(v0.c0)))AND(v0.c0)))AND(v0.c2)))AND(v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c4) ORDER BY HEX(((((((((v0.c3)OR(v0.c0)))AND(v0.c0)))AND(v0.c2)))AND(v0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) IS TRUE));
SELECT * FROM vt0 WHERE (CASE (((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c1, vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c1, vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c1, vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c1, vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c1, vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT * FROM vt0 INNER JOIN v0 ON '1294341558' WHERE ((((vt0.c1, v0.c3, v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c0)))OR(v0.c3)))AND(v0.c4)))AND(v0.c4)), vt0.c0 COLLATE BINARY, ((v0.c4)<<(vt0.c1)))) AND ((v0.c4 COLLATE NOCASE, ((((v0.c2)OR(741818270)))OR(vt0.c1)), ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c4)))))) ORDER BY CASE WHEN TRIM(v0.c3) THEN ((v0.c1) ISNULL) WHEN (vt0.c0 IN (v0.c3)) THEN ROUND(vt0.c1, v0.c0) WHEN ((((v0.c0)OR(v0.c1)))OR(NULL)) THEN (((v0.c3)) BETWEEN ((v0.c1)) AND ((vt0.c1))) ELSE ((v0.c1) NOT NULL) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, v0.c3, v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c0)))OR(v0.c3)))AND(v0.c4)))AND(v0.c4)), vt0.c0 COLLATE BINARY, ((v0.c4)<<(vt0.c1)))) AND ((v0.c4 COLLATE NOCASE, ((((v0.c2)OR(741818270)))OR(vt0.c1)), ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c4)))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON '1294341558' ORDER BY CASE WHEN TRIM(v0.c3) THEN ((v0.c1) ISNULL) WHEN (vt0.c0 IN (v0.c3)) THEN ROUND(vt0.c1, v0.c0) WHEN ((((v0.c0)OR(v0.c1)))OR(NULL)) THEN (((v0.c3)) BETWEEN ((v0.c1)) AND ((vt0.c1))) ELSE ((v0.c1) NOT NULL) END ASC);
SELECT * FROM vt0 INNER JOIN v0 ON '1294341558' WHERE ((((vt0.c1, v0.c3, v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c0)))OR(v0.c3)))AND(v0.c4)))AND(v0.c4)), vt0.c0 COLLATE BINARY, ((v0.c4)<<(vt0.c1)))) AND ((v0.c4 COLLATE NOCASE, ((((v0.c2)OR(741818270)))OR(vt0.c1)), ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c4)))))) ORDER BY CASE WHEN TRIM(v0.c3) THEN ((v0.c1) ISNULL) WHEN (vt0.c0 IN (v0.c3)) THEN ROUND(vt0.c1, v0.c0) WHEN ((((v0.c0)OR(v0.c1)))OR(NULL)) THEN (((v0.c3)) BETWEEN ((v0.c1)) AND ((vt0.c1))) ELSE ((v0.c1) NOT NULL) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, v0.c3, v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c0)))OR(v0.c3)))AND(v0.c4)))AND(v0.c4)), vt0.c0 COLLATE BINARY, ((v0.c4)<<(vt0.c1)))) AND ((v0.c4 COLLATE NOCASE, ((((v0.c2)OR(741818270)))OR(vt0.c1)), ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c4)))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON '1294341558' ORDER BY CASE WHEN TRIM(v0.c3) THEN ((v0.c1) ISNULL) WHEN (vt0.c0 IN (v0.c3)) THEN ROUND(vt0.c1, v0.c0) WHEN ((((v0.c0)OR(v0.c1)))OR(NULL)) THEN (((v0.c3)) BETWEEN ((v0.c1)) AND ((vt0.c1))) ELSE ((v0.c1) NOT NULL) END ASC);
SELECT * FROM vt0 INNER JOIN v0 ON '1294341558' WHERE ((((vt0.c1, v0.c3, v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c0)))OR(v0.c3)))AND(v0.c4)))AND(v0.c4)), vt0.c0 COLLATE BINARY, ((v0.c4)<<(vt0.c1)))) AND ((v0.c4 COLLATE NOCASE, ((((v0.c2)OR(741818270)))OR(vt0.c1)), ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c4)))))) ORDER BY CASE WHEN TRIM(v0.c3) THEN ((v0.c1) ISNULL) WHEN (vt0.c0 IN (v0.c3)) THEN ROUND(vt0.c1, v0.c0) WHEN ((((v0.c0)OR(v0.c1)))OR(NULL)) THEN (((v0.c3)) BETWEEN ((v0.c1)) AND ((vt0.c1))) ELSE ((v0.c1) NOT NULL) END ASC;
SELECT ALL * FROM vt0 WHERE ('197690582') ORDER BY ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))==((vt0.c1 IN (vt0.c0)))) DESC  NULLS LAST, ((((NULL) IS TRUE)) NOTNULL) DESC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM, (((NOT (vt0.c1))) BETWEEN (CAST('dA^^LU4' AS NUMERIC)) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (('197690582') IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))=((vt0.c1 IN (vt0.c0)))) DESC  NULLS LAST, ((((NULL) IS TRUE)) NOTNULL) DESC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM, (((NOT (vt0.c1))) BETWEEN (CAST('dA^^LU4' AS NUMERIC)) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ASC);
SELECT ALL * FROM vt0 WHERE ('197690582') ORDER BY ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))==((vt0.c1 IN (vt0.c0)))) DESC  NULLS LAST, ((((NULL) IS TRUE)) NOTNULL) DESC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM, (((NOT (vt0.c1))) BETWEEN (CAST('dA^^LU4' AS NUMERIC)) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (('197690582') IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))=((vt0.c1 IN (vt0.c0)))) DESC  NULLS LAST, ((((NULL) IS TRUE)) NOTNULL) DESC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM, (((NOT (vt0.c1))) BETWEEN (CAST('dA^^LU4' AS NUMERIC)) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ASC);
SELECT ALL * FROM vt0 WHERE ('197690582') ORDER BY ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))==((vt0.c1 IN (vt0.c0)))) DESC  NULLS LAST, ((((NULL) IS TRUE)) NOTNULL) DESC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM, (((NOT (vt0.c1))) BETWEEN (CAST('dA^^LU4' AS NUMERIC)) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ASC;
SELECT ALL * FROM vt0, v0 WHERE (v0.c3) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (v0.c3) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (v0.c3) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT GLOB(vt0.c0, vt0.c1))) ORDER BY (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(-582099978)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT GLOB(vt0.c0, vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(-582099978)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT GLOB(vt0.c0, vt0.c1))) ORDER BY (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(-582099978)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT GLOB(vt0.c0, vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(-582099978)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT GLOB(vt0.c0, vt0.c1))) ORDER BY (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(-582099978)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c4) AND (v0.c3)))OR(CASE v0.c1  WHEN v0.c2 THEN v0.c3 END)))AND(((v0.c3)<<(v0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT BETWEEN (v0.c4) AND (v0.c3)))OR(CASE v0.c1  WHEN v0.c2 THEN v0.c3 END)))AND(((v0.c3)<<(v0.c4))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c4) AND (v0.c3)))OR(CASE v0.c1  WHEN v0.c2 THEN v0.c3 END)))AND(((v0.c3)<<(v0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT BETWEEN (v0.c4) AND (v0.c3)))OR(CASE v0.c1  WHEN v0.c2 THEN v0.c3 END)))AND(((v0.c3)<<(v0.c4))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c4) AND (v0.c3)))OR(CASE v0.c1  WHEN v0.c2 THEN v0.c3 END)))AND(((v0.c3)<<(v0.c4)))));
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c1 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c1 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c1 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c1 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c1 AS NUMERIC)) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c1, vt0.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c1, vt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c1, vt0.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c1, vt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c1, vt0.c1))) AS NUMERIC));
SELECT COUNT(*) FROM vt0, v0 WHERE (json_patch('', ((v0.c1) NOT BETWEEN (v0.c4) AND (vt0.c0)))) ORDER BY ((CAST(vt0.c0 AS TEXT))<=(v0.c4))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_patch('', ((v0.c1) NOT BETWEEN (v0.c4) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(vt0.c0 AS TEXT))<=(v0.c4))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (json_patch('', ((v0.c1) NOT BETWEEN (v0.c4) AND (vt0.c0)))) ORDER BY ((CAST(vt0.c0 AS TEXT))<=(v0.c4))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_patch('', ((v0.c1) NOT BETWEEN (v0.c4) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(vt0.c0 AS TEXT))<=(v0.c4))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE ((v0.c4)<(v0.c2))  WHEN ((((v0.c1)OR(x'')))OR(vt0.c0)) THEN (v0.c3 IN ()) WHEN ((((v0.c0)AND(vt0.c0)))AND(v0.c1)) THEN ((v0.c1)>>(vt0.c1)) WHEN ((v0.c3) BETWEEN (v0.c3) AND (vt0.c0)) THEN 378881600 ELSE (NOT (v0.c3)) END) ORDER BY ((((((v0.c0)AND(vt0.c0)))OR(vt0.c1)))%(CAST(v0.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c4)<(v0.c2))  WHEN ((((v0.c1)OR(x'')))OR(vt0.c0)) THEN (v0.c3 IN ()) WHEN ((((v0.c0)AND(vt0.c0)))AND(v0.c1)) THEN ((v0.c1)>>(vt0.c1)) WHEN ((v0.c3) BETWEEN (v0.c3) AND (vt0.c0)) THEN 378881600 ELSE (NOT (v0.c3)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c0)AND(vt0.c0)))OR(vt0.c1)))%(CAST(v0.c1 AS REAL))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE ((v0.c4)<(v0.c2))  WHEN ((((v0.c1)OR(x'')))OR(vt0.c0)) THEN (v0.c3 IN ()) WHEN ((((v0.c0)AND(vt0.c0)))AND(v0.c1)) THEN ((v0.c1)>>(vt0.c1)) WHEN ((v0.c3) BETWEEN (v0.c3) AND (vt0.c0)) THEN 378881600 ELSE (NOT (v0.c3)) END) ORDER BY ((((((v0.c0)AND(vt0.c0)))OR(vt0.c1)))%(CAST(v0.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c4)<(v0.c2))  WHEN ((((v0.c1)OR(x'')))OR(vt0.c0)) THEN (v0.c3 IN ()) WHEN ((((v0.c0)AND(vt0.c0)))AND(v0.c1)) THEN ((v0.c1)>>(vt0.c1)) WHEN ((v0.c3) BETWEEN (v0.c3) AND (vt0.c0)) THEN 378881600 ELSE (NOT (v0.c3)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c0)AND(vt0.c0)))OR(vt0.c1)))%(CAST(v0.c1 AS REAL))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE ((v0.c4)<(v0.c2))  WHEN ((((v0.c1)OR(x'')))OR(vt0.c0)) THEN (v0.c3 IN ()) WHEN ((((v0.c0)AND(vt0.c0)))AND(v0.c1)) THEN ((v0.c1)>>(vt0.c1)) WHEN ((v0.c3) BETWEEN (v0.c3) AND (vt0.c0)) THEN 378881600 ELSE (NOT (v0.c3)) END) ORDER BY ((((((v0.c0)AND(vt0.c0)))OR(vt0.c1)))%(CAST(v0.c1 AS REAL))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ('0.19210112789922962');
SELECT SUM(count) FROM (SELECT (('0.19210112789922962') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('0.19210112789922962');
SELECT SUM(count) FROM (SELECT (('0.19210112789922962') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('0.19210112789922962');
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c1) BETWEEN (CAST(NULL AS TEXT)) AND (((x'') ISNULL))) WHERE ((((v0.c1) BETWEEN (v0.c4) AND (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c1) BETWEEN (v0.c4) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c1) BETWEEN (CAST(NULL AS TEXT)) AND (((x'') ISNULL))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c1) BETWEEN (CAST(NULL AS TEXT)) AND (((x'') ISNULL))) WHERE ((((v0.c1) BETWEEN (v0.c4) AND (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c1) BETWEEN (v0.c4) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c1) BETWEEN (CAST(NULL AS TEXT)) AND (((x'') ISNULL))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c1) BETWEEN (CAST(NULL AS TEXT)) AND (((x'') ISNULL))) WHERE ((((v0.c1) BETWEEN (v0.c4) AND (vt0.c1)) IN ()));
SELECT * FROM v0 WHERE (((NULL) BETWEEN (v0.c4) AND (v0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (v0.c4) AND (v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((NULL) BETWEEN (v0.c4) AND (v0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (v0.c4) AND (v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((NULL) BETWEEN (v0.c4) AND (v0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE (json_array((((v0.c1, v0.c0, v0.c2)) BETWEEN ((v0.c0, v0.c1, v0.c1)) AND ((0.43445258154778976, v0.c2, v0.c3))), ((v0.c2) IS TRUE), (('-1991110758')>(0xffffffffa4f6e77d)), ((((v0.c2)OR(v0.c3)))OR(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_array((((v0.c1, v0.c0, v0.c2)) BETWEEN ((v0.c0, v0.c1, v0.c1)) AND ((0.43445258154778976, v0.c2, v0.c3))), ((v0.c2) IS TRUE), (('-1991110758')>(0xffffffffa4f6e77d)), ((((v0.c2)OR(v0.c3)))OR(v0.c2)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (json_array((((v0.c1, v0.c0, v0.c2)) BETWEEN ((v0.c0, v0.c1, v0.c1)) AND ((0.43445258154778976, v0.c2, v0.c3))), ((v0.c2) IS TRUE), (('-1991110758')>(0xffffffffa4f6e77d)), ((((v0.c2)OR(v0.c3)))OR(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_array((((v0.c1, v0.c0, v0.c2)) BETWEEN ((v0.c0, v0.c1, v0.c1)) AND ((0.43445258154778976, v0.c2, v0.c3))), ((v0.c2) IS TRUE), (('-1991110758')>(0xffffffffa4f6e77d)), ((((v0.c2)OR(v0.c3)))OR(v0.c2)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (json_array((((v0.c1, v0.c0, v0.c2)) BETWEEN ((v0.c0, v0.c1, v0.c1)) AND ((0.43445258154778976, v0.c2, v0.c3))), ((v0.c2) IS TRUE), (('-1991110758')>(0xffffffffa4f6e77d)), ((((v0.c2)OR(v0.c3)))OR(v0.c2))));
SELECT * FROM vt0 WHERE (ABS(DISTINCT CAST(vt0.c1 AS NUMERIC))) ORDER BY 0xffffffffc5e41e5b;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT CAST(vt0.c1 AS NUMERIC))) IS TRUE)  as count FROM vt0 ORDER BY 0xffffffffc5e41e5b);
SELECT * FROM vt0 WHERE (ABS(DISTINCT CAST(vt0.c1 AS NUMERIC))) ORDER BY 0xffffffffc5e41e5b;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT CAST(vt0.c1 AS NUMERIC))) IS TRUE)  as count FROM vt0 ORDER BY 0xffffffffc5e41e5b);
SELECT * FROM vt0 WHERE (ABS(DISTINCT CAST(vt0.c1 AS NUMERIC))) ORDER BY 0xffffffffc5e41e5b;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)%(0.2161499344991955)))OR(0.18592244085172382)))AND(NULLIF(vt0.c0, vt0.c1)))) ORDER BY CASE ((vt0.c0)&(vt0.c0))  WHEN ((vt0.c1)<>(vt0.c1)) THEN ((vt0.c0) ISNULL) WHEN (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) THEN (- (vt0.c1)) WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE (((vt0.c1))!=((vt0.c0))) END  NULLS FIRST, CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')))  WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c1, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c1))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)%(0.2161499344991955)))OR(0.18592244085172382)))AND(NULLIF(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)&(vt0.c0))  WHEN ((vt0.c1)!=(vt0.c1)) THEN ((vt0.c0) ISNULL) WHEN (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) THEN (- (vt0.c1)) WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE (((vt0.c1))!=((vt0.c0))) END  NULLS FIRST, CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')))  WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c1, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c1))) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)%(0.2161499344991955)))OR(0.18592244085172382)))AND(NULLIF(vt0.c0, vt0.c1)))) ORDER BY CASE ((vt0.c0)&(vt0.c0))  WHEN ((vt0.c1)<>(vt0.c1)) THEN ((vt0.c0) ISNULL) WHEN (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) THEN (- (vt0.c1)) WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE (((vt0.c1))!=((vt0.c0))) END  NULLS FIRST, CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')))  WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c1, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c1))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)%(0.2161499344991955)))OR(0.18592244085172382)))AND(NULLIF(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)&(vt0.c0))  WHEN ((vt0.c1)!=(vt0.c1)) THEN ((vt0.c0) ISNULL) WHEN (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) THEN (- (vt0.c1)) WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE (((vt0.c1))!=((vt0.c0))) END  NULLS FIRST, CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')))  WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c1, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c1))) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)%(0.2161499344991955)))OR(0.18592244085172382)))AND(NULLIF(vt0.c0, vt0.c1)))) ORDER BY CASE ((vt0.c0)&(vt0.c0))  WHEN ((vt0.c1)<>(vt0.c1)) THEN ((vt0.c0) ISNULL) WHEN (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) THEN (- (vt0.c1)) WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE (((vt0.c1))!=((vt0.c0))) END  NULLS FIRST, CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')))  WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c1, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c1))) END DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c1))>=((vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1))>=((vt0.c1))) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1))>=((vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1))>=((vt0.c1))) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1))>=((vt0.c1))) IN ()));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND('VUT頏DT{^')))OR(NULL)))OR(vt0.c0 COLLATE BINARY))) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND('VUT頏DT{^')))OR(NULL)))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND('VUT頏DT{^')))OR(NULL)))OR(vt0.c0 COLLATE BINARY))) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND('VUT頏DT{^')))OR(NULL)))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND('VUT頏DT{^')))OR(NULL)))OR(vt0.c0 COLLATE BINARY))) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (CASE ((v0.c1) NOT BETWEEN (v0.c4) AND (vt0.c1))  WHEN (v0.c0 IN (v0.c4, v0.c2)) THEN ((((v0.c1)AND(vt0.c1)))OR('>[ss')) WHEN v0.c2 THEN v0.c0 WHEN -1537362535 THEN ((vt0.c1) NOT NULL) ELSE CASE WHEN vt0.c0 THEN v0.c3 WHEN 0.12116901295511417 THEN v0.c3 WHEN v0.c2 THEN vt0.c1 WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((vt0.c0 COLLATE RTRIM)IS NOT(((vt0.c0)|(NULL)))), v0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c1) NOT BETWEEN (v0.c4) AND (vt0.c1))  WHEN (v0.c0 IN (v0.c4, v0.c2)) THEN ((((v0.c1)AND(vt0.c1)))OR('>[ss')) WHEN v0.c2 THEN v0.c0 WHEN -1537362535 THEN ((vt0.c1) NOT NULL) ELSE CASE WHEN vt0.c0 THEN v0.c3 WHEN 0.12116901295511417 THEN v0.c3 WHEN v0.c2 THEN vt0.c1 WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)IS NOT(((vt0.c0)|(NULL)))), v0.c1  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (CASE ((v0.c1) NOT BETWEEN (v0.c4) AND (vt0.c1))  WHEN (v0.c0 IN (v0.c4, v0.c2)) THEN ((((v0.c1)AND(vt0.c1)))OR('>[ss')) WHEN v0.c2 THEN v0.c0 WHEN -1537362535 THEN ((vt0.c1) NOT NULL) ELSE CASE WHEN vt0.c0 THEN v0.c3 WHEN 0.12116901295511417 THEN v0.c3 WHEN v0.c2 THEN vt0.c1 WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((vt0.c0 COLLATE RTRIM)IS NOT(((vt0.c0)|(NULL)))), v0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c1) NOT BETWEEN (v0.c4) AND (vt0.c1))  WHEN (v0.c0 IN (v0.c4, v0.c2)) THEN ((((v0.c1)AND(vt0.c1)))OR('>[ss')) WHEN v0.c2 THEN v0.c0 WHEN -1537362535 THEN ((vt0.c1) NOT NULL) ELSE CASE WHEN vt0.c0 THEN v0.c3 WHEN 0.12116901295511417 THEN v0.c3 WHEN v0.c2 THEN vt0.c1 WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)IS NOT(((vt0.c0)|(NULL)))), v0.c1  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (CASE ((v0.c1) NOT BETWEEN (v0.c4) AND (vt0.c1))  WHEN (v0.c0 IN (v0.c4, v0.c2)) THEN ((((v0.c1)AND(vt0.c1)))OR('>[ss')) WHEN v0.c2 THEN v0.c0 WHEN -1537362535 THEN ((vt0.c1) NOT NULL) ELSE CASE WHEN vt0.c0 THEN v0.c3 WHEN 0.12116901295511417 THEN v0.c3 WHEN v0.c2 THEN vt0.c1 WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((vt0.c0 COLLATE RTRIM)IS NOT(((vt0.c0)|(NULL)))), v0.c1  NULLS FIRST;
SELECT * FROM vt0 WHERE ('') ORDER BY (~ ((((vt0.c0))=((vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 ORDER BY (~ ((((vt0.c0))==((vt0.c1)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ('') ORDER BY (~ ((((vt0.c0))=((vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 ORDER BY (~ ((((vt0.c0))==((vt0.c1)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ('') ORDER BY (~ ((((vt0.c0))=((vt0.c1)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c3)OR(v0.c1)))OR(v0.c4)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c3)OR(v0.c1)))OR(v0.c4)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c3)OR(v0.c1)))OR(v0.c4)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c3)OR(v0.c1)))OR(v0.c4)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c3)OR(v0.c1)))OR(v0.c4)) AS REAL));
SELECT * FROM v0, vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT * FROM v0 WHERE (CAST(CAST(v0.c3 AS INTEGER) AS NUMERIC)) ORDER BY CASE (((v0.c0)) BETWEEN ((v0.c2)) AND ((0.9840516716562161)))  WHEN v0.c3 THEN ((v0.c2)<=(v0.c2)) WHEN (v0.c0 IN (x'')) THEN (('1605297624')LIKE(v0.c1)) WHEN CAST(v0.c4 AS NUMERIC) THEN v0.c1 END ASC, ((((v0.c2)AND(((v0.c0) IS FALSE))))AND(((v0.c0) IS FALSE))), ((v0.c1) BETWEEN (((((((((v0.c0)OR(v0.c3)))OR(v0.c2)))AND(v0.c0)))AND(v0.c4))) AND (UPPER(v0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c3 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CASE (((v0.c0)) BETWEEN ((v0.c2)) AND ((0.9840516716562161)))  WHEN v0.c3 THEN ((v0.c2)<=(v0.c2)) WHEN (v0.c0 IN (x'')) THEN (('1605297624')LIKE(v0.c1)) WHEN CAST(v0.c4 AS NUMERIC) THEN v0.c1 END ASC, ((((v0.c2)AND(((v0.c0) IS FALSE))))AND(((v0.c0) IS FALSE))), ((v0.c1) BETWEEN (((((((((v0.c0)OR(v0.c3)))OR(v0.c2)))AND(v0.c0)))AND(v0.c4))) AND (UPPER(v0.c2))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CAST(CAST(v0.c3 AS INTEGER) AS NUMERIC)) ORDER BY CASE (((v0.c0)) BETWEEN ((v0.c2)) AND ((0.9840516716562161)))  WHEN v0.c3 THEN ((v0.c2)<=(v0.c2)) WHEN (v0.c0 IN (x'')) THEN (('1605297624')LIKE(v0.c1)) WHEN CAST(v0.c4 AS NUMERIC) THEN v0.c1 END ASC, ((((v0.c2)AND(((v0.c0) IS FALSE))))AND(((v0.c0) IS FALSE))), ((v0.c1) BETWEEN (((((((((v0.c0)OR(v0.c3)))OR(v0.c2)))AND(v0.c0)))AND(v0.c4))) AND (UPPER(v0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c3 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CASE (((v0.c0)) BETWEEN ((v0.c2)) AND ((0.9840516716562161)))  WHEN v0.c3 THEN ((v0.c2)<=(v0.c2)) WHEN (v0.c0 IN (x'')) THEN (('1605297624')LIKE(v0.c1)) WHEN CAST(v0.c4 AS NUMERIC) THEN v0.c1 END ASC, ((((v0.c2)AND(((v0.c0) IS FALSE))))AND(((v0.c0) IS FALSE))), ((v0.c1) BETWEEN (((((((((v0.c0)OR(v0.c3)))OR(v0.c2)))AND(v0.c0)))AND(v0.c4))) AND (UPPER(v0.c2))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CAST(CAST(v0.c3 AS INTEGER) AS NUMERIC)) ORDER BY CASE (((v0.c0)) BETWEEN ((v0.c2)) AND ((0.9840516716562161)))  WHEN v0.c3 THEN ((v0.c2)<=(v0.c2)) WHEN (v0.c0 IN (x'')) THEN (('1605297624')LIKE(v0.c1)) WHEN CAST(v0.c4 AS NUMERIC) THEN v0.c1 END ASC, ((((v0.c2)AND(((v0.c0) IS FALSE))))AND(((v0.c0) IS FALSE))), ((v0.c1) BETWEEN (((((((((v0.c0)OR(v0.c3)))OR(v0.c2)))AND(v0.c0)))AND(v0.c4))) AND (UPPER(v0.c2))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2 IN (v0.c4, v0.c2, v0.c0))))<>(((((v0.c1, v0.c0, v0.c2))<=((v0.c1, v0.c4, v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2 IN (v0.c4, v0.c2, v0.c0))))!=(((((v0.c1, v0.c0, v0.c2))<=((v0.c1, v0.c4, v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2 IN (v0.c4, v0.c2, v0.c0))))<>(((((v0.c1, v0.c0, v0.c2))<=((v0.c1, v0.c4, v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2 IN (v0.c4, v0.c2, v0.c0))))!=(((((v0.c1, v0.c0, v0.c2))<=((v0.c1, v0.c4, v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2 IN (v0.c4, v0.c2, v0.c0))))<>(((((v0.c1, v0.c0, v0.c2))<=((v0.c1, v0.c4, v0.c0)))))));
SELECT ALL * FROM v0 WHERE ((+ ((~ (v0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (v0.c4))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((+ ((~ (v0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (v0.c4))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((+ ((~ (v0.c4)))));
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0, v0 WHERE ((NOT (CAST(v0.c3 AS BLOB)))) ORDER BY vt0.c0, (((((((v0.c3)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))OR(v0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c4 THEN v0.c0 ELSE v0.c4 END)) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(v0.c3 AS BLOB)))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0, (((((((v0.c3)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))OR(v0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c4 THEN v0.c0 ELSE v0.c4 END)) DESC);
SELECT ALL * FROM vt0, v0 WHERE ((NOT (CAST(v0.c3 AS BLOB)))) ORDER BY vt0.c0, (((((((v0.c3)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))OR(v0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c4 THEN v0.c0 ELSE v0.c4 END)) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(v0.c3 AS BLOB)))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0, (((((((v0.c3)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))OR(v0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c4 THEN v0.c0 ELSE v0.c4 END)) DESC);
SELECT ALL * FROM vt0, v0 WHERE ((NOT (CAST(v0.c3 AS BLOB)))) ORDER BY vt0.c0, (((((((v0.c3)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))OR(v0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c4 THEN v0.c0 ELSE v0.c4 END)) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER)) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER)) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER)) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (((x'd8da') ISNULL)) AND (CASE WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (((x'd8da') ISNULL)) AND (CASE WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (((x'd8da') ISNULL)) AND (CASE WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (((x'd8da') ISNULL)) AND (CASE WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (((x'd8da') ISNULL)) AND (CASE WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((NOT (v0.c1))))) ORDER BY v0.c0 DESC, ((CAST(v0.c2 AS BLOB)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC, ((CAST(v0.c2 AS BLOB)) IS TRUE));
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((NOT (v0.c1))))) ORDER BY v0.c0 DESC, ((CAST(v0.c2 AS BLOB)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC, ((CAST(v0.c2 AS BLOB)) IS TRUE));
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((NOT (v0.c1))))) ORDER BY v0.c0 DESC, ((CAST(v0.c2 AS BLOB)) IS TRUE);
SELECT ALL * FROM vt0, v0 WHERE (((UNICODE(v0.c2))<(((vt0.c1)-(NULL))))) ORDER BY ((v0.c4 IN (vt0.c0)) IN (((v0.c3) BETWEEN (v0.c0) AND (v0.c2)))), (+ (x'042e')) ASC;
SELECT SUM(count) FROM (SELECT ((((UNICODE(v0.c2))<(((vt0.c1)-(NULL))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c4 IN (vt0.c0)) IN (((v0.c3) BETWEEN (v0.c0) AND (v0.c2)))), (+ (x'042e')) ASC);
SELECT ALL * FROM vt0, v0 WHERE (((UNICODE(v0.c2))<(((vt0.c1)-(NULL))))) ORDER BY ((v0.c4 IN (vt0.c0)) IN (((v0.c3) BETWEEN (v0.c0) AND (v0.c2)))), (+ (x'042e')) ASC;
SELECT SUM(count) FROM (SELECT ((((UNICODE(v0.c2))<(((vt0.c1)-(NULL))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c4 IN (vt0.c0)) IN (((v0.c3) BETWEEN (v0.c0) AND (v0.c2)))), (+ (x'042e')) ASC);
SELECT ALL * FROM vt0, v0 WHERE (((UNICODE(v0.c2))<(((vt0.c1)-(NULL))))) ORDER BY ((v0.c4 IN (vt0.c0)) IN (((v0.c3) BETWEEN (v0.c0) AND (v0.c2)))), (+ (x'042e')) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((NULL)OR(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(vt0.c1 COLLATE BINARY)))OR(UNLIKELY(DISTINCT vt0.c0))))AND((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)OR(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(vt0.c1 COLLATE BINARY)))OR(UNLIKELY(DISTINCT vt0.c0))))AND((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((NULL)OR(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(vt0.c1 COLLATE BINARY)))OR(UNLIKELY(DISTINCT vt0.c0))))AND((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)OR(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(vt0.c1 COLLATE BINARY)))OR(UNLIKELY(DISTINCT vt0.c0))))AND((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((NULL)OR(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(vt0.c1 COLLATE BINARY)))OR(UNLIKELY(DISTINCT vt0.c0))))AND((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c1 COLLATE NOCASE)+(((vt0.c0)+(vt0.c0)))) WHERE (((((((((CAST(0.27471997593548214 AS REAL))OR(((((vt0.c1)AND(v0.c2)))OR(v0.c0)))))OR(((v0.c0)||(v0.c4)))))AND(((v0.c1)%(v0.c1)))))AND(CASE v0.c1  WHEN v0.c0 THEN 357687602 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(0.27471997593548214 AS REAL))OR(((((vt0.c1)AND(v0.c2)))OR(v0.c0)))))OR(((v0.c0)||(v0.c4)))))AND(((v0.c1)%(v0.c1)))))AND(CASE v0.c1  WHEN v0.c0 THEN 357687602 END))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c1 COLLATE NOCASE)+(((vt0.c0)+(vt0.c0)))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c1 COLLATE NOCASE)+(((vt0.c0)+(vt0.c0)))) WHERE (((((((((CAST(0.27471997593548214 AS REAL))OR(((((vt0.c1)AND(v0.c2)))OR(v0.c0)))))OR(((v0.c0)||(v0.c4)))))AND(((v0.c1)%(v0.c1)))))AND(CASE v0.c1  WHEN v0.c0 THEN 357687602 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(0.27471997593548214 AS REAL))OR(((((vt0.c1)AND(v0.c2)))OR(v0.c0)))))OR(((v0.c0)||(v0.c4)))))AND(((v0.c1)%(v0.c1)))))AND(CASE v0.c1  WHEN v0.c0 THEN 357687602 END))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c1 COLLATE NOCASE)+(((vt0.c0)+(vt0.c0)))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c1 COLLATE NOCASE)+(((vt0.c0)+(vt0.c0)))) WHERE (((((((((CAST(0.27471997593548214 AS REAL))OR(((((vt0.c1)AND(v0.c2)))OR(v0.c0)))))OR(((v0.c0)||(v0.c4)))))AND(((v0.c1)%(v0.c1)))))AND(CASE v0.c1  WHEN v0.c0 THEN 357687602 END)));
SELECT ALL * FROM v0 WHERE (IFNULL(DISTINCT CAST(v0.c0 AS REAL), ((('0.3399212584802036', v0.c1, v0.c3)) BETWEEN ((v0.c4, v0.c0, v0.c3)) AND ((v0.c2, v0.c1, v0.c4)))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CAST(v0.c0 AS REAL), ((('0.3399212584802036', v0.c1, v0.c3)) BETWEEN ((v0.c4, v0.c0, v0.c3)) AND ((v0.c2, v0.c1, v0.c4))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (IFNULL(DISTINCT CAST(v0.c0 AS REAL), ((('0.3399212584802036', v0.c1, v0.c3)) BETWEEN ((v0.c4, v0.c0, v0.c3)) AND ((v0.c2, v0.c1, v0.c4)))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CAST(v0.c0 AS REAL), ((('0.3399212584802036', v0.c1, v0.c3)) BETWEEN ((v0.c4, v0.c0, v0.c3)) AND ((v0.c2, v0.c1, v0.c4))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (IFNULL(DISTINCT CAST(v0.c0 AS REAL), ((('0.3399212584802036', v0.c1, v0.c3)) BETWEEN ((v0.c4, v0.c0, v0.c3)) AND ((v0.c2, v0.c1, v0.c4)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0 COLLATE RTRIM)AND((v0.c3 IN ())))) ORDER BY CAST((((vt0.c1)) BETWEEN ((x'')) AND ((vt0.c1))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)AND((v0.c3 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((((vt0.c1)) BETWEEN ((x'')) AND ((vt0.c1))) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0 COLLATE RTRIM)AND((v0.c3 IN ())))) ORDER BY CAST((((vt0.c1)) BETWEEN ((x'')) AND ((vt0.c1))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)AND((v0.c3 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((((vt0.c1)) BETWEEN ((x'')) AND ((vt0.c1))) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0 COLLATE RTRIM)AND((v0.c3 IN ())))) ORDER BY CAST((((vt0.c1)) BETWEEN ((x'')) AND ((vt0.c1))) AS INTEGER);
SELECT COUNT(*) FROM v0, vt0 WHERE ((v0.c0 IN ())) ORDER BY (CASE vt0.c1  WHEN v0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ()) ASC, (((v0.c3)) NOT BETWEEN ((CASE vt0.c1  WHEN v0.c2 THEN vt0.c1 WHEN v0.c2 THEN vt0.c1 WHEN v0.c1 THEN v0.c1 END)) AND (((v0.c2 IN (v0.c1))))) ASC  NULLS LAST, ((((v0.c3))<=((vt0.c1))) IN (CASE WHEN NULL THEN vt0.c0 END, ((v0.c2) NOT NULL))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (v0.c1) AND (v0.c2))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY (CASE vt0.c1  WHEN v0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ()) ASC, (((v0.c3)) NOT BETWEEN ((CASE vt0.c1  WHEN v0.c2 THEN vt0.c1 WHEN v0.c2 THEN vt0.c1 WHEN v0.c1 THEN v0.c1 END)) AND (((v0.c2 IN (v0.c1))))) ASC  NULLS LAST, ((((v0.c3))<=((vt0.c1))) IN (CASE WHEN NULL THEN vt0.c0 END, ((v0.c2) NOT NULL))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (v0.c1) AND (v0.c2))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((v0.c0 IN ())) ORDER BY (CASE vt0.c1  WHEN v0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ()) ASC, (((v0.c3)) NOT BETWEEN ((CASE vt0.c1  WHEN v0.c2 THEN vt0.c1 WHEN v0.c2 THEN vt0.c1 WHEN v0.c1 THEN v0.c1 END)) AND (((v0.c2 IN (v0.c1))))) ASC  NULLS LAST, ((((v0.c3))<=((vt0.c1))) IN (CASE WHEN NULL THEN vt0.c0 END, ((v0.c2) NOT NULL))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (v0.c1) AND (v0.c2))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY (CASE vt0.c1  WHEN v0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ()) ASC, (((v0.c3)) NOT BETWEEN ((CASE vt0.c1  WHEN v0.c2 THEN vt0.c1 WHEN v0.c2 THEN vt0.c1 WHEN v0.c1 THEN v0.c1 END)) AND (((v0.c2 IN (v0.c1))))) ASC  NULLS LAST, ((((v0.c3))<=((vt0.c1))) IN (CASE WHEN NULL THEN vt0.c0 END, ((v0.c2) NOT NULL))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (v0.c1) AND (v0.c2))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((v0.c0 IN ())) ORDER BY (CASE vt0.c1  WHEN v0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ()) ASC, (((v0.c3)) NOT BETWEEN ((CASE vt0.c1  WHEN v0.c2 THEN vt0.c1 WHEN v0.c2 THEN vt0.c1 WHEN v0.c1 THEN v0.c1 END)) AND (((v0.c2 IN (v0.c1))))) ASC  NULLS LAST, ((((v0.c3))<=((vt0.c1))) IN (CASE WHEN NULL THEN vt0.c0 END, ((v0.c2) NOT NULL))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (v0.c1) AND (v0.c2))) IS FALSE)  NULLS FIRST;
SELECT * FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c2, v0.c0, vt0.c0, vt0.c1, v0.c4))<>((vt0.c0, v0.c0, vt0.c1, vt0.c0, vt0.c1)))) ISNULL) WHERE (((CAST(vt0.c1 AS NUMERIC))*('-683083054'))) ORDER BY (NOT (((v0.c0)|(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC))*('-683083054'))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c2, v0.c0, vt0.c0, vt0.c1, v0.c4))<>((vt0.c0, v0.c0, vt0.c1, vt0.c0, vt0.c1)))) ISNULL) ORDER BY (NOT (((v0.c0)|(v0.c2))))  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c2, v0.c0, vt0.c0, vt0.c1, v0.c4))<>((vt0.c0, v0.c0, vt0.c1, vt0.c0, vt0.c1)))) ISNULL) WHERE (((CAST(vt0.c1 AS NUMERIC))*('-683083054'))) ORDER BY (NOT (((v0.c0)|(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC))*('-683083054'))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c2, v0.c0, vt0.c0, vt0.c1, v0.c4))<>((vt0.c0, v0.c0, vt0.c1, vt0.c0, vt0.c1)))) ISNULL) ORDER BY (NOT (((v0.c0)|(v0.c2))))  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c2, v0.c0, vt0.c0, vt0.c1, v0.c4))<>((vt0.c0, v0.c0, vt0.c1, vt0.c0, vt0.c1)))) ISNULL) WHERE (((CAST(vt0.c1 AS NUMERIC))*('-683083054'))) ORDER BY (NOT (((v0.c0)|(v0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((NULLIF(v0.c4, v0.c4), (((v0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), CAST(v0.c3 AS REAL)))>((vt0.c1, (((v0.c4, v0.c1, v0.c1, vt0.c0, v0.c3))>((vt0.c1, v0.c1, v0.c1, '993849623', v0.c4))), LIKELY(vt0.c0))))) ORDER BY CAST(((v0.c3)||(v0.c3)) AS TEXT)  NULLS FIRST, (UNLIKELY('') IN ()), ((((((v0.c3) NOTNULL))AND(((vt0.c1)>(v0.c3)))))AND('0.39024508873180963')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULLIF(v0.c4, v0.c4), (((v0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), CAST(v0.c3 AS REAL)))>((vt0.c1, (((v0.c4, v0.c1, v0.c1, vt0.c0, v0.c3))>((vt0.c1, v0.c1, v0.c1, '993849623', v0.c4))), LIKELY(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((v0.c3)||(v0.c3)) AS TEXT)  NULLS FIRST, (UNLIKELY('') IN ()), ((((((v0.c3) NOTNULL))AND(((vt0.c1)>(v0.c3)))))AND('0.39024508873180963')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((NULLIF(v0.c4, v0.c4), (((v0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), CAST(v0.c3 AS REAL)))>((vt0.c1, (((v0.c4, v0.c1, v0.c1, vt0.c0, v0.c3))>((vt0.c1, v0.c1, v0.c1, '993849623', v0.c4))), LIKELY(vt0.c0))))) ORDER BY CAST(((v0.c3)||(v0.c3)) AS TEXT)  NULLS FIRST, (UNLIKELY('') IN ()), ((((((v0.c3) NOTNULL))AND(((vt0.c1)>(v0.c3)))))AND('0.39024508873180963')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULLIF(v0.c4, v0.c4), (((v0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), CAST(v0.c3 AS REAL)))>((vt0.c1, (((v0.c4, v0.c1, v0.c1, vt0.c0, v0.c3))>((vt0.c1, v0.c1, v0.c1, '993849623', v0.c4))), LIKELY(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((v0.c3)||(v0.c3)) AS TEXT)  NULLS FIRST, (UNLIKELY('') IN ()), ((((((v0.c3) NOTNULL))AND(((vt0.c1)>(v0.c3)))))AND('0.39024508873180963')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((NULLIF(v0.c4, v0.c4), (((v0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), CAST(v0.c3 AS REAL)))>((vt0.c1, (((v0.c4, v0.c1, v0.c1, vt0.c0, v0.c3))>((vt0.c1, v0.c1, v0.c1, '993849623', v0.c4))), LIKELY(vt0.c0))))) ORDER BY CAST(((v0.c3)||(v0.c3)) AS TEXT)  NULLS FIRST, (UNLIKELY('') IN ()), ((((((v0.c3) NOTNULL))AND(((vt0.c1)>(v0.c3)))))AND('0.39024508873180963')) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (0.43983386438278016) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ((0.43983386438278016) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT ALL * FROM v0 WHERE (0.43983386438278016) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ((0.43983386438278016) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT ALL * FROM v0 WHERE (0.43983386438278016) ORDER BY v0.c1;
SELECT ALL COUNT(*) FROM v0 NOT INDEXED CROSS JOIN vt0 ON -2.084641617E9 WHERE (((((v0.c0) BETWEEN (v0.c2) AND (vt0.c1))) BETWEEN ((NOT ('-216708755'))) AND (CASE WHEN v0.c4 THEN v0.c1 END))) ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c1))<((v0.c3))))) AND ((TRIM(v0.c2, v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c2) AND (vt0.c1))) BETWEEN ((NOT ('-216708755'))) AND (CASE WHEN v0.c4 THEN v0.c1 END))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON -2.084641617E9 ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c1))<((v0.c3))))) AND ((TRIM(v0.c2, v0.c2)))) ASC);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED CROSS JOIN vt0 ON -2.084641617E9 WHERE (((((v0.c0) BETWEEN (v0.c2) AND (vt0.c1))) BETWEEN ((NOT ('-216708755'))) AND (CASE WHEN v0.c4 THEN v0.c1 END))) ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c1))<((v0.c3))))) AND ((TRIM(v0.c2, v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c2) AND (vt0.c1))) BETWEEN ((NOT ('-216708755'))) AND (CASE WHEN v0.c4 THEN v0.c1 END))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON -2.084641617E9 ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c1))<((v0.c3))))) AND ((TRIM(v0.c2, v0.c2)))) ASC);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED CROSS JOIN vt0 ON -2.084641617E9 WHERE (((((v0.c0) BETWEEN (v0.c2) AND (vt0.c1))) BETWEEN ((NOT ('-216708755'))) AND (CASE WHEN v0.c4 THEN v0.c1 END))) ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c1))<((v0.c3))))) AND ((TRIM(v0.c2, v0.c2)))) ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((vt0.c1)<(v0.c2)) THEN v0.c1 COLLATE BINARY ELSE json_extract(vt0.c0, vt0.c0) END) ORDER BY ((TRIM(v0.c1))GLOB((NOT (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)<(v0.c2)) THEN v0.c1 COLLATE BINARY ELSE json_extract(vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((TRIM(v0.c1))GLOB((NOT (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((vt0.c1)<(v0.c2)) THEN v0.c1 COLLATE BINARY ELSE json_extract(vt0.c0, vt0.c0) END) ORDER BY ((TRIM(v0.c1))GLOB((NOT (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)<(v0.c2)) THEN v0.c1 COLLATE BINARY ELSE json_extract(vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((TRIM(v0.c1))GLOB((NOT (vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY (((((vt0.c1 IN (vt0.c1)))OR(((vt0.c0) BETWEEN (0.05846831540078368) AND (vt0.c0)))))AND(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1 IN (vt0.c1)))OR(((vt0.c0) BETWEEN (0.05846831540078368) AND (vt0.c0)))))AND(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))));
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY (((((vt0.c1 IN (vt0.c1)))OR(((vt0.c0) BETWEEN (0.05846831540078368) AND (vt0.c0)))))AND(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1 IN (vt0.c1)))OR(((vt0.c0) BETWEEN (0.05846831540078368) AND (vt0.c0)))))AND(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))));
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY (((((vt0.c1 IN (vt0.c1)))OR(((vt0.c0) BETWEEN (0.05846831540078368) AND (vt0.c0)))))AND(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))));
SELECT ALL * FROM v0, vt0 WHERE (((~ ('1119570771')) IN (CAST(v0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((~ ('1119570771')) IN (CAST(v0.c2 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((~ ('1119570771')) IN (CAST(v0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((~ ('1119570771')) IN (CAST(v0.c2 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((~ ('1119570771')) IN (CAST(v0.c2 AS INTEGER))));
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)!=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)!=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)!=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)!=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)!=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((((197690582)AND(vt0.c0)))OR(vt0.c1)) THEN ((vt0.c1)%(v0.c2)) END) ORDER BY 0X2fbda940 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((197690582)AND(vt0.c0)))OR(vt0.c1)) THEN ((vt0.c1)%(v0.c2)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY 0X2fbda940 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((((197690582)AND(vt0.c0)))OR(vt0.c1)) THEN ((vt0.c1)%(v0.c2)) END) ORDER BY 0X2fbda940 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((197690582)AND(vt0.c0)))OR(vt0.c1)) THEN ((vt0.c1)%(v0.c2)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY 0X2fbda940 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c1)|(vt0.c0)))) AND (((((vt0.c1))<=((vt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c1)|(vt0.c0)))) AND (((((vt0.c1))<=((vt0.c1))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c1)|(vt0.c0)))) AND (((((vt0.c1))<=((vt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c1)|(vt0.c0)))) AND (((((vt0.c1))<=((vt0.c1))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c1)|(vt0.c0)))) AND (((((vt0.c1))<=((vt0.c1)))))));
SELECT * FROM v0 WHERE (((0Xffffffffc95b829d)=(((v0.c3)IS NOT(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffc95b829d)==(((v0.c3)IS NOT(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((0Xffffffffc95b829d)=(((v0.c3)IS NOT(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffc95b829d)==(((v0.c3)IS NOT(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((0Xffffffffc95b829d)=(((v0.c3)IS NOT(v0.c1)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)LIKE(v0.c3)))OR(((v0.c1)%('449471778')))))AND(((((v0.c0)AND(vt0.c1)))AND(v0.c2))))) ORDER BY (((v0.c2, v0.c3, v0.c2)) BETWEEN ((CASE v0.c1  WHEN v0.c0 THEN v0.c4 END, (+ (v0.c1)), CASE vt0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END)) AND ((((v0.c1)/(0.3223059193270901)), ((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), ((v0.c0)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)LIKE(v0.c3)))OR(((v0.c1)%('449471778')))))AND(((((v0.c0)AND(vt0.c1)))AND(v0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c2, v0.c3, v0.c2)) BETWEEN ((CASE v0.c1  WHEN v0.c0 THEN v0.c4 END, (+ (v0.c1)), CASE vt0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END)) AND ((((v0.c1)/(0.3223059193270901)), ((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), ((v0.c0)|(v0.c0))))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)LIKE(v0.c3)))OR(((v0.c1)%('449471778')))))AND(((((v0.c0)AND(vt0.c1)))AND(v0.c2))))) ORDER BY (((v0.c2, v0.c3, v0.c2)) BETWEEN ((CASE v0.c1  WHEN v0.c0 THEN v0.c4 END, (+ (v0.c1)), CASE vt0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END)) AND ((((v0.c1)/(0.3223059193270901)), ((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), ((v0.c0)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)LIKE(v0.c3)))OR(((v0.c1)%('449471778')))))AND(((((v0.c0)AND(vt0.c1)))AND(v0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c2, v0.c3, v0.c2)) BETWEEN ((CASE v0.c1  WHEN v0.c0 THEN v0.c4 END, (+ (v0.c1)), CASE vt0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END)) AND ((((v0.c1)/(0.3223059193270901)), ((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), ((v0.c0)|(v0.c0))))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)LIKE(v0.c3)))OR(((v0.c1)%('449471778')))))AND(((((v0.c0)AND(vt0.c1)))AND(v0.c2))))) ORDER BY (((v0.c2, v0.c3, v0.c2)) BETWEEN ((CASE v0.c1  WHEN v0.c0 THEN v0.c4 END, (+ (v0.c1)), CASE vt0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END)) AND ((((v0.c1)/(0.3223059193270901)), ((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), ((v0.c0)|(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c0)+(vt0.c0)) AS NUMERIC)) ORDER BY ((((v0.c3)OR(vt0.c1)))OR(v0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)+(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c3)OR(vt0.c1)))OR(v0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c0)+(vt0.c0)) AS NUMERIC)) ORDER BY ((((v0.c3)OR(vt0.c1)))OR(v0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)+(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c3)OR(vt0.c1)))OR(v0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c0)+(vt0.c0)) AS NUMERIC)) ORDER BY ((((v0.c3)OR(vt0.c1)))OR(v0.c2)) COLLATE BINARY;
SELECT ALL * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c1)) AND (((~ (v0.c2)))))) ORDER BY NULL, v0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c1)) AND (((~ (v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY NULL, v0.c2 ASC);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c1)) AND (((~ (v0.c2)))))) ORDER BY NULL, v0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c1)) AND (((~ (v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY NULL, v0.c2 ASC);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c1)) AND (((~ (v0.c2)))))) ORDER BY NULL, v0.c2 ASC;
SELECT ALL * FROM v0 WHERE ('-425752662');
SELECT SUM(count) FROM (SELECT (('-425752662') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('-425752662');
SELECT SUM(count) FROM (SELECT (('-425752662') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('-425752662');
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c3)%(v0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (((((((((v0.c0)AND(v0.c1)))OR(1.185051773E9)))OR(v0.c1)))AND(v0.c4))))) ORDER BY (((v0.c4, v0.c0, v0.c4))!=((v0.c3, v0.c0, v0.c0))) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c3)%(v0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (((((((((v0.c0)AND(v0.c1)))OR(1.185051773E9)))OR(v0.c1)))AND(v0.c4))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c4, v0.c0, v0.c4))!=((v0.c3, v0.c0, v0.c0))) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c3)%(v0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (((((((((v0.c0)AND(v0.c1)))OR(1.185051773E9)))OR(v0.c1)))AND(v0.c4))))) ORDER BY (((v0.c4, v0.c0, v0.c4))!=((v0.c3, v0.c0, v0.c0))) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c3)%(v0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (((((((((v0.c0)AND(v0.c1)))OR(1.185051773E9)))OR(v0.c1)))AND(v0.c4))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c4, v0.c0, v0.c4))!=((v0.c3, v0.c0, v0.c0))) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c3)%(v0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (((((((((v0.c0)AND(v0.c1)))OR(1.185051773E9)))OR(v0.c1)))AND(v0.c4))))) ORDER BY (((v0.c4, v0.c0, v0.c4))!=((v0.c3, v0.c0, v0.c0))) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY CAST((v0.c2 IN ()) AS NUMERIC), ((v0.c1 COLLATE RTRIM) BETWEEN (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c3))) AND (CAST(v0.c1 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c2 IN ()) AS NUMERIC), ((v0.c1 COLLATE RTRIM) BETWEEN (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c3))) AND (CAST(v0.c1 AS INTEGER))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY CAST((v0.c2 IN ()) AS NUMERIC), ((v0.c1 COLLATE RTRIM) BETWEEN (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c3))) AND (CAST(v0.c1 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c2 IN ()) AS NUMERIC), ((v0.c1 COLLATE RTRIM) BETWEEN (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c3))) AND (CAST(v0.c1 AS INTEGER))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY CAST((v0.c2 IN ()) AS NUMERIC), ((v0.c1 COLLATE RTRIM) BETWEEN (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c3))) AND (CAST(v0.c1 AS INTEGER))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((NOT (v0.c1)))||(((('213369456', '1845389687', v0.c2))>=((v0.c2, v0.c0, v0.c3)))))) ORDER BY CASE (((((((('846119916')AND(v0.c4)))AND(v0.c1)))OR(v0.c4)))OR(v0.c0))  WHEN v0.c4 THEN (v0.c0 IN ()) WHEN x'' THEN UPPER(v0.c3) WHEN v0.c3 THEN (v0.c4 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c1)))||(((('213369456', '1845389687', v0.c2))>=((v0.c2, v0.c0, v0.c3)))))) IS TRUE)  as count FROM v0 ORDER BY CASE (((((((('846119916')AND(v0.c4)))AND(v0.c1)))OR(v0.c4)))OR(v0.c0))  WHEN v0.c4 THEN (v0.c0 IN ()) WHEN x'' THEN UPPER(v0.c3) WHEN v0.c3 THEN (v0.c4 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((NOT (v0.c1)))||(((('213369456', '1845389687', v0.c2))>=((v0.c2, v0.c0, v0.c3)))))) ORDER BY CASE (((((((('846119916')AND(v0.c4)))AND(v0.c1)))OR(v0.c4)))OR(v0.c0))  WHEN v0.c4 THEN (v0.c0 IN ()) WHEN x'' THEN UPPER(v0.c3) WHEN v0.c3 THEN (v0.c4 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c1)))||(((('213369456', '1845389687', v0.c2))>=((v0.c2, v0.c0, v0.c3)))))) IS TRUE)  as count FROM v0 ORDER BY CASE (((((((('846119916')AND(v0.c4)))AND(v0.c1)))OR(v0.c4)))OR(v0.c0))  WHEN v0.c4 THEN (v0.c0 IN ()) WHEN x'' THEN UPPER(v0.c3) WHEN v0.c3 THEN (v0.c4 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((NOT (v0.c1)))||(((('213369456', '1845389687', v0.c2))>=((v0.c2, v0.c0, v0.c3)))))) ORDER BY CASE (((((((('846119916')AND(v0.c4)))AND(v0.c1)))OR(v0.c4)))OR(v0.c0))  WHEN v0.c4 THEN (v0.c0 IN ()) WHEN x'' THEN UPPER(v0.c3) WHEN v0.c3 THEN (v0.c4 IN ()) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)AND(vt0.c1)))%(vt0.c1))) ORDER BY ((vt0.c1)IS(vt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(vt0.c1)))%(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)IS(vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)AND(vt0.c1)))%(vt0.c1))) ORDER BY ((vt0.c1)IS(vt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(vt0.c1)))%(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)IS(vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)AND(vt0.c1)))%(vt0.c1))) ORDER BY ((vt0.c1)IS(vt0.c1)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(-9223372036854775808, CAST(NULL AS INTEGER))) ORDER BY CAST((NOT (vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(-9223372036854775808, CAST(NULL AS INTEGER))) IS TRUE)  as count FROM vt0 ORDER BY CAST((NOT (vt0.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(-9223372036854775808, CAST(NULL AS INTEGER))) ORDER BY CAST((NOT (vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(-9223372036854775808, CAST(NULL AS INTEGER))) IS TRUE)  as count FROM vt0 ORDER BY CAST((NOT (vt0.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(-9223372036854775808, CAST(NULL AS INTEGER))) ORDER BY CAST((NOT (vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('+?]A.Hq' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('+?]A.Hq' COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('+?]A.Hq' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('+?]A.Hq' COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('+?]A.Hq' COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c4 END))<>((((v0.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c4 END))!=((((v0.c1) ISNULL))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c4 END))<>((((v0.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c4 END))!=((((v0.c1) ISNULL))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c4 END))<>((((v0.c1) ISNULL)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c2) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c2) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c2) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((0.8261776708757953 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((0.8261776708757953 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((0.8261776708757953 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((0.8261776708757953 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((0.8261776708757953 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c4)) BETWEEN ((((v0.c2)+(v0.c2)))) AND ((v0.c4))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c4)) BETWEEN ((((v0.c2)+(v0.c2)))) AND ((v0.c4)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c4)) BETWEEN ((((v0.c2)+(v0.c2)))) AND ((v0.c4))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c4)) BETWEEN ((((v0.c2)+(v0.c2)))) AND ((v0.c4)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c4)) BETWEEN ((((v0.c2)+(v0.c2)))) AND ((v0.c4))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0))GLOB((vt0.c1 IN ())))) ORDER BY NULLIF(vt0.c1, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT vt0.c0))GLOB((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(vt0.c1, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END));
SELECT ALL COUNT(*) FROM vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0))GLOB((vt0.c1 IN ())))) ORDER BY NULLIF(vt0.c1, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT vt0.c0))GLOB((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(vt0.c1, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END));
SELECT ALL COUNT(*) FROM vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0))GLOB((vt0.c1 IN ())))) ORDER BY NULLIF(vt0.c1, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END);
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (TYPEOF(v0.c4)))) ORDER BY IFNULL(DISTINCT v0.c0, ((vt0.c1) NOT NULL)) DESC, ((v0.c4)IS(vt0.c1)) COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (TYPEOF(v0.c4)))) IS TRUE)  as count FROM v0, vt0 ORDER BY IFNULL(DISTINCT v0.c0, ((vt0.c1) NOT NULL)) DESC, ((v0.c4)IS(vt0.c1)) COLLATE BINARY COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (TYPEOF(v0.c4)))) ORDER BY IFNULL(DISTINCT v0.c0, ((vt0.c1) NOT NULL)) DESC, ((v0.c4)IS(vt0.c1)) COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (TYPEOF(v0.c4)))) IS TRUE)  as count FROM v0, vt0 ORDER BY IFNULL(DISTINCT v0.c0, ((vt0.c1) NOT NULL)) DESC, ((v0.c4)IS(vt0.c1)) COLLATE BINARY COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (TYPEOF(v0.c4)))) ORDER BY IFNULL(DISTINCT v0.c0, ((vt0.c1) NOT NULL)) DESC, ((v0.c4)IS(vt0.c1)) COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) AND (vt0.c0 COLLATE BINARY)));
SELECT * FROM v0, vt0 WHERE (CASE vt0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CASE vt0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CASE vt0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END COLLATE RTRIM);
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0)=(v0.c4)) COLLATE NOCASE) ORDER BY CAST(((vt0.c1) IS TRUE) AS NUMERIC) DESC, (((8.16551951E8)>=(v0.c4)) IN ()) ASC  NULLS LAST, NULL COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)=(v0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((vt0.c1) IS TRUE) AS NUMERIC) DESC, (((8.16551951E8)>=(v0.c4)) IN ()) ASC  NULLS LAST, NULL COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0)=(v0.c4)) COLLATE NOCASE) ORDER BY CAST(((vt0.c1) IS TRUE) AS NUMERIC) DESC, (((8.16551951E8)>=(v0.c4)) IN ()) ASC  NULLS LAST, NULL COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)=(v0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((vt0.c1) IS TRUE) AS NUMERIC) DESC, (((8.16551951E8)>=(v0.c4)) IN ()) ASC  NULLS LAST, NULL COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0)=(v0.c4)) COLLATE NOCASE) ORDER BY CAST(((vt0.c1) IS TRUE) AS NUMERIC) DESC, (((8.16551951E8)>=(v0.c4)) IN ()) ASC  NULLS LAST, NULL COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c1) NOTNULL)))) ORDER BY CAST(vt0.c1 AS REAL) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS REAL) COLLATE RTRIM COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c1) NOTNULL)))) ORDER BY CAST(vt0.c1 AS REAL) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS REAL) COLLATE RTRIM COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c1) NOTNULL)))) ORDER BY CAST(vt0.c1 AS REAL) COLLATE RTRIM COLLATE BINARY;
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0 IN (v0.c3))) NOT BETWEEN (v0.c1) AND (vt0.c0))) ORDER BY ((((CAST(-1.675919641E9 AS NUMERIC))AND((((v0.c2, v0.c4, NULL))>=((v0.c4, v0.c1, v0.c0))))))OR(((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c3))) NOT BETWEEN (v0.c1) AND (vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((CAST(-1.675919641E9 AS NUMERIC))AND((((v0.c2, v0.c4, NULL))>=((v0.c4, v0.c1, v0.c0))))))OR(((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0 IN (v0.c3))) NOT BETWEEN (v0.c1) AND (vt0.c0))) ORDER BY ((((CAST(-1.675919641E9 AS NUMERIC))AND((((v0.c2, v0.c4, NULL))>=((v0.c4, v0.c1, v0.c0))))))OR(((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c3))) NOT BETWEEN (v0.c1) AND (vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((CAST(-1.675919641E9 AS NUMERIC))AND((((v0.c2, v0.c4, NULL))>=((v0.c4, v0.c1, v0.c0))))))OR(((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0 IN (v0.c3))) NOT BETWEEN (v0.c1) AND (vt0.c0))) ORDER BY ((((CAST(-1.675919641E9 AS NUMERIC))AND((((v0.c2, v0.c4, NULL))>=((v0.c4, v0.c1, v0.c0))))))OR(((vt0.c0) IS FALSE)));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)<(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)<(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)<(vt0.c0))) IS FALSE));
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((CASE vt0.c1  WHEN v0.c2 THEN v0.c4 END) NOT NULL) WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((CASE vt0.c1  WHEN v0.c2 THEN v0.c4 END) NOT NULL));
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((CASE vt0.c1  WHEN v0.c2 THEN v0.c4 END) NOT NULL) WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((CASE vt0.c1  WHEN v0.c2 THEN v0.c4 END) NOT NULL));
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((CASE vt0.c1  WHEN v0.c2 THEN v0.c4 END) NOT NULL) WHERE (v0.c2);
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY ((((v0.c2) IS FALSE))OR(v0.c3)) ASC  NULLS LAST, UNLIKELY(DISTINCT ((((v0.c2)AND(v0.c2)))OR(v0.c2))) ASC  NULLS LAST, CAST((~ (v0.c4)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) IS FALSE))OR(v0.c3)) ASC  NULLS LAST, UNLIKELY(DISTINCT ((((v0.c2)AND(v0.c2)))OR(v0.c2))) ASC  NULLS LAST, CAST((~ (v0.c4)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY ((((v0.c2) IS FALSE))OR(v0.c3)) ASC  NULLS LAST, UNLIKELY(DISTINCT ((((v0.c2)AND(v0.c2)))OR(v0.c2))) ASC  NULLS LAST, CAST((~ (v0.c4)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) IS FALSE))OR(v0.c3)) ASC  NULLS LAST, UNLIKELY(DISTINCT ((((v0.c2)AND(v0.c2)))OR(v0.c2))) ASC  NULLS LAST, CAST((~ (v0.c4)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY ((((v0.c2) IS FALSE))OR(v0.c3)) ASC  NULLS LAST, UNLIKELY(DISTINCT ((((v0.c2)AND(v0.c2)))OR(v0.c2))) ASC  NULLS LAST, CAST((~ (v0.c4)) AS TEXT)  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (((v0.c2) NOT NULL)) ORDER BY ((((((v0.c1)AND(v0.c3)))AND(v0.c1)))/((((v0.c4)) NOT BETWEEN ((v0.c0)) AND ((v0.c4))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c2) NOT NULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c1)AND(v0.c3)))AND(v0.c1)))/((((v0.c4)) NOT BETWEEN ((v0.c0)) AND ((v0.c4))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (((v0.c2) NOT NULL)) ORDER BY ((((((v0.c1)AND(v0.c3)))AND(v0.c1)))/((((v0.c4)) NOT BETWEEN ((v0.c0)) AND ((v0.c4))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c2) NOT NULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c1)AND(v0.c3)))AND(v0.c1)))/((((v0.c4)) NOT BETWEEN ((v0.c0)) AND ((v0.c4))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (((v0.c2) NOT NULL)) ORDER BY ((((((v0.c1)AND(v0.c3)))AND(v0.c1)))/((((v0.c4)) NOT BETWEEN ((v0.c0)) AND ((v0.c4))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((+ (v0.c4)))>=(LAST_INSERT_ROWID())) WHERE (((((v0.c2)>>(v0.c0)))>(v0.c4)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)>>(v0.c0)))>(v0.c4))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((+ (v0.c4)))>=(LAST_INSERT_ROWID())));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((+ (v0.c4)))>=(LAST_INSERT_ROWID())) WHERE (((((v0.c2)>>(v0.c0)))>(v0.c4)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)>>(v0.c0)))>(v0.c4))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((+ (v0.c4)))>=(LAST_INSERT_ROWID())));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((+ (v0.c4)))>=(LAST_INSERT_ROWID())) WHERE (((((v0.c2)>>(v0.c0)))>(v0.c4)));
SELECT ALL * FROM v0 WHERE (HEX(CASE v0.c2  WHEN v0.c0 THEN 'Q᱉0R?)' END)) ORDER BY ((v0.c3) NOT BETWEEN ((~ (v0.c3))) AND (CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST, ((((v0.c1) BETWEEN ('') AND (v0.c1))) BETWEEN ((- (v0.c0))) AND (0X4d98d598)), CASE WHEN NULL COLLATE RTRIM THEN ((v0.c1) NOT NULL) WHEN (NOT (v0.c1)) THEN ((v0.c3) NOTNULL) WHEN LIKELIHOOD(v0.c0, 0.9640500755005271) THEN NULLIF(DISTINCT v0.c3, v0.c2) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(CASE v0.c2  WHEN v0.c0 THEN 'Q᱉0R?)' END)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c3) NOT BETWEEN ((~ (v0.c3))) AND (CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST, ((((v0.c1) BETWEEN ('') AND (v0.c1))) BETWEEN ((- (v0.c0))) AND (0X4d98d598)), CASE WHEN NULL COLLATE RTRIM THEN ((v0.c1) NOT NULL) WHEN (NOT (v0.c1)) THEN ((v0.c3) NOTNULL) WHEN LIKELIHOOD(v0.c0, 0.9640500755005271) THEN NULLIF(DISTINCT v0.c3, v0.c2) END ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (HEX(CASE v0.c2  WHEN v0.c0 THEN 'Q᱉0R?)' END)) ORDER BY ((v0.c3) NOT BETWEEN ((~ (v0.c3))) AND (CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST, ((((v0.c1) BETWEEN ('') AND (v0.c1))) BETWEEN ((- (v0.c0))) AND (0X4d98d598)), CASE WHEN NULL COLLATE RTRIM THEN ((v0.c1) NOT NULL) WHEN (NOT (v0.c1)) THEN ((v0.c3) NOTNULL) WHEN LIKELIHOOD(v0.c0, 0.9640500755005271) THEN NULLIF(DISTINCT v0.c3, v0.c2) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(CASE v0.c2  WHEN v0.c0 THEN 'Q᱉0R?)' END)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c3) NOT BETWEEN ((~ (v0.c3))) AND (CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST, ((((v0.c1) BETWEEN ('') AND (v0.c1))) BETWEEN ((- (v0.c0))) AND (0X4d98d598)), CASE WHEN NULL COLLATE RTRIM THEN ((v0.c1) NOT NULL) WHEN (NOT (v0.c1)) THEN ((v0.c3) NOTNULL) WHEN LIKELIHOOD(v0.c0, 0.9640500755005271) THEN NULLIF(DISTINCT v0.c3, v0.c2) END ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (HEX(CASE v0.c2  WHEN v0.c0 THEN 'Q᱉0R?)' END)) ORDER BY ((v0.c3) NOT BETWEEN ((~ (v0.c3))) AND (CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST, ((((v0.c1) BETWEEN ('') AND (v0.c1))) BETWEEN ((- (v0.c0))) AND (0X4d98d598)), CASE WHEN NULL COLLATE RTRIM THEN ((v0.c1) NOT NULL) WHEN (NOT (v0.c1)) THEN ((v0.c3) NOTNULL) WHEN LIKELIHOOD(v0.c0, 0.9640500755005271) THEN NULLIF(DISTINCT v0.c3, v0.c2) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (((vt0.c1)>=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1)>=(vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (((vt0.c1)>=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1)>=(vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (((vt0.c1)>=(vt0.c1)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((vt0.c0)<=(v0.c4)))OR(CAST(v0.c4 AS BLOB))))OR(((v0.c4)<(v0.c3)))))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c3)))))OR(TRIM(DISTINCT v0.c1, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)<=(v0.c4)))OR(CAST(v0.c4 AS BLOB))))OR(((v0.c4)<(v0.c3)))))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c3)))))OR(TRIM(DISTINCT v0.c1, vt0.c1)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((vt0.c0)<=(v0.c4)))OR(CAST(v0.c4 AS BLOB))))OR(((v0.c4)<(v0.c3)))))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c3)))))OR(TRIM(DISTINCT v0.c1, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)<=(v0.c4)))OR(CAST(v0.c4 AS BLOB))))OR(((v0.c4)<(v0.c3)))))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c3)))))OR(TRIM(DISTINCT v0.c1, vt0.c1)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((vt0.c0)<=(v0.c4)))OR(CAST(v0.c4 AS BLOB))))OR(((v0.c4)<(v0.c3)))))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c3)))))OR(TRIM(DISTINCT v0.c1, vt0.c1))));
SELECT * FROM vt0, v0 WHERE (((UNLIKELY(vt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((UNLIKELY(vt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((UNLIKELY(vt0.c0)) IS TRUE));
SELECT * FROM vt0, v0 WHERE (CASE CAST(v0.c2 AS NUMERIC)  WHEN ((((vt0.c1)AND(vt0.c0)))AND(v0.c3)) THEN v0.c1 ELSE ((((vt0.c0)AND(v0.c3)))OR(v0.c2)) END) ORDER BY '?}ayL-';
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c2 AS NUMERIC)  WHEN ((((vt0.c1)AND(vt0.c0)))AND(v0.c3)) THEN v0.c1 ELSE ((((vt0.c0)AND(v0.c3)))OR(v0.c2)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY '?}ayL-');
SELECT * FROM vt0, v0 WHERE (CASE CAST(v0.c2 AS NUMERIC)  WHEN ((((vt0.c1)AND(vt0.c0)))AND(v0.c3)) THEN v0.c1 ELSE ((((vt0.c0)AND(v0.c3)))OR(v0.c2)) END) ORDER BY '?}ayL-';
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c2 AS NUMERIC)  WHEN ((((vt0.c1)AND(vt0.c0)))AND(v0.c3)) THEN v0.c1 ELSE ((((vt0.c0)AND(v0.c3)))OR(v0.c2)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY '?}ayL-');
SELECT * FROM vt0, v0 WHERE (CASE CAST(v0.c2 AS NUMERIC)  WHEN ((((vt0.c1)AND(vt0.c0)))AND(v0.c3)) THEN v0.c1 ELSE ((((vt0.c0)AND(v0.c3)))OR(v0.c2)) END) ORDER BY '?}ayL-';
SELECT ALL * FROM vt0 WHERE (CAST(UPPER(vt0.c1) AS REAL)) ORDER BY (~ (vt0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(vt0.c1) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c1 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(UPPER(vt0.c1) AS REAL)) ORDER BY (~ (vt0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(vt0.c1) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c1 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(UPPER(vt0.c1) AS REAL)) ORDER BY (~ (vt0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((NOT ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT ((NOT (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((0.7429412335731415) ISNULL)) ORDER BY vt0.c0  NULLS FIRST, ((((vt0.c1))!=((vt0.c1))) IN ());
SELECT SUM(count) FROM (SELECT ((((0.7429412335731415) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, ((((vt0.c1))!=((vt0.c1))) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((0.7429412335731415) ISNULL)) ORDER BY vt0.c0  NULLS FIRST, ((((vt0.c1))!=((vt0.c1))) IN ());
SELECT SUM(count) FROM (SELECT ((((0.7429412335731415) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, ((((vt0.c1))!=((vt0.c1))) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((0.7429412335731415) ISNULL)) ORDER BY vt0.c0  NULLS FIRST, ((((vt0.c1))!=((vt0.c1))) IN ());
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((('!u'))>((v0.c1))) THEN (((v0.c2))<=((v0.c3))) WHEN (v0.c1 IN ()) THEN IFNULL(DISTINCT v0.c3, v0.c0) WHEN ((((NULL)AND(v0.c0)))OR(v0.c4)) THEN (+ (v0.c2)) ELSE (((v0.c2, v0.c2, v0.c2)) NOT BETWEEN ((v0.c4, v0.c4, v0.c4)) AND ((v0.c2, v0.c2, v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((('!u'))>((v0.c1))) THEN (((v0.c2))<=((v0.c3))) WHEN (v0.c1 IN ()) THEN IFNULL(DISTINCT v0.c3, v0.c0) WHEN ((((NULL)AND(v0.c0)))OR(v0.c4)) THEN (+ (v0.c2)) ELSE (((v0.c2, v0.c2, v0.c2)) NOT BETWEEN ((v0.c4, v0.c4, v0.c4)) AND ((v0.c2, v0.c2, v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((('!u'))>((v0.c1))) THEN (((v0.c2))<=((v0.c3))) WHEN (v0.c1 IN ()) THEN IFNULL(DISTINCT v0.c3, v0.c0) WHEN ((((NULL)AND(v0.c0)))OR(v0.c4)) THEN (+ (v0.c2)) ELSE (((v0.c2, v0.c2, v0.c2)) NOT BETWEEN ((v0.c4, v0.c4, v0.c4)) AND ((v0.c2, v0.c2, v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((('!u'))>((v0.c1))) THEN (((v0.c2))<=((v0.c3))) WHEN (v0.c1 IN ()) THEN IFNULL(DISTINCT v0.c3, v0.c0) WHEN ((((NULL)AND(v0.c0)))OR(v0.c4)) THEN (+ (v0.c2)) ELSE (((v0.c2, v0.c2, v0.c2)) NOT BETWEEN ((v0.c4, v0.c4, v0.c4)) AND ((v0.c2, v0.c2, v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((('!u'))>((v0.c1))) THEN (((v0.c2))<=((v0.c3))) WHEN (v0.c1 IN ()) THEN IFNULL(DISTINCT v0.c3, v0.c0) WHEN ((((NULL)AND(v0.c0)))OR(v0.c4)) THEN (+ (v0.c2)) ELSE (((v0.c2, v0.c2, v0.c2)) NOT BETWEEN ((v0.c4, v0.c4, v0.c4)) AND ((v0.c2, v0.c2, v0.c0))) END);
SELECT COUNT(*) FROM v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (NULL);
SELECT COUNT(*) FROM v0, vt0 WHERE (((-1.375547403E9)>(((v0.c0)||(vt0.c1))))) ORDER BY ((((v0.c2)-(vt0.c1)))LIKE(((((v0.c4)OR(v0.c4)))AND(vt0.c1)))) DESC  NULLS FIRST, CAST(COALESCE(v0.c4, v0.c3) AS NUMERIC)  NULLS FIRST, ((((((((UNLIKELY(vt0.c0))OR((~ (v0.c4)))))AND((v0.c0 IN ()))))AND(v0.c0)))OR(((v0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((-1.375547403E9)>(((v0.c0)||(vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c2)-(vt0.c1)))LIKE(((((v0.c4)OR(v0.c4)))AND(vt0.c1)))) DESC  NULLS FIRST, CAST(COALESCE(v0.c4, v0.c3) AS NUMERIC)  NULLS FIRST, ((((((((UNLIKELY(vt0.c0))OR((~ (v0.c4)))))AND((v0.c0 IN ()))))AND(v0.c0)))OR(((v0.c0) NOTNULL))) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((-1.375547403E9)>(((v0.c0)||(vt0.c1))))) ORDER BY ((((v0.c2)-(vt0.c1)))LIKE(((((v0.c4)OR(v0.c4)))AND(vt0.c1)))) DESC  NULLS FIRST, CAST(COALESCE(v0.c4, v0.c3) AS NUMERIC)  NULLS FIRST, ((((((((UNLIKELY(vt0.c0))OR((~ (v0.c4)))))AND((v0.c0 IN ()))))AND(v0.c0)))OR(((v0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((-1.375547403E9)>(((v0.c0)||(vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c2)-(vt0.c1)))LIKE(((((v0.c4)OR(v0.c4)))AND(vt0.c1)))) DESC  NULLS FIRST, CAST(COALESCE(v0.c4, v0.c3) AS NUMERIC)  NULLS FIRST, ((((((((UNLIKELY(vt0.c0))OR((~ (v0.c4)))))AND((v0.c0 IN ()))))AND(v0.c0)))OR(((v0.c0) NOTNULL))) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((-1.375547403E9)>(((v0.c0)||(vt0.c1))))) ORDER BY ((((v0.c2)-(vt0.c1)))LIKE(((((v0.c4)OR(v0.c4)))AND(vt0.c1)))) DESC  NULLS FIRST, CAST(COALESCE(v0.c4, v0.c3) AS NUMERIC)  NULLS FIRST, ((((((((UNLIKELY(vt0.c0))OR((~ (v0.c4)))))AND((v0.c0 IN ()))))AND(v0.c0)))OR(((v0.c0) NOTNULL))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)>(v0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>(v0.c3))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)>(v0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>(v0.c3))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)>(v0.c3))) IS TRUE));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1) IS FALSE) IN (CAST(v0.c0 AS REAL), (- (vt0.c1))))) ORDER BY CAST(v0.c0 AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) IS FALSE) IN (CAST(v0.c0 AS REAL), (- (vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(v0.c0 AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1) IS FALSE) IN (CAST(v0.c0 AS REAL), (- (vt0.c1))))) ORDER BY CAST(v0.c0 AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) IS FALSE) IN (CAST(v0.c0 AS REAL), (- (vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(v0.c0 AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1) IS FALSE) IN (CAST(v0.c0 AS REAL), (- (vt0.c1))))) ORDER BY CAST(v0.c0 AS TEXT) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c3)) NOT BETWEEN ((v0.c4)) AND ((v0.c3)))))>((CAST(v0.c4 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c3)) NOT BETWEEN ((v0.c4)) AND ((v0.c3)))))>((CAST(v0.c4 AS TEXT))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c3)) NOT BETWEEN ((v0.c4)) AND ((v0.c3)))))>((CAST(v0.c4 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c3)) NOT BETWEEN ((v0.c4)) AND ((v0.c3)))))>((CAST(v0.c4 AS TEXT))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c3)) NOT BETWEEN ((v0.c4)) AND ((v0.c3)))))>((CAST(v0.c4 AS TEXT)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((~ (vt0.c1))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c1))) IS FALSE) DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((~ (vt0.c1))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c1))) IS FALSE) DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((~ (vt0.c1))) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((v0.c3 IN (vt0.c0))) BETWEEN (((vt0.c1) IS FALSE)) AND (v0.c2 COLLATE BINARY)) WHERE ((NOT (((((vt0.c1)AND(v0.c1)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt0.c1)AND(v0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((v0.c3 IN (vt0.c0))) BETWEEN (((vt0.c1) IS FALSE)) AND (v0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((v0.c3 IN (vt0.c0))) BETWEEN (((vt0.c1) IS FALSE)) AND (v0.c2 COLLATE BINARY)) WHERE ((NOT (((((vt0.c1)AND(v0.c1)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt0.c1)AND(v0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((v0.c3 IN (vt0.c0))) BETWEEN (((vt0.c1) IS FALSE)) AND (v0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((v0.c3 IN (vt0.c0))) BETWEEN (((vt0.c1) IS FALSE)) AND (v0.c2 COLLATE BINARY)) WHERE ((NOT (((((vt0.c1)AND(v0.c1)))OR(v0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON 0.8875354880106856 WHERE (CAST((vt0.c1 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON 0.8875354880106856);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON 0.8875354880106856 WHERE (CAST((vt0.c1 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON 0.8875354880106856);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON 0.8875354880106856 WHERE (CAST((vt0.c1 IN ()) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c1, v0.c2, v0.c3)) BETWEEN (((- (vt0.c0)), ((((vt0.c1)AND(vt0.c0)))AND(v0.c3)), ((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))) AND ((((vt0.c0) ISNULL), 0.8879675708735638, ((v0.c0) NOT BETWEEN (x'79f5') AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, v0.c2, v0.c3)) BETWEEN (((- (vt0.c0)), ((((vt0.c1)AND(vt0.c0)))AND(v0.c3)), ((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))) AND ((((vt0.c0) ISNULL), 0.8879675708735638, ((v0.c0) NOT BETWEEN (x'79f5') AND (vt0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c1, v0.c2, v0.c3)) BETWEEN (((- (vt0.c0)), ((((vt0.c1)AND(vt0.c0)))AND(v0.c3)), ((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))) AND ((((vt0.c0) ISNULL), 0.8879675708735638, ((v0.c0) NOT BETWEEN (x'79f5') AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, v0.c2, v0.c3)) BETWEEN (((- (vt0.c0)), ((((vt0.c1)AND(vt0.c0)))AND(v0.c3)), ((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))) AND ((((vt0.c0) ISNULL), 0.8879675708735638, ((v0.c0) NOT BETWEEN (x'79f5') AND (vt0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c1, v0.c2, v0.c3)) BETWEEN (((- (vt0.c0)), ((((vt0.c1)AND(vt0.c0)))AND(v0.c3)), ((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))) AND ((((vt0.c0) ISNULL), 0.8879675708735638, ((v0.c0) NOT BETWEEN (x'79f5') AND (vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0)|(vt0.c1)) COLLATE NOCASE) ORDER BY CAST((NOT (v0.c3)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)|(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((NOT (v0.c3)) AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0)|(vt0.c1)) COLLATE NOCASE) ORDER BY CAST((NOT (v0.c3)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)|(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((NOT (v0.c3)) AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0)|(vt0.c1)) COLLATE NOCASE) ORDER BY CAST((NOT (v0.c3)) AS BLOB) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((NULL)AND(vt0.c0)))OR(v0.c4)))AND(vt0.c0)))OR(v0.c0))) ISNULL)) ORDER BY CASE ((NULL) NOTNULL)  WHEN v0.c1 THEN ((v0.c1) BETWEEN (v0.c4) AND (v0.c0)) ELSE vt0.c1 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)AND(vt0.c0)))OR(v0.c4)))AND(vt0.c0)))OR(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE ((NULL) NOTNULL)  WHEN v0.c1 THEN ((v0.c1) BETWEEN (v0.c4) AND (v0.c0)) ELSE vt0.c1 END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((NULL)AND(vt0.c0)))OR(v0.c4)))AND(vt0.c0)))OR(v0.c0))) ISNULL)) ORDER BY CASE ((NULL) NOTNULL)  WHEN v0.c1 THEN ((v0.c1) BETWEEN (v0.c4) AND (v0.c0)) ELSE vt0.c1 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)AND(vt0.c0)))OR(v0.c4)))AND(vt0.c0)))OR(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE ((NULL) NOTNULL)  WHEN v0.c1 THEN ((v0.c1) BETWEEN (v0.c4) AND (v0.c0)) ELSE vt0.c1 END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((NULL)AND(vt0.c0)))OR(v0.c4)))AND(vt0.c0)))OR(v0.c0))) ISNULL)) ORDER BY CASE ((NULL) NOTNULL)  WHEN v0.c1 THEN ((v0.c1) BETWEEN (v0.c4) AND (v0.c0)) ELSE vt0.c1 END ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c3)) BETWEEN ((((((v0.c4)OR(v0.c2)))OR(v0.c0)))) AND ((((((v0.c2)OR(v0.c2)))AND(v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((v0.c3)) BETWEEN ((((((v0.c4)OR(v0.c2)))OR(v0.c0)))) AND ((((((v0.c2)OR(v0.c2)))AND(v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c3)) BETWEEN ((((((v0.c4)OR(v0.c2)))OR(v0.c0)))) AND ((((((v0.c2)OR(v0.c2)))AND(v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((v0.c3)) BETWEEN ((((((v0.c4)OR(v0.c2)))OR(v0.c0)))) AND ((((((v0.c2)OR(v0.c2)))AND(v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c3)) BETWEEN ((((((v0.c4)OR(v0.c2)))OR(v0.c0)))) AND ((((((v0.c2)OR(v0.c2)))AND(v0.c1))))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c4, v0.c4, NULL)) NOT BETWEEN ((v0.c3, v0.c2, v0.c3)) AND ((v0.c3, v0.c1, v0.c4)))) BETWEEN (CAST(v0.c4 AS BLOB)) AND (CAST(v0.c2 AS TEXT)))) ORDER BY DATETIME(IFNULL(v0.c0, v0.c1), ((v0.c2) BETWEEN (v0.c4) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c2 END) ASC, ((((x'869f9e7c') NOT NULL)) BETWEEN (((((((((v0.c2)AND(v0.c1)))AND(v0.c1)))OR(v0.c3)))OR(v0.c4))) AND ((- (v0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c4, v0.c4, NULL)) NOT BETWEEN ((v0.c3, v0.c2, v0.c3)) AND ((v0.c3, v0.c1, v0.c4)))) BETWEEN (CAST(v0.c4 AS BLOB)) AND (CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY DATETIME(IFNULL(v0.c0, v0.c1), ((v0.c2) BETWEEN (v0.c4) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c2 END) ASC, ((((x'869f9e7c') NOT NULL)) BETWEEN (((((((((v0.c2)AND(v0.c1)))AND(v0.c1)))OR(v0.c3)))OR(v0.c4))) AND ((- (v0.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c4, v0.c4, NULL)) NOT BETWEEN ((v0.c3, v0.c2, v0.c3)) AND ((v0.c3, v0.c1, v0.c4)))) BETWEEN (CAST(v0.c4 AS BLOB)) AND (CAST(v0.c2 AS TEXT)))) ORDER BY DATETIME(IFNULL(v0.c0, v0.c1), ((v0.c2) BETWEEN (v0.c4) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c2 END) ASC, ((((x'869f9e7c') NOT NULL)) BETWEEN (((((((((v0.c2)AND(v0.c1)))AND(v0.c1)))OR(v0.c3)))OR(v0.c4))) AND ((- (v0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c4, v0.c4, NULL)) NOT BETWEEN ((v0.c3, v0.c2, v0.c3)) AND ((v0.c3, v0.c1, v0.c4)))) BETWEEN (CAST(v0.c4 AS BLOB)) AND (CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY DATETIME(IFNULL(v0.c0, v0.c1), ((v0.c2) BETWEEN (v0.c4) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c2 END) ASC, ((((x'869f9e7c') NOT NULL)) BETWEEN (((((((((v0.c2)AND(v0.c1)))AND(v0.c1)))OR(v0.c3)))OR(v0.c4))) AND ((- (v0.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c4, v0.c4, NULL)) NOT BETWEEN ((v0.c3, v0.c2, v0.c3)) AND ((v0.c3, v0.c1, v0.c4)))) BETWEEN (CAST(v0.c4 AS BLOB)) AND (CAST(v0.c2 AS TEXT)))) ORDER BY DATETIME(IFNULL(v0.c0, v0.c1), ((v0.c2) BETWEEN (v0.c4) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c2 END) ASC, ((((x'869f9e7c') NOT NULL)) BETWEEN (((((((((v0.c2)AND(v0.c1)))AND(v0.c1)))OR(v0.c3)))OR(v0.c4))) AND ((- (v0.c3))))  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (CASE (NOT (vt0.c1))  WHEN CAST(v0.c2 AS BLOB) THEN v0.c4 WHEN ((v0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((v0.c1) IS FALSE) WHEN CASE WHEN v0.c3 THEN vt0.c1 ELSE vt0.c0 END THEN ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c3)))OR(vt0.c0)))OR(v0.c0)))AND(v0.c2)) ELSE v0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c1))  WHEN CAST(v0.c2 AS BLOB) THEN v0.c4 WHEN ((v0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((v0.c1) IS FALSE) WHEN CASE WHEN v0.c3 THEN vt0.c1 ELSE vt0.c0 END THEN ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c3)))OR(vt0.c0)))OR(v0.c0)))AND(v0.c2)) ELSE v0.c1 END) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (CASE (NOT (vt0.c1))  WHEN CAST(v0.c2 AS BLOB) THEN v0.c4 WHEN ((v0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((v0.c1) IS FALSE) WHEN CASE WHEN v0.c3 THEN vt0.c1 ELSE vt0.c0 END THEN ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c3)))OR(vt0.c0)))OR(v0.c0)))AND(v0.c2)) ELSE v0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c1))  WHEN CAST(v0.c2 AS BLOB) THEN v0.c4 WHEN ((v0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((v0.c1) IS FALSE) WHEN CASE WHEN v0.c3 THEN vt0.c1 ELSE vt0.c0 END THEN ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c3)))OR(vt0.c0)))OR(v0.c0)))AND(v0.c2)) ELSE v0.c1 END) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (CASE (NOT (vt0.c1))  WHEN CAST(v0.c2 AS BLOB) THEN v0.c4 WHEN ((v0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((v0.c1) IS FALSE) WHEN CASE WHEN v0.c3 THEN vt0.c1 ELSE vt0.c0 END THEN ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c3)))OR(vt0.c0)))OR(v0.c0)))AND(v0.c2)) ELSE v0.c1 END);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ()))%(((vt0.c0)!=(vt0.c0))))) ORDER BY ((((vt0.c1)GLOB(720716655))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (vt0.c1));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))%(((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)GLOB(720716655))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (vt0.c1)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ()))%(((vt0.c0)!=(vt0.c0))))) ORDER BY ((((vt0.c1)GLOB(720716655))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (vt0.c1));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))%(((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)GLOB(720716655))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (vt0.c1)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ()))%(((vt0.c0)!=(vt0.c0))))) ORDER BY ((((vt0.c1)GLOB(720716655))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (vt0.c1));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((((((v0.c4)AND((NOT (vt0.c0)))))AND(v0.c0 COLLATE RTRIM)))OR(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE vt0.c1 END)))AND((v0.c1 IN ()))) WHERE ((+ (((((((((v0.c3)AND(v0.c0)))OR(v0.c0)))AND(v0.c4)))OR(v0.c4))))) ORDER BY CAST(((v0.c1) NOT NULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((+ (((((((((v0.c3)AND(v0.c0)))OR(v0.c0)))AND(v0.c4)))OR(v0.c4))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((((((v0.c4)AND((NOT (vt0.c0)))))AND(v0.c0 COLLATE RTRIM)))OR(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE vt0.c1 END)))AND((v0.c1 IN ()))) ORDER BY CAST(((v0.c1) NOT NULL) AS INTEGER));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((((((v0.c4)AND((NOT (vt0.c0)))))AND(v0.c0 COLLATE RTRIM)))OR(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE vt0.c1 END)))AND((v0.c1 IN ()))) WHERE ((+ (((((((((v0.c3)AND(v0.c0)))OR(v0.c0)))AND(v0.c4)))OR(v0.c4))))) ORDER BY CAST(((v0.c1) NOT NULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((+ (((((((((v0.c3)AND(v0.c0)))OR(v0.c0)))AND(v0.c4)))OR(v0.c4))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((((((v0.c4)AND((NOT (vt0.c0)))))AND(v0.c0 COLLATE RTRIM)))OR(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE vt0.c1 END)))AND((v0.c1 IN ()))) ORDER BY CAST(((v0.c1) NOT NULL) AS INTEGER));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((((((v0.c4)AND((NOT (vt0.c0)))))AND(v0.c0 COLLATE RTRIM)))OR(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE vt0.c1 END)))AND((v0.c1 IN ()))) WHERE ((+ (((((((((v0.c3)AND(v0.c0)))OR(v0.c0)))AND(v0.c4)))OR(v0.c4))))) ORDER BY CAST(((v0.c1) NOT NULL) AS INTEGER);
SELECT ALL * FROM v0, vt0 WHERE (CAST(CAST(v0.c2 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c2 AS REAL) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CAST(CAST(v0.c2 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c2 AS REAL) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CAST(CAST(v0.c2 AS REAL) AS TEXT));
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c4)) BETWEEN (('')) AND ((0.9300401948264341)))) ORDER BY INSTR(vt0.c1, vt0.c1) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c4)) BETWEEN (('')) AND ((0.9300401948264341)))) IS TRUE)  as count FROM v0, vt0 ORDER BY INSTR(vt0.c1, vt0.c1) COLLATE BINARY);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c4)) BETWEEN (('')) AND ((0.9300401948264341)))) ORDER BY INSTR(vt0.c1, vt0.c1) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c4)) BETWEEN (('')) AND ((0.9300401948264341)))) IS TRUE)  as count FROM v0, vt0 ORDER BY INSTR(vt0.c1, vt0.c1) COLLATE BINARY);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c4)) BETWEEN (('')) AND ((0.9300401948264341)))) ORDER BY INSTR(vt0.c1, vt0.c1) COLLATE BINARY;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1) IS TRUE) IN (vt0.c1, vt0.c0))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) IS TRUE) IN (vt0.c1, vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1) IS TRUE) IN (vt0.c1, vt0.c0))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) IS TRUE) IN (vt0.c1, vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1) IS TRUE) IN (vt0.c1, vt0.c0))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c3, v0.c0, v0.c3)) NOT BETWEEN ((TRIM(v0.c3), CAST(vt0.c1 AS REAL), ((x'')>=(v0.c1)))) AND ((CAST(v0.c3 AS REAL), ((v0.c0) NOTNULL), ((v0.c4) IS FALSE))))) ORDER BY (+ ('-1697892008' COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c3, v0.c0, v0.c3)) NOT BETWEEN ((TRIM(v0.c3), CAST(vt0.c1 AS REAL), ((x'')>=(v0.c1)))) AND ((CAST(v0.c3 AS REAL), ((v0.c0) NOTNULL), ((v0.c4) IS FALSE))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ ('-1697892008' COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c3, v0.c0, v0.c3)) NOT BETWEEN ((TRIM(v0.c3), CAST(vt0.c1 AS REAL), ((x'')>=(v0.c1)))) AND ((CAST(v0.c3 AS REAL), ((v0.c0) NOTNULL), ((v0.c4) IS FALSE))))) ORDER BY (+ ('-1697892008' COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c3, v0.c0, v0.c3)) NOT BETWEEN ((TRIM(v0.c3), CAST(vt0.c1 AS REAL), ((x'')>=(v0.c1)))) AND ((CAST(v0.c3 AS REAL), ((v0.c0) NOTNULL), ((v0.c4) IS FALSE))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ ('-1697892008' COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c3, v0.c0, v0.c3)) NOT BETWEEN ((TRIM(v0.c3), CAST(vt0.c1 AS REAL), ((x'')>=(v0.c1)))) AND ((CAST(v0.c3 AS REAL), ((v0.c0) NOTNULL), ((v0.c4) IS FALSE))))) ORDER BY (+ ('-1697892008' COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_VERSION()) ORDER BY (((~ (v0.c3))) BETWEEN (((v0.c3)IS(v0.c2))) AND (x'')) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c3))) BETWEEN (((v0.c3)IS(v0.c2))) AND (x'')) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_VERSION()) ORDER BY (((~ (v0.c3))) BETWEEN (((v0.c3)IS(v0.c2))) AND (x'')) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c3))) BETWEEN (((v0.c3)IS(v0.c2))) AND (x'')) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_VERSION()) ORDER BY (((~ (v0.c3))) BETWEEN (((v0.c3)IS(v0.c2))) AND (x'')) ASC;
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (TYPEOF(((vt0.c0) NOTNULL))) ORDER BY ((((((v0.c4)<>(v0.c4)))OR(CASE v0.c0  WHEN v0.c1 THEN v0.c2 END)))OR(CAST(v0.c4 AS INTEGER))) DESC  NULLS LAST, (((((((((((v0.c2, vt0.c0, v0.c4)) NOT BETWEEN ((v0.c3, v0.c2, v0.c3)) AND ((v0.c2, v0.c1, v0.c3))))OR(((v0.c3) BETWEEN (v0.c3) AND (v0.c3)))))OR(LIKELIHOOD(v0.c4, 0.7429443466556683))))AND(x'a602')))OR(1.185051773E9)) ASC  NULLS FIRST, COALESCE(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), LIKELIHOOD('0.59756181203708', 0.8436703208799232)) ASC  NULLS LAST, ((((v0.c1)LIKE(vt0.c0)))IS(((v0.c3) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0) NOTNULL))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c4)<>(v0.c4)))OR(CASE v0.c0  WHEN v0.c1 THEN v0.c2 END)))OR(CAST(v0.c4 AS INTEGER))) DESC  NULLS LAST, (((((((((((v0.c2, vt0.c0, v0.c4)) NOT BETWEEN ((v0.c3, v0.c2, v0.c3)) AND ((v0.c2, v0.c1, v0.c3))))OR(((v0.c3) BETWEEN (v0.c3) AND (v0.c3)))))OR(LIKELIHOOD(v0.c4, 0.7429443466556683))))AND(x'a602')))OR(1.185051773E9)) ASC  NULLS FIRST, COALESCE(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), LIKELIHOOD('0.59756181203708', 0.8436703208799232)) ASC  NULLS LAST, ((((v0.c1)LIKE(vt0.c0)))IS(((v0.c3) NOT NULL))));
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (TYPEOF(((vt0.c0) NOTNULL))) ORDER BY ((((((v0.c4)<>(v0.c4)))OR(CASE v0.c0  WHEN v0.c1 THEN v0.c2 END)))OR(CAST(v0.c4 AS INTEGER))) DESC  NULLS LAST, (((((((((((v0.c2, vt0.c0, v0.c4)) NOT BETWEEN ((v0.c3, v0.c2, v0.c3)) AND ((v0.c2, v0.c1, v0.c3))))OR(((v0.c3) BETWEEN (v0.c3) AND (v0.c3)))))OR(LIKELIHOOD(v0.c4, 0.7429443466556683))))AND(x'a602')))OR(1.185051773E9)) ASC  NULLS FIRST, COALESCE(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), LIKELIHOOD('0.59756181203708', 0.8436703208799232)) ASC  NULLS LAST, ((((v0.c1)LIKE(vt0.c0)))IS(((v0.c3) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0) NOTNULL))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c4)<>(v0.c4)))OR(CASE v0.c0  WHEN v0.c1 THEN v0.c2 END)))OR(CAST(v0.c4 AS INTEGER))) DESC  NULLS LAST, (((((((((((v0.c2, vt0.c0, v0.c4)) NOT BETWEEN ((v0.c3, v0.c2, v0.c3)) AND ((v0.c2, v0.c1, v0.c3))))OR(((v0.c3) BETWEEN (v0.c3) AND (v0.c3)))))OR(LIKELIHOOD(v0.c4, 0.7429443466556683))))AND(x'a602')))OR(1.185051773E9)) ASC  NULLS FIRST, COALESCE(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), LIKELIHOOD('0.59756181203708', 0.8436703208799232)) ASC  NULLS LAST, ((((v0.c1)LIKE(vt0.c0)))IS(((v0.c3) NOT NULL))));
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (TYPEOF(((vt0.c0) NOTNULL))) ORDER BY ((((((v0.c4)<>(v0.c4)))OR(CASE v0.c0  WHEN v0.c1 THEN v0.c2 END)))OR(CAST(v0.c4 AS INTEGER))) DESC  NULLS LAST, (((((((((((v0.c2, vt0.c0, v0.c4)) NOT BETWEEN ((v0.c3, v0.c2, v0.c3)) AND ((v0.c2, v0.c1, v0.c3))))OR(((v0.c3) BETWEEN (v0.c3) AND (v0.c3)))))OR(LIKELIHOOD(v0.c4, 0.7429443466556683))))AND(x'a602')))OR(1.185051773E9)) ASC  NULLS FIRST, COALESCE(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), LIKELIHOOD('0.59756181203708', 0.8436703208799232)) ASC  NULLS LAST, ((((v0.c1)LIKE(vt0.c0)))IS(((v0.c3) NOT NULL)));
SELECT ALL * FROM v0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((v0.c1))))|(((v0.c2)/(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((v0.c1))))|(((v0.c2)/(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((v0.c1))))|(((v0.c2)/(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((v0.c1))))|(((v0.c2)/(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((v0.c1))))|(((v0.c2)/(v0.c1)))));
SELECT * FROM vt0, v0 WHERE ((((((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c2))))==((((v0.c4)>=(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c2))))==((((v0.c4)>=(v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c2))))==((((v0.c4)>=(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c2))))==((((v0.c4)>=(v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c2))))==((((v0.c4)>=(v0.c0))))));
SELECT * FROM v0 WHERE (v0.c2) ORDER BY 36120728 DESC;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY 36120728 DESC);
SELECT * FROM v0 WHERE (v0.c2) ORDER BY 36120728 DESC;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY 36120728 DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c1) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c1) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c1) ORDER BY vt0.c1;
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0))<=((v0.c0))))>=((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<=((v0.c0))))>=((NOT (vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0))<=((v0.c0))))>=((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<=((v0.c0))))>=((NOT (vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0))<=((v0.c0))))>=((NOT (vt0.c1)))));
SELECT ALL * FROM v0 WHERE (json_insert(v0.c4, ((v0.c0)=(v0.c1)), LIKELIHOOD(DISTINCT v0.c4, 0.17347390124822615), ((v0.c3) NOTNULL), (v0.c4 IN (v0.c0)))) ORDER BY ((ABS(v0.c3)) IS FALSE)  NULLS FIRST, (((v0.c4)GLOB(v0.c4)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((json_insert(v0.c4, ((v0.c0)==(v0.c1)), LIKELIHOOD(DISTINCT v0.c4, 0.17347390124822615), ((v0.c3) NOTNULL), (v0.c4 IN (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((ABS(v0.c3)) IS FALSE)  NULLS FIRST, (((v0.c4)GLOB(v0.c4)) IN ()));
SELECT ALL * FROM v0 WHERE (json_insert(v0.c4, ((v0.c0)=(v0.c1)), LIKELIHOOD(DISTINCT v0.c4, 0.17347390124822615), ((v0.c3) NOTNULL), (v0.c4 IN (v0.c0)))) ORDER BY ((ABS(v0.c3)) IS FALSE)  NULLS FIRST, (((v0.c4)GLOB(v0.c4)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((json_insert(v0.c4, ((v0.c0)==(v0.c1)), LIKELIHOOD(DISTINCT v0.c4, 0.17347390124822615), ((v0.c3) NOTNULL), (v0.c4 IN (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((ABS(v0.c3)) IS FALSE)  NULLS FIRST, (((v0.c4)GLOB(v0.c4)) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c4)) COLLATE RTRIM) ORDER BY ((v0.c0)<(v0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0)<(v0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c4)) COLLATE RTRIM) ORDER BY ((v0.c0)<(v0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0)<(v0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c4)) COLLATE RTRIM) ORDER BY ((v0.c0)<(v0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(x'' AS TEXT)) ORDER BY ((((v0.c3)<=(NULL))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c3)<=(NULL))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(x'' AS TEXT)) ORDER BY ((((v0.c3)<=(NULL))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c3)<=(NULL))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(x'' AS TEXT)) ORDER BY ((((v0.c3)<=(NULL))) NOTNULL) DESC;
SELECT * FROM v0, vt0 WHERE (0Xffffffffcdbe2165);
SELECT SUM(count) FROM (SELECT ((0xffffffffcdbe2165) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (0Xffffffffcdbe2165);
SELECT SUM(count) FROM (SELECT ((0xffffffffcdbe2165) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (0Xffffffffcdbe2165);
SELECT * FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0)))));
SELECT * FROM v0 WHERE (CASE CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END  WHEN (~ (x'')) THEN (~ (v0.c2)) WHEN ((v0.c4)!=(v0.c1)) THEN ((v0.c2) ISNULL) WHEN v0.c1 COLLATE BINARY THEN v0.c1 COLLATE RTRIM END) ORDER BY CAST(CAST(v0.c0 AS REAL) AS REAL)  NULLS FIRST, (((~ (v0.c4)))<<(((v0.c4) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END  WHEN (~ (x'')) THEN (~ (v0.c2)) WHEN ((v0.c4)<>(v0.c1)) THEN ((v0.c2) ISNULL) WHEN v0.c1 COLLATE BINARY THEN v0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS REAL) AS REAL)  NULLS FIRST, (((~ (v0.c4)))<<(((v0.c4) NOTNULL))) DESC);
SELECT * FROM v0 WHERE (CASE CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END  WHEN (~ (x'')) THEN (~ (v0.c2)) WHEN ((v0.c4)!=(v0.c1)) THEN ((v0.c2) ISNULL) WHEN v0.c1 COLLATE BINARY THEN v0.c1 COLLATE RTRIM END) ORDER BY CAST(CAST(v0.c0 AS REAL) AS REAL)  NULLS FIRST, (((~ (v0.c4)))<<(((v0.c4) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END  WHEN (~ (x'')) THEN (~ (v0.c2)) WHEN ((v0.c4)<>(v0.c1)) THEN ((v0.c2) ISNULL) WHEN v0.c1 COLLATE BINARY THEN v0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS REAL) AS REAL)  NULLS FIRST, (((~ (v0.c4)))<<(((v0.c4) NOTNULL))) DESC);
SELECT * FROM v0 WHERE (CASE CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END  WHEN (~ (x'')) THEN (~ (v0.c2)) WHEN ((v0.c4)!=(v0.c1)) THEN ((v0.c2) ISNULL) WHEN v0.c1 COLLATE BINARY THEN v0.c1 COLLATE RTRIM END) ORDER BY CAST(CAST(v0.c0 AS REAL) AS REAL)  NULLS FIRST, (((~ (v0.c4)))<<(((v0.c4) NOTNULL))) DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY CAST(((((((((vt0.c0)AND(0.9678842845975243)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c0)AND(0.9678842845975243)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY CAST(((((((((vt0.c0)AND(0.9678842845975243)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c0)AND(0.9678842845975243)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY CAST(((((((((vt0.c0)AND(0.9678842845975243)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) AS NUMERIC) DESC;
SELECT ALL * FROM vt0, v0 WHERE (0.8664020786751307);
SELECT SUM(count) FROM (SELECT ALL ((0.8664020786751307) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (0.8664020786751307);
SELECT SUM(count) FROM (SELECT ALL ((0.8664020786751307) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (0.8664020786751307);
SELECT * FROM vt0 WHERE (CASE ((NULL) NOTNULL)  WHEN CAST(vt0.c1 AS NUMERIC) THEN (NOT (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((NULL) NOTNULL)  WHEN CAST(vt0.c1 AS NUMERIC) THEN (NOT (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((NULL) NOTNULL)  WHEN CAST(vt0.c1 AS NUMERIC) THEN (NOT (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((NULL) NOTNULL)  WHEN CAST(vt0.c1 AS NUMERIC) THEN (NOT (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((NULL) NOTNULL)  WHEN CAST(vt0.c1 AS NUMERIC) THEN (NOT (vt0.c1)) END);
SELECT * FROM v0, vt0 WHERE (((CASE vt0.c0  WHEN x'078b' THEN v0.c3 WHEN v0.c2 THEN vt0.c1 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END) BETWEEN (x'3915') AND (((v0.c1)/(v0.c3))))) ORDER BY (CAST(-8.00286139E8 AS TEXT) IN ()), 0.8845383268805519 DESC  NULLS FIRST, (~ (STRFTIME(v0.c0, 0.3137537410748513, v0.c1, vt0.c0, v0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN x'078b' THEN v0.c3 WHEN v0.c2 THEN vt0.c1 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END) BETWEEN (x'3915') AND (((v0.c1)/(v0.c3))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (CAST(-8.00286139E8 AS TEXT) IN ()), 0.8845383268805519 DESC  NULLS FIRST, (~ (STRFTIME(v0.c0, 0.3137537410748513, v0.c1, vt0.c0, v0.c1))) DESC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((CASE vt0.c0  WHEN x'078b' THEN v0.c3 WHEN v0.c2 THEN vt0.c1 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END) BETWEEN (x'3915') AND (((v0.c1)/(v0.c3))))) ORDER BY (CAST(-8.00286139E8 AS TEXT) IN ()), 0.8845383268805519 DESC  NULLS FIRST, (~ (STRFTIME(v0.c0, 0.3137537410748513, v0.c1, vt0.c0, v0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN x'078b' THEN v0.c3 WHEN v0.c2 THEN vt0.c1 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END) BETWEEN (x'3915') AND (((v0.c1)/(v0.c3))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (CAST(-8.00286139E8 AS TEXT) IN ()), 0.8845383268805519 DESC  NULLS FIRST, (~ (STRFTIME(v0.c0, 0.3137537410748513, v0.c1, vt0.c0, v0.c1))) DESC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((CASE vt0.c0  WHEN x'078b' THEN v0.c3 WHEN v0.c2 THEN vt0.c1 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END) BETWEEN (x'3915') AND (((v0.c1)/(v0.c3))))) ORDER BY (CAST(-8.00286139E8 AS TEXT) IN ()), 0.8845383268805519 DESC  NULLS FIRST, (~ (STRFTIME(v0.c0, 0.3137537410748513, v0.c1, vt0.c0, v0.c1))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((((((((v0.c0)AND(v0.c4)))OR(v0.c1)))OR(((v0.c1) BETWEEN (v0.c4) AND (x'')))))OR(v0.c0 COLLATE BINARY)))OR(((v0.c4) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((v0.c4 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c0)AND(v0.c4)))OR(v0.c1)))OR(((v0.c1) BETWEEN (v0.c4) AND (x'')))))OR(v0.c0 COLLATE BINARY)))OR(((v0.c4) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((v0.c4 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((((((((v0.c0)AND(v0.c4)))OR(v0.c1)))OR(((v0.c1) BETWEEN (v0.c4) AND (x'')))))OR(v0.c0 COLLATE BINARY)))OR(((v0.c4) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((v0.c4 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c0)AND(v0.c4)))OR(v0.c1)))OR(((v0.c1) BETWEEN (v0.c4) AND (x'')))))OR(v0.c0 COLLATE BINARY)))OR(((v0.c4) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((v0.c4 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((((((((v0.c0)AND(v0.c4)))OR(v0.c1)))OR(((v0.c1) BETWEEN (v0.c4) AND (x'')))))OR(v0.c0 COLLATE BINARY)))OR(((v0.c4) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((v0.c4 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS REAL));
SELECT * FROM vt0, v0 WHERE (CASE WHEN IFNULL(v0.c2, vt0.c0) THEN ABS(v0.c3) WHEN LIKELY(DISTINCT vt0.c0) THEN v0.c2 COLLATE BINARY WHEN (~ (v0.c3)) THEN TRIM(DISTINCT v0.c3) WHEN x'' THEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) WHEN (v0.c1 IN ()) THEN ((((v0.c3)OR(v0.c2)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN IFNULL(v0.c2, vt0.c0) THEN ABS(v0.c3) WHEN LIKELY(DISTINCT vt0.c0) THEN v0.c2 COLLATE BINARY WHEN (~ (v0.c3)) THEN TRIM(DISTINCT v0.c3) WHEN x'' THEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) WHEN (v0.c1 IN ()) THEN ((((v0.c3)OR(v0.c2)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE WHEN IFNULL(v0.c2, vt0.c0) THEN ABS(v0.c3) WHEN LIKELY(DISTINCT vt0.c0) THEN v0.c2 COLLATE BINARY WHEN (~ (v0.c3)) THEN TRIM(DISTINCT v0.c3) WHEN x'' THEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) WHEN (v0.c1 IN ()) THEN ((((v0.c3)OR(v0.c2)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN IFNULL(v0.c2, vt0.c0) THEN ABS(v0.c3) WHEN LIKELY(DISTINCT vt0.c0) THEN v0.c2 COLLATE BINARY WHEN (~ (v0.c3)) THEN TRIM(DISTINCT v0.c3) WHEN x'' THEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) WHEN (v0.c1 IN ()) THEN ((((v0.c3)OR(v0.c2)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE WHEN IFNULL(v0.c2, vt0.c0) THEN ABS(v0.c3) WHEN LIKELY(DISTINCT vt0.c0) THEN v0.c2 COLLATE BINARY WHEN (~ (v0.c3)) THEN TRIM(DISTINCT v0.c3) WHEN x'' THEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) WHEN (v0.c1 IN ()) THEN ((((v0.c3)OR(v0.c2)))AND(vt0.c0)) END);
SELECT ALL * FROM vt0, v0 WHERE ((+ (json_object(v0.c2, vt0.c1, v0.c0, v0.c2))));
SELECT SUM(count) FROM (SELECT (((+ (json_object(v0.c2, vt0.c1, v0.c0, v0.c2)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((+ (json_object(v0.c2, vt0.c1, v0.c0, v0.c2))));
SELECT SUM(count) FROM (SELECT (((+ (json_object(v0.c2, vt0.c1, v0.c0, v0.c2)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0 WHERE (((~ (vt0.c0)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((~ (vt0.c0)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((~ (vt0.c0)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(vt0.c0, vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c0)))AND(((vt0.c0) IS FALSE))))OR(((vt0.c1)-(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>>(vt0.c0)))AND(((vt0.c0) IS FALSE))))OR(((vt0.c1)-(NULL))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c0)))AND(((vt0.c0) IS FALSE))))OR(((vt0.c1)-(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>>(vt0.c0)))AND(((vt0.c0) IS FALSE))))OR(((vt0.c1)-(NULL))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c0)))AND(((vt0.c0) IS FALSE))))OR(((vt0.c1)-(NULL)))));
SELECT ALL * FROM v0, vt0 WHERE (CASE CAST(v0.c4 AS INTEGER)  WHEN NULL THEN (vt0.c1 IN ()) END) ORDER BY (((((v0.c3 IN (v0.c2)))OR((((('j㰲')AND(v0.c0)))OR(vt0.c1)))))AND('378881600')) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c4 AS INTEGER)  WHEN NULL THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c3 IN (v0.c2)))OR((((('j㰲')AND(v0.c0)))OR(vt0.c1)))))AND('378881600')) DESC);
SELECT ALL * FROM v0, vt0 WHERE (CASE CAST(v0.c4 AS INTEGER)  WHEN NULL THEN (vt0.c1 IN ()) END) ORDER BY (((((v0.c3 IN (v0.c2)))OR((((('j㰲')AND(v0.c0)))OR(vt0.c1)))))AND('378881600')) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c4 AS INTEGER)  WHEN NULL THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c3 IN (v0.c2)))OR((((('j㰲')AND(v0.c0)))OR(vt0.c1)))))AND('378881600')) DESC);
SELECT ALL * FROM v0, vt0 WHERE (CASE CAST(v0.c4 AS INTEGER)  WHEN NULL THEN (vt0.c1 IN ()) END) ORDER BY (((((v0.c3 IN (v0.c2)))OR((((('j㰲')AND(v0.c0)))OR(vt0.c1)))))AND('378881600')) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN ((~ (NULL))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN '-1314342352' WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((vt0.c0)!=(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT BETWEEN ((~ (NULL))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN '-1314342352' WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)!=(vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN ((~ (NULL))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN '-1314342352' WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((vt0.c0)!=(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT BETWEEN ((~ (NULL))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN '-1314342352' WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)!=(vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN ((~ (NULL))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN '-1314342352' WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((vt0.c0)!=(vt0.c0)) IN ()) ASC;
SELECT * FROM v0 WHERE ((~ ((~ (v0.c0))))) ORDER BY (((v0.c3)) BETWEEN (((((v0.c2))<=((v0.c0))))) AND ((9.27628795E8)));
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c3)) BETWEEN (((((v0.c2))<=((v0.c0))))) AND ((9.27628795E8))));
SELECT * FROM v0 WHERE ((~ ((~ (v0.c0))))) ORDER BY (((v0.c3)) BETWEEN (((((v0.c2))<=((v0.c0))))) AND ((9.27628795E8)));
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c3)) BETWEEN (((((v0.c2))<=((v0.c0))))) AND ((9.27628795E8))));
SELECT * FROM v0 WHERE ((~ ((~ (v0.c0))))) ORDER BY (((v0.c3)) BETWEEN (((((v0.c2))<=((v0.c0))))) AND ((9.27628795E8)));
SELECT * FROM v0 WHERE ((NOT (CASE v0.c3  WHEN 'K{' THEN v0.c3 END))) ORDER BY json_array_length(NULL, ((v0.c3) BETWEEN (v0.c4) AND (v0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE v0.c3  WHEN 'K{' THEN v0.c3 END))) IS TRUE)  as count FROM v0 ORDER BY json_array_length(NULL, ((v0.c3) BETWEEN (v0.c4) AND (v0.c2)))  NULLS FIRST);
SELECT * FROM v0 WHERE ((NOT (CASE v0.c3  WHEN 'K{' THEN v0.c3 END))) ORDER BY json_array_length(NULL, ((v0.c3) BETWEEN (v0.c4) AND (v0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE v0.c3  WHEN 'K{' THEN v0.c3 END))) IS TRUE)  as count FROM v0 ORDER BY json_array_length(NULL, ((v0.c3) BETWEEN (v0.c4) AND (v0.c2)))  NULLS FIRST);
SELECT * FROM v0 WHERE ((NOT (CASE v0.c3  WHEN 'K{' THEN v0.c3 END))) ORDER BY json_array_length(NULL, ((v0.c3) BETWEEN (v0.c4) AND (v0.c2)))  NULLS FIRST;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (((SUBSTR(vt0.c1, vt0.c1)) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c3)))) AND ((((v0.c4)) NOT BETWEEN ((vt0.c0)) AND ((v0.c4)))))) ORDER BY ((v0.c4 COLLATE RTRIM) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(vt0.c1, vt0.c1)) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c3)))) AND ((((v0.c4)) NOT BETWEEN ((vt0.c0)) AND ((v0.c4)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((v0.c4 COLLATE RTRIM) NOT NULL));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (((SUBSTR(vt0.c1, vt0.c1)) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c3)))) AND ((((v0.c4)) NOT BETWEEN ((vt0.c0)) AND ((v0.c4)))))) ORDER BY ((v0.c4 COLLATE RTRIM) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(vt0.c1, vt0.c1)) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c3)))) AND ((((v0.c4)) NOT BETWEEN ((vt0.c0)) AND ((v0.c4)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((v0.c4 COLLATE RTRIM) NOT NULL));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (((SUBSTR(vt0.c1, vt0.c1)) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c3)))) AND ((((v0.c4)) NOT BETWEEN ((vt0.c0)) AND ((v0.c4)))))) ORDER BY ((v0.c4 COLLATE RTRIM) NOT NULL);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((~ (v0.c3)), ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)), (((v0.c2, v0.c4, 0.5217023939969653, vt0.c0, v0.c3)) BETWEEN (('1521914508', v0.c0, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, v0.c4, v0.c0, v0.c2, v0.c3)))))<((((v0.c4)*(v0.c4)), v0.c2, CAST(v0.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ((((((~ (v0.c3)), ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)), (((v0.c2, v0.c4, 0.5217023939969653, vt0.c0, v0.c3)) BETWEEN (('1521914508', v0.c0, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, v0.c4, v0.c0, v0.c2, v0.c3)))))<((((v0.c4)*(v0.c4)), v0.c2, CAST(v0.c2 AS TEXT))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((~ (v0.c3)), ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)), (((v0.c2, v0.c4, 0.5217023939969653, vt0.c0, v0.c3)) BETWEEN (('1521914508', v0.c0, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, v0.c4, v0.c0, v0.c2, v0.c3)))))<((((v0.c4)*(v0.c4)), v0.c2, CAST(v0.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ((((((~ (v0.c3)), ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)), (((v0.c2, v0.c4, 0.5217023939969653, vt0.c0, v0.c3)) BETWEEN (('1521914508', v0.c0, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, v0.c4, v0.c0, v0.c2, v0.c3)))))<((((v0.c4)*(v0.c4)), v0.c2, CAST(v0.c2 AS TEXT))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((~ (v0.c3)), ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)), (((v0.c2, v0.c4, 0.5217023939969653, vt0.c0, v0.c3)) BETWEEN (('1521914508', v0.c0, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, v0.c4, v0.c0, v0.c2, v0.c3)))))<((((v0.c4)*(v0.c4)), v0.c2, CAST(v0.c2 AS TEXT)))));
SELECT ALL * FROM vt0 WHERE (NULLIF(DISTINCT CAST(vt0.c1 AS TEXT), HEX(DISTINCT vt0.c1))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CAST(vt0.c1 AS TEXT), HEX(DISTINCT vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (NULLIF(DISTINCT CAST(vt0.c1 AS TEXT), HEX(DISTINCT vt0.c1))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CAST(vt0.c1 AS TEXT), HEX(DISTINCT vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (NULLIF(DISTINCT CAST(vt0.c1 AS TEXT), HEX(DISTINCT vt0.c1))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (GLOB(TYPEOF(DISTINCT vt0.c1), ABS(vt0.c0))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((GLOB(TYPEOF(DISTINCT vt0.c1), ABS(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT * FROM vt0 WHERE (GLOB(TYPEOF(DISTINCT vt0.c1), ABS(vt0.c0))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((GLOB(TYPEOF(DISTINCT vt0.c1), ABS(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT * FROM vt0 WHERE (GLOB(TYPEOF(DISTINCT vt0.c1), ABS(vt0.c0))) ORDER BY vt0.c1 ASC;
SELECT COUNT(*) FROM v0 WHERE (LTRIM((v0.c4 IN ()))) ORDER BY CAST(((x'')-(v0.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((v0.c4 IN ()))) IS TRUE)  as count FROM v0 ORDER BY CAST(((x'')-(v0.c1)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (LTRIM((v0.c4 IN ()))) ORDER BY CAST(((x'')-(v0.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((v0.c4 IN ()))) IS TRUE)  as count FROM v0 ORDER BY CAST(((x'')-(v0.c1)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (LTRIM((v0.c4 IN ()))) ORDER BY CAST(((x'')-(v0.c1)) AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (CAST((((v0.c2)) NOT BETWEEN ((0.3399212584802036)) AND ((vt0.c1))) AS INTEGER)) ORDER BY ((((v0.c2) IS FALSE))==(INSTR(v0.c1, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c2)) NOT BETWEEN ((0.3399212584802036)) AND ((vt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c2) IS FALSE))=(INSTR(v0.c1, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (CAST((((v0.c2)) NOT BETWEEN ((0.3399212584802036)) AND ((vt0.c1))) AS INTEGER)) ORDER BY ((((v0.c2) IS FALSE))==(INSTR(v0.c1, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c2)) NOT BETWEEN ((0.3399212584802036)) AND ((vt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c2) IS FALSE))=(INSTR(v0.c1, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (CAST((((v0.c2)) NOT BETWEEN ((0.3399212584802036)) AND ((vt0.c1))) AS INTEGER)) ORDER BY ((((v0.c2) IS FALSE))==(INSTR(v0.c1, vt0.c0)));
SELECT ALL * FROM vt0, v0 WHERE (CAST(TRIM(v0.c2, vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(v0.c2, vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CAST(TRIM(v0.c2, vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(v0.c2, vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CAST(TRIM(v0.c2, vt0.c0) AS NUMERIC));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM v0 WHERE (((((NULL)AND(((v0.c4) BETWEEN (v0.c4) AND (v0.c4)))))OR(CASE v0.c1  WHEN NULL THEN x'' ELSE v0.c4 END))) ORDER BY ('166657990' IN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c4 END, TIME(1032525761, v0.c0, v0.c2)));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(((v0.c4) BETWEEN (v0.c4) AND (v0.c4)))))OR(CASE v0.c1  WHEN NULL THEN x'' ELSE v0.c4 END))) IS TRUE)  as count FROM v0 ORDER BY ('166657990' IN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c4 END, TIME(1032525761, v0.c0, v0.c2))));
SELECT ALL * FROM v0 WHERE (((((NULL)AND(((v0.c4) BETWEEN (v0.c4) AND (v0.c4)))))OR(CASE v0.c1  WHEN NULL THEN x'' ELSE v0.c4 END))) ORDER BY ('166657990' IN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c4 END, TIME(1032525761, v0.c0, v0.c2)));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(((v0.c4) BETWEEN (v0.c4) AND (v0.c4)))))OR(CASE v0.c1  WHEN NULL THEN x'' ELSE v0.c4 END))) IS TRUE)  as count FROM v0 ORDER BY ('166657990' IN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c4 END, TIME(1032525761, v0.c0, v0.c2))));
SELECT ALL * FROM v0 WHERE (((((NULL)AND(((v0.c4) BETWEEN (v0.c4) AND (v0.c4)))))OR(CASE v0.c1  WHEN NULL THEN x'' ELSE v0.c4 END))) ORDER BY ('166657990' IN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c4 END, TIME(1032525761, v0.c0, v0.c2)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON 0.49861041079201607 WHERE ((~ (((-492959358) NOT BETWEEN (v0.c3) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((-492959358) NOT BETWEEN (v0.c3) AND (v0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON 0.49861041079201607);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON 0.49861041079201607 WHERE ((~ (((-492959358) NOT BETWEEN (v0.c3) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((-492959358) NOT BETWEEN (v0.c3) AND (v0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON 0.49861041079201607);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON 0.49861041079201607 WHERE ((~ (((-492959358) NOT BETWEEN (v0.c3) AND (v0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.6923034911570469)|((((vt0.c1))<>((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((0.6923034911570469)|((((vt0.c1))<>((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.6923034911570469)|((((vt0.c1))<>((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((0.6923034911570469)|((((vt0.c1))<>((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.6923034911570469)|((((vt0.c1))<>((vt0.c1))))));
SELECT ALL * FROM v0 NOT INDEXED WHERE (TRIM(CASE WHEN v0.c2 THEN v0.c3 WHEN x'7570' THEN v0.c4 WHEN v0.c2 THEN 0.015445338669210273 END)) ORDER BY CAST(((v0.c3)<>(v0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN v0.c2 THEN v0.c3 WHEN x'7570' THEN v0.c4 WHEN v0.c2 THEN 0.015445338669210273 END)) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c3)<>(v0.c0)) AS BLOB));
SELECT ALL * FROM v0 NOT INDEXED WHERE (TRIM(CASE WHEN v0.c2 THEN v0.c3 WHEN x'7570' THEN v0.c4 WHEN v0.c2 THEN 0.015445338669210273 END)) ORDER BY CAST(((v0.c3)<>(v0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN v0.c2 THEN v0.c3 WHEN x'7570' THEN v0.c4 WHEN v0.c2 THEN 0.015445338669210273 END)) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c3)<>(v0.c0)) AS BLOB));
SELECT ALL * FROM v0 NOT INDEXED WHERE (TRIM(CASE WHEN v0.c2 THEN v0.c3 WHEN x'7570' THEN v0.c4 WHEN v0.c2 THEN 0.015445338669210273 END)) ORDER BY CAST(((v0.c3)<>(v0.c0)) AS BLOB);
SELECT * FROM vt0 WHERE ((~ ((+ (vt0.c1))))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT (((~ ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY vt0.c1 DESC);
SELECT * FROM vt0 WHERE ((~ ((+ (vt0.c1))))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT (((~ ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY vt0.c1 DESC);
SELECT * FROM vt0 WHERE ((~ ((+ (vt0.c1))))) ORDER BY vt0.c1 DESC;
SELECT ALL * FROM v0 WHERE (((CAST(v0.c1 AS BLOB))IS(((v0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c1 AS BLOB))IS(((v0.c2) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c1 AS BLOB))IS(((v0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c1 AS BLOB))IS(((v0.c2) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c1 AS BLOB))IS(((v0.c2) NOTNULL))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER));
SELECT * FROM vt0, v0 WHERE ((((((vt0.c1) NOTNULL)))<=((((v0.c1)|(v0.c3)))))) ORDER BY v0.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) NOTNULL)))<=((((v0.c1)|(v0.c3)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c3 ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE ((((((vt0.c1) NOTNULL)))<=((((v0.c1)|(v0.c3)))))) ORDER BY v0.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) NOTNULL)))<=((((v0.c1)|(v0.c3)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c3 ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE ((((((vt0.c1) NOTNULL)))<=((((v0.c1)|(v0.c3)))))) ORDER BY v0.c3 ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ('U㑐W');
SELECT SUM(count) FROM (SELECT ALL (('U㑐W') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('U㑐W');
SELECT SUM(count) FROM (SELECT ALL (('U㑐W') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('U㑐W');
SELECT * FROM vt0, v0 WHERE (CASE WHEN x'' THEN (((v0.c2, vt0.c0, v0.c2, v0.c2, vt0.c1))>((v0.c0, v0.c3, v0.c1, v0.c3, v0.c3))) WHEN (v0.c3 IN ()) THEN v0.c3 COLLATE RTRIM WHEN v0.c1 COLLATE RTRIM THEN ((vt0.c0)IS NOT(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN (((v0.c2, vt0.c0, v0.c2, v0.c2, vt0.c1))>((v0.c0, v0.c3, v0.c1, v0.c3, v0.c3))) WHEN (v0.c3 IN ()) THEN v0.c3 COLLATE RTRIM WHEN v0.c1 COLLATE RTRIM THEN ((vt0.c0)IS NOT(v0.c1)) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE WHEN x'' THEN (((v0.c2, vt0.c0, v0.c2, v0.c2, vt0.c1))>((v0.c0, v0.c3, v0.c1, v0.c3, v0.c3))) WHEN (v0.c3 IN ()) THEN v0.c3 COLLATE RTRIM WHEN v0.c1 COLLATE RTRIM THEN ((vt0.c0)IS NOT(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN (((v0.c2, vt0.c0, v0.c2, v0.c2, vt0.c1))>((v0.c0, v0.c3, v0.c1, v0.c3, v0.c3))) WHEN (v0.c3 IN ()) THEN v0.c3 COLLATE RTRIM WHEN v0.c1 COLLATE RTRIM THEN ((vt0.c0)IS NOT(v0.c1)) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE WHEN x'' THEN (((v0.c2, vt0.c0, v0.c2, v0.c2, vt0.c1))>((v0.c0, v0.c3, v0.c1, v0.c3, v0.c3))) WHEN (v0.c3 IN ()) THEN v0.c3 COLLATE RTRIM WHEN v0.c1 COLLATE RTRIM THEN ((vt0.c0)IS NOT(v0.c1)) END);
SELECT * FROM vt0 WHERE (((((vt0.c1 COLLATE NOCASE)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c1  WHEN 0Xffffffffa8e9dbad THEN vt0.c1 WHEN 'ss9]4厯V' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((vt0.c1)||(vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0 COLLATE NOCASE)), ((vt0.c0) BETWEEN (0.8571040058530166) AND (vt0.c1 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE NOCASE)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c1  WHEN 0xffffffffa8e9dbad THEN vt0.c1 WHEN 'ss9]4厯V' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)||(vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0 COLLATE NOCASE)), ((vt0.c0) BETWEEN (0.8571040058530166) AND (vt0.c1 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c1 COLLATE NOCASE)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c1  WHEN 0Xffffffffa8e9dbad THEN vt0.c1 WHEN 'ss9]4厯V' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((vt0.c1)||(vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0 COLLATE NOCASE)), ((vt0.c0) BETWEEN (0.8571040058530166) AND (vt0.c1 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE NOCASE)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c1  WHEN 0xffffffffa8e9dbad THEN vt0.c1 WHEN 'ss9]4厯V' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)||(vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0 COLLATE NOCASE)), ((vt0.c0) BETWEEN (0.8571040058530166) AND (vt0.c1 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c1 COLLATE NOCASE)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c1  WHEN 0Xffffffffa8e9dbad THEN vt0.c1 WHEN 'ss9]4厯V' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((vt0.c1)||(vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0 COLLATE NOCASE)), ((vt0.c0) BETWEEN (0.8571040058530166) AND (vt0.c1 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c1)) BETWEEN ((((vt0.c1)>(vt0.c1)))) AND ((LIKELIHOOD(DISTINCT v0.c0, 0.8504944743387147))))) ORDER BY (+ (((vt0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((((vt0.c1)>(vt0.c1)))) AND ((LIKELIHOOD(DISTINCT v0.c0, 0.8504944743387147))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (((vt0.c0) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c1)) BETWEEN ((((vt0.c1)>(vt0.c1)))) AND ((LIKELIHOOD(DISTINCT v0.c0, 0.8504944743387147))))) ORDER BY (+ (((vt0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((((vt0.c1)>(vt0.c1)))) AND ((LIKELIHOOD(DISTINCT v0.c0, 0.8504944743387147))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (((vt0.c0) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c1)) BETWEEN ((((vt0.c1)>(vt0.c1)))) AND ((LIKELIHOOD(DISTINCT v0.c0, 0.8504944743387147))))) ORDER BY (+ (((vt0.c0) ISNULL))) DESC;
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((SQLITE_SOURCE_ID()) NOT BETWEEN (CASE v0.c2  WHEN v0.c1 THEN vt0.c1 ELSE v0.c3 END) AND (CAST(v0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID()) NOT BETWEEN (CASE v0.c2  WHEN v0.c1 THEN vt0.c1 ELSE v0.c3 END) AND (CAST(v0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((SQLITE_SOURCE_ID()) NOT BETWEEN (CASE v0.c2  WHEN v0.c1 THEN vt0.c1 ELSE v0.c3 END) AND (CAST(v0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID()) NOT BETWEEN (CASE v0.c2  WHEN v0.c1 THEN vt0.c1 ELSE v0.c3 END) AND (CAST(v0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((SQLITE_SOURCE_ID()) NOT BETWEEN (CASE v0.c2  WHEN v0.c1 THEN vt0.c1 ELSE v0.c3 END) AND (CAST(v0.c1 AS TEXT))));
SELECT ALL * FROM v0, vt0 WHERE ((((CASE v0.c3  WHEN v0.c1 THEN v0.c1 END))<((CASE vt0.c1  WHEN vt0.c1 THEN v0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE v0.c3  WHEN v0.c1 THEN v0.c1 END))<((CASE vt0.c1  WHEN vt0.c1 THEN v0.c2 END)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((CASE v0.c3  WHEN v0.c1 THEN v0.c1 END))<((CASE vt0.c1  WHEN vt0.c1 THEN v0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE v0.c3  WHEN v0.c1 THEN v0.c1 END))<((CASE vt0.c1  WHEN vt0.c1 THEN v0.c2 END)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((CASE v0.c3  WHEN v0.c1 THEN v0.c1 END))<((CASE vt0.c1  WHEN vt0.c1 THEN v0.c2 END))));
SELECT * FROM v0, vt0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) ORDER BY (~ ((('0.24671880134443758') NOT BETWEEN (vt0.c0) AND (v0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ ((('0.24671880134443758') NOT BETWEEN (vt0.c0) AND (v0.c4)))));
SELECT * FROM v0, vt0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) ORDER BY (~ ((('0.24671880134443758') NOT BETWEEN (vt0.c0) AND (v0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ ((('0.24671880134443758') NOT BETWEEN (vt0.c0) AND (v0.c4)))));
SELECT * FROM v0, vt0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) ORDER BY (~ ((('0.24671880134443758') NOT BETWEEN (vt0.c0) AND (v0.c4))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))>=(((vt0.c1)&(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))>=(((vt0.c1)&(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))>=(((vt0.c1)&(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))>=(((vt0.c1)&(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))>=(((vt0.c1)&(vt0.c1)))));
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c2)AND(NULL)))AND(vt0.c1)) COLLATE NOCASE) ORDER BY (CAST(1.411876071E9 AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT ((((((v0.c2)AND(NULL)))AND(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY (CAST(1.411876071E9 AS INTEGER) IN ()));
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c2)AND(NULL)))AND(vt0.c1)) COLLATE NOCASE) ORDER BY (CAST(1.411876071E9 AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT ((((((v0.c2)AND(NULL)))AND(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY (CAST(1.411876071E9 AS INTEGER) IN ()));
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c2)AND(NULL)))AND(vt0.c1)) COLLATE NOCASE) ORDER BY (CAST(1.411876071E9 AS INTEGER) IN ());
SELECT COUNT(*) FROM vt0 WHERE (CAST('lV//I溹b,' AS BLOB)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (UNLIKELY(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST('lV//I溹b,' AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (UNLIKELY(vt0.c1))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST('lV//I溹b,' AS BLOB)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (UNLIKELY(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST('lV//I溹b,' AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (UNLIKELY(vt0.c1))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST('lV//I溹b,' AS BLOB)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (UNLIKELY(vt0.c1))) DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE (0.5405586965995303);
SELECT SUM(count) FROM (SELECT ((0.5405586965995303) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (0.5405586965995303);
SELECT SUM(count) FROM (SELECT ((0.5405586965995303) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (0.5405586965995303);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('plj{	' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('plj{	' COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('plj{	' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('plj{	' COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('plj{	' COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1, vt0.c0 COLLATE BINARY, CAST(v0.c2 AS NUMERIC)))>=((((vt0.c1)+(v0.c4)), vt0.c0 COLLATE BINARY, (+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c0 COLLATE BINARY, CAST(v0.c2 AS NUMERIC)))>=((((vt0.c1)+(v0.c4)), vt0.c0 COLLATE BINARY, (+ (vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1, vt0.c0 COLLATE BINARY, CAST(v0.c2 AS NUMERIC)))>=((((vt0.c1)+(v0.c4)), vt0.c0 COLLATE BINARY, (+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c0 COLLATE BINARY, CAST(v0.c2 AS NUMERIC)))>=((((vt0.c1)+(v0.c4)), vt0.c0 COLLATE BINARY, (+ (vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1, vt0.c0 COLLATE BINARY, CAST(v0.c2 AS NUMERIC)))>=((((vt0.c1)+(v0.c4)), vt0.c0 COLLATE BINARY, (+ (vt0.c0))))));
SELECT * FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN ())) ORDER BY (((v0.c0))>=((x''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY (((v0.c0))>=((x''))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN ())) ORDER BY (((v0.c0))>=((x''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY (((v0.c0))>=((x''))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN ())) ORDER BY (((v0.c0))>=((x''))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT (((v0.c4)==(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c4)==(v0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT (((v0.c4)==(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c4)==(v0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT (((v0.c4)==(v0.c1)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY CASE WHEN '-1769859366' THEN ((v0.c1)IS(v0.c1)) ELSE ((((v0.c0)AND(v0.c0)))OR('쿵둽J2s繏RBc')) END ASC;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN '-1769859366' THEN ((v0.c1)IS(v0.c1)) ELSE ((((v0.c0)AND(v0.c0)))OR('쿵둽J2s繏RBc')) END ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY CASE WHEN '-1769859366' THEN ((v0.c1)IS(v0.c1)) ELSE ((((v0.c0)AND(v0.c0)))OR('쿵둽J2s繏RBc')) END ASC;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN '-1769859366' THEN ((v0.c1)IS(v0.c1)) ELSE ((((v0.c0)AND(v0.c0)))OR('쿵둽J2s繏RBc')) END ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY CASE WHEN '-1769859366' THEN ((v0.c1)IS(v0.c1)) ELSE ((((v0.c0)AND(v0.c0)))OR('쿵둽J2s繏RBc')) END ASC;
SELECT COUNT(*) FROM vt0 WHERE ('vBQwt');
SELECT SUM(count) FROM (SELECT (('vBQwt') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('vBQwt');
SELECT SUM(count) FROM (SELECT (('vBQwt') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('vBQwt');
SELECT * FROM vt0, v0 WHERE (((v0.c4 COLLATE NOCASE) NOT BETWEEN (CAST(v0.c2 AS BLOB)) AND (v0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c4 COLLATE NOCASE) NOT BETWEEN (CAST(v0.c2 AS BLOB)) AND (v0.c1))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((v0.c4 COLLATE NOCASE) NOT BETWEEN (CAST(v0.c2 AS BLOB)) AND (v0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c4 COLLATE NOCASE) NOT BETWEEN (CAST(v0.c2 AS BLOB)) AND (v0.c1))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((v0.c4 COLLATE NOCASE) NOT BETWEEN (CAST(v0.c2 AS BLOB)) AND (v0.c1)));
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM) ORDER BY vt0.c0;
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c1)) BETWEEN ((CHANGES())) AND ((CASE WHEN vt0.c0 THEN x'' WHEN v0.c4 THEN v0.c2 WHEN vt0.c1 THEN v0.c3 ELSE v0.c3 END)))) ORDER BY ((((vt0.c0)==(NULL)))|(((((v0.c3)OR(vt0.c1)))AND(v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((CHANGES())) AND ((CASE WHEN vt0.c0 THEN x'' WHEN v0.c4 THEN v0.c2 WHEN vt0.c1 THEN v0.c3 ELSE v0.c3 END)))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0 ORDER BY ((((vt0.c0)=(NULL)))|(((((v0.c3)OR(vt0.c1)))AND(v0.c1)))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c1)) BETWEEN ((CHANGES())) AND ((CASE WHEN vt0.c0 THEN x'' WHEN v0.c4 THEN v0.c2 WHEN vt0.c1 THEN v0.c3 ELSE v0.c3 END)))) ORDER BY ((((vt0.c0)==(NULL)))|(((((v0.c3)OR(vt0.c1)))AND(v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((CHANGES())) AND ((CASE WHEN vt0.c0 THEN x'' WHEN v0.c4 THEN v0.c2 WHEN vt0.c1 THEN v0.c3 ELSE v0.c3 END)))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0 ORDER BY ((((vt0.c0)=(NULL)))|(((((v0.c3)OR(vt0.c1)))AND(v0.c1)))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c1)) BETWEEN ((CHANGES())) AND ((CASE WHEN vt0.c0 THEN x'' WHEN v0.c4 THEN v0.c2 WHEN vt0.c1 THEN v0.c3 ELSE v0.c3 END)))) ORDER BY ((((vt0.c0)==(NULL)))|(((((v0.c3)OR(vt0.c1)))AND(v0.c1)))) DESC;
SELECT * FROM v0 WHERE ((((- (-1763933838)))==(((((NULL)AND(v0.c3)))OR(v0.c0))))) ORDER BY ((NOT (v0.c0)) IN ()), ((json_extract(v0.c3, v0.c4, v0.c1, v0.c3))IS(((v0.c0)||(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((- (-1763933838)))==(((((NULL)AND(v0.c3)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((NOT (v0.c0)) IN ()), ((json_extract(v0.c3, v0.c4, v0.c1, v0.c3))IS(((v0.c0)||(v0.c0)))));
SELECT * FROM v0 WHERE ((((- (-1763933838)))==(((((NULL)AND(v0.c3)))OR(v0.c0))))) ORDER BY ((NOT (v0.c0)) IN ()), ((json_extract(v0.c3, v0.c4, v0.c1, v0.c3))IS(((v0.c0)||(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((- (-1763933838)))==(((((NULL)AND(v0.c3)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((NOT (v0.c0)) IN ()), ((json_extract(v0.c3, v0.c4, v0.c1, v0.c3))IS(((v0.c0)||(v0.c0)))));
SELECT * FROM v0, vt0 WHERE (((0.23733027016902963)+(((v0.c4) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((0.23733027016902963)+(((v0.c4) NOT NULL)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((0.23733027016902963)+(((v0.c4) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((0.23733027016902963)+(((v0.c4) NOT NULL)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((0.23733027016902963)+(((v0.c4) NOT NULL))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((('-1991110758')OR(((v0.c1) IS FALSE))))AND(CAST(v0.c4 AS INTEGER)))) ORDER BY (CAST(v0.c0 AS REAL) IN ((+ (vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-1991110758')OR(((v0.c1) IS FALSE))))AND(CAST(v0.c4 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (CAST(v0.c0 AS REAL) IN ((+ (vt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((('-1991110758')OR(((v0.c1) IS FALSE))))AND(CAST(v0.c4 AS INTEGER)))) ORDER BY (CAST(v0.c0 AS REAL) IN ((+ (vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-1991110758')OR(((v0.c1) IS FALSE))))AND(CAST(v0.c4 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (CAST(v0.c0 AS REAL) IN ((+ (vt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((('-1991110758')OR(((v0.c1) IS FALSE))))AND(CAST(v0.c4 AS INTEGER)))) ORDER BY (CAST(v0.c0 AS REAL) IN ((+ (vt0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0))) NOTNULL) WHERE ((- ((- (v0.c2))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((- (v0.c2))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0))) NOTNULL) ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0))) NOTNULL) WHERE ((- ((- (v0.c2))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((- (v0.c2))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0))) NOTNULL) ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0))) NOTNULL) WHERE ((- ((- (v0.c2))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c2)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c2)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c2)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c1))))));
SELECT ALL * FROM vt0 WHERE (UNLIKELY(0.3882012478776995)) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(0.3882012478776995)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY vt0.c1 DESC);
SELECT ALL * FROM vt0 WHERE (UNLIKELY(0.3882012478776995)) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(0.3882012478776995)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY vt0.c1 DESC);
SELECT ALL * FROM vt0 WHERE (UNLIKELY(0.3882012478776995)) ORDER BY vt0.c1 DESC;
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c4)-(vt0.c0)))AND(CASE v0.c0  WHEN v0.c4 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 WHEN vt0.c1 THEN v0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c4)-(vt0.c0)))AND(CASE v0.c0  WHEN v0.c4 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 WHEN vt0.c1 THEN v0.c4 END))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c4)-(vt0.c0)))AND(CASE v0.c0  WHEN v0.c4 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 WHEN vt0.c1 THEN v0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c4)-(vt0.c0)))AND(CASE v0.c0  WHEN v0.c4 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 WHEN vt0.c1 THEN v0.c4 END))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c4)-(vt0.c0)))AND(CASE v0.c0  WHEN v0.c4 THEN v0.c3 WHEN v0.c4 THEN vt0.c0 WHEN vt0.c1 THEN v0.c4 END)));
SELECT ALL * FROM v0 WHERE ((- (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (v0.c0)));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c2)%(vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2)%(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c2)%(vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2)%(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c2)%(vt0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0 COLLATE RTRIM)AND((vt0.c1 IN ()))))AND(v0.c1))) ORDER BY ((((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))<=(CAST(v0.c1 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE RTRIM)AND((vt0.c1 IN ()))))AND(v0.c1))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))<=(CAST(v0.c1 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0 COLLATE RTRIM)AND((vt0.c1 IN ()))))AND(v0.c1))) ORDER BY ((((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))<=(CAST(v0.c1 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE RTRIM)AND((vt0.c1 IN ()))))AND(v0.c1))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))<=(CAST(v0.c1 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0 COLLATE RTRIM)AND((vt0.c1 IN ()))))AND(v0.c1))) ORDER BY ((((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))<=(CAST(v0.c1 AS INTEGER))) ASC  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (((CASE WHEN v0.c0 THEN v0.c1 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c1 END) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((CASE WHEN v0.c0 THEN v0.c1 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c1 END) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((CASE WHEN v0.c0 THEN v0.c1 END) ISNULL));
SELECT ALL * FROM v0 WHERE ((((((v0.c3)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))>=(((v0.c4) IS FALSE)))) ORDER BY (((v0.c3)||(v0.c4)) IN (json_array('-1527322755', v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c3)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))>=(((v0.c4) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c3)||(v0.c4)) IN (json_array('-1527322755', v0.c0))));
SELECT ALL * FROM v0 WHERE ((((((v0.c3)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))>=(((v0.c4) IS FALSE)))) ORDER BY (((v0.c3)||(v0.c4)) IN (json_array('-1527322755', v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c3)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))>=(((v0.c4) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c3)||(v0.c4)) IN (json_array('-1527322755', v0.c0))));
SELECT ALL * FROM v0 WHERE ((((((v0.c3)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))>=(((v0.c4) IS FALSE)))) ORDER BY (((v0.c3)||(v0.c4)) IN (json_array('-1527322755', v0.c0)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) NOTNULL));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (LOWER(DISTINCT ((v0.c1)==(v0.c3))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((v0.c1)==(v0.c3)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (LOWER(DISTINCT ((v0.c1)==(v0.c3))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((v0.c1)==(v0.c3)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (LOWER(DISTINCT ((v0.c1)==(v0.c3))));
SELECT ALL * FROM v0 WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c3);
SELECT * FROM vt0 INNER JOIN v0 ON (CAST(v0.c4 AS INTEGER) IN ()) WHERE ((((v0.c4 IN ()))%(CASE v0.c4  WHEN v0.c0 THEN vt0.c0 ELSE v0.c4 END)));
SELECT SUM(count) FROM (SELECT (((((v0.c4 IN ()))%(CASE v0.c4  WHEN v0.c0 THEN vt0.c0 ELSE v0.c4 END))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (CAST(v0.c4 AS INTEGER) IN ()));
SELECT * FROM vt0 INNER JOIN v0 ON (CAST(v0.c4 AS INTEGER) IN ()) WHERE ((((v0.c4 IN ()))%(CASE v0.c4  WHEN v0.c0 THEN vt0.c0 ELSE v0.c4 END)));
SELECT SUM(count) FROM (SELECT (((((v0.c4 IN ()))%(CASE v0.c4  WHEN v0.c0 THEN vt0.c0 ELSE v0.c4 END))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (CAST(v0.c4 AS INTEGER) IN ()));
SELECT * FROM vt0 INNER JOIN v0 ON (CAST(v0.c4 AS INTEGER) IN ()) WHERE ((((v0.c4 IN ()))%(CASE v0.c4  WHEN v0.c0 THEN vt0.c0 ELSE v0.c4 END)));
SELECT ALL * FROM vt0 WHERE (((0.013996991357225319) BETWEEN ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (('-336653332', vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((0.013996991357225319) BETWEEN ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (('-336653332', vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.013996991357225319) BETWEEN ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (('-336653332', vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((0.013996991357225319) BETWEEN ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (('-336653332', vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.013996991357225319) BETWEEN ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (('-336653332', vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0, v0.c1, vt0.c1)) BETWEEN ((((v0.c2)OR(v0.c1)), (~ (v0.c4)), ((0.7027337382874792) BETWEEN (v0.c4) AND (v0.c3)))) AND ((((v0.c1)<(0.031864276703467476)), CAST(v0.c2 AS INTEGER), ((v0.c2)OR('72050823')))))) ORDER BY (((((((v0.c4)) NOT BETWEEN ((v0.c3)) AND ((vt0.c0))))AND((v0.c3 IN (v0.c3)))))AND(v0.c3)) ASC  NULLS LAST, ((((vt0.c0))=((vt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c1, vt0.c1)) BETWEEN ((((v0.c2)OR(v0.c1)), (~ (v0.c4)), ((0.7027337382874792) BETWEEN (v0.c4) AND (v0.c3)))) AND ((((v0.c1)<(0.031864276703467476)), CAST(v0.c2 AS INTEGER), ((v0.c2)OR('72050823')))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((((v0.c4)) NOT BETWEEN ((v0.c3)) AND ((vt0.c0))))AND((v0.c3 IN (v0.c3)))))AND(v0.c3)) ASC  NULLS LAST, ((((vt0.c0))==((vt0.c0))) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0, v0.c1, vt0.c1)) BETWEEN ((((v0.c2)OR(v0.c1)), (~ (v0.c4)), ((0.7027337382874792) BETWEEN (v0.c4) AND (v0.c3)))) AND ((((v0.c1)<(0.031864276703467476)), CAST(v0.c2 AS INTEGER), ((v0.c2)OR('72050823')))))) ORDER BY (((((((v0.c4)) NOT BETWEEN ((v0.c3)) AND ((vt0.c0))))AND((v0.c3 IN (v0.c3)))))AND(v0.c3)) ASC  NULLS LAST, ((((vt0.c0))=((vt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c1, vt0.c1)) BETWEEN ((((v0.c2)OR(v0.c1)), (~ (v0.c4)), ((0.7027337382874792) BETWEEN (v0.c4) AND (v0.c3)))) AND ((((v0.c1)<(0.031864276703467476)), CAST(v0.c2 AS INTEGER), ((v0.c2)OR('72050823')))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((((v0.c4)) NOT BETWEEN ((v0.c3)) AND ((vt0.c0))))AND((v0.c3 IN (v0.c3)))))AND(v0.c3)) ASC  NULLS LAST, ((((vt0.c0))==((vt0.c0))) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0, v0.c1, vt0.c1)) BETWEEN ((((v0.c2)OR(v0.c1)), (~ (v0.c4)), ((0.7027337382874792) BETWEEN (v0.c4) AND (v0.c3)))) AND ((((v0.c1)<(0.031864276703467476)), CAST(v0.c2 AS INTEGER), ((v0.c2)OR('72050823')))))) ORDER BY (((((((v0.c4)) NOT BETWEEN ((v0.c3)) AND ((vt0.c0))))AND((v0.c3 IN (v0.c3)))))AND(v0.c3)) ASC  NULLS LAST, ((((vt0.c0))=((vt0.c0))) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (ROUND(((vt0.c0)!=(v0.c2)), (((v0.c4))=((v0.c3))))) ORDER BY CAST(TYPEOF(DISTINCT x'') AS TEXT) ASC, ((0.9352431056789877)!=(((vt0.c1) NOTNULL)))  NULLS FIRST, CASE CAST(vt0.c0 AS INTEGER)  WHEN (((0.3372162292442049))==((vt0.c1))) THEN (NOT (vt0.c0)) ELSE (x'' IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((ROUND(((vt0.c0)<>(v0.c2)), (((v0.c4))=((v0.c3))))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0 ORDER BY CAST(TYPEOF(DISTINCT x'') AS TEXT) ASC, ((0.9352431056789877)!=(((vt0.c1) NOTNULL)))  NULLS FIRST, CASE CAST(vt0.c0 AS INTEGER)  WHEN (((0.3372162292442049))=((vt0.c1))) THEN (NOT (vt0.c0)) ELSE (x'' IN ()) END DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (ROUND(((vt0.c0)!=(v0.c2)), (((v0.c4))=((v0.c3))))) ORDER BY CAST(TYPEOF(DISTINCT x'') AS TEXT) ASC, ((0.9352431056789877)!=(((vt0.c1) NOTNULL)))  NULLS FIRST, CASE CAST(vt0.c0 AS INTEGER)  WHEN (((0.3372162292442049))==((vt0.c1))) THEN (NOT (vt0.c0)) ELSE (x'' IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((ROUND(((vt0.c0)<>(v0.c2)), (((v0.c4))=((v0.c3))))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0 ORDER BY CAST(TYPEOF(DISTINCT x'') AS TEXT) ASC, ((0.9352431056789877)!=(((vt0.c1) NOTNULL)))  NULLS FIRST, CASE CAST(vt0.c0 AS INTEGER)  WHEN (((0.3372162292442049))=((vt0.c1))) THEN (NOT (vt0.c0)) ELSE (x'' IN ()) END DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (ROUND(((vt0.c0)!=(v0.c2)), (((v0.c4))=((v0.c3))))) ORDER BY CAST(TYPEOF(DISTINCT x'') AS TEXT) ASC, ((0.9352431056789877)!=(((vt0.c1) NOTNULL)))  NULLS FIRST, CASE CAST(vt0.c0 AS INTEGER)  WHEN (((0.3372162292442049))==((vt0.c1))) THEN (NOT (vt0.c0)) ELSE (x'' IN ()) END DESC;
SELECT * FROM v0, vt0 WHERE ((((vt0.c1 IN (v0.c0, v0.c0))) BETWEEN ((((v0.c4))>=((v0.c4)))) AND (x''))) ORDER BY 0.21335261974423236, (((v0.c0) BETWEEN (v0.c4) AND (v0.c2)) IN ())  NULLS FIRST, ((vt0.c0)<(v0.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (v0.c0, v0.c0))) BETWEEN ((((v0.c4))>=((v0.c4)))) AND (x''))) IS TRUE)  as count FROM v0, vt0 ORDER BY 0.21335261974423236, (((v0.c0) BETWEEN (v0.c4) AND (v0.c2)) IN ())  NULLS FIRST, ((vt0.c0)<(v0.c2)) COLLATE BINARY DESC);
SELECT * FROM v0, vt0 WHERE ((((vt0.c1 IN (v0.c0, v0.c0))) BETWEEN ((((v0.c4))>=((v0.c4)))) AND (x''))) ORDER BY 0.21335261974423236, (((v0.c0) BETWEEN (v0.c4) AND (v0.c2)) IN ())  NULLS FIRST, ((vt0.c0)<(v0.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (v0.c0, v0.c0))) BETWEEN ((((v0.c4))>=((v0.c4)))) AND (x''))) IS TRUE)  as count FROM v0, vt0 ORDER BY 0.21335261974423236, (((v0.c0) BETWEEN (v0.c4) AND (v0.c2)) IN ())  NULLS FIRST, ((vt0.c0)<(v0.c2)) COLLATE BINARY DESC);
SELECT * FROM v0, vt0 WHERE ((((vt0.c1 IN (v0.c0, v0.c0))) BETWEEN ((((v0.c4))>=((v0.c4)))) AND (x''))) ORDER BY 0.21335261974423236, (((v0.c0) BETWEEN (v0.c4) AND (v0.c2)) IN ())  NULLS FIRST, ((vt0.c0)<(v0.c2)) COLLATE BINARY DESC;
