-- Time: 2024/06/09 07:23:48
-- Database: database20
-- Database version: 3.40.0
-- seed value: 1054072820
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 0ms;
UPDATE vt0 SET c0='>T', c0=0.7311265451409454, c0='' WHERE ((LIKELY(vt0.c0))/(CAST(vt0.c0 AS REAL))); -- 0ms;
UPDATE vt0 SET (c0, c0)=(x'39fc3e7e', 0.7311265451409454); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (0Xfffffffffcad7c7a), (0x43d3fec0), (NULL), (0.7311265451409454); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, c1, c2); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL, x'8a36', 0.08044079145757377), (NULL, x'', x'ab2d'), (NULL, 'xT', -5.573927E7), (-5.573927E7, x'', ''), ('', 0.9624970680580548, x''); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE vt1 SET c1='', c1='-1913384001'; -- 0ms;
UPDATE vt0 SET (c0)=(0.4375258239752876) WHERE HEX((+ (vt0.c0))); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=NULL; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.94063226197705, x'', '>T'), ('AH', x'', ''), (NULL, '-55739270', '651612596'), (x'', x'085d1d6f', x''), (NULL, 'TRUE', 0x245b3d8a), ('349337539', 0x7f797f31, -1.7976931348623157E308), (x'2e82ab15', NULL, x'364d'); -- 1ms;
UPDATE vt0 SET c0=0.802537543744471 WHERE (((vt0.c0)) BETWEEN ((((vt0.c0)<>(vt0.c0)))) AND ((CAST(vt0.c0 AS INTEGER)))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='1048659151', c0='QS4m<e2j' WHERE (vt0.c0 IN ()); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO vt1(c2) VALUES ('-1913384001'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41090'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '3D<'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'')); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1314591040'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((- ('WG<+6+Uﻀ')))OR((NOT (0.36781745553805734)))))AND(NULL COLLATE BINARY)))AND((0.31836097917761164 IN ()))))AND((('') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2 sz=-1218500841 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS FALSE))<<(((NULL)||('QS4m<e2j')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 -1932341826 sz=-1913384001 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1377537915'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1377537915 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1170616390 0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=349337539 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1870123310 1137966784 sz=1048659151 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-1938481011 sz=425914009 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=2023581080 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1054411696 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1376759801 sz=-9223372036854775808 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(((((NULL)AND(0.826319481069281)))AND(1350318681))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*('7^')))<(TYPEOF('349337539'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch((('-1913384001')|('\r,')), ((x'7b33ef38')*(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1218500841 0 sz=350105763'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1377537915 sz=1350318681'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1048659151 sz=943761278'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1913384001'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=363884871 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1210700275'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 735940911 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'dc696ecd' COLLATE NOCASE))>=((NULL COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0xfffffffff26bb2e6)IS NOT(NULL)) THEN CHANGES() END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1870123310 sz=-1232286179'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM('3ErȂ\r{^/#'))%((((x'', '+9M6''탤j+ ', x''))>((NULL, NULL, '['))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=1350318681 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '609959306'  WHEN 'X4' THEN 0X548f5df0 END)<(((NULL) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<(0.7432340115254134))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-471225471 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '4 sz=-181153325 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '1011852462 sz=1054411696'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-780179981') IS TRUE) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))>>(CAST(x'' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-154420676 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '629816795 sz=299889347 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'e13d' COLLATE RTRIM) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2 sz=-189773749 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1929506059 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1076439565 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN x'' THEN 0Xffffffffebcb7d71 END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.137966784E9)OR('2')))AND(x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1079524556'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=735940911'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=349337539 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1418681840 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-255522268 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1378553839'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.826319481069281' COLLATE BINARY)AND((((((((('#a')AND(x'8b29')))OR(-1377537915)))OR('-1301102086')))AND(x'')))))AND(CASE NULL  WHEN 1350318681 THEN NULL WHEN NULL THEN '' WHEN 0Xffffffff8d2fe61f THEN 0.7981699964847462 WHEN x'696d' THEN x'' WHEN x'8d74' THEN 630618660 ELSE 0x169572f END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.43873975333501136)GLOB(0.03454459152518474)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-338985615' IN ()))OR((('-471225471')%(x'')))))AND((0Xffffffffda6ada63 IN ()))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1079524556 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2614164205311962; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=2086600856 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1671045742 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('-181153325') NOTNULL) THEN 0Xffffffff88739700 COLLATE NOCASE ELSE ((x'') NOT BETWEEN (NULL) AND (0Xffffffffafd5a029)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS('1nqJ\nusV' COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)AND(CAST('-1921636078' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-972699376 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '26661911 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')>=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)<<('')), CASE NULL  WHEN '-1109785605' THEN -1.31459104E9 END, ((x'') NOTNULL)))<(((('1881902185')!=(NULL)), LAST_INSERT_ROWID(), ((((NULL)OR(0.07979896246362994)))OR(0.3192098021491805))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=846094209'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN '鹑1' THEN NULL ELSE 0.8489778710798445 END)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(NULL)))AND('0.03454459152518474'))) BETWEEN ('-1954433374' COLLATE RTRIM) AND (((6.29816795E8) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) BETWEEN (NULL) AND (''))  WHEN (0.4294645247703288 IN ()) THEN CAST(NULL AS INTEGER) WHEN (('-1210700275')IS(x'')) THEN ((x'95d2') NOT BETWEEN (x'') AND (x'')) WHEN ((x'') NOT BETWEEN (x'') AND (x'f971')) THEN ABS(NULL) ELSE CASE WHEN 0xffffffffe4b146e2 THEN x'' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('X4' IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1696122125 sz=1583048239 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=417643872'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6023264522958638)<<(0.3047102415707671))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=2138668849 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1664785374 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1442671600 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL))|(HEX(0.8489778710798445))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 -1265670752 sz=-1060843497 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2086600856 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '766543966'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=805330189 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-297264276 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'd3d6' AS BLOB) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1898947793 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (''))) NOT BETWEEN (((-1.210700275E9)>(0.22191969657677268))) AND (NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=1529268906 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 -230165690 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1240827577'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1048659151 sz=-1594894330 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-465934444 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 2110867889'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' IN (x'')), CASE WHEN '7K팾r' THEN NULL END, 2.02358108E9))<>((x'' COLLATE BINARY, (((0.7945353563359014))<((NULL))), '429550377'))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL COLLATE BINARY)OR('⃸w~6S.\')))AND(((x'')AND(0.03454459152518474)))))AND(((NULL)GLOB(x'423d')))))OR(((x'')IS(0.3047102415707671)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1371372108 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=776267712 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(x'' AS REAL))AND(((NULL) NOT NULL))))OR(NULLIF(DISTINCT NULL, '02+~0TgB'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1464251352 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=651612596 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(DISTINCT '旳')) BETWEEN ('?P\CaH') AND (CAST(1427054003 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=968368376'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1379807064 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1265670752 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 983089063; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '硘,]4cBjh^'; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.08044079145757377)IS(0.826319481069281)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('P.2..K' IN ()))AND(((NULL)<=(-1e500)))))AND(1.048659151E9)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1378553839 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=809738920 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1929506059'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x7aa207a7) NOT BETWEEN (0.508259460413142) AND (0X7ed89b90)))IS NOT(((NULL)/(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2023581080 4 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('609959306')))GLOB((('-255522268')<>(1255988375)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-574569957 -1524756830 sz=299889347 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-458144030 sz=-1871709540 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-230026241 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.03454459152518474') NOTNULL))|((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1055183330 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1760184789'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((454845388) BETWEEN (x'05d4') AND (0.9865919689539189)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 -1265670752 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-1852046846 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM(GLOB('-1913384001', x'09c2')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1922685662 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x''))) NOT BETWEEN (((x'') NOTNULL)) AND (((0.43873975333501136)<=(0.8158928013942088)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=241350366'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE json_array_length(0Xffffffffa8b94c28, 'IB')  WHEN CASE NULL  WHEN NULL THEN -1464251352 WHEN '+G' THEN -1.926240737E9 WHEN ']' THEN 0.29834914840404914 ELSE '*c' END THEN '' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-458144030 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((('1350318681')) NOT BETWEEN ((0.02907571080380833)) AND ((',*k|6MꝾh'))))AND(((0.29142394760411194) NOT BETWEEN (x'0b61') AND (x'')))))OR(((2008845335)*(533985564)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE 't	' COLLATE RTRIM  WHEN ((x'69bc') IS TRUE) THEN ('' IN ()) ELSE CASE WHEN 0.7311265451409454 THEN '' ELSE 0.39349849373465184 END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=983089063 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '349337539'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=2128124816 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-148664485 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((((0.4294645247703288)OR(0X7d92da46)))AND(0.4874349785486958)))) AND ((CASE WHEN '%C' THEN 'E''Q<t' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '1696122125'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1054411696 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.07761851534721387))>=(('1874466512'))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.011429631590995748; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1120256036 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0X335a412d; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (x'')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=1355666771 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-215456459 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')AND(x'dd6b')))|(DATETIME(x'', -1.932341826E9, NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1464251352 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LAST_INSERT_ROWID()  WHEN ((0xffffffff8df413bf)|(NULL)) THEN (+ (NULL)) ELSE ((NULL)||(0.6553593670904161)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 0 2 sz=2086600856 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(x'') COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))>=((x''))))<>((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1197895929 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-972699376 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1870123310 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN 0.5538506886216317 WHEN 1651930659 THEN 8.0973892E8 WHEN x'' THEN x'f042' ELSE '' END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1376759801 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((~ (x''))))<(((('866754129') NOT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((572707432) NOT BETWEEN (0.5564314035634953) AND (NULL))) NOT BETWEEN ((('') NOT BETWEEN (1.529268906E9) AND (0.32231494437076114))) AND ('0.8489778710798445')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1170616390 -1917101448 sz=-1265670752 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LENGTH(0.4947184000109237) THEN ((x'')-('1552863007')) ELSE ((('943761278')) BETWEEN ((NULL)) AND ((NULL))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '384191094 299889347 sz=1255988375 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '4 sz=363884871 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(776267712 AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')IS NOT(x'')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension((('EP')/(',v')), (('-230165690') IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ ('-1852046846')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-907202235 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN 1969643131 WHEN '1898947793' THEN '<㲨\rIP_.h' WHEN '-723360223' THEN '' ELSE NULL END) NOT BETWEEN (LIKELY(NULL)) AND (0.4999357204683903 COLLATE RTRIM)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN ('0z\r糴Zu9_b') AND ('%zTZ뚢5ꕏ숛p')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('yFET') ISNULL)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'') ISNULL))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.07761851534721387 AS BLOB)) BETWEEN ((x'' IN (x'', x''))) AND ('0.7945353563359014')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (0.802537543744471) AND ('0.6023264522958638')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (-2092382453 IN ())  WHEN ((0.29834914840404914)AND(1.379807064E9)) THEN 0.42953493426405553 COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1371372108 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-1344563224 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6327429582519862)) BETWEEN (((('-1428821072') IS TRUE))) AND ((CAST(x'' AS INTEGER)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(((NULL) ISNULL))))OR(CAST('-688865086' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=472587335'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((- (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '4 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('WkBs' IN ()) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND(CASE WHEN 1376759801 THEN x'fee4' ELSE 'AL' END, HEX(DISTINCT '-318314779')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.24926960302122558 AS REAL)) BETWEEN ((((''))<=(('')))) AND (('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>=('-1834742908'))) BETWEEN (LOWER('-24824104')) AND (((((((((((((NULL)AND('OW>O斄v>&')))AND(0.24926960302122558)))AND(-2.3016569E8)))OR(x'5e79')))OR('-773391540')))AND(0.2547134196756269)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1399736947 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=2057439143'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-638552010 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=630618660 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_type('-2005690624'))|((((0.05500064267569926))=((0.8489778710798445))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1046825733 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x25967a24) NOT BETWEEN (x'216d') AND (x'')))AND(CASE WHEN x'' THEN 0xffffffffe62ec444 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1265670752') BETWEEN (x'') AND ('\r஬KDq'))) BETWEEN ((~ (0.02230901935065399))) AND ((((x'', -1210700275, NULL))>=(('3D<', x'ffd4', 0.2937583026737941))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=684246165 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((NULL)*(x'')), NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1529516243'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1344954327 sz=-1926240737 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-230165690 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('') BETWEEN ('-181153325') AND (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.4999357204683903; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')%(x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.3549187175338978; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1352044970 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN ((NOT ('F'))) AND (CAST(NULL AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1904225086) NOT NULL))IS(JULIANDAY('1671045742', '735940911', 7.35940911E8, 0.9435682325704141, x'de1d'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1929506059 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-230026241 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0.3211846960414334 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-1594894330'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE QUOTE(((x'') NOT BETWEEN (0.7400519134503086) AND (0.042874947286390075))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1473178173 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1217671892'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)IS NOT(IFNULL(DISTINCT x'', NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1540591986 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'385c')%('1R%!LQ')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL)AND(NULL)))OR(NULL)))OR(NULL)))OR(NULL)) IN (((0.7927461995833546)&('1255988375')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF((NOT ('-1371372108'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-346138762 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1152112660 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NULL IN ()) THEN CASE WHEN 'FALSE' THEN 0.04094650824392587 END ELSE ((0xffffffffe000d33e)<('1210236833')) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '1734476437 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOTNULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1379318154 sz=2128124816 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1344954327 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5300049353052807) NOT BETWEEN (0X4659104e) AND (x''))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.3402348854428754  WHEN '-349484841' THEN 0.14740714267733512 END)-(((NULL) NOT BETWEEN (NULL) AND ('-1353156854')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1603008701 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -1886348270 sz=-1214640879 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', '', 0xfffffffff832f142)) BETWEEN ((((NULL) IS TRUE), (NULL IN ()), ((0.07761851534721387) IS TRUE))) AND ((x'82f7', (((-1e500)) NOT BETWEEN ((x'')) AND ((0.25629861240153795))), NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)>>(-1e500)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=536494486 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (1.671045742E9 IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((6.09959306E8)>(0.019373557327010293)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-780179981'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=866754129 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '723219252 sz=877932556 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1871709540'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1833531399 202402296 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1841204582'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-247321571 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=980447513 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1787546853 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1059435352'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=454845388 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1141279406 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '698775742 sz=-571644284'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1043308672 sz=800541461 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-38014871'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1760184789')<(NULL))) BETWEEN (((0.20136464403891685) BETWEEN (NULL) AND (NULL))) AND ((((0.3402348854428754)) NOT BETWEEN ((0.8074764946254936)) AND ((0.5438615251608165))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1661564187 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1232286179 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'b4a7') NOT BETWEEN ('1415418090') AND ('-2039806963')))AND(((((0.3832505426505749)OR(x'28e5')))OR(x'')))))AND(((('-.%K PvJ>', x'', '-465934444')) NOT BETWEEN ((-1986659882, NULL, 0.10645000527292126)) AND ((x'', 0.6498577289649823, '-1664785374'))))))OR(((((((((NULL)OR(-1203764058)))AND(x'')))AND('0.3549187175338978')))AND('-230026241')))))OR(((((NULL)OR(0X36f9a42f)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-2070991971 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (NULL)) THEN (~ ('609959306')) WHEN (+ ('866754129')) THEN CAST('23680815' AS REAL) WHEN CAST(NULL AS BLOB) THEN '-323500922' ELSE ((1e500) NOT BETWEEN (-255522268) AND ('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1462715449 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1060211837 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '450743690 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=767565419 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1532607764 4 sz=-449566601 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-198685459 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS NUMERIC)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('865132097')+('癀bu,iok')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-14455093'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=67349812 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 1687983612 sz=-894107592 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=55403532 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=314643899'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '199821484 sz=26661911 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 4.29550377E8; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1210700275 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (1444954988))))>(('-485298805'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((((x'')AND('-230165690')))AND(x'eaf4')))) AND ((((0xffffffffba39cfba) NOT BETWEEN (0.15403429734574103) AND (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '590771825'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1076439565 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-1580810609 sz=1966592300'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-230026241'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1588044693 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1930139644 701128727 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'6259')-(0X0)))LIKE((0xffffffffd803dbcd IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-492686621 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-493201146'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1932341826 sz=-818696325 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'')<=('-9223372036854775808'))  WHEN NULL COLLATE RTRIM THEN x'' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')%('349337539')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1671045742'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 997241256 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL))!=((1686978061))) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE((+ (x'65ab')), ((((x'b2cf')AND('299889347')))OR('609959306')), ','); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('ᆺ7{6n') NOT BETWEEN (',椽4X[') AND (NULL))  WHEN ((0.6967282879928047) NOT BETWEEN (x'') AND (x'')) THEN (('+T#/') BETWEEN ('^X') AND (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN 1376759801 THEN '' ELSE '1255988375' END) NOT BETWEEN ((NULL IN ())) AND ((('2110867889') NOT BETWEEN ('') AND ('1385648101')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1563592631 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-2007054953'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '629816795 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.3832505426505749) NOTNULL) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '1665779207'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-1949312479 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1458601417 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=('-1959027739')))=((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 1864796125 2 sz=-2073141388'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((((((NULL)OR('-1187715041')))AND(NULL)))AND(x'256f8f39')))AND(NULL)) THEN ((x'')-(0.122580935567005)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-121687374 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1752876546 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1314591040 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=564229970 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=420491439'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=384399448 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)<(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '420712487 sz=835392138 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1765629882 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-646629847 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '299889347 sz=-2052534829 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=2018728473 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((JULIANDAY(0.02230901935065399, NULL, x'')) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (0Xffffffffbc139aae) AND (-1517000921))) NOT BETWEEN ((+ (4.17643872E8))) AND ((NOT (0.9925547869911232)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1264540226 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN x'' THEN '' ELSE 0.20136464403891685 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS REAL) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1841792839'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-2057145794 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=572265064 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN -1869866854 COLLATE BINARY THEN (((0.3047102415707671, 0.4034317657695574, '-1240827577')) NOT BETWEEN (('2128124816', '0.10645000527292126', 0.35830727080329394)) AND ((0.37479466025305586, '1081687874', '-530185095'))) WHEN ((((x'')OR(NULL)))AND('tgk30Yh,')) THEN CAST(x'' AS NUMERIC) WHEN ((((NULL)AND(0.8613472746495061)))OR('')) THEN CAST(0.5314385418948268 AS REAL) ELSE DATE('-1730179959', '-255522268', NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1685839446'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1145748885' COLLATE NOCASE)GLOB((('')==(0Xffffffff82071b31)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY)!=('1207126126' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=2057439143 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('k_^') BETWEEN (NULL) AND (NULL)))AND(-2.55522268E8 COLLATE BINARY)))OR(NULL COLLATE NOCASE)))OR((((((((('1076439565')AND('')))OR(NULL)))AND(0X41304fd0)))AND('')))))OR(CAST('-1594894330' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (TYPEOF(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=40690237 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2047777231 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE ''  WHEN x'a590' THEN '768676761' ELSE x'' END THEN (('1929506059') NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=943761278 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-0.0 AS INTEGER) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1175275549'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '23680815 sz=1760298389 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffff9cc56422)<>(NULL)))<(json_valid(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1926184983, NULL, NULL))=(('(KI騴Tj', -1.060843497E9, x''))))%(CASE ''  WHEN -465934444 THEN '' ELSE 0.29142394760411194 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(CAST(0X7049ad54 AS TEXT), ((0X71d190db) NOT BETWEEN (-413597400) AND (x'2f0e'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1583048239 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE STRFTIME((((NULL, -1.913384001E9, x'ee5f10bb5fa1', 0.34246436321096574, '#CE Yd'''))<(('-2102711478', '', NULL, NULL, 0.019373557327010293))), ((NULL)<<(0.8978627989127165)), x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=1583048239 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1219813833'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-761917475 4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-297264276)) BETWEEN ((NULL)) AND ((-588446025)))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY(((0.6197060838404713)!=('-1371372108')), TRIM(NULL), ((x'') IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (NULL) AND (NULL)))IS((('-1482544619') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-935441480 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')-(NULL))))>=((((((NULL)OR(0Xffffffffc6f68f21)))AND(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1941574695 sz=1024901447'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=384399448 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-465934444 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1210700275 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('unixepochZ?')!=(x'2734')) COLLATE RTRIM COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-180920474 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=196507438 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1107622660 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 0 sz=194940672'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('-305599590') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1903435837'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((NULL)AND('1127933671')))OR(x'22b8')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-169189235 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '4 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1239449802 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=277279867 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL)<>(x'4697')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.6327429582519862'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x''))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=1137966784 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-230165690 sz=1281764460'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1739992318'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=48546923 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1929506059 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1314591040 sz=-1069809882'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((LIKELY(DISTINCT 0.4294645247703288))OR(CASE 0.18337338070451292  WHEN '' THEN -1664785374 END)))OR((('R}p') NOT BETWEEN (NULL) AND (x'')))))OR(json_patch('', 0X330533ed))))AND(((0Xffffffffb272c1fa) NOT BETWEEN (x'a493') AND (0.8560505312007703)))))OR(-889647460)))OR((- ('2023581080')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.10645000527292126) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '4 sz=875528231 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=1673096507 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-230026241 sz=2086600856 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL))=((('-2005690624')OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=208429446'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1926240737 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-528981180 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1026843944 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-536816834'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '' COLLATE BINARY THEN ((('-797793501', 8.46094209E8, -1377537915))<>((0.0691139219397765, x'0249', x''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=953196170 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2091828348 sz=991112591 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1986520655 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('-2005690624' AS REAL))AND(CASE '1352444548'  WHEN '' THEN '0.0691139219397765' WHEN '1137966784' THEN 'L**Ro	' WHEN NULL THEN 0.5314385418948268 END)))AND(CASE NULL  WHEN 'उr' THEN x'9dfc' WHEN NULL THEN '2023581080' WHEN NULL THEN -1413026065 ELSE '-458144030' END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1913384001 0 sz=-1049872307'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-780179981 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1887684994 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1787371569 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1273042939 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=958950516 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('lG?' IN ())))>=(((('3L1\nXt硘n') NOTNULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1371372108') NOT NULL))<=(((NULL)LIKE(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1379807064 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-2017067202 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2 sz=-874167523 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.01146415570516468)<=(0.3728678913363682))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1114891926 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1218500841'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN x'' THEN x'9ad0' WHEN '1696122125' THEN 0Xffffffffade47085 WHEN NULL THEN x'' ELSE NULL END THEN ((NULL)LIKE(0.9961658936305368)) WHEN IFNULL(DISTINCT '\r஬KDQ', '1055183330') THEN CAST(0xffffffffbc63ab59 AS NUMERIC) WHEN (0.802537543744471 IN ()) THEN 'U*7B' ELSE ('' IN ('<Lw68庡UI', x'28d9')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN TIME(NULL, '', x'') THEN ((0Xffffffffaec71312)+('-623168674')) ELSE x'b195' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT (((('a^')OR(0.282766705964664)))AND(x'1186')), CASE WHEN '-42021920' THEN '1492723082' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2 sz=578500088 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '310736952 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-130899881'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 sz=-1689980150'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-206292050 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1184079248 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '425914009 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=106509323 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-198373043 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=350105763 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1204407404 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('')*(0.10483189702815976)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1853453942 sz=-1619030263 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-604490750'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=806806493 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '4 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '1048659151 1598663131 sz=-183111730 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE LOWER((- (x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.43873975333501136')>>(-2.3016569E8)) COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1696122125 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1524756830 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1389593985'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=718800241 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE QUOTE(3.50105763E8); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=735940911 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-230165690 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=2002030952 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((1011852462)>>('1376759801')))OR(((x'')!=(NULL)))))OR((~ (1583048239)))))OR(((NULL)GLOB('0.3832505426505749')))))OR((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1060843497'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-582863207'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 -1735048985 sz=1134148898 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=299889347'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (LIKELIHOOD(x'064f', 0.814979905657481))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '0.282766705964664'  WHEN x'e27a' THEN '#CE Yd''' END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 4 sz=-1932341826 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 2138668849 THEN NULL ELSE NULL END)||('1959307108' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-154420676 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER))>(LIKELY(DISTINCT 0Xffffffffd4d1d17e))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X3ed90bb0; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2 sz=-464977060'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ ('0.8489778710798445')))OR(NULL COLLATE BINARY)))AND(1376759801 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1076439565 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT (- (x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1845009180 sz=968368376'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=26661911 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 923854666 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-477773798 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('538631179')OR(x'')) THEN ((0.6493975186171864)<<('0.4034317657695574')) WHEN ((((NULL)AND(0.3432716937112882)))AND(x'')) THEN x'' COLLATE BINARY WHEN CAST(0x702b8c69 AS INTEGER) THEN '404538100' ELSE CASE WHEN 1076439565 THEN '349337539' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=1379807064 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (x'42bc')))OR(((x'')%(NULL)))))AND(((x'') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1218500841'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1255988375 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-707830741 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1442671600'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1172296483 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE RTRIM COLLATE RTRIM COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1103923950'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LIKELIHOOD(x'', 0.9659594775006481))OR((((((((('3D<')AND(1.379807064E9)))OR(0.3728678913363682)))AND(0.9650892772286509)))AND('1054411696')))))AND((('259168325') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-181153325 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-230165690'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=425914009 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-635886827 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((-5.74569957E8) NOT BETWEEN ('') AND (NULL)) THEN NULL ELSE ((-618486457) NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-10057889 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=748689915 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((((0.5477241956871141)AND('1255323601')))) AND ((((((x'')OR(0xffffffffb6e0f7ff)))OR(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1537380497 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 0 sz=-255522268 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.710162143779846 AS REAL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1464251352 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-230165690'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1122737783 sz=1399238497 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))>=((x'21fa'))))>(((0x14de30a3)LIKE(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) IS FALSE)  WHEN (NULL IN ('', 'y	f6')) THEN (- (0.481976106881129)) ELSE ((('陀HmzQ<\n}')) NOT BETWEEN (('314796558')) AND ((NULL))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1255988375 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '983089063 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('2121882911' IN ('69098777')) COLLATE BINARY; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=698124033 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1989992819; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json((('F﹛ojuZW')IS NOT(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(((((NULL)AND(x'f676')))AND(0.15361812040002576))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-994937887 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('W('))<=(('1419623148')))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2057439143 sz=-714827423 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1265670752'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.9937339661651828))) NOT BETWEEN (((((((((x'')AND(x'')))OR(NULL)))AND('322261551')))AND('-536816834'))) AND (NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1671045742 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=557854600 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-473985239 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1804355514 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('1054411696' IN (918570905))  WHEN ((776267712)<=(x'85c4d4ab')) THEN ((x'') NOT BETWEEN (0xffffffffed39ae2f) AND ('bA')) ELSE LIKELY(x'') END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1913384001')>('2138668849'))) BETWEEN (CASE 363884871  WHEN x'8cd2' THEN '146613910' WHEN 0x20fb9a2f THEN x'' WHEN 0.06600469687977573 THEN NULL ELSE NULL END) AND (IFNULL(DISTINCT '-1218500841', '\O}}⓷.[L'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT ('' IN (x'')), (('0.7432340115254134')%(NULL)), (('1976177149') NOT BETWEEN (0xffffffffd2ccd1fe) AND ('-471225471')), ((0.8694144724622146)<=(8.05330189E8))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-574569957)+('45?cr.'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1127871295 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (ABS(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '211967268 2 sz=-1930686451'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 2128124816 sz=1214081032 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-134398192'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((x'')OR(NULL)))AND('0.3211846960414334')))OR(0x7c94b9a4)))OR(x'')))OR((('-1314591040')!=(-1276496813)))))OR('yu.D')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '1740556089 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=720834485 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' AS REAL) COLLATE NOCASE; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1344954327 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1954433374 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((('') NOT NULL) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('')AND(0.8104585617708142)))OR(((0Xffffffffab8667d9)<=('0.10483189702815976')))))AND(((634521924) IS FALSE))))AND(((((0.5171222566101737)AND(NULL)))OR(NULL)))))OR(0x4945e2ba COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN x'8344' END) NOT BETWEEN (0.7470777466746771 COLLATE RTRIM) AND (((('bk', x'1fcf', '+T#/'))<=((x'', NULL, NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1991240453 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1519317239 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1870123310 -1739518047 sz=1670399417 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2128124816 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN (NULL)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=1696122125 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-568188012'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('414298847', 0.10483189702815976, '-972699376', '384399448', '膁vACzodP')) NOT BETWEEN ((NULL COLLATE RTRIM, ((1.137966784E9) BETWEEN ('ctruO(!)') AND (0.9537987909524565)), ((0.508259460413142)>('0.5477241956871141')), ((618944202) NOT BETWEEN (x'eb0ef1e7') AND (0.8041872139819487)), (x'' IN ()))) AND (('408738323', ('0.14740714267733512' IN ()), (x'850b' IN ('1011852462')), (('1529268906')-(0.09295446392567785)), (0.08044079145757377 IN ('-583947506', 0.010900766864971656))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('Xm qw*jr' COLLATE RTRIM) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL)&(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
PRAGMA stats; -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt0 SET c0=x'4535' WHERE ((((((((vt0.c0)OR(((vt0.c0)AND('-255522268')))))OR(json_type(vt0.c0))))AND('zo')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''), ('1377388697'), (0X5559e68a); -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (NULL); -- 11ms;
INSERT OR ROLLBACK INTO t0 VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 618362825); -- 0ms;
REINDEX  vt0; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-1106711624') ON CONFLICT DO NOTHING; -- 0ms;
ROLLBACK TRANSACTION; -- 9ms;
PRAGMA main.cell_size_check = true; -- 0ms;
DELETE FROM vt0; -- 0ms;
ANALYZE temp; -- 1ms;
PRAGMA temp.secure_delete = true; -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c47; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
PRAGMA temp.wal_autocheckpoint = 7565035827910184998; -- 0ms;
UPDATE OR REPLACE vt1 SET (c1)=(NULL); -- 0ms;
UPDATE vt0 SET c0=0X567b387c; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1188127727); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('RuE 1A9'), (NULL), (x'f148'); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i62 ON t0(c47 DESC); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA default_cache_size; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
UPDATE OR REPLACE vt1 SET c2=0.14415995612013455; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')>=((('')<<(0.3570651775295981)))); -- 0ms;
END; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
UPDATE OR IGNORE t1 SET (c47)=(0.5541847865156849) WHERE (- (t1.c47)) COLLATE NOCASE COLLATE NOCASE; -- 0ms;
REINDEX  vt1; -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
PRAGMA main.wal_autocheckpoint = 5642977450237961930; -- 0ms;
INSERT OR IGNORE INTO t1(c47) VALUES (x''); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='Q7', c0='2086600856'; -- 2ms;
UPDATE OR IGNORE vt1 SET c0='-1926240737'; -- 5ms;
INSERT INTO vt0(vt0) VALUES('merge=-914836162,15');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
UPDATE vt0 SET (c0, c0)=(x'6ac6', ''); -- 0ms;
VACUUM; -- 3ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('F﹛OJUZW'); -- 1ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(0.8613472746495061); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 1ms;
VACUUM; -- 1ms;
INSERT OR ABORT INTO vt1(c0, c1) VALUES ('', 0.15484312717138327); -- 1ms;
UPDATE OR IGNORE t1 SET (c47)=('Z') WHERE ((((((((t1.c47)AND(CAST(2.128124816E9 AS BLOB))))AND(((t1.c47) IS FALSE))))AND(((t1.c47) BETWEEN (t1.c47) AND (t1.c47)))))OR((('832672786')AND(t1.c47)))); -- 0ms;
UPDATE OR IGNORE vt1 SET c1='1716365879' WHERE (((((- (vt1.c2)))AND(((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0)))))OR((((vt1.c2, vt1.c1, 0.520173803949422)) NOT BETWEEN ((vt1.c2, vt1.c1, vt1.c1)) AND ((NULL, vt1.c2, '-631969865'))))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c2) VALUES ('-429413611', x''), (0.9576026315752143, 0.25964940041626217), (0.7114460321871773, -1.109785605E9); -- 1ms;
INSERT OR IGNORE INTO t1 VALUES ('w'), (x'7be9'), (NULL); -- 0ms;
UPDATE vt0 SET c0=1076439565; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1566040089); -- 4ms;
UPDATE OR IGNORE t1 SET c47='1041360210', c47=0.9961658936305368 WHERE (((t1.c47)!=(t1.c47)) IN ()); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'70be') WHERE ((CAST(vt0.c0 AS TEXT)) BETWEEN (HEX(vt0.c0)) AND (CAST(vt0.c0 AS BLOB))); -- 1ms;
PRAGMA integrity_check; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c47 TO c48; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '33104'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-417241612'), (x'a0fe'), ('uuLYvCe6'), (6.3061866E8), (0.77388420224971); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 9); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c1) VALUES (0.42365829514256326); -- 0ms;
PRAGMA main.application_id = 3647889821086161587; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
CREATE INDEX i70 ON t1(c48); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1427054003 unordered noskipscan'); -- 0ms;
PRAGMA busy_timeout; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR REPLACE INTO vt1(c2, c1) VALUES ('n阧e[|', NULL), ('805545222', NULL), (NULL, 0x1962ee99); -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(x'84c2') WHERE (((vt0.c0 IN ()))+(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''), (x''), (x''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '49281'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE OR ABORT vt0 SET c0='-752747084', c0='JR 썲' WHERE CASE -79876688  WHEN (~ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE json_array_length('	8', vt0.c0) END; -- 0ms;
UPDATE vt0 SET c0=-1524034042, c0=x''; -- 0ms;
ANALYZE t0; -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (NULL); -- 1ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
UPDATE vt1 SET c2=x'' WHERE (((- ('')))>(((((vt1.c1)AND(vt1.c2)))OR(vt1.c2)))); -- 3ms;
ALTER TABLE t0 ADD COLUMN c51 REAL; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -423958931);\n; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES (x'', NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((t0.c48) NOT NULL)) ORDER BY CASE (+ (vt1.c1))  WHEN CASE WHEN t0.c51 THEN t0.c48 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c2 THEN t0.c51 END THEN COALESCE(t0.c48, vt1.c2) ELSE vt1.c2 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c48) NOT NULL)) IS TRUE)  as count FROM vt1 NOT INDEXED, t0, vt0 ORDER BY CASE (+ (vt1.c1))  WHEN CASE WHEN t0.c51 THEN t0.c48 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c2 THEN t0.c51 END THEN COALESCE(t0.c48, vt1.c2) ELSE vt1.c2 END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((t0.c48) NOT NULL)) ORDER BY CASE (+ (vt1.c1))  WHEN CASE WHEN t0.c51 THEN t0.c48 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c2 THEN t0.c51 END THEN COALESCE(t0.c48, vt1.c2) ELSE vt1.c2 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c48) NOT NULL)) IS TRUE)  as count FROM vt1 NOT INDEXED, t0, vt0 ORDER BY CASE (+ (vt1.c1))  WHEN CASE WHEN t0.c51 THEN t0.c48 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c2 THEN t0.c51 END THEN COALESCE(t0.c48, vt1.c2) ELSE vt1.c2 END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((t0.c48) NOT NULL)) ORDER BY CASE (+ (vt1.c1))  WHEN CASE WHEN t0.c51 THEN t0.c48 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c2 THEN t0.c51 END THEN COALESCE(t0.c48, vt1.c2) ELSE vt1.c2 END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (t0.c51);
SELECT SUM(count) FROM (SELECT ALL ((t0.c51) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (t0.c51);
SELECT SUM(count) FROM (SELECT ALL ((t0.c51) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (t0.c51);
SELECT * FROM vt1, vt0 WHERE ((((~ (vt1.c0)))>>((((vt1.c0))=((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))>>((((vt1.c0))==((vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((~ (vt1.c0)))>>((((vt1.c0))=((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))>>((((vt1.c0))==((vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((~ (vt1.c0)))>>((((vt1.c0))=((vt1.c1))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c51)<>(t0.c48)))IS NOT(((t0.c51)+(t0.c51)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51)!=(t0.c48)))IS NOT(((t0.c51)+(t0.c51))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c51)<>(t0.c48)))IS NOT(((t0.c51)+(t0.c51)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51)!=(t0.c48)))IS NOT(((t0.c51)+(t0.c51))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c51)<>(t0.c48)))IS NOT(((t0.c51)+(t0.c51)))));
SELECT * FROM vt1 WHERE (((vt1.c0)||(vt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)||(vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0)||(vt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)||(vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0)||(vt1.c1)) COLLATE RTRIM);
SELECT * FROM t0, vt1 FULL OUTER JOIN vt0 ON vt1.c1 WHERE (CASE WHEN ((vt0.c0)GLOB(t0.c51)) THEN (('|MG') NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)GLOB(t0.c51)) THEN (('|MG') NOT NULL) END) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON vt1.c1);
SELECT * FROM t0, vt1 FULL OUTER JOIN vt0 ON vt1.c1 WHERE (CASE WHEN ((vt0.c0)GLOB(t0.c51)) THEN (('|MG') NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)GLOB(t0.c51)) THEN (('|MG') NOT NULL) END) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON vt1.c1);
SELECT * FROM t0, vt1 FULL OUTER JOIN vt0 ON vt1.c1 WHERE (CASE WHEN ((vt0.c0)GLOB(t0.c51)) THEN (('|MG') NOT NULL) END);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) BETWEEN (0Xffffffffad4e479a COLLATE BINARY) AND (((vt0.c0)*(0.24624394823976525)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) BETWEEN (0Xffffffffad4e479a COLLATE BINARY) AND (((vt0.c0)*(0.24624394823976525))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) BETWEEN (0Xffffffffad4e479a COLLATE BINARY) AND (((vt0.c0)*(0.24624394823976525)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) BETWEEN (0Xffffffffad4e479a COLLATE BINARY) AND (((vt0.c0)*(0.24624394823976525))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) BETWEEN (0Xffffffffad4e479a COLLATE BINARY) AND (((vt0.c0)*(0.24624394823976525)))));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((MAX(t0.c48, vt1.c0, t0.c51, vt0.c0))<=((NOT (vt1.c1)))) WHERE ((((((t0.c51))==((t0.c48)))) NOT BETWEEN ((t0.c51 IN ())) AND (((((vt0.c0)AND(0.9683140295375863)))AND(vt1.c2))))) ORDER BY (((('-424014148')AND(vt0.c0)))AND(CAST(t0.c51 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c51))=((t0.c48)))) NOT BETWEEN ((t0.c51 IN ())) AND (((((vt0.c0)AND(0.9683140295375863)))AND(vt1.c2))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((MAX(t0.c48, vt1.c0, t0.c51, vt0.c0))<=((NOT (vt1.c1)))) ORDER BY (((('-424014148')AND(vt0.c0)))AND(CAST(t0.c51 AS REAL))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((MAX(t0.c48, vt1.c0, t0.c51, vt0.c0))<=((NOT (vt1.c1)))) WHERE ((((((t0.c51))==((t0.c48)))) NOT BETWEEN ((t0.c51 IN ())) AND (((((vt0.c0)AND(0.9683140295375863)))AND(vt1.c2))))) ORDER BY (((('-424014148')AND(vt0.c0)))AND(CAST(t0.c51 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c51))=((t0.c48)))) NOT BETWEEN ((t0.c51 IN ())) AND (((((vt0.c0)AND(0.9683140295375863)))AND(vt1.c2))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((MAX(t0.c48, vt1.c0, t0.c51, vt0.c0))<=((NOT (vt1.c1)))) ORDER BY (((('-424014148')AND(vt0.c0)))AND(CAST(t0.c51 AS REAL))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((MAX(t0.c48, vt1.c0, t0.c51, vt0.c0))<=((NOT (vt1.c1)))) WHERE ((((((t0.c51))==((t0.c48)))) NOT BETWEEN ((t0.c51 IN ())) AND (((((vt0.c0)AND(0.9683140295375863)))AND(vt1.c2))))) ORDER BY (((('-424014148')AND(vt0.c0)))AND(CAST(t0.c51 AS REAL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)=(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((-1107875508)AND(vt0.c0)))AND(vt1.c2)))AND(vt1.c0)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND ((- (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((-1107875508)AND(vt0.c0)))AND(vt1.c2)))AND(vt1.c0)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND ((- (vt1.c2))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((-1107875508)AND(vt0.c0)))AND(vt1.c2)))AND(vt1.c0)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND ((- (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((-1107875508)AND(vt0.c0)))AND(vt1.c2)))AND(vt1.c0)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND ((- (vt1.c2))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((-1107875508)AND(vt0.c0)))AND(vt1.c2)))AND(vt1.c0)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND ((- (vt1.c2)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c1  WHEN ((vt1.c1)=(vt1.c1)) THEN -1938481011 ELSE (NOT (vt1.c2)) END) ORDER BY (((vt1.c1, vt1.c2, vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), rtreenode(vt1.c1, vt1.c2), ((vt1.c2) ISNULL))) AND (((+ (vt1.c2)), ((vt1.c0)<<(vt1.c1)), (vt1.c1 IN ())))) DESC, '805330189';
SELECT SUM(count) FROM (SELECT ((CASE vt1.c1  WHEN ((vt1.c1)=(vt1.c1)) THEN -1938481011 ELSE (NOT (vt1.c2)) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1, vt1.c2, vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), rtreenode(vt1.c1, vt1.c2), ((vt1.c2) ISNULL))) AND (((+ (vt1.c2)), ((vt1.c0)<<(vt1.c1)), (vt1.c1 IN ())))) DESC, '805330189');
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c1  WHEN ((vt1.c1)=(vt1.c1)) THEN -1938481011 ELSE (NOT (vt1.c2)) END) ORDER BY (((vt1.c1, vt1.c2, vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), rtreenode(vt1.c1, vt1.c2), ((vt1.c2) ISNULL))) AND (((+ (vt1.c2)), ((vt1.c0)<<(vt1.c1)), (vt1.c1 IN ())))) DESC, '805330189';
SELECT SUM(count) FROM (SELECT ((CASE vt1.c1  WHEN ((vt1.c1)=(vt1.c1)) THEN -1938481011 ELSE (NOT (vt1.c2)) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1, vt1.c2, vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), rtreenode(vt1.c1, vt1.c2), ((vt1.c2) ISNULL))) AND (((+ (vt1.c2)), ((vt1.c0)<<(vt1.c1)), (vt1.c1 IN ())))) DESC, '805330189');
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c1  WHEN ((vt1.c1)=(vt1.c1)) THEN -1938481011 ELSE (NOT (vt1.c2)) END) ORDER BY (((vt1.c1, vt1.c2, vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), rtreenode(vt1.c1, vt1.c2), ((vt1.c2) ISNULL))) AND (((+ (vt1.c2)), ((vt1.c0)<<(vt1.c1)), (vt1.c1 IN ())))) DESC, '805330189';
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (- (CASE t0.c48  WHEN vt0.c0 THEN vt0.c0 END)) WHERE (CAST(((t0.c48)>>(t0.c51)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c48)>>(t0.c51)) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (- (CASE t0.c48  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (- (CASE t0.c48  WHEN vt0.c0 THEN vt0.c0 END)) WHERE (CAST(((t0.c48)>>(t0.c51)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c48)>>(t0.c51)) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (- (CASE t0.c48  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (- (CASE t0.c48  WHEN vt0.c0 THEN vt0.c0 END)) WHERE (CAST(((t0.c48)>>(t0.c51)) AS REAL));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c48 COLLATE BINARY) NOT BETWEEN (CAST(t0.c51 AS TEXT)) AND (((vt0.c0) ISNULL))) WHERE (((((t0.c51)LIKE(vt0.c0)))|(TRIM(DISTINCT vt0.c0)))) ORDER BY ((((((((((((((t0.c51)AND(t0.c51)))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c51)))AND(t0.c48)))>(CASE WHEN vt0.c0 THEN t0.c51 ELSE t0.c48 END)) ASC  NULLS FIRST, (((t0.c48 IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((t0.c51)LIKE(vt0.c0)))|(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c48 COLLATE BINARY) NOT BETWEEN (CAST(t0.c51 AS TEXT)) AND (((vt0.c0) ISNULL))) ORDER BY ((((((((((((((t0.c51)AND(t0.c51)))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c51)))AND(t0.c48)))>(CASE WHEN vt0.c0 THEN t0.c51 ELSE t0.c48 END)) ASC  NULLS FIRST, (((t0.c48 IN ())) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c48 COLLATE BINARY) NOT BETWEEN (CAST(t0.c51 AS TEXT)) AND (((vt0.c0) ISNULL))) WHERE (((((t0.c51)LIKE(vt0.c0)))|(TRIM(DISTINCT vt0.c0)))) ORDER BY ((((((((((((((t0.c51)AND(t0.c51)))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c51)))AND(t0.c48)))>(CASE WHEN vt0.c0 THEN t0.c51 ELSE t0.c48 END)) ASC  NULLS FIRST, (((t0.c48 IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((t0.c51)LIKE(vt0.c0)))|(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c48 COLLATE BINARY) NOT BETWEEN (CAST(t0.c51 AS TEXT)) AND (((vt0.c0) ISNULL))) ORDER BY ((((((((((((((t0.c51)AND(t0.c51)))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c51)))AND(t0.c48)))>(CASE WHEN vt0.c0 THEN t0.c51 ELSE t0.c48 END)) ASC  NULLS FIRST, (((t0.c48 IN ())) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c48 COLLATE BINARY) NOT BETWEEN (CAST(t0.c51 AS TEXT)) AND (((vt0.c0) ISNULL))) WHERE (((((t0.c51)LIKE(vt0.c0)))|(TRIM(DISTINCT vt0.c0)))) ORDER BY ((((((((((((((t0.c51)AND(t0.c51)))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c51)))AND(t0.c48)))>(CASE WHEN vt0.c0 THEN t0.c51 ELSE t0.c48 END)) ASC  NULLS FIRST, (((t0.c48 IN ())) ISNULL);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((((((('')AND(vt1.c2)))AND(vt1.c1)))AND(((vt1.c1) IS FALSE))))AND((t0.c48 IN ())))) ORDER BY t0.c48 DESC, ((((t0.c48)>>(t0.c51)))%(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, CAST(TRIM(DISTINCT vt0.c0) AS REAL) DESC  NULLS LAST, ((((((vt1.c1)OR(vt0.c0)))AND(vt0.c0)))LIKE(vt1.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((('')AND(vt1.c2)))AND(vt1.c1)))AND(((vt1.c1) IS FALSE))))AND((t0.c48 IN ())))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY t0.c48 DESC, ((((t0.c48)>>(t0.c51)))%(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, CAST(TRIM(DISTINCT vt0.c0) AS REAL) DESC  NULLS LAST, ((((((vt1.c1)OR(vt0.c0)))AND(vt0.c0)))LIKE(vt1.c1 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((((((('')AND(vt1.c2)))AND(vt1.c1)))AND(((vt1.c1) IS FALSE))))AND((t0.c48 IN ())))) ORDER BY t0.c48 DESC, ((((t0.c48)>>(t0.c51)))%(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, CAST(TRIM(DISTINCT vt0.c0) AS REAL) DESC  NULLS LAST, ((((((vt1.c1)OR(vt0.c0)))AND(vt0.c0)))LIKE(vt1.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((('')AND(vt1.c2)))AND(vt1.c1)))AND(((vt1.c1) IS FALSE))))AND((t0.c48 IN ())))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY t0.c48 DESC, ((((t0.c48)>>(t0.c51)))%(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, CAST(TRIM(DISTINCT vt0.c0) AS REAL) DESC  NULLS LAST, ((((((vt1.c1)OR(vt0.c0)))AND(vt0.c0)))LIKE(vt1.c1 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((((((('')AND(vt1.c2)))AND(vt1.c1)))AND(((vt1.c1) IS FALSE))))AND((t0.c48 IN ())))) ORDER BY t0.c48 DESC, ((((t0.c48)>>(t0.c51)))%(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, CAST(TRIM(DISTINCT vt0.c0) AS REAL) DESC  NULLS LAST, ((((((vt1.c1)OR(vt0.c0)))AND(vt0.c0)))LIKE(vt1.c1 COLLATE RTRIM)) ASC;
SELECT COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON (+ (((vt1.c2)>=(vt1.c1)))) WHERE (((UNLIKELY('0.011429631590995748'))>(((t0.c51) BETWEEN (t0.c48) AND (vt1.c0))))) ORDER BY COALESCE((vt0.c0 IN (vt1.c2, vt1.c1)), vt1.c1) DESC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY('0.011429631590995748'))>(((t0.c51) BETWEEN (t0.c48) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON (+ (((vt1.c2)>=(vt1.c1)))) ORDER BY COALESCE((vt0.c0 IN (vt1.c2, vt1.c1)), vt1.c1) DESC  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON (+ (((vt1.c2)>=(vt1.c1)))) WHERE (((UNLIKELY('0.011429631590995748'))>(((t0.c51) BETWEEN (t0.c48) AND (vt1.c0))))) ORDER BY COALESCE((vt0.c0 IN (vt1.c2, vt1.c1)), vt1.c1) DESC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY('0.011429631590995748'))>(((t0.c51) BETWEEN (t0.c48) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON (+ (((vt1.c2)>=(vt1.c1)))) ORDER BY COALESCE((vt0.c0 IN (vt1.c2, vt1.c1)), vt1.c1) DESC  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON (+ (((vt1.c2)>=(vt1.c1)))) WHERE (((UNLIKELY('0.011429631590995748'))>(((t0.c51) BETWEEN (t0.c48) AND (vt1.c0))))) ORDER BY COALESCE((vt0.c0 IN (vt1.c2, vt1.c1)), vt1.c1) DESC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (TRIM(DISTINCT ((vt1.c1)<(vt0.c0)))) ORDER BY (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((CASE WHEN t0.c51 THEN t0.c48 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt1.c1)<(vt0.c0)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((CASE WHEN t0.c51 THEN t0.c48 END))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (TRIM(DISTINCT ((vt1.c1)<(vt0.c0)))) ORDER BY (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((CASE WHEN t0.c51 THEN t0.c48 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt1.c1)<(vt0.c0)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((CASE WHEN t0.c51 THEN t0.c48 END))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (TRIM(DISTINCT ((vt1.c1)<(vt0.c0)))) ORDER BY (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((CASE WHEN t0.c51 THEN t0.c48 END))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE ((((t0.c51 IN ())) ISNULL)) ORDER BY ((vt1.c0 COLLATE NOCASE)LIKE((+ (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c51 IN ())) ISNULL)) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)LIKE((+ (vt1.c1)))));
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE ((((t0.c51 IN ())) ISNULL)) ORDER BY ((vt1.c0 COLLATE NOCASE)LIKE((+ (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c51 IN ())) ISNULL)) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)LIKE((+ (vt1.c1)))));
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE ((((t0.c51 IN ())) ISNULL)) ORDER BY ((vt1.c0 COLLATE NOCASE)LIKE((+ (vt1.c1))));
SELECT COUNT(*) FROM t0, vt0 WHERE (819512287) ORDER BY (((t0.c48)) BETWEEN ((vt0.c0)) AND ((((((vt0.c0)OR(t0.c48)))OR(t0.c51))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((819512287) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c48)) BETWEEN ((vt0.c0)) AND ((((((vt0.c0)OR(t0.c48)))OR(t0.c51))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (819512287) ORDER BY (((t0.c48)) BETWEEN ((vt0.c0)) AND ((((((vt0.c0)OR(t0.c48)))OR(t0.c51))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((819512287) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c48)) BETWEEN ((vt0.c0)) AND ((((((vt0.c0)OR(t0.c48)))OR(t0.c51))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (819512287) ORDER BY (((t0.c48)) BETWEEN ((vt0.c0)) AND ((((((vt0.c0)OR(t0.c48)))OR(t0.c51))))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(((vt1.c1) NOTNULL) AS TEXT)) ORDER BY ((CAST(vt0.c0 AS TEXT))+(TRIM(DISTINCT vt1.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((CAST(vt0.c0 AS TEXT))+(TRIM(DISTINCT vt1.c1))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(((vt1.c1) NOTNULL) AS TEXT)) ORDER BY ((CAST(vt0.c0 AS TEXT))+(TRIM(DISTINCT vt1.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((CAST(vt0.c0 AS TEXT))+(TRIM(DISTINCT vt1.c1))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(((vt1.c1) NOTNULL) AS TEXT)) ORDER BY ((CAST(vt0.c0 AS TEXT))+(TRIM(DISTINCT vt1.c1))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((t0.c48) IS TRUE))OR(((t0.c48) NOT NULL))))AND(((t0.c48) IS FALSE)))) ORDER BY CAST(CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c48 THEN t0.c48 WHEN t0.c48 THEN x'3af0' END AS INTEGER)  NULLS FIRST, (((t0.c51)) BETWEEN ((((t0.c51) BETWEEN (t0.c48) AND (t0.c51)))) AND ((((t0.c51) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c48) IS TRUE))OR(((t0.c48) NOT NULL))))AND(((t0.c48) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c48 THEN t0.c48 WHEN t0.c48 THEN x'3af0' END AS INTEGER)  NULLS FIRST, (((t0.c51)) BETWEEN ((((t0.c51) BETWEEN (t0.c48) AND (t0.c51)))) AND ((((t0.c51) IS FALSE)))));
SELECT ALL * FROM t0 WHERE (((((((t0.c48) IS TRUE))OR(((t0.c48) NOT NULL))))AND(((t0.c48) IS FALSE)))) ORDER BY CAST(CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c48 THEN t0.c48 WHEN t0.c48 THEN x'3af0' END AS INTEGER)  NULLS FIRST, (((t0.c51)) BETWEEN ((((t0.c51) BETWEEN (t0.c48) AND (t0.c51)))) AND ((((t0.c51) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c48) IS TRUE))OR(((t0.c48) NOT NULL))))AND(((t0.c48) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c48 THEN t0.c48 WHEN t0.c48 THEN x'3af0' END AS INTEGER)  NULLS FIRST, (((t0.c51)) BETWEEN ((((t0.c51) BETWEEN (t0.c48) AND (t0.c51)))) AND ((((t0.c51) IS FALSE)))));
SELECT ALL * FROM t0 WHERE (((((((t0.c48) IS TRUE))OR(((t0.c48) NOT NULL))))AND(((t0.c48) IS FALSE)))) ORDER BY CAST(CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c48 THEN t0.c48 WHEN t0.c48 THEN x'3af0' END AS INTEGER)  NULLS FIRST, (((t0.c51)) BETWEEN ((((t0.c51) BETWEEN (t0.c48) AND (t0.c51)))) AND ((((t0.c51) IS FALSE))));
SELECT * FROM t0, vt0 WHERE (((0Xffffffffce6dcabf) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CAST(t0.c48 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffce6dcabf) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CAST(t0.c48 AS BLOB)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((0Xffffffffce6dcabf) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CAST(t0.c48 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffce6dcabf) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CAST(t0.c48 AS BLOB)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((0Xffffffffce6dcabf) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CAST(t0.c48 AS BLOB))));
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((((vt1.c2)) BETWEEN ((t0.c51)) AND ((vt0.c0)))) NOTNULL)) ORDER BY ((CAST(vt1.c2 AS BLOB))AND(((('a*是pd+'))>=((t0.c48))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c2)) BETWEEN ((t0.c51)) AND ((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((CAST(vt1.c2 AS BLOB))AND(((('a*是pd+'))>=((t0.c48))))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((((vt1.c2)) BETWEEN ((t0.c51)) AND ((vt0.c0)))) NOTNULL)) ORDER BY ((CAST(vt1.c2 AS BLOB))AND(((('a*是pd+'))>=((t0.c48))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c2)) BETWEEN ((t0.c51)) AND ((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((CAST(vt1.c2 AS BLOB))AND(((('a*是pd+'))>=((t0.c48))))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((((vt1.c2)) BETWEEN ((t0.c51)) AND ((vt0.c0)))) NOTNULL)) ORDER BY ((CAST(vt1.c2 AS BLOB))AND(((('a*是pd+'))>=((t0.c48))))) ASC  NULLS FIRST;
SELECT * FROM vt1 NOT INDEXED WHERE (((RTRIM(vt1.c2)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((RTRIM(vt1.c2)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 NOT INDEXED WHERE (((RTRIM(vt1.c2)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((RTRIM(vt1.c2)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 NOT INDEXED WHERE (((RTRIM(vt1.c2)) ISNULL));
SELECT * FROM vt0, t0 WHERE ((('3ErȂ\r{^/#') BETWEEN ((((t0.c51, t0.c48, vt0.c0, vt0.c0, t0.c48))>((t0.c48, t0.c48, t0.c51, t0.c48, x'')))) AND (((vt0.c0) NOT BETWEEN (t0.c51) AND (t0.c48)))));
SELECT SUM(count) FROM (SELECT (((('3ErȂ\r{^/#') BETWEEN ((((t0.c51, t0.c48, vt0.c0, vt0.c0, t0.c48))>((t0.c48, t0.c48, t0.c51, t0.c48, x'')))) AND (((vt0.c0) NOT BETWEEN (t0.c51) AND (t0.c48))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((('3ErȂ\r{^/#') BETWEEN ((((t0.c51, t0.c48, vt0.c0, vt0.c0, t0.c48))>((t0.c48, t0.c48, t0.c51, t0.c48, x'')))) AND (((vt0.c0) NOT BETWEEN (t0.c51) AND (t0.c48)))));
SELECT SUM(count) FROM (SELECT (((('3ErȂ\r{^/#') BETWEEN ((((t0.c51, t0.c48, vt0.c0, vt0.c0, t0.c48))>((t0.c48, t0.c48, t0.c51, t0.c48, x'')))) AND (((vt0.c0) NOT BETWEEN (t0.c51) AND (t0.c48))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((('3ErȂ\r{^/#') BETWEEN ((((t0.c51, t0.c48, vt0.c0, vt0.c0, t0.c48))>((t0.c48, t0.c48, t0.c51, t0.c48, x'')))) AND (((vt0.c0) NOT BETWEEN (t0.c51) AND (t0.c48)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CASE WHEN t0.c51 THEN t0.c51 ELSE vt0.c0 END COLLATE RTRIM CROSS JOIN vt1 ON ((((vt1.c2) NOT NULL)) NOT NULL) WHERE (((((vt1.c0 IN ())))<=(((t0.c48 IN ()))))) ORDER BY (((x'')) BETWEEN ((CASE vt1.c2  WHEN vt1.c2 THEN vt1.c2 WHEN vt0.c0 THEN vt1.c0 WHEN '2023581080' THEN vt1.c2 ELSE t0.c51 END)) AND ((((((((((vt1.c2)AND(vt0.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ())))<=(((t0.c48 IN ()))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE WHEN t0.c51 THEN t0.c51 ELSE vt0.c0 END COLLATE RTRIM CROSS JOIN vt1 ON ((((vt1.c2) NOT NULL)) NOT NULL) ORDER BY (((x'')) BETWEEN ((CASE vt1.c2  WHEN vt1.c2 THEN vt1.c2 WHEN vt0.c0 THEN vt1.c0 WHEN '2023581080' THEN vt1.c2 ELSE t0.c51 END)) AND ((((((((((vt1.c2)AND(vt0.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c2))))) DESC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CASE WHEN t0.c51 THEN t0.c51 ELSE vt0.c0 END COLLATE RTRIM CROSS JOIN vt1 ON ((((vt1.c2) NOT NULL)) NOT NULL) WHERE (((((vt1.c0 IN ())))<=(((t0.c48 IN ()))))) ORDER BY (((x'')) BETWEEN ((CASE vt1.c2  WHEN vt1.c2 THEN vt1.c2 WHEN vt0.c0 THEN vt1.c0 WHEN '2023581080' THEN vt1.c2 ELSE t0.c51 END)) AND ((((((((((vt1.c2)AND(vt0.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ())))<=(((t0.c48 IN ()))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE WHEN t0.c51 THEN t0.c51 ELSE vt0.c0 END COLLATE RTRIM CROSS JOIN vt1 ON ((((vt1.c2) NOT NULL)) NOT NULL) ORDER BY (((x'')) BETWEEN ((CASE vt1.c2  WHEN vt1.c2 THEN vt1.c2 WHEN vt0.c0 THEN vt1.c0 WHEN '2023581080' THEN vt1.c2 ELSE t0.c51 END)) AND ((((((((((vt1.c2)AND(vt0.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c2))))) DESC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CASE WHEN t0.c51 THEN t0.c51 ELSE vt0.c0 END COLLATE RTRIM CROSS JOIN vt1 ON ((((vt1.c2) NOT NULL)) NOT NULL) WHERE (((((vt1.c0 IN ())))<=(((t0.c48 IN ()))))) ORDER BY (((x'')) BETWEEN ((CASE vt1.c2  WHEN vt1.c2 THEN vt1.c2 WHEN vt0.c0 THEN vt1.c0 WHEN '2023581080' THEN vt1.c2 ELSE t0.c51 END)) AND ((((((((((vt1.c2)AND(vt0.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c2))))) DESC;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))|((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))|((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))|((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))|((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))|((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (((t0.c48))>=((t0.c51)))  WHEN (t0.c48 IN ()) THEN ((t0.c48) BETWEEN (x'8979') AND (t0.c51)) WHEN ((t0.c48) NOT BETWEEN (t0.c51) AND (t0.c51)) THEN CASE WHEN t0.c51 THEN 0.5134560100340729 END WHEN highlight(t0.c51, t0.c48, x'', t0.c51) THEN UNLIKELY(DISTINCT t0.c48) ELSE CASE WHEN t0.c51 THEN t0.c51 END END) ORDER BY t0.c48, x'4d93';
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c48))>=((t0.c51)))  WHEN (t0.c48 IN ()) THEN ((t0.c48) BETWEEN (x'8979') AND (t0.c51)) WHEN ((t0.c48) NOT BETWEEN (t0.c51) AND (t0.c51)) THEN CASE WHEN t0.c51 THEN 0.5134560100340729 END WHEN highlight(t0.c51, t0.c48, x'', t0.c51) THEN UNLIKELY(DISTINCT t0.c48) ELSE CASE WHEN t0.c51 THEN t0.c51 END END) IS TRUE)  as count FROM t0 ORDER BY t0.c48, x'4d93');
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (((t0.c48))>=((t0.c51)))  WHEN (t0.c48 IN ()) THEN ((t0.c48) BETWEEN (x'8979') AND (t0.c51)) WHEN ((t0.c48) NOT BETWEEN (t0.c51) AND (t0.c51)) THEN CASE WHEN t0.c51 THEN 0.5134560100340729 END WHEN highlight(t0.c51, t0.c48, x'', t0.c51) THEN UNLIKELY(DISTINCT t0.c48) ELSE CASE WHEN t0.c51 THEN t0.c51 END END) ORDER BY t0.c48, x'4d93';
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c48))>=((t0.c51)))  WHEN (t0.c48 IN ()) THEN ((t0.c48) BETWEEN (x'8979') AND (t0.c51)) WHEN ((t0.c48) NOT BETWEEN (t0.c51) AND (t0.c51)) THEN CASE WHEN t0.c51 THEN 0.5134560100340729 END WHEN highlight(t0.c51, t0.c48, x'', t0.c51) THEN UNLIKELY(DISTINCT t0.c48) ELSE CASE WHEN t0.c51 THEN t0.c51 END END) IS TRUE)  as count FROM t0 ORDER BY t0.c48, x'4d93');
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0, vt1, t0 WHERE ((~ (CAST(t0.c51 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(t0.c51 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ((~ (CAST(t0.c51 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(t0.c51 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ((~ (CAST(t0.c51 AS INTEGER))));
SELECT * FROM t0, vt0, vt1 WHERE ((((((vt1.c2))=((t0.c51))))=(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c2 END))) ORDER BY CAST(((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c2))=((t0.c51))))==(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c2 END))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE ((((((vt1.c2))=((t0.c51))))=(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c2 END))) ORDER BY CAST(((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c2))=((t0.c51))))==(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c2 END))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE ((((((vt1.c2))=((t0.c51))))=(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c2 END))) ORDER BY CAST(((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt1 WHERE ((- ((~ (vt1.c2)))));
SELECT SUM(count) FROM (SELECT (((- ((~ (vt1.c2))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((- ((~ (vt1.c2)))));
SELECT SUM(count) FROM (SELECT (((- ((~ (vt1.c2))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((- ((~ (vt1.c2)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c2 DESC, (~ ((NOT (vt1.c0))))  NULLS LAST, CAST(((vt1.c2)>=(vt1.c1)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c2 DESC, (~ ((NOT (vt1.c0))))  NULLS LAST, CAST(((vt1.c2)>=(vt1.c1)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c2 DESC, (~ ((NOT (vt1.c0))))  NULLS LAST, CAST(((vt1.c2)>=(vt1.c1)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c2 DESC, (~ ((NOT (vt1.c0))))  NULLS LAST, CAST(((vt1.c2)>=(vt1.c1)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c2 DESC, (~ ((NOT (vt1.c0))))  NULLS LAST, CAST(((vt1.c2)>=(vt1.c1)) AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (- ((NOT (vt1.c1)))) RIGHT OUTER JOIN vt1 ON ((('')) NOT BETWEEN ((CAST(x'' AS TEXT))) AND ((vt1.c0))) WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))LIKE(vt1.c2 COLLATE BINARY))) ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))LIKE(vt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (- ((NOT (vt1.c1)))) RIGHT OUTER JOIN vt1 ON ((('')) NOT BETWEEN ((CAST(x'' AS TEXT))) AND ((vt1.c0))) ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (- ((NOT (vt1.c1)))) RIGHT OUTER JOIN vt1 ON ((('')) NOT BETWEEN ((CAST(x'' AS TEXT))) AND ((vt1.c0))) WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))LIKE(vt1.c2 COLLATE BINARY))) ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))LIKE(vt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (- ((NOT (vt1.c1)))) RIGHT OUTER JOIN vt1 ON ((('')) NOT BETWEEN ((CAST(x'' AS TEXT))) AND ((vt1.c0))) ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c2))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((NOT (0.3192098021491805))) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.3192098021491805))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((NOT (0.3192098021491805))) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.3192098021491805))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((NOT (0.3192098021491805))) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN (((0.09851700749359993, vt1.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c2)) AND ((vt1.c2, vt1.c1, vt0.c0))) THEN ((vt1.c0)||(vt0.c0)) WHEN 0.7699419884717605 THEN (0.9292446811866578 IN ()) WHEN CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt0.c0 ELSE x'' END THEN ((((((((((((vt0.c0)AND(0.5672729812398791)))OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt1.c0)) ELSE ((vt1.c1) IS TRUE) END) ORDER BY ((((vt1.c0)||(vt0.c0)))-(((vt1.c1)AND(vt1.c2)))), ((((((vt0.c0)AND(vt1.c2)))OR(vt1.c0))) ISNULL) DESC  NULLS LAST, UNLIKELY(DISTINCT CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c2 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((0.09851700749359993, vt1.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c2)) AND ((vt1.c2, vt1.c1, vt0.c0))) THEN ((vt1.c0)||(vt0.c0)) WHEN 0.7699419884717605 THEN (0.9292446811866578 IN ()) WHEN CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt0.c0 ELSE x'' END THEN ((((((((((((vt0.c0)AND(0.5672729812398791)))OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt1.c0)) ELSE ((vt1.c1) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)||(vt0.c0)))-(((vt1.c1)AND(vt1.c2)))), ((((((vt0.c0)AND(vt1.c2)))OR(vt1.c0))) ISNULL) DESC  NULLS LAST, UNLIKELY(DISTINCT CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c2 END)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN (((0.09851700749359993, vt1.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c2)) AND ((vt1.c2, vt1.c1, vt0.c0))) THEN ((vt1.c0)||(vt0.c0)) WHEN 0.7699419884717605 THEN (0.9292446811866578 IN ()) WHEN CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt0.c0 ELSE x'' END THEN ((((((((((((vt0.c0)AND(0.5672729812398791)))OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt1.c0)) ELSE ((vt1.c1) IS TRUE) END) ORDER BY ((((vt1.c0)||(vt0.c0)))-(((vt1.c1)AND(vt1.c2)))), ((((((vt0.c0)AND(vt1.c2)))OR(vt1.c0))) ISNULL) DESC  NULLS LAST, UNLIKELY(DISTINCT CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c2 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((0.09851700749359993, vt1.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c2)) AND ((vt1.c2, vt1.c1, vt0.c0))) THEN ((vt1.c0)||(vt0.c0)) WHEN 0.7699419884717605 THEN (0.9292446811866578 IN ()) WHEN CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt0.c0 ELSE x'' END THEN ((((((((((((vt0.c0)AND(0.5672729812398791)))OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt1.c0)) ELSE ((vt1.c1) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)||(vt0.c0)))-(((vt1.c1)AND(vt1.c2)))), ((((((vt0.c0)AND(vt1.c2)))OR(vt1.c0))) ISNULL) DESC  NULLS LAST, UNLIKELY(DISTINCT CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c2 END)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN (((0.09851700749359993, vt1.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c2)) AND ((vt1.c2, vt1.c1, vt0.c0))) THEN ((vt1.c0)||(vt0.c0)) WHEN 0.7699419884717605 THEN (0.9292446811866578 IN ()) WHEN CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt0.c0 ELSE x'' END THEN ((((((((((((vt0.c0)AND(0.5672729812398791)))OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt1.c0)) ELSE ((vt1.c1) IS TRUE) END) ORDER BY ((((vt1.c0)||(vt0.c0)))-(((vt1.c1)AND(vt1.c2)))), ((((((vt0.c0)AND(vt1.c2)))OR(vt1.c0))) ISNULL) DESC  NULLS LAST, UNLIKELY(DISTINCT CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c2 END)  NULLS FIRST;
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON json_type(vt1.c0 COLLATE RTRIM) INNER JOIN t0 ON (((t0.c48 IN ()))>(((t0.c51)%(t0.c48)))) WHERE (((((vt1.c2) ISNULL))||(CAST(vt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2) ISNULL))||(CAST(vt1.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON json_type(vt1.c0 COLLATE RTRIM) INNER JOIN t0 ON (((t0.c48 IN ()))>(((t0.c51)%(t0.c48)))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON json_type(vt1.c0 COLLATE RTRIM) INNER JOIN t0 ON (((t0.c48 IN ()))>(((t0.c51)%(t0.c48)))) WHERE (((((vt1.c2) ISNULL))||(CAST(vt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2) ISNULL))||(CAST(vt1.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON json_type(vt1.c0 COLLATE RTRIM) INNER JOIN t0 ON (((t0.c48 IN ()))>(((t0.c51)%(t0.c48)))));
SELECT * FROM vt1, t0, vt0 WHERE ((+ (vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((+ (vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((+ (vt1.c1 COLLATE BINARY)));
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((((vt1.c2)) NOT BETWEEN ((t0.c51)) AND ((vt1.c0)))))>((((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2)) NOT BETWEEN ((t0.c51)) AND ((vt1.c0)))))>((((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((((vt1.c2)) NOT BETWEEN ((t0.c51)) AND ((vt1.c0)))))>((((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2)) NOT BETWEEN ((t0.c51)) AND ((vt1.c0)))))>((((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((((vt1.c2)) NOT BETWEEN ((t0.c51)) AND ((vt1.c0)))))>((((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c1))))));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (t0.c48) ORDER BY (((LOWER(DISTINCT vt1.c2), ((t0.c51) NOTNULL), TRIM(vt1.c2, t0.c51)))<=((LIKELIHOOD(DISTINCT '1079524556', 0.15186930289515865), ((vt1.c1)!=(t0.c51)), ((((vt1.c2)OR(vt0.c0)))AND(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((LOWER(DISTINCT vt1.c2), ((t0.c51) NOTNULL), TRIM(vt1.c2, t0.c51)))<=((LIKELIHOOD(DISTINCT '1079524556', 0.15186930289515865), ((vt1.c1)!=(t0.c51)), ((((vt1.c2)OR(vt0.c0)))AND(vt0.c0))))) DESC);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (t0.c48) ORDER BY (((LOWER(DISTINCT vt1.c2), ((t0.c51) NOTNULL), TRIM(vt1.c2, t0.c51)))<=((LIKELIHOOD(DISTINCT '1079524556', 0.15186930289515865), ((vt1.c1)!=(t0.c51)), ((((vt1.c2)OR(vt0.c0)))AND(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((LOWER(DISTINCT vt1.c2), ((t0.c51) NOTNULL), TRIM(vt1.c2, t0.c51)))<=((LIKELIHOOD(DISTINCT '1079524556', 0.15186930289515865), ((vt1.c1)!=(t0.c51)), ((((vt1.c2)OR(vt0.c0)))AND(vt0.c0))))) DESC);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (t0.c48) ORDER BY (((LOWER(DISTINCT vt1.c2), ((t0.c51) NOTNULL), TRIM(vt1.c2, t0.c51)))<=((LIKELIHOOD(DISTINCT '1079524556', 0.15186930289515865), ((vt1.c1)!=(t0.c51)), ((((vt1.c2)OR(vt0.c0)))AND(vt0.c0))))) DESC;
SELECT ALL * FROM vt1 WHERE ((x'' IN ())) ORDER BY (~ ((- (vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt1 ORDER BY (~ ((- (vt1.c2)))));
SELECT ALL * FROM vt1 WHERE ((x'' IN ())) ORDER BY (~ ((- (vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt1 ORDER BY (~ ((- (vt1.c2)))));
SELECT ALL * FROM vt1 WHERE ((x'' IN ())) ORDER BY (~ ((- (vt1.c2))));
SELECT ALL COUNT(*) FROM vt0 WHERE (1137966784) ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) ELSE ((vt0.c0)|(vt0.c0)) END ASC  NULLS LAST, ((~ (vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((1137966784) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) ELSE ((vt0.c0)|(vt0.c0)) END ASC  NULLS LAST, ((~ (vt0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (1137966784) ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) ELSE ((vt0.c0)|(vt0.c0)) END ASC  NULLS LAST, ((~ (vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((1137966784) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) ELSE ((vt0.c0)|(vt0.c0)) END ASC  NULLS LAST, ((~ (vt0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (1137966784) ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) ELSE ((vt0.c0)|(vt0.c0)) END ASC  NULLS LAST, ((~ (vt0.c0)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (x'072c');
SELECT SUM(count) FROM (SELECT ALL ((x'072c') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'072c');
SELECT SUM(count) FROM (SELECT ALL ((x'072c') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'072c');
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (NULL) ORDER BY ((((vt1.c0 COLLATE NOCASE)OR((x'' IN ()))))AND((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))))) DESC, CAST(((vt1.c1)>>(vt1.c2)) AS INTEGER), 0.2122272117958075 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((vt1.c0 COLLATE NOCASE)OR((x'' IN ()))))AND((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))))) DESC, CAST(((vt1.c1)>>(vt1.c2)) AS INTEGER), 0.2122272117958075 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (NULL) ORDER BY ((((vt1.c0 COLLATE NOCASE)OR((x'' IN ()))))AND((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))))) DESC, CAST(((vt1.c1)>>(vt1.c2)) AS INTEGER), 0.2122272117958075 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((vt1.c0 COLLATE NOCASE)OR((x'' IN ()))))AND((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))))) DESC, CAST(((vt1.c1)>>(vt1.c2)) AS INTEGER), 0.2122272117958075 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (NULL) ORDER BY ((((vt1.c0 COLLATE NOCASE)OR((x'' IN ()))))AND((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))))) DESC, CAST(((vt1.c1)>>(vt1.c2)) AS INTEGER), 0.2122272117958075 DESC  NULLS LAST;
SELECT * FROM vt0, vt1, t0 WHERE ((((~ (t0.c51))) NOT BETWEEN ((vt1.c1 IN ())) AND ((+ (t0.c51))))) ORDER BY ((NULL)||((vt1.c2 IN ())))  NULLS LAST, (((t0.c48)) NOT BETWEEN (((NOT (vt1.c2)))) AND ((((((vt1.c1)AND(vt0.c0)))OR('-1422033996')))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c51))) NOT BETWEEN ((vt1.c1 IN ())) AND ((+ (t0.c51))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((NULL)||((vt1.c2 IN ())))  NULLS LAST, (((t0.c48)) NOT BETWEEN (((NOT (vt1.c2)))) AND ((((((vt1.c1)AND(vt0.c0)))OR('-1422033996'))))));
SELECT * FROM vt0, vt1, t0 WHERE ((((~ (t0.c51))) NOT BETWEEN ((vt1.c1 IN ())) AND ((+ (t0.c51))))) ORDER BY ((NULL)||((vt1.c2 IN ())))  NULLS LAST, (((t0.c48)) NOT BETWEEN (((NOT (vt1.c2)))) AND ((((((vt1.c1)AND(vt0.c0)))OR('-1422033996')))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c51))) NOT BETWEEN ((vt1.c1 IN ())) AND ((+ (t0.c51))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((NULL)||((vt1.c2 IN ())))  NULLS LAST, (((t0.c48)) NOT BETWEEN (((NOT (vt1.c2)))) AND ((((((vt1.c1)AND(vt0.c0)))OR('-1422033996'))))));
SELECT * FROM vt0, vt1, t0 WHERE ((((~ (t0.c51))) NOT BETWEEN ((vt1.c1 IN ())) AND ((+ (t0.c51))))) ORDER BY ((NULL)||((vt1.c2 IN ())))  NULLS LAST, (((t0.c48)) NOT BETWEEN (((NOT (vt1.c2)))) AND ((((((vt1.c1)AND(vt0.c0)))OR('-1422033996')))));
SELECT COUNT(*) FROM t0 WHERE ('M뒑I{}&4,>') ORDER BY t0.c48 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('M뒑I{}&4,>') IS TRUE)  as count FROM t0 ORDER BY t0.c48 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ('M뒑I{}&4,>') ORDER BY t0.c48 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('M뒑I{}&4,>') IS TRUE)  as count FROM t0 ORDER BY t0.c48 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ('M뒑I{}&4,>') ORDER BY t0.c48 ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((vt1.c0)!=(vt0.c0)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<>(vt0.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt1.c0)!=(vt0.c0)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<>(vt0.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt1.c0)!=(vt0.c0)) COLLATE BINARY COLLATE BINARY);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 WHERE (CHANGES());
SELECT * FROM t0, vt0, vt1 WHERE ((((NULL IN (vt1.c1, t0.c51)))IS((((vt1.c0))>=((t0.c51))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (vt1.c1, t0.c51)))IS((((vt1.c0))>=((t0.c51)))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE ((((NULL IN (vt1.c1, t0.c51)))IS((((vt1.c0))>=((t0.c51))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (vt1.c1, t0.c51)))IS((((vt1.c0))>=((t0.c51)))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE ((((NULL IN (vt1.c1, t0.c51)))IS((((vt1.c0))>=((t0.c51))))));
SELECT * FROM vt1 WHERE (CASE ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0))  WHEN ((('䓏6h訪4C]')) BETWEEN ((vt1.c0)) AND ((vt1.c2))) THEN ((0.9705583146042263) NOT BETWEEN (vt1.c1) AND (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0))  WHEN ((('䓏6h訪4C]')) BETWEEN ((vt1.c0)) AND ((vt1.c2))) THEN ((0.9705583146042263) NOT BETWEEN (vt1.c1) AND (vt1.c1)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0))  WHEN ((('䓏6h訪4C]')) BETWEEN ((vt1.c0)) AND ((vt1.c2))) THEN ((0.9705583146042263) NOT BETWEEN (vt1.c1) AND (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0))  WHEN ((('䓏6h訪4C]')) BETWEEN ((vt1.c0)) AND ((vt1.c2))) THEN ((0.9705583146042263) NOT BETWEEN (vt1.c1) AND (vt1.c1)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0))  WHEN ((('䓏6h訪4C]')) BETWEEN ((vt1.c0)) AND ((vt1.c2))) THEN ((0.9705583146042263) NOT BETWEEN (vt1.c1) AND (vt1.c1)) END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c48);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c2, 0.9101268268638651, NULL)) BETWEEN ((CAST(vt1.c0 AS REAL), ((((((((vt1.c2)OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c2)), CAST(vt1.c2 AS INTEGER))) AND ((((vt0.c0) ISNULL), (((vt1.c0)) BETWEEN ((x'')) AND ((vt0.c0))), CASE WHEN vt1.c0 THEN vt1.c1 END))));
SELECT SUM(count) FROM (SELECT (((((vt1.c2, 0.9101268268638651, NULL)) BETWEEN ((CAST(vt1.c0 AS REAL), ((((((((vt1.c2)OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c2)), CAST(vt1.c2 AS INTEGER))) AND ((((vt0.c0) ISNULL), (((vt1.c0)) BETWEEN ((x'')) AND ((vt0.c0))), CASE WHEN vt1.c0 THEN vt1.c1 END)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c2, 0.9101268268638651, NULL)) BETWEEN ((CAST(vt1.c0 AS REAL), ((((((((vt1.c2)OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c2)), CAST(vt1.c2 AS INTEGER))) AND ((((vt0.c0) ISNULL), (((vt1.c0)) BETWEEN ((x'')) AND ((vt0.c0))), CASE WHEN vt1.c0 THEN vt1.c1 END))));
SELECT SUM(count) FROM (SELECT (((((vt1.c2, 0.9101268268638651, NULL)) BETWEEN ((CAST(vt1.c0 AS REAL), ((((((((vt1.c2)OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c2)), CAST(vt1.c2 AS INTEGER))) AND ((((vt0.c0) ISNULL), (((vt1.c0)) BETWEEN ((x'')) AND ((vt0.c0))), CASE WHEN vt1.c0 THEN vt1.c1 END)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c2, 0.9101268268638651, NULL)) BETWEEN ((CAST(vt1.c0 AS REAL), ((((((((vt1.c2)OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c2)), CAST(vt1.c2 AS INTEGER))) AND ((((vt0.c0) ISNULL), (((vt1.c0)) BETWEEN ((x'')) AND ((vt0.c0))), CASE WHEN vt1.c0 THEN vt1.c1 END))));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0) NOT NULL)))<((vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) NOT NULL)))<((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0) NOT NULL)))<((vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) NOT NULL)))<((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0) NOT NULL)))<((vt1.c0 COLLATE RTRIM))));
SELECT COUNT(*) FROM t0 INDEXED BY i70, vt0 WHERE (LOWER(DISTINCT (t0.c51 IN (vt0.c0, t0.c48)))) ORDER BY ((t0.c48) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (t0.c51 IN (vt0.c0, t0.c48)))) IS TRUE)  as count FROM t0 INDEXED BY i70, vt0 ORDER BY ((t0.c48) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INDEXED BY i70, vt0 WHERE (LOWER(DISTINCT (t0.c51 IN (vt0.c0, t0.c48)))) ORDER BY ((t0.c48) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (t0.c51 IN (vt0.c0, t0.c48)))) IS TRUE)  as count FROM t0 INDEXED BY i70, vt0 ORDER BY ((t0.c48) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INDEXED BY i70, vt0 WHERE (LOWER(DISTINCT (t0.c51 IN (vt0.c0, t0.c48)))) ORDER BY ((t0.c48) NOT NULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(x'' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(x'' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(x'' AS REAL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (0.18449364741508767) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.18449364741508767) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (0.18449364741508767) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.18449364741508767) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (0.18449364741508767) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 NATURAL JOIN t0 WHERE (t0.c48 COLLATE BINARY) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c48 COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN t0 ORDER BY (CAST(vt1.c0 AS REAL) IN ()) ASC);
SELECT COUNT(*) FROM vt1, vt0 NATURAL JOIN t0 WHERE (t0.c48 COLLATE BINARY) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c48 COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN t0 ORDER BY (CAST(vt1.c0 AS REAL) IN ()) ASC);
SELECT COUNT(*) FROM vt1, vt0 NATURAL JOIN t0 WHERE (t0.c48 COLLATE BINARY) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) ASC;
SELECT * FROM vt0 INNER JOIN t0 ON (((((~ ('-297264276')))AND(((vt1.c2)<<(vt1.c2)))))OR((~ (vt1.c2)))) RIGHT OUTER JOIN vt1 ON x'a30f' WHERE (CASE WHEN CAST(t0.c48 AS INTEGER) THEN CAST(t0.c48 AS REAL) ELSE ((vt1.c2) IS TRUE) END) ORDER BY HEX(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0)))) DESC  NULLS LAST, (((vt0.c0)) BETWEEN ((0Xffffffffbab665c1)) AND ((vt1.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c48 AS INTEGER) THEN CAST(t0.c48 AS REAL) ELSE ((vt1.c2) IS TRUE) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((((~ ('-297264276')))AND(((vt1.c2)<<(vt1.c2)))))OR((~ (vt1.c2)))) RIGHT OUTER JOIN vt1 ON x'a30f' ORDER BY HEX(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0)))) DESC  NULLS LAST, (((vt0.c0)) BETWEEN ((0xffffffffbab665c1)) AND ((vt1.c2))) DESC);
SELECT * FROM vt0 INNER JOIN t0 ON (((((~ ('-297264276')))AND(((vt1.c2)<<(vt1.c2)))))OR((~ (vt1.c2)))) RIGHT OUTER JOIN vt1 ON x'a30f' WHERE (CASE WHEN CAST(t0.c48 AS INTEGER) THEN CAST(t0.c48 AS REAL) ELSE ((vt1.c2) IS TRUE) END) ORDER BY HEX(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0)))) DESC  NULLS LAST, (((vt0.c0)) BETWEEN ((0Xffffffffbab665c1)) AND ((vt1.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c48 AS INTEGER) THEN CAST(t0.c48 AS REAL) ELSE ((vt1.c2) IS TRUE) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((((~ ('-297264276')))AND(((vt1.c2)<<(vt1.c2)))))OR((~ (vt1.c2)))) RIGHT OUTER JOIN vt1 ON x'a30f' ORDER BY HEX(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0)))) DESC  NULLS LAST, (((vt0.c0)) BETWEEN ((0xffffffffbab665c1)) AND ((vt1.c2))) DESC);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c1 IN ()))AND((+ (vt1.c1)))))OR((+ (vt0.c0))))) ORDER BY ((((((NULL)OR(vt0.c0)))AND(vt1.c0)))+(vt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1 IN ()))AND((+ (vt1.c1)))))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((NULL)OR(vt0.c0)))AND(vt1.c0)))+(vt1.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c1 IN ()))AND((+ (vt1.c1)))))OR((+ (vt0.c0))))) ORDER BY ((((((NULL)OR(vt0.c0)))AND(vt1.c0)))+(vt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1 IN ()))AND((+ (vt1.c1)))))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((NULL)OR(vt0.c0)))AND(vt1.c0)))+(vt1.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c1 IN ()))AND((+ (vt1.c1)))))OR((+ (vt0.c0))))) ORDER BY ((((((NULL)OR(vt0.c0)))AND(vt1.c0)))+(vt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))||(((t0.c48) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))||(((t0.c48) NOTNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))||(((t0.c48) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))||(((t0.c48) NOTNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))||(((t0.c48) NOTNULL))));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c1)) BETWEEN ((0.5564314035634953)) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)) BETWEEN ((0.5564314035634953)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c1)) BETWEEN ((0.5564314035634953)) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)) BETWEEN ((0.5564314035634953)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c1)) BETWEEN ((0.5564314035634953)) AND ((vt0.c0))) IN ()));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (x'') ORDER BY x'1656' DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY x'1656' DESC);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (x'') ORDER BY x'1656' DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY x'1656' DESC);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (x'') ORDER BY x'1656' DESC;
SELECT * FROM vt0, vt1 WHERE (((((((((CAST(vt1.c1 AS TEXT))OR((vt1.c1 IN (vt1.c2)))))AND((vt1.c0 IN ()))))AND(json_patch(vt1.c1, vt1.c1))))AND(((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)), (vt1.c0 IN ()), (~ (vt1.c1)))) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END, (- (vt1.c2)), ((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt1.c1 AS TEXT))OR((vt1.c1 IN (vt1.c2)))))AND((vt1.c0 IN ()))))AND(json_patch(vt1.c1, vt1.c1))))AND(((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)), (vt1.c0 IN ()), (~ (vt1.c1)))) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END, (- (vt1.c2)), ((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0))))));
SELECT * FROM vt0, vt1 WHERE (((((((((CAST(vt1.c1 AS TEXT))OR((vt1.c1 IN (vt1.c2)))))AND((vt1.c0 IN ()))))AND(json_patch(vt1.c1, vt1.c1))))AND(((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)), (vt1.c0 IN ()), (~ (vt1.c1)))) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END, (- (vt1.c2)), ((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt1.c1 AS TEXT))OR((vt1.c1 IN (vt1.c2)))))AND((vt1.c0 IN ()))))AND(json_patch(vt1.c1, vt1.c1))))AND(((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)), (vt1.c0 IN ()), (~ (vt1.c1)))) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END, (- (vt1.c2)), ((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0))))));
SELECT * FROM vt0, vt1 WHERE (((((((((CAST(vt1.c1 AS TEXT))OR((vt1.c1 IN (vt1.c2)))))AND((vt1.c0 IN ()))))AND(json_patch(vt1.c1, vt1.c1))))AND(((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)), (vt1.c0 IN ()), (~ (vt1.c1)))) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END, (- (vt1.c2)), ((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT ((((x'c914')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((x'c914')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT ((((x'c914')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((x'c914')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT ((((x'c914')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((t0.c51) IS TRUE)) IS TRUE) LEFT OUTER JOIN t0 ON ((vt1.c2 COLLATE NOCASE)/(((vt1.c1)AND(vt1.c1)))) WHERE (json_patch(json_array(vt1.c2, vt1.c0), json_insert(t0.c51, vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((json_patch(json_array(vt1.c2, vt1.c0), json_insert(t0.c51, vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((t0.c51) IS TRUE)) IS TRUE) LEFT OUTER JOIN t0 ON ((vt1.c2 COLLATE NOCASE)/(((vt1.c1)AND(vt1.c1)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((t0.c51) IS TRUE)) IS TRUE) LEFT OUTER JOIN t0 ON ((vt1.c2 COLLATE NOCASE)/(((vt1.c1)AND(vt1.c1)))) WHERE (json_patch(json_array(vt1.c2, vt1.c0), json_insert(t0.c51, vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((json_patch(json_array(vt1.c2, vt1.c0), json_insert(t0.c51, vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((t0.c51) IS TRUE)) IS TRUE) LEFT OUTER JOIN t0 ON ((vt1.c2 COLLATE NOCASE)/(((vt1.c1)AND(vt1.c1)))));
SELECT ALL * FROM vt1, t0 WHERE (((((((((((((((((t0.c51)OR(vt1.c2)))OR(t0.c51)))AND(vt1.c2)))AND(vt1.c1)))AND(CAST(vt1.c1 AS NUMERIC))))AND((((t0.c48, t0.c48, vt1.c0))>((vt1.c1, t0.c51, vt1.c2))))))OR((vt1.c1 IN (vt1.c1, vt1.c1)))))OR(((vt1.c1)||(vt1.c2))))) ORDER BY vt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((t0.c51)OR(vt1.c2)))OR(t0.c51)))AND(vt1.c2)))AND(vt1.c1)))AND(CAST(vt1.c1 AS NUMERIC))))AND((((t0.c48, t0.c48, vt1.c0))>((vt1.c1, t0.c51, vt1.c2))))))OR((vt1.c1 IN (vt1.c1, vt1.c1)))))OR(((vt1.c1)||(vt1.c2))))) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c1 DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (((((((((((((((((t0.c51)OR(vt1.c2)))OR(t0.c51)))AND(vt1.c2)))AND(vt1.c1)))AND(CAST(vt1.c1 AS NUMERIC))))AND((((t0.c48, t0.c48, vt1.c0))>((vt1.c1, t0.c51, vt1.c2))))))OR((vt1.c1 IN (vt1.c1, vt1.c1)))))OR(((vt1.c1)||(vt1.c2))))) ORDER BY vt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((t0.c51)OR(vt1.c2)))OR(t0.c51)))AND(vt1.c2)))AND(vt1.c1)))AND(CAST(vt1.c1 AS NUMERIC))))AND((((t0.c48, t0.c48, vt1.c0))>((vt1.c1, t0.c51, vt1.c2))))))OR((vt1.c1 IN (vt1.c1, vt1.c1)))))OR(((vt1.c1)||(vt1.c2))))) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c1 DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (((((((((((((((((t0.c51)OR(vt1.c2)))OR(t0.c51)))AND(vt1.c2)))AND(vt1.c1)))AND(CAST(vt1.c1 AS NUMERIC))))AND((((t0.c48, t0.c48, vt1.c0))>((vt1.c1, t0.c51, vt1.c2))))))OR((vt1.c1 IN (vt1.c1, vt1.c1)))))OR(((vt1.c1)||(vt1.c2))))) ORDER BY vt1.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ('X4' COLLATE BINARY) ORDER BY NULL COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('X4' COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY NULL COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ('X4' COLLATE BINARY) ORDER BY NULL COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('X4' COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY NULL COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ('X4' COLLATE BINARY) ORDER BY NULL COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON CASE t0.c51 COLLATE RTRIM  WHEN t0.c48 THEN (vt1.c2 IN ()) WHEN CAST(vt1.c0 AS NUMERIC) THEN CAST(t0.c51 AS NUMERIC) WHEN ((vt1.c2) IS TRUE) THEN vt1.c0 WHEN vt1.c1 COLLATE RTRIM THEN ((((vt1.c1)AND(vt1.c1)))AND(t0.c48)) WHEN vt1.c2 COLLATE NOCASE THEN (t0.c51 IN ()) END WHERE (((((t0.c51) IS TRUE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CASE t0.c51 COLLATE RTRIM  WHEN t0.c48 THEN (vt1.c2 IN ()) WHEN CAST(vt1.c0 AS NUMERIC) THEN CAST(t0.c51 AS NUMERIC) WHEN ((vt1.c2) IS TRUE) THEN vt1.c0 WHEN vt1.c1 COLLATE RTRIM THEN ((((vt1.c1)AND(vt1.c1)))AND(t0.c48)) WHEN vt1.c2 COLLATE NOCASE THEN (t0.c51 IN ()) END);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON CASE t0.c51 COLLATE RTRIM  WHEN t0.c48 THEN (vt1.c2 IN ()) WHEN CAST(vt1.c0 AS NUMERIC) THEN CAST(t0.c51 AS NUMERIC) WHEN ((vt1.c2) IS TRUE) THEN vt1.c0 WHEN vt1.c1 COLLATE RTRIM THEN ((((vt1.c1)AND(vt1.c1)))AND(t0.c48)) WHEN vt1.c2 COLLATE NOCASE THEN (t0.c51 IN ()) END WHERE (((((t0.c51) IS TRUE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CASE t0.c51 COLLATE RTRIM  WHEN t0.c48 THEN (vt1.c2 IN ()) WHEN CAST(vt1.c0 AS NUMERIC) THEN CAST(t0.c51 AS NUMERIC) WHEN ((vt1.c2) IS TRUE) THEN vt1.c0 WHEN vt1.c1 COLLATE RTRIM THEN ((((vt1.c1)AND(vt1.c1)))AND(t0.c48)) WHEN vt1.c2 COLLATE NOCASE THEN (t0.c51 IN ()) END);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON CASE t0.c51 COLLATE RTRIM  WHEN t0.c48 THEN (vt1.c2 IN ()) WHEN CAST(vt1.c0 AS NUMERIC) THEN CAST(t0.c51 AS NUMERIC) WHEN ((vt1.c2) IS TRUE) THEN vt1.c0 WHEN vt1.c1 COLLATE RTRIM THEN ((((vt1.c1)AND(vt1.c1)))AND(t0.c48)) WHEN vt1.c2 COLLATE NOCASE THEN (t0.c51 IN ()) END WHERE (((((t0.c51) IS TRUE)) NOT NULL));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) NOT BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2))) AND (((vt1.c2) IS TRUE)))) ORDER BY ((((vt1.c1)>(x'')))>(0.7400519134503086)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) NOT BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2))) AND (((vt1.c2) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)>(x'')))>(0.7400519134503086)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) NOT BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2))) AND (((vt1.c2) IS TRUE)))) ORDER BY ((((vt1.c1)>(x'')))>(0.7400519134503086)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) NOT BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2))) AND (((vt1.c2) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)>(x'')))>(0.7400519134503086)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) NOT BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2))) AND (((vt1.c2) IS TRUE)))) ORDER BY ((((vt1.c1)>(x'')))>(0.7400519134503086)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '2072699431'))))) AND ((vt0.c0)))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '2072699431'))))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '2072699431'))))) AND ((vt0.c0)))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '2072699431'))))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '2072699431'))))) AND ((vt0.c0)))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)  NULLS FIRST;
SELECT * FROM vt1 WHERE (ROUND(((vt1.c0)&(vt1.c1)), CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((ROUND(((vt1.c0)&(vt1.c1)), CAST(vt1.c0 AS REAL))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (ROUND(((vt1.c0)&(vt1.c1)), CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((ROUND(((vt1.c0)&(vt1.c1)), CAST(vt1.c0 AS REAL))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (ROUND(((vt1.c0)&(vt1.c1)), CAST(vt1.c0 AS REAL)));
SELECT ALL COUNT(*) FROM vt1 WHERE ('/~L*F%UQ8') ORDER BY (((vt1.c2 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT (('/~L*F%UQ8') IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c2 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE ('/~L*F%UQ8') ORDER BY (((vt1.c2 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT (('/~L*F%UQ8') IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c2 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE ('/~L*F%UQ8') ORDER BY (((vt1.c2 IN ())) NOTNULL);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1, vt1.c1, x'8922')) BETWEEN ((vt1.c2, NULL, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c1))))%(((vt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1, vt1.c1, x'8922')) BETWEEN ((vt1.c2, NULL, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c1))))%(((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1, vt1.c1, x'8922')) BETWEEN ((vt1.c2, NULL, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c1))))%(((vt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1, vt1.c1, x'8922')) BETWEEN ((vt1.c2, NULL, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c1))))%(((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1, vt1.c1, x'8922')) BETWEEN ((vt1.c2, NULL, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c1))))%(((vt1.c1) ISNULL))));
SELECT ALL * FROM vt1 WHERE ((((CAST(vt1.c2 AS INTEGER)))<=((((((vt1.c1)AND(vt1.c1)))OR(vt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c2 AS INTEGER)))<=((((((vt1.c1)AND(vt1.c1)))OR(vt1.c2)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((CAST(vt1.c2 AS INTEGER)))<=((((((vt1.c1)AND(vt1.c1)))OR(vt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c2 AS INTEGER)))<=((((((vt1.c1)AND(vt1.c1)))OR(vt1.c2)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((CAST(vt1.c2 AS INTEGER)))<=((((((vt1.c1)AND(vt1.c1)))OR(vt1.c2))))));
SELECT ALL * FROM t0 WHERE (((((t0.c51) ISNULL))>>(json_array(t0.c48, t0.c51)))) ORDER BY ((((((((((t0.c48)GLOB(t0.c51)))OR((((t0.c48))<>((t0.c51))))))OR('')))OR(t0.c48)))AND((~ (t0.c51)))) DESC  NULLS FIRST, t0.c48  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51) ISNULL))>>(json_array(t0.c48, t0.c51)))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c48)GLOB(t0.c51)))OR((((t0.c48))<>((t0.c51))))))OR('')))OR(t0.c48)))AND((~ (t0.c51)))) DESC  NULLS FIRST, t0.c48  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c51) ISNULL))>>(json_array(t0.c48, t0.c51)))) ORDER BY ((((((((((t0.c48)GLOB(t0.c51)))OR((((t0.c48))<>((t0.c51))))))OR('')))OR(t0.c48)))AND((~ (t0.c51)))) DESC  NULLS FIRST, t0.c48  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51) ISNULL))>>(json_array(t0.c48, t0.c51)))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c48)GLOB(t0.c51)))OR((((t0.c48))<>((t0.c51))))))OR('')))OR(t0.c48)))AND((~ (t0.c51)))) DESC  NULLS FIRST, t0.c48  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (- (((t0.c51)*(t0.c48)))) WHERE (CAST(CASE WHEN t0.c48 THEN t0.c51 WHEN vt0.c0 THEN t0.c48 WHEN t0.c48 THEN t0.c48 END AS BLOB)) ORDER BY ((t0.c48)OR((NOT (t0.c51)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c48 THEN t0.c51 WHEN vt0.c0 THEN t0.c48 WHEN t0.c48 THEN t0.c48 END AS BLOB)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (- (((t0.c51)*(t0.c48)))) ORDER BY ((t0.c48)OR((NOT (t0.c51)))) ASC);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (- (((t0.c51)*(t0.c48)))) WHERE (CAST(CASE WHEN t0.c48 THEN t0.c51 WHEN vt0.c0 THEN t0.c48 WHEN t0.c48 THEN t0.c48 END AS BLOB)) ORDER BY ((t0.c48)OR((NOT (t0.c51)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c48 THEN t0.c51 WHEN vt0.c0 THEN t0.c48 WHEN t0.c48 THEN t0.c48 END AS BLOB)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (- (((t0.c51)*(t0.c48)))) ORDER BY ((t0.c48)OR((NOT (t0.c51)))) ASC);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (- (((t0.c51)*(t0.c48)))) WHERE (CAST(CASE WHEN t0.c48 THEN t0.c51 WHEN vt0.c0 THEN t0.c48 WHEN t0.c48 THEN t0.c48 END AS BLOB)) ORDER BY ((t0.c48)OR((NOT (t0.c51)))) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('sSh7F8\nj') ORDER BY IFNULL(DISTINCT ((vt0.c0) BETWEEN (vt1.c2) AND (vt1.c0)), (vt1.c2 IN (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (('sSh7F8\nj') IS TRUE)  as count FROM vt0, vt1 ORDER BY IFNULL(DISTINCT ((vt0.c0) BETWEEN (vt1.c2) AND (vt1.c0)), (vt1.c2 IN (vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('sSh7F8\nj') ORDER BY IFNULL(DISTINCT ((vt0.c0) BETWEEN (vt1.c2) AND (vt1.c0)), (vt1.c2 IN (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (('sSh7F8\nj') IS TRUE)  as count FROM vt0, vt1 ORDER BY IFNULL(DISTINCT ((vt0.c0) BETWEEN (vt1.c2) AND (vt1.c0)), (vt1.c2 IN (vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('sSh7F8\nj') ORDER BY IFNULL(DISTINCT ((vt0.c0) BETWEEN (vt1.c2) AND (vt1.c0)), (vt1.c2 IN (vt0.c0))) DESC;
SELECT * FROM vt1, vt0, t0 WHERE ((((((vt1.c2, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, t0.c51, t0.c51)) AND ((vt1.c2, vt0.c0, t0.c48)))) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c2) NOT NULL)))) ORDER BY (((- (vt0.c0)))AND(json_array_length(vt1.c1, vt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, t0.c51, t0.c51)) AND ((vt1.c2, vt0.c0, t0.c48)))) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c2) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((- (vt0.c0)))AND(json_array_length(vt1.c1, vt1.c1))) DESC);
SELECT * FROM vt1, vt0, t0 WHERE ((((((vt1.c2, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, t0.c51, t0.c51)) AND ((vt1.c2, vt0.c0, t0.c48)))) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c2) NOT NULL)))) ORDER BY (((- (vt0.c0)))AND(json_array_length(vt1.c1, vt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, t0.c51, t0.c51)) AND ((vt1.c2, vt0.c0, t0.c48)))) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c2) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((- (vt0.c0)))AND(json_array_length(vt1.c1, vt1.c1))) DESC);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((((((((((t0.c48)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c51))) IS TRUE) LEFT OUTER JOIN vt1 ON CASE WHEN (- (vt1.c0)) THEN ((vt1.c0)GLOB(x'')) ELSE ((t0.c48)-(vt1.c1)) END WHERE ((0.451703839961593 IN ())) ORDER BY ((((((vt1.c2)>(vt1.c1)))AND((((t0.c48)) BETWEEN ((vt1.c2)) AND ((vt1.c2))))))AND(vt1.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((0.451703839961593 IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((((((t0.c48)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c51))) IS TRUE) LEFT OUTER JOIN vt1 ON CASE WHEN (- (vt1.c0)) THEN ((vt1.c0)GLOB(x'')) ELSE ((t0.c48)-(vt1.c1)) END ORDER BY ((((((vt1.c2)>(vt1.c1)))AND((((t0.c48)) BETWEEN ((vt1.c2)) AND ((vt1.c2))))))AND(vt1.c0 COLLATE BINARY)) DESC);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((((((((((t0.c48)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c51))) IS TRUE) LEFT OUTER JOIN vt1 ON CASE WHEN (- (vt1.c0)) THEN ((vt1.c0)GLOB(x'')) ELSE ((t0.c48)-(vt1.c1)) END WHERE ((0.451703839961593 IN ())) ORDER BY ((((((vt1.c2)>(vt1.c1)))AND((((t0.c48)) BETWEEN ((vt1.c2)) AND ((vt1.c2))))))AND(vt1.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((0.451703839961593 IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((((((t0.c48)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c51))) IS TRUE) LEFT OUTER JOIN vt1 ON CASE WHEN (- (vt1.c0)) THEN ((vt1.c0)GLOB(x'')) ELSE ((t0.c48)-(vt1.c1)) END ORDER BY ((((((vt1.c2)>(vt1.c1)))AND((((t0.c48)) BETWEEN ((vt1.c2)) AND ((vt1.c2))))))AND(vt1.c0 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM vt1, t0 WHERE ((- (((t0.c51) BETWEEN (t0.c48) AND (t0.c48))))) ORDER BY ((CAST(vt1.c2 AS BLOB))%(t0.c48)), (NOT (t0.c51 COLLATE RTRIM)), TOTAL_CHANGES() ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c51) BETWEEN (t0.c48) AND (t0.c48))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((CAST(vt1.c2 AS BLOB))%(t0.c48)), (NOT (t0.c51 COLLATE RTRIM)), TOTAL_CHANGES() ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE ((- (((t0.c51) BETWEEN (t0.c48) AND (t0.c48))))) ORDER BY ((CAST(vt1.c2 AS BLOB))%(t0.c48)), (NOT (t0.c51 COLLATE RTRIM)), TOTAL_CHANGES() ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c51) BETWEEN (t0.c48) AND (t0.c48))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((CAST(vt1.c2 AS BLOB))%(t0.c48)), (NOT (t0.c51 COLLATE RTRIM)), TOTAL_CHANGES() ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE ((- (((t0.c51) BETWEEN (t0.c48) AND (t0.c48))))) ORDER BY ((CAST(vt1.c2 AS BLOB))%(t0.c48)), (NOT (t0.c51 COLLATE RTRIM)), TOTAL_CHANGES() ASC;
SELECT * FROM vt1, vt0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON vt1.c0 WHERE ((+ (''))) ORDER BY (vt1.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (''))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON vt1.c0 ORDER BY (vt1.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON vt1.c0 WHERE ((+ (''))) ORDER BY (vt1.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (''))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON vt1.c0 ORDER BY (vt1.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON vt1.c0 WHERE ((+ (''))) ORDER BY (vt1.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, t0 WHERE (((0.7146353470559271)>>(((t0.c48)*(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.7146353470559271)>>(((t0.c48)*(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((0.7146353470559271)>>(((t0.c48)*(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.7146353470559271)>>(((t0.c48)*(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((0.7146353470559271)>>(((t0.c48)*(vt1.c1)))));
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((vt0.c0)&(t0.c51)))<>((((t0.c51)) BETWEEN ((t0.c48)) AND ((vt1.c1)))))) ORDER BY '-1170616390' ASC, ((((vt1.c2)=(t0.c51)))IS(((((vt1.c2)OR(vt1.c1)))AND(t0.c51)))) DESC, (((t0.c51, vt1.c2 COLLATE BINARY, ((vt1.c1) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c51)), vt0.c0))>((x'9865', (~ (vt1.c0)), vt1.c1, CASE WHEN t0.c48 THEN vt1.c2 END, CAST(vt1.c1 AS INTEGER)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(t0.c51)))<>((((t0.c51)) BETWEEN ((t0.c48)) AND ((vt1.c1)))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, vt1 ORDER BY '-1170616390' ASC, ((((vt1.c2)=(t0.c51)))IS(((((vt1.c2)OR(vt1.c1)))AND(t0.c51)))) DESC, (((t0.c51, vt1.c2 COLLATE BINARY, ((vt1.c1) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c51)), vt0.c0))>((x'9865', (~ (vt1.c0)), vt1.c1, CASE WHEN t0.c48 THEN vt1.c2 END, CAST(vt1.c1 AS INTEGER)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((vt0.c0)&(t0.c51)))<>((((t0.c51)) BETWEEN ((t0.c48)) AND ((vt1.c1)))))) ORDER BY '-1170616390' ASC, ((((vt1.c2)=(t0.c51)))IS(((((vt1.c2)OR(vt1.c1)))AND(t0.c51)))) DESC, (((t0.c51, vt1.c2 COLLATE BINARY, ((vt1.c1) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c51)), vt0.c0))>((x'9865', (~ (vt1.c0)), vt1.c1, CASE WHEN t0.c48 THEN vt1.c2 END, CAST(vt1.c1 AS INTEGER)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(t0.c51)))<>((((t0.c51)) BETWEEN ((t0.c48)) AND ((vt1.c1)))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, vt1 ORDER BY '-1170616390' ASC, ((((vt1.c2)=(t0.c51)))IS(((((vt1.c2)OR(vt1.c1)))AND(t0.c51)))) DESC, (((t0.c51, vt1.c2 COLLATE BINARY, ((vt1.c1) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c51)), vt0.c0))>((x'9865', (~ (vt1.c0)), vt1.c1, CASE WHEN t0.c48 THEN vt1.c2 END, CAST(vt1.c1 AS INTEGER)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((vt0.c0)&(t0.c51)))<>((((t0.c51)) BETWEEN ((t0.c48)) AND ((vt1.c1)))))) ORDER BY '-1170616390' ASC, ((((vt1.c2)=(t0.c51)))IS(((((vt1.c2)OR(vt1.c1)))AND(t0.c51)))) DESC, (((t0.c51, vt1.c2 COLLATE BINARY, ((vt1.c1) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c51)), vt0.c0))>((x'9865', (~ (vt1.c0)), vt1.c1, CASE WHEN t0.c48 THEN vt1.c2 END, CAST(vt1.c1 AS INTEGER)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((vt1.c2) IS TRUE))/(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))))) ORDER BY (NULL IN (t0.c48 COLLATE BINARY, 0X4adcdc97)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2) IS TRUE))/(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (NULL IN (t0.c48 COLLATE BINARY, 0X4adcdc97)) DESC);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((vt1.c2) IS TRUE))/(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))))) ORDER BY (NULL IN (t0.c48 COLLATE BINARY, 0X4adcdc97)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2) IS TRUE))/(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (NULL IN (t0.c48 COLLATE BINARY, 0X4adcdc97)) DESC);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((vt1.c2) IS TRUE))/(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))))) ORDER BY (NULL IN (t0.c48 COLLATE BINARY, 0X4adcdc97)) DESC;
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c51 COLLATE BINARY)OR(((vt0.c0)AND(vt1.c0)))))AND(LIKELIHOOD(DISTINCT vt0.c0, 0.6589957159817209))) CROSS JOIN vt1 ON (((vt1.c1, vt1.c2, '', vt0.c0, t0.c48)) BETWEEN (((((t0.c51)) BETWEEN ((vt1.c1)) AND ((0.09802665868222249))), LIKELIHOOD(vt0.c0, 0.9902968119470571), ((t0.c48) IS TRUE), ((t0.c51) IS FALSE), t0.c48 COLLATE RTRIM)) AND ((t0.c51, ((vt1.c1)<(vt1.c2)), (~ (0)), 323416589, ((((vt1.c0)OR('SK7y')))OR(t0.c48))))) WHERE ((((((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))OR(((((t0.c48)OR(vt1.c2)))AND(t0.c51)))))AND(((vt0.c0)IS NOT(vt0.c0))))) ORDER BY CASE NULL  WHEN '-1429387750' THEN vt0.c0 ELSE vt1.c2 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))OR(((((t0.c48)OR(vt1.c2)))AND(t0.c51)))))AND(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c51 COLLATE BINARY)OR(((vt0.c0)AND(vt1.c0)))))AND(LIKELIHOOD(DISTINCT vt0.c0, 0.6589957159817209))) CROSS JOIN vt1 ON (((vt1.c1, vt1.c2, '', vt0.c0, t0.c48)) BETWEEN (((((t0.c51)) BETWEEN ((vt1.c1)) AND ((0.09802665868222249))), LIKELIHOOD(vt0.c0, 0.9902968119470571), ((t0.c48) IS TRUE), ((t0.c51) IS FALSE), t0.c48 COLLATE RTRIM)) AND ((t0.c51, ((vt1.c1)<(vt1.c2)), (~ (0)), 323416589, ((((vt1.c0)OR('SK7y')))OR(t0.c48))))) ORDER BY CASE NULL  WHEN '-1429387750' THEN vt0.c0 ELSE vt1.c2 END COLLATE BINARY  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c51 COLLATE BINARY)OR(((vt0.c0)AND(vt1.c0)))))AND(LIKELIHOOD(DISTINCT vt0.c0, 0.6589957159817209))) CROSS JOIN vt1 ON (((vt1.c1, vt1.c2, '', vt0.c0, t0.c48)) BETWEEN (((((t0.c51)) BETWEEN ((vt1.c1)) AND ((0.09802665868222249))), LIKELIHOOD(vt0.c0, 0.9902968119470571), ((t0.c48) IS TRUE), ((t0.c51) IS FALSE), t0.c48 COLLATE RTRIM)) AND ((t0.c51, ((vt1.c1)<(vt1.c2)), (~ (0)), 323416589, ((((vt1.c0)OR('SK7y')))OR(t0.c48))))) WHERE ((((((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))OR(((((t0.c48)OR(vt1.c2)))AND(t0.c51)))))AND(((vt0.c0)IS NOT(vt0.c0))))) ORDER BY CASE NULL  WHEN '-1429387750' THEN vt0.c0 ELSE vt1.c2 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))OR(((((t0.c48)OR(vt1.c2)))AND(t0.c51)))))AND(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c51 COLLATE BINARY)OR(((vt0.c0)AND(vt1.c0)))))AND(LIKELIHOOD(DISTINCT vt0.c0, 0.6589957159817209))) CROSS JOIN vt1 ON (((vt1.c1, vt1.c2, '', vt0.c0, t0.c48)) BETWEEN (((((t0.c51)) BETWEEN ((vt1.c1)) AND ((0.09802665868222249))), LIKELIHOOD(vt0.c0, 0.9902968119470571), ((t0.c48) IS TRUE), ((t0.c51) IS FALSE), t0.c48 COLLATE RTRIM)) AND ((t0.c51, ((vt1.c1)<(vt1.c2)), (~ (0)), 323416589, ((((vt1.c0)OR('SK7y')))OR(t0.c48))))) ORDER BY CASE NULL  WHEN '-1429387750' THEN vt0.c0 ELSE vt1.c2 END COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 END) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((((((CAST(vt0.c0 AS BLOB))OR(((t0.c51) NOT NULL))))OR(x'0f7c')))OR(vt1.c0)))AND(CAST(vt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS BLOB))OR(((t0.c51) NOT NULL))))OR(x'0f7c')))OR(vt1.c0)))AND(CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((((((CAST(vt0.c0 AS BLOB))OR(((t0.c51) NOT NULL))))OR(x'0f7c')))OR(vt1.c0)))AND(CAST(vt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS BLOB))OR(((t0.c51) NOT NULL))))OR(x'0f7c')))OR(vt1.c0)))AND(CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((((((CAST(vt0.c0 AS BLOB))OR(((t0.c51) NOT NULL))))OR(x'0f7c')))OR(vt1.c0)))AND(CAST(vt1.c1 AS NUMERIC))));
SELECT ALL * FROM t0, vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)) ORDER BY t0.c48 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM t0, vt1 ORDER BY t0.c48 ASC);
SELECT ALL * FROM t0, vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)) ORDER BY t0.c48 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM t0, vt1 ORDER BY t0.c48 ASC);
SELECT ALL * FROM t0, vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)) ORDER BY t0.c48 ASC;
SELECT * FROM t0, vt1 WHERE (CASE ((((t0.c48)AND(vt1.c0)))OR(t0.c48))  WHEN ABS(t0.c51) THEN ((((t0.c51)OR(t0.c48)))AND(vt1.c0)) END) ORDER BY (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND (((((vt1.c1, vt1.c2, vt1.c2))>((vt1.c0, vt1.c1, vt1.c1)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c48)AND(vt1.c0)))OR(t0.c48))  WHEN ABS(t0.c51) THEN ((((t0.c51)OR(t0.c48)))AND(vt1.c0)) END) IS TRUE)  as count FROM t0, vt1 ORDER BY (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND (((((vt1.c1, vt1.c2, vt1.c2))>((vt1.c0, vt1.c1, vt1.c1)))))) DESC  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (CASE ((((t0.c48)AND(vt1.c0)))OR(t0.c48))  WHEN ABS(t0.c51) THEN ((((t0.c51)OR(t0.c48)))AND(vt1.c0)) END) ORDER BY (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND (((((vt1.c1, vt1.c2, vt1.c2))>((vt1.c0, vt1.c1, vt1.c1)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c48)AND(vt1.c0)))OR(t0.c48))  WHEN ABS(t0.c51) THEN ((((t0.c51)OR(t0.c48)))AND(vt1.c0)) END) IS TRUE)  as count FROM t0, vt1 ORDER BY (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND (((((vt1.c1, vt1.c2, vt1.c2))>((vt1.c0, vt1.c1, vt1.c1)))))) DESC  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (CASE ((((t0.c48)AND(vt1.c0)))OR(t0.c48))  WHEN ABS(t0.c51) THEN ((((t0.c51)OR(t0.c48)))AND(vt1.c0)) END) ORDER BY (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND (((((vt1.c1, vt1.c2, vt1.c2))>((vt1.c0, vt1.c1, vt1.c1)))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE ((~ (t0.c48 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c48 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((~ (t0.c48 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c48 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((~ (t0.c48 COLLATE RTRIM)));
SELECT * FROM t0 WHERE (((((t0.c48)%(t0.c51))) IS FALSE)) ORDER BY ((((t0.c48 IN ()), (NOT (t0.c51)), ((t0.c48) BETWEEN (t0.c51) AND (t0.c48))))>((t0.c48 COLLATE BINARY, COALESCE(DISTINCT '-282835739', t0.c51), IFNULL(t0.c48, t0.c48)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)%(t0.c51))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c48 IN ()), (NOT (t0.c51)), ((t0.c48) BETWEEN (t0.c51) AND (t0.c48))))>((t0.c48 COLLATE BINARY, COALESCE(DISTINCT '-282835739', t0.c51), IFNULL(t0.c48, t0.c48)))) DESC);
SELECT * FROM t0 WHERE (((((t0.c48)%(t0.c51))) IS FALSE)) ORDER BY ((((t0.c48 IN ()), (NOT (t0.c51)), ((t0.c48) BETWEEN (t0.c51) AND (t0.c48))))>((t0.c48 COLLATE BINARY, COALESCE(DISTINCT '-282835739', t0.c51), IFNULL(t0.c48, t0.c48)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)%(t0.c51))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c48 IN ()), (NOT (t0.c51)), ((t0.c48) BETWEEN (t0.c51) AND (t0.c48))))>((t0.c48 COLLATE BINARY, COALESCE(DISTINCT '-282835739', t0.c51), IFNULL(t0.c48, t0.c48)))) DESC);
SELECT * FROM t0 WHERE (((((t0.c48)%(t0.c51))) IS FALSE)) ORDER BY ((((t0.c48 IN ()), (NOT (t0.c51)), ((t0.c48) BETWEEN (t0.c51) AND (t0.c48))))>((t0.c48 COLLATE BINARY, COALESCE(DISTINCT '-282835739', t0.c51), IFNULL(t0.c48, t0.c48)))) DESC;
SELECT ALL * FROM vt1 INDEXED BY i70, t0, vt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 INDEXED BY i70, t0, vt0);
SELECT ALL * FROM vt1 INDEXED BY i70, t0, vt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 INDEXED BY i70, t0, vt0);
SELECT * FROM vt0, vt1, t0 WHERE (((((((((((t0.c51)OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c51)OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1))) ISNULL)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((((((((((t0.c51)OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c51)OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1))) ISNULL)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((((((((((t0.c51)OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1))) ISNULL));
SELECT ALL * FROM vt1 NOT INDEXED, vt0 WHERE ((~ (vt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1 NOT INDEXED, vt0 WHERE ((~ (vt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1 NOT INDEXED, vt0 WHERE ((~ (vt1.c2 COLLATE RTRIM)));
SELECT * FROM vt0, t0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (((('9MaO2p+') IS TRUE)) BETWEEN (t0.c48 COLLATE RTRIM) AND (((((vt0.c0)AND(NULL)))AND(t0.c48)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (((('9MaO2p+') IS TRUE)) BETWEEN (t0.c48 COLLATE RTRIM) AND (((((vt0.c0)AND(NULL)))AND(t0.c48)))) DESC);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (((('9MaO2p+') IS TRUE)) BETWEEN (t0.c48 COLLATE RTRIM) AND (((((vt0.c0)AND(NULL)))AND(t0.c48)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (((('9MaO2p+') IS TRUE)) BETWEEN (t0.c48 COLLATE RTRIM) AND (((((vt0.c0)AND(NULL)))AND(t0.c48)))) DESC);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (((('9MaO2p+') IS TRUE)) BETWEEN (t0.c48 COLLATE RTRIM) AND (((((vt0.c0)AND(NULL)))AND(t0.c48)))) DESC;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((((((vt1.c2)AND(vt1.c0)))OR(vt0.c0)))OR((NOT (vt1.c1)))))OR(((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c2)AND(vt1.c0)))OR(vt0.c0)))OR((NOT (vt1.c1)))))OR(((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((((((vt1.c2)AND(vt1.c0)))OR(vt0.c0)))OR((NOT (vt1.c1)))))OR(((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c2)AND(vt1.c0)))OR(vt0.c0)))OR((NOT (vt1.c1)))))OR(((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((((((vt1.c2)AND(vt1.c0)))OR(vt0.c0)))OR((NOT (vt1.c1)))))OR(((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))));
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((NULL) NOT BETWEEN (vt1.c2) AND (vt1.c2))  WHEN '1255988375' THEN vt1.c1 WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) THEN SUBSTR(1850373179, vt1.c2) WHEN '\*w*HN.t9' THEN ((vt1.c0)%(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((NULL) NOT BETWEEN (vt1.c2) AND (vt1.c2))  WHEN '1255988375' THEN vt1.c1 WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) THEN SUBSTR(1850373179, vt1.c2) WHEN '\*w*HN.t9' THEN ((vt1.c0)%(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((NULL) NOT BETWEEN (vt1.c2) AND (vt1.c2))  WHEN '1255988375' THEN vt1.c1 WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) THEN SUBSTR(1850373179, vt1.c2) WHEN '\*w*HN.t9' THEN ((vt1.c0)%(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((NULL) NOT BETWEEN (vt1.c2) AND (vt1.c2))  WHEN '1255988375' THEN vt1.c1 WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) THEN SUBSTR(1850373179, vt1.c2) WHEN '\*w*HN.t9' THEN ((vt1.c0)%(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((NULL) NOT BETWEEN (vt1.c2) AND (vt1.c2))  WHEN '1255988375' THEN vt1.c1 WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) THEN SUBSTR(1850373179, vt1.c2) WHEN '\*w*HN.t9' THEN ((vt1.c0)%(vt1.c0)) END);
SELECT * FROM t0 WHERE ((NOT (t0.c51))) ORDER BY (((t0.c51)) BETWEEN ((0.4553417651697763)) AND ((((t0.c48) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c51))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c51)) BETWEEN ((0.4553417651697763)) AND ((((t0.c48) IS TRUE))))  NULLS FIRST);
SELECT * FROM t0 WHERE ((NOT (t0.c51))) ORDER BY (((t0.c51)) BETWEEN ((0.4553417651697763)) AND ((((t0.c48) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c51))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c51)) BETWEEN ((0.4553417651697763)) AND ((((t0.c48) IS TRUE))))  NULLS FIRST);
SELECT * FROM t0 WHERE ((NOT (t0.c51))) ORDER BY (((t0.c51)) BETWEEN ((0.4553417651697763)) AND ((((t0.c48) IS TRUE))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c48 IN (t0.c48)) IN ())) ORDER BY ((((t0.c51 IN ()), (+ (t0.c51)), t0.c51, (((t0.c48, t0.c48, t0.c51)) BETWEEN ((t0.c51, t0.c48, t0.c51)) AND ((t0.c51, t0.c48, t0.c48))), ((t0.c51) ISNULL)))<((IFNULL(NULL, '99)잧'), ((((((((t0.c48)OR(t0.c51)))OR(t0.c48)))AND(t0.c51)))OR(t0.c51)), CAST(t0.c48 AS INTEGER), DATETIME(t0.c48, t0.c51, t0.c48), ((t0.c48)!=(t0.c48))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c48 IN (t0.c48)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c51 IN ()), (+ (t0.c51)), t0.c51, (((t0.c48, t0.c48, t0.c51)) BETWEEN ((t0.c51, t0.c48, t0.c51)) AND ((t0.c51, t0.c48, t0.c48))), ((t0.c51) ISNULL)))<((IFNULL(NULL, '99)잧'), ((((((((t0.c48)OR(t0.c51)))OR(t0.c48)))AND(t0.c51)))OR(t0.c51)), CAST(t0.c48 AS INTEGER), DATETIME(t0.c48, t0.c51, t0.c48), ((t0.c48)<>(t0.c48))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c48 IN (t0.c48)) IN ())) ORDER BY ((((t0.c51 IN ()), (+ (t0.c51)), t0.c51, (((t0.c48, t0.c48, t0.c51)) BETWEEN ((t0.c51, t0.c48, t0.c51)) AND ((t0.c51, t0.c48, t0.c48))), ((t0.c51) ISNULL)))<((IFNULL(NULL, '99)잧'), ((((((((t0.c48)OR(t0.c51)))OR(t0.c48)))AND(t0.c51)))OR(t0.c51)), CAST(t0.c48 AS INTEGER), DATETIME(t0.c48, t0.c51, t0.c48), ((t0.c48)!=(t0.c48))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c48 IN (t0.c48)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c51 IN ()), (+ (t0.c51)), t0.c51, (((t0.c48, t0.c48, t0.c51)) BETWEEN ((t0.c51, t0.c48, t0.c51)) AND ((t0.c51, t0.c48, t0.c48))), ((t0.c51) ISNULL)))<((IFNULL(NULL, '99)잧'), ((((((((t0.c48)OR(t0.c51)))OR(t0.c48)))AND(t0.c51)))OR(t0.c51)), CAST(t0.c48 AS INTEGER), DATETIME(t0.c48, t0.c51, t0.c48), ((t0.c48)<>(t0.c48))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c48 IN (t0.c48)) IN ())) ORDER BY ((((t0.c51 IN ()), (+ (t0.c51)), t0.c51, (((t0.c48, t0.c48, t0.c51)) BETWEEN ((t0.c51, t0.c48, t0.c51)) AND ((t0.c51, t0.c48, t0.c48))), ((t0.c51) ISNULL)))<((IFNULL(NULL, '99)잧'), ((((((((t0.c48)OR(t0.c51)))OR(t0.c48)))AND(t0.c51)))OR(t0.c51)), CAST(t0.c48 AS INTEGER), DATETIME(t0.c48, t0.c51, t0.c48), ((t0.c48)!=(t0.c48))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)AND(NULL)))AND(t0.c48))) NOT BETWEEN ((vt1.c0 IN ())) AND ('554961232' COLLATE NOCASE)) WHERE ((NOT (((vt1.c2)!=(vt1.c1))))) ORDER BY CASE WHEN ((vt1.c2)+(vt1.c2)) THEN ((((((((vt1.c0)OR(t0.c51)))AND(vt1.c0)))OR(x'')))OR(vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c2)!=(vt1.c1))))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)AND(NULL)))AND(t0.c48))) NOT BETWEEN ((vt1.c0 IN ())) AND ('554961232' COLLATE NOCASE)) ORDER BY CASE WHEN ((vt1.c2)+(vt1.c2)) THEN ((((((((vt1.c0)OR(t0.c51)))AND(vt1.c0)))OR(x'')))OR(vt1.c0)) END ASC);
SELECT COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)AND(NULL)))AND(t0.c48))) NOT BETWEEN ((vt1.c0 IN ())) AND ('554961232' COLLATE NOCASE)) WHERE ((NOT (((vt1.c2)!=(vt1.c1))))) ORDER BY CASE WHEN ((vt1.c2)+(vt1.c2)) THEN ((((((((vt1.c0)OR(t0.c51)))AND(vt1.c0)))OR(x'')))OR(vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c2)!=(vt1.c1))))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)AND(NULL)))AND(t0.c48))) NOT BETWEEN ((vt1.c0 IN ())) AND ('554961232' COLLATE NOCASE)) ORDER BY CASE WHEN ((vt1.c2)+(vt1.c2)) THEN ((((((((vt1.c0)OR(t0.c51)))AND(vt1.c0)))OR(x'')))OR(vt1.c0)) END ASC);
SELECT COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)AND(NULL)))AND(t0.c48))) NOT BETWEEN ((vt1.c0 IN ())) AND ('554961232' COLLATE NOCASE)) WHERE ((NOT (((vt1.c2)!=(vt1.c1))))) ORDER BY CASE WHEN ((vt1.c2)+(vt1.c2)) THEN ((((((((vt1.c0)OR(t0.c51)))AND(vt1.c0)))OR(x'')))OR(vt1.c0)) END ASC;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c48 IN ())) NOT NULL)) ORDER BY (((t0.c48) NOT NULL) IN (((t0.c51)AND(t0.c48)), ((t0.c51) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48 IN ())) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c48) NOT NULL) IN (((t0.c51)AND(t0.c48)), ((t0.c51) IS FALSE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c48 IN ())) NOT NULL)) ORDER BY (((t0.c48) NOT NULL) IN (((t0.c51)AND(t0.c48)), ((t0.c51) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48 IN ())) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c48) NOT NULL) IN (((t0.c51)AND(t0.c48)), ((t0.c51) IS FALSE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c48 IN ())) NOT NULL)) ORDER BY (((t0.c48) NOT NULL) IN (((t0.c51)AND(t0.c48)), ((t0.c51) IS FALSE))) ASC  NULLS FIRST;
SELECT * FROM t0, vt0, vt1 WHERE (CAST((((vt0.c0))<=((vt1.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<=((vt1.c0))) AS REAL)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (CAST((((vt0.c0))<=((vt1.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<=((vt1.c0))) AS REAL)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (CAST((((vt0.c0))<=((vt1.c0))) AS REAL));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((+ (t0.c48))) NOT BETWEEN (((t0.c51)IS NOT(vt0.c0))) AND (((vt0.c0)>>(t0.c51))))) ORDER BY ((vt0.c0)<>(t0.c51)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c48))) NOT BETWEEN (((t0.c51)IS NOT(vt0.c0))) AND (((vt0.c0)>>(t0.c51))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0)!=(t0.c51)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((+ (t0.c48))) NOT BETWEEN (((t0.c51)IS NOT(vt0.c0))) AND (((vt0.c0)>>(t0.c51))))) ORDER BY ((vt0.c0)<>(t0.c51)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c48))) NOT BETWEEN (((t0.c51)IS NOT(vt0.c0))) AND (((vt0.c0)>>(t0.c51))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0)!=(t0.c51)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((+ (t0.c48))) NOT BETWEEN (((t0.c51)IS NOT(vt0.c0))) AND (((vt0.c0)>>(t0.c51))))) ORDER BY ((vt0.c0)<>(t0.c51)) COLLATE RTRIM;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt1.c2) BETWEEN (t0.c51) AND (t0.c48)))&((vt1.c1 IN ()))) INNER JOIN vt1 ON (((vt1.c1)/(vt1.c2)) IN ()) WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE BINARY) ORDER BY vt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((vt1.c2) BETWEEN (t0.c51) AND (t0.c48)))&((vt1.c1 IN ()))) INNER JOIN vt1 ON (((vt1.c1)/(vt1.c2)) IN ()) ORDER BY vt1.c2  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt1.c2) BETWEEN (t0.c51) AND (t0.c48)))&((vt1.c1 IN ()))) INNER JOIN vt1 ON (((vt1.c1)/(vt1.c2)) IN ()) WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE BINARY) ORDER BY vt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((vt1.c2) BETWEEN (t0.c51) AND (t0.c48)))&((vt1.c1 IN ()))) INNER JOIN vt1 ON (((vt1.c1)/(vt1.c2)) IN ()) ORDER BY vt1.c2  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt1.c2) BETWEEN (t0.c51) AND (t0.c48)))&((vt1.c1 IN ()))) INNER JOIN vt1 ON (((vt1.c1)/(vt1.c2)) IN ()) WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE BINARY) ORDER BY vt1.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((json_remove(vt0.c0, t0.c48))<=((~ (vt0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((json_remove(vt0.c0, t0.c48))<=((~ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((json_remove(vt0.c0, t0.c48))<=((~ (vt0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((json_remove(vt0.c0, t0.c48))<=((~ (vt0.c0)))));
SELECT * FROM t0, vt1 WHERE (CASE WHEN ((vt1.c2)-(vt1.c1)) THEN highlight(vt1.c2, vt1.c2, vt1.c2, t0.c48) ELSE ((vt1.c0)IS NOT(t0.c51)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c2)-(vt1.c1)) THEN highlight(vt1.c2, vt1.c2, vt1.c2, t0.c48) ELSE ((vt1.c0)IS NOT(t0.c51)) END) IS TRUE)  as count FROM t0 NOT INDEXED, vt1);
SELECT * FROM t0, vt1 WHERE (CASE WHEN ((vt1.c2)-(vt1.c1)) THEN highlight(vt1.c2, vt1.c2, vt1.c2, t0.c48) ELSE ((vt1.c0)IS NOT(t0.c51)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c2)-(vt1.c1)) THEN highlight(vt1.c2, vt1.c2, vt1.c2, t0.c48) ELSE ((vt1.c0)IS NOT(t0.c51)) END) IS TRUE)  as count FROM t0 NOT INDEXED, vt1);
SELECT * FROM t0, vt1 WHERE (CASE WHEN ((vt1.c2)-(vt1.c1)) THEN highlight(vt1.c2, vt1.c2, vt1.c2, t0.c48) ELSE ((vt1.c0)IS NOT(t0.c51)) END);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON x'' RIGHT OUTER JOIN t0 ON ((CAST(vt1.c1 AS NUMERIC))<(((vt1.c0) NOTNULL))) WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((NULL)) AND (('-1371372108'))) THEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((t0.c51) BETWEEN (vt0.c0) AND (vt1.c2)) THEN '' WHEN ((vt1.c0) ISNULL) THEN vt1.c0 END) ORDER BY vt1.c2 DESC  NULLS LAST, LTRIM(vt1.c1 COLLATE BINARY), (((((((t0.c48, vt1.c1, vt1.c1, t0.c48, t0.c51)) BETWEEN ((vt1.c0, vt1.c2, t0.c51, vt1.c2, vt1.c1)) AND ((vt1.c1, vt1.c2, vt1.c2, vt1.c0, vt0.c0))))OR(t0.c48 COLLATE RTRIM)))OR(((vt1.c0)>>(vt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) NOT BETWEEN ((NULL)) AND (('-1371372108'))) THEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((t0.c51) BETWEEN (vt0.c0) AND (vt1.c2)) THEN '' WHEN ((vt1.c0) ISNULL) THEN vt1.c0 END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON x'' RIGHT OUTER JOIN t0 ON ((CAST(vt1.c1 AS NUMERIC))<(((vt1.c0) NOTNULL))) ORDER BY vt1.c2 DESC  NULLS LAST, LTRIM(vt1.c1 COLLATE BINARY), (((((((t0.c48, vt1.c1, vt1.c1, t0.c48, t0.c51)) BETWEEN ((vt1.c0, vt1.c2, t0.c51, vt1.c2, vt1.c1)) AND ((vt1.c1, vt1.c2, vt1.c2, vt1.c0, vt0.c0))))OR(t0.c48 COLLATE RTRIM)))OR(((vt1.c0)>>(vt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON x'' RIGHT OUTER JOIN t0 ON ((CAST(vt1.c1 AS NUMERIC))<(((vt1.c0) NOTNULL))) WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((NULL)) AND (('-1371372108'))) THEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((t0.c51) BETWEEN (vt0.c0) AND (vt1.c2)) THEN '' WHEN ((vt1.c0) ISNULL) THEN vt1.c0 END) ORDER BY vt1.c2 DESC  NULLS LAST, LTRIM(vt1.c1 COLLATE BINARY), (((((((t0.c48, vt1.c1, vt1.c1, t0.c48, t0.c51)) BETWEEN ((vt1.c0, vt1.c2, t0.c51, vt1.c2, vt1.c1)) AND ((vt1.c1, vt1.c2, vt1.c2, vt1.c0, vt0.c0))))OR(t0.c48 COLLATE RTRIM)))OR(((vt1.c0)>>(vt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) NOT BETWEEN ((NULL)) AND (('-1371372108'))) THEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((t0.c51) BETWEEN (vt0.c0) AND (vt1.c2)) THEN '' WHEN ((vt1.c0) ISNULL) THEN vt1.c0 END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON x'' RIGHT OUTER JOIN t0 ON ((CAST(vt1.c1 AS NUMERIC))<(((vt1.c0) NOTNULL))) ORDER BY vt1.c2 DESC  NULLS LAST, LTRIM(vt1.c1 COLLATE BINARY), (((((((t0.c48, vt1.c1, vt1.c1, t0.c48, t0.c51)) BETWEEN ((vt1.c0, vt1.c2, t0.c51, vt1.c2, vt1.c1)) AND ((vt1.c1, vt1.c2, vt1.c2, vt1.c0, vt0.c0))))OR(t0.c48 COLLATE RTRIM)))OR(((vt1.c0)>>(vt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON x'' RIGHT OUTER JOIN t0 ON ((CAST(vt1.c1 AS NUMERIC))<(((vt1.c0) NOTNULL))) WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((NULL)) AND (('-1371372108'))) THEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((t0.c51) BETWEEN (vt0.c0) AND (vt1.c2)) THEN '' WHEN ((vt1.c0) ISNULL) THEN vt1.c0 END) ORDER BY vt1.c2 DESC  NULLS LAST, LTRIM(vt1.c1 COLLATE BINARY), (((((((t0.c48, vt1.c1, vt1.c1, t0.c48, t0.c51)) BETWEEN ((vt1.c0, vt1.c2, t0.c51, vt1.c2, vt1.c1)) AND ((vt1.c1, vt1.c2, vt1.c2, vt1.c0, vt0.c0))))OR(t0.c48 COLLATE RTRIM)))OR(((vt1.c0)>>(vt1.c2))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (x''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (x''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (x'')));
SELECT COUNT(*) FROM vt1 INDEXED BY i70 WHERE (((vt1.c2)OR(vt1.c2)) COLLATE RTRIM) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2)OR(vt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 INDEXED BY i70 ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt1 INDEXED BY i70 WHERE (((vt1.c2)OR(vt1.c2)) COLLATE RTRIM) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2)OR(vt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 INDEXED BY i70 ORDER BY NULL DESC);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)>=(vt0.c0)))));
SELECT ALL * FROM vt1, t0, vt0 WHERE (ABS((((vt1.c2, t0.c48, t0.c51)) BETWEEN ((vt1.c1, t0.c51, t0.c48)) AND ((vt1.c0, vt0.c0, vt1.c1))))) ORDER BY ((x'')%(NULL))  NULLS LAST, CAST(0xfffffffff475a5bf AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((ABS((((vt1.c2, t0.c48, t0.c51)) BETWEEN ((vt1.c1, t0.c51, t0.c48)) AND ((vt1.c0, vt0.c0, vt1.c1))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((x'')%(NULL))  NULLS LAST, CAST(0xfffffffff475a5bf AS REAL));
SELECT ALL * FROM vt1, t0, vt0 WHERE (ABS((((vt1.c2, t0.c48, t0.c51)) BETWEEN ((vt1.c1, t0.c51, t0.c48)) AND ((vt1.c0, vt0.c0, vt1.c1))))) ORDER BY ((x'')%(NULL))  NULLS LAST, CAST(0xfffffffff475a5bf AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((ABS((((vt1.c2, t0.c48, t0.c51)) BETWEEN ((vt1.c1, t0.c51, t0.c48)) AND ((vt1.c0, vt0.c0, vt1.c1))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((x'')%(NULL))  NULLS LAST, CAST(0xfffffffff475a5bf AS REAL));
SELECT ALL * FROM vt1, t0, vt0 WHERE (ABS((((vt1.c2, t0.c48, t0.c51)) BETWEEN ((vt1.c1, t0.c51, t0.c48)) AND ((vt1.c0, vt0.c0, vt1.c1))))) ORDER BY ((x'')%(NULL))  NULLS LAST, CAST(0xfffffffff475a5bf AS REAL);
SELECT COUNT(*) FROM vt0 WHERE (((0.7354997219345292) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((0.7354997219345292) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0.7354997219345292) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((0.7354997219345292) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0.7354997219345292) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) IS TRUE))));
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((vt0.c0)=(NULL)) IN ()) WHERE ((((t0.c51, ((t0.c51) NOTNULL), (NOT (vt1.c0))))!=((NULL, (vt1.c1 IN ()), ((vt1.c2) BETWEEN (t0.c51) AND (vt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c51, ((t0.c51) NOTNULL), (NOT (vt1.c0))))!=((NULL, (vt1.c1 IN ()), ((vt1.c2) BETWEEN (t0.c51) AND (vt1.c2)))))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((vt0.c0)==(NULL)) IN ()));
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((vt0.c0)=(NULL)) IN ()) WHERE ((((t0.c51, ((t0.c51) NOTNULL), (NOT (vt1.c0))))!=((NULL, (vt1.c1 IN ()), ((vt1.c2) BETWEEN (t0.c51) AND (vt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c51, ((t0.c51) NOTNULL), (NOT (vt1.c0))))!=((NULL, (vt1.c1 IN ()), ((vt1.c2) BETWEEN (t0.c51) AND (vt1.c2)))))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((vt0.c0)==(NULL)) IN ()));
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((vt0.c0)=(NULL)) IN ()) WHERE ((((t0.c51, ((t0.c51) NOTNULL), (NOT (vt1.c0))))!=((NULL, (vt1.c1 IN ()), ((vt1.c2) BETWEEN (t0.c51) AND (vt1.c2))))));
SELECT COUNT(*) FROM vt1 WHERE (((~ (vt1.c1)) IN (CASE vt1.c0  WHEN vt1.c1 THEN x'' ELSE vt1.c1 END, 3.49337539E8)));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt1.c1)) IN (CASE vt1.c0  WHEN vt1.c1 THEN x'' ELSE vt1.c1 END, 3.49337539E8))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((~ (vt1.c1)) IN (CASE vt1.c0  WHEN vt1.c1 THEN x'' ELSE vt1.c1 END, 3.49337539E8)));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt1.c1)) IN (CASE vt1.c0  WHEN vt1.c1 THEN x'' ELSE vt1.c1 END, 3.49337539E8))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((~ (vt1.c1)) IN (CASE vt1.c0  WHEN vt1.c1 THEN x'' ELSE vt1.c1 END, 3.49337539E8)));
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN vt1 ON CAST(t0.c48 AS INTEGER) COLLATE NOCASE WHERE (((((vt1.c0) ISNULL))GLOB(vt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))GLOB(vt1.c2))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON CAST(t0.c48 AS INTEGER) COLLATE NOCASE);
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN vt1 ON CAST(t0.c48 AS INTEGER) COLLATE NOCASE WHERE (((((vt1.c0) ISNULL))GLOB(vt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))GLOB(vt1.c2))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON CAST(t0.c48 AS INTEGER) COLLATE NOCASE);
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN vt1 ON CAST(t0.c48 AS INTEGER) COLLATE NOCASE WHERE (((((vt1.c0) ISNULL))GLOB(vt1.c2)));
SELECT ALL * FROM vt0, t0 WHERE (t0.c48) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(t0.c51))) IS FALSE), ((CASE WHEN vt0.c0 THEN t0.c51 END) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(t0.c51))) IS FALSE), ((CASE WHEN vt0.c0 THEN t0.c51 END) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (t0.c48) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(t0.c51))) IS FALSE), ((CASE WHEN vt0.c0 THEN t0.c51 END) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(t0.c51))) IS FALSE), ((CASE WHEN vt0.c0 THEN t0.c51 END) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (t0.c48) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(t0.c51))) IS FALSE), ((CASE WHEN vt0.c0 THEN t0.c51 END) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((CAST(vt0.c0 AS REAL))*(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))*(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((CAST(vt0.c0 AS REAL))*(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))*(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((CAST(vt0.c0 AS REAL))*(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)-(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)-(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)-(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)-(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)-(vt1.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c48) BETWEEN (t0.c48) AND (t0.c48)) AS NUMERIC)) ORDER BY (((((((((t0.c48)AND(t0.c48)))AND(t0.c51)))AND(t0.c51)))AND(t0.c51)) IN ((NOT (t0.c48))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c48) BETWEEN (t0.c48) AND (t0.c48)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c48)AND(t0.c48)))AND(t0.c51)))AND(t0.c51)))AND(t0.c51)) IN ((NOT (t0.c48)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c48) BETWEEN (t0.c48) AND (t0.c48)) AS NUMERIC)) ORDER BY (((((((((t0.c48)AND(t0.c48)))AND(t0.c51)))AND(t0.c51)))AND(t0.c51)) IN ((NOT (t0.c48))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c48) BETWEEN (t0.c48) AND (t0.c48)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c48)AND(t0.c48)))AND(t0.c51)))AND(t0.c51)))AND(t0.c51)) IN ((NOT (t0.c48)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c48) BETWEEN (t0.c48) AND (t0.c48)) AS NUMERIC)) ORDER BY (((((((((t0.c48)AND(t0.c48)))AND(t0.c51)))AND(t0.c51)))AND(t0.c51)) IN ((NOT (t0.c48))));
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>=((NULL, vt0.c0, vt0.c0))))IS(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))>=((NULL, vt0.c0, vt0.c0))))IS(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>=((NULL, vt0.c0, vt0.c0))))IS(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))>=((NULL, vt0.c0, vt0.c0))))IS(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>=((NULL, vt0.c0, vt0.c0))))IS(((vt0.c0) NOT NULL))));
SELECT * FROM vt0, t0 WHERE (((((((t0.c51)<(t0.c48)))OR(((vt0.c0) NOT BETWEEN (t0.c48) AND (vt0.c0)))))OR((((t0.c48, t0.c51, t0.c51))=((vt0.c0, NULL, t0.c51)))))) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c51) AND (vt0.c0)))|(((vt0.c0) IS FALSE))), (- (t0.c48 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c51)<(t0.c48)))OR(((vt0.c0) NOT BETWEEN (t0.c48) AND (vt0.c0)))))OR((((t0.c48, t0.c51, t0.c51))==((vt0.c0, NULL, t0.c51)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c51) AND (vt0.c0)))|(((vt0.c0) IS FALSE))), (- (t0.c48 COLLATE BINARY)) ASC);
SELECT * FROM vt0, t0 WHERE (((((((t0.c51)<(t0.c48)))OR(((vt0.c0) NOT BETWEEN (t0.c48) AND (vt0.c0)))))OR((((t0.c48, t0.c51, t0.c51))=((vt0.c0, NULL, t0.c51)))))) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c51) AND (vt0.c0)))|(((vt0.c0) IS FALSE))), (- (t0.c48 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c51)<(t0.c48)))OR(((vt0.c0) NOT BETWEEN (t0.c48) AND (vt0.c0)))))OR((((t0.c48, t0.c51, t0.c51))==((vt0.c0, NULL, t0.c51)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c51) AND (vt0.c0)))|(((vt0.c0) IS FALSE))), (- (t0.c48 COLLATE BINARY)) ASC);
SELECT * FROM vt0, t0 WHERE (((((((t0.c51)<(t0.c48)))OR(((vt0.c0) NOT BETWEEN (t0.c48) AND (vt0.c0)))))OR((((t0.c48, t0.c51, t0.c51))=((vt0.c0, NULL, t0.c51)))))) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c51) AND (vt0.c0)))|(((vt0.c0) IS FALSE))), (- (t0.c48 COLLATE BINARY)) ASC;
SELECT * FROM vt1, t0 WHERE (((((t0.c48)>=(vt1.c2)))=(t0.c48 COLLATE RTRIM))) ORDER BY ((((((((((((t0.c48)AND('1055183330')))OR(t0.c51)))OR(((t0.c48) IS FALSE))))AND(((vt1.c0)-(t0.c51)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c48 THEN t0.c48 WHEN 0.39349849373465184 THEN t0.c51 ELSE x'd49ff06b' END)))AND(x'b21b')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)>=(vt1.c2)))=(t0.c48 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((((((((t0.c48)AND('1055183330')))OR(t0.c51)))OR(((t0.c48) IS FALSE))))AND(((vt1.c0)-(t0.c51)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c48 THEN t0.c48 WHEN 0.39349849373465184 THEN t0.c51 ELSE x'd49ff06b' END)))AND(x'b21b')) DESC);
SELECT * FROM vt1, t0 WHERE (((((t0.c48)>=(vt1.c2)))=(t0.c48 COLLATE RTRIM))) ORDER BY ((((((((((((t0.c48)AND('1055183330')))OR(t0.c51)))OR(((t0.c48) IS FALSE))))AND(((vt1.c0)-(t0.c51)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c48 THEN t0.c48 WHEN 0.39349849373465184 THEN t0.c51 ELSE x'd49ff06b' END)))AND(x'b21b')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)>=(vt1.c2)))=(t0.c48 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((((((((t0.c48)AND('1055183330')))OR(t0.c51)))OR(((t0.c48) IS FALSE))))AND(((vt1.c0)-(t0.c51)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c48 THEN t0.c48 WHEN 0.39349849373465184 THEN t0.c51 ELSE x'd49ff06b' END)))AND(x'b21b')) DESC);
SELECT * FROM vt1, t0 WHERE (((((t0.c48)>=(vt1.c2)))=(t0.c48 COLLATE RTRIM))) ORDER BY ((((((((((((t0.c48)AND('1055183330')))OR(t0.c51)))OR(((t0.c48) IS FALSE))))AND(((vt1.c0)-(t0.c51)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c48 THEN t0.c48 WHEN 0.39349849373465184 THEN t0.c51 ELSE x'd49ff06b' END)))AND(x'b21b')) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1, NULL, vt1.c2)) NOT BETWEEN (((x'' IN ()), ((vt1.c1) NOT NULL), vt0.c0 COLLATE BINARY)) AND ((CAST(vt1.c2 AS INTEGER), ((('513142073'))>((vt0.c0))), 0.24614252431876726)))) ORDER BY ((((vt1.c1)AND(vt1.c1))) BETWEEN ((((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c0)))) AND (((vt1.c2) BETWEEN (vt1.c2) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1, NULL, vt1.c2)) NOT BETWEEN (((x'' IN ()), ((vt1.c1) NOT NULL), vt0.c0 COLLATE BINARY)) AND ((CAST(vt1.c2 AS INTEGER), ((('513142073'))>((vt0.c0))), 0.24614252431876726)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1)AND(vt1.c1))) BETWEEN ((((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c0)))) AND (((vt1.c2) BETWEEN (vt1.c2) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1, NULL, vt1.c2)) NOT BETWEEN (((x'' IN ()), ((vt1.c1) NOT NULL), vt0.c0 COLLATE BINARY)) AND ((CAST(vt1.c2 AS INTEGER), ((('513142073'))>((vt0.c0))), 0.24614252431876726)))) ORDER BY ((((vt1.c1)AND(vt1.c1))) BETWEEN ((((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c0)))) AND (((vt1.c2) BETWEEN (vt1.c2) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1, NULL, vt1.c2)) NOT BETWEEN (((x'' IN ()), ((vt1.c1) NOT NULL), vt0.c0 COLLATE BINARY)) AND ((CAST(vt1.c2 AS INTEGER), ((('513142073'))>((vt0.c0))), 0.24614252431876726)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1)AND(vt1.c1))) BETWEEN ((((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c0)))) AND (((vt1.c2) BETWEEN (vt1.c2) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1, NULL, vt1.c2)) NOT BETWEEN (((x'' IN ()), ((vt1.c1) NOT NULL), vt0.c0 COLLATE BINARY)) AND ((CAST(vt1.c2 AS INTEGER), ((('513142073'))>((vt0.c0))), 0.24614252431876726)))) ORDER BY ((((vt1.c1)AND(vt1.c1))) BETWEEN ((((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c0)))) AND (((vt1.c2) BETWEEN (vt1.c2) AND (vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ORDER BY ((NULL) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ORDER BY ((NULL) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ORDER BY ((NULL) NOT NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN '' THEN 0.5294702561737472 ELSE vt1.c1 END  WHEN CASE WHEN vt1.c2 THEN vt1.c1 END THEN ((vt1.c1)%(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN '' THEN 0.5294702561737472 ELSE vt1.c1 END  WHEN CASE WHEN vt1.c2 THEN vt1.c1 END THEN ((vt1.c1)%(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN '' THEN 0.5294702561737472 ELSE vt1.c1 END  WHEN CASE WHEN vt1.c2 THEN vt1.c1 END THEN ((vt1.c1)%(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN '' THEN 0.5294702561737472 ELSE vt1.c1 END  WHEN CASE WHEN vt1.c2 THEN vt1.c1 END THEN ((vt1.c1)%(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN '' THEN 0.5294702561737472 ELSE vt1.c1 END  WHEN CASE WHEN vt1.c2 THEN vt1.c1 END THEN ((vt1.c1)%(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt1.c1)AND(vt1.c2)))OR(vt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)AND(vt1.c2)))OR(vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt1.c1)AND(vt1.c2)))OR(vt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)AND(vt1.c2)))OR(vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt1.c1)AND(vt1.c2)))OR(vt1.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL))))-(((vt0.c0)<=(vt0.c0))))) ORDER BY x'59a9' DESC  NULLS FIRST, (((vt0.c0, 0.4957014285323753, vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS TEXT))) AND ((((vt0.c0)IS NOT(vt0.c0)), ROUND(vt0.c0, vt0.c0), ((vt0.c0) IS FALSE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL))))-(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'59a9' DESC  NULLS FIRST, (((vt0.c0, 0.4957014285323753, vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS TEXT))) AND ((((vt0.c0)IS NOT(vt0.c0)), ROUND(vt0.c0, vt0.c0), ((vt0.c0) IS FALSE)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL))))-(((vt0.c0)<=(vt0.c0))))) ORDER BY x'59a9' DESC  NULLS FIRST, (((vt0.c0, 0.4957014285323753, vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS TEXT))) AND ((((vt0.c0)IS NOT(vt0.c0)), ROUND(vt0.c0, vt0.c0), ((vt0.c0) IS FALSE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL))))-(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'59a9' DESC  NULLS FIRST, (((vt0.c0, 0.4957014285323753, vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS TEXT))) AND ((((vt0.c0)IS NOT(vt0.c0)), ROUND(vt0.c0, vt0.c0), ((vt0.c0) IS FALSE)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL))))-(((vt0.c0)<=(vt0.c0))))) ORDER BY x'59a9' DESC  NULLS FIRST, (((vt0.c0, 0.4957014285323753, vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS TEXT))) AND ((((vt0.c0)IS NOT(vt0.c0)), ROUND(vt0.c0, vt0.c0), ((vt0.c0) IS FALSE)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN vt1 ON (((((~ (t0.c48)))OR(((vt0.c0) NOT NULL))))OR(CASE WHEN vt1.c1 THEN t0.c51 END)) WHERE ('-458997223');
SELECT SUM(count) FROM (SELECT (('-458997223') IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON (((((~ (t0.c48)))OR(((vt0.c0) NOT NULL))))OR(CASE WHEN vt1.c1 THEN t0.c51 END)));
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN vt1 ON (((((~ (t0.c48)))OR(((vt0.c0) NOT NULL))))OR(CASE WHEN vt1.c1 THEN t0.c51 END)) WHERE ('-458997223');
SELECT SUM(count) FROM (SELECT (('-458997223') IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON (((((~ (t0.c48)))OR(((vt0.c0) NOT NULL))))OR(CASE WHEN vt1.c1 THEN t0.c51 END)));
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN vt1 ON (((((~ (t0.c48)))OR(((vt0.c0) NOT NULL))))OR(CASE WHEN vt1.c1 THEN t0.c51 END)) WHERE ('-458997223');
SELECT ALL * FROM vt1, vt0 WHERE ((~ ((vt1.c2 IN ())))) ORDER BY (((vt1.c2))=((((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt1.c2 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c2))=((((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((~ ((vt1.c2 IN ())))) ORDER BY (((vt1.c2))=((((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt1.c2 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c2))=((((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((~ ((vt1.c2 IN ())))) ORDER BY (((vt1.c2))=((((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((ABS(DISTINCT vt1.c2)) NOT BETWEEN (NULL) AND (IFNULL(vt1.c1, vt1.c2))) WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((vt1.c1)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((ABS(DISTINCT vt1.c2)) NOT BETWEEN (NULL) AND (IFNULL(vt1.c1, vt1.c2))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((ABS(DISTINCT vt1.c2)) NOT BETWEEN (NULL) AND (IFNULL(vt1.c1, vt1.c2))) WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((vt1.c1)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((ABS(DISTINCT vt1.c2)) NOT BETWEEN (NULL) AND (IFNULL(vt1.c1, vt1.c2))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((ABS(DISTINCT vt1.c2)) NOT BETWEEN (NULL) AND (IFNULL(vt1.c1, vt1.c2))) WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((vt1.c1))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c2 WHERE (((((((((((vt1.c1) IS TRUE))AND(((vt0.c0)>=(vt1.c2)))))OR((~ (vt1.c0)))))AND((0.7473165638983874 IN ()))))AND(((((((((vt1.c1)OR(vt1.c0)))AND(0.8694144724622146)))OR(vt1.c1)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1) IS TRUE))AND(((vt0.c0)>=(vt1.c2)))))OR((~ (vt1.c0)))))AND((0.7473165638983874 IN ()))))AND(((((((((vt1.c1)OR(vt1.c0)))AND(0.8694144724622146)))OR(vt1.c1)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c2);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c2 WHERE (((((((((((vt1.c1) IS TRUE))AND(((vt0.c0)>=(vt1.c2)))))OR((~ (vt1.c0)))))AND((0.7473165638983874 IN ()))))AND(((((((((vt1.c1)OR(vt1.c0)))AND(0.8694144724622146)))OR(vt1.c1)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1) IS TRUE))AND(((vt0.c0)>=(vt1.c2)))))OR((~ (vt1.c0)))))AND((0.7473165638983874 IN ()))))AND(((((((((vt1.c1)OR(vt1.c0)))AND(0.8694144724622146)))OR(vt1.c1)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c2);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c2 WHERE (((((((((((vt1.c1) IS TRUE))AND(((vt0.c0)>=(vt1.c2)))))OR((~ (vt1.c0)))))AND((0.7473165638983874 IN ()))))AND(((((((((vt1.c1)OR(vt1.c0)))AND(0.8694144724622146)))OR(vt1.c1)))OR(vt1.c1)))));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((vt1.c1) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c1) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((vt1.c1) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c1) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((vt1.c1) IS FALSE) COLLATE BINARY);
SELECT * FROM vt1, t0, vt0 WHERE (((vt1.c1)IS NOT(((t0.c48)LIKE(t0.c48))))) ORDER BY (~ ((((x'')) BETWEEN ((t0.c51)) AND ((NULL))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1)IS NOT(((t0.c48)LIKE(t0.c48))))) IS TRUE)  as count FROM vt1, t0, vt0 NOT INDEXED ORDER BY (~ ((((x'')) BETWEEN ((t0.c51)) AND ((NULL))))) DESC  NULLS FIRST);
SELECT * FROM vt1, t0, vt0 WHERE (((vt1.c1)IS NOT(((t0.c48)LIKE(t0.c48))))) ORDER BY (~ ((((x'')) BETWEEN ((t0.c51)) AND ((NULL))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1)IS NOT(((t0.c48)LIKE(t0.c48))))) IS TRUE)  as count FROM vt1, t0, vt0 NOT INDEXED ORDER BY (~ ((((x'')) BETWEEN ((t0.c51)) AND ((NULL))))) DESC  NULLS FIRST);
SELECT * FROM vt1, t0, vt0 WHERE (((vt1.c1)IS NOT(((t0.c48)LIKE(t0.c48))))) ORDER BY (~ ((((x'')) BETWEEN ((t0.c51)) AND ((NULL))))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(t0.c48 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c48 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(t0.c48 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c48 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(t0.c48 AS REAL) COLLATE BINARY);
SELECT ALL * FROM vt0, vt1, t0 WHERE (x'f900');
SELECT SUM(count) FROM (SELECT ((x'f900') IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (x'f900');
SELECT SUM(count) FROM (SELECT ((x'f900') IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (x'f900');
SELECT ALL * FROM vt0, vt1 WHERE (IFNULL(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2)), 0.3478353161685822)) ORDER BY ((((vt1.c0)IS NOT(NULL))) NOT BETWEEN (((vt1.c2)&(vt1.c2))) AND ((vt1.c1 IN (vt1.c2)))), ((((vt1.c1)IS(x'd4fcbab6')))==(((vt1.c1)LIKE(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2)), 0.3478353161685822)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)IS NOT(NULL))) NOT BETWEEN (((vt1.c2)&(vt1.c2))) AND ((vt1.c1 IN (vt1.c2)))), ((((vt1.c1)IS(x'd4fcbab6')))=(((vt1.c1)LIKE(vt1.c0)))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (IFNULL(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2)), 0.3478353161685822)) ORDER BY ((((vt1.c0)IS NOT(NULL))) NOT BETWEEN (((vt1.c2)&(vt1.c2))) AND ((vt1.c1 IN (vt1.c2)))), ((((vt1.c1)IS(x'd4fcbab6')))==(((vt1.c1)LIKE(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2)), 0.3478353161685822)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)IS NOT(NULL))) NOT BETWEEN (((vt1.c2)&(vt1.c2))) AND ((vt1.c1 IN (vt1.c2)))), ((((vt1.c1)IS(x'd4fcbab6')))=(((vt1.c1)LIKE(vt1.c0)))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (IFNULL(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2)), 0.3478353161685822)) ORDER BY ((((vt1.c0)IS NOT(NULL))) NOT BETWEEN (((vt1.c2)&(vt1.c2))) AND ((vt1.c1 IN (vt1.c2)))), ((((vt1.c1)IS(x'd4fcbab6')))==(((vt1.c1)LIKE(vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((+ (((t0.c51) BETWEEN (t0.c51) AND (0X6506edf4))))) ORDER BY NULLIF(DISTINCT CAST(t0.c51 AS BLOB), (t0.c51 IN (t0.c51, vt1.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c51) BETWEEN (t0.c51) AND (0X6506edf4))))) IS TRUE)  as count FROM t0, vt1 ORDER BY NULLIF(DISTINCT CAST(t0.c51 AS BLOB), (t0.c51 IN (t0.c51, vt1.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((+ (((t0.c51) BETWEEN (t0.c51) AND (0X6506edf4))))) ORDER BY NULLIF(DISTINCT CAST(t0.c51 AS BLOB), (t0.c51 IN (t0.c51, vt1.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c51) BETWEEN (t0.c51) AND (0X6506edf4))))) IS TRUE)  as count FROM t0, vt1 ORDER BY NULLIF(DISTINCT CAST(t0.c51 AS BLOB), (t0.c51 IN (t0.c51, vt1.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((+ (((t0.c51) BETWEEN (t0.c51) AND (0X6506edf4))))) ORDER BY NULLIF(DISTINCT CAST(t0.c51 AS BLOB), (t0.c51 IN (t0.c51, vt1.c2))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c2) IS TRUE) THEN (~ (vt1.c1)) WHEN ((vt1.c0) IS TRUE) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN NULL THEN ((vt1.c2)+(vt1.c1)) WHEN vt1.c0 COLLATE NOCASE THEN vt1.c2 COLLATE BINARY WHEN vt1.c0 COLLATE BINARY THEN 0.6491663377756143 ELSE HEX(DISTINCT vt1.c1) END) ORDER BY vt1.c0, ((((vt1.c2)>(vt1.c2)))<=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c2) IS TRUE) THEN (~ (vt1.c1)) WHEN ((vt1.c0) IS TRUE) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN NULL THEN ((vt1.c2)+(vt1.c1)) WHEN vt1.c0 COLLATE NOCASE THEN vt1.c2 COLLATE BINARY WHEN vt1.c0 COLLATE BINARY THEN 0.6491663377756143 ELSE HEX(DISTINCT vt1.c1) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, ((((vt1.c2)>(vt1.c2)))<=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c2) IS TRUE) THEN (~ (vt1.c1)) WHEN ((vt1.c0) IS TRUE) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN NULL THEN ((vt1.c2)+(vt1.c1)) WHEN vt1.c0 COLLATE NOCASE THEN vt1.c2 COLLATE BINARY WHEN vt1.c0 COLLATE BINARY THEN 0.6491663377756143 ELSE HEX(DISTINCT vt1.c1) END) ORDER BY vt1.c0, ((((vt1.c2)>(vt1.c2)))<=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c2) IS TRUE) THEN (~ (vt1.c1)) WHEN ((vt1.c0) IS TRUE) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN NULL THEN ((vt1.c2)+(vt1.c1)) WHEN vt1.c0 COLLATE NOCASE THEN vt1.c2 COLLATE BINARY WHEN vt1.c0 COLLATE BINARY THEN 0.6491663377756143 ELSE HEX(DISTINCT vt1.c1) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, ((((vt1.c2)>(vt1.c2)))<=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c2) IS TRUE) THEN (~ (vt1.c1)) WHEN ((vt1.c0) IS TRUE) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN NULL THEN ((vt1.c2)+(vt1.c1)) WHEN vt1.c0 COLLATE NOCASE THEN vt1.c2 COLLATE BINARY WHEN vt1.c0 COLLATE BINARY THEN 0.6491663377756143 ELSE HEX(DISTINCT vt1.c1) END) ORDER BY vt1.c0, ((((vt1.c2)>(vt1.c2)))<=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c51)OR(0.21637314552113684)))OR(t0.c51))) IS FALSE)) ORDER BY CAST(((t0.c48) BETWEEN (t0.c48) AND (t0.c51)) AS TEXT) DESC, (((t0.c51 IN ())) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c51)OR(0.21637314552113684)))OR(t0.c51))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c48) BETWEEN (t0.c48) AND (t0.c51)) AS TEXT) DESC, (((t0.c51 IN ())) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c51)OR(0.21637314552113684)))OR(t0.c51))) IS FALSE)) ORDER BY CAST(((t0.c48) BETWEEN (t0.c48) AND (t0.c51)) AS TEXT) DESC, (((t0.c51 IN ())) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c51)OR(0.21637314552113684)))OR(t0.c51))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c48) BETWEEN (t0.c48) AND (t0.c51)) AS TEXT) DESC, (((t0.c51 IN ())) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c51)OR(0.21637314552113684)))OR(t0.c51))) IS FALSE)) ORDER BY CAST(((t0.c48) BETWEEN (t0.c48) AND (t0.c51)) AS TEXT) DESC, (((t0.c51 IN ())) IS TRUE)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((SQLITE_VERSION())OR((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((SQLITE_VERSION())OR((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((SQLITE_VERSION())OR((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((SQLITE_VERSION())OR((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((SQLITE_VERSION())OR((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)|(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((((vt0.c0, vt1.c1, vt1.c1))>=((vt1.c2, vt1.c2, t0.c51)))) NOT BETWEEN ((~ (t0.c51))) AND ('')));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt1.c1, vt1.c1))>=((vt1.c2, vt1.c2, t0.c51)))) NOT BETWEEN ((~ (t0.c51))) AND (''))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((((vt0.c0, vt1.c1, vt1.c1))>=((vt1.c2, vt1.c2, t0.c51)))) NOT BETWEEN ((~ (t0.c51))) AND ('')));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt1.c1, vt1.c1))>=((vt1.c2, vt1.c2, t0.c51)))) NOT BETWEEN ((~ (t0.c51))) AND (''))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((((vt0.c0, vt1.c1, vt1.c1))>=((vt1.c2, vt1.c2, t0.c51)))) NOT BETWEEN ((~ (t0.c51))) AND ('')));
SELECT ALL * FROM t0 WHERE (((t0.c48)>(t0.c51)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c48)>(t0.c51)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c48)>(t0.c51)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c48)>(t0.c51)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c48)>(t0.c51)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0) ISNULL)))>((vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) ISNULL)))>((vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0) ISNULL)))>((vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) ISNULL)))>((vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0) ISNULL)))>((vt1.c1))));
SELECT COUNT(*) FROM t0, vt0, vt1 NOT INDEXED WHERE (((load_extension(vt1.c2, t0.c51))>(CASE 0.19807497936885554  WHEN t0.c51 THEN t0.c51 ELSE vt1.c2 END))) ORDER BY ((COALESCE(DISTINCT vt0.c0, t0.c51)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(vt1.c2, t0.c51))>(CASE 0.19807497936885554  WHEN t0.c51 THEN t0.c51 ELSE vt1.c2 END))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((COALESCE(DISTINCT vt0.c0, t0.c51)) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, vt1 NOT INDEXED WHERE (((load_extension(vt1.c2, t0.c51))>(CASE 0.19807497936885554  WHEN t0.c51 THEN t0.c51 ELSE vt1.c2 END))) ORDER BY ((COALESCE(DISTINCT vt0.c0, t0.c51)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(vt1.c2, t0.c51))>(CASE 0.19807497936885554  WHEN t0.c51 THEN t0.c51 ELSE vt1.c2 END))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((COALESCE(DISTINCT vt0.c0, t0.c51)) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INDEXED BY i70 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)||(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)||(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 INDEXED BY i70);
SELECT COUNT(*) FROM vt0 INDEXED BY i70 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)||(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)||(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 INDEXED BY i70);
SELECT COUNT(*) FROM t0 WHERE (((((x'') IS TRUE)) IS FALSE)) ORDER BY ((((((t0.c48)AND(t0.c48)))AND(t0.c51)))AND(CAST(t0.c51 AS NUMERIC))), ABS(t0.c51 COLLATE BINARY) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') IS TRUE)) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c48)AND(t0.c48)))AND(t0.c51)))AND(CAST(t0.c51 AS NUMERIC))), ABS(t0.c51 COLLATE BINARY) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((x'') IS TRUE)) IS FALSE)) ORDER BY ((((((t0.c48)AND(t0.c48)))AND(t0.c51)))AND(CAST(t0.c51 AS NUMERIC))), ABS(t0.c51 COLLATE BINARY) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') IS TRUE)) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c48)AND(t0.c48)))AND(t0.c51)))AND(CAST(t0.c51 AS NUMERIC))), ABS(t0.c51 COLLATE BINARY) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((x'') IS TRUE)) IS FALSE)) ORDER BY ((((((t0.c48)AND(t0.c48)))AND(t0.c51)))AND(CAST(t0.c51 AS NUMERIC))), ABS(t0.c51 COLLATE BINARY) DESC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON ((((((vt1.c0))<=((t0.c51)))))>(((vt1.c0 IN ())))) WHERE (((((t0.c51)|(vt1.c0)))%(((((vt1.c2)OR(vt1.c0)))AND(t0.c51)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c51)|(vt1.c0)))%(((((vt1.c2)OR(vt1.c0)))AND(t0.c51))))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON ((((((vt1.c0))<=((t0.c51)))))>(((vt1.c0 IN ())))));
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON ((((((vt1.c0))<=((t0.c51)))))>(((vt1.c0 IN ())))) WHERE (((((t0.c51)|(vt1.c0)))%(((((vt1.c2)OR(vt1.c0)))AND(t0.c51)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c51)|(vt1.c0)))%(((((vt1.c2)OR(vt1.c0)))AND(t0.c51))))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON ((((((vt1.c0))<=((t0.c51)))))>(((vt1.c0 IN ())))));
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON ((((((vt1.c0))<=((t0.c51)))))>(((vt1.c0 IN ())))) WHERE (((((t0.c51)|(vt1.c0)))%(((((vt1.c2)OR(vt1.c0)))AND(t0.c51)))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1) IS TRUE)) NOT NULL)) ORDER BY ((((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))))>=(((((vt1.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c1))>(('0.3192098021491805', vt1.c2, vt1.c0, vt1.c2, vt1.c0)))))) ASC, (NOT ((vt1.c1 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))))>=(((((vt1.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c1))>(('0.3192098021491805', vt1.c2, vt1.c0, vt1.c2, vt1.c0)))))) ASC, (NOT ((vt1.c1 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1) IS TRUE)) NOT NULL)) ORDER BY ((((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))))>=(((((vt1.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c1))>(('0.3192098021491805', vt1.c2, vt1.c0, vt1.c2, vt1.c0)))))) ASC, (NOT ((vt1.c1 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))))>=(((((vt1.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c1))>(('0.3192098021491805', vt1.c2, vt1.c0, vt1.c2, vt1.c0)))))) ASC, (NOT ((vt1.c1 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1) IS TRUE)) NOT NULL)) ORDER BY ((((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))))>=(((((vt1.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c1))>(('0.3192098021491805', vt1.c2, vt1.c0, vt1.c2, vt1.c0)))))) ASC, (NOT ((vt1.c1 IN ()))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN '0.010900766864971656' WHEN CAST(vt0.c0 AS INTEGER) THEN ((t0.c48)>(t0.c51)) WHEN (t0.c51 IN ()) THEN t0.c48 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) ISNULL) THEN '0.010900766864971656' WHEN CAST(vt0.c0 AS INTEGER) THEN ((t0.c48)>(t0.c51)) WHEN (t0.c51 IN ()) THEN t0.c48 END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN '0.010900766864971656' WHEN CAST(vt0.c0 AS INTEGER) THEN ((t0.c48)>(t0.c51)) WHEN (t0.c51 IN ()) THEN t0.c48 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) ISNULL) THEN '0.010900766864971656' WHEN CAST(vt0.c0 AS INTEGER) THEN ((t0.c48)>(t0.c51)) WHEN (t0.c51 IN ()) THEN t0.c48 END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN '0.010900766864971656' WHEN CAST(vt0.c0 AS INTEGER) THEN ((t0.c48)>(t0.c51)) WHEN (t0.c51 IN ()) THEN t0.c48 END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((vt1.c0) ISNULL)) BETWEEN (json_object(t0.c51, vt0.c0)) AND (((vt0.c0)%(t0.c48)))) INNER JOIN vt1 ON ((CAST(vt1.c0 AS BLOB))IS NOT(((vt0.c0)AND(t0.c51)))) WHERE (json_array_length(SQLITE_COMPILEOPTION_USED(vt1.c1))) ORDER BY (NOT (vt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(SQLITE_COMPILEOPTION_USED(vt1.c1))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((vt1.c0) ISNULL)) BETWEEN (json_object(t0.c51, vt0.c0)) AND (((vt0.c0)%(t0.c48)))) INNER JOIN vt1 ON ((CAST(vt1.c0 AS BLOB))IS NOT(((vt0.c0)AND(t0.c51)))) ORDER BY (NOT (vt1.c0)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((vt1.c0) ISNULL)) BETWEEN (json_object(t0.c51, vt0.c0)) AND (((vt0.c0)%(t0.c48)))) INNER JOIN vt1 ON ((CAST(vt1.c0 AS BLOB))IS NOT(((vt0.c0)AND(t0.c51)))) WHERE (json_array_length(SQLITE_COMPILEOPTION_USED(vt1.c1))) ORDER BY (NOT (vt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(SQLITE_COMPILEOPTION_USED(vt1.c1))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((vt1.c0) ISNULL)) BETWEEN (json_object(t0.c51, vt0.c0)) AND (((vt0.c0)%(t0.c48)))) INNER JOIN vt1 ON ((CAST(vt1.c0 AS BLOB))IS NOT(((vt0.c0)AND(t0.c51)))) ORDER BY (NOT (vt1.c0)) ASC  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON vt1.c0 WHERE (CASE vt1.c1  WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN NULL WHEN vt1.c1 THEN NULL END COLLATE NOCASE) ORDER BY ((vt0.c0) BETWEEN ('') AND (vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1  WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN NULL WHEN vt1.c1 THEN NULL END COLLATE NOCASE) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON vt1.c0 ORDER BY ((vt0.c0) BETWEEN ('') AND (vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON vt1.c0 WHERE (CASE vt1.c1  WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN NULL WHEN vt1.c1 THEN NULL END COLLATE NOCASE) ORDER BY ((vt0.c0) BETWEEN ('') AND (vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1  WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN NULL WHEN vt1.c1 THEN NULL END COLLATE NOCASE) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON vt1.c0 ORDER BY ((vt0.c0) BETWEEN ('') AND (vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON vt1.c0 WHERE (CASE vt1.c1  WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN NULL WHEN vt1.c1 THEN NULL END COLLATE NOCASE) ORDER BY ((vt0.c0) BETWEEN ('') AND (vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((json_valid(NULL))OR(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)AND(NULL)))OR('>~8''')))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.18929915818066123 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)/(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE 0.8452074130326906  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((json_valid(NULL))OR(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)AND(NULL)))OR('>~8''')))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.18929915818066123 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)/(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE 0.8452074130326906  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((json_valid(NULL))OR(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)AND(NULL)))OR('>~8''')))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.18929915818066123 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)/(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE 0.8452074130326906  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((json_valid(NULL))OR(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)AND(NULL)))OR('>~8''')))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.18929915818066123 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)/(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE 0.8452074130326906  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((json_valid(NULL))OR(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)AND(NULL)))OR('>~8''')))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.18929915818066123 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)/(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE 0.8452074130326906  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0))IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN 1376759801 THEN NULL END ASC, ((COALESCE(DISTINCT '-302587709', vt0.c0))<=(0.143036725609214)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c0, vt0.c0))IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN 1376759801 THEN NULL END ASC, ((COALESCE(DISTINCT '-302587709', vt0.c0))<=(0.143036725609214)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0))IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN 1376759801 THEN NULL END ASC, ((COALESCE(DISTINCT '-302587709', vt0.c0))<=(0.143036725609214)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c0, vt0.c0))IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN 1376759801 THEN NULL END ASC, ((COALESCE(DISTINCT '-302587709', vt0.c0))<=(0.143036725609214)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0))IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN 1376759801 THEN NULL END ASC, ((COALESCE(DISTINCT '-302587709', vt0.c0))<=(0.143036725609214)) DESC  NULLS LAST;
SELECT * FROM t0, vt0 NATURAL JOIN vt1 WHERE (((((vt0.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))) IN (vt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))) IN (vt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT * FROM t0, vt0 NATURAL JOIN vt1 WHERE (((((vt0.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))) IN (vt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))) IN (vt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT * FROM t0, vt0 NATURAL JOIN vt1 WHERE (((((vt0.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))) IN (vt1.c2 COLLATE RTRIM)));
SELECT * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (x'');
SELECT COUNT(*) FROM vt0, vt1 WHERE (((x'') BETWEEN ((((vt0.c0))>((vt0.c0)))) AND (((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN ((((vt0.c0))>((vt0.c0)))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((x'') BETWEEN ((((vt0.c0))>((vt0.c0)))) AND (((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN ((((vt0.c0))>((vt0.c0)))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((x'') BETWEEN ((((vt0.c0))>((vt0.c0)))) AND (((vt1.c0) ISNULL))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON UPPER(vt1.c2 COLLATE BINARY) WHERE (((((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c2)))AND(vt1.c2)))AND(vt1.c2))) BETWEEN (CAST(vt1.c1 AS NUMERIC)) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c2)))AND(vt1.c2)))AND(vt1.c2))) BETWEEN (CAST(vt1.c1 AS NUMERIC)) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON UPPER(vt1.c2 COLLATE BINARY));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON UPPER(vt1.c2 COLLATE BINARY) WHERE (((((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c2)))AND(vt1.c2)))AND(vt1.c2))) BETWEEN (CAST(vt1.c1 AS NUMERIC)) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c2)))AND(vt1.c2)))AND(vt1.c2))) BETWEEN (CAST(vt1.c1 AS NUMERIC)) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON UPPER(vt1.c2 COLLATE BINARY));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON UPPER(vt1.c2 COLLATE BINARY) WHERE (((((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c2)))AND(vt1.c2)))AND(vt1.c2))) BETWEEN (CAST(vt1.c1 AS NUMERIC)) AND (CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((vt0.c0))) COLLATE BINARY) ORDER BY LIKELIHOOD(vt0.c0, 0.4228386723028066)  NULLS LAST, ((LIKELY(DISTINCT vt0.c0))<((+ (vt0.c0))))  NULLS FIRST, '1055183330' COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<=((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(vt0.c0, 0.4228386723028066)  NULLS LAST, ((LIKELY(DISTINCT vt0.c0))<((+ (vt0.c0))))  NULLS FIRST, '1055183330' COLLATE BINARY COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((vt0.c0))) COLLATE BINARY) ORDER BY LIKELIHOOD(vt0.c0, 0.4228386723028066)  NULLS LAST, ((LIKELY(DISTINCT vt0.c0))<((+ (vt0.c0))))  NULLS FIRST, '1055183330' COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<=((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(vt0.c0, 0.4228386723028066)  NULLS LAST, ((LIKELY(DISTINCT vt0.c0))<((+ (vt0.c0))))  NULLS FIRST, '1055183330' COLLATE BINARY COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((vt0.c0))) COLLATE BINARY) ORDER BY LIKELIHOOD(vt0.c0, 0.4228386723028066)  NULLS LAST, ((LIKELY(DISTINCT vt0.c0))<((+ (vt0.c0))))  NULLS FIRST, '1055183330' COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt1, t0 WHERE (COALESCE(DISTINCT vt1.c2 COLLATE NOCASE, '1846741305' COLLATE NOCASE, ((vt1.c2) ISNULL), ((t0.c48) IS TRUE))) ORDER BY (((('')IS NOT('H崍&94	'))) NOT BETWEEN (((((((((vt1.c1)AND(vt1.c2)))OR('qW	')))OR(t0.c48)))AND(t0.c48))) AND ('-186452967')), CAST(CAST(t0.c48 AS INTEGER) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT vt1.c2 COLLATE NOCASE, '1846741305' COLLATE NOCASE, ((vt1.c2) ISNULL), ((t0.c48) IS TRUE))) IS TRUE)  as count FROM vt1, t0 NOT INDEXED ORDER BY (((('')IS NOT('H崍&94	'))) NOT BETWEEN (((((((((vt1.c1)AND(vt1.c2)))OR('qW	')))OR(t0.c48)))AND(t0.c48))) AND ('-186452967')), CAST(CAST(t0.c48 AS INTEGER) AS TEXT) ASC);
SELECT ALL * FROM vt1, t0 WHERE (COALESCE(DISTINCT vt1.c2 COLLATE NOCASE, '1846741305' COLLATE NOCASE, ((vt1.c2) ISNULL), ((t0.c48) IS TRUE))) ORDER BY (((('')IS NOT('H崍&94	'))) NOT BETWEEN (((((((((vt1.c1)AND(vt1.c2)))OR('qW	')))OR(t0.c48)))AND(t0.c48))) AND ('-186452967')), CAST(CAST(t0.c48 AS INTEGER) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT vt1.c2 COLLATE NOCASE, '1846741305' COLLATE NOCASE, ((vt1.c2) ISNULL), ((t0.c48) IS TRUE))) IS TRUE)  as count FROM vt1, t0 NOT INDEXED ORDER BY (((('')IS NOT('H崍&94	'))) NOT BETWEEN (((((((((vt1.c1)AND(vt1.c2)))OR('qW	')))OR(t0.c48)))AND(t0.c48))) AND ('-186452967')), CAST(CAST(t0.c48 AS INTEGER) AS TEXT) ASC);
SELECT ALL * FROM vt1, t0 WHERE (COALESCE(DISTINCT vt1.c2 COLLATE NOCASE, '1846741305' COLLATE NOCASE, ((vt1.c2) ISNULL), ((t0.c48) IS TRUE))) ORDER BY (((('')IS NOT('H崍&94	'))) NOT BETWEEN (((((((((vt1.c1)AND(vt1.c2)))OR('qW	')))OR(t0.c48)))AND(t0.c48))) AND ('-186452967')), CAST(CAST(t0.c48 AS INTEGER) AS TEXT) ASC;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (((vt1.c1) NOT NULL)) ORDER BY '-1752011380';
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) NOT NULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY '-1752011380');
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (((vt1.c1) NOT NULL)) ORDER BY '-1752011380';
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) NOT NULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY '-1752011380');
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (((vt1.c1) NOT NULL)) ORDER BY '-1752011380';
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((~ (((((vt1.c1)OR(NULL)))OR(t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt1.c1)OR(NULL)))OR(t0.c48))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((~ (((((vt1.c1)OR(NULL)))OR(t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt1.c1)OR(NULL)))OR(t0.c48))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((~ (((((vt1.c1)OR(NULL)))OR(t0.c48)))));
SELECT ALL * FROM vt1 WHERE (CASE NULL  WHEN CAST(vt1.c2 AS INTEGER) THEN '' WHEN ((((((((((((vt1.c2)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c2)) THEN 0.08044079145757377 WHEN CASE WHEN vt1.c2 THEN 0.9388280138607533 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 ELSE '1898947793' END THEN ((vt1.c2) IS TRUE) ELSE CAST(vt1.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN CAST(vt1.c2 AS INTEGER) THEN '' WHEN ((((((((((((vt1.c2)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c2)) THEN 0.08044079145757377 WHEN CASE WHEN vt1.c2 THEN 0.9388280138607533 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 ELSE '1898947793' END THEN ((vt1.c2) IS TRUE) ELSE CAST(vt1.c1 AS REAL) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE NULL  WHEN CAST(vt1.c2 AS INTEGER) THEN '' WHEN ((((((((((((vt1.c2)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c2)) THEN 0.08044079145757377 WHEN CASE WHEN vt1.c2 THEN 0.9388280138607533 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 ELSE '1898947793' END THEN ((vt1.c2) IS TRUE) ELSE CAST(vt1.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN CAST(vt1.c2 AS INTEGER) THEN '' WHEN ((((((((((((vt1.c2)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c2)) THEN 0.08044079145757377 WHEN CASE WHEN vt1.c2 THEN 0.9388280138607533 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 ELSE '1898947793' END THEN ((vt1.c2) IS TRUE) ELSE CAST(vt1.c1 AS REAL) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE NULL  WHEN CAST(vt1.c2 AS INTEGER) THEN '' WHEN ((((((((((((vt1.c2)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c2)) THEN 0.08044079145757377 WHEN CASE WHEN vt1.c2 THEN 0.9388280138607533 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 ELSE '1898947793' END THEN ((vt1.c2) IS TRUE) ELSE CAST(vt1.c1 AS REAL) END);
SELECT COUNT(*) FROM vt1 WHERE (CAST((~ (vt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt1.c1)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST((~ (vt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt1.c1)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST((~ (vt1.c1)) AS BLOB));
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((t0.c48) BETWEEN (vt1.c1) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c48) BETWEEN (vt1.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((t0.c48) BETWEEN (vt1.c1) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c48) BETWEEN (vt1.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((t0.c48) BETWEEN (vt1.c1) AND (vt0.c0)) IN ()));
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0))) NOT BETWEEN ((('-269672581')!=(vt1.c0))) AND (((vt1.c0)-(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0))) NOT BETWEEN ((('-269672581')!=(vt1.c0))) AND (((vt1.c0)-(vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0))) NOT BETWEEN ((('-269672581')!=(vt1.c0))) AND (((vt1.c0)-(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0))) NOT BETWEEN ((('-269672581')!=(vt1.c0))) AND (((vt1.c0)-(vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0))) NOT BETWEEN ((('-269672581')!=(vt1.c0))) AND (((vt1.c0)-(vt1.c2)))));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((t0.c48)) BETWEEN ((((0.9375137443814665) ISNULL))) AND ((((vt1.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c48)) BETWEEN ((((0.9375137443814665) ISNULL))) AND ((((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((t0.c48)) BETWEEN ((((0.9375137443814665) ISNULL))) AND ((((vt1.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c48)) BETWEEN ((((0.9375137443814665) ISNULL))) AND ((((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((t0.c48)) BETWEEN ((((0.9375137443814665) ISNULL))) AND ((((vt1.c0) NOT NULL)))));
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((CAST(t0.c51 AS BLOB)) BETWEEN (LIKELIHOOD(t0.c51, 0.13462685438823863)) AND (-748071032)) WHERE (((0X3bb257dd)<=(((((0xffffffff8970e6b2)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY vt1.c1 ASC  NULLS FIRST, x'6c0e';
SELECT SUM(count) FROM (SELECT ((((0X3bb257dd)<=(((((0xffffffff8970e6b2)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((CAST(t0.c51 AS BLOB)) BETWEEN (LIKELIHOOD(t0.c51, 0.13462685438823863)) AND (-748071032)) ORDER BY vt1.c1 ASC  NULLS FIRST, x'6c0e');
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((CAST(t0.c51 AS BLOB)) BETWEEN (LIKELIHOOD(t0.c51, 0.13462685438823863)) AND (-748071032)) WHERE (((0X3bb257dd)<=(((((0xffffffff8970e6b2)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY vt1.c1 ASC  NULLS FIRST, x'6c0e';
SELECT SUM(count) FROM (SELECT ((((0X3bb257dd)<=(((((0xffffffff8970e6b2)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((CAST(t0.c51 AS BLOB)) BETWEEN (LIKELIHOOD(t0.c51, 0.13462685438823863)) AND (-748071032)) ORDER BY vt1.c1 ASC  NULLS FIRST, x'6c0e');
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((CAST(t0.c51 AS BLOB)) BETWEEN (LIKELIHOOD(t0.c51, 0.13462685438823863)) AND (-748071032)) WHERE (((0X3bb257dd)<=(((((0xffffffff8970e6b2)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY vt1.c1 ASC  NULLS FIRST, x'6c0e';
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LIKELIHOOD(DISTINCT ((vt1.c1)<<(vt1.c2)), 0.20097483785527126));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt1.c1)<<(vt1.c2)), 0.20097483785527126)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LIKELIHOOD(DISTINCT ((vt1.c1)<<(vt1.c2)), 0.20097483785527126));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt1.c1)<<(vt1.c2)), 0.20097483785527126)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LIKELIHOOD(DISTINCT ((vt1.c1)<<(vt1.c2)), 0.20097483785527126));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE) ORDER BY (((('')AND(CAST(vt1.c2 AS INTEGER))))AND((NOT (vt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((('')AND(CAST(vt1.c2 AS INTEGER))))AND((NOT (vt1.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE) ORDER BY (((('')AND(CAST(vt1.c2 AS INTEGER))))AND((NOT (vt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((('')AND(CAST(vt1.c2 AS INTEGER))))AND((NOT (vt1.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE) ORDER BY (((('')AND(CAST(vt1.c2 AS INTEGER))))AND((NOT (vt1.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((((((((((t0.c48)AND(vt0.c0)))OR(vt1.c0)))AND(t0.c48)))OR(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c1 END)))OR((((vt1.c0, vt1.c2, 0.802537543744471)) NOT BETWEEN ((vt0.c0, t0.c51, x'')) AND ((vt1.c0, vt0.c0, t0.c48))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c48)AND(vt0.c0)))OR(vt1.c0)))AND(t0.c48)))OR(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c1 END)))OR((((vt1.c0, vt1.c2, 0.802537543744471)) NOT BETWEEN ((vt0.c0, t0.c51, x'')) AND ((vt1.c0, vt0.c0, t0.c48)))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((((((((((t0.c48)AND(vt0.c0)))OR(vt1.c0)))AND(t0.c48)))OR(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c1 END)))OR((((vt1.c0, vt1.c2, 0.802537543744471)) NOT BETWEEN ((vt0.c0, t0.c51, x'')) AND ((vt1.c0, vt0.c0, t0.c48))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c48)AND(vt0.c0)))OR(vt1.c0)))AND(t0.c48)))OR(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c1 END)))OR((((vt1.c0, vt1.c2, 0.802537543744471)) NOT BETWEEN ((vt0.c0, t0.c51, x'')) AND ((vt1.c0, vt0.c0, t0.c48)))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((((((((((t0.c48)AND(vt0.c0)))OR(vt1.c0)))AND(t0.c48)))OR(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c1 END)))OR((((vt1.c0, vt1.c2, 0.802537543744471)) NOT BETWEEN ((vt0.c0, t0.c51, x'')) AND ((vt1.c0, vt0.c0, t0.c48))))));
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c0) NOT NULL) WHEN ((0.8575769734818325) NOTNULL) THEN vt1.c1 WHEN CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c0 END THEN (((0xfffffffff24a13ff, vt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c2, vt1.c2)) AND ((0.21833846732871642, vt1.c1, vt1.c2))) ELSE (((vt1.c1, vt1.c2, vt1.c2))<=((vt1.c1, vt1.c2, vt1.c0))) END) ORDER BY ((CAST(vt1.c1 AS TEXT))+((~ (vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c0) NOT NULL) WHEN ((0.8575769734818325) NOTNULL) THEN vt1.c1 WHEN CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c0 END THEN (((0Xfffffffff24a13ff, vt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c2, vt1.c2)) AND ((0.21833846732871642, vt1.c1, vt1.c2))) ELSE (((vt1.c1, vt1.c2, vt1.c2))<=((vt1.c1, vt1.c2, vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c1 AS TEXT))+((~ (vt1.c1))))  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c0) NOT NULL) WHEN ((0.8575769734818325) NOTNULL) THEN vt1.c1 WHEN CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c0 END THEN (((0xfffffffff24a13ff, vt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c2, vt1.c2)) AND ((0.21833846732871642, vt1.c1, vt1.c2))) ELSE (((vt1.c1, vt1.c2, vt1.c2))<=((vt1.c1, vt1.c2, vt1.c0))) END) ORDER BY ((CAST(vt1.c1 AS TEXT))+((~ (vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c0) NOT NULL) WHEN ((0.8575769734818325) NOTNULL) THEN vt1.c1 WHEN CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c0 END THEN (((0Xfffffffff24a13ff, vt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c2, vt1.c2)) AND ((0.21833846732871642, vt1.c1, vt1.c2))) ELSE (((vt1.c1, vt1.c2, vt1.c2))<=((vt1.c1, vt1.c2, vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c1 AS TEXT))+((~ (vt1.c1))))  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c0) NOT NULL) WHEN ((0.8575769734818325) NOTNULL) THEN vt1.c1 WHEN CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c0 END THEN (((0xfffffffff24a13ff, vt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c2, vt1.c2)) AND ((0.21833846732871642, vt1.c1, vt1.c2))) ELSE (((vt1.c1, vt1.c2, vt1.c2))<=((vt1.c1, vt1.c2, vt1.c0))) END) ORDER BY ((CAST(vt1.c1 AS TEXT))+((~ (vt1.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51))) BETWEEN (((t0.c48) BETWEEN (t0.c51) AND (t0.c48))) AND (((t0.c51) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51))) BETWEEN (((t0.c48) BETWEEN (t0.c51) AND (t0.c48))) AND (((t0.c51) IS TRUE)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51))) BETWEEN (((t0.c48) BETWEEN (t0.c51) AND (t0.c48))) AND (((t0.c51) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51))) BETWEEN (((t0.c48) BETWEEN (t0.c51) AND (t0.c48))) AND (((t0.c51) IS TRUE)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51))) BETWEEN (((t0.c48) BETWEEN (t0.c51) AND (t0.c48))) AND (((t0.c51) IS TRUE))));
SELECT ALL * FROM t0 INDEXED BY i70 CROSS JOIN vt0 ON (CAST(t0.c48 AS REAL) IN ()) INNER JOIN vt1 ON CASE (NOT (t0.c51))  WHEN (- (NULL)) THEN ((t0.c48) NOTNULL) END WHERE (((vt1.c0 COLLATE BINARY)IS((((vt1.c1))>((t0.c48))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)IS((((vt1.c1))>((t0.c48)))))) IS TRUE)  as count FROM t0 INDEXED BY i70 CROSS JOIN vt0 ON (CAST(t0.c48 AS REAL) IN ()) INNER JOIN vt1 ON CASE (NOT (t0.c51))  WHEN (- (NULL)) THEN ((t0.c48) NOTNULL) END);
SELECT ALL * FROM t0 INDEXED BY i70 CROSS JOIN vt0 ON (CAST(t0.c48 AS REAL) IN ()) INNER JOIN vt1 ON CASE (NOT (t0.c51))  WHEN (- (NULL)) THEN ((t0.c48) NOTNULL) END WHERE (((vt1.c0 COLLATE BINARY)IS((((vt1.c1))>((t0.c48))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)IS((((vt1.c1))>((t0.c48)))))) IS TRUE)  as count FROM t0 INDEXED BY i70 CROSS JOIN vt0 ON (CAST(t0.c48 AS REAL) IN ()) INNER JOIN vt1 ON CASE (NOT (t0.c51))  WHEN (- (NULL)) THEN ((t0.c48) NOTNULL) END);
SELECT ALL * FROM t0 INDEXED BY i70 CROSS JOIN vt0 ON (CAST(t0.c48 AS REAL) IN ()) INNER JOIN vt1 ON CASE (NOT (t0.c51))  WHEN (- (NULL)) THEN ((t0.c48) NOTNULL) END WHERE (((vt1.c0 COLLATE BINARY)IS((((vt1.c1))>((t0.c48))))));
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((vt1.c2)<(vt1.c2)) IN ())) ORDER BY ((CAST(t0.c48 AS BLOB)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2)<(vt1.c2)) IN ())) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((CAST(t0.c48 AS BLOB)) NOTNULL) ASC);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((vt1.c2)<(vt1.c2)) IN ())) ORDER BY ((CAST(t0.c48 AS BLOB)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2)<(vt1.c2)) IN ())) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((CAST(t0.c48 AS BLOB)) NOTNULL) ASC);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((vt1.c2)<(vt1.c2)) IN ())) ORDER BY ((CAST(t0.c48 AS BLOB)) NOTNULL) ASC;
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c48)AND(t0.c51)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c48)AND(t0.c51)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c48)AND(t0.c51)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c48)AND(t0.c51)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c48)AND(t0.c51)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c2)))AND(t0.c48)))OR(x'')))) LEFT OUTER JOIN t0 ON vt0.c0 WHERE (((((t0.c51) IS TRUE))<<(((((t0.c48)OR(t0.c48)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c51) IS TRUE))<<(((((t0.c48)OR(t0.c48)))AND(vt1.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c2)))AND(t0.c48)))OR(x'')))) LEFT OUTER JOIN t0 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c2)))AND(t0.c48)))OR(x'')))) LEFT OUTER JOIN t0 ON vt0.c0 WHERE (((((t0.c51) IS TRUE))<<(((((t0.c48)OR(t0.c48)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c51) IS TRUE))<<(((((t0.c48)OR(t0.c48)))AND(vt1.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c2)))AND(t0.c48)))OR(x'')))) LEFT OUTER JOIN t0 ON vt0.c0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c2) NOT NULL))>('-536816834')));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2) NOT NULL))>('-536816834'))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c2) NOT NULL))>('-536816834')));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2) NOT NULL))>('-536816834'))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c2) NOT NULL))>('-536816834')));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c2 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)<>(vt0.c0)))) AND ((((vt1.c0)>=(vt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)<>(vt0.c0)))) AND ((((vt1.c0)>=(vt1.c2)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c2);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c2 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)<>(vt0.c0)))) AND ((((vt1.c0)>=(vt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)<>(vt0.c0)))) AND ((((vt1.c0)>=(vt1.c2)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c2);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c2 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)<>(vt0.c0)))) AND ((((vt1.c0)>=(vt1.c2))))));
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON ((((((vt1.c0)==(vt1.c2)))AND(((t0.c51)*(x'')))))AND(((vt1.c2) IS TRUE))) WHERE (COALESCE((t0.c51 IN ()), ((vt1.c0) BETWEEN (t0.c51) AND (vt0.c0)), json_patch(t0.c51, t0.c48), ((vt0.c0)<>(vt1.c2)))) ORDER BY ((((vt1.c0)*(t0.c48))) NOT BETWEEN (((vt1.c0)%(vt1.c2))) AND (CAST(t0.c48 AS BLOB))) DESC  NULLS LAST, (+ (TYPEOF(vt1.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((t0.c51 IN ()), ((vt1.c0) BETWEEN (t0.c51) AND (vt0.c0)), json_patch(t0.c51, t0.c48), ((vt0.c0)<>(vt1.c2)))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON ((((((vt1.c0)=(vt1.c2)))AND(((t0.c51)*(x'')))))AND(((vt1.c2) IS TRUE))) ORDER BY ((((vt1.c0)*(t0.c48))) NOT BETWEEN (((vt1.c0)%(vt1.c2))) AND (CAST(t0.c48 AS BLOB))) DESC  NULLS LAST, (+ (TYPEOF(vt1.c2))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON ((((((vt1.c0)==(vt1.c2)))AND(((t0.c51)*(x'')))))AND(((vt1.c2) IS TRUE))) WHERE (COALESCE((t0.c51 IN ()), ((vt1.c0) BETWEEN (t0.c51) AND (vt0.c0)), json_patch(t0.c51, t0.c48), ((vt0.c0)<>(vt1.c2)))) ORDER BY ((((vt1.c0)*(t0.c48))) NOT BETWEEN (((vt1.c0)%(vt1.c2))) AND (CAST(t0.c48 AS BLOB))) DESC  NULLS LAST, (+ (TYPEOF(vt1.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((t0.c51 IN ()), ((vt1.c0) BETWEEN (t0.c51) AND (vt0.c0)), json_patch(t0.c51, t0.c48), ((vt0.c0)<>(vt1.c2)))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON ((((((vt1.c0)=(vt1.c2)))AND(((t0.c51)*(x'')))))AND(((vt1.c2) IS TRUE))) ORDER BY ((((vt1.c0)*(t0.c48))) NOT BETWEEN (((vt1.c0)%(vt1.c2))) AND (CAST(t0.c48 AS BLOB))) DESC  NULLS LAST, (+ (TYPEOF(vt1.c2))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON ((((((vt1.c0)==(vt1.c2)))AND(((t0.c51)*(x'')))))AND(((vt1.c2) IS TRUE))) WHERE (COALESCE((t0.c51 IN ()), ((vt1.c0) BETWEEN (t0.c51) AND (vt0.c0)), json_patch(t0.c51, t0.c48), ((vt0.c0)<>(vt1.c2)))) ORDER BY ((((vt1.c0)*(t0.c48))) NOT BETWEEN (((vt1.c0)%(vt1.c2))) AND (CAST(t0.c48 AS BLOB))) DESC  NULLS LAST, (+ (TYPEOF(vt1.c2))) ASC;
SELECT * FROM vt0, vt1, t0 WHERE ((((t0.c48)) BETWEEN (((((vt1.c1))=((t0.c51))))) AND ((INSTR(t0.c48, vt0.c0))))) ORDER BY CAST(((vt1.c1)IS NOT(vt1.c0)) AS INTEGER)  NULLS FIRST, vt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c48)) BETWEEN (((((vt1.c1))==((t0.c51))))) AND ((INSTR(t0.c48, vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST(((vt1.c1)IS NOT(vt1.c0)) AS INTEGER)  NULLS FIRST, vt1.c1  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE ((((t0.c48)) BETWEEN (((((vt1.c1))=((t0.c51))))) AND ((INSTR(t0.c48, vt0.c0))))) ORDER BY CAST(((vt1.c1)IS NOT(vt1.c0)) AS INTEGER)  NULLS FIRST, vt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c48)) BETWEEN (((((vt1.c1))==((t0.c51))))) AND ((INSTR(t0.c48, vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST(((vt1.c1)IS NOT(vt1.c0)) AS INTEGER)  NULLS FIRST, vt1.c1  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE ((((t0.c48)) BETWEEN (((((vt1.c1))=((t0.c51))))) AND ((INSTR(t0.c48, vt0.c0))))) ORDER BY CAST(((vt1.c1)IS NOT(vt1.c0)) AS INTEGER)  NULLS FIRST, vt1.c1  NULLS FIRST;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON NULL RIGHT OUTER JOIN t0 ON '1029017058' WHERE ((((((vt1.c1)<=(vt1.c2))))>(((vt1.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)<=(vt1.c2))))>(((vt1.c2 IN ()))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON NULL RIGHT OUTER JOIN t0 ON '1029017058');
SELECT ALL * FROM vt1 INNER JOIN vt0 ON NULL RIGHT OUTER JOIN t0 ON '1029017058' WHERE ((((((vt1.c1)<=(vt1.c2))))>(((vt1.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)<=(vt1.c2))))>(((vt1.c2 IN ()))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON NULL RIGHT OUTER JOIN t0 ON '1029017058');
SELECT ALL * FROM vt1 INNER JOIN vt0 ON NULL RIGHT OUTER JOIN t0 ON '1029017058' WHERE ((((((vt1.c1)<=(vt1.c2))))>(((vt1.c2 IN ())))));
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((((((LIKELY(DISTINCT t0.c48))OR(vt1.c1)))OR(((t0.c51) NOT BETWEEN (x'') AND (t0.c48)))))AND((vt0.c0 IN (vt1.c2, t0.c51)))))OR(((vt1.c0)|(vt1.c1))))) ORDER BY (~ (((vt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((LIKELY(DISTINCT t0.c48))OR(vt1.c1)))OR(((t0.c51) NOT BETWEEN (x'') AND (t0.c48)))))AND((vt0.c0 IN (vt1.c2, t0.c51)))))OR(((vt1.c0)|(vt1.c1))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (~ (((vt0.c0) IS FALSE))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((((((LIKELY(DISTINCT t0.c48))OR(vt1.c1)))OR(((t0.c51) NOT BETWEEN (x'') AND (t0.c48)))))AND((vt0.c0 IN (vt1.c2, t0.c51)))))OR(((vt1.c0)|(vt1.c1))))) ORDER BY (~ (((vt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((LIKELY(DISTINCT t0.c48))OR(vt1.c1)))OR(((t0.c51) NOT BETWEEN (x'') AND (t0.c48)))))AND((vt0.c0 IN (vt1.c2, t0.c51)))))OR(((vt1.c0)|(vt1.c1))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (~ (((vt0.c0) IS FALSE))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((((((LIKELY(DISTINCT t0.c48))OR(vt1.c1)))OR(((t0.c51) NOT BETWEEN (x'') AND (t0.c48)))))AND((vt0.c0 IN (vt1.c2, t0.c51)))))OR(((vt1.c0)|(vt1.c1))))) ORDER BY (~ (((vt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((((((vt1.c2)>(vt1.c1))))>=((((vt1.c0) IS TRUE))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2)>(vt1.c1))))>=((((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((((((vt1.c2)>(vt1.c1))))>=((((vt1.c0) IS TRUE))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2)>(vt1.c1))))>=((((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((((((vt1.c2)>(vt1.c1))))>=((((vt1.c0) IS TRUE))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT * FROM t0, vt1, vt0 WHERE (ABS(((t0.c51) ISNULL)));
SELECT SUM(count) FROM (SELECT ((ABS(((t0.c51) ISNULL))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (ABS(((t0.c51) ISNULL)));
SELECT SUM(count) FROM (SELECT ((ABS(((t0.c51) ISNULL))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (ABS(((t0.c51) ISNULL)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c1)OR('')))OR(vt1.c2)))<=(((((vt1.c1)OR(x'')))AND(vt0.c0))))) ORDER BY vt1.c2, ((vt1.c2)>(((vt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)OR('')))OR(vt1.c2)))<=(((((vt1.c1)OR(x'')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c2, ((vt1.c2)>(((vt0.c0) IS TRUE))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c1)OR('')))OR(vt1.c2)))<=(((((vt1.c1)OR(x'')))AND(vt0.c0))))) ORDER BY vt1.c2, ((vt1.c2)>(((vt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)OR('')))OR(vt1.c2)))<=(((((vt1.c1)OR(x'')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c2, ((vt1.c2)>(((vt0.c0) IS TRUE))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c1)OR('')))OR(vt1.c2)))<=(((((vt1.c1)OR(x'')))AND(vt0.c0))))) ORDER BY vt1.c2, ((vt1.c2)>(((vt0.c0) IS TRUE))) ASC;
SELECT ALL COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE t0.c51 END, (vt1.c0 IN (vt1.c1, vt0.c0)), 'ok|0kjA')) AND (((- (t0.c48)), (~ (vt0.c0)), CASE WHEN t0.c51 THEN 1376267919 WHEN vt0.c0 THEN t0.c51 WHEN vt1.c1 THEN vt1.c0 END))) WHERE (CASE (((vt1.c2)) BETWEEN ((vt0.c0)) AND ((t0.c48)))  WHEN CAST(t0.c48 AS INTEGER) THEN ((t0.c51) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.0621691625698203) THEN (NOT (vt0.c0)) WHEN vt1.c0 COLLATE NOCASE THEN (t0.c51 IN ()) END) ORDER BY vt1.c0 ASC, ((t0.c51)AND(NULL)) COLLATE NOCASE DESC, CASE WHEN t0.c51 THEN vt1.c1 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c2)) BETWEEN ((vt0.c0)) AND ((t0.c48)))  WHEN CAST(t0.c48 AS INTEGER) THEN ((t0.c51) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.0621691625698203) THEN (NOT (vt0.c0)) WHEN vt1.c0 COLLATE NOCASE THEN (t0.c51 IN ()) END) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE t0.c51 END, (vt1.c0 IN (vt1.c1, vt0.c0)), 'ok|0kjA')) AND (((- (t0.c48)), (~ (vt0.c0)), CASE WHEN t0.c51 THEN 1376267919 WHEN vt0.c0 THEN t0.c51 WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY vt1.c0 ASC, ((t0.c51)AND(NULL)) COLLATE NOCASE DESC, CASE WHEN t0.c51 THEN vt1.c1 END COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE t0.c51 END, (vt1.c0 IN (vt1.c1, vt0.c0)), 'ok|0kjA')) AND (((- (t0.c48)), (~ (vt0.c0)), CASE WHEN t0.c51 THEN 1376267919 WHEN vt0.c0 THEN t0.c51 WHEN vt1.c1 THEN vt1.c0 END))) WHERE (CASE (((vt1.c2)) BETWEEN ((vt0.c0)) AND ((t0.c48)))  WHEN CAST(t0.c48 AS INTEGER) THEN ((t0.c51) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.0621691625698203) THEN (NOT (vt0.c0)) WHEN vt1.c0 COLLATE NOCASE THEN (t0.c51 IN ()) END) ORDER BY vt1.c0 ASC, ((t0.c51)AND(NULL)) COLLATE NOCASE DESC, CASE WHEN t0.c51 THEN vt1.c1 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c2)) BETWEEN ((vt0.c0)) AND ((t0.c48)))  WHEN CAST(t0.c48 AS INTEGER) THEN ((t0.c51) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.0621691625698203) THEN (NOT (vt0.c0)) WHEN vt1.c0 COLLATE NOCASE THEN (t0.c51 IN ()) END) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE t0.c51 END, (vt1.c0 IN (vt1.c1, vt0.c0)), 'ok|0kjA')) AND (((- (t0.c48)), (~ (vt0.c0)), CASE WHEN t0.c51 THEN 1376267919 WHEN vt0.c0 THEN t0.c51 WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY vt1.c0 ASC, ((t0.c51)AND(NULL)) COLLATE NOCASE DESC, CASE WHEN t0.c51 THEN vt1.c1 END COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE t0.c51 END, (vt1.c0 IN (vt1.c1, vt0.c0)), 'ok|0kjA')) AND (((- (t0.c48)), (~ (vt0.c0)), CASE WHEN t0.c51 THEN 1376267919 WHEN vt0.c0 THEN t0.c51 WHEN vt1.c1 THEN vt1.c0 END))) WHERE (CASE (((vt1.c2)) BETWEEN ((vt0.c0)) AND ((t0.c48)))  WHEN CAST(t0.c48 AS INTEGER) THEN ((t0.c51) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.0621691625698203) THEN (NOT (vt0.c0)) WHEN vt1.c0 COLLATE NOCASE THEN (t0.c51 IN ()) END) ORDER BY vt1.c0 ASC, ((t0.c51)AND(NULL)) COLLATE NOCASE DESC, CASE WHEN t0.c51 THEN vt1.c1 END COLLATE BINARY DESC;
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(((t0.c51)&(t0.c48)))))AND(UNLIKELY(vt0.c0))) WHERE (CASE ((t0.c48)!=(0.9537077584591825))  WHEN t0.c48 COLLATE BINARY THEN t0.c48 WHEN (~ (t0.c48)) THEN (((vt1.c1))=((vt1.c2))) WHEN vt1.c1 THEN ((vt1.c0)+(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c48)!=(0.9537077584591825))  WHEN t0.c48 COLLATE BINARY THEN t0.c48 WHEN (~ (t0.c48)) THEN (((vt1.c1))==((vt1.c2))) WHEN vt1.c1 THEN ((vt1.c0)+(vt0.c0)) END) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(((t0.c51)&(t0.c48)))))AND(UNLIKELY(vt0.c0))));
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(((t0.c51)&(t0.c48)))))AND(UNLIKELY(vt0.c0))) WHERE (CASE ((t0.c48)!=(0.9537077584591825))  WHEN t0.c48 COLLATE BINARY THEN t0.c48 WHEN (~ (t0.c48)) THEN (((vt1.c1))=((vt1.c2))) WHEN vt1.c1 THEN ((vt1.c0)+(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c48)!=(0.9537077584591825))  WHEN t0.c48 COLLATE BINARY THEN t0.c48 WHEN (~ (t0.c48)) THEN (((vt1.c1))==((vt1.c2))) WHEN vt1.c1 THEN ((vt1.c0)+(vt0.c0)) END) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(((t0.c51)&(t0.c48)))))AND(UNLIKELY(vt0.c0))));
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(((t0.c51)&(t0.c48)))))AND(UNLIKELY(vt0.c0))) WHERE (CASE ((t0.c48)!=(0.9537077584591825))  WHEN t0.c48 COLLATE BINARY THEN t0.c48 WHEN (~ (t0.c48)) THEN (((vt1.c1))=((vt1.c2))) WHEN vt1.c1 THEN ((vt1.c0)+(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0))=((vt0.c0))))AND(CAST(vt0.c0 AS TEXT))))AND((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))==((vt0.c0))))AND(CAST(vt0.c0 AS TEXT))))AND((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0))=((vt0.c0))))AND(CAST(vt0.c0 AS TEXT))))AND((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))==((vt0.c0))))AND(CAST(vt0.c0 AS TEXT))))AND((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0))=((vt0.c0))))AND(CAST(vt0.c0 AS TEXT))))AND((+ (vt0.c0)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON NULL COLLATE NOCASE WHERE (((((x'') NOT BETWEEN (vt1.c1) AND (vt1.c0)))OR(vt1.c2))) ORDER BY ((vt1.c1)<=(vt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (vt1.c1) AND (vt1.c0)))OR(vt1.c2))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON NULL COLLATE NOCASE ORDER BY ((vt1.c1)<=(vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON NULL COLLATE NOCASE WHERE (((((x'') NOT BETWEEN (vt1.c1) AND (vt1.c0)))OR(vt1.c2))) ORDER BY ((vt1.c1)<=(vt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (vt1.c1) AND (vt1.c0)))OR(vt1.c2))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON NULL COLLATE NOCASE ORDER BY ((vt1.c1)<=(vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON NULL COLLATE NOCASE WHERE (((((x'') NOT BETWEEN (vt1.c1) AND (vt1.c0)))OR(vt1.c2))) ORDER BY ((vt1.c1)<=(vt1.c0)) COLLATE NOCASE;
SELECT ALL * FROM t0, vt1 WHERE (ABS((((vt1.c1))>=((vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((ABS((((vt1.c1))>=((vt1.c1))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (ABS((((vt1.c1))>=((vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((ABS((((vt1.c1))>=((vt1.c1))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (ABS((((vt1.c1))>=((vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((-828422418)<>(((vt0.c0)||(vt1.c2))))) ORDER BY CAST(vt1.c1 AS NUMERIC) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((-828422418)<>(((vt0.c0)||(vt1.c2))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt1.c1 AS NUMERIC) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((-828422418)<>(((vt0.c0)||(vt1.c2))))) ORDER BY CAST(vt1.c1 AS NUMERIC) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((-828422418)<>(((vt0.c0)||(vt1.c2))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt1.c1 AS NUMERIC) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((-828422418)<>(((vt0.c0)||(vt1.c2))))) ORDER BY CAST(vt1.c1 AS NUMERIC) COLLATE BINARY;
SELECT COUNT(*) FROM t0, vt0 WHERE ('') ORDER BY ((t0.c48 COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (t0.c51))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c48 COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (t0.c51))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ('') ORDER BY ((t0.c48 COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (t0.c51))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c48 COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (t0.c51))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ('') ORDER BY ((t0.c48 COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (t0.c51))))  NULLS FIRST;
SELECT * FROM vt0, t0, vt1 WHERE ((((('') IS FALSE)) IS FALSE)) ORDER BY HEX(DISTINCT (((vt0.c0, t0.c51, vt1.c0))>=((NULL, vt0.c0, vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((('') IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY HEX(DISTINCT (((vt0.c0, t0.c51, vt1.c0))>=((NULL, vt0.c0, vt1.c0)))) DESC);
SELECT * FROM vt0, t0, vt1 WHERE ((((('') IS FALSE)) IS FALSE)) ORDER BY HEX(DISTINCT (((vt0.c0, t0.c51, vt1.c0))>=((NULL, vt0.c0, vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((('') IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY HEX(DISTINCT (((vt0.c0, t0.c51, vt1.c0))>=((NULL, vt0.c0, vt1.c0)))) DESC);
SELECT * FROM vt0, t0, vt1 WHERE ((((('') IS FALSE)) IS FALSE)) ORDER BY HEX(DISTINCT (((vt0.c0, t0.c51, vt1.c0))>=((NULL, vt0.c0, vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c2);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c48)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c48)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c48)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c48)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c48)) COLLATE RTRIM);
SELECT * FROM vt1, t0 WHERE ((((t0.c48) BETWEEN (t0.c48) AND (0Xffffffff9c890816)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48) BETWEEN (t0.c48) AND (0xffffffff9c890816)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((((t0.c48) BETWEEN (t0.c48) AND (0Xffffffff9c890816)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48) BETWEEN (t0.c48) AND (0xffffffff9c890816)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((((t0.c48) BETWEEN (t0.c48) AND (0Xffffffff9c890816)) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (TOTAL_CHANGES()) ORDER BY ((((((vt1.c2)IS(t0.c48)))OR(((vt1.c2)<=(t0.c51)))))AND(((t0.c48) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((vt1.c2)IS(t0.c48)))OR(((vt1.c2)<=(t0.c51)))))AND(((t0.c48) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (TOTAL_CHANGES()) ORDER BY ((((((vt1.c2)IS(t0.c48)))OR(((vt1.c2)<=(t0.c51)))))AND(((t0.c48) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((vt1.c2)IS(t0.c48)))OR(((vt1.c2)<=(t0.c51)))))AND(((t0.c48) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (TOTAL_CHANGES()) ORDER BY ((((((vt1.c2)IS(t0.c48)))OR(((vt1.c2)<=(t0.c51)))))AND(((t0.c48) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT * FROM vt0, t0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE WHEN t0.c51 THEN vt0.c0 WHEN t0.c48 THEN vt0.c0 WHEN t0.c48 THEN vt0.c0 END) AND (0.18492941793528794)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE WHEN t0.c51 THEN vt0.c0 WHEN t0.c48 THEN vt0.c0 WHEN t0.c48 THEN vt0.c0 END) AND (0.18492941793528794))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE WHEN t0.c51 THEN vt0.c0 WHEN t0.c48 THEN vt0.c0 WHEN t0.c48 THEN vt0.c0 END) AND (0.18492941793528794)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE WHEN t0.c51 THEN vt0.c0 WHEN t0.c48 THEN vt0.c0 WHEN t0.c48 THEN vt0.c0 END) AND (0.18492941793528794))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE WHEN t0.c51 THEN vt0.c0 WHEN t0.c48 THEN vt0.c0 WHEN t0.c48 THEN vt0.c0 END) AND (0.18492941793528794)));
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((t0.c48))<=(((t0.c48 IN ())))), (+ (((t0.c51)GLOB(t0.c48)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((t0.c48))<=(((t0.c48 IN ())))), (+ (((t0.c51)GLOB(t0.c48)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((t0.c48))<=(((t0.c48 IN ())))), (+ (((t0.c51)GLOB(t0.c48)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((t0.c48))<=(((t0.c48 IN ())))), (+ (((t0.c51)GLOB(t0.c48)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((t0.c48))<=(((t0.c48 IN ())))), (+ (((t0.c51)GLOB(t0.c48)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON (((- (0.4182926829105875)))GLOB(((t0.c48)IS NOT(t0.c48)))) WHERE (UNLIKELY(CASE WHEN t0.c51 THEN vt1.c0 ELSE vt1.c2 END)) ORDER BY (((x'')) NOT BETWEEN ((((((t0.c48)OR(t0.c48)))OR(vt1.c1)))) AND ((((vt1.c2) NOTNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE WHEN t0.c51 THEN vt1.c0 ELSE vt1.c2 END)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((- (0.4182926829105875)))GLOB(((t0.c48)IS NOT(t0.c48)))) ORDER BY (((x'')) NOT BETWEEN ((((((t0.c48)OR(t0.c48)))OR(vt1.c1)))) AND ((((vt1.c2) NOTNULL)))) ASC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON (((- (0.4182926829105875)))GLOB(((t0.c48)IS NOT(t0.c48)))) WHERE (UNLIKELY(CASE WHEN t0.c51 THEN vt1.c0 ELSE vt1.c2 END)) ORDER BY (((x'')) NOT BETWEEN ((((((t0.c48)OR(t0.c48)))OR(vt1.c1)))) AND ((((vt1.c2) NOTNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE WHEN t0.c51 THEN vt1.c0 ELSE vt1.c2 END)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((- (0.4182926829105875)))GLOB(((t0.c48)IS NOT(t0.c48)))) ORDER BY (((x'')) NOT BETWEEN ((((((t0.c48)OR(t0.c48)))OR(vt1.c1)))) AND ((((vt1.c2) NOTNULL)))) ASC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON (((- (0.4182926829105875)))GLOB(((t0.c48)IS NOT(t0.c48)))) WHERE (UNLIKELY(CASE WHEN t0.c51 THEN vt1.c0 ELSE vt1.c2 END)) ORDER BY (((x'')) NOT BETWEEN ((((((t0.c48)OR(t0.c48)))OR(vt1.c1)))) AND ((((vt1.c2) NOTNULL)))) ASC;
SELECT * FROM vt1, t0, vt0 WHERE (ROUND(x'1c0f', (('384399448')<<(t0.c48))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(x'1c0f', (('384399448')<<(t0.c48)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (ROUND(x'1c0f', (('384399448')<<(t0.c48))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(x'1c0f', (('384399448')<<(t0.c48)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (ROUND(x'1c0f', (('384399448')<<(t0.c48))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.45991880660807605 THEN x'' END AS INTEGER)) ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST, ('-146505955' IN (vt0.c0, vt0.c0)) COLLATE RTRIM  NULLS FIRST, ((0.7723804216940977) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.45991880660807605 THEN x'' END AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST, ('-146505955' IN (vt0.c0, vt0.c0)) COLLATE RTRIM  NULLS FIRST, ((0.7723804216940977) NOTNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.45991880660807605 THEN x'' END AS INTEGER)) ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST, ('-146505955' IN (vt0.c0, vt0.c0)) COLLATE RTRIM  NULLS FIRST, ((0.7723804216940977) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.45991880660807605 THEN x'' END AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST, ('-146505955' IN (vt0.c0, vt0.c0)) COLLATE RTRIM  NULLS FIRST, ((0.7723804216940977) NOTNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.45991880660807605 THEN x'' END AS INTEGER)) ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST, ('-146505955' IN (vt0.c0, vt0.c0)) COLLATE RTRIM  NULLS FIRST, ((0.7723804216940977) NOTNULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER));
SELECT * FROM vt1 NATURAL JOIN t0 WHERE (((LIKELY(t0.c51)) NOT BETWEEN (vt1.c2 COLLATE BINARY) AND (((((t0.c51)AND(vt1.c2)))AND(t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(t0.c51)) NOT BETWEEN (vt1.c2 COLLATE BINARY) AND (((((t0.c51)AND(vt1.c2)))AND(t0.c48))))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT * FROM vt1 NATURAL JOIN t0 WHERE (((LIKELY(t0.c51)) NOT BETWEEN (vt1.c2 COLLATE BINARY) AND (((((t0.c51)AND(vt1.c2)))AND(t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(t0.c51)) NOT BETWEEN (vt1.c2 COLLATE BINARY) AND (((((t0.c51)AND(vt1.c2)))AND(t0.c48))))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT * FROM vt1 NATURAL JOIN t0 WHERE (((LIKELY(t0.c51)) NOT BETWEEN (vt1.c2 COLLATE BINARY) AND (((((t0.c51)AND(vt1.c2)))AND(t0.c48)))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c1) NOTNULL))GLOB(((vt1.c0)>=(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOTNULL))GLOB(((vt1.c0)>=(vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c1) NOTNULL))GLOB(((vt1.c0)>=(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOTNULL))GLOB(((vt1.c0)>=(vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c1) NOTNULL))GLOB(((vt1.c0)>=(vt1.c2)))));
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c1)>(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)>(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c1)>(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)>(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c1)>(vt1.c0)) IN ()));
SELECT ALL * FROM t0 WHERE (CASE ((((t0.c48)AND(t0.c48)))OR(t0.c48))  WHEN ((t0.c48)&(t0.c51)) THEN t0.c48 WHEN (t0.c48 IN ()) THEN ((t0.c51) NOT NULL) WHEN CAST(t0.c48 AS NUMERIC) THEN CAST(t0.c51 AS INTEGER) WHEN 'P<j.kc!Lc' THEN ((t0.c48) IS TRUE) WHEN ABS(DISTINCT t0.c51) THEN ((2.110867889E9) NOT BETWEEN (t0.c51) AND (t0.c51)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c48)AND(t0.c48)))OR(t0.c48))  WHEN ((t0.c48)&(t0.c51)) THEN t0.c48 WHEN (t0.c48 IN ()) THEN ((t0.c51) NOT NULL) WHEN CAST(t0.c48 AS NUMERIC) THEN CAST(t0.c51 AS INTEGER) WHEN 'P<j.kc!Lc' THEN ((t0.c48) IS TRUE) WHEN ABS(DISTINCT t0.c51) THEN ((2.110867889E9) NOT BETWEEN (t0.c51) AND (t0.c51)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((((t0.c48)AND(t0.c48)))OR(t0.c48))  WHEN ((t0.c48)&(t0.c51)) THEN t0.c48 WHEN (t0.c48 IN ()) THEN ((t0.c51) NOT NULL) WHEN CAST(t0.c48 AS NUMERIC) THEN CAST(t0.c51 AS INTEGER) WHEN 'P<j.kc!Lc' THEN ((t0.c48) IS TRUE) WHEN ABS(DISTINCT t0.c51) THEN ((2.110867889E9) NOT BETWEEN (t0.c51) AND (t0.c51)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c48)AND(t0.c48)))OR(t0.c48))  WHEN ((t0.c48)&(t0.c51)) THEN t0.c48 WHEN (t0.c48 IN ()) THEN ((t0.c51) NOT NULL) WHEN CAST(t0.c48 AS NUMERIC) THEN CAST(t0.c51 AS INTEGER) WHEN 'P<j.kc!Lc' THEN ((t0.c48) IS TRUE) WHEN ABS(DISTINCT t0.c51) THEN ((2.110867889E9) NOT BETWEEN (t0.c51) AND (t0.c51)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((((t0.c48)AND(t0.c48)))OR(t0.c48))  WHEN ((t0.c48)&(t0.c51)) THEN t0.c48 WHEN (t0.c48 IN ()) THEN ((t0.c51) NOT NULL) WHEN CAST(t0.c48 AS NUMERIC) THEN CAST(t0.c51 AS INTEGER) WHEN 'P<j.kc!Lc' THEN ((t0.c48) IS TRUE) WHEN ABS(DISTINCT t0.c51) THEN ((2.110867889E9) NOT BETWEEN (t0.c51) AND (t0.c51)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c1)>>(vt1.c2))))) ORDER BY (+ (((vt1.c2)>>(vt1.c1))))  NULLS LAST, ((CAST(vt1.c0 AS BLOB))>(((vt1.c1)+(0.06678351815792516)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c1)>>(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c2)>>(vt1.c1))))  NULLS LAST, ((CAST(vt1.c0 AS BLOB))>(((vt1.c1)+(0.06678351815792516)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c1)>>(vt1.c2))))) ORDER BY (+ (((vt1.c2)>>(vt1.c1))))  NULLS LAST, ((CAST(vt1.c0 AS BLOB))>(((vt1.c1)+(0.06678351815792516)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c1)>>(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c2)>>(vt1.c1))))  NULLS LAST, ((CAST(vt1.c0 AS BLOB))>(((vt1.c1)+(0.06678351815792516)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c1)>>(vt1.c2))))) ORDER BY (+ (((vt1.c2)>>(vt1.c1))))  NULLS LAST, ((CAST(vt1.c0 AS BLOB))>(((vt1.c1)+(0.06678351815792516)))) DESC;
SELECT COUNT(*) FROM t0, vt1 WHERE (((vt1.c0) NOT NULL) COLLATE RTRIM) ORDER BY (((vt1.c1 IN ())) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1 ORDER BY (((vt1.c1 IN ())) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((vt1.c0) NOT NULL) COLLATE RTRIM) ORDER BY (((vt1.c1 IN ())) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1 ORDER BY (((vt1.c1 IN ())) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((vt1.c0) NOT NULL) COLLATE RTRIM) ORDER BY (((vt1.c1 IN ())) NOTNULL)  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((+ (((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((+ (((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((+ (((vt0.c0)|(vt0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c51))) BETWEEN (t0.c48 COLLATE NOCASE) AND (0.26991274075836713 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c51))) BETWEEN (t0.c48 COLLATE NOCASE) AND (0.26991274075836713 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c51))) BETWEEN (t0.c48 COLLATE NOCASE) AND (0.26991274075836713 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c51))) BETWEEN (t0.c48 COLLATE NOCASE) AND (0.26991274075836713 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c51))) BETWEEN (t0.c48 COLLATE NOCASE) AND (0.26991274075836713 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((CASE vt0.c0  WHEN vt1.c2 THEN t0.c51 ELSE t0.c51 END)OR(''))) ORDER BY ((t0.c51) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt1.c2 THEN t0.c51 ELSE t0.c51 END)OR(''))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((t0.c51) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((CASE vt0.c0  WHEN vt1.c2 THEN t0.c51 ELSE t0.c51 END)OR(''))) ORDER BY ((t0.c51) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt1.c2 THEN t0.c51 ELSE t0.c51 END)OR(''))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((t0.c51) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((CASE vt0.c0  WHEN vt1.c2 THEN t0.c51 ELSE t0.c51 END)OR(''))) ORDER BY ((t0.c51) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((((((((((t0.c48)&(t0.c48)))AND(((t0.c51)+(t0.c51)))))AND((- (1058058479)))))OR((((t0.c51, t0.c51, NULL, t0.c48, t0.c48)) BETWEEN ((t0.c48, t0.c51, t0.c51, t0.c48, t0.c48)) AND ((t0.c51, t0.c51, t0.c51, t0.c51, t0.c48))))))AND(CAST(t0.c51 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c48)&(t0.c48)))AND(((t0.c51)+(t0.c51)))))AND((- (1058058479)))))OR((((t0.c51, t0.c51, NULL, t0.c48, t0.c48)) BETWEEN ((t0.c48, t0.c51, t0.c51, t0.c48, t0.c48)) AND ((t0.c51, t0.c51, t0.c51, t0.c51, t0.c48))))))AND(CAST(t0.c51 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((t0.c48)&(t0.c48)))AND(((t0.c51)+(t0.c51)))))AND((- (1058058479)))))OR((((t0.c51, t0.c51, NULL, t0.c48, t0.c48)) BETWEEN ((t0.c48, t0.c51, t0.c51, t0.c48, t0.c48)) AND ((t0.c51, t0.c51, t0.c51, t0.c51, t0.c48))))))AND(CAST(t0.c51 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c48)&(t0.c48)))AND(((t0.c51)+(t0.c51)))))AND((- (1058058479)))))OR((((t0.c51, t0.c51, NULL, t0.c48, t0.c48)) BETWEEN ((t0.c48, t0.c51, t0.c51, t0.c48, t0.c48)) AND ((t0.c51, t0.c51, t0.c51, t0.c51, t0.c48))))))AND(CAST(t0.c51 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((t0.c48)&(t0.c48)))AND(((t0.c51)+(t0.c51)))))AND((- (1058058479)))))OR((((t0.c51, t0.c51, NULL, t0.c48, t0.c48)) BETWEEN ((t0.c48, t0.c51, t0.c51, t0.c48, t0.c48)) AND ((t0.c51, t0.c51, t0.c51, t0.c51, t0.c48))))))AND(CAST(t0.c51 AS REAL))));
SELECT COUNT(*) FROM t0 WHERE ((((((((((((t0.c48))>((t0.c48))))OR(((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c51)))))OR(CASE WHEN t0.c48 THEN t0.c48 ELSE t0.c51 END)))OR(((t0.c48) IS TRUE))))AND(t0.c51 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c48))>((t0.c48))))OR(((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c51)))))OR(CASE WHEN t0.c48 THEN t0.c48 ELSE t0.c51 END)))OR(((t0.c48) IS TRUE))))AND(t0.c51 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((((((t0.c48))>((t0.c48))))OR(((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c51)))))OR(CASE WHEN t0.c48 THEN t0.c48 ELSE t0.c51 END)))OR(((t0.c48) IS TRUE))))AND(t0.c51 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c48))>((t0.c48))))OR(((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c51)))))OR(CASE WHEN t0.c48 THEN t0.c48 ELSE t0.c51 END)))OR(((t0.c48) IS TRUE))))AND(t0.c51 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((((((t0.c48))>((t0.c48))))OR(((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c51)))))OR(CASE WHEN t0.c48 THEN t0.c48 ELSE t0.c51 END)))OR(((t0.c48) IS TRUE))))AND(t0.c51 COLLATE RTRIM)));
SELECT * FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51)))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51)))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51)))) AND (((vt0.c0 IN ())))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c51)/(')s-47o	6')) COLLATE BINARY) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c51)/(')s-47o	6')) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1 ORDER BY '' DESC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c51)/(')s-47o	6')) COLLATE BINARY) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c51)/(')s-47o	6')) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1 ORDER BY '' DESC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c51)/(')s-47o	6')) COLLATE BINARY) ORDER BY '' DESC;
SELECT * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON 2041522935 WHERE ((((((vt0.c0 IN ()))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'421d'))))))AND(t0.c48)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'421d'))))))AND(t0.c48))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON 2041522935);
SELECT * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON 2041522935 WHERE ((((((vt0.c0 IN ()))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'421d'))))))AND(t0.c48)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'421d'))))))AND(t0.c48))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON 2041522935);
SELECT * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON 2041522935 WHERE ((((((vt0.c0 IN ()))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'421d'))))))AND(t0.c48)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) IS FALSE)) BETWEEN (CASE vt1.c2  WHEN vt1.c0 THEN vt1.c2 ELSE NULL END) AND (CASE WHEN '2023581080' THEN '0.3832505426505749' WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 END)) WHERE (((CASE WHEN vt1.c2 THEN vt1.c0 END) NOT BETWEEN ('' COLLATE BINARY) AND (((-338985615) NOT BETWEEN (vt1.c2) AND (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c2 THEN vt1.c0 END) NOT BETWEEN ('' COLLATE BINARY) AND (((-338985615) NOT BETWEEN (vt1.c2) AND (vt1.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) IS FALSE)) BETWEEN (CASE vt1.c2  WHEN vt1.c0 THEN vt1.c2 ELSE NULL END) AND (CASE WHEN '2023581080' THEN '0.3832505426505749' WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) IS FALSE)) BETWEEN (CASE vt1.c2  WHEN vt1.c0 THEN vt1.c2 ELSE NULL END) AND (CASE WHEN '2023581080' THEN '0.3832505426505749' WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 END)) WHERE (((CASE WHEN vt1.c2 THEN vt1.c0 END) NOT BETWEEN ('' COLLATE BINARY) AND (((-338985615) NOT BETWEEN (vt1.c2) AND (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c2 THEN vt1.c0 END) NOT BETWEEN ('' COLLATE BINARY) AND (((-338985615) NOT BETWEEN (vt1.c2) AND (vt1.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) IS FALSE)) BETWEEN (CASE vt1.c2  WHEN vt1.c0 THEN vt1.c2 ELSE NULL END) AND (CASE WHEN '2023581080' THEN '0.3832505426505749' WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) IS FALSE)) BETWEEN (CASE vt1.c2  WHEN vt1.c0 THEN vt1.c2 ELSE NULL END) AND (CASE WHEN '2023581080' THEN '0.3832505426505749' WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 END)) WHERE (((CASE WHEN vt1.c2 THEN vt1.c0 END) NOT BETWEEN ('' COLLATE BINARY) AND (((-338985615) NOT BETWEEN (vt1.c2) AND (vt1.c2)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (((vt1.c1, vt1.c2, vt1.c2))>=((vt1.c1, vt1.c2, vt0.c0))) THEN (('342462072')%(vt1.c2)) ELSE ((t0.c48) BETWEEN (vt0.c0) AND (t0.c48)) END INNER JOIN t0 ON (((t0.c51)) NOT BETWEEN ((((vt1.c1) BETWEEN (vt0.c0) AND ('cD')))) AND (((+ (t0.c48))))) WHERE (((CASE WHEN x'' THEN '' ELSE vt1.c1 END) BETWEEN (((vt1.c2) IS FALSE)) AND (json(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'' THEN '' ELSE vt1.c1 END) BETWEEN (((vt1.c2) IS FALSE)) AND (json(vt1.c0)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (((vt1.c1, vt1.c2, vt1.c2))>=((vt1.c1, vt1.c2, vt0.c0))) THEN (('342462072')%(vt1.c2)) ELSE ((t0.c48) BETWEEN (vt0.c0) AND (t0.c48)) END INNER JOIN t0 ON (((t0.c51)) NOT BETWEEN ((((vt1.c1) BETWEEN (vt0.c0) AND ('cD')))) AND (((+ (t0.c48))))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (((vt1.c1, vt1.c2, vt1.c2))>=((vt1.c1, vt1.c2, vt0.c0))) THEN (('342462072')%(vt1.c2)) ELSE ((t0.c48) BETWEEN (vt0.c0) AND (t0.c48)) END INNER JOIN t0 ON (((t0.c51)) NOT BETWEEN ((((vt1.c1) BETWEEN (vt0.c0) AND ('cD')))) AND (((+ (t0.c48))))) WHERE (((CASE WHEN x'' THEN '' ELSE vt1.c1 END) BETWEEN (((vt1.c2) IS FALSE)) AND (json(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'' THEN '' ELSE vt1.c1 END) BETWEEN (((vt1.c2) IS FALSE)) AND (json(vt1.c0)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (((vt1.c1, vt1.c2, vt1.c2))>=((vt1.c1, vt1.c2, vt0.c0))) THEN (('342462072')%(vt1.c2)) ELSE ((t0.c48) BETWEEN (vt0.c0) AND (t0.c48)) END INNER JOIN t0 ON (((t0.c51)) NOT BETWEEN ((((vt1.c1) BETWEEN (vt0.c0) AND ('cD')))) AND (((+ (t0.c48))))));
SELECT COUNT(*) FROM vt1, t0 WHERE (0.5117392329282221);
SELECT SUM(count) FROM (SELECT ((0.5117392329282221) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (0.5117392329282221);
SELECT SUM(count) FROM (SELECT ((0.5117392329282221) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (0.5117392329282221);
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL));
SELECT COUNT(*) FROM vt1 WHERE (CAST((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))) AS NUMERIC)) ORDER BY CAST(vt1.c2 AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c2 AS INTEGER));
SELECT COUNT(*) FROM vt1 WHERE (CAST((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))) AS NUMERIC)) ORDER BY CAST(vt1.c2 AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c2 AS INTEGER));
SELECT COUNT(*) FROM vt1 WHERE (CAST((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))) AS NUMERIC)) ORDER BY CAST(vt1.c2 AS INTEGER);
SELECT * FROM t0 WHERE (((CASE t0.c48  WHEN t0.c51 THEN t0.c51 END) BETWEEN ((- (t0.c51))) AND ((t0.c51 IN ())))) ORDER BY CAST(CASE WHEN t0.c48 THEN t0.c51 ELSE t0.c48 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((CASE t0.c48  WHEN t0.c51 THEN t0.c51 END) BETWEEN ((- (t0.c51))) AND ((t0.c51 IN ())))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE WHEN t0.c48 THEN t0.c51 ELSE t0.c48 END AS INTEGER));
SELECT * FROM t0 WHERE (((CASE t0.c48  WHEN t0.c51 THEN t0.c51 END) BETWEEN ((- (t0.c51))) AND ((t0.c51 IN ())))) ORDER BY CAST(CASE WHEN t0.c48 THEN t0.c51 ELSE t0.c48 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((CASE t0.c48  WHEN t0.c51 THEN t0.c51 END) BETWEEN ((- (t0.c51))) AND ((t0.c51 IN ())))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE WHEN t0.c48 THEN t0.c51 ELSE t0.c48 END AS INTEGER));
SELECT * FROM t0 WHERE (((CASE t0.c48  WHEN t0.c51 THEN t0.c51 END) BETWEEN ((- (t0.c51))) AND ((t0.c51 IN ())))) ORDER BY CAST(CASE WHEN t0.c48 THEN t0.c51 ELSE t0.c48 END AS INTEGER);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON '' WHERE (((t0.c48)LIKE(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((t0.c48)LIKE(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON '');
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON '' WHERE (((t0.c48)LIKE(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((t0.c48)LIKE(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON '');
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON '' WHERE (((t0.c48)LIKE(((vt0.c0) NOT NULL))));
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((t0.c48)-(vt1.c2))) NOT BETWEEN (LOWER(vt1.c2)) AND (((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c2)))OR(vt1.c2))))) ORDER BY ((((t0.c48)<<(vt1.c1)))<<(vt1.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c48)-(vt1.c2))) NOT BETWEEN (LOWER(vt1.c2)) AND (((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c2)))OR(vt1.c2))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((t0.c48)<<(vt1.c1)))<<(vt1.c1)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((t0.c48)-(vt1.c2))) NOT BETWEEN (LOWER(vt1.c2)) AND (((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c2)))OR(vt1.c2))))) ORDER BY ((((t0.c48)<<(vt1.c1)))<<(vt1.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c48)-(vt1.c2))) NOT BETWEEN (LOWER(vt1.c2)) AND (((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c2)))OR(vt1.c2))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((t0.c48)<<(vt1.c1)))<<(vt1.c1)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((t0.c48)-(vt1.c2))) NOT BETWEEN (LOWER(vt1.c2)) AND (((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c2)))OR(vt1.c2))))) ORDER BY ((((t0.c48)<<(vt1.c1)))<<(vt1.c1)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ('') ORDER BY (((vt1.c0, t0.c51, '-1218500841')) BETWEEN ((((vt0.c0)<<(t0.c51)), CASE vt1.c1  WHEN '-1265670752' THEN vt1.c1 WHEN vt1.c2 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 END, ((vt0.c0)LIKE(vt1.c0)))) AND ((vt0.c0 COLLATE NOCASE, ((vt0.c0)>=(vt0.c0)), ((vt0.c0) IS FALSE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((vt1.c0, t0.c51, '-1218500841')) BETWEEN ((((vt0.c0)<<(t0.c51)), CASE vt1.c1  WHEN '-1265670752' THEN vt1.c1 WHEN vt1.c2 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 END, ((vt0.c0)LIKE(vt1.c0)))) AND ((vt0.c0 COLLATE NOCASE, ((vt0.c0)>=(vt0.c0)), ((vt0.c0) IS FALSE)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ('') ORDER BY (((vt1.c0, t0.c51, '-1218500841')) BETWEEN ((((vt0.c0)<<(t0.c51)), CASE vt1.c1  WHEN '-1265670752' THEN vt1.c1 WHEN vt1.c2 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 END, ((vt0.c0)LIKE(vt1.c0)))) AND ((vt0.c0 COLLATE NOCASE, ((vt0.c0)>=(vt0.c0)), ((vt0.c0) IS FALSE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((vt1.c0, t0.c51, '-1218500841')) BETWEEN ((((vt0.c0)<<(t0.c51)), CASE vt1.c1  WHEN '-1265670752' THEN vt1.c1 WHEN vt1.c2 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 END, ((vt0.c0)LIKE(vt1.c0)))) AND ((vt0.c0 COLLATE NOCASE, ((vt0.c0)>=(vt0.c0)), ((vt0.c0) IS FALSE)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ('') ORDER BY (((vt1.c0, t0.c51, '-1218500841')) BETWEEN ((((vt0.c0)<<(t0.c51)), CASE vt1.c1  WHEN '-1265670752' THEN vt1.c1 WHEN vt1.c2 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 END, ((vt0.c0)LIKE(vt1.c0)))) AND ((vt0.c0 COLLATE NOCASE, ((vt0.c0)>=(vt0.c0)), ((vt0.c0) IS FALSE)))) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((t0.c51)<<(t0.c51)) COLLATE BINARY WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((t0.c51)<<(t0.c51)) COLLATE BINARY);
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((t0.c51)<<(t0.c51)) COLLATE BINARY WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((t0.c51)<<(t0.c51)) COLLATE BINARY);
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((t0.c51)<<(t0.c51)) COLLATE BINARY WHERE (vt0.c0);
SELECT * FROM t0, vt0, vt1 WHERE (((vt1.c2)*(vt1.c2)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2)*(vt1.c2)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (((vt1.c2)*(vt1.c2)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2)*(vt1.c2)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (((vt1.c2)*(vt1.c2)) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON 0.013957200263734815 WHERE (((((vt0.c0) BETWEEN (t0.c48) AND (t0.c48)))-(((((t0.c51)OR(t0.c51)))OR(vt0.c0))))) ORDER BY t0.c51 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (t0.c48) AND (t0.c48)))-(((((t0.c51)OR(t0.c51)))OR(vt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON 0.013957200263734815 ORDER BY t0.c51 COLLATE NOCASE);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON 0.013957200263734815 WHERE (((((vt0.c0) BETWEEN (t0.c48) AND (t0.c48)))-(((((t0.c51)OR(t0.c51)))OR(vt0.c0))))) ORDER BY t0.c51 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (t0.c48) AND (t0.c48)))-(((((t0.c51)OR(t0.c51)))OR(vt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON 0.013957200263734815 ORDER BY t0.c51 COLLATE NOCASE);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON 0.013957200263734815 WHERE (((((vt0.c0) BETWEEN (t0.c48) AND (t0.c48)))-(((((t0.c51)OR(t0.c51)))OR(vt0.c0))))) ORDER BY t0.c51 COLLATE NOCASE;
SELECT ALL * FROM vt1 WHERE ((((vt1.c1 IN ())) BETWEEN ((((vt1.c1))>=((vt1.c2)))) AND (vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN ())) BETWEEN ((((vt1.c1))>=((vt1.c2)))) AND (vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1 IN ())) BETWEEN ((((vt1.c1))>=((vt1.c2)))) AND (vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN ())) BETWEEN ((((vt1.c1))>=((vt1.c2)))) AND (vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1 IN ())) BETWEEN ((((vt1.c1))>=((vt1.c2)))) AND (vt1.c1)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((((vt0.c0)IS(x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((((vt0.c0)IS(x'')))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((((vt0.c0)IS(x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((((vt0.c0)IS(x'')))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((((vt0.c0)IS(x''))))));
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c2)+(t0.c48)), (((0.4947184000109237)) BETWEEN ((t0.c48)) AND ((t0.c48))), ((vt1.c2)>=(t0.c51))))<>((NULL COLLATE BINARY, ((x'')IS(NULL)), ((t0.c51) BETWEEN (t0.c51) AND (vt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c2)+(t0.c48)), (((0.4947184000109237)) BETWEEN ((t0.c48)) AND ((t0.c48))), ((vt1.c2)>=(t0.c51))))!=((NULL COLLATE BINARY, ((x'')IS(NULL)), ((t0.c51) BETWEEN (t0.c51) AND (vt1.c2)))))) IS TRUE)  as count FROM vt1 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c2)+(t0.c48)), (((0.4947184000109237)) BETWEEN ((t0.c48)) AND ((t0.c48))), ((vt1.c2)>=(t0.c51))))<>((NULL COLLATE BINARY, ((x'')IS(NULL)), ((t0.c51) BETWEEN (t0.c51) AND (vt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c2)+(t0.c48)), (((0.4947184000109237)) BETWEEN ((t0.c48)) AND ((t0.c48))), ((vt1.c2)>=(t0.c51))))!=((NULL COLLATE BINARY, ((x'')IS(NULL)), ((t0.c51) BETWEEN (t0.c51) AND (vt1.c2)))))) IS TRUE)  as count FROM vt1 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c2)+(t0.c48)), (((0.4947184000109237)) BETWEEN ((t0.c48)) AND ((t0.c48))), ((vt1.c2)>=(t0.c51))))<>((NULL COLLATE BINARY, ((x'')IS(NULL)), ((t0.c51) BETWEEN (t0.c51) AND (vt1.c2))))));
SELECT ALL * FROM t0 WHERE ((((CAST(t0.c51 AS NUMERIC)))>=((TYPEOF(DISTINCT t0.c48))))) ORDER BY ((CAST(t0.c51 AS INTEGER))==((+ ('1881902185'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c51 AS NUMERIC)))>=((TYPEOF(DISTINCT t0.c48))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c51 AS INTEGER))=((+ ('1881902185'))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((CAST(t0.c51 AS NUMERIC)))>=((TYPEOF(DISTINCT t0.c48))))) ORDER BY ((CAST(t0.c51 AS INTEGER))==((+ ('1881902185'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c51 AS NUMERIC)))>=((TYPEOF(DISTINCT t0.c48))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c51 AS INTEGER))=((+ ('1881902185'))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((CAST(t0.c51 AS NUMERIC)))>=((TYPEOF(DISTINCT t0.c48))))) ORDER BY ((CAST(t0.c51 AS INTEGER))==((+ ('1881902185'))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((NULL) NOT BETWEEN ((((vt1.c0))<((vt1.c1)))) AND (TYPEOF(vt1.c0)))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN ((((vt1.c0))<((vt1.c1)))) AND (TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((NULL) NOT BETWEEN ((((vt1.c0))<((vt1.c1)))) AND (TYPEOF(vt1.c0)))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN ((((vt1.c0))<((vt1.c1)))) AND (TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((NULL) NOT BETWEEN ((((vt1.c0))<((vt1.c1)))) AND (TYPEOF(vt1.c0)))) ORDER BY NULL ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN vt1 ON ((((((((vt1.c0)AND(t0.c51)))AND(t0.c51)))AND(2004907472)))OR(((vt1.c1)=(vt1.c0)))) WHERE (((t0.c48)&(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c48)&(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON ((((((((vt1.c0)AND(t0.c51)))AND(t0.c51)))AND(2004907472)))OR(((vt1.c1)==(vt1.c0)))));
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN vt1 ON ((((((((vt1.c0)AND(t0.c51)))AND(t0.c51)))AND(2004907472)))OR(((vt1.c1)=(vt1.c0)))) WHERE (((t0.c48)&(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c48)&(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON ((((((((vt1.c0)AND(t0.c51)))AND(t0.c51)))AND(2004907472)))OR(((vt1.c1)==(vt1.c0)))));
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN vt1 ON ((((((((vt1.c0)AND(t0.c51)))AND(t0.c51)))AND(2004907472)))OR(((vt1.c1)=(vt1.c0)))) WHERE (((t0.c48)&(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT (- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (- (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT (- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (- (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT (- (vt0.c0))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c51)))<((((vt0.c0)) BETWEEN ((t0.c48)) AND ((vt0.c0)))))) ORDER BY '', (((((t0.c51)) NOT BETWEEN ((t0.c48)) AND ((t0.c48)))) BETWEEN ('1427054003') AND (t0.c51)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c51)))<((((vt0.c0)) BETWEEN ((t0.c48)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY '', (((((t0.c51)) NOT BETWEEN ((t0.c48)) AND ((t0.c48)))) BETWEEN ('1427054003') AND (t0.c51)) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c51)))<((((vt0.c0)) BETWEEN ((t0.c48)) AND ((vt0.c0)))))) ORDER BY '', (((((t0.c51)) NOT BETWEEN ((t0.c48)) AND ((t0.c48)))) BETWEEN ('1427054003') AND (t0.c51)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c51)))<((((vt0.c0)) BETWEEN ((t0.c48)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY '', (((((t0.c51)) NOT BETWEEN ((t0.c48)) AND ((t0.c48)))) BETWEEN ('1427054003') AND (t0.c51)) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c51)))<((((vt0.c0)) BETWEEN ((t0.c48)) AND ((vt0.c0)))))) ORDER BY '', (((((t0.c51)) NOT BETWEEN ((t0.c48)) AND ((t0.c48)))) BETWEEN ('1427054003') AND (t0.c51)) ASC;
SELECT ALL * FROM vt1, t0 WHERE (((CASE WHEN t0.c51 THEN x'' WHEN t0.c51 THEN vt1.c0 WHEN t0.c48 THEN vt1.c2 ELSE x'' END)/(((vt1.c2)||(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c51 THEN x'' WHEN t0.c51 THEN vt1.c0 WHEN t0.c48 THEN vt1.c2 ELSE x'' END)/(((vt1.c2)||(vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((CASE WHEN t0.c51 THEN x'' WHEN t0.c51 THEN vt1.c0 WHEN t0.c48 THEN vt1.c2 ELSE x'' END)/(((vt1.c2)||(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c51 THEN x'' WHEN t0.c51 THEN vt1.c0 WHEN t0.c48 THEN vt1.c2 ELSE x'' END)/(((vt1.c2)||(vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((CASE WHEN t0.c51 THEN x'' WHEN t0.c51 THEN vt1.c0 WHEN t0.c48 THEN vt1.c2 ELSE x'' END)/(((vt1.c2)||(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (~ (vt1.c1)) THEN (((vt1.c0, vt1.c1, vt1.c0))>((vt1.c1, '	p', vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt1.c1)) THEN (((vt1.c0, vt1.c1, vt1.c0))>((vt1.c1, '	p', vt1.c0))) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (~ (vt1.c1)) THEN (((vt1.c0, vt1.c1, vt1.c0))>((vt1.c1, '	p', vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt1.c1)) THEN (((vt1.c0, vt1.c1, vt1.c0))>((vt1.c1, '	p', vt1.c0))) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (~ (vt1.c1)) THEN (((vt1.c0, vt1.c1, vt1.c0))>((vt1.c1, '	p', vt1.c0))) END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY ((((vt1.c1) ISNULL))&((((vt0.c0)) NOT BETWEEN ((vt1.c2)) AND ((x''))))) ASC  NULLS LAST, (('1881902185') NOT BETWEEN (((vt1.c1) ISNULL)) AND (((vt1.c0) BETWEEN (vt1.c2) AND (vt0.c0)))) DESC  NULLS LAST, ((((((((((((((((((vt1.c0) IS FALSE))AND(CAST(vt0.c0 AS NUMERIC))))OR(((vt1.c2) ISNULL))))OR(0.21506556130356524)))AND(vt1.c1)))OR(CASE WHEN vt0.c0 THEN 0xffffffffc921c3da END)))AND(((((vt1.c2)OR(vt1.c1)))AND(vt1.c1)))))AND(((vt0.c0) IS FALSE))))OR(((vt0.c0)<(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1) ISNULL))&((((vt0.c0)) NOT BETWEEN ((vt1.c2)) AND ((x''))))) ASC  NULLS LAST, (('1881902185') NOT BETWEEN (((vt1.c1) ISNULL)) AND (((vt1.c0) BETWEEN (vt1.c2) AND (vt0.c0)))) DESC  NULLS LAST, ((((((((((((((((((vt1.c0) IS FALSE))AND(CAST(vt0.c0 AS NUMERIC))))OR(((vt1.c2) ISNULL))))OR(0.21506556130356524)))AND(vt1.c1)))OR(CASE WHEN vt0.c0 THEN 0xffffffffc921c3da END)))AND(((((vt1.c2)OR(vt1.c1)))AND(vt1.c1)))))AND(((vt0.c0) IS FALSE))))OR(((vt0.c0)<(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY ((((vt1.c1) ISNULL))&((((vt0.c0)) NOT BETWEEN ((vt1.c2)) AND ((x''))))) ASC  NULLS LAST, (('1881902185') NOT BETWEEN (((vt1.c1) ISNULL)) AND (((vt1.c0) BETWEEN (vt1.c2) AND (vt0.c0)))) DESC  NULLS LAST, ((((((((((((((((((vt1.c0) IS FALSE))AND(CAST(vt0.c0 AS NUMERIC))))OR(((vt1.c2) ISNULL))))OR(0.21506556130356524)))AND(vt1.c1)))OR(CASE WHEN vt0.c0 THEN 0xffffffffc921c3da END)))AND(((((vt1.c2)OR(vt1.c1)))AND(vt1.c1)))))AND(((vt0.c0) IS FALSE))))OR(((vt0.c0)<(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1) ISNULL))&((((vt0.c0)) NOT BETWEEN ((vt1.c2)) AND ((x''))))) ASC  NULLS LAST, (('1881902185') NOT BETWEEN (((vt1.c1) ISNULL)) AND (((vt1.c0) BETWEEN (vt1.c2) AND (vt0.c0)))) DESC  NULLS LAST, ((((((((((((((((((vt1.c0) IS FALSE))AND(CAST(vt0.c0 AS NUMERIC))))OR(((vt1.c2) ISNULL))))OR(0.21506556130356524)))AND(vt1.c1)))OR(CASE WHEN vt0.c0 THEN 0xffffffffc921c3da END)))AND(((((vt1.c2)OR(vt1.c1)))AND(vt1.c1)))))AND(((vt0.c0) IS FALSE))))OR(((vt0.c0)<(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY ((((vt1.c1) ISNULL))&((((vt0.c0)) NOT BETWEEN ((vt1.c2)) AND ((x''))))) ASC  NULLS LAST, (('1881902185') NOT BETWEEN (((vt1.c1) ISNULL)) AND (((vt1.c0) BETWEEN (vt1.c2) AND (vt0.c0)))) DESC  NULLS LAST, ((((((((((((((((((vt1.c0) IS FALSE))AND(CAST(vt0.c0 AS NUMERIC))))OR(((vt1.c2) ISNULL))))OR(0.21506556130356524)))AND(vt1.c1)))OR(CASE WHEN vt0.c0 THEN 0xffffffffc921c3da END)))AND(((((vt1.c2)OR(vt1.c1)))AND(vt1.c1)))))AND(((vt0.c0) IS FALSE))))OR(((vt0.c0)<(vt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((CASE vt1.c2  WHEN vt0.c0 THEN vt0.c0 END)<<(((t0.c51) NOT BETWEEN (t0.c48) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c2  WHEN vt0.c0 THEN vt0.c0 END)<<(((t0.c51) NOT BETWEEN (t0.c48) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((CASE vt1.c2  WHEN vt0.c0 THEN vt0.c0 END)<<(((t0.c51) NOT BETWEEN (t0.c48) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c2  WHEN vt0.c0 THEN vt0.c0 END)<<(((t0.c51) NOT BETWEEN (t0.c48) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((CASE vt1.c2  WHEN vt0.c0 THEN vt0.c0 END)<<(((t0.c51) NOT BETWEEN (t0.c48) AND (vt1.c0)))));
SELECT * FROM vt1 WHERE ((((((((((vt1.c2)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c2)) IN ((vt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c2)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c2)) IN ((vt1.c2 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((((vt1.c2)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c2)) IN ((vt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c2)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c2)) IN ((vt1.c2 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((((vt1.c2)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c2)) IN ((vt1.c2 IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c48)<<(t0.c51))) NOT NULL)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((t0.c48)<<(t0.c51))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c48)<<(t0.c51))) NOT NULL)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((t0.c48)<<(t0.c51))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c48)<<(t0.c51))) NOT NULL)) ORDER BY NULL;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c51) BETWEEN (t0.c51) AND (t0.c51))) NOT BETWEEN ('⃸w~6S.\') AND ((t0.c48 IN (t0.c51, t0.c51))))) ORDER BY NULLIF(t0.c51, (NOT (t0.c51))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51) BETWEEN (t0.c51) AND (t0.c51))) NOT BETWEEN ('⃸w~6S.\') AND ((t0.c48 IN (t0.c51, t0.c51))))) IS TRUE)  as count FROM t0 ORDER BY NULLIF(t0.c51, (NOT (t0.c51))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c51) BETWEEN (t0.c51) AND (t0.c51))) NOT BETWEEN ('⃸w~6S.\') AND ((t0.c48 IN (t0.c51, t0.c51))))) ORDER BY NULLIF(t0.c51, (NOT (t0.c51))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51) BETWEEN (t0.c51) AND (t0.c51))) NOT BETWEEN ('⃸w~6S.\') AND ((t0.c48 IN (t0.c51, t0.c51))))) IS TRUE)  as count FROM t0 ORDER BY NULLIF(t0.c51, (NOT (t0.c51))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c51) BETWEEN (t0.c51) AND (t0.c51))) NOT BETWEEN ('⃸w~6S.\') AND ((t0.c48 IN (t0.c51, t0.c51))))) ORDER BY NULLIF(t0.c51, (NOT (t0.c51))) ASC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (((245802313)=(vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (((245802313)=(vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (((245802313)=(vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (((245802313)=(vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (((245802313)=(vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((((vt1.c0)OR(t0.c51)))OR(vt0.c0))) BETWEEN (NULL) AND (CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(t0.c51)))OR(vt0.c0))) BETWEEN (NULL) AND (CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((((vt1.c0)OR(t0.c51)))OR(vt0.c0))) BETWEEN (NULL) AND (CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(t0.c51)))OR(vt0.c0))) BETWEEN (NULL) AND (CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((((vt1.c0)OR(t0.c51)))OR(vt0.c0))) BETWEEN (NULL) AND (CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM t0, vt1 WHERE (x'c6aa');
SELECT SUM(count) FROM (SELECT ((x'c6aa') IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (x'c6aa');
SELECT SUM(count) FROM (SELECT ((x'c6aa') IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (x'c6aa');
SELECT ALL * FROM t0 WHERE (((t0.c51) NOT BETWEEN ((+ (t0.c48))) AND (((('-1943391203', t0.c48, t0.c48)) BETWEEN ((t0.c51, t0.c48, t0.c48)) AND ((t0.c48, t0.c48, t0.c51)))))) ORDER BY ((((t0.c48)/(t0.c51)))AND(((t0.c48) NOT BETWEEN (t0.c51) AND (t0.c48)))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c51) NOT BETWEEN ((+ (t0.c48))) AND (((('-1943391203', t0.c48, t0.c48)) BETWEEN ((t0.c51, t0.c48, t0.c48)) AND ((t0.c48, t0.c48, t0.c51)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c48)/(t0.c51)))AND(((t0.c48) NOT BETWEEN (t0.c51) AND (t0.c48)))) ASC);
SELECT ALL * FROM t0 WHERE (((t0.c51) NOT BETWEEN ((+ (t0.c48))) AND (((('-1943391203', t0.c48, t0.c48)) BETWEEN ((t0.c51, t0.c48, t0.c48)) AND ((t0.c48, t0.c48, t0.c51)))))) ORDER BY ((((t0.c48)/(t0.c51)))AND(((t0.c48) NOT BETWEEN (t0.c51) AND (t0.c48)))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c51) NOT BETWEEN ((+ (t0.c48))) AND (((('-1943391203', t0.c48, t0.c48)) BETWEEN ((t0.c51, t0.c48, t0.c48)) AND ((t0.c48, t0.c48, t0.c51)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c48)/(t0.c51)))AND(((t0.c48) NOT BETWEEN (t0.c51) AND (t0.c48)))) ASC);
SELECT ALL * FROM t0 WHERE (((t0.c51) NOT BETWEEN ((+ (t0.c48))) AND (((('-1943391203', t0.c48, t0.c48)) BETWEEN ((t0.c51, t0.c48, t0.c48)) AND ((t0.c48, t0.c48, t0.c51)))))) ORDER BY ((((t0.c48)/(t0.c51)))AND(((t0.c48) NOT BETWEEN (t0.c51) AND (t0.c48)))) ASC;
SELECT ALL * FROM vt1 WHERE (((vt1.c1) NOT NULL) COLLATE RTRIM) ORDER BY (((vt1.c1)|(0.04094650824392587)) IN (((0.11571063993229669)LIKE(vt1.c1)), (((vt1.c0))<>((vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)|(0.04094650824392587)) IN (((0.11571063993229669)LIKE(vt1.c1)), (((vt1.c0))!=((vt1.c2))))));
SELECT ALL * FROM vt1 WHERE (((vt1.c1) NOT NULL) COLLATE RTRIM) ORDER BY (((vt1.c1)|(0.04094650824392587)) IN (((0.11571063993229669)LIKE(vt1.c1)), (((vt1.c0))<>((vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)|(0.04094650824392587)) IN (((0.11571063993229669)LIKE(vt1.c1)), (((vt1.c0))!=((vt1.c2))))));
SELECT ALL * FROM vt1 WHERE (((vt1.c1) NOT NULL) COLLATE RTRIM) ORDER BY (((vt1.c1)|(0.04094650824392587)) IN (((0.11571063993229669)LIKE(vt1.c1)), (((vt1.c0))<>((vt1.c2)))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (('983089063'))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (('983089063')))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (('983089063'))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (('983089063')))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (('983089063'))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1, vt1.c1, vt1.c0, vt1.c1, NULL)) BETWEEN ((NULL, ((((vt1.c2)OR(vt1.c2)))AND(vt1.c1)), ((vt1.c0) ISNULL), ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c1)), '')) AND ((json_valid(vt1.c2), ((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c2)))OR(vt1.c0)))AND(vt1.c1)), CAST(vt1.c1 AS NUMERIC), ((vt0.c0) IS FALSE), ((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c1)))AND(x'cb560d5e5f3c')))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1, vt1.c1, vt1.c0, vt1.c1, NULL)) BETWEEN ((NULL, ((((vt1.c2)OR(vt1.c2)))AND(vt1.c1)), ((vt1.c0) ISNULL), ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c1)), '')) AND ((json_valid(vt1.c2), ((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c2)))OR(vt1.c0)))AND(vt1.c1)), CAST(vt1.c1 AS NUMERIC), ((vt0.c0) IS FALSE), ((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c1)))AND(x'cb560d5e5f3c')))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1, vt1.c1, vt1.c0, vt1.c1, NULL)) BETWEEN ((NULL, ((((vt1.c2)OR(vt1.c2)))AND(vt1.c1)), ((vt1.c0) ISNULL), ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c1)), '')) AND ((json_valid(vt1.c2), ((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c2)))OR(vt1.c0)))AND(vt1.c1)), CAST(vt1.c1 AS NUMERIC), ((vt0.c0) IS FALSE), ((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c1)))AND(x'cb560d5e5f3c')))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1, vt1.c1, vt1.c0, vt1.c1, NULL)) BETWEEN ((NULL, ((((vt1.c2)OR(vt1.c2)))AND(vt1.c1)), ((vt1.c0) ISNULL), ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c1)), '')) AND ((json_valid(vt1.c2), ((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c2)))OR(vt1.c0)))AND(vt1.c1)), CAST(vt1.c1 AS NUMERIC), ((vt0.c0) IS FALSE), ((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c1)))AND(x'cb560d5e5f3c')))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1, vt1.c1, vt1.c0, vt1.c1, NULL)) BETWEEN ((NULL, ((((vt1.c2)OR(vt1.c2)))AND(vt1.c1)), ((vt1.c0) ISNULL), ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c1)), '')) AND ((json_valid(vt1.c2), ((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c2)))OR(vt1.c0)))AND(vt1.c1)), CAST(vt1.c1 AS NUMERIC), ((vt0.c0) IS FALSE), ((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c1)))AND(x'cb560d5e5f3c')))AND(vt1.c0))))));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((ABS(DISTINCT '-1072847559'))>>((NOT (vt1.c2))))) ORDER BY CAST(((vt1.c0)IS NOT(vt1.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT '-1072847559'))>>((NOT (vt1.c2))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(((vt1.c0)IS NOT(vt1.c2)) AS INTEGER));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((ABS(DISTINCT '-1072847559'))>>((NOT (vt1.c2))))) ORDER BY CAST(((vt1.c0)IS NOT(vt1.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT '-1072847559'))>>((NOT (vt1.c2))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(((vt1.c0)IS NOT(vt1.c2)) AS INTEGER));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((ABS(DISTINCT '-1072847559'))>>((NOT (vt1.c2))))) ORDER BY CAST(((vt1.c0)IS NOT(vt1.c2)) AS INTEGER);
SELECT * FROM t0 CROSS JOIN vt0 ON ((CAST(x'' AS REAL)) NOT NULL) INNER JOIN vt1 ON vt1.c0 WHERE ((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((t0.c51)))) ISNULL)) ORDER BY vt1.c1 DESC, TRIM(DISTINCT (t0.c48 IN (t0.c48)), t0.c48 COLLATE RTRIM)  NULLS FIRST, (~ (((t0.c48) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((t0.c51)))) ISNULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((CAST(x'' AS REAL)) NOT NULL) INNER JOIN vt1 ON vt1.c0 ORDER BY vt1.c1 DESC, TRIM(DISTINCT (t0.c48 IN (t0.c48)), t0.c48 COLLATE RTRIM)  NULLS FIRST, (~ (((t0.c48) IS TRUE))) DESC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON ((CAST(x'' AS REAL)) NOT NULL) INNER JOIN vt1 ON vt1.c0 WHERE ((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((t0.c51)))) ISNULL)) ORDER BY vt1.c1 DESC, TRIM(DISTINCT (t0.c48 IN (t0.c48)), t0.c48 COLLATE RTRIM)  NULLS FIRST, (~ (((t0.c48) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((t0.c51)))) ISNULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((CAST(x'' AS REAL)) NOT NULL) INNER JOIN vt1 ON vt1.c0 ORDER BY vt1.c1 DESC, TRIM(DISTINCT (t0.c48 IN (t0.c48)), t0.c48 COLLATE RTRIM)  NULLS FIRST, (~ (((t0.c48) IS TRUE))) DESC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON ((CAST(x'' AS REAL)) NOT NULL) INNER JOIN vt1 ON vt1.c0 WHERE ((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((t0.c51)))) ISNULL)) ORDER BY vt1.c1 DESC, TRIM(DISTINCT (t0.c48 IN (t0.c48)), t0.c48 COLLATE RTRIM)  NULLS FIRST, (~ (((t0.c48) IS TRUE))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((((((((((((t0.c51)AND(t0.c51)))OR(vt1.c2)))OR(vt1.c2)))OR(vt1.c0)))AND(t0.c51)))OR(vt1.c2)), CHAR(t0.c48, vt1.c0, t0.c51), NULL))<(((vt1.c0 IN ()), (+ (vt1.c1)), CASE t0.c51  WHEN 0.3513063521433587 THEN vt1.c2 END)))) ORDER BY ((((vt1.c1)GLOB(t0.c51)))<(x''));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((t0.c51)AND(t0.c51)))OR(vt1.c2)))OR(vt1.c2)))OR(vt1.c0)))AND(t0.c51)))OR(vt1.c2)), CHAR(t0.c48, vt1.c0, t0.c51), NULL))<(((vt1.c0 IN ()), (+ (vt1.c1)), CASE t0.c51  WHEN 0.3513063521433587 THEN vt1.c2 END)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((vt1.c1)GLOB(t0.c51)))<(x'')));
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((((((((((((t0.c51)AND(t0.c51)))OR(vt1.c2)))OR(vt1.c2)))OR(vt1.c0)))AND(t0.c51)))OR(vt1.c2)), CHAR(t0.c48, vt1.c0, t0.c51), NULL))<(((vt1.c0 IN ()), (+ (vt1.c1)), CASE t0.c51  WHEN 0.3513063521433587 THEN vt1.c2 END)))) ORDER BY ((((vt1.c1)GLOB(t0.c51)))<(x''));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((t0.c51)AND(t0.c51)))OR(vt1.c2)))OR(vt1.c2)))OR(vt1.c0)))AND(t0.c51)))OR(vt1.c2)), CHAR(t0.c48, vt1.c0, t0.c51), NULL))<(((vt1.c0 IN ()), (+ (vt1.c1)), CASE t0.c51  WHEN 0.3513063521433587 THEN vt1.c2 END)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((vt1.c1)GLOB(t0.c51)))<(x'')));
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((((((((((((t0.c51)AND(t0.c51)))OR(vt1.c2)))OR(vt1.c2)))OR(vt1.c0)))AND(t0.c51)))OR(vt1.c2)), CHAR(t0.c48, vt1.c0, t0.c51), NULL))<(((vt1.c0 IN ()), (+ (vt1.c1)), CASE t0.c51  WHEN 0.3513063521433587 THEN vt1.c2 END)))) ORDER BY ((((vt1.c1)GLOB(t0.c51)))<(x''));
SELECT COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON ((((t0.c48)-(t0.c48))) IS TRUE) WHERE ((((((vt1.c0, vt1.c2, vt0.c0, 0.06267324912213501, t0.c48)) BETWEEN ((t0.c51, t0.c48, vt1.c1, vt1.c2, t0.c51)) AND ((NULL, vt1.c2, '1583048239', vt1.c2, vt1.c0))))LIKE((vt1.c2 IN (x'', vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c2, vt0.c0, 0.06267324912213501, t0.c48)) BETWEEN ((t0.c51, t0.c48, vt1.c1, vt1.c2, t0.c51)) AND ((NULL, vt1.c2, '1583048239', vt1.c2, vt1.c0))))LIKE((vt1.c2 IN (x'', vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON ((((t0.c48)-(t0.c48))) IS TRUE));
SELECT COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON ((((t0.c48)-(t0.c48))) IS TRUE) WHERE ((((((vt1.c0, vt1.c2, vt0.c0, 0.06267324912213501, t0.c48)) BETWEEN ((t0.c51, t0.c48, vt1.c1, vt1.c2, t0.c51)) AND ((NULL, vt1.c2, '1583048239', vt1.c2, vt1.c0))))LIKE((vt1.c2 IN (x'', vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c2, vt0.c0, 0.06267324912213501, t0.c48)) BETWEEN ((t0.c51, t0.c48, vt1.c1, vt1.c2, t0.c51)) AND ((NULL, vt1.c2, '1583048239', vt1.c2, vt1.c0))))LIKE((vt1.c2 IN (x'', vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON ((((t0.c48)-(t0.c48))) IS TRUE));
SELECT COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON ((((t0.c48)-(t0.c48))) IS TRUE) WHERE ((((((vt1.c0, vt1.c2, vt0.c0, 0.06267324912213501, t0.c48)) BETWEEN ((t0.c51, t0.c48, vt1.c1, vt1.c2, t0.c51)) AND ((NULL, vt1.c2, '1583048239', vt1.c2, vt1.c0))))LIKE((vt1.c2 IN (x'', vt1.c0)))));
SELECT * FROM vt0, vt1, t0 WHERE ((((t0.c51 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c51 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ((((t0.c51 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c51 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ((((t0.c51 IN ())) NOTNULL));
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(((vt1.c0) BETWEEN (t0.c48) AND (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (t0.c48) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(((vt1.c0) BETWEEN (t0.c48) AND (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (t0.c48) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(((vt1.c0) BETWEEN (t0.c48) AND (vt1.c0)) AS NUMERIC));
SELECT ALL * FROM t0 WHERE (CASE WHEN CAST(t0.c51 AS TEXT) THEN t0.c51 COLLATE NOCASE WHEN QUOTE(t0.c51) THEN (((t0.c51))==((t0.c51))) WHEN CAST(x'd1f1' AS INTEGER) THEN ((t0.c51) NOT NULL) ELSE CAST(t0.c48 AS NUMERIC) END) ORDER BY (((((t0.c51, t0.c51, t0.c51)) NOT BETWEEN ((t0.c48, t0.c51, t0.c48)) AND ((t0.c48, t0.c48, t0.c48))))OR(NULL COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c51 AS TEXT) THEN t0.c51 COLLATE NOCASE WHEN QUOTE(t0.c51) THEN (((t0.c51))==((t0.c51))) WHEN CAST(x'd1f1' AS INTEGER) THEN ((t0.c51) NOT NULL) ELSE CAST(t0.c48 AS NUMERIC) END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c51, t0.c51, t0.c51)) NOT BETWEEN ((t0.c48, t0.c51, t0.c48)) AND ((t0.c48, t0.c48, t0.c48))))OR(NULL COLLATE RTRIM)) DESC);
SELECT ALL * FROM t0 WHERE (CASE WHEN CAST(t0.c51 AS TEXT) THEN t0.c51 COLLATE NOCASE WHEN QUOTE(t0.c51) THEN (((t0.c51))==((t0.c51))) WHEN CAST(x'd1f1' AS INTEGER) THEN ((t0.c51) NOT NULL) ELSE CAST(t0.c48 AS NUMERIC) END) ORDER BY (((((t0.c51, t0.c51, t0.c51)) NOT BETWEEN ((t0.c48, t0.c51, t0.c48)) AND ((t0.c48, t0.c48, t0.c48))))OR(NULL COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c51 AS TEXT) THEN t0.c51 COLLATE NOCASE WHEN QUOTE(t0.c51) THEN (((t0.c51))==((t0.c51))) WHEN CAST(x'd1f1' AS INTEGER) THEN ((t0.c51) NOT NULL) ELSE CAST(t0.c48 AS NUMERIC) END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c51, t0.c51, t0.c51)) NOT BETWEEN ((t0.c48, t0.c51, t0.c48)) AND ((t0.c48, t0.c48, t0.c48))))OR(NULL COLLATE RTRIM)) DESC);
SELECT ALL * FROM t0 WHERE (CASE WHEN CAST(t0.c51 AS TEXT) THEN t0.c51 COLLATE NOCASE WHEN QUOTE(t0.c51) THEN (((t0.c51))==((t0.c51))) WHEN CAST(x'd1f1' AS INTEGER) THEN ((t0.c51) NOT NULL) ELSE CAST(t0.c48 AS NUMERIC) END) ORDER BY (((((t0.c51, t0.c51, t0.c51)) NOT BETWEEN ((t0.c48, t0.c51, t0.c48)) AND ((t0.c48, t0.c48, t0.c48))))OR(NULL COLLATE RTRIM)) DESC;
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c48 THEN t0.c48 ELSE vt0.c0 END)>>(((vt0.c0)LIKE('')))) WHERE ((- (TRIM(vt0.c0, t0.c48)))) ORDER BY (((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((- (TRIM(vt0.c0, t0.c48)))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c48 THEN t0.c48 ELSE vt0.c0 END)>>(((vt0.c0)LIKE('')))) ORDER BY (((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c48 THEN t0.c48 ELSE vt0.c0 END)>>(((vt0.c0)LIKE('')))) WHERE ((- (TRIM(vt0.c0, t0.c48)))) ORDER BY (((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((- (TRIM(vt0.c0, t0.c48)))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c48 THEN t0.c48 ELSE vt0.c0 END)>>(((vt0.c0)LIKE('')))) ORDER BY (((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c48 THEN t0.c48 ELSE vt0.c0 END)>>(((vt0.c0)LIKE('')))) WHERE ((- (TRIM(vt0.c0, t0.c48)))) ORDER BY (((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()) DESC;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c48, vt1.c0, t0.c48)) BETWEEN ((vt1.c1, vt0.c0, vt0.c0)) AND ((vt1.c1, t0.c48, vt1.c2))) COLLATE NOCASE) ORDER BY (~ (859860025)) DESC, IFNULL((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c48))), (vt1.c1 IN (vt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48, vt1.c0, t0.c48)) BETWEEN ((vt1.c1, vt0.c0, vt0.c0)) AND ((vt1.c1, t0.c48, vt1.c2))) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (~ (859860025)) DESC, IFNULL((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c48))), (vt1.c1 IN (vt1.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c48, vt1.c0, t0.c48)) BETWEEN ((vt1.c1, vt0.c0, vt0.c0)) AND ((vt1.c1, t0.c48, vt1.c2))) COLLATE NOCASE) ORDER BY (~ (859860025)) DESC, IFNULL((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c48))), (vt1.c1 IN (vt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48, vt1.c0, t0.c48)) BETWEEN ((vt1.c1, vt0.c0, vt0.c0)) AND ((vt1.c1, t0.c48, vt1.c2))) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (~ (859860025)) DESC, IFNULL((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c48))), (vt1.c1 IN (vt1.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c48, vt1.c0, t0.c48)) BETWEEN ((vt1.c1, vt0.c0, vt0.c0)) AND ((vt1.c1, t0.c48, vt1.c2))) COLLATE NOCASE) ORDER BY (~ (859860025)) DESC, IFNULL((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c48))), (vt1.c1 IN (vt1.c2)))  NULLS LAST;
SELECT * FROM vt1, vt0, t0 NOT INDEXED WHERE ((((((((((vt0.c0 IN ()))OR((t0.c51 IN ()))))AND(CAST(vt1.c0 AS BLOB))))OR((NOT (t0.c48)))))AND((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))OR((t0.c51 IN ()))))AND(CAST(vt1.c0 AS BLOB))))OR((NOT (t0.c48)))))AND((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 NOT INDEXED WHERE ((((((((((vt0.c0 IN ()))OR((t0.c51 IN ()))))AND(CAST(vt1.c0 AS BLOB))))OR((NOT (t0.c48)))))AND((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))OR((t0.c51 IN ()))))AND(CAST(vt1.c0 AS BLOB))))OR((NOT (t0.c48)))))AND((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 NOT INDEXED WHERE ((((((((((vt0.c0 IN ()))OR((t0.c51 IN ()))))AND(CAST(vt1.c0 AS BLOB))))OR((NOT (t0.c48)))))AND((((vt0.c0))<=((vt0.c0))))));
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c51)<<(vt0.c0)))>((t0.c51 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51)<<(vt0.c0)))>((t0.c51 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c51)<<(vt0.c0)))>((t0.c51 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51)<<(vt0.c0)))>((t0.c51 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c51)<<(vt0.c0)))>((t0.c51 IN ()))));
SELECT ALL * FROM vt1, vt0, t0 WHERE (x'') ORDER BY ((LOWER(DISTINCT NULL))<<(((0.7948853609694214) NOT BETWEEN (vt1.c1) AND (vt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((LOWER(DISTINCT NULL))<<(((0.7948853609694214) NOT BETWEEN (vt1.c1) AND (vt1.c2))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (x'') ORDER BY ((LOWER(DISTINCT NULL))<<(((0.7948853609694214) NOT BETWEEN (vt1.c1) AND (vt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((LOWER(DISTINCT NULL))<<(((0.7948853609694214) NOT BETWEEN (vt1.c1) AND (vt1.c2))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (x'') ORDER BY ((LOWER(DISTINCT NULL))<<(((0.7948853609694214) NOT BETWEEN (vt1.c1) AND (vt1.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c2 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c2 END IN ())) ORDER BY (((((+ (vt1.c1)))AND((((vt1.c2))>((8.46094209E8))))))AND(CAST(vt1.c1 AS REAL))) ASC  NULLS FIRST, LIKELY(0.5538506886216317) ASC;
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c2 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c2 END IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((+ (vt1.c1)))AND((((vt1.c2))>((8.46094209E8))))))AND(CAST(vt1.c1 AS REAL))) ASC  NULLS FIRST, LIKELY(0.5538506886216317) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c2 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c2 END IN ())) ORDER BY (((((+ (vt1.c1)))AND((((vt1.c2))>((8.46094209E8))))))AND(CAST(vt1.c1 AS REAL))) ASC  NULLS FIRST, LIKELY(0.5538506886216317) ASC;
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c2 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c2 END IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((+ (vt1.c1)))AND((((vt1.c2))>((8.46094209E8))))))AND(CAST(vt1.c1 AS REAL))) ASC  NULLS FIRST, LIKELY(0.5538506886216317) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c2 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c2 END IN ())) ORDER BY (((((+ (vt1.c1)))AND((((vt1.c2))>((8.46094209E8))))))AND(CAST(vt1.c1 AS REAL))) ASC  NULLS FIRST, LIKELY(0.5538506886216317) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ('3ERȂ\r{^/#') ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB), CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (('3ERȂ\r{^/#') IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB), CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ('3ERȂ\r{^/#') ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB), CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (('3ERȂ\r{^/#') IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB), CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ('3ERȂ\r{^/#') ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB), CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC) DESC;
SELECT COUNT(*) FROM vt1 WHERE (CAST(HEX(x'') AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(x'') AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(HEX(x'') AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(x'') AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(HEX(x'') AS TEXT));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c2);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)>=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>=(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)>=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>=(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)>=(vt0.c0)));
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((vt1.c0) BETWEEN (t0.c48) AND (vt0.c0))))!=((IFNULL(DISTINCT t0.c48, t0.c48))))) ORDER BY CAST(((vt1.c0)IS(vt1.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) BETWEEN (t0.c48) AND (vt0.c0))))!=((IFNULL(DISTINCT t0.c48, t0.c48))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CAST(((vt1.c0)IS(vt1.c0)) AS INTEGER));
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((vt1.c0) BETWEEN (t0.c48) AND (vt0.c0))))!=((IFNULL(DISTINCT t0.c48, t0.c48))))) ORDER BY CAST(((vt1.c0)IS(vt1.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) BETWEEN (t0.c48) AND (vt0.c0))))!=((IFNULL(DISTINCT t0.c48, t0.c48))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CAST(((vt1.c0)IS(vt1.c0)) AS INTEGER));
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((vt1.c0) BETWEEN (t0.c48) AND (vt0.c0))))!=((IFNULL(DISTINCT t0.c48, t0.c48))))) ORDER BY CAST(((vt1.c0)IS(vt1.c0)) AS INTEGER);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c51 IN ()))>=((t0.c48 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c51 IN ()))>=((t0.c48 IN ())))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c51 IN ()))>=((t0.c48 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c51 IN ()))>=((t0.c48 IN ())))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c51 IN ()))>=((t0.c48 IN ()))));
SELECT ALL * FROM t0 WHERE ((CASE t0.c48  WHEN t0.c48 THEN t0.c51 WHEN t0.c51 THEN t0.c48 WHEN t0.c48 THEN t0.c51 ELSE t0.c51 END IN ())) ORDER BY (- (NULL));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c48  WHEN t0.c48 THEN t0.c51 WHEN t0.c51 THEN t0.c48 WHEN t0.c48 THEN t0.c51 ELSE t0.c51 END IN ())) IS TRUE)  as count FROM t0 ORDER BY (- (NULL)));
SELECT ALL * FROM t0 WHERE ((CASE t0.c48  WHEN t0.c48 THEN t0.c51 WHEN t0.c51 THEN t0.c48 WHEN t0.c48 THEN t0.c51 ELSE t0.c51 END IN ())) ORDER BY (- (NULL));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c48  WHEN t0.c48 THEN t0.c51 WHEN t0.c51 THEN t0.c48 WHEN t0.c48 THEN t0.c51 ELSE t0.c51 END IN ())) IS TRUE)  as count FROM t0 ORDER BY (- (NULL)));
SELECT ALL * FROM t0 WHERE ((CASE t0.c48  WHEN t0.c48 THEN t0.c51 WHEN t0.c51 THEN t0.c48 WHEN t0.c48 THEN t0.c51 ELSE t0.c51 END IN ())) ORDER BY (- (NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((vt1.c1) NOT BETWEEN (t0.c51) AND (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1) NOT BETWEEN (t0.c51) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((vt1.c1) NOT BETWEEN (t0.c51) AND (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1) NOT BETWEEN (t0.c51) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((vt1.c1) NOT BETWEEN (t0.c51) AND (vt1.c0)) AS INTEGER));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN vt1 ON ((load_extension(t0.c48, vt1.c0)) NOT NULL) WHERE (CASE WHEN ((vt1.c1)<=(vt1.c2)) THEN ((((vt1.c2)AND(t0.c48)))OR(x'')) END) ORDER BY ((t0.c48 COLLATE RTRIM) NOT BETWEEN (((vt1.c2)IS NOT(vt1.c2))) AND (vt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1)<=(vt1.c2)) THEN ((((vt1.c2)AND(t0.c48)))OR(x'')) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN vt1 ON ((load_extension(t0.c48, vt1.c0)) NOT NULL) ORDER BY ((t0.c48 COLLATE RTRIM) NOT BETWEEN (((vt1.c2)IS NOT(vt1.c2))) AND (vt1.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN vt1 ON ((load_extension(t0.c48, vt1.c0)) NOT NULL) WHERE (CASE WHEN ((vt1.c1)<=(vt1.c2)) THEN ((((vt1.c2)AND(t0.c48)))OR(x'')) END) ORDER BY ((t0.c48 COLLATE RTRIM) NOT BETWEEN (((vt1.c2)IS NOT(vt1.c2))) AND (vt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1)<=(vt1.c2)) THEN ((((vt1.c2)AND(t0.c48)))OR(x'')) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN vt1 ON ((load_extension(t0.c48, vt1.c0)) NOT NULL) ORDER BY ((t0.c48 COLLATE RTRIM) NOT BETWEEN (((vt1.c2)IS NOT(vt1.c2))) AND (vt1.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (LOWER(DISTINCT HEX(vt1.c1))) ORDER BY (((vt1.c1 IN ()))<=(((vt1.c2)<=(vt1.c0)))) DESC, CAST(((vt1.c0)*(vt1.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT HEX(vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1 IN ()))<=(((vt1.c2)<=(vt1.c0)))) DESC, CAST(((vt1.c0)*(vt1.c0)) AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (LOWER(DISTINCT HEX(vt1.c1))) ORDER BY (((vt1.c1 IN ()))<=(((vt1.c2)<=(vt1.c0)))) DESC, CAST(((vt1.c0)*(vt1.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT HEX(vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1 IN ()))<=(((vt1.c2)<=(vt1.c0)))) DESC, CAST(((vt1.c0)*(vt1.c0)) AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (LOWER(DISTINCT HEX(vt1.c1))) ORDER BY (((vt1.c1 IN ()))<=(((vt1.c2)<=(vt1.c0)))) DESC, CAST(((vt1.c0)*(vt1.c0)) AS REAL) ASC  NULLS LAST;
SELECT * FROM vt1 CROSS JOIN t0 ON (((((((((- (t0.c51)))AND(CASE vt1.c2  WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c0 WHEN t0.c51 THEN t0.c48 WHEN t0.c48 THEN t0.c51 ELSE vt1.c2 END)))AND(('' IN ()))))OR(((t0.c48) BETWEEN (t0.c48) AND (vt1.c0)))))AND(((vt1.c0)+(t0.c51)))) WHERE (((((((((((((vt1.c2)OR(vt1.c1)))OR(t0.c48)))AND(x'')))OR(NULL)))OR(((t0.c48) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CAST(t0.c48 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c2)OR(vt1.c1)))OR(t0.c48)))AND(x'')))OR(NULL)))OR(((t0.c48) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CAST(t0.c48 AS NUMERIC)))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (((((((((- (t0.c51)))AND(CASE vt1.c2  WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c0 WHEN t0.c51 THEN t0.c48 WHEN t0.c48 THEN t0.c51 ELSE vt1.c2 END)))AND(('' IN ()))))OR(((t0.c48) BETWEEN (t0.c48) AND (vt1.c0)))))AND(((vt1.c0)+(t0.c51)))));
SELECT * FROM vt1 CROSS JOIN t0 ON (((((((((- (t0.c51)))AND(CASE vt1.c2  WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c0 WHEN t0.c51 THEN t0.c48 WHEN t0.c48 THEN t0.c51 ELSE vt1.c2 END)))AND(('' IN ()))))OR(((t0.c48) BETWEEN (t0.c48) AND (vt1.c0)))))AND(((vt1.c0)+(t0.c51)))) WHERE (((((((((((((vt1.c2)OR(vt1.c1)))OR(t0.c48)))AND(x'')))OR(NULL)))OR(((t0.c48) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CAST(t0.c48 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c2)OR(vt1.c1)))OR(t0.c48)))AND(x'')))OR(NULL)))OR(((t0.c48) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CAST(t0.c48 AS NUMERIC)))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (((((((((- (t0.c51)))AND(CASE vt1.c2  WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c0 WHEN t0.c51 THEN t0.c48 WHEN t0.c48 THEN t0.c51 ELSE vt1.c2 END)))AND(('' IN ()))))OR(((t0.c48) BETWEEN (t0.c48) AND (vt1.c0)))))AND(((vt1.c0)+(t0.c51)))));
SELECT * FROM vt1 CROSS JOIN t0 ON (((((((((- (t0.c51)))AND(CASE vt1.c2  WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c0 WHEN t0.c51 THEN t0.c48 WHEN t0.c48 THEN t0.c51 ELSE vt1.c2 END)))AND(('' IN ()))))OR(((t0.c48) BETWEEN (t0.c48) AND (vt1.c0)))))AND(((vt1.c0)+(t0.c51)))) WHERE (((((((((((((vt1.c2)OR(vt1.c1)))OR(t0.c48)))AND(x'')))OR(NULL)))OR(((t0.c48) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CAST(t0.c48 AS NUMERIC))));
SELECT * FROM vt0 WHERE (((INSTR(vt0.c0, vt0.c0))*(((vt0.c0) NOTNULL)))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((INSTR(vt0.c0, vt0.c0))*(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((INSTR(vt0.c0, vt0.c0))*(((vt0.c0) NOTNULL)))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((INSTR(vt0.c0, vt0.c0))*(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((INSTR(vt0.c0, vt0.c0))*(((vt0.c0) NOTNULL)))) ORDER BY NULL DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((+ (LOWER(DISTINCT t0.c48))));
SELECT SUM(count) FROM (SELECT (((+ (LOWER(DISTINCT t0.c48)))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((+ (LOWER(DISTINCT t0.c48))));
SELECT SUM(count) FROM (SELECT (((+ (LOWER(DISTINCT t0.c48)))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((+ (LOWER(DISTINCT t0.c48))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt1.c1, vt1.c2, vt1.c2)) BETWEEN ((vt0.c0, x'', t0.c48)) AND ((t0.c51, vt1.c2, vt1.c2))) COLLATE NOCASE) ORDER BY '629816795'  NULLS FIRST, (((((('-1314591040')AND(t0.c51)))AND(t0.c48))) NOT BETWEEN ((((vt0.c0, vt1.c1, vt1.c2, vt0.c0, t0.c48)) BETWEEN ((vt1.c1, vt1.c2, vt1.c2, t0.c48, t0.c48)) AND (('', vt1.c1, t0.c51, vt0.c0, vt1.c0)))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1, vt1.c2, vt1.c2)) BETWEEN ((vt0.c0, x'', t0.c48)) AND ((t0.c51, vt1.c2, vt1.c2))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY '629816795'  NULLS FIRST, (((((('-1314591040')AND(t0.c51)))AND(t0.c48))) NOT BETWEEN ((((vt0.c0, vt1.c1, vt1.c2, vt0.c0, t0.c48)) BETWEEN ((vt1.c1, vt1.c2, vt1.c2, t0.c48, t0.c48)) AND (('', vt1.c1, t0.c51, vt0.c0, vt1.c0)))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt1.c1, vt1.c2, vt1.c2)) BETWEEN ((vt0.c0, x'', t0.c48)) AND ((t0.c51, vt1.c2, vt1.c2))) COLLATE NOCASE) ORDER BY '629816795'  NULLS FIRST, (((((('-1314591040')AND(t0.c51)))AND(t0.c48))) NOT BETWEEN ((((vt0.c0, vt1.c1, vt1.c2, vt0.c0, t0.c48)) BETWEEN ((vt1.c1, vt1.c2, vt1.c2, t0.c48, t0.c48)) AND (('', vt1.c1, t0.c51, vt0.c0, vt1.c0)))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1, vt1.c2, vt1.c2)) BETWEEN ((vt0.c0, x'', t0.c48)) AND ((t0.c51, vt1.c2, vt1.c2))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY '629816795'  NULLS FIRST, (((((('-1314591040')AND(t0.c51)))AND(t0.c48))) NOT BETWEEN ((((vt0.c0, vt1.c1, vt1.c2, vt0.c0, t0.c48)) BETWEEN ((vt1.c1, vt1.c2, vt1.c2, t0.c48, t0.c48)) AND (('', vt1.c1, t0.c51, vt0.c0, vt1.c0)))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt1.c1, vt1.c2, vt1.c2)) BETWEEN ((vt0.c0, x'', t0.c48)) AND ((t0.c51, vt1.c2, vt1.c2))) COLLATE NOCASE) ORDER BY '629816795'  NULLS FIRST, (((((('-1314591040')AND(t0.c51)))AND(t0.c48))) NOT BETWEEN ((((vt0.c0, vt1.c1, vt1.c2, vt0.c0, t0.c48)) BETWEEN ((vt1.c1, vt1.c2, vt1.c2, t0.c48, t0.c48)) AND (('', vt1.c1, t0.c51, vt0.c0, vt1.c0)))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((NULL)GLOB((vt1.c1 IN ())))) ORDER BY ((vt1.c2 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)GLOB((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c2 IN ()) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((NULL)GLOB((vt1.c1 IN ())))) ORDER BY ((vt1.c2 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)GLOB((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c2 IN ()) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((NULL)GLOB((vt1.c1 IN ())))) ORDER BY ((vt1.c2 IN ()) IN ())  NULLS FIRST;
SELECT * FROM t0 CROSS JOIN vt0 ON '1610506938' WHERE (json_object((((t0.c51))<((vt0.c0))), vt0.c0 COLLATE RTRIM, LOWER(t0.c48), ((t0.c51) IS FALSE))) ORDER BY CAST((((t0.c51)) BETWEEN ((t0.c51)) AND ((t0.c48))) AS NUMERIC) ASC, IFNULL(CASE t0.c48  WHEN '}ᶳ' THEN t0.c48 WHEN t0.c51 THEN vt0.c0 WHEN t0.c48 THEN t0.c48 WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 END, ((t0.c48) ISNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_object((((t0.c51))<((vt0.c0))), vt0.c0 COLLATE RTRIM, LOWER(t0.c48), ((t0.c51) IS FALSE))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON '1610506938' ORDER BY CAST((((t0.c51)) BETWEEN ((t0.c51)) AND ((t0.c48))) AS NUMERIC) ASC, IFNULL(CASE t0.c48  WHEN '}ᶳ' THEN t0.c48 WHEN t0.c51 THEN vt0.c0 WHEN t0.c48 THEN t0.c48 WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 END, ((t0.c48) ISNULL)) ASC);
SELECT * FROM t0 CROSS JOIN vt0 ON '1610506938' WHERE (json_object((((t0.c51))<((vt0.c0))), vt0.c0 COLLATE RTRIM, LOWER(t0.c48), ((t0.c51) IS FALSE))) ORDER BY CAST((((t0.c51)) BETWEEN ((t0.c51)) AND ((t0.c48))) AS NUMERIC) ASC, IFNULL(CASE t0.c48  WHEN '}ᶳ' THEN t0.c48 WHEN t0.c51 THEN vt0.c0 WHEN t0.c48 THEN t0.c48 WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 END, ((t0.c48) ISNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_object((((t0.c51))<((vt0.c0))), vt0.c0 COLLATE RTRIM, LOWER(t0.c48), ((t0.c51) IS FALSE))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON '1610506938' ORDER BY CAST((((t0.c51)) BETWEEN ((t0.c51)) AND ((t0.c48))) AS NUMERIC) ASC, IFNULL(CASE t0.c48  WHEN '}ᶳ' THEN t0.c48 WHEN t0.c51 THEN vt0.c0 WHEN t0.c48 THEN t0.c48 WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 END, ((t0.c48) ISNULL)) ASC);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((rtreenode(t0.c51, vt1.c0)) BETWEEN ((+ (t0.c48))) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(t0.c51, vt1.c0)) BETWEEN ((+ (t0.c48))) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((rtreenode(t0.c51, vt1.c0)) BETWEEN ((+ (t0.c48))) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(t0.c51, vt1.c0)) BETWEEN ((+ (t0.c48))) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((rtreenode(t0.c51, vt1.c0)) BETWEEN ((+ (t0.c48))) AND (CAST(vt1.c0 AS TEXT))));
SELECT * FROM vt0, t0, vt1 WHERE ((((NULL)IS NOT(vt1.c1)) IN ())) ORDER BY ((((t0.c48) BETWEEN (t0.c48) AND (vt1.c0)))LIKE(CAST(vt1.c2 AS NUMERIC))), (((('1638016481')AND(CASE WHEN vt1.c1 THEN vt1.c0 WHEN '+)zq7' THEN t0.c48 WHEN vt0.c0 THEN vt0.c0 WHEN 0.5821766894300444 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((NULL)IS NOT(vt1.c1)) IN ())) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((t0.c48) BETWEEN (t0.c48) AND (vt1.c0)))LIKE(CAST(vt1.c2 AS NUMERIC))), (((('1638016481')AND(CASE WHEN vt1.c1 THEN vt1.c0 WHEN '+)zq7' THEN t0.c48 WHEN vt0.c0 THEN vt0.c0 WHEN 0.5821766894300444 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt0.c0)))) ASC);
SELECT * FROM vt0, t0, vt1 WHERE ((((NULL)IS NOT(vt1.c1)) IN ())) ORDER BY ((((t0.c48) BETWEEN (t0.c48) AND (vt1.c0)))LIKE(CAST(vt1.c2 AS NUMERIC))), (((('1638016481')AND(CASE WHEN vt1.c1 THEN vt1.c0 WHEN '+)zq7' THEN t0.c48 WHEN vt0.c0 THEN vt0.c0 WHEN 0.5821766894300444 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((NULL)IS NOT(vt1.c1)) IN ())) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((t0.c48) BETWEEN (t0.c48) AND (vt1.c0)))LIKE(CAST(vt1.c2 AS NUMERIC))), (((('1638016481')AND(CASE WHEN vt1.c1 THEN vt1.c0 WHEN '+)zq7' THEN t0.c48 WHEN vt0.c0 THEN vt0.c0 WHEN 0.5821766894300444 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt0.c0)))) ASC);
SELECT * FROM vt0, t0, vt1 WHERE ((((NULL)IS NOT(vt1.c1)) IN ())) ORDER BY ((((t0.c48) BETWEEN (t0.c48) AND (vt1.c0)))LIKE(CAST(vt1.c2 AS NUMERIC))), (((('1638016481')AND(CASE WHEN vt1.c1 THEN vt1.c0 WHEN '+)zq7' THEN t0.c48 WHEN vt0.c0 THEN vt0.c0 WHEN 0.5821766894300444 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE WHEN ((vt1.c2)<(vt1.c0)) THEN (t0.c48 IN ()) ELSE ((t0.c48) BETWEEN (t0.c48) AND (x'7155')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c2)<(vt1.c0)) THEN (t0.c48 IN ()) ELSE ((t0.c48) BETWEEN (t0.c48) AND (x'7155')) END) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE WHEN ((vt1.c2)<(vt1.c0)) THEN (t0.c48 IN ()) ELSE ((t0.c48) BETWEEN (t0.c48) AND (x'7155')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c2)<(vt1.c0)) THEN (t0.c48 IN ()) ELSE ((t0.c48) BETWEEN (t0.c48) AND (x'7155')) END) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE WHEN ((vt1.c2)<(vt1.c0)) THEN (t0.c48 IN ()) ELSE ((t0.c48) BETWEEN (t0.c48) AND (x'7155')) END);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON NULLIF(((((((((t0.c51)OR(0.020989975928248472)))AND(vt1.c1)))OR(vt0.c0)))OR(vt1.c2)), (((vt0.c0))<=((vt1.c0)))) RIGHT OUTER JOIN vt1 ON NULLIF(((t0.c48)LIKE(vt1.c2)), ((vt1.c2)||(vt0.c0))) WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON NULLIF(((((((((t0.c51)OR(0.020989975928248472)))AND(vt1.c1)))OR(vt0.c0)))OR(vt1.c2)), (((vt0.c0))<=((vt1.c0)))) RIGHT OUTER JOIN vt1 ON NULLIF(((t0.c48)LIKE(vt1.c2)), ((vt1.c2)||(vt0.c0))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON NULLIF(((((((((t0.c51)OR(0.020989975928248472)))AND(vt1.c1)))OR(vt0.c0)))OR(vt1.c2)), (((vt0.c0))<=((vt1.c0)))) RIGHT OUTER JOIN vt1 ON NULLIF(((t0.c48)LIKE(vt1.c2)), ((vt1.c2)||(vt0.c0))) WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON NULLIF(((((((((t0.c51)OR(0.020989975928248472)))AND(vt1.c1)))OR(vt0.c0)))OR(vt1.c2)), (((vt0.c0))<=((vt1.c0)))) RIGHT OUTER JOIN vt1 ON NULLIF(((t0.c48)LIKE(vt1.c2)), ((vt1.c2)||(vt0.c0))));
SELECT * FROM t0 WHERE ((~ (((t0.c51) BETWEEN (t0.c48) AND (t0.c51))))) ORDER BY CASE t0.c51 COLLATE NOCASE  WHEN ((t0.c48) ISNULL) THEN ((t0.c48) IS TRUE) ELSE t0.c48 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c51) BETWEEN (t0.c48) AND (t0.c51))))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c51 COLLATE NOCASE  WHEN ((t0.c48) ISNULL) THEN ((t0.c48) IS TRUE) ELSE t0.c48 COLLATE RTRIM END ASC);
SELECT * FROM t0 WHERE ((~ (((t0.c51) BETWEEN (t0.c48) AND (t0.c51))))) ORDER BY CASE t0.c51 COLLATE NOCASE  WHEN ((t0.c48) ISNULL) THEN ((t0.c48) IS TRUE) ELSE t0.c48 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c51) BETWEEN (t0.c48) AND (t0.c51))))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c51 COLLATE NOCASE  WHEN ((t0.c48) ISNULL) THEN ((t0.c48) IS TRUE) ELSE t0.c48 COLLATE RTRIM END ASC);
SELECT * FROM t0 WHERE ((~ (((t0.c51) BETWEEN (t0.c48) AND (t0.c51))))) ORDER BY CASE t0.c51 COLLATE NOCASE  WHEN ((t0.c48) ISNULL) THEN ((t0.c48) IS TRUE) ELSE t0.c48 COLLATE RTRIM END ASC;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON -5.74569957E8 INNER JOIN vt1 ON -922512222 WHERE (((((((vt1.c0)AND(t0.c51)))OR(t0.c48)))&(vt1.c2 COLLATE BINARY))) ORDER BY ((((((((((((vt1.c2)OR(t0.c48)))OR(vt1.c0)))AND(vt1.c2)))AND(vt1.c2)))AND(CAST('-1461209617' AS BLOB))))OR((vt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(t0.c51)))OR(t0.c48)))&(vt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON -5.74569957E8 INNER JOIN vt1 ON -922512222 ORDER BY ((((((((((((vt1.c2)OR(t0.c48)))OR(vt1.c0)))AND(vt1.c2)))AND(vt1.c2)))AND(CAST('-1461209617' AS BLOB))))OR((vt1.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON -5.74569957E8 INNER JOIN vt1 ON -922512222 WHERE (((((((vt1.c0)AND(t0.c51)))OR(t0.c48)))&(vt1.c2 COLLATE BINARY))) ORDER BY ((((((((((((vt1.c2)OR(t0.c48)))OR(vt1.c0)))AND(vt1.c2)))AND(vt1.c2)))AND(CAST('-1461209617' AS BLOB))))OR((vt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(t0.c51)))OR(t0.c48)))&(vt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON -5.74569957E8 INNER JOIN vt1 ON -922512222 ORDER BY ((((((((((((vt1.c2)OR(t0.c48)))OR(vt1.c0)))AND(vt1.c2)))AND(vt1.c2)))AND(CAST('-1461209617' AS BLOB))))OR((vt1.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON -5.74569957E8 INNER JOIN vt1 ON -922512222 WHERE (((((((vt1.c0)AND(t0.c51)))OR(t0.c48)))&(vt1.c2 COLLATE BINARY))) ORDER BY ((((((((((((vt1.c2)OR(t0.c48)))OR(vt1.c0)))AND(vt1.c2)))AND(vt1.c2)))AND(CAST('-1461209617' AS BLOB))))OR((vt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) IS FALSE)) ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS INTEGER) ASC, (((((vt1.c2)AND('-464554009')))OR(vt0.c0)) IN ()), (CASE vt1.c1  WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c2 THEN vt1.c1 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS INTEGER) ASC, (((((vt1.c2)AND('-464554009')))OR(vt0.c0)) IN ()), (CASE vt1.c1  WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c2 THEN vt1.c1 END IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) IS FALSE)) ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS INTEGER) ASC, (((((vt1.c2)AND('-464554009')))OR(vt0.c0)) IN ()), (CASE vt1.c1  WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c2 THEN vt1.c1 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS INTEGER) ASC, (((((vt1.c2)AND('-464554009')))OR(vt0.c0)) IN ()), (CASE vt1.c1  WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c2 THEN vt1.c1 END IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) IS FALSE)) ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS INTEGER) ASC, (((((vt1.c2)AND('-464554009')))OR(vt0.c0)) IN ()), (CASE vt1.c1  WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c2 THEN vt1.c1 END IN ());
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (vt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (vt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (vt1.c2 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE RTRIM, ((vt0.c0)>(vt0.c0)), ((vt0.c0)<(vt0.c0))))<=(((~ (vt0.c0)), CAST(vt0.c0 AS REAL), (- (vt0.c0)))))) ORDER BY ((TRIM(DISTINCT vt0.c0)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE RTRIM, ((vt0.c0)>(vt0.c0)), ((vt0.c0)<(vt0.c0))))<=(((~ (vt0.c0)), CAST(vt0.c0 AS REAL), (- (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(DISTINCT vt0.c0)) NOTNULL)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE RTRIM, ((vt0.c0)>(vt0.c0)), ((vt0.c0)<(vt0.c0))))<=(((~ (vt0.c0)), CAST(vt0.c0 AS REAL), (- (vt0.c0)))))) ORDER BY ((TRIM(DISTINCT vt0.c0)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE RTRIM, ((vt0.c0)>(vt0.c0)), ((vt0.c0)<(vt0.c0))))<=(((~ (vt0.c0)), CAST(vt0.c0 AS REAL), (- (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(DISTINCT vt0.c0)) NOTNULL)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE RTRIM, ((vt0.c0)>(vt0.c0)), ((vt0.c0)<(vt0.c0))))<=(((~ (vt0.c0)), CAST(vt0.c0 AS REAL), (- (vt0.c0)))))) ORDER BY ((TRIM(DISTINCT vt0.c0)) NOTNULL)  NULLS LAST;
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt1.c0)*(vt1.c2)))) AND ((CASE WHEN t0.c51 THEN vt1.c0 WHEN t0.c51 THEN t0.c48 WHEN vt1.c2 THEN '-47216684' END)))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt0.c0) AND (0x101e4e2c)))<<((((vt1.c1, t0.c48, vt1.c1, vt1.c1, NULL))!=((vt0.c0, NULL, vt0.c0, vt1.c2, t0.c48))))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt1.c0)*(vt1.c2)))) AND ((CASE WHEN t0.c51 THEN vt1.c0 WHEN t0.c51 THEN t0.c48 WHEN vt1.c2 THEN '-47216684' END)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((vt1.c1) NOT BETWEEN (vt0.c0) AND (0X101e4e2c)))<<((((vt1.c1, t0.c48, vt1.c1, vt1.c1, NULL))!=((vt0.c0, NULL, vt0.c0, vt1.c2, t0.c48))))) ASC);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt1.c0)*(vt1.c2)))) AND ((CASE WHEN t0.c51 THEN vt1.c0 WHEN t0.c51 THEN t0.c48 WHEN vt1.c2 THEN '-47216684' END)))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt0.c0) AND (0x101e4e2c)))<<((((vt1.c1, t0.c48, vt1.c1, vt1.c1, NULL))!=((vt0.c0, NULL, vt0.c0, vt1.c2, t0.c48))))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt1.c0)*(vt1.c2)))) AND ((CASE WHEN t0.c51 THEN vt1.c0 WHEN t0.c51 THEN t0.c48 WHEN vt1.c2 THEN '-47216684' END)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((vt1.c1) NOT BETWEEN (vt0.c0) AND (0X101e4e2c)))<<((((vt1.c1, t0.c48, vt1.c1, vt1.c1, NULL))!=((vt0.c0, NULL, vt0.c0, vt1.c2, t0.c48))))) ASC);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt1.c0)*(vt1.c2)))) AND ((CASE WHEN t0.c51 THEN vt1.c0 WHEN t0.c51 THEN t0.c48 WHEN vt1.c2 THEN '-47216684' END)))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt0.c0) AND (0x101e4e2c)))<<((((vt1.c1, t0.c48, vt1.c1, vt1.c1, NULL))!=((vt0.c0, NULL, vt0.c0, vt1.c2, t0.c48))))) ASC;
SELECT ALL * FROM t0 WHERE ((- ((t0.c51 IN (t0.c51, t0.c51))))) ORDER BY (NOT (((t0.c48)>>(t0.c51)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((t0.c51 IN (t0.c51, t0.c51))))) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c48)>>(t0.c51)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((- ((t0.c51 IN (t0.c51, t0.c51))))) ORDER BY (NOT (((t0.c48)>>(t0.c51)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((t0.c51 IN (t0.c51, t0.c51))))) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c48)>>(t0.c51)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((- ((t0.c51 IN (t0.c51, t0.c51))))) ORDER BY (NOT (((t0.c48)>>(t0.c51)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0)||(vt0.c0)))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0)||(vt0.c0)))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0)||(vt0.c0)))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0)||(vt0.c0)))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0)||(vt0.c0)))))AND(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((t0.c48)OR(t0.c48)))IS((t0.c51 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c48)OR(t0.c48)))IS((t0.c51 IN ())))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((t0.c48)OR(t0.c48)))IS((t0.c51 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c48)OR(t0.c48)))IS((t0.c51 IN ())))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((t0.c48)OR(t0.c48)))IS((t0.c51 IN ()))));
SELECT ALL * FROM vt0 WHERE ((('-1852046846')/(((vt0.c0)+(0Xffffffffe4b146e2)))));
SELECT SUM(count) FROM (SELECT ALL (((('-1852046846')/(((vt0.c0)+(0xffffffffe4b146e2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('-1852046846')/(((vt0.c0)+(0Xffffffffe4b146e2)))));
SELECT SUM(count) FROM (SELECT ALL (((('-1852046846')/(((vt0.c0)+(0xffffffffe4b146e2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('-1852046846')/(((vt0.c0)+(0Xffffffffe4b146e2)))));
SELECT ALL * FROM t0 WHERE (0Xbb68731);
SELECT SUM(count) FROM (SELECT ALL ((0xbb68731) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (0Xbb68731);
SELECT SUM(count) FROM (SELECT ALL ((0xbb68731) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (0Xbb68731);
SELECT COUNT(*) FROM vt0, vt1 WHERE (MAX(vt1.c2, vt0.c0) COLLATE BINARY) ORDER BY (- (TRIM(DISTINCT vt0.c0, vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((MAX(vt1.c2, vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (TRIM(DISTINCT vt0.c0, vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (MAX(vt1.c2, vt0.c0) COLLATE BINARY) ORDER BY (- (TRIM(DISTINCT vt0.c0, vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((MAX(vt1.c2, vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (TRIM(DISTINCT vt0.c0, vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (MAX(vt1.c2, vt0.c0) COLLATE BINARY) ORDER BY (- (TRIM(DISTINCT vt0.c0, vt0.c0))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((json_array_length(vt1.c1) IN ())) ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c2))))<((vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((json_array_length(vt1.c1) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c2))))<((vt1.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((json_array_length(vt1.c1) IN ())) ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c2))))<((vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((json_array_length(vt1.c1) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c2))))<((vt1.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((json_array_length(vt1.c1) IN ())) ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c2))))<((vt1.c0)))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c48) NOTNULL) AS REAL)) ORDER BY CAST(CAST(t0.c48 AS NUMERIC) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c48) NOTNULL) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY CAST(CAST(t0.c48 AS NUMERIC) AS BLOB) ASC);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c48) NOTNULL) AS REAL)) ORDER BY CAST(CAST(t0.c48 AS NUMERIC) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c48) NOTNULL) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY CAST(CAST(t0.c48 AS NUMERIC) AS BLOB) ASC);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c48) NOTNULL) AS REAL)) ORDER BY CAST(CAST(t0.c48 AS NUMERIC) AS BLOB) ASC;
SELECT * FROM t0 WHERE ((('Gr엌}')*(t0.c51))) ORDER BY ((((((((((t0.c51)AND(t0.c48)))AND(t0.c48)))AND(t0.c51)))AND(t0.c48))) NOT BETWEEN (CAST(t0.c48 AS BLOB)) AND (((((t0.c48)OR(t0.c51)))OR(0.29278297316494606)))) ASC  NULLS FIRST, ((((((((((((t0.c48)AND(t0.c51)))OR(t0.c48)))OR(0.1318085822574414)))AND((t0.c48 IN (t0.c48, 0X70c01176)))))OR(t0.c48)))OR((((t0.c48))<((t0.c48))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('Gr엌}')*(t0.c51))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c51)AND(t0.c48)))AND(t0.c48)))AND(t0.c51)))AND(t0.c48))) NOT BETWEEN (CAST(t0.c48 AS BLOB)) AND (((((t0.c48)OR(t0.c51)))OR(0.29278297316494606)))) ASC  NULLS FIRST, ((((((((((((t0.c48)AND(t0.c51)))OR(t0.c48)))OR(0.1318085822574414)))AND((t0.c48 IN (t0.c48, 0X70c01176)))))OR(t0.c48)))OR((((t0.c48))<((t0.c48))))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((('Gr엌}')*(t0.c51))) ORDER BY ((((((((((t0.c51)AND(t0.c48)))AND(t0.c48)))AND(t0.c51)))AND(t0.c48))) NOT BETWEEN (CAST(t0.c48 AS BLOB)) AND (((((t0.c48)OR(t0.c51)))OR(0.29278297316494606)))) ASC  NULLS FIRST, ((((((((((((t0.c48)AND(t0.c51)))OR(t0.c48)))OR(0.1318085822574414)))AND((t0.c48 IN (t0.c48, 0X70c01176)))))OR(t0.c48)))OR((((t0.c48))<((t0.c48))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('Gr엌}')*(t0.c51))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c51)AND(t0.c48)))AND(t0.c48)))AND(t0.c51)))AND(t0.c48))) NOT BETWEEN (CAST(t0.c48 AS BLOB)) AND (((((t0.c48)OR(t0.c51)))OR(0.29278297316494606)))) ASC  NULLS FIRST, ((((((((((((t0.c48)AND(t0.c51)))OR(t0.c48)))OR(0.1318085822574414)))AND((t0.c48 IN (t0.c48, 0X70c01176)))))OR(t0.c48)))OR((((t0.c48))<((t0.c48))))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((('Gr엌}')*(t0.c51))) ORDER BY ((((((((((t0.c51)AND(t0.c48)))AND(t0.c48)))AND(t0.c51)))AND(t0.c48))) NOT BETWEEN (CAST(t0.c48 AS BLOB)) AND (((((t0.c48)OR(t0.c51)))OR(0.29278297316494606)))) ASC  NULLS FIRST, ((((((((((((t0.c48)AND(t0.c51)))OR(t0.c48)))OR(0.1318085822574414)))AND((t0.c48 IN (t0.c48, 0X70c01176)))))OR(t0.c48)))OR((((t0.c48))<((t0.c48))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON CASE WHEN CASE WHEN t0.c48 THEN t0.c48 END THEN LIKELIHOOD(vt1.c2, 0.8894637556574264) WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c2)IS(t0.c51)) WHEN ((vt1.c1) BETWEEN (t0.c51) AND (t0.c51)) THEN ((t0.c48) NOT BETWEEN (vt1.c2) AND (vt1.c0)) END WHERE ((((((t0.c48, vt1.c2, vt1.c2)) NOT BETWEEN ((vt1.c1, t0.c51, vt1.c2)) AND ((t0.c48, vt1.c1, 0.4294645247703288))))GLOB(((((vt0.c0)OR(vt1.c2)))AND(vt1.c1))))) ORDER BY (CAST(0.062167227471316644 AS INTEGER) IN ()), CAST(((((x'')AND(t0.c48)))OR(vt0.c0)) AS INTEGER) DESC  NULLS FIRST, ((NULLIF(DISTINCT t0.c51, vt0.c0))!=(CAST(vt1.c2 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c48, vt1.c2, vt1.c2)) NOT BETWEEN ((vt1.c1, t0.c51, vt1.c2)) AND ((t0.c48, vt1.c1, 0.4294645247703288))))GLOB(((((vt0.c0)OR(vt1.c2)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON CASE WHEN CASE WHEN t0.c48 THEN t0.c48 END THEN LIKELIHOOD(vt1.c2, 0.8894637556574264) WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c2)IS(t0.c51)) WHEN ((vt1.c1) BETWEEN (t0.c51) AND (t0.c51)) THEN ((t0.c48) NOT BETWEEN (vt1.c2) AND (vt1.c0)) END ORDER BY (CAST(0.062167227471316644 AS INTEGER) IN ()), CAST(((((x'')AND(t0.c48)))OR(vt0.c0)) AS INTEGER) DESC  NULLS FIRST, ((NULLIF(DISTINCT t0.c51, vt0.c0))!=(CAST(vt1.c2 AS NUMERIC)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON CASE WHEN CASE WHEN t0.c48 THEN t0.c48 END THEN LIKELIHOOD(vt1.c2, 0.8894637556574264) WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c2)IS(t0.c51)) WHEN ((vt1.c1) BETWEEN (t0.c51) AND (t0.c51)) THEN ((t0.c48) NOT BETWEEN (vt1.c2) AND (vt1.c0)) END WHERE ((((((t0.c48, vt1.c2, vt1.c2)) NOT BETWEEN ((vt1.c1, t0.c51, vt1.c2)) AND ((t0.c48, vt1.c1, 0.4294645247703288))))GLOB(((((vt0.c0)OR(vt1.c2)))AND(vt1.c1))))) ORDER BY (CAST(0.062167227471316644 AS INTEGER) IN ()), CAST(((((x'')AND(t0.c48)))OR(vt0.c0)) AS INTEGER) DESC  NULLS FIRST, ((NULLIF(DISTINCT t0.c51, vt0.c0))!=(CAST(vt1.c2 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c48, vt1.c2, vt1.c2)) NOT BETWEEN ((vt1.c1, t0.c51, vt1.c2)) AND ((t0.c48, vt1.c1, 0.4294645247703288))))GLOB(((((vt0.c0)OR(vt1.c2)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON CASE WHEN CASE WHEN t0.c48 THEN t0.c48 END THEN LIKELIHOOD(vt1.c2, 0.8894637556574264) WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c2)IS(t0.c51)) WHEN ((vt1.c1) BETWEEN (t0.c51) AND (t0.c51)) THEN ((t0.c48) NOT BETWEEN (vt1.c2) AND (vt1.c0)) END ORDER BY (CAST(0.062167227471316644 AS INTEGER) IN ()), CAST(((((x'')AND(t0.c48)))OR(vt0.c0)) AS INTEGER) DESC  NULLS FIRST, ((NULLIF(DISTINCT t0.c51, vt0.c0))!=(CAST(vt1.c2 AS NUMERIC)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON CASE WHEN CASE WHEN t0.c48 THEN t0.c48 END THEN LIKELIHOOD(vt1.c2, 0.8894637556574264) WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c2)IS(t0.c51)) WHEN ((vt1.c1) BETWEEN (t0.c51) AND (t0.c51)) THEN ((t0.c48) NOT BETWEEN (vt1.c2) AND (vt1.c0)) END WHERE ((((((t0.c48, vt1.c2, vt1.c2)) NOT BETWEEN ((vt1.c1, t0.c51, vt1.c2)) AND ((t0.c48, vt1.c1, 0.4294645247703288))))GLOB(((((vt0.c0)OR(vt1.c2)))AND(vt1.c1))))) ORDER BY (CAST(0.062167227471316644 AS INTEGER) IN ()), CAST(((((x'')AND(t0.c48)))OR(vt0.c0)) AS INTEGER) DESC  NULLS FIRST, ((NULLIF(DISTINCT t0.c51, vt0.c0))!=(CAST(vt1.c2 AS NUMERIC)))  NULLS FIRST;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c51) NOT NULL) WHERE ((((CAST(t0.c48 AS REAL)))=((-1232286179))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c48 AS REAL)))==((-1232286179)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c51) NOT NULL));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c51) NOT NULL) WHERE ((((CAST(t0.c48 AS REAL)))=((-1232286179))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c48 AS REAL)))==((-1232286179)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c51) NOT NULL));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c51) NOT NULL) WHERE ((((CAST(t0.c48 AS REAL)))=((-1232286179))));
SELECT * FROM vt0, vt1 WHERE (CAST(vt1.c1 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(vt1.c1 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(vt1.c1 AS INTEGER) COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE (0.8434646440722999) ORDER BY vt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.8434646440722999) IS TRUE)  as count FROM vt1 ORDER BY vt1.c2 DESC);
SELECT ALL * FROM vt1 WHERE (0.8434646440722999) ORDER BY vt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.8434646440722999) IS TRUE)  as count FROM vt1 ORDER BY vt1.c2 DESC);
SELECT ALL * FROM vt1 WHERE (0.8434646440722999) ORDER BY vt1.c2 DESC;
SELECT * FROM vt0, t0, vt1 WHERE (((NULL) NOTNULL)) ORDER BY CASE WHEN CAST(t0.c48 AS TEXT) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (('c[/sUT')%(vt0.c0)) WHEN -1741680235 THEN ((((((((t0.c48)AND(t0.c51)))AND(vt1.c2)))OR(vt0.c0)))AND(t0.c51)) ELSE LOWER(DISTINCT vt1.c0) END ASC, ((t0.c48 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CASE WHEN CAST(t0.c48 AS TEXT) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (('c[/sUT')%(vt0.c0)) WHEN -1741680235 THEN ((((((((t0.c48)AND(t0.c51)))AND(vt1.c2)))OR(vt0.c0)))AND(t0.c51)) ELSE LOWER(DISTINCT vt1.c0) END ASC, ((t0.c48 IN ()) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0, t0, vt1 WHERE (((NULL) NOTNULL)) ORDER BY CASE WHEN CAST(t0.c48 AS TEXT) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (('c[/sUT')%(vt0.c0)) WHEN -1741680235 THEN ((((((((t0.c48)AND(t0.c51)))AND(vt1.c2)))OR(vt0.c0)))AND(t0.c51)) ELSE LOWER(DISTINCT vt1.c0) END ASC, ((t0.c48 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CASE WHEN CAST(t0.c48 AS TEXT) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (('c[/sUT')%(vt0.c0)) WHEN -1741680235 THEN ((((((((t0.c48)AND(t0.c51)))AND(vt1.c2)))OR(vt0.c0)))AND(t0.c51)) ELSE LOWER(DISTINCT vt1.c0) END ASC, ((t0.c48 IN ()) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0, t0, vt1 WHERE (((NULL) NOTNULL)) ORDER BY CASE WHEN CAST(t0.c48 AS TEXT) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (('c[/sUT')%(vt0.c0)) WHEN -1741680235 THEN ((((((((t0.c48)AND(t0.c51)))AND(vt1.c2)))OR(vt0.c0)))AND(t0.c51)) ELSE LOWER(DISTINCT vt1.c0) END ASC, ((t0.c48 IN ()) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB) LEFT OUTER JOIN vt1 ON (((t0.c51)) BETWEEN (((vt1.c0 IN ()))) AND ((((vt1.c2)<<(t0.c51))))) WHERE (CASE WHEN TRIM(t0.c48, vt0.c0) THEN ((vt0.c0)*(vt1.c1)) WHEN CAST(vt1.c2 AS NUMERIC) THEN ((t0.c51) NOT BETWEEN (vt1.c1) AND (t0.c51)) WHEN ((vt1.c2)||(t0.c48)) THEN (0.21136946778363508 IN ()) END) ORDER BY ((((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)))IS(((vt1.c2)|(t0.c48))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(t0.c48, vt0.c0) THEN ((vt0.c0)*(vt1.c1)) WHEN CAST(vt1.c2 AS NUMERIC) THEN ((t0.c51) NOT BETWEEN (vt1.c1) AND (t0.c51)) WHEN ((vt1.c2)||(t0.c48)) THEN (0.21136946778363508 IN ()) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB) LEFT OUTER JOIN vt1 ON (((t0.c51)) BETWEEN (((vt1.c0 IN ()))) AND ((((vt1.c2)<<(t0.c51))))) ORDER BY ((((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)))IS(((vt1.c2)|(t0.c48))))  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB) LEFT OUTER JOIN vt1 ON (((t0.c51)) BETWEEN (((vt1.c0 IN ()))) AND ((((vt1.c2)<<(t0.c51))))) WHERE (CASE WHEN TRIM(t0.c48, vt0.c0) THEN ((vt0.c0)*(vt1.c1)) WHEN CAST(vt1.c2 AS NUMERIC) THEN ((t0.c51) NOT BETWEEN (vt1.c1) AND (t0.c51)) WHEN ((vt1.c2)||(t0.c48)) THEN (0.21136946778363508 IN ()) END) ORDER BY ((((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)))IS(((vt1.c2)|(t0.c48))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(t0.c48, vt0.c0) THEN ((vt0.c0)*(vt1.c1)) WHEN CAST(vt1.c2 AS NUMERIC) THEN ((t0.c51) NOT BETWEEN (vt1.c1) AND (t0.c51)) WHEN ((vt1.c2)||(t0.c48)) THEN (0.21136946778363508 IN ()) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB) LEFT OUTER JOIN vt1 ON (((t0.c51)) BETWEEN (((vt1.c0 IN ()))) AND ((((vt1.c2)<<(t0.c51))))) ORDER BY ((((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)))IS(((vt1.c2)|(t0.c48))))  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB) LEFT OUTER JOIN vt1 ON (((t0.c51)) BETWEEN (((vt1.c0 IN ()))) AND ((((vt1.c2)<<(t0.c51))))) WHERE (CASE WHEN TRIM(t0.c48, vt0.c0) THEN ((vt0.c0)*(vt1.c1)) WHEN CAST(vt1.c2 AS NUMERIC) THEN ((t0.c51) NOT BETWEEN (vt1.c1) AND (t0.c51)) WHEN ((vt1.c2)||(t0.c48)) THEN (0.21136946778363508 IN ()) END) ORDER BY ((((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)))IS(((vt1.c2)|(t0.c48))))  NULLS LAST;
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON CASE WHEN (((vt1.c2, vt1.c2, vt1.c2)) NOT BETWEEN ((vt0.c0, vt1.c1, t0.c51)) AND ((vt1.c1, t0.c51, vt1.c1))) THEN ((vt1.c0)<<(vt1.c1)) WHEN ((t0.c48) BETWEEN (t0.c51) AND (vt0.c0)) THEN 983740920 WHEN (vt1.c1 IN (vt0.c0)) THEN CAST(vt1.c1 AS BLOB) ELSE '-1378553839' END WHERE (((((((vt1.c1)AND(vt0.c0)))OR(vt0.c0)))<(((t0.c48) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CAST(vt1.c2 AS TEXT)) BETWEEN (((vt0.c0)==(t0.c48))) AND (t0.c51 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)AND(vt0.c0)))OR(vt0.c0)))<(((t0.c48) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON CASE WHEN (((vt1.c2, vt1.c2, vt1.c2)) NOT BETWEEN ((vt0.c0, vt1.c1, t0.c51)) AND ((vt1.c1, t0.c51, vt1.c1))) THEN ((vt1.c0)<<(vt1.c1)) WHEN ((t0.c48) BETWEEN (t0.c51) AND (vt0.c0)) THEN 983740920 WHEN (vt1.c1 IN (vt0.c0)) THEN CAST(vt1.c1 AS BLOB) ELSE '-1378553839' END ORDER BY ((CAST(vt1.c2 AS TEXT)) BETWEEN (((vt0.c0)==(t0.c48))) AND (t0.c51 COLLATE BINARY))  NULLS LAST);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON CASE WHEN (((vt1.c2, vt1.c2, vt1.c2)) NOT BETWEEN ((vt0.c0, vt1.c1, t0.c51)) AND ((vt1.c1, t0.c51, vt1.c1))) THEN ((vt1.c0)<<(vt1.c1)) WHEN ((t0.c48) BETWEEN (t0.c51) AND (vt0.c0)) THEN 983740920 WHEN (vt1.c1 IN (vt0.c0)) THEN CAST(vt1.c1 AS BLOB) ELSE '-1378553839' END WHERE (((((((vt1.c1)AND(vt0.c0)))OR(vt0.c0)))<(((t0.c48) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CAST(vt1.c2 AS TEXT)) BETWEEN (((vt0.c0)==(t0.c48))) AND (t0.c51 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)AND(vt0.c0)))OR(vt0.c0)))<(((t0.c48) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON CASE WHEN (((vt1.c2, vt1.c2, vt1.c2)) NOT BETWEEN ((vt0.c0, vt1.c1, t0.c51)) AND ((vt1.c1, t0.c51, vt1.c1))) THEN ((vt1.c0)<<(vt1.c1)) WHEN ((t0.c48) BETWEEN (t0.c51) AND (vt0.c0)) THEN 983740920 WHEN (vt1.c1 IN (vt0.c0)) THEN CAST(vt1.c1 AS BLOB) ELSE '-1378553839' END ORDER BY ((CAST(vt1.c2 AS TEXT)) BETWEEN (((vt0.c0)==(t0.c48))) AND (t0.c51 COLLATE BINARY))  NULLS LAST);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON CASE WHEN (((vt1.c2, vt1.c2, vt1.c2)) NOT BETWEEN ((vt0.c0, vt1.c1, t0.c51)) AND ((vt1.c1, t0.c51, vt1.c1))) THEN ((vt1.c0)<<(vt1.c1)) WHEN ((t0.c48) BETWEEN (t0.c51) AND (vt0.c0)) THEN 983740920 WHEN (vt1.c1 IN (vt0.c0)) THEN CAST(vt1.c1 AS BLOB) ELSE '-1378553839' END WHERE (((((((vt1.c1)AND(vt0.c0)))OR(vt0.c0)))<(((t0.c48) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CAST(vt1.c2 AS TEXT)) BETWEEN (((vt0.c0)==(t0.c48))) AND (t0.c51 COLLATE BINARY))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c2 COLLATE BINARY)IS((((vt0.c0)) BETWEEN ((0.5798133341472229)) AND ((vt1.c1)))))) ORDER BY LTRIM((((vt1.c0))<>(('1405826955'))), ((vt0.c0)>=(vt1.c2)))  NULLS LAST, '-769606720' COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((vt1.c2 COLLATE BINARY)IS((((vt0.c0)) BETWEEN ((0.5798133341472229)) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY LTRIM((((vt1.c0))<>(('1405826955'))), ((vt0.c0)>=(vt1.c2)))  NULLS LAST, '-769606720' COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c2 COLLATE BINARY)IS((((vt0.c0)) BETWEEN ((0.5798133341472229)) AND ((vt1.c1)))))) ORDER BY LTRIM((((vt1.c0))<>(('1405826955'))), ((vt0.c0)>=(vt1.c2)))  NULLS LAST, '-769606720' COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((vt1.c2 COLLATE BINARY)IS((((vt0.c0)) BETWEEN ((0.5798133341472229)) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY LTRIM((((vt1.c0))<>(('1405826955'))), ((vt0.c0)>=(vt1.c2)))  NULLS LAST, '-769606720' COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c2 COLLATE BINARY)IS((((vt0.c0)) BETWEEN ((0.5798133341472229)) AND ((vt1.c1)))))) ORDER BY LTRIM((((vt1.c0))<>(('1405826955'))), ((vt0.c0)>=(vt1.c2)))  NULLS LAST, '-769606720' COLLATE BINARY;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('-1218500841');
SELECT SUM(count) FROM (SELECT (('-1218500841') IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('-1218500841');
SELECT SUM(count) FROM (SELECT (('-1218500841') IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('-1218500841');
SELECT ALL * FROM t0, vt1 WHERE ((((vt1.c0)AND(vt1.c2)) IN ())) ORDER BY CASE WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c1 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)AND(vt1.c2)) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c1 END COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE ((((vt1.c0)AND(vt1.c2)) IN ())) ORDER BY CASE WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c1 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)AND(vt1.c2)) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c1 END COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE ((((vt1.c0)AND(vt1.c2)) IN ())) ORDER BY CASE WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c1 END COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.39349849373465184) NOT BETWEEN (NULLIF(DISTINCT vt1.c0, vt1.c2)) AND (((vt1.c1)!=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((0.39349849373465184) NOT BETWEEN (NULLIF(DISTINCT vt1.c0, vt1.c2)) AND (((vt1.c1)!=(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.39349849373465184) NOT BETWEEN (NULLIF(DISTINCT vt1.c0, vt1.c2)) AND (((vt1.c1)!=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((0.39349849373465184) NOT BETWEEN (NULLIF(DISTINCT vt1.c0, vt1.c2)) AND (((vt1.c1)!=(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.39349849373465184) NOT BETWEEN (NULLIF(DISTINCT vt1.c0, vt1.c2)) AND (((vt1.c1)!=(vt1.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c48)/(t0.c51)))OR((- (t0.c48)))))OR(CAST(t0.c48 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c48)/(t0.c51)))OR((- (t0.c48)))))OR(CAST(t0.c48 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c48)/(t0.c51)))OR((- (t0.c48)))))OR(CAST(t0.c48 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c48)/(t0.c51)))OR((- (t0.c48)))))OR(CAST(t0.c48 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c48)/(t0.c51)))OR((- (t0.c48)))))OR(CAST(t0.c48 AS REAL))));
SELECT ALL * FROM t0, vt1 WHERE (((CAST(t0.c51 AS INTEGER)) ISNULL)) ORDER BY CASE vt1.c2 COLLATE BINARY  WHEN CASE t0.c48  WHEN t0.c48 THEN vt1.c2 END THEN vt1.c0 END ASC  NULLS FIRST, (((+ (t0.c48)))<>(((t0.c48)LIKE(t0.c51))))  NULLS FIRST, (((NOT (t0.c51))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c51 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE vt1.c2 COLLATE BINARY  WHEN CASE t0.c48  WHEN t0.c48 THEN vt1.c2 END THEN vt1.c0 END ASC  NULLS FIRST, (((+ (t0.c48)))!=(((t0.c48)LIKE(t0.c51))))  NULLS FIRST, (((NOT (t0.c51))) ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (((CAST(t0.c51 AS INTEGER)) ISNULL)) ORDER BY CASE vt1.c2 COLLATE BINARY  WHEN CASE t0.c48  WHEN t0.c48 THEN vt1.c2 END THEN vt1.c0 END ASC  NULLS FIRST, (((+ (t0.c48)))<>(((t0.c48)LIKE(t0.c51))))  NULLS FIRST, (((NOT (t0.c51))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c51 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE vt1.c2 COLLATE BINARY  WHEN CASE t0.c48  WHEN t0.c48 THEN vt1.c2 END THEN vt1.c0 END ASC  NULLS FIRST, (((+ (t0.c48)))!=(((t0.c48)LIKE(t0.c51))))  NULLS FIRST, (((NOT (t0.c51))) ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (((CAST(t0.c51 AS INTEGER)) ISNULL)) ORDER BY CASE vt1.c2 COLLATE BINARY  WHEN CASE t0.c48  WHEN t0.c48 THEN vt1.c2 END THEN vt1.c0 END ASC  NULLS FIRST, (((+ (t0.c48)))<>(((t0.c48)LIKE(t0.c51))))  NULLS FIRST, (((NOT (t0.c51))) ISNULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((- (t0.c48)))>=(((0.35576173599640826) NOT NULL)))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (t0.c48)))>=(((0.35576173599640826) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((- (t0.c48)))>=(((0.35576173599640826) NOT NULL)))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (t0.c48)))>=(((0.35576173599640826) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((- (t0.c48)))>=(((0.35576173599640826) NOT NULL)))) ORDER BY NULL ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (NOT (((vt1.c1)<<(vt1.c1)))) WHERE (x'dce3');
SELECT SUM(count) FROM (SELECT ALL ((x'dce3') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (NOT (((vt1.c1)<<(vt1.c1)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (NOT (((vt1.c1)<<(vt1.c1)))) WHERE (x'dce3');
SELECT SUM(count) FROM (SELECT ALL ((x'dce3') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (NOT (((vt1.c1)<<(vt1.c1)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (NOT (((vt1.c1)<<(vt1.c1)))) WHERE (x'dce3');
SELECT * FROM vt0 WHERE ('\n>' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('\n>' COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('\n>' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('\n>' COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('\n>' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST(vt1.c0 AS REAL) WHERE (((((t0.c51) NOT BETWEEN (vt0.c0) AND (t0.c51)))IS NOT(((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51) NOT BETWEEN (vt0.c0) AND (t0.c51)))IS NOT(((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST(vt1.c0 AS REAL));
SELECT ALL COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST(vt1.c0 AS REAL) WHERE (((((t0.c51) NOT BETWEEN (vt0.c0) AND (t0.c51)))IS NOT(((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51) NOT BETWEEN (vt0.c0) AND (t0.c51)))IS NOT(((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST(vt1.c0 AS REAL));
SELECT ALL COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST(vt1.c0 AS REAL) WHERE (((((t0.c51) NOT BETWEEN (vt0.c0) AND (t0.c51)))IS NOT(((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT ALL * FROM t0, vt0 WHERE (t0.c51) ORDER BY json_array_length(x'', t0.c48) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c51) IS TRUE)  as count FROM t0, vt0 ORDER BY json_array_length(x'', t0.c48) COLLATE RTRIM DESC);
SELECT ALL * FROM t0, vt0 WHERE (t0.c51) ORDER BY json_array_length(x'', t0.c48) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c51) IS TRUE)  as count FROM t0, vt0 ORDER BY json_array_length(x'', t0.c48) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CAST((('紃!3')LIKE(0x2dd57c6c)) AS INTEGER) LEFT OUTER JOIN vt1 ON (((vt1.c0) NOT BETWEEN (vt1.c1) AND (t0.c51)) IN (((((t0.c48)OR('809738920')))OR(vt1.c0)), ((vt1.c0) NOT NULL), (vt1.c2 IN ()))) WHERE ((((+ (vt1.c1))) NOT BETWEEN (((((vt1.c2)OR(vt1.c2)))AND(vt1.c0))) AND (LIKELIHOOD(vt1.c2, 0.2025227223182916))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c1))) NOT BETWEEN (((((vt1.c2)OR(vt1.c2)))AND(vt1.c0))) AND (LIKELIHOOD(vt1.c2, 0.2025227223182916)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST((('紃!3')LIKE(0x2dd57c6c)) AS INTEGER) LEFT OUTER JOIN vt1 ON (((vt1.c0) NOT BETWEEN (vt1.c1) AND (t0.c51)) IN (((((t0.c48)OR('809738920')))OR(vt1.c0)), ((vt1.c0) NOT NULL), (vt1.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CAST((('紃!3')LIKE(0x2dd57c6c)) AS INTEGER) LEFT OUTER JOIN vt1 ON (((vt1.c0) NOT BETWEEN (vt1.c1) AND (t0.c51)) IN (((((t0.c48)OR('809738920')))OR(vt1.c0)), ((vt1.c0) NOT NULL), (vt1.c2 IN ()))) WHERE ((((+ (vt1.c1))) NOT BETWEEN (((((vt1.c2)OR(vt1.c2)))AND(vt1.c0))) AND (LIKELIHOOD(vt1.c2, 0.2025227223182916))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c1))) NOT BETWEEN (((((vt1.c2)OR(vt1.c2)))AND(vt1.c0))) AND (LIKELIHOOD(vt1.c2, 0.2025227223182916)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST((('紃!3')LIKE(0x2dd57c6c)) AS INTEGER) LEFT OUTER JOIN vt1 ON (((vt1.c0) NOT BETWEEN (vt1.c1) AND (t0.c51)) IN (((((t0.c48)OR('809738920')))OR(vt1.c0)), ((vt1.c0) NOT NULL), (vt1.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CAST((('紃!3')LIKE(0x2dd57c6c)) AS INTEGER) LEFT OUTER JOIN vt1 ON (((vt1.c0) NOT BETWEEN (vt1.c1) AND (t0.c51)) IN (((((t0.c48)OR('809738920')))OR(vt1.c0)), ((vt1.c0) NOT NULL), (vt1.c2 IN ()))) WHERE ((((+ (vt1.c1))) NOT BETWEEN (((((vt1.c2)OR(vt1.c2)))AND(vt1.c0))) AND (LIKELIHOOD(vt1.c2, 0.2025227223182916))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((((vt1.c2)-(vt0.c0)))OR(CASE WHEN vt1.c1 THEN vt1.c2 END)))AND(((t0.c51) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2)-(vt0.c0)))OR(CASE WHEN vt1.c1 THEN vt1.c2 END)))AND(((t0.c51) NOTNULL)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((((vt1.c2)-(vt0.c0)))OR(CASE WHEN vt1.c1 THEN vt1.c2 END)))AND(((t0.c51) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2)-(vt0.c0)))OR(CASE WHEN vt1.c1 THEN vt1.c2 END)))AND(((t0.c51) NOTNULL)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((((vt1.c2)-(vt0.c0)))OR(CASE WHEN vt1.c1 THEN vt1.c2 END)))AND(((t0.c51) NOTNULL))));
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE '' END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE '' END) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE '' END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE '' END) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE '' END) NOTNULL));
SELECT * FROM vt0 WHERE ((HEX(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((HEX(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((HEX(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((HEX(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((HEX(vt0.c0) IN ()));
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c1, vt1.c2))>((vt1.c2, vt0.c0, vt1.c1))) THEN (- (vt0.c0)) ELSE ((vt1.c2) BETWEEN (vt0.c0) AND (NULL)) END) ORDER BY (+ (vt1.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, vt1.c1, vt1.c2))>((vt1.c2, vt0.c0, vt1.c1))) THEN (- (vt0.c0)) ELSE ((vt1.c2) BETWEEN (vt0.c0) AND (NULL)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (vt1.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c1, vt1.c2))>((vt1.c2, vt0.c0, vt1.c1))) THEN (- (vt0.c0)) ELSE ((vt1.c2) BETWEEN (vt0.c0) AND (NULL)) END) ORDER BY (+ (vt1.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, vt1.c1, vt1.c2))>((vt1.c2, vt0.c0, vt1.c1))) THEN (- (vt0.c0)) ELSE ((vt1.c2) BETWEEN (vt0.c0) AND (NULL)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (vt1.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c1, vt1.c2))>((vt1.c2, vt0.c0, vt1.c1))) THEN (- (vt0.c0)) ELSE ((vt1.c2) BETWEEN (vt0.c0) AND (NULL)) END) ORDER BY (+ (vt1.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c51) ORDER BY ((((((0x141dc996)AND(t0.c51)))AND(t0.c51)))IS NOT(CAST(t0.c51 AS BLOB))) ASC  NULLS LAST, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c51) IS TRUE)  as count FROM t0 ORDER BY ((((((0X141dc996)AND(t0.c51)))AND(t0.c51)))IS NOT(CAST(t0.c51 AS BLOB))) ASC  NULLS LAST, x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c51) ORDER BY ((((((0x141dc996)AND(t0.c51)))AND(t0.c51)))IS NOT(CAST(t0.c51 AS BLOB))) ASC  NULLS LAST, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c51) IS TRUE)  as count FROM t0 ORDER BY ((((((0X141dc996)AND(t0.c51)))AND(t0.c51)))IS NOT(CAST(t0.c51 AS BLOB))) ASC  NULLS LAST, x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c51) ORDER BY ((((((0x141dc996)AND(t0.c51)))AND(t0.c51)))IS NOT(CAST(t0.c51 AS BLOB))) ASC  NULLS LAST, x'' DESC  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ('1546485596') ORDER BY (((vt0.c0) ISNULL) IN (vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1546485596') IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (((vt0.c0) ISNULL) IN (vt0.c0)) ASC  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ('1546485596') ORDER BY (((vt0.c0) ISNULL) IN (vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1546485596') IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (((vt0.c0) ISNULL) IN (vt0.c0)) ASC  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ('1546485596') ORDER BY (((vt0.c0) ISNULL) IN (vt0.c0)) ASC  NULLS FIRST;
SELECT * FROM t0, vt0, vt1 WHERE (((((((0xffffffffffc5d8c0)|(vt0.c0)))AND(NULLIF(t0.c51, vt1.c1))))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY (- (vt1.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0xffffffffffc5d8c0)|(vt0.c0)))AND(NULLIF(t0.c51, vt1.c1))))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (- (vt1.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE (((((((0xffffffffffc5d8c0)|(vt0.c0)))AND(NULLIF(t0.c51, vt1.c1))))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY (- (vt1.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0xffffffffffc5d8c0)|(vt0.c0)))AND(NULLIF(t0.c51, vt1.c1))))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (- (vt1.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE (((((((0xffffffffffc5d8c0)|(vt0.c0)))AND(NULLIF(t0.c51, vt1.c1))))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY (- (vt1.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c48)<>(t0.c51)))-(t0.c51)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)!=(t0.c51)))-(t0.c51))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c48)<>(t0.c51)))-(t0.c51)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)!=(t0.c51)))-(t0.c51))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c48)<>(t0.c51)))-(t0.c51)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c48) NOT NULL)) ISNULL)) ORDER BY (((t0.c48 COLLATE BINARY))>((((t0.c51)<(t0.c48))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48) NOT NULL)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c48 COLLATE BINARY))>((((t0.c51)<(t0.c48))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c48) NOT NULL)) ISNULL)) ORDER BY (((t0.c48 COLLATE BINARY))>((((t0.c51)<(t0.c48))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48) NOT NULL)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c48 COLLATE BINARY))>((((t0.c51)<(t0.c48))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c48) NOT NULL)) ISNULL)) ORDER BY (((t0.c48 COLLATE BINARY))>((((t0.c51)<(t0.c48))))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (TIME(((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51)), t0.c48, ((t0.c48) IS TRUE))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51)), t0.c48, ((t0.c48) IS TRUE))) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM t0 WHERE (TIME(((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51)), t0.c48, ((t0.c48) IS TRUE))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51)), t0.c48, ((t0.c48) IS TRUE))) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM t0 WHERE (TIME(((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51)), t0.c48, ((t0.c48) IS TRUE))) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((CASE t0.c51  WHEN t0.c48 THEN 0.9098744502176429 ELSE t0.c48 END) NOT BETWEEN (((t0.c51)<=(t0.c48))) AND (CAST(t0.c51 AS TEXT)))) ORDER BY NULLIF(DISTINCT ((t0.c51) NOTNULL), NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c51  WHEN t0.c48 THEN 0.9098744502176429 ELSE t0.c48 END) NOT BETWEEN (((t0.c51)<=(t0.c48))) AND (CAST(t0.c51 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY NULLIF(DISTINCT ((t0.c51) NOTNULL), NULL)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CASE t0.c51  WHEN t0.c48 THEN 0.9098744502176429 ELSE t0.c48 END) NOT BETWEEN (((t0.c51)<=(t0.c48))) AND (CAST(t0.c51 AS TEXT)))) ORDER BY NULLIF(DISTINCT ((t0.c51) NOTNULL), NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c51  WHEN t0.c48 THEN 0.9098744502176429 ELSE t0.c48 END) NOT BETWEEN (((t0.c51)<=(t0.c48))) AND (CAST(t0.c51 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY NULLIF(DISTINCT ((t0.c51) NOTNULL), NULL)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CASE t0.c51  WHEN t0.c48 THEN 0.9098744502176429 ELSE t0.c48 END) NOT BETWEEN (((t0.c51)<=(t0.c48))) AND (CAST(t0.c51 AS TEXT)))) ORDER BY NULLIF(DISTINCT ((t0.c51) NOTNULL), NULL)  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE WHEN HEX(DISTINCT vt0.c0) THEN (~ (vt0.c0)) END) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN HEX(DISTINCT vt0.c0) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL));
SELECT * FROM vt0 WHERE (CASE WHEN HEX(DISTINCT vt0.c0) THEN (~ (vt0.c0)) END) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN HEX(DISTINCT vt0.c0) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL));
SELECT * FROM vt0 WHERE (CASE WHEN HEX(DISTINCT vt0.c0) THEN (~ (vt0.c0)) END) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL);
SELECT * FROM t0, vt1, vt0 WHERE (CHANGES() COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CHANGES() COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (CHANGES() COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CHANGES() COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (CHANGES() COLLATE RTRIM);
SELECT ALL * FROM t0, vt0 WHERE ((CAST(t0.c51 AS BLOB) IN (((t0.c51)%(t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c51 AS BLOB) IN (((t0.c51)%(t0.c48))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((CAST(t0.c51 AS BLOB) IN (((t0.c51)%(t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c51 AS BLOB) IN (((t0.c51)%(t0.c48))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((CAST(t0.c51 AS BLOB) IN (((t0.c51)%(t0.c48)))));
SELECT ALL * FROM t0, vt0 NATURAL JOIN vt1 WHERE (((CAST(vt1.c0 AS REAL))>>(CASE vt0.c0  WHEN vt1.c1 THEN t0.c51 WHEN '740836471' THEN t0.c48 WHEN t0.c48 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL))>>(CASE vt0.c0  WHEN vt1.c1 THEN t0.c51 WHEN '740836471' THEN t0.c48 WHEN t0.c48 THEN vt1.c1 END))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT ALL * FROM t0, vt0 NATURAL JOIN vt1 WHERE (((CAST(vt1.c0 AS REAL))>>(CASE vt0.c0  WHEN vt1.c1 THEN t0.c51 WHEN '740836471' THEN t0.c48 WHEN t0.c48 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL))>>(CASE vt0.c0  WHEN vt1.c1 THEN t0.c51 WHEN '740836471' THEN t0.c48 WHEN t0.c48 THEN vt1.c1 END))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT ALL * FROM t0, vt0 NATURAL JOIN vt1 WHERE (((CAST(vt1.c0 AS REAL))>>(CASE vt0.c0  WHEN vt1.c1 THEN t0.c51 WHEN '740836471' THEN t0.c48 WHEN t0.c48 THEN vt1.c1 END)));
SELECT ALL * FROM vt0, vt1, t0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt1.c0))!=((vt1.c2)))))) ORDER BY ((((CASE '&>'  WHEN vt0.c0 THEN t0.c51 ELSE vt0.c0 END)OR((vt1.c2 IN ()))))AND(t0.c51))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt1.c0))<>((vt1.c2)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((CASE '&>'  WHEN vt0.c0 THEN t0.c51 ELSE vt0.c0 END)OR((vt1.c2 IN ()))))AND(t0.c51))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt1.c0))!=((vt1.c2)))))) ORDER BY ((((CASE '&>'  WHEN vt0.c0 THEN t0.c51 ELSE vt0.c0 END)OR((vt1.c2 IN ()))))AND(t0.c51))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt1.c0))<>((vt1.c2)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((CASE '&>'  WHEN vt0.c0 THEN t0.c51 ELSE vt0.c0 END)OR((vt1.c2 IN ()))))AND(t0.c51))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt1.c0))!=((vt1.c2)))))) ORDER BY ((((CASE '&>'  WHEN vt0.c0 THEN t0.c51 ELSE vt0.c0 END)OR((vt1.c2 IN ()))))AND(t0.c51))  NULLS LAST;
SELECT ALL * FROM vt0, vt1 NATURAL JOIN t0 WHERE (CAST(t0.c48 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c48 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t0);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN t0 WHERE (CAST(t0.c48 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c48 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t0);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN t0 WHERE (CAST(t0.c48 COLLATE NOCASE AS TEXT));
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON CASE WHEN ((((vt1.c1)AND(t0.c48)))AND(vt1.c1)) THEN CAST(vt1.c0 AS BLOB) WHEN (vt1.c2 IN (t0.c51)) THEN (t0.c48 IN (t0.c51)) WHEN ((vt1.c2) BETWEEN ('1086341596') AND (t0.c48)) THEN (vt0.c0 IN ()) ELSE ((vt1.c2) BETWEEN ('-1218500841') AND (x'e219')) END WHERE (((vt1.c0)>=((((t0.c51))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=((((t0.c51))>((vt1.c0)))))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON CASE WHEN ((((vt1.c1)AND(t0.c48)))AND(vt1.c1)) THEN CAST(vt1.c0 AS BLOB) WHEN (vt1.c2 IN (t0.c51)) THEN (t0.c48 IN (t0.c51)) WHEN ((vt1.c2) BETWEEN ('1086341596') AND (t0.c48)) THEN (vt0.c0 IN ()) ELSE ((vt1.c2) BETWEEN ('-1218500841') AND (x'e219')) END);
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON CASE WHEN ((((vt1.c1)AND(t0.c48)))AND(vt1.c1)) THEN CAST(vt1.c0 AS BLOB) WHEN (vt1.c2 IN (t0.c51)) THEN (t0.c48 IN (t0.c51)) WHEN ((vt1.c2) BETWEEN ('1086341596') AND (t0.c48)) THEN (vt0.c0 IN ()) ELSE ((vt1.c2) BETWEEN ('-1218500841') AND (x'e219')) END WHERE (((vt1.c0)>=((((t0.c51))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=((((t0.c51))>((vt1.c0)))))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON CASE WHEN ((((vt1.c1)AND(t0.c48)))AND(vt1.c1)) THEN CAST(vt1.c0 AS BLOB) WHEN (vt1.c2 IN (t0.c51)) THEN (t0.c48 IN (t0.c51)) WHEN ((vt1.c2) BETWEEN ('1086341596') AND (t0.c48)) THEN (vt0.c0 IN ()) ELSE ((vt1.c2) BETWEEN ('-1218500841') AND (x'e219')) END);
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON CASE WHEN ((((vt1.c1)AND(t0.c48)))AND(vt1.c1)) THEN CAST(vt1.c0 AS BLOB) WHEN (vt1.c2 IN (t0.c51)) THEN (t0.c48 IN (t0.c51)) WHEN ((vt1.c2) BETWEEN ('1086341596') AND (t0.c48)) THEN (vt0.c0 IN ()) ELSE ((vt1.c2) BETWEEN ('-1218500841') AND (x'e219')) END WHERE (((vt1.c0)>=((((t0.c51))>((vt1.c0))))));
SELECT ALL * FROM vt1, vt0, t0 WHERE (CASE ((t0.c51)%(vt1.c0))  WHEN CASE 'Lp u^X'  WHEN t0.c48 THEN vt1.c0 ELSE vt1.c1 END THEN ((t0.c48)IS(vt1.c1)) END) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c51)%(vt1.c0))  WHEN CASE 'Lp u^X'  WHEN t0.c48 THEN vt1.c0 ELSE vt1.c1 END THEN ((t0.c48)IS(vt1.c1)) END) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))) AS INTEGER));
SELECT ALL * FROM vt1, vt0, t0 WHERE (CASE ((t0.c51)%(vt1.c0))  WHEN CASE 'Lp u^X'  WHEN t0.c48 THEN vt1.c0 ELSE vt1.c1 END THEN ((t0.c48)IS(vt1.c1)) END) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c51)%(vt1.c0))  WHEN CASE 'Lp u^X'  WHEN t0.c48 THEN vt1.c0 ELSE vt1.c1 END THEN ((t0.c48)IS(vt1.c1)) END) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))) AS INTEGER));
SELECT ALL * FROM vt1, vt0, t0 WHERE (CASE ((t0.c51)%(vt1.c0))  WHEN CASE 'Lp u^X'  WHEN t0.c48 THEN vt1.c0 ELSE vt1.c1 END THEN ((t0.c48)IS(vt1.c1)) END) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))) AS INTEGER);
SELECT * FROM vt1 WHERE ((((x'', ((vt1.c1) IS TRUE), (+ ('0.32231494437076114'))))>=((((vt1.c1) NOT BETWEEN ('1886153208') AND (vt1.c0)), vt1.c0 COLLATE NOCASE, vt1.c1)))) ORDER BY (vt1.c2 COLLATE RTRIM IN ()) ASC  NULLS LAST, CASE ((((vt1.c2)AND(vt1.c1)))OR(vt1.c2))  WHEN ((0.49059546542805677) ISNULL) THEN (NOT (vt1.c1)) ELSE (((vt1.c2, vt1.c0, vt1.c2)) BETWEEN ((vt1.c0, vt1.c1, vt1.c2)) AND ((vt1.c0, vt1.c2, vt1.c0))) END DESC;
SELECT SUM(count) FROM (SELECT (((((x'', ((vt1.c1) IS TRUE), (+ ('0.32231494437076114'))))>=((((vt1.c1) NOT BETWEEN ('1886153208') AND (vt1.c0)), vt1.c0 COLLATE NOCASE, vt1.c1)))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c2 COLLATE RTRIM IN ()) ASC  NULLS LAST, CASE ((((vt1.c2)AND(vt1.c1)))OR(vt1.c2))  WHEN ((0.49059546542805677) ISNULL) THEN (NOT (vt1.c1)) ELSE (((vt1.c2, vt1.c0, vt1.c2)) BETWEEN ((vt1.c0, vt1.c1, vt1.c2)) AND ((vt1.c0, vt1.c2, vt1.c0))) END DESC);
SELECT * FROM vt1 WHERE ((((x'', ((vt1.c1) IS TRUE), (+ ('0.32231494437076114'))))>=((((vt1.c1) NOT BETWEEN ('1886153208') AND (vt1.c0)), vt1.c0 COLLATE NOCASE, vt1.c1)))) ORDER BY (vt1.c2 COLLATE RTRIM IN ()) ASC  NULLS LAST, CASE ((((vt1.c2)AND(vt1.c1)))OR(vt1.c2))  WHEN ((0.49059546542805677) ISNULL) THEN (NOT (vt1.c1)) ELSE (((vt1.c2, vt1.c0, vt1.c2)) BETWEEN ((vt1.c0, vt1.c1, vt1.c2)) AND ((vt1.c0, vt1.c2, vt1.c0))) END DESC;
SELECT SUM(count) FROM (SELECT (((((x'', ((vt1.c1) IS TRUE), (+ ('0.32231494437076114'))))>=((((vt1.c1) NOT BETWEEN ('1886153208') AND (vt1.c0)), vt1.c0 COLLATE NOCASE, vt1.c1)))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c2 COLLATE RTRIM IN ()) ASC  NULLS LAST, CASE ((((vt1.c2)AND(vt1.c1)))OR(vt1.c2))  WHEN ((0.49059546542805677) ISNULL) THEN (NOT (vt1.c1)) ELSE (((vt1.c2, vt1.c0, vt1.c2)) BETWEEN ((vt1.c0, vt1.c1, vt1.c2)) AND ((vt1.c0, vt1.c2, vt1.c0))) END DESC);
SELECT * FROM vt1 WHERE ((((x'', ((vt1.c1) IS TRUE), (+ ('0.32231494437076114'))))>=((((vt1.c1) NOT BETWEEN ('1886153208') AND (vt1.c0)), vt1.c0 COLLATE NOCASE, vt1.c1)))) ORDER BY (vt1.c2 COLLATE RTRIM IN ()) ASC  NULLS LAST, CASE ((((vt1.c2)AND(vt1.c1)))OR(vt1.c2))  WHEN ((0.49059546542805677) ISNULL) THEN (NOT (vt1.c1)) ELSE (((vt1.c2, vt1.c0, vt1.c2)) BETWEEN ((vt1.c0, vt1.c1, vt1.c2)) AND ((vt1.c0, vt1.c2, vt1.c0))) END DESC;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ('\r') ORDER BY CASE WHEN vt1.c2 COLLATE NOCASE THEN CASE WHEN t0.c51 THEN NULL ELSE vt0.c0 END WHEN x'963d' THEN ((vt1.c2) IS FALSE) WHEN 0x7fffffffffffffff COLLATE RTRIM THEN vt1.c2 ELSE ((((((((vt0.c0)AND('0.2614164205311962')))AND(0.4984009465381575)))OR(vt1.c1)))AND(vt1.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (('\r') IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CASE WHEN vt1.c2 COLLATE NOCASE THEN CASE WHEN t0.c51 THEN NULL ELSE vt0.c0 END WHEN x'963d' THEN ((vt1.c2) IS FALSE) WHEN 0X7fffffffffffffff COLLATE RTRIM THEN vt1.c2 ELSE ((((((((vt0.c0)AND('0.2614164205311962')))AND(0.4984009465381575)))OR(vt1.c1)))AND(vt1.c2)) END ASC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ('\r') ORDER BY CASE WHEN vt1.c2 COLLATE NOCASE THEN CASE WHEN t0.c51 THEN NULL ELSE vt0.c0 END WHEN x'963d' THEN ((vt1.c2) IS FALSE) WHEN 0x7fffffffffffffff COLLATE RTRIM THEN vt1.c2 ELSE ((((((((vt0.c0)AND('0.2614164205311962')))AND(0.4984009465381575)))OR(vt1.c1)))AND(vt1.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (('\r') IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CASE WHEN vt1.c2 COLLATE NOCASE THEN CASE WHEN t0.c51 THEN NULL ELSE vt0.c0 END WHEN x'963d' THEN ((vt1.c2) IS FALSE) WHEN 0X7fffffffffffffff COLLATE RTRIM THEN vt1.c2 ELSE ((((((((vt0.c0)AND('0.2614164205311962')))AND(0.4984009465381575)))OR(vt1.c1)))AND(vt1.c2)) END ASC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ('\r') ORDER BY CASE WHEN vt1.c2 COLLATE NOCASE THEN CASE WHEN t0.c51 THEN NULL ELSE vt0.c0 END WHEN x'963d' THEN ((vt1.c2) IS FALSE) WHEN 0x7fffffffffffffff COLLATE RTRIM THEN vt1.c2 ELSE ((((((((vt0.c0)AND('0.2614164205311962')))AND(0.4984009465381575)))OR(vt1.c1)))AND(vt1.c2)) END ASC;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) BETWEEN (t0.c48) AND (t0.c48)))>>(STRFTIME(t0.c51, vt0.c0, vt0.c0)))) ORDER BY CASE (- (t0.c48))  WHEN (((t0.c51)) NOT BETWEEN ((vt0.c0)) AND ((t0.c51))) THEN (+ (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (t0.c48) AND (t0.c48)))>>(STRFTIME(t0.c51, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE (- (t0.c48))  WHEN (((t0.c51)) NOT BETWEEN ((vt0.c0)) AND ((t0.c51))) THEN (+ (vt0.c0)) END DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) BETWEEN (t0.c48) AND (t0.c48)))>>(STRFTIME(t0.c51, vt0.c0, vt0.c0)))) ORDER BY CASE (- (t0.c48))  WHEN (((t0.c51)) NOT BETWEEN ((vt0.c0)) AND ((t0.c51))) THEN (+ (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (t0.c48) AND (t0.c48)))>>(STRFTIME(t0.c51, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE (- (t0.c48))  WHEN (((t0.c51)) NOT BETWEEN ((vt0.c0)) AND ((t0.c51))) THEN (+ (vt0.c0)) END DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) BETWEEN (t0.c48) AND (t0.c48)))>>(STRFTIME(t0.c51, vt0.c0, vt0.c0)))) ORDER BY CASE (- (t0.c48))  WHEN (((t0.c51)) NOT BETWEEN ((vt0.c0)) AND ((t0.c51))) THEN (+ (vt0.c0)) END DESC;
SELECT ALL * FROM vt0, t0 WHERE (CAST(t0.c48 AS REAL)) ORDER BY 0.8850028971176314  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c48 AS REAL)) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.8850028971176314  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (CAST(t0.c48 AS REAL)) ORDER BY 0.8850028971176314  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c48 AS REAL)) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.8850028971176314  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (CAST(t0.c48 AS REAL)) ORDER BY 0.8850028971176314  NULLS FIRST;
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ((vt1.c1 COLLATE RTRIM)||(CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN t0.c48 WHEN vt1.c1 THEN vt1.c0 END)) WHERE ((~ (((vt1.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c2) IS FALSE)))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((vt1.c1 COLLATE RTRIM)||(CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN t0.c48 WHEN vt1.c1 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ((vt1.c1 COLLATE RTRIM)||(CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN t0.c48 WHEN vt1.c1 THEN vt1.c0 END)) WHERE ((~ (((vt1.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c2) IS FALSE)))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((vt1.c1 COLLATE RTRIM)||(CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN t0.c48 WHEN vt1.c1 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ((vt1.c1 COLLATE RTRIM)||(CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN t0.c48 WHEN vt1.c1 THEN vt1.c0 END)) WHERE ((~ (((vt1.c2) IS FALSE))));
SELECT * FROM vt0, vt1, t0 WHERE ((((t0.c48)+(NULL)) IN ())) ORDER BY (((x'0180', vt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c2 COLLATE RTRIM, JULIANDAY(vt0.c0, t0.c48, vt1.c2, vt0.c0, NULL), CAST(vt1.c1 AS REAL))) AND (((((vt1.c2))<((vt0.c0))), ((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)), ((vt1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c48)+(NULL)) IN ())) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((x'0180', vt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c2 COLLATE RTRIM, JULIANDAY(vt0.c0, t0.c48, vt1.c2, vt0.c0, NULL), CAST(vt1.c1 AS REAL))) AND (((((vt1.c2))<((vt0.c0))), ((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)), ((vt1.c2) NOT NULL)))));
SELECT * FROM vt0, vt1, t0 WHERE ((((t0.c48)+(NULL)) IN ())) ORDER BY (((x'0180', vt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c2 COLLATE RTRIM, JULIANDAY(vt0.c0, t0.c48, vt1.c2, vt0.c0, NULL), CAST(vt1.c1 AS REAL))) AND (((((vt1.c2))<((vt0.c0))), ((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)), ((vt1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c48)+(NULL)) IN ())) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((x'0180', vt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c2 COLLATE RTRIM, JULIANDAY(vt0.c0, t0.c48, vt1.c2, vt0.c0, NULL), CAST(vt1.c1 AS REAL))) AND (((((vt1.c2))<((vt0.c0))), ((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)), ((vt1.c2) NOT NULL)))));
SELECT * FROM vt0, vt1, t0 WHERE ((((t0.c48)+(NULL)) IN ())) ORDER BY (((x'0180', vt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c2 COLLATE RTRIM, JULIANDAY(vt0.c0, t0.c48, vt1.c2, vt0.c0, NULL), CAST(vt1.c1 AS REAL))) AND (((((vt1.c2))<((vt0.c0))), ((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)), ((vt1.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c2)OR(0xffffffffa5f01f87)))AND(NULL)))OR(((vt1.c2)OR(vt1.c2))))) ORDER BY (((((vt1.c0))<((NULL))))/(ABS(DISTINCT vt1.c0))), (((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2)OR(0Xffffffffa5f01f87)))AND(NULL)))OR(((vt1.c2)OR(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<((NULL))))/(ABS(DISTINCT vt1.c0))), (((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c2)OR(0xffffffffa5f01f87)))AND(NULL)))OR(((vt1.c2)OR(vt1.c2))))) ORDER BY (((((vt1.c0))<((NULL))))/(ABS(DISTINCT vt1.c0))), (((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2)OR(0Xffffffffa5f01f87)))AND(NULL)))OR(((vt1.c2)OR(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<((NULL))))/(ABS(DISTINCT vt1.c0))), (((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c2)OR(0xffffffffa5f01f87)))AND(NULL)))OR(((vt1.c2)OR(vt1.c2))))) ORDER BY (((((vt1.c0))<((NULL))))/(ABS(DISTINCT vt1.c0))), (((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (0x326e5f81);
SELECT SUM(count) FROM (SELECT ((0x326e5f81) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0x326e5f81);
SELECT SUM(count) FROM (SELECT ((0x326e5f81) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0x326e5f81);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c48) ISNULL))GLOB(ABS(t0.c48))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48) ISNULL))GLOB(ABS(t0.c48)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c48) ISNULL))GLOB(ABS(t0.c48))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48) ISNULL))GLOB(ABS(t0.c48)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c48) ISNULL))GLOB(ABS(t0.c48))));
SELECT * FROM vt0, t0 WHERE (((((((t0.c48))>((t0.c48)))))<=((t0.c48)))) ORDER BY CASE WHEN (((t0.c48)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN t0.c51 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c48))>((t0.c48)))))<=((t0.c48)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN (((t0.c48)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN t0.c51 END DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((((t0.c48))>((t0.c48)))))<=((t0.c48)))) ORDER BY CASE WHEN (((t0.c48)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN t0.c51 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c48))>((t0.c48)))))<=((t0.c48)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN (((t0.c48)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN t0.c51 END DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((((t0.c48))>((t0.c48)))))<=((t0.c48)))) ORDER BY CASE WHEN (((t0.c48)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN t0.c51 END DESC  NULLS LAST;
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((vt1.c0)&(vt0.c0)) COLLATE NOCASE FULL OUTER JOIN vt1 ON (((((((vt0.c0)AND(vt1.c2)))AND(t0.c51))))<((vt1.c0 COLLATE BINARY))) WHERE ((('-282872722')<>(((vt1.c2)GLOB(t0.c51)))));
SELECT SUM(count) FROM (SELECT ALL (((('-282872722')!=(((vt1.c2)GLOB(t0.c51))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((vt1.c0)&(vt0.c0)) COLLATE NOCASE FULL OUTER JOIN vt1 ON (((((((vt0.c0)AND(vt1.c2)))AND(t0.c51))))<((vt1.c0 COLLATE BINARY))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((vt1.c0)&(vt0.c0)) COLLATE NOCASE FULL OUTER JOIN vt1 ON (((((((vt0.c0)AND(vt1.c2)))AND(t0.c51))))<((vt1.c0 COLLATE BINARY))) WHERE ((('-282872722')<>(((vt1.c2)GLOB(t0.c51)))));
SELECT SUM(count) FROM (SELECT ALL (((('-282872722')!=(((vt1.c2)GLOB(t0.c51))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((vt1.c0)&(vt0.c0)) COLLATE NOCASE FULL OUTER JOIN vt1 ON (((((((vt0.c0)AND(vt1.c2)))AND(t0.c51))))<((vt1.c0 COLLATE BINARY))));
SELECT * FROM t0, vt1 INNER JOIN vt0 ON ((((((((t0.c48)OR(t0.c48)))OR(vt1.c0)))OR(((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(0.11629953755986577 COLLATE BINARY)) WHERE (((((((((((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN t0.c51 THEN vt1.c2 ELSE t0.c51 END)))OR(((vt0.c0) NOT BETWEEN (t0.c51) AND (vt1.c2)))))AND(((NULL)+(NULL)))))OR(((((((((((((vt1.c0)AND(vt1.c2)))OR(vt0.c0)))AND(vt1.c0)))AND('mS6<')))AND(1.427054003E9)))AND(t0.c48)))))AND(t0.c51)))OR(vt0.c0 COLLATE NOCASE))) ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CAST(vt1.c1 AS INTEGER))))  NULLS FIRST, json_insert('-236611506', (((vt1.c1)) NOT BETWEEN ((t0.c51)) AND ((vt1.c2))), ((NULL)*(t0.c48)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN t0.c51 THEN vt1.c2 ELSE t0.c51 END)))OR(((vt0.c0) NOT BETWEEN (t0.c51) AND (vt1.c2)))))AND(((NULL)+(NULL)))))OR(((((((((((((vt1.c0)AND(vt1.c2)))OR(vt0.c0)))AND(vt1.c0)))AND('mS6<')))AND(1.427054003E9)))AND(t0.c48)))))AND(t0.c51)))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON ((((((((t0.c48)OR(t0.c48)))OR(vt1.c0)))OR(((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(0.11629953755986577 COLLATE BINARY)) ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CAST(vt1.c1 AS INTEGER))))  NULLS FIRST, json_insert('-236611506', (((vt1.c1)) NOT BETWEEN ((t0.c51)) AND ((vt1.c2))), ((NULL)*(t0.c48)))  NULLS LAST);
SELECT * FROM t0, vt1 INNER JOIN vt0 ON ((((((((t0.c48)OR(t0.c48)))OR(vt1.c0)))OR(((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(0.11629953755986577 COLLATE BINARY)) WHERE (((((((((((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN t0.c51 THEN vt1.c2 ELSE t0.c51 END)))OR(((vt0.c0) NOT BETWEEN (t0.c51) AND (vt1.c2)))))AND(((NULL)+(NULL)))))OR(((((((((((((vt1.c0)AND(vt1.c2)))OR(vt0.c0)))AND(vt1.c0)))AND('mS6<')))AND(1.427054003E9)))AND(t0.c48)))))AND(t0.c51)))OR(vt0.c0 COLLATE NOCASE))) ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CAST(vt1.c1 AS INTEGER))))  NULLS FIRST, json_insert('-236611506', (((vt1.c1)) NOT BETWEEN ((t0.c51)) AND ((vt1.c2))), ((NULL)*(t0.c48)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN t0.c51 THEN vt1.c2 ELSE t0.c51 END)))OR(((vt0.c0) NOT BETWEEN (t0.c51) AND (vt1.c2)))))AND(((NULL)+(NULL)))))OR(((((((((((((vt1.c0)AND(vt1.c2)))OR(vt0.c0)))AND(vt1.c0)))AND('mS6<')))AND(1.427054003E9)))AND(t0.c48)))))AND(t0.c51)))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON ((((((((t0.c48)OR(t0.c48)))OR(vt1.c0)))OR(((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(0.11629953755986577 COLLATE BINARY)) ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CAST(vt1.c1 AS INTEGER))))  NULLS FIRST, json_insert('-236611506', (((vt1.c1)) NOT BETWEEN ((t0.c51)) AND ((vt1.c2))), ((NULL)*(t0.c48)))  NULLS LAST);
SELECT * FROM t0, vt1 INNER JOIN vt0 ON ((((((((t0.c48)OR(t0.c48)))OR(vt1.c0)))OR(((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(0.11629953755986577 COLLATE BINARY)) WHERE (((((((((((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN t0.c51 THEN vt1.c2 ELSE t0.c51 END)))OR(((vt0.c0) NOT BETWEEN (t0.c51) AND (vt1.c2)))))AND(((NULL)+(NULL)))))OR(((((((((((((vt1.c0)AND(vt1.c2)))OR(vt0.c0)))AND(vt1.c0)))AND('mS6<')))AND(1.427054003E9)))AND(t0.c48)))))AND(t0.c51)))OR(vt0.c0 COLLATE NOCASE))) ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CAST(vt1.c1 AS INTEGER))))  NULLS FIRST, json_insert('-236611506', (((vt1.c1)) NOT BETWEEN ((t0.c51)) AND ((vt1.c2))), ((NULL)*(t0.c48)))  NULLS LAST;
SELECT * FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('');
SELECT COUNT(*) FROM vt1 WHERE (0.4034317657695574);
SELECT SUM(count) FROM (SELECT ALL ((0.4034317657695574) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.4034317657695574);
SELECT SUM(count) FROM (SELECT ALL ((0.4034317657695574) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.4034317657695574);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i70 LEFT OUTER JOIN vt1 ON ((t0.c51) NOT NULL) COLLATE RTRIM LEFT OUTER JOIN t0 ON NULLIF(vt1.c1 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0))) WHERE (',lBq}');
SELECT SUM(count) FROM (SELECT ((',lBq}') IS TRUE)  as count FROM vt0 INDEXED BY i70 LEFT OUTER JOIN vt1 ON ((t0.c51) NOT NULL) COLLATE RTRIM LEFT OUTER JOIN t0 ON NULLIF(vt1.c1 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i70 LEFT OUTER JOIN vt1 ON ((t0.c51) NOT NULL) COLLATE RTRIM LEFT OUTER JOIN t0 ON NULLIF(vt1.c1 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0))) WHERE (',lBq}');
SELECT SUM(count) FROM (SELECT ((',lBq}') IS TRUE)  as count FROM vt0 INDEXED BY i70 LEFT OUTER JOIN vt1 ON ((t0.c51) NOT NULL) COLLATE RTRIM LEFT OUTER JOIN t0 ON NULLIF(vt1.c1 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0))));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((TRIM(vt1.c1, vt1.c1))AND((vt1.c0 IN ()))))AND(((((((((((((t0.c48)AND(t0.c48)))AND('-1109785605')))OR(vt0.c0)))AND(x'7d126f80')))OR(vt1.c2)))OR(vt1.c1)))) WHERE (CAST(((((((((t0.c51)AND(vt0.c0)))OR(x'')))AND(t0.c48)))OR(vt1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t0.c51)AND(vt0.c0)))OR(x'')))AND(t0.c48)))OR(vt1.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((TRIM(vt1.c1, vt1.c1))AND((vt1.c0 IN ()))))AND(((((((((((((t0.c48)AND(t0.c48)))AND('-1109785605')))OR(vt0.c0)))AND(x'7d126f80')))OR(vt1.c2)))OR(vt1.c1)))));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((TRIM(vt1.c1, vt1.c1))AND((vt1.c0 IN ()))))AND(((((((((((((t0.c48)AND(t0.c48)))AND('-1109785605')))OR(vt0.c0)))AND(x'7d126f80')))OR(vt1.c2)))OR(vt1.c1)))) WHERE (CAST(((((((((t0.c51)AND(vt0.c0)))OR(x'')))AND(t0.c48)))OR(vt1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t0.c51)AND(vt0.c0)))OR(x'')))AND(t0.c48)))OR(vt1.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((TRIM(vt1.c1, vt1.c1))AND((vt1.c0 IN ()))))AND(((((((((((((t0.c48)AND(t0.c48)))AND('-1109785605')))OR(vt0.c0)))AND(x'7d126f80')))OR(vt1.c2)))OR(vt1.c1)))));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((TRIM(vt1.c1, vt1.c1))AND((vt1.c0 IN ()))))AND(((((((((((((t0.c48)AND(t0.c48)))AND('-1109785605')))OR(vt0.c0)))AND(x'7d126f80')))OR(vt1.c2)))OR(vt1.c1)))) WHERE (CAST(((((((((t0.c51)AND(vt0.c0)))OR(x'')))AND(t0.c48)))OR(vt1.c2)) AS INTEGER));
SELECT * FROM vt0 WHERE ((TYPEOF(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TYPEOF(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((TYPEOF(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TYPEOF(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((TYPEOF(vt0.c0) IN ()));
SELECT ALL * FROM vt0, t0 INNER JOIN vt1 ON (((NULL))>=((((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0))))) WHERE ('-1107551070');
SELECT SUM(count) FROM (SELECT (('-1107551070') IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON (((NULL))>=((((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0))))));
SELECT ALL * FROM vt0, t0 INNER JOIN vt1 ON (((NULL))>=((((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0))))) WHERE ('-1107551070');
SELECT SUM(count) FROM (SELECT (('-1107551070') IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON (((NULL))>=((((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0))))));
SELECT ALL * FROM vt0, t0 INNER JOIN vt1 ON (((NULL))>=((((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0))))) WHERE ('-1107551070');
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((- (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((- (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((- (vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY ((((vt1.c0)AND(((vt1.c2) NOTNULL))))OR((('T	') BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)AND(((vt1.c2) NOTNULL))))OR((('T	') BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY ((((vt1.c0)AND(((vt1.c2) NOTNULL))))OR((('T	') BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)AND(((vt1.c2) NOTNULL))))OR((('T	') BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY ((((vt1.c0)AND(((vt1.c2) NOTNULL))))OR((('T	') BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0)&(vt0.c0))) NOTNULL)) ORDER BY (- (((((vt0.c0)AND(vt0.c0)))AND('26661911')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (- (((((vt0.c0)AND(vt0.c0)))AND('26661911')))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)&(vt0.c0))) NOTNULL)) ORDER BY (- (((((vt0.c0)AND(vt0.c0)))AND('26661911')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (- (((((vt0.c0)AND(vt0.c0)))AND('26661911')))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)&(vt0.c0))) NOTNULL)) ORDER BY (- (((((vt0.c0)AND(vt0.c0)))AND('26661911')))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((~ (t0.c48)))AND(((((t0.c48)OR(t0.c51)))OR(t0.c48)))))OR(t0.c48 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c48)))AND(((((t0.c48)OR(t0.c51)))OR(t0.c48)))))OR(t0.c48 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((~ (t0.c48)))AND(((((t0.c48)OR(t0.c51)))OR(t0.c48)))))OR(t0.c48 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c48)))AND(((((t0.c48)OR(t0.c51)))OR(t0.c48)))))OR(t0.c48 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((~ (t0.c48)))AND(((((t0.c48)OR(t0.c51)))OR(t0.c48)))))OR(t0.c48 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (ROUND(t0.c48, vt1.c2) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((ROUND(t0.c48, vt1.c2) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (ROUND(t0.c48, vt1.c2) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((ROUND(t0.c48, vt1.c2) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (ROUND(t0.c48, vt1.c2) COLLATE RTRIM);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((((((((((t0.c51)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c1) NOT NULL))))AND((((t0.c51)) BETWEEN ((vt1.c2)) AND ((t0.c48))))))OR(x'd9d3')))OR(vt1.c2 COLLATE NOCASE))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (((t0.c48) BETWEEN (vt1.c2) AND (t0.c51))) AND (((x'') NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c51)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c1) NOT NULL))))AND((((t0.c51)) BETWEEN ((vt1.c2)) AND ((t0.c48))))))OR(x'd9d3')))OR(vt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (((t0.c48) BETWEEN (vt1.c2) AND (t0.c51))) AND (((x'') NOTNULL))));
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((((((((((t0.c51)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c1) NOT NULL))))AND((((t0.c51)) BETWEEN ((vt1.c2)) AND ((t0.c48))))))OR(x'd9d3')))OR(vt1.c2 COLLATE NOCASE))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (((t0.c48) BETWEEN (vt1.c2) AND (t0.c51))) AND (((x'') NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c51)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c1) NOT NULL))))AND((((t0.c51)) BETWEEN ((vt1.c2)) AND ((t0.c48))))))OR(x'd9d3')))OR(vt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (((t0.c48) BETWEEN (vt1.c2) AND (t0.c51))) AND (((x'') NOTNULL))));
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((((((((((t0.c51)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c1) NOT NULL))))AND((((t0.c51)) BETWEEN ((vt1.c2)) AND ((t0.c48))))))OR(x'd9d3')))OR(vt1.c2 COLLATE NOCASE))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (((t0.c48) BETWEEN (vt1.c2) AND (t0.c51))) AND (((x'') NOTNULL)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c51))<=((t0.c48))))<<(CASE t0.c51  WHEN t0.c51 THEN vt0.c0 WHEN t0.c51 THEN t0.c51 WHEN t0.c51 THEN vt0.c0 END))) ORDER BY (CASE t0.c51  WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END IN (((t0.c48) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, NULL ASC, ((((t0.c51) NOT BETWEEN (vt0.c0) AND (t0.c51)))+(vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c51))<=((t0.c48))))<<(CASE t0.c51  WHEN t0.c51 THEN vt0.c0 WHEN t0.c51 THEN t0.c51 WHEN t0.c51 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY (CASE t0.c51  WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END IN (((t0.c48) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, NULL ASC, ((((t0.c51) NOT BETWEEN (vt0.c0) AND (t0.c51)))+(vt0.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c51))<=((t0.c48))))<<(CASE t0.c51  WHEN t0.c51 THEN vt0.c0 WHEN t0.c51 THEN t0.c51 WHEN t0.c51 THEN vt0.c0 END))) ORDER BY (CASE t0.c51  WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END IN (((t0.c48) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, NULL ASC, ((((t0.c51) NOT BETWEEN (vt0.c0) AND (t0.c51)))+(vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c51))<=((t0.c48))))<<(CASE t0.c51  WHEN t0.c51 THEN vt0.c0 WHEN t0.c51 THEN t0.c51 WHEN t0.c51 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY (CASE t0.c51  WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END IN (((t0.c48) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, NULL ASC, ((((t0.c51) NOT BETWEEN (vt0.c0) AND (t0.c51)))+(vt0.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c51))<=((t0.c48))))<<(CASE t0.c51  WHEN t0.c51 THEN vt0.c0 WHEN t0.c51 THEN t0.c51 WHEN t0.c51 THEN vt0.c0 END))) ORDER BY (CASE t0.c51  WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END IN (((t0.c48) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, NULL ASC, ((((t0.c51) NOT BETWEEN (vt0.c0) AND (t0.c51)))+(vt0.c0 COLLATE BINARY)) ASC;
SELECT * FROM t0, vt1 CROSS JOIN vt0 ON ((CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN t0.c48 WHEN t0.c51 THEN vt1.c0 ELSE vt0.c0 END) NOTNULL) WHERE (((((((vt1.c0)OR(t0.c48)))AND(t0.c51))) BETWEEN (CASE WHEN '+lᕭ\r' THEN vt1.c0 WHEN vt1.c2 THEN t0.c51 WHEN 0.4236943031964484 THEN vt0.c0 ELSE vt0.c0 END) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(t0.c48)))AND(t0.c51))) BETWEEN (CASE WHEN '+lᕭ\r' THEN vt1.c0 WHEN vt1.c2 THEN t0.c51 WHEN 0.4236943031964484 THEN vt0.c0 ELSE vt0.c0 END) AND (NULL))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON ((CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN t0.c48 WHEN t0.c51 THEN vt1.c0 ELSE vt0.c0 END) NOTNULL));
SELECT * FROM t0, vt1 CROSS JOIN vt0 ON ((CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN t0.c48 WHEN t0.c51 THEN vt1.c0 ELSE vt0.c0 END) NOTNULL) WHERE (((((((vt1.c0)OR(t0.c48)))AND(t0.c51))) BETWEEN (CASE WHEN '+lᕭ\r' THEN vt1.c0 WHEN vt1.c2 THEN t0.c51 WHEN 0.4236943031964484 THEN vt0.c0 ELSE vt0.c0 END) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(t0.c48)))AND(t0.c51))) BETWEEN (CASE WHEN '+lᕭ\r' THEN vt1.c0 WHEN vt1.c2 THEN t0.c51 WHEN 0.4236943031964484 THEN vt0.c0 ELSE vt0.c0 END) AND (NULL))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON ((CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN t0.c48 WHEN t0.c51 THEN vt1.c0 ELSE vt0.c0 END) NOTNULL));
SELECT * FROM t0, vt1 CROSS JOIN vt0 ON ((CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN t0.c48 WHEN t0.c51 THEN vt1.c0 ELSE vt0.c0 END) NOTNULL) WHERE (((((((vt1.c0)OR(t0.c48)))AND(t0.c51))) BETWEEN (CASE WHEN '+lᕭ\r' THEN vt1.c0 WHEN vt1.c2 THEN t0.c51 WHEN 0.4236943031964484 THEN vt0.c0 ELSE vt0.c0 END) AND (NULL)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((((CASE vt1.c2  WHEN x'' THEN t0.c51 END)AND((((vt1.c1)) BETWEEN ((0.826319481069281)) AND ((vt1.c2))))))OR(CASE vt1.c0  WHEN '' THEN t0.c51 END)) WHERE (((CAST(t0.c48 AS NUMERIC)) NOT BETWEEN ((((vt1.c2))=((vt1.c0)))) AND (((((((((t0.c48)AND(t0.c51)))OR(t0.c48)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c48 AS NUMERIC)) NOT BETWEEN ((((vt1.c2))==((vt1.c0)))) AND (((((((((t0.c48)AND(t0.c51)))OR(t0.c48)))OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((((CASE vt1.c2  WHEN x'' THEN t0.c51 END)AND((((vt1.c1)) BETWEEN ((0.826319481069281)) AND ((vt1.c2))))))OR(CASE vt1.c0  WHEN '' THEN t0.c51 END)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((((CASE vt1.c2  WHEN x'' THEN t0.c51 END)AND((((vt1.c1)) BETWEEN ((0.826319481069281)) AND ((vt1.c2))))))OR(CASE vt1.c0  WHEN '' THEN t0.c51 END)) WHERE (((CAST(t0.c48 AS NUMERIC)) NOT BETWEEN ((((vt1.c2))=((vt1.c0)))) AND (((((((((t0.c48)AND(t0.c51)))OR(t0.c48)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c48 AS NUMERIC)) NOT BETWEEN ((((vt1.c2))==((vt1.c0)))) AND (((((((((t0.c48)AND(t0.c51)))OR(t0.c48)))OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((((CASE vt1.c2  WHEN x'' THEN t0.c51 END)AND((((vt1.c1)) BETWEEN ((0.826319481069281)) AND ((vt1.c2))))))OR(CASE vt1.c0  WHEN '' THEN t0.c51 END)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((((CASE vt1.c2  WHEN x'' THEN t0.c51 END)AND((((vt1.c1)) BETWEEN ((0.826319481069281)) AND ((vt1.c2))))))OR(CASE vt1.c0  WHEN '' THEN t0.c51 END)) WHERE (((CAST(t0.c48 AS NUMERIC)) NOT BETWEEN ((((vt1.c2))=((vt1.c0)))) AND (((((((((t0.c48)AND(t0.c51)))OR(t0.c48)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE WHEN ((t0.c51)>=(vt1.c2)) THEN TRIM(t0.c48, t0.c51) ELSE (NOT (t0.c48)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c51)>=(vt1.c2)) THEN TRIM(t0.c48, t0.c51) ELSE (NOT (t0.c48)) END) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE WHEN ((t0.c51)>=(vt1.c2)) THEN TRIM(t0.c48, t0.c51) ELSE (NOT (t0.c48)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c51)>=(vt1.c2)) THEN TRIM(t0.c48, t0.c51) ELSE (NOT (t0.c48)) END) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE WHEN ((t0.c51)>=(vt1.c2)) THEN TRIM(t0.c48, t0.c51) ELSE (NOT (t0.c48)) END);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((+ (((x'')<>(vt0.c0))))) ORDER BY (+ (t0.c51)) COLLATE RTRIM, '1177425121';
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'')!=(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (+ (t0.c51)) COLLATE RTRIM, '1177425121');
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((+ (((x'')<>(vt0.c0))))) ORDER BY (+ (t0.c51)) COLLATE RTRIM, '1177425121';
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'')!=(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (+ (t0.c51)) COLLATE RTRIM, '1177425121');
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((+ (((x'')<>(vt0.c0))))) ORDER BY (+ (t0.c51)) COLLATE RTRIM, '1177425121';
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0) ISNULL))IS(((-1637584764)OR(t0.c51)))) WHERE (NULL) ORDER BY CAST(((vt0.c0)|(t0.c51)) AS TEXT) ASC  NULLS FIRST, CASE ((((((((t0.c48)AND(t0.c51)))AND(vt0.c0)))AND(t0.c51)))AND(vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN (((t0.c51)) NOT BETWEEN ((t0.c48)) AND ((vt0.c0))) END ASC, ((((((vt0.c0)<=(t0.c48)))OR(LIKELY(vt0.c0))))AND(((t0.c51) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0) ISNULL))IS(((-1637584764)OR(t0.c51)))) ORDER BY CAST(((vt0.c0)|(t0.c51)) AS TEXT) ASC  NULLS FIRST, CASE ((((((((t0.c48)AND(t0.c51)))AND(vt0.c0)))AND(t0.c51)))AND(vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN (((t0.c51)) NOT BETWEEN ((t0.c48)) AND ((vt0.c0))) END ASC, ((((((vt0.c0)<=(t0.c48)))OR(LIKELY(vt0.c0))))AND(((t0.c51) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0) ISNULL))IS(((-1637584764)OR(t0.c51)))) WHERE (NULL) ORDER BY CAST(((vt0.c0)|(t0.c51)) AS TEXT) ASC  NULLS FIRST, CASE ((((((((t0.c48)AND(t0.c51)))AND(vt0.c0)))AND(t0.c51)))AND(vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN (((t0.c51)) NOT BETWEEN ((t0.c48)) AND ((vt0.c0))) END ASC, ((((((vt0.c0)<=(t0.c48)))OR(LIKELY(vt0.c0))))AND(((t0.c51) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0) ISNULL))IS(((-1637584764)OR(t0.c51)))) ORDER BY CAST(((vt0.c0)|(t0.c51)) AS TEXT) ASC  NULLS FIRST, CASE ((((((((t0.c48)AND(t0.c51)))AND(vt0.c0)))AND(t0.c51)))AND(vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN (((t0.c51)) NOT BETWEEN ((t0.c48)) AND ((vt0.c0))) END ASC, ((((((vt0.c0)<=(t0.c48)))OR(LIKELY(vt0.c0))))AND(((t0.c51) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0) ISNULL))IS(((-1637584764)OR(t0.c51)))) WHERE (NULL) ORDER BY CAST(((vt0.c0)|(t0.c51)) AS TEXT) ASC  NULLS FIRST, CASE ((((((((t0.c48)AND(t0.c51)))AND(vt0.c0)))AND(t0.c51)))AND(vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN (((t0.c51)) NOT BETWEEN ((t0.c48)) AND ((vt0.c0))) END ASC, ((((((vt0.c0)<=(t0.c48)))OR(LIKELY(vt0.c0))))AND(((t0.c51) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT ALL * FROM vt1 WHERE (QUOTE(((vt1.c1)/(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((vt1.c1)/(vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (QUOTE(((vt1.c1)/(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((vt1.c1)/(vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (QUOTE(((vt1.c1)/(vt1.c1))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS FALSE) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS FALSE) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((('qo#頵E?', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, vt1.c1)) AND ((vt0.c0, vt1.c2, vt1.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((('qo#頵E?', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, vt1.c1)) AND ((vt0.c0, vt1.c2, vt1.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((('qo#頵E?', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, vt1.c1)) AND ((vt0.c0, vt1.c2, vt1.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((('qo#頵E?', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, vt1.c1)) AND ((vt0.c0, vt1.c2, vt1.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((('qo#頵E?', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, vt1.c1)) AND ((vt0.c0, vt1.c2, vt1.c1))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((((((t0.c51)OR(((((vt1.c0)OR(t0.c51)))AND(vt1.c1)))))OR(((vt1.c0)AND(t0.c48)))))AND((vt1.c0 IN ()))))OR(((x'') NOT BETWEEN (t0.c48) AND (t0.c51)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c51)OR(((((vt1.c0)OR(t0.c51)))AND(vt1.c1)))))OR(((vt1.c0)AND(t0.c48)))))AND((vt1.c0 IN ()))))OR(((x'') NOT BETWEEN (t0.c48) AND (t0.c51))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((((((t0.c51)OR(((((vt1.c0)OR(t0.c51)))AND(vt1.c1)))))OR(((vt1.c0)AND(t0.c48)))))AND((vt1.c0 IN ()))))OR(((x'') NOT BETWEEN (t0.c48) AND (t0.c51)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c51)OR(((((vt1.c0)OR(t0.c51)))AND(vt1.c1)))))OR(((vt1.c0)AND(t0.c48)))))AND((vt1.c0 IN ()))))OR(((x'') NOT BETWEEN (t0.c48) AND (t0.c51))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((((((t0.c51)OR(((((vt1.c0)OR(t0.c51)))AND(vt1.c1)))))OR(((vt1.c0)AND(t0.c48)))))AND((vt1.c0 IN ()))))OR(((x'') NOT BETWEEN (t0.c48) AND (t0.c51)))));
SELECT COUNT(*) FROM vt0 WHERE ('a&sxHKc>') ORDER BY LOWER((vt0.c0 IN (vt0.c0))) DESC, (((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((DATE(vt0.c0, vt0.c0, vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (('a&sxHKc>') IS TRUE)  as count FROM vt0 ORDER BY LOWER((vt0.c0 IN (vt0.c0))) DESC, (((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((DATE(vt0.c0, vt0.c0, vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ('a&sxHKc>') ORDER BY LOWER((vt0.c0 IN (vt0.c0))) DESC, (((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((DATE(vt0.c0, vt0.c0, vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (('a&sxHKc>') IS TRUE)  as count FROM vt0 ORDER BY LOWER((vt0.c0 IN (vt0.c0))) DESC, (((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((DATE(vt0.c0, vt0.c0, vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ('a&sxHKc>') ORDER BY LOWER((vt0.c0 IN (vt0.c0))) DESC, (((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((DATE(vt0.c0, vt0.c0, vt0.c0)))) ASC;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c51)) NOT BETWEEN ((((vt1.c0)>(vt1.c2)))) AND ((((t0.c51)+(t0.c48)))))) ORDER BY (((((t0.c51)AND(vt1.c2)))OR(t0.c48)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c51)) NOT BETWEEN ((((vt1.c0)>(vt1.c2)))) AND ((((t0.c51)+(t0.c48)))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((t0.c51)AND(vt1.c2)))OR(t0.c48)) IN ()) ASC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c51)) NOT BETWEEN ((((vt1.c0)>(vt1.c2)))) AND ((((t0.c51)+(t0.c48)))))) ORDER BY (((((t0.c51)AND(vt1.c2)))OR(t0.c48)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c51)) NOT BETWEEN ((((vt1.c0)>(vt1.c2)))) AND ((((t0.c51)+(t0.c48)))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((t0.c51)AND(vt1.c2)))OR(t0.c48)) IN ()) ASC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c51)) NOT BETWEEN ((((vt1.c0)>(vt1.c2)))) AND ((((t0.c51)+(t0.c48)))))) ORDER BY (((((t0.c51)AND(vt1.c2)))OR(t0.c48)) IN ()) ASC;
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c1)))/(((((((((vt1.c0)AND(vt1.c2)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c1)))/(((((((((vt1.c0)AND(vt1.c2)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c1)))/(((((((((vt1.c0)AND(vt1.c2)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c1)))/(((((((((vt1.c0)AND(vt1.c2)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c1)))/(((((((((vt1.c0)AND(vt1.c2)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c2)))));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON ((((vt1.c1) IS TRUE)) IS FALSE) INNER JOIN vt0 ON ABS((vt1.c0 IN ())) WHERE ((((vt1.c0 IN (vt1.c1, t0.c48))) BETWEEN (x'') AND (((vt1.c2) IS TRUE)))) ORDER BY ((((NULL)OR(((((((((vt1.c1)AND(vt1.c2)))OR(t0.c48)))AND(vt1.c1)))OR(vt1.c2)))))AND((NOT (NULL)))) DESC, ((t0.c48 COLLATE BINARY) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c1, t0.c48))) BETWEEN (x'') AND (((vt1.c2) IS TRUE)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((vt1.c1) IS TRUE)) IS FALSE) INNER JOIN vt0 ON ABS((vt1.c0 IN ())) ORDER BY ((((NULL)OR(((((((((vt1.c1)AND(vt1.c2)))OR(t0.c48)))AND(vt1.c1)))OR(vt1.c2)))))AND((NOT (NULL)))) DESC, ((t0.c48 COLLATE BINARY) IS TRUE) DESC);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON ((((vt1.c1) IS TRUE)) IS FALSE) INNER JOIN vt0 ON ABS((vt1.c0 IN ())) WHERE ((((vt1.c0 IN (vt1.c1, t0.c48))) BETWEEN (x'') AND (((vt1.c2) IS TRUE)))) ORDER BY ((((NULL)OR(((((((((vt1.c1)AND(vt1.c2)))OR(t0.c48)))AND(vt1.c1)))OR(vt1.c2)))))AND((NOT (NULL)))) DESC, ((t0.c48 COLLATE BINARY) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c1, t0.c48))) BETWEEN (x'') AND (((vt1.c2) IS TRUE)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((vt1.c1) IS TRUE)) IS FALSE) INNER JOIN vt0 ON ABS((vt1.c0 IN ())) ORDER BY ((((NULL)OR(((((((((vt1.c1)AND(vt1.c2)))OR(t0.c48)))AND(vt1.c1)))OR(vt1.c2)))))AND((NOT (NULL)))) DESC, ((t0.c48 COLLATE BINARY) IS TRUE) DESC);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON ((((vt1.c1) IS TRUE)) IS FALSE) INNER JOIN vt0 ON ABS((vt1.c0 IN ())) WHERE ((((vt1.c0 IN (vt1.c1, t0.c48))) BETWEEN (x'') AND (((vt1.c2) IS TRUE)))) ORDER BY ((((NULL)OR(((((((((vt1.c1)AND(vt1.c2)))OR(t0.c48)))AND(vt1.c1)))OR(vt1.c2)))))AND((NOT (NULL)))) DESC, ((t0.c48 COLLATE BINARY) IS TRUE) DESC;
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((t0.c51, t0.c48, t0.c48)) BETWEEN ((((vt1.c2)>=(vt0.c0)), (('mj')-(t0.c48)), (NOT (t0.c51)))) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c51)), ((t0.c48)==(vt1.c0)), ']3')))) ORDER BY ((((vt0.c0)OR(t0.c51)))LIKE((+ (t0.c51))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c51, t0.c48, t0.c48)) BETWEEN ((((vt1.c2)>=(vt0.c0)), (('mj')-(t0.c48)), (NOT (t0.c51)))) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c51)), ((t0.c48)=(vt1.c0)), ']3')))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((vt0.c0)OR(t0.c51)))LIKE((+ (t0.c51))))  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((t0.c51, t0.c48, t0.c48)) BETWEEN ((((vt1.c2)>=(vt0.c0)), (('mj')-(t0.c48)), (NOT (t0.c51)))) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c51)), ((t0.c48)==(vt1.c0)), ']3')))) ORDER BY ((((vt0.c0)OR(t0.c51)))LIKE((+ (t0.c51))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c51, t0.c48, t0.c48)) BETWEEN ((((vt1.c2)>=(vt0.c0)), (('mj')-(t0.c48)), (NOT (t0.c51)))) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c51)), ((t0.c48)=(vt1.c0)), ']3')))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((vt0.c0)OR(t0.c51)))LIKE((+ (t0.c51))))  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((t0.c51, t0.c48, t0.c48)) BETWEEN ((((vt1.c2)>=(vt0.c0)), (('mj')-(t0.c48)), (NOT (t0.c51)))) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c51)), ((t0.c48)==(vt1.c0)), ']3')))) ORDER BY ((((vt0.c0)OR(t0.c51)))LIKE((+ (t0.c51))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0)AND(x'8e75')))AND(vt1.c2)))%(((vt1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(x'8e75')))AND(vt1.c2)))%(((vt1.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0)AND(x'8e75')))AND(vt1.c2)))%(((vt1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(x'8e75')))AND(vt1.c2)))%(((vt1.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0)AND(x'8e75')))AND(vt1.c2)))%(((vt1.c2) NOT NULL))));
SELECT COUNT(*) FROM t0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'');
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((NULL)) AND (((~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((NULL)) AND (((~ (vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((NULL)) AND (((~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((NULL)) AND (((~ (vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((NULL)) AND (((~ (vt0.c0))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON NULLIF(DISTINCT vt1.c1, vt1.c1) COLLATE BINARY LEFT OUTER JOIN t0 ON (((('EUn*') NOT BETWEEN (vt1.c1) AND (vt1.c2)))*(vt0.c0)) WHERE (vt1.c0) ORDER BY COALESCE(CASE WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c51 THEN vt0.c0 ELSE vt1.c0 END, (NOT (vt1.c1))) ASC  NULLS FIRST, 0.3529361574989962  NULLS FIRST, ((CAST(vt1.c0 AS REAL))*(x'cd8b'));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON NULLIF(DISTINCT vt1.c1, vt1.c1) COLLATE BINARY LEFT OUTER JOIN t0 ON (((('EUn*') NOT BETWEEN (vt1.c1) AND (vt1.c2)))*(vt0.c0)) ORDER BY COALESCE(CASE WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c51 THEN vt0.c0 ELSE vt1.c0 END, (NOT (vt1.c1))) ASC  NULLS FIRST, 0.3529361574989962  NULLS FIRST, ((CAST(vt1.c0 AS REAL))*(x'cd8b')));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON NULLIF(DISTINCT vt1.c1, vt1.c1) COLLATE BINARY LEFT OUTER JOIN t0 ON (((('EUn*') NOT BETWEEN (vt1.c1) AND (vt1.c2)))*(vt0.c0)) WHERE (vt1.c0) ORDER BY COALESCE(CASE WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c51 THEN vt0.c0 ELSE vt1.c0 END, (NOT (vt1.c1))) ASC  NULLS FIRST, 0.3529361574989962  NULLS FIRST, ((CAST(vt1.c0 AS REAL))*(x'cd8b'));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON NULLIF(DISTINCT vt1.c1, vt1.c1) COLLATE BINARY LEFT OUTER JOIN t0 ON (((('EUn*') NOT BETWEEN (vt1.c1) AND (vt1.c2)))*(vt0.c0)) ORDER BY COALESCE(CASE WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c51 THEN vt0.c0 ELSE vt1.c0 END, (NOT (vt1.c1))) ASC  NULLS FIRST, 0.3529361574989962  NULLS FIRST, ((CAST(vt1.c0 AS REAL))*(x'cd8b')));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON NULLIF(DISTINCT vt1.c1, vt1.c1) COLLATE BINARY LEFT OUTER JOIN t0 ON (((('EUn*') NOT BETWEEN (vt1.c1) AND (vt1.c2)))*(vt0.c0)) WHERE (vt1.c0) ORDER BY COALESCE(CASE WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c51 THEN vt0.c0 ELSE vt1.c0 END, (NOT (vt1.c1))) ASC  NULLS FIRST, 0.3529361574989962  NULLS FIRST, ((CAST(vt1.c0 AS REAL))*(x'cd8b'));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((t0.c48) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2))) AND ((((x'cc60')) NOT BETWEEN ((t0.c51)) AND ((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c48) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2))) AND ((((x'cc60')) NOT BETWEEN ((t0.c51)) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((t0.c48) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2))) AND ((((x'cc60')) NOT BETWEEN ((t0.c51)) AND ((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c48) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2))) AND ((((x'cc60')) NOT BETWEEN ((t0.c51)) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((t0.c48) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2))) AND ((((x'cc60')) NOT BETWEEN ((t0.c51)) AND ((vt1.c1))))));
SELECT * FROM t0, vt1 WHERE (((((((NULL)OR(t0.c48)))AND(t0.c51))) NOT BETWEEN (CAST(vt1.c2 AS NUMERIC)) AND (1970060655))) ORDER BY CAST(t0.c51 AS BLOB) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(t0.c48)))AND(t0.c51))) NOT BETWEEN (CAST(vt1.c2 AS NUMERIC)) AND (1970060655))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(t0.c51 AS BLOB) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (((((((NULL)OR(t0.c48)))AND(t0.c51))) NOT BETWEEN (CAST(vt1.c2 AS NUMERIC)) AND (1970060655))) ORDER BY CAST(t0.c51 AS BLOB) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(t0.c48)))AND(t0.c51))) NOT BETWEEN (CAST(vt1.c2 AS NUMERIC)) AND (1970060655))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(t0.c51 AS BLOB) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (((((((NULL)OR(t0.c48)))AND(t0.c51))) NOT BETWEEN (CAST(vt1.c2 AS NUMERIC)) AND (1970060655))) ORDER BY CAST(t0.c51 AS BLOB) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((((((((vt1.c2)AND(t0.c48)))AND(t0.c48)))AND(t0.c48)))OR(t0.c48)) IN ())) ORDER BY ((((((((1011852462)AND(((vt1.c1) BETWEEN (x'') AND (vt1.c1)))))OR(vt1.c0)))AND((~ (vt1.c0)))))AND((~ (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c2)AND(t0.c48)))AND(t0.c48)))AND(t0.c48)))OR(t0.c48)) IN ())) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((((1011852462)AND(((vt1.c1) BETWEEN (x'') AND (vt1.c1)))))OR(vt1.c0)))AND((~ (vt1.c0)))))AND((~ (vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((((((((vt1.c2)AND(t0.c48)))AND(t0.c48)))AND(t0.c48)))OR(t0.c48)) IN ())) ORDER BY ((((((((1011852462)AND(((vt1.c1) BETWEEN (x'') AND (vt1.c1)))))OR(vt1.c0)))AND((~ (vt1.c0)))))AND((~ (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c2)AND(t0.c48)))AND(t0.c48)))AND(t0.c48)))OR(t0.c48)) IN ())) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((((1011852462)AND(((vt1.c1) BETWEEN (x'') AND (vt1.c1)))))OR(vt1.c0)))AND((~ (vt1.c0)))))AND((~ (vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((((((((vt1.c2)AND(t0.c48)))AND(t0.c48)))AND(t0.c48)))OR(t0.c48)) IN ())) ORDER BY ((((((((1011852462)AND(((vt1.c1) BETWEEN (x'') AND (vt1.c1)))))OR(vt1.c0)))AND((~ (vt1.c0)))))AND((~ (vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (CAST((+ (vt1.c2)) AS BLOB)) ORDER BY CAST(((((((((vt1.c2)OR(vt0.c0)))OR(vt1.c2)))OR(vt1.c1)))AND(vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c2)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((((((((vt1.c2)OR(vt0.c0)))OR(vt1.c2)))OR(vt1.c1)))AND(vt0.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CAST((+ (vt1.c2)) AS BLOB)) ORDER BY CAST(((((((((vt1.c2)OR(vt0.c0)))OR(vt1.c2)))OR(vt1.c1)))AND(vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c2)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((((((((vt1.c2)OR(vt0.c0)))OR(vt1.c2)))OR(vt1.c1)))AND(vt0.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CAST((+ (vt1.c2)) AS BLOB)) ORDER BY CAST(((((((((vt1.c2)OR(vt0.c0)))OR(vt1.c2)))OR(vt1.c1)))AND(vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST((t0.c51 IN ()) AS TEXT)) ORDER BY (((((t0.c48)GLOB(t0.c51))))>=((((((t0.c51)AND(t0.c48)))OR(t0.c48)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c51 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (((((t0.c48)GLOB(t0.c51))))>=((((((t0.c51)AND(t0.c48)))OR(t0.c48)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST((t0.c51 IN ()) AS TEXT)) ORDER BY (((((t0.c48)GLOB(t0.c51))))>=((((((t0.c51)AND(t0.c48)))OR(t0.c48)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c51 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (((((t0.c48)GLOB(t0.c51))))>=((((((t0.c51)AND(t0.c48)))OR(t0.c48)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST((t0.c51 IN ()) AS TEXT)) ORDER BY (((((t0.c48)GLOB(t0.c51))))>=((((((t0.c51)AND(t0.c48)))OR(t0.c48)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON t0.c51 WHERE ('906126849');
SELECT SUM(count) FROM (SELECT (('906126849') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON t0.c51);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON t0.c51 WHERE ('906126849');
SELECT SUM(count) FROM (SELECT (('906126849') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON t0.c51);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON t0.c51 WHERE ('906126849');
SELECT ALL * FROM t0 WHERE (2138668849);
SELECT SUM(count) FROM (SELECT ((2138668849) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (2138668849);
SELECT SUM(count) FROM (SELECT ((2138668849) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (2138668849);
SELECT * FROM vt1, t0 INDEXED BY i70 WHERE ((((((x'')>(vt1.c0))))<(((~ (t0.c51)))))) ORDER BY CASE WHEN ((((t0.c51)AND(t0.c51)))OR(vt1.c2)) THEN vt1.c2 COLLATE NOCASE ELSE (t0.c48 IN ()) END, (vt1.c1 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((x'')>(vt1.c0))))<(((~ (t0.c51)))))) IS TRUE)  as count FROM vt1, t0 INDEXED BY i70 ORDER BY CASE WHEN ((((t0.c51)AND(t0.c51)))OR(vt1.c2)) THEN vt1.c2 COLLATE NOCASE ELSE (t0.c48 IN ()) END, (vt1.c1 IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1, t0 INDEXED BY i70 WHERE ((((((x'')>(vt1.c0))))<(((~ (t0.c51)))))) ORDER BY CASE WHEN ((((t0.c51)AND(t0.c51)))OR(vt1.c2)) THEN vt1.c2 COLLATE NOCASE ELSE (t0.c48 IN ()) END, (vt1.c1 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((x'')>(vt1.c0))))<(((~ (t0.c51)))))) IS TRUE)  as count FROM vt1, t0 INDEXED BY i70 ORDER BY CASE WHEN ((((t0.c51)AND(t0.c51)))OR(vt1.c2)) THEN vt1.c2 COLLATE NOCASE ELSE (t0.c48 IN ()) END, (vt1.c1 IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1, t0 INDEXED BY i70 WHERE ((((((x'')>(vt1.c0))))<(((~ (t0.c51)))))) ORDER BY CASE WHEN ((((t0.c51)AND(t0.c51)))OR(vt1.c2)) THEN vt1.c2 COLLATE NOCASE ELSE (t0.c48 IN ()) END, (vt1.c1 IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, t0 WHERE (MIN(json_array(t0.c48, x'11b0184c', vt1.c2, t0.c51), ((vt1.c0)||(0.8323302856368257))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(json_array(t0.c48, x'11b0184c', vt1.c2, t0.c51), ((vt1.c0)||(0.8323302856368257)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (MIN(json_array(t0.c48, x'11b0184c', vt1.c2, t0.c51), ((vt1.c0)||(0.8323302856368257))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(json_array(t0.c48, x'11b0184c', vt1.c2, t0.c51), ((vt1.c0)||(0.8323302856368257)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)/(vt1.c2)))+((((vt1.c1))<=((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)/(vt1.c2)))+((((vt1.c1))<=((vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)/(vt1.c2)))+((((vt1.c1))<=((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)/(vt1.c2)))+((((vt1.c1))<=((vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)/(vt1.c2)))+((((vt1.c1))<=((vt1.c1))))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (COALESCE(DISTINCT CAST(vt0.c0 AS REAL), (NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CAST(vt0.c0 AS REAL), (NOT (vt0.c0)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (COALESCE(DISTINCT CAST(vt0.c0 AS REAL), (NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CAST(vt0.c0 AS REAL), (NOT (vt0.c0)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (COALESCE(DISTINCT CAST(vt0.c0 AS REAL), (NOT (vt0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2))))>((vt1.c1 COLLATE NOCASE)))) ORDER BY ((((((((((vt1.c2)%(vt1.c2)))AND(COALESCE(DISTINCT vt1.c0, vt1.c1))))OR(UPPER(DISTINCT 0.496771032486635))))OR(((vt1.c2)<=(vt1.c2)))))OR((NOT (vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2))))>((vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c2)%(vt1.c2)))AND(COALESCE(DISTINCT vt1.c0, vt1.c1))))OR(UPPER(DISTINCT 0.496771032486635))))OR(((vt1.c2)<=(vt1.c2)))))OR((NOT (vt1.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2))))>((vt1.c1 COLLATE NOCASE)))) ORDER BY ((((((((((vt1.c2)%(vt1.c2)))AND(COALESCE(DISTINCT vt1.c0, vt1.c1))))OR(UPPER(DISTINCT 0.496771032486635))))OR(((vt1.c2)<=(vt1.c2)))))OR((NOT (vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2))))>((vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c2)%(vt1.c2)))AND(COALESCE(DISTINCT vt1.c0, vt1.c1))))OR(UPPER(DISTINCT 0.496771032486635))))OR(((vt1.c2)<=(vt1.c2)))))OR((NOT (vt1.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2))))>((vt1.c1 COLLATE NOCASE)))) ORDER BY ((((((((((vt1.c2)%(vt1.c2)))AND(COALESCE(DISTINCT vt1.c0, vt1.c1))))OR(UPPER(DISTINCT 0.496771032486635))))OR(((vt1.c2)<=(vt1.c2)))))OR((NOT (vt1.c1)))) DESC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)>(((vt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)>(((vt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)>(((vt0.c0)<(vt0.c0)))));
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(((vt0.c0) BETWEEN (vt1.c2) AND (t0.c48)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt1.c2) AND (t0.c48)) AS REAL)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(((vt0.c0) BETWEEN (vt1.c2) AND (t0.c48)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt1.c2) AND (t0.c48)) AS REAL)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(((vt0.c0) BETWEEN (vt1.c2) AND (t0.c48)) AS REAL));
SELECT ALL * FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM) BETWEEN (vt1.c1 COLLATE RTRIM) AND (((vt1.c2)-(vt1.c1))))) ORDER BY ((load_extension(vt1.c0))|((~ (vt1.c2)))) DESC, CAST(((vt1.c0)GLOB(vt1.c0)) AS REAL), (vt1.c0 IN ()) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE RTRIM) BETWEEN (vt1.c1 COLLATE RTRIM) AND (((vt1.c2)-(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((load_extension(vt1.c0))|((~ (vt1.c2)))) DESC, CAST(((vt1.c0)GLOB(vt1.c0)) AS REAL), (vt1.c0 IN ()) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM) BETWEEN (vt1.c1 COLLATE RTRIM) AND (((vt1.c2)-(vt1.c1))))) ORDER BY ((load_extension(vt1.c0))|((~ (vt1.c2)))) DESC, CAST(((vt1.c0)GLOB(vt1.c0)) AS REAL), (vt1.c0 IN ()) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE RTRIM) BETWEEN (vt1.c1 COLLATE RTRIM) AND (((vt1.c2)-(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((load_extension(vt1.c0))|((~ (vt1.c2)))) DESC, CAST(((vt1.c0)GLOB(vt1.c0)) AS REAL), (vt1.c0 IN ()) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT * FROM t0, vt0, vt1 WHERE ((IFNULL(DISTINCT vt0.c0, vt1.c2) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND ('983089063'))))) ORDER BY ((vt1.c1)|(0.933533370476505)) COLLATE RTRIM  NULLS FIRST, ((((vt0.c0, vt0.c0, t0.c48))<((t0.c51, vt1.c1, t0.c48))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((IFNULL(DISTINCT vt0.c0, vt1.c2) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND ('983089063'))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((vt1.c1)|(0.933533370476505)) COLLATE RTRIM  NULLS FIRST, ((((vt0.c0, vt0.c0, t0.c48))<((t0.c51, vt1.c1, t0.c48))) IN ()) DESC  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE ((IFNULL(DISTINCT vt0.c0, vt1.c2) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND ('983089063'))))) ORDER BY ((vt1.c1)|(0.933533370476505)) COLLATE RTRIM  NULLS FIRST, ((((vt0.c0, vt0.c0, t0.c48))<((t0.c51, vt1.c1, t0.c48))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((IFNULL(DISTINCT vt0.c0, vt1.c2) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND ('983089063'))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((vt1.c1)|(0.933533370476505)) COLLATE RTRIM  NULLS FIRST, ((((vt0.c0, vt0.c0, t0.c48))<((t0.c51, vt1.c1, t0.c48))) IN ()) DESC  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE ((IFNULL(DISTINCT vt0.c0, vt1.c2) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND ('983089063'))))) ORDER BY ((vt1.c1)|(0.933533370476505)) COLLATE RTRIM  NULLS FIRST, ((((vt0.c0, vt0.c0, t0.c48))<((t0.c51, vt1.c1, t0.c48))) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(json_quote(vt1.c1) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(json_quote(vt1.c1) AS TEXT) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(json_quote(vt1.c1) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(json_quote(vt1.c1) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS INTEGER))OR('417643872')))AND(((vt0.c0)OR(vt0.c0)))))OR(0.6117832031670591)))OR((vt0.c0 IN ())))) ORDER BY ((((vt0.c0)>(vt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS INTEGER))OR('417643872')))AND(((vt0.c0)OR(vt0.c0)))))OR(0.6117832031670591)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS INTEGER))OR('417643872')))AND(((vt0.c0)OR(vt0.c0)))))OR(0.6117832031670591)))OR((vt0.c0 IN ())))) ORDER BY ((((vt0.c0)>(vt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS INTEGER))OR('417643872')))AND(((vt0.c0)OR(vt0.c0)))))OR(0.6117832031670591)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS INTEGER))OR('417643872')))AND(((vt0.c0)OR(vt0.c0)))))OR(0.6117832031670591)))OR((vt0.c0 IN ())))) ORDER BY ((((vt0.c0)>(vt0.c0))) IS FALSE) ASC;
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((vt0.c0)-(vt1.c2)))%(json_patch(NULL, t0.c48))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(vt1.c2)))%(json_patch(NULL, t0.c48)))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((vt0.c0)-(vt1.c2)))%(json_patch(NULL, t0.c48))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(vt1.c2)))%(json_patch(NULL, t0.c48)))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((vt0.c0)-(vt1.c2)))%(json_patch(NULL, t0.c48))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((NULL)>(x''))) ORDER BY ((t0.c51) BETWEEN ('367596389') AND (t0.c48)) COLLATE RTRIM ASC  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)+(t0.c51)))) AND ((((t0.c48)IS NOT('鄯6㑶')))))  NULLS LAST, ((((vt0.c0)|(vt0.c0)))%(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)>(x''))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c51) BETWEEN ('367596389') AND (t0.c48)) COLLATE RTRIM ASC  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)+(t0.c51)))) AND ((((t0.c48)IS NOT('鄯6㑶')))))  NULLS LAST, ((((vt0.c0)|(vt0.c0)))%(NULL))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((NULL)>(x''))) ORDER BY ((t0.c51) BETWEEN ('367596389') AND (t0.c48)) COLLATE RTRIM ASC  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)+(t0.c51)))) AND ((((t0.c48)IS NOT('鄯6㑶')))))  NULLS LAST, ((((vt0.c0)|(vt0.c0)))%(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)>(x''))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c51) BETWEEN ('367596389') AND (t0.c48)) COLLATE RTRIM ASC  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)+(t0.c51)))) AND ((((t0.c48)IS NOT('鄯6㑶')))))  NULLS LAST, ((((vt0.c0)|(vt0.c0)))%(NULL))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((NULL)>(x''))) ORDER BY ((t0.c51) BETWEEN ('367596389') AND (t0.c48)) COLLATE RTRIM ASC  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)+(t0.c51)))) AND ((((t0.c48)IS NOT('鄯6㑶')))))  NULLS LAST, ((((vt0.c0)|(vt0.c0)))%(NULL))  NULLS FIRST;
SELECT * FROM vt1, t0, vt0 WHERE (CASE vt0.c0  WHEN ((vt1.c0) NOT BETWEEN (t0.c48) AND (t0.c51)) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN t0.c51 THEN x'90ce' END THEN ((('䓏6h訪4c]', vt1.c1, t0.c51))<=((t0.c48, vt1.c1, vt1.c0))) WHEN ((vt1.c2) NOTNULL) THEN ((vt1.c0)>(vt1.c2)) WHEN vt1.c0 THEN vt1.c0 COLLATE RTRIM WHEN t0.c48 COLLATE NOCASE THEN ((0x7dd149b1)||(t0.c51)) ELSE ((((t0.c51)OR(vt1.c1)))OR(t0.c51)) END) ORDER BY '365124768'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((vt1.c0) NOT BETWEEN (t0.c48) AND (t0.c51)) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN t0.c51 THEN x'90ce' END THEN ((('䓏6h訪4c]', vt1.c1, t0.c51))<=((t0.c48, vt1.c1, vt1.c0))) WHEN ((vt1.c2) NOTNULL) THEN ((vt1.c0)>(vt1.c2)) WHEN vt1.c0 THEN vt1.c0 COLLATE RTRIM WHEN t0.c48 COLLATE NOCASE THEN ((0x7dd149b1)||(t0.c51)) ELSE ((((t0.c51)OR(vt1.c1)))OR(t0.c51)) END) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY '365124768'  NULLS LAST);
SELECT * FROM vt1, t0, vt0 WHERE (CASE vt0.c0  WHEN ((vt1.c0) NOT BETWEEN (t0.c48) AND (t0.c51)) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN t0.c51 THEN x'90ce' END THEN ((('䓏6h訪4c]', vt1.c1, t0.c51))<=((t0.c48, vt1.c1, vt1.c0))) WHEN ((vt1.c2) NOTNULL) THEN ((vt1.c0)>(vt1.c2)) WHEN vt1.c0 THEN vt1.c0 COLLATE RTRIM WHEN t0.c48 COLLATE NOCASE THEN ((0x7dd149b1)||(t0.c51)) ELSE ((((t0.c51)OR(vt1.c1)))OR(t0.c51)) END) ORDER BY '365124768'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((vt1.c0) NOT BETWEEN (t0.c48) AND (t0.c51)) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN t0.c51 THEN x'90ce' END THEN ((('䓏6h訪4c]', vt1.c1, t0.c51))<=((t0.c48, vt1.c1, vt1.c0))) WHEN ((vt1.c2) NOTNULL) THEN ((vt1.c0)>(vt1.c2)) WHEN vt1.c0 THEN vt1.c0 COLLATE RTRIM WHEN t0.c48 COLLATE NOCASE THEN ((0x7dd149b1)||(t0.c51)) ELSE ((((t0.c51)OR(vt1.c1)))OR(t0.c51)) END) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY '365124768'  NULLS LAST);
SELECT * FROM vt1, t0, vt0 WHERE (CASE vt0.c0  WHEN ((vt1.c0) NOT BETWEEN (t0.c48) AND (t0.c51)) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN t0.c51 THEN x'90ce' END THEN ((('䓏6h訪4c]', vt1.c1, t0.c51))<=((t0.c48, vt1.c1, vt1.c0))) WHEN ((vt1.c2) NOTNULL) THEN ((vt1.c0)>(vt1.c2)) WHEN vt1.c0 THEN vt1.c0 COLLATE RTRIM WHEN t0.c48 COLLATE NOCASE THEN ((0x7dd149b1)||(t0.c51)) ELSE ((((t0.c51)OR(vt1.c1)))OR(t0.c51)) END) ORDER BY '365124768'  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)LIKE(vt0.c0)))))AND(((vt0.c0)||(vt0.c0))))) ORDER BY ((LIKE(vt0.c0, vt0.c0)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)+(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)LIKE(vt0.c0)))))AND(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKE(vt0.c0, vt0.c0)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)+(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)LIKE(vt0.c0)))))AND(((vt0.c0)||(vt0.c0))))) ORDER BY ((LIKE(vt0.c0, vt0.c0)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)+(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)LIKE(vt0.c0)))))AND(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKE(vt0.c0, vt0.c0)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)+(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)LIKE(vt0.c0)))))AND(((vt0.c0)||(vt0.c0))))) ORDER BY ((LIKE(vt0.c0, vt0.c0)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)+(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (IFNULL(DISTINCT CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END, (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END, (+ (vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (IFNULL(DISTINCT CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END, (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END, (+ (vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (IFNULL(DISTINCT CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END, (+ (vt0.c0))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((TYPEOF(DISTINCT vt1.c1))>(CASE vt0.c0  WHEN vt1.c2 THEN vt1.c1 END)) WHERE ((((vt1.c1)) NOT BETWEEN ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) AND (((((vt1.c2))<=((vt1.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) NOT BETWEEN ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) AND (((((vt1.c2))<=((vt1.c1))))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((TYPEOF(DISTINCT vt1.c1))>(CASE vt0.c0  WHEN vt1.c2 THEN vt1.c1 END)));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((TYPEOF(DISTINCT vt1.c1))>(CASE vt0.c0  WHEN vt1.c2 THEN vt1.c1 END)) WHERE ((((vt1.c1)) NOT BETWEEN ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) AND (((((vt1.c2))<=((vt1.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) NOT BETWEEN ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) AND (((((vt1.c2))<=((vt1.c1))))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((TYPEOF(DISTINCT vt1.c1))>(CASE vt0.c0  WHEN vt1.c2 THEN vt1.c1 END)));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((TYPEOF(DISTINCT vt1.c1))>(CASE vt0.c0  WHEN vt1.c2 THEN vt1.c1 END)) WHERE ((((vt1.c1)) NOT BETWEEN ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) AND (((((vt1.c2))<=((vt1.c1)))))));
SELECT COUNT(*) FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(t0.c51));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(t0.c51)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(t0.c51));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(t0.c51)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(t0.c51));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51))) NOT BETWEEN (CAST(t0.c48 AS INTEGER)) AND (COALESCE(t0.c48, t0.c48, t0.c51, NULL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51))) NOT BETWEEN (CAST(t0.c48 AS INTEGER)) AND (COALESCE(t0.c48, t0.c48, t0.c51, NULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51))) NOT BETWEEN (CAST(t0.c48 AS INTEGER)) AND (COALESCE(t0.c48, t0.c48, t0.c51, NULL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51))) NOT BETWEEN (CAST(t0.c48 AS INTEGER)) AND (COALESCE(t0.c48, t0.c48, t0.c51, NULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c51) NOT BETWEEN (t0.c48) AND (t0.c51))) NOT BETWEEN (CAST(t0.c48 AS INTEGER)) AND (COALESCE(t0.c48, t0.c48, t0.c51, NULL))));
SELECT ALL * FROM t0, vt0, vt1 WHERE (((t0.c51)||(vt0.c0)) COLLATE BINARY) ORDER BY ((((((((((t0.c51)OR(vt0.c0)))OR(t0.c48)))AND(vt1.c1)))OR(t0.c48))) IS TRUE), 3.63884871E8;
SELECT SUM(count) FROM (SELECT ((((t0.c51)||(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((((((((t0.c51)OR(vt0.c0)))OR(t0.c48)))AND(vt1.c1)))OR(t0.c48))) IS TRUE), 3.63884871E8);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((t0.c51)||(vt0.c0)) COLLATE BINARY) ORDER BY ((((((((((t0.c51)OR(vt0.c0)))OR(t0.c48)))AND(vt1.c1)))OR(t0.c48))) IS TRUE), 3.63884871E8;
SELECT SUM(count) FROM (SELECT ((((t0.c51)||(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((((((((t0.c51)OR(vt0.c0)))OR(t0.c48)))AND(vt1.c1)))OR(t0.c48))) IS TRUE), 3.63884871E8);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((t0.c51)||(vt0.c0)) COLLATE BINARY) ORDER BY ((((((((((t0.c51)OR(vt0.c0)))OR(t0.c48)))AND(vt1.c1)))OR(t0.c48))) IS TRUE), 3.63884871E8;
SELECT ALL COUNT(*) FROM vt0 WHERE (load_extension(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ORDER BY (~ (((vt0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) NOTNULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (load_extension(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ORDER BY (~ (((vt0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) NOTNULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE WHEN vt1.c0 THEN t0.c48 ELSE vt1.c1 END COLLATE BINARY COLLATE RTRIM LEFT OUTER JOIN t0 ON (((vt1.c0))>=(((((t0.c51))<((t0.c48)))))) WHERE (CASE CAST(t0.c48 AS TEXT)  WHEN CASE vt1.c0  WHEN t0.c51 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c1 ELSE vt0.c0 END THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(t0.c51)))OR(vt1.c1)))AND(vt1.c2)))OR(vt0.c0)))OR(vt1.c1)) WHEN (vt1.c0 IN (t0.c51, t0.c51)) THEN ((((((((t0.c51)OR(NULL)))AND(t0.c48)))OR(vt1.c0)))AND(vt1.c2)) WHEN ((t0.c51) IS TRUE) THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END ELSE '9&' END) ORDER BY ((((((((t0.c48)AND(vt0.c0)))OR(t0.c48)))AND(vt1.c2)))AND(vt1.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c48 AS TEXT)  WHEN CASE vt1.c0  WHEN t0.c51 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c1 ELSE vt0.c0 END THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(t0.c51)))OR(vt1.c1)))AND(vt1.c2)))OR(vt0.c0)))OR(vt1.c1)) WHEN (vt1.c0 IN (t0.c51, t0.c51)) THEN ((((((((t0.c51)OR(NULL)))AND(t0.c48)))OR(vt1.c0)))AND(vt1.c2)) WHEN ((t0.c51) IS TRUE) THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END ELSE '9&' END) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE WHEN vt1.c0 THEN t0.c48 ELSE vt1.c1 END COLLATE BINARY COLLATE RTRIM LEFT OUTER JOIN t0 ON (((vt1.c0))>=(((((t0.c51))<((t0.c48)))))) ORDER BY ((((((((t0.c48)AND(vt0.c0)))OR(t0.c48)))AND(vt1.c2)))AND(vt1.c1)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE WHEN vt1.c0 THEN t0.c48 ELSE vt1.c1 END COLLATE BINARY COLLATE RTRIM LEFT OUTER JOIN t0 ON (((vt1.c0))>=(((((t0.c51))<((t0.c48)))))) WHERE (CASE CAST(t0.c48 AS TEXT)  WHEN CASE vt1.c0  WHEN t0.c51 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c1 ELSE vt0.c0 END THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(t0.c51)))OR(vt1.c1)))AND(vt1.c2)))OR(vt0.c0)))OR(vt1.c1)) WHEN (vt1.c0 IN (t0.c51, t0.c51)) THEN ((((((((t0.c51)OR(NULL)))AND(t0.c48)))OR(vt1.c0)))AND(vt1.c2)) WHEN ((t0.c51) IS TRUE) THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END ELSE '9&' END) ORDER BY ((((((((t0.c48)AND(vt0.c0)))OR(t0.c48)))AND(vt1.c2)))AND(vt1.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c48 AS TEXT)  WHEN CASE vt1.c0  WHEN t0.c51 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c1 ELSE vt0.c0 END THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(t0.c51)))OR(vt1.c1)))AND(vt1.c2)))OR(vt0.c0)))OR(vt1.c1)) WHEN (vt1.c0 IN (t0.c51, t0.c51)) THEN ((((((((t0.c51)OR(NULL)))AND(t0.c48)))OR(vt1.c0)))AND(vt1.c2)) WHEN ((t0.c51) IS TRUE) THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END ELSE '9&' END) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE WHEN vt1.c0 THEN t0.c48 ELSE vt1.c1 END COLLATE BINARY COLLATE RTRIM LEFT OUTER JOIN t0 ON (((vt1.c0))>=(((((t0.c51))<((t0.c48)))))) ORDER BY ((((((((t0.c48)AND(vt0.c0)))OR(t0.c48)))AND(vt1.c2)))AND(vt1.c1)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE WHEN vt1.c0 THEN t0.c48 ELSE vt1.c1 END COLLATE BINARY COLLATE RTRIM LEFT OUTER JOIN t0 ON (((vt1.c0))>=(((((t0.c51))<((t0.c48)))))) WHERE (CASE CAST(t0.c48 AS TEXT)  WHEN CASE vt1.c0  WHEN t0.c51 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c1 ELSE vt0.c0 END THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(t0.c51)))OR(vt1.c1)))AND(vt1.c2)))OR(vt0.c0)))OR(vt1.c1)) WHEN (vt1.c0 IN (t0.c51, t0.c51)) THEN ((((((((t0.c51)OR(NULL)))AND(t0.c48)))OR(vt1.c0)))AND(vt1.c2)) WHEN ((t0.c51) IS TRUE) THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END ELSE '9&' END) ORDER BY ((((((((t0.c48)AND(vt0.c0)))OR(t0.c48)))AND(vt1.c2)))AND(vt1.c1)) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT * FROM vt1, vt0, t0 NOT INDEXED WHERE (ABS(NULL));
SELECT SUM(count) FROM (SELECT ALL ((ABS(NULL)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 NOT INDEXED WHERE (ABS(NULL));
SELECT SUM(count) FROM (SELECT ALL ((ABS(NULL)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 NOT INDEXED WHERE (ABS(NULL));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt1 WHERE (((((((t0.c51)IS NOT(t0.c51)))OR(STRFTIME(t0.c48, t0.c51, vt1.c0))))AND(((t0.c51)%(NULL))))) ORDER BY (((((vt1.c0, vt1.c2, t0.c48))<((vt1.c0, vt1.c0, t0.c48))))AND(((vt1.c0)-(t0.c51)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c51)IS NOT(t0.c51)))OR(STRFTIME(t0.c48, t0.c51, vt1.c0))))AND(((t0.c51)%(NULL))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((vt1.c0, vt1.c2, t0.c48))<((vt1.c0, vt1.c0, t0.c48))))AND(((vt1.c0)-(t0.c51)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt1 WHERE (((((((t0.c51)IS NOT(t0.c51)))OR(STRFTIME(t0.c48, t0.c51, vt1.c0))))AND(((t0.c51)%(NULL))))) ORDER BY (((((vt1.c0, vt1.c2, t0.c48))<((vt1.c0, vt1.c0, t0.c48))))AND(((vt1.c0)-(t0.c51)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c51)IS NOT(t0.c51)))OR(STRFTIME(t0.c48, t0.c51, vt1.c0))))AND(((t0.c51)%(NULL))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((vt1.c0, vt1.c2, t0.c48))<((vt1.c0, vt1.c0, t0.c48))))AND(((vt1.c0)-(t0.c51)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt1 WHERE (((((((t0.c51)IS NOT(t0.c51)))OR(STRFTIME(t0.c48, t0.c51, vt1.c0))))AND(((t0.c51)%(NULL))))) ORDER BY (((((vt1.c0, vt1.c2, t0.c48))<((vt1.c0, vt1.c0, t0.c48))))AND(((vt1.c0)-(t0.c51)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((NULL)OR(vt0.c0))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((NOT (((NULL)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((NULL)OR(vt0.c0))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((NOT (((NULL)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((NULL)OR(vt0.c0))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((((((((vt1.c0)AND(x'')))OR(vt1.c2)))AND(x'')))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0)AND(x'')))OR(vt1.c2)))AND(x'')))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((((((((vt1.c0)AND(x'')))OR(vt1.c2)))AND(x'')))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0)AND(x'')))OR(vt1.c2)))AND(x'')))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((((((((vt1.c0)AND(x'')))OR(vt1.c2)))AND(x'')))AND(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt1, vt0 NATURAL JOIN t0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt1, vt0 NATURAL JOIN t0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt1, vt0 NATURAL JOIN t0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((vt0.c0 IN (vt1.c1))) IS FALSE) WHERE (((vt1.c1) IS TRUE)) ORDER BY CASE WHEN ((vt1.c0)GLOB(vt1.c2)) THEN vt1.c2 COLLATE RTRIM WHEN ((vt1.c1) NOT NULL) THEN ((vt0.c0)IS NOT(vt1.c2)) WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c2 END THEN (((vt1.c0))!=((0.20202705535324272))) ELSE ('' IN ()) END;
SELECT SUM(count) FROM (SELECT ((((vt1.c1) IS TRUE)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt0.c0 IN (vt1.c1))) IS FALSE) ORDER BY CASE WHEN ((vt1.c0)GLOB(vt1.c2)) THEN vt1.c2 COLLATE RTRIM WHEN ((vt1.c1) NOT NULL) THEN ((vt0.c0)IS NOT(vt1.c2)) WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c2 END THEN (((vt1.c0))<>((0.20202705535324272))) ELSE ('' IN ()) END);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((vt0.c0 IN (vt1.c1))) IS FALSE) WHERE (((vt1.c1) IS TRUE)) ORDER BY CASE WHEN ((vt1.c0)GLOB(vt1.c2)) THEN vt1.c2 COLLATE RTRIM WHEN ((vt1.c1) NOT NULL) THEN ((vt0.c0)IS NOT(vt1.c2)) WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c2 END THEN (((vt1.c0))!=((0.20202705535324272))) ELSE ('' IN ()) END;
SELECT SUM(count) FROM (SELECT ((((vt1.c1) IS TRUE)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt0.c0 IN (vt1.c1))) IS FALSE) ORDER BY CASE WHEN ((vt1.c0)GLOB(vt1.c2)) THEN vt1.c2 COLLATE RTRIM WHEN ((vt1.c1) NOT NULL) THEN ((vt0.c0)IS NOT(vt1.c2)) WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c2 END THEN (((vt1.c0))<>((0.20202705535324272))) ELSE ('' IN ()) END);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((vt0.c0 IN (vt1.c1))) IS FALSE) WHERE (((vt1.c1) IS TRUE)) ORDER BY CASE WHEN ((vt1.c0)GLOB(vt1.c2)) THEN vt1.c2 COLLATE RTRIM WHEN ((vt1.c1) NOT NULL) THEN ((vt0.c0)IS NOT(vt1.c2)) WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c2 END THEN (((vt1.c0))!=((0.20202705535324272))) ELSE ('' IN ()) END;
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (CASE WHEN (vt0.c0 IN (vt1.c1)) THEN LIKELIHOOD(0.24836997076811085, 0.18009887788260204) ELSE (NOT (vt1.c0)) END) ORDER BY ((CAST(0.7833739140086962 AS INTEGER)) IS FALSE) DESC  NULLS FIRST, CAST(NULL AS INTEGER) DESC  NULLS FIRST, (+ (((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (vt1.c1)) THEN LIKELIHOOD(0.24836997076811085, 0.18009887788260204) ELSE (NOT (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((CAST(0.7833739140086962 AS INTEGER)) IS FALSE) DESC  NULLS FIRST, CAST(NULL AS INTEGER) DESC  NULLS FIRST, (+ (((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (CASE WHEN (vt0.c0 IN (vt1.c1)) THEN LIKELIHOOD(0.24836997076811085, 0.18009887788260204) ELSE (NOT (vt1.c0)) END) ORDER BY ((CAST(0.7833739140086962 AS INTEGER)) IS FALSE) DESC  NULLS FIRST, CAST(NULL AS INTEGER) DESC  NULLS FIRST, (+ (((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (vt1.c1)) THEN LIKELIHOOD(0.24836997076811085, 0.18009887788260204) ELSE (NOT (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((CAST(0.7833739140086962 AS INTEGER)) IS FALSE) DESC  NULLS FIRST, CAST(NULL AS INTEGER) DESC  NULLS FIRST, (+ (((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (CASE WHEN (vt0.c0 IN (vt1.c1)) THEN LIKELIHOOD(0.24836997076811085, 0.18009887788260204) ELSE (NOT (vt1.c0)) END) ORDER BY ((CAST(0.7833739140086962 AS INTEGER)) IS FALSE) DESC  NULLS FIRST, CAST(NULL AS INTEGER) DESC  NULLS FIRST, (+ (((vt0.c0) IS TRUE)));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE ((vt1.c0)IS(vt1.c2))  WHEN t0.c51 THEN (((vt1.c0))>((vt1.c1))) WHEN (t0.c48 IN ()) THEN NULL WHEN ((t0.c48) IS TRUE) THEN UNLIKELY(DISTINCT NULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN x'db2e' END THEN IFNULL(vt1.c0, vt1.c1) WHEN vt1.c2 THEN json_type(t0.c48) END) ORDER BY ((((vt1.c0) NOT NULL)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)IS(vt1.c2))  WHEN t0.c51 THEN (((vt1.c0))>((vt1.c1))) WHEN (t0.c48 IN ()) THEN NULL WHEN ((t0.c48) IS TRUE) THEN UNLIKELY(DISTINCT NULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN x'db2e' END THEN IFNULL(vt1.c0, vt1.c1) WHEN vt1.c2 THEN json_type(t0.c48) END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((vt1.c0) NOT NULL)) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE ((vt1.c0)IS(vt1.c2))  WHEN t0.c51 THEN (((vt1.c0))>((vt1.c1))) WHEN (t0.c48 IN ()) THEN NULL WHEN ((t0.c48) IS TRUE) THEN UNLIKELY(DISTINCT NULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN x'db2e' END THEN IFNULL(vt1.c0, vt1.c1) WHEN vt1.c2 THEN json_type(t0.c48) END) ORDER BY ((((vt1.c0) NOT NULL)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)IS(vt1.c2))  WHEN t0.c51 THEN (((vt1.c0))>((vt1.c1))) WHEN (t0.c48 IN ()) THEN NULL WHEN ((t0.c48) IS TRUE) THEN UNLIKELY(DISTINCT NULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN x'db2e' END THEN IFNULL(vt1.c0, vt1.c1) WHEN vt1.c2 THEN json_type(t0.c48) END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((vt1.c0) NOT NULL)) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE ((vt1.c0)IS(vt1.c2))  WHEN t0.c51 THEN (((vt1.c0))>((vt1.c1))) WHEN (t0.c48 IN ()) THEN NULL WHEN ((t0.c48) IS TRUE) THEN UNLIKELY(DISTINCT NULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN x'db2e' END THEN IFNULL(vt1.c0, vt1.c1) WHEN vt1.c2 THEN json_type(t0.c48) END) ORDER BY ((((vt1.c0) NOT NULL)) NOTNULL) DESC;
SELECT * FROM vt0, t0, vt1 WHERE (((IFNULL(vt1.c2, vt1.c0)) ISNULL)) ORDER BY CAST(((x'')>(vt1.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt1.c2, vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CAST(((x'')>(vt1.c0)) AS NUMERIC));
SELECT * FROM vt0, t0, vt1 WHERE (((IFNULL(vt1.c2, vt1.c0)) ISNULL)) ORDER BY CAST(((x'')>(vt1.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt1.c2, vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CAST(((x'')>(vt1.c0)) AS NUMERIC));
SELECT * FROM vt0, t0, vt1 WHERE (((IFNULL(vt1.c2, vt1.c0)) ISNULL)) ORDER BY CAST(((x'')>(vt1.c0)) AS NUMERIC);
SELECT COUNT(*) FROM t0 WHERE (0.8557448828436022) ORDER BY (((t0.c51 IN ()))<=(t0.c48 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.8557448828436022) IS TRUE)  as count FROM t0 ORDER BY (((t0.c51 IN ()))<=(t0.c48 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (0.8557448828436022) ORDER BY (((t0.c51 IN ()))<=(t0.c48 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.8557448828436022) IS TRUE)  as count FROM t0 ORDER BY (((t0.c51 IN ()))<=(t0.c48 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (0.8557448828436022) ORDER BY (((t0.c51 IN ()))<=(t0.c48 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c48))))) ORDER BY ((((((x'') IS FALSE))OR(x'f9940fd5')))AND((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c48))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((((x'') IS FALSE))OR(x'f9940fd5')))AND((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c48))))) ORDER BY ((((((x'') IS FALSE))OR(x'f9940fd5')))AND((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c48))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((((x'') IS FALSE))OR(x'f9940fd5')))AND((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((('-972699376' IN ()))==(CAST(t0.c51 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((('-972699376' IN ()))=(CAST(t0.c51 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((('-972699376' IN ()))==(CAST(t0.c51 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((('-972699376' IN ()))=(CAST(t0.c51 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((('-972699376' IN ()))==(CAST(t0.c51 AS REAL))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt0.c0 END) IS TRUE)) ORDER BY (((vt1.c2)) BETWEEN (((('~LFu>-B퀗') IS TRUE))) AND ((LIKELIHOOD(vt1.c0, 0.9555517025626198)))), ((((vt1.c2)AND(vt1.c0)))<(vt1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c2)) BETWEEN (((('~LFu>-B퀗') IS TRUE))) AND ((LIKELIHOOD(vt1.c0, 0.9555517025626198)))), ((((vt1.c2)AND(vt1.c0)))<(vt1.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt0.c0 END) IS TRUE)) ORDER BY (((vt1.c2)) BETWEEN (((('~LFu>-B퀗') IS TRUE))) AND ((LIKELIHOOD(vt1.c0, 0.9555517025626198)))), ((((vt1.c2)AND(vt1.c0)))<(vt1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c2)) BETWEEN (((('~LFu>-B퀗') IS TRUE))) AND ((LIKELIHOOD(vt1.c0, 0.9555517025626198)))), ((((vt1.c2)AND(vt1.c0)))<(vt1.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt0.c0 END) IS TRUE)) ORDER BY (((vt1.c2)) BETWEEN (((('~LFu>-B퀗') IS TRUE))) AND ((LIKELIHOOD(vt1.c0, 0.9555517025626198)))), ((((vt1.c2)AND(vt1.c0)))<(vt1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))|(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))|(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))|(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))|(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))|(vt0.c0)));
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS REAL))IS((((vt1.c2))=((vt1.c2)))))) ORDER BY (((- (vt1.c2))) BETWEEN (((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c2))) AND (CASE vt1.c2  WHEN vt1.c2 THEN vt1.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS REAL))IS((((vt1.c2))==((vt1.c2)))))) IS TRUE)  as count FROM vt1 ORDER BY (((- (vt1.c2))) BETWEEN (((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c2))) AND (CASE vt1.c2  WHEN vt1.c2 THEN vt1.c1 END)) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS REAL))IS((((vt1.c2))=((vt1.c2)))))) ORDER BY (((- (vt1.c2))) BETWEEN (((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c2))) AND (CASE vt1.c2  WHEN vt1.c2 THEN vt1.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS REAL))IS((((vt1.c2))==((vt1.c2)))))) IS TRUE)  as count FROM vt1 ORDER BY (((- (vt1.c2))) BETWEEN (((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c2))) AND (CASE vt1.c2  WHEN vt1.c2 THEN vt1.c1 END)) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS REAL))IS((((vt1.c2))=((vt1.c2)))))) ORDER BY (((- (vt1.c2))) BETWEEN (((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c2))) AND (CASE vt1.c2  WHEN vt1.c2 THEN vt1.c1 END)) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0, t0 WHERE (((((((((vt1.c1)OR(t0.c51)))OR(0.761614889968797)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)))))AND(-1.371372108E9))) ORDER BY CASE vt1.c0  WHEN TRIM('*n') THEN (vt0.c0 IN ()) END, CASE ((vt0.c0) BETWEEN (vt1.c1) AND (t0.c48))  WHEN CAST(vt1.c2 AS INTEGER) THEN TYPEOF(vt1.c1) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c1)OR(t0.c51)))OR(0.761614889968797)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)))))AND(-1.371372108E9))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CASE vt1.c0  WHEN TRIM('*n') THEN (vt0.c0 IN ()) END, CASE ((vt0.c0) BETWEEN (vt1.c1) AND (t0.c48))  WHEN CAST(vt1.c2 AS INTEGER) THEN TYPEOF(vt1.c1) END DESC  NULLS LAST);
SELECT * FROM vt1, vt0, t0 WHERE (((((((((vt1.c1)OR(t0.c51)))OR(0.761614889968797)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)))))AND(-1.371372108E9))) ORDER BY CASE vt1.c0  WHEN TRIM('*n') THEN (vt0.c0 IN ()) END, CASE ((vt0.c0) BETWEEN (vt1.c1) AND (t0.c48))  WHEN CAST(vt1.c2 AS INTEGER) THEN TYPEOF(vt1.c1) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c1)OR(t0.c51)))OR(0.761614889968797)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)))))AND(-1.371372108E9))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CASE vt1.c0  WHEN TRIM('*n') THEN (vt0.c0 IN ()) END, CASE ((vt0.c0) BETWEEN (vt1.c1) AND (t0.c48))  WHEN CAST(vt1.c2 AS INTEGER) THEN TYPEOF(vt1.c1) END DESC  NULLS LAST);
SELECT * FROM vt1, vt0, t0 WHERE (((((((((vt1.c1)OR(t0.c51)))OR(0.761614889968797)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)))))AND(-1.371372108E9))) ORDER BY CASE vt1.c0  WHEN TRIM('*n') THEN (vt0.c0 IN ()) END, CASE ((vt0.c0) BETWEEN (vt1.c1) AND (t0.c48))  WHEN CAST(vt1.c2 AS INTEGER) THEN TYPEOF(vt1.c1) END DESC  NULLS LAST;
SELECT * FROM vt0, vt1, t0 WHERE (('' IN ())) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt0.c0)<(vt1.c0)))) AND ((((vt1.c0)OR(t0.c48))))) DESC, UNICODE(((((t0.c51)AND(vt0.c0)))AND(t0.c48))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((('' IN ())) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt0.c0)<(vt1.c0)))) AND ((((vt1.c0)OR(t0.c48))))) DESC, UNICODE(((((t0.c51)AND(vt0.c0)))AND(t0.c48))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1, t0 WHERE (('' IN ())) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt0.c0)<(vt1.c0)))) AND ((((vt1.c0)OR(t0.c48))))) DESC, UNICODE(((((t0.c51)AND(vt0.c0)))AND(t0.c48))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((('' IN ())) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt0.c0)<(vt1.c0)))) AND ((((vt1.c0)OR(t0.c48))))) DESC, UNICODE(((((t0.c51)AND(vt0.c0)))AND(t0.c48))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1, t0 WHERE (('' IN ())) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt0.c0)<(vt1.c0)))) AND ((((vt1.c0)OR(t0.c48))))) DESC, UNICODE(((((t0.c51)AND(vt0.c0)))AND(t0.c48))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN t0.c51 THEN t0.c48 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c51 THEN vt0.c0 END)+(((((t0.c51)AND(t0.c51)))AND(t0.c48)))) WHERE (json_patch(CASE vt0.c0  WHEN vt0.c0 THEN t0.c51 WHEN t0.c51 THEN t0.c48 WHEN t0.c51 THEN vt0.c0 WHEN t0.c51 THEN vt0.c0 WHEN t0.c51 THEN t0.c51 END, t0.c48)) ORDER BY 0.3956224167539092 COLLATE BINARY COLLATE RTRIM DESC, ((t0.c48 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(CASE vt0.c0  WHEN vt0.c0 THEN t0.c51 WHEN t0.c51 THEN t0.c48 WHEN t0.c51 THEN vt0.c0 WHEN t0.c51 THEN vt0.c0 WHEN t0.c51 THEN t0.c51 END, t0.c48)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN t0.c51 THEN t0.c48 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c51 THEN vt0.c0 END)+(((((t0.c51)AND(t0.c51)))AND(t0.c48)))) ORDER BY 0.3956224167539092 COLLATE BINARY COLLATE RTRIM DESC, ((t0.c48 COLLATE RTRIM) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN t0.c51 THEN t0.c48 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c51 THEN vt0.c0 END)+(((((t0.c51)AND(t0.c51)))AND(t0.c48)))) WHERE (json_patch(CASE vt0.c0  WHEN vt0.c0 THEN t0.c51 WHEN t0.c51 THEN t0.c48 WHEN t0.c51 THEN vt0.c0 WHEN t0.c51 THEN vt0.c0 WHEN t0.c51 THEN t0.c51 END, t0.c48)) ORDER BY 0.3956224167539092 COLLATE BINARY COLLATE RTRIM DESC, ((t0.c48 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(CASE vt0.c0  WHEN vt0.c0 THEN t0.c51 WHEN t0.c51 THEN t0.c48 WHEN t0.c51 THEN vt0.c0 WHEN t0.c51 THEN vt0.c0 WHEN t0.c51 THEN t0.c51 END, t0.c48)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN t0.c51 THEN t0.c48 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c51 THEN vt0.c0 END)+(((((t0.c51)AND(t0.c51)))AND(t0.c48)))) ORDER BY 0.3956224167539092 COLLATE BINARY COLLATE RTRIM DESC, ((t0.c48 COLLATE RTRIM) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN t0.c51 THEN t0.c48 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c51 THEN vt0.c0 END)+(((((t0.c51)AND(t0.c51)))AND(t0.c48)))) WHERE (json_patch(CASE vt0.c0  WHEN vt0.c0 THEN t0.c51 WHEN t0.c51 THEN t0.c48 WHEN t0.c51 THEN vt0.c0 WHEN t0.c51 THEN vt0.c0 WHEN t0.c51 THEN t0.c51 END, t0.c48)) ORDER BY 0.3956224167539092 COLLATE BINARY COLLATE RTRIM DESC, ((t0.c48 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((t0.c51))=((vt1.c2))))IS NOT((((vt1.c0))<=((vt1.c1)))))) ORDER BY ((NULL)>(((NULL)==(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c51))=((vt1.c2))))IS NOT((((vt1.c0))<=((vt1.c1)))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((NULL)>(((NULL)=(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((t0.c51))=((vt1.c2))))IS NOT((((vt1.c0))<=((vt1.c1)))))) ORDER BY ((NULL)>(((NULL)==(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c51))=((vt1.c2))))IS NOT((((vt1.c0))<=((vt1.c1)))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((NULL)>(((NULL)=(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((t0.c51))=((vt1.c2))))IS NOT((((vt1.c0))<=((vt1.c1)))))) ORDER BY ((NULL)>(((NULL)==(vt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (((vt1.c1) IS TRUE)))) ORDER BY CAST(vt1.c2 AS INTEGER) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt1.c2 AS INTEGER) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (((vt1.c1) IS TRUE)))) ORDER BY CAST(vt1.c2 AS INTEGER) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt1.c2 AS INTEGER) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (((vt1.c1) IS TRUE)))) ORDER BY CAST(vt1.c2 AS INTEGER) COLLATE BINARY ASC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CASE ((((0.559088947425027)AND(t0.c48)))AND(vt0.c0))  WHEN t0.c51 COLLATE NOCASE THEN (((t0.c48))==((t0.c48))) END WHERE (((((x'')AND(vt0.c0)))AND(NULL))) ORDER BY (+ (((t0.c48) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((x'')AND(vt0.c0)))AND(NULL))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE ((((0.559088947425027)AND(t0.c48)))AND(vt0.c0))  WHEN t0.c51 COLLATE NOCASE THEN (((t0.c48))==((t0.c48))) END ORDER BY (+ (((t0.c48) NOTNULL))) ASC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CASE ((((0.559088947425027)AND(t0.c48)))AND(vt0.c0))  WHEN t0.c51 COLLATE NOCASE THEN (((t0.c48))==((t0.c48))) END WHERE (((((x'')AND(vt0.c0)))AND(NULL))) ORDER BY (+ (((t0.c48) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((x'')AND(vt0.c0)))AND(NULL))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE ((((0.559088947425027)AND(t0.c48)))AND(vt0.c0))  WHEN t0.c51 COLLATE NOCASE THEN (((t0.c48))==((t0.c48))) END ORDER BY (+ (((t0.c48) NOTNULL))) ASC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CASE ((((0.559088947425027)AND(t0.c48)))AND(vt0.c0))  WHEN t0.c51 COLLATE NOCASE THEN (((t0.c48))==((t0.c48))) END WHERE (((((x'')AND(vt0.c0)))AND(NULL))) ORDER BY (+ (((t0.c48) NOTNULL))) ASC;
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.936523684151817))>(TYPEOF(DISTINCT t0.c51))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt0.c0, 0.936523684151817))>(TYPEOF(DISTINCT t0.c51)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.936523684151817))>(TYPEOF(DISTINCT t0.c51))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt0.c0, 0.936523684151817))>(TYPEOF(DISTINCT t0.c51)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.936523684151817))>(TYPEOF(DISTINCT t0.c51))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c51 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c51 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c51 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c51 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c51 AS NUMERIC) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt0.c0) NOT NULL))AND(((vt1.c1)OR(vt1.c0)))))AND((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))OR((vt1.c0 IN ()))))OR(((((vt1.c2)OR(vt1.c2)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT NULL))AND(((vt1.c1)OR(vt1.c0)))))AND((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))OR((vt1.c0 IN ()))))OR(((((vt1.c2)OR(vt1.c2)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt0.c0) NOT NULL))AND(((vt1.c1)OR(vt1.c0)))))AND((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))OR((vt1.c0 IN ()))))OR(((((vt1.c2)OR(vt1.c2)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT NULL))AND(((vt1.c1)OR(vt1.c0)))))AND((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))OR((vt1.c0 IN ()))))OR(((((vt1.c2)OR(vt1.c2)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt0.c0) NOT NULL))AND(((vt1.c1)OR(vt1.c0)))))AND((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))OR((vt1.c0 IN ()))))OR(((((vt1.c2)OR(vt1.c2)))OR(vt1.c1)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON (NOT (t0.c51)) COLLATE NOCASE COLLATE NOCASE WHERE (((((((((0x637f21a7)AND(vt1.c1)))AND(vt1.c1)))AND(t0.c51)))OR(t0.c51)) COLLATE NOCASE) ORDER BY ((vt1.c0)||(x'' COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((0X637f21a7)AND(vt1.c1)))AND(vt1.c1)))AND(t0.c51)))OR(t0.c51)) COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (NOT (t0.c51)) COLLATE NOCASE COLLATE NOCASE ORDER BY ((vt1.c0)||(x'' COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON (NOT (t0.c51)) COLLATE NOCASE COLLATE NOCASE WHERE (((((((((0x637f21a7)AND(vt1.c1)))AND(vt1.c1)))AND(t0.c51)))OR(t0.c51)) COLLATE NOCASE) ORDER BY ((vt1.c0)||(x'' COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((0X637f21a7)AND(vt1.c1)))AND(vt1.c1)))AND(t0.c51)))OR(t0.c51)) COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (NOT (t0.c51)) COLLATE NOCASE COLLATE NOCASE ORDER BY ((vt1.c0)||(x'' COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON (NOT (t0.c51)) COLLATE NOCASE COLLATE NOCASE WHERE (((((((((0x637f21a7)AND(vt1.c1)))AND(vt1.c1)))AND(t0.c51)))OR(t0.c51)) COLLATE NOCASE) ORDER BY ((vt1.c0)||(x'' COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE ((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c48))  WHEN ((t0.c48) IS FALSE) THEN CASE t0.c51  WHEN vt1.c1 THEN vt1.c1 END ELSE CASE WHEN vt1.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c48))  WHEN ((t0.c48) IS FALSE) THEN CASE t0.c51  WHEN vt1.c1 THEN vt1.c1 END ELSE CASE WHEN vt1.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE ((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c48))  WHEN ((t0.c48) IS FALSE) THEN CASE t0.c51  WHEN vt1.c1 THEN vt1.c1 END ELSE CASE WHEN vt1.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c48))  WHEN ((t0.c48) IS FALSE) THEN CASE t0.c51  WHEN vt1.c1 THEN vt1.c1 END ELSE CASE WHEN vt1.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE ((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c48))  WHEN ((t0.c48) IS FALSE) THEN CASE t0.c51  WHEN vt1.c1 THEN vt1.c1 END ELSE CASE WHEN vt1.c0 THEN vt0.c0 END END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT ((t0.c51) NOT NULL), 0.04972734265957657) LEFT OUTER JOIN t0 ON vt1.c1 WHERE ((((t0.c48)) BETWEEN ((((vt0.c0)<<(vt1.c1)))) AND ((vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48)) BETWEEN ((((vt0.c0)<<(vt1.c1)))) AND ((vt1.c2)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT ((t0.c51) NOT NULL), 0.04972734265957657) LEFT OUTER JOIN t0 ON vt1.c1);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT ((t0.c51) NOT NULL), 0.04972734265957657) LEFT OUTER JOIN t0 ON vt1.c1 WHERE ((((t0.c48)) BETWEEN ((((vt0.c0)<<(vt1.c1)))) AND ((vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48)) BETWEEN ((((vt0.c0)<<(vt1.c1)))) AND ((vt1.c2)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT ((t0.c51) NOT NULL), 0.04972734265957657) LEFT OUTER JOIN t0 ON vt1.c1);
SELECT ALL * FROM t0 WHERE (UPPER(t0.c48 COLLATE NOCASE)) ORDER BY ((CAST(t0.c48 AS NUMERIC))%((+ (t0.c48))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(t0.c48 COLLATE NOCASE)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c48 AS NUMERIC))%((+ (t0.c48))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (UPPER(t0.c48 COLLATE NOCASE)) ORDER BY ((CAST(t0.c48 AS NUMERIC))%((+ (t0.c48))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(t0.c48 COLLATE NOCASE)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c48 AS NUMERIC))%((+ (t0.c48))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (UPPER(t0.c48 COLLATE NOCASE)) ORDER BY ((CAST(t0.c48 AS NUMERIC))%((+ (t0.c48))))  NULLS FIRST;
SELECT * FROM vt1, t0 WHERE (((TYPEOF(DISTINCT vt1.c0))&(((t0.c51)GLOB(vt1.c2))))) ORDER BY NULLIF(COALESCE(t0.c48, NULL), vt1.c0) DESC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT vt1.c0))&(((t0.c51)GLOB(vt1.c2))))) IS TRUE)  as count FROM vt1, t0 ORDER BY NULLIF(COALESCE(t0.c48, NULL), vt1.c0) DESC);
SELECT * FROM vt1, t0 WHERE (((TYPEOF(DISTINCT vt1.c0))&(((t0.c51)GLOB(vt1.c2))))) ORDER BY NULLIF(COALESCE(t0.c48, NULL), vt1.c0) DESC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT vt1.c0))&(((t0.c51)GLOB(vt1.c2))))) IS TRUE)  as count FROM vt1, t0 ORDER BY NULLIF(COALESCE(t0.c48, NULL), vt1.c0) DESC);
SELECT * FROM vt1, t0 WHERE (((TYPEOF(DISTINCT vt1.c0))&(((t0.c51)GLOB(vt1.c2))))) ORDER BY NULLIF(COALESCE(t0.c48, NULL), vt1.c0) DESC;
SELECT * FROM vt0, t0 INDEXED BY i62, vt1 WHERE (t0.c51);
SELECT SUM(count) FROM (SELECT ALL ((t0.c51) IS TRUE)  as count FROM vt0, t0 INDEXED BY i62, vt1);
SELECT * FROM vt0, t0 INDEXED BY i62, vt1 WHERE (t0.c51);
SELECT SUM(count) FROM (SELECT ALL ((t0.c51) IS TRUE)  as count FROM vt0, t0 INDEXED BY i62, vt1);
SELECT * FROM vt0, t0 INDEXED BY i62, vt1 WHERE (t0.c51);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))GLOB(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))GLOB(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))GLOB(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))GLOB(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))GLOB(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY TRIM(DISTINCT CASE WHEN t0.c48 THEN t0.c48 WHEN t0.c48 THEN NULL WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY TRIM(DISTINCT CASE WHEN t0.c48 THEN t0.c48 WHEN t0.c48 THEN NULL WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY TRIM(DISTINCT CASE WHEN t0.c48 THEN t0.c48 WHEN t0.c48 THEN NULL WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY TRIM(DISTINCT CASE WHEN t0.c48 THEN t0.c48 WHEN t0.c48 THEN NULL WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY TRIM(DISTINCT CASE WHEN t0.c48 THEN t0.c48 WHEN t0.c48 THEN NULL WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)))GLOB(CAST(vt1.c2 AS BLOB)))) ORDER BY (1546372017 IN (vt1.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)))GLOB(CAST(vt1.c2 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY (1546372017 IN (vt1.c2)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)))GLOB(CAST(vt1.c2 AS BLOB)))) ORDER BY (1546372017 IN (vt1.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)))GLOB(CAST(vt1.c2 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY (1546372017 IN (vt1.c2)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)))GLOB(CAST(vt1.c2 AS BLOB)))) ORDER BY (1546372017 IN (vt1.c2)) COLLATE NOCASE  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((-1926240737 IN ())) ORDER BY ((((HEX(vt1.c1))OR((vt1.c2 IN (vt1.c2)))))OR(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c2 ELSE 0.559547642742536 END));
SELECT SUM(count) FROM (SELECT ALL (((-1926240737 IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((HEX(vt1.c1))OR((vt1.c2 IN (vt1.c2)))))OR(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c2 ELSE 0.559547642742536 END)));
SELECT * FROM vt0, vt1 WHERE ((-1926240737 IN ())) ORDER BY ((((HEX(vt1.c1))OR((vt1.c2 IN (vt1.c2)))))OR(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c2 ELSE 0.559547642742536 END));
SELECT SUM(count) FROM (SELECT ALL (((-1926240737 IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((HEX(vt1.c1))OR((vt1.c2 IN (vt1.c2)))))OR(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c2 ELSE 0.559547642742536 END)));
SELECT * FROM vt0, vt1 WHERE ((-1926240737 IN ())) ORDER BY ((((HEX(vt1.c1))OR((vt1.c2 IN (vt1.c2)))))OR(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c2 ELSE 0.559547642742536 END));
SELECT * FROM t0, vt0, vt1 WHERE (0.5750101572873926) ORDER BY vt0.c0 DESC  NULLS LAST, ((t0.c48 COLLATE BINARY) NOT BETWEEN (MIN(t0.c51, t0.c51, vt1.c0, vt1.c1)) AND (((t0.c51) BETWEEN (vt1.c0) AND (vt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.5750101572873926) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY vt0.c0 DESC  NULLS LAST, ((t0.c48 COLLATE BINARY) NOT BETWEEN (MIN(t0.c51, t0.c51, vt1.c0, vt1.c1)) AND (((t0.c51) BETWEEN (vt1.c0) AND (vt1.c2))))  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE (0.5750101572873926) ORDER BY vt0.c0 DESC  NULLS LAST, ((t0.c48 COLLATE BINARY) NOT BETWEEN (MIN(t0.c51, t0.c51, vt1.c0, vt1.c1)) AND (((t0.c51) BETWEEN (vt1.c0) AND (vt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.5750101572873926) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY vt0.c0 DESC  NULLS LAST, ((t0.c48 COLLATE BINARY) NOT BETWEEN (MIN(t0.c51, t0.c51, vt1.c0, vt1.c1)) AND (((t0.c51) BETWEEN (vt1.c0) AND (vt1.c2))))  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE (0.5750101572873926) ORDER BY vt0.c0 DESC  NULLS LAST, ((t0.c48 COLLATE BINARY) NOT BETWEEN (MIN(t0.c51, t0.c51, vt1.c0, vt1.c1)) AND (((t0.c51) BETWEEN (vt1.c0) AND (vt1.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CAST(LTRIM(NULL, vt1.c2) AS TEXT)) ORDER BY 0.14740714267733512 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(LTRIM(NULL, vt1.c2) AS TEXT)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY 0.14740714267733512 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CAST(LTRIM(NULL, vt1.c2) AS TEXT)) ORDER BY 0.14740714267733512 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(LTRIM(NULL, vt1.c2) AS TEXT)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY 0.14740714267733512 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CAST(LTRIM(NULL, vt1.c2) AS TEXT)) ORDER BY 0.14740714267733512 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('-1926240737')) AND (((((vt1.c2))<((t0.c51))))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (('-1926240737')) AND (((((vt1.c2))<((t0.c51))))))) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('-1926240737')) AND (((((vt1.c2))<((t0.c51))))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (('-1926240737')) AND (((((vt1.c2))<((t0.c51))))))) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('-1926240737')) AND (((((vt1.c2))<((t0.c51))))))) ORDER BY vt0.c0;
SELECT ALL * FROM vt1, t0, vt0 WHERE (('' IN (vt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((('' IN (vt0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (('' IN (vt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((('' IN (vt0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (('' IN (vt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE (((IFNULL(t0.c51, 928404431))%(((((((((t0.c51)AND(t0.c48)))OR(t0.c51)))AND(t0.c48)))AND(t0.c51))))) ORDER BY (((t0.c51, t0.c51, t0.c48)) BETWEEN ((((t0.c48)GLOB(t0.c51)), TRIM(DISTINCT t0.c51, t0.c51), (((t0.c51)) NOT BETWEEN ((t0.c51)) AND (('-1240827577'))))) AND ((UPPER(DISTINCT t0.c48), ((-1.52475683E9) BETWEEN (t0.c51) AND (t0.c48)), UNICODE(t0.c51)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t0.c51, 928404431))%(((((((((t0.c51)AND(t0.c48)))OR(t0.c51)))AND(t0.c48)))AND(t0.c51))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c51, t0.c51, t0.c48)) BETWEEN ((((t0.c48)GLOB(t0.c51)), TRIM(DISTINCT t0.c51, t0.c51), (((t0.c51)) NOT BETWEEN ((t0.c51)) AND (('-1240827577'))))) AND ((UPPER(DISTINCT t0.c48), ((-1.52475683E9) BETWEEN (t0.c51) AND (t0.c48)), UNICODE(t0.c51)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((IFNULL(t0.c51, 928404431))%(((((((((t0.c51)AND(t0.c48)))OR(t0.c51)))AND(t0.c48)))AND(t0.c51))))) ORDER BY (((t0.c51, t0.c51, t0.c48)) BETWEEN ((((t0.c48)GLOB(t0.c51)), TRIM(DISTINCT t0.c51, t0.c51), (((t0.c51)) NOT BETWEEN ((t0.c51)) AND (('-1240827577'))))) AND ((UPPER(DISTINCT t0.c48), ((-1.52475683E9) BETWEEN (t0.c51) AND (t0.c48)), UNICODE(t0.c51)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t0.c51, 928404431))%(((((((((t0.c51)AND(t0.c48)))OR(t0.c51)))AND(t0.c48)))AND(t0.c51))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c51, t0.c51, t0.c48)) BETWEEN ((((t0.c48)GLOB(t0.c51)), TRIM(DISTINCT t0.c51, t0.c51), (((t0.c51)) NOT BETWEEN ((t0.c51)) AND (('-1240827577'))))) AND ((UPPER(DISTINCT t0.c48), ((-1.52475683E9) BETWEEN (t0.c51) AND (t0.c48)), UNICODE(t0.c51)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((IFNULL(t0.c51, 928404431))%(((((((((t0.c51)AND(t0.c48)))OR(t0.c51)))AND(t0.c48)))AND(t0.c51))))) ORDER BY (((t0.c51, t0.c51, t0.c48)) BETWEEN ((((t0.c48)GLOB(t0.c51)), TRIM(DISTINCT t0.c51, t0.c51), (((t0.c51)) NOT BETWEEN ((t0.c51)) AND (('-1240827577'))))) AND ((UPPER(DISTINCT t0.c48), ((-1.52475683E9) BETWEEN (t0.c51) AND (t0.c48)), UNICODE(t0.c51)))) ASC;
SELECT * FROM vt1 WHERE ((((((((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))AND(((vt1.c2)|(vt1.c1)))))AND((vt1.c0 IN ()))))AND(((vt1.c0)<>(vt1.c2)))))OR(vt1.c2)));
SELECT SUM(count) FROM (SELECT (((((((((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))AND(((vt1.c2)|(vt1.c1)))))AND((vt1.c0 IN ()))))AND(((vt1.c0)<>(vt1.c2)))))OR(vt1.c2))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))AND(((vt1.c2)|(vt1.c1)))))AND((vt1.c0 IN ()))))AND(((vt1.c0)<>(vt1.c2)))))OR(vt1.c2)));
SELECT SUM(count) FROM (SELECT (((((((((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))AND(((vt1.c2)|(vt1.c1)))))AND((vt1.c0 IN ()))))AND(((vt1.c0)<>(vt1.c2)))))OR(vt1.c2))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))AND(((vt1.c2)|(vt1.c1)))))AND((vt1.c0 IN ()))))AND(((vt1.c0)<>(vt1.c2)))))OR(vt1.c2)));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))>(((vt0.c0)=(vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))>(((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))>(((vt0.c0)=(vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))>(((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))>(((vt0.c0)=(vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((NULL, ((((t0.c51)OR(t0.c51)))OR(t0.c48)), UNLIKELY(t0.c51)))==((((((((((t0.c51)AND(t0.c48)))OR(t0.c51)))OR(t0.c51)))AND(t0.c51)), ((((((((((((t0.c48)AND(t0.c48)))OR(t0.c51)))AND(t0.c48)))AND(t0.c51)))OR(t0.c51)))AND(t0.c51)), t0.c51)))) ORDER BY TRIM(t0.c51 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((NULL, ((((t0.c51)OR(t0.c51)))OR(t0.c48)), UNLIKELY(t0.c51)))=((((((((((t0.c51)AND(t0.c48)))OR(t0.c51)))OR(t0.c51)))AND(t0.c51)), ((((((((((((t0.c48)AND(t0.c48)))OR(t0.c51)))AND(t0.c48)))AND(t0.c51)))OR(t0.c51)))AND(t0.c51)), t0.c51)))) IS TRUE)  as count FROM t0 ORDER BY TRIM(t0.c51 COLLATE BINARY));
SELECT COUNT(*) FROM t0 WHERE ((((NULL, ((((t0.c51)OR(t0.c51)))OR(t0.c48)), UNLIKELY(t0.c51)))==((((((((((t0.c51)AND(t0.c48)))OR(t0.c51)))OR(t0.c51)))AND(t0.c51)), ((((((((((((t0.c48)AND(t0.c48)))OR(t0.c51)))AND(t0.c48)))AND(t0.c51)))OR(t0.c51)))AND(t0.c51)), t0.c51)))) ORDER BY TRIM(t0.c51 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((NULL, ((((t0.c51)OR(t0.c51)))OR(t0.c48)), UNLIKELY(t0.c51)))=((((((((((t0.c51)AND(t0.c48)))OR(t0.c51)))OR(t0.c51)))AND(t0.c51)), ((((((((((((t0.c48)AND(t0.c48)))OR(t0.c51)))AND(t0.c48)))AND(t0.c51)))OR(t0.c51)))AND(t0.c51)), t0.c51)))) IS TRUE)  as count FROM t0 ORDER BY TRIM(t0.c51 COLLATE BINARY));
SELECT COUNT(*) FROM t0 WHERE ((((NULL, ((((t0.c51)OR(t0.c51)))OR(t0.c48)), UNLIKELY(t0.c51)))==((((((((((t0.c51)AND(t0.c48)))OR(t0.c51)))OR(t0.c51)))AND(t0.c51)), ((((((((((((t0.c48)AND(t0.c48)))OR(t0.c51)))AND(t0.c48)))AND(t0.c51)))OR(t0.c51)))AND(t0.c51)), t0.c51)))) ORDER BY TRIM(t0.c51 COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)AND(vt0.c0)))>=(((((((((((((x'')AND(vt0.c0)))AND(vt1.c2)))OR(vt1.c1)))OR(vt1.c0)))AND('0.6493975186171864')))OR(vt0.c0))))) ORDER BY (+ (((vt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))>=(((((((((((((x'')AND(vt0.c0)))AND(vt1.c2)))OR(vt1.c1)))OR(vt1.c0)))AND('0.6493975186171864')))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ (((vt0.c0) IS FALSE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)AND(vt0.c0)))>=(((((((((((((x'')AND(vt0.c0)))AND(vt1.c2)))OR(vt1.c1)))OR(vt1.c0)))AND('0.6493975186171864')))OR(vt0.c0))))) ORDER BY (+ (((vt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))>=(((((((((((((x'')AND(vt0.c0)))AND(vt1.c2)))OR(vt1.c1)))OR(vt1.c0)))AND('0.6493975186171864')))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ (((vt0.c0) IS FALSE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)AND(vt0.c0)))>=(((((((((((((x'')AND(vt0.c0)))AND(vt1.c2)))OR(vt1.c1)))OR(vt1.c0)))AND('0.6493975186171864')))OR(vt0.c0))))) ORDER BY (+ (((vt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((0.2647090288353645)LIKE(((vt0.c0) IS TRUE)))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((0.2647090288353645)LIKE(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (((0.2647090288353645)LIKE(((vt0.c0) IS TRUE)))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((0.2647090288353645)LIKE(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (((0.2647090288353645)LIKE(((vt0.c0) IS TRUE)))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((t0.c48) NOT BETWEEN (t0.c51 COLLATE NOCASE) AND (((t0.c48)%(t0.c51)))) WHERE (43860000) ORDER BY CASE (t0.c48 IN ())  WHEN ((NULL)GLOB(vt0.c0)) THEN ((((t0.c48)OR(x'43e9')))AND(vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((43860000) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((t0.c48) NOT BETWEEN (t0.c51 COLLATE NOCASE) AND (((t0.c48)%(t0.c51)))) ORDER BY CASE (t0.c48 IN ())  WHEN ((NULL)GLOB(vt0.c0)) THEN ((((t0.c48)OR(x'43e9')))AND(vt0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((t0.c48) NOT BETWEEN (t0.c51 COLLATE NOCASE) AND (((t0.c48)%(t0.c51)))) WHERE (43860000) ORDER BY CASE (t0.c48 IN ())  WHEN ((NULL)GLOB(vt0.c0)) THEN ((((t0.c48)OR(x'43e9')))AND(vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((43860000) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((t0.c48) NOT BETWEEN (t0.c51 COLLATE NOCASE) AND (((t0.c48)%(t0.c51)))) ORDER BY CASE (t0.c48 IN ())  WHEN ((NULL)GLOB(vt0.c0)) THEN ((((t0.c48)OR(x'43e9')))AND(vt0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((t0.c48) NOT BETWEEN (t0.c51 COLLATE NOCASE) AND (((t0.c48)%(t0.c51)))) WHERE (43860000) ORDER BY CASE (t0.c48 IN ())  WHEN ((NULL)GLOB(vt0.c0)) THEN ((((t0.c48)OR(x'43e9')))AND(vt0.c0)) END DESC  NULLS FIRST;
SELECT * FROM vt1, t0 INDEXED BY i62 RIGHT OUTER JOIN vt0 ON (+ (vt1.c2 COLLATE RTRIM)) WHERE (((vt1.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM vt1, t0 INDEXED BY i62 RIGHT OUTER JOIN vt0 ON (+ (vt1.c2 COLLATE RTRIM)));
SELECT * FROM vt1, t0 INDEXED BY i62 RIGHT OUTER JOIN vt0 ON (+ (vt1.c2 COLLATE RTRIM)) WHERE (((vt1.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM vt1, t0 INDEXED BY i62 RIGHT OUTER JOIN vt0 ON (+ (vt1.c2 COLLATE RTRIM)));
SELECT * FROM vt1, t0 INDEXED BY i62 RIGHT OUTER JOIN vt0 ON (+ (vt1.c2 COLLATE RTRIM)) WHERE (((vt1.c0) IS TRUE));
SELECT ALL * FROM vt0, t0 WHERE (((ABS(vt0.c0)) BETWEEN ((('1079524556')LIKE(vt0.c0))) AND (((vt0.c0)AND(t0.c48))))) ORDER BY ((((((t0.c48)AND(t0.c51)))AND(t0.c51))) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c51) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (t0.c51) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((ABS(vt0.c0)) BETWEEN ((('1079524556')LIKE(vt0.c0))) AND (((vt0.c0)AND(t0.c48))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((t0.c48)AND(t0.c51)))AND(t0.c51))) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c51) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (t0.c51) AND (vt0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (((ABS(vt0.c0)) BETWEEN ((('1079524556')LIKE(vt0.c0))) AND (((vt0.c0)AND(t0.c48))))) ORDER BY ((((((t0.c48)AND(t0.c51)))AND(t0.c51))) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c51) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (t0.c51) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((ABS(vt0.c0)) BETWEEN ((('1079524556')LIKE(vt0.c0))) AND (((vt0.c0)AND(t0.c48))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((t0.c48)AND(t0.c51)))AND(t0.c51))) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c51) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (t0.c51) AND (vt0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (((ABS(vt0.c0)) BETWEEN ((('1079524556')LIKE(vt0.c0))) AND (((vt0.c0)AND(t0.c48))))) ORDER BY ((((((t0.c48)AND(t0.c51)))AND(t0.c51))) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c51) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (t0.c51) AND (vt0.c0))));
SELECT COUNT(*) FROM vt1, t0 WHERE (((((vt1.c1)AND(((((((((t0.c51)OR(t0.c48)))OR(t0.c48)))AND(t0.c48)))AND(vt1.c1)))))AND(((t0.c48) NOT NULL)))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)AND(((((((((t0.c51)OR(t0.c48)))OR(t0.c48)))AND(t0.c48)))AND(vt1.c1)))))AND(((t0.c48) NOT NULL)))) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((vt1.c1)AND(((((((((t0.c51)OR(t0.c48)))OR(t0.c48)))AND(t0.c48)))AND(vt1.c1)))))AND(((t0.c48) NOT NULL)))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)AND(((((((((t0.c51)OR(t0.c48)))OR(t0.c48)))AND(t0.c48)))AND(vt1.c1)))))AND(((t0.c48) NOT NULL)))) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((vt1.c1)AND(((((((((t0.c51)OR(t0.c48)))OR(t0.c48)))AND(t0.c48)))AND(vt1.c1)))))AND(((t0.c48) NOT NULL)))) ORDER BY vt1.c0  NULLS FIRST;
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (0.1570578845699745);
SELECT SUM(count) FROM (SELECT ((0.1570578845699745) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (0.1570578845699745);
SELECT SUM(count) FROM (SELECT ((0.1570578845699745) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (0.1570578845699745);
SELECT COUNT(*) FROM vt1 WHERE (CASE LIKELIHOOD(DISTINCT vt1.c2, 0.7210323129686613)  WHEN CAST(vt1.c1 AS BLOB) THEN CASE WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c0 THEN 0.5919099113271138 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c0 END WHEN (vt1.c1 IN ()) THEN ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2)) WHEN ((vt1.c2)%(vt1.c1)) THEN CAST(vt1.c2 AS TEXT) END) ORDER BY (vt1.c1 COLLATE RTRIM IN ())  NULLS FIRST, (('uD<') NOTNULL), (LIKELY(DISTINCT vt1.c0) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE LIKELIHOOD(DISTINCT vt1.c2, 0.7210323129686613)  WHEN CAST(vt1.c1 AS BLOB) THEN CASE WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c0 THEN 0.5919099113271138 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c0 END WHEN (vt1.c1 IN ()) THEN ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2)) WHEN ((vt1.c2)%(vt1.c1)) THEN CAST(vt1.c2 AS TEXT) END) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 COLLATE RTRIM IN ())  NULLS FIRST, (('uD<') NOTNULL), (LIKELY(DISTINCT vt1.c0) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE LIKELIHOOD(DISTINCT vt1.c2, 0.7210323129686613)  WHEN CAST(vt1.c1 AS BLOB) THEN CASE WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c0 THEN 0.5919099113271138 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c0 END WHEN (vt1.c1 IN ()) THEN ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2)) WHEN ((vt1.c2)%(vt1.c1)) THEN CAST(vt1.c2 AS TEXT) END) ORDER BY (vt1.c1 COLLATE RTRIM IN ())  NULLS FIRST, (('uD<') NOTNULL), (LIKELY(DISTINCT vt1.c0) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE LIKELIHOOD(DISTINCT vt1.c2, 0.7210323129686613)  WHEN CAST(vt1.c1 AS BLOB) THEN CASE WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c0 THEN 0.5919099113271138 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c0 END WHEN (vt1.c1 IN ()) THEN ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2)) WHEN ((vt1.c2)%(vt1.c1)) THEN CAST(vt1.c2 AS TEXT) END) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 COLLATE RTRIM IN ())  NULLS FIRST, (('uD<') NOTNULL), (LIKELY(DISTINCT vt1.c0) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE LIKELIHOOD(DISTINCT vt1.c2, 0.7210323129686613)  WHEN CAST(vt1.c1 AS BLOB) THEN CASE WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c0 THEN 0.5919099113271138 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c0 END WHEN (vt1.c1 IN ()) THEN ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2)) WHEN ((vt1.c2)%(vt1.c1)) THEN CAST(vt1.c2 AS TEXT) END) ORDER BY (vt1.c1 COLLATE RTRIM IN ())  NULLS FIRST, (('uD<') NOTNULL), (LIKELY(DISTINCT vt1.c0) IN ()) ASC  NULLS LAST;
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt1.c2) NOT NULL))IS NOT(CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c1 END)) FULL OUTER JOIN t0 ON ((vt1.c1)||((NOT (vt0.c0)))) WHERE (vt0.c0) ORDER BY ((CASE WHEN t0.c51 THEN t0.c51 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN t0.c48 ELSE vt1.c1 END)==(((vt0.c0)*(vt0.c0))))  NULLS LAST, (((~ (vt0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((vt1.c2) NOT NULL))IS NOT(CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c1 END)) FULL OUTER JOIN t0 ON ((vt1.c1)||((NOT (vt0.c0)))) ORDER BY ((CASE WHEN t0.c51 THEN t0.c51 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN t0.c48 ELSE vt1.c1 END)=(((vt0.c0)*(vt0.c0))))  NULLS LAST, (((~ (vt0.c0))) NOT NULL) DESC);
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt1.c2) NOT NULL))IS NOT(CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c1 END)) FULL OUTER JOIN t0 ON ((vt1.c1)||((NOT (vt0.c0)))) WHERE (vt0.c0) ORDER BY ((CASE WHEN t0.c51 THEN t0.c51 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN t0.c48 ELSE vt1.c1 END)==(((vt0.c0)*(vt0.c0))))  NULLS LAST, (((~ (vt0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((vt1.c2) NOT NULL))IS NOT(CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c1 END)) FULL OUTER JOIN t0 ON ((vt1.c1)||((NOT (vt0.c0)))) ORDER BY ((CASE WHEN t0.c51 THEN t0.c51 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN t0.c48 ELSE vt1.c1 END)=(((vt0.c0)*(vt0.c0))))  NULLS LAST, (((~ (vt0.c0))) NOT NULL) DESC);
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt1.c2) NOT NULL))IS NOT(CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c1 END)) FULL OUTER JOIN t0 ON ((vt1.c1)||((NOT (vt0.c0)))) WHERE (vt0.c0) ORDER BY ((CASE WHEN t0.c51 THEN t0.c51 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN t0.c48 ELSE vt1.c1 END)==(((vt0.c0)*(vt0.c0))))  NULLS LAST, (((~ (vt0.c0))) NOT NULL) DESC;
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((((vt1.c0)OR(t0.c48)))OR(vt1.c1))) BETWEEN (CAST(t0.c48 AS REAL)) AND (((t0.c48)GLOB(t0.c51))))) ORDER BY ((0.007879887444553701 IN (t0.c51, vt1.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(t0.c48)))OR(vt1.c1))) BETWEEN (CAST(t0.c48 AS REAL)) AND (((t0.c48)GLOB(t0.c51))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((0.007879887444553701 IN (t0.c51, vt1.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((((vt1.c0)OR(t0.c48)))OR(vt1.c1))) BETWEEN (CAST(t0.c48 AS REAL)) AND (((t0.c48)GLOB(t0.c51))))) ORDER BY ((0.007879887444553701 IN (t0.c51, vt1.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(t0.c48)))OR(vt1.c1))) BETWEEN (CAST(t0.c48 AS REAL)) AND (((t0.c48)GLOB(t0.c51))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((0.007879887444553701 IN (t0.c51, vt1.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((((vt1.c0)OR(t0.c48)))OR(vt1.c1))) BETWEEN (CAST(t0.c48 AS REAL)) AND (((t0.c48)GLOB(t0.c51))))) ORDER BY ((0.007879887444553701 IN (t0.c51, vt1.c0)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0) IS FALSE));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CASE ((vt1.c0)!=(vt0.c0))  WHEN ((t0.c48) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (t0.c48) AND (vt1.c0)) WHEN ((vt1.c2) IS FALSE) THEN ((t0.c51) IS FALSE) WHEN vt1.c1 THEN (- (0x1744136c)) WHEN ((((vt1.c1)OR('-810818944')))AND(t0.c51)) THEN ((vt0.c0)/(vt1.c1)) WHEN (((vt0.c0))<>(('iF'))) THEN ((((vt0.c0)AND(t0.c48)))AND(vt1.c1)) END) ORDER BY ((vt1.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)<>(vt0.c0))  WHEN ((t0.c48) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (t0.c48) AND (vt1.c0)) WHEN ((vt1.c2) IS FALSE) THEN ((t0.c51) IS FALSE) WHEN vt1.c1 THEN (- (0x1744136c)) WHEN ((((vt1.c1)OR('-810818944')))AND(t0.c51)) THEN ((vt0.c0)/(vt1.c1)) WHEN (((vt0.c0))<>(('iF'))) THEN ((((vt0.c0)AND(t0.c48)))AND(vt1.c1)) END) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((vt1.c0) IS FALSE));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CASE ((vt1.c0)!=(vt0.c0))  WHEN ((t0.c48) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (t0.c48) AND (vt1.c0)) WHEN ((vt1.c2) IS FALSE) THEN ((t0.c51) IS FALSE) WHEN vt1.c1 THEN (- (0x1744136c)) WHEN ((((vt1.c1)OR('-810818944')))AND(t0.c51)) THEN ((vt0.c0)/(vt1.c1)) WHEN (((vt0.c0))<>(('iF'))) THEN ((((vt0.c0)AND(t0.c48)))AND(vt1.c1)) END) ORDER BY ((vt1.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)<>(vt0.c0))  WHEN ((t0.c48) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (t0.c48) AND (vt1.c0)) WHEN ((vt1.c2) IS FALSE) THEN ((t0.c51) IS FALSE) WHEN vt1.c1 THEN (- (0x1744136c)) WHEN ((((vt1.c1)OR('-810818944')))AND(t0.c51)) THEN ((vt0.c0)/(vt1.c1)) WHEN (((vt0.c0))<>(('iF'))) THEN ((((vt0.c0)AND(t0.c48)))AND(vt1.c1)) END) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((vt1.c0) IS FALSE));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CASE ((vt1.c0)!=(vt0.c0))  WHEN ((t0.c48) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (t0.c48) AND (vt1.c0)) WHEN ((vt1.c2) IS FALSE) THEN ((t0.c51) IS FALSE) WHEN vt1.c1 THEN (- (0x1744136c)) WHEN ((((vt1.c1)OR('-810818944')))AND(t0.c51)) THEN ((vt0.c0)/(vt1.c1)) WHEN (((vt0.c0))<>(('iF'))) THEN ((((vt0.c0)AND(t0.c48)))AND(vt1.c1)) END) ORDER BY ((vt1.c0) IS FALSE);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN ((vt1.c1)IS NOT(vt1.c1)) THEN vt1.c0 COLLATE RTRIM END) ORDER BY ((t0.c48) NOTNULL) COLLATE RTRIM  NULLS LAST, ((((((vt1.c1)AND(vt1.c1)))AND(t0.c48))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1)IS NOT(vt1.c1)) THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((t0.c48) NOTNULL) COLLATE RTRIM  NULLS LAST, ((((((vt1.c1)AND(vt1.c1)))AND(t0.c48))) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN ((vt1.c1)IS NOT(vt1.c1)) THEN vt1.c0 COLLATE RTRIM END) ORDER BY ((t0.c48) NOTNULL) COLLATE RTRIM  NULLS LAST, ((((((vt1.c1)AND(vt1.c1)))AND(t0.c48))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1)IS NOT(vt1.c1)) THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((t0.c48) NOTNULL) COLLATE RTRIM  NULLS LAST, ((((((vt1.c1)AND(vt1.c1)))AND(t0.c48))) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN ((vt1.c1)IS NOT(vt1.c1)) THEN vt1.c0 COLLATE RTRIM END) ORDER BY ((t0.c48) NOTNULL) COLLATE RTRIM  NULLS LAST, ((((((vt1.c1)AND(vt1.c1)))AND(t0.c48))) IS TRUE) DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c51) IS TRUE)) IS FALSE)) ORDER BY ((((vt0.c0, vt0.c0, t0.c51))>((t0.c48, 0.019373557327010293, t0.c48))) IN (((((((((t0.c48)AND(t0.c51)))AND(vt0.c0)))OR(t0.c48)))OR(x'7bd3')))) ASC, (CASE WHEN vt0.c0 THEN t0.c51 ELSE vt0.c0 END IN (CASE 0.7763926780591732  WHEN t0.c48 THEN t0.c48 ELSE t0.c51 END, ((vt0.c0) NOT BETWEEN ('-1647699573') AND (x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0, vt0.c0, t0.c51))>((t0.c48, 0.019373557327010293, t0.c48))) IN (((((((((t0.c48)AND(t0.c51)))AND(vt0.c0)))OR(t0.c48)))OR(x'7bd3')))) ASC, (CASE WHEN vt0.c0 THEN t0.c51 ELSE vt0.c0 END IN (CASE 0.7763926780591732  WHEN t0.c48 THEN t0.c48 ELSE t0.c51 END, ((vt0.c0) NOT BETWEEN ('-1647699573') AND (x'')))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c51) IS TRUE)) IS FALSE)) ORDER BY ((((vt0.c0, vt0.c0, t0.c51))>((t0.c48, 0.019373557327010293, t0.c48))) IN (((((((((t0.c48)AND(t0.c51)))AND(vt0.c0)))OR(t0.c48)))OR(x'7bd3')))) ASC, (CASE WHEN vt0.c0 THEN t0.c51 ELSE vt0.c0 END IN (CASE 0.7763926780591732  WHEN t0.c48 THEN t0.c48 ELSE t0.c51 END, ((vt0.c0) NOT BETWEEN ('-1647699573') AND (x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0, vt0.c0, t0.c51))>((t0.c48, 0.019373557327010293, t0.c48))) IN (((((((((t0.c48)AND(t0.c51)))AND(vt0.c0)))OR(t0.c48)))OR(x'7bd3')))) ASC, (CASE WHEN vt0.c0 THEN t0.c51 ELSE vt0.c0 END IN (CASE 0.7763926780591732  WHEN t0.c48 THEN t0.c48 ELSE t0.c51 END, ((vt0.c0) NOT BETWEEN ('-1647699573') AND (x'')))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c51) IS TRUE)) IS FALSE)) ORDER BY ((((vt0.c0, vt0.c0, t0.c51))>((t0.c48, 0.019373557327010293, t0.c48))) IN (((((((((t0.c48)AND(t0.c51)))AND(vt0.c0)))OR(t0.c48)))OR(x'7bd3')))) ASC, (CASE WHEN vt0.c0 THEN t0.c51 ELSE vt0.c0 END IN (CASE 0.7763926780591732  WHEN t0.c48 THEN t0.c48 ELSE t0.c51 END, ((vt0.c0) NOT BETWEEN ('-1647699573') AND (x'')))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN t0 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN t0 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN t0 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ()));
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c2 AS REAL) AS NUMERIC)) ORDER BY CASE WHEN CAST(vt1.c1 AS REAL) THEN '' WHEN (~ (vt1.c1)) THEN (0.14110591936769612 IN ()) WHEN ((vt1.c2) NOTNULL) THEN (((vt1.c2, vt1.c1, vt1.c2)) BETWEEN ((vt1.c0, vt1.c2, vt1.c2)) AND ((vt1.c0, vt1.c0, vt1.c1))) ELSE ((((vt1.c2)AND(vt1.c0)))AND(vt1.c2)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c2 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CAST(vt1.c1 AS REAL) THEN '' WHEN (~ (vt1.c1)) THEN (0.14110591936769612 IN ()) WHEN ((vt1.c2) NOTNULL) THEN (((vt1.c2, vt1.c1, vt1.c2)) BETWEEN ((vt1.c0, vt1.c2, vt1.c2)) AND ((vt1.c0, vt1.c0, vt1.c1))) ELSE ((((vt1.c2)AND(vt1.c0)))AND(vt1.c2)) END ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c2 AS REAL) AS NUMERIC)) ORDER BY CASE WHEN CAST(vt1.c1 AS REAL) THEN '' WHEN (~ (vt1.c1)) THEN (0.14110591936769612 IN ()) WHEN ((vt1.c2) NOTNULL) THEN (((vt1.c2, vt1.c1, vt1.c2)) BETWEEN ((vt1.c0, vt1.c2, vt1.c2)) AND ((vt1.c0, vt1.c0, vt1.c1))) ELSE ((((vt1.c2)AND(vt1.c0)))AND(vt1.c2)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c2 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CAST(vt1.c1 AS REAL) THEN '' WHEN (~ (vt1.c1)) THEN (0.14110591936769612 IN ()) WHEN ((vt1.c2) NOTNULL) THEN (((vt1.c2, vt1.c1, vt1.c2)) BETWEEN ((vt1.c0, vt1.c2, vt1.c2)) AND ((vt1.c0, vt1.c0, vt1.c1))) ELSE ((((vt1.c2)AND(vt1.c0)))AND(vt1.c2)) END ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c2 AS REAL) AS NUMERIC)) ORDER BY CASE WHEN CAST(vt1.c1 AS REAL) THEN '' WHEN (~ (vt1.c1)) THEN (0.14110591936769612 IN ()) WHEN ((vt1.c2) NOTNULL) THEN (((vt1.c2, vt1.c1, vt1.c2)) BETWEEN ((vt1.c0, vt1.c2, vt1.c2)) AND ((vt1.c0, vt1.c0, vt1.c1))) ELSE ((((vt1.c2)AND(vt1.c0)))AND(vt1.c2)) END ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE ('[.') ORDER BY (((- (t0.c51)))>(((t0.c48) BETWEEN (t0.c48) AND (t0.c51)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('[.') IS TRUE)  as count FROM t0, vt0 ORDER BY (((- (t0.c51)))>(((t0.c48) BETWEEN (t0.c48) AND (t0.c51)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ('[.') ORDER BY (((- (t0.c51)))>(((t0.c48) BETWEEN (t0.c48) AND (t0.c51)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('[.') IS TRUE)  as count FROM t0, vt0 ORDER BY (((- (t0.c51)))>(((t0.c48) BETWEEN (t0.c48) AND (t0.c51)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ('[.') ORDER BY (((- (t0.c51)))>(((t0.c48) BETWEEN (t0.c48) AND (t0.c51)))) DESC  NULLS LAST;
SELECT * FROM vt0, vt1, t0 WHERE (CASE x''  WHEN vt0.c0 THEN t0.c51 WHEN vt0.c0 THEN t0.c51 WHEN t0.c48 THEN t0.c48 WHEN vt1.c1 THEN 0.6967282879928047 WHEN t0.c51 THEN t0.c48 END COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((t0.c48)&(vt1.c1)))OR(((((vt1.c2)OR(vt1.c1)))OR(vt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN vt0.c0 THEN t0.c51 WHEN vt0.c0 THEN t0.c51 WHEN t0.c48 THEN t0.c48 WHEN vt1.c1 THEN 0.6967282879928047 WHEN t0.c51 THEN t0.c48 END COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((t0.c48)&(vt1.c1)))OR(((((vt1.c2)OR(vt1.c1)))OR(vt1.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE (CASE x''  WHEN vt0.c0 THEN t0.c51 WHEN vt0.c0 THEN t0.c51 WHEN t0.c48 THEN t0.c48 WHEN vt1.c1 THEN 0.6967282879928047 WHEN t0.c51 THEN t0.c48 END COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((t0.c48)&(vt1.c1)))OR(((((vt1.c2)OR(vt1.c1)))OR(vt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN vt0.c0 THEN t0.c51 WHEN vt0.c0 THEN t0.c51 WHEN t0.c48 THEN t0.c48 WHEN vt1.c1 THEN 0.6967282879928047 WHEN t0.c51 THEN t0.c48 END COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((t0.c48)&(vt1.c1)))OR(((((vt1.c2)OR(vt1.c1)))OR(vt1.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE (CASE x''  WHEN vt0.c0 THEN t0.c51 WHEN vt0.c0 THEN t0.c51 WHEN t0.c48 THEN t0.c48 WHEN vt1.c1 THEN 0.6967282879928047 WHEN t0.c51 THEN t0.c48 END COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((t0.c48)&(vt1.c1)))OR(((((vt1.c2)OR(vt1.c1)))OR(vt1.c2)))) ASC  NULLS FIRST;
SELECT * FROM vt0, t0, vt1 WHERE (CAST(((vt1.c2)AND(x'')) AS TEXT)) ORDER BY CASE WHEN CAST(t0.c51 AS BLOB) THEN t0.c51 COLLATE RTRIM ELSE ((((((((t0.c48)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(0x18e4bd60)) END ASC  NULLS LAST, CAST(((vt1.c2) BETWEEN (vt1.c0) AND (t0.c48)) AS INTEGER) ASC  NULLS FIRST, CAST('' AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2)AND(x'')) AS TEXT)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CASE WHEN CAST(t0.c51 AS BLOB) THEN t0.c51 COLLATE RTRIM ELSE ((((((((t0.c48)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(0X18e4bd60)) END ASC  NULLS LAST, CAST(((vt1.c2) BETWEEN (vt1.c0) AND (t0.c48)) AS INTEGER) ASC  NULLS FIRST, CAST('' AS REAL)  NULLS FIRST);
SELECT * FROM vt0, t0, vt1 WHERE (CAST(((vt1.c2)AND(x'')) AS TEXT)) ORDER BY CASE WHEN CAST(t0.c51 AS BLOB) THEN t0.c51 COLLATE RTRIM ELSE ((((((((t0.c48)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(0x18e4bd60)) END ASC  NULLS LAST, CAST(((vt1.c2) BETWEEN (vt1.c0) AND (t0.c48)) AS INTEGER) ASC  NULLS FIRST, CAST('' AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2)AND(x'')) AS TEXT)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CASE WHEN CAST(t0.c51 AS BLOB) THEN t0.c51 COLLATE RTRIM ELSE ((((((((t0.c48)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(0X18e4bd60)) END ASC  NULLS LAST, CAST(((vt1.c2) BETWEEN (vt1.c0) AND (t0.c48)) AS INTEGER) ASC  NULLS FIRST, CAST('' AS REAL)  NULLS FIRST);
SELECT * FROM vt0, t0, vt1 WHERE (CAST(((vt1.c2)AND(x'')) AS TEXT)) ORDER BY CASE WHEN CAST(t0.c51 AS BLOB) THEN t0.c51 COLLATE RTRIM ELSE ((((((((t0.c48)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(0x18e4bd60)) END ASC  NULLS LAST, CAST(((vt1.c2) BETWEEN (vt1.c0) AND (t0.c48)) AS INTEGER) ASC  NULLS FIRST, CAST('' AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON 0X7dd149b1 WHERE ((((((('')*(vt1.c0)))OR(CAST(vt1.c1 AS REAL))))AND('g~<5I')));
SELECT SUM(count) FROM (SELECT ALL (((((((('')*(vt1.c0)))OR(CAST(vt1.c1 AS REAL))))AND('g~<5I'))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON 0X7dd149b1);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON 0X7dd149b1 WHERE ((((((('')*(vt1.c0)))OR(CAST(vt1.c1 AS REAL))))AND('g~<5I')));
SELECT SUM(count) FROM (SELECT ALL (((((((('')*(vt1.c0)))OR(CAST(vt1.c1 AS REAL))))AND('g~<5I'))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON 0X7dd149b1);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON 0X7dd149b1 WHERE ((((((('')*(vt1.c0)))OR(CAST(vt1.c1 AS REAL))))AND('g~<5I')));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))));
SELECT * FROM t0, vt0 INNER JOIN vt1 ON ((((HEX(vt1.c2))OR(CASE WHEN t0.c48 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN t0.c48 END)))OR((t0.c51 IN ()))) WHERE ((+ (((t0.c51) IS FALSE)))) ORDER BY CASE ((t0.c48)<=(vt1.c1))  WHEN CAST(vt1.c1 AS NUMERIC) THEN ((t0.c48) BETWEEN (t0.c48) AND (0.122580935567005)) ELSE HEX(vt1.c2) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c51) IS FALSE)))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON ((((HEX(vt1.c2))OR(CASE WHEN t0.c48 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN t0.c48 END)))OR((t0.c51 IN ()))) ORDER BY CASE ((t0.c48)<=(vt1.c1))  WHEN CAST(vt1.c1 AS NUMERIC) THEN ((t0.c48) BETWEEN (t0.c48) AND (0.122580935567005)) ELSE HEX(vt1.c2) END ASC  NULLS LAST);
SELECT * FROM t0, vt0 INNER JOIN vt1 ON ((((HEX(vt1.c2))OR(CASE WHEN t0.c48 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN t0.c48 END)))OR((t0.c51 IN ()))) WHERE ((+ (((t0.c51) IS FALSE)))) ORDER BY CASE ((t0.c48)<=(vt1.c1))  WHEN CAST(vt1.c1 AS NUMERIC) THEN ((t0.c48) BETWEEN (t0.c48) AND (0.122580935567005)) ELSE HEX(vt1.c2) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c51) IS FALSE)))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON ((((HEX(vt1.c2))OR(CASE WHEN t0.c48 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN t0.c48 END)))OR((t0.c51 IN ()))) ORDER BY CASE ((t0.c48)<=(vt1.c1))  WHEN CAST(vt1.c1 AS NUMERIC) THEN ((t0.c48) BETWEEN (t0.c48) AND (0.122580935567005)) ELSE HEX(vt1.c2) END ASC  NULLS LAST);
SELECT * FROM t0, vt0 INNER JOIN vt1 ON ((((HEX(vt1.c2))OR(CASE WHEN t0.c48 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN t0.c48 END)))OR((t0.c51 IN ()))) WHERE ((+ (((t0.c51) IS FALSE)))) ORDER BY CASE ((t0.c48)<=(vt1.c1))  WHEN CAST(vt1.c1 AS NUMERIC) THEN ((t0.c48) BETWEEN (t0.c48) AND (0.122580935567005)) ELSE HEX(vt1.c2) END ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE ((((((((vt0.c0)OR(vt0.c0)))OR(x'943c')))OR(vt0.c0)))OR(0Xffffffffdc47652f))  WHEN CAST(vt0.c0 AS NUMERIC) THEN 0Xffffffffbafc8c96 ELSE (NOT (vt0.c0)) END) ORDER BY json_quote(vt0.c0 COLLATE BINARY) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.c0)OR(vt0.c0)))OR(x'943c')))OR(vt0.c0)))OR(0Xffffffffdc47652f))  WHEN CAST(vt0.c0 AS NUMERIC) THEN 0xffffffffbafc8c96 ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY json_quote(vt0.c0 COLLATE BINARY) DESC);
SELECT * FROM vt0 WHERE (CASE ((((((((vt0.c0)OR(vt0.c0)))OR(x'943c')))OR(vt0.c0)))OR(0Xffffffffdc47652f))  WHEN CAST(vt0.c0 AS NUMERIC) THEN 0Xffffffffbafc8c96 ELSE (NOT (vt0.c0)) END) ORDER BY json_quote(vt0.c0 COLLATE BINARY) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.c0)OR(vt0.c0)))OR(x'943c')))OR(vt0.c0)))OR(0Xffffffffdc47652f))  WHEN CAST(vt0.c0 AS NUMERIC) THEN 0xffffffffbafc8c96 ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY json_quote(vt0.c0 COLLATE BINARY) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c0)))) ORDER BY TRIM(json_array_length(x'')) ASC, CAST(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY TRIM(json_array_length(x'')) ASC, CAST(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c0)))) ORDER BY TRIM(json_array_length(x'')) ASC, CAST(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY TRIM(json_array_length(x'')) ASC, CAST(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON LIKELY((vt1.c0 IN (vt1.c2, vt1.c2, '0.39349849373465184'))) WHERE ((NULL IN (((vt1.c1)>>('')))));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (((vt1.c1)>>(''))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON LIKELY((vt1.c0 IN (vt1.c2, vt1.c2, '0.39349849373465184'))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON LIKELY((vt1.c0 IN (vt1.c2, vt1.c2, '0.39349849373465184'))) WHERE ((NULL IN (((vt1.c1)>>('')))));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (((vt1.c1)>>(''))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON LIKELY((vt1.c0 IN (vt1.c2, vt1.c2, '0.39349849373465184'))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON LIKELY((vt1.c0 IN (vt1.c2, vt1.c2, '0.39349849373465184'))) WHERE ((NULL IN (((vt1.c1)>>('')))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c51, t0.c48, '')) BETWEEN ((t0.c51, t0.c48, t0.c51)) AND ((t0.c48, t0.c48, t0.c48))))AND(((((t0.c48)AND(t0.c48)))OR(t0.c48)))))AND((NOT (NULL))))) ORDER BY ((((x'cc85e68d') BETWEEN (x'') AND (t0.c48)))<<(((((((((t0.c48)OR(t0.c48)))AND(t0.c48)))AND(t0.c51)))AND(t0.c51)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c51, t0.c48, '')) BETWEEN ((t0.c51, t0.c48, t0.c51)) AND ((t0.c48, t0.c48, t0.c48))))AND(((((t0.c48)AND(t0.c48)))OR(t0.c48)))))AND((NOT (NULL))))) IS TRUE)  as count FROM t0 ORDER BY ((((x'cc85e68d') BETWEEN (x'') AND (t0.c48)))<<(((((((((t0.c48)OR(t0.c48)))AND(t0.c48)))AND(t0.c51)))AND(t0.c51)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c51, t0.c48, '')) BETWEEN ((t0.c51, t0.c48, t0.c51)) AND ((t0.c48, t0.c48, t0.c48))))AND(((((t0.c48)AND(t0.c48)))OR(t0.c48)))))AND((NOT (NULL))))) ORDER BY ((((x'cc85e68d') BETWEEN (x'') AND (t0.c48)))<<(((((((((t0.c48)OR(t0.c48)))AND(t0.c48)))AND(t0.c51)))AND(t0.c51)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c51, t0.c48, '')) BETWEEN ((t0.c51, t0.c48, t0.c51)) AND ((t0.c48, t0.c48, t0.c48))))AND(((((t0.c48)AND(t0.c48)))OR(t0.c48)))))AND((NOT (NULL))))) IS TRUE)  as count FROM t0 ORDER BY ((((x'cc85e68d') BETWEEN (x'') AND (t0.c48)))<<(((((((((t0.c48)OR(t0.c48)))AND(t0.c48)))AND(t0.c51)))AND(t0.c51)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c51, t0.c48, '')) BETWEEN ((t0.c51, t0.c48, t0.c51)) AND ((t0.c48, t0.c48, t0.c48))))AND(((((t0.c48)AND(t0.c48)))OR(t0.c48)))))AND((NOT (NULL))))) ORDER BY ((((x'cc85e68d') BETWEEN (x'') AND (t0.c48)))<<(((((((((t0.c48)OR(t0.c48)))AND(t0.c48)))AND(t0.c51)))AND(t0.c51)))) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0)%(CASE WHEN vt1.c2 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (~ (((vt1.c1) IS TRUE))) ASC  NULLS FIRST, (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1))))>((vt0.c0))) DESC, vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)%(CASE WHEN vt1.c2 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (((vt1.c1) IS TRUE))) ASC  NULLS FIRST, (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1))))>((vt0.c0))) DESC, vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0)%(CASE WHEN vt1.c2 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (~ (((vt1.c1) IS TRUE))) ASC  NULLS FIRST, (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1))))>((vt0.c0))) DESC, vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)%(CASE WHEN vt1.c2 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (((vt1.c1) IS TRUE))) ASC  NULLS FIRST, (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1))))>((vt0.c0))) DESC, vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0)%(CASE WHEN vt1.c2 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (~ (((vt1.c1) IS TRUE))) ASC  NULLS FIRST, (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1))))>((vt0.c0))) DESC, vt0.c0 DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (LIKELIHOOD(t0.c51, 0.18206807921417412) COLLATE RTRIM) ORDER BY ((((((((((t0.c48)AND(t0.c48)))AND(t0.c51)))AND(t0.c48)))OR(t0.c51))) NOTNULL), ((CAST(t0.c48 AS BLOB)) BETWEEN (((((t0.c48)OR(t0.c48)))OR(t0.c51))) AND ((((t0.c51, t0.c51, t0.c48)) BETWEEN ((t0.c51, t0.c48, t0.c51)) AND ((t0.c51, t0.c51, t0.c48)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(t0.c51, 0.18206807921417412) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c48)AND(t0.c48)))AND(t0.c51)))AND(t0.c48)))OR(t0.c51))) NOTNULL), ((CAST(t0.c48 AS BLOB)) BETWEEN (((((t0.c48)OR(t0.c48)))OR(t0.c51))) AND ((((t0.c51, t0.c51, t0.c48)) BETWEEN ((t0.c51, t0.c48, t0.c51)) AND ((t0.c51, t0.c51, t0.c48)))))  NULLS LAST);
SELECT * FROM t0 WHERE (LIKELIHOOD(t0.c51, 0.18206807921417412) COLLATE RTRIM) ORDER BY ((((((((((t0.c48)AND(t0.c48)))AND(t0.c51)))AND(t0.c48)))OR(t0.c51))) NOTNULL), ((CAST(t0.c48 AS BLOB)) BETWEEN (((((t0.c48)OR(t0.c48)))OR(t0.c51))) AND ((((t0.c51, t0.c51, t0.c48)) BETWEEN ((t0.c51, t0.c48, t0.c51)) AND ((t0.c51, t0.c51, t0.c48)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(t0.c51, 0.18206807921417412) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c48)AND(t0.c48)))AND(t0.c51)))AND(t0.c48)))OR(t0.c51))) NOTNULL), ((CAST(t0.c48 AS BLOB)) BETWEEN (((((t0.c48)OR(t0.c48)))OR(t0.c51))) AND ((((t0.c51, t0.c51, t0.c48)) BETWEEN ((t0.c51, t0.c48, t0.c51)) AND ((t0.c51, t0.c51, t0.c48)))))  NULLS LAST);
SELECT * FROM t0 WHERE (LIKELIHOOD(t0.c51, 0.18206807921417412) COLLATE RTRIM) ORDER BY ((((((((((t0.c48)AND(t0.c48)))AND(t0.c51)))AND(t0.c48)))OR(t0.c51))) NOTNULL), ((CAST(t0.c48 AS BLOB)) BETWEEN (((((t0.c48)OR(t0.c48)))OR(t0.c51))) AND ((((t0.c51, t0.c51, t0.c48)) BETWEEN ((t0.c51, t0.c48, t0.c51)) AND ((t0.c51, t0.c51, t0.c48)))))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (t0.c51) ORDER BY CASE ((t0.c51) BETWEEN (vt1.c1) AND (vt1.c1))  WHEN ((vt1.c0) IS FALSE) THEN (('1855446628') IS FALSE) END DESC, ((vt1.c0 COLLATE RTRIM)==(x'112b')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c51) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE ((t0.c51) BETWEEN (vt1.c1) AND (vt1.c1))  WHEN ((vt1.c0) IS FALSE) THEN (('1855446628') IS FALSE) END DESC, ((vt1.c0 COLLATE RTRIM)==(x'112b')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (t0.c51) ORDER BY CASE ((t0.c51) BETWEEN (vt1.c1) AND (vt1.c1))  WHEN ((vt1.c0) IS FALSE) THEN (('1855446628') IS FALSE) END DESC, ((vt1.c0 COLLATE RTRIM)==(x'112b')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c51) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE ((t0.c51) BETWEEN (vt1.c1) AND (vt1.c1))  WHEN ((vt1.c0) IS FALSE) THEN (('1855446628') IS FALSE) END DESC, ((vt1.c0 COLLATE RTRIM)==(x'112b')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (t0.c51) ORDER BY CASE ((t0.c51) BETWEEN (vt1.c1) AND (vt1.c1))  WHEN ((vt1.c0) IS FALSE) THEN (('1855446628') IS FALSE) END DESC, ((vt1.c0 COLLATE RTRIM)==(x'112b')) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (- ((((vt1.c0)) BETWEEN ((t0.c51)) AND ((t0.c51))))) WHERE (((IFNULL(vt1.c0, vt1.c0))IS NOT(CASE vt1.c1  WHEN vt1.c1 THEN t0.c51 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 1.076439565E9 END))) ORDER BY ((vt1.c1) ISNULL), (((((t0.c51)) NOT BETWEEN ((NULL)) AND ((vt1.c1))))>(CAST(vt1.c2 AS BLOB))) ASC  NULLS LAST, ((CASE t0.c51  WHEN t0.c48 THEN '' ELSE vt1.c1 END)AND(((vt1.c1)>=(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt1.c0, vt1.c0))IS NOT(CASE vt1.c1  WHEN vt1.c1 THEN t0.c51 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 1.076439565E9 END))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (- ((((vt1.c0)) BETWEEN ((t0.c51)) AND ((t0.c51))))) ORDER BY ((vt1.c1) ISNULL), (((((t0.c51)) NOT BETWEEN ((NULL)) AND ((vt1.c1))))>(CAST(vt1.c2 AS BLOB))) ASC  NULLS LAST, ((CASE t0.c51  WHEN t0.c48 THEN '' ELSE vt1.c1 END)AND(((vt1.c1)>=(vt1.c1)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (- ((((vt1.c0)) BETWEEN ((t0.c51)) AND ((t0.c51))))) WHERE (((IFNULL(vt1.c0, vt1.c0))IS NOT(CASE vt1.c1  WHEN vt1.c1 THEN t0.c51 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 1.076439565E9 END))) ORDER BY ((vt1.c1) ISNULL), (((((t0.c51)) NOT BETWEEN ((NULL)) AND ((vt1.c1))))>(CAST(vt1.c2 AS BLOB))) ASC  NULLS LAST, ((CASE t0.c51  WHEN t0.c48 THEN '' ELSE vt1.c1 END)AND(((vt1.c1)>=(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt1.c0, vt1.c0))IS NOT(CASE vt1.c1  WHEN vt1.c1 THEN t0.c51 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 1.076439565E9 END))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (- ((((vt1.c0)) BETWEEN ((t0.c51)) AND ((t0.c51))))) ORDER BY ((vt1.c1) ISNULL), (((((t0.c51)) NOT BETWEEN ((NULL)) AND ((vt1.c1))))>(CAST(vt1.c2 AS BLOB))) ASC  NULLS LAST, ((CASE t0.c51  WHEN t0.c48 THEN '' ELSE vt1.c1 END)AND(((vt1.c1)>=(vt1.c1)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (- ((((vt1.c0)) BETWEEN ((t0.c51)) AND ((t0.c51))))) WHERE (((IFNULL(vt1.c0, vt1.c0))IS NOT(CASE vt1.c1  WHEN vt1.c1 THEN t0.c51 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 1.076439565E9 END))) ORDER BY ((vt1.c1) ISNULL), (((((t0.c51)) NOT BETWEEN ((NULL)) AND ((vt1.c1))))>(CAST(vt1.c2 AS BLOB))) ASC  NULLS LAST, ((CASE t0.c51  WHEN t0.c48 THEN '' ELSE vt1.c1 END)AND(((vt1.c1)>=(vt1.c1))));
SELECT COUNT(*) FROM vt1 WHERE (((((((((CAST(vt1.c0 AS REAL))OR(((vt1.c0)/(vt1.c0)))))AND(CASE WHEN vt1.c1 THEN vt1.c0 END)))AND(CASE WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((vt1.c0)IS(vt1.c0))))) ORDER BY x'' COLLATE NOCASE  NULLS FIRST, vt1.c2  NULLS LAST, ((vt1.c1) NOT BETWEEN (0.4543388340425455 COLLATE BINARY) AND (x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt1.c0 AS REAL))OR(((vt1.c0)/(vt1.c0)))))AND(CASE WHEN vt1.c1 THEN vt1.c0 END)))AND(CASE WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY x'' COLLATE NOCASE  NULLS FIRST, vt1.c2  NULLS LAST, ((vt1.c1) NOT BETWEEN (0.4543388340425455 COLLATE BINARY) AND (x'')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((CAST(vt1.c0 AS REAL))OR(((vt1.c0)/(vt1.c0)))))AND(CASE WHEN vt1.c1 THEN vt1.c0 END)))AND(CASE WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((vt1.c0)IS(vt1.c0))))) ORDER BY x'' COLLATE NOCASE  NULLS FIRST, vt1.c2  NULLS LAST, ((vt1.c1) NOT BETWEEN (0.4543388340425455 COLLATE BINARY) AND (x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt1.c0 AS REAL))OR(((vt1.c0)/(vt1.c0)))))AND(CASE WHEN vt1.c1 THEN vt1.c0 END)))AND(CASE WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY x'' COLLATE NOCASE  NULLS FIRST, vt1.c2  NULLS LAST, ((vt1.c1) NOT BETWEEN (0.4543388340425455 COLLATE BINARY) AND (x'')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((CAST(vt1.c0 AS REAL))OR(((vt1.c0)/(vt1.c0)))))AND(CASE WHEN vt1.c1 THEN vt1.c0 END)))AND(CASE WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((vt1.c0)IS(vt1.c0))))) ORDER BY x'' COLLATE NOCASE  NULLS FIRST, vt1.c2  NULLS LAST, ((vt1.c1) NOT BETWEEN (0.4543388340425455 COLLATE BINARY) AND (x'')) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((t0.c48)>>(vt1.c1)))OR(t0.c48))) ORDER BY ((vt1.c1) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)>>(vt1.c1)))OR(t0.c48))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((vt1.c1) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((t0.c48)>>(vt1.c1)))OR(t0.c48))) ORDER BY ((vt1.c1) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)>>(vt1.c1)))OR(t0.c48))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((vt1.c1) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((t0.c48)>>(vt1.c1)))OR(t0.c48))) ORDER BY ((vt1.c1) NOT NULL) ASC;
SELECT ALL * FROM t0, vt1, vt0 WHERE (CASE ((vt1.c0)AND(vt1.c0))  WHEN ((vt1.c2) NOT BETWEEN (t0.c51) AND (vt1.c2)) THEN ((x'15bc')>(vt1.c1)) WHEN t0.c51 THEN t0.c48 WHEN ((t0.c51)LIKE(t0.c48)) THEN x'' END) ORDER BY ((CASE vt1.c0  WHEN vt1.c2 THEN vt1.c2 ELSE t0.c51 END)AND(((vt1.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)AND(vt1.c0))  WHEN ((vt1.c2) NOT BETWEEN (t0.c51) AND (vt1.c2)) THEN ((x'15bc')>(vt1.c1)) WHEN t0.c51 THEN t0.c48 WHEN ((t0.c51)LIKE(t0.c48)) THEN x'' END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((CASE vt1.c0  WHEN vt1.c2 THEN vt1.c2 ELSE t0.c51 END)AND(((vt1.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (CASE ((vt1.c0)AND(vt1.c0))  WHEN ((vt1.c2) NOT BETWEEN (t0.c51) AND (vt1.c2)) THEN ((x'15bc')>(vt1.c1)) WHEN t0.c51 THEN t0.c48 WHEN ((t0.c51)LIKE(t0.c48)) THEN x'' END) ORDER BY ((CASE vt1.c0  WHEN vt1.c2 THEN vt1.c2 ELSE t0.c51 END)AND(((vt1.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)AND(vt1.c0))  WHEN ((vt1.c2) NOT BETWEEN (t0.c51) AND (vt1.c2)) THEN ((x'15bc')>(vt1.c1)) WHEN t0.c51 THEN t0.c48 WHEN ((t0.c51)LIKE(t0.c48)) THEN x'' END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((CASE vt1.c0  WHEN vt1.c2 THEN vt1.c2 ELSE t0.c51 END)AND(((vt1.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (CASE ((vt1.c0)AND(vt1.c0))  WHEN ((vt1.c2) NOT BETWEEN (t0.c51) AND (vt1.c2)) THEN ((x'15bc')>(vt1.c1)) WHEN t0.c51 THEN t0.c48 WHEN ((t0.c51)LIKE(t0.c48)) THEN x'' END) ORDER BY ((CASE vt1.c0  WHEN vt1.c2 THEN vt1.c2 ELSE t0.c51 END)AND(((vt1.c0) IS FALSE)))  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON x'' WHERE (t0.c51) ORDER BY (((((t0.c48)AND(vt1.c1)))AND(vt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((t0.c51) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON x'' ORDER BY (((((t0.c48)AND(vt1.c1)))AND(vt1.c2)) IN ()));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON x'' WHERE (t0.c51) ORDER BY (((((t0.c48)AND(vt1.c1)))AND(vt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((t0.c51) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON x'' ORDER BY (((((t0.c48)AND(vt1.c1)))AND(vt1.c2)) IN ()));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON x'' WHERE (t0.c51) ORDER BY (((((t0.c48)AND(vt1.c1)))AND(vt1.c2)) IN ());
SELECT ALL * FROM vt0, t0 WHERE (t0.c51);
SELECT SUM(count) FROM (SELECT ALL ((t0.c51) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c51);
SELECT SUM(count) FROM (SELECT ALL ((t0.c51) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c51);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 NOT INDEXED WHERE (CASE t0.c48 COLLATE NOCASE  WHEN TYPEOF(DISTINCT 0.7403057378375525) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2)) WHEN CAST(vt1.c2 AS TEXT) THEN t0.c48 COLLATE RTRIM WHEN (+ (t0.c51)) THEN ((vt1.c1) NOT BETWEEN (t0.c48) AND (vt1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c48 COLLATE NOCASE  WHEN TYPEOF(DISTINCT 0.7403057378375525) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2)) WHEN CAST(vt1.c2 AS TEXT) THEN t0.c48 COLLATE RTRIM WHEN (+ (t0.c51)) THEN ((vt1.c1) NOT BETWEEN (t0.c48) AND (vt1.c2)) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 NOT INDEXED WHERE (CASE t0.c48 COLLATE NOCASE  WHEN TYPEOF(DISTINCT 0.7403057378375525) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2)) WHEN CAST(vt1.c2 AS TEXT) THEN t0.c48 COLLATE RTRIM WHEN (+ (t0.c51)) THEN ((vt1.c1) NOT BETWEEN (t0.c48) AND (vt1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c48 COLLATE NOCASE  WHEN TYPEOF(DISTINCT 0.7403057378375525) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2)) WHEN CAST(vt1.c2 AS TEXT) THEN t0.c48 COLLATE RTRIM WHEN (+ (t0.c51)) THEN ((vt1.c1) NOT BETWEEN (t0.c48) AND (vt1.c2)) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 NOT INDEXED WHERE (CASE t0.c48 COLLATE NOCASE  WHEN TYPEOF(DISTINCT 0.7403057378375525) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2)) WHEN CAST(vt1.c2 AS TEXT) THEN t0.c48 COLLATE RTRIM WHEN (+ (t0.c51)) THEN ((vt1.c1) NOT BETWEEN (t0.c48) AND (vt1.c2)) END);
SELECT * FROM t0 INDEXED BY i70, vt1, vt0 WHERE (-4.71225471E8);
SELECT SUM(count) FROM (SELECT ALL ((-4.71225471E8) IS TRUE)  as count FROM t0 INDEXED BY i70, vt1, vt0);
SELECT * FROM t0 INDEXED BY i70, vt1, vt0 WHERE (-4.71225471E8);
SELECT SUM(count) FROM (SELECT ALL ((-4.71225471E8) IS TRUE)  as count FROM t0 INDEXED BY i70, vt1, vt0);
SELECT * FROM t0 INDEXED BY i70, vt1, vt0 WHERE (-4.71225471E8);
SELECT * FROM vt1, t0 WHERE (t0.c48) ORDER BY CAST(CASE vt1.c1  WHEN x'' THEN vt1.c1 WHEN t0.c48 THEN t0.c51 WHEN t0.c51 THEN t0.c51 ELSE NULL END AS BLOB) DESC, vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(CASE vt1.c1  WHEN x'' THEN vt1.c1 WHEN t0.c48 THEN t0.c51 WHEN t0.c51 THEN t0.c51 ELSE NULL END AS BLOB) DESC, vt1.c0 ASC);
SELECT * FROM vt1, t0 WHERE (t0.c48) ORDER BY CAST(CASE vt1.c1  WHEN x'' THEN vt1.c1 WHEN t0.c48 THEN t0.c51 WHEN t0.c51 THEN t0.c51 ELSE NULL END AS BLOB) DESC, vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(CASE vt1.c1  WHEN x'' THEN vt1.c1 WHEN t0.c48 THEN t0.c51 WHEN t0.c51 THEN t0.c51 ELSE NULL END AS BLOB) DESC, vt1.c0 ASC);
SELECT * FROM vt1, t0 WHERE (t0.c48) ORDER BY CAST(CASE vt1.c1  WHEN x'' THEN vt1.c1 WHEN t0.c48 THEN t0.c51 WHEN t0.c51 THEN t0.c51 ELSE NULL END AS BLOB) DESC, vt1.c0 ASC;
SELECT ALL * FROM t0 WHERE (CAST(HEX(t0.c48) AS TEXT)) ORDER BY (NOT (((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c48)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(HEX(t0.c48) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c48)))) ASC);
SELECT ALL * FROM t0 WHERE (CAST(HEX(t0.c48) AS TEXT)) ORDER BY (NOT (((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c48)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(HEX(t0.c48) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c48)))) ASC);
SELECT ALL * FROM t0 WHERE (CAST(HEX(t0.c48) AS TEXT)) ORDER BY (NOT (((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c48)))) ASC;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c2)AND(vt1.c0))) IS TRUE)) ORDER BY ((((((vt1.c1)OR(vt1.c1)))OR('[]'))) NOT NULL)  NULLS FIRST, x'' DESC  NULLS FIRST, ((vt1.c1 COLLATE RTRIM)/(((vt0.c0)-(vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)AND(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c1)OR(vt1.c1)))OR('[]'))) NOT NULL)  NULLS FIRST, x'' DESC  NULLS FIRST, ((vt1.c1 COLLATE RTRIM)/(((vt0.c0)-(vt1.c1))))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c2)AND(vt1.c0))) IS TRUE)) ORDER BY ((((((vt1.c1)OR(vt1.c1)))OR('[]'))) NOT NULL)  NULLS FIRST, x'' DESC  NULLS FIRST, ((vt1.c1 COLLATE RTRIM)/(((vt0.c0)-(vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)AND(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c1)OR(vt1.c1)))OR('[]'))) NOT NULL)  NULLS FIRST, x'' DESC  NULLS FIRST, ((vt1.c1 COLLATE RTRIM)/(((vt0.c0)-(vt1.c1))))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c2)AND(vt1.c0))) IS TRUE)) ORDER BY ((((((vt1.c1)OR(vt1.c1)))OR('[]'))) NOT NULL)  NULLS FIRST, x'' DESC  NULLS FIRST, ((vt1.c1 COLLATE RTRIM)/(((vt0.c0)-(vt1.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON (NOT (ABS(0.21276557624871018))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON (NOT (ABS(0.21276557624871018))));
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON (NOT (ABS(0.21276557624871018))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON (NOT (ABS(0.21276557624871018))));
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON (NOT (ABS(0.21276557624871018))) WHERE (vt0.c0);
SELECT ALL * FROM t0 WHERE ((2.02358108E9 IN ())) ORDER BY CAST(CAST('1137966784' AS TEXT) AS REAL)  NULLS LAST, CAST(t0.c51 AS NUMERIC) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((2.02358108E9 IN ())) IS TRUE)  as count FROM t0 ORDER BY CAST(CAST('1137966784' AS TEXT) AS REAL)  NULLS LAST, CAST(t0.c51 AS NUMERIC) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((2.02358108E9 IN ())) ORDER BY CAST(CAST('1137966784' AS TEXT) AS REAL)  NULLS LAST, CAST(t0.c51 AS NUMERIC) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((2.02358108E9 IN ())) IS TRUE)  as count FROM t0 ORDER BY CAST(CAST('1137966784' AS TEXT) AS REAL)  NULLS LAST, CAST(t0.c51 AS NUMERIC) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((2.02358108E9 IN ())) ORDER BY CAST(CAST('1137966784' AS TEXT) AS REAL)  NULLS LAST, CAST(t0.c51 AS NUMERIC) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (TRIM(DISTINCT vt0.c0) IN (((vt0.c0) IS TRUE))) WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (x'5e00') AND (vt0.c0))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (x'5e00') AND (vt0.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (TRIM(DISTINCT vt0.c0) IN (((vt0.c0) IS TRUE))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL) DESC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (TRIM(DISTINCT vt0.c0) IN (((vt0.c0) IS TRUE))) WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (x'5e00') AND (vt0.c0))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (x'5e00') AND (vt0.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (TRIM(DISTINCT vt0.c0) IN (((vt0.c0) IS TRUE))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL) DESC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (TRIM(DISTINCT vt0.c0) IN (((vt0.c0) IS TRUE))) WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (x'5e00') AND (vt0.c0))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((SQLITE_COMPILEOPTION_GET(t0.c48)))>=(((t0.c48 IN ()))))) ORDER BY ((((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c51)))>>(t0.c48))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((SQLITE_COMPILEOPTION_GET(t0.c48)))>=(((t0.c48 IN ()))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c51)))>>(t0.c48))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((SQLITE_COMPILEOPTION_GET(t0.c48)))>=(((t0.c48 IN ()))))) ORDER BY ((((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c51)))>>(t0.c48))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((SQLITE_COMPILEOPTION_GET(t0.c48)))>=(((t0.c48 IN ()))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c51)))>>(t0.c48))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((SQLITE_COMPILEOPTION_GET(t0.c48)))>=(((t0.c48 IN ()))))) ORDER BY ((((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c51)))>>(t0.c48))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 NOT INDEXED RIGHT OUTER JOIN t0 ON (((NOT (vt1.c1)))AND((vt1.c2 IN ()))) WHERE (((((((((('ip]M0+' IN (vt1.c1)))OR(x'')))OR(x'c1af260a')))AND(CAST(vt1.c0 AS BLOB))))OR((t0.c51 IN ())))) ORDER BY CASE (t0.c48 IN ())  WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((0X5d2419ba))) THEN ((vt0.c0) ISNULL) ELSE ((t0.c48) NOT NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((('ip]M0+' IN (vt1.c1)))OR(x'')))OR(x'c1af260a')))AND(CAST(vt1.c0 AS BLOB))))OR((t0.c51 IN ())))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((NOT (vt1.c1)))AND((vt1.c2 IN ()))) ORDER BY CASE (t0.c48 IN ())  WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((0x5d2419ba))) THEN ((vt0.c0) ISNULL) ELSE ((t0.c48) NOT NULL) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 NOT INDEXED RIGHT OUTER JOIN t0 ON (((NOT (vt1.c1)))AND((vt1.c2 IN ()))) WHERE (((((((((('ip]M0+' IN (vt1.c1)))OR(x'')))OR(x'c1af260a')))AND(CAST(vt1.c0 AS BLOB))))OR((t0.c51 IN ())))) ORDER BY CASE (t0.c48 IN ())  WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((0X5d2419ba))) THEN ((vt0.c0) ISNULL) ELSE ((t0.c48) NOT NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((('ip]M0+' IN (vt1.c1)))OR(x'')))OR(x'c1af260a')))AND(CAST(vt1.c0 AS BLOB))))OR((t0.c51 IN ())))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((NOT (vt1.c1)))AND((vt1.c2 IN ()))) ORDER BY CASE (t0.c48 IN ())  WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((0x5d2419ba))) THEN ((vt0.c0) ISNULL) ELSE ((t0.c48) NOT NULL) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 NOT INDEXED RIGHT OUTER JOIN t0 ON (((NOT (vt1.c1)))AND((vt1.c2 IN ()))) WHERE (((((((((('ip]M0+' IN (vt1.c1)))OR(x'')))OR(x'c1af260a')))AND(CAST(vt1.c0 AS BLOB))))OR((t0.c51 IN ())))) ORDER BY CASE (t0.c48 IN ())  WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((0X5d2419ba))) THEN ((vt0.c0) ISNULL) ELSE ((t0.c48) NOT NULL) END ASC  NULLS FIRST;
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (((('721543268')/(vt0.c0))) IS TRUE) WHERE (CAST(t0.c48 AS INTEGER) COLLATE RTRIM) ORDER BY CASE WHEN CASE WHEN t0.c51 THEN x'' END THEN t0.c48 COLLATE BINARY ELSE x'' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c48 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((('721543268')/(vt0.c0))) IS TRUE) ORDER BY CASE WHEN CASE WHEN t0.c51 THEN x'' END THEN t0.c48 COLLATE BINARY ELSE x'' END  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (((('721543268')/(vt0.c0))) IS TRUE) WHERE (CAST(t0.c48 AS INTEGER) COLLATE RTRIM) ORDER BY CASE WHEN CASE WHEN t0.c51 THEN x'' END THEN t0.c48 COLLATE BINARY ELSE x'' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c48 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((('721543268')/(vt0.c0))) IS TRUE) ORDER BY CASE WHEN CASE WHEN t0.c51 THEN x'' END THEN t0.c48 COLLATE BINARY ELSE x'' END  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (((('721543268')/(vt0.c0))) IS TRUE) WHERE (CAST(t0.c48 AS INTEGER) COLLATE RTRIM) ORDER BY CASE WHEN CASE WHEN t0.c51 THEN x'' END THEN t0.c48 COLLATE BINARY ELSE x'' END  NULLS LAST;
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((t0.c48)-(t0.c48 COLLATE BINARY)) WHERE ('' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('' COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((t0.c48)-(t0.c48 COLLATE BINARY)));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((t0.c48)-(t0.c48 COLLATE BINARY)) WHERE ('' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('' COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((t0.c48)-(t0.c48 COLLATE BINARY)));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((t0.c48)-(t0.c48 COLLATE BINARY)) WHERE ('' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (json(((t0.c51) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((json(((t0.c51) IS FALSE))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (json(((t0.c51) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((json(((t0.c51) IS FALSE))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (json(((t0.c51) IS FALSE)));
SELECT COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON ((t0.c48)&(t0.c48)) COLLATE BINARY WHERE (((CASE WHEN t0.c48 THEN vt1.c0 ELSE t0.c48 END)LIKE(((((vt1.c2)AND(0.4381327861035267)))OR(t0.c51)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c48 THEN vt1.c0 ELSE t0.c48 END)LIKE(((((vt1.c2)AND(0.4381327861035267)))OR(t0.c51))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON ((t0.c48)&(t0.c48)) COLLATE BINARY);
SELECT COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON ((t0.c48)&(t0.c48)) COLLATE BINARY WHERE (((CASE WHEN t0.c48 THEN vt1.c0 ELSE t0.c48 END)LIKE(((((vt1.c2)AND(0.4381327861035267)))OR(t0.c51)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c48 THEN vt1.c0 ELSE t0.c48 END)LIKE(((((vt1.c2)AND(0.4381327861035267)))OR(t0.c51))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON ((t0.c48)&(t0.c48)) COLLATE BINARY);
SELECT COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON ((t0.c48)&(t0.c48)) COLLATE BINARY WHERE (((CASE WHEN t0.c48 THEN vt1.c0 ELSE t0.c48 END)LIKE(((((vt1.c2)AND(0.4381327861035267)))OR(t0.c51)))));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((((((((x'')OR(t0.c51)))OR(t0.c51)))AND(t0.c48)))OR(t0.c48)) THEN ((t0.c48) IS FALSE) ELSE CAST(t0.c51 AS INTEGER) END) ORDER BY (~ (((t0.c51)>(t0.c48)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((x'')OR(t0.c51)))OR(t0.c51)))AND(t0.c48)))OR(t0.c48)) THEN ((t0.c48) IS FALSE) ELSE CAST(t0.c51 AS INTEGER) END) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c51)>(t0.c48)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((((((((x'')OR(t0.c51)))OR(t0.c51)))AND(t0.c48)))OR(t0.c48)) THEN ((t0.c48) IS FALSE) ELSE CAST(t0.c51 AS INTEGER) END) ORDER BY (~ (((t0.c51)>(t0.c48)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((x'')OR(t0.c51)))OR(t0.c51)))AND(t0.c48)))OR(t0.c48)) THEN ((t0.c48) IS FALSE) ELSE CAST(t0.c51 AS INTEGER) END) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c51)>(t0.c48)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((((((((x'')OR(t0.c51)))OR(t0.c51)))AND(t0.c48)))OR(t0.c48)) THEN ((t0.c48) IS FALSE) ELSE CAST(t0.c51 AS INTEGER) END) ORDER BY (~ (((t0.c51)>(t0.c48)))) DESC;
SELECT * FROM vt0, t0 WHERE ((- (((((((((vt0.c0)OR(t0.c48)))AND(vt0.c0)))AND(t0.c51)))OR(t0.c51))))) ORDER BY (TYPEOF(t0.c48) IN (vt0.c0 COLLATE NOCASE, '\%ZhbI')), ((((vt0.c0)<<(t0.c51))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((- (((((((((vt0.c0)OR(t0.c48)))AND(vt0.c0)))AND(t0.c51)))OR(t0.c51))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (TYPEOF(t0.c48) IN (vt0.c0 COLLATE NOCASE, '\%ZhbI')), ((((vt0.c0)<<(t0.c51))) IS FALSE) ASC);
SELECT * FROM vt0, t0 WHERE ((- (((((((((vt0.c0)OR(t0.c48)))AND(vt0.c0)))AND(t0.c51)))OR(t0.c51))))) ORDER BY (TYPEOF(t0.c48) IN (vt0.c0 COLLATE NOCASE, '\%ZhbI')), ((((vt0.c0)<<(t0.c51))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((- (((((((((vt0.c0)OR(t0.c48)))AND(vt0.c0)))AND(t0.c51)))OR(t0.c51))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (TYPEOF(t0.c48) IN (vt0.c0 COLLATE NOCASE, '\%ZhbI')), ((((vt0.c0)<<(t0.c51))) IS FALSE) ASC);
SELECT * FROM vt0, t0 WHERE ((- (((((((((vt0.c0)OR(t0.c48)))AND(vt0.c0)))AND(t0.c51)))OR(t0.c51))))) ORDER BY (TYPEOF(t0.c48) IN (vt0.c0 COLLATE NOCASE, '\%ZhbI')), ((((vt0.c0)<<(t0.c51))) IS FALSE) ASC;
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT CASE vt1.c0  WHEN vt1.c2 THEN NULL END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CASE vt1.c0  WHEN vt1.c2 THEN NULL END)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT CASE vt1.c0  WHEN vt1.c2 THEN NULL END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CASE vt1.c0  WHEN vt1.c2 THEN NULL END)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT CASE vt1.c0  WHEN vt1.c2 THEN NULL END));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN 2.086600856E9 THEN vt1.c2 ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 2.086600856E9 THEN vt1.c2 ELSE CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN 2.086600856E9 THEN vt1.c2 ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 2.086600856E9 THEN vt1.c2 ELSE CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN 2.086600856E9 THEN vt1.c2 ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c48)AND(t0.c48)))OR(t0.c48)))AND(t0.c51)))AND(1209354489)))OR(((t0.c51)-(t0.c51))))) ORDER BY SQLITE_COMPILEOPTION_GET(t0.c51) COLLATE RTRIM  NULLS LAST, json_array_length(CASE t0.c48  WHEN t0.c51 THEN t0.c48 WHEN t0.c51 THEN NULL WHEN t0.c48 THEN t0.c51 ELSE t0.c51 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c48)AND(t0.c48)))OR(t0.c48)))AND(t0.c51)))AND(1209354489)))OR(((t0.c51)-(t0.c51))))) IS TRUE)  as count FROM t0 ORDER BY SQLITE_COMPILEOPTION_GET(t0.c51) COLLATE RTRIM  NULLS LAST, json_array_length(CASE t0.c48  WHEN t0.c51 THEN t0.c48 WHEN t0.c51 THEN NULL WHEN t0.c48 THEN t0.c51 ELSE t0.c51 END)  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c48)AND(t0.c48)))OR(t0.c48)))AND(t0.c51)))AND(1209354489)))OR(((t0.c51)-(t0.c51))))) ORDER BY SQLITE_COMPILEOPTION_GET(t0.c51) COLLATE RTRIM  NULLS LAST, json_array_length(CASE t0.c48  WHEN t0.c51 THEN t0.c48 WHEN t0.c51 THEN NULL WHEN t0.c48 THEN t0.c51 ELSE t0.c51 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c48)AND(t0.c48)))OR(t0.c48)))AND(t0.c51)))AND(1209354489)))OR(((t0.c51)-(t0.c51))))) IS TRUE)  as count FROM t0 ORDER BY SQLITE_COMPILEOPTION_GET(t0.c51) COLLATE RTRIM  NULLS LAST, json_array_length(CASE t0.c48  WHEN t0.c51 THEN t0.c48 WHEN t0.c51 THEN NULL WHEN t0.c48 THEN t0.c51 ELSE t0.c51 END)  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c48)AND(t0.c48)))OR(t0.c48)))AND(t0.c51)))AND(1209354489)))OR(((t0.c51)-(t0.c51))))) ORDER BY SQLITE_COMPILEOPTION_GET(t0.c51) COLLATE RTRIM  NULLS LAST, json_array_length(CASE t0.c48  WHEN t0.c51 THEN t0.c48 WHEN t0.c51 THEN NULL WHEN t0.c48 THEN t0.c51 ELSE t0.c51 END)  NULLS LAST;
SELECT ALL * FROM vt0, vt1, t0 WHERE (((vt0.c0 COLLATE BINARY)/(((((t0.c51)AND(t0.c48)))OR(vt1.c2))))) ORDER BY ((((((t0.c48)OR(t0.c48)))AND(t0.c51)))/(CAST(t0.c48 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)/(((((t0.c51)AND(t0.c48)))OR(vt1.c2))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((((t0.c48)OR(t0.c48)))AND(t0.c51)))/(CAST(t0.c48 AS TEXT))) ASC);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((vt0.c0 COLLATE BINARY)/(((((t0.c51)AND(t0.c48)))OR(vt1.c2))))) ORDER BY ((((((t0.c48)OR(t0.c48)))AND(t0.c51)))/(CAST(t0.c48 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)/(((((t0.c51)AND(t0.c48)))OR(vt1.c2))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((((t0.c48)OR(t0.c48)))AND(t0.c51)))/(CAST(t0.c48 AS TEXT))) ASC);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((vt0.c0 COLLATE BINARY)/(((((t0.c51)AND(t0.c48)))OR(vt1.c2))))) ORDER BY ((((((t0.c48)OR(t0.c48)))AND(t0.c51)))/(CAST(t0.c48 AS TEXT))) ASC;
SELECT * FROM vt0, vt1 CROSS JOIN t0 ON 0.06268195213789296 WHERE ((- (((vt1.c1)LIKE(vt0.c0))))) ORDER BY '/ofmO' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c1)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON 0.06268195213789296 ORDER BY '/ofmO' DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 CROSS JOIN t0 ON 0.06268195213789296 WHERE ((- (((vt1.c1)LIKE(vt0.c0))))) ORDER BY '/ofmO' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c1)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON 0.06268195213789296 ORDER BY '/ofmO' DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 CROSS JOIN t0 ON 0.06268195213789296 WHERE ((- (((vt1.c1)LIKE(vt0.c0))))) ORDER BY '/ofmO' DESC  NULLS FIRST;
SELECT * FROM vt0, t0, vt1 WHERE (CAST(t0.c51 COLLATE RTRIM AS BLOB)) ORDER BY (+ (0.7207567565021235));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c51 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (+ (0.7207567565021235)));
SELECT * FROM vt0, t0, vt1 WHERE (CAST(t0.c51 COLLATE RTRIM AS BLOB)) ORDER BY (+ (0.7207567565021235));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c51 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (+ (0.7207567565021235)));
SELECT * FROM vt0, t0, vt1 WHERE (CAST(t0.c51 COLLATE RTRIM AS BLOB)) ORDER BY (+ (0.7207567565021235));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL)) ORDER BY ((((((((((vt1.c2) NOT NULL))AND(CASE WHEN vt1.c2 THEN vt0.c0 ELSE vt1.c2 END)))OR(((t0.c48)LIKE(vt0.c0)))))AND('kP2')))AND(CASE WHEN vt1.c2 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((((((((vt1.c2) NOT NULL))AND(CASE WHEN vt1.c2 THEN vt0.c0 ELSE vt1.c2 END)))OR(((t0.c48)LIKE(vt0.c0)))))AND('kP2')))AND(CASE WHEN vt1.c2 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL)) ORDER BY ((((((((((vt1.c2) NOT NULL))AND(CASE WHEN vt1.c2 THEN vt0.c0 ELSE vt1.c2 END)))OR(((t0.c48)LIKE(vt0.c0)))))AND('kP2')))AND(CASE WHEN vt1.c2 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((((((((vt1.c2) NOT NULL))AND(CASE WHEN vt1.c2 THEN vt0.c0 ELSE vt1.c2 END)))OR(((t0.c48)LIKE(vt0.c0)))))AND('kP2')))AND(CASE WHEN vt1.c2 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL)) ORDER BY ((((((((((vt1.c2) NOT NULL))AND(CASE WHEN vt1.c2 THEN vt0.c0 ELSE vt1.c2 END)))OR(((t0.c48)LIKE(vt0.c0)))))AND('kP2')))AND(CASE WHEN vt1.c2 THEN vt1.c0 END));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE vt1.c2  WHEN vt1.c2 THEN vt1.c0 END)<((- (vt0.c0))))) ORDER BY 0xffffffffd85412f1 COLLATE BINARY ASC, ((((vt1.c2) BETWEEN (vt0.c0) AND (vt1.c1))) NOT BETWEEN (CAST(vt1.c2 AS NUMERIC)) AND ((NOT (vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c2  WHEN vt1.c2 THEN vt1.c0 END)<((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0xffffffffd85412f1 COLLATE BINARY ASC, ((((vt1.c2) BETWEEN (vt0.c0) AND (vt1.c1))) NOT BETWEEN (CAST(vt1.c2 AS NUMERIC)) AND ((NOT (vt1.c2)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE vt1.c2  WHEN vt1.c2 THEN vt1.c0 END)<((- (vt0.c0))))) ORDER BY 0xffffffffd85412f1 COLLATE BINARY ASC, ((((vt1.c2) BETWEEN (vt0.c0) AND (vt1.c1))) NOT BETWEEN (CAST(vt1.c2 AS NUMERIC)) AND ((NOT (vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c2  WHEN vt1.c2 THEN vt1.c0 END)<((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0xffffffffd85412f1 COLLATE BINARY ASC, ((((vt1.c2) BETWEEN (vt0.c0) AND (vt1.c1))) NOT BETWEEN (CAST(vt1.c2 AS NUMERIC)) AND ((NOT (vt1.c2)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE vt1.c2  WHEN vt1.c2 THEN vt1.c0 END)<((- (vt0.c0))))) ORDER BY 0xffffffffd85412f1 COLLATE BINARY ASC, ((((vt1.c2) BETWEEN (vt0.c0) AND (vt1.c1))) NOT BETWEEN (CAST(vt1.c2 AS NUMERIC)) AND ((NOT (vt1.c2))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON (((vt1.c0)/(-14399587)) IN ()) RIGHT OUTER JOIN vt0 ON ((t0.c48)<=(vt1.c1)) COLLATE NOCASE WHERE (IFNULL(((vt0.c0) BETWEEN (t0.c48) AND (0.5564314035634953)), (+ (vt1.c0)))) ORDER BY (((('%a''.샞᝛QN')AND(t0.c48)))OR(vt1.c0)) COLLATE BINARY  NULLS FIRST, CASE ((t0.c51) NOTNULL)  WHEN (+ (vt0.c0)) THEN ((t0.c48)%(t0.c48)) ELSE ((vt0.c0) NOT BETWEEN (t0.c51) AND (vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt0.c0) BETWEEN (t0.c48) AND (0.5564314035634953)), (+ (vt1.c0)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (((vt1.c0)/(-14399587)) IN ()) RIGHT OUTER JOIN vt0 ON ((t0.c48)<=(vt1.c1)) COLLATE NOCASE ORDER BY (((('%a''.샞᝛QN')AND(t0.c48)))OR(vt1.c0)) COLLATE BINARY  NULLS FIRST, CASE ((t0.c51) NOTNULL)  WHEN (+ (vt0.c0)) THEN ((t0.c48)%(t0.c48)) ELSE ((vt0.c0) NOT BETWEEN (t0.c51) AND (vt1.c0)) END  NULLS LAST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON (((vt1.c0)/(-14399587)) IN ()) RIGHT OUTER JOIN vt0 ON ((t0.c48)<=(vt1.c1)) COLLATE NOCASE WHERE (IFNULL(((vt0.c0) BETWEEN (t0.c48) AND (0.5564314035634953)), (+ (vt1.c0)))) ORDER BY (((('%a''.샞᝛QN')AND(t0.c48)))OR(vt1.c0)) COLLATE BINARY  NULLS FIRST, CASE ((t0.c51) NOTNULL)  WHEN (+ (vt0.c0)) THEN ((t0.c48)%(t0.c48)) ELSE ((vt0.c0) NOT BETWEEN (t0.c51) AND (vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt0.c0) BETWEEN (t0.c48) AND (0.5564314035634953)), (+ (vt1.c0)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (((vt1.c0)/(-14399587)) IN ()) RIGHT OUTER JOIN vt0 ON ((t0.c48)<=(vt1.c1)) COLLATE NOCASE ORDER BY (((('%a''.샞᝛QN')AND(t0.c48)))OR(vt1.c0)) COLLATE BINARY  NULLS FIRST, CASE ((t0.c51) NOTNULL)  WHEN (+ (vt0.c0)) THEN ((t0.c48)%(t0.c48)) ELSE ((vt0.c0) NOT BETWEEN (t0.c51) AND (vt1.c0)) END  NULLS LAST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON (((vt1.c0)/(-14399587)) IN ()) RIGHT OUTER JOIN vt0 ON ((t0.c48)<=(vt1.c1)) COLLATE NOCASE WHERE (IFNULL(((vt0.c0) BETWEEN (t0.c48) AND (0.5564314035634953)), (+ (vt1.c0)))) ORDER BY (((('%a''.샞᝛QN')AND(t0.c48)))OR(vt1.c0)) COLLATE BINARY  NULLS FIRST, CASE ((t0.c51) NOTNULL)  WHEN (+ (vt0.c0)) THEN ((t0.c48)%(t0.c48)) ELSE ((vt0.c0) NOT BETWEEN (t0.c51) AND (vt1.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((t0.c51)) AND ((CAST(vt0.c0 AS INTEGER)))) WHERE ((((NULL))<=(((NOT (vt1.c2)))))) ORDER BY ((((t0.c48) ISNULL))-(CASE t0.c48  WHEN vt1.c0 THEN t0.c48 END)) ASC, ((CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END)||(vt1.c2 COLLATE RTRIM)), TRIM(CASE WHEN vt1.c2 THEN t0.c51 ELSE t0.c48 END);
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<=(((NOT (vt1.c2)))))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((t0.c51)) AND ((CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((t0.c48) ISNULL))-(CASE t0.c48  WHEN vt1.c0 THEN t0.c48 END)) ASC, ((CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END)||(vt1.c2 COLLATE RTRIM)), TRIM(CASE WHEN vt1.c2 THEN t0.c51 ELSE t0.c48 END));
SELECT ALL COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((t0.c51)) AND ((CAST(vt0.c0 AS INTEGER)))) WHERE ((((NULL))<=(((NOT (vt1.c2)))))) ORDER BY ((((t0.c48) ISNULL))-(CASE t0.c48  WHEN vt1.c0 THEN t0.c48 END)) ASC, ((CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END)||(vt1.c2 COLLATE RTRIM)), TRIM(CASE WHEN vt1.c2 THEN t0.c51 ELSE t0.c48 END);
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<=(((NOT (vt1.c2)))))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((t0.c51)) AND ((CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((t0.c48) ISNULL))-(CASE t0.c48  WHEN vt1.c0 THEN t0.c48 END)) ASC, ((CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END)||(vt1.c2 COLLATE RTRIM)), TRIM(CASE WHEN vt1.c2 THEN t0.c51 ELSE t0.c48 END));
SELECT ALL COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((t0.c51)) AND ((CAST(vt0.c0 AS INTEGER)))) WHERE ((((NULL))<=(((NOT (vt1.c2)))))) ORDER BY ((((t0.c48) ISNULL))-(CASE t0.c48  WHEN vt1.c0 THEN t0.c48 END)) ASC, ((CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END)||(vt1.c2 COLLATE RTRIM)), TRIM(CASE WHEN vt1.c2 THEN t0.c51 ELSE t0.c48 END);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'31fdadfe') ORDER BY CASE -1327267007  WHEN CASE WHEN x'1f07' THEN vt0.c0 WHEN vt0.c0 THEN 0.03454459152518474 WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(0.008075789824480761)))AND(vt0.c0)) THEN (+ (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)==(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'31fdadfe') IS TRUE)  as count FROM vt0 ORDER BY CASE -1327267007  WHEN CASE WHEN x'1f07' THEN vt0.c0 WHEN vt0.c0 THEN 0.03454459152518474 WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(0.008075789824480761)))AND(vt0.c0)) THEN (+ (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)==(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'31fdadfe') ORDER BY CASE -1327267007  WHEN CASE WHEN x'1f07' THEN vt0.c0 WHEN vt0.c0 THEN 0.03454459152518474 WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(0.008075789824480761)))AND(vt0.c0)) THEN (+ (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)==(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'31fdadfe') IS TRUE)  as count FROM vt0 ORDER BY CASE -1327267007  WHEN CASE WHEN x'1f07' THEN vt0.c0 WHEN vt0.c0 THEN 0.03454459152518474 WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(0.008075789824480761)))AND(vt0.c0)) THEN (+ (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)==(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'31fdadfe') ORDER BY CASE -1327267007  WHEN CASE WHEN x'1f07' THEN vt0.c0 WHEN vt0.c0 THEN 0.03454459152518474 WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(0.008075789824480761)))AND(vt0.c0)) THEN (+ (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)==(vt0.c0)) END;
SELECT ALL * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((((((((((t0.c48)OR(vt0.c0)))OR(t0.c48)))OR(t0.c51)))OR(vt1.c1)))/('')) WHERE ('299889347') ORDER BY CAST(vt1.c1 COLLATE NOCASE AS BLOB) ASC, (((('baDXB~*(X')OR((('1418681840')!=(vt0.c0)))))OR(CASE WHEN vt1.c2 THEN vt0.c0 WHEN 'L꒮c0' THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 WHEN 0xfffffffff247f346 THEN vt1.c0 WHEN t0.c51 THEN t0.c48 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('299889347') IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((((((((((t0.c48)OR(vt0.c0)))OR(t0.c48)))OR(t0.c51)))OR(vt1.c1)))/('')) ORDER BY CAST(vt1.c1 COLLATE NOCASE AS BLOB) ASC, (((('baDXB~*(X')OR((('1418681840')!=(vt0.c0)))))OR(CASE WHEN vt1.c2 THEN vt0.c0 WHEN 'L꒮c0' THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 WHEN 0xfffffffff247f346 THEN vt1.c0 WHEN t0.c51 THEN t0.c48 END))  NULLS FIRST);
SELECT ALL * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((((((((((t0.c48)OR(vt0.c0)))OR(t0.c48)))OR(t0.c51)))OR(vt1.c1)))/('')) WHERE ('299889347') ORDER BY CAST(vt1.c1 COLLATE NOCASE AS BLOB) ASC, (((('baDXB~*(X')OR((('1418681840')!=(vt0.c0)))))OR(CASE WHEN vt1.c2 THEN vt0.c0 WHEN 'L꒮c0' THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 WHEN 0xfffffffff247f346 THEN vt1.c0 WHEN t0.c51 THEN t0.c48 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('299889347') IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((((((((((t0.c48)OR(vt0.c0)))OR(t0.c48)))OR(t0.c51)))OR(vt1.c1)))/('')) ORDER BY CAST(vt1.c1 COLLATE NOCASE AS BLOB) ASC, (((('baDXB~*(X')OR((('1418681840')!=(vt0.c0)))))OR(CASE WHEN vt1.c2 THEN vt0.c0 WHEN 'L꒮c0' THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 WHEN 0xfffffffff247f346 THEN vt1.c0 WHEN t0.c51 THEN t0.c48 END))  NULLS FIRST);
SELECT ALL * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((((((((((t0.c48)OR(vt0.c0)))OR(t0.c48)))OR(t0.c51)))OR(vt1.c1)))/('')) WHERE ('299889347') ORDER BY CAST(vt1.c1 COLLATE NOCASE AS BLOB) ASC, (((('baDXB~*(X')OR((('1418681840')!=(vt0.c0)))))OR(CASE WHEN vt1.c2 THEN vt0.c0 WHEN 'L꒮c0' THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 WHEN 0xfffffffff247f346 THEN vt1.c0 WHEN t0.c51 THEN t0.c48 END))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE COLLATE NOCASE);
SELECT * FROM t0 CROSS JOIN vt1 ON ((((((((((((NULLIF(DISTINCT vt1.c0, vt1.c1))OR((t0.c51 IN ()))))AND(CAST(vt1.c2 AS REAL))))OR((+ (vt1.c1)))))OR(((vt1.c2)+(t0.c51)))))OR(ABS(vt1.c1))))AND(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c2 END)) WHERE (((((t0.c51) NOT NULL))OR(((vt1.c0)+(t0.c51))))) ORDER BY ((t0.c51) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c51) NOT NULL))OR(((vt1.c0)+(t0.c51))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((((((((((NULLIF(DISTINCT vt1.c0, vt1.c1))OR((t0.c51 IN ()))))AND(CAST(vt1.c2 AS REAL))))OR((+ (vt1.c1)))))OR(((vt1.c2)+(t0.c51)))))OR(ABS(vt1.c1))))AND(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c2 END)) ORDER BY ((t0.c51) NOT NULL) ASC);
SELECT * FROM t0 CROSS JOIN vt1 ON ((((((((((((NULLIF(DISTINCT vt1.c0, vt1.c1))OR((t0.c51 IN ()))))AND(CAST(vt1.c2 AS REAL))))OR((+ (vt1.c1)))))OR(((vt1.c2)+(t0.c51)))))OR(ABS(vt1.c1))))AND(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c2 END)) WHERE (((((t0.c51) NOT NULL))OR(((vt1.c0)+(t0.c51))))) ORDER BY ((t0.c51) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c51) NOT NULL))OR(((vt1.c0)+(t0.c51))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((((((((((NULLIF(DISTINCT vt1.c0, vt1.c1))OR((t0.c51 IN ()))))AND(CAST(vt1.c2 AS REAL))))OR((+ (vt1.c1)))))OR(((vt1.c2)+(t0.c51)))))OR(ABS(vt1.c1))))AND(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c2 END)) ORDER BY ((t0.c51) NOT NULL) ASC);
SELECT * FROM t0 CROSS JOIN vt1 ON ((((((((((((NULLIF(DISTINCT vt1.c0, vt1.c1))OR((t0.c51 IN ()))))AND(CAST(vt1.c2 AS REAL))))OR((+ (vt1.c1)))))OR(((vt1.c2)+(t0.c51)))))OR(ABS(vt1.c1))))AND(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c2 END)) WHERE (((((t0.c51) NOT NULL))OR(((vt1.c0)+(t0.c51))))) ORDER BY ((t0.c51) NOT NULL) ASC;
SELECT * FROM vt1, vt0, t0 WHERE (((((CAST(vt1.c1 AS INTEGER))OR(t0.c48)))OR(((((t0.c48)AND(vt1.c0)))OR(vt1.c1))))) ORDER BY json_quote(((vt1.c1) NOT NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c1 AS INTEGER))OR(t0.c48)))OR(((((t0.c48)AND(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY json_quote(((vt1.c1) NOT NULL))  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE (((((CAST(vt1.c1 AS INTEGER))OR(t0.c48)))OR(((((t0.c48)AND(vt1.c0)))OR(vt1.c1))))) ORDER BY json_quote(((vt1.c1) NOT NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c1 AS INTEGER))OR(t0.c48)))OR(((((t0.c48)AND(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY json_quote(((vt1.c1) NOT NULL))  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE (((((CAST(vt1.c1 AS INTEGER))OR(t0.c48)))OR(((((t0.c48)AND(vt1.c0)))OR(vt1.c1))))) ORDER BY json_quote(((vt1.c1) NOT NULL))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (vt1.c2) AND (NULL))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt1.c2) AND (NULL))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (vt1.c2) AND (NULL))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt1.c2) AND (NULL))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (vt1.c2) AND (NULL))) ORDER BY NULL  NULLS FIRST;
