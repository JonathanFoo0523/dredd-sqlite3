-- Time: 2024/06/11 11:47:59
-- Database: database54
-- Database version: 3.40.0
-- seed value: 3432619954
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL) WHERE CAST(rt0.c0 COLLATE BINARY AS BLOB); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=-269998493; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
END TRANSACTION; -- 1ms;
PRAGMA default_cache_size = 1343916333; -- 0ms;
UPDATE OR ABORT rt0 SET c1=0.08527605552203332; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
REINDEX RTRIM; -- 1ms;
PRAGMA cache_size = -8339145001522041072; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES (x'', '.', 0.6677326496476652); -- 0ms;
ANALYZE; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (1438036746); -- 0ms;
REINDEX BINARY; -- 0ms;
END; -- 0ms;
PRAGMA default_cache_size = 624763950; -- 0ms;
VACUUM; -- 0ms;
PRAGMA main.legacy_file_format = true; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
PRAGMA temp.stats; -- 0ms;
PRAGMA temp.automatic_index = false; -- 0ms;
UPDATE rt0 SET (c0)=('-269998493'); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c0='5⭀' WHERE (((rt0.c0 IN ())) ISNULL); -- 0ms;
PRAGMA automatic_index = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ANALYZE rt0; -- 0ms;
VACUUM main; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED, notindexed=c0); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '22317'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
PRAGMA temp.cache_spill = false; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, c0)=(x'b72959ed', 0.5222305324077541) WHERE (~ ((x'e072' IN (vt0.c1, vt0.c0)))); -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
UPDATE rt0 SET (c0)=(NULL); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '53421'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '26959'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 819642743); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1482636129); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-2028445805,4');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58555'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (2.2466848E8, 0Xd642b40), (NULL, '-1922096179'), (0X253d242e, NULL); -- 1ms;
REINDEX; -- 1ms;
DELETE FROM vt0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE VIEW v0(c0, c1, c2) AS SELECT ALL TRIM(DISTINCT CAST(rt0.c1 AS INTEGER)), SUM((+ (vt0.c1))) OVER (), ((((TOTAL(rt0.c1))AND(JULIANDAY(vt0.c1, rt0.c0, rt0.c0))))OR(((rt0.c2)&(vt0.c1)))) FROM vt0, rt0 WHERE ((+ (((x'')OR(1343916333))))) INTERSECT SELECT DISTINCT ((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c1) AND ('?aK83}5')))))OR(((vt0.c1)/(rt0.c2)))), LTRIM(rt0.c1 COLLATE RTRIM), ((CAST(rt0.c1 AS TEXT)) NOTNULL) FROM vt0, rt0 WHERE (CAST(CAST(0.796445092552154 AS REAL) AS REAL)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0) VALUES (NULL, 0.3051218252843131); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1535100146); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '44239'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM rt0, vt0, v0 WHERE (((CAST(v0.c2 AS INTEGER)) IS TRUE)) ORDER BY (v0.c2 IN (rt0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (v0.c2 IN (rt0.c2)) COLLATE RTRIM DESC);
SELECT * FROM rt0, vt0, v0 WHERE (((CAST(v0.c2 AS INTEGER)) IS TRUE)) ORDER BY (v0.c2 IN (rt0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (v0.c2 IN (rt0.c2)) COLLATE RTRIM DESC);
SELECT * FROM rt0, vt0, v0 WHERE (((CAST(v0.c2 AS INTEGER)) IS TRUE)) ORDER BY (v0.c2 IN (rt0.c2)) COLLATE RTRIM DESC;
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) AS REAL)) ORDER BY (~ ((+ (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (~ ((+ (vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) AS REAL)) ORDER BY (~ ((+ (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (~ ((+ (vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) AS REAL)) ORDER BY (~ ((+ (vt0.c1))))  NULLS LAST;
SELECT ALL * FROM rt0, v0 CROSS JOIN vt0 ON (((v0.c1)LIKE(rt0.c2)) IN ()) WHERE ((NOT (rt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY ((((((((x'')AND((- (rt0.c1)))))AND((vt0.c0 IN ()))))AND(CAST(vt0.c1 AS NUMERIC))))AND(((rt0.c2)IS NOT('5⭀')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON (((v0.c1)LIKE(rt0.c2)) IN ()) ORDER BY ((((((((x'')AND((- (rt0.c1)))))AND((vt0.c0 IN ()))))AND(CAST(vt0.c1 AS NUMERIC))))AND(((rt0.c2)IS NOT('5⭀')))) ASC);
SELECT ALL * FROM rt0, v0 CROSS JOIN vt0 ON (((v0.c1)LIKE(rt0.c2)) IN ()) WHERE ((NOT (rt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY ((((((((x'')AND((- (rt0.c1)))))AND((vt0.c0 IN ()))))AND(CAST(vt0.c1 AS NUMERIC))))AND(((rt0.c2)IS NOT('5⭀')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON (((v0.c1)LIKE(rt0.c2)) IN ()) ORDER BY ((((((((x'')AND((- (rt0.c1)))))AND((vt0.c0 IN ()))))AND(CAST(vt0.c1 AS NUMERIC))))AND(((rt0.c2)IS NOT('5⭀')))) ASC);
SELECT * FROM v0, vt0, rt0 WHERE ((((vt0.c1 IN ())) NOTNULL)) ORDER BY CAST(UNLIKELY(vt0.c1) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(UNLIKELY(vt0.c1) AS NUMERIC) ASC);
SELECT * FROM v0, vt0, rt0 WHERE ((((vt0.c1 IN ())) NOTNULL)) ORDER BY CAST(UNLIKELY(vt0.c1) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(UNLIKELY(vt0.c1) AS NUMERIC) ASC);
SELECT * FROM v0, vt0, rt0 WHERE ((((vt0.c1 IN ())) NOTNULL)) ORDER BY CAST(UNLIKELY(vt0.c1) AS NUMERIC) ASC;
SELECT * FROM vt0, v0, rt0 WHERE (CAST(json_array_length(vt0.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_array_length(vt0.c1) AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (CAST(json_array_length(vt0.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_array_length(vt0.c1) AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (CAST(json_array_length(vt0.c1) AS REAL));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2))>((rt0.c1))) COLLATE BINARY WHERE (((((CAST(rt0.c0 AS NUMERIC))OR(((v0.c0) NOTNULL))))OR(((rt0.c1) NOT NULL)))) ORDER BY (((rt0.c0 IN (rt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS NUMERIC))OR(((v0.c0) NOTNULL))))OR(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2))>((rt0.c1))) COLLATE BINARY ORDER BY (((rt0.c0 IN (rt0.c0))) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2))>((rt0.c1))) COLLATE BINARY WHERE (((((CAST(rt0.c0 AS NUMERIC))OR(((v0.c0) NOTNULL))))OR(((rt0.c1) NOT NULL)))) ORDER BY (((rt0.c0 IN (rt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS NUMERIC))OR(((v0.c0) NOTNULL))))OR(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2))>((rt0.c1))) COLLATE BINARY ORDER BY (((rt0.c0 IN (rt0.c0))) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2))>((rt0.c1))) COLLATE BINARY WHERE (((((CAST(rt0.c0 AS NUMERIC))OR(((v0.c0) NOTNULL))))OR(((rt0.c1) NOT NULL)))) ORDER BY (((rt0.c0 IN (rt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(((vt0.c1) NOTNULL) AS BLOB)) ORDER BY (~ (rt0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOTNULL) AS BLOB)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (~ (rt0.c2)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(((vt0.c1) NOTNULL) AS BLOB)) ORDER BY (~ (rt0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOTNULL) AS BLOB)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (~ (rt0.c2)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(((vt0.c1) NOTNULL) AS BLOB)) ORDER BY (~ (rt0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((+ (vt0.c0)))AND(((vt0.c1)<=(vt0.c0)))) FULL OUTER JOIN v0 ON v0.c0 WHERE (((rt0.c1)OR(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)OR(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((+ (vt0.c0)))AND(((vt0.c1)<=(vt0.c0)))) FULL OUTER JOIN v0 ON v0.c0);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((+ (vt0.c0)))AND(((vt0.c1)<=(vt0.c0)))) FULL OUTER JOIN v0 ON v0.c0 WHERE (((rt0.c1)OR(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)OR(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((+ (vt0.c0)))AND(((vt0.c1)<=(vt0.c0)))) FULL OUTER JOIN v0 ON v0.c0);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((+ (vt0.c0)))AND(((vt0.c1)<=(vt0.c0)))) FULL OUTER JOIN v0 ON v0.c0 WHERE (((rt0.c1)OR(rt0.c2)) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)OR(((vt0.c1)OR(rt0.c2)))))OR(CAST(vt0.c0 AS BLOB))))OR((NOT (vt0.c1)))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0 COLLATE NOCASE)OR(((vt0.c1)OR(rt0.c2)))))OR(CAST(vt0.c0 AS BLOB))))OR((NOT (vt0.c1)))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)OR(((vt0.c1)OR(rt0.c2)))))OR(CAST(vt0.c0 AS BLOB))))OR((NOT (vt0.c1)))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0 COLLATE NOCASE)OR(((vt0.c1)OR(rt0.c2)))))OR(CAST(vt0.c0 AS BLOB))))OR((NOT (vt0.c1)))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)OR(((vt0.c1)OR(rt0.c2)))))OR(CAST(vt0.c0 AS BLOB))))OR((NOT (vt0.c1)))))OR((vt0.c0 IN ()))));
SELECT * FROM v0 INNER JOIN rt0 ON (((v0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((NULL) NOTNULL), ((rt0.c0) NOT NULL), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c1))))) AND (((rt0.c1 IN ()), (- (rt0.c1)), (v0.c0 IN ())))) WHERE (LIKELIHOOD(DISTINCT ((((v0.c1)AND(rt0.c1)))OR(v0.c1)), 0.38972840163958267));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((((v0.c1)AND(rt0.c1)))OR(v0.c1)), 0.38972840163958267)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((v0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((NULL) NOTNULL), ((rt0.c0) NOT NULL), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c1))))) AND (((rt0.c1 IN ()), (- (rt0.c1)), (v0.c0 IN ())))));
SELECT * FROM v0 INNER JOIN rt0 ON (((v0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((NULL) NOTNULL), ((rt0.c0) NOT NULL), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c1))))) AND (((rt0.c1 IN ()), (- (rt0.c1)), (v0.c0 IN ())))) WHERE (LIKELIHOOD(DISTINCT ((((v0.c1)AND(rt0.c1)))OR(v0.c1)), 0.38972840163958267));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((((v0.c1)AND(rt0.c1)))OR(v0.c1)), 0.38972840163958267)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((v0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((NULL) NOTNULL), ((rt0.c0) NOT NULL), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c1))))) AND (((rt0.c1 IN ()), (- (rt0.c1)), (v0.c0 IN ())))));
SELECT * FROM v0 INNER JOIN rt0 ON (((v0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((NULL) NOTNULL), ((rt0.c0) NOT NULL), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c1))))) AND (((rt0.c1 IN ()), (- (rt0.c1)), (v0.c0 IN ())))) WHERE (LIKELIHOOD(DISTINCT ((((v0.c1)AND(rt0.c1)))OR(v0.c1)), 0.38972840163958267));
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0) NOT BETWEEN (((v0.c1) ISNULL)) AND (((v0.c1)>>(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (((v0.c1) ISNULL)) AND (((v0.c1)>>(v0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0) NOT BETWEEN (((v0.c1) ISNULL)) AND (((v0.c1)>>(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (((v0.c1) ISNULL)) AND (((v0.c1)>>(v0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0) NOT BETWEEN (((v0.c1) ISNULL)) AND (((v0.c1)>>(v0.c1)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (TRIM(DISTINCT (- (rt0.c0)))) ORDER BY CASE WHEN (NOT (rt0.c0)) THEN ((vt0.c0)AND(rt0.c2)) WHEN vt0.c0 COLLATE BINARY THEN (~ (rt0.c1)) WHEN rt0.c1 THEN ((rt0.c1)>(rt0.c2)) ELSE ((vt0.c0) IS FALSE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (- (rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN (NOT (rt0.c0)) THEN ((vt0.c0)AND(rt0.c2)) WHEN vt0.c0 COLLATE BINARY THEN (~ (rt0.c1)) WHEN rt0.c1 THEN ((rt0.c1)>(rt0.c2)) ELSE ((vt0.c0) IS FALSE) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (TRIM(DISTINCT (- (rt0.c0)))) ORDER BY CASE WHEN (NOT (rt0.c0)) THEN ((vt0.c0)AND(rt0.c2)) WHEN vt0.c0 COLLATE BINARY THEN (~ (rt0.c1)) WHEN rt0.c1 THEN ((rt0.c1)>(rt0.c2)) ELSE ((vt0.c0) IS FALSE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (- (rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN (NOT (rt0.c0)) THEN ((vt0.c0)AND(rt0.c2)) WHEN vt0.c0 COLLATE BINARY THEN (~ (rt0.c1)) WHEN rt0.c1 THEN ((rt0.c1)>(rt0.c2)) ELSE ((vt0.c0) IS FALSE) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (TRIM(DISTINCT (- (rt0.c0)))) ORDER BY CASE WHEN (NOT (rt0.c0)) THEN ((vt0.c0)AND(rt0.c2)) WHEN vt0.c0 COLLATE BINARY THEN (~ (rt0.c1)) WHEN rt0.c1 THEN ((rt0.c1)>(rt0.c2)) ELSE ((vt0.c0) IS FALSE) END  NULLS LAST;
SELECT * FROM v0, vt0 NOT INDEXED WHERE ((((((((((((vt0.c0))>((vt0.c0))))AND((+ (vt0.c0)))))OR(CASE vt0.c0  WHEN v0.c2 THEN vt0.c1 END)))OR(((((((((vt0.c1)OR(v0.c2)))AND(vt0.c0)))OR(v0.c2)))AND(v0.c0)))))AND((vt0.c1 IN ())))) ORDER BY ((vt0.c0 COLLATE RTRIM)<<(IFNULL(vt0.c0, vt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0))>((vt0.c0))))AND((+ (vt0.c0)))))OR(CASE vt0.c0  WHEN v0.c2 THEN vt0.c1 END)))OR(((((((((vt0.c1)OR(v0.c2)))AND(vt0.c0)))OR(v0.c2)))AND(v0.c0)))))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)<<(IFNULL(vt0.c0, vt0.c1))) ASC  NULLS LAST);
SELECT * FROM v0, vt0 NOT INDEXED WHERE ((((((((((((vt0.c0))>((vt0.c0))))AND((+ (vt0.c0)))))OR(CASE vt0.c0  WHEN v0.c2 THEN vt0.c1 END)))OR(((((((((vt0.c1)OR(v0.c2)))AND(vt0.c0)))OR(v0.c2)))AND(v0.c0)))))AND((vt0.c1 IN ())))) ORDER BY ((vt0.c0 COLLATE RTRIM)<<(IFNULL(vt0.c0, vt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0))>((vt0.c0))))AND((+ (vt0.c0)))))OR(CASE vt0.c0  WHEN v0.c2 THEN vt0.c1 END)))OR(((((((((vt0.c1)OR(v0.c2)))AND(vt0.c0)))OR(v0.c2)))AND(v0.c0)))))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)<<(IFNULL(vt0.c0, vt0.c1))) ASC  NULLS LAST);
SELECT * FROM v0, vt0 NOT INDEXED WHERE ((((((((((((vt0.c0))>((vt0.c0))))AND((+ (vt0.c0)))))OR(CASE vt0.c0  WHEN v0.c2 THEN vt0.c1 END)))OR(((((((((vt0.c1)OR(v0.c2)))AND(vt0.c0)))OR(v0.c2)))AND(v0.c0)))))AND((vt0.c1 IN ())))) ORDER BY ((vt0.c0 COLLATE RTRIM)<<(IFNULL(vt0.c0, vt0.c1))) ASC  NULLS LAST;
SELECT ALL * FROM v0, vt0, rt0 WHERE ((CASE WHEN '1385235226' THEN rt0.c0 END IN ((('^R')&(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN '1385235226' THEN rt0.c0 END IN ((('^R')&(vt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((CASE WHEN '1385235226' THEN rt0.c0 END IN ((('^R')&(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN '1385235226' THEN rt0.c0 END IN ((('^R')&(vt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((CASE WHEN '1385235226' THEN rt0.c0 END IN ((('^R')&(vt0.c1)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c1)AND(v0.c0))) BETWEEN ((+ (vt0.c1))) AND (TRIM(vt0.c0)))) ORDER BY vt0.c0 DESC, (- (NULL))  NULLS FIRST, ((('529347057')&(vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((((v0.c1)AND(v0.c0))) BETWEEN ((+ (vt0.c1))) AND (TRIM(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0 DESC, (- (NULL))  NULLS FIRST, ((('529347057')&(vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c1)AND(v0.c0))) BETWEEN ((+ (vt0.c1))) AND (TRIM(vt0.c0)))) ORDER BY vt0.c0 DESC, (- (NULL))  NULLS FIRST, ((('529347057')&(vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((((v0.c1)AND(v0.c0))) BETWEEN ((+ (vt0.c1))) AND (TRIM(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0 DESC, (- (NULL))  NULLS FIRST, ((('529347057')&(vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c1)AND(v0.c0))) BETWEEN ((+ (vt0.c1))) AND (TRIM(vt0.c0)))) ORDER BY vt0.c0 DESC, (- (NULL))  NULLS FIRST, ((('529347057')&(vt0.c1)) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 AS TEXT) COLLATE RTRIM WHERE ((+ (0Xffffffffbb7879d4)));
SELECT SUM(count) FROM (SELECT (((+ (0Xffffffffbb7879d4))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 AS TEXT) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 AS TEXT) COLLATE RTRIM WHERE ((+ (0Xffffffffbb7879d4)));
SELECT SUM(count) FROM (SELECT (((+ (0Xffffffffbb7879d4))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 AS TEXT) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 AS TEXT) COLLATE RTRIM WHERE ((+ (0Xffffffffbb7879d4)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((vt0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((vt0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((vt0.c1 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((((('''prI12')AND(vt0.c1)))AND(vt0.c0))) ISNULL) WHERE ((((v0.c0 IN (v0.c2, vt0.c1)))+(((v0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c2, vt0.c1)))+(((v0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((('''prI12')AND(vt0.c1)))AND(vt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((((('''prI12')AND(vt0.c1)))AND(vt0.c0))) ISNULL) WHERE ((((v0.c0 IN (v0.c2, vt0.c1)))+(((v0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c2, vt0.c1)))+(((v0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((('''prI12')AND(vt0.c1)))AND(vt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((((('''prI12')AND(vt0.c1)))AND(vt0.c0))) ISNULL) WHERE ((((v0.c0 IN (v0.c2, vt0.c1)))+(((v0.c1) IS TRUE))));
SELECT * FROM v0 WHERE (CAST(((v0.c1)|(v0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1)|(v0.c2)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((v0.c1)|(v0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1)|(v0.c2)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((v0.c1)|(v0.c2)) AS BLOB));
SELECT ALL * FROM v0, vt0 WHERE (vt0.c1) ORDER BY UNLIKELY(DISTINCT ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c1)))OR(v0.c2)));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY UNLIKELY(DISTINCT ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c1)))OR(v0.c2))));
SELECT ALL * FROM v0, vt0 WHERE (vt0.c1) ORDER BY UNLIKELY(DISTINCT ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c1)))OR(v0.c2)));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY UNLIKELY(DISTINCT ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c1)))OR(v0.c2))));
SELECT ALL * FROM v0, vt0 WHERE (vt0.c1) ORDER BY UNLIKELY(DISTINCT ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c1)))OR(v0.c2)));
SELECT COUNT(*) FROM v0 WHERE ((CASE NULL  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END IN ())) ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))))*(((v0.c0)&(v0.c0)))), 0X1f8d31f1 DESC  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE NULL  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END IN ())) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))))*(((v0.c0)&(v0.c0)))), 0X1f8d31f1 DESC  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2))) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((CASE NULL  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END IN ())) ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))))*(((v0.c0)&(v0.c0)))), 0X1f8d31f1 DESC  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE NULL  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END IN ())) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))))*(((v0.c0)&(v0.c0)))), 0X1f8d31f1 DESC  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2))) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)LIKE(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c1 END)) INNER JOIN rt0 ON ((((((((((rt0.c1)OR('e*vP')))OR(v0.c0)))AND(v0.c0)))OR(vt0.c1)))%(((rt0.c0) ISNULL))) WHERE (((((((((NULL COLLATE BINARY)AND(CASE vt0.c1  WHEN v0.c1 THEN v0.c1 END)))AND(CASE WHEN rt0.c0 THEN rt0.c0 END)))AND(0Xbca94d6)))OR(HEX(DISTINCT x'7d4413b8'))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL COLLATE BINARY)AND(CASE vt0.c1  WHEN v0.c1 THEN v0.c1 END)))AND(CASE WHEN rt0.c0 THEN rt0.c0 END)))AND(0xbca94d6)))OR(HEX(DISTINCT x'7d4413b8')))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)LIKE(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c1 END)) INNER JOIN rt0 ON ((((((((((rt0.c1)OR('e*vP')))OR(v0.c0)))AND(v0.c0)))OR(vt0.c1)))%(((rt0.c0) ISNULL))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)LIKE(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c1 END)) INNER JOIN rt0 ON ((((((((((rt0.c1)OR('e*vP')))OR(v0.c0)))AND(v0.c0)))OR(vt0.c1)))%(((rt0.c0) ISNULL))) WHERE (((((((((NULL COLLATE BINARY)AND(CASE vt0.c1  WHEN v0.c1 THEN v0.c1 END)))AND(CASE WHEN rt0.c0 THEN rt0.c0 END)))AND(0Xbca94d6)))OR(HEX(DISTINCT x'7d4413b8'))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL COLLATE BINARY)AND(CASE vt0.c1  WHEN v0.c1 THEN v0.c1 END)))AND(CASE WHEN rt0.c0 THEN rt0.c0 END)))AND(0xbca94d6)))OR(HEX(DISTINCT x'7d4413b8')))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)LIKE(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c1 END)) INNER JOIN rt0 ON ((((((((((rt0.c1)OR('e*vP')))OR(v0.c0)))AND(v0.c0)))OR(vt0.c1)))%(((rt0.c0) ISNULL))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)LIKE(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c1 END)) INNER JOIN rt0 ON ((((((((((rt0.c1)OR('e*vP')))OR(v0.c0)))AND(v0.c0)))OR(vt0.c1)))%(((rt0.c0) ISNULL))) WHERE (((((((((NULL COLLATE BINARY)AND(CASE vt0.c1  WHEN v0.c1 THEN v0.c1 END)))AND(CASE WHEN rt0.c0 THEN rt0.c0 END)))AND(0Xbca94d6)))OR(HEX(DISTINCT x'7d4413b8'))));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (v0.c2);
SELECT * FROM vt0, rt0, v0 WHERE (((((rt0.c1 COLLATE RTRIM)AND(((((vt0.c1)OR(rt0.c1)))AND(v0.c2)))))AND((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE RTRIM)AND(((((vt0.c1)OR(rt0.c1)))AND(v0.c2)))))AND((- (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((rt0.c1 COLLATE RTRIM)AND(((((vt0.c1)OR(rt0.c1)))AND(v0.c2)))))AND((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE RTRIM)AND(((((vt0.c1)OR(rt0.c1)))AND(v0.c2)))))AND((- (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((rt0.c1 COLLATE RTRIM)AND(((((vt0.c1)OR(rt0.c1)))AND(v0.c2)))))AND((- (vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c1) NOT BETWEEN (vt0.c1) AND (v0.c2))) IS TRUE) WHERE (v0.c0) ORDER BY (((+ (vt0.c0)))|(v0.c2)), (CASE WHEN vt0.c1 THEN vt0.c0 END IN (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((v0.c1) NOT BETWEEN (vt0.c1) AND (v0.c2))) IS TRUE) ORDER BY (((+ (vt0.c0)))|(v0.c2)), (CASE WHEN vt0.c1 THEN vt0.c0 END IN (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c1) NOT BETWEEN (vt0.c1) AND (v0.c2))) IS TRUE) WHERE (v0.c0) ORDER BY (((+ (vt0.c0)))|(v0.c2)), (CASE WHEN vt0.c1 THEN vt0.c0 END IN (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((v0.c1) NOT BETWEEN (vt0.c1) AND (v0.c2))) IS TRUE) ORDER BY (((+ (vt0.c0)))|(v0.c2)), (CASE WHEN vt0.c1 THEN vt0.c0 END IN (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c1) NOT BETWEEN (vt0.c1) AND (v0.c2))) IS TRUE) WHERE (v0.c0) ORDER BY (((+ (vt0.c0)))|(v0.c2)), (CASE WHEN vt0.c1 THEN vt0.c0 END IN (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)|(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (0.16943618786321724) AND (vt0.c1))) AND (((vt0.c0) ISNULL)))) ORDER BY (((~ (vt0.c0))) IS FALSE)  NULLS LAST, (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) IN (((vt0.c1)=(vt0.c0)))) DESC  NULLS LAST, ('<h菜V' IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)|(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (0.16943618786321724) AND (vt0.c1))) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) IS FALSE)  NULLS LAST, (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) IN (((vt0.c1)=(vt0.c0)))) DESC  NULLS LAST, ('<h菜V' IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)|(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (0.16943618786321724) AND (vt0.c1))) AND (((vt0.c0) ISNULL)))) ORDER BY (((~ (vt0.c0))) IS FALSE)  NULLS LAST, (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) IN (((vt0.c1)=(vt0.c0)))) DESC  NULLS LAST, ('<h菜V' IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)|(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (0.16943618786321724) AND (vt0.c1))) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) IS FALSE)  NULLS LAST, (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) IN (((vt0.c1)=(vt0.c0)))) DESC  NULLS LAST, ('<h菜V' IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)|(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (0.16943618786321724) AND (vt0.c1))) AND (((vt0.c0) ISNULL)))) ORDER BY (((~ (vt0.c0))) IS FALSE)  NULLS LAST, (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) IN (((vt0.c1)=(vt0.c0)))) DESC  NULLS LAST, ('<h菜V' IN ()) ASC;
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((((((((((x'')OR(CAST(x'9abcc5a0' AS REAL))))OR((- (v0.c2)))))AND(((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c1)))OR(rt0.c1)))))AND((- (vt0.c0)))))AND((((rt0.c0, rt0.c2, rt0.c2, '6l''Y', v0.c1, v0.c1, rt0.c1)) BETWEEN ((rt0.c1, v0.c1, v0.c0, rt0.c2, v0.c2, v0.c1, '0.6677326496476652')) AND ((rt0.c2, rt0.c0, vt0.c1, v0.c0, rt0.c0, NULL, rt0.c1))))))OR(rt0.c1 COLLATE RTRIM))) ORDER BY CASE WHEN (((vt0.c0, rt0.c2, v0.c0))>=((v0.c0, v0.c1, vt0.c1))) THEN CAST(v0.c0 AS INTEGER) END, x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((x'')OR(CAST(x'9abcc5a0' AS REAL))))OR((- (v0.c2)))))AND(((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c1)))OR(rt0.c1)))))AND((- (vt0.c0)))))AND((((rt0.c0, rt0.c2, rt0.c2, '6l''Y', v0.c1, v0.c1, rt0.c1)) BETWEEN ((rt0.c1, v0.c1, v0.c0, rt0.c2, v0.c2, v0.c1, '0.6677326496476652')) AND ((rt0.c2, rt0.c0, vt0.c1, v0.c0, rt0.c0, NULL, rt0.c1))))))OR(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE WHEN (((vt0.c0, rt0.c2, v0.c0))>=((v0.c0, v0.c1, vt0.c1))) THEN CAST(v0.c0 AS INTEGER) END, x'' ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((((((((((x'')OR(CAST(x'9abcc5a0' AS REAL))))OR((- (v0.c2)))))AND(((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c1)))OR(rt0.c1)))))AND((- (vt0.c0)))))AND((((rt0.c0, rt0.c2, rt0.c2, '6l''Y', v0.c1, v0.c1, rt0.c1)) BETWEEN ((rt0.c1, v0.c1, v0.c0, rt0.c2, v0.c2, v0.c1, '0.6677326496476652')) AND ((rt0.c2, rt0.c0, vt0.c1, v0.c0, rt0.c0, NULL, rt0.c1))))))OR(rt0.c1 COLLATE RTRIM))) ORDER BY CASE WHEN (((vt0.c0, rt0.c2, v0.c0))>=((v0.c0, v0.c1, vt0.c1))) THEN CAST(v0.c0 AS INTEGER) END, x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((x'')OR(CAST(x'9abcc5a0' AS REAL))))OR((- (v0.c2)))))AND(((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c1)))OR(rt0.c1)))))AND((- (vt0.c0)))))AND((((rt0.c0, rt0.c2, rt0.c2, '6l''Y', v0.c1, v0.c1, rt0.c1)) BETWEEN ((rt0.c1, v0.c1, v0.c0, rt0.c2, v0.c2, v0.c1, '0.6677326496476652')) AND ((rt0.c2, rt0.c0, vt0.c1, v0.c0, rt0.c0, NULL, rt0.c1))))))OR(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE WHEN (((vt0.c0, rt0.c2, v0.c0))>=((v0.c0, v0.c1, vt0.c1))) THEN CAST(v0.c0 AS INTEGER) END, x'' ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((((((((((x'')OR(CAST(x'9abcc5a0' AS REAL))))OR((- (v0.c2)))))AND(((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c1)))OR(rt0.c1)))))AND((- (vt0.c0)))))AND((((rt0.c0, rt0.c2, rt0.c2, '6l''Y', v0.c1, v0.c1, rt0.c1)) BETWEEN ((rt0.c1, v0.c1, v0.c0, rt0.c2, v0.c2, v0.c1, '0.6677326496476652')) AND ((rt0.c2, rt0.c0, vt0.c1, v0.c0, rt0.c0, NULL, rt0.c1))))))OR(rt0.c1 COLLATE RTRIM))) ORDER BY CASE WHEN (((vt0.c0, rt0.c2, v0.c0))>=((v0.c0, v0.c1, vt0.c1))) THEN CAST(v0.c0 AS INTEGER) END, x'' ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0) NOT NULL))<=(ABS(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))<=(ABS(v0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0) NOT NULL))<=(ABS(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))<=(ABS(v0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0) NOT NULL))<=(ABS(v0.c0))));
SELECT ALL * FROM vt0, v0 NOT INDEXED WHERE ('c2');
SELECT SUM(count) FROM (SELECT (('c2') IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 NOT INDEXED WHERE ('c2');
SELECT SUM(count) FROM (SELECT (('c2') IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 NOT INDEXED WHERE ('c2');
SELECT COUNT(*) FROM v0 WHERE (((v0.c1 COLLATE BINARY)IS NOT(((((v0.c0)OR(v0.c2)))AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE BINARY)IS NOT(((((v0.c0)OR(v0.c2)))AND(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c1 COLLATE BINARY)IS NOT(((((v0.c0)OR(v0.c2)))AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE BINARY)IS NOT(((((v0.c0)OR(v0.c2)))AND(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c1 COLLATE BINARY)IS NOT(((((v0.c0)OR(v0.c2)))AND(v0.c2)))));
SELECT * FROM rt0, v0 WHERE (CAST(((((((((rt0.c2)AND(v0.c1)))AND(v0.c0)))AND(v0.c2)))AND(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)AND(v0.c1)))AND(v0.c0)))AND(v0.c2)))AND(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(((((((((rt0.c2)AND(v0.c1)))AND(v0.c0)))AND(v0.c2)))AND(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)AND(v0.c1)))AND(v0.c0)))AND(v0.c2)))AND(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(((((((((rt0.c2)AND(v0.c1)))AND(v0.c0)))AND(v0.c2)))AND(rt0.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(CAST(x'' AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(CAST(x'' AS NUMERIC))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(CAST(x'' AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(CAST(x'' AS NUMERIC))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(CAST(x'' AS NUMERIC)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))LIKE(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))LIKE(vt0.c0))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))LIKE(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))LIKE(vt0.c0))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))LIKE(vt0.c0)));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON CASE ((((((((NULL)OR(v0.c0)))OR(v0.c0)))OR(5.29347057E8)))AND(rt0.c2))  WHEN CAST(rt0.c0 AS NUMERIC) THEN ((v0.c0)AND(rt0.c0)) END CROSS JOIN vt0 ON CAST(HEX(rt0.c1) AS REAL) WHERE ((((NOT (rt0.c2))) ISNULL)) ORDER BY (((((v0.c0)AND(rt0.c2)))AND(vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) ISNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON CASE ((((((((NULL)OR(v0.c0)))OR(v0.c0)))OR(5.29347057E8)))AND(rt0.c2))  WHEN CAST(rt0.c0 AS NUMERIC) THEN ((v0.c0)AND(rt0.c0)) END CROSS JOIN vt0 ON CAST(HEX(rt0.c1) AS REAL) ORDER BY (((((v0.c0)AND(rt0.c2)))AND(vt0.c0)) IN ()) ASC  NULLS LAST);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON CASE ((((((((NULL)OR(v0.c0)))OR(v0.c0)))OR(5.29347057E8)))AND(rt0.c2))  WHEN CAST(rt0.c0 AS NUMERIC) THEN ((v0.c0)AND(rt0.c0)) END CROSS JOIN vt0 ON CAST(HEX(rt0.c1) AS REAL) WHERE ((((NOT (rt0.c2))) ISNULL)) ORDER BY (((((v0.c0)AND(rt0.c2)))AND(vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) ISNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON CASE ((((((((NULL)OR(v0.c0)))OR(v0.c0)))OR(5.29347057E8)))AND(rt0.c2))  WHEN CAST(rt0.c0 AS NUMERIC) THEN ((v0.c0)AND(rt0.c0)) END CROSS JOIN vt0 ON CAST(HEX(rt0.c1) AS REAL) ORDER BY (((((v0.c0)AND(rt0.c2)))AND(vt0.c0)) IN ()) ASC  NULLS LAST);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON CASE ((((((((NULL)OR(v0.c0)))OR(v0.c0)))OR(5.29347057E8)))AND(rt0.c2))  WHEN CAST(rt0.c0 AS NUMERIC) THEN ((v0.c0)AND(rt0.c0)) END CROSS JOIN vt0 ON CAST(HEX(rt0.c1) AS REAL) WHERE ((((NOT (rt0.c2))) ISNULL)) ORDER BY (((((v0.c0)AND(rt0.c2)))AND(vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((v0.c1 IN ()))IS NOT(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ()))IS NOT(rt0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((v0.c1 IN ()))IS NOT(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ()))IS NOT(rt0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((v0.c1 IN ()))IS NOT(rt0.c2)));
SELECT ALL * FROM v0, rt0 WHERE ((('' IN (v0.c0)) IN ())) ORDER BY ((((v0.c0) NOTNULL))+(SQLITE_SOURCE_ID()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('' IN (v0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0) NOTNULL))+(SQLITE_SOURCE_ID()))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((('' IN (v0.c0)) IN ())) ORDER BY ((((v0.c0) NOTNULL))+(SQLITE_SOURCE_ID()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('' IN (v0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0) NOTNULL))+(SQLITE_SOURCE_ID()))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((('' IN (v0.c0)) IN ())) ORDER BY ((((v0.c0) NOTNULL))+(SQLITE_SOURCE_ID()))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c2 AS NUMERIC))<<(LOWER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC))<<(LOWER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c2 AS NUMERIC))<<(LOWER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC))<<(LOWER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c2 AS NUMERIC))<<(LOWER(DISTINCT rt0.c2))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CASE vt0.c1  WHEN rt0.c0 COLLATE BINARY THEN vt0.c1 WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) THEN CASE v0.c2  WHEN v0.c2 THEN rt0.c0 ELSE rt0.c2 END WHEN CAST(NULL AS INTEGER) THEN NULL END) ORDER BY ((((((rt0.c2)AND(v0.c1)))AND(v0.c1))) BETWEEN ((rt0.c0 IN ())) AND (((((((((v0.c1)AND(vt0.c1)))OR(v0.c0)))OR(rt0.c1)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN rt0.c0 COLLATE BINARY THEN vt0.c1 WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) THEN CASE v0.c2  WHEN v0.c2 THEN rt0.c0 ELSE rt0.c2 END WHEN CAST(NULL AS INTEGER) THEN NULL END) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((rt0.c2)AND(v0.c1)))AND(v0.c1))) BETWEEN ((rt0.c0 IN ())) AND (((((((((v0.c1)AND(vt0.c1)))OR(v0.c0)))OR(rt0.c1)))OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CASE vt0.c1  WHEN rt0.c0 COLLATE BINARY THEN vt0.c1 WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) THEN CASE v0.c2  WHEN v0.c2 THEN rt0.c0 ELSE rt0.c2 END WHEN CAST(NULL AS INTEGER) THEN NULL END) ORDER BY ((((((rt0.c2)AND(v0.c1)))AND(v0.c1))) BETWEEN ((rt0.c0 IN ())) AND (((((((((v0.c1)AND(vt0.c1)))OR(v0.c0)))OR(rt0.c1)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN rt0.c0 COLLATE BINARY THEN vt0.c1 WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) THEN CASE v0.c2  WHEN v0.c2 THEN rt0.c0 ELSE rt0.c2 END WHEN CAST(NULL AS INTEGER) THEN NULL END) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((rt0.c2)AND(v0.c1)))AND(v0.c1))) BETWEEN ((rt0.c0 IN ())) AND (((((((((v0.c1)AND(vt0.c1)))OR(v0.c0)))OR(rt0.c1)))OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CASE vt0.c1  WHEN rt0.c0 COLLATE BINARY THEN vt0.c1 WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) THEN CASE v0.c2  WHEN v0.c2 THEN rt0.c0 ELSE rt0.c2 END WHEN CAST(NULL AS INTEGER) THEN NULL END) ORDER BY ((((((rt0.c2)AND(v0.c1)))AND(v0.c1))) BETWEEN ((rt0.c0 IN ())) AND (((((((((v0.c1)AND(vt0.c1)))OR(v0.c0)))OR(rt0.c1)))OR(vt0.c0))))  NULLS LAST;
SELECT * FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c1)/(v0.c1))) ISNULL) WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((CAST(v0.c1 AS REAL))))) ORDER BY CASE LTRIM(NULL, v0.c0)  WHEN ((rt0.c0)+(vt0.c0)) THEN '-260775783' END, ('^R' IN (((rt0.c0)+(v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((CAST(v0.c1 AS REAL))))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c1)/(v0.c1))) ISNULL) ORDER BY CASE LTRIM(NULL, v0.c0)  WHEN ((rt0.c0)+(vt0.c0)) THEN '-260775783' END, ('^R' IN (((rt0.c0)+(v0.c1))))  NULLS FIRST);
SELECT * FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c1)/(v0.c1))) ISNULL) WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((CAST(v0.c1 AS REAL))))) ORDER BY CASE LTRIM(NULL, v0.c0)  WHEN ((rt0.c0)+(vt0.c0)) THEN '-260775783' END, ('^R' IN (((rt0.c0)+(v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((CAST(v0.c1 AS REAL))))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c1)/(v0.c1))) ISNULL) ORDER BY CASE LTRIM(NULL, v0.c0)  WHEN ((rt0.c0)+(vt0.c0)) THEN '-260775783' END, ('^R' IN (((rt0.c0)+(v0.c1))))  NULLS FIRST);
SELECT * FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c1)/(v0.c1))) ISNULL) WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((CAST(v0.c1 AS REAL))))) ORDER BY CASE LTRIM(NULL, v0.c0)  WHEN ((rt0.c0)+(vt0.c0)) THEN '-260775783' END, ('^R' IN (((rt0.c0)+(v0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(v0.c1 AS NUMERIC)) BETWEEN ((NOT (rt0.c0))) AND (((((rt0.c0)OR(0.02849870503910734)))AND(rt0.c0))))) ORDER BY ((('*^Br')IS(rt0.c0)) IN ()) ASC  NULLS FIRST, (- (((rt0.c1)%(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS NUMERIC)) BETWEEN ((NOT (rt0.c0))) AND (((((rt0.c0)OR(0.02849870503910734)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((('*^Br')IS(rt0.c0)) IN ()) ASC  NULLS FIRST, (- (((rt0.c1)%(rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(v0.c1 AS NUMERIC)) BETWEEN ((NOT (rt0.c0))) AND (((((rt0.c0)OR(0.02849870503910734)))AND(rt0.c0))))) ORDER BY ((('*^Br')IS(rt0.c0)) IN ()) ASC  NULLS FIRST, (- (((rt0.c1)%(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS NUMERIC)) BETWEEN ((NOT (rt0.c0))) AND (((((rt0.c0)OR(0.02849870503910734)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((('*^Br')IS(rt0.c0)) IN ()) ASC  NULLS FIRST, (- (((rt0.c1)%(rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(v0.c1 AS NUMERIC)) BETWEEN ((NOT (rt0.c0))) AND (((((rt0.c0)OR(0.02849870503910734)))AND(rt0.c0))))) ORDER BY ((('*^Br')IS(rt0.c0)) IN ()) ASC  NULLS FIRST, (- (((rt0.c1)%(rt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE ((0.5927298547463423 IN ())) ORDER BY (((v0.c2)AND(v0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((0.5927298547463423 IN ())) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0 ORDER BY (((v0.c2)AND(v0.c1)) IN ()) ASC);
SELECT COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE ((0.5927298547463423 IN ())) ORDER BY (((v0.c2)AND(v0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((0.5927298547463423 IN ())) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0 ORDER BY (((v0.c2)AND(v0.c1)) IN ()) ASC);
SELECT COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE ((0.5927298547463423 IN ())) ORDER BY (((v0.c2)AND(v0.c1)) IN ()) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((NOT (vt0.c0)))OR(((vt0.c0) BETWEEN (rt0.c1) AND (0x253d242e)))))AND(((vt0.c0) NOT NULL)))) ORDER BY ((rt0.c1 COLLATE NOCASE) BETWEEN ((vt0.c0 IN ())) AND (NULL))  NULLS FIRST, CASE WHEN ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((rt0.c2)-(NULL)) THEN ((rt0.c0)GLOB(rt0.c1)) WHEN ((-1.922096179E9) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((vt0.c0) NOTNULL) END  NULLS LAST, 0xffffffffd0902c74 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt0.c0)))OR(((vt0.c0) BETWEEN (rt0.c1) AND (0X253d242e)))))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1 COLLATE NOCASE) BETWEEN ((vt0.c0 IN ())) AND (NULL))  NULLS FIRST, CASE WHEN ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((rt0.c2)-(NULL)) THEN ((rt0.c0)GLOB(rt0.c1)) WHEN ((-1.922096179E9) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((vt0.c0) NOTNULL) END  NULLS LAST, 0Xffffffffd0902c74 DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((NOT (vt0.c0)))OR(((vt0.c0) BETWEEN (rt0.c1) AND (0x253d242e)))))AND(((vt0.c0) NOT NULL)))) ORDER BY ((rt0.c1 COLLATE NOCASE) BETWEEN ((vt0.c0 IN ())) AND (NULL))  NULLS FIRST, CASE WHEN ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((rt0.c2)-(NULL)) THEN ((rt0.c0)GLOB(rt0.c1)) WHEN ((-1.922096179E9) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((vt0.c0) NOTNULL) END  NULLS LAST, 0xffffffffd0902c74 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt0.c0)))OR(((vt0.c0) BETWEEN (rt0.c1) AND (0X253d242e)))))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1 COLLATE NOCASE) BETWEEN ((vt0.c0 IN ())) AND (NULL))  NULLS FIRST, CASE WHEN ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((rt0.c2)-(NULL)) THEN ((rt0.c0)GLOB(rt0.c1)) WHEN ((-1.922096179E9) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((vt0.c0) NOTNULL) END  NULLS LAST, 0Xffffffffd0902c74 DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((NOT (vt0.c0)))OR(((vt0.c0) BETWEEN (rt0.c1) AND (0x253d242e)))))AND(((vt0.c0) NOT NULL)))) ORDER BY ((rt0.c1 COLLATE NOCASE) BETWEEN ((vt0.c0 IN ())) AND (NULL))  NULLS FIRST, CASE WHEN ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((rt0.c2)-(NULL)) THEN ((rt0.c0)GLOB(rt0.c1)) WHEN ((-1.922096179E9) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((vt0.c0) NOTNULL) END  NULLS LAST, 0xffffffffd0902c74 DESC;
SELECT * FROM v0 WHERE ((((TIME(0.47723614551527516, v0.c2, v0.c2, v0.c0, v0.c0, v0.c1, v0.c0), ((((((((((((v0.c1)OR(v0.c0)))OR(v0.c0)))AND(v0.c1)))AND(v0.c2)))OR(v0.c0)))AND(v0.c1)), ((v0.c1)|(v0.c1))))>((TYPEOF(v0.c2), '-661735012', ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))))) ORDER BY ((v0.c1 IN ()) IN ()), (((v0.c2)<<(v0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((TIME(0.47723614551527516, v0.c2, v0.c2, v0.c0, v0.c0, v0.c1, v0.c0), ((((((((((((v0.c1)OR(v0.c0)))OR(v0.c0)))AND(v0.c1)))AND(v0.c2)))OR(v0.c0)))AND(v0.c1)), ((v0.c1)|(v0.c1))))>((TYPEOF(v0.c2), '-661735012', ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1 IN ()) IN ()), (((v0.c2)<<(v0.c2)) IN ()));
SELECT * FROM v0 WHERE ((((TIME(0.47723614551527516, v0.c2, v0.c2, v0.c0, v0.c0, v0.c1, v0.c0), ((((((((((((v0.c1)OR(v0.c0)))OR(v0.c0)))AND(v0.c1)))AND(v0.c2)))OR(v0.c0)))AND(v0.c1)), ((v0.c1)|(v0.c1))))>((TYPEOF(v0.c2), '-661735012', ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))))) ORDER BY ((v0.c1 IN ()) IN ()), (((v0.c2)<<(v0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((TIME(0.47723614551527516, v0.c2, v0.c2, v0.c0, v0.c0, v0.c1, v0.c0), ((((((((((((v0.c1)OR(v0.c0)))OR(v0.c0)))AND(v0.c1)))AND(v0.c2)))OR(v0.c0)))AND(v0.c1)), ((v0.c1)|(v0.c1))))>((TYPEOF(v0.c2), '-661735012', ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1 IN ()) IN ()), (((v0.c2)<<(v0.c2)) IN ()));
SELECT * FROM v0 WHERE ((((TIME(0.47723614551527516, v0.c2, v0.c2, v0.c0, v0.c0, v0.c1, v0.c0), ((((((((((((v0.c1)OR(v0.c0)))OR(v0.c0)))AND(v0.c1)))AND(v0.c2)))OR(v0.c0)))AND(v0.c1)), ((v0.c1)|(v0.c1))))>((TYPEOF(v0.c2), '-661735012', ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))))) ORDER BY ((v0.c1 IN ()) IN ()), (((v0.c2)<<(v0.c2)) IN ());
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c2))) BETWEEN (v0.c1 COLLATE RTRIM) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c2))) BETWEEN (v0.c1 COLLATE RTRIM) AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c2))) BETWEEN (v0.c1 COLLATE RTRIM) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c2))) BETWEEN (v0.c1 COLLATE RTRIM) AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c2))) BETWEEN (v0.c1 COLLATE RTRIM) AND (v0.c0)));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE);
SELECT * FROM v0, rt0 NATURAL JOIN vt0 WHERE (((NULL)IS(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS(x''))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0);
SELECT * FROM v0, rt0 NATURAL JOIN vt0 WHERE (((NULL)IS(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS(x''))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0);
SELECT * FROM v0, rt0 NATURAL JOIN vt0 WHERE (((NULL)IS(x'')));
SELECT ALL * FROM v0 WHERE ((NOT (((v0.c1)IS NOT(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c1)IS NOT(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (((v0.c1)IS NOT(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c1)IS NOT(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (((v0.c1)IS NOT(v0.c1)))));
SELECT * FROM v0, vt0 WHERE (((v0.c2 COLLATE NOCASE)IS NOT(CASE v0.c0  WHEN v0.c0 THEN NULL ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE NOCASE)IS NOT(CASE v0.c0  WHEN v0.c0 THEN NULL ELSE vt0.c1 END))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((v0.c2 COLLATE NOCASE)IS NOT(CASE v0.c0  WHEN v0.c0 THEN NULL ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE NOCASE)IS NOT(CASE v0.c0  WHEN v0.c0 THEN NULL ELSE vt0.c1 END))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((v0.c2 COLLATE NOCASE)IS NOT(CASE v0.c0  WHEN v0.c0 THEN NULL ELSE vt0.c1 END)));
SELECT ALL * FROM v0, vt0, rt0 WHERE (((rt0.c1)<(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)<(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((rt0.c1)<(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)<(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((rt0.c1)<(CAST(vt0.c0 AS NUMERIC))));
SELECT * FROM v0 WHERE (((((((((((((v0.c1)OR(((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))))AND(CAST(v0.c0 AS REAL))))AND(CAST(v0.c2 AS BLOB))))AND(CAST(v0.c2 AS NUMERIC))))OR((('624763950')IS NOT(v0.c0)))))AND(((v0.c0) IS FALSE)))) ORDER BY ((((v0.c0) NOT NULL))|(v0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c1)OR(((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))))AND(CAST(v0.c0 AS REAL))))AND(CAST(v0.c2 AS BLOB))))AND(CAST(v0.c2 AS NUMERIC))))OR((('624763950')IS NOT(v0.c0)))))AND(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL))|(v0.c1 COLLATE BINARY)));
SELECT * FROM v0 WHERE (((((((((((((v0.c1)OR(((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))))AND(CAST(v0.c0 AS REAL))))AND(CAST(v0.c2 AS BLOB))))AND(CAST(v0.c2 AS NUMERIC))))OR((('624763950')IS NOT(v0.c0)))))AND(((v0.c0) IS FALSE)))) ORDER BY ((((v0.c0) NOT NULL))|(v0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c1)OR(((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))))AND(CAST(v0.c0 AS REAL))))AND(CAST(v0.c2 AS BLOB))))AND(CAST(v0.c2 AS NUMERIC))))OR((('624763950')IS NOT(v0.c0)))))AND(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL))|(v0.c1 COLLATE BINARY)));
SELECT * FROM v0 WHERE (((((((((((((v0.c1)OR(((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))))AND(CAST(v0.c0 AS REAL))))AND(CAST(v0.c2 AS BLOB))))AND(CAST(v0.c2 AS NUMERIC))))OR((('624763950')IS NOT(v0.c0)))))AND(((v0.c0) IS FALSE)))) ORDER BY ((((v0.c0) NOT NULL))|(v0.c1 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON CASE WHEN v0.c1 THEN (((rt0.c0, x'2001', rt0.c2, v0.c2, rt0.c0))>=((rt0.c2, rt0.c2, vt0.c0, vt0.c1, v0.c2))) END RIGHT OUTER JOIN rt0 ON x'170a' WHERE (CASE WHEN CAST(v0.c1 AS NUMERIC) THEN CAST(v0.c0 AS INTEGER) END) ORDER BY CAST((+ (v0.c0)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c1 AS NUMERIC) THEN CAST(v0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE WHEN v0.c1 THEN (((rt0.c0, x'2001', rt0.c2, v0.c2, rt0.c0))>=((rt0.c2, rt0.c2, vt0.c0, vt0.c1, v0.c2))) END RIGHT OUTER JOIN rt0 ON x'170a' ORDER BY CAST((+ (v0.c0)) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON CASE WHEN v0.c1 THEN (((rt0.c0, x'2001', rt0.c2, v0.c2, rt0.c0))>=((rt0.c2, rt0.c2, vt0.c0, vt0.c1, v0.c2))) END RIGHT OUTER JOIN rt0 ON x'170a' WHERE (CASE WHEN CAST(v0.c1 AS NUMERIC) THEN CAST(v0.c0 AS INTEGER) END) ORDER BY CAST((+ (v0.c0)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c1 AS NUMERIC) THEN CAST(v0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE WHEN v0.c1 THEN (((rt0.c0, x'2001', rt0.c2, v0.c2, rt0.c0))>=((rt0.c2, rt0.c2, vt0.c0, vt0.c1, v0.c2))) END RIGHT OUTER JOIN rt0 ON x'170a' ORDER BY CAST((+ (v0.c0)) AS TEXT) ASC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON x'' FULL OUTER JOIN rt0 ON CAST(((v0.c2) ISNULL) AS TEXT) WHERE ((((((vt0.c0))>=((v0.c0))))IS NOT(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((v0.c0))))IS NOT(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON x'' FULL OUTER JOIN rt0 ON CAST(((v0.c2) ISNULL) AS TEXT));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON x'' FULL OUTER JOIN rt0 ON CAST(((v0.c2) ISNULL) AS TEXT) WHERE ((((((vt0.c0))>=((v0.c0))))IS NOT(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((v0.c0))))IS NOT(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON x'' FULL OUTER JOIN rt0 ON CAST(((v0.c2) ISNULL) AS TEXT));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON x'' FULL OUTER JOIN rt0 ON CAST(((v0.c2) ISNULL) AS TEXT) WHERE ((((((vt0.c0))>=((v0.c0))))IS NOT(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM vt0, v0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS TEXT));
SELECT ALL * FROM v0 WHERE ((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY (v0.c1 IN ((('0.3051218252843131') NOT BETWEEN (x'') AND (v0.c1)), CASE 0.48759937766904016  WHEN v0.c2 THEN v0.c2 END)) ASC  NULLS FIRST, ((((CASE v0.c1  WHEN v0.c2 THEN v0.c1 END)OR((((((((('529347057')AND(v0.c1)))AND(v0.c1)))AND(v0.c2)))OR(0.29620197180973196)))))OR(UNLIKELY(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (v0.c1 IN ((('0.3051218252843131') NOT BETWEEN (x'') AND (v0.c1)), CASE 0.48759937766904016  WHEN v0.c2 THEN v0.c2 END)) ASC  NULLS FIRST, ((((CASE v0.c1  WHEN v0.c2 THEN v0.c1 END)OR((((((((('529347057')AND(v0.c1)))AND(v0.c1)))AND(v0.c2)))OR(0.29620197180973196)))))OR(UNLIKELY(v0.c0))));
SELECT ALL * FROM v0 WHERE ((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY (v0.c1 IN ((('0.3051218252843131') NOT BETWEEN (x'') AND (v0.c1)), CASE 0.48759937766904016  WHEN v0.c2 THEN v0.c2 END)) ASC  NULLS FIRST, ((((CASE v0.c1  WHEN v0.c2 THEN v0.c1 END)OR((((((((('529347057')AND(v0.c1)))AND(v0.c1)))AND(v0.c2)))OR(0.29620197180973196)))))OR(UNLIKELY(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (v0.c1 IN ((('0.3051218252843131') NOT BETWEEN (x'') AND (v0.c1)), CASE 0.48759937766904016  WHEN v0.c2 THEN v0.c2 END)) ASC  NULLS FIRST, ((((CASE v0.c1  WHEN v0.c2 THEN v0.c1 END)OR((((((((('529347057')AND(v0.c1)))AND(v0.c1)))AND(v0.c2)))OR(0.29620197180973196)))))OR(UNLIKELY(v0.c0))));
SELECT ALL * FROM v0 WHERE ((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY (v0.c1 IN ((('0.3051218252843131') NOT BETWEEN (x'') AND (v0.c1)), CASE 0.48759937766904016  WHEN v0.c2 THEN v0.c2 END)) ASC  NULLS FIRST, ((((CASE v0.c1  WHEN v0.c2 THEN v0.c1 END)OR((((((((('529347057')AND(v0.c1)))AND(v0.c1)))AND(v0.c2)))OR(0.29620197180973196)))))OR(UNLIKELY(v0.c0)));
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((v0.c0)<(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<(vt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((v0.c0)<(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<(vt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((v0.c0)<(vt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON (((NOT (v0.c2))) NOT BETWEEN (((vt0.c1)OR(rt0.c0))) AND (((vt0.c0) IS FALSE))) INNER JOIN vt0 ON (((+ (v0.c0))) NOT NULL) WHERE ((((v0.c2 IN (NULL)))<=(((vt0.c1)<(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN (NULL)))<=(((vt0.c1)<(NULL))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((NOT (v0.c2))) NOT BETWEEN (((vt0.c1)OR(rt0.c0))) AND (((vt0.c0) IS FALSE))) INNER JOIN vt0 ON (((+ (v0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON (((NOT (v0.c2))) NOT BETWEEN (((vt0.c1)OR(rt0.c0))) AND (((vt0.c0) IS FALSE))) INNER JOIN vt0 ON (((+ (v0.c0))) NOT NULL) WHERE ((((v0.c2 IN (NULL)))<=(((vt0.c1)<(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN (NULL)))<=(((vt0.c1)<(NULL))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((NOT (v0.c2))) NOT BETWEEN (((vt0.c1)OR(rt0.c0))) AND (((vt0.c0) IS FALSE))) INNER JOIN vt0 ON (((+ (v0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON (((NOT (v0.c2))) NOT BETWEEN (((vt0.c1)OR(rt0.c0))) AND (((vt0.c0) IS FALSE))) INNER JOIN vt0 ON (((+ (v0.c0))) NOT NULL) WHERE ((((v0.c2 IN (NULL)))<=(((vt0.c1)<(NULL)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((PRINTF(v0.c0))AND(((v0.c1)<(v0.c0)))))OR(((((v0.c0)OR('0.48759937766904016')))OR(v0.c0))))) ORDER BY ((((-2.60775783E8)-(v0.c0)))GLOB(((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((PRINTF(v0.c0))AND(((v0.c1)<(v0.c0)))))OR(((((v0.c0)OR('0.48759937766904016')))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((-2.60775783E8)-(v0.c0)))GLOB(((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((PRINTF(v0.c0))AND(((v0.c1)<(v0.c0)))))OR(((((v0.c0)OR('0.48759937766904016')))OR(v0.c0))))) ORDER BY ((((-2.60775783E8)-(v0.c0)))GLOB(((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((PRINTF(v0.c0))AND(((v0.c1)<(v0.c0)))))OR(((((v0.c0)OR('0.48759937766904016')))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((-2.60775783E8)-(v0.c0)))GLOB(((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((PRINTF(v0.c0))AND(((v0.c1)<(v0.c0)))))OR(((((v0.c0)OR('0.48759937766904016')))OR(v0.c0))))) ORDER BY ((((-2.60775783E8)-(v0.c0)))GLOB(((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(v0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((- (v0.c1))) IS TRUE)) ORDER BY (NOT (((((v0.c0)OR(v0.c1)))OR(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c1))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (NOT (((((v0.c0)OR(v0.c1)))OR(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((- (v0.c1))) IS TRUE)) ORDER BY (NOT (((((v0.c0)OR(v0.c1)))OR(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c1))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (NOT (((((v0.c0)OR(v0.c1)))OR(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((- (v0.c1))) IS TRUE)) ORDER BY (NOT (((((v0.c0)OR(v0.c1)))OR(v0.c0)))) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (((LENGTH(v0.c1))>=(ABS(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(v0.c1))>=(ABS(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((LENGTH(v0.c1))>=(ABS(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(v0.c1))>=(ABS(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((LENGTH(v0.c1))>=(ABS(DISTINCT v0.c0))));
SELECT * FROM v0, rt0 WHERE (v0.c1) ORDER BY COALESCE(DISTINCT CASE v0.c1  WHEN v0.c1 THEN x'' END, CASE WHEN rt0.c1 THEN rt0.c1 ELSE v0.c2 END) ASC  NULLS LAST, ((((((((CAST(v0.c1 AS NUMERIC))AND(((rt0.c2)<<(v0.c2)))))OR(rt0.c1 COLLATE NOCASE)))AND((((v0.c2))>((rt0.c2))))))OR(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, rt0 ORDER BY COALESCE(DISTINCT CASE v0.c1  WHEN v0.c1 THEN x'' END, CASE WHEN rt0.c1 THEN rt0.c1 ELSE v0.c2 END) ASC  NULLS LAST, ((((((((CAST(v0.c1 AS NUMERIC))AND(((rt0.c2)<<(v0.c2)))))OR(rt0.c1 COLLATE NOCASE)))AND((((v0.c2))>((rt0.c2))))))OR(NULL))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (v0.c1) ORDER BY COALESCE(DISTINCT CASE v0.c1  WHEN v0.c1 THEN x'' END, CASE WHEN rt0.c1 THEN rt0.c1 ELSE v0.c2 END) ASC  NULLS LAST, ((((((((CAST(v0.c1 AS NUMERIC))AND(((rt0.c2)<<(v0.c2)))))OR(rt0.c1 COLLATE NOCASE)))AND((((v0.c2))>((rt0.c2))))))OR(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, rt0 ORDER BY COALESCE(DISTINCT CASE v0.c1  WHEN v0.c1 THEN x'' END, CASE WHEN rt0.c1 THEN rt0.c1 ELSE v0.c2 END) ASC  NULLS LAST, ((((((((CAST(v0.c1 AS NUMERIC))AND(((rt0.c2)<<(v0.c2)))))OR(rt0.c1 COLLATE NOCASE)))AND((((v0.c2))>((rt0.c2))))))OR(NULL))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (v0.c1) ORDER BY COALESCE(DISTINCT CASE v0.c1  WHEN v0.c1 THEN x'' END, CASE WHEN rt0.c1 THEN rt0.c1 ELSE v0.c2 END) ASC  NULLS LAST, ((((((((CAST(v0.c1 AS NUMERIC))AND(((rt0.c2)<<(v0.c2)))))OR(rt0.c1 COLLATE NOCASE)))AND((((v0.c2))>((rt0.c2))))))OR(NULL))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE vt0.c1  WHEN v0.c1 THEN '()' WHEN v0.c0 THEN 0.8435593254244713 WHEN vt0.c0 THEN vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN v0.c1 THEN '()' WHEN v0.c0 THEN 0.8435593254244713 WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE vt0.c1  WHEN v0.c1 THEN '()' WHEN v0.c0 THEN 0.8435593254244713 WHEN vt0.c0 THEN vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN v0.c1 THEN '()' WHEN v0.c0 THEN 0.8435593254244713 WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE vt0.c1  WHEN v0.c1 THEN '()' WHEN v0.c0 THEN 0.8435593254244713 WHEN vt0.c0 THEN vt0.c0 END) ISNULL));
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0))) ORDER BY (x'' IN ((((v0.c0))<((v0.c0)))))  NULLS FIRST, ((TRIM(DISTINCT v0.c0, v0.c0)) BETWEEN ((+ (v0.c1))) AND (((v0.c1)<<(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (x'' IN ((((v0.c0))<((v0.c0)))))  NULLS FIRST, ((TRIM(DISTINCT v0.c0, v0.c0)) BETWEEN ((+ (v0.c1))) AND (((v0.c1)<<(v0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0))) ORDER BY (x'' IN ((((v0.c0))<((v0.c0)))))  NULLS FIRST, ((TRIM(DISTINCT v0.c0, v0.c0)) BETWEEN ((+ (v0.c1))) AND (((v0.c1)<<(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (x'' IN ((((v0.c0))<((v0.c0)))))  NULLS FIRST, ((TRIM(DISTINCT v0.c0, v0.c0)) BETWEEN ((+ (v0.c1))) AND (((v0.c1)<<(v0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0))) ORDER BY (x'' IN ((((v0.c0))<((v0.c0)))))  NULLS FIRST, ((TRIM(DISTINCT v0.c0, v0.c0)) BETWEEN ((+ (v0.c1))) AND (((v0.c1)<<(v0.c1))))  NULLS LAST;
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((v0.c2) IS TRUE) IN ()) CROSS JOIN vt0 ON UPPER(DISTINCT (vt0.c0 IN ())) WHERE (((CAST(v0.c2 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS REAL)) IS FALSE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((v0.c2) IS TRUE) IN ()) CROSS JOIN vt0 ON UPPER(DISTINCT (vt0.c0 IN ())));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((v0.c2) IS TRUE) IN ()) CROSS JOIN vt0 ON UPPER(DISTINCT (vt0.c0 IN ())) WHERE (((CAST(v0.c2 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS REAL)) IS FALSE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((v0.c2) IS TRUE) IN ()) CROSS JOIN vt0 ON UPPER(DISTINCT (vt0.c0 IN ())));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((v0.c2) IS TRUE) IN ()) CROSS JOIN vt0 ON UPPER(DISTINCT (vt0.c0 IN ())) WHERE (((CAST(v0.c2 AS REAL)) IS FALSE));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((vt0.c0)%(rt0.c0))) NOTNULL)) ORDER BY ((((((((HEX(DISTINCT v0.c2))OR('')))OR((((rt0.c1, rt0.c0, rt0.c2))<=((v0.c0, vt0.c0, v0.c0))))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CASE WHEN v0.c2 THEN v0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 END)) DESC  NULLS FIRST, UNLIKELY((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((((((HEX(DISTINCT v0.c2))OR('')))OR((((rt0.c1, rt0.c0, rt0.c2))<=((v0.c0, vt0.c0, v0.c0))))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CASE WHEN v0.c2 THEN v0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 END)) DESC  NULLS FIRST, UNLIKELY((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((vt0.c0)%(rt0.c0))) NOTNULL)) ORDER BY ((((((((HEX(DISTINCT v0.c2))OR('')))OR((((rt0.c1, rt0.c0, rt0.c2))<=((v0.c0, vt0.c0, v0.c0))))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CASE WHEN v0.c2 THEN v0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 END)) DESC  NULLS FIRST, UNLIKELY((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((((((HEX(DISTINCT v0.c2))OR('')))OR((((rt0.c1, rt0.c0, rt0.c2))<=((v0.c0, vt0.c0, v0.c0))))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CASE WHEN v0.c2 THEN v0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 END)) DESC  NULLS FIRST, UNLIKELY((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((vt0.c0)%(rt0.c0))) NOTNULL)) ORDER BY ((((((((HEX(DISTINCT v0.c2))OR('')))OR((((rt0.c1, rt0.c0, rt0.c2))<=((v0.c0, vt0.c0, v0.c0))))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CASE WHEN v0.c2 THEN v0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 END)) DESC  NULLS FIRST, UNLIKELY((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ('5⭀') ORDER BY (NOT ((+ (vt0.c1)))) ASC  NULLS LAST, (((v0.c2 IN ()))<=(((vt0.c0)OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT (('5⭀') IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (NOT ((+ (vt0.c1)))) ASC  NULLS LAST, (((v0.c2 IN ()))<=(((vt0.c0)OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ('5⭀') ORDER BY (NOT ((+ (vt0.c1)))) ASC  NULLS LAST, (((v0.c2 IN ()))<=(((vt0.c0)OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT (('5⭀') IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (NOT ((+ (vt0.c1)))) ASC  NULLS LAST, (((v0.c2 IN ()))<=(((vt0.c0)OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ('5⭀') ORDER BY (NOT ((+ (vt0.c1)))) ASC  NULLS LAST, (((v0.c2 IN ()))<=(((vt0.c0)OR(rt0.c0))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (+ (CAST(rt0.c1 AS REAL))) WHERE ((CAST(v0.c2 AS NUMERIC) IN ('G}', ((((v0.c2)OR(rt0.c2)))AND(v0.c0))))) ORDER BY ('' COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c2 AS NUMERIC) IN ('G}', ((((v0.c2)OR(rt0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (+ (CAST(rt0.c1 AS REAL))) ORDER BY ('' COLLATE NOCASE IN ()));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (+ (CAST(rt0.c1 AS REAL))) WHERE ((CAST(v0.c2 AS NUMERIC) IN ('G}', ((((v0.c2)OR(rt0.c2)))AND(v0.c0))))) ORDER BY ('' COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c2 AS NUMERIC) IN ('G}', ((((v0.c2)OR(rt0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (+ (CAST(rt0.c1 AS REAL))) ORDER BY ('' COLLATE NOCASE IN ()));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (+ (CAST(rt0.c1 AS REAL))) WHERE ((CAST(v0.c2 AS NUMERIC) IN ('G}', ((((v0.c2)OR(rt0.c2)))AND(v0.c0))))) ORDER BY ('' COLLATE NOCASE IN ());
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (TRIM(DISTINCT vt0.c1)) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (TRIM(DISTINCT vt0.c1)) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (TRIM(DISTINCT vt0.c1)) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (TRIM(DISTINCT vt0.c1)) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (TRIM(DISTINCT vt0.c1)) AND ((+ (vt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0)|(v0.c1))  WHEN v0.c0 THEN '' END) ORDER BY (NOT (((v0.c0)<=(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)|(v0.c1))  WHEN v0.c0 THEN '' END) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0)<=(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0)|(v0.c1))  WHEN v0.c0 THEN '' END) ORDER BY (NOT (((v0.c0)<=(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)|(v0.c1))  WHEN v0.c0 THEN '' END) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0)<=(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0)|(v0.c1))  WHEN v0.c0 THEN '' END) ORDER BY (NOT (((v0.c0)<=(v0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)-(((v0.c1)|(v0.c2))))) ORDER BY CASE CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN 1.343916333E9 END  WHEN v0.c1 COLLATE NOCASE THEN ((((v0.c2)AND(x'005ec252')))OR(v0.c1)) ELSE ((716677025) NOT BETWEEN (v0.c2) AND (v0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)-(((v0.c1)|(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY CASE CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN 1.343916333E9 END  WHEN v0.c1 COLLATE NOCASE THEN ((((v0.c2)AND(x'005ec252')))OR(v0.c1)) ELSE ((716677025) NOT BETWEEN (v0.c2) AND (v0.c2)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)-(((v0.c1)|(v0.c2))))) ORDER BY CASE CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN 1.343916333E9 END  WHEN v0.c1 COLLATE NOCASE THEN ((((v0.c2)AND(x'005ec252')))OR(v0.c1)) ELSE ((716677025) NOT BETWEEN (v0.c2) AND (v0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)-(((v0.c1)|(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY CASE CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN 1.343916333E9 END  WHEN v0.c1 COLLATE NOCASE THEN ((((v0.c2)AND(x'005ec252')))OR(v0.c1)) ELSE ((716677025) NOT BETWEEN (v0.c2) AND (v0.c2)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)-(((v0.c1)|(v0.c2))))) ORDER BY CASE CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN 1.343916333E9 END  WHEN v0.c1 COLLATE NOCASE THEN ((((v0.c2)AND(x'005ec252')))OR(v0.c1)) ELSE ((716677025) NOT BETWEEN (v0.c2) AND (v0.c2)) END  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (((((0.87609579566411, v0.c2, NULL))<=((v0.c2, '^R', v0.c1)))) NOT BETWEEN (((v0.c0)/(v0.c1))) AND (v0.c2 COLLATE NOCASE)) WHERE ((- ((('.Y') NOT BETWEEN (v0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((('.Y') NOT BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((0.87609579566411, v0.c2, NULL))<=((v0.c2, '^R', v0.c1)))) NOT BETWEEN (((v0.c0)/(v0.c1))) AND (v0.c2 COLLATE NOCASE)));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (((((0.87609579566411, v0.c2, NULL))<=((v0.c2, '^R', v0.c1)))) NOT BETWEEN (((v0.c0)/(v0.c1))) AND (v0.c2 COLLATE NOCASE)) WHERE ((- ((('.Y') NOT BETWEEN (v0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((('.Y') NOT BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((0.87609579566411, v0.c2, NULL))<=((v0.c2, '^R', v0.c1)))) NOT BETWEEN (((v0.c0)/(v0.c1))) AND (v0.c2 COLLATE NOCASE)));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (((((0.87609579566411, v0.c2, NULL))<=((v0.c2, '^R', v0.c1)))) NOT BETWEEN (((v0.c0)/(v0.c1))) AND (v0.c2 COLLATE NOCASE)) WHERE ((- ((('.Y') NOT BETWEEN (v0.c2) AND (v0.c1)))));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((vt0.c1 IN ())) BETWEEN ((+ (rt0.c1))) AND (json_valid(v0.c2)))) ORDER BY ((((((((((v0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))OR(0.9237471732905932)))AND((((v0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND(((rt0.c1)-(rt0.c1)))))AND(vt0.c1 COLLATE RTRIM)) DESC, x'9be9' ASC, ((((CAST(rt0.c2 AS INTEGER))OR((rt0.c0 IN ()))))AND(CASE vt0.c0  WHEN rt0.c0 THEN v0.c2 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) BETWEEN ((+ (rt0.c1))) AND (json_valid(v0.c2)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((((((v0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))OR(0.9237471732905932)))AND((((v0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND(((rt0.c1)-(rt0.c1)))))AND(vt0.c1 COLLATE RTRIM)) DESC, x'9be9' ASC, ((((CAST(rt0.c2 AS INTEGER))OR((rt0.c0 IN ()))))AND(CASE vt0.c0  WHEN rt0.c0 THEN v0.c2 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((vt0.c1 IN ())) BETWEEN ((+ (rt0.c1))) AND (json_valid(v0.c2)))) ORDER BY ((((((((((v0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))OR(0.9237471732905932)))AND((((v0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND(((rt0.c1)-(rt0.c1)))))AND(vt0.c1 COLLATE RTRIM)) DESC, x'9be9' ASC, ((((CAST(rt0.c2 AS INTEGER))OR((rt0.c0 IN ()))))AND(CASE vt0.c0  WHEN rt0.c0 THEN v0.c2 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) BETWEEN ((+ (rt0.c1))) AND (json_valid(v0.c2)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((((((v0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))OR(0.9237471732905932)))AND((((v0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND(((rt0.c1)-(rt0.c1)))))AND(vt0.c1 COLLATE RTRIM)) DESC, x'9be9' ASC, ((((CAST(rt0.c2 AS INTEGER))OR((rt0.c0 IN ()))))AND(CASE vt0.c0  WHEN rt0.c0 THEN v0.c2 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((vt0.c1 IN ())) BETWEEN ((+ (rt0.c1))) AND (json_valid(v0.c2)))) ORDER BY ((((((((((v0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))OR(0.9237471732905932)))AND((((v0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND(((rt0.c1)-(rt0.c1)))))AND(vt0.c1 COLLATE RTRIM)) DESC, x'9be9' ASC, ((((CAST(rt0.c2 AS INTEGER))OR((rt0.c0 IN ()))))AND(CASE vt0.c0  WHEN rt0.c0 THEN v0.c2 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c2 END))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, 0.5927298547463423, rt0.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, 0.5927298547463423, rt0.c2))) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, 0.5927298547463423, rt0.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, 0.5927298547463423, rt0.c2))) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, 0.5927298547463423, rt0.c2))) AS NUMERIC));
SELECT * FROM rt0 WHERE (((((-1878430614)AND((- ('zU')))))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ORDER BY LIKE((((rt0.c1))=((rt0.c1))), ((rt0.c2)>(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((-1878430614)AND((- ('zU')))))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY LIKE((((rt0.c1))==((rt0.c1))), ((rt0.c2)>(rt0.c2))));
SELECT * FROM rt0 WHERE (((((-1878430614)AND((- ('zU')))))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ORDER BY LIKE((((rt0.c1))=((rt0.c1))), ((rt0.c2)>(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((-1878430614)AND((- ('zU')))))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY LIKE((((rt0.c1))==((rt0.c1))), ((rt0.c2)>(rt0.c2))));
SELECT * FROM rt0 WHERE (((((-1878430614)AND((- ('zU')))))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ORDER BY LIKE((((rt0.c1))=((rt0.c1))), ((rt0.c2)>(rt0.c2)));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)LIKE(v0.c0))) NOTNULL) WHERE (((CAST(vt0.c0 AS INTEGER))IS(CASE v0.c1  WHEN rt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))IS(CASE v0.c1  WHEN rt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)LIKE(v0.c0))) NOTNULL));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)LIKE(v0.c0))) NOTNULL) WHERE (((CAST(vt0.c0 AS INTEGER))IS(CASE v0.c1  WHEN rt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))IS(CASE v0.c1  WHEN rt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)LIKE(v0.c0))) NOTNULL));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)LIKE(v0.c0))) NOTNULL) WHERE (((CAST(vt0.c0 AS INTEGER))IS(CASE v0.c1  WHEN rt0.c1 THEN vt0.c1 END)));
SELECT ALL * FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c2 IN ()) THEN v0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c2 IN ()) THEN v0.c1 COLLATE BINARY END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c2 IN ()) THEN v0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c2 IN ()) THEN v0.c1 COLLATE BINARY END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c2 IN ()) THEN v0.c1 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CHAR(((rt0.c0)>(rt0.c1))) WHERE (((((((((((v0.c2)<(v0.c0)))AND(((v0.c1) IS TRUE))))AND(((rt0.c2) IS FALSE))))AND(((v0.c1) BETWEEN (rt0.c1) AND (v0.c2)))))OR(((((rt0.c0)AND(v0.c2)))AND(v0.c1))))) ORDER BY (v0.c2 IN (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c2)<(v0.c0)))AND(((v0.c1) IS TRUE))))AND(((rt0.c2) IS FALSE))))AND(((v0.c1) BETWEEN (rt0.c1) AND (v0.c2)))))OR(((((rt0.c0)AND(v0.c2)))AND(v0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CHAR(((rt0.c0)>(rt0.c1))) ORDER BY (v0.c2 IN (x''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CHAR(((rt0.c0)>(rt0.c1))) WHERE (((((((((((v0.c2)<(v0.c0)))AND(((v0.c1) IS TRUE))))AND(((rt0.c2) IS FALSE))))AND(((v0.c1) BETWEEN (rt0.c1) AND (v0.c2)))))OR(((((rt0.c0)AND(v0.c2)))AND(v0.c1))))) ORDER BY (v0.c2 IN (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c2)<(v0.c0)))AND(((v0.c1) IS TRUE))))AND(((rt0.c2) IS FALSE))))AND(((v0.c1) BETWEEN (rt0.c1) AND (v0.c2)))))OR(((((rt0.c0)AND(v0.c2)))AND(v0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CHAR(((rt0.c0)>(rt0.c1))) ORDER BY (v0.c2 IN (x''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CHAR(((rt0.c0)>(rt0.c1))) WHERE (((((((((((v0.c2)<(v0.c0)))AND(((v0.c1) IS TRUE))))AND(((rt0.c2) IS FALSE))))AND(((v0.c1) BETWEEN (rt0.c1) AND (v0.c2)))))OR(((((rt0.c0)AND(v0.c2)))AND(v0.c1))))) ORDER BY (v0.c2 IN (x''))  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB));
SELECT ALL * FROM v0 WHERE (CAST(((v0.c1) NOTNULL) AS BLOB)) ORDER BY (((((((v0.c2, v0.c2, v0.c0)) NOT BETWEEN ((v0.c2, v0.c1, v0.c0)) AND ((v0.c0, v0.c0, v0.c2))))OR(((v0.c2)<>(v0.c0)))))AND(CAST(v0.c2 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1) NOTNULL) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c2, v0.c2, v0.c0)) NOT BETWEEN ((v0.c2, v0.c1, v0.c0)) AND ((v0.c0, v0.c0, v0.c2))))OR(((v0.c2)!=(v0.c0)))))AND(CAST(v0.c2 AS NUMERIC))) ASC);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c1) NOTNULL) AS BLOB)) ORDER BY (((((((v0.c2, v0.c2, v0.c0)) NOT BETWEEN ((v0.c2, v0.c1, v0.c0)) AND ((v0.c0, v0.c0, v0.c2))))OR(((v0.c2)<>(v0.c0)))))AND(CAST(v0.c2 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1) NOTNULL) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c2, v0.c2, v0.c0)) NOT BETWEEN ((v0.c2, v0.c1, v0.c0)) AND ((v0.c0, v0.c0, v0.c2))))OR(((v0.c2)!=(v0.c0)))))AND(CAST(v0.c2 AS NUMERIC))) ASC);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c1) NOTNULL) AS BLOB)) ORDER BY (((((((v0.c2, v0.c2, v0.c0)) NOT BETWEEN ((v0.c2, v0.c1, v0.c0)) AND ((v0.c0, v0.c0, v0.c2))))OR(((v0.c2)<>(v0.c0)))))AND(CAST(v0.c2 AS NUMERIC))) ASC;
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(0Xffffffff94be44a8)))OR(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c0)|(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))))) ORDER BY TRIM((rt0.c2 IN ()), ((rt0.c0) IS TRUE)) DESC, ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(0xffffffff94be44a8)))OR(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c0)|(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY TRIM((rt0.c2 IN ()), ((rt0.c0) IS TRUE)) DESC, ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(0Xffffffff94be44a8)))OR(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c0)|(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))))) ORDER BY TRIM((rt0.c2 IN ()), ((rt0.c0) IS TRUE)) DESC, ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(0xffffffff94be44a8)))OR(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c0)|(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY TRIM((rt0.c2 IN ()), ((rt0.c0) IS TRUE)) DESC, ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(0Xffffffff94be44a8)))OR(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c0)|(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))))) ORDER BY TRIM((rt0.c2 IN ()), ((rt0.c0) IS TRUE)) DESC, ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN CAST(vt0.c1 AS TEXT) END DESC, CASE WHEN vt0.c1 THEN 0xcbd0e2a WHEN (+ (vt0.c1)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN (('2005246009')IS(vt0.c1)) THEN ((((x'31096a25')AND(vt0.c0)))OR(vt0.c1)) ELSE ((vt0.c0)IS(vt0.c0)) END DESC  NULLS LAST, ((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'e5ab')) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN CAST(vt0.c1 AS TEXT) END DESC, CASE WHEN vt0.c1 THEN 0Xcbd0e2a WHEN (+ (vt0.c1)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN (('2005246009')IS(vt0.c1)) THEN ((((x'31096a25')AND(vt0.c0)))OR(vt0.c1)) ELSE ((vt0.c0)IS(vt0.c0)) END DESC  NULLS LAST, ((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'e5ab')) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN CAST(vt0.c1 AS TEXT) END DESC, CASE WHEN vt0.c1 THEN 0xcbd0e2a WHEN (+ (vt0.c1)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN (('2005246009')IS(vt0.c1)) THEN ((((x'31096a25')AND(vt0.c0)))OR(vt0.c1)) ELSE ((vt0.c0)IS(vt0.c0)) END DESC  NULLS LAST, ((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'e5ab')) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN CAST(vt0.c1 AS TEXT) END DESC, CASE WHEN vt0.c1 THEN 0Xcbd0e2a WHEN (+ (vt0.c1)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN (('2005246009')IS(vt0.c1)) THEN ((((x'31096a25')AND(vt0.c0)))OR(vt0.c1)) ELSE ((vt0.c0)IS(vt0.c0)) END DESC  NULLS LAST, ((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'e5ab')) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN CAST(vt0.c1 AS TEXT) END DESC, CASE WHEN vt0.c1 THEN 0xcbd0e2a WHEN (+ (vt0.c1)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN (('2005246009')IS(vt0.c1)) THEN ((((x'31096a25')AND(vt0.c0)))OR(vt0.c1)) ELSE ((vt0.c0)IS(vt0.c0)) END DESC  NULLS LAST, ((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'e5ab')) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (NOT (NULL)) INNER JOIN v0 ON (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, v0.c1, ((rt0.c2)IS(vt0.c0)))) AND ((((rt0.c2)<<(vt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (0.7649078509352119)), -1922096179))) WHERE ((((rt0.c0)-(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)-(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (NOT (NULL)) INNER JOIN v0 ON (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, v0.c1, ((rt0.c2)IS(vt0.c0)))) AND ((((rt0.c2)<<(vt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (0.7649078509352119)), -1922096179))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (NOT (NULL)) INNER JOIN v0 ON (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, v0.c1, ((rt0.c2)IS(vt0.c0)))) AND ((((rt0.c2)<<(vt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (0.7649078509352119)), -1922096179))) WHERE ((((rt0.c0)-(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)-(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (NOT (NULL)) INNER JOIN v0 ON (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, v0.c1, ((rt0.c2)IS(vt0.c0)))) AND ((((rt0.c2)<<(vt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (0.7649078509352119)), -1922096179))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (NOT (NULL)) INNER JOIN v0 ON (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, v0.c1, ((rt0.c2)IS(vt0.c0)))) AND ((((rt0.c2)<<(vt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (0.7649078509352119)), -1922096179))) WHERE ((((rt0.c0)-(rt0.c1)) IN ()));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((rt0.c2) NOT NULL))<>(((((((((((((v0.c1)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(v0.c1)))OR(rt0.c2)))AND(rt0.c1))))) ORDER BY (+ (((vt0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL))!=(((((((((((((v0.c1)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(v0.c1)))OR(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (+ (((vt0.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((rt0.c2) NOT NULL))<>(((((((((((((v0.c1)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(v0.c1)))OR(rt0.c2)))AND(rt0.c1))))) ORDER BY (+ (((vt0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL))!=(((((((((((((v0.c1)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(v0.c1)))OR(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (+ (((vt0.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((rt0.c2) NOT NULL))<>(((((((((((((v0.c1)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(v0.c1)))OR(rt0.c2)))AND(rt0.c1))))) ORDER BY (+ (((vt0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((NOT (((((v0.c2)OR(v0.c0)))OR(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((v0.c2)OR(v0.c0)))OR(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT (((((v0.c2)OR(v0.c0)))OR(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((v0.c2)OR(v0.c0)))OR(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT (((((v0.c2)OR(v0.c0)))OR(v0.c1)))));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))>((('gg*5쑾*>H')>>(vt0.c1))))) ORDER BY ((((vt0.c1)-(vt0.c1)))<(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))>((('gg*5쑾*>H')>>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)-(vt0.c1)))<(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))>((('gg*5쑾*>H')>>(vt0.c1))))) ORDER BY ((((vt0.c1)-(vt0.c1)))<(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))>((('gg*5쑾*>H')>>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)-(vt0.c1)))<(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))>((('gg*5쑾*>H')>>(vt0.c1))))) ORDER BY ((((vt0.c1)-(vt0.c1)))<(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)|(rt0.c2)))>(rt0.c0))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)|(rt0.c2)))>(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)|(rt0.c2)))>(rt0.c0))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)|(rt0.c2)))>(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)|(rt0.c2)))>(rt0.c0))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) IS FALSE)  NULLS LAST;
SELECT * FROM rt0, vt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (rt0.c1);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (~ (CAST(vt0.c1 AS REAL))) WHERE ((- (vt0.c0 COLLATE NOCASE))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (~ (CAST(vt0.c1 AS REAL))) ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (~ (CAST(vt0.c1 AS REAL))) WHERE ((- (vt0.c0 COLLATE NOCASE))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (~ (CAST(vt0.c1 AS REAL))) ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (~ (CAST(vt0.c1 AS REAL))) WHERE ((- (vt0.c0 COLLATE NOCASE))) ORDER BY vt0.c0  NULLS FIRST;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((LAST_INSERT_ROWID())OR(v0.c0 COLLATE NOCASE)) FULL OUTER JOIN rt0 ON (+ ((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((LAST_INSERT_ROWID())OR(v0.c0 COLLATE NOCASE)) FULL OUTER JOIN rt0 ON (+ ((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((LAST_INSERT_ROWID())OR(v0.c0 COLLATE NOCASE)) FULL OUTER JOIN rt0 ON (+ ((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((LAST_INSERT_ROWID())OR(v0.c0 COLLATE NOCASE)) FULL OUTER JOIN rt0 ON (+ ((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((LAST_INSERT_ROWID())OR(v0.c0 COLLATE NOCASE)) FULL OUTER JOIN rt0 ON (+ ((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))) WHERE (vt0.c0);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))));
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))));
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))));
SELECT ALL * FROM vt0, v0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN CASE WHEN v0.c2 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c0 IN ()) THEN CASE WHEN v0.c2 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 END END) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN CASE WHEN v0.c2 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c0 IN ()) THEN CASE WHEN v0.c2 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 END END) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN CASE WHEN v0.c2 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 END END);
SELECT COUNT(*) FROM vt0 WHERE (((((x'')OR(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM) ORDER BY (~ ((vt0.c0 IN ()))) ASC  NULLS LAST, ((((((((CAST(x'1230' AS NUMERIC))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND((vt0.c1 IN (vt0.c0)))))OR(TYPEOF(vt0.c0))))AND(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')OR(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (~ ((vt0.c0 IN ()))) ASC  NULLS LAST, ((((((((CAST(x'1230' AS NUMERIC))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND((vt0.c1 IN (vt0.c0)))))OR(TYPEOF(vt0.c0))))AND(x''))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((x'')OR(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM) ORDER BY (~ ((vt0.c0 IN ()))) ASC  NULLS LAST, ((((((((CAST(x'1230' AS NUMERIC))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND((vt0.c1 IN (vt0.c0)))))OR(TYPEOF(vt0.c0))))AND(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')OR(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (~ ((vt0.c0 IN ()))) ASC  NULLS LAST, ((((((((CAST(x'1230' AS NUMERIC))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND((vt0.c1 IN (vt0.c0)))))OR(TYPEOF(vt0.c0))))AND(x''))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((x'')OR(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM) ORDER BY (~ ((vt0.c0 IN ()))) ASC  NULLS LAST, ((((((((CAST(x'1230' AS NUMERIC))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND((vt0.c1 IN (vt0.c0)))))OR(TYPEOF(vt0.c0))))AND(x''))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((~ (vt0.c0)))<(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))<(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((~ (vt0.c0)))<(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))<(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((~ (vt0.c0)))<(vt0.c0)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (2.2466848E8);
SELECT SUM(count) FROM (SELECT ((2.2466848E8) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (2.2466848E8);
SELECT SUM(count) FROM (SELECT ((2.2466848E8) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (2.2466848E8);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c2)AND(v0.c2)))AND(v0.c2)))%((((x'')) BETWEEN ((v0.c0)) AND ((v0.c1)))))) ORDER BY v0.c0 DESC  NULLS LAST, '-269998493' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)AND(v0.c2)))AND(v0.c2)))%((((x'')) BETWEEN ((v0.c0)) AND ((v0.c1)))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST, '-269998493' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c2)AND(v0.c2)))AND(v0.c2)))%((((x'')) BETWEEN ((v0.c0)) AND ((v0.c1)))))) ORDER BY v0.c0 DESC  NULLS LAST, '-269998493' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)AND(v0.c2)))AND(v0.c2)))%((((x'')) BETWEEN ((v0.c0)) AND ((v0.c1)))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST, '-269998493' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c2)AND(v0.c2)))AND(v0.c2)))%((((x'')) BETWEEN ((v0.c0)) AND ((v0.c1)))))) ORDER BY v0.c0 DESC  NULLS LAST, '-269998493' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (load_extension(rt0.c2, vt0.c0) COLLATE BINARY) ORDER BY ((((((rt0.c0)OR(v0.c2)))OR(rt0.c1)))>>(((vt0.c1) IS FALSE))), json_type(v0.c1) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(rt0.c2, vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((rt0.c0)OR(v0.c2)))OR(rt0.c1)))>>(((vt0.c1) IS FALSE))), json_type(v0.c1) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (load_extension(rt0.c2, vt0.c0) COLLATE BINARY) ORDER BY ((((((rt0.c0)OR(v0.c2)))OR(rt0.c1)))>>(((vt0.c1) IS FALSE))), json_type(v0.c1) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(rt0.c2, vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((rt0.c0)OR(v0.c2)))OR(rt0.c1)))>>(((vt0.c1) IS FALSE))), json_type(v0.c1) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (load_extension(rt0.c2, vt0.c0) COLLATE BINARY) ORDER BY ((((((rt0.c0)OR(v0.c2)))OR(rt0.c1)))>>(((vt0.c1) IS FALSE))), json_type(v0.c1) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c0) IS FALSE)))) ORDER BY CASE ABS(v0.c2)  WHEN (v0.c1 IN (v0.c1, NULL)) THEN v0.c2 COLLATE BINARY ELSE ((v0.c2)==(v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY CASE ABS(v0.c2)  WHEN (v0.c1 IN (v0.c1, NULL)) THEN v0.c2 COLLATE BINARY ELSE ((v0.c2)=(v0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c0) IS FALSE)))) ORDER BY CASE ABS(v0.c2)  WHEN (v0.c1 IN (v0.c1, NULL)) THEN v0.c2 COLLATE BINARY ELSE ((v0.c2)==(v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY CASE ABS(v0.c2)  WHEN (v0.c1 IN (v0.c1, NULL)) THEN v0.c2 COLLATE BINARY ELSE ((v0.c2)=(v0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c0) IS FALSE)))) ORDER BY CASE ABS(v0.c2)  WHEN (v0.c1 IN (v0.c1, NULL)) THEN v0.c2 COLLATE BINARY ELSE ((v0.c2)==(v0.c0)) END  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0.2512374936640086) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.2512374936640086) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0.2512374936640086) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.2512374936640086) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0.2512374936640086) ISNULL));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((NULL, ((vt0.c1)||(vt0.c0)), ((vt0.c1) BETWEEN (v0.c2) AND (vt0.c0))))=(((((rt0.c0))>((vt0.c0))), 0.7438516569684311, ((v0.c1) NOT BETWEEN (rt0.c0) AND (NULL))))));
SELECT SUM(count) FROM (SELECT (((((NULL, ((vt0.c1)||(vt0.c0)), ((vt0.c1) BETWEEN (v0.c2) AND (vt0.c0))))=(((((rt0.c0))>((vt0.c0))), 0.7438516569684311, ((v0.c1) NOT BETWEEN (rt0.c0) AND (NULL)))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((NULL, ((vt0.c1)||(vt0.c0)), ((vt0.c1) BETWEEN (v0.c2) AND (vt0.c0))))=(((((rt0.c0))>((vt0.c0))), 0.7438516569684311, ((v0.c1) NOT BETWEEN (rt0.c0) AND (NULL))))));
SELECT SUM(count) FROM (SELECT (((((NULL, ((vt0.c1)||(vt0.c0)), ((vt0.c1) BETWEEN (v0.c2) AND (vt0.c0))))=(((((rt0.c0))>((vt0.c0))), 0.7438516569684311, ((v0.c1) NOT BETWEEN (rt0.c0) AND (NULL)))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((NULL, ((vt0.c1)||(vt0.c0)), ((vt0.c1) BETWEEN (v0.c2) AND (vt0.c0))))=(((((rt0.c0))>((vt0.c0))), 0.7438516569684311, ((v0.c1) NOT BETWEEN (rt0.c0) AND (NULL))))));
SELECT * FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((((x'b79fedf4')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) AND ((((vt0.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN (((((x'b79fedf4')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) AND ((((vt0.c1) IS FALSE))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((((x'b79fedf4')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) AND ((((vt0.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN (((((x'b79fedf4')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) AND ((((vt0.c1) IS FALSE))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((((x'b79fedf4')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) AND ((((vt0.c1) IS FALSE)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.040035118504766265 COLLATE BINARY) ORDER BY ((LIKELY(rt0.c0)) BETWEEN (((vt0.c1)!=(rt0.c0))) AND (((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((0.040035118504766265 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((LIKELY(rt0.c0)) BETWEEN (((vt0.c1)<>(rt0.c0))) AND (((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.040035118504766265 COLLATE BINARY) ORDER BY ((LIKELY(rt0.c0)) BETWEEN (((vt0.c1)!=(rt0.c0))) AND (((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((0.040035118504766265 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((LIKELY(rt0.c0)) BETWEEN (((vt0.c1)<>(rt0.c0))) AND (((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.040035118504766265 COLLATE BINARY) ORDER BY ((LIKELY(rt0.c0)) BETWEEN (((vt0.c1)!=(rt0.c0))) AND (((vt0.c0) NOT NULL)));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (~ ((('57270729') BETWEEN (v0.c2) AND (v0.c1)))) WHERE (((v0.c1) IS TRUE) COLLATE NOCASE) ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST, (((NOT (rt0.c1)))LIKE(CAST(v0.c0 AS TEXT)))  NULLS FIRST, CASE WHEN (NOT (v0.c1)) THEN CASE v0.c0  WHEN v0.c2 THEN rt0.c0 END ELSE ((v0.c2) IS TRUE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (~ ((('57270729') BETWEEN (v0.c2) AND (v0.c1)))) ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST, (((NOT (rt0.c1)))LIKE(CAST(v0.c0 AS TEXT)))  NULLS FIRST, CASE WHEN (NOT (v0.c1)) THEN CASE v0.c0  WHEN v0.c2 THEN rt0.c0 END ELSE ((v0.c2) IS TRUE) END ASC  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (~ ((('57270729') BETWEEN (v0.c2) AND (v0.c1)))) WHERE (((v0.c1) IS TRUE) COLLATE NOCASE) ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST, (((NOT (rt0.c1)))LIKE(CAST(v0.c0 AS TEXT)))  NULLS FIRST, CASE WHEN (NOT (v0.c1)) THEN CASE v0.c0  WHEN v0.c2 THEN rt0.c0 END ELSE ((v0.c2) IS TRUE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (~ ((('57270729') BETWEEN (v0.c2) AND (v0.c1)))) ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST, (((NOT (rt0.c1)))LIKE(CAST(v0.c0 AS TEXT)))  NULLS FIRST, CASE WHEN (NOT (v0.c1)) THEN CASE v0.c0  WHEN v0.c2 THEN rt0.c0 END ELSE ((v0.c2) IS TRUE) END ASC  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (~ ((('57270729') BETWEEN (v0.c2) AND (v0.c1)))) WHERE (((v0.c1) IS TRUE) COLLATE NOCASE) ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST, (((NOT (rt0.c1)))LIKE(CAST(v0.c0 AS TEXT)))  NULLS FIRST, CASE WHEN (NOT (v0.c1)) THEN CASE v0.c0  WHEN v0.c2 THEN rt0.c0 END ELSE ((v0.c2) IS TRUE) END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (0.48759937766904016) ORDER BY (((vt0.c0, vt0.c1 COLLATE NOCASE, ((vt0.c1) IS TRUE)))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('2005246009')), (vt0.c0 IN (vt0.c0)), CAST(vt0.c0 AS REAL)))), ((((((((((vt0.c1)OR(vt0.c0)))AND('197825750')))OR(vt0.c1)))AND(vt0.c1)))>=(vt0.c0 COLLATE BINARY))  NULLS FIRST, PRINTF((~ (vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.48759937766904016) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c1 COLLATE NOCASE, ((vt0.c1) IS TRUE)))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('2005246009')), (vt0.c0 IN (vt0.c0)), CAST(vt0.c0 AS REAL)))), ((((((((((vt0.c1)OR(vt0.c0)))AND('197825750')))OR(vt0.c1)))AND(vt0.c1)))>=(vt0.c0 COLLATE BINARY))  NULLS FIRST, PRINTF((~ (vt0.c1))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (0.48759937766904016) ORDER BY (((vt0.c0, vt0.c1 COLLATE NOCASE, ((vt0.c1) IS TRUE)))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('2005246009')), (vt0.c0 IN (vt0.c0)), CAST(vt0.c0 AS REAL)))), ((((((((((vt0.c1)OR(vt0.c0)))AND('197825750')))OR(vt0.c1)))AND(vt0.c1)))>=(vt0.c0 COLLATE BINARY))  NULLS FIRST, PRINTF((~ (vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.48759937766904016) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c1 COLLATE NOCASE, ((vt0.c1) IS TRUE)))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('2005246009')), (vt0.c0 IN (vt0.c0)), CAST(vt0.c0 AS REAL)))), ((((((((((vt0.c1)OR(vt0.c0)))AND('197825750')))OR(vt0.c1)))AND(vt0.c1)))>=(vt0.c0 COLLATE BINARY))  NULLS FIRST, PRINTF((~ (vt0.c1))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (0.48759937766904016) ORDER BY (((vt0.c0, vt0.c1 COLLATE NOCASE, ((vt0.c1) IS TRUE)))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('2005246009')), (vt0.c0 IN (vt0.c0)), CAST(vt0.c0 AS REAL)))), ((((((((((vt0.c1)OR(vt0.c0)))AND('197825750')))OR(vt0.c1)))AND(vt0.c1)))>=(vt0.c0 COLLATE BINARY))  NULLS FIRST, PRINTF((~ (vt0.c1))) DESC;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END)>=(vt0.c1))) ORDER BY CAST((- (vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 END)>=(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY CAST((- (vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END)>=(vt0.c1))) ORDER BY CAST((- (vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 END)>=(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY CAST((- (vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END)>=(vt0.c1))) ORDER BY CAST((- (vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<<(vt0.c1))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt0.c1))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<<(vt0.c1))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt0.c1))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<<(vt0.c1))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((+ (vt0.c1)))GLOB(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1)))GLOB(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((+ (vt0.c1)))GLOB(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1)))GLOB(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((+ (vt0.c1)))GLOB(vt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN NULL THEN (~ (vt0.c0)) END) ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c0)OR(vt0.c1))) AND (((vt0.c0)%(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c0)OR(vt0.c1))) AND (((vt0.c0)%(vt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN NULL THEN (~ (vt0.c0)) END) ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c0)OR(vt0.c1))) AND (((vt0.c0)%(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c0)OR(vt0.c1))) AND (((vt0.c0)%(vt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN NULL THEN (~ (vt0.c0)) END) ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c0)OR(vt0.c1))) AND (((vt0.c0)%(vt0.c1)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (LIKE(vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE BINARY, '7')) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN -269998493 THEN vt0.c0 ELSE vt0.c1 END) NOTNULL)  NULLS LAST, ((NULL)*((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE(vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE BINARY, '7')) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN -269998493 THEN vt0.c0 ELSE vt0.c1 END) NOTNULL)  NULLS LAST, ((NULL)*((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (LIKE(vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE BINARY, '7')) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN -269998493 THEN vt0.c0 ELSE vt0.c1 END) NOTNULL)  NULLS LAST, ((NULL)*((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE(vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE BINARY, '7')) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN -269998493 THEN vt0.c0 ELSE vt0.c1 END) NOTNULL)  NULLS LAST, ((NULL)*((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (LIKE(vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE BINARY, '7')) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN -269998493 THEN vt0.c0 ELSE vt0.c1 END) NOTNULL)  NULLS LAST, ((NULL)*((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT (rt0.c0 COLLATE BINARY))) ORDER BY ((((v0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (UPPER(DISTINCT vt0.c1)) AND (x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((v0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (UPPER(DISTINCT vt0.c1)) AND (x'')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT (rt0.c0 COLLATE BINARY))) ORDER BY ((((v0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (UPPER(DISTINCT vt0.c1)) AND (x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((v0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (UPPER(DISTINCT vt0.c1)) AND (x'')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT (rt0.c0 COLLATE BINARY))) ORDER BY ((((v0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (UPPER(DISTINCT vt0.c1)) AND (x'')) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT * FROM rt0, v0 WHERE (((v0.c2 COLLATE NOCASE) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((v0.c1) NOT BETWEEN (rt0.c2) AND (v0.c2))))) ORDER BY ((NULL)AND('-1397688852')), (+ (CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE NOCASE) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((v0.c1) NOT BETWEEN (rt0.c2) AND (v0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((NULL)AND('-1397688852')), (+ (CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((v0.c2 COLLATE NOCASE) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((v0.c1) NOT BETWEEN (rt0.c2) AND (v0.c2))))) ORDER BY ((NULL)AND('-1397688852')), (+ (CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE NOCASE) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((v0.c1) NOT BETWEEN (rt0.c2) AND (v0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((NULL)AND('-1397688852')), (+ (CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((v0.c2 COLLATE NOCASE) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((v0.c1) NOT BETWEEN (rt0.c2) AND (v0.c2))))) ORDER BY ((NULL)AND('-1397688852')), (+ (CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c2) IS FALSE)  WHEN ((x'')||(rt0.c2)) THEN ((NULL) BETWEEN (rt0.c0) AND (vt0.c1)) WHEN ((NULL) ISNULL) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END WHEN x'' THEN CASE WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN 'A)' THEN rt0.c1 END ELSE TRIM(DISTINCT rt0.c0) END) ORDER BY ((((((((rt0.c1)AND(0.3529779534622668)))OR(vt0.c1)))AND(((rt0.c2) ISNULL))))OR(((rt0.c2)IS NOT(vt0.c1)))) ASC  NULLS FIRST, (((((rt0.c0)<(vt0.c1))))<((((vt0.c1)+(vt0.c1))))), ((rt0.c0 COLLATE BINARY)AND(CAST(vt0.c1 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) IS FALSE)  WHEN ((x'')||(rt0.c2)) THEN ((NULL) BETWEEN (rt0.c0) AND (vt0.c1)) WHEN ((NULL) ISNULL) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END WHEN x'' THEN CASE WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN 'A)' THEN rt0.c1 END ELSE TRIM(DISTINCT rt0.c0) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c1)AND(0.3529779534622668)))OR(vt0.c1)))AND(((rt0.c2) ISNULL))))OR(((rt0.c2)IS NOT(vt0.c1)))) ASC  NULLS FIRST, (((((rt0.c0)<(vt0.c1))))<((((vt0.c1)+(vt0.c1))))), ((rt0.c0 COLLATE BINARY)AND(CAST(vt0.c1 AS REAL))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c2) IS FALSE)  WHEN ((x'')||(rt0.c2)) THEN ((NULL) BETWEEN (rt0.c0) AND (vt0.c1)) WHEN ((NULL) ISNULL) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END WHEN x'' THEN CASE WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN 'A)' THEN rt0.c1 END ELSE TRIM(DISTINCT rt0.c0) END) ORDER BY ((((((((rt0.c1)AND(0.3529779534622668)))OR(vt0.c1)))AND(((rt0.c2) ISNULL))))OR(((rt0.c2)IS NOT(vt0.c1)))) ASC  NULLS FIRST, (((((rt0.c0)<(vt0.c1))))<((((vt0.c1)+(vt0.c1))))), ((rt0.c0 COLLATE BINARY)AND(CAST(vt0.c1 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) IS FALSE)  WHEN ((x'')||(rt0.c2)) THEN ((NULL) BETWEEN (rt0.c0) AND (vt0.c1)) WHEN ((NULL) ISNULL) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END WHEN x'' THEN CASE WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN 'A)' THEN rt0.c1 END ELSE TRIM(DISTINCT rt0.c0) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c1)AND(0.3529779534622668)))OR(vt0.c1)))AND(((rt0.c2) ISNULL))))OR(((rt0.c2)IS NOT(vt0.c1)))) ASC  NULLS FIRST, (((((rt0.c0)<(vt0.c1))))<((((vt0.c1)+(vt0.c1))))), ((rt0.c0 COLLATE BINARY)AND(CAST(vt0.c1 AS REAL))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c2) IS FALSE)  WHEN ((x'')||(rt0.c2)) THEN ((NULL) BETWEEN (rt0.c0) AND (vt0.c1)) WHEN ((NULL) ISNULL) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END WHEN x'' THEN CASE WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN 'A)' THEN rt0.c1 END ELSE TRIM(DISTINCT rt0.c0) END) ORDER BY ((((((((rt0.c1)AND(0.3529779534622668)))OR(vt0.c1)))AND(((rt0.c2) ISNULL))))OR(((rt0.c2)IS NOT(vt0.c1)))) ASC  NULLS FIRST, (((((rt0.c0)<(vt0.c1))))<((((vt0.c1)+(vt0.c1))))), ((rt0.c0 COLLATE BINARY)AND(CAST(vt0.c1 AS REAL))) ASC;
SELECT * FROM rt0, v0, vt0 WHERE (CASE WHEN rt0.c0 THEN x'' END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN x'' END COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (CASE WHEN rt0.c0 THEN x'' END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN x'' END COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (CASE WHEN rt0.c0 THEN x'' END COLLATE BINARY);
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN ((vt0.c1)IS(vt0.c0)) THEN ((vt0.c0)OR(vt0.c0)) END) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN ((vt0.c1)IS(vt0.c0)) THEN ((vt0.c0)OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN ((vt0.c1)IS(vt0.c0)) THEN ((vt0.c0)OR(vt0.c0)) END) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN ((vt0.c1)IS(vt0.c0)) THEN ((vt0.c0)OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN ((vt0.c1)IS(vt0.c0)) THEN ((vt0.c0)OR(vt0.c0)) END) ORDER BY vt0.c0;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))<((rt0.c0))))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))<((rt0.c0))))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))<((rt0.c0))))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))<((rt0.c0))))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))<((rt0.c0))))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (0.5502819870798218);
SELECT SUM(count) FROM (SELECT ((0.5502819870798218) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (0.5502819870798218);
SELECT SUM(count) FROM (SELECT ((0.5502819870798218) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (0.5502819870798218);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c0)==(vt0.c0)))) AND ((((rt0.c1)IS NOT(NULL)))))) ORDER BY ((((((rt0.c1)OR(vt0.c1)))OR(rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (CAST(rt0.c1 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((rt0.c0)==(vt0.c0)))) AND ((((rt0.c1)IS NOT(NULL)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c1)OR(vt0.c1)))OR(rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (CAST(rt0.c1 AS INTEGER))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c0)==(vt0.c0)))) AND ((((rt0.c1)IS NOT(NULL)))))) ORDER BY ((((((rt0.c1)OR(vt0.c1)))OR(rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (CAST(rt0.c1 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((rt0.c0)==(vt0.c0)))) AND ((((rt0.c1)IS NOT(NULL)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c1)OR(vt0.c1)))OR(rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (CAST(rt0.c1 AS INTEGER))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c0)==(vt0.c0)))) AND ((((rt0.c1)IS NOT(NULL)))))) ORDER BY ((((((rt0.c1)OR(vt0.c1)))OR(rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (CAST(rt0.c1 AS INTEGER))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c0) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c0) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c0) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c0) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c0) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)+(vt0.c1)) ELSE (NOT (vt0.c0)) END) ORDER BY vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)+(vt0.c1)) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)+(vt0.c1)) ELSE (NOT (vt0.c0)) END) ORDER BY vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)+(vt0.c1)) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)+(vt0.c1)) ELSE (NOT (vt0.c0)) END) ORDER BY vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC;
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c0)IS(rt0.c2)))AND(((((rt0.c2)AND(v0.c1)))OR(rt0.c1)))))AND(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)IS(rt0.c2)))AND(((((rt0.c2)AND(v0.c1)))OR(rt0.c1)))))AND(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c0)IS(rt0.c2)))AND(((((rt0.c2)AND(v0.c1)))OR(rt0.c1)))))AND(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)IS(rt0.c2)))AND(((((rt0.c2)AND(v0.c1)))OR(rt0.c1)))))AND(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c0)IS(rt0.c2)))AND(((((rt0.c2)AND(v0.c1)))OR(rt0.c1)))))AND(((rt0.c0) NOT NULL))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c2) ISNULL)) IS TRUE)) ORDER BY (v0.c0 COLLATE NOCASE IN (x'501a')) DESC  NULLS FIRST, (+ (v0.c0));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) ISNULL)) IS TRUE)) IS TRUE)  as count FROM rt0, v0 ORDER BY (v0.c0 COLLATE NOCASE IN (x'501a')) DESC  NULLS FIRST, (+ (v0.c0)));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c2) ISNULL)) IS TRUE)) ORDER BY (v0.c0 COLLATE NOCASE IN (x'501a')) DESC  NULLS FIRST, (+ (v0.c0));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) ISNULL)) IS TRUE)) IS TRUE)  as count FROM rt0, v0 ORDER BY (v0.c0 COLLATE NOCASE IN (x'501a')) DESC  NULLS FIRST, (+ (v0.c0)));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c2) ISNULL)) IS TRUE)) ORDER BY (v0.c0 COLLATE NOCASE IN (x'501a')) DESC  NULLS FIRST, (+ (v0.c0));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((NOT (((v0.c0)!=(rt0.c2))))) ORDER BY (((((vt0.c0 IN ()))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)<>(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((((vt0.c0 IN ()))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((NOT (((v0.c0)!=(rt0.c2))))) ORDER BY (((((vt0.c0 IN ()))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)<>(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((((vt0.c0 IN ()))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN NULL WHEN rt0.c1 THEN v0.c1 ELSE v0.c1 END)AND(((v0.c0)||(rt0.c1)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN NULL WHEN rt0.c1 THEN v0.c1 ELSE v0.c1 END)AND(((v0.c0)||(rt0.c1)))));
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN NULL WHEN rt0.c1 THEN v0.c1 ELSE v0.c1 END)AND(((v0.c0)||(rt0.c1)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN NULL WHEN rt0.c1 THEN v0.c1 ELSE v0.c1 END)AND(((v0.c0)||(rt0.c1)))));
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN NULL WHEN rt0.c1 THEN v0.c1 ELSE v0.c1 END)AND(((v0.c0)||(rt0.c1)))) WHERE (NULL);
SELECT ALL COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE (((((+ (v0.c2))))>(('-269998493'))));
SELECT SUM(count) FROM (SELECT ((((((+ (v0.c2))))>(('-269998493')))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE (((((+ (v0.c2))))>(('-269998493'))));
SELECT SUM(count) FROM (SELECT ((((((+ (v0.c2))))>(('-269998493')))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE (((((+ (v0.c2))))>(('-269998493'))));
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) IS TRUE) AS BLOB)) ORDER BY ((DATETIME(x'', rt0.c1, rt0.c2, rt0.c1, rt0.c1)) ISNULL), (rt0.c1 COLLATE NOCASE IN ((- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((DATETIME(x'', rt0.c1, rt0.c2, rt0.c1, rt0.c1)) ISNULL), (rt0.c1 COLLATE NOCASE IN ((- (rt0.c1)))));
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) IS TRUE) AS BLOB)) ORDER BY ((DATETIME(x'', rt0.c1, rt0.c2, rt0.c1, rt0.c1)) ISNULL), (rt0.c1 COLLATE NOCASE IN ((- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((DATETIME(x'', rt0.c1, rt0.c2, rt0.c1, rt0.c1)) ISNULL), (rt0.c1 COLLATE NOCASE IN ((- (rt0.c1)))));
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) IS TRUE) AS BLOB)) ORDER BY ((DATETIME(x'', rt0.c1, rt0.c2, rt0.c1, rt0.c1)) ISNULL), (rt0.c1 COLLATE NOCASE IN ((- (rt0.c1))));
SELECT * FROM v0 WHERE (((v0.c2 IN (v0.c1, v0.c2)) IN (NULL))) ORDER BY ((0Xbca94d6)OR(v0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((v0.c2 IN (v0.c1, v0.c2)) IN (NULL))) IS TRUE)  as count FROM v0 ORDER BY ((0Xbca94d6)OR(v0.c2 COLLATE BINARY)));
SELECT * FROM v0 WHERE (((v0.c2 IN (v0.c1, v0.c2)) IN (NULL))) ORDER BY ((0Xbca94d6)OR(v0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((v0.c2 IN (v0.c1, v0.c2)) IN (NULL))) IS TRUE)  as count FROM v0 ORDER BY ((0Xbca94d6)OR(v0.c2 COLLATE BINARY)));
SELECT * FROM v0 WHERE (((v0.c2 IN (v0.c1, v0.c2)) IN (NULL))) ORDER BY ((0Xbca94d6)OR(v0.c2 COLLATE BINARY));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)%(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)<<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)%(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)<<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)<<(vt0.c1)))));
SELECT * FROM vt0, rt0, v0 WHERE (((((((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND((+ (v0.c2)))))OR(((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND((+ (v0.c2)))))OR(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND((+ (v0.c2)))))OR(((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND((+ (v0.c2)))))OR(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND((+ (v0.c2)))))OR(((v0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ (((v0.c1) BETWEEN (vt0.c0) AND (rt0.c1))))) ORDER BY ((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))|(0.7593573803956527)) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c1) BETWEEN (vt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))|(0.7593573803956527)) ASC);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ (((v0.c1) BETWEEN (vt0.c0) AND (rt0.c1))))) ORDER BY ((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))|(0.7593573803956527)) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c1) BETWEEN (vt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))|(0.7593573803956527)) ASC);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ (((v0.c1) BETWEEN (vt0.c0) AND (rt0.c1))))) ORDER BY ((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))|(0.7593573803956527)) ASC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ ((rt0.c1 IN (v0.c1))))) ORDER BY '0.02849870503910734' DESC;
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN (v0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY '0.02849870503910734' DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ ((rt0.c1 IN (v0.c1))))) ORDER BY '0.02849870503910734' DESC;
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN (v0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY '0.02849870503910734' DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ ((rt0.c1 IN (v0.c1))))) ORDER BY '0.02849870503910734' DESC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN ('716677025') AND (((rt0.c1)=(rt0.c2))))) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM, json_type(rt0.c2) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN ('716677025') AND (((rt0.c1)==(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM, json_type(rt0.c2) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN ('716677025') AND (((rt0.c1)=(rt0.c2))))) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM, json_type(rt0.c2) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN ('716677025') AND (((rt0.c1)==(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM, json_type(rt0.c2) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN ('716677025') AND (((rt0.c1)=(rt0.c2))))) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM, json_type(rt0.c2) DESC;
SELECT * FROM v0 INNER JOIN rt0 ON (((rt0.c1) NOTNULL) IN ()) RIGHT OUTER JOIN vt0 ON (- (((v0.c1)IS(rt0.c0)))) WHERE (2.13716522E8) ORDER BY CAST((+ (v0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((2.13716522E8) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((rt0.c1) NOTNULL) IN ()) RIGHT OUTER JOIN vt0 ON (- (((v0.c1)IS(rt0.c0)))) ORDER BY CAST((+ (v0.c0)) AS NUMERIC) DESC);
SELECT * FROM v0 INNER JOIN rt0 ON (((rt0.c1) NOTNULL) IN ()) RIGHT OUTER JOIN vt0 ON (- (((v0.c1)IS(rt0.c0)))) WHERE (2.13716522E8) ORDER BY CAST((+ (v0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((2.13716522E8) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((rt0.c1) NOTNULL) IN ()) RIGHT OUTER JOIN vt0 ON (- (((v0.c1)IS(rt0.c0)))) ORDER BY CAST((+ (v0.c0)) AS NUMERIC) DESC);
SELECT * FROM v0 INNER JOIN rt0 ON (((rt0.c1) NOTNULL) IN ()) RIGHT OUTER JOIN vt0 ON (- (((v0.c1)IS(rt0.c0)))) WHERE (2.13716522E8) ORDER BY CAST((+ (v0.c0)) AS NUMERIC) DESC;
SELECT * FROM vt0, rt0 WHERE (((((vt0.c1)||(vt0.c0)))OR(((rt0.c1)OR(vt0.c1))))) ORDER BY rt0.c2 ASC  NULLS FIRST, (((((((('P3')OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt0.c0)OR(rt0.c1)))))OR(((((vt0.c1)OR(vt0.c1)))OR(rt0.c2)))))AND((vt0.c1 IN ()))), CAST(((((rt0.c2)OR('()')))AND(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)||(vt0.c0)))OR(((rt0.c1)OR(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC  NULLS FIRST, (((((((('P3')OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt0.c0)OR(rt0.c1)))))OR(((((vt0.c1)OR(vt0.c1)))OR(rt0.c2)))))AND((vt0.c1 IN ()))), CAST(((((rt0.c2)OR('()')))AND(vt0.c0)) AS REAL));
SELECT * FROM vt0, rt0 WHERE (((((vt0.c1)||(vt0.c0)))OR(((rt0.c1)OR(vt0.c1))))) ORDER BY rt0.c2 ASC  NULLS FIRST, (((((((('P3')OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt0.c0)OR(rt0.c1)))))OR(((((vt0.c1)OR(vt0.c1)))OR(rt0.c2)))))AND((vt0.c1 IN ()))), CAST(((((rt0.c2)OR('()')))AND(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)||(vt0.c0)))OR(((rt0.c1)OR(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC  NULLS FIRST, (((((((('P3')OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt0.c0)OR(rt0.c1)))))OR(((((vt0.c1)OR(vt0.c1)))OR(rt0.c2)))))AND((vt0.c1 IN ()))), CAST(((((rt0.c2)OR('()')))AND(vt0.c0)) AS REAL));
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE 0.2265738532033278  WHEN '1731942152' THEN rt0.c2 WHEN vt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END COLLATE NOCASE) ORDER BY CAST(MAX(v0.c1, '173652860') AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((CASE 0.2265738532033278  WHEN '1731942152' THEN rt0.c2 WHEN vt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CAST(MAX(v0.c1, '173652860') AS NUMERIC) DESC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE 0.2265738532033278  WHEN '1731942152' THEN rt0.c2 WHEN vt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END COLLATE NOCASE) ORDER BY CAST(MAX(v0.c1, '173652860') AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((CASE 0.2265738532033278  WHEN '1731942152' THEN rt0.c2 WHEN vt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CAST(MAX(v0.c1, '173652860') AS NUMERIC) DESC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE 0.2265738532033278  WHEN '1731942152' THEN rt0.c2 WHEN vt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END COLLATE NOCASE) ORDER BY CAST(MAX(v0.c1, '173652860') AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM) ORDER BY ((rt0.c1 COLLATE RTRIM)=(NULL)), ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)+('1438036746'))  NULLS LAST, ((vt0.c1 COLLATE BINARY)||(((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(vt0.c0)))OR(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1 COLLATE RTRIM)=(NULL)), ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)+('1438036746'))  NULLS LAST, ((vt0.c1 COLLATE BINARY)||(((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(vt0.c0)))OR(x''))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM) ORDER BY ((rt0.c1 COLLATE RTRIM)=(NULL)), ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)+('1438036746'))  NULLS LAST, ((vt0.c1 COLLATE BINARY)||(((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(vt0.c0)))OR(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1 COLLATE RTRIM)=(NULL)), ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)+('1438036746'))  NULLS LAST, ((vt0.c1 COLLATE BINARY)||(((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(vt0.c0)))OR(x''))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM) ORDER BY ((rt0.c1 COLLATE RTRIM)=(NULL)), ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)+('1438036746'))  NULLS LAST, ((vt0.c1 COLLATE BINARY)||(((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(vt0.c0)))OR(x''))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE ((v0.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((v0.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((v0.c2 IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<=(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY vt0.c0 DESC, CASE WHEN UPPER(DISTINCT vt0.c1) THEN 0.4514631003269016 WHEN (~ (vt0.c1)) THEN (NOT (vt0.c1)) WHEN (((vt0.c1, vt0.c1, vt0.c0))==((vt0.c1, vt0.c0, vt0.c1))) THEN ((vt0.c0) IS FALSE) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<=(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC, CASE WHEN UPPER(DISTINCT vt0.c1) THEN 0.4514631003269016 WHEN (~ (vt0.c1)) THEN (NOT (vt0.c1)) WHEN (((vt0.c1, vt0.c1, vt0.c0))=((vt0.c1, vt0.c0, vt0.c1))) THEN ((vt0.c0) IS FALSE) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<=(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY vt0.c0 DESC, CASE WHEN UPPER(DISTINCT vt0.c1) THEN 0.4514631003269016 WHEN (~ (vt0.c1)) THEN (NOT (vt0.c1)) WHEN (((vt0.c1, vt0.c1, vt0.c0))==((vt0.c1, vt0.c0, vt0.c1))) THEN ((vt0.c0) IS FALSE) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<=(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC, CASE WHEN UPPER(DISTINCT vt0.c1) THEN 0.4514631003269016 WHEN (~ (vt0.c1)) THEN (NOT (vt0.c1)) WHEN (((vt0.c1, vt0.c1, vt0.c0))=((vt0.c1, vt0.c0, vt0.c1))) THEN ((vt0.c0) IS FALSE) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<=(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY vt0.c0 DESC, CASE WHEN UPPER(DISTINCT vt0.c1) THEN 0.4514631003269016 WHEN (~ (vt0.c1)) THEN (NOT (vt0.c1)) WHEN (((vt0.c1, vt0.c1, vt0.c0))==((vt0.c1, vt0.c0, vt0.c1))) THEN ((vt0.c0) IS FALSE) END;
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((((- (vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((- (vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((((- (vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((- (vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((((- (vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (TYPEOF(((rt0.c0) NOT BETWEEN (v0.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c0) NOT BETWEEN (v0.c1) AND (rt0.c0)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (TYPEOF(((rt0.c0) NOT BETWEEN (v0.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c0) NOT BETWEEN (v0.c1) AND (rt0.c0)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (TYPEOF(((rt0.c0) NOT BETWEEN (v0.c1) AND (rt0.c0))));
SELECT * FROM v0 WHERE (((((((((LAST_INSERT_ROWID())AND((v0.c2 IN ()))))AND(CASE WHEN v0.c0 THEN v0.c2 END)))AND(((v0.c1) NOT NULL))))OR(((x'') ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((LAST_INSERT_ROWID())AND((v0.c2 IN ()))))AND(CASE WHEN v0.c0 THEN v0.c2 END)))AND(((v0.c1) NOT NULL))))OR(((x'') ISNULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((LAST_INSERT_ROWID())AND((v0.c2 IN ()))))AND(CASE WHEN v0.c0 THEN v0.c2 END)))AND(((v0.c1) NOT NULL))))OR(((x'') ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((LAST_INSERT_ROWID())AND((v0.c2 IN ()))))AND(CASE WHEN v0.c0 THEN v0.c2 END)))AND(((v0.c1) NOT NULL))))OR(((x'') ISNULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((LAST_INSERT_ROWID())AND((v0.c2 IN ()))))AND(CASE WHEN v0.c0 THEN v0.c2 END)))AND(((v0.c1) NOT NULL))))OR(((x'') ISNULL))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c1) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c1) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c1) NOT NULL)) ISNULL));
SELECT COUNT(*) FROM v0, vt0 WHERE (json_array_length(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(vt0.c0)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (json_array_length(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(vt0.c0)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (json_array_length(vt0.c0));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c1)))AND(vt0.c1)))AND(((v0.c0) NOT BETWEEN (0xefb8254) AND (rt0.c1)))))OR(rt0.c1)))OR(rt0.c0)) FULL OUTER JOIN rt0 ON ((CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)==(CAST(rt0.c0 AS NUMERIC))) WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END)>((- (vt0.c0))))) ORDER BY ((((((((((((((((v0.c0)OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c1)))OR((NOT (rt0.c0)))))OR(((NULL)OR(v0.c2)))))AND(CAST(vt0.c1 AS NUMERIC))))OR(((v0.c2)OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END)>((- (vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c1)))AND(vt0.c1)))AND(((v0.c0) NOT BETWEEN (0xefb8254) AND (rt0.c1)))))OR(rt0.c1)))OR(rt0.c0)) FULL OUTER JOIN rt0 ON ((CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)==(CAST(rt0.c0 AS NUMERIC))) ORDER BY ((((((((((((((((v0.c0)OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c1)))OR((NOT (rt0.c0)))))OR(((NULL)OR(v0.c2)))))AND(CAST(vt0.c1 AS NUMERIC))))OR(((v0.c2)OR(rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c1)))AND(vt0.c1)))AND(((v0.c0) NOT BETWEEN (0xefb8254) AND (rt0.c1)))))OR(rt0.c1)))OR(rt0.c0)) FULL OUTER JOIN rt0 ON ((CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)==(CAST(rt0.c0 AS NUMERIC))) WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END)>((- (vt0.c0))))) ORDER BY ((((((((((((((((v0.c0)OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c1)))OR((NOT (rt0.c0)))))OR(((NULL)OR(v0.c2)))))AND(CAST(vt0.c1 AS NUMERIC))))OR(((v0.c2)OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END)>((- (vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c1)))AND(vt0.c1)))AND(((v0.c0) NOT BETWEEN (0xefb8254) AND (rt0.c1)))))OR(rt0.c1)))OR(rt0.c0)) FULL OUTER JOIN rt0 ON ((CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)==(CAST(rt0.c0 AS NUMERIC))) ORDER BY ((((((((((((((((v0.c0)OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c1)))OR((NOT (rt0.c0)))))OR(((NULL)OR(v0.c2)))))AND(CAST(vt0.c1 AS NUMERIC))))OR(((v0.c2)OR(rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((CASE v0.c2  WHEN v0.c0 THEN v0.c0 END)>>(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c2  WHEN v0.c0 THEN v0.c0 END)>>(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((CASE v0.c2  WHEN v0.c0 THEN v0.c0 END)>>(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c2  WHEN v0.c0 THEN v0.c0 END)>>(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((CASE v0.c2  WHEN v0.c0 THEN v0.c0 END)>>(vt0.c1 COLLATE BINARY)));
SELECT * FROM vt0, rt0 INNER JOIN v0 ON ((((((v0.c1)AND(v0.c0)))OR(rt0.c0)))LIKE((((('')AND(v0.c1)))AND(v0.c0)))) WHERE (0X501a892d) ORDER BY (((((- (rt0.c2)))AND(CAST(vt0.c0 AS NUMERIC))))OR(((vt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0X501a892d) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON ((((((v0.c1)AND(v0.c0)))OR(rt0.c0)))LIKE((((('')AND(v0.c1)))AND(v0.c0)))) ORDER BY (((((- (rt0.c2)))AND(CAST(vt0.c0 AS NUMERIC))))OR(((vt0.c0) IS TRUE))) DESC);
SELECT * FROM vt0, rt0 INNER JOIN v0 ON ((((((v0.c1)AND(v0.c0)))OR(rt0.c0)))LIKE((((('')AND(v0.c1)))AND(v0.c0)))) WHERE (0X501a892d) ORDER BY (((((- (rt0.c2)))AND(CAST(vt0.c0 AS NUMERIC))))OR(((vt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0X501a892d) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON ((((((v0.c1)AND(v0.c0)))OR(rt0.c0)))LIKE((((('')AND(v0.c1)))AND(v0.c0)))) ORDER BY (((((- (rt0.c2)))AND(CAST(vt0.c0 AS NUMERIC))))OR(((vt0.c0) IS TRUE))) DESC);
SELECT * FROM vt0, rt0 INNER JOIN v0 ON ((((((v0.c1)AND(v0.c0)))OR(rt0.c0)))LIKE((((('')AND(v0.c1)))AND(v0.c0)))) WHERE (0X501a892d) ORDER BY (((((- (rt0.c2)))AND(CAST(vt0.c0 AS NUMERIC))))OR(((vt0.c0) IS TRUE))) DESC;
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT UPPER(rt0.c0), ((rt0.c1)==(rt0.c0)))) ORDER BY x'7ac8'  NULLS LAST, CASE ((rt0.c1)<<(rt0.c0))  WHEN ((((NULL)AND(rt0.c1)))AND('NaN')) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND ('{?OgN')) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) THEN (('0') ISNULL) WHEN (NOT (rt0.c1)) THEN (('')=(rt0.c1)) ELSE '97633406' END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT UPPER(rt0.c0), ((rt0.c1)=(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY x'7ac8'  NULLS LAST, CASE ((rt0.c1)<<(rt0.c0))  WHEN ((((NULL)AND(rt0.c1)))AND('NaN')) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND ('{?OgN')) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) THEN (('0') ISNULL) WHEN (NOT (rt0.c1)) THEN (('')=(rt0.c1)) ELSE '97633406' END DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT UPPER(rt0.c0), ((rt0.c1)==(rt0.c0)))) ORDER BY x'7ac8'  NULLS LAST, CASE ((rt0.c1)<<(rt0.c0))  WHEN ((((NULL)AND(rt0.c1)))AND('NaN')) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND ('{?OgN')) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) THEN (('0') ISNULL) WHEN (NOT (rt0.c1)) THEN (('')=(rt0.c1)) ELSE '97633406' END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT UPPER(rt0.c0), ((rt0.c1)=(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY x'7ac8'  NULLS LAST, CASE ((rt0.c1)<<(rt0.c0))  WHEN ((((NULL)AND(rt0.c1)))AND('NaN')) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND ('{?OgN')) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) THEN (('0') ISNULL) WHEN (NOT (rt0.c1)) THEN (('')=(rt0.c1)) ELSE '97633406' END DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT UPPER(rt0.c0), ((rt0.c1)==(rt0.c0)))) ORDER BY x'7ac8'  NULLS LAST, CASE ((rt0.c1)<<(rt0.c0))  WHEN ((((NULL)AND(rt0.c1)))AND('NaN')) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND ('{?OgN')) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) THEN (('0') ISNULL) WHEN (NOT (rt0.c1)) THEN (('')=(rt0.c1)) ELSE '97633406' END DESC  NULLS FIRST;
SELECT * FROM rt0, v0, vt0 WHERE (x'') ORDER BY '251363924';
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY '251363924');
SELECT * FROM rt0, v0, vt0 WHERE (x'') ORDER BY '251363924';
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY '251363924');
SELECT * FROM rt0, v0, vt0 WHERE (x'') ORDER BY '251363924';
SELECT * FROM v0 WHERE (((v0.c2) IS FALSE)) ORDER BY CASE v0.c2  WHEN (- (v0.c2)) THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE CAST(v0.c0 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ((((v0.c2) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c2  WHEN (- (v0.c2)) THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE CAST(v0.c0 AS INTEGER) END);
SELECT * FROM v0 WHERE (((v0.c2) IS FALSE)) ORDER BY CASE v0.c2  WHEN (- (v0.c2)) THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE CAST(v0.c0 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ((((v0.c2) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c2  WHEN (- (v0.c2)) THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE CAST(v0.c0 AS INTEGER) END);
SELECT * FROM v0 WHERE (((v0.c2) IS FALSE)) ORDER BY CASE v0.c2  WHEN (- (v0.c2)) THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE CAST(v0.c0 AS INTEGER) END;
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0 IN ()))GLOB(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))GLOB(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, v0 NOT INDEXED);
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0 IN ()))GLOB(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))GLOB(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, v0 NOT INDEXED);
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0 IN ()))GLOB(((rt0.c0) NOTNULL))));
SELECT * FROM v0 NOT INDEXED WHERE ((- (v0.c0))) ORDER BY (((v0.c0)) BETWEEN ((v0.c1)) AND ((CAST(v0.c1 AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((v0.c1)) AND ((CAST(v0.c1 AS NUMERIC))))  NULLS FIRST);
SELECT * FROM v0 NOT INDEXED WHERE ((- (v0.c0))) ORDER BY (((v0.c0)) BETWEEN ((v0.c1)) AND ((CAST(v0.c1 AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((v0.c1)) AND ((CAST(v0.c1 AS NUMERIC))))  NULLS FIRST);
SELECT * FROM v0 NOT INDEXED WHERE ((- (v0.c0))) ORDER BY (((v0.c0)) BETWEEN ((v0.c1)) AND ((CAST(v0.c1 AS NUMERIC))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(x'')))OR(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) AND (vt0.c0))) ORDER BY (((vt0.c1)|(x'')) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(x'')))OR(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)|(x'')) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(x'')))OR(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) AND (vt0.c0))) ORDER BY (((vt0.c1)|(x'')) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(x'')))OR(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)|(x'')) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(x'')))OR(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) AND (vt0.c0))) ORDER BY (((vt0.c1)|(x'')) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (CAST(((v0.c0)*(0.7458896900261297)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)*(0.7458896900261297)) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CAST(((v0.c0)*(0.7458896900261297)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)*(0.7458896900261297)) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CAST(((v0.c0)*(0.7458896900261297)) AS TEXT));
SELECT * FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((((v0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c1)))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c2))) ORDER BY (((v0.c0)>>(rt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c1)))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c2))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((v0.c0)>>(rt0.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((((v0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c1)))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c2))) ORDER BY (((v0.c0)>>(rt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c1)))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c2))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((v0.c0)>>(rt0.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((((v0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c1)))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c2))) ORDER BY (((v0.c0)>>(rt0.c0)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c1 WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END AS INTEGER) WHERE (CASE WHEN CAST(v0.c2 AS INTEGER) THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) WHEN (NOT (v0.c1)) THEN ((x'f3ad')<(v0.c2)) WHEN ABS(v0.c1) THEN ((((rt0.c1)OR(v0.c2)))AND(rt0.c1)) WHEN TRIM(v0.c1) THEN (- (v0.c2)) WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c2 COLLATE RTRIM WHEN ((rt0.c0) NOT BETWEEN (v0.c2) AND (251363924)) THEN ((0.6262476145575248)IS NOT(rt0.c0)) WHEN (v0.c0 IN ()) THEN (v0.c1 IN ()) ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)) END) ORDER BY json_patch(((rt0.c2) BETWEEN (x'') AND (rt0.c1)), ((rt0.c1)*(v0.c1)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c2 AS INTEGER) THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) WHEN (NOT (v0.c1)) THEN ((x'f3ad')<(v0.c2)) WHEN ABS(v0.c1) THEN ((((rt0.c1)OR(v0.c2)))AND(rt0.c1)) WHEN TRIM(v0.c1) THEN (- (v0.c2)) WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c2 COLLATE RTRIM WHEN ((rt0.c0) NOT BETWEEN (v0.c2) AND (251363924)) THEN ((0.6262476145575248)IS NOT(rt0.c0)) WHEN (v0.c0 IN ()) THEN (v0.c1 IN ()) ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c1 WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END AS INTEGER) ORDER BY json_patch(((rt0.c2) BETWEEN (x'') AND (rt0.c1)), ((rt0.c1)*(v0.c1))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c1 WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END AS INTEGER) WHERE (CASE WHEN CAST(v0.c2 AS INTEGER) THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) WHEN (NOT (v0.c1)) THEN ((x'f3ad')<(v0.c2)) WHEN ABS(v0.c1) THEN ((((rt0.c1)OR(v0.c2)))AND(rt0.c1)) WHEN TRIM(v0.c1) THEN (- (v0.c2)) WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c2 COLLATE RTRIM WHEN ((rt0.c0) NOT BETWEEN (v0.c2) AND (251363924)) THEN ((0.6262476145575248)IS NOT(rt0.c0)) WHEN (v0.c0 IN ()) THEN (v0.c1 IN ()) ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)) END) ORDER BY json_patch(((rt0.c2) BETWEEN (x'') AND (rt0.c1)), ((rt0.c1)*(v0.c1)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c2 AS INTEGER) THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) WHEN (NOT (v0.c1)) THEN ((x'f3ad')<(v0.c2)) WHEN ABS(v0.c1) THEN ((((rt0.c1)OR(v0.c2)))AND(rt0.c1)) WHEN TRIM(v0.c1) THEN (- (v0.c2)) WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c2 COLLATE RTRIM WHEN ((rt0.c0) NOT BETWEEN (v0.c2) AND (251363924)) THEN ((0.6262476145575248)IS NOT(rt0.c0)) WHEN (v0.c0 IN ()) THEN (v0.c1 IN ()) ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c1 WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END AS INTEGER) ORDER BY json_patch(((rt0.c2) BETWEEN (x'') AND (rt0.c1)), ((rt0.c1)*(v0.c1))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c1 WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END AS INTEGER) WHERE (CASE WHEN CAST(v0.c2 AS INTEGER) THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) WHEN (NOT (v0.c1)) THEN ((x'f3ad')<(v0.c2)) WHEN ABS(v0.c1) THEN ((((rt0.c1)OR(v0.c2)))AND(rt0.c1)) WHEN TRIM(v0.c1) THEN (- (v0.c2)) WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c2 COLLATE RTRIM WHEN ((rt0.c0) NOT BETWEEN (v0.c2) AND (251363924)) THEN ((0.6262476145575248)IS NOT(rt0.c0)) WHEN (v0.c0 IN ()) THEN (v0.c1 IN ()) ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)) END) ORDER BY json_patch(((rt0.c2) BETWEEN (x'') AND (rt0.c1)), ((rt0.c1)*(v0.c1)));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) AS NUMERIC));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c1))<=((0.29620197180973196, 0.29352266599540655, rt0.c0)))) NOT BETWEEN (((NULL)|(rt0.c1))) AND (rt0.c2 COLLATE BINARY))) ORDER BY ((((rt0.c1)||(rt0.c2))) BETWEEN ((((rt0.c0))>((x'4ef1')))) AND (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, rt0.c1))<=((0.29620197180973196, 0.29352266599540655, rt0.c0)))) NOT BETWEEN (((NULL)|(rt0.c1))) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)||(rt0.c2))) BETWEEN ((((rt0.c0))>((x'4ef1')))) AND (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c1))<=((0.29620197180973196, 0.29352266599540655, rt0.c0)))) NOT BETWEEN (((NULL)|(rt0.c1))) AND (rt0.c2 COLLATE BINARY))) ORDER BY ((((rt0.c1)||(rt0.c2))) BETWEEN ((((rt0.c0))>((x'4ef1')))) AND (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, rt0.c1))<=((0.29620197180973196, 0.29352266599540655, rt0.c0)))) NOT BETWEEN (((NULL)|(rt0.c1))) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)||(rt0.c2))) BETWEEN ((((rt0.c0))>((x'4ef1')))) AND (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c1))<=((0.29620197180973196, 0.29352266599540655, rt0.c0)))) NOT BETWEEN (((NULL)|(rt0.c1))) AND (rt0.c2 COLLATE BINARY))) ORDER BY ((((rt0.c1)||(rt0.c2))) BETWEEN ((((rt0.c0))>((x'4ef1')))) AND (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0))))  NULLS LAST;
SELECT * FROM v0 WHERE (((((v0.c2)>(v0.c1)))/(CAST(v0.c0 AS INTEGER)))) ORDER BY ((((v0.c1) IS TRUE))AND(LIKE(v0.c0, v0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)>(v0.c1)))/(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) IS TRUE))AND(LIKE(v0.c0, v0.c2))) ASC);
SELECT * FROM v0 WHERE (((((v0.c2)>(v0.c1)))/(CAST(v0.c0 AS INTEGER)))) ORDER BY ((((v0.c1) IS TRUE))AND(LIKE(v0.c0, v0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)>(v0.c1)))/(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) IS TRUE))AND(LIKE(v0.c0, v0.c2))) ASC);
SELECT * FROM v0 WHERE (((((v0.c2)>(v0.c1)))/(CAST(v0.c0 AS INTEGER)))) ORDER BY ((((v0.c1) IS TRUE))AND(LIKE(v0.c0, v0.c2))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)||(vt0.c0))) NOT BETWEEN (vt0.c1) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0Xffffffffd3db7f1a))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)||(vt0.c0))) NOT BETWEEN (vt0.c1) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0xffffffffd3db7f1a)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)||(vt0.c0))) NOT BETWEEN (vt0.c1) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0Xffffffffd3db7f1a))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)||(vt0.c0))) NOT BETWEEN (vt0.c1) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0xffffffffd3db7f1a)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)||(vt0.c0))) NOT BETWEEN (vt0.c1) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0Xffffffffd3db7f1a))))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON json_insert(vt0.c1, CAST(vt0.c1 AS NUMERIC), CASE WHEN '1351345287' THEN rt0.c0 END, ((((rt0.c0)AND(vt0.c1)))OR(rt0.c0)), (rt0.c1 IN ())) RIGHT OUTER JOIN vt0 ON rt0.c1 WHERE ((CASE WHEN rt0.c0 THEN v0.c2 END IN ())) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)))), (((((NOT (v0.c1)))OR(((v0.c2) ISNULL))))AND((((v0.c0))<=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c0 THEN v0.c2 END IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON json_insert(vt0.c1, CAST(vt0.c1 AS NUMERIC), CASE WHEN '1351345287' THEN rt0.c0 END, ((((rt0.c0)AND(vt0.c1)))OR(rt0.c0)), (rt0.c1 IN ())) RIGHT OUTER JOIN vt0 ON rt0.c1 ORDER BY (NOT (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)))), (((((NOT (v0.c1)))OR(((v0.c2) ISNULL))))AND((((v0.c0))<=((rt0.c0))))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON json_insert(vt0.c1, CAST(vt0.c1 AS NUMERIC), CASE WHEN '1351345287' THEN rt0.c0 END, ((((rt0.c0)AND(vt0.c1)))OR(rt0.c0)), (rt0.c1 IN ())) RIGHT OUTER JOIN vt0 ON rt0.c1 WHERE ((CASE WHEN rt0.c0 THEN v0.c2 END IN ())) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)))), (((((NOT (v0.c1)))OR(((v0.c2) ISNULL))))AND((((v0.c0))<=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c0 THEN v0.c2 END IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON json_insert(vt0.c1, CAST(vt0.c1 AS NUMERIC), CASE WHEN '1351345287' THEN rt0.c0 END, ((((rt0.c0)AND(vt0.c1)))OR(rt0.c0)), (rt0.c1 IN ())) RIGHT OUTER JOIN vt0 ON rt0.c1 ORDER BY (NOT (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)))), (((((NOT (v0.c1)))OR(((v0.c2) ISNULL))))AND((((v0.c0))<=((rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE (LENGTH((NOT (0.3761662208962959))));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH((NOT (0.3761662208962959)))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE (LENGTH((NOT (0.3761662208962959))));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH((NOT (0.3761662208962959)))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE (LENGTH((NOT (0.3761662208962959))));
SELECT COUNT(*) FROM vt0 WHERE (x'b619') ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c1)OR(vt0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN CAST(NULL AS NUMERIC) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<=(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'b619') IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c1)OR(vt0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN CAST(NULL AS NUMERIC) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<=(vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (x'b619') ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c1)OR(vt0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN CAST(NULL AS NUMERIC) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<=(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'b619') IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c1)OR(vt0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN CAST(NULL AS NUMERIC) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<=(vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (x'b619') ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c1)OR(vt0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN CAST(NULL AS NUMERIC) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<=(vt0.c0)) END;
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON 'Oj%71\' COLLATE NOCASE WHERE (((((((((((v0.c1) NOT NULL))AND(((rt0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR(((vt0.c0) BETWEEN (v0.c1) AND (rt0.c0)))))OR(vt0.c0)))AND(TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1) NOT NULL))AND(((rt0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR(((vt0.c0) BETWEEN (v0.c1) AND (rt0.c0)))))OR(vt0.c0)))AND(TRIM(vt0.c0)))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON 'Oj%71\' COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON 'Oj%71\' COLLATE NOCASE WHERE (((((((((((v0.c1) NOT NULL))AND(((rt0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR(((vt0.c0) BETWEEN (v0.c1) AND (rt0.c0)))))OR(vt0.c0)))AND(TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1) NOT NULL))AND(((rt0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR(((vt0.c0) BETWEEN (v0.c1) AND (rt0.c0)))))OR(vt0.c0)))AND(TRIM(vt0.c0)))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON 'Oj%71\' COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON 'Oj%71\' COLLATE NOCASE WHERE (((((((((((v0.c1) NOT NULL))AND(((rt0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR(((vt0.c0) BETWEEN (v0.c1) AND (rt0.c0)))))OR(vt0.c0)))AND(TRIM(vt0.c0))));
SELECT * FROM v0, vt0, rt0 WHERE ((+ ((('-740589798')GLOB(rt0.c1))))) ORDER BY (((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOT BETWEEN ('115981073') AND (0.036167746702975845)) DESC  NULLS LAST, (vt0.c0 COLLATE NOCASE IN (((((((((rt0.c1)OR(v0.c2)))OR(x'')))OR(rt0.c1)))AND(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((('-740589798')GLOB(rt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOT BETWEEN ('115981073') AND (0.036167746702975845)) DESC  NULLS LAST, (vt0.c0 COLLATE NOCASE IN (((((((((rt0.c1)OR(v0.c2)))OR(x'')))OR(rt0.c1)))AND(vt0.c1))))  NULLS FIRST);
SELECT * FROM v0, vt0, rt0 WHERE ((+ ((('-740589798')GLOB(rt0.c1))))) ORDER BY (((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOT BETWEEN ('115981073') AND (0.036167746702975845)) DESC  NULLS LAST, (vt0.c0 COLLATE NOCASE IN (((((((((rt0.c1)OR(v0.c2)))OR(x'')))OR(rt0.c1)))AND(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((('-740589798')GLOB(rt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOT BETWEEN ('115981073') AND (0.036167746702975845)) DESC  NULLS LAST, (vt0.c0 COLLATE NOCASE IN (((((((((rt0.c1)OR(v0.c2)))OR(x'')))OR(rt0.c1)))AND(vt0.c1))))  NULLS FIRST);
SELECT * FROM v0, vt0, rt0 WHERE ((+ ((('-740589798')GLOB(rt0.c1))))) ORDER BY (((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOT BETWEEN ('115981073') AND (0.036167746702975845)) DESC  NULLS LAST, (vt0.c0 COLLATE NOCASE IN (((((((((rt0.c1)OR(v0.c2)))OR(x'')))OR(rt0.c1)))AND(vt0.c1))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS REAL)) ORDER BY CASE WHEN ((vt0.c1) IS FALSE) THEN (NOT (vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1) IS FALSE) THEN (NOT (vt0.c1)) END DESC);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS REAL)) ORDER BY CASE WHEN ((vt0.c1) IS FALSE) THEN (NOT (vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1) IS FALSE) THEN (NOT (vt0.c1)) END DESC);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS REAL)) ORDER BY CASE WHEN ((vt0.c1) IS FALSE) THEN (NOT (vt0.c1)) END DESC;
SELECT * FROM rt0, v0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) IN ())) ORDER BY COALESCE(DISTINCT ((x'') BETWEEN (v0.c2) AND (0xffffffff9c0a3b67)), vt0.c0 COLLATE BINARY) ASC  NULLS LAST, (((- (v0.c0))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY COALESCE(DISTINCT ((x'') BETWEEN (v0.c2) AND (0Xffffffff9c0a3b67)), vt0.c0 COLLATE BINARY) ASC  NULLS LAST, (((- (v0.c0))) ISNULL)  NULLS LAST);
SELECT * FROM rt0, v0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) IN ())) ORDER BY COALESCE(DISTINCT ((x'') BETWEEN (v0.c2) AND (0xffffffff9c0a3b67)), vt0.c0 COLLATE BINARY) ASC  NULLS LAST, (((- (v0.c0))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY COALESCE(DISTINCT ((x'') BETWEEN (v0.c2) AND (0Xffffffff9c0a3b67)), vt0.c0 COLLATE BINARY) ASC  NULLS LAST, (((- (v0.c0))) ISNULL)  NULLS LAST);
SELECT * FROM rt0, v0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) IN ())) ORDER BY COALESCE(DISTINCT ((x'') BETWEEN (v0.c2) AND (0xffffffff9c0a3b67)), vt0.c0 COLLATE BINARY) ASC  NULLS LAST, (((- (v0.c0))) ISNULL)  NULLS LAST;
SELECT * FROM vt0 WHERE (ROUND(((vt0.c1) NOTNULL), vt0.c0));
SELECT SUM(count) FROM (SELECT ((ROUND(((vt0.c1) NOTNULL), vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (ROUND(((vt0.c1) NOTNULL), vt0.c0));
SELECT SUM(count) FROM (SELECT ((ROUND(((vt0.c1) NOTNULL), vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (ROUND(((vt0.c1) NOTNULL), vt0.c0));
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c1)IS(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(rt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c1)IS(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(rt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c1)IS(rt0.c2))) ISNULL));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))<>(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE))!=(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))<>(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE))!=(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))<>(((v0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((+ (v0.c1)))/(((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c1)))/(((((rt0.c2)AND(rt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((+ (v0.c1)))/(((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c1)))/(((((rt0.c2)AND(rt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((+ (v0.c1)))/(((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))));
SELECT * FROM v0, vt0 NATURAL JOIN rt0 WHERE (0x673b5708 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((0x673b5708 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT * FROM v0, vt0 NATURAL JOIN rt0 WHERE (0x673b5708 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((0x673b5708 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT * FROM v0, vt0 NATURAL JOIN rt0 WHERE (0x673b5708 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) IS FALSE)) ORDER BY (((vt0.c0)|(vt0.c0)) IN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, ABS(DISTINCT vt0.c0)))  NULLS FIRST, (((vt0.c0)) BETWEEN (('177122344' COLLATE BINARY)) AND ((vt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)|(vt0.c0)) IN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, ABS(DISTINCT vt0.c0)))  NULLS FIRST, (((vt0.c0)) BETWEEN (('177122344' COLLATE BINARY)) AND ((vt0.c1))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) IS FALSE)) ORDER BY (((vt0.c0)|(vt0.c0)) IN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, ABS(DISTINCT vt0.c0)))  NULLS FIRST, (((vt0.c0)) BETWEEN (('177122344' COLLATE BINARY)) AND ((vt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)|(vt0.c0)) IN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, ABS(DISTINCT vt0.c0)))  NULLS FIRST, (((vt0.c0)) BETWEEN (('177122344' COLLATE BINARY)) AND ((vt0.c1))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) IS FALSE)) ORDER BY (((vt0.c0)|(vt0.c0)) IN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, ABS(DISTINCT vt0.c0)))  NULLS FIRST, (((vt0.c0)) BETWEEN (('177122344' COLLATE BINARY)) AND ((vt0.c1))) ASC  NULLS LAST;
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((IFNULL(DISTINCT rt0.c0, rt0.c2)))!=(((NOT (v0.c0))))) WHERE (((((((((((v0.c1)OR(v0.c1)))OR('1351345287')))OR(rt0.c0)))OR(rt0.c2))) NOT BETWEEN (((((v0.c2)OR(rt0.c1)))AND(v0.c2))) AND ((('3b') NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (~ (0.24902434636966608));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1)OR(v0.c1)))OR('1351345287')))OR(rt0.c0)))OR(rt0.c2))) NOT BETWEEN (((((v0.c2)OR(rt0.c1)))AND(v0.c2))) AND ((('3b') NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((IFNULL(DISTINCT rt0.c0, rt0.c2)))!=(((NOT (v0.c0))))) ORDER BY (~ (0.24902434636966608)));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((IFNULL(DISTINCT rt0.c0, rt0.c2)))!=(((NOT (v0.c0))))) WHERE (((((((((((v0.c1)OR(v0.c1)))OR('1351345287')))OR(rt0.c0)))OR(rt0.c2))) NOT BETWEEN (((((v0.c2)OR(rt0.c1)))AND(v0.c2))) AND ((('3b') NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (~ (0.24902434636966608));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1)OR(v0.c1)))OR('1351345287')))OR(rt0.c0)))OR(rt0.c2))) NOT BETWEEN (((((v0.c2)OR(rt0.c1)))AND(v0.c2))) AND ((('3b') NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((IFNULL(DISTINCT rt0.c0, rt0.c2)))!=(((NOT (v0.c0))))) ORDER BY (~ (0.24902434636966608)));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((IFNULL(DISTINCT rt0.c0, rt0.c2)))!=(((NOT (v0.c0))))) WHERE (((((((((((v0.c1)OR(v0.c1)))OR('1351345287')))OR(rt0.c0)))OR(rt0.c2))) NOT BETWEEN (((((v0.c2)OR(rt0.c1)))AND(v0.c2))) AND ((('3b') NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (~ (0.24902434636966608));
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON (((v0.c2, v0.c0, vt0.c0, v0.c0, vt0.c1)) NOT BETWEEN ((((rt0.c1) IS TRUE), (v0.c2 IN ()), -1551873692, ((((rt0.c1)OR(v0.c2)))OR(v0.c1)), TRIM(DISTINCT v0.c0, rt0.c1))) AND ((GLOB(rt0.c2, ''), ((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)), rt0.c2 COLLATE NOCASE, ('-2028445805' IN ()), (- (vt0.c0))))) WHERE ((- (json_remove(v0.c0, 0x5a566d96))));
SELECT SUM(count) FROM (SELECT ALL (((- (json_remove(v0.c0, 0X5a566d96)))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON (((v0.c2, v0.c0, vt0.c0, v0.c0, vt0.c1)) NOT BETWEEN ((((rt0.c1) IS TRUE), (v0.c2 IN ()), -1551873692, ((((rt0.c1)OR(v0.c2)))OR(v0.c1)), TRIM(DISTINCT v0.c0, rt0.c1))) AND ((GLOB(rt0.c2, ''), ((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)), rt0.c2 COLLATE NOCASE, ('-2028445805' IN ()), (- (vt0.c0))))));
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON (((v0.c2, v0.c0, vt0.c0, v0.c0, vt0.c1)) NOT BETWEEN ((((rt0.c1) IS TRUE), (v0.c2 IN ()), -1551873692, ((((rt0.c1)OR(v0.c2)))OR(v0.c1)), TRIM(DISTINCT v0.c0, rt0.c1))) AND ((GLOB(rt0.c2, ''), ((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)), rt0.c2 COLLATE NOCASE, ('-2028445805' IN ()), (- (vt0.c0))))) WHERE ((- (json_remove(v0.c0, 0x5a566d96))));
SELECT SUM(count) FROM (SELECT ALL (((- (json_remove(v0.c0, 0X5a566d96)))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON (((v0.c2, v0.c0, vt0.c0, v0.c0, vt0.c1)) NOT BETWEEN ((((rt0.c1) IS TRUE), (v0.c2 IN ()), -1551873692, ((((rt0.c1)OR(v0.c2)))OR(v0.c1)), TRIM(DISTINCT v0.c0, rt0.c1))) AND ((GLOB(rt0.c2, ''), ((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)), rt0.c2 COLLATE NOCASE, ('-2028445805' IN ()), (- (vt0.c0))))));
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON (((v0.c2, v0.c0, vt0.c0, v0.c0, vt0.c1)) NOT BETWEEN ((((rt0.c1) IS TRUE), (v0.c2 IN ()), -1551873692, ((((rt0.c1)OR(v0.c2)))OR(v0.c1)), TRIM(DISTINCT v0.c0, rt0.c1))) AND ((GLOB(rt0.c2, ''), ((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)), rt0.c2 COLLATE NOCASE, ('-2028445805' IN ()), (- (vt0.c0))))) WHERE ((- (json_remove(v0.c0, 0x5a566d96))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN (rt0.c1)) COLLATE NOCASE) ORDER BY (+ (rt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN (rt0.c1)) COLLATE NOCASE) ORDER BY (+ (rt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN (rt0.c1)) COLLATE NOCASE) ORDER BY (+ (rt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT * FROM rt0, vt0, v0 WHERE ((~ (CASE rt0.c1  WHEN v0.c2 THEN vt0.c1 END))) ORDER BY CASE WHEN ((0.10514329237417108)LIKE(rt0.c1)) THEN ((v0.c2)AND(v0.c1)) WHEN (vt0.c1 IN ()) THEN 0.026452166252186715 WHEN ((v0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((rt0.c2)OR(v0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CASE rt0.c1  WHEN v0.c2 THEN vt0.c1 END))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CASE WHEN ((0.10514329237417108)LIKE(rt0.c1)) THEN ((v0.c2)AND(v0.c1)) WHEN (vt0.c1 IN ()) THEN 0.026452166252186715 WHEN ((v0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((rt0.c2)OR(v0.c2)) END  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE ((~ (CASE rt0.c1  WHEN v0.c2 THEN vt0.c1 END))) ORDER BY CASE WHEN ((0.10514329237417108)LIKE(rt0.c1)) THEN ((v0.c2)AND(v0.c1)) WHEN (vt0.c1 IN ()) THEN 0.026452166252186715 WHEN ((v0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((rt0.c2)OR(v0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CASE rt0.c1  WHEN v0.c2 THEN vt0.c1 END))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CASE WHEN ((0.10514329237417108)LIKE(rt0.c1)) THEN ((v0.c2)AND(v0.c1)) WHEN (vt0.c1 IN ()) THEN 0.026452166252186715 WHEN ((v0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((rt0.c2)OR(v0.c2)) END  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE ((~ (CASE rt0.c1  WHEN v0.c2 THEN vt0.c1 END))) ORDER BY CASE WHEN ((0.10514329237417108)LIKE(rt0.c1)) THEN ((v0.c2)AND(v0.c1)) WHEN (vt0.c1 IN ()) THEN 0.026452166252186715 WHEN ((v0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((rt0.c2)OR(v0.c2)) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((((((0.39103619362088937)OR(CASE rt0.c2  WHEN rt0.c2 THEN 0.3529520664563591 END)))OR((rt0.c0 IN (868982602, rt0.c1)))))OR(rt0.c0 COLLATE BINARY)))OR(rt0.c1)) WHERE (x'') ORDER BY vt0.c0  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((((((0.39103619362088937)OR(CASE rt0.c2  WHEN rt0.c2 THEN 0.3529520664563591 END)))OR((rt0.c0 IN (868982602, rt0.c1)))))OR(rt0.c0 COLLATE BINARY)))OR(rt0.c1)) ORDER BY vt0.c0  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((((((0.39103619362088937)OR(CASE rt0.c2  WHEN rt0.c2 THEN 0.3529520664563591 END)))OR((rt0.c0 IN (868982602, rt0.c1)))))OR(rt0.c0 COLLATE BINARY)))OR(rt0.c1)) WHERE (x'') ORDER BY vt0.c0  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((((((0.39103619362088937)OR(CASE rt0.c2  WHEN rt0.c2 THEN 0.3529520664563591 END)))OR((rt0.c0 IN (868982602, rt0.c1)))))OR(rt0.c0 COLLATE BINARY)))OR(rt0.c1)) ORDER BY vt0.c0  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((((((0.39103619362088937)OR(CASE rt0.c2  WHEN rt0.c2 THEN 0.3529520664563591 END)))OR((rt0.c0 IN (868982602, rt0.c1)))))OR(rt0.c0 COLLATE BINARY)))OR(rt0.c1)) WHERE (x'') ORDER BY vt0.c0  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT ALL * FROM v0, vt0, rt0 WHERE (CAST(0.02849870503910734 AS INTEGER)) ORDER BY ((v0.c1 COLLATE NOCASE) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.02849870503910734 AS INTEGER)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((v0.c1 COLLATE NOCASE) IS FALSE) ASC);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CAST(0.02849870503910734 AS INTEGER)) ORDER BY ((v0.c1 COLLATE NOCASE) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.02849870503910734 AS INTEGER)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((v0.c1 COLLATE NOCASE) IS FALSE) ASC);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CAST(0.02849870503910734 AS INTEGER)) ORDER BY ((v0.c1 COLLATE NOCASE) IS FALSE) ASC;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON LOWER(DISTINCT vt0.c1 COLLATE RTRIM) WHERE (((((rt0.c2)<(vt0.c1)))GLOB(((((rt0.c2)AND(vt0.c0)))AND(rt0.c0))))) ORDER BY ((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))<<(vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<(vt0.c1)))GLOB(((((rt0.c2)AND(vt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON LOWER(DISTINCT vt0.c1 COLLATE RTRIM) ORDER BY ((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))<<(vt0.c0)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON LOWER(DISTINCT vt0.c1 COLLATE RTRIM) WHERE (((((rt0.c2)<(vt0.c1)))GLOB(((((rt0.c2)AND(vt0.c0)))AND(rt0.c0))))) ORDER BY ((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))<<(vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<(vt0.c1)))GLOB(((((rt0.c2)AND(vt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON LOWER(DISTINCT vt0.c1 COLLATE RTRIM) ORDER BY ((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))<<(vt0.c0)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON LOWER(DISTINCT vt0.c1 COLLATE RTRIM) WHERE (((((rt0.c2)<(vt0.c1)))GLOB(((((rt0.c2)AND(vt0.c0)))AND(rt0.c0))))) ORDER BY ((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))<<(vt0.c0));
SELECT COUNT(*) FROM rt0, v0 WHERE ((('-1893539872')%((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('-1893539872')%((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((('-1893539872')%((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('-1893539872')%((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((('-1893539872')%((~ (rt0.c0)))));
SELECT * FROM vt0, rt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))) AND ((rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))) AND ((rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))) AND ((rt0.c1))));
SELECT * FROM v0 WHERE (NULL) ORDER BY CAST((((v0.c1))!=((0.7522660325896237))) AS INTEGER) DESC  NULLS FIRST, ((((-1.374223872E9)|(v0.c0)))OR((v0.c1 IN ()))) ASC  NULLS FIRST, (+ (((((((((((((v0.c2)OR(v0.c0)))AND(v0.c1)))AND(v0.c1)))OR(v0.c2)))AND(v0.c0)))OR(v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY CAST((((v0.c1))!=((0.7522660325896237))) AS INTEGER) DESC  NULLS FIRST, ((((-1.374223872E9)|(v0.c0)))OR((v0.c1 IN ()))) ASC  NULLS FIRST, (+ (((((((((((((v0.c2)OR(v0.c0)))AND(v0.c1)))AND(v0.c1)))OR(v0.c2)))AND(v0.c0)))OR(v0.c2)))) ASC);
SELECT * FROM v0 WHERE (NULL) ORDER BY CAST((((v0.c1))!=((0.7522660325896237))) AS INTEGER) DESC  NULLS FIRST, ((((-1.374223872E9)|(v0.c0)))OR((v0.c1 IN ()))) ASC  NULLS FIRST, (+ (((((((((((((v0.c2)OR(v0.c0)))AND(v0.c1)))AND(v0.c1)))OR(v0.c2)))AND(v0.c0)))OR(v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY CAST((((v0.c1))!=((0.7522660325896237))) AS INTEGER) DESC  NULLS FIRST, ((((-1.374223872E9)|(v0.c0)))OR((v0.c1 IN ()))) ASC  NULLS FIRST, (+ (((((((((((((v0.c2)OR(v0.c0)))AND(v0.c1)))AND(v0.c1)))OR(v0.c2)))AND(v0.c0)))OR(v0.c2)))) ASC);
SELECT * FROM v0 WHERE (NULL) ORDER BY CAST((((v0.c1))!=((0.7522660325896237))) AS INTEGER) DESC  NULLS FIRST, ((((-1.374223872E9)|(v0.c0)))OR((v0.c1 IN ()))) ASC  NULLS FIRST, (+ (((((((((((((v0.c2)OR(v0.c0)))AND(v0.c1)))AND(v0.c1)))OR(v0.c2)))AND(v0.c0)))OR(v0.c2)))) ASC;
SELECT ALL * FROM v0, rt0 WHERE (CAST(((rt0.c2)IS NOT('1398608296')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)IS NOT('1398608296')) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST(((rt0.c2)IS NOT('1398608296')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)IS NOT('1398608296')) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST(((rt0.c2)IS NOT('1398608296')) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((v0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((((((((NULL)AND(rt0.c0)))OR(v0.c0)))OR(rt0.c1)))AND(v0.c2)))))) ORDER BY (v0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((((((((NULL)AND(rt0.c0)))OR(v0.c0)))OR(rt0.c1)))AND(v0.c2)))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (v0.c0 IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((v0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((((((((NULL)AND(rt0.c0)))OR(v0.c0)))OR(rt0.c1)))AND(v0.c2)))))) ORDER BY (v0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((((((((NULL)AND(rt0.c0)))OR(v0.c0)))OR(rt0.c1)))AND(v0.c2)))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (v0.c0 IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((v0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((((((((NULL)AND(rt0.c0)))OR(v0.c0)))OR(rt0.c1)))AND(v0.c2)))))) ORDER BY (v0.c0 IN ()) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2) ISNULL) AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c0) NOT NULL), (rt0.c0 IN ()), rt0.c0 COLLATE BINARY)) AND ((0.44397858297767157, CAST(rt0.c1 AS TEXT), ((rt0.c2)>>(rt0.c0)))))) ORDER BY CAST(((rt0.c1)<=(rt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c0) NOT NULL), (rt0.c0 IN ()), rt0.c0 COLLATE BINARY)) AND ((0.44397858297767157, CAST(rt0.c1 AS TEXT), ((rt0.c2)>>(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)<=(rt0.c1)) AS BLOB) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c0) NOT NULL), (rt0.c0 IN ()), rt0.c0 COLLATE BINARY)) AND ((0.44397858297767157, CAST(rt0.c1 AS TEXT), ((rt0.c2)>>(rt0.c0)))))) ORDER BY CAST(((rt0.c1)<=(rt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c0) NOT NULL), (rt0.c0 IN ()), rt0.c0 COLLATE BINARY)) AND ((0.44397858297767157, CAST(rt0.c1 AS TEXT), ((rt0.c2)>>(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)<=(rt0.c1)) AS BLOB) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c0) NOT NULL), (rt0.c0 IN ()), rt0.c0 COLLATE BINARY)) AND ((0.44397858297767157, CAST(rt0.c1 AS TEXT), ((rt0.c2)>>(rt0.c0)))))) ORDER BY CAST(((rt0.c1)<=(rt0.c1)) AS BLOB) ASC;
SELECT * FROM v0, vt0 WHERE (((((v0.c1 COLLATE NOCASE)AND(((vt0.c1)&(v0.c0)))))OR(((((((((v0.c0)OR('')))OR(v0.c1)))AND(vt0.c0)))OR(v0.c0))))) ORDER BY ((v0.c2)AND(((vt0.c1)>>(x'')))) ASC  NULLS LAST, CASE (NOT (v0.c1))  WHEN UNLIKELY(vt0.c0) THEN ((v0.c2)AND(vt0.c0)) WHEN ((((((((v0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c2)) THEN CASE WHEN v0.c0 THEN vt0.c1 ELSE '0.29352266599540655' END WHEN CAST(0.5927298547463423 AS INTEGER) THEN ((v0.c1)>=(vt0.c0)) WHEN ((v0.c0)/(v0.c1)) THEN ((((vt0.c1)AND(vt0.c0)))OR(v0.c2)) WHEN '' THEN CAST(0.9395389578949783 AS BLOB) ELSE (NULL IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1 COLLATE NOCASE)AND(((vt0.c1)&(v0.c0)))))OR(((((((((v0.c0)OR('')))OR(v0.c1)))AND(vt0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED ORDER BY ((v0.c2)AND(((vt0.c1)>>(x'')))) ASC  NULLS LAST, CASE (NOT (v0.c1))  WHEN UNLIKELY(vt0.c0) THEN ((v0.c2)AND(vt0.c0)) WHEN ((((((((v0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c2)) THEN CASE WHEN v0.c0 THEN vt0.c1 ELSE '0.29352266599540655' END WHEN CAST(0.5927298547463423 AS INTEGER) THEN ((v0.c1)>=(vt0.c0)) WHEN ((v0.c0)/(v0.c1)) THEN ((((vt0.c1)AND(vt0.c0)))OR(v0.c2)) WHEN '' THEN CAST(0.9395389578949783 AS BLOB) ELSE (NULL IN ()) END ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((((v0.c1 COLLATE NOCASE)AND(((vt0.c1)&(v0.c0)))))OR(((((((((v0.c0)OR('')))OR(v0.c1)))AND(vt0.c0)))OR(v0.c0))))) ORDER BY ((v0.c2)AND(((vt0.c1)>>(x'')))) ASC  NULLS LAST, CASE (NOT (v0.c1))  WHEN UNLIKELY(vt0.c0) THEN ((v0.c2)AND(vt0.c0)) WHEN ((((((((v0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c2)) THEN CASE WHEN v0.c0 THEN vt0.c1 ELSE '0.29352266599540655' END WHEN CAST(0.5927298547463423 AS INTEGER) THEN ((v0.c1)>=(vt0.c0)) WHEN ((v0.c0)/(v0.c1)) THEN ((((vt0.c1)AND(vt0.c0)))OR(v0.c2)) WHEN '' THEN CAST(0.9395389578949783 AS BLOB) ELSE (NULL IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1 COLLATE NOCASE)AND(((vt0.c1)&(v0.c0)))))OR(((((((((v0.c0)OR('')))OR(v0.c1)))AND(vt0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED ORDER BY ((v0.c2)AND(((vt0.c1)>>(x'')))) ASC  NULLS LAST, CASE (NOT (v0.c1))  WHEN UNLIKELY(vt0.c0) THEN ((v0.c2)AND(vt0.c0)) WHEN ((((((((v0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c2)) THEN CASE WHEN v0.c0 THEN vt0.c1 ELSE '0.29352266599540655' END WHEN CAST(0.5927298547463423 AS INTEGER) THEN ((v0.c1)>=(vt0.c0)) WHEN ((v0.c0)/(v0.c1)) THEN ((((vt0.c1)AND(vt0.c0)))OR(v0.c2)) WHEN '' THEN CAST(0.9395389578949783 AS BLOB) ELSE (NULL IN ()) END ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((((v0.c1 COLLATE NOCASE)AND(((vt0.c1)&(v0.c0)))))OR(((((((((v0.c0)OR('')))OR(v0.c1)))AND(vt0.c0)))OR(v0.c0))))) ORDER BY ((v0.c2)AND(((vt0.c1)>>(x'')))) ASC  NULLS LAST, CASE (NOT (v0.c1))  WHEN UNLIKELY(vt0.c0) THEN ((v0.c2)AND(vt0.c0)) WHEN ((((((((v0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c2)) THEN CASE WHEN v0.c0 THEN vt0.c1 ELSE '0.29352266599540655' END WHEN CAST(0.5927298547463423 AS INTEGER) THEN ((v0.c1)>=(vt0.c0)) WHEN ((v0.c0)/(v0.c1)) THEN ((((vt0.c1)AND(vt0.c0)))OR(v0.c2)) WHEN '' THEN CAST(0.9395389578949783 AS BLOB) ELSE (NULL IN ()) END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((~ ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((~ ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((~ ((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (((rt0.c1) ISNULL))));
SELECT * FROM rt0, v0 WHERE (((((((((((v0.c2) IS FALSE))AND(((((v0.c2)OR(rt0.c1)))OR(rt0.c0)))))AND(CASE rt0.c2  WHEN v0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)))OR(((rt0.c1)&(v0.c0)))))AND((v0.c2 IN (x'', v0.c0))))) ORDER BY ((((rt0.c2)AND((rt0.c0 IN ()))))OR('944067824')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c2) IS FALSE))AND(((((v0.c2)OR(rt0.c1)))OR(rt0.c0)))))AND(CASE rt0.c2  WHEN v0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)))OR(((rt0.c1)&(v0.c0)))))AND((v0.c2 IN (x'', v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2)AND((rt0.c0 IN ()))))OR('944067824')) ASC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((((((((((v0.c2) IS FALSE))AND(((((v0.c2)OR(rt0.c1)))OR(rt0.c0)))))AND(CASE rt0.c2  WHEN v0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)))OR(((rt0.c1)&(v0.c0)))))AND((v0.c2 IN (x'', v0.c0))))) ORDER BY ((((rt0.c2)AND((rt0.c0 IN ()))))OR('944067824')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c2) IS FALSE))AND(((((v0.c2)OR(rt0.c1)))OR(rt0.c0)))))AND(CASE rt0.c2  WHEN v0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)))OR(((rt0.c1)&(v0.c0)))))AND((v0.c2 IN (x'', v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2)AND((rt0.c0 IN ()))))OR('944067824')) ASC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((((((((((v0.c2) IS FALSE))AND(((((v0.c2)OR(rt0.c1)))OR(rt0.c0)))))AND(CASE rt0.c2  WHEN v0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)))OR(((rt0.c1)&(v0.c0)))))AND((v0.c2 IN (x'', v0.c0))))) ORDER BY ((((rt0.c2)AND((rt0.c0 IN ()))))OR('944067824')) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0, vt0 WHERE ((~ (v0.c2))) ORDER BY highlight((rt0.c2 IN ()), (NOT (v0.c2)), ((rt0.c0)<(rt0.c1)), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE v0.c1 END) DESC;
SELECT SUM(count) FROM (SELECT (((~ (v0.c2))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY highlight((rt0.c2 IN ()), (NOT (v0.c2)), ((rt0.c0)<(rt0.c1)), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE v0.c1 END) DESC);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((~ (v0.c2))) ORDER BY highlight((rt0.c2 IN ()), (NOT (v0.c2)), ((rt0.c0)<(rt0.c1)), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE v0.c1 END) DESC;
SELECT SUM(count) FROM (SELECT (((~ (v0.c2))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY highlight((rt0.c2 IN ()), (NOT (v0.c2)), ((rt0.c0)<(rt0.c1)), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE v0.c1 END) DESC);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((~ (v0.c2))) ORDER BY highlight((rt0.c2 IN ()), (NOT (v0.c2)), ((rt0.c0)<(rt0.c1)), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE v0.c1 END) DESC;
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((vt0.c0)>>(vt0.c1)))IS((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c1)))IS((v0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((vt0.c0)>>(vt0.c1)))IS((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c1)))IS((v0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((vt0.c0)>>(vt0.c1)))IS((v0.c2 IN ()))));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ('-2096591949') ORDER BY rt0.c2, ((((v0.c1)<(v0.c2))) NOT NULL) DESC, (('652489168')>=(((x'') ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-2096591949') IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY rt0.c2, ((((v0.c1)<(v0.c2))) NOT NULL) DESC, (('652489168')>=(((x'') ISNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ('-2096591949') ORDER BY rt0.c2, ((((v0.c1)<(v0.c2))) NOT NULL) DESC, (('652489168')>=(((x'') ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-2096591949') IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY rt0.c2, ((((v0.c1)<(v0.c2))) NOT NULL) DESC, (('652489168')>=(((x'') ISNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ('-2096591949') ORDER BY rt0.c2, ((((v0.c1)<(v0.c2))) NOT NULL) DESC, (('652489168')>=(((x'') ISNULL)))  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (((v0.c1)LIKE(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c1)LIKE(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((v0.c1)LIKE(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c1)LIKE(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((v0.c1)LIKE(v0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN (((v0.c2, v0.c0, v0.c0)) BETWEEN ((-737892045, v0.c2, 0.8110991266444693)) AND ((x'', vt0.c0, vt0.c1))) THEN ((v0.c0)/(vt0.c0)) END) ORDER BY (CAST(v0.c2 AS NUMERIC) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c2, v0.c0, v0.c0)) BETWEEN ((-737892045, v0.c2, 0.8110991266444693)) AND ((x'', vt0.c0, vt0.c1))) THEN ((v0.c0)/(vt0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (CAST(v0.c2 AS NUMERIC) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN (((v0.c2, v0.c0, v0.c0)) BETWEEN ((-737892045, v0.c2, 0.8110991266444693)) AND ((x'', vt0.c0, vt0.c1))) THEN ((v0.c0)/(vt0.c0)) END) ORDER BY (CAST(v0.c2 AS NUMERIC) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c2, v0.c0, v0.c0)) BETWEEN ((-737892045, v0.c2, 0.8110991266444693)) AND ((x'', vt0.c0, vt0.c1))) THEN ((v0.c0)/(vt0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (CAST(v0.c2 AS NUMERIC) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN (((v0.c2, v0.c0, v0.c0)) BETWEEN ((-737892045, v0.c2, 0.8110991266444693)) AND ((x'', vt0.c0, vt0.c1))) THEN ((v0.c0)/(vt0.c0)) END) ORDER BY (CAST(v0.c2 AS NUMERIC) IN ())  NULLS LAST;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((CASE v0.c2  WHEN rt0.c1 THEN v0.c1 ELSE v0.c2 END)GLOB((NOT (rt0.c0)))) CROSS JOIN vt0 ON (((((rt0.c1))=((v0.c1)))) NOTNULL) WHERE (highlight(json_patch(v0.c2, vt0.c0), '1515613590', vt0.c1 COLLATE NOCASE, CAST('1469471203' AS INTEGER))) ORDER BY (+ (v0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((highlight(json_patch(v0.c2, vt0.c0), '1515613590', vt0.c1 COLLATE NOCASE, CAST('1469471203' AS INTEGER))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CASE v0.c2  WHEN rt0.c1 THEN v0.c1 ELSE v0.c2 END)GLOB((NOT (rt0.c0)))) CROSS JOIN vt0 ON (((((rt0.c1))==((v0.c1)))) NOTNULL) ORDER BY (+ (v0.c1 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((CASE v0.c2  WHEN rt0.c1 THEN v0.c1 ELSE v0.c2 END)GLOB((NOT (rt0.c0)))) CROSS JOIN vt0 ON (((((rt0.c1))=((v0.c1)))) NOTNULL) WHERE (highlight(json_patch(v0.c2, vt0.c0), '1515613590', vt0.c1 COLLATE NOCASE, CAST('1469471203' AS INTEGER))) ORDER BY (+ (v0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((highlight(json_patch(v0.c2, vt0.c0), '1515613590', vt0.c1 COLLATE NOCASE, CAST('1469471203' AS INTEGER))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CASE v0.c2  WHEN rt0.c1 THEN v0.c1 ELSE v0.c2 END)GLOB((NOT (rt0.c0)))) CROSS JOIN vt0 ON (((((rt0.c1))==((v0.c1)))) NOTNULL) ORDER BY (+ (v0.c1 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((CASE v0.c2  WHEN rt0.c1 THEN v0.c1 ELSE v0.c2 END)GLOB((NOT (rt0.c0)))) CROSS JOIN vt0 ON (((((rt0.c1))=((v0.c1)))) NOTNULL) WHERE (highlight(json_patch(v0.c2, vt0.c0), '1515613590', vt0.c1 COLLATE NOCASE, CAST('1469471203' AS INTEGER))) ORDER BY (+ (v0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((- (vt0.c1))) BETWEEN (((v0.c2)GLOB(v0.c0))) AND (v0.c0))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND ((((v0.c0) BETWEEN (v0.c2) AND (vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) BETWEEN (((v0.c2)GLOB(v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND ((((v0.c0) BETWEEN (v0.c2) AND (vt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((- (vt0.c1))) BETWEEN (((v0.c2)GLOB(v0.c0))) AND (v0.c0))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND ((((v0.c0) BETWEEN (v0.c2) AND (vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) BETWEEN (((v0.c2)GLOB(v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND ((((v0.c0) BETWEEN (v0.c2) AND (vt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((- (vt0.c1))) BETWEEN (((v0.c2)GLOB(v0.c0))) AND (v0.c0))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND ((((v0.c0) BETWEEN (v0.c2) AND (vt0.c1)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((~ (vt0.c1)) IN ()) WHERE (((CAST(rt0.c1 AS TEXT))>=(((rt0.c0) NOTNULL)))) ORDER BY ((((rt0.c2)/('-1567988119'))) IS TRUE)  NULLS LAST, ((((vt0.c0)OR(0.5099985964198646))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT))>=(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((~ (vt0.c1)) IN ()) ORDER BY ((((rt0.c2)/('-1567988119'))) IS TRUE)  NULLS LAST, ((((vt0.c0)OR(0.5099985964198646))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((~ (vt0.c1)) IN ()) WHERE (((CAST(rt0.c1 AS TEXT))>=(((rt0.c0) NOTNULL)))) ORDER BY ((((rt0.c2)/('-1567988119'))) IS TRUE)  NULLS LAST, ((((vt0.c0)OR(0.5099985964198646))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT))>=(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((~ (vt0.c1)) IN ()) ORDER BY ((((rt0.c2)/('-1567988119'))) IS TRUE)  NULLS LAST, ((((vt0.c0)OR(0.5099985964198646))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((~ (vt0.c1)) IN ()) WHERE (((CAST(rt0.c1 AS TEXT))>=(((rt0.c0) NOTNULL)))) ORDER BY ((((rt0.c2)/('-1567988119'))) IS TRUE)  NULLS LAST, ((((vt0.c0)OR(0.5099985964198646))) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c1, NULL, vt0.c0)))) AND (((vt0.c1)=(vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c0)<=(vt0.c1)) THEN vt0.c1 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ((((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c1, NULL, vt0.c0)))) AND (((vt0.c1)==(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c0)<=(vt0.c1)) THEN vt0.c1 COLLATE BINARY END ASC);
SELECT COUNT(*) FROM vt0 WHERE (((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c1, NULL, vt0.c0)))) AND (((vt0.c1)=(vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c0)<=(vt0.c1)) THEN vt0.c1 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ((((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c1, NULL, vt0.c0)))) AND (((vt0.c1)==(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c0)<=(vt0.c1)) THEN vt0.c1 COLLATE BINARY END ASC);
SELECT COUNT(*) FROM vt0 WHERE (((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c1, NULL, vt0.c0)))) AND (((vt0.c1)=(vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c0)<=(vt0.c1)) THEN vt0.c1 COLLATE BINARY END ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c1)*(rt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)*(rt0.c1)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c1)*(rt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)*(rt0.c1)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c1)*(rt0.c1)) AS BLOB) ASC;
SELECT ALL * FROM rt0, v0 CROSS JOIN vt0 ON ((((v0.c2)/(vt0.c0)))IS NOT((vt0.c0 IN ()))) WHERE (0.6243225621889132) ORDER BY GLOB((('-1507436770')<<(rt0.c2)), ((v0.c1)>(rt0.c1))) ASC  NULLS FIRST, rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.6243225621889132) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON ((((v0.c2)/(vt0.c0)))IS NOT((vt0.c0 IN ()))) ORDER BY GLOB((('-1507436770')<<(rt0.c2)), ((v0.c1)>(rt0.c1))) ASC  NULLS FIRST, rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt0, v0 CROSS JOIN vt0 ON ((((v0.c2)/(vt0.c0)))IS NOT((vt0.c0 IN ()))) WHERE (0.6243225621889132) ORDER BY GLOB((('-1507436770')<<(rt0.c2)), ((v0.c1)>(rt0.c1))) ASC  NULLS FIRST, rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.6243225621889132) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON ((((v0.c2)/(vt0.c0)))IS NOT((vt0.c0 IN ()))) ORDER BY GLOB((('-1507436770')<<(rt0.c2)), ((v0.c1)>(rt0.c1))) ASC  NULLS FIRST, rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt0, v0 CROSS JOIN vt0 ON ((((v0.c2)/(vt0.c0)))IS NOT((vt0.c0 IN ()))) WHERE (0.6243225621889132) ORDER BY GLOB((('-1507436770')<<(rt0.c2)), ((v0.c1)>(rt0.c1))) ASC  NULLS FIRST, rt0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (vt0.c0) AND (v0.c2)))) AND ((LENGTH('-2096591949'))))) ORDER BY (((v0.c1)) BETWEEN ((((vt0.c0)+(rt0.c2)))) AND ((((v0.c0) NOTNULL)))) ASC, ((((CAST(v0.c0 AS INTEGER))OR(v0.c0 COLLATE NOCASE)))OR(vt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (vt0.c0) AND (v0.c2)))) AND ((LENGTH('-2096591949'))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((v0.c1)) BETWEEN ((((vt0.c0)+(rt0.c2)))) AND ((((v0.c0) NOTNULL)))) ASC, ((((CAST(v0.c0 AS INTEGER))OR(v0.c0 COLLATE NOCASE)))OR(vt0.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (vt0.c0) AND (v0.c2)))) AND ((LENGTH('-2096591949'))))) ORDER BY (((v0.c1)) BETWEEN ((((vt0.c0)+(rt0.c2)))) AND ((((v0.c0) NOTNULL)))) ASC, ((((CAST(v0.c0 AS INTEGER))OR(v0.c0 COLLATE NOCASE)))OR(vt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (vt0.c0) AND (v0.c2)))) AND ((LENGTH('-2096591949'))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((v0.c1)) BETWEEN ((((vt0.c0)+(rt0.c2)))) AND ((((v0.c0) NOTNULL)))) ASC, ((((CAST(v0.c0 AS INTEGER))OR(v0.c0 COLLATE NOCASE)))OR(vt0.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (vt0.c0) AND (v0.c2)))) AND ((LENGTH('-2096591949'))))) ORDER BY (((v0.c1)) BETWEEN ((((vt0.c0)+(rt0.c2)))) AND ((((v0.c0) NOTNULL)))) ASC, ((((CAST(v0.c0 AS INTEGER))OR(v0.c0 COLLATE NOCASE)))OR(vt0.c1 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1) IS TRUE)  WHEN CAST(vt0.c1 AS TEXT) THEN LIKE(vt0.c0, vt0.c1, '*') WHEN 0.4828301106455759 THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN LOWER(DISTINCT vt0.c1) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END) ORDER BY '姣2p4⏍' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) IS TRUE)  WHEN CAST(vt0.c1 AS TEXT) THEN LIKE(vt0.c0, vt0.c1, '*') WHEN 0.4828301106455759 THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN LOWER(DISTINCT vt0.c1) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY '姣2p4⏍' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1) IS TRUE)  WHEN CAST(vt0.c1 AS TEXT) THEN LIKE(vt0.c0, vt0.c1, '*') WHEN 0.4828301106455759 THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN LOWER(DISTINCT vt0.c1) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END) ORDER BY '姣2p4⏍' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) IS TRUE)  WHEN CAST(vt0.c1 AS TEXT) THEN LIKE(vt0.c0, vt0.c1, '*') WHEN 0.4828301106455759 THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN LOWER(DISTINCT vt0.c1) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY '姣2p4⏍' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1) IS TRUE)  WHEN CAST(vt0.c1 AS TEXT) THEN LIKE(vt0.c0, vt0.c1, '*') WHEN 0.4828301106455759 THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN LOWER(DISTINCT vt0.c1) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END) ORDER BY '姣2p4⏍' ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((((((v0.c1) NOT BETWEEN (v0.c1) AND (rt0.c1)))OR((((v0.c0))<>((rt0.c1))))))AND(x'f158b117' COLLATE NOCASE)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((((((v0.c1) NOT BETWEEN (v0.c1) AND (rt0.c1)))OR((((v0.c0))!=((rt0.c1))))))AND(x'f158b117' COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((((((v0.c1) NOT BETWEEN (v0.c1) AND (rt0.c1)))OR((((v0.c0))<>((rt0.c1))))))AND(x'f158b117' COLLATE NOCASE)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((((((v0.c1) NOT BETWEEN (v0.c1) AND (rt0.c1)))OR((((v0.c0))!=((rt0.c1))))))AND(x'f158b117' COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((((((v0.c1) NOT BETWEEN (v0.c1) AND (rt0.c1)))OR((((v0.c0))<>((rt0.c1))))))AND(x'f158b117' COLLATE NOCASE)) WHERE (x'');
SELECT * FROM rt0 NOT INDEXED WHERE (CASE ((rt0.c0) IS TRUE)  WHEN rt0.c2 THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) IS TRUE)  WHEN rt0.c2 THEN rt0.c0 END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 NOT INDEXED WHERE (CASE ((rt0.c0) IS TRUE)  WHEN rt0.c2 THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) IS TRUE)  WHEN rt0.c2 THEN rt0.c0 END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 NOT INDEXED WHERE (CASE ((rt0.c0) IS TRUE)  WHEN rt0.c2 THEN rt0.c0 END);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c0))=((vt0.c0))) COLLATE NOCASE COLLATE BINARY) ORDER BY ((CAST(v0.c2 AS TEXT)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0))==((vt0.c0))) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(v0.c2 AS TEXT)) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c0))=((vt0.c0))) COLLATE NOCASE COLLATE BINARY) ORDER BY ((CAST(v0.c2 AS TEXT)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0))==((vt0.c0))) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(v0.c2 AS TEXT)) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c0))=((vt0.c0))) COLLATE NOCASE COLLATE BINARY) ORDER BY ((CAST(v0.c2 AS TEXT)) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN v0.c1 THEN ((v0.c2)<<(v0.c0)) ELSE STRFTIME(v0.c2, v0.c2, v0.c1) END) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c0 AS INTEGER)  WHEN v0.c1 THEN ((v0.c2)<<(v0.c0)) ELSE STRFTIME(v0.c2, v0.c2, v0.c1) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN v0.c1 THEN ((v0.c2)<<(v0.c0)) ELSE STRFTIME(v0.c2, v0.c2, v0.c1) END) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c0 AS INTEGER)  WHEN v0.c1 THEN ((v0.c2)<<(v0.c0)) ELSE STRFTIME(v0.c2, v0.c2, v0.c1) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN v0.c1 THEN ((v0.c2)<<(v0.c0)) ELSE STRFTIME(v0.c2, v0.c2, v0.c1) END) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ('865619437');
SELECT SUM(count) FROM (SELECT (('865619437') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('865619437');
SELECT SUM(count) FROM (SELECT (('865619437') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('865619437');
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (((((((vt0.c1))>((v0.c2))))AND(v0.c0)))AND(((v0.c1) NOT NULL))) WHERE (((COALESCE(DISTINCT v0.c1, vt0.c0)) BETWEEN ((~ (v0.c0))) AND (((((((((v0.c2)AND(vt0.c1)))OR(v0.c1)))AND(v0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT v0.c1, vt0.c0)) BETWEEN ((~ (v0.c0))) AND (((((((((v0.c2)AND(vt0.c1)))OR(v0.c1)))AND(v0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((((((vt0.c1))>((v0.c2))))AND(v0.c0)))AND(((v0.c1) NOT NULL))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (((((((vt0.c1))>((v0.c2))))AND(v0.c0)))AND(((v0.c1) NOT NULL))) WHERE (((COALESCE(DISTINCT v0.c1, vt0.c0)) BETWEEN ((~ (v0.c0))) AND (((((((((v0.c2)AND(vt0.c1)))OR(v0.c1)))AND(v0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT v0.c1, vt0.c0)) BETWEEN ((~ (v0.c0))) AND (((((((((v0.c2)AND(vt0.c1)))OR(v0.c1)))AND(v0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((((((vt0.c1))>((v0.c2))))AND(v0.c0)))AND(((v0.c1) NOT NULL))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (((((((vt0.c1))>((v0.c2))))AND(v0.c0)))AND(((v0.c1) NOT NULL))) WHERE (((COALESCE(DISTINCT v0.c1, vt0.c0)) BETWEEN ((~ (v0.c0))) AND (((((((((v0.c2)AND(vt0.c1)))OR(v0.c1)))AND(v0.c1)))AND(vt0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)OR(CAST(rt0.c0 AS BLOB))))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY CASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c0)&(rt0.c2)) ELSE ((rt0.c2) ISNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE RTRIM)OR(CAST(rt0.c0 AS BLOB))))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c0)&(rt0.c2)) ELSE ((rt0.c2) ISNULL) END  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)OR(CAST(rt0.c0 AS BLOB))))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY CASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c0)&(rt0.c2)) ELSE ((rt0.c2) ISNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE RTRIM)OR(CAST(rt0.c0 AS BLOB))))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c0)&(rt0.c2)) ELSE ((rt0.c2) ISNULL) END  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)OR(CAST(rt0.c0 AS BLOB))))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY CASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c0)&(rt0.c2)) ELSE ((rt0.c2) ISNULL) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (ABS(v0.c0)) ORDER BY (CASE vt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE v0.c1 END IN ()) DESC, ((CAST(v0.c1 AS BLOB)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((ABS(v0.c0)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (CASE vt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE v0.c1 END IN ()) DESC, ((CAST(v0.c1 AS BLOB)) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (ABS(v0.c0)) ORDER BY (CASE vt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE v0.c1 END IN ()) DESC, ((CAST(v0.c1 AS BLOB)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((ABS(v0.c0)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (CASE vt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE v0.c1 END IN ()) DESC, ((CAST(v0.c1 AS BLOB)) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (ABS(v0.c0)) ORDER BY (CASE vt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE v0.c1 END IN ()) DESC, ((CAST(v0.c1 AS BLOB)) NOT NULL) DESC;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c2) IS TRUE)) BETWEEN (NULL) AND (((('')) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))))) LEFT OUTER JOIN rt0 ON TRIM(QUOTE(vt0.c1)) WHERE (((((vt0.c1)/(v0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)/(v0.c2))) NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c2) IS TRUE)) BETWEEN (NULL) AND (((('')) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))))) LEFT OUTER JOIN rt0 ON TRIM(QUOTE(vt0.c1)));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c2) IS TRUE)) BETWEEN (NULL) AND (((('')) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))))) LEFT OUTER JOIN rt0 ON TRIM(QUOTE(vt0.c1)) WHERE (((((vt0.c1)/(v0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)/(v0.c2))) NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c2) IS TRUE)) BETWEEN (NULL) AND (((('')) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))))) LEFT OUTER JOIN rt0 ON TRIM(QUOTE(vt0.c1)));
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN v0 WHERE (LOWER(((((((((v0.c1)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LOWER(((((((((v0.c1)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN v0 WHERE (LOWER(((((((((v0.c1)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LOWER(((((((((v0.c1)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN v0 WHERE (LOWER(((((((((v0.c1)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE (((x'148e')OR(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((x'148e')OR(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE (((x'148e')OR(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((x'148e')OR(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE (((x'148e')OR(((rt0.c2) IS TRUE))));
SELECT * FROM v0, rt0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (v0.c0);
SELECT * FROM rt0, v0, vt0 WHERE ((((rt0.c0)==(rt0.c1)) IN ((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)=(rt0.c1)) IN ((v0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE ((((rt0.c0)==(rt0.c1)) IN ((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)=(rt0.c1)) IN ((v0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE ((((rt0.c0)==(rt0.c1)) IN ((v0.c1 IN ()))));
SELECT * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY rt0.c2;
SELECT ALL * FROM rt0, vt0 CROSS JOIN v0 ON ((((v0.c2) IS FALSE))*((~ (v0.c1)))) WHERE ((((((v0.c1))>=((rt0.c1)))) BETWEEN (((NULL)IS(rt0.c2))) AND (CASE v0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1))>=((rt0.c1)))) BETWEEN (((NULL)IS(rt0.c2))) AND (CASE v0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON ((((v0.c2) IS FALSE))*((~ (v0.c1)))));
SELECT ALL * FROM rt0, vt0 CROSS JOIN v0 ON ((((v0.c2) IS FALSE))*((~ (v0.c1)))) WHERE ((((((v0.c1))>=((rt0.c1)))) BETWEEN (((NULL)IS(rt0.c2))) AND (CASE v0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1))>=((rt0.c1)))) BETWEEN (((NULL)IS(rt0.c2))) AND (CASE v0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON ((((v0.c2) IS FALSE))*((~ (v0.c1)))));
SELECT ALL * FROM rt0, vt0 CROSS JOIN v0 ON ((((v0.c2) IS FALSE))*((~ (v0.c1)))) WHERE ((((((v0.c1))>=((rt0.c1)))) BETWEEN (((NULL)IS(rt0.c2))) AND (CASE v0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))) AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))) AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)*(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)*(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)*(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)*(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)*(rt0.c1)) AS BLOB));
SELECT * FROM v0, vt0 WHERE (((vt0.c0)>=((((v0.c0))>((v0.c1)))))) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((vt0.c0))==((x'')))) AND (v0.c1 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>=((((v0.c0))>((v0.c1)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((vt0.c0))=((x'')))) AND (v0.c1 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((vt0.c0)>=((((v0.c0))>((v0.c1)))))) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((vt0.c0))==((x'')))) AND (v0.c1 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>=((((v0.c0))>((v0.c1)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((vt0.c0))=((x'')))) AND (v0.c1 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((vt0.c0)>=((((v0.c0))>((v0.c1)))))) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((vt0.c0))==((x'')))) AND (v0.c1 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 NATURAL JOIN rt0 WHERE (LOWER(((rt0.c0)<(rt0.c2)))) ORDER BY LIKE(((((v0.c1)AND(vt0.c1)))AND(v0.c2)), CAST(v0.c0 AS BLOB), 'ᚸ') ASC  NULLS FIRST, (~ ((~ (v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c0)<(rt0.c2)))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0 ORDER BY LIKE(((((v0.c1)AND(vt0.c1)))AND(v0.c2)), CAST(v0.c0 AS BLOB), 'ᚸ') ASC  NULLS FIRST, (~ ((~ (v0.c1)))) DESC);
SELECT ALL * FROM vt0, v0 NATURAL JOIN rt0 WHERE (LOWER(((rt0.c0)<(rt0.c2)))) ORDER BY LIKE(((((v0.c1)AND(vt0.c1)))AND(v0.c2)), CAST(v0.c0 AS BLOB), 'ᚸ') ASC  NULLS FIRST, (~ ((~ (v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c0)<(rt0.c2)))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0 ORDER BY LIKE(((((v0.c1)AND(vt0.c1)))AND(v0.c2)), CAST(v0.c0 AS BLOB), 'ᚸ') ASC  NULLS FIRST, (~ ((~ (v0.c1)))) DESC);
SELECT ALL * FROM vt0, v0 NATURAL JOIN rt0 WHERE (LOWER(((rt0.c0)<(rt0.c2)))) ORDER BY LIKE(((((v0.c1)AND(vt0.c1)))AND(v0.c2)), CAST(v0.c0 AS BLOB), 'ᚸ') ASC  NULLS FIRST, (~ ((~ (v0.c1)))) DESC;
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((v0.c2 IN ()) IN (((rt0.c0) BETWEEN (v0.c1) AND (v0.c0)))) RIGHT OUTER JOIN rt0 ON (CASE v0.c0  WHEN rt0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN rt0.c2 THEN '1343916333' ELSE v0.c1 END IN ()) WHERE (CASE CAST(rt0.c1 AS TEXT)  WHEN ((rt0.c0)AND(vt0.c1)) THEN ((rt0.c2)!=(rt0.c2)) WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN HEX(v0.c2) WHEN (vt0.c0 IN ()) THEN rt0.c1 COLLATE BINARY ELSE ((((rt0.c1)OR(v0.c0)))AND(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS TEXT)  WHEN ((rt0.c0)AND(vt0.c1)) THEN ((rt0.c2)!=(rt0.c2)) WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN HEX(v0.c2) WHEN (vt0.c0 IN ()) THEN rt0.c1 COLLATE BINARY ELSE ((((rt0.c1)OR(v0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((v0.c2 IN ()) IN (((rt0.c0) BETWEEN (v0.c1) AND (v0.c0)))) RIGHT OUTER JOIN rt0 ON (CASE v0.c0  WHEN rt0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN rt0.c2 THEN '1343916333' ELSE v0.c1 END IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((v0.c2 IN ()) IN (((rt0.c0) BETWEEN (v0.c1) AND (v0.c0)))) RIGHT OUTER JOIN rt0 ON (CASE v0.c0  WHEN rt0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN rt0.c2 THEN '1343916333' ELSE v0.c1 END IN ()) WHERE (CASE CAST(rt0.c1 AS TEXT)  WHEN ((rt0.c0)AND(vt0.c1)) THEN ((rt0.c2)!=(rt0.c2)) WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN HEX(v0.c2) WHEN (vt0.c0 IN ()) THEN rt0.c1 COLLATE BINARY ELSE ((((rt0.c1)OR(v0.c0)))AND(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS TEXT)  WHEN ((rt0.c0)AND(vt0.c1)) THEN ((rt0.c2)!=(rt0.c2)) WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN HEX(v0.c2) WHEN (vt0.c0 IN ()) THEN rt0.c1 COLLATE BINARY ELSE ((((rt0.c1)OR(v0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((v0.c2 IN ()) IN (((rt0.c0) BETWEEN (v0.c1) AND (v0.c0)))) RIGHT OUTER JOIN rt0 ON (CASE v0.c0  WHEN rt0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN rt0.c2 THEN '1343916333' ELSE v0.c1 END IN ()));
SELECT * FROM v0, rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))AND(v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))AND(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))AND(v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))AND(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))AND(v0.c0))) ISNULL));
SELECT ALL * FROM v0 WHERE (v0.c1) ORDER BY CASE ((v0.c0)>=(v0.c2))  WHEN v0.c1 THEN CASE WHEN v0.c1 THEN NULL WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END WHEN IFNULL(0.8973749005801589, v0.c1) THEN v0.c1 WHEN 0.16219635674995436 COLLATE BINARY THEN ((v0.c1) IS TRUE) ELSE ((((((((((((v0.c2)AND(v0.c1)))AND(v0.c2)))OR(v0.c0)))AND(v0.c0)))OR(v0.c1)))AND(v0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0)>=(v0.c2))  WHEN v0.c1 THEN CASE WHEN v0.c1 THEN NULL WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END WHEN IFNULL(0.8973749005801589, v0.c1) THEN v0.c1 WHEN 0.16219635674995436 COLLATE BINARY THEN ((v0.c1) IS TRUE) ELSE ((((((((((((v0.c2)AND(v0.c1)))AND(v0.c2)))OR(v0.c0)))AND(v0.c0)))OR(v0.c1)))AND(v0.c1)) END ASC);
SELECT ALL * FROM v0 WHERE (v0.c1) ORDER BY CASE ((v0.c0)>=(v0.c2))  WHEN v0.c1 THEN CASE WHEN v0.c1 THEN NULL WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END WHEN IFNULL(0.8973749005801589, v0.c1) THEN v0.c1 WHEN 0.16219635674995436 COLLATE BINARY THEN ((v0.c1) IS TRUE) ELSE ((((((((((((v0.c2)AND(v0.c1)))AND(v0.c2)))OR(v0.c0)))AND(v0.c0)))OR(v0.c1)))AND(v0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0)>=(v0.c2))  WHEN v0.c1 THEN CASE WHEN v0.c1 THEN NULL WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END WHEN IFNULL(0.8973749005801589, v0.c1) THEN v0.c1 WHEN 0.16219635674995436 COLLATE BINARY THEN ((v0.c1) IS TRUE) ELSE ((((((((((((v0.c2)AND(v0.c1)))AND(v0.c2)))OR(v0.c0)))AND(v0.c0)))OR(v0.c1)))AND(v0.c1)) END ASC);
SELECT ALL * FROM v0 WHERE (v0.c1) ORDER BY CASE ((v0.c0)>=(v0.c2))  WHEN v0.c1 THEN CASE WHEN v0.c1 THEN NULL WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END WHEN IFNULL(0.8973749005801589, v0.c1) THEN v0.c1 WHEN 0.16219635674995436 COLLATE BINARY THEN ((v0.c1) IS TRUE) ELSE ((((((((((((v0.c2)AND(v0.c1)))AND(v0.c2)))OR(v0.c0)))AND(v0.c0)))OR(v0.c1)))AND(v0.c1)) END ASC;
SELECT * FROM rt0 WHERE (((LIKELIHOOD(rt0.c1, 0.3008699886315115))OR(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0))))) ORDER BY (x'' IN ()) ASC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND ('m'))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt0.c1, 0.3008699886315115))OR(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (x'' IN ()) ASC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND ('m'))) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((LIKELIHOOD(rt0.c1, 0.3008699886315115))OR(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0))))) ORDER BY (x'' IN ()) ASC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND ('m'))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt0.c1, 0.3008699886315115))OR(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (x'' IN ()) ASC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND ('m'))) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((LIKELIHOOD(rt0.c1, 0.3008699886315115))OR(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0))))) ORDER BY (x'' IN ()) ASC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND ('m'))) IS FALSE) DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (CAST((((v0.c0))>=((3103443))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0))>=((3103443))) AS REAL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST((((v0.c0))>=((3103443))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0))>=((3103443))) AS REAL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST((((v0.c0))>=((3103443))) AS REAL));
SELECT * FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((NULLIF('-1370580641', v0.c1) IN (DATETIME(rt0.c1, v0.c0, v0.c0, v0.c1, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NULLIF('-1370580641', v0.c1) IN (DATETIME(rt0.c1, v0.c0, v0.c0, v0.c1, rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((NULLIF('-1370580641', v0.c1) IN (DATETIME(rt0.c1, v0.c0, v0.c0, v0.c1, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NULLIF('-1370580641', v0.c1) IN (DATETIME(rt0.c1, v0.c0, v0.c0, v0.c1, rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((NULLIF('-1370580641', v0.c1) IN (DATETIME(rt0.c1, v0.c0, v0.c0, v0.c1, rt0.c2))));
SELECT ALL * FROM vt0, rt0 WHERE (INSTR(((vt0.c0) IS FALSE), ((vt0.c1)<(rt0.c0)))) ORDER BY ((((STRFTIME(rt0.c1, rt0.c0, rt0.c1))OR(QUOTE(rt0.c0))))AND('厧cl\Y04')) ASC, ((CAST(rt0.c0 AS NUMERIC))AND((NOT (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((INSTR(((vt0.c0) IS FALSE), ((vt0.c1)<(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((STRFTIME(rt0.c1, rt0.c0, rt0.c1))OR(QUOTE(rt0.c0))))AND('厧cl\Y04')) ASC, ((CAST(rt0.c0 AS NUMERIC))AND((NOT (vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (INSTR(((vt0.c0) IS FALSE), ((vt0.c1)<(rt0.c0)))) ORDER BY ((((STRFTIME(rt0.c1, rt0.c0, rt0.c1))OR(QUOTE(rt0.c0))))AND('厧cl\Y04')) ASC, ((CAST(rt0.c0 AS NUMERIC))AND((NOT (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((INSTR(((vt0.c0) IS FALSE), ((vt0.c1)<(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((STRFTIME(rt0.c1, rt0.c0, rt0.c1))OR(QUOTE(rt0.c0))))AND('厧cl\Y04')) ASC, ((CAST(rt0.c0 AS NUMERIC))AND((NOT (vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (INSTR(((vt0.c0) IS FALSE), ((vt0.c1)<(rt0.c0)))) ORDER BY ((((STRFTIME(rt0.c1, rt0.c0, rt0.c1))OR(QUOTE(rt0.c0))))AND('厧cl\Y04')) ASC, ((CAST(rt0.c0 AS NUMERIC))AND((NOT (vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT NULL)) ORDER BY rt0.c2, ((((((((((rt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c1))) IS FALSE) DESC  NULLS FIRST, (((((((((+ (rt0.c1)))OR(0.0)))AND(((rt0.c1)>(rt0.c0)))))AND(LOWER(NULL))))OR(((0.32339272151613097)||(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2, ((((((((((rt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c1))) IS FALSE) DESC  NULLS FIRST, (((((((((+ (rt0.c1)))OR(0.0)))AND(((rt0.c1)>(rt0.c0)))))AND(LOWER(NULL))))OR(((0.32339272151613097)||(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT NULL)) ORDER BY rt0.c2, ((((((((((rt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c1))) IS FALSE) DESC  NULLS FIRST, (((((((((+ (rt0.c1)))OR(0.0)))AND(((rt0.c1)>(rt0.c0)))))AND(LOWER(NULL))))OR(((0.32339272151613097)||(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2, ((((((((((rt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c1))) IS FALSE) DESC  NULLS FIRST, (((((((((+ (rt0.c1)))OR(0.0)))AND(((rt0.c1)>(rt0.c0)))))AND(LOWER(NULL))))OR(((0.32339272151613097)||(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT NULL)) ORDER BY rt0.c2, ((((((((((rt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c1))) IS FALSE) DESC  NULLS FIRST, (((((((((+ (rt0.c1)))OR(0.0)))AND(((rt0.c1)>(rt0.c0)))))AND(LOWER(NULL))))OR(((0.32339272151613097)||(rt0.c2)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((((((((vt0.c0)&(v0.c0)))AND(CAST(vt0.c0 AS REAL))))OR(((vt0.c0)/(v0.c1)))))AND(v0.c0)))OR(((v0.c1) IS FALSE))) FULL OUTER JOIN v0 ON CASE (((x'')) BETWEEN ((rt0.c1)) AND ((v0.c0)))  WHEN ((rt0.c1) BETWEEN (NULL) AND (vt0.c1)) THEN ((v0.c0) IS FALSE) ELSE ((((((((v0.c0)AND(v0.c1)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)) END WHERE ('2005246009');
SELECT SUM(count) FROM (SELECT ALL (('2005246009') IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((((((((vt0.c0)&(v0.c0)))AND(CAST(vt0.c0 AS REAL))))OR(((vt0.c0)/(v0.c1)))))AND(v0.c0)))OR(((v0.c1) IS FALSE))) FULL OUTER JOIN v0 ON CASE (((x'')) BETWEEN ((rt0.c1)) AND ((v0.c0)))  WHEN ((rt0.c1) BETWEEN (NULL) AND (vt0.c1)) THEN ((v0.c0) IS FALSE) ELSE ((((((((v0.c0)AND(v0.c1)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)) END);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((((((((vt0.c0)&(v0.c0)))AND(CAST(vt0.c0 AS REAL))))OR(((vt0.c0)/(v0.c1)))))AND(v0.c0)))OR(((v0.c1) IS FALSE))) FULL OUTER JOIN v0 ON CASE (((x'')) BETWEEN ((rt0.c1)) AND ((v0.c0)))  WHEN ((rt0.c1) BETWEEN (NULL) AND (vt0.c1)) THEN ((v0.c0) IS FALSE) ELSE ((((((((v0.c0)AND(v0.c1)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)) END WHERE ('2005246009');
SELECT SUM(count) FROM (SELECT ALL (('2005246009') IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((((((((vt0.c0)&(v0.c0)))AND(CAST(vt0.c0 AS REAL))))OR(((vt0.c0)/(v0.c1)))))AND(v0.c0)))OR(((v0.c1) IS FALSE))) FULL OUTER JOIN v0 ON CASE (((x'')) BETWEEN ((rt0.c1)) AND ((v0.c0)))  WHEN ((rt0.c1) BETWEEN (NULL) AND (vt0.c1)) THEN ((v0.c0) IS FALSE) ELSE ((((((((v0.c0)AND(v0.c1)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)) END);
SELECT * FROM rt0, vt0, v0 WHERE (CASE LIKELIHOOD(rt0.c0, 0.1310857626498615)  WHEN ((vt0.c0) NOTNULL) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELIHOOD(rt0.c0, 0.1310857626498615)  WHEN ((vt0.c0) NOTNULL) THEN rt0.c2 END) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (CASE LIKELIHOOD(rt0.c0, 0.1310857626498615)  WHEN ((vt0.c0) NOTNULL) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELIHOOD(rt0.c0, 0.1310857626498615)  WHEN ((vt0.c0) NOTNULL) THEN rt0.c2 END) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (CASE LIKELIHOOD(rt0.c0, 0.1310857626498615)  WHEN ((vt0.c0) NOTNULL) THEN rt0.c2 END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((v0.c1 COLLATE RTRIM) NOT BETWEEN ((((rt0.c1))<=((v0.c2)))) AND ((+ (rt0.c1))))) ORDER BY CASE WHEN ((((((((1.438036746E9)AND(v0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(v0.c2)) THEN (NOT (vt0.c1)) WHEN CASE WHEN NULL THEN x'b8fc' ELSE vt0.c1 END THEN (v0.c0 IN ()) WHEN x'fc4a5118' THEN ((((v0.c2)AND(v0.c0)))OR(rt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE RTRIM) NOT BETWEEN ((((rt0.c1))<=((v0.c2)))) AND ((+ (rt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE WHEN ((((((((1.438036746E9)AND(v0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(v0.c2)) THEN (NOT (vt0.c1)) WHEN CASE WHEN NULL THEN x'b8fc' ELSE vt0.c1 END THEN (v0.c0 IN ()) WHEN x'fc4a5118' THEN ((((v0.c2)AND(v0.c0)))OR(rt0.c1)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((v0.c1 COLLATE RTRIM) NOT BETWEEN ((((rt0.c1))<=((v0.c2)))) AND ((+ (rt0.c1))))) ORDER BY CASE WHEN ((((((((1.438036746E9)AND(v0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(v0.c2)) THEN (NOT (vt0.c1)) WHEN CASE WHEN NULL THEN x'b8fc' ELSE vt0.c1 END THEN (v0.c0 IN ()) WHEN x'fc4a5118' THEN ((((v0.c2)AND(v0.c0)))OR(rt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE RTRIM) NOT BETWEEN ((((rt0.c1))<=((v0.c2)))) AND ((+ (rt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE WHEN ((((((((1.438036746E9)AND(v0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(v0.c2)) THEN (NOT (vt0.c1)) WHEN CASE WHEN NULL THEN x'b8fc' ELSE vt0.c1 END THEN (v0.c0 IN ()) WHEN x'fc4a5118' THEN ((((v0.c2)AND(v0.c0)))OR(rt0.c1)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((v0.c1 COLLATE RTRIM) NOT BETWEEN ((((rt0.c1))<=((v0.c2)))) AND ((+ (rt0.c1))))) ORDER BY CASE WHEN ((((((((1.438036746E9)AND(v0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(v0.c2)) THEN (NOT (vt0.c1)) WHEN CASE WHEN NULL THEN x'b8fc' ELSE vt0.c1 END THEN (v0.c0 IN ()) WHEN x'fc4a5118' THEN ((((v0.c2)AND(v0.c0)))OR(rt0.c1)) END DESC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (COALESCE((('') NOT BETWEEN (rt0.c1) AND ('-258648338')), CAST(rt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((('') NOT BETWEEN (rt0.c1) AND ('-258648338')), CAST(rt0.c2 AS INTEGER))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (COALESCE((('') NOT BETWEEN (rt0.c1) AND ('-258648338')), CAST(rt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((('') NOT BETWEEN (rt0.c1) AND ('-258648338')), CAST(rt0.c2 AS INTEGER))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (COALESCE((('') NOT BETWEEN (rt0.c1) AND ('-258648338')), CAST(rt0.c2 AS INTEGER)));
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN TRIM(DISTINCT rt0.c2) THEN CAST(rt0.c1 AS TEXT) ELSE ((v0.c2)<<(rt0.c0)) END) ORDER BY ((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(DISTINCT rt0.c2) THEN CAST(rt0.c1 AS TEXT) ELSE ((v0.c2)<<(rt0.c0)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN TRIM(DISTINCT rt0.c2) THEN CAST(rt0.c1 AS TEXT) ELSE ((v0.c2)<<(rt0.c0)) END) ORDER BY ((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(DISTINCT rt0.c2) THEN CAST(rt0.c1 AS TEXT) ELSE ((v0.c2)<<(rt0.c0)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN TRIM(DISTINCT rt0.c2) THEN CAST(rt0.c1 AS TEXT) ELSE ((v0.c2)<<(rt0.c0)) END) ORDER BY ((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((v0.c2 IN (v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((v0.c2 IN (v0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((v0.c2 IN (v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((v0.c2 IN (v0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((v0.c2 IN (v0.c1)) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1) IS TRUE) IN ())) ORDER BY (~ (NULLIF(DISTINCT v0.c0, v0.c1)));
SELECT SUM(count) FROM (SELECT (((((v0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM v0 ORDER BY (~ (NULLIF(DISTINCT v0.c0, v0.c1))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1) IS TRUE) IN ())) ORDER BY (~ (NULLIF(DISTINCT v0.c0, v0.c1)));
SELECT SUM(count) FROM (SELECT (((((v0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM v0 ORDER BY (~ (NULLIF(DISTINCT v0.c0, v0.c1))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1) IS TRUE) IN ())) ORDER BY (~ (NULLIF(DISTINCT v0.c0, v0.c1)));
SELECT ALL * FROM vt0, v0 WHERE (9.44067824E8) ORDER BY ((v0.c2 COLLATE RTRIM) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((9.44067824E8) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c2 COLLATE RTRIM) NOTNULL) ASC);
SELECT ALL * FROM vt0, v0 WHERE (9.44067824E8) ORDER BY ((v0.c2 COLLATE RTRIM) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((9.44067824E8) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c2 COLLATE RTRIM) NOTNULL) ASC);
SELECT ALL * FROM vt0, v0 WHERE (9.44067824E8) ORDER BY ((v0.c2 COLLATE RTRIM) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c0)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)&(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c0)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)&(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c0)&(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (~ (((rt0.c0) IS TRUE))) INNER JOIN v0 ON x'' WHERE (CAST(((vt0.c1)<(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)<(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (~ (((rt0.c0) IS TRUE))) INNER JOIN v0 ON x'');
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (~ (((rt0.c0) IS TRUE))) INNER JOIN v0 ON x'' WHERE (CAST(((vt0.c1)<(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)<(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (~ (((rt0.c0) IS TRUE))) INNER JOIN v0 ON x'');
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (~ (((rt0.c0) IS TRUE))) INNER JOIN v0 ON x'' WHERE (CAST(((vt0.c1)<(rt0.c1)) AS BLOB));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (x'') ORDER BY json(((rt0.c2)LIKE(rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY json(((rt0.c2)LIKE(rt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (x'') ORDER BY json(((rt0.c2)LIKE(rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY json(((rt0.c2)LIKE(rt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (x'') ORDER BY json(((rt0.c2)LIKE(rt0.c0))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CASE WHEN CAST(vt0.c1 AS BLOB) THEN (NOT (vt0.c1)) ELSE (vt0.c0 IN (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c1 AS BLOB) THEN (NOT (vt0.c1)) ELSE (vt0.c0 IN (vt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CASE WHEN CAST(vt0.c1 AS BLOB) THEN (NOT (vt0.c1)) ELSE (vt0.c0 IN (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c1 AS BLOB) THEN (NOT (vt0.c1)) ELSE (vt0.c0 IN (vt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CASE WHEN CAST(vt0.c1 AS BLOB) THEN (NOT (vt0.c1)) ELSE (vt0.c0 IN (vt0.c0)) END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)||(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)||(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)||(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)||(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)||(rt0.c2)) AS TEXT));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((rt0.c2)/(v0.c2)))LIKE(CASE vt0.c1  WHEN v0.c1 THEN vt0.c1 END))) ORDER BY ((CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 WHEN x'' THEN vt0.c1 WHEN v0.c2 THEN v0.c1 END) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt0.c1 IN ()))) ASC  NULLS FIRST, ((((((rt0.c2)*(v0.c2)))AND(((rt0.c0) NOT NULL))))AND(rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)/(v0.c2)))LIKE(CASE vt0.c1  WHEN v0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 WHEN x'' THEN vt0.c1 WHEN v0.c2 THEN v0.c1 END) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt0.c1 IN ()))) ASC  NULLS FIRST, ((((((rt0.c2)*(v0.c2)))AND(((rt0.c0) NOT NULL))))AND(rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((rt0.c2)/(v0.c2)))LIKE(CASE vt0.c1  WHEN v0.c1 THEN vt0.c1 END))) ORDER BY ((CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 WHEN x'' THEN vt0.c1 WHEN v0.c2 THEN v0.c1 END) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt0.c1 IN ()))) ASC  NULLS FIRST, ((((((rt0.c2)*(v0.c2)))AND(((rt0.c0) NOT NULL))))AND(rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)/(v0.c2)))LIKE(CASE vt0.c1  WHEN v0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 WHEN x'' THEN vt0.c1 WHEN v0.c2 THEN v0.c1 END) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt0.c1 IN ()))) ASC  NULLS FIRST, ((((((rt0.c2)*(v0.c2)))AND(((rt0.c0) NOT NULL))))AND(rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((rt0.c2)/(v0.c2)))LIKE(CASE vt0.c1  WHEN v0.c1 THEN vt0.c1 END))) ORDER BY ((CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 WHEN x'' THEN vt0.c1 WHEN v0.c2 THEN v0.c1 END) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt0.c1 IN ()))) ASC  NULLS FIRST, ((((((rt0.c2)*(v0.c2)))AND(((rt0.c0) NOT NULL))))AND(rt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt0 ON 0.5286985659686697 WHERE (CASE WHEN (v0.c1 IN (v0.c1)) THEN ((rt0.c2)<(rt0.c1)) ELSE ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c1 IN (v0.c1)) THEN ((rt0.c2)<(rt0.c1)) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON 0.5286985659686697);
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt0 ON 0.5286985659686697 WHERE (CASE WHEN (v0.c1 IN (v0.c1)) THEN ((rt0.c2)<(rt0.c1)) ELSE ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c1 IN (v0.c1)) THEN ((rt0.c2)<(rt0.c1)) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON 0.5286985659686697);
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt0 ON 0.5286985659686697 WHERE (CASE WHEN (v0.c1 IN (v0.c1)) THEN ((rt0.c2)<(rt0.c1)) ELSE ((vt0.c0) NOT NULL) END);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((((((((((((vt0.c1)OR(rt0.c1)))OR(v0.c0)))OR(rt0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))<>(((rt0.c2)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c1)OR(rt0.c1)))OR(v0.c0)))OR(rt0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))<>(((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((((((((((((vt0.c1)OR(rt0.c1)))OR(v0.c0)))OR(rt0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))<>(((rt0.c2)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c1)OR(rt0.c1)))OR(v0.c0)))OR(rt0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))<>(((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((((((((((((vt0.c1)OR(rt0.c1)))OR(v0.c0)))OR(rt0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))<>(((rt0.c2)IS NOT(rt0.c2)))));
SELECT ALL * FROM v0 WHERE ((((NOT (v0.c0))) BETWEEN (CAST(v0.c2 AS BLOB)) AND (x''))) ORDER BY '-661735012' DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0))) BETWEEN (CAST(v0.c2 AS BLOB)) AND (x''))) IS TRUE)  as count FROM v0 ORDER BY '-661735012' DESC);
SELECT ALL * FROM v0 WHERE ((((NOT (v0.c0))) BETWEEN (CAST(v0.c2 AS BLOB)) AND (x''))) ORDER BY '-661735012' DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0))) BETWEEN (CAST(v0.c2 AS BLOB)) AND (x''))) IS TRUE)  as count FROM v0 ORDER BY '-661735012' DESC);
SELECT ALL * FROM v0 WHERE ((((NOT (v0.c0))) BETWEEN (CAST(v0.c2 AS BLOB)) AND (x''))) ORDER BY '-661735012' DESC;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((((vt0.c0)LIKE(rt0.c1)))AND((NOT (rt0.c1)))))OR(((rt0.c1)AND(rt0.c2))))) ORDER BY COALESCE(DISTINCT 0.87609579566411, '|U{7') COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(rt0.c1)))AND((NOT (rt0.c1)))))OR(((rt0.c1)AND(rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY COALESCE(DISTINCT 0.87609579566411, '|U{7') COLLATE NOCASE ASC);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((((vt0.c0)LIKE(rt0.c1)))AND((NOT (rt0.c1)))))OR(((rt0.c1)AND(rt0.c2))))) ORDER BY COALESCE(DISTINCT 0.87609579566411, '|U{7') COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(rt0.c1)))AND((NOT (rt0.c1)))))OR(((rt0.c1)AND(rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY COALESCE(DISTINCT 0.87609579566411, '|U{7') COLLATE NOCASE ASC);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((((vt0.c0)LIKE(rt0.c1)))AND((NOT (rt0.c1)))))OR(((rt0.c1)AND(rt0.c2))))) ORDER BY COALESCE(DISTINCT 0.87609579566411, '|U{7') COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CASE WHEN -1922096179 THEN vt0.c1 ELSE '224668480' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -1922096179 THEN vt0.c1 ELSE '224668480' END) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CASE WHEN -1922096179 THEN vt0.c1 ELSE '224668480' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -1922096179 THEN vt0.c1 ELSE '224668480' END) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CASE WHEN -1922096179 THEN vt0.c1 ELSE '224668480' END);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND(((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))))AND(CAST(vt0.c0 AS REAL)))) ORDER BY 'a}';
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS INTEGER))AND(((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY 'a}');
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND(((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))))AND(CAST(vt0.c0 AS REAL)))) ORDER BY 'a}';
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS INTEGER))AND(((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY 'a}');
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND(((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))))AND(CAST(vt0.c0 AS REAL)))) ORDER BY 'a}';
SELECT * FROM v0 WHERE ((((v0.c0 COLLATE BINARY, (((v0.c0, v0.c0, v0.c2))>((v0.c0, v0.c0, v0.c0))), ('-1551873692' IN ())))!=((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)), ((v0.c1) BETWEEN (x'') AND (v0.c0)), ((((v0.c1)OR(v0.c0)))AND(v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE BINARY, (((v0.c0, v0.c0, v0.c2))>((v0.c0, v0.c0, v0.c0))), ('-1551873692' IN ())))!=((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)), ((v0.c1) BETWEEN (x'') AND (v0.c0)), ((((v0.c1)OR(v0.c0)))AND(v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 COLLATE BINARY, (((v0.c0, v0.c0, v0.c2))>((v0.c0, v0.c0, v0.c0))), ('-1551873692' IN ())))!=((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)), ((v0.c1) BETWEEN (x'') AND (v0.c0)), ((((v0.c1)OR(v0.c0)))AND(v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE BINARY, (((v0.c0, v0.c0, v0.c2))>((v0.c0, v0.c0, v0.c0))), ('-1551873692' IN ())))!=((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)), ((v0.c1) BETWEEN (x'') AND (v0.c0)), ((((v0.c1)OR(v0.c0)))AND(v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 COLLATE BINARY, (((v0.c0, v0.c0, v0.c2))>((v0.c0, v0.c0, v0.c0))), ('-1551873692' IN ())))!=((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)), ((v0.c1) BETWEEN (x'') AND (v0.c0)), ((((v0.c1)OR(v0.c0)))AND(v0.c1))))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE v0.c2  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN NULL THEN vt0.c0 END)>(vt0.c1 COLLATE BINARY))) ORDER BY NULL  NULLS FIRST, ((x'')OR(((((v0.c2)AND(v0.c1)))OR(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c2  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN NULL THEN vt0.c0 END)>(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL  NULLS FIRST, ((x'')OR(((((v0.c2)AND(v0.c1)))OR(v0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE v0.c2  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN NULL THEN vt0.c0 END)>(vt0.c1 COLLATE BINARY))) ORDER BY NULL  NULLS FIRST, ((x'')OR(((((v0.c2)AND(v0.c1)))OR(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c2  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN NULL THEN vt0.c0 END)>(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL  NULLS FIRST, ((x'')OR(((((v0.c2)AND(v0.c1)))OR(v0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE v0.c2  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN NULL THEN vt0.c0 END)>(vt0.c1 COLLATE BINARY))) ORDER BY NULL  NULLS FIRST, ((x'')OR(((((v0.c2)AND(v0.c1)))OR(v0.c1))))  NULLS LAST;
SELECT * FROM vt0 INNER JOIN v0 ON 0.9443915739791098 LEFT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((((((((((v0.c0)AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(v0.c0)))) AND ((((rt0.c1) NOT NULL)))) WHERE (((((vt0.c1)LIKE(vt0.c1)))>>(0.9817980767035488)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)LIKE(vt0.c1)))>>(0.9817980767035488))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON 0.9443915739791098 LEFT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((((((((((v0.c0)AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(v0.c0)))) AND ((((rt0.c1) NOT NULL)))));
SELECT * FROM vt0 INNER JOIN v0 ON 0.9443915739791098 LEFT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((((((((((v0.c0)AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(v0.c0)))) AND ((((rt0.c1) NOT NULL)))) WHERE (((((vt0.c1)LIKE(vt0.c1)))>>(0.9817980767035488)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)LIKE(vt0.c1)))>>(0.9817980767035488))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON 0.9443915739791098 LEFT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((((((((((v0.c0)AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(v0.c0)))) AND ((((rt0.c1) NOT NULL)))));
SELECT * FROM vt0 INNER JOIN v0 ON 0.9443915739791098 LEFT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((((((((((v0.c0)AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(v0.c0)))) AND ((((rt0.c1) NOT NULL)))) WHERE (((((vt0.c1)LIKE(vt0.c1)))>>(0.9817980767035488)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (NULL))) IS FALSE)) ORDER BY ((vt0.c1 COLLATE RTRIM)>=(((vt0.c0)<>(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c1) AND (NULL))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM)>=(((vt0.c0)<>(NULL)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (NULL))) IS FALSE)) ORDER BY ((vt0.c1 COLLATE RTRIM)>=(((vt0.c0)<>(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c1) AND (NULL))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM)>=(((vt0.c0)<>(NULL)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (NULL))) IS FALSE)) ORDER BY ((vt0.c1 COLLATE RTRIM)>=(((vt0.c0)<>(NULL))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((x'')LIKE(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'')LIKE(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((x'')LIKE(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'')LIKE(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((x'')LIKE(rt0.c2)) COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c1) IS TRUE)  WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) WHEN ((((v0.c1)AND(v0.c0)))OR(v0.c2)) THEN v0.c2 COLLATE NOCASE WHEN (((v0.c0, v0.c2, v0.c0))>=((0.3335873057132467, v0.c1, v0.c2))) THEN (~ (0.40561756379460745)) WHEN v0.c1 COLLATE RTRIM THEN (NOT (v0.c0)) WHEN '0.026452166252186715' COLLATE NOCASE THEN ((((v0.c0)OR(v0.c2)))AND(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c1) IS TRUE)  WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) WHEN ((((v0.c1)AND(v0.c0)))OR(v0.c2)) THEN v0.c2 COLLATE NOCASE WHEN (((v0.c0, v0.c2, v0.c0))>=((0.3335873057132467, v0.c1, v0.c2))) THEN (~ (0.40561756379460745)) WHEN v0.c1 COLLATE RTRIM THEN (NOT (v0.c0)) WHEN '0.026452166252186715' COLLATE NOCASE THEN ((((v0.c0)OR(v0.c2)))AND(v0.c1)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c1) IS TRUE)  WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) WHEN ((((v0.c1)AND(v0.c0)))OR(v0.c2)) THEN v0.c2 COLLATE NOCASE WHEN (((v0.c0, v0.c2, v0.c0))>=((0.3335873057132467, v0.c1, v0.c2))) THEN (~ (0.40561756379460745)) WHEN v0.c1 COLLATE RTRIM THEN (NOT (v0.c0)) WHEN '0.026452166252186715' COLLATE NOCASE THEN ((((v0.c0)OR(v0.c2)))AND(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c1) IS TRUE)  WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) WHEN ((((v0.c1)AND(v0.c0)))OR(v0.c2)) THEN v0.c2 COLLATE NOCASE WHEN (((v0.c0, v0.c2, v0.c0))>=((0.3335873057132467, v0.c1, v0.c2))) THEN (~ (0.40561756379460745)) WHEN v0.c1 COLLATE RTRIM THEN (NOT (v0.c0)) WHEN '0.026452166252186715' COLLATE NOCASE THEN ((((v0.c0)OR(v0.c2)))AND(v0.c1)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c1) IS TRUE)  WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) WHEN ((((v0.c1)AND(v0.c0)))OR(v0.c2)) THEN v0.c2 COLLATE NOCASE WHEN (((v0.c0, v0.c2, v0.c0))>=((0.3335873057132467, v0.c1, v0.c2))) THEN (~ (0.40561756379460745)) WHEN v0.c1 COLLATE RTRIM THEN (NOT (v0.c0)) WHEN '0.026452166252186715' COLLATE NOCASE THEN ((((v0.c0)OR(v0.c2)))AND(v0.c1)) END);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c1)AND(rt0.c0)))OR(v0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)AND(rt0.c0)))OR(v0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c1)AND(rt0.c0)))OR(v0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)AND(rt0.c0)))OR(v0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c1)AND(rt0.c0)))OR(v0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((0.7442802509314906))<>((vt0.c0))))<((v0.c1 IN (vt0.c1))))) ORDER BY CASE WHEN '-1365413988' COLLATE BINARY THEN x'df5d' END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((0.7442802509314906))!=((vt0.c0))))<((v0.c1 IN (vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN '-1365413988' COLLATE BINARY THEN x'df5d' END DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((0.7442802509314906))<>((vt0.c0))))<((v0.c1 IN (vt0.c1))))) ORDER BY CASE WHEN '-1365413988' COLLATE BINARY THEN x'df5d' END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((0.7442802509314906))!=((vt0.c0))))<((v0.c1 IN (vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN '-1365413988' COLLATE BINARY THEN x'df5d' END DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((0.7442802509314906))<>((vt0.c0))))<((v0.c1 IN (vt0.c1))))) ORDER BY CASE WHEN '-1365413988' COLLATE BINARY THEN x'df5d' END DESC;
SELECT ALL * FROM v0, rt0 INNER JOIN vt0 ON CAST(((rt0.c0)+(rt0.c0)) AS REAL) WHERE (((((HEX(v0.c2))OR(((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c2)))))OR((((rt0.c2))=((0xffffffffae4e995f))))));
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(v0.c2))OR(((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c2)))))OR((((rt0.c2))=((0Xffffffffae4e995f)))))) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON CAST(((rt0.c0)+(rt0.c0)) AS REAL));
SELECT ALL * FROM v0, rt0 INNER JOIN vt0 ON CAST(((rt0.c0)+(rt0.c0)) AS REAL) WHERE (((((HEX(v0.c2))OR(((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c2)))))OR((((rt0.c2))=((0xffffffffae4e995f))))));
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(v0.c2))OR(((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c2)))))OR((((rt0.c2))=((0Xffffffffae4e995f)))))) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON CAST(((rt0.c0)+(rt0.c0)) AS REAL));
SELECT ALL * FROM v0, rt0 INNER JOIN vt0 ON CAST(((rt0.c0)+(rt0.c0)) AS REAL) WHERE (((((HEX(v0.c2))OR(((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c2)))))OR((((rt0.c2))=((0xffffffffae4e995f))))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (~ (((v0.c1)<>(v0.c0)))) INNER JOIN vt0 ON ((((v0.c1) IS TRUE))<(CASE v0.c1  WHEN rt0.c2 THEN vt0.c0 END)) WHERE ((rt0.c0 IN (((v0.c0)OR(rt0.c0)), CASE rt0.c1  WHEN v0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY ((((LIKELIHOOD(v0.c2, 0.41910547057138614))AND(((rt0.c0)IS NOT(rt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC))), CAST(((v0.c2)+(vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (((v0.c0)OR(rt0.c0)), CASE rt0.c1  WHEN v0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (~ (((v0.c1)!=(v0.c0)))) INNER JOIN vt0 ON ((((v0.c1) IS TRUE))<(CASE v0.c1  WHEN rt0.c2 THEN vt0.c0 END)) ORDER BY ((((LIKELIHOOD(v0.c2, 0.41910547057138614))AND(((rt0.c0)IS NOT(rt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC))), CAST(((v0.c2)+(vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (~ (((v0.c1)<>(v0.c0)))) INNER JOIN vt0 ON ((((v0.c1) IS TRUE))<(CASE v0.c1  WHEN rt0.c2 THEN vt0.c0 END)) WHERE ((rt0.c0 IN (((v0.c0)OR(rt0.c0)), CASE rt0.c1  WHEN v0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY ((((LIKELIHOOD(v0.c2, 0.41910547057138614))AND(((rt0.c0)IS NOT(rt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC))), CAST(((v0.c2)+(vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (((v0.c0)OR(rt0.c0)), CASE rt0.c1  WHEN v0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (~ (((v0.c1)!=(v0.c0)))) INNER JOIN vt0 ON ((((v0.c1) IS TRUE))<(CASE v0.c1  WHEN rt0.c2 THEN vt0.c0 END)) ORDER BY ((((LIKELIHOOD(v0.c2, 0.41910547057138614))AND(((rt0.c0)IS NOT(rt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC))), CAST(((v0.c2)+(vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (~ (((v0.c1)<>(v0.c0)))) INNER JOIN vt0 ON ((((v0.c1) IS TRUE))<(CASE v0.c1  WHEN rt0.c2 THEN vt0.c0 END)) WHERE ((rt0.c0 IN (((v0.c0)OR(rt0.c0)), CASE rt0.c1  WHEN v0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY ((((LIKELIHOOD(v0.c2, 0.41910547057138614))AND(((rt0.c0)IS NOT(rt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC))), CAST(((v0.c2)+(vt0.c0)) AS INTEGER);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY LIKELIHOOD(vt0.c1, 0.10049143513928471);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(vt0.c1, 0.10049143513928471));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY LIKELIHOOD(vt0.c1, 0.10049143513928471);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(vt0.c1, 0.10049143513928471));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY LIKELIHOOD(vt0.c1, 0.10049143513928471);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)AND(vt0.c0)) IN ())) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)GLOB((((vt0.c1)) NOT BETWEEN (('0.40561756379460745')) AND ((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)AND(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)GLOB((((vt0.c1)) NOT BETWEEN (('0.40561756379460745')) AND ((rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)AND(vt0.c0)) IN ())) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)GLOB((((vt0.c1)) NOT BETWEEN (('0.40561756379460745')) AND ((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)AND(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)GLOB((((vt0.c1)) NOT BETWEEN (('0.40561756379460745')) AND ((rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)AND(vt0.c0)) IN ())) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)GLOB((((vt0.c1)) NOT BETWEEN (('0.40561756379460745')) AND ((rt0.c2)))))  NULLS FIRST;
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (((vt0.c1 COLLATE RTRIM)>>(((vt0.c0) BETWEEN (x'') AND (vt0.c1))))) ORDER BY (- (((rt0.c1)+(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM)>>(((vt0.c0) BETWEEN (x'') AND (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((rt0.c1)+(rt0.c1)))) DESC);
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (((vt0.c1 COLLATE RTRIM)>>(((vt0.c0) BETWEEN (x'') AND (vt0.c1))))) ORDER BY (- (((rt0.c1)+(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM)>>(((vt0.c0) BETWEEN (x'') AND (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((rt0.c1)+(rt0.c1)))) DESC);
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (((vt0.c1 COLLATE RTRIM)>>(((vt0.c0) BETWEEN (x'') AND (vt0.c1))))) ORDER BY (- (((rt0.c1)+(rt0.c1)))) DESC;
SELECT * FROM vt0, v0, rt0 WHERE (((((~ (vt0.c0)), ((v0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)), rt0.c1 COLLATE RTRIM))=((v0.c1 COLLATE BINARY, ((rt0.c1) NOT BETWEEN ('1258922550') AND (v0.c1)), UNLIKELY(vt0.c1))))) ORDER BY ((((rt0.c0)LIKE(v0.c0)))||(((rt0.c1) NOT BETWEEN (2.13716522E8) AND (v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0)), ((v0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)), rt0.c1 COLLATE RTRIM))==((v0.c1 COLLATE BINARY, ((rt0.c1) NOT BETWEEN ('1258922550') AND (v0.c1)), UNLIKELY(vt0.c1))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c0)LIKE(v0.c0)))||(((rt0.c1) NOT BETWEEN (2.13716522E8) AND (v0.c1)))) ASC  NULLS LAST);
SELECT * FROM vt0, v0, rt0 WHERE (((((~ (vt0.c0)), ((v0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)), rt0.c1 COLLATE RTRIM))=((v0.c1 COLLATE BINARY, ((rt0.c1) NOT BETWEEN ('1258922550') AND (v0.c1)), UNLIKELY(vt0.c1))))) ORDER BY ((((rt0.c0)LIKE(v0.c0)))||(((rt0.c1) NOT BETWEEN (2.13716522E8) AND (v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0)), ((v0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)), rt0.c1 COLLATE RTRIM))==((v0.c1 COLLATE BINARY, ((rt0.c1) NOT BETWEEN ('1258922550') AND (v0.c1)), UNLIKELY(vt0.c1))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c0)LIKE(v0.c0)))||(((rt0.c1) NOT BETWEEN (2.13716522E8) AND (v0.c1)))) ASC  NULLS LAST);
SELECT * FROM vt0, v0, rt0 WHERE (((((~ (vt0.c0)), ((v0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)), rt0.c1 COLLATE RTRIM))=((v0.c1 COLLATE BINARY, ((rt0.c1) NOT BETWEEN ('1258922550') AND (v0.c1)), UNLIKELY(vt0.c1))))) ORDER BY ((((rt0.c0)LIKE(v0.c0)))||(((rt0.c1) NOT BETWEEN (2.13716522E8) AND (v0.c1)))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c1)  WHEN ((((((((vt0.c1)AND(0X4b980d95)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS REAL) THEN json_extract(vt0.c0, vt0.c0) WHEN ((vt0.c0)<<(vt0.c1)) THEN (vt0.c1 IN ()) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c1)  WHEN ((((((((vt0.c1)AND(0X4b980d95)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS REAL) THEN json_extract(vt0.c0, vt0.c0) WHEN ((vt0.c0)<<(vt0.c1)) THEN (vt0.c1 IN ()) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c1)  WHEN ((((((((vt0.c1)AND(0X4b980d95)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS REAL) THEN json_extract(vt0.c0, vt0.c0) WHEN ((vt0.c0)<<(vt0.c1)) THEN (vt0.c1 IN ()) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c1)  WHEN ((((((((vt0.c1)AND(0X4b980d95)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS REAL) THEN json_extract(vt0.c0, vt0.c0) WHEN ((vt0.c0)<<(vt0.c1)) THEN (vt0.c1 IN ()) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c1)  WHEN ((((((((vt0.c1)AND(0X4b980d95)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS REAL) THEN json_extract(vt0.c0, vt0.c0) WHEN ((vt0.c0)<<(vt0.c1)) THEN (vt0.c1 IN ()) ELSE vt0.c0 END);
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 AS TEXT)) ORDER BY (NULL IN (((('-1212995583')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NULL IN (((('-1212995583')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 AS TEXT)) ORDER BY (NULL IN (((('-1212995583')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NULL IN (((('-1212995583')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 AS TEXT)) ORDER BY (NULL IN (((('-1212995583')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((0.9237471732905932)+(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((0.9237471732905932)+(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((0.9237471732905932)+(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((0.9237471732905932)+(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((0.9237471732905932)+(rt0.c0))) IS TRUE));
SELECT * FROM rt0 CROSS JOIN vt0 ON (((((rt0.c2)/(rt0.c0))))>=(((NOT (''))))) WHERE (((((((((((vt0.c1) NOTNULL))OR(CAST(vt0.c1 AS BLOB))))AND((rt0.c2 IN ()))))OR(CAST(vt0.c0 AS TEXT))))AND(((rt0.c1)<>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1) NOTNULL))OR(CAST(vt0.c1 AS BLOB))))AND((rt0.c2 IN ()))))OR(CAST(vt0.c0 AS TEXT))))AND(((rt0.c1)!=(vt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((((rt0.c2)/(rt0.c0))))>=(((NOT (''))))));
SELECT * FROM rt0 CROSS JOIN vt0 ON (((((rt0.c2)/(rt0.c0))))>=(((NOT (''))))) WHERE (((((((((((vt0.c1) NOTNULL))OR(CAST(vt0.c1 AS BLOB))))AND((rt0.c2 IN ()))))OR(CAST(vt0.c0 AS TEXT))))AND(((rt0.c1)<>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1) NOTNULL))OR(CAST(vt0.c1 AS BLOB))))AND((rt0.c2 IN ()))))OR(CAST(vt0.c0 AS TEXT))))AND(((rt0.c1)!=(vt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((((rt0.c2)/(rt0.c0))))>=(((NOT (''))))));
SELECT * FROM rt0 CROSS JOIN vt0 ON (((((rt0.c2)/(rt0.c0))))>=(((NOT (''))))) WHERE (((((((((((vt0.c1) NOTNULL))OR(CAST(vt0.c1 AS BLOB))))AND((rt0.c2 IN ()))))OR(CAST(vt0.c0 AS TEXT))))AND(((rt0.c1)<>(vt0.c1)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CHAR((+ (rt0.c2)), (- (rt0.c1)), CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((CHAR((+ (rt0.c2)), (- (rt0.c1)), CAST(rt0.c1 AS REAL))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CHAR((+ (rt0.c2)), (- (rt0.c1)), CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((CHAR((+ (rt0.c2)), (- (rt0.c1)), CAST(rt0.c1 AS REAL))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CHAR((+ (rt0.c2)), (- (rt0.c1)), CAST(rt0.c1 AS REAL)));
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))%(((((((((v0.c1)OR(rt0.c2)))OR(v0.c1)))OR(1398608296)))AND(vt0.c1))))) ORDER BY ((0.17488637315686184 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))%(((((((((v0.c1)OR(rt0.c2)))OR(v0.c1)))OR(1398608296)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((0.17488637315686184 IN ()) IN ())  NULLS LAST);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))%(((((((((v0.c1)OR(rt0.c2)))OR(v0.c1)))OR(1398608296)))AND(vt0.c1))))) ORDER BY ((0.17488637315686184 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))%(((((((((v0.c1)OR(rt0.c2)))OR(v0.c1)))OR(1398608296)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((0.17488637315686184 IN ()) IN ())  NULLS LAST);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))%(((((((((v0.c1)OR(rt0.c2)))OR(v0.c1)))OR(1398608296)))AND(vt0.c1))))) ORDER BY ((0.17488637315686184 IN ()) IN ())  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (('-1574785257') BETWEEN (((rt0.c1) BETWEEN (NULL) AND (rt0.c2))) AND (((((rt0.c1)AND(0.47723614551527516)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (('-1574785257') BETWEEN (((rt0.c1) BETWEEN (NULL) AND (rt0.c2))) AND (((((rt0.c1)AND(0.47723614551527516)))OR(rt0.c2)))));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (('-1574785257') BETWEEN (((rt0.c1) BETWEEN (NULL) AND (rt0.c2))) AND (((((rt0.c1)AND(0.47723614551527516)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (('-1574785257') BETWEEN (((rt0.c1) BETWEEN (NULL) AND (rt0.c2))) AND (((((rt0.c1)AND(0.47723614551527516)))OR(rt0.c2)))));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (('-1574785257') BETWEEN (((rt0.c1) BETWEEN (NULL) AND (rt0.c2))) AND (((((rt0.c1)AND(0.47723614551527516)))OR(rt0.c2))));
SELECT * FROM rt0 WHERE (DATE((('^g[>')-(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c2)<(rt0.c0)))) ORDER BY ((rt0.c2) NOT BETWEEN ('#^	_SNr(') AND (rt0.c2 COLLATE BINARY)) ASC, ((((rt0.c1)<<(rt0.c1))) BETWEEN (rt0.c0) AND ('0.4514631003269016')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((DATE((('^g[>')-(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c2)<(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOT BETWEEN ('#^	_SNr(') AND (rt0.c2 COLLATE BINARY)) ASC, ((((rt0.c1)<<(rt0.c1))) BETWEEN (rt0.c0) AND ('0.4514631003269016')) ASC);
SELECT * FROM rt0 WHERE (DATE((('^g[>')-(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c2)<(rt0.c0)))) ORDER BY ((rt0.c2) NOT BETWEEN ('#^	_SNr(') AND (rt0.c2 COLLATE BINARY)) ASC, ((((rt0.c1)<<(rt0.c1))) BETWEEN (rt0.c0) AND ('0.4514631003269016')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((DATE((('^g[>')-(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c2)<(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOT BETWEEN ('#^	_SNr(') AND (rt0.c2 COLLATE BINARY)) ASC, ((((rt0.c1)<<(rt0.c1))) BETWEEN (rt0.c0) AND ('0.4514631003269016')) ASC);
SELECT * FROM rt0 WHERE (DATE((('^g[>')-(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c2)<(rt0.c0)))) ORDER BY ((rt0.c2) NOT BETWEEN ('#^	_SNr(') AND (rt0.c2 COLLATE BINARY)) ASC, ((((rt0.c1)<<(rt0.c1))) BETWEEN (rt0.c0) AND ('0.4514631003269016')) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (- (v0.c0)) END WHERE (((LIKELY(rt0.c1)) NOT BETWEEN (((rt0.c2)IS(v0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c1)) NOT BETWEEN (((rt0.c2)IS(v0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (- (v0.c0)) END);
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (- (v0.c0)) END WHERE (((LIKELY(rt0.c1)) NOT BETWEEN (((rt0.c2)IS(v0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c1)) NOT BETWEEN (((rt0.c2)IS(v0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (- (v0.c0)) END);
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (- (v0.c0)) END WHERE (((LIKELY(rt0.c1)) NOT BETWEEN (((rt0.c2)IS(v0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((NOT (vt0.c0)))));
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN vt0.c0 THEN TYPEOF(DISTINCT rt0.c2) ELSE ((rt0.c2) NOT BETWEEN (v0.c1) AND (rt0.c0)) END) ORDER BY TRIM(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN TYPEOF(DISTINCT rt0.c2) ELSE ((rt0.c2) NOT BETWEEN (v0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY TRIM(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2))) DESC);
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN vt0.c0 THEN TYPEOF(DISTINCT rt0.c2) ELSE ((rt0.c2) NOT BETWEEN (v0.c1) AND (rt0.c0)) END) ORDER BY TRIM(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN TYPEOF(DISTINCT rt0.c2) ELSE ((rt0.c2) NOT BETWEEN (v0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY TRIM(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2))) DESC);
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN vt0.c0 THEN TYPEOF(DISTINCT rt0.c2) ELSE ((rt0.c2) NOT BETWEEN (v0.c1) AND (rt0.c0)) END) ORDER BY TRIM(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2))) DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE ((~ (CAST(vt0.c1 AS INTEGER)))) ORDER BY (((vt0.c1 IN ()))IS(((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-2028445805'))))  NULLS FIRST, ((UNLIKELY(v0.c2)) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1 IN ()))IS(((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-2028445805'))))  NULLS FIRST, ((UNLIKELY(v0.c2)) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((~ (CAST(vt0.c1 AS INTEGER)))) ORDER BY (((vt0.c1 IN ()))IS(((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-2028445805'))))  NULLS FIRST, ((UNLIKELY(v0.c2)) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1 IN ()))IS(((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-2028445805'))))  NULLS FIRST, ((UNLIKELY(v0.c2)) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((~ (CAST(vt0.c1 AS INTEGER)))) ORDER BY (((vt0.c1 IN ()))IS(((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-2028445805'))))  NULLS FIRST, ((UNLIKELY(v0.c2)) ISNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE WHEN ((rt0.c0)||(v0.c0)) THEN ((v0.c0) NOT NULL) WHEN ((x'') NOT BETWEEN (v0.c0) AND (v0.c2)) THEN ((v0.c2)+(rt0.c2)) WHEN ((((((((v0.c0)AND(rt0.c1)))AND(v0.c2)))AND(rt0.c0)))AND(rt0.c0)) THEN ((v0.c0) IS FALSE) END) ORDER BY CAST(COALESCE(v0.c1, v0.c2, rt0.c1, rt0.c0) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)||(v0.c0)) THEN ((v0.c0) NOT NULL) WHEN ((x'') NOT BETWEEN (v0.c0) AND (v0.c2)) THEN ((v0.c2)+(rt0.c2)) WHEN ((((((((v0.c0)AND(rt0.c1)))AND(v0.c2)))AND(rt0.c0)))AND(rt0.c0)) THEN ((v0.c0) IS FALSE) END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY CAST(COALESCE(v0.c1, v0.c2, rt0.c1, rt0.c0) AS INTEGER) DESC);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE WHEN ((rt0.c0)||(v0.c0)) THEN ((v0.c0) NOT NULL) WHEN ((x'') NOT BETWEEN (v0.c0) AND (v0.c2)) THEN ((v0.c2)+(rt0.c2)) WHEN ((((((((v0.c0)AND(rt0.c1)))AND(v0.c2)))AND(rt0.c0)))AND(rt0.c0)) THEN ((v0.c0) IS FALSE) END) ORDER BY CAST(COALESCE(v0.c1, v0.c2, rt0.c1, rt0.c0) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)||(v0.c0)) THEN ((v0.c0) NOT NULL) WHEN ((x'') NOT BETWEEN (v0.c0) AND (v0.c2)) THEN ((v0.c2)+(rt0.c2)) WHEN ((((((((v0.c0)AND(rt0.c1)))AND(v0.c2)))AND(rt0.c0)))AND(rt0.c0)) THEN ((v0.c0) IS FALSE) END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY CAST(COALESCE(v0.c1, v0.c2, rt0.c1, rt0.c0) AS INTEGER) DESC);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE WHEN ((rt0.c0)||(v0.c0)) THEN ((v0.c0) NOT NULL) WHEN ((x'') NOT BETWEEN (v0.c0) AND (v0.c2)) THEN ((v0.c2)+(rt0.c2)) WHEN ((((((((v0.c0)AND(rt0.c1)))AND(v0.c2)))AND(rt0.c0)))AND(rt0.c0)) THEN ((v0.c0) IS FALSE) END) ORDER BY CAST(COALESCE(v0.c1, v0.c2, rt0.c1, rt0.c0) AS INTEGER) DESC;
SELECT * FROM vt0 WHERE (x'') ORDER BY (((((((((+ (vt0.c1)))OR((~ (vt0.c1)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (-1885354854)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0))!=((vt0.c0))))) ASC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (((((((((+ (vt0.c1)))OR((~ (vt0.c1)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (-1885354854)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0))<>((vt0.c0))))) ASC  NULLS FIRST, NULL);
SELECT * FROM vt0 WHERE (x'') ORDER BY (((((((((+ (vt0.c1)))OR((~ (vt0.c1)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (-1885354854)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0))!=((vt0.c0))))) ASC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (((((((((+ (vt0.c1)))OR((~ (vt0.c1)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (-1885354854)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0))<>((vt0.c0))))) ASC  NULLS FIRST, NULL);
SELECT * FROM vt0 WHERE (x'') ORDER BY (((((((((+ (vt0.c1)))OR((~ (vt0.c1)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (-1885354854)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0))!=((vt0.c0))))) ASC  NULLS FIRST, NULL;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((v0.c1 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((v0.c1 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((v0.c1 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c0) NOT BETWEEN (vt0.c1) AND (0.3529779534622668)))OR(((vt0.c1) NOTNULL))))AND(CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 END)))AND(CASE rt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)))OR((('623301765')>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) NOT BETWEEN (vt0.c1) AND (0.3529779534622668)))OR(((vt0.c1) NOTNULL))))AND(CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 END)))AND(CASE rt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)))OR((('623301765')>(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c0) NOT BETWEEN (vt0.c1) AND (0.3529779534622668)))OR(((vt0.c1) NOTNULL))))AND(CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 END)))AND(CASE rt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)))OR((('623301765')>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) NOT BETWEEN (vt0.c1) AND (0.3529779534622668)))OR(((vt0.c1) NOTNULL))))AND(CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 END)))AND(CASE rt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)))OR((('623301765')>(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c0) NOT BETWEEN (vt0.c1) AND (0.3529779534622668)))OR(((vt0.c1) NOTNULL))))AND(CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 END)))AND(CASE rt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)))OR((('623301765')>(vt0.c0)))));
SELECT * FROM vt0, v0, rt0 WHERE (((((((rt0.c1)IS NOT(NULL)))AND((rt0.c0 IN ()))))OR((- (rt0.c2))))) ORDER BY (((vt0.c1 IN ()))LIKE(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST, ((rt0.c0)<(v0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)IS NOT(NULL)))AND((rt0.c0 IN ()))))OR((- (rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((vt0.c1 IN ()))LIKE(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST, ((rt0.c0)<(v0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt0, v0, rt0 WHERE (((((((rt0.c1)IS NOT(NULL)))AND((rt0.c0 IN ()))))OR((- (rt0.c2))))) ORDER BY (((vt0.c1 IN ()))LIKE(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST, ((rt0.c0)<(v0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)IS NOT(NULL)))AND((rt0.c0 IN ()))))OR((- (rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((vt0.c1 IN ()))LIKE(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST, ((rt0.c0)<(v0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt0, v0, rt0 WHERE (((((((rt0.c1)IS NOT(NULL)))AND((rt0.c0 IN ()))))OR((- (rt0.c2))))) ORDER BY (((vt0.c1 IN ()))LIKE(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST, ((rt0.c0)<(v0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS TEXT)) ORDER BY ((NULL)<<(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))  NULLS FIRST, ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)<<(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))  NULLS FIRST, ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS TEXT)) ORDER BY ((NULL)<<(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))  NULLS FIRST, ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)<<(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))  NULLS FIRST, ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS TEXT)) ORDER BY ((NULL)<<(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))  NULLS FIRST, ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((('1292127056') BETWEEN (v0.c2) AND (0.8013849376239247)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('1292127056') BETWEEN (v0.c2) AND (0.8013849376239247)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((('1292127056') BETWEEN (v0.c2) AND (0.8013849376239247)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('1292127056') BETWEEN (v0.c2) AND (0.8013849376239247)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((('1292127056') BETWEEN (v0.c2) AND (0.8013849376239247)) IN ()));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON vt0.c0 CROSS JOIN v0 ON (CASE vt0.c0  WHEN vt0.c1 THEN rt0.c0 END IN ((((rt0.c0))==((rt0.c1))), (NOT (rt0.c1)))) WHERE ((((0.7155298940759486 IN ())) ISNULL)) ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(((((rt0.c0)OR(vt0.c1)))OR(rt0.c2)))))OR(((v0.c0) IS TRUE))))OR(LOWER(rt0.c1))))AND((v0.c2 IN ()))) ASC  NULLS FIRST, ((((((((((rt0.c2) BETWEEN (v0.c1) AND (vt0.c0)))AND(CAST(v0.c2 AS NUMERIC))))OR(((x'') BETWEEN (vt0.c1) AND (rt0.c1)))))AND(CAST(vt0.c0 AS TEXT))))AND((NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((0.7155298940759486 IN ())) ISNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON vt0.c0 CROSS JOIN v0 ON (CASE vt0.c0  WHEN vt0.c1 THEN rt0.c0 END IN ((((rt0.c0))==((rt0.c1))), (NOT (rt0.c1)))) ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(((((rt0.c0)OR(vt0.c1)))OR(rt0.c2)))))OR(((v0.c0) IS TRUE))))OR(LOWER(rt0.c1))))AND((v0.c2 IN ()))) ASC  NULLS FIRST, ((((((((((rt0.c2) BETWEEN (v0.c1) AND (vt0.c0)))AND(CAST(v0.c2 AS NUMERIC))))OR(((x'') BETWEEN (vt0.c1) AND (rt0.c1)))))AND(CAST(vt0.c0 AS TEXT))))AND((NOT (rt0.c2)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON vt0.c0 CROSS JOIN v0 ON (CASE vt0.c0  WHEN vt0.c1 THEN rt0.c0 END IN ((((rt0.c0))==((rt0.c1))), (NOT (rt0.c1)))) WHERE ((((0.7155298940759486 IN ())) ISNULL)) ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(((((rt0.c0)OR(vt0.c1)))OR(rt0.c2)))))OR(((v0.c0) IS TRUE))))OR(LOWER(rt0.c1))))AND((v0.c2 IN ()))) ASC  NULLS FIRST, ((((((((((rt0.c2) BETWEEN (v0.c1) AND (vt0.c0)))AND(CAST(v0.c2 AS NUMERIC))))OR(((x'') BETWEEN (vt0.c1) AND (rt0.c1)))))AND(CAST(vt0.c0 AS TEXT))))AND((NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((0.7155298940759486 IN ())) ISNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON vt0.c0 CROSS JOIN v0 ON (CASE vt0.c0  WHEN vt0.c1 THEN rt0.c0 END IN ((((rt0.c0))==((rt0.c1))), (NOT (rt0.c1)))) ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(((((rt0.c0)OR(vt0.c1)))OR(rt0.c2)))))OR(((v0.c0) IS TRUE))))OR(LOWER(rt0.c1))))AND((v0.c2 IN ()))) ASC  NULLS FIRST, ((((((((((rt0.c2) BETWEEN (v0.c1) AND (vt0.c0)))AND(CAST(v0.c2 AS NUMERIC))))OR(((x'') BETWEEN (vt0.c1) AND (rt0.c1)))))AND(CAST(vt0.c0 AS TEXT))))AND((NOT (rt0.c2)))));
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((vt0.c0)<=(v0.c1)))+((((vt0.c1, v0.c2, rt0.c2))>((vt0.c0, rt0.c1, v0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(v0.c1)))+((((vt0.c1, v0.c2, rt0.c2))>((vt0.c0, rt0.c1, v0.c2)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((vt0.c0)<=(v0.c1)))+((((vt0.c1, v0.c2, rt0.c2))>((vt0.c0, rt0.c1, v0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(v0.c1)))+((((vt0.c1, v0.c2, rt0.c2))>((vt0.c0, rt0.c1, v0.c2)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((vt0.c0)<=(v0.c1)))+((((vt0.c1, v0.c2, rt0.c2))>((vt0.c0, rt0.c1, v0.c2))))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c2) BETWEEN (NULL) AND (v0.c2)) AS TEXT) WHERE ((+ (CASE ''  WHEN v0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE ''  WHEN v0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c2) BETWEEN (NULL) AND (v0.c2)) AS TEXT));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c2) BETWEEN (NULL) AND (v0.c2)) AS TEXT) WHERE ((+ (CASE ''  WHEN v0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE ''  WHEN v0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c2) BETWEEN (NULL) AND (v0.c2)) AS TEXT));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c2) BETWEEN (NULL) AND (v0.c2)) AS TEXT) WHERE ((+ (CASE ''  WHEN v0.c2 THEN rt0.c0 END)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST((('-921845005') IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-921845005') IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST((('-921845005') IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-921845005') IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST((('-921845005') IS FALSE) AS TEXT));
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN v0 ON IFNULL((rt0.c1 IN (rt0.c0)), (v0.c2 IN ())) WHERE (((v0.c1) NOT NULL)) ORDER BY ((((((((v0.c2)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)))OR(-579786386)) COLLATE NOCASE ASC  NULLS LAST, ((((rt0.c2 IN (v0.c2)), x'41ea', ((0.2958071783843961)LIKE(rt0.c1))))>=((CAST(v0.c0 AS NUMERIC), ((x'8a95') BETWEEN (rt0.c2) AND (vt0.c1)), (((v0.c2))>((vt0.c1)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN v0 ON IFNULL((rt0.c1 IN (rt0.c0)), (v0.c2 IN ())) ORDER BY ((((((((v0.c2)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)))OR(-579786386)) COLLATE NOCASE ASC  NULLS LAST, ((((rt0.c2 IN (v0.c2)), x'41ea', ((0.2958071783843961)LIKE(rt0.c1))))>=((CAST(v0.c0 AS NUMERIC), ((x'8a95') BETWEEN (rt0.c2) AND (vt0.c1)), (((v0.c2))>((vt0.c1)))))) ASC);
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN v0 ON IFNULL((rt0.c1 IN (rt0.c0)), (v0.c2 IN ())) WHERE (((v0.c1) NOT NULL)) ORDER BY ((((((((v0.c2)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)))OR(-579786386)) COLLATE NOCASE ASC  NULLS LAST, ((((rt0.c2 IN (v0.c2)), x'41ea', ((0.2958071783843961)LIKE(rt0.c1))))>=((CAST(v0.c0 AS NUMERIC), ((x'8a95') BETWEEN (rt0.c2) AND (vt0.c1)), (((v0.c2))>((vt0.c1)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN v0 ON IFNULL((rt0.c1 IN (rt0.c0)), (v0.c2 IN ())) ORDER BY ((((((((v0.c2)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)))OR(-579786386)) COLLATE NOCASE ASC  NULLS LAST, ((((rt0.c2 IN (v0.c2)), x'41ea', ((0.2958071783843961)LIKE(rt0.c1))))>=((CAST(v0.c0 AS NUMERIC), ((x'8a95') BETWEEN (rt0.c2) AND (vt0.c1)), (((v0.c2))>((vt0.c1)))))) ASC);
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN v0 ON IFNULL((rt0.c1 IN (rt0.c0)), (v0.c2 IN ())) WHERE (((v0.c1) NOT NULL)) ORDER BY ((((((((v0.c2)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)))OR(-579786386)) COLLATE NOCASE ASC  NULLS LAST, ((((rt0.c2 IN (v0.c2)), x'41ea', ((0.2958071783843961)LIKE(rt0.c1))))>=((CAST(v0.c0 AS NUMERIC), ((x'8a95') BETWEEN (rt0.c2) AND (vt0.c1)), (((v0.c2))>((vt0.c1)))))) ASC;
SELECT * FROM v0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (rt0.c1);
SELECT * FROM rt0, vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS BLOB)) ORDER BY ((((rt0.c0) IS TRUE)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) IS TRUE)) NOTNULL) ASC);
SELECT * FROM rt0, vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS BLOB)) ORDER BY ((((rt0.c0) IS TRUE)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) IS TRUE)) NOTNULL) ASC);
SELECT * FROM rt0, vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS BLOB)) ORDER BY ((((rt0.c0) IS TRUE)) NOTNULL) ASC;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0) NOTNULL) IN ()) WHERE ('1731942152');
SELECT SUM(count) FROM (SELECT (('1731942152') IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0) NOTNULL) IN ()));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0) NOTNULL) IN ()) WHERE ('1731942152');
SELECT SUM(count) FROM (SELECT (('1731942152') IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0) NOTNULL) IN ()));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0) NOTNULL) IN ()) WHERE ('1731942152');
SELECT * FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY ((((((vt0.c1)%(vt0.c0)))AND(((vt0.c1)>=(vt0.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)%(vt0.c0)))AND(((vt0.c1)>=(vt0.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))) ASC);
SELECT * FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY ((((((vt0.c1)%(vt0.c0)))AND(((vt0.c1)>=(vt0.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)%(vt0.c0)))AND(((vt0.c1)>=(vt0.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))) ASC);
SELECT * FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY ((((((vt0.c1)%(vt0.c0)))AND(((vt0.c1)>=(vt0.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))) ASC;
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c2  WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c2  WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c2  WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c2  WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c2  WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END) NOTNULL));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (v0.c0) ORDER BY ((rt0.c0 COLLATE RTRIM)>>(x''));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0, rt0 NOT INDEXED ORDER BY ((rt0.c0 COLLATE RTRIM)>>(x'')));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (v0.c0) ORDER BY ((rt0.c0 COLLATE RTRIM)>>(x''));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0, rt0 NOT INDEXED ORDER BY ((rt0.c0 COLLATE RTRIM)>>(x'')));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (v0.c0) ORDER BY ((rt0.c0 COLLATE RTRIM)>>(x''));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (((CAST(vt0.c1 AS INTEGER)))<((((v0.c2)<(v0.c1))))) INNER JOIN v0 ON vt0.c0 WHERE ((NOT (CAST(v0.c1 AS BLOB)))) ORDER BY ((((-1907692503)OR(v0.c1)))AND(rt0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(v0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((CAST(vt0.c1 AS INTEGER)))<((((v0.c2)<(v0.c1))))) INNER JOIN v0 ON vt0.c0 ORDER BY ((((-1907692503)OR(v0.c1)))AND(rt0.c2)) COLLATE RTRIM DESC);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (((CAST(vt0.c1 AS INTEGER)))<((((v0.c2)<(v0.c1))))) INNER JOIN v0 ON vt0.c0 WHERE ((NOT (CAST(v0.c1 AS BLOB)))) ORDER BY ((((-1907692503)OR(v0.c1)))AND(rt0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(v0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((CAST(vt0.c1 AS INTEGER)))<((((v0.c2)<(v0.c1))))) INNER JOIN v0 ON vt0.c0 ORDER BY ((((-1907692503)OR(v0.c1)))AND(rt0.c2)) COLLATE RTRIM DESC);
SELECT * FROM v0, vt0 NATURAL JOIN rt0 WHERE ((((+ (vt0.c0))) IS FALSE)) ORDER BY ((((v0.c1)IS(x'9e5d'))) BETWEEN (json_valid(v0.c2)) AND (((((rt0.c1)AND(rt0.c0)))OR(v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0 ORDER BY ((((v0.c1)IS(x'9e5d'))) BETWEEN (json_valid(v0.c2)) AND (((((rt0.c1)AND(rt0.c0)))OR(v0.c2)))) DESC);
SELECT * FROM v0, vt0 NATURAL JOIN rt0 WHERE ((((+ (vt0.c0))) IS FALSE)) ORDER BY ((((v0.c1)IS(x'9e5d'))) BETWEEN (json_valid(v0.c2)) AND (((((rt0.c1)AND(rt0.c0)))OR(v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0 ORDER BY ((((v0.c1)IS(x'9e5d'))) BETWEEN (json_valid(v0.c2)) AND (((((rt0.c1)AND(rt0.c0)))OR(v0.c2)))) DESC);
SELECT * FROM v0, vt0 NATURAL JOIN rt0 WHERE ((((+ (vt0.c0))) IS FALSE)) ORDER BY ((((v0.c1)IS(x'9e5d'))) BETWEEN (json_valid(v0.c2)) AND (((((rt0.c1)AND(rt0.c0)))OR(v0.c2)))) DESC;
SELECT * FROM v0, rt0 NOT INDEXED, vt0 WHERE (CAST(((rt0.c2)>>(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)>>(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0 NOT INDEXED, vt0 WHERE (CAST(((rt0.c2)>>(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)>>(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0 NOT INDEXED, vt0 WHERE (CAST(((rt0.c2)>>(rt0.c2)) AS TEXT));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (TIME(((v0.c0) NOTNULL), ROUND(vt0.c1, NULL), ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), (- (v0.c2)), TIME(v0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c0))) ORDER BY ((((rt0.c2 COLLATE BINARY)AND(v0.c2 COLLATE RTRIM)))AND(x'b24a')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TIME(((v0.c0) NOTNULL), ROUND(vt0.c1, NULL), ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), (- (v0.c2)), TIME(v0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c0))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c2 COLLATE BINARY)AND(v0.c2 COLLATE RTRIM)))AND(x'b24a')) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (TIME(((v0.c0) NOTNULL), ROUND(vt0.c1, NULL), ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), (- (v0.c2)), TIME(v0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c0))) ORDER BY ((((rt0.c2 COLLATE BINARY)AND(v0.c2 COLLATE RTRIM)))AND(x'b24a')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TIME(((v0.c0) NOTNULL), ROUND(vt0.c1, NULL), ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), (- (v0.c2)), TIME(v0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c0))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c2 COLLATE BINARY)AND(v0.c2 COLLATE RTRIM)))AND(x'b24a')) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (TIME(((v0.c0) NOTNULL), ROUND(vt0.c1, NULL), ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), (- (v0.c2)), TIME(v0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c0))) ORDER BY ((((rt0.c2 COLLATE BINARY)AND(v0.c2 COLLATE RTRIM)))AND(x'b24a')) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (v0.c2)) THEN ((v0.c1)>=(vt0.c1)) WHEN ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(0.4969276084444657)))AND(v0.c1)) THEN vt0.c1 COLLATE NOCASE WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c2 END THEN '1183256429' ELSE ((v0.c0)>>(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (v0.c2)) THEN ((v0.c1)>=(vt0.c1)) WHEN ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(0.4969276084444657)))AND(v0.c1)) THEN vt0.c1 COLLATE NOCASE WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c2 END THEN '1183256429' ELSE ((v0.c0)>>(v0.c1)) END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (v0.c2)) THEN ((v0.c1)>=(vt0.c1)) WHEN ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(0.4969276084444657)))AND(v0.c1)) THEN vt0.c1 COLLATE NOCASE WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c2 END THEN '1183256429' ELSE ((v0.c0)>>(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (v0.c2)) THEN ((v0.c1)>=(vt0.c1)) WHEN ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(0.4969276084444657)))AND(v0.c1)) THEN vt0.c1 COLLATE NOCASE WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c2 END THEN '1183256429' ELSE ((v0.c0)>>(v0.c1)) END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (v0.c2)) THEN ((v0.c1)>=(vt0.c1)) WHEN ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(0.4969276084444657)))AND(v0.c1)) THEN vt0.c1 COLLATE NOCASE WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c2 END THEN '1183256429' ELSE ((v0.c0)>>(v0.c1)) END);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)GLOB(vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)GLOB(vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)GLOB(vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)GLOB(vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)GLOB(vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c1 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((((('114429515') NOT BETWEEN (vt0.c0) AND (vt0.c1)), (x'' IN ()), ((((v0.c1)AND(v0.c2)))AND(rt0.c1))))>((((v0.c2)=(vt0.c1)), v0.c1 COLLATE NOCASE, ((rt0.c1) NOTNULL)))) LEFT OUTER JOIN vt0 ON v0.c0 WHERE (((COALESCE(vt0.c1, rt0.c1))/(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c1, rt0.c1))/(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((('114429515') NOT BETWEEN (vt0.c0) AND (vt0.c1)), (x'' IN ()), ((((v0.c1)AND(v0.c2)))AND(rt0.c1))))>((((v0.c2)==(vt0.c1)), v0.c1 COLLATE NOCASE, ((rt0.c1) NOTNULL)))) LEFT OUTER JOIN vt0 ON v0.c0);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((((('114429515') NOT BETWEEN (vt0.c0) AND (vt0.c1)), (x'' IN ()), ((((v0.c1)AND(v0.c2)))AND(rt0.c1))))>((((v0.c2)=(vt0.c1)), v0.c1 COLLATE NOCASE, ((rt0.c1) NOTNULL)))) LEFT OUTER JOIN vt0 ON v0.c0 WHERE (((COALESCE(vt0.c1, rt0.c1))/(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c1, rt0.c1))/(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((('114429515') NOT BETWEEN (vt0.c0) AND (vt0.c1)), (x'' IN ()), ((((v0.c1)AND(v0.c2)))AND(rt0.c1))))>((((v0.c2)==(vt0.c1)), v0.c1 COLLATE NOCASE, ((rt0.c1) NOTNULL)))) LEFT OUTER JOIN vt0 ON v0.c0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))!=(-63189347))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT))<>(-63189347))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))!=(-63189347))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT))<>(-63189347))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))!=(-63189347))) ORDER BY rt0.c1 DESC;
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((vt0.c0 IN ()) IN (((v0.c2) ISNULL)))) ORDER BY (((((v0.c1))>=((vt0.c1))))&(v0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN (((v0.c2) ISNULL)))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY (((((v0.c1))>=((vt0.c1))))&(v0.c1)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((vt0.c0 IN ()) IN (((v0.c2) ISNULL)))) ORDER BY (((((v0.c1))>=((vt0.c1))))&(v0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN (((v0.c2) ISNULL)))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY (((((v0.c1))>=((vt0.c1))))&(v0.c1)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((vt0.c0 IN ()) IN (((v0.c2) ISNULL)))) ORDER BY (((((v0.c1))>=((vt0.c1))))&(v0.c1)) ASC  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 END)OR(CAST(rt0.c0 AS NUMERIC))))AND(((x'')%(vt0.c1)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 END)OR(CAST(rt0.c0 AS NUMERIC))))AND(((x'')%(vt0.c1)))));
SELECT * FROM vt0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 END)OR(CAST(rt0.c0 AS NUMERIC))))AND(((x'')%(vt0.c1)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 END)OR(CAST(rt0.c0 AS NUMERIC))))AND(((x'')%(vt0.c1)))));
SELECT * FROM vt0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 END)OR(CAST(rt0.c0 AS NUMERIC))))AND(((x'')%(vt0.c1)))) WHERE (vt0.c0);
SELECT * FROM v0, rt0 WHERE (0.9518863920688968) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((0.9518863920688968) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL ASC);
SELECT * FROM v0, rt0 WHERE (0.9518863920688968) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((0.9518863920688968) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL ASC);
SELECT * FROM v0, rt0 WHERE (0.9518863920688968) ORDER BY NULL ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((v0.c1 IN ()))&(((v0.c0)!=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ()))&(((v0.c0)<>(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((v0.c1 IN ()))&(((v0.c0)!=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ()))&(((v0.c0)<>(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((v0.c1 IN ()))&(((v0.c0)!=(rt0.c1)))));
SELECT * FROM v0, rt0 WHERE (((v0.c1) NOT BETWEEN ((rt0.c1 IN (rt0.c1))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((v0.c1) NOT BETWEEN ((rt0.c1 IN (rt0.c1))) AND (NULL))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((v0.c1) NOT BETWEEN ((rt0.c1 IN (rt0.c1))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((v0.c1) NOT BETWEEN ((rt0.c1 IN (rt0.c1))) AND (NULL))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((v0.c1) NOT BETWEEN ((rt0.c1 IN (rt0.c1))) AND (NULL)));
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS TEXT)  WHEN (((v0.c0))<=((v0.c2))) THEN (('0.6677326496476652') NOTNULL) WHEN (NOT (v0.c2)) THEN v0.c0 COLLATE NOCASE WHEN ((v0.c0) ISNULL) THEN (+ (v0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c0 AS TEXT)  WHEN (((v0.c0))<=((v0.c2))) THEN (('0.6677326496476652') NOTNULL) WHEN (NOT (v0.c2)) THEN v0.c0 COLLATE NOCASE WHEN ((v0.c0) ISNULL) THEN (+ (v0.c1)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS TEXT)  WHEN (((v0.c0))<=((v0.c2))) THEN (('0.6677326496476652') NOTNULL) WHEN (NOT (v0.c2)) THEN v0.c0 COLLATE NOCASE WHEN ((v0.c0) ISNULL) THEN (+ (v0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c0 AS TEXT)  WHEN (((v0.c0))<=((v0.c2))) THEN (('0.6677326496476652') NOTNULL) WHEN (NOT (v0.c2)) THEN v0.c0 COLLATE NOCASE WHEN ((v0.c0) ISNULL) THEN (+ (v0.c1)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS TEXT)  WHEN (((v0.c0))<=((v0.c2))) THEN (('0.6677326496476652') NOTNULL) WHEN (NOT (v0.c2)) THEN v0.c0 COLLATE NOCASE WHEN ((v0.c0) ISNULL) THEN (+ (v0.c1)) END);
SELECT * FROM v0 WHERE (CAST(((v0.c1) ISNULL) AS BLOB)) ORDER BY ((v0.c1)-(v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1) ISNULL) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1)-(v0.c0 COLLATE NOCASE)));
SELECT * FROM v0 WHERE (CAST(((v0.c1) ISNULL) AS BLOB)) ORDER BY ((v0.c1)-(v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1) ISNULL) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1)-(v0.c0 COLLATE NOCASE)));
SELECT * FROM v0 WHERE (CAST(((v0.c1) ISNULL) AS BLOB)) ORDER BY ((v0.c1)-(v0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(NULL)))OR(rt0.c1)))AND('-321395082')))OR(rt0.c1)))-(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (((NULL)AND(rt0.c0))) AND (((rt0.c1)<(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(NULL)))OR(rt0.c1)))AND('-321395082')))OR(rt0.c1)))-(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (((NULL)AND(rt0.c0))) AND (((rt0.c1)<(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(NULL)))OR(rt0.c1)))AND('-321395082')))OR(rt0.c1)))-(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (((NULL)AND(rt0.c0))) AND (((rt0.c1)<(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(NULL)))OR(rt0.c1)))AND('-321395082')))OR(rt0.c1)))-(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (((NULL)AND(rt0.c0))) AND (((rt0.c1)<(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(NULL)))OR(rt0.c1)))AND('-321395082')))OR(rt0.c1)))-(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (((NULL)AND(rt0.c0))) AND (((rt0.c1)<(rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 COLLATE RTRIM)<((vt0.c1 IN (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)<((vt0.c1 IN (v0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 COLLATE RTRIM)<((vt0.c1 IN (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)<((vt0.c1 IN (v0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 COLLATE RTRIM)<((vt0.c1 IN (v0.c1)))));
SELECT ALL * FROM v0 WHERE (CASE IFNULL(v0.c0, v0.c1)  WHEN v0.c1 THEN LAST_INSERT_ROWID() WHEN x'6e8a' THEN CASE WHEN '' THEN v0.c0 ELSE v0.c1 END WHEN ((v0.c2)GLOB(v0.c1)) THEN NULL WHEN (+ (v0.c2)) THEN (v0.c0 IN ()) WHEN ((v0.c1)/(v0.c1)) THEN '1958996793' WHEN CAST(v0.c1 AS REAL) THEN ((v0.c2)<=(v0.c2)) WHEN '' COLLATE BINARY THEN (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((0.026452166252186715))) ELSE ((v0.c1)<=(v0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE IFNULL(v0.c0, v0.c1)  WHEN v0.c1 THEN LAST_INSERT_ROWID() WHEN x'6e8a' THEN CASE WHEN '' THEN v0.c0 ELSE v0.c1 END WHEN ((v0.c2)GLOB(v0.c1)) THEN NULL WHEN (+ (v0.c2)) THEN (v0.c0 IN ()) WHEN ((v0.c1)/(v0.c1)) THEN '1958996793' WHEN CAST(v0.c1 AS REAL) THEN ((v0.c2)<=(v0.c2)) WHEN '' COLLATE BINARY THEN (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((0.026452166252186715))) ELSE ((v0.c1)<=(v0.c2)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE IFNULL(v0.c0, v0.c1)  WHEN v0.c1 THEN LAST_INSERT_ROWID() WHEN x'6e8a' THEN CASE WHEN '' THEN v0.c0 ELSE v0.c1 END WHEN ((v0.c2)GLOB(v0.c1)) THEN NULL WHEN (+ (v0.c2)) THEN (v0.c0 IN ()) WHEN ((v0.c1)/(v0.c1)) THEN '1958996793' WHEN CAST(v0.c1 AS REAL) THEN ((v0.c2)<=(v0.c2)) WHEN '' COLLATE BINARY THEN (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((0.026452166252186715))) ELSE ((v0.c1)<=(v0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE IFNULL(v0.c0, v0.c1)  WHEN v0.c1 THEN LAST_INSERT_ROWID() WHEN x'6e8a' THEN CASE WHEN '' THEN v0.c0 ELSE v0.c1 END WHEN ((v0.c2)GLOB(v0.c1)) THEN NULL WHEN (+ (v0.c2)) THEN (v0.c0 IN ()) WHEN ((v0.c1)/(v0.c1)) THEN '1958996793' WHEN CAST(v0.c1 AS REAL) THEN ((v0.c2)<=(v0.c2)) WHEN '' COLLATE BINARY THEN (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((0.026452166252186715))) ELSE ((v0.c1)<=(v0.c2)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE IFNULL(v0.c0, v0.c1)  WHEN v0.c1 THEN LAST_INSERT_ROWID() WHEN x'6e8a' THEN CASE WHEN '' THEN v0.c0 ELSE v0.c1 END WHEN ((v0.c2)GLOB(v0.c1)) THEN NULL WHEN (+ (v0.c2)) THEN (v0.c0 IN ()) WHEN ((v0.c1)/(v0.c1)) THEN '1958996793' WHEN CAST(v0.c1 AS REAL) THEN ((v0.c2)<=(v0.c2)) WHEN '' COLLATE BINARY THEN (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((0.026452166252186715))) ELSE ((v0.c1)<=(v0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF((rt0.c2 IN ()), (+ (rt0.c1)))) ORDER BY HEX(rt0.c0), CAST(((rt0.c1) ISNULL) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((rt0.c2 IN ()), (+ (rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY HEX(rt0.c0), CAST(((rt0.c1) ISNULL) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF((rt0.c2 IN ()), (+ (rt0.c1)))) ORDER BY HEX(rt0.c0), CAST(((rt0.c1) ISNULL) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((rt0.c2 IN ()), (+ (rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY HEX(rt0.c0), CAST(((rt0.c1) ISNULL) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF((rt0.c2 IN ()), (+ (rt0.c1)))) ORDER BY HEX(rt0.c0), CAST(((rt0.c1) ISNULL) AS TEXT) ASC;
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((((((v0.c0)AND(v0.c1)))AND(v0.c0)))AND(rt0.c0)))OR(((rt0.c2)GLOB(v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(v0.c1)))AND(v0.c0)))AND(rt0.c0)))OR(((rt0.c2)GLOB(v0.c1))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((((((v0.c0)AND(v0.c1)))AND(v0.c0)))AND(rt0.c0)))OR(((rt0.c2)GLOB(v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(v0.c1)))AND(v0.c0)))AND(rt0.c0)))OR(((rt0.c2)GLOB(v0.c1))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((((((v0.c0)AND(v0.c1)))AND(v0.c0)))AND(rt0.c0)))OR(((rt0.c2)GLOB(v0.c1)))));
SELECT * FROM v0 WHERE (CAST(((v0.c1) IS FALSE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((v0.c1) IS FALSE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((v0.c1) IS FALSE) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)%(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)%(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)%(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)%(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)%(vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE (((v0.c1 COLLATE RTRIM) NOT NULL)) ORDER BY UPPER(DISTINCT HEX(DISTINCT v0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c1 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY UPPER(DISTINCT HEX(DISTINCT v0.c1)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c1 COLLATE RTRIM) NOT NULL)) ORDER BY UPPER(DISTINCT HEX(DISTINCT v0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c1 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY UPPER(DISTINCT HEX(DISTINCT v0.c1)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c1 COLLATE RTRIM) NOT NULL)) ORDER BY UPPER(DISTINCT HEX(DISTINCT v0.c1)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0) ISNULL) IN (((rt0.c1)IS(rt0.c2)), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))))) ORDER BY CASE ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ABS(DISTINCT rt0.c2) THEN (rt0.c2 IN (rt0.c2, rt0.c2)) WHEN (rt0.c2 IN ()) THEN 0.9178039010201203 WHEN rt0.c0 THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) ELSE rt0.c1 COLLATE RTRIM END  NULLS FIRST, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) ISNULL) IN (((rt0.c1)IS(rt0.c2)), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ABS(DISTINCT rt0.c2) THEN (rt0.c2 IN (rt0.c2, rt0.c2)) WHEN (rt0.c2 IN ()) THEN 0.9178039010201203 WHEN rt0.c0 THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) ELSE rt0.c1 COLLATE RTRIM END  NULLS FIRST, rt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0) ISNULL) IN (((rt0.c1)IS(rt0.c2)), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))))) ORDER BY CASE ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ABS(DISTINCT rt0.c2) THEN (rt0.c2 IN (rt0.c2, rt0.c2)) WHEN (rt0.c2 IN ()) THEN 0.9178039010201203 WHEN rt0.c0 THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) ELSE rt0.c1 COLLATE RTRIM END  NULLS FIRST, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) ISNULL) IN (((rt0.c1)IS(rt0.c2)), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ABS(DISTINCT rt0.c2) THEN (rt0.c2 IN (rt0.c2, rt0.c2)) WHEN (rt0.c2 IN ()) THEN 0.9178039010201203 WHEN rt0.c0 THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) ELSE rt0.c1 COLLATE RTRIM END  NULLS FIRST, rt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0) ISNULL) IN (((rt0.c1)IS(rt0.c2)), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))))) ORDER BY CASE ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ABS(DISTINCT rt0.c2) THEN (rt0.c2 IN (rt0.c2, rt0.c2)) WHEN (rt0.c2 IN ()) THEN 0.9178039010201203 WHEN rt0.c0 THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) ELSE rt0.c1 COLLATE RTRIM END  NULLS FIRST, rt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((x'') ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((x'') ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((x'') ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((x'') ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((x'') ISNULL) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN TRIM(DISTINCT 624763950) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN TRIM(DISTINCT 624763950) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN TRIM(DISTINCT 624763950) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN TRIM(DISTINCT 624763950) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN TRIM(DISTINCT 624763950) END);
SELECT * FROM vt0 INNER JOIN rt0 ON ((((((((((rt0.c0)*(rt0.c0)))AND((rt0.c0 IN ()))))AND(((rt0.c0)LIKE(rt0.c1)))))OR((~ (vt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC))) WHERE (((((vt0.c0)IS NOT(vt0.c1)))LIKE(((vt0.c1)<=(x'd391')))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c1)))LIKE(((vt0.c1)<=(x'd391'))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((((((((rt0.c0)*(rt0.c0)))AND((rt0.c0 IN ()))))AND(((rt0.c0)LIKE(rt0.c1)))))OR((~ (vt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC))));
SELECT * FROM vt0 INNER JOIN rt0 ON ((((((((((rt0.c0)*(rt0.c0)))AND((rt0.c0 IN ()))))AND(((rt0.c0)LIKE(rt0.c1)))))OR((~ (vt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC))) WHERE (((((vt0.c0)IS NOT(vt0.c1)))LIKE(((vt0.c1)<=(x'd391')))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c1)))LIKE(((vt0.c1)<=(x'd391'))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((((((((rt0.c0)*(rt0.c0)))AND((rt0.c0 IN ()))))AND(((rt0.c0)LIKE(rt0.c1)))))OR((~ (vt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC))));
SELECT * FROM vt0 INNER JOIN rt0 ON ((((((((((rt0.c0)*(rt0.c0)))AND((rt0.c0 IN ()))))AND(((rt0.c0)LIKE(rt0.c1)))))OR((~ (vt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC))) WHERE (((((vt0.c0)IS NOT(vt0.c1)))LIKE(((vt0.c1)<=(x'd391')))));
SELECT * FROM rt0 WHERE (((((rt0.c0)>(rt0.c2)))<>(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>(rt0.c2)))<>(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)>(rt0.c2)))<>(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>(rt0.c2)))<>(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)>(rt0.c2)))<>(CAST(rt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN ((((vt0.c1))>=((vt0.c1)))) AND (rt0.c1))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (IFNULL(rt0.c2, rt0.c2)) AND (CASE WHEN '1351345287' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) ASC, CAST((+ (vt0.c1)) AS TEXT) ASC  NULLS LAST, ((((rt0.c0)<<(rt0.c2)))+(CASE rt0.c2  WHEN x'bde5' THEN rt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL)) NOT BETWEEN ((((vt0.c1))>=((vt0.c1)))) AND (rt0.c1))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (IFNULL(rt0.c2, rt0.c2)) AND (CASE WHEN '1351345287' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) ASC, CAST((+ (vt0.c1)) AS TEXT) ASC  NULLS LAST, ((((rt0.c0)<<(rt0.c2)))+(CASE rt0.c2  WHEN x'bde5' THEN rt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN ((((vt0.c1))>=((vt0.c1)))) AND (rt0.c1))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (IFNULL(rt0.c2, rt0.c2)) AND (CASE WHEN '1351345287' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) ASC, CAST((+ (vt0.c1)) AS TEXT) ASC  NULLS LAST, ((((rt0.c0)<<(rt0.c2)))+(CASE rt0.c2  WHEN x'bde5' THEN rt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL)) NOT BETWEEN ((((vt0.c1))>=((vt0.c1)))) AND (rt0.c1))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (IFNULL(rt0.c2, rt0.c2)) AND (CASE WHEN '1351345287' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) ASC, CAST((+ (vt0.c1)) AS TEXT) ASC  NULLS LAST, ((((rt0.c0)<<(rt0.c2)))+(CASE rt0.c2  WHEN x'bde5' THEN rt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN ((((vt0.c1))>=((vt0.c1)))) AND (rt0.c1))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (IFNULL(rt0.c2, rt0.c2)) AND (CASE WHEN '1351345287' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) ASC, CAST((+ (vt0.c1)) AS TEXT) ASC  NULLS LAST, ((((rt0.c0)<<(rt0.c2)))+(CASE rt0.c2  WHEN x'bde5' THEN rt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST;
SELECT * FROM v0, vt0 LEFT OUTER JOIN rt0 ON LAST_INSERT_ROWID() WHERE ((NOT (vt0.c0 COLLATE BINARY))) ORDER BY ((NOT (vt0.c0)) IN ()) ASC, LIKELIHOOD(0x74c3eb39, 0.7301653205286632)  NULLS LAST, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt0 ON LAST_INSERT_ROWID() ORDER BY ((NOT (vt0.c0)) IN ()) ASC, LIKELIHOOD(0x74c3eb39, 0.7301653205286632)  NULLS LAST, NULL ASC);
SELECT * FROM v0, vt0 LEFT OUTER JOIN rt0 ON LAST_INSERT_ROWID() WHERE ((NOT (vt0.c0 COLLATE BINARY))) ORDER BY ((NOT (vt0.c0)) IN ()) ASC, LIKELIHOOD(0x74c3eb39, 0.7301653205286632)  NULLS LAST, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt0 ON LAST_INSERT_ROWID() ORDER BY ((NOT (vt0.c0)) IN ()) ASC, LIKELIHOOD(0x74c3eb39, 0.7301653205286632)  NULLS LAST, NULL ASC);
SELECT * FROM v0, vt0 LEFT OUTER JOIN rt0 ON LAST_INSERT_ROWID() WHERE ((NOT (vt0.c0 COLLATE BINARY))) ORDER BY ((NOT (vt0.c0)) IN ()) ASC, LIKELIHOOD(0x74c3eb39, 0.7301653205286632)  NULLS LAST, NULL ASC;
SELECT ALL * FROM rt0, vt0 WHERE (((ABS(rt0.c1)) BETWEEN (((vt0.c0)<<(vt0.c1))) AND (((rt0.c1) ISNULL)))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c1)) BETWEEN (((vt0.c0)<<(vt0.c1))) AND (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c1);
SELECT ALL * FROM rt0, vt0 WHERE (((ABS(rt0.c1)) BETWEEN (((vt0.c0)<<(vt0.c1))) AND (((rt0.c1) ISNULL)))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c1)) BETWEEN (((vt0.c0)<<(vt0.c1))) AND (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c1);
SELECT ALL * FROM rt0, vt0 WHERE (((ABS(rt0.c1)) BETWEEN (((vt0.c0)<<(vt0.c1))) AND (((rt0.c1) ISNULL)))) ORDER BY vt0.c1;
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'' IN ())) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'' IN ())) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'' IN ())) ORDER BY vt0.c1  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0)))*((('-1878430614') BETWEEN (rt0.c1) AND (vt0.c1)))) WHERE (rt0.c0) ORDER BY CASE ((((rt0.c1)AND(rt0.c1)))AND(vt0.c1))  WHEN rt0.c2 COLLATE RTRIM THEN (NOT (rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0)))*((('-1878430614') BETWEEN (rt0.c1) AND (vt0.c1)))) ORDER BY CASE ((((rt0.c1)AND(rt0.c1)))AND(vt0.c1))  WHEN rt0.c2 COLLATE RTRIM THEN (NOT (rt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0)))*((('-1878430614') BETWEEN (rt0.c1) AND (vt0.c1)))) WHERE (rt0.c0) ORDER BY CASE ((((rt0.c1)AND(rt0.c1)))AND(vt0.c1))  WHEN rt0.c2 COLLATE RTRIM THEN (NOT (rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0)))*((('-1878430614') BETWEEN (rt0.c1) AND (vt0.c1)))) ORDER BY CASE ((((rt0.c1)AND(rt0.c1)))AND(vt0.c1))  WHEN rt0.c2 COLLATE RTRIM THEN (NOT (rt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0)))*((('-1878430614') BETWEEN (rt0.c1) AND (vt0.c1)))) WHERE (rt0.c0) ORDER BY CASE ((((rt0.c1)AND(rt0.c1)))AND(vt0.c1))  WHEN rt0.c2 COLLATE RTRIM THEN (NOT (rt0.c0)) END ASC;
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON CASE (+ (v0.c2))  WHEN CASE rt0.c2  WHEN vt0.c1 THEN v0.c2 END THEN LOWER(DISTINCT rt0.c0) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c2)<=(v0.c2)) WHEN ((rt0.c1) IS FALSE) THEN ((((((((((((v0.c1)OR(vt0.c1)))AND(rt0.c2)))AND(v0.c1)))AND(rt0.c0)))OR(vt0.c0)))OR(v0.c0)) END LEFT OUTER JOIN vt0 ON rt0.c0 WHERE (MIN(v0.c1 COLLATE NOCASE, (v0.c2 IN ()), ((rt0.c0)-(rt0.c1)), ((rt0.c1) BETWEEN (v0.c1) AND (v0.c2)), LTRIM(v0.c1, v0.c1), (v0.c2 IN ()))) ORDER BY ((((((((((rt0.c2) NOT NULL))OR('nI[WY')))AND(((v0.c1) IS TRUE))))AND('-1680154029')))AND(((v0.c0)<=(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(v0.c1 COLLATE NOCASE, (v0.c2 IN ()), ((rt0.c0)-(rt0.c1)), ((rt0.c1) BETWEEN (v0.c1) AND (v0.c2)), LTRIM(v0.c1, v0.c1), (v0.c2 IN ()))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CASE (+ (v0.c2))  WHEN CASE rt0.c2  WHEN vt0.c1 THEN v0.c2 END THEN LOWER(DISTINCT rt0.c0) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c2)<=(v0.c2)) WHEN ((rt0.c1) IS FALSE) THEN ((((((((((((v0.c1)OR(vt0.c1)))AND(rt0.c2)))AND(v0.c1)))AND(rt0.c0)))OR(vt0.c0)))OR(v0.c0)) END LEFT OUTER JOIN vt0 ON rt0.c0 ORDER BY ((((((((((rt0.c2) NOT NULL))OR('nI[WY')))AND(((v0.c1) IS TRUE))))AND('-1680154029')))AND(((v0.c0)<=(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON CASE (+ (v0.c2))  WHEN CASE rt0.c2  WHEN vt0.c1 THEN v0.c2 END THEN LOWER(DISTINCT rt0.c0) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c2)<=(v0.c2)) WHEN ((rt0.c1) IS FALSE) THEN ((((((((((((v0.c1)OR(vt0.c1)))AND(rt0.c2)))AND(v0.c1)))AND(rt0.c0)))OR(vt0.c0)))OR(v0.c0)) END LEFT OUTER JOIN vt0 ON rt0.c0 WHERE (MIN(v0.c1 COLLATE NOCASE, (v0.c2 IN ()), ((rt0.c0)-(rt0.c1)), ((rt0.c1) BETWEEN (v0.c1) AND (v0.c2)), LTRIM(v0.c1, v0.c1), (v0.c2 IN ()))) ORDER BY ((((((((((rt0.c2) NOT NULL))OR('nI[WY')))AND(((v0.c1) IS TRUE))))AND('-1680154029')))AND(((v0.c0)<=(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(v0.c1 COLLATE NOCASE, (v0.c2 IN ()), ((rt0.c0)-(rt0.c1)), ((rt0.c1) BETWEEN (v0.c1) AND (v0.c2)), LTRIM(v0.c1, v0.c1), (v0.c2 IN ()))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CASE (+ (v0.c2))  WHEN CASE rt0.c2  WHEN vt0.c1 THEN v0.c2 END THEN LOWER(DISTINCT rt0.c0) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c2)<=(v0.c2)) WHEN ((rt0.c1) IS FALSE) THEN ((((((((((((v0.c1)OR(vt0.c1)))AND(rt0.c2)))AND(v0.c1)))AND(rt0.c0)))OR(vt0.c0)))OR(v0.c0)) END LEFT OUTER JOIN vt0 ON rt0.c0 ORDER BY ((((((((((rt0.c2) NOT NULL))OR('nI[WY')))AND(((v0.c1) IS TRUE))))AND('-1680154029')))AND(((v0.c0)<=(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON CASE (+ (v0.c2))  WHEN CASE rt0.c2  WHEN vt0.c1 THEN v0.c2 END THEN LOWER(DISTINCT rt0.c0) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c2)<=(v0.c2)) WHEN ((rt0.c1) IS FALSE) THEN ((((((((((((v0.c1)OR(vt0.c1)))AND(rt0.c2)))AND(v0.c1)))AND(rt0.c0)))OR(vt0.c0)))OR(v0.c0)) END LEFT OUTER JOIN vt0 ON rt0.c0 WHERE (MIN(v0.c1 COLLATE NOCASE, (v0.c2 IN ()), ((rt0.c0)-(rt0.c1)), ((rt0.c1) BETWEEN (v0.c1) AND (v0.c2)), LTRIM(v0.c1, v0.c1), (v0.c2 IN ()))) ORDER BY ((((((((((rt0.c2) NOT NULL))OR('nI[WY')))AND(((v0.c1) IS TRUE))))AND('-1680154029')))AND(((v0.c0)<=(rt0.c1))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0)==(vt0.c1)))>>((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(vt0.c1)))>>((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)==(vt0.c1)))>>((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(vt0.c1)))>>((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)==(vt0.c1)))>>((- (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT * FROM v0, rt0 WHERE (CAST(CASE WHEN v0.c1 THEN v0.c1 ELSE rt0.c2 END AS INTEGER)) ORDER BY CAST(ABS(v0.c0) AS BLOB) DESC, NULLIF(DISTINCT ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (v0.c1 IN (v0.c0))) DESC, (NOT ('')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c1 THEN v0.c1 ELSE rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(ABS(v0.c0) AS BLOB) DESC, NULLIF(DISTINCT ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (v0.c1 IN (v0.c0))) DESC, (NOT ('')) DESC);
SELECT * FROM v0, rt0 WHERE (CAST(CASE WHEN v0.c1 THEN v0.c1 ELSE rt0.c2 END AS INTEGER)) ORDER BY CAST(ABS(v0.c0) AS BLOB) DESC, NULLIF(DISTINCT ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (v0.c1 IN (v0.c0))) DESC, (NOT ('')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c1 THEN v0.c1 ELSE rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(ABS(v0.c0) AS BLOB) DESC, NULLIF(DISTINCT ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (v0.c1 IN (v0.c0))) DESC, (NOT ('')) DESC);
SELECT * FROM v0, rt0 WHERE (CAST(CASE WHEN v0.c1 THEN v0.c1 ELSE rt0.c2 END AS INTEGER)) ORDER BY CAST(ABS(v0.c0) AS BLOB) DESC, NULLIF(DISTINCT ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (v0.c1 IN (v0.c0))) DESC, (NOT ('')) DESC;
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c2)AND(vt0.c1)))AND(rt0.c1)) THEN (('')IS NOT(vt0.c1)) ELSE ((((((((((((v0.c0)AND(v0.c1)))OR('-245306260')))OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c1)))OR(rt0.c0)) END WHERE (((CAST(v0.c0 AS NUMERIC))<<(INSTR(vt0.c0, v0.c0)))) ORDER BY ((((((rt0.c2)%(vt0.c0)))OR(v0.c2 COLLATE NOCASE)))AND(CAST(rt0.c1 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))<<(INSTR(vt0.c0, v0.c0)))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c2)AND(vt0.c1)))AND(rt0.c1)) THEN (('')IS NOT(vt0.c1)) ELSE ((((((((((((v0.c0)AND(v0.c1)))OR('-245306260')))OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c1)))OR(rt0.c0)) END ORDER BY ((((((rt0.c2)%(vt0.c0)))OR(v0.c2 COLLATE NOCASE)))AND(CAST(rt0.c1 AS NUMERIC))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c2)AND(vt0.c1)))AND(rt0.c1)) THEN (('')IS NOT(vt0.c1)) ELSE ((((((((((((v0.c0)AND(v0.c1)))OR('-245306260')))OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c1)))OR(rt0.c0)) END WHERE (((CAST(v0.c0 AS NUMERIC))<<(INSTR(vt0.c0, v0.c0)))) ORDER BY ((((((rt0.c2)%(vt0.c0)))OR(v0.c2 COLLATE NOCASE)))AND(CAST(rt0.c1 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))<<(INSTR(vt0.c0, v0.c0)))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c2)AND(vt0.c1)))AND(rt0.c1)) THEN (('')IS NOT(vt0.c1)) ELSE ((((((((((((v0.c0)AND(v0.c1)))OR('-245306260')))OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c1)))OR(rt0.c0)) END ORDER BY ((((((rt0.c2)%(vt0.c0)))OR(v0.c2 COLLATE NOCASE)))AND(CAST(rt0.c1 AS NUMERIC))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c2)AND(vt0.c1)))AND(rt0.c1)) THEN (('')IS NOT(vt0.c1)) ELSE ((((((((((((v0.c0)AND(v0.c1)))OR('-245306260')))OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c1)))OR(rt0.c0)) END WHERE (((CAST(v0.c0 AS NUMERIC))<<(INSTR(vt0.c0, v0.c0)))) ORDER BY ((((((rt0.c2)%(vt0.c0)))OR(v0.c2 COLLATE NOCASE)))AND(CAST(rt0.c1 AS NUMERIC))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((LIKELY(DISTINCT v0.c0))LIKE(((rt0.c0)AND(v0.c0)))) LEFT OUTER JOIN rt0 ON ((NULLIF(0.13317349284827618, 0.8495899119264881)) ISNULL) WHERE (CASE WHEN 0.9831977455091389 THEN NULL COLLATE BINARY WHEN ((rt0.c2) NOT NULL) THEN ((NULL) NOT BETWEEN (v0.c1) AND (rt0.c1)) WHEN ((rt0.c1) BETWEEN (NULL) AND (vt0.c1)) THEN MAX(rt0.c1, rt0.c0, rt0.c1, v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.9831977455091389 THEN NULL COLLATE BINARY WHEN ((rt0.c2) NOT NULL) THEN ((NULL) NOT BETWEEN (v0.c1) AND (rt0.c1)) WHEN ((rt0.c1) BETWEEN (NULL) AND (vt0.c1)) THEN MAX(rt0.c1, rt0.c0, rt0.c1, v0.c0) END) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((LIKELY(DISTINCT v0.c0))LIKE(((rt0.c0)AND(v0.c0)))) LEFT OUTER JOIN rt0 ON ((NULLIF(0.13317349284827618, 0.8495899119264881)) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((LIKELY(DISTINCT v0.c0))LIKE(((rt0.c0)AND(v0.c0)))) LEFT OUTER JOIN rt0 ON ((NULLIF(0.13317349284827618, 0.8495899119264881)) ISNULL) WHERE (CASE WHEN 0.9831977455091389 THEN NULL COLLATE BINARY WHEN ((rt0.c2) NOT NULL) THEN ((NULL) NOT BETWEEN (v0.c1) AND (rt0.c1)) WHEN ((rt0.c1) BETWEEN (NULL) AND (vt0.c1)) THEN MAX(rt0.c1, rt0.c0, rt0.c1, v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.9831977455091389 THEN NULL COLLATE BINARY WHEN ((rt0.c2) NOT NULL) THEN ((NULL) NOT BETWEEN (v0.c1) AND (rt0.c1)) WHEN ((rt0.c1) BETWEEN (NULL) AND (vt0.c1)) THEN MAX(rt0.c1, rt0.c0, rt0.c1, v0.c0) END) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((LIKELY(DISTINCT v0.c0))LIKE(((rt0.c0)AND(v0.c0)))) LEFT OUTER JOIN rt0 ON ((NULLIF(0.13317349284827618, 0.8495899119264881)) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((LIKELY(DISTINCT v0.c0))LIKE(((rt0.c0)AND(v0.c0)))) LEFT OUTER JOIN rt0 ON ((NULLIF(0.13317349284827618, 0.8495899119264881)) ISNULL) WHERE (CASE WHEN 0.9831977455091389 THEN NULL COLLATE BINARY WHEN ((rt0.c2) NOT NULL) THEN ((NULL) NOT BETWEEN (v0.c1) AND (rt0.c1)) WHEN ((rt0.c1) BETWEEN (NULL) AND (vt0.c1)) THEN MAX(rt0.c1, rt0.c0, rt0.c1, v0.c0) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NULL) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((NULL) NOT NULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NULL) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((NULL) NOT NULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NULL) NOT NULL) IN ()));
SELECT * FROM v0 WHERE ((((v0.c0 IN ())) NOT NULL)) ORDER BY ((CAST(v0.c2 AS NUMERIC)) BETWEEN ((((v0.c0))!=((v0.c2)))) AND ((~ (v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c2 AS NUMERIC)) BETWEEN ((((v0.c0))!=((v0.c2)))) AND ((~ (v0.c1))))  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0 IN ())) NOT NULL)) ORDER BY ((CAST(v0.c2 AS NUMERIC)) BETWEEN ((((v0.c0))!=((v0.c2)))) AND ((~ (v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c2 AS NUMERIC)) BETWEEN ((((v0.c0))!=((v0.c2)))) AND ((~ (v0.c1))))  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0 IN ())) NOT NULL)) ORDER BY ((CAST(v0.c2 AS NUMERIC)) BETWEEN ((((v0.c0))!=((v0.c2)))) AND ((~ (v0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (json(((v0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json(((v0.c2) ISNULL))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (json(((v0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json(((v0.c2) ISNULL))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (json(((v0.c2) ISNULL)));
SELECT COUNT(*) FROM v0 WHERE ((((((((((NOT (v0.c1)))OR(((v0.c0) NOTNULL))))AND(((v0.c0)>=(v0.c2)))))OR(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))))AND(((v0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (v0.c1)))OR(((v0.c0) NOTNULL))))AND(((v0.c0)>=(v0.c2)))))OR(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))))AND(((v0.c1) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((((((NOT (v0.c1)))OR(((v0.c0) NOTNULL))))AND(((v0.c0)>=(v0.c2)))))OR(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))))AND(((v0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (v0.c1)))OR(((v0.c0) NOTNULL))))AND(((v0.c0)>=(v0.c2)))))OR(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))))AND(((v0.c1) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((((((NOT (v0.c1)))OR(((v0.c0) NOTNULL))))AND(((v0.c0)>=(v0.c2)))))OR(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))))AND(((v0.c1) NOT NULL))));
SELECT * FROM v0, rt0 WHERE ((NOT (TYPEOF(v0.c1)))) ORDER BY json_remove((rt0.c2 IN ()), UPPER(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (TYPEOF(v0.c1)))) IS TRUE)  as count FROM v0, rt0 ORDER BY json_remove((rt0.c2 IN ()), UPPER(rt0.c0)) DESC);
SELECT * FROM v0, rt0 WHERE ((NOT (TYPEOF(v0.c1)))) ORDER BY json_remove((rt0.c2 IN ()), UPPER(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (TYPEOF(v0.c1)))) IS TRUE)  as count FROM v0, rt0 ORDER BY json_remove((rt0.c2 IN ()), UPPER(rt0.c0)) DESC);
SELECT * FROM v0, rt0 WHERE ((NOT (TYPEOF(v0.c1)))) ORDER BY json_remove((rt0.c2 IN ()), UPPER(rt0.c0)) DESC;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))&(((vt0.c0)<>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))&(((vt0.c0)<>(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))&(((vt0.c0)<>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))&(((vt0.c0)<>(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))&(((vt0.c0)<>(vt0.c1)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON DATETIME(CASE vt0.c1  WHEN rt0.c0 THEN vt0.c0 END, ((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)), vt0.c1, rt0.c1, (~ (vt0.c1))) WHERE (vt0.c1) ORDER BY ((CASE WHEN rt0.c0 THEN '' ELSE rt0.c2 END)LIKE((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON DATETIME(CASE vt0.c1  WHEN rt0.c0 THEN vt0.c0 END, ((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)), vt0.c1, rt0.c1, (~ (vt0.c1))) ORDER BY ((CASE WHEN rt0.c0 THEN '' ELSE rt0.c2 END)LIKE((vt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON DATETIME(CASE vt0.c1  WHEN rt0.c0 THEN vt0.c0 END, ((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)), vt0.c1, rt0.c1, (~ (vt0.c1))) WHERE (vt0.c1) ORDER BY ((CASE WHEN rt0.c0 THEN '' ELSE rt0.c2 END)LIKE((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON DATETIME(CASE vt0.c1  WHEN rt0.c0 THEN vt0.c0 END, ((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)), vt0.c1, rt0.c1, (~ (vt0.c1))) ORDER BY ((CASE WHEN rt0.c0 THEN '' ELSE rt0.c2 END)LIKE((vt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON DATETIME(CASE vt0.c1  WHEN rt0.c0 THEN vt0.c0 END, ((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)), vt0.c1, rt0.c1, (~ (vt0.c1))) WHERE (vt0.c1) ORDER BY ((CASE WHEN rt0.c0 THEN '' ELSE rt0.c2 END)LIKE((vt0.c0 IN ())))  NULLS LAST;
SELECT ALL * FROM vt0, v0, rt0 WHERE (((CASE WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN v0.c1 WHEN NULL THEN rt0.c0 END)GLOB(LIKELY(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN v0.c1 WHEN NULL THEN rt0.c0 END)GLOB(LIKELY(v0.c2)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((CASE WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN v0.c1 WHEN NULL THEN rt0.c0 END)GLOB(LIKELY(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN v0.c1 WHEN NULL THEN rt0.c0 END)GLOB(LIKELY(v0.c2)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((CASE WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN v0.c1 WHEN NULL THEN rt0.c0 END)GLOB(LIKELY(v0.c2))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ('(^');
SELECT SUM(count) FROM (SELECT (('(^') IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ('(^');
SELECT SUM(count) FROM (SELECT (('(^') IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ('(^');
SELECT ALL * FROM vt0, rt0, v0 WHERE (rt0.c2) ORDER BY (((((rt0.c2))==((vt0.c1))))%((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, v0 NOT INDEXED ORDER BY (((((rt0.c2))=((vt0.c1))))%((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (rt0.c2) ORDER BY (((((rt0.c2))==((vt0.c1))))%((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, v0 NOT INDEXED ORDER BY (((((rt0.c2))=((vt0.c1))))%((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (rt0.c2) ORDER BY (((((rt0.c2))==((vt0.c1))))%((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((0.3051218252843131, v0.c2, v0.c0 COLLATE NOCASE))>(((v0.c0 IN ()), LIKELY(v0.c2), ((v0.c0)*(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.3051218252843131, v0.c2, v0.c0 COLLATE NOCASE))>(((v0.c0 IN ()), LIKELY(v0.c2), ((v0.c0)*(v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((0.3051218252843131, v0.c2, v0.c0 COLLATE NOCASE))>(((v0.c0 IN ()), LIKELY(v0.c2), ((v0.c0)*(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.3051218252843131, v0.c2, v0.c0 COLLATE NOCASE))>(((v0.c0 IN ()), LIKELY(v0.c2), ((v0.c0)*(v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((0.3051218252843131, v0.c2, v0.c0 COLLATE NOCASE))>(((v0.c0 IN ()), LIKELY(v0.c2), ((v0.c0)*(v0.c2))))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CASE JULIANDAY(v0.c0, v0.c1, v0.c0)  WHEN ((((vt0.c1)AND(v0.c0)))AND(v0.c0)) THEN NULLIF(vt0.c0, v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE JULIANDAY(v0.c0, v0.c1, v0.c0)  WHEN ((((vt0.c1)AND(v0.c0)))AND(v0.c0)) THEN NULLIF(vt0.c0, v0.c0) END) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CASE JULIANDAY(v0.c0, v0.c1, v0.c0)  WHEN ((((vt0.c1)AND(v0.c0)))AND(v0.c0)) THEN NULLIF(vt0.c0, v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE JULIANDAY(v0.c0, v0.c1, v0.c0)  WHEN ((((vt0.c1)AND(v0.c0)))AND(v0.c0)) THEN NULLIF(vt0.c0, v0.c0) END) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CASE JULIANDAY(v0.c0, v0.c1, v0.c0)  WHEN ((((vt0.c1)AND(v0.c0)))AND(v0.c0)) THEN NULLIF(vt0.c0, v0.c0) END);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON CASE WHEN LOWER(DISTINCT 0.04197066956762996) THEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) WHEN ((x'f14a') NOT BETWEEN (rt0.c1) AND (v0.c2)) THEN ((rt0.c2) IS FALSE) WHEN (((rt0.c2, v0.c0, v0.c2))=((rt0.c0, '', v0.c0))) THEN ((vt0.c0) IS TRUE) END WHERE (((- (rt0.c1)) IN ())) ORDER BY (~ ((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON CASE WHEN LOWER(DISTINCT 0.04197066956762996) THEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) WHEN ((x'f14a') NOT BETWEEN (rt0.c1) AND (v0.c2)) THEN ((rt0.c2) IS FALSE) WHEN (((rt0.c2, v0.c0, v0.c2))==((rt0.c0, '', v0.c0))) THEN ((vt0.c0) IS TRUE) END ORDER BY (~ ((rt0.c2 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON CASE WHEN LOWER(DISTINCT 0.04197066956762996) THEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) WHEN ((x'f14a') NOT BETWEEN (rt0.c1) AND (v0.c2)) THEN ((rt0.c2) IS FALSE) WHEN (((rt0.c2, v0.c0, v0.c2))=((rt0.c0, '', v0.c0))) THEN ((vt0.c0) IS TRUE) END WHERE (((- (rt0.c1)) IN ())) ORDER BY (~ ((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON CASE WHEN LOWER(DISTINCT 0.04197066956762996) THEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) WHEN ((x'f14a') NOT BETWEEN (rt0.c1) AND (v0.c2)) THEN ((rt0.c2) IS FALSE) WHEN (((rt0.c2, v0.c0, v0.c2))==((rt0.c0, '', v0.c0))) THEN ((vt0.c0) IS TRUE) END ORDER BY (~ ((rt0.c2 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON CASE WHEN LOWER(DISTINCT 0.04197066956762996) THEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) WHEN ((x'f14a') NOT BETWEEN (rt0.c1) AND (v0.c2)) THEN ((rt0.c2) IS FALSE) WHEN (((rt0.c2, v0.c0, v0.c2))=((rt0.c0, '', v0.c0))) THEN ((vt0.c0) IS TRUE) END WHERE (((- (rt0.c1)) IN ())) ORDER BY (~ ((rt0.c2 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2) IS TRUE)) ORDER BY (+ (CASE WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN v0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE)) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ (CASE WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN v0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2) IS TRUE)) ORDER BY (+ (CASE WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN v0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE)) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ (CASE WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN v0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2) IS TRUE)) ORDER BY (+ (CASE WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN v0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) DESC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT ALL * FROM vt0, v0 WHERE ('12641017') ORDER BY ((CAST(v0.c2 AS INTEGER))/((((v0.c1, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, '-1551873692', vt0.c0)) AND ((v0.c2, vt0.c0, v0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (('12641017') IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(v0.c2 AS INTEGER))/((((v0.c1, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, '-1551873692', vt0.c0)) AND ((v0.c2, vt0.c0, v0.c1))))) DESC);
SELECT ALL * FROM vt0, v0 WHERE ('12641017') ORDER BY ((CAST(v0.c2 AS INTEGER))/((((v0.c1, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, '-1551873692', vt0.c0)) AND ((v0.c2, vt0.c0, v0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (('12641017') IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(v0.c2 AS INTEGER))/((((v0.c1, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, '-1551873692', vt0.c0)) AND ((v0.c2, vt0.c0, v0.c1))))) DESC);
SELECT ALL * FROM vt0, v0 WHERE ('12641017') ORDER BY ((CAST(v0.c2 AS INTEGER))/((((v0.c1, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, '-1551873692', vt0.c0)) AND ((v0.c2, vt0.c0, v0.c1))))) DESC;
SELECT ALL * FROM rt0, v0 WHERE ((+ (x''))) ORDER BY (~ (CASE '0.7438516569684311'  WHEN rt0.c2 THEN v0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM rt0, v0 ORDER BY (~ (CASE '0.7438516569684311'  WHEN rt0.c2 THEN v0.c1 END)) ASC);
SELECT ALL * FROM rt0, v0 WHERE ((+ (x''))) ORDER BY (~ (CASE '0.7438516569684311'  WHEN rt0.c2 THEN v0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM rt0, v0 ORDER BY (~ (CASE '0.7438516569684311'  WHEN rt0.c2 THEN v0.c1 END)) ASC);
SELECT ALL * FROM rt0, v0 WHERE ((+ (x''))) ORDER BY (~ (CASE '0.7438516569684311'  WHEN rt0.c2 THEN v0.c1 END)) ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE ((((vt0.c1)AND(v0.c0)))AND(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c1 THEN v0.c1 ELSE '-258648338' END THEN ((vt0.c1)IS(vt0.c0)) ELSE json_quote(v0.c2) END) ORDER BY (+ (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c1)AND(v0.c0)))AND(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c1 THEN v0.c1 ELSE '-258648338' END THEN ((vt0.c1)IS(vt0.c0)) ELSE json_quote(v0.c2) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE ((((vt0.c1)AND(v0.c0)))AND(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c1 THEN v0.c1 ELSE '-258648338' END THEN ((vt0.c1)IS(vt0.c0)) ELSE json_quote(v0.c2) END) ORDER BY (+ (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c1)AND(v0.c0)))AND(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c1 THEN v0.c1 ELSE '-258648338' END THEN ((vt0.c1)IS(vt0.c0)) ELSE json_quote(v0.c2) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE ((((vt0.c1)AND(v0.c0)))AND(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c1 THEN v0.c1 ELSE '-258648338' END THEN ((vt0.c1)IS(vt0.c0)) ELSE json_quote(v0.c2) END) ORDER BY (+ (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))));
SELECT * FROM rt0, v0 WHERE (((((((((((v0.c1)OR(rt0.c2)))AND(0.48534354331487894)))OR(v0.c0)))AND(v0.c1)))||(((((rt0.c2)OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c1)OR(rt0.c2)))AND(0.48534354331487894)))OR(v0.c0)))AND(v0.c1)))||(((((rt0.c2)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((((((v0.c1)OR(rt0.c2)))AND(0.48534354331487894)))OR(v0.c0)))AND(v0.c1)))||(((((rt0.c2)OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c1)OR(rt0.c2)))AND(0.48534354331487894)))OR(v0.c0)))AND(v0.c1)))||(((((rt0.c2)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((((((v0.c1)OR(rt0.c2)))AND(0.48534354331487894)))OR(v0.c0)))AND(v0.c1)))||(((((rt0.c2)OR(v0.c0)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c0 COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c0 COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c0 COLLATE BINARY DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((JULIANDAY(rt0.c2, rt0.c0, rt0.c1)))=((((rt0.c2)<<(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((JULIANDAY(rt0.c2, rt0.c0, rt0.c1)))=((((rt0.c2)<<(rt0.c1)))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE ((((JULIANDAY(rt0.c2, rt0.c0, rt0.c1)))=((((rt0.c2)<<(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((JULIANDAY(rt0.c2, rt0.c0, rt0.c1)))=((((rt0.c2)<<(rt0.c1)))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE ((((JULIANDAY(rt0.c2, rt0.c0, rt0.c1)))=((((rt0.c2)<<(rt0.c1))))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c1)%(vt0.c1)) THEN vt0.c0 WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c1)-(vt0.c1)) THEN ((vt0.c1)%(vt0.c0)) ELSE ((NULL) BETWEEN (vt0.c1) AND (vt0.c0)) END) ORDER BY SQLITE_VERSION() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1)%(vt0.c1)) THEN vt0.c0 WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c1)-(vt0.c1)) THEN ((vt0.c1)%(vt0.c0)) ELSE ((NULL) BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_VERSION() DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c1)%(vt0.c1)) THEN vt0.c0 WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c1)-(vt0.c1)) THEN ((vt0.c1)%(vt0.c0)) ELSE ((NULL) BETWEEN (vt0.c1) AND (vt0.c0)) END) ORDER BY SQLITE_VERSION() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1)%(vt0.c1)) THEN vt0.c0 WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c1)-(vt0.c1)) THEN ((vt0.c1)%(vt0.c0)) ELSE ((NULL) BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_VERSION() DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c1)%(vt0.c1)) THEN vt0.c0 WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c1)-(vt0.c1)) THEN ((vt0.c1)%(vt0.c0)) ELSE ((NULL) BETWEEN (vt0.c1) AND (vt0.c0)) END) ORDER BY SQLITE_VERSION() DESC  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((((-7.37892045E8)AND((('ZI(|(T0''')*(v0.c0)))))OR(LIKELIHOOD(v0.c0, 0.78134473146949))) WHERE (CASE WHEN (((vt0.c0, v0.c2, v0.c0, vt0.c1, vt0.c1)) BETWEEN ((v0.c2, x'0594', vt0.c0, vt0.c0, v0.c1)) AND ((NULL, v0.c1, vt0.c1, '-260775783', NULL))) THEN json_array(v0.c1, v0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0, v0.c2, v0.c0, vt0.c1, vt0.c1)) BETWEEN ((v0.c2, x'0594', vt0.c0, vt0.c0, v0.c1)) AND ((NULL, v0.c1, vt0.c1, '-260775783', NULL))) THEN json_array(v0.c1, v0.c1) END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((-7.37892045E8)AND((('ZI(|(T0''')*(v0.c0)))))OR(LIKELIHOOD(v0.c0, 0.78134473146949))));
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((((-7.37892045E8)AND((('ZI(|(T0''')*(v0.c0)))))OR(LIKELIHOOD(v0.c0, 0.78134473146949))) WHERE (CASE WHEN (((vt0.c0, v0.c2, v0.c0, vt0.c1, vt0.c1)) BETWEEN ((v0.c2, x'0594', vt0.c0, vt0.c0, v0.c1)) AND ((NULL, v0.c1, vt0.c1, '-260775783', NULL))) THEN json_array(v0.c1, v0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0, v0.c2, v0.c0, vt0.c1, vt0.c1)) BETWEEN ((v0.c2, x'0594', vt0.c0, vt0.c0, v0.c1)) AND ((NULL, v0.c1, vt0.c1, '-260775783', NULL))) THEN json_array(v0.c1, v0.c1) END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((-7.37892045E8)AND((('ZI(|(T0''')*(v0.c0)))))OR(LIKELIHOOD(v0.c0, 0.78134473146949))));
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((((-7.37892045E8)AND((('ZI(|(T0''')*(v0.c0)))))OR(LIKELIHOOD(v0.c0, 0.78134473146949))) WHERE (CASE WHEN (((vt0.c0, v0.c2, v0.c0, vt0.c1, vt0.c1)) BETWEEN ((v0.c2, x'0594', vt0.c0, vt0.c0, v0.c1)) AND ((NULL, v0.c1, vt0.c1, '-260775783', NULL))) THEN json_array(v0.c1, v0.c1) END);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN ((rt0.c1)=(rt0.c1)) THEN v0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)=(rt0.c1)) THEN v0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN ((rt0.c1)=(rt0.c1)) THEN v0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)=(rt0.c1)) THEN v0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN ((rt0.c1)=(rt0.c1)) THEN v0.c1 COLLATE NOCASE END);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT ((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT ((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT ((~ (vt0.c1)))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)))OR((((v0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))OR('')) WHERE ((((((rt0.c0)OR(rt0.c1)))OR(v0.c2)) IN (((v0.c2) NOT NULL), '0.9817980767035488')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)OR(rt0.c1)))OR(v0.c2)) IN (((v0.c2) NOT NULL), '0.9817980767035488'))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)))OR((((v0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))OR('')));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)))OR((((v0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))OR('')) WHERE ((((((rt0.c0)OR(rt0.c1)))OR(v0.c2)) IN (((v0.c2) NOT NULL), '0.9817980767035488')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)OR(rt0.c1)))OR(v0.c2)) IN (((v0.c2) NOT NULL), '0.9817980767035488'))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)))OR((((v0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))OR('')));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)))OR((((v0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))OR('')) WHERE ((((((rt0.c0)OR(rt0.c1)))OR(v0.c2)) IN (((v0.c2) NOT NULL), '0.9817980767035488')));
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((((((v0.c0)OR(NULL)))OR(NULL)))AND(((vt0.c1)<<(v0.c0)))))OR(((v0.c2)*(vt0.c1))))) ORDER BY (((~ (rt0.c0))) BETWEEN (v0.c1 COLLATE NOCASE) AND (((rt0.c2) NOTNULL))) DESC, (((((vt0.c0, v0.c1, rt0.c2)) BETWEEN ((v0.c2, v0.c1, '>(J꜍')) AND ((rt0.c0, vt0.c0, vt0.c1)))) BETWEEN (((v0.c2)LIKE(v0.c0))) AND (((((v0.c2)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)OR(NULL)))OR(NULL)))AND(((vt0.c1)<<(v0.c0)))))OR(((v0.c2)*(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((~ (rt0.c0))) BETWEEN (v0.c1 COLLATE NOCASE) AND (((rt0.c2) NOTNULL))) DESC, (((((vt0.c0, v0.c1, rt0.c2)) BETWEEN ((v0.c2, v0.c1, '>(J꜍')) AND ((rt0.c0, vt0.c0, vt0.c1)))) BETWEEN (((v0.c2)LIKE(v0.c0))) AND (((((v0.c2)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((((((v0.c0)OR(NULL)))OR(NULL)))AND(((vt0.c1)<<(v0.c0)))))OR(((v0.c2)*(vt0.c1))))) ORDER BY (((~ (rt0.c0))) BETWEEN (v0.c1 COLLATE NOCASE) AND (((rt0.c2) NOTNULL))) DESC, (((((vt0.c0, v0.c1, rt0.c2)) BETWEEN ((v0.c2, v0.c1, '>(J꜍')) AND ((rt0.c0, vt0.c0, vt0.c1)))) BETWEEN (((v0.c2)LIKE(v0.c0))) AND (((((v0.c2)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)OR(NULL)))OR(NULL)))AND(((vt0.c1)<<(v0.c0)))))OR(((v0.c2)*(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((~ (rt0.c0))) BETWEEN (v0.c1 COLLATE NOCASE) AND (((rt0.c2) NOTNULL))) DESC, (((((vt0.c0, v0.c1, rt0.c2)) BETWEEN ((v0.c2, v0.c1, '>(J꜍')) AND ((rt0.c0, vt0.c0, vt0.c1)))) BETWEEN (((v0.c2)LIKE(v0.c0))) AND (((((v0.c2)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((((((v0.c0)OR(NULL)))OR(NULL)))AND(((vt0.c1)<<(v0.c0)))))OR(((v0.c2)*(vt0.c1))))) ORDER BY (((~ (rt0.c0))) BETWEEN (v0.c1 COLLATE NOCASE) AND (((rt0.c2) NOTNULL))) DESC, (((((vt0.c0, v0.c1, rt0.c2)) BETWEEN ((v0.c2, v0.c1, '>(J꜍')) AND ((rt0.c0, vt0.c0, vt0.c1)))) BETWEEN (((v0.c2)LIKE(v0.c0))) AND (((((v0.c2)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((rt0.c1)IS(v0.c0)) COLLATE NOCASE WHERE ((((~ (1.351345287E9))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((~ (1.351345287E9))) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((rt0.c1)IS(v0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((rt0.c1)IS(v0.c0)) COLLATE NOCASE WHERE ((((~ (1.351345287E9))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((~ (1.351345287E9))) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((rt0.c1)IS(v0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((rt0.c1)IS(v0.c0)) COLLATE NOCASE WHERE ((((~ (1.351345287E9))) IS FALSE));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (TOTAL_CHANGES() IN ()) RIGHT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 END)AND((NULL IN ()))) WHERE (0.04197066956762996);
SELECT SUM(count) FROM (SELECT ((0.04197066956762996) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (TOTAL_CHANGES() IN ()) RIGHT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 END)AND((NULL IN ()))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (TOTAL_CHANGES() IN ()) RIGHT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 END)AND((NULL IN ()))) WHERE (0.04197066956762996);
SELECT SUM(count) FROM (SELECT ((0.04197066956762996) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (TOTAL_CHANGES() IN ()) RIGHT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 END)AND((NULL IN ()))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (TOTAL_CHANGES() IN ()) RIGHT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 END)AND((NULL IN ()))) WHERE (0.04197066956762996);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(v0.c0)))AND(rt0.c0 COLLATE BINARY)) WHERE ((((v0.c2 IN (v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN (v0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(v0.c0)))AND(rt0.c0 COLLATE BINARY)));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(v0.c0)))AND(rt0.c0 COLLATE BINARY)) WHERE ((((v0.c2 IN (v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN (v0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(v0.c0)))AND(rt0.c0 COLLATE BINARY)));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(v0.c0)))AND(rt0.c0 COLLATE BINARY)) WHERE ((((v0.c2 IN (v0.c0))) ISNULL));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((CASE vt0.c0  WHEN v0.c1 THEN v0.c1 WHEN rt0.c0 THEN v0.c1 WHEN vt0.c1 THEN rt0.c0 END)AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))))OR((((rt0.c0))=((0Xffffffffc362f19e)))))) ORDER BY (~ (CAST(vt0.c1 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN v0.c1 THEN v0.c1 WHEN rt0.c0 THEN v0.c1 WHEN vt0.c1 THEN rt0.c0 END)AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))))OR((((rt0.c0))==((0Xffffffffc362f19e)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (~ (CAST(vt0.c1 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((CASE vt0.c0  WHEN v0.c1 THEN v0.c1 WHEN rt0.c0 THEN v0.c1 WHEN vt0.c1 THEN rt0.c0 END)AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))))OR((((rt0.c0))=((0Xffffffffc362f19e)))))) ORDER BY (~ (CAST(vt0.c1 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN v0.c1 THEN v0.c1 WHEN rt0.c0 THEN v0.c1 WHEN vt0.c1 THEN rt0.c0 END)AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))))OR((((rt0.c0))==((0Xffffffffc362f19e)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (~ (CAST(vt0.c1 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((CASE vt0.c0  WHEN v0.c1 THEN v0.c1 WHEN rt0.c0 THEN v0.c1 WHEN vt0.c1 THEN rt0.c0 END)AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))))OR((((rt0.c0))=((0Xffffffffc362f19e)))))) ORDER BY (~ (CAST(vt0.c1 AS REAL)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)||(rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt0.c1 END) AND (((vt0.c1) BETWEEN (0.12311558728148442) AND (vt0.c1))))) ORDER BY ((((((rt0.c1)AND(vt0.c1)))AND(vt0.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt0.c1 END) AND (((vt0.c1) BETWEEN (0.12311558728148442) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1)AND(vt0.c1)))AND(vt0.c1))) IS TRUE) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)||(rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt0.c1 END) AND (((vt0.c1) BETWEEN (0.12311558728148442) AND (vt0.c1))))) ORDER BY ((((((rt0.c1)AND(vt0.c1)))AND(vt0.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt0.c1 END) AND (((vt0.c1) BETWEEN (0.12311558728148442) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1)AND(vt0.c1)))AND(vt0.c1))) IS TRUE) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)||(rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt0.c1 END) AND (((vt0.c1) BETWEEN (0.12311558728148442) AND (vt0.c1))))) ORDER BY ((((((rt0.c1)AND(vt0.c1)))AND(vt0.c1))) IS TRUE) ASC;
SELECT * FROM v0 WHERE (0Xfffffffffffe50c8 COLLATE RTRIM) ORDER BY (((('-260775783')>=(v0.c2))) BETWEEN (v0.c2 COLLATE NOCASE) AND (CASE v0.c2  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0Xfffffffffffe50c8 COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (((('-260775783')>=(v0.c2))) BETWEEN (v0.c2 COLLATE NOCASE) AND (CASE v0.c2  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)) DESC);
SELECT * FROM v0 WHERE (0Xfffffffffffe50c8 COLLATE RTRIM) ORDER BY (((('-260775783')>=(v0.c2))) BETWEEN (v0.c2 COLLATE NOCASE) AND (CASE v0.c2  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0Xfffffffffffe50c8 COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (((('-260775783')>=(v0.c2))) BETWEEN (v0.c2 COLLATE NOCASE) AND (CASE v0.c2  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)) DESC);
SELECT * FROM v0 WHERE (0Xfffffffffffe50c8 COLLATE RTRIM) ORDER BY (((('-260775783')>=(v0.c2))) BETWEEN (v0.c2 COLLATE NOCASE) AND (CASE v0.c2  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)) DESC;
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 END)AND(CAST(rt0.c2 AS NUMERIC))) WHERE (((((v0.c2)||(-1.016925794E9))) IS TRUE)) ORDER BY CASE ((vt0.c1)=(vt0.c0))  WHEN ((rt0.c1)>=(rt0.c2)) THEN ((v0.c0) NOTNULL) ELSE (rt0.c1 IN (v0.c0)) END, ((((TRIM(DISTINCT vt0.c0))AND((((v0.c2))>=((v0.c2))))))AND(v0.c0 COLLATE RTRIM))  NULLS LAST, (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)||(-1.016925794E9))) IS TRUE)) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 END)AND(CAST(rt0.c2 AS NUMERIC))) ORDER BY CASE ((vt0.c1)=(vt0.c0))  WHEN ((rt0.c1)>=(rt0.c2)) THEN ((v0.c0) NOTNULL) ELSE (rt0.c1 IN (v0.c0)) END, ((((TRIM(DISTINCT vt0.c0))AND((((v0.c2))>=((v0.c2))))))AND(v0.c0 COLLATE RTRIM))  NULLS LAST, (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) IN ()));
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 END)AND(CAST(rt0.c2 AS NUMERIC))) WHERE (((((v0.c2)||(-1.016925794E9))) IS TRUE)) ORDER BY CASE ((vt0.c1)=(vt0.c0))  WHEN ((rt0.c1)>=(rt0.c2)) THEN ((v0.c0) NOTNULL) ELSE (rt0.c1 IN (v0.c0)) END, ((((TRIM(DISTINCT vt0.c0))AND((((v0.c2))>=((v0.c2))))))AND(v0.c0 COLLATE RTRIM))  NULLS LAST, (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)||(-1.016925794E9))) IS TRUE)) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 END)AND(CAST(rt0.c2 AS NUMERIC))) ORDER BY CASE ((vt0.c1)=(vt0.c0))  WHEN ((rt0.c1)>=(rt0.c2)) THEN ((v0.c0) NOTNULL) ELSE (rt0.c1 IN (v0.c0)) END, ((((TRIM(DISTINCT vt0.c0))AND((((v0.c2))>=((v0.c2))))))AND(v0.c0 COLLATE RTRIM))  NULLS LAST, (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) IN ()));
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 END)AND(CAST(rt0.c2 AS NUMERIC))) WHERE (((((v0.c2)||(-1.016925794E9))) IS TRUE)) ORDER BY CASE ((vt0.c1)=(vt0.c0))  WHEN ((rt0.c1)>=(rt0.c2)) THEN ((v0.c0) NOTNULL) ELSE (rt0.c1 IN (v0.c0)) END, ((((TRIM(DISTINCT vt0.c0))AND((((v0.c2))>=((v0.c2))))))AND(v0.c0 COLLATE RTRIM))  NULLS LAST, (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) IN ());
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY ((vt0.c1)>(CAST(vt0.c1 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)>(CAST(vt0.c1 AS REAL)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY ((vt0.c1)>(CAST(vt0.c1 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)>(CAST(vt0.c1 AS REAL)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY ((vt0.c1)>(CAST(vt0.c1 AS REAL)))  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((v0.c2, v0.c2, v0.c2)) BETWEEN ((v0.c1 COLLATE BINARY, ((v0.c0)/(v0.c2)), ((v0.c0)|(v0.c1)))) AND ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END, ((v0.c1)<(v0.c0)), (NOT (v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((v0.c2, v0.c2, v0.c2)) BETWEEN ((v0.c1 COLLATE BINARY, ((v0.c0)/(v0.c2)), ((v0.c0)|(v0.c1)))) AND ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END, ((v0.c1)<(v0.c0)), (NOT (v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c2, v0.c2, v0.c2)) BETWEEN ((v0.c1 COLLATE BINARY, ((v0.c0)/(v0.c2)), ((v0.c0)|(v0.c1)))) AND ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END, ((v0.c1)<(v0.c0)), (NOT (v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((v0.c2, v0.c2, v0.c2)) BETWEEN ((v0.c1 COLLATE BINARY, ((v0.c0)/(v0.c2)), ((v0.c0)|(v0.c1)))) AND ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END, ((v0.c1)<(v0.c0)), (NOT (v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c2, v0.c2, v0.c2)) BETWEEN ((v0.c1 COLLATE BINARY, ((v0.c0)/(v0.c2)), ((v0.c0)|(v0.c1)))) AND ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END, ((v0.c1)<(v0.c0)), (NOT (v0.c2))))));
SELECT * FROM rt0 WHERE ((-260775783 IN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), (NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((-260775783 IN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), (NOT (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((-260775783 IN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), (NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((-260775783 IN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), (NOT (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((-260775783 IN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), (NOT (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((((((((vt0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt0.c1))))OR(((vt0.c1)GLOB(v0.c2)))))OR(((vt0.c1)<>(vt0.c1)))))AND(((v0.c0)AND(rt0.c1)))))AND(PRINTF(v0.c0, v0.c1, rt0.c0))) INNER JOIN vt0 ON v0.c2 WHERE (((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))) BETWEEN (((v0.c1)<(rt0.c1))) AND ('')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))) BETWEEN (((v0.c1)<(rt0.c1))) AND (''))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((((((((vt0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt0.c1))))OR(((vt0.c1)GLOB(v0.c2)))))OR(((vt0.c1)!=(vt0.c1)))))AND(((v0.c0)AND(rt0.c1)))))AND(PRINTF(v0.c0, v0.c1, rt0.c0))) INNER JOIN vt0 ON v0.c2);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((((((((vt0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt0.c1))))OR(((vt0.c1)GLOB(v0.c2)))))OR(((vt0.c1)<>(vt0.c1)))))AND(((v0.c0)AND(rt0.c1)))))AND(PRINTF(v0.c0, v0.c1, rt0.c0))) INNER JOIN vt0 ON v0.c2 WHERE (((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))) BETWEEN (((v0.c1)<(rt0.c1))) AND ('')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))) BETWEEN (((v0.c1)<(rt0.c1))) AND (''))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((((((((vt0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt0.c1))))OR(((vt0.c1)GLOB(v0.c2)))))OR(((vt0.c1)!=(vt0.c1)))))AND(((v0.c0)AND(rt0.c1)))))AND(PRINTF(v0.c0, v0.c1, rt0.c0))) INNER JOIN vt0 ON v0.c2);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((((((((vt0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt0.c1))))OR(((vt0.c1)GLOB(v0.c2)))))OR(((vt0.c1)<>(vt0.c1)))))AND(((v0.c0)AND(rt0.c1)))))AND(PRINTF(v0.c0, v0.c1, rt0.c0))) INNER JOIN vt0 ON v0.c2 WHERE (((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))) BETWEEN (((v0.c1)<(rt0.c1))) AND ('')));
SELECT ALL * FROM rt0, v0 WHERE (((CAST(rt0.c2 AS BLOB)) BETWEEN (((rt0.c2)%(rt0.c1))) AND (((rt0.c2)<(v0.c2))))) ORDER BY (NOT (((rt0.c0)LIKE(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB)) BETWEEN (((rt0.c2)%(rt0.c1))) AND (((rt0.c2)<(v0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (((rt0.c0)LIKE(v0.c1))))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((CAST(rt0.c2 AS BLOB)) BETWEEN (((rt0.c2)%(rt0.c1))) AND (((rt0.c2)<(v0.c2))))) ORDER BY (NOT (((rt0.c0)LIKE(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB)) BETWEEN (((rt0.c2)%(rt0.c1))) AND (((rt0.c2)<(v0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (((rt0.c0)LIKE(v0.c1))))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((CAST(rt0.c2 AS BLOB)) BETWEEN (((rt0.c2)%(rt0.c1))) AND (((rt0.c2)<(v0.c2))))) ORDER BY (NOT (((rt0.c0)LIKE(v0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((+ (NULL))) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(vt0.c1)))AND(rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY ((((vt0.c0)<<(rt0.c1))) BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))) AND (NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (NULL))) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(vt0.c1)))AND(rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)<<(rt0.c1))) BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))) AND (NULL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((+ (NULL))) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(vt0.c1)))AND(rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY ((((vt0.c0)<<(rt0.c1))) BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))) AND (NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (NULL))) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(vt0.c1)))AND(rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)<<(rt0.c1))) BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))) AND (NULL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((+ (NULL))) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(vt0.c1)))AND(rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY ((((vt0.c0)<<(rt0.c1))) BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))) AND (NULL)) ASC  NULLS LAST;
SELECT ALL * FROM rt0 NOT INDEXED, vt0, v0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY (((((v0.c0 IN ()))AND(((((rt0.c0)OR(0.8495899119264881)))OR(rt0.c0)))))OR('-63189347')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((((v0.c0 IN ()))AND(((((rt0.c0)OR(0.8495899119264881)))OR(rt0.c0)))))OR('-63189347')) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED, vt0, v0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY (((((v0.c0 IN ()))AND(((((rt0.c0)OR(0.8495899119264881)))OR(rt0.c0)))))OR('-63189347')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((((v0.c0 IN ()))AND(((((rt0.c0)OR(0.8495899119264881)))OR(rt0.c0)))))OR('-63189347')) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED, vt0, v0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY (((((v0.c0 IN ()))AND(((((rt0.c0)OR(0.8495899119264881)))OR(rt0.c0)))))OR('-63189347')) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c1)OR(vt0.c1)) END;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c1)OR(vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c1)OR(vt0.c1)) END;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c1)OR(vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c1)OR(vt0.c1)) END;
SELECT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c0)))OR(NULL)))AND(vt0.c1)))AND(vt0.c0))) AND (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c0)))OR(NULL)))AND(vt0.c1)))AND(vt0.c0))) AND (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c0)))OR(NULL)))AND(vt0.c1)))AND(vt0.c0))) AND (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c0)))OR(NULL)))AND(vt0.c1)))AND(vt0.c0))) AND (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c0)))OR(NULL)))AND(vt0.c1)))AND(vt0.c0))) AND (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((v0.c1)%(vt0.c0)))) AND ((CASE WHEN v0.c1 THEN v0.c0 END)))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((v0.c1)%(vt0.c0)))) AND ((CASE WHEN v0.c1 THEN v0.c0 END)))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((v0.c1)%(vt0.c0)))) AND ((CASE WHEN v0.c1 THEN v0.c0 END)))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((v0.c1)%(vt0.c0)))) AND ((CASE WHEN v0.c1 THEN v0.c0 END)))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((v0.c1)%(vt0.c0)))) AND ((CASE WHEN v0.c1 THEN v0.c0 END)))) ORDER BY v0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (json_array(vt0.c1, vt0.c0 COLLATE NOCASE, NULL, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, TOTAL_CHANGES()));
SELECT SUM(count) FROM (SELECT ALL ((json_array(vt0.c1, vt0.c0 COLLATE NOCASE, NULL, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, TOTAL_CHANGES())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_array(vt0.c1, vt0.c0 COLLATE NOCASE, NULL, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, TOTAL_CHANGES()));
SELECT SUM(count) FROM (SELECT ALL ((json_array(vt0.c1, vt0.c0 COLLATE NOCASE, NULL, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, TOTAL_CHANGES())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_array(vt0.c1, vt0.c0 COLLATE NOCASE, NULL, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, TOTAL_CHANGES()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c2 AS NUMERIC)) ORDER BY (((rt0.c1 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c2 AS NUMERIC)) ORDER BY (((rt0.c1 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c2 AS NUMERIC)) ORDER BY (((rt0.c1 IN ())) IS TRUE);
SELECT * FROM vt0 WHERE (CASE ('213716522' IN (vt0.c0))  WHEN (+ (vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c1)) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0))) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ('213716522' IN (vt0.c0))  WHEN (+ (vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c1)) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0))) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE ('213716522' IN (vt0.c0))  WHEN (+ (vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c1)) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0))) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ('213716522' IN (vt0.c0))  WHEN (+ (vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c1)) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0))) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE ('213716522' IN (vt0.c0))  WHEN (+ (vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c1)) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0))) AS NUMERIC)  NULLS FIRST;
SELECT * FROM v0, rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (x'');
SELECT ALL * FROM v0, rt0 WHERE ((((((- (rt0.c2)))AND(rt0.c2)))AND((((rt0.c1))<((v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c2)))AND(rt0.c2)))AND((((rt0.c1))<((v0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((- (rt0.c2)))AND(rt0.c2)))AND((((rt0.c1))<((v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c2)))AND(rt0.c2)))AND((((rt0.c1))<((v0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((- (rt0.c2)))AND(rt0.c2)))AND((((rt0.c1))<((v0.c2))))));
SELECT ALL * FROM vt0, rt0, v0 WHERE ((+ (rt0.c2 COLLATE BINARY))) ORDER BY (((rt0.c1 IN (vt0.c1)))GLOB((rt0.c1 IN ()))), ((((rt0.c0) IS TRUE))-((v0.c2 IN (vt0.c0)))) DESC  NULLS FIRST, ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((rt0.c1 IN (vt0.c1)))GLOB((rt0.c1 IN ()))), ((((rt0.c0) IS TRUE))-((v0.c2 IN (vt0.c0)))) DESC  NULLS FIRST, ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((+ (rt0.c2 COLLATE BINARY))) ORDER BY (((rt0.c1 IN (vt0.c1)))GLOB((rt0.c1 IN ()))), ((((rt0.c0) IS TRUE))-((v0.c2 IN (vt0.c0)))) DESC  NULLS FIRST, ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((rt0.c1 IN (vt0.c1)))GLOB((rt0.c1 IN ()))), ((((rt0.c0) IS TRUE))-((v0.c2 IN (vt0.c0)))) DESC  NULLS FIRST, ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((+ (rt0.c2 COLLATE BINARY))) ORDER BY (((rt0.c1 IN (vt0.c1)))GLOB((rt0.c1 IN ()))), ((((rt0.c0) IS TRUE))-((v0.c2 IN (vt0.c0)))) DESC  NULLS FIRST, ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (~ ((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))))) WHERE (((v0.c0)<(vt0.c0))) ORDER BY ((LOWER(DISTINCT vt0.c1)) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<(vt0.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (~ ((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))))) ORDER BY ((LOWER(DISTINCT vt0.c1)) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (~ ((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))))) WHERE (((v0.c0)<(vt0.c0))) ORDER BY ((LOWER(DISTINCT vt0.c1)) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<(vt0.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (~ ((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))))) ORDER BY ((LOWER(DISTINCT vt0.c1)) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (~ ((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))))) WHERE (((v0.c0)<(vt0.c0))) ORDER BY ((LOWER(DISTINCT vt0.c1)) NOT NULL) ASC  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (CASE WHEN (v0.c2 IN ()) THEN (((v0.c2, v0.c1, v0.c0))==((vt0.c1, vt0.c0, v0.c2))) END) ORDER BY '-2098550881' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c2 IN ()) THEN (((v0.c2, v0.c1, v0.c0))==((vt0.c1, vt0.c0, v0.c2))) END) IS TRUE)  as count FROM vt0, v0 ORDER BY '-2098550881' ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (CASE WHEN (v0.c2 IN ()) THEN (((v0.c2, v0.c1, v0.c0))==((vt0.c1, vt0.c0, v0.c2))) END) ORDER BY '-2098550881' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c2 IN ()) THEN (((v0.c2, v0.c1, v0.c0))==((vt0.c1, vt0.c0, v0.c2))) END) IS TRUE)  as count FROM vt0, v0 ORDER BY '-2098550881' ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (CASE WHEN (v0.c2 IN ()) THEN (((v0.c2, v0.c1, v0.c0))==((vt0.c1, vt0.c0, v0.c2))) END) ORDER BY '-2098550881' ASC  NULLS LAST;
SELECT * FROM v0, rt0, vt0 WHERE (CASE WHEN (((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, v0.c1)) AND ((rt0.c2, v0.c2, rt0.c1))) THEN RTRIM(v0.c0) END) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c2)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, v0.c1)) AND ((rt0.c2, v0.c2, rt0.c1))) THEN RTRIM(v0.c0) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c2)) AS TEXT) ASC);
SELECT * FROM v0, rt0, vt0 WHERE (CASE WHEN (((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, v0.c1)) AND ((rt0.c2, v0.c2, rt0.c1))) THEN RTRIM(v0.c0) END) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c2)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, v0.c1)) AND ((rt0.c2, v0.c2, rt0.c1))) THEN RTRIM(v0.c0) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c2)) AS TEXT) ASC);
SELECT * FROM v0, rt0, vt0 WHERE (CASE WHEN (((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, v0.c1)) AND ((rt0.c2, v0.c2, rt0.c1))) THEN RTRIM(v0.c0) END) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c2)) AS TEXT) ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE ((CAST(v0.c1 AS BLOB) IN ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c1 AS BLOB) IN ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((CAST(v0.c1 AS BLOB) IN ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c1 AS BLOB) IN ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((CAST(v0.c1 AS BLOB) IN ((NOT (vt0.c1)))));
SELECT ALL * FROM v0, rt0 WHERE ('?ak83}5') ORDER BY ((((((v0.c0, v0.c2, v0.c1, rt0.c0, ''))<((0.7522660325896237, NULL, rt0.c1, rt0.c0, v0.c2)))))<>(((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND (('529347057')))))) DESC;
SELECT SUM(count) FROM (SELECT (('?ak83}5') IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((v0.c0, v0.c2, v0.c1, rt0.c0, ''))<((0.7522660325896237, NULL, rt0.c1, rt0.c0, v0.c2)))))<>(((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND (('529347057')))))) DESC);
SELECT ALL * FROM v0, rt0 WHERE ('?ak83}5') ORDER BY ((((((v0.c0, v0.c2, v0.c1, rt0.c0, ''))<((0.7522660325896237, NULL, rt0.c1, rt0.c0, v0.c2)))))<>(((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND (('529347057')))))) DESC;
SELECT SUM(count) FROM (SELECT (('?ak83}5') IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((v0.c0, v0.c2, v0.c1, rt0.c0, ''))<((0.7522660325896237, NULL, rt0.c1, rt0.c0, v0.c2)))))<>(((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND (('529347057')))))) DESC);
SELECT ALL * FROM v0, rt0 WHERE ('?ak83}5') ORDER BY ((((((v0.c0, v0.c2, v0.c1, rt0.c0, ''))<((0.7522660325896237, NULL, rt0.c1, rt0.c0, v0.c2)))))<>(((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND (('529347057')))))) DESC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c0, v0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, ABS(v0.c1), ((v0.c0)>=(NULL)))) AND ((v0.c1 COLLATE NOCASE, CAST(v0.c1 AS TEXT), ((vt0.c0)IS NOT(v0.c2))))) WHERE (((+ (x'')) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (x'')) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c0, v0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, ABS(v0.c1), ((v0.c0)>=(NULL)))) AND ((v0.c1 COLLATE NOCASE, CAST(v0.c1 AS TEXT), ((vt0.c0)IS NOT(v0.c2))))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c0, v0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, ABS(v0.c1), ((v0.c0)>=(NULL)))) AND ((v0.c1 COLLATE NOCASE, CAST(v0.c1 AS TEXT), ((vt0.c0)IS NOT(v0.c2))))) WHERE (((+ (x'')) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (x'')) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c0, v0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, ABS(v0.c1), ((v0.c0)>=(NULL)))) AND ((v0.c1 COLLATE NOCASE, CAST(v0.c1 AS TEXT), ((vt0.c0)IS NOT(v0.c2))))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c0, v0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, ABS(v0.c1), ((v0.c0)>=(NULL)))) AND ((v0.c1 COLLATE NOCASE, CAST(v0.c1 AS TEXT), ((vt0.c0)IS NOT(v0.c2))))) WHERE (((+ (x'')) IN ()));
SELECT * FROM vt0 WHERE (((ABS(vt0.c1))<>(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((ABS(vt0.c1))<>(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((ABS(vt0.c1))<>(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((ABS(vt0.c1))<>(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((ABS(vt0.c1))<>(CAST(vt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('\86RY쓳keo') ORDER BY (((((vt0.c0)=(rt0.c1))))<>(((((vt0.c0))<=((vt0.c1))))))  NULLS FIRST, (((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN (((('hwzNhx^쾷')*(rt0.c2)), (rt0.c2 IN ()), CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) AND ((TYPEOF(DISTINCT x''), CAST(rt0.c2 AS BLOB), 'NI[WY'))) ASC  NULLS FIRST, CAST(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (('\86RY쓳keo') IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((vt0.c0)==(rt0.c1))))<>(((((vt0.c0))<=((vt0.c1))))))  NULLS FIRST, (((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN (((('hwzNhx^쾷')*(rt0.c2)), (rt0.c2 IN ()), CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) AND ((TYPEOF(DISTINCT x''), CAST(rt0.c2 AS BLOB), 'NI[WY'))) ASC  NULLS FIRST, CAST(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('\86RY쓳keo') ORDER BY (((((vt0.c0)=(rt0.c1))))<>(((((vt0.c0))<=((vt0.c1))))))  NULLS FIRST, (((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN (((('hwzNhx^쾷')*(rt0.c2)), (rt0.c2 IN ()), CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) AND ((TYPEOF(DISTINCT x''), CAST(rt0.c2 AS BLOB), 'NI[WY'))) ASC  NULLS FIRST, CAST(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (('\86RY쓳keo') IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((vt0.c0)==(rt0.c1))))<>(((((vt0.c0))<=((vt0.c1))))))  NULLS FIRST, (((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN (((('hwzNhx^쾷')*(rt0.c2)), (rt0.c2 IN ()), CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) AND ((TYPEOF(DISTINCT x''), CAST(rt0.c2 AS BLOB), 'NI[WY'))) ASC  NULLS FIRST, CAST(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('\86RY쓳keo') ORDER BY (((((vt0.c0)=(rt0.c1))))<>(((((vt0.c0))<=((vt0.c1))))))  NULLS FIRST, (((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN (((('hwzNhx^쾷')*(rt0.c2)), (rt0.c2 IN ()), CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) AND ((TYPEOF(DISTINCT x''), CAST(rt0.c2 AS BLOB), 'NI[WY'))) ASC  NULLS FIRST, CAST(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) AS INTEGER);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((~ (v0.c1))) NOT NULL)) ORDER BY (((0.8110991266444693)%(v0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c1))) NOT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((0.8110991266444693)%(v0.c2)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((~ (v0.c1))) NOT NULL)) ORDER BY (((0.8110991266444693)%(v0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c1))) NOT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((0.8110991266444693)%(v0.c2)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((~ (v0.c1))) NOT NULL)) ORDER BY (((0.8110991266444693)%(v0.c2)) IN ())  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c1))) AND (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS REAL)) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c1))) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c1))) AND (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS REAL)) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c1))) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c1))) AND (((rt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON v0.c2 WHERE (LIKELY(DISTINCT ((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON v0.c2);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON v0.c2 WHERE (LIKELY(DISTINCT ((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON v0.c2);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON v0.c2 WHERE (LIKELY(DISTINCT ((vt0.c0) IS TRUE)));
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE WHEN (((rt0.c2))<=((rt0.c2))) THEN CASE rt0.c2  WHEN v0.c0 THEN v0.c2 ELSE rt0.c1 END ELSE SQLITE_SOURCE_ID() END) ORDER BY (((vt0.c1 IN ()))<<(CASE WHEN v0.c0 THEN v0.c2 END))  NULLS LAST, ((((((((v0.c0)AND((rt0.c1 IN ()))))AND(((v0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)))))OR(((((v0.c0)AND(v0.c0)))AND(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2))<=((rt0.c2))) THEN CASE rt0.c2  WHEN v0.c0 THEN v0.c2 ELSE rt0.c1 END ELSE SQLITE_SOURCE_ID() END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((vt0.c1 IN ()))<<(CASE WHEN v0.c0 THEN v0.c2 END))  NULLS LAST, ((((((((v0.c0)AND((rt0.c1 IN ()))))AND(((v0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)))))OR(((((v0.c0)AND(v0.c0)))AND(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE WHEN (((rt0.c2))<=((rt0.c2))) THEN CASE rt0.c2  WHEN v0.c0 THEN v0.c2 ELSE rt0.c1 END ELSE SQLITE_SOURCE_ID() END) ORDER BY (((vt0.c1 IN ()))<<(CASE WHEN v0.c0 THEN v0.c2 END))  NULLS LAST, ((((((((v0.c0)AND((rt0.c1 IN ()))))AND(((v0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)))))OR(((((v0.c0)AND(v0.c0)))AND(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2))<=((rt0.c2))) THEN CASE rt0.c2  WHEN v0.c0 THEN v0.c2 ELSE rt0.c1 END ELSE SQLITE_SOURCE_ID() END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((vt0.c1 IN ()))<<(CASE WHEN v0.c0 THEN v0.c2 END))  NULLS LAST, ((((((((v0.c0)AND((rt0.c1 IN ()))))AND(((v0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)))))OR(((((v0.c0)AND(v0.c0)))AND(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE WHEN (((rt0.c2))<=((rt0.c2))) THEN CASE rt0.c2  WHEN v0.c0 THEN v0.c2 ELSE rt0.c1 END ELSE SQLITE_SOURCE_ID() END) ORDER BY (((vt0.c1 IN ()))<<(CASE WHEN v0.c0 THEN v0.c2 END))  NULLS LAST, ((((((((v0.c0)AND((rt0.c1 IN ()))))AND(((v0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)))))OR(((((v0.c0)AND(v0.c0)))AND(rt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((('gk')==(((vt0.c0)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('gk')=(((vt0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM rt0, v0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((('gk')==(((vt0.c0)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('gk')=(((vt0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM rt0, v0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((('gk')==(((vt0.c0)GLOB(vt0.c1)))));
SELECT ALL * FROM v0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 END)LIKE(((0X7e4ccd07)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 END)LIKE(((0x7e4ccd07)<<(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 END)LIKE(((0X7e4ccd07)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 END)LIKE(((0x7e4ccd07)<<(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 END)LIKE(((0X7e4ccd07)<<(v0.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON TRIM(DISTINCT CASE v0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) WHERE (CASE x''  WHEN CAST(rt0.c1 AS TEXT) THEN CAST(rt0.c0 AS TEXT) END) ORDER BY ((rt0.c1)<>(v0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN CAST(rt0.c1 AS TEXT) THEN CAST(rt0.c0 AS TEXT) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON TRIM(DISTINCT CASE v0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) ORDER BY ((rt0.c1)!=(v0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON TRIM(DISTINCT CASE v0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) WHERE (CASE x''  WHEN CAST(rt0.c1 AS TEXT) THEN CAST(rt0.c0 AS TEXT) END) ORDER BY ((rt0.c1)<>(v0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN CAST(rt0.c1 AS TEXT) THEN CAST(rt0.c0 AS TEXT) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON TRIM(DISTINCT CASE v0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) ORDER BY ((rt0.c1)!=(v0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON TRIM(DISTINCT CASE v0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) WHERE (CASE x''  WHEN CAST(rt0.c1 AS TEXT) THEN CAST(rt0.c0 AS TEXT) END) ORDER BY ((rt0.c1)<>(v0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((x'e304')>>(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((((((((((v0.c2)AND(vt0.c0)))AND(v0.c1)))AND(v0.c1)))AND(x'')), (+ (vt0.c1)), CAST(vt0.c1 AS NUMERIC)))<=(((v0.c0 IN (vt0.c1, vt0.c1)), x'', (((vt0.c1, 0.11754616935290019, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c1, v0.c1)) AND ((vt0.c1, v0.c2, vt0.c1)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'e304')>>(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((((((((v0.c2)AND(vt0.c0)))AND(v0.c1)))AND(v0.c1)))AND(x'')), (+ (vt0.c1)), CAST(vt0.c1 AS NUMERIC)))<=(((v0.c0 IN (vt0.c1, vt0.c1)), x'', (((vt0.c1, 0.11754616935290019, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c1, v0.c1)) AND ((vt0.c1, v0.c2, vt0.c1)))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((x'e304')>>(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((((((((((v0.c2)AND(vt0.c0)))AND(v0.c1)))AND(v0.c1)))AND(x'')), (+ (vt0.c1)), CAST(vt0.c1 AS NUMERIC)))<=(((v0.c0 IN (vt0.c1, vt0.c1)), x'', (((vt0.c1, 0.11754616935290019, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c1, v0.c1)) AND ((vt0.c1, v0.c2, vt0.c1)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'e304')>>(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((((((((v0.c2)AND(vt0.c0)))AND(v0.c1)))AND(v0.c1)))AND(x'')), (+ (vt0.c1)), CAST(vt0.c1 AS NUMERIC)))<=(((v0.c0 IN (vt0.c1, vt0.c1)), x'', (((vt0.c1, 0.11754616935290019, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c1, v0.c1)) AND ((vt0.c1, v0.c2, vt0.c1)))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((x'e304')>>(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((((((((((v0.c2)AND(vt0.c0)))AND(v0.c1)))AND(v0.c1)))AND(x'')), (+ (vt0.c1)), CAST(vt0.c1 AS NUMERIC)))<=(((v0.c0 IN (vt0.c1, vt0.c1)), x'', (((vt0.c1, 0.11754616935290019, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c1, v0.c1)) AND ((vt0.c1, v0.c2, vt0.c1)))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (TRIM(DISTINCT (('_m4Y') NOT BETWEEN (rt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (('_m4Y') NOT BETWEEN (rt0.c0) AND (vt0.c1)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (TRIM(DISTINCT (('_m4Y') NOT BETWEEN (rt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (('_m4Y') NOT BETWEEN (rt0.c0) AND (vt0.c1)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (TRIM(DISTINCT (('_m4Y') NOT BETWEEN (rt0.c0) AND (vt0.c1))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((+ (v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (v0.c2)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((+ (v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (v0.c2)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((+ (v0.c2)) IN ()));
SELECT ALL * FROM rt0 WHERE (CASE '2231040'  WHEN (- (rt0.c2)) THEN (((('865619437')AND(rt0.c1)))AND(rt0.c2)) ELSE (rt0.c1 IN (rt0.c0, rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE '2231040'  WHEN (- (rt0.c2)) THEN (((('865619437')AND(rt0.c1)))AND(rt0.c2)) ELSE (rt0.c1 IN (rt0.c0, rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE '2231040'  WHEN (- (rt0.c2)) THEN (((('865619437')AND(rt0.c1)))AND(rt0.c2)) ELSE (rt0.c1 IN (rt0.c0, rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE '2231040'  WHEN (- (rt0.c2)) THEN (((('865619437')AND(rt0.c1)))AND(rt0.c2)) ELSE (rt0.c1 IN (rt0.c0, rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE '2231040'  WHEN (- (rt0.c2)) THEN (((('865619437')AND(rt0.c1)))AND(rt0.c2)) ELSE (rt0.c1 IN (rt0.c0, rt0.c1)) END);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((- (v0.c0)) IN ())) ORDER BY ((HEX(vt0.c1))=(((v0.c0)<=(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((- (v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((HEX(vt0.c1))=(((v0.c0)<=(vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((- (v0.c0)) IN ())) ORDER BY ((HEX(vt0.c1))=(((v0.c0)<=(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((- (v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((HEX(vt0.c1))=(((v0.c0)<=(vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((- (v0.c0)) IN ())) ORDER BY ((HEX(vt0.c1))=(((v0.c0)<=(vt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CAST((+ (rt0.c2)) AS INTEGER)) ORDER BY ((((CASE WHEN rt0.c1 THEN 0.9067050758030369 END)OR((- (rt0.c2)))))OR(((rt0.c0)<=(rt0.c2))))  NULLS FIRST, CAST(TIME(rt0.c1, rt0.c0, rt0.c1) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c1 THEN 0.9067050758030369 END)OR((- (rt0.c2)))))OR(((rt0.c0)<=(rt0.c2))))  NULLS FIRST, CAST(TIME(rt0.c1, rt0.c0, rt0.c1) AS TEXT) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST((+ (rt0.c2)) AS INTEGER)) ORDER BY ((((CASE WHEN rt0.c1 THEN 0.9067050758030369 END)OR((- (rt0.c2)))))OR(((rt0.c0)<=(rt0.c2))))  NULLS FIRST, CAST(TIME(rt0.c1, rt0.c0, rt0.c1) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c1 THEN 0.9067050758030369 END)OR((- (rt0.c2)))))OR(((rt0.c0)<=(rt0.c2))))  NULLS FIRST, CAST(TIME(rt0.c1, rt0.c0, rt0.c1) AS TEXT) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST((+ (rt0.c2)) AS INTEGER)) ORDER BY ((((CASE WHEN rt0.c1 THEN 0.9067050758030369 END)OR((- (rt0.c2)))))OR(((rt0.c0)<=(rt0.c2))))  NULLS FIRST, CAST(TIME(rt0.c1, rt0.c0, rt0.c1) AS TEXT) DESC;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE)) BETWEEN ((- (v0.c0))) AND ((NOT (v0.c2)))) WHERE (RTRIM(((v0.c0)||(v0.c0)))) ORDER BY ((v0.c2)<<(v0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((v0.c0)||(v0.c0)))) IS TRUE)  as count FROM v0 NOT INDEXED LEFT OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE)) BETWEEN ((- (v0.c0))) AND ((NOT (v0.c2)))) ORDER BY ((v0.c2)<<(v0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE)) BETWEEN ((- (v0.c0))) AND ((NOT (v0.c2)))) WHERE (RTRIM(((v0.c0)||(v0.c0)))) ORDER BY ((v0.c2)<<(v0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((v0.c0)||(v0.c0)))) IS TRUE)  as count FROM v0 NOT INDEXED LEFT OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE)) BETWEEN ((- (v0.c0))) AND ((NOT (v0.c2)))) ORDER BY ((v0.c2)<<(v0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE)) BETWEEN ((- (v0.c0))) AND ((NOT (v0.c2)))) WHERE (RTRIM(((v0.c0)||(v0.c0)))) ORDER BY ((v0.c2)<<(v0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM rt0, vt0 NATURAL JOIN v0 WHERE ((((rt0.c0 IN (rt0.c1, rt0.c2))) NOT BETWEEN (LOWER(DISTINCT rt0.c0)) AND (((((((((v0.c2)AND(rt0.c1)))OR(v0.c1)))AND(v0.c0)))OR(rt0.c1))))) ORDER BY ((((((v0.c1)OR(-1365413988)))AND(vt0.c1)))|(CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS LAST, ((((rt0.c0) BETWEEN (v0.c0) AND (vt0.c1))) NOT BETWEEN (((rt0.c0)/(v0.c2))) AND (CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c1, rt0.c2))) NOT BETWEEN (LOWER(DISTINCT rt0.c0)) AND (((((((((v0.c2)AND(rt0.c1)))OR(v0.c1)))AND(v0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0 ORDER BY ((((((v0.c1)OR(-1365413988)))AND(vt0.c1)))|(CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS LAST, ((((rt0.c0) BETWEEN (v0.c0) AND (vt0.c1))) NOT BETWEEN (((rt0.c0)/(v0.c2))) AND (CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 END))  NULLS LAST);
SELECT * FROM rt0, vt0 NATURAL JOIN v0 WHERE ((((rt0.c0 IN (rt0.c1, rt0.c2))) NOT BETWEEN (LOWER(DISTINCT rt0.c0)) AND (((((((((v0.c2)AND(rt0.c1)))OR(v0.c1)))AND(v0.c0)))OR(rt0.c1))))) ORDER BY ((((((v0.c1)OR(-1365413988)))AND(vt0.c1)))|(CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS LAST, ((((rt0.c0) BETWEEN (v0.c0) AND (vt0.c1))) NOT BETWEEN (((rt0.c0)/(v0.c2))) AND (CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c1, rt0.c2))) NOT BETWEEN (LOWER(DISTINCT rt0.c0)) AND (((((((((v0.c2)AND(rt0.c1)))OR(v0.c1)))AND(v0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0 ORDER BY ((((((v0.c1)OR(-1365413988)))AND(vt0.c1)))|(CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS LAST, ((((rt0.c0) BETWEEN (v0.c0) AND (vt0.c1))) NOT BETWEEN (((rt0.c0)/(v0.c2))) AND (CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 END))  NULLS LAST);
SELECT * FROM rt0, vt0 NATURAL JOIN v0 WHERE ((((rt0.c0 IN (rt0.c1, rt0.c2))) NOT BETWEEN (LOWER(DISTINCT rt0.c0)) AND (((((((((v0.c2)AND(rt0.c1)))OR(v0.c1)))AND(v0.c0)))OR(rt0.c1))))) ORDER BY ((((((v0.c1)OR(-1365413988)))AND(vt0.c1)))|(CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS LAST, ((((rt0.c0) BETWEEN (v0.c0) AND (vt0.c1))) NOT BETWEEN (((rt0.c0)/(v0.c2))) AND (CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 END))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY (- (LIKELY(DISTINCT rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (- (LIKELY(DISTINCT rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY (- (LIKELY(DISTINCT rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (- (LIKELY(DISTINCT rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY (- (LIKELY(DISTINCT rt0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1 IN ())))!=((((vt0.c0)&(vt0.c1)))))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN ())))<>((((vt0.c0)&(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1 IN ())))!=((((vt0.c0)&(vt0.c1)))))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN ())))<>((((vt0.c0)&(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1 IN ())))!=((((vt0.c0)&(vt0.c1)))))) ORDER BY vt0.c1 DESC;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((((vt0.c1)OR(v0.c0)))OR(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(v0.c0)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((((vt0.c1)OR(v0.c0)))OR(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(v0.c0)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((((vt0.c1)OR(v0.c0)))OR(vt0.c1)) IN ()));
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN '9211878' THEN (((v0.c1, v0.c0, v0.c2))<=((v0.c0, v0.c2, v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '9211878' THEN (((v0.c1, v0.c0, v0.c2))<=((v0.c0, v0.c2, v0.c0))) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN '9211878' THEN (((v0.c1, v0.c0, v0.c2))<=((v0.c0, v0.c2, v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '9211878' THEN (((v0.c1, v0.c0, v0.c2))<=((v0.c0, v0.c2, v0.c0))) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN '9211878' THEN (((v0.c1, v0.c0, v0.c2))<=((v0.c0, v0.c2, v0.c0))) END);
SELECT COUNT(*) FROM v0, vt0 WHERE (((0.5286985659686697)*(((vt0.c1)-(v0.c0))))) ORDER BY ((vt0.c1) BETWEEN (0.5003565629450145) AND (9.7633406E7)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.5286985659686697)*(((vt0.c1)-(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c1) BETWEEN (0.5003565629450145) AND (9.7633406E7)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((0.5286985659686697)*(((vt0.c1)-(v0.c0))))) ORDER BY ((vt0.c1) BETWEEN (0.5003565629450145) AND (9.7633406E7)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.5286985659686697)*(((vt0.c1)-(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c1) BETWEEN (0.5003565629450145) AND (9.7633406E7)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((0.5286985659686697)*(((vt0.c1)-(v0.c0))))) ORDER BY ((vt0.c1) BETWEEN (0.5003565629450145) AND (9.7633406E7)) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c1);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)|(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)|(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1)|(rt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1) BETWEEN (v0.c1) AND (v0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (v0.c1) AND (v0.c2))) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1) BETWEEN (v0.c1) AND (v0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (v0.c1) AND (v0.c2))) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1) BETWEEN (v0.c1) AND (v0.c2))) IS TRUE));
SELECT * FROM vt0, rt0, v0 WHERE (0xffffffff90096c6a);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff90096c6a) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (0xffffffff90096c6a);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff90096c6a) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (0xffffffff90096c6a);
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c1) NOTNULL)))) ORDER BY (rt0.c2 COLLATE BINARY IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 COLLATE BINARY IN ()) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c1) NOTNULL)))) ORDER BY (rt0.c2 COLLATE BINARY IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 COLLATE BINARY IN ()) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c1) NOTNULL)))) ORDER BY (rt0.c2 COLLATE BINARY IN ()) DESC;
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (vt0.c1) ORDER BY '0.87609579566411'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY '0.87609579566411'  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (vt0.c1) ORDER BY '0.87609579566411'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY '0.87609579566411'  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (vt0.c1) ORDER BY '0.87609579566411'  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (((((((((((rt0.c2)OR(rt0.c1)))OR(v0.c0)))OR(v0.c2)))OR(v0.c2)))LIKE(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)OR(rt0.c1)))OR(v0.c0)))OR(v0.c2)))OR(v0.c2)))LIKE(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((((((rt0.c2)OR(rt0.c1)))OR(v0.c0)))OR(v0.c2)))OR(v0.c2)))LIKE(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)OR(rt0.c1)))OR(v0.c0)))OR(v0.c2)))OR(v0.c2)))LIKE(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((((((rt0.c2)OR(rt0.c1)))OR(v0.c0)))OR(v0.c2)))OR(v0.c2)))LIKE(rt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((0.2624751615491623))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((0.2624751615491623)))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((0.2624751615491623))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((0.2624751615491623)))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((0.2624751615491623))))));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((+ (vt0.c0)) IN ()) WHERE (CAST(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((+ (vt0.c0)) IN ()));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((+ (vt0.c0)) IN ()) WHERE (CAST(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((+ (vt0.c0)) IN ()));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((+ (vt0.c0)) IN ()) WHERE (CAST(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 END AS NUMERIC));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((v0.c2))<=((v0.c1))))AND('')));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2))<=((v0.c1))))AND(''))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((v0.c2))<=((v0.c1))))AND('')));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2))<=((v0.c1))))AND(''))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((v0.c2))<=((v0.c1))))AND('')));
SELECT ALL * FROM rt0, v0 WHERE (load_extension((v0.c2 IN (v0.c1)))) ORDER BY ((((((((((((NULL)OR(((rt0.c0)>>(rt0.c1)))))AND((- (x'')))))AND((NOT (rt0.c1)))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((rt0.c0)<<('1547864381')))))OR(CASE v0.c0  WHEN v0.c1 THEN rt0.c2 WHEN v0.c2 THEN v0.c2 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c0 THEN v0.c2 WHEN v0.c0 THEN rt0.c0 END)) DESC, '' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((load_extension((v0.c2 IN (v0.c1)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((((NULL)OR(((rt0.c0)>>(rt0.c1)))))AND((- (x'')))))AND((NOT (rt0.c1)))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((rt0.c0)<<('1547864381')))))OR(CASE v0.c0  WHEN v0.c1 THEN rt0.c2 WHEN v0.c2 THEN v0.c2 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c0 THEN v0.c2 WHEN v0.c0 THEN rt0.c0 END)) DESC, '' COLLATE RTRIM);
SELECT ALL * FROM rt0, v0 WHERE (load_extension((v0.c2 IN (v0.c1)))) ORDER BY ((((((((((((NULL)OR(((rt0.c0)>>(rt0.c1)))))AND((- (x'')))))AND((NOT (rt0.c1)))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((rt0.c0)<<('1547864381')))))OR(CASE v0.c0  WHEN v0.c1 THEN rt0.c2 WHEN v0.c2 THEN v0.c2 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c0 THEN v0.c2 WHEN v0.c0 THEN rt0.c0 END)) DESC, '' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((load_extension((v0.c2 IN (v0.c1)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((((NULL)OR(((rt0.c0)>>(rt0.c1)))))AND((- (x'')))))AND((NOT (rt0.c1)))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((rt0.c0)<<('1547864381')))))OR(CASE v0.c0  WHEN v0.c1 THEN rt0.c2 WHEN v0.c2 THEN v0.c2 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c0 THEN v0.c2 WHEN v0.c0 THEN rt0.c0 END)) DESC, '' COLLATE RTRIM);
SELECT ALL * FROM rt0, v0 WHERE (load_extension((v0.c2 IN (v0.c1)))) ORDER BY ((((((((((((NULL)OR(((rt0.c0)>>(rt0.c1)))))AND((- (x'')))))AND((NOT (rt0.c1)))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((rt0.c0)<<('1547864381')))))OR(CASE v0.c0  WHEN v0.c1 THEN rt0.c2 WHEN v0.c2 THEN v0.c2 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c0 THEN v0.c2 WHEN v0.c0 THEN rt0.c0 END)) DESC, '' COLLATE RTRIM;
SELECT ALL * FROM v0, vt0 WHERE (IFNULL(((v0.c0) IS FALSE), v0.c1 COLLATE BINARY)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE v0.c1 END) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((v0.c0) IS FALSE), v0.c1 COLLATE BINARY)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE v0.c1 END) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (IFNULL(((v0.c0) IS FALSE), v0.c1 COLLATE BINARY)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE v0.c1 END) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((v0.c0) IS FALSE), v0.c1 COLLATE BINARY)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE v0.c1 END) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (IFNULL(((v0.c0) IS FALSE), v0.c1 COLLATE BINARY)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE v0.c1 END) IS TRUE) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL)) ORDER BY CAST(JULIANDAY(vt0.c1, vt0.c1, vt0.c1) AS TEXT) ASC, (NOT (((vt0.c1) IS FALSE)))  NULLS FIRST, ((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((0.730578912800201, vt0.c0, vt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(JULIANDAY(vt0.c1, vt0.c1, vt0.c1) AS TEXT) ASC, (NOT (((vt0.c1) IS FALSE)))  NULLS FIRST, ((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((0.730578912800201, vt0.c0, vt0.c0))) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL)) ORDER BY CAST(JULIANDAY(vt0.c1, vt0.c1, vt0.c1) AS TEXT) ASC, (NOT (((vt0.c1) IS FALSE)))  NULLS FIRST, ((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((0.730578912800201, vt0.c0, vt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(JULIANDAY(vt0.c1, vt0.c1, vt0.c1) AS TEXT) ASC, (NOT (((vt0.c1) IS FALSE)))  NULLS FIRST, ((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((0.730578912800201, vt0.c0, vt0.c0))) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL)) ORDER BY CAST(JULIANDAY(vt0.c1, vt0.c1, vt0.c1) AS TEXT) ASC, (NOT (((vt0.c1) IS FALSE)))  NULLS FIRST, ((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((0.730578912800201, vt0.c0, vt0.c0))) IN ());
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((((((((((((((vt0.c1)AND(rt0.c0)))AND(vt0.c0)))AND('-241016027')))OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c0)))AND(LIKELIHOOD(rt0.c0, 0.8924412962735538))))AND(((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (LIKE(CASE WHEN rt0.c2 THEN vt0.c1 END, '-1370580641', 'm'));
SELECT SUM(count) FROM (SELECT ((LIKE(CASE WHEN rt0.c2 THEN vt0.c1 END, '-1370580641', 'm')) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((((((((((((((vt0.c1)AND(rt0.c0)))AND(vt0.c0)))AND('-241016027')))OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c0)))AND(LIKELIHOOD(rt0.c0, 0.8924412962735538))))AND(((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((((((((((((((vt0.c1)AND(rt0.c0)))AND(vt0.c0)))AND('-241016027')))OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c0)))AND(LIKELIHOOD(rt0.c0, 0.8924412962735538))))AND(((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (LIKE(CASE WHEN rt0.c2 THEN vt0.c1 END, '-1370580641', 'm'));
SELECT SUM(count) FROM (SELECT ((LIKE(CASE WHEN rt0.c2 THEN vt0.c1 END, '-1370580641', 'm')) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((((((((((((((vt0.c1)AND(rt0.c0)))AND(vt0.c0)))AND('-241016027')))OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c0)))AND(LIKELIHOOD(rt0.c0, 0.8924412962735538))))AND(((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((((((((((((((vt0.c1)AND(rt0.c0)))AND(vt0.c0)))AND('-241016027')))OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c0)))AND(LIKELIHOOD(rt0.c0, 0.8924412962735538))))AND(((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (LIKE(CASE WHEN rt0.c2 THEN vt0.c1 END, '-1370580641', 'm'));
SELECT * FROM vt0 WHERE ((('')IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('')IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('')IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('')IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('')IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c2)) IN ())) ORDER BY ((TRIM(DISTINCT rt0.c0))AND(((((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))AND(v0.c0)))), (((((x'0d33')>(rt0.c2))))<=((((rt0.c2) NOT NULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c2)) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((TRIM(DISTINCT rt0.c0))AND(((((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))AND(v0.c0)))), (((((x'0d33')>(rt0.c2))))<=((((rt0.c2) NOT NULL)))) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c2)) IN ())) ORDER BY ((TRIM(DISTINCT rt0.c0))AND(((((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))AND(v0.c0)))), (((((x'0d33')>(rt0.c2))))<=((((rt0.c2) NOT NULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c2)) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((TRIM(DISTINCT rt0.c0))AND(((((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))AND(v0.c0)))), (((((x'0d33')>(rt0.c2))))<=((((rt0.c2) NOT NULL)))) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c2)) IN ())) ORDER BY ((TRIM(DISTINCT rt0.c0))AND(((((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))AND(v0.c0)))), (((((x'0d33')>(rt0.c2))))<=((((rt0.c2) NOT NULL)))) DESC;
SELECT * FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0)>(NULL)) THEN CAST(vt0.c0 AS INTEGER) ELSE 1692017064 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)>(NULL)) THEN CAST(vt0.c0 AS INTEGER) ELSE 1692017064 END) IS TRUE)  as count FROM v0, vt0 NOT INDEXED);
SELECT * FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0)>(NULL)) THEN CAST(vt0.c0 AS INTEGER) ELSE 1692017064 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)>(NULL)) THEN CAST(vt0.c0 AS INTEGER) ELSE 1692017064 END) IS TRUE)  as count FROM v0, vt0 NOT INDEXED);
SELECT * FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0)>(NULL)) THEN CAST(vt0.c0 AS INTEGER) ELSE 1692017064 END);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER));
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN (((vt0.c1, v0.c0, NULL)) BETWEEN ((v0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, NULL, v0.c1))) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (0.7423816132013189)) WHEN (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c2))) THEN ((((((((vt0.c0)OR(-1002748612)))AND(vt0.c1)))AND(rt0.c0)))AND(vt0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) THEN rt0.c1 COLLATE BINARY END) ORDER BY (((((rt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c0))))<>(((v0.c1)<(vt0.c1)))) ASC  NULLS LAST, ((((((((((rt0.c0)AND(v0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))IS(((v0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c1, v0.c0, NULL)) BETWEEN ((v0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, NULL, v0.c1))) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (0.7423816132013189)) WHEN (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c2))) THEN ((((((((vt0.c0)OR(-1002748612)))AND(vt0.c1)))AND(rt0.c0)))AND(vt0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) THEN rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((((rt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c0))))<>(((v0.c1)<(vt0.c1)))) ASC  NULLS LAST, ((((((((((rt0.c0)AND(v0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))IS(((v0.c2) NOT NULL))));
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN (((vt0.c1, v0.c0, NULL)) BETWEEN ((v0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, NULL, v0.c1))) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (0.7423816132013189)) WHEN (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c2))) THEN ((((((((vt0.c0)OR(-1002748612)))AND(vt0.c1)))AND(rt0.c0)))AND(vt0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) THEN rt0.c1 COLLATE BINARY END) ORDER BY (((((rt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c0))))<>(((v0.c1)<(vt0.c1)))) ASC  NULLS LAST, ((((((((((rt0.c0)AND(v0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))IS(((v0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c1, v0.c0, NULL)) BETWEEN ((v0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, NULL, v0.c1))) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (0.7423816132013189)) WHEN (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c2))) THEN ((((((((vt0.c0)OR(-1002748612)))AND(vt0.c1)))AND(rt0.c0)))AND(vt0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) THEN rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((((rt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c0))))<>(((v0.c1)<(vt0.c1)))) ASC  NULLS LAST, ((((((((((rt0.c0)AND(v0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))IS(((v0.c2) NOT NULL))));
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN (((vt0.c1, v0.c0, NULL)) BETWEEN ((v0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, NULL, v0.c1))) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (0.7423816132013189)) WHEN (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c2))) THEN ((((((((vt0.c0)OR(-1002748612)))AND(vt0.c1)))AND(rt0.c0)))AND(vt0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) THEN rt0.c1 COLLATE BINARY END) ORDER BY (((((rt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c0))))<>(((v0.c1)<(vt0.c1)))) ASC  NULLS LAST, ((((((((((rt0.c0)AND(v0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))IS(((v0.c2) NOT NULL)));
SELECT COUNT(*) FROM vt0, v0 WHERE (((NULL)IS NOT(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((NULL)IS NOT(((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((NULL)IS NOT(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((NULL)IS NOT(((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((NULL)IS NOT(((v0.c0) ISNULL))));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((((vt0.c0 IN (rt0.c1)))AND(((vt0.c1) NOT NULL))))OR('')) INNER JOIN rt0 ON rt0.c1 WHERE ((((x'') ISNULL) IN (vt0.c1 COLLATE BINARY, NULL))) ORDER BY ((((v0.c2)IS NOT(vt0.c0))) IS FALSE) DESC  NULLS FIRST, (~ ((((rt0.c2, 'nEo}\r}|?扩', vt0.c1))<((vt0.c1, v0.c2, '944067824')))));
SELECT SUM(count) FROM (SELECT (((((x'') ISNULL) IN (vt0.c1 COLLATE BINARY, NULL))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((((vt0.c0 IN (rt0.c1)))AND(((vt0.c1) NOT NULL))))OR('')) INNER JOIN rt0 ON rt0.c1 ORDER BY ((((v0.c2)IS NOT(vt0.c0))) IS FALSE) DESC  NULLS FIRST, (~ ((((rt0.c2, 'nEo}\r}|?扩', vt0.c1))<((vt0.c1, v0.c2, '944067824'))))));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((((vt0.c0 IN (rt0.c1)))AND(((vt0.c1) NOT NULL))))OR('')) INNER JOIN rt0 ON rt0.c1 WHERE ((((x'') ISNULL) IN (vt0.c1 COLLATE BINARY, NULL))) ORDER BY ((((v0.c2)IS NOT(vt0.c0))) IS FALSE) DESC  NULLS FIRST, (~ ((((rt0.c2, 'nEo}\r}|?扩', vt0.c1))<((vt0.c1, v0.c2, '944067824')))));
SELECT SUM(count) FROM (SELECT (((((x'') ISNULL) IN (vt0.c1 COLLATE BINARY, NULL))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((((vt0.c0 IN (rt0.c1)))AND(((vt0.c1) NOT NULL))))OR('')) INNER JOIN rt0 ON rt0.c1 ORDER BY ((((v0.c2)IS NOT(vt0.c0))) IS FALSE) DESC  NULLS FIRST, (~ ((((rt0.c2, 'nEo}\r}|?扩', vt0.c1))<((vt0.c1, v0.c2, '944067824'))))));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((((vt0.c0 IN (rt0.c1)))AND(((vt0.c1) NOT NULL))))OR('')) INNER JOIN rt0 ON rt0.c1 WHERE ((((x'') ISNULL) IN (vt0.c1 COLLATE BINARY, NULL))) ORDER BY ((((v0.c2)IS NOT(vt0.c0))) IS FALSE) DESC  NULLS FIRST, (~ ((((rt0.c2, 'nEo}\r}|?扩', vt0.c1))<((vt0.c1, v0.c2, '944067824')))));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c1)!=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c1)!=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c1)!=(vt0.c0)) IN ()));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((vt0.c1))!=((rt0.c1))) IN ())) ORDER BY (vt0.c0 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1))!=((rt0.c1))) IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (vt0.c0 COLLATE RTRIM IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((vt0.c1))!=((rt0.c1))) IN ())) ORDER BY (vt0.c0 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1))!=((rt0.c1))) IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (vt0.c0 COLLATE RTRIM IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((vt0.c1))!=((rt0.c1))) IN ())) ORDER BY (vt0.c0 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, v0 WHERE ((LIKELY(DISTINCT 1526285937) IN ())) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(DISTINCT 1526285937) IN ())) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (vt0.c1 IN ()) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((LIKELY(DISTINCT 1526285937) IN ())) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(DISTINCT 1526285937) IN ())) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (vt0.c1 IN ()) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((LIKELY(DISTINCT 1526285937) IN ())) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE DESC;
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS INTEGER)) ORDER BY CASE (((rt0.c1))==((rt0.c1)))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN (((rt0.c2))<((rt0.c2))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c1))=((rt0.c1)))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN (((rt0.c2))<((rt0.c2))) END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS INTEGER)) ORDER BY CASE (((rt0.c1))==((rt0.c1)))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN (((rt0.c2))<((rt0.c2))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c1))=((rt0.c1)))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN (((rt0.c2))<((rt0.c2))) END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS INTEGER)) ORDER BY CASE (((rt0.c1))==((rt0.c1)))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN (((rt0.c2))<((rt0.c2))) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON NULL WHERE (rt0.c2) ORDER BY CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 END THEN ((rt0.c1)IS NOT(vt0.c0)) ELSE CAST(rt0.c1 AS REAL) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON NULL ORDER BY CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 END THEN ((rt0.c1)IS NOT(vt0.c0)) ELSE CAST(rt0.c1 AS REAL) END ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON NULL WHERE (rt0.c2) ORDER BY CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 END THEN ((rt0.c1)IS NOT(vt0.c0)) ELSE CAST(rt0.c1 AS REAL) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON NULL ORDER BY CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 END THEN ((rt0.c1)IS NOT(vt0.c0)) ELSE CAST(rt0.c1 AS REAL) END ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON NULL WHERE (rt0.c2) ORDER BY CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 END THEN ((rt0.c1)IS NOT(vt0.c0)) ELSE CAST(rt0.c1 AS REAL) END ASC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1) BETWEEN (0.8495899119264881) AND (v0.c0)))%(0.11754616935290019)) WHERE (((((vt0.c0)|(vt0.c1))) NOT BETWEEN (v0.c2) AND (v0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c1))) NOT BETWEEN (v0.c2) AND (v0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1) BETWEEN (0.8495899119264881) AND (v0.c0)))%(0.11754616935290019)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1) BETWEEN (0.8495899119264881) AND (v0.c0)))%(0.11754616935290019)) WHERE (((((vt0.c0)|(vt0.c1))) NOT BETWEEN (v0.c2) AND (v0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c1))) NOT BETWEEN (v0.c2) AND (v0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1) BETWEEN (0.8495899119264881) AND (v0.c0)))%(0.11754616935290019)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1) BETWEEN (0.8495899119264881) AND (v0.c0)))%(0.11754616935290019)) WHERE (((((vt0.c0)|(vt0.c1))) NOT BETWEEN (v0.c2) AND (v0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (ROUND(RTRIM(rt0.c2), (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ORDER BY ((((rt0.c0)>>(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((ROUND(RTRIM(rt0.c2), (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)>>(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0, rt0 WHERE (ROUND(RTRIM(rt0.c2), (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ORDER BY ((((rt0.c0)>>(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((ROUND(RTRIM(rt0.c2), (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)>>(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0, rt0 WHERE (ROUND(RTRIM(rt0.c2), (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ORDER BY ((((rt0.c0)>>(vt0.c0))) IS FALSE);
SELECT * FROM v0, rt0, vt0 WHERE (((((((v0.c1)|(rt0.c0)))OR(v0.c1)))AND((((v0.c1, rt0.c2, v0.c0))>((rt0.c2, v0.c1, v0.c0)))))) ORDER BY (('1515613590')%(CAST(v0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)|(rt0.c0)))OR(v0.c1)))AND((((v0.c1, rt0.c2, v0.c0))>((rt0.c2, v0.c1, v0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (('1515613590')%(CAST(v0.c2 AS INTEGER))));
SELECT * FROM v0, rt0, vt0 WHERE (((((((v0.c1)|(rt0.c0)))OR(v0.c1)))AND((((v0.c1, rt0.c2, v0.c0))>((rt0.c2, v0.c1, v0.c0)))))) ORDER BY (('1515613590')%(CAST(v0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)|(rt0.c0)))OR(v0.c1)))AND((((v0.c1, rt0.c2, v0.c0))>((rt0.c2, v0.c1, v0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (('1515613590')%(CAST(v0.c2 AS INTEGER))));
SELECT * FROM v0, rt0, vt0 WHERE (((((((v0.c1)|(rt0.c0)))OR(v0.c1)))AND((((v0.c1, rt0.c2, v0.c0))>((rt0.c2, v0.c1, v0.c0)))))) ORDER BY (('1515613590')%(CAST(v0.c2 AS INTEGER)));
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(v0.c2 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(v0.c2 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(v0.c2 COLLATE BINARY AS TEXT));
SELECT COUNT(*) FROM vt0, v0 WHERE (((0.055569563619320084)%(v0.c2)));
SELECT SUM(count) FROM (SELECT ((((0.055569563619320084)%(v0.c2))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((0.055569563619320084)%(v0.c2)));
SELECT SUM(count) FROM (SELECT ((((0.055569563619320084)%(v0.c2))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((0.055569563619320084)%(v0.c2)));
SELECT * FROM v0, rt0, vt0 WHERE (CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(vt0.c1)) THEN ((vt0.c0)GLOB(rt0.c0)) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) THEN vt0.c0 WHEN CASE WHEN '}T' THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN v0.c0 END THEN (((vt0.c0)) NOT BETWEEN ((0.8295304677906017)) AND ((rt0.c1))) END) ORDER BY '㴈3f';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(vt0.c1)) THEN ((vt0.c0)GLOB(rt0.c0)) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) THEN vt0.c0 WHEN CASE WHEN '}T' THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN v0.c0 END THEN (((vt0.c0)) NOT BETWEEN ((0.8295304677906017)) AND ((rt0.c1))) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY '㴈3f');
SELECT * FROM v0, rt0, vt0 WHERE (CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(vt0.c1)) THEN ((vt0.c0)GLOB(rt0.c0)) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) THEN vt0.c0 WHEN CASE WHEN '}T' THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN v0.c0 END THEN (((vt0.c0)) NOT BETWEEN ((0.8295304677906017)) AND ((rt0.c1))) END) ORDER BY '㴈3f';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(vt0.c1)) THEN ((vt0.c0)GLOB(rt0.c0)) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) THEN vt0.c0 WHEN CASE WHEN '}T' THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN v0.c0 END THEN (((vt0.c0)) NOT BETWEEN ((0.8295304677906017)) AND ((rt0.c1))) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY '㴈3f');
SELECT * FROM v0, rt0, vt0 WHERE (CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(vt0.c1)) THEN ((vt0.c0)GLOB(rt0.c0)) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) THEN vt0.c0 WHEN CASE WHEN '}T' THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN v0.c0 END THEN (((vt0.c0)) NOT BETWEEN ((0.8295304677906017)) AND ((rt0.c1))) END) ORDER BY '㴈3f';
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((- (((v0.c2)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c2)<<(v0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((- (((v0.c2)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c2)<<(v0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((- (((v0.c2)<<(v0.c0)))));
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c2 AS INTEGER))<=(LIKELIHOOD(v0.c2, 0.9219272248309119)))) ORDER BY (((v0.c0))<>((v0.c0))) COLLATE NOCASE DESC, ((CASE vt0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END) NOT BETWEEN ((~ (v0.c1))) AND ((((vt0.c0))<>((v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS INTEGER))<=(LIKELIHOOD(v0.c2, 0.9219272248309119)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0))<>((v0.c0))) COLLATE NOCASE DESC, ((CASE vt0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END) NOT BETWEEN ((~ (v0.c1))) AND ((((vt0.c0))!=((v0.c1))))));
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c2 AS INTEGER))<=(LIKELIHOOD(v0.c2, 0.9219272248309119)))) ORDER BY (((v0.c0))<>((v0.c0))) COLLATE NOCASE DESC, ((CASE vt0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END) NOT BETWEEN ((~ (v0.c1))) AND ((((vt0.c0))<>((v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS INTEGER))<=(LIKELIHOOD(v0.c2, 0.9219272248309119)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0))<>((v0.c0))) COLLATE NOCASE DESC, ((CASE vt0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END) NOT BETWEEN ((~ (v0.c1))) AND ((((vt0.c0))!=((v0.c1))))));
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c2 AS INTEGER))<=(LIKELIHOOD(v0.c2, 0.9219272248309119)))) ORDER BY (((v0.c0))<>((v0.c0))) COLLATE NOCASE DESC, ((CASE vt0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END) NOT BETWEEN ((~ (v0.c1))) AND ((((vt0.c0))<>((v0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (((('AS	G' IN (rt0.c2, rt0.c1)))=((~ (rt0.c1))))) ORDER BY (((rt0.c2 IN ())) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('AS	G' IN (rt0.c2, rt0.c1)))=((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ())) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((('AS	G' IN (rt0.c2, rt0.c1)))=((~ (rt0.c1))))) ORDER BY (((rt0.c2 IN ())) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('AS	G' IN (rt0.c2, rt0.c1)))=((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ())) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((('AS	G' IN (rt0.c2, rt0.c1)))=((~ (rt0.c1))))) ORDER BY (((rt0.c2 IN ())) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN 0.7195227946852454 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN ((('9211878')%(vt0.c1))) AND (((vt0.c1) IS TRUE)))) ORDER BY vt0.c1 ASC, (- ((- (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN 0.7195227946852454 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN ((('9211878')%(vt0.c1))) AND (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC, (- ((- (vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN 0.7195227946852454 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN ((('9211878')%(vt0.c1))) AND (((vt0.c1) IS TRUE)))) ORDER BY vt0.c1 ASC, (- ((- (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN 0.7195227946852454 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN ((('9211878')%(vt0.c1))) AND (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC, (- ((- (vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN 0.7195227946852454 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN ((('9211878')%(vt0.c1))) AND (((vt0.c1) IS TRUE)))) ORDER BY vt0.c1 ASC, (- ((- (vt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (x'') ORDER BY (((((((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND((rt0.c2 IN ()))))AND(rt0.c0 COLLATE BINARY)) ASC, rt0.c1  NULLS LAST, ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))>=(((rt0.c2) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY (((((((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND((rt0.c2 IN ()))))AND(rt0.c0 COLLATE BINARY)) ASC, rt0.c1  NULLS LAST, ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))>=(((rt0.c2) IS FALSE))) DESC);
SELECT * FROM rt0 WHERE (x'') ORDER BY (((((((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND((rt0.c2 IN ()))))AND(rt0.c0 COLLATE BINARY)) ASC, rt0.c1  NULLS LAST, ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))>=(((rt0.c2) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY (((((((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND((rt0.c2 IN ()))))AND(rt0.c0 COLLATE BINARY)) ASC, rt0.c1  NULLS LAST, ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))>=(((rt0.c2) IS FALSE))) DESC);
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c2)AND(0Xffffffff8e48ca84)))OR(v0.c1))) BETWEEN (0.6677326496476652) AND (((((((((v0.c2)OR(vt0.c1)))AND(v0.c2)))OR('115981073')))AND(v0.c2))))) ORDER BY CASE WHEN ((v0.c1) BETWEEN (v0.c0) AND (vt0.c0)) THEN '' WHEN ((((((((vt0.c1)OR(v0.c1)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c2)) THEN ((vt0.c0)<(vt0.c0)) WHEN v0.c0 THEN ((v0.c2) NOT BETWEEN (v0.c1) AND (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)AND(0xffffffff8e48ca84)))OR(v0.c1))) BETWEEN (0.6677326496476652) AND (((((((((v0.c2)OR(vt0.c1)))AND(v0.c2)))OR('115981073')))AND(v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((v0.c1) BETWEEN (v0.c0) AND (vt0.c0)) THEN '' WHEN ((((((((vt0.c1)OR(v0.c1)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c2)) THEN ((vt0.c0)<(vt0.c0)) WHEN v0.c0 THEN ((v0.c2) NOT BETWEEN (v0.c1) AND (vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c2)AND(0Xffffffff8e48ca84)))OR(v0.c1))) BETWEEN (0.6677326496476652) AND (((((((((v0.c2)OR(vt0.c1)))AND(v0.c2)))OR('115981073')))AND(v0.c2))))) ORDER BY CASE WHEN ((v0.c1) BETWEEN (v0.c0) AND (vt0.c0)) THEN '' WHEN ((((((((vt0.c1)OR(v0.c1)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c2)) THEN ((vt0.c0)<(vt0.c0)) WHEN v0.c0 THEN ((v0.c2) NOT BETWEEN (v0.c1) AND (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)AND(0xffffffff8e48ca84)))OR(v0.c1))) BETWEEN (0.6677326496476652) AND (((((((((v0.c2)OR(vt0.c1)))AND(v0.c2)))OR('115981073')))AND(v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((v0.c1) BETWEEN (v0.c0) AND (vt0.c0)) THEN '' WHEN ((((((((vt0.c1)OR(v0.c1)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c2)) THEN ((vt0.c0)<(vt0.c0)) WHEN v0.c0 THEN ((v0.c2) NOT BETWEEN (v0.c1) AND (vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c2)AND(0Xffffffff8e48ca84)))OR(v0.c1))) BETWEEN (0.6677326496476652) AND (((((((((v0.c2)OR(vt0.c1)))AND(v0.c2)))OR('115981073')))AND(v0.c2))))) ORDER BY CASE WHEN ((v0.c1) BETWEEN (v0.c0) AND (vt0.c0)) THEN '' WHEN ((((((((vt0.c1)OR(v0.c1)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c2)) THEN ((vt0.c0)<(vt0.c0)) WHEN v0.c0 THEN ((v0.c2) NOT BETWEEN (v0.c1) AND (vt0.c0)) END  NULLS LAST;
SELECT * FROM v0 INNER JOIN rt0 ON CAST(v0.c1 AS REAL) WHERE (v0.c1) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CAST(v0.c1 AS REAL) ORDER BY v0.c0);
SELECT * FROM v0 INNER JOIN rt0 ON CAST(v0.c1 AS REAL) WHERE (v0.c1) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CAST(v0.c1 AS REAL) ORDER BY v0.c0);
SELECT * FROM v0 INNER JOIN rt0 ON CAST(v0.c1 AS REAL) WHERE (v0.c1) ORDER BY v0.c0;
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c1) IS TRUE) IN ()));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c1))) BETWEEN (CASE vt0.c0  WHEN v0.c1 THEN v0.c1 WHEN NULL THEN v0.c1 WHEN v0.c2 THEN '-737892045' ELSE v0.c0 END) AND ((- (vt0.c0))))) ORDER BY (+ ((((v0.c2))<>((v0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c1))) BETWEEN (CASE vt0.c0  WHEN v0.c1 THEN v0.c1 WHEN NULL THEN v0.c1 WHEN v0.c2 THEN '-737892045' ELSE v0.c0 END) AND ((- (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ ((((v0.c2))!=((v0.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c1))) BETWEEN (CASE vt0.c0  WHEN v0.c1 THEN v0.c1 WHEN NULL THEN v0.c1 WHEN v0.c2 THEN '-737892045' ELSE v0.c0 END) AND ((- (vt0.c0))))) ORDER BY (+ ((((v0.c2))<>((v0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c1))) BETWEEN (CASE vt0.c0  WHEN v0.c1 THEN v0.c1 WHEN NULL THEN v0.c1 WHEN v0.c2 THEN '-737892045' ELSE v0.c0 END) AND ((- (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ ((((v0.c2))!=((v0.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c1))) BETWEEN (CASE vt0.c0  WHEN v0.c1 THEN v0.c1 WHEN NULL THEN v0.c1 WHEN v0.c2 THEN '-737892045' ELSE v0.c0 END) AND ((- (vt0.c0))))) ORDER BY (+ ((((v0.c2))<>((v0.c2)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1 IN ())) NOT NULL));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE RTRIM WHERE (((((rt0.c1) NOT BETWEEN (0x2dea3b91) AND (v0.c0)))&(NULL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (0X2dea3b91) AND (v0.c0)))&(NULL))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE RTRIM WHERE (((((rt0.c1) NOT BETWEEN (0x2dea3b91) AND (v0.c0)))&(NULL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (0X2dea3b91) AND (v0.c0)))&(NULL))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE RTRIM WHERE (((((rt0.c1) NOT BETWEEN (0x2dea3b91) AND (v0.c0)))&(NULL)));
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS REAL))/(((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL))/(((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS REAL))/(((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL))/(((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS REAL))/(((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))));
SELECT ALL * FROM v0 WHERE (CASE WHEN (v0.c1 IN ()) THEN (+ (v0.c0)) ELSE CHANGES() END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c1 IN ()) THEN (+ (v0.c0)) ELSE CHANGES() END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN (v0.c1 IN ()) THEN (+ (v0.c0)) ELSE CHANGES() END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c1 IN ()) THEN (+ (v0.c0)) ELSE CHANGES() END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN (v0.c1 IN ()) THEN (+ (v0.c0)) ELSE CHANGES() END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) BETWEEN ((- (vt0.c1))) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN ((- (vt0.c1))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) BETWEEN ((- (vt0.c1))) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN ((- (vt0.c1))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) BETWEEN ((- (vt0.c1))) AND (vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON json_array_length(((vt0.c1) BETWEEN (NULL) AND (vt0.c0)), CASE vt0.c1  WHEN x'' THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN '-1002748612' END) WHERE ('dL,䥤');
SELECT SUM(count) FROM (SELECT ALL (('dL,䥤') IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON json_array_length(((vt0.c1) BETWEEN (NULL) AND (vt0.c0)), CASE vt0.c1  WHEN x'' THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN '-1002748612' END));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON json_array_length(((vt0.c1) BETWEEN (NULL) AND (vt0.c0)), CASE vt0.c1  WHEN x'' THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN '-1002748612' END) WHERE ('dL,䥤');
SELECT SUM(count) FROM (SELECT ALL (('dL,䥤') IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON json_array_length(((vt0.c1) BETWEEN (NULL) AND (vt0.c0)), CASE vt0.c1  WHEN x'' THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN '-1002748612' END));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON json_array_length(((vt0.c1) BETWEEN (NULL) AND (vt0.c0)), CASE vt0.c1  WHEN x'' THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN '-1002748612' END) WHERE ('dL,䥤');
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<>(vt0.c1)) IN (vt0.c0, vt0.c1))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN 0.17488637315686184 ELSE '' END) NOT BETWEEN (TRIM(DISTINCT vt0.c1, vt0.c0)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<>(vt0.c1)) IN (vt0.c0, vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN 0.17488637315686184 ELSE '' END) NOT BETWEEN (TRIM(DISTINCT vt0.c1, vt0.c0)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<>(vt0.c1)) IN (vt0.c0, vt0.c1))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN 0.17488637315686184 ELSE '' END) NOT BETWEEN (TRIM(DISTINCT vt0.c1, vt0.c0)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<>(vt0.c1)) IN (vt0.c0, vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN 0.17488637315686184 ELSE '' END) NOT BETWEEN (TRIM(DISTINCT vt0.c1, vt0.c0)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<>(vt0.c1)) IN (vt0.c0, vt0.c1))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN 0.17488637315686184 ELSE '' END) NOT BETWEEN (TRIM(DISTINCT vt0.c1, vt0.c0)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE NOCASE) ISNULL) RIGHT OUTER JOIN rt0 ON (((rt0.c1)>=(vt0.c1)) IN ()) WHERE (((rt0.c2) BETWEEN (vt0.c0) AND (v0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (vt0.c0) AND (v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE NOCASE) ISNULL) RIGHT OUTER JOIN rt0 ON (((rt0.c1)>=(vt0.c1)) IN ()));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE NOCASE) ISNULL) RIGHT OUTER JOIN rt0 ON (((rt0.c1)>=(vt0.c1)) IN ()) WHERE (((rt0.c2) BETWEEN (vt0.c0) AND (v0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (vt0.c0) AND (v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE NOCASE) ISNULL) RIGHT OUTER JOIN rt0 ON (((rt0.c1)>=(vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2))) AND ((~ (vt0.c1)))) WHERE ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c1)) IN ())) ORDER BY (((((v0.c2) NOTNULL)))<=((((0xffffffffb16da045)|(v0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c1)) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2))) AND ((~ (vt0.c1)))) ORDER BY (((((v0.c2) NOTNULL)))<=((((0Xffffffffb16da045)|(v0.c2))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2))) AND ((~ (vt0.c1)))) WHERE ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c1)) IN ())) ORDER BY (((((v0.c2) NOTNULL)))<=((((0xffffffffb16da045)|(v0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c1)) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2))) AND ((~ (vt0.c1)))) ORDER BY (((((v0.c2) NOTNULL)))<=((((0Xffffffffb16da045)|(v0.c2))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2))) AND ((~ (vt0.c1)))) WHERE ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c1)) IN ())) ORDER BY (((((v0.c2) NOTNULL)))<=((((0xffffffffb16da045)|(v0.c2))))) DESC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c2)LIKE(rt0.c0)))OR(((vt0.c1) IS FALSE))))OR(CAST(rt0.c0 AS BLOB)))) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((((((((((((rt0.c0)AND(rt0.c2)))AND('-1822278392')))OR(NULL)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN rtreenode(vt0.c1, '52944208') WHEN (((rt0.c1))<=((vt0.c1))) THEN (rt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)LIKE(rt0.c0)))OR(((vt0.c1) IS FALSE))))OR(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((((((((((((rt0.c0)AND(rt0.c2)))AND('-1822278392')))OR(NULL)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN rtreenode(vt0.c1, '52944208') WHEN (((rt0.c1))<=((vt0.c1))) THEN (rt0.c1 IN ()) END);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c2)LIKE(rt0.c0)))OR(((vt0.c1) IS FALSE))))OR(CAST(rt0.c0 AS BLOB)))) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((((((((((((rt0.c0)AND(rt0.c2)))AND('-1822278392')))OR(NULL)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN rtreenode(vt0.c1, '52944208') WHEN (((rt0.c1))<=((vt0.c1))) THEN (rt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)LIKE(rt0.c0)))OR(((vt0.c1) IS FALSE))))OR(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((((((((((((rt0.c0)AND(rt0.c2)))AND('-1822278392')))OR(NULL)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN rtreenode(vt0.c1, '52944208') WHEN (((rt0.c1))<=((vt0.c1))) THEN (rt0.c1 IN ()) END);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c2)LIKE(rt0.c0)))OR(((vt0.c1) IS FALSE))))OR(CAST(rt0.c0 AS BLOB)))) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((((((((((((rt0.c0)AND(rt0.c2)))AND('-1822278392')))OR(NULL)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN rtreenode(vt0.c1, '52944208') WHEN (((rt0.c1))<=((vt0.c1))) THEN (rt0.c1 IN ()) END;
SELECT ALL * FROM v0 WHERE (((((((((v0.c1)AND(v0.c1)))AND(v0.c2)))AND(x'')))AND(v0.c2)) COLLATE RTRIM) ORDER BY LIKELY(DISTINCT CAST(v0.c2 AS TEXT)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c1)AND(v0.c1)))AND(v0.c2)))AND(x'')))AND(v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY LIKELY(DISTINCT CAST(v0.c2 AS TEXT)) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((((v0.c1)AND(v0.c1)))AND(v0.c2)))AND(x'')))AND(v0.c2)) COLLATE RTRIM) ORDER BY LIKELY(DISTINCT CAST(v0.c2 AS TEXT)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c1)AND(v0.c1)))AND(v0.c2)))AND(x'')))AND(v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY LIKELY(DISTINCT CAST(v0.c2 AS TEXT)) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((((v0.c1)AND(v0.c1)))AND(v0.c2)))AND(x'')))AND(v0.c2)) COLLATE RTRIM) ORDER BY LIKELY(DISTINCT CAST(v0.c2 AS TEXT)) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((x'4dbb'))<((rt0.c1))) IN (((rt0.c0)IS NOT(rt0.c1))))) ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN 0.39370982870159876 THEN (rt0.c1 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((((((x'4dbb'))<((rt0.c1))) IN (((rt0.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN 0.39370982870159876 THEN (rt0.c1 IN ()) END DESC);
SELECT * FROM rt0 WHERE (((((x'4dbb'))<((rt0.c1))) IN (((rt0.c0)IS NOT(rt0.c1))))) ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN 0.39370982870159876 THEN (rt0.c1 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((((((x'4dbb'))<((rt0.c1))) IN (((rt0.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN 0.39370982870159876 THEN (rt0.c1 IN ()) END DESC);
SELECT * FROM rt0 WHERE (((((x'4dbb'))<((rt0.c1))) IN (((rt0.c0)IS NOT(rt0.c1))))) ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN 0.39370982870159876 THEN (rt0.c1 IN ()) END DESC;
SELECT ALL * FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN (v0.c0) AND (0.40561756379460745)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN (v0.c0) AND (0.40561756379460745))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN (v0.c0) AND (0.40561756379460745)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN (v0.c0) AND (0.40561756379460745))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN (v0.c0) AND (0.40561756379460745)));
SELECT * FROM v0, rt0, vt0 WHERE (NULL) ORDER BY HEX(((rt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY HEX(((rt0.c0) IS FALSE)));
SELECT * FROM v0, rt0, vt0 WHERE (NULL) ORDER BY HEX(((rt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY HEX(((rt0.c0) IS FALSE)));
SELECT * FROM v0, rt0, vt0 WHERE (NULL) ORDER BY HEX(((rt0.c0) IS FALSE));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (((x'') ISNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((x'') ISNULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (((x'') ISNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((x'') ISNULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (((x'') ISNULL))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN v0 ON ((rt0.c0) IS FALSE) WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(v0.c2)))) AND ((UNLIKELY(DISTINCT rt0.c2))))) ORDER BY (((rt0.c0)) BETWEEN ((((v0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))) AND ((TIME(rt0.c1, rt0.c1, v0.c1, v0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(v0.c2)))) AND ((UNLIKELY(DISTINCT rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN v0 ON ((rt0.c0) IS FALSE) ORDER BY (((rt0.c0)) BETWEEN ((((v0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))) AND ((TIME(rt0.c1, rt0.c1, v0.c1, v0.c0, rt0.c0)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN v0 ON ((rt0.c0) IS FALSE) WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(v0.c2)))) AND ((UNLIKELY(DISTINCT rt0.c2))))) ORDER BY (((rt0.c0)) BETWEEN ((((v0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))) AND ((TIME(rt0.c1, rt0.c1, v0.c1, v0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(v0.c2)))) AND ((UNLIKELY(DISTINCT rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN v0 ON ((rt0.c0) IS FALSE) ORDER BY (((rt0.c0)) BETWEEN ((((v0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))) AND ((TIME(rt0.c1, rt0.c1, v0.c1, v0.c0, rt0.c0)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN v0 ON ((rt0.c0) IS FALSE) WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(v0.c2)))) AND ((UNLIKELY(DISTINCT rt0.c2))))) ORDER BY (((rt0.c0)) BETWEEN ((((v0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))) AND ((TIME(rt0.c1, rt0.c1, v0.c1, v0.c0, rt0.c0))));
SELECT COUNT(*) FROM vt0 NOT INDEXED FULL OUTER JOIN rt0 ON (((((((((rt0.c0 IN ()))AND(((v0.c2) ISNULL))))OR((- (v0.c1)))))AND(json_quote(v0.c2))))OR((((('')AND(v0.c2)))OR(vt0.c0)))) FULL OUTER JOIN v0 ON 97633406 WHERE (rt0.c2) ORDER BY ((((((v0.c1)OR(rt0.c0)))OR(vt0.c1))) NOT BETWEEN ((- (v0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((((((((rt0.c0 IN ()))AND(((v0.c2) ISNULL))))OR((- (v0.c1)))))AND(json_quote(v0.c2))))OR((((('')AND(v0.c2)))OR(vt0.c0)))) FULL OUTER JOIN v0 ON 97633406 ORDER BY ((((((v0.c1)OR(rt0.c0)))OR(vt0.c1))) NOT BETWEEN ((- (v0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0 NOT INDEXED FULL OUTER JOIN rt0 ON (((((((((rt0.c0 IN ()))AND(((v0.c2) ISNULL))))OR((- (v0.c1)))))AND(json_quote(v0.c2))))OR((((('')AND(v0.c2)))OR(vt0.c0)))) FULL OUTER JOIN v0 ON 97633406 WHERE (rt0.c2) ORDER BY ((((((v0.c1)OR(rt0.c0)))OR(vt0.c1))) NOT BETWEEN ((- (v0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((((((((rt0.c0 IN ()))AND(((v0.c2) ISNULL))))OR((- (v0.c1)))))AND(json_quote(v0.c2))))OR((((('')AND(v0.c2)))OR(vt0.c0)))) FULL OUTER JOIN v0 ON 97633406 ORDER BY ((((((v0.c1)OR(rt0.c0)))OR(vt0.c1))) NOT BETWEEN ((- (v0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (('1877346708') NOTNULL) WHERE (((CAST(rt0.c0 AS BLOB))/(((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB))/(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (('1877346708') NOTNULL));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (('1877346708') NOTNULL) WHERE (((CAST(rt0.c0 AS BLOB))/(((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB))/(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (('1877346708') NOTNULL));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (('1877346708') NOTNULL) WHERE (((CAST(rt0.c0 AS BLOB))/(((rt0.c1) NOTNULL))));
SELECT COUNT(*) FROM rt0 WHERE ((((((('')OR(rt0.c0)))OR(rt0.c0)))<=(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((((('')OR(rt0.c0)))OR(rt0.c0)))<=(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((('')OR(rt0.c0)))OR(rt0.c0)))<=(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((((('')OR(rt0.c0)))OR(rt0.c0)))<=(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((('')OR(rt0.c0)))OR(rt0.c0)))<=(rt0.c2)));
SELECT ALL * FROM v0, vt0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0, rt0 NOT INDEXED);
SELECT ALL * FROM v0, vt0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0, rt0 NOT INDEXED);
SELECT ALL * FROM v0, vt0, rt0 WHERE (v0.c0);
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((NOT (v0.c1))) NOT BETWEEN (json_object(rt0.c2, rt0.c1, vt0.c0, 7.16677025E8)) AND (rt0.c0 COLLATE BINARY)) WHERE (((((-1291324175) NOT NULL))*((('') NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((-1291324175) NOT NULL))*((('') NOTNULL)))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((NOT (v0.c1))) NOT BETWEEN (json_object(rt0.c2, rt0.c1, vt0.c0, 7.16677025E8)) AND (rt0.c0 COLLATE BINARY)));
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((NOT (v0.c1))) NOT BETWEEN (json_object(rt0.c2, rt0.c1, vt0.c0, 7.16677025E8)) AND (rt0.c0 COLLATE BINARY)) WHERE (((((-1291324175) NOT NULL))*((('') NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((-1291324175) NOT NULL))*((('') NOTNULL)))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((NOT (v0.c1))) NOT BETWEEN (json_object(rt0.c2, rt0.c1, vt0.c0, 7.16677025E8)) AND (rt0.c0 COLLATE BINARY)));
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((NOT (v0.c1))) NOT BETWEEN (json_object(rt0.c2, rt0.c1, vt0.c0, 7.16677025E8)) AND (rt0.c0 COLLATE BINARY)) WHERE (((((-1291324175) NOT NULL))*((('') NOTNULL))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (NULL) ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 ELSE v0.c0 END)LIKE(rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 ELSE v0.c0 END)LIKE(rt0.c0)));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (NULL) ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 ELSE v0.c0 END)LIKE(rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 ELSE v0.c0 END)LIKE(rt0.c0)));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (NULL) ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 ELSE v0.c0 END)LIKE(rt0.c0));
SELECT * FROM vt0, v0, rt0 WHERE (((((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 END)OR(((v0.c0)>>(v0.c1)))))OR(((rt0.c2) NOT BETWEEN (v0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 END)OR(((v0.c0)>>(v0.c1)))))OR(((rt0.c2) NOT BETWEEN (v0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (((((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 END)OR(((v0.c0)>>(v0.c1)))))OR(((rt0.c2) NOT BETWEEN (v0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 END)OR(((v0.c0)>>(v0.c1)))))OR(((rt0.c2) NOT BETWEEN (v0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (((((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 END)OR(((v0.c0)>>(v0.c1)))))OR(((rt0.c2) NOT BETWEEN (v0.c1) AND (rt0.c2)))));
SELECT * FROM vt0 WHERE (CAST(((0.20304406224690785)+(vt0.c0)) AS INTEGER)) ORDER BY (~ (vt0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.20304406224690785)+(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c1 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(((0.20304406224690785)+(vt0.c0)) AS INTEGER)) ORDER BY (~ (vt0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.20304406224690785)+(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c1 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(((0.20304406224690785)+(vt0.c0)) AS INTEGER)) ORDER BY (~ (vt0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (~ (((vt0.c0) ISNULL))) WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)))AND(v0.c0))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (~ (((vt0.c0) ISNULL))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (~ (((vt0.c0) ISNULL))) WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)))AND(v0.c0))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (~ (((vt0.c0) ISNULL))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (~ (((vt0.c0) ISNULL))) WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)))AND(v0.c0)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 RIGHT OUTER JOIN v0 ON ((((((((vt0.c0 COLLATE RTRIM)OR((((v0.c1))<=((rt0.c2))))))OR(NULL)))AND((((2.005246009E9, rt0.c0, vt0.c1, v0.c1, v0.c2))=((rt0.c2, '-4653345', vt0.c0, rt0.c0, v0.c2))))))OR(((vt0.c0) ISNULL))) WHERE (json_array_length(CASE WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CASE WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 RIGHT OUTER JOIN v0 ON ((((((((vt0.c0 COLLATE RTRIM)OR((((v0.c1))<=((rt0.c2))))))OR(NULL)))AND((((2.005246009E9, rt0.c0, vt0.c1, v0.c1, v0.c2))==((rt0.c2, '-4653345', vt0.c0, rt0.c0, v0.c2))))))OR(((vt0.c0) ISNULL))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 RIGHT OUTER JOIN v0 ON ((((((((vt0.c0 COLLATE RTRIM)OR((((v0.c1))<=((rt0.c2))))))OR(NULL)))AND((((2.005246009E9, rt0.c0, vt0.c1, v0.c1, v0.c2))=((rt0.c2, '-4653345', vt0.c0, rt0.c0, v0.c2))))))OR(((vt0.c0) ISNULL))) WHERE (json_array_length(CASE WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CASE WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 RIGHT OUTER JOIN v0 ON ((((((((vt0.c0 COLLATE RTRIM)OR((((v0.c1))<=((rt0.c2))))))OR(NULL)))AND((((2.005246009E9, rt0.c0, vt0.c1, v0.c1, v0.c2))==((rt0.c2, '-4653345', vt0.c0, rt0.c0, v0.c2))))))OR(((vt0.c0) ISNULL))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 RIGHT OUTER JOIN v0 ON ((((((((vt0.c0 COLLATE RTRIM)OR((((v0.c1))<=((rt0.c2))))))OR(NULL)))AND((((2.005246009E9, rt0.c0, vt0.c1, v0.c1, v0.c2))=((rt0.c2, '-4653345', vt0.c0, rt0.c0, v0.c2))))))OR(((vt0.c0) ISNULL))) WHERE (json_array_length(CASE WHEN v0.c0 THEN v0.c0 END));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c1) ISNULL)) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c1) ISNULL)) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c1) ISNULL)) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c1) ISNULL)) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c1) ISNULL)) AND ((+ (vt0.c0)))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c2) ISNULL)) IS TRUE) WHERE ((((((v0.c1))<((rt0.c2))))LIKE(((rt0.c1) NOT BETWEEN ('770325393') AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1))<((rt0.c2))))LIKE(((rt0.c1) NOT BETWEEN ('770325393') AND (v0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c2) ISNULL)) IS TRUE));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c2) ISNULL)) IS TRUE) WHERE ((((((v0.c1))<((rt0.c2))))LIKE(((rt0.c1) NOT BETWEEN ('770325393') AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1))<((rt0.c2))))LIKE(((rt0.c1) NOT BETWEEN ('770325393') AND (v0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c2) ISNULL)) IS TRUE));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c2) ISNULL)) IS TRUE) WHERE ((((((v0.c1))<((rt0.c2))))LIKE(((rt0.c1) NOT BETWEEN ('770325393') AND (v0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY (('gk') BETWEEN (CAST('' AS TEXT)) AND (''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0 ORDER BY (('gk') BETWEEN (CAST('' AS TEXT)) AND (''))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY (('gk') BETWEEN (CAST('' AS TEXT)) AND (''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0 ORDER BY (('gk') BETWEEN (CAST('' AS TEXT)) AND (''))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY (('gk') BETWEEN (CAST('' AS TEXT)) AND (''))  NULLS LAST;
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((((vt0.c1) BETWEEN (v0.c0) AND (v0.c2)))IS NOT(CASE WHEN v0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY json_array_length(((vt0.c1) IS FALSE), ((((v0.c1)AND(v0.c1)))OR(vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (v0.c0) AND (v0.c2)))IS NOT(CASE WHEN v0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY json_array_length(((vt0.c1) IS FALSE), ((((v0.c1)AND(v0.c1)))OR(vt0.c0))) DESC  NULLS LAST);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((((vt0.c1) BETWEEN (v0.c0) AND (v0.c2)))IS NOT(CASE WHEN v0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY json_array_length(((vt0.c1) IS FALSE), ((((v0.c1)AND(v0.c1)))OR(vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (v0.c0) AND (v0.c2)))IS NOT(CASE WHEN v0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY json_array_length(((vt0.c1) IS FALSE), ((((v0.c1)AND(v0.c1)))OR(vt0.c0))) DESC  NULLS LAST);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((((vt0.c1) BETWEEN (v0.c0) AND (v0.c2)))IS NOT(CASE WHEN v0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY json_array_length(((vt0.c1) IS FALSE), ((((v0.c1)AND(v0.c1)))OR(vt0.c0))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE ((('G}')&(x''))) ORDER BY ((CAST(v0.c0 AS TEXT)) BETWEEN (((v0.c1)+(v0.c1))) AND (((vt0.c1) BETWEEN (v0.c1) AND (v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((('G}')&(x''))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(v0.c0 AS TEXT)) BETWEEN (((v0.c1)+(v0.c1))) AND (((vt0.c1) BETWEEN (v0.c1) AND (v0.c1)))));
SELECT ALL * FROM vt0, v0 WHERE ((('G}')&(x''))) ORDER BY ((CAST(v0.c0 AS TEXT)) BETWEEN (((v0.c1)+(v0.c1))) AND (((vt0.c1) BETWEEN (v0.c1) AND (v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((('G}')&(x''))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(v0.c0 AS TEXT)) BETWEEN (((v0.c1)+(v0.c1))) AND (((vt0.c1) BETWEEN (v0.c1) AND (v0.c1)))));
SELECT ALL * FROM vt0, v0 WHERE ((('G}')&(x''))) ORDER BY ((CAST(v0.c0 AS TEXT)) BETWEEN (((v0.c1)+(v0.c1))) AND (((vt0.c1) BETWEEN (v0.c1) AND (v0.c1))));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN CAST(NULL AS BLOB) END) ORDER BY ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)OR(QUOTE(vt0.c0))))OR((vt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) ISNULL) THEN CAST(NULL AS BLOB) END) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)OR(QUOTE(vt0.c0))))OR((vt0.c1 IN ())))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN CAST(NULL AS BLOB) END) ORDER BY ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)OR(QUOTE(vt0.c0))))OR((vt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) ISNULL) THEN CAST(NULL AS BLOB) END) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)OR(QUOTE(vt0.c0))))OR((vt0.c1 IN ())))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN CAST(NULL AS BLOB) END) ORDER BY ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)OR(QUOTE(vt0.c0))))OR((vt0.c1 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c1)) BETWEEN (((vt0.c1 IN (0.22334485379152202)))) AND ((((NULL)LIKE(v0.c1))))) WHERE (((+ (v0.c0)) IN (((NULL) BETWEEN (vt0.c0) AND (v0.c0)), ((((((((NULL)AND('1692017064')))OR(v0.c2)))OR(0.9274861180632066)))OR(v0.c1))))) ORDER BY ((json_object(v0.c1, v0.c0)) BETWEEN (((v0.c2)>=(vt0.c1))) AND ((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((+ (v0.c0)) IN (((NULL) BETWEEN (vt0.c0) AND (v0.c0)), ((((((((NULL)AND('1692017064')))OR(v0.c2)))OR(0.9274861180632066)))OR(v0.c1))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c1)) BETWEEN (((vt0.c1 IN (0.22334485379152202)))) AND ((((NULL)LIKE(v0.c1))))) ORDER BY ((json_object(v0.c1, v0.c0)) BETWEEN (((v0.c2)>=(vt0.c1))) AND ((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c1)) BETWEEN (((vt0.c1 IN (0.22334485379152202)))) AND ((((NULL)LIKE(v0.c1))))) WHERE (((+ (v0.c0)) IN (((NULL) BETWEEN (vt0.c0) AND (v0.c0)), ((((((((NULL)AND('1692017064')))OR(v0.c2)))OR(0.9274861180632066)))OR(v0.c1))))) ORDER BY ((json_object(v0.c1, v0.c0)) BETWEEN (((v0.c2)>=(vt0.c1))) AND ((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((+ (v0.c0)) IN (((NULL) BETWEEN (vt0.c0) AND (v0.c0)), ((((((((NULL)AND('1692017064')))OR(v0.c2)))OR(0.9274861180632066)))OR(v0.c1))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c1)) BETWEEN (((vt0.c1 IN (0.22334485379152202)))) AND ((((NULL)LIKE(v0.c1))))) ORDER BY ((json_object(v0.c1, v0.c0)) BETWEEN (((v0.c2)>=(vt0.c1))) AND ((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c1)) BETWEEN (((vt0.c1 IN (0.22334485379152202)))) AND ((((NULL)LIKE(v0.c1))))) WHERE (((+ (v0.c0)) IN (((NULL) BETWEEN (vt0.c0) AND (v0.c0)), ((((((((NULL)AND('1692017064')))OR(v0.c2)))OR(0.9274861180632066)))OR(v0.c1))))) ORDER BY ((json_object(v0.c1, v0.c0)) BETWEEN (((v0.c2)>=(vt0.c1))) AND ((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))))  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) NOTNULL)  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c1)=(rt0.c2)) ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END) ORDER BY (((0.3529520664563591 IN ())) BETWEEN (rt0.c2 COLLATE BINARY) AND (0.40428501307131626))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOTNULL)  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c1)==(rt0.c2)) ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END) IS TRUE)  as count FROM rt0 ORDER BY (((0.3529520664563591 IN ())) BETWEEN (rt0.c2 COLLATE BINARY) AND (0.40428501307131626))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) NOTNULL)  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c1)=(rt0.c2)) ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END) ORDER BY (((0.3529520664563591 IN ())) BETWEEN (rt0.c2 COLLATE BINARY) AND (0.40428501307131626))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOTNULL)  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c1)==(rt0.c2)) ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END) IS TRUE)  as count FROM rt0 ORDER BY (((0.3529520664563591 IN ())) BETWEEN (rt0.c2 COLLATE BINARY) AND (0.40428501307131626))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) NOTNULL)  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c1)=(rt0.c2)) ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END) ORDER BY (((0.3529520664563591 IN ())) BETWEEN (rt0.c2 COLLATE BINARY) AND (0.40428501307131626))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY WHERE (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY WHERE (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY WHERE (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE (0.3626398686413206) ORDER BY (((((v0.c2) NOT BETWEEN (NULL) AND (v0.c1))))>=((((v0.c1)<=(-1045319819)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.3626398686413206) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c2) NOT BETWEEN (NULL) AND (v0.c1))))>=((((v0.c1)<=(-1045319819)))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (0.3626398686413206) ORDER BY (((((v0.c2) NOT BETWEEN (NULL) AND (v0.c1))))>=((((v0.c1)<=(-1045319819)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.3626398686413206) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c2) NOT BETWEEN (NULL) AND (v0.c1))))>=((((v0.c1)<=(-1045319819)))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (0.3626398686413206) ORDER BY (((((v0.c2) NOT BETWEEN (NULL) AND (v0.c1))))>=((((v0.c1)<=(-1045319819)))))  NULLS FIRST;
SELECT * FROM rt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((rt0.c2 COLLATE NOCASE)) AND (((- (rt0.c0))))) FULL OUTER JOIN vt0 ON ((((v0.c1)<=(v0.c2)))>=(CASE WHEN v0.c0 THEN vt0.c1 ELSE rt0.c0 END)) WHERE (('40055074' COLLATE NOCASE IN (CAST(v0.c1 AS REAL), TRIM(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((('40055074' COLLATE NOCASE IN (CAST(v0.c1 AS REAL), TRIM(rt0.c2)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((rt0.c2 COLLATE NOCASE)) AND (((- (rt0.c0))))) FULL OUTER JOIN vt0 ON ((((v0.c1)<=(v0.c2)))>=(CASE WHEN v0.c0 THEN vt0.c1 ELSE rt0.c0 END)));
SELECT * FROM rt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((rt0.c2 COLLATE NOCASE)) AND (((- (rt0.c0))))) FULL OUTER JOIN vt0 ON ((((v0.c1)<=(v0.c2)))>=(CASE WHEN v0.c0 THEN vt0.c1 ELSE rt0.c0 END)) WHERE (('40055074' COLLATE NOCASE IN (CAST(v0.c1 AS REAL), TRIM(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((('40055074' COLLATE NOCASE IN (CAST(v0.c1 AS REAL), TRIM(rt0.c2)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((rt0.c2 COLLATE NOCASE)) AND (((- (rt0.c0))))) FULL OUTER JOIN vt0 ON ((((v0.c1)<=(v0.c2)))>=(CASE WHEN v0.c0 THEN vt0.c1 ELSE rt0.c0 END)));
SELECT * FROM rt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((rt0.c2 COLLATE NOCASE)) AND (((- (rt0.c0))))) FULL OUTER JOIN vt0 ON ((((v0.c1)<=(v0.c2)))>=(CASE WHEN v0.c0 THEN vt0.c1 ELSE rt0.c0 END)) WHERE (('40055074' COLLATE NOCASE IN (CAST(v0.c1 AS REAL), TRIM(rt0.c2))));
SELECT * FROM rt0, v0 WHERE (TRIM((((v0.c2, '779958208', v0.c0, rt0.c1, v0.c0)) BETWEEN ((v0.c2, v0.c1, rt0.c0, rt0.c1, v0.c1)) AND ((-150492412, rt0.c2, '2027511776', v0.c0, '-245306260'))), v0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((v0.c2, '779958208', v0.c0, rt0.c1, v0.c0)) BETWEEN ((v0.c2, v0.c1, rt0.c0, rt0.c1, v0.c1)) AND ((-150492412, rt0.c2, '2027511776', v0.c0, '-245306260'))), v0.c2 COLLATE BINARY)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (TRIM((((v0.c2, '779958208', v0.c0, rt0.c1, v0.c0)) BETWEEN ((v0.c2, v0.c1, rt0.c0, rt0.c1, v0.c1)) AND ((-150492412, rt0.c2, '2027511776', v0.c0, '-245306260'))), v0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((v0.c2, '779958208', v0.c0, rt0.c1, v0.c0)) BETWEEN ((v0.c2, v0.c1, rt0.c0, rt0.c1, v0.c1)) AND ((-150492412, rt0.c2, '2027511776', v0.c0, '-245306260'))), v0.c2 COLLATE BINARY)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (TRIM((((v0.c2, '779958208', v0.c0, rt0.c1, v0.c0)) BETWEEN ((v0.c2, v0.c1, rt0.c0, rt0.c1, v0.c1)) AND ((-150492412, rt0.c2, '2027511776', v0.c0, '-245306260'))), v0.c2 COLLATE BINARY));
SELECT * FROM v0, rt0, vt0 WHERE (CAST(((((vt0.c0)OR(v0.c0)))AND(v0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(v0.c0)))AND(v0.c1)) AS INTEGER)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (CAST(((((vt0.c0)OR(v0.c0)))AND(v0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(v0.c0)))AND(v0.c1)) AS INTEGER)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (CAST(((((vt0.c0)OR(v0.c0)))AND(v0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY) ISNULL));
SELECT * FROM vt0, rt0, v0 WHERE (CAST(((v0.c0) BETWEEN (rt0.c0) AND (v0.c1)) AS NUMERIC)) ORDER BY (((vt0.c1 IN ())) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (rt0.c0) AND (v0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((vt0.c1 IN ())) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))) ASC);
SELECT * FROM vt0, rt0, v0 WHERE (CAST(((v0.c0) BETWEEN (rt0.c0) AND (v0.c1)) AS NUMERIC)) ORDER BY (((vt0.c1 IN ())) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (rt0.c0) AND (v0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((vt0.c1 IN ())) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))) ASC);
SELECT * FROM vt0, rt0, v0 WHERE (CAST(((v0.c0) BETWEEN (rt0.c0) AND (v0.c1)) AS NUMERIC)) ORDER BY (((vt0.c1 IN ())) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))) ASC;
SELECT * FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((1.77122344E8) ISNULL) WHERE (((((((rt0.c2, rt0.c2, vt0.c1))<((v0.c1, v0.c2, v0.c0)))))>((CASE WHEN v0.c2 THEN vt0.c0 ELSE vt0.c1 END))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2, rt0.c2, vt0.c1))<((v0.c1, v0.c2, v0.c0)))))>((CASE WHEN v0.c2 THEN vt0.c0 ELSE vt0.c1 END)))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((1.77122344E8) ISNULL));
SELECT * FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((1.77122344E8) ISNULL) WHERE (((((((rt0.c2, rt0.c2, vt0.c1))<((v0.c1, v0.c2, v0.c0)))))>((CASE WHEN v0.c2 THEN vt0.c0 ELSE vt0.c1 END))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2, rt0.c2, vt0.c1))<((v0.c1, v0.c2, v0.c0)))))>((CASE WHEN v0.c2 THEN vt0.c0 ELSE vt0.c1 END)))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((1.77122344E8) ISNULL));
SELECT * FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((1.77122344E8) ISNULL) WHERE (((((((rt0.c2, rt0.c2, vt0.c1))<((v0.c1, v0.c2, v0.c0)))))>((CASE WHEN v0.c2 THEN vt0.c0 ELSE vt0.c1 END))));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON LOWER(((vt0.c0) BETWEEN (v0.c0) AND (NULL))) WHERE ((((v0.c2, v0.c0, v0.c2)) BETWEEN (('A)', (vt0.c0 IN (vt0.c1)), ((v0.c0)+(vt0.c1)))) AND ((CASE WHEN '1729348851' THEN v0.c0 END, CAST(v0.c1 AS BLOB), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))) ORDER BY ((MIN(v0.c2, v0.c0, vt0.c0, v0.c0)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, v0.c0, v0.c2)) BETWEEN (('A)', (vt0.c0 IN (vt0.c1)), ((v0.c0)+(vt0.c1)))) AND ((CASE WHEN '1729348851' THEN v0.c0 END, CAST(v0.c1 AS BLOB), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON LOWER(((vt0.c0) BETWEEN (v0.c0) AND (NULL))) ORDER BY ((MIN(v0.c2, v0.c0, vt0.c0, v0.c0)) NOT NULL)  NULLS LAST);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON LOWER(((vt0.c0) BETWEEN (v0.c0) AND (NULL))) WHERE ((((v0.c2, v0.c0, v0.c2)) BETWEEN (('A)', (vt0.c0 IN (vt0.c1)), ((v0.c0)+(vt0.c1)))) AND ((CASE WHEN '1729348851' THEN v0.c0 END, CAST(v0.c1 AS BLOB), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))) ORDER BY ((MIN(v0.c2, v0.c0, vt0.c0, v0.c0)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, v0.c0, v0.c2)) BETWEEN (('A)', (vt0.c0 IN (vt0.c1)), ((v0.c0)+(vt0.c1)))) AND ((CASE WHEN '1729348851' THEN v0.c0 END, CAST(v0.c1 AS BLOB), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON LOWER(((vt0.c0) BETWEEN (v0.c0) AND (NULL))) ORDER BY ((MIN(v0.c2, v0.c0, vt0.c0, v0.c0)) NOT NULL)  NULLS LAST);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON LOWER(((vt0.c0) BETWEEN (v0.c0) AND (NULL))) WHERE ((((v0.c2, v0.c0, v0.c2)) BETWEEN (('A)', (vt0.c0 IN (vt0.c1)), ((v0.c0)+(vt0.c1)))) AND ((CASE WHEN '1729348851' THEN v0.c0 END, CAST(v0.c1 AS BLOB), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))) ORDER BY ((MIN(v0.c2, v0.c0, vt0.c0, v0.c0)) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (-1.002748612E9) ORDER BY TRIM(DISTINCT IFNULL(DISTINCT '1231906559', v0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1.002748612E9) IS TRUE)  as count FROM v0 ORDER BY TRIM(DISTINCT IFNULL(DISTINCT '1231906559', v0.c2)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (-1.002748612E9) ORDER BY TRIM(DISTINCT IFNULL(DISTINCT '1231906559', v0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1.002748612E9) IS TRUE)  as count FROM v0 ORDER BY TRIM(DISTINCT IFNULL(DISTINCT '1231906559', v0.c2)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (-1.002748612E9) ORDER BY TRIM(DISTINCT IFNULL(DISTINCT '1231906559', v0.c2)) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((0X413cd49f)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))>((((rt0.c1)IS NOT(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0x413cd49f)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))>((((rt0.c1)IS NOT(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((0X413cd49f)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))>((((rt0.c1)IS NOT(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0x413cd49f)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))>((((rt0.c1)IS NOT(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((0X413cd49f)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))>((((rt0.c1)IS NOT(rt0.c1))))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((((vt0.c0)OR(rt0.c2)))OR(vt0.c1)))>(((rt0.c1) IS FALSE))) WHERE ((CASE rt0.c0  WHEN 0x71367816 THEN rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c0  WHEN 0X71367816 THEN rt0.c2 END IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((((vt0.c0)OR(rt0.c2)))OR(vt0.c1)))>(((rt0.c1) IS FALSE))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((((vt0.c0)OR(rt0.c2)))OR(vt0.c1)))>(((rt0.c1) IS FALSE))) WHERE ((CASE rt0.c0  WHEN 0x71367816 THEN rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c0  WHEN 0X71367816 THEN rt0.c2 END IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((((vt0.c0)OR(rt0.c2)))OR(vt0.c1)))>(((rt0.c1) IS FALSE))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((((vt0.c0)OR(rt0.c2)))OR(vt0.c1)))>(((rt0.c1) IS FALSE))) WHERE ((CASE rt0.c0  WHEN 0x71367816 THEN rt0.c2 END IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((json_quote(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((json_quote(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((json_quote(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((json_quote(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((json_quote(vt0.c0) IN ()));
