-- Time: 2024/06/09 00:36:23
-- Database: database11
-- Database version: 3.40.0
-- seed value: 3372554711
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INT ); -- 0ms;
COMMIT; -- 3ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE t0; -- 1ms;
UPDATE OR FAIL t0 SET c0=NULL WHERE ((((t0.c0 COLLATE NOCASE)AND(((t0.c0)<('')))))OR(((((t0.c0)AND(t0.c0)))OR(t0.c0)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA temp.cell_size_check = true; -- 0ms;
ANALYZE temp; -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.04124978090402753); -- 1ms;
INSERT OR REPLACE INTO t0(c0) VALUES (-587115808), ('-587115808'), (NULL); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (NULL); -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('8+E'); -- 0ms;
ANALYZE; -- 6ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL), (x''), (0.23771531167411852); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0X51e6baae) WHERE ((((CASE WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR(((t0.c0) NOTNULL))))OR(COALESCE(t0.c0, t0.c0, t0.c0, t0.c0))); -- 0ms;
VACUUM; -- 1ms;
INSERT OR REPLACE INTO t0 VALUES ('0.23771531167411852'), ('-1986135605'), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (((((LAST_INSERT_ROWID())AND(((NULL) NOTNULL))))OR((((NULL, 'r]j', x'c2171962')) NOT BETWEEN ((NULL, 0.4342202131847941, NULL)) AND ((0.04124978090402753, 0.12050237838313871, NULL)))))), (x''), (NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE NULL; -- 0ms;
UPDATE OR ABORT t0 SET (c0)=(x'1a25') WHERE t0.c0; -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL); -- 0ms;
PRAGMA temp.reverse_unordered_selects = false; -- 0ms;
UPDATE t0 SET (c0)=(x'41cf'); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER INSERT ON t0 BEGIN DELETE FROM t0 WHERE LAST_INSERT_ROWID();END; -- 1ms;
PRAGMA main.cache_size; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (ABS(DISTINCT x'' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-1986135605'); -- 0ms;
UPDATE OR FAIL t0 SET (c0, c0)=(-5.87115808E8, '0.23771531167411852'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('-1986135605'); -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0X2b17a1df); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'6b81'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE t0 SET (c0, c0)=('1374075566', 0.15703890420473732); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.06590639250920283 WHERE CASE WHEN (~ (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN 'r+}â¿¸x~O' THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN (+ (t0.c0)) THEN (+ (t0.c0)) ELSE (- (t0.c0)) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('-587115808', 0.36995268204615883) WHERE ((((t0.c0) NOTNULL))&(rtreenode(t0.c0, t0.c0))); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'8967'), ('-1986135605'), ((((~ (0.509079237889559)))AND((('R]J') BETWEEN (-1.986135605E9) AND (x''))))); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB , +c4 TEXT ); -- 4ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.509079237889559), (x'f95b'), (x''), (NULL), (0.6980511259904004); -- 1ms;
UPDATE OR IGNORE rt0 SET (c3)=(NULL) WHERE ((rt0.c0)-(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c3)))); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i64 ON t0((~ (0X51e6baae)) COLLATE NOCASE) WHERE NULLIF(DISTINCT ((((((((c0)AND(c0)))OR(c0)))AND(c0)))OR(c0)), CAST(c0 AS BLOB)); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('-2066274175', '-1580755175', NULL, -1.580755175E9, NULL); -- 1ms;
UPDATE OR IGNORE rt0 SET c4=x'2950', c2=0.7661832873494648; -- 4ms;
INSERT OR ABORT INTO rt0(c0) VALUES ('1071465090'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, detail=none); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (0.6980511259904004), ('-587115808'), (0.6980511259904004); -- 1ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (''); -- 0ms;
REINDEX; -- 0ms;
DELETE FROM vt0; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0Xffffffffc76538c5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '52548'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 380947474); -- 0ms;
UPDATE t0 SET c0=x'' WHERE (NOT (((t0.c0)<=(t0.c0)))); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1254889187); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.23771531167411852); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1090267871,2');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES (0x33042ff8); -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 324097343); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (x''), ('1071465090'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 464198923); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), (0.509079237889559), (0.7224559161605665); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1986135605'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0)=('-587115808', 0.39110507750594026, 1.07146509E9); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c4) VALUES ('-1090267871', '617008125', '8+E'), (NULL, 0x58f5067a, x''), (NULL, x'', '0.36995268204615883'); -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES (''); -- 0ms;
COMMIT; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0, t0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((NULL) NOT NULL));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c0, rt0.c3, rt0.c3)) BETWEEN ((((t0.c0)OR(rt0.c3)), json_extract(rt0.c4, rt0.c3), CAST(rt0.c0 AS REAL))) AND ((((rt0.c1)GLOB(x'f25d')), ((rt0.c1) NOT NULL), (~ (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt0.c3, rt0.c3)) BETWEEN ((((t0.c0)OR(rt0.c3)), json_extract(rt0.c4, rt0.c3), CAST(rt0.c0 AS REAL))) AND ((((rt0.c1)GLOB(x'f25d')), ((rt0.c1) NOT NULL), (~ (t0.c0)))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c0, rt0.c3, rt0.c3)) BETWEEN ((((t0.c0)OR(rt0.c3)), json_extract(rt0.c4, rt0.c3), CAST(rt0.c0 AS REAL))) AND ((((rt0.c1)GLOB(x'f25d')), ((rt0.c1) NOT NULL), (~ (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt0.c3, rt0.c3)) BETWEEN ((((t0.c0)OR(rt0.c3)), json_extract(rt0.c4, rt0.c3), CAST(rt0.c0 AS REAL))) AND ((((rt0.c1)GLOB(x'f25d')), ((rt0.c1) NOT NULL), (~ (t0.c0)))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c0, rt0.c3, rt0.c3)) BETWEEN ((((t0.c0)OR(rt0.c3)), json_extract(rt0.c4, rt0.c3), CAST(rt0.c0 AS REAL))) AND ((((rt0.c1)GLOB(x'f25d')), ((rt0.c1) NOT NULL), (~ (t0.c0))))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((rt0.c0)) NOT BETWEEN ((x'c078')) AND (('183120114'))))IS NOT(NULL)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((x'c078')) AND (('183120114'))))IS NOT(NULL))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((rt0.c0)) NOT BETWEEN ((x'c078')) AND (('183120114'))))IS NOT(NULL)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((x'c078')) AND (('183120114'))))IS NOT(NULL))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((rt0.c0)) NOT BETWEEN ((x'c078')) AND (('183120114'))))IS NOT(NULL)));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE (rt0.c1 IN ())  WHEN UNICODE(rt0.c3) THEN (((rt0.c4, -1.580755175E9, t0.c0, rt0.c3, rt0.c0)) BETWEEN ((t0.c0, rt0.c0, t0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c3))) ELSE ((((t0.c0)AND(rt0.c3)))AND(rt0.c1)) END) ORDER BY UPPER(DISTINCT (rt0.c3 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c1 IN ())  WHEN UNICODE(rt0.c3) THEN (((rt0.c4, -1.580755175E9, t0.c0, rt0.c3, rt0.c0)) BETWEEN ((t0.c0, rt0.c0, t0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c3))) ELSE ((((t0.c0)AND(rt0.c3)))AND(rt0.c1)) END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY UPPER(DISTINCT (rt0.c3 IN ()))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE (rt0.c1 IN ())  WHEN UNICODE(rt0.c3) THEN (((rt0.c4, -1.580755175E9, t0.c0, rt0.c3, rt0.c0)) BETWEEN ((t0.c0, rt0.c0, t0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c3))) ELSE ((((t0.c0)AND(rt0.c3)))AND(rt0.c1)) END) ORDER BY UPPER(DISTINCT (rt0.c3 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c1 IN ())  WHEN UNICODE(rt0.c3) THEN (((rt0.c4, -1.580755175E9, t0.c0, rt0.c3, rt0.c0)) BETWEEN ((t0.c0, rt0.c0, t0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c3))) ELSE ((((t0.c0)AND(rt0.c3)))AND(rt0.c1)) END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY UPPER(DISTINCT (rt0.c3 IN ()))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE (rt0.c1 IN ())  WHEN UNICODE(rt0.c3) THEN (((rt0.c4, -1.580755175E9, t0.c0, rt0.c3, rt0.c0)) BETWEEN ((t0.c0, rt0.c0, t0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c3))) ELSE ((((t0.c0)AND(rt0.c3)))AND(rt0.c1)) END) ORDER BY UPPER(DISTINCT (rt0.c3 IN ()))  NULLS LAST;
SELECT ALL * FROM t0 INDEXED BY i64, rt0, vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM t0 INDEXED BY i64, rt0, vt0);
SELECT ALL * FROM t0 INDEXED BY i64, rt0, vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM t0 INDEXED BY i64, rt0, vt0);
SELECT * FROM t0, vt0 WHERE ((+ (((t0.c0)OR(x'')))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)OR(x''))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((+ (((t0.c0)OR(x'')))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)OR(x''))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((+ (((t0.c0)OR(x'')))));
SELECT * FROM t0, rt0 WHERE (((rt0.c3 COLLATE NOCASE)>>((('-1986135605') NOT BETWEEN (rt0.c4) AND (rt0.c2))))) ORDER BY ((rt0.c3) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)>>((('-1986135605') NOT BETWEEN (rt0.c4) AND (rt0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c3) NOTNULL));
SELECT * FROM t0, rt0 WHERE (((rt0.c3 COLLATE NOCASE)>>((('-1986135605') NOT BETWEEN (rt0.c4) AND (rt0.c2))))) ORDER BY ((rt0.c3) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)>>((('-1986135605') NOT BETWEEN (rt0.c4) AND (rt0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c3) NOTNULL));
SELECT * FROM t0, rt0 WHERE (((rt0.c3 COLLATE NOCASE)>>((('-1986135605') NOT BETWEEN (rt0.c4) AND (rt0.c2))))) ORDER BY ((rt0.c3) NOTNULL);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS BLOB));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c0 IN ())) IS TRUE)) ORDER BY vt0.c0  NULLS FIRST, ((('N\nuOQ^0W')) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0  NULLS FIRST, ((('N\nuOQ^0W')) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((- (vt0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c0 IN ())) IS TRUE)) ORDER BY vt0.c0  NULLS FIRST, ((('N\nuOQ^0W')) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0  NULLS FIRST, ((('N\nuOQ^0W')) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((- (vt0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c0 IN ())) IS TRUE)) ORDER BY vt0.c0  NULLS FIRST, ((('N\nuOQ^0W')) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((- (vt0.c0)))));
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((((rt0.c0)LIKE(rt0.c4)))GLOB((rt0.c3 IN (rt0.c2, rt0.c3))))) ORDER BY (((rt0.c2 IN ()))|(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST, (((NOT (rt0.c4))) IS TRUE) DESC  NULLS LAST, (+ (t0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)LIKE(rt0.c4)))GLOB((rt0.c3 IN (rt0.c2, rt0.c3))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY (((rt0.c2 IN ()))|(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST, (((NOT (rt0.c4))) IS TRUE) DESC  NULLS LAST, (+ (t0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((((rt0.c0)LIKE(rt0.c4)))GLOB((rt0.c3 IN (rt0.c2, rt0.c3))))) ORDER BY (((rt0.c2 IN ()))|(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST, (((NOT (rt0.c4))) IS TRUE) DESC  NULLS LAST, (+ (t0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)LIKE(rt0.c4)))GLOB((rt0.c3 IN (rt0.c2, rt0.c3))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY (((rt0.c2 IN ()))|(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST, (((NOT (rt0.c4))) IS TRUE) DESC  NULLS LAST, (+ (t0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((((rt0.c0)LIKE(rt0.c4)))GLOB((rt0.c3 IN (rt0.c2, rt0.c3))))) ORDER BY (((rt0.c2 IN ()))|(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST, (((NOT (rt0.c4))) IS TRUE) DESC  NULLS LAST, (+ (t0.c0)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((CAST('(2' AS BLOB) IN ())) ORDER BY (+ (((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)))OR('100528115'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST('(2' AS BLOB) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (+ (((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)))OR('100528115'))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((CAST('(2' AS BLOB) IN ())) ORDER BY (+ (((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)))OR('100528115'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST('(2' AS BLOB) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (+ (((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)))OR('100528115'))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((CAST('(2' AS BLOB) IN ())) ORDER BY (+ (((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)))OR('100528115'))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i64, rt0, t0 WHERE ((x'29fc4457' IN ())) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'29fc4457' IN ())) IS TRUE)  as count FROM vt0 INDEXED BY i64, rt0, t0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i64, rt0, t0 WHERE ((x'29fc4457' IN ())) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'29fc4457' IN ())) IS TRUE)  as count FROM vt0 INDEXED BY i64, rt0, t0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND('')))OR(vt0.c0)))AND(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))AND('')))OR(vt0.c0)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND('')))OR(vt0.c0)))AND(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))AND('')))OR(vt0.c0)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND('')))OR(vt0.c0)))AND(vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((vt0.c0)||(vt0.c0)) AS NUMERIC)) ORDER BY (NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC, CASE WHEN (t0.c0 IN ()) THEN ((0.06590639250920283)IS NOT(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)||(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC, CASE WHEN (t0.c0 IN ()) THEN ((0.06590639250920283)IS NOT(vt0.c0)) END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((vt0.c0)||(vt0.c0)) AS NUMERIC)) ORDER BY (NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC, CASE WHEN (t0.c0 IN ()) THEN ((0.06590639250920283)IS NOT(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)||(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC, CASE WHEN (t0.c0 IN ()) THEN ((0.06590639250920283)IS NOT(vt0.c0)) END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((vt0.c0)||(vt0.c0)) AS NUMERIC)) ORDER BY (NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC, CASE WHEN (t0.c0 IN ()) THEN ((0.06590639250920283)IS NOT(vt0.c0)) END;
SELECT * FROM vt0, t0, rt0 WHERE (((((rt0.c2) BETWEEN ('617008125') AND ('-1090267871')))OR(NULLIF(rt0.c2, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN ('617008125') AND ('-1090267871')))OR(NULLIF(rt0.c2, rt0.c2)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((rt0.c2) BETWEEN ('617008125') AND ('-1090267871')))OR(NULLIF(rt0.c2, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN ('617008125') AND ('-1090267871')))OR(NULLIF(rt0.c2, rt0.c2)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((rt0.c2) BETWEEN ('617008125') AND ('-1090267871')))OR(NULLIF(rt0.c2, rt0.c2))));
SELECT COUNT(*) FROM t0 WHERE ((~ (((t0.c0) NOT NULL)))) ORDER BY (((((((t0.c0)OR(t0.c0)))AND(x''))))>=((CASE t0.c0  WHEN t0.c0 THEN NULL ELSE t0.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY (((((((t0.c0)OR(t0.c0)))AND(x''))))>=((CASE t0.c0  WHEN t0.c0 THEN NULL ELSE t0.c0 END))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((~ (((t0.c0) NOT NULL)))) ORDER BY (((((((t0.c0)OR(t0.c0)))AND(x''))))>=((CASE t0.c0  WHEN t0.c0 THEN NULL ELSE t0.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY (((((((t0.c0)OR(t0.c0)))AND(x''))))>=((CASE t0.c0  WHEN t0.c0 THEN NULL ELSE t0.c0 END))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((~ (((t0.c0) NOT NULL)))) ORDER BY (((((((t0.c0)OR(t0.c0)))AND(x''))))>=((CASE t0.c0  WHEN t0.c0 THEN NULL ELSE t0.c0 END))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON COALESCE(COALESCE(vt0.c0, x'46bb'), CHANGES()) WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))<('-1986135605')));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))<('-1986135605'))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON COALESCE(COALESCE(vt0.c0, x'46bb'), CHANGES()));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON COALESCE(COALESCE(vt0.c0, x'46bb'), CHANGES()) WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))<('-1986135605')));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))<('-1986135605'))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON COALESCE(COALESCE(vt0.c0, x'46bb'), CHANGES()));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON COALESCE(COALESCE(vt0.c0, x'46bb'), CHANGES()) WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))<('-1986135605')));
SELECT ALL * FROM t0, vt0, rt0 WHERE (ABS(DISTINCT ((x'')/(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((x'')/(rt0.c4)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (ABS(DISTINCT ((x'')/(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((x'')/(rt0.c4)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (ABS(DISTINCT ((x'')/(rt0.c4))));
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE ((((((rt0.c1, t0.c0, t0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((t0.c0, rt0.c4, rt0.c4))))>=(((rt0.c0)+(rt0.c1))))) ORDER BY ((((((((NULL)OR((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))))AND(((rt0.c1)<<(rt0.c3)))))AND(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, t0.c0, t0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((t0.c0, rt0.c4, rt0.c4))))>=(((rt0.c0)+(rt0.c1))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((((((((NULL)OR((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))))AND(((rt0.c1)<<(rt0.c3)))))AND(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE ((((((rt0.c1, t0.c0, t0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((t0.c0, rt0.c4, rt0.c4))))>=(((rt0.c0)+(rt0.c1))))) ORDER BY ((((((((NULL)OR((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))))AND(((rt0.c1)<<(rt0.c3)))))AND(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, t0.c0, t0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((t0.c0, rt0.c4, rt0.c4))))>=(((rt0.c0)+(rt0.c1))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((((((((NULL)OR((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))))AND(((rt0.c1)<<(rt0.c3)))))AND(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE ((((((rt0.c1, t0.c0, t0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((t0.c0, rt0.c4, rt0.c4))))>=(((rt0.c0)+(rt0.c1))))) ORDER BY ((((((((NULL)OR((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))))AND(((rt0.c1)<<(rt0.c3)))))AND(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END)) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0, t0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT)) ORDER BY (('-514938714') NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY  NULLS FIRST, CAST(((rt0.c0) NOTNULL) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (('-514938714') NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY  NULLS FIRST, CAST(((rt0.c0) NOTNULL) AS TEXT)  NULLS FIRST);
SELECT * FROM vt0, rt0, t0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT)) ORDER BY (('-514938714') NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY  NULLS FIRST, CAST(((rt0.c0) NOTNULL) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (('-514938714') NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY  NULLS FIRST, CAST(((rt0.c0) NOTNULL) AS TEXT)  NULLS FIRST);
SELECT * FROM vt0, rt0, t0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT)) ORDER BY (('-514938714') NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY  NULLS FIRST, CAST(((rt0.c0) NOTNULL) AS TEXT)  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE ((+ (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((+ (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((+ (t0.c0 COLLATE BINARY)));
SELECT * FROM rt0, vt0, t0 WHERE ((~ ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((~ ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((~ ((rt0.c2 IN ()))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((TYPEOF(DISTINCT vt0.c0))=(((((rt0.c0)AND(rt0.c0)))OR(rt0.c4)))) WHERE (rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((TYPEOF(DISTINCT vt0.c0))==(((((rt0.c0)AND(rt0.c0)))OR(rt0.c4)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((TYPEOF(DISTINCT vt0.c0))=(((((rt0.c0)AND(rt0.c0)))OR(rt0.c4)))) WHERE (rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((TYPEOF(DISTINCT vt0.c0))==(((((rt0.c0)AND(rt0.c0)))OR(rt0.c4)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((TYPEOF(DISTINCT vt0.c0))=(((((rt0.c0)AND(rt0.c0)))OR(rt0.c4)))) WHERE (rt0.c1 COLLATE BINARY);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY ((((vt0.c0)OR(vt0.c0)))<(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))<(((vt0.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY ((((vt0.c0)OR(vt0.c0)))<(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))<(((vt0.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY ((((vt0.c0)OR(vt0.c0)))<(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c1)<>(8.5591244E8)))<<(CASE WHEN rt0.c2 THEN rt0.c4 WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<>(8.5591244E8)))<<(CASE WHEN rt0.c2 THEN rt0.c4 WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c1)<>(8.5591244E8)))<<(CASE WHEN rt0.c2 THEN rt0.c4 WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<>(8.5591244E8)))<<(CASE WHEN rt0.c2 THEN rt0.c4 WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c1)<>(8.5591244E8)))<<(CASE WHEN rt0.c2 THEN rt0.c4 WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 END)));
SELECT * FROM t0, rt0 WHERE (((rt0.c0)/(x'a89f')));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)/(x'a89f'))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((rt0.c0)/(x'a89f')));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)/(x'a89f'))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((rt0.c0)/(x'a89f')));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (- (json_extract(rt0.c2, vt0.c0))) WHERE (ABS((rt0.c4 IN ())));
SELECT SUM(count) FROM (SELECT ((ABS((rt0.c4 IN ()))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (- (json_extract(rt0.c2, vt0.c0))));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (- (json_extract(rt0.c2, vt0.c0))) WHERE (ABS((rt0.c4 IN ())));
SELECT SUM(count) FROM (SELECT ((ABS((rt0.c4 IN ()))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (- (json_extract(rt0.c2, vt0.c0))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON CAST(((vt0.c0)AND(vt0.c0)) AS TEXT) WHERE ((+ ((((vt0.c0))<=((t0.c0)))))) ORDER BY 0xfffffffff0d58153  NULLS FIRST, (~ (t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c0))<=((t0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(((vt0.c0)AND(vt0.c0)) AS TEXT) ORDER BY 0xfffffffff0d58153  NULLS FIRST, (~ (t0.c0))  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON CAST(((vt0.c0)AND(vt0.c0)) AS TEXT) WHERE ((+ ((((vt0.c0))<=((t0.c0)))))) ORDER BY 0xfffffffff0d58153  NULLS FIRST, (~ (t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c0))<=((t0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(((vt0.c0)AND(vt0.c0)) AS TEXT) ORDER BY 0xfffffffff0d58153  NULLS FIRST, (~ (t0.c0))  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON CAST(((vt0.c0)AND(vt0.c0)) AS TEXT) WHERE ((+ ((((vt0.c0))<=((t0.c0)))))) ORDER BY 0xfffffffff0d58153  NULLS FIRST, (~ (t0.c0))  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE (((((((((TRIM(t0.c0, rt0.c2))OR(rt0.c3)))OR(CAST(rt0.c2 AS REAL))))AND((rt0.c2 IN ()))))AND(((rt0.c1)LIKE(rt0.c0))))) ORDER BY LOWER(((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((((TRIM(t0.c0, rt0.c2))OR(rt0.c3)))OR(CAST(rt0.c2 AS REAL))))AND((rt0.c2 IN ()))))AND(((rt0.c1)LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY LOWER(((NULL) IS FALSE)));
SELECT * FROM rt0, t0 WHERE (((((((((TRIM(t0.c0, rt0.c2))OR(rt0.c3)))OR(CAST(rt0.c2 AS REAL))))AND((rt0.c2 IN ()))))AND(((rt0.c1)LIKE(rt0.c0))))) ORDER BY LOWER(((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((((TRIM(t0.c0, rt0.c2))OR(rt0.c3)))OR(CAST(rt0.c2 AS REAL))))AND((rt0.c2 IN ()))))AND(((rt0.c1)LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY LOWER(((NULL) IS FALSE)));
SELECT * FROM rt0, t0 WHERE (((((((((TRIM(t0.c0, rt0.c2))OR(rt0.c3)))OR(CAST(rt0.c2 AS REAL))))AND((rt0.c2 IN ()))))AND(((rt0.c1)LIKE(rt0.c0))))) ORDER BY LOWER(((NULL) IS FALSE));
SELECT * FROM rt0, t0, vt0 WHERE (((((rt0.c1)<>(t0.c0)))>>('-1931069616' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<>(t0.c0)))>>('-1931069616' COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((((rt0.c1)<>(t0.c0)))>>('-1931069616' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<>(t0.c0)))>>('-1931069616' COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((((rt0.c1)<>(t0.c0)))>>('-1931069616' COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((rt0.c4, NULL, t0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL), ((vt0.c0)&(-2.54443181E8)), (- ('183120114')))) AND (('l\', ((t0.c0) ISNULL), (rt0.c2 IN ()))))) ORDER BY ((855912440) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((rt0.c4, NULL, t0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL), ((vt0.c0)&(-2.54443181E8)), (- ('183120114')))) AND (('l\', ((t0.c0) ISNULL), (rt0.c2 IN ()))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((855912440) NOTNULL));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((rt0.c4, NULL, t0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL), ((vt0.c0)&(-2.54443181E8)), (- ('183120114')))) AND (('l\', ((t0.c0) ISNULL), (rt0.c2 IN ()))))) ORDER BY ((855912440) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((rt0.c4, NULL, t0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL), ((vt0.c0)&(-2.54443181E8)), (- ('183120114')))) AND (('l\', ((t0.c0) ISNULL), (rt0.c2 IN ()))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((855912440) NOTNULL));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((rt0.c4, NULL, t0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL), ((vt0.c0)&(-2.54443181E8)), (- ('183120114')))) AND (('l\', ((t0.c0) ISNULL), (rt0.c2 IN ()))))) ORDER BY ((855912440) NOTNULL);
SELECT COUNT(*) FROM t0 WHERE ((- ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY (NOT (NULLIF(DISTINCT t0.c0, 0.8087755898626299)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (NOT (NULLIF(DISTINCT t0.c0, 0.8087755898626299)))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((- ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY (NOT (NULLIF(DISTINCT t0.c0, 0.8087755898626299)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (NOT (NULLIF(DISTINCT t0.c0, 0.8087755898626299)))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((- ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY (NOT (NULLIF(DISTINCT t0.c0, 0.8087755898626299)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM t0 INNER JOIN rt0 ON ((((((rt0.c0)LIKE(rt0.c0)))OR(((rt0.c4) IS TRUE))))OR(('1454526668' IN ()))) WHERE (((x'') NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c3) IS FALSE)))) ORDER BY (NOT (((rt0.c2)IS(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((((rt0.c0)LIKE(rt0.c0)))OR(((rt0.c4) IS TRUE))))OR(('1454526668' IN ()))) ORDER BY (NOT (((rt0.c2)IS(t0.c0)))));
SELECT * FROM t0 INNER JOIN rt0 ON ((((((rt0.c0)LIKE(rt0.c0)))OR(((rt0.c4) IS TRUE))))OR(('1454526668' IN ()))) WHERE (((x'') NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c3) IS FALSE)))) ORDER BY (NOT (((rt0.c2)IS(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((((rt0.c0)LIKE(rt0.c0)))OR(((rt0.c4) IS TRUE))))OR(('1454526668' IN ()))) ORDER BY (NOT (((rt0.c2)IS(t0.c0)))));
SELECT * FROM t0 INNER JOIN rt0 ON ((((((rt0.c0)LIKE(rt0.c0)))OR(((rt0.c4) IS TRUE))))OR(('1454526668' IN ()))) WHERE (((x'') NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c3) IS FALSE)))) ORDER BY (NOT (((rt0.c2)IS(t0.c0))));
SELECT ALL * FROM t0 WHERE ((((((+ (t0.c0)))AND((+ (t0.c0)))))OR(CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (t0.c0)))AND((+ (t0.c0)))))OR(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((+ (t0.c0)))AND((+ (t0.c0)))))OR(CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (t0.c0)))AND((+ (t0.c0)))))OR(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((+ (t0.c0)))AND((+ (t0.c0)))))OR(CAST(t0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN json_array_length(rt0.c4) THEN (+ (rt0.c1)) WHEN ('ã£.Ry#AeO\n' IN (rt0.c3, rt0.c2)) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) WHEN (- (rt0.c1)) THEN ((rt0.c2)>>(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_array_length(rt0.c4) THEN (+ (rt0.c1)) WHEN ('ã£.Ry#AeO\n' IN (rt0.c3, rt0.c2)) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) WHEN (- (rt0.c1)) THEN ((rt0.c2)>>(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN json_array_length(rt0.c4) THEN (+ (rt0.c1)) WHEN ('ã£.Ry#AeO\n' IN (rt0.c3, rt0.c2)) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) WHEN (- (rt0.c1)) THEN ((rt0.c2)>>(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_array_length(rt0.c4) THEN (+ (rt0.c1)) WHEN ('ã£.Ry#AeO\n' IN (rt0.c3, rt0.c2)) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) WHEN (- (rt0.c1)) THEN ((rt0.c2)>>(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (NOT (((((rt0.c4)AND(rt0.c1)))OR(x'2ced'))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((((rt0.c4)AND(rt0.c1)))OR(x'2ced')))));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (NOT (((((rt0.c4)AND(rt0.c1)))OR(x'2ced'))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((((rt0.c4)AND(rt0.c1)))OR(x'2ced')))));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (NOT (((((rt0.c4)AND(rt0.c1)))OR(x'2ced'))));
SELECT * FROM rt0, vt0 WHERE (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE BINARY);
SELECT * FROM t0, vt0 NOT INDEXED LEFT OUTER JOIN rt0 ON (- (CASE t0.c0  WHEN rt0.c4 THEN t0.c0 ELSE rt0.c0 END)) WHERE (('æ«m' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('æ«m' IN ())) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN rt0 ON (- (CASE t0.c0  WHEN rt0.c4 THEN t0.c0 ELSE rt0.c0 END)));
SELECT * FROM t0, vt0 NOT INDEXED LEFT OUTER JOIN rt0 ON (- (CASE t0.c0  WHEN rt0.c4 THEN t0.c0 ELSE rt0.c0 END)) WHERE (('æ«m' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('æ«m' IN ())) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN rt0 ON (- (CASE t0.c0  WHEN rt0.c4 THEN t0.c0 ELSE rt0.c0 END)));
SELECT * FROM t0, vt0 NOT INDEXED LEFT OUTER JOIN rt0 ON (- (CASE t0.c0  WHEN rt0.c4 THEN t0.c0 ELSE rt0.c0 END)) WHERE (('æ«m' IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c4)/(rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c4)/(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c4)/(rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c4)/(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c4)/(rt0.c3)) COLLATE BINARY);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE NULL  WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (CASE WHEN rt0.c4 THEN NULL WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 END) AND (rt0.c4))) ORDER BY (~ (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (CASE WHEN rt0.c4 THEN NULL WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 END) AND (rt0.c4))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (vt0.c0)));
SELECT ALL * FROM rt0, vt0 WHERE (((CASE NULL  WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (CASE WHEN rt0.c4 THEN NULL WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 END) AND (rt0.c4))) ORDER BY (~ (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (CASE WHEN rt0.c4 THEN NULL WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 END) AND (rt0.c4))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (vt0.c0)));
SELECT ALL * FROM rt0, vt0 WHERE (((CASE NULL  WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (CASE WHEN rt0.c4 THEN NULL WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 END) AND (rt0.c4))) ORDER BY (~ (vt0.c0));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(UPPER(t0.c0))))OR(((rt0.c3)OR(rt0.c0))))) ORDER BY ((ROUND(rt0.c0, rt0.c4)) BETWEEN (('-1088600204' IN ())) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))OR(UPPER(t0.c0))))OR(((rt0.c3)OR(rt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((ROUND(rt0.c0, rt0.c4)) BETWEEN (('-1088600204' IN ())) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(UPPER(t0.c0))))OR(((rt0.c3)OR(rt0.c0))))) ORDER BY ((ROUND(rt0.c0, rt0.c4)) BETWEEN (('-1088600204' IN ())) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))OR(UPPER(t0.c0))))OR(((rt0.c3)OR(rt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((ROUND(rt0.c0, rt0.c4)) BETWEEN (('-1088600204' IN ())) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(UPPER(t0.c0))))OR(((rt0.c3)OR(rt0.c0))))) ORDER BY ((ROUND(rt0.c0, rt0.c4)) BETWEEN (('-1088600204' IN ())) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c3)!=(0.8268418768566732))) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((NULL)))) AND (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)))) WHERE (CASE ((vt0.c0)|(rt0.c3))  WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END THEN rt0.c4 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)|(rt0.c3))  WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END THEN rt0.c4 END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((rt0.c3)!=(0.8268418768566732))) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((NULL)))) AND (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c3)!=(0.8268418768566732))) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((NULL)))) AND (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)))) WHERE (CASE ((vt0.c0)|(rt0.c3))  WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END THEN rt0.c4 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)|(rt0.c3))  WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END THEN rt0.c4 END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((rt0.c3)!=(0.8268418768566732))) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((NULL)))) AND (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c3)!=(0.8268418768566732))) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((NULL)))) AND (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)))) WHERE (CASE ((vt0.c0)|(rt0.c3))  WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END THEN rt0.c4 END);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE) ORDER BY ((((NULL)AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)))))OR(((rt0.c3)&(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((NULL)AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)))))OR(((rt0.c3)&(rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE) ORDER BY ((((NULL)AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)))))OR(((rt0.c3)&(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((NULL)AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)))))OR(((rt0.c3)&(rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE) ORDER BY ((((NULL)AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)))))OR(((rt0.c3)&(rt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (((((((((((x'')AND(t0.c0)))AND(-2066274175)))OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (((t0.c0)||(t0.c0))) AND ((((t0.c0))>((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'')AND(t0.c0)))AND(-2066274175)))OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (((t0.c0)||(t0.c0))) AND ((((t0.c0))>((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (((((((((((x'')AND(t0.c0)))AND(-2066274175)))OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (((t0.c0)||(t0.c0))) AND ((((t0.c0))>((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'')AND(t0.c0)))AND(-2066274175)))OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (((t0.c0)||(t0.c0))) AND ((((t0.c0))>((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (((((((((((x'')AND(t0.c0)))AND(-2066274175)))OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (((t0.c0)||(t0.c0))) AND ((((t0.c0))>((t0.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN (((t0.c0 IN (x'4e5d')), ((t0.c0)==(t0.c0)), TYPEOF(DISTINCT t0.c0))) AND ((((t0.c0) IS TRUE), (((t0.c0))>((t0.c0))), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL)))))), (+ (((t0.c0)<=(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN (((t0.c0 IN (x'4e5d')), ((t0.c0)=(t0.c0)), TYPEOF(DISTINCT t0.c0))) AND ((((t0.c0) IS TRUE), (((t0.c0))>((t0.c0))), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL)))))), (+ (((t0.c0)<=(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN (((t0.c0 IN (x'4e5d')), ((t0.c0)==(t0.c0)), TYPEOF(DISTINCT t0.c0))) AND ((((t0.c0) IS TRUE), (((t0.c0))>((t0.c0))), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL)))))), (+ (((t0.c0)<=(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN (((t0.c0 IN (x'4e5d')), ((t0.c0)=(t0.c0)), TYPEOF(DISTINCT t0.c0))) AND ((((t0.c0) IS TRUE), (((t0.c0))>((t0.c0))), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL)))))), (+ (((t0.c0)<=(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN (((t0.c0 IN (x'4e5d')), ((t0.c0)==(t0.c0)), TYPEOF(DISTINCT t0.c0))) AND ((((t0.c0) IS TRUE), (((t0.c0))>((t0.c0))), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL)))))), (+ (((t0.c0)<=(t0.c0))));
SELECT * FROM t0, rt0, vt0 WHERE (((((((((((rt0.c2) NOT BETWEEN ('p^,}W &r') AND (rt0.c0)))AND(CAST(vt0.c0 AS REAL))))OR((NOT (rt0.c1)))))AND(((rt0.c3)AND(rt0.c4)))))AND((~ (rt0.c2))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) NOT BETWEEN ('p^,}W &r') AND (rt0.c0)))AND(CAST(vt0.c0 AS REAL))))OR((NOT (rt0.c1)))))AND(((rt0.c3)AND(rt0.c4)))))AND((~ (rt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY NULL ASC);
SELECT * FROM t0, rt0, vt0 WHERE (((((((((((rt0.c2) NOT BETWEEN ('p^,}W &r') AND (rt0.c0)))AND(CAST(vt0.c0 AS REAL))))OR((NOT (rt0.c1)))))AND(((rt0.c3)AND(rt0.c4)))))AND((~ (rt0.c2))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) NOT BETWEEN ('p^,}W &r') AND (rt0.c0)))AND(CAST(vt0.c0 AS REAL))))OR((NOT (rt0.c1)))))AND(((rt0.c3)AND(rt0.c4)))))AND((~ (rt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY NULL ASC);
SELECT * FROM t0, rt0, vt0 WHERE (((((((((((rt0.c2) NOT BETWEEN ('p^,}W &r') AND (rt0.c0)))AND(CAST(vt0.c0 AS REAL))))OR((NOT (rt0.c1)))))AND(((rt0.c3)AND(rt0.c4)))))AND((~ (rt0.c2))))) ORDER BY NULL ASC;
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((('282932635')/(CASE WHEN NULL THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((('282932635')/(CASE WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('282932635')/(CASE WHEN NULL THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((('282932635')/(CASE WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('282932635')/(CASE WHEN NULL THEN vt0.c0 END)));
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) ORDER BY ((vt0.c0 COLLATE RTRIM)&((((('4')AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)&((((('4')AND(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) ORDER BY ((vt0.c0 COLLATE RTRIM)&((((('4')AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)&((((('4')AND(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) ORDER BY ((vt0.c0 COLLATE RTRIM)&((((('4')AND(vt0.c0)))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)AND(t0.c0 COLLATE RTRIM)))OR(CASE WHEN 0.509079237889559 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)AND(t0.c0 COLLATE RTRIM)))OR(CASE WHEN 0.509079237889559 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)AND(t0.c0 COLLATE RTRIM)))OR(CASE WHEN 0.509079237889559 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)AND(t0.c0 COLLATE RTRIM)))OR(CASE WHEN 0.509079237889559 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)AND(t0.c0 COLLATE RTRIM)))OR(CASE WHEN 0.509079237889559 THEN vt0.c0 END)));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((vt0.c0)OR(rt0.c1)))AND((rt0.c3 IN ())))) ORDER BY (((rt0.c1)<(vt0.c0)) IN ()) ASC, (((rt0.c3 IN ()))&(0.8268418768566732)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(rt0.c1)))AND((rt0.c3 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((rt0.c1)<(vt0.c0)) IN ()) ASC, (((rt0.c3 IN ()))&(0.8268418768566732)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((vt0.c0)OR(rt0.c1)))AND((rt0.c3 IN ())))) ORDER BY (((rt0.c1)<(vt0.c0)) IN ()) ASC, (((rt0.c3 IN ()))&(0.8268418768566732)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(rt0.c1)))AND((rt0.c3 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((rt0.c1)<(vt0.c0)) IN ()) ASC, (((rt0.c3 IN ()))&(0.8268418768566732)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((vt0.c0)OR(rt0.c1)))AND((rt0.c3 IN ())))) ORDER BY (((rt0.c1)<(vt0.c0)) IN ()) ASC, (((rt0.c3 IN ()))&(0.8268418768566732)) ASC  NULLS FIRST;
SELECT * FROM t0, vt0, rt0 WHERE ((~ (((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c0)AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE ((~ (((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c0)AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE ((~ (((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))));
SELECT ALL * FROM t0, rt0, vt0 WHERE (MIN((((0x3fdd4282, rt0.c2, x''))<=((x'', rt0.c4, t0.c0))), (rt0.c3 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((MIN((((0x3fdd4282, rt0.c2, x''))<=((x'', rt0.c4, t0.c0))), (rt0.c3 IN (vt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (MIN((((0x3fdd4282, rt0.c2, x''))<=((x'', rt0.c4, t0.c0))), (rt0.c3 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((MIN((((0x3fdd4282, rt0.c2, x''))<=((x'', rt0.c4, t0.c0))), (rt0.c3 IN (vt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (MIN((((0x3fdd4282, rt0.c2, x''))<=((x'', rt0.c4, t0.c0))), (rt0.c3 IN (vt0.c0))));
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE NOCASE AS TEXT) WHERE ((((t0.c0)) NOT BETWEEN ((((rt0.c1) IS FALSE))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((((rt0.c1) IS FALSE))) AND ((NULL)))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE NOCASE AS TEXT));
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE NOCASE AS TEXT) WHERE ((((t0.c0)) NOT BETWEEN ((((rt0.c1) IS FALSE))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((((rt0.c1) IS FALSE))) AND ((NULL)))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE NOCASE AS TEXT));
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE NOCASE AS TEXT) WHERE ((((t0.c0)) NOT BETWEEN ((((rt0.c1) IS FALSE))) AND ((NULL))));
SELECT ALL * FROM t0 WHERE ((('-1020654370')<>(((((((((x'')OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((('-1020654370')!=(((((((((x'')OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((('-1020654370')<>(((((((((x'')OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((('-1020654370')!=(((((((((x'')OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((('-1020654370')<>(((((((((x'')OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))));
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c0)>=(rt0.c3))))>((rt0.c4 COLLATE NOCASE)))) ORDER BY (((t0.c0)%(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)>=(rt0.c3))))>((rt0.c4 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((t0.c0)%(rt0.c1)) IN ()));
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c0)>=(rt0.c3))))>((rt0.c4 COLLATE NOCASE)))) ORDER BY (((t0.c0)%(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)>=(rt0.c3))))>((rt0.c4 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((t0.c0)%(rt0.c1)) IN ()));
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c0)>=(rt0.c3))))>((rt0.c4 COLLATE NOCASE)))) ORDER BY (((t0.c0)%(rt0.c1)) IN ());
SELECT * FROM rt0, vt0, t0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN NULL WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END) NOT BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (((('', rt0.c4, rt0.c4, rt0.c0, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c1, t0.c0, vt0.c0)) AND ((rt0.c1, rt0.c0, t0.c0, rt0.c4, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN NULL WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END) NOT BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (((('', rt0.c4, rt0.c4, rt0.c0, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c1, t0.c0, vt0.c0)) AND ((rt0.c1, rt0.c0, t0.c0, rt0.c4, rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN NULL WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END) NOT BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (((('', rt0.c4, rt0.c4, rt0.c0, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c1, t0.c0, vt0.c0)) AND ((rt0.c1, rt0.c0, t0.c0, rt0.c4, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN NULL WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END) NOT BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (((('', rt0.c4, rt0.c4, rt0.c0, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c1, t0.c0, vt0.c0)) AND ((rt0.c1, rt0.c0, t0.c0, rt0.c4, rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN NULL WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END) NOT BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (((('', rt0.c4, rt0.c4, rt0.c0, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c1, t0.c0, vt0.c0)) AND ((rt0.c1, rt0.c0, t0.c0, rt0.c4, rt0.c3))))));
SELECT * FROM rt0, vt0 WHERE ((((714146833)) BETWEEN ((((rt0.c1) ISNULL))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((714146833)) BETWEEN ((((rt0.c1) ISNULL))) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((714146833)) BETWEEN ((((rt0.c1) ISNULL))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((714146833)) BETWEEN ((((rt0.c1) ISNULL))) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((714146833)) BETWEEN ((((rt0.c1) ISNULL))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((x'06f3')) BETWEEN (((((rt0.c4))==((rt0.c4))))) AND ((CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((x'06f3')) BETWEEN (((((rt0.c4))=((rt0.c4))))) AND ((CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c1 END)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((x'06f3')) BETWEEN (((((rt0.c4))==((rt0.c4))))) AND ((CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((x'06f3')) BETWEEN (((((rt0.c4))=((rt0.c4))))) AND ((CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c1 END)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((x'06f3')) BETWEEN (((((rt0.c4))==((rt0.c4))))) AND ((CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c1 END))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c3)&((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)&((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c3)&((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)&((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c3)&((rt0.c0 IN ()))));
SELECT * FROM t0, vt0, rt0 WHERE (rt0.c0) ORDER BY '0.4342202131847941'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY '0.4342202131847941'  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE (rt0.c0) ORDER BY '0.4342202131847941'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY '0.4342202131847941'  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE (rt0.c0) ORDER BY '0.4342202131847941'  NULLS FIRST;
SELECT * FROM t0 WHERE (((((((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0)*(t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR((NOT (t0.c0)))))OR(CAST(t0.c0 AS TEXT))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND((t0.c0 IN (x'e27cc6da'))))) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0xffffffffa1c79719 ELSE t0.c0 END AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0)*(t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR((NOT (t0.c0)))))OR(CAST(t0.c0 AS TEXT))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND((t0.c0 IN (x'e27cc6da'))))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0Xffffffffa1c79719 ELSE t0.c0 END AS TEXT) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((((((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0)*(t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR((NOT (t0.c0)))))OR(CAST(t0.c0 AS TEXT))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND((t0.c0 IN (x'e27cc6da'))))) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0xffffffffa1c79719 ELSE t0.c0 END AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0)*(t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR((NOT (t0.c0)))))OR(CAST(t0.c0 AS TEXT))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND((t0.c0 IN (x'e27cc6da'))))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0Xffffffffa1c79719 ELSE t0.c0 END AS TEXT) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((((((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0)*(t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR((NOT (t0.c0)))))OR(CAST(t0.c0 AS TEXT))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND((t0.c0 IN (x'e27cc6da'))))) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0xffffffffa1c79719 ELSE t0.c0 END AS TEXT) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) AND ((((rt0.c0)|(rt0.c1))))) INNER JOIN vt0 ON (((rt0.c1 IN ())) ISNULL) WHERE ((((~ (t0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c4)&(rt0.c4))))) ORDER BY ((((t0.c0, t0.c0, rt0.c1))<=((rt0.c4, rt0.c2, rt0.c4))) IN ((((rt0.c0, rt0.c4, 0.06590639250920283))>=((rt0.c4, '-514938714', rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c4)&(rt0.c4))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) AND ((((rt0.c0)|(rt0.c1))))) INNER JOIN vt0 ON (((rt0.c1 IN ())) ISNULL) ORDER BY ((((t0.c0, t0.c0, rt0.c1))<=((rt0.c4, rt0.c2, rt0.c4))) IN ((((rt0.c0, rt0.c4, 0.06590639250920283))>=((rt0.c4, '-514938714', rt0.c3))))) DESC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) AND ((((rt0.c0)|(rt0.c1))))) INNER JOIN vt0 ON (((rt0.c1 IN ())) ISNULL) WHERE ((((~ (t0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c4)&(rt0.c4))))) ORDER BY ((((t0.c0, t0.c0, rt0.c1))<=((rt0.c4, rt0.c2, rt0.c4))) IN ((((rt0.c0, rt0.c4, 0.06590639250920283))>=((rt0.c4, '-514938714', rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c4)&(rt0.c4))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) AND ((((rt0.c0)|(rt0.c1))))) INNER JOIN vt0 ON (((rt0.c1 IN ())) ISNULL) ORDER BY ((((t0.c0, t0.c0, rt0.c1))<=((rt0.c4, rt0.c2, rt0.c4))) IN ((((rt0.c0, rt0.c4, 0.06590639250920283))>=((rt0.c4, '-514938714', rt0.c3))))) DESC);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((vt0.c0)-(CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END)) LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) NOTNULL) WHERE (COALESCE((NOT (t0.c0)), CAST(t0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((COALESCE((NOT (t0.c0)), CAST(t0.c0 AS TEXT))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((vt0.c0)-(CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END)) LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) NOTNULL));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((vt0.c0)-(CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END)) LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) NOTNULL) WHERE (COALESCE((NOT (t0.c0)), CAST(t0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((COALESCE((NOT (t0.c0)), CAST(t0.c0 AS TEXT))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((vt0.c0)-(CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END)) LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) NOTNULL));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((vt0.c0)-(CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END)) LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) NOTNULL) WHERE (COALESCE((NOT (t0.c0)), CAST(t0.c0 AS TEXT)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)>=(rt0.c3)) COLLATE RTRIM WHERE ((((((((((t0.c0 IN (rt0.c0)))AND(CASE WHEN t0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(((t0.c0)>=(0.05293016132483774)))))OR(CAST(rt0.c3 AS INTEGER))))AND(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c0 IN (rt0.c0)))AND(CASE WHEN t0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(((t0.c0)>=(0.05293016132483774)))))OR(CAST(rt0.c3 AS INTEGER))))AND(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)>=(rt0.c3)) COLLATE RTRIM);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)>=(rt0.c3)) COLLATE RTRIM WHERE ((((((((((t0.c0 IN (rt0.c0)))AND(CASE WHEN t0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(((t0.c0)>=(0.05293016132483774)))))OR(CAST(rt0.c3 AS INTEGER))))AND(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c0 IN (rt0.c0)))AND(CASE WHEN t0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(((t0.c0)>=(0.05293016132483774)))))OR(CAST(rt0.c3 AS INTEGER))))AND(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)>=(rt0.c3)) COLLATE RTRIM);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)>=(rt0.c3)) COLLATE RTRIM WHERE ((((((((((t0.c0 IN (rt0.c0)))AND(CASE WHEN t0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(((t0.c0)>=(0.05293016132483774)))))OR(CAST(rt0.c3 AS INTEGER))))AND(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((((NULL))>=((t0.c0)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((((NULL))>=((t0.c0)))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((((NULL))>=((t0.c0)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((((NULL))>=((t0.c0)))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((((NULL))>=((t0.c0)))) ISNULL) DESC;
SELECT * FROM t0 CROSS JOIN vt0 ON (((- (rt0.c1))) IS FALSE) RIGHT OUTER JOIN rt0 ON CASE CASE WHEN rt0.c1 THEN t0.c0 END  WHEN vt0.c0 COLLATE NOCASE THEN json_insert(vt0.c0, rt0.c4, rt0.c4) WHEN (((rt0.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c2)) AND ((vt0.c0, rt0.c4, vt0.c0))) THEN ((vt0.c0)IS(rt0.c0)) WHEN (rt0.c4 IN ()) THEN t0.c0 COLLATE BINARY ELSE rt0.c2 COLLATE NOCASE END WHERE (((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((- (rt0.c1))) IS FALSE) RIGHT OUTER JOIN rt0 ON CASE CASE WHEN rt0.c1 THEN t0.c0 END  WHEN vt0.c0 COLLATE NOCASE THEN json_insert(vt0.c0, rt0.c4, rt0.c4) WHEN (((rt0.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c2)) AND ((vt0.c0, rt0.c4, vt0.c0))) THEN ((vt0.c0)IS(rt0.c0)) WHEN (rt0.c4 IN ()) THEN t0.c0 COLLATE BINARY ELSE rt0.c2 COLLATE NOCASE END);
SELECT * FROM t0 CROSS JOIN vt0 ON (((- (rt0.c1))) IS FALSE) RIGHT OUTER JOIN rt0 ON CASE CASE WHEN rt0.c1 THEN t0.c0 END  WHEN vt0.c0 COLLATE NOCASE THEN json_insert(vt0.c0, rt0.c4, rt0.c4) WHEN (((rt0.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c2)) AND ((vt0.c0, rt0.c4, vt0.c0))) THEN ((vt0.c0)IS(rt0.c0)) WHEN (rt0.c4 IN ()) THEN t0.c0 COLLATE BINARY ELSE rt0.c2 COLLATE NOCASE END WHERE (((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((- (rt0.c1))) IS FALSE) RIGHT OUTER JOIN rt0 ON CASE CASE WHEN rt0.c1 THEN t0.c0 END  WHEN vt0.c0 COLLATE NOCASE THEN json_insert(vt0.c0, rt0.c4, rt0.c4) WHEN (((rt0.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c2)) AND ((vt0.c0, rt0.c4, vt0.c0))) THEN ((vt0.c0)IS(rt0.c0)) WHEN (rt0.c4 IN ()) THEN t0.c0 COLLATE BINARY ELSE rt0.c2 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c2))>((rt0.c3))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2))>((rt0.c3))) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c2))>((rt0.c3))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2))>((rt0.c3))) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c2))>((rt0.c3))) AS REAL));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE RTRIM) ORDER BY CHAR(rt0.c2, ((rt0.c3)*(rt0.c1)), CAST(rt0.c0 AS TEXT))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY CHAR(rt0.c2, ((rt0.c3)*(rt0.c1)), CAST(rt0.c0 AS TEXT))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE RTRIM) ORDER BY CHAR(rt0.c2, ((rt0.c3)*(rt0.c1)), CAST(rt0.c0 AS TEXT))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY CHAR(rt0.c2, ((rt0.c3)*(rt0.c1)), CAST(rt0.c0 AS TEXT))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE RTRIM) ORDER BY CHAR(rt0.c2, ((rt0.c3)*(rt0.c1)), CAST(rt0.c0 AS TEXT))  NULLS LAST;
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE '-803132873' END COLLATE BINARY WHERE (json_remove(rt0.c4, rt0.c1) COLLATE BINARY) ORDER BY ((CAST(rt0.c1 AS BLOB))<=((rt0.c4 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(rt0.c4, rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE '-803132873' END COLLATE BINARY ORDER BY ((CAST(rt0.c1 AS BLOB))<=((rt0.c4 IN ()))) ASC  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE '-803132873' END COLLATE BINARY WHERE (json_remove(rt0.c4, rt0.c1) COLLATE BINARY) ORDER BY ((CAST(rt0.c1 AS BLOB))<=((rt0.c4 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(rt0.c4, rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE '-803132873' END COLLATE BINARY ORDER BY ((CAST(rt0.c1 AS BLOB))<=((rt0.c4 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END THEN (rt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END THEN (rt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END THEN (rt0.c0 IN ()) END);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (rt0.c1) ORDER BY rt0.c1 ASC, '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY rt0.c1 ASC, '' DESC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (rt0.c1) ORDER BY rt0.c1 ASC, '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY rt0.c1 ASC, '' DESC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (rt0.c1) ORDER BY rt0.c1 ASC, '' DESC;
SELECT * FROM rt0 WHERE (((((rt0.c1) IS TRUE)) BETWEEN (json_object('-1881470448', rt0.c3, rt0.c1, rt0.c3)) AND ((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS TRUE)) BETWEEN (json_object('-1881470448', rt0.c3, rt0.c1, rt0.c3)) AND ((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1) IS TRUE)) BETWEEN (json_object('-1881470448', rt0.c3, rt0.c1, rt0.c3)) AND ((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS TRUE)) BETWEEN (json_object('-1881470448', rt0.c3, rt0.c1, rt0.c3)) AND ((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE CAST(0.3342401906704474 AS INTEGER)  WHEN rt0.c2 COLLATE RTRIM THEN rt0.c0 WHEN (vt0.c0 IN ()) THEN rt0.c0 WHEN t0.c0 THEN ((rt0.c4)IS(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(0.3342401906704474 AS INTEGER)  WHEN rt0.c2 COLLATE RTRIM THEN rt0.c0 WHEN (vt0.c0 IN ()) THEN rt0.c0 WHEN t0.c0 THEN ((rt0.c4)IS(rt0.c0)) END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE CAST(0.3342401906704474 AS INTEGER)  WHEN rt0.c2 COLLATE RTRIM THEN rt0.c0 WHEN (vt0.c0 IN ()) THEN rt0.c0 WHEN t0.c0 THEN ((rt0.c4)IS(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(0.3342401906704474 AS INTEGER)  WHEN rt0.c2 COLLATE RTRIM THEN rt0.c0 WHEN (vt0.c0 IN ()) THEN rt0.c0 WHEN t0.c0 THEN ((rt0.c4)IS(rt0.c0)) END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE CAST(0.3342401906704474 AS INTEGER)  WHEN rt0.c2 COLLATE RTRIM THEN rt0.c0 WHEN (vt0.c0 IN ()) THEN rt0.c0 WHEN t0.c0 THEN ((rt0.c4)IS(rt0.c0)) END);
SELECT ALL * FROM t0 WHERE ((((((t0.c0) NOT BETWEEN (0.4757637996074946) AND (t0.c0))))<((ABS(DISTINCT t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0) NOT BETWEEN (0.4757637996074946) AND (t0.c0))))<((ABS(DISTINCT t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0) NOT BETWEEN (0.4757637996074946) AND (t0.c0))))<((ABS(DISTINCT t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0) NOT BETWEEN (0.4757637996074946) AND (t0.c0))))<((ABS(DISTINCT t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0) NOT BETWEEN (0.4757637996074946) AND (t0.c0))))<((ABS(DISTINCT t0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)<<(vt0.c0)) IN (((vt0.c0)||(vt0.c0))))) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (TYPEOF(vt0.c0), ((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<<(vt0.c0)) IN (((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (TYPEOF(vt0.c0), ((vt0.c0) ISNULL))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)<<(vt0.c0)) IN (((vt0.c0)||(vt0.c0))))) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (TYPEOF(vt0.c0), ((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<<(vt0.c0)) IN (((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (TYPEOF(vt0.c0), ((vt0.c0) ISNULL))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)<<(vt0.c0)) IN (((vt0.c0)||(vt0.c0))))) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (TYPEOF(vt0.c0), ((vt0.c0) ISNULL)));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((vt0.c0 COLLATE BINARY)LIKE(((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) LEFT OUTER JOIN vt0 ON (((rt0.c4, rt0.c2, vt0.c0)) BETWEEN (('', ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)), (((1507859083)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))) AND ((rt0.c0 COLLATE BINARY, ((rt0.c2) IS TRUE), (((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0)))))) WHERE (UNLIKELY(DISTINCT NULL)) ORDER BY CAST((((rt0.c2, rt0.c2, '<J&{,', '855912440', rt0.c4)) BETWEEN ((rt0.c0, x'', rt0.c2, rt0.c2, rt0.c2)) AND (('-1986135605', rt0.c3, rt0.c4, 0.7947624465285156, rt0.c0))) AS REAL) ASC  NULLS FIRST, 0.22851402801976417  NULLS FIRST, (- (0.04124978090402753));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT NULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((vt0.c0 COLLATE BINARY)LIKE(((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) LEFT OUTER JOIN vt0 ON (((rt0.c4, rt0.c2, vt0.c0)) BETWEEN (('', ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)), (((1507859083)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))) AND ((rt0.c0 COLLATE BINARY, ((rt0.c2) IS TRUE), (((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0)))))) ORDER BY CAST((((rt0.c2, rt0.c2, '<J&{,', '855912440', rt0.c4)) BETWEEN ((rt0.c0, x'', rt0.c2, rt0.c2, rt0.c2)) AND (('-1986135605', rt0.c3, rt0.c4, 0.7947624465285156, rt0.c0))) AS REAL) ASC  NULLS FIRST, 0.22851402801976417  NULLS FIRST, (- (0.04124978090402753)));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((vt0.c0 COLLATE BINARY)LIKE(((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) LEFT OUTER JOIN vt0 ON (((rt0.c4, rt0.c2, vt0.c0)) BETWEEN (('', ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)), (((1507859083)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))) AND ((rt0.c0 COLLATE BINARY, ((rt0.c2) IS TRUE), (((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0)))))) WHERE (UNLIKELY(DISTINCT NULL)) ORDER BY CAST((((rt0.c2, rt0.c2, '<J&{,', '855912440', rt0.c4)) BETWEEN ((rt0.c0, x'', rt0.c2, rt0.c2, rt0.c2)) AND (('-1986135605', rt0.c3, rt0.c4, 0.7947624465285156, rt0.c0))) AS REAL) ASC  NULLS FIRST, 0.22851402801976417  NULLS FIRST, (- (0.04124978090402753));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT NULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((vt0.c0 COLLATE BINARY)LIKE(((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) LEFT OUTER JOIN vt0 ON (((rt0.c4, rt0.c2, vt0.c0)) BETWEEN (('', ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)), (((1507859083)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))) AND ((rt0.c0 COLLATE BINARY, ((rt0.c2) IS TRUE), (((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0)))))) ORDER BY CAST((((rt0.c2, rt0.c2, '<J&{,', '855912440', rt0.c4)) BETWEEN ((rt0.c0, x'', rt0.c2, rt0.c2, rt0.c2)) AND (('-1986135605', rt0.c3, rt0.c4, 0.7947624465285156, rt0.c0))) AS REAL) ASC  NULLS FIRST, 0.22851402801976417  NULLS FIRST, (- (0.04124978090402753)));
SELECT * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON CASE ((rt0.c3) BETWEEN (t0.c0) AND (rt0.c4))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 COLLATE BINARY END WHERE (((CASE WHEN rt0.c4 THEN '-166600002' ELSE rt0.c1 END) ISNULL)) ORDER BY ((((rt0.c2) BETWEEN (0.13014019101136898) AND (vt0.c0))) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((((']#6-h', vt0.c0, rt0.c1))<>((rt0.c1, t0.c0, t0.c0)))))  NULLS FIRST, 0.8087755898626299  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN '-166600002' ELSE rt0.c1 END) ISNULL)) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt0 ON CASE ((rt0.c3) BETWEEN (t0.c0) AND (rt0.c4))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 COLLATE BINARY END ORDER BY ((((rt0.c2) BETWEEN (0.13014019101136898) AND (vt0.c0))) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((((']#6-h', vt0.c0, rt0.c1))!=((rt0.c1, t0.c0, t0.c0)))))  NULLS FIRST, 0.8087755898626299  NULLS FIRST);
SELECT * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON CASE ((rt0.c3) BETWEEN (t0.c0) AND (rt0.c4))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 COLLATE BINARY END WHERE (((CASE WHEN rt0.c4 THEN '-166600002' ELSE rt0.c1 END) ISNULL)) ORDER BY ((((rt0.c2) BETWEEN (0.13014019101136898) AND (vt0.c0))) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((((']#6-h', vt0.c0, rt0.c1))<>((rt0.c1, t0.c0, t0.c0)))))  NULLS FIRST, 0.8087755898626299  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN '-166600002' ELSE rt0.c1 END) ISNULL)) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt0 ON CASE ((rt0.c3) BETWEEN (t0.c0) AND (rt0.c4))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 COLLATE BINARY END ORDER BY ((((rt0.c2) BETWEEN (0.13014019101136898) AND (vt0.c0))) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((((']#6-h', vt0.c0, rt0.c1))!=((rt0.c1, t0.c0, t0.c0)))))  NULLS FIRST, 0.8087755898626299  NULLS FIRST);
SELECT * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON CASE ((rt0.c3) BETWEEN (t0.c0) AND (rt0.c4))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 COLLATE BINARY END WHERE (((CASE WHEN rt0.c4 THEN '-166600002' ELSE rt0.c1 END) ISNULL)) ORDER BY ((((rt0.c2) BETWEEN (0.13014019101136898) AND (vt0.c0))) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((((']#6-h', vt0.c0, rt0.c1))<>((rt0.c1, t0.c0, t0.c0)))))  NULLS FIRST, 0.8087755898626299  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE ((((((((t0.c0))=((vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))) ORDER BY (((((((((((t0.c0))==((vt0.c0))))OR(CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(CAST(t0.c0 AS NUMERIC))))OR(t0.c0)))OR(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0))==((vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((((((t0.c0))==((vt0.c0))))OR(CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(CAST(t0.c0 AS NUMERIC))))OR(t0.c0)))OR(vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0, t0 WHERE ((((((((t0.c0))=((vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))) ORDER BY (((((((((((t0.c0))==((vt0.c0))))OR(CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(CAST(t0.c0 AS NUMERIC))))OR(t0.c0)))OR(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0))==((vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((((((t0.c0))==((vt0.c0))))OR(CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(CAST(t0.c0 AS NUMERIC))))OR(t0.c0)))OR(vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0, t0 WHERE ((((((((t0.c0))=((vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))) ORDER BY (((((((((((t0.c0))==((vt0.c0))))OR(CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(CAST(t0.c0 AS NUMERIC))))OR(t0.c0)))OR(vt0.c0 COLLATE NOCASE));
SELECT ALL * FROM t0 WHERE (CAST(((((((((t0.c0)AND(NULL)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS INTEGER)) ORDER BY (NOT (t0.c0 COLLATE BINARY)), (t0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t0.c0)AND(NULL)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c0 COLLATE BINARY)), (t0.c0 IN ()) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(((((((((t0.c0)AND(NULL)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS INTEGER)) ORDER BY (NOT (t0.c0 COLLATE BINARY)), (t0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t0.c0)AND(NULL)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c0 COLLATE BINARY)), (t0.c0 IN ()) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(((((((((t0.c0)AND(NULL)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS INTEGER)) ORDER BY (NOT (t0.c0 COLLATE BINARY)), (t0.c0 IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((rt0.c1)%(rt0.c0))))>((rt0.c4)))) ORDER BY LIKELIHOOD(DISTINCT (((('Y(Ðj/N,')AND(rt0.c0)))AND(NULL)), 0.13319211058341285) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)%(rt0.c0))))>((rt0.c4)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY LIKELIHOOD(DISTINCT (((('Y(Ðj/N,')AND(rt0.c0)))AND(NULL)), 0.13319211058341285) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((rt0.c1)%(rt0.c0))))>((rt0.c4)))) ORDER BY LIKELIHOOD(DISTINCT (((('Y(Ðj/N,')AND(rt0.c0)))AND(NULL)), 0.13319211058341285) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)%(rt0.c0))))>((rt0.c4)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY LIKELIHOOD(DISTINCT (((('Y(Ðj/N,')AND(rt0.c0)))AND(NULL)), 0.13319211058341285) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((rt0.c1)%(rt0.c0))))>((rt0.c4)))) ORDER BY LIKELIHOOD(DISTINCT (((('Y(Ðj/N,')AND(rt0.c0)))AND(NULL)), 0.13319211058341285) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY CASE ((vt0.c0)<<(vt0.c0))  WHEN vt0.c0 THEN json_remove(vt0.c0, NULL) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)<<(vt0.c0))  WHEN vt0.c0 THEN json_remove(vt0.c0, NULL) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT ALL * FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY CASE ((vt0.c0)<<(vt0.c0))  WHEN vt0.c0 THEN json_remove(vt0.c0, NULL) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)<<(vt0.c0))  WHEN vt0.c0 THEN json_remove(vt0.c0, NULL) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT ALL * FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY CASE ((vt0.c0)<<(vt0.c0))  WHEN vt0.c0 THEN json_remove(vt0.c0, NULL) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END;
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN (('-999745232') NOT NULL) THEN (((t0.c0, t0.c0, x'90ee')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) WHEN NULL THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) IS TRUE) ELSE ((t0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0  WHEN (('-999745232') NOT NULL) THEN (((t0.c0, t0.c0, x'90ee')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) WHEN NULL THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) IS TRUE) ELSE ((t0.c0) NOTNULL) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN (('-999745232') NOT NULL) THEN (((t0.c0, t0.c0, x'90ee')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) WHEN NULL THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) IS TRUE) ELSE ((t0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0  WHEN (('-999745232') NOT NULL) THEN (((t0.c0, t0.c0, x'90ee')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) WHEN NULL THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) IS TRUE) ELSE ((t0.c0) NOTNULL) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN (('-999745232') NOT NULL) THEN (((t0.c0, t0.c0, x'90ee')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) WHEN NULL THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) IS TRUE) ELSE ((t0.c0) NOTNULL) END);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (CAST(rt0.c2 AS REAL) IN (((((rt0.c2)AND(0.9581232770811188)))AND(vt0.c0)), ((((rt0.c0)AND(rt0.c4)))AND(t0.c0)))) CROSS JOIN rt0 ON ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c4))) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c4 THEN rt0.c3 END) AND (((((t0.c0)AND(NULL)))OR(rt0.c3)))) WHERE ((NULL IN ())) ORDER BY CAST(((rt0.c0)>=(rt0.c4)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (CAST(rt0.c2 AS REAL) IN (((((rt0.c2)AND(0.9581232770811188)))AND(vt0.c0)), ((((rt0.c0)AND(rt0.c4)))AND(t0.c0)))) CROSS JOIN rt0 ON ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c4))) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c4 THEN rt0.c3 END) AND (((((t0.c0)AND(NULL)))OR(rt0.c3)))) ORDER BY CAST(((rt0.c0)>=(rt0.c4)) AS REAL) ASC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (CAST(rt0.c2 AS REAL) IN (((((rt0.c2)AND(0.9581232770811188)))AND(vt0.c0)), ((((rt0.c0)AND(rt0.c4)))AND(t0.c0)))) CROSS JOIN rt0 ON ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c4))) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c4 THEN rt0.c3 END) AND (((((t0.c0)AND(NULL)))OR(rt0.c3)))) WHERE ((NULL IN ())) ORDER BY CAST(((rt0.c0)>=(rt0.c4)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (CAST(rt0.c2 AS REAL) IN (((((rt0.c2)AND(0.9581232770811188)))AND(vt0.c0)), ((((rt0.c0)AND(rt0.c4)))AND(t0.c0)))) CROSS JOIN rt0 ON ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c4))) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c4 THEN rt0.c3 END) AND (((((t0.c0)AND(NULL)))OR(rt0.c3)))) ORDER BY CAST(((rt0.c0)>=(rt0.c4)) AS REAL) ASC  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (json_array((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))), HEX(DISTINCT rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((json_array((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))), HEX(DISTINCT rt0.c4))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (json_array((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))), HEX(DISTINCT rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((json_array((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))), HEX(DISTINCT rt0.c4))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (json_array((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))), HEX(DISTINCT rt0.c4)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, NULL, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((0.07863641995130977, ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c0)), (((t0.c0, vt0.c0, vt0.c0))>=((t0.c0, t0.c0, vt0.c0))), vt0.c0)) AND ((((t0.c0)IS NOT(vt0.c0)), (~ (t0.c0)), CAST(vt0.c0 AS INTEGER), CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END, ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))))) ORDER BY (((t0.c0)>=(t0.c0)) IN (((vt0.c0) NOT NULL), ((t0.c0)%(t0.c0))))  NULLS FIRST, (((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN ('100528115') AND (vt0.c0))) AND ((~ (vt0.c0)))) ASC  NULLS LAST, 0.7896281583291326 ASC, ((CASE vt0.c0  WHEN '-1265158113' THEN t0.c0 WHEN 2.82932635E8 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE NULL END) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, NULL, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((0.07863641995130977, ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c0)), (((t0.c0, vt0.c0, vt0.c0))>=((t0.c0, t0.c0, vt0.c0))), vt0.c0)) AND ((((t0.c0)IS NOT(vt0.c0)), (~ (t0.c0)), CAST(vt0.c0 AS INTEGER), CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END, ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0)>=(t0.c0)) IN (((vt0.c0) NOT NULL), ((t0.c0)%(t0.c0))))  NULLS FIRST, (((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN ('100528115') AND (vt0.c0))) AND ((~ (vt0.c0)))) ASC  NULLS LAST, 0.7896281583291326 ASC, ((CASE vt0.c0  WHEN '-1265158113' THEN t0.c0 WHEN 2.82932635E8 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE NULL END) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, NULL, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((0.07863641995130977, ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c0)), (((t0.c0, vt0.c0, vt0.c0))>=((t0.c0, t0.c0, vt0.c0))), vt0.c0)) AND ((((t0.c0)IS NOT(vt0.c0)), (~ (t0.c0)), CAST(vt0.c0 AS INTEGER), CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END, ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))))) ORDER BY (((t0.c0)>=(t0.c0)) IN (((vt0.c0) NOT NULL), ((t0.c0)%(t0.c0))))  NULLS FIRST, (((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN ('100528115') AND (vt0.c0))) AND ((~ (vt0.c0)))) ASC  NULLS LAST, 0.7896281583291326 ASC, ((CASE vt0.c0  WHEN '-1265158113' THEN t0.c0 WHEN 2.82932635E8 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE NULL END) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, NULL, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((0.07863641995130977, ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c0)), (((t0.c0, vt0.c0, vt0.c0))>=((t0.c0, t0.c0, vt0.c0))), vt0.c0)) AND ((((t0.c0)IS NOT(vt0.c0)), (~ (t0.c0)), CAST(vt0.c0 AS INTEGER), CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END, ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0)>=(t0.c0)) IN (((vt0.c0) NOT NULL), ((t0.c0)%(t0.c0))))  NULLS FIRST, (((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN ('100528115') AND (vt0.c0))) AND ((~ (vt0.c0)))) ASC  NULLS LAST, 0.7896281583291326 ASC, ((CASE vt0.c0  WHEN '-1265158113' THEN t0.c0 WHEN 2.82932635E8 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE NULL END) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, NULL, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((0.07863641995130977, ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c0)), (((t0.c0, vt0.c0, vt0.c0))>=((t0.c0, t0.c0, vt0.c0))), vt0.c0)) AND ((((t0.c0)IS NOT(vt0.c0)), (~ (t0.c0)), CAST(vt0.c0 AS INTEGER), CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END, ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))))) ORDER BY (((t0.c0)>=(t0.c0)) IN (((vt0.c0) NOT NULL), ((t0.c0)%(t0.c0))))  NULLS FIRST, (((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN ('100528115') AND (vt0.c0))) AND ((~ (vt0.c0)))) ASC  NULLS LAST, 0.7896281583291326 ASC, ((CASE vt0.c0  WHEN '-1265158113' THEN t0.c0 WHEN 2.82932635E8 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE NULL END) IS FALSE) DESC;
SELECT * FROM vt0, t0 WHERE ((~ (CASE WHEN vt0.c0 THEN t0.c0 WHEN 0.6980511259904004 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN t0.c0 WHEN 0.6980511259904004 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((~ (CASE WHEN vt0.c0 THEN t0.c0 WHEN 0.6980511259904004 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN t0.c0 WHEN 0.6980511259904004 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((~ (CASE WHEN vt0.c0 THEN t0.c0 WHEN 0.6980511259904004 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'775c') ORDER BY t0.c0 ASC, (0.7947624465285156 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((x'775c') IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c0 ASC, (0.7947624465285156 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'775c') ORDER BY t0.c0 ASC, (0.7947624465285156 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((x'775c') IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c0 ASC, (0.7947624465285156 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'775c') ORDER BY t0.c0 ASC, (0.7947624465285156 IN ()) COLLATE BINARY;
SELECT * FROM rt0 WHERE ((~ (rt0.c3 COLLATE NOCASE))) ORDER BY (~ (((rt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c0) ISNULL))) ASC);
SELECT * FROM rt0 WHERE ((~ (rt0.c3 COLLATE NOCASE))) ORDER BY (~ (((rt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c0) ISNULL))) ASC);
SELECT * FROM rt0 WHERE ((~ (rt0.c3 COLLATE NOCASE))) ORDER BY (~ (((rt0.c0) ISNULL))) ASC;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((NULL)>=(rt0.c2))) BETWEEN (CAST(0.33098088820887495 AS INTEGER)) AND (CAST(rt0.c3 AS NUMERIC)))) ORDER BY 0.0675829846806626 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)>=(rt0.c2))) BETWEEN (CAST(0.33098088820887495 AS INTEGER)) AND (CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY 0.0675829846806626 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((NULL)>=(rt0.c2))) BETWEEN (CAST(0.33098088820887495 AS INTEGER)) AND (CAST(rt0.c3 AS NUMERIC)))) ORDER BY 0.0675829846806626 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)>=(rt0.c2))) BETWEEN (CAST(0.33098088820887495 AS INTEGER)) AND (CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY 0.0675829846806626 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((NULL)>=(rt0.c2))) BETWEEN (CAST(0.33098088820887495 AS INTEGER)) AND (CAST(rt0.c3 AS NUMERIC)))) ORDER BY 0.0675829846806626 ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((rt0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((rt0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((rt0.c2 IN ())))));
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (rt0.c3 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c3)))AND(t0.c0)))AND(vt0.c0)) THEN (- (rt0.c1)) END) ORDER BY ((t0.c0) IS TRUE)  NULLS LAST, (~ (((rt0.c0) NOT BETWEEN (rt0.c4) AND (NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c3)))AND(t0.c0)))AND(vt0.c0)) THEN (- (rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((t0.c0) IS TRUE)  NULLS LAST, (~ (((rt0.c0) NOT BETWEEN (rt0.c4) AND (NULL))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c3)))AND(t0.c0)))AND(vt0.c0)) THEN (- (rt0.c1)) END) ORDER BY ((t0.c0) IS TRUE)  NULLS LAST, (~ (((rt0.c0) NOT BETWEEN (rt0.c4) AND (NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c3)))AND(t0.c0)))AND(vt0.c0)) THEN (- (rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((t0.c0) IS TRUE)  NULLS LAST, (~ (((rt0.c0) NOT BETWEEN (rt0.c4) AND (NULL))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c3)))AND(t0.c0)))AND(vt0.c0)) THEN (- (rt0.c1)) END) ORDER BY ((t0.c0) IS TRUE)  NULLS LAST, (~ (((rt0.c0) NOT BETWEEN (rt0.c4) AND (NULL))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)AND(vt0.c0)) IN ())) ORDER BY (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)AND(vt0.c0)) IN ())) ORDER BY (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)AND(vt0.c0)) IN ())) ORDER BY (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT * FROM t0, vt0, rt0 WHERE (((NULL)*(vt0.c0))) ORDER BY (- (vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)*(vt0.c0))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (- (vt0.c0)) COLLATE BINARY DESC);
SELECT * FROM t0, vt0, rt0 WHERE (((NULL)*(vt0.c0))) ORDER BY (- (vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)*(vt0.c0))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (- (vt0.c0)) COLLATE BINARY DESC);
SELECT * FROM t0, vt0, rt0 WHERE (((NULL)*(vt0.c0))) ORDER BY (- (vt0.c0)) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0 IN ())))>((0Xffffffff9ea72f99 COLLATE NOCASE))) WHERE (NULLIF((((NULL))=((vt0.c0))), (((rt0.c3, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, '-587115808', rt0.c3))))) ORDER BY (((((rt0.c1, rt0.c3, rt0.c0, x'', rt0.c3)) BETWEEN ((rt0.c2, vt0.c0, rt0.c2, rt0.c2, vt0.c0)) AND (('j~G', '', rt0.c1, rt0.c1, rt0.c3))))>>(((vt0.c0)>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((((NULL))=((vt0.c0))), (((rt0.c3, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, '-587115808', rt0.c3))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0 IN ())))>((0Xffffffff9ea72f99 COLLATE NOCASE))) ORDER BY (((((rt0.c1, rt0.c3, rt0.c0, x'', rt0.c3)) BETWEEN ((rt0.c2, vt0.c0, rt0.c2, rt0.c2, vt0.c0)) AND (('j~G', '', rt0.c1, rt0.c1, rt0.c3))))>>(((vt0.c0)>(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0 IN ())))>((0Xffffffff9ea72f99 COLLATE NOCASE))) WHERE (NULLIF((((NULL))=((vt0.c0))), (((rt0.c3, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, '-587115808', rt0.c3))))) ORDER BY (((((rt0.c1, rt0.c3, rt0.c0, x'', rt0.c3)) BETWEEN ((rt0.c2, vt0.c0, rt0.c2, rt0.c2, vt0.c0)) AND (('j~G', '', rt0.c1, rt0.c1, rt0.c3))))>>(((vt0.c0)>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((((NULL))=((vt0.c0))), (((rt0.c3, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, '-587115808', rt0.c3))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0 IN ())))>((0Xffffffff9ea72f99 COLLATE NOCASE))) ORDER BY (((((rt0.c1, rt0.c3, rt0.c0, x'', rt0.c3)) BETWEEN ((rt0.c2, vt0.c0, rt0.c2, rt0.c2, vt0.c0)) AND (('j~G', '', rt0.c1, rt0.c1, rt0.c3))))>>(((vt0.c0)>(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0 IN ())))>((0Xffffffff9ea72f99 COLLATE NOCASE))) WHERE (NULLIF((((NULL))=((vt0.c0))), (((rt0.c3, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, '-587115808', rt0.c3))))) ORDER BY (((((rt0.c1, rt0.c3, rt0.c0, x'', rt0.c3)) BETWEEN ((rt0.c2, vt0.c0, rt0.c2, rt0.c2, vt0.c0)) AND (('j~G', '', rt0.c1, rt0.c1, rt0.c3))))>>(((vt0.c0)>(rt0.c1))));
SELECT * FROM rt0, t0 WHERE (((RTRIM(rt0.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((RTRIM(rt0.c1)) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((RTRIM(rt0.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((RTRIM(rt0.c1)) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((RTRIM(rt0.c1)) IS FALSE));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (x'33a3' COLLATE RTRIM) ORDER BY ((rt0.c2)|(rt0.c3)) COLLATE BINARY COLLATE RTRIM, ((((((t0.c0)IS(rt0.c4)))OR(load_extension(rt0.c4))))AND((((rt0.c2, rt0.c2, '-803132873'))<>((rt0.c3, t0.c0, rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'33a3' COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c2)|(rt0.c3)) COLLATE BINARY COLLATE RTRIM, ((((((t0.c0)IS(rt0.c4)))OR(load_extension(rt0.c4))))AND((((rt0.c2, rt0.c2, '-803132873'))<>((rt0.c3, t0.c0, rt0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (x'33a3' COLLATE RTRIM) ORDER BY ((rt0.c2)|(rt0.c3)) COLLATE BINARY COLLATE RTRIM, ((((((t0.c0)IS(rt0.c4)))OR(load_extension(rt0.c4))))AND((((rt0.c2, rt0.c2, '-803132873'))<>((rt0.c3, t0.c0, rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'33a3' COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c2)|(rt0.c3)) COLLATE BINARY COLLATE RTRIM, ((((((t0.c0)IS(rt0.c4)))OR(load_extension(rt0.c4))))AND((((rt0.c2, rt0.c2, '-803132873'))<>((rt0.c3, t0.c0, rt0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (x'33a3' COLLATE RTRIM) ORDER BY ((rt0.c2)|(rt0.c3)) COLLATE BINARY COLLATE RTRIM, ((((((t0.c0)IS(rt0.c4)))OR(load_extension(rt0.c4))))AND((((rt0.c2, rt0.c2, '-803132873'))<>((rt0.c3, t0.c0, rt0.c2)))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 INDEXED BY i64, vt0 WHERE (CASE WHEN CAST(rt0.c1 AS REAL) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END END) ORDER BY (((((((((rt0.c4 IN ()))AND(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c4 END)))OR(CAST(0.08684102526852677 AS REAL))))OR(vt0.c0 COLLATE BINARY)))AND(rt0.c3))  NULLS LAST, ((NULL)OR(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS REAL) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0, t0 INDEXED BY i64, vt0 ORDER BY (((((((((rt0.c4 IN ()))AND(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c4 END)))OR(CAST(0.08684102526852677 AS REAL))))OR(vt0.c0 COLLATE BINARY)))AND(rt0.c3))  NULLS LAST, ((NULL)OR(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 INDEXED BY i64, vt0 WHERE (CASE WHEN CAST(rt0.c1 AS REAL) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END END) ORDER BY (((((((((rt0.c4 IN ()))AND(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c4 END)))OR(CAST(0.08684102526852677 AS REAL))))OR(vt0.c0 COLLATE BINARY)))AND(rt0.c3))  NULLS LAST, ((NULL)OR(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS REAL) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0, t0 INDEXED BY i64, vt0 ORDER BY (((((((((rt0.c4 IN ()))AND(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c4 END)))OR(CAST(0.08684102526852677 AS REAL))))OR(vt0.c0 COLLATE BINARY)))AND(rt0.c3))  NULLS LAST, ((NULL)OR(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 END))  NULLS LAST);
SELECT * FROM rt0, t0, vt0 WHERE (IFNULL(rtreenode(vt0.c0, '0.7224559161605665'), (- (rt0.c3)))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(rtreenode(vt0.c0, '0.7224559161605665'), (- (rt0.c3)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT * FROM rt0, t0, vt0 WHERE (IFNULL(rtreenode(vt0.c0, '0.7224559161605665'), (- (rt0.c3)))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(rtreenode(vt0.c0, '0.7224559161605665'), (- (rt0.c3)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT * FROM rt0, t0, vt0 WHERE (IFNULL(rtreenode(vt0.c0, '0.7224559161605665'), (- (rt0.c3)))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((+ (t0.c0))) BETWEEN (CASE rt0.c4  WHEN t0.c0 THEN '' END) AND (((rt0.c3)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0))) BETWEEN (CASE rt0.c4  WHEN t0.c0 THEN '' END) AND (((rt0.c3)|(rt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((+ (t0.c0))) BETWEEN (CASE rt0.c4  WHEN t0.c0 THEN '' END) AND (((rt0.c3)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0))) BETWEEN (CASE rt0.c4  WHEN t0.c0 THEN '' END) AND (((rt0.c3)|(rt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((+ (t0.c0))) BETWEEN (CASE rt0.c4  WHEN t0.c0 THEN '' END) AND (((rt0.c3)|(rt0.c0)))));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON ((((rt0.c4)|(rt0.c2))) IS TRUE) WHERE (((t0.c0)!=(rt0.c4)) COLLATE NOCASE) ORDER BY CASE WHEN LIKELY(DISTINCT rt0.c0) THEN CAST(0.5478594968382285 AS REAL) END;
SELECT SUM(count) FROM (SELECT ((((t0.c0)<>(rt0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((rt0.c4)|(rt0.c2))) IS TRUE) ORDER BY CASE WHEN LIKELY(DISTINCT rt0.c0) THEN CAST(0.5478594968382285 AS REAL) END);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON ((((rt0.c4)|(rt0.c2))) IS TRUE) WHERE (((t0.c0)!=(rt0.c4)) COLLATE NOCASE) ORDER BY CASE WHEN LIKELY(DISTINCT rt0.c0) THEN CAST(0.5478594968382285 AS REAL) END;
SELECT SUM(count) FROM (SELECT ((((t0.c0)<>(rt0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((rt0.c4)|(rt0.c2))) IS TRUE) ORDER BY CASE WHEN LIKELY(DISTINCT rt0.c0) THEN CAST(0.5478594968382285 AS REAL) END);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON ((((rt0.c4)|(rt0.c2))) IS TRUE) WHERE (((t0.c0)!=(rt0.c4)) COLLATE NOCASE) ORDER BY CASE WHEN LIKELY(DISTINCT rt0.c0) THEN CAST(0.5478594968382285 AS REAL) END;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0) ISNULL) IN ())) ORDER BY (('-999745232' COLLATE BINARY) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) ISNULL) IN ())) IS TRUE)  as count FROM t0 ORDER BY (('-999745232' COLLATE BINARY) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0) ISNULL) IN ())) ORDER BY (('-999745232' COLLATE BINARY) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) ISNULL) IN ())) IS TRUE)  as count FROM t0 ORDER BY (('-999745232' COLLATE BINARY) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0) ISNULL) IN ())) ORDER BY (('-999745232' COLLATE BINARY) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((x'')IS NOT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) LEFT OUTER JOIN t0 ON DATE((((rt0.c1))<((t0.c0))), ((t0.c0)+(rt0.c3)), ((((rt0.c2)OR(rt0.c3)))OR(t0.c0))) WHERE ((('-1415052499' COLLATE BINARY)==(((rt0.c3) BETWEEN (t0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('-1415052499' COLLATE BINARY)==(((rt0.c3) BETWEEN (t0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((x'')IS NOT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) LEFT OUTER JOIN t0 ON DATE((((rt0.c1))<((t0.c0))), ((t0.c0)+(rt0.c3)), ((((rt0.c2)OR(rt0.c3)))OR(t0.c0))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((x'')IS NOT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) LEFT OUTER JOIN t0 ON DATE((((rt0.c1))<((t0.c0))), ((t0.c0)+(rt0.c3)), ((((rt0.c2)OR(rt0.c3)))OR(t0.c0))) WHERE ((('-1415052499' COLLATE BINARY)==(((rt0.c3) BETWEEN (t0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('-1415052499' COLLATE BINARY)==(((rt0.c3) BETWEEN (t0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((x'')IS NOT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) LEFT OUTER JOIN t0 ON DATE((((rt0.c1))<((t0.c0))), ((t0.c0)+(rt0.c3)), ((((rt0.c2)OR(rt0.c3)))OR(t0.c0))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((x'')IS NOT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) LEFT OUTER JOIN t0 ON DATE((((rt0.c1))<((t0.c0))), ((t0.c0)+(rt0.c3)), ((((rt0.c2)OR(rt0.c3)))OR(t0.c0))) WHERE ((('-1415052499' COLLATE BINARY)==(((rt0.c3) BETWEEN (t0.c0) AND (rt0.c0)))));
SELECT * FROM vt0, rt0 WHERE (CASE (- (rt0.c0))  WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)) THEN (rt0.c3 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c0))  WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)) THEN (rt0.c3 IN ()) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE (- (rt0.c0))  WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)) THEN (rt0.c3 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c0))  WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)) THEN (rt0.c3 IN ()) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE (- (rt0.c0))  WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)) THEN (rt0.c3 IN ()) END);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((((((((((((((t0.c0)OR(rt0.c1)))OR(0.7896281583291326)))OR(rt0.c2)))OR(rt0.c4)))OR(t0.c0)))AND(rt0.c3))) IS FALSE) WHERE ((((rt0.c3)) BETWEEN ((((rt0.c4)-('-1931069616')))) AND ((CAST(rt0.c3 AS BLOB))))) ORDER BY CASE WHEN ((((-482765397)AND(rt0.c4)))OR(t0.c0)) THEN CAST(rt0.c2 AS TEXT) END  NULLS FIRST, CAST(rt0.c1 AS TEXT) COLLATE RTRIM COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((((rt0.c4)-('-1931069616')))) AND ((CAST(rt0.c3 AS BLOB))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((((((((((((t0.c0)OR(rt0.c1)))OR(0.7896281583291326)))OR(rt0.c2)))OR(rt0.c4)))OR(t0.c0)))AND(rt0.c3))) IS FALSE) ORDER BY CASE WHEN ((((-482765397)AND(rt0.c4)))OR(t0.c0)) THEN CAST(rt0.c2 AS TEXT) END  NULLS FIRST, CAST(rt0.c1 AS TEXT) COLLATE RTRIM COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((((((((((((((t0.c0)OR(rt0.c1)))OR(0.7896281583291326)))OR(rt0.c2)))OR(rt0.c4)))OR(t0.c0)))AND(rt0.c3))) IS FALSE) WHERE ((((rt0.c3)) BETWEEN ((((rt0.c4)-('-1931069616')))) AND ((CAST(rt0.c3 AS BLOB))))) ORDER BY CASE WHEN ((((-482765397)AND(rt0.c4)))OR(t0.c0)) THEN CAST(rt0.c2 AS TEXT) END  NULLS FIRST, CAST(rt0.c1 AS TEXT) COLLATE RTRIM COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((((rt0.c4)-('-1931069616')))) AND ((CAST(rt0.c3 AS BLOB))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((((((((((((t0.c0)OR(rt0.c1)))OR(0.7896281583291326)))OR(rt0.c2)))OR(rt0.c4)))OR(t0.c0)))AND(rt0.c3))) IS FALSE) ORDER BY CASE WHEN ((((-482765397)AND(rt0.c4)))OR(t0.c0)) THEN CAST(rt0.c2 AS TEXT) END  NULLS FIRST, CAST(rt0.c1 AS TEXT) COLLATE RTRIM COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((((((((((((((t0.c0)OR(rt0.c1)))OR(0.7896281583291326)))OR(rt0.c2)))OR(rt0.c4)))OR(t0.c0)))AND(rt0.c3))) IS FALSE) WHERE ((((rt0.c3)) BETWEEN ((((rt0.c4)-('-1931069616')))) AND ((CAST(rt0.c3 AS BLOB))))) ORDER BY CASE WHEN ((((-482765397)AND(rt0.c4)))OR(t0.c0)) THEN CAST(rt0.c2 AS TEXT) END  NULLS FIRST, CAST(rt0.c1 AS TEXT) COLLATE RTRIM COLLATE RTRIM DESC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4, rt0.c1, rt0.c3)) BETWEEN ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN '' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END, CAST(rt0.c1 AS TEXT), ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((NULL, ((rt0.c3)IS NOT(rt0.c1)), ((((rt0.c3)AND(rt0.c3)))OR(rt0.c1)))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4, rt0.c1, rt0.c3)) BETWEEN ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN '' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END, CAST(rt0.c1 AS TEXT), ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((NULL, ((rt0.c3)IS NOT(rt0.c1)), ((((rt0.c3)AND(rt0.c3)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c4, rt0.c1, rt0.c3)) BETWEEN ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN '' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END, CAST(rt0.c1 AS TEXT), ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((NULL, ((rt0.c3)IS NOT(rt0.c1)), ((((rt0.c3)AND(rt0.c3)))OR(rt0.c1)))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4, rt0.c1, rt0.c3)) BETWEEN ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN '' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END, CAST(rt0.c1 AS TEXT), ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((NULL, ((rt0.c3)IS NOT(rt0.c1)), ((((rt0.c3)AND(rt0.c3)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c4, rt0.c1, rt0.c3)) BETWEEN ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN '' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END, CAST(rt0.c1 AS TEXT), ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((NULL, ((rt0.c3)IS NOT(rt0.c1)), ((((rt0.c3)AND(rt0.c3)))OR(rt0.c1)))))) ORDER BY NULL DESC;
SELECT COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON ((((((((((((((((vt0.c0)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))AND((((rt0.c1, 'dcè½P', rt0.c1))>=((rt0.c4, rt0.c1, rt0.c3))))))AND(x'bc1e')))OR(rt0.c2 COLLATE NOCASE)))AND(((((rt0.c0)AND(rt0.c4)))AND(rt0.c4)))) WHERE (LOWER(((rt0.c2)<<(rt0.c0)))) ORDER BY (((('')>(t0.c0)))+(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)) DESC, ((((rt0.c4)>(t0.c0))) BETWEEN ((- (rt0.c3))) AND ((NOT (rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(((rt0.c2)<<(rt0.c0)))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON ((((((((((((((((vt0.c0)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))AND((((rt0.c1, 'dcè½P', rt0.c1))>=((rt0.c4, rt0.c1, rt0.c3))))))AND(x'bc1e')))OR(rt0.c2 COLLATE NOCASE)))AND(((((rt0.c0)AND(rt0.c4)))AND(rt0.c4)))) ORDER BY (((('')>(t0.c0)))+(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)) DESC, ((((rt0.c4)>(t0.c0))) BETWEEN ((- (rt0.c3))) AND ((NOT (rt0.c4))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON ((((((((((((((((vt0.c0)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))AND((((rt0.c1, 'dcè½P', rt0.c1))>=((rt0.c4, rt0.c1, rt0.c3))))))AND(x'bc1e')))OR(rt0.c2 COLLATE NOCASE)))AND(((((rt0.c0)AND(rt0.c4)))AND(rt0.c4)))) WHERE (LOWER(((rt0.c2)<<(rt0.c0)))) ORDER BY (((('')>(t0.c0)))+(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)) DESC, ((((rt0.c4)>(t0.c0))) BETWEEN ((- (rt0.c3))) AND ((NOT (rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(((rt0.c2)<<(rt0.c0)))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON ((((((((((((((((vt0.c0)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))AND((((rt0.c1, 'dcè½P', rt0.c1))>=((rt0.c4, rt0.c1, rt0.c3))))))AND(x'bc1e')))OR(rt0.c2 COLLATE NOCASE)))AND(((((rt0.c0)AND(rt0.c4)))AND(rt0.c4)))) ORDER BY (((('')>(t0.c0)))+(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)) DESC, ((((rt0.c4)>(t0.c0))) BETWEEN ((- (rt0.c3))) AND ((NOT (rt0.c4))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON ((((((((((((((((vt0.c0)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))AND((((rt0.c1, 'dcè½P', rt0.c1))>=((rt0.c4, rt0.c1, rt0.c3))))))AND(x'bc1e')))OR(rt0.c2 COLLATE NOCASE)))AND(((((rt0.c0)AND(rt0.c4)))AND(rt0.c4)))) WHERE (LOWER(((rt0.c2)<<(rt0.c0)))) ORDER BY (((('')>(t0.c0)))+(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)) DESC, ((((rt0.c4)>(t0.c0))) BETWEEN ((- (rt0.c3))) AND ((NOT (rt0.c4))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('8+E');
SELECT SUM(count) FROM (SELECT ALL (('8+E') IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('8+E');
SELECT SUM(count) FROM (SELECT ALL (('8+E') IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('8+E');
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) ISNULL))>((((vt0.c0, t0.c0, rt0.c4, rt0.c3, rt0.c2))!=((rt0.c0, t0.c0, vt0.c0, rt0.c2, '3S'))))) FULL OUTER JOIN t0 ON ((((t0.c0) BETWEEN (x'') AND (rt0.c0))) IS FALSE) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) ISNULL))>((((vt0.c0, t0.c0, rt0.c4, rt0.c3, rt0.c2))<>((rt0.c0, t0.c0, vt0.c0, rt0.c2, '3S'))))) FULL OUTER JOIN t0 ON ((((t0.c0) BETWEEN (x'') AND (rt0.c0))) IS FALSE));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) ISNULL))>((((vt0.c0, t0.c0, rt0.c4, rt0.c3, rt0.c2))!=((rt0.c0, t0.c0, vt0.c0, rt0.c2, '3S'))))) FULL OUTER JOIN t0 ON ((((t0.c0) BETWEEN (x'') AND (rt0.c0))) IS FALSE) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) ISNULL))>((((vt0.c0, t0.c0, rt0.c4, rt0.c3, rt0.c2))<>((rt0.c0, t0.c0, vt0.c0, rt0.c2, '3S'))))) FULL OUTER JOIN t0 ON ((((t0.c0) BETWEEN (x'') AND (rt0.c0))) IS FALSE));
SELECT * FROM t0, vt0, rt0 WHERE (((('q3')*(rt0.c3)) IN ((NOT (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((('q3')*(rt0.c3)) IN ((NOT (rt0.c3))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((('q3')*(rt0.c3)) IN ((NOT (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((('q3')*(rt0.c3)) IN ((NOT (rt0.c3))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((('q3')*(rt0.c3)) IN ((NOT (rt0.c3)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c0) NOT NULL)) ISNULL) WHERE (CASE CASE WHEN x'' THEN rt0.c2 ELSE rt0.c2 END  WHEN (t0.c0 IN ()) THEN (rt0.c3 IN ()) ELSE ((rt0.c4) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN x'' THEN rt0.c2 ELSE rt0.c2 END  WHEN (t0.c0 IN ()) THEN (rt0.c3 IN ()) ELSE ((rt0.c4) NOT NULL) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c0) NOT NULL)) ISNULL));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c0) NOT NULL)) ISNULL) WHERE (CASE CASE WHEN x'' THEN rt0.c2 ELSE rt0.c2 END  WHEN (t0.c0 IN ()) THEN (rt0.c3 IN ()) ELSE ((rt0.c4) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN x'' THEN rt0.c2 ELSE rt0.c2 END  WHEN (t0.c0 IN ()) THEN (rt0.c3 IN ()) ELSE ((rt0.c4) NOT NULL) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c0) NOT NULL)) ISNULL));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c0) NOT NULL)) ISNULL) WHERE (CASE CASE WHEN x'' THEN rt0.c2 ELSE rt0.c2 END  WHEN (t0.c0 IN ()) THEN (rt0.c3 IN ()) ELSE ((rt0.c4) NOT NULL) END);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((((vt0.c0) NOTNULL)))>=(((((rt0.c1, rt0.c0, rt0.c0))<=((t0.c0, vt0.c0, rt0.c2))))))) ORDER BY (~ (UNLIKELY(DISTINCT rt0.c4)))  NULLS FIRST, (rt0.c3 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOTNULL)))>=(((((rt0.c1, rt0.c0, rt0.c0))<=((t0.c0, vt0.c0, rt0.c2))))))) IS TRUE)  as count FROM rt0, t0 NOT INDEXED, vt0 ORDER BY (~ (UNLIKELY(DISTINCT rt0.c4)))  NULLS FIRST, (rt0.c3 COLLATE BINARY IN ()) ASC);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((((vt0.c0) NOTNULL)))>=(((((rt0.c1, rt0.c0, rt0.c0))<=((t0.c0, vt0.c0, rt0.c2))))))) ORDER BY (~ (UNLIKELY(DISTINCT rt0.c4)))  NULLS FIRST, (rt0.c3 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOTNULL)))>=(((((rt0.c1, rt0.c0, rt0.c0))<=((t0.c0, vt0.c0, rt0.c2))))))) IS TRUE)  as count FROM rt0, t0 NOT INDEXED, vt0 ORDER BY (~ (UNLIKELY(DISTINCT rt0.c4)))  NULLS FIRST, (rt0.c3 COLLATE BINARY IN ()) ASC);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((((vt0.c0) NOTNULL)))>=(((((rt0.c1, rt0.c0, rt0.c0))<=((t0.c0, vt0.c0, rt0.c2))))))) ORDER BY (~ (UNLIKELY(DISTINCT rt0.c4)))  NULLS FIRST, (rt0.c3 COLLATE BINARY IN ()) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) IN ()) DESC  NULLS FIRST, (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN 0.2486489602009866 THEN rt0.c3 END IN (((rt0.c0)<(rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) IN ()) DESC  NULLS FIRST, (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN 0.2486489602009866 THEN rt0.c3 END IN (((rt0.c0)<(rt0.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) IN ()) DESC  NULLS FIRST, (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN 0.2486489602009866 THEN rt0.c3 END IN (((rt0.c0)<(rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) IN ()) DESC  NULLS FIRST, (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN 0.2486489602009866 THEN rt0.c3 END IN (((rt0.c0)<(rt0.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) IN ()) DESC  NULLS FIRST, (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN 0.2486489602009866 THEN rt0.c3 END IN (((rt0.c0)<(rt0.c3))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (((rt0.c1 COLLATE BINARY)&((((((((('274260333')AND(vt0.c0)))OR(rt0.c4)))AND('u9')))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)&((((((((('274260333')AND(vt0.c0)))OR(rt0.c4)))AND('u9')))AND(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (((rt0.c1 COLLATE BINARY)&((((((((('274260333')AND(vt0.c0)))OR(rt0.c4)))AND('u9')))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)&((((((((('274260333')AND(vt0.c0)))OR(rt0.c4)))AND('u9')))AND(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (((rt0.c1 COLLATE BINARY)&((((((((('274260333')AND(vt0.c0)))OR(rt0.c4)))AND('u9')))AND(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON TRIM(LIKELIHOOD(DISTINCT rt0.c0, 0.4349848605222859), rt0.c4) RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END) AND (CAST(rt0.c3 AS NUMERIC))) WHERE (NULLIF(SQLITE_COMPILEOPTION_GET(rt0.c1), rt0.c1 COLLATE NOCASE)) ORDER BY ((+ (rt0.c0)) IN ((((NULL))<=(('')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(SQLITE_COMPILEOPTION_GET(rt0.c1), rt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON TRIM(LIKELIHOOD(DISTINCT rt0.c0, 0.4349848605222859), rt0.c4) RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END) AND (CAST(rt0.c3 AS NUMERIC))) ORDER BY ((+ (rt0.c0)) IN ((((NULL))<=(('')))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON TRIM(LIKELIHOOD(DISTINCT rt0.c0, 0.4349848605222859), rt0.c4) RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END) AND (CAST(rt0.c3 AS NUMERIC))) WHERE (NULLIF(SQLITE_COMPILEOPTION_GET(rt0.c1), rt0.c1 COLLATE NOCASE)) ORDER BY ((+ (rt0.c0)) IN ((((NULL))<=(('')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(SQLITE_COMPILEOPTION_GET(rt0.c1), rt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON TRIM(LIKELIHOOD(DISTINCT rt0.c0, 0.4349848605222859), rt0.c4) RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END) AND (CAST(rt0.c3 AS NUMERIC))) ORDER BY ((+ (rt0.c0)) IN ((((NULL))<=(('')))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((CAST(t0.c0 AS INTEGER))OR(HEX(DISTINCT vt0.c0))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c0 AS INTEGER))OR(HEX(DISTINCT vt0.c0))))AND(NULL))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((CAST(t0.c0 AS INTEGER))OR(HEX(DISTINCT vt0.c0))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c0 AS INTEGER))OR(HEX(DISTINCT vt0.c0))))AND(NULL))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((CAST(t0.c0 AS INTEGER))OR(HEX(DISTINCT vt0.c0))))AND(NULL)));
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((((((t0.c0)OR(-1074486940)))AND(t0.c0)))AND(0.20667988057253017)))AND(t0.c0)), (t0.c0 IN (t0.c0)), NULL)) AND (((((t0.c0)) BETWEEN ((t0.c0)) AND ((x'be5d'))), t0.c0, ((t0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((((((t0.c0)OR(-1074486940)))AND(t0.c0)))AND(0.20667988057253017)))AND(t0.c0)), (t0.c0 IN (t0.c0)), NULL)) AND (((((t0.c0)) BETWEEN ((t0.c0)) AND ((x'be5d'))), t0.c0, ((t0.c0) IS FALSE))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((((((t0.c0)OR(-1074486940)))AND(t0.c0)))AND(0.20667988057253017)))AND(t0.c0)), (t0.c0 IN (t0.c0)), NULL)) AND (((((t0.c0)) BETWEEN ((t0.c0)) AND ((x'be5d'))), t0.c0, ((t0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((((((t0.c0)OR(-1074486940)))AND(t0.c0)))AND(0.20667988057253017)))AND(t0.c0)), (t0.c0 IN (t0.c0)), NULL)) AND (((((t0.c0)) BETWEEN ((t0.c0)) AND ((x'be5d'))), t0.c0, ((t0.c0) IS FALSE))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((((((t0.c0)OR(-1074486940)))AND(t0.c0)))AND(0.20667988057253017)))AND(t0.c0)), (t0.c0 IN (t0.c0)), NULL)) AND (((((t0.c0)) BETWEEN ((t0.c0)) AND ((x'be5d'))), t0.c0, ((t0.c0) IS FALSE)))));
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c0)<=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((vt0.c0)<=(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c0)<=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((vt0.c0)<=(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c0)<=(vt0.c0))));
SELECT * FROM t0, rt0 WHERE (((TYPEOF(rt0.c1)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c1)) NOT NULL)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((TYPEOF(rt0.c1)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c1)) NOT NULL)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((TYPEOF(rt0.c1)) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(''))) BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(1.374075566E9)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(''))) BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(1.374075566E9)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(''))) BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(1.374075566E9)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(''))) BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(1.374075566E9)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(''))) BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(1.374075566E9)))OR(vt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c3 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c0)-(t0.c0)))AND(vt0.c0)))OR(UNLIKELY(DISTINCT t0.c0))))OR(((vt0.c0)OR(vt0.c0)))))OR(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)-(t0.c0)))AND(vt0.c0)))OR(UNLIKELY(DISTINCT t0.c0))))OR(((vt0.c0)OR(vt0.c0)))))OR(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c0)-(t0.c0)))AND(vt0.c0)))OR(UNLIKELY(DISTINCT t0.c0))))OR(((vt0.c0)OR(vt0.c0)))))OR(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)-(t0.c0)))AND(vt0.c0)))OR(UNLIKELY(DISTINCT t0.c0))))OR(((vt0.c0)OR(vt0.c0)))))OR(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c0)-(t0.c0)))AND(vt0.c0)))OR(UNLIKELY(DISTINCT t0.c0))))OR(((vt0.c0)OR(vt0.c0)))))OR(((t0.c0) NOT NULL))));
SELECT * FROM rt0 WHERE (TRIM(DISTINCT rt0.c0, rt0.c3) COLLATE NOCASE) ORDER BY 0xffffffffbf03d521 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt0.c0, rt0.c3) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY 0Xffffffffbf03d521 DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT rt0.c0, rt0.c3) COLLATE NOCASE) ORDER BY 0xffffffffbf03d521 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt0.c0, rt0.c3) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY 0Xffffffffbf03d521 DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT rt0.c0, rt0.c3) COLLATE NOCASE) ORDER BY 0xffffffffbf03d521 DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0, rt0 WHERE (((IFNULL(NULL, rt0.c0))AND(rt0.c0 COLLATE NOCASE))) ORDER BY (((t0.c0 IN ()))<>(NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(NULL, rt0.c0))AND(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((t0.c0 IN ()))<>(NULL)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((IFNULL(NULL, rt0.c0))AND(rt0.c0 COLLATE NOCASE))) ORDER BY (((t0.c0 IN ()))<>(NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(NULL, rt0.c0))AND(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((t0.c0 IN ()))<>(NULL)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((IFNULL(NULL, rt0.c0))AND(rt0.c0 COLLATE NOCASE))) ORDER BY (((t0.c0 IN ()))<>(NULL)) ASC  NULLS LAST;
SELECT * FROM t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((NOT (t0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((NOT (t0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((NOT (t0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON CASE (NOT (t0.c0))  WHEN (NOT (rt0.c2)) THEN (rt0.c2 IN ()) WHEN 0x29c20d7 THEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c4)) END FULL OUTER JOIN t0 ON LOWER(DISTINCT (((NULL, t0.c0, vt0.c0)) BETWEEN ((rt0.c4, rt0.c2, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1)))) WHERE (((((rt0.c3)OR(t0.c0)))AND('0.7947624465285156')) COLLATE BINARY) ORDER BY (((UPPER(DISTINCT 0.08589666731023249)))>((rt0.c1 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)OR(t0.c0)))AND('0.7947624465285156')) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE (NOT (t0.c0))  WHEN (NOT (rt0.c2)) THEN (rt0.c2 IN ()) WHEN 0X29c20d7 THEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c4)) END FULL OUTER JOIN t0 ON LOWER(DISTINCT (((NULL, t0.c0, vt0.c0)) BETWEEN ((rt0.c4, rt0.c2, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1)))) ORDER BY (((UPPER(DISTINCT 0.08589666731023249)))>((rt0.c1 COLLATE RTRIM)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON CASE (NOT (t0.c0))  WHEN (NOT (rt0.c2)) THEN (rt0.c2 IN ()) WHEN 0x29c20d7 THEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c4)) END FULL OUTER JOIN t0 ON LOWER(DISTINCT (((NULL, t0.c0, vt0.c0)) BETWEEN ((rt0.c4, rt0.c2, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1)))) WHERE (((((rt0.c3)OR(t0.c0)))AND('0.7947624465285156')) COLLATE BINARY) ORDER BY (((UPPER(DISTINCT 0.08589666731023249)))>((rt0.c1 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)OR(t0.c0)))AND('0.7947624465285156')) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE (NOT (t0.c0))  WHEN (NOT (rt0.c2)) THEN (rt0.c2 IN ()) WHEN 0X29c20d7 THEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c4)) END FULL OUTER JOIN t0 ON LOWER(DISTINCT (((NULL, t0.c0, vt0.c0)) BETWEEN ((rt0.c4, rt0.c2, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1)))) ORDER BY (((UPPER(DISTINCT 0.08589666731023249)))>((rt0.c1 COLLATE RTRIM)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN 'W' THEN rt0.c3 ELSE rt0.c3 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 'W' THEN rt0.c3 ELSE rt0.c3 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN 'W' THEN rt0.c3 ELSE rt0.c3 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 'W' THEN rt0.c3 ELSE rt0.c3 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN 'W' THEN rt0.c3 ELSE rt0.c3 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((vt0.c0 IN ())) ORDER BY ((((((((rt0.c1)AND(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)))))AND(0.734578949430346)))AND((((rt0.c2, x'', rt0.c0))=((rt0.c4, rt0.c4, rt0.c1))))))OR(CAST(rt0.c3 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c1)AND(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)))))AND(0.734578949430346)))AND((((rt0.c2, x'', rt0.c0))=((rt0.c4, rt0.c4, rt0.c1))))))OR(CAST(rt0.c3 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((vt0.c0 IN ())) ORDER BY ((((((((rt0.c1)AND(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)))))AND(0.734578949430346)))AND((((rt0.c2, x'', rt0.c0))=((rt0.c4, rt0.c4, rt0.c1))))))OR(CAST(rt0.c3 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c1)AND(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)))))AND(0.734578949430346)))AND((((rt0.c2, x'', rt0.c0))=((rt0.c4, rt0.c4, rt0.c1))))))OR(CAST(rt0.c3 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((vt0.c0 IN ())) ORDER BY ((((((((rt0.c1)AND(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)))))AND(0.734578949430346)))AND((((rt0.c2, x'', rt0.c0))=((rt0.c4, rt0.c4, rt0.c1))))))OR(CAST(rt0.c3 AS INTEGER)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0))=((rt0.c1))))*(rt0.c1 COLLATE NOCASE))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))/(((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))=((rt0.c1))))*(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))/(((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0))=((rt0.c1))))*(rt0.c1 COLLATE NOCASE))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))/(((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))=((rt0.c1))))*(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))/(((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0))=((rt0.c1))))*(rt0.c1 COLLATE NOCASE))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))/(((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))) DESC;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)))<>(((rt0.c4)&(rt0.c2)))) WHERE ((((rt0.c4) BETWEEN (rt0.c2) AND (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c4) BETWEEN (rt0.c2) AND (t0.c0)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)))!=(((rt0.c4)&(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)))<>(((rt0.c4)&(rt0.c2)))) WHERE ((((rt0.c4) BETWEEN (rt0.c2) AND (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c4) BETWEEN (rt0.c2) AND (t0.c0)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)))!=(((rt0.c4)&(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)))<>(((rt0.c4)&(rt0.c2)))) WHERE ((((rt0.c4) BETWEEN (rt0.c2) AND (t0.c0)) IN ()));
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((((((((((CASE WHEN rt0.c1 THEN rt0.c2 END)AND(LOWER(t0.c0))))AND(((x'')<<(rt0.c0)))))AND((('-482765397') BETWEEN (vt0.c0) AND (vt0.c0)))))AND(rt0.c2)))AND(((rt0.c0)IS(t0.c0)))))OR((~ (rt0.c0))))) ORDER BY ((CAST(rt0.c1 AS TEXT))/(((rt0.c2) NOT NULL))) ASC  NULLS FIRST, CASE rt0.c1 COLLATE NOCASE  WHEN UPPER(DISTINCT vt0.c0) THEN ((NULL) IS TRUE) END, (NOT (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE WHEN rt0.c1 THEN rt0.c2 END)AND(LOWER(t0.c0))))AND(((x'')<<(rt0.c0)))))AND((('-482765397') BETWEEN (vt0.c0) AND (vt0.c0)))))AND(rt0.c2)))AND(((rt0.c0)IS(t0.c0)))))OR((~ (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((CAST(rt0.c1 AS TEXT))/(((rt0.c2) NOT NULL))) ASC  NULLS FIRST, CASE rt0.c1 COLLATE NOCASE  WHEN UPPER(DISTINCT vt0.c0) THEN ((NULL) IS TRUE) END, (NOT (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((((((((((CASE WHEN rt0.c1 THEN rt0.c2 END)AND(LOWER(t0.c0))))AND(((x'')<<(rt0.c0)))))AND((('-482765397') BETWEEN (vt0.c0) AND (vt0.c0)))))AND(rt0.c2)))AND(((rt0.c0)IS(t0.c0)))))OR((~ (rt0.c0))))) ORDER BY ((CAST(rt0.c1 AS TEXT))/(((rt0.c2) NOT NULL))) ASC  NULLS FIRST, CASE rt0.c1 COLLATE NOCASE  WHEN UPPER(DISTINCT vt0.c0) THEN ((NULL) IS TRUE) END, (NOT (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE WHEN rt0.c1 THEN rt0.c2 END)AND(LOWER(t0.c0))))AND(((x'')<<(rt0.c0)))))AND((('-482765397') BETWEEN (vt0.c0) AND (vt0.c0)))))AND(rt0.c2)))AND(((rt0.c0)IS(t0.c0)))))OR((~ (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((CAST(rt0.c1 AS TEXT))/(((rt0.c2) NOT NULL))) ASC  NULLS FIRST, CASE rt0.c1 COLLATE NOCASE  WHEN UPPER(DISTINCT vt0.c0) THEN ((NULL) IS TRUE) END, (NOT (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((((((((((CASE WHEN rt0.c1 THEN rt0.c2 END)AND(LOWER(t0.c0))))AND(((x'')<<(rt0.c0)))))AND((('-482765397') BETWEEN (vt0.c0) AND (vt0.c0)))))AND(rt0.c2)))AND(((rt0.c0)IS(t0.c0)))))OR((~ (rt0.c0))))) ORDER BY ((CAST(rt0.c1 AS TEXT))/(((rt0.c2) NOT NULL))) ASC  NULLS FIRST, CASE rt0.c1 COLLATE NOCASE  WHEN UPPER(DISTINCT vt0.c0) THEN ((NULL) IS TRUE) END, (NOT (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('dcè½P')>(vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (load_extension(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((('dcè½P')>(vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (load_extension(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('dcè½P')>(vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (load_extension(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((('dcè½P')>(vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (load_extension(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM rt0 WHERE (((((rt0.c3) ISNULL))*(rt0.c4 COLLATE RTRIM))) ORDER BY CASE WHEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN x'655f' ELSE rt0.c3 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) ISNULL))*(rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN x'655f' ELSE rt0.c3 END END  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c3) ISNULL))*(rt0.c4 COLLATE RTRIM))) ORDER BY CASE WHEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN x'655f' ELSE rt0.c3 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) ISNULL))*(rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN x'655f' ELSE rt0.c3 END END  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c3) ISNULL))*(rt0.c4 COLLATE RTRIM))) ORDER BY CASE WHEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN x'655f' ELSE rt0.c3 END END  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (((((((rt0.c3) NOTNULL))AND(((rt0.c1)<=(rt0.c0)))))OR(((t0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOTNULL))AND(((rt0.c1)<=(rt0.c0)))))OR(((t0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c2 ASC);
SELECT ALL * FROM rt0, t0 WHERE (((((((rt0.c3) NOTNULL))AND(((rt0.c1)<=(rt0.c0)))))OR(((t0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOTNULL))AND(((rt0.c1)<=(rt0.c0)))))OR(((t0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c2 ASC);
SELECT ALL * FROM rt0, t0 WHERE (((((((rt0.c3) NOTNULL))AND(((rt0.c1)<=(rt0.c0)))))OR(((t0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) ORDER BY rt0.c2 ASC;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) IN ()));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (CAST(NULL AS NUMERIC) IN ())  NULLS LAST, (((+ (t0.c0)))!=(CAST(t0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (CAST(NULL AS NUMERIC) IN ())  NULLS LAST, (((+ (t0.c0)))<>(CAST(t0.c0 AS TEXT))));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (CAST(NULL AS NUMERIC) IN ())  NULLS LAST, (((+ (t0.c0)))!=(CAST(t0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (CAST(NULL AS NUMERIC) IN ())  NULLS LAST, (((+ (t0.c0)))<>(CAST(t0.c0 AS TEXT))));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (CAST(NULL AS NUMERIC) IN ())  NULLS LAST, (((+ (t0.c0)))!=(CAST(t0.c0 AS TEXT)));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0)OR(rt0.c2)))<((+ (rt0.c3))))) ORDER BY ((((((t0.c0)OR(rt0.c2)))AND(rt0.c3))) NOT BETWEEN ('1454526668') AND ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ASC  NULLS FIRST, load_extension(rt0.c2) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(rt0.c2)))<((+ (rt0.c3))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((t0.c0)OR(rt0.c2)))AND(rt0.c3))) NOT BETWEEN ('1454526668') AND ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ASC  NULLS FIRST, load_extension(rt0.c2) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0)OR(rt0.c2)))<((+ (rt0.c3))))) ORDER BY ((((((t0.c0)OR(rt0.c2)))AND(rt0.c3))) NOT BETWEEN ('1454526668') AND ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ASC  NULLS FIRST, load_extension(rt0.c2) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(rt0.c2)))<((+ (rt0.c3))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((t0.c0)OR(rt0.c2)))AND(rt0.c3))) NOT BETWEEN ('1454526668') AND ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ASC  NULLS FIRST, load_extension(rt0.c2) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0)OR(rt0.c2)))<((+ (rt0.c3))))) ORDER BY ((((((t0.c0)OR(rt0.c2)))AND(rt0.c3))) NOT BETWEEN ('1454526668') AND ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ASC  NULLS FIRST, load_extension(rt0.c2) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE ((x'')OR(t0.c0))  WHEN x'' THEN ((t0.c0) BETWEEN (0.8087755898626299) AND (t0.c0)) WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0) IS FALSE) WHEN (~ (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ((((t0.c0)AND(t0.c0)))OR(-2.066274175E9)) END) ORDER BY (+ (UPPER(t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((x'')OR(t0.c0))  WHEN x'' THEN ((t0.c0) BETWEEN (0.8087755898626299) AND (t0.c0)) WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0) IS FALSE) WHEN (~ (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ((((t0.c0)AND(t0.c0)))OR(-2.066274175E9)) END) IS TRUE)  as count FROM t0 ORDER BY (+ (UPPER(t0.c0)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE ((x'')OR(t0.c0))  WHEN x'' THEN ((t0.c0) BETWEEN (0.8087755898626299) AND (t0.c0)) WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0) IS FALSE) WHEN (~ (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ((((t0.c0)AND(t0.c0)))OR(-2.066274175E9)) END) ORDER BY (+ (UPPER(t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((x'')OR(t0.c0))  WHEN x'' THEN ((t0.c0) BETWEEN (0.8087755898626299) AND (t0.c0)) WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0) IS FALSE) WHEN (~ (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ((((t0.c0)AND(t0.c0)))OR(-2.066274175E9)) END) IS TRUE)  as count FROM t0 ORDER BY (+ (UPPER(t0.c0)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE ((x'')OR(t0.c0))  WHEN x'' THEN ((t0.c0) BETWEEN (0.8087755898626299) AND (t0.c0)) WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0) IS FALSE) WHEN (~ (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ((((t0.c0)AND(t0.c0)))OR(-2.066274175E9)) END) ORDER BY (+ (UPPER(t0.c0)))  NULLS LAST;
SELECT * FROM t0, vt0, rt0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS INTEGER) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS INTEGER) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE ((((((((vt0.c0)OR(t0.c0)))AND('-1020654370')))AND(x'')))AND(vt0.c0)) END) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR('282932635')))OR(t0.c0)))AND(vt0.c0))) BETWEEN ((NOT (t0.c0))) AND (vt0.c0 COLLATE BINARY)), (~ (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE ((((((((vt0.c0)OR(t0.c0)))AND('-1020654370')))AND(x'')))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR('282932635')))OR(t0.c0)))AND(vt0.c0))) BETWEEN ((NOT (t0.c0))) AND (vt0.c0 COLLATE BINARY)), (~ (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE ((((((((vt0.c0)OR(t0.c0)))AND('-1020654370')))AND(x'')))AND(vt0.c0)) END) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR('282932635')))OR(t0.c0)))AND(vt0.c0))) BETWEEN ((NOT (t0.c0))) AND (vt0.c0 COLLATE BINARY)), (~ (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE ((((((((vt0.c0)OR(t0.c0)))AND('-1020654370')))AND(x'')))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR('282932635')))OR(t0.c0)))AND(vt0.c0))) BETWEEN ((NOT (t0.c0))) AND (vt0.c0 COLLATE BINARY)), (~ (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE ((((((((vt0.c0)OR(t0.c0)))AND('-1020654370')))AND(x'')))AND(vt0.c0)) END) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR('282932635')))OR(t0.c0)))AND(vt0.c0))) BETWEEN ((NOT (t0.c0))) AND (vt0.c0 COLLATE BINARY)), (~ (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE (LOWER((('-1945969545') ISNULL))) ORDER BY ((((t0.c0)*(rt0.c4)))+(CAST(rt0.c4 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER((('-1945969545') ISNULL))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c0)*(rt0.c4)))+(CAST(rt0.c4 AS NUMERIC))) ASC);
SELECT ALL * FROM t0, rt0 WHERE (LOWER((('-1945969545') ISNULL))) ORDER BY ((((t0.c0)*(rt0.c4)))+(CAST(rt0.c4 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER((('-1945969545') ISNULL))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c0)*(rt0.c4)))+(CAST(rt0.c4 AS NUMERIC))) ASC);
SELECT ALL * FROM t0, rt0 WHERE (LOWER((('-1945969545') ISNULL))) ORDER BY ((((t0.c0)*(rt0.c4)))+(CAST(rt0.c4 AS NUMERIC))) ASC;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (TYPEOF(DISTINCT ((rt0.c2) ISNULL))) ORDER BY CASE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END  WHEN ((rt0.c1)*(rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) END DESC  NULLS LAST, CASE (+ (rt0.c1))  WHEN (((('722969055')AND(rt0.c2)))AND(vt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((rt0.c2) ISNULL))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CASE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END  WHEN ((rt0.c1)*(rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) END DESC  NULLS LAST, CASE (+ (rt0.c1))  WHEN (((('722969055')AND(rt0.c2)))AND(vt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (TYPEOF(DISTINCT ((rt0.c2) ISNULL))) ORDER BY CASE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END  WHEN ((rt0.c1)*(rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) END DESC  NULLS LAST, CASE (+ (rt0.c1))  WHEN (((('722969055')AND(rt0.c2)))AND(vt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((rt0.c2) ISNULL))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CASE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END  WHEN ((rt0.c1)*(rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) END DESC  NULLS LAST, CASE (+ (rt0.c1))  WHEN (((('722969055')AND(rt0.c2)))AND(vt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (TYPEOF(DISTINCT ((rt0.c2) ISNULL))) ORDER BY CASE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END  WHEN ((rt0.c1)*(rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) END DESC  NULLS LAST, CASE (+ (rt0.c1))  WHEN (((('722969055')AND(rt0.c2)))AND(vt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2, rt0.c0)))<((rt0.c2 IN ())))) ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN (+ (rt0.c1)) ELSE (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) END;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c2, rt0.c0)))<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN (+ (rt0.c1)) ELSE (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) END);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2, rt0.c0)))<((rt0.c2 IN ())))) ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN (+ (rt0.c1)) ELSE (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) END;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c2, rt0.c0)))<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN (+ (rt0.c1)) ELSE (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) END);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2, rt0.c0)))<((rt0.c2 IN ())))) ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN (+ (rt0.c1)) ELSE (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) END;
SELECT * FROM vt0, t0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS NUMERIC))))AND('0.7661832873494648')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS NUMERIC))))AND('0.7661832873494648'))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS NUMERIC))))AND('0.7661832873494648')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS NUMERIC))))AND('0.7661832873494648'))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS NUMERIC))))AND('0.7661832873494648')));
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((('39ç¬¬q')IS NOT(t0.c0)))>=(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((('39ç¬¬q')IS NOT(t0.c0)))>=(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((('39ç¬¬q')IS NOT(t0.c0)))>=(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((('39ç¬¬q')IS NOT(t0.c0)))>=(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((('39ç¬¬q')IS NOT(t0.c0)))>=(CAST(rt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0) ISNULL)) NOT NULL)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0) ISNULL)) NOT NULL)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0) ISNULL)) NOT NULL)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CAST((rt0.c1 IN ()) AS REAL) FULL OUTER JOIN vt0 ON ((x'') BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE RTRIM WHERE ((((LOWER(DISTINCT t0.c0), CAST(rt0.c1 AS REAL), (rt0.c2 IN ())))<((((rt0.c4) BETWEEN (rt0.c3) AND (0X3e3fef97)), (~ (rt0.c4)), ((((vt0.c0)OR(rt0.c4)))AND(0.07241461700233309)))))) ORDER BY CASE WHEN (t0.c0 IN ()) THEN vt0.c0 COLLATE BINARY END ASC, ((json_patch(rt0.c1, rt0.c2))&((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((LOWER(DISTINCT t0.c0), CAST(rt0.c1 AS REAL), (rt0.c2 IN ())))<((((rt0.c4) BETWEEN (rt0.c3) AND (0x3e3fef97)), (~ (rt0.c4)), ((((vt0.c0)OR(rt0.c4)))AND(0.07241461700233309)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CAST((rt0.c1 IN ()) AS REAL) FULL OUTER JOIN vt0 ON ((x'') BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE RTRIM ORDER BY CASE WHEN (t0.c0 IN ()) THEN vt0.c0 COLLATE BINARY END ASC, ((json_patch(rt0.c1, rt0.c2))&((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CAST((rt0.c1 IN ()) AS REAL) FULL OUTER JOIN vt0 ON ((x'') BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE RTRIM WHERE ((((LOWER(DISTINCT t0.c0), CAST(rt0.c1 AS REAL), (rt0.c2 IN ())))<((((rt0.c4) BETWEEN (rt0.c3) AND (0X3e3fef97)), (~ (rt0.c4)), ((((vt0.c0)OR(rt0.c4)))AND(0.07241461700233309)))))) ORDER BY CASE WHEN (t0.c0 IN ()) THEN vt0.c0 COLLATE BINARY END ASC, ((json_patch(rt0.c1, rt0.c2))&((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((LOWER(DISTINCT t0.c0), CAST(rt0.c1 AS REAL), (rt0.c2 IN ())))<((((rt0.c4) BETWEEN (rt0.c3) AND (0x3e3fef97)), (~ (rt0.c4)), ((((vt0.c0)OR(rt0.c4)))AND(0.07241461700233309)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CAST((rt0.c1 IN ()) AS REAL) FULL OUTER JOIN vt0 ON ((x'') BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE RTRIM ORDER BY CASE WHEN (t0.c0 IN ()) THEN vt0.c0 COLLATE BINARY END ASC, ((json_patch(rt0.c1, rt0.c2))&((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CAST((rt0.c1 IN ()) AS REAL) FULL OUTER JOIN vt0 ON ((x'') BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE RTRIM WHERE ((((LOWER(DISTINCT t0.c0), CAST(rt0.c1 AS REAL), (rt0.c2 IN ())))<((((rt0.c4) BETWEEN (rt0.c3) AND (0X3e3fef97)), (~ (rt0.c4)), ((((vt0.c0)OR(rt0.c4)))AND(0.07241461700233309)))))) ORDER BY CASE WHEN (t0.c0 IN ()) THEN vt0.c0 COLLATE BINARY END ASC, ((json_patch(rt0.c1, rt0.c2))&((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c4)))));
SELECT * FROM t0, rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c4 ELSE rt0.c2 END))>=((((rt0.c2)<<(rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c4 ELSE rt0.c2 END))>=((((rt0.c2)<<(rt0.c4)))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c4 ELSE rt0.c2 END))>=((((rt0.c2)<<(rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c4 ELSE rt0.c2 END))>=((((rt0.c2)<<(rt0.c4)))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c4 ELSE rt0.c2 END))>=((((rt0.c2)<<(rt0.c4))))));
SELECT COUNT(*) FROM vt0 NOT INDEXED FULL OUTER JOIN t0 ON (+ (((t0.c0) ISNULL))) FULL OUTER JOIN rt0 ON (- (((((((((vt0.c0)OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))) WHERE (((+ (rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c3)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (+ (((t0.c0) ISNULL))) FULL OUTER JOIN rt0 ON (- (((((((((vt0.c0)OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))));
SELECT COUNT(*) FROM vt0 NOT INDEXED FULL OUTER JOIN t0 ON (+ (((t0.c0) ISNULL))) FULL OUTER JOIN rt0 ON (- (((((((((vt0.c0)OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))) WHERE (((+ (rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c3)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (+ (((t0.c0) ISNULL))) FULL OUTER JOIN rt0 ON (- (((((((((vt0.c0)OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))));
SELECT COUNT(*) FROM vt0 NOT INDEXED FULL OUTER JOIN t0 ON (+ (((t0.c0) ISNULL))) FULL OUTER JOIN rt0 ON (- (((((((((vt0.c0)OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))) WHERE (((+ (rt0.c3)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (((((NULL)AND((t0.c0 IN ()))))OR(((((t0.c0)AND(t0.c0)))OR(t0.c0))))) ORDER BY 0xffffffffbbec17ae  NULLS LAST, (+ ((t0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND((t0.c0 IN ()))))OR(((((t0.c0)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY 0xffffffffbbec17ae  NULLS LAST, (+ ((t0.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((NULL)AND((t0.c0 IN ()))))OR(((((t0.c0)AND(t0.c0)))OR(t0.c0))))) ORDER BY 0xffffffffbbec17ae  NULLS LAST, (+ ((t0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND((t0.c0 IN ()))))OR(((((t0.c0)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY 0xffffffffbbec17ae  NULLS LAST, (+ ((t0.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((NULL)AND((t0.c0 IN ()))))OR(((((t0.c0)AND(t0.c0)))OR(t0.c0))))) ORDER BY 0xffffffffbbec17ae  NULLS LAST, (+ ((t0.c0 IN ()))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST('' AS NUMERIC)) ORDER BY SUBSTR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.6826326835784265 WHEN '' THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS REAL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY SUBSTR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.6826326835784265 WHEN '' THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS REAL)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST('' AS NUMERIC)) ORDER BY SUBSTR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.6826326835784265 WHEN '' THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS REAL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY SUBSTR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.6826326835784265 WHEN '' THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS REAL)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST('' AS NUMERIC)) ORDER BY SUBSTR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.6826326835784265 WHEN '' THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS REAL)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c2) ISNULL)) AND (((((rt0.c3)AND(rt0.c2)))AND(t0.c0))))) ORDER BY (- ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))) DESC  NULLS FIRST, (((((rt0.c4) ISNULL), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END, (rt0.c2 IN (vt0.c0))))=((UNLIKELY(rt0.c3), t0.c0 COLLATE BINARY, ((((((((((((rt0.c3)OR('-2066274175')))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c2) ISNULL)) AND (((((rt0.c3)AND(rt0.c2)))AND(t0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (- ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))) DESC  NULLS FIRST, (((((rt0.c4) ISNULL), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END, (rt0.c2 IN (vt0.c0))))=((UNLIKELY(rt0.c3), t0.c0 COLLATE BINARY, ((((((((((((rt0.c3)OR('-2066274175')))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c2) ISNULL)) AND (((((rt0.c3)AND(rt0.c2)))AND(t0.c0))))) ORDER BY (- ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))) DESC  NULLS FIRST, (((((rt0.c4) ISNULL), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END, (rt0.c2 IN (vt0.c0))))=((UNLIKELY(rt0.c3), t0.c0 COLLATE BINARY, ((((((((((((rt0.c3)OR('-2066274175')))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c2) ISNULL)) AND (((((rt0.c3)AND(rt0.c2)))AND(t0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (- ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))) DESC  NULLS FIRST, (((((rt0.c4) ISNULL), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END, (rt0.c2 IN (vt0.c0))))=((UNLIKELY(rt0.c3), t0.c0 COLLATE BINARY, ((((((((((((rt0.c3)OR('-2066274175')))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c2) ISNULL)) AND (((((rt0.c3)AND(rt0.c2)))AND(t0.c0))))) ORDER BY (- ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))) DESC  NULLS FIRST, (((((rt0.c4) ISNULL), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END, (rt0.c2 IN (vt0.c0))))=((UNLIKELY(rt0.c3), t0.c0 COLLATE BINARY, ((((((((((((rt0.c3)OR('-2066274175')))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (LENGTH(LIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(LIKELY(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LENGTH(LIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(LIKELY(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LENGTH(LIKELY(vt0.c0)));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((CAST(t0.c0 AS TEXT))AND(LTRIM(rt0.c2, rt0.c2))))AND(CASE WHEN t0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c4 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1071465090' ELSE rt0.c2 END)))OR(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t0.c0 AS TEXT))AND(LTRIM(rt0.c2, rt0.c2))))AND(CASE WHEN t0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c4 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1071465090' ELSE rt0.c2 END)))OR(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((CAST(t0.c0 AS TEXT))AND(LTRIM(rt0.c2, rt0.c2))))AND(CASE WHEN t0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c4 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1071465090' ELSE rt0.c2 END)))OR(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t0.c0 AS TEXT))AND(LTRIM(rt0.c2, rt0.c2))))AND(CASE WHEN t0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c4 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1071465090' ELSE rt0.c2 END)))OR(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((CAST(t0.c0 AS TEXT))AND(LTRIM(rt0.c2, rt0.c2))))AND(CASE WHEN t0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c4 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1071465090' ELSE rt0.c2 END)))OR(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0) NOTNULL))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)))-(rt0.c3 COLLATE RTRIM))) ORDER BY ((((((((((((rt0.c0)AND(t0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(t0.c0)))OR(((rt0.c2) NOT BETWEEN ('') AND (rt0.c1)))))AND((NULL IN (rt0.c0)))) ASC, CAST(rt0.c3 AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)))-(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((((((rt0.c0)AND(t0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(t0.c0)))OR(((rt0.c2) NOT BETWEEN ('') AND (rt0.c1)))))AND((NULL IN (rt0.c0)))) ASC, CAST(rt0.c3 AS REAL));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)))-(rt0.c3 COLLATE RTRIM))) ORDER BY ((((((((((((rt0.c0)AND(t0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(t0.c0)))OR(((rt0.c2) NOT BETWEEN ('') AND (rt0.c1)))))AND((NULL IN (rt0.c0)))) ASC, CAST(rt0.c3 AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)))-(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((((((rt0.c0)AND(t0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(t0.c0)))OR(((rt0.c2) NOT BETWEEN ('') AND (rt0.c1)))))AND((NULL IN (rt0.c0)))) ASC, CAST(rt0.c3 AS REAL));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)))-(rt0.c3 COLLATE RTRIM))) ORDER BY ((((((((((((rt0.c0)AND(t0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(t0.c0)))OR(((rt0.c2) NOT BETWEEN ('') AND (rt0.c1)))))AND((NULL IN (rt0.c0)))) ASC, CAST(rt0.c3 AS REAL);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN MAX(rt0.c4, rt0.c4) THEN LOWER(rt0.c3) END) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN MAX(rt0.c4, rt0.c4) THEN LOWER(rt0.c3) END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN MAX(rt0.c4, rt0.c4) THEN LOWER(rt0.c3) END) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN MAX(rt0.c4, rt0.c4) THEN LOWER(rt0.c3) END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN MAX(rt0.c4, rt0.c4) THEN LOWER(rt0.c3) END) ORDER BY rt0.c2 ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2)>>(rt0.c0))))=((CASE WHEN 0.18349145032162661 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c4 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)>>(rt0.c0))))==((CASE WHEN 0.18349145032162661 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c4 END)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2)>>(rt0.c0))))=((CASE WHEN 0.18349145032162661 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c4 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)>>(rt0.c0))))==((CASE WHEN 0.18349145032162661 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c4 END)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2)>>(rt0.c0))))=((CASE WHEN 0.18349145032162661 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c4 END))));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(rt0.c4 AS REAL))<<(TYPEOF(rt0.c4))) INNER JOIN rt0 ON (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c2 END IN (x'59cd', (rt0.c1 IN (vt0.c0, rt0.c3)))) WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((rt0.c2)IS(rt0.c4)) WHEN (+ (rt0.c4)) THEN (rt0.c0 IN ()) WHEN CASE t0.c0  WHEN NULL THEN rt0.c1 END THEN CAST(t0.c0 AS INTEGER) ELSE x'bae4' COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((rt0.c2)IS(rt0.c4)) WHEN (+ (rt0.c4)) THEN (rt0.c0 IN ()) WHEN CASE t0.c0  WHEN NULL THEN rt0.c1 END THEN CAST(t0.c0 AS INTEGER) ELSE x'bae4' COLLATE NOCASE END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(rt0.c4 AS REAL))<<(TYPEOF(rt0.c4))) INNER JOIN rt0 ON (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c2 END IN (x'59cd', (rt0.c1 IN (vt0.c0, rt0.c3)))));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(rt0.c4 AS REAL))<<(TYPEOF(rt0.c4))) INNER JOIN rt0 ON (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c2 END IN (x'59cd', (rt0.c1 IN (vt0.c0, rt0.c3)))) WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((rt0.c2)IS(rt0.c4)) WHEN (+ (rt0.c4)) THEN (rt0.c0 IN ()) WHEN CASE t0.c0  WHEN NULL THEN rt0.c1 END THEN CAST(t0.c0 AS INTEGER) ELSE x'bae4' COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((rt0.c2)IS(rt0.c4)) WHEN (+ (rt0.c4)) THEN (rt0.c0 IN ()) WHEN CASE t0.c0  WHEN NULL THEN rt0.c1 END THEN CAST(t0.c0 AS INTEGER) ELSE x'bae4' COLLATE NOCASE END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(rt0.c4 AS REAL))<<(TYPEOF(rt0.c4))) INNER JOIN rt0 ON (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c2 END IN (x'59cd', (rt0.c1 IN (vt0.c0, rt0.c3)))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((0.9288373960697733)<<(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c0))))) ORDER BY ((((0xffffffff841ffe00)AND(((rt0.c4) NOT NULL))))OR(rt0.c2 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((0.9288373960697733)<<(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM t0, rt0 NOT INDEXED, vt0 ORDER BY ((((0Xffffffff841ffe00)AND(((rt0.c4) NOT NULL))))OR(rt0.c2 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((0.9288373960697733)<<(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c0))))) ORDER BY ((((0xffffffff841ffe00)AND(((rt0.c4) NOT NULL))))OR(rt0.c2 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((0.9288373960697733)<<(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM t0, rt0 NOT INDEXED, vt0 ORDER BY ((((0Xffffffff841ffe00)AND(((rt0.c4) NOT NULL))))OR(rt0.c2 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((0.9288373960697733)<<(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c0))))) ORDER BY ((((0xffffffff841ffe00)AND(((rt0.c4) NOT NULL))))OR(rt0.c2 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((CAST(t0.c0 AS TEXT))-(CAST(t0.c0 AS INTEGER)))) ORDER BY CAST((+ (rt0.c4)) AS REAL), ((t0.c0)<<('855912440')) ASC, COALESCE(((((vt0.c0)OR(NULL)))OR(t0.c0)), ((0.2810097521696442) NOT BETWEEN (rt0.c0) AND (x'508c'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS TEXT))-(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CAST((+ (rt0.c4)) AS REAL), ((t0.c0)<<('855912440')) ASC, COALESCE(((((vt0.c0)OR(NULL)))OR(t0.c0)), ((0.2810097521696442) NOT BETWEEN (rt0.c0) AND (x'508c'))) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((CAST(t0.c0 AS TEXT))-(CAST(t0.c0 AS INTEGER)))) ORDER BY CAST((+ (rt0.c4)) AS REAL), ((t0.c0)<<('855912440')) ASC, COALESCE(((((vt0.c0)OR(NULL)))OR(t0.c0)), ((0.2810097521696442) NOT BETWEEN (rt0.c0) AND (x'508c'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS TEXT))-(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CAST((+ (rt0.c4)) AS REAL), ((t0.c0)<<('855912440')) ASC, COALESCE(((((vt0.c0)OR(NULL)))OR(t0.c0)), ((0.2810097521696442) NOT BETWEEN (rt0.c0) AND (x'508c'))) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((CAST(t0.c0 AS TEXT))-(CAST(t0.c0 AS INTEGER)))) ORDER BY CAST((+ (rt0.c4)) AS REAL), ((t0.c0)<<('855912440')) ASC, COALESCE(((((vt0.c0)OR(NULL)))OR(t0.c0)), ((0.2810097521696442) NOT BETWEEN (rt0.c0) AND (x'508c'))) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c4);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((NULL) ISNULL) IN ())) ORDER BY CAST((+ (rt0.c3)) AS BLOB) DESC, CAST(CAST(rt0.c4 AS INTEGER) AS BLOB), (((rt0.c1 IN (rt0.c3))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) ISNULL) IN ())) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST((+ (rt0.c3)) AS BLOB) DESC, CAST(CAST(rt0.c4 AS INTEGER) AS BLOB), (((rt0.c1 IN (rt0.c3))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((NULL) ISNULL) IN ())) ORDER BY CAST((+ (rt0.c3)) AS BLOB) DESC, CAST(CAST(rt0.c4 AS INTEGER) AS BLOB), (((rt0.c1 IN (rt0.c3))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) ISNULL) IN ())) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST((+ (rt0.c3)) AS BLOB) DESC, CAST(CAST(rt0.c4 AS INTEGER) AS BLOB), (((rt0.c1 IN (rt0.c3))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((NULL) ISNULL) IN ())) ORDER BY CAST((+ (rt0.c3)) AS BLOB) DESC, CAST(CAST(rt0.c4 AS INTEGER) AS BLOB), (((rt0.c1 IN (rt0.c3))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (+ (((rt0.c4)OR(rt0.c1)))) WHERE (CASE rt0.c4  WHEN ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)) THEN rt0.c4 END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)) THEN rt0.c4 END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (+ (((rt0.c4)OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (+ (((rt0.c4)OR(rt0.c1)))) WHERE (CASE rt0.c4  WHEN ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)) THEN rt0.c4 END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)) THEN rt0.c4 END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (+ (((rt0.c4)OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (+ (((rt0.c4)OR(rt0.c1)))) WHERE (CASE rt0.c4  WHEN ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)) THEN rt0.c4 END);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((t0.c0 IN ())) ISNULL)) ORDER BY ((((t0.c0)IS(rt0.c3)))*(rt0.c0)) DESC  NULLS FIRST, CASE WHEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END THEN ABS(DISTINCT t0.c0) END, ((((-1020654370 IN ())))<(((NULL IN ())))) DESC  NULLS FIRST, (((rt0.c3)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (t0.c0) AND ('')))) AND (((~ (t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((t0.c0)IS(rt0.c3)))*(rt0.c0)) DESC  NULLS FIRST, CASE WHEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END THEN ABS(DISTINCT t0.c0) END, ((((-1020654370 IN ())))<(((NULL IN ())))) DESC  NULLS FIRST, (((rt0.c3)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (t0.c0) AND ('')))) AND (((~ (t0.c0))))) DESC);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((t0.c0 IN ())) ISNULL)) ORDER BY ((((t0.c0)IS(rt0.c3)))*(rt0.c0)) DESC  NULLS FIRST, CASE WHEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END THEN ABS(DISTINCT t0.c0) END, ((((-1020654370 IN ())))<(((NULL IN ())))) DESC  NULLS FIRST, (((rt0.c3)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (t0.c0) AND ('')))) AND (((~ (t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((t0.c0)IS(rt0.c3)))*(rt0.c0)) DESC  NULLS FIRST, CASE WHEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END THEN ABS(DISTINCT t0.c0) END, ((((-1020654370 IN ())))<(((NULL IN ())))) DESC  NULLS FIRST, (((rt0.c3)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (t0.c0) AND ('')))) AND (((~ (t0.c0))))) DESC);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((t0.c0 IN ())) ISNULL)) ORDER BY ((((t0.c0)IS(rt0.c3)))*(rt0.c0)) DESC  NULLS FIRST, CASE WHEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END THEN ABS(DISTINCT t0.c0) END, ((((-1020654370 IN ())))<(((NULL IN ())))) DESC  NULLS FIRST, (((rt0.c3)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (t0.c0) AND ('')))) AND (((~ (t0.c0))))) DESC;
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS REAL));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c3) NOT NULL) COLLATE BINARY) ORDER BY (((rt0.c1, rt0.c3, rt0.c3)) BETWEEN (((NOT (t0.c0)), ((rt0.c1) ISNULL), CAST(rt0.c0 AS BLOB))) AND ((t0.c0, CASE rt0.c3  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 END, (rt0.c4 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c1, rt0.c3, rt0.c3)) BETWEEN (((NOT (t0.c0)), ((rt0.c1) ISNULL), CAST(rt0.c0 AS BLOB))) AND ((t0.c0, CASE rt0.c3  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 END, (rt0.c4 IN ())))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c3) NOT NULL) COLLATE BINARY) ORDER BY (((rt0.c1, rt0.c3, rt0.c3)) BETWEEN (((NOT (t0.c0)), ((rt0.c1) ISNULL), CAST(rt0.c0 AS BLOB))) AND ((t0.c0, CASE rt0.c3  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 END, (rt0.c4 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c1, rt0.c3, rt0.c3)) BETWEEN (((NOT (t0.c0)), ((rt0.c1) ISNULL), CAST(rt0.c0 AS BLOB))) AND ((t0.c0, CASE rt0.c3  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 END, (rt0.c4 IN ())))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c3) NOT NULL) COLLATE BINARY) ORDER BY (((rt0.c1, rt0.c3, rt0.c3)) BETWEEN (((NOT (t0.c0)), ((rt0.c1) ISNULL), CAST(rt0.c0 AS BLOB))) AND ((t0.c0, CASE rt0.c3  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 END, (rt0.c4 IN ())))) DESC;
SELECT * FROM t0, rt0, vt0 WHERE ((((t0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)&(rt0.c4)))))) ORDER BY CAST(((rt0.c1) BETWEEN (t0.c0) AND (0Xaea30f2)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)&(rt0.c4)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(((rt0.c1) BETWEEN (t0.c0) AND (0xaea30f2)) AS INTEGER)  NULLS LAST);
SELECT * FROM t0, rt0, vt0 WHERE ((((t0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)&(rt0.c4)))))) ORDER BY CAST(((rt0.c1) BETWEEN (t0.c0) AND (0Xaea30f2)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)&(rt0.c4)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(((rt0.c1) BETWEEN (t0.c0) AND (0xaea30f2)) AS INTEGER)  NULLS LAST);
SELECT * FROM t0, rt0, vt0 WHERE ((((t0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)&(rt0.c4)))))) ORDER BY CAST(((rt0.c1) BETWEEN (t0.c0) AND (0Xaea30f2)) AS INTEGER)  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 END) NOTNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 END) NOTNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 END) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON 8.5591244E8 LEFT OUTER JOIN t0 ON (NOT (x'b283')) WHERE ((+ (0x5f0d5c11))) ORDER BY ((((rt0.c4)<(rt0.c3)))-(DATETIME(rt0.c0, rt0.c3, vt0.c0, vt0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (0x5f0d5c11))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON 8.5591244E8 LEFT OUTER JOIN t0 ON (NOT (x'b283')) ORDER BY ((((rt0.c4)<(rt0.c3)))-(DATETIME(rt0.c0, rt0.c3, vt0.c0, vt0.c0, vt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON 8.5591244E8 LEFT OUTER JOIN t0 ON (NOT (x'b283')) WHERE ((+ (0x5f0d5c11))) ORDER BY ((((rt0.c4)<(rt0.c3)))-(DATETIME(rt0.c0, rt0.c3, vt0.c0, vt0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (0x5f0d5c11))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON 8.5591244E8 LEFT OUTER JOIN t0 ON (NOT (x'b283')) ORDER BY ((((rt0.c4)<(rt0.c3)))-(DATETIME(rt0.c0, rt0.c3, vt0.c0, vt0.c0, vt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON 8.5591244E8 LEFT OUTER JOIN t0 ON (NOT (x'b283')) WHERE ((+ (0x5f0d5c11))) ORDER BY ((((rt0.c4)<(rt0.c3)))-(DATETIME(rt0.c0, rt0.c3, vt0.c0, vt0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))&(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))&(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))&(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))&(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))&(vt0.c0)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)*(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)*(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)*(rt0.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((+ (rt0.c0)))AND(((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))))AND(rt0.c2 COLLATE NOCASE)))OR(CAST(rt0.c4 AS NUMERIC))))OR((((rt0.c3)) NOT BETWEEN ((x'1648')) AND ((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (rt0.c0)))AND(((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))))AND(rt0.c2 COLLATE NOCASE)))OR(CAST(rt0.c4 AS NUMERIC))))OR((((rt0.c3)) NOT BETWEEN ((x'1648')) AND ((rt0.c4)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((+ (rt0.c0)))AND(((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))))AND(rt0.c2 COLLATE NOCASE)))OR(CAST(rt0.c4 AS NUMERIC))))OR((((rt0.c3)) NOT BETWEEN ((x'1648')) AND ((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (rt0.c0)))AND(((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))))AND(rt0.c2 COLLATE NOCASE)))OR(CAST(rt0.c4 AS NUMERIC))))OR((((rt0.c3)) NOT BETWEEN ((x'1648')) AND ((rt0.c4)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((+ (rt0.c0)))AND(((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))))AND(rt0.c2 COLLATE NOCASE)))OR(CAST(rt0.c4 AS NUMERIC))))OR((((rt0.c3)) NOT BETWEEN ((x'1648')) AND ((rt0.c4))))));
SELECT ALL * FROM rt0 WHERE (DATETIME('.{!(62\r', (+ (rt0.c2)), CAST(rt0.c4 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((DATETIME('.{!(62\r', (+ (rt0.c2)), CAST(rt0.c4 AS TEXT))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (DATETIME('.{!(62\r', (+ (rt0.c2)), CAST(rt0.c4 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((DATETIME('.{!(62\r', (+ (rt0.c2)), CAST(rt0.c4 AS TEXT))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (DATETIME('.{!(62\r', (+ (rt0.c2)), CAST(rt0.c4 AS TEXT)));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c3 IN (rt0.c1, vt0.c0)))!=(x''))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN (rt0.c1, vt0.c0)))!=(x''))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY x'');
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c3 IN (rt0.c1, vt0.c0)))!=(x''))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN (rt0.c1, vt0.c0)))!=(x''))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY x'');
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c3 IN (rt0.c1, vt0.c0)))!=(x''))) ORDER BY x'';
SELECT COUNT(*) FROM vt0 WHERE (UPPER(((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(((vt0.c0) NOT NULL)));
SELECT ALL * FROM rt0, vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (t0.c0);
SELECT ALL * FROM vt0 WHERE (((TRIM(DISTINCT x'', vt0.c0)) NOT BETWEEN ('u9') AND (((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT x'', vt0.c0)) NOT BETWEEN ('u9') AND (((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((TRIM(DISTINCT x'', vt0.c0)) NOT BETWEEN ('u9') AND (((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT x'', vt0.c0)) NOT BETWEEN ('u9') AND (((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((TRIM(DISTINCT x'', vt0.c0)) NOT BETWEEN ('u9') AND (((vt0.c0)*(vt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ('	V)qce');
SELECT SUM(count) FROM (SELECT ALL (('	V)qce') IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ('	V)qce');
SELECT SUM(count) FROM (SELECT ALL (('	V)qce') IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ('	V)qce');
SELECT ALL COUNT(*) FROM vt0 WHERE (-1.709011118E9) ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1.709011118E9) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (-1.709011118E9) ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1.709011118E9) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (-1.709011118E9) ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST;
SELECT * FROM t0, vt0, rt0 WHERE ((((((rt0.c0))>=((vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>=((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE ((((((rt0.c0))>=((vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>=((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE ((((((rt0.c0))>=((vt0.c0)))) ISNULL));
SELECT * FROM rt0 WHERE ((('c]8' COLLATE BINARY)GLOB(rt0.c4)));
SELECT SUM(count) FROM (SELECT (((('c]8' COLLATE BINARY)GLOB(rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('c]8' COLLATE BINARY)GLOB(rt0.c4)));
SELECT SUM(count) FROM (SELECT (((('c]8' COLLATE BINARY)GLOB(rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('c]8' COLLATE BINARY)GLOB(rt0.c4)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c2)) BETWEEN ((JULIANDAY(t0.c0, rt0.c2, NULL))) AND ((CAST(rt0.c0 AS REAL)))) LEFT OUTER JOIN t0 ON (((~ (x''))) NOT NULL) WHERE (CASE ((rt0.c3) NOTNULL)  WHEN NULL THEN ((rt0.c3)IS NOT(t0.c0)) WHEN rt0.c1 THEN ((((t0.c0)OR(rt0.c1)))OR(rt0.c3)) WHEN NULLIF(DISTINCT 0.7806724263250813, rt0.c0) THEN UNLIKELY(vt0.c0) ELSE rt0.c3 END) ORDER BY ((((((rt0.c4)AND(rt0.c1)))AND(t0.c0)))|(CAST(vt0.c0 AS NUMERIC))), CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN (+ (vt0.c0)) WHEN ((rt0.c4) IS FALSE) THEN ((rt0.c1)+(vt0.c0)) WHEN (~ (rt0.c3)) THEN ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c4)))AND(t0.c0)))OR(NULL)) ELSE (~ (t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) NOTNULL)  WHEN NULL THEN ((rt0.c3)IS NOT(t0.c0)) WHEN rt0.c1 THEN ((((t0.c0)OR(rt0.c1)))OR(rt0.c3)) WHEN NULLIF(DISTINCT 0.7806724263250813, rt0.c0) THEN UNLIKELY(vt0.c0) ELSE rt0.c3 END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c2)) BETWEEN ((JULIANDAY(t0.c0, rt0.c2, NULL))) AND ((CAST(rt0.c0 AS REAL)))) LEFT OUTER JOIN t0 ON (((~ (x''))) NOT NULL) ORDER BY ((((((rt0.c4)AND(rt0.c1)))AND(t0.c0)))|(CAST(vt0.c0 AS NUMERIC))), CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN (+ (vt0.c0)) WHEN ((rt0.c4) IS FALSE) THEN ((rt0.c1)+(vt0.c0)) WHEN (~ (rt0.c3)) THEN ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c4)))AND(t0.c0)))OR(NULL)) ELSE (~ (t0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c2)) BETWEEN ((JULIANDAY(t0.c0, rt0.c2, NULL))) AND ((CAST(rt0.c0 AS REAL)))) LEFT OUTER JOIN t0 ON (((~ (x''))) NOT NULL) WHERE (CASE ((rt0.c3) NOTNULL)  WHEN NULL THEN ((rt0.c3)IS NOT(t0.c0)) WHEN rt0.c1 THEN ((((t0.c0)OR(rt0.c1)))OR(rt0.c3)) WHEN NULLIF(DISTINCT 0.7806724263250813, rt0.c0) THEN UNLIKELY(vt0.c0) ELSE rt0.c3 END) ORDER BY ((((((rt0.c4)AND(rt0.c1)))AND(t0.c0)))|(CAST(vt0.c0 AS NUMERIC))), CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN (+ (vt0.c0)) WHEN ((rt0.c4) IS FALSE) THEN ((rt0.c1)+(vt0.c0)) WHEN (~ (rt0.c3)) THEN ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c4)))AND(t0.c0)))OR(NULL)) ELSE (~ (t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) NOTNULL)  WHEN NULL THEN ((rt0.c3)IS NOT(t0.c0)) WHEN rt0.c1 THEN ((((t0.c0)OR(rt0.c1)))OR(rt0.c3)) WHEN NULLIF(DISTINCT 0.7806724263250813, rt0.c0) THEN UNLIKELY(vt0.c0) ELSE rt0.c3 END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c2)) BETWEEN ((JULIANDAY(t0.c0, rt0.c2, NULL))) AND ((CAST(rt0.c0 AS REAL)))) LEFT OUTER JOIN t0 ON (((~ (x''))) NOT NULL) ORDER BY ((((((rt0.c4)AND(rt0.c1)))AND(t0.c0)))|(CAST(vt0.c0 AS NUMERIC))), CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN (+ (vt0.c0)) WHEN ((rt0.c4) IS FALSE) THEN ((rt0.c1)+(vt0.c0)) WHEN (~ (rt0.c3)) THEN ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c4)))AND(t0.c0)))OR(NULL)) ELSE (~ (t0.c0)) END  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((ABS(t0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((ABS(t0.c0)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((ABS(t0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((ABS(t0.c0)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((ABS(t0.c0)) IS TRUE));
SELECT COUNT(*) FROM t0, rt0 WHERE (((NULL) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((NULL) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((NULL) NOT NULL) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD((((rt0.c1))>((rt0.c0))), 0.8050843551632408)) ORDER BY (((rt0.c4) NOTNULL) IN ((+ (rt0.c0)), (- (rt0.c0))))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(rt0.c2 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((rt0.c1))>((rt0.c0))), 0.8050843551632408)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4) NOTNULL) IN ((+ (rt0.c0)), (- (rt0.c0))))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(rt0.c2 COLLATE NOCASE) ASC);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD((((rt0.c1))>((rt0.c0))), 0.8050843551632408)) ORDER BY (((rt0.c4) NOTNULL) IN ((+ (rt0.c0)), (- (rt0.c0))))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(rt0.c2 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((rt0.c1))>((rt0.c0))), 0.8050843551632408)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4) NOTNULL) IN ((+ (rt0.c0)), (- (rt0.c0))))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(rt0.c2 COLLATE NOCASE) ASC);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD((((rt0.c1))>((rt0.c0))), 0.8050843551632408)) ORDER BY (((rt0.c4) NOTNULL) IN ((+ (rt0.c0)), (- (rt0.c0))))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(rt0.c2 COLLATE NOCASE) ASC;
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) IS FALSE) AS TEXT)) ORDER BY CAST((- (t0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY CAST((- (t0.c0)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) IS FALSE) AS TEXT)) ORDER BY CAST((- (t0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY CAST((- (t0.c0)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) IS FALSE) AS TEXT)) ORDER BY CAST((- (t0.c0)) AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0))>(((t0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))>(((t0.c0 IN ()))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0))>(((t0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))>(((t0.c0 IN ()))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0))>(((t0.c0 IN ())))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN ((NOT (rt0.c3))) AND (rt0.c0))) ORDER BY CAST(((rt0.c0)>(rt0.c3)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN ((NOT (rt0.c3))) AND (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)>(rt0.c3)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN ((NOT (rt0.c3))) AND (rt0.c0))) ORDER BY CAST(((rt0.c0)>(rt0.c3)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN ((NOT (rt0.c3))) AND (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)>(rt0.c3)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN ((NOT (rt0.c3))) AND (rt0.c0))) ORDER BY CAST(((rt0.c0)>(rt0.c3)) AS TEXT)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((NULLIF(DISTINCT t0.c0, t0.c0))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)|(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(DISTINCT t0.c0, t0.c0))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)|(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((NULLIF(DISTINCT t0.c0, t0.c0))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)|(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(DISTINCT t0.c0, t0.c0))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)|(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((NULLIF(DISTINCT t0.c0, t0.c0))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)|(t0.c0)))));
SELECT COUNT(*) FROM rt0, t0 INDEXED BY i64, vt0 WHERE (rt0.c0) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0 INDEXED BY i64, vt0 ORDER BY CAST(CAST(t0.c0 AS BLOB) AS TEXT) ASC);
SELECT COUNT(*) FROM rt0, t0 INDEXED BY i64, vt0 WHERE (rt0.c0) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0 INDEXED BY i64, vt0 ORDER BY CAST(CAST(t0.c0 AS BLOB) AS TEXT) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(CAST(rt0.c4 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c4 AS BLOB) AS TEXT)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(CAST(rt0.c4 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c4 AS BLOB) AS TEXT)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(CAST(rt0.c4 AS BLOB) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (MIN(0Xffffffff9df84f05, ((t0.c0)*(t0.c0)), (NOT (t0.c0)), TYPEOF(vt0.c0))) ORDER BY (((((t0.c0)!=(t0.c0))))>((vt0.c0))) DESC  NULLS LAST, ((((t0.c0)+(t0.c0)))AND((t0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((MIN(0xffffffff9df84f05, ((t0.c0)*(t0.c0)), (NOT (t0.c0)), TYPEOF(vt0.c0))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (((((t0.c0)!=(t0.c0))))>((vt0.c0))) DESC  NULLS LAST, ((((t0.c0)+(t0.c0)))AND((t0.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (MIN(0Xffffffff9df84f05, ((t0.c0)*(t0.c0)), (NOT (t0.c0)), TYPEOF(vt0.c0))) ORDER BY (((((t0.c0)!=(t0.c0))))>((vt0.c0))) DESC  NULLS LAST, ((((t0.c0)+(t0.c0)))AND((t0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((MIN(0xffffffff9df84f05, ((t0.c0)*(t0.c0)), (NOT (t0.c0)), TYPEOF(vt0.c0))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (((((t0.c0)!=(t0.c0))))>((vt0.c0))) DESC  NULLS LAST, ((((t0.c0)+(t0.c0)))AND((t0.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c0))==((vt0.c0))) IN ())) ORDER BY (CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END IN ())  NULLS LAST, '-59267987';
SELECT SUM(count) FROM (SELECT ((((((t0.c0))==((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END IN ())  NULLS LAST, '-59267987');
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c0))==((vt0.c0))) IN ())) ORDER BY (CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END IN ())  NULLS LAST, '-59267987';
SELECT SUM(count) FROM (SELECT ((((((t0.c0))==((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END IN ())  NULLS LAST, '-59267987');
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c0))==((vt0.c0))) IN ())) ORDER BY (CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END IN ())  NULLS LAST, '-59267987';
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (LOWER(DISTINCT rt0.c1)) AND ((((t0.c0))>((0X603734dd)))))) ORDER BY ((CASE WHEN '-2146682862' THEN rt0.c1 ELSE rt0.c4 END)IS((((rt0.c1))=((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (LOWER(DISTINCT rt0.c1)) AND ((((t0.c0))>((0x603734dd)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE WHEN '-2146682862' THEN rt0.c1 ELSE rt0.c4 END)IS((((rt0.c1))=((rt0.c0))))) DESC);
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (LOWER(DISTINCT rt0.c1)) AND ((((t0.c0))>((0X603734dd)))))) ORDER BY ((CASE WHEN '-2146682862' THEN rt0.c1 ELSE rt0.c4 END)IS((((rt0.c1))=((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (LOWER(DISTINCT rt0.c1)) AND ((((t0.c0))>((0x603734dd)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE WHEN '-2146682862' THEN rt0.c1 ELSE rt0.c4 END)IS((((rt0.c1))=((rt0.c0))))) DESC);
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (LOWER(DISTINCT rt0.c1)) AND ((((t0.c0))>((0X603734dd)))))) ORDER BY ((CASE WHEN '-2146682862' THEN rt0.c1 ELSE rt0.c4 END)IS((((rt0.c1))=((rt0.c0))))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c2)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, x'', rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 END, CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, NULL)) AND ((LTRIM(rt0.c3), ((rt0.c4)GLOB(rt0.c2)), (NOT (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, x'', rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 END, CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, NULL)) AND ((LTRIM(rt0.c3), ((rt0.c4)GLOB(rt0.c2)), (NOT (rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, x'', rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 END, CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, NULL)) AND ((LTRIM(rt0.c3), ((rt0.c4)GLOB(rt0.c2)), (NOT (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, x'', rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 END, CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, NULL)) AND ((LTRIM(rt0.c3), ((rt0.c4)GLOB(rt0.c2)), (NOT (rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, x'', rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 END, CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, NULL)) AND ((LTRIM(rt0.c3), ((rt0.c4)GLOB(rt0.c2)), (NOT (rt0.c3))))));
SELECT * FROM t0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('');
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CAST(SQLITE_COMPILEOPTION_GET(rt0.c4) AS INTEGER) WHERE (rt0.c3) ORDER BY (+ (((rt0.c2)%(rt0.c3))))  NULLS FIRST, ((((rt0.c3)GLOB(rt0.c2)))LIKE((- (rt0.c4))));
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(SQLITE_COMPILEOPTION_GET(rt0.c4) AS INTEGER) ORDER BY (+ (((rt0.c2)%(rt0.c3))))  NULLS FIRST, ((((rt0.c3)GLOB(rt0.c2)))LIKE((- (rt0.c4)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CAST(SQLITE_COMPILEOPTION_GET(rt0.c4) AS INTEGER) WHERE (rt0.c3) ORDER BY (+ (((rt0.c2)%(rt0.c3))))  NULLS FIRST, ((((rt0.c3)GLOB(rt0.c2)))LIKE((- (rt0.c4))));
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(SQLITE_COMPILEOPTION_GET(rt0.c4) AS INTEGER) ORDER BY (+ (((rt0.c2)%(rt0.c3))))  NULLS FIRST, ((((rt0.c3)GLOB(rt0.c2)))LIKE((- (rt0.c4)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CAST(SQLITE_COMPILEOPTION_GET(rt0.c4) AS INTEGER) WHERE (rt0.c3) ORDER BY (+ (((rt0.c2)%(rt0.c3))))  NULLS FIRST, ((((rt0.c3)GLOB(rt0.c2)))LIKE((- (rt0.c4))));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c0)))OR(rt0.c0)))<<(rt0.c4)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c0)))<<(rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c0)))OR(rt0.c0)))<<(rt0.c4)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c0)))<<(rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c0)))OR(rt0.c0)))<<(rt0.c4)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((((t0.c0) NOT BETWEEN ('VB') AND (rt0.c1)), rt0.c2, ((rt0.c0)||(t0.c0))))>((TIME(rt0.c2, rt0.c4, t0.c0), ((t0.c0)|(rt0.c0)), ((t0.c0) ISNULL)))) RIGHT OUTER JOIN t0 ON (- ((((rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((rt0.c4, vt0.c0, NULL))))) WHERE ((((rt0.c0, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, ((vt0.c0)GLOB(rt0.c2)), ((rt0.c1) IS TRUE))) AND ((rt0.c2 COLLATE BINARY, rt0.c0, ((vt0.c0)*(rt0.c1)))))) ORDER BY (((rt0.c1, rt0.c1, rt0.c2, 496524147, vt0.c0)) NOT BETWEEN ((NULL, rt0.c0, rt0.c3, rt0.c0, rt0.c4)) AND ((rt0.c4, t0.c0, t0.c0, rt0.c0, t0.c0))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, ((vt0.c0)GLOB(rt0.c2)), ((rt0.c1) IS TRUE))) AND ((rt0.c2 COLLATE BINARY, rt0.c0, ((vt0.c0)*(rt0.c1)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((((t0.c0) NOT BETWEEN ('VB') AND (rt0.c1)), rt0.c2, ((rt0.c0)||(t0.c0))))>((TIME(rt0.c2, rt0.c4, t0.c0), ((t0.c0)|(rt0.c0)), ((t0.c0) ISNULL)))) RIGHT OUTER JOIN t0 ON (- ((((rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((rt0.c4, vt0.c0, NULL))))) ORDER BY (((rt0.c1, rt0.c1, rt0.c2, 496524147, vt0.c0)) NOT BETWEEN ((NULL, rt0.c0, rt0.c3, rt0.c0, rt0.c4)) AND ((rt0.c4, t0.c0, t0.c0, rt0.c0, t0.c0))) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((((t0.c0) NOT BETWEEN ('VB') AND (rt0.c1)), rt0.c2, ((rt0.c0)||(t0.c0))))>((TIME(rt0.c2, rt0.c4, t0.c0), ((t0.c0)|(rt0.c0)), ((t0.c0) ISNULL)))) RIGHT OUTER JOIN t0 ON (- ((((rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((rt0.c4, vt0.c0, NULL))))) WHERE ((((rt0.c0, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, ((vt0.c0)GLOB(rt0.c2)), ((rt0.c1) IS TRUE))) AND ((rt0.c2 COLLATE BINARY, rt0.c0, ((vt0.c0)*(rt0.c1)))))) ORDER BY (((rt0.c1, rt0.c1, rt0.c2, 496524147, vt0.c0)) NOT BETWEEN ((NULL, rt0.c0, rt0.c3, rt0.c0, rt0.c4)) AND ((rt0.c4, t0.c0, t0.c0, rt0.c0, t0.c0))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, ((vt0.c0)GLOB(rt0.c2)), ((rt0.c1) IS TRUE))) AND ((rt0.c2 COLLATE BINARY, rt0.c0, ((vt0.c0)*(rt0.c1)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((((t0.c0) NOT BETWEEN ('VB') AND (rt0.c1)), rt0.c2, ((rt0.c0)||(t0.c0))))>((TIME(rt0.c2, rt0.c4, t0.c0), ((t0.c0)|(rt0.c0)), ((t0.c0) ISNULL)))) RIGHT OUTER JOIN t0 ON (- ((((rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((rt0.c4, vt0.c0, NULL))))) ORDER BY (((rt0.c1, rt0.c1, rt0.c2, 496524147, vt0.c0)) NOT BETWEEN ((NULL, rt0.c0, rt0.c3, rt0.c0, rt0.c4)) AND ((rt0.c4, t0.c0, t0.c0, rt0.c0, t0.c0))) COLLATE NOCASE ASC);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((((t0.c0, vt0.c0, t0.c0))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM) ORDER BY ((((t0.c0) NOT NULL)) ISNULL) DESC  NULLS LAST, ((((json_patch('n)', -484774166))AND((t0.c0 IN (t0.c0)))))AND((t0.c0 IN (vt0.c0)))), (('') BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, vt0.c0, t0.c0))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((((t0.c0) NOT NULL)) ISNULL) DESC  NULLS LAST, ((((json_patch('n)', -484774166))AND((t0.c0 IN (t0.c0)))))AND((t0.c0 IN (vt0.c0)))), (('') BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((((t0.c0, vt0.c0, t0.c0))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM) ORDER BY ((((t0.c0) NOT NULL)) ISNULL) DESC  NULLS LAST, ((((json_patch('n)', -484774166))AND((t0.c0 IN (t0.c0)))))AND((t0.c0 IN (vt0.c0)))), (('') BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, vt0.c0, t0.c0))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((((t0.c0) NOT NULL)) ISNULL) DESC  NULLS LAST, ((((json_patch('n)', -484774166))AND((t0.c0 IN (t0.c0)))))AND((t0.c0 IN (vt0.c0)))), (('') BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((((t0.c0, vt0.c0, t0.c0))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM) ORDER BY ((((t0.c0) NOT NULL)) ISNULL) DESC  NULLS LAST, ((((json_patch('n)', -484774166))AND((t0.c0 IN (t0.c0)))))AND((t0.c0 IN (vt0.c0)))), (('') BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) IN ())) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) IN ())) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT * FROM vt0 WHERE (LIKELY(CAST(NULL AS TEXT))) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(NULL AS TEXT))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN ()) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (LIKELY(CAST(NULL AS TEXT))) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(NULL AS TEXT))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN ()) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (LIKELY(CAST(NULL AS TEXT))) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c4, rt0.c2)) AND ((rt0.c1, '9oS', rt0.c3))))%(((((rt0.c1)AND(rt0.c0)))AND(rt0.c4))))) ORDER BY COALESCE(DISTINCT (rt0.c3 IN ()), rt0.c3 COLLATE RTRIM) ASC, (((rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c4, rt0.c2)) AND ((rt0.c1, '9oS', rt0.c3))))%(((((rt0.c1)AND(rt0.c0)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT (rt0.c3 IN ()), rt0.c3 COLLATE RTRIM) ASC, (((rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c1)OR(rt0.c4)))OR(rt0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c4, rt0.c2)) AND ((rt0.c1, '9oS', rt0.c3))))%(((((rt0.c1)AND(rt0.c0)))AND(rt0.c4))))) ORDER BY COALESCE(DISTINCT (rt0.c3 IN ()), rt0.c3 COLLATE RTRIM) ASC, (((rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c4, rt0.c2)) AND ((rt0.c1, '9oS', rt0.c3))))%(((((rt0.c1)AND(rt0.c0)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT (rt0.c3 IN ()), rt0.c3 COLLATE RTRIM) ASC, (((rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c1)OR(rt0.c4)))OR(rt0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c4, rt0.c2)) AND ((rt0.c1, '9oS', rt0.c3))))%(((((rt0.c1)AND(rt0.c0)))AND(rt0.c4))))) ORDER BY COALESCE(DISTINCT (rt0.c3 IN ()), rt0.c3 COLLATE RTRIM) ASC, (((rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL));
SELECT ALL * FROM rt0, vt0, t0 WHERE (rt0.c1) ORDER BY (((rt0.c2 IN ()))AND(CAST(rt0.c2 AS INTEGER))) DESC  NULLS FIRST, HEX((rt0.c1 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((rt0.c2 IN ()))AND(CAST(rt0.c2 AS INTEGER))) DESC  NULLS FIRST, HEX((rt0.c1 IN ())) DESC);
SELECT ALL * FROM rt0, vt0, t0 WHERE (rt0.c1) ORDER BY (((rt0.c2 IN ()))AND(CAST(rt0.c2 AS INTEGER))) DESC  NULLS FIRST, HEX((rt0.c1 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((rt0.c2 IN ()))AND(CAST(rt0.c2 AS INTEGER))) DESC  NULLS FIRST, HEX((rt0.c1 IN ())) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((~ (rt0.c0)) IN ()) CROSS JOIN t0 ON CAST(CAST(x'4fb1' AS NUMERIC) AS REAL) WHERE ((((- (rt0.c3))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c3))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((~ (rt0.c0)) IN ()) CROSS JOIN t0 ON CAST(CAST(x'4fb1' AS NUMERIC) AS REAL));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((~ (rt0.c0)) IN ()) CROSS JOIN t0 ON CAST(CAST(x'4fb1' AS NUMERIC) AS REAL) WHERE ((((- (rt0.c3))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c3))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((~ (rt0.c0)) IN ()) CROSS JOIN t0 ON CAST(CAST(x'4fb1' AS NUMERIC) AS REAL));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((~ (rt0.c0)) IN ()) CROSS JOIN t0 ON CAST(CAST(x'4fb1' AS NUMERIC) AS REAL) WHERE ((((- (rt0.c3))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((((((rt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))))OR(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4)))))OR((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))))OR(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4)))))OR((NOT (rt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((((((rt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))))OR(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4)))))OR((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))))OR(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4)))))OR((NOT (rt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((((((rt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))))OR(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4)))))OR((NOT (rt0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((((rt0.c1))<=((rt0.c0))))OR((~ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))<=((rt0.c0))))OR((~ (rt0.c3))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((((rt0.c1))<=((rt0.c0))))OR((~ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))<=((rt0.c0))))OR((~ (rt0.c3))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((((rt0.c1))<=((rt0.c0))))OR((~ (rt0.c3)))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (vt0.c0) ORDER BY (((- (0.2244009776679976))) BETWEEN (((rt0.c3) IS FALSE)) AND (CAST(rt0.c4 AS TEXT))) ASC  NULLS FIRST, ((t0.c0) NOTNULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((- (0.2244009776679976))) BETWEEN (((rt0.c3) IS FALSE)) AND (CAST(rt0.c4 AS TEXT))) ASC  NULLS FIRST, ((t0.c0) NOTNULL) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (vt0.c0) ORDER BY (((- (0.2244009776679976))) BETWEEN (((rt0.c3) IS FALSE)) AND (CAST(rt0.c4 AS TEXT))) ASC  NULLS FIRST, ((t0.c0) NOTNULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((- (0.2244009776679976))) BETWEEN (((rt0.c3) IS FALSE)) AND (CAST(rt0.c4 AS TEXT))) ASC  NULLS FIRST, ((t0.c0) NOTNULL) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (vt0.c0) ORDER BY (((- (0.2244009776679976))) BETWEEN (((rt0.c3) IS FALSE)) AND (CAST(rt0.c4 AS TEXT))) ASC  NULLS FIRST, ((t0.c0) NOTNULL) COLLATE RTRIM;
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON ((rt0.c1) NOT NULL) COLLATE NOCASE WHERE (((((rt0.c0)>=(vt0.c0)))>=(((rt0.c0)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>=(vt0.c0)))>=(((rt0.c0)<(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON ((rt0.c1) NOT NULL) COLLATE NOCASE);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON ((rt0.c1) NOT NULL) COLLATE NOCASE WHERE (((((rt0.c0)>=(vt0.c0)))>=(((rt0.c0)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>=(vt0.c0)))>=(((rt0.c0)<(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON ((rt0.c1) NOT NULL) COLLATE NOCASE);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON ((rt0.c1) NOT NULL) COLLATE NOCASE WHERE (((((rt0.c0)>=(vt0.c0)))>=(((rt0.c0)<(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3) ISNULL))IS((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) ISNULL))IS((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3) ISNULL))IS((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) ISNULL))IS((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3) ISNULL))IS((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (LOWER(vt0.c0)) ORDER BY ((0.3533171974425475) NOT NULL) ASC, ((rt0.c4) IS FALSE) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(vt0.c0)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((0.3533171974425475) NOT NULL) ASC, ((rt0.c4) IS FALSE) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (LOWER(vt0.c0)) ORDER BY ((0.3533171974425475) NOT NULL) ASC, ((rt0.c4) IS FALSE) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(vt0.c0)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((0.3533171974425475) NOT NULL) ASC, ((rt0.c4) IS FALSE) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (LOWER(vt0.c0)) ORDER BY ((0.3533171974425475) NOT NULL) ASC, ((rt0.c4) IS FALSE) COLLATE BINARY ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE NULL  WHEN ((t0.c0) NOTNULL) THEN t0.c0 ELSE CAST(t0.c0 AS NUMERIC) END) ORDER BY ((vt0.c0) ISNULL);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((t0.c0) NOTNULL) THEN t0.c0 ELSE CAST(t0.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0) ISNULL));
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE NULL  WHEN ((t0.c0) NOTNULL) THEN t0.c0 ELSE CAST(t0.c0 AS NUMERIC) END) ORDER BY ((vt0.c0) ISNULL);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((t0.c0) NOTNULL) THEN t0.c0 ELSE CAST(t0.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0) ISNULL));
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE NULL  WHEN ((t0.c0) NOTNULL) THEN t0.c0 ELSE CAST(t0.c0 AS NUMERIC) END) ORDER BY ((vt0.c0) ISNULL);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0))>=((t0.c0)))) NOTNULL)) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))>((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0))>=((t0.c0)))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))>((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0))>=((t0.c0)))) NOTNULL)) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))>((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0))>=((t0.c0)))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))>((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0))>=((t0.c0)))) NOTNULL)) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))>((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC;
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON (((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) IN (rt0.c0)) CROSS JOIN vt0 ON CAST(rt0.c2 AS BLOB) WHERE (((((((0.20667988057253017) IS FALSE))OR((t0.c0 IN ()))))OR((((0.4595320202118399))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.20667988057253017) IS FALSE))OR((t0.c0 IN ()))))OR((((0.4595320202118399))>=((vt0.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) IN (rt0.c0)) CROSS JOIN vt0 ON CAST(rt0.c2 AS BLOB));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON (((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) IN (rt0.c0)) CROSS JOIN vt0 ON CAST(rt0.c2 AS BLOB) WHERE (((((((0.20667988057253017) IS FALSE))OR((t0.c0 IN ()))))OR((((0.4595320202118399))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.20667988057253017) IS FALSE))OR((t0.c0 IN ()))))OR((((0.4595320202118399))>=((vt0.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) IN (rt0.c0)) CROSS JOIN vt0 ON CAST(rt0.c2 AS BLOB));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON (((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) IN (rt0.c0)) CROSS JOIN vt0 ON CAST(rt0.c2 AS BLOB) WHERE (((((((0.20667988057253017) IS FALSE))OR((t0.c0 IN ()))))OR((((0.4595320202118399))>=((vt0.c0))))));
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON (((((((((('3o,i4')OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))>(CAST(rt0.c3 AS REAL))) WHERE (CAST(rt0.c0 AS TEXT) COLLATE BINARY COLLATE BINARY) ORDER BY CAST((t0.c0 IN ()) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON (((((((((('3o,i4')OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))>(CAST(rt0.c3 AS REAL))) ORDER BY CAST((t0.c0 IN ()) AS NUMERIC));
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON (((((((((('3o,i4')OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))>(CAST(rt0.c3 AS REAL))) WHERE (CAST(rt0.c0 AS TEXT) COLLATE BINARY COLLATE BINARY) ORDER BY CAST((t0.c0 IN ()) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON (((((((((('3o,i4')OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))>(CAST(rt0.c3 AS REAL))) ORDER BY CAST((t0.c0 IN ()) AS NUMERIC));
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON (((((((((('3o,i4')OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))>(CAST(rt0.c3 AS REAL))) WHERE (CAST(rt0.c0 AS TEXT) COLLATE BINARY COLLATE BINARY) ORDER BY CAST((t0.c0 IN ()) AS NUMERIC);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), LOWER(t0.c0))) AND ((t0.c0 COLLATE NOCASE, ((t0.c0) ISNULL), (((NULL, t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))) ORDER BY (((((t0.c0 IN ()))AND(-1088600204)))AND(TYPEOF(t0.c0))), ((t0.c0)/(t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), LOWER(t0.c0))) AND ((t0.c0 COLLATE NOCASE, ((t0.c0) ISNULL), (((NULL, t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0 IN ()))AND(-1088600204)))AND(TYPEOF(t0.c0))), ((t0.c0)/(t0.c0 COLLATE RTRIM)));
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), LOWER(t0.c0))) AND ((t0.c0 COLLATE NOCASE, ((t0.c0) ISNULL), (((NULL, t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))) ORDER BY (((((t0.c0 IN ()))AND(-1088600204)))AND(TYPEOF(t0.c0))), ((t0.c0)/(t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), LOWER(t0.c0))) AND ((t0.c0 COLLATE NOCASE, ((t0.c0) ISNULL), (((NULL, t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0 IN ()))AND(-1088600204)))AND(TYPEOF(t0.c0))), ((t0.c0)/(t0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((rt0.c3, rt0.c4, x'')) NOT BETWEEN ((((rt0.c3)>=(rt0.c4)), LIKELIHOOD(DISTINCT vt0.c0, 0.9523875440166277), ((vt0.c0)IS NOT(rt0.c0)))) AND ((((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)), ((vt0.c0) ISNULL), t0.c0)))) ORDER BY HEX(DISTINCT (NOT (vt0.c0))), (((rt0.c2))<=((rt0.c0))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c4, x'')) NOT BETWEEN ((((rt0.c3)>=(rt0.c4)), LIKELIHOOD(DISTINCT vt0.c0, 0.9523875440166277), ((vt0.c0)IS NOT(rt0.c0)))) AND ((((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)), ((vt0.c0) ISNULL), t0.c0)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY HEX(DISTINCT (NOT (vt0.c0))), (((rt0.c2))<=((rt0.c0))) COLLATE NOCASE ASC);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((rt0.c3, rt0.c4, x'')) NOT BETWEEN ((((rt0.c3)>=(rt0.c4)), LIKELIHOOD(DISTINCT vt0.c0, 0.9523875440166277), ((vt0.c0)IS NOT(rt0.c0)))) AND ((((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)), ((vt0.c0) ISNULL), t0.c0)))) ORDER BY HEX(DISTINCT (NOT (vt0.c0))), (((rt0.c2))<=((rt0.c0))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c4, x'')) NOT BETWEEN ((((rt0.c3)>=(rt0.c4)), LIKELIHOOD(DISTINCT vt0.c0, 0.9523875440166277), ((vt0.c0)IS NOT(rt0.c0)))) AND ((((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)), ((vt0.c0) ISNULL), t0.c0)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY HEX(DISTINCT (NOT (vt0.c0))), (((rt0.c2))<=((rt0.c0))) COLLATE NOCASE ASC);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((rt0.c3, rt0.c4, x'')) NOT BETWEEN ((((rt0.c3)>=(rt0.c4)), LIKELIHOOD(DISTINCT vt0.c0, 0.9523875440166277), ((vt0.c0)IS NOT(rt0.c0)))) AND ((((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)), ((vt0.c0) ISNULL), t0.c0)))) ORDER BY HEX(DISTINCT (NOT (vt0.c0))), (((rt0.c2))<=((rt0.c0))) COLLATE NOCASE ASC;
SELECT ALL * FROM t0, rt0 WHERE ((+ (rt0.c1 COLLATE NOCASE))) ORDER BY CAST(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((+ (rt0.c1 COLLATE NOCASE))) ORDER BY CAST(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((+ (rt0.c1 COLLATE NOCASE))) ORDER BY CAST(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)) AS TEXT)  NULLS FIRST;
SELECT * FROM vt0, rt0, t0 WHERE (((((((rt0.c4)AND('(2')))AND(0.5747886670012142)))==('39ç¬¬Q'))) ORDER BY INSTR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c4)), (((rt0.c2, t0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c0, rt0.c4)) AND ((rt0.c4, rt0.c2, rt0.c4))))  NULLS LAST, ((NOT (0x1522cb60)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)AND('(2')))AND(0.5747886670012142)))==('39ç¬¬Q'))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY INSTR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c4)), (((rt0.c2, t0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c0, rt0.c4)) AND ((rt0.c4, rt0.c2, rt0.c4))))  NULLS LAST, ((NOT (0x1522cb60)) IN ()));
SELECT * FROM vt0, rt0, t0 WHERE (((((((rt0.c4)AND('(2')))AND(0.5747886670012142)))==('39ç¬¬Q'))) ORDER BY INSTR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c4)), (((rt0.c2, t0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c0, rt0.c4)) AND ((rt0.c4, rt0.c2, rt0.c4))))  NULLS LAST, ((NOT (0x1522cb60)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)AND('(2')))AND(0.5747886670012142)))==('39ç¬¬Q'))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY INSTR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c4)), (((rt0.c2, t0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c0, rt0.c4)) AND ((rt0.c4, rt0.c2, rt0.c4))))  NULLS LAST, ((NOT (0x1522cb60)) IN ()));
SELECT * FROM vt0, rt0, t0 WHERE (((((((rt0.c4)AND('(2')))AND(0.5747886670012142)))==('39ç¬¬Q'))) ORDER BY INSTR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c4)), (((rt0.c2, t0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c0, rt0.c4)) AND ((rt0.c4, rt0.c2, rt0.c4))))  NULLS LAST, ((NOT (0x1522cb60)) IN ());
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT ALL * FROM rt0, vt0 INNER JOIN t0 ON '8i' WHERE (((((rt0.c1) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) ISNULL)) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 INNER JOIN t0 ON '8i');
SELECT ALL * FROM rt0, vt0 INNER JOIN t0 ON '8i' WHERE (((((rt0.c1) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) ISNULL)) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 INNER JOIN t0 ON '8i');
SELECT ALL * FROM rt0, vt0 INNER JOIN t0 ON '8i' WHERE (((((rt0.c1) NOTNULL)) ISNULL));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), ((t0.c0)GLOB(rt0.c0)), CAST(vt0.c0 AS NUMERIC))) AND ((rt0.c3, ((rt0.c0) NOTNULL), ((NULL) BETWEEN (vt0.c0) AND (rt0.c2))))) INNER JOIN t0 ON ((NOT (rt0.c3)) IN ((- (rt0.c1)))) WHERE (((CAST(rt0.c3 AS REAL)) ISNULL)) ORDER BY ((x'ca1b') NOT BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS REAL)) ISNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), ((t0.c0)GLOB(rt0.c0)), CAST(vt0.c0 AS NUMERIC))) AND ((rt0.c3, ((rt0.c0) NOTNULL), ((NULL) BETWEEN (vt0.c0) AND (rt0.c2))))) INNER JOIN t0 ON ((NOT (rt0.c3)) IN ((- (rt0.c1)))) ORDER BY ((x'ca1b') NOT BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c1)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), ((t0.c0)GLOB(rt0.c0)), CAST(vt0.c0 AS NUMERIC))) AND ((rt0.c3, ((rt0.c0) NOTNULL), ((NULL) BETWEEN (vt0.c0) AND (rt0.c2))))) INNER JOIN t0 ON ((NOT (rt0.c3)) IN ((- (rt0.c1)))) WHERE (((CAST(rt0.c3 AS REAL)) ISNULL)) ORDER BY ((x'ca1b') NOT BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS REAL)) ISNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), ((t0.c0)GLOB(rt0.c0)), CAST(vt0.c0 AS NUMERIC))) AND ((rt0.c3, ((rt0.c0) NOTNULL), ((NULL) BETWEEN (vt0.c0) AND (rt0.c2))))) INNER JOIN t0 ON ((NOT (rt0.c3)) IN ((- (rt0.c1)))) ORDER BY ((x'ca1b') NOT BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c1)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN -234355906 COLLATE RTRIM THEN (~ (rt0.c3)) ELSE ((NULL)/(vt0.c0)) END) ORDER BY CAST(CASE WHEN rt0.c4 THEN rt0.c0 WHEN '1e500' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC) ASC  NULLS LAST, rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN -234355906 COLLATE RTRIM THEN (~ (rt0.c3)) ELSE ((NULL)/(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(CASE WHEN rt0.c4 THEN rt0.c0 WHEN '1e500' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC) ASC  NULLS LAST, rt0.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN -234355906 COLLATE RTRIM THEN (~ (rt0.c3)) ELSE ((NULL)/(vt0.c0)) END) ORDER BY CAST(CASE WHEN rt0.c4 THEN rt0.c0 WHEN '1e500' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC) ASC  NULLS LAST, rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN -234355906 COLLATE RTRIM THEN (~ (rt0.c3)) ELSE ((NULL)/(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(CASE WHEN rt0.c4 THEN rt0.c0 WHEN '1e500' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC) ASC  NULLS LAST, rt0.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN -234355906 COLLATE RTRIM THEN (~ (rt0.c3)) ELSE ((NULL)/(vt0.c0)) END) ORDER BY CAST(CASE WHEN rt0.c4 THEN rt0.c0 WHEN '1e500' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC) ASC  NULLS LAST, rt0.c2 DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, t0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (rt0.c3);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN (((rt0.c0))>=((x''))) THEN HEX(rt0.c0) WHEN (rt0.c4 IN ()) THEN ((t0.c0) IS TRUE) WHEN '-949667643' THEN CASE rt0.c1  WHEN rt0.c3 THEN t0.c0 END ELSE (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c0))>=((x''))) THEN HEX(rt0.c0) WHEN (rt0.c4 IN ()) THEN ((t0.c0) IS TRUE) WHEN '-949667643' THEN CASE rt0.c1  WHEN rt0.c3 THEN t0.c0 END ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN (((rt0.c0))>=((x''))) THEN HEX(rt0.c0) WHEN (rt0.c4 IN ()) THEN ((t0.c0) IS TRUE) WHEN '-949667643' THEN CASE rt0.c1  WHEN rt0.c3 THEN t0.c0 END ELSE (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c0))>=((x''))) THEN HEX(rt0.c0) WHEN (rt0.c4 IN ()) THEN ((t0.c0) IS TRUE) WHEN '-949667643' THEN CASE rt0.c1  WHEN rt0.c3 THEN t0.c0 END ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN (((rt0.c0))>=((x''))) THEN HEX(rt0.c0) WHEN (rt0.c4 IN ()) THEN ((t0.c0) IS TRUE) WHEN '-949667643' THEN CASE rt0.c1  WHEN rt0.c3 THEN t0.c0 END ELSE (rt0.c1 IN ()) END);
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT (vt0.c0 IN (vt0.c0)))) ORDER BY ((CAST(NULL AS REAL))AND(0.08589666731023249));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(NULL AS REAL))AND(0.08589666731023249)));
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT (vt0.c0 IN (vt0.c0)))) ORDER BY ((CAST(NULL AS REAL))AND(0.08589666731023249));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(NULL AS REAL))AND(0.08589666731023249)));
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT (vt0.c0 IN (vt0.c0)))) ORDER BY ((CAST(NULL AS REAL))AND(0.08589666731023249));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (CASE t0.c0  WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c3 END) AND (((((((((vt0.c0)OR('0SVb')))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) NOT BETWEEN (CASE t0.c0  WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c3 END) AND (((((((((vt0.c0)OR('0SVb')))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c4))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (CASE t0.c0  WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c3 END) AND (((((((((vt0.c0)OR('0SVb')))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) NOT BETWEEN (CASE t0.c0  WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c3 END) AND (((((((((vt0.c0)OR('0SVb')))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c4))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (CASE t0.c0  WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c3 END) AND (((((((((vt0.c0)OR('0SVb')))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)))));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, t0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, t0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ('');
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) IS TRUE), ((vt0.c0) IS TRUE), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((vt0.c0, (((0Xffffffff899df9cb)) NOT BETWEEN ((vt0.c0)) AND ((0Xffffffffdd93b3a3))), (+ (vt0.c0)))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) IS TRUE), ((vt0.c0) IS TRUE), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((vt0.c0, (((0Xffffffff899df9cb)) NOT BETWEEN ((vt0.c0)) AND ((0Xffffffffdd93b3a3))), (+ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) IS TRUE), ((vt0.c0) IS TRUE), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((vt0.c0, (((0Xffffffff899df9cb)) NOT BETWEEN ((vt0.c0)) AND ((0Xffffffffdd93b3a3))), (+ (vt0.c0)))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) IS TRUE), ((vt0.c0) IS TRUE), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((vt0.c0, (((0Xffffffff899df9cb)) NOT BETWEEN ((vt0.c0)) AND ((0Xffffffffdd93b3a3))), (+ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) IS TRUE), ((vt0.c0) IS TRUE), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((vt0.c0, (((0Xffffffff899df9cb)) NOT BETWEEN ((vt0.c0)) AND ((0Xffffffffdd93b3a3))), (+ (vt0.c0)))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CASE t0.c0  WHEN rt0.c2 THEN NULL ELSE rt0.c3 END)&((((t0.c0, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c1)) AND ((rt0.c4, t0.c0, t0.c0)))))) ORDER BY ((x'') BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN t0.c0 ELSE rt0.c2 END) AND (rt0.c0)) DESC  NULLS LAST, (((rt0.c0) IS FALSE) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN rt0.c2 THEN NULL ELSE rt0.c3 END)&((((t0.c0, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c1)) AND ((rt0.c4, t0.c0, t0.c0)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((x'') BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN t0.c0 ELSE rt0.c2 END) AND (rt0.c0)) DESC  NULLS LAST, (((rt0.c0) IS FALSE) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CASE t0.c0  WHEN rt0.c2 THEN NULL ELSE rt0.c3 END)&((((t0.c0, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c1)) AND ((rt0.c4, t0.c0, t0.c0)))))) ORDER BY ((x'') BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN t0.c0 ELSE rt0.c2 END) AND (rt0.c0)) DESC  NULLS LAST, (((rt0.c0) IS FALSE) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN rt0.c2 THEN NULL ELSE rt0.c3 END)&((((t0.c0, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c1)) AND ((rt0.c4, t0.c0, t0.c0)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((x'') BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN t0.c0 ELSE rt0.c2 END) AND (rt0.c0)) DESC  NULLS LAST, (((rt0.c0) IS FALSE) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CASE t0.c0  WHEN rt0.c2 THEN NULL ELSE rt0.c3 END)&((((t0.c0, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c1)) AND ((rt0.c4, t0.c0, t0.c0)))))) ORDER BY ((x'') BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN t0.c0 ELSE rt0.c2 END) AND (rt0.c0)) DESC  NULLS LAST, (((rt0.c0) IS FALSE) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN LIKE(t0.c0, t0.c0) THEN t0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKE(t0.c0, t0.c0) THEN t0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN LIKE(t0.c0, t0.c0) THEN t0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKE(t0.c0, t0.c0) THEN t0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN LIKE(t0.c0, t0.c0) THEN t0.c0 COLLATE NOCASE END);
SELECT * FROM vt0, t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((t0.c0)<(vt0.c0))) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) BETWEEN (((t0.c0)<(vt0.c0))) AND (x''))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((t0.c0)<(vt0.c0))) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) BETWEEN (((t0.c0)<(vt0.c0))) AND (x''))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((t0.c0)<(vt0.c0))) AND (x'')));
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL))>>(vt0.c0 COLLATE BINARY)) INNER JOIN vt0 ON ((((rt0.c4)IS NOT(t0.c0)))!=((+ (rt0.c2)))) WHERE ((((((('1538967471')OR(x'')))AND(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((('1538967471')OR(x'')))AND(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL))>>(vt0.c0 COLLATE BINARY)) INNER JOIN vt0 ON ((((rt0.c4)IS NOT(t0.c0)))!=((+ (rt0.c2)))));
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL))>>(vt0.c0 COLLATE BINARY)) INNER JOIN vt0 ON ((((rt0.c4)IS NOT(t0.c0)))!=((+ (rt0.c2)))) WHERE ((((((('1538967471')OR(x'')))AND(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((('1538967471')OR(x'')))AND(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL))>>(vt0.c0 COLLATE BINARY)) INNER JOIN vt0 ON ((((rt0.c4)IS NOT(t0.c0)))!=((+ (rt0.c2)))));
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL))>>(vt0.c0 COLLATE BINARY)) INNER JOIN vt0 ON ((((rt0.c4)IS NOT(t0.c0)))!=((+ (rt0.c2)))) WHERE ((((((('1538967471')OR(x'')))AND(rt0.c0))) IS TRUE));
SELECT * FROM t0, vt0, rt0 INDEXED BY i64 WHERE (((x'')<>((((rt0.c3, t0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, 0.3467946633089609, rt0.c3)) AND ((rt0.c3, rt0.c0, rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')!=((((rt0.c3, t0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, 0.3467946633089609, rt0.c3)) AND ((rt0.c3, rt0.c0, rt0.c4)))))) IS TRUE)  as count FROM t0, vt0, rt0 INDEXED BY i64);
SELECT * FROM t0, vt0, rt0 INDEXED BY i64 WHERE (((x'')<>((((rt0.c3, t0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, 0.3467946633089609, rt0.c3)) AND ((rt0.c3, rt0.c0, rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')!=((((rt0.c3, t0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, 0.3467946633089609, rt0.c3)) AND ((rt0.c3, rt0.c0, rt0.c4)))))) IS TRUE)  as count FROM t0, vt0, rt0 INDEXED BY i64);
SELECT COUNT(*) FROM rt0, t0 WHERE ('-457913940');
SELECT SUM(count) FROM (SELECT ALL (('-457913940') IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ('-457913940');
SELECT SUM(count) FROM (SELECT ALL (('-457913940') IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ('-457913940');
SELECT ALL * FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((NOT (t0.c0)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((-9.99745232E8)))))) ORDER BY (((((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((NOT (t0.c0)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((-9.99745232E8)))))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((NOT (t0.c0)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((-9.99745232E8)))))) ORDER BY (((((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((NOT (t0.c0)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((-9.99745232E8)))))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((NOT (t0.c0)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((-9.99745232E8)))))) ORDER BY (((((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE (t0.c0) ORDER BY 'ui \n\nK.w'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY 'ui \n\nK.w'  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (t0.c0) ORDER BY 'ui \n\nK.w'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY 'ui \n\nK.w'  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (t0.c0) ORDER BY 'ui \n\nK.w'  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ())) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ())) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ())) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)) AS REAL) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c3 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c3 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c3 COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((CAST(rt0.c2 AS INTEGER))&('9oS'))) ORDER BY ((((((rt0.c2) IS TRUE))AND(((((rt0.c2)AND(vt0.c0)))AND(NULL)))))AND(IFNULL(NULL, rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER))&('9oS'))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((((rt0.c2) IS TRUE))AND(((((rt0.c2)AND(vt0.c0)))AND(NULL)))))AND(IFNULL(NULL, rt0.c2))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((CAST(rt0.c2 AS INTEGER))&('9oS'))) ORDER BY ((((((rt0.c2) IS TRUE))AND(((((rt0.c2)AND(vt0.c0)))AND(NULL)))))AND(IFNULL(NULL, rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER))&('9oS'))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((((rt0.c2) IS TRUE))AND(((((rt0.c2)AND(vt0.c0)))AND(NULL)))))AND(IFNULL(NULL, rt0.c2))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((CAST(rt0.c2 AS INTEGER))&('9oS'))) ORDER BY ((((((rt0.c2) IS TRUE))AND(((((rt0.c2)AND(vt0.c0)))AND(NULL)))))AND(IFNULL(NULL, rt0.c2)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(x''))) ORDER BY ((((((((((-1090267871)OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(((vt0.c0)==(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))))OR((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(x''))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((-1090267871)OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(((vt0.c0)=(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))))OR((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(x''))) ORDER BY ((((((((((-1090267871)OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(((vt0.c0)==(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))))OR((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(x''))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((-1090267871)OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(((vt0.c0)=(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))))OR((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(x''))) ORDER BY ((((((((((-1090267871)OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(((vt0.c0)==(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))))OR((NOT (vt0.c0))));
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)<=(vt0.c0)))OR(TOTAL_CHANGES())))OR(((vt0.c0)||(vt0.c0)))))OR(NULL)))AND(CAST(vt0.c0 AS REAL)))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (HEX(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)<=(vt0.c0)))OR(TOTAL_CHANGES())))OR(((vt0.c0)||(vt0.c0)))))OR(NULL)))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (HEX(DISTINCT vt0.c0))) ASC);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)<=(vt0.c0)))OR(TOTAL_CHANGES())))OR(((vt0.c0)||(vt0.c0)))))OR(NULL)))AND(CAST(vt0.c0 AS REAL)))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (HEX(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)<=(vt0.c0)))OR(TOTAL_CHANGES())))OR(((vt0.c0)||(vt0.c0)))))OR(NULL)))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (HEX(DISTINCT vt0.c0))) ASC);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)<=(vt0.c0)))OR(TOTAL_CHANGES())))OR(((vt0.c0)||(vt0.c0)))))OR(NULL)))AND(CAST(vt0.c0 AS REAL)))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (HEX(DISTINCT vt0.c0))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0))!=((vt0.c0))))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((((vt0.c0))<>((vt0.c0))))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0))!=((vt0.c0))))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((((vt0.c0))<>((vt0.c0))))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0))!=((vt0.c0))))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c3)))OR(((rt0.c3)<<(rt0.c2)))))OR(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c3)))OR(((rt0.c3)<<(rt0.c2)))))OR(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c3)))OR(((rt0.c3)<<(rt0.c2)))))OR(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c3)))OR(((rt0.c3)<<(rt0.c2)))))OR(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c3)))OR(((rt0.c3)<<(rt0.c2)))))OR(rt0.c3 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c4)>(vt0.c0))) BETWEEN ((~ (rt0.c4))) AND (rt0.c2))) ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 ELSE vt0.c0 END) AND (rtreenode(x'', 'u9'))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)>(vt0.c0))) BETWEEN ((~ (rt0.c4))) AND (rt0.c2))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 ELSE vt0.c0 END) AND (rtreenode(x'', 'u9'))) DESC);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c4)>(vt0.c0))) BETWEEN ((~ (rt0.c4))) AND (rt0.c2))) ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 ELSE vt0.c0 END) AND (rtreenode(x'', 'u9'))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)>(vt0.c0))) BETWEEN ((~ (rt0.c4))) AND (rt0.c2))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 ELSE vt0.c0 END) AND (rtreenode(x'', 'u9'))) DESC);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c4)>(vt0.c0))) BETWEEN ((~ (rt0.c4))) AND (rt0.c2))) ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 ELSE vt0.c0 END) AND (rtreenode(x'', 'u9'))) DESC;
SELECT * FROM t0, vt0, rt0 WHERE ((((((rt0.c2))>((rt0.c3)))) IS FALSE)) ORDER BY ((('-1945969545'))=((rt0.c2))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))>((rt0.c3)))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((('-1945969545'))=((rt0.c2))) COLLATE RTRIM);
SELECT * FROM t0, vt0, rt0 WHERE ((((((rt0.c2))>((rt0.c3)))) IS FALSE)) ORDER BY ((('-1945969545'))=((rt0.c2))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))>((rt0.c3)))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((('-1945969545'))=((rt0.c2))) COLLATE RTRIM);
SELECT * FROM t0, vt0, rt0 WHERE ((((((rt0.c2))>((rt0.c3)))) IS FALSE)) ORDER BY ((('-1945969545'))=((rt0.c2))) COLLATE RTRIM;
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT -1.644671227E9, TRIM(rt0.c4, rt0.c0))) ORDER BY (rt0.c1 IN (rt0.c0, rt0.c1)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT -1.644671227E9, TRIM(rt0.c4, rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN (rt0.c0, rt0.c1)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT -1.644671227E9, TRIM(rt0.c4, rt0.c0))) ORDER BY (rt0.c1 IN (rt0.c0, rt0.c1)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT -1.644671227E9, TRIM(rt0.c4, rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN (rt0.c0, rt0.c1)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT -1.644671227E9, TRIM(rt0.c4, rt0.c0))) ORDER BY (rt0.c1 IN (rt0.c0, rt0.c1)) COLLATE NOCASE DESC;
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0) IS TRUE)))) ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM, (+ (t0.c0)), ((0xffffffffc4691930) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((CAST(t0.c0 AS TEXT), ((t0.c0)>(t0.c0)), t0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM, (+ (t0.c0)), ((0Xffffffffc4691930) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((CAST(t0.c0 AS TEXT), ((t0.c0)>(t0.c0)), t0.c0))));
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0) IS TRUE)))) ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM, (+ (t0.c0)), ((0xffffffffc4691930) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((CAST(t0.c0 AS TEXT), ((t0.c0)>(t0.c0)), t0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM, (+ (t0.c0)), ((0Xffffffffc4691930) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((CAST(t0.c0 AS TEXT), ((t0.c0)>(t0.c0)), t0.c0))));
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0) IS TRUE)))) ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM, (+ (t0.c0)), ((0xffffffffc4691930) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((CAST(t0.c0 AS TEXT), ((t0.c0)>(t0.c0)), t0.c0)));
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)*('722969055')));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)*('722969055'))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)*('722969055')));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)*('722969055'))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)*('722969055')));
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c0)>>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0)>>(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c0)>>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0)>>(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c0)>>(t0.c0)))));
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT ((((vt0.c0)OR(rt0.c3)))AND(rt0.c3)), (((rt0.c0))>=((t0.c0)))) WHERE (x'903c');
SELECT SUM(count) FROM (SELECT ALL ((x'903c') IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT ((((vt0.c0)OR(rt0.c3)))AND(rt0.c3)), (((rt0.c0))>=((t0.c0)))));
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT ((((vt0.c0)OR(rt0.c3)))AND(rt0.c3)), (((rt0.c0))>=((t0.c0)))) WHERE (x'903c');
SELECT SUM(count) FROM (SELECT ALL ((x'903c') IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT ((((vt0.c0)OR(rt0.c3)))AND(rt0.c3)), (((rt0.c0))>=((t0.c0)))));
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT ((((vt0.c0)OR(rt0.c3)))AND(rt0.c3)), (((rt0.c0))>=((t0.c0)))) WHERE (x'903c');
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END) IS FALSE) CROSS JOIN rt0 ON ((((t0.c0) BETWEEN (rt0.c1) AND (t0.c0)))%(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE ((NOT ((((rt0.c2))>((rt0.c3)))))) ORDER BY COALESCE((+ (t0.c0)), ((rt0.c0)+(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c2))>((rt0.c3)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END) IS FALSE) CROSS JOIN rt0 ON ((((t0.c0) BETWEEN (rt0.c1) AND (t0.c0)))%(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) ORDER BY COALESCE((+ (t0.c0)), ((rt0.c0)+(t0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END) IS FALSE) CROSS JOIN rt0 ON ((((t0.c0) BETWEEN (rt0.c1) AND (t0.c0)))%(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE ((NOT ((((rt0.c2))>((rt0.c3)))))) ORDER BY COALESCE((+ (t0.c0)), ((rt0.c0)+(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c2))>((rt0.c3)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END) IS FALSE) CROSS JOIN rt0 ON ((((t0.c0) BETWEEN (rt0.c1) AND (t0.c0)))%(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) ORDER BY COALESCE((+ (t0.c0)), ((rt0.c0)+(t0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END) IS FALSE) CROSS JOIN rt0 ON ((((t0.c0) BETWEEN (rt0.c1) AND (t0.c0)))%(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE ((NOT ((((rt0.c2))>((rt0.c3)))))) ORDER BY COALESCE((+ (t0.c0)), ((rt0.c0)+(t0.c0))) ASC;
SELECT * FROM rt0, t0 WHERE (((rt0.c2)|(((rt0.c0)IS(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)|(((rt0.c0)IS(rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((rt0.c2)|(((rt0.c0)IS(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)|(((rt0.c0)IS(rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((rt0.c2)|(((rt0.c0)IS(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((vt0.c0)LIKE(vt0.c0)))OR('ç®È¿bmã')))OR((vt0.c0 IN (x'')))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(((t0.c0)%(t0.c0))))) ORDER BY (((NOT (t0.c0)))*(((vt0.c0)==(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)LIKE(vt0.c0)))OR('ç®È¿bmã')))OR((vt0.c0 IN (x'')))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(((t0.c0)%(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((NOT (t0.c0)))*(((vt0.c0)=(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((vt0.c0)LIKE(vt0.c0)))OR('ç®È¿bmã')))OR((vt0.c0 IN (x'')))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(((t0.c0)%(t0.c0))))) ORDER BY (((NOT (t0.c0)))*(((vt0.c0)==(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)LIKE(vt0.c0)))OR('ç®È¿bmã')))OR((vt0.c0 IN (x'')))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(((t0.c0)%(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((NOT (t0.c0)))*(((vt0.c0)=(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((vt0.c0)LIKE(vt0.c0)))OR('ç®È¿bmã')))OR((vt0.c0 IN (x'')))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(((t0.c0)%(t0.c0))))) ORDER BY (((NOT (t0.c0)))*(((vt0.c0)==(vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (((vt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN ())))) WHERE (((x'')AND(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((x'')AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((vt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN ())))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (((vt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN ())))) WHERE (((x'')AND(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((x'')AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((vt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN ())))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (((vt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN ())))) WHERE (((x'')AND(CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ ((vt0.c0 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ ((vt0.c0 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ ((vt0.c0 IN (t0.c0)))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((NOT (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((NOT (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((NOT (vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE (((((t0.c0)IS(t0.c0)))<((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS(t0.c0)))<((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)IS(t0.c0)))<((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS(t0.c0)))<((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)IS(t0.c0)))<((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT * FROM vt0, t0, rt0 WHERE ((((rt0.c4, rt0.c0, rt0.c1)) NOT BETWEEN (((((rt0.c1))=((rt0.c2))), (((rt0.c0)) BETWEEN ((rt0.c4)) AND ((vt0.c0))), ((rt0.c0)GLOB(rt0.c2)))) AND ((CAST(rt0.c3 AS NUMERIC), vt0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (rt0.c3) AND (0.39110507750594026)))))) ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0)))==(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4, rt0.c0, rt0.c1)) NOT BETWEEN (((((rt0.c1))==((rt0.c2))), (((rt0.c0)) BETWEEN ((rt0.c4)) AND ((vt0.c0))), ((rt0.c0)GLOB(rt0.c2)))) AND ((CAST(rt0.c3 AS NUMERIC), vt0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (rt0.c3) AND (0.39110507750594026)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0)))=(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4))))  NULLS LAST);
SELECT * FROM vt0, t0, rt0 WHERE ((((rt0.c4, rt0.c0, rt0.c1)) NOT BETWEEN (((((rt0.c1))=((rt0.c2))), (((rt0.c0)) BETWEEN ((rt0.c4)) AND ((vt0.c0))), ((rt0.c0)GLOB(rt0.c2)))) AND ((CAST(rt0.c3 AS NUMERIC), vt0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (rt0.c3) AND (0.39110507750594026)))))) ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0)))==(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4, rt0.c0, rt0.c1)) NOT BETWEEN (((((rt0.c1))==((rt0.c2))), (((rt0.c0)) BETWEEN ((rt0.c4)) AND ((vt0.c0))), ((rt0.c0)GLOB(rt0.c2)))) AND ((CAST(rt0.c3 AS NUMERIC), vt0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (rt0.c3) AND (0.39110507750594026)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0)))=(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4))))  NULLS LAST);
SELECT * FROM vt0, t0, rt0 WHERE ((((rt0.c4, rt0.c0, rt0.c1)) NOT BETWEEN (((((rt0.c1))=((rt0.c2))), (((rt0.c0)) BETWEEN ((rt0.c4)) AND ((vt0.c0))), ((rt0.c0)GLOB(rt0.c2)))) AND ((CAST(rt0.c3 AS NUMERIC), vt0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (rt0.c3) AND (0.39110507750594026)))))) ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0)))==(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ('-1350213257');
SELECT SUM(count) FROM (SELECT ALL (('-1350213257') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('-1350213257');
SELECT SUM(count) FROM (SELECT ALL (('-1350213257') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('-1350213257');
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c3)AND(rt0.c0)) IN (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)AND(rt0.c0)) IN (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c3)AND(rt0.c0)) IN (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)AND(rt0.c0)) IN (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c3)AND(rt0.c0)) IN (CAST(rt0.c0 AS REAL))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (rt0.c1 IN ()) COLLATE RTRIM WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (rt0.c1 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (rt0.c1 IN ()) COLLATE RTRIM WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (rt0.c1 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (rt0.c1 IN ()) COLLATE RTRIM WHERE (x'');
SELECT ALL * FROM vt0, rt0, t0 WHERE (NULL) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t0 WHERE (NULL) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t0 WHERE (NULL) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST((~ (rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST((~ (rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST((~ (rt0.c0)) AS REAL));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c3  WHEN x'' THEN rt0.c1 ELSE rt0.c3 END)>=(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ''  NULLS LAST, (((((rt0.c4, x'', rt0.c1, rt0.c1, rt0.c4))>=((rt0.c0, rt0.c4, rt0.c3, rt0.c4, vt0.c0)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN x'' THEN rt0.c1 ELSE rt0.c3 END)>=(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ''  NULLS LAST, (((((rt0.c4, x'', rt0.c1, rt0.c1, rt0.c4))>=((rt0.c0, rt0.c4, rt0.c3, rt0.c4, vt0.c0)))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c3  WHEN x'' THEN rt0.c1 ELSE rt0.c3 END)>=(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ''  NULLS LAST, (((((rt0.c4, x'', rt0.c1, rt0.c1, rt0.c4))>=((rt0.c0, rt0.c4, rt0.c3, rt0.c4, vt0.c0)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN x'' THEN rt0.c1 ELSE rt0.c3 END)>=(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ''  NULLS LAST, (((((rt0.c4, x'', rt0.c1, rt0.c1, rt0.c4))>=((rt0.c0, rt0.c4, rt0.c3, rt0.c4, vt0.c0)))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c3  WHEN x'' THEN rt0.c1 ELSE rt0.c3 END)>=(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ''  NULLS LAST, (((((rt0.c4, x'', rt0.c1, rt0.c1, rt0.c4))>=((rt0.c0, rt0.c4, rt0.c3, rt0.c4, vt0.c0)))) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(((rt0.c2) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) IS TRUE) AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(((rt0.c2) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) IS TRUE) AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(((rt0.c2) IS TRUE) AS REAL));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2 IN ())))<>((x''))) WHERE (json_insert((+ (rt0.c3)), ((((t0.c0)AND(rt0.c1)))AND(rt0.c2)), ((rt0.c4)GLOB(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((json_insert((+ (rt0.c3)), ((((t0.c0)AND(rt0.c1)))AND(rt0.c2)), ((rt0.c4)GLOB(rt0.c4)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2 IN ())))<>((x''))));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2 IN ())))<>((x''))) WHERE (json_insert((+ (rt0.c3)), ((((t0.c0)AND(rt0.c1)))AND(rt0.c2)), ((rt0.c4)GLOB(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((json_insert((+ (rt0.c3)), ((((t0.c0)AND(rt0.c1)))AND(rt0.c2)), ((rt0.c4)GLOB(rt0.c4)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2 IN ())))<>((x''))));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2 IN ())))<>((x''))) WHERE (json_insert((+ (rt0.c3)), ((((t0.c0)AND(rt0.c1)))AND(rt0.c2)), ((rt0.c4)GLOB(rt0.c4))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)IS NOT(t0.c0)))&(SQLITE_SOURCE_ID())) WHERE (((((rt0.c3))<=((t0.c0))) IN (rt0.c3, IFNULL(rt0.c3, rt0.c2)))) ORDER BY x'16e8'  NULLS LAST, NULLIF(rt0.c4 COLLATE RTRIM, (t0.c0 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3))<=((t0.c0))) IN (rt0.c3, IFNULL(rt0.c3, rt0.c2)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)IS NOT(t0.c0)))&(SQLITE_SOURCE_ID())) ORDER BY x'16e8'  NULLS LAST, NULLIF(rt0.c4 COLLATE RTRIM, (t0.c0 IN ())) ASC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)IS NOT(t0.c0)))&(SQLITE_SOURCE_ID())) WHERE (((((rt0.c3))<=((t0.c0))) IN (rt0.c3, IFNULL(rt0.c3, rt0.c2)))) ORDER BY x'16e8'  NULLS LAST, NULLIF(rt0.c4 COLLATE RTRIM, (t0.c0 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3))<=((t0.c0))) IN (rt0.c3, IFNULL(rt0.c3, rt0.c2)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)IS NOT(t0.c0)))&(SQLITE_SOURCE_ID())) ORDER BY x'16e8'  NULLS LAST, NULLIF(rt0.c4 COLLATE RTRIM, (t0.c0 IN ())) ASC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)IS NOT(t0.c0)))&(SQLITE_SOURCE_ID())) WHERE (((((rt0.c3))<=((t0.c0))) IN (rt0.c3, IFNULL(rt0.c3, rt0.c2)))) ORDER BY x'16e8'  NULLS LAST, NULLIF(rt0.c4 COLLATE RTRIM, (t0.c0 IN ())) ASC;
SELECT * FROM t0 FULL OUTER JOIN rt0 ON (('')/(((rt0.c3)=(t0.c0)))) WHERE (CASE WHEN ((NULL) ISNULL) THEN rt0.c4 ELSE ((rt0.c4) ISNULL) END) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL) ISNULL) THEN rt0.c4 ELSE ((rt0.c4) ISNULL) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (('')/(((rt0.c3)=(t0.c0)))) ORDER BY x''  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON (('')/(((rt0.c3)=(t0.c0)))) WHERE (CASE WHEN ((NULL) ISNULL) THEN rt0.c4 ELSE ((rt0.c4) ISNULL) END) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL) ISNULL) THEN rt0.c4 ELSE ((rt0.c4) ISNULL) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (('')/(((rt0.c3)=(t0.c0)))) ORDER BY x''  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON (('')/(((rt0.c3)=(t0.c0)))) WHERE (CASE WHEN ((NULL) ISNULL) THEN rt0.c4 ELSE ((rt0.c4) ISNULL) END) ORDER BY x''  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON rt0.c2 WHERE ((((CAST(rt0.c1 AS TEXT)))<((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))))) ORDER BY ((((rt0.c0) IS FALSE))*(((rt0.c3) ISNULL)))  NULLS LAST, ((rt0.c4)==(rt0.c1)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS TEXT)))<((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON rt0.c2 ORDER BY ((((rt0.c0) IS FALSE))*(((rt0.c3) ISNULL)))  NULLS LAST, ((rt0.c4)==(rt0.c1)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON rt0.c2 WHERE ((((CAST(rt0.c1 AS TEXT)))<((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))))) ORDER BY ((((rt0.c0) IS FALSE))*(((rt0.c3) ISNULL)))  NULLS LAST, ((rt0.c4)==(rt0.c1)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS TEXT)))<((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON rt0.c2 ORDER BY ((((rt0.c0) IS FALSE))*(((rt0.c3) ISNULL)))  NULLS LAST, ((rt0.c4)==(rt0.c1)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON rt0.c2 WHERE ((((CAST(rt0.c1 AS TEXT)))<((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))))) ORDER BY ((((rt0.c0) IS FALSE))*(((rt0.c3) ISNULL)))  NULLS LAST, ((rt0.c4)==(rt0.c1)) COLLATE NOCASE ASC;
SELECT * FROM t0, vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL));
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND (('1492452986')))) ORDER BY x'' DESC, CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (~ (x'')) THEN ((vt0.c0)<(vt0.c0)) WHEN ((vt0.c0) BETWEEN ('0.05293016132483774') AND (vt0.c0)) THEN (NOT (vt0.c0)) WHEN '0.3467946633089609' THEN (+ (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND (('1492452986')))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC, CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (~ (x'')) THEN ((vt0.c0)<(vt0.c0)) WHEN ((vt0.c0) BETWEEN ('0.05293016132483774') AND (vt0.c0)) THEN (NOT (vt0.c0)) WHEN '0.3467946633089609' THEN (+ (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND (('1492452986')))) ORDER BY x'' DESC, CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (~ (x'')) THEN ((vt0.c0)<(vt0.c0)) WHEN ((vt0.c0) BETWEEN ('0.05293016132483774') AND (vt0.c0)) THEN (NOT (vt0.c0)) WHEN '0.3467946633089609' THEN (+ (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND (('1492452986')))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC, CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (~ (x'')) THEN ((vt0.c0)<(vt0.c0)) WHEN ((vt0.c0) BETWEEN ('0.05293016132483774') AND (vt0.c0)) THEN (NOT (vt0.c0)) WHEN '0.3467946633089609' THEN (+ (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND (('1492452986')))) ORDER BY x'' DESC, CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (~ (x'')) THEN ((vt0.c0)<(vt0.c0)) WHEN ((vt0.c0) BETWEEN ('0.05293016132483774') AND (vt0.c0)) THEN (NOT (vt0.c0)) WHEN '0.3467946633089609' THEN (+ (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS LAST;
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((rt0.c3))<=((rt0.c1))) COLLATE NOCASE) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((((rt0.c3))<=((rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, t0 ORDER BY rt0.c1);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((rt0.c3))<=((rt0.c1))) COLLATE NOCASE) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((((rt0.c3))<=((rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, t0 ORDER BY rt0.c1);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((rt0.c3))<=((rt0.c1))) COLLATE NOCASE) ORDER BY rt0.c1;
SELECT ALL * FROM t0, rt0 WHERE (CAST(rt0.c4 COLLATE NOCASE AS REAL)) ORDER BY NULLIF((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((rt0.c3, rt0.c2, x'afbe')) AND ((rt0.c1, rt0.c1, rt0.c0))), (- (rt0.c2))) DESC  NULLS FIRST, ((((('809203201')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))/(rt0.c1)) ASC  NULLS FIRST, ((NULL) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM t0, rt0 ORDER BY NULLIF((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((rt0.c3, rt0.c2, x'afbe')) AND ((rt0.c1, rt0.c1, rt0.c0))), (- (rt0.c2))) DESC  NULLS FIRST, ((((('809203201')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))/(rt0.c1)) ASC  NULLS FIRST, ((NULL) IS FALSE) DESC);
SELECT ALL * FROM t0, rt0 WHERE (CAST(rt0.c4 COLLATE NOCASE AS REAL)) ORDER BY NULLIF((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((rt0.c3, rt0.c2, x'afbe')) AND ((rt0.c1, rt0.c1, rt0.c0))), (- (rt0.c2))) DESC  NULLS FIRST, ((((('809203201')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))/(rt0.c1)) ASC  NULLS FIRST, ((NULL) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM t0, rt0 ORDER BY NULLIF((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((rt0.c3, rt0.c2, x'afbe')) AND ((rt0.c1, rt0.c1, rt0.c0))), (- (rt0.c2))) DESC  NULLS FIRST, ((((('809203201')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))/(rt0.c1)) ASC  NULLS FIRST, ((NULL) IS FALSE) DESC);
SELECT ALL * FROM t0, rt0 WHERE (CAST(rt0.c4 COLLATE NOCASE AS REAL)) ORDER BY NULLIF((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((rt0.c3, rt0.c2, x'afbe')) AND ((rt0.c1, rt0.c1, rt0.c0))), (- (rt0.c2))) DESC  NULLS FIRST, ((((('809203201')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))/(rt0.c1)) ASC  NULLS FIRST, ((NULL) IS FALSE) DESC;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((+ (((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((+ (((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((+ (((t0.c0) ISNULL))));
SELECT * FROM t0, rt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)%(rt0.c1)))>=(LIKE(rt0.c4, rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)%(rt0.c1)))>=(LIKE(rt0.c4, rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)%(rt0.c1)))>=(LIKE(rt0.c4, rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)%(rt0.c1)))>=(LIKE(rt0.c4, rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)%(rt0.c1)))>=(LIKE(rt0.c4, rt0.c3))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('1593727503') NOTNULL))<=(vt0.c0))) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.4743891339143468 THEN 0.26536895848873665 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('1593727503') NOTNULL))<=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.4743891339143468 THEN 0.26536895848873665 END IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('1593727503') NOTNULL))<=(vt0.c0))) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.4743891339143468 THEN 0.26536895848873665 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('1593727503') NOTNULL))<=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.4743891339143468 THEN 0.26536895848873665 END IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('1593727503') NOTNULL))<=(vt0.c0))) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.4743891339143468 THEN 0.26536895848873665 END IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE NOCASE) ORDER BY 0.8997372115457686 COLLATE NOCASE  NULLS LAST, CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) AS REAL), rt0.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY 0.8997372115457686 COLLATE NOCASE  NULLS LAST, CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) AS REAL), rt0.c4  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE NOCASE) ORDER BY 0.8997372115457686 COLLATE NOCASE  NULLS LAST, CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) AS REAL), rt0.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY 0.8997372115457686 COLLATE NOCASE  NULLS LAST, CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) AS REAL), rt0.c4  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE NOCASE) ORDER BY 0.8997372115457686 COLLATE NOCASE  NULLS LAST, CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) AS REAL), rt0.c4  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (CASE ((vt0.c0)GLOB(rt0.c2))  WHEN CAST(rt0.c0 AS TEXT) THEN (NOT (rt0.c1)) WHEN ((rt0.c4)/('%f~sNa')) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN rt0.c2 THEN ((rt0.c2) IS FALSE) ELSE NULL END) ORDER BY '1044377495' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)GLOB(rt0.c2))  WHEN CAST(rt0.c0 AS TEXT) THEN (NOT (rt0.c1)) WHEN ((rt0.c4)/('%f~sNa')) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN rt0.c2 THEN ((rt0.c2) IS FALSE) ELSE NULL END) IS TRUE)  as count FROM rt0, vt0 ORDER BY '1044377495' DESC);
SELECT ALL * FROM rt0, vt0 WHERE (CASE ((vt0.c0)GLOB(rt0.c2))  WHEN CAST(rt0.c0 AS TEXT) THEN (NOT (rt0.c1)) WHEN ((rt0.c4)/('%f~sNa')) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN rt0.c2 THEN ((rt0.c2) IS FALSE) ELSE NULL END) ORDER BY '1044377495' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)GLOB(rt0.c2))  WHEN CAST(rt0.c0 AS TEXT) THEN (NOT (rt0.c1)) WHEN ((rt0.c4)/('%f~sNa')) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN rt0.c2 THEN ((rt0.c2) IS FALSE) ELSE NULL END) IS TRUE)  as count FROM rt0, vt0 ORDER BY '1044377495' DESC);
SELECT ALL * FROM rt0, vt0 WHERE (CASE ((vt0.c0)GLOB(rt0.c2))  WHEN CAST(rt0.c0 AS TEXT) THEN (NOT (rt0.c1)) WHEN ((rt0.c4)/('%f~sNa')) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN rt0.c2 THEN ((rt0.c2) IS FALSE) ELSE NULL END) ORDER BY '1044377495' DESC;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)-(t0.c0)) IN (((t0.c0)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)-(t0.c0)) IN (((t0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)-(t0.c0)) IN (((t0.c0)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)-(t0.c0)) IN (((t0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)-(t0.c0)) IN (((t0.c0)IS NOT(t0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 END) NOT BETWEEN ((((vt0.c0, t0.c0, x'b703')) NOT BETWEEN ((vt0.c0, rt0.c4, rt0.c2)) AND ((rt0.c2, t0.c0, t0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 END) NOT BETWEEN ((((vt0.c0, t0.c0, x'b703')) NOT BETWEEN ((vt0.c0, rt0.c4, rt0.c2)) AND ((rt0.c2, t0.c0, t0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c4 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 END) NOT BETWEEN ((((vt0.c0, t0.c0, x'b703')) NOT BETWEEN ((vt0.c0, rt0.c4, rt0.c2)) AND ((rt0.c2, t0.c0, t0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 END) NOT BETWEEN ((((vt0.c0, t0.c0, x'b703')) NOT BETWEEN ((vt0.c0, rt0.c4, rt0.c2)) AND ((rt0.c2, t0.c0, t0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c4 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 END) NOT BETWEEN ((((vt0.c0, t0.c0, x'b703')) NOT BETWEEN ((vt0.c0, rt0.c4, rt0.c2)) AND ((rt0.c2, t0.c0, t0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c4 END)));
SELECT * FROM vt0, rt0, t0 WHERE (((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN 'R)' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN 'R)' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN 'R)' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN 'R)' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN 'R)' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS FALSE));
SELECT * FROM vt0, rt0 WHERE ((((((vt0.c0)OR(rt0.c3)))OR(rt0.c3)) IN ())) ORDER BY ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((NULL))) IN (((rt0.c0)<=(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(rt0.c3)))OR(rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((NULL))) IN (((rt0.c0)<=(rt0.c2)))));
SELECT * FROM vt0, rt0 WHERE ((((((vt0.c0)OR(rt0.c3)))OR(rt0.c3)) IN ())) ORDER BY ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((NULL))) IN (((rt0.c0)<=(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(rt0.c3)))OR(rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((NULL))) IN (((rt0.c0)<=(rt0.c2)))));
SELECT * FROM vt0, rt0 WHERE ((((((vt0.c0)OR(rt0.c3)))OR(rt0.c3)) IN ())) ORDER BY ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((NULL))) IN (((rt0.c0)<=(rt0.c2))));
SELECT ALL * FROM rt0 WHERE (LIKELY(rt0.c1)) ORDER BY (rt0.c4 COLLATE NOCASE IN (((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c0)))) DESC, ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))-(((rt0.c2)LIKE(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c4 COLLATE NOCASE IN (((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c0)))) DESC, ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))-(((rt0.c2)LIKE(rt0.c3)))));
SELECT ALL * FROM rt0 WHERE (LIKELY(rt0.c1)) ORDER BY (rt0.c4 COLLATE NOCASE IN (((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c0)))) DESC, ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))-(((rt0.c2)LIKE(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c4 COLLATE NOCASE IN (((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c0)))) DESC, ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))-(((rt0.c2)LIKE(rt0.c3)))));
SELECT ALL * FROM rt0 WHERE (LIKELY(rt0.c1)) ORDER BY (rt0.c4 COLLATE NOCASE IN (((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c0)))) DESC, ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))-(((rt0.c2)LIKE(rt0.c3))));
SELECT ALL * FROM t0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>=(vt0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>=(vt0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>=(vt0.c0)));
SELECT * FROM vt0 WHERE (((vt0.c0)AND((vt0.c0 IN ())))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL));
SELECT * FROM vt0 WHERE (((vt0.c0)AND((vt0.c0 IN ())))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL));
SELECT * FROM vt0 WHERE (((vt0.c0)AND((vt0.c0 IN ())))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)<>(t0.c0)))/((- (t0.c0))))) ORDER BY ((((vt0.c0) IS FALSE))<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(t0.c0)))/((- (t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0) IS FALSE))<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)<>(t0.c0)))/((- (t0.c0))))) ORDER BY ((((vt0.c0) IS FALSE))<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(t0.c0)))/((- (t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0) IS FALSE))<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)<>(t0.c0)))/((- (t0.c0))))) ORDER BY ((((vt0.c0) IS FALSE))<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((1721573299))==((vt0.c0))) COLLATE RTRIM) ORDER BY (((vt0.c0)*(vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((1721573299))==((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)*(vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((1721573299))==((vt0.c0))) COLLATE RTRIM) ORDER BY (((vt0.c0)*(vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((1721573299))==((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)*(vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((1721573299))==((vt0.c0))) COLLATE RTRIM) ORDER BY (((vt0.c0)*(vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((NOT (LTRIM(vt0.c0)))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (LTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (LTRIM(vt0.c0)))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (LTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (LTRIM(vt0.c0)))) ORDER BY vt0.c0  NULLS LAST;
SELECT * FROM t0 WHERE ((((((('-254443181')OR(x'')))OR(t0.c0))) NOTNULL)) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST, ((0.7094865081914876)OR((t0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((('-254443181')OR(x'')))OR(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST, ((0.7094865081914876)OR((t0.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((('-254443181')OR(x'')))OR(t0.c0))) NOTNULL)) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST, ((0.7094865081914876)OR((t0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((('-254443181')OR(x'')))OR(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST, ((0.7094865081914876)OR((t0.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((('-254443181')OR(x'')))OR(t0.c0))) NOTNULL)) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST, ((0.7094865081914876)OR((t0.c0 IN ()))) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON MIN(NULLIF(DISTINCT t0.c0, rt0.c1), ((rt0.c4)<(rt0.c1))) WHERE (rt0.c3) ORDER BY (((((rt0.c0))!=((rt0.c3)))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) AND (CASE 0.509079237889559  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON MIN(NULLIF(DISTINCT t0.c0, rt0.c1), ((rt0.c4)<(rt0.c1))) ORDER BY (((((rt0.c0))<>((rt0.c3)))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) AND (CASE 0.509079237889559  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 END)) ASC);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON MIN(NULLIF(DISTINCT t0.c0, rt0.c1), ((rt0.c4)<(rt0.c1))) WHERE (rt0.c3) ORDER BY (((((rt0.c0))!=((rt0.c3)))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) AND (CASE 0.509079237889559  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON MIN(NULLIF(DISTINCT t0.c0, rt0.c1), ((rt0.c4)<(rt0.c1))) ORDER BY (((((rt0.c0))<>((rt0.c3)))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) AND (CASE 0.509079237889559  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 END)) ASC);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON MIN(NULLIF(DISTINCT t0.c0, rt0.c1), ((rt0.c4)<(rt0.c1))) WHERE (rt0.c3) ORDER BY (((((rt0.c0))!=((rt0.c3)))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) AND (CASE 0.509079237889559  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 END)) ASC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(UNLIKELY(vt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(UNLIKELY(vt0.c0) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(UNLIKELY(vt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(UNLIKELY(vt0.c0) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(UNLIKELY(vt0.c0) AS REAL));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((0.5369094849268697) IS TRUE) WHERE (((t0.c0)/((rt0.c2 IN ())))) ORDER BY (((((((((((t0.c0))!=((rt0.c0))))OR(CASE t0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE t0.c0 END)))AND(((rt0.c0)|(rt0.c2)))))OR(rt0.c0)))OR((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))) ASC  NULLS FIRST, ((((((rt0.c0)%(rt0.c3)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(CAST(rt0.c4 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)/((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((0.5369094849268697) IS TRUE) ORDER BY (((((((((((t0.c0))<>((rt0.c0))))OR(CASE t0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE t0.c0 END)))AND(((rt0.c0)|(rt0.c2)))))OR(rt0.c0)))OR((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))) ASC  NULLS FIRST, ((((((rt0.c0)%(rt0.c3)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(CAST(rt0.c4 AS TEXT)))  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((0.5369094849268697) IS TRUE) WHERE (((t0.c0)/((rt0.c2 IN ())))) ORDER BY (((((((((((t0.c0))!=((rt0.c0))))OR(CASE t0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE t0.c0 END)))AND(((rt0.c0)|(rt0.c2)))))OR(rt0.c0)))OR((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))) ASC  NULLS FIRST, ((((((rt0.c0)%(rt0.c3)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(CAST(rt0.c4 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)/((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((0.5369094849268697) IS TRUE) ORDER BY (((((((((((t0.c0))<>((rt0.c0))))OR(CASE t0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE t0.c0 END)))AND(((rt0.c0)|(rt0.c2)))))OR(rt0.c0)))OR((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))) ASC  NULLS FIRST, ((((((rt0.c0)%(rt0.c3)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(CAST(rt0.c4 AS TEXT)))  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((0.5369094849268697) IS TRUE) WHERE (((t0.c0)/((rt0.c2 IN ())))) ORDER BY (((((((((((t0.c0))!=((rt0.c0))))OR(CASE t0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE t0.c0 END)))AND(((rt0.c0)|(rt0.c2)))))OR(rt0.c0)))OR((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))) ASC  NULLS FIRST, ((((((rt0.c0)%(rt0.c3)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(CAST(rt0.c4 AS TEXT)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON HEX(DISTINCT ((vt0.c0)IS NOT(t0.c0))) CROSS JOIN vt0 ON ('qç¤' IN ()) WHERE ((((vt0.c0 IN ())) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY (((rt0.c2)) BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)) AND ((CASE -1633210471  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE t0.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON HEX(DISTINCT ((vt0.c0)IS NOT(t0.c0))) CROSS JOIN vt0 ON ('qç¤' IN ()) ORDER BY (((rt0.c2)) BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)) AND ((CASE -1633210471  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE t0.c0 END))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON HEX(DISTINCT ((vt0.c0)IS NOT(t0.c0))) CROSS JOIN vt0 ON ('qç¤' IN ()) WHERE ((((vt0.c0 IN ())) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY (((rt0.c2)) BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)) AND ((CASE -1633210471  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE t0.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON HEX(DISTINCT ((vt0.c0)IS NOT(t0.c0))) CROSS JOIN vt0 ON ('qç¤' IN ()) ORDER BY (((rt0.c2)) BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)) AND ((CASE -1633210471  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE t0.c0 END))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON HEX(DISTINCT ((vt0.c0)IS NOT(t0.c0))) CROSS JOIN vt0 ON ('qç¤' IN ()) WHERE ((((vt0.c0 IN ())) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY (((rt0.c2)) BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)) AND ((CASE -1633210471  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE t0.c0 END))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c0 AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END)IS NOT((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY (((((rt0.c3, rt0.c3, rt0.c3)) BETWEEN ((rt0.c4, t0.c0, rt0.c1)) AND ((rt0.c3, x'', rt0.c1)))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END)IS NOT((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((rt0.c3, rt0.c3, rt0.c3)) BETWEEN ((rt0.c4, t0.c0, rt0.c1)) AND ((rt0.c3, x'', rt0.c1)))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END)IS NOT((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY (((((rt0.c3, rt0.c3, rt0.c3)) BETWEEN ((rt0.c4, t0.c0, rt0.c1)) AND ((rt0.c3, x'', rt0.c1)))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END)IS NOT((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((rt0.c3, rt0.c3, rt0.c3)) BETWEEN ((rt0.c4, t0.c0, rt0.c1)) AND ((rt0.c3, x'', rt0.c1)))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END)IS NOT((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY (((((rt0.c3, rt0.c3, rt0.c3)) BETWEEN ((rt0.c4, t0.c0, rt0.c1)) AND ((rt0.c3, x'', rt0.c1)))) ISNULL);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((x'')OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))AND((vt0.c0 IN (rt0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))AND((vt0.c0 IN (rt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((x'')OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))AND((vt0.c0 IN (rt0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))AND((vt0.c0 IN (rt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((x'')OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))AND((vt0.c0 IN (rt0.c1, vt0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4)OR(rt0.c2))) IS TRUE)) ORDER BY (((rt0.c0)<<(rt0.c2)) IN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)OR(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)<<(rt0.c2)) IN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4)OR(rt0.c2))) IS TRUE)) ORDER BY (((rt0.c0)<<(rt0.c2)) IN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)OR(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)<<(rt0.c2)) IN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4)OR(rt0.c2))) IS TRUE)) ORDER BY (((rt0.c0)<<(rt0.c2)) IN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) DESC;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c4)))AND(CASE rt0.c0  WHEN rt0.c3 THEN '	]}/KQ' ELSE t0.c0 END)))AND(((rt0.c4) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((rt0.c1) IS FALSE))))OR(CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c4)))AND(CASE rt0.c0  WHEN rt0.c3 THEN '	]}/KQ' ELSE t0.c0 END)))AND(((rt0.c4) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((rt0.c1) IS FALSE))))OR(CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c4 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c4)))AND(CASE rt0.c0  WHEN rt0.c3 THEN '	]}/KQ' ELSE t0.c0 END)))AND(((rt0.c4) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((rt0.c1) IS FALSE))))OR(CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c4)))AND(CASE rt0.c0  WHEN rt0.c3 THEN '	]}/KQ' ELSE t0.c0 END)))AND(((rt0.c4) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((rt0.c1) IS FALSE))))OR(CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c4 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c4)))AND(CASE rt0.c0  WHEN rt0.c3 THEN '	]}/KQ' ELSE t0.c0 END)))AND(((rt0.c4) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((rt0.c1) IS FALSE))))OR(CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c4 END)));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c1)>=(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>=(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c1)>=(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>=(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c1)>=(rt0.c2))) IS TRUE));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CASE ((((rt0.c4)AND(t0.c0)))OR(rt0.c2))  WHEN rt0.c4 THEN '0.20667988057253017' ELSE (rt0.c2 IN (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c4)AND(t0.c0)))OR(rt0.c2))  WHEN rt0.c4 THEN '0.20667988057253017' ELSE (rt0.c2 IN (t0.c0)) END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CASE ((((rt0.c4)AND(t0.c0)))OR(rt0.c2))  WHEN rt0.c4 THEN '0.20667988057253017' ELSE (rt0.c2 IN (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c4)AND(t0.c0)))OR(rt0.c2))  WHEN rt0.c4 THEN '0.20667988057253017' ELSE (rt0.c2 IN (t0.c0)) END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CASE ((((rt0.c4)AND(t0.c0)))OR(rt0.c2))  WHEN rt0.c4 THEN '0.20667988057253017' ELSE (rt0.c2 IN (t0.c0)) END);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c0)IS NOT(((0.07974020037429386)%(vt0.c0)))) WHERE (((((((t0.c0)|(vt0.c0)))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((t0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)|(vt0.c0)))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((t0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c0)IS NOT(((0.07974020037429386)%(vt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c0)IS NOT(((0.07974020037429386)%(vt0.c0)))) WHERE (((((((t0.c0)|(vt0.c0)))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((t0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)|(vt0.c0)))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((t0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c0)IS NOT(((0.07974020037429386)%(vt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c0)IS NOT(((0.07974020037429386)%(vt0.c0)))) WHERE (((((((t0.c0)|(vt0.c0)))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((t0.c0)IS(vt0.c0)))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON UNLIKELY(CASE WHEN '354601824' THEN rt0.c3 ELSE t0.c0 END) WHERE (((((rt0.c1)<<(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c4 ELSE x'' END) AND (((rt0.c1) BETWEEN (rt0.c4) AND (0.35941234670598676))))) ORDER BY ((((rt0.c3)<<(rt0.c4))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c4 ELSE x'' END) AND (((rt0.c1) BETWEEN (rt0.c4) AND (0.35941234670598676))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON UNLIKELY(CASE WHEN '354601824' THEN rt0.c3 ELSE t0.c0 END) ORDER BY ((((rt0.c3)<<(rt0.c4))) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON UNLIKELY(CASE WHEN '354601824' THEN rt0.c3 ELSE t0.c0 END) WHERE (((((rt0.c1)<<(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c4 ELSE x'' END) AND (((rt0.c1) BETWEEN (rt0.c4) AND (0.35941234670598676))))) ORDER BY ((((rt0.c3)<<(rt0.c4))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c4 ELSE x'' END) AND (((rt0.c1) BETWEEN (rt0.c4) AND (0.35941234670598676))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON UNLIKELY(CASE WHEN '354601824' THEN rt0.c3 ELSE t0.c0 END) ORDER BY ((((rt0.c3)<<(rt0.c4))) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON UNLIKELY(CASE WHEN '354601824' THEN rt0.c3 ELSE t0.c0 END) WHERE (((((rt0.c1)<<(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c4 ELSE x'' END) AND (((rt0.c1) BETWEEN (rt0.c4) AND (0.35941234670598676))))) ORDER BY ((((rt0.c3)<<(rt0.c4))) ISNULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (x'');
SELECT * FROM vt0, rt0 WHERE (((CAST(1.897478034E9 AS REAL))!=(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(1.897478034E9 AS REAL))<>(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CAST(1.897478034E9 AS REAL))!=(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(1.897478034E9 AS REAL))<>(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CAST(1.897478034E9 AS REAL))!=(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3)))));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c4)OR(t0.c0)) AS INTEGER) INNER JOIN vt0 ON (((- (t0.c0))) BETWEEN (NULLIF(t0.c0, rt0.c2)) AND (((((-1.088600204E9)OR(rt0.c4)))OR(rt0.c1)))) WHERE (x'a252') ORDER BY ((((((rt0.c1)IS NOT(t0.c0)))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))AND((~ (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'a252') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c4)OR(t0.c0)) AS INTEGER) INNER JOIN vt0 ON (((- (t0.c0))) BETWEEN (NULLIF(t0.c0, rt0.c2)) AND (((((-1.088600204E9)OR(rt0.c4)))OR(rt0.c1)))) ORDER BY ((((((rt0.c1)IS NOT(t0.c0)))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))AND((~ (rt0.c0))))  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c4)OR(t0.c0)) AS INTEGER) INNER JOIN vt0 ON (((- (t0.c0))) BETWEEN (NULLIF(t0.c0, rt0.c2)) AND (((((-1.088600204E9)OR(rt0.c4)))OR(rt0.c1)))) WHERE (x'a252') ORDER BY ((((((rt0.c1)IS NOT(t0.c0)))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))AND((~ (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'a252') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c4)OR(t0.c0)) AS INTEGER) INNER JOIN vt0 ON (((- (t0.c0))) BETWEEN (NULLIF(t0.c0, rt0.c2)) AND (((((-1.088600204E9)OR(rt0.c4)))OR(rt0.c1)))) ORDER BY ((((((rt0.c1)IS NOT(t0.c0)))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))AND((~ (rt0.c0))))  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c4)OR(t0.c0)) AS INTEGER) INNER JOIN vt0 ON (((- (t0.c0))) BETWEEN (NULLIF(t0.c0, rt0.c2)) AND (((((-1.088600204E9)OR(rt0.c4)))OR(rt0.c1)))) WHERE (x'a252') ORDER BY ((((((rt0.c1)IS NOT(t0.c0)))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))AND((~ (rt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1) IS TRUE))+((('273504559') NOT BETWEEN (rt0.c0) AND (t0.c0)))) CROSS JOIN t0 ON ((rt0.c2)LIKE(vt0.c0)) COLLATE BINARY WHERE (((((rt0.c4) NOT NULL))&(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT NULL))&(x''))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1) IS TRUE))+((('273504559') NOT BETWEEN (rt0.c0) AND (t0.c0)))) CROSS JOIN t0 ON ((rt0.c2)LIKE(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1) IS TRUE))+((('273504559') NOT BETWEEN (rt0.c0) AND (t0.c0)))) CROSS JOIN t0 ON ((rt0.c2)LIKE(vt0.c0)) COLLATE BINARY WHERE (((((rt0.c4) NOT NULL))&(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT NULL))&(x''))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1) IS TRUE))+((('273504559') NOT BETWEEN (rt0.c0) AND (t0.c0)))) CROSS JOIN t0 ON ((rt0.c2)LIKE(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (CASE ((((((((NULL)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND('2144280968'))  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN COALESCE(t0.c0, x'') WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)<=(0.7526629993840831)) WHEN ((t0.c0) IS TRUE) THEN ((t0.c0)<=(t0.c0)) ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((NULL)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND('2144280968'))  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN COALESCE(t0.c0, x'') WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)<=(0.7526629993840831)) WHEN ((t0.c0) IS TRUE) THEN ((t0.c0)<=(t0.c0)) ELSE t0.c0 END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((((((((NULL)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND('2144280968'))  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN COALESCE(t0.c0, x'') WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)<=(0.7526629993840831)) WHEN ((t0.c0) IS TRUE) THEN ((t0.c0)<=(t0.c0)) ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((NULL)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND('2144280968'))  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN COALESCE(t0.c0, x'') WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)<=(0.7526629993840831)) WHEN ((t0.c0) IS TRUE) THEN ((t0.c0)<=(t0.c0)) ELSE t0.c0 END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((((((((NULL)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND('2144280968'))  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN COALESCE(t0.c0, x'') WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)<=(0.7526629993840831)) WHEN ((t0.c0) IS TRUE) THEN ((t0.c0)<=(t0.c0)) ELSE t0.c0 END);
SELECT ALL * FROM vt0, t0 WHERE (((LTRIM(vt0.c0)) NOTNULL)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL), ((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL), ((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0))) NOT NULL) DESC);
SELECT ALL * FROM vt0, t0 WHERE (((LTRIM(vt0.c0)) NOTNULL)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL), ((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL), ((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0))) NOT NULL) DESC);
SELECT ALL * FROM vt0, t0 WHERE (((LTRIM(vt0.c0)) NOTNULL)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL), ((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0))) NOT NULL) DESC;
SELECT ALL * FROM rt0, t0 WHERE ((((- (rt0.c0))) NOT BETWEEN (((((rt0.c4)AND(0.18349145032162661)))OR(rt0.c4))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0))) NOT BETWEEN (((((rt0.c4)AND(0.18349145032162661)))OR(rt0.c4))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((- (rt0.c0))) NOT BETWEEN (((((rt0.c4)AND(0.18349145032162661)))OR(rt0.c4))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0))) NOT BETWEEN (((((rt0.c4)AND(0.18349145032162661)))OR(rt0.c4))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((- (rt0.c0))) NOT BETWEEN (((((rt0.c4)AND(0.18349145032162661)))OR(rt0.c4))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ((((('0SVb') NOT BETWEEN (rt0.c2) AND (rt0.c2)))%(CAST(rt0.c3 AS REAL)))) ORDER BY ((((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)))==(-1593792389));
SELECT SUM(count) FROM (SELECT (((((('0SVb') NOT BETWEEN (rt0.c2) AND (rt0.c2)))%(CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)))=(-1593792389)));
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ((((('0SVb') NOT BETWEEN (rt0.c2) AND (rt0.c2)))%(CAST(rt0.c3 AS REAL)))) ORDER BY ((((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)))==(-1593792389));
SELECT SUM(count) FROM (SELECT (((((('0SVb') NOT BETWEEN (rt0.c2) AND (rt0.c2)))%(CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)))=(-1593792389)));
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ((((('0SVb') NOT BETWEEN (rt0.c2) AND (rt0.c2)))%(CAST(rt0.c3 AS REAL)))) ORDER BY ((((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)))==(-1593792389));
SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((((NOT (rt0.c4))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (0xfffffffff18a8ac3) AND (rt0.c0))) AND (((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2))))) ORDER BY ((((rt0.c4)>>(t0.c0)))IS NOT(((rt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c4))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (0Xfffffffff18a8ac3) AND (rt0.c0))) AND (((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((((rt0.c4)>>(t0.c0)))IS NOT(((rt0.c0) NOTNULL))) DESC);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((((NOT (rt0.c4))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (0xfffffffff18a8ac3) AND (rt0.c0))) AND (((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2))))) ORDER BY ((((rt0.c4)>>(t0.c0)))IS NOT(((rt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c4))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (0Xfffffffff18a8ac3) AND (rt0.c0))) AND (((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((((rt0.c4)>>(t0.c0)))IS NOT(((rt0.c0) NOTNULL))) DESC);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((((NOT (rt0.c4))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (0xfffffffff18a8ac3) AND (rt0.c0))) AND (((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2))))) ORDER BY ((((rt0.c4)>>(t0.c0)))IS NOT(((rt0.c0) NOTNULL))) DESC;
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON ((((((0.6826326835784265)AND(rt0.c1)))OR(rt0.c0))) BETWEEN (CASE WHEN rt0.c3 THEN t0.c0 ELSE rt0.c0 END) AND (((rt0.c0)>(t0.c0)))) WHERE (CAST(PRINTF(rt0.c4) AS INTEGER)) ORDER BY CAST(LIKELY(DISTINCT rt0.c1) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(PRINTF(rt0.c4) AS INTEGER)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((((0.6826326835784265)AND(rt0.c1)))OR(rt0.c0))) BETWEEN (CASE WHEN rt0.c3 THEN t0.c0 ELSE rt0.c0 END) AND (((rt0.c0)>(t0.c0)))) ORDER BY CAST(LIKELY(DISTINCT rt0.c1) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON ((((((0.6826326835784265)AND(rt0.c1)))OR(rt0.c0))) BETWEEN (CASE WHEN rt0.c3 THEN t0.c0 ELSE rt0.c0 END) AND (((rt0.c0)>(t0.c0)))) WHERE (CAST(PRINTF(rt0.c4) AS INTEGER)) ORDER BY CAST(LIKELY(DISTINCT rt0.c1) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(PRINTF(rt0.c4) AS INTEGER)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((((0.6826326835784265)AND(rt0.c1)))OR(rt0.c0))) BETWEEN (CASE WHEN rt0.c3 THEN t0.c0 ELSE rt0.c0 END) AND (((rt0.c0)>(t0.c0)))) ORDER BY CAST(LIKELY(DISTINCT rt0.c1) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON ((((((0.6826326835784265)AND(rt0.c1)))OR(rt0.c0))) BETWEEN (CASE WHEN rt0.c3 THEN t0.c0 ELSE rt0.c0 END) AND (((rt0.c0)>(t0.c0)))) WHERE (CAST(PRINTF(rt0.c4) AS INTEGER)) ORDER BY CAST(LIKELY(DISTINCT rt0.c1) AS BLOB) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)<=(rt0.c4)))AND(((((-9.99745232E8)OR(rt0.c4)))OR(rt0.c3)))))AND(((rt0.c3) IS TRUE)))) ORDER BY (((rt0.c0 IN ())) NOT NULL)  NULLS LAST, (((rt0.c2, rt0.c0, rt0.c4))<((rt0.c1, rt0.c0, rt0.c1))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)<=(rt0.c4)))AND(((((-9.99745232E8)OR(rt0.c4)))OR(rt0.c3)))))AND(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) NOT NULL)  NULLS LAST, (((rt0.c2, rt0.c0, rt0.c4))<((rt0.c1, rt0.c0, rt0.c1))) COLLATE NOCASE ASC);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)<=(rt0.c4)))AND(((((-9.99745232E8)OR(rt0.c4)))OR(rt0.c3)))))AND(((rt0.c3) IS TRUE)))) ORDER BY (((rt0.c0 IN ())) NOT NULL)  NULLS LAST, (((rt0.c2, rt0.c0, rt0.c4))<((rt0.c1, rt0.c0, rt0.c1))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)<=(rt0.c4)))AND(((((-9.99745232E8)OR(rt0.c4)))OR(rt0.c3)))))AND(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) NOT NULL)  NULLS LAST, (((rt0.c2, rt0.c0, rt0.c4))<((rt0.c1, rt0.c0, rt0.c1))) COLLATE NOCASE ASC);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)<=(rt0.c4)))AND(((((-9.99745232E8)OR(rt0.c4)))OR(rt0.c3)))))AND(((rt0.c3) IS TRUE)))) ORDER BY (((rt0.c0 IN ())) NOT NULL)  NULLS LAST, (((rt0.c2, rt0.c0, rt0.c4))<((rt0.c1, rt0.c0, rt0.c1))) COLLATE NOCASE ASC;
SELECT * FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN '-939408769' WHEN rt0.c4 THEN rt0.c4 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN '-939408769' WHEN rt0.c4 THEN rt0.c4 END IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN '-939408769' WHEN rt0.c4 THEN rt0.c4 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN '-939408769' WHEN rt0.c4 THEN rt0.c4 END IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN '-939408769' WHEN rt0.c4 THEN rt0.c4 END IN ()));
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c3) NOTNULL)) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) IS FALSE)))) ORDER BY ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 END)+((rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOTNULL)) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 END)+((rt0.c3 IN ()))));
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c3) NOTNULL)) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) IS FALSE)))) ORDER BY ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 END)+((rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOTNULL)) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 END)+((rt0.c3 IN ()))));
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c3) NOTNULL)) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) IS FALSE)))) ORDER BY ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 END)+((rt0.c3 IN ())));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 INDEXED BY i64 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (((vt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0 INDEXED BY i64);
SELECT * FROM vt0 INDEXED BY i64 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (((vt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0 INDEXED BY i64);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON (NOT ((+ (-1.7976931348623157E308)))) WHERE (CAST(((rt0.c2)=(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)==(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON (NOT ((+ (-1.7976931348623157E308)))));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON (NOT ((+ (-1.7976931348623157E308)))) WHERE (CAST(((rt0.c2)=(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)==(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON (NOT ((+ (-1.7976931348623157E308)))));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON (NOT ((+ (-1.7976931348623157E308)))) WHERE (CAST(((rt0.c2)=(vt0.c0)) AS BLOB));
SELECT ALL * FROM rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (rt0.c1);
SELECT * FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0)/(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0)/(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0)/(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0)/(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0)/(t0.c0)))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE x'' END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE x'' END AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE x'' END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE x'' END AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE x'' END AS TEXT));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON UPPER(DISTINCT (x'1282' IN ())) LEFT OUTER JOIN rt0 ON (((rt0.c3))=((vt0.c0))) COLLATE NOCASE WHERE (json_remove(((vt0.c0)IS NOT(rt0.c1)), ((((t0.c0)AND(x'ab44')))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((vt0.c0)IS NOT(rt0.c1)), ((((t0.c0)AND(x'ab44')))AND(vt0.c0)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON UPPER(DISTINCT (x'1282' IN ())) LEFT OUTER JOIN rt0 ON (((rt0.c3))==((vt0.c0))) COLLATE NOCASE);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON UPPER(DISTINCT (x'1282' IN ())) LEFT OUTER JOIN rt0 ON (((rt0.c3))=((vt0.c0))) COLLATE NOCASE WHERE (json_remove(((vt0.c0)IS NOT(rt0.c1)), ((((t0.c0)AND(x'ab44')))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((vt0.c0)IS NOT(rt0.c1)), ((((t0.c0)AND(x'ab44')))AND(vt0.c0)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON UPPER(DISTINCT (x'1282' IN ())) LEFT OUTER JOIN rt0 ON (((rt0.c3))==((vt0.c0))) COLLATE NOCASE);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON UPPER(DISTINCT (x'1282' IN ())) LEFT OUTER JOIN rt0 ON (((rt0.c3))=((vt0.c0))) COLLATE NOCASE WHERE (json_remove(((vt0.c0)IS NOT(rt0.c1)), ((((t0.c0)AND(x'ab44')))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c3)OR(rt0.c0)))<(vt0.c0)) WHERE (((((((((CAST(rt0.c4 AS INTEGER))OR((((rt0.c3))>((rt0.c3))))))AND(((vt0.c0)<(rt0.c4)))))AND(((rt0.c1)*(rt0.c3)))))OR(UPPER(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c4 AS INTEGER))OR((((rt0.c3))>((rt0.c3))))))AND(((vt0.c0)<(rt0.c4)))))AND(((rt0.c1)*(rt0.c3)))))OR(UPPER(rt0.c1)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c3)OR(rt0.c0)))<(vt0.c0)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c3)OR(rt0.c0)))<(vt0.c0)) WHERE (((((((((CAST(rt0.c4 AS INTEGER))OR((((rt0.c3))>((rt0.c3))))))AND(((vt0.c0)<(rt0.c4)))))AND(((rt0.c1)*(rt0.c3)))))OR(UPPER(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c4 AS INTEGER))OR((((rt0.c3))>((rt0.c3))))))AND(((vt0.c0)<(rt0.c4)))))AND(((rt0.c1)*(rt0.c3)))))OR(UPPER(rt0.c1)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c3)OR(rt0.c0)))<(vt0.c0)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c3)OR(rt0.c0)))<(vt0.c0)) WHERE (((((((((CAST(rt0.c4 AS INTEGER))OR((((rt0.c3))>((rt0.c3))))))AND(((vt0.c0)<(rt0.c4)))))AND(((rt0.c1)*(rt0.c3)))))OR(UPPER(rt0.c1))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE ((CASE WHEN rt0.c3 THEN rt0.c1 END IN ())) ORDER BY ((x'') BETWEEN (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0))) AND (0x3fdd4282 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c3 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c1 ORDER BY ((x'') BETWEEN (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0))) AND (0x3fdd4282 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE ((CASE WHEN rt0.c3 THEN rt0.c1 END IN ())) ORDER BY ((x'') BETWEEN (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0))) AND (0x3fdd4282 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c3 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c1 ORDER BY ((x'') BETWEEN (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0))) AND (0x3fdd4282 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE ((CASE WHEN rt0.c3 THEN rt0.c1 END IN ())) ORDER BY ((x'') BETWEEN (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0))) AND (0x3fdd4282 COLLATE RTRIM)) DESC;
SELECT ALL * FROM t0 WHERE (((+ (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((+ (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((+ (t0.c0)) IN ()));
SELECT ALL * FROM vt0, rt0 WHERE ((- (rt0.c4 COLLATE NOCASE))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((- (rt0.c4 COLLATE NOCASE))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((- (rt0.c4 COLLATE NOCASE))) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((0.9430011710607583 IN ()));
SELECT SUM(count) FROM (SELECT (((0.9430011710607583 IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((0.9430011710607583 IN ()));
SELECT SUM(count) FROM (SELECT (((0.9430011710607583 IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((0.9430011710607583 IN ()));
SELECT * FROM t0, rt0, vt0 WHERE (((((CHAR(vt0.c0))OR(ABS(DISTINCT rt0.c1))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CHAR(vt0.c0))OR(ABS(DISTINCT rt0.c1))))OR(rt0.c0))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((((CHAR(vt0.c0))OR(ABS(DISTINCT rt0.c1))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CHAR(vt0.c0))OR(ABS(DISTINCT rt0.c1))))OR(rt0.c0))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((((CHAR(vt0.c0))OR(ABS(DISTINCT rt0.c1))))OR(rt0.c0)));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (((t0.c0)) BETWEEN (((((rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((rt0.c4, rt0.c0, rt0.c4)) AND ((vt0.c0, vt0.c0, t0.c0))))) AND ((((t0.c0)||(rt0.c4))))) CROSS JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE BINARY WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((t0.c0)) BETWEEN (((((rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((rt0.c4, rt0.c0, rt0.c4)) AND ((vt0.c0, vt0.c0, t0.c0))))) AND ((((t0.c0)||(rt0.c4))))) CROSS JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (((t0.c0)) BETWEEN (((((rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((rt0.c4, rt0.c0, rt0.c4)) AND ((vt0.c0, vt0.c0, t0.c0))))) AND ((((t0.c0)||(rt0.c4))))) CROSS JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE BINARY WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((t0.c0)) BETWEEN (((((rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((rt0.c4, rt0.c0, rt0.c4)) AND ((vt0.c0, vt0.c0, t0.c0))))) AND ((((t0.c0)||(rt0.c4))))) CROSS JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (((t0.c0)) BETWEEN (((((rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((rt0.c4, rt0.c0, rt0.c4)) AND ((vt0.c0, vt0.c0, t0.c0))))) AND ((((t0.c0)||(rt0.c4))))) CROSS JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE BINARY WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(0.9291383424789346)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(0.9291383424789346)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(0.9291383424789346)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(0.9291383424789346)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(0.9291383424789346)) IS FALSE));
SELECT COUNT(*) FROM t0, vt0 WHERE (TIME(NULL, CAST(vt0.c0 AS BLOB), ((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TIME(NULL, CAST(vt0.c0 AS BLOB), ((vt0.c0) NOTNULL))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (TIME(NULL, CAST(vt0.c0 AS BLOB), ((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TIME(NULL, CAST(vt0.c0 AS BLOB), ((vt0.c0) NOTNULL))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (TIME(NULL, CAST(vt0.c0 AS BLOB), ((vt0.c0) NOTNULL)));
SELECT ALL * FROM rt0, vt0 INNER JOIN t0 ON CASE WHEN (~ (rt0.c3)) THEN (NOT (rt0.c4)) END WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)))AND((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)))AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON CASE WHEN (~ (rt0.c3)) THEN (NOT (rt0.c4)) END);
SELECT ALL * FROM rt0, vt0 INNER JOIN t0 ON CASE WHEN (~ (rt0.c3)) THEN (NOT (rt0.c4)) END WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)))AND((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)))AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON CASE WHEN (~ (rt0.c3)) THEN (NOT (rt0.c4)) END);
SELECT ALL * FROM rt0, vt0 INNER JOIN t0 ON CASE WHEN (~ (rt0.c3)) THEN (NOT (rt0.c4)) END WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)))AND((~ (rt0.c2)))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((((((((((+ (t0.c0)))AND(rt0.c0 COLLATE NOCASE)))AND(((rt0.c1) BETWEEN (t0.c0) AND (rt0.c4)))))OR((((rt0.c3))<((rt0.c3))))))AND((~ (rt0.c3)))))AND((+ (vt0.c0)))))OR(((vt0.c0)=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((+ (t0.c0)))AND(rt0.c0 COLLATE NOCASE)))AND(((rt0.c1) BETWEEN (t0.c0) AND (rt0.c4)))))OR((((rt0.c3))<((rt0.c3))))))AND((~ (rt0.c3)))))AND((+ (vt0.c0)))))OR(((vt0.c0)=(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((((((((((+ (t0.c0)))AND(rt0.c0 COLLATE NOCASE)))AND(((rt0.c1) BETWEEN (t0.c0) AND (rt0.c4)))))OR((((rt0.c3))<((rt0.c3))))))AND((~ (rt0.c3)))))AND((+ (vt0.c0)))))OR(((vt0.c0)=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((+ (t0.c0)))AND(rt0.c0 COLLATE NOCASE)))AND(((rt0.c1) BETWEEN (t0.c0) AND (rt0.c4)))))OR((((rt0.c3))<((rt0.c3))))))AND((~ (rt0.c3)))))AND((+ (vt0.c0)))))OR(((vt0.c0)=(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((((((((((+ (t0.c0)))AND(rt0.c0 COLLATE NOCASE)))AND(((rt0.c1) BETWEEN (t0.c0) AND (rt0.c4)))))OR((((rt0.c3))<((rt0.c3))))))AND((~ (rt0.c3)))))AND((+ (vt0.c0)))))OR(((vt0.c0)=(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 AS INTEGER)) ORDER BY '	v)qce'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY '	v)qce'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 AS INTEGER)) ORDER BY '	v)qce'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY '	v)qce'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 AS INTEGER)) ORDER BY '	v)qce'  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ('1594711057');
SELECT SUM(count) FROM (SELECT ALL (('1594711057') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('1594711057');
SELECT SUM(count) FROM (SELECT ALL (('1594711057') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('1594711057');
SELECT ALL * FROM t0 WHERE (UNLIKELY(((t0.c0)|(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t0.c0)|(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (UNLIKELY(((t0.c0)|(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t0.c0)|(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (UNLIKELY(((t0.c0)|(t0.c0))));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (rt0.c4 COLLATE NOCASE IN (ABS(rt0.c4))) LEFT OUTER JOIN vt0 ON ((rt0.c4) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END) AND (rt0.c1 COLLATE BINARY)) WHERE ((((vt0.c0 IN ()))IS(((rt0.c1)!=('1418485273')))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))IS(((rt0.c1)<>('1418485273'))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (rt0.c4 COLLATE NOCASE IN (ABS(rt0.c4))) LEFT OUTER JOIN vt0 ON ((rt0.c4) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END) AND (rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (rt0.c4 COLLATE NOCASE IN (ABS(rt0.c4))) LEFT OUTER JOIN vt0 ON ((rt0.c4) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END) AND (rt0.c1 COLLATE BINARY)) WHERE ((((vt0.c0 IN ()))IS(((rt0.c1)!=('1418485273')))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))IS(((rt0.c1)<>('1418485273'))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (rt0.c4 COLLATE NOCASE IN (ABS(rt0.c4))) LEFT OUTER JOIN vt0 ON ((rt0.c4) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END) AND (rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (rt0.c4 COLLATE NOCASE IN (ABS(rt0.c4))) LEFT OUTER JOIN vt0 ON ((rt0.c4) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END) AND (rt0.c1 COLLATE BINARY)) WHERE ((((vt0.c0 IN ()))IS(((rt0.c1)!=('1418485273')))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((((((((((((NULL IN ()))OR(((NULL)==(rt0.c4)))))AND((((vt0.c0, rt0.c4, rt0.c2)) BETWEEN ((rt0.c3, 0Xffffffffdc92cfba, rt0.c4)) AND ((vt0.c0, rt0.c3, rt0.c3))))))OR(((((rt0.c3)AND(0.6302404433458197)))OR(t0.c0)))))OR(((rt0.c0) NOT BETWEEN (-1211986233) AND (rt0.c4)))))OR(CASE WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c3 END)))AND(rt0.c3)));
SELECT SUM(count) FROM (SELECT (((((((((((((((NULL IN ()))OR(((NULL)=(rt0.c4)))))AND((((vt0.c0, rt0.c4, rt0.c2)) BETWEEN ((rt0.c3, 0Xffffffffdc92cfba, rt0.c4)) AND ((vt0.c0, rt0.c3, rt0.c3))))))OR(((((rt0.c3)AND(0.6302404433458197)))OR(t0.c0)))))OR(((rt0.c0) NOT BETWEEN (-1211986233) AND (rt0.c4)))))OR(CASE WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c3 END)))AND(rt0.c3))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((((((((((((NULL IN ()))OR(((NULL)==(rt0.c4)))))AND((((vt0.c0, rt0.c4, rt0.c2)) BETWEEN ((rt0.c3, 0Xffffffffdc92cfba, rt0.c4)) AND ((vt0.c0, rt0.c3, rt0.c3))))))OR(((((rt0.c3)AND(0.6302404433458197)))OR(t0.c0)))))OR(((rt0.c0) NOT BETWEEN (-1211986233) AND (rt0.c4)))))OR(CASE WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c3 END)))AND(rt0.c3)));
SELECT SUM(count) FROM (SELECT (((((((((((((((NULL IN ()))OR(((NULL)=(rt0.c4)))))AND((((vt0.c0, rt0.c4, rt0.c2)) BETWEEN ((rt0.c3, 0Xffffffffdc92cfba, rt0.c4)) AND ((vt0.c0, rt0.c3, rt0.c3))))))OR(((((rt0.c3)AND(0.6302404433458197)))OR(t0.c0)))))OR(((rt0.c0) NOT BETWEEN (-1211986233) AND (rt0.c4)))))OR(CASE WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c3 END)))AND(rt0.c3))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((((((((((((NULL IN ()))OR(((NULL)==(rt0.c4)))))AND((((vt0.c0, rt0.c4, rt0.c2)) BETWEEN ((rt0.c3, 0Xffffffffdc92cfba, rt0.c4)) AND ((vt0.c0, rt0.c3, rt0.c3))))))OR(((((rt0.c3)AND(0.6302404433458197)))OR(t0.c0)))))OR(((rt0.c0) NOT BETWEEN (-1211986233) AND (rt0.c4)))))OR(CASE WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c3 END)))AND(rt0.c3)));
SELECT ALL * FROM t0 WHERE ((((NULL)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))OR(NULL)))) AND ((((t0.c0)GLOB(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))OR(NULL)))) AND ((((t0.c0)GLOB(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((NULL)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))OR(NULL)))) AND ((((t0.c0)GLOB(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))OR(NULL)))) AND ((((t0.c0)GLOB(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((NULL)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))OR(NULL)))) AND ((((t0.c0)GLOB(t0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT * FROM t0, rt0 NOT INDEXED WHERE ((('') BETWEEN ((t0.c0 IN ())) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN ((t0.c0 IN ())) AND (NULL))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 NOT INDEXED WHERE ((('') BETWEEN ((t0.c0 IN ())) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN ((t0.c0 IN ())) AND (NULL))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 NOT INDEXED WHERE ((('') BETWEEN ((t0.c0 IN ())) AND (NULL)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE (CAST(((vt0.c0)IS NOT(t0.c0)) AS NUMERIC)) ORDER BY ((CAST(0.15529728877195126 AS REAL))<=(((((t0.c0)AND(t0.c0)))OR(vt0.c0)))) DESC, ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))&(t0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS NOT(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CAST(0.15529728877195126 AS REAL))<=(((((t0.c0)AND(t0.c0)))OR(vt0.c0)))) DESC, ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))&(t0.c0)) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE (CAST(((vt0.c0)IS NOT(t0.c0)) AS NUMERIC)) ORDER BY ((CAST(0.15529728877195126 AS REAL))<=(((((t0.c0)AND(t0.c0)))OR(vt0.c0)))) DESC, ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))&(t0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS NOT(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CAST(0.15529728877195126 AS REAL))<=(((((t0.c0)AND(t0.c0)))OR(vt0.c0)))) DESC, ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))&(t0.c0)) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE (CAST(((vt0.c0)IS NOT(t0.c0)) AS NUMERIC)) ORDER BY ((CAST(0.15529728877195126 AS REAL))<=(((((t0.c0)AND(t0.c0)))OR(vt0.c0)))) DESC, ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))&(t0.c0)) DESC;
SELECT * FROM vt0, rt0, t0 WHERE ((vt0.c0 IN (CAST(rt0.c2 AS REAL), ((((rt0.c1)OR(x'')))AND(rt0.c0))))) ORDER BY (((((rt0.c3, '', rt0.c3, rt0.c2, 'dcè½P')) NOT BETWEEN ((rt0.c2, rt0.c4, vt0.c0, rt0.c2, rt0.c1)) AND ((t0.c0, rt0.c4, rt0.c0, '', rt0.c4)))) IS FALSE) ASC  NULLS LAST, (+ (rt0.c4)) COLLATE RTRIM  NULLS FIRST, ((((rt0.c2)>>(rt0.c3))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN x'' END) AND (rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (CAST(rt0.c2 AS REAL), ((((rt0.c1)OR(x'')))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((((rt0.c3, '', rt0.c3, rt0.c2, 'dcè½P')) NOT BETWEEN ((rt0.c2, rt0.c4, vt0.c0, rt0.c2, rt0.c1)) AND ((t0.c0, rt0.c4, rt0.c0, '', rt0.c4)))) IS FALSE) ASC  NULLS LAST, (+ (rt0.c4)) COLLATE RTRIM  NULLS FIRST, ((((rt0.c2)>>(rt0.c3))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN x'' END) AND (rt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0, rt0, t0 WHERE ((vt0.c0 IN (CAST(rt0.c2 AS REAL), ((((rt0.c1)OR(x'')))AND(rt0.c0))))) ORDER BY (((((rt0.c3, '', rt0.c3, rt0.c2, 'dcè½P')) NOT BETWEEN ((rt0.c2, rt0.c4, vt0.c0, rt0.c2, rt0.c1)) AND ((t0.c0, rt0.c4, rt0.c0, '', rt0.c4)))) IS FALSE) ASC  NULLS LAST, (+ (rt0.c4)) COLLATE RTRIM  NULLS FIRST, ((((rt0.c2)>>(rt0.c3))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN x'' END) AND (rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (CAST(rt0.c2 AS REAL), ((((rt0.c1)OR(x'')))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((((rt0.c3, '', rt0.c3, rt0.c2, 'dcè½P')) NOT BETWEEN ((rt0.c2, rt0.c4, vt0.c0, rt0.c2, rt0.c1)) AND ((t0.c0, rt0.c4, rt0.c0, '', rt0.c4)))) IS FALSE) ASC  NULLS LAST, (+ (rt0.c4)) COLLATE RTRIM  NULLS FIRST, ((((rt0.c2)>>(rt0.c3))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN x'' END) AND (rt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0, rt0, t0 WHERE ((vt0.c0 IN (CAST(rt0.c2 AS REAL), ((((rt0.c1)OR(x'')))AND(rt0.c0))))) ORDER BY (((((rt0.c3, '', rt0.c3, rt0.c2, 'dcè½P')) NOT BETWEEN ((rt0.c2, rt0.c4, vt0.c0, rt0.c2, rt0.c1)) AND ((t0.c0, rt0.c4, rt0.c0, '', rt0.c4)))) IS FALSE) ASC  NULLS LAST, (+ (rt0.c4)) COLLATE RTRIM  NULLS FIRST, ((((rt0.c2)>>(rt0.c3))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN x'' END) AND (rt0.c0 COLLATE NOCASE));
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c3)-(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (NOT (CASE WHEN rt0.c3 THEN rt0.c2 END))  NULLS LAST, (((t0.c0)<<(NULL)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)-(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (NOT (CASE WHEN rt0.c3 THEN rt0.c2 END))  NULLS LAST, (((t0.c0)<<(NULL)) IN ()) DESC  NULLS LAST);
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c3)-(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (NOT (CASE WHEN rt0.c3 THEN rt0.c2 END))  NULLS LAST, (((t0.c0)<<(NULL)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)-(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (NOT (CASE WHEN rt0.c3 THEN rt0.c2 END))  NULLS LAST, (((t0.c0)<<(NULL)) IN ()) DESC  NULLS LAST);
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c3)-(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (NOT (CASE WHEN rt0.c3 THEN rt0.c2 END))  NULLS LAST, (((t0.c0)<<(NULL)) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)AND(vt0.c0)) COLLATE RTRIM) ORDER BY (((((vt0.c0))>((vt0.c0))))%(((vt0.c0)IS NOT(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>((vt0.c0))))%(((vt0.c0)IS NOT(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)AND(vt0.c0)) COLLATE RTRIM) ORDER BY (((((vt0.c0))>((vt0.c0))))%(((vt0.c0)IS NOT(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>((vt0.c0))))%(((vt0.c0)IS NOT(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)AND(vt0.c0)) COLLATE RTRIM) ORDER BY (((((vt0.c0))>((vt0.c0))))%(((vt0.c0)IS NOT(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 INDEXED BY i64 WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2) NOTNULL)))) ORDER BY ((((rt0.c2) ISNULL))==(((vt0.c0)|(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB)) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM t0, rt0, vt0 INDEXED BY i64 ORDER BY ((((rt0.c2) ISNULL))==(((vt0.c0)|(rt0.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 INDEXED BY i64 WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2) NOTNULL)))) ORDER BY ((((rt0.c2) ISNULL))==(((vt0.c0)|(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB)) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM t0, rt0, vt0 INDEXED BY i64 ORDER BY ((((rt0.c2) ISNULL))==(((vt0.c0)|(rt0.c2)))));
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((+ (rt0.c4))))<>((t0.c0 COLLATE NOCASE)))) ORDER BY '9ã Q*' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c4))))!=((t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0 ORDER BY '9ã Q*' ASC);
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((+ (rt0.c4))))<>((t0.c0 COLLATE NOCASE)))) ORDER BY '9ã Q*' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c4))))!=((t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0 ORDER BY '9ã Q*' ASC);
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((+ (rt0.c4))))<>((t0.c0 COLLATE NOCASE)))) ORDER BY '9ã Q*' ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 IN ()) IN (CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY (((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)) IN (((rt0.c0)==(rt0.c1)), ((vt0.c0)>=(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN (CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)) IN (((rt0.c0)==(rt0.c1)), ((vt0.c0)>=(rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 IN ()) IN (CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY (((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)) IN (((rt0.c0)==(rt0.c1)), ((vt0.c0)>=(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN (CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)) IN (((rt0.c0)==(rt0.c1)), ((vt0.c0)>=(rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 IN ()) IN (CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY (((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)) IN (((rt0.c0)==(rt0.c1)), ((vt0.c0)>=(rt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((~ (rt0.c2))))==((t0.c0 COLLATE RTRIM)))) ORDER BY IFNULL(rt0.c4 COLLATE RTRIM, ((rt0.c0)-(rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c2))))==((t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, t0 ORDER BY IFNULL(rt0.c4 COLLATE RTRIM, ((rt0.c0)-(rt0.c2))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((~ (rt0.c2))))==((t0.c0 COLLATE RTRIM)))) ORDER BY IFNULL(rt0.c4 COLLATE RTRIM, ((rt0.c0)-(rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c2))))==((t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, t0 ORDER BY IFNULL(rt0.c4 COLLATE RTRIM, ((rt0.c0)-(rt0.c2))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((~ (rt0.c2))))==((t0.c0 COLLATE RTRIM)))) ORDER BY IFNULL(rt0.c4 COLLATE RTRIM, ((rt0.c0)-(rt0.c2))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((((rt0.c0)AND(rt0.c4)))OR(t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c4)))OR(t0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((((rt0.c0)AND(rt0.c4)))OR(t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c4)))OR(t0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((((rt0.c0)AND(rt0.c4)))OR(t0.c0))) ISNULL));
SELECT * FROM t0, vt0, rt0 WHERE (((GLOB(t0.c0, t0.c0)) BETWEEN (rt0.c2) AND (CASE rt0.c3  WHEN t0.c0 THEN rt0.c2 END))) ORDER BY CAST((rt0.c2 IN ()) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(t0.c0, t0.c0)) BETWEEN (rt0.c2) AND (CASE rt0.c3  WHEN t0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST((rt0.c2 IN ()) AS INTEGER)  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE (((GLOB(t0.c0, t0.c0)) BETWEEN (rt0.c2) AND (CASE rt0.c3  WHEN t0.c0 THEN rt0.c2 END))) ORDER BY CAST((rt0.c2 IN ()) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(t0.c0, t0.c0)) BETWEEN (rt0.c2) AND (CASE rt0.c3  WHEN t0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST((rt0.c2 IN ()) AS INTEGER)  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE (((GLOB(t0.c0, t0.c0)) BETWEEN (rt0.c2) AND (CASE rt0.c3  WHEN t0.c0 THEN rt0.c2 END))) ORDER BY CAST((rt0.c2 IN ()) AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (UPPER(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) ORDER BY -1.7976931348623157E308 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) IS TRUE)  as count FROM t0, rt0 ORDER BY -1.7976931348623157E308 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (UPPER(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) ORDER BY -1.7976931348623157E308 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) IS TRUE)  as count FROM t0, rt0 ORDER BY -1.7976931348623157E308 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (UPPER(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) ORDER BY -1.7976931348623157E308 DESC  NULLS LAST;
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN vt0 ON rt0.c3 WHERE (CASE WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 END THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END END) ORDER BY ((x'' COLLATE BINARY) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 END THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END END) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON rt0.c3 ORDER BY ((x'' COLLATE BINARY) NOT NULL) DESC);
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN vt0 ON rt0.c3 WHERE (CASE WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 END THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END END) ORDER BY ((x'' COLLATE BINARY) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 END THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END END) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON rt0.c3 ORDER BY ((x'' COLLATE BINARY) NOT NULL) DESC);
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN vt0 ON rt0.c3 WHERE (CASE WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 END THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END END) ORDER BY ((x'' COLLATE BINARY) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON '' INNER JOIN t0 ON (rt0.c1 COLLATE NOCASE IN (0.9653077889676006)) WHERE (json_valid(rt0.c4) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((json_valid(rt0.c4) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON '' INNER JOIN t0 ON (rt0.c1 COLLATE NOCASE IN (0.9653077889676006)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON '' INNER JOIN t0 ON (rt0.c1 COLLATE NOCASE IN (0.9653077889676006)) WHERE (json_valid(rt0.c4) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((json_valid(rt0.c4) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON '' INNER JOIN t0 ON (rt0.c1 COLLATE NOCASE IN (0.9653077889676006)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON '' INNER JOIN t0 ON (rt0.c1 COLLATE NOCASE IN (0.9653077889676006)) WHERE (json_valid(rt0.c4) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((('-1266350810' COLLATE RTRIM)AND(((1877720383) NOTNULL))))OR(CAST(rt0.c1 AS INTEGER))) WHERE ((((rt0.c0)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) AND ((rt0.c2)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((('-1266350810' COLLATE RTRIM)AND(((1877720383) NOTNULL))))OR(CAST(rt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((('-1266350810' COLLATE RTRIM)AND(((1877720383) NOTNULL))))OR(CAST(rt0.c1 AS INTEGER))) WHERE ((((rt0.c0)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) AND ((rt0.c2)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((('-1266350810' COLLATE RTRIM)AND(((1877720383) NOTNULL))))OR(CAST(rt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((('-1266350810' COLLATE RTRIM)AND(((1877720383) NOTNULL))))OR(CAST(rt0.c1 AS INTEGER))) WHERE ((((rt0.c0)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) AND ((rt0.c2))));
SELECT * FROM rt0, vt0, t0 WHERE ((NOT (((8.5591244E8) BETWEEN (rt0.c4) AND (vt0.c0))))) ORDER BY ((((rt0.c4, rt0.c4, rt0.c3)) BETWEEN ((rt0.c4, '-1350213257', rt0.c4)) AND ((rt0.c2, t0.c0, rt0.c0))) IN ()) DESC  NULLS LAST, (((vt0.c0 IN ())) BETWEEN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE '-587115808' END) AND (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((8.5591244E8) BETWEEN (rt0.c4) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((rt0.c4, rt0.c4, rt0.c3)) BETWEEN ((rt0.c4, '-1350213257', rt0.c4)) AND ((rt0.c2, t0.c0, rt0.c0))) IN ()) DESC  NULLS LAST, (((vt0.c0 IN ())) BETWEEN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE '-587115808' END) AND (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0, t0 WHERE ((NOT (((8.5591244E8) BETWEEN (rt0.c4) AND (vt0.c0))))) ORDER BY ((((rt0.c4, rt0.c4, rt0.c3)) BETWEEN ((rt0.c4, '-1350213257', rt0.c4)) AND ((rt0.c2, t0.c0, rt0.c0))) IN ()) DESC  NULLS LAST, (((vt0.c0 IN ())) BETWEEN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE '-587115808' END) AND (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((8.5591244E8) BETWEEN (rt0.c4) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((rt0.c4, rt0.c4, rt0.c3)) BETWEEN ((rt0.c4, '-1350213257', rt0.c4)) AND ((rt0.c2, t0.c0, rt0.c0))) IN ()) DESC  NULLS LAST, (((vt0.c0 IN ())) BETWEEN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE '-587115808' END) AND (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0, t0 WHERE ((NOT (((8.5591244E8) BETWEEN (rt0.c4) AND (vt0.c0))))) ORDER BY ((((rt0.c4, rt0.c4, rt0.c3)) BETWEEN ((rt0.c4, '-1350213257', rt0.c4)) AND ((rt0.c2, t0.c0, rt0.c0))) IN ()) DESC  NULLS LAST, (((vt0.c0 IN ())) BETWEEN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE '-587115808' END) AND (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c3)>>(NULL)))IS((((rt0.c3))<>((x''))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3)>>(NULL)))IS((((rt0.c3))<>((x''))))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c3)>>(NULL)))IS((((rt0.c3))<>((x''))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3)>>(NULL)))IS((((rt0.c3))<>((x''))))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c3)>>(NULL)))IS((((rt0.c3))<>((x''))))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c4 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c4 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c4 IN ())) IS FALSE));
SELECT * FROM t0 WHERE ('-482765397');
SELECT SUM(count) FROM (SELECT (('-482765397') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('-482765397');
SELECT SUM(count) FROM (SELECT (('-482765397') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('-482765397');
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN ((rt0.c3) ISNULL) THEN (((rt0.c1)) BETWEEN ((rt0.c4)) AND (('K'))) WHEN t0.c0 THEN (('809203201') NOTNULL) WHEN CASE '.{!(62\r'  WHEN vt0.c0 THEN '' WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END THEN NULLIF(vt0.c0, t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3) ISNULL) THEN (((rt0.c1)) BETWEEN ((rt0.c4)) AND (('K'))) WHEN t0.c0 THEN (('809203201') NOTNULL) WHEN CASE '.{!(62\r'  WHEN vt0.c0 THEN '' WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END THEN NULLIF(vt0.c0, t0.c0) END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN ((rt0.c3) ISNULL) THEN (((rt0.c1)) BETWEEN ((rt0.c4)) AND (('K'))) WHEN t0.c0 THEN (('809203201') NOTNULL) WHEN CASE '.{!(62\r'  WHEN vt0.c0 THEN '' WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END THEN NULLIF(vt0.c0, t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3) ISNULL) THEN (((rt0.c1)) BETWEEN ((rt0.c4)) AND (('K'))) WHEN t0.c0 THEN (('809203201') NOTNULL) WHEN CASE '.{!(62\r'  WHEN vt0.c0 THEN '' WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END THEN NULLIF(vt0.c0, t0.c0) END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN ((rt0.c3) ISNULL) THEN (((rt0.c1)) BETWEEN ((rt0.c4)) AND (('K'))) WHEN t0.c0 THEN (('809203201') NOTNULL) WHEN CASE '.{!(62\r'  WHEN vt0.c0 THEN '' WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END THEN NULLIF(vt0.c0, t0.c0) END);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CASE t0.c0  WHEN vt0.c0 COLLATE BINARY THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) ELSE (NOT (t0.c0)) END WHERE (vt0.c0) ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS FIRST, ABS(DISTINCT CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN NULL WHEN 0xffffffffc4691930 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CASE t0.c0  WHEN vt0.c0 COLLATE BINARY THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) ELSE (NOT (t0.c0)) END ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS FIRST, ABS(DISTINCT CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN NULL WHEN 0Xffffffffc4691930 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CASE t0.c0  WHEN vt0.c0 COLLATE BINARY THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) ELSE (NOT (t0.c0)) END WHERE (vt0.c0) ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS FIRST, ABS(DISTINCT CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN NULL WHEN 0xffffffffc4691930 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CASE t0.c0  WHEN vt0.c0 COLLATE BINARY THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) ELSE (NOT (t0.c0)) END ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS FIRST, ABS(DISTINCT CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN NULL WHEN 0Xffffffffc4691930 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CASE t0.c0  WHEN vt0.c0 COLLATE BINARY THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) ELSE (NOT (t0.c0)) END WHERE (vt0.c0) ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS FIRST, ABS(DISTINCT CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN NULL WHEN 0xffffffffc4691930 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0 INNER JOIN rt0 ON DATE((- (rt0.c4)), ((rt0.c4)*(rt0.c0)), (((vt0.c0))>=((rt0.c1)))) WHERE (((((rt0.c0)<(t0.c0))) NOT BETWEEN (TOTAL_CHANGES()) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN 0.5131655416798905 THEN vt0.c0 END))) ORDER BY ((rt0.c4)%((rt0.c3 IN (rt0.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<(t0.c0))) NOT BETWEEN (TOTAL_CHANGES()) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN 0.5131655416798905 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON DATE((- (rt0.c4)), ((rt0.c4)*(rt0.c0)), (((vt0.c0))>=((rt0.c1)))) ORDER BY ((rt0.c4)%((rt0.c3 IN (rt0.c4)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 INNER JOIN rt0 ON DATE((- (rt0.c4)), ((rt0.c4)*(rt0.c0)), (((vt0.c0))>=((rt0.c1)))) WHERE (((((rt0.c0)<(t0.c0))) NOT BETWEEN (TOTAL_CHANGES()) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN 0.5131655416798905 THEN vt0.c0 END))) ORDER BY ((rt0.c4)%((rt0.c3 IN (rt0.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<(t0.c0))) NOT BETWEEN (TOTAL_CHANGES()) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN 0.5131655416798905 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON DATE((- (rt0.c4)), ((rt0.c4)*(rt0.c0)), (((vt0.c0))>=((rt0.c1)))) ORDER BY ((rt0.c4)%((rt0.c3 IN (rt0.c4)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 INNER JOIN rt0 ON DATE((- (rt0.c4)), ((rt0.c4)*(rt0.c0)), (((vt0.c0))>=((rt0.c1)))) WHERE (((((rt0.c0)<(t0.c0))) NOT BETWEEN (TOTAL_CHANGES()) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN 0.5131655416798905 THEN vt0.c0 END))) ORDER BY ((rt0.c4)%((rt0.c3 IN (rt0.c4)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((NULLIF(vt0.c0, vt0.c0)) NOT BETWEEN (HEX(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((x'' COLLATE NOCASE)OR((+ (vt0.c0)))))AND(''));
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt0.c0, vt0.c0)) NOT BETWEEN (HEX(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'' COLLATE NOCASE)OR((+ (vt0.c0)))))AND('')));
SELECT COUNT(*) FROM vt0 WHERE (((NULLIF(vt0.c0, vt0.c0)) NOT BETWEEN (HEX(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((x'' COLLATE NOCASE)OR((+ (vt0.c0)))))AND(''));
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt0.c0, vt0.c0)) NOT BETWEEN (HEX(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'' COLLATE NOCASE)OR((+ (vt0.c0)))))AND('')));
SELECT COUNT(*) FROM vt0 WHERE (((NULLIF(vt0.c0, vt0.c0)) NOT BETWEEN (HEX(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((x'' COLLATE NOCASE)OR((+ (vt0.c0)))))AND(''));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE))%((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))%((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE))%((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))%((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE))%((NOT (vt0.c0)))));
SELECT * FROM rt0, t0, vt0 WHERE (((SQLITE_SOURCE_ID())<<('714146833'))) ORDER BY ((json(rt0.c2))&(CAST(rt0.c3 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID())<<('714146833'))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((json(rt0.c2))&(CAST(rt0.c3 AS TEXT))) DESC  NULLS LAST);
SELECT * FROM rt0, t0, vt0 WHERE (((SQLITE_SOURCE_ID())<<('714146833'))) ORDER BY ((json(rt0.c2))&(CAST(rt0.c3 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID())<<('714146833'))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((json(rt0.c2))&(CAST(rt0.c3 AS TEXT))) DESC  NULLS LAST);
SELECT * FROM rt0, t0, vt0 WHERE (((SQLITE_SOURCE_ID())<<('714146833'))) ORDER BY ((json(rt0.c2))&(CAST(rt0.c3 AS TEXT))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (-1.088600204E9);
SELECT SUM(count) FROM (SELECT ((-1.088600204E9) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (-1.088600204E9);
SELECT SUM(count) FROM (SELECT ((-1.088600204E9) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (-1.088600204E9);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN LIKELY(rt0.c3) THEN ((rt0.c0)IS NOT(rt0.c4)) END) ORDER BY rt0.c1 DESC, (~ (((((rt0.c2)OR(rt0.c4)))OR(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELY(rt0.c3) THEN ((rt0.c0)IS NOT(rt0.c4)) END) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c1 DESC, (~ (((((rt0.c2)OR(rt0.c4)))OR(t0.c0)))) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN LIKELY(rt0.c3) THEN ((rt0.c0)IS NOT(rt0.c4)) END) ORDER BY rt0.c1 DESC, (~ (((((rt0.c2)OR(rt0.c4)))OR(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELY(rt0.c3) THEN ((rt0.c0)IS NOT(rt0.c4)) END) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c1 DESC, (~ (((((rt0.c2)OR(rt0.c4)))OR(t0.c0)))) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN LIKELY(rt0.c3) THEN ((rt0.c0)IS NOT(rt0.c4)) END) ORDER BY rt0.c1 DESC, (~ (((((rt0.c2)OR(rt0.c4)))OR(t0.c0)))) ASC;
SELECT * FROM rt0, vt0 CROSS JOIN t0 ON CASE UPPER(DISTINCT rt0.c2)  WHEN ((rt0.c1)<=(NULL)) THEN CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN t0.c0 THEN rt0.c3 END END WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON CASE UPPER(DISTINCT rt0.c2)  WHEN ((rt0.c1)<=(NULL)) THEN CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN t0.c0 THEN rt0.c3 END END);
SELECT * FROM rt0, vt0 CROSS JOIN t0 ON CASE UPPER(DISTINCT rt0.c2)  WHEN ((rt0.c1)<=(NULL)) THEN CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN t0.c0 THEN rt0.c3 END END WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON CASE UPPER(DISTINCT rt0.c2)  WHEN ((rt0.c1)<=(NULL)) THEN CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN t0.c0 THEN rt0.c3 END END);
SELECT * FROM rt0, vt0 CROSS JOIN t0 ON CASE UPPER(DISTINCT rt0.c2)  WHEN ((rt0.c1)<=(NULL)) THEN CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN t0.c0 THEN rt0.c3 END END WHERE ((x'' IN ()));
SELECT * FROM t0 WHERE ((((CAST(t0.c0 AS BLOB), (~ (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))>=((t0.c0 COLLATE BINARY, (t0.c0 IN ()), '0.36995268204615883')))) ORDER BY (((~ (t0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c0 AS BLOB), (~ (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))>=((t0.c0 COLLATE BINARY, (t0.c0 IN ()), '0.36995268204615883')))) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))  NULLS FIRST);
SELECT * FROM t0 WHERE ((((CAST(t0.c0 AS BLOB), (~ (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))>=((t0.c0 COLLATE BINARY, (t0.c0 IN ()), '0.36995268204615883')))) ORDER BY (((~ (t0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c0 AS BLOB), (~ (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))>=((t0.c0 COLLATE BINARY, (t0.c0 IN ()), '0.36995268204615883')))) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))  NULLS FIRST);
SELECT * FROM t0 WHERE ((((CAST(t0.c0 AS BLOB), (~ (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))>=((t0.c0 COLLATE BINARY, (t0.c0 IN ()), '0.36995268204615883')))) ORDER BY (((~ (t0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE UNLIKELY(rt0.c3)  WHEN ((rt0.c4) IS FALSE) THEN (rt0.c1 IN (rt0.c0)) WHEN ((rt0.c1)|(rt0.c0)) THEN ((rt0.c1)&(rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN ((((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(x'')))OR(rt0.c4)))OR(rt0.c4)) END) ORDER BY LTRIM(((rt0.c3) IS TRUE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(rt0.c3)  WHEN ((rt0.c4) IS FALSE) THEN (rt0.c1 IN (rt0.c0)) WHEN ((rt0.c1)|(rt0.c0)) THEN ((rt0.c1)&(rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN ((((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(x'')))OR(rt0.c4)))OR(rt0.c4)) END) IS TRUE)  as count FROM rt0 ORDER BY LTRIM(((rt0.c3) IS TRUE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE UNLIKELY(rt0.c3)  WHEN ((rt0.c4) IS FALSE) THEN (rt0.c1 IN (rt0.c0)) WHEN ((rt0.c1)|(rt0.c0)) THEN ((rt0.c1)&(rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN ((((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(x'')))OR(rt0.c4)))OR(rt0.c4)) END) ORDER BY LTRIM(((rt0.c3) IS TRUE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(rt0.c3)  WHEN ((rt0.c4) IS FALSE) THEN (rt0.c1 IN (rt0.c0)) WHEN ((rt0.c1)|(rt0.c0)) THEN ((rt0.c1)&(rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN ((((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(x'')))OR(rt0.c4)))OR(rt0.c4)) END) IS TRUE)  as count FROM rt0 ORDER BY LTRIM(((rt0.c3) IS TRUE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE UNLIKELY(rt0.c3)  WHEN ((rt0.c4) IS FALSE) THEN (rt0.c1 IN (rt0.c0)) WHEN ((rt0.c1)|(rt0.c0)) THEN ((rt0.c1)&(rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN ((((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(x'')))OR(rt0.c4)))OR(rt0.c4)) END) ORDER BY LTRIM(((rt0.c3) IS TRUE)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c2  WHEN rt0.c4 THEN x'' END COLLATE BINARY) ORDER BY CASE WHEN ((rt0.c3)GLOB(vt0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c3, 0.2936180268921553) WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN rt0.c1 WHEN (+ (rt0.c1)) THEN ((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c1)) WHEN ((rt0.c4)IS NOT(rt0.c3)) THEN rt0.c0 WHEN (((rt0.c3, rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c2))) THEN rt0.c1 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN rt0.c4 THEN x'' END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((rt0.c3)GLOB(vt0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c3, 0.2936180268921553) WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN rt0.c1 WHEN (+ (rt0.c1)) THEN ((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c1)) WHEN ((rt0.c4)IS NOT(rt0.c3)) THEN rt0.c0 WHEN (((rt0.c3, rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c2))) THEN rt0.c1 END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c2  WHEN rt0.c4 THEN x'' END COLLATE BINARY) ORDER BY CASE WHEN ((rt0.c3)GLOB(vt0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c3, 0.2936180268921553) WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN rt0.c1 WHEN (+ (rt0.c1)) THEN ((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c1)) WHEN ((rt0.c4)IS NOT(rt0.c3)) THEN rt0.c0 WHEN (((rt0.c3, rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c2))) THEN rt0.c1 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN rt0.c4 THEN x'' END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((rt0.c3)GLOB(vt0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c3, 0.2936180268921553) WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN rt0.c1 WHEN (+ (rt0.c1)) THEN ((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c1)) WHEN ((rt0.c4)IS NOT(rt0.c3)) THEN rt0.c0 WHEN (((rt0.c3, rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c2))) THEN rt0.c1 END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c2  WHEN rt0.c4 THEN x'' END COLLATE BINARY) ORDER BY CASE WHEN ((rt0.c3)GLOB(vt0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c3, 0.2936180268921553) WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN rt0.c1 WHEN (+ (rt0.c1)) THEN ((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c1)) WHEN ((rt0.c4)IS NOT(rt0.c3)) THEN rt0.c0 WHEN (((rt0.c3, rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c2))) THEN rt0.c1 END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 INDEXED BY i64 WHERE (((((((((((0Xffffffffdc0373b9)AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c0))) IS TRUE)) ORDER BY ((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR((~ (vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))OR(t0.c0)))OR((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((0xffffffffdc0373b9)AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 INDEXED BY i64 ORDER BY ((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR((~ (vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))OR(t0.c0)))OR((~ (vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 INDEXED BY i64 WHERE (((((((((((0Xffffffffdc0373b9)AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c0))) IS TRUE)) ORDER BY ((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR((~ (vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))OR(t0.c0)))OR((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((0xffffffffdc0373b9)AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 INDEXED BY i64 ORDER BY ((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR((~ (vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))OR(t0.c0)))OR((~ (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN vt0 ON t0.c0 WHERE (((((vt0.c0 COLLATE BINARY)OR(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE BINARY)OR(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)==(t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c0);
SELECT * FROM t0 CROSS JOIN vt0 ON t0.c0 WHERE (((((vt0.c0 COLLATE BINARY)OR(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE BINARY)OR(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)==(t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c0);
SELECT * FROM t0 CROSS JOIN vt0 ON t0.c0 WHERE (((((vt0.c0 COLLATE BINARY)OR(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)=(t0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE ((- (((rt0.c4) ISNULL)))) ORDER BY LIKELY(DISTINCT 0.08540971927037289)  NULLS LAST, ((vt0.c0)!=(rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c4) ISNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY LIKELY(DISTINCT 0.08540971927037289)  NULLS LAST, ((vt0.c0)!=(rt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt0, vt0 WHERE ((- (((rt0.c4) ISNULL)))) ORDER BY LIKELY(DISTINCT 0.08540971927037289)  NULLS LAST, ((vt0.c0)!=(rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c4) ISNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY LIKELY(DISTINCT 0.08540971927037289)  NULLS LAST, ((vt0.c0)!=(rt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt0, vt0 WHERE ((- (((rt0.c4) ISNULL)))) ORDER BY LIKELY(DISTINCT 0.08540971927037289)  NULLS LAST, ((vt0.c0)!=(rt0.c1)) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c3 COLLATE BINARY)<=(((vt0.c0) IS TRUE)))) ORDER BY ((NULLIF(DISTINCT rt0.c3, rt0.c3))>=(((('273504559'))>((0.3714898734977311))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY)<=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((NULLIF(DISTINCT rt0.c3, rt0.c3))>=(((('273504559'))>((0.3714898734977311))))) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c3 COLLATE BINARY)<=(((vt0.c0) IS TRUE)))) ORDER BY ((NULLIF(DISTINCT rt0.c3, rt0.c3))>=(((('273504559'))>((0.3714898734977311))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY)<=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((NULLIF(DISTINCT rt0.c3, rt0.c3))>=(((('273504559'))>((0.3714898734977311))))) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c3 COLLATE BINARY)<=(((vt0.c0) IS TRUE)))) ORDER BY ((NULLIF(DISTINCT rt0.c3, rt0.c3))>=(((('273504559'))>((0.3714898734977311))))) DESC;
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (+ (rt0.c0 COLLATE NOCASE)) INNER JOIN rt0 ON LENGTH((+ (rt0.c0))) WHERE (0.8082770396019063);
SELECT SUM(count) FROM (SELECT ((0.8082770396019063) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (+ (rt0.c0 COLLATE NOCASE)) INNER JOIN rt0 ON LENGTH((+ (rt0.c0))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (+ (rt0.c0 COLLATE NOCASE)) INNER JOIN rt0 ON LENGTH((+ (rt0.c0))) WHERE (0.8082770396019063);
SELECT SUM(count) FROM (SELECT ((0.8082770396019063) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (+ (rt0.c0 COLLATE NOCASE)) INNER JOIN rt0 ON LENGTH((+ (rt0.c0))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (+ (rt0.c0 COLLATE NOCASE)) INNER JOIN rt0 ON LENGTH((+ (rt0.c0))) WHERE (0.8082770396019063);
SELECT ALL * FROM rt0 WHERE (CASE (rt0.c2 IN ())  WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c0 WHEN (rt0.c0 IN ()) THEN CASE WHEN 'o?Jeá«' THEN rt0.c1 ELSE rt0.c0 END WHEN x'' THEN NULLIF(rt0.c0, rt0.c4) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c2 IN ())  WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c0 WHEN (rt0.c0 IN ()) THEN CASE WHEN 'o?Jeá«' THEN rt0.c1 ELSE rt0.c0 END WHEN x'' THEN NULLIF(rt0.c0, rt0.c4) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE (rt0.c2 IN ())  WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c0 WHEN (rt0.c0 IN ()) THEN CASE WHEN 'o?Jeá«' THEN rt0.c1 ELSE rt0.c0 END WHEN x'' THEN NULLIF(rt0.c0, rt0.c4) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c2 IN ())  WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c0 WHEN (rt0.c0 IN ()) THEN CASE WHEN 'o?Jeá«' THEN rt0.c1 ELSE rt0.c0 END WHEN x'' THEN NULLIF(rt0.c0, rt0.c4) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE (rt0.c2 IN ())  WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c0 WHEN (rt0.c0 IN ()) THEN CASE WHEN 'o?Jeá«' THEN rt0.c1 ELSE rt0.c0 END WHEN x'' THEN NULLIF(rt0.c0, rt0.c4) END);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)) BETWEEN ((t0.c0)) AND ((x''))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((x''))) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)) BETWEEN ((t0.c0)) AND ((x''))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((x''))) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)) BETWEEN ((t0.c0)) AND ((x''))) IN ()));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c0)OR(t0.c0)))<(rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(t0.c0)))<(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c0)OR(t0.c0)))<(rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(t0.c0)))<(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c0)OR(t0.c0)))<(rt0.c3 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE TRIM(rt0.c4, rt0.c0)  WHEN ((((((((vt0.c0)AND(0.2172619441284197)))AND(vt0.c0)))OR(rt0.c3)))AND(vt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c0 END END) ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE TRIM(rt0.c4, rt0.c0)  WHEN ((((((((vt0.c0)AND(0.2172619441284197)))AND(vt0.c0)))OR(rt0.c3)))AND(vt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE TRIM(rt0.c4, rt0.c0)  WHEN ((((((((vt0.c0)AND(0.2172619441284197)))AND(vt0.c0)))OR(rt0.c3)))AND(vt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c0 END END) ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE TRIM(rt0.c4, rt0.c0)  WHEN ((((((((vt0.c0)AND(0.2172619441284197)))AND(vt0.c0)))OR(rt0.c3)))AND(vt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE TRIM(rt0.c4, rt0.c0)  WHEN ((((((((vt0.c0)AND(0.2172619441284197)))AND(vt0.c0)))OR(rt0.c3)))AND(vt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c0 END END) ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS TEXT)  NULLS LAST;
SELECT * FROM rt0, t0, vt0 WHERE (((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (CASE WHEN vt0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c3 END) AND (rt0.c1 COLLATE BINARY))) ORDER BY ((((rt0.c3 COLLATE BINARY)AND(rt0.c2)))AND((+ (rt0.c0)))), (((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))*(CASE WHEN rt0.c0 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (CASE WHEN vt0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c3 END) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((rt0.c3 COLLATE BINARY)AND(rt0.c2)))AND((+ (rt0.c0)))), (((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))*(CASE WHEN rt0.c0 THEN vt0.c0 END)) ASC);
SELECT * FROM rt0, t0, vt0 WHERE (((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (CASE WHEN vt0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c3 END) AND (rt0.c1 COLLATE BINARY))) ORDER BY ((((rt0.c3 COLLATE BINARY)AND(rt0.c2)))AND((+ (rt0.c0)))), (((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))*(CASE WHEN rt0.c0 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (CASE WHEN vt0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c3 END) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((rt0.c3 COLLATE BINARY)AND(rt0.c2)))AND((+ (rt0.c0)))), (((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))*(CASE WHEN rt0.c0 THEN vt0.c0 END)) ASC);
SELECT * FROM rt0, t0, vt0 WHERE (((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (CASE WHEN vt0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c3 END) AND (rt0.c1 COLLATE BINARY))) ORDER BY ((((rt0.c3 COLLATE BINARY)AND(rt0.c2)))AND((+ (rt0.c0)))), (((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))*(CASE WHEN rt0.c0 THEN vt0.c0 END)) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT * FROM vt0 WHERE ((~ (CASE NULL  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE NULL  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (CASE NULL  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE NULL  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (CASE NULL  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)));
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((NOT (rt0.c0)))IS((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0)))IS((t0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((NOT (rt0.c0)))IS((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0)))IS((t0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((NOT (rt0.c0)))IS((t0.c0 IN ()))));
SELECT ALL * FROM rt0, t0, vt0 WHERE ((+ ('-1514164573')));
SELECT SUM(count) FROM (SELECT (((+ ('-1514164573'))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((+ ('-1514164573')));
SELECT SUM(count) FROM (SELECT (((+ ('-1514164573'))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((+ ('-1514164573')));
SELECT ALL COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON (((rt0.c3)<=(rt0.c0)) IN ()) WHERE (((((t0.c0) ISNULL))<>(((vt0.c0)LIKE(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL))!=(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON (((rt0.c3)<=(rt0.c0)) IN ()) ORDER BY (((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((rt0.c1))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON (((rt0.c3)<=(rt0.c0)) IN ()) WHERE (((((t0.c0) ISNULL))<>(((vt0.c0)LIKE(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL))!=(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON (((rt0.c3)<=(rt0.c0)) IN ()) ORDER BY (((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((rt0.c1))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON (((rt0.c3)<=(rt0.c0)) IN ()) WHERE (((((t0.c0) ISNULL))<>(((vt0.c0)LIKE(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((rt0.c1))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt0, vt0 WHERE (((NULL)>((((vt0.c0, vt0.c0, t0.c0))!=((rt0.c4, x'', 0.43228904703783433)))))) ORDER BY (((CAST(rt0.c4 AS INTEGER), ((rt0.c0)LIKE(rt0.c2)), (rt0.c0 IN ()), (vt0.c0 IN ()), ((((rt0.c3)AND(rt0.c2)))AND(vt0.c0))))<=(((((-330340305, t0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0))), ((t0.c0) IS TRUE), (~ (rt0.c3)), (+ (rt0.c0)), (((('3o,i4')OR(NULL)))AND(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>((((vt0.c0, vt0.c0, t0.c0))<>((rt0.c4, x'', 0.43228904703783433)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((CAST(rt0.c4 AS INTEGER), ((rt0.c0)LIKE(rt0.c2)), (rt0.c0 IN ()), (vt0.c0 IN ()), ((((rt0.c3)AND(rt0.c2)))AND(vt0.c0))))<=(((((-330340305, t0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0))), ((t0.c0) IS TRUE), (~ (rt0.c3)), (+ (rt0.c0)), (((('3o,i4')OR(NULL)))AND(rt0.c0))))) ASC);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((NULL)>((((vt0.c0, vt0.c0, t0.c0))!=((rt0.c4, x'', 0.43228904703783433)))))) ORDER BY (((CAST(rt0.c4 AS INTEGER), ((rt0.c0)LIKE(rt0.c2)), (rt0.c0 IN ()), (vt0.c0 IN ()), ((((rt0.c3)AND(rt0.c2)))AND(vt0.c0))))<=(((((-330340305, t0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0))), ((t0.c0) IS TRUE), (~ (rt0.c3)), (+ (rt0.c0)), (((('3o,i4')OR(NULL)))AND(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>((((vt0.c0, vt0.c0, t0.c0))<>((rt0.c4, x'', 0.43228904703783433)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((CAST(rt0.c4 AS INTEGER), ((rt0.c0)LIKE(rt0.c2)), (rt0.c0 IN ()), (vt0.c0 IN ()), ((((rt0.c3)AND(rt0.c2)))AND(vt0.c0))))<=(((((-330340305, t0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0))), ((t0.c0) IS TRUE), (~ (rt0.c3)), (+ (rt0.c0)), (((('3o,i4')OR(NULL)))AND(rt0.c0))))) ASC);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((NULL)>((((vt0.c0, vt0.c0, t0.c0))!=((rt0.c4, x'', 0.43228904703783433)))))) ORDER BY (((CAST(rt0.c4 AS INTEGER), ((rt0.c0)LIKE(rt0.c2)), (rt0.c0 IN ()), (vt0.c0 IN ()), ((((rt0.c3)AND(rt0.c2)))AND(vt0.c0))))<=(((((-330340305, t0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0))), ((t0.c0) IS TRUE), (~ (rt0.c3)), (+ (rt0.c0)), (((('3o,i4')OR(NULL)))AND(rt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (LIKELY(DISTINCT t0.c0)))) ORDER BY (((~ (t0.c0)))>(((t0.c0)IS NOT(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (LIKELY(DISTINCT t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c0)))>(((t0.c0)IS NOT(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (LIKELY(DISTINCT t0.c0)))) ORDER BY (((~ (t0.c0)))>(((t0.c0)IS NOT(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (LIKELY(DISTINCT t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c0)))>(((t0.c0)IS NOT(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (LIKELY(DISTINCT t0.c0)))) ORDER BY (((~ (t0.c0)))>(((t0.c0)IS NOT(t0.c0)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CASE (+ (rt0.c2))  WHEN ((rt0.c1)AND(rt0.c0)) THEN rt0.c1 COLLATE BINARY WHEN rt0.c4 COLLATE NOCASE THEN rt0.c4 WHEN NULL THEN ((rt0.c2)>(rt0.c2)) WHEN ((rt0.c1)<=(rt0.c0)) THEN (((rt0.c2))==((rt0.c2))) WHEN CASE WHEN rt0.c2 THEN rt0.c4 END THEN CASE '*Tì­ t9-	'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c0 END END) ORDER BY CASE (((rt0.c4, rt0.c2, '773359434')) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c4, rt0.c2, rt0.c2)))  WHEN ((rt0.c4) ISNULL) THEN ((rt0.c0)<=(rt0.c3)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt0.c2))  WHEN ((rt0.c1)AND(rt0.c0)) THEN rt0.c1 COLLATE BINARY WHEN rt0.c4 COLLATE NOCASE THEN rt0.c4 WHEN NULL THEN ((rt0.c2)>(rt0.c2)) WHEN ((rt0.c1)<=(rt0.c0)) THEN (((rt0.c2))=((rt0.c2))) WHEN CASE WHEN rt0.c2 THEN rt0.c4 END THEN CASE '*Tì­ t9-	'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c4, rt0.c2, '773359434')) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c4, rt0.c2, rt0.c2)))  WHEN ((rt0.c4) ISNULL) THEN ((rt0.c0)<=(rt0.c3)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE (+ (rt0.c2))  WHEN ((rt0.c1)AND(rt0.c0)) THEN rt0.c1 COLLATE BINARY WHEN rt0.c4 COLLATE NOCASE THEN rt0.c4 WHEN NULL THEN ((rt0.c2)>(rt0.c2)) WHEN ((rt0.c1)<=(rt0.c0)) THEN (((rt0.c2))==((rt0.c2))) WHEN CASE WHEN rt0.c2 THEN rt0.c4 END THEN CASE '*Tì­ t9-	'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c0 END END) ORDER BY CASE (((rt0.c4, rt0.c2, '773359434')) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c4, rt0.c2, rt0.c2)))  WHEN ((rt0.c4) ISNULL) THEN ((rt0.c0)<=(rt0.c3)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt0.c2))  WHEN ((rt0.c1)AND(rt0.c0)) THEN rt0.c1 COLLATE BINARY WHEN rt0.c4 COLLATE NOCASE THEN rt0.c4 WHEN NULL THEN ((rt0.c2)>(rt0.c2)) WHEN ((rt0.c1)<=(rt0.c0)) THEN (((rt0.c2))=((rt0.c2))) WHEN CASE WHEN rt0.c2 THEN rt0.c4 END THEN CASE '*Tì­ t9-	'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c4, rt0.c2, '773359434')) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c4, rt0.c2, rt0.c2)))  WHEN ((rt0.c4) ISNULL) THEN ((rt0.c0)<=(rt0.c3)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE (+ (rt0.c2))  WHEN ((rt0.c1)AND(rt0.c0)) THEN rt0.c1 COLLATE BINARY WHEN rt0.c4 COLLATE NOCASE THEN rt0.c4 WHEN NULL THEN ((rt0.c2)>(rt0.c2)) WHEN ((rt0.c1)<=(rt0.c0)) THEN (((rt0.c2))==((rt0.c2))) WHEN CASE WHEN rt0.c2 THEN rt0.c4 END THEN CASE '*Tì­ t9-	'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c0 END END) ORDER BY CASE (((rt0.c4, rt0.c2, '773359434')) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c4, rt0.c2, rt0.c2)))  WHEN ((rt0.c4) ISNULL) THEN ((rt0.c0)<=(rt0.c3)) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((x'') BETWEEN (HEX(rt0.c2)) AND (2060903434)));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (HEX(rt0.c2)) AND (2060903434))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((x'') BETWEEN (HEX(rt0.c2)) AND (2060903434)));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (HEX(rt0.c2)) AND (2060903434))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((x'') BETWEEN (HEX(rt0.c2)) AND (2060903434)));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON ((((((rt0.c2) ISNULL))OR(CASE vt0.c0  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END)))AND(((t0.c0) NOT NULL))) RIGHT OUTER JOIN vt0 ON ((((((rt0.c3)|(vt0.c0)))AND(t0.c0)))OR(CAST(rt0.c2 AS NUMERIC))) WHERE (((((('-1693866106', rt0.c1, rt0.c3, rt0.c0, rt0.c2))!=((vt0.c0, vt0.c0, x'', rt0.c2, rt0.c3)))) NOT NULL)) ORDER BY (NOT ((t0.c0 IN (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('-1693866106', rt0.c1, rt0.c3, rt0.c0, rt0.c2))!=((vt0.c0, vt0.c0, x'', rt0.c2, rt0.c3)))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((((rt0.c2) ISNULL))OR(CASE vt0.c0  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END)))AND(((t0.c0) NOT NULL))) RIGHT OUTER JOIN vt0 ON ((((((rt0.c3)|(vt0.c0)))AND(t0.c0)))OR(CAST(rt0.c2 AS NUMERIC))) ORDER BY (NOT ((t0.c0 IN (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON ((((((rt0.c2) ISNULL))OR(CASE vt0.c0  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END)))AND(((t0.c0) NOT NULL))) RIGHT OUTER JOIN vt0 ON ((((((rt0.c3)|(vt0.c0)))AND(t0.c0)))OR(CAST(rt0.c2 AS NUMERIC))) WHERE (((((('-1693866106', rt0.c1, rt0.c3, rt0.c0, rt0.c2))!=((vt0.c0, vt0.c0, x'', rt0.c2, rt0.c3)))) NOT NULL)) ORDER BY (NOT ((t0.c0 IN (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('-1693866106', rt0.c1, rt0.c3, rt0.c0, rt0.c2))!=((vt0.c0, vt0.c0, x'', rt0.c2, rt0.c3)))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((((rt0.c2) ISNULL))OR(CASE vt0.c0  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END)))AND(((t0.c0) NOT NULL))) RIGHT OUTER JOIN vt0 ON ((((((rt0.c3)|(vt0.c0)))AND(t0.c0)))OR(CAST(rt0.c2 AS NUMERIC))) ORDER BY (NOT ((t0.c0 IN (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (((('-2142603644') IS FALSE) IN ())) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('-2142603644') IS FALSE) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((('-2142603644') IS FALSE) IN ())) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('-2142603644') IS FALSE) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((('-2142603644') IS FALSE) IN ())) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c2) IS FALSE))<=(((vt0.c0) IS TRUE))) WHERE ((((((((((vt0.c0 IN ()))AND(((rt0.c2)-(rt0.c2)))))AND((((rt0.c4, vt0.c0, rt0.c4))=((rt0.c2, vt0.c0, vt0.c0))))))AND(-1.709011118E9)))AND((((vt0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))AND(((rt0.c2)-(rt0.c2)))))AND((((rt0.c4, vt0.c0, rt0.c4))==((rt0.c2, vt0.c0, vt0.c0))))))AND(-1.709011118E9)))AND((((vt0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0)))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c2) IS FALSE))<=(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c2) IS FALSE))<=(((vt0.c0) IS TRUE))) WHERE ((((((((((vt0.c0 IN ()))AND(((rt0.c2)-(rt0.c2)))))AND((((rt0.c4, vt0.c0, rt0.c4))=((rt0.c2, vt0.c0, vt0.c0))))))AND(-1.709011118E9)))AND((((vt0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))AND(((rt0.c2)-(rt0.c2)))))AND((((rt0.c4, vt0.c0, rt0.c4))==((rt0.c2, vt0.c0, vt0.c0))))))AND(-1.709011118E9)))AND((((vt0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0)))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c2) IS FALSE))<=(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c2) IS FALSE))<=(((vt0.c0) IS TRUE))) WHERE ((((((((((vt0.c0 IN ()))AND(((rt0.c2)-(rt0.c2)))))AND((((rt0.c4, vt0.c0, rt0.c4))=((rt0.c2, vt0.c0, vt0.c0))))))AND(-1.709011118E9)))AND((((vt0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((MIN(t0.c0, t0.c0))*((((t0.c0))<=((t0.c0)))))) ORDER BY CASE (((t0.c0))!=((t0.c0)))  WHEN (- (t0.c0)) THEN ((t0.c0) NOTNULL) ELSE ((t0.c0) NOTNULL) END;
SELECT SUM(count) FROM (SELECT ALL ((((MIN(t0.c0, t0.c0))*((((t0.c0))<=((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY CASE (((t0.c0))<>((t0.c0)))  WHEN (- (t0.c0)) THEN ((t0.c0) NOTNULL) ELSE ((t0.c0) NOTNULL) END);
SELECT ALL COUNT(*) FROM t0 WHERE (((MIN(t0.c0, t0.c0))*((((t0.c0))<=((t0.c0)))))) ORDER BY CASE (((t0.c0))!=((t0.c0)))  WHEN (- (t0.c0)) THEN ((t0.c0) NOTNULL) ELSE ((t0.c0) NOTNULL) END;
SELECT SUM(count) FROM (SELECT ALL ((((MIN(t0.c0, t0.c0))*((((t0.c0))<=((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY CASE (((t0.c0))<>((t0.c0)))  WHEN (- (t0.c0)) THEN ((t0.c0) NOTNULL) ELSE ((t0.c0) NOTNULL) END);
SELECT ALL COUNT(*) FROM t0 WHERE (((MIN(t0.c0, t0.c0))*((((t0.c0))<=((t0.c0)))))) ORDER BY CASE (((t0.c0))!=((t0.c0)))  WHEN (- (t0.c0)) THEN ((t0.c0) NOTNULL) ELSE ((t0.c0) NOTNULL) END;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0))<((t0.c0))))|((((t0.c0))>=((x'e31e')))))) ORDER BY t0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<((t0.c0))))|((((t0.c0))>=((x'e31e')))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0))<((t0.c0))))|((((t0.c0))>=((x'e31e')))))) ORDER BY t0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<((t0.c0))))|((((t0.c0))>=((x'e31e')))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0))<((t0.c0))))|((((t0.c0))>=((x'e31e')))))) ORDER BY t0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (((('-482765397'))<(((+ (t0.c0)))))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((('-482765397'))<(((+ (t0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0 DESC);
SELECT ALL * FROM vt0, t0 WHERE (((('-482765397'))<(((+ (t0.c0)))))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((('-482765397'))<(((+ (t0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0 DESC);
SELECT ALL * FROM vt0, t0 WHERE (((('-482765397'))<(((+ (t0.c0)))))) ORDER BY t0.c0 DESC;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((0.874751584658671)LIKE((((rt0.c2, rt0.c3, rt0.c2)) BETWEEN ((rt0.c3, rt0.c1, rt0.c0)) AND ((t0.c0, rt0.c1, vt0.c0))))) FULL OUTER JOIN t0 ON CASE (((rt0.c1))<((rt0.c1)))  WHEN ((t0.c0) NOTNULL) THEN CAST(x'' AS TEXT) WHEN ((t0.c0) NOTNULL) THEN ((rt0.c4)/(rt0.c3)) WHEN ((((t0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN ((rt0.c1)<>(rt0.c4)) THEN ((((vt0.c0)OR(t0.c0)))OR(rt0.c4)) WHEN ((rt0.c3) ISNULL) THEN CASE vt0.c0  WHEN rt0.c2 THEN '' WHEN rt0.c2 THEN '1506035292' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c0 END END WHERE ((((rt0.c0)+(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)+(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((0.874751584658671)LIKE((((rt0.c2, rt0.c3, rt0.c2)) BETWEEN ((rt0.c3, rt0.c1, rt0.c0)) AND ((t0.c0, rt0.c1, vt0.c0))))) FULL OUTER JOIN t0 ON CASE (((rt0.c1))<((rt0.c1)))  WHEN ((t0.c0) NOTNULL) THEN CAST(x'' AS TEXT) WHEN ((t0.c0) NOTNULL) THEN ((rt0.c4)/(rt0.c3)) WHEN ((((t0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN ((rt0.c1)<>(rt0.c4)) THEN ((((vt0.c0)OR(t0.c0)))OR(rt0.c4)) WHEN ((rt0.c3) ISNULL) THEN CASE vt0.c0  WHEN rt0.c2 THEN '' WHEN rt0.c2 THEN '1506035292' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c0 END END);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((0.874751584658671)LIKE((((rt0.c2, rt0.c3, rt0.c2)) BETWEEN ((rt0.c3, rt0.c1, rt0.c0)) AND ((t0.c0, rt0.c1, vt0.c0))))) FULL OUTER JOIN t0 ON CASE (((rt0.c1))<((rt0.c1)))  WHEN ((t0.c0) NOTNULL) THEN CAST(x'' AS TEXT) WHEN ((t0.c0) NOTNULL) THEN ((rt0.c4)/(rt0.c3)) WHEN ((((t0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN ((rt0.c1)<>(rt0.c4)) THEN ((((vt0.c0)OR(t0.c0)))OR(rt0.c4)) WHEN ((rt0.c3) ISNULL) THEN CASE vt0.c0  WHEN rt0.c2 THEN '' WHEN rt0.c2 THEN '1506035292' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c0 END END WHERE ((((rt0.c0)+(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)+(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((0.874751584658671)LIKE((((rt0.c2, rt0.c3, rt0.c2)) BETWEEN ((rt0.c3, rt0.c1, rt0.c0)) AND ((t0.c0, rt0.c1, vt0.c0))))) FULL OUTER JOIN t0 ON CASE (((rt0.c1))<((rt0.c1)))  WHEN ((t0.c0) NOTNULL) THEN CAST(x'' AS TEXT) WHEN ((t0.c0) NOTNULL) THEN ((rt0.c4)/(rt0.c3)) WHEN ((((t0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN ((rt0.c1)<>(rt0.c4)) THEN ((((vt0.c0)OR(t0.c0)))OR(rt0.c4)) WHEN ((rt0.c3) ISNULL) THEN CASE vt0.c0  WHEN rt0.c2 THEN '' WHEN rt0.c2 THEN '1506035292' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c0 END END);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c0) ORDER BY ((((((((rt0.c1 COLLATE BINARY)OR(x'')))OR(((rt0.c4) NOT NULL))))OR(NULL)))AND(((rt0.c0)<=(rt0.c4)))) DESC, (((- (rt0.c2))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((rt0.c1 COLLATE BINARY)OR(x'')))OR(((rt0.c4) NOT NULL))))OR(NULL)))AND(((rt0.c0)<=(rt0.c4)))) DESC, (((- (rt0.c2))) NOTNULL) DESC);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c0) ORDER BY ((((((((rt0.c1 COLLATE BINARY)OR(x'')))OR(((rt0.c4) NOT NULL))))OR(NULL)))AND(((rt0.c0)<=(rt0.c4)))) DESC, (((- (rt0.c2))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((rt0.c1 COLLATE BINARY)OR(x'')))OR(((rt0.c4) NOT NULL))))OR(NULL)))AND(((rt0.c0)<=(rt0.c4)))) DESC, (((- (rt0.c2))) NOTNULL) DESC);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c0) ORDER BY ((((((((rt0.c1 COLLATE BINARY)OR(x'')))OR(((rt0.c4) NOT NULL))))OR(NULL)))AND(((rt0.c0)<=(rt0.c4)))) DESC, (((- (rt0.c2))) NOTNULL) DESC;
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((((NULL)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))) BETWEEN (CASE WHEN rt0.c4 THEN t0.c0 END) AND (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((((((NULL)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))) BETWEEN (CASE WHEN rt0.c4 THEN t0.c0 END) AND (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((((NULL)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))) BETWEEN (CASE WHEN rt0.c4 THEN t0.c0 END) AND (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((((((NULL)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))) BETWEEN (CASE WHEN rt0.c4 THEN t0.c0 END) AND (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((((NULL)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))) BETWEEN (CASE WHEN rt0.c4 THEN t0.c0 END) AND (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 END)));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c0 COLLATE BINARY)*(CASE WHEN rt0.c0 THEN NULL WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)*(CASE WHEN rt0.c0 THEN NULL WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c0 COLLATE BINARY)*(CASE WHEN rt0.c0 THEN NULL WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)*(CASE WHEN rt0.c0 THEN NULL WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c0 COLLATE BINARY)*(CASE WHEN rt0.c0 THEN NULL WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END)));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS BLOB)) ORDER BY CAST(CAST(rt0.c3 AS BLOB) AS REAL) DESC, 0X3fdd4282  NULLS LAST, ((((rt0.c1 COLLATE NOCASE)AND((NOT (t0.c0)))))OR(((((vt0.c0)OR(rt0.c0)))AND(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CAST(CAST(rt0.c3 AS BLOB) AS REAL) DESC, 0X3fdd4282  NULLS LAST, ((((rt0.c1 COLLATE NOCASE)AND((NOT (t0.c0)))))OR(((((vt0.c0)OR(rt0.c0)))AND(rt0.c4)))));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS BLOB)) ORDER BY CAST(CAST(rt0.c3 AS BLOB) AS REAL) DESC, 0X3fdd4282  NULLS LAST, ((((rt0.c1 COLLATE NOCASE)AND((NOT (t0.c0)))))OR(((((vt0.c0)OR(rt0.c0)))AND(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CAST(CAST(rt0.c3 AS BLOB) AS REAL) DESC, 0X3fdd4282  NULLS LAST, ((((rt0.c1 COLLATE NOCASE)AND((NOT (t0.c0)))))OR(((((vt0.c0)OR(rt0.c0)))AND(rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c2 AS INTEGER) IN (rt0.c0, LIKELIHOOD(DISTINCT rt0.c3, 0.3121265578368204))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS INTEGER) IN (rt0.c0, LIKELIHOOD(DISTINCT rt0.c3, 0.3121265578368204)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c2 AS INTEGER) IN (rt0.c0, LIKELIHOOD(DISTINCT rt0.c3, 0.3121265578368204))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS INTEGER) IN (rt0.c0, LIKELIHOOD(DISTINCT rt0.c3, 0.3121265578368204)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c2 AS INTEGER) IN (rt0.c0, LIKELIHOOD(DISTINCT rt0.c3, 0.3121265578368204))));
SELECT ALL * FROM vt0 WHERE (0.6302404433458197 COLLATE NOCASE) ORDER BY ((((((((((vt0.c0)LIKE(vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0) IS TRUE))))AND(NULL COLLATE RTRIM)))OR(((vt0.c0)<(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.6302404433458197 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)LIKE(vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0) IS TRUE))))AND(NULL COLLATE RTRIM)))OR(((vt0.c0)<(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (0.6302404433458197 COLLATE NOCASE) ORDER BY ((((((((((vt0.c0)LIKE(vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0) IS TRUE))))AND(NULL COLLATE RTRIM)))OR(((vt0.c0)<(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.6302404433458197 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)LIKE(vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0) IS TRUE))))AND(NULL COLLATE RTRIM)))OR(((vt0.c0)<(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (0.6302404433458197 COLLATE NOCASE) ORDER BY ((((((((((vt0.c0)LIKE(vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0) IS TRUE))))AND(NULL COLLATE RTRIM)))OR(((vt0.c0)<(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((rt0.c4)) BETWEEN ((NULL)) AND ((t0.c0))))||((rt0.c0 IN ())))) ORDER BY (((((rt0.c3))<=((rt0.c3))))%((+ (rt0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)) BETWEEN ((NULL)) AND ((t0.c0))))||((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((rt0.c3))<=((rt0.c3))))%((+ (rt0.c4)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((rt0.c4)) BETWEEN ((NULL)) AND ((t0.c0))))||((rt0.c0 IN ())))) ORDER BY (((((rt0.c3))<=((rt0.c3))))%((+ (rt0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)) BETWEEN ((NULL)) AND ((t0.c0))))||((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((rt0.c3))<=((rt0.c3))))%((+ (rt0.c4)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((rt0.c4)) BETWEEN ((NULL)) AND ((t0.c0))))||((rt0.c0 IN ())))) ORDER BY (((((rt0.c3))<=((rt0.c3))))%((+ (rt0.c4)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CASE (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((x'9919')))  WHEN ((rt0.c0)OR(vt0.c0)) THEN ((x'')*(t0.c0)) END) ORDER BY (~ (NULL))  NULLS FIRST, (~ (((((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)))AND(0.2080169970308201)))AND(rt0.c1)))AND(vt0.c0)))OR(0xffffffff9ea72f99)))) DESC  NULLS FIRST, x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((x'9919')))  WHEN ((rt0.c0)OR(vt0.c0)) THEN ((x'')*(t0.c0)) END) IS TRUE)  as count FROM vt0, t0, rt0 NOT INDEXED ORDER BY (~ (NULL))  NULLS FIRST, (~ (((((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)))AND(0.2080169970308201)))AND(rt0.c1)))AND(vt0.c0)))OR(0xffffffff9ea72f99)))) DESC  NULLS FIRST, x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CASE (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((x'9919')))  WHEN ((rt0.c0)OR(vt0.c0)) THEN ((x'')*(t0.c0)) END) ORDER BY (~ (NULL))  NULLS FIRST, (~ (((((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)))AND(0.2080169970308201)))AND(rt0.c1)))AND(vt0.c0)))OR(0xffffffff9ea72f99)))) DESC  NULLS FIRST, x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((x'9919')))  WHEN ((rt0.c0)OR(vt0.c0)) THEN ((x'')*(t0.c0)) END) IS TRUE)  as count FROM vt0, t0, rt0 NOT INDEXED ORDER BY (~ (NULL))  NULLS FIRST, (~ (((((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)))AND(0.2080169970308201)))AND(rt0.c1)))AND(vt0.c0)))OR(0xffffffff9ea72f99)))) DESC  NULLS FIRST, x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CASE (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((x'9919')))  WHEN ((rt0.c0)OR(vt0.c0)) THEN ((x'')*(t0.c0)) END) ORDER BY (~ (NULL))  NULLS FIRST, (~ (((((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)))AND(0.2080169970308201)))AND(rt0.c1)))AND(vt0.c0)))OR(0xffffffff9ea72f99)))) DESC  NULLS FIRST, x'' ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0)%(rt0.c3))) BETWEEN ((rt0.c3 IN ())) AND (((((((((rt0.c3)AND(rt0.c4)))AND('IE')))AND(vt0.c0)))OR(rt0.c1))))) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(rt0.c3))) BETWEEN ((rt0.c3 IN ())) AND (((((((((rt0.c3)AND(rt0.c4)))AND('IE')))AND(vt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY SQLITE_VERSION() ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0)%(rt0.c3))) BETWEEN ((rt0.c3 IN ())) AND (((((((((rt0.c3)AND(rt0.c4)))AND('IE')))AND(vt0.c0)))OR(rt0.c1))))) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(rt0.c3))) BETWEEN ((rt0.c3 IN ())) AND (((((((((rt0.c3)AND(rt0.c4)))AND('IE')))AND(vt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY SQLITE_VERSION() ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0)%(rt0.c3))) BETWEEN ((rt0.c3 IN ())) AND (((((((((rt0.c3)AND(rt0.c4)))AND('IE')))AND(vt0.c0)))OR(rt0.c1))))) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST;
SELECT * FROM t0, rt0, vt0 WHERE (1.877720383E9);
SELECT SUM(count) FROM (SELECT ((1.877720383E9) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (1.877720383E9);
SELECT SUM(count) FROM (SELECT ((1.877720383E9) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (1.877720383E9);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((~ (t0.c0))) NOT NULL)) ORDER BY CASE t0.c0  WHEN CAST(t0.c0 AS TEXT) THEN ((rt0.c3) BETWEEN (rt0.c4) AND ('-372885173')) WHEN ((t0.c0)&(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c4)) WHEN ((rt0.c1)>>(rt0.c0)) THEN 0.5449359377013925 END ASC;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE t0.c0  WHEN CAST(t0.c0 AS TEXT) THEN ((rt0.c3) BETWEEN (rt0.c4) AND ('-372885173')) WHEN ((t0.c0)&(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c4)) WHEN ((rt0.c1)>>(rt0.c0)) THEN 0.5449359377013925 END ASC);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((~ (t0.c0))) NOT NULL)) ORDER BY CASE t0.c0  WHEN CAST(t0.c0 AS TEXT) THEN ((rt0.c3) BETWEEN (rt0.c4) AND ('-372885173')) WHEN ((t0.c0)&(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c4)) WHEN ((rt0.c1)>>(rt0.c0)) THEN 0.5449359377013925 END ASC;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE t0.c0  WHEN CAST(t0.c0 AS TEXT) THEN ((rt0.c3) BETWEEN (rt0.c4) AND ('-372885173')) WHEN ((t0.c0)&(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c4)) WHEN ((rt0.c1)>>(rt0.c0)) THEN 0.5449359377013925 END ASC);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((~ (t0.c0))) NOT NULL)) ORDER BY CASE t0.c0  WHEN CAST(t0.c0 AS TEXT) THEN ((rt0.c3) BETWEEN (rt0.c4) AND ('-372885173')) WHEN ((t0.c0)&(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c4)) WHEN ((rt0.c1)>>(rt0.c0)) THEN 0.5449359377013925 END ASC;
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL) ORDER BY CAST(x'' AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(x'' AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL) ORDER BY CAST(x'' AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(x'' AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL) ORDER BY CAST(x'' AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c3) ORDER BY ((rt0.c2)IS((((rt0.c4, rt0.c1, t0.c0))!=((rt0.c1, rt0.c1, rt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c2)IS((((rt0.c4, rt0.c1, t0.c0))!=((rt0.c1, rt0.c1, rt0.c2))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c3) ORDER BY ((rt0.c2)IS((((rt0.c4, rt0.c1, t0.c0))!=((rt0.c1, rt0.c1, rt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c2)IS((((rt0.c4, rt0.c1, t0.c0))!=((rt0.c1, rt0.c1, rt0.c2))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c3) ORDER BY ((rt0.c2)IS((((rt0.c4, rt0.c1, t0.c0))!=((rt0.c1, rt0.c1, rt0.c2))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 CROSS JOIN vt0 ON ((((((((((((CAST(rt0.c2 AS REAL))AND('-1896535074')))AND((~ (rt0.c0)))))OR(((((((((rt0.c3)AND(NULL)))AND(rt0.c3)))AND(vt0.c0)))OR(vt0.c0)))))OR(0.9323937098772705)))AND(((vt0.c0)<>(rt0.c4)))))AND(rt0.c2)) WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON ((((((((((((CAST(rt0.c2 AS REAL))AND('-1896535074')))AND((~ (rt0.c0)))))OR(((((((((rt0.c3)AND(NULL)))AND(rt0.c3)))AND(vt0.c0)))OR(vt0.c0)))))OR(0.9323937098772705)))AND(((vt0.c0)<>(rt0.c4)))))AND(rt0.c2)));
SELECT ALL * FROM rt0, t0 CROSS JOIN vt0 ON ((((((((((((CAST(rt0.c2 AS REAL))AND('-1896535074')))AND((~ (rt0.c0)))))OR(((((((((rt0.c3)AND(NULL)))AND(rt0.c3)))AND(vt0.c0)))OR(vt0.c0)))))OR(0.9323937098772705)))AND(((vt0.c0)<>(rt0.c4)))))AND(rt0.c2)) WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON ((((((((((((CAST(rt0.c2 AS REAL))AND('-1896535074')))AND((~ (rt0.c0)))))OR(((((((((rt0.c3)AND(NULL)))AND(rt0.c3)))AND(vt0.c0)))OR(vt0.c0)))))OR(0.9323937098772705)))AND(((vt0.c0)<>(rt0.c4)))))AND(rt0.c2)));
SELECT ALL * FROM rt0, t0 CROSS JOIN vt0 ON ((((((((((((CAST(rt0.c2 AS REAL))AND('-1896535074')))AND((~ (rt0.c0)))))OR(((((((((rt0.c3)AND(NULL)))AND(rt0.c3)))AND(vt0.c0)))OR(vt0.c0)))))OR(0.9323937098772705)))AND(((vt0.c0)<>(rt0.c4)))))AND(rt0.c2)) WHERE ((x'' IN ()));
SELECT * FROM rt0, t0 WHERE ((~ (((((rt0.c1)OR(t0.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c1)OR(t0.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((~ (((((rt0.c1)OR(t0.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c1)OR(t0.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((~ (((((rt0.c1)OR(t0.c0)))AND(rt0.c3)))));
SELECT COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON (+ (0.5208436157519519)) WHERE ((((((rt0.c0)=(rt0.c0))))>((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)=(rt0.c0))))>((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON (+ (0.5208436157519519)));
SELECT COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON (+ (0.5208436157519519)) WHERE ((((((rt0.c0)=(rt0.c0))))>((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)=(rt0.c0))))>((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON (+ (0.5208436157519519)));
SELECT COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON (+ (0.5208436157519519)) WHERE ((((((rt0.c0)=(rt0.c0))))>((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c0 END))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)OR(NULL)))OR(vt0.c0)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((((0.8997372115457686)IS NOT(0x12cded2f))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))) WHERE ((((t0.c0)) NOT BETWEEN ((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(t0.c0)))) AND ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)))))) ORDER BY NULLIF(UPPER(DISTINCT rt0.c1), CASE WHEN NULL THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END) ASC  NULLS FIRST, ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))LIKE(CASE rt0.c4  WHEN rt0.c0 THEN t0.c0 WHEN '-1266350810' THEN t0.c0 WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c0 END)) DESC, ((rt0.c1)IS((((t0.c0))>=((rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(t0.c0)))) AND ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)OR(NULL)))OR(vt0.c0)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((((0.8997372115457686)IS NOT(0x12cded2f))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))) ORDER BY NULLIF(UPPER(DISTINCT rt0.c1), CASE WHEN NULL THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END) ASC  NULLS FIRST, ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))LIKE(CASE rt0.c4  WHEN rt0.c0 THEN t0.c0 WHEN '-1266350810' THEN t0.c0 WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c0 END)) DESC, ((rt0.c1)IS((((t0.c0))>=((rt0.c1))))) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)OR(NULL)))OR(vt0.c0)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((((0.8997372115457686)IS NOT(0x12cded2f))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))) WHERE ((((t0.c0)) NOT BETWEEN ((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(t0.c0)))) AND ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)))))) ORDER BY NULLIF(UPPER(DISTINCT rt0.c1), CASE WHEN NULL THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END) ASC  NULLS FIRST, ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))LIKE(CASE rt0.c4  WHEN rt0.c0 THEN t0.c0 WHEN '-1266350810' THEN t0.c0 WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c0 END)) DESC, ((rt0.c1)IS((((t0.c0))>=((rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(t0.c0)))) AND ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)OR(NULL)))OR(vt0.c0)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((((0.8997372115457686)IS NOT(0x12cded2f))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))) ORDER BY NULLIF(UPPER(DISTINCT rt0.c1), CASE WHEN NULL THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END) ASC  NULLS FIRST, ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))LIKE(CASE rt0.c4  WHEN rt0.c0 THEN t0.c0 WHEN '-1266350810' THEN t0.c0 WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c0 END)) DESC, ((rt0.c1)IS((((t0.c0))>=((rt0.c1))))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4)) IN ()));
SELECT * FROM t0, vt0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((((((rt0.c1))<((rt0.c4))))-(CASE WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN x'' WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY (((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN ((((NULL) ISNULL), QUOTE(vt0.c0), ((NULL)GLOB(vt0.c0)))) AND ((LIKELY(rt0.c1), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 END, CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))<((rt0.c4))))-(CASE WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN x'' WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON rt0.c2 ORDER BY (((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN ((((NULL) ISNULL), QUOTE(vt0.c0), ((NULL)GLOB(vt0.c0)))) AND ((LIKELY(rt0.c1), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 END, CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) DESC  NULLS LAST);
SELECT * FROM t0, vt0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((((((rt0.c1))<((rt0.c4))))-(CASE WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN x'' WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY (((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN ((((NULL) ISNULL), QUOTE(vt0.c0), ((NULL)GLOB(vt0.c0)))) AND ((LIKELY(rt0.c1), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 END, CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))<((rt0.c4))))-(CASE WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN x'' WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON rt0.c2 ORDER BY (((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN ((((NULL) ISNULL), QUOTE(vt0.c0), ((NULL)GLOB(vt0.c0)))) AND ((LIKELY(rt0.c1), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 END, CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) DESC  NULLS LAST);
SELECT * FROM t0, vt0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((((((rt0.c1))<((rt0.c4))))-(CASE WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN x'' WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY (((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN ((((NULL) ISNULL), QUOTE(vt0.c0), ((NULL)GLOB(vt0.c0)))) AND ((LIKELY(rt0.c1), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 END, CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST(((rt0.c3)!=(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)<>(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST(((rt0.c3)!=(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)<>(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST(((rt0.c3)!=(rt0.c1)) AS INTEGER));
SELECT * FROM vt0, rt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((((vt0.c0)%(rt0.c3)))<((((rt0.c3))!=((''))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)%(rt0.c3)))<((((rt0.c3))!=((''))))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((((vt0.c0)%(rt0.c3)))<((((rt0.c3))!=((''))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)%(rt0.c3)))<((((rt0.c3))!=((''))))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((((vt0.c0)%(rt0.c3)))<((((rt0.c3))!=((''))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((~ (('	v)qce' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ (('	v)qce' IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((~ (('	v)qce' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ (('	v)qce' IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((~ (('	v)qce' IN ()))));
SELECT * FROM t0, vt0, rt0 WHERE (((((vt0.c0)OR(714146833)))>>(((rt0.c0)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(714146833)))>>(((rt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((((vt0.c0)OR(714146833)))>>(((rt0.c0)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(714146833)))>>(((rt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((((vt0.c0)OR(714146833)))>>(((rt0.c0)=(vt0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) IS TRUE) AS BLOB));
SELECT ALL * FROM t0, rt0 WHERE (((((((((rt0.c1 COLLATE NOCASE)AND(rt0.c3)))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c4)))))OR(ABS(rt0.c1))))OR(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1 COLLATE NOCASE)AND(rt0.c3)))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c4)))))OR(ABS(rt0.c1))))OR(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((((((rt0.c1 COLLATE NOCASE)AND(rt0.c3)))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c4)))))OR(ABS(rt0.c1))))OR(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1 COLLATE NOCASE)AND(rt0.c3)))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c4)))))OR(ABS(rt0.c1))))OR(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((((((rt0.c1 COLLATE NOCASE)AND(rt0.c3)))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c4)))))OR(ABS(rt0.c1))))OR(((rt0.c0) NOT NULL))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((((('%f~sNa')AND(rt0.c0)))AND(rt0.c0)))AND(((rt0.c4)>=(NULL)))))AND('1418485273')) WHERE (rt0.c2) ORDER BY ((((vt0.c0)*(rt0.c2)))LIKE(((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((((('%f~sNa')AND(rt0.c0)))AND(rt0.c0)))AND(((rt0.c4)>=(NULL)))))AND('1418485273')) ORDER BY ((((vt0.c0)*(rt0.c2)))LIKE(((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((((('%f~sNa')AND(rt0.c0)))AND(rt0.c0)))AND(((rt0.c4)>=(NULL)))))AND('1418485273')) WHERE (rt0.c2) ORDER BY ((((vt0.c0)*(rt0.c2)))LIKE(((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((((('%f~sNa')AND(rt0.c0)))AND(rt0.c0)))AND(((rt0.c4)>=(NULL)))))AND('1418485273')) ORDER BY ((((vt0.c0)*(rt0.c2)))LIKE(((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((((('%f~sNa')AND(rt0.c0)))AND(rt0.c0)))AND(((rt0.c4)>=(NULL)))))AND('1418485273')) WHERE (rt0.c2) ORDER BY ((((vt0.c0)*(rt0.c2)))LIKE(((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt0, vt0 WHERE (CASE ((((rt0.c3)AND(rt0.c1)))OR('-1266350810'))  WHEN TRIM(DISTINCT t0.c0) THEN rt0.c4 END) ORDER BY (((- (rt0.c2))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c3)AND(rt0.c1)))OR('-1266350810'))  WHEN TRIM(DISTINCT t0.c0) THEN rt0.c4 END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((- (rt0.c2))) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0 WHERE (CASE ((((rt0.c3)AND(rt0.c1)))OR('-1266350810'))  WHEN TRIM(DISTINCT t0.c0) THEN rt0.c4 END) ORDER BY (((- (rt0.c2))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c3)AND(rt0.c1)))OR('-1266350810'))  WHEN TRIM(DISTINCT t0.c0) THEN rt0.c4 END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((- (rt0.c2))) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0 WHERE (CASE ((((rt0.c3)AND(rt0.c1)))OR('-1266350810'))  WHEN TRIM(DISTINCT t0.c0) THEN rt0.c4 END) ORDER BY (((- (rt0.c2))) NOTNULL)  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ()));
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((vt0.c0) IS TRUE)) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt0.c1)>(rt0.c3))))) ORDER BY 0xffffffffcf176d5f  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt0.c1)>(rt0.c3))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY 0xffffffffcf176d5f  NULLS LAST);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((vt0.c0) IS TRUE)) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt0.c1)>(rt0.c3))))) ORDER BY 0xffffffffcf176d5f  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt0.c1)>(rt0.c3))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY 0xffffffffcf176d5f  NULLS LAST);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((vt0.c0) IS TRUE)) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt0.c1)>(rt0.c3))))) ORDER BY 0xffffffffcf176d5f  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) BETWEEN (NULL) AND (rt0.c2))) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (rt0.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) BETWEEN (NULL) AND (rt0.c2))) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (rt0.c4 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) BETWEEN (NULL) AND (rt0.c2))) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (rt0.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) BETWEEN (NULL) AND (rt0.c2))) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (rt0.c4 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) BETWEEN (NULL) AND (rt0.c2))) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (rt0.c4 COLLATE BINARY)));
SELECT * FROM rt0 WHERE (((rt0.c1)!=(LIKELIHOOD('181387568', 0.5865552405369748))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<>(LIKELIHOOD('181387568', 0.5865552405369748)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)!=(LIKELIHOOD('181387568', 0.5865552405369748))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<>(LIKELIHOOD('181387568', 0.5865552405369748)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)!=(LIKELIHOOD('181387568', 0.5865552405369748))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CAST('k?,?Z!U	' AS BLOB) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST('k?,?Z!U	' AS BLOB) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CAST('k?,?Z!U	' AS BLOB) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST('k?,?Z!U	' AS BLOB) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CAST('k?,?Z!U	' AS BLOB) AS REAL));
SELECT * FROM rt0, vt0 WHERE (((((vt0.c0)AND(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c0)AND(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c0)AND(rt0.c3))) ISNULL));
SELECT ALL COUNT(*) FROM t0 INDEXED BY i64, rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END))) ORDER BY (t0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM t0 INDEXED BY i64, rt0 ORDER BY (t0.c0 IN ()));
SELECT ALL COUNT(*) FROM t0 INDEXED BY i64, rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END))) ORDER BY (t0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM t0 INDEXED BY i64, rt0 ORDER BY (t0.c0 IN ()));
SELECT ALL * FROM t0, vt0 WHERE (((((((((((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN NULL ELSE t0.c0 END)OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOT NULL))))OR(1152478617)))OR(((vt0.c0)>>(vt0.c0)))))OR((t0.c0 IN ())))) ORDER BY (((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END))<>((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN NULL ELSE t0.c0 END)OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOT NULL))))OR(1152478617)))OR(((vt0.c0)>>(vt0.c0)))))OR((t0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END))<>((((((vt0.c0)OR(vt0.c0)))AND(t0.c0))))));
SELECT ALL * FROM t0, vt0 WHERE (((((((((((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN NULL ELSE t0.c0 END)OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOT NULL))))OR(1152478617)))OR(((vt0.c0)>>(vt0.c0)))))OR((t0.c0 IN ())))) ORDER BY (((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END))<>((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN NULL ELSE t0.c0 END)OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOT NULL))))OR(1152478617)))OR(((vt0.c0)>>(vt0.c0)))))OR((t0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END))<>((((((vt0.c0)OR(vt0.c0)))AND(t0.c0))))));
SELECT ALL * FROM t0, vt0 WHERE (((((((((((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN NULL ELSE t0.c0 END)OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOT NULL))))OR(1152478617)))OR(((vt0.c0)>>(vt0.c0)))))OR((t0.c0 IN ())))) ORDER BY (((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END))<>((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (QUOTE(((rt0.c2)*(t0.c0))));
SELECT SUM(count) FROM (SELECT ((QUOTE(((rt0.c2)*(t0.c0)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (QUOTE(((rt0.c2)*(t0.c0))));
SELECT SUM(count) FROM (SELECT ((QUOTE(((rt0.c2)*(t0.c0)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (QUOTE(((rt0.c2)*(t0.c0))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (HEX(((rt0.c3)%(vt0.c0)))) ORDER BY x'58c9';
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c3)%(vt0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY x'58c9');
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (HEX(((rt0.c3)%(vt0.c0)))) ORDER BY x'58c9';
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c3)%(vt0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY x'58c9');
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (HEX(((rt0.c3)%(vt0.c0)))) ORDER BY x'58c9';
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN t0 WHERE ((((((((rt0.c0))>((rt0.c4))))OR(((vt0.c0) IS FALSE))))OR((x'' IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0))>((rt0.c4))))OR(((vt0.c0) IS FALSE))))OR((x'' IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN t0 WHERE ((((((((rt0.c0))>((rt0.c4))))OR(((vt0.c0) IS FALSE))))OR((x'' IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0))>((rt0.c4))))OR(((vt0.c0) IS FALSE))))OR((x'' IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN t0 WHERE ((((((((rt0.c0))>((rt0.c4))))OR(((vt0.c0) IS FALSE))))OR((x'' IN (vt0.c0, vt0.c0)))));
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((- (NULL)))) WHERE ((((((rt0.c1, rt0.c2, rt0.c4)) BETWEEN ((rt0.c2, rt0.c4, t0.c0)) AND ((rt0.c2, rt0.c0, x''))))<=((+ (1794203347)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c2, rt0.c4)) BETWEEN ((rt0.c2, rt0.c4, t0.c0)) AND ((rt0.c2, rt0.c0, x''))))<=((+ (1794203347))))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((- (NULL)))));
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((- (NULL)))) WHERE ((((((rt0.c1, rt0.c2, rt0.c4)) BETWEEN ((rt0.c2, rt0.c4, t0.c0)) AND ((rt0.c2, rt0.c0, x''))))<=((+ (1794203347)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c2, rt0.c4)) BETWEEN ((rt0.c2, rt0.c4, t0.c0)) AND ((rt0.c2, rt0.c0, x''))))<=((+ (1794203347))))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((- (NULL)))));
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((- (NULL)))) WHERE ((((((rt0.c1, rt0.c2, rt0.c4)) BETWEEN ((rt0.c2, rt0.c4, t0.c0)) AND ((rt0.c2, rt0.c0, x''))))<=((+ (1794203347)))));
SELECT COUNT(*) FROM vt0 WHERE (NULLIF((~ (vt0.c0)), ((vt0.c0) IS TRUE))) ORDER BY ((NULL)&(vt0.c0)) COLLATE BINARY, (((vt0.c0) ISNULL) IN (((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((NULLIF((~ (vt0.c0)), ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL)&(vt0.c0)) COLLATE BINARY, (((vt0.c0) ISNULL) IN (((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE (NULLIF((~ (vt0.c0)), ((vt0.c0) IS TRUE))) ORDER BY ((NULL)&(vt0.c0)) COLLATE BINARY, (((vt0.c0) ISNULL) IN (((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((NULLIF((~ (vt0.c0)), ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL)&(vt0.c0)) COLLATE BINARY, (((vt0.c0) ISNULL) IN (((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE (NULLIF((~ (vt0.c0)), ((vt0.c0) IS TRUE))) ORDER BY ((NULL)&(vt0.c0)) COLLATE BINARY, (((vt0.c0) ISNULL) IN (((vt0.c0) NOTNULL)));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((- (vt0.c0))) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((- (vt0.c0))) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((- (vt0.c0))) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON (((vt0.c0, rt0.c1, 0.4296784083753976)) BETWEEN ((((vt0.c0)IS(rt0.c1)), CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c2)IS(rt0.c3)))) AND ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN t0.c0 WHEN rt0.c4 THEN t0.c0 WHEN 0.7896281583291326 THEN vt0.c0 ELSE rt0.c2 END, ((rt0.c1)>(vt0.c0)), ((t0.c0)==('5{*iOP0F'))))) WHERE (CASE ((rt0.c3)-(t0.c0))  WHEN (~ (rt0.c4)) THEN (+ (vt0.c0)) ELSE ((t0.c0)GLOB(rt0.c3)) END) ORDER BY (CAST(rt0.c3 AS BLOB) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3)-(t0.c0))  WHEN (~ (rt0.c4)) THEN (+ (vt0.c0)) ELSE ((t0.c0)GLOB(rt0.c3)) END) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON (((vt0.c0, rt0.c1, 0.4296784083753976)) BETWEEN ((((vt0.c0)IS(rt0.c1)), CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c2)IS(rt0.c3)))) AND ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN t0.c0 WHEN rt0.c4 THEN t0.c0 WHEN 0.7896281583291326 THEN vt0.c0 ELSE rt0.c2 END, ((rt0.c1)>(vt0.c0)), ((t0.c0)==('5{*iOP0F'))))) ORDER BY (CAST(rt0.c3 AS BLOB) IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON (((vt0.c0, rt0.c1, 0.4296784083753976)) BETWEEN ((((vt0.c0)IS(rt0.c1)), CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c2)IS(rt0.c3)))) AND ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN t0.c0 WHEN rt0.c4 THEN t0.c0 WHEN 0.7896281583291326 THEN vt0.c0 ELSE rt0.c2 END, ((rt0.c1)>(vt0.c0)), ((t0.c0)==('5{*iOP0F'))))) WHERE (CASE ((rt0.c3)-(t0.c0))  WHEN (~ (rt0.c4)) THEN (+ (vt0.c0)) ELSE ((t0.c0)GLOB(rt0.c3)) END) ORDER BY (CAST(rt0.c3 AS BLOB) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3)-(t0.c0))  WHEN (~ (rt0.c4)) THEN (+ (vt0.c0)) ELSE ((t0.c0)GLOB(rt0.c3)) END) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON (((vt0.c0, rt0.c1, 0.4296784083753976)) BETWEEN ((((vt0.c0)IS(rt0.c1)), CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c2)IS(rt0.c3)))) AND ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN t0.c0 WHEN rt0.c4 THEN t0.c0 WHEN 0.7896281583291326 THEN vt0.c0 ELSE rt0.c2 END, ((rt0.c1)>(vt0.c0)), ((t0.c0)==('5{*iOP0F'))))) ORDER BY (CAST(rt0.c3 AS BLOB) IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON (((vt0.c0, rt0.c1, 0.4296784083753976)) BETWEEN ((((vt0.c0)IS(rt0.c1)), CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c2)IS(rt0.c3)))) AND ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN t0.c0 WHEN rt0.c4 THEN t0.c0 WHEN 0.7896281583291326 THEN vt0.c0 ELSE rt0.c2 END, ((rt0.c1)>(vt0.c0)), ((t0.c0)==('5{*iOP0F'))))) WHERE (CASE ((rt0.c3)-(t0.c0))  WHEN (~ (rt0.c4)) THEN (+ (vt0.c0)) ELSE ((t0.c0)GLOB(rt0.c3)) END) ORDER BY (CAST(rt0.c3 AS BLOB) IN ()) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(CAST(-457913940 AS TEXT))))AND((rt0.c3 IN (rt0.c0))))) ORDER BY 0.39776016705691486, CAST(rt0.c0 COLLATE RTRIM AS BLOB), CASE WHEN (1614230749 IN (rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN NULL END WHEN ((rt0.c1)>=(rt0.c4)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)) THEN rt0.c4 ELSE ((rt0.c4) ISNULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(CAST(-457913940 AS TEXT))))AND((rt0.c3 IN (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY 0.39776016705691486, CAST(rt0.c0 COLLATE RTRIM AS BLOB), CASE WHEN (1614230749 IN (rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN NULL END WHEN ((rt0.c1)>=(rt0.c4)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)) THEN rt0.c4 ELSE ((rt0.c4) ISNULL) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(CAST(-457913940 AS TEXT))))AND((rt0.c3 IN (rt0.c0))))) ORDER BY 0.39776016705691486, CAST(rt0.c0 COLLATE RTRIM AS BLOB), CASE WHEN (1614230749 IN (rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN NULL END WHEN ((rt0.c1)>=(rt0.c4)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)) THEN rt0.c4 ELSE ((rt0.c4) ISNULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(CAST(-457913940 AS TEXT))))AND((rt0.c3 IN (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY 0.39776016705691486, CAST(rt0.c0 COLLATE RTRIM AS BLOB), CASE WHEN (1614230749 IN (rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN NULL END WHEN ((rt0.c1)>=(rt0.c4)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)) THEN rt0.c4 ELSE ((rt0.c4) ISNULL) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(CAST(-457913940 AS TEXT))))AND((rt0.c3 IN (rt0.c0))))) ORDER BY 0.39776016705691486, CAST(rt0.c0 COLLATE RTRIM AS BLOB), CASE WHEN (1614230749 IN (rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN NULL END WHEN ((rt0.c1)>=(rt0.c4)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)) THEN rt0.c4 ELSE ((rt0.c4) ISNULL) END DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0) NOT NULL) IN ())) ORDER BY CASE WHEN (t0.c0 IN ()) THEN (+ (t0.c0)) WHEN ((t0.c0) IS FALSE) THEN ((t0.c0)AND(t0.c0)) WHEN (t0.c0 IN ()) THEN 1.594711057E9 ELSE t0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (t0.c0 IN ()) THEN (+ (t0.c0)) WHEN ((t0.c0) IS FALSE) THEN ((t0.c0)AND(t0.c0)) WHEN (t0.c0 IN ()) THEN 1.594711057E9 ELSE t0.c0 END  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c0) NOT NULL) IN ())) ORDER BY CASE WHEN (t0.c0 IN ()) THEN (+ (t0.c0)) WHEN ((t0.c0) IS FALSE) THEN ((t0.c0)AND(t0.c0)) WHEN (t0.c0 IN ()) THEN 1.594711057E9 ELSE t0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (t0.c0 IN ()) THEN (+ (t0.c0)) WHEN ((t0.c0) IS FALSE) THEN ((t0.c0)AND(t0.c0)) WHEN (t0.c0 IN ()) THEN 1.594711057E9 ELSE t0.c0 END  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c0) NOT NULL) IN ())) ORDER BY CASE WHEN (t0.c0 IN ()) THEN (+ (t0.c0)) WHEN ((t0.c0) IS FALSE) THEN ((t0.c0)AND(t0.c0)) WHEN (t0.c0 IN ()) THEN 1.594711057E9 ELSE t0.c0 END  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (((json_quote(rt0.c2))/(json_array_length(rt0.c4, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(rt0.c2))/(json_array_length(rt0.c4, rt0.c2)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((json_quote(rt0.c2))/(json_array_length(rt0.c4, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(rt0.c2))/(json_array_length(rt0.c4, rt0.c2)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c2)) BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((((rt0.c1) ISNULL))))) ORDER BY TYPEOF(((0X49d15997)OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((((rt0.c1) ISNULL))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY TYPEOF(((0x49d15997)OR(rt0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c2)) BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((((rt0.c1) ISNULL))))) ORDER BY TYPEOF(((0X49d15997)OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((((rt0.c1) ISNULL))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY TYPEOF(((0x49d15997)OR(rt0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c2)) BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((((rt0.c1) ISNULL))))) ORDER BY TYPEOF(((0X49d15997)OR(rt0.c0)));
SELECT ALL * FROM vt0, t0 WHERE (CASE ((vt0.c0)LIKE(vt0.c0))  WHEN ((((((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) WHEN 0.22932780520872165 THEN LIKELY(vt0.c0) WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(t0.c0 AS TEXT) END) ORDER BY (((((t0.c0))<(('-1514164573'))))GLOB(t0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)LIKE(vt0.c0))  WHEN ((((((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) WHEN 0.22932780520872165 THEN LIKELY(vt0.c0) WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(t0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c0))<(('-1514164573'))))GLOB(t0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (CASE ((vt0.c0)LIKE(vt0.c0))  WHEN ((((((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) WHEN 0.22932780520872165 THEN LIKELY(vt0.c0) WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(t0.c0 AS TEXT) END) ORDER BY (((((t0.c0))<(('-1514164573'))))GLOB(t0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)LIKE(vt0.c0))  WHEN ((((((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) WHEN 0.22932780520872165 THEN LIKELY(vt0.c0) WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(t0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c0))<(('-1514164573'))))GLOB(t0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (CASE ((vt0.c0)LIKE(vt0.c0))  WHEN ((((((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) WHEN 0.22932780520872165 THEN LIKELY(vt0.c0) WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(t0.c0 AS TEXT) END) ORDER BY (((((t0.c0))<(('-1514164573'))))GLOB(t0.c0)) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE NOCASE) ORDER BY CAST((((rt0.c3))>=((vt0.c0))) AS NUMERIC) DESC  NULLS LAST, CASE WHEN (('EéA2u')IS(rt0.c0)) THEN rt0.c0 COLLATE RTRIM END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((((rt0.c3))>=((vt0.c0))) AS NUMERIC) DESC  NULLS LAST, CASE WHEN (('EéA2u')IS(rt0.c0)) THEN rt0.c0 COLLATE RTRIM END  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE NOCASE) ORDER BY CAST((((rt0.c3))>=((vt0.c0))) AS NUMERIC) DESC  NULLS LAST, CASE WHEN (('EéA2u')IS(rt0.c0)) THEN rt0.c0 COLLATE RTRIM END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((((rt0.c3))>=((vt0.c0))) AS NUMERIC) DESC  NULLS LAST, CASE WHEN (('EéA2u')IS(rt0.c0)) THEN rt0.c0 COLLATE RTRIM END  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE NOCASE) ORDER BY CAST((((rt0.c3))>=((vt0.c0))) AS NUMERIC) DESC  NULLS LAST, CASE WHEN (('EéA2u')IS(rt0.c0)) THEN rt0.c0 COLLATE RTRIM END  NULLS LAST;
SELECT * FROM t0 WHERE ((~ (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN 0.27845345791919995 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN 0.27845345791919995 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN 0.27845345791919995 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN 0.27845345791919995 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN 0.27845345791919995 ELSE t0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((((0.07241461700233309) IS TRUE))>('' COLLATE BINARY)) RIGHT OUTER JOIN t0 ON CASE WHEN ((rt0.c2)<<(rt0.c0)) THEN ((rt0.c1)GLOB(NULL)) WHEN rt0.c4 THEN '' WHEN IFNULL(DISTINCT rt0.c0, rt0.c3) THEN ((t0.c0) BETWEEN (0.42793448830049574) AND (vt0.c0)) END WHERE (LOWER(DISTINCT rt0.c4 COLLATE BINARY)) ORDER BY ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (NULL) AND (((vt0.c0)>=(rt0.c2)))) DESC  NULLS LAST, load_extension(((rt0.c3)==(rt0.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt0.c4 COLLATE BINARY)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((0.07241461700233309) IS TRUE))>('' COLLATE BINARY)) RIGHT OUTER JOIN t0 ON CASE WHEN ((rt0.c2)<<(rt0.c0)) THEN ((rt0.c1)GLOB(NULL)) WHEN rt0.c4 THEN '' WHEN IFNULL(DISTINCT rt0.c0, rt0.c3) THEN ((t0.c0) BETWEEN (0.42793448830049574) AND (vt0.c0)) END ORDER BY ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (NULL) AND (((vt0.c0)>=(rt0.c2)))) DESC  NULLS LAST, load_extension(((rt0.c3)==(rt0.c3)))  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((((0.07241461700233309) IS TRUE))>('' COLLATE BINARY)) RIGHT OUTER JOIN t0 ON CASE WHEN ((rt0.c2)<<(rt0.c0)) THEN ((rt0.c1)GLOB(NULL)) WHEN rt0.c4 THEN '' WHEN IFNULL(DISTINCT rt0.c0, rt0.c3) THEN ((t0.c0) BETWEEN (0.42793448830049574) AND (vt0.c0)) END WHERE (LOWER(DISTINCT rt0.c4 COLLATE BINARY)) ORDER BY ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (NULL) AND (((vt0.c0)>=(rt0.c2)))) DESC  NULLS LAST, load_extension(((rt0.c3)==(rt0.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt0.c4 COLLATE BINARY)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((0.07241461700233309) IS TRUE))>('' COLLATE BINARY)) RIGHT OUTER JOIN t0 ON CASE WHEN ((rt0.c2)<<(rt0.c0)) THEN ((rt0.c1)GLOB(NULL)) WHEN rt0.c4 THEN '' WHEN IFNULL(DISTINCT rt0.c0, rt0.c3) THEN ((t0.c0) BETWEEN (0.42793448830049574) AND (vt0.c0)) END ORDER BY ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (NULL) AND (((vt0.c0)>=(rt0.c2)))) DESC  NULLS LAST, load_extension(((rt0.c3)==(rt0.c3)))  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((((0.07241461700233309) IS TRUE))>('' COLLATE BINARY)) RIGHT OUTER JOIN t0 ON CASE WHEN ((rt0.c2)<<(rt0.c0)) THEN ((rt0.c1)GLOB(NULL)) WHEN rt0.c4 THEN '' WHEN IFNULL(DISTINCT rt0.c0, rt0.c3) THEN ((t0.c0) BETWEEN (0.42793448830049574) AND (vt0.c0)) END WHERE (LOWER(DISTINCT rt0.c4 COLLATE BINARY)) ORDER BY ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (NULL) AND (((vt0.c0)>=(rt0.c2)))) DESC  NULLS LAST, load_extension(((rt0.c3)==(rt0.c3)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((CAST(rt0.c3 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((CAST(rt0.c3 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((CAST(rt0.c3 AS INTEGER)) NOTNULL));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY (- (((vt0.c0)&(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)&(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY (- (((vt0.c0)&(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)&(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY (- (((vt0.c0)&(vt0.c0))))  NULLS LAST;
SELECT * FROM t0 WHERE (NULL) ORDER BY (((((((((((((((t0.c0, 0.953774141060755, x'6fea'))=((t0.c0, t0.c0, t0.c0))))OR(t0.c0)))OR(((t0.c0)AND(t0.c0)))))AND(t0.c0)))OR(t0.c0)))AND(((t0.c0)OR(t0.c0)))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((((((((((((((t0.c0, 0.953774141060755, x'6fea'))=((t0.c0, t0.c0, t0.c0))))OR(t0.c0)))OR(((t0.c0)AND(t0.c0)))))AND(t0.c0)))OR(t0.c0)))AND(((t0.c0)OR(t0.c0)))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT * FROM t0 WHERE (NULL) ORDER BY (((((((((((((((t0.c0, 0.953774141060755, x'6fea'))=((t0.c0, t0.c0, t0.c0))))OR(t0.c0)))OR(((t0.c0)AND(t0.c0)))))AND(t0.c0)))OR(t0.c0)))AND(((t0.c0)OR(t0.c0)))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((((((((((((((t0.c0, 0.953774141060755, x'6fea'))=((t0.c0, t0.c0, t0.c0))))OR(t0.c0)))OR(((t0.c0)AND(t0.c0)))))AND(t0.c0)))OR(t0.c0)))AND(((t0.c0)OR(t0.c0)))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT * FROM t0 WHERE (NULL) ORDER BY (((((((((((((((t0.c0, 0.953774141060755, x'6fea'))=((t0.c0, t0.c0, t0.c0))))OR(t0.c0)))OR(((t0.c0)AND(t0.c0)))))AND(t0.c0)))OR(t0.c0)))AND(((t0.c0)OR(t0.c0)))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((STRFTIME(rt0.c3, vt0.c0, rt0.c2))<(((vt0.c0) NOT NULL)))) ORDER BY ((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN x'' WHEN rt0.c3 THEN rt0.c1 END)))OR(rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(rt0.c3, vt0.c0, rt0.c2))<(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN x'' WHEN rt0.c3 THEN rt0.c1 END)))OR(rt0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((STRFTIME(rt0.c3, vt0.c0, rt0.c2))<(((vt0.c0) NOT NULL)))) ORDER BY ((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN x'' WHEN rt0.c3 THEN rt0.c1 END)))OR(rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(rt0.c3, vt0.c0, rt0.c2))<(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN x'' WHEN rt0.c3 THEN rt0.c1 END)))OR(rt0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((STRFTIME(rt0.c3, vt0.c0, rt0.c2))<(((vt0.c0) NOT NULL)))) ORDER BY ((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN x'' WHEN rt0.c3 THEN rt0.c1 END)))OR(rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CASE CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 END  WHEN ((rt0.c3)<=(rt0.c3)) THEN rt0.c3 END) ORDER BY ((((((((LOWER(DISTINCT rt0.c0))OR(CASE t0.c0  WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c0 END)))OR((+ (vt0.c0)))))AND(CAST(rt0.c2 AS BLOB))))AND((rt0.c3 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 END  WHEN ((rt0.c3)<=(rt0.c3)) THEN rt0.c3 END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((LOWER(DISTINCT rt0.c0))OR(CASE t0.c0  WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c0 END)))OR((+ (vt0.c0)))))AND(CAST(rt0.c2 AS BLOB))))AND((rt0.c3 IN ()))) ASC);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CASE CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 END  WHEN ((rt0.c3)<=(rt0.c3)) THEN rt0.c3 END) ORDER BY ((((((((LOWER(DISTINCT rt0.c0))OR(CASE t0.c0  WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c0 END)))OR((+ (vt0.c0)))))AND(CAST(rt0.c2 AS BLOB))))AND((rt0.c3 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 END  WHEN ((rt0.c3)<=(rt0.c3)) THEN rt0.c3 END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((LOWER(DISTINCT rt0.c0))OR(CASE t0.c0  WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c0 END)))OR((+ (vt0.c0)))))AND(CAST(rt0.c2 AS BLOB))))AND((rt0.c3 IN ()))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN '282932635' WHEN rt0.c4 THEN 'Xcè½P' END)) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN '282932635' WHEN rt0.c4 THEN 'Xcè½P' END)) AND ((vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN '282932635' WHEN rt0.c4 THEN 'Xcè½P' END)) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN '282932635' WHEN rt0.c4 THEN 'Xcè½P' END)) AND ((vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN '282932635' WHEN rt0.c4 THEN 'Xcè½P' END)) AND ((vt0.c0))));
SELECT * FROM vt0, t0, rt0 WHERE ('2144280968');
SELECT SUM(count) FROM (SELECT ALL (('2144280968') IS TRUE)  as count FROM vt0 NOT INDEXED, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ('2144280968');
SELECT SUM(count) FROM (SELECT ALL (('2144280968') IS TRUE)  as count FROM vt0 NOT INDEXED, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ('2144280968');
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) IS TRUE)) ORDER BY ((((- (t0.c0))))<=((((t0.c0) NOT NULL))))  NULLS LAST, ((CAST(t0.c0 AS BLOB))>=(t0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((((- (t0.c0))))<=((((t0.c0) NOT NULL))))  NULLS LAST, ((CAST(t0.c0 AS BLOB))>=(t0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) IS TRUE)) ORDER BY ((((- (t0.c0))))<=((((t0.c0) NOT NULL))))  NULLS LAST, ((CAST(t0.c0 AS BLOB))>=(t0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((((- (t0.c0))))<=((((t0.c0) NOT NULL))))  NULLS LAST, ((CAST(t0.c0 AS BLOB))>=(t0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) IS TRUE)) ORDER BY ((((- (t0.c0))))<=((((t0.c0) NOT NULL))))  NULLS LAST, ((CAST(t0.c0 AS BLOB))>=(t0.c0)) ASC  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN t0 ON (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))<((((vt0.c0) NOTNULL)))) WHERE (((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE BINARY) ORDER BY (NOT (x'')) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))<((((vt0.c0) NOTNULL)))) ORDER BY (NOT (x'')) DESC);
SELECT * FROM vt0 CROSS JOIN t0 ON (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))<((((vt0.c0) NOTNULL)))) WHERE (((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE BINARY) ORDER BY (NOT (x'')) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))<((((vt0.c0) NOTNULL)))) ORDER BY (NOT (x'')) DESC);
SELECT * FROM vt0 CROSS JOIN t0 ON (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))<((((vt0.c0) NOTNULL)))) WHERE (((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE BINARY) ORDER BY (NOT (x'')) DESC;
SELECT ALL * FROM t0, rt0, vt0 WHERE (SQLITE_COMPILEOPTION_GET(CASE WHEN 0.1010188896753772 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN 0Xffffffff939d5641 WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 END)) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (t0.c0))) AND ((rt0.c1 IN ()))), ((t0.c0) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(CASE WHEN 0.1010188896753772 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN 0Xffffffff939d5641 WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (t0.c0))) AND ((rt0.c1 IN ()))), ((t0.c0) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt0 WHERE (SQLITE_COMPILEOPTION_GET(CASE WHEN 0.1010188896753772 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN 0Xffffffff939d5641 WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 END)) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (t0.c0))) AND ((rt0.c1 IN ()))), ((t0.c0) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(CASE WHEN 0.1010188896753772 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN 0Xffffffff939d5641 WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (t0.c0))) AND ((rt0.c1 IN ()))), ((t0.c0) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt0 WHERE (SQLITE_COMPILEOPTION_GET(CASE WHEN 0.1010188896753772 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN 0Xffffffff939d5641 WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 END)) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (t0.c0))) AND ((rt0.c1 IN ()))), ((t0.c0) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE (- (rt0.c1))  WHEN CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END THEN 1.00528115E8 WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c3)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((vt0.c0)GLOB(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (rt0.c1))  WHEN CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END THEN 1.00528115E8 WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c3)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((vt0.c0)GLOB(rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE (- (rt0.c1))  WHEN CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END THEN 1.00528115E8 WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c3)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((vt0.c0)GLOB(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (rt0.c1))  WHEN CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END THEN 1.00528115E8 WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c3)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((vt0.c0)GLOB(rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE (- (rt0.c1))  WHEN CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END THEN 1.00528115E8 WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c3)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((vt0.c0)GLOB(rt0.c2)) END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS INTEGER))&(-1931069616)) WHERE ((((((t0.c0))<>((t0.c0))))>((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))!=((t0.c0))))>((- (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS INTEGER))&(-1931069616)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS INTEGER))&(-1931069616)) WHERE ((((((t0.c0))<>((t0.c0))))>((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))!=((t0.c0))))>((- (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS INTEGER))&(-1931069616)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS INTEGER))&(-1931069616)) WHERE ((((((t0.c0))<>((t0.c0))))>((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON (- (CAST(rt0.c3 AS INTEGER))) INNER JOIN rt0 ON CAST(0.9450490655896775 AS INTEGER) COLLATE RTRIM WHERE ((LTRIM(vt0.c0, t0.c0) IN ())) ORDER BY 0.009271032883211183 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((LTRIM(vt0.c0, t0.c0) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (- (CAST(rt0.c3 AS INTEGER))) INNER JOIN rt0 ON CAST(0.9450490655896775 AS INTEGER) COLLATE RTRIM ORDER BY 0.009271032883211183 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON (- (CAST(rt0.c3 AS INTEGER))) INNER JOIN rt0 ON CAST(0.9450490655896775 AS INTEGER) COLLATE RTRIM WHERE ((LTRIM(vt0.c0, t0.c0) IN ())) ORDER BY 0.009271032883211183 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((LTRIM(vt0.c0, t0.c0) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (- (CAST(rt0.c3 AS INTEGER))) INNER JOIN rt0 ON CAST(0.9450490655896775 AS INTEGER) COLLATE RTRIM ORDER BY 0.009271032883211183 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON (- (CAST(rt0.c3 AS INTEGER))) INNER JOIN rt0 ON CAST(0.9450490655896775 AS INTEGER) COLLATE RTRIM WHERE ((LTRIM(vt0.c0, t0.c0) IN ())) ORDER BY 0.009271032883211183 ASC  NULLS LAST;
SELECT * FROM t0, rt0, vt0 WHERE ((((rt0.c1 IN ())) ISNULL)) ORDER BY ((((vt0.c0) BETWEEN (rt0.c4) AND (vt0.c0)))=(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((vt0.c0) BETWEEN (rt0.c4) AND (vt0.c0)))==(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4))))  NULLS FIRST);
SELECT * FROM t0, rt0, vt0 WHERE ((((rt0.c1 IN ())) ISNULL)) ORDER BY ((((vt0.c0) BETWEEN (rt0.c4) AND (vt0.c0)))=(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((vt0.c0) BETWEEN (rt0.c4) AND (vt0.c0)))==(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4))))  NULLS FIRST);
SELECT * FROM t0, rt0, vt0 WHERE ((((rt0.c1 IN ())) ISNULL)) ORDER BY ((((vt0.c0) BETWEEN (rt0.c4) AND (vt0.c0)))=(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((((((TRIM(DISTINCT vt0.c0))AND(LTRIM(vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS BLOB))))AND(CASE WHEN t0.c0 THEN NULL END)))OR(x'eb00')) WHERE (((((CASE ''  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END)AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE ''  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END)AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((((((TRIM(DISTINCT vt0.c0))AND(LTRIM(vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS BLOB))))AND(CASE WHEN t0.c0 THEN NULL END)))OR(x'eb00')));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((((((TRIM(DISTINCT vt0.c0))AND(LTRIM(vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS BLOB))))AND(CASE WHEN t0.c0 THEN NULL END)))OR(x'eb00')) WHERE (((((CASE ''  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END)AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE ''  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END)AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((((((TRIM(DISTINCT vt0.c0))AND(LTRIM(vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS BLOB))))AND(CASE WHEN t0.c0 THEN NULL END)))OR(x'eb00')));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((((((TRIM(DISTINCT vt0.c0))AND(LTRIM(vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS BLOB))))AND(CASE WHEN t0.c0 THEN NULL END)))OR(x'eb00')) WHERE (((((CASE ''  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END)AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))OR(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c4)IS NOT(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4)IS NOT(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c4)IS NOT(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4)IS NOT(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c4)IS NOT(rt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (- (t0.c0)) WHEN CAST(t0.c0 AS BLOB) THEN CAST(t0.c0 AS BLOB) WHEN (NOT (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN (((t0.c0))!=((t0.c0))) THEN ((t0.c0)IS(t0.c0)) WHEN t0.c0 THEN (~ (t0.c0)) ELSE UNLIKELY(DISTINCT t0.c0) END) ORDER BY (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(0.9942496778201524)))AND(t0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c0 IN ())  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (- (t0.c0)) WHEN CAST(t0.c0 AS BLOB) THEN CAST(t0.c0 AS BLOB) WHEN (NOT (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN (((t0.c0))!=((t0.c0))) THEN ((t0.c0)IS(t0.c0)) WHEN t0.c0 THEN (~ (t0.c0)) ELSE UNLIKELY(DISTINCT t0.c0) END) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(0.9942496778201524)))AND(t0.c0)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (- (t0.c0)) WHEN CAST(t0.c0 AS BLOB) THEN CAST(t0.c0 AS BLOB) WHEN (NOT (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN (((t0.c0))!=((t0.c0))) THEN ((t0.c0)IS(t0.c0)) WHEN t0.c0 THEN (~ (t0.c0)) ELSE UNLIKELY(DISTINCT t0.c0) END) ORDER BY (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(0.9942496778201524)))AND(t0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c0 IN ())  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (- (t0.c0)) WHEN CAST(t0.c0 AS BLOB) THEN CAST(t0.c0 AS BLOB) WHEN (NOT (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN (((t0.c0))!=((t0.c0))) THEN ((t0.c0)IS(t0.c0)) WHEN t0.c0 THEN (~ (t0.c0)) ELSE UNLIKELY(DISTINCT t0.c0) END) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(0.9942496778201524)))AND(t0.c0)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (- (t0.c0)) WHEN CAST(t0.c0 AS BLOB) THEN CAST(t0.c0 AS BLOB) WHEN (NOT (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN (((t0.c0))!=((t0.c0))) THEN ((t0.c0)IS(t0.c0)) WHEN t0.c0 THEN (~ (t0.c0)) ELSE UNLIKELY(DISTINCT t0.c0) END) ORDER BY (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(0.9942496778201524)))AND(t0.c0)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))%(LIKELIHOOD(t0.c0, 0.6569261816885961)))) ORDER BY (+ ((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))%(LIKELIHOOD(t0.c0, 0.6569261816885961)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (+ ((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))%(LIKELIHOOD(t0.c0, 0.6569261816885961)))) ORDER BY (+ ((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))%(LIKELIHOOD(t0.c0, 0.6569261816885961)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (+ ((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))%(LIKELIHOOD(t0.c0, 0.6569261816885961)))) ORDER BY (+ ((t0.c0 IN ())));
SELECT * FROM rt0, t0 WHERE ((((((rt0.c1 IN (rt0.c0)))AND(rt0.c3)))OR(((((((((t0.c0)AND(t0.c0)))OR(x'')))OR(rt0.c4)))OR(rt0.c1))))) ORDER BY ((CASE rt0.c3  WHEN NULL THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c3 END) NOT NULL)  NULLS LAST, CASE WHEN ((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN (((('W')OR(rt0.c3)))OR(rt0.c1)) ELSE (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN (rt0.c0)))AND(rt0.c3)))OR(((((((((t0.c0)AND(t0.c0)))OR(x'')))OR(rt0.c4)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE rt0.c3  WHEN NULL THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c3 END) NOT NULL)  NULLS LAST, CASE WHEN ((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN (((('W')OR(rt0.c3)))OR(rt0.c1)) ELSE (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0))) END);
SELECT * FROM rt0, t0 WHERE ((((((rt0.c1 IN (rt0.c0)))AND(rt0.c3)))OR(((((((((t0.c0)AND(t0.c0)))OR(x'')))OR(rt0.c4)))OR(rt0.c1))))) ORDER BY ((CASE rt0.c3  WHEN NULL THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c3 END) NOT NULL)  NULLS LAST, CASE WHEN ((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN (((('W')OR(rt0.c3)))OR(rt0.c1)) ELSE (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN (rt0.c0)))AND(rt0.c3)))OR(((((((((t0.c0)AND(t0.c0)))OR(x'')))OR(rt0.c4)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE rt0.c3  WHEN NULL THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c3 END) NOT NULL)  NULLS LAST, CASE WHEN ((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN (((('W')OR(rt0.c3)))OR(rt0.c1)) ELSE (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0))) END);
SELECT * FROM rt0, t0 WHERE ((((((rt0.c1 IN (rt0.c0)))AND(rt0.c3)))OR(((((((((t0.c0)AND(t0.c0)))OR(x'')))OR(rt0.c4)))OR(rt0.c1))))) ORDER BY ((CASE rt0.c3  WHEN NULL THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c3 END) NOT NULL)  NULLS LAST, CASE WHEN ((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN (((('W')OR(rt0.c3)))OR(rt0.c1)) ELSE (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0))) END;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS INTEGER));
SELECT ALL * FROM t0, vt0, rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (TOTAL_CHANGES());
SELECT ALL * FROM vt0, rt0 NATURAL JOIN t0 WHERE ((('' COLLATE NOCASE) IS TRUE)) ORDER BY ((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))<(((((rt0.c2)AND(t0.c0)))AND(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('' COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0 ORDER BY ((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))<(((((rt0.c2)AND(t0.c0)))AND(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN t0 WHERE ((('' COLLATE NOCASE) IS TRUE)) ORDER BY ((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))<(((((rt0.c2)AND(t0.c0)))AND(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('' COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0 ORDER BY ((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))<(((((rt0.c2)AND(t0.c0)))AND(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN t0 WHERE ((('' COLLATE NOCASE) IS TRUE)) ORDER BY ((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))<(((((rt0.c2)AND(t0.c0)))AND(rt0.c1))))  NULLS FIRST;
SELECT * FROM vt0, t0, rt0 WHERE (((((vt0.c0))<>((rt0.c1))) IN ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))<>((rt0.c1))) IN ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((vt0.c0))<>((rt0.c1))) IN ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))<>((rt0.c1))) IN ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((vt0.c0))<>((rt0.c1))) IN ((rt0.c2 IN ()))));
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c2)=(((((((((rt0.c1)AND(t0.c0)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c4))))) ORDER BY (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((((rt0.c1)LIKE(rt0.c4))))) ASC  NULLS FIRST, ((((((((rt0.c2)OR(t0.c0)))OR(x'dd360277')))OR((((rt0.c4, rt0.c2, x'')) NOT BETWEEN ((t0.c0, rt0.c1, x'e423')) AND ((t0.c0, rt0.c0, rt0.c3))))))OR(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)=(((((((((rt0.c1)AND(t0.c0)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((((rt0.c1)LIKE(rt0.c4))))) ASC  NULLS FIRST, ((((((((rt0.c2)OR(t0.c0)))OR(x'dd360277')))OR((((rt0.c4, rt0.c2, x'')) NOT BETWEEN ((t0.c0, rt0.c1, x'e423')) AND ((t0.c0, rt0.c0, rt0.c3))))))OR(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)));
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c2)=(((((((((rt0.c1)AND(t0.c0)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c4))))) ORDER BY (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((((rt0.c1)LIKE(rt0.c4))))) ASC  NULLS FIRST, ((((((((rt0.c2)OR(t0.c0)))OR(x'dd360277')))OR((((rt0.c4, rt0.c2, x'')) NOT BETWEEN ((t0.c0, rt0.c1, x'e423')) AND ((t0.c0, rt0.c0, rt0.c3))))))OR(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)=(((((((((rt0.c1)AND(t0.c0)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((((rt0.c1)LIKE(rt0.c4))))) ASC  NULLS FIRST, ((((((((rt0.c2)OR(t0.c0)))OR(x'dd360277')))OR((((rt0.c4, rt0.c2, x'')) NOT BETWEEN ((t0.c0, rt0.c1, x'e423')) AND ((t0.c0, rt0.c0, rt0.c3))))))OR(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)));
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c2)=(((((((((rt0.c1)AND(t0.c0)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c4))))) ORDER BY (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((((rt0.c1)LIKE(rt0.c4))))) ASC  NULLS FIRST, ((((((((rt0.c2)OR(t0.c0)))OR(x'dd360277')))OR((((rt0.c4, rt0.c2, x'')) NOT BETWEEN ((t0.c0, rt0.c1, x'e423')) AND ((t0.c0, rt0.c0, rt0.c3))))))OR(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END));
SELECT * FROM rt0, vt0 WHERE ('282932635') ORDER BY HEX(DISTINCT x'');
SELECT SUM(count) FROM (SELECT (('282932635') IS TRUE)  as count FROM rt0, vt0 ORDER BY HEX(DISTINCT x''));
SELECT * FROM rt0, vt0 WHERE ('282932635') ORDER BY HEX(DISTINCT x'');
SELECT SUM(count) FROM (SELECT (('282932635') IS TRUE)  as count FROM rt0, vt0 ORDER BY HEX(DISTINCT x''));
SELECT * FROM rt0, vt0 WHERE ('282932635') ORDER BY HEX(DISTINCT x'');
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0))) IS TRUE)) ORDER BY (NOT (rt0.c4)) DESC, (CASE WHEN rt0.c1 THEN rt0.c4 END IN ()) ASC  NULLS FIRST, 'LjQU';
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c4)) DESC, (CASE WHEN rt0.c1 THEN rt0.c4 END IN ()) ASC  NULLS FIRST, 'LjQU');
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0))) IS TRUE)) ORDER BY (NOT (rt0.c4)) DESC, (CASE WHEN rt0.c1 THEN rt0.c4 END IN ()) ASC  NULLS FIRST, 'LjQU';
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c4)) DESC, (CASE WHEN rt0.c1 THEN rt0.c4 END IN ()) ASC  NULLS FIRST, 'LjQU');
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0))) IS TRUE)) ORDER BY (NOT (rt0.c4)) DESC, (CASE WHEN rt0.c1 THEN rt0.c4 END IN ()) ASC  NULLS FIRST, 'LjQU';
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c0)>(t0.c0)) IN (LOWER(t0.c0)))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)>(t0.c0)) IN (LOWER(t0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0 DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c0)>(t0.c0)) IN (LOWER(t0.c0)))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)>(t0.c0)) IN (LOWER(t0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0 DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c0)>(t0.c0)) IN (LOWER(t0.c0)))) ORDER BY t0.c0 DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC;
SELECT ALL * FROM t0, vt0 CROSS JOIN rt0 ON (((LIKE(t0.c0, rt0.c4)))<((UPPER(DISTINCT t0.c0)))) WHERE (CASE (((rt0.c2, rt0.c0, rt0.c0, rt0.c3, rt0.c3))>((rt0.c2, NULL, rt0.c1, rt0.c4, rt0.c0)))  WHEN rt0.c3 COLLATE BINARY THEN CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 ELSE rt0.c3 END WHEN ((rt0.c0)/(rt0.c4)) THEN (((rt0.c4, rt0.c2, NULL))>=((x'', t0.c0, rt0.c2))) WHEN (((vt0.c0)) NOT BETWEEN ((x'739a11c0')) AND ((t0.c0))) THEN '-1917610294' ELSE -8.20548257E8 END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2, rt0.c0, rt0.c0, rt0.c3, rt0.c3))>((rt0.c2, NULL, rt0.c1, rt0.c4, rt0.c0)))  WHEN rt0.c3 COLLATE BINARY THEN CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 ELSE rt0.c3 END WHEN ((rt0.c0)/(rt0.c4)) THEN (((rt0.c4, rt0.c2, NULL))>=((x'', t0.c0, rt0.c2))) WHEN (((vt0.c0)) NOT BETWEEN ((x'739a11c0')) AND ((t0.c0))) THEN '-1917610294' ELSE -8.20548257E8 END) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON (((LIKE(t0.c0, rt0.c4)))<((UPPER(DISTINCT t0.c0)))));
SELECT ALL * FROM t0, vt0 CROSS JOIN rt0 ON (((LIKE(t0.c0, rt0.c4)))<((UPPER(DISTINCT t0.c0)))) WHERE (CASE (((rt0.c2, rt0.c0, rt0.c0, rt0.c3, rt0.c3))>((rt0.c2, NULL, rt0.c1, rt0.c4, rt0.c0)))  WHEN rt0.c3 COLLATE BINARY THEN CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 ELSE rt0.c3 END WHEN ((rt0.c0)/(rt0.c4)) THEN (((rt0.c4, rt0.c2, NULL))>=((x'', t0.c0, rt0.c2))) WHEN (((vt0.c0)) NOT BETWEEN ((x'739a11c0')) AND ((t0.c0))) THEN '-1917610294' ELSE -8.20548257E8 END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2, rt0.c0, rt0.c0, rt0.c3, rt0.c3))>((rt0.c2, NULL, rt0.c1, rt0.c4, rt0.c0)))  WHEN rt0.c3 COLLATE BINARY THEN CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 ELSE rt0.c3 END WHEN ((rt0.c0)/(rt0.c4)) THEN (((rt0.c4, rt0.c2, NULL))>=((x'', t0.c0, rt0.c2))) WHEN (((vt0.c0)) NOT BETWEEN ((x'739a11c0')) AND ((t0.c0))) THEN '-1917610294' ELSE -8.20548257E8 END) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON (((LIKE(t0.c0, rt0.c4)))<((UPPER(DISTINCT t0.c0)))));
SELECT ALL * FROM t0, vt0 CROSS JOIN rt0 ON (((LIKE(t0.c0, rt0.c4)))<((UPPER(DISTINCT t0.c0)))) WHERE (CASE (((rt0.c2, rt0.c0, rt0.c0, rt0.c3, rt0.c3))>((rt0.c2, NULL, rt0.c1, rt0.c4, rt0.c0)))  WHEN rt0.c3 COLLATE BINARY THEN CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 ELSE rt0.c3 END WHEN ((rt0.c0)/(rt0.c4)) THEN (((rt0.c4, rt0.c2, NULL))>=((x'', t0.c0, rt0.c2))) WHEN (((vt0.c0)) NOT BETWEEN ((x'739a11c0')) AND ((t0.c0))) THEN '-1917610294' ELSE -8.20548257E8 END);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) NOT NULL));
SELECT * FROM rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS BLOB));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c0) IS FALSE)) ORDER BY ((MIN(rt0.c2, rt0.c2)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3))) AND (((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS FALSE)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((MIN(rt0.c2, rt0.c2)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3))) AND (((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c0) IS FALSE)) ORDER BY ((MIN(rt0.c2, rt0.c2)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3))) AND (((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS FALSE)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((MIN(rt0.c2, rt0.c2)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3))) AND (((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c0) IS FALSE)) ORDER BY ((MIN(rt0.c2, rt0.c2)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3))) AND (((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c2)-(x'3dbe')))-(TRIM(t0.c0, rt0.c2)))) ORDER BY ((CAST(rt0.c0 AS NUMERIC))||(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)-(x'3dbe')))-(TRIM(t0.c0, rt0.c2)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC))||(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c2)-(x'3dbe')))-(TRIM(t0.c0, rt0.c2)))) ORDER BY ((CAST(rt0.c0 AS NUMERIC))||(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)-(x'3dbe')))-(TRIM(t0.c0, rt0.c2)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC))||(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c2)-(x'3dbe')))-(TRIM(t0.c0, rt0.c2)))) ORDER BY ((CAST(rt0.c0 AS NUMERIC))||(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((- (LIKE(-5.94358342E8, vt0.c0)))) ORDER BY (((- (vt0.c0))) BETWEEN (((vt0.c0)IS NOT(NULL))) AND (-1987473349)) DESC;
SELECT SUM(count) FROM (SELECT (((- (LIKE(-5.94358342E8, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) BETWEEN (((vt0.c0)IS NOT(NULL))) AND (-1987473349)) DESC);
SELECT ALL * FROM vt0 WHERE ((- (LIKE(-5.94358342E8, vt0.c0)))) ORDER BY (((- (vt0.c0))) BETWEEN (((vt0.c0)IS NOT(NULL))) AND (-1987473349)) DESC;
SELECT SUM(count) FROM (SELECT (((- (LIKE(-5.94358342E8, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) BETWEEN (((vt0.c0)IS NOT(NULL))) AND (-1987473349)) DESC);
SELECT ALL * FROM vt0 WHERE ((- (LIKE(-5.94358342E8, vt0.c0)))) ORDER BY (((- (vt0.c0))) BETWEEN (((vt0.c0)IS NOT(NULL))) AND (-1987473349)) DESC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0) IS FALSE)) IS FALSE));
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(x'' AS REAL))LIKE((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS REAL))LIKE((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(x'' AS REAL))LIKE((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS REAL))LIKE((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(x'' AS REAL))LIKE((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))))) ORDER BY t0.c0;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c3)AND(rt0.c4)))AND(rt0.c0)))>=((- (rt0.c0))))) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (((rt0.c4)GLOB(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)AND(rt0.c4)))AND(rt0.c0)))>=((- (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (((rt0.c4)GLOB(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c3)AND(rt0.c4)))AND(rt0.c0)))>=((- (rt0.c0))))) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (((rt0.c4)GLOB(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)AND(rt0.c4)))AND(rt0.c0)))>=((- (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (((rt0.c4)GLOB(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c3)AND(rt0.c4)))AND(rt0.c0)))>=((- (rt0.c0))))) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (((rt0.c4)GLOB(vt0.c0))));
SELECT * FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((rt0.c3)-(0.4793994521783469)) IN ()) WHERE ((((+ (rt0.c2)))AND(0Xffffffffb7f71a4d)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))AND(0xffffffffb7f71a4d))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((rt0.c3)-(0.4793994521783469)) IN ()));
SELECT * FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((rt0.c3)-(0.4793994521783469)) IN ()) WHERE ((((+ (rt0.c2)))AND(0Xffffffffb7f71a4d)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))AND(0xffffffffb7f71a4d))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((rt0.c3)-(0.4793994521783469)) IN ()));
SELECT * FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((rt0.c3)-(0.4793994521783469)) IN ()) WHERE ((((+ (rt0.c2)))AND(0Xffffffffb7f71a4d)));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON CAST(((NULL) IS TRUE) AS NUMERIC) WHERE (((- (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c0)) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST(((NULL) IS TRUE) AS NUMERIC));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON CAST(((NULL) IS TRUE) AS NUMERIC) WHERE (((- (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c0)) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST(((NULL) IS TRUE) AS NUMERIC));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON CAST(((NULL) IS TRUE) AS NUMERIC) WHERE (((- (t0.c0)) IN ()));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((-1.02065437E9) BETWEEN (rt0.c4) AND (t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((-1.02065437E9) BETWEEN (rt0.c4) AND (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((-1.02065437E9) BETWEEN (rt0.c4) AND (t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((-1.02065437E9) BETWEEN (rt0.c4) AND (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((-1.02065437E9) BETWEEN (rt0.c4) AND (t0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c1) ISNULL)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) ISNULL)) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c1) ISNULL)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) ISNULL)) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c1) ISNULL)) NOTNULL) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 END THEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c4)) ELSE ((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)) END) ORDER BY CAST(TRIM(DISTINCT rt0.c4, NULL) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 END THEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c4)) ELSE ((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(TRIM(DISTINCT rt0.c4, NULL) AS INTEGER) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 END THEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c4)) ELSE ((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)) END) ORDER BY CAST(TRIM(DISTINCT rt0.c4, NULL) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 END THEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c4)) ELSE ((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(TRIM(DISTINCT rt0.c4, NULL) AS INTEGER) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 END THEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c4)) ELSE ((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)) END) ORDER BY CAST(TRIM(DISTINCT rt0.c4, NULL) AS INTEGER) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CASE (- (rt0.c4))  WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c2) IS FALSE) ELSE (rt0.c3 IN ()) END) ORDER BY CASE WHEN (rt0.c3 IN (rt0.c1)) THEN rt0.c0 COLLATE RTRIM END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (rt0.c4))  WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c2) IS FALSE) ELSE (rt0.c3 IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c3 IN (rt0.c1)) THEN rt0.c0 COLLATE RTRIM END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE (- (rt0.c4))  WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c2) IS FALSE) ELSE (rt0.c3 IN ()) END) ORDER BY CASE WHEN (rt0.c3 IN (rt0.c1)) THEN rt0.c0 COLLATE RTRIM END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (rt0.c4))  WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c2) IS FALSE) ELSE (rt0.c3 IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c3 IN (rt0.c1)) THEN rt0.c0 COLLATE RTRIM END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE (- (rt0.c4))  WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c2) IS FALSE) ELSE (rt0.c3 IN ()) END) ORDER BY CASE WHEN (rt0.c3 IN (rt0.c1)) THEN rt0.c0 COLLATE RTRIM END  NULLS LAST;
SELECT * FROM t0, vt0, rt0 WHERE (CASE COALESCE(rt0.c4, t0.c0)  WHEN ((rt0.c1) IS FALSE) THEN t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE COALESCE(rt0.c4, t0.c0)  WHEN ((rt0.c1) IS FALSE) THEN t0.c0 END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (CASE COALESCE(rt0.c4, t0.c0)  WHEN ((rt0.c1) IS FALSE) THEN t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE COALESCE(rt0.c4, t0.c0)  WHEN ((rt0.c1) IS FALSE) THEN t0.c0 END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (CASE COALESCE(rt0.c4, t0.c0)  WHEN ((rt0.c1) IS FALSE) THEN t0.c0 END);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)) ORDER BY CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN rt0.c3 COLLATE NOCASE END  NULLS LAST, (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END IN (rt0.c0, CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN rt0.c3 COLLATE NOCASE END  NULLS LAST, (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END IN (rt0.c0, CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)) ORDER BY CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN rt0.c3 COLLATE NOCASE END  NULLS LAST, (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END IN (rt0.c0, CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN rt0.c3 COLLATE NOCASE END  NULLS LAST, (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END IN (rt0.c0, CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)) ORDER BY CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN rt0.c3 COLLATE NOCASE END  NULLS LAST, (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END IN (rt0.c0, CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(LIKELY(DISTINCT rt0.c0) AS TEXT)) ORDER BY json(((0.12318875048427913)IS(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(DISTINCT rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY json(((0.12318875048427913)IS(vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(LIKELY(DISTINCT rt0.c0) AS TEXT)) ORDER BY json(((0.12318875048427913)IS(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(DISTINCT rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY json(((0.12318875048427913)IS(vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(LIKELY(DISTINCT rt0.c0) AS TEXT)) ORDER BY json(((0.12318875048427913)IS(vt0.c0)))  NULLS LAST;
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON ((CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 END)%(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))) WHERE ((((rt0.c3)) BETWEEN ((((rt0.c1)AND(rt0.c0)))) AND ((NULL)))) ORDER BY (+ (rt0.c4)) COLLATE RTRIM ASC  NULLS FIRST, (((~ (rt0.c0))) NOT BETWEEN ((NOT (rt0.c3))) AND ((rt0.c2 IN (rt0.c0, rt0.c4)))) DESC, rt0.c0;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((((rt0.c1)AND(rt0.c0)))) AND ((NULL)))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 END)%(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))) ORDER BY (+ (rt0.c4)) COLLATE RTRIM ASC  NULLS FIRST, (((~ (rt0.c0))) NOT BETWEEN ((NOT (rt0.c3))) AND ((rt0.c2 IN (rt0.c0, rt0.c4)))) DESC, rt0.c0);
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON ((CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 END)%(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))) WHERE ((((rt0.c3)) BETWEEN ((((rt0.c1)AND(rt0.c0)))) AND ((NULL)))) ORDER BY (+ (rt0.c4)) COLLATE RTRIM ASC  NULLS FIRST, (((~ (rt0.c0))) NOT BETWEEN ((NOT (rt0.c3))) AND ((rt0.c2 IN (rt0.c0, rt0.c4)))) DESC, rt0.c0;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((((rt0.c1)AND(rt0.c0)))) AND ((NULL)))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 END)%(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))) ORDER BY (+ (rt0.c4)) COLLATE RTRIM ASC  NULLS FIRST, (((~ (rt0.c0))) NOT BETWEEN ((NOT (rt0.c3))) AND ((rt0.c2 IN (rt0.c0, rt0.c4)))) DESC, rt0.c0);
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON ((CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 END)%(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))) WHERE ((((rt0.c3)) BETWEEN ((((rt0.c1)AND(rt0.c0)))) AND ((NULL)))) ORDER BY (+ (rt0.c4)) COLLATE RTRIM ASC  NULLS FIRST, (((~ (rt0.c0))) NOT BETWEEN ((NOT (rt0.c3))) AND ((rt0.c2 IN (rt0.c0, rt0.c4)))) DESC, rt0.c0;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c1)IS(((rt0.c4)IS NOT('-CI0iæ®/y'))))) ORDER BY CAST(CASE WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 END AS BLOB) ASC  NULLS LAST, (((rt0.c4)*(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS(((rt0.c4)IS NOT('-CI0iæ®/y'))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(CASE WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 END AS BLOB) ASC  NULLS LAST, (((rt0.c4)*(vt0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c1)IS(((rt0.c4)IS NOT('-CI0iæ®/y'))))) ORDER BY CAST(CASE WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 END AS BLOB) ASC  NULLS LAST, (((rt0.c4)*(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS(((rt0.c4)IS NOT('-CI0iæ®/y'))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(CASE WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 END AS BLOB) ASC  NULLS LAST, (((rt0.c4)*(vt0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c1)IS(((rt0.c4)IS NOT('-CI0iæ®/y'))))) ORDER BY CAST(CASE WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 END AS BLOB) ASC  NULLS LAST, (((rt0.c4)*(vt0.c0)) IN ()) ASC;
SELECT ALL * FROM vt0 INNER JOIN t0 ON CAST(rt0.c1 COLLATE RTRIM AS NUMERIC) CROSS JOIN rt0 ON rt0.c4 WHERE ((((- (rt0.c4))) NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND (CHANGES()))) ORDER BY rt0.c3 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c4))) NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND (CHANGES()))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST(rt0.c1 COLLATE RTRIM AS NUMERIC) CROSS JOIN rt0 ON rt0.c4 ORDER BY rt0.c3 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN t0 ON CAST(rt0.c1 COLLATE RTRIM AS NUMERIC) CROSS JOIN rt0 ON rt0.c4 WHERE ((((- (rt0.c4))) NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND (CHANGES()))) ORDER BY rt0.c3 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c4))) NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND (CHANGES()))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST(rt0.c1 COLLATE RTRIM AS NUMERIC) CROSS JOIN rt0 ON rt0.c4 ORDER BY rt0.c3 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN t0 ON CAST(rt0.c1 COLLATE RTRIM AS NUMERIC) CROSS JOIN rt0 ON rt0.c4 WHERE ((((- (rt0.c4))) NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND (CHANGES()))) ORDER BY rt0.c3 ASC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE (((CAST(-1896535074 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(-1896535074 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((CAST(-1896535074 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(-1896535074 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((CAST(-1896535074 AS REAL)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((t0.c0)) BETWEEN ((((rt0.c1)%(rt0.c3)))) AND (((NOT (rt0.c3)))))) ORDER BY ((((((rt0.c1)AND(rt0.c4)))AND(rt0.c0)))IS(rt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((((rt0.c1)%(rt0.c3)))) AND (((NOT (rt0.c3)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((rt0.c1)AND(rt0.c4)))AND(rt0.c0)))IS(rt0.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((t0.c0)) BETWEEN ((((rt0.c1)%(rt0.c3)))) AND (((NOT (rt0.c3)))))) ORDER BY ((((((rt0.c1)AND(rt0.c4)))AND(rt0.c0)))IS(rt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((((rt0.c1)%(rt0.c3)))) AND (((NOT (rt0.c3)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((rt0.c1)AND(rt0.c4)))AND(rt0.c0)))IS(rt0.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((t0.c0)) BETWEEN ((((rt0.c1)%(rt0.c3)))) AND (((NOT (rt0.c3)))))) ORDER BY ((((((rt0.c1)AND(rt0.c4)))AND(rt0.c0)))IS(rt0.c1)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((+ (rt0.c4)))LIKE((('-1350213257')/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c4)))LIKE((('-1350213257')/(rt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((+ (rt0.c4)))LIKE((('-1350213257')/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c4)))LIKE((('-1350213257')/(rt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((+ (rt0.c4)))LIKE((('-1350213257')/(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1) ISNULL)))) ORDER BY CASE WHEN NULL THEN ((rt0.c2)-(rt0.c3)) ELSE ((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN NULL THEN ((rt0.c2)-(rt0.c3)) ELSE ((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1) ISNULL)))) ORDER BY CASE WHEN NULL THEN ((rt0.c2)-(rt0.c3)) ELSE ((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN NULL THEN ((rt0.c2)-(rt0.c3)) ELSE ((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1) ISNULL)))) ORDER BY CASE WHEN NULL THEN ((rt0.c2)-(rt0.c3)) ELSE ((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)) END;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((vt0.c0) BETWEEN (rt0.c3) AND ('-59267987')) IN ())) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (rt0.c3) AND ('-59267987')) IN ())) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((vt0.c0) BETWEEN (rt0.c3) AND ('-59267987')) IN ())) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (rt0.c3) AND ('-59267987')) IN ())) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((vt0.c0) BETWEEN (rt0.c3) AND ('-59267987')) IN ())) ORDER BY vt0.c0 DESC;
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c1)>=(rt0.c3))) NOTNULL)) ORDER BY (((+ (rt0.c0)))LIKE((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>=(rt0.c3))) NOTNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((+ (rt0.c0)))LIKE((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c1)>=(rt0.c3))) NOTNULL)) ORDER BY (((+ (rt0.c0)))LIKE((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>=(rt0.c3))) NOTNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((+ (rt0.c0)))LIKE((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c1)>=(rt0.c3))) NOTNULL)) ORDER BY (((+ (rt0.c0)))LIKE((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) ASC;
SELECT ALL * FROM vt0 WHERE ((~ (x'2799'))) ORDER BY TRIM(vt0.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((~ (x'2799'))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(vt0.c0) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0 WHERE ((~ (x'2799'))) ORDER BY TRIM(vt0.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((~ (x'2799'))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(vt0.c0) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0 WHERE ((~ (x'2799'))) ORDER BY TRIM(vt0.c0) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM rt0, t0 NATURAL JOIN vt0 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0, t0 NATURAL JOIN vt0 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0, t0 NATURAL JOIN vt0 WHERE ((- (NULL)));
SELECT * FROM t0, rt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))-(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))-(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC);
SELECT * FROM t0, rt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))-(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))-(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC);
SELECT * FROM t0, rt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))-(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('');
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (CAST(t0.c0 AS REAL) COLLATE BINARY) ORDER BY (((rt0.c1, rt0.c4, t0.c0, rt0.c2, t0.c0)) NOT BETWEEN ((t0.c0, rt0.c1 COLLATE BINARY, ((rt0.c4) IS TRUE), rt0.c0 COLLATE BINARY, ((rt0.c2) BETWEEN (x'') AND (rt0.c2)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), 0.1188348750276007, rt0.c1 COLLATE RTRIM, CAST(rt0.c1 AS NUMERIC), (rt0.c4 IN ('-1953780994'))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY (((rt0.c1, rt0.c4, t0.c0, rt0.c2, t0.c0)) NOT BETWEEN ((t0.c0, rt0.c1 COLLATE BINARY, ((rt0.c4) IS TRUE), rt0.c0 COLLATE BINARY, ((rt0.c2) BETWEEN (x'') AND (rt0.c2)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), 0.1188348750276007, rt0.c1 COLLATE RTRIM, CAST(rt0.c1 AS NUMERIC), (rt0.c4 IN ('-1953780994'))))) ASC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (CAST(t0.c0 AS REAL) COLLATE BINARY) ORDER BY (((rt0.c1, rt0.c4, t0.c0, rt0.c2, t0.c0)) NOT BETWEEN ((t0.c0, rt0.c1 COLLATE BINARY, ((rt0.c4) IS TRUE), rt0.c0 COLLATE BINARY, ((rt0.c2) BETWEEN (x'') AND (rt0.c2)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), 0.1188348750276007, rt0.c1 COLLATE RTRIM, CAST(rt0.c1 AS NUMERIC), (rt0.c4 IN ('-1953780994'))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY (((rt0.c1, rt0.c4, t0.c0, rt0.c2, t0.c0)) NOT BETWEEN ((t0.c0, rt0.c1 COLLATE BINARY, ((rt0.c4) IS TRUE), rt0.c0 COLLATE BINARY, ((rt0.c2) BETWEEN (x'') AND (rt0.c2)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), 0.1188348750276007, rt0.c1 COLLATE RTRIM, CAST(rt0.c1 AS NUMERIC), (rt0.c4 IN ('-1953780994'))))) ASC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (CAST(t0.c0 AS REAL) COLLATE BINARY) ORDER BY (((rt0.c1, rt0.c4, t0.c0, rt0.c2, t0.c0)) NOT BETWEEN ((t0.c0, rt0.c1 COLLATE BINARY, ((rt0.c4) IS TRUE), rt0.c0 COLLATE BINARY, ((rt0.c2) BETWEEN (x'') AND (rt0.c2)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), 0.1188348750276007, rt0.c1 COLLATE RTRIM, CAST(rt0.c1 AS NUMERIC), (rt0.c4 IN ('-1953780994'))))) ASC;
SELECT ALL * FROM t0, rt0, vt0 WHERE (((vt0.c0)==(rt0.c4)) COLLATE RTRIM) ORDER BY (+ ((((rt0.c2))>=((NULL))))), CASE WHEN ((x'')<('0.2172619441284197')) THEN (rt0.c2 IN ()) WHEN CASE WHEN rt0.c3 THEN rt0.c4 END THEN (((rt0.c2))>((0.8176078476408767))) WHEN (- (t0.c0)) THEN ((((((((vt0.c0)AND(rt0.c2)))OR(0.8134947216049604)))OR(rt0.c3)))AND(rt0.c2)) ELSE '-1953780994' END  NULLS FIRST, (- ((~ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)==(rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (+ ((((rt0.c2))>=((NULL))))), CASE WHEN ((x'')<('0.2172619441284197')) THEN (rt0.c2 IN ()) WHEN CASE WHEN rt0.c3 THEN rt0.c4 END THEN (((rt0.c2))>((0.8176078476408767))) WHEN (- (t0.c0)) THEN ((((((((vt0.c0)AND(rt0.c2)))OR(0.8134947216049604)))OR(rt0.c3)))AND(rt0.c2)) ELSE '-1953780994' END  NULLS FIRST, (- ((~ (rt0.c2)))) DESC);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((vt0.c0)==(rt0.c4)) COLLATE RTRIM) ORDER BY (+ ((((rt0.c2))>=((NULL))))), CASE WHEN ((x'')<('0.2172619441284197')) THEN (rt0.c2 IN ()) WHEN CASE WHEN rt0.c3 THEN rt0.c4 END THEN (((rt0.c2))>((0.8176078476408767))) WHEN (- (t0.c0)) THEN ((((((((vt0.c0)AND(rt0.c2)))OR(0.8134947216049604)))OR(rt0.c3)))AND(rt0.c2)) ELSE '-1953780994' END  NULLS FIRST, (- ((~ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)==(rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (+ ((((rt0.c2))>=((NULL))))), CASE WHEN ((x'')<('0.2172619441284197')) THEN (rt0.c2 IN ()) WHEN CASE WHEN rt0.c3 THEN rt0.c4 END THEN (((rt0.c2))>((0.8176078476408767))) WHEN (- (t0.c0)) THEN ((((((((vt0.c0)AND(rt0.c2)))OR(0.8134947216049604)))OR(rt0.c3)))AND(rt0.c2)) ELSE '-1953780994' END  NULLS FIRST, (- ((~ (rt0.c2)))) DESC);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((vt0.c0)==(rt0.c4)) COLLATE RTRIM) ORDER BY (+ ((((rt0.c2))>=((NULL))))), CASE WHEN ((x'')<('0.2172619441284197')) THEN (rt0.c2 IN ()) WHEN CASE WHEN rt0.c3 THEN rt0.c4 END THEN (((rt0.c2))>((0.8176078476408767))) WHEN (- (t0.c0)) THEN ((((((((vt0.c0)AND(rt0.c2)))OR(0.8134947216049604)))OR(rt0.c3)))AND(rt0.c2)) ELSE '-1953780994' END  NULLS FIRST, (- ((~ (rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((NULL)<<(vt0.c0)) COLLATE NOCASE) ORDER BY (((+ (t0.c0)))%((t0.c0 IN (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((NULL)<<(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY (((+ (t0.c0)))%((t0.c0 IN (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((NULL)<<(vt0.c0)) COLLATE NOCASE) ORDER BY (((+ (t0.c0)))%((t0.c0 IN (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((NULL)<<(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY (((+ (t0.c0)))%((t0.c0 IN (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((NULL)<<(vt0.c0)) COLLATE NOCASE) ORDER BY (((+ (t0.c0)))%((t0.c0 IN (vt0.c0)))) ASC;
SELECT * FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))!=((~ (t0.c0))))) ORDER BY (~ (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))!=((~ (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (~ (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST);
SELECT * FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))!=((~ (t0.c0))))) ORDER BY (~ (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))!=((~ (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (~ (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST);
SELECT * FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))!=((~ (t0.c0))))) ORDER BY (~ (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c4)/(rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) WHEN ((rt0.c2) BETWEEN (0.8000231804748905) AND (-1020654370)) THEN load_extension(rt0.c4) WHEN ((rt0.c2) BETWEEN ('0.4743891339143468') AND (rt0.c1)) THEN (((rt0.c0, rt0.c2, rt0.c0, '-240901445', 0x2f88b05e))<((rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c3))) WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END WHEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN rt0.c0 COLLATE NOCASE ELSE CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN 0.008034867620811958 THEN x'' ELSE rt0.c4 END END) ORDER BY (- (((rt0.c3)+(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c4)/(rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) WHEN ((rt0.c2) BETWEEN (0.8000231804748905) AND (-1020654370)) THEN load_extension(rt0.c4) WHEN ((rt0.c2) BETWEEN ('0.4743891339143468') AND (rt0.c1)) THEN (((rt0.c0, rt0.c2, rt0.c0, '-240901445', 0x2f88b05e))<((rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c3))) WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END WHEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN rt0.c0 COLLATE NOCASE ELSE CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN 0.008034867620811958 THEN x'' ELSE rt0.c4 END END) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c3)+(rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c4)/(rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) WHEN ((rt0.c2) BETWEEN (0.8000231804748905) AND (-1020654370)) THEN load_extension(rt0.c4) WHEN ((rt0.c2) BETWEEN ('0.4743891339143468') AND (rt0.c1)) THEN (((rt0.c0, rt0.c2, rt0.c0, '-240901445', 0x2f88b05e))<((rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c3))) WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END WHEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN rt0.c0 COLLATE NOCASE ELSE CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN 0.008034867620811958 THEN x'' ELSE rt0.c4 END END) ORDER BY (- (((rt0.c3)+(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c4)/(rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) WHEN ((rt0.c2) BETWEEN (0.8000231804748905) AND (-1020654370)) THEN load_extension(rt0.c4) WHEN ((rt0.c2) BETWEEN ('0.4743891339143468') AND (rt0.c1)) THEN (((rt0.c0, rt0.c2, rt0.c0, '-240901445', 0x2f88b05e))<((rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c3))) WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END WHEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN rt0.c0 COLLATE NOCASE ELSE CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN 0.008034867620811958 THEN x'' ELSE rt0.c4 END END) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c3)+(rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c4)/(rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) WHEN ((rt0.c2) BETWEEN (0.8000231804748905) AND (-1020654370)) THEN load_extension(rt0.c4) WHEN ((rt0.c2) BETWEEN ('0.4743891339143468') AND (rt0.c1)) THEN (((rt0.c0, rt0.c2, rt0.c0, '-240901445', 0x2f88b05e))<((rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c3))) WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END WHEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN rt0.c0 COLLATE NOCASE ELSE CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN 0.008034867620811958 THEN x'' ELSE rt0.c4 END END) ORDER BY (- (((rt0.c3)+(rt0.c1)))) DESC;
SELECT * FROM rt0, t0, vt0 WHERE (((IFNULL(rt0.c4, t0.c0))<<((t0.c0 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c4, t0.c0))<<((t0.c0 IN (rt0.c3))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((IFNULL(rt0.c4, t0.c0))<<((t0.c0 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c4, t0.c0))<<((t0.c0 IN (rt0.c3))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((IFNULL(rt0.c4, t0.c0))<<((t0.c0 IN (rt0.c3)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c4)%(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)%(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c4)%(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)%(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c4)%(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c0)AND(rt0.c3)))AND(NULL)))|(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(rt0.c3)))AND(NULL)))|(rt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c0)AND(rt0.c3)))AND(NULL)))|(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(rt0.c3)))AND(NULL)))|(rt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c0)AND(rt0.c3)))AND(NULL)))|(rt0.c0)));
