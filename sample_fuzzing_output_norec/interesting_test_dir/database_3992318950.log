-- Time: 2024/06/10 06:02:52
-- Database: database50
-- Database version: 3.40.0
-- seed value: 3992318950
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c0) VALUES (NULL, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3) VALUES ('()', 0Xffffffff991ea4b0); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c0, c2, c3) VALUES (NULL, 0.9663563672283826, x'', x'', 0.9663563672283826); -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1, c3, c0, c4) VALUES ('()', 'Ws', -1.726045008E9, -1726045008, 444467096); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA secure_delete; -- 0ms;
INSERT OR ABORT INTO rt0(c4) VALUES (4.44467096E8); -- 0ms;
UPDATE rt0 SET c4='叟0', c4='' WHERE (((rt0.c3 IN ()))<=(json_extract(rt0.c4, rt0.c3))); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x'a920'; -- 0ms;
VACUUM temp; -- 0ms;
REINDEX NOCASE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
END; -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3, c2)=('', x'f026') WHERE (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((0.5540112125249826, x'', ((rt0.c1)%(rt0.c0)))) AND (((((rt0.c1, rt0.c2, rt0.c4))>((rt0.c1, '', rt0.c2))), rt0.c0 COLLATE NOCASE, ((rt0.c3)=(rt0.c4))))); -- 1ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT ALL CASE WHEN rt0.c4 THEN ((rt0.c3)IS NOT(rt0.c0)) WHEN 0x1a0c1f37 THEN (('now')||(rt0.c4)) WHEN (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN TOTAL(rt0.c1) WHEN TOTAL(rt0.c4) THEN (NOT (rt0.c1)) WHEN '-11192207' COLLATE RTRIM THEN CASE rt0.c1  WHEN x'4ae0b66b' THEN rt0.c0 END END, '-1726045008', (((rt0.c1)) BETWEEN (((((rt0.c4))==((rt0.c3))))) AND (((((rt0.c4))<((rt0.c3)))))) FROM rt0; -- 1ms;
REINDEX  rt0; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 2ms;
UPDATE rt0 SET c4=0.9663563672283826 WHERE rt0.c3; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '11583'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.1281956754811041, -6.6956321E7, x'', -1.726045008E9, x''); -- 0ms;
INSERT OR REPLACE INTO rt0(c4, c1, c3, c2) VALUES (NULL, x'd439', 242240729, '-731952209'); -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c0, c4) VALUES (x'', NULL, NULL); -- 0ms;
UPDATE OR ABORT vt0 SET c0=0.7412285647965285, c0=x'6ed5'; -- 0ms;
COMMIT; -- 0ms;
REINDEX NOCASE; -- 0ms;
PRAGMA temp.busy_timeout = 10000; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0='444467096'; -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
REINDEX; -- 4ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO rt0(c3) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '1928'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1349511453); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=158333329,2');\n; -- 0ms;
INSERT OR FAIL INTO rt0(c2, c0) VALUES ('-538768614', -6.6956321E7), (x'', x'fe8e'), (0.7412285647965285, 0.041804431734504655); -- 0ms;
INSERT OR FAIL INTO rt0(c3) VALUES (x''); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '11601'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1726045008,5');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '47621'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '50840'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((('cp')OR(NULL)))AND(-988228928)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA threads; -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1947439925);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 121351104); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '61959'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c3, c0) VALUES ('-988228928', '', x'83459e00'); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c2, c4) VALUES ('*낛G''', '.ue4ቍSZ䫴', NULL), ('', x'd8b2', 1966098013), (0.07383270915695239, x'', '1368393541'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (NULL, '0'), ('242240729', 1900563854), ((((((((((('')OR(NULL)))AND(NULL)))AND(0x20ec4db8)))AND(x''))) NOT BETWEEN (((0.7412285647965285)-('cp'))) AND ((+ (x'')))), x''); -- 1ms;
REINDEX; -- 1ms;
END; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'', c0=-972938462, c0=x'' WHERE ((vt0.c0 COLLATE NOCASE)/(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))); -- 0ms;
UPDATE OR IGNORE rt0 SET c4='' WHERE TYPEOF(DISTINCT rt0.c3); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.39351135933571146); -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
ANALYZE temp; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 0ms;
INSERT OR FAIL INTO rt0(c3, c4, c2) VALUES (0.8268166265169262, NULL, '158333329'); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('-11192207'), (0.7432281464833966), (x''); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1691502823); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0='JA', c0='' WHERE CASE WHEN x'' THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((vt0.c0)GLOB(vt0.c0)) END; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (''); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'2d86'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '38348'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1264476094); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x'') WHERE (- (((('1285434000')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))); -- 1ms;
PRAGMA main.short_column_names; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '32901'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '10891'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=13'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 966134053);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c4, c2, c1) VALUES ('', 0.09460694037554729, -1.92106341E8, x''); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'171ee1dc'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 69248998); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='1285434000', c0='552357304'; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.014110322231277506, x'38b5', NULL, '1900563854', NULL); -- 0ms;
VACUUM; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))<((NULL))) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 1ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('U'), ('1966098013'), (0.03311813671477071); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET (c0)=(NULL) WHERE (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 END)); -- 1ms;
UPDATE OR ROLLBACK rt0 SET (c4)=(NULL) WHERE (json_patch(rt0.c1, rt0.c4) IN ()); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0 WHERE (load_extension((NULL IN ())));
SELECT SUM(count) FROM (SELECT ((load_extension((NULL IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (load_extension((NULL IN ())));
SELECT SUM(count) FROM (SELECT ((load_extension((NULL IN ()))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((NOT (-9.88228928E8)))|(json_quote(v0.c0))) WHERE (((IFNULL(v0.c2, v0.c2)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(v0.c2, v0.c2)) NOTNULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((NOT (-9.88228928E8)))|(json_quote(v0.c0))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((NOT (-9.88228928E8)))|(json_quote(v0.c0))) WHERE (((IFNULL(v0.c2, v0.c2)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(v0.c2, v0.c2)) NOTNULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((NOT (-9.88228928E8)))|(json_quote(v0.c0))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((NOT (-9.88228928E8)))|(json_quote(v0.c0))) WHERE (((IFNULL(v0.c2, v0.c2)) NOTNULL));
SELECT ALL * FROM v0 WHERE (CAST(NULL AS TEXT) COLLATE BINARY) ORDER BY 0.9663563672283826 ASC  NULLS FIRST, v0.c2 COLLATE BINARY, (((v0.c2 COLLATE RTRIM, ((v0.c1)>=(v0.c0)), ((v0.c2)*(v0.c0)), ((('242240729'))>((v0.c0))), (v0.c2 IN ())))>((((((v0.c0)AND(v0.c2)))AND(v0.c1)), CAST(v0.c2 AS TEXT), '', v0.c0, x''))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY 0.9663563672283826 ASC  NULLS FIRST, v0.c2 COLLATE BINARY, (((v0.c2 COLLATE RTRIM, ((v0.c1)>=(v0.c0)), ((v0.c2)*(v0.c0)), ((('242240729'))>((v0.c0))), (v0.c2 IN ())))>((((((v0.c0)AND(v0.c2)))AND(v0.c1)), CAST(v0.c2 AS TEXT), '', v0.c0, x''))) DESC);
SELECT ALL * FROM v0 WHERE (CAST(NULL AS TEXT) COLLATE BINARY) ORDER BY 0.9663563672283826 ASC  NULLS FIRST, v0.c2 COLLATE BINARY, (((v0.c2 COLLATE RTRIM, ((v0.c1)>=(v0.c0)), ((v0.c2)*(v0.c0)), ((('242240729'))>((v0.c0))), (v0.c2 IN ())))>((((((v0.c0)AND(v0.c2)))AND(v0.c1)), CAST(v0.c2 AS TEXT), '', v0.c0, x''))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY 0.9663563672283826 ASC  NULLS FIRST, v0.c2 COLLATE BINARY, (((v0.c2 COLLATE RTRIM, ((v0.c1)>=(v0.c0)), ((v0.c2)*(v0.c0)), ((('242240729'))>((v0.c0))), (v0.c2 IN ())))>((((((v0.c0)AND(v0.c2)))AND(v0.c1)), CAST(v0.c2 AS TEXT), '', v0.c0, x''))) DESC);
SELECT ALL * FROM v0 WHERE (CAST(NULL AS TEXT) COLLATE BINARY) ORDER BY 0.9663563672283826 ASC  NULLS FIRST, v0.c2 COLLATE BINARY, (((v0.c2 COLLATE RTRIM, ((v0.c1)>=(v0.c0)), ((v0.c2)*(v0.c0)), ((('242240729'))>((v0.c0))), (v0.c2 IN ())))>((((((v0.c0)AND(v0.c2)))AND(v0.c1)), CAST(v0.c2 AS TEXT), '', v0.c0, x''))) DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1, NULL, v0.c2)) NOT BETWEEN (((- (v0.c2)), (v0.c0 IN (v0.c2)), ((NULL) NOT BETWEEN (v0.c2) AND (v0.c2)))) AND ((TRIM(DISTINCT v0.c2, v0.c0), (((v0.c2))>=((v0.c2))), (+ (v0.c0)))))) ORDER BY ((~ (v0.c0)) IN (((v0.c0)||(v0.c0)), ((v0.c1) BETWEEN (v0.c1) AND (0.5133676682456599))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, NULL, v0.c2)) NOT BETWEEN (((- (v0.c2)), (v0.c0 IN (v0.c2)), ((NULL) NOT BETWEEN (v0.c2) AND (v0.c2)))) AND ((TRIM(DISTINCT v0.c2, v0.c0), (((v0.c2))>=((v0.c2))), (+ (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((~ (v0.c0)) IN (((v0.c0)||(v0.c0)), ((v0.c1) BETWEEN (v0.c1) AND (0.5133676682456599))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1, NULL, v0.c2)) NOT BETWEEN (((- (v0.c2)), (v0.c0 IN (v0.c2)), ((NULL) NOT BETWEEN (v0.c2) AND (v0.c2)))) AND ((TRIM(DISTINCT v0.c2, v0.c0), (((v0.c2))>=((v0.c2))), (+ (v0.c0)))))) ORDER BY ((~ (v0.c0)) IN (((v0.c0)||(v0.c0)), ((v0.c1) BETWEEN (v0.c1) AND (0.5133676682456599))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, NULL, v0.c2)) NOT BETWEEN (((- (v0.c2)), (v0.c0 IN (v0.c2)), ((NULL) NOT BETWEEN (v0.c2) AND (v0.c2)))) AND ((TRIM(DISTINCT v0.c2, v0.c0), (((v0.c2))>=((v0.c2))), (+ (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((~ (v0.c0)) IN (((v0.c0)||(v0.c0)), ((v0.c1) BETWEEN (v0.c1) AND (0.5133676682456599))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1, NULL, v0.c2)) NOT BETWEEN (((- (v0.c2)), (v0.c0 IN (v0.c2)), ((NULL) NOT BETWEEN (v0.c2) AND (v0.c2)))) AND ((TRIM(DISTINCT v0.c2, v0.c0), (((v0.c2))>=((v0.c2))), (+ (v0.c0)))))) ORDER BY ((~ (v0.c0)) IN (((v0.c0)||(v0.c0)), ((v0.c1) BETWEEN (v0.c1) AND (0.5133676682456599))))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((((NULL)AND(v0.c2)))OR(v0.c1)))>>(v0.c2))) ORDER BY LIKELY(v0.c0) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(v0.c2)))OR(v0.c1)))>>(v0.c2))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(v0.c0) ASC);
SELECT ALL * FROM v0 WHERE (((((((NULL)AND(v0.c2)))OR(v0.c1)))>>(v0.c2))) ORDER BY LIKELY(v0.c0) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(v0.c2)))OR(v0.c1)))>>(v0.c2))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(v0.c0) ASC);
SELECT ALL * FROM v0 WHERE (((((((NULL)AND(v0.c2)))OR(v0.c1)))>>(v0.c2))) ORDER BY LIKELY(v0.c0) ASC;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON '0.8268166265169262' WHERE (((((v0.c0)+(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)+(vt0.c0))) ISNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON '0.8268166265169262');
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON '0.8268166265169262' WHERE (((((v0.c0)+(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)+(vt0.c0))) ISNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON '0.8268166265169262');
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON '0.8268166265169262' WHERE (((((v0.c0)+(vt0.c0))) ISNULL));
SELECT COUNT(*) FROM v0 WHERE (0.7412285647965285) ORDER BY v0.c2, ((((v0.c2)!=(v0.c1)))&(((v0.c1)AND(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((0.7412285647965285) IS TRUE)  as count FROM v0 ORDER BY v0.c2, ((((v0.c2)!=(v0.c1)))&(((v0.c1)AND(v0.c2)))));
SELECT COUNT(*) FROM v0 WHERE (0.7412285647965285) ORDER BY v0.c2, ((((v0.c2)!=(v0.c1)))&(((v0.c1)AND(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((0.7412285647965285) IS TRUE)  as count FROM v0 ORDER BY v0.c2, ((((v0.c2)!=(v0.c1)))&(((v0.c1)AND(v0.c2)))));
SELECT COUNT(*) FROM v0 WHERE (0.7412285647965285) ORDER BY v0.c2, ((((v0.c2)!=(v0.c1)))&(((v0.c1)AND(v0.c2))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN ('1368393541') AND (vt0.c0))) NOT NULL)) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) IS TRUE))), json_quote(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN ('1368393541') AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) IS TRUE))), json_quote(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN ('1368393541') AND (vt0.c0))) NOT NULL)) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) IS TRUE))), json_quote(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN ('1368393541') AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) IS TRUE))), json_quote(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN ('1368393541') AND (vt0.c0))) NOT NULL)) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) IS TRUE))), json_quote(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))IS((((vt0.c0))!=((vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0)))IS((((vt0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))IS((((vt0.c0))!=((vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0)))IS((((vt0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))IS((((vt0.c0))!=((vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT ALL * FROM vt0, rt0 WHERE (PRINTF('1492397822')) ORDER BY ((((((((((rt0.c2)<<(rt0.c1)))OR(((((((((rt0.c1)AND(rt0.c3)))OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))))AND((rt0.c3 IN ()))))AND(json_array_length(rt0.c2, rt0.c2))))AND((rt0.c1 IN ())))  NULLS FIRST, ((DATETIME(rt0.c2, vt0.c0, rt0.c2))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c3 END))  NULLS LAST, CASE LOWER(rt0.c3)  WHEN COALESCE(rt0.c1, rt0.c0) THEN ((vt0.c0)<<(rt0.c1)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF('1492397822')) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((rt0.c2)<<(rt0.c1)))OR(((((((((rt0.c1)AND(rt0.c3)))OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))))AND((rt0.c3 IN ()))))AND(json_array_length(rt0.c2, rt0.c2))))AND((rt0.c1 IN ())))  NULLS FIRST, ((DATETIME(rt0.c2, vt0.c0, rt0.c2))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c3 END))  NULLS LAST, CASE LOWER(rt0.c3)  WHEN COALESCE(rt0.c1, rt0.c0) THEN ((vt0.c0)<<(rt0.c1)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) END ASC);
SELECT ALL * FROM vt0, rt0 WHERE (PRINTF('1492397822')) ORDER BY ((((((((((rt0.c2)<<(rt0.c1)))OR(((((((((rt0.c1)AND(rt0.c3)))OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))))AND((rt0.c3 IN ()))))AND(json_array_length(rt0.c2, rt0.c2))))AND((rt0.c1 IN ())))  NULLS FIRST, ((DATETIME(rt0.c2, vt0.c0, rt0.c2))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c3 END))  NULLS LAST, CASE LOWER(rt0.c3)  WHEN COALESCE(rt0.c1, rt0.c0) THEN ((vt0.c0)<<(rt0.c1)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF('1492397822')) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((rt0.c2)<<(rt0.c1)))OR(((((((((rt0.c1)AND(rt0.c3)))OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))))AND((rt0.c3 IN ()))))AND(json_array_length(rt0.c2, rt0.c2))))AND((rt0.c1 IN ())))  NULLS FIRST, ((DATETIME(rt0.c2, vt0.c0, rt0.c2))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c3 END))  NULLS LAST, CASE LOWER(rt0.c3)  WHEN COALESCE(rt0.c1, rt0.c0) THEN ((vt0.c0)<<(rt0.c1)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) END ASC);
SELECT ALL * FROM v0, vt0 LEFT OUTER JOIN rt0 ON (((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))) NOTNULL) WHERE ('1900563854') ORDER BY (rt0.c2 IN ())  NULLS LAST, (NOT ((NOT (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1900563854') IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt0 ON (((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))) NOTNULL) ORDER BY (rt0.c2 IN ())  NULLS LAST, (NOT ((NOT (rt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 LEFT OUTER JOIN rt0 ON (((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))) NOTNULL) WHERE ('1900563854') ORDER BY (rt0.c2 IN ())  NULLS LAST, (NOT ((NOT (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1900563854') IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt0 ON (((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))) NOTNULL) ORDER BY (rt0.c2 IN ())  NULLS LAST, (NOT ((NOT (rt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 LEFT OUTER JOIN rt0 ON (((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))) NOTNULL) WHERE ('1900563854') ORDER BY (rt0.c2 IN ())  NULLS LAST, (NOT ((NOT (rt0.c1)))) ASC  NULLS LAST;
SELECT * FROM rt0, v0, vt0 WHERE ((((rt0.c4, rt0.c4, v0.c1)) NOT BETWEEN ((((rt0.c1)%(rt0.c0)), ((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)), ((rt0.c1)+(vt0.c0)))) AND ((((((((((v0.c2)OR(vt0.c0)))AND(v0.c0)))AND(rt0.c4)))OR(rt0.c0)), ((rt0.c2)>>(v0.c2)), (((rt0.c3, rt0.c4, v0.c2)) NOT BETWEEN ((rt0.c0, v0.c1, 0xffffffff88c6f7ba)) AND ((v0.c0, rt0.c1, rt0.c4)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4, rt0.c4, v0.c1)) NOT BETWEEN ((((rt0.c1)%(rt0.c0)), ((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)), ((rt0.c1)+(vt0.c0)))) AND ((((((((((v0.c2)OR(vt0.c0)))AND(v0.c0)))AND(rt0.c4)))OR(rt0.c0)), ((rt0.c2)>>(v0.c2)), (((rt0.c3, rt0.c4, v0.c2)) NOT BETWEEN ((rt0.c0, v0.c1, 0xffffffff88c6f7ba)) AND ((v0.c0, rt0.c1, rt0.c4))))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE ((((rt0.c4, rt0.c4, v0.c1)) NOT BETWEEN ((((rt0.c1)%(rt0.c0)), ((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)), ((rt0.c1)+(vt0.c0)))) AND ((((((((((v0.c2)OR(vt0.c0)))AND(v0.c0)))AND(rt0.c4)))OR(rt0.c0)), ((rt0.c2)>>(v0.c2)), (((rt0.c3, rt0.c4, v0.c2)) NOT BETWEEN ((rt0.c0, v0.c1, 0xffffffff88c6f7ba)) AND ((v0.c0, rt0.c1, rt0.c4)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4, rt0.c4, v0.c1)) NOT BETWEEN ((((rt0.c1)%(rt0.c0)), ((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)), ((rt0.c1)+(vt0.c0)))) AND ((((((((((v0.c2)OR(vt0.c0)))AND(v0.c0)))AND(rt0.c4)))OR(rt0.c0)), ((rt0.c2)>>(v0.c2)), (((rt0.c3, rt0.c4, v0.c2)) NOT BETWEEN ((rt0.c0, v0.c1, 0xffffffff88c6f7ba)) AND ((v0.c0, rt0.c1, rt0.c4))))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE ((((rt0.c4, rt0.c4, v0.c1)) NOT BETWEEN ((((rt0.c1)%(rt0.c0)), ((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)), ((rt0.c1)+(vt0.c0)))) AND ((((((((((v0.c2)OR(vt0.c0)))AND(v0.c0)))AND(rt0.c4)))OR(rt0.c0)), ((rt0.c2)>>(v0.c2)), (((rt0.c3, rt0.c4, v0.c2)) NOT BETWEEN ((rt0.c0, v0.c1, 0xffffffff88c6f7ba)) AND ((v0.c0, rt0.c1, rt0.c4)))))));
SELECT ALL * FROM v0 WHERE (((v0.c2 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c2 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c2 COLLATE BINARY) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c4)IS(vt0.c0)) AS REAL) WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<>(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c3 END))) ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c3 COLLATE RTRIM, ((rt0.c0)&(rt0.c1))))<=((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END, ((rt0.c4) NOT NULL), ((((NULL)OR(rt0.c2)))AND(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))!=(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c4)IS(vt0.c0)) AS REAL) ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c3 COLLATE RTRIM, ((rt0.c0)&(rt0.c1))))<=((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END, ((rt0.c4) NOT NULL), ((((NULL)OR(rt0.c2)))AND(rt0.c0)))))  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c4)IS(vt0.c0)) AS REAL) WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<>(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c3 END))) ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c3 COLLATE RTRIM, ((rt0.c0)&(rt0.c1))))<=((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END, ((rt0.c4) NOT NULL), ((((NULL)OR(rt0.c2)))AND(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))!=(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c4)IS(vt0.c0)) AS REAL) ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c3 COLLATE RTRIM, ((rt0.c0)&(rt0.c1))))<=((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END, ((rt0.c4) NOT NULL), ((((NULL)OR(rt0.c2)))AND(rt0.c0)))))  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c4)IS(vt0.c0)) AS REAL) WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<>(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c3 END))) ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c3 COLLATE RTRIM, ((rt0.c0)&(rt0.c1))))<=((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END, ((rt0.c4) NOT NULL), ((((NULL)OR(rt0.c2)))AND(rt0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))&(((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))&(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))&(((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))&(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))&(((vt0.c0)*(vt0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)LIKE(v0.c2)))AND(LIKELY(DISTINCT vt0.c0))))AND(0.21801752743396474))) ORDER BY ((((v0.c0)OR(v0.c1)))OR(v0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(v0.c2)))AND(LIKELY(DISTINCT vt0.c0))))AND(0.21801752743396474))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)OR(v0.c1)))OR(v0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)LIKE(v0.c2)))AND(LIKELY(DISTINCT vt0.c0))))AND(0.21801752743396474))) ORDER BY ((((v0.c0)OR(v0.c1)))OR(v0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(v0.c2)))AND(LIKELY(DISTINCT vt0.c0))))AND(0.21801752743396474))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)OR(v0.c1)))OR(v0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)LIKE(v0.c2)))AND(LIKELY(DISTINCT vt0.c0))))AND(0.21801752743396474))) ORDER BY ((((v0.c0)OR(v0.c1)))OR(v0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((CAST(rt0.c1 AS INTEGER), ((v0.c1)LIKE(NULL)), ((v0.c0) IS TRUE)))<((rt0.c4 COLLATE NOCASE, ((((1.947439925E9)AND(v0.c0)))OR(x'')), x'' COLLATE NOCASE))) WHERE ((- (v0.c2)) COLLATE RTRIM) ORDER BY CASE ((rt0.c2)<<(rt0.c3))  WHEN '877274642' THEN 0.8478805883234342 END  NULLS LAST, load_extension(((rt0.c2)>>(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((CAST(rt0.c1 AS INTEGER), ((v0.c1)LIKE(NULL)), ((v0.c0) IS TRUE)))<((rt0.c4 COLLATE NOCASE, ((((1.947439925E9)AND(v0.c0)))OR(x'')), x'' COLLATE NOCASE))) ORDER BY CASE ((rt0.c2)<<(rt0.c3))  WHEN '877274642' THEN 0.8478805883234342 END  NULLS LAST, load_extension(((rt0.c2)>>(v0.c2))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((CAST(rt0.c1 AS INTEGER), ((v0.c1)LIKE(NULL)), ((v0.c0) IS TRUE)))<((rt0.c4 COLLATE NOCASE, ((((1.947439925E9)AND(v0.c0)))OR(x'')), x'' COLLATE NOCASE))) WHERE ((- (v0.c2)) COLLATE RTRIM) ORDER BY CASE ((rt0.c2)<<(rt0.c3))  WHEN '877274642' THEN 0.8478805883234342 END  NULLS LAST, load_extension(((rt0.c2)>>(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((CAST(rt0.c1 AS INTEGER), ((v0.c1)LIKE(NULL)), ((v0.c0) IS TRUE)))<((rt0.c4 COLLATE NOCASE, ((((1.947439925E9)AND(v0.c0)))OR(x'')), x'' COLLATE NOCASE))) ORDER BY CASE ((rt0.c2)<<(rt0.c3))  WHEN '877274642' THEN 0.8478805883234342 END  NULLS LAST, load_extension(((rt0.c2)>>(v0.c2))));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((x'')) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((x'')) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) IS FALSE)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((x'')) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((x'')) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) IS FALSE)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((x'')) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) IS FALSE));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((((((((((v0.c1)%(rt0.c0)))AND(v0.c1)))AND(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c1 THEN 'u(콸R' END)))OR((~ (v0.c2)))))AND(CAST(rt0.c1 AS TEXT))) WHERE (CASE CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 END  WHEN (v0.c2 IN (rt0.c4, v0.c2)) THEN (v0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 END  WHEN (v0.c2 IN (rt0.c4, v0.c2)) THEN (v0.c2 IN ()) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((((((v0.c1)%(rt0.c0)))AND(v0.c1)))AND(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c1 THEN 'u(콸R' END)))OR((~ (v0.c2)))))AND(CAST(rt0.c1 AS TEXT))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((((((((((v0.c1)%(rt0.c0)))AND(v0.c1)))AND(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c1 THEN 'u(콸R' END)))OR((~ (v0.c2)))))AND(CAST(rt0.c1 AS TEXT))) WHERE (CASE CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 END  WHEN (v0.c2 IN (rt0.c4, v0.c2)) THEN (v0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 END  WHEN (v0.c2 IN (rt0.c4, v0.c2)) THEN (v0.c2 IN ()) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((((((v0.c1)%(rt0.c0)))AND(v0.c1)))AND(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c1 THEN 'u(콸R' END)))OR((~ (v0.c2)))))AND(CAST(rt0.c1 AS TEXT))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((((((((((v0.c1)%(rt0.c0)))AND(v0.c1)))AND(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c1 THEN 'u(콸R' END)))OR((~ (v0.c2)))))AND(CAST(rt0.c1 AS TEXT))) WHERE (CASE CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 END  WHEN (v0.c2 IN (rt0.c4, v0.c2)) THEN (v0.c2 IN ()) END);
SELECT * FROM vt0, v0, rt0 WHERE (CAST(v0.c1 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (CAST(v0.c1 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (CAST(v0.c1 COLLATE BINARY AS TEXT));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((~ (((rt0.c3)<=(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c3)<=(v0.c2))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((~ (((rt0.c3)<=(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c3)<=(v0.c2))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((~ (((rt0.c3)<=(v0.c2)))));
SELECT * FROM rt0 WHERE (CAST('1015912777' AS NUMERIC)) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (' 3[y'))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4))) AND (CAST(rt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('1015912777' AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (' 3[y'))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4))) AND (CAST(rt0.c0 AS NUMERIC)))  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST('1015912777' AS NUMERIC)) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (' 3[y'))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4))) AND (CAST(rt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('1015912777' AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (' 3[y'))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4))) AND (CAST(rt0.c0 AS NUMERIC)))  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST('1015912777' AS NUMERIC)) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (' 3[y'))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4))) AND (CAST(rt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN vt0 ON CASE ((rt0.c4)%(v0.c1))  WHEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) THEN (((((((((((('')OR(0.930017516725962)))AND(v0.c2)))OR(v0.c0)))OR(v0.c1)))OR(vt0.c0)))AND(NULL)) END WHERE (((((((((LIKELIHOOD(DISTINCT v0.c2, 0.16935501748615267))OR('1090877059')))AND(CAST(v0.c2 AS INTEGER))))AND((~ (rt0.c3)))))OR((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt0.c0)))))) ORDER BY ((v0.c1 COLLATE RTRIM)%(((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))OR(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((LIKELIHOOD(DISTINCT v0.c2, 0.16935501748615267))OR('1090877059')))AND(CAST(v0.c2 AS INTEGER))))AND((~ (rt0.c3)))))OR((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON CASE ((rt0.c4)%(v0.c1))  WHEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) THEN (((((((((((('')OR(0.930017516725962)))AND(v0.c2)))OR(v0.c0)))OR(v0.c1)))OR(vt0.c0)))AND(NULL)) END ORDER BY ((v0.c1 COLLATE RTRIM)%(((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))OR(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN vt0 ON CASE ((rt0.c4)%(v0.c1))  WHEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) THEN (((((((((((('')OR(0.930017516725962)))AND(v0.c2)))OR(v0.c0)))OR(v0.c1)))OR(vt0.c0)))AND(NULL)) END WHERE (((((((((LIKELIHOOD(DISTINCT v0.c2, 0.16935501748615267))OR('1090877059')))AND(CAST(v0.c2 AS INTEGER))))AND((~ (rt0.c3)))))OR((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt0.c0)))))) ORDER BY ((v0.c1 COLLATE RTRIM)%(((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))OR(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((LIKELIHOOD(DISTINCT v0.c2, 0.16935501748615267))OR('1090877059')))AND(CAST(v0.c2 AS INTEGER))))AND((~ (rt0.c3)))))OR((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON CASE ((rt0.c4)%(v0.c1))  WHEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) THEN (((((((((((('')OR(0.930017516725962)))AND(v0.c2)))OR(v0.c0)))OR(v0.c1)))OR(vt0.c0)))AND(NULL)) END ORDER BY ((v0.c1 COLLATE RTRIM)%(((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))OR(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN vt0 ON CASE ((rt0.c4)%(v0.c1))  WHEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) THEN (((((((((((('')OR(0.930017516725962)))AND(v0.c2)))OR(v0.c0)))OR(v0.c1)))OR(vt0.c0)))AND(NULL)) END WHERE (((((((((LIKELIHOOD(DISTINCT v0.c2, 0.16935501748615267))OR('1090877059')))AND(CAST(v0.c2 AS INTEGER))))AND((~ (rt0.c3)))))OR((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt0.c0)))))) ORDER BY ((v0.c1 COLLATE RTRIM)%(((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))OR(v0.c0))))  NULLS LAST;
SELECT * FROM rt0 WHERE ((+ (rt0.c0))) ORDER BY CAST((((rt0.c3)) BETWEEN ((0x1a7e0798)) AND ((NULL))) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c3)) BETWEEN ((0x1a7e0798)) AND ((NULL))) AS TEXT)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((+ (rt0.c0))) ORDER BY CAST((((rt0.c3)) BETWEEN ((0x1a7e0798)) AND ((NULL))) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c3)) BETWEEN ((0x1a7e0798)) AND ((NULL))) AS TEXT)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((+ (rt0.c0))) ORDER BY CAST((((rt0.c3)) BETWEEN ((0x1a7e0798)) AND ((NULL))) AS TEXT)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((~ (v0.c0))) NOT BETWEEN (((v0.c1) BETWEEN (v0.c2) AND (v0.c1))) AND (v0.c0))) ORDER BY ((((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c1 END) AND (((((((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))), ((((v0.c1)+(v0.c1))) NOT BETWEEN (v0.c0) AND (CASE v0.c0  WHEN v0.c1 THEN v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0))) NOT BETWEEN (((v0.c1) BETWEEN (v0.c2) AND (v0.c1))) AND (v0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c1 END) AND (((((((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))), ((((v0.c1)+(v0.c1))) NOT BETWEEN (v0.c0) AND (CASE v0.c0  WHEN v0.c1 THEN v0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((~ (v0.c0))) NOT BETWEEN (((v0.c1) BETWEEN (v0.c2) AND (v0.c1))) AND (v0.c0))) ORDER BY ((((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c1 END) AND (((((((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))), ((((v0.c1)+(v0.c1))) NOT BETWEEN (v0.c0) AND (CASE v0.c0  WHEN v0.c1 THEN v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0))) NOT BETWEEN (((v0.c1) BETWEEN (v0.c2) AND (v0.c1))) AND (v0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c1 END) AND (((((((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))), ((((v0.c1)+(v0.c1))) NOT BETWEEN (v0.c0) AND (CASE v0.c0  WHEN v0.c1 THEN v0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((~ (v0.c0))) NOT BETWEEN (((v0.c1) BETWEEN (v0.c2) AND (v0.c1))) AND (v0.c0))) ORDER BY ((((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c1 END) AND (((((((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))), ((((v0.c1)+(v0.c1))) NOT BETWEEN (v0.c0) AND (CASE v0.c0  WHEN v0.c1 THEN v0.c0 END)) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((v0.c1))) THEN NULL END WHERE (v0.c1) ORDER BY (((((rt0.c4 IN ('-11192207')))AND(CAST(rt0.c3 AS NUMERIC))))OR(CHAR(v0.c2))) ASC, (((((((v0.c2)AND(rt0.c4)))AND(rt0.c4))))<=(((~ (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((v0.c1))) THEN NULL END ORDER BY (((((rt0.c4 IN ('-11192207')))AND(CAST(rt0.c3 AS NUMERIC))))OR(CHAR(v0.c2))) ASC, (((((((v0.c2)AND(rt0.c4)))AND(rt0.c4))))<=(((~ (v0.c1))))));
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((v0.c1))) THEN NULL END WHERE (v0.c1) ORDER BY (((((rt0.c4 IN ('-11192207')))AND(CAST(rt0.c3 AS NUMERIC))))OR(CHAR(v0.c2))) ASC, (((((((v0.c2)AND(rt0.c4)))AND(rt0.c4))))<=(((~ (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((v0.c1))) THEN NULL END ORDER BY (((((rt0.c4 IN ('-11192207')))AND(CAST(rt0.c3 AS NUMERIC))))OR(CHAR(v0.c2))) ASC, (((((((v0.c2)AND(rt0.c4)))AND(rt0.c4))))<=(((~ (v0.c1))))));
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((v0.c1))) THEN NULL END WHERE (v0.c1) ORDER BY (((((rt0.c4 IN ('-11192207')))AND(CAST(rt0.c3 AS NUMERIC))))OR(CHAR(v0.c2))) ASC, (((((((v0.c2)AND(rt0.c4)))AND(rt0.c4))))<=(((~ (v0.c1)))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST('*~' AS INTEGER) COLLATE RTRIM INNER JOIN vt0 ON (((rt0.c1 IN (rt0.c2))) IS FALSE) WHERE ((CAST(v0.c2 AS BLOB) IN ())) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(v0.c2 AS BLOB) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST('*~' AS INTEGER) COLLATE RTRIM INNER JOIN vt0 ON (((rt0.c1 IN (rt0.c2))) IS FALSE) ORDER BY x'' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST('*~' AS INTEGER) COLLATE RTRIM INNER JOIN vt0 ON (((rt0.c1 IN (rt0.c2))) IS FALSE) WHERE ((CAST(v0.c2 AS BLOB) IN ())) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(v0.c2 AS BLOB) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST('*~' AS INTEGER) COLLATE RTRIM INNER JOIN vt0 ON (((rt0.c1 IN (rt0.c2))) IS FALSE) ORDER BY x'' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST('*~' AS INTEGER) COLLATE RTRIM INNER JOIN vt0 ON (((rt0.c1 IN (rt0.c2))) IS FALSE) WHERE ((CAST(v0.c2 AS BLOB) IN ())) ORDER BY x'' DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON (((rt0.c4 IN ()))|(v0.c0)) WHERE ((NOT (CAST(rt0.c4 AS BLOB)))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c4 AS BLOB)))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON (((rt0.c4 IN ()))|(v0.c0)) ORDER BY (vt0.c0 IN ()) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON (((rt0.c4 IN ()))|(v0.c0)) WHERE ((NOT (CAST(rt0.c4 AS BLOB)))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c4 AS BLOB)))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON (((rt0.c4 IN ()))|(v0.c0)) ORDER BY (vt0.c0 IN ()) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON (((rt0.c4 IN ()))|(v0.c0)) WHERE ((NOT (CAST(rt0.c4 AS BLOB)))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY DESC;
SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT ((((NULL)OR('JA')))AND(rt0.c2)), (- (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((((NULL)OR('JA')))AND(rt0.c2)), (- (rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT ((((NULL)OR('JA')))AND(rt0.c2)), (- (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((((NULL)OR('JA')))AND(rt0.c2)), (- (rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT ((((NULL)OR('JA')))AND(rt0.c2)), (- (rt0.c4))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)-(rt0.c0)))*((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)-(rt0.c0)))*((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)-(rt0.c0)))*((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)-(rt0.c0)))*((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)-(rt0.c0)))*((rt0.c0 IN ()))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c3)IS(rt0.c0))) ISNULL) WHERE (LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.48110543093183467));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.48110543093183467)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c3)IS(rt0.c0))) ISNULL));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c3)IS(rt0.c0))) ISNULL) WHERE (LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.48110543093183467));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.48110543093183467)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c3)IS(rt0.c0))) ISNULL));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c3)IS(rt0.c0))) ISNULL) WHERE (LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.48110543093183467));
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c2)&(v0.c2)))OR(((((v0.c1)OR(v0.c1)))AND(v0.c0)))))OR(((v0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)&(v0.c2)))OR(((((v0.c1)OR(v0.c1)))AND(v0.c0)))))OR(((v0.c2) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c2)&(v0.c2)))OR(((((v0.c1)OR(v0.c1)))AND(v0.c0)))))OR(((v0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)&(v0.c2)))OR(((((v0.c1)OR(v0.c1)))AND(v0.c0)))))OR(((v0.c2) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c2)&(v0.c2)))OR(((((v0.c1)OR(v0.c1)))AND(v0.c0)))))OR(((v0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0, v0 FULL OUTER JOIN rt0 ON CAST(ROUND(rt0.c2, vt0.c0) AS INTEGER) WHERE ((- ((+ (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (v0.c1))))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON CAST(ROUND(rt0.c2, vt0.c0) AS INTEGER));
SELECT * FROM vt0, v0 FULL OUTER JOIN rt0 ON CAST(ROUND(rt0.c2, vt0.c0) AS INTEGER) WHERE ((- ((+ (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (v0.c1))))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON CAST(ROUND(rt0.c2, vt0.c0) AS INTEGER));
SELECT * FROM vt0, v0 FULL OUTER JOIN rt0 ON CAST(ROUND(rt0.c2, vt0.c0) AS INTEGER) WHERE ((- ((+ (v0.c1)))));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0)IS(rt0.c0)))<(((rt0.c1)|(rt0.c0))))) ORDER BY ((vt0.c0) NOT NULL) ASC  NULLS FIRST, (((rt0.c3)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((((x'') IS FALSE)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS(rt0.c0)))<(((rt0.c1)|(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0) NOT NULL) ASC  NULLS FIRST, (((rt0.c3)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((((x'') IS FALSE)))) DESC);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0)IS(rt0.c0)))<(((rt0.c1)|(rt0.c0))))) ORDER BY ((vt0.c0) NOT NULL) ASC  NULLS FIRST, (((rt0.c3)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((((x'') IS FALSE)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS(rt0.c0)))<(((rt0.c1)|(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0) NOT NULL) ASC  NULLS FIRST, (((rt0.c3)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((((x'') IS FALSE)))) DESC);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0)IS(rt0.c0)))<(((rt0.c1)|(rt0.c0))))) ORDER BY ((vt0.c0) NOT NULL) ASC  NULLS FIRST, (((rt0.c3)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((((x'') IS FALSE)))) DESC;
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 CROSS JOIN rt0 ON ((0.089100328255722) NOTNULL) WHERE ('-11192207');
SELECT SUM(count) FROM (SELECT ALL (('-11192207') IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON ((0.089100328255722) NOTNULL));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 CROSS JOIN rt0 ON ((0.089100328255722) NOTNULL) WHERE ('-11192207');
SELECT SUM(count) FROM (SELECT ALL (('-11192207') IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON ((0.089100328255722) NOTNULL));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 CROSS JOIN rt0 ON ((0.089100328255722) NOTNULL) WHERE ('-11192207');
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c1, 'mqt[N+', rt0.c4, vt0.c0, vt0.c0)) BETWEEN ((v0.c1, x'', v0.c1 COLLATE BINARY, (((rt0.c0))<=((v0.c2))), x'')) AND ((v0.c1 COLLATE NOCASE, rt0.c2, CASE WHEN x'' THEN vt0.c0 WHEN v0.c1 THEN rt0.c1 WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END, (~ (rt0.c1)), ((rt0.c4) NOT BETWEEN (',#<r\L⻾') AND (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, 'mqt[N+', rt0.c4, vt0.c0, vt0.c0)) BETWEEN ((v0.c1, x'', v0.c1 COLLATE BINARY, (((rt0.c0))<=((v0.c2))), x'')) AND ((v0.c1 COLLATE NOCASE, rt0.c2, CASE WHEN x'' THEN vt0.c0 WHEN v0.c1 THEN rt0.c1 WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END, (~ (rt0.c1)), ((rt0.c4) NOT BETWEEN (',#<r\L⻾') AND (rt0.c3)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c1, 'mqt[N+', rt0.c4, vt0.c0, vt0.c0)) BETWEEN ((v0.c1, x'', v0.c1 COLLATE BINARY, (((rt0.c0))<=((v0.c2))), x'')) AND ((v0.c1 COLLATE NOCASE, rt0.c2, CASE WHEN x'' THEN vt0.c0 WHEN v0.c1 THEN rt0.c1 WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END, (~ (rt0.c1)), ((rt0.c4) NOT BETWEEN (',#<r\L⻾') AND (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, 'mqt[N+', rt0.c4, vt0.c0, vt0.c0)) BETWEEN ((v0.c1, x'', v0.c1 COLLATE BINARY, (((rt0.c0))<=((v0.c2))), x'')) AND ((v0.c1 COLLATE NOCASE, rt0.c2, CASE WHEN x'' THEN vt0.c0 WHEN v0.c1 THEN rt0.c1 WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END, (~ (rt0.c1)), ((rt0.c4) NOT BETWEEN (',#<r\L⻾') AND (rt0.c3)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c1, 'mqt[N+', rt0.c4, vt0.c0, vt0.c0)) BETWEEN ((v0.c1, x'', v0.c1 COLLATE BINARY, (((rt0.c0))<=((v0.c2))), x'')) AND ((v0.c1 COLLATE NOCASE, rt0.c2, CASE WHEN x'' THEN vt0.c0 WHEN v0.c1 THEN rt0.c1 WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END, (~ (rt0.c1)), ((rt0.c4) NOT BETWEEN (',#<r\L⻾') AND (rt0.c3))))));
SELECT COUNT(*) FROM v0, vt0 WHERE (IFNULL(CAST(vt0.c0 AS BLOB), ((v0.c1)&(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(vt0.c0 AS BLOB), ((v0.c1)&(v0.c1)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (IFNULL(CAST(vt0.c0 AS BLOB), ((v0.c1)&(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(vt0.c0 AS BLOB), ((v0.c1)&(v0.c1)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (IFNULL(CAST(vt0.c0 AS BLOB), ((v0.c1)&(v0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (x'669c') ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'669c') IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'669c') ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'669c') IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'669c') ORDER BY rt0.c2  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c1)/(vt0.c0)))AND(CAST(rt0.c1 AS REAL))))AND(((rt0.c2) NOTNULL)))) ORDER BY (+ (vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)/(vt0.c0)))AND(CAST(rt0.c1 AS REAL))))AND(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c1)/(vt0.c0)))AND(CAST(rt0.c1 AS REAL))))AND(((rt0.c2) NOTNULL)))) ORDER BY (+ (vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)/(vt0.c0)))AND(CAST(rt0.c1 AS REAL))))AND(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c1)/(vt0.c0)))AND(CAST(rt0.c1 AS REAL))))AND(((rt0.c2) NOTNULL)))) ORDER BY (+ (vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))|(CASE WHEN v0.c1 THEN rt0.c4 ELSE 0.01871538985210186 END))) ORDER BY (((v0.c0)) BETWEEN ((CASE rt0.c4  WHEN x'' THEN rt0.c4 ELSE v0.c0 END)) AND ((((rt0.c1) NOT NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))|(CASE WHEN v0.c1 THEN rt0.c4 ELSE 0.01871538985210186 END))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((v0.c0)) BETWEEN ((CASE rt0.c4  WHEN x'' THEN rt0.c4 ELSE v0.c0 END)) AND ((((rt0.c1) NOT NULL)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))|(CASE WHEN v0.c1 THEN rt0.c4 ELSE 0.01871538985210186 END))) ORDER BY (((v0.c0)) BETWEEN ((CASE rt0.c4  WHEN x'' THEN rt0.c4 ELSE v0.c0 END)) AND ((((rt0.c1) NOT NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))|(CASE WHEN v0.c1 THEN rt0.c4 ELSE 0.01871538985210186 END))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((v0.c0)) BETWEEN ((CASE rt0.c4  WHEN x'' THEN rt0.c4 ELSE v0.c0 END)) AND ((((rt0.c1) NOT NULL)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))|(CASE WHEN v0.c1 THEN rt0.c4 ELSE 0.01871538985210186 END))) ORDER BY (((v0.c0)) BETWEEN ((CASE rt0.c4  WHEN x'' THEN rt0.c4 ELSE v0.c0 END)) AND ((((rt0.c1) NOT NULL)))) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC)) IS TRUE)) ORDER BY ((v0.c1) IS FALSE) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c1) IS FALSE) COLLATE BINARY DESC);
SELECT ALL * FROM v0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC)) IS TRUE)) ORDER BY ((v0.c1) IS FALSE) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c1) IS FALSE) COLLATE BINARY DESC);
SELECT ALL * FROM v0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC)) IS TRUE)) ORDER BY ((v0.c1) IS FALSE) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_VERSION() COLLATE NOCASE) ORDER BY v0.c1  NULLS LAST, ((((v0.c2) BETWEEN (v0.c1) AND (v0.c2)))<(v0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION() COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY v0.c1  NULLS LAST, ((((v0.c2) BETWEEN (v0.c1) AND (v0.c2)))<(v0.c0 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_VERSION() COLLATE NOCASE) ORDER BY v0.c1  NULLS LAST, ((((v0.c2) BETWEEN (v0.c1) AND (v0.c2)))<(v0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION() COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY v0.c1  NULLS LAST, ((((v0.c2) BETWEEN (v0.c1) AND (v0.c2)))<(v0.c0 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_VERSION() COLLATE NOCASE) ORDER BY v0.c1  NULLS LAST, ((((v0.c2) BETWEEN (v0.c1) AND (v0.c2)))<(v0.c0 COLLATE NOCASE)) ASC;
SELECT * FROM vt0, rt0, v0 WHERE (((('877274642'))>((vt0.c0)))) ORDER BY ((((v0.c1)OR(((v0.c0) NOT NULL))))AND((((rt0.c3))>=((rt0.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('877274642'))>((vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((v0.c1)OR(((v0.c0) NOT NULL))))AND((((rt0.c3))>=((rt0.c4)))))  NULLS FIRST);
SELECT * FROM vt0, rt0, v0 WHERE (((('877274642'))>((vt0.c0)))) ORDER BY ((((v0.c1)OR(((v0.c0) NOT NULL))))AND((((rt0.c3))>=((rt0.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('877274642'))>((vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((v0.c1)OR(((v0.c0) NOT NULL))))AND((((rt0.c3))>=((rt0.c4)))))  NULLS FIRST);
SELECT * FROM vt0, rt0, v0 WHERE (((('877274642'))>((vt0.c0)))) ORDER BY ((((v0.c1)OR(((v0.c0) NOT NULL))))AND((((rt0.c3))>=((rt0.c4)))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, v0 WHERE ((- (load_extension(rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (load_extension(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((- (load_extension(rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (load_extension(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 CROSS JOIN vt0 ON rt0.c1 WHERE (((('0.07383270915695239')<(v0.c0)) IN (((vt0.c0)|(rt0.c2)), ((rt0.c3) BETWEEN (rt0.c3) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((('0.07383270915695239')<(v0.c0)) IN (((vt0.c0)|(rt0.c2)), ((rt0.c3) BETWEEN (rt0.c3) AND (v0.c0))))) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM rt0, v0 CROSS JOIN vt0 ON rt0.c1 WHERE (((('0.07383270915695239')<(v0.c0)) IN (((vt0.c0)|(rt0.c2)), ((rt0.c3) BETWEEN (rt0.c3) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((('0.07383270915695239')<(v0.c0)) IN (((vt0.c0)|(rt0.c2)), ((rt0.c3) BETWEEN (rt0.c3) AND (v0.c0))))) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM rt0, v0 CROSS JOIN vt0 ON rt0.c1 WHERE (((('0.07383270915695239')<(v0.c0)) IN (((vt0.c0)|(rt0.c2)), ((rt0.c3) BETWEEN (rt0.c3) AND (v0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c3 COLLATE BINARY))) ORDER BY (((((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c3)))));
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c3 COLLATE BINARY))) ORDER BY (((((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c3)))));
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c3 COLLATE BINARY))) ORDER BY (((((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c3))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN (((((rt0.c1))>((rt0.c0))))) AND ((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((((rt0.c1))>((rt0.c0))))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN (((((rt0.c1))>((rt0.c0))))) AND ((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((((rt0.c1))>((rt0.c0))))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN (((((rt0.c1))>((rt0.c0))))) AND ((vt0.c0 COLLATE BINARY))));
SELECT ALL * FROM v0 WHERE ((((v0.c2)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((v0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((v0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c2)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((v0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((v0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c2)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((v0.c2 COLLATE RTRIM))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((((rt0.c3))<((v0.c0)))) NOT BETWEEN (((rt0.c4)>=(v0.c0))) AND (CAST(v0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))<((v0.c0)))) NOT BETWEEN (((rt0.c4)>=(v0.c0))) AND (CAST(v0.c2 AS REAL)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((((rt0.c3))<((v0.c0)))) NOT BETWEEN (((rt0.c4)>=(v0.c0))) AND (CAST(v0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))<((v0.c0)))) NOT BETWEEN (((rt0.c4)>=(v0.c0))) AND (CAST(v0.c2 AS REAL)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((((rt0.c3))<((v0.c0)))) NOT BETWEEN (((rt0.c4)>=(v0.c0))) AND (CAST(v0.c2 AS REAL))));
SELECT * FROM rt0, v0 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)), rt0.c0, rt0.c1))>=((((v0.c1) NOT BETWEEN (v0.c0) AND (rt0.c4)), v0.c2 COLLATE NOCASE, ((rt0.c2)==(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)), rt0.c0, rt0.c1))>=((((v0.c1) NOT BETWEEN (v0.c0) AND (rt0.c4)), v0.c2 COLLATE NOCASE, ((rt0.c2)==(v0.c0)))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)), rt0.c0, rt0.c1))>=((((v0.c1) NOT BETWEEN (v0.c0) AND (rt0.c4)), v0.c2 COLLATE NOCASE, ((rt0.c2)==(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)), rt0.c0, rt0.c1))>=((((v0.c1) NOT BETWEEN (v0.c0) AND (rt0.c4)), v0.c2 COLLATE NOCASE, ((rt0.c2)==(v0.c0)))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)), rt0.c0, rt0.c1))>=((((v0.c1) NOT BETWEEN (v0.c0) AND (rt0.c4)), v0.c2 COLLATE NOCASE, ((rt0.c2)==(v0.c0))))));
SELECT * FROM vt0, v0, rt0 WHERE ((((NOT (v0.c1)))IS(NULL))) ORDER BY ((((((((((v0.c2)AND(rt0.c2)))AND(v0.c2)))OR(rt0.c0)))OR(vt0.c0)))LIKE((((v0.c1)) NOT BETWEEN ((rt0.c1)) AND ((''))))) DESC  NULLS LAST, ((CASE v0.c2  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 ELSE v0.c2 END)OR(((x'')||(v0.c1))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c1)))IS(NULL))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((((((((v0.c2)AND(rt0.c2)))AND(v0.c2)))OR(rt0.c0)))OR(vt0.c0)))LIKE((((v0.c1)) NOT BETWEEN ((rt0.c1)) AND ((''))))) DESC  NULLS LAST, ((CASE v0.c2  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 ELSE v0.c2 END)OR(((x'')||(v0.c1)))));
SELECT * FROM vt0, v0, rt0 WHERE ((((NOT (v0.c1)))IS(NULL))) ORDER BY ((((((((((v0.c2)AND(rt0.c2)))AND(v0.c2)))OR(rt0.c0)))OR(vt0.c0)))LIKE((((v0.c1)) NOT BETWEEN ((rt0.c1)) AND ((''))))) DESC  NULLS LAST, ((CASE v0.c2  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 ELSE v0.c2 END)OR(((x'')||(v0.c1))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c1)))IS(NULL))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((((((((v0.c2)AND(rt0.c2)))AND(v0.c2)))OR(rt0.c0)))OR(vt0.c0)))LIKE((((v0.c1)) NOT BETWEEN ((rt0.c1)) AND ((''))))) DESC  NULLS LAST, ((CASE v0.c2  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 ELSE v0.c2 END)OR(((x'')||(v0.c1)))));
SELECT * FROM vt0, v0, rt0 WHERE ((((NOT (v0.c1)))IS(NULL))) ORDER BY ((((((((((v0.c2)AND(rt0.c2)))AND(v0.c2)))OR(rt0.c0)))OR(vt0.c0)))LIKE((((v0.c1)) NOT BETWEEN ((rt0.c1)) AND ((''))))) DESC  NULLS LAST, ((CASE v0.c2  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 ELSE v0.c2 END)OR(((x'')||(v0.c1))));
SELECT COUNT(*) FROM v0 WHERE (UNLIKELY(DISTINCT ((((v0.c0)AND(x'')))AND(v0.c2)))) ORDER BY ((((((((v0.c0)OR(v0.c2)))AND(v0.c1)))AND(v0.c1 COLLATE BINARY)))AND(0X65c9616d));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((((v0.c0)AND(x'')))AND(v0.c2)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0)OR(v0.c2)))AND(v0.c1)))AND(v0.c1 COLLATE BINARY)))AND(0x65c9616d)));
SELECT COUNT(*) FROM v0 WHERE (UNLIKELY(DISTINCT ((((v0.c0)AND(x'')))AND(v0.c2)))) ORDER BY ((((((((v0.c0)OR(v0.c2)))AND(v0.c1)))AND(v0.c1 COLLATE BINARY)))AND(0X65c9616d));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((((v0.c0)AND(x'')))AND(v0.c2)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0)OR(v0.c2)))AND(v0.c1)))AND(v0.c1 COLLATE BINARY)))AND(0x65c9616d)));
SELECT COUNT(*) FROM v0 WHERE (UNLIKELY(DISTINCT ((((v0.c0)AND(x'')))AND(v0.c2)))) ORDER BY ((((((((v0.c0)OR(v0.c2)))AND(v0.c1)))AND(v0.c1 COLLATE BINARY)))AND(0X65c9616d));
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) ORDER BY CASE WHEN CASE 0Xffffffff9c430820  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN ()) END  NULLS FIRST, ((NOT (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE 0Xffffffff9c430820  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN ()) END  NULLS FIRST, ((NOT (vt0.c0)) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) ORDER BY CASE WHEN CASE 0Xffffffff9c430820  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN ()) END  NULLS FIRST, ((NOT (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE 0Xffffffff9c430820  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN ()) END  NULLS FIRST, ((NOT (vt0.c0)) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) ORDER BY CASE WHEN CASE 0Xffffffff9c430820  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN ()) END  NULLS FIRST, ((NOT (vt0.c0)) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (TYPEOF(DISTINCT v0.c2) COLLATE RTRIM) ORDER BY CASE CAST(v0.c1 AS TEXT)  WHEN ((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))OR(8.77274642E8)))AND(v0.c2)) THEN CAST(v0.c1 AS NUMERIC) WHEN v0.c0 COLLATE BINARY THEN MIN(v0.c0, v0.c0) WHEN CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END THEN ((vt0.c0)-(v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT v0.c2) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE CAST(v0.c1 AS TEXT)  WHEN ((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))OR(8.77274642E8)))AND(v0.c2)) THEN CAST(v0.c1 AS NUMERIC) WHEN v0.c0 COLLATE BINARY THEN MIN(v0.c0, v0.c0) WHEN CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END THEN ((vt0.c0)-(v0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (TYPEOF(DISTINCT v0.c2) COLLATE RTRIM) ORDER BY CASE CAST(v0.c1 AS TEXT)  WHEN ((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))OR(8.77274642E8)))AND(v0.c2)) THEN CAST(v0.c1 AS NUMERIC) WHEN v0.c0 COLLATE BINARY THEN MIN(v0.c0, v0.c0) WHEN CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END THEN ((vt0.c0)-(v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT v0.c2) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE CAST(v0.c1 AS TEXT)  WHEN ((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))OR(8.77274642E8)))AND(v0.c2)) THEN CAST(v0.c1 AS NUMERIC) WHEN v0.c0 COLLATE BINARY THEN MIN(v0.c0, v0.c0) WHEN CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END THEN ((vt0.c0)-(v0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (TYPEOF(DISTINCT v0.c2) COLLATE RTRIM) ORDER BY CASE CAST(v0.c1 AS TEXT)  WHEN ((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))OR(8.77274642E8)))AND(v0.c2)) THEN CAST(v0.c1 AS NUMERIC) WHEN v0.c0 COLLATE BINARY THEN MIN(v0.c0, v0.c0) WHEN CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END THEN ((vt0.c0)-(v0.c0)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (0xfffffffffec59ed0);
SELECT SUM(count) FROM (SELECT ALL ((0xfffffffffec59ed0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0xfffffffffec59ed0);
SELECT SUM(count) FROM (SELECT ALL ((0xfffffffffec59ed0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0xfffffffffec59ed0);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON 0.17893604853614054 FULL OUTER JOIN vt0 ON (+ (v0.c1 COLLATE BINARY)) WHERE ((CAST(rt0.c2 AS INTEGER) IN (CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN v0.c0 WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN x'e2ce' END, (v0.c2 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS INTEGER) IN (CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN v0.c0 WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN x'e2ce' END, (v0.c2 IN (rt0.c3))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON 0.17893604853614054 FULL OUTER JOIN vt0 ON (+ (v0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON 0.17893604853614054 FULL OUTER JOIN vt0 ON (+ (v0.c1 COLLATE BINARY)) WHERE ((CAST(rt0.c2 AS INTEGER) IN (CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN v0.c0 WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN x'e2ce' END, (v0.c2 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS INTEGER) IN (CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN v0.c0 WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN x'e2ce' END, (v0.c2 IN (rt0.c3))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON 0.17893604853614054 FULL OUTER JOIN vt0 ON (+ (v0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON 0.17893604853614054 FULL OUTER JOIN vt0 ON (+ (v0.c1 COLLATE BINARY)) WHERE ((CAST(rt0.c2 AS INTEGER) IN (CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN v0.c0 WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN x'e2ce' END, (v0.c2 IN (rt0.c3)))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1 COLLATE BINARY) ORDER BY (((((((((('-137397867')&(v0.c0)))AND(((((NULL)AND('')))OR(v0.c0)))))OR(((v0.c1) IS FALSE))))AND(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)))AND(NULL)) DESC  NULLS LAST, ((((((((((v0.c1)%(v0.c0)))OR(((v0.c0)&(v0.c2)))))AND(CAST(NULL AS INTEGER))))OR((((v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c0, '-214481109', v0.c0)) AND ((v0.c0, v0.c1, v0.c2))))))AND((((v0.c2))<((v0.c2))))) ASC, CASE WHEN ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)) THEN (- (v0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1 COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((((((((('-137397867')&(v0.c0)))AND(((((NULL)AND('')))OR(v0.c0)))))OR(((v0.c1) IS FALSE))))AND(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)))AND(NULL)) DESC  NULLS LAST, ((((((((((v0.c1)%(v0.c0)))OR(((v0.c0)&(v0.c2)))))AND(CAST(NULL AS INTEGER))))OR((((v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c0, '-214481109', v0.c0)) AND ((v0.c0, v0.c1, v0.c2))))))AND((((v0.c2))<((v0.c2))))) ASC, CASE WHEN ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)) THEN (- (v0.c1)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1 COLLATE BINARY) ORDER BY (((((((((('-137397867')&(v0.c0)))AND(((((NULL)AND('')))OR(v0.c0)))))OR(((v0.c1) IS FALSE))))AND(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)))AND(NULL)) DESC  NULLS LAST, ((((((((((v0.c1)%(v0.c0)))OR(((v0.c0)&(v0.c2)))))AND(CAST(NULL AS INTEGER))))OR((((v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c0, '-214481109', v0.c0)) AND ((v0.c0, v0.c1, v0.c2))))))AND((((v0.c2))<((v0.c2))))) ASC, CASE WHEN ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)) THEN (- (v0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1 COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((((((((('-137397867')&(v0.c0)))AND(((((NULL)AND('')))OR(v0.c0)))))OR(((v0.c1) IS FALSE))))AND(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)))AND(NULL)) DESC  NULLS LAST, ((((((((((v0.c1)%(v0.c0)))OR(((v0.c0)&(v0.c2)))))AND(CAST(NULL AS INTEGER))))OR((((v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c0, '-214481109', v0.c0)) AND ((v0.c0, v0.c1, v0.c2))))))AND((((v0.c2))<((v0.c2))))) ASC, CASE WHEN ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)) THEN (- (v0.c1)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1 COLLATE BINARY) ORDER BY (((((((((('-137397867')&(v0.c0)))AND(((((NULL)AND('')))OR(v0.c0)))))OR(((v0.c1) IS FALSE))))AND(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)))AND(NULL)) DESC  NULLS LAST, ((((((((((v0.c1)%(v0.c0)))OR(((v0.c0)&(v0.c2)))))AND(CAST(NULL AS INTEGER))))OR((((v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c0, '-214481109', v0.c0)) AND ((v0.c0, v0.c1, v0.c2))))))AND((((v0.c2))<((v0.c2))))) ASC, CASE WHEN ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)) THEN (- (v0.c1)) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON rt0.c2 WHERE ((((('')OR(rt0.c3 COLLATE BINARY)))OR(rt0.c2))) ORDER BY v0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('')OR(rt0.c3 COLLATE BINARY)))OR(rt0.c2))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON rt0.c2 ORDER BY v0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON rt0.c2 WHERE ((((('')OR(rt0.c3 COLLATE BINARY)))OR(rt0.c2))) ORDER BY v0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('')OR(rt0.c3 COLLATE BINARY)))OR(rt0.c2))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON rt0.c2 ORDER BY v0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON rt0.c2 WHERE ((((('')OR(rt0.c3 COLLATE BINARY)))OR(rt0.c2))) ORDER BY v0.c2  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((rt0.c2))<((0.16988181248860101))))>((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<((0.16988181248860101))))>((- (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2))<((0.16988181248860101))))>((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<((0.16988181248860101))))>((- (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2))<((0.16988181248860101))))>((- (rt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (TYPEOF((v0.c1 IN (v0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((v0.c1 IN (v0.c0)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (TYPEOF((v0.c1 IN (v0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((v0.c1 IN (v0.c0)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (TYPEOF((v0.c1 IN (v0.c0))));
SELECT * FROM v0, vt0 WHERE (((((((vt0.c0)LIKE(-859064078)))OR(((((((((x'')OR(v0.c1)))OR(v0.c2)))OR(v0.c0)))OR(v0.c0)))))AND(CAST(v0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(-859064078)))OR(((((((((x'')OR(v0.c1)))OR(v0.c2)))OR(v0.c0)))OR(v0.c0)))))AND(CAST(v0.c2 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((vt0.c0)LIKE(-859064078)))OR(((((((((x'')OR(v0.c1)))OR(v0.c2)))OR(v0.c0)))OR(v0.c0)))))AND(CAST(v0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(-859064078)))OR(((((((((x'')OR(v0.c1)))OR(v0.c2)))OR(v0.c0)))OR(v0.c0)))))AND(CAST(v0.c2 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((vt0.c0)LIKE(-859064078)))OR(((((((((x'')OR(v0.c1)))OR(v0.c2)))OR(v0.c0)))OR(v0.c0)))))AND(CAST(v0.c2 AS NUMERIC))));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (UNLIKELY(DISTINCT rt0.c3) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt0.c3) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (UNLIKELY(DISTINCT rt0.c3) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt0.c3) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (UNLIKELY(DISTINCT rt0.c3) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((vt0.c0)>=(CAST(rt0.c4 AS REAL))) LEFT OUTER JOIN v0 ON ((rt0.c1)IS(MIN(v0.c0, rt0.c0))) WHERE (ABS(CASE WHEN 0.034221754681336036 THEN rt0.c4 ELSE rt0.c4 END));
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN 0.034221754681336036 THEN rt0.c4 ELSE rt0.c4 END)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((vt0.c0)>=(CAST(rt0.c4 AS REAL))) LEFT OUTER JOIN v0 ON ((rt0.c1)IS(MIN(v0.c0, rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((vt0.c0)>=(CAST(rt0.c4 AS REAL))) LEFT OUTER JOIN v0 ON ((rt0.c1)IS(MIN(v0.c0, rt0.c0))) WHERE (ABS(CASE WHEN 0.034221754681336036 THEN rt0.c4 ELSE rt0.c4 END));
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN 0.034221754681336036 THEN rt0.c4 ELSE rt0.c4 END)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((vt0.c0)>=(CAST(rt0.c4 AS REAL))) LEFT OUTER JOIN v0 ON ((rt0.c1)IS(MIN(v0.c0, rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((vt0.c0)>=(CAST(rt0.c4 AS REAL))) LEFT OUTER JOIN v0 ON ((rt0.c1)IS(MIN(v0.c0, rt0.c0))) WHERE (ABS(CASE WHEN 0.034221754681336036 THEN rt0.c4 ELSE rt0.c4 END));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM v0 WHERE (((LTRIM(x'847c', v0.c1))<=(TIME(v0.c2, v0.c2, v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(x'847c', v0.c1))<=(TIME(v0.c2, v0.c2, v0.c2)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((LTRIM(x'847c', v0.c1))<=(TIME(v0.c2, v0.c2, v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(x'847c', v0.c1))<=(TIME(v0.c2, v0.c2, v0.c2)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((LTRIM(x'847c', v0.c1))<=(TIME(v0.c2, v0.c2, v0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((v0.c2)) NOT BETWEEN ((((rt0.c2)IS NOT(rt0.c2)))) AND (((((rt0.c2, v0.c0, v0.c0)) BETWEEN ((v0.c1, rt0.c4, 0.6043900266511685)) AND ((v0.c0, 0.9948500106470864, rt0.c2))))))) ORDER BY ((NULL) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN ((((rt0.c2)IS NOT(rt0.c2)))) AND (((((rt0.c2, v0.c0, v0.c0)) BETWEEN ((v0.c1, rt0.c4, 0.6043900266511685)) AND ((v0.c0, 0.9948500106470864, rt0.c2))))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((NULL) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((v0.c2)) NOT BETWEEN ((((rt0.c2)IS NOT(rt0.c2)))) AND (((((rt0.c2, v0.c0, v0.c0)) BETWEEN ((v0.c1, rt0.c4, 0.6043900266511685)) AND ((v0.c0, 0.9948500106470864, rt0.c2))))))) ORDER BY ((NULL) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN ((((rt0.c2)IS NOT(rt0.c2)))) AND (((((rt0.c2, v0.c0, v0.c0)) BETWEEN ((v0.c1, rt0.c4, 0.6043900266511685)) AND ((v0.c0, 0.9948500106470864, rt0.c2))))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((NULL) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((v0.c2)) NOT BETWEEN ((((rt0.c2)IS NOT(rt0.c2)))) AND (((((rt0.c2, v0.c0, v0.c0)) BETWEEN ((v0.c1, rt0.c4, 0.6043900266511685)) AND ((v0.c0, 0.9948500106470864, rt0.c2))))))) ORDER BY ((NULL) NOT NULL);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- ((((vt0.c0))!=((rt0.c1)))))) ORDER BY CAST(rt0.c2 COLLATE NOCASE AS BLOB) DESC  NULLS LAST, CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0))!=((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c2 COLLATE NOCASE AS BLOB) DESC  NULLS LAST, CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- ((((vt0.c0))!=((rt0.c1)))))) ORDER BY CAST(rt0.c2 COLLATE NOCASE AS BLOB) DESC  NULLS LAST, CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0))!=((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c2 COLLATE NOCASE AS BLOB) DESC  NULLS LAST, CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- ((((vt0.c0))!=((rt0.c1)))))) ORDER BY CAST(rt0.c2 COLLATE NOCASE AS BLOB) DESC  NULLS LAST, CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END AS INTEGER);
SELECT ALL * FROM v0, vt0 WHERE (((CAST(v0.c1 AS NUMERIC)) ISNULL)) ORDER BY (((((((((((v0.c0)OR(304817120)))AND(v0.c0)))OR(v0.c1)))AND(v0.c1))))<((vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((((((((v0.c0)OR(304817120)))AND(v0.c0)))OR(v0.c1)))AND(v0.c1))))<((vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((CAST(v0.c1 AS NUMERIC)) ISNULL)) ORDER BY (((((((((((v0.c0)OR(304817120)))AND(v0.c0)))OR(v0.c1)))AND(v0.c1))))<((vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((((((((v0.c0)OR(304817120)))AND(v0.c0)))OR(v0.c1)))AND(v0.c1))))<((vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((CAST(v0.c1 AS NUMERIC)) ISNULL)) ORDER BY (((((((((((v0.c0)OR(304817120)))AND(v0.c0)))OR(v0.c1)))AND(v0.c1))))<((vt0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 NOT INDEXED, vt0, v0 WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((v0.c1)GLOB(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((v0.c1)GLOB(rt0.c4))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0 NOT INDEXED, vt0, v0 WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((v0.c1)GLOB(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((v0.c1)GLOB(rt0.c4))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0 NOT INDEXED, vt0, v0 WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((v0.c1)GLOB(rt0.c4)))));
SELECT ALL * FROM vt0, rt0 WHERE (CASE 0.7963681749373983  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.7963681749373983  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE 0.7963681749373983  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.7963681749373983  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE 0.7963681749373983  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN vt0.c0 END COLLATE NOCASE);
SELECT ALL * FROM rt0, vt0 WHERE (NULLIF(rt0.c4 COLLATE NOCASE, ((((((((0Xffffffffa2a89fef)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(NULL))));
SELECT SUM(count) FROM (SELECT ((NULLIF(rt0.c4 COLLATE NOCASE, ((((((((0Xffffffffa2a89fef)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (NULLIF(rt0.c4 COLLATE NOCASE, ((((((((0Xffffffffa2a89fef)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(NULL))));
SELECT SUM(count) FROM (SELECT ((NULLIF(rt0.c4 COLLATE NOCASE, ((((((((0Xffffffffa2a89fef)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (NULLIF(rt0.c4 COLLATE NOCASE, ((((((((0Xffffffffa2a89fef)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(NULL))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((NOT (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((NOT (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((NOT (((rt0.c0) IS FALSE))));
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((rt0.c1)=(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)=(rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((rt0.c1)=(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)=(rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((rt0.c1)=(rt0.c1))) ISNULL));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c3)/(v0.c2)), ((-214481109) BETWEEN (v0.c1) AND (v0.c1)), (~ (rt0.c3))))==(((+ (v0.c0)), (- (rt0.c2)), ((rt0.c2)OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)/(v0.c2)), ((-214481109) BETWEEN (v0.c1) AND (v0.c1)), (~ (rt0.c3))))=(((+ (v0.c0)), (- (rt0.c2)), ((rt0.c2)OR(rt0.c2)))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c3)/(v0.c2)), ((-214481109) BETWEEN (v0.c1) AND (v0.c1)), (~ (rt0.c3))))==(((+ (v0.c0)), (- (rt0.c2)), ((rt0.c2)OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)/(v0.c2)), ((-214481109) BETWEEN (v0.c1) AND (v0.c1)), (~ (rt0.c3))))=(((+ (v0.c0)), (- (rt0.c2)), ((rt0.c2)OR(rt0.c2)))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c3)/(v0.c2)), ((-214481109) BETWEEN (v0.c1) AND (v0.c1)), (~ (rt0.c3))))==(((+ (v0.c0)), (- (rt0.c2)), ((rt0.c2)OR(rt0.c2))))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((((((((('05H.|')<=(rt0.c3)))OR(((rt0.c0) ISNULL))))AND(x'69bb')))AND(((rt0.c2) IS TRUE))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((('05H.|')<=(rt0.c3)))OR(((rt0.c0) ISNULL))))AND(x'69bb')))AND(((rt0.c2) IS TRUE))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((((((((('05H.|')<=(rt0.c3)))OR(((rt0.c0) ISNULL))))AND(x'69bb')))AND(((rt0.c2) IS TRUE))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((('05H.|')<=(rt0.c3)))OR(((rt0.c0) ISNULL))))AND(x'69bb')))AND(((rt0.c2) IS TRUE))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((((((((('05H.|')<=(rt0.c3)))OR(((rt0.c0) ISNULL))))AND(x'69bb')))AND(((rt0.c2) IS TRUE))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM rt0, v0 WHERE ((CAST(rt0.c3 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c3 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((CAST(rt0.c3 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c3 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((CAST(rt0.c3 AS BLOB) IN ()));
SELECT * FROM vt0, v0 WHERE (((v0.c0) NOT BETWEEN (COALESCE(vt0.c0, v0.c2)) AND ((v0.c2 IN (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (COALESCE(vt0.c0, v0.c2)) AND ((v0.c2 IN (v0.c2))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((v0.c0) NOT BETWEEN (COALESCE(vt0.c0, v0.c2)) AND ((v0.c2 IN (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (COALESCE(vt0.c0, v0.c2)) AND ((v0.c2 IN (v0.c2))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((v0.c0) NOT BETWEEN (COALESCE(vt0.c0, v0.c2)) AND ((v0.c2 IN (v0.c2)))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON 0.7382542315832143 WHERE (((CASE WHEN v0.c0 THEN rt0.c4 WHEN v0.c0 THEN rt0.c4 WHEN rt0.c4 THEN 0.9951908024152161 ELSE rt0.c1 END)>=((((rt0.c1)) BETWEEN ((v0.c1)) AND ((v0.c0)))))) ORDER BY ((CAST(v0.c2 AS REAL)) BETWEEN (UNLIKELY(DISTINCT v0.c2)) AND (rt0.c4)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN rt0.c4 WHEN v0.c0 THEN rt0.c4 WHEN rt0.c4 THEN 0.9951908024152161 ELSE rt0.c1 END)>=((((rt0.c1)) BETWEEN ((v0.c1)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON 0.7382542315832143 ORDER BY ((CAST(v0.c2 AS REAL)) BETWEEN (UNLIKELY(DISTINCT v0.c2)) AND (rt0.c4)) ASC  NULLS FIRST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON 0.7382542315832143 WHERE (((CASE WHEN v0.c0 THEN rt0.c4 WHEN v0.c0 THEN rt0.c4 WHEN rt0.c4 THEN 0.9951908024152161 ELSE rt0.c1 END)>=((((rt0.c1)) BETWEEN ((v0.c1)) AND ((v0.c0)))))) ORDER BY ((CAST(v0.c2 AS REAL)) BETWEEN (UNLIKELY(DISTINCT v0.c2)) AND (rt0.c4)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN rt0.c4 WHEN v0.c0 THEN rt0.c4 WHEN rt0.c4 THEN 0.9951908024152161 ELSE rt0.c1 END)>=((((rt0.c1)) BETWEEN ((v0.c1)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON 0.7382542315832143 ORDER BY ((CAST(v0.c2 AS REAL)) BETWEEN (UNLIKELY(DISTINCT v0.c2)) AND (rt0.c4)) ASC  NULLS FIRST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON 0.7382542315832143 WHERE (((CASE WHEN v0.c0 THEN rt0.c4 WHEN v0.c0 THEN rt0.c4 WHEN rt0.c4 THEN 0.9951908024152161 ELSE rt0.c1 END)>=((((rt0.c1)) BETWEEN ((v0.c1)) AND ((v0.c0)))))) ORDER BY ((CAST(v0.c2 AS REAL)) BETWEEN (UNLIKELY(DISTINCT v0.c2)) AND (rt0.c4)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((((((CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)AND(v0.c0 COLLATE BINARY)))AND(((((v0.c0)OR(1497613711)))OR(v0.c1)))))AND(((v0.c0) NOT NULL))))OR(((v0.c2) NOTNULL)))) ORDER BY '	cPVlܪIm', (~ (CAST(v0.c2 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)AND(v0.c0 COLLATE BINARY)))AND(((((v0.c0)OR(1497613711)))OR(v0.c1)))))AND(((v0.c0) NOT NULL))))OR(((v0.c2) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY '	cPVlܪIm', (~ (CAST(v0.c2 AS INTEGER))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((((((CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)AND(v0.c0 COLLATE BINARY)))AND(((((v0.c0)OR(1497613711)))OR(v0.c1)))))AND(((v0.c0) NOT NULL))))OR(((v0.c2) NOTNULL)))) ORDER BY '	cPVlܪIm', (~ (CAST(v0.c2 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)AND(v0.c0 COLLATE BINARY)))AND(((((v0.c0)OR(1497613711)))OR(v0.c1)))))AND(((v0.c0) NOT NULL))))OR(((v0.c2) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY '	cPVlܪIm', (~ (CAST(v0.c2 AS INTEGER))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((((((CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)AND(v0.c0 COLLATE BINARY)))AND(((((v0.c0)OR(1497613711)))OR(v0.c1)))))AND(((v0.c0) NOT NULL))))OR(((v0.c2) NOTNULL)))) ORDER BY '	cPVlܪIm', (~ (CAST(v0.c2 AS INTEGER))) ASC;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0, rt0.c3, vt0.c0, 1.707696493E9, vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END, CAST(rt0.c0 AS BLOB), rt0.c0 COLLATE NOCASE, '' COLLATE BINARY, CAST(rt0.c2 AS TEXT))) AND ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END, ((rt0.c0) IS TRUE), (((rt0.c4))>((rt0.c2))), (rt0.c4 IN (rt0.c3)), vt0.c0))) WHERE ((((~ (rt0.c0))) NOT BETWEEN (((rt0.c4)<=(rt0.c4))) AND ((rt0.c1 IN ())))) ORDER BY (((rt0.c3)) BETWEEN ((CAST(rt0.c4 AS BLOB))) AND ((((((rt0.c1)AND(rt0.c1)))AND(vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) NOT BETWEEN (((rt0.c4)<=(rt0.c4))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0, rt0.c3, vt0.c0, 1.707696493E9, vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END, CAST(rt0.c0 AS BLOB), rt0.c0 COLLATE NOCASE, '' COLLATE BINARY, CAST(rt0.c2 AS TEXT))) AND ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END, ((rt0.c0) IS TRUE), (((rt0.c4))>((rt0.c2))), (rt0.c4 IN (rt0.c3)), vt0.c0))) ORDER BY (((rt0.c3)) BETWEEN ((CAST(rt0.c4 AS BLOB))) AND ((((((rt0.c1)AND(rt0.c1)))AND(vt0.c0))))) DESC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0, rt0.c3, vt0.c0, 1.707696493E9, vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END, CAST(rt0.c0 AS BLOB), rt0.c0 COLLATE NOCASE, '' COLLATE BINARY, CAST(rt0.c2 AS TEXT))) AND ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END, ((rt0.c0) IS TRUE), (((rt0.c4))>((rt0.c2))), (rt0.c4 IN (rt0.c3)), vt0.c0))) WHERE ((((~ (rt0.c0))) NOT BETWEEN (((rt0.c4)<=(rt0.c4))) AND ((rt0.c1 IN ())))) ORDER BY (((rt0.c3)) BETWEEN ((CAST(rt0.c4 AS BLOB))) AND ((((((rt0.c1)AND(rt0.c1)))AND(vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) NOT BETWEEN (((rt0.c4)<=(rt0.c4))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0, rt0.c3, vt0.c0, 1.707696493E9, vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END, CAST(rt0.c0 AS BLOB), rt0.c0 COLLATE NOCASE, '' COLLATE BINARY, CAST(rt0.c2 AS TEXT))) AND ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END, ((rt0.c0) IS TRUE), (((rt0.c4))>((rt0.c2))), (rt0.c4 IN (rt0.c3)), vt0.c0))) ORDER BY (((rt0.c3)) BETWEEN ((CAST(rt0.c4 AS BLOB))) AND ((((((rt0.c1)AND(rt0.c1)))AND(vt0.c0))))) DESC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0, rt0.c3, vt0.c0, 1.707696493E9, vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END, CAST(rt0.c0 AS BLOB), rt0.c0 COLLATE NOCASE, '' COLLATE BINARY, CAST(rt0.c2 AS TEXT))) AND ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END, ((rt0.c0) IS TRUE), (((rt0.c4))>((rt0.c2))), (rt0.c4 IN (rt0.c3)), vt0.c0))) WHERE ((((~ (rt0.c0))) NOT BETWEEN (((rt0.c4)<=(rt0.c4))) AND ((rt0.c1 IN ())))) ORDER BY (((rt0.c3)) BETWEEN ((CAST(rt0.c4 AS BLOB))) AND ((((((rt0.c1)AND(rt0.c1)))AND(vt0.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((x'')|(rt0.c1)))<(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')|(rt0.c1)))<(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((x'')|(rt0.c1)))<(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')|(rt0.c1)))<(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((x'')|(rt0.c1)))<(rt0.c3 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE (((0.16988181248860101)<(((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.16988181248860101)<(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0.16988181248860101)<(((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.16988181248860101)<(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0.16988181248860101)<(((vt0.c0)||(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)) IN ())) ORDER BY ((((v0.c2) BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND ((+ (v0.c2))))  NULLS LAST, ((((((((x'')AND((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c0))))))OR((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))))AND(((v0.c1)==(v0.c1)))))AND(((((((((v0.c0)OR(v0.c0)))OR(x'a2a6')))AND(v0.c0)))OR(v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND ((+ (v0.c2))))  NULLS LAST, ((((((((x'')AND((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c0))))))OR((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))))AND(((v0.c1)=(v0.c1)))))AND(((((((((v0.c0)OR(v0.c0)))OR(x'a2a6')))AND(v0.c0)))OR(v0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)) IN ())) ORDER BY ((((v0.c2) BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND ((+ (v0.c2))))  NULLS LAST, ((((((((x'')AND((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c0))))))OR((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))))AND(((v0.c1)==(v0.c1)))))AND(((((((((v0.c0)OR(v0.c0)))OR(x'a2a6')))AND(v0.c0)))OR(v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND ((+ (v0.c2))))  NULLS LAST, ((((((((x'')AND((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c0))))))OR((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))))AND(((v0.c1)=(v0.c1)))))AND(((((((((v0.c0)OR(v0.c0)))OR(x'a2a6')))AND(v0.c0)))OR(v0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)) IN ())) ORDER BY ((((v0.c2) BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND ((+ (v0.c2))))  NULLS LAST, ((((((((x'')AND((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c0))))))OR((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))))AND(((v0.c1)==(v0.c1)))))AND(((((((((v0.c0)OR(v0.c0)))OR(x'a2a6')))AND(v0.c0)))OR(v0.c2))))  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((((rt0.c1) NOTNULL))>((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))) INNER JOIN rt0 ON ((LIKELIHOOD(rt0.c3, 0.08946366430225394))%((((rt0.c3, rt0.c4, v0.c1)) BETWEEN ((v0.c1, vt0.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt0.c0))))) WHERE (((-1165958686 COLLATE NOCASE) NOT NULL)) ORDER BY (((((vt0.c0, rt0.c4, v0.c1))=((rt0.c1, v0.c2, rt0.c3)))) BETWEEN (COALESCE(rt0.c3, v0.c1)) AND ((+ (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((-1165958686 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((rt0.c1) NOTNULL))>((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))) INNER JOIN rt0 ON ((LIKELIHOOD(rt0.c3, 0.08946366430225394))%((((rt0.c3, rt0.c4, v0.c1)) BETWEEN ((v0.c1, vt0.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt0.c0))))) ORDER BY (((((vt0.c0, rt0.c4, v0.c1))==((rt0.c1, v0.c2, rt0.c3)))) BETWEEN (COALESCE(rt0.c3, v0.c1)) AND ((+ (v0.c0)))) ASC);
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((((rt0.c1) NOTNULL))>((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))) INNER JOIN rt0 ON ((LIKELIHOOD(rt0.c3, 0.08946366430225394))%((((rt0.c3, rt0.c4, v0.c1)) BETWEEN ((v0.c1, vt0.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt0.c0))))) WHERE (((-1165958686 COLLATE NOCASE) NOT NULL)) ORDER BY (((((vt0.c0, rt0.c4, v0.c1))=((rt0.c1, v0.c2, rt0.c3)))) BETWEEN (COALESCE(rt0.c3, v0.c1)) AND ((+ (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((-1165958686 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((rt0.c1) NOTNULL))>((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))) INNER JOIN rt0 ON ((LIKELIHOOD(rt0.c3, 0.08946366430225394))%((((rt0.c3, rt0.c4, v0.c1)) BETWEEN ((v0.c1, vt0.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt0.c0))))) ORDER BY (((((vt0.c0, rt0.c4, v0.c1))==((rt0.c1, v0.c2, rt0.c3)))) BETWEEN (COALESCE(rt0.c3, v0.c1)) AND ((+ (v0.c0)))) ASC);
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((((rt0.c1) NOTNULL))>((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))) INNER JOIN rt0 ON ((LIKELIHOOD(rt0.c3, 0.08946366430225394))%((((rt0.c3, rt0.c4, v0.c1)) BETWEEN ((v0.c1, vt0.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt0.c0))))) WHERE (((-1165958686 COLLATE NOCASE) NOT NULL)) ORDER BY (((((vt0.c0, rt0.c4, v0.c1))=((rt0.c1, v0.c2, rt0.c3)))) BETWEEN (COALESCE(rt0.c3, v0.c1)) AND ((+ (v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (~ (TRIM(vt0.c0))) DESC  NULLS FIRST, (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (~ (TRIM(vt0.c0))) DESC  NULLS FIRST, (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (~ (TRIM(vt0.c0))) DESC  NULLS FIRST, (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (~ (TRIM(vt0.c0))) DESC  NULLS FIRST, (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (~ (TRIM(vt0.c0))) DESC  NULLS FIRST, (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, v0, rt0 WHERE (1.947439925E9 COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((1.947439925E9 COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (1.947439925E9 COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((1.947439925E9 COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (1.947439925E9 COLLATE NOCASE COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((x'' IN ())) ORDER BY 0.7497273510742715 ASC  NULLS FIRST, ((('-609906720', vt0.c0, 'Xj'))>=((vt0.c0 COLLATE BINARY, ((vt0.c0) NOT NULL), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0 ORDER BY 0.7497273510742715 ASC  NULLS FIRST, ((('-609906720', vt0.c0, 'Xj'))>=((vt0.c0 COLLATE BINARY, ((vt0.c0) NOT NULL), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((x'' IN ())) ORDER BY 0.7497273510742715 ASC  NULLS FIRST, ((('-609906720', vt0.c0, 'Xj'))>=((vt0.c0 COLLATE BINARY, ((vt0.c0) NOT NULL), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0 ORDER BY 0.7497273510742715 ASC  NULLS FIRST, ((('-609906720', vt0.c0, 'Xj'))>=((vt0.c0 COLLATE BINARY, ((vt0.c0) NOT NULL), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((x'' IN ())) ORDER BY 0.7497273510742715 ASC  NULLS FIRST, ((('-609906720', vt0.c0, 'Xj'))>=((vt0.c0 COLLATE BINARY, ((vt0.c0) NOT NULL), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4)))*((~ (rt0.c2))))) ORDER BY (- (rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4)))*((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c2)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4)))*((~ (rt0.c2))))) ORDER BY (- (rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4)))*((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c2)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4)))*((~ (rt0.c2))))) ORDER BY (- (rt0.c2)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((rt0.c4)) BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (rt0.c2)))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (rt0.c2)))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c2 END)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((rt0.c4)) BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (rt0.c2)))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (rt0.c2)))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c2 END)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((rt0.c4)) BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (rt0.c2)))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c2 END))));
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((- (v0.c1))) ISNULL)) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((- (v0.c1))) ISNULL)) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((- (v0.c1))) ISNULL)) ORDER BY v0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((((171439244)>(0.6043900266511685))))==(((NOT (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((171439244)>(0.6043900266511685))))==(((NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((((171439244)>(0.6043900266511685))))==(((NOT (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((171439244)>(0.6043900266511685))))==(((NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((((171439244)>(0.6043900266511685))))==(((NOT (rt0.c1))))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((((x'') IS TRUE))) AND ((CASE rt0.c0  WHEN rt0.c3 THEN v0.c2 WHEN v0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)))) ORDER BY (x'' IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((x'') IS TRUE))) AND ((CASE rt0.c0  WHEN rt0.c3 THEN v0.c2 WHEN v0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (x'' IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((((x'') IS TRUE))) AND ((CASE rt0.c0  WHEN rt0.c3 THEN v0.c2 WHEN v0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)))) ORDER BY (x'' IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((x'') IS TRUE))) AND ((CASE rt0.c0  WHEN rt0.c3 THEN v0.c2 WHEN v0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (x'' IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((((x'') IS TRUE))) AND ((CASE rt0.c0  WHEN rt0.c3 THEN v0.c2 WHEN v0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)))) ORDER BY (x'' IN ())  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c1)%(0.7248292741240085)))&(((((((((vt0.c0)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c2)))) WHERE (((CAST(rt0.c4 AS TEXT)) BETWEEN ((rt0.c1 IN (rt0.c4))) AND ((+ (NULL))))) ORDER BY (((x'74cbec71' IN (rt0.c0)))AND(rt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c4 AS TEXT)) BETWEEN ((rt0.c1 IN (rt0.c4))) AND ((+ (NULL))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((rt0.c1)%(0.7248292741240085)))&(((((((((vt0.c0)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c2)))) ORDER BY (((x'74cbec71' IN (rt0.c0)))AND(rt0.c1 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c1)%(0.7248292741240085)))&(((((((((vt0.c0)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c2)))) WHERE (((CAST(rt0.c4 AS TEXT)) BETWEEN ((rt0.c1 IN (rt0.c4))) AND ((+ (NULL))))) ORDER BY (((x'74cbec71' IN (rt0.c0)))AND(rt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c4 AS TEXT)) BETWEEN ((rt0.c1 IN (rt0.c4))) AND ((+ (NULL))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((rt0.c1)%(0.7248292741240085)))&(((((((((vt0.c0)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c2)))) ORDER BY (((x'74cbec71' IN (rt0.c0)))AND(rt0.c1 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c1)%(0.7248292741240085)))&(((((((((vt0.c0)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c2)))) WHERE (((CAST(rt0.c4 AS TEXT)) BETWEEN ((rt0.c1 IN (rt0.c4))) AND ((+ (NULL))))) ORDER BY (((x'74cbec71' IN (rt0.c0)))AND(rt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN v0 ON ((((v0.c1)<(vt0.c0))) NOT BETWEEN ((((' 掗')) BETWEEN ((v0.c1)) AND ((v0.c2)))) AND (((((((((((((v0.c1)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c1)))OR(vt0.c0)))) WHERE (CAST(CAST(v0.c1 AS REAL) AS NUMERIC)) ORDER BY ((((((((((v0.c2)OR(v0.c0)))OR(v0.c1)))OR(v0.c2)))OR(vt0.c0))) NOTNULL) DESC, ((((((x'')OR(v0.c1)))OR(v0.c0))) BETWEEN (0.7753401800867871) AND (v0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c1 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((v0.c1)<(vt0.c0))) NOT BETWEEN ((((' 掗')) BETWEEN ((v0.c1)) AND ((v0.c2)))) AND (((((((((((((v0.c1)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c1)))OR(vt0.c0)))) ORDER BY ((((((((((v0.c2)OR(v0.c0)))OR(v0.c1)))OR(v0.c2)))OR(vt0.c0))) NOTNULL) DESC, ((((((x'')OR(v0.c1)))OR(v0.c0))) BETWEEN (0.7753401800867871) AND (v0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM vt0 INNER JOIN v0 ON ((((v0.c1)<(vt0.c0))) NOT BETWEEN ((((' 掗')) BETWEEN ((v0.c1)) AND ((v0.c2)))) AND (((((((((((((v0.c1)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c1)))OR(vt0.c0)))) WHERE (CAST(CAST(v0.c1 AS REAL) AS NUMERIC)) ORDER BY ((((((((((v0.c2)OR(v0.c0)))OR(v0.c1)))OR(v0.c2)))OR(vt0.c0))) NOTNULL) DESC, ((((((x'')OR(v0.c1)))OR(v0.c0))) BETWEEN (0.7753401800867871) AND (v0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c1 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((v0.c1)<(vt0.c0))) NOT BETWEEN ((((' 掗')) BETWEEN ((v0.c1)) AND ((v0.c2)))) AND (((((((((((((v0.c1)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c1)))OR(vt0.c0)))) ORDER BY ((((((((((v0.c2)OR(v0.c0)))OR(v0.c1)))OR(v0.c2)))OR(vt0.c0))) NOTNULL) DESC, ((((((x'')OR(v0.c1)))OR(v0.c0))) BETWEEN (0.7753401800867871) AND (v0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM vt0 INNER JOIN v0 ON ((((v0.c1)<(vt0.c0))) NOT BETWEEN ((((' 掗')) BETWEEN ((v0.c1)) AND ((v0.c2)))) AND (((((((((((((v0.c1)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c1)))OR(vt0.c0)))) WHERE (CAST(CAST(v0.c1 AS REAL) AS NUMERIC)) ORDER BY ((((((((((v0.c2)OR(v0.c0)))OR(v0.c1)))OR(v0.c2)))OR(vt0.c0))) NOTNULL) DESC, ((((((x'')OR(v0.c1)))OR(v0.c0))) BETWEEN (0.7753401800867871) AND (v0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT * FROM rt0, v0 WHERE ((+ ((((rt0.c3))!=((rt0.c0)))))) ORDER BY ((v0.c0) BETWEEN (rt0.c0) AND ('')) COLLATE RTRIM DESC  NULLS FIRST, ((CAST(v0.c2 AS NUMERIC))>>(((v0.c2) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c3))!=((rt0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c0) BETWEEN (rt0.c0) AND ('')) COLLATE RTRIM DESC  NULLS FIRST, ((CAST(v0.c2 AS NUMERIC))>>(((v0.c2) IS TRUE))) ASC);
SELECT * FROM rt0, v0 WHERE ((+ ((((rt0.c3))!=((rt0.c0)))))) ORDER BY ((v0.c0) BETWEEN (rt0.c0) AND ('')) COLLATE RTRIM DESC  NULLS FIRST, ((CAST(v0.c2 AS NUMERIC))>>(((v0.c2) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c3))!=((rt0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c0) BETWEEN (rt0.c0) AND ('')) COLLATE RTRIM DESC  NULLS FIRST, ((CAST(v0.c2 AS NUMERIC))>>(((v0.c2) IS TRUE))) ASC);
SELECT * FROM rt0, v0 WHERE ((+ ((((rt0.c3))!=((rt0.c0)))))) ORDER BY ((v0.c0) BETWEEN (rt0.c0) AND ('')) COLLATE RTRIM DESC  NULLS FIRST, ((CAST(v0.c2 AS NUMERIC))>>(((v0.c2) IS TRUE))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (0.06323297598866173) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.06323297598866173) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.06323297598866173) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.06323297598866173) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.06323297598866173) ORDER BY NULL  NULLS FIRST;
SELECT * FROM v0 WHERE (((((v0.c2)IS(v0.c0)))/(((v0.c1) IS TRUE)))) ORDER BY ((((CAST(v0.c2 AS TEXT))OR(((((((((v0.c1)OR(v0.c2)))OR(v0.c0)))AND(v0.c1)))OR(v0.c0)))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)IS(v0.c0)))/(((v0.c1) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c2 AS TEXT))OR(((((((((v0.c1)OR(v0.c2)))OR(v0.c0)))AND(v0.c1)))OR(v0.c0)))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c2)IS(v0.c0)))/(((v0.c1) IS TRUE)))) ORDER BY ((((CAST(v0.c2 AS TEXT))OR(((((((((v0.c1)OR(v0.c2)))OR(v0.c0)))AND(v0.c1)))OR(v0.c0)))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)IS(v0.c0)))/(((v0.c1) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c2 AS TEXT))OR(((((((((v0.c1)OR(v0.c2)))OR(v0.c0)))AND(v0.c1)))OR(v0.c0)))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c2)IS(v0.c0)))/(((v0.c1) IS TRUE)))) ORDER BY ((((CAST(v0.c2 AS TEXT))OR(((((((((v0.c1)OR(v0.c2)))OR(v0.c0)))AND(v0.c1)))OR(v0.c0)))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))) DESC  NULLS LAST;
SELECT * FROM v0 WHERE ((((((v0.c0 IN ()))OR(NULLIF(DISTINCT v0.c2, v0.c2))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))OR(NULLIF(DISTINCT v0.c2, v0.c2))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0 IN ()))OR(NULLIF(DISTINCT v0.c2, v0.c2))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))OR(NULLIF(DISTINCT v0.c2, v0.c2))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0 IN ()))OR(NULLIF(DISTINCT v0.c2, v0.c2))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY 0.4381948939289205 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY 0.4381948939289205 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY 0.4381948939289205 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY 0.4381948939289205 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY 0.4381948939289205 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((4.44467096E8) NOT BETWEEN (rt0.c2) AND (v0.c2)))/((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((4.44467096E8) NOT BETWEEN (rt0.c2) AND (v0.c2)))/((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2)))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((4.44467096E8) NOT BETWEEN (rt0.c2) AND (v0.c2)))/((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((4.44467096E8) NOT BETWEEN (rt0.c2) AND (v0.c2)))/((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2)))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((4.44467096E8) NOT BETWEEN (rt0.c2) AND (v0.c2)))/((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))))));
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((((v0.c0)>(v0.c1)))OR(x'')))OR((rt0.c2 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)>(v0.c1)))OR(x'')))OR((rt0.c2 IN (v0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((((v0.c0)>(v0.c1)))OR(x'')))OR((rt0.c2 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)>(v0.c1)))OR(x'')))OR((rt0.c2 IN (v0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((((v0.c0)>(v0.c1)))OR(x'')))OR((rt0.c2 IN (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c2)OR(v0.c2)))OR(v0.c1))) NOT BETWEEN ((((v0.c1, v0.c2, v0.c1)) BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c0, x'', v0.c0)))) AND (CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)OR(v0.c2)))OR(v0.c1))) NOT BETWEEN ((((v0.c1, v0.c2, v0.c1)) BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c0, x'', v0.c0)))) AND (CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c2)OR(v0.c2)))OR(v0.c1))) NOT BETWEEN ((((v0.c1, v0.c2, v0.c1)) BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c0, x'', v0.c0)))) AND (CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)OR(v0.c2)))OR(v0.c1))) NOT BETWEEN ((((v0.c1, v0.c2, v0.c1)) BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c0, x'', v0.c0)))) AND (CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c2)OR(v0.c2)))OR(v0.c1))) NOT BETWEEN ((((v0.c1, v0.c2, v0.c1)) BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c0, x'', v0.c0)))) AND (CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((~ ('0.01871538985210186'))) NOT BETWEEN (((rt0.c3) BETWEEN (v0.c0) AND (v0.c2))) AND (x'ade5')));
SELECT SUM(count) FROM (SELECT (((((~ ('0.01871538985210186'))) NOT BETWEEN (((rt0.c3) BETWEEN (v0.c0) AND (v0.c2))) AND (x'ade5'))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((~ ('0.01871538985210186'))) NOT BETWEEN (((rt0.c3) BETWEEN (v0.c0) AND (v0.c2))) AND (x'ade5')));
SELECT SUM(count) FROM (SELECT (((((~ ('0.01871538985210186'))) NOT BETWEEN (((rt0.c3) BETWEEN (v0.c0) AND (v0.c2))) AND (x'ade5'))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((~ ('0.01871538985210186'))) NOT BETWEEN (((rt0.c3) BETWEEN (v0.c0) AND (v0.c2))) AND (x'ade5')));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((v0.c1 IN ()) COLLATE NOCASE) ORDER BY ((((v0.c2)=(v0.c1)))-(ABS(DISTINCT rt0.c4))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((v0.c2)==(v0.c1)))-(ABS(DISTINCT rt0.c4))) DESC);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((v0.c1 IN ()) COLLATE NOCASE) ORDER BY ((((v0.c2)=(v0.c1)))-(ABS(DISTINCT rt0.c4))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((v0.c2)==(v0.c1)))-(ABS(DISTINCT rt0.c4))) DESC);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((v0.c1 IN ()) COLLATE NOCASE) ORDER BY ((((v0.c2)=(v0.c1)))-(ABS(DISTINCT rt0.c4))) DESC;
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN (('jM')) AND ((((((rt0.c0)OR(v0.c0)))AND(rt0.c2))))) FULL OUTER JOIN v0 ON CASE WHEN ((rt0.c0)<=(rt0.c1)) THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN rt0.c1 END END WHERE (((TRIM(DISTINCT rt0.c0, rt0.c4))>=(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c0, rt0.c4))>=(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN (('jM')) AND ((((((rt0.c0)OR(v0.c0)))AND(rt0.c2))))) FULL OUTER JOIN v0 ON CASE WHEN ((rt0.c0)<=(rt0.c1)) THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN rt0.c1 END END);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN (('jM')) AND ((((((rt0.c0)OR(v0.c0)))AND(rt0.c2))))) FULL OUTER JOIN v0 ON CASE WHEN ((rt0.c0)<=(rt0.c1)) THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN rt0.c1 END END WHERE (((TRIM(DISTINCT rt0.c0, rt0.c4))>=(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c0, rt0.c4))>=(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN (('jM')) AND ((((((rt0.c0)OR(v0.c0)))AND(rt0.c2))))) FULL OUTER JOIN v0 ON CASE WHEN ((rt0.c0)<=(rt0.c1)) THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN rt0.c1 END END);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (v0.c2);
SELECT * FROM vt0, v0 WHERE (((CAST(v0.c2 AS INTEGER))-(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS INTEGER))-(v0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((CAST(v0.c2 AS INTEGER))-(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS INTEGER))-(v0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((CAST(v0.c2 AS INTEGER))-(v0.c0)));
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(v0.c1))) BETWEEN (((rt0.c3) NOTNULL)) AND (vt0.c0 COLLATE RTRIM)) WHERE (CASE (((x'')) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN (rt0.c3 IN ()) THEN ((rt0.c1)||(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((x'')) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN (rt0.c3 IN ()) THEN ((rt0.c1)||(rt0.c0)) END) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(v0.c1))) BETWEEN (((rt0.c3) NOTNULL)) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(v0.c1))) BETWEEN (((rt0.c3) NOTNULL)) AND (vt0.c0 COLLATE RTRIM)) WHERE (CASE (((x'')) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN (rt0.c3 IN ()) THEN ((rt0.c1)||(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((x'')) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN (rt0.c3 IN ()) THEN ((rt0.c1)||(rt0.c0)) END) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(v0.c1))) BETWEEN (((rt0.c3) NOTNULL)) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(v0.c1))) BETWEEN (((rt0.c3) NOTNULL)) AND (vt0.c0 COLLATE RTRIM)) WHERE (CASE (((x'')) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN (rt0.c3 IN ()) THEN ((rt0.c1)||(rt0.c0)) END);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((v0.c2 COLLATE NOCASE IN ())) ORDER BY ((((((rt0.c3)AND(vt0.c0)))OR(rt0.c1)))<<(rt0.c3)), ((((v0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((rt0.c3)AND(vt0.c0)))OR(rt0.c1)))<<(rt0.c3)), ((((v0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c2)) ASC);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((v0.c2 COLLATE NOCASE IN ())) ORDER BY ((((((rt0.c3)AND(vt0.c0)))OR(rt0.c1)))<<(rt0.c3)), ((((v0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((rt0.c3)AND(vt0.c0)))OR(rt0.c1)))<<(rt0.c3)), ((((v0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c2)) ASC);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((v0.c2 COLLATE NOCASE IN ())) ORDER BY ((((((rt0.c3)AND(vt0.c0)))OR(rt0.c1)))<<(rt0.c3)), ((((v0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c2)) ASC;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)<=(vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) IS TRUE))))OR(((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)<=(vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) IS TRUE))))OR(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)<=(vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) IS TRUE))))OR(((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)<=(vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) IS TRUE))))OR(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)<=(vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) IS TRUE))))OR(((vt0.c0)<=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((vt0.c0 IN ()))));
SELECT * FROM v0, rt0, vt0 WHERE (((((v0.c0 IN ())))>=(((v0.c0 IN ()))))) ORDER BY (((v0.c0)>=(rt0.c2)) IN ()) ASC  NULLS LAST, ((+ (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN ())))>=(((v0.c0 IN ()))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((v0.c0)>=(rt0.c2)) IN ()) ASC  NULLS LAST, ((+ (vt0.c0)) IN ()));
SELECT * FROM v0, rt0, vt0 WHERE (((((v0.c0 IN ())))>=(((v0.c0 IN ()))))) ORDER BY (((v0.c0)>=(rt0.c2)) IN ()) ASC  NULLS LAST, ((+ (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN ())))>=(((v0.c0 IN ()))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((v0.c0)>=(rt0.c2)) IN ()) ASC  NULLS LAST, ((+ (vt0.c0)) IN ()));
SELECT * FROM v0, rt0, vt0 WHERE (((((v0.c0 IN ())))>=(((v0.c0 IN ()))))) ORDER BY (((v0.c0)>=(rt0.c2)) IN ()) ASC  NULLS LAST, ((+ (vt0.c0)) IN ());
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT * FROM v0 CROSS JOIN vt0 ON CAST(CAST(rt0.c2 AS REAL) AS TEXT) INNER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((+ (rt0.c3))) AND ('315946794' COLLATE RTRIM)) WHERE (((rt0.c0) NOT BETWEEN (1852462209) AND (((vt0.c0)>=(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (1852462209) AND (((vt0.c0)>=(rt0.c4))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(CAST(rt0.c2 AS REAL) AS TEXT) INNER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((+ (rt0.c3))) AND ('315946794' COLLATE RTRIM)));
SELECT * FROM v0 CROSS JOIN vt0 ON CAST(CAST(rt0.c2 AS REAL) AS TEXT) INNER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((+ (rt0.c3))) AND ('315946794' COLLATE RTRIM)) WHERE (((rt0.c0) NOT BETWEEN (1852462209) AND (((vt0.c0)>=(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (1852462209) AND (((vt0.c0)>=(rt0.c4))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(CAST(rt0.c2 AS REAL) AS TEXT) INNER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((+ (rt0.c3))) AND ('315946794' COLLATE RTRIM)));
SELECT * FROM v0 CROSS JOIN vt0 ON CAST(CAST(rt0.c2 AS REAL) AS TEXT) INNER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((+ (rt0.c3))) AND ('315946794' COLLATE RTRIM)) WHERE (((rt0.c0) NOT BETWEEN (1852462209) AND (((vt0.c0)>=(rt0.c4)))));
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((NOT (rt0.c2)))<<(((rt0.c2)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))<<(((rt0.c2)*(rt0.c2))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((NOT (rt0.c2)))<<(((rt0.c2)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))<<(((rt0.c2)*(rt0.c2))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((NOT (rt0.c2)))<<(((rt0.c2)*(rt0.c2)))));
SELECT * FROM rt0, v0, vt0 WHERE (CAST(rt0.c4 COLLATE RTRIM AS INTEGER)) ORDER BY ((CASE rt0.c3  WHEN vt0.c0 THEN v0.c0 END) BETWEEN (((v0.c2)<=(rt0.c2))) AND (v0.c1));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((CASE rt0.c3  WHEN vt0.c0 THEN v0.c0 END) BETWEEN (((v0.c2)<=(rt0.c2))) AND (v0.c1)));
SELECT * FROM rt0, v0, vt0 WHERE (CAST(rt0.c4 COLLATE RTRIM AS INTEGER)) ORDER BY ((CASE rt0.c3  WHEN vt0.c0 THEN v0.c0 END) BETWEEN (((v0.c2)<=(rt0.c2))) AND (v0.c1));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((CASE rt0.c3  WHEN vt0.c0 THEN v0.c0 END) BETWEEN (((v0.c2)<=(rt0.c2))) AND (v0.c1)));
SELECT * FROM rt0, v0, vt0 WHERE (CAST(rt0.c4 COLLATE RTRIM AS INTEGER)) ORDER BY ((CASE rt0.c3  WHEN vt0.c0 THEN v0.c0 END) BETWEEN (((v0.c2)<=(rt0.c2))) AND (v0.c1));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c0 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c0 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c0 AS INTEGER) AS BLOB));
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((1768132881)) BETWEEN ((((v0.c0) IS FALSE))) AND ((UNLIKELY(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((1768132881)) BETWEEN ((((v0.c0) IS FALSE))) AND ((UNLIKELY(v0.c2))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((1768132881)) BETWEEN ((((v0.c0) IS FALSE))) AND ((UNLIKELY(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((1768132881)) BETWEEN ((((v0.c0) IS FALSE))) AND ((UNLIKELY(v0.c2))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((1768132881)) BETWEEN ((((v0.c0) IS FALSE))) AND ((UNLIKELY(v0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY IFNULL(((vt0.c0) IS FALSE), (~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(((vt0.c0) IS FALSE), (~ (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY IFNULL(((vt0.c0) IS FALSE), (~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(((vt0.c0) IS FALSE), (~ (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY IFNULL(((vt0.c0) IS FALSE), (~ (vt0.c0)));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0, (~ (v0.c1)), rt0.c2))<>((CAST(v0.c0 AS REAL), (((rt0.c4, rt0.c3, x'')) NOT BETWEEN ((v0.c0, rt0.c0, x'54c9')) AND ((vt0.c0, v0.c0, v0.c1))), (+ (rt0.c3))))) LEFT OUTER JOIN v0 ON NULL WHERE (((rt0.c2 IN ()) IN ())) ORDER BY CASE WHEN LIKE(rt0.c2, rt0.c2) THEN v0.c2 WHEN (rt0.c2 IN (rt0.c2)) THEN ((v0.c0)<>(vt0.c0)) WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c0  WHEN vt0.c0 THEN '' END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0, (~ (v0.c1)), rt0.c2))!=((CAST(v0.c0 AS REAL), (((rt0.c4, rt0.c3, x'')) NOT BETWEEN ((v0.c0, rt0.c0, x'54c9')) AND ((vt0.c0, v0.c0, v0.c1))), (+ (rt0.c3))))) LEFT OUTER JOIN v0 ON NULL ORDER BY CASE WHEN LIKE(rt0.c2, rt0.c2) THEN v0.c2 WHEN (rt0.c2 IN (rt0.c2)) THEN ((v0.c0)!=(vt0.c0)) WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c0  WHEN vt0.c0 THEN '' END END  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0, (~ (v0.c1)), rt0.c2))<>((CAST(v0.c0 AS REAL), (((rt0.c4, rt0.c3, x'')) NOT BETWEEN ((v0.c0, rt0.c0, x'54c9')) AND ((vt0.c0, v0.c0, v0.c1))), (+ (rt0.c3))))) LEFT OUTER JOIN v0 ON NULL WHERE (((rt0.c2 IN ()) IN ())) ORDER BY CASE WHEN LIKE(rt0.c2, rt0.c2) THEN v0.c2 WHEN (rt0.c2 IN (rt0.c2)) THEN ((v0.c0)<>(vt0.c0)) WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c0  WHEN vt0.c0 THEN '' END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0, (~ (v0.c1)), rt0.c2))!=((CAST(v0.c0 AS REAL), (((rt0.c4, rt0.c3, x'')) NOT BETWEEN ((v0.c0, rt0.c0, x'54c9')) AND ((vt0.c0, v0.c0, v0.c1))), (+ (rt0.c3))))) LEFT OUTER JOIN v0 ON NULL ORDER BY CASE WHEN LIKE(rt0.c2, rt0.c2) THEN v0.c2 WHEN (rt0.c2 IN (rt0.c2)) THEN ((v0.c0)!=(vt0.c0)) WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c0  WHEN vt0.c0 THEN '' END END  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c1)) BETWEEN ((x'b9f2')) AND ((v0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c1)) BETWEEN ((x'b9f2')) AND ((v0.c0))) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c1)) BETWEEN ((x'b9f2')) AND ((v0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c1)) BETWEEN ((x'b9f2')) AND ((v0.c0))) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c1)) BETWEEN ((x'b9f2')) AND ((v0.c0))) AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND (((rt0.c1 IN ())))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND (((rt0.c1 IN ())))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND (((rt0.c1 IN ())))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND (((rt0.c1 IN ())))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND (((rt0.c1 IN ())))) DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) IN ())) ORDER BY ((((((v0.c2)GLOB(v0.c1)))OR('LR<')))AND((NOT (rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((v0.c2)GLOB(v0.c1)))OR('LR<')))AND((NOT (rt0.c4))))  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) IN ())) ORDER BY ((((((v0.c2)GLOB(v0.c1)))OR('LR<')))AND((NOT (rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((v0.c2)GLOB(v0.c1)))OR('LR<')))AND((NOT (rt0.c4))))  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) IN ())) ORDER BY ((((((v0.c2)GLOB(v0.c1)))OR('LR<')))AND((NOT (rt0.c4))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c4 AS INTEGER)  WHEN (+ (rt0.c0)) THEN '-533019980' END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c4 AS INTEGER)  WHEN (+ (rt0.c0)) THEN '-533019980' END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c4 AS INTEGER)  WHEN (+ (rt0.c0)) THEN '-533019980' END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c4 AS INTEGER)  WHEN (+ (rt0.c0)) THEN '-533019980' END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c4 AS INTEGER)  WHEN (+ (rt0.c0)) THEN '-533019980' END);
SELECT * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL);
SELECT * FROM vt0 WHERE (((((((((LTRIM(''))AND(vt0.c0)))AND((((vt0.c0))>=((vt0.c0))))))OR(NULL)))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LTRIM(''))AND(vt0.c0)))AND((((vt0.c0))>=((vt0.c0))))))OR(NULL)))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((LTRIM(''))AND(vt0.c0)))AND((((vt0.c0))>=((vt0.c0))))))OR(NULL)))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LTRIM(''))AND(vt0.c0)))AND((((vt0.c0))>=((vt0.c0))))))OR(NULL)))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((LTRIM(''))AND(vt0.c0)))AND((((vt0.c0))>=((vt0.c0))))))OR(NULL)))AND((vt0.c0 IN ()))));
SELECT * FROM rt0, vt0, v0 WHERE (json_type(rt0.c3)) ORDER BY (((- (vt0.c0)))+(((vt0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_type(rt0.c3)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((- (vt0.c0)))+(((vt0.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE (json_type(rt0.c3)) ORDER BY (((- (vt0.c0)))+(((vt0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_type(rt0.c3)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((- (vt0.c0)))+(((vt0.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE (json_type(rt0.c3)) ORDER BY (((- (vt0.c0)))+(((vt0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c4)OR(NULL)))OR(rt0.c2)))IS NOT((- (rt0.c2))))) ORDER BY rtreenode(((rt0.c1)>(rt0.c3)), rt0.c1) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)OR(NULL)))OR(rt0.c2)))IS NOT((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rtreenode(((rt0.c1)>(rt0.c3)), rt0.c1) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c4)OR(NULL)))OR(rt0.c2)))IS NOT((- (rt0.c2))))) ORDER BY rtreenode(((rt0.c1)>(rt0.c3)), rt0.c1) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)OR(NULL)))OR(rt0.c2)))IS NOT((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rtreenode(((rt0.c1)>(rt0.c3)), rt0.c1) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c4)OR(NULL)))OR(rt0.c2)))IS NOT((- (rt0.c2))))) ORDER BY rtreenode(((rt0.c1)>(rt0.c3)), rt0.c1) DESC;
SELECT ALL * FROM rt0, vt0, v0 WHERE ((+ (((vt0.c0)+(x''))))) ORDER BY (((v0.c1 IN ()))<((((rt0.c2))<((rt0.c1))))) ASC  NULLS LAST, ((-6.6956321E7 COLLATE NOCASE) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)+(x''))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((v0.c1 IN ()))<((((rt0.c2))<((rt0.c1))))) ASC  NULLS LAST, ((-6.6956321E7 COLLATE NOCASE) IS TRUE) DESC);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((+ (((vt0.c0)+(x''))))) ORDER BY (((v0.c1 IN ()))<((((rt0.c2))<((rt0.c1))))) ASC  NULLS LAST, ((-6.6956321E7 COLLATE NOCASE) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)+(x''))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((v0.c1 IN ()))<((((rt0.c2))<((rt0.c1))))) ASC  NULLS LAST, ((-6.6956321E7 COLLATE NOCASE) IS TRUE) DESC);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((+ (((vt0.c0)+(x''))))) ORDER BY (((v0.c1 IN ()))<((((rt0.c2))<((rt0.c1))))) ASC  NULLS LAST, ((-6.6956321E7 COLLATE NOCASE) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((((TRIM(DISTINCT v0.c2, v0.c0))OR((('{#')|(rt0.c1)))))AND(CAST(vt0.c0 AS NUMERIC))) WHERE (CHAR((rt0.c3 IN ()), CASE vt0.c0  WHEN rt0.c2 THEN v0.c0 ELSE v0.c1 END, x'e040'));
SELECT SUM(count) FROM (SELECT ALL ((CHAR((rt0.c3 IN ()), CASE vt0.c0  WHEN rt0.c2 THEN v0.c0 ELSE v0.c1 END, x'e040')) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((((TRIM(DISTINCT v0.c2, v0.c0))OR((('{#')|(rt0.c1)))))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((((TRIM(DISTINCT v0.c2, v0.c0))OR((('{#')|(rt0.c1)))))AND(CAST(vt0.c0 AS NUMERIC))) WHERE (CHAR((rt0.c3 IN ()), CASE vt0.c0  WHEN rt0.c2 THEN v0.c0 ELSE v0.c1 END, x'e040'));
SELECT SUM(count) FROM (SELECT ALL ((CHAR((rt0.c3 IN ()), CASE vt0.c0  WHEN rt0.c2 THEN v0.c0 ELSE v0.c1 END, x'e040')) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((((TRIM(DISTINCT v0.c2, v0.c0))OR((('{#')|(rt0.c1)))))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((((TRIM(DISTINCT v0.c2, v0.c0))OR((('{#')|(rt0.c1)))))AND(CAST(vt0.c0 AS NUMERIC))) WHERE (CHAR((rt0.c3 IN ()), CASE vt0.c0  WHEN rt0.c2 THEN v0.c0 ELSE v0.c1 END, x'e040'));
SELECT * FROM vt0, v0, rt0 WHERE (((CAST(vt0.c0 AS REAL))||((+ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))||((+ (rt0.c3))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (((CAST(vt0.c0 AS REAL))||((+ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))||((+ (rt0.c3))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (((CAST(vt0.c0 AS REAL))||((+ (rt0.c3)))));
SELECT * FROM vt0, v0 WHERE (((((v0.c1)GLOB(v0.c2)))<=(vt0.c0))) ORDER BY (vt0.c0 IN ());
SELECT SUM(count) FROM (SELECT ((((((v0.c1)GLOB(v0.c2)))<=(vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY (vt0.c0 IN ()));
SELECT * FROM vt0, v0 WHERE (((((v0.c1)GLOB(v0.c2)))<=(vt0.c0))) ORDER BY (vt0.c0 IN ());
SELECT SUM(count) FROM (SELECT ((((((v0.c1)GLOB(v0.c2)))<=(vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY (vt0.c0 IN ()));
SELECT * FROM vt0, v0 WHERE (((((v0.c1)GLOB(v0.c2)))<=(vt0.c0))) ORDER BY (vt0.c0 IN ());
SELECT COUNT(*) FROM v0 WHERE (TYPEOF(CASE WHEN v0.c2 THEN x'9946' END));
SELECT SUM(count) FROM (SELECT ((TYPEOF(CASE WHEN v0.c2 THEN x'9946' END)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (TYPEOF(CASE WHEN v0.c2 THEN x'9946' END));
SELECT SUM(count) FROM (SELECT ((TYPEOF(CASE WHEN v0.c2 THEN x'9946' END)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (TYPEOF(CASE WHEN v0.c2 THEN x'9946' END));
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE rt0.c3  WHEN ((rt0.c2)/(v0.c0)) THEN TYPEOF(rt0.c4) WHEN CASE WHEN '444467096' THEN rt0.c1 ELSE v0.c2 END THEN CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE v0.c2 END WHEN (((v0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c3))) THEN IFNULL(DISTINCT v0.c2, v0.c0) END) ORDER BY x'' DESC, v0.c2  NULLS LAST, (NOT (((rt0.c1)/(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c3  WHEN ((rt0.c2)/(v0.c0)) THEN TYPEOF(rt0.c4) WHEN CASE WHEN '444467096' THEN rt0.c1 ELSE v0.c2 END THEN CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE v0.c2 END WHEN (((v0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c3))) THEN IFNULL(DISTINCT v0.c2, v0.c0) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY x'' DESC, v0.c2  NULLS LAST, (NOT (((rt0.c1)/(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE rt0.c3  WHEN ((rt0.c2)/(v0.c0)) THEN TYPEOF(rt0.c4) WHEN CASE WHEN '444467096' THEN rt0.c1 ELSE v0.c2 END THEN CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE v0.c2 END WHEN (((v0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c3))) THEN IFNULL(DISTINCT v0.c2, v0.c0) END) ORDER BY x'' DESC, v0.c2  NULLS LAST, (NOT (((rt0.c1)/(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c3  WHEN ((rt0.c2)/(v0.c0)) THEN TYPEOF(rt0.c4) WHEN CASE WHEN '444467096' THEN rt0.c1 ELSE v0.c2 END THEN CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE v0.c2 END WHEN (((v0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c3))) THEN IFNULL(DISTINCT v0.c2, v0.c0) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY x'' DESC, v0.c2  NULLS LAST, (NOT (((rt0.c1)/(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE rt0.c3  WHEN ((rt0.c2)/(v0.c0)) THEN TYPEOF(rt0.c4) WHEN CASE WHEN '444467096' THEN rt0.c1 ELSE v0.c2 END THEN CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE v0.c2 END WHEN (((v0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c3))) THEN IFNULL(DISTINCT v0.c2, v0.c0) END) ORDER BY x'' DESC, v0.c2  NULLS LAST, (NOT (((rt0.c1)/(rt0.c2)))) DESC  NULLS LAST;
SELECT * FROM v0 WHERE ((((- (v0.c2))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (v0.c1 COLLATE RTRIM))) ORDER BY (CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN NULL THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c2))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (v0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN NULL THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END IN ()) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((- (v0.c2))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (v0.c1 COLLATE RTRIM))) ORDER BY (CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN NULL THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c2))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (v0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN NULL THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END IN ()) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((- (v0.c2))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (v0.c1 COLLATE RTRIM))) ORDER BY (CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN NULL THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END IN ()) DESC  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (CAST(CASE rt0.c0  WHEN v0.c2 THEN 0.7412285647965285 END AS INTEGER)) ORDER BY '242240729' DESC, ((SQLITE_COMPILEOPTION_GET(v0.c1))<<((((rt0.c2))<((v0.c0))))) ASC  NULLS LAST, ((((rt0.c3)+(rt0.c4)))OR(((((rt0.c3)AND(1e500)))AND(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN v0.c2 THEN 0.7412285647965285 END AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY '242240729' DESC, ((SQLITE_COMPILEOPTION_GET(v0.c1))<<((((rt0.c2))<((v0.c0))))) ASC  NULLS LAST, ((((rt0.c3)+(rt0.c4)))OR(((((rt0.c3)AND(1e500)))AND(rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (CAST(CASE rt0.c0  WHEN v0.c2 THEN 0.7412285647965285 END AS INTEGER)) ORDER BY '242240729' DESC, ((SQLITE_COMPILEOPTION_GET(v0.c1))<<((((rt0.c2))<((v0.c0))))) ASC  NULLS LAST, ((((rt0.c3)+(rt0.c4)))OR(((((rt0.c3)AND(1e500)))AND(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN v0.c2 THEN 0.7412285647965285 END AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY '242240729' DESC, ((SQLITE_COMPILEOPTION_GET(v0.c1))<<((((rt0.c2))<((v0.c0))))) ASC  NULLS LAST, ((((rt0.c3)+(rt0.c4)))OR(((((rt0.c3)AND(1e500)))AND(rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (CAST(CASE rt0.c0  WHEN v0.c2 THEN 0.7412285647965285 END AS INTEGER)) ORDER BY '242240729' DESC, ((SQLITE_COMPILEOPTION_GET(v0.c1))<<((((rt0.c2))<((v0.c0))))) ASC  NULLS LAST, ((((rt0.c3)+(rt0.c4)))OR(((((rt0.c3)AND(1e500)))AND(rt0.c1)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((LIKELIHOOD(rt0.c1, 0.918744109489353))OR(CAST(v0.c0 AS TEXT))))AND(MAX(v0.c0, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELIHOOD(rt0.c1, 0.918744109489353))OR(CAST(v0.c0 AS TEXT))))AND(MAX(v0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((LIKELIHOOD(rt0.c1, 0.918744109489353))OR(CAST(v0.c0 AS TEXT))))AND(MAX(v0.c0, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELIHOOD(rt0.c1, 0.918744109489353))OR(CAST(v0.c0 AS TEXT))))AND(MAX(v0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((LIKELIHOOD(rt0.c1, 0.918744109489353))OR(CAST(v0.c0 AS TEXT))))AND(MAX(v0.c0, rt0.c1))));
SELECT * FROM rt0, vt0, v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN NULL WHEN 0.32659948219552404 THEN rt0.c2 WHEN x'' THEN rt0.c0 END COLLATE RTRIM) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN v0.c0 THEN NULL WHEN 0.32659948219552404 THEN rt0.c2 WHEN x'' THEN rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, v0 ORDER BY NULL DESC);
SELECT * FROM rt0, vt0, v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN NULL WHEN 0.32659948219552404 THEN rt0.c2 WHEN x'' THEN rt0.c0 END COLLATE RTRIM) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN v0.c0 THEN NULL WHEN 0.32659948219552404 THEN rt0.c2 WHEN x'' THEN rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, v0 ORDER BY NULL DESC);
SELECT * FROM rt0, vt0, v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN NULL WHEN 0.32659948219552404 THEN rt0.c2 WHEN x'' THEN rt0.c0 END COLLATE RTRIM) ORDER BY NULL DESC;
SELECT * FROM rt0, vt0 WHERE (json_insert(rt0.c4, rt0.c1, rt0.c3, rt0.c3, rt0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((json_insert(rt0.c4, rt0.c1, rt0.c3, rt0.c3, rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (json_insert(rt0.c4, rt0.c1, rt0.c3, rt0.c3, rt0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((json_insert(rt0.c4, rt0.c1, rt0.c3, rt0.c3, rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM v0, vt0 WHERE ((((((v0.c0, vt0.c0, v0.c2))<((v0.c0, v0.c2, v0.c1))))/(v0.c1)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0, vt0.c0, v0.c2))<((v0.c0, v0.c2, v0.c1))))/(v0.c1))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((((v0.c0, vt0.c0, v0.c2))<((v0.c0, v0.c2, v0.c1))))/(v0.c1)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0, vt0.c0, v0.c2))<((v0.c0, v0.c2, v0.c1))))/(v0.c1))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((((v0.c0, vt0.c0, v0.c2))<((v0.c0, v0.c2, v0.c1))))/(v0.c1)));
SELECT * FROM rt0 WHERE (TYPEOF((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TYPEOF((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TYPEOF((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (+ (((rt0.c0)IS(rt0.c2)))) WHERE ((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((x'', (NOT (x'')), rt0.c2 COLLATE BINARY)) AND (((rt0.c2 IN ()), ((0.3018441192346639)!=(vt0.c0)), CAST(rt0.c4 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((x'', (NOT (x'')), rt0.c2 COLLATE BINARY)) AND (((rt0.c2 IN ()), ((0.3018441192346639)<>(vt0.c0)), CAST(rt0.c4 AS REAL))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (+ (((rt0.c0)IS(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (+ (((rt0.c0)IS(rt0.c2)))) WHERE ((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((x'', (NOT (x'')), rt0.c2 COLLATE BINARY)) AND (((rt0.c2 IN ()), ((0.3018441192346639)!=(vt0.c0)), CAST(rt0.c4 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((x'', (NOT (x'')), rt0.c2 COLLATE BINARY)) AND (((rt0.c2 IN ()), ((0.3018441192346639)<>(vt0.c0)), CAST(rt0.c4 AS REAL))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (+ (((rt0.c0)IS(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (+ (((rt0.c0)IS(rt0.c2)))) WHERE ((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((x'', (NOT (x'')), rt0.c2 COLLATE BINARY)) AND (((rt0.c2 IN ()), ((0.3018441192346639)!=(vt0.c0)), CAST(rt0.c4 AS REAL)))));
SELECT * FROM rt0 WHERE (((((rt0.c2)*(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)*(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)*(rt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOTNULL)) NOTNULL)) ORDER BY (rt0.c0 IN (rt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN (rt0.c1)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOTNULL)) NOTNULL)) ORDER BY (rt0.c0 IN (rt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN (rt0.c1)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOTNULL)) NOTNULL)) ORDER BY (rt0.c0 IN (rt0.c1)) COLLATE BINARY DESC;
SELECT * FROM v0, vt0, rt0 WHERE (((CAST(v0.c1 AS REAL))||(((rt0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c1 AS REAL))||(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((CAST(v0.c1 AS REAL))||(((rt0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c1 AS REAL))||(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((CAST(v0.c1 AS REAL))||(((rt0.c3) ISNULL))));
SELECT COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY CASE CASE WHEN v0.c2 THEN v0.c2 END  WHEN v0.c2 COLLATE NOCASE THEN (('') NOT BETWEEN (v0.c2) AND (v0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY CASE CASE WHEN v0.c2 THEN v0.c2 END  WHEN v0.c2 COLLATE NOCASE THEN (('') NOT BETWEEN (v0.c2) AND (v0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY CASE CASE WHEN v0.c2 THEN v0.c2 END  WHEN v0.c2 COLLATE NOCASE THEN (('') NOT BETWEEN (v0.c2) AND (v0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY CASE CASE WHEN v0.c2 THEN v0.c2 END  WHEN v0.c2 COLLATE NOCASE THEN (('') NOT BETWEEN (v0.c2) AND (v0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY CASE CASE WHEN v0.c2 THEN v0.c2 END  WHEN v0.c2 COLLATE NOCASE THEN (('') NOT BETWEEN (v0.c2) AND (v0.c0)) END ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((v0.c1)LIKE(v0.c2)) IN (((v0.c2)>=(-20603184)), (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0)))))) ORDER BY CASE ((v0.c1)%(0.7443823641390482))  WHEN COALESCE(v0.c0, v0.c0) THEN v0.c0 COLLATE NOCASE ELSE CASE v0.c2  WHEN '' THEN v0.c2 ELSE v0.c0 END END ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c1)LIKE(v0.c2)) IN (((v0.c2)>=(-20603184)), (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c1)%(0.7443823641390482))  WHEN COALESCE(v0.c0, v0.c0) THEN v0.c0 COLLATE NOCASE ELSE CASE v0.c2  WHEN '' THEN v0.c2 ELSE v0.c0 END END ASC);
SELECT ALL * FROM v0 WHERE ((((v0.c1)LIKE(v0.c2)) IN (((v0.c2)>=(-20603184)), (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0)))))) ORDER BY CASE ((v0.c1)%(0.7443823641390482))  WHEN COALESCE(v0.c0, v0.c0) THEN v0.c0 COLLATE NOCASE ELSE CASE v0.c2  WHEN '' THEN v0.c2 ELSE v0.c0 END END ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c1)LIKE(v0.c2)) IN (((v0.c2)>=(-20603184)), (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c1)%(0.7443823641390482))  WHEN COALESCE(v0.c0, v0.c0) THEN v0.c0 COLLATE NOCASE ELSE CASE v0.c2  WHEN '' THEN v0.c2 ELSE v0.c0 END END ASC);
SELECT ALL * FROM v0 WHERE ((((v0.c1)LIKE(v0.c2)) IN (((v0.c2)>=(-20603184)), (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0)))))) ORDER BY CASE ((v0.c1)%(0.7443823641390482))  WHEN COALESCE(v0.c0, v0.c0) THEN v0.c0 COLLATE NOCASE ELSE CASE v0.c2  WHEN '' THEN v0.c2 ELSE v0.c0 END END ASC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((v0.c0) IS FALSE) THEN ((vt0.c0)==(vt0.c0)) WHEN ((v0.c0)||(vt0.c0)) THEN (v0.c2 IN ()) WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) THEN ((v0.c2) ISNULL) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS BLOB)  WHEN ((v0.c0) IS FALSE) THEN ((vt0.c0)==(vt0.c0)) WHEN ((v0.c0)||(vt0.c0)) THEN (v0.c2 IN ()) WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) THEN ((v0.c2) ISNULL) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((v0.c0) IS FALSE) THEN ((vt0.c0)==(vt0.c0)) WHEN ((v0.c0)||(vt0.c0)) THEN (v0.c2 IN ()) WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) THEN ((v0.c2) ISNULL) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS BLOB)  WHEN ((v0.c0) IS FALSE) THEN ((vt0.c0)==(vt0.c0)) WHEN ((v0.c0)||(vt0.c0)) THEN (v0.c2 IN ()) WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) THEN ((v0.c2) ISNULL) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((v0.c0) IS FALSE) THEN ((vt0.c0)==(vt0.c0)) WHEN ((v0.c0)||(vt0.c0)) THEN (v0.c2 IN ()) WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) THEN ((v0.c2) ISNULL) ELSE (vt0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)%(vt0.c0))))) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS TEXT) DESC  NULLS FIRST, CASE WHEN ((vt0.c0)==(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END, NULL DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS TEXT) DESC  NULLS FIRST, CASE WHEN ((vt0.c0)==(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END, NULL DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)%(vt0.c0))))) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS TEXT) DESC  NULLS FIRST, CASE WHEN ((vt0.c0)==(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END, NULL DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS TEXT) DESC  NULLS FIRST, CASE WHEN ((vt0.c0)==(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END, NULL DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)%(vt0.c0))))) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS TEXT) DESC  NULLS FIRST, CASE WHEN ((vt0.c0)==(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END, NULL DESC;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON CASE CASE vt0.c0  WHEN NULL THEN v0.c2 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c4 ELSE 1570984077 END  WHEN rt0.c2 THEN ((rt0.c1)>('-1673328608')) WHEN ((v0.c2) NOT NULL) THEN ((rt0.c2)<(x'')) WHEN CAST(v0.c2 AS BLOB) THEN vt0.c0 ELSE 0.7412285647965285 END FULL OUTER JOIN rt0 ON ((((v0.c1)<=(rt0.c4)))AND(0Xffffffffff553871 COLLATE BINARY)) WHERE (CASE rt0.c3  WHEN (NOT (rt0.c3)) THEN json_array(vt0.c0, v0.c0) WHEN ABS(DISTINCT rt0.c1) THEN v0.c2 COLLATE RTRIM WHEN v0.c2 COLLATE BINARY THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN (NOT (rt0.c3)) THEN json_array(vt0.c0, v0.c0) WHEN ABS(DISTINCT rt0.c1) THEN v0.c2 COLLATE RTRIM WHEN v0.c2 COLLATE BINARY THEN v0.c0 END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE CASE vt0.c0  WHEN NULL THEN v0.c2 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c4 ELSE 1570984077 END  WHEN rt0.c2 THEN ((rt0.c1)>('-1673328608')) WHEN ((v0.c2) NOT NULL) THEN ((rt0.c2)<(x'')) WHEN CAST(v0.c2 AS BLOB) THEN vt0.c0 ELSE 0.7412285647965285 END FULL OUTER JOIN rt0 ON ((((v0.c1)<=(rt0.c4)))AND(0Xffffffffff553871 COLLATE BINARY)));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON CASE CASE vt0.c0  WHEN NULL THEN v0.c2 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c4 ELSE 1570984077 END  WHEN rt0.c2 THEN ((rt0.c1)>('-1673328608')) WHEN ((v0.c2) NOT NULL) THEN ((rt0.c2)<(x'')) WHEN CAST(v0.c2 AS BLOB) THEN vt0.c0 ELSE 0.7412285647965285 END FULL OUTER JOIN rt0 ON ((((v0.c1)<=(rt0.c4)))AND(0Xffffffffff553871 COLLATE BINARY)) WHERE (CASE rt0.c3  WHEN (NOT (rt0.c3)) THEN json_array(vt0.c0, v0.c0) WHEN ABS(DISTINCT rt0.c1) THEN v0.c2 COLLATE RTRIM WHEN v0.c2 COLLATE BINARY THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN (NOT (rt0.c3)) THEN json_array(vt0.c0, v0.c0) WHEN ABS(DISTINCT rt0.c1) THEN v0.c2 COLLATE RTRIM WHEN v0.c2 COLLATE BINARY THEN v0.c0 END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE CASE vt0.c0  WHEN NULL THEN v0.c2 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c4 ELSE 1570984077 END  WHEN rt0.c2 THEN ((rt0.c1)>('-1673328608')) WHEN ((v0.c2) NOT NULL) THEN ((rt0.c2)<(x'')) WHEN CAST(v0.c2 AS BLOB) THEN vt0.c0 ELSE 0.7412285647965285 END FULL OUTER JOIN rt0 ON ((((v0.c1)<=(rt0.c4)))AND(0Xffffffffff553871 COLLATE BINARY)));
SELECT * FROM vt0, v0 CROSS JOIN rt0 ON (- (((x'')+(rt0.c0)))) WHERE (0.8748950609432298);
SELECT SUM(count) FROM (SELECT ((0.8748950609432298) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON (- (((x'')+(rt0.c0)))));
SELECT * FROM vt0, v0 CROSS JOIN rt0 ON (- (((x'')+(rt0.c0)))) WHERE (0.8748950609432298);
SELECT SUM(count) FROM (SELECT ((0.8748950609432298) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON (- (((x'')+(rt0.c0)))));
SELECT * FROM vt0, v0 CROSS JOIN rt0 ON (- (((x'')+(rt0.c0)))) WHERE (0.8748950609432298);
SELECT * FROM vt0, rt0, v0 WHERE (((((v0.c2))!=((rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2))<>((rt0.c0))) IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((v0.c2))!=((rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2))<>((rt0.c0))) IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((v0.c2))!=((rt0.c0))) IN ()));
SELECT ALL * FROM rt0, vt0, v0 WHERE (CHAR(rt0.c1) COLLATE NOCASE) ORDER BY CAST(((((v0.c2)AND(vt0.c0)))AND(rt0.c1)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(rt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CAST(((((v0.c2)AND(vt0.c0)))AND(rt0.c1)) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CHAR(rt0.c1) COLLATE NOCASE) ORDER BY CAST(((((v0.c2)AND(vt0.c0)))AND(rt0.c1)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(rt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CAST(((((v0.c2)AND(vt0.c0)))AND(rt0.c1)) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CHAR(rt0.c1) COLLATE NOCASE) ORDER BY CAST(((((v0.c2)AND(vt0.c0)))AND(rt0.c1)) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)%(CAST(rt0.c3 AS BLOB))) WHERE (((CAST(rt0.c3 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS BLOB)) ISNULL)) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)%(CAST(rt0.c3 AS BLOB))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)%(CAST(rt0.c3 AS BLOB))) WHERE (((CAST(rt0.c3 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS BLOB)) ISNULL)) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)%(CAST(rt0.c3 AS BLOB))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)%(CAST(rt0.c3 AS BLOB))) WHERE (((CAST(rt0.c3 AS BLOB)) ISNULL));
SELECT COUNT(*) FROM rt0, v0 WHERE (((IFNULL(rt0.c0, rt0.c1))GLOB(((rt0.c0)!=(NULL))))) ORDER BY LIKE(NULL, CAST(rt0.c0 AS TEXT), '-') ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c0, rt0.c1))GLOB(((rt0.c0)<>(NULL))))) IS TRUE)  as count FROM rt0, v0 ORDER BY LIKE(NULL, CAST(rt0.c0 AS TEXT), '-') ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((IFNULL(rt0.c0, rt0.c1))GLOB(((rt0.c0)!=(NULL))))) ORDER BY LIKE(NULL, CAST(rt0.c0 AS TEXT), '-') ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c0, rt0.c1))GLOB(((rt0.c0)<>(NULL))))) IS TRUE)  as count FROM rt0, v0 ORDER BY LIKE(NULL, CAST(rt0.c0 AS TEXT), '-') ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((IFNULL(rt0.c0, rt0.c1))GLOB(((rt0.c0)!=(NULL))))) ORDER BY LIKE(NULL, CAST(rt0.c0 AS TEXT), '-') ASC;
SELECT * FROM v0, rt0 WHERE (((((-859064078, v0.c0, v0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, v0.c2, v0.c1))) IN ())) ORDER BY ((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))AND(v0.c1)))AND(((((((((v0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(v0.c1)))AND(v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((-859064078, v0.c0, v0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, v0.c2, v0.c1))) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))AND(v0.c1)))AND(((((((((v0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(v0.c1)))AND(v0.c1)))) DESC);
SELECT * FROM v0, rt0 WHERE (((((-859064078, v0.c0, v0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, v0.c2, v0.c1))) IN ())) ORDER BY ((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))AND(v0.c1)))AND(((((((((v0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(v0.c1)))AND(v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((-859064078, v0.c0, v0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, v0.c2, v0.c1))) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))AND(v0.c1)))AND(((((((((v0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(v0.c1)))AND(v0.c1)))) DESC);
SELECT * FROM v0, rt0 WHERE (((((-859064078, v0.c0, v0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, v0.c2, v0.c1))) IN ())) ORDER BY ((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))AND(v0.c1)))AND(((((((((v0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(v0.c1)))AND(v0.c1)))) DESC;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c3)IS(rt0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)IS(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c3)IS(rt0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)IS(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c3)IS(rt0.c3)) AS INTEGER));
SELECT * FROM rt0 WHERE (IFNULL(rt0.c2, rt0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(rt0.c2, rt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (IFNULL(rt0.c2, rt0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(rt0.c2, rt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (IFNULL(rt0.c2, rt0.c1) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c4)<(NULL)) COLLATE BINARY) ORDER BY (NOT (rt0.c1)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c4)<(NULL)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (rt0.c1)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c4)<(NULL)) COLLATE BINARY) ORDER BY (NOT (rt0.c1)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c4)<(NULL)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (rt0.c1)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c4)<(NULL)) COLLATE BINARY) ORDER BY (NOT (rt0.c1)) COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM vt0, v0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))&(((NULL)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))&(((NULL)AND(rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))&(((NULL)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))&(((NULL)AND(rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))&(((NULL)AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c0) IS FALSE), rt0.c1, ((rt0.c4)&(rt0.c0)))) AND ((((rt0.c4)==(rt0.c3)), (rt0.c4 IN ('1114810370', rt0.c3)), rt0.c3)))) ORDER BY (((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)) IN (json_quote(rt0.c0), ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c1)), CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END)) DESC  NULLS FIRST, rt0.c3, '-207620125' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c0) IS FALSE), rt0.c1, ((rt0.c4)&(rt0.c0)))) AND ((((rt0.c4)=(rt0.c3)), (rt0.c4 IN ('1114810370', rt0.c3)), rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)) IN (json_quote(rt0.c0), ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c1)), CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END)) DESC  NULLS FIRST, rt0.c3, '-207620125' ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c0) IS FALSE), rt0.c1, ((rt0.c4)&(rt0.c0)))) AND ((((rt0.c4)==(rt0.c3)), (rt0.c4 IN ('1114810370', rt0.c3)), rt0.c3)))) ORDER BY (((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)) IN (json_quote(rt0.c0), ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c1)), CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END)) DESC  NULLS FIRST, rt0.c3, '-207620125' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c0) IS FALSE), rt0.c1, ((rt0.c4)&(rt0.c0)))) AND ((((rt0.c4)=(rt0.c3)), (rt0.c4 IN ('1114810370', rt0.c3)), rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)) IN (json_quote(rt0.c0), ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c1)), CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END)) DESC  NULLS FIRST, rt0.c3, '-207620125' ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c0) IS FALSE), rt0.c1, ((rt0.c4)&(rt0.c0)))) AND ((((rt0.c4)==(rt0.c3)), (rt0.c4 IN ('1114810370', rt0.c3)), rt0.c3)))) ORDER BY (((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)) IN (json_quote(rt0.c0), ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c1)), CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END)) DESC  NULLS FIRST, rt0.c3, '-207620125' ASC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CHAR(((rt0.c4)+(rt0.c3)), ((rt0.c4) IS FALSE), ((rt0.c3)>=(rt0.c0))) WHERE (((CASE 0.8477156366388111  WHEN '552357304' THEN vt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 END) IS TRUE)) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((1.58333329E8)|(vt0.c0)) ELSE ((rt0.c0)!=(4.37002039E8)) END ASC;
SELECT SUM(count) FROM (SELECT ((((CASE 0.8477156366388111  WHEN '552357304' THEN vt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 END) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CHAR(((rt0.c4)+(rt0.c3)), ((rt0.c4) IS FALSE), ((rt0.c3)>=(rt0.c0))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((1.58333329E8)|(vt0.c0)) ELSE ((rt0.c0)!=(4.37002039E8)) END ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CHAR(((rt0.c4)+(rt0.c3)), ((rt0.c4) IS FALSE), ((rt0.c3)>=(rt0.c0))) WHERE (((CASE 0.8477156366388111  WHEN '552357304' THEN vt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 END) IS TRUE)) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((1.58333329E8)|(vt0.c0)) ELSE ((rt0.c0)!=(4.37002039E8)) END ASC;
SELECT SUM(count) FROM (SELECT ((((CASE 0.8477156366388111  WHEN '552357304' THEN vt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 END) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CHAR(((rt0.c4)+(rt0.c3)), ((rt0.c4) IS FALSE), ((rt0.c3)>=(rt0.c0))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((1.58333329E8)|(vt0.c0)) ELSE ((rt0.c0)!=(4.37002039E8)) END ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CHAR(((rt0.c4)+(rt0.c3)), ((rt0.c4) IS FALSE), ((rt0.c3)>=(rt0.c0))) WHERE (((CASE 0.8477156366388111  WHEN '552357304' THEN vt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 END) IS TRUE)) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((1.58333329E8)|(vt0.c0)) ELSE ((rt0.c0)!=(4.37002039E8)) END ASC;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ('');
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((v0.c1)!=(rt0.c2))) NOT NULL)) ORDER BY ((((((0.792896544556041)AND(vt0.c0)))OR(rt0.c0)))IS(CASE WHEN rt0.c3 THEN v0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS LAST, CASE rt0.c1  WHEN ((((rt0.c2)OR(v0.c1)))OR(rt0.c4)) THEN rt0.c1 COLLATE RTRIM ELSE x'' END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)!=(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((0.792896544556041)AND(vt0.c0)))OR(rt0.c0)))IS(CASE WHEN rt0.c3 THEN v0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS LAST, CASE rt0.c1  WHEN ((((rt0.c2)OR(v0.c1)))OR(rt0.c4)) THEN rt0.c1 COLLATE RTRIM ELSE x'' END ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((v0.c1)!=(rt0.c2))) NOT NULL)) ORDER BY ((((((0.792896544556041)AND(vt0.c0)))OR(rt0.c0)))IS(CASE WHEN rt0.c3 THEN v0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS LAST, CASE rt0.c1  WHEN ((((rt0.c2)OR(v0.c1)))OR(rt0.c4)) THEN rt0.c1 COLLATE RTRIM ELSE x'' END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)!=(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((0.792896544556041)AND(vt0.c0)))OR(rt0.c0)))IS(CASE WHEN rt0.c3 THEN v0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS LAST, CASE rt0.c1  WHEN ((((rt0.c2)OR(v0.c1)))OR(rt0.c4)) THEN rt0.c1 COLLATE RTRIM ELSE x'' END ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((v0.c1)!=(rt0.c2))) NOT NULL)) ORDER BY ((((((0.792896544556041)AND(vt0.c0)))OR(rt0.c0)))IS(CASE WHEN rt0.c3 THEN v0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS LAST, CASE rt0.c1  WHEN ((((rt0.c2)OR(v0.c1)))OR(rt0.c4)) THEN rt0.c1 COLLATE RTRIM ELSE x'' END ASC;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON json(LIKE(rt0.c2, rt0.c1, '-')) INNER JOIN rt0 ON CAST(('658926758' IN ()) AS INTEGER) WHERE (CAST('' AS REAL)) ORDER BY CASE ((vt0.c0)IS(rt0.c1))  WHEN 0.24071234553317666 THEN (0x53b3cb00 IN ()) WHEN ((((rt0.c0)OR(vt0.c0)))OR(v0.c0)) THEN ((rt0.c3)GLOB(rt0.c0)) WHEN ((v0.c1) NOT NULL) THEN rt0.c3 ELSE x'982c' END  NULLS LAST, ((+ (v0.c2)) IN (CAST(rt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON json(LIKE(rt0.c2, rt0.c1, '-')) INNER JOIN rt0 ON CAST(('658926758' IN ()) AS INTEGER) ORDER BY CASE ((vt0.c0)IS(rt0.c1))  WHEN 0.24071234553317666 THEN (0x53b3cb00 IN ()) WHEN ((((rt0.c0)OR(vt0.c0)))OR(v0.c0)) THEN ((rt0.c3)GLOB(rt0.c0)) WHEN ((v0.c1) NOT NULL) THEN rt0.c3 ELSE x'982c' END  NULLS LAST, ((+ (v0.c2)) IN (CAST(rt0.c2 AS INTEGER))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON json(LIKE(rt0.c2, rt0.c1, '-')) INNER JOIN rt0 ON CAST(('658926758' IN ()) AS INTEGER) WHERE (CAST('' AS REAL)) ORDER BY CASE ((vt0.c0)IS(rt0.c1))  WHEN 0.24071234553317666 THEN (0x53b3cb00 IN ()) WHEN ((((rt0.c0)OR(vt0.c0)))OR(v0.c0)) THEN ((rt0.c3)GLOB(rt0.c0)) WHEN ((v0.c1) NOT NULL) THEN rt0.c3 ELSE x'982c' END  NULLS LAST, ((+ (v0.c2)) IN (CAST(rt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON json(LIKE(rt0.c2, rt0.c1, '-')) INNER JOIN rt0 ON CAST(('658926758' IN ()) AS INTEGER) ORDER BY CASE ((vt0.c0)IS(rt0.c1))  WHEN 0.24071234553317666 THEN (0x53b3cb00 IN ()) WHEN ((((rt0.c0)OR(vt0.c0)))OR(v0.c0)) THEN ((rt0.c3)GLOB(rt0.c0)) WHEN ((v0.c1) NOT NULL) THEN rt0.c3 ELSE x'982c' END  NULLS LAST, ((+ (v0.c2)) IN (CAST(rt0.c2 AS INTEGER))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)*(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)*(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)*(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)*(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)*(vt0.c0)) IN ()));
SELECT ALL * FROM rt0 WHERE (LIKELY(CAST(rt0.c4 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(rt0.c4 AS INTEGER))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELY(CAST(rt0.c4 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(rt0.c4 AS INTEGER))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELY(CAST(rt0.c4 AS INTEGER)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((UNICODE(rt0.c3))/(((rt0.c3) NOTNULL))) INNER JOIN v0 ON CAST(((rt0.c2) ISNULL) AS NUMERIC) WHERE ((((- (rt0.c0)))<<(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0)))<<(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((UNICODE(rt0.c3))/(((rt0.c3) NOTNULL))) INNER JOIN v0 ON CAST(((rt0.c2) ISNULL) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((UNICODE(rt0.c3))/(((rt0.c3) NOTNULL))) INNER JOIN v0 ON CAST(((rt0.c2) ISNULL) AS NUMERIC) WHERE ((((- (rt0.c0)))<<(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0)))<<(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((UNICODE(rt0.c3))/(((rt0.c3) NOTNULL))) INNER JOIN v0 ON CAST(((rt0.c2) ISNULL) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((UNICODE(rt0.c3))/(((rt0.c3) NOTNULL))) INNER JOIN v0 ON CAST(((rt0.c2) ISNULL) AS NUMERIC) WHERE ((((- (rt0.c0)))<<(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) IS TRUE)) ORDER BY (~ (UPPER(DISTINCT vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (~ (UPPER(DISTINCT vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) IS TRUE)) ORDER BY (~ (UPPER(DISTINCT vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (~ (UPPER(DISTINCT vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) IS TRUE)) ORDER BY (~ (UPPER(DISTINCT vt0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (json_type(((vt0.c0)IS NOT(vt0.c0)))) ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (vt0.c0) AND ('rWt#q9'));
SELECT SUM(count) FROM (SELECT ALL ((json_type(((vt0.c0)IS NOT(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (vt0.c0) AND ('rWt#q9')));
SELECT ALL * FROM vt0 WHERE (json_type(((vt0.c0)IS NOT(vt0.c0)))) ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (vt0.c0) AND ('rWt#q9'));
SELECT SUM(count) FROM (SELECT ALL ((json_type(((vt0.c0)IS NOT(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (vt0.c0) AND ('rWt#q9')));
SELECT ALL * FROM vt0 WHERE (json_type(((vt0.c0)IS NOT(vt0.c0)))) ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (vt0.c0) AND ('rWt#q9'));
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (CAST(rt0.c4 AS INTEGER)))) ORDER BY CASE WHEN ((rt0.c3) NOT NULL) THEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c3)) WHEN TYPEOF(0.20777148058618522) THEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END WHEN rt0.c4 THEN 0.44541293132881843 END DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c4 AS INTEGER)))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY CASE WHEN ((rt0.c3) NOT NULL) THEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c3)) WHEN TYPEOF(0.20777148058618522) THEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END WHEN rt0.c4 THEN 0.44541293132881843 END DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (CAST(rt0.c4 AS INTEGER)))) ORDER BY CASE WHEN ((rt0.c3) NOT NULL) THEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c3)) WHEN TYPEOF(0.20777148058618522) THEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END WHEN rt0.c4 THEN 0.44541293132881843 END DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c4 AS INTEGER)))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY CASE WHEN ((rt0.c3) NOT NULL) THEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c3)) WHEN TYPEOF(0.20777148058618522) THEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END WHEN rt0.c4 THEN 0.44541293132881843 END DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (CAST(rt0.c4 AS INTEGER)))) ORDER BY CASE WHEN ((rt0.c3) NOT NULL) THEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c3)) WHEN TYPEOF(0.20777148058618522) THEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END WHEN rt0.c4 THEN 0.44541293132881843 END DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST((v0.c1 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST((v0.c1 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST((v0.c1 IN ()) AS INTEGER));
SELECT ALL * FROM v0, rt0 NATURAL JOIN vt0 WHERE ((~ ((((vt0.c0, v0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, x'89dd')) AND ((rt0.c3, vt0.c0, rt0.c1)))))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN ((rt0.c4)IS(v0.c1)) THEN (((v0.c0))>((rt0.c3))) WHEN ((rt0.c0)IS(rt0.c4)) THEN ((rt0.c0) NOTNULL) WHEN DATE(rt0.c0, v0.c1, v0.c0) THEN ((0Xffffffff8a0e0b22)&(rt0.c1)) WHEN ((rt0.c4)>=(rt0.c0)) THEN (((rt0.c1))=((rt0.c0))) WHEN rt0.c3 COLLATE BINARY THEN ((((((((rt0.c4)AND(vt0.c0)))AND(v0.c1)))AND(rt0.c2)))OR(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0, v0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, x'89dd')) AND ((rt0.c3, vt0.c0, rt0.c1)))))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0 ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN ((rt0.c4)IS(v0.c1)) THEN (((v0.c0))>((rt0.c3))) WHEN ((rt0.c0)IS(rt0.c4)) THEN ((rt0.c0) NOTNULL) WHEN DATE(rt0.c0, v0.c1, v0.c0) THEN ((0Xffffffff8a0e0b22)&(rt0.c1)) WHEN ((rt0.c4)>=(rt0.c0)) THEN (((rt0.c1))=((rt0.c0))) WHEN rt0.c3 COLLATE BINARY THEN ((((((((rt0.c4)AND(vt0.c0)))AND(v0.c1)))AND(rt0.c2)))OR(v0.c0)) END  NULLS FIRST);
SELECT ALL * FROM v0, rt0 NATURAL JOIN vt0 WHERE ((~ ((((vt0.c0, v0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, x'89dd')) AND ((rt0.c3, vt0.c0, rt0.c1)))))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN ((rt0.c4)IS(v0.c1)) THEN (((v0.c0))>((rt0.c3))) WHEN ((rt0.c0)IS(rt0.c4)) THEN ((rt0.c0) NOTNULL) WHEN DATE(rt0.c0, v0.c1, v0.c0) THEN ((0Xffffffff8a0e0b22)&(rt0.c1)) WHEN ((rt0.c4)>=(rt0.c0)) THEN (((rt0.c1))=((rt0.c0))) WHEN rt0.c3 COLLATE BINARY THEN ((((((((rt0.c4)AND(vt0.c0)))AND(v0.c1)))AND(rt0.c2)))OR(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0, v0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, x'89dd')) AND ((rt0.c3, vt0.c0, rt0.c1)))))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0 ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN ((rt0.c4)IS(v0.c1)) THEN (((v0.c0))>((rt0.c3))) WHEN ((rt0.c0)IS(rt0.c4)) THEN ((rt0.c0) NOTNULL) WHEN DATE(rt0.c0, v0.c1, v0.c0) THEN ((0Xffffffff8a0e0b22)&(rt0.c1)) WHEN ((rt0.c4)>=(rt0.c0)) THEN (((rt0.c1))=((rt0.c0))) WHEN rt0.c3 COLLATE BINARY THEN ((((((((rt0.c4)AND(vt0.c0)))AND(v0.c1)))AND(rt0.c2)))OR(v0.c0)) END  NULLS FIRST);
SELECT ALL * FROM v0, rt0 NATURAL JOIN vt0 WHERE ((~ ((((vt0.c0, v0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, x'89dd')) AND ((rt0.c3, vt0.c0, rt0.c1)))))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN ((rt0.c4)IS(v0.c1)) THEN (((v0.c0))>((rt0.c3))) WHEN ((rt0.c0)IS(rt0.c4)) THEN ((rt0.c0) NOTNULL) WHEN DATE(rt0.c0, v0.c1, v0.c0) THEN ((0Xffffffff8a0e0b22)&(rt0.c1)) WHEN ((rt0.c4)>=(rt0.c0)) THEN (((rt0.c1))=((rt0.c0))) WHEN rt0.c3 COLLATE BINARY THEN ((((((((rt0.c4)AND(vt0.c0)))AND(v0.c1)))AND(rt0.c2)))OR(v0.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((((v0.c1)AND(rt0.c3)))OR(v0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(((v0.c2)OR(rt0.c4))))) ORDER BY ((CAST(0.7151580277729542 AS BLOB)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c1)AND(rt0.c3)))OR(v0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(((v0.c2)OR(rt0.c4))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(0.7151580277729542 AS BLOB)) IS TRUE) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((((v0.c1)AND(rt0.c3)))OR(v0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(((v0.c2)OR(rt0.c4))))) ORDER BY ((CAST(0.7151580277729542 AS BLOB)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c1)AND(rt0.c3)))OR(v0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(((v0.c2)OR(rt0.c4))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(0.7151580277729542 AS BLOB)) IS TRUE) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((((v0.c1)AND(rt0.c3)))OR(v0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(((v0.c2)OR(rt0.c4))))) ORDER BY ((CAST(0.7151580277729542 AS BLOB)) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((LOWER(v0.c1))AND(json_array(rt0.c1, rt0.c4))))OR((+ (0.6651153387543107)))) RIGHT OUTER JOIN v0 ON ((CASE v0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c0 END) BETWEEN (((rt0.c4) ISNULL)) AND (x'')) WHERE ((+ (v0.c0))) ORDER BY ('658926758' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((LOWER(v0.c1))AND(json_array(rt0.c1, rt0.c4))))OR((+ (0.6651153387543107)))) RIGHT OUTER JOIN v0 ON ((CASE v0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c0 END) BETWEEN (((rt0.c4) ISNULL)) AND (x'')) ORDER BY ('658926758' IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((LOWER(v0.c1))AND(json_array(rt0.c1, rt0.c4))))OR((+ (0.6651153387543107)))) RIGHT OUTER JOIN v0 ON ((CASE v0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c0 END) BETWEEN (((rt0.c4) ISNULL)) AND (x'')) WHERE ((+ (v0.c0))) ORDER BY ('658926758' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((LOWER(v0.c1))AND(json_array(rt0.c1, rt0.c4))))OR((+ (0.6651153387543107)))) RIGHT OUTER JOIN v0 ON ((CASE v0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c0 END) BETWEEN (((rt0.c4) ISNULL)) AND (x'')) ORDER BY ('658926758' IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((((v0.c0))=((rt0.c0)))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND ((((v0.c0))>=((v0.c2)))))) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))=((rt0.c0)))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND ((((v0.c0))>=((v0.c2)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY v0.c2);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((((v0.c0))=((rt0.c0)))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND ((((v0.c0))>=((v0.c2)))))) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))=((rt0.c0)))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND ((((v0.c0))>=((v0.c2)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY v0.c2);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((((v0.c0))=((rt0.c0)))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND ((((v0.c0))>=((v0.c2)))))) ORDER BY v0.c2;
SELECT * FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN ((vt0.c0)==(vt0.c0)) THEN json_array(vt0.c0, vt0.c0) WHEN vt0.c0 THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0) IS TRUE) THEN HEX(vt0.c0) END) ORDER BY ((((vt0.c0) NOT NULL))+(1.492397822E9));
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c0))  WHEN ((vt0.c0)==(vt0.c0)) THEN json_array(vt0.c0, vt0.c0) WHEN vt0.c0 THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0) IS TRUE) THEN HEX(vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))+(1.492397822E9)));
SELECT * FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN ((vt0.c0)==(vt0.c0)) THEN json_array(vt0.c0, vt0.c0) WHEN vt0.c0 THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0) IS TRUE) THEN HEX(vt0.c0) END) ORDER BY ((((vt0.c0) NOT NULL))+(1.492397822E9));
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c0))  WHEN ((vt0.c0)==(vt0.c0)) THEN json_array(vt0.c0, vt0.c0) WHEN vt0.c0 THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0) IS TRUE) THEN HEX(vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))+(1.492397822E9)));
SELECT * FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN ((vt0.c0)==(vt0.c0)) THEN json_array(vt0.c0, vt0.c0) WHEN vt0.c0 THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0) IS TRUE) THEN HEX(vt0.c0) END) ORDER BY ((((vt0.c0) NOT NULL))+(1.492397822E9));
SELECT * FROM v0, vt0, rt0 WHERE (((((((v0.c2) NOT NULL))OR((((rt0.c4, rt0.c0, 'N/', v0.c1, rt0.c1)) BETWEEN ((vt0.c0, v0.c2, rt0.c0, rt0.c2, v0.c0)) AND ((vt0.c0, v0.c0, v0.c1, rt0.c3, v0.c1))))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2) NOT NULL))OR((((rt0.c4, rt0.c0, 'N/', v0.c1, rt0.c1)) BETWEEN ((vt0.c0, v0.c2, rt0.c0, rt0.c2, v0.c0)) AND ((vt0.c0, v0.c0, v0.c1, rt0.c3, v0.c1))))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE x'' END))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((((((v0.c2) NOT NULL))OR((((rt0.c4, rt0.c0, 'N/', v0.c1, rt0.c1)) BETWEEN ((vt0.c0, v0.c2, rt0.c0, rt0.c2, v0.c0)) AND ((vt0.c0, v0.c0, v0.c1, rt0.c3, v0.c1))))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2) NOT NULL))OR((((rt0.c4, rt0.c0, 'N/', v0.c1, rt0.c1)) BETWEEN ((vt0.c0, v0.c2, rt0.c0, rt0.c2, v0.c0)) AND ((vt0.c0, v0.c0, v0.c1, rt0.c3, v0.c1))))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE x'' END))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((((((v0.c2) NOT NULL))OR((((rt0.c4, rt0.c0, 'N/', v0.c1, rt0.c1)) BETWEEN ((vt0.c0, v0.c2, rt0.c0, rt0.c2, v0.c0)) AND ((vt0.c0, v0.c0, v0.c1, rt0.c3, v0.c1))))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE x'' END)));
SELECT * FROM v0, rt0 WHERE (((SQLITE_VERSION()) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((SQLITE_VERSION()) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((SQLITE_VERSION()) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((SQLITE_VERSION()) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((SQLITE_VERSION()) NOT NULL));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 END)) AND ((((0.7934110398662148)LIKE(v0.c0))))) WHERE (CASE LIKELIHOOD(v0.c0, 0.3582520163905325)  WHEN ((v0.c2) IS FALSE) THEN (v0.c0 IN ()) WHEN 444467096 THEN v0.c0 WHEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN v0.c2 COLLATE BINARY ELSE '833004663' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELIHOOD(v0.c0, 0.3582520163905325)  WHEN ((v0.c2) IS FALSE) THEN (v0.c0 IN ()) WHEN 444467096 THEN v0.c0 WHEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN v0.c2 COLLATE BINARY ELSE '833004663' END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 END)) AND ((((0.7934110398662148)LIKE(v0.c0))))));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 END)) AND ((((0.7934110398662148)LIKE(v0.c0))))) WHERE (CASE LIKELIHOOD(v0.c0, 0.3582520163905325)  WHEN ((v0.c2) IS FALSE) THEN (v0.c0 IN ()) WHEN 444467096 THEN v0.c0 WHEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN v0.c2 COLLATE BINARY ELSE '833004663' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELIHOOD(v0.c0, 0.3582520163905325)  WHEN ((v0.c2) IS FALSE) THEN (v0.c0 IN ()) WHEN 444467096 THEN v0.c0 WHEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN v0.c2 COLLATE BINARY ELSE '833004663' END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 END)) AND ((((0.7934110398662148)LIKE(v0.c0))))));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 END)) AND ((((0.7934110398662148)LIKE(v0.c0))))) WHERE (CASE LIKELIHOOD(v0.c0, 0.3582520163905325)  WHEN ((v0.c2) IS FALSE) THEN (v0.c0 IN ()) WHEN 444467096 THEN v0.c0 WHEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN v0.c2 COLLATE BINARY ELSE '833004663' END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((0.11060421165787582)|((NOT (v0.c0))))) ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) ASC  NULLS FIRST, ((((v0.c1) ISNULL))<<(((v0.c0)||(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.11060421165787582)|((NOT (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) ASC  NULLS FIRST, ((((v0.c1) ISNULL))<<(((v0.c0)||(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((0.11060421165787582)|((NOT (v0.c0))))) ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) ASC  NULLS FIRST, ((((v0.c1) ISNULL))<<(((v0.c0)||(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.11060421165787582)|((NOT (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) ASC  NULLS FIRST, ((((v0.c1) ISNULL))<<(((v0.c0)||(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((0.11060421165787582)|((NOT (v0.c0))))) ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) ASC  NULLS FIRST, ((((v0.c1) ISNULL))<<(((v0.c0)||(v0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (x'');
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((('d')&(v0.c1)) IN (((((vt0.c0)AND(vt0.c0)))AND(v0.c0)), ((((((((v0.c2)OR(x'')))AND(v0.c2)))OR(v0.c1)))OR(v0.c2)))) WHERE ((((((vt0.c0)-(v0.c2))))==(((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((vt0.c0, v0.c0, v0.c2))))))) ORDER BY ((vt0.c0) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)-(v0.c2))))=(((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((vt0.c0, v0.c0, v0.c2))))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((('d')&(v0.c1)) IN (((((vt0.c0)AND(vt0.c0)))AND(v0.c0)), ((((((((v0.c2)OR(x'')))AND(v0.c2)))OR(v0.c1)))OR(v0.c2)))) ORDER BY ((vt0.c0) NOT NULL));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((('d')&(v0.c1)) IN (((((vt0.c0)AND(vt0.c0)))AND(v0.c0)), ((((((((v0.c2)OR(x'')))AND(v0.c2)))OR(v0.c1)))OR(v0.c2)))) WHERE ((((((vt0.c0)-(v0.c2))))==(((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((vt0.c0, v0.c0, v0.c2))))))) ORDER BY ((vt0.c0) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)-(v0.c2))))=(((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((vt0.c0, v0.c0, v0.c2))))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((('d')&(v0.c1)) IN (((((vt0.c0)AND(vt0.c0)))AND(v0.c0)), ((((((((v0.c2)OR(x'')))AND(v0.c2)))OR(v0.c1)))OR(v0.c2)))) ORDER BY ((vt0.c0) NOT NULL));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((('d')&(v0.c1)) IN (((((vt0.c0)AND(vt0.c0)))AND(v0.c0)), ((((((((v0.c2)OR(x'')))AND(v0.c2)))OR(v0.c1)))OR(v0.c2)))) WHERE ((((((vt0.c0)-(v0.c2))))==(((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((vt0.c0, v0.c0, v0.c2))))))) ORDER BY ((vt0.c0) NOT NULL);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)LIKE(v0.c0))) IS TRUE)) ORDER BY (((v0.c2 IN ())) BETWEEN (((((v0.c0)AND('-701292619')))AND(v0.c1))) AND (((v0.c0) IS TRUE))) ASC, CAST((~ (572447423)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)LIKE(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2 IN ())) BETWEEN (((((v0.c0)AND('-701292619')))AND(v0.c1))) AND (((v0.c0) IS TRUE))) ASC, CAST((~ (572447423)) AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)LIKE(v0.c0))) IS TRUE)) ORDER BY (((v0.c2 IN ())) BETWEEN (((((v0.c0)AND('-701292619')))AND(v0.c1))) AND (((v0.c0) IS TRUE))) ASC, CAST((~ (572447423)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)LIKE(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2 IN ())) BETWEEN (((((v0.c0)AND('-701292619')))AND(v0.c1))) AND (((v0.c0) IS TRUE))) ASC, CAST((~ (572447423)) AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)LIKE(v0.c0))) IS TRUE)) ORDER BY (((v0.c2 IN ())) BETWEEN (((((v0.c0)AND('-701292619')))AND(v0.c1))) AND (((v0.c0) IS TRUE))) ASC, CAST((~ (572447423)) AS REAL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (QUOTE((rt0.c2 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE((rt0.c2 IN (rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (QUOTE((rt0.c2 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE((rt0.c2 IN (rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (QUOTE((rt0.c2 IN (rt0.c2))));
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0)==(v0.c1)) AS REAL)) ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS INTEGER) ELSE v0.c2 COLLATE NOCASE END  NULLS LAST, '-1978791134';
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)=(v0.c1)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS INTEGER) ELSE v0.c2 COLLATE NOCASE END  NULLS LAST, '-1978791134');
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0)==(v0.c1)) AS REAL)) ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS INTEGER) ELSE v0.c2 COLLATE NOCASE END  NULLS LAST, '-1978791134';
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)=(v0.c1)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS INTEGER) ELSE v0.c2 COLLATE NOCASE END  NULLS LAST, '-1978791134');
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0)==(v0.c1)) AS REAL)) ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS INTEGER) ELSE v0.c2 COLLATE NOCASE END  NULLS LAST, '-1978791134';
SELECT COUNT(*) FROM v0 WHERE ((('-1165958686') NOT BETWEEN (((v0.c1)>(v0.c1))) AND ((((v0.c0))<((v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((('-1165958686') NOT BETWEEN (((v0.c1)>(v0.c1))) AND ((((v0.c0))<((v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((('-1165958686') NOT BETWEEN (((v0.c1)>(v0.c1))) AND ((((v0.c0))<((v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((('-1165958686') NOT BETWEEN (((v0.c1)>(v0.c1))) AND ((((v0.c0))<((v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((('-1165958686') NOT BETWEEN (((v0.c1)>(v0.c1))) AND ((((v0.c0))<((v0.c1))))));
SELECT * FROM v0, vt0, rt0 WHERE (((((vt0.c0)IS NOT(rt0.c0)))|((+ (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(rt0.c0)))|((+ (v0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((((vt0.c0)IS NOT(rt0.c0)))|((+ (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(rt0.c0)))|((+ (v0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((((vt0.c0)IS NOT(rt0.c0)))|((+ (v0.c1)))));
SELECT ALL * FROM vt0 WHERE ('629579394');
SELECT SUM(count) FROM (SELECT ALL (('629579394') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('629579394');
SELECT SUM(count) FROM (SELECT ALL (('629579394') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('629579394');
SELECT ALL * FROM v0 WHERE ((((0.9601081148352676) IS FALSE) IN ())) ORDER BY (0.33007652236086427 IN ());
SELECT SUM(count) FROM (SELECT ALL (((((0.9601081148352676) IS FALSE) IN ())) IS TRUE)  as count FROM v0 ORDER BY (0.33007652236086427 IN ()));
SELECT ALL * FROM v0 WHERE ((((0.9601081148352676) IS FALSE) IN ())) ORDER BY (0.33007652236086427 IN ());
SELECT SUM(count) FROM (SELECT ALL (((((0.9601081148352676) IS FALSE) IN ())) IS TRUE)  as count FROM v0 ORDER BY (0.33007652236086427 IN ()));
SELECT ALL * FROM v0 WHERE ((((0.9601081148352676) IS FALSE) IN ())) ORDER BY (0.33007652236086427 IN ());
SELECT ALL * FROM v0 WHERE (((((v0.c1) NOT NULL))=(((0.6369303154987824)IS(v0.c2))))) ORDER BY (((ABS(DISTINCT v0.c0)))==((((v0.c0)IS(v0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT NULL))=(((0.6369303154987824)IS(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY (((ABS(DISTINCT v0.c0)))=((((v0.c0)IS(v0.c1))))) ASC);
SELECT ALL * FROM v0 WHERE (((((v0.c1) NOT NULL))=(((0.6369303154987824)IS(v0.c2))))) ORDER BY (((ABS(DISTINCT v0.c0)))==((((v0.c0)IS(v0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT NULL))=(((0.6369303154987824)IS(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY (((ABS(DISTINCT v0.c0)))=((((v0.c0)IS(v0.c1))))) ASC);
SELECT ALL * FROM v0 WHERE (((((v0.c1) NOT NULL))=(((0.6369303154987824)IS(v0.c2))))) ORDER BY (((ABS(DISTINCT v0.c0)))==((((v0.c0)IS(v0.c1))))) ASC;
SELECT * FROM rt0 WHERE (CASE WHEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))OR(NULL)))AND(rt0.c2)) THEN ((rt0.c1) IS TRUE) ELSE ((rt0.c1) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))OR(NULL)))AND(rt0.c2)) THEN ((rt0.c1) IS TRUE) ELSE ((rt0.c1) ISNULL) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))OR(NULL)))AND(rt0.c2)) THEN ((rt0.c1) IS TRUE) ELSE ((rt0.c1) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))OR(NULL)))AND(rt0.c2)) THEN ((rt0.c1) IS TRUE) ELSE ((rt0.c1) ISNULL) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))OR(NULL)))AND(rt0.c2)) THEN ((rt0.c1) IS TRUE) ELSE ((rt0.c1) ISNULL) END);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE NOCASE) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE NOCASE) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE NOCASE) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1)IS(rt0.c1)) THEN (((rt0.c3))<=((rt0.c3))) WHEN rt0.c4 THEN (rt0.c2 IN ()) WHEN rt0.c1 THEN x'' ELSE rt0.c2 COLLATE RTRIM END) ORDER BY (((NOT (rt0.c4))) IS FALSE)  NULLS FIRST, CASE WHEN ((('658926758'))<((rt0.c1))) THEN ((((rt0.c0)OR('2060009332')))AND('盵i]cVR~ಝ2')) WHEN (+ (rt0.c4)) THEN ((rt0.c2)<(rt0.c4)) WHEN rt0.c1 THEN (- (rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)IS(rt0.c1)) THEN (((rt0.c3))<=((rt0.c3))) WHEN rt0.c4 THEN (rt0.c2 IN ()) WHEN rt0.c1 THEN x'' ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c4))) IS FALSE)  NULLS FIRST, CASE WHEN ((('658926758'))<((rt0.c1))) THEN ((((rt0.c0)OR('2060009332')))AND('盵i]cVR~ಝ2')) WHEN (+ (rt0.c4)) THEN ((rt0.c2)<(rt0.c4)) WHEN rt0.c1 THEN (- (rt0.c2)) END DESC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1)IS(rt0.c1)) THEN (((rt0.c3))<=((rt0.c3))) WHEN rt0.c4 THEN (rt0.c2 IN ()) WHEN rt0.c1 THEN x'' ELSE rt0.c2 COLLATE RTRIM END) ORDER BY (((NOT (rt0.c4))) IS FALSE)  NULLS FIRST, CASE WHEN ((('658926758'))<((rt0.c1))) THEN ((((rt0.c0)OR('2060009332')))AND('盵i]cVR~ಝ2')) WHEN (+ (rt0.c4)) THEN ((rt0.c2)<(rt0.c4)) WHEN rt0.c1 THEN (- (rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)IS(rt0.c1)) THEN (((rt0.c3))<=((rt0.c3))) WHEN rt0.c4 THEN (rt0.c2 IN ()) WHEN rt0.c1 THEN x'' ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c4))) IS FALSE)  NULLS FIRST, CASE WHEN ((('658926758'))<((rt0.c1))) THEN ((((rt0.c0)OR('2060009332')))AND('盵i]cVR~ಝ2')) WHEN (+ (rt0.c4)) THEN ((rt0.c2)<(rt0.c4)) WHEN rt0.c1 THEN (- (rt0.c2)) END DESC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1)IS(rt0.c1)) THEN (((rt0.c3))<=((rt0.c3))) WHEN rt0.c4 THEN (rt0.c2 IN ()) WHEN rt0.c1 THEN x'' ELSE rt0.c2 COLLATE RTRIM END) ORDER BY (((NOT (rt0.c4))) IS FALSE)  NULLS FIRST, CASE WHEN ((('658926758'))<((rt0.c1))) THEN ((((rt0.c0)OR('2060009332')))AND('盵i]cVR~ಝ2')) WHEN (+ (rt0.c4)) THEN ((rt0.c2)<(rt0.c4)) WHEN rt0.c1 THEN (- (rt0.c2)) END DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0)OR(rt0.c3)))OR('-859064078'))) NOT BETWEEN ((vt0.c0 IN ())) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(rt0.c3)))OR('-859064078'))) NOT BETWEEN ((vt0.c0 IN ())) AND (rt0.c3))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0)OR(rt0.c3)))OR('-859064078'))) NOT BETWEEN ((vt0.c0 IN ())) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(rt0.c3)))OR('-859064078'))) NOT BETWEEN ((vt0.c0 IN ())) AND (rt0.c3))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0)OR(rt0.c3)))OR('-859064078'))) NOT BETWEEN ((vt0.c0 IN ())) AND (rt0.c3)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)*(x''))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)*(x''))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)*(x''))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)*(x''))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)*(x''))) ISNULL));
SELECT ALL * FROM v0, vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((((((((0.37732948831252966)AND(rt0.c3)))AND(rt0.c0)))OR(vt0.c0)))OR(1.40429184E9))) AND (v0.c2))) ORDER BY ((((rt0.c2)AND(rt0.c0)))AND((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((((((((0.37732948831252966)AND(rt0.c3)))AND(rt0.c0)))OR(vt0.c0)))OR(1.40429184E9))) AND (v0.c2))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c2)AND(rt0.c0)))AND((rt0.c2 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((((((((0.37732948831252966)AND(rt0.c3)))AND(rt0.c0)))OR(vt0.c0)))OR(1.40429184E9))) AND (v0.c2))) ORDER BY ((((rt0.c2)AND(rt0.c0)))AND((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((((((((0.37732948831252966)AND(rt0.c3)))AND(rt0.c0)))OR(vt0.c0)))OR(1.40429184E9))) AND (v0.c2))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c2)AND(rt0.c0)))AND((rt0.c2 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CAST((rt0.c0 IN ()) AS BLOB)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CAST((rt0.c0 IN ()) AS BLOB)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CAST((rt0.c0 IN ()) AS BLOB)) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM)<<(((rt0.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE RTRIM)<<(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM)<<(((rt0.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE RTRIM)<<(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM)<<(((rt0.c3) NOTNULL))));
SELECT * FROM v0 WHERE ((((('?d[''皃H6')*(v0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((('?d[''皃H6')*(v0.c2))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((('?d[''皃H6')*(v0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((('?d[''皃H6')*(v0.c2))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((('?d[''皃H6')*(v0.c2))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ('2060009332') ORDER BY 0.20841890522715767;
SELECT SUM(count) FROM (SELECT (('2060009332') IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY 0.20841890522715767);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ('2060009332') ORDER BY 0.20841890522715767;
SELECT SUM(count) FROM (SELECT (('2060009332') IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY 0.20841890522715767);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ('2060009332') ORDER BY 0.20841890522715767;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (2069889461);
SELECT SUM(count) FROM (SELECT ALL ((2069889461) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (2069889461);
SELECT SUM(count) FROM (SELECT ALL ((2069889461) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (2069889461);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE ((rt0.c0) BETWEEN (v0.c0) AND ('-137397867'))  WHEN ((rt0.c0)<(v0.c0)) THEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (v0.c1)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN ((vt0.c0)OR(0.6692261082768567)) WHEN CAST(rt0.c4 AS TEXT) THEN NULL ELSE ((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)) END) ORDER BY ((((('1015912777', v0.c0, rt0.c2))<((v0.c2, v0.c1, -609906720))))||(v0.c0)) DESC, TYPEOF((v0.c1 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) BETWEEN (v0.c0) AND ('-137397867'))  WHEN ((rt0.c0)<(v0.c0)) THEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (v0.c1)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN ((vt0.c0)OR(0.6692261082768567)) WHEN CAST(rt0.c4 AS TEXT) THEN NULL ELSE ((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((('1015912777', v0.c0, rt0.c2))<((v0.c2, v0.c1, -609906720))))||(v0.c0)) DESC, TYPEOF((v0.c1 IN ()))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE ((rt0.c0) BETWEEN (v0.c0) AND ('-137397867'))  WHEN ((rt0.c0)<(v0.c0)) THEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (v0.c1)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN ((vt0.c0)OR(0.6692261082768567)) WHEN CAST(rt0.c4 AS TEXT) THEN NULL ELSE ((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)) END) ORDER BY ((((('1015912777', v0.c0, rt0.c2))<((v0.c2, v0.c1, -609906720))))||(v0.c0)) DESC, TYPEOF((v0.c1 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) BETWEEN (v0.c0) AND ('-137397867'))  WHEN ((rt0.c0)<(v0.c0)) THEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (v0.c1)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN ((vt0.c0)OR(0.6692261082768567)) WHEN CAST(rt0.c4 AS TEXT) THEN NULL ELSE ((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((('1015912777', v0.c0, rt0.c2))<((v0.c2, v0.c1, -609906720))))||(v0.c0)) DESC, TYPEOF((v0.c1 IN ()))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE ((rt0.c0) BETWEEN (v0.c0) AND ('-137397867'))  WHEN ((rt0.c0)<(v0.c0)) THEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (v0.c1)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN ((vt0.c0)OR(0.6692261082768567)) WHEN CAST(rt0.c4 AS TEXT) THEN NULL ELSE ((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)) END) ORDER BY ((((('1015912777', v0.c0, rt0.c2))<((v0.c2, v0.c1, -609906720))))||(v0.c0)) DESC, TYPEOF((v0.c1 IN ()))  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((NULL)<<(vt0.c0)) AS INTEGER)) ORDER BY 0.8921611548008581;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)<<(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY 0.8921611548008581);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((NULL)<<(vt0.c0)) AS INTEGER)) ORDER BY 0.8921611548008581;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)<<(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY 0.8921611548008581);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((NULL)<<(vt0.c0)) AS INTEGER)) ORDER BY 0.8921611548008581;
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN rt0 ON (((rt0.c4 IN ())) IS FALSE) WHERE (NULL) ORDER BY ((json_insert(v0.c1, rt0.c0, rt0.c0, rt0.c4, vt0.c0))==(((((rt0.c4)OR(v0.c2)))AND(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt0 ON (((rt0.c4 IN ())) IS FALSE) ORDER BY ((json_insert(v0.c1, rt0.c0, rt0.c0, rt0.c4, vt0.c0))=(((((rt0.c4)OR(v0.c2)))AND(rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN rt0 ON (((rt0.c4 IN ())) IS FALSE) WHERE (NULL) ORDER BY ((json_insert(v0.c1, rt0.c0, rt0.c0, rt0.c4, vt0.c0))==(((((rt0.c4)OR(v0.c2)))AND(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt0 ON (((rt0.c4 IN ())) IS FALSE) ORDER BY ((json_insert(v0.c1, rt0.c0, rt0.c0, rt0.c4, vt0.c0))=(((((rt0.c4)OR(v0.c2)))AND(rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((((v0.c2)<<(v0.c0)))AND(((v0.c2)<<(v0.c2)))))AND(((v0.c1)GLOB(v0.c0)))))OR(((v0.c0)>=(v0.c0)))))OR(CAST(v0.c0 AS BLOB))))AND((~ (v0.c1)))))AND(((v0.c2) IS TRUE)))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN 0.9616919672574571 THEN v0.c1 END) ISNULL) DESC  NULLS FIRST, ((((v0.c2 COLLATE BINARY)OR(((NULL)/('3_*~Bi\r')))))AND(LTRIM(v0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c2)<<(v0.c0)))AND(((v0.c2)<<(v0.c2)))))AND(((v0.c1)GLOB(v0.c0)))))OR(((v0.c0)>=(v0.c0)))))OR(CAST(v0.c0 AS BLOB))))AND((~ (v0.c1)))))AND(((v0.c2) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN 0.9616919672574571 THEN v0.c1 END) ISNULL) DESC  NULLS FIRST, ((((v0.c2 COLLATE BINARY)OR(((NULL)/('3_*~Bi\r')))))AND(LTRIM(v0.c1))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((((v0.c2)<<(v0.c0)))AND(((v0.c2)<<(v0.c2)))))AND(((v0.c1)GLOB(v0.c0)))))OR(((v0.c0)>=(v0.c0)))))OR(CAST(v0.c0 AS BLOB))))AND((~ (v0.c1)))))AND(((v0.c2) IS TRUE)))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN 0.9616919672574571 THEN v0.c1 END) ISNULL) DESC  NULLS FIRST, ((((v0.c2 COLLATE BINARY)OR(((NULL)/('3_*~Bi\r')))))AND(LTRIM(v0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c2)<<(v0.c0)))AND(((v0.c2)<<(v0.c2)))))AND(((v0.c1)GLOB(v0.c0)))))OR(((v0.c0)>=(v0.c0)))))OR(CAST(v0.c0 AS BLOB))))AND((~ (v0.c1)))))AND(((v0.c2) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN 0.9616919672574571 THEN v0.c1 END) ISNULL) DESC  NULLS FIRST, ((((v0.c2 COLLATE BINARY)OR(((NULL)/('3_*~Bi\r')))))AND(LTRIM(v0.c1))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((((v0.c2)<<(v0.c0)))AND(((v0.c2)<<(v0.c2)))))AND(((v0.c1)GLOB(v0.c0)))))OR(((v0.c0)>=(v0.c0)))))OR(CAST(v0.c0 AS BLOB))))AND((~ (v0.c1)))))AND(((v0.c2) IS TRUE)))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN 0.9616919672574571 THEN v0.c1 END) ISNULL) DESC  NULLS FIRST, ((((v0.c2 COLLATE BINARY)OR(((NULL)/('3_*~Bi\r')))))AND(LTRIM(v0.c1)));
SELECT ALL COUNT(*) FROM v0 WHERE (242240729 COLLATE RTRIM) ORDER BY v0.c1 ASC  NULLS FIRST, ((v0.c1 COLLATE BINARY) IS TRUE), '1852462209' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((242240729 COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY v0.c1 ASC  NULLS FIRST, ((v0.c1 COLLATE BINARY) IS TRUE), '1852462209' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (242240729 COLLATE RTRIM) ORDER BY v0.c1 ASC  NULLS FIRST, ((v0.c1 COLLATE BINARY) IS TRUE), '1852462209' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((242240729 COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY v0.c1 ASC  NULLS FIRST, ((v0.c1 COLLATE BINARY) IS TRUE), '1852462209' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (242240729 COLLATE RTRIM) ORDER BY v0.c1 ASC  NULLS FIRST, ((v0.c1 COLLATE BINARY) IS TRUE), '1852462209' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0 IN ()))AND(((rt0.c0)>=(rt0.c4)))))AND(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))) WHERE (CASE (rt0.c2 IN ())  WHEN NULL THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)) ELSE CAST(rt0.c2 AS INTEGER) END) ORDER BY (((rt0.c3) NOT NULL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c2 IN ())  WHEN NULL THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)) ELSE CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0 IN ()))AND(((rt0.c0)>=(rt0.c4)))))AND(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))) ORDER BY (((rt0.c3) NOT NULL) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0 IN ()))AND(((rt0.c0)>=(rt0.c4)))))AND(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))) WHERE (CASE (rt0.c2 IN ())  WHEN NULL THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)) ELSE CAST(rt0.c2 AS INTEGER) END) ORDER BY (((rt0.c3) NOT NULL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c2 IN ())  WHEN NULL THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)) ELSE CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0 IN ()))AND(((rt0.c0)>=(rt0.c4)))))AND(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))) ORDER BY (((rt0.c3) NOT NULL) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0 IN ()))AND(((rt0.c0)>=(rt0.c4)))))AND(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))) WHERE (CASE (rt0.c2 IN ())  WHEN NULL THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)) ELSE CAST(rt0.c2 AS INTEGER) END) ORDER BY (((rt0.c3) NOT NULL) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c4)))) AND ((LIKELIHOOD(DISTINCT rt0.c3, 0.35077954360934627)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c4)))) AND ((LIKELIHOOD(DISTINCT rt0.c3, 0.35077954360934627))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c4)))) AND ((LIKELIHOOD(DISTINCT rt0.c3, 0.35077954360934627)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c4)))) AND ((LIKELIHOOD(DISTINCT rt0.c3, 0.35077954360934627))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c4)))) AND ((LIKELIHOOD(DISTINCT rt0.c3, 0.35077954360934627)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS NUMERIC));
SELECT * FROM v0, vt0 WHERE (((((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))LIKE(((v0.c2) BETWEEN (v0.c1) AND (v0.c1))))) ORDER BY json_extract(((vt0.c0)/(vt0.c0)), vt0.c0) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))LIKE(((v0.c2) BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY json_extract(((vt0.c0)/(vt0.c0)), vt0.c0) ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))LIKE(((v0.c2) BETWEEN (v0.c1) AND (v0.c1))))) ORDER BY json_extract(((vt0.c0)/(vt0.c0)), vt0.c0) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))LIKE(((v0.c2) BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY json_extract(((vt0.c0)/(vt0.c0)), vt0.c0) ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))LIKE(((v0.c2) BETWEEN (v0.c1) AND (v0.c1))))) ORDER BY json_extract(((vt0.c0)/(vt0.c0)), vt0.c0) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 CROSS JOIN v0 ON (NOT ((((rt0.c0))<((rt0.c0))))) WHERE (((((vt0.c0 IN (rt0.c1))))<((((rt0.c0)IS NOT(vt0.c0)))))) ORDER BY ((vt0.c0)||(rt0.c4)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN (rt0.c1))))<((((rt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON (NOT ((((rt0.c0))<((rt0.c0))))) ORDER BY ((vt0.c0)||(rt0.c4)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0, rt0 CROSS JOIN v0 ON (NOT ((((rt0.c0))<((rt0.c0))))) WHERE (((((vt0.c0 IN (rt0.c1))))<((((rt0.c0)IS NOT(vt0.c0)))))) ORDER BY ((vt0.c0)||(rt0.c4)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN (rt0.c1))))<((((rt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON (NOT ((((rt0.c0))<((rt0.c0))))) ORDER BY ((vt0.c0)||(rt0.c4)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0, rt0 CROSS JOIN v0 ON (NOT ((((rt0.c0))<((rt0.c0))))) WHERE (((((vt0.c0 IN (rt0.c1))))<((((rt0.c0)IS NOT(vt0.c0)))))) ORDER BY ((vt0.c0)||(rt0.c4)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1 IN ()), ((((rt0.c1)AND(0.09996095890152601)))AND(v0.c2)), (rt0.c4 IN ())))==((CASE WHEN v0.c2 THEN rt0.c3 END, rt0.c2, v0.c2))) WHERE ((-1144810584 IN ()) COLLATE NOCASE) ORDER BY (NOT (CAST(rt0.c1 AS TEXT))), ((CASE WHEN rt0.c4 THEN rt0.c1 END)%(CAST(rt0.c4 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((-1144810584 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1 IN ()), ((((rt0.c1)AND(0.09996095890152601)))AND(v0.c2)), (rt0.c4 IN ())))=((CASE WHEN v0.c2 THEN rt0.c3 END, rt0.c2, v0.c2))) ORDER BY (NOT (CAST(rt0.c1 AS TEXT))), ((CASE WHEN rt0.c4 THEN rt0.c1 END)%(CAST(rt0.c4 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1 IN ()), ((((rt0.c1)AND(0.09996095890152601)))AND(v0.c2)), (rt0.c4 IN ())))==((CASE WHEN v0.c2 THEN rt0.c3 END, rt0.c2, v0.c2))) WHERE ((-1144810584 IN ()) COLLATE NOCASE) ORDER BY (NOT (CAST(rt0.c1 AS TEXT))), ((CASE WHEN rt0.c4 THEN rt0.c1 END)%(CAST(rt0.c4 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((-1144810584 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1 IN ()), ((((rt0.c1)AND(0.09996095890152601)))AND(v0.c2)), (rt0.c4 IN ())))=((CASE WHEN v0.c2 THEN rt0.c3 END, rt0.c2, v0.c2))) ORDER BY (NOT (CAST(rt0.c1 AS TEXT))), ((CASE WHEN rt0.c4 THEN rt0.c1 END)%(CAST(rt0.c4 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1 IN ()), ((((rt0.c1)AND(0.09996095890152601)))AND(v0.c2)), (rt0.c4 IN ())))==((CASE WHEN v0.c2 THEN rt0.c3 END, rt0.c2, v0.c2))) WHERE ((-1144810584 IN ()) COLLATE NOCASE) ORDER BY (NOT (CAST(rt0.c1 AS TEXT))), ((CASE WHEN rt0.c4 THEN rt0.c1 END)%(CAST(rt0.c4 AS TEXT)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)OR(v0.c1))) BETWEEN (((vt0.c0)IS(v0.c1))) AND ((((vt0.c0)) BETWEEN ((v0.c1)) AND ((vt0.c0))))) WHERE (v0.c2) ORDER BY (((((NOT (v0.c0)))AND(((NULL) IS FALSE))))AND((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)OR(v0.c1))) BETWEEN (((vt0.c0)IS(v0.c1))) AND ((((vt0.c0)) BETWEEN ((v0.c1)) AND ((vt0.c0))))) ORDER BY (((((NOT (v0.c0)))AND(((NULL) IS FALSE))))AND((v0.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)OR(v0.c1))) BETWEEN (((vt0.c0)IS(v0.c1))) AND ((((vt0.c0)) BETWEEN ((v0.c1)) AND ((vt0.c0))))) WHERE (v0.c2) ORDER BY (((((NOT (v0.c0)))AND(((NULL) IS FALSE))))AND((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)OR(v0.c1))) BETWEEN (((vt0.c0)IS(v0.c1))) AND ((((vt0.c0)) BETWEEN ((v0.c1)) AND ((vt0.c0))))) ORDER BY (((((NOT (v0.c0)))AND(((NULL) IS FALSE))))AND((v0.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE (vt0.c0) ORDER BY ((v0.c1)%(rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((v0.c1)%(rt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE (vt0.c0) ORDER BY ((v0.c1)%(rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((v0.c1)%(rt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE (vt0.c0) ORDER BY ((v0.c1)%(rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((((x'')&(rt0.c1)))OR(0xfffffffff7cf7995)))AND(((vt0.c0) ISNULL)))) ORDER BY (- ((rt0.c4 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')&(rt0.c1)))OR(0Xfffffffff7cf7995)))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (- ((rt0.c4 IN ()))) DESC);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((((x'')&(rt0.c1)))OR(0xfffffffff7cf7995)))AND(((vt0.c0) ISNULL)))) ORDER BY (- ((rt0.c4 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')&(rt0.c1)))OR(0Xfffffffff7cf7995)))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (- ((rt0.c4 IN ()))) DESC);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((((x'')&(rt0.c1)))OR(0xfffffffff7cf7995)))AND(((vt0.c0) ISNULL)))) ORDER BY (- ((rt0.c4 IN ()))) DESC;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((+ ((~ (rt0.c2))))) ORDER BY ((((((v0.c1)=(rt0.c2)))OR(((vt0.c0) NOTNULL))))AND(rt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt0.c2))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, rt0 ORDER BY ((((((v0.c1)==(rt0.c2)))OR(((vt0.c0) NOTNULL))))AND(rt0.c2)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((+ ((~ (rt0.c2))))) ORDER BY ((((((v0.c1)=(rt0.c2)))OR(((vt0.c0) NOTNULL))))AND(rt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt0.c2))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, rt0 ORDER BY ((((((v0.c1)==(rt0.c2)))OR(((vt0.c0) NOTNULL))))AND(rt0.c2)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((+ ((~ (rt0.c2))))) ORDER BY ((((((v0.c1)=(rt0.c2)))OR(((vt0.c0) NOTNULL))))AND(rt0.c2)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((0.9088277752811298)))  WHEN rt0.c4 COLLATE BINARY THEN (((rt0.c3))>((rt0.c3))) END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((0.9088277752811298)))  WHEN rt0.c4 COLLATE BINARY THEN (((rt0.c3))>((rt0.c3))) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((0.9088277752811298)))  WHEN rt0.c4 COLLATE BINARY THEN (((rt0.c3))>((rt0.c3))) END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((0.9088277752811298)))  WHEN rt0.c4 COLLATE BINARY THEN (((rt0.c3))>((rt0.c3))) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((0.9088277752811298)))  WHEN rt0.c4 COLLATE BINARY THEN (((rt0.c3))>((rt0.c3))) END);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c2 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((+ ('#-.GC~B_')))>>((NOT (rt0.c3))))) ORDER BY ((((((((((x'')*(v0.c1)))OR(((vt0.c0) ISNULL))))OR(LTRIM(rt0.c4))))OR(QUOTE(vt0.c0))))OR(CASE rt0.c3  WHEN rt0.c3 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT (((((+ ('#-.GC~B_')))>>((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((((((x'')*(v0.c1)))OR(((vt0.c0) ISNULL))))OR(LTRIM(rt0.c4))))OR(QUOTE(vt0.c0))))OR(CASE rt0.c3  WHEN rt0.c3 THEN v0.c0 END)));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((+ ('#-.GC~B_')))>>((NOT (rt0.c3))))) ORDER BY ((((((((((x'')*(v0.c1)))OR(((vt0.c0) ISNULL))))OR(LTRIM(rt0.c4))))OR(QUOTE(vt0.c0))))OR(CASE rt0.c3  WHEN rt0.c3 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT (((((+ ('#-.GC~B_')))>>((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((((((x'')*(v0.c1)))OR(((vt0.c0) ISNULL))))OR(LTRIM(rt0.c4))))OR(QUOTE(vt0.c0))))OR(CASE rt0.c3  WHEN rt0.c3 THEN v0.c0 END)));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((+ ('#-.GC~B_')))>>((NOT (rt0.c3))))) ORDER BY ((((((((((x'')*(v0.c1)))OR(((vt0.c0) ISNULL))))OR(LTRIM(rt0.c4))))OR(QUOTE(vt0.c0))))OR(CASE rt0.c3  WHEN rt0.c3 THEN v0.c0 END));
SELECT * FROM v0 WHERE (CASE ((((v0.c0)OR(1.707696493E9)))AND(v0.c2))  WHEN (((v0.c0))>((v0.c0))) THEN ((v0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)OR(1.707696493E9)))AND(v0.c2))  WHEN (((v0.c0))>((v0.c0))) THEN ((v0.c0) ISNULL) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((((v0.c0)OR(1.707696493E9)))AND(v0.c2))  WHEN (((v0.c0))>((v0.c0))) THEN ((v0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)OR(1.707696493E9)))AND(v0.c2))  WHEN (((v0.c0))>((v0.c0))) THEN ((v0.c0) ISNULL) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((((v0.c0)OR(1.707696493E9)))AND(v0.c2))  WHEN (((v0.c0))>((v0.c0))) THEN ((v0.c0) ISNULL) END);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((rt0.c3) IS TRUE))GLOB(CASE WHEN vt0.c0 THEN rt0.c3 ELSE NULL END)) WHERE ((((rt0.c2 IN (vt0.c0, vt0.c0)))GLOB(((rt0.c3) ISNULL)))) ORDER BY ((rt0.c2)&(CAST(rt0.c2 AS BLOB))) ASC  NULLS LAST, (~ ((((rt0.c1))<((x''))))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (vt0.c0, vt0.c0)))GLOB(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c3) IS TRUE))GLOB(CASE WHEN vt0.c0 THEN rt0.c3 ELSE NULL END)) ORDER BY ((rt0.c2)&(CAST(rt0.c2 AS BLOB))) ASC  NULLS LAST, (~ ((((rt0.c1))<((x''))))) DESC);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((rt0.c3) IS TRUE))GLOB(CASE WHEN vt0.c0 THEN rt0.c3 ELSE NULL END)) WHERE ((((rt0.c2 IN (vt0.c0, vt0.c0)))GLOB(((rt0.c3) ISNULL)))) ORDER BY ((rt0.c2)&(CAST(rt0.c2 AS BLOB))) ASC  NULLS LAST, (~ ((((rt0.c1))<((x''))))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (vt0.c0, vt0.c0)))GLOB(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c3) IS TRUE))GLOB(CASE WHEN vt0.c0 THEN rt0.c3 ELSE NULL END)) ORDER BY ((rt0.c2)&(CAST(rt0.c2 AS BLOB))) ASC  NULLS LAST, (~ ((((rt0.c1))<((x''))))) DESC);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((rt0.c3) IS TRUE))GLOB(CASE WHEN vt0.c0 THEN rt0.c3 ELSE NULL END)) WHERE ((((rt0.c2 IN (vt0.c0, vt0.c0)))GLOB(((rt0.c3) ISNULL)))) ORDER BY ((rt0.c2)&(CAST(rt0.c2 AS BLOB))) ASC  NULLS LAST, (~ ((((rt0.c1))<((x''))))) DESC;
SELECT * FROM rt0, vt0 WHERE ('3_*~bi\r') ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('3_*~bi\r') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ('3_*~bi\r') ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('3_*~bi\r') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ('3_*~bi\r') ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((v0.c2)) BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c1 END)) AND ((LIKE(rt0.c1, v0.c1, '0')))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c1 END)) AND ((LIKE(rt0.c1, v0.c1, '0'))))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 NOT INDEXED, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((v0.c2)) BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c1 END)) AND ((LIKE(rt0.c1, v0.c1, '0')))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c1 END)) AND ((LIKE(rt0.c1, v0.c1, '0'))))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 NOT INDEXED, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((v0.c2)) BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c1 END)) AND ((LIKE(rt0.c1, v0.c1, '0')))));
SELECT COUNT(*) FROM rt0 WHERE (json_object(CASE WHEN rt0.c4 THEN rt0.c3 END, CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END)) ORDER BY ((((((((((rt0.c3)<(rt0.c3)))OR(rt0.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)))OR(IFNULL(rt0.c4, rt0.c2))))AND(((rt0.c3)<(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_object(CASE WHEN rt0.c4 THEN rt0.c3 END, CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c3)<(rt0.c3)))OR(rt0.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)))OR(IFNULL(rt0.c4, rt0.c2))))AND(((rt0.c3)<(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (json_object(CASE WHEN rt0.c4 THEN rt0.c3 END, CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END)) ORDER BY ((((((((((rt0.c3)<(rt0.c3)))OR(rt0.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)))OR(IFNULL(rt0.c4, rt0.c2))))AND(((rt0.c3)<(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_object(CASE WHEN rt0.c4 THEN rt0.c3 END, CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c3)<(rt0.c3)))OR(rt0.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)))OR(IFNULL(rt0.c4, rt0.c2))))AND(((rt0.c3)<(rt0.c1)))));
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c4 COLLATE NOCASE)<=(rt0.c0 COLLATE RTRIM))) ORDER BY CAST(((((v0.c1)OR(rt0.c0)))OR(rt0.c0)) AS TEXT) DESC  NULLS LAST, 1029219614 ASC, CASE WHEN '' COLLATE RTRIM THEN (((v0.c0, v0.c1, rt0.c1)) BETWEEN ((v0.c0, v0.c2, rt0.c1)) AND ((rt0.c4, v0.c2, v0.c0))) ELSE (- (v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c4 COLLATE NOCASE)<=(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((((v0.c1)OR(rt0.c0)))OR(rt0.c0)) AS TEXT) DESC  NULLS LAST, 1029219614 ASC, CASE WHEN '' COLLATE RTRIM THEN (((v0.c0, v0.c1, rt0.c1)) BETWEEN ((v0.c0, v0.c2, rt0.c1)) AND ((rt0.c4, v0.c2, v0.c0))) ELSE (- (v0.c0)) END DESC);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c4 COLLATE NOCASE)<=(rt0.c0 COLLATE RTRIM))) ORDER BY CAST(((((v0.c1)OR(rt0.c0)))OR(rt0.c0)) AS TEXT) DESC  NULLS LAST, 1029219614 ASC, CASE WHEN '' COLLATE RTRIM THEN (((v0.c0, v0.c1, rt0.c1)) BETWEEN ((v0.c0, v0.c2, rt0.c1)) AND ((rt0.c4, v0.c2, v0.c0))) ELSE (- (v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c4 COLLATE NOCASE)<=(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((((v0.c1)OR(rt0.c0)))OR(rt0.c0)) AS TEXT) DESC  NULLS LAST, 1029219614 ASC, CASE WHEN '' COLLATE RTRIM THEN (((v0.c0, v0.c1, rt0.c1)) BETWEEN ((v0.c0, v0.c2, rt0.c1)) AND ((rt0.c4, v0.c2, v0.c0))) ELSE (- (v0.c0)) END DESC);
SELECT ALL * FROM vt0, rt0 WHERE (-931851274) ORDER BY ((+ (rt0.c0)) IN (rt0.c4));
SELECT SUM(count) FROM (SELECT ALL ((-931851274) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((+ (rt0.c0)) IN (rt0.c4)));
SELECT ALL * FROM vt0, rt0 WHERE (-931851274) ORDER BY ((+ (rt0.c0)) IN (rt0.c4));
SELECT SUM(count) FROM (SELECT ALL ((-931851274) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((+ (rt0.c0)) IN (rt0.c4)));
SELECT ALL * FROM vt0, rt0 WHERE (-931851274) ORDER BY ((+ (rt0.c0)) IN (rt0.c4));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CAST((rt0.c1 IN ()) AS BLOB) WHERE ((((((((((rt0.c3 IN ()))OR(((rt0.c0) NOTNULL))))OR(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(0.19654871709131339)))))AND(((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)))))OR(((rt0.c1) NOT NULL)))) ORDER BY (rt0.c1 IN ((~ (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c3 IN ()))OR(((rt0.c0) NOTNULL))))OR(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(0.19654871709131339)))))AND(((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)))))OR(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST((rt0.c1 IN ()) AS BLOB) ORDER BY (rt0.c1 IN ((~ (rt0.c2)))) ASC);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CAST((rt0.c1 IN ()) AS BLOB) WHERE ((((((((((rt0.c3 IN ()))OR(((rt0.c0) NOTNULL))))OR(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(0.19654871709131339)))))AND(((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)))))OR(((rt0.c1) NOT NULL)))) ORDER BY (rt0.c1 IN ((~ (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c3 IN ()))OR(((rt0.c0) NOTNULL))))OR(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(0.19654871709131339)))))AND(((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)))))OR(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST((rt0.c1 IN ()) AS BLOB) ORDER BY (rt0.c1 IN ((~ (rt0.c2)))) ASC);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CAST((rt0.c1 IN ()) AS BLOB) WHERE ((((((((((rt0.c3 IN ()))OR(((rt0.c0) NOTNULL))))OR(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(0.19654871709131339)))))AND(((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)))))OR(((rt0.c1) NOT NULL)))) ORDER BY (rt0.c1 IN ((~ (rt0.c2)))) ASC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c3)AND(rt0.c2)))OR(v0.c2))) BETWEEN (((rt0.c4) NOT BETWEEN (v0.c2) AND (rt0.c2))) AND (rt0.c3)) WHERE (((UNLIKELY(v0.c1)) BETWEEN ((- (rt0.c2))) AND (0.8585923732431903)));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(v0.c1)) BETWEEN ((- (rt0.c2))) AND (0.8585923732431903))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c3)AND(rt0.c2)))OR(v0.c2))) BETWEEN (((rt0.c4) NOT BETWEEN (v0.c2) AND (rt0.c2))) AND (rt0.c3)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c3)AND(rt0.c2)))OR(v0.c2))) BETWEEN (((rt0.c4) NOT BETWEEN (v0.c2) AND (rt0.c2))) AND (rt0.c3)) WHERE (((UNLIKELY(v0.c1)) BETWEEN ((- (rt0.c2))) AND (0.8585923732431903)));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(v0.c1)) BETWEEN ((- (rt0.c2))) AND (0.8585923732431903))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c3)AND(rt0.c2)))OR(v0.c2))) BETWEEN (((rt0.c4) NOT BETWEEN (v0.c2) AND (rt0.c2))) AND (rt0.c3)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c3)AND(rt0.c2)))OR(v0.c2))) BETWEEN (((rt0.c4) NOT BETWEEN (v0.c2) AND (rt0.c2))) AND (rt0.c3)) WHERE (((UNLIKELY(v0.c1)) BETWEEN ((- (rt0.c2))) AND (0.8585923732431903)));
SELECT ALL * FROM v0 WHERE (CAST(v0.c1 AS BLOB) COLLATE NOCASE) ORDER BY (((NOT (v0.c1)))+((+ (v0.c1)))) ASC  NULLS LAST, CAST(((v0.c2)<=(v0.c0)) AS BLOB) DESC  NULLS LAST, ((((v0.c1)GLOB(v0.c2)))IS NOT(((v0.c2) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c1)))+((+ (v0.c1)))) ASC  NULLS LAST, CAST(((v0.c2)<=(v0.c0)) AS BLOB) DESC  NULLS LAST, ((((v0.c1)GLOB(v0.c2)))IS NOT(((v0.c2) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST(v0.c1 AS BLOB) COLLATE NOCASE) ORDER BY (((NOT (v0.c1)))+((+ (v0.c1)))) ASC  NULLS LAST, CAST(((v0.c2)<=(v0.c0)) AS BLOB) DESC  NULLS LAST, ((((v0.c1)GLOB(v0.c2)))IS NOT(((v0.c2) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c1)))+((+ (v0.c1)))) ASC  NULLS LAST, CAST(((v0.c2)<=(v0.c0)) AS BLOB) DESC  NULLS LAST, ((((v0.c1)GLOB(v0.c2)))IS NOT(((v0.c2) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST(v0.c1 AS BLOB) COLLATE NOCASE) ORDER BY (((NOT (v0.c1)))+((+ (v0.c1)))) ASC  NULLS LAST, CAST(((v0.c2)<=(v0.c0)) AS BLOB) DESC  NULLS LAST, ((((v0.c1)GLOB(v0.c2)))IS NOT(((v0.c2) NOT NULL)))  NULLS LAST;
SELECT * FROM vt0, v0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CASE (x'' IN ())  WHEN rt0.c1 THEN (((rt0.c4))>=((rt0.c2))) WHEN (((rt0.c4, rt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c4, rt0.c2)) AND ((x'', rt0.c2, vt0.c0))) THEN ((vt0.c0)*(vt0.c0)) WHEN ((rt0.c3) ISNULL) THEN ((NULL)GLOB(rt0.c2)) END WHERE (((rt0.c1 IN ()) IN ())) ORDER BY ((rt0.c1) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE (x'' IN ())  WHEN rt0.c1 THEN (((rt0.c4))>=((rt0.c2))) WHEN (((rt0.c4, rt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c4, rt0.c2)) AND ((x'', rt0.c2, vt0.c0))) THEN ((vt0.c0)*(vt0.c0)) WHEN ((rt0.c3) ISNULL) THEN ((NULL)GLOB(rt0.c2)) END ORDER BY ((rt0.c1) IS TRUE) ASC);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CASE (x'' IN ())  WHEN rt0.c1 THEN (((rt0.c4))>=((rt0.c2))) WHEN (((rt0.c4, rt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c4, rt0.c2)) AND ((x'', rt0.c2, vt0.c0))) THEN ((vt0.c0)*(vt0.c0)) WHEN ((rt0.c3) ISNULL) THEN ((NULL)GLOB(rt0.c2)) END WHERE (((rt0.c1 IN ()) IN ())) ORDER BY ((rt0.c1) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE (x'' IN ())  WHEN rt0.c1 THEN (((rt0.c4))>=((rt0.c2))) WHEN (((rt0.c4, rt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c4, rt0.c2)) AND ((x'', rt0.c2, vt0.c0))) THEN ((vt0.c0)*(vt0.c0)) WHEN ((rt0.c3) ISNULL) THEN ((NULL)GLOB(rt0.c2)) END ORDER BY ((rt0.c1) IS TRUE) ASC);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CASE (x'' IN ())  WHEN rt0.c1 THEN (((rt0.c4))>=((rt0.c2))) WHEN (((rt0.c4, rt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c4, rt0.c2)) AND ((x'', rt0.c2, vt0.c0))) THEN ((vt0.c0)*(vt0.c0)) WHEN ((rt0.c3) ISNULL) THEN ((NULL)GLOB(rt0.c2)) END WHERE (((rt0.c1 IN ()) IN ())) ORDER BY ((rt0.c1) IS TRUE) ASC;
SELECT COUNT(*) FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c1);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (v0.c0) ORDER BY ((rt0.c3 COLLATE BINARY) BETWEEN ((v0.c0 IN ())) AND ('816740085'));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((rt0.c3 COLLATE BINARY) BETWEEN ((v0.c0 IN ())) AND ('816740085')));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (v0.c0) ORDER BY ((rt0.c3 COLLATE BINARY) BETWEEN ((v0.c0 IN ())) AND ('816740085'));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((rt0.c3 COLLATE BINARY) BETWEEN ((v0.c0 IN ())) AND ('816740085')));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (v0.c0) ORDER BY ((rt0.c3 COLLATE BINARY) BETWEEN ((v0.c0 IN ())) AND ('816740085'));
SELECT * FROM rt0, v0, vt0 WHERE (TYPEOF(DISTINCT rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (TYPEOF(DISTINCT rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (TYPEOF(DISTINCT rt0.c2 COLLATE BINARY));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON x'' WHERE (((vt0.c0)&(CAST(v0.c1 AS BLOB)))) ORDER BY ((0X4dcbcf78) NOT BETWEEN ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN 0.8068976657991247 WHEN v0.c2 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 ELSE v0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&(CAST(v0.c1 AS BLOB)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON x'' ORDER BY ((0x4dcbcf78) NOT BETWEEN ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN 0.8068976657991247 WHEN v0.c2 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 ELSE v0.c2 END)) ASC);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON x'' WHERE (((vt0.c0)&(CAST(v0.c1 AS BLOB)))) ORDER BY ((0X4dcbcf78) NOT BETWEEN ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN 0.8068976657991247 WHEN v0.c2 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 ELSE v0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&(CAST(v0.c1 AS BLOB)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON x'' ORDER BY ((0x4dcbcf78) NOT BETWEEN ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN 0.8068976657991247 WHEN v0.c2 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 ELSE v0.c2 END)) ASC);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON x'' WHERE (((vt0.c0)&(CAST(v0.c1 AS BLOB)))) ORDER BY ((0X4dcbcf78) NOT BETWEEN ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN 0.8068976657991247 WHEN v0.c2 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 ELSE v0.c2 END)) ASC;
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))GLOB(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))GLOB(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))GLOB(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))GLOB(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))GLOB(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ()));
SELECT ALL * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (x'');
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((v0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 IN ()) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((v0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 IN ()) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((v0.c2 IN ()) IN ()));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((LIKELY(rt0.c2)) IS FALSE)) ORDER BY CAST((- (rt0.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c2)) IS FALSE)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST((- (rt0.c0)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((LIKELY(rt0.c2)) IS FALSE)) ORDER BY CAST((- (rt0.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c2)) IS FALSE)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST((- (rt0.c0)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((LIKELY(rt0.c2)) IS FALSE)) ORDER BY CAST((- (rt0.c0)) AS TEXT) ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c1) ORDER BY ((-5.8009324E7)AND(CASE v0.c0  WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END)) DESC, CAST((- (v0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY ((-5.8009324E7)AND(CASE v0.c0  WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END)) DESC, CAST((- (v0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c1) ORDER BY ((-5.8009324E7)AND(CASE v0.c0  WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END)) DESC, CAST((- (v0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY ((-5.8009324E7)AND(CASE v0.c0  WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END)) DESC, CAST((- (v0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c1) ORDER BY ((-5.8009324E7)AND(CASE v0.c0  WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END)) DESC, CAST((- (v0.c0)) AS TEXT);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND ('')))) AND (((((vt0.c0))>((vt0.c0)))))) DESC  NULLS LAST, (NOT (((((vt0.c0)AND(0.9177651784088736)))AND(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND ('')))) AND (((((vt0.c0))>((vt0.c0)))))) DESC  NULLS LAST, (NOT (((((vt0.c0)AND(0.9177651784088736)))AND(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND ('')))) AND (((((vt0.c0))>((vt0.c0)))))) DESC  NULLS LAST, (NOT (((((vt0.c0)AND(0.9177651784088736)))AND(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND ('')))) AND (((((vt0.c0))>((vt0.c0)))))) DESC  NULLS LAST, (NOT (((((vt0.c0)AND(0.9177651784088736)))AND(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND ('')))) AND (((((vt0.c0))>((vt0.c0)))))) DESC  NULLS LAST, (NOT (((((vt0.c0)AND(0.9177651784088736)))AND(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, v0, vt0 WHERE (IFNULL(rt0.c2 COLLATE RTRIM, v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c2 COLLATE RTRIM, v0.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (IFNULL(rt0.c2 COLLATE RTRIM, v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c2 COLLATE RTRIM, v0.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (IFNULL(rt0.c2 COLLATE RTRIM, v0.c0 COLLATE BINARY));
SELECT * FROM rt0, v0 WHERE ((NOT ((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((v0.c2 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((NOT ((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((v0.c2 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((NOT ((v0.c2 IN ()))));
SELECT COUNT(*) FROM v0 WHERE (((UPPER(v0.c1))*(((v0.c0) BETWEEN (v0.c1) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((UPPER(v0.c1))*(((v0.c0) BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((UPPER(v0.c1))*(((v0.c0) BETWEEN (v0.c1) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((UPPER(v0.c1))*(((v0.c0) BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((UPPER(v0.c1))*(((v0.c0) BETWEEN (v0.c1) AND (v0.c1)))));
SELECT * FROM vt0 WHERE (CAST(('-66956321' IN (vt0.c0)) AS TEXT)) ORDER BY (((((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)*(vt0.c0)))))AND((- (vt0.c0)))))OR((vt0.c0 IN ()))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((((vt0.c0, vt0.c0, '35593161'))>=((vt0.c0, vt0.c0, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(('-66956321' IN (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)*(vt0.c0)))))AND((- (vt0.c0)))))OR((vt0.c0 IN ()))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((((vt0.c0, vt0.c0, '35593161'))>=((vt0.c0, vt0.c0, vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE (CAST(('-66956321' IN (vt0.c0)) AS TEXT)) ORDER BY (((((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)*(vt0.c0)))))AND((- (vt0.c0)))))OR((vt0.c0 IN ()))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((((vt0.c0, vt0.c0, '35593161'))>=((vt0.c0, vt0.c0, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(('-66956321' IN (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)*(vt0.c0)))))AND((- (vt0.c0)))))OR((vt0.c0 IN ()))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((((vt0.c0, vt0.c0, '35593161'))>=((vt0.c0, vt0.c0, vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE (CAST(('-66956321' IN (vt0.c0)) AS TEXT)) ORDER BY (((((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)*(vt0.c0)))))AND((- (vt0.c0)))))OR((vt0.c0 IN ()))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((((vt0.c0, vt0.c0, '35593161'))>=((vt0.c0, vt0.c0, vt0.c0))))) ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE (((json_object(v0.c2, v0.c0, vt0.c0, vt0.c0, 'u蚛', vt0.c0))>=(-187069480))) ORDER BY (((vt0.c0 IN ()))/(CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c2 END)), (~ (CAST(v0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((json_object(v0.c2, v0.c0, vt0.c0, vt0.c0, 'u蚛', vt0.c0))>=(-187069480))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0 IN ()))/(CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c2 END)), (~ (CAST(v0.c1 AS TEXT))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((json_object(v0.c2, v0.c0, vt0.c0, vt0.c0, 'u蚛', vt0.c0))>=(-187069480))) ORDER BY (((vt0.c0 IN ()))/(CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c2 END)), (~ (CAST(v0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((json_object(v0.c2, v0.c0, vt0.c0, vt0.c0, 'u蚛', vt0.c0))>=(-187069480))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0 IN ()))/(CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c2 END)), (~ (CAST(v0.c1 AS TEXT))));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((((rt0.c0)OR(0X793b74d0)))AND(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)OR(0x793b74d0)))AND(v0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((((rt0.c0)OR(0X793b74d0)))AND(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)OR(0x793b74d0)))AND(v0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((((rt0.c0)OR(0X793b74d0)))AND(v0.c1)) IN ()));
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((((rt0.c2) BETWEEN (v0.c0) AND (1924764315)))AND((('ܪu(S') ISNULL))))OR(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) BETWEEN (v0.c0) AND (1924764315)))AND((('ܪu(S') ISNULL))))OR(rt0.c3))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((((rt0.c2) BETWEEN (v0.c0) AND (1924764315)))AND((('ܪu(S') ISNULL))))OR(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) BETWEEN (v0.c0) AND (1924764315)))AND((('ܪu(S') ISNULL))))OR(rt0.c3))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((((rt0.c2) BETWEEN (v0.c0) AND (1924764315)))AND((('ܪu(S') ISNULL))))OR(rt0.c3)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)IS NOT(rt0.c3))) NOT NULL)) ORDER BY ((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS NOT(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)IS NOT(rt0.c3))) NOT NULL)) ORDER BY ((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS NOT(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)IS NOT(rt0.c3))) NOT NULL)) ORDER BY ((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1))) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) IS TRUE)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)!=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)<>(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) IS TRUE)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)!=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)<>(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) IS TRUE)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)!=(vt0.c0)))) DESC;
SELECT * FROM rt0 WHERE ((((NOT (rt0.c0)))||(COALESCE(rt0.c0, rt0.c2)))) ORDER BY ((rt0.c4 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0)))||(COALESCE(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4 IN ()) IN ()) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((NOT (rt0.c0)))||(COALESCE(rt0.c0, rt0.c2)))) ORDER BY ((rt0.c4 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0)))||(COALESCE(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4 IN ()) IN ()) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((NOT (rt0.c0)))||(COALESCE(rt0.c0, rt0.c2)))) ORDER BY ((rt0.c4 IN ()) IN ()) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(((vt0.c0) IS TRUE)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(((vt0.c0) IS TRUE)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(((vt0.c0) IS TRUE)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (('/G_')) AND ((CASE WHEN rt0.c3 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (('/G_')) AND ((CASE WHEN rt0.c3 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (('/G_')) AND ((CASE WHEN rt0.c3 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (('/G_')) AND ((CASE WHEN rt0.c3 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (('/G_')) AND ((CASE WHEN rt0.c3 THEN rt0.c1 END))));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CAST((rt0.c1 IN ()) AS BLOB) WHERE (rt0.c4) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN -20603184 THEN rt0.c3 END)AND(TRIM(vt0.c0))))OR('1489971600')) ASC, ((LIKELY(rt0.c3)) BETWEEN (rt0.c1) AND ((NOT (rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST((rt0.c1 IN ()) AS BLOB) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN -20603184 THEN rt0.c3 END)AND(TRIM(vt0.c0))))OR('1489971600')) ASC, ((LIKELY(rt0.c3)) BETWEEN (rt0.c1) AND ((NOT (rt0.c4))))  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CAST((rt0.c1 IN ()) AS BLOB) WHERE (rt0.c4) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN -20603184 THEN rt0.c3 END)AND(TRIM(vt0.c0))))OR('1489971600')) ASC, ((LIKELY(rt0.c3)) BETWEEN (rt0.c1) AND ((NOT (rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST((rt0.c1 IN ()) AS BLOB) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN -20603184 THEN rt0.c3 END)AND(TRIM(vt0.c0))))OR('1489971600')) ASC, ((LIKELY(rt0.c3)) BETWEEN (rt0.c1) AND ((NOT (rt0.c4))))  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CAST((rt0.c1 IN ()) AS BLOB) WHERE (rt0.c4) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN -20603184 THEN rt0.c3 END)AND(TRIM(vt0.c0))))OR('1489971600')) ASC, ((LIKELY(rt0.c3)) BETWEEN (rt0.c1) AND ((NOT (rt0.c4))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (~ (rt0.c1))  WHEN (rt0.c1 IN (rt0.c2, rt0.c2)) THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt0.c1))  WHEN (rt0.c1 IN (rt0.c2, rt0.c2)) THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (~ (rt0.c1))  WHEN (rt0.c1 IN (rt0.c2, rt0.c2)) THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt0.c1))  WHEN (rt0.c1 IN (rt0.c2, rt0.c2)) THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (~ (rt0.c1))  WHEN (rt0.c1 IN (rt0.c2, rt0.c2)) THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON LOWER(v0.c2 COLLATE NOCASE) WHERE (COALESCE(v0.c2 COLLATE NOCASE, (+ (v0.c0)))) ORDER BY '1647546315'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(v0.c2 COLLATE NOCASE, (+ (v0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON LOWER(v0.c2 COLLATE NOCASE) ORDER BY '1647546315'  NULLS LAST);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON LOWER(v0.c2 COLLATE NOCASE) WHERE (COALESCE(v0.c2 COLLATE NOCASE, (+ (v0.c0)))) ORDER BY '1647546315'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(v0.c2 COLLATE NOCASE, (+ (v0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON LOWER(v0.c2 COLLATE NOCASE) ORDER BY '1647546315'  NULLS LAST);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON LOWER(v0.c2 COLLATE NOCASE) WHERE (COALESCE(v0.c2 COLLATE NOCASE, (+ (v0.c0)))) ORDER BY '1647546315'  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((v0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))AND(rt0.c3)))OR(rt0.c4 COLLATE BINARY)))AND((+ (rt0.c1)))))OR(1.707696493E9)) INNER JOIN rt0 ON NULL WHERE ((+ (v0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (v0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((v0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))AND(rt0.c3)))OR(rt0.c4 COLLATE BINARY)))AND((+ (rt0.c1)))))OR(1.707696493E9)) INNER JOIN rt0 ON NULL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((v0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))AND(rt0.c3)))OR(rt0.c4 COLLATE BINARY)))AND((+ (rt0.c1)))))OR(1.707696493E9)) INNER JOIN rt0 ON NULL WHERE ((+ (v0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (v0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((v0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))AND(rt0.c3)))OR(rt0.c4 COLLATE BINARY)))AND((+ (rt0.c1)))))OR(1.707696493E9)) INNER JOIN rt0 ON NULL);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))-(((0.09591499862360153) BETWEEN (0xffffffffd93d3ac2) AND ('-413380224'))))) ORDER BY (NOT (CAST(v0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))-(((0.09591499862360153) BETWEEN (0xffffffffd93d3ac2) AND ('-413380224'))))) IS TRUE)  as count FROM v0 ORDER BY (NOT (CAST(v0.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))-(((0.09591499862360153) BETWEEN (0xffffffffd93d3ac2) AND ('-413380224'))))) ORDER BY (NOT (CAST(v0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))-(((0.09591499862360153) BETWEEN (0xffffffffd93d3ac2) AND ('-413380224'))))) IS TRUE)  as count FROM v0 ORDER BY (NOT (CAST(v0.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))-(((0.09591499862360153) BETWEEN (0xffffffffd93d3ac2) AND ('-413380224'))))) ORDER BY (NOT (CAST(v0.c0 AS INTEGER)))  NULLS LAST;
SELECT * FROM vt0 WHERE ((NOT (((x'0206') BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((x'0206') BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (((x'0206') BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((x'0206') BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (((x'0206') BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM v0, vt0, rt0 WHERE (((v0.c2 COLLATE NOCASE)=(0X1b35072a)));
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE NOCASE)=(0X1b35072a))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((v0.c2 COLLATE NOCASE)=(0X1b35072a)));
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE NOCASE)=(0X1b35072a))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((v0.c2 COLLATE NOCASE)=(0X1b35072a)));
SELECT * FROM v0, vt0 WHERE (((((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)OR(v0.c0 COLLATE RTRIM)))AND((((v0.c0, NULL, vt0.c0))!=((v0.c1, v0.c0, v0.c1)))))) ORDER BY (((0.5595561084991661)) BETWEEN (((v0.c2 IN ()))) AND (((((('')OR(v0.c2)))AND(v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)OR(v0.c0 COLLATE RTRIM)))AND((((v0.c0, NULL, vt0.c0))<>((v0.c1, v0.c0, v0.c1)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((0.5595561084991661)) BETWEEN (((v0.c2 IN ()))) AND (((((('')OR(v0.c2)))AND(v0.c0)))))  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)OR(v0.c0 COLLATE RTRIM)))AND((((v0.c0, NULL, vt0.c0))!=((v0.c1, v0.c0, v0.c1)))))) ORDER BY (((0.5595561084991661)) BETWEEN (((v0.c2 IN ()))) AND (((((('')OR(v0.c2)))AND(v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)OR(v0.c0 COLLATE RTRIM)))AND((((v0.c0, NULL, vt0.c0))<>((v0.c1, v0.c0, v0.c1)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((0.5595561084991661)) BETWEEN (((v0.c2 IN ()))) AND (((((('')OR(v0.c2)))AND(v0.c0)))))  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)OR(v0.c0 COLLATE RTRIM)))AND((((v0.c0, NULL, vt0.c0))!=((v0.c1, v0.c0, v0.c1)))))) ORDER BY (((0.5595561084991661)) BETWEEN (((v0.c2 IN ()))) AND (((((('')OR(v0.c2)))AND(v0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) BETWEEN ('2ۆ~') AND (NULL))) NOT BETWEEN (((((v0.c2)AND(v0.c1)))AND('-389802111'))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN ('2ۆ~') AND (NULL))) NOT BETWEEN (((((v0.c2)AND(v0.c1)))AND('-389802111'))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) BETWEEN ('2ۆ~') AND (NULL))) NOT BETWEEN (((((v0.c2)AND(v0.c1)))AND('-389802111'))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN ('2ۆ~') AND (NULL))) NOT BETWEEN (((((v0.c2)AND(v0.c1)))AND('-389802111'))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) BETWEEN ('2ۆ~') AND (NULL))) NOT BETWEEN (((((v0.c2)AND(v0.c1)))AND('-389802111'))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((LENGTH(v0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LENGTH(v0.c2) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((LENGTH(v0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LENGTH(v0.c2) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((LENGTH(v0.c2) IN ()));
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (~ ('-701292619')) WHERE (CAST((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((vt0.c0))) AS NUMERIC)) ORDER BY (((NULL)) NOT BETWEEN ((STRFTIME(v0.c2, rt0.c3, v0.c2))) AND ((ABS(DISTINCT rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (~ ('-701292619')) ORDER BY (((NULL)) NOT BETWEEN ((STRFTIME(v0.c2, rt0.c3, v0.c2))) AND ((ABS(DISTINCT rt0.c0))))  NULLS LAST);
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (~ ('-701292619')) WHERE (CAST((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((vt0.c0))) AS NUMERIC)) ORDER BY (((NULL)) NOT BETWEEN ((STRFTIME(v0.c2, rt0.c3, v0.c2))) AND ((ABS(DISTINCT rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (~ ('-701292619')) ORDER BY (((NULL)) NOT BETWEEN ((STRFTIME(v0.c2, rt0.c3, v0.c2))) AND ((ABS(DISTINCT rt0.c0))))  NULLS LAST);
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (~ ('-701292619')) WHERE (CAST((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((vt0.c0))) AS NUMERIC)) ORDER BY (((NULL)) NOT BETWEEN ((STRFTIME(v0.c2, rt0.c3, v0.c2))) AND ((ABS(DISTINCT rt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((TOTAL_CHANGES()) ISNULL)) ORDER BY (((rt0.c1)+(rt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES()) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)+(rt0.c1)) IN ()) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((TOTAL_CHANGES()) ISNULL)) ORDER BY (((rt0.c1)+(rt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES()) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)+(rt0.c1)) IN ()) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((TOTAL_CHANGES()) ISNULL)) ORDER BY (((rt0.c1)+(rt0.c1)) IN ()) ASC;
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c2, v0.c2)) BETWEEN (((NOT (v0.c0)), (((v0.c1))>=((v0.c0))), v0.c0 COLLATE NOCASE)) AND (('bG' COLLATE BINARY, ((v0.c1)>(v0.c0)), ((v0.c2)>(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c2, v0.c2)) BETWEEN (((NOT (v0.c0)), (((v0.c1))>=((v0.c0))), v0.c0 COLLATE NOCASE)) AND (('bG' COLLATE BINARY, ((v0.c1)>(v0.c0)), ((v0.c2)>(v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c2, v0.c2)) BETWEEN (((NOT (v0.c0)), (((v0.c1))>=((v0.c0))), v0.c0 COLLATE NOCASE)) AND (('bG' COLLATE BINARY, ((v0.c1)>(v0.c0)), ((v0.c2)>(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c2, v0.c2)) BETWEEN (((NOT (v0.c0)), (((v0.c1))>=((v0.c0))), v0.c0 COLLATE NOCASE)) AND (('bG' COLLATE BINARY, ((v0.c1)>(v0.c0)), ((v0.c2)>(v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c2, v0.c2)) BETWEEN (((NOT (v0.c0)), (((v0.c1))>=((v0.c0))), v0.c0 COLLATE NOCASE)) AND (('bG' COLLATE BINARY, ((v0.c1)>(v0.c0)), ((v0.c2)>(v0.c1))))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((('')IS(v0.c2)))=(v0.c2))) ORDER BY 0.6844512801935323, CAST((rt0.c0 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((('')IS(v0.c2)))=(v0.c2))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY 0.6844512801935323, CAST((rt0.c0 IN ()) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((('')IS(v0.c2)))=(v0.c2))) ORDER BY 0.6844512801935323, CAST((rt0.c0 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((('')IS(v0.c2)))=(v0.c2))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY 0.6844512801935323, CAST((rt0.c0 IN ()) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((('')IS(v0.c2)))=(v0.c2))) ORDER BY 0.6844512801935323, CAST((rt0.c0 IN ()) AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN ((v0.c2 IN (v0.c2, v0.c2))) AND (((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN ((v0.c2 IN (v0.c2, v0.c2))) AND (((v0.c1) BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN ((v0.c2 IN (v0.c2, v0.c2))) AND (((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN ((v0.c2 IN (v0.c2, v0.c2))) AND (((v0.c1) BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN ((v0.c2 IN (v0.c2, v0.c2))) AND (((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT ALL * FROM rt0 NOT INDEXED, v0 WHERE (0Xffffffffe064ee04);
SELECT SUM(count) FROM (SELECT ((0xffffffffe064ee04) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0 NOT INDEXED, v0 WHERE (0Xffffffffe064ee04);
SELECT SUM(count) FROM (SELECT ((0xffffffffe064ee04) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0 NOT INDEXED, v0 WHERE (0Xffffffffe064ee04);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c1)+(v0.c1))) ISNULL) INNER JOIN rt0 ON (((((x'')) BETWEEN ((rt0.c1)) AND ((v0.c1))))IS NOT(((rt0.c1)<<(rt0.c2)))) WHERE (CASE v0.c2  WHEN (rt0.c4 IN ()) THEN CAST(v0.c1 AS REAL) WHEN (~ (v0.c1)) THEN (NOT (v0.c0)) WHEN (((rt0.c3, rt0.c4, v0.c0, rt0.c2, '%\nLT솈b#'))>=((v0.c0, v0.c1, vt0.c0, 0.20777148058618522, rt0.c2))) THEN ((((((((vt0.c0)AND(v0.c2)))AND(v0.c0)))OR(vt0.c0)))AND(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c2  WHEN (rt0.c4 IN ()) THEN CAST(v0.c1 AS REAL) WHEN (~ (v0.c1)) THEN (NOT (v0.c0)) WHEN (((rt0.c3, rt0.c4, v0.c0, rt0.c2, '%\nLT솈b#'))>=((v0.c0, v0.c1, vt0.c0, 0.20777148058618522, rt0.c2))) THEN ((((((((vt0.c0)AND(v0.c2)))AND(v0.c0)))OR(vt0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c1)+(v0.c1))) ISNULL) INNER JOIN rt0 ON (((((x'')) BETWEEN ((rt0.c1)) AND ((v0.c1))))IS NOT(((rt0.c1)<<(rt0.c2)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c1)+(v0.c1))) ISNULL) INNER JOIN rt0 ON (((((x'')) BETWEEN ((rt0.c1)) AND ((v0.c1))))IS NOT(((rt0.c1)<<(rt0.c2)))) WHERE (CASE v0.c2  WHEN (rt0.c4 IN ()) THEN CAST(v0.c1 AS REAL) WHEN (~ (v0.c1)) THEN (NOT (v0.c0)) WHEN (((rt0.c3, rt0.c4, v0.c0, rt0.c2, '%\nLT솈b#'))>=((v0.c0, v0.c1, vt0.c0, 0.20777148058618522, rt0.c2))) THEN ((((((((vt0.c0)AND(v0.c2)))AND(v0.c0)))OR(vt0.c0)))AND(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c2  WHEN (rt0.c4 IN ()) THEN CAST(v0.c1 AS REAL) WHEN (~ (v0.c1)) THEN (NOT (v0.c0)) WHEN (((rt0.c3, rt0.c4, v0.c0, rt0.c2, '%\nLT솈b#'))>=((v0.c0, v0.c1, vt0.c0, 0.20777148058618522, rt0.c2))) THEN ((((((((vt0.c0)AND(v0.c2)))AND(v0.c0)))OR(vt0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c1)+(v0.c1))) ISNULL) INNER JOIN rt0 ON (((((x'')) BETWEEN ((rt0.c1)) AND ((v0.c1))))IS NOT(((rt0.c1)<<(rt0.c2)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c1)+(v0.c1))) ISNULL) INNER JOIN rt0 ON (((((x'')) BETWEEN ((rt0.c1)) AND ((v0.c1))))IS NOT(((rt0.c1)<<(rt0.c2)))) WHERE (CASE v0.c2  WHEN (rt0.c4 IN ()) THEN CAST(v0.c1 AS REAL) WHEN (~ (v0.c1)) THEN (NOT (v0.c0)) WHEN (((rt0.c3, rt0.c4, v0.c0, rt0.c2, '%\nLT솈b#'))>=((v0.c0, v0.c1, vt0.c0, 0.20777148058618522, rt0.c2))) THEN ((((((((vt0.c0)AND(v0.c2)))AND(v0.c0)))OR(vt0.c0)))AND(rt0.c0)) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))GLOB(0.6527018716765611))) ORDER BY STRFTIME((rt0.c2 IN ()), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))) DESC, ((((rt0.c4)IS(rt0.c2))) BETWEEN (x'c129' COLLATE BINARY) AND ((+ (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))GLOB(0.6527018716765611))) IS TRUE)  as count FROM vt0, rt0 ORDER BY STRFTIME((rt0.c2 IN ()), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))) DESC, ((((rt0.c4)IS(rt0.c2))) BETWEEN (x'c129' COLLATE BINARY) AND ((+ (rt0.c1)))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))GLOB(0.6527018716765611))) ORDER BY STRFTIME((rt0.c2 IN ()), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))) DESC, ((((rt0.c4)IS(rt0.c2))) BETWEEN (x'c129' COLLATE BINARY) AND ((+ (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))GLOB(0.6527018716765611))) IS TRUE)  as count FROM vt0, rt0 ORDER BY STRFTIME((rt0.c2 IN ()), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))) DESC, ((((rt0.c4)IS(rt0.c2))) BETWEEN (x'c129' COLLATE BINARY) AND ((+ (rt0.c1)))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))GLOB(0.6527018716765611))) ORDER BY STRFTIME((rt0.c2 IN ()), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))) DESC, ((((rt0.c4)IS(rt0.c2))) BETWEEN (x'c129' COLLATE BINARY) AND ((+ (rt0.c1)))) DESC;
SELECT * FROM v0 WHERE ((((((v0.c2, v0.c0, v0.c1)) BETWEEN ((NULL, v0.c1, v0.c0)) AND ((v0.c2, '-1173806889', v0.c2)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c2, v0.c0, v0.c1)) BETWEEN ((NULL, v0.c1, v0.c0)) AND ((v0.c2, '-1173806889', v0.c2)))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c2, v0.c0, v0.c1)) BETWEEN ((NULL, v0.c1, v0.c0)) AND ((v0.c2, '-1173806889', v0.c2)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c2, v0.c0, v0.c1)) BETWEEN ((NULL, v0.c1, v0.c0)) AND ((v0.c2, '-1173806889', v0.c2)))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c2, v0.c0, v0.c1)) BETWEEN ((NULL, v0.c1, v0.c0)) AND ((v0.c2, '-1173806889', v0.c2)))) NOT NULL));
SELECT * FROM vt0 WHERE (CASE (+ (vt0.c0))  WHEN 0.45538268676991267 THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt0.c0))  WHEN 0.45538268676991267 THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (+ (vt0.c0))  WHEN 0.45538268676991267 THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt0.c0))  WHEN 0.45538268676991267 THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (+ (vt0.c0))  WHEN 0.45538268676991267 THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 END);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (TYPEOF(DISTINCT rt0.c3)) AND ('-1165958686')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE) BETWEEN (TYPEOF(DISTINCT rt0.c3)) AND ('-1165958686'))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (TYPEOF(DISTINCT rt0.c3)) AND ('-1165958686')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE) BETWEEN (TYPEOF(DISTINCT rt0.c3)) AND ('-1165958686'))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (TYPEOF(DISTINCT rt0.c3)) AND ('-1165958686')));
SELECT * FROM v0, rt0, vt0 WHERE (((((rt0.c2) IS TRUE))|(((rt0.c4) BETWEEN (rt0.c4) AND (0xffffffffdf39e7ee)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))|(((rt0.c4) BETWEEN (rt0.c4) AND (0Xffffffffdf39e7ee))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((((rt0.c2) IS TRUE))|(((rt0.c4) BETWEEN (rt0.c4) AND (0xffffffffdf39e7ee)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))|(((rt0.c4) BETWEEN (rt0.c4) AND (0Xffffffffdf39e7ee))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((((rt0.c2) IS TRUE))|(((rt0.c4) BETWEEN (rt0.c4) AND (0xffffffffdf39e7ee)))));
SELECT * FROM v0, rt0, vt0 WHERE ((((vt0.c0)<=(rt0.c0)) IN ())) ORDER BY LIKELY(DISTINCT rt0.c4) COLLATE RTRIM  NULLS FIRST, (((v0.c0)) BETWEEN (((+ (rt0.c0)))) AND ((vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<=(rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY LIKELY(DISTINCT rt0.c4) COLLATE RTRIM  NULLS FIRST, (((v0.c0)) BETWEEN (((+ (rt0.c0)))) AND ((vt0.c0))) ASC  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE ((((vt0.c0)<=(rt0.c0)) IN ())) ORDER BY LIKELY(DISTINCT rt0.c4) COLLATE RTRIM  NULLS FIRST, (((v0.c0)) BETWEEN (((+ (rt0.c0)))) AND ((vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<=(rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY LIKELY(DISTINCT rt0.c4) COLLATE RTRIM  NULLS FIRST, (((v0.c0)) BETWEEN (((+ (rt0.c0)))) AND ((vt0.c0))) ASC  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE ((((vt0.c0)<=(rt0.c0)) IN ())) ORDER BY LIKELY(DISTINCT rt0.c4) COLLATE RTRIM  NULLS FIRST, (((v0.c0)) BETWEEN (((+ (rt0.c0)))) AND ((vt0.c0))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (RTRIM(v0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(v0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (RTRIM(v0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(v0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (RTRIM(v0.c1 COLLATE BINARY));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((rt0.c0)IS(((0.24436061392859632) NOT BETWEEN (v0.c2) AND (x'3bd4'))))) ORDER BY 0.39350884718748014  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)IS(((0.24436061392859632) NOT BETWEEN (v0.c2) AND (x'3bd4'))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY 0.39350884718748014  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((rt0.c0)IS(((0.24436061392859632) NOT BETWEEN (v0.c2) AND (x'3bd4'))))) ORDER BY 0.39350884718748014  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)IS(((0.24436061392859632) NOT BETWEEN (v0.c2) AND (x'3bd4'))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY 0.39350884718748014  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((rt0.c0)IS(((0.24436061392859632) NOT BETWEEN (v0.c2) AND (x'3bd4'))))) ORDER BY 0.39350884718748014  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE ((+ (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((+ (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((+ (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE BINARY) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((((((0X62338fcb)AND(NULL)))OR(rt0.c1)))AND('')))OR(vt0.c0))) AND (((vt0.c0)|(rt0.c1)))) ASC  NULLS LAST, IFNULL(((vt0.c0)>(rt0.c2)), (+ (rt0.c3)))  NULLS FIRST, CAST(((x'f312') NOTNULL) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((((((0x62338fcb)AND(NULL)))OR(rt0.c1)))AND('')))OR(vt0.c0))) AND (((vt0.c0)|(rt0.c1)))) ASC  NULLS LAST, IFNULL(((vt0.c0)>(rt0.c2)), (+ (rt0.c3)))  NULLS FIRST, CAST(((x'f312') NOTNULL) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE BINARY) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((((((0X62338fcb)AND(NULL)))OR(rt0.c1)))AND('')))OR(vt0.c0))) AND (((vt0.c0)|(rt0.c1)))) ASC  NULLS LAST, IFNULL(((vt0.c0)>(rt0.c2)), (+ (rt0.c3)))  NULLS FIRST, CAST(((x'f312') NOTNULL) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((((((0x62338fcb)AND(NULL)))OR(rt0.c1)))AND('')))OR(vt0.c0))) AND (((vt0.c0)|(rt0.c1)))) ASC  NULLS LAST, IFNULL(((vt0.c0)>(rt0.c2)), (+ (rt0.c3)))  NULLS FIRST, CAST(((x'f312') NOTNULL) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE BINARY) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((((((0X62338fcb)AND(NULL)))OR(rt0.c1)))AND('')))OR(vt0.c0))) AND (((vt0.c0)|(rt0.c1)))) ASC  NULLS LAST, IFNULL(((vt0.c0)>(rt0.c2)), (+ (rt0.c3)))  NULLS FIRST, CAST(((x'f312') NOTNULL) AS TEXT) DESC;
SELECT ALL * FROM v0 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((NULL) NOTNULL));
SELECT * FROM vt0, rt0, v0 WHERE ((+ (json_array(rt0.c3, v0.c2, rt0.c0, rt0.c4)))) ORDER BY json_object(v0.c0, ((vt0.c0) IS FALSE), LIKELY(rt0.c1), (v0.c1 IN (vt0.c0, rt0.c3, vt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((((v0.c2)OR(v0.c0)))AND(rt0.c3)), ((((((((rt0.c3)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.6911872680116808)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (json_array(rt0.c3, v0.c2, rt0.c0, rt0.c4)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY json_object(v0.c0, ((vt0.c0) IS FALSE), LIKELY(rt0.c1), (v0.c1 IN (vt0.c0, rt0.c3, vt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((((v0.c2)OR(v0.c0)))AND(rt0.c3)), ((((((((rt0.c3)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.6911872680116808)))  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE ((+ (json_array(rt0.c3, v0.c2, rt0.c0, rt0.c4)))) ORDER BY json_object(v0.c0, ((vt0.c0) IS FALSE), LIKELY(rt0.c1), (v0.c1 IN (vt0.c0, rt0.c3, vt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((((v0.c2)OR(v0.c0)))AND(rt0.c3)), ((((((((rt0.c3)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.6911872680116808)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (json_array(rt0.c3, v0.c2, rt0.c0, rt0.c4)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY json_object(v0.c0, ((vt0.c0) IS FALSE), LIKELY(rt0.c1), (v0.c1 IN (vt0.c0, rt0.c3, vt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((((v0.c2)OR(v0.c0)))AND(rt0.c3)), ((((((((rt0.c3)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.6911872680116808)))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c3 IN (-1595427568)))<(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '૙o' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY ((((rt0.c3)OR(CAST(vt0.c0 AS INTEGER))))OR(LTRIM(rt0.c0)))  NULLS LAST, ((((((rt0.c0)AND(x'd1e6')))OR(vt0.c0)))%((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN (-1595427568)))<(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '૙o' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3)OR(CAST(vt0.c0 AS INTEGER))))OR(LTRIM(rt0.c0)))  NULLS LAST, ((((((rt0.c0)AND(x'd1e6')))OR(vt0.c0)))%((rt0.c1 IN ()))));
SELECT * FROM rt0, vt0 WHERE ((((rt0.c3 IN (-1595427568)))<(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '૙o' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY ((((rt0.c3)OR(CAST(vt0.c0 AS INTEGER))))OR(LTRIM(rt0.c0)))  NULLS LAST, ((((((rt0.c0)AND(x'd1e6')))OR(vt0.c0)))%((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN (-1595427568)))<(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '૙o' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3)OR(CAST(vt0.c0 AS INTEGER))))OR(LTRIM(rt0.c0)))  NULLS LAST, ((((((rt0.c0)AND(x'd1e6')))OR(vt0.c0)))%((rt0.c1 IN ()))));
SELECT * FROM rt0, vt0 WHERE ((((rt0.c3 IN (-1595427568)))<(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '૙o' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY ((((rt0.c3)OR(CAST(vt0.c0 AS INTEGER))))OR(LTRIM(rt0.c0)))  NULLS LAST, ((((((rt0.c0)AND(x'd1e6')))OR(vt0.c0)))%((rt0.c1 IN ())));
SELECT ALL COUNT(*) FROM vt0 WHERE (0x344a2612) ORDER BY ((((vt0.c0)%(vt0.c0)))<<(vt0.c0 COLLATE RTRIM)), (((vt0.c0)) NOT BETWEEN ((TRIM(vt0.c0))) AND ((((0.7412285647965285)-(0.34347626469488723))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0x344a2612) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)%(vt0.c0)))<<(vt0.c0 COLLATE RTRIM)), (((vt0.c0)) NOT BETWEEN ((TRIM(vt0.c0))) AND ((((0.7412285647965285)-(0.34347626469488723))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0x344a2612) ORDER BY ((((vt0.c0)%(vt0.c0)))<<(vt0.c0 COLLATE RTRIM)), (((vt0.c0)) NOT BETWEEN ((TRIM(vt0.c0))) AND ((((0.7412285647965285)-(0.34347626469488723))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0x344a2612) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)%(vt0.c0)))<<(vt0.c0 COLLATE RTRIM)), (((vt0.c0)) NOT BETWEEN ((TRIM(vt0.c0))) AND ((((0.7412285647965285)-(0.34347626469488723))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0x344a2612) ORDER BY ((((vt0.c0)%(vt0.c0)))<<(vt0.c0 COLLATE RTRIM)), (((vt0.c0)) NOT BETWEEN ((TRIM(vt0.c0))) AND ((((0.7412285647965285)-(0.34347626469488723))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)<>(vt0.c0)), (vt0.c0 IN ()), vt0.c0))<((((((((((vt0.c0)AND(241575631)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)!=(vt0.c0)), (vt0.c0 IN ()), vt0.c0))<((((((((((vt0.c0)AND(241575631)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)<>(vt0.c0)), (vt0.c0 IN ()), vt0.c0))<((((((((((vt0.c0)AND(241575631)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)!=(vt0.c0)), (vt0.c0 IN ()), vt0.c0))<((((((((((vt0.c0)AND(241575631)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)<>(vt0.c0)), (vt0.c0 IN ()), vt0.c0))<((((((((((vt0.c0)AND(241575631)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT ALL * FROM v0 INNER JOIN rt0 ON CASE WHEN (0.3835580919720847 IN ()) THEN v0.c2 COLLATE NOCASE WHEN '-1673328608' THEN ((vt0.c0)&(NULL)) WHEN (('-74687856')-(rt0.c2)) THEN ((((0.014148106700953234)OR(vt0.c0)))AND(v0.c0)) END INNER JOIN vt0 ON rt0.c0 WHERE (CAST(((((v0.c0)OR(rt0.c1)))AND(rt0.c4)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)OR(rt0.c1)))AND(rt0.c4)) AS REAL)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CASE WHEN (0.3835580919720847 IN ()) THEN v0.c2 COLLATE NOCASE WHEN '-1673328608' THEN ((vt0.c0)&(NULL)) WHEN (('-74687856')-(rt0.c2)) THEN ((((0.014148106700953234)OR(vt0.c0)))AND(v0.c0)) END INNER JOIN vt0 ON rt0.c0);
SELECT ALL * FROM v0 INNER JOIN rt0 ON CASE WHEN (0.3835580919720847 IN ()) THEN v0.c2 COLLATE NOCASE WHEN '-1673328608' THEN ((vt0.c0)&(NULL)) WHEN (('-74687856')-(rt0.c2)) THEN ((((0.014148106700953234)OR(vt0.c0)))AND(v0.c0)) END INNER JOIN vt0 ON rt0.c0 WHERE (CAST(((((v0.c0)OR(rt0.c1)))AND(rt0.c4)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)OR(rt0.c1)))AND(rt0.c4)) AS REAL)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CASE WHEN (0.3835580919720847 IN ()) THEN v0.c2 COLLATE NOCASE WHEN '-1673328608' THEN ((vt0.c0)&(NULL)) WHEN (('-74687856')-(rt0.c2)) THEN ((((0.014148106700953234)OR(vt0.c0)))AND(v0.c0)) END INNER JOIN vt0 ON rt0.c0);
SELECT ALL * FROM v0 INNER JOIN rt0 ON CASE WHEN (0.3835580919720847 IN ()) THEN v0.c2 COLLATE NOCASE WHEN '-1673328608' THEN ((vt0.c0)&(NULL)) WHEN (('-74687856')-(rt0.c2)) THEN ((((0.014148106700953234)OR(vt0.c0)))AND(v0.c0)) END INNER JOIN vt0 ON rt0.c0 WHERE (CAST(((((v0.c0)OR(rt0.c1)))AND(rt0.c4)) AS REAL));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c3 IN ()))||(INSTR(rt0.c0, rt0.c3))) WHERE (CASE x''  WHEN TRIM(v0.c0, rt0.c4) THEN rt0.c3 WHEN ((rt0.c2)GLOB(rt0.c4)) THEN (rt0.c2 IN ()) WHEN CAST(v0.c2 AS INTEGER) THEN ((((rt0.c4)OR(v0.c0)))AND(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN TRIM(v0.c0, rt0.c4) THEN rt0.c3 WHEN ((rt0.c2)GLOB(rt0.c4)) THEN (rt0.c2 IN ()) WHEN CAST(v0.c2 AS INTEGER) THEN ((((rt0.c4)OR(v0.c0)))AND(NULL)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c3 IN ()))||(INSTR(rt0.c0, rt0.c3))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c3 IN ()))||(INSTR(rt0.c0, rt0.c3))) WHERE (CASE x''  WHEN TRIM(v0.c0, rt0.c4) THEN rt0.c3 WHEN ((rt0.c2)GLOB(rt0.c4)) THEN (rt0.c2 IN ()) WHEN CAST(v0.c2 AS INTEGER) THEN ((((rt0.c4)OR(v0.c0)))AND(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN TRIM(v0.c0, rt0.c4) THEN rt0.c3 WHEN ((rt0.c2)GLOB(rt0.c4)) THEN (rt0.c2 IN ()) WHEN CAST(v0.c2 AS INTEGER) THEN ((((rt0.c4)OR(v0.c0)))AND(NULL)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c3 IN ()))||(INSTR(rt0.c0, rt0.c3))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c3 IN ()))||(INSTR(rt0.c0, rt0.c3))) WHERE (CASE x''  WHEN TRIM(v0.c0, rt0.c4) THEN rt0.c3 WHEN ((rt0.c2)GLOB(rt0.c4)) THEN (rt0.c2 IN ()) WHEN CAST(v0.c2 AS INTEGER) THEN ((((rt0.c4)OR(v0.c0)))AND(NULL)) END);
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON ((((rt0.c1)IS NOT(rt0.c2)))>>(CASE x''  WHEN 0.530088014287237 THEN vt0.c0 WHEN x'' THEN v0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN v0.c0 THEN rt0.c1 ELSE vt0.c0 END)) WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))AND(((v0.c2) NOT NULL))))AND(CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))AND(((v0.c2) NOT NULL))))AND(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON ((((rt0.c1)IS NOT(rt0.c2)))>>(CASE x''  WHEN 0.530088014287237 THEN vt0.c0 WHEN x'' THEN v0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN v0.c0 THEN rt0.c1 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON ((((rt0.c1)IS NOT(rt0.c2)))>>(CASE x''  WHEN 0.530088014287237 THEN vt0.c0 WHEN x'' THEN v0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN v0.c0 THEN rt0.c1 ELSE vt0.c0 END)) WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))AND(((v0.c2) NOT NULL))))AND(CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))AND(((v0.c2) NOT NULL))))AND(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON ((((rt0.c1)IS NOT(rt0.c2)))>>(CASE x''  WHEN 0.530088014287237 THEN vt0.c0 WHEN x'' THEN v0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN v0.c0 THEN rt0.c1 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON ((((rt0.c1)IS NOT(rt0.c2)))>>(CASE x''  WHEN 0.530088014287237 THEN vt0.c0 WHEN x'' THEN v0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN v0.c0 THEN rt0.c1 ELSE vt0.c0 END)) WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))AND(((v0.c2) NOT NULL))))AND(CAST(rt0.c2 AS REAL))));
SELECT ALL COUNT(*) FROM v0 WHERE (MAX(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN NULL END, (v0.c1 IN ()))) ORDER BY v0.c2, ((((v0.c2) IS TRUE)) NOT BETWEEN (v0.c1) AND ((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ((MAX(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN NULL END, (v0.c1 IN ()))) IS TRUE)  as count FROM v0 ORDER BY v0.c2, ((((v0.c2) IS TRUE)) NOT BETWEEN (v0.c1) AND ((NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (MAX(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN NULL END, (v0.c1 IN ()))) ORDER BY v0.c2, ((((v0.c2) IS TRUE)) NOT BETWEEN (v0.c1) AND ((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ((MAX(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN NULL END, (v0.c1 IN ()))) IS TRUE)  as count FROM v0 ORDER BY v0.c2, ((((v0.c2) IS TRUE)) NOT BETWEEN (v0.c1) AND ((NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (MAX(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN NULL END, (v0.c1 IN ()))) ORDER BY v0.c2, ((((v0.c2) IS TRUE)) NOT BETWEEN (v0.c1) AND ((NOT (v0.c0))));
SELECT * FROM vt0 INNER JOIN v0 ON UPPER((x'' IN (v0.c0))) WHERE (((vt0.c0 IN ()) IN (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON UPPER((x'' IN (v0.c0))));
SELECT * FROM vt0 INNER JOIN v0 ON UPPER((x'' IN (v0.c0))) WHERE (((vt0.c0 IN ()) IN (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON UPPER((x'' IN (v0.c0))));
SELECT * FROM vt0 INNER JOIN v0 ON UPPER((x'' IN (v0.c0))) WHERE (((vt0.c0 IN ()) IN (CAST(v0.c0 AS BLOB))));
SELECT * FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('');
SELECT * FROM vt0, v0 NOT INDEXED WHERE (((COALESCE(DISTINCT v0.c2, v0.c1, vt0.c0, v0.c0))*(TRIM(DISTINCT v0.c1)))) ORDER BY v0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT v0.c2, v0.c1, vt0.c0, v0.c0))*(TRIM(DISTINCT v0.c1)))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c1 DESC  NULLS FIRST);
SELECT * FROM vt0, v0 NOT INDEXED WHERE (((COALESCE(DISTINCT v0.c2, v0.c1, vt0.c0, v0.c0))*(TRIM(DISTINCT v0.c1)))) ORDER BY v0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT v0.c2, v0.c1, vt0.c0, v0.c0))*(TRIM(DISTINCT v0.c1)))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c1 DESC  NULLS FIRST);
SELECT * FROM vt0, v0 NOT INDEXED WHERE (((COALESCE(DISTINCT v0.c2, v0.c1, vt0.c0, v0.c0))*(TRIM(DISTINCT v0.c1)))) ORDER BY v0.c1 DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (IFNULL(rt0.c1 COLLATE RTRIM, ((((rt0.c2)AND(rt0.c2)))OR(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c1 COLLATE RTRIM, ((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (IFNULL(rt0.c1 COLLATE RTRIM, ((((rt0.c2)AND(rt0.c2)))OR(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c1 COLLATE RTRIM, ((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (IFNULL(rt0.c1 COLLATE RTRIM, ((((rt0.c2)AND(rt0.c2)))OR(rt0.c3))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c1 IN ()))) AND (((((v0.c2))<>((v0.c0))))))) ORDER BY ((v0.c0 COLLATE NOCASE) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((v0.c1 IN ()))) AND (((((v0.c2))<>((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c1 IN ()))) AND (((((v0.c2))<>((v0.c0))))))) ORDER BY ((v0.c0 COLLATE NOCASE) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((v0.c1 IN ()))) AND (((((v0.c2))<>((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c1 IN ()))) AND (((((v0.c2))<>((v0.c0))))))) ORDER BY ((v0.c0 COLLATE NOCASE) IS TRUE) DESC;
SELECT * FROM v0, vt0, rt0 WHERE ((((((v0.c1, v0.c1, rt0.c1, vt0.c0, rt0.c3)) BETWEEN ((NULL, v0.c2, rt0.c0, v0.c2, v0.c2)) AND ((v0.c1, v0.c0, rt0.c3, rt0.c1, v0.c2)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c1, v0.c1, rt0.c1, vt0.c0, rt0.c3)) BETWEEN ((NULL, v0.c2, rt0.c0, v0.c2, v0.c2)) AND ((v0.c1, v0.c0, rt0.c3, rt0.c1, v0.c2)))) NOTNULL)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE ((((((v0.c1, v0.c1, rt0.c1, vt0.c0, rt0.c3)) BETWEEN ((NULL, v0.c2, rt0.c0, v0.c2, v0.c2)) AND ((v0.c1, v0.c0, rt0.c3, rt0.c1, v0.c2)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c1, v0.c1, rt0.c1, vt0.c0, rt0.c3)) BETWEEN ((NULL, v0.c2, rt0.c0, v0.c2, v0.c2)) AND ((v0.c1, v0.c0, rt0.c3, rt0.c1, v0.c2)))) NOTNULL)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE ((((((v0.c1, v0.c1, rt0.c1, vt0.c0, rt0.c3)) BETWEEN ((NULL, v0.c2, rt0.c0, v0.c2, v0.c2)) AND ((v0.c1, v0.c0, rt0.c3, rt0.c1, v0.c2)))) NOTNULL));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (json_array_length((v0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((v0.c1 IN ()))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (json_array_length((v0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((v0.c1 IN ()))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (json_array_length((v0.c1 IN ())));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0) IS TRUE)  WHEN QUOTE(v0.c0) THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) IS TRUE)  WHEN QUOTE(v0.c0) THEN v0.c0 END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0) IS TRUE)  WHEN QUOTE(v0.c0) THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) IS TRUE)  WHEN QUOTE(v0.c0) THEN v0.c0 END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0) IS TRUE)  WHEN QUOTE(v0.c0) THEN v0.c0 END);
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c3)!=(rt0.c2))  WHEN ((vt0.c0) IS TRUE) THEN CASE WHEN rt0.c3 THEN v0.c0 END ELSE ((rt0.c2) NOT NULL) END WHERE (LIKELIHOOD((rt0.c3 IN (v0.c1)), 0.687047468336258)) ORDER BY (v0.c2 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((rt0.c3 IN (v0.c1)), 0.687047468336258)) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c3)<>(rt0.c2))  WHEN ((vt0.c0) IS TRUE) THEN CASE WHEN rt0.c3 THEN v0.c0 END ELSE ((rt0.c2) NOT NULL) END ORDER BY (v0.c2 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c3)!=(rt0.c2))  WHEN ((vt0.c0) IS TRUE) THEN CASE WHEN rt0.c3 THEN v0.c0 END ELSE ((rt0.c2) NOT NULL) END WHERE (LIKELIHOOD((rt0.c3 IN (v0.c1)), 0.687047468336258)) ORDER BY (v0.c2 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((rt0.c3 IN (v0.c1)), 0.687047468336258)) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c3)<>(rt0.c2))  WHEN ((vt0.c0) IS TRUE) THEN CASE WHEN rt0.c3 THEN v0.c0 END ELSE ((rt0.c2) NOT NULL) END ORDER BY (v0.c2 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c3)!=(rt0.c2))  WHEN ((vt0.c0) IS TRUE) THEN CASE WHEN rt0.c3 THEN v0.c0 END ELSE ((rt0.c2) NOT NULL) END WHERE (LIKELIHOOD((rt0.c3 IN (v0.c1)), 0.687047468336258)) ORDER BY (v0.c2 IN ()) COLLATE BINARY;
SELECT * FROM rt0, v0 WHERE (TYPEOF(CASE rt0.c3  WHEN v0.c2 THEN rt0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((TYPEOF(CASE rt0.c3  WHEN v0.c2 THEN rt0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (TYPEOF(CASE rt0.c3  WHEN v0.c2 THEN rt0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((TYPEOF(CASE rt0.c3  WHEN v0.c2 THEN rt0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (TYPEOF(CASE rt0.c3  WHEN v0.c2 THEN rt0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END));
SELECT COUNT(*) FROM rt0, v0 WHERE (IFNULL(CAST(x'' AS TEXT), ((v0.c1) IS TRUE))) ORDER BY ((v0.c1 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(x'' AS TEXT), ((v0.c1) IS TRUE))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c1 IN ()) IN ()) DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (IFNULL(CAST(x'' AS TEXT), ((v0.c1) IS TRUE))) ORDER BY ((v0.c1 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(x'' AS TEXT), ((v0.c1) IS TRUE))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c1 IN ()) IN ()) DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (IFNULL(CAST(x'' AS TEXT), ((v0.c1) IS TRUE))) ORDER BY ((v0.c1 IN ()) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN (+ (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN vt0.c0 THEN CAST(0.05210427370218207 AS NUMERIC) WHEN '#0x~k%' THEN vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS TEXT)  WHEN (+ (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN vt0.c0 THEN CAST(0.05210427370218207 AS NUMERIC) WHEN '#0x~k%' THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN (+ (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN vt0.c0 THEN CAST(0.05210427370218207 AS NUMERIC) WHEN '#0x~k%' THEN vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS TEXT)  WHEN (+ (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN vt0.c0 THEN CAST(0.05210427370218207 AS NUMERIC) WHEN '#0x~k%' THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN (+ (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN vt0.c0 THEN CAST(0.05210427370218207 AS NUMERIC) WHEN '#0x~k%' THEN vt0.c0 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3)<=((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)<=((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3)<=((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)<=((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3)<=((rt0.c2 IN ()))));
SELECT ALL * FROM v0 WHERE (((((v0.c2)IS(v0.c0))) BETWEEN (CASE 0.21033167725355328  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END) AND (v0.c1 COLLATE RTRIM))) ORDER BY (((~ (v0.c1)))>(v0.c2)) ASC, (~ (LIKE('X', v0.c0, '*'))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)IS(v0.c0))) BETWEEN (CASE 0.21033167725355328  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END) AND (v0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c1)))>(v0.c2)) ASC, (~ (LIKE('X', v0.c0, '*'))) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((v0.c2)IS(v0.c0))) BETWEEN (CASE 0.21033167725355328  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END) AND (v0.c1 COLLATE RTRIM))) ORDER BY (((~ (v0.c1)))>(v0.c2)) ASC, (~ (LIKE('X', v0.c0, '*'))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)IS(v0.c0))) BETWEEN (CASE 0.21033167725355328  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END) AND (v0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c1)))>(v0.c2)) ASC, (~ (LIKE('X', v0.c0, '*'))) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((v0.c2)IS(v0.c0))) BETWEEN (CASE 0.21033167725355328  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END) AND (v0.c1 COLLATE RTRIM))) ORDER BY (((~ (v0.c1)))>(v0.c2)) ASC, (~ (LIKE('X', v0.c0, '*'))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((((((rt0.c3)OR(rt0.c4)))OR('3_*~Bi\r')), (- ('-1330637812')), (((rt0.c2)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0)))))>((MAX(rt0.c3, rt0.c2), (('681300677') NOTNULL), rt0.c4)))) ORDER BY INSTR(((rt0.c2)GLOB(rt0.c1)), ((vt0.c0)GLOB(rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c3)OR(rt0.c4)))OR('3_*~Bi\r')), (- ('-1330637812')), (((rt0.c2)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0)))))>((MAX(rt0.c3, rt0.c2), (('681300677') NOTNULL), rt0.c4)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY INSTR(((rt0.c2)GLOB(rt0.c1)), ((vt0.c0)GLOB(rt0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((((((rt0.c3)OR(rt0.c4)))OR('3_*~Bi\r')), (- ('-1330637812')), (((rt0.c2)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0)))))>((MAX(rt0.c3, rt0.c2), (('681300677') NOTNULL), rt0.c4)))) ORDER BY INSTR(((rt0.c2)GLOB(rt0.c1)), ((vt0.c0)GLOB(rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c3)OR(rt0.c4)))OR('3_*~Bi\r')), (- ('-1330637812')), (((rt0.c2)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0)))))>((MAX(rt0.c3, rt0.c2), (('681300677') NOTNULL), rt0.c4)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY INSTR(((rt0.c2)GLOB(rt0.c1)), ((vt0.c0)GLOB(rt0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((((((rt0.c3)OR(rt0.c4)))OR('3_*~Bi\r')), (- ('-1330637812')), (((rt0.c2)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0)))))>((MAX(rt0.c3, rt0.c2), (('681300677') NOTNULL), rt0.c4)))) ORDER BY INSTR(((rt0.c2)GLOB(rt0.c1)), ((vt0.c0)GLOB(rt0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (v0.c0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1)>=(rt0.c2)) IN ())) ORDER BY (((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0))))<=(((~ (rt0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)>=(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0))))<=(((~ (rt0.c3)))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1)>=(rt0.c2)) IN ())) ORDER BY (((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0))))<=(((~ (rt0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)>=(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0))))<=(((~ (rt0.c3)))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1)>=(rt0.c2)) IN ())) ORDER BY (((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0))))<=(((~ (rt0.c3)))))  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (x'')))*(rt0.c3 COLLATE NOCASE))) ORDER BY ((NULL) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c1) AND (x'')))*(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((NULL) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY DESC);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (x'')))*(rt0.c3 COLLATE NOCASE))) ORDER BY ((NULL) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c1) AND (x'')))*(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((NULL) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY DESC);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (x'')))*(rt0.c3 COLLATE NOCASE))) ORDER BY ((NULL) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY DESC;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4)-(rt0.c0)))OR((((rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0, rt0.c3, 0.12162715902214094)) AND ((rt0.c0, rt0.c3, rt0.c3, rt0.c3, rt0.c0))))))OR(rt0.c4)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)-(rt0.c0)))OR((((rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0, rt0.c3, 0.12162715902214094)) AND ((rt0.c0, rt0.c3, rt0.c3, rt0.c3, rt0.c0))))))OR(rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4)-(rt0.c0)))OR((((rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0, rt0.c3, 0.12162715902214094)) AND ((rt0.c0, rt0.c3, rt0.c3, rt0.c3, rt0.c0))))))OR(rt0.c4)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)-(rt0.c0)))OR((((rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0, rt0.c3, 0.12162715902214094)) AND ((rt0.c0, rt0.c3, rt0.c3, rt0.c3, rt0.c0))))))OR(rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4)-(rt0.c0)))OR((((rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0, rt0.c3, 0.12162715902214094)) AND ((rt0.c0, rt0.c3, rt0.c3, rt0.c3, rt0.c0))))))OR(rt0.c4)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE (NOT (vt0.c0))  WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN ((((rt0.c1)AND(rt0.c2)))OR(x'4017')) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) END) ORDER BY ((rt0.c1 COLLATE RTRIM)%(((rt0.c3)|('f~]'))));
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c0))  WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN ((((rt0.c1)AND(rt0.c2)))OR(x'4017')) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1 COLLATE RTRIM)%(((rt0.c3)|('f~]')))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE (NOT (vt0.c0))  WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN ((((rt0.c1)AND(rt0.c2)))OR(x'4017')) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) END) ORDER BY ((rt0.c1 COLLATE RTRIM)%(((rt0.c3)|('f~]'))));
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c0))  WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN ((((rt0.c1)AND(rt0.c2)))OR(x'4017')) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1 COLLATE RTRIM)%(((rt0.c3)|('f~]')))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE (NOT (vt0.c0))  WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN ((((rt0.c1)AND(rt0.c2)))OR(x'4017')) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) END) ORDER BY ((rt0.c1 COLLATE RTRIM)%(((rt0.c3)|('f~]'))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0, rt0.c1, rt0.c3))<((rt0.c4, rt0.c1, '*(LJ('))) ELSE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c4 END END) ORDER BY (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0, rt0.c1, rt0.c3))<((rt0.c4, rt0.c1, '*(LJ('))) ELSE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c4 END END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0, rt0.c1, rt0.c3))<((rt0.c4, rt0.c1, '*(LJ('))) ELSE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c4 END END) ORDER BY (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0, rt0.c1, rt0.c3))<((rt0.c4, rt0.c1, '*(LJ('))) ELSE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c4 END END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0, rt0.c1, rt0.c3))<((rt0.c4, rt0.c1, '*(LJ('))) ELSE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c4 END END) ORDER BY (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END IN ());
SELECT ALL * FROM rt0, v0 WHERE (CAST((NOT (rt0.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST((NOT (rt0.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST((NOT (rt0.c3)) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))  WHEN (rt0.c0 IN ()) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)) ELSE ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)) END) ORDER BY (+ (DATETIME(rt0.c2, rt0.c1, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))  WHEN (rt0.c0 IN ()) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)) ELSE ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)) END) IS TRUE)  as count FROM rt0 ORDER BY (+ (DATETIME(rt0.c2, rt0.c1, rt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))  WHEN (rt0.c0 IN ()) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)) ELSE ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)) END) ORDER BY (+ (DATETIME(rt0.c2, rt0.c1, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))  WHEN (rt0.c0 IN ()) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)) ELSE ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)) END) IS TRUE)  as count FROM rt0 ORDER BY (+ (DATETIME(rt0.c2, rt0.c1, rt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))  WHEN (rt0.c0 IN ()) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)) ELSE ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)) END) ORDER BY (+ (DATETIME(rt0.c2, rt0.c1, rt0.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE v0.c1  WHEN rt0.c2 THEN v0.c1 ELSE vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c1  WHEN rt0.c2 THEN v0.c1 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE v0.c1  WHEN rt0.c2 THEN v0.c1 ELSE vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c1  WHEN rt0.c2 THEN v0.c1 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE v0.c1  WHEN rt0.c2 THEN v0.c1 ELSE vt0.c0 END COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(0.8346037702824324 AS BLOB))AND(CAST(rt0.c1 AS REAL))))OR(rt0.c2))) ORDER BY (NOT (rt0.c2)) DESC  NULLS FIRST, ((((rt0.c0)IS NOT(rt0.c2)))<(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(0.8346037702824324 AS BLOB))AND(CAST(rt0.c1 AS REAL))))OR(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c2)) DESC  NULLS FIRST, ((((rt0.c0)IS NOT(rt0.c2)))<(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(0.8346037702824324 AS BLOB))AND(CAST(rt0.c1 AS REAL))))OR(rt0.c2))) ORDER BY (NOT (rt0.c2)) DESC  NULLS FIRST, ((((rt0.c0)IS NOT(rt0.c2)))<(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(0.8346037702824324 AS BLOB))AND(CAST(rt0.c1 AS REAL))))OR(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c2)) DESC  NULLS FIRST, ((((rt0.c0)IS NOT(rt0.c2)))<(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(0.8346037702824324 AS BLOB))AND(CAST(rt0.c1 AS REAL))))OR(rt0.c2))) ORDER BY (NOT (rt0.c2)) DESC  NULLS FIRST, ((((rt0.c0)IS NOT(rt0.c2)))<(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)) DESC;
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS REAL)) ORDER BY (~ (v0.c2)) COLLATE BINARY  NULLS LAST, CASE (((v0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))  WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 COLLATE RTRIM WHEN ((rt0.c3) NOT BETWEEN ('1924764315') AND (rt0.c4)) THEN (~ (v0.c2)) WHEN ']襜鬢' THEN ((((((((((((rt0.c1)OR(v0.c2)))AND(rt0.c1)))OR(v0.c2)))AND(v0.c0)))AND(rt0.c1)))OR(v0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY (~ (v0.c2)) COLLATE BINARY  NULLS LAST, CASE (((v0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))  WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 COLLATE RTRIM WHEN ((rt0.c3) NOT BETWEEN ('1924764315') AND (rt0.c4)) THEN (~ (v0.c2)) WHEN ']襜鬢' THEN ((((((((((((rt0.c1)OR(v0.c2)))AND(rt0.c1)))OR(v0.c2)))AND(v0.c0)))AND(rt0.c1)))OR(v0.c1)) END);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS REAL)) ORDER BY (~ (v0.c2)) COLLATE BINARY  NULLS LAST, CASE (((v0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))  WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 COLLATE RTRIM WHEN ((rt0.c3) NOT BETWEEN ('1924764315') AND (rt0.c4)) THEN (~ (v0.c2)) WHEN ']襜鬢' THEN ((((((((((((rt0.c1)OR(v0.c2)))AND(rt0.c1)))OR(v0.c2)))AND(v0.c0)))AND(rt0.c1)))OR(v0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY (~ (v0.c2)) COLLATE BINARY  NULLS LAST, CASE (((v0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))  WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 COLLATE RTRIM WHEN ((rt0.c3) NOT BETWEEN ('1924764315') AND (rt0.c4)) THEN (~ (v0.c2)) WHEN ']襜鬢' THEN ((((((((((((rt0.c1)OR(v0.c2)))AND(rt0.c1)))OR(v0.c2)))AND(v0.c0)))AND(rt0.c1)))OR(v0.c1)) END);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS REAL)) ORDER BY (~ (v0.c2)) COLLATE BINARY  NULLS LAST, CASE (((v0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))  WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 COLLATE RTRIM WHEN ((rt0.c3) NOT BETWEEN ('1924764315') AND (rt0.c4)) THEN (~ (v0.c2)) WHEN ']襜鬢' THEN ((((((((((((rt0.c1)OR(v0.c2)))AND(rt0.c1)))OR(v0.c2)))AND(v0.c0)))AND(rt0.c1)))OR(v0.c1)) END;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN '0.5595561084991661' END)))) ORDER BY ((json_insert(vt0.c0, vt0.c0, vt0.c0))AND(((((vt0.c0)AND('W93^X')))AND(vt0.c0)))) ASC, ((((((((((vt0.c0)&(vt0.c0)))OR(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOT NULL))))OR((~ (vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN '0.5595561084991661' END)))) IS TRUE)  as count FROM vt0 ORDER BY ((json_insert(vt0.c0, vt0.c0, vt0.c0))AND(((((vt0.c0)AND('W93^X')))AND(vt0.c0)))) ASC, ((((((((((vt0.c0)&(vt0.c0)))OR(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOT NULL))))OR((~ (vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN '0.5595561084991661' END)))) ORDER BY ((json_insert(vt0.c0, vt0.c0, vt0.c0))AND(((((vt0.c0)AND('W93^X')))AND(vt0.c0)))) ASC, ((((((((((vt0.c0)&(vt0.c0)))OR(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOT NULL))))OR((~ (vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN '0.5595561084991661' END)))) IS TRUE)  as count FROM vt0 ORDER BY ((json_insert(vt0.c0, vt0.c0, vt0.c0))AND(((((vt0.c0)AND('W93^X')))AND(vt0.c0)))) ASC, ((((((((((vt0.c0)&(vt0.c0)))OR(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOT NULL))))OR((~ (vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN '0.5595561084991661' END)))) ORDER BY ((json_insert(vt0.c0, vt0.c0, vt0.c0))AND(((((vt0.c0)AND('W93^X')))AND(vt0.c0)))) ASC, ((((((((((vt0.c0)&(vt0.c0)))OR(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOT NULL))))OR((~ (vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))) ASC;
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON LIKELY(DISTINCT ((v0.c0)OR('''l'))) WHERE (QUOTE(CHANGES())) ORDER BY LIKELIHOOD(DISTINCT CASE v0.c1  WHEN v0.c2 THEN vt0.c0 END, 0.981112403266035) DESC;
SELECT SUM(count) FROM (SELECT ((QUOTE(CHANGES())) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON LIKELY(DISTINCT ((v0.c0)OR('''l'))) ORDER BY LIKELIHOOD(DISTINCT CASE v0.c1  WHEN v0.c2 THEN vt0.c0 END, 0.981112403266035) DESC);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON LIKELY(DISTINCT ((v0.c0)OR('''l'))) WHERE (QUOTE(CHANGES())) ORDER BY LIKELIHOOD(DISTINCT CASE v0.c1  WHEN v0.c2 THEN vt0.c0 END, 0.981112403266035) DESC;
SELECT SUM(count) FROM (SELECT ((QUOTE(CHANGES())) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON LIKELY(DISTINCT ((v0.c0)OR('''l'))) ORDER BY LIKELIHOOD(DISTINCT CASE v0.c1  WHEN v0.c2 THEN vt0.c0 END, 0.981112403266035) DESC);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON LIKELY(DISTINCT ((v0.c0)OR('''l'))) WHERE (QUOTE(CHANGES())) ORDER BY LIKELIHOOD(DISTINCT CASE v0.c1  WHEN v0.c2 THEN vt0.c0 END, 0.981112403266035) DESC;
SELECT * FROM vt0, rt0, v0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (NULL))) NOTNULL)) ORDER BY ((0.8620293779609635) IS TRUE) ASC  NULLS LAST, (('-522665787')-(((rt0.c1)<>(rt0.c2))))  NULLS FIRST, ((rt0.c3 COLLATE RTRIM) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (NULL))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((0.8620293779609635) IS TRUE) ASC  NULLS LAST, (('-522665787')-(((rt0.c1)!=(rt0.c2))))  NULLS FIRST, ((rt0.c3 COLLATE RTRIM) NOT NULL) DESC);
SELECT * FROM vt0, rt0, v0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (NULL))) NOTNULL)) ORDER BY ((0.8620293779609635) IS TRUE) ASC  NULLS LAST, (('-522665787')-(((rt0.c1)<>(rt0.c2))))  NULLS FIRST, ((rt0.c3 COLLATE RTRIM) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (NULL))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((0.8620293779609635) IS TRUE) ASC  NULLS LAST, (('-522665787')-(((rt0.c1)!=(rt0.c2))))  NULLS FIRST, ((rt0.c3 COLLATE RTRIM) NOT NULL) DESC);
SELECT * FROM vt0, rt0, v0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (NULL))) NOTNULL)) ORDER BY ((0.8620293779609635) IS TRUE) ASC  NULLS LAST, (('-522665787')-(((rt0.c1)<>(rt0.c2))))  NULLS FIRST, ((rt0.c3 COLLATE RTRIM) NOT NULL) DESC;
SELECT ALL * FROM rt0 WHERE (-2.000226374E9) ORDER BY LOWER(((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((-2.000226374E9) IS TRUE)  as count FROM rt0 ORDER BY LOWER(((NULL) ISNULL)));
SELECT ALL * FROM rt0 WHERE (-2.000226374E9) ORDER BY LOWER(((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((-2.000226374E9) IS TRUE)  as count FROM rt0 ORDER BY LOWER(((NULL) ISNULL)));
SELECT ALL * FROM rt0 WHERE (-2.000226374E9) ORDER BY LOWER(((NULL) ISNULL));
SELECT ALL * FROM v0 WHERE ((- ((~ ('m')))));
SELECT SUM(count) FROM (SELECT ALL (((- ((~ ('m'))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- ((~ ('m')))));
SELECT SUM(count) FROM (SELECT ALL (((- ((~ ('m'))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- ((~ ('m')))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3)|(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY TYPEOF(DATE(x'', rt0.c2, rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)|(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(DATE(x'', rt0.c2, rt0.c2)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3)|(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY TYPEOF(DATE(x'', rt0.c2, rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)|(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(DATE(x'', rt0.c2, rt0.c2)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3)|(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY TYPEOF(DATE(x'', rt0.c2, rt0.c2));
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM) ORDER BY 0.5421085687810335 ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY 0.5421085687810335 ASC);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM) ORDER BY 0.5421085687810335 ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY 0.5421085687810335 ASC);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM) ORDER BY 0.5421085687810335 ASC;
SELECT ALL * FROM rt0 WHERE (((rt0.c2)AND(((((rt0.c2)OR(rt0.c0)))OR(0.6829100565570073)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)AND(((((rt0.c2)OR(rt0.c0)))OR(0.6829100565570073))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)AND(((((rt0.c2)OR(rt0.c0)))OR(0.6829100565570073)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)AND(((((rt0.c2)OR(rt0.c0)))OR(0.6829100565570073))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)AND(((((rt0.c2)OR(rt0.c0)))OR(0.6829100565570073)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON CASE ((v0.c0) IS TRUE)  WHEN ((((((((v0.c0)AND(vt0.c0)))AND(v0.c1)))OR(v0.c1)))OR(NULL)) THEN CAST(v0.c2 AS NUMERIC) WHEN (- (vt0.c0)) THEN ((v0.c1)/(v0.c1)) WHEN v0.c0 COLLATE RTRIM THEN CASE v0.c0  WHEN v0.c0 THEN v0.c1 END ELSE '1852462209' END WHERE ((+ (v0.c1)) COLLATE NOCASE) ORDER BY 0.6582894491043334 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CASE ((v0.c0) IS TRUE)  WHEN ((((((((v0.c0)AND(vt0.c0)))AND(v0.c1)))OR(v0.c1)))OR(NULL)) THEN CAST(v0.c2 AS NUMERIC) WHEN (- (vt0.c0)) THEN ((v0.c1)/(v0.c1)) WHEN v0.c0 COLLATE RTRIM THEN CASE v0.c0  WHEN v0.c0 THEN v0.c1 END ELSE '1852462209' END ORDER BY 0.6582894491043334 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON CASE ((v0.c0) IS TRUE)  WHEN ((((((((v0.c0)AND(vt0.c0)))AND(v0.c1)))OR(v0.c1)))OR(NULL)) THEN CAST(v0.c2 AS NUMERIC) WHEN (- (vt0.c0)) THEN ((v0.c1)/(v0.c1)) WHEN v0.c0 COLLATE RTRIM THEN CASE v0.c0  WHEN v0.c0 THEN v0.c1 END ELSE '1852462209' END WHERE ((+ (v0.c1)) COLLATE NOCASE) ORDER BY 0.6582894491043334 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CASE ((v0.c0) IS TRUE)  WHEN ((((((((v0.c0)AND(vt0.c0)))AND(v0.c1)))OR(v0.c1)))OR(NULL)) THEN CAST(v0.c2 AS NUMERIC) WHEN (- (vt0.c0)) THEN ((v0.c1)/(v0.c1)) WHEN v0.c0 COLLATE RTRIM THEN CASE v0.c0  WHEN v0.c0 THEN v0.c1 END ELSE '1852462209' END ORDER BY 0.6582894491043334 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON CASE ((v0.c0) IS TRUE)  WHEN ((((((((v0.c0)AND(vt0.c0)))AND(v0.c1)))OR(v0.c1)))OR(NULL)) THEN CAST(v0.c2 AS NUMERIC) WHEN (- (vt0.c0)) THEN ((v0.c1)/(v0.c1)) WHEN v0.c0 COLLATE RTRIM THEN CASE v0.c0  WHEN v0.c0 THEN v0.c1 END ELSE '1852462209' END WHERE ((+ (v0.c1)) COLLATE NOCASE) ORDER BY 0.6582894491043334 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((0.6914706390289014 IN (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((0.6914706390289014 IN (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE ((0.6914706390289014 IN (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((0.6914706390289014 IN (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE ((0.6914706390289014 IN (rt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE ((((rt0.c2) BETWEEN (v0.c1) AND (v0.c1)) IN ())) ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS LAST, CASE WHEN ((rt0.c2)IS NOT(vt0.c0)) THEN ((rt0.c3) IS TRUE) ELSE ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(v0.c2)))AND(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (v0.c1) AND (v0.c1)) IN ())) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON vt0.c0 ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS LAST, CASE WHEN ((rt0.c2)IS NOT(vt0.c0)) THEN ((rt0.c3) IS TRUE) ELSE ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(v0.c2)))AND(rt0.c2)) END);
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE ((((rt0.c2) BETWEEN (v0.c1) AND (v0.c1)) IN ())) ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS LAST, CASE WHEN ((rt0.c2)IS NOT(vt0.c0)) THEN ((rt0.c3) IS TRUE) ELSE ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(v0.c2)))AND(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (v0.c1) AND (v0.c1)) IN ())) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON vt0.c0 ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS LAST, CASE WHEN ((rt0.c2)IS NOT(vt0.c0)) THEN ((rt0.c3) IS TRUE) ELSE ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(v0.c2)))AND(rt0.c2)) END);
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE ((((rt0.c2) BETWEEN (v0.c1) AND (v0.c1)) IN ())) ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS LAST, CASE WHEN ((rt0.c2)IS NOT(vt0.c0)) THEN ((rt0.c3) IS TRUE) ELSE ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(v0.c2)))AND(rt0.c2)) END;
SELECT * FROM v0 WHERE ((((v0.c2)) BETWEEN ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END)) AND ((x''))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END)) AND ((x'')))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c2)) BETWEEN ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END)) AND ((x''))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END)) AND ((x'')))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c2)) BETWEEN ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END)) AND ((x''))));
SELECT * FROM rt0, vt0, v0 WHERE (STRFTIME(((vt0.c0)>=(rt0.c0)), '771273994' COLLATE RTRIM, v0.c1)) ORDER BY (+ (CAST(vt0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((vt0.c0)>=(rt0.c0)), '771273994' COLLATE RTRIM, v0.c1)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (+ (CAST(vt0.c0 AS REAL))) DESC);
SELECT * FROM rt0, vt0, v0 WHERE (STRFTIME(((vt0.c0)>=(rt0.c0)), '771273994' COLLATE RTRIM, v0.c1)) ORDER BY (+ (CAST(vt0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((vt0.c0)>=(rt0.c0)), '771273994' COLLATE RTRIM, v0.c1)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (+ (CAST(vt0.c0 AS REAL))) DESC);
SELECT * FROM rt0, vt0, v0 WHERE (STRFTIME(((vt0.c0)>=(rt0.c0)), '771273994' COLLATE RTRIM, v0.c1)) ORDER BY (+ (CAST(vt0.c0 AS REAL))) DESC;
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((v0.c1))) THEN -347550915 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((v0.c1))) THEN -347550915 END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((v0.c1))) THEN -347550915 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((v0.c1))) THEN -347550915 END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((v0.c1))) THEN -347550915 END);
SELECT * FROM v0 WHERE ((+ ((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (NULL))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ ((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (NULL))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ ((NOT (NULL)))));
SELECT * FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY)GLOB((+ ('242240729')))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)GLOB((+ ('242240729'))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY)GLOB((+ ('242240729')))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)GLOB((+ ('242240729'))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY)GLOB((+ ('242240729')))));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)%(vt0.c0))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)%(vt0.c0))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)%(vt0.c0))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)%(vt0.c0))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)%(vt0.c0))) AND (((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LTRIM(json_array('0.014148106700953234', vt0.c0), (rt0.c4 IN (vt0.c0, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(json_array('0.014148106700953234', vt0.c0), (rt0.c4 IN (vt0.c0, rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LTRIM(json_array('0.014148106700953234', vt0.c0), (rt0.c4 IN (vt0.c0, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(json_array('0.014148106700953234', vt0.c0), (rt0.c4 IN (vt0.c0, rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LTRIM(json_array('0.014148106700953234', vt0.c0), (rt0.c4 IN (vt0.c0, rt0.c1))));
SELECT ALL * FROM rt0 WHERE (DATETIME(TYPEOF(DISTINCT rt0.c3), (+ (rt0.c0)), ((rt0.c4)>(rt0.c3)))) ORDER BY rt0.c2 DESC  NULLS FIRST, 1657680876 ASC, (((rt0.c3)) NOT BETWEEN ((((rt0.c2)%(rt0.c4)))) AND ((((((rt0.c3)AND(rt0.c4)))AND(rt0.c3))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(TYPEOF(DISTINCT rt0.c3), (+ (rt0.c0)), ((rt0.c4)>(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST, 1657680876 ASC, (((rt0.c3)) NOT BETWEEN ((((rt0.c2)%(rt0.c4)))) AND ((((((rt0.c3)AND(rt0.c4)))AND(rt0.c3))))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (DATETIME(TYPEOF(DISTINCT rt0.c3), (+ (rt0.c0)), ((rt0.c4)>(rt0.c3)))) ORDER BY rt0.c2 DESC  NULLS FIRST, 1657680876 ASC, (((rt0.c3)) NOT BETWEEN ((((rt0.c2)%(rt0.c4)))) AND ((((((rt0.c3)AND(rt0.c4)))AND(rt0.c3))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(TYPEOF(DISTINCT rt0.c3), (+ (rt0.c0)), ((rt0.c4)>(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST, 1657680876 ASC, (((rt0.c3)) NOT BETWEEN ((((rt0.c2)%(rt0.c4)))) AND ((((((rt0.c3)AND(rt0.c4)))AND(rt0.c3))))) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))AND(((('NaN'))==((rt0.c1))))))AND(CASE rt0.c3  WHEN v0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c2 THEN v0.c2 WHEN rt0.c2 THEN rt0.c3 END))) ORDER BY ((v0.c1 IN (rt0.c1, x'')) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))AND(((('NaN'))=((rt0.c1))))))AND(CASE rt0.c3  WHEN v0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c2 THEN v0.c2 WHEN rt0.c2 THEN rt0.c3 END))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((v0.c1 IN (rt0.c1, x'')) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))AND(((('NaN'))==((rt0.c1))))))AND(CASE rt0.c3  WHEN v0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c2 THEN v0.c2 WHEN rt0.c2 THEN rt0.c3 END))) ORDER BY ((v0.c1 IN (rt0.c1, x'')) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))AND(((('NaN'))=((rt0.c1))))))AND(CASE rt0.c3  WHEN v0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c2 THEN v0.c2 WHEN rt0.c2 THEN rt0.c3 END))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((v0.c1 IN (rt0.c1, x'')) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))AND(((('NaN'))==((rt0.c1))))))AND(CASE rt0.c3  WHEN v0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c2 THEN v0.c2 WHEN rt0.c2 THEN rt0.c3 END))) ORDER BY ((v0.c1 IN (rt0.c1, x'')) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS NUMERIC)))<=((NULL))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS NUMERIC)))<=((NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS NUMERIC)))<=((NULL))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS NUMERIC)))<=((NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS NUMERIC)))<=((NULL))));
SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0))>=((vt0.c0)))))) ORDER BY '5G' ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY '5G' ASC);
SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0))>=((vt0.c0)))))) ORDER BY '5G' ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY '5G' ASC);
SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0))>=((vt0.c0)))))) ORDER BY '5G' ASC;
SELECT * FROM v0, rt0, vt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (rt0.c4 COLLATE NOCASE) AND (((rt0.c3) BETWEEN (v0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC)) BETWEEN (rt0.c4 COLLATE NOCASE) AND (((rt0.c3) BETWEEN (v0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (rt0.c4 COLLATE NOCASE) AND (((rt0.c3) BETWEEN (v0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC)) BETWEEN (rt0.c4 COLLATE NOCASE) AND (((rt0.c3) BETWEEN (v0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (rt0.c4 COLLATE NOCASE) AND (((rt0.c3) BETWEEN (v0.c2) AND (rt0.c0)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((((NULL))>=((v0.c2)))) NOT BETWEEN (((((v0.c1)AND(v0.c0)))AND(v0.c0))) AND (v0.c0 COLLATE NOCASE)) WHERE (CASE ((vt0.c0)<=(v0.c1))  WHEN (+ (v0.c1)) THEN (v0.c1 IN (v0.c0)) END) ORDER BY CAST(((((((((v0.c1)AND(vt0.c0)))AND(v0.c2)))OR(v0.c1)))AND(vt0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<=(v0.c1))  WHEN (+ (v0.c1)) THEN (v0.c1 IN (v0.c0)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((((NULL))>=((v0.c2)))) NOT BETWEEN (((((v0.c1)AND(v0.c0)))AND(v0.c0))) AND (v0.c0 COLLATE NOCASE)) ORDER BY CAST(((((((((v0.c1)AND(vt0.c0)))AND(v0.c2)))OR(v0.c1)))AND(vt0.c0)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((((NULL))>=((v0.c2)))) NOT BETWEEN (((((v0.c1)AND(v0.c0)))AND(v0.c0))) AND (v0.c0 COLLATE NOCASE)) WHERE (CASE ((vt0.c0)<=(v0.c1))  WHEN (+ (v0.c1)) THEN (v0.c1 IN (v0.c0)) END) ORDER BY CAST(((((((((v0.c1)AND(vt0.c0)))AND(v0.c2)))OR(v0.c1)))AND(vt0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<=(v0.c1))  WHEN (+ (v0.c1)) THEN (v0.c1 IN (v0.c0)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((((NULL))>=((v0.c2)))) NOT BETWEEN (((((v0.c1)AND(v0.c0)))AND(v0.c0))) AND (v0.c0 COLLATE NOCASE)) ORDER BY CAST(((((((((v0.c1)AND(vt0.c0)))AND(v0.c2)))OR(v0.c1)))AND(vt0.c0)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((((NULL))>=((v0.c2)))) NOT BETWEEN (((((v0.c1)AND(v0.c0)))AND(v0.c0))) AND (v0.c0 COLLATE NOCASE)) WHERE (CASE ((vt0.c0)<=(v0.c1))  WHEN (+ (v0.c1)) THEN (v0.c1 IN (v0.c0)) END) ORDER BY CAST(((((((((v0.c1)AND(vt0.c0)))AND(v0.c2)))OR(v0.c1)))AND(vt0.c0)) AS BLOB)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)>>('-2081353167')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)>>('-2081353167')) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)>>('-2081353167')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)>>('-2081353167')) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)>>('-2081353167')) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))IS(CAST(rt0.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))IS(CAST(rt0.c3 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))IS(CAST(rt0.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))IS(CAST(rt0.c3 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))IS(CAST(rt0.c3 AS BLOB))));
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c1) NOT BETWEEN (v0.c0) AND (x'87ee')))AND(((v0.c2)&(v0.c0)))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1) NOT BETWEEN (v0.c0) AND (x'87ee')))AND(((v0.c2)&(v0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c1) NOT BETWEEN (v0.c0) AND (x'87ee')))AND(((v0.c2)&(v0.c0)))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1) NOT BETWEEN (v0.c0) AND (x'87ee')))AND(((v0.c2)&(v0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c1) NOT BETWEEN (v0.c0) AND (x'87ee')))AND(((v0.c2)&(v0.c0)))))OR(vt0.c0)));
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((((rt0.c3)OR(v0.c0)))OR(v0.c2)))IS(((rt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))))) ORDER BY ((vt0.c0)IS NOT(v0.c2)) COLLATE RTRIM COLLATE BINARY, ((((rt0.c1) NOT BETWEEN ('-509413787') AND (rt0.c2))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)OR(v0.c0)))OR(v0.c2)))IS(((rt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((vt0.c0)IS NOT(v0.c2)) COLLATE RTRIM COLLATE BINARY, ((((rt0.c1) NOT BETWEEN ('-509413787') AND (rt0.c2))) NOT NULL));
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((((rt0.c3)OR(v0.c0)))OR(v0.c2)))IS(((rt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))))) ORDER BY ((vt0.c0)IS NOT(v0.c2)) COLLATE RTRIM COLLATE BINARY, ((((rt0.c1) NOT BETWEEN ('-509413787') AND (rt0.c2))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)OR(v0.c0)))OR(v0.c2)))IS(((rt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((vt0.c0)IS NOT(v0.c2)) COLLATE RTRIM COLLATE BINARY, ((((rt0.c1) NOT BETWEEN ('-509413787') AND (rt0.c2))) NOT NULL));
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((((rt0.c3)OR(v0.c0)))OR(v0.c2)))IS(((rt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))))) ORDER BY ((vt0.c0)IS NOT(v0.c2)) COLLATE RTRIM COLLATE BINARY, ((((rt0.c1) NOT BETWEEN ('-509413787') AND (rt0.c2))) NOT NULL);
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON CASE CASE rt0.c4  WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END  WHEN ((((v0.c2)OR(rt0.c4)))OR(rt0.c2)) THEN x'' END WHERE ((((v0.c0) NOTNULL) IN ())) ORDER BY (((rt0.c4, v0.c1, rt0.c4)) BETWEEN ((MIN(rt0.c3, v0.c1, vt0.c0, rt0.c4), ((v0.c1)>>(v0.c2)), ABS(rt0.c1))) AND ((((rt0.c2)|(v0.c0)), ((rt0.c1)|(vt0.c0)), rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON CASE CASE rt0.c4  WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END  WHEN ((((v0.c2)OR(rt0.c4)))OR(rt0.c2)) THEN x'' END ORDER BY (((rt0.c4, v0.c1, rt0.c4)) BETWEEN ((MIN(rt0.c3, v0.c1, vt0.c0, rt0.c4), ((v0.c1)>>(v0.c2)), ABS(rt0.c1))) AND ((((rt0.c2)|(v0.c0)), ((rt0.c1)|(vt0.c0)), rt0.c1 COLLATE RTRIM))));
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON CASE CASE rt0.c4  WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END  WHEN ((((v0.c2)OR(rt0.c4)))OR(rt0.c2)) THEN x'' END WHERE ((((v0.c0) NOTNULL) IN ())) ORDER BY (((rt0.c4, v0.c1, rt0.c4)) BETWEEN ((MIN(rt0.c3, v0.c1, vt0.c0, rt0.c4), ((v0.c1)>>(v0.c2)), ABS(rt0.c1))) AND ((((rt0.c2)|(v0.c0)), ((rt0.c1)|(vt0.c0)), rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON CASE CASE rt0.c4  WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END  WHEN ((((v0.c2)OR(rt0.c4)))OR(rt0.c2)) THEN x'' END ORDER BY (((rt0.c4, v0.c1, rt0.c4)) BETWEEN ((MIN(rt0.c3, v0.c1, vt0.c0, rt0.c4), ((v0.c1)>>(v0.c2)), ABS(rt0.c1))) AND ((((rt0.c2)|(v0.c0)), ((rt0.c1)|(vt0.c0)), rt0.c1 COLLATE RTRIM))));
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON CASE CASE rt0.c4  WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END  WHEN ((((v0.c2)OR(rt0.c4)))OR(rt0.c2)) THEN x'' END WHERE ((((v0.c0) NOTNULL) IN ())) ORDER BY (((rt0.c4, v0.c1, rt0.c4)) BETWEEN ((MIN(rt0.c3, v0.c1, vt0.c0, rt0.c4), ((v0.c1)>>(v0.c2)), ABS(rt0.c1))) AND ((((rt0.c2)|(v0.c0)), ((rt0.c1)|(vt0.c0)), rt0.c1 COLLATE RTRIM)));
SELECT * FROM v0 WHERE ((((('')OR(((((v0.c2)AND('1900563854')))OR(v0.c0)))))AND(((v0.c2) IS FALSE)))) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT (((((('')OR(((((v0.c2)AND('1900563854')))OR(v0.c0)))))AND(((v0.c2) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT * FROM v0 WHERE ((((('')OR(((((v0.c2)AND('1900563854')))OR(v0.c0)))))AND(((v0.c2) IS FALSE)))) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT (((((('')OR(((((v0.c2)AND('1900563854')))OR(v0.c0)))))AND(((v0.c2) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT * FROM v0 WHERE ((((('')OR(((((v0.c2)AND('1900563854')))OR(v0.c0)))))AND(((v0.c2) IS FALSE)))) ORDER BY v0.c1;
SELECT ALL * FROM v0, rt0, vt0 WHERE (LIKELIHOOD(v0.c2, 0.5175789838015014) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(v0.c2, 0.5175789838015014) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (LIKELIHOOD(v0.c2, 0.5175789838015014) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(v0.c2, 0.5175789838015014) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (LIKELIHOOD(v0.c2, 0.5175789838015014) COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (LOWER(v0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((LOWER(v0.c2) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LOWER(v0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((LOWER(v0.c2) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LOWER(v0.c2) COLLATE NOCASE);
SELECT ALL * FROM v0, rt0 WHERE ((((((((v0.c0, NULL, rt0.c1))<=((v0.c0, rt0.c1, v0.c2))))AND(NULL)))OR(((v0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, NULL, rt0.c1))<=((v0.c0, rt0.c1, v0.c2))))AND(NULL)))OR(((v0.c1) ISNULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((((v0.c0, NULL, rt0.c1))<=((v0.c0, rt0.c1, v0.c2))))AND(NULL)))OR(((v0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, NULL, rt0.c1))<=((v0.c0, rt0.c1, v0.c2))))AND(NULL)))OR(((v0.c1) ISNULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((((v0.c0, NULL, rt0.c1))<=((v0.c0, rt0.c1, v0.c2))))AND(NULL)))OR(((v0.c1) ISNULL))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((rt0.c4)AND(v0.c0)))AND(vt0.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1))) NOTNULL) WHERE (((v0.c0)<>(rt0.c2)) COLLATE NOCASE) ORDER BY (((vt0.c0, rt0.c0, rt0.c2)) BETWEEN ((INSTR(rt0.c3, v0.c2), CASE rt0.c3  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END, CAST(rt0.c4 AS INTEGER))) AND ((((rt0.c4)GLOB(v0.c0)), (rt0.c0 IN ()), COALESCE(v0.c2, rt0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)!=(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c4)AND(v0.c0)))AND(vt0.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1))) NOTNULL) ORDER BY (((vt0.c0, rt0.c0, rt0.c2)) BETWEEN ((INSTR(rt0.c3, v0.c2), CASE rt0.c3  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END, CAST(rt0.c4 AS INTEGER))) AND ((((rt0.c4)GLOB(v0.c0)), (rt0.c0 IN ()), COALESCE(v0.c2, rt0.c4)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((rt0.c4)AND(v0.c0)))AND(vt0.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1))) NOTNULL) WHERE (((v0.c0)<>(rt0.c2)) COLLATE NOCASE) ORDER BY (((vt0.c0, rt0.c0, rt0.c2)) BETWEEN ((INSTR(rt0.c3, v0.c2), CASE rt0.c3  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END, CAST(rt0.c4 AS INTEGER))) AND ((((rt0.c4)GLOB(v0.c0)), (rt0.c0 IN ()), COALESCE(v0.c2, rt0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)!=(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c4)AND(v0.c0)))AND(vt0.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1))) NOTNULL) ORDER BY (((vt0.c0, rt0.c0, rt0.c2)) BETWEEN ((INSTR(rt0.c3, v0.c2), CASE rt0.c3  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END, CAST(rt0.c4 AS INTEGER))) AND ((((rt0.c4)GLOB(v0.c0)), (rt0.c0 IN ()), COALESCE(v0.c2, rt0.c4)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 CROSS JOIN rt0 ON ((((((rt0.c4)/(rt0.c3)))OR(CAST(rt0.c0 AS REAL))))AND(TRIM(DISTINCT rt0.c0))) WHERE (((((((rt0.c0)GLOB(v0.c1)))AND((~ (rt0.c0)))))AND(((rt0.c0) NOTNULL)))) ORDER BY ((CAST(v0.c1 AS BLOB))IS(CASE v0.c1  WHEN 0.8109493894472074 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)GLOB(v0.c1)))AND((~ (rt0.c0)))))AND(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON ((((((rt0.c4)/(rt0.c3)))OR(CAST(rt0.c0 AS REAL))))AND(TRIM(DISTINCT rt0.c0))) ORDER BY ((CAST(v0.c1 AS BLOB))IS(CASE v0.c1  WHEN 0.8109493894472074 THEN vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 CROSS JOIN rt0 ON ((((((rt0.c4)/(rt0.c3)))OR(CAST(rt0.c0 AS REAL))))AND(TRIM(DISTINCT rt0.c0))) WHERE (((((((rt0.c0)GLOB(v0.c1)))AND((~ (rt0.c0)))))AND(((rt0.c0) NOTNULL)))) ORDER BY ((CAST(v0.c1 AS BLOB))IS(CASE v0.c1  WHEN 0.8109493894472074 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)GLOB(v0.c1)))AND((~ (rt0.c0)))))AND(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON ((((((rt0.c4)/(rt0.c3)))OR(CAST(rt0.c0 AS REAL))))AND(TRIM(DISTINCT rt0.c0))) ORDER BY ((CAST(v0.c1 AS BLOB))IS(CASE v0.c1  WHEN 0.8109493894472074 THEN vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 CROSS JOIN rt0 ON ((((((rt0.c4)/(rt0.c3)))OR(CAST(rt0.c0 AS REAL))))AND(TRIM(DISTINCT rt0.c0))) WHERE (((((((rt0.c0)GLOB(v0.c1)))AND((~ (rt0.c0)))))AND(((rt0.c0) NOTNULL)))) ORDER BY ((CAST(v0.c1 AS BLOB))IS(CASE v0.c1  WHEN 0.8109493894472074 THEN vt0.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY rt0.c3);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY rt0.c3);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)) ORDER BY rt0.c3;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) IS FALSE)) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END AS INTEGER) DESC, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('&N4tW\-qO', CAST('-650298686' AS NUMERIC), vt0.c0)) AND ((((vt0.c0) ISNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC, (~ (CAST(vt0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END AS INTEGER) DESC, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('&N4tW\-qO', CAST('-650298686' AS NUMERIC), vt0.c0)) AND ((((vt0.c0) ISNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC, (~ (CAST(vt0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) IS FALSE)) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END AS INTEGER) DESC, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('&N4tW\-qO', CAST('-650298686' AS NUMERIC), vt0.c0)) AND ((((vt0.c0) ISNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC, (~ (CAST(vt0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END AS INTEGER) DESC, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('&N4tW\-qO', CAST('-650298686' AS NUMERIC), vt0.c0)) AND ((((vt0.c0) ISNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC, (~ (CAST(vt0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) IS FALSE)) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END AS INTEGER) DESC, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('&N4tW\-qO', CAST('-650298686' AS NUMERIC), vt0.c0)) AND ((((vt0.c0) ISNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC, (~ (CAST(vt0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c3)AND((rt0.c0 IN ()))))OR(CASE '-1595427568'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)AND((rt0.c0 IN ()))))OR(CASE '-1595427568'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c3)AND((rt0.c0 IN ()))))OR(CASE '-1595427568'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)AND((rt0.c0 IN ()))))OR(CASE '-1595427568'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c3)AND((rt0.c0 IN ()))))OR(CASE '-1595427568'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 END)));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((v0.c2)) NOT BETWEEN (('LN')) AND ((rt0.c4))) COLLATE BINARY) ORDER BY (- (((v0.c0) IS TRUE))) DESC, ((((vt0.c0) BETWEEN (v0.c2) AND (0.6090172857627492))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c3 END) AND ((((NULL))<((rt0.c0))))), ((((v0.c0 COLLATE BINARY)AND((rt0.c3 IN (rt0.c0)))))AND(((((((((v0.c1)AND(vt0.c0)))OR(v0.c0)))OR(rt0.c4)))OR(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c2)) NOT BETWEEN (('LN')) AND ((rt0.c4))) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (- (((v0.c0) IS TRUE))) DESC, ((((vt0.c0) BETWEEN (v0.c2) AND (0.6090172857627492))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c3 END) AND ((((NULL))<((rt0.c0))))), ((((v0.c0 COLLATE BINARY)AND((rt0.c3 IN (rt0.c0)))))AND(((((((((v0.c1)AND(vt0.c0)))OR(v0.c0)))OR(rt0.c4)))OR(v0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((v0.c2)) NOT BETWEEN (('LN')) AND ((rt0.c4))) COLLATE BINARY) ORDER BY (- (((v0.c0) IS TRUE))) DESC, ((((vt0.c0) BETWEEN (v0.c2) AND (0.6090172857627492))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c3 END) AND ((((NULL))<((rt0.c0))))), ((((v0.c0 COLLATE BINARY)AND((rt0.c3 IN (rt0.c0)))))AND(((((((((v0.c1)AND(vt0.c0)))OR(v0.c0)))OR(rt0.c4)))OR(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c2)) NOT BETWEEN (('LN')) AND ((rt0.c4))) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (- (((v0.c0) IS TRUE))) DESC, ((((vt0.c0) BETWEEN (v0.c2) AND (0.6090172857627492))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c3 END) AND ((((NULL))<((rt0.c0))))), ((((v0.c0 COLLATE BINARY)AND((rt0.c3 IN (rt0.c0)))))AND(((((((((v0.c1)AND(vt0.c0)))OR(v0.c0)))OR(rt0.c4)))OR(v0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((v0.c2)) NOT BETWEEN (('LN')) AND ((rt0.c4))) COLLATE BINARY) ORDER BY (- (((v0.c0) IS TRUE))) DESC, ((((vt0.c0) BETWEEN (v0.c2) AND (0.6090172857627492))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c3 END) AND ((((NULL))<((rt0.c0))))), ((((v0.c0 COLLATE BINARY)AND((rt0.c3 IN (rt0.c0)))))AND(((((((((v0.c1)AND(vt0.c0)))OR(v0.c0)))OR(rt0.c4)))OR(v0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)%(rt0.c0))) ORDER BY 1.768132881E9;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)%(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY 1.768132881E9);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)%(rt0.c0))) ORDER BY 1.768132881E9;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)%(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY 1.768132881E9);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)%(rt0.c0))) ORDER BY 1.768132881E9;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (((rt0.c2)AND(rt0.c2))) AND (((((x'')AND(vt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT BETWEEN (((rt0.c2)AND(rt0.c2))) AND (((((x'')AND(vt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (((rt0.c2)AND(rt0.c2))) AND (((((x'')AND(vt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT BETWEEN (((rt0.c2)AND(rt0.c2))) AND (((((x'')AND(vt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (((rt0.c2)AND(rt0.c2))) AND (((((x'')AND(vt0.c0)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT 150023899)) ORDER BY CASE 0x4972e783  WHEN '' THEN TYPEOF(vt0.c0) END DESC  NULLS FIRST, ((((((((((vt0.c0)>>(vt0.c0)))OR((NOT (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)!=(NULL)))))AND(((vt0.c0)+(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT 150023899)) IS TRUE)  as count FROM vt0 ORDER BY CASE 0x4972e783  WHEN '' THEN TYPEOF(vt0.c0) END DESC  NULLS FIRST, ((((((((((vt0.c0)>>(vt0.c0)))OR((NOT (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)!=(NULL)))))AND(((vt0.c0)+(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT 150023899)) ORDER BY CASE 0x4972e783  WHEN '' THEN TYPEOF(vt0.c0) END DESC  NULLS FIRST, ((((((((((vt0.c0)>>(vt0.c0)))OR((NOT (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)!=(NULL)))))AND(((vt0.c0)+(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT 150023899)) IS TRUE)  as count FROM vt0 ORDER BY CASE 0x4972e783  WHEN '' THEN TYPEOF(vt0.c0) END DESC  NULLS FIRST, ((((((((((vt0.c0)>>(vt0.c0)))OR((NOT (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)!=(NULL)))))AND(((vt0.c0)+(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT 150023899)) ORDER BY CASE 0x4972e783  WHEN '' THEN TYPEOF(vt0.c0) END DESC  NULLS FIRST, ((((((((((vt0.c0)>>(vt0.c0)))OR((NOT (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)!=(NULL)))))AND(((vt0.c0)+(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((- (rt0.c3)) IN ())) ORDER BY ((158333329 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((158333329 IN ()) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((- (rt0.c3)) IN ())) ORDER BY ((158333329 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((158333329 IN ()) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((- (rt0.c3)) IN ())) ORDER BY ((158333329 IN ()) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((((NOT (vt0.c0)))OR((v0.c0 IN ()))))AND(vt0.c0)) INNER JOIN rt0 ON v0.c0 WHERE (NULL) ORDER BY (((v0.c1)==(0.34277325796644953)) IN (v0.c0 COLLATE RTRIM, (rt0.c1 IN (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((((NOT (vt0.c0)))OR((v0.c0 IN ()))))AND(vt0.c0)) INNER JOIN rt0 ON v0.c0 ORDER BY (((v0.c1)=(0.34277325796644953)) IN (v0.c0 COLLATE RTRIM, (rt0.c1 IN (rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((((NOT (vt0.c0)))OR((v0.c0 IN ()))))AND(vt0.c0)) INNER JOIN rt0 ON v0.c0 WHERE (NULL) ORDER BY (((v0.c1)==(0.34277325796644953)) IN (v0.c0 COLLATE RTRIM, (rt0.c1 IN (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((((NOT (vt0.c0)))OR((v0.c0 IN ()))))AND(vt0.c0)) INNER JOIN rt0 ON v0.c0 ORDER BY (((v0.c1)=(0.34277325796644953)) IN (v0.c0 COLLATE RTRIM, (rt0.c1 IN (rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((((NOT (vt0.c0)))OR((v0.c0 IN ()))))AND(vt0.c0)) INNER JOIN rt0 ON v0.c0 WHERE (NULL) ORDER BY (((v0.c1)==(0.34277325796644953)) IN (v0.c0 COLLATE RTRIM, (rt0.c1 IN (rt0.c2)))) ASC;
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((((((((((((rt0.c4)AND(v0.c2)))AND('N')))AND(rt0.c2)))OR(rt0.c2)))OR(((rt0.c0)>(0.26723304311116125)))))AND(((rt0.c3) NOT NULL))) WHERE (TYPEOF(DISTINCT CASE '7'  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END)) ORDER BY (NOT (((rt0.c4) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CASE '7'  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((((((((((rt0.c4)AND(v0.c2)))AND('N')))AND(rt0.c2)))OR(rt0.c2)))OR(((rt0.c0)>(0.26723304311116125)))))AND(((rt0.c3) NOT NULL))) ORDER BY (NOT (((rt0.c4) IS TRUE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((((((((((((rt0.c4)AND(v0.c2)))AND('N')))AND(rt0.c2)))OR(rt0.c2)))OR(((rt0.c0)>(0.26723304311116125)))))AND(((rt0.c3) NOT NULL))) WHERE (TYPEOF(DISTINCT CASE '7'  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END)) ORDER BY (NOT (((rt0.c4) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CASE '7'  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((((((((((rt0.c4)AND(v0.c2)))AND('N')))AND(rt0.c2)))OR(rt0.c2)))OR(((rt0.c0)>(0.26723304311116125)))))AND(((rt0.c3) NOT NULL))) ORDER BY (NOT (((rt0.c4) IS TRUE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((((((((((((rt0.c4)AND(v0.c2)))AND('N')))AND(rt0.c2)))OR(rt0.c2)))OR(((rt0.c0)>(0.26723304311116125)))))AND(((rt0.c3) NOT NULL))) WHERE (TYPEOF(DISTINCT CASE '7'  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END)) ORDER BY (NOT (((rt0.c4) IS TRUE))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, v0, vt0 WHERE ('2ۆ~');
SELECT SUM(count) FROM (SELECT (('2ۆ~') IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ('2ۆ~');
SELECT SUM(count) FROM (SELECT (('2ۆ~') IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ('2ۆ~');
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((TIME(v0.c1, v0.c1, rt0.c1))>(((((v0.c2)OR(rt0.c1)))AND(rt0.c3)))) WHERE (((((rt0.c0)|(v0.c2))) NOT NULL)) ORDER BY ((CASE WHEN v0.c1 THEN rt0.c3 ELSE v0.c0 END) BETWEEN (((NULL)<>(rt0.c1))) AND (CAST(rt0.c4 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)|(v0.c2))) NOT NULL)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((TIME(v0.c1, v0.c1, rt0.c1))>(((((v0.c2)OR(rt0.c1)))AND(rt0.c3)))) ORDER BY ((CASE WHEN v0.c1 THEN rt0.c3 ELSE v0.c0 END) BETWEEN (((NULL)!=(rt0.c1))) AND (CAST(rt0.c4 AS BLOB))));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((TIME(v0.c1, v0.c1, rt0.c1))>(((((v0.c2)OR(rt0.c1)))AND(rt0.c3)))) WHERE (((((rt0.c0)|(v0.c2))) NOT NULL)) ORDER BY ((CASE WHEN v0.c1 THEN rt0.c3 ELSE v0.c0 END) BETWEEN (((NULL)<>(rt0.c1))) AND (CAST(rt0.c4 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)|(v0.c2))) NOT NULL)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((TIME(v0.c1, v0.c1, rt0.c1))>(((((v0.c2)OR(rt0.c1)))AND(rt0.c3)))) ORDER BY ((CASE WHEN v0.c1 THEN rt0.c3 ELSE v0.c0 END) BETWEEN (((NULL)!=(rt0.c1))) AND (CAST(rt0.c4 AS BLOB))));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((TIME(v0.c1, v0.c1, rt0.c1))>(((((v0.c2)OR(rt0.c1)))AND(rt0.c3)))) WHERE (((((rt0.c0)|(v0.c2))) NOT NULL)) ORDER BY ((CASE WHEN v0.c1 THEN rt0.c3 ELSE v0.c0 END) BETWEEN (((NULL)<>(rt0.c1))) AND (CAST(rt0.c4 AS BLOB)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c0) IS FALSE)) AND ((rt0.c0 IN (rt0.c4))))) ORDER BY 0.06082494707911412 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) BETWEEN (((rt0.c0) IS FALSE)) AND ((rt0.c0 IN (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY 0.06082494707911412 ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c0) IS FALSE)) AND ((rt0.c0 IN (rt0.c4))))) ORDER BY 0.06082494707911412 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) BETWEEN (((rt0.c0) IS FALSE)) AND ((rt0.c0 IN (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY 0.06082494707911412 ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c0) IS FALSE)) AND ((rt0.c0 IN (rt0.c4))))) ORDER BY 0.06082494707911412 ASC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE ('529025780') ORDER BY SQLITE_VERSION() ASC;
SELECT SUM(count) FROM (SELECT (('529025780') IS TRUE)  as count FROM vt0, rt0 ORDER BY SQLITE_VERSION() ASC);
SELECT * FROM vt0, rt0 WHERE ('529025780') ORDER BY SQLITE_VERSION() ASC;
SELECT SUM(count) FROM (SELECT (('529025780') IS TRUE)  as count FROM vt0, rt0 ORDER BY SQLITE_VERSION() ASC);
SELECT * FROM vt0, rt0 WHERE ('529025780') ORDER BY SQLITE_VERSION() ASC;
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY vt0.c0 ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN rt0.c4 THEN rt0.c3 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c4 THEN rt0.c3 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN rt0.c4 THEN rt0.c3 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c4 THEN rt0.c3 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN rt0.c4 THEN rt0.c3 END COLLATE NOCASE);
SELECT * FROM v0 WHERE (0.7963681749373983) ORDER BY (((v0.c2) IS FALSE) IN ((v0.c1 IN (v0.c0, v0.c1)), ((v0.c1)IS NOT(v0.c2)))), v0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.7963681749373983) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2) IS FALSE) IN ((v0.c1 IN (v0.c0, v0.c1)), ((v0.c1)IS NOT(v0.c2)))), v0.c2 DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (0.7963681749373983) ORDER BY (((v0.c2) IS FALSE) IN ((v0.c1 IN (v0.c0, v0.c1)), ((v0.c1)IS NOT(v0.c2)))), v0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.7963681749373983) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2) IS FALSE) IN ((v0.c1 IN (v0.c0, v0.c1)), ((v0.c1)IS NOT(v0.c2)))), v0.c2 DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (0.7963681749373983) ORDER BY (((v0.c2) IS FALSE) IN ((v0.c1 IN (v0.c0, v0.c1)), ((v0.c1)IS NOT(v0.c2)))), v0.c2 DESC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c0) IS TRUE) WHERE ((((v0.c2 IN ())) IS FALSE)) ORDER BY ((((((((((((v0.c0)OR(((v0.c1) IS TRUE))))OR(json_array_length(vt0.c0, vt0.c0))))OR(((((-1.595427568E9)AND(0.25997109575311783)))OR(vt0.c0)))))AND(((vt0.c0)>(vt0.c0)))))OR('4+')))OR(LIKELIHOOD(DISTINCT v0.c2, 0.8111732020626118))) ASC, (json_object(vt0.c0, v0.c2) IN (CASE WHEN v0.c0 THEN v0.c1 ELSE vt0.c0 END, vt0.c0 COLLATE BINARY)) ASC  NULLS LAST, ((vt0.c0) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c0) IS TRUE) ORDER BY ((((((((((((v0.c0)OR(((v0.c1) IS TRUE))))OR(json_array_length(vt0.c0, vt0.c0))))OR(((((-1.595427568E9)AND(0.25997109575311783)))OR(vt0.c0)))))AND(((vt0.c0)>(vt0.c0)))))OR('4+')))OR(LIKELIHOOD(DISTINCT v0.c2, 0.8111732020626118))) ASC, (json_object(vt0.c0, v0.c2) IN (CASE WHEN v0.c0 THEN v0.c1 ELSE vt0.c0 END, vt0.c0 COLLATE BINARY)) ASC  NULLS LAST, ((vt0.c0) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c0) IS TRUE) WHERE ((((v0.c2 IN ())) IS FALSE)) ORDER BY ((((((((((((v0.c0)OR(((v0.c1) IS TRUE))))OR(json_array_length(vt0.c0, vt0.c0))))OR(((((-1.595427568E9)AND(0.25997109575311783)))OR(vt0.c0)))))AND(((vt0.c0)>(vt0.c0)))))OR('4+')))OR(LIKELIHOOD(DISTINCT v0.c2, 0.8111732020626118))) ASC, (json_object(vt0.c0, v0.c2) IN (CASE WHEN v0.c0 THEN v0.c1 ELSE vt0.c0 END, vt0.c0 COLLATE BINARY)) ASC  NULLS LAST, ((vt0.c0) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c0) IS TRUE) ORDER BY ((((((((((((v0.c0)OR(((v0.c1) IS TRUE))))OR(json_array_length(vt0.c0, vt0.c0))))OR(((((-1.595427568E9)AND(0.25997109575311783)))OR(vt0.c0)))))AND(((vt0.c0)>(vt0.c0)))))OR('4+')))OR(LIKELIHOOD(DISTINCT v0.c2, 0.8111732020626118))) ASC, (json_object(vt0.c0, v0.c2) IN (CASE WHEN v0.c0 THEN v0.c1 ELSE vt0.c0 END, vt0.c0 COLLATE BINARY)) ASC  NULLS LAST, ((vt0.c0) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((NOT (v0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((NOT (v0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((NOT (v0.c0)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CASE ((x'')*(v0.c2))  WHEN ((rt0.c2)*(rt0.c3)) THEN rt0.c4 ELSE COALESCE(rt0.c2, rt0.c2, rt0.c2, rt0.c4) END) ORDER BY 0.27033092667102554, CASE ((v0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN NULL THEN ((((v0.c1)OR(rt0.c4)))AND(rt0.c0)) ELSE ((rt0.c2)<<(v0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((x'')*(v0.c2))  WHEN ((rt0.c2)*(rt0.c3)) THEN rt0.c4 ELSE COALESCE(rt0.c2, rt0.c2, rt0.c2, rt0.c4) END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY 0.27033092667102554, CASE ((v0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN NULL THEN ((((v0.c1)OR(rt0.c4)))AND(rt0.c0)) ELSE ((rt0.c2)<<(v0.c1)) END DESC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CASE ((x'')*(v0.c2))  WHEN ((rt0.c2)*(rt0.c3)) THEN rt0.c4 ELSE COALESCE(rt0.c2, rt0.c2, rt0.c2, rt0.c4) END) ORDER BY 0.27033092667102554, CASE ((v0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN NULL THEN ((((v0.c1)OR(rt0.c4)))AND(rt0.c0)) ELSE ((rt0.c2)<<(v0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((x'')*(v0.c2))  WHEN ((rt0.c2)*(rt0.c3)) THEN rt0.c4 ELSE COALESCE(rt0.c2, rt0.c2, rt0.c2, rt0.c4) END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY 0.27033092667102554, CASE ((v0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN NULL THEN ((((v0.c1)OR(rt0.c4)))AND(rt0.c0)) ELSE ((rt0.c2)<<(v0.c1)) END DESC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CASE ((x'')*(v0.c2))  WHEN ((rt0.c2)*(rt0.c3)) THEN rt0.c4 ELSE COALESCE(rt0.c2, rt0.c2, rt0.c2, rt0.c4) END) ORDER BY 0.27033092667102554, CASE ((v0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN NULL THEN ((((v0.c1)OR(rt0.c4)))AND(rt0.c0)) ELSE ((rt0.c2)<<(v0.c1)) END DESC;
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((- (rt0.c0)))%(((((rt0.c3)AND(rt0.c4)))OR(v0.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (rt0.c1) AND (x''))) NOTNULL) DESC, ((rt0.c0) BETWEEN (rt0.c3) AND (v0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0)))%(((((rt0.c3)AND(rt0.c4)))OR(v0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (rt0.c1) AND (x''))) NOTNULL) DESC, ((rt0.c0) BETWEEN (rt0.c3) AND (v0.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((- (rt0.c0)))%(((((rt0.c3)AND(rt0.c4)))OR(v0.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (rt0.c1) AND (x''))) NOTNULL) DESC, ((rt0.c0) BETWEEN (rt0.c3) AND (v0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0)))%(((((rt0.c3)AND(rt0.c4)))OR(v0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (rt0.c1) AND (x''))) NOTNULL) DESC, ((rt0.c0) BETWEEN (rt0.c3) AND (v0.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((- (rt0.c0)))%(((((rt0.c3)AND(rt0.c4)))OR(v0.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (rt0.c1) AND (x''))) NOTNULL) DESC, ((rt0.c0) BETWEEN (rt0.c3) AND (v0.c0)) COLLATE RTRIM;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0)>(x'63de'))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)>(x'63de'))) ISNULL) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0)>(x'63de'))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)>(x'63de'))) ISNULL) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0)>(x'63de'))) ISNULL) ASC;
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((vt0.c0)GLOB(v0.c1)) THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c0 WHEN ((v0.c2)IS(vt0.c0)) THEN (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)GLOB(v0.c1)) THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c0 WHEN ((v0.c2)IS(vt0.c0)) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((vt0.c0)GLOB(v0.c1)) THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c0 WHEN ((v0.c2)IS(vt0.c0)) THEN (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)GLOB(v0.c1)) THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c0 WHEN ((v0.c2)IS(vt0.c0)) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((vt0.c0)GLOB(v0.c1)) THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c0 WHEN ((v0.c2)IS(vt0.c0)) THEN (~ (vt0.c0)) END);
SELECT COUNT(*) FROM vt0, v0 WHERE ((0.607677780852354 IN ((((v0.c1))!=((vt0.c0)))))) ORDER BY (((v0.c2)) BETWEEN ((((v0.c0) IS FALSE))) AND (((- (v0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((0.607677780852354 IN ((((v0.c1))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c2)) BETWEEN ((((v0.c0) IS FALSE))) AND (((- (v0.c2))))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((0.607677780852354 IN ((((v0.c1))!=((vt0.c0)))))) ORDER BY (((v0.c2)) BETWEEN ((((v0.c0) IS FALSE))) AND (((- (v0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((0.607677780852354 IN ((((v0.c1))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c2)) BETWEEN ((((v0.c0) IS FALSE))) AND (((- (v0.c2))))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((0.607677780852354 IN ((((v0.c1))!=((vt0.c0)))))) ORDER BY (((v0.c2)) BETWEEN ((((v0.c0) IS FALSE))) AND (((- (v0.c2))))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c4 AS BLOB)) IS FALSE)) ORDER BY 0.18927848790775692 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c4 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY 0.18927848790775692 DESC);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c4 AS BLOB)) IS FALSE)) ORDER BY 0.18927848790775692 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c4 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY 0.18927848790775692 DESC);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c4 AS BLOB)) IS FALSE)) ORDER BY 0.18927848790775692 DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c0)&(vt0.c0)), LOWER('cR1'))) AND ((((x'')<>(vt0.c0)), x'', ((vt0.c0)>(vt0.c0)))))) ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS INTEGER), ((((vt0.c0)|(vt0.c0)))||('1360031757')) ASC  NULLS LAST, ((((vt0.c0)%(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c0)&(vt0.c0)), LOWER('cR1'))) AND ((((x'')<>(vt0.c0)), x'', ((vt0.c0)>(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS INTEGER), ((((vt0.c0)|(vt0.c0)))||('1360031757')) ASC  NULLS LAST, ((((vt0.c0)%(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c0)&(vt0.c0)), LOWER('cR1'))) AND ((((x'')<>(vt0.c0)), x'', ((vt0.c0)>(vt0.c0)))))) ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS INTEGER), ((((vt0.c0)|(vt0.c0)))||('1360031757')) ASC  NULLS LAST, ((((vt0.c0)%(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c0)&(vt0.c0)), LOWER('cR1'))) AND ((((x'')<>(vt0.c0)), x'', ((vt0.c0)>(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS INTEGER), ((((vt0.c0)|(vt0.c0)))||('1360031757')) ASC  NULLS LAST, ((((vt0.c0)%(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c0)&(vt0.c0)), LOWER('cR1'))) AND ((((x'')<>(vt0.c0)), x'', ((vt0.c0)>(vt0.c0)))))) ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS INTEGER), ((((vt0.c0)|(vt0.c0)))||('1360031757')) ASC  NULLS LAST, ((((vt0.c0)%(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (((v0.c0)>=(v0.c2)) COLLATE NOCASE) ORDER BY ROUND((- (v0.c0)), CAST(v0.c0 AS BLOB)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>=(v0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ROUND((- (v0.c0)), CAST(v0.c0 AS BLOB)) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0)>=(v0.c2)) COLLATE NOCASE) ORDER BY ROUND((- (v0.c0)), CAST(v0.c0 AS BLOB)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>=(v0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ROUND((- (v0.c0)), CAST(v0.c0 AS BLOB)) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0)>=(v0.c2)) COLLATE NOCASE) ORDER BY ROUND((- (v0.c0)), CAST(v0.c0 AS BLOB)) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0, v0 WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (0.16986972601399142) AND (((v0.c1) BETWEEN (rt0.c4) AND (x''))))) ORDER BY ((CASE rt0.c0  WHEN v0.c1 THEN 1090877059 END) ISNULL);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB)) BETWEEN (0.16986972601399142) AND (((v0.c1) BETWEEN (rt0.c4) AND (x''))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((CASE rt0.c0  WHEN v0.c1 THEN 1090877059 END) ISNULL));
SELECT ALL * FROM vt0, rt0, v0 WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (0.16986972601399142) AND (((v0.c1) BETWEEN (rt0.c4) AND (x''))))) ORDER BY ((CASE rt0.c0  WHEN v0.c1 THEN 1090877059 END) ISNULL);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB)) BETWEEN (0.16986972601399142) AND (((v0.c1) BETWEEN (rt0.c4) AND (x''))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((CASE rt0.c0  WHEN v0.c1 THEN 1090877059 END) ISNULL));
SELECT ALL * FROM vt0, rt0, v0 WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (0.16986972601399142) AND (((v0.c1) BETWEEN (rt0.c4) AND (x''))))) ORDER BY ((CASE rt0.c0  WHEN v0.c1 THEN 1090877059 END) ISNULL);
SELECT ALL * FROM v0, rt0 WHERE (((CAST(v0.c1 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS REAL)) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((CAST(v0.c1 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS REAL)) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((CAST(v0.c1 AS REAL)) NOT NULL));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (0.32659948219552404) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.32659948219552404) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (0.32659948219552404) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.32659948219552404) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (0.32659948219552404) ORDER BY NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON v0.c2 WHERE (((((UPPER(DISTINCT 1229099039))OR((+ (vt0.c0)))))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(DISTINCT 1229099039))OR((+ (vt0.c0)))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON v0.c2);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON v0.c2 WHERE (((((UPPER(DISTINCT 1229099039))OR((+ (vt0.c0)))))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(DISTINCT 1229099039))OR((+ (vt0.c0)))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON v0.c2);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON v0.c2 WHERE (((((UPPER(DISTINCT 1229099039))OR((+ (vt0.c0)))))AND((NOT (vt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c0 ASC;
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON ((CASE WHEN v0.c2 THEN v0.c0 ELSE rt0.c2 END)==(((v0.c1) IS FALSE))) WHERE (rt0.c0) ORDER BY ((~ (v0.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON ((CASE WHEN v0.c2 THEN v0.c0 ELSE rt0.c2 END)==(((v0.c1) IS FALSE))) ORDER BY ((~ (v0.c2)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON ((CASE WHEN v0.c2 THEN v0.c0 ELSE rt0.c2 END)==(((v0.c1) IS FALSE))) WHERE (rt0.c0) ORDER BY ((~ (v0.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON ((CASE WHEN v0.c2 THEN v0.c0 ELSE rt0.c2 END)==(((v0.c1) IS FALSE))) ORDER BY ((~ (v0.c2)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON ((CASE WHEN v0.c2 THEN v0.c0 ELSE rt0.c2 END)==(((v0.c1) IS FALSE))) WHERE (rt0.c0) ORDER BY ((~ (v0.c2)) IN ()) ASC  NULLS LAST;
SELECT * FROM vt0, rt0, v0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN '242240729' WHEN rt0.c1 THEN v0.c2 ELSE vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN '242240729' WHEN rt0.c1 THEN v0.c2 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN '242240729' WHEN rt0.c1 THEN v0.c2 ELSE vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN '242240729' WHEN rt0.c1 THEN v0.c2 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN '242240729' WHEN rt0.c1 THEN v0.c2 ELSE vt0.c0 END) IS FALSE));
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((((~ (v0.c0))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((((v0.c1)OR(v0.c2)))AND(v0.c2))))) ORDER BY ((v0.c0 COLLATE BINARY) NOTNULL)  NULLS FIRST, ((((v0.c0) BETWEEN (v0.c0) AND (v0.c2))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((((v0.c1)OR(v0.c2)))AND(v0.c2))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((v0.c0 COLLATE BINARY) NOTNULL)  NULLS FIRST, ((((v0.c0) BETWEEN (v0.c0) AND (v0.c2))) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((((~ (v0.c0))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((((v0.c1)OR(v0.c2)))AND(v0.c2))))) ORDER BY ((v0.c0 COLLATE BINARY) NOTNULL)  NULLS FIRST, ((((v0.c0) BETWEEN (v0.c0) AND (v0.c2))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((((v0.c1)OR(v0.c2)))AND(v0.c2))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((v0.c0 COLLATE BINARY) NOTNULL)  NULLS FIRST, ((((v0.c0) BETWEEN (v0.c0) AND (v0.c2))) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((((~ (v0.c0))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((((v0.c1)OR(v0.c2)))AND(v0.c2))))) ORDER BY ((v0.c0 COLLATE BINARY) NOTNULL)  NULLS FIRST, ((((v0.c0) BETWEEN (v0.c0) AND (v0.c2))) IS TRUE) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 NATURAL JOIN v0 WHERE ((((v0.c1) BETWEEN (rt0.c4) AND (x'')) IN ())) ORDER BY (NOT (v0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1) BETWEEN (rt0.c4) AND (x'')) IN ())) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0 ORDER BY (NOT (v0.c0)) COLLATE RTRIM DESC);
SELECT * FROM rt0, vt0 NATURAL JOIN v0 WHERE ((((v0.c1) BETWEEN (rt0.c4) AND (x'')) IN ())) ORDER BY (NOT (v0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1) BETWEEN (rt0.c4) AND (x'')) IN ())) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0 ORDER BY (NOT (v0.c0)) COLLATE RTRIM DESC);
SELECT * FROM rt0, vt0 NATURAL JOIN v0 WHERE ((((v0.c1) BETWEEN (rt0.c4) AND (x'')) IN ())) ORDER BY (NOT (v0.c0)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c2 IN ()) AS REAL)) ORDER BY ((((((v0.c1)|(v0.c1)))AND(CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 END)))OR(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c2 IN ()) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)|(v0.c1)))AND(CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 END)))OR(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))) ASC);
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c2 IN ()) AS REAL)) ORDER BY ((((((v0.c1)|(v0.c1)))AND(CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 END)))OR(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c2 IN ()) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)|(v0.c1)))AND(CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 END)))OR(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))) ASC);
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c2 IN ()) AS REAL)) ORDER BY ((((((v0.c1)|(v0.c1)))AND(CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 END)))OR(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c4) ISNULL) COLLATE RTRIM WHERE (((((((v0.c0))>=((rt0.c0)))))==(((((rt0.c2)) BETWEEN (('-1037775780')) AND ((rt0.c3)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0))>=((rt0.c0)))))=(((((rt0.c2)) BETWEEN (('-1037775780')) AND ((rt0.c3))))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c4) ISNULL) COLLATE RTRIM);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c4) ISNULL) COLLATE RTRIM WHERE (((((((v0.c0))>=((rt0.c0)))))==(((((rt0.c2)) BETWEEN (('-1037775780')) AND ((rt0.c3)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0))>=((rt0.c0)))))=(((((rt0.c2)) BETWEEN (('-1037775780')) AND ((rt0.c3))))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c4) ISNULL) COLLATE RTRIM);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c4) ISNULL) COLLATE RTRIM WHERE (((((((v0.c0))>=((rt0.c0)))))==(((((rt0.c2)) BETWEEN (('-1037775780')) AND ((rt0.c3)))))));
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c3 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c3 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c3 AS TEXT)) IS TRUE));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((NOT (rt0.c3))) NOT BETWEEN (((v0.c2) NOTNULL)) AND (((rt0.c0) NOT NULL))) FULL OUTER JOIN rt0 ON CAST((0.16986972601399142 IN ()) AS TEXT) WHERE (TRIM(DISTINCT CAST(rt0.c1 AS REAL), (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(rt0.c1 AS REAL), (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((v0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((NOT (rt0.c3))) NOT BETWEEN (((v0.c2) NOTNULL)) AND (((rt0.c0) NOT NULL))) FULL OUTER JOIN rt0 ON CAST((0.16986972601399142 IN ()) AS TEXT));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((NOT (rt0.c3))) NOT BETWEEN (((v0.c2) NOTNULL)) AND (((rt0.c0) NOT NULL))) FULL OUTER JOIN rt0 ON CAST((0.16986972601399142 IN ()) AS TEXT) WHERE (TRIM(DISTINCT CAST(rt0.c1 AS REAL), (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(rt0.c1 AS REAL), (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((v0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((NOT (rt0.c3))) NOT BETWEEN (((v0.c2) NOTNULL)) AND (((rt0.c0) NOT NULL))) FULL OUTER JOIN rt0 ON CAST((0.16986972601399142 IN ()) AS TEXT));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((0X6608c56b) BETWEEN (rt0.c3) AND (rt0.c0)) IN ())) ORDER BY (((rt0.c2) NOTNULL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0X6608c56b) BETWEEN (rt0.c3) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c2) NOTNULL) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((0X6608c56b) BETWEEN (rt0.c3) AND (rt0.c0)) IN ())) ORDER BY (((rt0.c2) NOTNULL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0X6608c56b) BETWEEN (rt0.c3) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c2) NOTNULL) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((0X6608c56b) BETWEEN (rt0.c3) AND (rt0.c0)) IN ())) ORDER BY (((rt0.c2) NOTNULL) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((((vt0.c0, rt0.c4, vt0.c0))<=((rt0.c0, rt0.c2, vt0.c0))))AND((+ (rt0.c3)))))OR((rt0.c2 IN ()))) WHERE ((((- (rt0.c2)))&(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))&(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((((vt0.c0, rt0.c4, vt0.c0))<=((rt0.c0, rt0.c2, vt0.c0))))AND((+ (rt0.c3)))))OR((rt0.c2 IN ()))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((((vt0.c0, rt0.c4, vt0.c0))<=((rt0.c0, rt0.c2, vt0.c0))))AND((+ (rt0.c3)))))OR((rt0.c2 IN ()))) WHERE ((((- (rt0.c2)))&(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))&(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((((vt0.c0, rt0.c4, vt0.c0))<=((rt0.c0, rt0.c2, vt0.c0))))AND((+ (rt0.c3)))))OR((rt0.c2 IN ()))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((((vt0.c0, rt0.c4, vt0.c0))<=((rt0.c0, rt0.c2, vt0.c0))))AND((+ (rt0.c3)))))OR((rt0.c2 IN ()))) WHERE ((((- (rt0.c2)))&(rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))%((((v0.c1, v0.c0, v0.c1))>((v0.c1, v0.c2, v0.c1)))))) ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c2)>(v0.c0)))) AND ((((((v0.c2)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))%((((v0.c1, v0.c0, v0.c1))>((v0.c1, v0.c2, v0.c1)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c2)>(v0.c0)))) AND ((((((v0.c2)AND(v0.c0)))AND(v0.c0))))));
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))%((((v0.c1, v0.c0, v0.c1))>((v0.c1, v0.c2, v0.c1)))))) ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c2)>(v0.c0)))) AND ((((((v0.c2)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))%((((v0.c1, v0.c0, v0.c1))>((v0.c1, v0.c2, v0.c1)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c2)>(v0.c0)))) AND ((((((v0.c2)AND(v0.c0)))AND(v0.c0))))));
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))%((((v0.c1, v0.c0, v0.c1))>((v0.c1, v0.c2, v0.c1)))))) ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c2)>(v0.c0)))) AND ((((((v0.c2)AND(v0.c0)))AND(v0.c0)))));
SELECT * FROM vt0, v0, rt0 WHERE (((((v0.c0) IS TRUE)) IS FALSE)) ORDER BY (CAST(rt0.c3 AS NUMERIC) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (CAST(rt0.c3 AS NUMERIC) IN ()) DESC);
SELECT * FROM vt0, v0, rt0 WHERE (((((v0.c0) IS TRUE)) IS FALSE)) ORDER BY (CAST(rt0.c3 AS NUMERIC) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (CAST(rt0.c3 AS NUMERIC) IN ()) DESC);
SELECT * FROM vt0, v0, rt0 WHERE (((((v0.c0) IS TRUE)) IS FALSE)) ORDER BY (CAST(rt0.c3 AS NUMERIC) IN ()) DESC;
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON (NULL IN ()) WHERE ((('-1330637812') BETWEEN (v0.c1 COLLATE BINARY) AND (vt0.c0))) ORDER BY ((v0.c0) IS FALSE) ASC, CASE ((v0.c0)>=(v0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) ELSE ((vt0.c0)<=(v0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-1330637812') BETWEEN (v0.c1 COLLATE BINARY) AND (vt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (NULL IN ()) ORDER BY ((v0.c0) IS FALSE) ASC, CASE ((v0.c0)>=(v0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) ELSE ((vt0.c0)<=(v0.c2)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON (NULL IN ()) WHERE ((('-1330637812') BETWEEN (v0.c1 COLLATE BINARY) AND (vt0.c0))) ORDER BY ((v0.c0) IS FALSE) ASC, CASE ((v0.c0)>=(v0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) ELSE ((vt0.c0)<=(v0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-1330637812') BETWEEN (v0.c1 COLLATE BINARY) AND (vt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (NULL IN ()) ORDER BY ((v0.c0) IS FALSE) ASC, CASE ((v0.c0)>=(v0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) ELSE ((vt0.c0)<=(v0.c2)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON (NULL IN ()) WHERE ((('-1330637812') BETWEEN (v0.c1 COLLATE BINARY) AND (vt0.c0))) ORDER BY ((v0.c0) IS FALSE) ASC, CASE ((v0.c0)>=(v0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) ELSE ((vt0.c0)<=(v0.c2)) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE (((v0.c1))>((rt0.c1)))  WHEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END THEN ((((((((((((x'')OR(vt0.c0)))OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c4)))AND(v0.c0)))OR(rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c1))>((rt0.c1)))  WHEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END THEN ((((((((((((x'')OR(vt0.c0)))OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c4)))AND(v0.c0)))OR(rt0.c4)) END) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE (((v0.c1))>((rt0.c1)))  WHEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END THEN ((((((((((((x'')OR(vt0.c0)))OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c4)))AND(v0.c0)))OR(rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c1))>((rt0.c1)))  WHEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END THEN ((((((((((((x'')OR(vt0.c0)))OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c4)))AND(v0.c0)))OR(rt0.c4)) END) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE (((v0.c1))>((rt0.c1)))  WHEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END THEN ((((((((((((x'')OR(vt0.c0)))OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c4)))AND(v0.c0)))OR(rt0.c4)) END);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(v0.c1)))%(CASE v0.c1  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt0.c0 WHEN x'' THEN v0.c2 ELSE v0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(v0.c1)))%(CASE v0.c1  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt0.c0 WHEN x'' THEN v0.c2 ELSE v0.c2 END))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(v0.c1)))%(CASE v0.c1  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt0.c0 WHEN x'' THEN v0.c2 ELSE v0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(v0.c1)))%(CASE v0.c1  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt0.c0 WHEN x'' THEN v0.c2 ELSE v0.c2 END))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(v0.c1)))%(CASE v0.c1  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt0.c0 WHEN x'' THEN v0.c2 ELSE v0.c2 END)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CAST(v0.c1 AS REAL))<=(((vt0.c0)|(v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c1 AS REAL))<=(((vt0.c0)|(v0.c2))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CAST(v0.c1 AS REAL))<=(((vt0.c0)|(v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c1 AS REAL))<=(((vt0.c0)|(v0.c2))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CAST(v0.c1 AS REAL))<=(((vt0.c0)|(v0.c2)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN (- (v0.c1)) THEN (('-538768614')&(v0.c1)) ELSE ((v0.c0) ISNULL) END) ORDER BY ((((v0.c0)LIKE(v0.c0)))%(CASE WHEN v0.c2 THEN vt0.c0 ELSE v0.c1 END)) ASC, v0.c0  NULLS LAST, ((v0.c2)>=(((v0.c0)>(v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c0 AS INTEGER)  WHEN (- (v0.c1)) THEN (('-538768614')&(v0.c1)) ELSE ((v0.c0) ISNULL) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)LIKE(v0.c0)))%(CASE WHEN v0.c2 THEN vt0.c0 ELSE v0.c1 END)) ASC, v0.c0  NULLS LAST, ((v0.c2)>=(((v0.c0)>(v0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN (- (v0.c1)) THEN (('-538768614')&(v0.c1)) ELSE ((v0.c0) ISNULL) END) ORDER BY ((((v0.c0)LIKE(v0.c0)))%(CASE WHEN v0.c2 THEN vt0.c0 ELSE v0.c1 END)) ASC, v0.c0  NULLS LAST, ((v0.c2)>=(((v0.c0)>(v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c0 AS INTEGER)  WHEN (- (v0.c1)) THEN (('-538768614')&(v0.c1)) ELSE ((v0.c0) ISNULL) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)LIKE(v0.c0)))%(CASE WHEN v0.c2 THEN vt0.c0 ELSE v0.c1 END)) ASC, v0.c0  NULLS LAST, ((v0.c2)>=(((v0.c0)>(v0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN (- (v0.c1)) THEN (('-538768614')&(v0.c1)) ELSE ((v0.c0) ISNULL) END) ORDER BY ((((v0.c0)LIKE(v0.c0)))%(CASE WHEN v0.c2 THEN vt0.c0 ELSE v0.c1 END)) ASC, v0.c0  NULLS LAST, ((v0.c2)>=(((v0.c0)>(v0.c1)))) DESC;
SELECT * FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)<=(0.6551896899502507)), v0.c1, ((v0.c0) BETWEEN (v0.c0) AND (v0.c1))))!=((v0.c2, (((-1173806889)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))), (- (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)<=(0.6551896899502507)), v0.c1, ((v0.c0) BETWEEN (v0.c0) AND (v0.c1))))!=((v0.c2, (((-1173806889)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))), (- (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)<=(0.6551896899502507)), v0.c1, ((v0.c0) BETWEEN (v0.c0) AND (v0.c1))))!=((v0.c2, (((-1173806889)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))), (- (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)<=(0.6551896899502507)), v0.c1, ((v0.c0) BETWEEN (v0.c0) AND (v0.c1))))!=((v0.c2, (((-1173806889)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))), (- (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)<=(0.6551896899502507)), v0.c1, ((v0.c0) BETWEEN (v0.c0) AND (v0.c1))))!=((v0.c2, (((-1173806889)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))), (- (v0.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY ((((((((((((rt0.c0)OR(rt0.c2)))OR(v0.c1)))AND((rt0.c1 IN ()))))OR((~ (rt0.c0)))))OR((((rt0.c2))>((rt0.c2))))))AND(((((((((rt0.c3)AND(v0.c1)))OR(v0.c0)))OR(vt0.c0)))AND(rt0.c0)))) DESC, (((('{ygeP1X5J')AND(rt0.c0)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0)))))  NULLS FIRST, UNLIKELY(((rt0.c2) IS TRUE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((((((((rt0.c0)OR(rt0.c2)))OR(v0.c1)))AND((rt0.c1 IN ()))))OR((~ (rt0.c0)))))OR((((rt0.c2))>((rt0.c2))))))AND(((((((((rt0.c3)AND(v0.c1)))OR(v0.c0)))OR(vt0.c0)))AND(rt0.c0)))) DESC, (((('{ygeP1X5J')AND(rt0.c0)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0)))))  NULLS FIRST, UNLIKELY(((rt0.c2) IS TRUE))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY ((((((((((((rt0.c0)OR(rt0.c2)))OR(v0.c1)))AND((rt0.c1 IN ()))))OR((~ (rt0.c0)))))OR((((rt0.c2))>((rt0.c2))))))AND(((((((((rt0.c3)AND(v0.c1)))OR(v0.c0)))OR(vt0.c0)))AND(rt0.c0)))) DESC, (((('{ygeP1X5J')AND(rt0.c0)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0)))))  NULLS FIRST, UNLIKELY(((rt0.c2) IS TRUE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((((((((rt0.c0)OR(rt0.c2)))OR(v0.c1)))AND((rt0.c1 IN ()))))OR((~ (rt0.c0)))))OR((((rt0.c2))>((rt0.c2))))))AND(((((((((rt0.c3)AND(v0.c1)))OR(v0.c0)))OR(vt0.c0)))AND(rt0.c0)))) DESC, (((('{ygeP1X5J')AND(rt0.c0)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0)))))  NULLS FIRST, UNLIKELY(((rt0.c2) IS TRUE))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY ((((((((((((rt0.c0)OR(rt0.c2)))OR(v0.c1)))AND((rt0.c1 IN ()))))OR((~ (rt0.c0)))))OR((((rt0.c2))>((rt0.c2))))))AND(((((((((rt0.c3)AND(v0.c1)))OR(v0.c0)))OR(vt0.c0)))AND(rt0.c0)))) DESC, (((('{ygeP1X5J')AND(rt0.c0)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0)))))  NULLS FIRST, UNLIKELY(((rt0.c2) IS TRUE))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 END IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 END IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 END IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (('1114810370' IN ((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((('1114810370' IN ((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (('1114810370' IN ((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((('1114810370' IN ((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (('1114810370' IN ((((vt0.c0))>((vt0.c0))))));
SELECT * FROM rt0, v0 WHERE ((((((rt0.c4 IN ()))OR((((v0.c0)) BETWEEN ((1.947439925E9)) AND ((rt0.c3))))))AND(LOWER(DISTINCT v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4 IN ()))OR((((v0.c0)) BETWEEN ((1.947439925E9)) AND ((rt0.c3))))))AND(LOWER(DISTINCT v0.c1)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c4 IN ()))OR((((v0.c0)) BETWEEN ((1.947439925E9)) AND ((rt0.c3))))))AND(LOWER(DISTINCT v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4 IN ()))OR((((v0.c0)) BETWEEN ((1.947439925E9)) AND ((rt0.c3))))))AND(LOWER(DISTINCT v0.c1)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c4 IN ()))OR((((v0.c0)) BETWEEN ((1.947439925E9)) AND ((rt0.c3))))))AND(LOWER(DISTINCT v0.c1))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((0.08770050433810739)/(v0.c2)))AND(LIKELY(DISTINCT vt0.c0))))OR(((v0.c1)>>(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.08770050433810739)/(v0.c2)))AND(LIKELY(DISTINCT vt0.c0))))OR(((v0.c1)>>(v0.c2))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((0.08770050433810739)/(v0.c2)))AND(LIKELY(DISTINCT vt0.c0))))OR(((v0.c1)>>(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.08770050433810739)/(v0.c2)))AND(LIKELY(DISTINCT vt0.c0))))OR(((v0.c1)>>(v0.c2))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((0.08770050433810739)/(v0.c2)))AND(LIKELY(DISTINCT vt0.c0))))OR(((v0.c1)>>(v0.c2)))));
SELECT ALL * FROM vt0, rt0, v0 WHERE (LOWER(DISTINCT ((NULL) NOT BETWEEN (rt0.c4) AND (vt0.c0)))) ORDER BY ((NULL) BETWEEN ((('-844719138') BETWEEN (rt0.c4) AND (rt0.c1))) AND (0.4468210391228379)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((NULL) NOT BETWEEN (rt0.c4) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((NULL) BETWEEN ((('-844719138') BETWEEN (rt0.c4) AND (rt0.c1))) AND (0.4468210391228379)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (LOWER(DISTINCT ((NULL) NOT BETWEEN (rt0.c4) AND (vt0.c0)))) ORDER BY ((NULL) BETWEEN ((('-844719138') BETWEEN (rt0.c4) AND (rt0.c1))) AND (0.4468210391228379)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((NULL) NOT BETWEEN (rt0.c4) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((NULL) BETWEEN ((('-844719138') BETWEEN (rt0.c4) AND (rt0.c1))) AND (0.4468210391228379)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (LOWER(DISTINCT ((NULL) NOT BETWEEN (rt0.c4) AND (vt0.c0)))) ORDER BY ((NULL) BETWEEN ((('-844719138') BETWEEN (rt0.c4) AND (rt0.c1))) AND (0.4468210391228379)) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((rt0.c1)+(rt0.c2)))>=(CASE NULL  WHEN rt0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)+(rt0.c2)))>=(CASE NULL  WHEN rt0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((rt0.c1)+(rt0.c2)))>=(CASE NULL  WHEN rt0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)+(rt0.c2)))>=(CASE NULL  WHEN rt0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((rt0.c1)+(rt0.c2)))>=(CASE NULL  WHEN rt0.c0 THEN v0.c0 END)));
SELECT ALL * FROM v0, vt0 CROSS JOIN rt0 ON (- (rt0.c2)) COLLATE NOCASE WHERE (((rt0.c2 COLLATE RTRIM)LIKE(CASE WHEN rt0.c4 THEN x'' ELSE 'Ak' END))) ORDER BY ((v0.c2 COLLATE NOCASE) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)LIKE(CASE WHEN rt0.c4 THEN x'' ELSE 'Ak' END))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON (- (rt0.c2)) COLLATE NOCASE ORDER BY ((v0.c2 COLLATE NOCASE) NOTNULL)  NULLS LAST);
SELECT ALL * FROM v0, vt0 CROSS JOIN rt0 ON (- (rt0.c2)) COLLATE NOCASE WHERE (((rt0.c2 COLLATE RTRIM)LIKE(CASE WHEN rt0.c4 THEN x'' ELSE 'Ak' END))) ORDER BY ((v0.c2 COLLATE NOCASE) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)LIKE(CASE WHEN rt0.c4 THEN x'' ELSE 'Ak' END))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON (- (rt0.c2)) COLLATE NOCASE ORDER BY ((v0.c2 COLLATE NOCASE) NOTNULL)  NULLS LAST);
SELECT ALL * FROM v0, vt0 CROSS JOIN rt0 ON (- (rt0.c2)) COLLATE NOCASE WHERE (((rt0.c2 COLLATE RTRIM)LIKE(CASE WHEN rt0.c4 THEN x'' ELSE 'Ak' END))) ORDER BY ((v0.c2 COLLATE NOCASE) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((v0.c0) NOT BETWEEN (((rt0.c4)>(rt0.c1))) AND ((((rt0.c3, v0.c2, v0.c2))>((v0.c1, rt0.c4, v0.c1))))) CROSS JOIN vt0 ON ((((rt0.c0)OR(((x'')!=(vt0.c0)))))AND(((v0.c1)>(rt0.c3)))) WHERE (TOTAL_CHANGES()) ORDER BY (- ((((x'0a18', rt0.c3, vt0.c0)) BETWEEN ((rt0.c3, vt0.c0, NULL)) AND ((v0.c0, v0.c1, rt0.c0))))) DESC  NULLS FIRST, CAST('' AS NUMERIC) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((v0.c0) NOT BETWEEN (((rt0.c4)>(rt0.c1))) AND ((((rt0.c3, v0.c2, v0.c2))>((v0.c1, rt0.c4, v0.c1))))) CROSS JOIN vt0 ON ((((rt0.c0)OR(((x'')!=(vt0.c0)))))AND(((v0.c1)>(rt0.c3)))) ORDER BY (- ((((x'0a18', rt0.c3, vt0.c0)) BETWEEN ((rt0.c3, vt0.c0, NULL)) AND ((v0.c0, v0.c1, rt0.c0))))) DESC  NULLS FIRST, CAST('' AS NUMERIC) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((v0.c0) NOT BETWEEN (((rt0.c4)>(rt0.c1))) AND ((((rt0.c3, v0.c2, v0.c2))>((v0.c1, rt0.c4, v0.c1))))) CROSS JOIN vt0 ON ((((rt0.c0)OR(((x'')!=(vt0.c0)))))AND(((v0.c1)>(rt0.c3)))) WHERE (TOTAL_CHANGES()) ORDER BY (- ((((x'0a18', rt0.c3, vt0.c0)) BETWEEN ((rt0.c3, vt0.c0, NULL)) AND ((v0.c0, v0.c1, rt0.c0))))) DESC  NULLS FIRST, CAST('' AS NUMERIC) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((v0.c0) NOT BETWEEN (((rt0.c4)>(rt0.c1))) AND ((((rt0.c3, v0.c2, v0.c2))>((v0.c1, rt0.c4, v0.c1))))) CROSS JOIN vt0 ON ((((rt0.c0)OR(((x'')!=(vt0.c0)))))AND(((v0.c1)>(rt0.c3)))) ORDER BY (- ((((x'0a18', rt0.c3, vt0.c0)) BETWEEN ((rt0.c3, vt0.c0, NULL)) AND ((v0.c0, v0.c1, rt0.c0))))) DESC  NULLS FIRST, CAST('' AS NUMERIC) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((v0.c0) NOT BETWEEN (((rt0.c4)>(rt0.c1))) AND ((((rt0.c3, v0.c2, v0.c2))>((v0.c1, rt0.c4, v0.c1))))) CROSS JOIN vt0 ON ((((rt0.c0)OR(((x'')!=(vt0.c0)))))AND(((v0.c1)>(rt0.c3)))) WHERE (TOTAL_CHANGES()) ORDER BY (- ((((x'0a18', rt0.c3, vt0.c0)) BETWEEN ((rt0.c3, vt0.c0, NULL)) AND ((v0.c0, v0.c1, rt0.c0))))) DESC  NULLS FIRST, CAST('' AS NUMERIC) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((v0.c2 COLLATE RTRIM)AND(((rt0.c4)GLOB(rt0.c3)))))OR((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2 COLLATE RTRIM)AND(((rt0.c4)GLOB(rt0.c3)))))OR((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((v0.c2 COLLATE RTRIM)AND(((rt0.c4)GLOB(rt0.c3)))))OR((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2 COLLATE RTRIM)AND(((rt0.c4)GLOB(rt0.c3)))))OR((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((v0.c2 COLLATE RTRIM)AND(((rt0.c4)GLOB(rt0.c3)))))OR((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT * FROM rt0, v0 WHERE (((((LAST_INSERT_ROWID())AND((((rt0.c1, v0.c2, v0.c2, v0.c0, rt0.c4))>=((rt0.c2, v0.c0, rt0.c4, rt0.c4, rt0.c1))))))AND(((v0.c2)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((LAST_INSERT_ROWID())AND((((rt0.c1, v0.c2, v0.c2, v0.c0, rt0.c4))>=((rt0.c2, v0.c0, rt0.c4, rt0.c4, rt0.c1))))))AND(((v0.c2)>=(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((LAST_INSERT_ROWID())AND((((rt0.c1, v0.c2, v0.c2, v0.c0, rt0.c4))>=((rt0.c2, v0.c0, rt0.c4, rt0.c4, rt0.c1))))))AND(((v0.c2)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((LAST_INSERT_ROWID())AND((((rt0.c1, v0.c2, v0.c2, v0.c0, rt0.c4))>=((rt0.c2, v0.c0, rt0.c4, rt0.c4, rt0.c1))))))AND(((v0.c2)>=(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((LAST_INSERT_ROWID())AND((((rt0.c1, v0.c2, v0.c2, v0.c0, rt0.c4))>=((rt0.c2, v0.c0, rt0.c4, rt0.c4, rt0.c1))))))AND(((v0.c2)>=(rt0.c2)))));
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c0)*(((v0.c2)>(rt0.c1))))) ORDER BY ((((((((((((((rt0.c3)OR(v0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c3)))AND(v0.c1)))AND(v0.c2)))*(((x'6dea') NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)*(((v0.c2)>(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((((((rt0.c3)OR(v0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c3)))AND(v0.c1)))AND(v0.c2)))*(((x'6dea') NOT NULL))) DESC);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c0)*(((v0.c2)>(rt0.c1))))) ORDER BY ((((((((((((((rt0.c3)OR(v0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c3)))AND(v0.c1)))AND(v0.c2)))*(((x'6dea') NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)*(((v0.c2)>(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((((((rt0.c3)OR(v0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c3)))AND(v0.c1)))AND(v0.c2)))*(((x'6dea') NOT NULL))) DESC);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c0)*(((v0.c2)>(rt0.c1))))) ORDER BY ((((((((((((((rt0.c3)OR(v0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c3)))AND(v0.c1)))AND(v0.c2)))*(((x'6dea') NOT NULL))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOTNULL))>>(((((rt0.c1)OR(rt0.c4)))AND(rt0.c4))))) ORDER BY ((+ (rt0.c4)) IN ()) ASC, ((RTRIM(NULL)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL))>>(((((rt0.c1)OR(rt0.c4)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((+ (rt0.c4)) IN ()) ASC, ((RTRIM(NULL)) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOTNULL))>>(((((rt0.c1)OR(rt0.c4)))AND(rt0.c4))))) ORDER BY ((+ (rt0.c4)) IN ()) ASC, ((RTRIM(NULL)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL))>>(((((rt0.c1)OR(rt0.c4)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((+ (rt0.c4)) IN ()) ASC, ((RTRIM(NULL)) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOTNULL))>>(((((rt0.c1)OR(rt0.c4)))AND(rt0.c4))))) ORDER BY ((+ (rt0.c4)) IN ()) ASC, ((RTRIM(NULL)) NOT NULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (((((rt0.c4 IN ()))OR(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))))OR('-1923784804')) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c4 IN ()))OR(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))))OR('-1923784804')) DESC);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (((((rt0.c4 IN ()))OR(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))))OR('-1923784804')) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c4 IN ()))OR(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))))OR('-1923784804')) DESC);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (((((rt0.c4 IN ()))OR(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))))OR('-1923784804')) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON '[)큦瀍Uqn' CROSS JOIN rt0 ON (((v0.c2) IS TRUE) IN ()) WHERE ((((- (NULL))) NOT BETWEEN ((rt0.c3 IN ())) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((- (NULL))) NOT BETWEEN ((rt0.c3 IN ())) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON '[)큦瀍Uqn' CROSS JOIN rt0 ON (((v0.c2) IS TRUE) IN ()));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON '[)큦瀍Uqn' CROSS JOIN rt0 ON (((v0.c2) IS TRUE) IN ()) WHERE ((((- (NULL))) NOT BETWEEN ((rt0.c3 IN ())) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((- (NULL))) NOT BETWEEN ((rt0.c3 IN ())) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON '[)큦瀍Uqn' CROSS JOIN rt0 ON (((v0.c2) IS TRUE) IN ()));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON '[)큦瀍Uqn' CROSS JOIN rt0 ON (((v0.c2) IS TRUE) IN ()) WHERE ((((- (NULL))) NOT BETWEEN ((rt0.c3 IN ())) AND ((rt0.c1 IN ()))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c4)/(rt0.c2)) WHEN (rt0.c2 IN ()) THEN COALESCE(rt0.c2, NULL, rt0.c4, rt0.c4) WHEN ((rt0.c3)/(rt0.c2)) THEN rt0.c1 COLLATE NOCASE END) ORDER BY 'H' ASC, CAST(((((rt0.c0)OR(rt0.c3)))OR(rt0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c4)/(rt0.c2)) WHEN (rt0.c2 IN ()) THEN COALESCE(rt0.c2, NULL, rt0.c4, rt0.c4) WHEN ((rt0.c3)/(rt0.c2)) THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 ORDER BY 'H' ASC, CAST(((((rt0.c0)OR(rt0.c3)))OR(rt0.c2)) AS NUMERIC));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c4)/(rt0.c2)) WHEN (rt0.c2 IN ()) THEN COALESCE(rt0.c2, NULL, rt0.c4, rt0.c4) WHEN ((rt0.c3)/(rt0.c2)) THEN rt0.c1 COLLATE NOCASE END) ORDER BY 'H' ASC, CAST(((((rt0.c0)OR(rt0.c3)))OR(rt0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c4)/(rt0.c2)) WHEN (rt0.c2 IN ()) THEN COALESCE(rt0.c2, NULL, rt0.c4, rt0.c4) WHEN ((rt0.c3)/(rt0.c2)) THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 ORDER BY 'H' ASC, CAST(((((rt0.c0)OR(rt0.c3)))OR(rt0.c2)) AS NUMERIC));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c4)/(rt0.c2)) WHEN (rt0.c2 IN ()) THEN COALESCE(rt0.c2, NULL, rt0.c4, rt0.c4) WHEN ((rt0.c3)/(rt0.c2)) THEN rt0.c1 COLLATE NOCASE END) ORDER BY 'H' ASC, CAST(((((rt0.c0)OR(rt0.c3)))OR(rt0.c2)) AS NUMERIC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(json_patch(rt0.c2, rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(json_patch(rt0.c2, rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(json_patch(rt0.c2, rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(json_patch(rt0.c2, rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(json_patch(rt0.c2, rt0.c2) AS NUMERIC));
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c1))>=((v0.c1))))>>(((((v0.c2)OR(v0.c2)))OR(vt0.c0))))) ORDER BY ((v0.c2 COLLATE BINARY) BETWEEN ((((v0.c0))<=((vt0.c0)))) AND (((v0.c0) BETWEEN (vt0.c0) AND (v0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c1))>=((v0.c1))))>>(((((v0.c2)OR(v0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c2 COLLATE BINARY) BETWEEN ((((v0.c0))<=((vt0.c0)))) AND (((v0.c0) BETWEEN (vt0.c0) AND (v0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c1))>=((v0.c1))))>>(((((v0.c2)OR(v0.c2)))OR(vt0.c0))))) ORDER BY ((v0.c2 COLLATE BINARY) BETWEEN ((((v0.c0))<=((vt0.c0)))) AND (((v0.c0) BETWEEN (vt0.c0) AND (v0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c1))>=((v0.c1))))>>(((((v0.c2)OR(v0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c2 COLLATE BINARY) BETWEEN ((((v0.c0))<=((vt0.c0)))) AND (((v0.c0) BETWEEN (vt0.c0) AND (v0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c1))>=((v0.c1))))>>(((((v0.c2)OR(v0.c2)))OR(vt0.c0))))) ORDER BY ((v0.c2 COLLATE BINARY) BETWEEN ((((v0.c0))<=((vt0.c0)))) AND (((v0.c0) BETWEEN (vt0.c0) AND (v0.c2)))) DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))&(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))&(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))&(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))&(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))&(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (CAST(x'' AS TEXT)) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (CAST(x'' AS TEXT)) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (CAST(x'' AS TEXT)) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (CAST(x'' AS TEXT)) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (CAST(x'' AS TEXT)) AND ((rt0.c0 IN ()))));
SELECT ALL * FROM rt0, v0, vt0 WHERE (((('-1593128366', json_array_length(rt0.c0, vt0.c0), ((rt0.c1)>(v0.c0))))<=(((v0.c1 IN (rt0.c1, rt0.c4)), ((rt0.c2)AND(v0.c0)), ('cp' IN ()))))) ORDER BY (((rt0.c3)GLOB(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((('-1593128366', json_array_length(rt0.c0, vt0.c0), ((rt0.c1)>(v0.c0))))<=(((v0.c1 IN (rt0.c1, rt0.c4)), ((rt0.c2)AND(v0.c0)), ('cp' IN ()))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((rt0.c3)GLOB(rt0.c2)) IN ()));
SELECT ALL * FROM rt0, v0, vt0 WHERE (((('-1593128366', json_array_length(rt0.c0, vt0.c0), ((rt0.c1)>(v0.c0))))<=(((v0.c1 IN (rt0.c1, rt0.c4)), ((rt0.c2)AND(v0.c0)), ('cp' IN ()))))) ORDER BY (((rt0.c3)GLOB(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((('-1593128366', json_array_length(rt0.c0, vt0.c0), ((rt0.c1)>(v0.c0))))<=(((v0.c1 IN (rt0.c1, rt0.c4)), ((rt0.c2)AND(v0.c0)), ('cp' IN ()))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((rt0.c3)GLOB(rt0.c2)) IN ()));
SELECT ALL * FROM rt0, v0, vt0 WHERE (((('-1593128366', json_array_length(rt0.c0, vt0.c0), ((rt0.c1)>(v0.c0))))<=(((v0.c1 IN (rt0.c1, rt0.c4)), ((rt0.c2)AND(v0.c0)), ('cp' IN ()))))) ORDER BY (((rt0.c3)GLOB(rt0.c2)) IN ());
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL) ISNULL) IN ((((rt0.c2))=((rt0.c4))), (rt0.c2 IN (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((NULL) ISNULL) IN ((((rt0.c2))==((rt0.c4))), (rt0.c2 IN (rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL) ISNULL) IN ((((rt0.c2))=((rt0.c4))), (rt0.c2 IN (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((NULL) ISNULL) IN ((((rt0.c2))==((rt0.c4))), (rt0.c2 IN (rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL) ISNULL) IN ((((rt0.c2))=((rt0.c4))), (rt0.c2 IN (rt0.c4)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c2) IS FALSE)) BETWEEN ((+ (5.2902578E8))) AND (((NULL) ISNULL))) CROSS JOIN vt0 ON (NOT (rt0.c4)) COLLATE BINARY WHERE ((rt0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c2) IS FALSE)) BETWEEN ((+ (5.2902578E8))) AND (((NULL) ISNULL))) CROSS JOIN vt0 ON (NOT (rt0.c4)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c2) IS FALSE)) BETWEEN ((+ (5.2902578E8))) AND (((NULL) ISNULL))) CROSS JOIN vt0 ON (NOT (rt0.c4)) COLLATE BINARY WHERE ((rt0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c2) IS FALSE)) BETWEEN ((+ (5.2902578E8))) AND (((NULL) ISNULL))) CROSS JOIN vt0 ON (NOT (rt0.c4)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c2) IS FALSE)) BETWEEN ((+ (5.2902578E8))) AND (((NULL) ISNULL))) CROSS JOIN vt0 ON (NOT (rt0.c4)) COLLATE BINARY WHERE ((rt0.c0 IN ()) COLLATE NOCASE);
SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c1)))) BETWEEN (CAST(v0.c2 AS TEXT)) AND (((' 掗') IS TRUE)))) ORDER BY ((v0.c2) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c1)))) BETWEEN (CAST(v0.c2 AS TEXT)) AND (((' 掗') IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2) ISNULL) ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c1)))) BETWEEN (CAST(v0.c2 AS TEXT)) AND (((' 掗') IS TRUE)))) ORDER BY ((v0.c2) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c1)))) BETWEEN (CAST(v0.c2 AS TEXT)) AND (((' 掗') IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2) ISNULL) ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c1)))) BETWEEN (CAST(v0.c2 AS TEXT)) AND (((' 掗') IS TRUE)))) ORDER BY ((v0.c2) ISNULL) ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0, rt0 WHERE (((rt0.c0 COLLATE RTRIM)>(CAST(rt0.c2 AS REAL)))) ORDER BY ('1075110513' IN ()) COLLATE NOCASE ASC, (IFNULL(rt0.c4, v0.c2) IN ());
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM)>(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ('1075110513' IN ()) COLLATE NOCASE ASC, (IFNULL(rt0.c4, v0.c2) IN ()));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((rt0.c0 COLLATE RTRIM)>(CAST(rt0.c2 AS REAL)))) ORDER BY ('1075110513' IN ()) COLLATE NOCASE ASC, (IFNULL(rt0.c4, v0.c2) IN ());
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM)>(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ('1075110513' IN ()) COLLATE NOCASE ASC, (IFNULL(rt0.c4, v0.c2) IN ()));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((rt0.c0 COLLATE RTRIM)>(CAST(rt0.c2 AS REAL)))) ORDER BY ('1075110513' IN ()) COLLATE NOCASE ASC, (IFNULL(rt0.c4, v0.c2) IN ());
SELECT * FROM rt0 WHERE (LOWER(((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL)))) ORDER BY ((((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))-(((((rt0.c1)AND(rt0.c3)))OR(''))));
SELECT SUM(count) FROM (SELECT ((LOWER(((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))-(((((rt0.c1)AND(rt0.c3)))OR('')))));
SELECT * FROM rt0 WHERE (LOWER(((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL)))) ORDER BY ((((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))-(((((rt0.c1)AND(rt0.c3)))OR(''))));
SELECT SUM(count) FROM (SELECT ((LOWER(((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))-(((((rt0.c1)AND(rt0.c3)))OR('')))));
SELECT * FROM rt0 WHERE (LOWER(((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL)))) ORDER BY ((((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))-(((((rt0.c1)AND(rt0.c3)))OR(''))));
SELECT ALL * FROM rt0, vt0 WHERE (((NULLIF(rt0.c3, rt0.c1)) NOT BETWEEN (rt0.c3) AND (CASE vt0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END))) ORDER BY (NOT (rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt0.c3, rt0.c1)) NOT BETWEEN (rt0.c3) AND (CASE vt0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((NULLIF(rt0.c3, rt0.c1)) NOT BETWEEN (rt0.c3) AND (CASE vt0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END))) ORDER BY (NOT (rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt0.c3, rt0.c1)) NOT BETWEEN (rt0.c3) AND (CASE vt0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((NULLIF(rt0.c3, rt0.c1)) NOT BETWEEN (rt0.c3) AND (CASE vt0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END))) ORDER BY (NOT (rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0, v0 WHERE (((((v0.c2)<(x'')))IS(((rt0.c4) ISNULL)))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)<(x'')))IS(((rt0.c4) ISNULL)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY rt0.c0 ASC  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE (((((v0.c2)<(x'')))IS(((rt0.c4) ISNULL)))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)<(x'')))IS(((rt0.c4) ISNULL)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY rt0.c0 ASC  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE (((((v0.c2)<(x'')))IS(((rt0.c4) ISNULL)))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c4 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c4 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c4 COLLATE BINARY AS REAL));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((((((v0.c2)OR('g>')))AND(v0.c1))))<((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY CAST(((v0.c1) NOT BETWEEN (rt0.c1) AND (v0.c2)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((v0.c2)OR('g>')))AND(v0.c1))))<((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt0 ORDER BY CAST(((v0.c1) NOT BETWEEN (rt0.c1) AND (v0.c2)) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((((((v0.c2)OR('g>')))AND(v0.c1))))<((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY CAST(((v0.c1) NOT BETWEEN (rt0.c1) AND (v0.c2)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((v0.c2)OR('g>')))AND(v0.c1))))<((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt0 ORDER BY CAST(((v0.c1) NOT BETWEEN (rt0.c1) AND (v0.c2)) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((((((v0.c2)OR('g>')))AND(v0.c1))))<((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY CAST(((v0.c1) NOT BETWEEN (rt0.c1) AND (v0.c2)) AS BLOB)  NULLS FIRST;
SELECT * FROM v0 WHERE (((((v0.c1)|(0.11088370823590421)))>>(HEX(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)|(0.11088370823590421)))>>(HEX(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT * FROM v0 WHERE (((((v0.c1)|(0.11088370823590421)))>>(HEX(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)|(0.11088370823590421)))>>(HEX(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT * FROM v0 WHERE (((((v0.c1)|(0.11088370823590421)))>>(HEX(DISTINCT v0.c0))));
SELECT * FROM v0, vt0, rt0 WHERE ((('-1433958513') IS TRUE) COLLATE BINARY) ORDER BY ((((((((((((rt0.c0 COLLATE BINARY)OR((~ (rt0.c2)))))AND(CAST(vt0.c0 AS NUMERIC))))AND(v0.c2 COLLATE BINARY)))AND((v0.c0 IN ()))))AND(rt0.c3 COLLATE BINARY)))AND(rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST, NULL ASC  NULLS FIRST, 0.08166871446392776;
SELECT SUM(count) FROM (SELECT (((('-1433958513') IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((((((((rt0.c0 COLLATE BINARY)OR((~ (rt0.c2)))))AND(CAST(vt0.c0 AS NUMERIC))))AND(v0.c2 COLLATE BINARY)))AND((v0.c0 IN ()))))AND(rt0.c3 COLLATE BINARY)))AND(rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST, NULL ASC  NULLS FIRST, 0.08166871446392776);
SELECT * FROM v0, vt0, rt0 WHERE ((('-1433958513') IS TRUE) COLLATE BINARY) ORDER BY ((((((((((((rt0.c0 COLLATE BINARY)OR((~ (rt0.c2)))))AND(CAST(vt0.c0 AS NUMERIC))))AND(v0.c2 COLLATE BINARY)))AND((v0.c0 IN ()))))AND(rt0.c3 COLLATE BINARY)))AND(rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST, NULL ASC  NULLS FIRST, 0.08166871446392776;
SELECT SUM(count) FROM (SELECT (((('-1433958513') IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((((((((rt0.c0 COLLATE BINARY)OR((~ (rt0.c2)))))AND(CAST(vt0.c0 AS NUMERIC))))AND(v0.c2 COLLATE BINARY)))AND((v0.c0 IN ()))))AND(rt0.c3 COLLATE BINARY)))AND(rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST, NULL ASC  NULLS FIRST, 0.08166871446392776);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE (((rt0.c1 COLLATE RTRIM) IS TRUE)) ORDER BY ((v0.c0 IN (v0.c0)) IN (((vt0.c0)*(v0.c0)), ((v0.c2)/(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((v0.c0 IN (v0.c0)) IN (((vt0.c0)*(v0.c0)), ((v0.c2)/(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE (((rt0.c1 COLLATE RTRIM) IS TRUE)) ORDER BY ((v0.c0 IN (v0.c0)) IN (((vt0.c0)*(v0.c0)), ((v0.c2)/(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((v0.c0 IN (v0.c0)) IN (((vt0.c0)*(v0.c0)), ((v0.c2)/(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE (((rt0.c1 COLLATE RTRIM) IS TRUE)) ORDER BY ((v0.c0 IN (v0.c0)) IN (((vt0.c0)*(v0.c0)), ((v0.c2)/(rt0.c2)))) DESC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (((((v0.c1)OR(v0.c1)))OR(v0.c2)) COLLATE BINARY) ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (((x''))>=((v0.c0))) ELSE (((v0.c1, v0.c0, v0.c1)) BETWEEN ((vt0.c0, v0.c0, v0.c2)) AND ((v0.c1, v0.c1, ''))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)OR(v0.c1)))OR(v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (((x''))>=((v0.c0))) ELSE (((v0.c1, v0.c0, v0.c1)) BETWEEN ((vt0.c0, v0.c0, v0.c2)) AND ((v0.c1, v0.c1, ''))) END  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((v0.c1)OR(v0.c1)))OR(v0.c2)) COLLATE BINARY) ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (((x''))>=((v0.c0))) ELSE (((v0.c1, v0.c0, v0.c1)) BETWEEN ((vt0.c0, v0.c0, v0.c2)) AND ((v0.c1, v0.c1, ''))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)OR(v0.c1)))OR(v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (((x''))>=((v0.c0))) ELSE (((v0.c1, v0.c0, v0.c1)) BETWEEN ((vt0.c0, v0.c0, v0.c2)) AND ((v0.c1, v0.c1, ''))) END  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((v0.c1)OR(v0.c1)))OR(v0.c2)) COLLATE BINARY) ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (((x''))>=((v0.c0))) ELSE (((v0.c1, v0.c0, v0.c1)) BETWEEN ((vt0.c0, v0.c0, v0.c2)) AND ((v0.c1, v0.c1, ''))) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))!=((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))<>((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))!=((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))<>((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))!=((vt0.c0 IN (vt0.c0)))));
SELECT * FROM v0, vt0 WHERE (CASE WHEN v0.c1 THEN v0.c1 COLLATE BINARY WHEN 1.4899716E9 THEN v0.c1 COLLATE RTRIM WHEN v0.c1 COLLATE RTRIM THEN ((((vt0.c0)OR(v0.c2)))OR(v0.c0)) ELSE ((v0.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c1 THEN v0.c1 COLLATE BINARY WHEN 1.4899716E9 THEN v0.c1 COLLATE RTRIM WHEN v0.c1 COLLATE RTRIM THEN ((((vt0.c0)OR(v0.c2)))OR(v0.c0)) ELSE ((v0.c1) NOT NULL) END) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CASE WHEN v0.c1 THEN v0.c1 COLLATE BINARY WHEN 1.4899716E9 THEN v0.c1 COLLATE RTRIM WHEN v0.c1 COLLATE RTRIM THEN ((((vt0.c0)OR(v0.c2)))OR(v0.c0)) ELSE ((v0.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c1 THEN v0.c1 COLLATE BINARY WHEN 1.4899716E9 THEN v0.c1 COLLATE RTRIM WHEN v0.c1 COLLATE RTRIM THEN ((((vt0.c0)OR(v0.c2)))OR(v0.c0)) ELSE ((v0.c1) NOT NULL) END) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CASE WHEN v0.c1 THEN v0.c1 COLLATE BINARY WHEN 1.4899716E9 THEN v0.c1 COLLATE RTRIM WHEN v0.c1 COLLATE RTRIM THEN ((((vt0.c0)OR(v0.c2)))OR(v0.c0)) ELSE ((v0.c1) NOT NULL) END);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END))) ORDER BY CASE (- (rt0.c2))  WHEN CAST(rt0.c4 AS BLOB) THEN rt0.c2 WHEN rt0.c0 THEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN ('w93^x' IN ()) THEN CAST(rt0.c1 AS INTEGER) END, ((((rt0.c3)+(NULL))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY CASE (- (rt0.c2))  WHEN CAST(rt0.c4 AS BLOB) THEN rt0.c2 WHEN rt0.c0 THEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN ('w93^x' IN ()) THEN CAST(rt0.c1 AS INTEGER) END, ((((rt0.c3)+(NULL))) IS TRUE));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END))) ORDER BY CASE (- (rt0.c2))  WHEN CAST(rt0.c4 AS BLOB) THEN rt0.c2 WHEN rt0.c0 THEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN ('w93^x' IN ()) THEN CAST(rt0.c1 AS INTEGER) END, ((((rt0.c3)+(NULL))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY CASE (- (rt0.c2))  WHEN CAST(rt0.c4 AS BLOB) THEN rt0.c2 WHEN rt0.c0 THEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN ('w93^x' IN ()) THEN CAST(rt0.c1 AS INTEGER) END, ((((rt0.c3)+(NULL))) IS TRUE));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END))) ORDER BY CASE (- (rt0.c2))  WHEN CAST(rt0.c4 AS BLOB) THEN rt0.c2 WHEN rt0.c0 THEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN ('w93^x' IN ()) THEN CAST(rt0.c1 AS INTEGER) END, ((((rt0.c3)+(NULL))) IS TRUE);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((v0.c2)+(rt0.c2))) BETWEEN (v0.c0 COLLATE RTRIM) AND (json_extract(v0.c0, rt0.c3)))) ORDER BY (- (((rt0.c1)IS(v0.c1)))), (+ (((rt0.c3)%(rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)+(rt0.c2))) BETWEEN (v0.c0 COLLATE RTRIM) AND (json_extract(v0.c0, rt0.c3)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (- (((rt0.c1)IS(v0.c1)))), (+ (((rt0.c3)%(rt0.c4)))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((v0.c2)+(rt0.c2))) BETWEEN (v0.c0 COLLATE RTRIM) AND (json_extract(v0.c0, rt0.c3)))) ORDER BY (- (((rt0.c1)IS(v0.c1)))), (+ (((rt0.c3)%(rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)+(rt0.c2))) BETWEEN (v0.c0 COLLATE RTRIM) AND (json_extract(v0.c0, rt0.c3)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (- (((rt0.c1)IS(v0.c1)))), (+ (((rt0.c3)%(rt0.c4)))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE 'I'  WHEN ((v0.c1) NOT BETWEEN (rt0.c3) AND (NULL)) THEN 0.5131687469636982 ELSE (x'' IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE 'I'  WHEN ((v0.c1) NOT BETWEEN (rt0.c3) AND (NULL)) THEN 0.5131687469636982 ELSE (x'' IN ()) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE 'I'  WHEN ((v0.c1) NOT BETWEEN (rt0.c3) AND (NULL)) THEN 0.5131687469636982 ELSE (x'' IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE 'I'  WHEN ((v0.c1) NOT BETWEEN (rt0.c3) AND (NULL)) THEN 0.5131687469636982 ELSE (x'' IN ()) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE 'I'  WHEN ((v0.c1) NOT BETWEEN (rt0.c3) AND (NULL)) THEN 0.5131687469636982 ELSE (x'' IN ()) END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((CAST(rt0.c4 AS NUMERIC)) NOTNULL) WHERE (CASE WHEN 0.8477156366388111 THEN CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN x'' THEN rt0.c3 END WHEN CAST(rt0.c2 AS INTEGER) THEN (((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))) WHEN ((v0.c0) ISNULL) THEN (rt0.c4 IN ()) ELSE CAST(rt0.c4 AS TEXT) END) ORDER BY ((v0.c1 COLLATE NOCASE) NOT BETWEEN (((x'') NOT BETWEEN (-1.144810584E9) AND (rt0.c0))) AND (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.8477156366388111 THEN CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN x'' THEN rt0.c3 END WHEN CAST(rt0.c2 AS INTEGER) THEN (((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))) WHEN ((v0.c0) ISNULL) THEN (rt0.c4 IN ()) ELSE CAST(rt0.c4 AS TEXT) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((CAST(rt0.c4 AS NUMERIC)) NOTNULL) ORDER BY ((v0.c1 COLLATE NOCASE) NOT BETWEEN (((x'') NOT BETWEEN (-1.144810584E9) AND (rt0.c0))) AND (rt0.c1))  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((CAST(rt0.c4 AS NUMERIC)) NOTNULL) WHERE (CASE WHEN 0.8477156366388111 THEN CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN x'' THEN rt0.c3 END WHEN CAST(rt0.c2 AS INTEGER) THEN (((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))) WHEN ((v0.c0) ISNULL) THEN (rt0.c4 IN ()) ELSE CAST(rt0.c4 AS TEXT) END) ORDER BY ((v0.c1 COLLATE NOCASE) NOT BETWEEN (((x'') NOT BETWEEN (-1.144810584E9) AND (rt0.c0))) AND (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.8477156366388111 THEN CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN x'' THEN rt0.c3 END WHEN CAST(rt0.c2 AS INTEGER) THEN (((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))) WHEN ((v0.c0) ISNULL) THEN (rt0.c4 IN ()) ELSE CAST(rt0.c4 AS TEXT) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((CAST(rt0.c4 AS NUMERIC)) NOTNULL) ORDER BY ((v0.c1 COLLATE NOCASE) NOT BETWEEN (((x'') NOT BETWEEN (-1.144810584E9) AND (rt0.c0))) AND (rt0.c1))  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((CAST(rt0.c4 AS NUMERIC)) NOTNULL) WHERE (CASE WHEN 0.8477156366388111 THEN CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN x'' THEN rt0.c3 END WHEN CAST(rt0.c2 AS INTEGER) THEN (((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))) WHEN ((v0.c0) ISNULL) THEN (rt0.c4 IN ()) ELSE CAST(rt0.c4 AS TEXT) END) ORDER BY ((v0.c1 COLLATE NOCASE) NOT BETWEEN (((x'') NOT BETWEEN (-1.144810584E9) AND (rt0.c0))) AND (rt0.c1))  NULLS FIRST;
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c2 END IN (((v0.c2)&(v0.c0))))) ORDER BY (((((((((((v0.c1, v0.c2, v0.c1)) BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c1, v0.c2, v0.c2))))OR(((((((((v0.c0)AND(v0.c2)))OR(v0.c1)))AND(v0.c1)))OR(v0.c2)))))AND(NULL)))OR(NULL)))OR(v0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN v0.c2 END IN (((v0.c2)&(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((((((((v0.c1, v0.c2, v0.c1)) BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c1, v0.c2, v0.c2))))OR(((((((((v0.c0)AND(v0.c2)))OR(v0.c1)))AND(v0.c1)))OR(v0.c2)))))AND(NULL)))OR(NULL)))OR(v0.c1 COLLATE RTRIM)));
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c2 END IN (((v0.c2)&(v0.c0))))) ORDER BY (((((((((((v0.c1, v0.c2, v0.c1)) BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c1, v0.c2, v0.c2))))OR(((((((((v0.c0)AND(v0.c2)))OR(v0.c1)))AND(v0.c1)))OR(v0.c2)))))AND(NULL)))OR(NULL)))OR(v0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN v0.c2 END IN (((v0.c2)&(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((((((((v0.c1, v0.c2, v0.c1)) BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c1, v0.c2, v0.c2))))OR(((((((((v0.c0)AND(v0.c2)))OR(v0.c1)))AND(v0.c1)))OR(v0.c2)))))AND(NULL)))OR(NULL)))OR(v0.c1 COLLATE RTRIM)));
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c2 END IN (((v0.c2)&(v0.c0))))) ORDER BY (((((((((((v0.c1, v0.c2, v0.c1)) BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c1, v0.c2, v0.c2))))OR(((((((((v0.c0)AND(v0.c2)))OR(v0.c1)))AND(v0.c1)))OR(v0.c2)))))AND(NULL)))OR(NULL)))OR(v0.c1 COLLATE RTRIM));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((CASE v0.c2  WHEN v0.c0 THEN rt0.c3 END)OR(((((((((rt0.c1)AND(rt0.c0)))OR(x'ae72')))OR(v0.c2)))OR(rt0.c4)))))AND(((0.40521388285180926) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c2  WHEN v0.c0 THEN rt0.c3 END)OR(((((((((rt0.c1)AND(rt0.c0)))OR(x'ae72')))OR(v0.c2)))OR(rt0.c4)))))AND(((0.40521388285180926) IS TRUE)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((CASE v0.c2  WHEN v0.c0 THEN rt0.c3 END)OR(((((((((rt0.c1)AND(rt0.c0)))OR(x'ae72')))OR(v0.c2)))OR(rt0.c4)))))AND(((0.40521388285180926) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c2  WHEN v0.c0 THEN rt0.c3 END)OR(((((((((rt0.c1)AND(rt0.c0)))OR(x'ae72')))OR(v0.c2)))OR(rt0.c4)))))AND(((0.40521388285180926) IS TRUE)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((CASE v0.c2  WHEN v0.c0 THEN rt0.c3 END)OR(((((((((rt0.c1)AND(rt0.c0)))OR(x'ae72')))OR(v0.c2)))OR(rt0.c4)))))AND(((0.40521388285180926) IS TRUE))));
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY ((((((v0.c0) NOTNULL))AND((v0.c1 IN ()))))OR(v0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOTNULL))AND((v0.c1 IN ()))))OR(v0.c0)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY ((((((v0.c0) NOTNULL))AND((v0.c1 IN ()))))OR(v0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOTNULL))AND((v0.c1 IN ()))))OR(v0.c0)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY ((((((v0.c0) NOTNULL))AND((v0.c1 IN ()))))OR(v0.c0)) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE ((+ ('ச'))) ORDER BY MAX((rt0.c2 IN ()), CAST(v0.c1 AS REAL))  NULLS LAST, CAST((~ (rt0.c3)) AS BLOB) ASC  NULLS FIRST, ROUND(rt0.c2, CAST(rt0.c1 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ('ச'))) IS TRUE)  as count FROM v0, rt0 ORDER BY MAX((rt0.c2 IN ()), CAST(v0.c1 AS REAL))  NULLS LAST, CAST((~ (rt0.c3)) AS BLOB) ASC  NULLS FIRST, ROUND(rt0.c2, CAST(rt0.c1 AS NUMERIC)) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((+ ('ச'))) ORDER BY MAX((rt0.c2 IN ()), CAST(v0.c1 AS REAL))  NULLS LAST, CAST((~ (rt0.c3)) AS BLOB) ASC  NULLS FIRST, ROUND(rt0.c2, CAST(rt0.c1 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ('ச'))) IS TRUE)  as count FROM v0, rt0 ORDER BY MAX((rt0.c2 IN ()), CAST(v0.c1 AS REAL))  NULLS LAST, CAST((~ (rt0.c3)) AS BLOB) ASC  NULLS FIRST, ROUND(rt0.c2, CAST(rt0.c1 AS NUMERIC)) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((+ ('ச'))) ORDER BY MAX((rt0.c2 IN ()), CAST(v0.c1 AS REAL))  NULLS LAST, CAST((~ (rt0.c3)) AS BLOB) ASC  NULLS FIRST, ROUND(rt0.c2, CAST(rt0.c1 AS NUMERIC)) DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c1)) BETWEEN ((v0.c2)) AND ((x''))) IN ((~ (vt0.c0)), v0.c0, v0.c1))) ORDER BY ((((v0.c1)LIKE(v0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((v0.c1)) BETWEEN ((v0.c2)) AND ((x''))) IN ((~ (vt0.c0)), v0.c0, v0.c1))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c1)LIKE(v0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c1)) BETWEEN ((v0.c2)) AND ((x''))) IN ((~ (vt0.c0)), v0.c0, v0.c1))) ORDER BY ((((v0.c1)LIKE(v0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((v0.c1)) BETWEEN ((v0.c2)) AND ((x''))) IN ((~ (vt0.c0)), v0.c0, v0.c1))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c1)LIKE(v0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c1)) BETWEEN ((v0.c2)) AND ((x''))) IN ((~ (vt0.c0)), v0.c0, v0.c1))) ORDER BY ((((v0.c1)LIKE(v0.c1))) IS FALSE);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT ((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)), (- (rt0.c2)))) ORDER BY (((((rt0.c2))!=((rt0.c1))))-((((rt0.c4))==((rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)), (- (rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2))!=((rt0.c1))))-((((rt0.c4))=((rt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT ((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)), (- (rt0.c2)))) ORDER BY (((((rt0.c2))!=((rt0.c1))))-((((rt0.c4))==((rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)), (- (rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2))!=((rt0.c1))))-((((rt0.c4))=((rt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT ((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)), (- (rt0.c2)))) ORDER BY (((((rt0.c2))!=((rt0.c1))))-((((rt0.c4))==((rt0.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0, vt0 WHERE ((+ (CASE WHEN x'888e' THEN rt0.c2 WHEN rt0.c0 THEN 0.014110322231277506 WHEN rt0.c3 THEN v0.c2 END))) ORDER BY ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))) BETWEEN ((~ (v0.c2))) AND (((((0.2549346193624743)AND(rt0.c2)))AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN x'888e' THEN rt0.c2 WHEN rt0.c0 THEN 0.014110322231277506 WHEN rt0.c3 THEN v0.c2 END))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))) BETWEEN ((~ (v0.c2))) AND (((((0.2549346193624743)AND(rt0.c2)))AND(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((+ (CASE WHEN x'888e' THEN rt0.c2 WHEN rt0.c0 THEN 0.014110322231277506 WHEN rt0.c3 THEN v0.c2 END))) ORDER BY ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))) BETWEEN ((~ (v0.c2))) AND (((((0.2549346193624743)AND(rt0.c2)))AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN x'888e' THEN rt0.c2 WHEN rt0.c0 THEN 0.014110322231277506 WHEN rt0.c3 THEN v0.c2 END))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))) BETWEEN ((~ (v0.c2))) AND (((((0.2549346193624743)AND(rt0.c2)))AND(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((+ (CASE WHEN x'888e' THEN rt0.c2 WHEN rt0.c0 THEN 0.014110322231277506 WHEN rt0.c3 THEN v0.c2 END))) ORDER BY ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))) BETWEEN ((~ (v0.c2))) AND (((((0.2549346193624743)AND(rt0.c2)))AND(v0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (INSTR(vt0.c0, rt0.c4) IN (((rt0.c2)GLOB(rt0.c2)))) WHERE (((CAST(rt0.c2 AS BLOB))AND(rt0.c4 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB))AND(rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (INSTR(vt0.c0, rt0.c4) IN (((rt0.c2)GLOB(rt0.c2)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (INSTR(vt0.c0, rt0.c4) IN (((rt0.c2)GLOB(rt0.c2)))) WHERE (((CAST(rt0.c2 AS BLOB))AND(rt0.c4 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB))AND(rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (INSTR(vt0.c0, rt0.c4) IN (((rt0.c2)GLOB(rt0.c2)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (INSTR(vt0.c0, rt0.c4) IN (((rt0.c2)GLOB(rt0.c2)))) WHERE (((CAST(rt0.c2 AS BLOB))AND(rt0.c4 COLLATE RTRIM)));
SELECT * FROM v0, vt0 FULL OUTER JOIN rt0 ON (NOT (-6.50298686E8)) WHERE ((rt0.c4 IN (v0.c1, ((((rt0.c2)OR(rt0.c4)))AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((rt0.c4 IN (v0.c1, ((((rt0.c2)OR(rt0.c4)))AND(v0.c1))))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON (NOT (-6.50298686E8)));
SELECT * FROM v0, vt0 FULL OUTER JOIN rt0 ON (NOT (-6.50298686E8)) WHERE ((rt0.c4 IN (v0.c1, ((((rt0.c2)OR(rt0.c4)))AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((rt0.c4 IN (v0.c1, ((((rt0.c2)OR(rt0.c4)))AND(v0.c1))))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON (NOT (-6.50298686E8)));
SELECT * FROM v0, vt0 FULL OUTER JOIN rt0 ON (NOT (-6.50298686E8)) WHERE ((rt0.c4 IN (v0.c1, ((((rt0.c2)OR(rt0.c4)))AND(v0.c1)))));
SELECT * FROM vt0, rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (rt0.c4);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON rt0.c3 COLLATE NOCASE LEFT OUTER JOIN rt0 ON rt0.c3 WHERE ((((((((((v0.c1 IN ()))OR(((rt0.c4)>(v0.c2)))))OR(rt0.c3)))AND(0.6954571969806288 COLLATE RTRIM)))OR(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c1 IN ()))OR(((rt0.c4)>(v0.c2)))))OR(rt0.c3)))AND(0.6954571969806288 COLLATE RTRIM)))OR(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON rt0.c3 COLLATE NOCASE LEFT OUTER JOIN rt0 ON rt0.c3);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON rt0.c3 COLLATE NOCASE LEFT OUTER JOIN rt0 ON rt0.c3 WHERE ((((((((((v0.c1 IN ()))OR(((rt0.c4)>(v0.c2)))))OR(rt0.c3)))AND(0.6954571969806288 COLLATE RTRIM)))OR(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c1 IN ()))OR(((rt0.c4)>(v0.c2)))))OR(rt0.c3)))AND(0.6954571969806288 COLLATE RTRIM)))OR(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON rt0.c3 COLLATE NOCASE LEFT OUTER JOIN rt0 ON rt0.c3);
SELECT * FROM vt0, v0, rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((x'64d8')) AND ((v0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((x'64d8')) AND ((v0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((x'64d8')) AND ((v0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((x'64d8')) AND ((v0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((x'64d8')) AND ((v0.c1 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON (((v0.c2)) BETWEEN (((NOT (v0.c2)))) AND ((CAST(rt0.c1 AS BLOB)))) WHERE (((((rt0.c2)>>(v0.c2)))GLOB(((v0.c0)|(v0.c0))))) ORDER BY ((((v0.c1)LIKE(rt0.c4)))-(((((NULL)AND(rt0.c1)))AND(rt0.c2))))  NULLS LAST, ((v0.c2) IS FALSE) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>>(v0.c2)))GLOB(((v0.c0)|(v0.c0))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON (((v0.c2)) BETWEEN (((NOT (v0.c2)))) AND ((CAST(rt0.c1 AS BLOB)))) ORDER BY ((((v0.c1)LIKE(rt0.c4)))-(((((NULL)AND(rt0.c1)))AND(rt0.c2))))  NULLS LAST, ((v0.c2) IS FALSE) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON (((v0.c2)) BETWEEN (((NOT (v0.c2)))) AND ((CAST(rt0.c1 AS BLOB)))) WHERE (((((rt0.c2)>>(v0.c2)))GLOB(((v0.c0)|(v0.c0))))) ORDER BY ((((v0.c1)LIKE(rt0.c4)))-(((((NULL)AND(rt0.c1)))AND(rt0.c2))))  NULLS LAST, ((v0.c2) IS FALSE) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>>(v0.c2)))GLOB(((v0.c0)|(v0.c0))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON (((v0.c2)) BETWEEN (((NOT (v0.c2)))) AND ((CAST(rt0.c1 AS BLOB)))) ORDER BY ((((v0.c1)LIKE(rt0.c4)))-(((((NULL)AND(rt0.c1)))AND(rt0.c2))))  NULLS LAST, ((v0.c2) IS FALSE) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON (((v0.c2)) BETWEEN (((NOT (v0.c2)))) AND ((CAST(rt0.c1 AS BLOB)))) WHERE (((((rt0.c2)>>(v0.c2)))GLOB(((v0.c0)|(v0.c0))))) ORDER BY ((((v0.c1)LIKE(rt0.c4)))-(((((NULL)AND(rt0.c1)))AND(rt0.c2))))  NULLS LAST, ((v0.c2) IS FALSE) COLLATE RTRIM DESC;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (((v0.c2)) NOT BETWEEN ((((((((((((((vt0.c0)OR(v0.c2)))OR(v0.c2)))AND(v0.c1)))AND(v0.c2)))OR(vt0.c0)))AND(vt0.c0)))) AND (((((v0.c2, v0.c1, v0.c2)) BETWEEN ((vt0.c0, v0.c2, v0.c2)) AND ((v0.c1, v0.c1, vt0.c0)))))) WHERE (json_array(((v0.c0) IS TRUE), IFNULL(DISTINCT v0.c1, v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((v0.c0) IS TRUE), IFNULL(DISTINCT v0.c1, v0.c2))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((v0.c2)) NOT BETWEEN ((((((((((((((vt0.c0)OR(v0.c2)))OR(v0.c2)))AND(v0.c1)))AND(v0.c2)))OR(vt0.c0)))AND(vt0.c0)))) AND (((((v0.c2, v0.c1, v0.c2)) BETWEEN ((vt0.c0, v0.c2, v0.c2)) AND ((v0.c1, v0.c1, vt0.c0)))))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (((v0.c2)) NOT BETWEEN ((((((((((((((vt0.c0)OR(v0.c2)))OR(v0.c2)))AND(v0.c1)))AND(v0.c2)))OR(vt0.c0)))AND(vt0.c0)))) AND (((((v0.c2, v0.c1, v0.c2)) BETWEEN ((vt0.c0, v0.c2, v0.c2)) AND ((v0.c1, v0.c1, vt0.c0)))))) WHERE (json_array(((v0.c0) IS TRUE), IFNULL(DISTINCT v0.c1, v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((v0.c0) IS TRUE), IFNULL(DISTINCT v0.c1, v0.c2))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((v0.c2)) NOT BETWEEN ((((((((((((((vt0.c0)OR(v0.c2)))OR(v0.c2)))AND(v0.c1)))AND(v0.c2)))OR(vt0.c0)))AND(vt0.c0)))) AND (((((v0.c2, v0.c1, v0.c2)) BETWEEN ((vt0.c0, v0.c2, v0.c2)) AND ((v0.c1, v0.c1, vt0.c0)))))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (((v0.c2)) NOT BETWEEN ((((((((((((((vt0.c0)OR(v0.c2)))OR(v0.c2)))AND(v0.c1)))AND(v0.c2)))OR(vt0.c0)))AND(vt0.c0)))) AND (((((v0.c2, v0.c1, v0.c2)) BETWEEN ((vt0.c0, v0.c2, v0.c2)) AND ((v0.c1, v0.c1, vt0.c0)))))) WHERE (json_array(((v0.c0) IS TRUE), IFNULL(DISTINCT v0.c1, v0.c2)));
SELECT * FROM v0, vt0, rt0 WHERE ((((CAST(0.530088014287237 AS INTEGER)))<=((((rt0.c1)>=(v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CAST(0.530088014287237 AS INTEGER)))<=((((rt0.c1)>=(v0.c1)))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE ((((CAST(0.530088014287237 AS INTEGER)))<=((((rt0.c1)>=(v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CAST(0.530088014287237 AS INTEGER)))<=((((rt0.c1)>=(v0.c1)))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE ((((CAST(0.530088014287237 AS INTEGER)))<=((((rt0.c1)>=(v0.c1))))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL));
SELECT * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL);
SELECT COUNT(*) FROM v0 WHERE ((((NOT (v0.c1))) IS TRUE)) ORDER BY UPPER(((v0.c0) IS FALSE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c1))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY UPPER(((v0.c0) IS FALSE))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((NOT (v0.c1))) IS TRUE)) ORDER BY UPPER(((v0.c0) IS FALSE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c1))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY UPPER(((v0.c0) IS FALSE))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((NOT (v0.c1))) IS TRUE)) ORDER BY UPPER(((v0.c0) IS FALSE))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CASE x'62d6' COLLATE RTRIM  WHEN ((v0.c2)<<(v0.c0)) THEN v0.c1 COLLATE RTRIM WHEN ((((((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1)))AND(0Xfffffffff39ff7e3)))AND(v0.c0)) THEN (('3xhZNNy')IS(v0.c2)) WHEN -731952209 THEN ('1815151598' IN ()) END) ORDER BY (((((v0.c1))>=((v0.c2)))) BETWEEN (v0.c0) AND ('7!IV~N[CY')), ((((v0.c2)OR(v0.c1))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c1))) AND (((NULL)-(v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE x'62d6' COLLATE RTRIM  WHEN ((v0.c2)<<(v0.c0)) THEN v0.c1 COLLATE RTRIM WHEN ((((((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1)))AND(0Xfffffffff39ff7e3)))AND(v0.c0)) THEN (('3xhZNNy')IS(v0.c2)) WHEN -731952209 THEN ('1815151598' IN ()) END) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c1))>=((v0.c2)))) BETWEEN (v0.c0) AND ('7!IV~N[CY')), ((((v0.c2)OR(v0.c1))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c1))) AND (((NULL)-(v0.c2)))) DESC);
SELECT ALL * FROM v0 WHERE (CASE x'62d6' COLLATE RTRIM  WHEN ((v0.c2)<<(v0.c0)) THEN v0.c1 COLLATE RTRIM WHEN ((((((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1)))AND(0Xfffffffff39ff7e3)))AND(v0.c0)) THEN (('3xhZNNy')IS(v0.c2)) WHEN -731952209 THEN ('1815151598' IN ()) END) ORDER BY (((((v0.c1))>=((v0.c2)))) BETWEEN (v0.c0) AND ('7!IV~N[CY')), ((((v0.c2)OR(v0.c1))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c1))) AND (((NULL)-(v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE x'62d6' COLLATE RTRIM  WHEN ((v0.c2)<<(v0.c0)) THEN v0.c1 COLLATE RTRIM WHEN ((((((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1)))AND(0Xfffffffff39ff7e3)))AND(v0.c0)) THEN (('3xhZNNy')IS(v0.c2)) WHEN -731952209 THEN ('1815151598' IN ()) END) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c1))>=((v0.c2)))) BETWEEN (v0.c0) AND ('7!IV~N[CY')), ((((v0.c2)OR(v0.c1))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c1))) AND (((NULL)-(v0.c2)))) DESC);
SELECT ALL * FROM v0 WHERE (CASE x'62d6' COLLATE RTRIM  WHEN ((v0.c2)<<(v0.c0)) THEN v0.c1 COLLATE RTRIM WHEN ((((((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1)))AND(0Xfffffffff39ff7e3)))AND(v0.c0)) THEN (('3xhZNNy')IS(v0.c2)) WHEN -731952209 THEN ('1815151598' IN ()) END) ORDER BY (((((v0.c1))>=((v0.c2)))) BETWEEN (v0.c0) AND ('7!IV~N[CY')), ((((v0.c2)OR(v0.c1))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c1))) AND (((NULL)-(v0.c2)))) DESC;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (GLOB((NOT (v0.c0)), ((((((((((((rt0.c1)OR(rt0.c0)))OR(v0.c0)))AND(v0.c1)))OR(rt0.c1)))AND(x'c260')))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((GLOB((NOT (v0.c0)), ((((((((((((rt0.c1)OR(rt0.c0)))OR(v0.c0)))AND(v0.c1)))OR(rt0.c1)))AND(x'c260')))AND(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (GLOB((NOT (v0.c0)), ((((((((((((rt0.c1)OR(rt0.c0)))OR(v0.c0)))AND(v0.c1)))OR(rt0.c1)))AND(x'c260')))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((GLOB((NOT (v0.c0)), ((((((((((((rt0.c1)OR(rt0.c0)))OR(v0.c0)))AND(v0.c1)))OR(rt0.c1)))AND(x'c260')))AND(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (GLOB((NOT (v0.c0)), ((((((((((((rt0.c1)OR(rt0.c0)))OR(v0.c0)))AND(v0.c1)))OR(rt0.c1)))AND(x'c260')))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((NULL COLLATE NOCASE)>=(0.17295795481742937)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE NOCASE)>=(0.17295795481742937))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((NULL COLLATE NOCASE)>=(0.17295795481742937)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE NOCASE)>=(0.17295795481742937))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((NULL COLLATE NOCASE)>=(0.17295795481742937)));
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((NULL IN ()))|(((rt0.c4)*(rt0.c0))))) ORDER BY (((rt0.c1)) NOT BETWEEN (((NOT (v0.c1)))) AND (('*__'))) DESC;
SELECT SUM(count) FROM (SELECT (((((NULL IN ()))|(((rt0.c4)*(rt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0 NOT INDEXED, rt0 ORDER BY (((rt0.c1)) NOT BETWEEN (((NOT (v0.c1)))) AND (('*__'))) DESC);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((NULL IN ()))|(((rt0.c4)*(rt0.c0))))) ORDER BY (((rt0.c1)) NOT BETWEEN (((NOT (v0.c1)))) AND (('*__'))) DESC;
SELECT SUM(count) FROM (SELECT (((((NULL IN ()))|(((rt0.c4)*(rt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0 NOT INDEXED, rt0 ORDER BY (((rt0.c1)) NOT BETWEEN (((NOT (v0.c1)))) AND (('*__'))) DESC);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((NULL IN ()))|(((rt0.c4)*(rt0.c0))))) ORDER BY (((rt0.c1)) NOT BETWEEN (((NOT (v0.c1)))) AND (('*__'))) DESC;
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON '158333329' COLLATE BINARY WHERE ((- (((v0.c1) NOT NULL)))) ORDER BY ((((v0.c0)<(rt0.c0)))>=((((v0.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c1)) AND ((rt0.c4, v0.c2, rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c1) NOT NULL)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON '158333329' COLLATE BINARY ORDER BY ((((v0.c0)<(rt0.c0)))>=((((v0.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c1)) AND ((rt0.c4, v0.c2, rt0.c0))))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON '158333329' COLLATE BINARY WHERE ((- (((v0.c1) NOT NULL)))) ORDER BY ((((v0.c0)<(rt0.c0)))>=((((v0.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c1)) AND ((rt0.c4, v0.c2, rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c1) NOT NULL)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON '158333329' COLLATE BINARY ORDER BY ((((v0.c0)<(rt0.c0)))>=((((v0.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c1)) AND ((rt0.c4, v0.c2, rt0.c0))))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON '158333329' COLLATE BINARY WHERE ((- (((v0.c1) NOT NULL)))) ORDER BY ((((v0.c0)<(rt0.c0)))>=((((v0.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c1)) AND ((rt0.c4, v0.c2, rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((0.9339811152116875)OR(rt0.c2)))AND(rt0.c3)))OR(CAST(rt0.c1 AS REAL))))AND(((rt0.c4) IS TRUE)))) ORDER BY (((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c1, ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))!=(((~ (rt0.c0)), NULLIF(DISTINCT rt0.c4, rt0.c3), ((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.9339811152116875)OR(rt0.c2)))AND(rt0.c3)))OR(CAST(rt0.c1 AS REAL))))AND(((rt0.c4) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c1, ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))<>(((~ (rt0.c0)), NULLIF(DISTINCT rt0.c4, rt0.c3), ((rt0.c2) NOT NULL)))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((0.9339811152116875)OR(rt0.c2)))AND(rt0.c3)))OR(CAST(rt0.c1 AS REAL))))AND(((rt0.c4) IS TRUE)))) ORDER BY (((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c1, ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))!=(((~ (rt0.c0)), NULLIF(DISTINCT rt0.c4, rt0.c3), ((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.9339811152116875)OR(rt0.c2)))AND(rt0.c3)))OR(CAST(rt0.c1 AS REAL))))AND(((rt0.c4) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c1, ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))<>(((~ (rt0.c0)), NULLIF(DISTINCT rt0.c4, rt0.c3), ((rt0.c2) NOT NULL)))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((0.9339811152116875)OR(rt0.c2)))AND(rt0.c3)))OR(CAST(rt0.c1 AS REAL))))AND(((rt0.c4) IS TRUE)))) ORDER BY (((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c1, ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))!=(((~ (rt0.c0)), NULLIF(DISTINCT rt0.c4, rt0.c3), ((rt0.c2) NOT NULL))));
SELECT ALL * FROM rt0 WHERE ((((((0xffffffffd6331fb5) NOTNULL)))<=((((rt0.c2) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((((0Xffffffffd6331fb5) NOTNULL)))<=((((rt0.c2) NOTNULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((0xffffffffd6331fb5) NOTNULL)))<=((((rt0.c2) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((((0Xffffffffd6331fb5) NOTNULL)))<=((((rt0.c2) NOTNULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((0xffffffffd6331fb5) NOTNULL)))<=((((rt0.c2) NOTNULL)))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (json_array(vt0.c0, vt0.c0, 0.26723304311116125, 1459822392)) AND ((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (json_array(vt0.c0, vt0.c0, 0.26723304311116125, 1459822392)) AND ((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (json_array(vt0.c0, vt0.c0, 0.26723304311116125, 1459822392)) AND ((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (json_array(vt0.c0, vt0.c0, 0.26723304311116125, 1459822392)) AND ((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (json_array(vt0.c0, vt0.c0, 0.26723304311116125, 1459822392)) AND ((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL * FROM v0 WHERE (((CAST(v0.c2 AS BLOB))/(v0.c0))) ORDER BY ((((v0.c2) IS TRUE))+(((v0.c0)-(x'4672'))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS BLOB))/(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) IS TRUE))+(((v0.c0)-(x'4672')))));
SELECT ALL * FROM v0 WHERE (((CAST(v0.c2 AS BLOB))/(v0.c0))) ORDER BY ((((v0.c2) IS TRUE))+(((v0.c0)-(x'4672'))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS BLOB))/(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) IS TRUE))+(((v0.c0)-(x'4672')))));
SELECT ALL * FROM v0 WHERE (((CAST(v0.c2 AS BLOB))/(v0.c0))) ORDER BY ((((v0.c2) IS TRUE))+(((v0.c0)-(x'4672'))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (((0Xffffffffcda69bde))>=((ROUND(rt0.c3, rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((0xffffffffcda69bde))>=((ROUND(rt0.c3, rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (((0Xffffffffcda69bde))>=((ROUND(rt0.c3, rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((0xffffffffcda69bde))>=((ROUND(rt0.c3, rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (((0Xffffffffcda69bde))>=((ROUND(rt0.c3, rt0.c1)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR((((NULL))<((rt0.c1))))))AND(rt0.c1))) ORDER BY CAST(((rt0.c0)-(rt0.c3)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR((((NULL))<((rt0.c1))))))AND(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)-(rt0.c3)) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR((((NULL))<((rt0.c1))))))AND(rt0.c1))) ORDER BY CAST(((rt0.c0)-(rt0.c3)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR((((NULL))<((rt0.c1))))))AND(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)-(rt0.c3)) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR((((NULL))<((rt0.c1))))))AND(rt0.c1))) ORDER BY CAST(((rt0.c0)-(rt0.c3)) AS REAL);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c1 AS BLOB)) ORDER BY ((((v0.c1) BETWEEN ('291145510') AND (v0.c2)))<((v0.c1 IN ()))) ASC, (((v0.c1))!=((v0.c1 COLLATE RTRIM))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) BETWEEN ('291145510') AND (v0.c2)))<((v0.c1 IN ()))) ASC, (((v0.c1))<>((v0.c1 COLLATE RTRIM))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c1 AS BLOB)) ORDER BY ((((v0.c1) BETWEEN ('291145510') AND (v0.c2)))<((v0.c1 IN ()))) ASC, (((v0.c1))!=((v0.c1 COLLATE RTRIM))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) BETWEEN ('291145510') AND (v0.c2)))<((v0.c1 IN ()))) ASC, (((v0.c1))<>((v0.c1 COLLATE RTRIM))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c1 AS BLOB)) ORDER BY ((((v0.c1) BETWEEN ('291145510') AND (v0.c2)))<((v0.c1 IN ()))) ASC, (((v0.c1))!=((v0.c1 COLLATE RTRIM))) DESC;
SELECT ALL * FROM v0, vt0 WHERE (v0.c0) ORDER BY (((TYPEOF(v0.c2)))<=((((v0.c1)IS NOT(v0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY (((TYPEOF(v0.c2)))<=((((v0.c1)IS NOT(v0.c1))))) ASC);
SELECT ALL * FROM v0, vt0 WHERE (v0.c0) ORDER BY (((TYPEOF(v0.c2)))<=((((v0.c1)IS NOT(v0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY (((TYPEOF(v0.c2)))<=((((v0.c1)IS NOT(v0.c1))))) ASC);
SELECT ALL * FROM v0, vt0 WHERE (v0.c0) ORDER BY (((TYPEOF(v0.c2)))<=((((v0.c1)IS NOT(v0.c1))))) ASC;
SELECT ALL * FROM v0 WHERE (0.9537790516009397);
SELECT SUM(count) FROM (SELECT ((0.9537790516009397) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.9537790516009397);
SELECT SUM(count) FROM (SELECT ((0.9537790516009397) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.9537790516009397);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c2) BETWEEN (((rt0.c1)GLOB('-921448955'))) AND ((rt0.c3 IN ()))) WHERE (((((((((((((rt0.c2)AND(0x58cf2990)))AND(rt0.c1)))OR((rt0.c4 IN ()))))OR((+ (rt0.c2)))))AND(((0Xffffffffeb48cb3d) ISNULL))))OR(LOWER(DISTINCT rt0.c1)))) ORDER BY '-1421623555' ASC  NULLS FIRST, ((rt0.c2 IN ()) IN ((~ (rt0.c1)), rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c2)AND(0X58cf2990)))AND(rt0.c1)))OR((rt0.c4 IN ()))))OR((+ (rt0.c2)))))AND(((0xffffffffeb48cb3d) ISNULL))))OR(LOWER(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c2) BETWEEN (((rt0.c1)GLOB('-921448955'))) AND ((rt0.c3 IN ()))) ORDER BY '-1421623555' ASC  NULLS FIRST, ((rt0.c2 IN ()) IN ((~ (rt0.c1)), rt0.c1 COLLATE RTRIM)));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c2) BETWEEN (((rt0.c1)GLOB('-921448955'))) AND ((rt0.c3 IN ()))) WHERE (((((((((((((rt0.c2)AND(0x58cf2990)))AND(rt0.c1)))OR((rt0.c4 IN ()))))OR((+ (rt0.c2)))))AND(((0Xffffffffeb48cb3d) ISNULL))))OR(LOWER(DISTINCT rt0.c1)))) ORDER BY '-1421623555' ASC  NULLS FIRST, ((rt0.c2 IN ()) IN ((~ (rt0.c1)), rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c2)AND(0X58cf2990)))AND(rt0.c1)))OR((rt0.c4 IN ()))))OR((+ (rt0.c2)))))AND(((0xffffffffeb48cb3d) ISNULL))))OR(LOWER(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c2) BETWEEN (((rt0.c1)GLOB('-921448955'))) AND ((rt0.c3 IN ()))) ORDER BY '-1421623555' ASC  NULLS FIRST, ((rt0.c2 IN ()) IN ((~ (rt0.c1)), rt0.c1 COLLATE RTRIM)));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c2) BETWEEN (((rt0.c1)GLOB('-921448955'))) AND ((rt0.c3 IN ()))) WHERE (((((((((((((rt0.c2)AND(0x58cf2990)))AND(rt0.c1)))OR((rt0.c4 IN ()))))OR((+ (rt0.c2)))))AND(((0Xffffffffeb48cb3d) ISNULL))))OR(LOWER(DISTINCT rt0.c1)))) ORDER BY '-1421623555' ASC  NULLS FIRST, ((rt0.c2 IN ()) IN ((~ (rt0.c1)), rt0.c1 COLLATE RTRIM));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c3 COLLATE BINARY) NOT NULL) WHERE ((v0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c3 COLLATE BINARY) NOT NULL));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c3 COLLATE BINARY) NOT NULL) WHERE ((v0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c3 COLLATE BINARY) NOT NULL));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c3 COLLATE BINARY) NOT NULL) WHERE ((v0.c1 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE ((((((- (rt0.c3)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c4 END))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c3)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c4 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((((((- (rt0.c3)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c4 END))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c3)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c4 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((((((- (rt0.c3)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c4 END))) ORDER BY NULL  NULLS FIRST;
SELECT ALL * FROM rt0, v0, vt0 WHERE (((v0.c0)LIKE(((rt0.c0)IS NOT(-1679325116)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)LIKE(((rt0.c0)IS NOT(-1679325116))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((v0.c0)LIKE(((rt0.c0)IS NOT(-1679325116)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)LIKE(((rt0.c0)IS NOT(-1679325116))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((v0.c0)LIKE(((rt0.c0)IS NOT(-1679325116)))));
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2)AND(v0.c2)))OR(rt0.c4)))OR(rt0.c3)))OR(v0.c1)))/(((vt0.c0) NOT NULL))) WHERE (((((((rt0.c4)<>(rt0.c2)))OR(((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(x'')))OR(rt0.c2)))AND(v0.c2)))AND(v0.c1)))))AND((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)!=(rt0.c2)))OR(((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(x'')))OR(rt0.c2)))AND(v0.c2)))AND(v0.c1)))))AND((v0.c0 IN ())))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2)AND(v0.c2)))OR(rt0.c4)))OR(rt0.c3)))OR(v0.c1)))/(((vt0.c0) NOT NULL))));
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2)AND(v0.c2)))OR(rt0.c4)))OR(rt0.c3)))OR(v0.c1)))/(((vt0.c0) NOT NULL))) WHERE (((((((rt0.c4)<>(rt0.c2)))OR(((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(x'')))OR(rt0.c2)))AND(v0.c2)))AND(v0.c1)))))AND((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)!=(rt0.c2)))OR(((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(x'')))OR(rt0.c2)))AND(v0.c2)))AND(v0.c1)))))AND((v0.c0 IN ())))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2)AND(v0.c2)))OR(rt0.c4)))OR(rt0.c3)))OR(v0.c1)))/(((vt0.c0) NOT NULL))));
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2)AND(v0.c2)))OR(rt0.c4)))OR(rt0.c3)))OR(v0.c1)))/(((vt0.c0) NOT NULL))) WHERE (((((((rt0.c4)<>(rt0.c2)))OR(((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(x'')))OR(rt0.c2)))AND(v0.c2)))AND(v0.c1)))))AND((v0.c0 IN ()))));
SELECT * FROM v0, rt0 WHERE ((- ((x'4a37' IN ())))) ORDER BY rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((x'4a37' IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c4  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((- ((x'4a37' IN ())))) ORDER BY rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((x'4a37' IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c4  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((- ((x'4a37' IN ())))) ORDER BY rt0.c4  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN ()) INNER JOIN rt0 ON (CAST(vt0.c0 AS REAL) IN ()) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN ()) INNER JOIN rt0 ON (CAST(vt0.c0 AS REAL) IN ()));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN ()) INNER JOIN rt0 ON (CAST(vt0.c0 AS REAL) IN ()) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN ()) INNER JOIN rt0 ON (CAST(vt0.c0 AS REAL) IN ()));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN ()) INNER JOIN rt0 ON (CAST(vt0.c0 AS REAL) IN ()) WHERE (rt0.c4);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))OR((((vt0.c0))=((v0.c2))))))OR((NOT (NULL))))) ORDER BY CASE v0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))OR((((vt0.c0))=((v0.c2))))))OR((NOT (NULL))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CASE v0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))OR((((vt0.c0))=((v0.c2))))))OR((NOT (NULL))))) ORDER BY CASE v0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))OR((((vt0.c0))=((v0.c2))))))OR((NOT (NULL))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CASE v0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))OR((((vt0.c0))=((v0.c2))))))OR((NOT (NULL))))) ORDER BY CASE v0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END COLLATE BINARY  NULLS LAST;
SELECT * FROM rt0, vt0 CROSS JOIN v0 ON ('-1e500' IN ()) WHERE ((((((v0.c1)>=(rt0.c3))))==(((v0.c2 IN ()))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((((v0.c1)>=(rt0.c3))))=(((v0.c2 IN ()))))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON ('-1e500' IN ()) ORDER BY x'');
SELECT * FROM rt0, vt0 CROSS JOIN v0 ON ('-1e500' IN ()) WHERE ((((((v0.c1)>=(rt0.c3))))==(((v0.c2 IN ()))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((((v0.c1)>=(rt0.c3))))=(((v0.c2 IN ()))))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON ('-1e500' IN ()) ORDER BY x'');
SELECT * FROM rt0, vt0 CROSS JOIN v0 ON ('-1e500' IN ()) WHERE ((((((v0.c1)>=(rt0.c3))))==(((v0.c2 IN ()))))) ORDER BY x'';
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, '')))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, '')))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, '')))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, '')))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, '')))) IS TRUE));
SELECT * FROM rt0, vt0, v0 WHERE (((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3))) NOT NULL)) ORDER BY json_quote(v0.c2 COLLATE RTRIM) ASC, ((('x' IN ())) NOT NULL) DESC  NULLS LAST, CASE WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c0) IS FALSE) ELSE (- (x'ba511cfa')) END;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY json_quote(v0.c2 COLLATE RTRIM) ASC, ((('x' IN ())) NOT NULL) DESC  NULLS LAST, CASE WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c0) IS FALSE) ELSE (- (x'ba511cfa')) END);
SELECT * FROM rt0, vt0, v0 WHERE (((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3))) NOT NULL)) ORDER BY json_quote(v0.c2 COLLATE RTRIM) ASC, ((('x' IN ())) NOT NULL) DESC  NULLS LAST, CASE WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c0) IS FALSE) ELSE (- (x'ba511cfa')) END;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY json_quote(v0.c2 COLLATE RTRIM) ASC, ((('x' IN ())) NOT NULL) DESC  NULLS LAST, CASE WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c0) IS FALSE) ELSE (- (x'ba511cfa')) END);
SELECT * FROM rt0, vt0, v0 WHERE (((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3))) NOT NULL)) ORDER BY json_quote(v0.c2 COLLATE RTRIM) ASC, ((('x' IN ())) NOT NULL) DESC  NULLS LAST, CASE WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c0) IS FALSE) ELSE (- (x'ba511cfa')) END;
SELECT * FROM v0, vt0 WHERE (((((LIKELY(v0.c2))OR(v0.c2 COLLATE NOCASE)))OR(((((v0.c1)OR(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(v0.c2))OR(v0.c2 COLLATE NOCASE)))OR(((((v0.c1)OR(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((LIKELY(v0.c2))OR(v0.c2 COLLATE NOCASE)))OR(((((v0.c1)OR(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(v0.c2))OR(v0.c2 COLLATE NOCASE)))OR(((((v0.c1)OR(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((LIKELY(v0.c2))OR(v0.c2 COLLATE NOCASE)))OR(((((v0.c1)OR(v0.c0)))AND(vt0.c0)))));
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c3 AS NUMERIC) COLLATE BINARY) ORDER BY (((((rt0.c0, rt0.c3, rt0.c0))>((rt0.c1, rt0.c2, rt0.c1))))>>(vt0.c0)), CASE ((('1679328774'))<((vt0.c0)))  WHEN 'u蚛' THEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN ((rt0.c3)|(rt0.c1)) THEN ((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)) WHEN '' THEN CASE rt0.c3  WHEN '315946794' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END ELSE CAST(rt0.c0 AS BLOB) END;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c0, rt0.c3, rt0.c0))>((rt0.c1, rt0.c2, rt0.c1))))>>(vt0.c0)), CASE ((('1679328774'))<((vt0.c0)))  WHEN 'u蚛' THEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN ((rt0.c3)|(rt0.c1)) THEN ((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)) WHEN '' THEN CASE rt0.c3  WHEN '315946794' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END ELSE CAST(rt0.c0 AS BLOB) END);
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c3 AS NUMERIC) COLLATE BINARY) ORDER BY (((((rt0.c0, rt0.c3, rt0.c0))>((rt0.c1, rt0.c2, rt0.c1))))>>(vt0.c0)), CASE ((('1679328774'))<((vt0.c0)))  WHEN 'u蚛' THEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN ((rt0.c3)|(rt0.c1)) THEN ((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)) WHEN '' THEN CASE rt0.c3  WHEN '315946794' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END ELSE CAST(rt0.c0 AS BLOB) END;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c0, rt0.c3, rt0.c0))>((rt0.c1, rt0.c2, rt0.c1))))>>(vt0.c0)), CASE ((('1679328774'))<((vt0.c0)))  WHEN 'u蚛' THEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN ((rt0.c3)|(rt0.c1)) THEN ((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)) WHEN '' THEN CASE rt0.c3  WHEN '315946794' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END ELSE CAST(rt0.c0 AS BLOB) END);
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c3 AS NUMERIC) COLLATE BINARY) ORDER BY (((((rt0.c0, rt0.c3, rt0.c0))>((rt0.c1, rt0.c2, rt0.c1))))>>(vt0.c0)), CASE ((('1679328774'))<((vt0.c0)))  WHEN 'u蚛' THEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN ((rt0.c3)|(rt0.c1)) THEN ((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)) WHEN '' THEN CASE rt0.c3  WHEN '315946794' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END ELSE CAST(rt0.c0 AS BLOB) END;
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2 COLLATE RTRIM)AND((((rt0.c2, v0.c2, rt0.c0))<=((rt0.c4, v0.c1, '0.3018441192346639'))))))AND(((rt0.c2)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE RTRIM)AND((((rt0.c2, v0.c2, rt0.c0))<=((rt0.c4, v0.c1, '0.3018441192346639'))))))AND(((rt0.c2)IS(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2 COLLATE RTRIM)AND((((rt0.c2, v0.c2, rt0.c0))<=((rt0.c4, v0.c1, '0.3018441192346639'))))))AND(((rt0.c2)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE RTRIM)AND((((rt0.c2, v0.c2, rt0.c0))<=((rt0.c4, v0.c1, '0.3018441192346639'))))))AND(((rt0.c2)IS(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2 COLLATE RTRIM)AND((((rt0.c2, v0.c2, rt0.c0))<=((rt0.c4, v0.c1, '0.3018441192346639'))))))AND(((rt0.c2)IS(rt0.c2)))));
SELECT * FROM vt0, rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE x'3735' END) NOT BETWEEN ((rt0.c1 IN ())) AND ((+ (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE x'3735' END) NOT BETWEEN ((rt0.c1 IN ())) AND ((+ (rt0.c4))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE x'3735' END) NOT BETWEEN ((rt0.c1 IN ())) AND ((+ (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE x'3735' END) NOT BETWEEN ((rt0.c1 IN ())) AND ((+ (rt0.c4))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE x'3735' END) NOT BETWEEN ((rt0.c1 IN ())) AND ((+ (rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (rt0.c1) ORDER BY ((rt0.c3 COLLATE RTRIM) BETWEEN (CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN v0.c1 ELSE vt0.c0 END) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))), ((v0.c2)>=(CAST(rt0.c1 AS REAL)))  NULLS FIRST, (NOT ((((rt0.c1, v0.c0, v0.c1))>=((rt0.c2, v0.c2, v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((rt0.c3 COLLATE RTRIM) BETWEEN (CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN v0.c1 ELSE vt0.c0 END) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))), ((v0.c2)>=(CAST(rt0.c1 AS REAL)))  NULLS FIRST, (NOT ((((rt0.c1, v0.c0, v0.c1))>=((rt0.c2, v0.c2, v0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (rt0.c1) ORDER BY ((rt0.c3 COLLATE RTRIM) BETWEEN (CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN v0.c1 ELSE vt0.c0 END) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))), ((v0.c2)>=(CAST(rt0.c1 AS REAL)))  NULLS FIRST, (NOT ((((rt0.c1, v0.c0, v0.c1))>=((rt0.c2, v0.c2, v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((rt0.c3 COLLATE RTRIM) BETWEEN (CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN v0.c1 ELSE vt0.c0 END) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))), ((v0.c2)>=(CAST(rt0.c1 AS REAL)))  NULLS FIRST, (NOT ((((rt0.c1, v0.c0, v0.c1))>=((rt0.c2, v0.c2, v0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (rt0.c1) ORDER BY ((rt0.c3 COLLATE RTRIM) BETWEEN (CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN v0.c1 ELSE vt0.c0 END) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))), ((v0.c2)>=(CAST(rt0.c1 AS REAL)))  NULLS FIRST, (NOT ((((rt0.c1, v0.c0, v0.c1))>=((rt0.c2, v0.c2, v0.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT * FROM rt0, v0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT (((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2))), rt0.c1) WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT (((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2))), rt0.c1));
SELECT * FROM rt0, v0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT (((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2))), rt0.c1) WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT (((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2))), rt0.c1));
SELECT * FROM rt0, v0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT (((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2))), rt0.c1) WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC));
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((v0.c2)||(rt0.c1)) IN (((((v0.c0)AND(v0.c1)))AND(NULL))))) ORDER BY CASE CAST(vt0.c0 AS TEXT)  WHEN 0X1fbc4df5 THEN ((rt0.c3)<=(NULL)) END  NULLS FIRST, (((v0.c2 IN ())) BETWEEN ((('1404291840') IS FALSE)) AND (NULL)), NULLIF(DISTINCT v0.c0, ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)||(rt0.c1)) IN (((((v0.c0)AND(v0.c1)))AND(NULL))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE CAST(vt0.c0 AS TEXT)  WHEN 0x1fbc4df5 THEN ((rt0.c3)<=(NULL)) END  NULLS FIRST, (((v0.c2 IN ())) BETWEEN ((('1404291840') IS FALSE)) AND (NULL)), NULLIF(DISTINCT v0.c0, ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4))) DESC);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((v0.c2)||(rt0.c1)) IN (((((v0.c0)AND(v0.c1)))AND(NULL))))) ORDER BY CASE CAST(vt0.c0 AS TEXT)  WHEN 0X1fbc4df5 THEN ((rt0.c3)<=(NULL)) END  NULLS FIRST, (((v0.c2 IN ())) BETWEEN ((('1404291840') IS FALSE)) AND (NULL)), NULLIF(DISTINCT v0.c0, ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)||(rt0.c1)) IN (((((v0.c0)AND(v0.c1)))AND(NULL))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE CAST(vt0.c0 AS TEXT)  WHEN 0x1fbc4df5 THEN ((rt0.c3)<=(NULL)) END  NULLS FIRST, (((v0.c2 IN ())) BETWEEN ((('1404291840') IS FALSE)) AND (NULL)), NULLIF(DISTINCT v0.c0, ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4))) DESC);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((v0.c2)||(rt0.c1)) IN (((((v0.c0)AND(v0.c1)))AND(NULL))))) ORDER BY CASE CAST(vt0.c0 AS TEXT)  WHEN 0X1fbc4df5 THEN ((rt0.c3)<=(NULL)) END  NULLS FIRST, (((v0.c2 IN ())) BETWEEN ((('1404291840') IS FALSE)) AND (NULL)), NULLIF(DISTINCT v0.c0, ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4))) DESC;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON vt0.c0 COLLATE RTRIM FULL OUTER JOIN vt0 ON (+ (CAST(rt0.c2 AS TEXT))) WHERE (CASE WHEN '[]' THEN CASE WHEN vt0.c0 THEN v0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '[]' THEN CASE WHEN vt0.c0 THEN v0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON vt0.c0 COLLATE RTRIM FULL OUTER JOIN vt0 ON (+ (CAST(rt0.c2 AS TEXT))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON vt0.c0 COLLATE RTRIM FULL OUTER JOIN vt0 ON (+ (CAST(rt0.c2 AS TEXT))) WHERE (CASE WHEN '[]' THEN CASE WHEN vt0.c0 THEN v0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '[]' THEN CASE WHEN vt0.c0 THEN v0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON vt0.c0 COLLATE RTRIM FULL OUTER JOIN vt0 ON (+ (CAST(rt0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((v0.c0)&(0.8737644479057493)) COLLATE NOCASE) ORDER BY (('2069462522') NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)&(0.8737644479057493)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY (('2069462522') NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((v0.c0)&(0.8737644479057493)) COLLATE NOCASE) ORDER BY (('2069462522') NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)&(0.8737644479057493)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY (('2069462522') NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((v0.c0)&(0.8737644479057493)) COLLATE NOCASE) ORDER BY (('2069462522') NOT NULL) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((NULL)GLOB(rt0.c2)))OR(TRIM(DISTINCT rt0.c1))))AND(rt0.c1 COLLATE NOCASE)))OR((vt0.c0 IN ()))))AND(NULL))) ORDER BY (((rt0.c0, vt0.c0, vt0.c0)) BETWEEN ((LIKE(rt0.c3, vt0.c0), (rt0.c3 IN ()), rt0.c4)) AND ((rt0.c1 COLLATE NOCASE, (rt0.c0 IN ()), ((('X', vt0.c0, 0.8592826974268472))<>((rt0.c3, rt0.c3, rt0.c2)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)GLOB(rt0.c2)))OR(TRIM(DISTINCT rt0.c1))))AND(rt0.c1 COLLATE NOCASE)))OR((vt0.c0 IN ()))))AND(NULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0, vt0.c0, vt0.c0)) BETWEEN ((LIKE(rt0.c3, vt0.c0), (rt0.c3 IN ()), rt0.c4)) AND ((rt0.c1 COLLATE NOCASE, (rt0.c0 IN ()), ((('X', vt0.c0, 0.8592826974268472))!=((rt0.c3, rt0.c3, rt0.c2)))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((NULL)GLOB(rt0.c2)))OR(TRIM(DISTINCT rt0.c1))))AND(rt0.c1 COLLATE NOCASE)))OR((vt0.c0 IN ()))))AND(NULL))) ORDER BY (((rt0.c0, vt0.c0, vt0.c0)) BETWEEN ((LIKE(rt0.c3, vt0.c0), (rt0.c3 IN ()), rt0.c4)) AND ((rt0.c1 COLLATE NOCASE, (rt0.c0 IN ()), ((('X', vt0.c0, 0.8592826974268472))<>((rt0.c3, rt0.c3, rt0.c2)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)GLOB(rt0.c2)))OR(TRIM(DISTINCT rt0.c1))))AND(rt0.c1 COLLATE NOCASE)))OR((vt0.c0 IN ()))))AND(NULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0, vt0.c0, vt0.c0)) BETWEEN ((LIKE(rt0.c3, vt0.c0), (rt0.c3 IN ()), rt0.c4)) AND ((rt0.c1 COLLATE NOCASE, (rt0.c0 IN ()), ((('X', vt0.c0, 0.8592826974268472))!=((rt0.c3, rt0.c3, rt0.c2)))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((NULL)GLOB(rt0.c2)))OR(TRIM(DISTINCT rt0.c1))))AND(rt0.c1 COLLATE NOCASE)))OR((vt0.c0 IN ()))))AND(NULL))) ORDER BY (((rt0.c0, vt0.c0, vt0.c0)) BETWEEN ((LIKE(rt0.c3, vt0.c0), (rt0.c3 IN ()), rt0.c4)) AND ((rt0.c1 COLLATE NOCASE, (rt0.c0 IN ()), ((('X', vt0.c0, 0.8592826974268472))<>((rt0.c3, rt0.c3, rt0.c2)))))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)AND('241575631'))) BETWEEN (((((rt0.c0)OR('F[')))OR(x''))) AND (((rt0.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND('241575631'))) BETWEEN (((((rt0.c0)OR('F[')))OR(x''))) AND (((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)AND('241575631'))) BETWEEN (((((rt0.c0)OR('F[')))OR(x''))) AND (((rt0.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND('241575631'))) BETWEEN (((((rt0.c0)OR('F[')))OR(x''))) AND (((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)AND('241575631'))) BETWEEN (((((rt0.c0)OR('F[')))OR(x''))) AND (((rt0.c3) IS FALSE))));
SELECT * FROM rt0, v0 CROSS JOIN vt0 ON (((~ (vt0.c0)))||('-845430557')) WHERE ((((CAST(rt0.c2 AS INTEGER)))==((rt0.c4 COLLATE BINARY)))) ORDER BY CASE rtreenode(rt0.c1, v0.c1)  WHEN ((NULL)|(v0.c0)) THEN ((rt0.c2) NOT NULL) ELSE (((v0.c2))<((rt0.c4))) END ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c2 AS INTEGER)))=((rt0.c4 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON (((~ (vt0.c0)))||('-845430557')) ORDER BY CASE rtreenode(rt0.c1, v0.c1)  WHEN ((NULL)|(v0.c0)) THEN ((rt0.c2) NOT NULL) ELSE (((v0.c2))<((rt0.c4))) END ASC);
SELECT * FROM rt0, v0 CROSS JOIN vt0 ON (((~ (vt0.c0)))||('-845430557')) WHERE ((((CAST(rt0.c2 AS INTEGER)))==((rt0.c4 COLLATE BINARY)))) ORDER BY CASE rtreenode(rt0.c1, v0.c1)  WHEN ((NULL)|(v0.c0)) THEN ((rt0.c2) NOT NULL) ELSE (((v0.c2))<((rt0.c4))) END ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c2 AS INTEGER)))=((rt0.c4 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON (((~ (vt0.c0)))||('-845430557')) ORDER BY CASE rtreenode(rt0.c1, v0.c1)  WHEN ((NULL)|(v0.c0)) THEN ((rt0.c2) NOT NULL) ELSE (((v0.c2))<((rt0.c4))) END ASC);
SELECT * FROM rt0, v0 CROSS JOIN vt0 ON (((~ (vt0.c0)))||('-845430557')) WHERE ((((CAST(rt0.c2 AS INTEGER)))==((rt0.c4 COLLATE BINARY)))) ORDER BY CASE rtreenode(rt0.c1, v0.c1)  WHEN ((NULL)|(v0.c0)) THEN ((rt0.c2) NOT NULL) ELSE (((v0.c2))<((rt0.c4))) END ASC;
SELECT ALL * FROM rt0, v0, vt0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (v0.c2);
SELECT * FROM rt0, vt0 WHERE (LIKELY(((((rt0.c0)OR(rt0.c4)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((((rt0.c0)OR(rt0.c4)))OR(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (LIKELY(((((rt0.c0)OR(rt0.c4)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((((rt0.c0)OR(rt0.c4)))OR(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (LIKELY(((((rt0.c0)OR(rt0.c4)))OR(vt0.c0))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (((NULL)OR(rt0.c4))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) AND ((~ (rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((NULL)OR(rt0.c4))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) AND ((~ (rt0.c4)))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (((NULL)OR(rt0.c4))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) AND ((~ (rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((NULL)OR(rt0.c4))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) AND ((~ (rt0.c4)))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (((NULL)OR(rt0.c4))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) AND ((~ (rt0.c4)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(((0.3493436369837729)=(rt0.c3)), 0.7531868462588519));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((0.3493436369837729)==(rt0.c3)), 0.7531868462588519)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(((0.3493436369837729)=(rt0.c3)), 0.7531868462588519));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((0.3493436369837729)==(rt0.c3)), 0.7531868462588519)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(((0.3493436369837729)=(rt0.c3)), 0.7531868462588519));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(((rt0.c3)>>(rt0.c3)) AS REAL)) ORDER BY 0x4800dbed ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)>>(rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY 0X4800dbed ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(((rt0.c3)>>(rt0.c3)) AS REAL)) ORDER BY 0x4800dbed ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)>>(rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY 0X4800dbed ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (rt0.c1) ORDER BY CASE NULL COLLATE NOCASE  WHEN (~ (rt0.c2)) THEN ((0.4321505581212196)=(rt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE NULL COLLATE NOCASE  WHEN (~ (rt0.c2)) THEN ((0.4321505581212196)==(rt0.c1)) END  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (rt0.c1) ORDER BY CASE NULL COLLATE NOCASE  WHEN (~ (rt0.c2)) THEN ((0.4321505581212196)=(rt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE NULL COLLATE NOCASE  WHEN (~ (rt0.c2)) THEN ((0.4321505581212196)==(rt0.c1)) END  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (rt0.c1) ORDER BY CASE NULL COLLATE NOCASE  WHEN (~ (rt0.c2)) THEN ((0.4321505581212196)=(rt0.c1)) END  NULLS LAST;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) IS TRUE))<(((v0.c1)/(rt0.c0)))) FULL OUTER JOIN rt0 ON ((((vt0.c0)GLOB(vt0.c0)))*(((vt0.c0) NOTNULL))) WHERE (CASE WHEN ((rt0.c0)<<(rt0.c3)) THEN (rt0.c1 IN ()) WHEN ((rt0.c2)>=(v0.c1)) THEN ((rt0.c2) ISNULL) WHEN '1768132881' THEN CAST('' AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)<<(rt0.c3)) THEN (rt0.c1 IN ()) WHEN ((rt0.c2)>=(v0.c1)) THEN ((rt0.c2) ISNULL) WHEN '1768132881' THEN CAST('' AS NUMERIC) END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) IS TRUE))<(((v0.c1)/(rt0.c0)))) FULL OUTER JOIN rt0 ON ((((vt0.c0)GLOB(vt0.c0)))*(((vt0.c0) NOTNULL))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) IS TRUE))<(((v0.c1)/(rt0.c0)))) FULL OUTER JOIN rt0 ON ((((vt0.c0)GLOB(vt0.c0)))*(((vt0.c0) NOTNULL))) WHERE (CASE WHEN ((rt0.c0)<<(rt0.c3)) THEN (rt0.c1 IN ()) WHEN ((rt0.c2)>=(v0.c1)) THEN ((rt0.c2) ISNULL) WHEN '1768132881' THEN CAST('' AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)<<(rt0.c3)) THEN (rt0.c1 IN ()) WHEN ((rt0.c2)>=(v0.c1)) THEN ((rt0.c2) ISNULL) WHEN '1768132881' THEN CAST('' AS NUMERIC) END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) IS TRUE))<(((v0.c1)/(rt0.c0)))) FULL OUTER JOIN rt0 ON ((((vt0.c0)GLOB(vt0.c0)))*(((vt0.c0) NOTNULL))));
SELECT * FROM vt0 WHERE (CAST((- (vt0.c0)) AS REAL)) ORDER BY 0.1552448227305765;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY 0.1552448227305765);
SELECT * FROM vt0 WHERE (CAST((- (vt0.c0)) AS REAL)) ORDER BY 0.1552448227305765;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY 0.1552448227305765);
SELECT * FROM vt0 WHERE (CAST((- (vt0.c0)) AS REAL)) ORDER BY 0.1552448227305765;
SELECT COUNT(*) FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN NULL ELSE v0.c1 END  WHEN v0.c2 COLLATE NOCASE THEN (v0.c1 IN ()) ELSE v0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN v0.c0 THEN NULL ELSE v0.c1 END  WHEN v0.c2 COLLATE NOCASE THEN (v0.c1 IN ()) ELSE v0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN NULL ELSE v0.c1 END  WHEN v0.c2 COLLATE NOCASE THEN (v0.c1 IN ()) ELSE v0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN v0.c0 THEN NULL ELSE v0.c1 END  WHEN v0.c2 COLLATE NOCASE THEN (v0.c1 IN ()) ELSE v0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN NULL ELSE v0.c1 END  WHEN v0.c2 COLLATE NOCASE THEN (v0.c1 IN ()) ELSE v0.c2 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (CAST(rt0.c3 AS INTEGER)))) ORDER BY CASE (((rt0.c3))<((rt0.c2)))  WHEN (~ (rt0.c0)) THEN ((rt0.c4) NOTNULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c3))<((rt0.c2)))  WHEN (~ (rt0.c0)) THEN ((rt0.c4) NOTNULL) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (CAST(rt0.c3 AS INTEGER)))) ORDER BY CASE (((rt0.c3))<((rt0.c2)))  WHEN (~ (rt0.c0)) THEN ((rt0.c4) NOTNULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c3))<((rt0.c2)))  WHEN (~ (rt0.c0)) THEN ((rt0.c4) NOTNULL) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (CAST(rt0.c3 AS INTEGER)))) ORDER BY CASE (((rt0.c3))<((rt0.c2)))  WHEN (~ (rt0.c0)) THEN ((rt0.c4) NOTNULL) END DESC  NULLS LAST;
