-- Time: 2024/06/11 13:36:15
-- Database: database28
-- Database version: 3.40.0
-- seed value: 939095728
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 2ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, tokenize=simple); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1954812766 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.13592378556895157 THEN x'c03a2c87' END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 4 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('m	') IS FALSE) AS BLOB); -- 1ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1540059099 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('M	')%(-1592680629)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1540059099 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (COALESCE(0X137b7ee7, 0x4e9cfd9b) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.48732983980016387)<=(NULL))) BETWEEN (((NULL) BETWEEN ('326860519') AND (x''))) AND ((+ (0.7256129244304191)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1009753404 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-308418930 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'p'; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1009753404'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')+(NULL)) COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=909499883 unordered noskipscan'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE CAST((('0.7256129244304191') NOT BETWEEN (x'05d5') AND ('')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'3197') BETWEEN ('now') AND ('?dJ'))) BETWEEN (x'' COLLATE NOCASE) AND (CASE WHEN 0X3c2f9d3c THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1384280065 -308418930 sz=1898444121 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1280688847'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2125972143 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('X') NOTNULL))AND(((0.32486354253508554)<(0.4768299021544734)))))AND('1318911387' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ ('-952115371'))  WHEN ((0.16134522455163758)IS NOT('')) THEN (0.46619537414206325 IN ()) WHEN json_array('-902553511', NULL) THEN (0X7484135e IN (0.02789950795241658)) WHEN ((('Jw|nDO^'))>(('⪵BDG+L'))) THEN ((0.12247564179390025) IS FALSE) ELSE ((((0.9765440827651124)AND('GI')))OR(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=624241333 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1808051461 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1990804040'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-214118976 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('|V' COLLATE NOCASE))>(((0.7452466058583966 IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.17595936638803866)OR(-912244337)))OR(3.26860519E8))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2060743412 sz=1494981579 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1808051461 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1123759079'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (TYPEOF(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2017328411 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-10258566 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-455069264'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'30b1')OR(x'')))OR(x'')))-(TRIM(0.8421203816670951))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((914531960) NOT NULL)) BETWEEN (CASE 'ꙸs!T)鴼줓/V'  WHEN 1380880061 THEN '~' ELSE '?dJ' END) AND (CASE 0xfffffffff404b7df  WHEN x'' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN x'' COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1380880061'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=811086855'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('gi') NOT BETWEEN (x'e2bf') AND (-2.14118976E8))))<(((+ (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '909499883'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-3.0841893E8 COLLATE NOCASE AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '811086855 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'e4b6') NOT BETWEEN (0.12187147801077491) AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1384280065 sz=564647748 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-746766879 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1643589874 sz=2017328411'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((JULIANDAY(NULL, 0.8329665305321783, NULL)))<=((NULL))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN (('1503454045')LIKE(NULL)) THEN CAST('0.8421203816670951' AS TEXT) WHEN 5.64647748E8 COLLATE NOCASE THEN (~ (x'd329')) WHEN COALESCE(DISTINCT x'', NULL) THEN CASE WHEN x'f596' THEN 'ꙸs!T)鴼줓/V' WHEN 0.06924357063583308 THEN 0.13592378556895157 WHEN 'jW' THEN NULL ELSE 'x7' END ELSE ((0.35605777981145637) ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1592680629 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-2125972143'; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=479720178 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1218583446 -1982615520'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1990804040 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) NOTNULL)))<>((((NULL)<=(''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1925341870 471477288 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-746766879'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=624241333 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('0.12187147801077491') BETWEEN (x'afdc') AND (-1.808051461E9)) THEN CAST(-444864508 AS TEXT) WHEN (((0.7420740689689143))=(('-1726515349'))) THEN ((NULL) BETWEEN (0.12187147801077491) AND (0.7024307846141187)) WHEN ('%q' IN ()) THEN 0.9673995883997479 END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1218583446'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')/('0.7256129244304191')))>>(json_remove(NULL, '-1925341870', x'598c', x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1585133293 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2125972143 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1280688847 -2111144169'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '914938094 1230479005 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('53688740' IN (CASE -3.0841893E8  WHEN 'hbG' THEN NULL WHEN 0.3521542638122731 THEN 'Yx' WHEN x'6914' THEN NULL ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1097731422 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-236548403 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1145034831 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((LIKELIHOOD(NULL, 0.48980267013140744))OR(CASE WHEN x'' THEN NULL END)))AND(((NULL) IS TRUE))))AND(((-1384280065)<=('gi')))))OR(((x'') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-236548403'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1384280065'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED((((('')OR(-1.7976931348623157E308)))OR(x'8c60'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'd04c'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1411430667 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1693729598 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-832243091 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1097549697'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-793487623 -228906045 sz=1367397637 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6184508867235705) NOT BETWEEN (0.9765440827651124) AND (0x57b8f604))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1863279679 sz=1718240684 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-765794890 sz=-1990804040 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=814820696 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8421203816670951) NOT BETWEEN (((9.09499883E8) NOTNULL)) AND ((~ ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2107139953'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(DISTINCT 0X7484135e))IS('457870011' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-413377084 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'')OR(0.28390356308784503)))AND(NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1494981579 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-932322576 2107139953 sz=-1662017111'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=457870011 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1455756546 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=859650582'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(CASE WHEN x'3749' THEN '698039958' END)))OR(2.107139953E9 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-1982615520 COLLATE RTRIM AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('?')GLOB(NULL))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1990804040 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=326860519 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '297144798'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)OR('321555425')))OR(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2063838644 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-952115371')) NOT BETWEEN (((((0.8319129029335917)) NOT BETWEEN (('N츤')) AND (('Ljfd3d)'))))) AND ((x'781cacd6'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1230479005 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.4768299021544734 AS BLOB) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER((('t%') IS TRUE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1611019722)/(1621739354)))<=(((0xffffffffaa2bd4e0) BETWEEN (NULL) AND (0.8214070895230036)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1411868375 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')*(NULL))) BETWEEN (((-262756053) ISNULL)) AND (INSTR(NULL, x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'5672' COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1184498069; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-308418930 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE DATETIME((((('')AND(0xffffffffdf04dea6)))AND(0.7519343231276356)), ((NULL) ISNULL), CASE WHEN 0.2824679632327266 THEN NULL ELSE 639471893 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'3812')+(NULL))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-236548403 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=321555425 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(1591616542 AS TEXT) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1411868375 sz=-682642293'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('El_ ' IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=730450121 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST('-' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1572951809'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (UPPER(DISTINCT 0.4908959963334337))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-165865467 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1129325951 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -314693260'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN NULL THEN '-553328986' WHEN '' THEN '-1742130071' WHEN 0x5df93d50 THEN '8e' ELSE '' END) NOT BETWEEN (0Xffffffff8b9f7973) AND (SQLITE_VERSION())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=715106704 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 2.97144798E8; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=432676227 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1153549377'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(NULL AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=283100359 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((('-1637724834')GLOB('-386349512')))) AND ((CAST('-298011550' AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1110394466 1125003213 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2107139953 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.9289690036881126))<=((x''))))-((('kNRs') NOT BETWEEN (0.6095889632758447) AND (x'2ad6')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-388406589 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2060743412 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1519039754 sz=564647748 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1969430437 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1097549697 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT ((5.64647748E8) ISNULL), CAST('Nv' AS TEXT)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1297075682 sz=-2013076384'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((('-52885419') NOT BETWEEN ('now') AND ('J2Lt_%,')))) AND ((((NULL) NOT BETWEEN (0.49325562056214645) AND (0Xffffffffb955cf29))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=210885429'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1061534112 sz=-1982615520 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR('')))OR(0.24697250685935634))) NOT BETWEEN (CASE '-1875718144'  WHEN NULL THEN '3X' END) AND ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((NULL COLLATE NOCASE)) AND ((((0.782208272850502)<<(1.380880061E9))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER((x'' IN (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-765794890 0 sz=-385554619 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2060964540 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('776574789')<<('-1702672439')))&(((0.25111072038014415)GLOB(x'3472')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1814131573 0 sz=323029935 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT NULL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-395405629 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('6\n qhF\nk7')>(0.7452466058583966)))OR('-1603190592')))AND((~ ('-1282278913')))))AND((NULL IN ()))))AND(ABS('Qf(9'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -804698978 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')OR(0.055826322012133)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1248605421'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE '624241333'  WHEN NULL THEN NULL WHEN 0.3836154046185136 THEN 0.685965317237332 WHEN 0.640203552470111 THEN 0xffffffff8d3d9d52 END  WHEN CASE x''  WHEN 0.4908959963334337 THEN '6\n qhF\nk/' ELSE NULL END THEN rtreenode(NULL, 0.32366669402215265) ELSE CAST(0.30383961018180705 AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 0.706443631651147 THEN 0.010544377770921431 END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1115062451 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=374553982'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=243376863'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) ISNULL) AS BLOB); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (UPPER(0.014164287922526886) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=389855292 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1318911387 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 4.32676227E8; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1120695392'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1264128401'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-472427576 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1328937387 -1972575046 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS NUMERIC) IN ('QG' COLLATE NOCASE, ((((0.09236015005269305)AND(0.25111072038014415)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (('0.6095889632758447' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9563853341604637; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((((NULL)/(NULL)))) AND (((NOT (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1605650490'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=326860519 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-149423187'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS TRUE))OR('w[' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NULL IN ('-1611019722')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-660084217 -1094793151 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 0 0 sz=1895015416 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1097549697'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1427803265 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-1990804040 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=235485966 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2028438170'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.03640967110705673)) BETWEEN ((x'')) AND ((NULL))) COLLATE RTRIM COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=939660367 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1164410220 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1380880061 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_extract(x'', x'6c40'))<=(((x'43a2') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LIKELY(NULL))AND((((-1982615520)) BETWEEN (('Xz|')) AND ((x'd903'))))))AND((- ('-1990804040')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-0.0, 'rVRb?()', x'c18bec89'))>=(('-1592680629', 0.8953486920685874, x''))) IN (((x'')!=(2.107139953E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=363370268 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffff81483d51; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.8859588937592705))!=((NULL))), TRIM(DISTINCT '479720178'), ((0.8262487782580871)>=('h4'))))>=(((((('CKT')AND(NULL)))OR(NULL)), (((0.24697250685935634)) BETWEEN ((x'8e2d')) AND ((''))), (NULL IN ('', x'', '613181533'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1668402724)>(IFNULL(x'b954', '-1144025069'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-682642293'))>=((0.9865262555807573))))>(CASE x''  WHEN x'' THEN 0.5016675542454183 ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '190700271 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((0.4908959963334337)) NOT BETWEEN ((0.8234285369924779)) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=138889426'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.1948837405813948) BETWEEN (-1186899941) AND ('1145034831'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '59487706 -1123759079 sz=-1072365414 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(((('U''9zAlm')) NOT BETWEEN ((NULL)) AND ((NULL)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL))>=(((0.5911897777974837)||(-7.93487623E8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((((0X5420b90b)GLOB(NULL)))) AND ((((x'')+(1.367397637E9))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0x666a45ac) ISNULL)  WHEN ((NULL) NOTNULL) THEN (('-1384280065') NOT NULL) ELSE ((NULL)%(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1524437709 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('')OR(-2111144169)))AND('984030647')))OR(NULL)))AND('-1547006674')))OR(0.6029636901641156)))AND(x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1317247021 sz=-730368837'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'68ea0292' AS REAL)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0X11b611de AS NUMERIC) IN (((x'') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.26451239948750027)) NOT BETWEEN ((NULL)) AND ((0.7256129244304191))))AND((x'' IN ()))))OR(TYPEOF(0x6683ba13))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-314693260)<('Lt⪵')) IN (((((0.19777889176811714)AND(NULL)))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.08711181457783823) NOT BETWEEN (x'') AND (0.24566898503047674)))&(CASE 0xffffffffdf66567e  WHEN '4ye' THEN '''s' ELSE x'de97' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1475968046 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1746754530 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('iJ+' AS BLOB))|((((('-1110394466')AND('-1662017111')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT ((((((((NULL)AND(NULL)))AND(x'54288d13')))AND(x'2539ce26')))OR('}NW<	Gtok'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=698039958'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('814820696' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1208819430'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1621739354'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.27200216146293243)) NOT BETWEEN ((((0.5796985173020905)>('S6')))) AND ((((0x46bce80f)!=(''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ ('*m')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2017250218'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 sz=564060784'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1954812766 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '544275099 2 sz=1503454045 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2047225809 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((0xb9f5fc)) AND ((1.621739354E9)))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2099569090 -1097549697 sz=-1157651833 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-625299552 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=471477288 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-2127481511 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.8317552422749782 COLLATE BINARY)AND((NULL IN (0.9706214891326946, '')))))AND((NOT (x'')))))OR(CASE WHEN 0.06585689112766213 THEN 0.8572526361619163 ELSE NULL END)))OR(CAST(NULL AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '7?5+tV' THEN '-1572951809' END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9713171508609972)) NOT BETWEEN ((((0.5645924410385033)<>(NULL)))) AND ((CAST('5371564585055512333:' AS REAL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1900616641)>(0x1b6ab8bc))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1096186614 -648766764 sz=-165865467'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR(1.693729598E9)))OR(0X4ffb3088)))AND(-1275912908)))OR(x'60c8'))) BETWEEN ((+ (NULL))) AND (NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE '0.0'  WHEN 0.8894829334791869 THEN NULL ELSE NULL END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1668402724'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '0.8421203816670951' THEN NULL ELSE '-1439968032' END)%((1661217186 IN ('-746766879')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 sz=1576615248 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.060366883111841685 COLLATE BINARY) BETWEEN (TRIM(DISTINCT 'XYH3D', '432676227')) AND ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-793487623 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-704448014'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1918861825 1863279679 sz=811086855 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1672570204 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffbdd0b99e IN ('-1450676040'))) NOT BETWEEN (((NULL)||(NULL))) AND (((1.7976931348623157E308) IS TRUE))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 0.42652110831337764 THEN '-520243818' END)<<((NOT (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1793238825 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '436355981 1391012177 sz=1230479005'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD(x'', 0.15044620635381645))|(LOWER(DISTINCT 0.06455226975275075))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB))!=(((0.7745362927506103) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1184498069 sz=-1411868375 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -232542722'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN '5	/Bmi 	m' THEN NULL WHEN '6mXo4' THEN NULL WHEN NULL THEN x'' END AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1718240684 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '432676227'  WHEN x'd0e981cb' THEN x'' ELSE 0x31d3139b END)<(((NULL)/('[b]H')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1944763204'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.544537313035987)<(NULL)))+((((NULL))>=((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1275776117 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1466516094'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (json_type(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1032897807'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '884072925 sz=-1643589874 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1736719201 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((-1.218583446E9)<=(1097731422)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-997663360 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1425025302'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1382997382 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1399334297 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('7WK|Lrl ''') AND (0.9321797433942606)))IS(UPPER('-1439968032'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOT BETWEEN ('B愈^q^6AX') AND (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2116333927 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', 0X44161639, x'6b0e', 0x430e2fcd, x''))>=((0X743ca444, NULL, '587206967', '-1378524554', 0.09664516131279721))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=681612737 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0.13592378556895157) AND (NULL)))||(((NULL) NOT BETWEEN ('596191058') AND (1.380880061E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2125972143 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-5514786 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1782099537'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2059313870 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x67f475db; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=2092182832'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffff81b8efd0)-(NULL)))-(((((((((0.03640967110705673)AND(x'')))OR(NULL)))OR('-952115371')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2648143594351524; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-746766879' IN ()))>((('Nv')>('914938094')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'745f') BETWEEN (0.912087501309635) AND (1492928890)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(CAST(1.954812766E9 AS REAL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (json_extract(0.23505806203120072, '-240589970'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>=(((NULL)OR(x'da2c99e2')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LIKELIHOOD(DISTINCT NULL, 0.607955625364206) THEN 0.9085163341718897 WHEN CASE WHEN 0.6078147757940974 THEN x'' ELSE '914938094' END THEN ((NULL)+(NULL)) WHEN (('!uAa	*<')-(0.5645924410385033)) THEN CAST('' AS NUMERIC) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2071933172 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)==(NULL)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.46619537414206325)) BETWEEN ((CASE NULL  WHEN NULL THEN NULL END)) AND (((NULL IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=653933235 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1952482957 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_remove(x'', x''))*(((((1125003213)OR('980968773')))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1173248580 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'')))AND(((0.48053110152195433) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8262487782580871) NOT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'Z'  WHEN '-2050738643' THEN 'ma' ELSE '*Ho⿍.v' END) ISNULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1804393050'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0x6d9ec93)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE QUOTE(((NULL)-(0.850733923926723))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS NUMERIC) IN (((x'62e2') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (231047830)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-10258566 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-608052489 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-413377084 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'')LIKE('A⠉5_OII*'))  WHEN ((0x6c015ad) ISNULL) THEN ((x'') BETWEEN (2.107139953E9) AND ('!{\rD')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1455606319 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('297144798') BETWEEN ('}nw<	gtok') AND (NULL)))AND(x'')))OR((('[b]h') NOT NULL))))AND(TYPEOF(NULL))))OR(((x'')IS('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1329394861 sz=-818671361 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-201017377'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '886117764 sz=-1110394466 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '175716893 sz=-1123759079 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '896199006'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('-1982615520')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=914531960 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1230479005 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1399990691'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('>' COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1863279679 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN -4.55069264E8 THEN '715106704' ELSE 0.966483178977844 END) BETWEEN ((x'' IN ())) AND (((NULL)<<(0X122fc1b7)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-421189490 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY('-1585133293'))==(((x'')IS NOT('-1384280065')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1892253599 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT (('-912244337') NOT BETWEEN ('0.16134522455163758') AND (x'')), -1580686951, (x'ff5c' IN ()), '' COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS BLOB))OR(((-952115371) ISNULL))))OR(((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1195926838 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=914938094 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1727983415 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1765239920', '', 0Xffffffffaf700b35)) BETWEEN ((((('1503454045'))=((0.7910064964205981))), CAST(NULL AS TEXT), ((NULL)LIKE(0xffffffff9cefa1a9)))) AND ((CASE WHEN NULL THEN -1.585133293E9 END, (~ (NULL)), CAST(-2.28906045E8 AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-787449577 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.047354162404786404; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '202706013 sz=-70865903 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TIME(x'2d01', x'0c35', 0x3fcb8cf8, '8itZX''!.A', '1315677901') IN ('1898444121')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.11990346643163541 IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-214118976')) BETWEEN ((-1418540679)) AND ((NULL))))||('-1592680629' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'4f67')<>(x'801f')))>(((NULL) BETWEEN (8.59650582E8) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (x'6990')), ((((((((0.7256129244304191)AND('564647748')))OR('-1643589874')))OR(0x4350257f)))OR(0.473116135497724)), ((x'') IS TRUE)))<(((NULL IN ()), (('JD')+(NULL)), (((0.022005066053129796, NULL, NULL))<((x'45f2', 'L봌', NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'Ne+RHJ熳Nx'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1022378668 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-880769679 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1741156023 sz=432676227'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1839769404 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 4ms;
DELETE FROM sqlite_stat1 WHERE 0X3ebcfbd0; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0]\rgN%v3')*(0X3c2f9d3c COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=184343171 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=67432391 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-902553511 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-442938348 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NOT ('y9sP')) THEN ((6.39471893E8) NOT NULL) ELSE ((0.4936858350392306)==(0.8319129029335917)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=308122128'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('-1184498069')>('nAZg')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9730915992424367) BETWEEN (x'') AND (x'9ff7')))OR(((0.07330464821275962)%('Wm')))))OR(((0.3457379028557872)*('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1097731422 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)=(0.7256129244304191)) THEN CAST('934368587' AS NUMERIC) ELSE COALESCE(NULL, '', 0.3481535079979612, '0.28390356308784503') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=9223372036854775807 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2113218035'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '297144798 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=317277498 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LENGTH(NULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (x'7230') AND ('Y<Y'))) BETWEEN ((((('')OR(0.7452466058583966)))OR('120947542'))) AND (CASE 471477288  WHEN 0Xffffffff9917776b THEN 'K&<I)\#' ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1751792109 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1685629288')LIKE((((0.29510958504390283)) NOT BETWEEN ((NULL)) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1056136290 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('-832243091')+(0x3817cb76)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1922890668'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-687672371 -1284200326 2 sz=624241333 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-7.46766879E8)GLOB(0Xffffffffb485ae61))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1333203624 -846870457 sz=1362364915 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER))>=((-489265907 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN -1153549377 THEN (+ (0.7883056534743432)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1494981579 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('iJ+')!=(NULL)) THEN CAST(77702432 AS INTEGER) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1693729598 0 sz=-309128585 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=436557034 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL))==((0x311dc0ac))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN ((((0.9325515157073067)LIKE(8.14820696E8)))) AND ((((((((((((((x'')AND('TG')))AND(x'f535dcb1')))OR('Ik\s')))OR(x'')))AND(x'')))OR(0.16487410846708572))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1681955489 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-444864508 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)-(1204332592)))AND(('' IN ()))))OR(CASE WHEN '' THEN 'Aq3eF' ELSE NULL END)))AND(UNLIKELY(0.5524209042706856))))AND((- ('IJ+')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=772666508 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL('0.13592378556895157', NULL)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.9673995883997479', '914531960', 'Zy(GV,1G')) NOT BETWEEN ((NULL, CAST(0.8329665305321783 AS NUMERIC), x'')) AND ((((NULL)>(NULL)), ((((NULL)AND(-5.53328986E8)))AND('fꧯXADb铣e')), (((x'dc19')) NOT BETWEEN (('0.3481535079979612')) AND ((2.107139953E9)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1284372065 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT ((((0.25111072038014415)AND(0.5137828943046602)))AND(x'')), CASE WHEN NULL THEN x'' WHEN '-1742130071' THEN '-1251514191' WHEN '432676227' THEN NULL END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1333270399'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 238003108 0 sz=-1693222456 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE highlight(CAST(NULL AS REAL), ((0.255591255314909)*(x'ffbe0d34')), CASE WHEN NULL THEN x'' ELSE -1542893823 END, CASE 0Xffffffffe8f8c638  WHEN '#h' THEN -58225719 ELSE 0xffffffffcb8680d9 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8238213162607143)-(((((0.7420740689689143)OR(0.9184050664581725)))OR('-232597526')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')) BETWEEN ((NULL)) AND ((''))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6515983555833317)) NOT BETWEEN ((((NULL) BETWEEN (0.8143769003264518) AND (NULL)))) AND ((CAST('ObY谇7m' AS BLOB)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', -1929074676, '859650582'))!=(('-1384280065', '+Ⱘꈍcl*', x'')))) BETWEEN ((- (NULL))) AND (CAST('' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -4.44864508E8; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-264312751'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffff9e624d5e)||(CASE NULL  WHEN x'fe11' THEN 'nj**祳u' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))/(((NULL)>=(0.32366669402215265)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=480272643 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS INTEGER))AND((((0.06924357063583308, '', '1548051356'))<=((x'', '0.8317552422749782', x'f0f5'))))))AND(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-989183551 sz=-259275237 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-10258566 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1471864517 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1670438175'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0x68247ddb, '1515832548', NULL)) NOT BETWEEN ((0xffffffff81483d51, '1540281066', 0.48753869217925694)) AND ((0.09236015005269305, -1.123759079E9, 0.6293984971782491))) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2061971399 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-514326298 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.6735388103972116) BETWEEN ('0.46619537414206325') AND ('-1952482957'))))<(((NOT ('K3f(+Y'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '384974284 0 sz=-1497359657 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')IS(NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1731333460 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY('-380323981'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3951109633351385)) NOT BETWEEN (((NOT (0.5851796091588153)))) AND ((LTRIM(x'', 'nazg')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1367397637'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1411430667 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1703819179 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX((0.15592757434051996 IN ()), ((((((((NULL)AND('')))OR('()')))AND(x'')))OR(0.7955681860195158))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('/') NOT BETWEEN (x'') AND ('-553328986')))AND(('-307162853' IN ()))))AND((+ ('JhB>|)^')))))OR(((x'804e')=(0.7144453761136393)))))OR(ABS('I'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.32366669402215265)AND(0xffffffff84f31f4d)))OR('')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 sz=-1704921447'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1 WHERE (((('QL\ro') IS FALSE)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-314693260 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '326860519 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('730450121')<<(x''))) NOT BETWEEN (-1.643589874E9 COLLATE BINARY) AND (((x'7777')||('7X')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('564647748')) BETWEEN ((((x'')>>(x'ba74')))) AND ((((((0.3505556620932544)OR(x'')))AND('-236548403'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT (('-641720902')|(4.57870011E8))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=41443171 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1952482957 0 -952115371 sz=-1954679604 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1178070101 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('YQ')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -4.55069264E8; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.49325562056214645; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=742188295'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8634514722845297 IN ())) BETWEEN ((NULL IN (-148200074, 0X34c2450a))) AND (0.957548206335194)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1677613645 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (NULL) AND (0.9956825043570056)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=688550226'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2033311930'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('HNi-w<' IN ()))OR((NOT (x'')))))AND(((0.48507869234931866)%(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('775475392')GLOB(NULL)))LIKE(((('_jQt', -7.6579489E8, 0.29333898806133796)) BETWEEN ((NULL, 1.097731422E9, 0.40653833328356415)) AND ((x'', '', NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1743087488 sz=-952115371 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (x'')) IN (CASE -1.097549697E9  WHEN '811086855' THEN x'' ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-111095000 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=410736720'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-386632260 -888096660 sz=-2124436080 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=526123360 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1114509059'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-413377084 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=831096801 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('\i') BETWEEN ((((NULL)) NOT BETWEEN ((1097731422)) AND (('A3')))) AND (CAST(NULL AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(x'', 474394586))GLOB(x'2b50')); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((0.5975543173259473)) AND ((0.850733923926723 COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (0.5760417479670408) AND (NULL)))||(TRIM(''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.035921438599049726)) BETWEEN ((x'f72e')) AND ((((((((((-1094981087)AND('ꙸs!T)鴼줓/V')))AND('8itZX''!.A')))OR(0.08816604873843348)))OR(0.9161338589642822))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('0.9765440827651124')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1333010144 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1851719728 sz=1340542011 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-698289423 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'3060c1c0')%('365647373')))AND((('')<>(x'')))))AND(TIME(-165865467, NULL, 0.9672066609840568))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '210915030 sz=-4363469 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=146740086 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('914531960', NULL, 0.12500161167356216, x'74cc9154', 0.40509073821196295)) NOT BETWEEN ((x'd67f', x'', 'JlmKг+?퇀', NULL, NULL)) AND ((0.6520208437169056, '859650582', x'', x'5f88', '-1410301204')))  WHEN (((('Lt⪵')OR('-1123759079')))AND(x'')) THEN ((1.145034831E9)*('<>확bO⏓8')) ELSE ((((0.9173703396152926)OR(NULL)))OR('_JQT')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (x'')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1125003213 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=505733828 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 4ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT CASE WHEN NULL THEN 0.5867953900798714 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'69d7' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=914938094 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1997429500 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '210343979 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '251818566 -895177690'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-543405712 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('*e')==(x'eb62')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-307899626 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1293860051 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT BETWEEN (0.8105329065576193) AND ('')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) NOT BETWEEN (x'') AND (559083643)))OR(((x'') BETWEEN (NULL) AND ('-2125972143')))))OR((('1603219301')LIKE(x'')))))AND(x'')))OR((('0.8317552422749782') NOT BETWEEN (0.7356708986982667) AND ('888824554')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.3124888413022042) NOT BETWEEN (0Xffffffffc4218a6a) AND ('')), json_insert(NULL, 0.4768299021544734, x'a609', 0.3882581436741954, NULL), ((NULL) IS TRUE)))=((((NULL) IS FALSE), (('-820513199')&(1048361768)), ''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-634593613' AS TEXT) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.4931654779120458 IN ()) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1367834174 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)>>(x'')) THEN ((NULL) NOTNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1779550695 sz=250286955 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN ('', x'28b4')))AND(CASE NULL  WHEN 1.230479005E9 THEN -1365809151 WHEN NULL THEN NULL WHEN NULL THEN NULL ELSE -829122446 END)))OR(((NULL)||(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'd3f5')OR(0.39915794148710515)))AND(0xffffffff8637bc1a))) NOT BETWEEN ('20477671' COLLATE BINARY) AND (((x'a7e5')-(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=714193647 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=997618064 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-912244337 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-910532381'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.40701260564461395 AS NUMERIC) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-1572951809 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE 0.2530461498065246  WHEN -2.14118976E8 THEN NULL WHEN 0.012763615040245146 THEN NULL WHEN 0.42012279573866274 THEN x'50c6' ELSE 0Xea45f7d END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=749929834 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=277795856 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1088482876'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1654594734'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1855138070 479720178 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-743463432 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-228906045 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffff9e624d5e; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7883056534743432 COLLATE BINARY) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL)) NOT BETWEEN (('d(H')) AND (('432676227'))))OR(((0.021885422137399857)-(0.8308242409103026)))))AND((- (NULL)))))AND(((x'5125') ISNULL))))OR(((((x'')AND('-2059874454')))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-75259957 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'31f5') BETWEEN (0.921903021506363) AND (((((x'')OR(x'')))AND('240608161')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1091464721'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-874873399'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1393611507 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=166935345 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array((((((((('-1808773568')AND(0.19777889176811714)))AND(0.9865262555807573)))AND(x'1857')))OR(0X19fb31e9)), CASE WHEN NULL THEN '-1530796968' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-266971319 sz=-1982615520 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.76245235546782, x'', 0.3256677623452342)) NOT BETWEEN ((0.5681972269792147, x'', -1834519014)) AND ((NULL, x'', NULL))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 unordered noskipscan'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-413377084'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0x6707328c); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.966483178977844); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0Xffffffffb37461be); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA temp.stats; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1952482957'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-1359900937); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.5016675542454183); -- 0ms;
END; -- 0ms;
ANALYZE sqlite_master; -- 4ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('-1361270746'); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 4ms;
PRAGMA wal_autocheckpoint; -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0x3c75b4b9); -- 4ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL), (x''), ('B3'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '5600'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.8764663378008064), ('l>''DU9kk'), (x''); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('-2019726607'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-1153549377,13');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-1218583446,15');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1242528457); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (-1123759079); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-1808051461'); -- 0ms;
VACUUM; -- 1ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1019154959); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1636519981); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
END; -- 0ms;
REINDEX; -- 2ms;
INSERT OR ABORT INTO vt0 VALUES (NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=('1630192874'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''), (x''), (0.28819755713967177); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 342288755); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41115'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '50791'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1127187575); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1149074931); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT (+ (((vt0.c0) ISNULL))) FROM vt0 WHERE ('8\' COLLATE NOCASE); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('UyG'); -- 1ms;
CREATE TABLE t0 (c0 INT , c1 BLOB , c2 TEXT ); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1) VALUES (-3.1469326E8, '1471739396'); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1602941485); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1046590370,10');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 4); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(''); -- 3ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX  t0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1034669434); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1982615520);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2129279348); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1576470320); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '39061'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=1989736640,14');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i2 ON t0(c0,((CAST(0.9865262555807573 AS BLOB))GLOB(c0)) DESC,((NULL)>>(((c1)+(c0)))) COLLATE NOCASE); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ANALYZE t0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 0ms;
PRAGMA cache_spill = 3759222116866788168; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (1.668402724E9); -- 1ms;
INSERT OR IGNORE INTO t0(c2, c0) VALUES (x'', x''); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2, c0) VALUES (559938548, 0.42342937796634095, x''); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.4768299021544734), (x'e4fe'), (0x2758e3c1), (x''), (0.44515646052973123); -- 19ms;
DELETE FROM vt0 WHERE ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))IS(vt0.c0)); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '48323'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 10ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (297144798, '859650582', NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (-1.411868375E9); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '59031'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 17ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM v0 WHERE (((((v0.c0) NOTNULL))/(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE)  NULLS LAST, ((('')) NOT BETWEEN ((v0.c0)) AND ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))/(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE)  NULLS LAST, ((('')) NOT BETWEEN ((v0.c0)) AND ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) DESC);
SELECT * FROM v0 WHERE (((((v0.c0) NOTNULL))/(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE)  NULLS LAST, ((('')) NOT BETWEEN ((v0.c0)) AND ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))/(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE)  NULLS LAST, ((('')) NOT BETWEEN ((v0.c0)) AND ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) DESC);
SELECT * FROM v0 WHERE (((((v0.c0) NOTNULL))/(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE)  NULLS LAST, ((('')) NOT BETWEEN ((v0.c0)) AND ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c1) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c1) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND ('1097731422'))) AND (0.015547908176240077)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND ('1097731422'))) AND (0.015547908176240077))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND ('1097731422'))) AND (0.015547908176240077)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND ('1097731422'))) AND (0.015547908176240077))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND ('1097731422'))) AND (0.015547908176240077)));
SELECT COUNT(*) FROM v0, t0 WHERE (TRIM(((((t0.c2)AND(v0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((t0.c2)AND(v0.c0)))AND(v0.c0)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (TRIM(((((t0.c2)AND(v0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((t0.c2)AND(v0.c0)))AND(v0.c0)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (TRIM(((((t0.c2)AND(v0.c0)))AND(v0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CAST(CASE WHEN '\i' THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END AS INTEGER)) ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND (''))) NOT BETWEEN ('-1232314872') AND (UPPER(vt0.c0))), ((CAST(t0.c0 AS REAL))||((((vt0.c0))>(('FALSE')))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN '\i' THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END AS INTEGER)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND (''))) NOT BETWEEN ('-1232314872') AND (UPPER(vt0.c0))), ((CAST(t0.c0 AS REAL))||((((vt0.c0))>(('FALSE'))))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CAST(CASE WHEN '\i' THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END AS INTEGER)) ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND (''))) NOT BETWEEN ('-1232314872') AND (UPPER(vt0.c0))), ((CAST(t0.c0 AS REAL))||((((vt0.c0))>(('FALSE')))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN '\i' THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END AS INTEGER)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND (''))) NOT BETWEEN ('-1232314872') AND (UPPER(vt0.c0))), ((CAST(t0.c0 AS REAL))||((((vt0.c0))>(('FALSE'))))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CAST(CASE WHEN '\i' THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END AS INTEGER)) ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND (''))) NOT BETWEEN ('-1232314872') AND (UPPER(vt0.c0))), ((CAST(t0.c0 AS REAL))||((((vt0.c0))>(('FALSE')))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN '' ELSE v0.c0 END, (+ (0.13822806273542565)), ((v0.c0) ISNULL))) AND (((v0.c0 IN ()), v0.c0, ((v0.c0)GLOB(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN '' ELSE v0.c0 END, (+ (0.13822806273542565)), ((v0.c0) ISNULL))) AND (((v0.c0 IN ()), v0.c0, ((v0.c0)GLOB(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN '' ELSE v0.c0 END, (+ (0.13822806273542565)), ((v0.c0) ISNULL))) AND (((v0.c0 IN ()), v0.c0, ((v0.c0)GLOB(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN '' ELSE v0.c0 END, (+ (0.13822806273542565)), ((v0.c0) ISNULL))) AND (((v0.c0 IN ()), v0.c0, ((v0.c0)GLOB(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN '' ELSE v0.c0 END, (+ (0.13822806273542565)), ((v0.c0) ISNULL))) AND (((v0.c0 IN ()), v0.c0, ((v0.c0)GLOB(v0.c0))))));
SELECT ALL * FROM vt0, v0, t0 WHERE ((+ (CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE v0.c0 END))) ORDER BY json_quote(((vt0.c0) BETWEEN (v0.c0) AND (t0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY json_quote(((vt0.c0) BETWEEN (v0.c0) AND (t0.c1)))  NULLS LAST);
SELECT ALL * FROM vt0, v0, t0 WHERE ((+ (CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE v0.c0 END))) ORDER BY json_quote(((vt0.c0) BETWEEN (v0.c0) AND (t0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY json_quote(((vt0.c0) BETWEEN (v0.c0) AND (t0.c1)))  NULLS LAST);
SELECT ALL * FROM vt0, v0, t0 WHERE ((+ (CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE v0.c0 END))) ORDER BY json_quote(((vt0.c0) BETWEEN (v0.c0) AND (t0.c1)))  NULLS LAST;
SELECT ALL * FROM t0, v0, vt0 WHERE (CAST(((vt0.c0)%(0.04084376083476082)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)%(0.04084376083476082)) AS TEXT)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (CAST(((vt0.c0)%(0.04084376083476082)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)%(0.04084376083476082)) AS TEXT)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (CAST(((vt0.c0)%(0.04084376083476082)) AS TEXT));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((t0.c2 COLLATE NOCASE) IS TRUE) CROSS JOIN v0 ON ((((t0.c2)AND(t0.c2)))OR(vt0.c0)) COLLATE BINARY WHERE (UNLIKELY(DISTINCT t0.c1)) ORDER BY 0.295993632283545  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT t0.c1)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((t0.c2 COLLATE NOCASE) IS TRUE) CROSS JOIN v0 ON ((((t0.c2)AND(t0.c2)))OR(vt0.c0)) COLLATE BINARY ORDER BY 0.295993632283545  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((t0.c2 COLLATE NOCASE) IS TRUE) CROSS JOIN v0 ON ((((t0.c2)AND(t0.c2)))OR(vt0.c0)) COLLATE BINARY WHERE (UNLIKELY(DISTINCT t0.c1)) ORDER BY 0.295993632283545  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT t0.c1)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((t0.c2 COLLATE NOCASE) IS TRUE) CROSS JOIN v0 ON ((((t0.c2)AND(t0.c2)))OR(vt0.c0)) COLLATE BINARY ORDER BY 0.295993632283545  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((t0.c2 COLLATE NOCASE) IS TRUE) CROSS JOIN v0 ON ((((t0.c2)AND(t0.c2)))OR(vt0.c0)) COLLATE BINARY WHERE (UNLIKELY(DISTINCT t0.c1)) ORDER BY 0.295993632283545  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c1 IN ()) COLLATE BINARY) ORDER BY CASE UPPER(t0.c1)  WHEN 1.230479005E9 THEN ((t0.c0) IS FALSE) WHEN ((((x'')AND(t0.c2)))OR(t0.c0)) THEN (+ (t0.c1)) WHEN CAST(t0.c2 AS REAL) THEN ((t0.c0)IS NOT(t0.c1)) END;
SELECT SUM(count) FROM (SELECT (((t0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY CASE UPPER(t0.c1)  WHEN 1.230479005E9 THEN ((t0.c0) IS FALSE) WHEN ((((x'')AND(t0.c2)))OR(t0.c0)) THEN (+ (t0.c1)) WHEN CAST(t0.c2 AS REAL) THEN ((t0.c0)IS NOT(t0.c1)) END);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c1 IN ()) COLLATE BINARY) ORDER BY CASE UPPER(t0.c1)  WHEN 1.230479005E9 THEN ((t0.c0) IS FALSE) WHEN ((((x'')AND(t0.c2)))OR(t0.c0)) THEN (+ (t0.c1)) WHEN CAST(t0.c2 AS REAL) THEN ((t0.c0)IS NOT(t0.c1)) END;
SELECT SUM(count) FROM (SELECT (((t0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY CASE UPPER(t0.c1)  WHEN 1.230479005E9 THEN ((t0.c0) IS FALSE) WHEN ((((x'')AND(t0.c2)))OR(t0.c0)) THEN (+ (t0.c1)) WHEN CAST(t0.c2 AS REAL) THEN ((t0.c0)IS NOT(t0.c1)) END);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c1 IN ()) COLLATE BINARY) ORDER BY CASE UPPER(t0.c1)  WHEN 1.230479005E9 THEN ((t0.c0) IS FALSE) WHEN ((((x'')AND(t0.c2)))OR(t0.c0)) THEN (+ (t0.c1)) WHEN CAST(t0.c2 AS REAL) THEN ((t0.c0)IS NOT(t0.c1)) END;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((SQLITE_SOURCE_ID())OR(CAST(v0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))AND('2017328411')))AND(((v0.c0) NOT NULL)))) ORDER BY (NOT (COALESCE(v0.c0, v0.c0, vt0.c0, v0.c0))), ((((((((((((highlight(v0.c0, vt0.c0, v0.c0, v0.c0))OR(vt0.c0 COLLATE BINARY)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))AND(((0X299b3e96) IS FALSE))))AND((v0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))))AND(((0.31692490559030084)=(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((SQLITE_SOURCE_ID())OR(CAST(v0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))AND('2017328411')))AND(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (NOT (COALESCE(v0.c0, v0.c0, vt0.c0, v0.c0))), ((((((((((((highlight(v0.c0, vt0.c0, v0.c0, v0.c0))OR(vt0.c0 COLLATE BINARY)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))AND(((0x299b3e96) IS FALSE))))AND((v0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))))AND(((0.31692490559030084)==(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((SQLITE_SOURCE_ID())OR(CAST(v0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))AND('2017328411')))AND(((v0.c0) NOT NULL)))) ORDER BY (NOT (COALESCE(v0.c0, v0.c0, vt0.c0, v0.c0))), ((((((((((((highlight(v0.c0, vt0.c0, v0.c0, v0.c0))OR(vt0.c0 COLLATE BINARY)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))AND(((0X299b3e96) IS FALSE))))AND((v0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))))AND(((0.31692490559030084)=(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((SQLITE_SOURCE_ID())OR(CAST(v0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))AND('2017328411')))AND(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (NOT (COALESCE(v0.c0, v0.c0, vt0.c0, v0.c0))), ((((((((((((highlight(v0.c0, vt0.c0, v0.c0, v0.c0))OR(vt0.c0 COLLATE BINARY)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))AND(((0x299b3e96) IS FALSE))))AND((v0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))))AND(((0.31692490559030084)==(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((SQLITE_SOURCE_ID())OR(CAST(v0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))AND('2017328411')))AND(((v0.c0) NOT NULL)))) ORDER BY (NOT (COALESCE(v0.c0, v0.c0, vt0.c0, v0.c0))), ((((((((((((highlight(v0.c0, vt0.c0, v0.c0, v0.c0))OR(vt0.c0 COLLATE BINARY)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))AND(((0X299b3e96) IS FALSE))))AND((v0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))))AND(((0.31692490559030084)=(v0.c0))))  NULLS LAST;
SELECT * FROM vt0 INNER JOIN t0 ON ((NULL)AND(((t0.c1)>>(vt0.c0)))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((NULL)AND(((t0.c1)>>(vt0.c0)))));
SELECT * FROM vt0 INNER JOIN t0 ON ((NULL)AND(((t0.c1)>>(vt0.c0)))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((NULL)AND(((t0.c1)>>(vt0.c0)))));
SELECT * FROM vt0 INNER JOIN t0 ON ((NULL)AND(((t0.c1)>>(vt0.c0)))) WHERE (t0.c0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))=((ABS(vt0.c0))))) ORDER BY (- ((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))==((ABS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))=((ABS(vt0.c0))))) ORDER BY (- ((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))==((ABS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))=((ABS(vt0.c0))))) ORDER BY (- ((vt0.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM t0, v0 WHERE (x'') ORDER BY (t0.c2 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, v0 ORDER BY (t0.c2 IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (x'') ORDER BY (t0.c2 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, v0 ORDER BY (t0.c2 IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (x'') ORDER BY (t0.c2 IN ()) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (0.3026542834833834) ORDER BY CAST((+ (NULL)) AS INTEGER), ((((v0.c0)||(v0.c0)))>=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.3026542834833834) IS TRUE)  as count FROM v0 ORDER BY CAST((+ (NULL)) AS INTEGER), ((((v0.c0)||(v0.c0)))>=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))  NULLS LAST);
SELECT * FROM v0 WHERE (0.3026542834833834) ORDER BY CAST((+ (NULL)) AS INTEGER), ((((v0.c0)||(v0.c0)))>=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.3026542834833834) IS TRUE)  as count FROM v0 ORDER BY CAST((+ (NULL)) AS INTEGER), ((((v0.c0)||(v0.c0)))>=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))  NULLS LAST);
SELECT * FROM v0 WHERE (0.3026542834833834) ORDER BY CAST((+ (NULL)) AS INTEGER), ((((v0.c0)||(v0.c0)))>=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON CASE 'yWgrzz'  WHEN NULL THEN json_patch(v0.c0, x'a7fd9c47') ELSE IFNULL('-201017377', 0.6850626932148969) END WHERE (((CAST(t0.c2 AS INTEGER))<=((NOT (t0.c1))))) ORDER BY ((((t0.c1)&(t0.c2)))IS NOT(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS INTEGER))<=((NOT (t0.c1))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CASE 'yWgrzz'  WHEN NULL THEN json_patch(v0.c0, x'a7fd9c47') ELSE IFNULL('-201017377', 0.6850626932148969) END ORDER BY ((((t0.c1)&(t0.c2)))IS NOT(t0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON CASE 'yWgrzz'  WHEN NULL THEN json_patch(v0.c0, x'a7fd9c47') ELSE IFNULL('-201017377', 0.6850626932148969) END WHERE (((CAST(t0.c2 AS INTEGER))<=((NOT (t0.c1))))) ORDER BY ((((t0.c1)&(t0.c2)))IS NOT(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS INTEGER))<=((NOT (t0.c1))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CASE 'yWgrzz'  WHEN NULL THEN json_patch(v0.c0, x'a7fd9c47') ELSE IFNULL('-201017377', 0.6850626932148969) END ORDER BY ((((t0.c1)&(t0.c2)))IS NOT(t0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON CASE 'yWgrzz'  WHEN NULL THEN json_patch(v0.c0, x'a7fd9c47') ELSE IFNULL('-201017377', 0.6850626932148969) END WHERE (((CAST(t0.c2 AS INTEGER))<=((NOT (t0.c1))))) ORDER BY ((((t0.c1)&(t0.c2)))IS NOT(t0.c0))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c0)OR(((v0.c0) ISNULL))))OR((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))))AND((0.6854026856184048 IN ()))))OR(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)OR(((v0.c0) ISNULL))))OR((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))))AND((0.6854026856184048 IN ()))))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c0)OR(((v0.c0) ISNULL))))OR((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))))AND((0.6854026856184048 IN ()))))OR(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)OR(((v0.c0) ISNULL))))OR((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))))AND((0.6854026856184048 IN ()))))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c0)OR(((v0.c0) ISNULL))))OR((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))))AND((0.6854026856184048 IN ()))))OR(((v0.c0) NOTNULL))));
SELECT ALL * FROM vt0, v0, t0 WHERE ((NOT (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE ((NOT (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE ((NOT (((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM vt0 WHERE (json((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, '', vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0)<(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN ABS(DISTINCT vt0.c0) THEN vt0.c0 WHEN (('') IS TRUE) THEN -1.611019722E9 END ASC;
SELECT SUM(count) FROM (SELECT ((json((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, '', vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)<(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN ABS(DISTINCT vt0.c0) THEN vt0.c0 WHEN (('') IS TRUE) THEN -1.611019722E9 END ASC);
SELECT COUNT(*) FROM vt0 WHERE (json((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, '', vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0)<(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN ABS(DISTINCT vt0.c0) THEN vt0.c0 WHEN (('') IS TRUE) THEN -1.611019722E9 END ASC;
SELECT SUM(count) FROM (SELECT ((json((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, '', vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)<(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN ABS(DISTINCT vt0.c0) THEN vt0.c0 WHEN (('') IS TRUE) THEN -1.611019722E9 END ASC);
SELECT COUNT(*) FROM vt0 WHERE (json((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, '', vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0)<(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN ABS(DISTINCT vt0.c0) THEN vt0.c0 WHEN (('') IS TRUE) THEN -1.611019722E9 END ASC;
SELECT COUNT(*) FROM v0 WHERE (-165307529 COLLATE BINARY) ORDER BY CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN (v0.c0 IN (v0.c0, NULL, v0.c0)) THEN (- (v0.c0)) WHEN (('1380880061')==(v0.c0)) THEN v0.c0 COLLATE BINARY WHEN CASE WHEN v0.c0 THEN '125504863' END THEN (NOT (v0.c0)) ELSE MIN(v0.c0, v0.c0, v0.c0, v0.c0) END, ((CASE WHEN v0.c0 THEN v0.c0 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-165307529 COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN (v0.c0 IN (v0.c0, NULL, v0.c0)) THEN (- (v0.c0)) WHEN (('1380880061')==(v0.c0)) THEN v0.c0 COLLATE BINARY WHEN CASE WHEN v0.c0 THEN '125504863' END THEN (NOT (v0.c0)) ELSE MIN(v0.c0, v0.c0, v0.c0, v0.c0) END, ((CASE WHEN v0.c0 THEN v0.c0 END) NOT NULL) DESC);
SELECT COUNT(*) FROM v0 WHERE (-165307529 COLLATE BINARY) ORDER BY CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN (v0.c0 IN (v0.c0, NULL, v0.c0)) THEN (- (v0.c0)) WHEN (('1380880061')==(v0.c0)) THEN v0.c0 COLLATE BINARY WHEN CASE WHEN v0.c0 THEN '125504863' END THEN (NOT (v0.c0)) ELSE MIN(v0.c0, v0.c0, v0.c0, v0.c0) END, ((CASE WHEN v0.c0 THEN v0.c0 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-165307529 COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN (v0.c0 IN (v0.c0, NULL, v0.c0)) THEN (- (v0.c0)) WHEN (('1380880061')==(v0.c0)) THEN v0.c0 COLLATE BINARY WHEN CASE WHEN v0.c0 THEN '125504863' END THEN (NOT (v0.c0)) ELSE MIN(v0.c0, v0.c0, v0.c0, v0.c0) END, ((CASE WHEN v0.c0 THEN v0.c0 END) NOT NULL) DESC);
SELECT COUNT(*) FROM v0 WHERE (-165307529 COLLATE BINARY) ORDER BY CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN (v0.c0 IN (v0.c0, NULL, v0.c0)) THEN (- (v0.c0)) WHEN (('1380880061')==(v0.c0)) THEN v0.c0 COLLATE BINARY WHEN CASE WHEN v0.c0 THEN '125504863' END THEN (NOT (v0.c0)) ELSE MIN(v0.c0, v0.c0, v0.c0, v0.c0) END, ((CASE WHEN v0.c0 THEN v0.c0 END) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (TRIM(((((((((((((9.14938094E8)OR(t0.c2)))OR(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(v0.c0)))AND(t0.c2)), ((v0.c0)+(v0.c0)))) ORDER BY rtreenode(((t0.c1)<=(t0.c1)), ((v0.c0) BETWEEN (t0.c1) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ((TRIM(((((((((((((9.14938094E8)OR(t0.c2)))OR(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(v0.c0)))AND(t0.c2)), ((v0.c0)+(v0.c0)))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY rtreenode(((t0.c1)<=(t0.c1)), ((v0.c0) BETWEEN (t0.c1) AND (t0.c0))));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (TRIM(((((((((((((9.14938094E8)OR(t0.c2)))OR(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(v0.c0)))AND(t0.c2)), ((v0.c0)+(v0.c0)))) ORDER BY rtreenode(((t0.c1)<=(t0.c1)), ((v0.c0) BETWEEN (t0.c1) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ((TRIM(((((((((((((9.14938094E8)OR(t0.c2)))OR(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(v0.c0)))AND(t0.c2)), ((v0.c0)+(v0.c0)))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY rtreenode(((t0.c1)<=(t0.c1)), ((v0.c0) BETWEEN (t0.c1) AND (t0.c0))));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (TRIM(((((((((((((9.14938094E8)OR(t0.c2)))OR(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(v0.c0)))AND(t0.c2)), ((v0.c0)+(v0.c0)))) ORDER BY rtreenode(((t0.c1)<=(t0.c1)), ((v0.c0) BETWEEN (t0.c1) AND (t0.c0)));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0)));
SELECT COUNT(*) FROM t0, v0 WHERE (((CASE WHEN t0.c2 THEN '' ELSE t0.c1 END)<(CAST(t0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c2 THEN '' ELSE t0.c1 END)<(CAST(t0.c1 AS REAL)))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((CASE WHEN t0.c2 THEN '' ELSE t0.c1 END)<(CAST(t0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c2 THEN '' ELSE t0.c1 END)<(CAST(t0.c1 AS REAL)))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((CASE WHEN t0.c2 THEN '' ELSE t0.c1 END)<(CAST(t0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (TRIM(DISTINCT ((((((((t0.c0)AND(t0.c2)))OR(t0.c2)))AND(t0.c2)))AND(v0.c0)), ((t0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((((((t0.c0)AND(t0.c2)))OR(t0.c2)))AND(t0.c2)))AND(v0.c0)), ((t0.c1) ISNULL))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (TRIM(DISTINCT ((((((((t0.c0)AND(t0.c2)))OR(t0.c2)))AND(t0.c2)))AND(v0.c0)), ((t0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((((((t0.c0)AND(t0.c2)))OR(t0.c2)))AND(t0.c2)))AND(v0.c0)), ((t0.c1) ISNULL))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (TRIM(DISTINCT ((((((((t0.c0)AND(t0.c2)))OR(t0.c2)))AND(t0.c2)))AND(v0.c0)), ((t0.c1) ISNULL)));
SELECT * FROM v0, vt0 WHERE (((((((((CASE WHEN x'3e9c' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c0 AS INTEGER))))OR(((v0.c0)<(v0.c0)))))AND(TYPEOF(v0.c0))))AND(CAST(vt0.c0 AS REAL)))) ORDER BY (((((v0.c0, '-262756053', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN x'3e9c' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c0 AS INTEGER))))OR(((v0.c0)<(v0.c0)))))AND(TYPEOF(v0.c0))))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c0, '-262756053', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOTNULL) ASC);
SELECT * FROM v0, vt0 WHERE (((((((((CASE WHEN x'3e9c' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c0 AS INTEGER))))OR(((v0.c0)<(v0.c0)))))AND(TYPEOF(v0.c0))))AND(CAST(vt0.c0 AS REAL)))) ORDER BY (((((v0.c0, '-262756053', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN x'3e9c' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c0 AS INTEGER))))OR(((v0.c0)<(v0.c0)))))AND(TYPEOF(v0.c0))))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c0, '-262756053', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOTNULL) ASC);
SELECT * FROM v0, vt0 WHERE (((((((((CASE WHEN x'3e9c' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c0 AS INTEGER))))OR(((v0.c0)<(v0.c0)))))AND(TYPEOF(v0.c0))))AND(CAST(vt0.c0 AS REAL)))) ORDER BY (((((v0.c0, '-262756053', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c0))) ORDER BY LTRIM(CAST(v0.c0 AS REAL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY LTRIM(CAST(v0.c0 AS REAL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c0))) ORDER BY LTRIM(CAST(v0.c0 AS REAL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY LTRIM(CAST(v0.c0 AS REAL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c0))) ORDER BY LTRIM(CAST(v0.c0 AS REAL))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) ISNULL)) ORDER BY ((CASE -6.82642293E8  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (v0.c0) AND (v0.c0));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((CASE -6.82642293E8  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (v0.c0) AND (v0.c0)));
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) ISNULL)) ORDER BY ((CASE -6.82642293E8  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (v0.c0) AND (v0.c0));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((CASE -6.82642293E8  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (v0.c0) AND (v0.c0)));
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) ISNULL)) ORDER BY ((CASE -6.82642293E8  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (v0.c0) AND (v0.c0));
SELECT * FROM v0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL COLLATE RTRIM);
SELECT ALL * FROM v0, t0 WHERE (((x'53f5') NOT BETWEEN (v0.c0) AND (t0.c2)) COLLATE BINARY) ORDER BY (((((- (x'')))AND(v0.c0)))AND(t0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'53f5') NOT BETWEEN (v0.c0) AND (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0, t0 ORDER BY (((((- (x'')))AND(v0.c0)))AND(t0.c2))  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (((x'53f5') NOT BETWEEN (v0.c0) AND (t0.c2)) COLLATE BINARY) ORDER BY (((((- (x'')))AND(v0.c0)))AND(t0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'53f5') NOT BETWEEN (v0.c0) AND (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0, t0 ORDER BY (((((- (x'')))AND(v0.c0)))AND(t0.c2))  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (((x'53f5') NOT BETWEEN (v0.c0) AND (t0.c2)) COLLATE BINARY) ORDER BY (((((- (x'')))AND(v0.c0)))AND(t0.c2))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (CASE CASE t0.c1  WHEN t0.c1 THEN t0.c2 END  WHEN CAST(t0.c2 AS BLOB) THEN (((t0.c1))<=((t0.c1))) ELSE ((vt0.c0)>(t0.c2)) END) ORDER BY (NULL IN (((((v0.c0)AND(NULL)))AND(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE t0.c1  WHEN t0.c1 THEN t0.c2 END  WHEN CAST(t0.c2 AS BLOB) THEN (((t0.c1))<=((t0.c1))) ELSE ((vt0.c0)>(t0.c2)) END) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (NULL IN (((((v0.c0)AND(NULL)))AND(v0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (CASE CASE t0.c1  WHEN t0.c1 THEN t0.c2 END  WHEN CAST(t0.c2 AS BLOB) THEN (((t0.c1))<=((t0.c1))) ELSE ((vt0.c0)>(t0.c2)) END) ORDER BY (NULL IN (((((v0.c0)AND(NULL)))AND(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE t0.c1  WHEN t0.c1 THEN t0.c2 END  WHEN CAST(t0.c2 AS BLOB) THEN (((t0.c1))<=((t0.c1))) ELSE ((vt0.c0)>(t0.c2)) END) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (NULL IN (((((v0.c0)AND(NULL)))AND(v0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (CASE CASE t0.c1  WHEN t0.c1 THEN t0.c2 END  WHEN CAST(t0.c2 AS BLOB) THEN (((t0.c1))<=((t0.c1))) ELSE ((vt0.c0)>(t0.c2)) END) ORDER BY (NULL IN (((((v0.c0)AND(NULL)))AND(v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((v0.c0, CAST(vt0.c0 AS TEXT), ((t0.c0) NOT NULL), ((NULL) NOT BETWEEN (vt0.c0) AND (t0.c1)), 0.4379685774762151))>((((v0.c0)|('U~')), CASE WHEN v0.c0 THEN vt0.c0 END, ((((v0.c0)AND('1367397637')))AND(NULL)), t0.c2, TYPEOF('-165865467'))))) ORDER BY 3.26860519E8 ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0, CAST(vt0.c0 AS TEXT), ((t0.c0) NOT NULL), ((NULL) NOT BETWEEN (vt0.c0) AND (t0.c1)), 0.4379685774762151))>((((v0.c0)|('U~')), CASE WHEN v0.c0 THEN vt0.c0 END, ((((v0.c0)AND('1367397637')))AND(NULL)), t0.c2, TYPEOF('-165865467'))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY 3.26860519E8 ASC);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((v0.c0, CAST(vt0.c0 AS TEXT), ((t0.c0) NOT NULL), ((NULL) NOT BETWEEN (vt0.c0) AND (t0.c1)), 0.4379685774762151))>((((v0.c0)|('U~')), CASE WHEN v0.c0 THEN vt0.c0 END, ((((v0.c0)AND('1367397637')))AND(NULL)), t0.c2, TYPEOF('-165865467'))))) ORDER BY 3.26860519E8 ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0, CAST(vt0.c0 AS TEXT), ((t0.c0) NOT NULL), ((NULL) NOT BETWEEN (vt0.c0) AND (t0.c1)), 0.4379685774762151))>((((v0.c0)|('U~')), CASE WHEN v0.c0 THEN vt0.c0 END, ((((v0.c0)AND('1367397637')))AND(NULL)), t0.c2, TYPEOF('-165865467'))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY 3.26860519E8 ASC);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((v0.c0, CAST(vt0.c0 AS TEXT), ((t0.c0) NOT NULL), ((NULL) NOT BETWEEN (vt0.c0) AND (t0.c1)), 0.4379685774762151))>((((v0.c0)|('U~')), CASE WHEN v0.c0 THEN vt0.c0 END, ((((v0.c0)AND('1367397637')))AND(NULL)), t0.c2, TYPEOF('-165865467'))))) ORDER BY 3.26860519E8 ASC;
SELECT ALL * FROM vt0, t0 WHERE (((CAST(vt0.c0 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CAST(vt0.c0 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CAST(vt0.c0 AS REAL)) IS TRUE));
SELECT * FROM v0, t0 WHERE ((+ (((((t0.c0)OR(v0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c0)OR(v0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((+ (((((t0.c0)OR(v0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c0)OR(v0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((+ (((((t0.c0)OR(v0.c0)))OR(t0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-((- ('1622134040'))))) ORDER BY (((-1.572951809E9 COLLATE NOCASE))>((((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-((- ('1622134040'))))) IS TRUE)  as count FROM vt0 ORDER BY (((-1.572951809E9 COLLATE NOCASE))>((((vt0.c0)|(vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-((- ('1622134040'))))) ORDER BY (((-1.572951809E9 COLLATE NOCASE))>((((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-((- ('1622134040'))))) IS TRUE)  as count FROM vt0 ORDER BY (((-1.572951809E9 COLLATE NOCASE))>((((vt0.c0)|(vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-((- ('1622134040'))))) ORDER BY (((-1.572951809E9 COLLATE NOCASE))>((((vt0.c0)|(vt0.c0)))));
SELECT ALL * FROM v0 NOT INDEXED, t0, vt0 WHERE (CAST((- (t0.c2)) AS BLOB)) ORDER BY ((t0.c2 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((- (t0.c2)) AS BLOB)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((t0.c2 IN ()) IN ()) DESC);
SELECT ALL * FROM v0 NOT INDEXED, t0, vt0 WHERE (CAST((- (t0.c2)) AS BLOB)) ORDER BY ((t0.c2 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((- (t0.c2)) AS BLOB)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((t0.c2 IN ()) IN ()) DESC);
SELECT ALL * FROM v0 NOT INDEXED, t0, vt0 WHERE (CAST((- (t0.c2)) AS BLOB)) ORDER BY ((t0.c2 IN ()) IN ()) DESC;
SELECT COUNT(*) FROM t0, v0 WHERE (CASE (v0.c0 IN (t0.c1))  WHEN ((NULL)LIKE(t0.c1)) THEN (~ (t0.c0)) WHEN (- (t0.c1)) THEN CAST(t0.c2 AS REAL) WHEN ((((v0.c0)OR(t0.c0)))OR(t0.c2)) THEN ((t0.c0)<<(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (v0.c0 IN (t0.c1))  WHEN ((NULL)LIKE(t0.c1)) THEN (~ (t0.c0)) WHEN (- (t0.c1)) THEN CAST(t0.c2 AS REAL) WHEN ((((v0.c0)OR(t0.c0)))OR(t0.c2)) THEN ((t0.c0)<<(v0.c0)) END) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (CASE (v0.c0 IN (t0.c1))  WHEN ((NULL)LIKE(t0.c1)) THEN (~ (t0.c0)) WHEN (- (t0.c1)) THEN CAST(t0.c2 AS REAL) WHEN ((((v0.c0)OR(t0.c0)))OR(t0.c2)) THEN ((t0.c0)<<(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (v0.c0 IN (t0.c1))  WHEN ((NULL)LIKE(t0.c1)) THEN (~ (t0.c0)) WHEN (- (t0.c1)) THEN CAST(t0.c2 AS REAL) WHEN ((((v0.c0)OR(t0.c0)))OR(t0.c2)) THEN ((t0.c0)<<(v0.c0)) END) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (CASE (v0.c0 IN (t0.c1))  WHEN ((NULL)LIKE(t0.c1)) THEN (~ (t0.c0)) WHEN (- (t0.c1)) THEN CAST(t0.c2 AS REAL) WHEN ((((v0.c0)OR(t0.c0)))OR(t0.c2)) THEN ((t0.c0)<<(v0.c0)) END);
SELECT * FROM vt0, t0 WHERE (((CAST(t0.c1 AS TEXT))>>(t0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS TEXT))>>(t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CAST(t0.c1 AS TEXT))>>(t0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS TEXT))>>(t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CAST(t0.c1 AS TEXT))>>(t0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ (((('4'))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ (((('4'))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ (((('4'))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ (((('4'))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ (((('4'))<=((vt0.c0))))));
SELECT ALL * FROM v0, t0 WHERE (CAST(((t0.c0)|(v0.c0)) AS BLOB)) ORDER BY (((+ (t0.c1)))>>(((t0.c0)/(t0.c2)))) ASC, ((((v0.c0) ISNULL)) NOT BETWEEN (((t0.c0)||(0.966483178977844))) AND (CAST(v0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)|(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, t0 ORDER BY (((+ (t0.c1)))>>(((t0.c0)/(t0.c2)))) ASC, ((((v0.c0) ISNULL)) NOT BETWEEN (((t0.c0)||(0.966483178977844))) AND (CAST(v0.c0 AS INTEGER))) DESC);
SELECT ALL * FROM v0, t0 WHERE (CAST(((t0.c0)|(v0.c0)) AS BLOB)) ORDER BY (((+ (t0.c1)))>>(((t0.c0)/(t0.c2)))) ASC, ((((v0.c0) ISNULL)) NOT BETWEEN (((t0.c0)||(0.966483178977844))) AND (CAST(v0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)|(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, t0 ORDER BY (((+ (t0.c1)))>>(((t0.c0)/(t0.c2)))) ASC, ((((v0.c0) ISNULL)) NOT BETWEEN (((t0.c0)||(0.966483178977844))) AND (CAST(v0.c0 AS INTEGER))) DESC);
SELECT ALL * FROM v0, t0 WHERE (CAST(((t0.c0)|(v0.c0)) AS BLOB)) ORDER BY (((+ (t0.c1)))>>(((t0.c0)/(t0.c2)))) ASC, ((((v0.c0) ISNULL)) NOT BETWEEN (((t0.c0)||(0.966483178977844))) AND (CAST(v0.c0 AS INTEGER))) DESC;
SELECT * FROM v0, vt0, t0 WHERE (((COALESCE(DISTINCT vt0.c0, v0.c0))<(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt0.c0, v0.c0))<(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (((COALESCE(DISTINCT vt0.c0, v0.c0))<(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt0.c0, v0.c0))<(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (((COALESCE(DISTINCT vt0.c0, v0.c0))<(((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT CAST(vt0.c0 AS REAL), 0.5027693446984847));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(vt0.c0 AS REAL), 0.5027693446984847)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT CAST(vt0.c0 AS REAL), 0.5027693446984847));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(vt0.c0 AS REAL), 0.5027693446984847)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT CAST(vt0.c0 AS REAL), 0.5027693446984847));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON LIKELY(((vt0.c0) IS TRUE)) WHERE (CASE ((v0.c0)<(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((v0.c0)GLOB(vt0.c0)) WHEN ((0xffffffffa81a0fa9)LIKE(vt0.c0)) THEN v0.c0 WHEN (- (v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)<(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((v0.c0)GLOB(vt0.c0)) WHEN ((0Xffffffffa81a0fa9)LIKE(vt0.c0)) THEN v0.c0 WHEN (- (v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON LIKELY(((vt0.c0) IS TRUE)) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON LIKELY(((vt0.c0) IS TRUE)) WHERE (CASE ((v0.c0)<(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((v0.c0)GLOB(vt0.c0)) WHEN ((0xffffffffa81a0fa9)LIKE(vt0.c0)) THEN v0.c0 WHEN (- (v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)<(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((v0.c0)GLOB(vt0.c0)) WHEN ((0Xffffffffa81a0fa9)LIKE(vt0.c0)) THEN v0.c0 WHEN (- (v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON LIKELY(((vt0.c0) IS TRUE)) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON LIKELY(((vt0.c0) IS TRUE)) WHERE (CASE ((v0.c0)<(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((v0.c0)GLOB(vt0.c0)) WHEN ((0xffffffffa81a0fa9)LIKE(vt0.c0)) THEN v0.c0 WHEN (- (v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END;
SELECT * FROM t0, vt0, v0 WHERE ((ABS(DISTINCT vt0.c0) IN (COALESCE(DISTINCT t0.c0, t0.c0)))) ORDER BY ((((((t0.c2)IS(vt0.c0)))AND(NULL)))OR(((t0.c2)AND('-201017377')))), (((((t0.c0)AND(v0.c0))))=(((('-1097549697') NOTNULL)))), (('3!QQ&')<(t0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((ABS(DISTINCT vt0.c0) IN (COALESCE(DISTINCT t0.c0, t0.c0)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((((t0.c2)IS(vt0.c0)))AND(NULL)))OR(((t0.c2)AND('-201017377')))), (((((t0.c0)AND(v0.c0))))=(((('-1097549697') NOTNULL)))), (('3!QQ&')<(t0.c1)) COLLATE BINARY);
SELECT * FROM t0, vt0, v0 WHERE ((ABS(DISTINCT vt0.c0) IN (COALESCE(DISTINCT t0.c0, t0.c0)))) ORDER BY ((((((t0.c2)IS(vt0.c0)))AND(NULL)))OR(((t0.c2)AND('-201017377')))), (((((t0.c0)AND(v0.c0))))=(((('-1097549697') NOTNULL)))), (('3!QQ&')<(t0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((ABS(DISTINCT vt0.c0) IN (COALESCE(DISTINCT t0.c0, t0.c0)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((((t0.c2)IS(vt0.c0)))AND(NULL)))OR(((t0.c2)AND('-201017377')))), (((((t0.c0)AND(v0.c0))))=(((('-1097549697') NOTNULL)))), (('3!QQ&')<(t0.c1)) COLLATE BINARY);
SELECT * FROM t0, vt0, v0 WHERE ((ABS(DISTINCT vt0.c0) IN (COALESCE(DISTINCT t0.c0, t0.c0)))) ORDER BY ((((((t0.c2)IS(vt0.c0)))AND(NULL)))OR(((t0.c2)AND('-201017377')))), (((((t0.c0)AND(v0.c0))))=(((('-1097549697') NOTNULL)))), (('3!QQ&')<(t0.c1)) COLLATE BINARY;
SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE (((((t0.c2)IS NOT(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)IS NOT(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE (((((t0.c2)IS NOT(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)IS NOT(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE (((((t0.c2)IS NOT(vt0.c0))) IS TRUE));
SELECT * FROM v0, vt0 WHERE ((((((vt0.c0 IN ()))OR(vt0.c0)))AND(((v0.c0)GLOB(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c0) NOT NULL))))  NULLS LAST, '', ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), v0.c0;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR(vt0.c0)))AND(((v0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c0) NOT NULL))))  NULLS LAST, '', ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), v0.c0);
SELECT * FROM v0, vt0 WHERE ((((((vt0.c0 IN ()))OR(vt0.c0)))AND(((v0.c0)GLOB(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c0) NOT NULL))))  NULLS LAST, '', ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), v0.c0;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR(vt0.c0)))AND(((v0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c0) NOT NULL))))  NULLS LAST, '', ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), v0.c0);
SELECT * FROM v0, vt0 WHERE ((((((vt0.c0 IN ()))OR(vt0.c0)))AND(((v0.c0)GLOB(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c0) NOT NULL))))  NULLS LAST, '', ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), v0.c0;
SELECT ALL * FROM v0, vt0 WHERE (LOWER(DISTINCT x'')) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT x'')) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS INTEGER)  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (LOWER(DISTINCT x'')) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT x'')) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS INTEGER)  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (LOWER(DISTINCT x'')) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS INTEGER)  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN t0 ON (((SUBSTR(t0.c2, t0.c0)))<=(((((t0.c1))<>((t0.c0)))))) WHERE (((((t0.c1) NOT BETWEEN (t0.c1) AND (v0.c0)))AND(CAST(t0.c1 AS INTEGER)))) ORDER BY HEX(t0.c1) COLLATE NOCASE DESC, COALESCE(DISTINCT (- (t0.c0)), (t0.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (t0.c1) AND (v0.c0)))AND(CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN t0 ON (((SUBSTR(t0.c2, t0.c0)))<=(((((t0.c1))<>((t0.c0)))))) ORDER BY HEX(t0.c1) COLLATE NOCASE DESC, COALESCE(DISTINCT (- (t0.c0)), (t0.c0 IN ()))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN t0 ON (((SUBSTR(t0.c2, t0.c0)))<=(((((t0.c1))<>((t0.c0)))))) WHERE (((((t0.c1) NOT BETWEEN (t0.c1) AND (v0.c0)))AND(CAST(t0.c1 AS INTEGER)))) ORDER BY HEX(t0.c1) COLLATE NOCASE DESC, COALESCE(DISTINCT (- (t0.c0)), (t0.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (t0.c1) AND (v0.c0)))AND(CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN t0 ON (((SUBSTR(t0.c2, t0.c0)))<=(((((t0.c1))<>((t0.c0)))))) ORDER BY HEX(t0.c1) COLLATE NOCASE DESC, COALESCE(DISTINCT (- (t0.c0)), (t0.c0 IN ()))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN t0 ON (((SUBSTR(t0.c2, t0.c0)))<=(((((t0.c1))<>((t0.c0)))))) WHERE (((((t0.c1) NOT BETWEEN (t0.c1) AND (v0.c0)))AND(CAST(t0.c1 AS INTEGER)))) ORDER BY HEX(t0.c1) COLLATE NOCASE DESC, COALESCE(DISTINCT (- (t0.c0)), (t0.c0 IN ()))  NULLS LAST;
SELECT * FROM t0, vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c2)LIKE(v0.c0)))) AND ((((v0.c0)>(t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((t0.c2)LIKE(v0.c0)))) AND ((((v0.c0)>(t0.c1)))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c2)LIKE(v0.c0)))) AND ((((v0.c0)>(t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((t0.c2)LIKE(v0.c0)))) AND ((((v0.c0)>(t0.c1)))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c2)LIKE(v0.c0)))) AND ((((v0.c0)>(t0.c1))))));
SELECT * FROM v0 WHERE (((((v0.c0) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE)) ISNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE)) ISNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) IS FALSE)) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND ((vt0.c0))));
SELECT * FROM t0 WHERE (0.1166269526386483);
SELECT SUM(count) FROM (SELECT ALL ((0.1166269526386483) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0.1166269526386483);
SELECT SUM(count) FROM (SELECT ALL ((0.1166269526386483) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0.1166269526386483);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 END)+(((t0.c1)>=(t0.c1)))), t0.c1 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 END)+(((t0.c1)>=(t0.c1)))), t0.c1 COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 END)+(((t0.c1)>=(t0.c1)))), t0.c1 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 END)+(((t0.c1)>=(t0.c1)))), t0.c1 COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 END)+(((t0.c1)>=(t0.c1)))), t0.c1 COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0 IN ())))==(((((t0.c1))<((t0.c0))))))) ORDER BY 0.8681597624398159  NULLS LAST, (((+ (t0.c2)))IS(((t0.c2) NOTNULL))) DESC, t0.c1 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN ())))=(((((t0.c1))<((t0.c0))))))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.8681597624398159  NULLS LAST, (((+ (t0.c2)))IS(((t0.c2) NOTNULL))) DESC, t0.c1 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0 IN ())))==(((((t0.c1))<((t0.c0))))))) ORDER BY 0.8681597624398159  NULLS LAST, (((+ (t0.c2)))IS(((t0.c2) NOTNULL))) DESC, t0.c1 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN ())))=(((((t0.c1))<((t0.c0))))))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.8681597624398159  NULLS LAST, (((+ (t0.c2)))IS(((t0.c2) NOTNULL))) DESC, t0.c1 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0 IN ())))==(((((t0.c1))<((t0.c0))))))) ORDER BY 0.8681597624398159  NULLS LAST, (((+ (t0.c2)))IS(((t0.c2) NOTNULL))) DESC, t0.c1 COLLATE NOCASE;
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN t0 ON ((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))OR(((vt0.c0) IS FALSE))))OR('◓GP\(')) WHERE ((((t0.c2 IN ()))*((((('1621739354')AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ()))*((((('1621739354')AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t0 ON ((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))OR(((vt0.c0) IS FALSE))))OR('◓GP\(')));
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN t0 ON ((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))OR(((vt0.c0) IS FALSE))))OR('◓GP\(')) WHERE ((((t0.c2 IN ()))*((((('1621739354')AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ()))*((((('1621739354')AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t0 ON ((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))OR(((vt0.c0) IS FALSE))))OR('◓GP\(')));
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN t0 ON ((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))OR(((vt0.c0) IS FALSE))))OR('◓GP\(')) WHERE ((((t0.c2 IN ()))*((((('1621739354')AND(t0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c1)>=(t0.c0)))/((((t0.c0))!=((t0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)>=(t0.c0)))/((((t0.c0))<>((t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c1)>=(t0.c0)))/((((t0.c0))!=((t0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)>=(t0.c0)))/((((t0.c0))<>((t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c1)>=(t0.c0)))/((((t0.c0))!=((t0.c1))))));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c1)))>>(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))AND(t0.c1)))>>(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c1)))>>(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))AND(t0.c1)))>>(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c1)))>>(((vt0.c0) IS TRUE))));
SELECT ALL * FROM t0 WHERE ((+ (((((t0.c2)AND(t0.c2)))OR(t0.c2))))) ORDER BY ((((t0.c1) BETWEEN (t0.c1) AND ('')))=(((t0.c0)/(t0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c2)AND(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1) BETWEEN (t0.c1) AND ('')))=(((t0.c0)/(t0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((+ (((((t0.c2)AND(t0.c2)))OR(t0.c2))))) ORDER BY ((((t0.c1) BETWEEN (t0.c1) AND ('')))=(((t0.c0)/(t0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c2)AND(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1) BETWEEN (t0.c1) AND ('')))=(((t0.c0)/(t0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((+ (((((t0.c2)AND(t0.c2)))OR(t0.c2))))) ORDER BY ((((t0.c1) BETWEEN (t0.c1) AND ('')))=(((t0.c0)/(t0.c2)))) ASC  NULLS FIRST;
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((((t0.c0)OR(v0.c0)))OR((+ (vt0.c0)))))OR((NOT (t0.c0)))) FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS REAL))<=((NOT (v0.c0)))) WHERE (((CASE WHEN vt0.c0 THEN t0.c2 END)>(vt0.c0))) ORDER BY ((((v0.c0)>=(t0.c1))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN t0.c2 END)>(vt0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((((t0.c0)OR(v0.c0)))OR((+ (vt0.c0)))))OR((NOT (t0.c0)))) FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS REAL))<=((NOT (v0.c0)))) ORDER BY ((((v0.c0)>=(t0.c1))) IS FALSE) DESC);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((((t0.c0)OR(v0.c0)))OR((+ (vt0.c0)))))OR((NOT (t0.c0)))) FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS REAL))<=((NOT (v0.c0)))) WHERE (((CASE WHEN vt0.c0 THEN t0.c2 END)>(vt0.c0))) ORDER BY ((((v0.c0)>=(t0.c1))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN t0.c2 END)>(vt0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((((t0.c0)OR(v0.c0)))OR((+ (vt0.c0)))))OR((NOT (t0.c0)))) FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS REAL))<=((NOT (v0.c0)))) ORDER BY ((((v0.c0)>=(t0.c1))) IS FALSE) DESC);
SELECT * FROM v0, t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c2 THEN t0.c2 END)>=(CAST(vt0.c0 AS REAL))) WHERE ((v0.c0 IN ())) ORDER BY rtreenode(((t0.c1) IS FALSE), vt0.c0) DESC  NULLS LAST, CASE WHEN CASE WHEN t0.c2 THEN t0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c1 ELSE '' END ELSE CASE v0.c0  WHEN '' THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c0 END END DESC, ((TYPEOF(x'')) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0, t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c2 THEN t0.c2 END)>=(CAST(vt0.c0 AS REAL))) ORDER BY rtreenode(((t0.c1) IS FALSE), vt0.c0) DESC  NULLS LAST, CASE WHEN CASE WHEN t0.c2 THEN t0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c1 ELSE '' END ELSE CASE v0.c0  WHEN '' THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c0 END END DESC, ((TYPEOF(x'')) ISNULL) ASC  NULLS LAST);
SELECT * FROM v0, t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c2 THEN t0.c2 END)>=(CAST(vt0.c0 AS REAL))) WHERE ((v0.c0 IN ())) ORDER BY rtreenode(((t0.c1) IS FALSE), vt0.c0) DESC  NULLS LAST, CASE WHEN CASE WHEN t0.c2 THEN t0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c1 ELSE '' END ELSE CASE v0.c0  WHEN '' THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c0 END END DESC, ((TYPEOF(x'')) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0, t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c2 THEN t0.c2 END)>=(CAST(vt0.c0 AS REAL))) ORDER BY rtreenode(((t0.c1) IS FALSE), vt0.c0) DESC  NULLS LAST, CASE WHEN CASE WHEN t0.c2 THEN t0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c1 ELSE '' END ELSE CASE v0.c0  WHEN '' THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c0 END END DESC, ((TYPEOF(x'')) ISNULL) ASC  NULLS LAST);
SELECT * FROM v0, t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c2 THEN t0.c2 END)>=(CAST(vt0.c0 AS REAL))) WHERE ((v0.c0 IN ())) ORDER BY rtreenode(((t0.c1) IS FALSE), vt0.c0) DESC  NULLS LAST, CASE WHEN CASE WHEN t0.c2 THEN t0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c1 ELSE '' END ELSE CASE v0.c0  WHEN '' THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c0 END END DESC, ((TYPEOF(x'')) ISNULL) ASC  NULLS LAST;
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE (((((v0.c0)LIKE(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)LIKE(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE (((((v0.c0)LIKE(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)LIKE(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE (((((v0.c0)LIKE(t0.c0))) IS TRUE));
SELECT ALL * FROM vt0 WHERE (('돽Z	8[' IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((('돽Z	8[' IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (('돽Z	8[' IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((('돽Z	8[' IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (('돽Z	8[' IN ()) COLLATE BINARY);
SELECT * FROM t0, vt0, v0 WHERE (((((v0.c0) BETWEEN (vt0.c0) AND ('|&')))+(CAST(v0.c0 AS NUMERIC)))) ORDER BY ((((CAST(t0.c1 AS BLOB))AND(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (vt0.c0) AND ('|&')))+(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((CAST(t0.c1 AS BLOB))AND(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c2 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM t0, vt0, v0 WHERE (((((v0.c0) BETWEEN (vt0.c0) AND ('|&')))+(CAST(v0.c0 AS NUMERIC)))) ORDER BY ((((CAST(t0.c1 AS BLOB))AND(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (vt0.c0) AND ('|&')))+(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((CAST(t0.c1 AS BLOB))AND(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c2 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM t0, vt0, v0 WHERE (((((v0.c0) BETWEEN (vt0.c0) AND ('|&')))+(CAST(v0.c0 AS NUMERIC)))) ORDER BY ((((CAST(t0.c1 AS BLOB))AND(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON ((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END) BETWEEN (((t0.c2)>('ﰨ'))) AND (CASE t0.c0  WHEN v0.c0 THEN t0.c1 ELSE v0.c0 END)) WHERE (((((((((t0.c1)OR(t0.c0)))AND(t0.c1)))AND(x'')))AND(v0.c0))) ORDER BY CASE WHEN ((t0.c2)<<(v0.c0)) THEN (t0.c0 IN ()) ELSE CASE t0.c0  WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0Xffffffffd86f09e5 END END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c1)OR(t0.c0)))AND(t0.c1)))AND(x'')))AND(v0.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END) BETWEEN (((t0.c2)>('ﰨ'))) AND (CASE t0.c0  WHEN v0.c0 THEN t0.c1 ELSE v0.c0 END)) ORDER BY CASE WHEN ((t0.c2)<<(v0.c0)) THEN (t0.c0 IN ()) ELSE CASE t0.c0  WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0xffffffffd86f09e5 END END DESC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON ((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END) BETWEEN (((t0.c2)>('ﰨ'))) AND (CASE t0.c0  WHEN v0.c0 THEN t0.c1 ELSE v0.c0 END)) WHERE (((((((((t0.c1)OR(t0.c0)))AND(t0.c1)))AND(x'')))AND(v0.c0))) ORDER BY CASE WHEN ((t0.c2)<<(v0.c0)) THEN (t0.c0 IN ()) ELSE CASE t0.c0  WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0Xffffffffd86f09e5 END END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c1)OR(t0.c0)))AND(t0.c1)))AND(x'')))AND(v0.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END) BETWEEN (((t0.c2)>('ﰨ'))) AND (CASE t0.c0  WHEN v0.c0 THEN t0.c1 ELSE v0.c0 END)) ORDER BY CASE WHEN ((t0.c2)<<(v0.c0)) THEN (t0.c0 IN ()) ELSE CASE t0.c0  WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0xffffffffd86f09e5 END END DESC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON ((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END) BETWEEN (((t0.c2)>('ﰨ'))) AND (CASE t0.c0  WHEN v0.c0 THEN t0.c1 ELSE v0.c0 END)) WHERE (((((((((t0.c1)OR(t0.c0)))AND(t0.c1)))AND(x'')))AND(v0.c0))) ORDER BY CASE WHEN ((t0.c2)<<(v0.c0)) THEN (t0.c0 IN ()) ELSE CASE t0.c0  WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0Xffffffffd86f09e5 END END DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN '2060743412' THEN vt0.c0 COLLATE BINARY END) ORDER BY (('0.3481535079979612')>=((((vt0.c0))=((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '2060743412' THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY (('0.3481535079979612')>=((((vt0.c0))==((vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN '2060743412' THEN vt0.c0 COLLATE BINARY END) ORDER BY (('0.3481535079979612')>=((((vt0.c0))=((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '2060743412' THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY (('0.3481535079979612')>=((((vt0.c0))==((vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN '2060743412' THEN vt0.c0 COLLATE BINARY END) ORDER BY (('0.3481535079979612')>=((((vt0.c0))=((vt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((TRIM(DISTINCT t0.c2, t0.c1))OR((- (t0.c2))))) ORDER BY (((v0.c0, NULL, v0.c0, t0.c0, t0.c2)) NOT BETWEEN (((((t0.c2))<((v0.c0))), (- (v0.c0)), ((t0.c1) BETWEEN (t0.c0) AND (v0.c0)), TRIM(vt0.c0), ((t0.c1) IS TRUE))) AND (((((t0.c1))==((t0.c0))), ((vt0.c0)<=(vt0.c0)), t0.c2 COLLATE BINARY, v0.c0 COLLATE RTRIM, (+ (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT t0.c2, t0.c1))OR((- (t0.c2))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((v0.c0, NULL, v0.c0, t0.c0, t0.c2)) NOT BETWEEN (((((t0.c2))<((v0.c0))), (- (v0.c0)), ((t0.c1) BETWEEN (t0.c0) AND (v0.c0)), TRIM(vt0.c0), ((t0.c1) IS TRUE))) AND (((((t0.c1))==((t0.c0))), ((vt0.c0)<=(vt0.c0)), t0.c2 COLLATE BINARY, v0.c0 COLLATE RTRIM, (+ (vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((TRIM(DISTINCT t0.c2, t0.c1))OR((- (t0.c2))))) ORDER BY (((v0.c0, NULL, v0.c0, t0.c0, t0.c2)) NOT BETWEEN (((((t0.c2))<((v0.c0))), (- (v0.c0)), ((t0.c1) BETWEEN (t0.c0) AND (v0.c0)), TRIM(vt0.c0), ((t0.c1) IS TRUE))) AND (((((t0.c1))==((t0.c0))), ((vt0.c0)<=(vt0.c0)), t0.c2 COLLATE BINARY, v0.c0 COLLATE RTRIM, (+ (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT t0.c2, t0.c1))OR((- (t0.c2))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((v0.c0, NULL, v0.c0, t0.c0, t0.c2)) NOT BETWEEN (((((t0.c2))<((v0.c0))), (- (v0.c0)), ((t0.c1) BETWEEN (t0.c0) AND (v0.c0)), TRIM(vt0.c0), ((t0.c1) IS TRUE))) AND (((((t0.c1))==((t0.c0))), ((vt0.c0)<=(vt0.c0)), t0.c2 COLLATE BINARY, v0.c0 COLLATE RTRIM, (+ (vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((TRIM(DISTINCT t0.c2, t0.c1))OR((- (t0.c2))))) ORDER BY (((v0.c0, NULL, v0.c0, t0.c0, t0.c2)) NOT BETWEEN (((((t0.c2))<((v0.c0))), (- (v0.c0)), ((t0.c1) BETWEEN (t0.c0) AND (v0.c0)), TRIM(vt0.c0), ((t0.c1) IS TRUE))) AND (((((t0.c1))==((t0.c0))), ((vt0.c0)<=(vt0.c0)), t0.c2 COLLATE BINARY, v0.c0 COLLATE RTRIM, (+ (vt0.c0)))))  NULLS LAST;
SELECT * FROM t0, vt0, v0 WHERE (v0.c0) ORDER BY CAST(LIKELIHOOD('ᶃ3', 0.4721673191075306) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CAST(LIKELIHOOD('ᶃ3', 0.4721673191075306) AS BLOB) ASC);
SELECT * FROM t0, vt0, v0 WHERE (v0.c0) ORDER BY CAST(LIKELIHOOD('ᶃ3', 0.4721673191075306) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CAST(LIKELIHOOD('ᶃ3', 0.4721673191075306) AS BLOB) ASC);
SELECT * FROM t0, vt0, v0 WHERE (v0.c0) ORDER BY CAST(LIKELIHOOD('ᶃ3', 0.4721673191075306) AS BLOB) ASC;
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) ORDER BY DATETIME(((vt0.c0) NOTNULL), CAST(vt0.c0 AS BLOB), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)%(vt0.c0)), NULLIF(vt0.c0, vt0.c0), -386349512, ((vt0.c0)OR(vt0.c0)), (~ (vt0.c0)), LIKELY(DISTINCT x''));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY DATETIME(((vt0.c0) NOTNULL), CAST(vt0.c0 AS BLOB), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)%(vt0.c0)), NULLIF(vt0.c0, vt0.c0), -386349512, ((vt0.c0)OR(vt0.c0)), (~ (vt0.c0)), LIKELY(DISTINCT x'')));
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) ORDER BY DATETIME(((vt0.c0) NOTNULL), CAST(vt0.c0 AS BLOB), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)%(vt0.c0)), NULLIF(vt0.c0, vt0.c0), -386349512, ((vt0.c0)OR(vt0.c0)), (~ (vt0.c0)), LIKELY(DISTINCT x''));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY DATETIME(((vt0.c0) NOTNULL), CAST(vt0.c0 AS BLOB), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)%(vt0.c0)), NULLIF(vt0.c0, vt0.c0), -386349512, ((vt0.c0)OR(vt0.c0)), (~ (vt0.c0)), LIKELY(DISTINCT x'')));
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) ORDER BY DATETIME(((vt0.c0) NOTNULL), CAST(vt0.c0 AS BLOB), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)%(vt0.c0)), NULLIF(vt0.c0, vt0.c0), -386349512, ((vt0.c0)OR(vt0.c0)), (~ (vt0.c0)), LIKELY(DISTINCT x''));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((v0.c0)<>(v0.c0)) IN ())) ORDER BY (NULL IN ((v0.c0 IN ()), (v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)<>(v0.c0)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY (NULL IN ((v0.c0 IN ()), (v0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((v0.c0)<>(v0.c0)) IN ())) ORDER BY (NULL IN ((v0.c0 IN ()), (v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)<>(v0.c0)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY (NULL IN ((v0.c0 IN ()), (v0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((v0.c0)<>(v0.c0)) IN ())) ORDER BY (NULL IN ((v0.c0 IN ()), (v0.c0 IN ())))  NULLS FIRST;
SELECT * FROM v0, vt0, t0 WHERE ((((t0.c2, t0.c2, 0.18462358982065008)) BETWEEN ((v0.c0, vt0.c0, '&')) AND ((t0.c0, t0.c2, v0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, t0.c2, 0.18462358982065008)) BETWEEN ((v0.c0, vt0.c0, '&')) AND ((t0.c0, t0.c2, v0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE ((((t0.c2, t0.c2, 0.18462358982065008)) BETWEEN ((v0.c0, vt0.c0, '&')) AND ((t0.c0, t0.c2, v0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, t0.c2, 0.18462358982065008)) BETWEEN ((v0.c0, vt0.c0, '&')) AND ((t0.c0, t0.c2, v0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE ((((t0.c2, t0.c2, 0.18462358982065008)) BETWEEN ((v0.c0, vt0.c0, '&')) AND ((t0.c0, t0.c2, v0.c0))) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((+ (vt0.c0)))AND(((((t0.c0)OR(t0.c1)))AND(t0.c1))))) ORDER BY ((((t0.c0)<>(t0.c1)))OR(((t0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))AND(((((t0.c0)OR(t0.c1)))AND(t0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0)<>(t0.c1)))OR(((t0.c2) NOTNULL))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((+ (vt0.c0)))AND(((((t0.c0)OR(t0.c1)))AND(t0.c1))))) ORDER BY ((((t0.c0)<>(t0.c1)))OR(((t0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))AND(((((t0.c0)OR(t0.c1)))AND(t0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0)<>(t0.c1)))OR(((t0.c2) NOTNULL))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((+ (vt0.c0)))AND(((((t0.c0)OR(t0.c1)))AND(t0.c1))))) ORDER BY ((((t0.c0)<>(t0.c1)))OR(((t0.c2) NOTNULL)));
SELECT * FROM t0, vt0, v0 WHERE (0.37811337538550627);
SELECT SUM(count) FROM (SELECT ALL ((0.37811337538550627) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE (0.37811337538550627);
SELECT SUM(count) FROM (SELECT ALL ((0.37811337538550627) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE (0.37811337538550627);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((((((v0.c0) NOT NULL))OR(CAST(t0.c2 AS BLOB))))OR((((t0.c1))<=((t0.c1))))))OR(((t0.c1)>=(v0.c0)))))AND(t0.c2)) FULL OUTER JOIN v0 ON ((((t0.c0)IS NOT(x'0d4b')))==(t0.c0)) WHERE (CASE ((NULL) NOTNULL)  WHEN (+ (t0.c1)) THEN ((-1808051461)IS NOT(t0.c0)) WHEN DATETIME(t0.c0, t0.c0, v0.c0, v0.c0, t0.c1) THEN t0.c0 COLLATE RTRIM WHEN CASE t0.c1  WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END THEN ((x'')AND(t0.c1)) ELSE v0.c0 COLLATE NOCASE END) ORDER BY json_patch(v0.c0 COLLATE RTRIM, ((vt0.c0) NOT BETWEEN (x'') AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE ((NULL) NOTNULL)  WHEN (+ (t0.c1)) THEN ((-1808051461)IS NOT(t0.c0)) WHEN DATETIME(t0.c0, t0.c0, v0.c0, v0.c0, t0.c1) THEN t0.c0 COLLATE RTRIM WHEN CASE t0.c1  WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END THEN ((x'')AND(t0.c1)) ELSE v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((((((v0.c0) NOT NULL))OR(CAST(t0.c2 AS BLOB))))OR((((t0.c1))<=((t0.c1))))))OR(((t0.c1)>=(v0.c0)))))AND(t0.c2)) FULL OUTER JOIN v0 ON ((((t0.c0)IS NOT(x'0d4b')))=(t0.c0)) ORDER BY json_patch(v0.c0 COLLATE RTRIM, ((vt0.c0) NOT BETWEEN (x'') AND (t0.c0))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((((((v0.c0) NOT NULL))OR(CAST(t0.c2 AS BLOB))))OR((((t0.c1))<=((t0.c1))))))OR(((t0.c1)>=(v0.c0)))))AND(t0.c2)) FULL OUTER JOIN v0 ON ((((t0.c0)IS NOT(x'0d4b')))==(t0.c0)) WHERE (CASE ((NULL) NOTNULL)  WHEN (+ (t0.c1)) THEN ((-1808051461)IS NOT(t0.c0)) WHEN DATETIME(t0.c0, t0.c0, v0.c0, v0.c0, t0.c1) THEN t0.c0 COLLATE RTRIM WHEN CASE t0.c1  WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END THEN ((x'')AND(t0.c1)) ELSE v0.c0 COLLATE NOCASE END) ORDER BY json_patch(v0.c0 COLLATE RTRIM, ((vt0.c0) NOT BETWEEN (x'') AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE ((NULL) NOTNULL)  WHEN (+ (t0.c1)) THEN ((-1808051461)IS NOT(t0.c0)) WHEN DATETIME(t0.c0, t0.c0, v0.c0, v0.c0, t0.c1) THEN t0.c0 COLLATE RTRIM WHEN CASE t0.c1  WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END THEN ((x'')AND(t0.c1)) ELSE v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((((((v0.c0) NOT NULL))OR(CAST(t0.c2 AS BLOB))))OR((((t0.c1))<=((t0.c1))))))OR(((t0.c1)>=(v0.c0)))))AND(t0.c2)) FULL OUTER JOIN v0 ON ((((t0.c0)IS NOT(x'0d4b')))=(t0.c0)) ORDER BY json_patch(v0.c0 COLLATE RTRIM, ((vt0.c0) NOT BETWEEN (x'') AND (t0.c0))));
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0) BETWEEN (t0.c1) AND (t0.c0))))<>((((((t0.c0)OR(t0.c1)))AND(t0.c2)))))) ORDER BY (~ ((t0.c0 IN (x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (t0.c1) AND (t0.c0))))<>((((((t0.c0)OR(t0.c1)))AND(t0.c2)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ ((t0.c0 IN (x''))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0) BETWEEN (t0.c1) AND (t0.c0))))<>((((((t0.c0)OR(t0.c1)))AND(t0.c2)))))) ORDER BY (~ ((t0.c0 IN (x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (t0.c1) AND (t0.c0))))<>((((((t0.c0)OR(t0.c1)))AND(t0.c2)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ ((t0.c0 IN (x''))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0) BETWEEN (t0.c1) AND (t0.c0))))<>((((((t0.c0)OR(t0.c1)))AND(t0.c2)))))) ORDER BY (~ ((t0.c0 IN (x''))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((t0.c0) BETWEEN (x'b7d44f3a') AND (t0.c0)))) AND ((TYPEOF(t0.c2))))) ORDER BY ((((CAST(vt0.c0 AS TEXT))OR((+ (vt0.c0)))))OR((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((t0.c0) BETWEEN (x'b7d44f3a') AND (t0.c0)))) AND ((TYPEOF(t0.c2))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((CAST(vt0.c0 AS TEXT))OR((+ (vt0.c0)))))OR((t0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((t0.c0) BETWEEN (x'b7d44f3a') AND (t0.c0)))) AND ((TYPEOF(t0.c2))))) ORDER BY ((((CAST(vt0.c0 AS TEXT))OR((+ (vt0.c0)))))OR((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((t0.c0) BETWEEN (x'b7d44f3a') AND (t0.c0)))) AND ((TYPEOF(t0.c2))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((CAST(vt0.c0 AS TEXT))OR((+ (vt0.c0)))))OR((t0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((t0.c0) BETWEEN (x'b7d44f3a') AND (t0.c0)))) AND ((TYPEOF(t0.c2))))) ORDER BY ((((CAST(vt0.c0 AS TEXT))OR((+ (vt0.c0)))))OR((t0.c0 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (TYPEOF(DISTINCT ((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))AND(t0.c0)))AND('-1094981087')))) ORDER BY (CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END IN ('-116782371')), ((t0.c1) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))AND(t0.c0)))AND('-1094981087')))) IS TRUE)  as count FROM t0, vt0 ORDER BY (CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END IN ('-116782371')), ((t0.c1) NOTNULL));
SELECT COUNT(*) FROM t0, vt0 WHERE (TYPEOF(DISTINCT ((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))AND(t0.c0)))AND('-1094981087')))) ORDER BY (CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END IN ('-116782371')), ((t0.c1) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))AND(t0.c0)))AND('-1094981087')))) IS TRUE)  as count FROM t0, vt0 ORDER BY (CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END IN ('-116782371')), ((t0.c1) NOTNULL));
SELECT COUNT(*) FROM t0, vt0 WHERE (TYPEOF(DISTINCT ((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))AND(t0.c0)))AND('-1094981087')))) ORDER BY (CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END IN ('-116782371')), ((t0.c1) NOTNULL);
SELECT ALL * FROM t0, vt0 WHERE (((NULL)LIKE(t0.c0))) ORDER BY CASE WHEN x'0d65' THEN ((((-1439968032)AND(t0.c2)))OR(t0.c1)) WHEN ((vt0.c0) BETWEEN ('-1774897616') AND (t0.c1)) THEN t0.c1 WHEN CAST(t0.c0 AS TEXT) THEN (t0.c1 IN ()) ELSE NULLIF(DISTINCT t0.c0, t0.c0) END, ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN (((t0.c1)GLOB(t0.c0))) AND (CASE t0.c1  WHEN t0.c1 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)LIKE(t0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN x'0d65' THEN ((((-1439968032)AND(t0.c2)))OR(t0.c1)) WHEN ((vt0.c0) BETWEEN ('-1774897616') AND (t0.c1)) THEN t0.c1 WHEN CAST(t0.c0 AS TEXT) THEN (t0.c1 IN ()) ELSE NULLIF(DISTINCT t0.c0, t0.c0) END, ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN (((t0.c1)GLOB(t0.c0))) AND (CASE t0.c1  WHEN t0.c1 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((NULL)LIKE(t0.c0))) ORDER BY CASE WHEN x'0d65' THEN ((((-1439968032)AND(t0.c2)))OR(t0.c1)) WHEN ((vt0.c0) BETWEEN ('-1774897616') AND (t0.c1)) THEN t0.c1 WHEN CAST(t0.c0 AS TEXT) THEN (t0.c1 IN ()) ELSE NULLIF(DISTINCT t0.c0, t0.c0) END, ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN (((t0.c1)GLOB(t0.c0))) AND (CASE t0.c1  WHEN t0.c1 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)LIKE(t0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN x'0d65' THEN ((((-1439968032)AND(t0.c2)))OR(t0.c1)) WHEN ((vt0.c0) BETWEEN ('-1774897616') AND (t0.c1)) THEN t0.c1 WHEN CAST(t0.c0 AS TEXT) THEN (t0.c1 IN ()) ELSE NULLIF(DISTINCT t0.c0, t0.c0) END, ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN (((t0.c1)GLOB(t0.c0))) AND (CASE t0.c1  WHEN t0.c1 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((NULL)LIKE(t0.c0))) ORDER BY CASE WHEN x'0d65' THEN ((((-1439968032)AND(t0.c2)))OR(t0.c1)) WHEN ((vt0.c0) BETWEEN ('-1774897616') AND (t0.c1)) THEN t0.c1 WHEN CAST(t0.c0 AS TEXT) THEN (t0.c1 IN ()) ELSE NULLIF(DISTINCT t0.c0, t0.c0) END, ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN (((t0.c1)GLOB(t0.c0))) AND (CASE t0.c1  WHEN t0.c1 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (UPPER(((vt0.c0) ISNULL))) ORDER BY CASE ((t0.c0)<=(t0.c1))  WHEN (~ (NULL)) THEN x'' COLLATE NOCASE ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt0.c0) ISNULL))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE ((t0.c0)<=(t0.c1))  WHEN (~ (NULL)) THEN x'' COLLATE NOCASE ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (UPPER(((vt0.c0) ISNULL))) ORDER BY CASE ((t0.c0)<=(t0.c1))  WHEN (~ (NULL)) THEN x'' COLLATE NOCASE ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt0.c0) ISNULL))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE ((t0.c0)<=(t0.c1))  WHEN (~ (NULL)) THEN x'' COLLATE NOCASE ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (UPPER(((vt0.c0) ISNULL))) ORDER BY CASE ((t0.c0)<=(t0.c1))  WHEN (~ (NULL)) THEN x'' COLLATE NOCASE ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)) IN ()) RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT v0.c0) COLLATE BINARY COLLATE RTRIM WHERE (t0.c2) ORDER BY (((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, t0.c2, vt0.c0)) AND ((vt0.c0, t0.c2, t0.c1)))) IS TRUE) DESC  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((CAST(t0.c1 AS TEXT))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE vt0.c0 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)) IN ()) RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT v0.c0) COLLATE BINARY COLLATE RTRIM ORDER BY (((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, t0.c2, vt0.c0)) AND ((vt0.c0, t0.c2, t0.c1)))) IS TRUE) DESC  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((CAST(t0.c1 AS TEXT))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE vt0.c0 END))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)) IN ()) RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT v0.c0) COLLATE BINARY COLLATE RTRIM WHERE (t0.c2) ORDER BY (((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, t0.c2, vt0.c0)) AND ((vt0.c0, t0.c2, t0.c1)))) IS TRUE) DESC  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((CAST(t0.c1 AS TEXT))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE vt0.c0 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)) IN ()) RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT v0.c0) COLLATE BINARY COLLATE RTRIM ORDER BY (((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, t0.c2, vt0.c0)) AND ((vt0.c0, t0.c2, t0.c1)))) IS TRUE) DESC  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((CAST(t0.c1 AS TEXT))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE vt0.c0 END))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)) IN ()) RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT v0.c0) COLLATE BINARY COLLATE RTRIM WHERE (t0.c2) ORDER BY (((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, t0.c2, vt0.c0)) AND ((vt0.c0, t0.c2, t0.c1)))) IS TRUE) DESC  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((CAST(t0.c1 AS TEXT))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE vt0.c0 END))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE ((v0.c0 COLLATE NOCASE IN ((v0.c0 IN ()), ((t0.c2)IS NOT(t0.c1))))) ORDER BY ((((v0.c0)-(t0.c2))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE NOCASE IN ((v0.c0 IN ()), ((t0.c2)IS NOT(t0.c1))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c0)-(t0.c2))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE ((v0.c0 COLLATE NOCASE IN ((v0.c0 IN ()), ((t0.c2)IS NOT(t0.c1))))) ORDER BY ((((v0.c0)-(t0.c2))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE NOCASE IN ((v0.c0 IN ()), ((t0.c2)IS NOT(t0.c1))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c0)-(t0.c2))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE ((v0.c0 COLLATE NOCASE IN ((v0.c0 IN ()), ((t0.c2)IS NOT(t0.c1))))) ORDER BY ((((v0.c0)-(t0.c2))) ISNULL)  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((0.8975633965847681) BETWEEN (((((v0.c0)OR(vt0.c0)))AND(v0.c0))) AND (((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((0.8975633965847681) BETWEEN (((((v0.c0)OR(vt0.c0)))AND(v0.c0))) AND (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((0.8975633965847681) BETWEEN (((((v0.c0)OR(vt0.c0)))AND(v0.c0))) AND (((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((0.8975633965847681) BETWEEN (((((v0.c0)OR(vt0.c0)))AND(v0.c0))) AND (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((0.8975633965847681) BETWEEN (((((v0.c0)OR(vt0.c0)))AND(v0.c0))) AND (((v0.c0) NOTNULL))));
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT * FROM v0, t0, vt0 WHERE (((((((t0.c2)OR(t0.c2)))AND(v0.c0))) IS FALSE)) ORDER BY ((((((((((vt0.c0)OR(t0.c2)))AND(v0.c0)))OR(t0.c1)))OR(t0.c0)))<>(x'ee6a')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)OR(t0.c2)))AND(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((((((vt0.c0)OR(t0.c2)))AND(v0.c0)))OR(t0.c1)))OR(t0.c0)))<>(x'ee6a')) DESC);
SELECT * FROM v0, t0, vt0 WHERE (((((((t0.c2)OR(t0.c2)))AND(v0.c0))) IS FALSE)) ORDER BY ((((((((((vt0.c0)OR(t0.c2)))AND(v0.c0)))OR(t0.c1)))OR(t0.c0)))<>(x'ee6a')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)OR(t0.c2)))AND(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((((((vt0.c0)OR(t0.c2)))AND(v0.c0)))OR(t0.c1)))OR(t0.c0)))<>(x'ee6a')) DESC);
SELECT * FROM v0, t0, vt0 WHERE (((((((t0.c2)OR(t0.c2)))AND(v0.c0))) IS FALSE)) ORDER BY ((((((((((vt0.c0)OR(t0.c2)))AND(v0.c0)))OR(t0.c1)))OR(t0.c0)))<>(x'ee6a')) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((+ (NULL)))>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (NULL)))>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (NULL)))>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (NULL)))>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (NULL)))>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM v0 WHERE (((((((((v0.c0 COLLATE NOCASE)OR(((v0.c0)>>(v0.c0)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.507568352356668))))))OR((v0.c0 IN ()))))OR((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0 COLLATE NOCASE)OR(((v0.c0)>>(v0.c0)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.507568352356668))))))OR((v0.c0 IN ()))))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((v0.c0 COLLATE NOCASE)OR(((v0.c0)>>(v0.c0)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.507568352356668))))))OR((v0.c0 IN ()))))OR((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0 COLLATE NOCASE)OR(((v0.c0)>>(v0.c0)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.507568352356668))))))OR((v0.c0 IN ()))))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((v0.c0 COLLATE NOCASE)OR(((v0.c0)>>(v0.c0)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.507568352356668))))))OR((v0.c0 IN ()))))OR((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM v0 WHERE (LTRIM(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, (((v0.c0))<=((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, (((v0.c0))<=((v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LTRIM(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, (((v0.c0))<=((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, (((v0.c0))<=((v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LTRIM(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, (((v0.c0))<=((v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((~ (t0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((~ (t0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((~ (t0.c2))) NOTNULL));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((t0.c2 IN ())) NOT NULL) FULL OUTER JOIN v0 ON (((((((t0.c0, t0.c1, t0.c0)) BETWEEN ((vt0.c0, NULL, x'')) AND ((t0.c0, t0.c2, NULL))))AND(NULL)))AND(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))) WHERE ((('-1913752302') NOT BETWEEN (((vt0.c0)+(t0.c2))) AND (((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((('-1913752302') NOT BETWEEN (((vt0.c0)+(t0.c2))) AND (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((t0.c2 IN ())) NOT NULL) FULL OUTER JOIN v0 ON (((((((t0.c0, t0.c1, t0.c0)) BETWEEN ((vt0.c0, NULL, x'')) AND ((t0.c0, t0.c2, NULL))))AND(NULL)))AND(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((t0.c2 IN ())) NOT NULL) FULL OUTER JOIN v0 ON (((((((t0.c0, t0.c1, t0.c0)) BETWEEN ((vt0.c0, NULL, x'')) AND ((t0.c0, t0.c2, NULL))))AND(NULL)))AND(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))) WHERE ((('-1913752302') NOT BETWEEN (((vt0.c0)+(t0.c2))) AND (((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((('-1913752302') NOT BETWEEN (((vt0.c0)+(t0.c2))) AND (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((t0.c2 IN ())) NOT NULL) FULL OUTER JOIN v0 ON (((((((t0.c0, t0.c1, t0.c0)) BETWEEN ((vt0.c0, NULL, x'')) AND ((t0.c0, t0.c2, NULL))))AND(NULL)))AND(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((t0.c2 IN ())) NOT NULL) FULL OUTER JOIN v0 ON (((((((t0.c0, t0.c1, t0.c0)) BETWEEN ((vt0.c0, NULL, x'')) AND ((t0.c0, t0.c2, NULL))))AND(NULL)))AND(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))) WHERE ((('-1913752302') NOT BETWEEN (((vt0.c0)+(t0.c2))) AND (((t0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)|(v0.c0)))>=(((v0.c0)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)|(v0.c0)))>=(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)|(v0.c0)))>=(((v0.c0)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)|(v0.c0)))>=(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)|(v0.c0)))>=(((v0.c0)OR(v0.c0)))));
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN v0 ON LOWER(DISTINCT CAST(t0.c2 AS REAL)) WHERE (CASE WHEN ((t0.c1) ISNULL) THEN (((t0.c2))!=((t0.c1))) ELSE CAST(t0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1) ISNULL) THEN (((t0.c2))!=((t0.c1))) ELSE CAST(t0.c1 AS TEXT) END) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON LOWER(DISTINCT CAST(t0.c2 AS REAL)));
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN v0 ON LOWER(DISTINCT CAST(t0.c2 AS REAL)) WHERE (CASE WHEN ((t0.c1) ISNULL) THEN (((t0.c2))!=((t0.c1))) ELSE CAST(t0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1) ISNULL) THEN (((t0.c2))!=((t0.c1))) ELSE CAST(t0.c1 AS TEXT) END) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON LOWER(DISTINCT CAST(t0.c2 AS REAL)));
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN v0 ON LOWER(DISTINCT CAST(t0.c2 AS REAL)) WHERE (CASE WHEN ((t0.c1) ISNULL) THEN (((t0.c2))!=((t0.c1))) ELSE CAST(t0.c1 AS TEXT) END);
SELECT ALL * FROM t0, vt0 WHERE (((CAST(vt0.c0 AS BLOB))>=(vt0.c0))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)) AS REAL) DESC  NULLS FIRST, ((CAST(t0.c0 AS REAL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))>=(vt0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)) AS REAL) DESC  NULLS FIRST, ((CAST(t0.c0 AS REAL)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((CAST(vt0.c0 AS BLOB))>=(vt0.c0))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)) AS REAL) DESC  NULLS FIRST, ((CAST(t0.c0 AS REAL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))>=(vt0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)) AS REAL) DESC  NULLS FIRST, ((CAST(t0.c0 AS REAL)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((CAST(vt0.c0 AS BLOB))>=(vt0.c0))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)) AS REAL) DESC  NULLS FIRST, ((CAST(t0.c0 AS REAL)) NOTNULL)  NULLS FIRST;
SELECT * FROM v0 WHERE (CAST(((x'')IS NOT(v0.c0)) AS NUMERIC)) ORDER BY LIKELY(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(((x'')IS NOT(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY LIKELY(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT * FROM v0 WHERE (CAST(((x'')IS NOT(v0.c0)) AS NUMERIC)) ORDER BY LIKELY(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(((x'')IS NOT(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY LIKELY(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT * FROM v0 WHERE (CAST(((x'')IS NOT(v0.c0)) AS NUMERIC)) ORDER BY LIKELY(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))));
SELECT * FROM vt0, t0, v0 WHERE ((~ ((((t0.c2)) BETWEEN ((v0.c0)) AND ((t0.c2)))))) ORDER BY LIKELY((vt0.c0 IN ())) ASC, json_quote(0.9124362149237688), ((((t0.c1)/(t0.c2))) BETWEEN (t0.c1) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c2)) BETWEEN ((v0.c0)) AND ((t0.c2)))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY LIKELY((vt0.c0 IN ())) ASC, json_quote(0.9124362149237688), ((((t0.c1)/(t0.c2))) BETWEEN (t0.c1) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT * FROM vt0, t0, v0 WHERE ((~ ((((t0.c2)) BETWEEN ((v0.c0)) AND ((t0.c2)))))) ORDER BY LIKELY((vt0.c0 IN ())) ASC, json_quote(0.9124362149237688), ((((t0.c1)/(t0.c2))) BETWEEN (t0.c1) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c2)) BETWEEN ((v0.c0)) AND ((t0.c2)))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY LIKELY((vt0.c0 IN ())) ASC, json_quote(0.9124362149237688), ((((t0.c1)/(t0.c2))) BETWEEN (t0.c1) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT * FROM vt0, t0, v0 WHERE ((~ ((((t0.c2)) BETWEEN ((v0.c0)) AND ((t0.c2)))))) ORDER BY LIKELY((vt0.c0 IN ())) ASC, json_quote(0.9124362149237688), ((((t0.c1)/(t0.c2))) BETWEEN (t0.c1) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (((x'')==(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')=(v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((x'')==(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')=(v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((x'')==(v0.c0)));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((((t0.c2)) BETWEEN ((v0.c0)) AND ((t0.c0))))IS NOT(((1.471739396E9)>=(NULL))))) ORDER BY (- (CAST(x'e12bc739' AS REAL)));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)) BETWEEN ((v0.c0)) AND ((t0.c0))))IS NOT(((1.471739396E9)>=(NULL))))) IS TRUE)  as count FROM v0, t0 ORDER BY (- (CAST(x'e12bc739' AS REAL))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((((t0.c2)) BETWEEN ((v0.c0)) AND ((t0.c0))))IS NOT(((1.471739396E9)>=(NULL))))) ORDER BY (- (CAST(x'e12bc739' AS REAL)));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)) BETWEEN ((v0.c0)) AND ((t0.c0))))IS NOT(((1.471739396E9)>=(NULL))))) IS TRUE)  as count FROM v0, t0 ORDER BY (- (CAST(x'e12bc739' AS REAL))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((((t0.c2)) BETWEEN ((v0.c0)) AND ((t0.c0))))IS NOT(((1.471739396E9)>=(NULL))))) ORDER BY (- (CAST(x'e12bc739' AS REAL)));
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c1, t0.c1, v0.c0)) BETWEEN ((t0.c1 COLLATE NOCASE, (v0.c0 IN (t0.c2)), (- (v0.c0)))) AND (((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), (- (t0.c0)), ((t0.c1) NOT BETWEEN (0xffffffff9d00dff1) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c1, v0.c0)) BETWEEN ((t0.c1 COLLATE NOCASE, (v0.c0 IN (t0.c2)), (- (v0.c0)))) AND (((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), (- (t0.c0)), ((t0.c1) NOT BETWEEN (0Xffffffff9d00dff1) AND (t0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c1, t0.c1, v0.c0)) BETWEEN ((t0.c1 COLLATE NOCASE, (v0.c0 IN (t0.c2)), (- (v0.c0)))) AND (((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), (- (t0.c0)), ((t0.c1) NOT BETWEEN (0xffffffff9d00dff1) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c1, v0.c0)) BETWEEN ((t0.c1 COLLATE NOCASE, (v0.c0 IN (t0.c2)), (- (v0.c0)))) AND (((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), (- (t0.c0)), ((t0.c1) NOT BETWEEN (0Xffffffff9d00dff1) AND (t0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c1, t0.c1, v0.c0)) BETWEEN ((t0.c1 COLLATE NOCASE, (v0.c0 IN (t0.c2)), (- (v0.c0)))) AND (((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), (- (t0.c0)), ((t0.c1) NOT BETWEEN (0xffffffff9d00dff1) AND (t0.c0))))));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((((t0.c1 COLLATE NOCASE)AND(v0.c0 COLLATE RTRIM)))AND(CASE t0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c1 END))) ORDER BY ((((vt0.c0)GLOB(v0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c1 COLLATE NOCASE)AND(v0.c0 COLLATE RTRIM)))AND(CASE t0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c1 END))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((vt0.c0)GLOB(v0.c0))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((((t0.c1 COLLATE NOCASE)AND(v0.c0 COLLATE RTRIM)))AND(CASE t0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c1 END))) ORDER BY ((((vt0.c0)GLOB(v0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c1 COLLATE NOCASE)AND(v0.c0 COLLATE RTRIM)))AND(CASE t0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c1 END))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((vt0.c0)GLOB(v0.c0))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((((t0.c1 COLLATE NOCASE)AND(v0.c0 COLLATE RTRIM)))AND(CASE t0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c1 END))) ORDER BY ((((vt0.c0)GLOB(v0.c0))) NOTNULL)  NULLS LAST;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CAST(((((((((t0.c0)AND(t0.c1)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS TEXT) INNER JOIN v0 ON ((((t0.c1)||(t0.c0))) IS FALSE) WHERE (((((v0.c0)%(vt0.c0))) NOT BETWEEN ((+ (v0.c0))) AND (((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))) ORDER BY LIKELY(((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(vt0.c0))) NOT BETWEEN ((+ (v0.c0))) AND (((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CAST(((((((((t0.c0)AND(t0.c1)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS TEXT) INNER JOIN v0 ON ((((t0.c1)||(t0.c0))) IS FALSE) ORDER BY LIKELY(((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CAST(((((((((t0.c0)AND(t0.c1)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS TEXT) INNER JOIN v0 ON ((((t0.c1)||(t0.c0))) IS FALSE) WHERE (((((v0.c0)%(vt0.c0))) NOT BETWEEN ((+ (v0.c0))) AND (((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))) ORDER BY LIKELY(((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(vt0.c0))) NOT BETWEEN ((+ (v0.c0))) AND (((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CAST(((((((((t0.c0)AND(t0.c1)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS TEXT) INNER JOIN v0 ON ((((t0.c1)||(t0.c0))) IS FALSE) ORDER BY LIKELY(((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CAST(((((((((t0.c0)AND(t0.c1)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS TEXT) INNER JOIN v0 ON ((((t0.c1)||(t0.c0))) IS FALSE) WHERE (((((v0.c0)%(vt0.c0))) NOT BETWEEN ((+ (v0.c0))) AND (((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))) ORDER BY LIKELY(((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))  NULLS LAST;
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(v0.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 ORDER BY v0.c0);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(v0.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 ORDER BY v0.c0);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(v0.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY v0.c0;
SELECT ALL * FROM t0 WHERE ((('') NOT NULL) COLLATE BINARY) ORDER BY ((CASE t0.c1  WHEN t0.c1 THEN t0.c2 ELSE '' END)*(load_extension(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c1  WHEN t0.c1 THEN t0.c2 ELSE '' END)*(load_extension(t0.c0))));
SELECT ALL * FROM t0 WHERE ((('') NOT NULL) COLLATE BINARY) ORDER BY ((CASE t0.c1  WHEN t0.c1 THEN t0.c2 ELSE '' END)*(load_extension(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c1  WHEN t0.c1 THEN t0.c2 ELSE '' END)*(load_extension(t0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(x'')))/(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(x'')))/(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(x'')))/(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(x'')))/(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(x'')))/(vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)=(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)=(t0.c1)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)=(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)=(t0.c1)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)=(t0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON t0.c0 INNER JOIN v0 ON (((((((((t0.c2)AND(t0.c2)))OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)) IN ()) WHERE (v0.c0) ORDER BY CASE ((v0.c0)>(t0.c1))  WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))) THEN ((((((((((((t0.c0)OR(t0.c1)))OR(vt0.c0)))OR(v0.c0)))AND(t0.c2)))OR(t0.c2)))AND(t0.c1)) ELSE CAST(t0.c0 AS BLOB) END ASC  NULLS LAST, (NULL IN (((vt0.c0)<(vt0.c0)), json_type(NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON t0.c0 INNER JOIN v0 ON (((((((((t0.c2)AND(t0.c2)))OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)) IN ()) ORDER BY CASE ((v0.c0)>(t0.c1))  WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))) THEN ((((((((((((t0.c0)OR(t0.c1)))OR(vt0.c0)))OR(v0.c0)))AND(t0.c2)))OR(t0.c2)))AND(t0.c1)) ELSE CAST(t0.c0 AS BLOB) END ASC  NULLS LAST, (NULL IN (((vt0.c0)<(vt0.c0)), json_type(NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON t0.c0 INNER JOIN v0 ON (((((((((t0.c2)AND(t0.c2)))OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)) IN ()) WHERE (v0.c0) ORDER BY CASE ((v0.c0)>(t0.c1))  WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))) THEN ((((((((((((t0.c0)OR(t0.c1)))OR(vt0.c0)))OR(v0.c0)))AND(t0.c2)))OR(t0.c2)))AND(t0.c1)) ELSE CAST(t0.c0 AS BLOB) END ASC  NULLS LAST, (NULL IN (((vt0.c0)<(vt0.c0)), json_type(NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON t0.c0 INNER JOIN v0 ON (((((((((t0.c2)AND(t0.c2)))OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)) IN ()) ORDER BY CASE ((v0.c0)>(t0.c1))  WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))) THEN ((((((((((((t0.c0)OR(t0.c1)))OR(vt0.c0)))OR(v0.c0)))AND(t0.c2)))OR(t0.c2)))AND(t0.c1)) ELSE CAST(t0.c0 AS BLOB) END ASC  NULLS LAST, (NULL IN (((vt0.c0)<(vt0.c0)), json_type(NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON t0.c0 INNER JOIN v0 ON (((((((((t0.c2)AND(t0.c2)))OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)) IN ()) WHERE (v0.c0) ORDER BY CASE ((v0.c0)>(t0.c1))  WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))) THEN ((((((((((((t0.c0)OR(t0.c1)))OR(vt0.c0)))OR(v0.c0)))AND(t0.c2)))OR(t0.c2)))AND(t0.c1)) ELSE CAST(t0.c0 AS BLOB) END ASC  NULLS LAST, (NULL IN (((vt0.c0)<(vt0.c0)), json_type(NULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c2)) BETWEEN ((((((t0.c0)AND(t0.c1)))OR(t0.c2)))) AND ((CAST(t0.c2 AS NUMERIC))))) ORDER BY ((((((t0.c1) NOTNULL))AND(((v0.c0)>=(t0.c1)))))OR(((t0.c1) NOT NULL))) DESC  NULLS LAST, CASE v0.c0  WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c2)) BETWEEN ((((((t0.c0)AND(t0.c1)))OR(t0.c2)))) AND ((CAST(t0.c2 AS NUMERIC))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((t0.c1) NOTNULL))AND(((v0.c0)>=(t0.c1)))))OR(((t0.c1) NOT NULL))) DESC  NULLS LAST, CASE v0.c0  WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c2)) BETWEEN ((((((t0.c0)AND(t0.c1)))OR(t0.c2)))) AND ((CAST(t0.c2 AS NUMERIC))))) ORDER BY ((((((t0.c1) NOTNULL))AND(((v0.c0)>=(t0.c1)))))OR(((t0.c1) NOT NULL))) DESC  NULLS LAST, CASE v0.c0  WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c2)) BETWEEN ((((((t0.c0)AND(t0.c1)))OR(t0.c2)))) AND ((CAST(t0.c2 AS NUMERIC))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((t0.c1) NOTNULL))AND(((v0.c0)>=(t0.c1)))))OR(((t0.c1) NOT NULL))) DESC  NULLS LAST, CASE v0.c0  WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c2)) BETWEEN ((((((t0.c0)AND(t0.c1)))OR(t0.c2)))) AND ((CAST(t0.c2 AS NUMERIC))))) ORDER BY ((((((t0.c1) NOTNULL))AND(((v0.c0)>=(t0.c1)))))OR(((t0.c1) NOT NULL))) DESC  NULLS LAST, CASE v0.c0  WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON t0.c2 WHERE (CASE WHEN (t0.c0 IN ()) THEN t0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN ()) THEN t0.c2 END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON t0.c2);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON t0.c2 WHERE (CASE WHEN (t0.c0 IN ()) THEN t0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN ()) THEN t0.c2 END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON t0.c2);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON t0.c2 WHERE (CASE WHEN (t0.c0 IN ()) THEN t0.c2 END);
SELECT * FROM t0, v0, vt0 WHERE (((((t0.c0)<(t0.c2))) IS TRUE)) ORDER BY CASE WHEN t0.c2 COLLATE BINARY THEN ((t0.c2) ISNULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<(t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE WHEN t0.c2 COLLATE BINARY THEN ((t0.c2) ISNULL) END ASC  NULLS LAST);
SELECT * FROM t0, v0, vt0 WHERE (((((t0.c0)<(t0.c2))) IS TRUE)) ORDER BY CASE WHEN t0.c2 COLLATE BINARY THEN ((t0.c2) ISNULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<(t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE WHEN t0.c2 COLLATE BINARY THEN ((t0.c2) ISNULL) END ASC  NULLS LAST);
SELECT * FROM t0, v0, vt0 WHERE (((((t0.c0)<(t0.c2))) IS TRUE)) ORDER BY CASE WHEN t0.c2 COLLATE BINARY THEN ((t0.c2) ISNULL) END ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c1)IS(t0.c2)) AS TEXT)) ORDER BY CASE WHEN t0.c2 THEN (t0.c1 IN ()) ELSE CAST(t0.c1 AS INTEGER) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)IS(t0.c2)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c2 THEN (t0.c1 IN ()) ELSE CAST(t0.c1 AS INTEGER) END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c1)IS(t0.c2)) AS TEXT)) ORDER BY CASE WHEN t0.c2 THEN (t0.c1 IN ()) ELSE CAST(t0.c1 AS INTEGER) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)IS(t0.c2)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c2 THEN (t0.c1 IN ()) ELSE CAST(t0.c1 AS INTEGER) END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c1)IS(t0.c2)) AS TEXT)) ORDER BY CASE WHEN t0.c2 THEN (t0.c1 IN ()) ELSE CAST(t0.c1 AS INTEGER) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (NOT (vt0.c0)) COLLATE RTRIM COLLATE BINARY WHERE (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) ORDER BY ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND (('F''j6?', vt0.c0, vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (NOT (vt0.c0)) COLLATE RTRIM COLLATE BINARY ORDER BY ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND (('F''j6?', vt0.c0, vt0.c0))) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (NOT (vt0.c0)) COLLATE RTRIM COLLATE BINARY WHERE (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) ORDER BY ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND (('F''j6?', vt0.c0, vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (NOT (vt0.c0)) COLLATE RTRIM COLLATE BINARY ORDER BY ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND (('F''j6?', vt0.c0, vt0.c0))) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (NOT (vt0.c0)) COLLATE RTRIM COLLATE BINARY WHERE (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) ORDER BY ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND (('F''j6?', vt0.c0, vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ('') ORDER BY CASE (('1926772444') BETWEEN (t0.c1) AND (t0.c2))  WHEN ((t0.c2)/(t0.c2)) THEN ((t0.c1) IS TRUE) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) THEN CASE t0.c0  WHEN t0.c2 THEN '1318911387' ELSE t0.c0 END WHEN ((NULL)+(t0.c1)) THEN CASE WHEN x'' THEN t0.c1 END WHEN 0Xffffffffdc00e1d6 THEN ((((((((t0.c2)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c1)) WHEN (((t0.c1))<=((t0.c2))) THEN ((t0.c0)%(t0.c2)) ELSE (+ (0.12035323657201946)) END, ((((t0.c2)-(t0.c0)))IS(t0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 ORDER BY CASE (('1926772444') BETWEEN (t0.c1) AND (t0.c2))  WHEN ((t0.c2)/(t0.c2)) THEN ((t0.c1) IS TRUE) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) THEN CASE t0.c0  WHEN t0.c2 THEN '1318911387' ELSE t0.c0 END WHEN ((NULL)+(t0.c1)) THEN CASE WHEN x'' THEN t0.c1 END WHEN 0Xffffffffdc00e1d6 THEN ((((((((t0.c2)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c1)) WHEN (((t0.c1))<=((t0.c2))) THEN ((t0.c0)%(t0.c2)) ELSE (+ (0.12035323657201946)) END, ((((t0.c2)-(t0.c0)))IS(t0.c2))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ('') ORDER BY CASE (('1926772444') BETWEEN (t0.c1) AND (t0.c2))  WHEN ((t0.c2)/(t0.c2)) THEN ((t0.c1) IS TRUE) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) THEN CASE t0.c0  WHEN t0.c2 THEN '1318911387' ELSE t0.c0 END WHEN ((NULL)+(t0.c1)) THEN CASE WHEN x'' THEN t0.c1 END WHEN 0Xffffffffdc00e1d6 THEN ((((((((t0.c2)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c1)) WHEN (((t0.c1))<=((t0.c2))) THEN ((t0.c0)%(t0.c2)) ELSE (+ (0.12035323657201946)) END, ((((t0.c2)-(t0.c0)))IS(t0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 ORDER BY CASE (('1926772444') BETWEEN (t0.c1) AND (t0.c2))  WHEN ((t0.c2)/(t0.c2)) THEN ((t0.c1) IS TRUE) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) THEN CASE t0.c0  WHEN t0.c2 THEN '1318911387' ELSE t0.c0 END WHEN ((NULL)+(t0.c1)) THEN CASE WHEN x'' THEN t0.c1 END WHEN 0Xffffffffdc00e1d6 THEN ((((((((t0.c2)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c1)) WHEN (((t0.c1))<=((t0.c2))) THEN ((t0.c0)%(t0.c2)) ELSE (+ (0.12035323657201946)) END, ((((t0.c2)-(t0.c0)))IS(t0.c2))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ('') ORDER BY CASE (('1926772444') BETWEEN (t0.c1) AND (t0.c2))  WHEN ((t0.c2)/(t0.c2)) THEN ((t0.c1) IS TRUE) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) THEN CASE t0.c0  WHEN t0.c2 THEN '1318911387' ELSE t0.c0 END WHEN ((NULL)+(t0.c1)) THEN CASE WHEN x'' THEN t0.c1 END WHEN 0Xffffffffdc00e1d6 THEN ((((((((t0.c2)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c1)) WHEN (((t0.c1))<=((t0.c2))) THEN ((t0.c0)%(t0.c2)) ELSE (+ (0.12035323657201946)) END, ((((t0.c2)-(t0.c0)))IS(t0.c2))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((((t0.c0) IS FALSE)) BETWEEN ((NOT (t0.c0))) AND (((t0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE)) BETWEEN ((NOT (t0.c0))) AND (((t0.c2) NOT NULL)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((((t0.c0) IS FALSE)) BETWEEN ((NOT (t0.c0))) AND (((t0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE)) BETWEEN ((NOT (t0.c0))) AND (((t0.c2) NOT NULL)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((((t0.c0) IS FALSE)) BETWEEN ((NOT (t0.c0))) AND (((t0.c2) NOT NULL))));
SELECT COUNT(*) FROM t0, v0 INDEXED BY i2 WHERE ((((((((t0.c1))>=((t0.c0))))OR(CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END)))AND(t0.c1)));
SELECT SUM(count) FROM (SELECT (((((((((t0.c1))>=((t0.c0))))OR(CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END)))AND(t0.c1))) IS TRUE)  as count FROM t0, v0 INDEXED BY i2);
SELECT COUNT(*) FROM t0, v0 INDEXED BY i2 WHERE ((((((((t0.c1))>=((t0.c0))))OR(CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END)))AND(t0.c1)));
SELECT SUM(count) FROM (SELECT (((((((((t0.c1))>=((t0.c0))))OR(CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END)))AND(t0.c1))) IS TRUE)  as count FROM t0, v0 INDEXED BY i2);
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON '1125003213' WHERE (((vt0.c0) BETWEEN (((t0.c2)+(v0.c0))) AND ((NOT ('#')))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((t0.c2)+(v0.c0))) AND ((NOT ('#'))))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON '1125003213');
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON '1125003213' WHERE (((vt0.c0) BETWEEN (((t0.c2)+(v0.c0))) AND ((NOT ('#')))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((t0.c2)+(v0.c0))) AND ((NOT ('#'))))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON '1125003213');
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON '1125003213' WHERE (((vt0.c0) BETWEEN (((t0.c2)+(v0.c0))) AND ((NOT ('#')))));
SELECT * FROM t0, v0 NATURAL JOIN vt0 WHERE ((((~ (t0.c2))) NOTNULL)) ORDER BY CASE CASE 'N6'  WHEN t0.c2 THEN t0.c0 END  WHEN ((v0.c0)>(v0.c0)) THEN x'' COLLATE NOCASE ELSE (+ (0.6184508867235705)) END, CASE CAST(vt0.c0 AS REAL)  WHEN DATE(t0.c1, t0.c2, t0.c2) THEN ((((((((v0.c0)OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)) ELSE (t0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c2))) NOTNULL)) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt0 ORDER BY CASE CASE 'N6'  WHEN t0.c2 THEN t0.c0 END  WHEN ((v0.c0)>(v0.c0)) THEN x'' COLLATE NOCASE ELSE (+ (0.6184508867235705)) END, CASE CAST(vt0.c0 AS REAL)  WHEN DATE(t0.c1, t0.c2, t0.c2) THEN ((((((((v0.c0)OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)) ELSE (t0.c0 IN ()) END  NULLS FIRST);
SELECT * FROM t0, v0 NATURAL JOIN vt0 WHERE ((((~ (t0.c2))) NOTNULL)) ORDER BY CASE CASE 'N6'  WHEN t0.c2 THEN t0.c0 END  WHEN ((v0.c0)>(v0.c0)) THEN x'' COLLATE NOCASE ELSE (+ (0.6184508867235705)) END, CASE CAST(vt0.c0 AS REAL)  WHEN DATE(t0.c1, t0.c2, t0.c2) THEN ((((((((v0.c0)OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)) ELSE (t0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c2))) NOTNULL)) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt0 ORDER BY CASE CASE 'N6'  WHEN t0.c2 THEN t0.c0 END  WHEN ((v0.c0)>(v0.c0)) THEN x'' COLLATE NOCASE ELSE (+ (0.6184508867235705)) END, CASE CAST(vt0.c0 AS REAL)  WHEN DATE(t0.c1, t0.c2, t0.c2) THEN ((((((((v0.c0)OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)) ELSE (t0.c0 IN ()) END  NULLS FIRST);
SELECT * FROM t0, v0 NATURAL JOIN vt0 WHERE ((((~ (t0.c2))) NOTNULL)) ORDER BY CASE CASE 'N6'  WHEN t0.c2 THEN t0.c0 END  WHEN ((v0.c0)>(v0.c0)) THEN x'' COLLATE NOCASE ELSE (+ (0.6184508867235705)) END, CASE CAST(vt0.c0 AS REAL)  WHEN DATE(t0.c1, t0.c2, t0.c2) THEN ((((((((v0.c0)OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)) ELSE (t0.c0 IN ()) END  NULLS FIRST;
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE (t0.c0) ORDER BY ((((v0.c0)AND(t0.c2)))OR(v0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY ((((v0.c0)AND(t0.c2)))OR(v0.c0)) COLLATE RTRIM DESC);
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE (t0.c0) ORDER BY ((((v0.c0)AND(t0.c2)))OR(v0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY ((((v0.c0)AND(t0.c2)))OR(v0.c0)) COLLATE RTRIM DESC);
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE (t0.c0) ORDER BY ((((v0.c0)AND(t0.c2)))OR(v0.c0)) COLLATE RTRIM DESC;
SELECT ALL * FROM vt0, t0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))>=(((0.6502613442919779) BETWEEN (t0.c2) AND (v0.c0))))) ORDER BY t0.c0 DESC  NULLS LAST, (NOT (CASE WHEN v0.c0 THEN t0.c1 ELSE t0.c2 END)), ((COALESCE(DISTINCT t0.c2, t0.c0, vt0.c0, t0.c0)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))>=(((0.6502613442919779) BETWEEN (t0.c2) AND (v0.c0))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY t0.c0 DESC  NULLS LAST, (NOT (CASE WHEN v0.c0 THEN t0.c1 ELSE t0.c2 END)), ((COALESCE(DISTINCT t0.c2, t0.c0, vt0.c0, t0.c0)) ISNULL));
SELECT ALL * FROM vt0, t0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))>=(((0.6502613442919779) BETWEEN (t0.c2) AND (v0.c0))))) ORDER BY t0.c0 DESC  NULLS LAST, (NOT (CASE WHEN v0.c0 THEN t0.c1 ELSE t0.c2 END)), ((COALESCE(DISTINCT t0.c2, t0.c0, vt0.c0, t0.c0)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))>=(((0.6502613442919779) BETWEEN (t0.c2) AND (v0.c0))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY t0.c0 DESC  NULLS LAST, (NOT (CASE WHEN v0.c0 THEN t0.c1 ELSE t0.c2 END)), ((COALESCE(DISTINCT t0.c2, t0.c0, vt0.c0, t0.c0)) ISNULL));
SELECT ALL * FROM vt0, t0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))>=(((0.6502613442919779) BETWEEN (t0.c2) AND (v0.c0))))) ORDER BY t0.c0 DESC  NULLS LAST, (NOT (CASE WHEN v0.c0 THEN t0.c1 ELSE t0.c2 END)), ((COALESCE(DISTINCT t0.c2, t0.c0, vt0.c0, t0.c0)) ISNULL);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((v0.c0) NOTNULL) WHEN (v0.c0 IN ('-932322576')) THEN ((v0.c0)/(v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) END DESC  NULLS FIRST, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY  NULLS LAST, (((- (-832243091))) NOT BETWEEN (CASE WHEN v0.c0 THEN 0.6787309904309841 END) AND (((v0.c0)<=(NULL))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((v0.c0) NOTNULL) WHEN (v0.c0 IN ('-932322576')) THEN ((v0.c0)/(v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) END DESC  NULLS FIRST, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY  NULLS LAST, (((- (-832243091))) NOT BETWEEN (CASE WHEN v0.c0 THEN 0.6787309904309841 END) AND (((v0.c0)<=(NULL)))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((v0.c0) NOTNULL) WHEN (v0.c0 IN ('-932322576')) THEN ((v0.c0)/(v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) END DESC  NULLS FIRST, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY  NULLS LAST, (((- (-832243091))) NOT BETWEEN (CASE WHEN v0.c0 THEN 0.6787309904309841 END) AND (((v0.c0)<=(NULL))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((v0.c0) NOTNULL) WHEN (v0.c0 IN ('-932322576')) THEN ((v0.c0)/(v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) END DESC  NULLS FIRST, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY  NULLS LAST, (((- (-832243091))) NOT BETWEEN (CASE WHEN v0.c0 THEN 0.6787309904309841 END) AND (((v0.c0)<=(NULL)))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((v0.c0) NOTNULL) WHEN (v0.c0 IN ('-932322576')) THEN ((v0.c0)/(v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) END DESC  NULLS FIRST, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY  NULLS LAST, (((- (-832243091))) NOT BETWEEN (CASE WHEN v0.c0 THEN 0.6787309904309841 END) AND (((v0.c0)<=(NULL))));
SELECT ALL COUNT(*) FROM t0 INDEXED BY i2, v0, vt0 WHERE (1693729598);
SELECT SUM(count) FROM (SELECT ALL ((1693729598) IS TRUE)  as count FROM t0 INDEXED BY i2, v0, vt0);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i2, v0, vt0 WHERE (1693729598);
SELECT SUM(count) FROM (SELECT ALL ((1693729598) IS TRUE)  as count FROM t0 INDEXED BY i2, v0, vt0);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i2, v0, vt0 WHERE (1693729598);
SELECT ALL COUNT(*) FROM t0 WHERE (((UNLIKELY(DISTINCT t0.c1)) BETWEEN ((t0.c0 IN ())) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT t0.c1)) BETWEEN ((t0.c0 IN ())) AND (x''))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((UNLIKELY(DISTINCT t0.c1)) BETWEEN ((t0.c0 IN ())) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT t0.c1)) BETWEEN ((t0.c0 IN ())) AND (x''))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((UNLIKELY(DISTINCT t0.c1)) BETWEEN ((t0.c0 IN ())) AND (x'')));
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND (((((v0.c0))>=((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND (((((v0.c0))>=((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND (((((v0.c0))>=((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND (((((v0.c0))>=((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND (((((v0.c0))>=((v0.c0)))))));
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_SOURCE_ID());
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((~ (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((~ (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((~ (v0.c0 COLLATE NOCASE)));
SELECT ALL * FROM v0, vt0 WHERE (ABS(vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((ABS(vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (ABS(vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((ABS(vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (ABS(vt0.c0) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((811086855) NOTNULL)) NOTNULL) WHERE ((((((t0.c0)) BETWEEN ((t0.c1)) AND (('-1766170270'))))*(t0.c1)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((t0.c1)) AND (('-1766170270'))))*(t0.c1))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((811086855) NOTNULL)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((811086855) NOTNULL)) NOTNULL) WHERE ((((((t0.c0)) BETWEEN ((t0.c1)) AND (('-1766170270'))))*(t0.c1)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((t0.c1)) AND (('-1766170270'))))*(t0.c1))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((811086855) NOTNULL)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((811086855) NOTNULL)) NOTNULL) WHERE ((((((t0.c0)) BETWEEN ((t0.c1)) AND (('-1766170270'))))*(t0.c1)));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((~ (t0.c1))) NOT NULL) WHERE (((((((0.8831857828740096)GLOB(t0.c0)))OR(CAST(t0.c2 AS TEXT))))OR((vt0.c0 IN ())))) ORDER BY ((+ (0.34287184003465987)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.8831857828740096)GLOB(t0.c0)))OR(CAST(t0.c2 AS TEXT))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((~ (t0.c1))) NOT NULL) ORDER BY ((+ (0.34287184003465987)) IN ()) ASC);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((~ (t0.c1))) NOT NULL) WHERE (((((((0.8831857828740096)GLOB(t0.c0)))OR(CAST(t0.c2 AS TEXT))))OR((vt0.c0 IN ())))) ORDER BY ((+ (0.34287184003465987)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.8831857828740096)GLOB(t0.c0)))OR(CAST(t0.c2 AS TEXT))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((~ (t0.c1))) NOT NULL) ORDER BY ((+ (0.34287184003465987)) IN ()) ASC);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((~ (t0.c1))) NOT NULL) WHERE (((((((0.8831857828740096)GLOB(t0.c0)))OR(CAST(t0.c2 AS TEXT))))OR((vt0.c0 IN ())))) ORDER BY ((+ (0.34287184003465987)) IN ()) ASC;
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((t0.c1) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN ((~ (NULL))) AND ((t0.c2 IN ())))) ORDER BY ((('JlmKг+?퇀' IN ()))<>(2.97144798E8));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN ((~ (NULL))) AND ((t0.c2 IN ())))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((('JlmKг+?퇀' IN ()))<>(2.97144798E8)));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((t0.c1) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN ((~ (NULL))) AND ((t0.c2 IN ())))) ORDER BY ((('JlmKг+?퇀' IN ()))<>(2.97144798E8));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN ((~ (NULL))) AND ((t0.c2 IN ())))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((('JlmKг+?퇀' IN ()))<>(2.97144798E8)));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((t0.c1) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN ((~ (NULL))) AND ((t0.c2 IN ())))) ORDER BY ((('JlmKг+?퇀' IN ()))<>(2.97144798E8));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS BLOB));
SELECT * FROM vt0, t0 WHERE (NULL) ORDER BY (- (((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((vt0.c0) NOT NULL))) ASC);
SELECT * FROM vt0, t0 WHERE (NULL) ORDER BY (- (((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((vt0.c0) NOT NULL))) ASC);
SELECT * FROM vt0, t0 WHERE (NULL) ORDER BY (- (((vt0.c0) NOT NULL))) ASC;
SELECT * FROM v0, t0 LEFT OUTER JOIN vt0 ON x'' COLLATE RTRIM WHERE (((CAST(t0.c1 AS INTEGER))-(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))))) ORDER BY 0.26290218239461804  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS INTEGER))-(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN vt0 ON x'' COLLATE RTRIM ORDER BY 0.26290218239461804  NULLS FIRST);
SELECT * FROM v0, t0 LEFT OUTER JOIN vt0 ON x'' COLLATE RTRIM WHERE (((CAST(t0.c1 AS INTEGER))-(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))))) ORDER BY 0.26290218239461804  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS INTEGER))-(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN vt0 ON x'' COLLATE RTRIM ORDER BY 0.26290218239461804  NULLS FIRST);
SELECT * FROM v0, t0 LEFT OUTER JOIN vt0 ON x'' COLLATE RTRIM WHERE (((CAST(t0.c1 AS INTEGER))-(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))))) ORDER BY 0.26290218239461804  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON vt0.c0 CROSS JOIN v0 ON (NULL IN (((v0.c0)LIKE(t0.c2)))) WHERE (((((v0.c0) IS FALSE)) BETWEEN (((t0.c0) IS TRUE)) AND (t0.c0))) ORDER BY CAST(LIKELY(DISTINCT t0.c1) AS BLOB) ASC, ((0.18941367313452806)GLOB(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE)) BETWEEN (((t0.c0) IS TRUE)) AND (t0.c0))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON vt0.c0 CROSS JOIN v0 ON (NULL IN (((v0.c0)LIKE(t0.c2)))) ORDER BY CAST(LIKELY(DISTINCT t0.c1) AS BLOB) ASC, ((0.18941367313452806)GLOB(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON vt0.c0 CROSS JOIN v0 ON (NULL IN (((v0.c0)LIKE(t0.c2)))) WHERE (((((v0.c0) IS FALSE)) BETWEEN (((t0.c0) IS TRUE)) AND (t0.c0))) ORDER BY CAST(LIKELY(DISTINCT t0.c1) AS BLOB) ASC, ((0.18941367313452806)GLOB(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE)) BETWEEN (((t0.c0) IS TRUE)) AND (t0.c0))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON vt0.c0 CROSS JOIN v0 ON (NULL IN (((v0.c0)LIKE(t0.c2)))) ORDER BY CAST(LIKELY(DISTINCT t0.c1) AS BLOB) ASC, ((0.18941367313452806)GLOB(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON vt0.c0 CROSS JOIN v0 ON (NULL IN (((v0.c0)LIKE(t0.c2)))) WHERE (((((v0.c0) IS FALSE)) BETWEEN (((t0.c0) IS TRUE)) AND (t0.c0))) ORDER BY CAST(LIKELY(DISTINCT t0.c1) AS BLOB) ASC, ((0.18941367313452806)GLOB(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((TRIM(v0.c0))=(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(v0.c0))=(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((TRIM(v0.c0))=(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(v0.c0))=(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((TRIM(v0.c0))=(v0.c0)));
SELECT * FROM v0, vt0, t0 WHERE (((NULL COLLATE NOCASE) BETWEEN (v0.c0) AND ((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE NOCASE) BETWEEN (v0.c0) AND ((NOT (t0.c2))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (((NULL COLLATE NOCASE) BETWEEN (v0.c0) AND ((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE NOCASE) BETWEEN (v0.c0) AND ((NOT (t0.c2))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (((NULL COLLATE NOCASE) BETWEEN (v0.c0) AND ((NOT (t0.c2)))));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS TEXT));
SELECT ALL COUNT(*) FROM v0 WHERE ('-1082688121') ORDER BY (((NOT (NULL)))*((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1082688121') IS TRUE)  as count FROM v0 ORDER BY (((NOT (NULL)))*((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ('-1082688121') ORDER BY (((NOT (NULL)))*((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1082688121') IS TRUE)  as count FROM v0 ORDER BY (((NOT (NULL)))*((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ('-1082688121') ORDER BY (((NOT (NULL)))*((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))))  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE ((((t0.c0)AND(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0)AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c0)AND(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0)AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c0)AND(t0.c0)) IN ()));
SELECT * FROM t0, v0, vt0 WHERE (CASE (~ (t0.c0))  WHEN ((vt0.c0)||(vt0.c0)) THEN CHANGES() ELSE 0.1760684268323135 END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (t0.c0))  WHEN ((vt0.c0)||(vt0.c0)) THEN CHANGES() ELSE 0.1760684268323135 END) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE (CASE (~ (t0.c0))  WHEN ((vt0.c0)||(vt0.c0)) THEN CHANGES() ELSE 0.1760684268323135 END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (t0.c0))  WHEN ((vt0.c0)||(vt0.c0)) THEN CHANGES() ELSE 0.1760684268323135 END) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE (CASE (~ (t0.c0))  WHEN ((vt0.c0)||(vt0.c0)) THEN CHANGES() ELSE 0.1760684268323135 END);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c2))>=((t0.c1))))%(CAST(vt0.c0 AS TEXT)))) ORDER BY ((((vt0.c0)LIKE(t0.c0))) ISNULL) ASC, ((((t0.c2) NOTNULL))LIKE((((('-1207077611')OR(t0.c1)))OR(t0.c2)))) ASC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))+(vt0.c0 COLLATE BINARY)) DESC, (((((vt0.c0 IN (t0.c2, t0.c1, NULL)))AND('1510714569')))OR(((t0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))>=((t0.c1))))%(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)LIKE(t0.c0))) ISNULL) ASC, ((((t0.c2) NOTNULL))LIKE((((('-1207077611')OR(t0.c1)))OR(t0.c2)))) ASC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))+(vt0.c0 COLLATE BINARY)) DESC, (((((vt0.c0 IN (t0.c2, t0.c1, NULL)))AND('1510714569')))OR(((t0.c2) NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c2))>=((t0.c1))))%(CAST(vt0.c0 AS TEXT)))) ORDER BY ((((vt0.c0)LIKE(t0.c0))) ISNULL) ASC, ((((t0.c2) NOTNULL))LIKE((((('-1207077611')OR(t0.c1)))OR(t0.c2)))) ASC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))+(vt0.c0 COLLATE BINARY)) DESC, (((((vt0.c0 IN (t0.c2, t0.c1, NULL)))AND('1510714569')))OR(((t0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))>=((t0.c1))))%(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)LIKE(t0.c0))) ISNULL) ASC, ((((t0.c2) NOTNULL))LIKE((((('-1207077611')OR(t0.c1)))OR(t0.c2)))) ASC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))+(vt0.c0 COLLATE BINARY)) DESC, (((((vt0.c0 IN (t0.c2, t0.c1, NULL)))AND('1510714569')))OR(((t0.c2) NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c2))>=((t0.c1))))%(CAST(vt0.c0 AS TEXT)))) ORDER BY ((((vt0.c0)LIKE(t0.c0))) ISNULL) ASC, ((((t0.c2) NOTNULL))LIKE((((('-1207077611')OR(t0.c1)))OR(t0.c2)))) ASC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))+(vt0.c0 COLLATE BINARY)) DESC, (((((vt0.c0 IN (t0.c2, t0.c1, NULL)))AND('1510714569')))OR(((t0.c2) NOTNULL)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((- (x'c2a4')));
SELECT SUM(count) FROM (SELECT ALL (((- (x'c2a4'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (x'c2a4')));
SELECT SUM(count) FROM (SELECT ALL (((- (x'c2a4'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (x'c2a4')));
SELECT ALL * FROM vt0, t0, v0 WHERE ((v0.c0 IN ())) ORDER BY 0.3551630295415308  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY 0.3551630295415308  NULLS FIRST);
SELECT ALL * FROM vt0, t0, v0 WHERE ((v0.c0 IN ())) ORDER BY 0.3551630295415308  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY 0.3551630295415308  NULLS FIRST);
SELECT ALL * FROM vt0, t0, v0 WHERE ((v0.c0 IN ())) ORDER BY 0.3551630295415308  NULLS FIRST;
SELECT * FROM t0, v0 WHERE (CASE CASE WHEN v0.c0 THEN '-1575960439' WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c0 ELSE v0.c0 END  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0))) THEN (((v0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) WHEN ((x'733d')-(v0.c0)) THEN t0.c0 WHEN t0.c2 COLLATE RTRIM THEN (+ (v0.c0)) WHEN 0.009591360200890908 THEN t0.c1 COLLATE NOCASE WHEN 0xffffffffd453df31 THEN ((t0.c2)||(v0.c0)) END) ORDER BY CAST(HEX(DISTINCT v0.c0) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN v0.c0 THEN '-1575960439' WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c0 ELSE v0.c0 END  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0))) THEN (((v0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) WHEN ((x'733d')-(v0.c0)) THEN t0.c0 WHEN t0.c2 COLLATE RTRIM THEN (+ (v0.c0)) WHEN 0.009591360200890908 THEN t0.c1 COLLATE NOCASE WHEN 0Xffffffffd453df31 THEN ((t0.c2)||(v0.c0)) END) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(HEX(DISTINCT v0.c0) AS NUMERIC) ASC  NULLS FIRST);
SELECT * FROM t0, v0 WHERE (CASE CASE WHEN v0.c0 THEN '-1575960439' WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c0 ELSE v0.c0 END  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0))) THEN (((v0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) WHEN ((x'733d')-(v0.c0)) THEN t0.c0 WHEN t0.c2 COLLATE RTRIM THEN (+ (v0.c0)) WHEN 0.009591360200890908 THEN t0.c1 COLLATE NOCASE WHEN 0xffffffffd453df31 THEN ((t0.c2)||(v0.c0)) END) ORDER BY CAST(HEX(DISTINCT v0.c0) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN v0.c0 THEN '-1575960439' WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c0 ELSE v0.c0 END  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0))) THEN (((v0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) WHEN ((x'733d')-(v0.c0)) THEN t0.c0 WHEN t0.c2 COLLATE RTRIM THEN (+ (v0.c0)) WHEN 0.009591360200890908 THEN t0.c1 COLLATE NOCASE WHEN 0Xffffffffd453df31 THEN ((t0.c2)||(v0.c0)) END) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(HEX(DISTINCT v0.c0) AS NUMERIC) ASC  NULLS FIRST);
SELECT * FROM t0, v0 WHERE (CASE CASE WHEN v0.c0 THEN '-1575960439' WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c0 ELSE v0.c0 END  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0))) THEN (((v0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) WHEN ((x'733d')-(v0.c0)) THEN t0.c0 WHEN t0.c2 COLLATE RTRIM THEN (+ (v0.c0)) WHEN 0.009591360200890908 THEN t0.c1 COLLATE NOCASE WHEN 0xffffffffd453df31 THEN ((t0.c2)||(v0.c0)) END) ORDER BY CAST(HEX(DISTINCT v0.c0) AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c0) AND (0.6182801380888701)))<<(t0.c1 COLLATE BINARY))) ORDER BY ((CAST(t0.c0 AS NUMERIC))>=(1.503454045E9));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t0.c0) AND (0.6182801380888701)))<<(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c0 AS NUMERIC))>=(1.503454045E9)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c0) AND (0.6182801380888701)))<<(t0.c1 COLLATE BINARY))) ORDER BY ((CAST(t0.c0 AS NUMERIC))>=(1.503454045E9));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t0.c0) AND (0.6182801380888701)))<<(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c0 AS NUMERIC))>=(1.503454045E9)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c0) AND (0.6182801380888701)))<<(t0.c1 COLLATE BINARY))) ORDER BY ((CAST(t0.c0 AS NUMERIC))>=(1.503454045E9));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (((((vt0.c0 IN (t0.c2)))AND(CAST(vt0.c0 AS REAL))))AND(CAST(t0.c2 AS NUMERIC))) LEFT OUTER JOIN vt0 ON (((((vt0.c0, t0.c2, vt0.c0)) BETWEEN ((v0.c0, t0.c1, v0.c0)) AND ((v0.c0, t0.c1, t0.c0)))) NOT NULL) WHERE (((t0.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c1) ISNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((((vt0.c0 IN (t0.c2)))AND(CAST(vt0.c0 AS REAL))))AND(CAST(t0.c2 AS NUMERIC))) LEFT OUTER JOIN vt0 ON (((((vt0.c0, t0.c2, vt0.c0)) BETWEEN ((v0.c0, t0.c1, v0.c0)) AND ((v0.c0, t0.c1, t0.c0)))) NOT NULL));
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (((((vt0.c0 IN (t0.c2)))AND(CAST(vt0.c0 AS REAL))))AND(CAST(t0.c2 AS NUMERIC))) LEFT OUTER JOIN vt0 ON (((((vt0.c0, t0.c2, vt0.c0)) BETWEEN ((v0.c0, t0.c1, v0.c0)) AND ((v0.c0, t0.c1, t0.c0)))) NOT NULL) WHERE (((t0.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c1) ISNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((((vt0.c0 IN (t0.c2)))AND(CAST(vt0.c0 AS REAL))))AND(CAST(t0.c2 AS NUMERIC))) LEFT OUTER JOIN vt0 ON (((((vt0.c0, t0.c2, vt0.c0)) BETWEEN ((v0.c0, t0.c1, v0.c0)) AND ((v0.c0, t0.c1, t0.c0)))) NOT NULL));
SELECT ALL * FROM v0 WHERE (ABS(CAST(v0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((ABS(CAST(v0.c0 AS BLOB))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (ABS(CAST(v0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((ABS(CAST(v0.c0 AS BLOB))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (ABS(CAST(v0.c0 AS BLOB)));
SELECT ALL * FROM t0 WHERE ((~ (0.5876604960961735))) ORDER BY 0.6402951340167363 DESC  NULLS FIRST, ((highlight(t0.c2, t0.c1, t0.c0, t0.c0))IS(((((t0.c0)AND(t0.c2)))AND('100139488'))))  NULLS LAST, ((HEX(DISTINCT t0.c1))|((NOT (t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (0.5876604960961735))) IS TRUE)  as count FROM t0 ORDER BY 0.6402951340167363 DESC  NULLS FIRST, ((highlight(t0.c2, t0.c1, t0.c0, t0.c0))IS(((((t0.c0)AND(t0.c2)))AND('100139488'))))  NULLS LAST, ((HEX(DISTINCT t0.c1))|((NOT (t0.c1)))) ASC);
SELECT ALL * FROM t0 WHERE ((~ (0.5876604960961735))) ORDER BY 0.6402951340167363 DESC  NULLS FIRST, ((highlight(t0.c2, t0.c1, t0.c0, t0.c0))IS(((((t0.c0)AND(t0.c2)))AND('100139488'))))  NULLS LAST, ((HEX(DISTINCT t0.c1))|((NOT (t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (0.5876604960961735))) IS TRUE)  as count FROM t0 ORDER BY 0.6402951340167363 DESC  NULLS FIRST, ((highlight(t0.c2, t0.c1, t0.c0, t0.c0))IS(((((t0.c0)AND(t0.c2)))AND('100139488'))))  NULLS LAST, ((HEX(DISTINCT t0.c1))|((NOT (t0.c1)))) ASC);
SELECT * FROM v0 FULL OUTER JOIN t0 ON CASE ((t0.c1) NOTNULL)  WHEN ((t0.c2)<<(NULL)) THEN ((t0.c0) NOT NULL) END WHERE (((((x'')AND(((v0.c0) BETWEEN (t0.c1) AND (t0.c0)))))OR((('-414227998')IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(((v0.c0) BETWEEN (t0.c1) AND (t0.c0)))))OR((('-414227998')IS NOT(v0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CASE ((t0.c1) NOTNULL)  WHEN ((t0.c2)<<(NULL)) THEN ((t0.c0) NOT NULL) END);
SELECT * FROM v0 FULL OUTER JOIN t0 ON CASE ((t0.c1) NOTNULL)  WHEN ((t0.c2)<<(NULL)) THEN ((t0.c0) NOT NULL) END WHERE (((((x'')AND(((v0.c0) BETWEEN (t0.c1) AND (t0.c0)))))OR((('-414227998')IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(((v0.c0) BETWEEN (t0.c1) AND (t0.c0)))))OR((('-414227998')IS NOT(v0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CASE ((t0.c1) NOTNULL)  WHEN ((t0.c2)<<(NULL)) THEN ((t0.c0) NOT NULL) END);
SELECT * FROM v0 FULL OUTER JOIN t0 ON CASE ((t0.c1) NOTNULL)  WHEN ((t0.c2)<<(NULL)) THEN ((t0.c0) NOT NULL) END WHERE (((((x'')AND(((v0.c0) BETWEEN (t0.c1) AND (t0.c0)))))OR((('-414227998')IS NOT(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.7292324947597086) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((0.7292324947597086) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.7292324947597086) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((0.7292324947597086) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.7292324947597086) ORDER BY NULL;
SELECT * FROM vt0, v0 WHERE (((CAST(v0.c0 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((CAST(v0.c0 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((CAST(v0.c0 AS TEXT)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((vt0.c0 IN ())) ORDER BY highlight(((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)), -1527549965, t0.c2 COLLATE BINARY, ((((t0.c1)OR(t0.c0)))OR(t0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY highlight(((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)), -1527549965, t0.c2 COLLATE BINARY, ((((t0.c1)OR(t0.c0)))OR(t0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((vt0.c0 IN ())) ORDER BY highlight(((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)), -1527549965, t0.c2 COLLATE BINARY, ((((t0.c1)OR(t0.c0)))OR(t0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY highlight(((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)), -1527549965, t0.c2 COLLATE BINARY, ((((t0.c1)OR(t0.c0)))OR(t0.c0))) DESC  NULLS LAST);
SELECT * FROM vt0, v0 FULL OUTER JOIN t0 ON ((((vt0.c0 COLLATE RTRIM)AND(t0.c2 COLLATE BINARY)))AND(((t0.c1) IS FALSE))) WHERE (NULLIF(((t0.c1) IS FALSE), vt0.c0));
SELECT SUM(count) FROM (SELECT ((NULLIF(((t0.c1) IS FALSE), vt0.c0)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON ((((vt0.c0 COLLATE RTRIM)AND(t0.c2 COLLATE BINARY)))AND(((t0.c1) IS FALSE))));
SELECT * FROM vt0, v0 FULL OUTER JOIN t0 ON ((((vt0.c0 COLLATE RTRIM)AND(t0.c2 COLLATE BINARY)))AND(((t0.c1) IS FALSE))) WHERE (NULLIF(((t0.c1) IS FALSE), vt0.c0));
SELECT SUM(count) FROM (SELECT ((NULLIF(((t0.c1) IS FALSE), vt0.c0)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON ((((vt0.c0 COLLATE RTRIM)AND(t0.c2 COLLATE BINARY)))AND(((t0.c1) IS FALSE))));
SELECT * FROM vt0, v0 FULL OUTER JOIN t0 ON ((((vt0.c0 COLLATE RTRIM)AND(t0.c2 COLLATE BINARY)))AND(((t0.c1) IS FALSE))) WHERE (NULLIF(((t0.c1) IS FALSE), vt0.c0));
SELECT ALL * FROM v0 WHERE (((NULL) IS TRUE)) ORDER BY CAST(((v0.c0)<>(v0.c0)) AS BLOB), (((('457870011')AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST, (CAST(v0.c0 AS REAL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)!=(v0.c0)) AS BLOB), (((('457870011')AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST, (CAST(v0.c0 AS REAL) IN ())  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((NULL) IS TRUE)) ORDER BY CAST(((v0.c0)<>(v0.c0)) AS BLOB), (((('457870011')AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST, (CAST(v0.c0 AS REAL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)!=(v0.c0)) AS BLOB), (((('457870011')AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST, (CAST(v0.c0 AS REAL) IN ())  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((NULL) IS TRUE)) ORDER BY CAST(((v0.c0)<>(v0.c0)) AS BLOB), (((('457870011')AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE ASC  NULLS FIRST, (CAST(v0.c0 AS REAL) IN ())  NULLS LAST;
SELECT ALL * FROM t0 INNER JOIN v0 ON ((((t0.c0) NOT NULL))%(t0.c0 COLLATE BINARY)) CROSS JOIN vt0 ON ((((t0.c0) NOTNULL))==(CASE t0.c0  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c1 END)) WHERE (((('')IS(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('')IS(t0.c0)) IN ())) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((t0.c0) NOT NULL))%(t0.c0 COLLATE BINARY)) CROSS JOIN vt0 ON ((((t0.c0) NOTNULL))==(CASE t0.c0  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c1 END)));
SELECT ALL * FROM t0 INNER JOIN v0 ON ((((t0.c0) NOT NULL))%(t0.c0 COLLATE BINARY)) CROSS JOIN vt0 ON ((((t0.c0) NOTNULL))==(CASE t0.c0  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c1 END)) WHERE (((('')IS(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('')IS(t0.c0)) IN ())) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((t0.c0) NOT NULL))%(t0.c0 COLLATE BINARY)) CROSS JOIN vt0 ON ((((t0.c0) NOTNULL))==(CASE t0.c0  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c1 END)));
SELECT ALL * FROM t0 INNER JOIN v0 ON ((((t0.c0) NOT NULL))%(t0.c0 COLLATE BINARY)) CROSS JOIN vt0 ON ((((t0.c0) NOTNULL))==(CASE t0.c0  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c1 END)) WHERE (((('')IS(t0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE (LENGTH(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LENGTH(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LENGTH(vt0.c0));
SELECT ALL * FROM t0 WHERE (QUOTE((-1411783957 IN (t0.c2)))) ORDER BY ((((t0.c1)LIKE(t0.c0))) BETWEEN (CAST(t0.c2 AS BLOB)) AND (t0.c0)) DESC  NULLS LAST, CAST(t0.c0 COLLATE RTRIM AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((QUOTE((-1411783957 IN (t0.c2)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1)LIKE(t0.c0))) BETWEEN (CAST(t0.c2 AS BLOB)) AND (t0.c0)) DESC  NULLS LAST, CAST(t0.c0 COLLATE RTRIM AS NUMERIC));
SELECT ALL * FROM t0 WHERE (QUOTE((-1411783957 IN (t0.c2)))) ORDER BY ((((t0.c1)LIKE(t0.c0))) BETWEEN (CAST(t0.c2 AS BLOB)) AND (t0.c0)) DESC  NULLS LAST, CAST(t0.c0 COLLATE RTRIM AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((QUOTE((-1411783957 IN (t0.c2)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1)LIKE(t0.c0))) BETWEEN (CAST(t0.c2 AS BLOB)) AND (t0.c0)) DESC  NULLS LAST, CAST(t0.c0 COLLATE RTRIM AS NUMERIC));
SELECT ALL * FROM t0 WHERE (QUOTE((-1411783957 IN (t0.c2)))) ORDER BY ((((t0.c1)LIKE(t0.c0))) BETWEEN (CAST(t0.c2 AS BLOB)) AND (t0.c0)) DESC  NULLS LAST, CAST(t0.c0 COLLATE RTRIM AS NUMERIC);
SELECT * FROM v0 CROSS JOIN vt0 ON ((((('T%') NOT NULL), v0.c0 COLLATE RTRIM, LIKELY(vt0.c0)))<=((((t0.c2)>=(t0.c0)), (((t0.c1))<((t0.c1))), load_extension(v0.c0)))) CROSS JOIN t0 ON TRIM(DISTINCT ((vt0.c0) IS FALSE), (- (t0.c0))) WHERE (((v0.c0 COLLATE BINARY)GLOB((- (t0.c0))))) ORDER BY ((((x'')OR(((t0.c2) ISNULL))))AND(t0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)GLOB((- (t0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((('T%') NOT NULL), v0.c0 COLLATE RTRIM, LIKELY(vt0.c0)))<=((((t0.c2)>=(t0.c0)), (((t0.c1))<((t0.c1))), load_extension(v0.c0)))) CROSS JOIN t0 ON TRIM(DISTINCT ((vt0.c0) IS FALSE), (- (t0.c0))) ORDER BY ((((x'')OR(((t0.c2) ISNULL))))AND(t0.c2))  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN vt0 ON ((((('T%') NOT NULL), v0.c0 COLLATE RTRIM, LIKELY(vt0.c0)))<=((((t0.c2)>=(t0.c0)), (((t0.c1))<((t0.c1))), load_extension(v0.c0)))) CROSS JOIN t0 ON TRIM(DISTINCT ((vt0.c0) IS FALSE), (- (t0.c0))) WHERE (((v0.c0 COLLATE BINARY)GLOB((- (t0.c0))))) ORDER BY ((((x'')OR(((t0.c2) ISNULL))))AND(t0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)GLOB((- (t0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((('T%') NOT NULL), v0.c0 COLLATE RTRIM, LIKELY(vt0.c0)))<=((((t0.c2)>=(t0.c0)), (((t0.c1))<((t0.c1))), load_extension(v0.c0)))) CROSS JOIN t0 ON TRIM(DISTINCT ((vt0.c0) IS FALSE), (- (t0.c0))) ORDER BY ((((x'')OR(((t0.c2) ISNULL))))AND(t0.c2))  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN vt0 ON ((((('T%') NOT NULL), v0.c0 COLLATE RTRIM, LIKELY(vt0.c0)))<=((((t0.c2)>=(t0.c0)), (((t0.c1))<((t0.c1))), load_extension(v0.c0)))) CROSS JOIN t0 ON TRIM(DISTINCT ((vt0.c0) IS FALSE), (- (t0.c0))) WHERE (((v0.c0 COLLATE BINARY)GLOB((- (t0.c0))))) ORDER BY ((((x'')OR(((t0.c2) ISNULL))))AND(t0.c2))  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((t0.c1)AND(vt0.c0)))OR(t0.c1))) AND (((vt0.c0)GLOB(vt0.c0))))) ORDER BY CAST(((t0.c2)AND(t0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((t0.c1)AND(vt0.c0)))OR(t0.c1))) AND (((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((t0.c2)AND(t0.c0)) AS REAL) ASC);
SELECT * FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((t0.c1)AND(vt0.c0)))OR(t0.c1))) AND (((vt0.c0)GLOB(vt0.c0))))) ORDER BY CAST(((t0.c2)AND(t0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((t0.c1)AND(vt0.c0)))OR(t0.c1))) AND (((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((t0.c2)AND(t0.c0)) AS REAL) ASC);
SELECT * FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((t0.c1)AND(vt0.c0)))OR(t0.c1))) AND (((vt0.c0)GLOB(vt0.c0))))) ORDER BY CAST(((t0.c2)AND(t0.c0)) AS REAL) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))/(((v0.c0) ISNULL)))) ORDER BY CASE (- ('1'))  WHEN v0.c0 THEN NULL END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))/(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY CASE (- ('1'))  WHEN v0.c0 THEN NULL END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))/(((v0.c0) ISNULL)))) ORDER BY CASE (- ('1'))  WHEN v0.c0 THEN NULL END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))/(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY CASE (- ('1'))  WHEN v0.c0 THEN NULL END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))/(((v0.c0) ISNULL)))) ORDER BY CASE (- ('1'))  WHEN v0.c0 THEN NULL END DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)>=(v0.c0)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0) NOT NULL))))OR(CAST(v0.c0 AS BLOB))))AND(v0.c0 COLLATE BINARY))) ORDER BY (('-191590544')*(v0.c0)) DESC  NULLS FIRST, CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN x'' END, ((((v0.c0) NOTNULL))OR(v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)>=(v0.c0)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0) NOT NULL))))OR(CAST(v0.c0 AS BLOB))))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY (('-191590544')*(v0.c0)) DESC  NULLS FIRST, CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN x'' END, ((((v0.c0) NOTNULL))OR(v0.c0 COLLATE NOCASE)));
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)>=(v0.c0)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0) NOT NULL))))OR(CAST(v0.c0 AS BLOB))))AND(v0.c0 COLLATE BINARY))) ORDER BY (('-191590544')*(v0.c0)) DESC  NULLS FIRST, CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN x'' END, ((((v0.c0) NOTNULL))OR(v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)>=(v0.c0)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0) NOT NULL))))OR(CAST(v0.c0 AS BLOB))))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY (('-191590544')*(v0.c0)) DESC  NULLS FIRST, CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN x'' END, ((((v0.c0) NOTNULL))OR(v0.c0 COLLATE NOCASE)));
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)>=(v0.c0)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0) NOT NULL))))OR(CAST(v0.c0 AS BLOB))))AND(v0.c0 COLLATE BINARY))) ORDER BY (('-191590544')*(v0.c0)) DESC  NULLS FIRST, CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN x'' END, ((((v0.c0) NOTNULL))OR(v0.c0 COLLATE NOCASE));
SELECT ALL * FROM vt0, t0, v0 WHERE ((((t0.c0 IN (v0.c0, t0.c0, t0.c1)))<=(CASE WHEN t0.c2 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (v0.c0, t0.c0, t0.c1)))<=(CASE WHEN t0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE ((((t0.c0 IN (v0.c0, t0.c0, t0.c1)))<=(CASE WHEN t0.c2 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (v0.c0, t0.c0, t0.c1)))<=(CASE WHEN t0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE ((((t0.c0 IN (v0.c0, t0.c0, t0.c1)))<=(CASE WHEN t0.c2 THEN vt0.c0 END)));
SELECT * FROM vt0, t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))) AND ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))) AND ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))) AND ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))) AND ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))) AND ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 END) ORDER BY ((((((((((v0.c0) NOT BETWEEN (v0.c0) AND ('2063838644')))AND((~ (v0.c0)))))OR(CAST(v0.c0 AS REAL))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0) NOT BETWEEN (v0.c0) AND ('2063838644')))AND((~ (v0.c0)))))OR(CAST(v0.c0 AS REAL))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(v0.c0)) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 END) ORDER BY ((((((((((v0.c0) NOT BETWEEN (v0.c0) AND ('2063838644')))AND((~ (v0.c0)))))OR(CAST(v0.c0 AS REAL))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0) NOT BETWEEN (v0.c0) AND ('2063838644')))AND((~ (v0.c0)))))OR(CAST(v0.c0 AS REAL))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(v0.c0)) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 END) ORDER BY ((((((((((v0.c0) NOT BETWEEN (v0.c0) AND ('2063838644')))AND((~ (v0.c0)))))OR(CAST(v0.c0 AS REAL))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(v0.c0)) DESC;
SELECT ALL * FROM vt0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY (+ (vt0.c0 COLLATE BINARY))  NULLS FIRST, CAST(vt0.c0 COLLATE NOCASE AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0 COLLATE BINARY))  NULLS FIRST, CAST(vt0.c0 COLLATE NOCASE AS BLOB) ASC);
SELECT ALL * FROM vt0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY (+ (vt0.c0 COLLATE BINARY))  NULLS FIRST, CAST(vt0.c0 COLLATE NOCASE AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0 COLLATE BINARY))  NULLS FIRST, CAST(vt0.c0 COLLATE NOCASE AS BLOB) ASC);
SELECT ALL * FROM vt0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY (+ (vt0.c0 COLLATE BINARY))  NULLS FIRST, CAST(vt0.c0 COLLATE NOCASE AS BLOB) ASC;
SELECT ALL * FROM t0 WHERE ((t0.c1 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c1 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c1 IN ()) COLLATE BINARY);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN t0.c0 THEN t0.c1 END THEN CAST(t0.c2 AS NUMERIC) WHEN (~ (t0.c0)) THEN COALESCE(t0.c0, t0.c0) WHEN ((t0.c2) NOT NULL) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c1 END ELSE (- (t0.c2)) END) ORDER BY (+ ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN t0.c0 THEN t0.c1 END THEN CAST(t0.c2 AS NUMERIC) WHEN (~ (t0.c0)) THEN COALESCE(t0.c0, t0.c0) WHEN ((t0.c2) NOT NULL) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c1 END ELSE (- (t0.c2)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ ((vt0.c0 IN ()))));
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN t0.c0 THEN t0.c1 END THEN CAST(t0.c2 AS NUMERIC) WHEN (~ (t0.c0)) THEN COALESCE(t0.c0, t0.c0) WHEN ((t0.c2) NOT NULL) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c1 END ELSE (- (t0.c2)) END) ORDER BY (+ ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN t0.c0 THEN t0.c1 END THEN CAST(t0.c2 AS NUMERIC) WHEN (~ (t0.c0)) THEN COALESCE(t0.c0, t0.c0) WHEN ((t0.c2) NOT NULL) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c1 END ELSE (- (t0.c2)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ ((vt0.c0 IN ()))));
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN t0.c0 THEN t0.c1 END THEN CAST(t0.c2 AS NUMERIC) WHEN (~ (t0.c0)) THEN COALESCE(t0.c0, t0.c0) WHEN ((t0.c2) NOT NULL) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c1 END ELSE (- (t0.c2)) END) ORDER BY (+ ((vt0.c0 IN ())));
SELECT * FROM v0, t0, vt0 WHERE (((TIME(vt0.c0, t0.c1, v0.c0))-(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((TIME(vt0.c0, t0.c1, v0.c0))-(v0.c0))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (((TIME(vt0.c0, t0.c1, v0.c0))-(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((TIME(vt0.c0, t0.c1, v0.c0))-(v0.c0))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (((TIME(vt0.c0, t0.c1, v0.c0))-(v0.c0)));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1)GLOB(t0.c2)))LIKE(CASE WHEN t0.c1 THEN t0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)GLOB(t0.c2)))LIKE(CASE WHEN t0.c1 THEN t0.c1 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1)GLOB(t0.c2)))LIKE(CASE WHEN t0.c1 THEN t0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)GLOB(t0.c2)))LIKE(CASE WHEN t0.c1 THEN t0.c1 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1)GLOB(t0.c2)))LIKE(CASE WHEN t0.c1 THEN t0.c1 END)));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((vt0.c0)) BETWEEN (((t0.c0 IN ()))) AND (((vt0.c0 IN ()))))) ORDER BY ((((t0.c2) IS FALSE)) ISNULL) DESC  NULLS FIRST, (NOT (x'' COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((t0.c0 IN ()))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((t0.c2) IS FALSE)) ISNULL) DESC  NULLS FIRST, (NOT (x'' COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((vt0.c0)) BETWEEN (((t0.c0 IN ()))) AND (((vt0.c0 IN ()))))) ORDER BY ((((t0.c2) IS FALSE)) ISNULL) DESC  NULLS FIRST, (NOT (x'' COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((t0.c0 IN ()))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((t0.c2) IS FALSE)) ISNULL) DESC  NULLS FIRST, (NOT (x'' COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((vt0.c0)) BETWEEN (((t0.c0 IN ()))) AND (((vt0.c0 IN ()))))) ORDER BY ((((t0.c2) IS FALSE)) ISNULL) DESC  NULLS FIRST, (NOT (x'' COLLATE NOCASE)) ASC;
SELECT ALL * FROM vt0 WHERE ((+ ('-1540059099')));
SELECT SUM(count) FROM (SELECT (((+ ('-1540059099'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ ('-1540059099')));
SELECT SUM(count) FROM (SELECT (((+ ('-1540059099'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ ('-1540059099')));
SELECT * FROM v0, t0 WHERE ((((NULL))<=((0.6015082315803915))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<=((0.6015082315803915)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((NULL))<=((0.6015082315803915))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<=((0.6015082315803915)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((NULL))<=((0.6015082315803915))));
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY (~ (t0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (t0.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY (~ (t0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (t0.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY (~ (t0.c0 COLLATE BINARY)) ASC;
SELECT * FROM t0, vt0 LEFT OUTER JOIN v0 ON -1384280065 WHERE (((CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END)-(((((t0.c1)AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END)-(((((t0.c1)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON -1384280065);
SELECT * FROM t0, vt0 LEFT OUTER JOIN v0 ON -1384280065 WHERE (((CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END)-(((((t0.c1)AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END)-(((((t0.c1)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON -1384280065);
SELECT * FROM t0, vt0 LEFT OUTER JOIN v0 ON -1384280065 WHERE (((CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END)-(((((t0.c1)AND(t0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 INDEXED BY i2 RIGHT OUTER JOIN v0 ON (((- (t0.c0)))-(((t0.c1)OR(t0.c0)))) FULL OUTER JOIN vt0 ON ((((t0.c2)OR('%[Eヮt3ꊆ칏y')))AND(v0.c0)) COLLATE BINARY WHERE ((((((((((~ (t0.c0)))AND(vt0.c0 COLLATE BINARY)))AND((((v0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c1))))))AND(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(((t0.c0) BETWEEN (t0.c2) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (t0.c0)))AND(vt0.c0 COLLATE BINARY)))AND((((v0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c1))))))AND(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(((t0.c0) BETWEEN (t0.c2) AND (t0.c0))))) IS TRUE)  as count FROM t0 INDEXED BY i2 RIGHT OUTER JOIN v0 ON (((- (t0.c0)))-(((t0.c1)OR(t0.c0)))) FULL OUTER JOIN vt0 ON ((((t0.c2)OR('%[Eヮt3ꊆ칏y')))AND(v0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i2 RIGHT OUTER JOIN v0 ON (((- (t0.c0)))-(((t0.c1)OR(t0.c0)))) FULL OUTER JOIN vt0 ON ((((t0.c2)OR('%[Eヮt3ꊆ칏y')))AND(v0.c0)) COLLATE BINARY WHERE ((((((((((~ (t0.c0)))AND(vt0.c0 COLLATE BINARY)))AND((((v0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c1))))))AND(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(((t0.c0) BETWEEN (t0.c2) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (t0.c0)))AND(vt0.c0 COLLATE BINARY)))AND((((v0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c1))))))AND(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(((t0.c0) BETWEEN (t0.c2) AND (t0.c0))))) IS TRUE)  as count FROM t0 INDEXED BY i2 RIGHT OUTER JOIN v0 ON (((- (t0.c0)))-(((t0.c1)OR(t0.c0)))) FULL OUTER JOIN vt0 ON ((((t0.c2)OR('%[Eヮt3ꊆ칏y')))AND(v0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i2 RIGHT OUTER JOIN v0 ON (((- (t0.c0)))-(((t0.c1)OR(t0.c0)))) FULL OUTER JOIN vt0 ON ((((t0.c2)OR('%[Eヮt3ꊆ칏y')))AND(v0.c0)) COLLATE BINARY WHERE ((((((((((~ (t0.c0)))AND(vt0.c0 COLLATE BINARY)))AND((((v0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c1))))))AND(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(((t0.c0) BETWEEN (t0.c2) AND (t0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (LIKELIHOOD((((v0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((v0.c0, x'', vt0.c0, v0.c0, v0.c0))), 0.47517431366213514));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((v0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((v0.c0, x'', vt0.c0, v0.c0, v0.c0))), 0.47517431366213514)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (LIKELIHOOD((((v0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((v0.c0, x'', vt0.c0, v0.c0, v0.c0))), 0.47517431366213514));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((v0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((v0.c0, x'', vt0.c0, v0.c0, v0.c0))), 0.47517431366213514)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (LIKELIHOOD((((v0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((v0.c0, x'', vt0.c0, v0.c0, v0.c0))), 0.47517431366213514));
SELECT COUNT(*) FROM vt0, t0 WHERE ((+ ('_bi}?'))) ORDER BY CAST((0X6d67202f IN (t0.c2)) AS NUMERIC)  NULLS FIRST, t0.c2;
SELECT SUM(count) FROM (SELECT ALL (((+ ('_bi}?'))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((0X6d67202f IN (t0.c2)) AS NUMERIC)  NULLS FIRST, t0.c2);
SELECT COUNT(*) FROM vt0, t0 WHERE ((+ ('_bi}?'))) ORDER BY CAST((0X6d67202f IN (t0.c2)) AS NUMERIC)  NULLS FIRST, t0.c2;
SELECT SUM(count) FROM (SELECT ALL (((+ ('_bi}?'))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((0X6d67202f IN (t0.c2)) AS NUMERIC)  NULLS FIRST, t0.c2);
SELECT COUNT(*) FROM vt0, t0 WHERE ((+ ('_bi}?'))) ORDER BY CAST((0X6d67202f IN (t0.c2)) AS NUMERIC)  NULLS FIRST, t0.c2;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN vt0.c0 END)OR(t0.c1 COLLATE RTRIM)))AND(SQLITE_COMPILEOPTION_GET(vt0.c0))) WHERE (((((((((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)))OR(json_valid(t0.c2))))AND(((t0.c0) IS FALSE))))AND((vt0.c0 IN ()))))AND(((t0.c2) IS FALSE)))) ORDER BY ((CAST(t0.c0 AS INTEGER)) BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))) AND ((~ (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)))OR(json_valid(t0.c2))))AND(((t0.c0) IS FALSE))))AND((vt0.c0 IN ()))))AND(((t0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN vt0.c0 END)OR(t0.c1 COLLATE RTRIM)))AND(SQLITE_COMPILEOPTION_GET(vt0.c0))) ORDER BY ((CAST(t0.c0 AS INTEGER)) BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))) AND ((~ (t0.c0)))));
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN vt0.c0 END)OR(t0.c1 COLLATE RTRIM)))AND(SQLITE_COMPILEOPTION_GET(vt0.c0))) WHERE (((((((((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)))OR(json_valid(t0.c2))))AND(((t0.c0) IS FALSE))))AND((vt0.c0 IN ()))))AND(((t0.c2) IS FALSE)))) ORDER BY ((CAST(t0.c0 AS INTEGER)) BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))) AND ((~ (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)))OR(json_valid(t0.c2))))AND(((t0.c0) IS FALSE))))AND((vt0.c0 IN ()))))AND(((t0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN vt0.c0 END)OR(t0.c1 COLLATE RTRIM)))AND(SQLITE_COMPILEOPTION_GET(vt0.c0))) ORDER BY ((CAST(t0.c0 AS INTEGER)) BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))) AND ((~ (t0.c0)))));
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN vt0.c0 END)OR(t0.c1 COLLATE RTRIM)))AND(SQLITE_COMPILEOPTION_GET(vt0.c0))) WHERE (((((((((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)))OR(json_valid(t0.c2))))AND(((t0.c0) IS FALSE))))AND((vt0.c0 IN ()))))AND(((t0.c2) IS FALSE)))) ORDER BY ((CAST(t0.c0 AS INTEGER)) BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))) AND ((~ (t0.c0))));
SELECT * FROM vt0, v0 WHERE (HEX(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((HEX(CASE WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (HEX(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((HEX(CASE WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (HEX(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT COUNT(*) FROM t0 WHERE (CASE CAST(t0.c2 AS INTEGER)  WHEN (- (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) END) ORDER BY x'' DESC, (((t0.c2 COLLATE NOCASE))<=((((t0.c1) ISNULL)))), ((((((((((((((t0.c1)AND(t0.c1)))OR(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)))))AND((~ (NULL)))))AND(CAST(t0.c1 AS NUMERIC))))AND((((t0.c1))<=((t0.c2))))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR((~ (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c2 AS INTEGER)  WHEN (- (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0 ORDER BY x'' DESC, (((t0.c2 COLLATE NOCASE))<=((((t0.c1) ISNULL)))), ((((((((((((((t0.c1)AND(t0.c1)))OR(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)))))AND((~ (NULL)))))AND(CAST(t0.c1 AS NUMERIC))))AND((((t0.c1))<=((t0.c2))))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR((~ (t0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CASE CAST(t0.c2 AS INTEGER)  WHEN (- (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) END) ORDER BY x'' DESC, (((t0.c2 COLLATE NOCASE))<=((((t0.c1) ISNULL)))), ((((((((((((((t0.c1)AND(t0.c1)))OR(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)))))AND((~ (NULL)))))AND(CAST(t0.c1 AS NUMERIC))))AND((((t0.c1))<=((t0.c2))))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR((~ (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c2 AS INTEGER)  WHEN (- (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0 ORDER BY x'' DESC, (((t0.c2 COLLATE NOCASE))<=((((t0.c1) ISNULL)))), ((((((((((((((t0.c1)AND(t0.c1)))OR(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)))))AND((~ (NULL)))))AND(CAST(t0.c1 AS NUMERIC))))AND((((t0.c1))<=((t0.c2))))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR((~ (t0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CASE CAST(t0.c2 AS INTEGER)  WHEN (- (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) END) ORDER BY x'' DESC, (((t0.c2 COLLATE NOCASE))<=((((t0.c1) ISNULL)))), ((((((((((((((t0.c1)AND(t0.c1)))OR(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)))))AND((~ (NULL)))))AND(CAST(t0.c1 AS NUMERIC))))AND((((t0.c1))<=((t0.c2))))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR((~ (t0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((CASE WHEN v0.c0 THEN vt0.c0 ELSE NULL END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN vt0.c0 ELSE NULL END IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((CASE WHEN v0.c0 THEN vt0.c0 ELSE NULL END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN vt0.c0 ELSE NULL END IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((CASE WHEN v0.c0 THEN vt0.c0 ELSE NULL END IN ()));
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c0) ORDER BY (- (((t0.c1)<(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, v0 ORDER BY (- (((t0.c1)<(t0.c0)))) ASC);
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c0) ORDER BY (- (((t0.c1)<(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, v0 ORDER BY (- (((t0.c1)<(t0.c0)))) ASC);
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c0) ORDER BY (- (((t0.c1)<(t0.c0)))) ASC;
SELECT ALL COUNT(*) FROM v0, t0, vt0 NOT INDEXED WHERE (((((v0.c0)&(t0.c2)))>((t0.c2 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)&(t0.c2)))>((t0.c2 IN (vt0.c0))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 NOT INDEXED WHERE (((((v0.c0)&(t0.c2)))>((t0.c2 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)&(t0.c2)))>((t0.c2 IN (vt0.c0))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 NOT INDEXED WHERE (((((v0.c0)&(t0.c2)))>((t0.c2 IN (vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c0 THEN NULL END) NOT BETWEEN ((((v0.c0, NULL, t0.c1)) BETWEEN ((vt0.c0, t0.c2, t0.c1)) AND ((t0.c1, vt0.c0, 0.33125022079637323)))) AND (((x'')LIKE(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN t0.c0 THEN NULL END) NOT BETWEEN ((((v0.c0, NULL, t0.c1)) BETWEEN ((vt0.c0, t0.c2, t0.c1)) AND ((t0.c1, vt0.c0, 0.33125022079637323)))) AND (((x'')LIKE(t0.c1))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c0 THEN NULL END) NOT BETWEEN ((((v0.c0, NULL, t0.c1)) BETWEEN ((vt0.c0, t0.c2, t0.c1)) AND ((t0.c1, vt0.c0, 0.33125022079637323)))) AND (((x'')LIKE(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN t0.c0 THEN NULL END) NOT BETWEEN ((((v0.c0, NULL, t0.c1)) BETWEEN ((vt0.c0, t0.c2, t0.c1)) AND ((t0.c1, vt0.c0, 0.33125022079637323)))) AND (((x'')LIKE(t0.c1))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c0 THEN NULL END) NOT BETWEEN ((((v0.c0, NULL, t0.c1)) BETWEEN ((vt0.c0, t0.c2, t0.c1)) AND ((t0.c1, vt0.c0, 0.33125022079637323)))) AND (((x'')LIKE(t0.c1)))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((((NULLIF(v0.c0, v0.c0))OR((((t0.c0))<=((t0.c2))))))OR(((t0.c1) IS FALSE))) LEFT OUTER JOIN v0 ON ((((t0.c1)-(vt0.c0)))||(((vt0.c0)>(t0.c2)))) WHERE ('0.8329665305321783' COLLATE RTRIM) ORDER BY ((((0.8300042385007443) BETWEEN (v0.c0) AND (vt0.c0)))!=(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0.8329665305321783' COLLATE RTRIM) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((NULLIF(v0.c0, v0.c0))OR((((t0.c0))<=((t0.c2))))))OR(((t0.c1) IS FALSE))) LEFT OUTER JOIN v0 ON ((((t0.c1)-(vt0.c0)))||(((vt0.c0)>(t0.c2)))) ORDER BY ((((0.8300042385007443) BETWEEN (v0.c0) AND (vt0.c0)))!=(t0.c0))  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((((NULLIF(v0.c0, v0.c0))OR((((t0.c0))<=((t0.c2))))))OR(((t0.c1) IS FALSE))) LEFT OUTER JOIN v0 ON ((((t0.c1)-(vt0.c0)))||(((vt0.c0)>(t0.c2)))) WHERE ('0.8329665305321783' COLLATE RTRIM) ORDER BY ((((0.8300042385007443) BETWEEN (v0.c0) AND (vt0.c0)))!=(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0.8329665305321783' COLLATE RTRIM) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((NULLIF(v0.c0, v0.c0))OR((((t0.c0))<=((t0.c2))))))OR(((t0.c1) IS FALSE))) LEFT OUTER JOIN v0 ON ((((t0.c1)-(vt0.c0)))||(((vt0.c0)>(t0.c2)))) ORDER BY ((((0.8300042385007443) BETWEEN (v0.c0) AND (vt0.c0)))!=(t0.c0))  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((((NULLIF(v0.c0, v0.c0))OR((((t0.c0))<=((t0.c2))))))OR(((t0.c1) IS FALSE))) LEFT OUTER JOIN v0 ON ((((t0.c1)-(vt0.c0)))||(((vt0.c0)>(t0.c2)))) WHERE ('0.8329665305321783' COLLATE RTRIM) ORDER BY ((((0.8300042385007443) BETWEEN (v0.c0) AND (vt0.c0)))!=(t0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((CHANGES())) AND ((((t0.c1)%(t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN ((CHANGES())) AND ((((t0.c1)%(t0.c2)))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((CHANGES())) AND ((((t0.c1)%(t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN ((CHANGES())) AND ((((t0.c1)%(t0.c2)))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((CHANGES())) AND ((((t0.c1)%(t0.c2))))));
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c0)IS NOT(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)IS NOT(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c0)IS NOT(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)IS NOT(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c0)IS NOT(v0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY)|(CAST(vt0.c0 AS REAL))) RIGHT OUTER JOIN t0 ON '-1742130071' COLLATE RTRIM WHERE ((((((('')|(t0.c1)))OR(((v0.c0)LIKE(NULL)))))AND(t0.c2)));
SELECT SUM(count) FROM (SELECT (((((((('')|(t0.c1)))OR(((v0.c0)LIKE(NULL)))))AND(t0.c2))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY)|(CAST(vt0.c0 AS REAL))) RIGHT OUTER JOIN t0 ON '-1742130071' COLLATE RTRIM);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY)|(CAST(vt0.c0 AS REAL))) RIGHT OUTER JOIN t0 ON '-1742130071' COLLATE RTRIM WHERE ((((((('')|(t0.c1)))OR(((v0.c0)LIKE(NULL)))))AND(t0.c2)));
SELECT SUM(count) FROM (SELECT (((((((('')|(t0.c1)))OR(((v0.c0)LIKE(NULL)))))AND(t0.c2))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY)|(CAST(vt0.c0 AS REAL))) RIGHT OUTER JOIN t0 ON '-1742130071' COLLATE RTRIM);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY)|(CAST(vt0.c0 AS REAL))) RIGHT OUTER JOIN t0 ON '-1742130071' COLLATE RTRIM WHERE ((((((('')|(t0.c1)))OR(((v0.c0)LIKE(NULL)))))AND(t0.c2)));
SELECT * FROM vt0, t0 WHERE (vt0.c0) ORDER BY (((((t0.c0))<((vt0.c0))))=(((t0.c1)LIKE(t0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c0))<((vt0.c0))))==(((t0.c1)LIKE(t0.c0)))));
SELECT * FROM vt0, t0 WHERE (vt0.c0) ORDER BY (((((t0.c0))<((vt0.c0))))=(((t0.c1)LIKE(t0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c0))<((vt0.c0))))==(((t0.c1)LIKE(t0.c0)))));
SELECT * FROM vt0, t0 WHERE (vt0.c0) ORDER BY (((((t0.c0))<((vt0.c0))))=(((t0.c1)LIKE(t0.c0))));
SELECT * FROM v0 WHERE (CASE (+ (v0.c0))  WHEN json_valid(v0.c0) THEN 0.8403001282130315 WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 COLLATE BINARY WHEN load_extension(v0.c0, v0.c0) THEN TYPEOF(v0.c0) ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (v0.c0))  WHEN json_valid(v0.c0) THEN 0.8403001282130315 WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 COLLATE BINARY WHEN load_extension(v0.c0, v0.c0) THEN TYPEOF(v0.c0) ELSE v0.c0 END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE (+ (v0.c0))  WHEN json_valid(v0.c0) THEN 0.8403001282130315 WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 COLLATE BINARY WHEN load_extension(v0.c0, v0.c0) THEN TYPEOF(v0.c0) ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (v0.c0))  WHEN json_valid(v0.c0) THEN 0.8403001282130315 WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 COLLATE BINARY WHEN load_extension(v0.c0, v0.c0) THEN TYPEOF(v0.c0) ELSE v0.c0 END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE (+ (v0.c0))  WHEN json_valid(v0.c0) THEN 0.8403001282130315 WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 COLLATE BINARY WHEN load_extension(v0.c0, v0.c0) THEN TYPEOF(v0.c0) ELSE v0.c0 END);
SELECT * FROM t0, vt0 CROSS JOIN v0 ON t0.c2 WHERE (((((((((((((((((CASE WHEN t0.c1 THEN v0.c0 ELSE vt0.c0 END)AND(((vt0.c0)>=(t0.c0)))))OR(CAST(t0.c0 AS INTEGER))))OR((((vt0.c0, vt0.c0, t0.c0))<((t0.c2, t0.c0, t0.c0))))))AND(((v0.c0) IS TRUE))))AND((- (t0.c0)))))OR(x'')))OR(CAST(vt0.c0 AS BLOB))))AND(LAST_INSERT_ROWID()))) ORDER BY ((+ (t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((((((((((((((CASE WHEN t0.c1 THEN v0.c0 ELSE vt0.c0 END)AND(((vt0.c0)>=(t0.c0)))))OR(CAST(t0.c0 AS INTEGER))))OR((((vt0.c0, vt0.c0, t0.c0))<((t0.c2, t0.c0, t0.c0))))))AND(((v0.c0) IS TRUE))))AND((- (t0.c0)))))OR(x'')))OR(CAST(vt0.c0 AS BLOB))))AND(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN v0 ON t0.c2 ORDER BY ((+ (t0.c0)) IN ()));
SELECT * FROM t0, vt0 CROSS JOIN v0 ON t0.c2 WHERE (((((((((((((((((CASE WHEN t0.c1 THEN v0.c0 ELSE vt0.c0 END)AND(((vt0.c0)>=(t0.c0)))))OR(CAST(t0.c0 AS INTEGER))))OR((((vt0.c0, vt0.c0, t0.c0))<((t0.c2, t0.c0, t0.c0))))))AND(((v0.c0) IS TRUE))))AND((- (t0.c0)))))OR(x'')))OR(CAST(vt0.c0 AS BLOB))))AND(LAST_INSERT_ROWID()))) ORDER BY ((+ (t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((((((((((((((CASE WHEN t0.c1 THEN v0.c0 ELSE vt0.c0 END)AND(((vt0.c0)>=(t0.c0)))))OR(CAST(t0.c0 AS INTEGER))))OR((((vt0.c0, vt0.c0, t0.c0))<((t0.c2, t0.c0, t0.c0))))))AND(((v0.c0) IS TRUE))))AND((- (t0.c0)))))OR(x'')))OR(CAST(vt0.c0 AS BLOB))))AND(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN v0 ON t0.c2 ORDER BY ((+ (t0.c0)) IN ()));
SELECT * FROM t0, vt0 CROSS JOIN v0 ON t0.c2 WHERE (((((((((((((((((CASE WHEN t0.c1 THEN v0.c0 ELSE vt0.c0 END)AND(((vt0.c0)>=(t0.c0)))))OR(CAST(t0.c0 AS INTEGER))))OR((((vt0.c0, vt0.c0, t0.c0))<((t0.c2, t0.c0, t0.c0))))))AND(((v0.c0) IS TRUE))))AND((- (t0.c0)))))OR(x'')))OR(CAST(vt0.c0 AS BLOB))))AND(LAST_INSERT_ROWID()))) ORDER BY ((+ (t0.c0)) IN ());
SELECT * FROM v0, vt0 WHERE (CAST(((0.09130455096460233) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.09130455096460233) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(((0.09130455096460233) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.09130455096460233) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(((0.09130455096460233) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (-1.99080404E9);
SELECT SUM(count) FROM (SELECT ((-1.99080404E9) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (-1.99080404E9);
SELECT SUM(count) FROM (SELECT ((-1.99080404E9) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (-1.99080404E9);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((vt0.c0))));
SELECT ALL * FROM vt0, t0 WHERE (CAST(CAST(t0.c1 AS NUMERIC) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c1 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST(CAST(t0.c1 AS NUMERIC) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c1 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST(CAST(t0.c1 AS NUMERIC) AS REAL));
SELECT ALL * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))==((((v0.c0))>=((v0.c0)))))) ORDER BY HEX(DISTINCT (((v0.c0))<=((v0.c0)))) ASC, '0.6078147757940974'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))=((((v0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY HEX(DISTINCT (((v0.c0))<=((v0.c0)))) ASC, '0.6078147757940974'  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))==((((v0.c0))>=((v0.c0)))))) ORDER BY HEX(DISTINCT (((v0.c0))<=((v0.c0)))) ASC, '0.6078147757940974'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))=((((v0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY HEX(DISTINCT (((v0.c0))<=((v0.c0)))) ASC, '0.6078147757940974'  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))==((((v0.c0))>=((v0.c0)))))) ORDER BY HEX(DISTINCT (((v0.c0))<=((v0.c0)))) ASC, '0.6078147757940974'  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)|(t0.c1))) BETWEEN (t0.c2 COLLATE NOCASE) AND ((((t0.c2)) BETWEEN (('_f5')) AND ((t0.c0)))))) ORDER BY ('nnyC' IN ());
SELECT SUM(count) FROM (SELECT ((((((t0.c2)|(t0.c1))) BETWEEN (t0.c2 COLLATE NOCASE) AND ((((t0.c2)) BETWEEN (('_f5')) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ('nnyC' IN ()));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)|(t0.c1))) BETWEEN (t0.c2 COLLATE NOCASE) AND ((((t0.c2)) BETWEEN (('_f5')) AND ((t0.c0)))))) ORDER BY ('nnyC' IN ());
SELECT SUM(count) FROM (SELECT ((((((t0.c2)|(t0.c1))) BETWEEN (t0.c2 COLLATE NOCASE) AND ((((t0.c2)) BETWEEN (('_f5')) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ('nnyC' IN ()));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)|(t0.c1))) BETWEEN (t0.c2 COLLATE NOCASE) AND ((((t0.c2)) BETWEEN (('_f5')) AND ((t0.c0)))))) ORDER BY ('nnyC' IN ());
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC) ASC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC) ASC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC) ASC;
SELECT * FROM vt0, v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))  WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(v0.c0 AS INTEGER) END) ORDER BY ((((v0.c0)|(vt0.c0))) NOTNULL) DESC  NULLS FIRST, ((((v0.c0)||(v0.c0)))/(v0.c0)) DESC  NULLS FIRST, ((((((v0.c0)AND(x'')))OR(vt0.c0))) NOT BETWEEN ((~ (v0.c0))) AND (COALESCE(vt0.c0, v0.c0, v0.c0, v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))  WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(v0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)|(vt0.c0))) NOTNULL) DESC  NULLS FIRST, ((((v0.c0)||(v0.c0)))/(v0.c0)) DESC  NULLS FIRST, ((((((v0.c0)AND(x'')))OR(vt0.c0))) NOT BETWEEN ((~ (v0.c0))) AND (COALESCE(vt0.c0, v0.c0, v0.c0, v0.c0)))  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))  WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(v0.c0 AS INTEGER) END) ORDER BY ((((v0.c0)|(vt0.c0))) NOTNULL) DESC  NULLS FIRST, ((((v0.c0)||(v0.c0)))/(v0.c0)) DESC  NULLS FIRST, ((((((v0.c0)AND(x'')))OR(vt0.c0))) NOT BETWEEN ((~ (v0.c0))) AND (COALESCE(vt0.c0, v0.c0, v0.c0, v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))  WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(v0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)|(vt0.c0))) NOTNULL) DESC  NULLS FIRST, ((((v0.c0)||(v0.c0)))/(v0.c0)) DESC  NULLS FIRST, ((((((v0.c0)AND(x'')))OR(vt0.c0))) NOT BETWEEN ((~ (v0.c0))) AND (COALESCE(vt0.c0, v0.c0, v0.c0, v0.c0)))  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))  WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(v0.c0 AS INTEGER) END) ORDER BY ((((v0.c0)|(vt0.c0))) NOTNULL) DESC  NULLS FIRST, ((((v0.c0)||(v0.c0)))/(v0.c0)) DESC  NULLS FIRST, ((((((v0.c0)AND(x'')))OR(vt0.c0))) NOT BETWEEN ((~ (v0.c0))) AND (COALESCE(vt0.c0, v0.c0, v0.c0, v0.c0)))  NULLS LAST;
SELECT * FROM t0, vt0 FULL OUTER JOIN v0 ON ((((1)AND(((t0.c1) NOT NULL))))AND(t0.c2)) WHERE (((vt0.c0)AND(t0.c1)) COLLATE RTRIM) ORDER BY ((t0.c2)>>(t0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)AND(t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON ((((1)AND(((t0.c1) NOT NULL))))AND(t0.c2)) ORDER BY ((t0.c2)>>(t0.c0)) COLLATE RTRIM);
SELECT * FROM t0, vt0 FULL OUTER JOIN v0 ON ((((1)AND(((t0.c1) NOT NULL))))AND(t0.c2)) WHERE (((vt0.c0)AND(t0.c1)) COLLATE RTRIM) ORDER BY ((t0.c2)>>(t0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)AND(t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON ((((1)AND(((t0.c1) NOT NULL))))AND(t0.c2)) ORDER BY ((t0.c2)>>(t0.c0)) COLLATE RTRIM);
SELECT * FROM t0, vt0 FULL OUTER JOIN v0 ON ((((1)AND(((t0.c1) NOT NULL))))AND(t0.c2)) WHERE (((vt0.c0)AND(t0.c1)) COLLATE RTRIM) ORDER BY ((t0.c2)>>(t0.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM v0 WHERE (((((NULL) ISNULL)) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN '' END) AND (json_remove(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))) ORDER BY ((((((((((((GLOB(v0.c0, v0.c0))OR(LIKELY(v0.c0))))OR((((v0.c0))<=((v0.c0))))))AND(LTRIM(v0.c0, v0.c0))))OR(NULL)))OR(CAST(NULL AS BLOB))))OR((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST, (((v0.c0) BETWEEN (0x19f1e3f2) AND (v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL) ISNULL)) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN '' END) AND (json_remove(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((GLOB(v0.c0, v0.c0))OR(LIKELY(v0.c0))))OR((((v0.c0))<=((v0.c0))))))AND(LTRIM(v0.c0, v0.c0))))OR(NULL)))OR(CAST(NULL AS BLOB))))OR((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST, (((v0.c0) BETWEEN (0x19f1e3f2) AND (v0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((NULL) ISNULL)) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN '' END) AND (json_remove(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))) ORDER BY ((((((((((((GLOB(v0.c0, v0.c0))OR(LIKELY(v0.c0))))OR((((v0.c0))<=((v0.c0))))))AND(LTRIM(v0.c0, v0.c0))))OR(NULL)))OR(CAST(NULL AS BLOB))))OR((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST, (((v0.c0) BETWEEN (0x19f1e3f2) AND (v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL) ISNULL)) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN '' END) AND (json_remove(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((GLOB(v0.c0, v0.c0))OR(LIKELY(v0.c0))))OR((((v0.c0))<=((v0.c0))))))AND(LTRIM(v0.c0, v0.c0))))OR(NULL)))OR(CAST(NULL AS BLOB))))OR((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST, (((v0.c0) BETWEEN (0x19f1e3f2) AND (v0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))AND(t0.c0)) IN (t0.c0, ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))AND(t0.c0)) IN (t0.c0, ((t0.c2) BETWEEN (t0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))AND(t0.c0)) IN (t0.c0, ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))AND(t0.c0)) IN (t0.c0, ((t0.c2) BETWEEN (t0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))AND(t0.c0)) IN (t0.c0, ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))));
SELECT ALL * FROM t0, v0 WHERE (x'') ORDER BY ((t0.c1)>=(((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c0))))  NULLS FIRST, (((((t0.c0) NOT BETWEEN (x'') AND (t0.c1))))==(((((v0.c0))<((NULL)))))) DESC, (((v0.c0) IS FALSE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, v0 ORDER BY ((t0.c1)>=(((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c0))))  NULLS FIRST, (((((t0.c0) NOT BETWEEN (x'') AND (t0.c1))))==(((((v0.c0))<((NULL)))))) DESC, (((v0.c0) IS FALSE) IN ()) DESC);
SELECT ALL * FROM t0, v0 WHERE (x'') ORDER BY ((t0.c1)>=(((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c0))))  NULLS FIRST, (((((t0.c0) NOT BETWEEN (x'') AND (t0.c1))))==(((((v0.c0))<((NULL)))))) DESC, (((v0.c0) IS FALSE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, v0 ORDER BY ((t0.c1)>=(((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c0))))  NULLS FIRST, (((((t0.c0) NOT BETWEEN (x'') AND (t0.c1))))==(((((v0.c0))<((NULL)))))) DESC, (((v0.c0) IS FALSE) IN ()) DESC);
SELECT ALL * FROM t0, v0 WHERE (x'') ORDER BY ((t0.c1)>=(((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c0))))  NULLS FIRST, (((((t0.c0) NOT BETWEEN (x'') AND (t0.c1))))==(((((v0.c0))<((NULL)))))) DESC, (((v0.c0) IS FALSE) IN ()) DESC;
SELECT ALL * FROM v0, t0 WHERE ('-1094981087') ORDER BY ((((t0.c1) NOT BETWEEN ('') AND (t0.c1))) IS FALSE)  NULLS LAST, (((((-1148107324)) BETWEEN ((t0.c2)) AND ((t0.c2)))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) AND (((((((((t0.c1)OR(t0.c0)))AND(v0.c0)))OR(t0.c2)))AND(t0.c0)))) ASC  NULLS LAST, ((t0.c1 IN ()) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1094981087') IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c1) NOT BETWEEN ('') AND (t0.c1))) IS FALSE)  NULLS LAST, (((((-1148107324)) BETWEEN ((t0.c2)) AND ((t0.c2)))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) AND (((((((((t0.c1)OR(t0.c0)))AND(v0.c0)))OR(t0.c2)))AND(t0.c0)))) ASC  NULLS LAST, ((t0.c1 IN ()) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE ('-1094981087') ORDER BY ((((t0.c1) NOT BETWEEN ('') AND (t0.c1))) IS FALSE)  NULLS LAST, (((((-1148107324)) BETWEEN ((t0.c2)) AND ((t0.c2)))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) AND (((((((((t0.c1)OR(t0.c0)))AND(v0.c0)))OR(t0.c2)))AND(t0.c0)))) ASC  NULLS LAST, ((t0.c1 IN ()) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1094981087') IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c1) NOT BETWEEN ('') AND (t0.c1))) IS FALSE)  NULLS LAST, (((((-1148107324)) BETWEEN ((t0.c2)) AND ((t0.c2)))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) AND (((((((((t0.c1)OR(t0.c0)))AND(v0.c0)))OR(t0.c2)))AND(t0.c0)))) ASC  NULLS LAST, ((t0.c1 IN ()) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE ('-1094981087') ORDER BY ((((t0.c1) NOT BETWEEN ('') AND (t0.c1))) IS FALSE)  NULLS LAST, (((((-1148107324)) BETWEEN ((t0.c2)) AND ((t0.c2)))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) AND (((((((((t0.c1)OR(t0.c0)))AND(v0.c0)))OR(t0.c2)))AND(t0.c0)))) ASC  NULLS LAST, ((t0.c1 IN ()) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT ALL * FROM v0, vt0, t0 WHERE (((((v0.c0) IS TRUE)) BETWEEN (v0.c0) AND (((t0.c0)/(v0.c0))))) ORDER BY (((NULL)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) COLLATE BINARY, ((((t0.c2) IS TRUE))<(0.2013412757760743)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) BETWEEN (v0.c0) AND (((t0.c0)/(v0.c0))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((NULL)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) COLLATE BINARY, ((((t0.c2) IS TRUE))<(0.2013412757760743)) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt0, t0 WHERE (((((v0.c0) IS TRUE)) BETWEEN (v0.c0) AND (((t0.c0)/(v0.c0))))) ORDER BY (((NULL)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) COLLATE BINARY, ((((t0.c2) IS TRUE))<(0.2013412757760743)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) BETWEEN (v0.c0) AND (((t0.c0)/(v0.c0))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((NULL)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) COLLATE BINARY, ((((t0.c2) IS TRUE))<(0.2013412757760743)) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt0, t0 WHERE (((((v0.c0) IS TRUE)) BETWEEN (v0.c0) AND (((t0.c0)/(v0.c0))))) ORDER BY (((NULL)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) COLLATE BINARY, ((((t0.c2) IS TRUE))<(0.2013412757760743)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((t0.c0)) NOT BETWEEN ((0.7405322938171481)) AND ((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)) NOT BETWEEN ((0.7405322938171481)) AND ((t0.c0))) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((t0.c0)) NOT BETWEEN ((0.7405322938171481)) AND ((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)) NOT BETWEEN ((0.7405322938171481)) AND ((t0.c0))) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((t0.c0)) NOT BETWEEN ((0.7405322938171481)) AND ((t0.c0))) IN ()));
SELECT * FROM vt0 WHERE ('818915379') ORDER BY ((((((vt0.c0)AND('')))AND(vt0.c0)))<<(SUBSTR(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT (('818915379') IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND('')))AND(vt0.c0)))<<(SUBSTR(vt0.c0, vt0.c0))));
SELECT * FROM vt0 WHERE ('818915379') ORDER BY ((((((vt0.c0)AND('')))AND(vt0.c0)))<<(SUBSTR(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT (('818915379') IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND('')))AND(vt0.c0)))<<(SUBSTR(vt0.c0, vt0.c0))));
SELECT * FROM vt0 WHERE ('818915379') ORDER BY ((((((vt0.c0)AND('')))AND(vt0.c0)))<<(SUBSTR(vt0.c0, vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((CASE t0.c2  WHEN v0.c0 THEN t0.c0 ELSE -1.411868375E9 END, v0.c0, ((t0.c0) NOTNULL)))<=(((t0.c1 IN ()), CAST(vt0.c0 AS REAL), 0Xfffffffff1e68ecd))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE t0.c2  WHEN v0.c0 THEN t0.c0 ELSE -1.411868375E9 END, v0.c0, ((t0.c0) NOTNULL)))<=(((t0.c1 IN ()), CAST(vt0.c0 AS REAL), 0Xfffffffff1e68ecd)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((CASE t0.c2  WHEN v0.c0 THEN t0.c0 ELSE -1.411868375E9 END, v0.c0, ((t0.c0) NOTNULL)))<=(((t0.c1 IN ()), CAST(vt0.c0 AS REAL), 0Xfffffffff1e68ecd))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE t0.c2  WHEN v0.c0 THEN t0.c0 ELSE -1.411868375E9 END, v0.c0, ((t0.c0) NOTNULL)))<=(((t0.c1 IN ()), CAST(vt0.c0 AS REAL), 0Xfffffffff1e68ecd)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((CASE t0.c2  WHEN v0.c0 THEN t0.c0 ELSE -1.411868375E9 END, v0.c0, ((t0.c0) NOTNULL)))<=(((t0.c1 IN ()), CAST(vt0.c0 AS REAL), 0Xfffffffff1e68ecd))));
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN t0 WHERE (((((v0.c0) NOT BETWEEN (t0.c1) AND (v0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (-1726515349)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (t0.c1) AND (v0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (-1726515349))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN t0 WHERE (((((v0.c0) NOT BETWEEN (t0.c1) AND (v0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (-1726515349)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (t0.c1) AND (v0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (-1726515349))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN t0 WHERE (((((v0.c0) NOT BETWEEN (t0.c1) AND (v0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (-1726515349)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (x'') AND (CASE WHEN '-419580329' THEN t0.c2 ELSE 'L봌' END)) FULL OUTER JOIN t0 ON CAST(t0.c2 AS INTEGER) COLLATE BINARY WHERE (((CAST(t0.c0 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (x'') AND (CASE WHEN '-419580329' THEN t0.c2 ELSE 'L봌' END)) FULL OUTER JOIN t0 ON CAST(t0.c2 AS INTEGER) COLLATE BINARY);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (x'') AND (CASE WHEN '-419580329' THEN t0.c2 ELSE 'L봌' END)) FULL OUTER JOIN t0 ON CAST(t0.c2 AS INTEGER) COLLATE BINARY WHERE (((CAST(t0.c0 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (x'') AND (CASE WHEN '-419580329' THEN t0.c2 ELSE 'L봌' END)) FULL OUTER JOIN t0 ON CAST(t0.c2 AS INTEGER) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((((v0.c0)OR(t0.c0)))AND(x'')))/(vt0.c0 COLLATE RTRIM))) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))<=((((t0.c2)>=(v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(t0.c0)))AND(x'')))/(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))<=((((t0.c2)>=(v0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((((v0.c0)OR(t0.c0)))AND(x'')))/(vt0.c0 COLLATE RTRIM))) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))<=((((t0.c2)>=(v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(t0.c0)))AND(x'')))/(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))<=((((t0.c2)>=(v0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((((v0.c0)OR(t0.c0)))AND(x'')))/(vt0.c0 COLLATE RTRIM))) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))<=((((t0.c2)>=(v0.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (LAST_INSERT_ROWID()) ORDER BY CAST(((((t0.c1)OR(t0.c1)))AND(-7.46766879E8)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0 ORDER BY CAST(((((t0.c1)OR(t0.c1)))AND(-7.46766879E8)) AS TEXT) DESC);
SELECT COUNT(*) FROM t0 WHERE (LAST_INSERT_ROWID()) ORDER BY CAST(((((t0.c1)OR(t0.c1)))AND(-7.46766879E8)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0 ORDER BY CAST(((((t0.c1)OR(t0.c1)))AND(-7.46766879E8)) AS TEXT) DESC);
SELECT COUNT(*) FROM t0 WHERE (LAST_INSERT_ROWID()) ORDER BY CAST(((((t0.c1)OR(t0.c1)))AND(-7.46766879E8)) AS TEXT) DESC;
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, t0, vt0 WHERE (CAST(0x20059837 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(0X20059837 AS REAL)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, t0, vt0 WHERE (CAST(0x20059837 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(0X20059837 AS REAL)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, t0, vt0 WHERE (CAST(0x20059837 AS REAL));
SELECT * FROM v0 WHERE ((((NOT (v0.c0))) IS TRUE)) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY x'' DESC);
SELECT * FROM v0 WHERE ((((NOT (v0.c0))) IS TRUE)) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY x'' DESC);
SELECT * FROM v0 WHERE ((((NOT (v0.c0))) IS TRUE)) ORDER BY x'' DESC;
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((((t0.c1, t0.c0, t0.c1)) BETWEEN ((t0.c0, v0.c0, t0.c0)) AND ((vt0.c0, t0.c1, 0.0523389829929406)))) IS FALSE)) ORDER BY CAST(((((t0.c0)AND(vt0.c0)))AND(vt0.c0)) AS BLOB) DESC  NULLS LAST, (((vt0.c0, v0.c0, t0.c2, NULL, t0.c2)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c2 END, (NULL IN (t0.c0, t0.c2)), ((v0.c0)==('908403910')), t0.c1, t0.c1 COLLATE BINARY)) AND ((((t0.c0)AND(v0.c0)), ((t0.c0)||(t0.c1)), x'', 1799967839, ((((t0.c0)AND(vt0.c0)))OR(t0.c0))))), (((((((t0.c0))<>((NULL))))AND((((t0.c0))>((vt0.c0))))))OR(v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c1, t0.c0, t0.c1)) BETWEEN ((t0.c0, v0.c0, t0.c0)) AND ((vt0.c0, t0.c1, 0.0523389829929406)))) IS FALSE)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CAST(((((t0.c0)AND(vt0.c0)))AND(vt0.c0)) AS BLOB) DESC  NULLS LAST, (((vt0.c0, v0.c0, t0.c2, NULL, t0.c2)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c2 END, (NULL IN (t0.c0, t0.c2)), ((v0.c0)=('908403910')), t0.c1, t0.c1 COLLATE BINARY)) AND ((((t0.c0)AND(v0.c0)), ((t0.c0)||(t0.c1)), x'', 1799967839, ((((t0.c0)AND(vt0.c0)))OR(t0.c0))))), (((((((t0.c0))<>((NULL))))AND((((t0.c0))>((vt0.c0))))))OR(v0.c0)) ASC);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((((t0.c1, t0.c0, t0.c1)) BETWEEN ((t0.c0, v0.c0, t0.c0)) AND ((vt0.c0, t0.c1, 0.0523389829929406)))) IS FALSE)) ORDER BY CAST(((((t0.c0)AND(vt0.c0)))AND(vt0.c0)) AS BLOB) DESC  NULLS LAST, (((vt0.c0, v0.c0, t0.c2, NULL, t0.c2)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c2 END, (NULL IN (t0.c0, t0.c2)), ((v0.c0)==('908403910')), t0.c1, t0.c1 COLLATE BINARY)) AND ((((t0.c0)AND(v0.c0)), ((t0.c0)||(t0.c1)), x'', 1799967839, ((((t0.c0)AND(vt0.c0)))OR(t0.c0))))), (((((((t0.c0))<>((NULL))))AND((((t0.c0))>((vt0.c0))))))OR(v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c1, t0.c0, t0.c1)) BETWEEN ((t0.c0, v0.c0, t0.c0)) AND ((vt0.c0, t0.c1, 0.0523389829929406)))) IS FALSE)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CAST(((((t0.c0)AND(vt0.c0)))AND(vt0.c0)) AS BLOB) DESC  NULLS LAST, (((vt0.c0, v0.c0, t0.c2, NULL, t0.c2)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c2 END, (NULL IN (t0.c0, t0.c2)), ((v0.c0)=('908403910')), t0.c1, t0.c1 COLLATE BINARY)) AND ((((t0.c0)AND(v0.c0)), ((t0.c0)||(t0.c1)), x'', 1799967839, ((((t0.c0)AND(vt0.c0)))OR(t0.c0))))), (((((((t0.c0))<>((NULL))))AND((((t0.c0))>((vt0.c0))))))OR(v0.c0)) ASC);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((((t0.c1, t0.c0, t0.c1)) BETWEEN ((t0.c0, v0.c0, t0.c0)) AND ((vt0.c0, t0.c1, 0.0523389829929406)))) IS FALSE)) ORDER BY CAST(((((t0.c0)AND(vt0.c0)))AND(vt0.c0)) AS BLOB) DESC  NULLS LAST, (((vt0.c0, v0.c0, t0.c2, NULL, t0.c2)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c2 END, (NULL IN (t0.c0, t0.c2)), ((v0.c0)==('908403910')), t0.c1, t0.c1 COLLATE BINARY)) AND ((((t0.c0)AND(v0.c0)), ((t0.c0)||(t0.c1)), x'', 1799967839, ((((t0.c0)AND(vt0.c0)))OR(t0.c0))))), (((((((t0.c0))<>((NULL))))AND((((t0.c0))>((vt0.c0))))))OR(v0.c0)) ASC;
SELECT * FROM v0 WHERE (x'') ORDER BY 0.7184444909676391  NULLS LAST, PRINTF(v0.c0) COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY 0.7184444909676391  NULLS LAST, PRINTF(v0.c0) COLLATE NOCASE COLLATE BINARY);
SELECT * FROM v0 WHERE (x'') ORDER BY 0.7184444909676391  NULLS LAST, PRINTF(v0.c0) COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY 0.7184444909676391  NULLS LAST, PRINTF(v0.c0) COLLATE NOCASE COLLATE BINARY);
SELECT * FROM v0 WHERE (x'') ORDER BY 0.7184444909676391  NULLS LAST, PRINTF(v0.c0) COLLATE NOCASE COLLATE BINARY;
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON CAST(NULL AS BLOB) CROSS JOIN t0 ON (((- (vt0.c0)))OR(((v0.c0)OR(vt0.c0)))) WHERE (CAST(TOTAL_CHANGES() AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TOTAL_CHANGES() AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON CAST(NULL AS BLOB) CROSS JOIN t0 ON (((- (vt0.c0)))OR(((v0.c0)OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON CAST(NULL AS BLOB) CROSS JOIN t0 ON (((- (vt0.c0)))OR(((v0.c0)OR(vt0.c0)))) WHERE (CAST(TOTAL_CHANGES() AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TOTAL_CHANGES() AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON CAST(NULL AS BLOB) CROSS JOIN t0 ON (((- (vt0.c0)))OR(((v0.c0)OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON CAST(NULL AS BLOB) CROSS JOIN t0 ON (((- (vt0.c0)))OR(((v0.c0)OR(vt0.c0)))) WHERE (CAST(TOTAL_CHANGES() AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (IFNULL(vt0.c0 COLLATE RTRIM, (~ (vt0.c0)))) ORDER BY ((vt0.c0)%((vt0.c0 IN (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)<(vt0.c0))) BETWEEN (vt0.c0) AND (CAST(0.4105314737296052 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.c0 COLLATE RTRIM, (~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)%((vt0.c0 IN (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)<(vt0.c0))) BETWEEN (vt0.c0) AND (CAST(0.4105314737296052 AS BLOB))) ASC);
SELECT ALL * FROM vt0 WHERE (IFNULL(vt0.c0 COLLATE RTRIM, (~ (vt0.c0)))) ORDER BY ((vt0.c0)%((vt0.c0 IN (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)<(vt0.c0))) BETWEEN (vt0.c0) AND (CAST(0.4105314737296052 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.c0 COLLATE RTRIM, (~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)%((vt0.c0 IN (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)<(vt0.c0))) BETWEEN (vt0.c0) AND (CAST(0.4105314737296052 AS BLOB))) ASC);
SELECT ALL * FROM vt0 WHERE (IFNULL(vt0.c0 COLLATE RTRIM, (~ (vt0.c0)))) ORDER BY ((vt0.c0)%((vt0.c0 IN (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)<(vt0.c0))) BETWEEN (vt0.c0) AND (CAST(0.4105314737296052 AS BLOB))) ASC;
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN t0 WHERE ((((vt0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)) AND ((((vt0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)) AND ((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN t0 WHERE ((((vt0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)) AND ((((vt0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)) AND ((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN t0 WHERE ((((vt0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)) AND ((((vt0.c0) ISNULL)))));
SELECT ALL * FROM vt0 WHERE (0.026113443662795) ORDER BY vt0.c0, ((((0.912087501309635 IN (vt0.c0, vt0.c0))))!=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.026113443662795) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((0.912087501309635 IN (vt0.c0, vt0.c0))))<>(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (0.026113443662795) ORDER BY vt0.c0, ((((0.912087501309635 IN (vt0.c0, vt0.c0))))!=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.026113443662795) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((0.912087501309635 IN (vt0.c0, vt0.c0))))<>(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (0.026113443662795) ORDER BY vt0.c0, ((((0.912087501309635 IN (vt0.c0, vt0.c0))))!=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((~ (vt0.c0)))||(((v0.c0)<(t0.c1)))) LEFT OUTER JOIN vt0 ON (((t0.c0 IN ()))|((((t0.c2))>((t0.c2))))) WHERE (((TRIM(t0.c1))LIKE(((((vt0.c0)AND(x'')))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(t0.c1))LIKE(((((vt0.c0)AND(x'')))OR(v0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((~ (vt0.c0)))||(((v0.c0)<(t0.c1)))) LEFT OUTER JOIN vt0 ON (((t0.c0 IN ()))|((((t0.c2))>((t0.c2))))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((~ (vt0.c0)))||(((v0.c0)<(t0.c1)))) LEFT OUTER JOIN vt0 ON (((t0.c0 IN ()))|((((t0.c2))>((t0.c2))))) WHERE (((TRIM(t0.c1))LIKE(((((vt0.c0)AND(x'')))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(t0.c1))LIKE(((((vt0.c0)AND(x'')))OR(v0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((~ (vt0.c0)))||(((v0.c0)<(t0.c1)))) LEFT OUTER JOIN vt0 ON (((t0.c0 IN ()))|((((t0.c2))>((t0.c2))))));
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (+ (0.3775027648608542)) WHEN LIKELY(DISTINCT vt0.c0) THEN vt0.c0 WHEN (((vt0.c0))<>((vt0.c0))) THEN (vt0.c0 IN (vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END) ORDER BY ((CHAR(vt0.c0, vt0.c0, vt0.c0))+((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS BLOB)  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (+ (0.3775027648608542)) WHEN LIKELY(DISTINCT vt0.c0) THEN vt0.c0 WHEN (((vt0.c0))<>((vt0.c0))) THEN (vt0.c0 IN (vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY ((CHAR(vt0.c0, vt0.c0, vt0.c0))+((vt0.c0 IN ()))) ASC);
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (+ (0.3775027648608542)) WHEN LIKELY(DISTINCT vt0.c0) THEN vt0.c0 WHEN (((vt0.c0))<>((vt0.c0))) THEN (vt0.c0 IN (vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END) ORDER BY ((CHAR(vt0.c0, vt0.c0, vt0.c0))+((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS BLOB)  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (+ (0.3775027648608542)) WHEN LIKELY(DISTINCT vt0.c0) THEN vt0.c0 WHEN (((vt0.c0))<>((vt0.c0))) THEN (vt0.c0 IN (vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY ((CHAR(vt0.c0, vt0.c0, vt0.c0))+((vt0.c0 IN ()))) ASC);
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (+ (0.3775027648608542)) WHEN LIKELY(DISTINCT vt0.c0) THEN vt0.c0 WHEN (((vt0.c0))<>((vt0.c0))) THEN (vt0.c0 IN (vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END) ORDER BY ((CHAR(vt0.c0, vt0.c0, vt0.c0))+((vt0.c0 IN ()))) ASC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ ('1898444121')));
SELECT SUM(count) FROM (SELECT (((+ ('1898444121'))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ ('1898444121')));
SELECT SUM(count) FROM (SELECT (((+ ('1898444121'))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ ('1898444121')));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((vt0.c0)==(t0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)==(t0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((vt0.c0)==(t0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)==(t0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((vt0.c0)==(t0.c2)) AS TEXT));
SELECT * FROM v0, vt0 WHERE ((NOT (((v0.c0)AND(v0.c0))))) ORDER BY (((v0.c0)) BETWEEN ((vt0.c0)) AND ((((vt0.c0) IS FALSE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0)) BETWEEN ((vt0.c0)) AND ((((vt0.c0) IS FALSE))))  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((NOT (((v0.c0)AND(v0.c0))))) ORDER BY (((v0.c0)) BETWEEN ((vt0.c0)) AND ((((vt0.c0) IS FALSE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0)) BETWEEN ((vt0.c0)) AND ((((vt0.c0) IS FALSE))))  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((NOT (((v0.c0)AND(v0.c0))))) ORDER BY (((v0.c0)) BETWEEN ((vt0.c0)) AND ((((vt0.c0) IS FALSE))))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(t0.c2 AS BLOB) AS REAL)) ORDER BY (((t0.c1 IN ())) NOT BETWEEN (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2))) AND ((+ (vt0.c0)))), t0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c2 AS BLOB) AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c1 IN ())) NOT BETWEEN (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2))) AND ((+ (vt0.c0)))), t0.c2 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(t0.c2 AS BLOB) AS REAL)) ORDER BY (((t0.c1 IN ())) NOT BETWEEN (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2))) AND ((+ (vt0.c0)))), t0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c2 AS BLOB) AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c1 IN ())) NOT BETWEEN (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2))) AND ((+ (vt0.c0)))), t0.c2 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(t0.c2 AS BLOB) AS REAL)) ORDER BY (((t0.c1 IN ())) NOT BETWEEN (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2))) AND ((+ (vt0.c0)))), t0.c2 ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ('-1411868375');
SELECT SUM(count) FROM (SELECT (('-1411868375') IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ('-1411868375');
SELECT SUM(count) FROM (SELECT (('-1411868375') IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ('-1411868375');
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i2 RIGHT OUTER JOIN v0 ON (((v0.c0 COLLATE BINARY, v0.c0, ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2))))<=((t0.c2, CAST(t0.c0 AS TEXT), CASE WHEN t0.c1 THEN vt0.c0 END))) INNER JOIN t0 ON CASE ((t0.c1)LIKE(t0.c0))  WHEN ((t0.c1)&(x'')) THEN (t0.c2 IN ()) END WHERE (((((((((((vt0.c0) BETWEEN (t0.c2) AND (t0.c0)))AND(CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE '-627607713' END)))OR(CAST(t0.c2 AS INTEGER))))AND(t0.c2)))OR((0X489c60c IN (t0.c0))))) ORDER BY ((t0.c2) NOT BETWEEN (((((((((((((NULL)AND(v0.c0)))AND('1693729598')))OR(t0.c1)))AND(v0.c0)))OR(t0.c2)))AND(t0.c0))) AND (((t0.c0) BETWEEN (t0.c2) AND (-1119332432))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) BETWEEN (t0.c2) AND (t0.c0)))AND(CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE '-627607713' END)))OR(CAST(t0.c2 AS INTEGER))))AND(t0.c2)))OR((0X489c60c IN (t0.c0))))) IS TRUE)  as count FROM vt0 INDEXED BY i2 RIGHT OUTER JOIN v0 ON (((v0.c0 COLLATE BINARY, v0.c0, ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2))))<=((t0.c2, CAST(t0.c0 AS TEXT), CASE WHEN t0.c1 THEN vt0.c0 END))) INNER JOIN t0 ON CASE ((t0.c1)LIKE(t0.c0))  WHEN ((t0.c1)&(x'')) THEN (t0.c2 IN ()) END ORDER BY ((t0.c2) NOT BETWEEN (((((((((((((NULL)AND(v0.c0)))AND('1693729598')))OR(t0.c1)))AND(v0.c0)))OR(t0.c2)))AND(t0.c0))) AND (((t0.c0) BETWEEN (t0.c2) AND (-1119332432)))));
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i2 RIGHT OUTER JOIN v0 ON (((v0.c0 COLLATE BINARY, v0.c0, ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2))))<=((t0.c2, CAST(t0.c0 AS TEXT), CASE WHEN t0.c1 THEN vt0.c0 END))) INNER JOIN t0 ON CASE ((t0.c1)LIKE(t0.c0))  WHEN ((t0.c1)&(x'')) THEN (t0.c2 IN ()) END WHERE (((((((((((vt0.c0) BETWEEN (t0.c2) AND (t0.c0)))AND(CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE '-627607713' END)))OR(CAST(t0.c2 AS INTEGER))))AND(t0.c2)))OR((0X489c60c IN (t0.c0))))) ORDER BY ((t0.c2) NOT BETWEEN (((((((((((((NULL)AND(v0.c0)))AND('1693729598')))OR(t0.c1)))AND(v0.c0)))OR(t0.c2)))AND(t0.c0))) AND (((t0.c0) BETWEEN (t0.c2) AND (-1119332432))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) BETWEEN (t0.c2) AND (t0.c0)))AND(CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE '-627607713' END)))OR(CAST(t0.c2 AS INTEGER))))AND(t0.c2)))OR((0X489c60c IN (t0.c0))))) IS TRUE)  as count FROM vt0 INDEXED BY i2 RIGHT OUTER JOIN v0 ON (((v0.c0 COLLATE BINARY, v0.c0, ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2))))<=((t0.c2, CAST(t0.c0 AS TEXT), CASE WHEN t0.c1 THEN vt0.c0 END))) INNER JOIN t0 ON CASE ((t0.c1)LIKE(t0.c0))  WHEN ((t0.c1)&(x'')) THEN (t0.c2 IN ()) END ORDER BY ((t0.c2) NOT BETWEEN (((((((((((((NULL)AND(v0.c0)))AND('1693729598')))OR(t0.c1)))AND(v0.c0)))OR(t0.c2)))AND(t0.c0))) AND (((t0.c0) BETWEEN (t0.c2) AND (-1119332432)))));
SELECT * FROM t0, v0 WHERE (((((((((((((((v0.c0)/(v0.c0)))OR(((x'8609') NOT BETWEEN (t0.c0) AND (t0.c2)))))AND(highlight(t0.c1, t0.c0, v0.c0, v0.c0))))OR(CAST(t0.c2 AS BLOB))))OR((((t0.c2))>=((t0.c1))))))OR((((t0.c2))<>((t0.c1))))))AND((t0.c2 IN (v0.c0, '?DJ'))))) ORDER BY ABS(DISTINCT (~ (t0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c0)/(v0.c0)))OR(((x'8609') NOT BETWEEN (t0.c0) AND (t0.c2)))))AND(highlight(t0.c1, t0.c0, v0.c0, v0.c0))))OR(CAST(t0.c2 AS BLOB))))OR((((t0.c2))>=((t0.c1))))))OR((((t0.c2))!=((t0.c1))))))AND((t0.c2 IN (v0.c0, '?DJ'))))) IS TRUE)  as count FROM t0, v0 ORDER BY ABS(DISTINCT (~ (t0.c2))) DESC);
SELECT * FROM t0, v0 WHERE (((((((((((((((v0.c0)/(v0.c0)))OR(((x'8609') NOT BETWEEN (t0.c0) AND (t0.c2)))))AND(highlight(t0.c1, t0.c0, v0.c0, v0.c0))))OR(CAST(t0.c2 AS BLOB))))OR((((t0.c2))>=((t0.c1))))))OR((((t0.c2))<>((t0.c1))))))AND((t0.c2 IN (v0.c0, '?DJ'))))) ORDER BY ABS(DISTINCT (~ (t0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c0)/(v0.c0)))OR(((x'8609') NOT BETWEEN (t0.c0) AND (t0.c2)))))AND(highlight(t0.c1, t0.c0, v0.c0, v0.c0))))OR(CAST(t0.c2 AS BLOB))))OR((((t0.c2))>=((t0.c1))))))OR((((t0.c2))!=((t0.c1))))))AND((t0.c2 IN (v0.c0, '?DJ'))))) IS TRUE)  as count FROM t0, v0 ORDER BY ABS(DISTINCT (~ (t0.c2))) DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((((vt0.c0)>>(v0.c0))) IS FALSE) WHERE (((((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((vt0.c0)>>(v0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((((vt0.c0)>>(v0.c0))) IS FALSE) WHERE (((((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((vt0.c0)>>(v0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((((vt0.c0)>>(v0.c0))) IS FALSE) WHERE (((((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM v0, t0, vt0 WHERE (((((0.17595936638803866) IS FALSE)) NOT NULL)) ORDER BY (((((v0.c0, v0.c0, t0.c0))>((v0.c0, t0.c0, t0.c0)))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((0.17595936638803866) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((((v0.c0, v0.c0, t0.c0))>((v0.c0, t0.c0, t0.c0)))) ISNULL));
SELECT ALL * FROM v0, t0, vt0 WHERE (((((0.17595936638803866) IS FALSE)) NOT NULL)) ORDER BY (((((v0.c0, v0.c0, t0.c0))>((v0.c0, t0.c0, t0.c0)))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((0.17595936638803866) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((((v0.c0, v0.c0, t0.c0))>((v0.c0, t0.c0, t0.c0)))) ISNULL));
SELECT ALL * FROM v0, t0, vt0 WHERE (((((0.17595936638803866) IS FALSE)) NOT NULL)) ORDER BY (((((v0.c0, v0.c0, t0.c0))>((v0.c0, t0.c0, t0.c0)))) ISNULL);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))||(((vt0.c0)=(vt0.c0))))) ORDER BY (((x'2770') NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))||(((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((x'2770') NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))||(((vt0.c0)=(vt0.c0))))) ORDER BY (((x'2770') NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))||(((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((x'2770') NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))||(((vt0.c0)=(vt0.c0))))) ORDER BY (((x'2770') NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0, v0, t0 WHERE (((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1)))))<=((load_extension(t0.c0, vt0.c0))))) ORDER BY (((((vt0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c1)))) BETWEEN (((0.8712927043558283)>(NULL))) AND (CAST(t0.c2 AS BLOB))) DESC, NULLIF(DISTINCT ((v0.c0)!=(vt0.c0)), ((vt0.c0) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1)))))<=((load_extension(t0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((((vt0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c1)))) BETWEEN (((0.8712927043558283)>(NULL))) AND (CAST(t0.c2 AS BLOB))) DESC, NULLIF(DISTINCT ((v0.c0)<>(vt0.c0)), ((vt0.c0) NOTNULL)) DESC);
SELECT ALL * FROM vt0, v0, t0 WHERE (((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1)))))<=((load_extension(t0.c0, vt0.c0))))) ORDER BY (((((vt0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c1)))) BETWEEN (((0.8712927043558283)>(NULL))) AND (CAST(t0.c2 AS BLOB))) DESC, NULLIF(DISTINCT ((v0.c0)!=(vt0.c0)), ((vt0.c0) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1)))))<=((load_extension(t0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((((vt0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c1)))) BETWEEN (((0.8712927043558283)>(NULL))) AND (CAST(t0.c2 AS BLOB))) DESC, NULLIF(DISTINCT ((v0.c0)<>(vt0.c0)), ((vt0.c0) NOTNULL)) DESC);
SELECT ALL * FROM v0, t0, vt0 WHERE (((CAST(v0.c0 AS REAL))+(((t0.c2) ISNULL)))) ORDER BY CAST(vt0.c0 AS BLOB);
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL))+(((t0.c2) ISNULL)))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CAST(vt0.c0 AS BLOB));
SELECT ALL * FROM v0, t0, vt0 WHERE (((CAST(v0.c0 AS REAL))+(((t0.c2) ISNULL)))) ORDER BY CAST(vt0.c0 AS BLOB);
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL))+(((t0.c2) ISNULL)))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CAST(vt0.c0 AS BLOB));
SELECT ALL * FROM v0, t0, vt0 WHERE (((CAST(v0.c0 AS REAL))+(((t0.c2) ISNULL)))) ORDER BY CAST(vt0.c0 AS BLOB);
SELECT * FROM t0, v0, vt0 WHERE (((((vt0.c0)!=(0.5026357679076684)))>>(((t0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(0.5026357679076684)))>>(((t0.c2) NOTNULL)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE (((((vt0.c0)!=(0.5026357679076684)))>>(((t0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(0.5026357679076684)))>>(((t0.c2) NOTNULL)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE (((((vt0.c0)!=(0.5026357679076684)))>>(((t0.c2) NOTNULL))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS FALSE))IS NOT(((v0.c0) IS TRUE)))) ORDER BY (((((v0.c0)OR(v0.c0))))>((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))  NULLS LAST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))IS NOT(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)OR(v0.c0))))>((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))  NULLS LAST, v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS FALSE))IS NOT(((v0.c0) IS TRUE)))) ORDER BY (((((v0.c0)OR(v0.c0))))>((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))  NULLS LAST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))IS NOT(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)OR(v0.c0))))>((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))  NULLS LAST, v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS FALSE))IS NOT(((v0.c0) IS TRUE)))) ORDER BY (((((v0.c0)OR(v0.c0))))>((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))  NULLS LAST, v0.c0  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (((v0.c0) NOT NULL)))) ORDER BY ((CAST(v0.c0 AS NUMERIC))AND((- (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS NUMERIC))AND((- (v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (((v0.c0) NOT NULL)))) ORDER BY ((CAST(v0.c0 AS NUMERIC))AND((- (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS NUMERIC))AND((- (v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (((v0.c0) NOT NULL)))) ORDER BY ((CAST(v0.c0 AS NUMERIC))AND((- (v0.c0)))) DESC;
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((SQLITE_VERSION()))<=((((((((((vt0.c0)AND(v0.c0)))OR(t0.c1)))AND(t0.c0)))AND(t0.c2)))))) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)>=(t0.c1))) AND ((((vt0.c0))!=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((SQLITE_VERSION()))<=((((((((((vt0.c0)AND(v0.c0)))OR(t0.c1)))AND(t0.c0)))AND(t0.c2)))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)>=(t0.c1))) AND ((((vt0.c0))<>((vt0.c0))))));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((SQLITE_VERSION()))<=((((((((((vt0.c0)AND(v0.c0)))OR(t0.c1)))AND(t0.c0)))AND(t0.c2)))))) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)>=(t0.c1))) AND ((((vt0.c0))!=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((SQLITE_VERSION()))<=((((((((((vt0.c0)AND(v0.c0)))OR(t0.c1)))AND(t0.c0)))AND(t0.c2)))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)>=(t0.c1))) AND ((((vt0.c0))<>((vt0.c0))))));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((SQLITE_VERSION()))<=((((((((((vt0.c0)AND(v0.c0)))OR(t0.c1)))AND(t0.c0)))AND(t0.c2)))))) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)>=(t0.c1))) AND ((((vt0.c0))!=((vt0.c0)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT (~ (t0.c2))) FULL OUTER JOIN t0 ON (NOT ('-1215806012')) WHERE (((NULLIF(DISTINCT t0.c1, v0.c0)) NOTNULL)) ORDER BY ((((((((((vt0.c0)+(t0.c2)))OR(CAST(t0.c0 AS REAL))))OR(IFNULL(v0.c0, vt0.c0))))OR((t0.c2 IN ()))))AND(((t0.c0)<=(v0.c0)))) ASC  NULLS FIRST, CAST(CAST(t0.c0 AS BLOB) AS INTEGER) ASC  NULLS LAST, (~ (PRINTF(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT t0.c1, v0.c0)) NOTNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT (~ (t0.c2))) FULL OUTER JOIN t0 ON (NOT ('-1215806012')) ORDER BY ((((((((((vt0.c0)+(t0.c2)))OR(CAST(t0.c0 AS REAL))))OR(IFNULL(v0.c0, vt0.c0))))OR((t0.c2 IN ()))))AND(((t0.c0)<=(v0.c0)))) ASC  NULLS FIRST, CAST(CAST(t0.c0 AS BLOB) AS INTEGER) ASC  NULLS LAST, (~ (PRINTF(v0.c0))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT (~ (t0.c2))) FULL OUTER JOIN t0 ON (NOT ('-1215806012')) WHERE (((NULLIF(DISTINCT t0.c1, v0.c0)) NOTNULL)) ORDER BY ((((((((((vt0.c0)+(t0.c2)))OR(CAST(t0.c0 AS REAL))))OR(IFNULL(v0.c0, vt0.c0))))OR((t0.c2 IN ()))))AND(((t0.c0)<=(v0.c0)))) ASC  NULLS FIRST, CAST(CAST(t0.c0 AS BLOB) AS INTEGER) ASC  NULLS LAST, (~ (PRINTF(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT t0.c1, v0.c0)) NOTNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT (~ (t0.c2))) FULL OUTER JOIN t0 ON (NOT ('-1215806012')) ORDER BY ((((((((((vt0.c0)+(t0.c2)))OR(CAST(t0.c0 AS REAL))))OR(IFNULL(v0.c0, vt0.c0))))OR((t0.c2 IN ()))))AND(((t0.c0)<=(v0.c0)))) ASC  NULLS FIRST, CAST(CAST(t0.c0 AS BLOB) AS INTEGER) ASC  NULLS LAST, (~ (PRINTF(v0.c0))));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON CASE CASE WHEN t0.c2 THEN vt0.c0 END  WHEN t0.c1 THEN ((t0.c1)<<(t0.c1)) END LEFT OUTER JOIN t0 ON LOWER(DISTINCT t0.c2 COLLATE BINARY) WHERE (CASE ((((((((vt0.c0)AND(v0.c0)))OR(t0.c1)))OR(t0.c2)))AND(v0.c0))  WHEN ((((t0.c2)OR(t0.c1)))AND(v0.c0)) THEN '386099041' END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt0.c0)AND(v0.c0)))OR(t0.c1)))OR(t0.c2)))AND(v0.c0))  WHEN ((((t0.c2)OR(t0.c1)))AND(v0.c0)) THEN '386099041' END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE CASE WHEN t0.c2 THEN vt0.c0 END  WHEN t0.c1 THEN ((t0.c1)<<(t0.c1)) END LEFT OUTER JOIN t0 ON LOWER(DISTINCT t0.c2 COLLATE BINARY));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON CASE CASE WHEN t0.c2 THEN vt0.c0 END  WHEN t0.c1 THEN ((t0.c1)<<(t0.c1)) END LEFT OUTER JOIN t0 ON LOWER(DISTINCT t0.c2 COLLATE BINARY) WHERE (CASE ((((((((vt0.c0)AND(v0.c0)))OR(t0.c1)))OR(t0.c2)))AND(v0.c0))  WHEN ((((t0.c2)OR(t0.c1)))AND(v0.c0)) THEN '386099041' END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt0.c0)AND(v0.c0)))OR(t0.c1)))OR(t0.c2)))AND(v0.c0))  WHEN ((((t0.c2)OR(t0.c1)))AND(v0.c0)) THEN '386099041' END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE CASE WHEN t0.c2 THEN vt0.c0 END  WHEN t0.c1 THEN ((t0.c1)<<(t0.c1)) END LEFT OUTER JOIN t0 ON LOWER(DISTINCT t0.c2 COLLATE BINARY));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON CASE CASE WHEN t0.c2 THEN vt0.c0 END  WHEN t0.c1 THEN ((t0.c1)<<(t0.c1)) END LEFT OUTER JOIN t0 ON LOWER(DISTINCT t0.c2 COLLATE BINARY) WHERE (CASE ((((((((vt0.c0)AND(v0.c0)))OR(t0.c1)))OR(t0.c2)))AND(v0.c0))  WHEN ((((t0.c2)OR(t0.c1)))AND(v0.c0)) THEN '386099041' END);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, v0 NATURAL JOIN t0 WHERE (UNLIKELY(DISTINCT (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, v0 NATURAL JOIN t0 WHERE (UNLIKELY(DISTINCT (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, v0 NATURAL JOIN t0 WHERE (UNLIKELY(DISTINCT (vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((x'b4af') BETWEEN (v0.c0) AND (vt0.c0)) IN (((vt0.c0)|(v0.c0)))) WHERE ((((vt0.c0)<=(v0.c0)) IN (((((((((v0.c0)AND('')))OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(v0.c0)) IN (((((((((v0.c0)AND('')))OR(vt0.c0)))OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((x'b4af') BETWEEN (v0.c0) AND (vt0.c0)) IN (((vt0.c0)|(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((x'b4af') BETWEEN (v0.c0) AND (vt0.c0)) IN (((vt0.c0)|(v0.c0)))) WHERE ((((vt0.c0)<=(v0.c0)) IN (((((((((v0.c0)AND('')))OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(v0.c0)) IN (((((((((v0.c0)AND('')))OR(vt0.c0)))OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((x'b4af') BETWEEN (v0.c0) AND (vt0.c0)) IN (((vt0.c0)|(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((x'b4af') BETWEEN (v0.c0) AND (vt0.c0)) IN (((vt0.c0)|(v0.c0)))) WHERE ((((vt0.c0)<=(v0.c0)) IN (((((((((v0.c0)AND('')))OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN v0 ON (((0X7d986771)) BETWEEN ((CASE t0.c1  WHEN vt0.c0 THEN t0.c2 ELSE vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN x'' WHEN v0.c0 THEN t0.c1 WHEN 0.2064223741228527 THEN v0.c0 ELSE x'' END))) WHERE (((((((((NULL)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(v0.c0)) COLLATE BINARY) ORDER BY ((((t0.c1)<(v0.c0)))|(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN v0 ON (((0X7d986771)) BETWEEN ((CASE t0.c1  WHEN vt0.c0 THEN t0.c2 ELSE vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN x'' WHEN v0.c0 THEN t0.c1 WHEN 0.2064223741228527 THEN v0.c0 ELSE x'' END))) ORDER BY ((((t0.c1)<(v0.c0)))|(vt0.c0)) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN v0 ON (((0X7d986771)) BETWEEN ((CASE t0.c1  WHEN vt0.c0 THEN t0.c2 ELSE vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN x'' WHEN v0.c0 THEN t0.c1 WHEN 0.2064223741228527 THEN v0.c0 ELSE x'' END))) WHERE (((((((((NULL)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(v0.c0)) COLLATE BINARY) ORDER BY ((((t0.c1)<(v0.c0)))|(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN v0 ON (((0X7d986771)) BETWEEN ((CASE t0.c1  WHEN vt0.c0 THEN t0.c2 ELSE vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN x'' WHEN v0.c0 THEN t0.c1 WHEN 0.2064223741228527 THEN v0.c0 ELSE x'' END))) ORDER BY ((((t0.c1)<(v0.c0)))|(vt0.c0)) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN v0 ON (((0X7d986771)) BETWEEN ((CASE t0.c1  WHEN vt0.c0 THEN t0.c2 ELSE vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN x'' WHEN v0.c0 THEN t0.c1 WHEN 0.2064223741228527 THEN v0.c0 ELSE x'' END))) WHERE (((((((((NULL)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(v0.c0)) COLLATE BINARY) ORDER BY ((((t0.c1)<(v0.c0)))|(vt0.c0)) DESC;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((0.32736672494411423 IN ()) IN ())) ORDER BY CASE WHEN (~ (t0.c2)) THEN ((t0.c1) ISNULL) END;
SELECT SUM(count) FROM (SELECT ((((0.32736672494411423 IN ()) IN ())) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CASE WHEN (~ (t0.c2)) THEN ((t0.c1) ISNULL) END);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((0.32736672494411423 IN ()) IN ())) ORDER BY CASE WHEN (~ (t0.c2)) THEN ((t0.c1) ISNULL) END;
SELECT SUM(count) FROM (SELECT ((((0.32736672494411423 IN ()) IN ())) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CASE WHEN (~ (t0.c2)) THEN ((t0.c1) ISNULL) END);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((0.32736672494411423 IN ()) IN ())) ORDER BY CASE WHEN (~ (t0.c2)) THEN ((t0.c1) ISNULL) END;
SELECT ALL * FROM v0 INDEXED BY i2, t0 WHERE ('-87753963') ORDER BY ((((v0.c0)-(t0.c1)))>(((v0.c0)||(t0.c2)))), ((t0.c2)<=(v0.c0)) COLLATE RTRIM DESC  NULLS LAST, (NOT ((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT (('-87753963') IS TRUE)  as count FROM v0 INDEXED BY i2, t0 ORDER BY ((((v0.c0)-(t0.c1)))>(((v0.c0)||(t0.c2)))), ((t0.c2)<=(v0.c0)) COLLATE RTRIM DESC  NULLS LAST, (NOT ((t0.c0 IN ()))));
SELECT ALL * FROM v0 INDEXED BY i2, t0 WHERE ('-87753963') ORDER BY ((((v0.c0)-(t0.c1)))>(((v0.c0)||(t0.c2)))), ((t0.c2)<=(v0.c0)) COLLATE RTRIM DESC  NULLS LAST, (NOT ((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT (('-87753963') IS TRUE)  as count FROM v0 INDEXED BY i2, t0 ORDER BY ((((v0.c0)-(t0.c1)))>(((v0.c0)||(t0.c2)))), ((t0.c2)<=(v0.c0)) COLLATE RTRIM DESC  NULLS LAST, (NOT ((t0.c0 IN ()))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))|(((0.5137828943046602) NOTNULL)))) ORDER BY ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))|(((0.5137828943046602) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))|(((0.5137828943046602) NOTNULL)))) ORDER BY ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))|(((0.5137828943046602) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))|(((0.5137828943046602) NOTNULL)))) ORDER BY ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (NULL);
SELECT * FROM v0, vt0 CROSS JOIN t0 ON (((t0.c2 IN (t0.c2))) BETWEEN ((~ (t0.c1))) AND (x'e23b')) WHERE (((SQLITE_COMPILEOPTION_GET(v0.c0)) NOT BETWEEN (((t0.c2) NOTNULL)) AND (((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c1))))) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END)) ASC, (x'' IN ());
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(v0.c0)) NOT BETWEEN (((t0.c2) NOTNULL)) AND (((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c1))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON (((t0.c2 IN (t0.c2))) BETWEEN ((~ (t0.c1))) AND (x'e23b')) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END)) ASC, (x'' IN ()));
SELECT * FROM v0, vt0 CROSS JOIN t0 ON (((t0.c2 IN (t0.c2))) BETWEEN ((~ (t0.c1))) AND (x'e23b')) WHERE (((SQLITE_COMPILEOPTION_GET(v0.c0)) NOT BETWEEN (((t0.c2) NOTNULL)) AND (((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c1))))) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END)) ASC, (x'' IN ());
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(v0.c0)) NOT BETWEEN (((t0.c2) NOTNULL)) AND (((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c1))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON (((t0.c2 IN (t0.c2))) BETWEEN ((~ (t0.c1))) AND (x'e23b')) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END)) ASC, (x'' IN ()));
SELECT * FROM v0, vt0 CROSS JOIN t0 ON (((t0.c2 IN (t0.c2))) BETWEEN ((~ (t0.c1))) AND (x'e23b')) WHERE (((SQLITE_COMPILEOPTION_GET(v0.c0)) NOT BETWEEN (((t0.c2) NOTNULL)) AND (((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c1))))) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END)) ASC, (x'' IN ());
SELECT * FROM vt0, v0 CROSS JOIN t0 ON ((((t0.c0)<(vt0.c0))) BETWEEN ((((t0.c2, t0.c2, vt0.c0)) BETWEEN ((vt0.c0, t0.c0, v0.c0)) AND ((t0.c2, t0.c2, t0.c0)))) AND (((t0.c0)|(vt0.c0)))) WHERE (CASE WHEN 'a})|WUm' THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 END)IS((v0.c0 IN (t0.c2, NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 'a})|WUm' THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t0 ON ((((t0.c0)<(vt0.c0))) BETWEEN ((((t0.c2, t0.c2, vt0.c0)) BETWEEN ((vt0.c0, t0.c0, v0.c0)) AND ((t0.c2, t0.c2, t0.c0)))) AND (((t0.c0)|(vt0.c0)))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 END)IS((v0.c0 IN (t0.c2, NULL))))  NULLS FIRST);
SELECT * FROM vt0, v0 CROSS JOIN t0 ON ((((t0.c0)<(vt0.c0))) BETWEEN ((((t0.c2, t0.c2, vt0.c0)) BETWEEN ((vt0.c0, t0.c0, v0.c0)) AND ((t0.c2, t0.c2, t0.c0)))) AND (((t0.c0)|(vt0.c0)))) WHERE (CASE WHEN 'a})|WUm' THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 END)IS((v0.c0 IN (t0.c2, NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 'a})|WUm' THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t0 ON ((((t0.c0)<(vt0.c0))) BETWEEN ((((t0.c2, t0.c2, vt0.c0)) BETWEEN ((vt0.c0, t0.c0, v0.c0)) AND ((t0.c2, t0.c2, t0.c0)))) AND (((t0.c0)|(vt0.c0)))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 END)IS((v0.c0 IN (t0.c2, NULL))))  NULLS FIRST);
SELECT * FROM vt0, v0 CROSS JOIN t0 ON ((((t0.c0)<(vt0.c0))) BETWEEN ((((t0.c2, t0.c2, vt0.c0)) BETWEEN ((vt0.c0, t0.c0, v0.c0)) AND ((t0.c2, t0.c2, t0.c0)))) AND (((t0.c0)|(vt0.c0)))) WHERE (CASE WHEN 'a})|WUm' THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 END)IS((v0.c0 IN (t0.c2, NULL))))  NULLS FIRST;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((((((0.9036312891291747)AND((v0.c0 IN (v0.c0)))))AND(((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))))OR((((vt0.c0))>=((0Xffffffff8171ed73))))))AND(((vt0.c0)IS NOT(v0.c0)))) WHERE (CAST(CAST(vt0.c0 AS REAL) AS BLOB)) ORDER BY (((((v0.c0 IN (vt0.c0)))AND((((v0.c0))>=((v0.c0))))))AND(((NULL)||(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((((((0.9036312891291747)AND((v0.c0 IN (v0.c0)))))AND(((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))))OR((((vt0.c0))>=((0Xffffffff8171ed73))))))AND(((vt0.c0)IS NOT(v0.c0)))) ORDER BY (((((v0.c0 IN (vt0.c0)))AND((((v0.c0))>=((v0.c0))))))AND(((NULL)||(vt0.c0))))  NULLS LAST);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((((((0.9036312891291747)AND((v0.c0 IN (v0.c0)))))AND(((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))))OR((((vt0.c0))>=((0Xffffffff8171ed73))))))AND(((vt0.c0)IS NOT(v0.c0)))) WHERE (CAST(CAST(vt0.c0 AS REAL) AS BLOB)) ORDER BY (((((v0.c0 IN (vt0.c0)))AND((((v0.c0))>=((v0.c0))))))AND(((NULL)||(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((((((0.9036312891291747)AND((v0.c0 IN (v0.c0)))))AND(((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))))OR((((vt0.c0))>=((0Xffffffff8171ed73))))))AND(((vt0.c0)IS NOT(v0.c0)))) ORDER BY (((((v0.c0 IN (vt0.c0)))AND((((v0.c0))>=((v0.c0))))))AND(((NULL)||(vt0.c0))))  NULLS LAST);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((((((0.9036312891291747)AND((v0.c0 IN (v0.c0)))))AND(((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))))OR((((vt0.c0))>=((0Xffffffff8171ed73))))))AND(((vt0.c0)IS NOT(v0.c0)))) WHERE (CAST(CAST(vt0.c0 AS REAL) AS BLOB)) ORDER BY (((((v0.c0 IN (vt0.c0)))AND((((v0.c0))>=((v0.c0))))))AND(((NULL)||(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((((v0.c0) NOT NULL)))<((LIKELIHOOD(DISTINCT v0.c0, 0.050967632960647435)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT NULL)))<((LIKELIHOOD(DISTINCT v0.c0, 0.050967632960647435))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0) NOT NULL)))<((LIKELIHOOD(DISTINCT v0.c0, 0.050967632960647435)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT NULL)))<((LIKELIHOOD(DISTINCT v0.c0, 0.050967632960647435))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0) NOT NULL)))<((LIKELIHOOD(DISTINCT v0.c0, 0.050967632960647435)))));
SELECT ALL * FROM t0 WHERE ((((t0.c0)%(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0)%(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0)%(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0)%(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0)%(t0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (vt0.c0)))<=(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))<=(t0.c2))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (vt0.c0)))<=(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))<=(t0.c2))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (vt0.c0)))<=(t0.c2)));
SELECT * FROM vt0, t0, v0 WHERE ((((0.4869359022699101 IN (t0.c2, t0.c1)))*(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((0.4869359022699101 IN (t0.c2, t0.c1)))*(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE ((((0.4869359022699101 IN (t0.c2, t0.c1)))*(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((0.4869359022699101 IN (t0.c2, t0.c1)))*(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE ((((0.4869359022699101 IN (t0.c2, t0.c1)))*(v0.c0 COLLATE NOCASE)));
SELECT ALL * FROM v0, t0 RIGHT OUTER JOIN vt0 ON CAST(((v0.c0)>=(t0.c1)) AS NUMERIC) WHERE ((NOT (((t0.c2) IS TRUE)))) ORDER BY ((t0.c1)>=(t0.c2)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c2) IS TRUE)))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON CAST(((v0.c0)>=(t0.c1)) AS NUMERIC) ORDER BY ((t0.c1)>=(t0.c2)) COLLATE BINARY ASC);
SELECT ALL * FROM v0, t0 RIGHT OUTER JOIN vt0 ON CAST(((v0.c0)>=(t0.c1)) AS NUMERIC) WHERE ((NOT (((t0.c2) IS TRUE)))) ORDER BY ((t0.c1)>=(t0.c2)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c2) IS TRUE)))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON CAST(((v0.c0)>=(t0.c1)) AS NUMERIC) ORDER BY ((t0.c1)>=(t0.c2)) COLLATE BINARY ASC);
SELECT ALL * FROM v0, t0 RIGHT OUTER JOIN vt0 ON CAST(((v0.c0)>=(t0.c1)) AS NUMERIC) WHERE ((NOT (((t0.c2) IS TRUE)))) ORDER BY ((t0.c1)>=(t0.c2)) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN ((((0.9104308344356493))<((t0.c0)))) AND (NULL))) ORDER BY ((((t0.c0)IS NOT(v0.c0)))=(((v0.c0) IS FALSE))), t0.c2, (((((((t0.c0, t0.c2, t0.c2))<((0.6072404046420768, v0.c0, t0.c1))))AND(((((((((t0.c2)AND(t0.c0)))AND(t0.c2)))OR(t0.c1)))OR(v0.c0)))))AND(t0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT BETWEEN ((((0.9104308344356493))<((t0.c0)))) AND (NULL))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c0)IS NOT(v0.c0)))=(((v0.c0) IS FALSE))), t0.c2, (((((((t0.c0, t0.c2, t0.c2))<((0.6072404046420768, v0.c0, t0.c1))))AND(((((((((t0.c2)AND(t0.c0)))AND(t0.c2)))OR(t0.c1)))OR(v0.c0)))))AND(t0.c0 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN ((((0.9104308344356493))<((t0.c0)))) AND (NULL))) ORDER BY ((((t0.c0)IS NOT(v0.c0)))=(((v0.c0) IS FALSE))), t0.c2, (((((((t0.c0, t0.c2, t0.c2))<((0.6072404046420768, v0.c0, t0.c1))))AND(((((((((t0.c2)AND(t0.c0)))AND(t0.c2)))OR(t0.c1)))OR(v0.c0)))))AND(t0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT BETWEEN ((((0.9104308344356493))<((t0.c0)))) AND (NULL))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c0)IS NOT(v0.c0)))=(((v0.c0) IS FALSE))), t0.c2, (((((((t0.c0, t0.c2, t0.c2))<((0.6072404046420768, v0.c0, t0.c1))))AND(((((((((t0.c2)AND(t0.c0)))AND(t0.c2)))OR(t0.c1)))OR(v0.c0)))))AND(t0.c0 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN ((((0.9104308344356493))<((t0.c0)))) AND (NULL))) ORDER BY ((((t0.c0)IS NOT(v0.c0)))=(((v0.c0) IS FALSE))), t0.c2, (((((((t0.c0, t0.c2, t0.c2))<((0.6072404046420768, v0.c0, t0.c1))))AND(((((((((t0.c2)AND(t0.c0)))AND(t0.c2)))OR(t0.c1)))OR(v0.c0)))))AND(t0.c0 COLLATE BINARY)) ASC;
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN v0 ON (((v0.c0)) BETWEEN (((+ (t0.c1)))) AND ((((t0.c0)=(v0.c0))))) WHERE ((NOT (t0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN v0 ON (((v0.c0)) BETWEEN (((+ (t0.c1)))) AND ((((t0.c0)==(v0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN v0 ON (((v0.c0)) BETWEEN (((+ (t0.c1)))) AND ((((t0.c0)=(v0.c0))))) WHERE ((NOT (t0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN v0 ON (((v0.c0)) BETWEEN (((+ (t0.c1)))) AND ((((t0.c0)==(v0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN v0 ON (((v0.c0)) BETWEEN (((+ (t0.c1)))) AND ((((t0.c0)=(v0.c0))))) WHERE ((NOT (t0.c1 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)*(vt0.c0)))AND(CAST('yi' AS TEXT))))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))))))OR(CAST(vt0.c0 AS REAL))))AND(TYPEOF('479720178')))) ORDER BY (NOT ((- (vt0.c0)))) DESC, ((((((vt0.c0))<=((vt0.c0))), (vt0.c0 IN (vt0.c0, vt0.c0)), SQLITE_COMPILEOPTION_GET(x'')))>=((((vt0.c0)GLOB(vt0.c0)), ((vt0.c0)<(vt0.c0)), (((('0.48053110152195433')AND(vt0.c0)))AND(vt0.c0)))))  NULLS LAST, HEX(((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)*(vt0.c0)))AND(CAST('yi' AS TEXT))))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))))))OR(CAST(vt0.c0 AS REAL))))AND(TYPEOF('479720178')))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((- (vt0.c0)))) DESC, ((((((vt0.c0))<=((vt0.c0))), (vt0.c0 IN (vt0.c0, vt0.c0)), SQLITE_COMPILEOPTION_GET(x'')))>=((((vt0.c0)GLOB(vt0.c0)), ((vt0.c0)<(vt0.c0)), (((('0.48053110152195433')AND(vt0.c0)))AND(vt0.c0)))))  NULLS LAST, HEX(((vt0.c0) ISNULL)));
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)*(vt0.c0)))AND(CAST('yi' AS TEXT))))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))))))OR(CAST(vt0.c0 AS REAL))))AND(TYPEOF('479720178')))) ORDER BY (NOT ((- (vt0.c0)))) DESC, ((((((vt0.c0))<=((vt0.c0))), (vt0.c0 IN (vt0.c0, vt0.c0)), SQLITE_COMPILEOPTION_GET(x'')))>=((((vt0.c0)GLOB(vt0.c0)), ((vt0.c0)<(vt0.c0)), (((('0.48053110152195433')AND(vt0.c0)))AND(vt0.c0)))))  NULLS LAST, HEX(((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)*(vt0.c0)))AND(CAST('yi' AS TEXT))))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))))))OR(CAST(vt0.c0 AS REAL))))AND(TYPEOF('479720178')))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((- (vt0.c0)))) DESC, ((((((vt0.c0))<=((vt0.c0))), (vt0.c0 IN (vt0.c0, vt0.c0)), SQLITE_COMPILEOPTION_GET(x'')))>=((((vt0.c0)GLOB(vt0.c0)), ((vt0.c0)<(vt0.c0)), (((('0.48053110152195433')AND(vt0.c0)))AND(vt0.c0)))))  NULLS LAST, HEX(((vt0.c0) ISNULL)));
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)*(vt0.c0)))AND(CAST('yi' AS TEXT))))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))))))OR(CAST(vt0.c0 AS REAL))))AND(TYPEOF('479720178')))) ORDER BY (NOT ((- (vt0.c0)))) DESC, ((((((vt0.c0))<=((vt0.c0))), (vt0.c0 IN (vt0.c0, vt0.c0)), SQLITE_COMPILEOPTION_GET(x'')))>=((((vt0.c0)GLOB(vt0.c0)), ((vt0.c0)<(vt0.c0)), (((('0.48053110152195433')AND(vt0.c0)))AND(vt0.c0)))))  NULLS LAST, HEX(((vt0.c0) ISNULL));
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0, v0.c0, vt0.c0, vt0.c0, 'h-'))<=((vt0.c0, v0.c0, 0.7831293171303504, vt0.c0, v0.c0)))) NOT BETWEEN ((('-832243091')>=(v0.c0))) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, v0.c0, vt0.c0, vt0.c0, 'h-'))<=((vt0.c0, v0.c0, 0.7831293171303504, vt0.c0, v0.c0)))) NOT BETWEEN ((('-832243091')>=(v0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0, v0.c0, vt0.c0, vt0.c0, 'h-'))<=((vt0.c0, v0.c0, 0.7831293171303504, vt0.c0, v0.c0)))) NOT BETWEEN ((('-832243091')>=(v0.c0))) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, v0.c0, vt0.c0, vt0.c0, 'h-'))<=((vt0.c0, v0.c0, 0.7831293171303504, vt0.c0, v0.c0)))) NOT BETWEEN ((('-832243091')>=(v0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0, v0.c0, vt0.c0, vt0.c0, 'h-'))<=((vt0.c0, v0.c0, 0.7831293171303504, vt0.c0, v0.c0)))) NOT BETWEEN ((('-832243091')>=(v0.c0))) AND ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN ((((v0.c0, NULL, v0.c0))>=((v0.c0, v0.c0, v0.c0)))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB)) BETWEEN ((((v0.c0, NULL, v0.c0))>=((v0.c0, v0.c0, v0.c0)))) AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN ((((v0.c0, NULL, v0.c0))>=((v0.c0, v0.c0, v0.c0)))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB)) BETWEEN ((((v0.c0, NULL, v0.c0))>=((v0.c0, v0.c0, v0.c0)))) AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN ((((v0.c0, NULL, v0.c0))>=((v0.c0, v0.c0, v0.c0)))) AND (v0.c0)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))OR((~ (t0.c0)))))OR((- (t0.c1)))) CROSS JOIN v0 ON (((v0.c0)) NOT BETWEEN ((CASE 0.9646344404032547  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 ELSE t0.c2 END)) AND ((CASE t0.c2  WHEN vt0.c0 THEN vt0.c0 END))) WHERE (x'd938') ORDER BY (CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 ELSE t0.c1 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'd938') IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))OR((~ (t0.c0)))))OR((- (t0.c1)))) CROSS JOIN v0 ON (((v0.c0)) NOT BETWEEN ((CASE 0.9646344404032547  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 ELSE t0.c2 END)) AND ((CASE t0.c2  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 ELSE t0.c1 END IN ())  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))OR((~ (t0.c0)))))OR((- (t0.c1)))) CROSS JOIN v0 ON (((v0.c0)) NOT BETWEEN ((CASE 0.9646344404032547  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 ELSE t0.c2 END)) AND ((CASE t0.c2  WHEN vt0.c0 THEN vt0.c0 END))) WHERE (x'd938') ORDER BY (CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 ELSE t0.c1 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'd938') IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))OR((~ (t0.c0)))))OR((- (t0.c1)))) CROSS JOIN v0 ON (((v0.c0)) NOT BETWEEN ((CASE 0.9646344404032547  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 ELSE t0.c2 END)) AND ((CASE t0.c2  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 ELSE t0.c1 END IN ())  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))OR((~ (t0.c0)))))OR((- (t0.c1)))) CROSS JOIN v0 ON (((v0.c0)) NOT BETWEEN ((CASE 0.9646344404032547  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 ELSE t0.c2 END)) AND ((CASE t0.c2  WHEN vt0.c0 THEN vt0.c0 END))) WHERE (x'd938') ORDER BY (CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 ELSE t0.c1 END IN ())  NULLS FIRST;
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE BINARY CROSS JOIN t0 ON (((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) BETWEEN (CASE t0.c0  WHEN t0.c1 THEN x'' ELSE t0.c1 END) AND ((vt0.c0 IN (t0.c0, t0.c2)))) WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND (CAST(t0.c2 AS REAL)))) ORDER BY (((((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c2)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND (CAST(t0.c2 AS REAL)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE BINARY CROSS JOIN t0 ON (((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) BETWEEN (CASE t0.c0  WHEN t0.c1 THEN x'' ELSE t0.c1 END) AND ((vt0.c0 IN (t0.c0, t0.c2)))) ORDER BY (((((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c2)))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE BINARY CROSS JOIN t0 ON (((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) BETWEEN (CASE t0.c0  WHEN t0.c1 THEN x'' ELSE t0.c1 END) AND ((vt0.c0 IN (t0.c0, t0.c2)))) WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND (CAST(t0.c2 AS REAL)))) ORDER BY (((((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c2)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND (CAST(t0.c2 AS REAL)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE BINARY CROSS JOIN t0 ON (((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) BETWEEN (CASE t0.c0  WHEN t0.c1 THEN x'' ELSE t0.c1 END) AND ((vt0.c0 IN (t0.c0, t0.c2)))) ORDER BY (((((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c2)))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE BINARY CROSS JOIN t0 ON (((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) BETWEEN (CASE t0.c0  WHEN t0.c1 THEN x'' ELSE t0.c1 END) AND ((vt0.c0 IN (t0.c0, t0.c2)))) WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND (CAST(t0.c2 AS REAL)))) ORDER BY (((((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c2)))) IS FALSE)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0) NOT NULL))))AND('')))OR(CAST(vt0.c0 AS NUMERIC))))AND(((x'') BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0) NOT NULL))))AND('')))OR(CAST(vt0.c0 AS NUMERIC))))AND(((x'') BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0) NOT NULL))))AND('')))OR(CAST(vt0.c0 AS NUMERIC))))AND(((x'') BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0) NOT NULL))))AND('')))OR(CAST(vt0.c0 AS NUMERIC))))AND(((x'') BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0) NOT NULL))))AND('')))OR(CAST(vt0.c0 AS NUMERIC))))AND(((x'') BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT COUNT(*) FROM t0 INDEXED BY i2, vt0, v0 WHERE (((((t0.c2) BETWEEN (NULL) AND (t0.c0))) BETWEEN (CAST(v0.c0 AS BLOB)) AND (((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) BETWEEN (NULL) AND (t0.c0))) BETWEEN (CAST(v0.c0 AS BLOB)) AND (((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0 INDEXED BY i2, vt0, v0);
SELECT COUNT(*) FROM t0 INDEXED BY i2, vt0, v0 WHERE (((((t0.c2) BETWEEN (NULL) AND (t0.c0))) BETWEEN (CAST(v0.c0 AS BLOB)) AND (((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) BETWEEN (NULL) AND (t0.c0))) BETWEEN (CAST(v0.c0 AS BLOB)) AND (((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0 INDEXED BY i2, vt0, v0);
SELECT COUNT(*) FROM t0 INDEXED BY i2, vt0, v0 WHERE (((((t0.c2) BETWEEN (NULL) AND (t0.c0))) BETWEEN (CAST(v0.c0 AS BLOB)) AND (((t0.c0) ISNULL))));
SELECT COUNT(*) FROM t0, vt0 WHERE (TRIM(LIKE(t0.c2, t0.c1, '-')));
SELECT SUM(count) FROM (SELECT ((TRIM(LIKE(t0.c2, t0.c1, '-'))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (TRIM(LIKE(t0.c2, t0.c1, '-')));
SELECT SUM(count) FROM (SELECT ((TRIM(LIKE(t0.c2, t0.c1, '-'))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (TRIM(LIKE(t0.c2, t0.c1, '-')));
SELECT * FROM t0, v0 WHERE (CASE WHEN CASE WHEN NULL THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN v0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c1 END THEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) ELSE (((v0.c0)) NOT BETWEEN ((x'')) AND ((t0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN NULL THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN v0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c1 END THEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) ELSE (((v0.c0)) NOT BETWEEN ((x'')) AND ((t0.c1))) END) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (CASE WHEN CASE WHEN NULL THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN v0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c1 END THEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) ELSE (((v0.c0)) NOT BETWEEN ((x'')) AND ((t0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN NULL THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN v0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c1 END THEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) ELSE (((v0.c0)) NOT BETWEEN ((x'')) AND ((t0.c1))) END) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (CASE WHEN CASE WHEN NULL THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN v0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c1 END THEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) ELSE (((v0.c0)) NOT BETWEEN ((x'')) AND ((t0.c1))) END);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((t0.c2 COLLATE BINARY IN (SQLITE_SOURCE_ID()))) ORDER BY (((t0.c0) IS TRUE) IN (((((t0.c1)OR(t0.c2)))AND(t0.c1)), CASE t0.c2  WHEN '/?gu&逮tn' THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c1 ELSE v0.c0 END)) ASC, TRIM(DISTINCT ((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c2 COLLATE BINARY IN (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c0) IS TRUE) IN (((((t0.c1)OR(t0.c2)))AND(t0.c1)), CASE t0.c2  WHEN '/?gu&逮tn' THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c1 ELSE v0.c0 END)) ASC, TRIM(DISTINCT ((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c1))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((t0.c2 COLLATE BINARY IN (SQLITE_SOURCE_ID()))) ORDER BY (((t0.c0) IS TRUE) IN (((((t0.c1)OR(t0.c2)))AND(t0.c1)), CASE t0.c2  WHEN '/?gu&逮tn' THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c1 ELSE v0.c0 END)) ASC, TRIM(DISTINCT ((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c2 COLLATE BINARY IN (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c0) IS TRUE) IN (((((t0.c1)OR(t0.c2)))AND(t0.c1)), CASE t0.c2  WHEN '/?gu&逮tn' THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c1 ELSE v0.c0 END)) ASC, TRIM(DISTINCT ((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c1))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((t0.c2 COLLATE BINARY IN (SQLITE_SOURCE_ID()))) ORDER BY (((t0.c0) IS TRUE) IN (((((t0.c1)OR(t0.c2)))AND(t0.c1)), CASE t0.c2  WHEN '/?gu&逮tn' THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c1 ELSE v0.c0 END)) ASC, TRIM(DISTINCT ((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c1))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((IFNULL(v0.c0, v0.c0))OR((((v0.c0))<=((v0.c0))))))OR(v0.c0 COLLATE RTRIM)))OR(v0.c0 COLLATE NOCASE)))OR((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((IFNULL(v0.c0, v0.c0))OR((((v0.c0))<=((v0.c0))))))OR(v0.c0 COLLATE RTRIM)))OR(v0.c0 COLLATE NOCASE)))OR((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((IFNULL(v0.c0, v0.c0))OR((((v0.c0))<=((v0.c0))))))OR(v0.c0 COLLATE RTRIM)))OR(v0.c0 COLLATE NOCASE)))OR((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((IFNULL(v0.c0, v0.c0))OR((((v0.c0))<=((v0.c0))))))OR(v0.c0 COLLATE RTRIM)))OR(v0.c0 COLLATE NOCASE)))OR((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((IFNULL(v0.c0, v0.c0))OR((((v0.c0))<=((v0.c0))))))OR(v0.c0 COLLATE RTRIM)))OR(v0.c0 COLLATE NOCASE)))OR((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))))));
SELECT * FROM v0, t0, vt0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY)) AND ((((vt0.c0) BETWEEN (t0.c1) AND (t0.c0)))))) ORDER BY ((CAST(vt0.c0 AS TEXT))|(((x'') ISNULL)))  NULLS FIRST, (((NOT (vt0.c0))) BETWEEN (((t0.c2)+(t0.c2))) AND (TRIM(t0.c2, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY)) AND ((((vt0.c0) BETWEEN (t0.c1) AND (t0.c0)))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))|(((x'') ISNULL)))  NULLS FIRST, (((NOT (vt0.c0))) BETWEEN (((t0.c2)+(t0.c2))) AND (TRIM(t0.c2, v0.c0)))  NULLS FIRST);
SELECT * FROM v0, t0, vt0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY)) AND ((((vt0.c0) BETWEEN (t0.c1) AND (t0.c0)))))) ORDER BY ((CAST(vt0.c0 AS TEXT))|(((x'') ISNULL)))  NULLS FIRST, (((NOT (vt0.c0))) BETWEEN (((t0.c2)+(t0.c2))) AND (TRIM(t0.c2, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY)) AND ((((vt0.c0) BETWEEN (t0.c1) AND (t0.c0)))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))|(((x'') ISNULL)))  NULLS FIRST, (((NOT (vt0.c0))) BETWEEN (((t0.c2)+(t0.c2))) AND (TRIM(t0.c2, v0.c0)))  NULLS FIRST);
SELECT * FROM v0, t0, vt0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY)) AND ((((vt0.c0) BETWEEN (t0.c1) AND (t0.c0)))))) ORDER BY ((CAST(vt0.c0 AS TEXT))|(((x'') ISNULL)))  NULLS FIRST, (((NOT (vt0.c0))) BETWEEN (((t0.c2)+(t0.c2))) AND (TRIM(t0.c2, v0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((t0.c2 IN ()) IN ()) RIGHT OUTER JOIN v0 ON (((t0.c2)<>(vt0.c0)) IN (((v0.c0) BETWEEN (t0.c0) AND (t0.c1)))) WHERE (((LOWER(DISTINCT t0.c1))=(((vt0.c0)<>(v0.c0))))) ORDER BY (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), (((v0.c0)==(t0.c1)) IN (((t0.c2) IS TRUE))), t0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT t0.c1))=(((vt0.c0)!=(v0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((t0.c2 IN ()) IN ()) RIGHT OUTER JOIN v0 ON (((t0.c2)<>(vt0.c0)) IN (((v0.c0) BETWEEN (t0.c0) AND (t0.c1)))) ORDER BY (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), (((v0.c0)=(t0.c1)) IN (((t0.c2) IS TRUE))), t0.c1 DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((t0.c2 IN ()) IN ()) RIGHT OUTER JOIN v0 ON (((t0.c2)<>(vt0.c0)) IN (((v0.c0) BETWEEN (t0.c0) AND (t0.c1)))) WHERE (((LOWER(DISTINCT t0.c1))=(((vt0.c0)<>(v0.c0))))) ORDER BY (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), (((v0.c0)==(t0.c1)) IN (((t0.c2) IS TRUE))), t0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT t0.c1))=(((vt0.c0)!=(v0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((t0.c2 IN ()) IN ()) RIGHT OUTER JOIN v0 ON (((t0.c2)<>(vt0.c0)) IN (((v0.c0) BETWEEN (t0.c0) AND (t0.c1)))) ORDER BY (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), (((v0.c0)=(t0.c1)) IN (((t0.c2) IS TRUE))), t0.c1 DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((t0.c2 IN ()) IN ()) RIGHT OUTER JOIN v0 ON (((t0.c2)<>(vt0.c0)) IN (((v0.c0) BETWEEN (t0.c0) AND (t0.c1)))) WHERE (((LOWER(DISTINCT t0.c1))=(((vt0.c0)<>(v0.c0))))) ORDER BY (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), (((v0.c0)==(t0.c1)) IN (((t0.c2) IS TRUE))), t0.c1 DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((+ ('1127954260')))AND(HEX(DISTINCT t0.c2))))OR(0X57b8f604)));
SELECT SUM(count) FROM (SELECT ALL (((((((+ ('1127954260')))AND(HEX(DISTINCT t0.c2))))OR(0X57b8f604))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((+ ('1127954260')))AND(HEX(DISTINCT t0.c2))))OR(0X57b8f604)));
SELECT SUM(count) FROM (SELECT ALL (((((((+ ('1127954260')))AND(HEX(DISTINCT t0.c2))))OR(0X57b8f604))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((+ ('1127954260')))AND(HEX(DISTINCT t0.c2))))OR(0X57b8f604)));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((v0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((v0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((v0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM t0 WHERE ((((- (t0.c2)))GLOB(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c2)))GLOB(t0.c2))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((- (t0.c2)))GLOB(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c2)))GLOB(t0.c2))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((- (t0.c2)))GLOB(t0.c2)));
SELECT ALL * FROM vt0 WHERE (((x'46a4' COLLATE BINARY)+((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'46a4' COLLATE BINARY)+((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'46a4' COLLATE BINARY)+((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'46a4' COLLATE BINARY)+((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'46a4' COLLATE BINARY)+((vt0.c0 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NOT ('ti'))))<((CAST(vt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT ('ti'))))<((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NOT ('ti'))))<((CAST(vt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT ('ti'))))<((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NOT ('ti'))))<((CAST(vt0.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, t0, vt0 WHERE (TRIM(t0.c0 COLLATE NOCASE, ((t0.c0) NOT BETWEEN (vt0.c0) AND (NULL))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t0.c0 COLLATE NOCASE, ((t0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, t0, vt0 WHERE (TRIM(t0.c0 COLLATE NOCASE, ((t0.c0) NOT BETWEEN (vt0.c0) AND (NULL))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t0.c0 COLLATE NOCASE, ((t0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, t0, vt0 WHERE (TRIM(t0.c0 COLLATE NOCASE, ((t0.c0) NOT BETWEEN (vt0.c0) AND (NULL))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((x'')OR((v0.c0 IN (t0.c1)))))AND((v0.c0 IN (t0.c1)))) FULL OUTER JOIN v0 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) WHERE ((t0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((x'')OR((v0.c0 IN (t0.c1)))))AND((v0.c0 IN (t0.c1)))) FULL OUTER JOIN v0 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((x'')OR((v0.c0 IN (t0.c1)))))AND((v0.c0 IN (t0.c1)))) FULL OUTER JOIN v0 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) WHERE ((t0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((x'')OR((v0.c0 IN (t0.c1)))))AND((v0.c0 IN (t0.c1)))) FULL OUTER JOIN v0 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)|(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)|(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c2)>=(t0.c1)))<=('}y')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>=(t0.c1)))<=('}y'))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c2)>=(t0.c1)))<=('}y')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>=(t0.c1)))<=('}y'))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c2)>=(t0.c1)))<=('}y')));
SELECT ALL COUNT(*) FROM v0 WHERE ((- (0X1c3c3c6a)));
SELECT SUM(count) FROM (SELECT (((- (0x1c3c3c6a))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (0X1c3c3c6a)));
SELECT SUM(count) FROM (SELECT (((- (0x1c3c3c6a))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (0X1c3c3c6a)));
SELECT * FROM vt0, t0 WHERE (t0.c2) ORDER BY UPPER(DISTINCT (t0.c1 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0, t0 ORDER BY UPPER(DISTINCT (t0.c1 IN ()))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (t0.c2) ORDER BY UPPER(DISTINCT (t0.c1 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0, t0 ORDER BY UPPER(DISTINCT (t0.c1 IN ()))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (t0.c2) ORDER BY UPPER(DISTINCT (t0.c1 IN ()))  NULLS LAST;
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (v0.c0) AND ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, NULL)) AND ((x'0596', v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (v0.c0) AND ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, NULL)) AND ((x'0596', v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (v0.c0) AND ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, NULL)) AND ((x'0596', v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (v0.c0) AND ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, NULL)) AND ((x'0596', v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (v0.c0) AND ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, NULL)) AND ((x'0596', v0.c0, v0.c0))))));
SELECT * FROM t0 WHERE (CAST(((((((((t0.c2)OR(t0.c0)))AND(t0.c2)))AND(t0.c0)))AND(t0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t0.c2)OR(t0.c0)))AND(t0.c2)))AND(t0.c0)))AND(t0.c1)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((((((((t0.c2)OR(t0.c0)))AND(t0.c2)))AND(t0.c0)))AND(t0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t0.c2)OR(t0.c0)))AND(t0.c2)))AND(t0.c0)))AND(t0.c1)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((((((((t0.c2)OR(t0.c0)))AND(t0.c2)))AND(t0.c0)))AND(t0.c1)) AS REAL));
SELECT ALL * FROM vt0, v0, t0 WHERE (CAST(CASE WHEN vt0.c0 THEN t0.c1 ELSE t0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN t0.c1 ELSE t0.c1 END AS REAL)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE (CAST(CASE WHEN vt0.c0 THEN t0.c1 ELSE t0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN t0.c1 ELSE t0.c1 END AS REAL)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE (CAST(CASE WHEN vt0.c0 THEN t0.c1 ELSE t0.c1 END AS REAL));
SELECT ALL * FROM t0, vt0, v0 WHERE ((CAST(t0.c0 AS TEXT) IN (((t0.c1) IS FALSE)))) ORDER BY ((CAST(t0.c1 AS TEXT))IS(((t0.c1)>(v0.c0))))  NULLS LAST, (((t0.c2)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((t0.c0) IS TRUE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS TEXT) IN (((t0.c1) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((CAST(t0.c1 AS TEXT))IS(((t0.c1)>(v0.c0))))  NULLS LAST, (((t0.c2)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((t0.c0) IS TRUE)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, v0 WHERE ((CAST(t0.c0 AS TEXT) IN (((t0.c1) IS FALSE)))) ORDER BY ((CAST(t0.c1 AS TEXT))IS(((t0.c1)>(v0.c0))))  NULLS LAST, (((t0.c2)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((t0.c0) IS TRUE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS TEXT) IN (((t0.c1) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((CAST(t0.c1 AS TEXT))IS(((t0.c1)>(v0.c0))))  NULLS LAST, (((t0.c2)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((t0.c0) IS TRUE)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, v0 WHERE ((CAST(t0.c0 AS TEXT) IN (((t0.c1) IS FALSE)))) ORDER BY ((CAST(t0.c1 AS TEXT))IS(((t0.c1)>(v0.c0))))  NULLS LAST, (((t0.c2)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((t0.c0) IS TRUE)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((((((t0.c2)) BETWEEN ((t0.c0)) AND ((NULL))))OR(((vt0.c0)*(t0.c0)))))OR(x'5c33'))) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c2)) BETWEEN ((t0.c0)) AND ((NULL))))OR(((vt0.c0)*(t0.c0)))))OR(x'5c33'))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((((((t0.c2)) BETWEEN ((t0.c0)) AND ((NULL))))OR(((vt0.c0)*(t0.c0)))))OR(x'5c33'))) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c2)) BETWEEN ((t0.c0)) AND ((NULL))))OR(((vt0.c0)*(t0.c0)))))OR(x'5c33'))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((((((t0.c2)) BETWEEN ((t0.c0)) AND ((NULL))))OR(((vt0.c0)*(t0.c0)))))OR(x'5c33'))) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON TIME(((t0.c1)LIKE(t0.c1)), COALESCE(t0.c0, t0.c1, vt0.c0, t0.c0), ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)), x'f50a', (NOT (t0.c1))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 INNER JOIN vt0 ON TIME(((t0.c1)LIKE(t0.c1)), COALESCE(t0.c0, t0.c1, vt0.c0, t0.c0), ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)), x'f50a', (NOT (t0.c1))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON TIME(((t0.c1)LIKE(t0.c1)), COALESCE(t0.c0, t0.c1, vt0.c0, t0.c0), ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)), x'f50a', (NOT (t0.c1))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 INNER JOIN vt0 ON TIME(((t0.c1)LIKE(t0.c1)), COALESCE(t0.c0, t0.c1, vt0.c0, t0.c0), ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)), x'f50a', (NOT (t0.c1))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON TIME(((t0.c1)LIKE(t0.c1)), COALESCE(t0.c0, t0.c1, vt0.c0, t0.c0), ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)), x'f50a', (NOT (t0.c1))) WHERE (x'');
SELECT ALL * FROM v0 WHERE ('1863279679');
SELECT SUM(count) FROM (SELECT (('1863279679') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('1863279679');
SELECT SUM(count) FROM (SELECT (('1863279679') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('1863279679');
SELECT * FROM v0, t0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (0.16779890678816134) AND (LIKELY(t0.c2)))) ORDER BY LIKELY((((t0.c0))==((t0.c0)))) ASC  NULLS FIRST, t0.c2;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (0.16779890678816134) AND (LIKELY(t0.c2)))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON vt0.c0 ORDER BY LIKELY((((t0.c0))==((t0.c0)))) ASC  NULLS FIRST, t0.c2);
SELECT * FROM v0, t0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (0.16779890678816134) AND (LIKELY(t0.c2)))) ORDER BY LIKELY((((t0.c0))==((t0.c0)))) ASC  NULLS FIRST, t0.c2;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (0.16779890678816134) AND (LIKELY(t0.c2)))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON vt0.c0 ORDER BY LIKELY((((t0.c0))==((t0.c0)))) ASC  NULLS FIRST, t0.c2);
SELECT * FROM v0, t0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (0.16779890678816134) AND (LIKELY(t0.c2)))) ORDER BY LIKELY((((t0.c0))==((t0.c0)))) ASC  NULLS FIRST, t0.c2;
SELECT ALL * FROM t0 WHERE ((NOT (0x26eb100e))) ORDER BY (((- (t0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (0X26eb100e))) IS TRUE)  as count FROM t0 ORDER BY (((- (t0.c0))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((NOT (0x26eb100e))) ORDER BY (((- (t0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (0X26eb100e))) IS TRUE)  as count FROM t0 ORDER BY (((- (t0.c0))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((NOT (0x26eb100e))) ORDER BY (((- (t0.c0))) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE(t0.c0 COLLATE BINARY))) ORDER BY x'03e5' COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)LIKE(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY x'03e5' COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE(t0.c0 COLLATE BINARY))) ORDER BY x'03e5' COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)LIKE(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY x'03e5' COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE(t0.c0 COLLATE BINARY))) ORDER BY x'03e5' COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN v0 ON t0.c2 WHERE (UNICODE((NOT (t0.c2))));
SELECT SUM(count) FROM (SELECT ((UNICODE((NOT (t0.c2)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON t0.c2);
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN v0 ON t0.c2 WHERE (UNICODE((NOT (t0.c2))));
SELECT SUM(count) FROM (SELECT ((UNICODE((NOT (t0.c2)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON t0.c2);
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN v0 ON t0.c2 WHERE (UNICODE((NOT (t0.c2))));
SELECT COUNT(*) FROM v0 WHERE ((- (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- (((v0.c0) IS FALSE))));
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT (+ (t0.c0)))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (+ (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC);
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT (+ (t0.c0)))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (+ (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC);
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT (+ (t0.c0)))) ORDER BY t0.c0 ASC;
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 THEN ((v0.c0)+(v0.c0)) END) ORDER BY ((v0.c0 COLLATE NOCASE)LIKE(((v0.c0) ISNULL))), v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN ((v0.c0)+(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE)LIKE(((v0.c0) ISNULL))), v0.c0 DESC);
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 THEN ((v0.c0)+(v0.c0)) END) ORDER BY ((v0.c0 COLLATE NOCASE)LIKE(((v0.c0) ISNULL))), v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN ((v0.c0)+(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE)LIKE(((v0.c0) ISNULL))), v0.c0 DESC);
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 THEN ((v0.c0)+(v0.c0)) END) ORDER BY ((v0.c0 COLLATE NOCASE)LIKE(((v0.c0) ISNULL))), v0.c0 DESC;
SELECT ALL * FROM v0 WHERE (x'0fd6');
SELECT SUM(count) FROM (SELECT ALL ((x'0fd6') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (x'0fd6');
SELECT SUM(count) FROM (SELECT ALL ((x'0fd6') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (x'0fd6');
SELECT ALL * FROM v0, vt0 INDEXED BY i2, t0 INDEXED BY i2 WHERE ((- (((vt0.c0)&(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)&(t0.c0))))) IS TRUE)  as count FROM v0, vt0 INDEXED BY i2, t0 INDEXED BY i2);
SELECT ALL * FROM v0, vt0 INDEXED BY i2, t0 INDEXED BY i2 WHERE ((- (((vt0.c0)&(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)&(t0.c0))))) IS TRUE)  as count FROM v0, vt0 INDEXED BY i2, t0 INDEXED BY i2);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((((t0.c1) BETWEEN (v0.c0) AND (t0.c1)))AND(((t0.c1) NOT NULL))))AND((((v0.c0))<((t0.c0)))))) ORDER BY (('XH')<>((NOT (t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) BETWEEN (v0.c0) AND (t0.c1)))AND(((t0.c1) NOT NULL))))AND((((v0.c0))<((t0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (('XH')!=((NOT (t0.c2)))));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((((t0.c1) BETWEEN (v0.c0) AND (t0.c1)))AND(((t0.c1) NOT NULL))))AND((((v0.c0))<((t0.c0)))))) ORDER BY (('XH')<>((NOT (t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) BETWEEN (v0.c0) AND (t0.c1)))AND(((t0.c1) NOT NULL))))AND((((v0.c0))<((t0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (('XH')!=((NOT (t0.c2)))));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((((t0.c1) BETWEEN (v0.c0) AND (t0.c1)))AND(((t0.c1) NOT NULL))))AND((((v0.c0))<((t0.c0)))))) ORDER BY (('XH')<>((NOT (t0.c2))));
SELECT * FROM t0 WHERE ((((t0.c1 IN ()))/(((t0.c0)AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ()))/(((t0.c0)AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c1 IN ()))/(((t0.c0)AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ()))/(((t0.c0)AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c1 IN ()))/(((t0.c0)AND(t0.c0)))));
SELECT * FROM v0, t0 INNER JOIN vt0 ON (((((0xffffffffa91114c1))>=((vt0.c0))))>=((- (t0.c1)))) WHERE (((((UNICODE(t0.c0))AND(CAST(t0.c0 AS TEXT))))OR((~ ('471477288')))));
SELECT SUM(count) FROM (SELECT ALL ((((((UNICODE(t0.c0))AND(CAST(t0.c0 AS TEXT))))OR((~ ('471477288'))))) IS TRUE)  as count FROM v0, t0 INNER JOIN vt0 ON (((((0xffffffffa91114c1))>=((vt0.c0))))>=((- (t0.c1)))));
SELECT * FROM v0, t0 INNER JOIN vt0 ON (((((0xffffffffa91114c1))>=((vt0.c0))))>=((- (t0.c1)))) WHERE (((((UNICODE(t0.c0))AND(CAST(t0.c0 AS TEXT))))OR((~ ('471477288')))));
SELECT SUM(count) FROM (SELECT ALL ((((((UNICODE(t0.c0))AND(CAST(t0.c0 AS TEXT))))OR((~ ('471477288'))))) IS TRUE)  as count FROM v0, t0 INNER JOIN vt0 ON (((((0xffffffffa91114c1))>=((vt0.c0))))>=((- (t0.c1)))));
SELECT * FROM v0, t0 INNER JOIN vt0 ON (((((0xffffffffa91114c1))>=((vt0.c0))))>=((- (t0.c1)))) WHERE (((((UNICODE(t0.c0))AND(CAST(t0.c0 AS TEXT))))OR((~ ('471477288')))));
SELECT ALL * FROM t0, vt0, v0 WHERE (((CAST(t0.c0 AS REAL)) ISNULL)) ORDER BY (((CAST(vt0.c0 AS REAL)))<((CAST(t0.c0 AS NUMERIC)))), (((((v0.c0)%(t0.c0))))=(((NOT (vt0.c0))))) DESC, ((((((v0.c0) BETWEEN (t0.c0) AND (t0.c2)))OR((NOT (t0.c0)))))AND(((t0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL)) ISNULL)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((CAST(vt0.c0 AS REAL)))<((CAST(t0.c0 AS NUMERIC)))), (((((v0.c0)%(t0.c0))))=(((NOT (vt0.c0))))) DESC, ((((((v0.c0) BETWEEN (t0.c0) AND (t0.c2)))OR((NOT (t0.c0)))))AND(((t0.c2) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM t0, vt0, v0 WHERE (((CAST(t0.c0 AS REAL)) ISNULL)) ORDER BY (((CAST(vt0.c0 AS REAL)))<((CAST(t0.c0 AS NUMERIC)))), (((((v0.c0)%(t0.c0))))=(((NOT (vt0.c0))))) DESC, ((((((v0.c0) BETWEEN (t0.c0) AND (t0.c2)))OR((NOT (t0.c0)))))AND(((t0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL)) ISNULL)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((CAST(vt0.c0 AS REAL)))<((CAST(t0.c0 AS NUMERIC)))), (((((v0.c0)%(t0.c0))))=(((NOT (vt0.c0))))) DESC, ((((((v0.c0) BETWEEN (t0.c0) AND (t0.c2)))OR((NOT (t0.c0)))))AND(((t0.c2) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM t0, vt0, v0 WHERE (((CAST(t0.c0 AS REAL)) ISNULL)) ORDER BY (((CAST(vt0.c0 AS REAL)))<((CAST(t0.c0 AS NUMERIC)))), (((((v0.c0)%(t0.c0))))=(((NOT (vt0.c0))))) DESC, ((((((v0.c0) BETWEEN (t0.c0) AND (t0.c2)))OR((NOT (t0.c0)))))AND(((t0.c2) NOTNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (x'') ORDER BY CASE WHEN ((t0.c1)!=(t0.c0)) THEN ((NULL) BETWEEN (t0.c1) AND (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN ((t0.c1)!=(t0.c0)) THEN ((NULL) BETWEEN (t0.c1) AND (v0.c0)) END);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (x'') ORDER BY CASE WHEN ((t0.c1)!=(t0.c0)) THEN ((NULL) BETWEEN (t0.c1) AND (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN ((t0.c1)!=(t0.c0)) THEN ((NULL) BETWEEN (t0.c1) AND (v0.c0)) END);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (x'') ORDER BY CASE WHEN ((t0.c1)!=(t0.c0)) THEN ((NULL) BETWEEN (t0.c1) AND (v0.c0)) END;
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL))&((vt0.c0 IN ())))) ORDER BY (((((vt0.c0, NULL, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)  NULLS FIRST, (vt0.c0 IN ()) COLLATE NOCASE DESC  NULLS LAST, IFNULL(vt0.c0 COLLATE RTRIM, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))&((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, NULL, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)  NULLS FIRST, (vt0.c0 IN ()) COLLATE NOCASE DESC  NULLS LAST, IFNULL(vt0.c0 COLLATE RTRIM, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL))&((vt0.c0 IN ())))) ORDER BY (((((vt0.c0, NULL, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)  NULLS FIRST, (vt0.c0 IN ()) COLLATE NOCASE DESC  NULLS LAST, IFNULL(vt0.c0 COLLATE RTRIM, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))&((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, NULL, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)  NULLS FIRST, (vt0.c0 IN ()) COLLATE NOCASE DESC  NULLS LAST, IFNULL(vt0.c0 COLLATE RTRIM, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL))&((vt0.c0 IN ())))) ORDER BY (((((vt0.c0, NULL, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)  NULLS FIRST, (vt0.c0 IN ()) COLLATE NOCASE DESC  NULLS LAST, IFNULL(vt0.c0 COLLATE RTRIM, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0, t0 WHERE ((- (((vt0.c0) IS TRUE)))) ORDER BY (~ (v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (~ (v0.c0)) ASC);
SELECT ALL * FROM vt0, v0, t0 WHERE ((- (((vt0.c0) IS TRUE)))) ORDER BY (~ (v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (~ (v0.c0)) ASC);
SELECT ALL * FROM vt0, v0, t0 WHERE ((- (((vt0.c0) IS TRUE)))) ORDER BY (~ (v0.c0)) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (json_valid('狴n')) ORDER BY (0.27200216146293243 IN ());
SELECT SUM(count) FROM (SELECT ALL ((json_valid('狴n')) IS TRUE)  as count FROM v0 ORDER BY (0.27200216146293243 IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (json_valid('狴n')) ORDER BY (0.27200216146293243 IN ());
SELECT SUM(count) FROM (SELECT ALL ((json_valid('狴n')) IS TRUE)  as count FROM v0 ORDER BY (0.27200216146293243 IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (json_valid('狴n')) ORDER BY (0.27200216146293243 IN ());
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY CAST((~ (vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((~ (vt0.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY CAST((~ (vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((~ (vt0.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY CAST((~ (vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'dc7d', vt0.c0, vt0.c0)))))>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY ((vt0.c0 IN (vt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'dc7d', vt0.c0, vt0.c0)))))>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN (vt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'dc7d', vt0.c0, vt0.c0)))))>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY ((vt0.c0 IN (vt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'dc7d', vt0.c0, vt0.c0)))))>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN (vt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'dc7d', vt0.c0, vt0.c0)))))>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY ((vt0.c0 IN (vt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ('' COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('' COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('' COLLATE RTRIM COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON UNLIKELY(((((vt0.c0)AND(t0.c1)))AND(x''))) CROSS JOIN t0 ON (((((((((((((t0.c2 IN (vt0.c0)))AND((~ (vt0.c0)))))OR(NULL)))OR(v0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN v0.c0 END)))AND(t0.c1 COLLATE BINARY)))OR(((v0.c0)>(vt0.c0)))) WHERE ((((t0.c1 IN (t0.c1)))||((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN (t0.c1)))||((- (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON UNLIKELY(((((vt0.c0)AND(t0.c1)))AND(x''))) CROSS JOIN t0 ON (((((((((((((t0.c2 IN (vt0.c0)))AND((~ (vt0.c0)))))OR(NULL)))OR(v0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN v0.c0 END)))AND(t0.c1 COLLATE BINARY)))OR(((v0.c0)>(vt0.c0)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON UNLIKELY(((((vt0.c0)AND(t0.c1)))AND(x''))) CROSS JOIN t0 ON (((((((((((((t0.c2 IN (vt0.c0)))AND((~ (vt0.c0)))))OR(NULL)))OR(v0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN v0.c0 END)))AND(t0.c1 COLLATE BINARY)))OR(((v0.c0)>(vt0.c0)))) WHERE ((((t0.c1 IN (t0.c1)))||((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN (t0.c1)))||((- (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON UNLIKELY(((((vt0.c0)AND(t0.c1)))AND(x''))) CROSS JOIN t0 ON (((((((((((((t0.c2 IN (vt0.c0)))AND((~ (vt0.c0)))))OR(NULL)))OR(v0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN v0.c0 END)))AND(t0.c1 COLLATE BINARY)))OR(((v0.c0)>(vt0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (+ (CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (+ (CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (+ (CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END));
SELECT COUNT(*) FROM v0, t0, vt0 NOT INDEXED WHERE ((((((((t0.c2)OR(t0.c0)))AND(t0.c2))))<=(((t0.c1 IN ()))))) ORDER BY ((((((((((((-1222447795)OR(ROUND(t0.c2, t0.c1))))OR((t0.c2 IN ()))))AND(CAST(v0.c0 AS NUMERIC))))AND(((v0.c0)>=(t0.c1)))))AND(((t0.c0)||(vt0.c0)))))AND(CAST(v0.c0 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c2)OR(t0.c0)))AND(t0.c2))))<=(((t0.c1 IN ()))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((((((((-1222447795)OR(ROUND(t0.c2, t0.c1))))OR((t0.c2 IN ()))))AND(CAST(v0.c0 AS NUMERIC))))AND(((v0.c0)>=(t0.c1)))))AND(((t0.c0)||(vt0.c0)))))AND(CAST(v0.c0 AS REAL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, vt0 NOT INDEXED WHERE ((((((((t0.c2)OR(t0.c0)))AND(t0.c2))))<=(((t0.c1 IN ()))))) ORDER BY ((((((((((((-1222447795)OR(ROUND(t0.c2, t0.c1))))OR((t0.c2 IN ()))))AND(CAST(v0.c0 AS NUMERIC))))AND(((v0.c0)>=(t0.c1)))))AND(((t0.c0)||(vt0.c0)))))AND(CAST(v0.c0 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c2)OR(t0.c0)))AND(t0.c2))))<=(((t0.c1 IN ()))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((((((((-1222447795)OR(ROUND(t0.c2, t0.c1))))OR((t0.c2 IN ()))))AND(CAST(v0.c0 AS NUMERIC))))AND(((v0.c0)>=(t0.c1)))))AND(((t0.c0)||(vt0.c0)))))AND(CAST(v0.c0 AS REAL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, vt0 NOT INDEXED WHERE ((((((((t0.c2)OR(t0.c0)))AND(t0.c2))))<=(((t0.c1 IN ()))))) ORDER BY ((((((((((((-1222447795)OR(ROUND(t0.c2, t0.c1))))OR((t0.c2 IN ()))))AND(CAST(v0.c0 AS NUMERIC))))AND(((v0.c0)>=(t0.c1)))))AND(((t0.c0)||(vt0.c0)))))AND(CAST(v0.c0 AS REAL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2)!=(t0.c2)), (t0.c1 IN ()), ((t0.c0)AND(t0.c0))))<>((CAST(t0.c2 AS NUMERIC), '171763424', x'')))) ORDER BY (((((((t0.c1)AND(t0.c0)))OR(t0.c1))))>((TRIM(DISTINCT t0.c0, t0.c1))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)!=(t0.c2)), (t0.c1 IN ()), ((t0.c0)AND(t0.c0))))<>((CAST(t0.c2 AS NUMERIC), '171763424', x'')))) IS TRUE)  as count FROM t0 ORDER BY (((((((t0.c1)AND(t0.c0)))OR(t0.c1))))>((TRIM(DISTINCT t0.c0, t0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2)!=(t0.c2)), (t0.c1 IN ()), ((t0.c0)AND(t0.c0))))<>((CAST(t0.c2 AS NUMERIC), '171763424', x'')))) ORDER BY (((((((t0.c1)AND(t0.c0)))OR(t0.c1))))>((TRIM(DISTINCT t0.c0, t0.c1))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)!=(t0.c2)), (t0.c1 IN ()), ((t0.c0)AND(t0.c0))))<>((CAST(t0.c2 AS NUMERIC), '171763424', x'')))) IS TRUE)  as count FROM t0 ORDER BY (((((((t0.c1)AND(t0.c0)))OR(t0.c1))))>((TRIM(DISTINCT t0.c0, t0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2)!=(t0.c2)), (t0.c1 IN ()), ((t0.c0)AND(t0.c0))))<>((CAST(t0.c2 AS NUMERIC), '171763424', x'')))) ORDER BY (((((((t0.c1)AND(t0.c0)))OR(t0.c1))))>((TRIM(DISTINCT t0.c0, t0.c1))));
SELECT ALL * FROM v0 WHERE ((NOT ('[ Poa 䖬1')));
SELECT SUM(count) FROM (SELECT (((NOT ('[ Poa 䖬1'))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT ('[ Poa 䖬1')));
SELECT SUM(count) FROM (SELECT (((NOT ('[ Poa 䖬1'))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT ('[ Poa 䖬1')));
SELECT ALL * FROM vt0, t0, v0 WHERE (((LIKELIHOOD(t0.c2, 0.4277745169148853))+(((v0.c0) NOTNULL)))) ORDER BY (((((v0.c0))!=((t0.c2)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(t0.c2, 0.4277745169148853))+(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((((v0.c0))!=((t0.c2)))) NOTNULL));
SELECT ALL * FROM vt0, t0, v0 WHERE (((LIKELIHOOD(t0.c2, 0.4277745169148853))+(((v0.c0) NOTNULL)))) ORDER BY (((((v0.c0))!=((t0.c2)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(t0.c2, 0.4277745169148853))+(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((((v0.c0))!=((t0.c2)))) NOTNULL));
SELECT ALL * FROM vt0, t0, v0 WHERE (((LIKELIHOOD(t0.c2, 0.4277745169148853))+(((v0.c0) NOTNULL)))) ORDER BY (((((v0.c0))!=((t0.c2)))) NOTNULL);
SELECT ALL COUNT(*) FROM v0 INDEXED BY i2 WHERE ((((((v0.c0 IN ()))AND(v0.c0)))AND((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND(v0.c0)))AND((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0 INDEXED BY i2);
SELECT ALL COUNT(*) FROM v0 INDEXED BY i2 WHERE ((((((v0.c0 IN ()))AND(v0.c0)))AND((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND(v0.c0)))AND((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0 INDEXED BY i2);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((t0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((t0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((t0.c2 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (CAST(t0.c2 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (CAST(t0.c2 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (CAST(t0.c2 AS NUMERIC));
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c2 AS REAL))%(TRIM(t0.c2, vt0.c0)))) ORDER BY vt0.c0 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS REAL))%(TRIM(t0.c2, vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0 COLLATE RTRIM DESC);
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c2 AS REAL))%(TRIM(t0.c2, vt0.c0)))) ORDER BY vt0.c0 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS REAL))%(TRIM(t0.c2, vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0 COLLATE RTRIM DESC);
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c2 AS REAL))%(TRIM(t0.c2, vt0.c0)))) ORDER BY vt0.c0 COLLATE RTRIM DESC;
SELECT * FROM t0 WHERE (UNLIKELY(t0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(t0.c2) COLLATE NOCASE) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE (UNLIKELY(t0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(t0.c2) COLLATE NOCASE) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE (UNLIKELY(t0.c2) COLLATE NOCASE);
SELECT * FROM v0 WHERE (TRIM(DISTINCT (~ (v0.c0)))) ORDER BY ((v0.c0)>(v0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (~ (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)>(v0.c0)) COLLATE NOCASE);
SELECT * FROM v0 WHERE (TRIM(DISTINCT (~ (v0.c0)))) ORDER BY ((v0.c0)>(v0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (~ (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)>(v0.c0)) COLLATE NOCASE);
SELECT * FROM v0 WHERE (TRIM(DISTINCT (~ (v0.c0)))) ORDER BY ((v0.c0)>(v0.c0)) COLLATE NOCASE;
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) NOT BETWEEN (1.230479005E9) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) NOT BETWEEN (1.230479005E9) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) NOT BETWEEN (1.230479005E9) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) NOT BETWEEN (1.230479005E9) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) NOT BETWEEN (1.230479005E9) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON 0.34645879465065843 WHERE (((((t0.c2) NOT NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON 0.34645879465065843);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON 0.34645879465065843 WHERE (((((t0.c2) NOT NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON 0.34645879465065843);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON 0.34645879465065843 WHERE (((((t0.c2) NOT NULL)) IS TRUE));
SELECT * FROM t0, vt0, v0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE (t0.c1);
SELECT * FROM v0 NOT INDEXED WHERE (CASE WHEN (+ (v0.c0)) THEN (((v0.c0))=((v0.c0))) ELSE '5	/Bmi 	m' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (v0.c0)) THEN (((v0.c0))=((v0.c0))) ELSE '5	/Bmi 	m' END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 NOT INDEXED WHERE (CASE WHEN (+ (v0.c0)) THEN (((v0.c0))=((v0.c0))) ELSE '5	/Bmi 	m' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (v0.c0)) THEN (((v0.c0))=((v0.c0))) ELSE '5	/Bmi 	m' END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 NOT INDEXED WHERE (CASE WHEN (+ (v0.c0)) THEN (((v0.c0))=((v0.c0))) ELSE '5	/Bmi 	m' END);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c1)/(t0.c2)) RIGHT OUTER JOIN vt0 ON (HEX(DISTINCT t0.c0) IN ()) WHERE (((((CASE t0.c1  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((vt0.c0)LIKE(v0.c0)))))OR(((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c2))))) ORDER BY ((-1.110394466E9)-(((t0.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c1  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((vt0.c0)LIKE(v0.c0)))))OR(((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c1)/(t0.c2)) RIGHT OUTER JOIN vt0 ON (HEX(DISTINCT t0.c0) IN ()) ORDER BY ((-1.110394466E9)-(((t0.c1) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c1)/(t0.c2)) RIGHT OUTER JOIN vt0 ON (HEX(DISTINCT t0.c0) IN ()) WHERE (((((CASE t0.c1  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((vt0.c0)LIKE(v0.c0)))))OR(((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c2))))) ORDER BY ((-1.110394466E9)-(((t0.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c1  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((vt0.c0)LIKE(v0.c0)))))OR(((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c1)/(t0.c2)) RIGHT OUTER JOIN vt0 ON (HEX(DISTINCT t0.c0) IN ()) ORDER BY ((-1.110394466E9)-(((t0.c1) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c1)/(t0.c2)) RIGHT OUTER JOIN vt0 ON (HEX(DISTINCT t0.c0) IN ()) WHERE (((((CASE t0.c1  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((vt0.c0)LIKE(v0.c0)))))OR(((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c2))))) ORDER BY ((-1.110394466E9)-(((t0.c1) NOTNULL)))  NULLS LAST;
SELECT ALL * FROM v0, t0 WHERE ((+ (((((t0.c2)OR(t0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((t0.c2)OR(t0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((+ (((((t0.c2)OR(t0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((t0.c2)OR(t0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((+ (((((t0.c2)OR(t0.c0)))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS INTEGER))>=(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS INTEGER))>=(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS INTEGER))>=(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS INTEGER))>=(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS INTEGER))>=(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))));
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0)>=(vt0.c0))))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0)>=(vt0.c0))))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0)>=(vt0.c0))))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE;
SELECT * FROM v0, t0 CROSS JOIN vt0 ON NULL WHERE (((((((((((((t0.c0)AND(v0.c0)))AND(t0.c1)))OR(t0.c1)))OR(v0.c0)))OR(('479720178' IN ()))))OR(((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0)AND(v0.c0)))AND(t0.c1)))OR(t0.c1)))OR(v0.c0)))OR(('479720178' IN ()))))OR(((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1))))) IS TRUE)  as count FROM v0, t0 CROSS JOIN vt0 ON NULL);
SELECT * FROM v0, t0 CROSS JOIN vt0 ON NULL WHERE (((((((((((((t0.c0)AND(v0.c0)))AND(t0.c1)))OR(t0.c1)))OR(v0.c0)))OR(('479720178' IN ()))))OR(((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0)AND(v0.c0)))AND(t0.c1)))OR(t0.c1)))OR(v0.c0)))OR(('479720178' IN ()))))OR(((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1))))) IS TRUE)  as count FROM v0, t0 CROSS JOIN vt0 ON NULL);
SELECT * FROM v0, t0 CROSS JOIN vt0 ON NULL WHERE (((((((((((((t0.c0)AND(v0.c0)))AND(t0.c1)))OR(t0.c1)))OR(v0.c0)))OR(('479720178' IN ()))))OR(((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS TEXT))<(v0.c0 COLLATE RTRIM))) ORDER BY json_insert((((v0.c0))<>((v0.c0))), (- (v0.c0)), ((v0.c0)OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT))<(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY json_insert((((v0.c0))!=((v0.c0))), (- (v0.c0)), ((v0.c0)OR(v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS TEXT))<(v0.c0 COLLATE RTRIM))) ORDER BY json_insert((((v0.c0))<>((v0.c0))), (- (v0.c0)), ((v0.c0)OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT))<(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY json_insert((((v0.c0))!=((v0.c0))), (- (v0.c0)), ((v0.c0)OR(v0.c0))));
SELECT ALL * FROM vt0, t0, v0 WHERE (CAST(CHAR(t0.c1) AS NUMERIC)) ORDER BY (((((t0.c1)-(vt0.c0))))<(('-444864508'))) DESC  NULLS LAST, NULLIF(((t0.c2) NOTNULL), CAST(vt0.c0 AS NUMERIC)) DESC, ((((0.9679818507103314)GLOB(t0.c1)))IS NOT(t0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CHAR(t0.c1) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((((t0.c1)-(vt0.c0))))<(('-444864508'))) DESC  NULLS LAST, NULLIF(((t0.c2) NOTNULL), CAST(vt0.c0 AS NUMERIC)) DESC, ((((0.9679818507103314)GLOB(t0.c1)))IS NOT(t0.c2)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE (CAST(CHAR(t0.c1) AS NUMERIC)) ORDER BY (((((t0.c1)-(vt0.c0))))<(('-444864508'))) DESC  NULLS LAST, NULLIF(((t0.c2) NOTNULL), CAST(vt0.c0 AS NUMERIC)) DESC, ((((0.9679818507103314)GLOB(t0.c1)))IS NOT(t0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CHAR(t0.c1) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((((t0.c1)-(vt0.c0))))<(('-444864508'))) DESC  NULLS LAST, NULLIF(((t0.c2) NOTNULL), CAST(vt0.c0 AS NUMERIC)) DESC, ((((0.9679818507103314)GLOB(t0.c1)))IS NOT(t0.c2)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE (CAST(CHAR(t0.c1) AS NUMERIC)) ORDER BY (((((t0.c1)-(vt0.c0))))<(('-444864508'))) DESC  NULLS LAST, NULLIF(((t0.c2) NOTNULL), CAST(vt0.c0 AS NUMERIC)) DESC, ((((0.9679818507103314)GLOB(t0.c1)))IS NOT(t0.c2)) ASC  NULLS LAST;
SELECT ALL * FROM v0, t0, vt0 WHERE (((t0.c0)>=(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)>=(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE (((t0.c0)>=(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)>=(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE (((t0.c0)>=(v0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((CAST(t0.c1 AS BLOB)) ISNULL)) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(NULL))) IS FALSE) DESC  NULLS LAST, ((CASE v0.c0  WHEN t0.c0 THEN t0.c0 END)GLOB(((((vt0.c0)AND(v0.c0)))AND(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(NULL))) IS FALSE) DESC  NULLS LAST, ((CASE v0.c0  WHEN t0.c0 THEN t0.c0 END)GLOB(((((vt0.c0)AND(v0.c0)))AND(t0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((CAST(t0.c1 AS BLOB)) ISNULL)) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(NULL))) IS FALSE) DESC  NULLS LAST, ((CASE v0.c0  WHEN t0.c0 THEN t0.c0 END)GLOB(((((vt0.c0)AND(v0.c0)))AND(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(NULL))) IS FALSE) DESC  NULLS LAST, ((CASE v0.c0  WHEN t0.c0 THEN t0.c0 END)GLOB(((((vt0.c0)AND(v0.c0)))AND(t0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((CAST(t0.c1 AS BLOB)) ISNULL)) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(NULL))) IS FALSE) DESC  NULLS LAST, ((CASE v0.c0  WHEN t0.c0 THEN t0.c0 END)GLOB(((((vt0.c0)AND(v0.c0)))AND(t0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM vt0, v0, t0 WHERE (CAST(((vt0.c0)GLOB(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)GLOB(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (CAST(((vt0.c0)GLOB(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)GLOB(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (CAST(((vt0.c0)GLOB(vt0.c0)) AS NUMERIC));
SELECT * FROM t0, vt0, v0 WHERE ((((v0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE ((((v0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE ((((v0.c0 IN ())) NOTNULL));
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE ((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0)))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE ((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0)))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE ((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))));
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0))) ORDER BY NULL DESC  NULLS FIRST, (- (CAST(vt0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY NULL DESC  NULLS FIRST, (- (CAST(vt0.c0 AS INTEGER)))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0))) ORDER BY NULL DESC  NULLS FIRST, (- (CAST(vt0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY NULL DESC  NULLS FIRST, (- (CAST(vt0.c0 AS INTEGER)))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0))) ORDER BY NULL DESC  NULLS FIRST, (- (CAST(vt0.c0 AS INTEGER)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 INDEXED BY i2, t0, vt0 WHERE ((CASE WHEN v0.c0 THEN vt0.c0 END IN ('5B^N_?>]l', 0Xffffffff8e68fdbe))) ORDER BY (('l#') NOT BETWEEN (((x'')AND(vt0.c0))) AND (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN vt0.c0 END IN ('5B^N_?>]l', 0xffffffff8e68fdbe))) IS TRUE)  as count FROM v0 INDEXED BY i2, t0, vt0 ORDER BY (('l#') NOT BETWEEN (((x'')AND(vt0.c0))) AND (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INDEXED BY i2, t0, vt0 WHERE ((CASE WHEN v0.c0 THEN vt0.c0 END IN ('5B^N_?>]l', 0Xffffffff8e68fdbe))) ORDER BY (('l#') NOT BETWEEN (((x'')AND(vt0.c0))) AND (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN vt0.c0 END IN ('5B^N_?>]l', 0xffffffff8e68fdbe))) IS TRUE)  as count FROM v0 INDEXED BY i2, t0, vt0 ORDER BY (('l#') NOT BETWEEN (((x'')AND(vt0.c0))) AND (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((((((((((((vt0.c0)OR('')))OR(t0.c1)))AND(t0.c2)))OR(x'3e78')))AND(t0.c1)))AND(t0.c0)) IN ())) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c0)OR('')))OR(t0.c1)))AND(t0.c2)))OR(x'3e78')))AND(t0.c1)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((((((((((((vt0.c0)OR('')))OR(t0.c1)))AND(t0.c2)))OR(x'3e78')))AND(t0.c1)))AND(t0.c0)) IN ())) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c0)OR('')))OR(t0.c1)))AND(t0.c2)))OR(x'3e78')))AND(t0.c1)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((((((((((((vt0.c0)OR('')))OR(t0.c1)))AND(t0.c2)))OR(x'3e78')))AND(t0.c1)))AND(t0.c0)) IN ())) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0) NOTNULL) WHEN (~ (v0.c0)) THEN MIN(v0.c0, v0.c0) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0) NOTNULL) WHEN (~ (v0.c0)) THEN MIN(v0.c0, v0.c0) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0) NOTNULL) WHEN (~ (v0.c0)) THEN MIN(v0.c0, v0.c0) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0) NOTNULL) WHEN (~ (v0.c0)) THEN MIN(v0.c0, v0.c0) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0) NOTNULL) WHEN (~ (v0.c0)) THEN MIN(v0.c0, v0.c0) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 COLLATE NOCASE END);
SELECT * FROM v0, vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN (('FG')) AND ((vt0.c0))) AS TEXT)) ORDER BY (~ (((v0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0)) NOT BETWEEN (('FG')) AND ((vt0.c0))) AS TEXT)) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (((v0.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN (('FG')) AND ((vt0.c0))) AS TEXT)) ORDER BY (~ (((v0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0)) NOT BETWEEN (('FG')) AND ((vt0.c0))) AS TEXT)) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (((v0.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN (('FG')) AND ((vt0.c0))) AS TEXT)) ORDER BY (~ (((v0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON t0.c1 FULL OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END) NOTNULL) WHERE ((NOT ((t0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c1 IN ())))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON t0.c1 FULL OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END) NOTNULL));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON t0.c1 FULL OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END) NOTNULL) WHERE ((NOT ((t0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c1 IN ())))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON t0.c1 FULL OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END) NOTNULL));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON t0.c1 FULL OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END) NOTNULL) WHERE ((NOT ((t0.c1 IN ()))));
SELECT ALL * FROM t0, vt0, v0 WHERE (((json_insert(vt0.c0, 0.12706846496976476, NULL))>=(0.1948837405813948))) ORDER BY 321555425 ASC;
SELECT SUM(count) FROM (SELECT ((((json_insert(vt0.c0, 0.12706846496976476, NULL))>=(0.1948837405813948))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY 321555425 ASC);
SELECT ALL * FROM t0, vt0, v0 WHERE (((json_insert(vt0.c0, 0.12706846496976476, NULL))>=(0.1948837405813948))) ORDER BY 321555425 ASC;
SELECT SUM(count) FROM (SELECT ((((json_insert(vt0.c0, 0.12706846496976476, NULL))>=(0.1948837405813948))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY 321555425 ASC);
SELECT * FROM t0, vt0, v0 WHERE (ABS(v0.c0)) ORDER BY (((NOT (t0.c2))) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((v0.c0)IS(t0.c2))));
SELECT SUM(count) FROM (SELECT ((ABS(v0.c0)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((NOT (t0.c2))) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((v0.c0)IS(t0.c2)))));
SELECT * FROM t0, vt0, v0 WHERE (ABS(v0.c0)) ORDER BY (((NOT (t0.c2))) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((v0.c0)IS(t0.c2))));
SELECT SUM(count) FROM (SELECT ((ABS(v0.c0)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((NOT (t0.c2))) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((v0.c0)IS(t0.c2)))));
SELECT * FROM t0, vt0, v0 WHERE (ABS(v0.c0)) ORDER BY (((NOT (t0.c2))) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((v0.c0)IS(t0.c2))));
SELECT * FROM vt0, v0, t0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 END) NOT NULL)) ORDER BY CASE WHEN (t0.c0 IN (t0.c0)) THEN (vt0.c0 IN ()) ELSE SQLITE_COMPILEOPTION_USED(v0.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN v0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CASE WHEN (t0.c0 IN (t0.c0)) THEN (vt0.c0 IN ()) ELSE SQLITE_COMPILEOPTION_USED(v0.c0) END);
SELECT * FROM vt0, v0, t0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 END) NOT NULL)) ORDER BY CASE WHEN (t0.c0 IN (t0.c0)) THEN (vt0.c0 IN ()) ELSE SQLITE_COMPILEOPTION_USED(v0.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN v0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CASE WHEN (t0.c0 IN (t0.c0)) THEN (vt0.c0 IN ()) ELSE SQLITE_COMPILEOPTION_USED(v0.c0) END);
SELECT * FROM vt0, v0, t0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 END) NOT NULL)) ORDER BY CASE WHEN (t0.c0 IN (t0.c0)) THEN (vt0.c0 IN ()) ELSE SQLITE_COMPILEOPTION_USED(v0.c0) END;
SELECT ALL * FROM vt0, t0, v0 WHERE ((((((~ (t0.c0)))OR(v0.c0 COLLATE BINARY)))AND(((t0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (t0.c0)))OR(v0.c0 COLLATE BINARY)))AND(((t0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE ((((((~ (t0.c0)))OR(v0.c0 COLLATE BINARY)))AND(((t0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (t0.c0)))OR(v0.c0 COLLATE BINARY)))AND(((t0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE ((((((~ (t0.c0)))OR(v0.c0 COLLATE BINARY)))AND(((t0.c1) NOT NULL))));
SELECT * FROM v0, t0 WHERE ((+ (CASE WHEN 0x11b611de THEN t0.c1 WHEN t0.c2 THEN '205338537' WHEN NULL THEN t0.c2 ELSE t0.c2 END))) ORDER BY (((t0.c2)) BETWEEN ((((t0.c0)!=(t0.c0)))) AND ((x'44b4'))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN 0x11b611de THEN t0.c1 WHEN t0.c2 THEN '205338537' WHEN NULL THEN t0.c2 ELSE t0.c2 END))) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c2)) BETWEEN ((((t0.c0)<>(t0.c0)))) AND ((x'44b4'))) ASC  NULLS LAST);
SELECT * FROM v0, t0 WHERE ((+ (CASE WHEN 0x11b611de THEN t0.c1 WHEN t0.c2 THEN '205338537' WHEN NULL THEN t0.c2 ELSE t0.c2 END))) ORDER BY (((t0.c2)) BETWEEN ((((t0.c0)!=(t0.c0)))) AND ((x'44b4'))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN 0x11b611de THEN t0.c1 WHEN t0.c2 THEN '205338537' WHEN NULL THEN t0.c2 ELSE t0.c2 END))) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c2)) BETWEEN ((((t0.c0)<>(t0.c0)))) AND ((x'44b4'))) ASC  NULLS LAST);
SELECT * FROM v0, t0 WHERE ((+ (CASE WHEN 0x11b611de THEN t0.c1 WHEN t0.c2 THEN '205338537' WHEN NULL THEN t0.c2 ELSE t0.c2 END))) ORDER BY (((t0.c2)) BETWEEN ((((t0.c0)!=(t0.c0)))) AND ((x'44b4'))) ASC  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST(((((((((t0.c1)OR(vt0.c0)))OR('-1978875445')))OR(t0.c2)))OR(t0.c0)) AS TEXT) LEFT OUTER JOIN t0 ON CAST(NULL AS REAL) WHERE (CASE WHEN (((t0.c1))<((v0.c0))) THEN CASE t0.c0  WHEN v0.c0 THEN t0.c0 END ELSE ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c1))<((v0.c0))) THEN CASE t0.c0  WHEN v0.c0 THEN t0.c0 END ELSE ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST(((((((((t0.c1)OR(vt0.c0)))OR('-1978875445')))OR(t0.c2)))OR(t0.c0)) AS TEXT) LEFT OUTER JOIN t0 ON CAST(NULL AS REAL));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST(((((((((t0.c1)OR(vt0.c0)))OR('-1978875445')))OR(t0.c2)))OR(t0.c0)) AS TEXT) LEFT OUTER JOIN t0 ON CAST(NULL AS REAL) WHERE (CASE WHEN (((t0.c1))<((v0.c0))) THEN CASE t0.c0  WHEN v0.c0 THEN t0.c0 END ELSE ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c1))<((v0.c0))) THEN CASE t0.c0  WHEN v0.c0 THEN t0.c0 END ELSE ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST(((((((((t0.c1)OR(vt0.c0)))OR('-1978875445')))OR(t0.c2)))OR(t0.c0)) AS TEXT) LEFT OUTER JOIN t0 ON CAST(NULL AS REAL));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt0.c0) NOTNULL)) CROSS JOIN v0 ON ((0.7256129244304191)*(((((NULL)AND(t0.c1)))AND(v0.c0)))) WHERE ((((vt0.c0)IS NOT(t0.c0)) IN (t0.c2 COLLATE NOCASE, LIKELY(t0.c1)))) ORDER BY ((((t0.c0 COLLATE BINARY)AND(CAST(vt0.c0 AS TEXT))))OR(CHAR(t0.c0))) ASC  NULLS FIRST, (+ (json_extract(t0.c0, NULL, t0.c1, t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS NOT(t0.c0)) IN (t0.c2 COLLATE NOCASE, LIKELY(t0.c1)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt0.c0) NOTNULL)) CROSS JOIN v0 ON ((0.7256129244304191)*(((((NULL)AND(t0.c1)))AND(v0.c0)))) ORDER BY ((((t0.c0 COLLATE BINARY)AND(CAST(vt0.c0 AS TEXT))))OR(CHAR(t0.c0))) ASC  NULLS FIRST, (+ (json_extract(t0.c0, NULL, t0.c1, t0.c2))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt0.c0) NOTNULL)) CROSS JOIN v0 ON ((0.7256129244304191)*(((((NULL)AND(t0.c1)))AND(v0.c0)))) WHERE ((((vt0.c0)IS NOT(t0.c0)) IN (t0.c2 COLLATE NOCASE, LIKELY(t0.c1)))) ORDER BY ((((t0.c0 COLLATE BINARY)AND(CAST(vt0.c0 AS TEXT))))OR(CHAR(t0.c0))) ASC  NULLS FIRST, (+ (json_extract(t0.c0, NULL, t0.c1, t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS NOT(t0.c0)) IN (t0.c2 COLLATE NOCASE, LIKELY(t0.c1)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt0.c0) NOTNULL)) CROSS JOIN v0 ON ((0.7256129244304191)*(((((NULL)AND(t0.c1)))AND(v0.c0)))) ORDER BY ((((t0.c0 COLLATE BINARY)AND(CAST(vt0.c0 AS TEXT))))OR(CHAR(t0.c0))) ASC  NULLS FIRST, (+ (json_extract(t0.c0, NULL, t0.c1, t0.c2))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt0.c0) NOTNULL)) CROSS JOIN v0 ON ((0.7256129244304191)*(((((NULL)AND(t0.c1)))AND(v0.c0)))) WHERE ((((vt0.c0)IS NOT(t0.c0)) IN (t0.c2 COLLATE NOCASE, LIKELY(t0.c1)))) ORDER BY ((((t0.c0 COLLATE BINARY)AND(CAST(vt0.c0 AS TEXT))))OR(CHAR(t0.c0))) ASC  NULLS FIRST, (+ (json_extract(t0.c0, NULL, t0.c1, t0.c2)));
SELECT * FROM v0, vt0 WHERE (UNLIKELY(CAST('' AS TEXT))) ORDER BY ((((v0.c0) IS TRUE))>=(1267687888)) ASC  NULLS FIRST, (x'' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CAST('' AS TEXT))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) IS TRUE))>=(1267687888)) ASC  NULLS FIRST, (x'' IN ()) DESC);
SELECT * FROM v0, vt0 WHERE (UNLIKELY(CAST('' AS TEXT))) ORDER BY ((((v0.c0) IS TRUE))>=(1267687888)) ASC  NULLS FIRST, (x'' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CAST('' AS TEXT))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) IS TRUE))>=(1267687888)) ASC  NULLS FIRST, (x'' IN ()) DESC);
SELECT * FROM v0, vt0 WHERE (UNLIKELY(CAST('' AS TEXT))) ORDER BY ((((v0.c0) IS TRUE))>=(1267687888)) ASC  NULLS FIRST, (x'' IN ()) DESC;
SELECT COUNT(*) FROM t0 WHERE (IFNULL(DISTINCT (~ (t0.c1)), ((t0.c1) IS TRUE))) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (~ (t0.c1)), ((t0.c1) IS TRUE))) IS TRUE)  as count FROM t0 ORDER BY t0.c1);
SELECT COUNT(*) FROM t0 WHERE (IFNULL(DISTINCT (~ (t0.c1)), ((t0.c1) IS TRUE))) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (~ (t0.c1)), ((t0.c1) IS TRUE))) IS TRUE)  as count FROM t0 ORDER BY t0.c1);
SELECT COUNT(*) FROM t0 WHERE (IFNULL(DISTINCT (~ (t0.c1)), ((t0.c1) IS TRUE))) ORDER BY t0.c1;
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY TYPEOF(((v0.c0)LIKE(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(((v0.c0)LIKE(v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY TYPEOF(((v0.c0)LIKE(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(((v0.c0)LIKE(v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY TYPEOF(((v0.c0)LIKE(v0.c0)))  NULLS FIRST;
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((((~ (t0.c1)))AND(CASE WHEN v0.c0 THEN t0.c0 END)))OR((- (t0.c1)))) LEFT OUTER JOIN t0 ON CASE 0.12247564179390025 COLLATE RTRIM  WHEN (- (t0.c0)) THEN CASE t0.c1  WHEN v0.c0 THEN t0.c2 END WHEN ((v0.c0) IS TRUE) THEN (('0.8319129029335917')*(v0.c0)) WHEN t0.c0 THEN ((t0.c0)>=(vt0.c0)) END WHERE ((((((((((t0.c2)OR(t0.c1)))AND(t0.c0)))AND(t0.c0)))OR(t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c2)OR(t0.c1)))AND(t0.c0)))AND(t0.c0)))OR(t0.c2)) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((((~ (t0.c1)))AND(CASE WHEN v0.c0 THEN t0.c0 END)))OR((- (t0.c1)))) LEFT OUTER JOIN t0 ON CASE 0.12247564179390025 COLLATE RTRIM  WHEN (- (t0.c0)) THEN CASE t0.c1  WHEN v0.c0 THEN t0.c2 END WHEN ((v0.c0) IS TRUE) THEN (('0.8319129029335917')*(v0.c0)) WHEN t0.c0 THEN ((t0.c0)>=(vt0.c0)) END);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((((~ (t0.c1)))AND(CASE WHEN v0.c0 THEN t0.c0 END)))OR((- (t0.c1)))) LEFT OUTER JOIN t0 ON CASE 0.12247564179390025 COLLATE RTRIM  WHEN (- (t0.c0)) THEN CASE t0.c1  WHEN v0.c0 THEN t0.c2 END WHEN ((v0.c0) IS TRUE) THEN (('0.8319129029335917')*(v0.c0)) WHEN t0.c0 THEN ((t0.c0)>=(vt0.c0)) END WHERE ((((((((((t0.c2)OR(t0.c1)))AND(t0.c0)))AND(t0.c0)))OR(t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c2)OR(t0.c1)))AND(t0.c0)))AND(t0.c0)))OR(t0.c2)) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((((~ (t0.c1)))AND(CASE WHEN v0.c0 THEN t0.c0 END)))OR((- (t0.c1)))) LEFT OUTER JOIN t0 ON CASE 0.12247564179390025 COLLATE RTRIM  WHEN (- (t0.c0)) THEN CASE t0.c1  WHEN v0.c0 THEN t0.c2 END WHEN ((v0.c0) IS TRUE) THEN (('0.8319129029335917')*(v0.c0)) WHEN t0.c0 THEN ((t0.c0)>=(vt0.c0)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN TRIM(DISTINCT t0.c0, t0.c1) THEN NULL END) ORDER BY CAST(((t0.c1)|(t0.c2)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM(DISTINCT t0.c0, t0.c1) THEN NULL END) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c1)|(t0.c2)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN TRIM(DISTINCT t0.c0, t0.c1) THEN NULL END) ORDER BY CAST(((t0.c1)|(t0.c2)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM(DISTINCT t0.c0, t0.c1) THEN NULL END) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c1)|(t0.c2)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN TRIM(DISTINCT t0.c0, t0.c1) THEN NULL END) ORDER BY CAST(((t0.c1)|(t0.c2)) AS INTEGER) ASC;
SELECT ALL * FROM v0, vt0 CROSS JOIN t0 ON v0.c0 WHERE ((((((v0.c0)AND(t0.c1)))OR(v0.c0)) IN ((((t0.c0, t0.c0, '-436831776', v0.c0, t0.c2)) NOT BETWEEN ((t0.c2, v0.c0, t0.c2, v0.c0, t0.c2)) AND ((t0.c2, 0.5911897777974837, t0.c2, v0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(t0.c1)))OR(v0.c0)) IN ((((t0.c0, t0.c0, '-436831776', v0.c0, t0.c2)) NOT BETWEEN ((t0.c2, v0.c0, t0.c2, v0.c0, t0.c2)) AND ((t0.c2, 0.5911897777974837, t0.c2, v0.c0, vt0.c0)))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON v0.c0);
SELECT ALL * FROM v0, vt0 CROSS JOIN t0 ON v0.c0 WHERE ((((((v0.c0)AND(t0.c1)))OR(v0.c0)) IN ((((t0.c0, t0.c0, '-436831776', v0.c0, t0.c2)) NOT BETWEEN ((t0.c2, v0.c0, t0.c2, v0.c0, t0.c2)) AND ((t0.c2, 0.5911897777974837, t0.c2, v0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(t0.c1)))OR(v0.c0)) IN ((((t0.c0, t0.c0, '-436831776', v0.c0, t0.c2)) NOT BETWEEN ((t0.c2, v0.c0, t0.c2, v0.c0, t0.c2)) AND ((t0.c2, 0.5911897777974837, t0.c2, v0.c0, vt0.c0)))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON v0.c0);
SELECT ALL * FROM v0, vt0 CROSS JOIN t0 ON v0.c0 WHERE ((((((v0.c0)AND(t0.c1)))OR(v0.c0)) IN ((((t0.c0, t0.c0, '-436831776', v0.c0, t0.c2)) NOT BETWEEN ((t0.c2, v0.c0, t0.c2, v0.c0, t0.c2)) AND ((t0.c2, 0.5911897777974837, t0.c2, v0.c0, vt0.c0))))));
SELECT ALL * FROM v0, t0 WHERE ('FD東ㆰ') ORDER BY (((+ (v0.c0)))>(v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (('FD東ㆰ') IS TRUE)  as count FROM v0, t0 ORDER BY (((+ (v0.c0)))>(v0.c0)) ASC);
SELECT ALL * FROM v0, t0 WHERE ('FD東ㆰ') ORDER BY (((+ (v0.c0)))>(v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (('FD東ㆰ') IS TRUE)  as count FROM v0, t0 ORDER BY (((+ (v0.c0)))>(v0.c0)) ASC);
SELECT ALL * FROM v0, t0 WHERE ('FD東ㆰ') ORDER BY (((+ (v0.c0)))>(v0.c0)) ASC;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND (((vt0.c0 IN (0.7180570715395505, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND (((vt0.c0 IN (0.7180570715395505, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND (((vt0.c0 IN (0.7180570715395505, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND (((vt0.c0 IN (0.7180570715395505, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND (((vt0.c0 IN (0.7180570715395505, vt0.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2)<<(t0.c0)))||(((t0.c1)%(t0.c1))))) ORDER BY (((t0.c2, t0.c0, t0.c2)) BETWEEN ((((((t0.c2)AND(t0.c2)))OR(NULL)), t0.c0, CAST(1649585970 AS TEXT))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)*(t0.c1)), (NULL IN ())))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)<<(t0.c0)))||(((t0.c1)%(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2, t0.c0, t0.c2)) BETWEEN ((((((t0.c2)AND(t0.c2)))OR(NULL)), t0.c0, CAST(1649585970 AS TEXT))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)*(t0.c1)), (NULL IN ())))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2)<<(t0.c0)))||(((t0.c1)%(t0.c1))))) ORDER BY (((t0.c2, t0.c0, t0.c2)) BETWEEN ((((((t0.c2)AND(t0.c2)))OR(NULL)), t0.c0, CAST(1649585970 AS TEXT))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)*(t0.c1)), (NULL IN ())))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)<<(t0.c0)))||(((t0.c1)%(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2, t0.c0, t0.c2)) BETWEEN ((((((t0.c2)AND(t0.c2)))OR(NULL)), t0.c0, CAST(1649585970 AS TEXT))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)*(t0.c1)), (NULL IN ())))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2)<<(t0.c0)))||(((t0.c1)%(t0.c1))))) ORDER BY (((t0.c2, t0.c0, t0.c2)) BETWEEN ((((((t0.c2)AND(t0.c2)))OR(NULL)), t0.c0, CAST(1649585970 AS TEXT))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)*(t0.c1)), (NULL IN ())))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((t0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((t0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((t0.c0 IN ()) COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(TRIM(v0.c0))))OR((~ (v0.c0)))))AND((- (v0.c0)))))OR(((v0.c0)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(TRIM(v0.c0))))OR((~ (v0.c0)))))AND((- (v0.c0)))))OR(((v0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(TRIM(v0.c0))))OR((~ (v0.c0)))))AND((- (v0.c0)))))OR(((v0.c0)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(TRIM(v0.c0))))OR((~ (v0.c0)))))AND((- (v0.c0)))))OR(((v0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(TRIM(v0.c0))))OR((~ (v0.c0)))))AND((- (v0.c0)))))OR(((v0.c0)>(v0.c0)))));
SELECT * FROM t0 WHERE (t0.c2) ORDER BY CASE WHEN ('웷*(睫\)' IN (t0.c1, t0.c0)) THEN (t0.c2 IN ()) ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c1)) END, IFNULL(DISTINCT ((t0.c0)*(t0.c2)), SQLITE_VERSION())  NULLS LAST, ((JULIANDAY(t0.c1, t0.c1, 0.8399743758939372, t0.c0, t0.c1)) BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c0))) AND (((t0.c2) BETWEEN (x'092d') AND (t0.c0)))) DESC  NULLS LAST, json_patch(((((t0.c2)OR(t0.c0)))AND(t0.c1)), TIME(t0.c0, t0.c2, 'z')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ('웷*(睫\)' IN (t0.c1, t0.c0)) THEN (t0.c2 IN ()) ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c1)) END, IFNULL(DISTINCT ((t0.c0)*(t0.c2)), SQLITE_VERSION())  NULLS LAST, ((JULIANDAY(t0.c1, t0.c1, 0.8399743758939372, t0.c0, t0.c1)) BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c0))) AND (((t0.c2) BETWEEN (x'092d') AND (t0.c0)))) DESC  NULLS LAST, json_patch(((((t0.c2)OR(t0.c0)))AND(t0.c1)), TIME(t0.c0, t0.c2, 'z')) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c2) ORDER BY CASE WHEN ('웷*(睫\)' IN (t0.c1, t0.c0)) THEN (t0.c2 IN ()) ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c1)) END, IFNULL(DISTINCT ((t0.c0)*(t0.c2)), SQLITE_VERSION())  NULLS LAST, ((JULIANDAY(t0.c1, t0.c1, 0.8399743758939372, t0.c0, t0.c1)) BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c0))) AND (((t0.c2) BETWEEN (x'092d') AND (t0.c0)))) DESC  NULLS LAST, json_patch(((((t0.c2)OR(t0.c0)))AND(t0.c1)), TIME(t0.c0, t0.c2, 'z')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ('웷*(睫\)' IN (t0.c1, t0.c0)) THEN (t0.c2 IN ()) ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c1)) END, IFNULL(DISTINCT ((t0.c0)*(t0.c2)), SQLITE_VERSION())  NULLS LAST, ((JULIANDAY(t0.c1, t0.c1, 0.8399743758939372, t0.c0, t0.c1)) BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c0))) AND (((t0.c2) BETWEEN (x'092d') AND (t0.c0)))) DESC  NULLS LAST, json_patch(((((t0.c2)OR(t0.c0)))AND(t0.c1)), TIME(t0.c0, t0.c2, 'z')) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c2) ORDER BY CASE WHEN ('웷*(睫\)' IN (t0.c1, t0.c0)) THEN (t0.c2 IN ()) ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c1)) END, IFNULL(DISTINCT ((t0.c0)*(t0.c2)), SQLITE_VERSION())  NULLS LAST, ((JULIANDAY(t0.c1, t0.c1, 0.8399743758939372, t0.c0, t0.c1)) BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c0))) AND (((t0.c2) BETWEEN (x'092d') AND (t0.c0)))) DESC  NULLS LAST, json_patch(((((t0.c2)OR(t0.c0)))AND(t0.c1)), TIME(t0.c0, t0.c2, 'z')) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((vt0.c0)AND(t0.c0)))AND('F')))LIKE((((v0.c0))!=((vt0.c0))))) RIGHT OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((UNLIKELY(t0.c2))) AND ((((t0.c0) BETWEEN (v0.c0) AND (t0.c1))))) WHERE (CAST(((t0.c0)>(vt0.c0)) AS NUMERIC)) ORDER BY CAST(CASE v0.c0  WHEN 0Xffffffffb3aa3d31 THEN t0.c1 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER), CASE WHEN (('2017328411')<>(t0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)) ELSE ((v0.c0) ISNULL) END;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)>(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((vt0.c0)AND(t0.c0)))AND('F')))LIKE((((v0.c0))!=((vt0.c0))))) RIGHT OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((UNLIKELY(t0.c2))) AND ((((t0.c0) BETWEEN (v0.c0) AND (t0.c1))))) ORDER BY CAST(CASE v0.c0  WHEN 0Xffffffffb3aa3d31 THEN t0.c1 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER), CASE WHEN (('2017328411')<>(t0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)) ELSE ((v0.c0) ISNULL) END);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((vt0.c0)AND(t0.c0)))AND('F')))LIKE((((v0.c0))!=((vt0.c0))))) RIGHT OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((UNLIKELY(t0.c2))) AND ((((t0.c0) BETWEEN (v0.c0) AND (t0.c1))))) WHERE (CAST(((t0.c0)>(vt0.c0)) AS NUMERIC)) ORDER BY CAST(CASE v0.c0  WHEN 0Xffffffffb3aa3d31 THEN t0.c1 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER), CASE WHEN (('2017328411')<>(t0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)) ELSE ((v0.c0) ISNULL) END;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)>(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((vt0.c0)AND(t0.c0)))AND('F')))LIKE((((v0.c0))!=((vt0.c0))))) RIGHT OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((UNLIKELY(t0.c2))) AND ((((t0.c0) BETWEEN (v0.c0) AND (t0.c1))))) ORDER BY CAST(CASE v0.c0  WHEN 0Xffffffffb3aa3d31 THEN t0.c1 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER), CASE WHEN (('2017328411')<>(t0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)) ELSE ((v0.c0) ISNULL) END);
SELECT * FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))AND(CAST(t0.c0 AS TEXT))))OR(((t0.c0) NOTNULL))))AND(CASE ''  WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)))OR((((t0.c0))<>((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)OR(t0.c0)))AND(CAST(t0.c0 AS TEXT))))OR(((t0.c0) NOTNULL))))AND(CASE ''  WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)))OR((((t0.c0))!=((t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))AND(CAST(t0.c0 AS TEXT))))OR(((t0.c0) NOTNULL))))AND(CASE ''  WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)))OR((((t0.c0))<>((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)OR(t0.c0)))AND(CAST(t0.c0 AS TEXT))))OR(((t0.c0) NOTNULL))))AND(CASE ''  WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)))OR((((t0.c0))!=((t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))AND(CAST(t0.c0 AS TEXT))))OR(((t0.c0) NOTNULL))))AND(CASE ''  WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)))OR((((t0.c0))<>((t0.c1))))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN ((t0.c1)==(t0.c0)) THEN t0.c2 WHEN CASE WHEN t0.c1 THEN '䵞Z' ELSE t0.c1 END THEN ((t0.c0)LIKE(t0.c2)) WHEN t0.c2 COLLATE RTRIM THEN (((v0.c0, t0.c0, v0.c0))>=((v0.c0, t0.c2, v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1)=(t0.c0)) THEN t0.c2 WHEN CASE WHEN t0.c1 THEN '䵞Z' ELSE t0.c1 END THEN ((t0.c0)LIKE(t0.c2)) WHEN t0.c2 COLLATE RTRIM THEN (((v0.c0, t0.c0, v0.c0))>=((v0.c0, t0.c2, v0.c0))) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN ((t0.c1)==(t0.c0)) THEN t0.c2 WHEN CASE WHEN t0.c1 THEN '䵞Z' ELSE t0.c1 END THEN ((t0.c0)LIKE(t0.c2)) WHEN t0.c2 COLLATE RTRIM THEN (((v0.c0, t0.c0, v0.c0))>=((v0.c0, t0.c2, v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1)=(t0.c0)) THEN t0.c2 WHEN CASE WHEN t0.c1 THEN '䵞Z' ELSE t0.c1 END THEN ((t0.c0)LIKE(t0.c2)) WHEN t0.c2 COLLATE RTRIM THEN (((v0.c0, t0.c0, v0.c0))>=((v0.c0, t0.c2, v0.c0))) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN ((t0.c1)==(t0.c0)) THEN t0.c2 WHEN CASE WHEN t0.c1 THEN '䵞Z' ELSE t0.c1 END THEN ((t0.c0)LIKE(t0.c2)) WHEN t0.c2 COLLATE RTRIM THEN (((v0.c0, t0.c0, v0.c0))>=((v0.c0, t0.c2, v0.c0))) END);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (0.2728428825278453);
SELECT SUM(count) FROM (SELECT ALL ((0.2728428825278453) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (0.2728428825278453);
SELECT SUM(count) FROM (SELECT ALL ((0.2728428825278453) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (0.2728428825278453);
SELECT * FROM v0 WHERE (CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((NULL))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((NULL))) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((NULL))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((NULL))) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((NULL))) AS INTEGER));
SELECT * FROM t0 WHERE ((((t0.c1, x'3a03', t0.c2)) BETWEEN ((t0.c1 COLLATE NOCASE, ((t0.c0)>>(t0.c0)), 0.912087501309635)) AND (((((t0.c0, t0.c0, t0.c2))<((t0.c0, t0.c0, t0.c1))), ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)), ((t0.c2) BETWEEN (t0.c0) AND (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, x'3a03', t0.c2)) BETWEEN ((t0.c1 COLLATE NOCASE, ((t0.c0)>>(t0.c0)), 0.912087501309635)) AND (((((t0.c0, t0.c0, t0.c2))<((t0.c0, t0.c0, t0.c1))), ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)), ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c1, x'3a03', t0.c2)) BETWEEN ((t0.c1 COLLATE NOCASE, ((t0.c0)>>(t0.c0)), 0.912087501309635)) AND (((((t0.c0, t0.c0, t0.c2))<((t0.c0, t0.c0, t0.c1))), ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)), ((t0.c2) BETWEEN (t0.c0) AND (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, x'3a03', t0.c2)) BETWEEN ((t0.c1 COLLATE NOCASE, ((t0.c0)>>(t0.c0)), 0.912087501309635)) AND (((((t0.c0, t0.c0, t0.c2))<((t0.c0, t0.c0, t0.c1))), ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)), ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c1, x'3a03', t0.c2)) BETWEEN ((t0.c1 COLLATE NOCASE, ((t0.c0)>>(t0.c0)), 0.912087501309635)) AND (((((t0.c0, t0.c0, t0.c2))<((t0.c0, t0.c0, t0.c1))), ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)), ((t0.c2) BETWEEN (t0.c0) AND (t0.c2))))));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) ORDER BY LTRIM(DATETIME(v0.c0, t0.c2, t0.c0), ((t0.c1)GLOB(NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY LTRIM(DATETIME(v0.c0, t0.c2, t0.c0), ((t0.c1)GLOB(NULL))) ASC);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) ORDER BY LTRIM(DATETIME(v0.c0, t0.c2, t0.c0), ((t0.c1)GLOB(NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY LTRIM(DATETIME(v0.c0, t0.c2, t0.c0), ((t0.c1)GLOB(NULL))) ASC);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) ORDER BY LTRIM(DATETIME(v0.c0, t0.c2, t0.c0), ((t0.c1)GLOB(NULL))) ASC;
SELECT ALL * FROM v0 WHERE ((((v0.c0, NULL, v0.c0)) BETWEEN ((((v0.c0)<<(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 END, CASE v0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) AND (((v0.c0 IN ()), ((v0.c0)-(v0.c0)), TYPEOF(DISTINCT v0.c0))))) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, NULL, v0.c0)) BETWEEN ((((v0.c0)<<(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 END, CASE v0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) AND (((v0.c0 IN ()), ((v0.c0)-(v0.c0)), TYPEOF(DISTINCT v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((v0.c0, NULL, v0.c0)) BETWEEN ((((v0.c0)<<(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 END, CASE v0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) AND (((v0.c0 IN ()), ((v0.c0)-(v0.c0)), TYPEOF(DISTINCT v0.c0))))) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, NULL, v0.c0)) BETWEEN ((((v0.c0)<<(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 END, CASE v0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) AND (((v0.c0 IN ()), ((v0.c0)-(v0.c0)), TYPEOF(DISTINCT v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((v0.c0, NULL, v0.c0)) BETWEEN ((((v0.c0)<<(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 END, CASE v0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) AND (((v0.c0 IN ()), ((v0.c0)-(v0.c0)), TYPEOF(DISTINCT v0.c0))))) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL)  NULLS FIRST;
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((t0.c2)IS NOT(vt0.c0)))AND(('489404573' IN ()))) LEFT OUTER JOIN t0 ON CAST(HEX(t0.c1) AS REAL) WHERE (json_remove((((t0.c0, t0.c1, v0.c0))<>((t0.c0, t0.c2, vt0.c0))), CASE v0.c0  WHEN t0.c2 THEN t0.c2 END));
SELECT SUM(count) FROM (SELECT ((json_remove((((t0.c0, t0.c1, v0.c0))!=((t0.c0, t0.c2, vt0.c0))), CASE v0.c0  WHEN t0.c2 THEN t0.c2 END)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((t0.c2)IS NOT(vt0.c0)))AND(('489404573' IN ()))) LEFT OUTER JOIN t0 ON CAST(HEX(t0.c1) AS REAL));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((t0.c2)IS NOT(vt0.c0)))AND(('489404573' IN ()))) LEFT OUTER JOIN t0 ON CAST(HEX(t0.c1) AS REAL) WHERE (json_remove((((t0.c0, t0.c1, v0.c0))<>((t0.c0, t0.c2, vt0.c0))), CASE v0.c0  WHEN t0.c2 THEN t0.c2 END));
SELECT SUM(count) FROM (SELECT ((json_remove((((t0.c0, t0.c1, v0.c0))!=((t0.c0, t0.c2, vt0.c0))), CASE v0.c0  WHEN t0.c2 THEN t0.c2 END)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((t0.c2)IS NOT(vt0.c0)))AND(('489404573' IN ()))) LEFT OUTER JOIN t0 ON CAST(HEX(t0.c1) AS REAL));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((t0.c2)IS NOT(vt0.c0)))AND(('489404573' IN ()))) LEFT OUTER JOIN t0 ON CAST(HEX(t0.c1) AS REAL) WHERE (json_remove((((t0.c0, t0.c1, v0.c0))<>((t0.c0, t0.c2, vt0.c0))), CASE v0.c0  WHEN t0.c2 THEN t0.c2 END));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (HEX(((t0.c0)<=(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((t0.c0)<=(t0.c2)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (HEX(((t0.c0)<=(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((t0.c0)<=(t0.c2)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (HEX(((t0.c0)<=(t0.c2))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c1)OR(t0.c1)))IS NOT(x''))) ORDER BY (NOT ((NOT (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c1)OR(t0.c1)))IS NOT(x''))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT ((NOT (t0.c0)))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c1)OR(t0.c1)))IS NOT(x''))) ORDER BY (NOT ((NOT (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c1)OR(t0.c1)))IS NOT(x''))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT ((NOT (t0.c0)))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c1)OR(t0.c1)))IS NOT(x''))) ORDER BY (NOT ((NOT (t0.c0)))) DESC;
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT * FROM v0, t0, vt0 WHERE (DATETIME(CAST(t0.c1 AS TEXT), (+ (t0.c0)), t0.c1, (((v0.c0, t0.c1, t0.c2))<((vt0.c0, v0.c0, v0.c0))), t0.c0));
SELECT SUM(count) FROM (SELECT ((DATETIME(CAST(t0.c1 AS TEXT), (+ (t0.c0)), t0.c1, (((v0.c0, t0.c1, t0.c2))<((vt0.c0, v0.c0, v0.c0))), t0.c0)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (DATETIME(CAST(t0.c1 AS TEXT), (+ (t0.c0)), t0.c1, (((v0.c0, t0.c1, t0.c2))<((vt0.c0, v0.c0, v0.c0))), t0.c0));
SELECT SUM(count) FROM (SELECT ((DATETIME(CAST(t0.c1 AS TEXT), (+ (t0.c0)), t0.c1, (((v0.c0, t0.c1, t0.c2))<((vt0.c0, v0.c0, v0.c0))), t0.c0)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (DATETIME(CAST(t0.c1 AS TEXT), (+ (t0.c0)), t0.c1, (((v0.c0, t0.c1, t0.c2))<((vt0.c0, v0.c0, v0.c0))), t0.c0));
SELECT ALL COUNT(*) FROM v0 WHERE (((HEX(v0.c0)) BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE RTRIM))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((HEX(v0.c0)) BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((HEX(v0.c0)) BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE RTRIM))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((HEX(v0.c0)) BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((HEX(v0.c0)) BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE RTRIM))) ORDER BY v0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT 0.22385463381781268) COLLATE BINARY) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT 0.22385463381781268) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT 0.22385463381781268) COLLATE BINARY) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT 0.22385463381781268) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT 0.22385463381781268) COLLATE BINARY) ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM v0 INDEXED BY i2 WHERE (((CAST(v0.c0 AS BLOB))|((+ (v0.c0))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB))|((+ (v0.c0))))) IS TRUE)  as count FROM v0 INDEXED BY i2 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 INDEXED BY i2 WHERE (((CAST(v0.c0 AS BLOB))|((+ (v0.c0))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB))|((+ (v0.c0))))) IS TRUE)  as count FROM v0 INDEXED BY i2 ORDER BY NULL DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 INNER JOIN t0 ON (NOT (CAST(v0.c0 AS REAL))) WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((0.5479466040072144)GLOB(0.915007985704599)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((0.5479466040072144)GLOB(0.915007985704599))))) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON (NOT (CAST(v0.c0 AS REAL))));
SELECT COUNT(*) FROM v0, vt0 INNER JOIN t0 ON (NOT (CAST(v0.c0 AS REAL))) WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((0.5479466040072144)GLOB(0.915007985704599)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((0.5479466040072144)GLOB(0.915007985704599))))) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON (NOT (CAST(v0.c0 AS REAL))));
SELECT COUNT(*) FROM v0, vt0 INNER JOIN t0 ON (NOT (CAST(v0.c0 AS REAL))) WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((0.5479466040072144)GLOB(0.915007985704599)))));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((t0.c2 IN ()))<<((((vt0.c0, t0.c1, v0.c0)) NOT BETWEEN ((0.8305960085019632, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL))))) RIGHT OUTER JOIN t0 ON CASE (v0.c0 IN ())  WHEN CASE v0.c0  WHEN t0.c1 THEN NULL ELSE t0.c1 END THEN ((vt0.c0) BETWEEN (t0.c2) AND (t0.c1)) ELSE t0.c1 END WHERE (((t0.c1 COLLATE BINARY)<<((+ (v0.c0))))) ORDER BY ((((t0.c2)OR(t0.c1)))OR(t0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE BINARY)<<((+ (v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((t0.c2 IN ()))<<((((vt0.c0, t0.c1, v0.c0)) NOT BETWEEN ((0.8305960085019632, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL))))) RIGHT OUTER JOIN t0 ON CASE (v0.c0 IN ())  WHEN CASE v0.c0  WHEN t0.c1 THEN NULL ELSE t0.c1 END THEN ((vt0.c0) BETWEEN (t0.c2) AND (t0.c1)) ELSE t0.c1 END ORDER BY ((((t0.c2)OR(t0.c1)))OR(t0.c2)) COLLATE RTRIM DESC);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((t0.c2 IN ()))<<((((vt0.c0, t0.c1, v0.c0)) NOT BETWEEN ((0.8305960085019632, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL))))) RIGHT OUTER JOIN t0 ON CASE (v0.c0 IN ())  WHEN CASE v0.c0  WHEN t0.c1 THEN NULL ELSE t0.c1 END THEN ((vt0.c0) BETWEEN (t0.c2) AND (t0.c1)) ELSE t0.c1 END WHERE (((t0.c1 COLLATE BINARY)<<((+ (v0.c0))))) ORDER BY ((((t0.c2)OR(t0.c1)))OR(t0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE BINARY)<<((+ (v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((t0.c2 IN ()))<<((((vt0.c0, t0.c1, v0.c0)) NOT BETWEEN ((0.8305960085019632, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL))))) RIGHT OUTER JOIN t0 ON CASE (v0.c0 IN ())  WHEN CASE v0.c0  WHEN t0.c1 THEN NULL ELSE t0.c1 END THEN ((vt0.c0) BETWEEN (t0.c2) AND (t0.c1)) ELSE t0.c1 END ORDER BY ((((t0.c2)OR(t0.c1)))OR(t0.c2)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(0.8319129029335917 AS NUMERIC) WHERE (((t0.c2) NOTNULL) COLLATE RTRIM) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST(0.8319129029335917 AS NUMERIC) ORDER BY t0.c2);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(0.8319129029335917 AS NUMERIC) WHERE (((t0.c2) NOTNULL) COLLATE RTRIM) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST(0.8319129029335917 AS NUMERIC) ORDER BY t0.c2);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(0.8319129029335917 AS NUMERIC) WHERE (((t0.c2) NOTNULL) COLLATE RTRIM) ORDER BY t0.c2;
SELECT * FROM vt0, t0, v0 WHERE (0X40cac193);
SELECT SUM(count) FROM (SELECT ((0x40cac193) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (0X40cac193);
SELECT SUM(count) FROM (SELECT ((0x40cac193) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (0X40cac193);
SELECT * FROM t0 WHERE (CAST(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) AS REAL)) ORDER BY ((CAST(t0.c2 AS INTEGER))>=(((t0.c2) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c2 AS INTEGER))>=(((t0.c2) NOTNULL))) DESC);
SELECT * FROM t0 WHERE (CAST(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) AS REAL)) ORDER BY ((CAST(t0.c2 AS INTEGER))>=(((t0.c2) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c2 AS INTEGER))>=(((t0.c2) NOTNULL))) DESC);
SELECT * FROM t0 WHERE (CAST(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) AS REAL)) ORDER BY ((CAST(t0.c2 AS INTEGER))>=(((t0.c2) NOTNULL))) DESC;
SELECT * FROM t0 WHERE (t0.c1) ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST);
SELECT * FROM t0 WHERE (t0.c1) ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST);
SELECT * FROM t0 WHERE (t0.c1) ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS NUMERIC)) ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (CAST(x'' AS INTEGER)) AND ('y醏<')) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS NOT(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (CAST(x'' AS INTEGER)) AND ('y醏<')) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS NUMERIC)) ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (CAST(x'' AS INTEGER)) AND ('y醏<')) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS NOT(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (CAST(x'' AS INTEGER)) AND ('y醏<')) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS NUMERIC)) ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (CAST(x'' AS INTEGER)) AND ('y醏<')) DESC;
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN ((~ (vt0.c0))) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN ((~ (vt0.c0))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN ((~ (vt0.c0))) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN ((~ (vt0.c0))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN ((~ (vt0.c0))) AND (((vt0.c0) IS FALSE))));
SELECT ALL * FROM t0 WHERE (((((t0.c1)!=(t0.c1)))|(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)<>(t0.c1)))|(t0.c1))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1)!=(t0.c1)))|(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)<>(t0.c1)))|(t0.c1))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1)!=(t0.c1)))|(t0.c1)));
SELECT COUNT(*) FROM t0, vt0 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN ((x'2efc')) AND ((RTRIM(t0.c2))))) ORDER BY vt0.c0  NULLS FIRST, ((((vt0.c0) NOTNULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((x'2efc')) AND ((RTRIM(t0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0  NULLS FIRST, ((((vt0.c0) NOTNULL)) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN ((x'2efc')) AND ((RTRIM(t0.c2))))) ORDER BY vt0.c0  NULLS FIRST, ((((vt0.c0) NOTNULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((x'2efc')) AND ((RTRIM(t0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0  NULLS FIRST, ((((vt0.c0) NOTNULL)) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN ((x'2efc')) AND ((RTRIM(t0.c2))))) ORDER BY vt0.c0  NULLS FIRST, ((((vt0.c0) NOTNULL)) NOTNULL)  NULLS FIRST;
SELECT * FROM v0, t0, vt0 WHERE (LOWER(DISTINCT COALESCE(t0.c0, vt0.c0))) ORDER BY (NOT (CAST(NULL AS INTEGER))) ASC, ((ABS(x''))-(t0.c2 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT COALESCE(t0.c0, vt0.c0))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (NOT (CAST(NULL AS INTEGER))) ASC, ((ABS(x''))-(t0.c2 COLLATE RTRIM)) DESC);
SELECT * FROM v0, t0, vt0 WHERE (LOWER(DISTINCT COALESCE(t0.c0, vt0.c0))) ORDER BY (NOT (CAST(NULL AS INTEGER))) ASC, ((ABS(x''))-(t0.c2 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT COALESCE(t0.c0, vt0.c0))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (NOT (CAST(NULL AS INTEGER))) ASC, ((ABS(x''))-(t0.c2 COLLATE RTRIM)) DESC);
SELECT * FROM v0, t0, vt0 WHERE (LOWER(DISTINCT COALESCE(t0.c0, vt0.c0))) ORDER BY (NOT (CAST(NULL AS INTEGER))) ASC, ((ABS(x''))-(t0.c2 COLLATE RTRIM)) DESC;
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))IS NOT(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))IS NOT(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))IS NOT(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))IS NOT(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))IS NOT(vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, v0, vt0 NOT INDEXED WHERE (CAST(((vt0.c0) IS TRUE) AS NUMERIC)) ORDER BY UNLIKELY(DISTINCT t0.c0) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY UNLIKELY(DISTINCT t0.c0) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0, vt0 NOT INDEXED WHERE (CAST(((vt0.c0) IS TRUE) AS NUMERIC)) ORDER BY UNLIKELY(DISTINCT t0.c0) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY UNLIKELY(DISTINCT t0.c0) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0, vt0 NOT INDEXED WHERE (CAST(((vt0.c0) IS TRUE) AS NUMERIC)) ORDER BY UNLIKELY(DISTINCT t0.c0) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR((('-1579256064') IS TRUE))))AND((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)OR((('-1579256064') IS TRUE))))AND((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR((('-1579256064') IS TRUE))))AND((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)OR((('-1579256064') IS TRUE))))AND((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR((('-1579256064') IS TRUE))))AND((((vt0.c0))>((vt0.c0))))));
SELECT * FROM v0, t0 WHERE ((((((((((t0.c0 IN ()))OR(((t0.c0)>(t0.c1)))))OR(v0.c0 COLLATE RTRIM)))AND(CAST(t0.c2 AS BLOB))))OR((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c0 IN ()))OR(((t0.c0)>(t0.c1)))))OR(v0.c0 COLLATE RTRIM)))AND(CAST(t0.c2 AS BLOB))))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((((((((t0.c0 IN ()))OR(((t0.c0)>(t0.c1)))))OR(v0.c0 COLLATE RTRIM)))AND(CAST(t0.c2 AS BLOB))))OR((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c0 IN ()))OR(((t0.c0)>(t0.c1)))))OR(v0.c0 COLLATE RTRIM)))AND(CAST(t0.c2 AS BLOB))))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((((((((t0.c0 IN ()))OR(((t0.c0)>(t0.c1)))))OR(v0.c0 COLLATE RTRIM)))AND(CAST(t0.c2 AS BLOB))))OR((v0.c0 IN ()))));
SELECT COUNT(*) FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c1);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((CAST(t0.c1 AS NUMERIC))>=(CAST(v0.c0 AS NUMERIC))) CROSS JOIN vt0 ON 0.8169197152683668 COLLATE RTRIM WHERE (CASE WHEN CASE t0.c2  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN UNLIKELY(DISTINCT t0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE t0.c2  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN UNLIKELY(DISTINCT t0.c1) END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((CAST(t0.c1 AS NUMERIC))>=(CAST(v0.c0 AS NUMERIC))) CROSS JOIN vt0 ON 0.8169197152683668 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((CAST(t0.c1 AS NUMERIC))>=(CAST(v0.c0 AS NUMERIC))) CROSS JOIN vt0 ON 0.8169197152683668 COLLATE RTRIM WHERE (CASE WHEN CASE t0.c2  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN UNLIKELY(DISTINCT t0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE t0.c2  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN UNLIKELY(DISTINCT t0.c1) END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((CAST(t0.c1 AS NUMERIC))>=(CAST(v0.c0 AS NUMERIC))) CROSS JOIN vt0 ON 0.8169197152683668 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((CAST(t0.c1 AS NUMERIC))>=(CAST(v0.c0 AS NUMERIC))) CROSS JOIN vt0 ON 0.8169197152683668 COLLATE RTRIM WHERE (CASE WHEN CASE t0.c2  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN UNLIKELY(DISTINCT t0.c1) END);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((- (t0.c2))) BETWEEN ((+ (v0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (NOT (((t0.c2) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c2))) BETWEEN ((+ (v0.c0))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (NOT (((t0.c2) IS TRUE)))  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((- (t0.c2))) BETWEEN ((+ (v0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (NOT (((t0.c2) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c2))) BETWEEN ((+ (v0.c0))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (NOT (((t0.c2) IS TRUE)))  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((- (t0.c2))) BETWEEN ((+ (v0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (NOT (((t0.c2) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM vt0, v0, t0 WHERE (((((((NULL)OR(v0.c0)))AND(t0.c0)))OR(((t0.c0)IS(v0.c0))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(v0.c0)))AND(t0.c0)))OR(((t0.c0)IS(v0.c0))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY v0.c0 ASC);
SELECT ALL * FROM vt0, v0, t0 WHERE (((((((NULL)OR(v0.c0)))AND(t0.c0)))OR(((t0.c0)IS(v0.c0))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(v0.c0)))AND(t0.c0)))OR(((t0.c0)IS(v0.c0))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY v0.c0 ASC);
SELECT ALL * FROM vt0, v0, t0 WHERE (((((((NULL)OR(v0.c0)))AND(t0.c0)))OR(((t0.c0)IS(v0.c0))))) ORDER BY v0.c0 ASC;
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (NULL) ORDER BY (~ (t0.c0)), (((t0.c1)) BETWEEN (((((vt0.c0, t0.c0, t0.c2))==((vt0.c0, t0.c1, v0.c0))))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (~ (t0.c0)), (((t0.c1)) BETWEEN (((((vt0.c0, t0.c0, t0.c2))==((vt0.c0, t0.c1, v0.c0))))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (NULL) ORDER BY (~ (t0.c0)), (((t0.c1)) BETWEEN (((((vt0.c0, t0.c0, t0.c2))==((vt0.c0, t0.c1, v0.c0))))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (~ (t0.c0)), (((t0.c1)) BETWEEN (((((vt0.c0, t0.c0, t0.c2))==((vt0.c0, t0.c1, v0.c0))))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (NULL) ORDER BY (~ (t0.c0)), (((t0.c1)) BETWEEN (((((vt0.c0, t0.c0, t0.c2))==((vt0.c0, t0.c1, v0.c0))))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, v0 WHERE (-1990804040) ORDER BY (((((vt0.c0)) BETWEEN (('1863279679')) AND (('-765794890'))))-((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('MYP*', vt0.c0, vt0.c0)) AND ((vt0.c0, x'', NULL))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1990804040) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c0)) BETWEEN (('1863279679')) AND (('-765794890'))))-((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('MYP*', vt0.c0, vt0.c0)) AND ((vt0.c0, x'', NULL))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, v0 WHERE (-1990804040) ORDER BY (((((vt0.c0)) BETWEEN (('1863279679')) AND (('-765794890'))))-((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('MYP*', vt0.c0, vt0.c0)) AND ((vt0.c0, x'', NULL))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1990804040) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c0)) BETWEEN (('1863279679')) AND (('-765794890'))))-((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('MYP*', vt0.c0, vt0.c0)) AND ((vt0.c0, x'', NULL))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, v0 WHERE (-1990804040) ORDER BY (((((vt0.c0)) BETWEEN (('1863279679')) AND (('-765794890'))))-((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('MYP*', vt0.c0, vt0.c0)) AND ((vt0.c0, x'', NULL))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (((t0.c2 COLLATE RTRIM)!=(CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE RTRIM)!=(CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE x'' END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2 COLLATE RTRIM)!=(CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE RTRIM)!=(CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE x'' END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2 COLLATE RTRIM)!=(CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE x'' END)));
SELECT ALL * FROM t0, v0 WHERE (((((((((((t0.c0)&(t0.c1)))AND(t0.c0)))OR(CAST(t0.c1 AS BLOB))))AND((((t0.c0, t0.c2, v0.c0))<>((v0.c0, t0.c0, v0.c0))))))AND(CASE '顏ꃔ'  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN v0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)&(t0.c1)))AND(t0.c0)))OR(CAST(t0.c1 AS BLOB))))AND((((t0.c0, t0.c2, v0.c0))!=((v0.c0, t0.c0, v0.c0))))))AND(CASE '顏ꃔ'  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN v0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((((((((t0.c0)&(t0.c1)))AND(t0.c0)))OR(CAST(t0.c1 AS BLOB))))AND((((t0.c0, t0.c2, v0.c0))<>((v0.c0, t0.c0, v0.c0))))))AND(CASE '顏ꃔ'  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN v0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)&(t0.c1)))AND(t0.c0)))OR(CAST(t0.c1 AS BLOB))))AND((((t0.c0, t0.c2, v0.c0))!=((v0.c0, t0.c0, v0.c0))))))AND(CASE '顏ꃔ'  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN v0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((((((((t0.c0)&(t0.c1)))AND(t0.c0)))OR(CAST(t0.c1 AS BLOB))))AND((((t0.c0, t0.c2, v0.c0))<>((v0.c0, t0.c0, v0.c0))))))AND(CASE '顏ꃔ'  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN v0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END)));
SELECT COUNT(*) FROM t0 WHERE (COALESCE(CASE t0.c2  WHEN t0.c0 THEN t0.c2 END, (((t0.c0, '祳%_k{w幑', t0.c0)) NOT BETWEEN ((t0.c1, t0.c2, t0.c1)) AND ((x'', t0.c0, t0.c2)))));
SELECT SUM(count) FROM (SELECT ((COALESCE(CASE t0.c2  WHEN t0.c0 THEN t0.c2 END, (((t0.c0, '祳%_k{w幑', t0.c0)) NOT BETWEEN ((t0.c1, t0.c2, t0.c1)) AND ((x'', t0.c0, t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (COALESCE(CASE t0.c2  WHEN t0.c0 THEN t0.c2 END, (((t0.c0, '祳%_k{w幑', t0.c0)) NOT BETWEEN ((t0.c1, t0.c2, t0.c1)) AND ((x'', t0.c0, t0.c2)))));
SELECT SUM(count) FROM (SELECT ((COALESCE(CASE t0.c2  WHEN t0.c0 THEN t0.c2 END, (((t0.c0, '祳%_k{w幑', t0.c0)) NOT BETWEEN ((t0.c1, t0.c2, t0.c1)) AND ((x'', t0.c0, t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (COALESCE(CASE t0.c2  WHEN t0.c0 THEN t0.c2 END, (((t0.c0, '祳%_k{w幑', t0.c0)) NOT BETWEEN ((t0.c1, t0.c2, t0.c1)) AND ((x'', t0.c0, t0.c2)))));
SELECT * FROM t0 WHERE ((~ ((t0.c1 IN (t0.c2, t0.c0))))) ORDER BY CAST('1979220265' AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((t0.c1 IN (t0.c2, t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CAST('1979220265' AS REAL) ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((~ ((t0.c1 IN (t0.c2, t0.c0))))) ORDER BY CAST('1979220265' AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((t0.c1 IN (t0.c2, t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CAST('1979220265' AS REAL) ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((~ ((t0.c1 IN (t0.c2, t0.c0))))) ORDER BY CAST('1979220265' AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((t0.c1) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT NULL)) ISNULL)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((t0.c1) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT NULL)) ISNULL)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((t0.c1) NOT NULL)) ISNULL));
SELECT * FROM vt0, v0, t0 WHERE (CASE WHEN ((t0.c0)<<(t0.c0)) THEN ((NULL) ISNULL) ELSE COALESCE(t0.c2, t0.c0, t0.c1, x'') END) ORDER BY (((vt0.c0)||(t0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)<<(t0.c0)) THEN ((NULL) ISNULL) ELSE COALESCE(t0.c2, t0.c0, t0.c1, x'') END) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((vt0.c0)||(t0.c0)) IN ()) DESC);
SELECT * FROM vt0, v0, t0 WHERE (CASE WHEN ((t0.c0)<<(t0.c0)) THEN ((NULL) ISNULL) ELSE COALESCE(t0.c2, t0.c0, t0.c1, x'') END) ORDER BY (((vt0.c0)||(t0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)<<(t0.c0)) THEN ((NULL) ISNULL) ELSE COALESCE(t0.c2, t0.c0, t0.c1, x'') END) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((vt0.c0)||(t0.c0)) IN ()) DESC);
SELECT * FROM vt0, v0, t0 WHERE (CASE WHEN ((t0.c0)<<(t0.c0)) THEN ((NULL) ISNULL) ELSE COALESCE(t0.c2, t0.c0, t0.c1, x'') END) ORDER BY (((vt0.c0)||(t0.c0)) IN ()) DESC;
SELECT COUNT(*) FROM t0 WHERE (CASE CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END  WHEN ((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))AND(t0.c0)))AND(t0.c1)) THEN ((((((((t0.c2)OR(t0.c2)))OR(t0.c0)))OR(t0.c2)))OR(t0.c1)) ELSE t0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END  WHEN ((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))AND(t0.c0)))AND(t0.c1)) THEN ((((((((t0.c2)OR(t0.c2)))OR(t0.c0)))OR(t0.c2)))OR(t0.c1)) ELSE t0.c1 END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END  WHEN ((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))AND(t0.c0)))AND(t0.c1)) THEN ((((((((t0.c2)OR(t0.c2)))OR(t0.c0)))OR(t0.c2)))OR(t0.c1)) ELSE t0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END  WHEN ((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))AND(t0.c0)))AND(t0.c1)) THEN ((((((((t0.c2)OR(t0.c2)))OR(t0.c0)))OR(t0.c2)))OR(t0.c1)) ELSE t0.c1 END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END  WHEN ((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))AND(t0.c0)))AND(t0.c1)) THEN ((((((((t0.c2)OR(t0.c2)))OR(t0.c0)))OR(t0.c2)))OR(t0.c1)) ELSE t0.c1 END);
SELECT * FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.060366883111841685) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), x'' ASC, ((((vt0.c0) IS FALSE))<>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.060366883111841685) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), x'' ASC, ((((vt0.c0) IS FALSE))!=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.060366883111841685) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), x'' ASC, ((((vt0.c0) IS FALSE))<>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.060366883111841685) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), x'' ASC, ((((vt0.c0) IS FALSE))!=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.060366883111841685) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), x'' ASC, ((((vt0.c0) IS FALSE))<>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((628547740)OR(vt0.c0)))OR(t0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((628547740)OR(vt0.c0)))OR(t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((628547740)OR(vt0.c0)))OR(t0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((628547740)OR(vt0.c0)))OR(t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((628547740)OR(vt0.c0)))OR(t0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((+ (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((+ (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((+ (vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('909499883', vt0.c0, vt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('909499883', vt0.c0, vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('909499883', vt0.c0, vt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('909499883', vt0.c0, vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('909499883', vt0.c0, vt0.c0)))) IS FALSE));
SELECT * FROM vt0 INDEXED BY i2, t0, v0 WHERE ((+ (((v0.c0) NOTNULL)))) ORDER BY ((x'0bfb')LIKE(x'' COLLATE RTRIM)) ASC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 INDEXED BY i2, t0, v0 ORDER BY ((x'0bfb')LIKE(x'' COLLATE RTRIM)) ASC, vt0.c0 DESC);
SELECT * FROM vt0 INDEXED BY i2, t0, v0 WHERE ((+ (((v0.c0) NOTNULL)))) ORDER BY ((x'0bfb')LIKE(x'' COLLATE RTRIM)) ASC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 INDEXED BY i2, t0, v0 ORDER BY ((x'0bfb')LIKE(x'' COLLATE RTRIM)) ASC, vt0.c0 DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)>(NULL)))OR(v0.c0 COLLATE RTRIM)))AND(((0.22895367278693401) IS TRUE)))) ORDER BY CASE (v0.c0 IN (v0.c0))  WHEN (NULL IN ()) THEN ((v0.c0)||(v0.c0)) END  NULLS FIRST, (((v0.c0)AND(v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)>(NULL)))OR(v0.c0 COLLATE RTRIM)))AND(((0.22895367278693401) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY CASE (v0.c0 IN (v0.c0))  WHEN (NULL IN ()) THEN ((v0.c0)||(v0.c0)) END  NULLS FIRST, (((v0.c0)AND(v0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)>(NULL)))OR(v0.c0 COLLATE RTRIM)))AND(((0.22895367278693401) IS TRUE)))) ORDER BY CASE (v0.c0 IN (v0.c0))  WHEN (NULL IN ()) THEN ((v0.c0)||(v0.c0)) END  NULLS FIRST, (((v0.c0)AND(v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)>(NULL)))OR(v0.c0 COLLATE RTRIM)))AND(((0.22895367278693401) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY CASE (v0.c0 IN (v0.c0))  WHEN (NULL IN ()) THEN ((v0.c0)||(v0.c0)) END  NULLS FIRST, (((v0.c0)AND(v0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)>(NULL)))OR(v0.c0 COLLATE RTRIM)))AND(((0.22895367278693401) IS TRUE)))) ORDER BY CASE (v0.c0 IN (v0.c0))  WHEN (NULL IN ()) THEN ((v0.c0)||(v0.c0)) END  NULLS FIRST, (((v0.c0)AND(v0.c0)) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((TYPEOF(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((TYPEOF(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((TYPEOF(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((TYPEOF(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((TYPEOF(v0.c0)))));
SELECT ALL COUNT(*) FROM t0, v0 INNER JOIN vt0 ON CAST(v0.c0 COLLATE BINARY AS BLOB) WHERE ((((t0.c0) ISNULL) IN ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((t0.c0) ISNULL) IN ((v0.c0 IN ())))) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON CAST(v0.c0 COLLATE BINARY AS BLOB));
SELECT ALL COUNT(*) FROM t0, v0 INNER JOIN vt0 ON CAST(v0.c0 COLLATE BINARY AS BLOB) WHERE ((((t0.c0) ISNULL) IN ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((t0.c0) ISNULL) IN ((v0.c0 IN ())))) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON CAST(v0.c0 COLLATE BINARY AS BLOB));
SELECT ALL COUNT(*) FROM t0, v0 INNER JOIN vt0 ON CAST(v0.c0 COLLATE BINARY AS BLOB) WHERE ((((t0.c0) ISNULL) IN ((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((CASE WHEN t0.c2 THEN t0.c2 END)==(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c2 THEN t0.c2 END)==(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((CASE WHEN t0.c2 THEN t0.c2 END)==(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c2 THEN t0.c2 END)==(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((CASE WHEN t0.c2 THEN t0.c2 END)==(((v0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON ((CAST(t0.c0 AS TEXT))<(((t0.c0)<>(t0.c0)))) FULL OUTER JOIN vt0 ON (((t0.c0))>=(((~ (v0.c0))))) WHERE ((((~ (t0.c2)))==(((NULL)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c2)))==(((NULL)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((CAST(t0.c0 AS TEXT))<(((t0.c0)<>(t0.c0)))) FULL OUTER JOIN vt0 ON (((t0.c0))>=(((~ (v0.c0))))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON ((CAST(t0.c0 AS TEXT))<(((t0.c0)<>(t0.c0)))) FULL OUTER JOIN vt0 ON (((t0.c0))>=(((~ (v0.c0))))) WHERE ((((~ (t0.c2)))==(((NULL)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c2)))==(((NULL)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((CAST(t0.c0 AS TEXT))<(((t0.c0)<>(t0.c0)))) FULL OUTER JOIN vt0 ON (((t0.c0))>=(((~ (v0.c0))))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON ((CAST(t0.c0 AS TEXT))<(((t0.c0)<>(t0.c0)))) FULL OUTER JOIN vt0 ON (((t0.c0))>=(((~ (v0.c0))))) WHERE ((((~ (t0.c2)))==(((NULL)IS NOT(t0.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CASE (v0.c0 IN ())  WHEN v0.c0 THEN LOWER(vt0.c0) WHEN CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0)) BETWEEN ((vt0.c0)) AND (('-1439968032'))) WHEN (NOT (v0.c0)) THEN x'5730' ELSE (v0.c0 IN ()) END WHERE (NULL) ORDER BY LOWER(DISTINCT ((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CASE (v0.c0 IN ())  WHEN v0.c0 THEN LOWER(vt0.c0) WHEN CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0)) BETWEEN ((vt0.c0)) AND (('-1439968032'))) WHEN (NOT (v0.c0)) THEN x'5730' ELSE (v0.c0 IN ()) END ORDER BY LOWER(DISTINCT ((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CASE (v0.c0 IN ())  WHEN v0.c0 THEN LOWER(vt0.c0) WHEN CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0)) BETWEEN ((vt0.c0)) AND (('-1439968032'))) WHEN (NOT (v0.c0)) THEN x'5730' ELSE (v0.c0 IN ()) END WHERE (NULL) ORDER BY LOWER(DISTINCT ((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CASE (v0.c0 IN ())  WHEN v0.c0 THEN LOWER(vt0.c0) WHEN CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0)) BETWEEN ((vt0.c0)) AND (('-1439968032'))) WHEN (NOT (v0.c0)) THEN x'5730' ELSE (v0.c0 IN ()) END ORDER BY LOWER(DISTINCT ((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CASE (v0.c0 IN ())  WHEN v0.c0 THEN LOWER(vt0.c0) WHEN CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0)) BETWEEN ((vt0.c0)) AND (('-1439968032'))) WHEN (NOT (v0.c0)) THEN x'5730' ELSE (v0.c0 IN ()) END WHERE (NULL) ORDER BY LOWER(DISTINCT ((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)));
SELECT * FROM v0 WHERE ((~ (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((~ (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((~ (v0.c0)));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((t0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((t0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((t0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((vt0.c0)AND(v0.c0)))OR('')))OR(((v0.c0)GLOB(v0.c0)))))AND((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((((v0.c0)||(v0.c0)))OR(((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))))AND(((vt0.c0)>>(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(v0.c0)))OR('')))OR(((v0.c0)GLOB(v0.c0)))))AND((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c0)||(v0.c0)))OR(((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))))AND(((vt0.c0)>>(v0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((vt0.c0)AND(v0.c0)))OR('')))OR(((v0.c0)GLOB(v0.c0)))))AND((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((((v0.c0)||(v0.c0)))OR(((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))))AND(((vt0.c0)>>(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(v0.c0)))OR('')))OR(((v0.c0)GLOB(v0.c0)))))AND((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c0)||(v0.c0)))OR(((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))))AND(((vt0.c0)>>(v0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((vt0.c0)AND(v0.c0)))OR('')))OR(((v0.c0)GLOB(v0.c0)))))AND((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((((v0.c0)||(v0.c0)))OR(((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))))AND(((vt0.c0)>>(v0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (CAST((NULL IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NULL IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (CAST((NULL IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NULL IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (CAST((NULL IN ()) AS NUMERIC));
SELECT ALL * FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((t0.c1 COLLATE NOCASE)AND(((t0.c1) NOT NULL))))AND((NOT (t0.c2)))) WHERE (LOWER(((((t0.c2)OR(t0.c2)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((((t0.c2)OR(t0.c2)))AND(v0.c0)))) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((t0.c1 COLLATE NOCASE)AND(((t0.c1) NOT NULL))))AND((NOT (t0.c2)))));
SELECT ALL * FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((t0.c1 COLLATE NOCASE)AND(((t0.c1) NOT NULL))))AND((NOT (t0.c2)))) WHERE (LOWER(((((t0.c2)OR(t0.c2)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((((t0.c2)OR(t0.c2)))AND(v0.c0)))) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((t0.c1 COLLATE NOCASE)AND(((t0.c1) NOT NULL))))AND((NOT (t0.c2)))));
SELECT ALL * FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((t0.c1 COLLATE NOCASE)AND(((t0.c1) NOT NULL))))AND((NOT (t0.c2)))) WHERE (LOWER(((((t0.c2)OR(t0.c2)))AND(v0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT * FROM vt0, v0, t0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST(1.145034831E9 COLLATE BINARY AS BLOB) WHERE (((((t0.c0) BETWEEN (t0.c1) AND (NULL)))<=((('')IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c1) AND (NULL)))<=((('')IS(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(1.145034831E9 COLLATE BINARY AS BLOB));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST(1.145034831E9 COLLATE BINARY AS BLOB) WHERE (((((t0.c0) BETWEEN (t0.c1) AND (NULL)))<=((('')IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c1) AND (NULL)))<=((('')IS(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(1.145034831E9 COLLATE BINARY AS BLOB));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST(1.145034831E9 COLLATE BINARY AS BLOB) WHERE (((((t0.c0) BETWEEN (t0.c1) AND (NULL)))<=((('')IS(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c1)OR(x''))) BETWEEN (3.21555425E8) AND (TYPEOF(t0.c1))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)OR(x''))) BETWEEN (3.21555425E8) AND (TYPEOF(t0.c1)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c1)OR(x''))) BETWEEN (3.21555425E8) AND (TYPEOF(t0.c1))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)OR(x''))) BETWEEN (3.21555425E8) AND (TYPEOF(t0.c1)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c1)OR(x''))) BETWEEN (3.21555425E8) AND (TYPEOF(t0.c1))));
SELECT * FROM t0 WHERE (NULL) ORDER BY (((~ (t0.c0)))||(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))))  NULLS FIRST, (+ (t0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c0)))||(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))))  NULLS FIRST, (+ (t0.c1))  NULLS FIRST);
SELECT * FROM t0 WHERE (NULL) ORDER BY (((~ (t0.c0)))||(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))))  NULLS FIRST, (+ (t0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c0)))||(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))))  NULLS FIRST, (+ (t0.c1))  NULLS FIRST);
SELECT * FROM t0 WHERE (NULL) ORDER BY (((~ (t0.c0)))||(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))))  NULLS FIRST, (+ (t0.c1))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (t0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (t0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (t0.c0 COLLATE NOCASE);
SELECT ALL * FROM t0, v0, vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT ALL * FROM vt0, v0, t0 WHERE ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN (((x'2839') IS TRUE)))) ORDER BY ((((NULL) NOT BETWEEN (t0.c0) AND (t0.c2)))>=(((t0.c1)<(t0.c2))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN (((x'2839') IS TRUE)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((NULL) NOT BETWEEN (t0.c0) AND (t0.c2)))>=(((t0.c1)<(t0.c2)))));
SELECT ALL * FROM vt0, v0, t0 WHERE ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN (((x'2839') IS TRUE)))) ORDER BY ((((NULL) NOT BETWEEN (t0.c0) AND (t0.c2)))>=(((t0.c1)<(t0.c2))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN (((x'2839') IS TRUE)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((NULL) NOT BETWEEN (t0.c0) AND (t0.c2)))>=(((t0.c1)<(t0.c2)))));
SELECT ALL * FROM vt0, v0, t0 WHERE ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN (((x'2839') IS TRUE)))) ORDER BY ((((NULL) NOT BETWEEN (t0.c0) AND (t0.c2)))>=(((t0.c1)<(t0.c2))));
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (((LOWER(DISTINCT t0.c2)) NOTNULL)) ORDER BY (((((+ (v0.c0)))AND(t0.c0)))AND((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT t0.c2)) NOTNULL)) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY (((((+ (v0.c0)))AND(t0.c0)))AND((v0.c0 IN ()))));
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (((LOWER(DISTINCT t0.c2)) NOTNULL)) ORDER BY (((((+ (v0.c0)))AND(t0.c0)))AND((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT t0.c2)) NOTNULL)) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY (((((+ (v0.c0)))AND(t0.c0)))AND((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)))) ORDER BY ((((((((((t0.c1)LIKE(x'')))AND(x'')))AND(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)))AND((('w ')|(t0.c1)))))AND((0.25301597839704915 IN (t0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c1)LIKE(x'')))AND(x'')))AND(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)))AND((('w ')|(t0.c1)))))AND((0.25301597839704915 IN (t0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)))) ORDER BY ((((((((((t0.c1)LIKE(x'')))AND(x'')))AND(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)))AND((('w ')|(t0.c1)))))AND((0.25301597839704915 IN (t0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c1)LIKE(x'')))AND(x'')))AND(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)))AND((('w ')|(t0.c1)))))AND((0.25301597839704915 IN (t0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)))) ORDER BY ((((((((((t0.c1)LIKE(x'')))AND(x'')))AND(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)))AND((('w ')|(t0.c1)))))AND((0.25301597839704915 IN (t0.c1)))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST((NOT (t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((NOT (t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((NOT (t0.c0)) AS INTEGER));
SELECT * FROM v0, t0 WHERE ((((((NOT (t0.c1)))OR(x'')))AND(((((t0.c0)OR(t0.c2)))AND(v0.c0))))) ORDER BY ((t0.c1) IS TRUE) COLLATE NOCASE ASC  NULLS LAST, ((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0))) BETWEEN (((v0.c0)<=(t0.c0))) AND (((((t0.c1)AND(t0.c1)))OR(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t0.c1)))OR(x'')))AND(((((t0.c0)OR(t0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c1) IS TRUE) COLLATE NOCASE ASC  NULLS LAST, ((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0))) BETWEEN (((v0.c0)<=(t0.c0))) AND (((((t0.c1)AND(t0.c1)))OR(t0.c2)))) DESC);
SELECT * FROM v0, t0 WHERE ((((((NOT (t0.c1)))OR(x'')))AND(((((t0.c0)OR(t0.c2)))AND(v0.c0))))) ORDER BY ((t0.c1) IS TRUE) COLLATE NOCASE ASC  NULLS LAST, ((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0))) BETWEEN (((v0.c0)<=(t0.c0))) AND (((((t0.c1)AND(t0.c1)))OR(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t0.c1)))OR(x'')))AND(((((t0.c0)OR(t0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c1) IS TRUE) COLLATE NOCASE ASC  NULLS LAST, ((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0))) BETWEEN (((v0.c0)<=(t0.c0))) AND (((((t0.c1)AND(t0.c1)))OR(t0.c2)))) DESC);
SELECT * FROM v0, t0 WHERE ((((((NOT (t0.c1)))OR(x'')))AND(((((t0.c0)OR(t0.c2)))AND(v0.c0))))) ORDER BY ((t0.c1) IS TRUE) COLLATE NOCASE ASC  NULLS LAST, ((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0))) BETWEEN (((v0.c0)<=(t0.c0))) AND (((((t0.c1)AND(t0.c1)))OR(t0.c2)))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CASE CASE vt0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 END  WHEN ((v0.c0)&(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (NULL)) WHEN CAST(vt0.c0 AS BLOB) THEN ((t0.c1) IS TRUE) WHEN CASE WHEN vt0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c0 WHEN 0.552342920256935 THEN '909499883' WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 END THEN t0.c2 COLLATE RTRIM WHEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((v0.c0))) THEN CAST(v0.c0 AS REAL) WHEN ((((t0.c2)OR(NULL)))OR(t0.c0)) THEN (((t0.c0, t0.c1, 'YQ')) BETWEEN ((t0.c2, vt0.c0, v0.c0)) AND ((t0.c2, t0.c0, vt0.c0))) ELSE CASE WHEN t0.c2 THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 END  WHEN ((v0.c0)&(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (NULL)) WHEN CAST(vt0.c0 AS BLOB) THEN ((t0.c1) IS TRUE) WHEN CASE WHEN vt0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c0 WHEN 0.552342920256935 THEN '909499883' WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 END THEN t0.c2 COLLATE RTRIM WHEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((v0.c0))) THEN CAST(v0.c0 AS REAL) WHEN ((((t0.c2)OR(NULL)))OR(t0.c0)) THEN (((t0.c0, t0.c1, 'YQ')) BETWEEN ((t0.c2, vt0.c0, v0.c0)) AND ((t0.c2, t0.c0, vt0.c0))) ELSE CASE WHEN t0.c2 THEN t0.c0 END END) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CASE CASE vt0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 END  WHEN ((v0.c0)&(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (NULL)) WHEN CAST(vt0.c0 AS BLOB) THEN ((t0.c1) IS TRUE) WHEN CASE WHEN vt0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c0 WHEN 0.552342920256935 THEN '909499883' WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 END THEN t0.c2 COLLATE RTRIM WHEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((v0.c0))) THEN CAST(v0.c0 AS REAL) WHEN ((((t0.c2)OR(NULL)))OR(t0.c0)) THEN (((t0.c0, t0.c1, 'YQ')) BETWEEN ((t0.c2, vt0.c0, v0.c0)) AND ((t0.c2, t0.c0, vt0.c0))) ELSE CASE WHEN t0.c2 THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 END  WHEN ((v0.c0)&(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (NULL)) WHEN CAST(vt0.c0 AS BLOB) THEN ((t0.c1) IS TRUE) WHEN CASE WHEN vt0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c0 WHEN 0.552342920256935 THEN '909499883' WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 END THEN t0.c2 COLLATE RTRIM WHEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((v0.c0))) THEN CAST(v0.c0 AS REAL) WHEN ((((t0.c2)OR(NULL)))OR(t0.c0)) THEN (((t0.c0, t0.c1, 'YQ')) BETWEEN ((t0.c2, vt0.c0, v0.c0)) AND ((t0.c2, t0.c0, vt0.c0))) ELSE CASE WHEN t0.c2 THEN t0.c0 END END) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CASE CASE vt0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 END  WHEN ((v0.c0)&(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (NULL)) WHEN CAST(vt0.c0 AS BLOB) THEN ((t0.c1) IS TRUE) WHEN CASE WHEN vt0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c0 WHEN 0.552342920256935 THEN '909499883' WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 END THEN t0.c2 COLLATE RTRIM WHEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((v0.c0))) THEN CAST(v0.c0 AS REAL) WHEN ((((t0.c2)OR(NULL)))OR(t0.c0)) THEN (((t0.c0, t0.c1, 'YQ')) BETWEEN ((t0.c2, vt0.c0, v0.c0)) AND ((t0.c2, t0.c0, vt0.c0))) ELSE CASE WHEN t0.c2 THEN t0.c0 END END);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS NUMERIC));
SELECT * FROM v0, t0 INDEXED BY i2 LEFT OUTER JOIN vt0 ON HEX(DISTINCT ((vt0.c0) NOTNULL)) WHERE (((((((t0.c2) NOT NULL))OR(((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))))AND(CASE WHEN '-634466675' THEN t0.c1 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) NOT NULL))OR(((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))))AND(CASE WHEN '-634466675' THEN t0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM v0, t0 INDEXED BY i2 LEFT OUTER JOIN vt0 ON HEX(DISTINCT ((vt0.c0) NOTNULL)));
SELECT * FROM v0, t0 INDEXED BY i2 LEFT OUTER JOIN vt0 ON HEX(DISTINCT ((vt0.c0) NOTNULL)) WHERE (((((((t0.c2) NOT NULL))OR(((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))))AND(CASE WHEN '-634466675' THEN t0.c1 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) NOT NULL))OR(((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))))AND(CASE WHEN '-634466675' THEN t0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM v0, t0 INDEXED BY i2 LEFT OUTER JOIN vt0 ON HEX(DISTINCT ((vt0.c0) NOTNULL)));
SELECT * FROM v0, t0 INDEXED BY i2 LEFT OUTER JOIN vt0 ON HEX(DISTINCT ((vt0.c0) NOTNULL)) WHERE (((((((t0.c2) NOT NULL))OR(((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))))AND(CASE WHEN '-634466675' THEN t0.c1 ELSE t0.c0 END)));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) FULL OUTER JOIN v0 ON ((CAST(t0.c0 AS NUMERIC))IS(HEX(t0.c0))) WHERE (LIKELY(CHANGES()));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CHANGES())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) FULL OUTER JOIN v0 ON ((CAST(t0.c0 AS NUMERIC))IS(HEX(t0.c0))));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) FULL OUTER JOIN v0 ON ((CAST(t0.c0 AS NUMERIC))IS(HEX(t0.c0))) WHERE (LIKELY(CHANGES()));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CHANGES())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) FULL OUTER JOIN v0 ON ((CAST(t0.c0 AS NUMERIC))IS(HEX(t0.c0))));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) FULL OUTER JOIN v0 ON ((CAST(t0.c0 AS NUMERIC))IS(HEX(t0.c0))) WHERE (LIKELY(CHANGES()));
SELECT * FROM vt0, t0 WHERE (NULL) ORDER BY (((((t0.c2 IN ()))OR((vt0.c0 IN ()))))AND(((((t0.c1)OR(t0.c2)))AND(t0.c2)))) ASC  NULLS LAST, CASE ((t0.c1)/(t0.c0))  WHEN (vt0.c0 IN ()) THEN (('456202970')AND(t0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c2 IN ()))OR((vt0.c0 IN ()))))AND(((((t0.c1)OR(t0.c2)))AND(t0.c2)))) ASC  NULLS LAST, CASE ((t0.c1)/(t0.c0))  WHEN (vt0.c0 IN ()) THEN (('456202970')AND(t0.c2)) END DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (NULL) ORDER BY (((((t0.c2 IN ()))OR((vt0.c0 IN ()))))AND(((((t0.c1)OR(t0.c2)))AND(t0.c2)))) ASC  NULLS LAST, CASE ((t0.c1)/(t0.c0))  WHEN (vt0.c0 IN ()) THEN (('456202970')AND(t0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c2 IN ()))OR((vt0.c0 IN ()))))AND(((((t0.c1)OR(t0.c2)))AND(t0.c2)))) ASC  NULLS LAST, CASE ((t0.c1)/(t0.c0))  WHEN (vt0.c0 IN ()) THEN (('456202970')AND(t0.c2)) END DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (NULL) ORDER BY (((((t0.c2 IN ()))OR((vt0.c0 IN ()))))AND(((((t0.c1)OR(t0.c2)))AND(t0.c2)))) ASC  NULLS LAST, CASE ((t0.c1)/(t0.c0))  WHEN (vt0.c0 IN ()) THEN (('456202970')AND(t0.c2)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0, t0 NOT INDEXED WHERE (((vt0.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 NOT INDEXED WHERE (((vt0.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 NOT INDEXED WHERE (((vt0.c0 COLLATE NOCASE) NOT NULL));
SELECT * FROM t0 WHERE (CAST(CAST(t0.c1 AS REAL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c1 AS REAL) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(CAST(t0.c1 AS REAL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c1 AS REAL) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(CAST(t0.c1 AS REAL) AS BLOB));
SELECT * FROM vt0, t0 NOT INDEXED, v0 WHERE (((((t0.c1)AND(vt0.c0)))OR(t0.c0)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)AND(vt0.c0)))OR(t0.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0 NOT INDEXED, v0 WHERE (((((t0.c1)AND(vt0.c0)))OR(t0.c0)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)AND(vt0.c0)))OR(t0.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0 NOT INDEXED, v0 WHERE (((((t0.c1)AND(vt0.c0)))OR(t0.c0)) COLLATE RTRIM COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((x''))==((((t0.c1) NOT BETWEEN (t0.c1) AND ('')))))) ORDER BY (NOT ((('1011227503') BETWEEN (v0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))==((((t0.c1) NOT BETWEEN (t0.c1) AND ('')))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (NOT ((('1011227503') BETWEEN (v0.c0) AND (t0.c0)))));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((x''))==((((t0.c1) NOT BETWEEN (t0.c1) AND ('')))))) ORDER BY (NOT ((('1011227503') BETWEEN (v0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))==((((t0.c1) NOT BETWEEN (t0.c1) AND ('')))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (NOT ((('1011227503') BETWEEN (v0.c0) AND (t0.c0)))));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((x''))==((((t0.c1) NOT BETWEEN (t0.c1) AND ('')))))) ORDER BY (NOT ((('1011227503') BETWEEN (v0.c0) AND (t0.c0))));
SELECT ALL * FROM t0, vt0, v0 WHERE ((((((-1.384280065E9) NOTNULL)))<((x''))));
SELECT SUM(count) FROM (SELECT (((((((-1.384280065E9) NOTNULL)))<((x'')))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE ((((((-1.384280065E9) NOTNULL)))<((x''))));
SELECT SUM(count) FROM (SELECT (((((((-1.384280065E9) NOTNULL)))<((x'')))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE ((((((-1.384280065E9) NOTNULL)))<((x''))));
SELECT COUNT(*) FROM v0, t0 WHERE (((((((((CAST(t0.c0 AS BLOB))OR(((t0.c1) ISNULL))))AND(t0.c1 COLLATE RTRIM)))AND(((t0.c2)*(t0.c1)))))OR(highlight(t0.c2, t0.c1, t0.c1, t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t0.c0 AS BLOB))OR(((t0.c1) ISNULL))))AND(t0.c1 COLLATE RTRIM)))AND(((t0.c2)*(t0.c1)))))OR(highlight(t0.c2, t0.c1, t0.c1, t0.c2)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((((CAST(t0.c0 AS BLOB))OR(((t0.c1) ISNULL))))AND(t0.c1 COLLATE RTRIM)))AND(((t0.c2)*(t0.c1)))))OR(highlight(t0.c2, t0.c1, t0.c1, t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t0.c0 AS BLOB))OR(((t0.c1) ISNULL))))AND(t0.c1 COLLATE RTRIM)))AND(((t0.c2)*(t0.c1)))))OR(highlight(t0.c2, t0.c1, t0.c1, t0.c2)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN (((- (0.6722262626484666)))) AND ((IFNULL(vt0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((- (0.6722262626484666)))) AND ((IFNULL(vt0.c0, v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN (((- (0.6722262626484666)))) AND ((IFNULL(vt0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((- (0.6722262626484666)))) AND ((IFNULL(vt0.c0, v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN (((- (0.6722262626484666)))) AND ((IFNULL(vt0.c0, v0.c0)))));
SELECT ALL * FROM t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))+((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))+((t0.c2 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))+((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))+((t0.c2 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))+((t0.c2 IN ()))));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (CAST(NULL COLLATE RTRIM AS NUMERIC)) ORDER BY HEX((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY HEX((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (CAST(NULL COLLATE RTRIM AS NUMERIC)) ORDER BY HEX((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY HEX((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (CAST(NULL COLLATE RTRIM AS NUMERIC)) ORDER BY HEX((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) ASC;
SELECT * FROM t0, v0, vt0 WHERE ((- (t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE ((- (t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE ((- (t0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((('167747690') IS FALSE) IN ())) ORDER BY ((0.6540255626469132) BETWEEN ((0X599ce35d IN ())) AND (((((t0.c2)OR(t0.c2)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((('167747690') IS FALSE) IN ())) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((0.6540255626469132) BETWEEN ((0x599ce35d IN ())) AND (((((t0.c2)OR(t0.c2)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((('167747690') IS FALSE) IN ())) ORDER BY ((0.6540255626469132) BETWEEN ((0X599ce35d IN ())) AND (((((t0.c2)OR(t0.c2)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((('167747690') IS FALSE) IN ())) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((0.6540255626469132) BETWEEN ((0x599ce35d IN ())) AND (((((t0.c2)OR(t0.c2)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((('167747690') IS FALSE) IN ())) ORDER BY ((0.6540255626469132) BETWEEN ((0X599ce35d IN ())) AND (((((t0.c2)OR(t0.c2)))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((CAST(v0.c0 AS TEXT)))<((((vt0.c0)|(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c0 AS TEXT)))<((((vt0.c0)|(v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((CAST(v0.c0 AS TEXT)))<((((vt0.c0)|(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c0 AS TEXT)))<((((vt0.c0)|(v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((CAST(v0.c0 AS TEXT)))<((((vt0.c0)|(v0.c0))))));
SELECT ALL * FROM vt0, t0, v0 WHERE ((((('0.5137828943046602' COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))))OR(vt0.c0))) ORDER BY (((NOT (t0.c1)))|(0.23505806203120072)) ASC, CAST(CAST(NULL AS TEXT) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('0.5137828943046602' COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))))OR(vt0.c0))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, v0 ORDER BY (((NOT (t0.c1)))|(0.23505806203120072)) ASC, CAST(CAST(NULL AS TEXT) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0, t0, v0 WHERE ((((('0.5137828943046602' COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))))OR(vt0.c0))) ORDER BY (((NOT (t0.c1)))|(0.23505806203120072)) ASC, CAST(CAST(NULL AS TEXT) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('0.5137828943046602' COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))))OR(vt0.c0))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, v0 ORDER BY (((NOT (t0.c1)))|(0.23505806203120072)) ASC, CAST(CAST(NULL AS TEXT) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0, t0, v0 WHERE ((((('0.5137828943046602' COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))))OR(vt0.c0))) ORDER BY (((NOT (t0.c1)))|(0.23505806203120072)) ASC, CAST(CAST(NULL AS TEXT) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (vt0.c0)), ((vt0.c0)<=(vt0.c0))))<=(((vt0.c0 IN ()), vt0.c0 COLLATE RTRIM, ((vt0.c0) IS FALSE))))) ORDER BY ((((vt0.c0)IS(vt0.c0)))>>(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (vt0.c0)), ((vt0.c0)<=(vt0.c0))))<=(((vt0.c0 IN ()), vt0.c0 COLLATE RTRIM, ((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0)))>>(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (vt0.c0)), ((vt0.c0)<=(vt0.c0))))<=(((vt0.c0 IN ()), vt0.c0 COLLATE RTRIM, ((vt0.c0) IS FALSE))))) ORDER BY ((((vt0.c0)IS(vt0.c0)))>>(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (vt0.c0)), ((vt0.c0)<=(vt0.c0))))<=(((vt0.c0 IN ()), vt0.c0 COLLATE RTRIM, ((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0)))>>(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (vt0.c0)), ((vt0.c0)<=(vt0.c0))))<=(((vt0.c0 IN ()), vt0.c0 COLLATE RTRIM, ((vt0.c0) IS FALSE))))) ORDER BY ((((vt0.c0)IS(vt0.c0)))>>(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((0x1e440c13 IN ()))>((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((0X1e440c13 IN ()))>((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((0x1e440c13 IN ()))>((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((0X1e440c13 IN ()))>((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((0x1e440c13 IN ()))>((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM t0 INDEXED BY i2 WHERE ((~ (((t0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c1) NOTNULL)))) IS TRUE)  as count FROM t0 INDEXED BY i2);
SELECT * FROM t0 INDEXED BY i2 WHERE ((~ (((t0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c1) NOTNULL)))) IS TRUE)  as count FROM t0 INDEXED BY i2);
SELECT * FROM t0 INDEXED BY i2 WHERE ((~ (((t0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(0xffffffff84c6ea9f AS TEXT), (((vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(0Xffffffff84c6ea9f AS TEXT), (((vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((vt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(0xffffffff84c6ea9f AS TEXT), (((vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(0Xffffffff84c6ea9f AS TEXT), (((vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((vt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(0xffffffff84c6ea9f AS TEXT), (((vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((vt0.c0))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (NULL) ORDER BY (((- (v0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY (((- (v0.c0))) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (NULL) ORDER BY (((- (v0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY (((- (v0.c0))) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (NULL) ORDER BY (((- (v0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS TEXT));
SELECT * FROM vt0, v0 FULL OUTER JOIN t0 ON ((v0.c0 COLLATE BINARY) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (v0.c0))) AND ((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))))) WHERE (json_object(t0.c1, v0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((json_object(t0.c1, v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON ((v0.c0 COLLATE BINARY) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (v0.c0))) AND ((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))))));
SELECT * FROM vt0, v0 FULL OUTER JOIN t0 ON ((v0.c0 COLLATE BINARY) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (v0.c0))) AND ((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))))) WHERE (json_object(t0.c1, v0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((json_object(t0.c1, v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON ((v0.c0 COLLATE BINARY) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (v0.c0))) AND ((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS BLOB) CROSS JOIN v0 ON CAST((((vt0.c0)) NOT BETWEEN ((-1625263823)) AND ((v0.c0))) AS TEXT) WHERE ((((NOT (t0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c1))) NOTNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS BLOB) CROSS JOIN v0 ON CAST((((vt0.c0)) NOT BETWEEN ((-1625263823)) AND ((v0.c0))) AS TEXT));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS BLOB) CROSS JOIN v0 ON CAST((((vt0.c0)) NOT BETWEEN ((-1625263823)) AND ((v0.c0))) AS TEXT) WHERE ((((NOT (t0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c1))) NOTNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS BLOB) CROSS JOIN v0 ON CAST((((vt0.c0)) NOT BETWEEN ((-1625263823)) AND ((v0.c0))) AS TEXT));
SELECT * FROM vt0, v0, t0 WHERE ((((t0.c1) BETWEEN (t0.c2) AND (vt0.c0)) IN (((t0.c2) ISNULL)))) ORDER BY (((((vt0.c0) NOTNULL)))<=((t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1) BETWEEN (t0.c2) AND (vt0.c0)) IN (((t0.c2) ISNULL)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((((vt0.c0) NOTNULL)))<=((t0.c2))));
SELECT * FROM vt0, v0, t0 WHERE ((((t0.c1) BETWEEN (t0.c2) AND (vt0.c0)) IN (((t0.c2) ISNULL)))) ORDER BY (((((vt0.c0) NOTNULL)))<=((t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1) BETWEEN (t0.c2) AND (vt0.c0)) IN (((t0.c2) ISNULL)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((((vt0.c0) NOTNULL)))<=((t0.c2))));
SELECT * FROM vt0, v0, t0 WHERE ((((t0.c1) BETWEEN (t0.c2) AND (vt0.c0)) IN (((t0.c2) ISNULL)))) ORDER BY (((((vt0.c0) NOTNULL)))<=((t0.c2)));
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c2)|(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2)|(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c2)|(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2)|(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c2)|(vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM v0 WHERE (CHAR(0.2800177851566744));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(0.2800177851566744)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CHAR(0.2800177851566744));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(0.2800177851566744)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CHAR(0.2800177851566744));
SELECT ALL * FROM t0, vt0, v0 WHERE ((- (t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE ((- (t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE ((- (t0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON ((t0.c0) IS FALSE) COLLATE RTRIM LEFT OUTER JOIN v0 ON (NOT (1410899874)) WHERE (CASE WHEN json(0.5284506245760218) THEN ((((((((v0.c0)OR(0.03170153096723716)))AND(t0.c2)))OR(vt0.c0)))OR(t0.c1)) ELSE TYPEOF(t0.c1) END) ORDER BY 0.30044351930800706 DESC, 'PS3j?' COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json(0.5284506245760218) THEN ((((((((v0.c0)OR(0.03170153096723716)))AND(t0.c2)))OR(vt0.c0)))OR(t0.c1)) ELSE TYPEOF(t0.c1) END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((t0.c0) IS FALSE) COLLATE RTRIM LEFT OUTER JOIN v0 ON (NOT (1410899874)) ORDER BY 0.30044351930800706 DESC, 'PS3j?' COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON ((t0.c0) IS FALSE) COLLATE RTRIM LEFT OUTER JOIN v0 ON (NOT (1410899874)) WHERE (CASE WHEN json(0.5284506245760218) THEN ((((((((v0.c0)OR(0.03170153096723716)))AND(t0.c2)))OR(vt0.c0)))OR(t0.c1)) ELSE TYPEOF(t0.c1) END) ORDER BY 0.30044351930800706 DESC, 'PS3j?' COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json(0.5284506245760218) THEN ((((((((v0.c0)OR(0.03170153096723716)))AND(t0.c2)))OR(vt0.c0)))OR(t0.c1)) ELSE TYPEOF(t0.c1) END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((t0.c0) IS FALSE) COLLATE RTRIM LEFT OUTER JOIN v0 ON (NOT (1410899874)) ORDER BY 0.30044351930800706 DESC, 'PS3j?' COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON ((t0.c0) IS FALSE) COLLATE RTRIM LEFT OUTER JOIN v0 ON (NOT (1410899874)) WHERE (CASE WHEN json(0.5284506245760218) THEN ((((((((v0.c0)OR(0.03170153096723716)))AND(t0.c2)))OR(vt0.c0)))OR(t0.c1)) ELSE TYPEOF(t0.c1) END) ORDER BY 0.30044351930800706 DESC, 'PS3j?' COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM v0, vt0, t0 WHERE (v0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (v0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (v0.c0 COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)LIKE(vt0.c0)))AND(x'')))AND(((vt0.c0) IS TRUE))))AND(vt0.c0)))AND((vt0.c0 IN ())))) ORDER BY ((((((((CAST(vt0.c0 AS REAL))OR((((vt0.c0))==((vt0.c0))))))AND(CASE WHEN x'' THEN vt0.c0 END)))OR(vt0.c0 COLLATE BINARY)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)LIKE(vt0.c0)))AND(x'')))AND(((vt0.c0) IS TRUE))))AND(vt0.c0)))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CAST(vt0.c0 AS REAL))OR((((vt0.c0))=((vt0.c0))))))AND(CASE WHEN x'' THEN vt0.c0 END)))OR(vt0.c0 COLLATE BINARY)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)LIKE(vt0.c0)))AND(x'')))AND(((vt0.c0) IS TRUE))))AND(vt0.c0)))AND((vt0.c0 IN ())))) ORDER BY ((((((((CAST(vt0.c0 AS REAL))OR((((vt0.c0))==((vt0.c0))))))AND(CASE WHEN x'' THEN vt0.c0 END)))OR(vt0.c0 COLLATE BINARY)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)LIKE(vt0.c0)))AND(x'')))AND(((vt0.c0) IS TRUE))))AND(vt0.c0)))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CAST(vt0.c0 AS REAL))OR((((vt0.c0))=((vt0.c0))))))AND(CASE WHEN x'' THEN vt0.c0 END)))OR(vt0.c0 COLLATE BINARY)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)LIKE(vt0.c0)))AND(x'')))AND(((vt0.c0) IS TRUE))))AND(vt0.c0)))AND((vt0.c0 IN ())))) ORDER BY ((((((((CAST(vt0.c0 AS REAL))OR((((vt0.c0))==((vt0.c0))))))AND(CASE WHEN x'' THEN vt0.c0 END)))OR(vt0.c0 COLLATE BINARY)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (CAST(((NULL) NOT BETWEEN (1.503454045E9) AND (t0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOT BETWEEN (1.503454045E9) AND (t0.c1)) AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((NULL) NOT BETWEEN (1.503454045E9) AND (t0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOT BETWEEN (1.503454045E9) AND (t0.c1)) AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((NULL) NOT BETWEEN (1.503454045E9) AND (t0.c1)) AS REAL));
SELECT * FROM t0, v0 WHERE ((('432676227')<>(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((('432676227')<>(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((('432676227')<>(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((('432676227')<>(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((('432676227')<>(t0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((((~ (t0.c0)))AND(((vt0.c0)AND(t0.c2)))))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c0)))AND(((vt0.c0)AND(t0.c2)))))AND(t0.c0))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((((~ (t0.c0)))AND(((vt0.c0)AND(t0.c2)))))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c0)))AND(((vt0.c0)AND(t0.c2)))))AND(t0.c0))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((((~ (t0.c0)))AND(((vt0.c0)AND(t0.c2)))))AND(t0.c0)));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (CAST(((((((((x'')AND(v0.c0)))AND(t0.c1)))AND(t0.c1)))AND(v0.c0)) AS INTEGER)) ORDER BY -1.98261552E9 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((x'')AND(v0.c0)))AND(t0.c1)))AND(t0.c1)))AND(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY -1.98261552E9 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (CAST(((((((((x'')AND(v0.c0)))AND(t0.c1)))AND(t0.c1)))AND(v0.c0)) AS INTEGER)) ORDER BY -1.98261552E9 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((x'')AND(v0.c0)))AND(t0.c1)))AND(t0.c1)))AND(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY -1.98261552E9 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (CAST(((((((((x'')AND(v0.c0)))AND(t0.c1)))AND(t0.c1)))AND(v0.c0)) AS INTEGER)) ORDER BY -1.98261552E9 ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (STRFTIME((((vt0.c0))>=((v0.c0))), ((((vt0.c0)OR(0.48732983980016387)))AND(vt0.c0)), (((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((((vt0.c0))>=((v0.c0))), ((((vt0.c0)OR(0.48732983980016387)))AND(vt0.c0)), (((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (STRFTIME((((vt0.c0))>=((v0.c0))), ((((vt0.c0)OR(0.48732983980016387)))AND(vt0.c0)), (((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((((vt0.c0))>=((v0.c0))), ((((vt0.c0)OR(0.48732983980016387)))AND(vt0.c0)), (((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (STRFTIME((((vt0.c0))>=((v0.c0))), ((((vt0.c0)OR(0.48732983980016387)))AND(vt0.c0)), (((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))));
SELECT * FROM vt0 WHERE (((-1611019722) NOT BETWEEN (load_extension(vt0.c0)) AND ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, '-1592680629')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((-1611019722) NOT BETWEEN (load_extension(vt0.c0)) AND ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, '-1592680629')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((-1611019722) NOT BETWEEN (load_extension(vt0.c0)) AND ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, '-1592680629')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((-1611019722) NOT BETWEEN (load_extension(vt0.c0)) AND ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, '-1592680629')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((((((((t0.c0)) NOT BETWEEN (('\n8%m')) AND ((v0.c0))))OR(0.12877601415648454)))AND((((t0.c1, v0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c1, 0.44463115900649)) AND ((vt0.c0, t0.c1, vt0.c0)))))) ORDER BY ((((t0.c1) ISNULL))%(((((v0.c0)AND(vt0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c0)) NOT BETWEEN (('\n8%m')) AND ((v0.c0))))OR(0.12877601415648454)))AND((((t0.c1, v0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c1, 0.44463115900649)) AND ((vt0.c0, t0.c1, vt0.c0)))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((((t0.c1) ISNULL))%(((((v0.c0)AND(vt0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((((((((t0.c0)) NOT BETWEEN (('\n8%m')) AND ((v0.c0))))OR(0.12877601415648454)))AND((((t0.c1, v0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c1, 0.44463115900649)) AND ((vt0.c0, t0.c1, vt0.c0)))))) ORDER BY ((((t0.c1) ISNULL))%(((((v0.c0)AND(vt0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c0)) NOT BETWEEN (('\n8%m')) AND ((v0.c0))))OR(0.12877601415648454)))AND((((t0.c1, v0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c1, 0.44463115900649)) AND ((vt0.c0, t0.c1, vt0.c0)))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((((t0.c1) ISNULL))%(((((v0.c0)AND(vt0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((((((((t0.c0)) NOT BETWEEN (('\n8%m')) AND ((v0.c0))))OR(0.12877601415648454)))AND((((t0.c1, v0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c1, 0.44463115900649)) AND ((vt0.c0, t0.c1, vt0.c0)))))) ORDER BY ((((t0.c1) ISNULL))%(((((v0.c0)AND(vt0.c0)))OR(t0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((NULL))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((NULL))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((NULL))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((NULL))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((NULL))) COLLATE RTRIM);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((((((((((CAST(t0.c1 AS TEXT))AND(UPPER(DISTINCT t0.c0))))AND(((vt0.c0)IS(v0.c0)))))AND(v0.c0 COLLATE NOCASE)))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))))AND(((t0.c1)<=(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(t0.c1 AS TEXT))AND(UPPER(DISTINCT t0.c0))))AND(((vt0.c0)IS(v0.c0)))))AND(v0.c0 COLLATE NOCASE)))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))))AND(((t0.c1)<=(NULL))))) IS TRUE)  as count FROM t0, vt0, v0 NOT INDEXED);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((((((((((CAST(t0.c1 AS TEXT))AND(UPPER(DISTINCT t0.c0))))AND(((vt0.c0)IS(v0.c0)))))AND(v0.c0 COLLATE NOCASE)))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))))AND(((t0.c1)<=(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(t0.c1 AS TEXT))AND(UPPER(DISTINCT t0.c0))))AND(((vt0.c0)IS(v0.c0)))))AND(v0.c0 COLLATE NOCASE)))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))))AND(((t0.c1)<=(NULL))))) IS TRUE)  as count FROM t0, vt0, v0 NOT INDEXED);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((((((((((CAST(t0.c1 AS TEXT))AND(UPPER(DISTINCT t0.c0))))AND(((vt0.c0)IS(v0.c0)))))AND(v0.c0 COLLATE NOCASE)))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))))AND(((t0.c1)<=(NULL)))));
SELECT * FROM t0, vt0 WHERE (((((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.08475651149335484)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (+ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) ORDER BY TRIM(DISTINCT ((NULL) NOTNULL)) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT((('FC5vȵ4HH狴') BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.08475651149335484)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (+ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((NULL) NOTNULL)) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT((('FC5vȵ4HH狴') BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.08475651149335484)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (+ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) ORDER BY TRIM(DISTINCT ((NULL) NOTNULL)) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT((('FC5vȵ4HH狴') BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.08475651149335484)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (+ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((NULL) NOTNULL)) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT((('FC5vȵ4HH狴') BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.08475651149335484)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (+ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) ORDER BY TRIM(DISTINCT ((NULL) NOTNULL)) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT((('FC5vȵ4HH狴') BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS FALSE);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((('1471739396') NOT BETWEEN ((NOT (t0.c1))) AND (CAST(v0.c0 AS NUMERIC)))) ORDER BY 0.21640381209015758  NULLS FIRST, (((v0.c0 IN ())) BETWEEN (((t0.c1)&(t0.c1))) AND (CAST(t0.c2 AS NUMERIC))), ((t0.c1)AND((((t0.c1, t0.c1, NULL))>=((t0.c1, vt0.c0, vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('1471739396') NOT BETWEEN ((NOT (t0.c1))) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY 0.21640381209015758  NULLS FIRST, (((v0.c0 IN ())) BETWEEN (((t0.c1)&(t0.c1))) AND (CAST(t0.c2 AS NUMERIC))), ((t0.c1)AND((((t0.c1, t0.c1, NULL))>=((t0.c1, vt0.c0, vt0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((('1471739396') NOT BETWEEN ((NOT (t0.c1))) AND (CAST(v0.c0 AS NUMERIC)))) ORDER BY 0.21640381209015758  NULLS FIRST, (((v0.c0 IN ())) BETWEEN (((t0.c1)&(t0.c1))) AND (CAST(t0.c2 AS NUMERIC))), ((t0.c1)AND((((t0.c1, t0.c1, NULL))>=((t0.c1, vt0.c0, vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('1471739396') NOT BETWEEN ((NOT (t0.c1))) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY 0.21640381209015758  NULLS FIRST, (((v0.c0 IN ())) BETWEEN (((t0.c1)&(t0.c1))) AND (CAST(t0.c2 AS NUMERIC))), ((t0.c1)AND((((t0.c1, t0.c1, NULL))>=((t0.c1, vt0.c0, vt0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((('1471739396') NOT BETWEEN ((NOT (t0.c1))) AND (CAST(v0.c0 AS NUMERIC)))) ORDER BY 0.21640381209015758  NULLS FIRST, (((v0.c0 IN ())) BETWEEN (((t0.c1)&(t0.c1))) AND (CAST(t0.c2 AS NUMERIC))), ((t0.c1)AND((((t0.c1, t0.c1, NULL))>=((t0.c1, vt0.c0, vt0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM t0, v0, vt0 WHERE (CASE WHEN (NOT (x'')) THEN CASE WHEN x'' THEN t0.c1 ELSE t0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (x'')) THEN CASE WHEN x'' THEN t0.c1 ELSE t0.c2 END END) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (CASE WHEN (NOT (x'')) THEN CASE WHEN x'' THEN t0.c1 ELSE t0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (x'')) THEN CASE WHEN x'' THEN t0.c1 ELSE t0.c2 END END) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (CASE WHEN (NOT (x'')) THEN CASE WHEN x'' THEN t0.c1 ELSE t0.c2 END END);
SELECT * FROM vt0 WHERE (((((((vt0.c0) ISNULL))AND(((vt0.c0) NOTNULL))))AND((vt0.c0 IN (1.411430667E9))))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) ISNULL))AND(((vt0.c0) NOTNULL))))AND((vt0.c0 IN (1.411430667E9))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS REAL)  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c0) ISNULL))AND(((vt0.c0) NOTNULL))))AND((vt0.c0 IN (1.411430667E9))))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) ISNULL))AND(((vt0.c0) NOTNULL))))AND((vt0.c0 IN (1.411430667E9))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS REAL)  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c0) ISNULL))AND(((vt0.c0) NOTNULL))))AND((vt0.c0 IN (1.411430667E9))))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS REAL)  NULLS LAST;
SELECT * FROM v0, vt0, t0 WHERE (((((((((((vt0.c0)<(v0.c0)))OR(t0.c2)))OR(v0.c0 COLLATE BINARY)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))OR(((t0.c2)LIKE(x''))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)<(v0.c0)))OR(t0.c2)))OR(v0.c0 COLLATE BINARY)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))OR(((t0.c2)LIKE(x''))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY t0.c0);
SELECT * FROM v0, vt0, t0 WHERE (((((((((((vt0.c0)<(v0.c0)))OR(t0.c2)))OR(v0.c0 COLLATE BINARY)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))OR(((t0.c2)LIKE(x''))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)<(v0.c0)))OR(t0.c2)))OR(v0.c0 COLLATE BINARY)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))OR(((t0.c2)LIKE(x''))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY t0.c0);
SELECT * FROM v0, vt0, t0 WHERE (((((((((((vt0.c0)<(v0.c0)))OR(t0.c2)))OR(v0.c0 COLLATE BINARY)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))OR(((t0.c2)LIKE(x''))))) ORDER BY t0.c0;
SELECT * FROM t0 WHERE (((((t0.c0) IS TRUE)) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((t0.c1) BETWEEN (t0.c2) AND (t0.c1))))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE)) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((t0.c1) BETWEEN (t0.c2) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC);
SELECT * FROM t0 WHERE (((((t0.c0) IS TRUE)) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((t0.c1) BETWEEN (t0.c2) AND (t0.c1))))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE)) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((t0.c1) BETWEEN (t0.c2) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC);
SELECT * FROM t0 WHERE (((((t0.c0) IS TRUE)) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((t0.c1) BETWEEN (t0.c2) AND (t0.c1))))) ORDER BY t0.c0 DESC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (NULL) AND ('y릞\n鄕f')))<<(((v0.c0)IS NOT(v0.c0)))) WHERE (((((vt0.c0)>('R+Nw	%('))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>('R+Nw	%('))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (NULL) AND ('y릞\n鄕f')))<<(((v0.c0)IS NOT(v0.c0)))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (NULL) AND ('y릞\n鄕f')))<<(((v0.c0)IS NOT(v0.c0)))) WHERE (((((vt0.c0)>('R+Nw	%('))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>('R+Nw	%('))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (NULL) AND ('y릞\n鄕f')))<<(((v0.c0)IS NOT(v0.c0)))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (NULL) AND ('y릞\n鄕f')))<<(((v0.c0)IS NOT(v0.c0)))) WHERE (((((vt0.c0)>('R+Nw	%('))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END AS REAL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0))) BETWEEN (json_insert(vt0.c0, t0.c1, t0.c2)) AND (t0.c0 COLLATE NOCASE)) WHERE (((((t0.c0)<<(t0.c1)))IS(((t0.c0)||(t0.c0))))) ORDER BY (((CASE WHEN t0.c2 THEN '1367397637' ELSE t0.c2 END))<=(((((t0.c2))<=((t0.c1)))))), CAST((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<<(t0.c1)))IS(((t0.c0)||(t0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0))) BETWEEN (json_insert(vt0.c0, t0.c1, t0.c2)) AND (t0.c0 COLLATE NOCASE)) ORDER BY (((CASE WHEN t0.c2 THEN '1367397637' ELSE t0.c2 END))<=(((((t0.c2))<=((t0.c1)))))), CAST((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) AS INTEGER) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0))) BETWEEN (json_insert(vt0.c0, t0.c1, t0.c2)) AND (t0.c0 COLLATE NOCASE)) WHERE (((((t0.c0)<<(t0.c1)))IS(((t0.c0)||(t0.c0))))) ORDER BY (((CASE WHEN t0.c2 THEN '1367397637' ELSE t0.c2 END))<=(((((t0.c2))<=((t0.c1)))))), CAST((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<<(t0.c1)))IS(((t0.c0)||(t0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0))) BETWEEN (json_insert(vt0.c0, t0.c1, t0.c2)) AND (t0.c0 COLLATE NOCASE)) ORDER BY (((CASE WHEN t0.c2 THEN '1367397637' ELSE t0.c2 END))<=(((((t0.c2))<=((t0.c1)))))), CAST((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) AS INTEGER) ASC);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND ('AFi[>')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) BETWEEN (v0.c0) AND ('AFi[>')) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND ('AFi[>')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) BETWEEN (v0.c0) AND ('AFi[>')) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND ('AFi[>')) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))!=(CAST(vt0.c0 AS NUMERIC)))) ORDER BY json_insert(((vt0.c0)<(vt0.c0)), ((vt0.c0)>>(vt0.c0)), (- (vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))<>(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY json_insert(((vt0.c0)<(vt0.c0)), ((vt0.c0)>>(vt0.c0)), (- (vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))!=(CAST(vt0.c0 AS NUMERIC)))) ORDER BY json_insert(((vt0.c0)<(vt0.c0)), ((vt0.c0)>>(vt0.c0)), (- (vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))<>(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY json_insert(((vt0.c0)<(vt0.c0)), ((vt0.c0)>>(vt0.c0)), (- (vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((HEX(DISTINCT v0.c0))-(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT v0.c0))-(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((HEX(DISTINCT v0.c0))-(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT v0.c0))-(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((HEX(DISTINCT v0.c0))-(((v0.c0) NOTNULL))));
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN (+ (v0.c0)) WHEN ((v0.c0)>>(v0.c0)) THEN (+ (v0.c0)) WHEN ((v0.c0) ISNULL) THEN HEX(DISTINCT v0.c0) END) ORDER BY json_object(((x'94dc')==(v0.c0)), CAST(v0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN (+ (v0.c0)) WHEN ((v0.c0)>>(v0.c0)) THEN (+ (v0.c0)) WHEN ((v0.c0) ISNULL) THEN HEX(DISTINCT v0.c0) END) IS TRUE)  as count FROM v0 ORDER BY json_object(((x'94dc')==(v0.c0)), CAST(v0.c0 AS REAL)));
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN (+ (v0.c0)) WHEN ((v0.c0)>>(v0.c0)) THEN (+ (v0.c0)) WHEN ((v0.c0) ISNULL) THEN HEX(DISTINCT v0.c0) END) ORDER BY json_object(((x'94dc')==(v0.c0)), CAST(v0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN (+ (v0.c0)) WHEN ((v0.c0)>>(v0.c0)) THEN (+ (v0.c0)) WHEN ((v0.c0) ISNULL) THEN HEX(DISTINCT v0.c0) END) IS TRUE)  as count FROM v0 ORDER BY json_object(((x'94dc')==(v0.c0)), CAST(v0.c0 AS REAL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((~ (NULL)));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (CAST('E' COLLATE NOCASE AS BLOB)) ORDER BY ((((((((CASE WHEN t0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c1 ELSE x'' END)OR(t0.c2 COLLATE BINARY)))OR(t0.c2 COLLATE NOCASE)))OR((vt0.c0 IN ()))))AND(vt0.c0)) ASC, ((x'' COLLATE BINARY)<=(CASE 0.4011016658370926  WHEN vt0.c0 THEN v0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('E' COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((((CASE WHEN t0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c1 ELSE x'' END)OR(t0.c2 COLLATE BINARY)))OR(t0.c2 COLLATE NOCASE)))OR((vt0.c0 IN ()))))AND(vt0.c0)) ASC, ((x'' COLLATE BINARY)<=(CASE 0.4011016658370926  WHEN vt0.c0 THEN v0.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (CAST('E' COLLATE NOCASE AS BLOB)) ORDER BY ((((((((CASE WHEN t0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c1 ELSE x'' END)OR(t0.c2 COLLATE BINARY)))OR(t0.c2 COLLATE NOCASE)))OR((vt0.c0 IN ()))))AND(vt0.c0)) ASC, ((x'' COLLATE BINARY)<=(CASE 0.4011016658370926  WHEN vt0.c0 THEN v0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('E' COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((((CASE WHEN t0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c1 ELSE x'' END)OR(t0.c2 COLLATE BINARY)))OR(t0.c2 COLLATE NOCASE)))OR((vt0.c0 IN ()))))AND(vt0.c0)) ASC, ((x'' COLLATE BINARY)<=(CASE 0.4011016658370926  WHEN vt0.c0 THEN v0.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (CAST('E' COLLATE NOCASE AS BLOB)) ORDER BY ((((((((CASE WHEN t0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c1 ELSE x'' END)OR(t0.c2 COLLATE BINARY)))OR(t0.c2 COLLATE NOCASE)))OR((vt0.c0 IN ()))))AND(vt0.c0)) ASC, ((x'' COLLATE BINARY)<=(CASE 0.4011016658370926  WHEN vt0.c0 THEN v0.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((~ ((+ (v0.c0))))) ORDER BY (((- (v0.c0)))<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS LAST, (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c0)))<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS LAST, (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE ((~ ((+ (v0.c0))))) ORDER BY (((- (v0.c0)))<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS LAST, (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c0)))<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS LAST, (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE ((~ ((+ (v0.c0))))) ORDER BY (((- (v0.c0)))<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS LAST, (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT ALL * FROM vt0 WHERE (964585634) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0)))OR((vt0.c0 IN ()))) ASC  NULLS FIRST, ((((('14682266')||(vt0.c0))))<>((0.9211295530208106))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((964585634) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0)))OR((vt0.c0 IN ()))) ASC  NULLS FIRST, ((((('14682266')||(vt0.c0))))!=((0.9211295530208106))) DESC);
SELECT ALL * FROM vt0 WHERE (964585634) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0)))OR((vt0.c0 IN ()))) ASC  NULLS FIRST, ((((('14682266')||(vt0.c0))))<>((0.9211295530208106))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((964585634) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0)))OR((vt0.c0 IN ()))) ASC  NULLS FIRST, ((((('14682266')||(vt0.c0))))!=((0.9211295530208106))) DESC);
SELECT ALL * FROM vt0 WHERE (964585634) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0)))OR((vt0.c0 IN ()))) ASC  NULLS FIRST, ((((('14682266')||(vt0.c0))))<>((0.9211295530208106))) DESC;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (CAST(vt0.c0 AS BLOB), '2140132546')) FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN ((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2)))) AND (CAST(v0.c0 AS NUMERIC))) WHERE (((vt0.c0)>=(vt0.c0)) COLLATE NOCASE) ORDER BY (((CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE v0.c0 END, (v0.c0 IN ()), DATETIME(vt0.c0, t0.c2, v0.c0)))==((((t0.c1) NOT NULL), t0.c1 COLLATE NOCASE, CASE WHEN vt0.c0 THEN t0.c2 WHEN 0.498705264691374 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN x'' THEN t0.c0 END)))  NULLS FIRST, x'96ad';
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>=(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (CAST(vt0.c0 AS BLOB), '2140132546')) FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN ((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2)))) AND (CAST(v0.c0 AS NUMERIC))) ORDER BY (((CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE v0.c0 END, (v0.c0 IN ()), DATETIME(vt0.c0, t0.c2, v0.c0)))==((((t0.c1) NOT NULL), t0.c1 COLLATE NOCASE, CASE WHEN vt0.c0 THEN t0.c2 WHEN 0.498705264691374 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN x'' THEN t0.c0 END)))  NULLS FIRST, x'96ad');
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (CAST(vt0.c0 AS BLOB), '2140132546')) FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN ((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2)))) AND (CAST(v0.c0 AS NUMERIC))) WHERE (((vt0.c0)>=(vt0.c0)) COLLATE NOCASE) ORDER BY (((CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE v0.c0 END, (v0.c0 IN ()), DATETIME(vt0.c0, t0.c2, v0.c0)))==((((t0.c1) NOT NULL), t0.c1 COLLATE NOCASE, CASE WHEN vt0.c0 THEN t0.c2 WHEN 0.498705264691374 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN x'' THEN t0.c0 END)))  NULLS FIRST, x'96ad';
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>=(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (CAST(vt0.c0 AS BLOB), '2140132546')) FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN ((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2)))) AND (CAST(v0.c0 AS NUMERIC))) ORDER BY (((CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE v0.c0 END, (v0.c0 IN ()), DATETIME(vt0.c0, t0.c2, v0.c0)))==((((t0.c1) NOT NULL), t0.c1 COLLATE NOCASE, CASE WHEN vt0.c0 THEN t0.c2 WHEN 0.498705264691374 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN x'' THEN t0.c0 END)))  NULLS FIRST, x'96ad');
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (CAST(vt0.c0 AS BLOB), '2140132546')) FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN ((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2)))) AND (CAST(v0.c0 AS NUMERIC))) WHERE (((vt0.c0)>=(vt0.c0)) COLLATE NOCASE) ORDER BY (((CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE v0.c0 END, (v0.c0 IN ()), DATETIME(vt0.c0, t0.c2, v0.c0)))==((((t0.c1) NOT NULL), t0.c1 COLLATE NOCASE, CASE WHEN vt0.c0 THEN t0.c2 WHEN 0.498705264691374 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN x'' THEN t0.c0 END)))  NULLS FIRST, x'96ad';
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) ISNULL)) AND (vt0.c0 COLLATE NOCASE))) ORDER BY 0Xfffffffff8c0e1e2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) ISNULL)) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY 0xfffffffff8c0e1e2  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) ISNULL)) AND (vt0.c0 COLLATE NOCASE))) ORDER BY 0Xfffffffff8c0e1e2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) ISNULL)) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY 0xfffffffff8c0e1e2  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) ISNULL)) AND (vt0.c0 COLLATE NOCASE))) ORDER BY 0Xfffffffff8c0e1e2  NULLS FIRST;
SELECT * FROM t0, vt0, v0 WHERE (((((((((((((((x'02b1bfdf')AND(vt0.c0)))OR(v0.c0)))AND(t0.c2)))AND(vt0.c0)))OR(x'')))OR(v0.c0))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((x'02b1bfdf')AND(vt0.c0)))OR(v0.c0)))AND(t0.c2)))AND(vt0.c0)))OR(x'')))OR(v0.c0))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE (((((((((((((((x'02b1bfdf')AND(vt0.c0)))OR(v0.c0)))AND(t0.c2)))AND(vt0.c0)))OR(x'')))OR(v0.c0))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((x'02b1bfdf')AND(vt0.c0)))OR(v0.c0)))AND(t0.c2)))AND(vt0.c0)))OR(x'')))OR(v0.c0))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE (((((((((((((((x'02b1bfdf')AND(vt0.c0)))OR(v0.c0)))AND(t0.c2)))AND(vt0.c0)))OR(x'')))OR(v0.c0))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (CAST(vt0.c0 AS REAL))));
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))!=((v0.c0 COLLATE NOCASE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<>((v0.c0 COLLATE NOCASE)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))!=((v0.c0 COLLATE NOCASE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<>((v0.c0 COLLATE NOCASE)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))!=((v0.c0 COLLATE NOCASE)))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE WHEN (((0xffffffffa23ea8ff, t0.c2, t0.c2))==((t0.c2, t0.c1, t0.c0))) THEN ((((((((t0.c0)AND(t0.c1)))AND(t0.c0)))OR(t0.c2)))OR(t0.c0)) ELSE ((t0.c2)/(t0.c2)) END) ORDER BY ((((((((((t0.c0) NOTNULL))AND(t0.c1)))OR((- (t0.c2)))))AND(((((t0.c1)AND(t0.c1)))AND(t0.c1)))))OR(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST, (IFNULL(t0.c0, t0.c1) IN ()) ASC, ((((((((((((t0.c0)OR(t0.c1)))AND(t0.c2)))AND((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(t0.c2)))AND((- (t0.c2)))))AND(t0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((0xffffffffa23ea8ff, t0.c2, t0.c2))==((t0.c2, t0.c1, t0.c0))) THEN ((((((((t0.c0)AND(t0.c1)))AND(t0.c0)))OR(t0.c2)))OR(t0.c0)) ELSE ((t0.c2)/(t0.c2)) END) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c0) NOTNULL))AND(t0.c1)))OR((- (t0.c2)))))AND(((((t0.c1)AND(t0.c1)))AND(t0.c1)))))OR(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST, (IFNULL(t0.c0, t0.c1) IN ()) ASC, ((((((((((((t0.c0)OR(t0.c1)))AND(t0.c2)))AND((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(t0.c2)))AND((- (t0.c2)))))AND(t0.c2 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CASE WHEN (((0xffffffffa23ea8ff, t0.c2, t0.c2))==((t0.c2, t0.c1, t0.c0))) THEN ((((((((t0.c0)AND(t0.c1)))AND(t0.c0)))OR(t0.c2)))OR(t0.c0)) ELSE ((t0.c2)/(t0.c2)) END) ORDER BY ((((((((((t0.c0) NOTNULL))AND(t0.c1)))OR((- (t0.c2)))))AND(((((t0.c1)AND(t0.c1)))AND(t0.c1)))))OR(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST, (IFNULL(t0.c0, t0.c1) IN ()) ASC, ((((((((((((t0.c0)OR(t0.c1)))AND(t0.c2)))AND((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(t0.c2)))AND((- (t0.c2)))))AND(t0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((0xffffffffa23ea8ff, t0.c2, t0.c2))==((t0.c2, t0.c1, t0.c0))) THEN ((((((((t0.c0)AND(t0.c1)))AND(t0.c0)))OR(t0.c2)))OR(t0.c0)) ELSE ((t0.c2)/(t0.c2)) END) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c0) NOTNULL))AND(t0.c1)))OR((- (t0.c2)))))AND(((((t0.c1)AND(t0.c1)))AND(t0.c1)))))OR(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST, (IFNULL(t0.c0, t0.c1) IN ()) ASC, ((((((((((((t0.c0)OR(t0.c1)))AND(t0.c2)))AND((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(t0.c2)))AND((- (t0.c2)))))AND(t0.c2 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CASE WHEN (((0xffffffffa23ea8ff, t0.c2, t0.c2))==((t0.c2, t0.c1, t0.c0))) THEN ((((((((t0.c0)AND(t0.c1)))AND(t0.c0)))OR(t0.c2)))OR(t0.c0)) ELSE ((t0.c2)/(t0.c2)) END) ORDER BY ((((((((((t0.c0) NOTNULL))AND(t0.c1)))OR((- (t0.c2)))))AND(((((t0.c1)AND(t0.c1)))AND(t0.c1)))))OR(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST, (IFNULL(t0.c0, t0.c1) IN ()) ASC, ((((((((((((t0.c0)OR(t0.c1)))AND(t0.c2)))AND((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(t0.c2)))AND((- (t0.c2)))))AND(t0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((((x'')OR(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND((((t0.c1, t0.c1, t0.c1))<>((t0.c0, t0.c1, t0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND((((t0.c1, t0.c1, t0.c1))<>((t0.c0, t0.c1, t0.c1)))))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((((x'')OR(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND((((t0.c1, t0.c1, t0.c1))<>((t0.c0, t0.c1, t0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND((((t0.c1, t0.c1, t0.c1))<>((t0.c0, t0.c1, t0.c1)))))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((((x'')OR(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND((((t0.c1, t0.c1, t0.c1))<>((t0.c0, t0.c1, t0.c1))))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0) ISNULL) IN (0.020289292734724462))) ORDER BY (~ (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN (0.020289292734724462))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0) ISNULL) IN (0.020289292734724462))) ORDER BY (~ (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN (0.020289292734724462))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0) ISNULL) IN (0.020289292734724462))) ORDER BY (~ (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) DESC;
SELECT ALL * FROM t0 WHERE (((((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))AND(((t0.c0) BETWEEN (t0.c0) AND (x'')))))AND('hOqbaZ,'))) ORDER BY t0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))AND(((t0.c0) BETWEEN (t0.c0) AND (x'')))))AND('hOqbaZ,'))) IS TRUE)  as count FROM t0 ORDER BY t0.c1 DESC);
SELECT ALL * FROM t0 WHERE (((((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))AND(((t0.c0) BETWEEN (t0.c0) AND (x'')))))AND('hOqbaZ,'))) ORDER BY t0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))AND(((t0.c0) BETWEEN (t0.c0) AND (x'')))))AND('hOqbaZ,'))) IS TRUE)  as count FROM t0 ORDER BY t0.c1 DESC);
SELECT ALL * FROM t0 WHERE (((((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))AND(((t0.c0) BETWEEN (t0.c0) AND (x'')))))AND('hOqbaZ,'))) ORDER BY t0.c1 DESC;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (v0.c0 IN ()) COLLATE NOCASE WHERE ((((((v0.c0)AND(vt0.c0))))==((((v0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(vt0.c0))))=((((v0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (v0.c0 IN ()) COLLATE NOCASE);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (v0.c0 IN ()) COLLATE NOCASE WHERE ((((((v0.c0)AND(vt0.c0))))==((((v0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(vt0.c0))))=((((v0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (v0.c0 IN ()) COLLATE NOCASE);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (v0.c0 IN ()) COLLATE NOCASE WHERE ((((((v0.c0)AND(vt0.c0))))==((((v0.c0) NOTNULL)))));
SELECT * FROM v0, vt0 WHERE (0.9503525848793233) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9503525848793233) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (0.9503525848793233) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9503525848793233) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (0.9503525848793233) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT * FROM v0, vt0, t0 WHERE (((((v0.c0)OR(((v0.c0) IS TRUE))))OR(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(((v0.c0) IS TRUE))))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (((((v0.c0)OR(((v0.c0) IS TRUE))))OR(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(((v0.c0) IS TRUE))))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (((((v0.c0)OR(((v0.c0) IS TRUE))))OR(((v0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CASE WHEN CAST(v0.c0 AS REAL) THEN rtreenode(t0.c2, t0.c1) WHEN ((t0.c1) ISNULL) THEN (- (t0.c1)) WHEN (+ (v0.c0)) THEN CASE v0.c0  WHEN t0.c2 THEN v0.c0 END ELSE ((((t0.c2)OR(t0.c1)))OR(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS REAL) THEN rtreenode(t0.c2, t0.c1) WHEN ((t0.c1) ISNULL) THEN (- (t0.c1)) WHEN (+ (v0.c0)) THEN CASE v0.c0  WHEN t0.c2 THEN v0.c0 END ELSE ((((t0.c2)OR(t0.c1)))OR(t0.c1)) END) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CASE WHEN CAST(v0.c0 AS REAL) THEN rtreenode(t0.c2, t0.c1) WHEN ((t0.c1) ISNULL) THEN (- (t0.c1)) WHEN (+ (v0.c0)) THEN CASE v0.c0  WHEN t0.c2 THEN v0.c0 END ELSE ((((t0.c2)OR(t0.c1)))OR(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS REAL) THEN rtreenode(t0.c2, t0.c1) WHEN ((t0.c1) ISNULL) THEN (- (t0.c1)) WHEN (+ (v0.c0)) THEN CASE v0.c0  WHEN t0.c2 THEN v0.c0 END ELSE ((((t0.c2)OR(t0.c1)))OR(t0.c1)) END) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CASE WHEN CAST(v0.c0 AS REAL) THEN rtreenode(t0.c2, t0.c1) WHEN ((t0.c1) ISNULL) THEN (- (t0.c1)) WHEN (+ (v0.c0)) THEN CASE v0.c0  WHEN t0.c2 THEN v0.c0 END ELSE ((((t0.c2)OR(t0.c1)))OR(t0.c1)) END);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE NULL END, (((vt0.c0)) BETWEEN ((t0.c1)) AND ((v0.c0))), (t0.c0 IN (vt0.c0)), ((t0.c0)GLOB(vt0.c0)), ((t0.c1) BETWEEN (vt0.c0) AND (''))))=(((((t0.c0, t0.c2, t0.c1))<((vt0.c0, t0.c2, NULL))), CAST(t0.c1 AS BLOB), ((t0.c1) BETWEEN (t0.c0) AND (v0.c0)), (~ (v0.c0)), CAST(t0.c0 AS TEXT)))) LEFT OUTER JOIN v0 ON CASE ((vt0.c0) IS FALSE)  WHEN t0.c1 THEN json_type(vt0.c0) END WHERE (((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE NULL END, (((vt0.c0)) BETWEEN ((t0.c1)) AND ((v0.c0))), (t0.c0 IN (vt0.c0)), ((t0.c0)GLOB(vt0.c0)), ((t0.c1) BETWEEN (vt0.c0) AND (''))))==(((((t0.c0, t0.c2, t0.c1))<((vt0.c0, t0.c2, NULL))), CAST(t0.c1 AS BLOB), ((t0.c1) BETWEEN (t0.c0) AND (v0.c0)), (~ (v0.c0)), CAST(t0.c0 AS TEXT)))) LEFT OUTER JOIN v0 ON CASE ((vt0.c0) IS FALSE)  WHEN t0.c1 THEN json_type(vt0.c0) END);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE NULL END, (((vt0.c0)) BETWEEN ((t0.c1)) AND ((v0.c0))), (t0.c0 IN (vt0.c0)), ((t0.c0)GLOB(vt0.c0)), ((t0.c1) BETWEEN (vt0.c0) AND (''))))=(((((t0.c0, t0.c2, t0.c1))<((vt0.c0, t0.c2, NULL))), CAST(t0.c1 AS BLOB), ((t0.c1) BETWEEN (t0.c0) AND (v0.c0)), (~ (v0.c0)), CAST(t0.c0 AS TEXT)))) LEFT OUTER JOIN v0 ON CASE ((vt0.c0) IS FALSE)  WHEN t0.c1 THEN json_type(vt0.c0) END WHERE (((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE NULL END, (((vt0.c0)) BETWEEN ((t0.c1)) AND ((v0.c0))), (t0.c0 IN (vt0.c0)), ((t0.c0)GLOB(vt0.c0)), ((t0.c1) BETWEEN (vt0.c0) AND (''))))==(((((t0.c0, t0.c2, t0.c1))<((vt0.c0, t0.c2, NULL))), CAST(t0.c1 AS BLOB), ((t0.c1) BETWEEN (t0.c0) AND (v0.c0)), (~ (v0.c0)), CAST(t0.c0 AS TEXT)))) LEFT OUTER JOIN v0 ON CASE ((vt0.c0) IS FALSE)  WHEN t0.c1 THEN json_type(vt0.c0) END);
SELECT COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)==((+ (v0.c0)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)==((+ (v0.c0)))));
SELECT COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)==((+ (v0.c0)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)==((+ (v0.c0)))));
SELECT COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)==((+ (v0.c0)))) WHERE (vt0.c0);
SELECT ALL * FROM v0, t0 WHERE ('-1828068054');
SELECT SUM(count) FROM (SELECT ALL (('-1828068054') IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ('-1828068054');
SELECT SUM(count) FROM (SELECT ALL (('-1828068054') IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ('-1828068054');
SELECT * FROM vt0 CROSS JOIN t0 ON ((((((v0.c0)AND(t0.c1)))OR(v0.c0))) BETWEEN (t0.c2 COLLATE RTRIM) AND (((vt0.c0)=(t0.c2)))) FULL OUTER JOIN v0 ON 479720178 WHERE (((t0.c0 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((((v0.c0)AND(t0.c1)))OR(v0.c0))) BETWEEN (t0.c2 COLLATE RTRIM) AND (((vt0.c0)=(t0.c2)))) FULL OUTER JOIN v0 ON 479720178);
SELECT * FROM vt0 CROSS JOIN t0 ON ((((((v0.c0)AND(t0.c1)))OR(v0.c0))) BETWEEN (t0.c2 COLLATE RTRIM) AND (((vt0.c0)=(t0.c2)))) FULL OUTER JOIN v0 ON 479720178 WHERE (((t0.c0 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((((v0.c0)AND(t0.c1)))OR(v0.c0))) BETWEEN (t0.c2 COLLATE RTRIM) AND (((vt0.c0)=(t0.c2)))) FULL OUTER JOIN v0 ON 479720178);
SELECT * FROM t0, vt0, v0 WHERE (((CAST(t0.c1 AS INTEGER))&(t0.c0))) ORDER BY ((((((vt0.c0)<<(t0.c2)))OR((~ (v0.c0)))))OR((((t0.c1)) NOT BETWEEN (('q|A</H')) AND ((t0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS INTEGER))&(t0.c0))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((((vt0.c0)<<(t0.c2)))OR((~ (v0.c0)))))OR((((t0.c1)) NOT BETWEEN (('q|A</H')) AND ((t0.c1))))) ASC  NULLS LAST);
SELECT * FROM t0, vt0, v0 WHERE (((CAST(t0.c1 AS INTEGER))&(t0.c0))) ORDER BY ((((((vt0.c0)<<(t0.c2)))OR((~ (v0.c0)))))OR((((t0.c1)) NOT BETWEEN (('q|A</H')) AND ((t0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS INTEGER))&(t0.c0))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((((vt0.c0)<<(t0.c2)))OR((~ (v0.c0)))))OR((((t0.c1)) NOT BETWEEN (('q|A</H')) AND ((t0.c1))))) ASC  NULLS LAST);
SELECT * FROM t0, vt0, v0 WHERE (((CAST(t0.c1 AS INTEGER))&(t0.c0))) ORDER BY ((((((vt0.c0)<<(t0.c2)))OR((~ (v0.c0)))))OR((((t0.c1)) NOT BETWEEN (('q|A</H')) AND ((t0.c1))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS REAL));
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, (+ (v0.c0)), (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))) AND ((v0.c0 COLLATE BINARY, ((((v0.c0)OR(v0.c0)))AND(-2.9801155E8)), (~ (v0.c0)))))) ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0)<>('Xz|')) THEN ((v0.c0)>=(v0.c0)) WHEN ((0.18930967772662033) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) IS FALSE) END DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, (+ (v0.c0)), (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))) AND ((v0.c0 COLLATE BINARY, ((((v0.c0)OR(v0.c0)))AND(-2.9801155E8)), (~ (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0)<>('Xz|')) THEN ((v0.c0)>=(v0.c0)) WHEN ((0.18930967772662033) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) IS FALSE) END DESC);
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, (+ (v0.c0)), (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))) AND ((v0.c0 COLLATE BINARY, ((((v0.c0)OR(v0.c0)))AND(-2.9801155E8)), (~ (v0.c0)))))) ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0)<>('Xz|')) THEN ((v0.c0)>=(v0.c0)) WHEN ((0.18930967772662033) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) IS FALSE) END DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, (+ (v0.c0)), (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))) AND ((v0.c0 COLLATE BINARY, ((((v0.c0)OR(v0.c0)))AND(-2.9801155E8)), (~ (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0)<>('Xz|')) THEN ((v0.c0)>=(v0.c0)) WHEN ((0.18930967772662033) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) IS FALSE) END DESC);
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, (+ (v0.c0)), (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))) AND ((v0.c0 COLLATE BINARY, ((((v0.c0)OR(v0.c0)))AND(-2.9801155E8)), (~ (v0.c0)))))) ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0)<>('Xz|')) THEN ((v0.c0)>=(v0.c0)) WHEN ((0.18930967772662033) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) IS FALSE) END DESC;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((t0.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((t0.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((t0.c1 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt0 ON x'32e3' WHERE (((((t0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON x'32e3');
SELECT ALL COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt0 ON x'32e3' WHERE (((((t0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON x'32e3');
SELECT ALL COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt0 ON x'32e3' WHERE (((((t0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()));
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c0 IN ()))>>(v0.c0 COLLATE RTRIM))) ORDER BY (v0.c0 IN (((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c0) IS TRUE) THEN (vt0.c0 IN (0.31947335290370715, vt0.c0)) ELSE v0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>>(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0 ORDER BY (v0.c0 IN (((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c0) IS TRUE) THEN (vt0.c0 IN (0.31947335290370715, vt0.c0)) ELSE v0.c0 END  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c0 IN ()))>>(v0.c0 COLLATE RTRIM))) ORDER BY (v0.c0 IN (((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c0) IS TRUE) THEN (vt0.c0 IN (0.31947335290370715, vt0.c0)) ELSE v0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>>(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0 ORDER BY (v0.c0 IN (((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c0) IS TRUE) THEN (vt0.c0 IN (0.31947335290370715, vt0.c0)) ELSE v0.c0 END  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c0 IN ()))>>(v0.c0 COLLATE RTRIM))) ORDER BY (v0.c0 IN (((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c0) IS TRUE) THEN (vt0.c0 IN (0.31947335290370715, vt0.c0)) ELSE v0.c0 END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c2) NOTNULL))OR(((t0.c0)+(t0.c1)))))OR(((t0.c0)<<(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) NOTNULL))OR(((t0.c0)+(t0.c1)))))OR(((t0.c0)<<(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c2) NOTNULL))OR(((t0.c0)+(t0.c1)))))OR(((t0.c0)<<(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) NOTNULL))OR(((t0.c0)+(t0.c1)))))OR(((t0.c0)<<(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c2) NOTNULL))OR(((t0.c0)+(t0.c1)))))OR(((t0.c0)<<(t0.c2)))));
SELECT ALL COUNT(*) FROM v0, vt0 INNER JOIN t0 ON ((x'447c')!=(t0.c1 COLLATE BINARY)) WHERE (x'') ORDER BY (- (x'')) DESC  NULLS LAST, CASE WHEN LIKELY(v0.c0) THEN ((t0.c0) IS FALSE) WHEN (t0.c0 IN ()) THEN ((t0.c0)GLOB(t0.c1)) WHEN ((t0.c0) NOT NULL) THEN CAST(NULL AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON ((x'447c')!=(t0.c1 COLLATE BINARY)) ORDER BY (- (x'')) DESC  NULLS LAST, CASE WHEN LIKELY(v0.c0) THEN ((t0.c0) IS FALSE) WHEN (t0.c0 IN ()) THEN ((t0.c0)GLOB(t0.c1)) WHEN ((t0.c0) NOT NULL) THEN CAST(NULL AS TEXT) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 INNER JOIN t0 ON ((x'447c')!=(t0.c1 COLLATE BINARY)) WHERE (x'') ORDER BY (- (x'')) DESC  NULLS LAST, CASE WHEN LIKELY(v0.c0) THEN ((t0.c0) IS FALSE) WHEN (t0.c0 IN ()) THEN ((t0.c0)GLOB(t0.c1)) WHEN ((t0.c0) NOT NULL) THEN CAST(NULL AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON ((x'447c')!=(t0.c1 COLLATE BINARY)) ORDER BY (- (x'')) DESC  NULLS LAST, CASE WHEN LIKELY(v0.c0) THEN ((t0.c0) IS FALSE) WHEN (t0.c0 IN ()) THEN ((t0.c0)GLOB(t0.c1)) WHEN ((t0.c0) NOT NULL) THEN CAST(NULL AS TEXT) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 INNER JOIN t0 ON ((x'447c')!=(t0.c1 COLLATE BINARY)) WHERE (x'') ORDER BY (- (x'')) DESC  NULLS LAST, CASE WHEN LIKELY(v0.c0) THEN ((t0.c0) IS FALSE) WHEN (t0.c0 IN ()) THEN ((t0.c0)GLOB(t0.c1)) WHEN ((t0.c0) NOT NULL) THEN CAST(NULL AS TEXT) END  NULLS FIRST;
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.12187147801077491 THEN vt0.c0 WHEN v0.c0 THEN t0.c1 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c2 ELSE vt0.c0 END))>=((((731045224)>>(-1.7976931348623157E308))))) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.12187147801077491 THEN vt0.c0 WHEN v0.c0 THEN t0.c1 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c2 ELSE vt0.c0 END))>=((((731045224)>>(-1.7976931348623157E308))))));
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.12187147801077491 THEN vt0.c0 WHEN v0.c0 THEN t0.c1 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c2 ELSE vt0.c0 END))>=((((731045224)>>(-1.7976931348623157E308))))) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.12187147801077491 THEN vt0.c0 WHEN v0.c0 THEN t0.c1 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c2 ELSE vt0.c0 END))>=((((731045224)>>(-1.7976931348623157E308))))));
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.12187147801077491 THEN vt0.c0 WHEN v0.c0 THEN t0.c1 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c2 ELSE vt0.c0 END))>=((((731045224)>>(-1.7976931348623157E308))))) WHERE (t0.c2);
SELECT * FROM t0, vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN (((((v0.c0, v0.c0, t0.c2))<=((t0.c1, t0.c1, vt0.c0))))) AND ((CAST(v0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((((v0.c0, v0.c0, t0.c2))<=((t0.c1, t0.c1, vt0.c0))))) AND ((CAST(v0.c0 AS TEXT))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN (((((v0.c0, v0.c0, t0.c2))<=((t0.c1, t0.c1, vt0.c0))))) AND ((CAST(v0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((((v0.c0, v0.c0, t0.c2))<=((t0.c1, t0.c1, vt0.c0))))) AND ((CAST(v0.c0 AS TEXT))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN (((((v0.c0, v0.c0, t0.c2))<=((t0.c1, t0.c1, vt0.c0))))) AND ((CAST(v0.c0 AS TEXT)))));
SELECT ALL * FROM vt0, t0, v0 WHERE ((((t0.c0)) BETWEEN ((CAST('\n2hk' AS BLOB))) AND ((t0.c2)))) ORDER BY (((t0.c1 IN (t0.c1))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((CAST('\n2hk' AS BLOB))) AND ((t0.c2)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((t0.c1 IN (t0.c1))) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE ((((t0.c0)) BETWEEN ((CAST('\n2hk' AS BLOB))) AND ((t0.c2)))) ORDER BY (((t0.c1 IN (t0.c1))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((CAST('\n2hk' AS BLOB))) AND ((t0.c2)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((t0.c1 IN (t0.c1))) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE ((((t0.c0)) BETWEEN ((CAST('\n2hk' AS BLOB))) AND ((t0.c2)))) ORDER BY (((t0.c1 IN (t0.c1))) NOT NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c1 END)+(((t0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c1 END)+(((t0.c2) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c1 END)+(((t0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c1 END)+(((t0.c2) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c1 END)+(((t0.c2) ISNULL))));
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((v0.c0)) AND (('471477288'))) COLLATE BINARY) ORDER BY CAST(((vt0.c0)<(v0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((v0.c0)) AND (('471477288'))) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((vt0.c0)<(v0.c0)) AS BLOB));
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((v0.c0)) AND (('471477288'))) COLLATE BINARY) ORDER BY CAST(((vt0.c0)<(v0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((v0.c0)) AND (('471477288'))) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((vt0.c0)<(v0.c0)) AS BLOB));
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((v0.c0)) AND (('471477288'))) COLLATE BINARY) ORDER BY CAST(((vt0.c0)<(v0.c0)) AS BLOB);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0)|(vt0.c0)), '-746766879', ((vt0.c0)AND(x'7d49')))) AND (((NOT (vt0.c0)), (NOT (v0.c0)), v0.c0 COLLATE NOCASE))) WHERE (v0.c0) ORDER BY CASE WHEN '' THEN x'4e9a' WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((v0.c0)<(v0.c0)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) ELSE TRIM(vt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0)|(vt0.c0)), '-746766879', ((vt0.c0)AND(x'7d49')))) AND (((NOT (vt0.c0)), (NOT (v0.c0)), v0.c0 COLLATE NOCASE))) ORDER BY CASE WHEN '' THEN x'4e9a' WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((v0.c0)<(v0.c0)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) ELSE TRIM(vt0.c0) END);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0)|(vt0.c0)), '-746766879', ((vt0.c0)AND(x'7d49')))) AND (((NOT (vt0.c0)), (NOT (v0.c0)), v0.c0 COLLATE NOCASE))) WHERE (v0.c0) ORDER BY CASE WHEN '' THEN x'4e9a' WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((v0.c0)<(v0.c0)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) ELSE TRIM(vt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0)|(vt0.c0)), '-746766879', ((vt0.c0)AND(x'7d49')))) AND (((NOT (vt0.c0)), (NOT (v0.c0)), v0.c0 COLLATE NOCASE))) ORDER BY CASE WHEN '' THEN x'4e9a' WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((v0.c0)<(v0.c0)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) ELSE TRIM(vt0.c0) END);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0)|(vt0.c0)), '-746766879', ((vt0.c0)AND(x'7d49')))) AND (((NOT (vt0.c0)), (NOT (v0.c0)), v0.c0 COLLATE NOCASE))) WHERE (v0.c0) ORDER BY CASE WHEN '' THEN x'4e9a' WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((v0.c0)<(v0.c0)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) ELSE TRIM(vt0.c0) END;
