-- Time: 2024/06/09 03:49:08
-- Database: database38
-- Database version: 3.40.0
-- seed value: 1519570938
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 9ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (x'', NULL); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('IEf癡wDFg{'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (x'c0cb', NULL, '	L!+'), ((((NOT (-1132185981)))&(((('2099627198')) NOT BETWEEN ((1.063810657E9)) AND ((x''))))), NULL, x''), (NULL, x'cc48', NULL), (x'', '_&YygeH焃M', '1886405451'), (NULL, 0.7515269251881007, 0.7143906389476881); -- 1ms;
INSERT OR ABORT INTO rt0 VALUES (x'', 0.7139391777227028, 0.878352949994651); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA mmap_size; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c1) VALUES ('-708720606', 0.3635453621319287), ('', ''), (0.16551556352569496, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.6473980819859245); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.7139391777227028 WHERE NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), CHAR(rt0.c2)); -- 0ms;
UPDATE rt0 SET c0=0X5f173f14; -- 0ms;
UPDATE OR REPLACE rt0 SET (c1)=(0.36309360424846804); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES ('1886405451', '-1246596861'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0xffffffffb5b27103, c0=0.7515269251881007; -- 1ms;
REINDEX RTRIM; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1) VALUES (NULL, 0.6378163284943191); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('x9', NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES ('', NULL, x'31ac0874'), (x'', 0x169ae577, NULL), (0.3783001304937661, x'', x''); -- 7ms;
UPDATE OR IGNORE rt0 SET c2='kV0Cd'; -- 7ms;
DELETE FROM sqlite_stat1 WHERE ((+ ('-1246596861')) IN (-1.132185981E9)); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES (0x5f173f14, '\a', 0.3783001304937661); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='-1246596861', c0=x'' WHERE rt0.c1; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1); -- 0ms;
ANALYZE vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '32066'); -- 8ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (-1.132185981E9); -- 0ms;
UPDATE vt0 SET c1=NULL WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL), (1849532984), ('-1952797308'); -- 21ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1)=(0Xffffffffe0b69471); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES ('-708720606', x'eda6'); -- 21ms;
ANALYZE main; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (0.29391493965149373, 0.11096662945745073), (0.43471901124914614, 0.4248551521163568), (x'', ''); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 1ms;
PRAGMA optimize; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2, c1) VALUES (0.867619510733169, '-1952797308', 'gxEwAi'); -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES ('1849532984', '0.6378163284943191', 0.5714346035862224); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ANALYZE; -- 1ms;
REINDEX BINARY; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE vt0 SET c0=NULL WHERE (-2135262516 IN ()); -- 1ms;
UPDATE OR IGNORE rt0 SET (c0, c0)=('-601542258', NULL) WHERE (((rt0.c2)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((rt0.c2 COLLATE NOCASE))); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.43357261894838406) WHERE (((vt0.c1) NOT NULL) IN (LIKELY(-1246596861), ((vt0.c1)|(vt0.c1)))); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 13ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB , c1 TEXT , c2 INT ); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1063497803); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('379250039')<=(0.878352949994651)))%(((x'8a72') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO rt1(c0, c1, c2) VALUES (-2042391370, NULL, NULL); -- 22ms;
UPDATE vt0 SET (c0)=(-1224181726); -- 3ms;
UPDATE rt1 SET (c2)=(2099627198); -- 0ms;
UPDATE OR FAIL rt0 SET (c2, c1, c1)=('MD', 0x37424535, '') WHERE CASE 0.551421437764875  WHEN (rt0.c1 IN (rt0.c1)) THEN (((rt0.c1, 3.79250039E8, '<z'))<>((rt0.c1, rt0.c0, x''))) ELSE rt0.c0 COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0) VALUES (']', NULL, 0.21136072547658347); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=('_&YygeH焃M') WHERE (NOT ((- (rt1.c2)))); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2) VALUES (624379646, 0.1267578122928712); -- 1ms;
PRAGMA foreign_keys; -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '47503'); -- 14ms;
INSERT OR REPLACE INTO rt1(c0, c2, c1) VALUES (NULL, x'ccaf', '-1454075106'), (x'5d71', 'md', NULL), ('0.878352949994651', '}V', NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c2, c0)=('', 0.04811406841186694, x''); -- 1ms;
INSERT OR REPLACE INTO rt1(c2, c1) VALUES (0.3035022752470854, 0x46126d53); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), ('1057109591'), (NULL); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0, c2) VALUES (NULL, '5[&k'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 8ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE rt0; -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-708720606,15');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c0) VALUES (3.79250039E8, 0.4699022944012844); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.8534751291897285); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='-19785994' WHERE UNLIKELY(DISTINCT 0.7012497225973329); -- 0ms;
DROP TABLE rt1; -- 1ms;
UPDATE OR FAIL t0 SET c0='Efᛶ*g/>d', c0=0.33982255959415375 WHERE ((((((t0.c2) ISNULL))AND((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1))))))AND(((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0, rt0 CROSS JOIN t0 ON NULL COLLATE BINARY WHERE (((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON NULL COLLATE BINARY);
SELECT ALL * FROM vt0, rt0 CROSS JOIN t0 ON NULL COLLATE BINARY WHERE (((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON NULL COLLATE BINARY);
SELECT ALL * FROM vt0, rt0 CROSS JOIN t0 ON NULL COLLATE BINARY WHERE (((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (((0.30884554244222817)) BETWEEN ((LAST_INSERT_ROWID())) AND ((vt0.c1 COLLATE RTRIM))) WHERE (CASE t0.c0 COLLATE BINARY  WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c1 COLLATE RTRIM WHEN (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN '' WHEN (vt0.c1 IN ()) THEN ((t0.c1)<=(t0.c1)) WHEN vt0.c1 COLLATE RTRIM THEN ((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) WHEN ((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN vt0.c1 COLLATE BINARY ELSE CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END END) ORDER BY ((t0.c0 COLLATE BINARY) BETWEEN (((t0.c1) IS TRUE)) AND ((~ (t0.c1))))  NULLS LAST, ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))) ISNULL) DESC, ((0.7628368724432735 IN ()) IN (((t0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE BINARY  WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c1 COLLATE RTRIM WHEN (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN '' WHEN (vt0.c1 IN ()) THEN ((t0.c1)<=(t0.c1)) WHEN vt0.c1 COLLATE RTRIM THEN ((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) WHEN ((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN vt0.c1 COLLATE BINARY ELSE CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((0.30884554244222817)) BETWEEN ((LAST_INSERT_ROWID())) AND ((vt0.c1 COLLATE RTRIM))) ORDER BY ((t0.c0 COLLATE BINARY) BETWEEN (((t0.c1) IS TRUE)) AND ((~ (t0.c1))))  NULLS LAST, ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))) ISNULL) DESC, ((0.7628368724432735 IN ()) IN (((t0.c0) NOT NULL)))  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (((0.30884554244222817)) BETWEEN ((LAST_INSERT_ROWID())) AND ((vt0.c1 COLLATE RTRIM))) WHERE (CASE t0.c0 COLLATE BINARY  WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c1 COLLATE RTRIM WHEN (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN '' WHEN (vt0.c1 IN ()) THEN ((t0.c1)<=(t0.c1)) WHEN vt0.c1 COLLATE RTRIM THEN ((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) WHEN ((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN vt0.c1 COLLATE BINARY ELSE CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END END) ORDER BY ((t0.c0 COLLATE BINARY) BETWEEN (((t0.c1) IS TRUE)) AND ((~ (t0.c1))))  NULLS LAST, ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))) ISNULL) DESC, ((0.7628368724432735 IN ()) IN (((t0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE BINARY  WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c1 COLLATE RTRIM WHEN (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN '' WHEN (vt0.c1 IN ()) THEN ((t0.c1)<=(t0.c1)) WHEN vt0.c1 COLLATE RTRIM THEN ((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) WHEN ((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN vt0.c1 COLLATE BINARY ELSE CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((0.30884554244222817)) BETWEEN ((LAST_INSERT_ROWID())) AND ((vt0.c1 COLLATE RTRIM))) ORDER BY ((t0.c0 COLLATE BINARY) BETWEEN (((t0.c1) IS TRUE)) AND ((~ (t0.c1))))  NULLS LAST, ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))) ISNULL) DESC, ((0.7628368724432735 IN ()) IN (((t0.c0) NOT NULL)))  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (((0.30884554244222817)) BETWEEN ((LAST_INSERT_ROWID())) AND ((vt0.c1 COLLATE RTRIM))) WHERE (CASE t0.c0 COLLATE BINARY  WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c1 COLLATE RTRIM WHEN (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN '' WHEN (vt0.c1 IN ()) THEN ((t0.c1)<=(t0.c1)) WHEN vt0.c1 COLLATE RTRIM THEN ((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) WHEN ((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN vt0.c1 COLLATE BINARY ELSE CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END END) ORDER BY ((t0.c0 COLLATE BINARY) BETWEEN (((t0.c1) IS TRUE)) AND ((~ (t0.c1))))  NULLS LAST, ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))) ISNULL) DESC, ((0.7628368724432735 IN ()) IN (((t0.c0) NOT NULL)))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((JULIANDAY(t0.c0, t0.c2, t0.c1)))>=((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))))) ORDER BY (((((((t0.c0)OR(t0.c0)))AND(t0.c0)), json_valid(-2128020209), ((((t0.c1)OR(t0.c1)))OR(t0.c0))))>((((t0.c1)>>(t0.c2)), CHANGES(), t0.c1 COLLATE NOCASE))) ASC  NULLS FIRST, ((((((t0.c2)OR(t0.c1)))AND(t0.c0))) NOT BETWEEN (1.886405451E9) AND (((((t0.c2)AND(t0.c1)))OR(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((JULIANDAY(t0.c0, t0.c2, t0.c1)))>=((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY (((((((t0.c0)OR(t0.c0)))AND(t0.c0)), json_valid(-2128020209), ((((t0.c1)OR(t0.c1)))OR(t0.c0))))>((((t0.c1)>>(t0.c2)), CHANGES(), t0.c1 COLLATE NOCASE))) ASC  NULLS FIRST, ((((((t0.c2)OR(t0.c1)))AND(t0.c0))) NOT BETWEEN (1.886405451E9) AND (((((t0.c2)AND(t0.c1)))OR(t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((JULIANDAY(t0.c0, t0.c2, t0.c1)))>=((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))))) ORDER BY (((((((t0.c0)OR(t0.c0)))AND(t0.c0)), json_valid(-2128020209), ((((t0.c1)OR(t0.c1)))OR(t0.c0))))>((((t0.c1)>>(t0.c2)), CHANGES(), t0.c1 COLLATE NOCASE))) ASC  NULLS FIRST, ((((((t0.c2)OR(t0.c1)))AND(t0.c0))) NOT BETWEEN (1.886405451E9) AND (((((t0.c2)AND(t0.c1)))OR(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((JULIANDAY(t0.c0, t0.c2, t0.c1)))>=((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY (((((((t0.c0)OR(t0.c0)))AND(t0.c0)), json_valid(-2128020209), ((((t0.c1)OR(t0.c1)))OR(t0.c0))))>((((t0.c1)>>(t0.c2)), CHANGES(), t0.c1 COLLATE NOCASE))) ASC  NULLS FIRST, ((((((t0.c2)OR(t0.c1)))AND(t0.c0))) NOT BETWEEN (1.886405451E9) AND (((((t0.c2)AND(t0.c1)))OR(t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((JULIANDAY(t0.c0, t0.c2, t0.c1)))>=((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))))) ORDER BY (((((((t0.c0)OR(t0.c0)))AND(t0.c0)), json_valid(-2128020209), ((((t0.c1)OR(t0.c1)))OR(t0.c0))))>((((t0.c1)>>(t0.c2)), CHANGES(), t0.c1 COLLATE NOCASE))) ASC  NULLS FIRST, ((((((t0.c2)OR(t0.c1)))AND(t0.c0))) NOT BETWEEN (1.886405451E9) AND (((((t0.c2)AND(t0.c1)))OR(t0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t0 ON CASE ((((vt0.c1)OR(rt0.c2)))OR(vt0.c0))  WHEN (((t0.c1, rt0.c2, t0.c0, t0.c0, rt0.c1))>((0.4667695566162897, vt0.c1, rt0.c2, vt0.c0, rt0.c0))) THEN ((((((((rt0.c0)OR(t0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) WHEN CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN 0.9421777633260275 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN (('-524905359')<>(x'')) WHEN vt0.c0 THEN ABS(rt0.c2) ELSE t0.c2 COLLATE BINARY END WHERE ((((- (rt0.c1))) ISNULL)) ORDER BY 0.1809499577848278 ASC  NULLS FIRST, NULL, CASE CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c0 END  WHEN NULL THEN vt0.c1 WHEN (t0.c1 IN (vt0.c1, 0.6769959528861781)) THEN (vt0.c1 IN ()) WHEN ((t0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) THEN ((t0.c2)>>(t0.c2)) WHEN (((NULL)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN 1959137588 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) THEN '<c2#3' END;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 RIGHT OUTER JOIN t0 ON CASE ((((vt0.c1)OR(rt0.c2)))OR(vt0.c0))  WHEN (((t0.c1, rt0.c2, t0.c0, t0.c0, rt0.c1))>((0.4667695566162897, vt0.c1, rt0.c2, vt0.c0, rt0.c0))) THEN ((((((((rt0.c0)OR(t0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) WHEN CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN 0.9421777633260275 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN (('-524905359')<>(x'')) WHEN vt0.c0 THEN ABS(rt0.c2) ELSE t0.c2 COLLATE BINARY END ORDER BY 0.1809499577848278 ASC  NULLS FIRST, NULL, CASE CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c0 END  WHEN NULL THEN vt0.c1 WHEN (t0.c1 IN (vt0.c1, 0.6769959528861781)) THEN (vt0.c1 IN ()) WHEN ((t0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) THEN ((t0.c2)>>(t0.c2)) WHEN (((NULL)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN 1959137588 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) THEN '<c2#3' END);
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t0 ON CASE ((((vt0.c1)OR(rt0.c2)))OR(vt0.c0))  WHEN (((t0.c1, rt0.c2, t0.c0, t0.c0, rt0.c1))>((0.4667695566162897, vt0.c1, rt0.c2, vt0.c0, rt0.c0))) THEN ((((((((rt0.c0)OR(t0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) WHEN CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN 0.9421777633260275 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN (('-524905359')<>(x'')) WHEN vt0.c0 THEN ABS(rt0.c2) ELSE t0.c2 COLLATE BINARY END WHERE ((((- (rt0.c1))) ISNULL)) ORDER BY 0.1809499577848278 ASC  NULLS FIRST, NULL, CASE CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c0 END  WHEN NULL THEN vt0.c1 WHEN (t0.c1 IN (vt0.c1, 0.6769959528861781)) THEN (vt0.c1 IN ()) WHEN ((t0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) THEN ((t0.c2)>>(t0.c2)) WHEN (((NULL)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN 1959137588 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) THEN '<c2#3' END;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 RIGHT OUTER JOIN t0 ON CASE ((((vt0.c1)OR(rt0.c2)))OR(vt0.c0))  WHEN (((t0.c1, rt0.c2, t0.c0, t0.c0, rt0.c1))>((0.4667695566162897, vt0.c1, rt0.c2, vt0.c0, rt0.c0))) THEN ((((((((rt0.c0)OR(t0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) WHEN CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN 0.9421777633260275 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN (('-524905359')<>(x'')) WHEN vt0.c0 THEN ABS(rt0.c2) ELSE t0.c2 COLLATE BINARY END ORDER BY 0.1809499577848278 ASC  NULLS FIRST, NULL, CASE CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c0 END  WHEN NULL THEN vt0.c1 WHEN (t0.c1 IN (vt0.c1, 0.6769959528861781)) THEN (vt0.c1 IN ()) WHEN ((t0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) THEN ((t0.c2)>>(t0.c2)) WHEN (((NULL)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN 1959137588 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) THEN '<c2#3' END);
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t0 ON CASE ((((vt0.c1)OR(rt0.c2)))OR(vt0.c0))  WHEN (((t0.c1, rt0.c2, t0.c0, t0.c0, rt0.c1))>((0.4667695566162897, vt0.c1, rt0.c2, vt0.c0, rt0.c0))) THEN ((((((((rt0.c0)OR(t0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) WHEN CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN 0.9421777633260275 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN (('-524905359')<>(x'')) WHEN vt0.c0 THEN ABS(rt0.c2) ELSE t0.c2 COLLATE BINARY END WHERE ((((- (rt0.c1))) ISNULL)) ORDER BY 0.1809499577848278 ASC  NULLS FIRST, NULL, CASE CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c0 END  WHEN NULL THEN vt0.c1 WHEN (t0.c1 IN (vt0.c1, 0.6769959528861781)) THEN (vt0.c1 IN ()) WHEN ((t0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) THEN ((t0.c2)>>(t0.c2)) WHEN (((NULL)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN 1959137588 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) THEN '<c2#3' END;
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)=(((rt0.c2)>(rt0.c0))))) ORDER BY rt0.c1 COLLATE NOCASE ASC, ((rt0.c0)OR(((rt0.c1)&(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)==(((rt0.c2)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 COLLATE NOCASE ASC, ((rt0.c0)OR(((rt0.c1)&(rt0.c0)))));
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)=(((rt0.c2)>(rt0.c0))))) ORDER BY rt0.c1 COLLATE NOCASE ASC, ((rt0.c0)OR(((rt0.c1)&(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)==(((rt0.c2)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 COLLATE NOCASE ASC, ((rt0.c0)OR(((rt0.c1)&(rt0.c0)))));
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)=(((rt0.c2)>(rt0.c0))))) ORDER BY rt0.c1 COLLATE NOCASE ASC, ((rt0.c0)OR(((rt0.c1)&(rt0.c0))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM)<=((NOT ('1296420492')))) LEFT OUTER JOIN rt0 ON ((TYPEOF(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CAST(vt0.c0 AS BLOB))) WHERE ((((('-1132185981')AND(CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c1 THEN t0.c2 ELSE '-601542258' END)))AND((((0.6145890640714397)) NOT BETWEEN ((rt0.c2)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((('-1132185981')AND(CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c1 THEN t0.c2 ELSE '-601542258' END)))AND((((0.6145890640714397)) NOT BETWEEN ((rt0.c2)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM)<=((NOT ('1296420492')))) LEFT OUTER JOIN rt0 ON ((TYPEOF(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CAST(vt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM)<=((NOT ('1296420492')))) LEFT OUTER JOIN rt0 ON ((TYPEOF(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CAST(vt0.c0 AS BLOB))) WHERE ((((('-1132185981')AND(CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c1 THEN t0.c2 ELSE '-601542258' END)))AND((((0.6145890640714397)) NOT BETWEEN ((rt0.c2)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((('-1132185981')AND(CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c1 THEN t0.c2 ELSE '-601542258' END)))AND((((0.6145890640714397)) NOT BETWEEN ((rt0.c2)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM)<=((NOT ('1296420492')))) LEFT OUTER JOIN rt0 ON ((TYPEOF(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (~ (LIKELY(DISTINCT t0.c1))) RIGHT OUTER JOIN rt0 ON ((('4y', vt0.c0, 1.296420492E9)) NOT BETWEEN ((0.7105072720565245, ((0.41667666867531794) NOTNULL), t0.c2)) AND ((x'7c38', (rt0.c1 IN ()), ((t0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) WHERE (CASE WHEN ((t0.c0) IS TRUE) THEN (rt0.c2 IN ()) WHEN ((rt0.c0) NOTNULL) THEN (vt0.c0 IN ()) WHEN (t0.c2 IN (rt0.c0)) THEN LOWER(rt0.c0) ELSE ((rt0.c2) NOT BETWEEN (0.8534751291897285) AND (rt0.c2)) END) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)))OR(((((((((vt0.c1)OR(t0.c1)))OR(vt0.c0)))AND(t0.c1)))AND(vt0.c1)))))OR(CAST(vt0.c0 AS INTEGER))) ASC, ((rt0.c2) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) IS TRUE) THEN (rt0.c2 IN ()) WHEN ((rt0.c0) NOTNULL) THEN (vt0.c0 IN ()) WHEN (t0.c2 IN (rt0.c0)) THEN LOWER(rt0.c0) ELSE ((rt0.c2) NOT BETWEEN (0.8534751291897285) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (~ (LIKELY(DISTINCT t0.c1))) RIGHT OUTER JOIN rt0 ON ((('4y', vt0.c0, 1.296420492E9)) NOT BETWEEN ((0.7105072720565245, ((0.41667666867531794) NOTNULL), t0.c2)) AND ((x'7c38', (rt0.c1 IN ()), ((t0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)))OR(((((((((vt0.c1)OR(t0.c1)))OR(vt0.c0)))AND(t0.c1)))AND(vt0.c1)))))OR(CAST(vt0.c0 AS INTEGER))) ASC, ((rt0.c2) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (~ (LIKELY(DISTINCT t0.c1))) RIGHT OUTER JOIN rt0 ON ((('4y', vt0.c0, 1.296420492E9)) NOT BETWEEN ((0.7105072720565245, ((0.41667666867531794) NOTNULL), t0.c2)) AND ((x'7c38', (rt0.c1 IN ()), ((t0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) WHERE (CASE WHEN ((t0.c0) IS TRUE) THEN (rt0.c2 IN ()) WHEN ((rt0.c0) NOTNULL) THEN (vt0.c0 IN ()) WHEN (t0.c2 IN (rt0.c0)) THEN LOWER(rt0.c0) ELSE ((rt0.c2) NOT BETWEEN (0.8534751291897285) AND (rt0.c2)) END) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)))OR(((((((((vt0.c1)OR(t0.c1)))OR(vt0.c0)))AND(t0.c1)))AND(vt0.c1)))))OR(CAST(vt0.c0 AS INTEGER))) ASC, ((rt0.c2) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) IS TRUE) THEN (rt0.c2 IN ()) WHEN ((rt0.c0) NOTNULL) THEN (vt0.c0 IN ()) WHEN (t0.c2 IN (rt0.c0)) THEN LOWER(rt0.c0) ELSE ((rt0.c2) NOT BETWEEN (0.8534751291897285) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (~ (LIKELY(DISTINCT t0.c1))) RIGHT OUTER JOIN rt0 ON ((('4y', vt0.c0, 1.296420492E9)) NOT BETWEEN ((0.7105072720565245, ((0.41667666867531794) NOTNULL), t0.c2)) AND ((x'7c38', (rt0.c1 IN ()), ((t0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)))OR(((((((((vt0.c1)OR(t0.c1)))OR(vt0.c0)))AND(t0.c1)))AND(vt0.c1)))))OR(CAST(vt0.c0 AS INTEGER))) ASC, ((rt0.c2) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (~ (LIKELY(DISTINCT t0.c1))) RIGHT OUTER JOIN rt0 ON ((('4y', vt0.c0, 1.296420492E9)) NOT BETWEEN ((0.7105072720565245, ((0.41667666867531794) NOTNULL), t0.c2)) AND ((x'7c38', (rt0.c1 IN ()), ((t0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) WHERE (CASE WHEN ((t0.c0) IS TRUE) THEN (rt0.c2 IN ()) WHEN ((rt0.c0) NOTNULL) THEN (vt0.c0 IN ()) WHEN (t0.c2 IN (rt0.c0)) THEN LOWER(rt0.c0) ELSE ((rt0.c2) NOT BETWEEN (0.8534751291897285) AND (rt0.c2)) END) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)))OR(((((((((vt0.c1)OR(t0.c1)))OR(vt0.c0)))AND(t0.c1)))AND(vt0.c1)))))OR(CAST(vt0.c0 AS INTEGER))) ASC, ((rt0.c2) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (vt0.c1) ORDER BY ((('-2135262516'))<=(((((-1071340325, vt0.c1, t0.c0, t0.c0, vt0.c1))=((vt0.c1, t0.c2, t0.c1, '}V', vt0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY ((('-2135262516'))<=(((((-1071340325, vt0.c1, t0.c0, t0.c0, vt0.c1))=((vt0.c1, t0.c2, t0.c1, '}V', vt0.c0))))))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c1) ORDER BY ((('-2135262516'))<=(((((-1071340325, vt0.c1, t0.c0, t0.c0, vt0.c1))=((vt0.c1, t0.c2, t0.c1, '}V', vt0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY ((('-2135262516'))<=(((((-1071340325, vt0.c1, t0.c0, t0.c0, vt0.c1))=((vt0.c1, t0.c2, t0.c1, '}V', vt0.c0))))))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c1) ORDER BY ((('-2135262516'))<=(((((-1071340325, vt0.c1, t0.c0, t0.c0, vt0.c1))=((vt0.c1, t0.c2, t0.c1, '}V', vt0.c0))))))  NULLS LAST;
SELECT ALL * FROM vt0, t0, rt0 WHERE (((vt0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((vt0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((vt0.c0) IS TRUE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON NULLIF(((t0.c0)IS('-1876390517')), '2099627198' COLLATE NOCASE) WHERE ((- (vt0.c1 COLLATE RTRIM))) ORDER BY (((t0.c2 IN (t0.c2)))GLOB(NULLIF(DISTINCT NULL, vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON NULLIF(((t0.c0)IS('-1876390517')), '2099627198' COLLATE NOCASE) ORDER BY (((t0.c2 IN (t0.c2)))GLOB(NULLIF(DISTINCT NULL, vt0.c1)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON NULLIF(((t0.c0)IS('-1876390517')), '2099627198' COLLATE NOCASE) WHERE ((- (vt0.c1 COLLATE RTRIM))) ORDER BY (((t0.c2 IN (t0.c2)))GLOB(NULLIF(DISTINCT NULL, vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON NULLIF(((t0.c0)IS('-1876390517')), '2099627198' COLLATE NOCASE) ORDER BY (((t0.c2 IN (t0.c2)))GLOB(NULLIF(DISTINCT NULL, vt0.c1)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON NULLIF(((t0.c0)IS('-1876390517')), '2099627198' COLLATE NOCASE) WHERE ((- (vt0.c1 COLLATE RTRIM))) ORDER BY (((t0.c2 IN (t0.c2)))GLOB(NULLIF(DISTINCT NULL, vt0.c1)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((((((t0.c0)OR('Cr')))OR(((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))))AND(t0.c0)))AND('')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c0)OR('Cr')))OR(((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))))AND(t0.c0)))AND('')) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((((((t0.c0)OR('Cr')))OR(((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))))AND(t0.c0)))AND('')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c0)OR('Cr')))OR(((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))))AND(t0.c0)))AND('')) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((((((t0.c0)OR('Cr')))OR(((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))))AND(t0.c0)))AND('')) ASC  NULLS LAST;
SELECT * FROM vt0, t0, rt0 WHERE ((+ (((((rt0.c2)AND(t0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c2)AND(t0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((+ (((((rt0.c2)AND(t0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c2)AND(t0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((+ (((((rt0.c2)AND(t0.c2)))AND(rt0.c1)))));
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((+ (rt0.c0)))OR(((((((((t0.c0)OR(t0.c2)))AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c2)))))AND(((rt0.c0)IS NOT(t0.c0))))) ORDER BY (((((t0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))))>=((((rt0.c1)==(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c0)))OR(((((((((t0.c0)OR(t0.c2)))AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c2)))))AND(((rt0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((((t0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))))>=((((rt0.c1)=(vt0.c1))))));
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((+ (rt0.c0)))OR(((((((((t0.c0)OR(t0.c2)))AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c2)))))AND(((rt0.c0)IS NOT(t0.c0))))) ORDER BY (((((t0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))))>=((((rt0.c1)==(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c0)))OR(((((((((t0.c0)OR(t0.c2)))AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c2)))))AND(((rt0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((((t0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))))>=((((rt0.c1)=(vt0.c1))))));
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((+ (rt0.c0)))OR(((((((((t0.c0)OR(t0.c2)))AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c2)))))AND(((rt0.c0)IS NOT(t0.c0))))) ORDER BY (((((t0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))))>=((((rt0.c1)==(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((((((((('0.7105072720565245') IS TRUE))OR((((NULL))<=((x''))))))OR(((rt0.c0)<>(t0.c0)))))AND((+ (t0.c1)))))AND((((t0.c1, rt0.c0, rt0.c1)) BETWEEN ((t0.c1, t0.c1, rt0.c2)) AND ((rt0.c2, NULL, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('0.7105072720565245') IS TRUE))OR((((NULL))<=((x''))))))OR(((rt0.c0)!=(t0.c0)))))AND((+ (t0.c1)))))AND((((t0.c1, rt0.c0, rt0.c1)) BETWEEN ((t0.c1, t0.c1, rt0.c2)) AND ((rt0.c2, NULL, t0.c0)))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((((((((('0.7105072720565245') IS TRUE))OR((((NULL))<=((x''))))))OR(((rt0.c0)<>(t0.c0)))))AND((+ (t0.c1)))))AND((((t0.c1, rt0.c0, rt0.c1)) BETWEEN ((t0.c1, t0.c1, rt0.c2)) AND ((rt0.c2, NULL, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('0.7105072720565245') IS TRUE))OR((((NULL))<=((x''))))))OR(((rt0.c0)!=(t0.c0)))))AND((+ (t0.c1)))))AND((((t0.c1, rt0.c0, rt0.c1)) BETWEEN ((t0.c1, t0.c1, rt0.c2)) AND ((rt0.c2, NULL, t0.c0)))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((((((((('0.7105072720565245') IS TRUE))OR((((NULL))<=((x''))))))OR(((rt0.c0)<>(t0.c0)))))AND((+ (t0.c1)))))AND((((t0.c1, rt0.c0, rt0.c1)) BETWEEN ((t0.c1, t0.c1, rt0.c2)) AND ((rt0.c2, NULL, t0.c0))))));
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((((((((rt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND('')))OR(vt0.c1)))|(((rt0.c0)+(vt0.c1))))) ORDER BY (((((rt0.c2))<((t0.c2))))GLOB(((vt0.c1)GLOB(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND('')))OR(vt0.c1)))|(((rt0.c0)+(vt0.c1))))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0 ORDER BY (((((rt0.c2))<((t0.c2))))GLOB(((vt0.c1)GLOB(t0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((((((((rt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND('')))OR(vt0.c1)))|(((rt0.c0)+(vt0.c1))))) ORDER BY (((((rt0.c2))<((t0.c2))))GLOB(((vt0.c1)GLOB(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND('')))OR(vt0.c1)))|(((rt0.c0)+(vt0.c1))))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0 ORDER BY (((((rt0.c2))<((t0.c2))))GLOB(((vt0.c1)GLOB(t0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((((((((rt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND('')))OR(vt0.c1)))|(((rt0.c0)+(vt0.c1))))) ORDER BY (((((rt0.c2))<((t0.c2))))GLOB(((vt0.c1)GLOB(t0.c0))))  NULLS LAST;
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((t0.c2) NOT BETWEEN (t0.c2) AND ('kV0Cd')))<<(((vt0.c0)>>(rt0.c0)))) WHERE (((((CASE x'd4a2'  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((t0.c0 IN ()))))AND(((t0.c1)||(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE x'd4a2'  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((t0.c0 IN ()))))AND(((t0.c1)||(vt0.c1))))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((t0.c2) NOT BETWEEN (t0.c2) AND ('kV0Cd')))<<(((vt0.c0)>>(rt0.c0)))));
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((t0.c2) NOT BETWEEN (t0.c2) AND ('kV0Cd')))<<(((vt0.c0)>>(rt0.c0)))) WHERE (((((CASE x'd4a2'  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((t0.c0 IN ()))))AND(((t0.c1)||(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE x'd4a2'  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((t0.c0 IN ()))))AND(((t0.c1)||(vt0.c1))))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((t0.c2) NOT BETWEEN (t0.c2) AND ('kV0Cd')))<<(((vt0.c0)>>(rt0.c0)))));
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((t0.c2) NOT BETWEEN (t0.c2) AND ('kV0Cd')))<<(((vt0.c0)>>(rt0.c0)))) WHERE (((((CASE x'd4a2'  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((t0.c0 IN ()))))AND(((t0.c1)||(vt0.c1)))));
SELECT * FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) END);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c2)||(0.8853447329126309)) AS INTEGER)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2)||(0.8853447329126309)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY NULL ASC);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c2)||(0.8853447329126309)) AS INTEGER)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2)||(0.8853447329126309)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY NULL ASC);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c2)||(0.8853447329126309)) AS INTEGER)) ORDER BY NULL ASC;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (TRIM(((t0.c0)/(t0.c0)), CASE vt0.c0  WHEN t0.c2 THEN vt0.c1 END)) ORDER BY ((((t0.c2) ISNULL))*((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(((t0.c0)/(t0.c0)), CASE vt0.c0  WHEN t0.c2 THEN vt0.c1 END)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((t0.c2) ISNULL))*((vt0.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (TRIM(((t0.c0)/(t0.c0)), CASE vt0.c0  WHEN t0.c2 THEN vt0.c1 END)) ORDER BY ((((t0.c2) ISNULL))*((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(((t0.c0)/(t0.c0)), CASE vt0.c0  WHEN t0.c2 THEN vt0.c1 END)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((t0.c2) ISNULL))*((vt0.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (TRIM(((t0.c0)/(t0.c0)), CASE vt0.c0  WHEN t0.c2 THEN vt0.c1 END)) ORDER BY ((((t0.c2) ISNULL))*((vt0.c0 IN ())))  NULLS LAST;
SELECT * FROM t0 WHERE ((- (t0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((- (t0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((- (t0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt0, t0 WHERE (UNLIKELY(DISTINCT t0.c0) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT t0.c0) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (UNLIKELY(DISTINCT t0.c0) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT t0.c0) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (UNLIKELY(DISTINCT t0.c0) COLLATE NOCASE COLLATE BINARY);
SELECT * FROM t0, vt0, rt0 WHERE (CAST((rt0.c0 IN (t0.c0, t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN (t0.c0, t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (CAST((rt0.c0 IN (t0.c0, t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN (t0.c0, t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (CAST((rt0.c0 IN (t0.c0, t0.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) NOTNULL) COLLATE RTRIM) ORDER BY CASE (~ (rt0.c0))  WHEN json_quote(rt0.c2) THEN ((rt0.c2) BETWEEN (x'ed8d') AND (rt0.c1)) WHEN rt0.c2 COLLATE RTRIM THEN ((((rt0.c2)OR(NULL)))OR(rt0.c0)) WHEN (+ (rt0.c1)) THEN 0X76341394 WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) THEN rt0.c0 WHEN ((rt0.c1)||(rt0.c0)) THEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE (~ (rt0.c0))  WHEN json_quote(rt0.c2) THEN ((rt0.c2) BETWEEN (x'ed8d') AND (rt0.c1)) WHEN rt0.c2 COLLATE RTRIM THEN ((((rt0.c2)OR(NULL)))OR(rt0.c0)) WHEN (+ (rt0.c1)) THEN 0x76341394 WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) THEN rt0.c0 WHEN ((rt0.c1)||(rt0.c0)) THEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)) END DESC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) NOTNULL) COLLATE RTRIM) ORDER BY CASE (~ (rt0.c0))  WHEN json_quote(rt0.c2) THEN ((rt0.c2) BETWEEN (x'ed8d') AND (rt0.c1)) WHEN rt0.c2 COLLATE RTRIM THEN ((((rt0.c2)OR(NULL)))OR(rt0.c0)) WHEN (+ (rt0.c1)) THEN 0X76341394 WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) THEN rt0.c0 WHEN ((rt0.c1)||(rt0.c0)) THEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE (~ (rt0.c0))  WHEN json_quote(rt0.c2) THEN ((rt0.c2) BETWEEN (x'ed8d') AND (rt0.c1)) WHEN rt0.c2 COLLATE RTRIM THEN ((((rt0.c2)OR(NULL)))OR(rt0.c0)) WHEN (+ (rt0.c1)) THEN 0x76341394 WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) THEN rt0.c0 WHEN ((rt0.c1)||(rt0.c0)) THEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)) END DESC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) NOTNULL) COLLATE RTRIM) ORDER BY CASE (~ (rt0.c0))  WHEN json_quote(rt0.c2) THEN ((rt0.c2) BETWEEN (x'ed8d') AND (rt0.c1)) WHEN rt0.c2 COLLATE RTRIM THEN ((((rt0.c2)OR(NULL)))OR(rt0.c0)) WHEN (+ (rt0.c1)) THEN 0X76341394 WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) THEN rt0.c0 WHEN ((rt0.c1)||(rt0.c0)) THEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)) END DESC;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((((-1071340325) BETWEEN (t0.c2) AND (t0.c0)))) AND ((((((t0.c1)AND(t0.c1)))AND('-570621492')))))) ORDER BY ((((((t0.c1)AND(t0.c2)))OR(t0.c2))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((((-1071340325) BETWEEN (t0.c2) AND (t0.c0)))) AND ((((((t0.c1)AND(t0.c1)))AND('-570621492')))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)AND(t0.c2)))OR(t0.c2))) IS FALSE) DESC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((((-1071340325) BETWEEN (t0.c2) AND (t0.c0)))) AND ((((((t0.c1)AND(t0.c1)))AND('-570621492')))))) ORDER BY ((((((t0.c1)AND(t0.c2)))OR(t0.c2))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((((-1071340325) BETWEEN (t0.c2) AND (t0.c0)))) AND ((((((t0.c1)AND(t0.c1)))AND('-570621492')))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)AND(t0.c2)))OR(t0.c2))) IS FALSE) DESC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((((-1071340325) BETWEEN (t0.c2) AND (t0.c0)))) AND ((((((t0.c1)AND(t0.c1)))AND('-570621492')))))) ORDER BY ((((((t0.c1)AND(t0.c2)))OR(t0.c2))) IS FALSE) DESC;
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE WHEN 0.006266516502495323 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE t0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.006266516502495323 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE t0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE WHEN 0.006266516502495323 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE t0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.006266516502495323 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE t0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE WHEN 0.006266516502495323 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE t0.c1 END COLLATE NOCASE);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((rt0.c1)<=(vt0.c0))) BETWEEN ((((rt0.c0))!=((t0.c0)))) AND (CASE vt0.c1  WHEN t0.c0 THEN t0.c2 END))) ORDER BY ((((((((((((vt0.c1)OR(LIKELY(t0.c0))))AND(vt0.c1)))AND((vt0.c0 IN ()))))OR(t0.c1 COLLATE RTRIM)))OR(((t0.c1)-(rt0.c2)))))OR(((((((((vt0.c1)AND(t0.c0)))AND(NULL)))OR(t0.c2)))OR(t0.c0)))) DESC  NULLS LAST, ((((((((CASE 0.43471901124914614  WHEN vt0.c0 THEN vt0.c1 WHEN 0.16551556352569496 THEN t0.c2 WHEN vt0.c1 THEN rt0.c2 ELSE t0.c0 END)OR(rt0.c0 COLLATE RTRIM)))AND(((('')) BETWEEN ((t0.c1)) AND ((rt0.c2))))))OR(0.8946225857734175)))OR(t0.c1)), CAST(t0.c2 COLLATE NOCASE AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=(vt0.c0))) BETWEEN ((((rt0.c0))!=((t0.c0)))) AND (CASE vt0.c1  WHEN t0.c0 THEN t0.c2 END))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((((((vt0.c1)OR(LIKELY(t0.c0))))AND(vt0.c1)))AND((vt0.c0 IN ()))))OR(t0.c1 COLLATE RTRIM)))OR(((t0.c1)-(rt0.c2)))))OR(((((((((vt0.c1)AND(t0.c0)))AND(NULL)))OR(t0.c2)))OR(t0.c0)))) DESC  NULLS LAST, ((((((((CASE 0.43471901124914614  WHEN vt0.c0 THEN vt0.c1 WHEN 0.16551556352569496 THEN t0.c2 WHEN vt0.c1 THEN rt0.c2 ELSE t0.c0 END)OR(rt0.c0 COLLATE RTRIM)))AND(((('')) BETWEEN ((t0.c1)) AND ((rt0.c2))))))OR(0.8946225857734175)))OR(t0.c1)), CAST(t0.c2 COLLATE NOCASE AS INTEGER) DESC);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((rt0.c1)<=(vt0.c0))) BETWEEN ((((rt0.c0))!=((t0.c0)))) AND (CASE vt0.c1  WHEN t0.c0 THEN t0.c2 END))) ORDER BY ((((((((((((vt0.c1)OR(LIKELY(t0.c0))))AND(vt0.c1)))AND((vt0.c0 IN ()))))OR(t0.c1 COLLATE RTRIM)))OR(((t0.c1)-(rt0.c2)))))OR(((((((((vt0.c1)AND(t0.c0)))AND(NULL)))OR(t0.c2)))OR(t0.c0)))) DESC  NULLS LAST, ((((((((CASE 0.43471901124914614  WHEN vt0.c0 THEN vt0.c1 WHEN 0.16551556352569496 THEN t0.c2 WHEN vt0.c1 THEN rt0.c2 ELSE t0.c0 END)OR(rt0.c0 COLLATE RTRIM)))AND(((('')) BETWEEN ((t0.c1)) AND ((rt0.c2))))))OR(0.8946225857734175)))OR(t0.c1)), CAST(t0.c2 COLLATE NOCASE AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=(vt0.c0))) BETWEEN ((((rt0.c0))!=((t0.c0)))) AND (CASE vt0.c1  WHEN t0.c0 THEN t0.c2 END))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((((((vt0.c1)OR(LIKELY(t0.c0))))AND(vt0.c1)))AND((vt0.c0 IN ()))))OR(t0.c1 COLLATE RTRIM)))OR(((t0.c1)-(rt0.c2)))))OR(((((((((vt0.c1)AND(t0.c0)))AND(NULL)))OR(t0.c2)))OR(t0.c0)))) DESC  NULLS LAST, ((((((((CASE 0.43471901124914614  WHEN vt0.c0 THEN vt0.c1 WHEN 0.16551556352569496 THEN t0.c2 WHEN vt0.c1 THEN rt0.c2 ELSE t0.c0 END)OR(rt0.c0 COLLATE RTRIM)))AND(((('')) BETWEEN ((t0.c1)) AND ((rt0.c2))))))OR(0.8946225857734175)))OR(t0.c1)), CAST(t0.c2 COLLATE NOCASE AS INTEGER) DESC);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((rt0.c1)<=(vt0.c0))) BETWEEN ((((rt0.c0))!=((t0.c0)))) AND (CASE vt0.c1  WHEN t0.c0 THEN t0.c2 END))) ORDER BY ((((((((((((vt0.c1)OR(LIKELY(t0.c0))))AND(vt0.c1)))AND((vt0.c0 IN ()))))OR(t0.c1 COLLATE RTRIM)))OR(((t0.c1)-(rt0.c2)))))OR(((((((((vt0.c1)AND(t0.c0)))AND(NULL)))OR(t0.c2)))OR(t0.c0)))) DESC  NULLS LAST, ((((((((CASE 0.43471901124914614  WHEN vt0.c0 THEN vt0.c1 WHEN 0.16551556352569496 THEN t0.c2 WHEN vt0.c1 THEN rt0.c2 ELSE t0.c0 END)OR(rt0.c0 COLLATE RTRIM)))AND(((('')) BETWEEN ((t0.c1)) AND ((rt0.c2))))))OR(0.8946225857734175)))OR(t0.c1)), CAST(t0.c2 COLLATE NOCASE AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c1))>((vt0.c0, rt0.c2, vt0.c1)))) NOT BETWEEN (CASE WHEN rt0.c2 THEN NULL END) AND (CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c0, rt0.c1))>((vt0.c0, rt0.c2, vt0.c1)))) NOT BETWEEN (CASE WHEN rt0.c2 THEN NULL END) AND (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c1))>((vt0.c0, rt0.c2, vt0.c1)))) NOT BETWEEN (CASE WHEN rt0.c2 THEN NULL END) AND (CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c0, rt0.c1))>((vt0.c0, rt0.c2, vt0.c1)))) NOT BETWEEN (CASE WHEN rt0.c2 THEN NULL END) AND (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c1))>((vt0.c0, rt0.c2, vt0.c1)))) NOT BETWEEN (CASE WHEN rt0.c2 THEN NULL END) AND (CAST(rt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c1) ISNULL))IS NOT((t0.c1 IN ('Pr')))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) ISNULL))IS NOT((t0.c1 IN ('Pr'))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c1) ISNULL))IS NOT((t0.c1 IN ('Pr')))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) ISNULL))IS NOT((t0.c1 IN ('Pr'))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c1) ISNULL))IS NOT((t0.c1 IN ('Pr')))));
SELECT * FROM rt0, vt0, t0 WHERE (((rt0.c0 COLLATE NOCASE)-(t0.c1))) ORDER BY ((- (vt0.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)-(t0.c1))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((- (vt0.c1)) IN ()) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (((rt0.c0 COLLATE NOCASE)-(t0.c1))) ORDER BY ((- (vt0.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)-(t0.c1))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((- (vt0.c1)) IN ()) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (((rt0.c0 COLLATE NOCASE)-(t0.c1))) ORDER BY ((- (vt0.c1)) IN ()) DESC  NULLS LAST;
SELECT * FROM vt0, t0, rt0 WHERE (((t0.c2 COLLATE RTRIM) NOT BETWEEN ('') AND (HEX(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE RTRIM) NOT BETWEEN ('') AND (HEX(rt0.c1)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((t0.c2 COLLATE RTRIM) NOT BETWEEN ('') AND (HEX(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE RTRIM) NOT BETWEEN ('') AND (HEX(rt0.c1)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((t0.c2 COLLATE RTRIM) NOT BETWEEN ('') AND (HEX(rt0.c1))));
SELECT * FROM rt0, vt0 WHERE (TYPEOF(rt0.c2)) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))))AND(rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(rt0.c2)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))))AND(rt0.c2)) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (TYPEOF(rt0.c2)) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))))AND(rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(rt0.c2)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))))AND(rt0.c2)) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (TYPEOF(rt0.c2)) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))))AND(rt0.c2)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (0.7105072720565245) AND ((vt0.c1 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (0.7105072720565245) AND ((vt0.c1 IN (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (0.7105072720565245) AND ((vt0.c1 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (0.7105072720565245) AND ((vt0.c1 IN (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (0.7105072720565245) AND ((vt0.c1 IN (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN 'H' END) ORDER BY ((vt0.c1 COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN 'H' END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN 'H' END) ORDER BY ((vt0.c1 COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN 'H' END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN 'H' END) ORDER BY ((vt0.c1 COLLATE RTRIM) IS TRUE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS REAL) WHERE ((((rt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) IN ((~ (rt0.c1)), ((rt0.c1)<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) IN ((~ (rt0.c1)), ((rt0.c1)<(rt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS REAL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS REAL) WHERE ((((rt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) IN ((~ (rt0.c1)), ((rt0.c1)<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) IN ((~ (rt0.c1)), ((rt0.c1)<(rt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS REAL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS REAL) WHERE ((((rt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) IN ((~ (rt0.c1)), ((rt0.c1)<(rt0.c2)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(NULL AS TEXT)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)LIKE(CASE t0.c1  WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END)), ('436852733' IN (((t0.c1)<(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)LIKE(CASE t0.c1  WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END)), ('436852733' IN (((t0.c1)<(t0.c2)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(NULL AS TEXT)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)LIKE(CASE t0.c1  WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END)), ('436852733' IN (((t0.c1)<(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)LIKE(CASE t0.c1  WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END)), ('436852733' IN (((t0.c1)<(t0.c2)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(NULL AS TEXT)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)LIKE(CASE t0.c1  WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END)), ('436852733' IN (((t0.c1)<(t0.c2)))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((NOT (t0.c1)))OR(((((((((t0.c1)OR(t0.c2)))OR(t0.c2)))OR(t0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c1)))OR(((((((((t0.c1)OR(t0.c2)))OR(t0.c2)))OR(t0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((NOT (t0.c1)))OR(((((((((t0.c1)OR(t0.c2)))OR(t0.c2)))OR(t0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c1)))OR(((((((((t0.c1)OR(t0.c2)))OR(t0.c2)))OR(t0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((NOT (t0.c1)))OR(((((((((t0.c1)OR(t0.c2)))OR(t0.c2)))OR(t0.c1)))OR(vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (227476776) ORDER BY LIKELIHOOD(((rt0.c0)%(rt0.c1)), 0.1352551490945213) DESC;
SELECT SUM(count) FROM (SELECT ((227476776) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(((rt0.c0)%(rt0.c1)), 0.1352551490945213) DESC);
SELECT COUNT(*) FROM rt0 WHERE (227476776) ORDER BY LIKELIHOOD(((rt0.c0)%(rt0.c1)), 0.1352551490945213) DESC;
SELECT SUM(count) FROM (SELECT ((227476776) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(((rt0.c0)%(rt0.c1)), 0.1352551490945213) DESC);
SELECT COUNT(*) FROM rt0 WHERE (227476776) ORDER BY LIKELIHOOD(((rt0.c0)%(rt0.c1)), 0.1352551490945213) DESC;
SELECT * FROM t0, vt0 WHERE (((((t0.c1)OR(vt0.c1)))<>(((0Xffffffffc3b7baae) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)OR(vt0.c1)))<>(((0Xffffffffc3b7baae) ISNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c1)OR(vt0.c1)))<>(((0Xffffffffc3b7baae) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)OR(vt0.c1)))<>(((0Xffffffffc3b7baae) ISNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c1)OR(vt0.c1)))<>(((0Xffffffffc3b7baae) ISNULL))));
SELECT * FROM t0 WHERE ((- (CAST(t0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT (((- (CAST(t0.c2 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((- (CAST(t0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT (((- (CAST(t0.c2 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((- (CAST(t0.c2 AS REAL))));
SELECT * FROM t0 WHERE (((((((((((t0.c0)>=(t0.c2)))OR(CAST(t0.c0 AS NUMERIC))))OR(CAST(NULL AS BLOB))))AND((('843004696')IS(t0.c0)))))OR((((t0.c2))<>((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)>=(t0.c2)))OR(CAST(t0.c0 AS NUMERIC))))OR(CAST(NULL AS BLOB))))AND((('843004696')IS(t0.c0)))))OR((((t0.c2))!=((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((t0.c0)>=(t0.c2)))OR(CAST(t0.c0 AS NUMERIC))))OR(CAST(NULL AS BLOB))))AND((('843004696')IS(t0.c0)))))OR((((t0.c2))<>((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)>=(t0.c2)))OR(CAST(t0.c0 AS NUMERIC))))OR(CAST(NULL AS BLOB))))AND((('843004696')IS(t0.c0)))))OR((((t0.c2))!=((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((t0.c0)>=(t0.c2)))OR(CAST(t0.c0 AS NUMERIC))))OR(CAST(NULL AS BLOB))))AND((('843004696')IS(t0.c0)))))OR((((t0.c2))<>((t0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((NOT (vt0.c0))))==((TIME(vt0.c0, vt0.c0, '0.4667695566162897'))))) ORDER BY (((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c1, x'')))<=((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ASC, (((+ (vt0.c0)))IS NOT((+ (vt0.c0)))) ASC  NULLS FIRST, ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR((vt0.c0 IN ()))))OR(CAST(vt0.c1 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((((((NOT (vt0.c0))))=((TIME(vt0.c0, vt0.c0, '0.4667695566162897'))))) IS TRUE)  as count FROM vt0 ORDER BY (((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c1, x'')))<=((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ASC, (((+ (vt0.c0)))IS NOT((+ (vt0.c0)))) ASC  NULLS FIRST, ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR((vt0.c0 IN ()))))OR(CAST(vt0.c1 AS INTEGER))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((NOT (vt0.c0))))==((TIME(vt0.c0, vt0.c0, '0.4667695566162897'))))) ORDER BY (((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c1, x'')))<=((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ASC, (((+ (vt0.c0)))IS NOT((+ (vt0.c0)))) ASC  NULLS FIRST, ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR((vt0.c0 IN ()))))OR(CAST(vt0.c1 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((((((NOT (vt0.c0))))=((TIME(vt0.c0, vt0.c0, '0.4667695566162897'))))) IS TRUE)  as count FROM vt0 ORDER BY (((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c1, x'')))<=((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ASC, (((+ (vt0.c0)))IS NOT((+ (vt0.c0)))) ASC  NULLS FIRST, ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR((vt0.c0 IN ()))))OR(CAST(vt0.c1 AS INTEGER))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((NOT (vt0.c0))))==((TIME(vt0.c0, vt0.c0, '0.4667695566162897'))))) ORDER BY (((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c1, x'')))<=((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ASC, (((+ (vt0.c0)))IS NOT((+ (vt0.c0)))) ASC  NULLS FIRST, ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR((vt0.c0 IN ()))))OR(CAST(vt0.c1 AS INTEGER))) ASC;
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))OR(((0.4602195886352278) BETWEEN (-2128020209) AND (rt0.c1)))) LEFT OUTER JOIN rt0 ON ((((vt0.c1 IN ()), CASE x''  WHEN rt0.c2 THEN t0.c1 WHEN vt0.c1 THEN rt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END, CASE WHEN t0.c2 THEN t0.c2 WHEN 0.4867282892521816 THEN rt0.c1 WHEN x'' THEN vt0.c0 END, rt0.c2, (- (vt0.c1))))=((((((vt0.c1)AND(t0.c2)))OR(vt0.c0)), CAST(rt0.c2 AS BLOB), CAST(rt0.c2 AS BLOB), (((t0.c2))>=((t0.c0))), DATETIME(vt0.c0, 0.4403525647227078, rt0.c1)))) WHERE (((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))AND(t0.c1)))AND(x'')) COLLATE RTRIM) ORDER BY t0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))AND(t0.c1)))AND(x'')) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))OR(((0.4602195886352278) BETWEEN (-2128020209) AND (rt0.c1)))) LEFT OUTER JOIN rt0 ON ((((vt0.c1 IN ()), CASE x''  WHEN rt0.c2 THEN t0.c1 WHEN vt0.c1 THEN rt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END, CASE WHEN t0.c2 THEN t0.c2 WHEN 0.4867282892521816 THEN rt0.c1 WHEN x'' THEN vt0.c0 END, rt0.c2, (- (vt0.c1))))==((((((vt0.c1)AND(t0.c2)))OR(vt0.c0)), CAST(rt0.c2 AS BLOB), CAST(rt0.c2 AS BLOB), (((t0.c2))>=((t0.c0))), DATETIME(vt0.c0, 0.4403525647227078, rt0.c1)))) ORDER BY t0.c1 ASC);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))OR(((0.4602195886352278) BETWEEN (-2128020209) AND (rt0.c1)))) LEFT OUTER JOIN rt0 ON ((((vt0.c1 IN ()), CASE x''  WHEN rt0.c2 THEN t0.c1 WHEN vt0.c1 THEN rt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END, CASE WHEN t0.c2 THEN t0.c2 WHEN 0.4867282892521816 THEN rt0.c1 WHEN x'' THEN vt0.c0 END, rt0.c2, (- (vt0.c1))))=((((((vt0.c1)AND(t0.c2)))OR(vt0.c0)), CAST(rt0.c2 AS BLOB), CAST(rt0.c2 AS BLOB), (((t0.c2))>=((t0.c0))), DATETIME(vt0.c0, 0.4403525647227078, rt0.c1)))) WHERE (((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))AND(t0.c1)))AND(x'')) COLLATE RTRIM) ORDER BY t0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))AND(t0.c1)))AND(x'')) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))OR(((0.4602195886352278) BETWEEN (-2128020209) AND (rt0.c1)))) LEFT OUTER JOIN rt0 ON ((((vt0.c1 IN ()), CASE x''  WHEN rt0.c2 THEN t0.c1 WHEN vt0.c1 THEN rt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END, CASE WHEN t0.c2 THEN t0.c2 WHEN 0.4867282892521816 THEN rt0.c1 WHEN x'' THEN vt0.c0 END, rt0.c2, (- (vt0.c1))))==((((((vt0.c1)AND(t0.c2)))OR(vt0.c0)), CAST(rt0.c2 AS BLOB), CAST(rt0.c2 AS BLOB), (((t0.c2))>=((t0.c0))), DATETIME(vt0.c0, 0.4403525647227078, rt0.c1)))) ORDER BY t0.c1 ASC);
SELECT ALL * FROM vt0, t0 WHERE (((t0.c1 COLLATE NOCASE) NOT NULL)) ORDER BY ((((vt0.c1) NOTNULL)) NOT BETWEEN ((((t0.c0))<((t0.c0)))) AND (LOWER(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c1) NOTNULL)) NOT BETWEEN ((((t0.c0))<((t0.c0)))) AND (LOWER(t0.c2))));
SELECT ALL * FROM vt0, t0 WHERE (((t0.c1 COLLATE NOCASE) NOT NULL)) ORDER BY ((((vt0.c1) NOTNULL)) NOT BETWEEN ((((t0.c0))<((t0.c0)))) AND (LOWER(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c1) NOTNULL)) NOT BETWEEN ((((t0.c0))<((t0.c0)))) AND (LOWER(t0.c2))));
SELECT ALL * FROM vt0, t0 WHERE (((t0.c1 COLLATE NOCASE) NOT NULL)) ORDER BY ((((vt0.c1) NOTNULL)) NOT BETWEEN ((((t0.c0))<((t0.c0)))) AND (LOWER(t0.c2)));
SELECT COUNT(*) FROM t0, rt0 WHERE ((('3W')IS(t0.c0)));
SELECT SUM(count) FROM (SELECT (((('3W')IS(t0.c0))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((('3W')IS(t0.c0)));
SELECT SUM(count) FROM (SELECT (((('3W')IS(t0.c0))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((('3W')IS(t0.c0)));
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE ((rt0.c0)>(t0.c0))  WHEN NULL THEN '1434913915' END) ORDER BY CASE WHEN ((t0.c2) IS TRUE) THEN rt0.c2 END;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)>(t0.c0))  WHEN NULL THEN '1434913915' END) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN ((t0.c2) IS TRUE) THEN rt0.c2 END);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE ((rt0.c0)>(t0.c0))  WHEN NULL THEN '1434913915' END) ORDER BY CASE WHEN ((t0.c2) IS TRUE) THEN rt0.c2 END;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)>(t0.c0))  WHEN NULL THEN '1434913915' END) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN ((t0.c2) IS TRUE) THEN rt0.c2 END);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE ((rt0.c0)>(t0.c0))  WHEN NULL THEN '1434913915' END) ORDER BY CASE WHEN ((t0.c2) IS TRUE) THEN rt0.c2 END;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((((((((((rt0.c1)OR(t0.c1)))AND(vt0.c1)))AND(t0.c2)))OR(t0.c1)))AND(t0.c1)))OR(rt0.c0)) IN ())) ORDER BY ((((vt0.c1)+(t0.c1)))!=(CASE WHEN vt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt0.c1)OR(t0.c1)))AND(vt0.c1)))AND(t0.c2)))OR(t0.c1)))AND(t0.c1)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((vt0.c1)+(t0.c1)))!=(CASE WHEN vt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((((((((((rt0.c1)OR(t0.c1)))AND(vt0.c1)))AND(t0.c2)))OR(t0.c1)))AND(t0.c1)))OR(rt0.c0)) IN ())) ORDER BY ((((vt0.c1)+(t0.c1)))!=(CASE WHEN vt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt0.c1)OR(t0.c1)))AND(vt0.c1)))AND(t0.c2)))OR(t0.c1)))AND(t0.c1)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((vt0.c1)+(t0.c1)))!=(CASE WHEN vt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((((((((((rt0.c1)OR(t0.c1)))AND(vt0.c1)))AND(t0.c2)))OR(t0.c1)))AND(t0.c1)))OR(rt0.c0)) IN ())) ORDER BY ((((vt0.c1)+(t0.c1)))!=(CASE WHEN vt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 END));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ('-601542258' COLLATE NOCASE) ORDER BY (((((rt0.c0, rt0.c2, rt0.c2))<((rt0.c1, rt0.c1, '624379646'))))||(rt0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-601542258' COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((((rt0.c0, rt0.c2, rt0.c2))<((rt0.c1, rt0.c1, '624379646'))))||(rt0.c2 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ('-601542258' COLLATE NOCASE) ORDER BY (((((rt0.c0, rt0.c2, rt0.c2))<((rt0.c1, rt0.c1, '624379646'))))||(rt0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-601542258' COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((((rt0.c0, rt0.c2, rt0.c2))<((rt0.c1, rt0.c1, '624379646'))))||(rt0.c2 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ('-601542258' COLLATE NOCASE) ORDER BY (((((rt0.c0, rt0.c2, rt0.c2))<((rt0.c1, rt0.c1, '624379646'))))||(rt0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (highlight(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, TYPEOF(0.8416934454942708), HEX(rt0.c2), 0.4602195886352278));
SELECT SUM(count) FROM (SELECT ((highlight(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, TYPEOF(0.8416934454942708), HEX(rt0.c2), 0.4602195886352278)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (highlight(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, TYPEOF(0.8416934454942708), HEX(rt0.c2), 0.4602195886352278));
SELECT SUM(count) FROM (SELECT ((highlight(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, TYPEOF(0.8416934454942708), HEX(rt0.c2), 0.4602195886352278)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2) NOTNULL))IS NOT(SUBSTR(t0.c0, x'')))) ORDER BY ((((NULL)&(rt0.c0)))&((0x6e3da238 IN ('1434913915'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL))IS NOT(SUBSTR(t0.c0, x'')))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((NULL)&(rt0.c0)))&((0x6e3da238 IN ('1434913915'))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2) NOTNULL))IS NOT(SUBSTR(t0.c0, x'')))) ORDER BY ((((NULL)&(rt0.c0)))&((0x6e3da238 IN ('1434913915'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL))IS NOT(SUBSTR(t0.c0, x'')))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((NULL)&(rt0.c0)))&((0x6e3da238 IN ('1434913915'))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2) NOTNULL))IS NOT(SUBSTR(t0.c0, x'')))) ORDER BY ((((NULL)&(rt0.c0)))&((0x6e3da238 IN ('1434913915'))))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((- (vt0.c1)) IN (json_type(0.8698515014373921), ((vt0.c1)LIKE(rt0.c1))))) ORDER BY CASE WHEN (((rt0.c2))<((rt0.c2))) THEN ((vt0.c1) ISNULL) WHEN (+ (vt0.c1)) THEN ((rt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) WHEN ((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)) THEN (rt0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c1)) IN (json_type(0.8698515014373921), ((vt0.c1)LIKE(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (((rt0.c2))<((rt0.c2))) THEN ((vt0.c1) ISNULL) WHEN (+ (vt0.c1)) THEN ((rt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) WHEN ((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)) THEN (rt0.c0 IN ()) END  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((- (vt0.c1)) IN (json_type(0.8698515014373921), ((vt0.c1)LIKE(rt0.c1))))) ORDER BY CASE WHEN (((rt0.c2))<((rt0.c2))) THEN ((vt0.c1) ISNULL) WHEN (+ (vt0.c1)) THEN ((rt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) WHEN ((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)) THEN (rt0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c1)) IN (json_type(0.8698515014373921), ((vt0.c1)LIKE(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (((rt0.c2))<((rt0.c2))) THEN ((vt0.c1) ISNULL) WHEN (+ (vt0.c1)) THEN ((rt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) WHEN ((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)) THEN (rt0.c0 IN ()) END  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((- (vt0.c1)) IN (json_type(0.8698515014373921), ((vt0.c1)LIKE(rt0.c1))))) ORDER BY CASE WHEN (((rt0.c2))<((rt0.c2))) THEN ((vt0.c1) ISNULL) WHEN (+ (vt0.c1)) THEN ((rt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) WHEN ((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)) THEN (rt0.c0 IN ()) END  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (0.9463692329471292 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((0.9463692329471292 COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (0.9463692329471292 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((0.9463692329471292 COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (0.9463692329471292 COLLATE RTRIM);
SELECT * FROM vt0, rt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0))))) ORDER BY (- (((rt0.c2)<(vt0.c0)))) ASC, (((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((((((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c1))))) ASC, (((((((((((rt0.c0))<((rt0.c2))))OR(((vt0.c1)LIKE(vt0.c1)))))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt0.c0)IS NOT(vt0.c0)))))AND(((rt0.c2)LIKE(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (((rt0.c2)<(vt0.c0)))) ASC, (((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((((((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c1))))) ASC, (((((((((((rt0.c0))<((rt0.c2))))OR(((vt0.c1)LIKE(vt0.c1)))))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt0.c0)IS NOT(vt0.c0)))))AND(((rt0.c2)LIKE(rt0.c2)))) DESC);
SELECT * FROM vt0, rt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0))))) ORDER BY (- (((rt0.c2)<(vt0.c0)))) ASC, (((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((((((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c1))))) ASC, (((((((((((rt0.c0))<((rt0.c2))))OR(((vt0.c1)LIKE(vt0.c1)))))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt0.c0)IS NOT(vt0.c0)))))AND(((rt0.c2)LIKE(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (((rt0.c2)<(vt0.c0)))) ASC, (((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((((((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c1))))) ASC, (((((((((((rt0.c0))<((rt0.c2))))OR(((vt0.c1)LIKE(vt0.c1)))))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt0.c0)IS NOT(vt0.c0)))))AND(((rt0.c2)LIKE(rt0.c2)))) DESC);
SELECT * FROM vt0, rt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0))))) ORDER BY (- (((rt0.c2)<(vt0.c0)))) ASC, (((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((((((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c1))))) ASC, (((((((((((rt0.c0))<((rt0.c2))))OR(((vt0.c1)LIKE(vt0.c1)))))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt0.c0)IS NOT(vt0.c0)))))AND(((rt0.c2)LIKE(rt0.c2)))) DESC;
SELECT * FROM t0, rt0, vt0 WHERE ((((t0.c1) BETWEEN ('1175612755') AND (t0.c2)) IN ())) ORDER BY (NOT (t0.c0 COLLATE BINARY)) ASC  NULLS LAST, '1959137588' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1) BETWEEN ('1175612755') AND (t0.c2)) IN ())) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (NOT (t0.c0 COLLATE BINARY)) ASC  NULLS LAST, '1959137588' ASC);
SELECT * FROM t0, rt0, vt0 WHERE ((((t0.c1) BETWEEN ('1175612755') AND (t0.c2)) IN ())) ORDER BY (NOT (t0.c0 COLLATE BINARY)) ASC  NULLS LAST, '1959137588' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1) BETWEEN ('1175612755') AND (t0.c2)) IN ())) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (NOT (t0.c0 COLLATE BINARY)) ASC  NULLS LAST, '1959137588' ASC);
SELECT * FROM t0, rt0, vt0 WHERE ((((t0.c1) BETWEEN ('1175612755') AND (t0.c2)) IN ())) ORDER BY (NOT (t0.c0 COLLATE BINARY)) ASC  NULLS LAST, '1959137588' ASC;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((- (CAST(rt0.c1 AS REAL)))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((- (CAST(rt0.c1 AS REAL)))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((- (CAST(rt0.c1 AS REAL)))) ORDER BY x'' DESC;
SELECT * FROM t0, rt0 WHERE (((((UPPER(rt0.c0))AND(x'')))OR(((t0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(rt0.c0))AND(x'')))OR(((t0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((UPPER(rt0.c0))AND(x'')))OR(((t0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(rt0.c0))AND(x'')))OR(((t0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((UPPER(rt0.c0))AND(x'')))OR(((t0.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(NULL AS INTEGER));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0))) FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM) IS FALSE) WHERE ((((~ (rt0.c1)))*(((rt0.c0) BETWEEN (t0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))*(((rt0.c0) BETWEEN (t0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0))) FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM) IS FALSE));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0))) FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM) IS FALSE) WHERE ((((~ (rt0.c1)))*(((rt0.c0) BETWEEN (t0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))*(((rt0.c0) BETWEEN (t0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0))) FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM) IS FALSE));
SELECT ALL * FROM rt0, vt0 WHERE (LENGTH(((rt0.c0)<=(vt0.c1)))) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END) NOT BETWEEN (((vt0.c1)>(rt0.c0))) AND (((vt0.c0)LIKE(rt0.c2))))  NULLS FIRST, ABS(DISTINCT ((rt0.c2) ISNULL)) ASC  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ((LENGTH(((rt0.c0)<=(vt0.c1)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END) NOT BETWEEN (((vt0.c1)>(rt0.c0))) AND (((vt0.c0)LIKE(rt0.c2))))  NULLS FIRST, ABS(DISTINCT ((rt0.c2) ISNULL)) ASC  NULLS LAST, vt0.c0);
SELECT ALL * FROM rt0, vt0 WHERE (LENGTH(((rt0.c0)<=(vt0.c1)))) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END) NOT BETWEEN (((vt0.c1)>(rt0.c0))) AND (((vt0.c0)LIKE(rt0.c2))))  NULLS FIRST, ABS(DISTINCT ((rt0.c2) ISNULL)) ASC  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ((LENGTH(((rt0.c0)<=(vt0.c1)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END) NOT BETWEEN (((vt0.c1)>(rt0.c0))) AND (((vt0.c0)LIKE(rt0.c2))))  NULLS FIRST, ABS(DISTINCT ((rt0.c2) ISNULL)) ASC  NULLS LAST, vt0.c0);
SELECT ALL * FROM rt0, vt0 WHERE (LENGTH(((rt0.c0)<=(vt0.c1)))) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END) NOT BETWEEN (((vt0.c1)>(rt0.c0))) AND (((vt0.c0)LIKE(rt0.c2))))  NULLS FIRST, ABS(DISTINCT ((rt0.c2) ISNULL)) ASC  NULLS LAST, vt0.c0;
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c0)GLOB(rt0.c0)))AND(x''))) ORDER BY ((((t0.c2)IS NOT(t0.c2))) BETWEEN ((~ (t0.c0))) AND (CAST(t0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)GLOB(rt0.c0)))AND(x''))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c2)IS NOT(t0.c2))) BETWEEN ((~ (t0.c0))) AND (CAST(t0.c0 AS INTEGER))));
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c0)GLOB(rt0.c0)))AND(x''))) ORDER BY ((((t0.c2)IS NOT(t0.c2))) BETWEEN ((~ (t0.c0))) AND (CAST(t0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)GLOB(rt0.c0)))AND(x''))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c2)IS NOT(t0.c2))) BETWEEN ((~ (t0.c0))) AND (CAST(t0.c0 AS INTEGER))));
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c0)GLOB(rt0.c0)))AND(x''))) ORDER BY ((((t0.c2)IS NOT(t0.c2))) BETWEEN ((~ (t0.c0))) AND (CAST(t0.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))<((((rt0.c1)<<(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))<((((rt0.c1)<<(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))<((((rt0.c1)<<(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))<((((rt0.c1)<<(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))<((((rt0.c1)<<(rt0.c0))))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((~ (rt0.c1))))<((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR('2099627198')))AND(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c1))))<((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR('2099627198')))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((~ (rt0.c1))))<((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR('2099627198')))AND(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c1))))<((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR('2099627198')))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((~ (rt0.c1))))<((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR('2099627198')))AND(rt0.c2))))));
SELECT COUNT(*) FROM vt0, t0 WHERE (0.33982255959415375);
SELECT SUM(count) FROM (SELECT ((0.33982255959415375) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (0.33982255959415375);
SELECT SUM(count) FROM (SELECT ((0.33982255959415375) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (0.33982255959415375);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1 COLLATE BINARY, LOWER(DISTINCT ''), rt0.c2))==((x'' COLLATE BINARY, ((rt0.c0)/(rt0.c2)), CAST(rt0.c2 AS INTEGER))))  NULLS LAST, CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN CAST(rt0.c0 AS BLOB) END;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 COLLATE BINARY, LOWER(DISTINCT ''), rt0.c2))=((x'' COLLATE BINARY, ((rt0.c0)/(rt0.c2)), CAST(rt0.c2 AS INTEGER))))  NULLS LAST, CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN CAST(rt0.c0 AS BLOB) END);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1 COLLATE BINARY, LOWER(DISTINCT ''), rt0.c2))==((x'' COLLATE BINARY, ((rt0.c0)/(rt0.c2)), CAST(rt0.c2 AS INTEGER))))  NULLS LAST, CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN CAST(rt0.c0 AS BLOB) END;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 COLLATE BINARY, LOWER(DISTINCT ''), rt0.c2))=((x'' COLLATE BINARY, ((rt0.c0)/(rt0.c2)), CAST(rt0.c2 AS INTEGER))))  NULLS LAST, CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN CAST(rt0.c0 AS BLOB) END);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1 COLLATE BINARY, LOWER(DISTINCT ''), rt0.c2))==((x'' COLLATE BINARY, ((rt0.c0)/(rt0.c2)), CAST(rt0.c2 AS INTEGER))))  NULLS LAST, CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN CAST(rt0.c0 AS BLOB) END;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)>(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)>(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)>(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)>(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)>(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)) ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((t0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN (rt0.c2) AND ((((rt0.c2, vt0.c0, rt0.c2))>((vt0.c1, rt0.c0, rt0.c0)))))) ORDER BY CASE WHEN ((NULL)IS NOT(t0.c1)) THEN (NOT (t0.c1)) ELSE CAST(t0.c0 AS REAL) END  NULLS LAST, rt0.c2, x'ed20' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN (rt0.c2) AND ((((rt0.c2, vt0.c0, rt0.c2))>((vt0.c1, rt0.c0, rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CASE WHEN ((NULL)IS NOT(t0.c1)) THEN (NOT (t0.c1)) ELSE CAST(t0.c0 AS REAL) END  NULLS LAST, rt0.c2, x'ed20' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((t0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN (rt0.c2) AND ((((rt0.c2, vt0.c0, rt0.c2))>((vt0.c1, rt0.c0, rt0.c0)))))) ORDER BY CASE WHEN ((NULL)IS NOT(t0.c1)) THEN (NOT (t0.c1)) ELSE CAST(t0.c0 AS REAL) END  NULLS LAST, rt0.c2, x'ed20' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN (rt0.c2) AND ((((rt0.c2, vt0.c0, rt0.c2))>((vt0.c1, rt0.c0, rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CASE WHEN ((NULL)IS NOT(t0.c1)) THEN (NOT (t0.c1)) ELSE CAST(t0.c0 AS REAL) END  NULLS LAST, rt0.c2, x'ed20' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((t0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN (rt0.c2) AND ((((rt0.c2, vt0.c0, rt0.c2))>((vt0.c1, rt0.c0, rt0.c0)))))) ORDER BY CASE WHEN ((NULL)IS NOT(t0.c1)) THEN (NOT (t0.c1)) ELSE CAST(t0.c0 AS REAL) END  NULLS LAST, rt0.c2, x'ed20' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c0 COLLATE NOCASE))>((t0.c1))) WHERE (((-885113537) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((-885113537) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c0 COLLATE NOCASE))>((t0.c1))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c0 COLLATE NOCASE))>((t0.c1))) WHERE (((-885113537) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((-885113537) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c0 COLLATE NOCASE))>((t0.c1))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c0 COLLATE NOCASE))>((t0.c1))) WHERE (((-885113537) NOT NULL));
SELECT COUNT(*) FROM rt0 WHERE (((x'f98f') BETWEEN ((((('z''Gp	')OR(rt0.c0)))AND(rt0.c1))) AND (rt0.c2))) ORDER BY ((rt0.c0 COLLATE NOCASE)>=(CAST(rt0.c0 AS BLOB))) DESC  NULLS LAST, (((('379250039')OR((+ (rt0.c0)))))OR(rt0.c2)) DESC  NULLS FIRST, (rt0.c1 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'f98f') BETWEEN ((((('z''Gp	')OR(rt0.c0)))AND(rt0.c1))) AND (rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE)>=(CAST(rt0.c0 AS BLOB))) DESC  NULLS LAST, (((('379250039')OR((+ (rt0.c0)))))OR(rt0.c2)) DESC  NULLS FIRST, (rt0.c1 IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((x'f98f') BETWEEN ((((('z''Gp	')OR(rt0.c0)))AND(rt0.c1))) AND (rt0.c2))) ORDER BY ((rt0.c0 COLLATE NOCASE)>=(CAST(rt0.c0 AS BLOB))) DESC  NULLS LAST, (((('379250039')OR((+ (rt0.c0)))))OR(rt0.c2)) DESC  NULLS FIRST, (rt0.c1 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'f98f') BETWEEN ((((('z''Gp	')OR(rt0.c0)))AND(rt0.c1))) AND (rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE)>=(CAST(rt0.c0 AS BLOB))) DESC  NULLS LAST, (((('379250039')OR((+ (rt0.c0)))))OR(rt0.c2)) DESC  NULLS FIRST, (rt0.c1 IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((x'f98f') BETWEEN ((((('z''Gp	')OR(rt0.c0)))AND(rt0.c1))) AND (rt0.c2))) ORDER BY ((rt0.c0 COLLATE NOCASE)>=(CAST(rt0.c0 AS BLOB))) DESC  NULLS LAST, (((('379250039')OR((+ (rt0.c0)))))OR(rt0.c2)) DESC  NULLS FIRST, (rt0.c1 IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON ABS(DISTINCT (((rt0.c1))==((rt0.c0)))) WHERE (CASE ((t0.c2) NOTNULL)  WHEN (+ (vt0.c1)) THEN ((t0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE 'Bl' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c2) NOTNULL)  WHEN (+ (vt0.c1)) THEN ((t0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE 'Bl' END) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON ABS(DISTINCT (((rt0.c1))==((rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON ABS(DISTINCT (((rt0.c1))==((rt0.c0)))) WHERE (CASE ((t0.c2) NOTNULL)  WHEN (+ (vt0.c1)) THEN ((t0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE 'Bl' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c2) NOTNULL)  WHEN (+ (vt0.c1)) THEN ((t0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE 'Bl' END) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON ABS(DISTINCT (((rt0.c1))==((rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON ABS(DISTINCT (((rt0.c1))==((rt0.c0)))) WHERE (CASE ((t0.c2) NOTNULL)  WHEN (+ (vt0.c1)) THEN ((t0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE 'Bl' END);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)) COLLATE NOCASE) ORDER BY CAST((vt0.c1 IN ()) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CAST((vt0.c1 IN ()) AS REAL) ASC);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)) COLLATE NOCASE) ORDER BY CAST((vt0.c1 IN ()) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CAST((vt0.c1 IN ()) AS REAL) ASC);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)) COLLATE NOCASE) ORDER BY CAST((vt0.c1 IN ()) AS REAL) ASC;
SELECT * FROM t0, rt0, vt0 WHERE (rt0.c2 COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (rt0.c2 COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (rt0.c2 COLLATE RTRIM COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)OR((('957215885') NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR((('957215885') NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)OR((('957215885') NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR((('957215885') NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)OR((('957215885') NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR((vt0.c1 IN ()))));
SELECT * FROM t0 WHERE (((((t0.c2)AND(((t0.c1) NOT NULL))))AND(load_extension(t0.c0, t0.c1)))) ORDER BY ((CAST(t0.c1 AS BLOB))<>(((t0.c0)>(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)AND(((t0.c1) NOT NULL))))AND(load_extension(t0.c0, t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c1 AS BLOB))!=(((t0.c0)>(t0.c0))))  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c2)AND(((t0.c1) NOT NULL))))AND(load_extension(t0.c0, t0.c1)))) ORDER BY ((CAST(t0.c1 AS BLOB))<>(((t0.c0)>(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)AND(((t0.c1) NOT NULL))))AND(load_extension(t0.c0, t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c1 AS BLOB))!=(((t0.c0)>(t0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (CAST(((t0.c2)GLOB(vt0.c1)) AS REAL)) ORDER BY ((CAST(t0.c1 AS BLOB))LIKE((+ (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2)GLOB(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c1 AS BLOB))LIKE((+ (vt0.c1)))) ASC);
SELECT ALL * FROM vt0, t0 WHERE (CAST(((t0.c2)GLOB(vt0.c1)) AS REAL)) ORDER BY ((CAST(t0.c1 AS BLOB))LIKE((+ (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2)GLOB(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c1 AS BLOB))LIKE((+ (vt0.c1)))) ASC);
SELECT ALL * FROM vt0, t0 WHERE (CAST(((t0.c2)GLOB(vt0.c1)) AS REAL)) ORDER BY ((CAST(t0.c1 AS BLOB))LIKE((+ (vt0.c1)))) ASC;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((((rt0.c1)==(t0.c0)))OR((t0.c2 IN ()))))AND(UPPER(DISTINCT rt0.c2)))) ORDER BY (NOT (((((t0.c2)OR(rt0.c1)))OR(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)==(t0.c0)))OR((t0.c2 IN ()))))AND(UPPER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (NOT (((((t0.c2)OR(rt0.c1)))OR(rt0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((((rt0.c1)==(t0.c0)))OR((t0.c2 IN ()))))AND(UPPER(DISTINCT rt0.c2)))) ORDER BY (NOT (((((t0.c2)OR(rt0.c1)))OR(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)==(t0.c0)))OR((t0.c2 IN ()))))AND(UPPER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (NOT (((((t0.c2)OR(rt0.c1)))OR(rt0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((((rt0.c1)==(t0.c0)))OR((t0.c2 IN ()))))AND(UPPER(DISTINCT rt0.c2)))) ORDER BY (NOT (((((t0.c2)OR(rt0.c1)))OR(rt0.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0 IN ()))AND(((rt0.c0)/(rt0.c2)))))OR(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))AND(((rt0.c0)/(rt0.c2)))))OR(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0 IN ()))AND(((rt0.c0)/(rt0.c2)))))OR(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))AND(((rt0.c0)/(rt0.c2)))))OR(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0 IN ()))AND(((rt0.c0)/(rt0.c2)))))OR(((rt0.c0) NOT NULL))));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((((t0.c0)>>(t0.c0)))*(((t0.c2)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>>(t0.c0)))*(((t0.c2)IS(vt0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((((t0.c0)>>(t0.c0)))*(((t0.c2)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>>(t0.c0)))*(((t0.c2)IS(vt0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((((t0.c0)>>(t0.c0)))*(((t0.c2)IS(vt0.c1)))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (t0.c1) ORDER BY (((vt0.c1 IN (rt0.c2)))OR(CAST(vt0.c1 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((vt0.c1 IN (rt0.c2)))OR(CAST(vt0.c1 AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (t0.c1) ORDER BY (((vt0.c1 IN (rt0.c2)))OR(CAST(vt0.c1 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((vt0.c1 IN (rt0.c2)))OR(CAST(vt0.c1 AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (t0.c1) ORDER BY (((vt0.c1 IN (rt0.c2)))OR(CAST(vt0.c1 AS NUMERIC))) DESC;
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ()));
SELECT * FROM t0, vt0, rt0 WHERE (CAST(((((((((rt0.c2)OR(t0.c1)))OR(vt0.c0)))AND(rt0.c2)))AND(t0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c2)OR(t0.c1)))OR(vt0.c0)))AND(rt0.c2)))AND(t0.c2)) AS REAL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (CAST(((((((((rt0.c2)OR(t0.c1)))OR(vt0.c0)))AND(rt0.c2)))AND(t0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c2)OR(t0.c1)))OR(vt0.c0)))AND(rt0.c2)))AND(t0.c2)) AS REAL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (CAST(((((((((rt0.c2)OR(t0.c1)))OR(vt0.c0)))AND(rt0.c2)))AND(t0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((NOT (CASE t0.c0  WHEN t0.c1 THEN vt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c0  WHEN t0.c1 THEN vt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((NOT (CASE t0.c0  WHEN t0.c1 THEN vt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c0  WHEN t0.c1 THEN vt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((NOT (CASE t0.c0  WHEN t0.c1 THEN vt0.c1 ELSE rt0.c0 END)));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c1))<>((t0.c0)))))>=(((((t0.c2))<=((t0.c0))))))) ORDER BY ((((((t0.c2) BETWEEN (NULL) AND (0.6255878806556457)))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)))))OR((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))), NULLIF(DISTINCT ((t0.c0) IS TRUE), CAST(t0.c1 AS BLOB))  NULLS FIRST, ((t0.c1 COLLATE NOCASE)<<(0.80647738251987))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1))!=((t0.c0)))))>=(((((t0.c2))<=((t0.c0))))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2) BETWEEN (NULL) AND (0.6255878806556457)))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)))))OR((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))), NULLIF(DISTINCT ((t0.c0) IS TRUE), CAST(t0.c1 AS BLOB))  NULLS FIRST, ((t0.c1 COLLATE NOCASE)<<(0.80647738251987))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c1))<>((t0.c0)))))>=(((((t0.c2))<=((t0.c0))))))) ORDER BY ((((((t0.c2) BETWEEN (NULL) AND (0.6255878806556457)))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)))))OR((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))), NULLIF(DISTINCT ((t0.c0) IS TRUE), CAST(t0.c1 AS BLOB))  NULLS FIRST, ((t0.c1 COLLATE NOCASE)<<(0.80647738251987))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1))!=((t0.c0)))))>=(((((t0.c2))<=((t0.c0))))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2) BETWEEN (NULL) AND (0.6255878806556457)))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)))))OR((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))), NULLIF(DISTINCT ((t0.c0) IS TRUE), CAST(t0.c1 AS BLOB))  NULLS FIRST, ((t0.c1 COLLATE NOCASE)<<(0.80647738251987))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c1))<>((t0.c0)))))>=(((((t0.c2))<=((t0.c0))))))) ORDER BY ((((((t0.c2) BETWEEN (NULL) AND (0.6255878806556457)))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)))))OR((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))), NULLIF(DISTINCT ((t0.c0) IS TRUE), CAST(t0.c1 AS BLOB))  NULLS FIRST, ((t0.c1 COLLATE NOCASE)<<(0.80647738251987))  NULLS LAST;
SELECT * FROM t0, rt0 WHERE ((((t0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((t0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((t0.c0 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2 IN ())))<>((rt0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 IN ())))!=((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2 IN ())))<>((rt0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 IN ())))!=((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2 IN ())))<>((rt0.c2 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((t0.c2)<(t0.c1)))>=(((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((((t0.c0)OR(vt0.c0)))AND(t0.c0))) AND ((('*V')<=(rt0.c0)))) DESC  NULLS FIRST, ((((t0.c1 COLLATE BINARY)OR(CAST(rt0.c0 AS TEXT))))OR(((rt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))), ((((((((((vt0.c1)/(t0.c0)))AND(((t0.c2)IS('%h')))))OR((((t0.c1))>((vt0.c0))))))OR(t0.c0)))OR(((rt0.c1)-(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)<(t0.c1)))>=(((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((((t0.c0)OR(vt0.c0)))AND(t0.c0))) AND ((('*V')<=(rt0.c0)))) DESC  NULLS FIRST, ((((t0.c1 COLLATE BINARY)OR(CAST(rt0.c0 AS TEXT))))OR(((rt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))), ((((((((((vt0.c1)/(t0.c0)))AND(((t0.c2)IS('%h')))))OR((((t0.c1))>((vt0.c0))))))OR(t0.c0)))OR(((rt0.c1)-(NULL)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((t0.c2)<(t0.c1)))>=(((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((((t0.c0)OR(vt0.c0)))AND(t0.c0))) AND ((('*V')<=(rt0.c0)))) DESC  NULLS FIRST, ((((t0.c1 COLLATE BINARY)OR(CAST(rt0.c0 AS TEXT))))OR(((rt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))), ((((((((((vt0.c1)/(t0.c0)))AND(((t0.c2)IS('%h')))))OR((((t0.c1))>((vt0.c0))))))OR(t0.c0)))OR(((rt0.c1)-(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)<(t0.c1)))>=(((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((((t0.c0)OR(vt0.c0)))AND(t0.c0))) AND ((('*V')<=(rt0.c0)))) DESC  NULLS FIRST, ((((t0.c1 COLLATE BINARY)OR(CAST(rt0.c0 AS TEXT))))OR(((rt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))), ((((((((((vt0.c1)/(t0.c0)))AND(((t0.c2)IS('%h')))))OR((((t0.c1))>((vt0.c0))))))OR(t0.c0)))OR(((rt0.c1)-(NULL)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((t0.c2)<(t0.c1)))>=(((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((((t0.c0)OR(vt0.c0)))AND(t0.c0))) AND ((('*V')<=(rt0.c0)))) DESC  NULLS FIRST, ((((t0.c1 COLLATE BINARY)OR(CAST(rt0.c0 AS TEXT))))OR(((rt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))), ((((((((((vt0.c1)/(t0.c0)))AND(((t0.c2)IS('%h')))))OR((((t0.c1))>((vt0.c0))))))OR(t0.c0)))OR(((rt0.c1)-(NULL)))) DESC;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((rt0.c1)) BETWEEN ((t0.c0 COLLATE BINARY)) AND (((((vt0.c1))==((rt0.c0))))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((('2068732081')<=(t0.c0)))) AND ((((rt0.c1)%(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((t0.c0 COLLATE BINARY)) AND (((((vt0.c1))==((rt0.c0))))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((('2068732081')<=(t0.c0)))) AND ((((rt0.c1)%(t0.c2))))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((rt0.c1)) BETWEEN ((t0.c0 COLLATE BINARY)) AND (((((vt0.c1))==((rt0.c0))))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((('2068732081')<=(t0.c0)))) AND ((((rt0.c1)%(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((t0.c0 COLLATE BINARY)) AND (((((vt0.c1))==((rt0.c0))))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((('2068732081')<=(t0.c0)))) AND ((((rt0.c1)%(t0.c2))))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((rt0.c1)) BETWEEN ((t0.c0 COLLATE BINARY)) AND (((((vt0.c1))==((rt0.c0))))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((('2068732081')<=(t0.c0)))) AND ((((rt0.c1)%(t0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((((('jm')AND(((vt0.c1)&(x'')))))AND(((vt0.c1) IS FALSE))))AND(CAST(vt0.c1 AS INTEGER))))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((((('jm')AND(((vt0.c1)&(x'')))))AND(((vt0.c1) IS FALSE))))AND(CAST(vt0.c1 AS INTEGER))))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((('jm')AND(((vt0.c1)&(x'')))))AND(((vt0.c1) IS FALSE))))AND(CAST(vt0.c1 AS INTEGER))))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((((('jm')AND(((vt0.c1)&(x'')))))AND(((vt0.c1) IS FALSE))))AND(CAST(vt0.c1 AS INTEGER))))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((('jm')AND(((vt0.c1)&(x'')))))AND(((vt0.c1) IS FALSE))))AND(CAST(vt0.c1 AS INTEGER))))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1))))));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 END)<<(((rt0.c2)OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 END)<<(((rt0.c2)OR(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 END)<<(((rt0.c2)OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 END)<<(((rt0.c2)OR(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 END)<<(((rt0.c2)OR(vt0.c0))))  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (json_array_length(CASE WHEN t0.c1 THEN vt0.c0 ELSE vt0.c1 END)) ORDER BY (- (((vt0.c1)&(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CASE WHEN t0.c1 THEN vt0.c0 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((vt0.c1)&(vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (json_array_length(CASE WHEN t0.c1 THEN vt0.c0 ELSE vt0.c1 END)) ORDER BY (- (((vt0.c1)&(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CASE WHEN t0.c1 THEN vt0.c0 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((vt0.c1)&(vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (json_array_length(CASE WHEN t0.c1 THEN vt0.c0 ELSE vt0.c1 END)) ORDER BY (- (((vt0.c1)&(vt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((~ (x'')))AND(vt0.c0 COLLATE BINARY)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) WHERE (((((67256574)IS(t0.c2))) BETWEEN (NULL) AND (LIKELIHOOD(vt0.c0, 0.04121842612360438)))) ORDER BY CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((67256574)IS(t0.c2))) BETWEEN (NULL) AND (LIKELIHOOD(vt0.c0, 0.04121842612360438)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((~ (x'')))AND(vt0.c0 COLLATE BINARY)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) ORDER BY CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((~ (x'')))AND(vt0.c0 COLLATE BINARY)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) WHERE (((((67256574)IS(t0.c2))) BETWEEN (NULL) AND (LIKELIHOOD(vt0.c0, 0.04121842612360438)))) ORDER BY CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((67256574)IS(t0.c2))) BETWEEN (NULL) AND (LIKELIHOOD(vt0.c0, 0.04121842612360438)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((~ (x'')))AND(vt0.c0 COLLATE BINARY)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) ORDER BY CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((~ (x'')))AND(vt0.c0 COLLATE BINARY)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) WHERE (((((67256574)IS(t0.c2))) BETWEEN (NULL) AND (LIKELIHOOD(vt0.c0, 0.04121842612360438)))) ORDER BY CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ('1455106355');
SELECT SUM(count) FROM (SELECT (('1455106355') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('1455106355');
SELECT SUM(count) FROM (SELECT (('1455106355') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('1455106355');
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((((rt0.c2)OR(x'')))OR(vt0.c1)))OR(((((rt0.c0)OR(rt0.c1)))AND(vt0.c1)))))OR(CASE WHEN 0.7338342042731604 THEN rt0.c2 END)))OR((rt0.c1 IN ()))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((vt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, x'0c8b', rt0.c0))) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)OR(x'')))OR(vt0.c1)))OR(((((rt0.c0)OR(rt0.c1)))AND(vt0.c1)))))OR(CASE WHEN 0.7338342042731604 THEN rt0.c2 END)))OR((rt0.c1 IN ()))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((vt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, x'0c8b', rt0.c0))) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((((rt0.c2)OR(x'')))OR(vt0.c1)))OR(((((rt0.c0)OR(rt0.c1)))AND(vt0.c1)))))OR(CASE WHEN 0.7338342042731604 THEN rt0.c2 END)))OR((rt0.c1 IN ()))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((vt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, x'0c8b', rt0.c0))) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)OR(x'')))OR(vt0.c1)))OR(((((rt0.c0)OR(rt0.c1)))AND(vt0.c1)))))OR(CASE WHEN 0.7338342042731604 THEN rt0.c2 END)))OR((rt0.c1 IN ()))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((vt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, x'0c8b', rt0.c0))) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((((rt0.c2)OR(x'')))OR(vt0.c1)))OR(((((rt0.c0)OR(rt0.c1)))AND(vt0.c1)))))OR(CASE WHEN 0.7338342042731604 THEN rt0.c2 END)))OR((rt0.c1 IN ()))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((vt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, x'0c8b', rt0.c0))) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))&(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))&(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))&(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))&(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))&(rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE (x'1aec') ORDER BY (((((rt0.c0 IN (NULL, rt0.c0)))AND(((x'786e')IS(rt0.c2)))))OR(((rt0.c1)LIKE(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'1aec') IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0 IN (NULL, rt0.c0)))AND(((x'786e')IS(rt0.c2)))))OR(((rt0.c1)LIKE(rt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'1aec') ORDER BY (((((rt0.c0 IN (NULL, rt0.c0)))AND(((x'786e')IS(rt0.c2)))))OR(((rt0.c1)LIKE(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'1aec') IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0 IN (NULL, rt0.c0)))AND(((x'786e')IS(rt0.c2)))))OR(((rt0.c1)LIKE(rt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'1aec') ORDER BY (((((rt0.c0 IN (NULL, rt0.c0)))AND(((x'786e')IS(rt0.c2)))))OR(((rt0.c1)LIKE(rt0.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 INNER JOIN vt0 ON (~ ('67256574')) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON (~ ('67256574')));
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 INNER JOIN vt0 ON (~ ('67256574')) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON (~ ('67256574')));
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 INNER JOIN vt0 ON (~ ('67256574')) WHERE (t0.c2);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0) BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c0 END) AND (((((vt0.c1)AND(vt0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c0 END) AND (((((vt0.c1)AND(vt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0) BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c0 END) AND (((((vt0.c1)AND(vt0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c0 END) AND (((((vt0.c1)AND(vt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0) BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c0 END) AND (((((vt0.c1)AND(vt0.c0)))AND(t0.c0)))));
SELECT * FROM t0, vt0 WHERE ((((t0.c2 IN ())) NOT NULL)) ORDER BY CASE (((t0.c0, t0.c1, vt0.c0)) BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c0, vt0.c1, t0.c0)))  WHEN (t0.c2 IN ()) THEN t0.c1 WHEN (vt0.c1 IN ()) THEN ((t0.c2)/(t0.c1)) WHEN (- (vt0.c0)) THEN t0.c0 COLLATE RTRIM ELSE t0.c1 COLLATE NOCASE END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE (((t0.c0, t0.c1, vt0.c0)) BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c0, vt0.c1, t0.c0)))  WHEN (t0.c2 IN ()) THEN t0.c1 WHEN (vt0.c1 IN ()) THEN ((t0.c2)/(t0.c1)) WHEN (- (vt0.c0)) THEN t0.c0 COLLATE RTRIM ELSE t0.c1 COLLATE NOCASE END  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((((t0.c2 IN ())) NOT NULL)) ORDER BY CASE (((t0.c0, t0.c1, vt0.c0)) BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c0, vt0.c1, t0.c0)))  WHEN (t0.c2 IN ()) THEN t0.c1 WHEN (vt0.c1 IN ()) THEN ((t0.c2)/(t0.c1)) WHEN (- (vt0.c0)) THEN t0.c0 COLLATE RTRIM ELSE t0.c1 COLLATE NOCASE END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE (((t0.c0, t0.c1, vt0.c0)) BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c0, vt0.c1, t0.c0)))  WHEN (t0.c2 IN ()) THEN t0.c1 WHEN (vt0.c1 IN ()) THEN ((t0.c2)/(t0.c1)) WHEN (- (vt0.c0)) THEN t0.c0 COLLATE RTRIM ELSE t0.c1 COLLATE NOCASE END  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((((t0.c2 IN ())) NOT NULL)) ORDER BY CASE (((t0.c0, t0.c1, vt0.c0)) BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c0, vt0.c1, t0.c0)))  WHEN (t0.c2 IN ()) THEN t0.c1 WHEN (vt0.c1 IN ()) THEN ((t0.c2)/(t0.c1)) WHEN (- (vt0.c0)) THEN t0.c0 COLLATE RTRIM ELSE t0.c1 COLLATE NOCASE END  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, t0 WHERE (CAST(CASE WHEN t0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN t0.c2 THEN '-570621492' END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN t0.c2 THEN '-570621492' END AS BLOB)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CAST(CASE WHEN t0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN t0.c2 THEN '-570621492' END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN t0.c2 THEN '-570621492' END AS BLOB)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CAST(CASE WHEN t0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN t0.c2 THEN '-570621492' END AS BLOB));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((0Xffffffffdf1d4240) BETWEEN ((rt0.c2 IN ())) AND (((t0.c1) IS TRUE)))) ORDER BY ((((vt0.c1) BETWEEN (t0.c0) AND (rt0.c0)))+(((rt0.c0)%(vt0.c1)))) ASC  NULLS LAST, ((((((((t0.c2 COLLATE NOCASE)AND(0.9191299191875043)))AND(NULL)))OR(rt0.c0)))AND(t0.c2 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffdf1d4240) BETWEEN ((rt0.c2 IN ())) AND (((t0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((vt0.c1) BETWEEN (t0.c0) AND (rt0.c0)))+(((rt0.c0)%(vt0.c1)))) ASC  NULLS LAST, ((((((((t0.c2 COLLATE NOCASE)AND(0.9191299191875043)))AND(NULL)))OR(rt0.c0)))AND(t0.c2 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((0Xffffffffdf1d4240) BETWEEN ((rt0.c2 IN ())) AND (((t0.c1) IS TRUE)))) ORDER BY ((((vt0.c1) BETWEEN (t0.c0) AND (rt0.c0)))+(((rt0.c0)%(vt0.c1)))) ASC  NULLS LAST, ((((((((t0.c2 COLLATE NOCASE)AND(0.9191299191875043)))AND(NULL)))OR(rt0.c0)))AND(t0.c2 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffdf1d4240) BETWEEN ((rt0.c2 IN ())) AND (((t0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((vt0.c1) BETWEEN (t0.c0) AND (rt0.c0)))+(((rt0.c0)%(vt0.c1)))) ASC  NULLS LAST, ((((((((t0.c2 COLLATE NOCASE)AND(0.9191299191875043)))AND(NULL)))OR(rt0.c0)))AND(t0.c2 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((0Xffffffffdf1d4240) BETWEEN ((rt0.c2 IN ())) AND (((t0.c1) IS TRUE)))) ORDER BY ((((vt0.c1) BETWEEN (t0.c0) AND (rt0.c0)))+(((rt0.c0)%(vt0.c1)))) ASC  NULLS LAST, ((((((((t0.c2 COLLATE NOCASE)AND(0.9191299191875043)))AND(NULL)))OR(rt0.c0)))AND(t0.c2 COLLATE BINARY)) ASC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON x'' WHERE ('1577197243') ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1577197243') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON x'' ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON x'' WHERE ('1577197243') ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1577197243') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON x'' ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON x'' WHERE ('1577197243') ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN ((NOT (rt0.c2))) AND ((rt0.c1 IN (vt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN ((NOT (rt0.c2))) AND ((rt0.c1 IN (vt0.c0, rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN ((NOT (rt0.c2))) AND ((rt0.c1 IN (vt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN ((NOT (rt0.c2))) AND ((rt0.c1 IN (vt0.c0, rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN ((NOT (rt0.c2))) AND ((rt0.c1 IN (vt0.c0, rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((((((((vt0.c0) NOTNULL))OR(((vt0.c1) IS TRUE))))AND((- (vt0.c1)))))AND(((vt0.c0)%(vt0.c0)))))OR(((vt0.c1)=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0) NOTNULL))OR(((vt0.c1) IS TRUE))))AND((- (vt0.c1)))))AND(((vt0.c0)%(vt0.c0)))))OR(((vt0.c1)=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((((((((vt0.c0) NOTNULL))OR(((vt0.c1) IS TRUE))))AND((- (vt0.c1)))))AND(((vt0.c0)%(vt0.c0)))))OR(((vt0.c1)=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0) NOTNULL))OR(((vt0.c1) IS TRUE))))AND((- (vt0.c1)))))AND(((vt0.c0)%(vt0.c0)))))OR(((vt0.c1)=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((((((((vt0.c0) NOTNULL))OR(((vt0.c1) IS TRUE))))AND((- (vt0.c1)))))AND(((vt0.c0)%(vt0.c0)))))OR(((vt0.c1)=(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0)<<(t0.c0)))*(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(t0.c0)))*(rt0.c0))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0)<<(t0.c0)))*(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(t0.c0)))*(rt0.c0))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0)<<(t0.c0)))*(rt0.c0)));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((CASE vt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)LIKE((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)LIKE((- (rt0.c1))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((CASE vt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)LIKE((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)LIKE((- (rt0.c1))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((CASE vt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)LIKE((- (rt0.c1)))));
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN rt0 ON (((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c1)) IN (CASE t0.c0  WHEN t0.c1 THEN rt0.c0 END)) WHERE ((((((((t0.c2)) BETWEEN ((vt0.c1)) AND ((t0.c1))))OR((('843004696')|(t0.c1)))))AND(((rt0.c2)+(rt0.c0))))) ORDER BY 0X46c731bf;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c2)) BETWEEN ((vt0.c1)) AND ((t0.c1))))OR((('843004696')|(t0.c1)))))AND(((rt0.c2)+(rt0.c0))))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN rt0 ON (((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c1)) IN (CASE t0.c0  WHEN t0.c1 THEN rt0.c0 END)) ORDER BY 0x46c731bf);
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN rt0 ON (((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c1)) IN (CASE t0.c0  WHEN t0.c1 THEN rt0.c0 END)) WHERE ((((((((t0.c2)) BETWEEN ((vt0.c1)) AND ((t0.c1))))OR((('843004696')|(t0.c1)))))AND(((rt0.c2)+(rt0.c0))))) ORDER BY 0X46c731bf;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c2)) BETWEEN ((vt0.c1)) AND ((t0.c1))))OR((('843004696')|(t0.c1)))))AND(((rt0.c2)+(rt0.c0))))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN rt0 ON (((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c1)) IN (CASE t0.c0  WHEN t0.c1 THEN rt0.c0 END)) ORDER BY 0x46c731bf);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON ((((((((((t0.c0)OR(t0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c2 ELSE vt0.c1 END) AND ((- (vt0.c1)))) WHERE (((vt0.c0)==(t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)==(t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((((((((t0.c0)OR(t0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c2 ELSE vt0.c1 END) AND ((- (vt0.c1)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON ((((((((((t0.c0)OR(t0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c2 ELSE vt0.c1 END) AND ((- (vt0.c1)))) WHERE (((vt0.c0)==(t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)==(t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((((((((t0.c0)OR(t0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c2 ELSE vt0.c1 END) AND ((- (vt0.c1)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON ((((((((((t0.c0)OR(t0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c2 ELSE vt0.c1 END) AND ((- (vt0.c1)))) WHERE (((vt0.c0)==(t0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN CAST(t0.c2 AS TEXT) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) END) ORDER BY ((t0.c2 COLLATE BINARY) BETWEEN ((t0.c2 IN ())) AND (((((((((rt0.c1)AND(rt0.c2)))AND(t0.c0)))AND(t0.c2)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c2 AS TEXT) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((t0.c2 COLLATE BINARY) BETWEEN ((t0.c2 IN ())) AND (((((((((rt0.c1)AND(rt0.c2)))AND(t0.c0)))AND(t0.c2)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN CAST(t0.c2 AS TEXT) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) END) ORDER BY ((t0.c2 COLLATE BINARY) BETWEEN ((t0.c2 IN ())) AND (((((((((rt0.c1)AND(rt0.c2)))AND(t0.c0)))AND(t0.c2)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c2 AS TEXT) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((t0.c2 COLLATE BINARY) BETWEEN ((t0.c2 IN ())) AND (((((((((rt0.c1)AND(rt0.c2)))AND(t0.c0)))AND(t0.c2)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN CAST(t0.c2 AS TEXT) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) END) ORDER BY ((t0.c2 COLLATE BINARY) BETWEEN ((t0.c2 IN ())) AND (((((((((rt0.c1)AND(rt0.c2)))AND(t0.c0)))AND(t0.c2)))OR(t0.c0))));
SELECT * FROM t0, rt0 WHERE (((t0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((t0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((t0.c2 IN ()) IN ()));
SELECT * FROM vt0, rt0, t0 WHERE ((((((((('')OR((rt0.c1 IN ()))))OR(((-6.01542258E8) IS FALSE))))AND(((rt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c1)))))OR(((x'') NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((('')OR((rt0.c1 IN ()))))OR(((-6.01542258E8) IS FALSE))))AND(((rt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c1)))))OR(((x'') NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((((((((('')OR((rt0.c1 IN ()))))OR(((-6.01542258E8) IS FALSE))))AND(((rt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c1)))))OR(((x'') NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((('')OR((rt0.c1 IN ()))))OR(((-6.01542258E8) IS FALSE))))AND(((rt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c1)))))OR(((x'') NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((((((((('')OR((rt0.c1 IN ()))))OR(((-6.01542258E8) IS FALSE))))AND(((rt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c1)))))OR(((x'') NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT * FROM vt0, rt0, t0 WHERE (((t0.c0)*(NULL)));
SELECT SUM(count) FROM (SELECT ((((t0.c0)*(NULL))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (((t0.c0)*(NULL)));
SELECT SUM(count) FROM (SELECT ((((t0.c0)*(NULL))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (((t0.c0)*(NULL)));
SELECT * FROM t0 NOT INDEXED, rt0 WHERE (((rt0.c0 COLLATE NOCASE) ISNULL)) ORDER BY (((t0.c1)) BETWEEN ((((t0.c1) NOTNULL))) AND ((((rt0.c1)<>(rt0.c1))))) ASC  NULLS FIRST, json(((t0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c1)) BETWEEN ((((t0.c1) NOTNULL))) AND ((((rt0.c1)!=(rt0.c1))))) ASC  NULLS FIRST, json(((t0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) ASC);
SELECT * FROM t0 NOT INDEXED, rt0 WHERE (((rt0.c0 COLLATE NOCASE) ISNULL)) ORDER BY (((t0.c1)) BETWEEN ((((t0.c1) NOTNULL))) AND ((((rt0.c1)<>(rt0.c1))))) ASC  NULLS FIRST, json(((t0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c1)) BETWEEN ((((t0.c1) NOTNULL))) AND ((((rt0.c1)!=(rt0.c1))))) ASC  NULLS FIRST, json(((t0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) ASC);
SELECT * FROM t0 NOT INDEXED, rt0 WHERE (((rt0.c0 COLLATE NOCASE) ISNULL)) ORDER BY (((t0.c1)) BETWEEN ((((t0.c1) NOTNULL))) AND ((((rt0.c1)<>(rt0.c1))))) ASC  NULLS FIRST, json(((t0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) ASC;
SELECT * FROM rt0, vt0, t0 WHERE (((t0.c0 COLLATE NOCASE)IS NOT(json_valid(x''))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE)IS NOT(json_valid(x'')))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((t0.c0 COLLATE NOCASE)IS NOT(json_valid(x''))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE)IS NOT(json_valid(x'')))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((t0.c0 COLLATE NOCASE)IS NOT(json_valid(x''))));
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)>(vt0.c1))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>(vt0.c1))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (NULL COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)>(vt0.c1))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>(vt0.c1))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (NULL COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)>(vt0.c1))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (NULL COLLATE RTRIM)));
SELECT ALL * FROM rt0, vt0 WHERE (((NULL) NOT BETWEEN (CAST(0x1d922f6e AS BLOB)) AND (('1854072494' IN ()))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (CAST(0X1d922f6e AS BLOB)) AND (('1854072494' IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((NULL) NOT BETWEEN (CAST(0x1d922f6e AS BLOB)) AND (('1854072494' IN ()))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (CAST(0X1d922f6e AS BLOB)) AND (('1854072494' IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((NULL) NOT BETWEEN (CAST(0x1d922f6e AS BLOB)) AND (('1854072494' IN ()))));
SELECT ALL * FROM vt0, t0 WHERE (((t0.c1) BETWEEN (vt0.c0) AND (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) BETWEEN (vt0.c0) AND (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((t0.c1) BETWEEN (vt0.c0) AND (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) BETWEEN (vt0.c0) AND (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((t0.c1) BETWEEN (vt0.c0) AND (t0.c0)) COLLATE BINARY);
SELECT * FROM vt0, rt0, t0 WHERE (CAST(CAST(vt0.c1 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (CAST(CAST(vt0.c1 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (CAST(CAST(vt0.c1 AS INTEGER) AS BLOB));
SELECT ALL * FROM rt0 WHERE (((CASE WHEN 'y!>OX^n!R' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)|(((rt0.c0)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 'y!>OX^n!R' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)|(((rt0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN 'y!>OX^n!R' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)|(((rt0.c0)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 'y!>OX^n!R' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)|(((rt0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN 'y!>OX^n!R' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)|(((rt0.c0)IS(rt0.c1)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(t0.c0 AS REAL)) BETWEEN ((+ (rt0.c0))) AND (((t0.c2) NOTNULL))) WHERE ((((t0.c0, rt0.c2, rt0.c0)) BETWEEN ((((t0.c1)%(rt0.c2)), (rt0.c2 IN ()), 0.7401272995648392)) AND (((rt0.c0 IN ()), CAST(t0.c2 AS NUMERIC), (((rt0.c0, t0.c0, rt0.c1))>((rt0.c1, rt0.c2, t0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, rt0.c2, rt0.c0)) BETWEEN ((((t0.c1)%(rt0.c2)), (rt0.c2 IN ()), 0.7401272995648392)) AND (((rt0.c0 IN ()), CAST(t0.c2 AS NUMERIC), (((rt0.c0, t0.c0, rt0.c1))>((rt0.c1, rt0.c2, t0.c0))))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(t0.c0 AS REAL)) BETWEEN ((+ (rt0.c0))) AND (((t0.c2) NOTNULL))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(t0.c0 AS REAL)) BETWEEN ((+ (rt0.c0))) AND (((t0.c2) NOTNULL))) WHERE ((((t0.c0, rt0.c2, rt0.c0)) BETWEEN ((((t0.c1)%(rt0.c2)), (rt0.c2 IN ()), 0.7401272995648392)) AND (((rt0.c0 IN ()), CAST(t0.c2 AS NUMERIC), (((rt0.c0, t0.c0, rt0.c1))>((rt0.c1, rt0.c2, t0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, rt0.c2, rt0.c0)) BETWEEN ((((t0.c1)%(rt0.c2)), (rt0.c2 IN ()), 0.7401272995648392)) AND (((rt0.c0 IN ()), CAST(t0.c2 AS NUMERIC), (((rt0.c0, t0.c0, rt0.c1))>((rt0.c1, rt0.c2, t0.c0))))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(t0.c0 AS REAL)) BETWEEN ((+ (rt0.c0))) AND (((t0.c2) NOTNULL))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(t0.c0 AS REAL)) BETWEEN ((+ (rt0.c0))) AND (((t0.c2) NOTNULL))) WHERE ((((t0.c0, rt0.c2, rt0.c0)) BETWEEN ((((t0.c1)%(rt0.c2)), (rt0.c2 IN ()), 0.7401272995648392)) AND (((rt0.c0 IN ()), CAST(t0.c2 AS NUMERIC), (((rt0.c0, t0.c0, rt0.c1))>((rt0.c1, rt0.c2, t0.c0)))))));
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON CAST(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN NULL THEN t0.c0 WHEN t0.c2 THEN rt0.c1 END AS REAL) WHERE (CAST(((((rt0.c1)OR(t0.c0)))AND(rt0.c2)) AS BLOB)) ORDER BY MIN(CAST(t0.c2 AS NUMERIC), t0.c0 COLLATE NOCASE), x'06d9'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)OR(t0.c0)))AND(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN NULL THEN t0.c0 WHEN t0.c2 THEN rt0.c1 END AS REAL) ORDER BY MIN(CAST(t0.c2 AS NUMERIC), t0.c0 COLLATE NOCASE), x'06d9'  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON CAST(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN NULL THEN t0.c0 WHEN t0.c2 THEN rt0.c1 END AS REAL) WHERE (CAST(((((rt0.c1)OR(t0.c0)))AND(rt0.c2)) AS BLOB)) ORDER BY MIN(CAST(t0.c2 AS NUMERIC), t0.c0 COLLATE NOCASE), x'06d9'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)OR(t0.c0)))AND(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN NULL THEN t0.c0 WHEN t0.c2 THEN rt0.c1 END AS REAL) ORDER BY MIN(CAST(t0.c2 AS NUMERIC), t0.c0 COLLATE NOCASE), x'06d9'  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON CAST(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN NULL THEN t0.c0 WHEN t0.c2 THEN rt0.c1 END AS REAL) WHERE (CAST(((((rt0.c1)OR(t0.c0)))AND(rt0.c2)) AS BLOB)) ORDER BY MIN(CAST(t0.c2 AS NUMERIC), t0.c0 COLLATE NOCASE), x'06d9'  NULLS LAST;
SELECT ALL * FROM t0, vt0 INNER JOIN rt0 ON CASE CAST(vt0.c0 AS BLOB)  WHEN CAST(rt0.c2 AS TEXT) THEN 0.5894449200049836 WHEN ((rt0.c0) ISNULL) THEN TRIM(t0.c0) WHEN (((0.6813922463980835, vt0.c0, t0.c2, t0.c1, rt0.c1)) BETWEEN ((t0.c2, t0.c0, rt0.c1, t0.c1, t0.c1)) AND ((t0.c0, rt0.c1, vt0.c0, 0.04811406841186694, t0.c1))) THEN CASE rt0.c1  WHEN '-601542258' THEN t0.c2 END WHEN (NOT (t0.c0)) THEN x'' WHEN ((vt0.c1) NOTNULL) THEN CAST(rt0.c2 AS REAL) ELSE ((t0.c0) ISNULL) END WHERE ((((t0.c0) ISNULL) IN (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) ISNULL) IN (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON CASE CAST(vt0.c0 AS BLOB)  WHEN CAST(rt0.c2 AS TEXT) THEN 0.5894449200049836 WHEN ((rt0.c0) ISNULL) THEN TRIM(t0.c0) WHEN (((0.6813922463980835, vt0.c0, t0.c2, t0.c1, rt0.c1)) BETWEEN ((t0.c2, t0.c0, rt0.c1, t0.c1, t0.c1)) AND ((t0.c0, rt0.c1, vt0.c0, 0.04811406841186694, t0.c1))) THEN CASE rt0.c1  WHEN '-601542258' THEN t0.c2 END WHEN (NOT (t0.c0)) THEN x'' WHEN ((vt0.c1) NOTNULL) THEN CAST(rt0.c2 AS REAL) ELSE ((t0.c0) ISNULL) END);
SELECT ALL * FROM t0, vt0 INNER JOIN rt0 ON CASE CAST(vt0.c0 AS BLOB)  WHEN CAST(rt0.c2 AS TEXT) THEN 0.5894449200049836 WHEN ((rt0.c0) ISNULL) THEN TRIM(t0.c0) WHEN (((0.6813922463980835, vt0.c0, t0.c2, t0.c1, rt0.c1)) BETWEEN ((t0.c2, t0.c0, rt0.c1, t0.c1, t0.c1)) AND ((t0.c0, rt0.c1, vt0.c0, 0.04811406841186694, t0.c1))) THEN CASE rt0.c1  WHEN '-601542258' THEN t0.c2 END WHEN (NOT (t0.c0)) THEN x'' WHEN ((vt0.c1) NOTNULL) THEN CAST(rt0.c2 AS REAL) ELSE ((t0.c0) ISNULL) END WHERE ((((t0.c0) ISNULL) IN (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) ISNULL) IN (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON CASE CAST(vt0.c0 AS BLOB)  WHEN CAST(rt0.c2 AS TEXT) THEN 0.5894449200049836 WHEN ((rt0.c0) ISNULL) THEN TRIM(t0.c0) WHEN (((0.6813922463980835, vt0.c0, t0.c2, t0.c1, rt0.c1)) BETWEEN ((t0.c2, t0.c0, rt0.c1, t0.c1, t0.c1)) AND ((t0.c0, rt0.c1, vt0.c0, 0.04811406841186694, t0.c1))) THEN CASE rt0.c1  WHEN '-601542258' THEN t0.c2 END WHEN (NOT (t0.c0)) THEN x'' WHEN ((vt0.c1) NOTNULL) THEN CAST(rt0.c2 AS REAL) ELSE ((t0.c0) ISNULL) END);
SELECT ALL * FROM t0, vt0 INNER JOIN rt0 ON CASE CAST(vt0.c0 AS BLOB)  WHEN CAST(rt0.c2 AS TEXT) THEN 0.5894449200049836 WHEN ((rt0.c0) ISNULL) THEN TRIM(t0.c0) WHEN (((0.6813922463980835, vt0.c0, t0.c2, t0.c1, rt0.c1)) BETWEEN ((t0.c2, t0.c0, rt0.c1, t0.c1, t0.c1)) AND ((t0.c0, rt0.c1, vt0.c0, 0.04811406841186694, t0.c1))) THEN CASE rt0.c1  WHEN '-601542258' THEN t0.c2 END WHEN (NOT (t0.c0)) THEN x'' WHEN ((vt0.c1) NOTNULL) THEN CAST(rt0.c2 AS REAL) ELSE ((t0.c0) ISNULL) END WHERE ((((t0.c0) ISNULL) IN (CAST(vt0.c0 AS INTEGER))));
SELECT * FROM rt0 WHERE ((NULL IN ())) ORDER BY (((NOT (rt0.c0)))&(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0)))&(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))));
SELECT * FROM rt0 WHERE ((NULL IN ())) ORDER BY (((NOT (rt0.c0)))&(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0)))&(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))));
SELECT * FROM rt0 WHERE ((NULL IN ())) ORDER BY (((NOT (rt0.c0)))&(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2))));
SELECT * FROM rt0, t0 CROSS JOIN vt0 ON ((('1886405451'))>(((((rt0.c0))>=((t0.c1)))))) WHERE ((((~ (NULL)))+(((vt0.c1)<>(t0.c0))))) ORDER BY ((((((t0.c1)>=(rt0.c0)))AND(((t0.c1)+(t0.c0)))))AND((((t0.c1))<((t0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (NULL)))+(((vt0.c1)!=(t0.c0))))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON ((('1886405451'))>(((((rt0.c0))>=((t0.c1)))))) ORDER BY ((((((t0.c1)>=(rt0.c0)))AND(((t0.c1)+(t0.c0)))))AND((((t0.c1))<((t0.c0))))) ASC  NULLS FIRST);
SELECT * FROM rt0, t0 CROSS JOIN vt0 ON ((('1886405451'))>(((((rt0.c0))>=((t0.c1)))))) WHERE ((((~ (NULL)))+(((vt0.c1)<>(t0.c0))))) ORDER BY ((((((t0.c1)>=(rt0.c0)))AND(((t0.c1)+(t0.c0)))))AND((((t0.c1))<((t0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (NULL)))+(((vt0.c1)!=(t0.c0))))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON ((('1886405451'))>(((((rt0.c0))>=((t0.c1)))))) ORDER BY ((((((t0.c1)>=(rt0.c0)))AND(((t0.c1)+(t0.c0)))))AND((((t0.c1))<((t0.c0))))) ASC  NULLS FIRST);
SELECT * FROM rt0, t0 CROSS JOIN vt0 ON ((('1886405451'))>(((((rt0.c0))>=((t0.c1)))))) WHERE ((((~ (NULL)))+(((vt0.c1)<>(t0.c0))))) ORDER BY ((((((t0.c1)>=(rt0.c0)))AND(((t0.c1)+(t0.c0)))))AND((((t0.c1))<((t0.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((NULL)AND(rt0.c1)))OR(rt0.c1 COLLATE BINARY))) ORDER BY IFNULL(((rt0.c0)||(rt0.c0)), rt0.c2 COLLATE BINARY) ASC, CASE WHEN NULL THEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((rt0.c1)|(rt0.c2)) END, ((((rt0.c0)<>(rt0.c0)))<<(((rt0.c2)+(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(rt0.c1)))OR(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(((rt0.c0)||(rt0.c0)), rt0.c2 COLLATE BINARY) ASC, CASE WHEN NULL THEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((rt0.c1)|(rt0.c2)) END, ((((rt0.c0)!=(rt0.c0)))<<(((rt0.c2)+(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((NULL)AND(rt0.c1)))OR(rt0.c1 COLLATE BINARY))) ORDER BY IFNULL(((rt0.c0)||(rt0.c0)), rt0.c2 COLLATE BINARY) ASC, CASE WHEN NULL THEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((rt0.c1)|(rt0.c2)) END, ((((rt0.c0)<>(rt0.c0)))<<(((rt0.c2)+(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(rt0.c1)))OR(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(((rt0.c0)||(rt0.c0)), rt0.c2 COLLATE BINARY) ASC, CASE WHEN NULL THEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((rt0.c1)|(rt0.c2)) END, ((((rt0.c0)!=(rt0.c0)))<<(((rt0.c2)+(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((NULL)AND(rt0.c1)))OR(rt0.c1 COLLATE BINARY))) ORDER BY IFNULL(((rt0.c0)||(rt0.c0)), rt0.c2 COLLATE BINARY) ASC, CASE WHEN NULL THEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((rt0.c1)|(rt0.c2)) END, ((((rt0.c0)<>(rt0.c0)))<<(((rt0.c2)+(rt0.c1))))  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c2)) BETWEEN (((t0.c2 IN ()))) AND ((t0.c1 COLLATE BINARY)))) ORDER BY ((((t0.c2)AND(t0.c2 COLLATE NOCASE)))OR(t0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2)) BETWEEN (((t0.c2 IN ()))) AND ((t0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2)AND(t0.c2 COLLATE NOCASE)))OR(t0.c2))  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c2)) BETWEEN (((t0.c2 IN ()))) AND ((t0.c1 COLLATE BINARY)))) ORDER BY ((((t0.c2)AND(t0.c2 COLLATE NOCASE)))OR(t0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2)) BETWEEN (((t0.c2 IN ()))) AND ((t0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2)AND(t0.c2 COLLATE NOCASE)))OR(t0.c2))  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c2)) BETWEEN (((t0.c2 IN ()))) AND ((t0.c1 COLLATE BINARY)))) ORDER BY ((((t0.c2)AND(t0.c2 COLLATE NOCASE)))OR(t0.c2))  NULLS LAST;
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON TYPEOF(LIKELIHOOD(DISTINCT rt0.c2, 0.9949354144060197)) LEFT OUTER JOIN t0 ON (((((rt0.c2) IS TRUE)))<=((vt0.c0))) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON TYPEOF(LIKELIHOOD(DISTINCT rt0.c2, 0.9949354144060197)) LEFT OUTER JOIN t0 ON (((((rt0.c2) IS TRUE)))<=((vt0.c0))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON TYPEOF(LIKELIHOOD(DISTINCT rt0.c2, 0.9949354144060197)) LEFT OUTER JOIN t0 ON (((((rt0.c2) IS TRUE)))<=((vt0.c0))) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON TYPEOF(LIKELIHOOD(DISTINCT rt0.c2, 0.9949354144060197)) LEFT OUTER JOIN t0 ON (((((rt0.c2) IS TRUE)))<=((vt0.c0))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON TYPEOF(LIKELIHOOD(DISTINCT rt0.c2, 0.9949354144060197)) LEFT OUTER JOIN t0 ON (((((rt0.c2) IS TRUE)))<=((vt0.c0))) WHERE (t0.c2);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (LIKELIHOOD(DISTINCT (t0.c1 IN (vt0.c1, rt0.c1)), 0.9330083142004895));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (t0.c1 IN (vt0.c1, rt0.c1)), 0.9330083142004895)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (LIKELIHOOD(DISTINCT (t0.c1 IN (vt0.c1, rt0.c1)), 0.9330083142004895));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (t0.c1 IN (vt0.c1, rt0.c1)), 0.9330083142004895)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (LIKELIHOOD(DISTINCT (t0.c1 IN (vt0.c1, rt0.c1)), 0.9330083142004895));
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN ((rt0.c1)/(t0.c0)) THEN ((((x'')AND(t0.c0)))AND(t0.c2)) WHEN (((vt0.c0, t0.c1, rt0.c1)) NOT BETWEEN ((t0.c2, t0.c2, vt0.c0)) AND ((rt0.c2, t0.c2, t0.c1))) THEN x'a044' COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)) THEN ((rt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)/(t0.c0)) THEN ((((x'')AND(t0.c0)))AND(t0.c2)) WHEN (((vt0.c0, t0.c1, rt0.c1)) NOT BETWEEN ((t0.c2, t0.c2, vt0.c0)) AND ((rt0.c2, t0.c2, t0.c1))) THEN x'a044' COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)) THEN ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN ((rt0.c1)/(t0.c0)) THEN ((((x'')AND(t0.c0)))AND(t0.c2)) WHEN (((vt0.c0, t0.c1, rt0.c1)) NOT BETWEEN ((t0.c2, t0.c2, vt0.c0)) AND ((rt0.c2, t0.c2, t0.c1))) THEN x'a044' COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)) THEN ((rt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)/(t0.c0)) THEN ((((x'')AND(t0.c0)))AND(t0.c2)) WHEN (((vt0.c0, t0.c1, rt0.c1)) NOT BETWEEN ((t0.c2, t0.c2, vt0.c0)) AND ((rt0.c2, t0.c2, t0.c1))) THEN x'a044' COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)) THEN ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN ((rt0.c1)/(t0.c0)) THEN ((((x'')AND(t0.c0)))AND(t0.c2)) WHEN (((vt0.c0, t0.c1, rt0.c1)) NOT BETWEEN ((t0.c2, t0.c2, vt0.c0)) AND ((rt0.c2, t0.c2, t0.c1))) THEN x'a044' COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)) THEN ((rt0.c0) NOTNULL) END);
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((((((((((((t0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN ()) THEN ((((((((((((t0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((((((((((((t0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN ()) THEN ((((((((((((t0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((((((((((((t0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)) ELSE vt0.c0 END);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)*((rt0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)*((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)*((rt0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)*((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)*((rt0.c0 IN (rt0.c0)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT (vt0.c1 COLLATE BINARY)) WHERE ((((((vt0.c0, rt0.c2, NULL))<=((vt0.c1, rt0.c0, 'gr')))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (1.187459519E9))) ORDER BY ((((((((((0.7105072720565245) BETWEEN (vt0.c1) AND (rt0.c0)))OR(MAX(rt0.c0, rt0.c0, rt0.c1, vt0.c0))))AND(vt0.c1)))AND(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((vt0.c0) IS FALSE))) DESC  NULLS FIRST, (+ (((rt0.c0) NOT BETWEEN (x'') AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, rt0.c2, NULL))<=((vt0.c1, rt0.c0, 'gr')))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (1.187459519E9))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT (vt0.c1 COLLATE BINARY)) ORDER BY ((((((((((0.7105072720565245) BETWEEN (vt0.c1) AND (rt0.c0)))OR(MAX(rt0.c0, rt0.c0, rt0.c1, vt0.c0))))AND(vt0.c1)))AND(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((vt0.c0) IS FALSE))) DESC  NULLS FIRST, (+ (((rt0.c0) NOT BETWEEN (x'') AND (vt0.c1)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT (vt0.c1 COLLATE BINARY)) WHERE ((((((vt0.c0, rt0.c2, NULL))<=((vt0.c1, rt0.c0, 'gr')))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (1.187459519E9))) ORDER BY ((((((((((0.7105072720565245) BETWEEN (vt0.c1) AND (rt0.c0)))OR(MAX(rt0.c0, rt0.c0, rt0.c1, vt0.c0))))AND(vt0.c1)))AND(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((vt0.c0) IS FALSE))) DESC  NULLS FIRST, (+ (((rt0.c0) NOT BETWEEN (x'') AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, rt0.c2, NULL))<=((vt0.c1, rt0.c0, 'gr')))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (1.187459519E9))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT (vt0.c1 COLLATE BINARY)) ORDER BY ((((((((((0.7105072720565245) BETWEEN (vt0.c1) AND (rt0.c0)))OR(MAX(rt0.c0, rt0.c0, rt0.c1, vt0.c0))))AND(vt0.c1)))AND(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((vt0.c0) IS FALSE))) DESC  NULLS FIRST, (+ (((rt0.c0) NOT BETWEEN (x'') AND (vt0.c1)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT (vt0.c1 COLLATE BINARY)) WHERE ((((((vt0.c0, rt0.c2, NULL))<=((vt0.c1, rt0.c0, 'gr')))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (1.187459519E9))) ORDER BY ((((((((((0.7105072720565245) BETWEEN (vt0.c1) AND (rt0.c0)))OR(MAX(rt0.c0, rt0.c0, rt0.c1, vt0.c0))))AND(vt0.c1)))AND(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((vt0.c0) IS FALSE))) DESC  NULLS FIRST, (+ (((rt0.c0) NOT BETWEEN (x'') AND (vt0.c1))));
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END) NOT BETWEEN (((t0.c0)||(t0.c2))) AND (t0.c2))) ORDER BY (((t0.c0) IS TRUE) IN (t0.c1 COLLATE RTRIM, ((NULL)|(t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END) NOT BETWEEN (((t0.c0)||(t0.c2))) AND (t0.c2))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0) IS TRUE) IN (t0.c1 COLLATE RTRIM, ((NULL)|(t0.c1)))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END) NOT BETWEEN (((t0.c0)||(t0.c2))) AND (t0.c2))) ORDER BY (((t0.c0) IS TRUE) IN (t0.c1 COLLATE RTRIM, ((NULL)|(t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END) NOT BETWEEN (((t0.c0)||(t0.c2))) AND (t0.c2))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0) IS TRUE) IN (t0.c1 COLLATE RTRIM, ((NULL)|(t0.c1)))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END) NOT BETWEEN (((t0.c0)||(t0.c2))) AND (t0.c2))) ORDER BY (((t0.c0) IS TRUE) IN (t0.c1 COLLATE RTRIM, ((NULL)|(t0.c1)))) ASC;
SELECT * FROM vt0, t0 WHERE ((0.9715476679331316 IN ())) ORDER BY json_type(vt0.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.9715476679331316 IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY json_type(vt0.c0)  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((0.9715476679331316 IN ())) ORDER BY json_type(vt0.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.9715476679331316 IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY json_type(vt0.c0)  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((0.9715476679331316 IN ())) ORDER BY json_type(vt0.c0)  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE BINARY) ORDER BY (((0.06193486694372541 IN (rt0.c1, rt0.c1))) BETWEEN (UPPER(rt0.c1)) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((0.06193486694372541 IN (rt0.c1, rt0.c1))) BETWEEN (UPPER(rt0.c1)) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE BINARY) ORDER BY (((0.06193486694372541 IN (rt0.c1, rt0.c1))) BETWEEN (UPPER(rt0.c1)) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((0.06193486694372541 IN (rt0.c1, rt0.c1))) BETWEEN (UPPER(rt0.c1)) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE BINARY) ORDER BY (((0.06193486694372541 IN (rt0.c1, rt0.c1))) BETWEEN (UPPER(rt0.c1)) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON CHANGES() WHERE (((NULL) ISNULL)) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (LIKELIHOOD(DISTINCT t0.c2, 0.17838680895171577)) AND (t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CHANGES() ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (LIKELIHOOD(DISTINCT t0.c2, 0.17838680895171577)) AND (t0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON CHANGES() WHERE (((NULL) ISNULL)) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (LIKELIHOOD(DISTINCT t0.c2, 0.17838680895171577)) AND (t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CHANGES() ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (LIKELIHOOD(DISTINCT t0.c2, 0.17838680895171577)) AND (t0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON CHANGES() WHERE (((NULL) ISNULL)) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (LIKELIHOOD(DISTINCT t0.c2, 0.17838680895171577)) AND (t0.c0)) ASC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (CASE '-1000640203' COLLATE RTRIM  WHEN ((vt0.c1) BETWEEN (t0.c2) AND ('')) THEN (+ (t0.c0)) WHEN vt0.c1 THEN vt0.c0 WHEN CASE vt0.c0  WHEN t0.c1 THEN t0.c2 ELSE '-1022152882' END THEN ((vt0.c1)AND(t0.c2)) ELSE ((t0.c1)GLOB(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '-1000640203' COLLATE RTRIM  WHEN ((vt0.c1) BETWEEN (t0.c2) AND ('')) THEN (+ (t0.c0)) WHEN vt0.c1 THEN vt0.c0 WHEN CASE vt0.c0  WHEN t0.c1 THEN t0.c2 ELSE '-1022152882' END THEN ((vt0.c1)AND(t0.c2)) ELSE ((t0.c1)GLOB(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE '-1000640203' COLLATE RTRIM  WHEN ((vt0.c1) BETWEEN (t0.c2) AND ('')) THEN (+ (t0.c0)) WHEN vt0.c1 THEN vt0.c0 WHEN CASE vt0.c0  WHEN t0.c1 THEN t0.c2 ELSE '-1022152882' END THEN ((vt0.c1)AND(t0.c2)) ELSE ((t0.c1)GLOB(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '-1000640203' COLLATE RTRIM  WHEN ((vt0.c1) BETWEEN (t0.c2) AND ('')) THEN (+ (t0.c0)) WHEN vt0.c1 THEN vt0.c0 WHEN CASE vt0.c0  WHEN t0.c1 THEN t0.c2 ELSE '-1022152882' END THEN ((vt0.c1)AND(t0.c2)) ELSE ((t0.c1)GLOB(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE '-1000640203' COLLATE RTRIM  WHEN ((vt0.c1) BETWEEN (t0.c2) AND ('')) THEN (+ (t0.c0)) WHEN vt0.c1 THEN vt0.c0 WHEN CASE vt0.c0  WHEN t0.c1 THEN t0.c2 ELSE '-1022152882' END THEN ((vt0.c1)AND(t0.c2)) ELSE ((t0.c1)GLOB(vt0.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY ((((rt0.c2)IS(rt0.c1))) NOT BETWEEN (((rt0.c0)<=(rt0.c2))) AND ((- (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)IS(rt0.c1))) NOT BETWEEN (((rt0.c0)<=(rt0.c2))) AND ((- (rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY ((((rt0.c2)IS(rt0.c1))) NOT BETWEEN (((rt0.c0)<=(rt0.c2))) AND ((- (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)IS(rt0.c1))) NOT BETWEEN (((rt0.c0)<=(rt0.c2))) AND ((- (rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY ((((rt0.c2)IS(rt0.c1))) NOT BETWEEN (((rt0.c0)<=(rt0.c2))) AND ((- (rt0.c1)))) ASC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN t0 ON ((((((((t0.c2)AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)) COLLATE BINARY WHERE ((((t0.c1)) NOT BETWEEN (((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c1))))) AND ((CASE t0.c1  WHEN 0.9565257337193157 THEN vt0.c1 ELSE t0.c2 END)))) ORDER BY (json_array(rt0.c2, rt0.c0) IN (t0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN (((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c1))))) AND ((CASE t0.c1  WHEN 0.9565257337193157 THEN vt0.c1 ELSE t0.c2 END)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN t0 ON ((((((((t0.c2)AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)) COLLATE BINARY ORDER BY (json_array(rt0.c2, rt0.c0) IN (t0.c2 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN t0 ON ((((((((t0.c2)AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)) COLLATE BINARY WHERE ((((t0.c1)) NOT BETWEEN (((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c1))))) AND ((CASE t0.c1  WHEN 0.9565257337193157 THEN vt0.c1 ELSE t0.c2 END)))) ORDER BY (json_array(rt0.c2, rt0.c0) IN (t0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN (((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c1))))) AND ((CASE t0.c1  WHEN 0.9565257337193157 THEN vt0.c1 ELSE t0.c2 END)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN t0 ON ((((((((t0.c2)AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)) COLLATE BINARY ORDER BY (json_array(rt0.c2, rt0.c0) IN (t0.c2 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN t0 ON ((((((((t0.c2)AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)) COLLATE BINARY WHERE ((((t0.c1)) NOT BETWEEN (((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c1))))) AND ((CASE t0.c1  WHEN 0.9565257337193157 THEN vt0.c1 ELSE t0.c2 END)))) ORDER BY (json_array(rt0.c2, rt0.c0) IN (t0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0)<=(t0.c1)) AS BLOB)) ORDER BY DATE(CAST(t0.c2 AS NUMERIC), t0.c0, (t0.c1 IN (t0.c0, t0.c0))), LIKELY(DISTINCT '1082554913') DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)<=(t0.c1)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY DATE(CAST(t0.c2 AS NUMERIC), t0.c0, (t0.c1 IN (t0.c0, t0.c0))), LIKELY(DISTINCT '1082554913') DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0)<=(t0.c1)) AS BLOB)) ORDER BY DATE(CAST(t0.c2 AS NUMERIC), t0.c0, (t0.c1 IN (t0.c0, t0.c0))), LIKELY(DISTINCT '1082554913') DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)<=(t0.c1)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY DATE(CAST(t0.c2 AS NUMERIC), t0.c0, (t0.c1 IN (t0.c0, t0.c0))), LIKELY(DISTINCT '1082554913') DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0)<=(t0.c1)) AS BLOB)) ORDER BY DATE(CAST(t0.c2 AS NUMERIC), t0.c0, (t0.c1 IN (t0.c0, t0.c0))), LIKELY(DISTINCT '1082554913') DESC;
SELECT * FROM rt0 WHERE (CASE WHEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) THEN TRIM(DISTINCT rt0.c0, x'4dcc') ELSE COALESCE(rt0.c1, rt0.c2) END) ORDER BY CAST(json_quote(rt0.c1) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) THEN TRIM(DISTINCT rt0.c0, x'4dcc') ELSE COALESCE(rt0.c1, rt0.c2) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(json_quote(rt0.c1) AS BLOB) ASC);
SELECT * FROM rt0 WHERE (CASE WHEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) THEN TRIM(DISTINCT rt0.c0, x'4dcc') ELSE COALESCE(rt0.c1, rt0.c2) END) ORDER BY CAST(json_quote(rt0.c1) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) THEN TRIM(DISTINCT rt0.c0, x'4dcc') ELSE COALESCE(rt0.c1, rt0.c2) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(json_quote(rt0.c1) AS BLOB) ASC);
SELECT * FROM rt0 WHERE (CASE WHEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) THEN TRIM(DISTINCT rt0.c0, x'4dcc') ELSE COALESCE(rt0.c1, rt0.c2) END) ORDER BY CAST(json_quote(rt0.c1) AS BLOB) ASC;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c2)>>(-1560730045)) COLLATE BINARY) ORDER BY NULLIF(DISTINCT (rt0.c1 IN (t0.c1, t0.c1)), (NOT (0Xffffffffc3b7baae))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)>>(-1560730045)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY NULLIF(DISTINCT (rt0.c1 IN (t0.c1, t0.c1)), (NOT (0Xffffffffc3b7baae))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c2)>>(-1560730045)) COLLATE BINARY) ORDER BY NULLIF(DISTINCT (rt0.c1 IN (t0.c1, t0.c1)), (NOT (0Xffffffffc3b7baae))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)>>(-1560730045)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY NULLIF(DISTINCT (rt0.c1 IN (t0.c1, t0.c1)), (NOT (0Xffffffffc3b7baae))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c2)>>(-1560730045)) COLLATE BINARY) ORDER BY NULLIF(DISTINCT (rt0.c1 IN (t0.c1, t0.c1)), (NOT (0Xffffffffc3b7baae))) ASC  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON (CAST(t0.c0 AS INTEGER) IN ()) WHERE (((json_quote(t0.c1)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (0.5473118704717932) AND (t0.c2))) AND (t0.c0 COLLATE BINARY))) ORDER BY COALESCE(DISTINCT CAST(vt0.c1 AS BLOB), ((t0.c2)>>(rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(t0.c1)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (0.5473118704717932) AND (t0.c2))) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON (CAST(t0.c0 AS INTEGER) IN ()) ORDER BY COALESCE(DISTINCT CAST(vt0.c1 AS BLOB), ((t0.c2)>>(rt0.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON (CAST(t0.c0 AS INTEGER) IN ()) WHERE (((json_quote(t0.c1)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (0.5473118704717932) AND (t0.c2))) AND (t0.c0 COLLATE BINARY))) ORDER BY COALESCE(DISTINCT CAST(vt0.c1 AS BLOB), ((t0.c2)>>(rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(t0.c1)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (0.5473118704717932) AND (t0.c2))) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON (CAST(t0.c0 AS INTEGER) IN ()) ORDER BY COALESCE(DISTINCT CAST(vt0.c1 AS BLOB), ((t0.c2)>>(rt0.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON (CAST(t0.c0 AS INTEGER) IN ()) WHERE (((json_quote(t0.c1)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (0.5473118704717932) AND (t0.c2))) AND (t0.c0 COLLATE BINARY))) ORDER BY COALESCE(DISTINCT CAST(vt0.c1 AS BLOB), ((t0.c2)>>(rt0.c2))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((rt0.c2)<=(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((rt0.c2)<=(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((rt0.c2)<=(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((rt0.c2)<=(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((rt0.c2)<=(rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((t0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(t0.c2 AS TEXT)) AND (((vt0.c1)+(t0.c1)))) FULL OUTER JOIN t0 ON ((t0.c1) IS FALSE) WHERE ((((('')AND(json_extract(t0.c0, t0.c2, vt0.c1, rt0.c1))))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('')AND(json_extract(t0.c0, t0.c2, vt0.c1, rt0.c1))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((t0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(t0.c2 AS TEXT)) AND (((vt0.c1)+(t0.c1)))) FULL OUTER JOIN t0 ON ((t0.c1) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((t0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(t0.c2 AS TEXT)) AND (((vt0.c1)+(t0.c1)))) FULL OUTER JOIN t0 ON ((t0.c1) IS FALSE) WHERE ((((('')AND(json_extract(t0.c0, t0.c2, vt0.c1, rt0.c1))))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('')AND(json_extract(t0.c0, t0.c2, vt0.c1, rt0.c1))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((t0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(t0.c2 AS TEXT)) AND (((vt0.c1)+(t0.c1)))) FULL OUTER JOIN t0 ON ((t0.c1) IS FALSE));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((-9223372036854775808) BETWEEN (((x'') BETWEEN (rt0.c1) AND (rt0.c1))) AND (((vt0.c0) IS FALSE))) WHERE ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END IN ())) ORDER BY (~ (vt0.c1));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((-9223372036854775808) BETWEEN (((x'') BETWEEN (rt0.c1) AND (rt0.c1))) AND (((vt0.c0) IS FALSE))) ORDER BY (~ (vt0.c1)));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((-9223372036854775808) BETWEEN (((x'') BETWEEN (rt0.c1) AND (rt0.c1))) AND (((vt0.c0) IS FALSE))) WHERE ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END IN ())) ORDER BY (~ (vt0.c1));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((-9223372036854775808) BETWEEN (((x'') BETWEEN (rt0.c1) AND (rt0.c1))) AND (((vt0.c0) IS FALSE))) ORDER BY (~ (vt0.c1)));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((-9223372036854775808) BETWEEN (((x'') BETWEEN (rt0.c1) AND (rt0.c1))) AND (((vt0.c0) IS FALSE))) WHERE ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END IN ())) ORDER BY (~ (vt0.c1));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (NULL);
SELECT ALL * FROM t0, vt0 WHERE (CAST('-2128020209' AS INTEGER)) ORDER BY (t0.c1 IN (load_extension(t0.c1), UNLIKELY(DISTINCT x''))), t0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('-2128020209' AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY (t0.c1 IN (load_extension(t0.c1), UNLIKELY(DISTINCT x''))), t0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CAST('-2128020209' AS INTEGER)) ORDER BY (t0.c1 IN (load_extension(t0.c1), UNLIKELY(DISTINCT x''))), t0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('-2128020209' AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY (t0.c1 IN (load_extension(t0.c1), UNLIKELY(DISTINCT x''))), t0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c1))) AS BLOB)) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c1) IS TRUE))), ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c1))) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c1) IS TRUE))), ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c1))) AS BLOB)) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c1) IS TRUE))), ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c1))) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c1) IS TRUE))), ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c1))) AS BLOB)) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c1) IS TRUE))), ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((- (((t0.c2)GLOB(t0.c0))))) ORDER BY (~ (CAST(t0.c1 AS BLOB)))  NULLS FIRST, (((~ (t0.c2)))IS(((rt0.c2)*(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((t0.c2)GLOB(t0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (~ (CAST(t0.c1 AS BLOB)))  NULLS FIRST, (((~ (t0.c2)))IS(((rt0.c2)*(t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((- (((t0.c2)GLOB(t0.c0))))) ORDER BY (~ (CAST(t0.c1 AS BLOB)))  NULLS FIRST, (((~ (t0.c2)))IS(((rt0.c2)*(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((t0.c2)GLOB(t0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (~ (CAST(t0.c1 AS BLOB)))  NULLS FIRST, (((~ (t0.c2)))IS(((rt0.c2)*(t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((- (((t0.c2)GLOB(t0.c0))))) ORDER BY (~ (CAST(t0.c1 AS BLOB)))  NULLS FIRST, (((~ (t0.c2)))IS(((rt0.c2)*(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c1) ORDER BY t0.c2 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY t0.c2 COLLATE RTRIM DESC);
SELECT ALL * FROM t0 WHERE (t0.c1) ORDER BY t0.c2 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY t0.c2 COLLATE RTRIM DESC);
SELECT ALL * FROM t0 WHERE (t0.c1) ORDER BY t0.c2 COLLATE RTRIM DESC;
SELECT * FROM rt0, t0 WHERE (CASE WHEN (NOT (t0.c1)) THEN (NOT (t0.c0)) WHEN ((t0.c0)>=(rt0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) WHEN t0.c2 THEN UNLIKELY(rt0.c2) ELSE 0.938990787497542 END) ORDER BY (- (CAST(t0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (t0.c1)) THEN (NOT (t0.c0)) WHEN ((t0.c0)>=(rt0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) WHEN t0.c2 THEN UNLIKELY(rt0.c2) ELSE 0.938990787497542 END) IS TRUE)  as count FROM rt0, t0 ORDER BY (- (CAST(t0.c1 AS TEXT))) ASC  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (CASE WHEN (NOT (t0.c1)) THEN (NOT (t0.c0)) WHEN ((t0.c0)>=(rt0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) WHEN t0.c2 THEN UNLIKELY(rt0.c2) ELSE 0.938990787497542 END) ORDER BY (- (CAST(t0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (t0.c1)) THEN (NOT (t0.c0)) WHEN ((t0.c0)>=(rt0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) WHEN t0.c2 THEN UNLIKELY(rt0.c2) ELSE 0.938990787497542 END) IS TRUE)  as count FROM rt0, t0 ORDER BY (- (CAST(t0.c1 AS TEXT))) ASC  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (CASE WHEN (NOT (t0.c1)) THEN (NOT (t0.c0)) WHEN ((t0.c0)>=(rt0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) WHEN t0.c2 THEN UNLIKELY(rt0.c2) ELSE 0.938990787497542 END) ORDER BY (- (CAST(t0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))<=(((vt0.c1) IS FALSE)))) ORDER BY (((~ (rt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))<=(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((~ (rt0.c0))) IS TRUE) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))<=(((vt0.c1) IS FALSE)))) ORDER BY (((~ (rt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))<=(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((~ (rt0.c0))) IS TRUE) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))<=(((vt0.c1) IS FALSE)))) ORDER BY (((~ (rt0.c0))) IS TRUE) ASC;
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON SQLITE_SOURCE_ID() INNER JOIN rt0 ON load_extension(((((((((rt0.c2)OR(1455106355)))OR(rt0.c2)))AND(t0.c1)))AND(0.4574355950363381))) WHERE (json_remove((~ (rt0.c0)), t0.c2 COLLATE BINARY, (vt0.c0 IN ()), rt0.c2 COLLATE RTRIM, CAST(t0.c0 AS TEXT), ((t0.c1)GLOB(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((~ (rt0.c0)), t0.c2 COLLATE BINARY, (vt0.c0 IN ()), rt0.c2 COLLATE RTRIM, CAST(t0.c0 AS TEXT), ((t0.c1)GLOB(t0.c2)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON SQLITE_SOURCE_ID() INNER JOIN rt0 ON load_extension(((((((((rt0.c2)OR(1455106355)))OR(rt0.c2)))AND(t0.c1)))AND(0.4574355950363381))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON SQLITE_SOURCE_ID() INNER JOIN rt0 ON load_extension(((((((((rt0.c2)OR(1455106355)))OR(rt0.c2)))AND(t0.c1)))AND(0.4574355950363381))) WHERE (json_remove((~ (rt0.c0)), t0.c2 COLLATE BINARY, (vt0.c0 IN ()), rt0.c2 COLLATE RTRIM, CAST(t0.c0 AS TEXT), ((t0.c1)GLOB(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((~ (rt0.c0)), t0.c2 COLLATE BINARY, (vt0.c0 IN ()), rt0.c2 COLLATE RTRIM, CAST(t0.c0 AS TEXT), ((t0.c1)GLOB(t0.c2)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON SQLITE_SOURCE_ID() INNER JOIN rt0 ON load_extension(((((((((rt0.c2)OR(1455106355)))OR(rt0.c2)))AND(t0.c1)))AND(0.4574355950363381))));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0, vt0 WHERE (((((x'443b')||('370884769')))+(((t0.c0)AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((x'443b')||('370884769')))+(((t0.c0)AND(t0.c2))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0, vt0 WHERE (((((x'443b')||('370884769')))+(((t0.c0)AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((x'443b')||('370884769')))+(((t0.c0)AND(t0.c2))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0, vt0 WHERE (((((x'443b')||('370884769')))+(((t0.c0)AND(t0.c2)))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (UNLIKELY(DISTINCT (((t0.c2))<((t0.c0))))) ORDER BY ((((((rt0.c2)AND(vt0.c0)))OR(rt0.c0))) NOT BETWEEN (((rt0.c1)||(927089973))) AND (t0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (((t0.c2))<((t0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((rt0.c2)AND(vt0.c0)))OR(rt0.c0))) NOT BETWEEN (((rt0.c1)||(927089973))) AND (t0.c2 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (UNLIKELY(DISTINCT (((t0.c2))<((t0.c0))))) ORDER BY ((((((rt0.c2)AND(vt0.c0)))OR(rt0.c0))) NOT BETWEEN (((rt0.c1)||(927089973))) AND (t0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (((t0.c2))<((t0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((rt0.c2)AND(vt0.c0)))OR(rt0.c0))) NOT BETWEEN (((rt0.c1)||(927089973))) AND (t0.c2 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (UNLIKELY(DISTINCT (((t0.c2))<((t0.c0))))) ORDER BY ((((((rt0.c2)AND(vt0.c0)))OR(rt0.c0))) NOT BETWEEN (((rt0.c1)||(927089973))) AND (t0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (NULL);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (- ((NOT (vt0.c1)))) WHERE (rt0.c0) ORDER BY (QUOTE(rt0.c0) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (- ((NOT (vt0.c1)))) ORDER BY (QUOTE(rt0.c0) IN ()) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (- ((NOT (vt0.c1)))) WHERE (rt0.c0) ORDER BY (QUOTE(rt0.c0) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (- ((NOT (vt0.c1)))) ORDER BY (QUOTE(rt0.c0) IN ()) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (- ((NOT (vt0.c1)))) WHERE (rt0.c0) ORDER BY (QUOTE(rt0.c0) IN ()) DESC;
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c2))<((''))))AND((rt0.c2 IN (rt0.c2)))))AND(-1106750783))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2))<((''))))AND((rt0.c2 IN (rt0.c2)))))AND(-1106750783))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c2))<((''))))AND((rt0.c2 IN (rt0.c2)))))AND(-1106750783))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2))<((''))))AND((rt0.c2 IN (rt0.c2)))))AND(-1106750783))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c2))<((''))))AND((rt0.c2 IN (rt0.c2)))))AND(-1106750783))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT NULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)<>(t0.c0)))AND((rt0.c0 IN (rt0.c1)))) WHERE ((((((-582275471)) NOT BETWEEN ((t0.c1)) AND ((-2.04239137E9))))-((~ (t0.c1))))) ORDER BY CASE (+ (t0.c1))  WHEN ((((t0.c1)OR(t0.c0)))AND(t0.c2)) THEN t0.c2 END  NULLS FIRST, ((((NULL)OR(CASE t0.c0  WHEN t0.c1 THEN rt0.c1 WHEN 0.4805689985995434 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 END)))OR(NULL)) ASC, ((LIKE(rt0.c0, rt0.c1, '{'))!=(CAST(t0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((((((-582275471)) NOT BETWEEN ((t0.c1)) AND ((-2.04239137E9))))-((~ (t0.c1))))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)<>(t0.c0)))AND((rt0.c0 IN (rt0.c1)))) ORDER BY CASE (+ (t0.c1))  WHEN ((((t0.c1)OR(t0.c0)))AND(t0.c2)) THEN t0.c2 END  NULLS FIRST, ((((NULL)OR(CASE t0.c0  WHEN t0.c1 THEN rt0.c1 WHEN 0.4805689985995434 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 END)))OR(NULL)) ASC, ((LIKE(rt0.c0, rt0.c1, '{'))!=(CAST(t0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)<>(t0.c0)))AND((rt0.c0 IN (rt0.c1)))) WHERE ((((((-582275471)) NOT BETWEEN ((t0.c1)) AND ((-2.04239137E9))))-((~ (t0.c1))))) ORDER BY CASE (+ (t0.c1))  WHEN ((((t0.c1)OR(t0.c0)))AND(t0.c2)) THEN t0.c2 END  NULLS FIRST, ((((NULL)OR(CASE t0.c0  WHEN t0.c1 THEN rt0.c1 WHEN 0.4805689985995434 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 END)))OR(NULL)) ASC, ((LIKE(rt0.c0, rt0.c1, '{'))!=(CAST(t0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((((((-582275471)) NOT BETWEEN ((t0.c1)) AND ((-2.04239137E9))))-((~ (t0.c1))))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)<>(t0.c0)))AND((rt0.c0 IN (rt0.c1)))) ORDER BY CASE (+ (t0.c1))  WHEN ((((t0.c1)OR(t0.c0)))AND(t0.c2)) THEN t0.c2 END  NULLS FIRST, ((((NULL)OR(CASE t0.c0  WHEN t0.c1 THEN rt0.c1 WHEN 0.4805689985995434 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 END)))OR(NULL)) ASC, ((LIKE(rt0.c0, rt0.c1, '{'))!=(CAST(t0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)<>(t0.c0)))AND((rt0.c0 IN (rt0.c1)))) WHERE ((((((-582275471)) NOT BETWEEN ((t0.c1)) AND ((-2.04239137E9))))-((~ (t0.c1))))) ORDER BY CASE (+ (t0.c1))  WHEN ((((t0.c1)OR(t0.c0)))AND(t0.c2)) THEN t0.c2 END  NULLS FIRST, ((((NULL)OR(CASE t0.c0  WHEN t0.c1 THEN rt0.c1 WHEN 0.4805689985995434 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 END)))OR(NULL)) ASC, ((LIKE(rt0.c0, rt0.c1, '{'))!=(CAST(t0.c0 AS BLOB)));
SELECT ALL * FROM rt0 WHERE (LIKELY(DISTINCT LOWER(DISTINCT ' vdDQ'))) ORDER BY CASE WHEN 0.14350233117558164 THEN rt0.c1 WHEN CASE WHEN rt0.c1 THEN 1063810657 WHEN '0.43357261894838406' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c0 COLLATE NOCASE WHEN (- (rt0.c0)) THEN CAST(rt0.c1 AS INTEGER) ELSE UPPER(DISTINCT rt0.c2) END  NULLS LAST, CAST((x'778a' IN (rt0.c1)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT LOWER(DISTINCT ' vdDQ'))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN 0.14350233117558164 THEN rt0.c1 WHEN CASE WHEN rt0.c1 THEN 1063810657 WHEN '0.43357261894838406' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c0 COLLATE NOCASE WHEN (- (rt0.c0)) THEN CAST(rt0.c1 AS INTEGER) ELSE UPPER(DISTINCT rt0.c2) END  NULLS LAST, CAST((x'778a' IN (rt0.c1)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (LIKELY(DISTINCT LOWER(DISTINCT ' vdDQ'))) ORDER BY CASE WHEN 0.14350233117558164 THEN rt0.c1 WHEN CASE WHEN rt0.c1 THEN 1063810657 WHEN '0.43357261894838406' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c0 COLLATE NOCASE WHEN (- (rt0.c0)) THEN CAST(rt0.c1 AS INTEGER) ELSE UPPER(DISTINCT rt0.c2) END  NULLS LAST, CAST((x'778a' IN (rt0.c1)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT LOWER(DISTINCT ' vdDQ'))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN 0.14350233117558164 THEN rt0.c1 WHEN CASE WHEN rt0.c1 THEN 1063810657 WHEN '0.43357261894838406' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c0 COLLATE NOCASE WHEN (- (rt0.c0)) THEN CAST(rt0.c1 AS INTEGER) ELSE UPPER(DISTINCT rt0.c2) END  NULLS LAST, CAST((x'778a' IN (rt0.c1)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (LIKELY(DISTINCT LOWER(DISTINCT ' vdDQ'))) ORDER BY CASE WHEN 0.14350233117558164 THEN rt0.c1 WHEN CASE WHEN rt0.c1 THEN 1063810657 WHEN '0.43357261894838406' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c0 COLLATE NOCASE WHEN (- (rt0.c0)) THEN CAST(rt0.c1 AS INTEGER) ELSE UPPER(DISTINCT rt0.c2) END  NULLS LAST, CAST((x'778a' IN (rt0.c1)) AS TEXT) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c2)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((((rt0.c0)OR(rt0.c1)))AND(t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((((rt0.c0)OR(rt0.c1)))AND(t0.c2)))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c2)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((((rt0.c0)OR(rt0.c1)))AND(t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((((rt0.c0)OR(rt0.c1)))AND(t0.c2)))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c2)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((((rt0.c0)OR(rt0.c1)))AND(t0.c2))))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (ABS(DISTINCT vt0.c0)) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) BETWEEN (ABS(DISTINCT vt0.c0)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (ABS(DISTINCT vt0.c0)) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) BETWEEN (ABS(DISTINCT vt0.c0)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (ABS(DISTINCT vt0.c0)) AND ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOTNULL));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((t0.c2) BETWEEN (((((t0.c0)AND(t0.c0)))AND(t0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (x''))))) ORDER BY LIKELIHOOD(DISTINCT t0.c2, 0.2635615002117653) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) BETWEEN (((((t0.c0)AND(t0.c0)))AND(t0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (x''))))) IS TRUE)  as count FROM t0, rt0 ORDER BY LIKELIHOOD(DISTINCT t0.c2, 0.2635615002117653) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((t0.c2) BETWEEN (((((t0.c0)AND(t0.c0)))AND(t0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (x''))))) ORDER BY LIKELIHOOD(DISTINCT t0.c2, 0.2635615002117653) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) BETWEEN (((((t0.c0)AND(t0.c0)))AND(t0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (x''))))) IS TRUE)  as count FROM t0, rt0 ORDER BY LIKELIHOOD(DISTINCT t0.c2, 0.2635615002117653) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((t0.c2) BETWEEN (((((t0.c0)AND(t0.c0)))AND(t0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (x''))))) ORDER BY LIKELIHOOD(DISTINCT t0.c2, 0.2635615002117653) ASC;
SELECT * FROM t0, rt0, vt0 WHERE (((CASE WHEN t0.c2 THEN vt0.c1 ELSE t0.c2 END) ISNULL)) ORDER BY ((((rt0.c0)GLOB(vt0.c0)))==(((((t0.c0)AND(vt0.c1)))OR(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c2 THEN vt0.c1 ELSE t0.c2 END) ISNULL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((rt0.c0)GLOB(vt0.c0)))==(((((t0.c0)AND(vt0.c1)))OR(rt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM t0, rt0, vt0 WHERE (((CASE WHEN t0.c2 THEN vt0.c1 ELSE t0.c2 END) ISNULL)) ORDER BY ((((rt0.c0)GLOB(vt0.c0)))==(((((t0.c0)AND(vt0.c1)))OR(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c2 THEN vt0.c1 ELSE t0.c2 END) ISNULL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((rt0.c0)GLOB(vt0.c0)))==(((((t0.c0)AND(vt0.c1)))OR(rt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM t0, rt0, vt0 WHERE (((CASE WHEN t0.c2 THEN vt0.c1 ELSE t0.c2 END) ISNULL)) ORDER BY ((((rt0.c0)GLOB(vt0.c0)))==(((((t0.c0)AND(vt0.c1)))OR(rt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((1.296420492E9)>=(LIKELY(t0.c2)))) ORDER BY CASE WHEN vt0.c1 THEN (vt0.c1 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((((1.296420492E9)>=(LIKELY(t0.c2)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN vt0.c1 THEN (vt0.c1 IN ()) END ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((1.296420492E9)>=(LIKELY(t0.c2)))) ORDER BY CASE WHEN vt0.c1 THEN (vt0.c1 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((((1.296420492E9)>=(LIKELY(t0.c2)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN vt0.c1 THEN (vt0.c1 IN ()) END ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((1.296420492E9)>=(LIKELY(t0.c2)))) ORDER BY CASE WHEN vt0.c1 THEN (vt0.c1 IN ()) END ASC;
SELECT * FROM t0 WHERE ((((t0.c1 IN ()))*(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END))) ORDER BY (- (((t0.c2)=(t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ()))*(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c2)=(t0.c1))))  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c1 IN ()))*(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END))) ORDER BY (- (((t0.c2)=(t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ()))*(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c2)=(t0.c1))))  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c1 IN ()))*(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END))) ORDER BY (- (((t0.c2)=(t0.c1))))  NULLS LAST;
SELECT * FROM rt0 NOT INDEXED, t0, vt0 WHERE ((((t0.c0 IN ()))&((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))&((~ (vt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0 NOT INDEXED, t0, vt0 WHERE ((((t0.c0 IN ()))&((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))&((~ (vt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0 NOT INDEXED, t0, vt0 WHERE ((((t0.c0 IN ()))&((~ (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, t0.c0))))OR((((-1042932150, '5[&k', vt0.c0))>((vt0.c1, t0.c0, t0.c2))))))AND(((((((((vt0.c1)OR(0.1809499577848278)))OR(t0.c1)))AND(t0.c1)))AND(vt0.c1)))))OR(0.1917002358331228)))AND(t0.c1 COLLATE RTRIM))) ORDER BY t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, t0.c0))))OR((((-1042932150, '5[&k', vt0.c0))>((vt0.c1, t0.c0, t0.c2))))))AND(((((((((vt0.c1)OR(0.1809499577848278)))OR(t0.c1)))AND(t0.c1)))AND(vt0.c1)))))OR(0.1917002358331228)))AND(t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, t0.c0))))OR((((-1042932150, '5[&k', vt0.c0))>((vt0.c1, t0.c0, t0.c2))))))AND(((((((((vt0.c1)OR(0.1809499577848278)))OR(t0.c1)))AND(t0.c1)))AND(vt0.c1)))))OR(0.1917002358331228)))AND(t0.c1 COLLATE RTRIM))) ORDER BY t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, t0.c0))))OR((((-1042932150, '5[&k', vt0.c0))>((vt0.c1, t0.c0, t0.c2))))))AND(((((((((vt0.c1)OR(0.1809499577848278)))OR(t0.c1)))AND(t0.c1)))AND(vt0.c1)))))OR(0.1917002358331228)))AND(t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, t0.c0))))OR((((-1042932150, '5[&k', vt0.c0))>((vt0.c1, t0.c0, t0.c2))))))AND(((((((((vt0.c1)OR(0.1809499577848278)))OR(t0.c1)))AND(t0.c1)))AND(vt0.c1)))))OR(0.1917002358331228)))AND(t0.c1 COLLATE RTRIM))) ORDER BY t0.c2  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))OR(t0.c2)))AND(t0.c0)))OR((t0.c2 IN (t0.c1)))))AND(t0.c1 COLLATE RTRIM)))OR(CASE WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))OR(t0.c2)))AND(t0.c0)))OR((t0.c2 IN (t0.c1)))))AND(t0.c1 COLLATE RTRIM)))OR(CASE WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))OR(t0.c2)))AND(t0.c0)))OR((t0.c2 IN (t0.c1)))))AND(t0.c1 COLLATE RTRIM)))OR(CASE WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))OR(t0.c2)))AND(t0.c0)))OR((t0.c2 IN (t0.c1)))))AND(t0.c1 COLLATE RTRIM)))OR(CASE WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))OR(t0.c2)))AND(t0.c0)))OR((t0.c2 IN (t0.c1)))))AND(t0.c1 COLLATE RTRIM)))OR(CASE WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0) NOT NULL))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN rt0.c2 THEN t0.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN t0.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN rt0.c2 THEN t0.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN t0.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN rt0.c2 THEN t0.c2 END COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((t0.c1) ISNULL) IN ())) ORDER BY (NULL IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1) ISNULL) IN ())) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (NULL IN ()) ASC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((t0.c1) ISNULL) IN ())) ORDER BY (NULL IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1) ISNULL) IN ())) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (NULL IN ()) ASC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((t0.c1) ISNULL) IN ())) ORDER BY (NULL IN ()) ASC;
SELECT ALL * FROM t0, rt0, vt0 WHERE ((+ (((t0.c1)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c1)<<(rt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((+ (((t0.c1)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c1)<<(rt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((+ (((t0.c1)<<(rt0.c0)))));
SELECT * FROM vt0 INNER JOIN t0 ON (0.7143906389476881 IN ()) WHERE (t0.c1) ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (0.7143906389476881 IN ()) ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS REAL) END  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN t0 ON (0.7143906389476881 IN ()) WHERE (t0.c1) ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (0.7143906389476881 IN ()) ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS REAL) END  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN t0 ON (0.7143906389476881 IN ()) WHERE (t0.c1) ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS REAL) END  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c2)) BETWEEN ((('gxewai' IN ()))) AND (((t0.c2 IN (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN ((('gxewai' IN ()))) AND (((t0.c2 IN (t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c2)) BETWEEN ((('gxewai' IN ()))) AND (((t0.c2 IN (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN ((('gxewai' IN ()))) AND (((t0.c2 IN (t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c2)) BETWEEN ((('gxewai' IN ()))) AND (((t0.c2 IN (t0.c2))))));
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c2) ISNULL))AND(((((t0.c0)OR(t0.c2)))OR('-833694915')))))AND(t0.c2 COLLATE RTRIM)))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)))AND(CAST(t0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2) ISNULL))AND(((((t0.c0)OR(t0.c2)))OR('-833694915')))))AND(t0.c2 COLLATE RTRIM)))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)))AND(CAST(t0.c2 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c2) ISNULL))AND(((((t0.c0)OR(t0.c2)))OR('-833694915')))))AND(t0.c2 COLLATE RTRIM)))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)))AND(CAST(t0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2) ISNULL))AND(((((t0.c0)OR(t0.c2)))OR('-833694915')))))AND(t0.c2 COLLATE RTRIM)))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)))AND(CAST(t0.c2 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c2) ISNULL))AND(((((t0.c0)OR(t0.c2)))OR('-833694915')))))AND(t0.c2 COLLATE RTRIM)))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)))AND(CAST(t0.c2 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON '' RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT rt0.c2, ((vt0.c0) BETWEEN (t0.c1) AND (rt0.c0))) WHERE (((((t0.c0)>(rt0.c2)))<>((- (-1684216631))))) ORDER BY (((vt0.c1, t0.c1, 0.5321119454493933)) NOT BETWEEN ((t0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) COLLATE NOCASE ASC, (+ (LIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(rt0.c2)))<>((- (-1684216631))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON '' RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT rt0.c2, ((vt0.c0) BETWEEN (t0.c1) AND (rt0.c0))) ORDER BY (((vt0.c1, t0.c1, 0.5321119454493933)) NOT BETWEEN ((t0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) COLLATE NOCASE ASC, (+ (LIKELY(vt0.c0))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON '' RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT rt0.c2, ((vt0.c0) BETWEEN (t0.c1) AND (rt0.c0))) WHERE (((((t0.c0)>(rt0.c2)))<>((- (-1684216631))))) ORDER BY (((vt0.c1, t0.c1, 0.5321119454493933)) NOT BETWEEN ((t0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) COLLATE NOCASE ASC, (+ (LIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(rt0.c2)))<>((- (-1684216631))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON '' RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT rt0.c2, ((vt0.c0) BETWEEN (t0.c1) AND (rt0.c0))) ORDER BY (((vt0.c1, t0.c1, 0.5321119454493933)) NOT BETWEEN ((t0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) COLLATE NOCASE ASC, (+ (LIKELY(vt0.c0))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON '' RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT rt0.c2, ((vt0.c0) BETWEEN (t0.c1) AND (rt0.c0))) WHERE (((((t0.c0)>(rt0.c2)))<>((- (-1684216631))))) ORDER BY (((vt0.c1, t0.c1, 0.5321119454493933)) NOT BETWEEN ((t0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) COLLATE NOCASE ASC, (+ (LIKELY(vt0.c0)));
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c1 COLLATE BINARY)AND(((rt0.c1)+(rt0.c2)))))AND(CAST(rt0.c2 AS NUMERIC))))OR((~ (rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c0)=(rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c1 COLLATE BINARY)AND(((rt0.c1)+(rt0.c2)))))AND(CAST(rt0.c2 AS NUMERIC))))OR((~ (rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c0)==(rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c1 COLLATE BINARY)AND(((rt0.c1)+(rt0.c2)))))AND(CAST(rt0.c2 AS NUMERIC))))OR((~ (rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c0)=(rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c1 COLLATE BINARY)AND(((rt0.c1)+(rt0.c2)))))AND(CAST(rt0.c2 AS NUMERIC))))OR((~ (rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c0)==(rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c1 COLLATE BINARY)AND(((rt0.c1)+(rt0.c2)))))AND(CAST(rt0.c2 AS NUMERIC))))OR((~ (rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c0)=(rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN INSTR(rt0.c2, rt0.c0) THEN rt0.c0 COLLATE BINARY WHEN (rt0.c1 IN (rt0.c1)) THEN NULL COLLATE RTRIM WHEN (('414298490')>=(rt0.c1)) THEN ((rt0.c1)<=(rt0.c0)) END) ORDER BY CAST(0.7093433262658935 AS INTEGER)  NULLS FIRST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN INSTR(rt0.c2, rt0.c0) THEN rt0.c0 COLLATE BINARY WHEN (rt0.c1 IN (rt0.c1)) THEN NULL COLLATE RTRIM WHEN (('414298490')>=(rt0.c1)) THEN ((rt0.c1)<=(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(0.7093433262658935 AS INTEGER)  NULLS FIRST, NULL  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN INSTR(rt0.c2, rt0.c0) THEN rt0.c0 COLLATE BINARY WHEN (rt0.c1 IN (rt0.c1)) THEN NULL COLLATE RTRIM WHEN (('414298490')>=(rt0.c1)) THEN ((rt0.c1)<=(rt0.c0)) END) ORDER BY CAST(0.7093433262658935 AS INTEGER)  NULLS FIRST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN INSTR(rt0.c2, rt0.c0) THEN rt0.c0 COLLATE BINARY WHEN (rt0.c1 IN (rt0.c1)) THEN NULL COLLATE RTRIM WHEN (('414298490')>=(rt0.c1)) THEN ((rt0.c1)<=(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(0.7093433262658935 AS INTEGER)  NULLS FIRST, NULL  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN INSTR(rt0.c2, rt0.c0) THEN rt0.c0 COLLATE BINARY WHEN (rt0.c1 IN (rt0.c1)) THEN NULL COLLATE RTRIM WHEN (('414298490')>=(rt0.c1)) THEN ((rt0.c1)<=(rt0.c0)) END) ORDER BY CAST(0.7093433262658935 AS INTEGER)  NULLS FIRST, NULL  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((((t0.c1)OR(t0.c1)))OR(NULL)))AND(t0.c2)))AND(x'08c2')))AND(CAST(t0.c0 AS TEXT))))OR(((x'e426')+(t0.c2)))))AND(((t0.c2) NOTNULL))))AND((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((t0.c1)OR(t0.c1)))OR(NULL)))AND(t0.c2)))AND(x'08c2')))AND(CAST(t0.c0 AS TEXT))))OR(((x'e426')+(t0.c2)))))AND(((t0.c2) NOTNULL))))AND((NOT (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((((t0.c1)OR(t0.c1)))OR(NULL)))AND(t0.c2)))AND(x'08c2')))AND(CAST(t0.c0 AS TEXT))))OR(((x'e426')+(t0.c2)))))AND(((t0.c2) NOTNULL))))AND((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((t0.c1)OR(t0.c1)))OR(NULL)))AND(t0.c2)))AND(x'08c2')))AND(CAST(t0.c0 AS TEXT))))OR(((x'e426')+(t0.c2)))))AND(((t0.c2) NOTNULL))))AND((NOT (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((((t0.c1)OR(t0.c1)))OR(NULL)))AND(t0.c2)))AND(x'08c2')))AND(CAST(t0.c0 AS TEXT))))OR(((x'e426')+(t0.c2)))))AND(((t0.c2) NOTNULL))))AND((NOT (t0.c2)))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 NOT INDEXED WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 NOT INDEXED WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 NOT INDEXED WHERE (t0.c0);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) ORDER BY CAST(CAST(t0.c2 AS TEXT) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(CAST(t0.c2 AS TEXT) AS BLOB) DESC);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) ORDER BY CAST(CAST(t0.c2 AS TEXT) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(CAST(t0.c2 AS TEXT) AS BLOB) DESC);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) ORDER BY CAST(CAST(t0.c2 AS TEXT) AS BLOB) DESC;
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((t0.c2 IN ())) NOTNULL) CROSS JOIN vt0 ON (((CASE WHEN '' THEN t0.c0 END))=((json_patch(rt0.c1, rt0.c0)))) WHERE (((TYPEOF(DISTINCT rt0.c1))%(((t0.c2) NOT BETWEEN (rt0.c2) AND (t0.c2))))) ORDER BY (t0.c1 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c1))%(((t0.c2) NOT BETWEEN (rt0.c2) AND (t0.c2))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((t0.c2 IN ())) NOTNULL) CROSS JOIN vt0 ON (((CASE WHEN '' THEN t0.c0 END))=((json_patch(rt0.c1, rt0.c0)))) ORDER BY (t0.c1 COLLATE BINARY IN ()));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((t0.c2 IN ())) NOTNULL) CROSS JOIN vt0 ON (((CASE WHEN '' THEN t0.c0 END))=((json_patch(rt0.c1, rt0.c0)))) WHERE (((TYPEOF(DISTINCT rt0.c1))%(((t0.c2) NOT BETWEEN (rt0.c2) AND (t0.c2))))) ORDER BY (t0.c1 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c1))%(((t0.c2) NOT BETWEEN (rt0.c2) AND (t0.c2))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((t0.c2 IN ())) NOTNULL) CROSS JOIN vt0 ON (((CASE WHEN '' THEN t0.c0 END))=((json_patch(rt0.c1, rt0.c0)))) ORDER BY (t0.c1 COLLATE BINARY IN ()));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((t0.c2 IN ())) NOTNULL) CROSS JOIN vt0 ON (((CASE WHEN '' THEN t0.c0 END))=((json_patch(rt0.c1, rt0.c0)))) WHERE (((TYPEOF(DISTINCT rt0.c1))%(((t0.c2) NOT BETWEEN (rt0.c2) AND (t0.c2))))) ORDER BY (t0.c1 COLLATE BINARY IN ());
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c2))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c2))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (t0.c2)));
SELECT * FROM vt0 WHERE (((((~ (vt0.c0)), (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((-1.000640203E9, vt0.c0, vt0.c1)) AND ((vt0.c1, x'', vt0.c0))), ''))>((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN '3W' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)LIKE(vt0.c0)))))) ORDER BY (+ (vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0)), (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((-1.000640203E9, vt0.c0, vt0.c1)) AND ((vt0.c1, x'', vt0.c0))), ''))>((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN '3W' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)LIKE(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((~ (vt0.c0)), (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((-1.000640203E9, vt0.c0, vt0.c1)) AND ((vt0.c1, x'', vt0.c0))), ''))>((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN '3W' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)LIKE(vt0.c0)))))) ORDER BY (+ (vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0)), (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((-1.000640203E9, vt0.c0, vt0.c1)) AND ((vt0.c1, x'', vt0.c0))), ''))>((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN '3W' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)LIKE(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((~ (vt0.c0)), (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((-1.000640203E9, vt0.c0, vt0.c1)) AND ((vt0.c1, x'', vt0.c0))), ''))>((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN '3W' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)LIKE(vt0.c0)))))) ORDER BY (+ (vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (- (CAST(t0.c0 AS BLOB))) WHERE ((((((vt0.c0)<=(t0.c2))))<=((((t0.c1)<=(t0.c1)))))) ORDER BY (~ (689810605)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)<=(t0.c2))))<=((((t0.c1)<=(t0.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (- (CAST(t0.c0 AS BLOB))) ORDER BY (~ (689810605)) DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (- (CAST(t0.c0 AS BLOB))) WHERE ((((((vt0.c0)<=(t0.c2))))<=((((t0.c1)<=(t0.c1)))))) ORDER BY (~ (689810605)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)<=(t0.c2))))<=((((t0.c1)<=(t0.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (- (CAST(t0.c0 AS BLOB))) ORDER BY (~ (689810605)) DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (- (CAST(t0.c0 AS BLOB))) WHERE ((((((vt0.c0)<=(t0.c2))))<=((((t0.c1)<=(t0.c1)))))) ORDER BY (~ (689810605)) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((('')&(rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c2  NULLS LAST, MIN(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)), NULLIF(rt0.c1, rt0.c2)) DESC, (((rt0.c1)) BETWEEN ((((rt0.c0)-(rt0.c0)))) AND ((CAST(x'ceed' AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('')&(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST, MIN(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)), NULLIF(rt0.c1, rt0.c2)) DESC, (((rt0.c1)) BETWEEN ((((rt0.c0)-(rt0.c0)))) AND ((CAST(x'ceed' AS REAL))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((('')&(rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c2  NULLS LAST, MIN(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)), NULLIF(rt0.c1, rt0.c2)) DESC, (((rt0.c1)) BETWEEN ((((rt0.c0)-(rt0.c0)))) AND ((CAST(x'ceed' AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('')&(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST, MIN(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)), NULLIF(rt0.c1, rt0.c2)) DESC, (((rt0.c1)) BETWEEN ((((rt0.c0)-(rt0.c0)))) AND ((CAST(x'ceed' AS REAL))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((('')&(rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c2  NULLS LAST, MIN(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)), NULLIF(rt0.c1, rt0.c2)) DESC, (((rt0.c1)) BETWEEN ((((rt0.c0)-(rt0.c0)))) AND ((CAST(x'ceed' AS REAL))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((('') IS TRUE)))>=(('-1733416005'))) WHERE ((rt0.c2 IN (CAST(rt0.c0 AS NUMERIC), ((rt0.c2) BETWEEN (rt0.c1) AND (t0.c1))))) ORDER BY ((CAST(rt0.c2 AS NUMERIC))|(rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (CAST(rt0.c0 AS NUMERIC), ((rt0.c2) BETWEEN (rt0.c1) AND (t0.c1))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((('') IS TRUE)))>=(('-1733416005'))) ORDER BY ((CAST(rt0.c2 AS NUMERIC))|(rt0.c2 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((('') IS TRUE)))>=(('-1733416005'))) WHERE ((rt0.c2 IN (CAST(rt0.c0 AS NUMERIC), ((rt0.c2) BETWEEN (rt0.c1) AND (t0.c1))))) ORDER BY ((CAST(rt0.c2 AS NUMERIC))|(rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (CAST(rt0.c0 AS NUMERIC), ((rt0.c2) BETWEEN (rt0.c1) AND (t0.c1))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((('') IS TRUE)))>=(('-1733416005'))) ORDER BY ((CAST(rt0.c2 AS NUMERIC))|(rt0.c2 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((('') IS TRUE)))>=(('-1733416005'))) WHERE ((rt0.c2 IN (CAST(rt0.c0 AS NUMERIC), ((rt0.c2) BETWEEN (rt0.c1) AND (t0.c1))))) ORDER BY ((CAST(rt0.c2 AS NUMERIC))|(rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL * FROM t0, rt0, vt0 WHERE (-2042391370);
SELECT SUM(count) FROM (SELECT ALL ((-2042391370) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (-2042391370);
SELECT SUM(count) FROM (SELECT ALL ((-2042391370) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (-2042391370);
SELECT * FROM vt0, t0 NOT INDEXED WHERE (((TYPEOF(vt0.c0)) BETWEEN (((((((((t0.c0)OR(vt0.c1)))AND(t0.c0)))OR(t0.c0)))OR(t0.c2))) AND (json_patch(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(vt0.c0)) BETWEEN (((((((((t0.c0)OR(vt0.c1)))AND(t0.c0)))OR(t0.c0)))OR(t0.c2))) AND (json_patch(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 NOT INDEXED WHERE (((TYPEOF(vt0.c0)) BETWEEN (((((((((t0.c0)OR(vt0.c1)))AND(t0.c0)))OR(t0.c0)))OR(t0.c2))) AND (json_patch(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(vt0.c0)) BETWEEN (((((((((t0.c0)OR(vt0.c1)))AND(t0.c0)))OR(t0.c0)))OR(t0.c2))) AND (json_patch(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 NOT INDEXED WHERE (((TYPEOF(vt0.c0)) BETWEEN (((((((((t0.c0)OR(vt0.c1)))AND(t0.c0)))OR(t0.c0)))OR(t0.c2))) AND (json_patch(vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c1)==(rt0.c2)))<(((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)==(rt0.c2)))<(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c1)==(rt0.c2)))<(((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)==(rt0.c2)))<(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c1)==(rt0.c2)))<(((vt0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((NULL)<(t0.c2)))/((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)<(t0.c2)))/((vt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((NULL)<(t0.c2)))/((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)<(t0.c2)))/((vt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((NULL)<(t0.c2)))/((vt0.c1 IN ()))));
SELECT * FROM t0 WHERE (LIKE(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END, ((t0.c2)+(t0.c0)))) ORDER BY ((UPPER(DISTINCT t0.c2))GLOB((t0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END, ((t0.c2)+(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((UPPER(DISTINCT t0.c2))GLOB((t0.c0 IN ()))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (LIKE(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END, ((t0.c2)+(t0.c0)))) ORDER BY ((UPPER(DISTINCT t0.c2))GLOB((t0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END, ((t0.c2)+(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((UPPER(DISTINCT t0.c2))GLOB((t0.c0 IN ()))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (LIKE(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END, ((t0.c2)+(t0.c0)))) ORDER BY ((UPPER(DISTINCT t0.c2))GLOB((t0.c0 IN ()))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON rt0.c1 FULL OUTER JOIN vt0 ON NULL WHERE (((rt0.c0)<=(((t0.c2) NOT NULL)))) ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN t0.c2 END)|(((t0.c1) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<=(((t0.c2) NOT NULL)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON rt0.c1 FULL OUTER JOIN vt0 ON NULL ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN t0.c2 END)|(((t0.c1) NOT NULL)))  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON rt0.c1 FULL OUTER JOIN vt0 ON NULL WHERE (((rt0.c0)<=(((t0.c2) NOT NULL)))) ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN t0.c2 END)|(((t0.c1) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<=(((t0.c2) NOT NULL)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON rt0.c1 FULL OUTER JOIN vt0 ON NULL ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN t0.c2 END)|(((t0.c1) NOT NULL)))  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON rt0.c1 FULL OUTER JOIN vt0 ON NULL WHERE (((rt0.c0)<=(((t0.c2) NOT NULL)))) ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN t0.c2 END)|(((t0.c1) NOT NULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST(((rt0.c1)/(vt0.c0)) AS NUMERIC)) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)/(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST(((rt0.c1)/(vt0.c0)) AS NUMERIC)) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)/(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST(((rt0.c1)/(vt0.c0)) AS NUMERIC)) ORDER BY vt0.c1  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (0.041626023529235945 IN ()) WHERE (CAST((+ (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (0.041626023529235945 IN ()));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (0.041626023529235945 IN ()) WHERE (CAST((+ (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (0.041626023529235945 IN ()));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (0.041626023529235945 IN ()) WHERE (CAST((+ (t0.c0)) AS NUMERIC));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON x'' FULL OUTER JOIN t0 ON ((((vt0.c0)>>(rt0.c1))) NOTNULL) WHERE (((((((((((((rt0.c2)AND(t0.c2)))OR('')))AND(rt0.c0)))AND(vt0.c1)))OR(t0.c0)))AND(0.4361120310352512)) COLLATE RTRIM) ORDER BY ('-1277939406' IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(t0.c2)))OR('')))AND(rt0.c0)))AND(vt0.c1)))OR(t0.c0)))AND(0.4361120310352512)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON x'' FULL OUTER JOIN t0 ON ((((vt0.c0)>>(rt0.c1))) NOTNULL) ORDER BY ('-1277939406' IN ()) COLLATE RTRIM);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON x'' FULL OUTER JOIN t0 ON ((((vt0.c0)>>(rt0.c1))) NOTNULL) WHERE (((((((((((((rt0.c2)AND(t0.c2)))OR('')))AND(rt0.c0)))AND(vt0.c1)))OR(t0.c0)))AND(0.4361120310352512)) COLLATE RTRIM) ORDER BY ('-1277939406' IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(t0.c2)))OR('')))AND(rt0.c0)))AND(vt0.c1)))OR(t0.c0)))AND(0.4361120310352512)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON x'' FULL OUTER JOIN t0 ON ((((vt0.c0)>>(rt0.c1))) NOTNULL) ORDER BY ('-1277939406' IN ()) COLLATE RTRIM);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON x'' FULL OUTER JOIN t0 ON ((((vt0.c0)>>(rt0.c1))) NOTNULL) WHERE (((((((((((((rt0.c2)AND(t0.c2)))OR('')))AND(rt0.c0)))AND(vt0.c1)))OR(t0.c0)))AND(0.4361120310352512)) COLLATE RTRIM) ORDER BY ('-1277939406' IN ()) COLLATE RTRIM;
SELECT * FROM rt0 WHERE (((((HEX(DISTINCT rt0.c1))AND(((rt0.c0) ISNULL))))OR(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY ((((((((rt0.c1)AND(rt0.c0)))AND('){(''')))OR(0.7829745002888318)))AND(((rt0.c1)<=(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((HEX(DISTINCT rt0.c1))AND(((rt0.c0) ISNULL))))OR(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c1)AND(rt0.c0)))AND('){(''')))OR(0.7829745002888318)))AND(((rt0.c1)<=(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((HEX(DISTINCT rt0.c1))AND(((rt0.c0) ISNULL))))OR(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY ((((((((rt0.c1)AND(rt0.c0)))AND('){(''')))OR(0.7829745002888318)))AND(((rt0.c1)<=(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((HEX(DISTINCT rt0.c1))AND(((rt0.c0) ISNULL))))OR(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c1)AND(rt0.c0)))AND('){(''')))OR(0.7829745002888318)))AND(((rt0.c1)<=(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((HEX(DISTINCT rt0.c1))AND(((rt0.c0) ISNULL))))OR(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY ((((((((rt0.c1)AND(rt0.c0)))AND('){(''')))OR(0.7829745002888318)))AND(((rt0.c1)<=(rt0.c2)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))/((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))/((NOT (NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))/((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))/((NOT (NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))/((NOT (NULL)))));
SELECT * FROM rt0, vt0, t0 WHERE ((((t0.c1 IN ())) NOT BETWEEN (((t0.c1)||(t0.c1))) AND (((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN ())) NOT BETWEEN (((t0.c1)||(t0.c1))) AND (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((((t0.c1 IN ())) NOT BETWEEN (((t0.c1)||(t0.c1))) AND (((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN ())) NOT BETWEEN (((t0.c1)||(t0.c1))) AND (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((((t0.c1 IN ())) NOT BETWEEN (((t0.c1)||(t0.c1))) AND (((vt0.c1) NOTNULL))));
SELECT * FROM vt0 WHERE (0.8946225857734175);
SELECT SUM(count) FROM (SELECT ALL ((0.8946225857734175) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.8946225857734175);
SELECT SUM(count) FROM (SELECT ALL ((0.8946225857734175) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.8946225857734175);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON t0.c2 WHERE ('370884769');
SELECT SUM(count) FROM (SELECT (('370884769') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON t0.c2);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON t0.c2 WHERE ('370884769');
SELECT SUM(count) FROM (SELECT (('370884769') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON t0.c2);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON t0.c2 WHERE ('370884769');
SELECT * FROM rt0, t0, vt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c1)))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((t0.c2)IS NOT(t0.c0))))) ORDER BY HEX(((((rt0.c0)OR(vt0.c0)))AND('1~_\n젢'))) DESC, (((rt0.c0)LIKE(t0.c0)) IN ()) ASC  NULLS FIRST, json_type(CAST(0.30884554244222817 AS REAL)), (((vt0.c1)) BETWEEN ((LIKELIHOOD(vt0.c1, 0.03810411637160749))) AND ((NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c1)))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((t0.c2)IS NOT(t0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY HEX(((((rt0.c0)OR(vt0.c0)))AND('1~_\n젢'))) DESC, (((rt0.c0)LIKE(t0.c0)) IN ()) ASC  NULLS FIRST, json_type(CAST(0.30884554244222817 AS REAL)), (((vt0.c1)) BETWEEN ((LIKELIHOOD(vt0.c1, 0.03810411637160749))) AND ((NULL))) DESC);
SELECT * FROM rt0, t0, vt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c1)))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((t0.c2)IS NOT(t0.c0))))) ORDER BY HEX(((((rt0.c0)OR(vt0.c0)))AND('1~_\n젢'))) DESC, (((rt0.c0)LIKE(t0.c0)) IN ()) ASC  NULLS FIRST, json_type(CAST(0.30884554244222817 AS REAL)), (((vt0.c1)) BETWEEN ((LIKELIHOOD(vt0.c1, 0.03810411637160749))) AND ((NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c1)))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((t0.c2)IS NOT(t0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY HEX(((((rt0.c0)OR(vt0.c0)))AND('1~_\n젢'))) DESC, (((rt0.c0)LIKE(t0.c0)) IN ()) ASC  NULLS FIRST, json_type(CAST(0.30884554244222817 AS REAL)), (((vt0.c1)) BETWEEN ((LIKELIHOOD(vt0.c1, 0.03810411637160749))) AND ((NULL))) DESC);
SELECT * FROM rt0, t0, vt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c1)))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((t0.c2)IS NOT(t0.c0))))) ORDER BY HEX(((((rt0.c0)OR(vt0.c0)))AND('1~_\n젢'))) DESC, (((rt0.c0)LIKE(t0.c0)) IN ()) ASC  NULLS FIRST, json_type(CAST(0.30884554244222817 AS REAL)), (((vt0.c1)) BETWEEN ((LIKELIHOOD(vt0.c1, 0.03810411637160749))) AND ((NULL))) DESC;
SELECT * FROM vt0, rt0 NOT INDEXED WHERE (((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) ORDER BY ((rt0.c2) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2) IS TRUE) ASC);
SELECT * FROM vt0, rt0 NOT INDEXED WHERE (((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) ORDER BY ((rt0.c2) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2) IS TRUE) ASC);
SELECT * FROM vt0, rt0 NOT INDEXED WHERE (((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) ORDER BY ((rt0.c2) IS TRUE) ASC;
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c2 THEN t0.c1 END WHEN t0.c2 THEN UPPER(rt0.c1) WHEN TRIM(t0.c0) THEN NULL ELSE ((rt0.c0)IS NOT(rt0.c2)) END) ORDER BY (((t0.c2))>(((t0.c0 IN ())))), CAST(CASE WHEN rt0.c0 THEN t0.c2 WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c0 END AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c2 THEN t0.c1 END WHEN t0.c2 THEN UPPER(rt0.c1) WHEN TRIM(t0.c0) THEN NULL ELSE ((rt0.c0)IS NOT(rt0.c2)) END) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c2))>(((t0.c0 IN ())))), CAST(CASE WHEN rt0.c0 THEN t0.c2 WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c0 END AS BLOB) ASC);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c2 THEN t0.c1 END WHEN t0.c2 THEN UPPER(rt0.c1) WHEN TRIM(t0.c0) THEN NULL ELSE ((rt0.c0)IS NOT(rt0.c2)) END) ORDER BY (((t0.c2))>(((t0.c0 IN ())))), CAST(CASE WHEN rt0.c0 THEN t0.c2 WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c0 END AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c2 THEN t0.c1 END WHEN t0.c2 THEN UPPER(rt0.c1) WHEN TRIM(t0.c0) THEN NULL ELSE ((rt0.c0)IS NOT(rt0.c2)) END) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c2))>(((t0.c0 IN ())))), CAST(CASE WHEN rt0.c0 THEN t0.c2 WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c0 END AS BLOB) ASC);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c2 THEN t0.c1 END WHEN t0.c2 THEN UPPER(rt0.c1) WHEN TRIM(t0.c0) THEN NULL ELSE ((rt0.c0)IS NOT(rt0.c2)) END) ORDER BY (((t0.c2))>(((t0.c0 IN ())))), CAST(CASE WHEN rt0.c0 THEN t0.c2 WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c0 END AS BLOB) ASC;
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)<(UNLIKELY('414298490'))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)<(UNLIKELY('414298490')))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)<(UNLIKELY('414298490'))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)<(UNLIKELY('414298490')))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)<(UNLIKELY('414298490'))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((((t0.c2))>((rt0.c2)))))<=((CAST(t0.c1 AS REAL)))) WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (LTRIM(t0.c0)) AND (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(t0.c0))))) ORDER BY (((((t0.c1, t0.c0, t0.c0))<=((rt0.c1, t0.c0, rt0.c1))))&(((0x40867a21)||(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) NOT BETWEEN (LTRIM(t0.c0)) AND (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((((t0.c2))>((rt0.c2)))))<=((CAST(t0.c1 AS REAL)))) ORDER BY (((((t0.c1, t0.c0, t0.c0))<=((rt0.c1, t0.c0, rt0.c1))))&(((0X40867a21)||(rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((((t0.c2))>((rt0.c2)))))<=((CAST(t0.c1 AS REAL)))) WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (LTRIM(t0.c0)) AND (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(t0.c0))))) ORDER BY (((((t0.c1, t0.c0, t0.c0))<=((rt0.c1, t0.c0, rt0.c1))))&(((0x40867a21)||(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) NOT BETWEEN (LTRIM(t0.c0)) AND (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((((t0.c2))>((rt0.c2)))))<=((CAST(t0.c1 AS REAL)))) ORDER BY (((((t0.c1, t0.c0, t0.c0))<=((rt0.c1, t0.c0, rt0.c1))))&(((0X40867a21)||(rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((((t0.c2))>((rt0.c2)))))<=((CAST(t0.c1 AS REAL)))) WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (LTRIM(t0.c0)) AND (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(t0.c0))))) ORDER BY (((((t0.c1, t0.c0, t0.c0))<=((rt0.c1, t0.c0, rt0.c1))))&(((0x40867a21)||(rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0, rt0 WHERE ((NOT (((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))))) ORDER BY ((((t0.c0, '''gJnoY{*U', rt0.c0)) NOT BETWEEN ((NULL, t0.c1, rt0.c0)) AND ((t0.c1, t0.c2, vt0.c1))) IN (CASE 1393720507  WHEN t0.c1 THEN t0.c0 ELSE 1.187459519E9 END, ((t0.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((t0.c0, '''gJnoY{*U', rt0.c0)) NOT BETWEEN ((NULL, t0.c1, rt0.c0)) AND ((t0.c1, t0.c2, vt0.c1))) IN (CASE 1393720507  WHEN t0.c1 THEN t0.c0 ELSE 1.187459519E9 END, ((t0.c2) NOT NULL))) ASC);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((NOT (((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))))) ORDER BY ((((t0.c0, '''gJnoY{*U', rt0.c0)) NOT BETWEEN ((NULL, t0.c1, rt0.c0)) AND ((t0.c1, t0.c2, vt0.c1))) IN (CASE 1393720507  WHEN t0.c1 THEN t0.c0 ELSE 1.187459519E9 END, ((t0.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((t0.c0, '''gJnoY{*U', rt0.c0)) NOT BETWEEN ((NULL, t0.c1, rt0.c0)) AND ((t0.c1, t0.c2, vt0.c1))) IN (CASE 1393720507  WHEN t0.c1 THEN t0.c0 ELSE 1.187459519E9 END, ((t0.c2) NOT NULL))) ASC);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((NOT (((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))))) ORDER BY ((((t0.c0, '''gJnoY{*U', rt0.c0)) NOT BETWEEN ((NULL, t0.c1, rt0.c0)) AND ((t0.c1, t0.c2, vt0.c1))) IN (CASE 1393720507  WHEN t0.c1 THEN t0.c0 ELSE 1.187459519E9 END, ((t0.c2) NOT NULL))) ASC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>=(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>=(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>=(rt0.c0))) NOTNULL));
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2)+(0.7012497225973329))) NOTNULL)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)+(0.7012497225973329))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2)+(0.7012497225973329))) NOTNULL)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)+(0.7012497225973329))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2)+(0.7012497225973329))) NOTNULL)) ORDER BY NULL DESC;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (NULL);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c1) NOT NULL))*(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))*(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c1) NOT NULL))*(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))*(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c1) NOT NULL))*(((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN rt0 ON NULL COLLATE BINARY WHERE ((('-1059282987')AND((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('-1059282987')AND((+ (rt0.c0))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON NULL COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN rt0 ON NULL COLLATE BINARY WHERE ((('-1059282987')AND((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('-1059282987')AND((+ (rt0.c0))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON NULL COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN rt0 ON NULL COLLATE BINARY WHERE ((('-1059282987')AND((+ (rt0.c0)))));
SELECT ALL * FROM vt0, rt0, t0 WHERE (CAST(((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CAST(((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CAST(((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS TEXT));
SELECT * FROM vt0, t0, rt0 WHERE (CASE CAST(0.4528103287802677 AS INTEGER)  WHEN t0.c0 THEN ((((t0.c1)AND(t0.c1)))AND(rt0.c2)) ELSE rt0.c2 COLLATE NOCASE END) ORDER BY ((((CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN rt0.c1 THEN '' END)OR((((rt0.c2, 0.7548903241890159, rt0.c0))>((rt0.c0, rt0.c1, t0.c2))))))AND(((((((((rt0.c0)OR(vt0.c0)))OR('')))OR(t0.c0)))OR('pgXRG''Us')))) DESC, (+ (t0.c1));
SELECT SUM(count) FROM (SELECT ((CASE CAST(0.4528103287802677 AS INTEGER)  WHEN t0.c0 THEN ((((t0.c1)AND(t0.c1)))AND(rt0.c2)) ELSE rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN rt0.c1 THEN '' END)OR((((rt0.c2, 0.7548903241890159, rt0.c0))>((rt0.c0, rt0.c1, t0.c2))))))AND(((((((((rt0.c0)OR(vt0.c0)))OR('')))OR(t0.c0)))OR('pgXRG''Us')))) DESC, (+ (t0.c1)));
SELECT * FROM vt0, t0, rt0 WHERE (CASE CAST(0.4528103287802677 AS INTEGER)  WHEN t0.c0 THEN ((((t0.c1)AND(t0.c1)))AND(rt0.c2)) ELSE rt0.c2 COLLATE NOCASE END) ORDER BY ((((CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN rt0.c1 THEN '' END)OR((((rt0.c2, 0.7548903241890159, rt0.c0))>((rt0.c0, rt0.c1, t0.c2))))))AND(((((((((rt0.c0)OR(vt0.c0)))OR('')))OR(t0.c0)))OR('pgXRG''Us')))) DESC, (+ (t0.c1));
SELECT SUM(count) FROM (SELECT ((CASE CAST(0.4528103287802677 AS INTEGER)  WHEN t0.c0 THEN ((((t0.c1)AND(t0.c1)))AND(rt0.c2)) ELSE rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN rt0.c1 THEN '' END)OR((((rt0.c2, 0.7548903241890159, rt0.c0))>((rt0.c0, rt0.c1, t0.c2))))))AND(((((((((rt0.c0)OR(vt0.c0)))OR('')))OR(t0.c0)))OR('pgXRG''Us')))) DESC, (+ (t0.c1)));
SELECT * FROM vt0, t0, rt0 WHERE (CASE CAST(0.4528103287802677 AS INTEGER)  WHEN t0.c0 THEN ((((t0.c1)AND(t0.c1)))AND(rt0.c2)) ELSE rt0.c2 COLLATE NOCASE END) ORDER BY ((((CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN rt0.c1 THEN '' END)OR((((rt0.c2, 0.7548903241890159, rt0.c0))>((rt0.c0, rt0.c1, t0.c2))))))AND(((((((((rt0.c0)OR(vt0.c0)))OR('')))OR(t0.c0)))OR('pgXRG''Us')))) DESC, (+ (t0.c1));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)LIKE(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)LIKE(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c0))) ISNULL));
SELECT ALL * FROM vt0, rt0 WHERE (((((x'9768')<(rt0.c2))) NOT BETWEEN ((((rt0.c0))<=((rt0.c1)))) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY ((QUOTE(x'6475'))+(rt0.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'9768')<(rt0.c2))) NOT BETWEEN ((((rt0.c0))<=((rt0.c1)))) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((QUOTE(x'6475'))+(rt0.c1 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((x'9768')<(rt0.c2))) NOT BETWEEN ((((rt0.c0))<=((rt0.c1)))) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY ((QUOTE(x'6475'))+(rt0.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'9768')<(rt0.c2))) NOT BETWEEN ((((rt0.c0))<=((rt0.c1)))) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((QUOTE(x'6475'))+(rt0.c1 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((x'9768')<(rt0.c2))) NOT BETWEEN ((((rt0.c0))<=((rt0.c1)))) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY ((QUOTE(x'6475'))+(rt0.c1 COLLATE NOCASE)) DESC;
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (((((x'', t0.c1, t0.c1)) BETWEEN ((vt0.c0, t0.c2, t0.c1)) AND ((x'', vt0.c1, t0.c2)))) NOT BETWEEN ((x'08d9c9a69c79' IN (vt0.c0))) AND (CAST(vt0.c0 AS REAL))) WHERE (LIKELY(DISTINCT (('227476776') BETWEEN (vt0.c1) AND (t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (('227476776') BETWEEN (vt0.c1) AND (t0.c2)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((((x'', t0.c1, t0.c1)) BETWEEN ((vt0.c0, t0.c2, t0.c1)) AND ((x'', vt0.c1, t0.c2)))) NOT BETWEEN ((x'08d9c9a69c79' IN (vt0.c0))) AND (CAST(vt0.c0 AS REAL))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (((((x'', t0.c1, t0.c1)) BETWEEN ((vt0.c0, t0.c2, t0.c1)) AND ((x'', vt0.c1, t0.c2)))) NOT BETWEEN ((x'08d9c9a69c79' IN (vt0.c0))) AND (CAST(vt0.c0 AS REAL))) WHERE (LIKELY(DISTINCT (('227476776') BETWEEN (vt0.c1) AND (t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (('227476776') BETWEEN (vt0.c1) AND (t0.c2)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((((x'', t0.c1, t0.c1)) BETWEEN ((vt0.c0, t0.c2, t0.c1)) AND ((x'', vt0.c1, t0.c2)))) NOT BETWEEN ((x'08d9c9a69c79' IN (vt0.c0))) AND (CAST(vt0.c0 AS REAL))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (((((x'', t0.c1, t0.c1)) BETWEEN ((vt0.c0, t0.c2, t0.c1)) AND ((x'', vt0.c1, t0.c2)))) NOT BETWEEN ((x'08d9c9a69c79' IN (vt0.c0))) AND (CAST(vt0.c0 AS REAL))) WHERE (LIKELY(DISTINCT (('227476776') BETWEEN (vt0.c1) AND (t0.c2))));
SELECT * FROM vt0, rt0 WHERE (CASE WHEN ((vt0.c1)>(rt0.c2)) THEN ((rt0.c0)*(rt0.c1)) ELSE ((rt0.c2)<<(x'')) END) ORDER BY ((rt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)!=(((vt0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)>(rt0.c2)) THEN ((rt0.c0)*(rt0.c1)) ELSE ((rt0.c2)<<(x'')) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)<>(((vt0.c0) IS TRUE)))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN ((vt0.c1)>(rt0.c2)) THEN ((rt0.c0)*(rt0.c1)) ELSE ((rt0.c2)<<(x'')) END) ORDER BY ((rt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)!=(((vt0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)>(rt0.c2)) THEN ((rt0.c0)*(rt0.c1)) ELSE ((rt0.c2)<<(x'')) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)<>(((vt0.c0) IS TRUE)))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN ((vt0.c1)>(rt0.c2)) THEN ((rt0.c0)*(rt0.c1)) ELSE ((rt0.c2)<<(x'')) END) ORDER BY ((rt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)!=(((vt0.c0) IS TRUE)))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST((~ (vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST((~ (vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST((~ (vt0.c1)) AS INTEGER));
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0 IN (vt0.c0))))<>((rt0.c2 COLLATE BINARY)))) ORDER BY (NOT (rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN (vt0.c0))))!=((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (rt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0 IN (vt0.c0))))<>((rt0.c2 COLLATE BINARY)))) ORDER BY (NOT (rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN (vt0.c0))))!=((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (rt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0 IN (vt0.c0))))<>((rt0.c2 COLLATE BINARY)))) ORDER BY (NOT (rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT * FROM t0, vt0, rt0 WHERE (LIKELIHOOD(DISTINCT x'', 0.45294235179135445));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT x'', 0.45294235179135445)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (LIKELIHOOD(DISTINCT x'', 0.45294235179135445));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT x'', 0.45294235179135445)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (LIKELIHOOD(DISTINCT x'', 0.45294235179135445));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS REAL)) ORDER BY ((((((((CASE rt0.c1  WHEN vt0.c0 THEN -1684594846 ELSE rt0.c0 END)AND(CAST(vt0.c1 AS TEXT))))AND(((((rt0.c2)AND(rt0.c0)))AND(vt0.c1)))))OR(((rt0.c1)GLOB(rt0.c0)))))OR(CAST(rt0.c2 AS BLOB))) DESC, HEX(((((rt0.c2)OR(rt0.c0)))AND(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((CASE rt0.c1  WHEN vt0.c0 THEN -1684594846 ELSE rt0.c0 END)AND(CAST(vt0.c1 AS TEXT))))AND(((((rt0.c2)AND(rt0.c0)))AND(vt0.c1)))))OR(((rt0.c1)GLOB(rt0.c0)))))OR(CAST(rt0.c2 AS BLOB))) DESC, HEX(((((rt0.c2)OR(rt0.c0)))AND(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS REAL)) ORDER BY ((((((((CASE rt0.c1  WHEN vt0.c0 THEN -1684594846 ELSE rt0.c0 END)AND(CAST(vt0.c1 AS TEXT))))AND(((((rt0.c2)AND(rt0.c0)))AND(vt0.c1)))))OR(((rt0.c1)GLOB(rt0.c0)))))OR(CAST(rt0.c2 AS BLOB))) DESC, HEX(((((rt0.c2)OR(rt0.c0)))AND(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((CASE rt0.c1  WHEN vt0.c0 THEN -1684594846 ELSE rt0.c0 END)AND(CAST(vt0.c1 AS TEXT))))AND(((((rt0.c2)AND(rt0.c0)))AND(vt0.c1)))))OR(((rt0.c1)GLOB(rt0.c0)))))OR(CAST(rt0.c2 AS BLOB))) DESC, HEX(((((rt0.c2)OR(rt0.c0)))AND(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS REAL)) ORDER BY ((((((((CASE rt0.c1  WHEN vt0.c0 THEN -1684594846 ELSE rt0.c0 END)AND(CAST(vt0.c1 AS TEXT))))AND(((((rt0.c2)AND(rt0.c0)))AND(vt0.c1)))))OR(((rt0.c1)GLOB(rt0.c0)))))OR(CAST(rt0.c2 AS BLOB))) DESC, HEX(((((rt0.c2)OR(rt0.c0)))AND(vt0.c0))) DESC;
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON (~ (x'')) FULL OUTER JOIN vt0 ON ((t0.c1) ISNULL) COLLATE BINARY WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (~ (x'')) FULL OUTER JOIN vt0 ON ((t0.c1) ISNULL) COLLATE BINARY);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON (~ (x'')) FULL OUTER JOIN vt0 ON ((t0.c1) ISNULL) COLLATE BINARY WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (~ (x'')) FULL OUTER JOIN vt0 ON ((t0.c1) ISNULL) COLLATE BINARY);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON (~ (x'')) FULL OUTER JOIN vt0 ON ((t0.c1) ISNULL) COLLATE BINARY WHERE ((NOT (vt0.c0)));
SELECT * FROM vt0, rt0, t0 WHERE (LTRIM(((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)), CASE WHEN vt0.c1 THEN t0.c1 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)), CASE WHEN vt0.c1 THEN t0.c1 ELSE rt0.c1 END)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (LTRIM(((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)), CASE WHEN vt0.c1 THEN t0.c1 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)), CASE WHEN vt0.c1 THEN t0.c1 ELSE rt0.c1 END)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (LTRIM(((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)), CASE WHEN vt0.c1 THEN t0.c1 ELSE rt0.c1 END));
SELECT ALL * FROM t0, rt0, vt0 WHERE (((('-2100905968' IN (vt0.c1, rt0.c2)))OR(CASE WHEN x'34b0' THEN t0.c0 WHEN 0.5048834595097182 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY '-1876390517', (((+ (rt0.c0))) BETWEEN (t0.c2 COLLATE NOCASE) AND (((t0.c1)|(t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((('-2100905968' IN (vt0.c1, rt0.c2)))OR(CASE WHEN x'34b0' THEN t0.c0 WHEN 0.5048834595097182 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY '-1876390517', (((+ (rt0.c0))) BETWEEN (t0.c2 COLLATE NOCASE) AND (((t0.c1)|(t0.c1)))) DESC);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((('-2100905968' IN (vt0.c1, rt0.c2)))OR(CASE WHEN x'34b0' THEN t0.c0 WHEN 0.5048834595097182 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY '-1876390517', (((+ (rt0.c0))) BETWEEN (t0.c2 COLLATE NOCASE) AND (((t0.c1)|(t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((('-2100905968' IN (vt0.c1, rt0.c2)))OR(CASE WHEN x'34b0' THEN t0.c0 WHEN 0.5048834595097182 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY '-1876390517', (((+ (rt0.c0))) BETWEEN (t0.c2 COLLATE NOCASE) AND (((t0.c1)|(t0.c1)))) DESC);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((('-2100905968' IN (vt0.c1, rt0.c2)))OR(CASE WHEN x'34b0' THEN t0.c0 WHEN 0.5048834595097182 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY '-1876390517', (((+ (rt0.c0))) BETWEEN (t0.c2 COLLATE NOCASE) AND (((t0.c1)|(t0.c1)))) DESC;
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CASE WHEN (NOT (rt0.c2)) THEN ((((((((rt0.c2)OR(rt0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2)) END WHERE (((((t0.c0)/(t0.c1)))&(((rt0.c0) BETWEEN (t0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)/(t0.c1)))&(((rt0.c0) BETWEEN (t0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE WHEN (NOT (rt0.c2)) THEN ((((((((rt0.c2)OR(rt0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2)) END);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CASE WHEN (NOT (rt0.c2)) THEN ((((((((rt0.c2)OR(rt0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2)) END WHERE (((((t0.c0)/(t0.c1)))&(((rt0.c0) BETWEEN (t0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)/(t0.c1)))&(((rt0.c0) BETWEEN (t0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE WHEN (NOT (rt0.c2)) THEN ((((((((rt0.c2)OR(rt0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2)) END);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CASE WHEN (NOT (rt0.c2)) THEN ((((((((rt0.c2)OR(rt0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2)) END WHERE (((((t0.c0)/(t0.c1)))&(((rt0.c0) BETWEEN (t0.c2) AND (rt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON (~ (NULL)) WHERE ((((((t0.c2))>((-6.01542258E8))))IS(((-1011369298)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))>((-6.01542258E8))))IS(((-1011369298)AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON (~ (NULL)));
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON (~ (NULL)) WHERE ((((((t0.c2))>((-6.01542258E8))))IS(((-1011369298)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))>((-6.01542258E8))))IS(((-1011369298)AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON (~ (NULL)));
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON (~ (NULL)) WHERE ((((((t0.c2))>((-6.01542258E8))))IS(((-1011369298)AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON 'ᇵh鉰 &-prU' WHERE ((((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))|(((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))|(((((vt0.c0)OR(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON 'ᇵh鉰 &-prU');
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON 'ᇵh鉰 &-prU' WHERE ((((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))|(((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))|(((((vt0.c0)OR(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON 'ᇵh鉰 &-prU');
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON 'ᇵh鉰 &-prU' WHERE ((((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))|(((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) AS REAL)) ORDER BY (NOT (vt0.c1)) COLLATE RTRIM COLLATE RTRIM DESC  NULLS LAST, rt0.c0, ((CAST(rt0.c0 AS BLOB))<(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (vt0.c1)) COLLATE RTRIM COLLATE RTRIM DESC  NULLS LAST, rt0.c0, ((CAST(rt0.c0 AS BLOB))<(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) AS REAL)) ORDER BY (NOT (vt0.c1)) COLLATE RTRIM COLLATE RTRIM DESC  NULLS LAST, rt0.c0, ((CAST(rt0.c0 AS BLOB))<(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (vt0.c1)) COLLATE RTRIM COLLATE RTRIM DESC  NULLS LAST, rt0.c0, ((CAST(rt0.c0 AS BLOB))<(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) AS REAL)) ORDER BY (NOT (vt0.c1)) COLLATE RTRIM COLLATE RTRIM DESC  NULLS LAST, rt0.c0, ((CAST(rt0.c0 AS BLOB))<(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((+ (t0.c0))) NOT NULL) WHERE (((((rt0.c0)%(t0.c2)))||((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)%(t0.c2)))||((- (rt0.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((+ (t0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((+ (t0.c0))) NOT NULL) WHERE (((((rt0.c0)%(t0.c2)))||((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)%(t0.c2)))||((- (rt0.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((+ (t0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((+ (t0.c0))) NOT NULL) WHERE (((((rt0.c0)%(t0.c2)))||((- (rt0.c2)))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON '624379646' FULL OUTER JOIN t0 ON x'' WHERE (((((vt0.c0)>(rt0.c0)))||(((t0.c0) NOT BETWEEN (-1583302265) AND (rt0.c1))))) ORDER BY CASE WHEN UPPER(NULL) THEN CASE WHEN rt0.c1 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(rt0.c0)))||(((t0.c0) NOT BETWEEN (-1583302265) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED CROSS JOIN vt0 ON '624379646' FULL OUTER JOIN t0 ON x'' ORDER BY CASE WHEN UPPER(NULL) THEN CASE WHEN rt0.c1 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END END DESC  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON '624379646' FULL OUTER JOIN t0 ON x'' WHERE (((((vt0.c0)>(rt0.c0)))||(((t0.c0) NOT BETWEEN (-1583302265) AND (rt0.c1))))) ORDER BY CASE WHEN UPPER(NULL) THEN CASE WHEN rt0.c1 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(rt0.c0)))||(((t0.c0) NOT BETWEEN (-1583302265) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED CROSS JOIN vt0 ON '624379646' FULL OUTER JOIN t0 ON x'' ORDER BY CASE WHEN UPPER(NULL) THEN CASE WHEN rt0.c1 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END END DESC  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON '624379646' FULL OUTER JOIN t0 ON x'' WHERE (((((vt0.c0)>(rt0.c0)))||(((t0.c0) NOT BETWEEN (-1583302265) AND (rt0.c1))))) ORDER BY CASE WHEN UPPER(NULL) THEN CASE WHEN rt0.c1 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END END DESC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (CAST(TYPEOF(-2.135262516E9) AS TEXT)) ORDER BY (((- (t0.c2)))==(((t0.c0) NOT BETWEEN (x'') AND (t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(-2.135262516E9) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((- (t0.c2)))==(((t0.c0) NOT BETWEEN (x'') AND (t0.c1)))) ASC);
SELECT * FROM vt0, t0 WHERE (CAST(TYPEOF(-2.135262516E9) AS TEXT)) ORDER BY (((- (t0.c2)))==(((t0.c0) NOT BETWEEN (x'') AND (t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(-2.135262516E9) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((- (t0.c2)))==(((t0.c0) NOT BETWEEN (x'') AND (t0.c1)))) ASC);
SELECT * FROM vt0, t0 WHERE (CAST(TYPEOF(-2.135262516E9) AS TEXT)) ORDER BY (((- (t0.c2)))==(((t0.c0) NOT BETWEEN (x'') AND (t0.c1)))) ASC;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (LIKELY(x''));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(x'')) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (LIKELY(x''));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(x'')) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (LIKELY(x''));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 IN ())) NOTNULL)) ORDER BY ((x'')*(CAST(t0.c2 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((x'')*(CAST(t0.c2 AS INTEGER))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 IN ())) NOTNULL)) ORDER BY ((x'')*(CAST(t0.c2 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((x'')*(CAST(t0.c2 AS INTEGER))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 IN ())) NOTNULL)) ORDER BY ((x'')*(CAST(t0.c2 AS INTEGER))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE ((- (t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- (t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((- (t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- (t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((- (t0.c1 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE (MAX(CAST(rt0.c2 AS NUMERIC), x'')) ORDER BY '-1022152882', (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(x'')))OR(rt0.c2)) IN (((rt0.c1) IS TRUE), (((rt0.c0))!=((rt0.c2))))) DESC, (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((MAX(CAST(rt0.c2 AS NUMERIC), x'')) IS TRUE)  as count FROM rt0 ORDER BY '-1022152882', (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(x'')))OR(rt0.c2)) IN (((rt0.c1) IS TRUE), (((rt0.c0))!=((rt0.c2))))) DESC, (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (MAX(CAST(rt0.c2 AS NUMERIC), x'')) ORDER BY '-1022152882', (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(x'')))OR(rt0.c2)) IN (((rt0.c1) IS TRUE), (((rt0.c0))!=((rt0.c2))))) DESC, (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((MAX(CAST(rt0.c2 AS NUMERIC), x'')) IS TRUE)  as count FROM rt0 ORDER BY '-1022152882', (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(x'')))OR(rt0.c2)) IN (((rt0.c1) IS TRUE), (((rt0.c0))!=((rt0.c2))))) DESC, (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (MAX(CAST(rt0.c2 AS NUMERIC), x'')) ORDER BY '-1022152882', (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(x'')))OR(rt0.c2)) IN (((rt0.c1) IS TRUE), (((rt0.c0))!=((rt0.c2))))) DESC, (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) AS REAL));
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((rt0.c2) NOT NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((rt0.c2) NOT NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((rt0.c2) NOT NULL)) IS TRUE));
SELECT ALL * FROM vt0, rt0 WHERE (x'e944') ORDER BY ((+ (rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((x'e944') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((+ (rt0.c2)) IN ()));
SELECT ALL * FROM vt0, rt0 WHERE (x'e944') ORDER BY ((+ (rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((x'e944') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((+ (rt0.c2)) IN ()));
SELECT ALL * FROM vt0, rt0 WHERE (x'e944') ORDER BY ((+ (rt0.c2)) IN ());
SELECT * FROM vt0 WHERE (((TRIM(vt0.c0, 0.836696892290707))IS(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0, 0.836696892290707))IS(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((TRIM(vt0.c0, 0.836696892290707))IS(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0, 0.836696892290707))IS(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((TRIM(vt0.c0, 0.836696892290707))IS(((vt0.c0) NOT NULL))));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS TEXT)) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS TEXT)) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) ISNULL));
SELECT COUNT(*) FROM rt0, t0 WHERE (((('')) NOT BETWEEN ((NULL)) AND ((CHANGES())))) ORDER BY CAST(TRIM(t0.c0, NULL) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('')) NOT BETWEEN ((NULL)) AND ((CHANGES())))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(TRIM(t0.c0, NULL) AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((('')) NOT BETWEEN ((NULL)) AND ((CHANGES())))) ORDER BY CAST(TRIM(t0.c0, NULL) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('')) NOT BETWEEN ((NULL)) AND ((CHANGES())))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(TRIM(t0.c0, NULL) AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((('')) NOT BETWEEN ((NULL)) AND ((CHANGES())))) ORDER BY CAST(TRIM(t0.c0, NULL) AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((NOT (vt0.c1))))) ORDER BY (((NOT (vt0.c1))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (vt0.c1))) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((NOT (vt0.c1))))) ORDER BY (((NOT (vt0.c1))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (vt0.c1))) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((NOT (vt0.c1))))) ORDER BY (((NOT (vt0.c1))) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (LOWER(DISTINCT ((rt0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((rt0.c2) NOTNULL))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LOWER(DISTINCT ((rt0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((rt0.c2) NOTNULL))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LOWER(DISTINCT ((rt0.c2) NOTNULL)));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((t0.c0)<=(vt0.c0)))=(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<=(vt0.c0)))==(rt0.c2))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((t0.c0)<=(vt0.c0)))=(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<=(vt0.c0)))==(rt0.c2))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((t0.c0)<=(vt0.c0)))=(rt0.c2)));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((t0.c2 COLLATE BINARY)AND(NULL)))AND(((t0.c0)|(rt0.c0)))))OR((~ (t0.c2)))))OR((('')|(t0.c2))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c2 COLLATE BINARY)AND(NULL)))AND(((t0.c0)|(rt0.c0)))))OR((~ (t0.c2)))))OR((('')|(t0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY rt0.c1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((t0.c2 COLLATE BINARY)AND(NULL)))AND(((t0.c0)|(rt0.c0)))))OR((~ (t0.c2)))))OR((('')|(t0.c2))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c2 COLLATE BINARY)AND(NULL)))AND(((t0.c0)|(rt0.c0)))))OR((~ (t0.c2)))))OR((('')|(t0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY rt0.c1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((t0.c2 COLLATE BINARY)AND(NULL)))AND(((t0.c0)|(rt0.c0)))))OR((~ (t0.c2)))))OR((('')|(t0.c2))))) ORDER BY rt0.c1;
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)IS(t0.c0))) NOT BETWEEN ('R') AND (((((rt0.c1)AND(t0.c0)))OR(NULL)))) LEFT OUTER JOIN rt0 ON t0.c1 WHERE (((t0.c0) NOT BETWEEN (((((t0.c0)AND(t0.c2)))OR(vt0.c1))) AND (((NULL)<=(t0.c2))))) ORDER BY t0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (((((t0.c0)AND(t0.c2)))OR(vt0.c1))) AND (((NULL)<=(t0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)IS(t0.c0))) NOT BETWEEN ('R') AND (((((rt0.c1)AND(t0.c0)))OR(NULL)))) LEFT OUTER JOIN rt0 ON t0.c1 ORDER BY t0.c1 DESC);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)IS(t0.c0))) NOT BETWEEN ('R') AND (((((rt0.c1)AND(t0.c0)))OR(NULL)))) LEFT OUTER JOIN rt0 ON t0.c1 WHERE (((t0.c0) NOT BETWEEN (((((t0.c0)AND(t0.c2)))OR(vt0.c1))) AND (((NULL)<=(t0.c2))))) ORDER BY t0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (((((t0.c0)AND(t0.c2)))OR(vt0.c1))) AND (((NULL)<=(t0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)IS(t0.c0))) NOT BETWEEN ('R') AND (((((rt0.c1)AND(t0.c0)))OR(NULL)))) LEFT OUTER JOIN rt0 ON t0.c1 ORDER BY t0.c1 DESC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((((rt0.c2))<=((rt0.c0)))) NOTNULL) INNER JOIN rt0 ON (((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((NULL)))) ISNULL) WHERE (((((t0.c1) ISNULL))*((('2068732081')*(vt0.c1))))) ORDER BY (((((t0.c0))>=((t0.c0))))GLOB(rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) ISNULL))*((('2068732081')*(vt0.c1))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((((rt0.c2))<=((rt0.c0)))) NOTNULL) INNER JOIN rt0 ON (((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((NULL)))) ISNULL) ORDER BY (((((t0.c0))>=((t0.c0))))GLOB(rt0.c2)) ASC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((((rt0.c2))<=((rt0.c0)))) NOTNULL) INNER JOIN rt0 ON (((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((NULL)))) ISNULL) WHERE (((((t0.c1) ISNULL))*((('2068732081')*(vt0.c1))))) ORDER BY (((((t0.c0))>=((t0.c0))))GLOB(rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) ISNULL))*((('2068732081')*(vt0.c1))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((((rt0.c2))<=((rt0.c0)))) NOTNULL) INNER JOIN rt0 ON (((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((NULL)))) ISNULL) ORDER BY (((((t0.c0))>=((t0.c0))))GLOB(rt0.c2)) ASC);
SELECT ALL * FROM t0, rt0 WHERE ((~ (((rt0.c1)*(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1)*(rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((~ (((rt0.c1)*(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1)*(rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((~ (((rt0.c1)*(rt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))|(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))|(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))|(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))|(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))|(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c0) NOTNULL) COLLATE RTRIM WHERE (rt0.c1) ORDER BY CAST(((rt0.c2)>>(rt0.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c0) NOTNULL) COLLATE RTRIM ORDER BY CAST(((rt0.c2)>>(rt0.c2)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c0) NOTNULL) COLLATE RTRIM WHERE (rt0.c1) ORDER BY CAST(((rt0.c2)>>(rt0.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c0) NOTNULL) COLLATE RTRIM ORDER BY CAST(((rt0.c2)>>(rt0.c2)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c0) NOTNULL) COLLATE RTRIM WHERE (rt0.c1) ORDER BY CAST(((rt0.c2)>>(rt0.c2)) AS BLOB);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN t0.c0 COLLATE NOCASE WHEN ((t0.c2)&(rt0.c0)) THEN (- ('181501562')) WHEN (((rt0.c2))<=((370884769))) THEN ((((((((rt0.c1)OR(rt0.c1)))OR(t0.c2)))AND('0.4574355950363381')))AND(rt0.c2)) END WHERE ((~ ((NOT (rt0.c2))))) ORDER BY (((TRIM(DISTINCT rt0.c1), ((((((((rt0.c2)OR(t0.c2)))AND(t0.c2)))OR(rt0.c0)))AND(t0.c2)), (rt0.c1 IN ())))<=((((rt0.c2)GLOB(0xd8f0528)), UNLIKELY(DISTINCT rt0.c0), '8p')))  NULLS LAST, LENGTH('1577197243')  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((NOT (rt0.c2))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN t0.c0 COLLATE NOCASE WHEN ((t0.c2)&(rt0.c0)) THEN (- ('181501562')) WHEN (((rt0.c2))<=((370884769))) THEN ((((((((rt0.c1)OR(rt0.c1)))OR(t0.c2)))AND('0.4574355950363381')))AND(rt0.c2)) END ORDER BY (((TRIM(DISTINCT rt0.c1), ((((((((rt0.c2)OR(t0.c2)))AND(t0.c2)))OR(rt0.c0)))AND(t0.c2)), (rt0.c1 IN ())))<=((((rt0.c2)GLOB(0xd8f0528)), UNLIKELY(DISTINCT rt0.c0), '8p')))  NULLS LAST, LENGTH('1577197243')  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN t0.c0 COLLATE NOCASE WHEN ((t0.c2)&(rt0.c0)) THEN (- ('181501562')) WHEN (((rt0.c2))<=((370884769))) THEN ((((((((rt0.c1)OR(rt0.c1)))OR(t0.c2)))AND('0.4574355950363381')))AND(rt0.c2)) END WHERE ((~ ((NOT (rt0.c2))))) ORDER BY (((TRIM(DISTINCT rt0.c1), ((((((((rt0.c2)OR(t0.c2)))AND(t0.c2)))OR(rt0.c0)))AND(t0.c2)), (rt0.c1 IN ())))<=((((rt0.c2)GLOB(0xd8f0528)), UNLIKELY(DISTINCT rt0.c0), '8p')))  NULLS LAST, LENGTH('1577197243')  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((NOT (rt0.c2))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN t0.c0 COLLATE NOCASE WHEN ((t0.c2)&(rt0.c0)) THEN (- ('181501562')) WHEN (((rt0.c2))<=((370884769))) THEN ((((((((rt0.c1)OR(rt0.c1)))OR(t0.c2)))AND('0.4574355950363381')))AND(rt0.c2)) END ORDER BY (((TRIM(DISTINCT rt0.c1), ((((((((rt0.c2)OR(t0.c2)))AND(t0.c2)))OR(rt0.c0)))AND(t0.c2)), (rt0.c1 IN ())))<=((((rt0.c2)GLOB(0xd8f0528)), UNLIKELY(DISTINCT rt0.c0), '8p')))  NULLS LAST, LENGTH('1577197243')  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN t0.c0 COLLATE NOCASE WHEN ((t0.c2)&(rt0.c0)) THEN (- ('181501562')) WHEN (((rt0.c2))<=((370884769))) THEN ((((((((rt0.c1)OR(rt0.c1)))OR(t0.c2)))AND('0.4574355950363381')))AND(rt0.c2)) END WHERE ((~ ((NOT (rt0.c2))))) ORDER BY (((TRIM(DISTINCT rt0.c1), ((((((((rt0.c2)OR(t0.c2)))AND(t0.c2)))OR(rt0.c0)))AND(t0.c2)), (rt0.c1 IN ())))<=((((rt0.c2)GLOB(0xd8f0528)), UNLIKELY(DISTINCT rt0.c0), '8p')))  NULLS LAST, LENGTH('1577197243')  NULLS LAST;
SELECT ALL * FROM t0, vt0, rt0 WHERE (ABS(((t0.c0) BETWEEN (t0.c2) AND (vt0.c1)))) ORDER BY t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t0.c0) BETWEEN (t0.c2) AND (vt0.c1)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY t0.c2  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (ABS(((t0.c0) BETWEEN (t0.c2) AND (vt0.c1)))) ORDER BY t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t0.c0) BETWEEN (t0.c2) AND (vt0.c1)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY t0.c2  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (ABS(((t0.c0) BETWEEN (t0.c2) AND (vt0.c1)))) ORDER BY t0.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (x'' COLLATE BINARY);
SELECT * FROM vt0 WHERE (CASE -470741765  WHEN json_remove(vt0.c0, vt0.c0) THEN json_array_length(vt0.c0, vt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE -470741765  WHEN json_remove(vt0.c0, vt0.c0) THEN json_array_length(vt0.c0, vt0.c1) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE -470741765  WHEN json_remove(vt0.c0, vt0.c0) THEN json_array_length(vt0.c0, vt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE -470741765  WHEN json_remove(vt0.c0, vt0.c0) THEN json_array_length(vt0.c0, vt0.c1) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, t0 WHERE ((('1983124372') NOTNULL)) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((('1983124372') NOTNULL)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY rt0.c0 DESC);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, t0 WHERE ((('1983124372') NOTNULL)) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((('1983124372') NOTNULL)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY rt0.c0 DESC);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, t0 WHERE ((('1983124372') NOTNULL)) ORDER BY rt0.c0 DESC;
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c1)) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (rtreenode(CAST(rt0.c1 AS BLOB), ((rt0.c0)GLOB(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rtreenode(CAST(rt0.c1 AS BLOB), ((rt0.c0)GLOB(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rtreenode(CAST(rt0.c1 AS BLOB), ((rt0.c0)GLOB(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rtreenode(CAST(rt0.c1 AS BLOB), ((rt0.c0)GLOB(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rtreenode(CAST(rt0.c1 AS BLOB), ((rt0.c0)GLOB(rt0.c2))));
SELECT ALL * FROM vt0, t0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) ORDER BY ((SUBSTR(t0.c2, t0.c1))OR(((vt0.c1)%(t0.c0)))) DESC  NULLS LAST, ((((((((t0.c2)OR(((((vt0.c0)OR(t0.c0)))OR(t0.c2)))))AND(vt0.c1)))OR(((vt0.c0) IS FALSE))))OR((NOT (t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((SUBSTR(t0.c2, t0.c1))OR(((vt0.c1)%(t0.c0)))) DESC  NULLS LAST, ((((((((t0.c2)OR(((((vt0.c0)OR(t0.c0)))OR(t0.c2)))))AND(vt0.c1)))OR(((vt0.c0) IS FALSE))))OR((NOT (t0.c2)))) DESC);
SELECT ALL * FROM vt0, t0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) ORDER BY ((SUBSTR(t0.c2, t0.c1))OR(((vt0.c1)%(t0.c0)))) DESC  NULLS LAST, ((((((((t0.c2)OR(((((vt0.c0)OR(t0.c0)))OR(t0.c2)))))AND(vt0.c1)))OR(((vt0.c0) IS FALSE))))OR((NOT (t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((SUBSTR(t0.c2, t0.c1))OR(((vt0.c1)%(t0.c0)))) DESC  NULLS LAST, ((((((((t0.c2)OR(((((vt0.c0)OR(t0.c0)))OR(t0.c2)))))AND(vt0.c1)))OR(((vt0.c0) IS FALSE))))OR((NOT (t0.c2)))) DESC);
SELECT ALL * FROM vt0, t0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) ORDER BY ((SUBSTR(t0.c2, t0.c1))OR(((vt0.c1)%(t0.c0)))) DESC  NULLS LAST, ((((((((t0.c2)OR(((((vt0.c0)OR(t0.c0)))OR(t0.c2)))))AND(vt0.c1)))OR(((vt0.c0) IS FALSE))))OR((NOT (t0.c2)))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (((x'' IN ()) IN ())) ORDER BY (((~ (vt0.c0))) ISNULL) DESC, (((rt0.c1 IN ())) BETWEEN ((NOT (rt0.c2))) AND (0.9787813832036296));
SELECT SUM(count) FROM (SELECT ALL ((((x'' IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0 ORDER BY (((~ (vt0.c0))) ISNULL) DESC, (((rt0.c1 IN ())) BETWEEN ((NOT (rt0.c2))) AND (0.9787813832036296)));
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (((x'' IN ()) IN ())) ORDER BY (((~ (vt0.c0))) ISNULL) DESC, (((rt0.c1 IN ())) BETWEEN ((NOT (rt0.c2))) AND (0.9787813832036296));
SELECT SUM(count) FROM (SELECT ALL ((((x'' IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0 ORDER BY (((~ (vt0.c0))) ISNULL) DESC, (((rt0.c1 IN ())) BETWEEN ((NOT (rt0.c2))) AND (0.9787813832036296)));
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (((x'' IN ()) IN ())) ORDER BY (((~ (vt0.c0))) ISNULL) DESC, (((rt0.c1 IN ())) BETWEEN ((NOT (rt0.c2))) AND (0.9787813832036296));
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c1)%(vt0.c0))))) ORDER BY ((+ (vt0.c1)) IN (vt0.c1 COLLATE RTRIM, -1.560730045E9)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((+ (vt0.c1)) IN (vt0.c1 COLLATE RTRIM, -1.560730045E9)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c1)%(vt0.c0))))) ORDER BY ((+ (vt0.c1)) IN (vt0.c1 COLLATE RTRIM, -1.560730045E9)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((+ (vt0.c1)) IN (vt0.c1 COLLATE RTRIM, -1.560730045E9)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c1)%(vt0.c0))))) ORDER BY ((+ (vt0.c1)) IN (vt0.c1 COLLATE RTRIM, -1.560730045E9)) DESC  NULLS LAST;
SELECT * FROM vt0, rt0, t0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY (- (CAST(-524905359 AS TEXT))) ASC, ((rt0.c1 COLLATE NOCASE) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (- (CAST(-524905359 AS TEXT))) ASC, ((rt0.c1 COLLATE NOCASE) NOT NULL)  NULLS LAST);
SELECT * FROM vt0, rt0, t0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY (- (CAST(-524905359 AS TEXT))) ASC, ((rt0.c1 COLLATE NOCASE) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (- (CAST(-524905359 AS TEXT))) ASC, ((rt0.c1 COLLATE NOCASE) NOT NULL)  NULLS LAST);
SELECT * FROM vt0, rt0, t0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY (- (CAST(-524905359 AS TEXT))) ASC, ((rt0.c1 COLLATE NOCASE) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CHAR(LIKELY(DISTINCT 1131405133)) WHERE (((((((vt0.c1) NOT BETWEEN ('{墱') AND (t0.c2)))AND(((vt0.c0)>>(vt0.c0)))))AND(((((vt0.c1)AND(t0.c0)))OR(t0.c1))))) ORDER BY (((vt0.c0)) BETWEEN (((((t0.c1))>=((t0.c0))))) AND ((0X7fa8056f))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT BETWEEN ('{墱') AND (t0.c2)))AND(((vt0.c0)>>(vt0.c0)))))AND(((((vt0.c1)AND(t0.c0)))OR(t0.c1))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CHAR(LIKELY(DISTINCT 1131405133)) ORDER BY (((vt0.c0)) BETWEEN (((((t0.c1))>=((t0.c0))))) AND ((0X7fa8056f))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CHAR(LIKELY(DISTINCT 1131405133)) WHERE (((((((vt0.c1) NOT BETWEEN ('{墱') AND (t0.c2)))AND(((vt0.c0)>>(vt0.c0)))))AND(((((vt0.c1)AND(t0.c0)))OR(t0.c1))))) ORDER BY (((vt0.c0)) BETWEEN (((((t0.c1))>=((t0.c0))))) AND ((0X7fa8056f))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT BETWEEN ('{墱') AND (t0.c2)))AND(((vt0.c0)>>(vt0.c0)))))AND(((((vt0.c1)AND(t0.c0)))OR(t0.c1))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CHAR(LIKELY(DISTINCT 1131405133)) ORDER BY (((vt0.c0)) BETWEEN (((((t0.c1))>=((t0.c0))))) AND ((0X7fa8056f))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CHAR(LIKELY(DISTINCT 1131405133)) WHERE (((((((vt0.c1) NOT BETWEEN ('{墱') AND (t0.c2)))AND(((vt0.c0)>>(vt0.c0)))))AND(((((vt0.c1)AND(t0.c0)))OR(t0.c1))))) ORDER BY (((vt0.c0)) BETWEEN (((((t0.c1))>=((t0.c0))))) AND ((0X7fa8056f))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) IS TRUE)) BETWEEN ('') AND ((~ (rt0.c0))))) ORDER BY CAST((+ (rt0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) BETWEEN ('') AND ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((+ (rt0.c0)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) IS TRUE)) BETWEEN ('') AND ((~ (rt0.c0))))) ORDER BY CAST((+ (rt0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) BETWEEN ('') AND ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((+ (rt0.c0)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) IS TRUE)) BETWEEN ('') AND ((~ (rt0.c0))))) ORDER BY CAST((+ (rt0.c0)) AS REAL) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c0 AS REAL)  WHEN ((((rt0.c2)AND(rt0.c2)))OR(0.4226100847696854)) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE 0.45060946534952295 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c0 AS REAL)  WHEN ((((rt0.c2)AND(rt0.c2)))OR(0.4226100847696854)) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE 0.45060946534952295 END END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c0 AS REAL)  WHEN ((((rt0.c2)AND(rt0.c2)))OR(0.4226100847696854)) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE 0.45060946534952295 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c0 AS REAL)  WHEN ((((rt0.c2)AND(rt0.c2)))OR(0.4226100847696854)) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE 0.45060946534952295 END END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c0 AS REAL)  WHEN ((((rt0.c2)AND(rt0.c2)))OR(0.4226100847696854)) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE 0.45060946534952295 END END);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN t0 WHERE (((CASE t0.c0  WHEN vt0.c1 THEN rt0.c0 ELSE t0.c1 END) IS TRUE)) ORDER BY UNLIKELY(DISTINCT ((t0.c1)||(t0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN vt0.c1 THEN rt0.c0 ELSE t0.c1 END) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0 ORDER BY UNLIKELY(DISTINCT ((t0.c1)||(t0.c1))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN t0 WHERE (((CASE t0.c0  WHEN vt0.c1 THEN rt0.c0 ELSE t0.c1 END) IS TRUE)) ORDER BY UNLIKELY(DISTINCT ((t0.c1)||(t0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN vt0.c1 THEN rt0.c0 ELSE t0.c1 END) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0 ORDER BY UNLIKELY(DISTINCT ((t0.c1)||(t0.c1))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN t0 WHERE (((CASE t0.c0  WHEN vt0.c1 THEN rt0.c0 ELSE t0.c1 END) IS TRUE)) ORDER BY UNLIKELY(DISTINCT ((t0.c1)||(t0.c1))) ASC;
SELECT ALL * FROM vt0, rt0, t0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS REAL)) ORDER BY CAST(CASE rt0.c0  WHEN rt0.c1 THEN '' WHEN rt0.c0 THEN rt0.c2 WHEN t0.c2 THEN vt0.c1 ELSE t0.c2 END AS INTEGER)  NULLS LAST, ((rt0.c0 COLLATE NOCASE)OR(((rt0.c2) BETWEEN (t0.c2) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST(CASE rt0.c0  WHEN rt0.c1 THEN '' WHEN rt0.c0 THEN rt0.c2 WHEN t0.c2 THEN vt0.c1 ELSE t0.c2 END AS INTEGER)  NULLS LAST, ((rt0.c0 COLLATE NOCASE)OR(((rt0.c2) BETWEEN (t0.c2) AND (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS REAL)) ORDER BY CAST(CASE rt0.c0  WHEN rt0.c1 THEN '' WHEN rt0.c0 THEN rt0.c2 WHEN t0.c2 THEN vt0.c1 ELSE t0.c2 END AS INTEGER)  NULLS LAST, ((rt0.c0 COLLATE NOCASE)OR(((rt0.c2) BETWEEN (t0.c2) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST(CASE rt0.c0  WHEN rt0.c1 THEN '' WHEN rt0.c0 THEN rt0.c2 WHEN t0.c2 THEN vt0.c1 ELSE t0.c2 END AS INTEGER)  NULLS LAST, ((rt0.c0 COLLATE NOCASE)OR(((rt0.c2) BETWEEN (t0.c2) AND (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS REAL)) ORDER BY CAST(CASE rt0.c0  WHEN rt0.c1 THEN '' WHEN rt0.c0 THEN rt0.c2 WHEN t0.c2 THEN vt0.c1 ELSE t0.c2 END AS INTEGER)  NULLS LAST, ((rt0.c0 COLLATE NOCASE)OR(((rt0.c2) BETWEEN (t0.c2) AND (rt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CASE vt0.c0  WHEN t0.c1 THEN t0.c2 ELSE x'' END)) RIGHT OUTER JOIN t0 ON ((((rt0.c2)|(rt0.c1))) ISNULL) WHERE ((('-674342256') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((('-674342256') NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CASE vt0.c0  WHEN t0.c1 THEN t0.c2 ELSE x'' END)) RIGHT OUTER JOIN t0 ON ((((rt0.c2)|(rt0.c1))) ISNULL));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CASE vt0.c0  WHEN t0.c1 THEN t0.c2 ELSE x'' END)) RIGHT OUTER JOIN t0 ON ((((rt0.c2)|(rt0.c1))) ISNULL) WHERE ((('-674342256') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((('-674342256') NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CASE vt0.c0  WHEN t0.c1 THEN t0.c2 ELSE x'' END)) RIGHT OUTER JOIN t0 ON ((((rt0.c2)|(rt0.c1))) ISNULL));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c2)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c2)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((t0.c2 IN ()))%((((t0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c2))))) LEFT OUTER JOIN t0 ON ((((((((((t0.c0)%(t0.c0)))OR(t0.c0 COLLATE BINARY)))AND(LIKELY(t0.c0))))OR(((t0.c0)GLOB(t0.c1)))))AND(((rt0.c0)IS(vt0.c0)))) WHERE (IFNULL(((t0.c2)+(NULL)), ((vt0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((t0.c2)+(NULL)), ((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((t0.c2 IN ()))%((((t0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c2))))) LEFT OUTER JOIN t0 ON ((((((((((t0.c0)%(t0.c0)))OR(t0.c0 COLLATE BINARY)))AND(LIKELY(t0.c0))))OR(((t0.c0)GLOB(t0.c1)))))AND(((rt0.c0)IS(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((t0.c2 IN ()))%((((t0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c2))))) LEFT OUTER JOIN t0 ON ((((((((((t0.c0)%(t0.c0)))OR(t0.c0 COLLATE BINARY)))AND(LIKELY(t0.c0))))OR(((t0.c0)GLOB(t0.c1)))))AND(((rt0.c0)IS(vt0.c0)))) WHERE (IFNULL(((t0.c2)+(NULL)), ((vt0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((t0.c2)+(NULL)), ((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((t0.c2 IN ()))%((((t0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c2))))) LEFT OUTER JOIN t0 ON ((((((((((t0.c0)%(t0.c0)))OR(t0.c0 COLLATE BINARY)))AND(LIKELY(t0.c0))))OR(((t0.c0)GLOB(t0.c1)))))AND(((rt0.c0)IS(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((t0.c2 IN ()))%((((t0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c2))))) LEFT OUTER JOIN t0 ON ((((((((((t0.c0)%(t0.c0)))OR(t0.c0 COLLATE BINARY)))AND(LIKELY(t0.c0))))OR(((t0.c0)GLOB(t0.c1)))))AND(((rt0.c0)IS(vt0.c0)))) WHERE (IFNULL(((t0.c2)+(NULL)), ((vt0.c0)%(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))AND((((rt0.c2, rt0.c0, rt0.c0, rt0.c2, rt0.c0))>=((0.5842102425104736, rt0.c0, rt0.c2, rt0.c2, rt0.c1))))))AND('227476776')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))AND((((rt0.c2, rt0.c0, rt0.c0, rt0.c2, rt0.c0))>=((0.5842102425104736, rt0.c0, rt0.c2, rt0.c2, rt0.c1))))))AND('227476776'))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))AND((((rt0.c2, rt0.c0, rt0.c0, rt0.c2, rt0.c0))>=((0.5842102425104736, rt0.c0, rt0.c2, rt0.c2, rt0.c1))))))AND('227476776')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))AND((((rt0.c2, rt0.c0, rt0.c0, rt0.c2, rt0.c0))>=((0.5842102425104736, rt0.c0, rt0.c2, rt0.c2, rt0.c1))))))AND('227476776'))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))AND((((rt0.c2, rt0.c0, rt0.c0, rt0.c2, rt0.c0))>=((0.5842102425104736, rt0.c0, rt0.c2, rt0.c2, rt0.c1))))))AND('227476776')));
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((t0.c0)-(rt0.c1))) NOT BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (t0.c2 COLLATE RTRIM))) ORDER BY (((~ (t0.c2))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)-(rt0.c1))) NOT BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((~ (t0.c2))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((t0.c0)-(rt0.c1))) NOT BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (t0.c2 COLLATE RTRIM))) ORDER BY (((~ (t0.c2))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)-(rt0.c1))) NOT BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((~ (t0.c2))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((t0.c0)-(rt0.c1))) NOT BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (t0.c2 COLLATE RTRIM))) ORDER BY (((~ (t0.c2))) IS TRUE)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) AND (rt0.c2))) ORDER BY CAST(rt0.c1 AS REAL), (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END IN ()) ASC, (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) AND (rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS REAL), (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END IN ()) ASC, (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) ISNULL)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) AND (rt0.c2))) ORDER BY CAST(rt0.c1 AS REAL), (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END IN ()) ASC, (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) AND (rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS REAL), (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END IN ()) ASC, (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) ISNULL)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) AND (rt0.c2))) ORDER BY CAST(rt0.c1 AS REAL), (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END IN ()) ASC, (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) ISNULL)  NULLS LAST;
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c2) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c2) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c2) IS FALSE)) IS TRUE));
SELECT * FROM t0 WHERE (0X498f76b1);
SELECT SUM(count) FROM (SELECT ALL ((0X498f76b1) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0X498f76b1);
SELECT SUM(count) FROM (SELECT ALL ((0X498f76b1) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0X498f76b1);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c1)OR(rt0.c1))))) ORDER BY CAST(rt0.c2 AS BLOB) COLLATE BINARY COLLATE NOCASE ASC  NULLS LAST, NULL  NULLS LAST, ((((x'')AND((NOT (rt0.c2)))))OR((((0.12046487259346494)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 AS BLOB) COLLATE BINARY COLLATE NOCASE ASC  NULLS LAST, NULL  NULLS LAST, ((((x'')AND((NOT (rt0.c2)))))OR((((0.12046487259346494)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c1)OR(rt0.c1))))) ORDER BY CAST(rt0.c2 AS BLOB) COLLATE BINARY COLLATE NOCASE ASC  NULLS LAST, NULL  NULLS LAST, ((((x'')AND((NOT (rt0.c2)))))OR((((0.12046487259346494)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 AS BLOB) COLLATE BINARY COLLATE NOCASE ASC  NULLS LAST, NULL  NULLS LAST, ((((x'')AND((NOT (rt0.c2)))))OR((((0.12046487259346494)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c1)OR(rt0.c1))))) ORDER BY CAST(rt0.c2 AS BLOB) COLLATE BINARY COLLATE NOCASE ASC  NULLS LAST, NULL  NULLS LAST, ((((x'')AND((NOT (rt0.c2)))))OR((((0.12046487259346494)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)GLOB((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)GLOB((~ (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)GLOB((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)GLOB((~ (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)GLOB((~ (t0.c2)))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON CASE vt0.c0  WHEN t0.c0 THEN vt0.c1 END COLLATE RTRIM WHERE ((TOTAL_CHANGES() IN ())) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ALL (((TOTAL_CHANGES() IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE vt0.c0  WHEN t0.c0 THEN vt0.c1 END COLLATE RTRIM ORDER BY t0.c1);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON CASE vt0.c0  WHEN t0.c0 THEN vt0.c1 END COLLATE RTRIM WHERE ((TOTAL_CHANGES() IN ())) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ALL (((TOTAL_CHANGES() IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE vt0.c0  WHEN t0.c0 THEN vt0.c1 END COLLATE RTRIM ORDER BY t0.c1);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON CASE vt0.c0  WHEN t0.c0 THEN vt0.c1 END COLLATE RTRIM WHERE ((TOTAL_CHANGES() IN ())) ORDER BY t0.c1;
SELECT COUNT(*) FROM t0, rt0 WHERE (LIKE('', ((t0.c1) ISNULL))) ORDER BY CAST(((((t0.c1)OR(rt0.c2)))OR(t0.c2)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE('', ((t0.c1) ISNULL))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((((t0.c1)OR(rt0.c2)))OR(t0.c2)) AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (LIKE('', ((t0.c1) ISNULL))) ORDER BY CAST(((((t0.c1)OR(rt0.c2)))OR(t0.c2)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE('', ((t0.c1) ISNULL))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((((t0.c1)OR(rt0.c2)))OR(t0.c2)) AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (LIKE('', ((t0.c1) ISNULL))) ORDER BY CAST(((((t0.c1)OR(rt0.c2)))OR(t0.c2)) AS INTEGER) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN ((((rt0.c2)OR(t0.c2)))AND(rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END) ORDER BY CAST(t0.c1 AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c2)OR(t0.c2)))AND(rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(t0.c1 AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN ((((rt0.c2)OR(t0.c2)))AND(rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END) ORDER BY CAST(t0.c1 AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c2)OR(t0.c2)))AND(rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(t0.c1 AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN ((((rt0.c2)OR(t0.c2)))AND(rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END) ORDER BY CAST(t0.c1 AS BLOB) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((vt0.c1)&(t0.c1)))IS NOT((NOT (rt0.c0))))) ORDER BY CAST(t0.c0 AS BLOB) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)&(t0.c1)))IS NOT((NOT (rt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(t0.c0 AS BLOB) COLLATE BINARY);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((vt0.c1)&(t0.c1)))IS NOT((NOT (rt0.c0))))) ORDER BY CAST(t0.c0 AS BLOB) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)&(t0.c1)))IS NOT((NOT (rt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(t0.c0 AS BLOB) COLLATE BINARY);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((vt0.c1)&(t0.c1)))IS NOT((NOT (rt0.c0))))) ORDER BY CAST(t0.c0 AS BLOB) COLLATE BINARY;
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY t0.c0 ASC  NULLS FIRST, CAST((('-770317063') IS TRUE) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS FIRST, CAST((('-770317063') IS TRUE) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY t0.c0 ASC  NULLS FIRST, CAST((('-770317063') IS TRUE) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS FIRST, CAST((('-770317063') IS TRUE) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY t0.c0 ASC  NULLS FIRST, CAST((('-770317063') IS TRUE) AS REAL)  NULLS LAST;
SELECT * FROM vt0 INNER JOIN t0 ON -274329631 RIGHT OUTER JOIN rt0 ON t0.c2 WHERE (CASE ((t0.c0)%(t0.c2))  WHEN ((rt0.c2) ISNULL) THEN CAST('U()' AS NUMERIC) ELSE CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)%(t0.c2))  WHEN ((rt0.c2) ISNULL) THEN CAST('U()' AS NUMERIC) ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON -274329631 RIGHT OUTER JOIN rt0 ON t0.c2);
SELECT * FROM vt0 INNER JOIN t0 ON -274329631 RIGHT OUTER JOIN rt0 ON t0.c2 WHERE (CASE ((t0.c0)%(t0.c2))  WHEN ((rt0.c2) ISNULL) THEN CAST('U()' AS NUMERIC) ELSE CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)%(t0.c2))  WHEN ((rt0.c2) ISNULL) THEN CAST('U()' AS NUMERIC) ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON -274329631 RIGHT OUTER JOIN rt0 ON t0.c2);
SELECT * FROM vt0 INNER JOIN t0 ON -274329631 RIGHT OUTER JOIN rt0 ON t0.c2 WHERE (CASE ((t0.c0)%(t0.c2))  WHEN ((rt0.c2) ISNULL) THEN CAST('U()' AS NUMERIC) ELSE CAST(vt0.c0 AS REAL) END);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS BLOB));
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE ((NOT (((t0.c0)+(0x361c4ad2))))) ORDER BY (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))OR(((((((((((((vt0.c1)OR(t0.c1)))OR(t0.c1)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c2)))AND(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0)+(0x361c4ad2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))OR(((((((((((((vt0.c1)OR(t0.c1)))OR(t0.c1)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c2)))AND(t0.c2))))  NULLS LAST);
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE ((NOT (((t0.c0)+(0x361c4ad2))))) ORDER BY (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))OR(((((((((((((vt0.c1)OR(t0.c1)))OR(t0.c1)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c2)))AND(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0)+(0x361c4ad2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))OR(((((((((((((vt0.c1)OR(t0.c1)))OR(t0.c1)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c2)))AND(t0.c2))))  NULLS LAST);
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE ((NOT (((t0.c0)+(0x361c4ad2))))) ORDER BY (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))OR(((((((((((((vt0.c1)OR(t0.c1)))OR(t0.c1)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c2)))AND(t0.c2))))  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (TRIM(CAST(t0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((TRIM(CAST(t0.c2 AS BLOB))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (TRIM(CAST(t0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((TRIM(CAST(t0.c2 AS BLOB))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (TRIM(CAST(t0.c2 AS BLOB)));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2, t0.c0, '-2100905968')) NOT BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c2, t0.c2, NULL)))) NOTNULL)) ORDER BY ((((t0.c1) NOT NULL)) NOT BETWEEN (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))), ((t0.c2 COLLATE NOCASE)||(CAST(t0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2, t0.c0, '-2100905968')) NOT BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c2, t0.c2, NULL)))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1) NOT NULL)) NOT BETWEEN (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))), ((t0.c2 COLLATE NOCASE)||(CAST(t0.c0 AS BLOB)))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2, t0.c0, '-2100905968')) NOT BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c2, t0.c2, NULL)))) NOTNULL)) ORDER BY ((((t0.c1) NOT NULL)) NOT BETWEEN (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))), ((t0.c2 COLLATE NOCASE)||(CAST(t0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2, t0.c0, '-2100905968')) NOT BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c2, t0.c2, NULL)))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1) NOT NULL)) NOT BETWEEN (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))), ((t0.c2 COLLATE NOCASE)||(CAST(t0.c0 AS BLOB)))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2, t0.c0, '-2100905968')) NOT BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c2, t0.c2, NULL)))) NOTNULL)) ORDER BY ((((t0.c1) NOT NULL)) NOT BETWEEN (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))), ((t0.c2 COLLATE NOCASE)||(CAST(t0.c0 AS BLOB)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(298857986)))AND(vt0.c1)) IN ((vt0.c0 IN ()), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '617418394' END))) ORDER BY CAST(((('hXGd>AK	')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(298857986)))AND(vt0.c1)) IN ((vt0.c0 IN ()), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '617418394' END))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((('hXGd>AK	')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(298857986)))AND(vt0.c1)) IN ((vt0.c0 IN ()), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '617418394' END))) ORDER BY CAST(((('hXGd>AK	')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(298857986)))AND(vt0.c1)) IN ((vt0.c0 IN ()), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '617418394' END))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((('hXGd>AK	')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(298857986)))AND(vt0.c1)) IN ((vt0.c0 IN ()), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '617418394' END))) ORDER BY CAST(((('hXGd>AK	')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON (NULLIF(vt0.c1, vt0.c1) IN (vt0.c0 COLLATE RTRIM)) WHERE ((((t0.c2 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ())) ISNULL)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON (NULLIF(vt0.c1, vt0.c1) IN (vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON (NULLIF(vt0.c1, vt0.c1) IN (vt0.c0 COLLATE RTRIM)) WHERE ((((t0.c2 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ())) ISNULL)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON (NULLIF(vt0.c1, vt0.c1) IN (vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON (NULLIF(vt0.c1, vt0.c1) IN (vt0.c0 COLLATE RTRIM)) WHERE ((((t0.c2 IN ())) ISNULL));
SELECT ALL * FROM rt0 WHERE (((rt0.c0)%(TIME('-1952797308', 'P\t', rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)%(TIME('-1952797308', 'P\t', rt0.c1)))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)%(TIME('-1952797308', 'P\t', rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)%(TIME('-1952797308', 'P\t', rt0.c1)))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)%(TIME('-1952797308', 'P\t', rt0.c1))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((ABS(t0.c2))AND(((((rt0.c2)AND(NULL)))AND(t0.c2)))))AND(((t0.c2)<<(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((ABS(t0.c2))AND(((((rt0.c2)AND(NULL)))AND(t0.c2)))))AND(((t0.c2)<<(t0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((ABS(t0.c2))AND(((((rt0.c2)AND(NULL)))AND(t0.c2)))))AND(((t0.c2)<<(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((ABS(t0.c2))AND(((((rt0.c2)AND(NULL)))AND(t0.c2)))))AND(((t0.c2)<<(t0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((ABS(t0.c2))AND(((((rt0.c2)AND(NULL)))AND(t0.c2)))))AND(((t0.c2)<<(t0.c1)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE ((((((rt0.c0))=((rt0.c1)))) BETWEEN (((t0.c0)=(x''))) AND (CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))=((rt0.c1)))) BETWEEN (((t0.c0)==(x''))) AND (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c0);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE ((((((rt0.c0))=((rt0.c1)))) BETWEEN (((t0.c0)=(x''))) AND (CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))=((rt0.c1)))) BETWEEN (((t0.c0)==(x''))) AND (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c0);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE ((((((rt0.c0))=((rt0.c1)))) BETWEEN (((t0.c0)=(x''))) AND (CAST(rt0.c0 AS TEXT))));
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c2, t0.c2, -601542258)) NOT BETWEEN ((((vt0.c1)/(t0.c0)), ((vt0.c1) IS FALSE), vt0.c0 COLLATE NOCASE)) AND ((x'', '', (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))))) ORDER BY '0.41667666867531794'  NULLS LAST, ((NULL) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, t0.c2, -601542258)) NOT BETWEEN ((((vt0.c1)/(t0.c0)), ((vt0.c1) IS FALSE), vt0.c0 COLLATE NOCASE)) AND ((x'', '', (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))))) IS TRUE)  as count FROM vt0, t0 ORDER BY '0.41667666867531794'  NULLS LAST, ((NULL) ISNULL)  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c2, t0.c2, -601542258)) NOT BETWEEN ((((vt0.c1)/(t0.c0)), ((vt0.c1) IS FALSE), vt0.c0 COLLATE NOCASE)) AND ((x'', '', (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))))) ORDER BY '0.41667666867531794'  NULLS LAST, ((NULL) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, t0.c2, -601542258)) NOT BETWEEN ((((vt0.c1)/(t0.c0)), ((vt0.c1) IS FALSE), vt0.c0 COLLATE NOCASE)) AND ((x'', '', (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))))) IS TRUE)  as count FROM vt0, t0 ORDER BY '0.41667666867531794'  NULLS LAST, ((NULL) ISNULL)  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c2, t0.c2, -601542258)) NOT BETWEEN ((((vt0.c1)/(t0.c0)), ((vt0.c1) IS FALSE), vt0.c0 COLLATE NOCASE)) AND ((x'', '', (((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))))) ORDER BY '0.41667666867531794'  NULLS LAST, ((NULL) ISNULL)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c0, vt0.c1))), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), 'SQ<[')) AND ((((vt0.c0) ISNULL), vt0.c0 COLLATE BINARY, ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c0, vt0.c1))), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), 'SQ<[')) AND ((((vt0.c0) ISNULL), vt0.c0 COLLATE BINARY, ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c0, vt0.c1))), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), 'SQ<[')) AND ((((vt0.c0) ISNULL), vt0.c0 COLLATE BINARY, ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c0, vt0.c1))), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), 'SQ<[')) AND ((((vt0.c0) ISNULL), vt0.c0 COLLATE BINARY, ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c0, vt0.c1))), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), 'SQ<[')) AND ((((vt0.c0) ISNULL), vt0.c0 COLLATE BINARY, ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1))))));
SELECT * FROM t0, vt0 WHERE (TYPEOF((+ (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((+ (t0.c1)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (TYPEOF((+ (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((+ (t0.c1)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (TYPEOF((+ (t0.c1))));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((((rt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(x'9040')))OR(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(x'9040')))OR(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((((rt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(x'9040')))OR(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(x'9040')))OR(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((((rt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(x'9040')))OR(rt0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-1454075106') BETWEEN (-533750931) AND ((NOT (vt0.c0))))) ORDER BY ((((((vt0.c0)OR(vt0.c1)))OR(0.255684460442671))) NOT BETWEEN (rtreenode(vt0.c0, vt0.c0)) AND (((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-1454075106') BETWEEN (-533750931) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c1)))OR(0.255684460442671))) NOT BETWEEN (rtreenode(vt0.c0, vt0.c0)) AND (((vt0.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-1454075106') BETWEEN (-533750931) AND ((NOT (vt0.c0))))) ORDER BY ((((((vt0.c0)OR(vt0.c1)))OR(0.255684460442671))) NOT BETWEEN (rtreenode(vt0.c0, vt0.c0)) AND (((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-1454075106') BETWEEN (-533750931) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c1)))OR(0.255684460442671))) NOT BETWEEN (rtreenode(vt0.c0, vt0.c0)) AND (((vt0.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-1454075106') BETWEEN (-533750931) AND ((NOT (vt0.c0))))) ORDER BY ((((((vt0.c0)OR(vt0.c1)))OR(0.255684460442671))) NOT BETWEEN (rtreenode(vt0.c0, vt0.c0)) AND (((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE (CASE rt0.c0  WHEN CASE rt0.c2  WHEN t0.c2 THEN rt0.c2 END THEN TYPEOF(DISTINCT rt0.c2) WHEN t0.c1 THEN ((rt0.c1) BETWEEN (rt0.c2) AND (t0.c1)) WHEN t0.c0 COLLATE RTRIM THEN (rt0.c1 IN ()) ELSE ((rt0.c1)IS NOT(rt0.c1)) END) ORDER BY CASE WHEN (NOT (rt0.c0)) THEN t0.c1 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN CASE rt0.c2  WHEN t0.c2 THEN rt0.c2 END THEN TYPEOF(DISTINCT rt0.c2) WHEN t0.c1 THEN ((rt0.c1) BETWEEN (rt0.c2) AND (t0.c1)) WHEN t0.c0 COLLATE RTRIM THEN (rt0.c1 IN ()) ELSE ((rt0.c1)IS NOT(rt0.c1)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN (NOT (rt0.c0)) THEN t0.c1 END DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (CASE rt0.c0  WHEN CASE rt0.c2  WHEN t0.c2 THEN rt0.c2 END THEN TYPEOF(DISTINCT rt0.c2) WHEN t0.c1 THEN ((rt0.c1) BETWEEN (rt0.c2) AND (t0.c1)) WHEN t0.c0 COLLATE RTRIM THEN (rt0.c1 IN ()) ELSE ((rt0.c1)IS NOT(rt0.c1)) END) ORDER BY CASE WHEN (NOT (rt0.c0)) THEN t0.c1 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN CASE rt0.c2  WHEN t0.c2 THEN rt0.c2 END THEN TYPEOF(DISTINCT rt0.c2) WHEN t0.c1 THEN ((rt0.c1) BETWEEN (rt0.c2) AND (t0.c1)) WHEN t0.c0 COLLATE RTRIM THEN (rt0.c1 IN ()) ELSE ((rt0.c1)IS NOT(rt0.c1)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN (NOT (rt0.c0)) THEN t0.c1 END DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (CASE rt0.c0  WHEN CASE rt0.c2  WHEN t0.c2 THEN rt0.c2 END THEN TYPEOF(DISTINCT rt0.c2) WHEN t0.c1 THEN ((rt0.c1) BETWEEN (rt0.c2) AND (t0.c1)) WHEN t0.c0 COLLATE RTRIM THEN (rt0.c1 IN ()) ELSE ((rt0.c1)IS NOT(rt0.c1)) END) ORDER BY CASE WHEN (NOT (rt0.c0)) THEN t0.c1 END DESC  NULLS LAST;
SELECT * FROM t0, rt0 WHERE (((CAST(t0.c1 AS REAL)) BETWEEN (((((((((1296420492)AND(rt0.c1)))OR(rt0.c0)))AND(t0.c2)))OR(t0.c0))) AND (((rt0.c1)<=(t0.c0))))) ORDER BY ((((((rt0.c2)AND(t0.c0)))AND(rt0.c2)))&(json_insert(NULL, rt0.c2, rt0.c0))), CAST(x'' AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS REAL)) BETWEEN (((((((((1296420492)AND(rt0.c1)))OR(rt0.c0)))AND(t0.c2)))OR(t0.c0))) AND (((rt0.c1)<=(t0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((rt0.c2)AND(t0.c0)))AND(rt0.c2)))&(json_insert(NULL, rt0.c2, rt0.c0))), CAST(x'' AS TEXT) ASC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((CAST(t0.c1 AS REAL)) BETWEEN (((((((((1296420492)AND(rt0.c1)))OR(rt0.c0)))AND(t0.c2)))OR(t0.c0))) AND (((rt0.c1)<=(t0.c0))))) ORDER BY ((((((rt0.c2)AND(t0.c0)))AND(rt0.c2)))&(json_insert(NULL, rt0.c2, rt0.c0))), CAST(x'' AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS REAL)) BETWEEN (((((((((1296420492)AND(rt0.c1)))OR(rt0.c0)))AND(t0.c2)))OR(t0.c0))) AND (((rt0.c1)<=(t0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((rt0.c2)AND(t0.c0)))AND(rt0.c2)))&(json_insert(NULL, rt0.c2, rt0.c0))), CAST(x'' AS TEXT) ASC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((CAST(t0.c1 AS REAL)) BETWEEN (((((((((1296420492)AND(rt0.c1)))OR(rt0.c0)))AND(t0.c2)))OR(t0.c0))) AND (((rt0.c1)<=(t0.c0))))) ORDER BY ((((((rt0.c2)AND(t0.c0)))AND(rt0.c2)))&(json_insert(NULL, rt0.c2, rt0.c0))), CAST(x'' AS TEXT) ASC  NULLS LAST;
SELECT * FROM rt0, vt0, t0 WHERE ((((t0.c0 IN ())) BETWEEN (0Xffffffff864394b6) AND (x'59a2'))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) BETWEEN (0Xffffffff864394b6) AND (x'59a2'))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT * FROM rt0, vt0, t0 WHERE ((((t0.c0 IN ())) BETWEEN (0Xffffffff864394b6) AND (x'59a2'))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) BETWEEN (0Xffffffff864394b6) AND (x'59a2'))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT * FROM rt0, vt0, t0 WHERE ((((t0.c0 IN ())) BETWEEN (0Xffffffff864394b6) AND (x'59a2'))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c2))>=((t0.c2))), (rt0.c0 IN ()), ((t0.c2)AND(t0.c1))))>((((rt0.c2)>(rt0.c0)), t0.c0, rt0.c2))) WHERE (((((((((((-2.135262516E9)OR(rt0.c0)))OR('')))OR(rt0.c2)))AND(t0.c1)))&((rt0.c1 IN (x'cf7e'))))) ORDER BY (((t0.c2)>>(rt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((-2.135262516E9)OR(rt0.c0)))OR('')))OR(rt0.c2)))AND(t0.c1)))&((rt0.c1 IN (x'cf7e'))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c2))>=((t0.c2))), (rt0.c0 IN ()), ((t0.c2)AND(t0.c1))))>((((rt0.c2)>(rt0.c0)), t0.c0, rt0.c2))) ORDER BY (((t0.c2)>>(rt0.c1)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c2))>=((t0.c2))), (rt0.c0 IN ()), ((t0.c2)AND(t0.c1))))>((((rt0.c2)>(rt0.c0)), t0.c0, rt0.c2))) WHERE (((((((((((-2.135262516E9)OR(rt0.c0)))OR('')))OR(rt0.c2)))AND(t0.c1)))&((rt0.c1 IN (x'cf7e'))))) ORDER BY (((t0.c2)>>(rt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((-2.135262516E9)OR(rt0.c0)))OR('')))OR(rt0.c2)))AND(t0.c1)))&((rt0.c1 IN (x'cf7e'))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c2))>=((t0.c2))), (rt0.c0 IN ()), ((t0.c2)AND(t0.c1))))>((((rt0.c2)>(rt0.c0)), t0.c0, rt0.c2))) ORDER BY (((t0.c2)>>(rt0.c1)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c2))>=((t0.c2))), (rt0.c0 IN ()), ((t0.c2)AND(t0.c1))))>((((rt0.c2)>(rt0.c0)), t0.c0, rt0.c2))) WHERE (((((((((((-2.135262516E9)OR(rt0.c0)))OR('')))OR(rt0.c2)))AND(t0.c1)))&((rt0.c1 IN (x'cf7e'))))) ORDER BY (((t0.c2)>>(rt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0)))))) ORDER BY (((+ (vt0.c0)))/(((NULL)&(0.38841837198216744)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0)))/(((NULL)&(0.38841837198216744)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0)))))) ORDER BY (((+ (vt0.c0)))/(((NULL)&(0.38841837198216744)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0)))/(((NULL)&(0.38841837198216744)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0)))))) ORDER BY (((+ (vt0.c0)))/(((NULL)&(0.38841837198216744)))) ASC;
SELECT * FROM vt0, t0 WHERE ((NOT (t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((NOT (t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((NOT (t0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS REAL)) ORDER BY CASE (- ('1854072494'))  WHEN (NOT (rt0.c0)) THEN (rt0.c2 IN (rt0.c0)) ELSE ((rt0.c0)>>(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS INTEGER) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CASE (- ('1854072494'))  WHEN (NOT (rt0.c0)) THEN (rt0.c2 IN (rt0.c0)) ELSE ((rt0.c0)>>(rt0.c2)) END);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS REAL)) ORDER BY CASE (- ('1854072494'))  WHEN (NOT (rt0.c0)) THEN (rt0.c2 IN (rt0.c0)) ELSE ((rt0.c0)>>(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS INTEGER) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CASE (- ('1854072494'))  WHEN (NOT (rt0.c0)) THEN (rt0.c2 IN (rt0.c0)) ELSE ((rt0.c0)>>(rt0.c2)) END);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS REAL)) ORDER BY CASE (- ('1854072494'))  WHEN (NOT (rt0.c0)) THEN (rt0.c2 IN (rt0.c0)) ELSE ((rt0.c0)>>(rt0.c2)) END;
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)>((+ (t0.c0))))) ORDER BY ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)) COLLATE RTRIM, CASE WHEN t0.c0 THEN ((0.6441822123085462)%('%')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)>((+ (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)) COLLATE RTRIM, CASE WHEN t0.c0 THEN ((0.6441822123085462)%('%')) END  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)>((+ (t0.c0))))) ORDER BY ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)) COLLATE RTRIM, CASE WHEN t0.c0 THEN ((0.6441822123085462)%('%')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)>((+ (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)) COLLATE RTRIM, CASE WHEN t0.c0 THEN ((0.6441822123085462)%('%')) END  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)>((+ (t0.c0))))) ORDER BY ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)) COLLATE RTRIM, CASE WHEN t0.c0 THEN ((0.6441822123085462)%('%')) END  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((0.7360686188448898)=(IFNULL(DISTINCT -2.04239137E9, t0.c0)))) ORDER BY ((((t0.c0) IS FALSE))+(CAST(t0.c2 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0.7360686188448898)==(IFNULL(DISTINCT -2.04239137E9, t0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0) IS FALSE))+(CAST(t0.c2 AS REAL))) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((0.7360686188448898)=(IFNULL(DISTINCT -2.04239137E9, t0.c0)))) ORDER BY ((((t0.c0) IS FALSE))+(CAST(t0.c2 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0.7360686188448898)==(IFNULL(DISTINCT -2.04239137E9, t0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0) IS FALSE))+(CAST(t0.c2 AS REAL))) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((0.7360686188448898)=(IFNULL(DISTINCT -2.04239137E9, t0.c0)))) ORDER BY ((((t0.c0) IS FALSE))+(CAST(t0.c2 AS REAL))) ASC;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (CAST((NOT (t0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c2)) AS INTEGER)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (CAST((NOT (t0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c2)) AS INTEGER)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (CAST((NOT (t0.c2)) AS INTEGER));
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (((('EO') BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('EO') BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((('EO') BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('EO') BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((('EO') BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY vt0.c1  NULLS LAST;
SELECT ALL * FROM t0, rt0, vt0 WHERE (CASE (((vt0.c1))<=((rt0.c2)))  WHEN ((vt0.c0)||(t0.c2)) THEN ((((t0.c0)OR(t0.c2)))OR(vt0.c0)) ELSE CAST(t0.c1 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c1))<=((rt0.c2)))  WHEN ((vt0.c0)||(t0.c2)) THEN ((((t0.c0)OR(t0.c2)))OR(vt0.c0)) ELSE CAST(t0.c1 AS BLOB) END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (CASE (((vt0.c1))<=((rt0.c2)))  WHEN ((vt0.c0)||(t0.c2)) THEN ((((t0.c0)OR(t0.c2)))OR(vt0.c0)) ELSE CAST(t0.c1 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c1))<=((rt0.c2)))  WHEN ((vt0.c0)||(t0.c2)) THEN ((((t0.c0)OR(t0.c2)))OR(vt0.c0)) ELSE CAST(t0.c1 AS BLOB) END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (CASE (((vt0.c1))<=((rt0.c2)))  WHEN ((vt0.c0)||(t0.c2)) THEN ((((t0.c0)OR(t0.c2)))OR(vt0.c0)) ELSE CAST(t0.c1 AS BLOB) END);
SELECT * FROM rt0, vt0 WHERE (CAST(((vt0.c0)%(vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)%(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(((vt0.c0)%(vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)%(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(((vt0.c0)%(vt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL))|(((((((((t0.c1)AND(rt0.c0)))OR(t0.c1)))OR(rt0.c0)))AND(t0.c1)))) WHERE (CAST(rt0.c1 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL))|(((((((((t0.c1)AND(rt0.c0)))OR(t0.c1)))OR(rt0.c0)))AND(t0.c1)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL))|(((((((((t0.c1)AND(rt0.c0)))OR(t0.c1)))OR(rt0.c0)))AND(t0.c1)))) WHERE (CAST(rt0.c1 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL))|(((((((((t0.c1)AND(rt0.c0)))OR(t0.c1)))OR(rt0.c0)))AND(t0.c1)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL))|(((((((((t0.c1)AND(rt0.c0)))OR(t0.c1)))OR(rt0.c0)))AND(t0.c1)))) WHERE (CAST(rt0.c1 AS REAL));
SELECT ALL * FROM t0, vt0, rt0 WHERE (((NULL)>=((rt0.c1 IN ())))) ORDER BY UPPER((((t0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)>=((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY UPPER((((t0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((NULL)>=((rt0.c1 IN ())))) ORDER BY UPPER((((t0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)>=((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY UPPER((((t0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((NULL)>=((rt0.c1 IN ())))) ORDER BY UPPER((((t0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((x'')OR(rt0.c1)))AND(1.296420492E9)))AND(((rt0.c1) IS TRUE))))AND(rt0.c1))) ORDER BY (NOT ('0.4403525647227078'));
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(rt0.c1)))AND(1.296420492E9)))AND(((rt0.c1) IS TRUE))))AND(rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT ('0.4403525647227078')));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((x'')OR(rt0.c1)))AND(1.296420492E9)))AND(((rt0.c1) IS TRUE))))AND(rt0.c1))) ORDER BY (NOT ('0.4403525647227078'));
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(rt0.c1)))AND(1.296420492E9)))AND(((rt0.c1) IS TRUE))))AND(rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT ('0.4403525647227078')));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((x'')OR(rt0.c1)))AND(1.296420492E9)))AND(((rt0.c1) IS TRUE))))AND(rt0.c1))) ORDER BY (NOT ('0.4403525647227078'));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c1)OR('-1684594846')))AND(t0.c0)) IN ())) ORDER BY t0.c1 DESC  NULLS FIRST, ((CASE x'da8a'  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN -811100113 WHEN t0.c0 THEN t0.c2 END) BETWEEN (((t0.c1)<<('gr'))) AND (CAST(NULL AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((((t0.c1)OR('-1684594846')))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY t0.c1 DESC  NULLS FIRST, ((CASE x'da8a'  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN -811100113 WHEN t0.c0 THEN t0.c2 END) BETWEEN (((t0.c1)<<('gr'))) AND (CAST(NULL AS NUMERIC))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c1)OR('-1684594846')))AND(t0.c0)) IN ())) ORDER BY t0.c1 DESC  NULLS FIRST, ((CASE x'da8a'  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN -811100113 WHEN t0.c0 THEN t0.c2 END) BETWEEN (((t0.c1)<<('gr'))) AND (CAST(NULL AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((((t0.c1)OR('-1684594846')))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY t0.c1 DESC  NULLS FIRST, ((CASE x'da8a'  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN -811100113 WHEN t0.c0 THEN t0.c2 END) BETWEEN (((t0.c1)<<('gr'))) AND (CAST(NULL AS NUMERIC))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c1)OR('-1684594846')))AND(t0.c0)) IN ())) ORDER BY t0.c1 DESC  NULLS FIRST, ((CASE x'da8a'  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN -811100113 WHEN t0.c0 THEN t0.c2 END) BETWEEN (((t0.c1)<<('gr'))) AND (CAST(NULL AS NUMERIC)));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST((t0.c2 IN (rt0.c2)) AS INTEGER)) ORDER BY (- (CAST(vt0.c0 AS TEXT))), ((((0.4996812114784981)OR(((rt0.c0)>>(vt0.c0)))))OR(((t0.c1)AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c2 IN (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (- (CAST(vt0.c0 AS TEXT))), ((((0.4996812114784981)OR(((rt0.c0)>>(vt0.c0)))))OR(((t0.c1)AND(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST((t0.c2 IN (rt0.c2)) AS INTEGER)) ORDER BY (- (CAST(vt0.c0 AS TEXT))), ((((0.4996812114784981)OR(((rt0.c0)>>(vt0.c0)))))OR(((t0.c1)AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c2 IN (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (- (CAST(vt0.c0 AS TEXT))), ((((0.4996812114784981)OR(((rt0.c0)>>(vt0.c0)))))OR(((t0.c1)AND(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST((t0.c2 IN (rt0.c2)) AS INTEGER)) ORDER BY (- (CAST(vt0.c0 AS TEXT))), ((((0.4996812114784981)OR(((rt0.c0)>>(vt0.c0)))))OR(((t0.c1)AND(rt0.c2)))) ASC;
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1 IN ()))>(NULL)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))>(NULL))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1 IN ()))>(NULL)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))>(NULL))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1 IN ()))>(NULL)));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((rt0.c0, t0.c0, t0.c0))==((t0.c2, t0.c0, vt0.c1)))) NOTNULL)) ORDER BY (+ (t0.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, t0.c0, t0.c0))=((t0.c2, t0.c0, vt0.c1)))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (+ (t0.c1 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((rt0.c0, t0.c0, t0.c0))==((t0.c2, t0.c0, vt0.c1)))) NOTNULL)) ORDER BY (+ (t0.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, t0.c0, t0.c0))=((t0.c2, t0.c0, vt0.c1)))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (+ (t0.c1 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((rt0.c0, t0.c0, t0.c0))==((t0.c2, t0.c0, vt0.c1)))) NOTNULL)) ORDER BY (+ (t0.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (((((((vt0.c1)AND(rt0.c2)))OR(rt0.c0))) IS FALSE)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(rt0.c2)))OR(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) DESC);
SELECT * FROM rt0, vt0 WHERE (((((((vt0.c1)AND(rt0.c2)))OR(rt0.c0))) IS FALSE)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(rt0.c2)))OR(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) DESC);
SELECT * FROM rt0, vt0 WHERE (((((((vt0.c1)AND(rt0.c2)))OR(rt0.c0))) IS FALSE)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) DESC;
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c0) BETWEEN ((+ (vt0.c1))) AND ((((rt0.c0)) BETWEEN ((x'')) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN ((+ (vt0.c1))) AND ((((rt0.c0)) BETWEEN ((x'')) AND ((t0.c1)))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c0) BETWEEN ((+ (vt0.c1))) AND ((((rt0.c0)) BETWEEN ((x'')) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN ((+ (vt0.c1))) AND ((((rt0.c0)) BETWEEN ((x'')) AND ((t0.c1)))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c0) BETWEEN ((+ (vt0.c1))) AND ((((rt0.c0)) BETWEEN ((x'')) AND ((t0.c1))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((-92070691)<>(x'')) IN ()));
SELECT SUM(count) FROM (SELECT (((((-92070691)!=(x'')) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((-92070691)<>(x'')) IN ()));
SELECT SUM(count) FROM (SELECT (((((-92070691)!=(x'')) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((-92070691)<>(x'')) IN ()));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY LIKELIHOOD(rt0.c2 COLLATE NOCASE, 0.09428246419908715) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(rt0.c2 COLLATE NOCASE, 0.09428246419908715) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY LIKELIHOOD(rt0.c2 COLLATE NOCASE, 0.09428246419908715) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(rt0.c2 COLLATE NOCASE, 0.09428246419908715) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY LIKELIHOOD(rt0.c2 COLLATE NOCASE, 0.09428246419908715) DESC  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN rt0 ON CASE WHEN (+ (rt0.c1)) THEN ((vt0.c1)%(rt0.c0)) ELSE NULL END LEFT OUTER JOIN vt0 ON rt0.c2 WHERE (((vt0.c1 COLLATE NOCASE)*((+ (t0.c2))))) ORDER BY (NOT (t0.c2)) COLLATE BINARY ASC  NULLS LAST, (rt0.c0 IN ()) COLLATE RTRIM DESC  NULLS LAST, vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE)*((+ (t0.c2))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CASE WHEN (+ (rt0.c1)) THEN ((vt0.c1)%(rt0.c0)) ELSE NULL END LEFT OUTER JOIN vt0 ON rt0.c2 ORDER BY (NOT (t0.c2)) COLLATE BINARY ASC  NULLS LAST, (rt0.c0 IN ()) COLLATE RTRIM DESC  NULLS LAST, vt0.c1 DESC  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON CASE WHEN (+ (rt0.c1)) THEN ((vt0.c1)%(rt0.c0)) ELSE NULL END LEFT OUTER JOIN vt0 ON rt0.c2 WHERE (((vt0.c1 COLLATE NOCASE)*((+ (t0.c2))))) ORDER BY (NOT (t0.c2)) COLLATE BINARY ASC  NULLS LAST, (rt0.c0 IN ()) COLLATE RTRIM DESC  NULLS LAST, vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE)*((+ (t0.c2))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CASE WHEN (+ (rt0.c1)) THEN ((vt0.c1)%(rt0.c0)) ELSE NULL END LEFT OUTER JOIN vt0 ON rt0.c2 ORDER BY (NOT (t0.c2)) COLLATE BINARY ASC  NULLS LAST, (rt0.c0 IN ()) COLLATE RTRIM DESC  NULLS LAST, vt0.c1 DESC  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON CASE WHEN (+ (rt0.c1)) THEN ((vt0.c1)%(rt0.c0)) ELSE NULL END LEFT OUTER JOIN vt0 ON rt0.c2 WHERE (((vt0.c1 COLLATE NOCASE)*((+ (t0.c2))))) ORDER BY (NOT (t0.c2)) COLLATE BINARY ASC  NULLS LAST, (rt0.c0 IN ()) COLLATE RTRIM DESC  NULLS LAST, vt0.c1 DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))AND((+ (rt0.c0)))))OR(rt0.c1))) ORDER BY rt0.c1 DESC  NULLS FIRST, ((((rt0.c2)AND(0.014301592480892578)))OR(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))AND((+ (rt0.c0)))))OR(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS FIRST, ((((rt0.c2)AND(0.014301592480892578)))OR(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))AND((+ (rt0.c0)))))OR(rt0.c1))) ORDER BY rt0.c1 DESC  NULLS FIRST, ((((rt0.c2)AND(0.014301592480892578)))OR(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))AND((+ (rt0.c0)))))OR(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS FIRST, ((((rt0.c2)AND(0.014301592480892578)))OR(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))AND((+ (rt0.c0)))))OR(rt0.c1))) ORDER BY rt0.c1 DESC  NULLS FIRST, ((((rt0.c2)AND(0.014301592480892578)))OR(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((((((((NULL)OR(vt0.c1)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c1))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((t0.c2) NOT NULL))) AND ((t0.c0 COLLATE NOCASE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((((((((NULL)OR(vt0.c1)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((((t0.c2) NOT NULL))) AND ((t0.c0 COLLATE NOCASE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((((((((NULL)OR(vt0.c1)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c1))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((t0.c2) NOT NULL))) AND ((t0.c0 COLLATE NOCASE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((((((((NULL)OR(vt0.c1)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((((t0.c2) NOT NULL))) AND ((t0.c0 COLLATE NOCASE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((((((((NULL)OR(vt0.c1)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c1))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((t0.c2) NOT NULL))) AND ((t0.c0 COLLATE NOCASE))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0, rt0 WHERE (RTRIM(CASE WHEN t0.c1 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN t0.c1 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ((RTRIM(CASE WHEN t0.c1 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN t0.c1 ELSE t0.c0 END)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (RTRIM(CASE WHEN t0.c1 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN t0.c1 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ((RTRIM(CASE WHEN t0.c1 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN t0.c1 ELSE t0.c0 END)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (RTRIM(CASE WHEN t0.c1 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN t0.c1 ELSE t0.c0 END));
SELECT * FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))>(((vt0.c0) IS FALSE)))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<(vt0.c1 COLLATE BINARY)) DESC  NULLS FIRST, (vt0.c1 IN ()) ASC, (((vt0.c0 IN ()))>=(vt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c0)))>(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<(vt0.c1 COLLATE BINARY)) DESC  NULLS FIRST, (vt0.c1 IN ()) ASC, (((vt0.c0 IN ()))>=(vt0.c1 COLLATE RTRIM)) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))>(((vt0.c0) IS FALSE)))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<(vt0.c1 COLLATE BINARY)) DESC  NULLS FIRST, (vt0.c1 IN ()) ASC, (((vt0.c0 IN ()))>=(vt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c0)))>(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<(vt0.c1 COLLATE BINARY)) DESC  NULLS FIRST, (vt0.c1 IN ()) ASC, (((vt0.c0 IN ()))>=(vt0.c1 COLLATE RTRIM)) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))>(((vt0.c0) IS FALSE)))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<(vt0.c1 COLLATE BINARY)) DESC  NULLS FIRST, (vt0.c1 IN ()) ASC, (((vt0.c0 IN ()))>=(vt0.c1 COLLATE RTRIM)) ASC;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY ((rt0.c2)>(json_extract(t0.c2, t0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((rt0.c2)>(json_extract(t0.c2, t0.c1))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY ((rt0.c2)>(json_extract(t0.c2, t0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((rt0.c2)>(json_extract(t0.c2, t0.c1))) ASC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (~ ((t0.c2 IN ()))) WHERE (((CASE t0.c1  WHEN t0.c2 THEN NULL ELSE rt0.c0 END) IS FALSE)) ORDER BY (((((rt0.c0) NOT NULL)))=((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c1  WHEN t0.c2 THEN NULL ELSE rt0.c0 END) IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (~ ((t0.c2 IN ()))) ORDER BY (((((rt0.c0) NOT NULL)))=((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (~ ((t0.c2 IN ()))) WHERE (((CASE t0.c1  WHEN t0.c2 THEN NULL ELSE rt0.c0 END) IS FALSE)) ORDER BY (((((rt0.c0) NOT NULL)))=((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c1  WHEN t0.c2 THEN NULL ELSE rt0.c0 END) IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (~ ((t0.c2 IN ()))) ORDER BY (((((rt0.c0) NOT NULL)))=((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (~ ((t0.c2 IN ()))) WHERE (((CASE t0.c1  WHEN t0.c2 THEN NULL ELSE rt0.c0 END) IS FALSE)) ORDER BY (((((rt0.c0) NOT NULL)))=((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((t0.c1)&(rt0.c1)) COLLATE NOCASE) ORDER BY (((t0.c1)IS(rt0.c2)) IN ()), 1.175612755E9 ASC, (((((rt0.c1, t0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, t0.c1)) AND ((vt0.c0, t0.c1, t0.c2)))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((t0.c1)&(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((t0.c1)IS(rt0.c2)) IN ()), 1.175612755E9 ASC, (((((rt0.c1, t0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, t0.c1)) AND ((vt0.c0, t0.c1, t0.c2)))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((t0.c1)&(rt0.c1)) COLLATE NOCASE) ORDER BY (((t0.c1)IS(rt0.c2)) IN ()), 1.175612755E9 ASC, (((((rt0.c1, t0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, t0.c1)) AND ((vt0.c0, t0.c1, t0.c2)))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((t0.c1)&(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((t0.c1)IS(rt0.c2)) IN ()), 1.175612755E9 ASC, (((((rt0.c1, t0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, t0.c1)) AND ((vt0.c0, t0.c1, t0.c2)))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((t0.c1)&(rt0.c1)) COLLATE NOCASE) ORDER BY (((t0.c1)IS(rt0.c2)) IN ()), 1.175612755E9 ASC, (((((rt0.c1, t0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, t0.c1)) AND ((vt0.c0, t0.c1, t0.c2)))) IS TRUE);
SELECT * FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN 0Xffffffffdc25318e THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN 0Xffffffffdc25318e THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '' END IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN 0Xffffffffdc25318e THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN 0Xffffffffdc25318e THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '' END IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN 0Xffffffffdc25318e THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '' END IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (t0.c2 IN ()) THEN (- (t0.c0)) ELSE CAST(t0.c1 AS INTEGER) END) ORDER BY t0.c0 DESC, (NOT ((+ (t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c2 IN ()) THEN (- (t0.c0)) ELSE CAST(t0.c1 AS INTEGER) END) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC, (NOT ((+ (t0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (t0.c2 IN ()) THEN (- (t0.c0)) ELSE CAST(t0.c1 AS INTEGER) END) ORDER BY t0.c0 DESC, (NOT ((+ (t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c2 IN ()) THEN (- (t0.c0)) ELSE CAST(t0.c1 AS INTEGER) END) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC, (NOT ((+ (t0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (t0.c2 IN ()) THEN (- (t0.c0)) ELSE CAST(t0.c1 AS INTEGER) END) ORDER BY t0.c0 DESC, (NOT ((+ (t0.c1))))  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (((((rt0.c1)<<(rt0.c0)))<=(((x'') NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(rt0.c0)))<=(((x'') NOT NULL)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((rt0.c1)<<(rt0.c0)))<=(((x'') NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(rt0.c0)))<=(((x'') NOT NULL)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((rt0.c1)<<(rt0.c0)))<=(((x'') NOT NULL))));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((vt0.c0, rt0.c1, vt0.c0)) BETWEEN ((t0.c0, ((t0.c2)/(vt0.c1)), LOWER(DISTINCT rt0.c0))) AND ((((t0.c1)<(t0.c1)), CAST(vt0.c1 AS INTEGER), t0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c1, vt0.c0)) BETWEEN ((t0.c0, ((t0.c2)/(vt0.c1)), LOWER(DISTINCT rt0.c0))) AND ((((t0.c1)<(t0.c1)), CAST(vt0.c1 AS INTEGER), t0.c1)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((vt0.c0, rt0.c1, vt0.c0)) BETWEEN ((t0.c0, ((t0.c2)/(vt0.c1)), LOWER(DISTINCT rt0.c0))) AND ((((t0.c1)<(t0.c1)), CAST(vt0.c1 AS INTEGER), t0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c1, vt0.c0)) BETWEEN ((t0.c0, ((t0.c2)/(vt0.c1)), LOWER(DISTINCT rt0.c0))) AND ((((t0.c1)<(t0.c1)), CAST(vt0.c1 AS INTEGER), t0.c1)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((vt0.c0, rt0.c1, vt0.c0)) BETWEEN ((t0.c0, ((t0.c2)/(vt0.c1)), LOWER(DISTINCT rt0.c0))) AND ((((t0.c1)<(t0.c1)), CAST(vt0.c1 AS INTEGER), t0.c1))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT NULL)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (NULL))) ORDER BY ((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c1))) NOT BETWEEN (JULIANDAY(rt0.c2, rt0.c1, rt0.c1, rt0.c0, rt0.c2)) AND (IFNULL(rt0.c2, rt0.c2))) ASC, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c1))) NOT BETWEEN (JULIANDAY(rt0.c2, rt0.c1, rt0.c1, rt0.c0, rt0.c2)) AND (IFNULL(rt0.c2, rt0.c2))) ASC, x'' DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT NULL)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (NULL))) ORDER BY ((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c1))) NOT BETWEEN (JULIANDAY(rt0.c2, rt0.c1, rt0.c1, rt0.c0, rt0.c2)) AND (IFNULL(rt0.c2, rt0.c2))) ASC, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c1))) NOT BETWEEN (JULIANDAY(rt0.c2, rt0.c1, rt0.c1, rt0.c0, rt0.c2)) AND (IFNULL(rt0.c2, rt0.c2))) ASC, x'' DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT NULL)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (NULL))) ORDER BY ((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c1))) NOT BETWEEN (JULIANDAY(rt0.c2, rt0.c1, rt0.c1, rt0.c0, rt0.c2)) AND (IFNULL(rt0.c2, rt0.c2))) ASC, x'' DESC;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((((+ (t0.c0)))OR(rt0.c2)))OR(CASE t0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN x'' WHEN t0.c1 THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (t0.c0)))OR(rt0.c2)))OR(CASE t0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN x'' WHEN t0.c1 THEN t0.c2 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((((+ (t0.c0)))OR(rt0.c2)))OR(CASE t0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN x'' WHEN t0.c1 THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (t0.c0)))OR(rt0.c2)))OR(CASE t0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN x'' WHEN t0.c1 THEN t0.c2 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((((+ (t0.c0)))OR(rt0.c2)))OR(CASE t0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN x'' WHEN t0.c1 THEN t0.c2 END)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (CAST(rt0.c2 AS REAL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((((vt0.c1) NOTNULL))AND((('')-(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1) NOTNULL))AND((('')-(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((((vt0.c1) NOTNULL))AND((('')-(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1) NOTNULL))AND((('')-(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((((vt0.c1) NOTNULL))AND((('')-(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((rt0.c1 IN (vt0.c1, NULL)) COLLATE NOCASE) ORDER BY '-2042391370';
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (vt0.c1, NULL)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NOT INDEXED, t0, vt0 ORDER BY '-2042391370');
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((rt0.c1 IN (vt0.c1, NULL)) COLLATE NOCASE) ORDER BY '-2042391370';
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (vt0.c1, NULL)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NOT INDEXED, t0, vt0 ORDER BY '-2042391370');
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((rt0.c1 IN (vt0.c1, NULL)) COLLATE NOCASE) ORDER BY '-2042391370';
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((t0.c2)<>(rt0.c2)))%(x'')) FULL OUTER JOIN vt0 ON '-708720606' WHERE (((((rt0.c0 COLLATE NOCASE)OR(((vt0.c0)/(t0.c0)))))AND(((rt0.c2) BETWEEN ('286282392') AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE NOCASE)OR(((vt0.c0)/(t0.c0)))))AND(((rt0.c2) BETWEEN ('286282392') AND (t0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((t0.c2)<>(rt0.c2)))%(x'')) FULL OUTER JOIN vt0 ON '-708720606');
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((t0.c2)<>(rt0.c2)))%(x'')) FULL OUTER JOIN vt0 ON '-708720606' WHERE (((((rt0.c0 COLLATE NOCASE)OR(((vt0.c0)/(t0.c0)))))AND(((rt0.c2) BETWEEN ('286282392') AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE NOCASE)OR(((vt0.c0)/(t0.c0)))))AND(((rt0.c2) BETWEEN ('286282392') AND (t0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((t0.c2)<>(rt0.c2)))%(x'')) FULL OUTER JOIN vt0 ON '-708720606');
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((t0.c2)<>(rt0.c2)))%(x'')) FULL OUTER JOIN vt0 ON '-708720606' WHERE (((((rt0.c0 COLLATE NOCASE)OR(((vt0.c0)/(t0.c0)))))AND(((rt0.c2) BETWEEN ('286282392') AND (t0.c0)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((t0.c1) NOT BETWEEN (((t0.c2) NOT NULL)) AND (LIKELY(DISTINCT t0.c2))) WHERE (((((((t0.c1)AND(t0.c1)))OR(vt0.c0)))||(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)AND(t0.c1)))OR(vt0.c0)))||(((t0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((t0.c1) NOT BETWEEN (((t0.c2) NOT NULL)) AND (LIKELY(DISTINCT t0.c2))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((t0.c1) NOT BETWEEN (((t0.c2) NOT NULL)) AND (LIKELY(DISTINCT t0.c2))) WHERE (((((((t0.c1)AND(t0.c1)))OR(vt0.c0)))||(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)AND(t0.c1)))OR(vt0.c0)))||(((t0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((t0.c1) NOT BETWEEN (((t0.c2) NOT NULL)) AND (LIKELY(DISTINCT t0.c2))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((t0.c1) NOT BETWEEN (((t0.c2) NOT NULL)) AND (LIKELY(DISTINCT t0.c2))) WHERE (((((((t0.c1)AND(t0.c1)))OR(vt0.c0)))||(((t0.c0) ISNULL))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((0.7888845235881945 IN (t0.c2, rt0.c0)))=((((t0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c0))))) WHERE (((CAST(rt0.c2 AS INTEGER))<<(t0.c2 COLLATE BINARY))) ORDER BY (+ (TRIM(rt0.c1, x''))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER))<<(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((0.7888845235881945 IN (t0.c2, rt0.c0)))=((((t0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c0))))) ORDER BY (+ (TRIM(rt0.c1, x''))) ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((0.7888845235881945 IN (t0.c2, rt0.c0)))=((((t0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c0))))) WHERE (((CAST(rt0.c2 AS INTEGER))<<(t0.c2 COLLATE BINARY))) ORDER BY (+ (TRIM(rt0.c1, x''))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER))<<(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((0.7888845235881945 IN (t0.c2, rt0.c0)))=((((t0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c0))))) ORDER BY (+ (TRIM(rt0.c1, x''))) ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((0.7888845235881945 IN (t0.c2, rt0.c0)))=((((t0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c0))))) WHERE (((CAST(rt0.c2 AS INTEGER))<<(t0.c2 COLLATE BINARY))) ORDER BY (+ (TRIM(rt0.c1, x''))) ASC;
SELECT * FROM rt0, vt0 WHERE (((((CAST(vt0.c0 AS REAL))OR(((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c1)%(vt0.c1))))) ORDER BY TOTAL_CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))OR(((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c1)%(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TOTAL_CHANGES()  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((((CAST(vt0.c0 AS REAL))OR(((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c1)%(vt0.c1))))) ORDER BY TOTAL_CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))OR(((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c1)%(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TOTAL_CHANGES()  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((((CAST(vt0.c0 AS REAL))OR(((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c1)%(vt0.c1))))) ORDER BY TOTAL_CHANGES()  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((0.7552663317421348)OR(rt0.c0 COLLATE NOCASE)))AND((~ (rt0.c2))))) ORDER BY CAST((('-1106750783') BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((0.7552663317421348)OR(rt0.c0 COLLATE NOCASE)))AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((('-1106750783') BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (((((0.7552663317421348)OR(rt0.c0 COLLATE NOCASE)))AND((~ (rt0.c2))))) ORDER BY CAST((('-1106750783') BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((0.7552663317421348)OR(rt0.c0 COLLATE NOCASE)))AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((('-1106750783') BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (((((0.7552663317421348)OR(rt0.c0 COLLATE NOCASE)))AND((~ (rt0.c2))))) ORDER BY CAST((('-1106750783') BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c2))) IS FALSE)) ORDER BY CASE WHEN t0.c1 THEN ((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1)) WHEN rt0.c2 COLLATE NOCASE THEN ((((t0.c1)OR(t0.c2)))AND(rt0.c2)) WHEN ((((t0.c2)OR(t0.c2)))OR(rt0.c1)) THEN ((t0.c0)>(NULL)) WHEN '' THEN x'1bed5df2' WHEN CASE WHEN rt0.c1 THEN t0.c2 ELSE 0.9082206722809006 END THEN rt0.c2 ELSE ((rt0.c1) BETWEEN (t0.c1) AND (t0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN t0.c1 THEN ((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1)) WHEN rt0.c2 COLLATE NOCASE THEN ((((t0.c1)OR(t0.c2)))AND(rt0.c2)) WHEN ((((t0.c2)OR(t0.c2)))OR(rt0.c1)) THEN ((t0.c0)>(NULL)) WHEN '' THEN x'1bed5df2' WHEN CASE WHEN rt0.c1 THEN t0.c2 ELSE 0.9082206722809006 END THEN rt0.c2 ELSE ((rt0.c1) BETWEEN (t0.c1) AND (t0.c1)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c2))) IS FALSE)) ORDER BY CASE WHEN t0.c1 THEN ((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1)) WHEN rt0.c2 COLLATE NOCASE THEN ((((t0.c1)OR(t0.c2)))AND(rt0.c2)) WHEN ((((t0.c2)OR(t0.c2)))OR(rt0.c1)) THEN ((t0.c0)>(NULL)) WHEN '' THEN x'1bed5df2' WHEN CASE WHEN rt0.c1 THEN t0.c2 ELSE 0.9082206722809006 END THEN rt0.c2 ELSE ((rt0.c1) BETWEEN (t0.c1) AND (t0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN t0.c1 THEN ((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1)) WHEN rt0.c2 COLLATE NOCASE THEN ((((t0.c1)OR(t0.c2)))AND(rt0.c2)) WHEN ((((t0.c2)OR(t0.c2)))OR(rt0.c1)) THEN ((t0.c0)>(NULL)) WHEN '' THEN x'1bed5df2' WHEN CASE WHEN rt0.c1 THEN t0.c2 ELSE 0.9082206722809006 END THEN rt0.c2 ELSE ((rt0.c1) BETWEEN (t0.c1) AND (t0.c1)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c2))) IS FALSE)) ORDER BY CASE WHEN t0.c1 THEN ((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1)) WHEN rt0.c2 COLLATE NOCASE THEN ((((t0.c1)OR(t0.c2)))AND(rt0.c2)) WHEN ((((t0.c2)OR(t0.c2)))OR(rt0.c1)) THEN ((t0.c0)>(NULL)) WHEN '' THEN x'1bed5df2' WHEN CASE WHEN rt0.c1 THEN t0.c2 ELSE 0.9082206722809006 END THEN rt0.c2 ELSE ((rt0.c1) BETWEEN (t0.c1) AND (t0.c1)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(0X30991e37 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(0x30991e37 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(0X30991e37 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(0x30991e37 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(0X30991e37 AS REAL) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('1701680207' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('1701680207' COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('1701680207' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('1701680207' COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('1701680207' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE LOWER(rt0.c2)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((t0.c2)<(t0.c1)) THEN t0.c2 WHEN ((rt0.c0) BETWEEN (t0.c1) AND (t0.c1)) THEN CAST(t0.c0 AS BLOB) ELSE ((((((((t0.c0)OR(x'')))OR(t0.c1)))OR(rt0.c1)))OR(t0.c1)) END) ORDER BY CAST(((0.6783726525906699)AND(rt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE LOWER(rt0.c2)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((t0.c2)<(t0.c1)) THEN t0.c2 WHEN ((rt0.c0) BETWEEN (t0.c1) AND (t0.c1)) THEN CAST(t0.c0 AS BLOB) ELSE ((((((((t0.c0)OR(x'')))OR(t0.c1)))OR(rt0.c1)))OR(t0.c1)) END) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((0.6783726525906699)AND(rt0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE LOWER(rt0.c2)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((t0.c2)<(t0.c1)) THEN t0.c2 WHEN ((rt0.c0) BETWEEN (t0.c1) AND (t0.c1)) THEN CAST(t0.c0 AS BLOB) ELSE ((((((((t0.c0)OR(x'')))OR(t0.c1)))OR(rt0.c1)))OR(t0.c1)) END) ORDER BY CAST(((0.6783726525906699)AND(rt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE LOWER(rt0.c2)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((t0.c2)<(t0.c1)) THEN t0.c2 WHEN ((rt0.c0) BETWEEN (t0.c1) AND (t0.c1)) THEN CAST(t0.c0 AS BLOB) ELSE ((((((((t0.c0)OR(x'')))OR(t0.c1)))OR(rt0.c1)))OR(t0.c1)) END) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((0.6783726525906699)AND(rt0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE LOWER(rt0.c2)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((t0.c2)<(t0.c1)) THEN t0.c2 WHEN ((rt0.c0) BETWEEN (t0.c1) AND (t0.c1)) THEN CAST(t0.c0 AS BLOB) ELSE ((((((((t0.c0)OR(x'')))OR(t0.c1)))OR(rt0.c1)))OR(t0.c1)) END) ORDER BY CAST(((0.6783726525906699)AND(rt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)OR(t0.c0)))AND(rt0.c2))) IS FALSE) WHERE (((rt0.c0) NOTNULL) COLLATE NOCASE) ORDER BY ((rt0.c2 COLLATE NOCASE)GLOB(t0.c0)) ASC  NULLS LAST, ((NULL)>(((((NULL)OR(rt0.c1)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)OR(t0.c0)))AND(rt0.c2))) IS FALSE) ORDER BY ((rt0.c2 COLLATE NOCASE)GLOB(t0.c0)) ASC  NULLS LAST, ((NULL)>(((((NULL)OR(rt0.c1)))AND(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)OR(t0.c0)))AND(rt0.c2))) IS FALSE) WHERE (((rt0.c0) NOTNULL) COLLATE NOCASE) ORDER BY ((rt0.c2 COLLATE NOCASE)GLOB(t0.c0)) ASC  NULLS LAST, ((NULL)>(((((NULL)OR(rt0.c1)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)OR(t0.c0)))AND(rt0.c2))) IS FALSE) ORDER BY ((rt0.c2 COLLATE NOCASE)GLOB(t0.c0)) ASC  NULLS LAST, ((NULL)>(((((NULL)OR(rt0.c1)))AND(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)OR(t0.c0)))AND(rt0.c2))) IS FALSE) WHERE (((rt0.c0) NOTNULL) COLLATE NOCASE) ORDER BY ((rt0.c2 COLLATE NOCASE)GLOB(t0.c0)) ASC  NULLS LAST, ((NULL)>(((((NULL)OR(rt0.c1)))AND(vt0.c0))))  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))>(((vt0.c1) NOTNULL)))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))>(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) END  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))>(((vt0.c1) NOTNULL)))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))>(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) END  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))>(((vt0.c1) NOTNULL)))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) END  NULLS FIRST;
SELECT * FROM rt0, t0, vt0 WHERE (((RTRIM(t0.c0))>(((((vt0.c1)AND(t0.c0)))AND(rt0.c2))))) ORDER BY ((((((((((rt0.c0)AND(0.15507315881130534)))AND(t0.c2)))AND(rt0.c1)))AND(vt0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((RTRIM(t0.c0))>(((((vt0.c1)AND(t0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((((((rt0.c0)AND(0.15507315881130534)))AND(t0.c2)))AND(rt0.c1)))AND(vt0.c0))) NOT NULL) DESC);
SELECT * FROM rt0, t0, vt0 WHERE (((RTRIM(t0.c0))>(((((vt0.c1)AND(t0.c0)))AND(rt0.c2))))) ORDER BY ((((((((((rt0.c0)AND(0.15507315881130534)))AND(t0.c2)))AND(rt0.c1)))AND(vt0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((RTRIM(t0.c0))>(((((vt0.c1)AND(t0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((((((rt0.c0)AND(0.15507315881130534)))AND(t0.c2)))AND(rt0.c1)))AND(vt0.c0))) NOT NULL) DESC);
SELECT * FROM rt0, t0, vt0 WHERE (((RTRIM(t0.c0))>(((((vt0.c1)AND(t0.c0)))AND(rt0.c2))))) ORDER BY ((((((((((rt0.c0)AND(0.15507315881130534)))AND(t0.c2)))AND(rt0.c1)))AND(vt0.c0))) NOT NULL) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((0.46418433841168205)>=((rt0.c0 IN ())))) ORDER BY (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.46418433841168205)>=((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((0.46418433841168205)>=((rt0.c0 IN ())))) ORDER BY (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.46418433841168205)>=((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((0.46418433841168205)>=((rt0.c0 IN ())))) ORDER BY (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))AND(vt0.c1 COLLATE NOCASE)))AND(((0.5489497947501332)OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))AND(vt0.c1 COLLATE NOCASE)))AND(((0.5489497947501332)OR(t0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))AND(vt0.c1 COLLATE NOCASE)))AND(((0.5489497947501332)OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))AND(vt0.c1 COLLATE NOCASE)))AND(((0.5489497947501332)OR(t0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))AND(vt0.c1 COLLATE NOCASE)))AND(((0.5489497947501332)OR(t0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((vt0.c0 COLLATE NOCASE)<<(((((t0.c0)AND(vt0.c1)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)<<(((((t0.c0)AND(vt0.c1)))AND(t0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((vt0.c0 COLLATE NOCASE)<<(((((t0.c0)AND(vt0.c1)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)<<(((((t0.c0)AND(vt0.c1)))AND(t0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((vt0.c0 COLLATE NOCASE)<<(((((t0.c0)AND(vt0.c1)))AND(t0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c0) IS TRUE))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c0) IS TRUE))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c0) IS TRUE))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c0)AND(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) IS TRUE));
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((rt0.c2) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) ISNULL)) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((rt0.c2) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) ISNULL)) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM t0 WHERE (((t0.c2)OR(''))) ORDER BY json_insert(t0.c0, t0.c0, t0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2)OR(''))) IS TRUE)  as count FROM t0 ORDER BY json_insert(t0.c0, t0.c0, t0.c0) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c2)OR(''))) ORDER BY json_insert(t0.c0, t0.c0, t0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2)OR(''))) IS TRUE)  as count FROM t0 ORDER BY json_insert(t0.c0, t0.c0, t0.c0) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c2)OR(''))) ORDER BY json_insert(t0.c0, t0.c0, t0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c0)<>(t0.c2)) COLLATE RTRIM) ORDER BY (+ (HEX(DISTINCT t0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<>(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY (+ (HEX(DISTINCT t0.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c0)<>(t0.c2)) COLLATE RTRIM) ORDER BY (+ (HEX(DISTINCT t0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<>(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY (+ (HEX(DISTINCT t0.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c0)<>(t0.c2)) COLLATE RTRIM) ORDER BY (+ (HEX(DISTINCT t0.c2)))  NULLS LAST;
SELECT ALL * FROM rt0, t0, vt0 WHERE ((+ (((t0.c1) BETWEEN (t0.c1) AND (rt0.c1))))) ORDER BY CASE WHEN (vt0.c0 IN (t0.c0)) THEN rt0.c1 ELSE CASE t0.c0  WHEN t0.c2 THEN rt0.c2 ELSE rt0.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c1) BETWEEN (t0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE WHEN (vt0.c0 IN (t0.c0)) THEN rt0.c1 ELSE CASE t0.c0  WHEN t0.c2 THEN rt0.c2 ELSE rt0.c0 END END ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((+ (((t0.c1) BETWEEN (t0.c1) AND (rt0.c1))))) ORDER BY CASE WHEN (vt0.c0 IN (t0.c0)) THEN rt0.c1 ELSE CASE t0.c0  WHEN t0.c2 THEN rt0.c2 ELSE rt0.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c1) BETWEEN (t0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE WHEN (vt0.c0 IN (t0.c0)) THEN rt0.c1 ELSE CASE t0.c0  WHEN t0.c2 THEN rt0.c2 ELSE rt0.c0 END END ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((+ (((t0.c1) BETWEEN (t0.c1) AND (rt0.c1))))) ORDER BY CASE WHEN (vt0.c0 IN (t0.c0)) THEN rt0.c1 ELSE CASE t0.c0  WHEN t0.c2 THEN rt0.c2 ELSE rt0.c0 END END ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c1)<=(rt0.c1)))=(((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c2))))) ORDER BY CAST(((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<=(rt0.c1)))==(((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) AS INTEGER) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c1)<=(rt0.c1)))=(((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c2))))) ORDER BY CAST(((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<=(rt0.c1)))==(((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) AS INTEGER) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c1)<=(rt0.c1)))=(((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c2))))) ORDER BY CAST(((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((+ (((((NULL)AND(rt0.c1)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((NULL)AND(rt0.c1)))AND(t0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((+ (((((NULL)AND(rt0.c1)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((NULL)AND(rt0.c1)))AND(t0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((+ (((((NULL)AND(rt0.c1)))AND(t0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (rt0.c0))) ORDER BY (+ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (rt0.c0))) ORDER BY (+ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (rt0.c0))) ORDER BY (+ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (TYPEOF(vt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TYPEOF(vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TYPEOF(vt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TYPEOF(vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TYPEOF(vt0.c1) COLLATE NOCASE);
SELECT * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END AS NUMERIC));
SELECT * FROM rt0, t0 WHERE (((((((t0.c0)AND(rt0.c2)))AND(NULL))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(rt0.c2)))AND(NULL))) IS TRUE)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((((t0.c0)AND(rt0.c2)))AND(NULL))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(rt0.c2)))AND(NULL))) IS TRUE)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((((t0.c0)AND(rt0.c2)))AND(NULL))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.04727063411511223) ORDER BY (((- (''))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((0.04727063411511223) IS TRUE)  as count FROM vt0 ORDER BY (((- (''))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.04727063411511223) ORDER BY (((- (''))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((0.04727063411511223) IS TRUE)  as count FROM vt0 ORDER BY (((- (''))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.04727063411511223) ORDER BY (((- (''))) NOTNULL);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 IN ()) IN ())) ORDER BY ((((vt0.c0)<<(0.6694069203382338)))>=(((vt0.c1)AND(vt0.c1)))), CASE TYPEOF(DISTINCT vt0.c0)  WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c1)&(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (0.592286461010432) AND (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<<(0.6694069203382338)))>=(((vt0.c1)AND(vt0.c1)))), CASE TYPEOF(DISTINCT vt0.c0)  WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c1)&(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (0.592286461010432) AND (vt0.c0)) END DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 IN ()) IN ())) ORDER BY ((((vt0.c0)<<(0.6694069203382338)))>=(((vt0.c1)AND(vt0.c1)))), CASE TYPEOF(DISTINCT vt0.c0)  WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c1)&(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (0.592286461010432) AND (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<<(0.6694069203382338)))>=(((vt0.c1)AND(vt0.c1)))), CASE TYPEOF(DISTINCT vt0.c0)  WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c1)&(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (0.592286461010432) AND (vt0.c0)) END DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 IN ()) IN ())) ORDER BY ((((vt0.c0)<<(0.6694069203382338)))>=(((vt0.c1)AND(vt0.c1)))), CASE TYPEOF(DISTINCT vt0.c0)  WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c1)&(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (0.592286461010432) AND (vt0.c0)) END DESC;
SELECT ALL * FROM vt0, t0 WHERE ((('-885113537') NOTNULL));
SELECT SUM(count) FROM (SELECT (((('-885113537') NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((('-885113537') NOTNULL));
SELECT SUM(count) FROM (SELECT (((('-885113537') NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((('-885113537') NOTNULL));
SELECT * FROM vt0 WHERE (DATE(((vt0.c1)<(vt0.c0)), load_extension(vt0.c0, vt0.c1), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((DATE(((vt0.c1)<(vt0.c0)), load_extension(vt0.c0, vt0.c1), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (DATE(((vt0.c1)<(vt0.c0)), load_extension(vt0.c0, vt0.c1), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((DATE(((vt0.c1)<(vt0.c0)), load_extension(vt0.c0, vt0.c1), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON ((CAST(t0.c1 AS BLOB)) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END)) WHERE (rt0.c0) ORDER BY (((rt0.c1)) BETWEEN ((((t0.c2) NOTNULL))) AND ((json_remove(NULL, rt0.c2, rt0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((CAST(t0.c1 AS BLOB)) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END)) ORDER BY (((rt0.c1)) BETWEEN ((((t0.c2) NOTNULL))) AND ((json_remove(NULL, rt0.c2, rt0.c0, t0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON ((CAST(t0.c1 AS BLOB)) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END)) WHERE (rt0.c0) ORDER BY (((rt0.c1)) BETWEEN ((((t0.c2) NOTNULL))) AND ((json_remove(NULL, rt0.c2, rt0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((CAST(t0.c1 AS BLOB)) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END)) ORDER BY (((rt0.c1)) BETWEEN ((((t0.c2) NOTNULL))) AND ((json_remove(NULL, rt0.c2, rt0.c0, t0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON ((CAST(t0.c1 AS BLOB)) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END)) WHERE (rt0.c0) ORDER BY (((rt0.c1)) BETWEEN ((((t0.c2) NOTNULL))) AND ((json_remove(NULL, rt0.c2, rt0.c0, t0.c0))));
SELECT * FROM vt0 WHERE (((UNLIKELY(x'')) NOT BETWEEN ((NOT (vt0.c1))) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(x'')) NOT BETWEEN ((NOT (vt0.c1))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((UNLIKELY(x'')) NOT BETWEEN ((NOT (vt0.c1))) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(x'')) NOT BETWEEN ((NOT (vt0.c1))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((UNLIKELY(x'')) NOT BETWEEN ((NOT (vt0.c1))) AND (vt0.c0 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)<=(rt0.c1))) AND (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)<=(rt0.c1))) AND (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)<=(rt0.c1))) AND (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)<=(rt0.c1))) AND (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)<=(rt0.c1))) AND (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2 IN (rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c2))) ISNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2 IN (rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c2))) ISNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2 IN (rt0.c2))) ISNULL));
SELECT * FROM vt0, t0 CROSS JOIN rt0 ON UNLIKELY(DISTINCT NULL) WHERE (CAST((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((t0.c1, rt0.c1, rt0.c1))) AS TEXT)) ORDER BY CAST(((rt0.c1)AND(NULL)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((t0.c1, rt0.c1, rt0.c1))) AS TEXT)) IS TRUE)  as count FROM vt0, t0 CROSS JOIN rt0 ON UNLIKELY(DISTINCT NULL) ORDER BY CAST(((rt0.c1)AND(NULL)) AS NUMERIC));
SELECT * FROM vt0, t0 CROSS JOIN rt0 ON UNLIKELY(DISTINCT NULL) WHERE (CAST((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((t0.c1, rt0.c1, rt0.c1))) AS TEXT)) ORDER BY CAST(((rt0.c1)AND(NULL)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((t0.c1, rt0.c1, rt0.c1))) AS TEXT)) IS TRUE)  as count FROM vt0, t0 CROSS JOIN rt0 ON UNLIKELY(DISTINCT NULL) ORDER BY CAST(((rt0.c1)AND(NULL)) AS NUMERIC));
SELECT * FROM vt0, t0 CROSS JOIN rt0 ON UNLIKELY(DISTINCT NULL) WHERE (CAST((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((t0.c1, rt0.c1, rt0.c1))) AS TEXT)) ORDER BY CAST(((rt0.c1)AND(NULL)) AS NUMERIC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (x'') ORDER BY json_insert(0.07141963530969198, (0.9357563272730004 IN ()), CAST(vt0.c0 AS BLOB))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY json_insert(0.07141963530969198, (0.9357563272730004 IN ()), CAST(vt0.c0 AS BLOB))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (x'') ORDER BY json_insert(0.07141963530969198, (0.9357563272730004 IN ()), CAST(vt0.c0 AS BLOB))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY json_insert(0.07141963530969198, (0.9357563272730004 IN ()), CAST(vt0.c0 AS BLOB))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (CASE t0.c2  WHEN ((t0.c2)/(x'')) THEN (+ (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2  WHEN ((t0.c2)/(x'')) THEN (+ (vt0.c1)) END) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT * FROM vt0, t0 WHERE (CASE t0.c2  WHEN ((t0.c2)/(x'')) THEN (+ (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2  WHEN ((t0.c2)/(x'')) THEN (+ (vt0.c1)) END) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT * FROM vt0, t0 WHERE (CASE t0.c2  WHEN ((t0.c2)/(x'')) THEN (+ (vt0.c1)) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((('kK9uz')<>(rt0.c2)), (((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), vt0.c0 COLLATE RTRIM))!=((((((((((rt0.c1)AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(0.3936692097727831)), ((vt0.c0)%(rt0.c1)), rt0.c0)))) ORDER BY ((((rt0.c2)AND(vt0.c0)))IS(CAST(vt0.c1 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((((('kK9uz')!=(rt0.c2)), (((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), vt0.c0 COLLATE RTRIM))<>((((((((((rt0.c1)AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(0.3936692097727831)), ((vt0.c0)%(rt0.c1)), rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2)AND(vt0.c0)))IS(CAST(vt0.c1 AS BLOB))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((('kK9uz')<>(rt0.c2)), (((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), vt0.c0 COLLATE RTRIM))!=((((((((((rt0.c1)AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(0.3936692097727831)), ((vt0.c0)%(rt0.c1)), rt0.c0)))) ORDER BY ((((rt0.c2)AND(vt0.c0)))IS(CAST(vt0.c1 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((((('kK9uz')!=(rt0.c2)), (((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), vt0.c0 COLLATE RTRIM))<>((((((((((rt0.c1)AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(0.3936692097727831)), ((vt0.c0)%(rt0.c1)), rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2)AND(vt0.c0)))IS(CAST(vt0.c1 AS BLOB))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((('kK9uz')<>(rt0.c2)), (((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), vt0.c0 COLLATE RTRIM))!=((((((((((rt0.c1)AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(0.3936692097727831)), ((vt0.c0)%(rt0.c1)), rt0.c0)))) ORDER BY ((((rt0.c2)AND(vt0.c0)))IS(CAST(vt0.c1 AS BLOB))) DESC;
SELECT ALL * FROM rt0, vt0 CROSS JOIN t0 ON CAST((NOT (vt0.c1)) AS REAL) WHERE (((((((((((vt0.c1)OR(t0.c1)))AND(rt0.c2)))AND(x'7414')))OR(rt0.c1)))*('u()'))) ORDER BY ((((('', rt0.c1, rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, t0.c0, t0.c0, t0.c1)) AND ((rt0.c0, vt0.c1, t0.c0, rt0.c1, rt0.c0))))IS((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, t0.c2, vt0.c0)) AND ((rt0.c1, t0.c1, vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)OR(t0.c1)))AND(rt0.c2)))AND(x'7414')))OR(rt0.c1)))*('u()'))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON CAST((NOT (vt0.c1)) AS REAL) ORDER BY ((((('', rt0.c1, rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, t0.c0, t0.c0, t0.c1)) AND ((rt0.c0, vt0.c1, t0.c0, rt0.c1, rt0.c0))))IS((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, t0.c2, vt0.c0)) AND ((rt0.c1, t0.c1, vt0.c0))))) DESC);
SELECT ALL * FROM rt0, vt0 CROSS JOIN t0 ON CAST((NOT (vt0.c1)) AS REAL) WHERE (((((((((((vt0.c1)OR(t0.c1)))AND(rt0.c2)))AND(x'7414')))OR(rt0.c1)))*('u()'))) ORDER BY ((((('', rt0.c1, rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, t0.c0, t0.c0, t0.c1)) AND ((rt0.c0, vt0.c1, t0.c0, rt0.c1, rt0.c0))))IS((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, t0.c2, vt0.c0)) AND ((rt0.c1, t0.c1, vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)OR(t0.c1)))AND(rt0.c2)))AND(x'7414')))OR(rt0.c1)))*('u()'))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON CAST((NOT (vt0.c1)) AS REAL) ORDER BY ((((('', rt0.c1, rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, t0.c0, t0.c0, t0.c1)) AND ((rt0.c0, vt0.c1, t0.c0, rt0.c1, rt0.c0))))IS((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, t0.c2, vt0.c0)) AND ((rt0.c1, t0.c1, vt0.c0))))) DESC);
SELECT ALL * FROM rt0, vt0 CROSS JOIN t0 ON CAST((NOT (vt0.c1)) AS REAL) WHERE (((((((((((vt0.c1)OR(t0.c1)))AND(rt0.c2)))AND(x'7414')))OR(rt0.c1)))*('u()'))) ORDER BY ((((('', rt0.c1, rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, t0.c0, t0.c0, t0.c1)) AND ((rt0.c0, vt0.c1, t0.c0, rt0.c1, rt0.c0))))IS((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, t0.c2, vt0.c0)) AND ((rt0.c1, t0.c1, vt0.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c1)>(t0.c0 COLLATE BINARY))) ORDER BY (+ (((t0.c1)|(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((t0.c1)>(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0 ORDER BY (+ (((t0.c1)|(t0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c1)>(t0.c0 COLLATE BINARY))) ORDER BY (+ (((t0.c1)|(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((t0.c1)>(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0 ORDER BY (+ (((t0.c1)|(t0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c1)>(t0.c0 COLLATE BINARY))) ORDER BY (+ (((t0.c1)|(t0.c0))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((- (((rt0.c2) IS FALSE)))) ORDER BY TYPEOF(DISTINCT (~ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY TYPEOF(DISTINCT (~ (rt0.c2))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((- (((rt0.c2) IS FALSE)))) ORDER BY TYPEOF(DISTINCT (~ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY TYPEOF(DISTINCT (~ (rt0.c2))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((- (((rt0.c2) IS FALSE)))) ORDER BY TYPEOF(DISTINCT (~ (rt0.c2)));
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (((((vt0.c0)&(vt0.c0)))<(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0)))<(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (((((vt0.c0)&(vt0.c0)))<(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0)))<(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (((((vt0.c0)&(vt0.c0)))<(((rt0.c2) NOTNULL))));
SELECT * FROM rt0 WHERE (CAST((((-1.99454096E8))>=((rt0.c1))) AS BLOB)) ORDER BY (((((((((NOT (rt0.c1)))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))OR((((rt0.c2))==((rt0.c2))))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))) DESC  NULLS FIRST, (((~ (rt0.c2)))*((rt0.c1 IN ()))) ASC  NULLS LAST, ((rt0.c1 COLLATE NOCASE) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((-1.99454096E8))>=((rt0.c1))) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((((((((NOT (rt0.c1)))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))OR((((rt0.c2))=((rt0.c2))))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))) DESC  NULLS FIRST, (((~ (rt0.c2)))*((rt0.c1 IN ()))) ASC  NULLS LAST, ((rt0.c1 COLLATE NOCASE) ISNULL) DESC);
SELECT * FROM rt0 WHERE (CAST((((-1.99454096E8))>=((rt0.c1))) AS BLOB)) ORDER BY (((((((((NOT (rt0.c1)))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))OR((((rt0.c2))==((rt0.c2))))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))) DESC  NULLS FIRST, (((~ (rt0.c2)))*((rt0.c1 IN ()))) ASC  NULLS LAST, ((rt0.c1 COLLATE NOCASE) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((-1.99454096E8))>=((rt0.c1))) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((((((((NOT (rt0.c1)))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))OR((((rt0.c2))=((rt0.c2))))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))) DESC  NULLS FIRST, (((~ (rt0.c2)))*((rt0.c1 IN ()))) ASC  NULLS LAST, ((rt0.c1 COLLATE NOCASE) ISNULL) DESC);
SELECT * FROM rt0 WHERE (CAST((((-1.99454096E8))>=((rt0.c1))) AS BLOB)) ORDER BY (((((((((NOT (rt0.c1)))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))OR((((rt0.c2))==((rt0.c2))))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))) DESC  NULLS FIRST, (((~ (rt0.c2)))*((rt0.c1 IN ()))) ASC  NULLS LAST, ((rt0.c1 COLLATE NOCASE) ISNULL) DESC;
SELECT ALL * FROM rt0, vt0 WHERE ((- (((rt0.c1)IS(vt0.c1))))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c1);
SELECT ALL * FROM rt0, vt0 WHERE ((- (((rt0.c1)IS(vt0.c1))))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c1);
SELECT ALL * FROM rt0, vt0 WHERE ((- (((rt0.c1)IS(vt0.c1))))) ORDER BY vt0.c1;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (load_extension(rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((load_extension(rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (load_extension(rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((load_extension(rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c2)AND(t0.c2)))OR(t0.c2)))%(t0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)AND(t0.c2)))OR(t0.c2)))%(t0.c1))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c2)AND(t0.c2)))OR(t0.c2)))%(t0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)AND(t0.c2)))OR(t0.c2)))%(t0.c1))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c2)AND(t0.c2)))OR(t0.c2)))%(t0.c1)));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (TYPEOF(DISTINCT NULL) COLLATE RTRIM) ORDER BY (((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))))AND(((t0.c0)==(rt0.c1)))))AND(CAST(t0.c1 AS BLOB))) DESC  NULLS FIRST, CASE WHEN rt0.c0 THEN t0.c2 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT NULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))))AND(((t0.c0)==(rt0.c1)))))AND(CAST(t0.c1 AS BLOB))) DESC  NULLS FIRST, CASE WHEN rt0.c0 THEN t0.c2 END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (TYPEOF(DISTINCT NULL) COLLATE RTRIM) ORDER BY (((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))))AND(((t0.c0)==(rt0.c1)))))AND(CAST(t0.c1 AS BLOB))) DESC  NULLS FIRST, CASE WHEN rt0.c0 THEN t0.c2 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT NULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))))AND(((t0.c0)==(rt0.c1)))))AND(CAST(t0.c1 AS BLOB))) DESC  NULLS FIRST, CASE WHEN rt0.c0 THEN t0.c2 END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (TYPEOF(DISTINCT NULL) COLLATE RTRIM) ORDER BY (((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))))AND(((t0.c0)==(rt0.c1)))))AND(CAST(t0.c1 AS BLOB))) DESC  NULLS FIRST, CASE WHEN rt0.c0 THEN t0.c2 END  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((t0.c2))>((t0.c0)))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (TRIM(t0.c2))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2))>((t0.c0)))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (TRIM(t0.c2)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((t0.c2))>((t0.c0)))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (TRIM(t0.c2))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2))>((t0.c0)))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (TRIM(t0.c2)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((t0.c2))>((t0.c0)))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (TRIM(t0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.7670061721497705) NOT BETWEEN (LIKELY(DISTINCT rt0.c1)) AND (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY (((((((((((rt0.c1))<=((rt0.c0))))OR(0.3063650140819514)))AND(rt0.c0)))AND(CAST(0Xffffffffc4e95619 AS INTEGER))))AND((((rt0.c0, rt0.c2, rt0.c0))==((rt0.c1, rt0.c1, rt0.c0))))) DESC, (- (NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.7670061721497705) NOT BETWEEN (LIKELY(DISTINCT rt0.c1)) AND (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c1))<=((rt0.c0))))OR(0.3063650140819514)))AND(rt0.c0)))AND(CAST(0Xffffffffc4e95619 AS INTEGER))))AND((((rt0.c0, rt0.c2, rt0.c0))=((rt0.c1, rt0.c1, rt0.c0))))) DESC, (- (NULL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.7670061721497705) NOT BETWEEN (LIKELY(DISTINCT rt0.c1)) AND (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY (((((((((((rt0.c1))<=((rt0.c0))))OR(0.3063650140819514)))AND(rt0.c0)))AND(CAST(0Xffffffffc4e95619 AS INTEGER))))AND((((rt0.c0, rt0.c2, rt0.c0))==((rt0.c1, rt0.c1, rt0.c0))))) DESC, (- (NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.7670061721497705) NOT BETWEEN (LIKELY(DISTINCT rt0.c1)) AND (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c1))<=((rt0.c0))))OR(0.3063650140819514)))AND(rt0.c0)))AND(CAST(0Xffffffffc4e95619 AS INTEGER))))AND((((rt0.c0, rt0.c2, rt0.c0))=((rt0.c1, rt0.c1, rt0.c0))))) DESC, (- (NULL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.7670061721497705) NOT BETWEEN (LIKELY(DISTINCT rt0.c1)) AND (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY (((((((((((rt0.c1))<=((rt0.c0))))OR(0.3063650140819514)))AND(rt0.c0)))AND(CAST(0Xffffffffc4e95619 AS INTEGER))))AND((((rt0.c0, rt0.c2, rt0.c0))==((rt0.c1, rt0.c1, rt0.c0))))) DESC, (- (NULL)) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0 WHERE ((- (t0.c0)) COLLATE NOCASE) ORDER BY (((((vt0.c0))>=((t0.c0))))|(0.04235792750107936));
SELECT SUM(count) FROM (SELECT (((- (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((vt0.c0))>=((t0.c0))))|(0.04235792750107936)));
SELECT ALL * FROM rt0, vt0, t0 WHERE ((- (t0.c0)) COLLATE NOCASE) ORDER BY (((((vt0.c0))>=((t0.c0))))|(0.04235792750107936));
SELECT SUM(count) FROM (SELECT (((- (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((vt0.c0))>=((t0.c0))))|(0.04235792750107936)));
SELECT ALL * FROM rt0, vt0, t0 WHERE ((- (t0.c0)) COLLATE NOCASE) ORDER BY (((((vt0.c0))>=((t0.c0))))|(0.04235792750107936));
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c1, rt0.c1, 1704492954, rt0.c2, t0.c1)) NOT BETWEEN (((- (t0.c1)), ((t0.c0)==(rt0.c0)), ((t0.c2) BETWEEN (286282392) AND (rt0.c1)), ((t0.c1) NOT NULL), (- (rt0.c2)))) AND ((((t0.c0) NOTNULL), ((t0.c1) BETWEEN (t0.c0) AND (t0.c1)), CAST(rt0.c0 AS BLOB), t0.c0 COLLATE BINARY, (+ (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1, rt0.c1, 1704492954, rt0.c2, t0.c1)) NOT BETWEEN (((- (t0.c1)), ((t0.c0)=(rt0.c0)), ((t0.c2) BETWEEN (286282392) AND (rt0.c1)), ((t0.c1) NOT NULL), (- (rt0.c2)))) AND ((((t0.c0) NOTNULL), ((t0.c1) BETWEEN (t0.c0) AND (t0.c1)), CAST(rt0.c0 AS BLOB), t0.c0 COLLATE BINARY, (+ (rt0.c1)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c1, rt0.c1, 1704492954, rt0.c2, t0.c1)) NOT BETWEEN (((- (t0.c1)), ((t0.c0)==(rt0.c0)), ((t0.c2) BETWEEN (286282392) AND (rt0.c1)), ((t0.c1) NOT NULL), (- (rt0.c2)))) AND ((((t0.c0) NOTNULL), ((t0.c1) BETWEEN (t0.c0) AND (t0.c1)), CAST(rt0.c0 AS BLOB), t0.c0 COLLATE BINARY, (+ (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1, rt0.c1, 1704492954, rt0.c2, t0.c1)) NOT BETWEEN (((- (t0.c1)), ((t0.c0)=(rt0.c0)), ((t0.c2) BETWEEN (286282392) AND (rt0.c1)), ((t0.c1) NOT NULL), (- (rt0.c2)))) AND ((((t0.c0) NOTNULL), ((t0.c1) BETWEEN (t0.c0) AND (t0.c1)), CAST(rt0.c0 AS BLOB), t0.c0 COLLATE BINARY, (+ (rt0.c1)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c1, rt0.c1, 1704492954, rt0.c2, t0.c1)) NOT BETWEEN (((- (t0.c1)), ((t0.c0)==(rt0.c0)), ((t0.c2) BETWEEN (286282392) AND (rt0.c1)), ((t0.c1) NOT NULL), (- (rt0.c2)))) AND ((((t0.c0) NOTNULL), ((t0.c1) BETWEEN (t0.c0) AND (t0.c1)), CAST(rt0.c0 AS BLOB), t0.c0 COLLATE BINARY, (+ (rt0.c1))))));
SELECT ALL * FROM vt0, rt0, t0 WHERE (((t0.c1) BETWEEN (t0.c1) AND (t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c1) BETWEEN (t0.c1) AND (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((t0.c1) BETWEEN (t0.c1) AND (t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c1) BETWEEN (t0.c1) AND (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((t0.c1) BETWEEN (t0.c1) AND (t0.c2)) COLLATE BINARY);
SELECT ALL * FROM t0, vt0 WHERE (((((CAST(t0.c1 AS REAL))AND(t0.c1)))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c1 AS REAL))AND(t0.c1)))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((CAST(t0.c1 AS REAL))AND(t0.c1)))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c1 AS REAL))AND(t0.c1)))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((CAST(t0.c1 AS REAL))AND(t0.c1)))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN vt0 WHERE (((0.11993133750005436 COLLATE BINARY) NOT NULL)) ORDER BY UPPER(DISTINCT vt0.c0) DESC;
SELECT SUM(count) FROM (SELECT ((((0.11993133750005436 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0 ORDER BY UPPER(DISTINCT vt0.c0) DESC);
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN vt0 WHERE (((0.11993133750005436 COLLATE BINARY) NOT NULL)) ORDER BY UPPER(DISTINCT vt0.c0) DESC;
SELECT SUM(count) FROM (SELECT ((((0.11993133750005436 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0 ORDER BY UPPER(DISTINCT vt0.c0) DESC);
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN vt0 WHERE (((0.11993133750005436 COLLATE BINARY) NOT NULL)) ORDER BY UPPER(DISTINCT vt0.c0) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((CAST(x'32fb' AS NUMERIC))) AND ((((t0.c1)-(t0.c2)))))) ORDER BY (INSTR(t0.c1, t0.c1) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((CAST(x'32fb' AS NUMERIC))) AND ((((t0.c1)-(t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY (INSTR(t0.c1, t0.c1) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((CAST(x'32fb' AS NUMERIC))) AND ((((t0.c1)-(t0.c2)))))) ORDER BY (INSTR(t0.c1, t0.c1) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((CAST(x'32fb' AS NUMERIC))) AND ((((t0.c1)-(t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY (INSTR(t0.c1, t0.c1) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((CAST(x'32fb' AS NUMERIC))) AND ((((t0.c1)-(t0.c2)))))) ORDER BY (INSTR(t0.c1, t0.c1) IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0, vt0 WHERE ((CASE x''  WHEN rt0.c0 THEN t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE x''  WHEN rt0.c0 THEN t0.c0 END IN ())) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0, vt0 WHERE ((CASE x''  WHEN rt0.c0 THEN t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE x''  WHEN rt0.c0 THEN t0.c0 END IN ())) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0, vt0 WHERE ((CASE x''  WHEN rt0.c0 THEN t0.c0 END IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) AS NUMERIC)) ORDER BY ((((((((LIKELY(rt0.c0))AND(0.5797230098941483)))AND(0.822492652710353)))AND(((vt0.c0)%(76609087)))))OR((rt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((LIKELY(rt0.c0))AND(0.5797230098941483)))AND(0.822492652710353)))AND(((vt0.c0)%(76609087)))))OR((rt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) AS NUMERIC)) ORDER BY ((((((((LIKELY(rt0.c0))AND(0.5797230098941483)))AND(0.822492652710353)))AND(((vt0.c0)%(76609087)))))OR((rt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((LIKELY(rt0.c0))AND(0.5797230098941483)))AND(0.822492652710353)))AND(((vt0.c0)%(76609087)))))OR((rt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) AS NUMERIC)) ORDER BY ((((((((LIKELY(rt0.c0))AND(0.5797230098941483)))AND(0.822492652710353)))AND(((vt0.c0)%(76609087)))))OR((rt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (ABS(DISTINCT ((t0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((t0.c2) IS TRUE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (ABS(DISTINCT ((t0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((t0.c2) IS TRUE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (ABS(DISTINCT ((t0.c2) IS TRUE)));
SELECT COUNT(*) FROM vt0, t0 WHERE ((vt0.c1 IN (CAST(t0.c0 AS NUMERIC), CAST(t0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN (CAST(t0.c0 AS NUMERIC), CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((vt0.c1 IN (CAST(t0.c0 AS NUMERIC), CAST(t0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN (CAST(t0.c0 AS NUMERIC), CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((vt0.c1 IN (CAST(t0.c0 AS NUMERIC), CAST(t0.c2 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN t0.c2 WHEN x'' THEN ((0X14bc1be6)IS NOT(t0.c2)) WHEN x'51de' THEN (+ (vt0.c1)) END WHERE ('1008180422') ORDER BY ((t0.c2)>>((~ (t0.c0)))) ASC  NULLS FIRST, 'F0' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1008180422') IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN t0.c2 WHEN x'' THEN ((0X14bc1be6)IS NOT(t0.c2)) WHEN x'51de' THEN (+ (vt0.c1)) END ORDER BY ((t0.c2)>>((~ (t0.c0)))) ASC  NULLS FIRST, 'F0' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN t0.c2 WHEN x'' THEN ((0X14bc1be6)IS NOT(t0.c2)) WHEN x'51de' THEN (+ (vt0.c1)) END WHERE ('1008180422') ORDER BY ((t0.c2)>>((~ (t0.c0)))) ASC  NULLS FIRST, 'F0' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1008180422') IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN t0.c2 WHEN x'' THEN ((0X14bc1be6)IS NOT(t0.c2)) WHEN x'51de' THEN (+ (vt0.c1)) END ORDER BY ((t0.c2)>>((~ (t0.c0)))) ASC  NULLS FIRST, 'F0' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN t0.c2 WHEN x'' THEN ((0X14bc1be6)IS NOT(t0.c2)) WHEN x'51de' THEN (+ (vt0.c1)) END WHERE ('1008180422') ORDER BY ((t0.c2)>>((~ (t0.c0)))) ASC  NULLS FIRST, 'F0' DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c1, '2104419702', rt0.c1)) NOT BETWEEN ((((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)), CASE WHEN 0.03578398376843517 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, CAST(rt0.c1 AS REAL))) AND ((rt0.c2, rt0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c1 END))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, '2104419702', rt0.c1)) NOT BETWEEN ((((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)), CASE WHEN 0.03578398376843517 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, CAST(rt0.c1 AS REAL))) AND ((rt0.c2, rt0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c1 END))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c1, '2104419702', rt0.c1)) NOT BETWEEN ((((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)), CASE WHEN 0.03578398376843517 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, CAST(rt0.c1 AS REAL))) AND ((rt0.c2, rt0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c1 END))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, '2104419702', rt0.c1)) NOT BETWEEN ((((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)), CASE WHEN 0.03578398376843517 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, CAST(rt0.c1 AS REAL))) AND ((rt0.c2, rt0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c1 END))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c1, '2104419702', rt0.c1)) NOT BETWEEN ((((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)), CASE WHEN 0.03578398376843517 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, CAST(rt0.c1 AS REAL))) AND ((rt0.c2, rt0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c1 END))) DESC;
SELECT ALL * FROM t0, vt0, rt0 WHERE (rt0.c2) ORDER BY ((((((((((((0.6917220009875561)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(x'')))AND('沍u4')))OR(((rt0.c2)==(']')))), (rt0.c2 COLLATE BINARY IN (1.983124372E9, (~ (t0.c0))))  NULLS LAST, CHAR(((rt0.c0) NOTNULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((((((0.6917220009875561)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(x'')))AND('沍u4')))OR(((rt0.c2)=(']')))), (rt0.c2 COLLATE BINARY IN (1.983124372E9, (~ (t0.c0))))  NULLS LAST, CHAR(((rt0.c0) NOTNULL)) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (rt0.c2) ORDER BY ((((((((((((0.6917220009875561)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(x'')))AND('沍u4')))OR(((rt0.c2)==(']')))), (rt0.c2 COLLATE BINARY IN (1.983124372E9, (~ (t0.c0))))  NULLS LAST, CHAR(((rt0.c0) NOTNULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((((((0.6917220009875561)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(x'')))AND('沍u4')))OR(((rt0.c2)=(']')))), (rt0.c2 COLLATE BINARY IN (1.983124372E9, (~ (t0.c0))))  NULLS LAST, CHAR(((rt0.c0) NOTNULL)) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (rt0.c2) ORDER BY ((((((((((((0.6917220009875561)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(x'')))AND('沍u4')))OR(((rt0.c2)==(']')))), (rt0.c2 COLLATE BINARY IN (1.983124372E9, (~ (t0.c0))))  NULLS LAST, CHAR(((rt0.c0) NOTNULL)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2))  WHEN HEX(DISTINCT rt0.c2) THEN rt0.c0 COLLATE NOCASE END RIGHT OUTER JOIN t0 ON CASE ((t0.c1)||(t0.c2))  WHEN ((vt0.c0)IS(t0.c2)) THEN '' END WHERE (((((t0.c2)>=(t0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2))) AND (((t0.c0)>>(t0.c0))))) ORDER BY x'' ASC, NULLIF(((((((((t0.c1)OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c1)), (~ (t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>=(t0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2))) AND (((t0.c0)>>(t0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2))  WHEN HEX(DISTINCT rt0.c2) THEN rt0.c0 COLLATE NOCASE END RIGHT OUTER JOIN t0 ON CASE ((t0.c1)||(t0.c2))  WHEN ((vt0.c0)IS(t0.c2)) THEN '' END ORDER BY x'' ASC, NULLIF(((((((((t0.c1)OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c1)), (~ (t0.c2))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2))  WHEN HEX(DISTINCT rt0.c2) THEN rt0.c0 COLLATE NOCASE END RIGHT OUTER JOIN t0 ON CASE ((t0.c1)||(t0.c2))  WHEN ((vt0.c0)IS(t0.c2)) THEN '' END WHERE (((((t0.c2)>=(t0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2))) AND (((t0.c0)>>(t0.c0))))) ORDER BY x'' ASC, NULLIF(((((((((t0.c1)OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c1)), (~ (t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>=(t0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2))) AND (((t0.c0)>>(t0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2))  WHEN HEX(DISTINCT rt0.c2) THEN rt0.c0 COLLATE NOCASE END RIGHT OUTER JOIN t0 ON CASE ((t0.c1)||(t0.c2))  WHEN ((vt0.c0)IS(t0.c2)) THEN '' END ORDER BY x'' ASC, NULLIF(((((((((t0.c1)OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c1)), (~ (t0.c2))));
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)OR(rt0.c2)))OR(t0.c0)) COLLATE BINARY RIGHT OUTER JOIN t0 ON CAST(((t0.c2) ISNULL) AS TEXT) WHERE ('1701680207') ORDER BY ((((((rt0.c1)*(rt0.c2)))OR((rt0.c0 IN ()))))AND(CHANGES())) DESC;
SELECT SUM(count) FROM (SELECT (('1701680207') IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)OR(rt0.c2)))OR(t0.c0)) COLLATE BINARY RIGHT OUTER JOIN t0 ON CAST(((t0.c2) ISNULL) AS TEXT) ORDER BY ((((((rt0.c1)*(rt0.c2)))OR((rt0.c0 IN ()))))AND(CHANGES())) DESC);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)OR(rt0.c2)))OR(t0.c0)) COLLATE BINARY RIGHT OUTER JOIN t0 ON CAST(((t0.c2) ISNULL) AS TEXT) WHERE ('1701680207') ORDER BY ((((((rt0.c1)*(rt0.c2)))OR((rt0.c0 IN ()))))AND(CHANGES())) DESC;
SELECT SUM(count) FROM (SELECT (('1701680207') IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)OR(rt0.c2)))OR(t0.c0)) COLLATE BINARY RIGHT OUTER JOIN t0 ON CAST(((t0.c2) ISNULL) AS TEXT) ORDER BY ((((((rt0.c1)*(rt0.c2)))OR((rt0.c0 IN ()))))AND(CHANGES())) DESC);
SELECT ALL * FROM t0 WHERE (((LOWER(DISTINCT t0.c2))OR(x'' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT t0.c2))OR(x'' COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((LOWER(DISTINCT t0.c2))OR(x'' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT t0.c2))OR(x'' COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((LOWER(DISTINCT t0.c2))OR(x'' COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (((((((0.878352949994651)OR(rt0.c0)))AND(rt0.c2)))||(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((0.878352949994651)OR(rt0.c0)))AND(rt0.c2)))||(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((0.878352949994651)OR(rt0.c0)))AND(rt0.c2)))||(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((0.878352949994651)OR(rt0.c0)))AND(rt0.c2)))||(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((0.878352949994651)OR(rt0.c0)))AND(rt0.c2)))||(rt0.c1)));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON 0Xffffffff90288d8b WHERE (CAST(((rt0.c1) IS FALSE) AS REAL)) ORDER BY x'c0398525';
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) IS FALSE) AS REAL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON 0Xffffffff90288d8b ORDER BY x'c0398525');
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON 0Xffffffff90288d8b WHERE (CAST(((rt0.c1) IS FALSE) AS REAL)) ORDER BY x'c0398525';
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) IS FALSE) AS REAL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON 0Xffffffff90288d8b ORDER BY x'c0398525');
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON 0Xffffffff90288d8b WHERE (CAST(((rt0.c1) IS FALSE) AS REAL)) ORDER BY x'c0398525';
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON json_type((NULL IN (rt0.c1))) WHERE (((CAST(rt0.c2 AS BLOB)) BETWEEN (((rt0.c2)<<(rt0.c0))) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB)) BETWEEN (((rt0.c2)<<(rt0.c0))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON json_type((NULL IN (rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON json_type((NULL IN (rt0.c1))) WHERE (((CAST(rt0.c2 AS BLOB)) BETWEEN (((rt0.c2)<<(rt0.c0))) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB)) BETWEEN (((rt0.c2)<<(rt0.c0))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON json_type((NULL IN (rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON json_type((NULL IN (rt0.c1))) WHERE (((CAST(rt0.c2 AS BLOB)) BETWEEN (((rt0.c2)<<(rt0.c0))) AND (rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE (t0.c1) ORDER BY (((t0.c1)) NOT BETWEEN ((DATETIME(t0.c0, t0.c2, t0.c2))) AND ((((t0.c1) BETWEEN (t0.c1) AND (t0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)) NOT BETWEEN ((DATETIME(t0.c0, t0.c2, t0.c2))) AND ((((t0.c1) BETWEEN (t0.c1) AND (t0.c2)))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c1) ORDER BY (((t0.c1)) NOT BETWEEN ((DATETIME(t0.c0, t0.c2, t0.c2))) AND ((((t0.c1) BETWEEN (t0.c1) AND (t0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)) NOT BETWEEN ((DATETIME(t0.c0, t0.c2, t0.c2))) AND ((((t0.c1) BETWEEN (t0.c1) AND (t0.c2)))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c1) ORDER BY (((t0.c1)) NOT BETWEEN ((DATETIME(t0.c0, t0.c2, t0.c2))) AND ((((t0.c1) BETWEEN (t0.c1) AND (t0.c2)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (('m^5F%' IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (('m^5F%' IN (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (('m^5F%' IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (('m^5F%' IN (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (('m^5F%' IN (rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))>=((rt0.c1))))OR(COALESCE(DISTINCT rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>=((rt0.c1))))OR(COALESCE(DISTINCT rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))>=((rt0.c1))))OR(COALESCE(DISTINCT rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>=((rt0.c1))))OR(COALESCE(DISTINCT rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))>=((rt0.c1))))OR(COALESCE(DISTINCT rt0.c2, rt0.c0))));
SELECT ALL * FROM vt0, t0 INNER JOIN rt0 ON ((CAST('x9' AS BLOB))-(((vt0.c0)%(vt0.c1)))) WHERE (((((t0.c0 IN ())))=(((((('1704492954')AND(rt0.c1)))AND(rt0.c2)))))) ORDER BY CAST(HEX(rt0.c0) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN ())))==(((((('1704492954')AND(rt0.c1)))AND(rt0.c2)))))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON ((CAST('x9' AS BLOB))-(((vt0.c0)%(vt0.c1)))) ORDER BY CAST(HEX(rt0.c0) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 INNER JOIN rt0 ON ((CAST('x9' AS BLOB))-(((vt0.c0)%(vt0.c1)))) WHERE (((((t0.c0 IN ())))=(((((('1704492954')AND(rt0.c1)))AND(rt0.c2)))))) ORDER BY CAST(HEX(rt0.c0) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN ())))==(((((('1704492954')AND(rt0.c1)))AND(rt0.c2)))))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON ((CAST('x9' AS BLOB))-(((vt0.c0)%(vt0.c1)))) ORDER BY CAST(HEX(rt0.c0) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 INNER JOIN rt0 ON ((CAST('x9' AS BLOB))-(((vt0.c0)%(vt0.c1)))) WHERE (((((t0.c0 IN ())))=(((((('1704492954')AND(rt0.c1)))AND(rt0.c2)))))) ORDER BY CAST(HEX(rt0.c0) AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (CAST((~ (x'')) AS INTEGER)) ORDER BY UNLIKELY(t0.c1 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (x'')) AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY UNLIKELY(t0.c1 COLLATE RTRIM)  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CAST((~ (x'')) AS INTEGER)) ORDER BY UNLIKELY(t0.c1 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (x'')) AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY UNLIKELY(t0.c1 COLLATE RTRIM)  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CAST((~ (x'')) AS INTEGER)) ORDER BY UNLIKELY(t0.c1 COLLATE RTRIM)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CAST(t0.c2 AS REAL)) ORDER BY CAST(((((vt0.c0)OR(x'')))OR(rt0.c2)) AS BLOB), CASE WHEN CAST(t0.c1 AS TEXT) THEN CAST(rt0.c2 AS INTEGER) ELSE CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 AS REAL)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST(((((vt0.c0)OR(x'')))OR(rt0.c2)) AS BLOB), CASE WHEN CAST(t0.c1 AS TEXT) THEN CAST(rt0.c2 AS INTEGER) ELSE CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CAST(t0.c2 AS REAL)) ORDER BY CAST(((((vt0.c0)OR(x'')))OR(rt0.c2)) AS BLOB), CASE WHEN CAST(t0.c1 AS TEXT) THEN CAST(rt0.c2 AS INTEGER) ELSE CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 AS REAL)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST(((((vt0.c0)OR(x'')))OR(rt0.c2)) AS BLOB), CASE WHEN CAST(t0.c1 AS TEXT) THEN CAST(rt0.c2 AS INTEGER) ELSE CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CAST(t0.c2 AS REAL)) ORDER BY CAST(((((vt0.c0)OR(x'')))OR(rt0.c2)) AS BLOB), CASE WHEN CAST(t0.c1 AS TEXT) THEN CAST(rt0.c2 AS INTEGER) ELSE CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(((rt0.c2) BETWEEN (t0.c1) AND (rt0.c0)) AS INTEGER)) ORDER BY (NOT (((vt0.c0) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) BETWEEN (t0.c1) AND (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (NOT (((vt0.c0) IS FALSE))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(((rt0.c2) BETWEEN (t0.c1) AND (rt0.c0)) AS INTEGER)) ORDER BY (NOT (((vt0.c0) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) BETWEEN (t0.c1) AND (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (NOT (((vt0.c0) IS FALSE))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(((rt0.c2) BETWEEN (t0.c1) AND (rt0.c0)) AS INTEGER)) ORDER BY (NOT (((vt0.c0) IS FALSE))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((rt0.c0)) BETWEEN (((~ (')?')))) AND (((((rt0.c0, vt0.c1, t0.c0))!=((t0.c0, t0.c0, '젦{')))))) WHERE (((((((((((rt0.c2)AND(t0.c1)))AND(vt0.c0)))OR(t0.c0)))AND(rt0.c1)))<=(t0.c2))) ORDER BY (CAST(t0.c0 AS INTEGER) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)AND(t0.c1)))AND(vt0.c0)))OR(t0.c0)))AND(rt0.c1)))<=(t0.c2))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((rt0.c0)) BETWEEN (((~ (')?')))) AND (((((rt0.c0, vt0.c1, t0.c0))<>((t0.c0, t0.c0, '젦{')))))) ORDER BY (CAST(t0.c0 AS INTEGER) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((rt0.c0)) BETWEEN (((~ (')?')))) AND (((((rt0.c0, vt0.c1, t0.c0))!=((t0.c0, t0.c0, '젦{')))))) WHERE (((((((((((rt0.c2)AND(t0.c1)))AND(vt0.c0)))OR(t0.c0)))AND(rt0.c1)))<=(t0.c2))) ORDER BY (CAST(t0.c0 AS INTEGER) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)AND(t0.c1)))AND(vt0.c0)))OR(t0.c0)))AND(rt0.c1)))<=(t0.c2))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((rt0.c0)) BETWEEN (((~ (')?')))) AND (((((rt0.c0, vt0.c1, t0.c0))<>((t0.c0, t0.c0, '젦{')))))) ORDER BY (CAST(t0.c0 AS INTEGER) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((rt0.c0)) BETWEEN (((~ (')?')))) AND (((((rt0.c0, vt0.c1, t0.c0))!=((t0.c0, t0.c0, '젦{')))))) WHERE (((((((((((rt0.c2)AND(t0.c1)))AND(vt0.c0)))OR(t0.c0)))AND(rt0.c1)))<=(t0.c2))) ORDER BY (CAST(t0.c0 AS INTEGER) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, t0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN ())) ORDER BY (CASE vt0.c0  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN ())) ORDER BY (CASE vt0.c0  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN ())) ORDER BY (CASE vt0.c0  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END IN ())  NULLS LAST;
SELECT * FROM rt0 INNER JOIN t0 ON ((t0.c1)OR((((t0.c2))<((t0.c2))))) FULL OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) IS FALSE) WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((t0.c1)OR((((t0.c2))<((t0.c2))))) FULL OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) IS FALSE));
SELECT * FROM rt0 INNER JOIN t0 ON ((t0.c1)OR((((t0.c2))<((t0.c2))))) FULL OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) IS FALSE) WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((t0.c1)OR((((t0.c2))<((t0.c2))))) FULL OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) IS FALSE));
SELECT * FROM rt0 INNER JOIN t0 ON ((t0.c1)OR((((t0.c2))<((t0.c2))))) FULL OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) IS FALSE) WHERE (t0.c1);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (x'') AND ((rt0.c1 IN ())))) ORDER BY (((rt0.c0))!=((CASE WHEN rt0.c0 THEN rt0.c2 END))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (x'') AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c0))!=((CASE WHEN rt0.c0 THEN rt0.c2 END))) ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (x'') AND ((rt0.c1 IN ())))) ORDER BY (((rt0.c0))!=((CASE WHEN rt0.c0 THEN rt0.c2 END))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (x'') AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c0))!=((CASE WHEN rt0.c0 THEN rt0.c2 END))) ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (x'') AND ((rt0.c1 IN ())))) ORDER BY (((rt0.c0))!=((CASE WHEN rt0.c0 THEN rt0.c2 END))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (ABS(DISTINCT t0.c0)) ORDER BY CASE WHEN ((t0.c0)>>(t0.c0)) THEN CAST(t0.c1 AS INTEGER) ELSE (('୻7<y') NOT NULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT t0.c0)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0)>>(t0.c0)) THEN CAST(t0.c1 AS INTEGER) ELSE (('୻7<y') NOT NULL) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (ABS(DISTINCT t0.c0)) ORDER BY CASE WHEN ((t0.c0)>>(t0.c0)) THEN CAST(t0.c1 AS INTEGER) ELSE (('୻7<y') NOT NULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT t0.c0)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0)>>(t0.c0)) THEN CAST(t0.c1 AS INTEGER) ELSE (('୻7<y') NOT NULL) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (ABS(DISTINCT t0.c0)) ORDER BY CASE WHEN ((t0.c0)>>(t0.c0)) THEN CAST(t0.c1 AS INTEGER) ELSE (('୻7<y') NOT NULL) END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (TRIM((NOT (0.4492321105581175)))) ORDER BY json_insert(((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)), ((rt0.c1) IS FALSE), CAST(t0.c1 AS BLOB)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((NOT (0.4492321105581175)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY json_insert(((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)), ((rt0.c1) IS FALSE), CAST(t0.c1 AS BLOB)) ASC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (TRIM((NOT (0.4492321105581175)))) ORDER BY json_insert(((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)), ((rt0.c1) IS FALSE), CAST(t0.c1 AS BLOB)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((NOT (0.4492321105581175)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY json_insert(((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)), ((rt0.c1) IS FALSE), CAST(t0.c1 AS BLOB)) ASC);
SELECT * FROM t0, vt0 WHERE ((((((t0.c0)AND(vt0.c1)), ((t0.c1) NOT NULL), CASE t0.c0  WHEN t0.c2 THEN vt0.c1 ELSE t0.c0 END))<=((LENGTH(vt0.c1), ((t0.c1)>>(t0.c2)), vt0.c1)))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)AND(vt0.c1)), ((t0.c1) NOT NULL), CASE t0.c0  WHEN t0.c2 THEN vt0.c1 ELSE t0.c0 END))<=((LENGTH(vt0.c1), ((t0.c1)>>(t0.c2)), vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY '' ASC);
SELECT * FROM t0, vt0 WHERE ((((((t0.c0)AND(vt0.c1)), ((t0.c1) NOT NULL), CASE t0.c0  WHEN t0.c2 THEN vt0.c1 ELSE t0.c0 END))<=((LENGTH(vt0.c1), ((t0.c1)>>(t0.c2)), vt0.c1)))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)AND(vt0.c1)), ((t0.c1) NOT NULL), CASE t0.c0  WHEN t0.c2 THEN vt0.c1 ELSE t0.c0 END))<=((LENGTH(vt0.c1), ((t0.c1)>>(t0.c2)), vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY '' ASC);
SELECT * FROM t0, vt0 WHERE ((((((t0.c0)AND(vt0.c1)), ((t0.c1) NOT NULL), CASE t0.c0  WHEN t0.c2 THEN vt0.c1 ELSE t0.c0 END))<=((LENGTH(vt0.c1), ((t0.c1)>>(t0.c2)), vt0.c1)))) ORDER BY '' ASC;
SELECT ALL * FROM t0 WHERE ((((t0.c2)) BETWEEN (((NOT (t0.c0)))) AND ((((t0.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN (((NOT (t0.c0)))) AND ((((t0.c1) NOT NULL))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c2)) BETWEEN (((NOT (t0.c0)))) AND ((((t0.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN (((NOT (t0.c0)))) AND ((((t0.c1) NOT NULL))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c2)) BETWEEN (((NOT (t0.c0)))) AND ((((t0.c1) NOT NULL)))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((t0.c0)AND(rt0.c0)))OR(t0.c2)) COLLATE BINARY) ORDER BY (+ (((rt0.c2) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)AND(rt0.c0)))OR(t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (+ (((rt0.c2) ISNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((t0.c0)AND(rt0.c0)))OR(t0.c2)) COLLATE BINARY) ORDER BY (+ (((rt0.c2) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)AND(rt0.c0)))OR(t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (+ (((rt0.c2) ISNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((t0.c0)AND(rt0.c0)))OR(t0.c2)) COLLATE BINARY) ORDER BY (+ (((rt0.c2) ISNULL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((+ ('-1593928042')));
SELECT SUM(count) FROM (SELECT ALL (((+ ('-1593928042'))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ ('-1593928042')));
SELECT SUM(count) FROM (SELECT ALL (((+ ('-1593928042'))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ ('-1593928042')));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON LOWER(DISTINCT vt0.c0 COLLATE NOCASE) RIGHT OUTER JOIN rt0 ON (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((((0.3035022752470854)) BETWEEN ((t0.c1)) AND ((t0.c2)))))) WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON LOWER(DISTINCT vt0.c0 COLLATE NOCASE) RIGHT OUTER JOIN rt0 ON (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((((0.3035022752470854)) BETWEEN ((t0.c1)) AND ((t0.c2)))))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON LOWER(DISTINCT vt0.c0 COLLATE NOCASE) RIGHT OUTER JOIN rt0 ON (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((((0.3035022752470854)) BETWEEN ((t0.c1)) AND ((t0.c2)))))) WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON LOWER(DISTINCT vt0.c0 COLLATE NOCASE) RIGHT OUTER JOIN rt0 ON (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((((0.3035022752470854)) BETWEEN ((t0.c1)) AND ((t0.c2)))))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON LOWER(DISTINCT vt0.c0 COLLATE NOCASE) RIGHT OUTER JOIN rt0 ON (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((((0.3035022752470854)) BETWEEN ((t0.c1)) AND ((t0.c2)))))) WHERE (t0.c1);
SELECT COUNT(*) FROM rt0 WHERE (UNICODE((+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE((+ (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (UNICODE((+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE((+ (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (UNICODE((+ (rt0.c1))));
SELECT ALL * FROM t0 WHERE (UPPER(DISTINCT (((t0.c0, t0.c2, t0.c0))=((t0.c1, t0.c1, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((t0.c0, t0.c2, t0.c0))=((t0.c1, t0.c1, t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (UPPER(DISTINCT (((t0.c0, t0.c2, t0.c0))=((t0.c1, t0.c1, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((t0.c0, t0.c2, t0.c0))=((t0.c1, t0.c1, t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (UPPER(DISTINCT (((t0.c0, t0.c2, t0.c0))=((t0.c1, t0.c1, t0.c0)))));
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON CAST(vt0.c1 AS BLOB) WHERE ((CAST(rt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON CAST(vt0.c1 AS BLOB));
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON CAST(vt0.c1 AS BLOB) WHERE ((CAST(rt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON CAST(vt0.c1 AS BLOB));
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON CAST(vt0.c1 AS BLOB) WHERE ((CAST(rt0.c0 AS TEXT) IN ()));
SELECT ALL * FROM rt0, vt0, t0 WHERE (x'') ORDER BY '298857986';
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY '298857986');
SELECT ALL * FROM rt0, vt0, t0 WHERE (x'') ORDER BY '298857986';
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY '298857986');
SELECT ALL * FROM rt0, vt0, t0 WHERE (x'') ORDER BY '298857986';
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c1) NOT NULL))=((((vt0.c0))<=((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT NULL))==((((vt0.c0))<=((t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c1) NOT NULL))=((((vt0.c0))<=((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT NULL))==((((vt0.c0))<=((t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c1) NOT NULL))=((((vt0.c0))<=((t0.c0))))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((((vt0.c0)OR('䡬fj')))AND(rt0.c1)))AND(vt0.c0)))AND(t0.c0)))>(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR('䡬fj')))AND(rt0.c1)))AND(vt0.c0)))AND(t0.c0)))>(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((((vt0.c0)OR('䡬fj')))AND(rt0.c1)))AND(vt0.c0)))AND(t0.c0)))>(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR('䡬fj')))AND(rt0.c1)))AND(vt0.c0)))AND(t0.c0)))>(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((((vt0.c0)OR('䡬fj')))AND(rt0.c1)))AND(vt0.c0)))AND(t0.c0)))>(rt0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (('Rubgk') BETWEEN ((vt0.c0 IN ())) AND (CASE rt0.c0  WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 END)) WHERE ((('') NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((rt0.c2 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((rt0.c2 IN (rt0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (('Rubgk') BETWEEN ((vt0.c0 IN ())) AND (CASE rt0.c0  WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 END)));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (('Rubgk') BETWEEN ((vt0.c0 IN ())) AND (CASE rt0.c0  WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 END)) WHERE ((('') NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((rt0.c2 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((rt0.c2 IN (rt0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (('Rubgk') BETWEEN ((vt0.c0 IN ())) AND (CASE rt0.c0  WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 END)));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (('Rubgk') BETWEEN ((vt0.c0 IN ())) AND (CASE rt0.c0  WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 END)) WHERE ((('') NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((rt0.c2 IN (rt0.c2)))));
SELECT COUNT(*) FROM t0 WHERE (((ABS(DISTINCT t0.c0))|(0.43357261894838406))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT t0.c0))|(0.43357261894838406))) IS TRUE)  as count FROM t0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM t0 WHERE (((ABS(DISTINCT t0.c0))|(0.43357261894838406))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT t0.c0))|(0.43357261894838406))) IS TRUE)  as count FROM t0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM t0 WHERE (((ABS(DISTINCT t0.c0))|(0.43357261894838406))) ORDER BY NULL DESC;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c1)))AND(LIKELIHOOD(DISTINCT t0.c1, 0.01759437825028831))))AND(vt0.c1))) ORDER BY (((((t0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))IS NOT(CAST(vt0.c1 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c1)))AND(LIKELIHOOD(DISTINCT t0.c1, 0.01759437825028831))))AND(vt0.c1))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((t0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))IS NOT(CAST(vt0.c1 AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c1)))AND(LIKELIHOOD(DISTINCT t0.c1, 0.01759437825028831))))AND(vt0.c1))) ORDER BY (((((t0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))IS NOT(CAST(vt0.c1 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c1)))AND(LIKELIHOOD(DISTINCT t0.c1, 0.01759437825028831))))AND(vt0.c1))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((t0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))IS NOT(CAST(vt0.c1 AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c1)))AND(LIKELIHOOD(DISTINCT t0.c1, 0.01759437825028831))))AND(vt0.c1))) ORDER BY (((((t0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))IS NOT(CAST(vt0.c1 AS REAL)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2)))) IS TRUE)) ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2)))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2)))) IS TRUE)) ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2)))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2)))) IS TRUE)) ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT * FROM t0, rt0 WHERE (((((rt0.c0)LIKE(rt0.c2)))>=(CASE WHEN -2135262516 THEN rt0.c2 WHEN 'WV5C>' THEN rt0.c1 WHEN rt0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)LIKE(rt0.c2)))>=(CASE WHEN -2135262516 THEN rt0.c2 WHEN 'WV5C>' THEN rt0.c1 WHEN rt0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM t0, rt0 NOT INDEXED);
SELECT * FROM t0, rt0 WHERE (((((rt0.c0)LIKE(rt0.c2)))>=(CASE WHEN -2135262516 THEN rt0.c2 WHEN 'WV5C>' THEN rt0.c1 WHEN rt0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)LIKE(rt0.c2)))>=(CASE WHEN -2135262516 THEN rt0.c2 WHEN 'WV5C>' THEN rt0.c1 WHEN rt0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM t0, rt0 NOT INDEXED);
SELECT * FROM t0, rt0 WHERE (((((rt0.c0)LIKE(rt0.c2)))>=(CASE WHEN -2135262516 THEN rt0.c2 WHEN 'WV5C>' THEN rt0.c1 WHEN rt0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN rt0.c1 END)));
SELECT ALL * FROM rt0 WHERE (CAST(0.16551556352569496 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(0.16551556352569496 AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(0.16551556352569496 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(0.16551556352569496 AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(0.16551556352569496 AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))|(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))|(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))|(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))|(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))|(CAST(vt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.06031519123343143)+((~ (vt0.c1))))) ORDER BY MAX(((vt0.c1) NOT BETWEEN (vt0.c1) AND ('286282392')), NULL), 0.6258288544919249 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.06031519123343143)+((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY MAX(((vt0.c1) NOT BETWEEN (vt0.c1) AND ('286282392')), NULL), 0.6258288544919249 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.06031519123343143)+((~ (vt0.c1))))) ORDER BY MAX(((vt0.c1) NOT BETWEEN (vt0.c1) AND ('286282392')), NULL), 0.6258288544919249 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.06031519123343143)+((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY MAX(((vt0.c1) NOT BETWEEN (vt0.c1) AND ('286282392')), NULL), 0.6258288544919249 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.06031519123343143)+((~ (vt0.c1))))) ORDER BY MAX(((vt0.c1) NOT BETWEEN (vt0.c1) AND ('286282392')), NULL), 0.6258288544919249 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((((((NOT (rt0.c0)))AND(((rt0.c1)-(t0.c0)))))AND((((t0.c1))>((rt0.c1))))))OR(((rt0.c1)|(t0.c0)))))AND(((NULL) NOT BETWEEN ('1340854102') AND (t0.c2)))))OR(rt0.c1)))OR(((t0.c1)-(rt0.c1)))) FULL OUTER JOIN t0 ON (~ ((((t0.c1))>((rt0.c2))))) WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY ABS(((x'')IS(t0.c2))) ASC  NULLS FIRST, (((((t0.c1))<>((t0.c1)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((((((NOT (rt0.c0)))AND(((rt0.c1)-(t0.c0)))))AND((((t0.c1))>((rt0.c1))))))OR(((rt0.c1)|(t0.c0)))))AND(((NULL) NOT BETWEEN ('1340854102') AND (t0.c2)))))OR(rt0.c1)))OR(((t0.c1)-(rt0.c1)))) FULL OUTER JOIN t0 ON (~ ((((t0.c1))>((rt0.c2))))) ORDER BY ABS(((x'')IS(t0.c2))) ASC  NULLS FIRST, (((((t0.c1))!=((t0.c1)))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((((((NOT (rt0.c0)))AND(((rt0.c1)-(t0.c0)))))AND((((t0.c1))>((rt0.c1))))))OR(((rt0.c1)|(t0.c0)))))AND(((NULL) NOT BETWEEN ('1340854102') AND (t0.c2)))))OR(rt0.c1)))OR(((t0.c1)-(rt0.c1)))) FULL OUTER JOIN t0 ON (~ ((((t0.c1))>((rt0.c2))))) WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY ABS(((x'')IS(t0.c2))) ASC  NULLS FIRST, (((((t0.c1))<>((t0.c1)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((((((NOT (rt0.c0)))AND(((rt0.c1)-(t0.c0)))))AND((((t0.c1))>((rt0.c1))))))OR(((rt0.c1)|(t0.c0)))))AND(((NULL) NOT BETWEEN ('1340854102') AND (t0.c2)))))OR(rt0.c1)))OR(((t0.c1)-(rt0.c1)))) FULL OUTER JOIN t0 ON (~ ((((t0.c1))>((rt0.c2))))) ORDER BY ABS(((x'')IS(t0.c2))) ASC  NULLS FIRST, (((((t0.c1))!=((t0.c1)))) NOTNULL));
SELECT COUNT(*) FROM t0, rt0 WHERE ((- (t0.c1)));
SELECT SUM(count) FROM (SELECT (((- (t0.c1))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((- (t0.c1)));
SELECT SUM(count) FROM (SELECT (((- (t0.c1))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((- (t0.c1)));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 NOT INDEXED WHERE (((((t0.c2)GLOB(rt0.c2)))<(((((rt0.c2)AND(vt0.c1)))OR(vt0.c0))))) ORDER BY ((((NULL) NOT BETWEEN (t0.c2) AND (t0.c1))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)GLOB(rt0.c2)))<(((((rt0.c2)AND(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((NULL) NOT BETWEEN (t0.c2) AND (t0.c1))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 NOT INDEXED WHERE (((((t0.c2)GLOB(rt0.c2)))<(((((rt0.c2)AND(vt0.c1)))OR(vt0.c0))))) ORDER BY ((((NULL) NOT BETWEEN (t0.c2) AND (t0.c1))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)GLOB(rt0.c2)))<(((((rt0.c2)AND(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((NULL) NOT BETWEEN (t0.c2) AND (t0.c1))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 NOT INDEXED WHERE (((((t0.c2)GLOB(rt0.c2)))<(((((rt0.c2)AND(vt0.c1)))OR(vt0.c0))))) ORDER BY ((((NULL) NOT BETWEEN (t0.c2) AND (t0.c1))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (INSTR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((INSTR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (INSTR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((INSTR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (INSTR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((CAST(t0.c0 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((CAST(t0.c0 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((CAST(t0.c0 AS INTEGER)) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(UPPER(rt0.c2) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(rt0.c2) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(UPPER(rt0.c2) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(rt0.c2) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(UPPER(rt0.c2) AS BLOB));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('-674342256') ORDER BY CAST(((((((((vt0.c0)AND(t0.c2)))AND(t0.c2)))OR(vt0.c0)))AND(vt0.c1)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-674342256') IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((((((((vt0.c0)AND(t0.c2)))AND(t0.c2)))OR(vt0.c0)))AND(vt0.c1)) AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('-674342256') ORDER BY CAST(((((((((vt0.c0)AND(t0.c2)))AND(t0.c2)))OR(vt0.c0)))AND(vt0.c1)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-674342256') IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((((((((vt0.c0)AND(t0.c2)))AND(t0.c2)))OR(vt0.c0)))AND(vt0.c1)) AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('-674342256') ORDER BY CAST(((((((((vt0.c0)AND(t0.c2)))AND(t0.c2)))OR(vt0.c0)))AND(vt0.c1)) AS REAL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c1)))OR(((NULL)<=(rt0.c0)))))AND(((rt0.c1) NOT BETWEEN ('X)\noWa]') AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c1)))OR(((NULL)<=(rt0.c0)))))AND(((rt0.c1) NOT BETWEEN ('X)\noWa]') AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c1)))OR(((NULL)<=(rt0.c0)))))AND(((rt0.c1) NOT BETWEEN ('X)\noWa]') AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c1)))OR(((NULL)<=(rt0.c0)))))AND(((rt0.c1) NOT BETWEEN ('X)\noWa]') AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c1)))OR(((NULL)<=(rt0.c0)))))AND(((rt0.c1) NOT BETWEEN ('X)\noWa]') AND (rt0.c1)))));
SELECT * FROM t0, vt0 WHERE (((((((vt0.c0)-(t0.c2)))OR(((t0.c0)LIKE(1.340854102E9)))))OR((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)-(t0.c2)))OR(((t0.c0)LIKE(1.340854102E9)))))OR((~ (t0.c2))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((vt0.c0)-(t0.c2)))OR(((t0.c0)LIKE(1.340854102E9)))))OR((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)-(t0.c2)))OR(((t0.c0)LIKE(1.340854102E9)))))OR((~ (t0.c2))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((vt0.c0)-(t0.c2)))OR(((t0.c0)LIKE(1.340854102E9)))))OR((~ (t0.c2)))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1 IN ())) NOTNULL));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE (STRFTIME(((rt0.c2)+(vt0.c1)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)), UNICODE(t0.c0)));
SELECT SUM(count) FROM (SELECT ((STRFTIME(((rt0.c2)+(vt0.c1)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)), UNICODE(t0.c0))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON vt0.c0);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE (STRFTIME(((rt0.c2)+(vt0.c1)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)), UNICODE(t0.c0)));
SELECT SUM(count) FROM (SELECT ((STRFTIME(((rt0.c2)+(vt0.c1)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)), UNICODE(t0.c0))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON vt0.c0);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE (STRFTIME(((rt0.c2)+(vt0.c1)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)), UNICODE(t0.c0)));
SELECT * FROM rt0, t0 WHERE (((((((((((rt0.c2)%(t0.c2)))OR(rt0.c0)))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))))OR(x'')))AND(CAST(t0.c2 AS BLOB)))) ORDER BY ((((t0.c0)>(t0.c0)))LIKE(CASE t0.c0  WHEN t0.c1 THEN t0.c2 END))  NULLS LAST, TRIM(DISTINCT NULL)  NULLS LAST, ((t0.c1)&(t0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)%(t0.c2)))OR(rt0.c0)))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))))OR(x'')))AND(CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c0)>(t0.c0)))LIKE(CASE t0.c0  WHEN t0.c1 THEN t0.c2 END))  NULLS LAST, TRIM(DISTINCT NULL)  NULLS LAST, ((t0.c1)&(t0.c0)) DESC);
SELECT * FROM rt0, t0 WHERE (((((((((((rt0.c2)%(t0.c2)))OR(rt0.c0)))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))))OR(x'')))AND(CAST(t0.c2 AS BLOB)))) ORDER BY ((((t0.c0)>(t0.c0)))LIKE(CASE t0.c0  WHEN t0.c1 THEN t0.c2 END))  NULLS LAST, TRIM(DISTINCT NULL)  NULLS LAST, ((t0.c1)&(t0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)%(t0.c2)))OR(rt0.c0)))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))))OR(x'')))AND(CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c0)>(t0.c0)))LIKE(CASE t0.c0  WHEN t0.c1 THEN t0.c2 END))  NULLS LAST, TRIM(DISTINCT NULL)  NULLS LAST, ((t0.c1)&(t0.c0)) DESC);
SELECT * FROM rt0, t0 WHERE (((((((((((rt0.c2)%(t0.c2)))OR(rt0.c0)))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))))OR(x'')))AND(CAST(t0.c2 AS BLOB)))) ORDER BY ((((t0.c0)>(t0.c0)))LIKE(CASE t0.c0  WHEN t0.c1 THEN t0.c2 END))  NULLS LAST, TRIM(DISTINCT NULL)  NULLS LAST, ((t0.c1)&(t0.c0)) DESC;
SELECT * FROM vt0, t0, rt0 WHERE (((((NOT (vt0.c0))))<>((CAST(vt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt0.c0))))<>((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((NOT (vt0.c0))))<>((CAST(vt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt0.c0))))<>((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((NOT (vt0.c0))))<>((CAST(vt0.c0 AS BLOB)))));
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c0 AS TEXT)) ISNULL)) ORDER BY (~ (vt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT)) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (vt0.c1)) COLLATE NOCASE);
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c0 AS TEXT)) ISNULL)) ORDER BY (~ (vt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT)) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (vt0.c1)) COLLATE NOCASE);
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c0 AS TEXT)) ISNULL)) ORDER BY (~ (vt0.c1)) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((((((((vt0.c0)OR(rt0.c2)))OR(vt0.c0)))AND(vt0.c1)))AND(t0.c2)))OR(IFNULL(t0.c1, vt0.c1)))) ORDER BY ((((((t0.c0)OR(rt0.c0)))OR(t0.c1))) BETWEEN (((t0.c2)AND(rt0.c2))) AND ((- (t0.c2)))), CASE WHEN (((t0.c0))>=((t0.c2))) THEN ((((NULL)AND(t0.c2)))OR(rt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(rt0.c2)))OR(vt0.c0)))AND(vt0.c1)))AND(t0.c2)))OR(IFNULL(t0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((t0.c0)OR(rt0.c0)))OR(t0.c1))) BETWEEN (((t0.c2)AND(rt0.c2))) AND ((- (t0.c2)))), CASE WHEN (((t0.c0))>=((t0.c2))) THEN ((((NULL)AND(t0.c2)))OR(rt0.c1)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((((((((vt0.c0)OR(rt0.c2)))OR(vt0.c0)))AND(vt0.c1)))AND(t0.c2)))OR(IFNULL(t0.c1, vt0.c1)))) ORDER BY ((((((t0.c0)OR(rt0.c0)))OR(t0.c1))) BETWEEN (((t0.c2)AND(rt0.c2))) AND ((- (t0.c2)))), CASE WHEN (((t0.c0))>=((t0.c2))) THEN ((((NULL)AND(t0.c2)))OR(rt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(rt0.c2)))OR(vt0.c0)))AND(vt0.c1)))AND(t0.c2)))OR(IFNULL(t0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((t0.c0)OR(rt0.c0)))OR(t0.c1))) BETWEEN (((t0.c2)AND(rt0.c2))) AND ((- (t0.c2)))), CASE WHEN (((t0.c0))>=((t0.c2))) THEN ((((NULL)AND(t0.c2)))OR(rt0.c1)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((((((((vt0.c0)OR(rt0.c2)))OR(vt0.c0)))AND(vt0.c1)))AND(t0.c2)))OR(IFNULL(t0.c1, vt0.c1)))) ORDER BY ((((((t0.c0)OR(rt0.c0)))OR(t0.c1))) BETWEEN (((t0.c2)AND(rt0.c2))) AND ((- (t0.c2)))), CASE WHEN (((t0.c0))>=((t0.c2))) THEN ((((NULL)AND(t0.c2)))OR(rt0.c1)) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON ((((((t0.c2)GLOB(vt0.c1)))OR((rt0.c2 IN ()))))AND(vt0.c0 COLLATE BINARY)) WHERE (((((t0.c0 IN ())))<=(('￿gWRU<T')))) ORDER BY (((~ (rt0.c2)))<=(((rt0.c1) IS TRUE))), ((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(t0.c2)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2)/('-588725973')))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN ())))<=(('￿gWRU<T')))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON ((((((t0.c2)GLOB(vt0.c1)))OR((rt0.c2 IN ()))))AND(vt0.c0 COLLATE BINARY)) ORDER BY (((~ (rt0.c2)))<=(((rt0.c1) IS TRUE))), ((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(t0.c2)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2)/('-588725973')))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON ((((((t0.c2)GLOB(vt0.c1)))OR((rt0.c2 IN ()))))AND(vt0.c0 COLLATE BINARY)) WHERE (((((t0.c0 IN ())))<=(('￿gWRU<T')))) ORDER BY (((~ (rt0.c2)))<=(((rt0.c1) IS TRUE))), ((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(t0.c2)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2)/('-588725973')))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN ())))<=(('￿gWRU<T')))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON ((((((t0.c2)GLOB(vt0.c1)))OR((rt0.c2 IN ()))))AND(vt0.c0 COLLATE BINARY)) ORDER BY (((~ (rt0.c2)))<=(((rt0.c1) IS TRUE))), ((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(t0.c2)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2)/('-588725973')))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON ((((((t0.c2)GLOB(vt0.c1)))OR((rt0.c2 IN ()))))AND(vt0.c0 COLLATE BINARY)) WHERE (((((t0.c0 IN ())))<=(('￿gWRU<T')))) ORDER BY (((~ (rt0.c2)))<=(((rt0.c1) IS TRUE))), ((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(t0.c2)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2)/('-588725973')))) ASC;
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((+ (t0.c1)) IN (LIKELIHOOD(rt0.c0, 0.4629604113155008))) CROSS JOIN rt0 ON (SQLITE_VERSION() IN (UNICODE(t0.c0), ABS(t0.c0))) WHERE (0.9421777633260275) ORDER BY (((- (rt0.c0)))||(((('HXGD>AK	')) NOT BETWEEN ((rt0.c1)) AND ((2.27476776E8))))) DESC;
SELECT SUM(count) FROM (SELECT ((0.9421777633260275) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((+ (t0.c1)) IN (LIKELIHOOD(rt0.c0, 0.4629604113155008))) CROSS JOIN rt0 ON (SQLITE_VERSION() IN (UNICODE(t0.c0), ABS(t0.c0))) ORDER BY (((- (rt0.c0)))||(((('HXGD>AK	')) NOT BETWEEN ((rt0.c1)) AND ((2.27476776E8))))) DESC);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((+ (t0.c1)) IN (LIKELIHOOD(rt0.c0, 0.4629604113155008))) CROSS JOIN rt0 ON (SQLITE_VERSION() IN (UNICODE(t0.c0), ABS(t0.c0))) WHERE (0.9421777633260275) ORDER BY (((- (rt0.c0)))||(((('HXGD>AK	')) NOT BETWEEN ((rt0.c1)) AND ((2.27476776E8))))) DESC;
SELECT SUM(count) FROM (SELECT ((0.9421777633260275) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((+ (t0.c1)) IN (LIKELIHOOD(rt0.c0, 0.4629604113155008))) CROSS JOIN rt0 ON (SQLITE_VERSION() IN (UNICODE(t0.c0), ABS(t0.c0))) ORDER BY (((- (rt0.c0)))||(((('HXGD>AK	')) NOT BETWEEN ((rt0.c1)) AND ((2.27476776E8))))) DESC);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((+ (t0.c1)) IN (LIKELIHOOD(rt0.c0, 0.4629604113155008))) CROSS JOIN rt0 ON (SQLITE_VERSION() IN (UNICODE(t0.c0), ABS(t0.c0))) WHERE (0.9421777633260275) ORDER BY (((- (rt0.c0)))||(((('HXGD>AK	')) NOT BETWEEN ((rt0.c1)) AND ((2.27476776E8))))) DESC;
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON ((CASE t0.c2  WHEN t0.c0 THEN rt0.c2 ELSE t0.c2 END) BETWEEN (((t0.c2) IS TRUE)) AND (((rt0.c2) IS FALSE))) WHERE ((((((+ (t0.c2)))AND(((((t0.c1)AND(vt0.c0)))OR(vt0.c0)))))AND(0.5083741821077957)));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (t0.c2)))AND(((((t0.c1)AND(vt0.c0)))OR(vt0.c0)))))AND(0.5083741821077957))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON ((CASE t0.c2  WHEN t0.c0 THEN rt0.c2 ELSE t0.c2 END) BETWEEN (((t0.c2) IS TRUE)) AND (((rt0.c2) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON ((CASE t0.c2  WHEN t0.c0 THEN rt0.c2 ELSE t0.c2 END) BETWEEN (((t0.c2) IS TRUE)) AND (((rt0.c2) IS FALSE))) WHERE ((((((+ (t0.c2)))AND(((((t0.c1)AND(vt0.c0)))OR(vt0.c0)))))AND(0.5083741821077957)));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (t0.c2)))AND(((((t0.c1)AND(vt0.c0)))OR(vt0.c0)))))AND(0.5083741821077957))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON ((CASE t0.c2  WHEN t0.c0 THEN rt0.c2 ELSE t0.c2 END) BETWEEN (((t0.c2) IS TRUE)) AND (((rt0.c2) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON ((CASE t0.c2  WHEN t0.c0 THEN rt0.c2 ELSE t0.c2 END) BETWEEN (((t0.c2) IS TRUE)) AND (((rt0.c2) IS FALSE))) WHERE ((((((+ (t0.c2)))AND(((((t0.c1)AND(vt0.c0)))OR(vt0.c0)))))AND(0.5083741821077957)));
SELECT * FROM t0, rt0 WHERE (rt0.c2) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND((x'' IN ()))))AND((- (t0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND((x'' IN ()))))AND((- (t0.c2)))));
SELECT * FROM t0, rt0 WHERE (rt0.c2) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND((x'' IN ()))))AND((- (t0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND((x'' IN ()))))AND((- (t0.c2)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((LIKELY(DISTINCT rt0.c2)) NOT NULL) INNER JOIN rt0 ON ((rt0.c1) NOT NULL) WHERE ((((rt0.c1)) BETWEEN ((((((((((((((((((t0.c0)AND(rt0.c1)))AND(NULL)))AND(rt0.c2)))OR(t0.c0)))OR(t0.c1)))AND(t0.c1)))AND(rt0.c2)))AND(vt0.c1)))) AND ((TRIM(rt0.c0))))) ORDER BY CASE WHEN ((rt0.c0)<<(rt0.c2)) THEN (+ (vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((((((((((((((((t0.c0)AND(rt0.c1)))AND(NULL)))AND(rt0.c2)))OR(t0.c0)))OR(t0.c1)))AND(t0.c1)))AND(rt0.c2)))AND(vt0.c1)))) AND ((TRIM(rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((LIKELY(DISTINCT rt0.c2)) NOT NULL) INNER JOIN rt0 ON ((rt0.c1) NOT NULL) ORDER BY CASE WHEN ((rt0.c0)<<(rt0.c2)) THEN (+ (vt0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((LIKELY(DISTINCT rt0.c2)) NOT NULL) INNER JOIN rt0 ON ((rt0.c1) NOT NULL) WHERE ((((rt0.c1)) BETWEEN ((((((((((((((((((t0.c0)AND(rt0.c1)))AND(NULL)))AND(rt0.c2)))OR(t0.c0)))OR(t0.c1)))AND(t0.c1)))AND(rt0.c2)))AND(vt0.c1)))) AND ((TRIM(rt0.c0))))) ORDER BY CASE WHEN ((rt0.c0)<<(rt0.c2)) THEN (+ (vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((((((((((((((((t0.c0)AND(rt0.c1)))AND(NULL)))AND(rt0.c2)))OR(t0.c0)))OR(t0.c1)))AND(t0.c1)))AND(rt0.c2)))AND(vt0.c1)))) AND ((TRIM(rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((LIKELY(DISTINCT rt0.c2)) NOT NULL) INNER JOIN rt0 ON ((rt0.c1) NOT NULL) ORDER BY CASE WHEN ((rt0.c0)<<(rt0.c2)) THEN (+ (vt0.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) IS FALSE)) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN TRIM(vt0.c0, 'G媐') WHEN vt0.c1 THEN CASE 942546113  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c1) ISNULL) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN TRIM(vt0.c0, 'G媐') WHEN vt0.c1 THEN CASE 942546113  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c1) ISNULL) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) IS FALSE)) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN TRIM(vt0.c0, 'G媐') WHEN vt0.c1 THEN CASE 942546113  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c1) ISNULL) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN TRIM(vt0.c0, 'G媐') WHEN vt0.c1 THEN CASE 942546113  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c1) ISNULL) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) IS FALSE)) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN TRIM(vt0.c0, 'G媐') WHEN vt0.c1 THEN CASE 942546113  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c1) ISNULL) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) END  NULLS FIRST;
SELECT * FROM t0 WHERE (((((t0.c2) IS TRUE)) NOT BETWEEN ((t0.c0 IN (t0.c2, t0.c0))) AND (HEX(t0.c1)))) ORDER BY (((NULL) IS FALSE) IN ())  NULLS LAST, UNLIKELY(DISTINCT ((t0.c2)|(t0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS TRUE)) NOT BETWEEN ((t0.c0 IN (t0.c2, t0.c0))) AND (HEX(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY (((NULL) IS FALSE) IN ())  NULLS LAST, UNLIKELY(DISTINCT ((t0.c2)|(t0.c0))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c2) IS TRUE)) NOT BETWEEN ((t0.c0 IN (t0.c2, t0.c0))) AND (HEX(t0.c1)))) ORDER BY (((NULL) IS FALSE) IN ())  NULLS LAST, UNLIKELY(DISTINCT ((t0.c2)|(t0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS TRUE)) NOT BETWEEN ((t0.c0 IN (t0.c2, t0.c0))) AND (HEX(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY (((NULL) IS FALSE) IN ())  NULLS LAST, UNLIKELY(DISTINCT ((t0.c2)|(t0.c0))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c2) IS TRUE)) NOT BETWEEN ((t0.c0 IN (t0.c2, t0.c0))) AND (HEX(t0.c1)))) ORDER BY (((NULL) IS FALSE) IN ())  NULLS LAST, UNLIKELY(DISTINCT ((t0.c2)|(t0.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE (t0.c0) ORDER BY (~ ((rt0.c0 IN (t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0 ORDER BY (~ ((rt0.c0 IN (t0.c1)))) ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (t0.c0) ORDER BY (~ ((rt0.c0 IN (t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0 ORDER BY (~ ((rt0.c0 IN (t0.c1)))) ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (t0.c0) ORDER BY (~ ((rt0.c0 IN (t0.c1)))) ASC;
SELECT * FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT * FROM rt0, vt0 WHERE (((((vt0.c1) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c1) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c1) IS FALSE)) NOTNULL));
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((t0.c2)AND(NULL)))OR(rt0.c0)) COLLATE BINARY COLLATE BINARY WHERE ((((t0.c0)) NOT BETWEEN ((((((t0.c1)AND(vt0.c1)))OR(vt0.c0)))) AND ((0.6246617866477997)))) ORDER BY ((((((NULL)OR(t0.c0)))AND(t0.c0)))IS NOT(t0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((((((t0.c1)AND(vt0.c1)))OR(vt0.c0)))) AND ((0.6246617866477997)))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((t0.c2)AND(NULL)))OR(rt0.c0)) COLLATE BINARY COLLATE BINARY ORDER BY ((((((NULL)OR(t0.c0)))AND(t0.c0)))IS NOT(t0.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((t0.c2)AND(NULL)))OR(rt0.c0)) COLLATE BINARY COLLATE BINARY WHERE ((((t0.c0)) NOT BETWEEN ((((((t0.c1)AND(vt0.c1)))OR(vt0.c0)))) AND ((0.6246617866477997)))) ORDER BY ((((((NULL)OR(t0.c0)))AND(t0.c0)))IS NOT(t0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((((((t0.c1)AND(vt0.c1)))OR(vt0.c0)))) AND ((0.6246617866477997)))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((t0.c2)AND(NULL)))OR(rt0.c0)) COLLATE BINARY COLLATE BINARY ORDER BY ((((((NULL)OR(t0.c0)))AND(t0.c0)))IS NOT(t0.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((t0.c2)AND(NULL)))OR(rt0.c0)) COLLATE BINARY COLLATE BINARY WHERE ((((t0.c0)) NOT BETWEEN ((((((t0.c1)AND(vt0.c1)))OR(vt0.c0)))) AND ((0.6246617866477997)))) ORDER BY ((((((NULL)OR(t0.c0)))AND(t0.c0)))IS NOT(t0.c0 COLLATE NOCASE)) ASC;
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((('5[&k')OR(vt0.c0)))OR(vt0.c0)))<=(((1454026264)/(1.063810657E9)))));
SELECT SUM(count) FROM (SELECT (((((((('5[&k')OR(vt0.c0)))OR(vt0.c0)))<=(((1454026264)/(1.063810657E9))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((('5[&k')OR(vt0.c0)))OR(vt0.c0)))<=(((1454026264)/(1.063810657E9)))));
SELECT SUM(count) FROM (SELECT (((((((('5[&k')OR(vt0.c0)))OR(vt0.c0)))<=(((1454026264)/(1.063810657E9))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((('5[&k')OR(vt0.c0)))OR(vt0.c0)))<=(((1454026264)/(1.063810657E9)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('*uཚu[U') NOT NULL)) ORDER BY CASE (- (vt0.c1))  WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) NOT NULL) ELSE ABS(rt0.c0) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('*uཚu[U') NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (- (vt0.c1))  WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) NOT NULL) ELSE ABS(rt0.c0) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('*uཚu[U') NOT NULL)) ORDER BY CASE (- (vt0.c1))  WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) NOT NULL) ELSE ABS(rt0.c0) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('*uཚu[U') NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (- (vt0.c1))  WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) NOT NULL) ELSE ABS(rt0.c0) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('*uཚu[U') NOT NULL)) ORDER BY CASE (- (vt0.c1))  WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) NOT NULL) ELSE ABS(rt0.c0) END DESC  NULLS LAST;
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((((rt0.c1) IS FALSE)) NOT NULL) WHERE (x'0ab1') ORDER BY CASE CAST(rt0.c0 AS REAL)  WHEN ((rt0.c0) BETWEEN ('y+[cn') AND (rt0.c2)) THEN rt0.c0 COLLATE BINARY WHEN '0.9565257337193157' THEN CASE t0.c2  WHEN t0.c1 THEN t0.c1 END WHEN CAST(t0.c0 AS REAL) THEN CAST(t0.c2 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ALL ((x'0ab1') IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((rt0.c1) IS FALSE)) NOT NULL) ORDER BY CASE CAST(rt0.c0 AS REAL)  WHEN ((rt0.c0) BETWEEN ('y+[cn') AND (rt0.c2)) THEN rt0.c0 COLLATE BINARY WHEN '0.9565257337193157' THEN CASE t0.c2  WHEN t0.c1 THEN t0.c1 END WHEN CAST(t0.c0 AS REAL) THEN CAST(t0.c2 AS NUMERIC) END);
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((((rt0.c1) IS FALSE)) NOT NULL) WHERE (x'0ab1') ORDER BY CASE CAST(rt0.c0 AS REAL)  WHEN ((rt0.c0) BETWEEN ('y+[cn') AND (rt0.c2)) THEN rt0.c0 COLLATE BINARY WHEN '0.9565257337193157' THEN CASE t0.c2  WHEN t0.c1 THEN t0.c1 END WHEN CAST(t0.c0 AS REAL) THEN CAST(t0.c2 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ALL ((x'0ab1') IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((rt0.c1) IS FALSE)) NOT NULL) ORDER BY CASE CAST(rt0.c0 AS REAL)  WHEN ((rt0.c0) BETWEEN ('y+[cn') AND (rt0.c2)) THEN rt0.c0 COLLATE BINARY WHEN '0.9565257337193157' THEN CASE t0.c2  WHEN t0.c1 THEN t0.c1 END WHEN CAST(t0.c0 AS REAL) THEN CAST(t0.c2 AS NUMERIC) END);
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((((rt0.c1) IS FALSE)) NOT NULL) WHERE (x'0ab1') ORDER BY CASE CAST(rt0.c0 AS REAL)  WHEN ((rt0.c0) BETWEEN ('y+[cn') AND (rt0.c2)) THEN rt0.c0 COLLATE BINARY WHEN '0.9565257337193157' THEN CASE t0.c2  WHEN t0.c1 THEN t0.c1 END WHEN CAST(t0.c0 AS REAL) THEN CAST(t0.c2 AS NUMERIC) END;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((t0.c1)) NOT BETWEEN ((((vt0.c0)!=(t0.c1)))) AND ((COALESCE(rt0.c2, t0.c0))))) ORDER BY -1880230711  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((((vt0.c0)!=(t0.c1)))) AND ((COALESCE(rt0.c2, t0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY -1880230711  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((t0.c1)) NOT BETWEEN ((((vt0.c0)!=(t0.c1)))) AND ((COALESCE(rt0.c2, t0.c0))))) ORDER BY -1880230711  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((((vt0.c0)!=(t0.c1)))) AND ((COALESCE(rt0.c2, t0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY -1880230711  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('750741500') ORDER BY (((vt0.c1)-(0.29301268411217596)) IN ())  NULLS FIRST, ((((vt0.c1)>>(vt0.c1)))LIKE(((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('750741500') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)-(0.29301268411217596)) IN ())  NULLS FIRST, ((((vt0.c1)>>(vt0.c1)))LIKE(((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('750741500') ORDER BY (((vt0.c1)-(0.29301268411217596)) IN ())  NULLS FIRST, ((((vt0.c1)>>(vt0.c1)))LIKE(((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('750741500') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)-(0.29301268411217596)) IN ())  NULLS FIRST, ((((vt0.c1)>>(vt0.c1)))LIKE(((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('750741500') ORDER BY (((vt0.c1)-(0.29301268411217596)) IN ())  NULLS FIRST, ((((vt0.c1)>>(vt0.c1)))LIKE(((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c1) AND (t0.c2))) NOT NULL)) ORDER BY (((NULL))=(('1131405133'))) ASC  NULLS LAST, (((NOT (t0.c0))) BETWEEN ((t0.c2 IN ())) AND ((((t0.c2, t0.c1, t0.c1))>=((t0.c0, t0.c2, t0.c1)))))  NULLS LAST, (((t0.c1)) NOT BETWEEN ((NULL)) AND ((CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c1) AND (t0.c2))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (((NULL))=(('1131405133'))) ASC  NULLS LAST, (((NOT (t0.c0))) BETWEEN ((t0.c2 IN ())) AND ((((t0.c2, t0.c1, t0.c1))>=((t0.c0, t0.c2, t0.c1)))))  NULLS LAST, (((t0.c1)) NOT BETWEEN ((NULL)) AND ((CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END)))  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c1) AND (t0.c2))) NOT NULL)) ORDER BY (((NULL))=(('1131405133'))) ASC  NULLS LAST, (((NOT (t0.c0))) BETWEEN ((t0.c2 IN ())) AND ((((t0.c2, t0.c1, t0.c1))>=((t0.c0, t0.c2, t0.c1)))))  NULLS LAST, (((t0.c1)) NOT BETWEEN ((NULL)) AND ((CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c1) AND (t0.c2))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (((NULL))=(('1131405133'))) ASC  NULLS LAST, (((NOT (t0.c0))) BETWEEN ((t0.c2 IN ())) AND ((((t0.c2, t0.c1, t0.c1))>=((t0.c0, t0.c2, t0.c1)))))  NULLS LAST, (((t0.c1)) NOT BETWEEN ((NULL)) AND ((CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END)))  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c1) AND (t0.c2))) NOT NULL)) ORDER BY (((NULL))=(('1131405133'))) ASC  NULLS LAST, (((NOT (t0.c0))) BETWEEN ((t0.c2 IN ())) AND ((((t0.c2, t0.c1, t0.c1))>=((t0.c0, t0.c2, t0.c1)))))  NULLS LAST, (((t0.c1)) NOT BETWEEN ((NULL)) AND ((CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c0) NOT NULL) THEN CAST(rt0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c0) NOT NULL) THEN CAST(rt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c0) NOT NULL) THEN CAST(rt0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c0) NOT NULL) THEN CAST(rt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c0) NOT NULL) THEN CAST(rt0.c2 AS NUMERIC) END);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT * FROM rt0, vt0 WHERE (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END COLLATE RTRIM);
SELECT * FROM t0 CROSS JOIN vt0 ON (+ (CAST(vt0.c0 AS REAL))) WHERE ((~ (CAST('537150160' AS INTEGER)))) ORDER BY ((((vt0.c0)GLOB(vt0.c1))) NOT BETWEEN (((t0.c2)IS NOT(t0.c2))) AND (((vt0.c0) IS FALSE)))  NULLS FIRST, CAST(((x'') NOTNULL) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CAST('537150160' AS INTEGER)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (+ (CAST(vt0.c0 AS REAL))) ORDER BY ((((vt0.c0)GLOB(vt0.c1))) NOT BETWEEN (((t0.c2)IS NOT(t0.c2))) AND (((vt0.c0) IS FALSE)))  NULLS FIRST, CAST(((x'') NOTNULL) AS NUMERIC) DESC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON (+ (CAST(vt0.c0 AS REAL))) WHERE ((~ (CAST('537150160' AS INTEGER)))) ORDER BY ((((vt0.c0)GLOB(vt0.c1))) NOT BETWEEN (((t0.c2)IS NOT(t0.c2))) AND (((vt0.c0) IS FALSE)))  NULLS FIRST, CAST(((x'') NOTNULL) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CAST('537150160' AS INTEGER)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (+ (CAST(vt0.c0 AS REAL))) ORDER BY ((((vt0.c0)GLOB(vt0.c1))) NOT BETWEEN (((t0.c2)IS NOT(t0.c2))) AND (((vt0.c0) IS FALSE)))  NULLS FIRST, CAST(((x'') NOTNULL) AS NUMERIC) DESC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON (+ (CAST(vt0.c0 AS REAL))) WHERE ((~ (CAST('537150160' AS INTEGER)))) ORDER BY ((((vt0.c0)GLOB(vt0.c1))) NOT BETWEEN (((t0.c2)IS NOT(t0.c2))) AND (((vt0.c0) IS FALSE)))  NULLS FIRST, CAST(((x'') NOTNULL) AS NUMERIC) DESC  NULLS LAST;
SELECT * FROM rt0, vt0 INNER JOIN t0 ON (NOT (LIKELY(t0.c1))) WHERE (CAST((t0.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON (NOT (LIKELY(t0.c1))));
SELECT * FROM rt0, vt0 INNER JOIN t0 ON (NOT (LIKELY(t0.c1))) WHERE (CAST((t0.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON (NOT (LIKELY(t0.c1))));
SELECT * FROM rt0, vt0 INNER JOIN t0 ON (NOT (LIKELY(t0.c1))) WHERE (CAST((t0.c0 IN ()) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((t0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((t0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((t0.c0 COLLATE BINARY IN ()));
SELECT ALL * FROM rt0 WHERE (((NULL)LIKE(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)LIKE(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((NULL)LIKE(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)LIKE(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((NULL)LIKE(rt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0 WHERE (0.6813922463980835);
SELECT SUM(count) FROM (SELECT ((0.6813922463980835) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (0.6813922463980835);
SELECT SUM(count) FROM (SELECT ((0.6813922463980835) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (0.6813922463980835);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (JULIANDAY(((rt0.c0)+(rt0.c0)), LIKELY(DISTINCT t0.c1), ((rt0.c1) NOT NULL))) ORDER BY rt0.c1 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((rt0.c0)+(rt0.c0)), LIKELY(DISTINCT t0.c1), ((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY rt0.c1 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (JULIANDAY(((rt0.c0)+(rt0.c0)), LIKELY(DISTINCT t0.c1), ((rt0.c1) NOT NULL))) ORDER BY rt0.c1 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((rt0.c0)+(rt0.c0)), LIKELY(DISTINCT t0.c1), ((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY rt0.c1 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (JULIANDAY(((rt0.c0)+(rt0.c0)), LIKELY(DISTINCT t0.c1), ((rt0.c1) NOT NULL))) ORDER BY rt0.c1 COLLATE BINARY;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(NULL))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(NULL))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(NULL))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(NULL))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(NULL))) ISNULL));
SELECT ALL * FROM rt0, t0 WHERE (((((((NULL)AND(rt0.c0)))OR(rt0.c2)))<<(x'' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(rt0.c0)))OR(rt0.c2)))<<(x'' COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((NULL)AND(rt0.c0)))OR(rt0.c2)))<<(x'' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(rt0.c0)))OR(rt0.c2)))<<(x'' COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((NULL)AND(rt0.c0)))OR(rt0.c2)))<<(x'' COLLATE NOCASE)));
SELECT COUNT(*) FROM t0, rt0 WHERE ((~ (CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((~ (CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((~ (CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END)));
SELECT ALL * FROM t0, vt0 WHERE (CAST((~ (t0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST((~ (t0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST((~ (t0.c1)) AS TEXT));
SELECT ALL * FROM rt0 WHERE (((((((((json_object(rt0.c1, rt0.c1))OR(((rt0.c1) NOTNULL))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.26965404957710337))))AND(rt0.c1)))OR(LIKELY(DISTINCT rt0.c0)))) ORDER BY json_array_length(rt0.c1 COLLATE RTRIM, rt0.c2)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((json_object(rt0.c1, rt0.c1))OR(((rt0.c1) NOTNULL))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.26965404957710337))))AND(rt0.c1)))OR(LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY json_array_length(rt0.c1 COLLATE RTRIM, rt0.c2)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((((json_object(rt0.c1, rt0.c1))OR(((rt0.c1) NOTNULL))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.26965404957710337))))AND(rt0.c1)))OR(LIKELY(DISTINCT rt0.c0)))) ORDER BY json_array_length(rt0.c1 COLLATE RTRIM, rt0.c2)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((json_object(rt0.c1, rt0.c1))OR(((rt0.c1) NOTNULL))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.26965404957710337))))AND(rt0.c1)))OR(LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY json_array_length(rt0.c1 COLLATE RTRIM, rt0.c2)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY (((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c2))))&(((rt0.c2) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c2))))&(((rt0.c2) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY (((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c2))))&(((rt0.c2) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c2))))&(((rt0.c2) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY (((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c2))))&(((rt0.c2) NOTNULL)))  NULLS FIRST;
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CAST((((vt0.c0, t0.c2, '843004696')) BETWEEN ((vt0.c0, vt0.c1, t0.c0)) AND ((t0.c1, 0Xffffffffe8083736, vt0.c1))) AS NUMERIC) WHERE (((((((((NULL)OR((((0.634517437821493, t0.c2, vt0.c1))<=((t0.c1, x'dee0', vt0.c0))))))AND(CAST(vt0.c0 AS BLOB))))AND(t0.c1)))AND(CAST(vt0.c0 AS REAL)))) ORDER BY CAST((+ (t0.c0)) AS INTEGER) ASC, 0X169ae577;
SELECT SUM(count) FROM (SELECT ((((((((((NULL)OR((((0.634517437821493, t0.c2, vt0.c1))<=((t0.c1, x'dee0', vt0.c0))))))AND(CAST(vt0.c0 AS BLOB))))AND(t0.c1)))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST((((vt0.c0, t0.c2, '843004696')) BETWEEN ((vt0.c0, vt0.c1, t0.c0)) AND ((t0.c1, 0xffffffffe8083736, vt0.c1))) AS NUMERIC) ORDER BY CAST((+ (t0.c0)) AS INTEGER) ASC, 0x169ae577);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CAST((((vt0.c0, t0.c2, '843004696')) BETWEEN ((vt0.c0, vt0.c1, t0.c0)) AND ((t0.c1, 0Xffffffffe8083736, vt0.c1))) AS NUMERIC) WHERE (((((((((NULL)OR((((0.634517437821493, t0.c2, vt0.c1))<=((t0.c1, x'dee0', vt0.c0))))))AND(CAST(vt0.c0 AS BLOB))))AND(t0.c1)))AND(CAST(vt0.c0 AS REAL)))) ORDER BY CAST((+ (t0.c0)) AS INTEGER) ASC, 0X169ae577;
SELECT SUM(count) FROM (SELECT ((((((((((NULL)OR((((0.634517437821493, t0.c2, vt0.c1))<=((t0.c1, x'dee0', vt0.c0))))))AND(CAST(vt0.c0 AS BLOB))))AND(t0.c1)))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST((((vt0.c0, t0.c2, '843004696')) BETWEEN ((vt0.c0, vt0.c1, t0.c0)) AND ((t0.c1, 0xffffffffe8083736, vt0.c1))) AS NUMERIC) ORDER BY CAST((+ (t0.c0)) AS INTEGER) ASC, 0x169ae577);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((~ (((rt0.c0) BETWEEN (t0.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) BETWEEN (t0.c1) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((~ (((rt0.c0) BETWEEN (t0.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) BETWEEN (t0.c1) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((~ (((rt0.c0) BETWEEN (t0.c1) AND (t0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (LOWER(DISTINCT (t0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (t0.c1 IN ()))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (LOWER(DISTINCT (t0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (t0.c1 IN ()))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (LOWER(DISTINCT (t0.c1 IN ())));
SELECT * FROM vt0, rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))))AND(rt0.c2)))AND(CASE WHEN 0.7139391777227028 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))))AND(rt0.c2)))AND(CASE WHEN 0.7139391777227028 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))))AND(rt0.c2)))AND(CASE WHEN 0.7139391777227028 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))))AND(rt0.c2)))AND(CASE WHEN 0.7139391777227028 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))))AND(rt0.c2)))AND(CASE WHEN 0.7139391777227028 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1) ISNULL), CASE vt0.c1  WHEN rt0.c1 THEN vt0.c1 END, CAST(vt0.c0 AS NUMERIC)))==(((NOT (rt0.c0)), json_valid(rt0.c1), ((rt0.c0)%(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) ISNULL), CASE vt0.c1  WHEN rt0.c1 THEN vt0.c1 END, CAST(vt0.c0 AS NUMERIC)))==(((NOT (rt0.c0)), json_valid(rt0.c1), ((rt0.c0)%(rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1) ISNULL), CASE vt0.c1  WHEN rt0.c1 THEN vt0.c1 END, CAST(vt0.c0 AS NUMERIC)))==(((NOT (rt0.c0)), json_valid(rt0.c1), ((rt0.c0)%(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) ISNULL), CASE vt0.c1  WHEN rt0.c1 THEN vt0.c1 END, CAST(vt0.c0 AS NUMERIC)))==(((NOT (rt0.c0)), json_valid(rt0.c1), ((rt0.c0)%(rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1) ISNULL), CASE vt0.c1  WHEN rt0.c1 THEN vt0.c1 END, CAST(vt0.c0 AS NUMERIC)))==(((NOT (rt0.c0)), json_valid(rt0.c1), ((rt0.c0)%(rt0.c1))))));
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) IS FALSE)) ORDER BY '-19785994' DESC  NULLS FIRST, CASE ((0.5789305742934978) ISNULL)  WHEN LIKELIHOOD(DISTINCT t0.c2, 0.9871347897892212) THEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c1))) WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END THEN t0.c1 COLLATE NOCASE WHEN 'g<m' THEN ((t0.c0) IS FALSE) ELSE CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END END  NULLS LAST, t0.c0;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY '-19785994' DESC  NULLS FIRST, CASE ((0.5789305742934978) ISNULL)  WHEN LIKELIHOOD(DISTINCT t0.c2, 0.9871347897892212) THEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c1))) WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END THEN t0.c1 COLLATE NOCASE WHEN 'g<m' THEN ((t0.c0) IS FALSE) ELSE CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END END  NULLS LAST, t0.c0);
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) IS FALSE)) ORDER BY '-19785994' DESC  NULLS FIRST, CASE ((0.5789305742934978) ISNULL)  WHEN LIKELIHOOD(DISTINCT t0.c2, 0.9871347897892212) THEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c1))) WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END THEN t0.c1 COLLATE NOCASE WHEN 'g<m' THEN ((t0.c0) IS FALSE) ELSE CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END END  NULLS LAST, t0.c0;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY '-19785994' DESC  NULLS FIRST, CASE ((0.5789305742934978) ISNULL)  WHEN LIKELIHOOD(DISTINCT t0.c2, 0.9871347897892212) THEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c1))) WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END THEN t0.c1 COLLATE NOCASE WHEN 'g<m' THEN ((t0.c0) IS FALSE) ELSE CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END END  NULLS LAST, t0.c0);
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) IS FALSE)) ORDER BY '-19785994' DESC  NULLS FIRST, CASE ((0.5789305742934978) ISNULL)  WHEN LIKELIHOOD(DISTINCT t0.c2, 0.9871347897892212) THEN (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c1))) WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END THEN t0.c1 COLLATE NOCASE WHEN 'g<m' THEN ((t0.c0) IS FALSE) ELSE CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END END  NULLS LAST, t0.c0;
SELECT * FROM vt0 INNER JOIN t0 ON ((t0.c1 COLLATE NOCASE)IS(t0.c1)) WHERE (((MAX(vt0.c0, t0.c2, t0.c2, vt0.c0)) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) ORDER BY (((t0.c2, '1662327965', t0.c2)) NOT BETWEEN (((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))), ((t0.c2) BETWEEN (x'') AND (t0.c1)), ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END, vt0.c0, CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((MAX(vt0.c0, t0.c2, t0.c2, vt0.c0)) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((t0.c1 COLLATE NOCASE)IS(t0.c1)) ORDER BY (((t0.c2, '1662327965', t0.c2)) NOT BETWEEN (((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))), ((t0.c2) BETWEEN (x'') AND (t0.c1)), ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END, vt0.c0, CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END))));
SELECT * FROM vt0 INNER JOIN t0 ON ((t0.c1 COLLATE NOCASE)IS(t0.c1)) WHERE (((MAX(vt0.c0, t0.c2, t0.c2, vt0.c0)) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) ORDER BY (((t0.c2, '1662327965', t0.c2)) NOT BETWEEN (((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))), ((t0.c2) BETWEEN (x'') AND (t0.c1)), ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END, vt0.c0, CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((MAX(vt0.c0, t0.c2, t0.c2, vt0.c0)) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((t0.c1 COLLATE NOCASE)IS(t0.c1)) ORDER BY (((t0.c2, '1662327965', t0.c2)) NOT BETWEEN (((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))), ((t0.c2) BETWEEN (x'') AND (t0.c1)), ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END, vt0.c0, CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END))));
SELECT * FROM vt0 INNER JOIN t0 ON ((t0.c1 COLLATE NOCASE)IS(t0.c1)) WHERE (((MAX(vt0.c0, t0.c2, t0.c2, vt0.c0)) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) ORDER BY (((t0.c2, '1662327965', t0.c2)) NOT BETWEEN (((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))), ((t0.c2) BETWEEN (x'') AND (t0.c1)), ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END, vt0.c0, CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END)));
SELECT ALL * FROM t0, vt0 WHERE (((IFNULL(DISTINCT vt0.c1, vt0.c1))<>(((t0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT vt0.c1, vt0.c1))<>(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((IFNULL(DISTINCT vt0.c1, vt0.c1))<>(((t0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT vt0.c1, vt0.c1))<>(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((IFNULL(DISTINCT vt0.c1, vt0.c1))<>(((t0.c2) IS TRUE))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON t0.c2 INNER JOIN vt0 ON '-19785994' WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON t0.c2 INNER JOIN vt0 ON '-19785994');
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON t0.c2 INNER JOIN vt0 ON '-19785994' WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON t0.c2 INNER JOIN vt0 ON '-19785994');
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON t0.c2 INNER JOIN vt0 ON '-19785994' WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0) ORDER BY CAST((((NULL, rt0.c0, -2.04239137E9)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))) AS NUMERIC) ASC  NULLS FIRST, (((rt0.c0)||(rt0.c0)) IN (((vt0.c1)&(x'')), CAST(rt0.c2 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((NULL, rt0.c0, -2.04239137E9)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))) AS NUMERIC) ASC  NULLS FIRST, (((rt0.c0)||(rt0.c0)) IN (((vt0.c1)&(x'')), CAST(rt0.c2 AS REAL)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0) ORDER BY CAST((((NULL, rt0.c0, -2.04239137E9)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))) AS NUMERIC) ASC  NULLS FIRST, (((rt0.c0)||(rt0.c0)) IN (((vt0.c1)&(x'')), CAST(rt0.c2 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((NULL, rt0.c0, -2.04239137E9)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))) AS NUMERIC) ASC  NULLS FIRST, (((rt0.c0)||(rt0.c0)) IN (((vt0.c1)&(x'')), CAST(rt0.c2 AS REAL)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0) ORDER BY CAST((((NULL, rt0.c0, -2.04239137E9)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))) AS NUMERIC) ASC  NULLS FIRST, (((rt0.c0)||(rt0.c0)) IN (((vt0.c1)&(x'')), CAST(rt0.c2 AS REAL)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)<=(vt0.c0 COLLATE RTRIM))) ORDER BY CASE (((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))  WHEN ((vt0.c0)>=(vt0.c0)) THEN (NOT (vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)||(vt0.c0)) WHEN (~ (vt0.c1)) THEN ((vt0.c1) NOTNULL) ELSE (vt0.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)<=(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY CASE (((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))  WHEN ((vt0.c0)>=(vt0.c0)) THEN (NOT (vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)||(vt0.c0)) WHEN (~ (vt0.c1)) THEN ((vt0.c1) NOTNULL) ELSE (vt0.c0 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)<=(vt0.c0 COLLATE RTRIM))) ORDER BY CASE (((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))  WHEN ((vt0.c0)>=(vt0.c0)) THEN (NOT (vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)||(vt0.c0)) WHEN (~ (vt0.c1)) THEN ((vt0.c1) NOTNULL) ELSE (vt0.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)<=(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY CASE (((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))  WHEN ((vt0.c0)>=(vt0.c0)) THEN (NOT (vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)||(vt0.c0)) WHEN (~ (vt0.c1)) THEN ((vt0.c1) NOTNULL) ELSE (vt0.c0 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)<=(vt0.c0 COLLATE RTRIM))) ORDER BY CASE (((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))  WHEN ((vt0.c0)>=(vt0.c0)) THEN (NOT (vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)||(vt0.c0)) WHEN (~ (vt0.c1)) THEN ((vt0.c1) NOTNULL) ELSE (vt0.c0 IN ()) END  NULLS LAST;
SELECT ALL * FROM vt0, t0, rt0 WHERE (t0.c2 COLLATE NOCASE) ORDER BY NULL ASC, ((((t0.c0 COLLATE NOCASE)AND(CAST(rt0.c0 AS TEXT))))OR((((rt0.c1))<=((t0.c2)))));
SELECT SUM(count) FROM (SELECT ((t0.c2 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY NULL ASC, ((((t0.c0 COLLATE NOCASE)AND(CAST(rt0.c0 AS TEXT))))OR((((rt0.c1))<=((t0.c2))))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (t0.c2 COLLATE NOCASE) ORDER BY NULL ASC, ((((t0.c0 COLLATE NOCASE)AND(CAST(rt0.c0 AS TEXT))))OR((((rt0.c1))<=((t0.c2)))));
SELECT SUM(count) FROM (SELECT ((t0.c2 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY NULL ASC, ((((t0.c0 COLLATE NOCASE)AND(CAST(rt0.c0 AS TEXT))))OR((((rt0.c1))<=((t0.c2))))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (t0.c2 COLLATE NOCASE) ORDER BY NULL ASC, ((((t0.c0 COLLATE NOCASE)AND(CAST(rt0.c0 AS TEXT))))OR((((rt0.c1))<=((t0.c2)))));
SELECT ALL * FROM t0, vt0 WHERE ((((((((((vt0.c0)OR(NULL)))AND(t0.c2)))AND(t0.c1)))AND(0.7497208403984497)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)OR(NULL)))AND(t0.c2)))AND(t0.c1)))AND(0.7497208403984497)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((((((vt0.c0)OR(NULL)))AND(t0.c2)))AND(t0.c1)))AND(0.7497208403984497)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)OR(NULL)))AND(t0.c2)))AND(t0.c1)))AND(0.7497208403984497)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((((((vt0.c0)OR(NULL)))AND(t0.c2)))AND(t0.c1)))AND(0.7497208403984497)) IN ()));
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c1)))AND(t0.c2 COLLATE RTRIM)))AND(CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END))) ORDER BY ((((+ (t0.c1))))<=(((((t0.c1))>((t0.c2))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c1)))AND(t0.c2 COLLATE RTRIM)))AND(CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY ((((+ (t0.c1))))<=(((((t0.c1))>((t0.c2))))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c1)))AND(t0.c2 COLLATE RTRIM)))AND(CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END))) ORDER BY ((((+ (t0.c1))))<=(((((t0.c1))>((t0.c2))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c1)))AND(t0.c2 COLLATE RTRIM)))AND(CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY ((((+ (t0.c1))))<=(((((t0.c1))>((t0.c2))))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c1)))AND(t0.c2 COLLATE RTRIM)))AND(CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END))) ORDER BY ((((+ (t0.c1))))<=(((((t0.c1))>((t0.c2))))))  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON x'' FULL OUTER JOIN rt0 ON ((t0.c1)<>((('-524505008')GLOB(rt0.c0)))) WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND ('-1169598468'))) NOTNULL)) ORDER BY ((TOTAL_CHANGES())AND(t0.c1 COLLATE BINARY)) ASC  NULLS FIRST, (((((x'') IS FALSE)))==(('{uj\讛ﺶLT'))) DESC, (- (HEX(DISTINCT t0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND ('-1169598468'))) NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON x'' FULL OUTER JOIN rt0 ON ((t0.c1)<>((('-524505008')GLOB(rt0.c0)))) ORDER BY ((TOTAL_CHANGES())AND(t0.c1 COLLATE BINARY)) ASC  NULLS FIRST, (((((x'') IS FALSE)))==(('{uj\讛ﺶLT'))) DESC, (- (HEX(DISTINCT t0.c2)))  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON x'' FULL OUTER JOIN rt0 ON ((t0.c1)<>((('-524505008')GLOB(rt0.c0)))) WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND ('-1169598468'))) NOTNULL)) ORDER BY ((TOTAL_CHANGES())AND(t0.c1 COLLATE BINARY)) ASC  NULLS FIRST, (((((x'') IS FALSE)))==(('{uj\讛ﺶLT'))) DESC, (- (HEX(DISTINCT t0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND ('-1169598468'))) NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON x'' FULL OUTER JOIN rt0 ON ((t0.c1)<>((('-524505008')GLOB(rt0.c0)))) ORDER BY ((TOTAL_CHANGES())AND(t0.c1 COLLATE BINARY)) ASC  NULLS FIRST, (((((x'') IS FALSE)))==(('{uj\讛ﺶLT'))) DESC, (- (HEX(DISTINCT t0.c2)))  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON x'' FULL OUTER JOIN rt0 ON ((t0.c1)<>((('-524505008')GLOB(rt0.c0)))) WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND ('-1169598468'))) NOTNULL)) ORDER BY ((TOTAL_CHANGES())AND(t0.c1 COLLATE BINARY)) ASC  NULLS FIRST, (((((x'') IS FALSE)))==(('{uj\讛ﺶLT'))) DESC, (- (HEX(DISTINCT t0.c2)))  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (TIME((rt0.c2 IN ()), ((vt0.c0)AND(rt0.c2)), ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)), NULL, ((vt0.c0)=(vt0.c0)))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN ((((NULL))>=((rt0.c2)))) AND (CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((TIME((rt0.c2 IN ()), ((vt0.c0)AND(rt0.c2)), ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)), NULL, ((vt0.c0)==(vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN ((((NULL))>=((rt0.c2)))) AND (CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0, rt0 WHERE (TIME((rt0.c2 IN ()), ((vt0.c0)AND(rt0.c2)), ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)), NULL, ((vt0.c0)=(vt0.c0)))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN ((((NULL))>=((rt0.c2)))) AND (CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((TIME((rt0.c2 IN ()), ((vt0.c0)AND(rt0.c2)), ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)), NULL, ((vt0.c0)==(vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN ((((NULL))>=((rt0.c2)))) AND (CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0, rt0 WHERE (TIME((rt0.c2 IN ()), ((vt0.c0)AND(rt0.c2)), ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)), NULL, ((vt0.c0)=(vt0.c0)))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN ((((NULL))>=((rt0.c2)))) AND (CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 END));
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((((rt0.c1)-(rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((((rt0.c1)-(rt0.c2))))) DESC);
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((((rt0.c1)-(rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((((rt0.c1)-(rt0.c2))))) DESC);
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((((rt0.c1)-(rt0.c2))))) DESC;
SELECT ALL * FROM t0 WHERE ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY ((((t0.c2) NOTNULL))IS NOT('-1972735468'));
SELECT SUM(count) FROM (SELECT (((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) NOTNULL))IS NOT('-1972735468')));
SELECT ALL * FROM t0 WHERE ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY ((((t0.c2) NOTNULL))IS NOT('-1972735468'));
SELECT SUM(count) FROM (SELECT (((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) NOTNULL))IS NOT('-1972735468')));
SELECT ALL * FROM t0 WHERE ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY ((((t0.c2) NOTNULL))IS NOT('-1972735468'));
SELECT * FROM t0 WHERE (((t0.c0)IS NOT((t0.c0 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS NOT((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)IS NOT((t0.c0 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS NOT((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)IS NOT((t0.c0 IN (t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c0, t0.c1)) BETWEEN ((t0.c1 COLLATE NOCASE, (t0.c2 IN ()), (t0.c1 IN ()))) AND (((t0.c0 IN ()), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)), ((t0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c0, t0.c1)) BETWEEN ((t0.c1 COLLATE NOCASE, (t0.c2 IN ()), (t0.c1 IN ()))) AND (((t0.c0 IN ()), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)), ((t0.c0) NOT NULL))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c0, t0.c1)) BETWEEN ((t0.c1 COLLATE NOCASE, (t0.c2 IN ()), (t0.c1 IN ()))) AND (((t0.c0 IN ()), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)), ((t0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c0, t0.c1)) BETWEEN ((t0.c1 COLLATE NOCASE, (t0.c2 IN ()), (t0.c1 IN ()))) AND (((t0.c0 IN ()), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)), ((t0.c0) NOT NULL))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c0, t0.c1)) BETWEEN ((t0.c1 COLLATE NOCASE, (t0.c2 IN ()), (t0.c1 IN ()))) AND (((t0.c0 IN ()), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)), ((t0.c0) NOT NULL)))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON '2104419702' WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1))))) ORDER BY (- ((+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON '2104419702' ORDER BY (- ((+ (rt0.c1)))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON '2104419702' WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1))))) ORDER BY (- ((+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON '2104419702' ORDER BY (- ((+ (rt0.c1)))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON '2104419702' WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1))))) ORDER BY (- ((+ (rt0.c1))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON CAST((((vt0.c0, vt0.c1, t0.c2)) BETWEEN ((vt0.c1, t0.c1, vt0.c1)) AND ((0.33725800244779325, 'Uz', x''))) AS NUMERIC) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST((((vt0.c0, vt0.c1, t0.c2)) BETWEEN ((vt0.c1, t0.c1, vt0.c1)) AND ((0.33725800244779325, 'Uz', x''))) AS NUMERIC));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON CAST((((vt0.c0, vt0.c1, t0.c2)) BETWEEN ((vt0.c1, t0.c1, vt0.c1)) AND ((0.33725800244779325, 'Uz', x''))) AS NUMERIC) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST((((vt0.c0, vt0.c1, t0.c2)) BETWEEN ((vt0.c1, t0.c1, vt0.c1)) AND ((0.33725800244779325, 'Uz', x''))) AS NUMERIC));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON CAST((((vt0.c0, vt0.c1, t0.c2)) BETWEEN ((vt0.c1, t0.c1, vt0.c1)) AND ((0.33725800244779325, 'Uz', x''))) AS NUMERIC) WHERE (t0.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CAST(t0.c0 AS NUMERIC)  WHEN ((t0.c2) ISNULL) THEN 0.7324893050279736 ELSE ((t0.c1) ISNULL) END) ORDER BY ((t0.c1)LIKE(t0.c0)) COLLATE RTRIM, (((((((NULL, t0.c0, t0.c1)) BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c2, t0.c1, t0.c1))))AND(CASE WHEN t0.c2 THEN t0.c1 END)))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))) ASC, t0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c0 AS NUMERIC)  WHEN ((t0.c2) ISNULL) THEN 0.7324893050279736 ELSE ((t0.c1) ISNULL) END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1)LIKE(t0.c0)) COLLATE RTRIM, (((((((NULL, t0.c0, t0.c1)) BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c2, t0.c1, t0.c1))))AND(CASE WHEN t0.c2 THEN t0.c1 END)))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))) ASC, t0.c1 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CAST(t0.c0 AS NUMERIC)  WHEN ((t0.c2) ISNULL) THEN 0.7324893050279736 ELSE ((t0.c1) ISNULL) END) ORDER BY ((t0.c1)LIKE(t0.c0)) COLLATE RTRIM, (((((((NULL, t0.c0, t0.c1)) BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c2, t0.c1, t0.c1))))AND(CASE WHEN t0.c2 THEN t0.c1 END)))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))) ASC, t0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c0 AS NUMERIC)  WHEN ((t0.c2) ISNULL) THEN 0.7324893050279736 ELSE ((t0.c1) ISNULL) END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1)LIKE(t0.c0)) COLLATE RTRIM, (((((((NULL, t0.c0, t0.c1)) BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c2, t0.c1, t0.c1))))AND(CASE WHEN t0.c2 THEN t0.c1 END)))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))) ASC, t0.c1 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CAST(t0.c0 AS NUMERIC)  WHEN ((t0.c2) ISNULL) THEN 0.7324893050279736 ELSE ((t0.c1) ISNULL) END) ORDER BY ((t0.c1)LIKE(t0.c0)) COLLATE RTRIM, (((((((NULL, t0.c0, t0.c1)) BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c2, t0.c1, t0.c1))))AND(CASE WHEN t0.c2 THEN t0.c1 END)))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))) ASC, t0.c1 DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS TEXT)) ORDER BY ((((0.5209035201811483) NOTNULL)) BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((0.5209035201811483) NOTNULL)) BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS TEXT)) ORDER BY ((((0.5209035201811483) NOTNULL)) BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((0.5209035201811483) NOTNULL)) BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS TEXT)) ORDER BY ((((0.5209035201811483) NOTNULL)) BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS LAST;
