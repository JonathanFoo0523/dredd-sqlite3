-- Time: 2024/06/09 20:20:44
-- Database: database86
-- Database version: 3.40.0
-- seed value: 2404518286
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1 UNINDEXED, tokenize=porter); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES (x'', x'', '-1726380247'); -- 1ms;
REINDEX; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA automatic_index; -- 0ms;
UPDATE OR REPLACE rt0 SET (c2, c0)=(NULL, 0.0823358678549595); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('\n>L55*') WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c2)>(rt0.c2)), ((rt0.c2) NOT BETWEEN (x'') AND (NULL))))>((((rt0.c0) NOTNULL), ((rt0.c2) ISNULL), ((x'') NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (NULL, NULL); -- 0ms;
UPDATE rt0 SET (c1)=('209361425'); -- 0ms;
UPDATE OR REPLACE vt1 SET c1=x'd565' WHERE (((vt1.c0 IN ('x蜩')))>((vt1.c0 IN ()))); -- 0ms;
ANALYZE; -- 0ms;
UPDATE vt1 SET c1=x'4ddc'; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.0823358678549595) WHERE TYPEOF(rt0.c2 COLLATE RTRIM); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL) WHERE (((+ (rt0.c1))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (rt0.c1 COLLATE BINARY)); -- 0ms;
INSERT OR REPLACE INTO vt1(c1, c0) VALUES (209361425, NULL), (209361425, x'1308'), (NULL, ''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1986972613); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE rt0 SET c0=x''; -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c0) VALUES (0X3332c4fb, 458997530), (858965243, '%'), (0.18496943628453666, 0.4899946701245331); -- 4ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c1) VALUES (NULL, 0.8359688812446326); -- 1ms;
UPDATE OR IGNORE rt0 SET (c0, c0, c1)=(458997530, 'fhV', ''); -- 0ms;
PRAGMA integrity_check; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('n', x''); -- 0ms;
DROP TABLE vt1; -- 1ms;
PRAGMA temp.legacy_file_format; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c0, c1) VALUES (x'', NULL, '*a\r%%MJ^I'); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c1, c0) VALUES ('', NULL, '216088859'), ('-1470401884', 0.8299744966664975, NULL), (NULL, NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (')#xMZjd#', '92174135'); -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL), (0X1b5bbf1a), (1663865400); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=209361425'); -- 0ms;
UPDATE OR ABORT rt0 SET (c1)=('fhV') WHERE CAST(((rt0.c1)IS NOT(rt0.c0)) AS INTEGER); -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.6584347207374032); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='FALSE' WHERE -424861616; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
PRAGMA main.defer_foreign_keys = false; -- 0ms;
PRAGMA locking_mode; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
PRAGMA temp.foreign_keys = true; -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES (216088859, '', '0.8359688812446326'), (x'3343', -328757057, x'3ea1'), ('0.6584347207374032', NULL, ''); -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, x'598d', x''), (x'', NULL, 0Xc7a9a11), (-1991484167, NULL, x'd8e942fb'); -- 1ms;
UPDATE OR ROLLBACK rt0 SET c0=0.1029206392195412 WHERE (rt0.c2 COLLATE NOCASE IN ()); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=-3.28757057E8; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c1) VALUES (0.7731045561901372, x''), ('-1470401884', NULL), ('\H', 0X3332c4fb); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (0.4043105918136257); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA temp.threads = 8883493341528684544; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL) WHERE CASE rt0.c0 COLLATE RTRIM  WHEN rt0.c1 COLLATE NOCASE THEN STRFTIME(rt0.c2, rt0.c0, rt0.c0) WHEN TRIM(rt0.c1, rt0.c0) THEN ((rt0.c0)!=(rt0.c2)) WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN (- (0.16511600539666205)) WHEN ((rt0.c2)*(rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END WHEN (- (rt0.c0)) THEN UNLIKELY(rt0.c0) ELSE LIKELIHOOD('1254687612', 0.11934452351785818) END; -- 0ms;
UPDATE rt0 SET c2=x''; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES ('ワ'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c2, c2)=(0.5803712081116917, 0.928613538345644, '-478154516') WHERE CAST(((rt0.c1)<(rt0.c0)) AS INTEGER); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c1, c2) VALUES (NULL, 0xffffffff894c5cf9); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (NULL, x''); -- 0ms;
REINDEX BINARY; -- 0ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
UPDATE rt0 SET (c1, c2, c1)=(0xffffffffc05e6833, x'bd27', NULL); -- 1ms;
INSERT OR FAIL INTO rt0(c1) VALUES ('-478154516'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1, c0) VALUES (NULL, 458997530, x'd4c1'), ('', 1254687612, x''), (x'0625', 0.0823358678549595, 'n(ez'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('1648139837', 0.6755455742123149, 0.8084425445207566); -- 6ms;
UPDATE OR FAIL rt0 SET c1=x'22a8'; -- 1ms;
PRAGMA main.default_cache_size; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL (((- (rt0.c0)))LIKE((rt0.c0 IN ()))) FROM rt0 WHERE ((((0.14751179666348402 IN (0.20645404507524234))) IS TRUE)) ORDER BY (((rt0.c2 IN ()))IS(COALESCE(rt0.c1, rt0.c0, rt0.c0, rt0.c0))) DESC  NULLS LAST, (NOT (((rt0.c2) NOTNULL)))  NULLS FIRST; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES ('92174135', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0) VALUES (x'46ae', NULL, x'a741'); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (NULL); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c0='413039075'; -- 1ms;
UPDATE rt0 SET (c2)=(NULL) WHERE ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))) NOTNULL); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.cell_size_check; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (NULL, '1644265697'); -- 0ms;
PRAGMA incremental_vacuum(-2134341870); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (1014238996, NULL), (x'', '4'), (0.24212488787249753, 0.4059414195906601); -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES (0.16511600539666205); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES ('ワ', 0xffffffffe37ff0ec, 0Xffffffffcb0a5c12), (NULL, '-761241116', NULL), (NULL, '#x^%{I2', 0.6607211818086721); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM v0, rt0 WHERE (((CAST(NULL AS NUMERIC)) NOT BETWEEN ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) AND (NULLIF(v0.c0, rt0.c0)))) ORDER BY CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS NUMERIC)) NOT BETWEEN ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) AND (NULLIF(v0.c0, rt0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END AS TEXT) ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((CAST(NULL AS NUMERIC)) NOT BETWEEN ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) AND (NULLIF(v0.c0, rt0.c0)))) ORDER BY CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS NUMERIC)) NOT BETWEEN ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) AND (NULLIF(v0.c0, rt0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END AS TEXT) ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((CAST(NULL AS NUMERIC)) NOT BETWEEN ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) AND (NULLIF(v0.c0, rt0.c0)))) ORDER BY CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END AS TEXT) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c1 IN ()))));
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((((rt0.c0) ISNULL) IN (((rt0.c0)+(v0.c0))))) ORDER BY (CAST(rt0.c1 AS NUMERIC) IN ())  NULLS FIRST, TIME(INSTR(rt0.c0, rt0.c0), ((rt0.c2)AND('413039075')), (rt0.c2 IN (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c2 END, ((v0.c0)<(v0.c0)), (((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c1, '<*!Afl]k~'))), CHANGES()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) ISNULL) IN (((rt0.c0)+(v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY (CAST(rt0.c1 AS NUMERIC) IN ())  NULLS FIRST, TIME(INSTR(rt0.c0, rt0.c0), ((rt0.c2)AND('413039075')), (rt0.c2 IN (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c2 END, ((v0.c0)<(v0.c0)), (((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c1, '<*!Afl]k~'))), CHANGES()) ASC  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((((rt0.c0) ISNULL) IN (((rt0.c0)+(v0.c0))))) ORDER BY (CAST(rt0.c1 AS NUMERIC) IN ())  NULLS FIRST, TIME(INSTR(rt0.c0, rt0.c0), ((rt0.c2)AND('413039075')), (rt0.c2 IN (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c2 END, ((v0.c0)<(v0.c0)), (((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c1, '<*!Afl]k~'))), CHANGES()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) ISNULL) IN (((rt0.c0)+(v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY (CAST(rt0.c1 AS NUMERIC) IN ())  NULLS FIRST, TIME(INSTR(rt0.c0, rt0.c0), ((rt0.c2)AND('413039075')), (rt0.c2 IN (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c2 END, ((v0.c0)<(v0.c0)), (((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c1, '<*!Afl]k~'))), CHANGES()) ASC  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((((rt0.c0) ISNULL) IN (((rt0.c0)+(v0.c0))))) ORDER BY (CAST(rt0.c1 AS NUMERIC) IN ())  NULLS FIRST, TIME(INSTR(rt0.c0, rt0.c0), ((rt0.c2)AND('413039075')), (rt0.c2 IN (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c2 END, ((v0.c0)<(v0.c0)), (((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c1, '<*!Afl]k~'))), CHANGES()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.2866586400841791) BETWEEN (v0.c0) AND (v0.c0)))IS NOT(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.2866586400841791) BETWEEN (v0.c0) AND (v0.c0)))IS NOT(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.2866586400841791) BETWEEN (v0.c0) AND (v0.c0)))IS NOT(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.2866586400841791) BETWEEN (v0.c0) AND (v0.c0)))IS NOT(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.2866586400841791) BETWEEN (v0.c0) AND (v0.c0)))IS NOT(v0.c0)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN v0.c0 THEN rt0.c1 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN rt0.c1 END) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN v0.c0 THEN rt0.c1 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN rt0.c1 END) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN v0.c0 THEN rt0.c1 END) NOT NULL));
SELECT * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0)/(rt0.c1))  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (rt0.c1 IN ()) WHEN (NOT (rt0.c0)) THEN ((((rt0.c0)AND(1.6638654E9)))OR(rt0.c2)) ELSE ((rt0.c0)&(rt0.c0)) END) ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (CAST(-984550242 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)/(rt0.c1))  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (rt0.c1 IN ()) WHEN (NOT (rt0.c0)) THEN ((((rt0.c0)AND(1.6638654E9)))OR(rt0.c2)) ELSE ((rt0.c0)&(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (CAST(-984550242 AS BLOB)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0)/(rt0.c1))  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (rt0.c1 IN ()) WHEN (NOT (rt0.c0)) THEN ((((rt0.c0)AND(1.6638654E9)))OR(rt0.c2)) ELSE ((rt0.c0)&(rt0.c0)) END) ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (CAST(-984550242 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)/(rt0.c1))  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (rt0.c1 IN ()) WHEN (NOT (rt0.c0)) THEN ((((rt0.c0)AND(1.6638654E9)))OR(rt0.c2)) ELSE ((rt0.c0)&(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (CAST(-984550242 AS BLOB)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0)/(rt0.c1))  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (rt0.c1 IN ()) WHEN (NOT (rt0.c0)) THEN ((((rt0.c0)AND(1.6638654E9)))OR(rt0.c2)) ELSE ((rt0.c0)&(rt0.c0)) END) ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (CAST(-984550242 AS BLOB)))  NULLS LAST;
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (CASE ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) NOTNULL) ELSE ((((v0.c0)AND(v0.c0)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) NOTNULL) ELSE ((((v0.c0)AND(v0.c0)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (CASE ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) NOTNULL) ELSE ((((v0.c0)AND(v0.c0)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) NOTNULL) ELSE ((((v0.c0)AND(v0.c0)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (CASE ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) NOTNULL) ELSE ((((v0.c0)AND(v0.c0)))OR(rt0.c0)) END);
SELECT * FROM rt0, v0 WHERE (CASE WHEN ((rt0.c0)*(v0.c0)) THEN ((rt0.c1)&(rt0.c2)) END) ORDER BY ((((x'')AND(rt0.c0)))IS(CAST(v0.c0 AS BLOB))) ASC, (~ (CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST, CASE CAST(rt0.c2 AS TEXT)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN ((((rt0.c1)OR(v0.c0)))AND(rt0.c1)) WHEN CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END THEN ((v0.c0) IS FALSE) WHEN ((v0.c0)=(rt0.c1)) THEN NULL ELSE ((rt0.c0)AND(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)*(v0.c0)) THEN ((rt0.c1)&(rt0.c2)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((x'')AND(rt0.c0)))IS(CAST(v0.c0 AS BLOB))) ASC, (~ (CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST, CASE CAST(rt0.c2 AS TEXT)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN ((((rt0.c1)OR(v0.c0)))AND(rt0.c1)) WHEN CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END THEN ((v0.c0) IS FALSE) WHEN ((v0.c0)==(rt0.c1)) THEN NULL ELSE ((rt0.c0)AND(rt0.c1)) END);
SELECT * FROM rt0, v0 WHERE (CASE WHEN ((rt0.c0)*(v0.c0)) THEN ((rt0.c1)&(rt0.c2)) END) ORDER BY ((((x'')AND(rt0.c0)))IS(CAST(v0.c0 AS BLOB))) ASC, (~ (CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST, CASE CAST(rt0.c2 AS TEXT)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN ((((rt0.c1)OR(v0.c0)))AND(rt0.c1)) WHEN CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END THEN ((v0.c0) IS FALSE) WHEN ((v0.c0)=(rt0.c1)) THEN NULL ELSE ((rt0.c0)AND(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)*(v0.c0)) THEN ((rt0.c1)&(rt0.c2)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((x'')AND(rt0.c0)))IS(CAST(v0.c0 AS BLOB))) ASC, (~ (CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST, CASE CAST(rt0.c2 AS TEXT)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN ((((rt0.c1)OR(v0.c0)))AND(rt0.c1)) WHEN CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END THEN ((v0.c0) IS FALSE) WHEN ((v0.c0)==(rt0.c1)) THEN NULL ELSE ((rt0.c0)AND(rt0.c1)) END);
SELECT * FROM rt0, v0 WHERE (CASE WHEN ((rt0.c0)*(v0.c0)) THEN ((rt0.c1)&(rt0.c2)) END) ORDER BY ((((x'')AND(rt0.c0)))IS(CAST(v0.c0 AS BLOB))) ASC, (~ (CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST, CASE CAST(rt0.c2 AS TEXT)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN ((((rt0.c1)OR(v0.c0)))AND(rt0.c1)) WHEN CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END THEN ((v0.c0) IS FALSE) WHEN ((v0.c0)=(rt0.c1)) THEN NULL ELSE ((rt0.c0)AND(rt0.c1)) END;
SELECT ALL * FROM v0 WHERE ((((((v0.c0)IS NOT(v0.c0))))>((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY (- (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)IS NOT(v0.c0))))>((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (- (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)IS NOT(v0.c0))))>((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY (- (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)IS NOT(v0.c0))))>((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (- (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)IS NOT(v0.c0))))>((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY (- (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC;
SELECT * FROM rt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CHANGES());
SELECT COUNT(*) FROM rt0 WHERE ((((((NOT (rt0.c0)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c0)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((NOT (rt0.c0)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c0)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((NOT (rt0.c0)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((((v0.c0 IN ()))AND(rt0.c0 COLLATE NOCASE)))OR(2.09361425E8)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))AND(rt0.c0 COLLATE NOCASE)))OR(2.09361425E8))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((((v0.c0 IN ()))AND(rt0.c0 COLLATE NOCASE)))OR(2.09361425E8)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))AND(rt0.c0 COLLATE NOCASE)))OR(2.09361425E8))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((((v0.c0 IN ()))AND(rt0.c0 COLLATE NOCASE)))OR(2.09361425E8)));
SELECT ALL * FROM v0 WHERE (json(((v0.c0)AND(v0.c0)))) ORDER BY ((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((((((((0.8624219584385094)OR(v0.c0)))OR(v0.c0)))OR(NULL)))AND(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((json(((v0.c0)AND(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((((((((0.8624219584385094)OR(v0.c0)))OR(v0.c0)))OR(NULL)))AND(v0.c0)))) ASC);
SELECT ALL * FROM v0 WHERE (json(((v0.c0)AND(v0.c0)))) ORDER BY ((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((((((((0.8624219584385094)OR(v0.c0)))OR(v0.c0)))OR(NULL)))AND(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((json(((v0.c0)AND(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((((((((0.8624219584385094)OR(v0.c0)))OR(v0.c0)))OR(NULL)))AND(v0.c0)))) ASC);
SELECT ALL * FROM v0 WHERE (json(((v0.c0)AND(v0.c0)))) ORDER BY ((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((((((((0.8624219584385094)OR(v0.c0)))OR(v0.c0)))OR(NULL)))AND(v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((('gzoE' COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('gzoE' COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((('gzoE' COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('gzoE' COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((('gzoE' COLLATE BINARY) NOT NULL));
SELECT * FROM rt0 WHERE (((rt0.c1)IS(rt0.c0 COLLATE NOCASE))) ORDER BY LIKELY(DISTINCT rt0.c0) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(DISTINCT rt0.c0) COLLATE RTRIM DESC);
SELECT * FROM rt0 WHERE (((rt0.c1)IS(rt0.c0 COLLATE NOCASE))) ORDER BY LIKELY(DISTINCT rt0.c0) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(DISTINCT rt0.c0) COLLATE RTRIM DESC);
SELECT * FROM rt0 WHERE (((rt0.c1)IS(rt0.c0 COLLATE NOCASE))) ORDER BY LIKELY(DISTINCT rt0.c0) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((NOT (rt0.c1)))OR(((((rt0.c2)OR(v0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1)))OR(((((rt0.c2)OR(v0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((NOT (rt0.c1)))OR(((((rt0.c2)OR(v0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1)))OR(((((rt0.c2)OR(v0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((NOT (rt0.c1)))OR(((((rt0.c2)OR(v0.c0)))OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))OR(json_valid(rt0.c2))) WHERE (((CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))OR(json_valid(rt0.c2))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))OR(json_valid(rt0.c2))) WHERE (((CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))OR(json_valid(rt0.c2))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))OR(json_valid(rt0.c2))) WHERE (((CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 END) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE (((LOWER(DISTINCT 0.9137058838305844))>>(LOWER(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT 0.9137058838305844))>>(LOWER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((LOWER(DISTINCT 0.9137058838305844))>>(LOWER(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT 0.9137058838305844))>>(LOWER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((LOWER(DISTINCT 0.9137058838305844))>>(LOWER(DISTINCT rt0.c0))));
SELECT * FROM rt0 WHERE (CASE rt0.c0  WHEN (((rt0.c1))<((rt0.c2))) THEN RTRIM(rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN (((rt0.c1))<((rt0.c2))) THEN RTRIM(rt0.c2) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c0  WHEN (((rt0.c1))<((rt0.c2))) THEN RTRIM(rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN (((rt0.c1))<((rt0.c2))) THEN RTRIM(rt0.c2) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c0  WHEN (((rt0.c1))<((rt0.c2))) THEN RTRIM(rt0.c2) END);
SELECT * FROM v0 WHERE (((v0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0) BETWEEN (v0.c0) AND ('209361425')) IN ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (v0.c0) AND ('209361425')) IN ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0) BETWEEN (v0.c0) AND ('209361425')) IN ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (v0.c0) AND ('209361425')) IN ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0) BETWEEN (v0.c0) AND ('209361425')) IN ((rt0.c2 IN ()))));
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN (('', ((v0.c0)<<(v0.c0)), NULL)) AND ((json_valid(v0.c0), ((v0.c0) NOT NULL), ((v0.c0)<(v0.c0)))))) ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((((v0.c0)OR(v0.c0)))AND(v0.c0))))) DESC  NULLS LAST, ((v0.c0 COLLATE BINARY) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) BETWEEN (('', ((v0.c0)<<(v0.c0)), NULL)) AND ((json_valid(v0.c0), ((v0.c0) NOT NULL), ((v0.c0)<(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((((v0.c0)OR(v0.c0)))AND(v0.c0))))) DESC  NULLS LAST, ((v0.c0 COLLATE BINARY) ISNULL)  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN (('', ((v0.c0)<<(v0.c0)), NULL)) AND ((json_valid(v0.c0), ((v0.c0) NOT NULL), ((v0.c0)<(v0.c0)))))) ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((((v0.c0)OR(v0.c0)))AND(v0.c0))))) DESC  NULLS LAST, ((v0.c0 COLLATE BINARY) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) BETWEEN (('', ((v0.c0)<<(v0.c0)), NULL)) AND ((json_valid(v0.c0), ((v0.c0) NOT NULL), ((v0.c0)<(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((((v0.c0)OR(v0.c0)))AND(v0.c0))))) DESC  NULLS LAST, ((v0.c0 COLLATE BINARY) ISNULL)  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN (('', ((v0.c0)<<(v0.c0)), NULL)) AND ((json_valid(v0.c0), ((v0.c0) NOT NULL), ((v0.c0)<(v0.c0)))))) ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((((v0.c0)OR(v0.c0)))AND(v0.c0))))) DESC  NULLS LAST, ((v0.c0 COLLATE BINARY) ISNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((v0.c0)+(v0.c0)) THEN (((rt0.c0))>((v0.c0))) ELSE CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END END) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)+(v0.c0)) THEN (((rt0.c0))>((v0.c0))) ELSE CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END END) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((v0.c0)+(v0.c0)) THEN (((rt0.c0))>((v0.c0))) ELSE CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END END) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)+(v0.c0)) THEN (((rt0.c0))>((v0.c0))) ELSE CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END END) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((v0.c0)+(v0.c0)) THEN (((rt0.c0))>((v0.c0))) ELSE CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END END) ORDER BY rt0.c2;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c0) BETWEEN ('') AND (rt0.c2))) BETWEEN ((((v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, x'')) AND ((rt0.c1, rt0.c2, v0.c0)))) AND (rt0.c1)) WHERE (((rt0.c1)|(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)|(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c0) BETWEEN ('') AND (rt0.c2))) BETWEEN ((((v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, x'')) AND ((rt0.c1, rt0.c2, v0.c0)))) AND (rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c0) BETWEEN ('') AND (rt0.c2))) BETWEEN ((((v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, x'')) AND ((rt0.c1, rt0.c2, v0.c0)))) AND (rt0.c1)) WHERE (((rt0.c1)|(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)|(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c0) BETWEEN ('') AND (rt0.c2))) BETWEEN ((((v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, x'')) AND ((rt0.c1, rt0.c2, v0.c0)))) AND (rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c0) BETWEEN ('') AND (rt0.c2))) BETWEEN ((((v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, x'')) AND ((rt0.c1, rt0.c2, v0.c0)))) AND (rt0.c1)) WHERE (((rt0.c1)|(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ ((('2F3,') NOT BETWEEN (0.48019245379316644) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((('2F3,') NOT BETWEEN (0.48019245379316644) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ ((('2F3,') NOT BETWEEN (0.48019245379316644) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((('2F3,') NOT BETWEEN (0.48019245379316644) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ ((('2F3,') NOT BETWEEN (0.48019245379316644) AND (rt0.c1)))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((+ (0.030954867477315573)));
SELECT SUM(count) FROM (SELECT (((+ (0.030954867477315573))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((+ (0.030954867477315573)));
SELECT SUM(count) FROM (SELECT (((+ (0.030954867477315573))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((+ (0.030954867477315573)));
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0) IS FALSE)  WHEN RTRIM(v0.c0) THEN ((v0.c0)<=(v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) IS FALSE)  WHEN RTRIM(v0.c0) THEN ((v0.c0)<=(v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0) IS FALSE)  WHEN RTRIM(v0.c0) THEN ((v0.c0)<=(v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) IS FALSE)  WHEN RTRIM(v0.c0) THEN ((v0.c0)<=(v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0) IS FALSE)  WHEN RTRIM(v0.c0) THEN ((v0.c0)<=(v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT * FROM v0 WHERE (((CAST(0.7629550237413696 AS BLOB))IS NOT(((v0.c0)<<(NULL))))) ORDER BY CAST(v0.c0 COLLATE NOCASE AS REAL);
SELECT SUM(count) FROM (SELECT ((((CAST(0.7629550237413696 AS BLOB))IS NOT(((v0.c0)<<(NULL))))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 COLLATE NOCASE AS REAL));
SELECT * FROM v0 WHERE (((CAST(0.7629550237413696 AS BLOB))IS NOT(((v0.c0)<<(NULL))))) ORDER BY CAST(v0.c0 COLLATE NOCASE AS REAL);
SELECT SUM(count) FROM (SELECT ((((CAST(0.7629550237413696 AS BLOB))IS NOT(((v0.c0)<<(NULL))))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 COLLATE NOCASE AS REAL));
SELECT * FROM v0 WHERE (((CAST(0.7629550237413696 AS BLOB))IS NOT(((v0.c0)<<(NULL))))) ORDER BY CAST(v0.c0 COLLATE NOCASE AS REAL);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)IS(v0.c0)))AND(v0.c0 COLLATE BINARY)))OR((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))))) ORDER BY 0.8052174451050756 ASC, (((((v0.c0)&(v0.c0)), CAST(v0.c0 AS NUMERIC), (~ (v0.c0))))<>((x'', (- (v0.c0)), 0.9137058838305844))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)IS(v0.c0)))AND(v0.c0 COLLATE BINARY)))OR((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY 0.8052174451050756 ASC, (((((v0.c0)&(v0.c0)), CAST(v0.c0 AS NUMERIC), (~ (v0.c0))))<>((x'', (- (v0.c0)), 0.9137058838305844))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)IS(v0.c0)))AND(v0.c0 COLLATE BINARY)))OR((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))))) ORDER BY 0.8052174451050756 ASC, (((((v0.c0)&(v0.c0)), CAST(v0.c0 AS NUMERIC), (~ (v0.c0))))<>((x'', (- (v0.c0)), 0.9137058838305844))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)IS(v0.c0)))AND(v0.c0 COLLATE BINARY)))OR((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY 0.8052174451050756 ASC, (((((v0.c0)&(v0.c0)), CAST(v0.c0 AS NUMERIC), (~ (v0.c0))))<>((x'', (- (v0.c0)), 0.9137058838305844))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)IS(v0.c0)))AND(v0.c0 COLLATE BINARY)))OR((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))))) ORDER BY 0.8052174451050756 ASC, (((((v0.c0)&(v0.c0)), CAST(v0.c0 AS NUMERIC), (~ (v0.c0))))<>((x'', (- (v0.c0)), 0.9137058838305844))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)==(v0.c0))) NOTNULL) WHERE ((x'1c34' COLLATE NOCASE IN (CAST(rt0.c0 AS TEXT)))) ORDER BY ((LIKELY(DISTINCT rt0.c2))IS NOT(CASE rt0.c2  WHEN x'' THEN rt0.c2 ELSE rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'1c34' COLLATE NOCASE IN (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)==(v0.c0))) NOTNULL) ORDER BY ((LIKELY(DISTINCT rt0.c2))IS NOT(CASE rt0.c2  WHEN x'' THEN rt0.c2 ELSE rt0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)==(v0.c0))) NOTNULL) WHERE ((x'1c34' COLLATE NOCASE IN (CAST(rt0.c0 AS TEXT)))) ORDER BY ((LIKELY(DISTINCT rt0.c2))IS NOT(CASE rt0.c2  WHEN x'' THEN rt0.c2 ELSE rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'1c34' COLLATE NOCASE IN (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)==(v0.c0))) NOTNULL) ORDER BY ((LIKELY(DISTINCT rt0.c2))IS NOT(CASE rt0.c2  WHEN x'' THEN rt0.c2 ELSE rt0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)==(v0.c0))) NOTNULL) WHERE ((x'1c34' COLLATE NOCASE IN (CAST(rt0.c0 AS TEXT)))) ORDER BY ((LIKELY(DISTINCT rt0.c2))IS NOT(CASE rt0.c2  WHEN x'' THEN rt0.c2 ELSE rt0.c1 END)) ASC;
SELECT * FROM v0, rt0 WHERE (CASE WHEN (((v0.c0, rt0.c2, rt0.c2))==((rt0.c0, rt0.c1, v0.c0))) THEN (rt0.c1 IN ()) ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0, rt0.c2, rt0.c2))==((rt0.c0, rt0.c1, v0.c0))) THEN (rt0.c1 IN ()) ELSE v0.c0 END) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE WHEN (((v0.c0, rt0.c2, rt0.c2))==((rt0.c0, rt0.c1, v0.c0))) THEN (rt0.c1 IN ()) ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0, rt0.c2, rt0.c2))==((rt0.c0, rt0.c1, v0.c0))) THEN (rt0.c1 IN ()) ELSE v0.c0 END) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE WHEN (((v0.c0, rt0.c2, rt0.c2))==((rt0.c0, rt0.c1, v0.c0))) THEN (rt0.c1 IN ()) ELSE v0.c0 END);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((NOT (v0.c0)))OR((NOT (rt0.c2)))))AND(CASE WHEN v0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((NOT (v0.c0)))OR((NOT (rt0.c2)))))AND(CASE WHEN v0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((NOT (v0.c0)))OR((NOT (rt0.c2)))))AND(CASE WHEN v0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((NOT (v0.c0)))OR((NOT (rt0.c2)))))AND(CASE WHEN v0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((NOT (v0.c0)))OR((NOT (rt0.c2)))))AND(CASE WHEN v0.c0 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((v0.c0) ISNULL) COLLATE NOCASE) ORDER BY (((rt0.c1 IN ())) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c1 IN ())) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((v0.c0) ISNULL) COLLATE NOCASE) ORDER BY (((rt0.c1 IN ())) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c1 IN ())) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((v0.c0) ISNULL) COLLATE NOCASE) ORDER BY (((rt0.c1 IN ())) IS TRUE)  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE ((((rt0.c2)) BETWEEN ((((v0.c0) IS FALSE))) AND (((- (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((v0.c0) IS FALSE))) AND (((- (rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c2)) BETWEEN ((((v0.c0) IS FALSE))) AND (((- (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((v0.c0) IS FALSE))) AND (((- (rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c2)) BETWEEN ((((v0.c0) IS FALSE))) AND (((- (rt0.c2))))));
SELECT * FROM rt0, v0 WHERE (UPPER(DISTINCT CAST(rt0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (UPPER(DISTINCT CAST(rt0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (UPPER(DISTINCT CAST(rt0.c2 AS REAL)));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY WHERE (CAST(((NULL) NOTNULL) AS INTEGER)) ORDER BY CASE WHEN ((rt0.c1) NOT NULL) THEN rt0.c0 WHEN (+ (rt0.c0)) THEN ((rt0.c0)%(v0.c0)) WHEN (rt0.c2 IN ()) THEN (rt0.c2 IN ()) ELSE rt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY ORDER BY CASE WHEN ((rt0.c1) NOT NULL) THEN rt0.c0 WHEN (+ (rt0.c0)) THEN ((rt0.c0)%(v0.c0)) WHEN (rt0.c2 IN ()) THEN (rt0.c2 IN ()) ELSE rt0.c1 END DESC);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY WHERE (CAST(((NULL) NOTNULL) AS INTEGER)) ORDER BY CASE WHEN ((rt0.c1) NOT NULL) THEN rt0.c0 WHEN (+ (rt0.c0)) THEN ((rt0.c0)%(v0.c0)) WHEN (rt0.c2 IN ()) THEN (rt0.c2 IN ()) ELSE rt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY ORDER BY CASE WHEN ((rt0.c1) NOT NULL) THEN rt0.c0 WHEN (+ (rt0.c0)) THEN ((rt0.c0)%(v0.c0)) WHEN (rt0.c2 IN ()) THEN (rt0.c2 IN ()) ELSE rt0.c1 END DESC);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY WHERE (CAST(((NULL) NOTNULL) AS INTEGER)) ORDER BY CASE WHEN ((rt0.c1) NOT NULL) THEN rt0.c0 WHEN (+ (rt0.c0)) THEN ((rt0.c0)%(v0.c0)) WHEN (rt0.c2 IN ()) THEN (rt0.c2 IN ()) ELSE rt0.c1 END DESC;
SELECT COUNT(*) FROM v0, rt0 WHERE (v0.c0) ORDER BY ((((rt0.c0) NOT NULL)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0) NOT NULL)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (v0.c0) ORDER BY ((((rt0.c0) NOT NULL)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0) NOT NULL)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (v0.c0) ORDER BY ((((rt0.c0) NOT NULL)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC;
SELECT ALL * FROM rt0 WHERE (0X270153d0) ORDER BY 0.9286802973744227 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X270153d0) IS TRUE)  as count FROM rt0 ORDER BY 0.9286802973744227 DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (0X270153d0) ORDER BY 0.9286802973744227 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X270153d0) IS TRUE)  as count FROM rt0 ORDER BY 0.9286802973744227 DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (0X270153d0) ORDER BY 0.9286802973744227 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((v0.c0, v0.c0, rt0.c0))>=((rt0.c1, rt0.c0, rt0.c0))) COLLATE BINARY) ORDER BY ((((((rt0.c1)LIKE(rt0.c1)))OR(CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 END)))AND(((((v0.c0)AND(rt0.c1)))AND(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, rt0.c0))>=((rt0.c1, rt0.c0, rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c1)LIKE(rt0.c1)))OR(CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 END)))AND(((((v0.c0)AND(rt0.c1)))AND(rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((v0.c0, v0.c0, rt0.c0))>=((rt0.c1, rt0.c0, rt0.c0))) COLLATE BINARY) ORDER BY ((((((rt0.c1)LIKE(rt0.c1)))OR(CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 END)))AND(((((v0.c0)AND(rt0.c1)))AND(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, rt0.c0))>=((rt0.c1, rt0.c0, rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c1)LIKE(rt0.c1)))OR(CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 END)))AND(((((v0.c0)AND(rt0.c1)))AND(rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((v0.c0, v0.c0, rt0.c0))>=((rt0.c1, rt0.c0, rt0.c0))) COLLATE BINARY) ORDER BY ((((((rt0.c1)LIKE(rt0.c1)))OR(CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 END)))AND(((((v0.c0)AND(rt0.c1)))AND(rt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY rt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()));
SELECT * FROM v0, rt0 WHERE (((((rt0.c1 COLLATE RTRIM)OR((- ('-310003481')))))AND((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c1, 0.4074388441769874, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE RTRIM)OR((- ('-310003481')))))AND((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c1, 0.4074388441769874, rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c1 COLLATE RTRIM)OR((- ('-310003481')))))AND((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c1, 0.4074388441769874, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE RTRIM)OR((- ('-310003481')))))AND((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c1, 0.4074388441769874, rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c1 COLLATE RTRIM)OR((- ('-310003481')))))AND((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c1, 0.4074388441769874, rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x'68ca') BETWEEN (rt0.c1) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((x'68ca') BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x'68ca') BETWEEN (rt0.c1) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((x'68ca') BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x'68ca') BETWEEN (rt0.c1) AND (rt0.c0)) IN ()));
SELECT * FROM rt0, v0 WHERE (((((rt0.c0))=((v0.c0))) IN (((rt0.c0)||(rt0.c1))))) ORDER BY UNLIKELY(((rt0.c2)==(rt0.c1))) DESC  NULLS LAST, (rt0.c1 IN (LIKELIHOOD(rt0.c0, 0.18109243601911518))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0))==((v0.c0))) IN (((rt0.c0)||(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY UNLIKELY(((rt0.c2)==(rt0.c1))) DESC  NULLS LAST, (rt0.c1 IN (LIKELIHOOD(rt0.c0, 0.18109243601911518))) DESC);
SELECT * FROM rt0, v0 WHERE (((((rt0.c0))=((v0.c0))) IN (((rt0.c0)||(rt0.c1))))) ORDER BY UNLIKELY(((rt0.c2)==(rt0.c1))) DESC  NULLS LAST, (rt0.c1 IN (LIKELIHOOD(rt0.c0, 0.18109243601911518))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0))==((v0.c0))) IN (((rt0.c0)||(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY UNLIKELY(((rt0.c2)==(rt0.c1))) DESC  NULLS LAST, (rt0.c1 IN (LIKELIHOOD(rt0.c0, 0.18109243601911518))) DESC);
SELECT * FROM rt0, v0 WHERE (((((rt0.c0))=((v0.c0))) IN (((rt0.c0)||(rt0.c1))))) ORDER BY UNLIKELY(((rt0.c2)==(rt0.c1))) DESC  NULLS LAST, (rt0.c1 IN (LIKELIHOOD(rt0.c0, 0.18109243601911518))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) NOT NULL) THEN (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) NOT NULL) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) NOT NULL) THEN (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) NOT NULL) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) NOT NULL) THEN (v0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND((v0.c0 IN (v0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR(((v0.c0)-(v0.c0)))))AND(CAST(v0.c0 AS INTEGER)))) ORDER BY (NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) DESC, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND((v0.c0 IN (v0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR(((v0.c0)-(v0.c0)))))AND(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY (NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) DESC, v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND((v0.c0 IN (v0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR(((v0.c0)-(v0.c0)))))AND(CAST(v0.c0 AS INTEGER)))) ORDER BY (NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) DESC, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND((v0.c0 IN (v0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR(((v0.c0)-(v0.c0)))))AND(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY (NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) DESC, v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND((v0.c0 IN (v0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR(((v0.c0)-(v0.c0)))))AND(CAST(v0.c0 AS INTEGER)))) ORDER BY (NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) DESC, v0.c0 DESC;
SELECT * FROM v0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE));
SELECT COUNT(*) FROM rt0, v0 WHERE ((- (((NULL)<=('7,'))))) ORDER BY CASE v0.c0 COLLATE BINARY  WHEN '1525888379' THEN ((rt0.c2)OR(rt0.c0)) WHEN '' THEN ((v0.c0)&(rt0.c0)) WHEN v0.c0 THEN ((rt0.c0) NOTNULL) ELSE DATETIME(v0.c0, rt0.c1, v0.c0) END;
SELECT SUM(count) FROM (SELECT (((- (((NULL)<=('7,'))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE v0.c0 COLLATE BINARY  WHEN '1525888379' THEN ((rt0.c2)OR(rt0.c0)) WHEN '' THEN ((v0.c0)&(rt0.c0)) WHEN v0.c0 THEN ((rt0.c0) NOTNULL) ELSE DATETIME(v0.c0, rt0.c1, v0.c0) END);
SELECT COUNT(*) FROM rt0, v0 WHERE ((- (((NULL)<=('7,'))))) ORDER BY CASE v0.c0 COLLATE BINARY  WHEN '1525888379' THEN ((rt0.c2)OR(rt0.c0)) WHEN '' THEN ((v0.c0)&(rt0.c0)) WHEN v0.c0 THEN ((rt0.c0) NOTNULL) ELSE DATETIME(v0.c0, rt0.c1, v0.c0) END;
SELECT SUM(count) FROM (SELECT (((- (((NULL)<=('7,'))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE v0.c0 COLLATE BINARY  WHEN '1525888379' THEN ((rt0.c2)OR(rt0.c0)) WHEN '' THEN ((v0.c0)&(rt0.c0)) WHEN v0.c0 THEN ((rt0.c0) NOTNULL) ELSE DATETIME(v0.c0, rt0.c1, v0.c0) END);
SELECT COUNT(*) FROM rt0, v0 WHERE ((- (((NULL)<=('7,'))))) ORDER BY CASE v0.c0 COLLATE BINARY  WHEN '1525888379' THEN ((rt0.c2)OR(rt0.c0)) WHEN '' THEN ((v0.c0)&(rt0.c0)) WHEN v0.c0 THEN ((rt0.c0) NOTNULL) ELSE DATETIME(v0.c0, rt0.c1, v0.c0) END;
SELECT * FROM v0 WHERE ((((('&%騑Hqm!') IS TRUE))+(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((('&%騑Hqm!') IS TRUE))+(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((('&%騑Hqm!') IS TRUE))+(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((('&%騑Hqm!') IS TRUE))+(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((('&%騑Hqm!') IS TRUE))+(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL * FROM rt0 WHERE (((((((((((((((92174135)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(0xffffffffb3838376)))AND(rt0.c0)))OR(rt0.c0)))OR((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((92174135)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(0xffffffffb3838376)))AND(rt0.c0)))OR(rt0.c0)))OR((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((((92174135)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(0xffffffffb3838376)))AND(rt0.c0)))OR(rt0.c0)))OR((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((92174135)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(0xffffffffb3838376)))AND(rt0.c0)))OR(rt0.c0)))OR((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((((92174135)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(0xffffffffb3838376)))AND(rt0.c0)))OR(rt0.c0)))OR((NOT (rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))GLOB(CASE 0x1bd5945d  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))GLOB(CASE 0X1bd5945d  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))GLOB(CASE 0x1bd5945d  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))GLOB(CASE 0X1bd5945d  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))GLOB(CASE 0x1bd5945d  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))||(((rt0.c1)+(rt0.c2))))) ORDER BY COALESCE(rt0.c0 COLLATE BINARY, ((rt0.c0)<(rt0.c0)), CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END, v0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))||(((rt0.c1)+(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY COALESCE(rt0.c0 COLLATE BINARY, ((rt0.c0)<(rt0.c0)), CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END, v0.c0 COLLATE NOCASE));
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))||(((rt0.c1)+(rt0.c2))))) ORDER BY COALESCE(rt0.c0 COLLATE BINARY, ((rt0.c0)<(rt0.c0)), CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END, v0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))||(((rt0.c1)+(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY COALESCE(rt0.c0 COLLATE BINARY, ((rt0.c0)<(rt0.c0)), CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END, v0.c0 COLLATE NOCASE));
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))||(((rt0.c1)+(rt0.c2))))) ORDER BY COALESCE(rt0.c0 COLLATE BINARY, ((rt0.c0)<(rt0.c0)), CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END, v0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(NULL AS TEXT))AND(((rt0.c1)>(rt0.c2)))))OR(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(NULL AS TEXT))AND(((rt0.c1)>(rt0.c2)))))OR(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(NULL AS TEXT))AND(((rt0.c1)>(rt0.c2)))))OR(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(NULL AS TEXT))AND(((rt0.c1)>(rt0.c2)))))OR(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(NULL AS TEXT))AND(((rt0.c1)>(rt0.c2)))))OR(((rt0.c0) ISNULL))));
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c2 AS REAL) IN ((NULL IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS REAL) IN ((NULL IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c2 AS REAL) IN ((NULL IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS REAL) IN ((NULL IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c2 AS REAL) IN ((NULL IN (rt0.c0)))));
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((v0.c0)<<(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)<<(rt0.c2)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((v0.c0)<<(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)<<(rt0.c2)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((v0.c0)<<(rt0.c2)) IN ()));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)>(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(((NULL)==(v0.c0))))) ORDER BY ((((v0.c0)LIKE(v0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)>(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(((NULL)==(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)LIKE(v0.c0))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)>(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(((NULL)==(v0.c0))))) ORDER BY ((((v0.c0)LIKE(v0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)>(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(((NULL)==(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)LIKE(v0.c0))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)>(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(((NULL)==(v0.c0))))) ORDER BY ((((v0.c0)LIKE(v0.c0))) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)&(v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY ((v0.c0)*(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 1.648139837E9 END)) DESC  NULLS LAST, 0.6007206884687656;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)&(v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)*(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 1.648139837E9 END)) DESC  NULLS LAST, 0.6007206884687656);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)&(v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY ((v0.c0)*(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 1.648139837E9 END)) DESC  NULLS LAST, 0.6007206884687656;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)&(v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)*(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 1.648139837E9 END)) DESC  NULLS LAST, 0.6007206884687656);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)&(v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY ((v0.c0)*(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 1.648139837E9 END)) DESC  NULLS LAST, 0.6007206884687656;
SELECT * FROM rt0, v0 WHERE (CASE CAST('0.7731045561901372' AS TEXT)  WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST('0.7731045561901372' AS TEXT)  WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE CAST('0.7731045561901372' AS TEXT)  WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST('0.7731045561901372' AS TEXT)  WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE CAST('0.7731045561901372' AS TEXT)  WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 END);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)LIKE(v0.c0)))) AND (((1254089243 IN ()))))) ORDER BY CASE WHEN (NOT (v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, 0xffffffffaa2b1c80))) THEN ((v0.c0)OR(v0.c0)) WHEN x'' THEN 0.02060538031666448 COLLATE RTRIM ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0)LIKE(v0.c0)))) AND (((1254089243 IN ()))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (NOT (v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, 0Xffffffffaa2b1c80))) THEN ((v0.c0)OR(v0.c0)) WHEN x'' THEN 0.02060538031666448 COLLATE RTRIM ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)LIKE(v0.c0)))) AND (((1254089243 IN ()))))) ORDER BY CASE WHEN (NOT (v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, 0xffffffffaa2b1c80))) THEN ((v0.c0)OR(v0.c0)) WHEN x'' THEN 0.02060538031666448 COLLATE RTRIM ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0)LIKE(v0.c0)))) AND (((1254089243 IN ()))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (NOT (v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, 0Xffffffffaa2b1c80))) THEN ((v0.c0)OR(v0.c0)) WHEN x'' THEN 0.02060538031666448 COLLATE RTRIM ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)LIKE(v0.c0)))) AND (((1254089243 IN ()))))) ORDER BY CASE WHEN (NOT (v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, 0xffffffffaa2b1c80))) THEN ((v0.c0)OR(v0.c0)) WHEN x'' THEN 0.02060538031666448 COLLATE RTRIM ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END;
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c0) IS FALSE) COLLATE RTRIM COLLATE BINARY) ORDER BY (((rt0.c2)%('363301550')) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS FALSE) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c2)%('363301550')) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c0) IS FALSE) COLLATE RTRIM COLLATE BINARY) ORDER BY (((rt0.c2)%('363301550')) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS FALSE) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c2)%('363301550')) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c0) IS FALSE) COLLATE RTRIM COLLATE BINARY) ORDER BY (((rt0.c2)%('363301550')) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (((CAST(rt0.c0 AS TEXT))LIKE(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT))LIKE(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((CAST(rt0.c0 AS TEXT))LIKE(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT))LIKE(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((CAST(rt0.c0 AS TEXT))LIKE(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT ALL * FROM v0 WHERE ((+ (CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((- (x''))) NOT BETWEEN (NULL) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((- (x''))) NOT BETWEEN (NULL) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT ALL * FROM v0 WHERE ((+ (CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((- (x''))) NOT BETWEEN (NULL) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((- (x''))) NOT BETWEEN (NULL) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT ALL * FROM v0 WHERE ((+ (CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((- (x''))) NOT BETWEEN (NULL) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END));
SELECT ALL * FROM v0, rt0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(v0.c0 COLLATE RTRIM)))AND(((rt0.c1)IS NOT(v0.c0))))  NULLS FIRST, ((('Z92') IS TRUE) IN ((~ (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(v0.c0 COLLATE RTRIM)))AND(((rt0.c1)IS NOT(v0.c0))))  NULLS FIRST, ((('Z92') IS TRUE) IN ((~ (rt0.c0)))) DESC);
SELECT ALL * FROM v0, rt0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(v0.c0 COLLATE RTRIM)))AND(((rt0.c1)IS NOT(v0.c0))))  NULLS FIRST, ((('Z92') IS TRUE) IN ((~ (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(v0.c0 COLLATE RTRIM)))AND(((rt0.c1)IS NOT(v0.c0))))  NULLS FIRST, ((('Z92') IS TRUE) IN ((~ (rt0.c0)))) DESC);
SELECT ALL * FROM v0, rt0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(v0.c0 COLLATE RTRIM)))AND(((rt0.c1)IS NOT(v0.c0))))  NULLS FIRST, ((('Z92') IS TRUE) IN ((~ (rt0.c0)))) DESC;
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))AND(STRFTIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))AND(STRFTIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))AND(STRFTIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))AND(STRFTIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))AND(STRFTIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))));
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN ()) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((v0.c0)<=(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)<=(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((v0.c0)<=(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)<=(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((v0.c0)<=(rt0.c1)) AS TEXT));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c0)&(((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) WHERE (rt0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c0)&(((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c0)&(((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) WHERE (rt0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c0)&(((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c0)&(((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) WHERE (rt0.c2 COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((((NULL))<>((v0.c0))) IN ()) ASC  NULLS LAST, ((((v0.c0)!=(v0.c0))) BETWEEN (v0.c0) AND ((+ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((NULL))!=((v0.c0))) IN ()) ASC  NULLS LAST, ((((v0.c0)<>(v0.c0))) BETWEEN (v0.c0) AND ((+ (v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((((NULL))<>((v0.c0))) IN ()) ASC  NULLS LAST, ((((v0.c0)!=(v0.c0))) BETWEEN (v0.c0) AND ((+ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((NULL))!=((v0.c0))) IN ()) ASC  NULLS LAST, ((((v0.c0)<>(v0.c0))) BETWEEN (v0.c0) AND ((+ (v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((((NULL))<>((v0.c0))) IN ()) ASC  NULLS LAST, ((((v0.c0)!=(v0.c0))) BETWEEN (v0.c0) AND ((+ (v0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (NULLIF(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '&%騑Hqm!' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, ((v0.c0) NOTNULL))) ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '&%騑Hqm!' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, ((v0.c0) NOTNULL))) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (NULLIF(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '&%騑Hqm!' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, ((v0.c0) NOTNULL))) ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '&%騑Hqm!' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, ((v0.c0) NOTNULL))) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (NULLIF(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '&%騑Hqm!' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, ((v0.c0) NOTNULL))) ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (LOWER(rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LOWER(rt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LOWER(rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LOWER(rt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LOWER(rt0.c2 COLLATE NOCASE));
SELECT * FROM rt0, v0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT ALL * FROM v0, rt0 WHERE ((~ (CAST(rt0.c0 AS REAL)))) ORDER BY (~ ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))));
SELECT ALL * FROM v0, rt0 WHERE ((~ (CAST(rt0.c0 AS REAL)))) ORDER BY (~ ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))));
SELECT ALL * FROM v0, rt0 WHERE ((~ (CAST(rt0.c0 AS REAL)))) ORDER BY (~ ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN NULL ELSE rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN NULL ELSE rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN NULL ELSE rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN NULL ELSE rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN NULL ELSE rt0.c2 END AS INTEGER));
SELECT COUNT(*) FROM v0 WHERE (json_object(((((v0.c0)OR(v0.c0)))OR(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ORDER BY ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((x'', v0.c0, v0.c0, v0.c0, v0.c0))) IN (((v0.c0)GLOB(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_object(((((v0.c0)OR(v0.c0)))OR(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((x'', v0.c0, v0.c0, v0.c0, v0.c0))) IN (((v0.c0)GLOB(v0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (json_object(((((v0.c0)OR(v0.c0)))OR(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ORDER BY ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((x'', v0.c0, v0.c0, v0.c0, v0.c0))) IN (((v0.c0)GLOB(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_object(((((v0.c0)OR(v0.c0)))OR(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((x'', v0.c0, v0.c0, v0.c0, v0.c0))) IN (((v0.c0)GLOB(v0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (json_object(((((v0.c0)OR(v0.c0)))OR(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ORDER BY ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((x'', v0.c0, v0.c0, v0.c0, v0.c0))) IN (((v0.c0)GLOB(v0.c0))))  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE rt0.c1 END) ORDER BY (((((rt0.c0))>((rt0.c1)))) BETWEEN (((rt0.c0)/(rt0.c2))) AND ((rt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE rt0.c1 END) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0))>((rt0.c1)))) BETWEEN (((rt0.c0)/(rt0.c2))) AND ((rt0.c2 IN ()))) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE rt0.c1 END) ORDER BY (((((rt0.c0))>((rt0.c1)))) BETWEEN (((rt0.c0)/(rt0.c2))) AND ((rt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE rt0.c1 END) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0))>((rt0.c1)))) BETWEEN (((rt0.c0)/(rt0.c2))) AND ((rt0.c2 IN ()))) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE rt0.c1 END) ORDER BY (((((rt0.c0))>((rt0.c1)))) BETWEEN (((rt0.c0)/(rt0.c2))) AND ((rt0.c2 IN ()))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)) IN ()));
SELECT ALL * FROM rt0, v0 WHERE (LIKELIHOOD(DISTINCT rt0.c2 COLLATE RTRIM, 0.5333158591643585)) ORDER BY ((((((((rt0.c2)AND((- (v0.c0)))))AND(((v0.c0)-(rt0.c2)))))OR(x'')))OR(GLOB(rt0.c0, rt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt0.c2 COLLATE RTRIM, 0.5333158591643585)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((rt0.c2)AND((- (v0.c0)))))AND(((v0.c0)-(rt0.c2)))))OR(x'')))OR(GLOB(rt0.c0, rt0.c1))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (LIKELIHOOD(DISTINCT rt0.c2 COLLATE RTRIM, 0.5333158591643585)) ORDER BY ((((((((rt0.c2)AND((- (v0.c0)))))AND(((v0.c0)-(rt0.c2)))))OR(x'')))OR(GLOB(rt0.c0, rt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt0.c2 COLLATE RTRIM, 0.5333158591643585)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((rt0.c2)AND((- (v0.c0)))))AND(((v0.c0)-(rt0.c2)))))OR(x'')))OR(GLOB(rt0.c0, rt0.c1))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (LIKELIHOOD(DISTINCT rt0.c2 COLLATE RTRIM, 0.5333158591643585)) ORDER BY ((((((((rt0.c2)AND((- (v0.c0)))))AND(((v0.c0)-(rt0.c2)))))OR(x'')))OR(GLOB(rt0.c0, rt0.c1))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((CASE x'4c2b'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN 0.1464325558915579 THEN v0.c0 ELSE rt0.c0 END)IS(json_insert(v0.c0, rt0.c2, x'', v0.c0, rt0.c1)))) ORDER BY ((rt0.c2) ISNULL) COLLATE NOCASE DESC, rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE x'4c2b'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN 0.1464325558915579 THEN v0.c0 ELSE rt0.c0 END)IS(json_insert(v0.c0, rt0.c2, x'', v0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((rt0.c2) ISNULL) COLLATE NOCASE DESC, rt0.c2 ASC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((CASE x'4c2b'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN 0.1464325558915579 THEN v0.c0 ELSE rt0.c0 END)IS(json_insert(v0.c0, rt0.c2, x'', v0.c0, rt0.c1)))) ORDER BY ((rt0.c2) ISNULL) COLLATE NOCASE DESC, rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE x'4c2b'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN 0.1464325558915579 THEN v0.c0 ELSE rt0.c0 END)IS(json_insert(v0.c0, rt0.c2, x'', v0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((rt0.c2) ISNULL) COLLATE NOCASE DESC, rt0.c2 ASC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((CASE x'4c2b'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN 0.1464325558915579 THEN v0.c0 ELSE rt0.c0 END)IS(json_insert(v0.c0, rt0.c2, x'', v0.c0, rt0.c1)))) ORDER BY ((rt0.c2) ISNULL) COLLATE NOCASE DESC, rt0.c2 ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (-1.440015232E9 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (-1.440015232E9 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (-1.440015232E9 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (-1.440015232E9 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (-1.440015232E9 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 WHERE ((((- (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0)>=(v0.c0))))) ORDER BY (((v0.c0 IN ()))/((v0.c0 IN (v0.c0)))) DESC  NULLS FIRST, ((7.43190767E8) IS FALSE) ASC, CASE WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0)>=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))/((v0.c0 IN (v0.c0)))) DESC  NULLS FIRST, ((7.43190767E8) IS FALSE) ASC, CASE WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((- (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0)>=(v0.c0))))) ORDER BY (((v0.c0 IN ()))/((v0.c0 IN (v0.c0)))) DESC  NULLS FIRST, ((7.43190767E8) IS FALSE) ASC, CASE WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0)>=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))/((v0.c0 IN (v0.c0)))) DESC  NULLS FIRST, ((7.43190767E8) IS FALSE) ASC, CASE WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((- (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0)>=(v0.c0))))) ORDER BY (((v0.c0 IN ()))/((v0.c0 IN (v0.c0)))) DESC  NULLS FIRST, ((7.43190767E8) IS FALSE) ASC, CASE WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((NULL)/(((x'')GLOB(rt0.c0))))) ORDER BY (((rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1)) BETWEEN (((rt0.c2 IN ()), (rt0.c1 IN ()), ((((rt0.c2)AND(rt0.c2)))OR('mSIS')), CAST(rt0.c2 AS INTEGER), rt0.c0)) AND (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN 0.7222456611278663 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), (rt0.c1 IN ()), rt0.c0))) DESC  NULLS FIRST, ((((rt0.c1)IS(0x52347af5)))+(((rt0.c1) NOT NULL))), ((0xffffffffc4a3ff85) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((rt0.c2)IS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((NULL)/(((x'')GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1)) BETWEEN (((rt0.c2 IN ()), (rt0.c1 IN ()), ((((rt0.c2)AND(rt0.c2)))OR('mSIS')), CAST(rt0.c2 AS INTEGER), rt0.c0)) AND (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN 0.7222456611278663 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), (rt0.c1 IN ()), rt0.c0))) DESC  NULLS FIRST, ((((rt0.c1)IS(0x52347af5)))+(((rt0.c1) NOT NULL))), ((0Xffffffffc4a3ff85) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((rt0.c2)IS(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (((NULL)/(((x'')GLOB(rt0.c0))))) ORDER BY (((rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1)) BETWEEN (((rt0.c2 IN ()), (rt0.c1 IN ()), ((((rt0.c2)AND(rt0.c2)))OR('mSIS')), CAST(rt0.c2 AS INTEGER), rt0.c0)) AND (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN 0.7222456611278663 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), (rt0.c1 IN ()), rt0.c0))) DESC  NULLS FIRST, ((((rt0.c1)IS(0x52347af5)))+(((rt0.c1) NOT NULL))), ((0xffffffffc4a3ff85) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((rt0.c2)IS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((NULL)/(((x'')GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1)) BETWEEN (((rt0.c2 IN ()), (rt0.c1 IN ()), ((((rt0.c2)AND(rt0.c2)))OR('mSIS')), CAST(rt0.c2 AS INTEGER), rt0.c0)) AND (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN 0.7222456611278663 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), (rt0.c1 IN ()), rt0.c0))) DESC  NULLS FIRST, ((((rt0.c1)IS(0x52347af5)))+(((rt0.c1) NOT NULL))), ((0Xffffffffc4a3ff85) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((rt0.c2)IS(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (((NULL)/(((x'')GLOB(rt0.c0))))) ORDER BY (((rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1)) BETWEEN (((rt0.c2 IN ()), (rt0.c1 IN ()), ((((rt0.c2)AND(rt0.c2)))OR('mSIS')), CAST(rt0.c2 AS INTEGER), rt0.c0)) AND (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN 0.7222456611278663 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), (rt0.c1 IN ()), rt0.c0))) DESC  NULLS FIRST, ((((rt0.c1)IS(0x52347af5)))+(((rt0.c1) NOT NULL))), ((0xffffffffc4a3ff85) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((rt0.c2)IS(rt0.c2))));
SELECT * FROM v0, rt0 WHERE (CAST('1576528490' AS TEXT)) ORDER BY ((((((((((((((((v0.c0)AND(2.16088859E8)))OR(rt0.c1)))AND('!*W皏v')))AND(((rt0.c2)<(v0.c0)))))AND(ABS(v0.c0))))AND(('-984550242' IN ()))))OR(rt0.c2)))AND((('A]S뼚6yP}')*(x'')))) ASC  NULLS FIRST, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST('1576528490' AS TEXT)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((((((((((v0.c0)AND(2.16088859E8)))OR(rt0.c1)))AND('!*W皏v')))AND(((rt0.c2)<(v0.c0)))))AND(ABS(v0.c0))))AND(('-984550242' IN ()))))OR(rt0.c2)))AND((('A]S뼚6yP}')*(x'')))) ASC  NULLS FIRST, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE);
SELECT * FROM v0, rt0 WHERE (CAST('1576528490' AS TEXT)) ORDER BY ((((((((((((((((v0.c0)AND(2.16088859E8)))OR(rt0.c1)))AND('!*W皏v')))AND(((rt0.c2)<(v0.c0)))))AND(ABS(v0.c0))))AND(('-984550242' IN ()))))OR(rt0.c2)))AND((('A]S뼚6yP}')*(x'')))) ASC  NULLS FIRST, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST('1576528490' AS TEXT)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((((((((((v0.c0)AND(2.16088859E8)))OR(rt0.c1)))AND('!*W皏v')))AND(((rt0.c2)<(v0.c0)))))AND(ABS(v0.c0))))AND(('-984550242' IN ()))))OR(rt0.c2)))AND((('A]S뼚6yP}')*(x'')))) ASC  NULLS FIRST, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE);
SELECT * FROM v0, rt0 WHERE (CAST('1576528490' AS TEXT)) ORDER BY ((((((((((((((((v0.c0)AND(2.16088859E8)))OR(rt0.c1)))AND('!*W皏v')))AND(((rt0.c2)<(v0.c0)))))AND(ABS(v0.c0))))AND(('-984550242' IN ()))))OR(rt0.c2)))AND((('A]S뼚6yP}')*(x'')))) ASC  NULLS FIRST, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0)!=(rt0.c1)) IN (rt0.c1, (rt0.c0 IN ())))) ORDER BY (((((rt0.c2) BETWEEN (0.965002223574487) AND (rt0.c2))))>((((rt0.c1)IS NOT(v0.c0))))), NULL;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)<>(rt0.c1)) IN (rt0.c1, (rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c2) BETWEEN (0.965002223574487) AND (rt0.c2))))>((((rt0.c1)IS NOT(v0.c0))))), NULL);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0)!=(rt0.c1)) IN (rt0.c1, (rt0.c0 IN ())))) ORDER BY (((((rt0.c2) BETWEEN (0.965002223574487) AND (rt0.c2))))>((((rt0.c1)IS NOT(v0.c0))))), NULL;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)<>(rt0.c1)) IN (rt0.c1, (rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c2) BETWEEN (0.965002223574487) AND (rt0.c2))))>((((rt0.c1)IS NOT(v0.c0))))), NULL);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0)!=(rt0.c1)) IN (rt0.c1, (rt0.c0 IN ())))) ORDER BY (((((rt0.c2) BETWEEN (0.965002223574487) AND (rt0.c2))))>((((rt0.c1)IS NOT(v0.c0))))), NULL;
SELECT * FROM v0, rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS REAL)) ORDER BY (- ((+ (rt0.c1)))) DESC  NULLS LAST, ((CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END)<<(CAST(rt0.c0 AS INTEGER)))  NULLS LAST, CAST((('bh''Lg2')<>(rt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (- ((+ (rt0.c1)))) DESC  NULLS LAST, ((CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END)<<(CAST(rt0.c0 AS INTEGER)))  NULLS LAST, CAST((('bh''Lg2')<>(rt0.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS REAL)) ORDER BY (- ((+ (rt0.c1)))) DESC  NULLS LAST, ((CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END)<<(CAST(rt0.c0 AS INTEGER)))  NULLS LAST, CAST((('bh''Lg2')<>(rt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (- ((+ (rt0.c1)))) DESC  NULLS LAST, ((CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END)<<(CAST(rt0.c0 AS INTEGER)))  NULLS LAST, CAST((('bh''Lg2')<>(rt0.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS REAL)) ORDER BY (- ((+ (rt0.c1)))) DESC  NULLS LAST, ((CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END)<<(CAST(rt0.c0 AS INTEGER)))  NULLS LAST, CAST((('bh''Lg2')<>(rt0.c0)) AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c2))<((v0.c0))))=(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<((v0.c0))))==(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c2))<((v0.c0))))=(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<((v0.c0))))==(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c2))<((v0.c0))))=(CAST(rt0.c0 AS NUMERIC))));
SELECT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)IS(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((rt0.c1 COLLATE BINARY)AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)IS(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 COLLATE BINARY)AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)IS(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((rt0.c1 COLLATE BINARY)AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)IS(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 COLLATE BINARY)AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)IS(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((rt0.c1 COLLATE BINARY)AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ASC  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (x'') ORDER BY SUBSTR((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, v0.c0, v0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1))), CAST(rt0.c2 AS BLOB));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0 ORDER BY SUBSTR((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, v0.c0, v0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1))), CAST(rt0.c2 AS BLOB)));
SELECT * FROM rt0, v0 WHERE (x'') ORDER BY SUBSTR((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, v0.c0, v0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1))), CAST(rt0.c2 AS BLOB));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0 ORDER BY SUBSTR((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, v0.c0, v0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1))), CAST(rt0.c2 AS BLOB)));
SELECT * FROM rt0, v0 WHERE (x'') ORDER BY SUBSTR((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, v0.c0, v0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1))), CAST(rt0.c2 AS BLOB));
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 IN ()) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL))+(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL))+(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL))+(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL))+(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL))+(CAST(rt0.c2 AS TEXT))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c0)OR(x'6919')))AND(v0.c0)) THEN '-424861616' ELSE (v0.c0 IN (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((v0.c0)OR(x'6919')))AND(v0.c0)) THEN '-424861616' ELSE (v0.c0 IN (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c0)OR(x'6919')))AND(v0.c0)) THEN '-424861616' ELSE (v0.c0 IN (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((v0.c0)OR(x'6919')))AND(v0.c0)) THEN '-424861616' ELSE (v0.c0 IN (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c0)OR(x'6919')))AND(v0.c0)) THEN '-424861616' ELSE (v0.c0 IN (v0.c0)) END);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ ((rt0.c1 IN (v0.c0))))) ORDER BY ((((v0.c0)+(v0.c0)))*(rt0.c1 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c1 IN (v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0)+(v0.c0)))*(rt0.c1 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ ((rt0.c1 IN (v0.c0))))) ORDER BY ((((v0.c0)+(v0.c0)))*(rt0.c1 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c1 IN (v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0)+(v0.c0)))*(rt0.c1 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ ((rt0.c1 IN (v0.c0))))) ORDER BY ((((v0.c0)+(v0.c0)))*(rt0.c1 COLLATE NOCASE))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0))==((v0.c0))))!=(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))=((v0.c0))))!=(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0))==((v0.c0))))!=(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))=((v0.c0))))!=(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0))==((v0.c0))))!=(CAST(v0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)/(rt0.c2)) IN (load_extension(rt0.c1, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)/(rt0.c2)) IN (load_extension(rt0.c1, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)/(rt0.c2)) IN (load_extension(rt0.c1, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)/(rt0.c2)) IN (load_extension(rt0.c1, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0)) COLLATE NOCASE) ORDER BY CAST(((rt0.c1)<(rt0.c0)) AS REAL)  NULLS FIRST, CAST(((rt0.c0) IS FALSE) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)<(rt0.c0)) AS REAL)  NULLS FIRST, CAST(((rt0.c0) IS FALSE) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0)) COLLATE NOCASE) ORDER BY CAST(((rt0.c1)<(rt0.c0)) AS REAL)  NULLS FIRST, CAST(((rt0.c0) IS FALSE) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)<(rt0.c0)) AS REAL)  NULLS FIRST, CAST(((rt0.c0) IS FALSE) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0)) COLLATE NOCASE) ORDER BY CAST(((rt0.c1)<(rt0.c0)) AS REAL)  NULLS FIRST, CAST(((rt0.c0) IS FALSE) AS REAL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (x'') ORDER BY json_remove(CASE WHEN x'' THEN rt0.c2 END, ((((rt0.c0)OR(v0.c0)))AND(v0.c0))), (((rt0.c1)) BETWEEN ((((((v0.c0)OR(1.57652849E9)))OR(rt0.c0)))) AND ((CAST(v0.c0 AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, v0 ORDER BY json_remove(CASE WHEN x'' THEN rt0.c2 END, ((((rt0.c0)OR(v0.c0)))AND(v0.c0))), (((rt0.c1)) BETWEEN ((((((v0.c0)OR(1.57652849E9)))OR(rt0.c0)))) AND ((CAST(v0.c0 AS BLOB))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (x'') ORDER BY json_remove(CASE WHEN x'' THEN rt0.c2 END, ((((rt0.c0)OR(v0.c0)))AND(v0.c0))), (((rt0.c1)) BETWEEN ((((((v0.c0)OR(1.57652849E9)))OR(rt0.c0)))) AND ((CAST(v0.c0 AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, v0 ORDER BY json_remove(CASE WHEN x'' THEN rt0.c2 END, ((((rt0.c0)OR(v0.c0)))AND(v0.c0))), (((rt0.c1)) BETWEEN ((((((v0.c0)OR(1.57652849E9)))OR(rt0.c0)))) AND ((CAST(v0.c0 AS BLOB))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (x'') ORDER BY json_remove(CASE WHEN x'' THEN rt0.c2 END, ((((rt0.c0)OR(v0.c0)))AND(v0.c0))), (((rt0.c1)) BETWEEN ((((((v0.c0)OR(1.57652849E9)))OR(rt0.c0)))) AND ((CAST(v0.c0 AS BLOB))))  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (((LOWER('-1183877843'))OR(CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((LOWER('-1183877843'))OR(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((LOWER('-1183877843'))OR(CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((LOWER('-1183877843'))OR(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((LOWER('-1183877843'))OR(CAST(rt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()));
SELECT ALL * FROM v0 WHERE (IFNULL(DISTINCT json_array_length('-1283226762', v0.c0), ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT json_array_length('-1283226762', v0.c0), ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (IFNULL(DISTINCT json_array_length('-1283226762', v0.c0), ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT json_array_length('-1283226762', v0.c0), ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (IFNULL(DISTINCT json_array_length('-1283226762', v0.c0), ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))<=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))<=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))<=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))<=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))<=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL * FROM v0 WHERE ((((((v0.c0) NOT NULL)))<=(((+ (v0.c0)))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT NULL)))<=(((+ (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((((v0.c0) NOT NULL)))<=(((+ (v0.c0)))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT NULL)))<=(((+ (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((((v0.c0) NOT NULL)))<=(((+ (v0.c0)))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (rt0.c2) ORDER BY (((('92174135')OR(((x'') NOT NULL))))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY (((('92174135')OR(((x'') NOT NULL))))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c2) ORDER BY (((('92174135')OR(((x'') NOT NULL))))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY (((('92174135')OR(((x'') NOT NULL))))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c2) ORDER BY (((('92174135')OR(((x'') NOT NULL))))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (CAST((- (v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST((- (v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST((- (v0.c0)) AS TEXT));
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) BETWEEN ((- (rt0.c0))) AND (((rt0.c0)<>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER)) BETWEEN ((- (rt0.c0))) AND (((rt0.c0)!=(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) BETWEEN ((- (rt0.c0))) AND (((rt0.c0)<>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER)) BETWEEN ((- (rt0.c0))) AND (((rt0.c0)!=(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) BETWEEN ((- (rt0.c0))) AND (((rt0.c0)<>(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((0.5509910442699071 IN ()))|(NULLIF(rt0.c2, 't5L~f}aw'))) WHERE (((rt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((((((v0.c0) BETWEEN (rt0.c1) AND (x'')))AND(((((((((((((v0.c0)OR(v0.c0)))OR(0.6195149647504871)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))))AND(rt0.c0)), CAST(((rt0.c1)AND(rt0.c1)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((0.5509910442699071 IN ()))|(NULLIF(rt0.c2, 't5L~f}aw'))) ORDER BY ((((((v0.c0) BETWEEN (rt0.c1) AND (x'')))AND(((((((((((((v0.c0)OR(v0.c0)))OR(0.6195149647504871)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))))AND(rt0.c0)), CAST(((rt0.c1)AND(rt0.c1)) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((0.5509910442699071 IN ()))|(NULLIF(rt0.c2, 't5L~f}aw'))) WHERE (((rt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((((((v0.c0) BETWEEN (rt0.c1) AND (x'')))AND(((((((((((((v0.c0)OR(v0.c0)))OR(0.6195149647504871)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))))AND(rt0.c0)), CAST(((rt0.c1)AND(rt0.c1)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((0.5509910442699071 IN ()))|(NULLIF(rt0.c2, 't5L~f}aw'))) ORDER BY ((((((v0.c0) BETWEEN (rt0.c1) AND (x'')))AND(((((((((((((v0.c0)OR(v0.c0)))OR(0.6195149647504871)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))))AND(rt0.c0)), CAST(((rt0.c1)AND(rt0.c1)) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((0.5509910442699071 IN ()))|(NULLIF(rt0.c2, 't5L~f}aw'))) WHERE (((rt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((((((v0.c0) BETWEEN (rt0.c1) AND (x'')))AND(((((((((((((v0.c0)OR(v0.c0)))OR(0.6195149647504871)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))))AND(rt0.c0)), CAST(((rt0.c1)AND(rt0.c1)) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER)) ORDER BY ((v0.c0) IS FALSE) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) IS FALSE) COLLATE BINARY ASC);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER)) ORDER BY ((v0.c0) IS FALSE) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) IS FALSE) COLLATE BINARY ASC);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER)) ORDER BY ((v0.c0) IS FALSE) COLLATE BINARY ASC;
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) NOTNULL) AS TEXT)) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (x''))  NULLS FIRST, ((LOWER(rt0.c0))>=(0.6195149647504871)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOTNULL) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (x''))  NULLS FIRST, ((LOWER(rt0.c0))>=(0.6195149647504871)) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) NOTNULL) AS TEXT)) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (x''))  NULLS FIRST, ((LOWER(rt0.c0))>=(0.6195149647504871)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOTNULL) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (x''))  NULLS FIRST, ((LOWER(rt0.c0))>=(0.6195149647504871)) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) NOTNULL) AS TEXT)) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (x''))  NULLS FIRST, ((LOWER(rt0.c0))>=(0.6195149647504871)) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (((v0.c0 IN ()) IN (((((rt0.c2)OR(rt0.c2)))AND(v0.c0)), ''))) ORDER BY (CAST(0.8084425445207566 AS REAL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN (((((rt0.c2)OR(rt0.c2)))AND(v0.c0)), ''))) IS TRUE)  as count FROM v0, rt0 ORDER BY (CAST(0.8084425445207566 AS REAL) IN ()) DESC);
SELECT ALL * FROM v0, rt0 WHERE (((v0.c0 IN ()) IN (((((rt0.c2)OR(rt0.c2)))AND(v0.c0)), ''))) ORDER BY (CAST(0.8084425445207566 AS REAL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN (((((rt0.c2)OR(rt0.c2)))AND(v0.c0)), ''))) IS TRUE)  as count FROM v0, rt0 ORDER BY (CAST(0.8084425445207566 AS REAL) IN ()) DESC);
SELECT ALL * FROM v0, rt0 WHERE (((v0.c0 IN ()) IN (((((rt0.c2)OR(rt0.c2)))AND(v0.c0)), ''))) ORDER BY (CAST(0.8084425445207566 AS REAL) IN ()) DESC;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))|((+ (NULL))))) ORDER BY (- (v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))|((+ (NULL))))) IS TRUE)  as count FROM v0 ORDER BY (- (v0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))|((+ (NULL))))) ORDER BY (- (v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))|((+ (NULL))))) IS TRUE)  as count FROM v0 ORDER BY (- (v0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))|((+ (NULL))))) ORDER BY (- (v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)LIKE(v0.c0)) COLLATE NOCASE) ORDER BY ((x'')|((v0.c0 IN ('-1726380247', v0.c0)))) DESC  NULLS LAST, ((v0.c0 COLLATE BINARY)=(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)LIKE(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((x'')|((v0.c0 IN ('-1726380247', v0.c0)))) DESC  NULLS LAST, ((v0.c0 COLLATE BINARY)==(v0.c0)) DESC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)LIKE(v0.c0)) COLLATE NOCASE) ORDER BY ((x'')|((v0.c0 IN ('-1726380247', v0.c0)))) DESC  NULLS LAST, ((v0.c0 COLLATE BINARY)=(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)LIKE(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((x'')|((v0.c0 IN ('-1726380247', v0.c0)))) DESC  NULLS LAST, ((v0.c0 COLLATE BINARY)==(v0.c0)) DESC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)LIKE(v0.c0)) COLLATE NOCASE) ORDER BY ((x'')|((v0.c0 IN ('-1726380247', v0.c0)))) DESC  NULLS LAST, ((v0.c0 COLLATE BINARY)=(v0.c0)) DESC;
SELECT ALL * FROM rt0, v0 WHERE ((v0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((v0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((v0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (NOT (((rt0.c0)IS(rt0.c1)))) WHERE (((((rt0.c1)>(rt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (((rt0.c1)<=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>(rt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (((rt0.c1)<=(rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (NOT (((rt0.c0)IS(rt0.c1)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (NOT (((rt0.c0)IS(rt0.c1)))) WHERE (((((rt0.c1)>(rt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (((rt0.c1)<=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>(rt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (((rt0.c1)<=(rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (NOT (((rt0.c0)IS(rt0.c1)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (NOT (((rt0.c0)IS(rt0.c1)))) WHERE (((((rt0.c1)>(rt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (((rt0.c1)<=(rt0.c2)))));
SELECT ALL * FROM v0, rt0 WHERE ((~ (CAST(rt0.c1 AS REAL)))) ORDER BY ((((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))))>=((((((v0.c0)OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))))>=((((((v0.c0)OR(rt0.c1)))AND(rt0.c2))))));
SELECT ALL * FROM v0, rt0 WHERE ((~ (CAST(rt0.c1 AS REAL)))) ORDER BY ((((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))))>=((((((v0.c0)OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))))>=((((((v0.c0)OR(rt0.c1)))AND(rt0.c2))))));
SELECT ALL * FROM v0, rt0 WHERE ((~ (CAST(rt0.c1 AS REAL)))) ORDER BY ((((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))))>=((((((v0.c0)OR(rt0.c1)))AND(rt0.c2)))));
SELECT * FROM v0 CROSS JOIN rt0 ON NULL WHERE ((- (((rt0.c0) IS FALSE)))) ORDER BY (+ (((((((((rt0.c0)AND(v0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON NULL ORDER BY (+ (((((((((rt0.c0)AND(v0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))) DESC);
SELECT * FROM v0 CROSS JOIN rt0 ON NULL WHERE ((- (((rt0.c0) IS FALSE)))) ORDER BY (+ (((((((((rt0.c0)AND(v0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON NULL ORDER BY (+ (((((((((rt0.c0)AND(v0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))) DESC);
SELECT * FROM v0 CROSS JOIN rt0 ON NULL WHERE ((- (((rt0.c0) IS FALSE)))) ORDER BY (+ (((((((((rt0.c0)AND(v0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.6584347207374032)LIKE(((rt0.c2)/(x'')))));
SELECT SUM(count) FROM (SELECT ((((0.6584347207374032)LIKE(((rt0.c2)/(x''))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.6584347207374032)LIKE(((rt0.c2)/(x'')))));
SELECT SUM(count) FROM (SELECT ((((0.6584347207374032)LIKE(((rt0.c2)/(x''))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.6584347207374032)LIKE(((rt0.c2)/(x'')))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c1, rt0.c1, rt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c1, rt0.c1, rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c1, rt0.c1, rt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c1, rt0.c1, rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c1, rt0.c1, rt0.c2))) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)GLOB((('Q6UN4')IS(v0.c0))))) ORDER BY v0.c0 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 END)GLOB((('Q6UN4')IS(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)GLOB((('Q6UN4')IS(v0.c0))))) ORDER BY v0.c0 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 END)GLOB((('Q6UN4')IS(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)GLOB((('Q6UN4')IS(v0.c0))))) ORDER BY v0.c0 COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((((((((rt0.c2)%(v0.c0)))AND(((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))))AND(CAST(NULL AS NUMERIC))))OR((((v0.c0))<((rt0.c1))))))AND(0.9920199009499182)) WHERE ((((+ (rt0.c0)))IS NOT(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0)))IS NOT(((v0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((((((rt0.c2)%(v0.c0)))AND(((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))))AND(CAST(NULL AS NUMERIC))))OR((((v0.c0))<((rt0.c1))))))AND(0.9920199009499182)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((((((((rt0.c2)%(v0.c0)))AND(((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))))AND(CAST(NULL AS NUMERIC))))OR((((v0.c0))<((rt0.c1))))))AND(0.9920199009499182)) WHERE ((((+ (rt0.c0)))IS NOT(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0)))IS NOT(((v0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((((((rt0.c2)%(v0.c0)))AND(((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))))AND(CAST(NULL AS NUMERIC))))OR((((v0.c0))<((rt0.c1))))))AND(0.9920199009499182)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((((((((rt0.c2)%(v0.c0)))AND(((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))))AND(CAST(NULL AS NUMERIC))))OR((((v0.c0))<((rt0.c1))))))AND(0.9920199009499182)) WHERE ((((+ (rt0.c0)))IS NOT(((v0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0, v0 WHERE (LIKE(((rt0.c0)|(v0.c0)), CAST(x'' AS BLOB), '[')) ORDER BY CASE (NOT (rt0.c2))  WHEN (v0.c0 IN (v0.c0)) THEN LIKELIHOOD(rt0.c1, 0.02686367259632927) WHEN ((0.8359688812446326)*(rt0.c2)) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c1 COLLATE RTRIM ELSE ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(NULL)))AND(rt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((rt0.c0)|(v0.c0)), CAST(x'' AS BLOB), '[')) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE (NOT (rt0.c2))  WHEN (v0.c0 IN (v0.c0)) THEN LIKELIHOOD(rt0.c1, 0.02686367259632927) WHEN ((0.8359688812446326)*(rt0.c2)) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c1 COLLATE RTRIM ELSE ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(NULL)))AND(rt0.c1)) END DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (LIKE(((rt0.c0)|(v0.c0)), CAST(x'' AS BLOB), '[')) ORDER BY CASE (NOT (rt0.c2))  WHEN (v0.c0 IN (v0.c0)) THEN LIKELIHOOD(rt0.c1, 0.02686367259632927) WHEN ((0.8359688812446326)*(rt0.c2)) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c1 COLLATE RTRIM ELSE ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(NULL)))AND(rt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((rt0.c0)|(v0.c0)), CAST(x'' AS BLOB), '[')) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE (NOT (rt0.c2))  WHEN (v0.c0 IN (v0.c0)) THEN LIKELIHOOD(rt0.c1, 0.02686367259632927) WHEN ((0.8359688812446326)*(rt0.c2)) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c1 COLLATE RTRIM ELSE ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(NULL)))AND(rt0.c1)) END DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (LIKE(((rt0.c0)|(v0.c0)), CAST(x'' AS BLOB), '[')) ORDER BY CASE (NOT (rt0.c2))  WHEN (v0.c0 IN (v0.c0)) THEN LIKELIHOOD(rt0.c1, 0.02686367259632927) WHEN ((0.8359688812446326)*(rt0.c2)) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c1 COLLATE RTRIM ELSE ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(NULL)))AND(rt0.c1)) END DESC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2)IS(v0.c0))) BETWEEN (((v0.c0)<(rt0.c1))) AND (rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS(v0.c0))) BETWEEN (((v0.c0)<(rt0.c1))) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2)IS(v0.c0))) BETWEEN (((v0.c0)<(rt0.c1))) AND (rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS(v0.c0))) BETWEEN (((v0.c0)<(rt0.c1))) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2)IS(v0.c0))) BETWEEN (((v0.c0)<(rt0.c1))) AND (rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt0 WHERE (CAST(0.020712173144897372 AS TEXT)) ORDER BY (((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))))>=(((- (rt0.c2))))) ASC  NULLS FIRST, CASE WHEN rt0.c2 COLLATE NOCASE THEN rt0.c1 ELSE (- (rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0.020712173144897372 AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))))>=(((- (rt0.c2))))) ASC  NULLS FIRST, CASE WHEN rt0.c2 COLLATE NOCASE THEN rt0.c1 ELSE (- (rt0.c0)) END  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(0.020712173144897372 AS TEXT)) ORDER BY (((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))))>=(((- (rt0.c2))))) ASC  NULLS FIRST, CASE WHEN rt0.c2 COLLATE NOCASE THEN rt0.c1 ELSE (- (rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0.020712173144897372 AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))))>=(((- (rt0.c2))))) ASC  NULLS FIRST, CASE WHEN rt0.c2 COLLATE NOCASE THEN rt0.c1 ELSE (- (rt0.c0)) END  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(0.020712173144897372 AS TEXT)) ORDER BY (((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))))>=(((- (rt0.c2))))) ASC  NULLS FIRST, CASE WHEN rt0.c2 COLLATE NOCASE THEN rt0.c1 ELSE (- (rt0.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c0))!=((v0.c0))))AND((((v0.c0))>=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))!=((v0.c0))))AND((((v0.c0))>=((rt0.c2)))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c0))!=((v0.c0))))AND((((v0.c0))>=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))!=((v0.c0))))AND((((v0.c0))>=((rt0.c2)))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c0))!=((v0.c0))))AND((((v0.c0))>=((rt0.c2))))));
SELECT * FROM rt0, v0 WHERE ((((('-2134341870')OR(((rt0.c0)||(rt0.c0)))))AND(rt0.c2 COLLATE NOCASE))) ORDER BY json_insert(rt0.c1, rt0.c0, rt0.c2) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('-2134341870')OR(((rt0.c0)||(rt0.c0)))))AND(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY json_insert(rt0.c1, rt0.c0, rt0.c2) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((('-2134341870')OR(((rt0.c0)||(rt0.c0)))))AND(rt0.c2 COLLATE NOCASE))) ORDER BY json_insert(rt0.c1, rt0.c0, rt0.c2) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('-2134341870')OR(((rt0.c0)||(rt0.c0)))))AND(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY json_insert(rt0.c1, rt0.c0, rt0.c2) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((('-2134341870')OR(((rt0.c0)||(rt0.c0)))))AND(rt0.c2 COLLATE NOCASE))) ORDER BY json_insert(rt0.c1, rt0.c0, rt0.c2) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) IS TRUE) COLLATE RTRIM WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) IS TRUE) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) IS TRUE) COLLATE RTRIM WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) IS TRUE) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) IS TRUE) COLLATE RTRIM WHERE (NULL);
SELECT * FROM v0, rt0 WHERE (CAST(((0.6265649384006444) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.6265649384006444) IS FALSE) AS REAL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CAST(((0.6265649384006444) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.6265649384006444) IS FALSE) AS REAL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CAST(((0.6265649384006444) IS FALSE) AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2))==((rt0.c1))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))==((rt0.c1))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2))==((rt0.c1))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))==((rt0.c1))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2))==((rt0.c1))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)));
SELECT * FROM rt0, v0 NOT INDEXED WHERE (INSTR(x'', CAST(rt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((INSTR(x'', CAST(rt0.c1 AS TEXT))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 NOT INDEXED WHERE (INSTR(x'', CAST(rt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((INSTR(x'', CAST(rt0.c1 AS TEXT))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 NOT INDEXED WHERE (INSTR(x'', CAST(rt0.c1 AS TEXT)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((v0.c0) NOT NULL) COLLATE NOCASE) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c2) AND ('')) AS REAL) ASC, UNLIKELY(((v0.c0)*(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c2) AND ('')) AS REAL) ASC, UNLIKELY(((v0.c0)*(v0.c0))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((v0.c0) NOT NULL) COLLATE NOCASE) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c2) AND ('')) AS REAL) ASC, UNLIKELY(((v0.c0)*(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c2) AND ('')) AS REAL) ASC, UNLIKELY(((v0.c0)*(v0.c0))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((v0.c0) NOT NULL) COLLATE NOCASE) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c2) AND ('')) AS REAL) ASC, UNLIKELY(((v0.c0)*(v0.c0)));
SELECT * FROM rt0, v0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE '' END)>(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE '' END)>(rt0.c2))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE '' END)>(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE '' END)>(rt0.c2))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE '' END)>(rt0.c2)));
SELECT ALL * FROM rt0 WHERE (CAST(x'' AS REAL)) ORDER BY ((((((rt0.c0)<=(rt0.c1)))AND((rt0.c1 IN ()))))OR(((1254089243) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)<=(rt0.c1)))AND((rt0.c1 IN ()))))OR(((1254089243) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(x'' AS REAL)) ORDER BY ((((((rt0.c0)<=(rt0.c1)))AND((rt0.c1 IN ()))))OR(((1254089243) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)<=(rt0.c1)))AND((rt0.c1 IN ()))))OR(((1254089243) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(x'' AS REAL)) ORDER BY ((((((rt0.c0)<=(rt0.c1)))AND((rt0.c1 IN ()))))OR(((1254089243) NOTNULL))) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (x'9c72'))) BETWEEN (((NULL) BETWEEN (v0.c0) AND (v0.c0))) AND (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (x'9c72'))) BETWEEN (((NULL) BETWEEN (v0.c0) AND (v0.c0))) AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (x'9c72'))) BETWEEN (((NULL) BETWEEN (v0.c0) AND (v0.c0))) AND (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (x'9c72'))) BETWEEN (((NULL) BETWEEN (v0.c0) AND (v0.c0))) AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (x'9c72'))) BETWEEN (((NULL) BETWEEN (v0.c0) AND (v0.c0))) AND (CAST(v0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((COALESCE(rt0.c2, NULL))<<(CASE WHEN rt0.c1 THEN x'' ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(rt0.c2, NULL))<<(CASE WHEN rt0.c1 THEN x'' ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((COALESCE(rt0.c2, NULL))<<(CASE WHEN rt0.c1 THEN x'' ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(rt0.c2, NULL))<<(CASE WHEN rt0.c1 THEN x'' ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((COALESCE(rt0.c2, NULL))<<(CASE WHEN rt0.c1 THEN x'' ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1, 0.7376566385771797, x'')) BETWEEN (((NOT (rt0.c1)), 0.9418309604020341, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))) AND ((x'', ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)), (+ (rt0.c2))))) WHERE ((((highlight(rt0.c1, rt0.c2, rt0.c0, v0.c0)))>((rt0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((highlight(rt0.c1, rt0.c2, rt0.c0, v0.c0)))>((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1, 0.7376566385771797, x'')) BETWEEN (((NOT (rt0.c1)), 0.9418309604020341, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))) AND ((x'', ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)), (+ (rt0.c2))))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1, 0.7376566385771797, x'')) BETWEEN (((NOT (rt0.c1)), 0.9418309604020341, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))) AND ((x'', ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)), (+ (rt0.c2))))) WHERE ((((highlight(rt0.c1, rt0.c2, rt0.c0, v0.c0)))>((rt0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((highlight(rt0.c1, rt0.c2, rt0.c0, v0.c0)))>((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1, 0.7376566385771797, x'')) BETWEEN (((NOT (rt0.c1)), 0.9418309604020341, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))) AND ((x'', ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)), (+ (rt0.c2))))));
SELECT ALL * FROM v0, rt0 WHERE (COALESCE(DISTINCT (v0.c0 IN ()), v0.c0 COLLATE NOCASE, (((rt0.c0))<=((0.9418309604020341))), UPPER(DISTINCT 0X1c3feaf7)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (v0.c0 IN ()), v0.c0 COLLATE NOCASE, (((rt0.c0))<=((0.9418309604020341))), UPPER(DISTINCT 0X1c3feaf7))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (COALESCE(DISTINCT (v0.c0 IN ()), v0.c0 COLLATE NOCASE, (((rt0.c0))<=((0.9418309604020341))), UPPER(DISTINCT 0X1c3feaf7)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (v0.c0 IN ()), v0.c0 COLLATE NOCASE, (((rt0.c0))<=((0.9418309604020341))), UPPER(DISTINCT 0X1c3feaf7))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (COALESCE(DISTINCT (v0.c0 IN ()), v0.c0 COLLATE NOCASE, (((rt0.c0))<=((0.9418309604020341))), UPPER(DISTINCT 0X1c3feaf7)));
SELECT ALL * FROM v0 WHERE ((+ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((((v0.c0) IS FALSE))/(v0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE))/(v0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((+ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((((v0.c0) IS FALSE))/(v0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE))/(v0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((+ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((((v0.c0) IS FALSE))/(v0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((CAST(rt0.c2 AS REAL))<<(UNLIKELY(rt0.c0))) WHERE (rt0.c0) ORDER BY ((((rt0.c2)<<(v0.c0))) NOT BETWEEN (0.48019245379316644) AND (LTRIM(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((CAST(rt0.c2 AS REAL))<<(UNLIKELY(rt0.c0))) ORDER BY ((((rt0.c2)<<(v0.c0))) NOT BETWEEN (0.48019245379316644) AND (LTRIM(rt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((CAST(rt0.c2 AS REAL))<<(UNLIKELY(rt0.c0))) WHERE (rt0.c0) ORDER BY ((((rt0.c2)<<(v0.c0))) NOT BETWEEN (0.48019245379316644) AND (LTRIM(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((CAST(rt0.c2 AS REAL))<<(UNLIKELY(rt0.c0))) ORDER BY ((((rt0.c2)<<(v0.c0))) NOT BETWEEN (0.48019245379316644) AND (LTRIM(rt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((CAST(rt0.c2 AS REAL))<<(UNLIKELY(rt0.c0))) WHERE (rt0.c0) ORDER BY ((((rt0.c2)<<(v0.c0))) NOT BETWEEN (0.48019245379316644) AND (LTRIM(rt0.c1))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(rt0.c0 COLLATE NOCASE)))OR('-1892971873'))) ORDER BY (((rt0.c1 IN ())) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))AND('1296455104'))) AND (rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(rt0.c0 COLLATE NOCASE)))OR('-1892971873'))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ())) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))AND('1296455104'))) AND (rt0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(rt0.c0 COLLATE NOCASE)))OR('-1892971873'))) ORDER BY (((rt0.c1 IN ())) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))AND('1296455104'))) AND (rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(rt0.c0 COLLATE NOCASE)))OR('-1892971873'))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ())) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))AND('1296455104'))) AND (rt0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(rt0.c0 COLLATE NOCASE)))OR('-1892971873'))) ORDER BY (((rt0.c1 IN ())) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))AND('1296455104'))) AND (rt0.c2))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (0xffffffff8422ae8a)))!=(((rt0.c0)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c1) AND (0xffffffff8422ae8a)))!=(((rt0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (0xffffffff8422ae8a)))!=(((rt0.c0)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c1) AND (0xffffffff8422ae8a)))!=(((rt0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (0xffffffff8422ae8a)))!=(((rt0.c0)IS(rt0.c1)))));
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN ()));
SELECT ALL * FROM rt0 WHERE (0.7376566385771797);
SELECT SUM(count) FROM (SELECT ((0.7376566385771797) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0.7376566385771797);
SELECT SUM(count) FROM (SELECT ((0.7376566385771797) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0.7376566385771797);
SELECT COUNT(*) FROM rt0 WHERE ((((LIKELIHOOD(rt0.c2, 0.8477711767909474)))<((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (('363301550' IN ())) AND ((rt0.c0 IN (rt0.c0, rt0.c1, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELIHOOD(rt0.c2, 0.8477711767909474)))<((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (('363301550' IN ())) AND ((rt0.c0 IN (rt0.c0, rt0.c1, rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((((LIKELIHOOD(rt0.c2, 0.8477711767909474)))<((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (('363301550' IN ())) AND ((rt0.c0 IN (rt0.c0, rt0.c1, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELIHOOD(rt0.c2, 0.8477711767909474)))<((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (('363301550' IN ())) AND ((rt0.c0 IN (rt0.c0, rt0.c1, rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((((LIKELIHOOD(rt0.c2, 0.8477711767909474)))<((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (('363301550' IN ())) AND ((rt0.c0 IN (rt0.c0, rt0.c1, rt0.c0))));
SELECT * FROM v0 WHERE ((NOT (CAST(v0.c0 AS TEXT)))) ORDER BY CASE WHEN (- (v0.c0)) THEN (v0.c0 IN ()) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN '' COLLATE NOCASE WHEN (- (v0.c0)) THEN v0.c0 ELSE (NOT (v0.c0)) END, (+ (((('1254089243'))>((v0.c0)))))  NULLS FIRST, (CAST(v0.c0 AS TEXT) IN (0.40829918156653744)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (- (v0.c0)) THEN (v0.c0 IN ()) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN '' COLLATE NOCASE WHEN (- (v0.c0)) THEN v0.c0 ELSE (NOT (v0.c0)) END, (+ (((('1254089243'))>((v0.c0)))))  NULLS FIRST, (CAST(v0.c0 AS TEXT) IN (0.40829918156653744)) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((NOT (CAST(v0.c0 AS TEXT)))) ORDER BY CASE WHEN (- (v0.c0)) THEN (v0.c0 IN ()) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN '' COLLATE NOCASE WHEN (- (v0.c0)) THEN v0.c0 ELSE (NOT (v0.c0)) END, (+ (((('1254089243'))>((v0.c0)))))  NULLS FIRST, (CAST(v0.c0 AS TEXT) IN (0.40829918156653744)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (- (v0.c0)) THEN (v0.c0 IN ()) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN '' COLLATE NOCASE WHEN (- (v0.c0)) THEN v0.c0 ELSE (NOT (v0.c0)) END, (+ (((('1254089243'))>((v0.c0)))))  NULLS FIRST, (CAST(v0.c0 AS TEXT) IN (0.40829918156653744)) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((NOT (CAST(v0.c0 AS TEXT)))) ORDER BY CASE WHEN (- (v0.c0)) THEN (v0.c0 IN ()) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN '' COLLATE NOCASE WHEN (- (v0.c0)) THEN v0.c0 ELSE (NOT (v0.c0)) END, (+ (((('1254089243'))>((v0.c0)))))  NULLS FIRST, (CAST(v0.c0 AS TEXT) IN (0.40829918156653744)) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (((HEX(v0.c0)) BETWEEN (((v0.c0)*(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY TRIM(DISTINCT ((v0.c0) BETWEEN (NULL) AND (v0.c0)), v0.c0 COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT ((((HEX(v0.c0)) BETWEEN (((v0.c0)*(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY TRIM(DISTINCT ((v0.c0) BETWEEN (NULL) AND (v0.c0)), v0.c0 COLLATE RTRIM) DESC);
SELECT * FROM v0 WHERE (((HEX(v0.c0)) BETWEEN (((v0.c0)*(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY TRIM(DISTINCT ((v0.c0) BETWEEN (NULL) AND (v0.c0)), v0.c0 COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT ((((HEX(v0.c0)) BETWEEN (((v0.c0)*(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY TRIM(DISTINCT ((v0.c0) BETWEEN (NULL) AND (v0.c0)), v0.c0 COLLATE RTRIM) DESC);
SELECT * FROM v0 WHERE (((HEX(v0.c0)) BETWEEN (((v0.c0)*(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY TRIM(DISTINCT ((v0.c0) BETWEEN (NULL) AND (v0.c0)), v0.c0 COLLATE RTRIM) DESC;
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) IS TRUE) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c1)LIKE(x'f08e'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)LIKE(x'f08e'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c1)LIKE(x'f08e'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)LIKE(x'f08e'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c1)LIKE(x'f08e'))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB))IS NOT(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((0.4131192156386938)+((v0.c0 IN (v0.c0, v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB))IS NOT(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((0.4131192156386938)+((v0.c0 IN (v0.c0, v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB))IS NOT(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((0.4131192156386938)+((v0.c0 IN (v0.c0, v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB))IS NOT(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((0.4131192156386938)+((v0.c0 IN (v0.c0, v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB))IS NOT(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((0.4131192156386938)+((v0.c0 IN (v0.c0, v0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 NOT INDEXED WHERE ((rt0.c0 IN (((rt0.c2) IS FALSE), (v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (((rt0.c2) IS FALSE), (v0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 NOT INDEXED WHERE ((rt0.c0 IN (((rt0.c2) IS FALSE), (v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (((rt0.c2) IS FALSE), (v0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 NOT INDEXED WHERE ((rt0.c0 IN (((rt0.c2) IS FALSE), (v0.c0 IN ()))));
SELECT COUNT(*) FROM v0, rt0 WHERE (x'29bc');
SELECT SUM(count) FROM (SELECT ALL ((x'29bc') IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (x'29bc');
SELECT SUM(count) FROM (SELECT ALL ((x'29bc') IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (x'29bc');
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c2)|(((((((((rt0.c2)OR(v0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0))))) ORDER BY ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(v0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)|(((((((((rt0.c2)OR(v0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(v0.c0)) COLLATE NOCASE ASC);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c2)|(((((((((rt0.c2)OR(v0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0))))) ORDER BY ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(v0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)|(((((((((rt0.c2)OR(v0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(v0.c0)) COLLATE NOCASE ASC);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c2)|(((((((((rt0.c2)OR(v0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0))))) ORDER BY ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(v0.c0)) COLLATE NOCASE ASC;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE x'' END)<((rt0.c2 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE x'' END)<((rt0.c2 IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE x'' END)<((rt0.c2 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE x'' END)<((rt0.c2 IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE x'' END)<((rt0.c2 IN (rt0.c0)))));
SELECT ALL * FROM rt0, v0 WHERE (CAST(((rt0.c0) IS TRUE) AS REAL)) ORDER BY rt0.c0  NULLS LAST, ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY  NULLS FIRST, CASE CAST(v0.c0 AS NUMERIC)  WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c2)LIKE(rt0.c1)) ELSE rt0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) IS TRUE) AS REAL)) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0  NULLS LAST, ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY  NULLS FIRST, CASE CAST(v0.c0 AS NUMERIC)  WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c2)LIKE(rt0.c1)) ELSE rt0.c0 END DESC);
SELECT ALL * FROM rt0, v0 WHERE (CAST(((rt0.c0) IS TRUE) AS REAL)) ORDER BY rt0.c0  NULLS LAST, ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY  NULLS FIRST, CASE CAST(v0.c0 AS NUMERIC)  WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c2)LIKE(rt0.c1)) ELSE rt0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) IS TRUE) AS REAL)) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0  NULLS LAST, ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY  NULLS FIRST, CASE CAST(v0.c0 AS NUMERIC)  WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c2)LIKE(rt0.c1)) ELSE rt0.c0 END DESC);
SELECT ALL * FROM rt0, v0 WHERE (CAST(((rt0.c0) IS TRUE) AS REAL)) ORDER BY rt0.c0  NULLS LAST, ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY  NULLS FIRST, CASE CAST(v0.c0 AS NUMERIC)  WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c2)LIKE(rt0.c1)) ELSE rt0.c0 END DESC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))==(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))==(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))==(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))==(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))==(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c1)+(rt0.c2)) THEN CASE WHEN x'' THEN NULL END ELSE rt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c1)+(rt0.c2)) THEN CASE WHEN x'' THEN NULL END ELSE rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c1)+(rt0.c2)) THEN CASE WHEN x'' THEN NULL END ELSE rt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c1)+(rt0.c2)) THEN CASE WHEN x'' THEN NULL END ELSE rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c1)+(rt0.c2)) THEN CASE WHEN x'' THEN NULL END ELSE rt0.c0 COLLATE BINARY END);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c1 COLLATE NOCASE) ORDER BY (((rt0.c0) BETWEEN (0.7173996669659011) AND (rt0.c2)) IN (((rt0.c0)>=(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c0) BETWEEN (0.7173996669659011) AND (rt0.c2)) IN (((rt0.c0)>=(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c1 COLLATE NOCASE) ORDER BY (((rt0.c0) BETWEEN (0.7173996669659011) AND (rt0.c2)) IN (((rt0.c0)>=(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c0) BETWEEN (0.7173996669659011) AND (rt0.c2)) IN (((rt0.c0)>=(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c1 COLLATE NOCASE) ORDER BY (((rt0.c0) BETWEEN (0.7173996669659011) AND (rt0.c2)) IN (((rt0.c0)>=(v0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((- ((('-1183877843') IS TRUE))));
SELECT SUM(count) FROM (SELECT (((- ((('-1183877843') IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- ((('-1183877843') IS TRUE))));
SELECT SUM(count) FROM (SELECT (((- ((('-1183877843') IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- ((('-1183877843') IS TRUE))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0 COLLATE NOCASE)AND((+ ('1254089243')))))AND(UNLIKELY(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE NOCASE)AND((+ ('1254089243')))))AND(UNLIKELY(rt0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0 COLLATE NOCASE)AND((+ ('1254089243')))))AND(UNLIKELY(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE NOCASE)AND((+ ('1254089243')))))AND(UNLIKELY(rt0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0 COLLATE NOCASE)AND((+ ('1254089243')))))AND(UNLIKELY(rt0.c0))));
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2  WHEN CAST(rt0.c2 AS TEXT) THEN ((((((((NULL)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)) WHEN ((((rt0.c2)OR(-1470401884)))OR(rt0.c1)) THEN (rt0.c1 IN ()) WHEN ((x'')=(rt0.c2)) THEN 0.24983461586036837 ELSE rt0.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN CAST(rt0.c2 AS TEXT) THEN ((((((((NULL)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)) WHEN ((((rt0.c2)OR(-1470401884)))OR(rt0.c1)) THEN (rt0.c1 IN ()) WHEN ((x'')==(rt0.c2)) THEN 0.24983461586036837 ELSE rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2  WHEN CAST(rt0.c2 AS TEXT) THEN ((((((((NULL)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)) WHEN ((((rt0.c2)OR(-1470401884)))OR(rt0.c1)) THEN (rt0.c1 IN ()) WHEN ((x'')=(rt0.c2)) THEN 0.24983461586036837 ELSE rt0.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN CAST(rt0.c2 AS TEXT) THEN ((((((((NULL)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)) WHEN ((((rt0.c2)OR(-1470401884)))OR(rt0.c1)) THEN (rt0.c1 IN ()) WHEN ((x'')==(rt0.c2)) THEN 0.24983461586036837 ELSE rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2  WHEN CAST(rt0.c2 AS TEXT) THEN ((((((((NULL)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)) WHEN ((((rt0.c2)OR(-1470401884)))OR(rt0.c1)) THEN (rt0.c1 IN ()) WHEN ((x'')=(rt0.c2)) THEN 0.24983461586036837 ELSE rt0.c2 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (+ ('Fk')) WHERE (((((((((((v0.c0) NOTNULL))AND(rt0.c0)))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c0) BETWEEN (rt0.c2) AND ('-1067554765')))))OR(((rt0.c1)>=(rt0.c0))))) ORDER BY ((((v0.c0) IS TRUE))|((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0) NOTNULL))AND(rt0.c0)))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c0) BETWEEN (rt0.c2) AND ('-1067554765')))))OR(((rt0.c1)>=(rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (+ ('Fk')) ORDER BY ((((v0.c0) IS TRUE))|((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (+ ('Fk')) WHERE (((((((((((v0.c0) NOTNULL))AND(rt0.c0)))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c0) BETWEEN (rt0.c2) AND ('-1067554765')))))OR(((rt0.c1)>=(rt0.c0))))) ORDER BY ((((v0.c0) IS TRUE))|((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0) NOTNULL))AND(rt0.c0)))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c0) BETWEEN (rt0.c2) AND ('-1067554765')))))OR(((rt0.c1)>=(rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (+ ('Fk')) ORDER BY ((((v0.c0) IS TRUE))|((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (+ ('Fk')) WHERE (((((((((((v0.c0) NOTNULL))AND(rt0.c0)))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c0) BETWEEN (rt0.c2) AND ('-1067554765')))))OR(((rt0.c1)>=(rt0.c0))))) ORDER BY ((((v0.c0) IS TRUE))|((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (CASE IFNULL(DISTINCT rt0.c2, rt0.c2)  WHEN (v0.c0 IN ()) THEN ((rt0.c2)<>(rt0.c2)) WHEN rt0.c0 THEN COALESCE(rt0.c0, rt0.c1, rt0.c1, rt0.c2) WHEN ((rt0.c2)=(rt0.c0)) THEN CASE x'f595'  WHEN rt0.c1 THEN v0.c0 ELSE NULL END END) ORDER BY '1505118914'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE IFNULL(DISTINCT rt0.c2, rt0.c2)  WHEN (v0.c0 IN ()) THEN ((rt0.c2)!=(rt0.c2)) WHEN rt0.c0 THEN COALESCE(rt0.c0, rt0.c1, rt0.c1, rt0.c2) WHEN ((rt0.c2)==(rt0.c0)) THEN CASE x'f595'  WHEN rt0.c1 THEN v0.c0 ELSE NULL END END) IS TRUE)  as count FROM v0, rt0 ORDER BY '1505118914'  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (CASE IFNULL(DISTINCT rt0.c2, rt0.c2)  WHEN (v0.c0 IN ()) THEN ((rt0.c2)<>(rt0.c2)) WHEN rt0.c0 THEN COALESCE(rt0.c0, rt0.c1, rt0.c1, rt0.c2) WHEN ((rt0.c2)=(rt0.c0)) THEN CASE x'f595'  WHEN rt0.c1 THEN v0.c0 ELSE NULL END END) ORDER BY '1505118914'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE IFNULL(DISTINCT rt0.c2, rt0.c2)  WHEN (v0.c0 IN ()) THEN ((rt0.c2)!=(rt0.c2)) WHEN rt0.c0 THEN COALESCE(rt0.c0, rt0.c1, rt0.c1, rt0.c2) WHEN ((rt0.c2)==(rt0.c0)) THEN CASE x'f595'  WHEN rt0.c1 THEN v0.c0 ELSE NULL END END) IS TRUE)  as count FROM v0, rt0 ORDER BY '1505118914'  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (CASE IFNULL(DISTINCT rt0.c2, rt0.c2)  WHEN (v0.c0 IN ()) THEN ((rt0.c2)<>(rt0.c2)) WHEN rt0.c0 THEN COALESCE(rt0.c0, rt0.c1, rt0.c1, rt0.c2) WHEN ((rt0.c2)=(rt0.c0)) THEN CASE x'f595'  WHEN rt0.c1 THEN v0.c0 ELSE NULL END END) ORDER BY '1505118914'  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE ((~ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((~ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((~ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END)));
SELECT ALL * FROM v0 INNER JOIN rt0 ON COALESCE(((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c1)), CAST(v0.c0 AS TEXT)) WHERE (RTRIM((NOT (rt0.c0)))) ORDER BY LIKE(CAST(rt0.c0 AS INTEGER), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))) ASC  NULLS LAST, (rt0.c2 COLLATE BINARY IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((NOT (rt0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON COALESCE(((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c1)), CAST(v0.c0 AS TEXT)) ORDER BY LIKE(CAST(rt0.c0 AS INTEGER), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))) ASC  NULLS LAST, (rt0.c2 COLLATE BINARY IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0 INNER JOIN rt0 ON COALESCE(((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c1)), CAST(v0.c0 AS TEXT)) WHERE (RTRIM((NOT (rt0.c0)))) ORDER BY LIKE(CAST(rt0.c0 AS INTEGER), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))) ASC  NULLS LAST, (rt0.c2 COLLATE BINARY IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((NOT (rt0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON COALESCE(((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c1)), CAST(v0.c0 AS TEXT)) ORDER BY LIKE(CAST(rt0.c0 AS INTEGER), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))) ASC  NULLS LAST, (rt0.c2 COLLATE BINARY IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0 INNER JOIN rt0 ON COALESCE(((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c1)), CAST(v0.c0 AS TEXT)) WHERE (RTRIM((NOT (rt0.c0)))) ORDER BY LIKE(CAST(rt0.c0 AS INTEGER), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))) ASC  NULLS LAST, (rt0.c2 COLLATE BINARY IN ()) DESC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE ((- (((rt0.c0) NOTNULL)))) ORDER BY (((NULL)) BETWEEN ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))) AND ((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((NULL)) BETWEEN ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))) AND ((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((- (((rt0.c0) NOTNULL)))) ORDER BY (((NULL)) BETWEEN ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))) AND ((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((NULL)) BETWEEN ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))) AND ((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((- (((rt0.c0) NOTNULL)))) ORDER BY (((NULL)) BETWEEN ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))) AND ((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ ((NULL IN (rt0.c1))))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))&(((rt0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((NULL IN (rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))&(((rt0.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ ((NULL IN (rt0.c1))))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))&(((rt0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((NULL IN (rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))&(((rt0.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ ((NULL IN (rt0.c1))))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))&(((rt0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((- (v0.c0))) ORDER BY CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS TEXT);
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS TEXT));
SELECT ALL * FROM v0 WHERE ((- (v0.c0))) ORDER BY CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS TEXT);
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS TEXT));
SELECT ALL * FROM v0 WHERE ((- (v0.c0))) ORDER BY CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS TEXT);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((((((((((((((v0.c0)OR(rt0.c0)))OR(v0.c0)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c1)))OR(rt0.c0)) IN ())) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((v0.c0)OR(rt0.c0)))OR(v0.c0)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c1)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY '');
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((((((((((((((v0.c0)OR(rt0.c0)))OR(v0.c0)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c1)))OR(rt0.c0)) IN ())) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((v0.c0)OR(rt0.c0)))OR(v0.c0)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c1)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY '');
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((((((((((((((v0.c0)OR(rt0.c0)))OR(v0.c0)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c1)))OR(rt0.c0)) IN ())) ORDER BY '';
SELECT ALL * FROM rt0, v0 WHERE (rt0.c2) ORDER BY NULLIF(CAST(v0.c0 AS TEXT), ((rt0.c2)<<(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY NULLIF(CAST(v0.c0 AS TEXT), ((rt0.c2)<<(rt0.c1))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c2) ORDER BY NULLIF(CAST(v0.c0 AS TEXT), ((rt0.c2)<<(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY NULLIF(CAST(v0.c0 AS TEXT), ((rt0.c2)<<(rt0.c1))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c2) ORDER BY NULLIF(CAST(v0.c0 AS TEXT), ((rt0.c2)<<(rt0.c1))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((NULL)) BETWEEN ((((v0.c0) NOT NULL))) AND ((LOWER(NULL))))) ORDER BY (((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((((((NULL)AND(6.54398416E8)))AND(rt0.c1)), HEX(DISTINCT rt0.c1), ((v0.c0) ISNULL))) AND ((0.12153038880938005, LIKELIHOOD(rt0.c2, 0.6605761078138612), CAST(rt0.c1 AS INTEGER)))) ASC;
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((((v0.c0) NOT NULL))) AND ((LOWER(NULL))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((((((NULL)AND(6.54398416E8)))AND(rt0.c1)), HEX(DISTINCT rt0.c1), ((v0.c0) ISNULL))) AND ((0.12153038880938005, LIKELIHOOD(rt0.c2, 0.6605761078138612), CAST(rt0.c1 AS INTEGER)))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((NULL)) BETWEEN ((((v0.c0) NOT NULL))) AND ((LOWER(NULL))))) ORDER BY (((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((((((NULL)AND(6.54398416E8)))AND(rt0.c1)), HEX(DISTINCT rt0.c1), ((v0.c0) ISNULL))) AND ((0.12153038880938005, LIKELIHOOD(rt0.c2, 0.6605761078138612), CAST(rt0.c1 AS INTEGER)))) ASC;
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((((v0.c0) NOT NULL))) AND ((LOWER(NULL))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((((((NULL)AND(6.54398416E8)))AND(rt0.c1)), HEX(DISTINCT rt0.c1), ((v0.c0) ISNULL))) AND ((0.12153038880938005, LIKELIHOOD(rt0.c2, 0.6605761078138612), CAST(rt0.c1 AS INTEGER)))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((NULL)) BETWEEN ((((v0.c0) NOT NULL))) AND ((LOWER(NULL))))) ORDER BY (((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((((((NULL)AND(6.54398416E8)))AND(rt0.c1)), HEX(DISTINCT rt0.c1), ((v0.c0) ISNULL))) AND ((0.12153038880938005, LIKELIHOOD(rt0.c2, 0.6605761078138612), CAST(rt0.c1 AS INTEGER)))) ASC;
SELECT * FROM rt0 CROSS JOIN v0 ON CASE ((rt0.c1)%(rt0.c0))  WHEN ((rt0.c2)>(rt0.c2)) THEN (+ (rt0.c1)) END WHERE (CAST((x'' IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN ()) AS TEXT)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CASE ((rt0.c1)%(rt0.c0))  WHEN ((rt0.c2)>(rt0.c2)) THEN (+ (rt0.c1)) END);
SELECT * FROM rt0 CROSS JOIN v0 ON CASE ((rt0.c1)%(rt0.c0))  WHEN ((rt0.c2)>(rt0.c2)) THEN (+ (rt0.c1)) END WHERE (CAST((x'' IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN ()) AS TEXT)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CASE ((rt0.c1)%(rt0.c0))  WHEN ((rt0.c2)>(rt0.c2)) THEN (+ (rt0.c1)) END);
SELECT * FROM rt0 CROSS JOIN v0 ON CASE ((rt0.c1)%(rt0.c0))  WHEN ((rt0.c2)>(rt0.c2)) THEN (+ (rt0.c1)) END WHERE (CAST((x'' IN ()) AS TEXT));
SELECT ALL * FROM v0, rt0 WHERE (CASE ((rt0.c1) IS FALSE)  WHEN x'01b9' COLLATE BINARY THEN CASE WHEN v0.c0 THEN rt0.c2 END WHEN ((rt0.c2) NOT NULL) THEN (+ (v0.c0)) WHEN CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN ((((rt0.c1)OR(v0.c0)))OR(rt0.c1)) END) ORDER BY (rt0.c1 COLLATE NOCASE IN ())  NULLS FIRST, ((x'') BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((rt0.c1) IS TRUE))) DESC, (- (((rt0.c1)>=(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) IS FALSE)  WHEN x'01b9' COLLATE BINARY THEN CASE WHEN v0.c0 THEN rt0.c2 END WHEN ((rt0.c2) NOT NULL) THEN (+ (v0.c0)) WHEN CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN ((((rt0.c1)OR(v0.c0)))OR(rt0.c1)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (rt0.c1 COLLATE NOCASE IN ())  NULLS FIRST, ((x'') BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((rt0.c1) IS TRUE))) DESC, (- (((rt0.c1)>=(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (CASE ((rt0.c1) IS FALSE)  WHEN x'01b9' COLLATE BINARY THEN CASE WHEN v0.c0 THEN rt0.c2 END WHEN ((rt0.c2) NOT NULL) THEN (+ (v0.c0)) WHEN CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN ((((rt0.c1)OR(v0.c0)))OR(rt0.c1)) END) ORDER BY (rt0.c1 COLLATE NOCASE IN ())  NULLS FIRST, ((x'') BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((rt0.c1) IS TRUE))) DESC, (- (((rt0.c1)>=(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) IS FALSE)  WHEN x'01b9' COLLATE BINARY THEN CASE WHEN v0.c0 THEN rt0.c2 END WHEN ((rt0.c2) NOT NULL) THEN (+ (v0.c0)) WHEN CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN ((((rt0.c1)OR(v0.c0)))OR(rt0.c1)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (rt0.c1 COLLATE NOCASE IN ())  NULLS FIRST, ((x'') BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((rt0.c1) IS TRUE))) DESC, (- (((rt0.c1)>=(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (CASE ((rt0.c1) IS FALSE)  WHEN x'01b9' COLLATE BINARY THEN CASE WHEN v0.c0 THEN rt0.c2 END WHEN ((rt0.c2) NOT NULL) THEN (+ (v0.c0)) WHEN CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN ((((rt0.c1)OR(v0.c0)))OR(rt0.c1)) END) ORDER BY (rt0.c1 COLLATE NOCASE IN ())  NULLS FIRST, ((x'') BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((rt0.c1) IS TRUE))) DESC, (- (((rt0.c1)>=(rt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))||(CAST(v0.c0 AS TEXT)))) ORDER BY NULLIF(v0.c0, v0.c0) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))||(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY NULLIF(v0.c0, v0.c0) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))||(CAST(v0.c0 AS TEXT)))) ORDER BY NULLIF(v0.c0, v0.c0) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))||(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY NULLIF(v0.c0, v0.c0) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))||(CAST(v0.c0 AS TEXT)))) ORDER BY NULLIF(v0.c0, v0.c0) COLLATE BINARY  NULLS FIRST;
SELECT * FROM v0 WHERE ((((((NOT (v0.c0)))OR(((v0.c0)<<(v0.c0)))))OR(((v0.c0) IS FALSE)))) ORDER BY (((v0.c0 IN (v0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (v0.c0)))OR(((v0.c0)<<(v0.c0)))))OR(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0))) ISNULL));
SELECT * FROM v0 WHERE ((((((NOT (v0.c0)))OR(((v0.c0)<<(v0.c0)))))OR(((v0.c0) IS FALSE)))) ORDER BY (((v0.c0 IN (v0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (v0.c0)))OR(((v0.c0)<<(v0.c0)))))OR(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0))) ISNULL));
SELECT * FROM v0 WHERE ((((((NOT (v0.c0)))OR(((v0.c0)<<(v0.c0)))))OR(((v0.c0) IS FALSE)))) ORDER BY (((v0.c0 IN (v0.c0))) ISNULL);
SELECT COUNT(*) FROM v0 WHERE (((load_extension(v0.c0)) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((v0.c0 IN ())))) ORDER BY 0.13674584870115136 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(v0.c0)) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY 0.13674584870115136 DESC);
SELECT COUNT(*) FROM v0 WHERE (((load_extension(v0.c0)) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((v0.c0 IN ())))) ORDER BY 0.13674584870115136 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(v0.c0)) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY 0.13674584870115136 DESC);
SELECT COUNT(*) FROM v0 WHERE (((load_extension(v0.c0)) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((v0.c0 IN ())))) ORDER BY 0.13674584870115136 DESC;
SELECT * FROM v0 CROSS JOIN rt0 ON (NOT ((((rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c0))>((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c1))))) WHERE (((x'')>=(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')>=(rt0.c2))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (NOT ((((rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c0))>((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c1))))));
SELECT * FROM v0 CROSS JOIN rt0 ON (NOT ((((rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c0))>((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c1))))) WHERE (((x'')>=(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')>=(rt0.c2))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (NOT ((((rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c0))>((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c1))))));
SELECT * FROM v0 CROSS JOIN rt0 ON (NOT ((((rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c0))>((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c1))))) WHERE (((x'')>=(rt0.c2)));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))) NOTNULL)) ORDER BY (((rt0.c2 COLLATE NOCASE))==((rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 COLLATE NOCASE))==((rt0.c1))) DESC);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))) NOTNULL)) ORDER BY (((rt0.c2 COLLATE NOCASE))==((rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 COLLATE NOCASE))==((rt0.c1))) DESC);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))) NOTNULL)) ORDER BY (((rt0.c2 COLLATE NOCASE))==((rt0.c1))) DESC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>=(rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>=(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>=(rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>=(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>=(rt0.c2))) NOT NULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((x'' COLLATE NOCASE)AND((NOT (2.16088859E8))))) ORDER BY CASE ((v0.c0)IS(v0.c0))  WHEN '216088859' THEN ((v0.c0) IS FALSE) ELSE v0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE NOCASE)AND((NOT (2.16088859E8))))) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0)IS(v0.c0))  WHEN '216088859' THEN ((v0.c0) IS FALSE) ELSE v0.c0 END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((x'' COLLATE NOCASE)AND((NOT (2.16088859E8))))) ORDER BY CASE ((v0.c0)IS(v0.c0))  WHEN '216088859' THEN ((v0.c0) IS FALSE) ELSE v0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE NOCASE)AND((NOT (2.16088859E8))))) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0)IS(v0.c0))  WHEN '216088859' THEN ((v0.c0) IS FALSE) ELSE v0.c0 END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((x'' COLLATE NOCASE)AND((NOT (2.16088859E8))))) ORDER BY CASE ((v0.c0)IS(v0.c0))  WHEN '216088859' THEN ((v0.c0) IS FALSE) ELSE v0.c0 END DESC  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE ((NOT (IFNULL(rt0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (IFNULL(rt0.c0, v0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((NOT (IFNULL(rt0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (IFNULL(rt0.c0, v0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((NOT (IFNULL(rt0.c0, v0.c0))));
SELECT * FROM rt0 WHERE (((NULLIF(DISTINCT rt0.c1, rt0.c1))IS NOT(((rt0.c1)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT rt0.c1, rt0.c1))IS NOT(((rt0.c1)AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((NULLIF(DISTINCT rt0.c1, rt0.c1))IS NOT(((rt0.c1)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT rt0.c1, rt0.c1))IS NOT(((rt0.c1)AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((NULLIF(DISTINCT rt0.c1, rt0.c1))IS NOT(((rt0.c1)AND(rt0.c2)))));
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS INTEGER) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS INTEGER) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c0 IN (rt0.c2)) IN ())) ORDER BY CASE WHEN ((v0.c0) BETWEEN ('-1811210580') AND ('1xm뼚27i')) THEN ((rt0.c0) ISNULL) ELSE ((rt0.c2)+(rt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN (rt0.c2)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY CASE WHEN ((v0.c0) BETWEEN ('-1811210580') AND ('1xm뼚27i')) THEN ((rt0.c0) ISNULL) ELSE ((rt0.c2)+(rt0.c1)) END  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c0 IN (rt0.c2)) IN ())) ORDER BY CASE WHEN ((v0.c0) BETWEEN ('-1811210580') AND ('1xm뼚27i')) THEN ((rt0.c0) ISNULL) ELSE ((rt0.c2)+(rt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN (rt0.c2)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY CASE WHEN ((v0.c0) BETWEEN ('-1811210580') AND ('1xm뼚27i')) THEN ((rt0.c0) ISNULL) ELSE ((rt0.c2)+(rt0.c1)) END  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c0 IN (rt0.c2)) IN ())) ORDER BY CASE WHEN ((v0.c0) BETWEEN ('-1811210580') AND ('1xm뼚27i')) THEN ((rt0.c0) ISNULL) ELSE ((rt0.c2)+(rt0.c1)) END  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(TRIM(DISTINCT rt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT rt0.c0) AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(TRIM(DISTINCT rt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT rt0.c0) AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(TRIM(DISTINCT rt0.c0) AS REAL));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM) ORDER BY (((v0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((v0.c0)))  NULLS FIRST, (((NOT (v0.c0)))+(v0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((v0.c0)))  NULLS FIRST, (((NOT (v0.c0)))+(v0.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM) ORDER BY (((v0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((v0.c0)))  NULLS FIRST, (((NOT (v0.c0)))+(v0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((v0.c0)))  NULLS FIRST, (((NOT (v0.c0)))+(v0.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM) ORDER BY (((v0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((v0.c0)))  NULLS FIRST, (((NOT (v0.c0)))+(v0.c0 COLLATE BINARY)) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) NOTNULL));
SELECT ALL * FROM v0, rt0 WHERE (((CASE rt0.c0  WHEN NULL THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN (UNLIKELY(v0.c0)) AND (((rt0.c1)!=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN NULL THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN (UNLIKELY(v0.c0)) AND (((rt0.c1)<>(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((CASE rt0.c0  WHEN NULL THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN (UNLIKELY(v0.c0)) AND (((rt0.c1)!=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN NULL THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN (UNLIKELY(v0.c0)) AND (((rt0.c1)<>(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((CASE rt0.c0  WHEN NULL THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN (UNLIKELY(v0.c0)) AND (((rt0.c1)!=(rt0.c2)))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (CAST(v0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY ((((x'') NOT NULL))<<(CAST('' AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON rt0.c1 ORDER BY ((((x'') NOT NULL))<<(CAST('' AS REAL))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (CAST(v0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY ((((x'') NOT NULL))<<(CAST('' AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON rt0.c1 ORDER BY ((((x'') NOT NULL))<<(CAST('' AS REAL))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (CAST(v0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY ((((x'') NOT NULL))<<(CAST('' AS REAL)));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((v0.c0)IS NOT('-1922195225')))||(((((rt0.c0)OR(rt0.c0)))AND(v0.c0)))) WHERE (x'c179d855') ORDER BY -2.13434187E9 ASC, ((((x'')AND(v0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'c179d855') IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((v0.c0)IS NOT('-1922195225')))||(((((rt0.c0)OR(rt0.c0)))AND(v0.c0)))) ORDER BY -2.13434187E9 ASC, ((((x'')AND(v0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt0.c1)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((v0.c0)IS NOT('-1922195225')))||(((((rt0.c0)OR(rt0.c0)))AND(v0.c0)))) WHERE (x'c179d855') ORDER BY -2.13434187E9 ASC, ((((x'')AND(v0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'c179d855') IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((v0.c0)IS NOT('-1922195225')))||(((((rt0.c0)OR(rt0.c0)))AND(v0.c0)))) ORDER BY -2.13434187E9 ASC, ((((x'')AND(v0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt0.c1)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((v0.c0)IS NOT('-1922195225')))||(((((rt0.c0)OR(rt0.c0)))AND(v0.c0)))) WHERE (x'c179d855') ORDER BY -2.13434187E9 ASC, ((((x'')AND(v0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt0.c1)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 NOT INDEXED WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 NOT INDEXED WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 NOT INDEXED WHERE ('');
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((((((((((x'')AND(rt0.c2)))OR(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))IS NOT(((rt0.c1)%(rt0.c0)))) WHERE (NULL) ORDER BY v0.c0  NULLS LAST, x'' DESC, (CAST(rt0.c0 AS BLOB) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((((((((x'')AND(rt0.c2)))OR(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))IS NOT(((rt0.c1)%(rt0.c0)))) ORDER BY v0.c0  NULLS LAST, x'' DESC, (CAST(rt0.c0 AS BLOB) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((((((((((x'')AND(rt0.c2)))OR(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))IS NOT(((rt0.c1)%(rt0.c0)))) WHERE (NULL) ORDER BY v0.c0  NULLS LAST, x'' DESC, (CAST(rt0.c0 AS BLOB) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((((((((x'')AND(rt0.c2)))OR(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))IS NOT(((rt0.c1)%(rt0.c0)))) ORDER BY v0.c0  NULLS LAST, x'' DESC, (CAST(rt0.c0 AS BLOB) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((((((((((x'')AND(rt0.c2)))OR(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))IS NOT(((rt0.c1)%(rt0.c0)))) WHERE (NULL) ORDER BY v0.c0  NULLS LAST, x'' DESC, (CAST(rt0.c0 AS BLOB) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((((rt0.c2)-(rt0.c2)))=(((rt0.c2)<=(rt0.c1)))) WHERE (((((((((((v0.c0)||(rt0.c1)))AND(0x66504117)))AND(((v0.c0) NOT NULL))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END)))OR(((rt0.c1)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)||(rt0.c1)))AND(0x66504117)))AND(((v0.c0) NOT NULL))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END)))OR(((rt0.c1)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c2)-(rt0.c2)))==(((rt0.c2)<=(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((((rt0.c2)-(rt0.c2)))=(((rt0.c2)<=(rt0.c1)))) WHERE (((((((((((v0.c0)||(rt0.c1)))AND(0x66504117)))AND(((v0.c0) NOT NULL))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END)))OR(((rt0.c1)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)||(rt0.c1)))AND(0x66504117)))AND(((v0.c0) NOT NULL))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END)))OR(((rt0.c1)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c2)-(rt0.c2)))==(((rt0.c2)<=(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((((rt0.c2)-(rt0.c2)))=(((rt0.c2)<=(rt0.c1)))) WHERE (((((((((((v0.c0)||(rt0.c1)))AND(0x66504117)))AND(((v0.c0) NOT NULL))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END)))OR(((rt0.c1)OR(rt0.c0)))));
SELECT * FROM rt0 NATURAL JOIN v0 WHERE ((((x'' IN ())) NOT BETWEEN ('0.6195149647504871') AND (((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ())) NOT BETWEEN ('0.6195149647504871') AND (((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE ((((x'' IN ())) NOT BETWEEN ('0.6195149647504871') AND (((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ())) NOT BETWEEN ('0.6195149647504871') AND (((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE ((((x'' IN ())) NOT BETWEEN ('0.6195149647504871') AND (((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON CASE NULLIF(rt0.c1, rt0.c2)  WHEN rt0.c0 THEN (- (v0.c0)) ELSE (NOT (rt0.c1)) END WHERE ((NOT (rt0.c0)) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((('F%FeX' IN (rt0.c2))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE NULLIF(rt0.c1, rt0.c2)  WHEN rt0.c0 THEN (- (v0.c0)) ELSE (NOT (rt0.c1)) END ORDER BY ((('F%FeX' IN (rt0.c2))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON CASE NULLIF(rt0.c1, rt0.c2)  WHEN rt0.c0 THEN (- (v0.c0)) ELSE (NOT (rt0.c1)) END WHERE ((NOT (rt0.c0)) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((('F%FeX' IN (rt0.c2))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE NULLIF(rt0.c1, rt0.c2)  WHEN rt0.c0 THEN (- (v0.c0)) ELSE (NOT (rt0.c1)) END ORDER BY ((('F%FeX' IN (rt0.c2))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON CASE NULLIF(rt0.c1, rt0.c2)  WHEN rt0.c0 THEN (- (v0.c0)) ELSE (NOT (rt0.c1)) END WHERE ((NOT (rt0.c0)) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((('F%FeX' IN (rt0.c2))) IS FALSE)  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (CAST(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER)) ORDER BY CASE x''  WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (~ (rt0.c1)) ELSE rt0.c2 COLLATE BINARY END DESC  NULLS LAST, CASE WHEN (+ (v0.c0)) THEN x'' ELSE ((rt0.c1) BETWEEN ('-1974778139') AND (rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE x''  WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (~ (rt0.c1)) ELSE rt0.c2 COLLATE BINARY END DESC  NULLS LAST, CASE WHEN (+ (v0.c0)) THEN x'' ELSE ((rt0.c1) BETWEEN ('-1974778139') AND (rt0.c0)) END DESC);
SELECT * FROM rt0, v0 WHERE (CAST(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER)) ORDER BY CASE x''  WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (~ (rt0.c1)) ELSE rt0.c2 COLLATE BINARY END DESC  NULLS LAST, CASE WHEN (+ (v0.c0)) THEN x'' ELSE ((rt0.c1) BETWEEN ('-1974778139') AND (rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE x''  WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (~ (rt0.c1)) ELSE rt0.c2 COLLATE BINARY END DESC  NULLS LAST, CASE WHEN (+ (v0.c0)) THEN x'' ELSE ((rt0.c1) BETWEEN ('-1974778139') AND (rt0.c0)) END DESC);
SELECT * FROM rt0, v0 WHERE (CAST(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER)) ORDER BY CASE x''  WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (~ (rt0.c1)) ELSE rt0.c2 COLLATE BINARY END DESC  NULLS LAST, CASE WHEN (+ (v0.c0)) THEN x'' ELSE ((rt0.c1) BETWEEN ('-1974778139') AND (rt0.c0)) END DESC;
SELECT ALL * FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (v0.c0);
SELECT * FROM rt0, v0 WHERE (((rt0.c2)IS NOT(HEX(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)IS NOT(HEX(v0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((rt0.c2)IS NOT(HEX(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)IS NOT(HEX(v0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((rt0.c2)IS NOT(HEX(v0.c0))));
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY HEX(((((((((v0.c0)OR(v0.c0)))OR('858965243')))OR(x'')))AND(v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY HEX(((((((((v0.c0)OR(v0.c0)))OR('858965243')))OR(x'')))AND(v0.c0))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY HEX(((((((((v0.c0)OR(v0.c0)))OR('858965243')))OR(x'')))AND(v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY HEX(((((((((v0.c0)OR(v0.c0)))OR('858965243')))OR(x'')))AND(v0.c0))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY HEX(((((((((v0.c0)OR(v0.c0)))OR('858965243')))OR(x'')))AND(v0.c0))) ASC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE ((((((((((((((+ (v0.c0)))OR((rt0.c1 IN ()))))AND((('-1183877843')||('964641441')))))AND(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))))AND(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))))AND((((rt0.c0))=((rt0.c2))))))OR(((rt0.c2)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((+ (v0.c0)))OR((rt0.c1 IN ()))))AND((('-1183877843')||('964641441')))))AND(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))))AND(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))))AND((((rt0.c0))=((rt0.c2))))))OR(((rt0.c2)<<(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((((((((((+ (v0.c0)))OR((rt0.c1 IN ()))))AND((('-1183877843')||('964641441')))))AND(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))))AND(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))))AND((((rt0.c0))=((rt0.c2))))))OR(((rt0.c2)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((+ (v0.c0)))OR((rt0.c1 IN ()))))AND((('-1183877843')||('964641441')))))AND(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))))AND(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))))AND((((rt0.c0))=((rt0.c2))))))OR(((rt0.c2)<<(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((((((((((+ (v0.c0)))OR((rt0.c1 IN ()))))AND((('-1183877843')||('964641441')))))AND(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))))AND(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))))AND((((rt0.c0))=((rt0.c2))))))OR(((rt0.c2)<<(rt0.c2)))));
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY (('344432068') IS FALSE), (NOT (((v0.c0)&(v0.c0)))) DESC, v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (('344432068') IS FALSE), (NOT (((v0.c0)&(v0.c0)))) DESC, v0.c0 ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY (('344432068') IS FALSE), (NOT (((v0.c0)&(v0.c0)))) DESC, v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (('344432068') IS FALSE), (NOT (((v0.c0)&(v0.c0)))) DESC, v0.c0 ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY (('344432068') IS FALSE), (NOT (((v0.c0)&(v0.c0)))) DESC, v0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT NULL))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT NULL))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT NULL))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL * FROM rt0, v0 WHERE (((CASE '0.4899946701245331'  WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR(COALESCE(rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE '0.4899946701245331'  WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR(COALESCE(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((CASE '0.4899946701245331'  WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR(COALESCE(rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE '0.4899946701245331'  WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR(COALESCE(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((CASE '0.4899946701245331'  WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR(COALESCE(rt0.c2, rt0.c0))));
SELECT ALL * FROM v0, rt0 WHERE (LOWER(DISTINCT rt0.c1)) ORDER BY ((((CAST(rt0.c0 AS NUMERIC))OR(((x'')%(rt0.c2)))))OR(((v0.c0) IS TRUE))), (('675844289')IS(CAST(rt0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT rt0.c1)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CAST(rt0.c0 AS NUMERIC))OR(((x'')%(rt0.c2)))))OR(((v0.c0) IS TRUE))), (('675844289')IS(CAST(rt0.c1 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (LOWER(DISTINCT rt0.c1)) ORDER BY ((((CAST(rt0.c0 AS NUMERIC))OR(((x'')%(rt0.c2)))))OR(((v0.c0) IS TRUE))), (('675844289')IS(CAST(rt0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT rt0.c1)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CAST(rt0.c0 AS NUMERIC))OR(((x'')%(rt0.c2)))))OR(((v0.c0) IS TRUE))), (('675844289')IS(CAST(rt0.c1 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (LOWER(DISTINCT rt0.c1)) ORDER BY ((((CAST(rt0.c0 AS NUMERIC))OR(((x'')%(rt0.c2)))))OR(((v0.c0) IS TRUE))), (('675844289')IS(CAST(rt0.c1 AS TEXT)))  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((UNLIKELY(DISTINCT rt0.c1)) BETWEEN (((rt0.c2) NOTNULL)) AND ((((v0.c0))<>((rt0.c2))))) WHERE ((((rt0.c2 IN (rt0.c1))) ISNULL)) ORDER BY ((rt0.c1) NOT BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((UNLIKELY(DISTINCT rt0.c1)) BETWEEN (((rt0.c2) NOTNULL)) AND ((((v0.c0))!=((rt0.c2))))) ORDER BY ((rt0.c1) NOT BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((NOT (rt0.c0)))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((UNLIKELY(DISTINCT rt0.c1)) BETWEEN (((rt0.c2) NOTNULL)) AND ((((v0.c0))<>((rt0.c2))))) WHERE ((((rt0.c2 IN (rt0.c1))) ISNULL)) ORDER BY ((rt0.c1) NOT BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((UNLIKELY(DISTINCT rt0.c1)) BETWEEN (((rt0.c2) NOTNULL)) AND ((((v0.c0))!=((rt0.c2))))) ORDER BY ((rt0.c1) NOT BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((NOT (rt0.c0)))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((UNLIKELY(DISTINCT rt0.c1)) BETWEEN (((rt0.c2) NOTNULL)) AND ((((v0.c0))<>((rt0.c2))))) WHERE ((((rt0.c2 IN (rt0.c1))) ISNULL)) ORDER BY ((rt0.c1) NOT BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((NOT (rt0.c0))));
SELECT * FROM rt0, v0 WHERE ((((((v0.c0)>>(v0.c0))))>=((((0.1710380727301165)LIKE(rt0.c2)))))) ORDER BY ((((rt0.c2) NOTNULL)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)>>(v0.c0))))>=((((0.1710380727301165)LIKE(rt0.c2)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2) NOTNULL)) NOT NULL) ASC);
SELECT * FROM rt0, v0 WHERE ((((((v0.c0)>>(v0.c0))))>=((((0.1710380727301165)LIKE(rt0.c2)))))) ORDER BY ((((rt0.c2) NOTNULL)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)>>(v0.c0))))>=((((0.1710380727301165)LIKE(rt0.c2)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2) NOTNULL)) NOT NULL) ASC);
SELECT * FROM rt0, v0 WHERE ((((((v0.c0)>>(v0.c0))))>=((((0.1710380727301165)LIKE(rt0.c2)))))) ORDER BY ((((rt0.c2) NOTNULL)) NOT NULL) ASC;
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN rt0.c2 COLLATE BINARY THEN v0.c0 COLLATE BINARY WHEN ((rt0.c2)IS(rt0.c1)) THEN ((((rt0.c1)AND(rt0.c0)))AND(v0.c0)) WHEN (rt0.c0 IN ()) THEN x'' ELSE CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 COLLATE BINARY THEN v0.c0 COLLATE BINARY WHEN ((rt0.c2)IS(rt0.c1)) THEN ((((rt0.c1)AND(rt0.c0)))AND(v0.c0)) WHEN (rt0.c0 IN ()) THEN x'' ELSE CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN rt0.c2 COLLATE BINARY THEN v0.c0 COLLATE BINARY WHEN ((rt0.c2)IS(rt0.c1)) THEN ((((rt0.c1)AND(rt0.c0)))AND(v0.c0)) WHEN (rt0.c0 IN ()) THEN x'' ELSE CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 COLLATE BINARY THEN v0.c0 COLLATE BINARY WHEN ((rt0.c2)IS(rt0.c1)) THEN ((((rt0.c1)AND(rt0.c0)))AND(v0.c0)) WHEN (rt0.c0 IN ()) THEN x'' ELSE CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN rt0.c2 COLLATE BINARY THEN v0.c0 COLLATE BINARY WHEN ((rt0.c2)IS(rt0.c1)) THEN ((((rt0.c1)AND(rt0.c0)))AND(v0.c0)) WHEN (rt0.c0 IN ()) THEN x'' ELSE CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TRIM(CAST(v0.c0 AS REAL))) ORDER BY COALESCE(((rt0.c2) IS TRUE), ((rt0.c1) ISNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM v0, rt0 ORDER BY COALESCE(((rt0.c2) IS TRUE), ((rt0.c1) ISNULL)) ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TRIM(CAST(v0.c0 AS REAL))) ORDER BY COALESCE(((rt0.c2) IS TRUE), ((rt0.c1) ISNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM v0, rt0 ORDER BY COALESCE(((rt0.c2) IS TRUE), ((rt0.c1) ISNULL)) ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TRIM(CAST(v0.c0 AS REAL))) ORDER BY COALESCE(((rt0.c2) IS TRUE), ((rt0.c1) ISNULL)) ASC;
SELECT ALL * FROM v0, rt0 WHERE ((+ ((((rt0.c1, rt0.c1, rt0.c0))!=((rt0.c2, rt0.c1, 0xffffffffec6790bf))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c1, rt0.c1, rt0.c0))!=((rt0.c2, rt0.c1, 0Xffffffffec6790bf)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((+ ((((rt0.c1, rt0.c1, rt0.c0))!=((rt0.c2, rt0.c1, 0xffffffffec6790bf))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c1, rt0.c1, rt0.c0))!=((rt0.c2, rt0.c1, 0Xffffffffec6790bf)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((+ ((((rt0.c1, rt0.c1, rt0.c0))!=((rt0.c2, rt0.c1, 0xffffffffec6790bf))))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN 0.8945699358927297 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c1) IS FALSE) END) ORDER BY ((rt0.c2) BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c0 THEN 0.8945699358927297 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN 0.8945699358927297 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c1) IS FALSE) END) ORDER BY ((rt0.c2) BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c0 THEN 0.8945699358927297 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN 0.8945699358927297 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c1) IS FALSE) END) ORDER BY ((rt0.c2) BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((((v0.c0) NOTNULL)))>(((v0.c0 IN (-2.078101878E9)))))) ORDER BY ((v0.c0 COLLATE NOCASE) BETWEEN (((v0.c0) IS FALSE)) AND (CAST(v0.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOTNULL)))>(((v0.c0 IN (-2.078101878E9)))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE) BETWEEN (((v0.c0) IS FALSE)) AND (CAST(v0.c0 AS REAL)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((v0.c0) NOTNULL)))>(((v0.c0 IN (-2.078101878E9)))))) ORDER BY ((v0.c0 COLLATE NOCASE) BETWEEN (((v0.c0) IS FALSE)) AND (CAST(v0.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOTNULL)))>(((v0.c0 IN (-2.078101878E9)))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE) BETWEEN (((v0.c0) IS FALSE)) AND (CAST(v0.c0 AS REAL)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((v0.c0) NOTNULL)))>(((v0.c0 IN (-2.078101878E9)))))) ORDER BY ((v0.c0 COLLATE NOCASE) BETWEEN (((v0.c0) IS FALSE)) AND (CAST(v0.c0 AS REAL)))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (json(CASE WHEN v0.c0 THEN v0.c0 END)) ORDER BY ((('d}wG' IN (v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS REAL))), v0.c0 DESC  NULLS LAST, (+ (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json(CASE WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0 ORDER BY ((('d}wG' IN (v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS REAL))), v0.c0 DESC  NULLS LAST, (+ (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (json(CASE WHEN v0.c0 THEN v0.c0 END)) ORDER BY ((('d}wG' IN (v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS REAL))), v0.c0 DESC  NULLS LAST, (+ (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json(CASE WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0 ORDER BY ((('d}wG' IN (v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS REAL))), v0.c0 DESC  NULLS LAST, (+ (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (json(CASE WHEN v0.c0 THEN v0.c0 END)) ORDER BY ((('d}wG' IN (v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS REAL))), v0.c0 DESC  NULLS LAST, (+ (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)GLOB(v0.c0)))AND(((v0.c0) IS TRUE))))AND('0.7173996669659011')))AND((v0.c0 IN ()))))AND((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)GLOB(v0.c0)))AND(((v0.c0) IS TRUE))))AND('0.7173996669659011')))AND((v0.c0 IN ()))))AND((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)GLOB(v0.c0)))AND(((v0.c0) IS TRUE))))AND('0.7173996669659011')))AND((v0.c0 IN ()))))AND((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)GLOB(v0.c0)))AND(((v0.c0) IS TRUE))))AND('0.7173996669659011')))AND((v0.c0 IN ()))))AND((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)GLOB(v0.c0)))AND(((v0.c0) IS TRUE))))AND('0.7173996669659011')))AND((v0.c0 IN ()))))AND((- (v0.c0)))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)|(rt0.c0)))%(('#s\r' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)|(rt0.c0)))%(('#s\r' IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)|(rt0.c0)))%(('#s\r' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)|(rt0.c0)))%(('#s\r' IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)|(rt0.c0)))%(('#s\r' IN ()))));
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((((((rt0.c0 COLLATE NOCASE)AND(LIKELIHOOD(rt0.c2, 0.9257216734345107))))OR((~ (NULL)))))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))))OR(0.6753334154813403)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0 COLLATE NOCASE)AND(LIKELIHOOD(rt0.c2, 0.9257216734345107))))OR((~ (NULL)))))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))))OR(0.6753334154813403))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((((((rt0.c0 COLLATE NOCASE)AND(LIKELIHOOD(rt0.c2, 0.9257216734345107))))OR((~ (NULL)))))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))))OR(0.6753334154813403)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0 COLLATE NOCASE)AND(LIKELIHOOD(rt0.c2, 0.9257216734345107))))OR((~ (NULL)))))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))))OR(0.6753334154813403))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((((((rt0.c0 COLLATE NOCASE)AND(LIKELIHOOD(rt0.c2, 0.9257216734345107))))OR((~ (NULL)))))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))))OR(0.6753334154813403)));
SELECT * FROM rt0, v0 WHERE (CASE WHEN UPPER(v0.c0) THEN ((rt0.c0)<<('1183417141')) WHEN v0.c0 THEN ((rt0.c0) BETWEEN ('') AND (rt0.c0)) WHEN ((rt0.c2) IS TRUE) THEN rt0.c0 ELSE '໢|r' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN UPPER(v0.c0) THEN ((rt0.c0)<<('1183417141')) WHEN v0.c0 THEN ((rt0.c0) BETWEEN ('') AND (rt0.c0)) WHEN ((rt0.c2) IS TRUE) THEN rt0.c0 ELSE '໢|r' END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE WHEN UPPER(v0.c0) THEN ((rt0.c0)<<('1183417141')) WHEN v0.c0 THEN ((rt0.c0) BETWEEN ('') AND (rt0.c0)) WHEN ((rt0.c2) IS TRUE) THEN rt0.c0 ELSE '໢|r' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN UPPER(v0.c0) THEN ((rt0.c0)<<('1183417141')) WHEN v0.c0 THEN ((rt0.c0) BETWEEN ('') AND (rt0.c0)) WHEN ((rt0.c2) IS TRUE) THEN rt0.c0 ELSE '໢|r' END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE WHEN UPPER(v0.c0) THEN ((rt0.c0)<<('1183417141')) WHEN v0.c0 THEN ((rt0.c0) BETWEEN ('') AND (rt0.c0)) WHEN ((rt0.c2) IS TRUE) THEN rt0.c0 ELSE '໢|r' END);
SELECT ALL * FROM rt0 WHERE (CAST(LOWER(DISTINCT rt0.c0) AS BLOB)) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(DISTINCT rt0.c0) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(LOWER(DISTINCT rt0.c0) AS BLOB)) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(DISTINCT rt0.c0) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(LOWER(DISTINCT rt0.c0) AS BLOB)) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ORDER BY ((((rt0.c0)>=(rt0.c1)))*((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 NOT INDEXED, v0 ORDER BY ((((rt0.c0)>=(rt0.c1)))*((rt0.c1 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ORDER BY ((((rt0.c0)>=(rt0.c1)))*((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 NOT INDEXED, v0 ORDER BY ((((rt0.c0)>=(rt0.c1)))*((rt0.c1 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ORDER BY ((((rt0.c0)>=(rt0.c1)))*((rt0.c1 IN ())))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((+ (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((+ (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((+ (rt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)==(((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)==(((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)==(((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)==(((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)==(((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE) DESC;
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (UNLIKELY(DISTINCT rt0.c2 COLLATE RTRIM)) ORDER BY JULIANDAY((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c1, rt0.c2))), rt0.c1, ((NULL)%(rt0.c0)))  NULLS LAST, ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c0))) AND (((1.57652849E9) NOT BETWEEN (rt0.c2) AND (x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY JULIANDAY((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c1, rt0.c2))), rt0.c1, ((NULL)%(rt0.c0)))  NULLS LAST, ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c0))) AND (((1.57652849E9) NOT BETWEEN (rt0.c2) AND (x'')))) DESC);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (UNLIKELY(DISTINCT rt0.c2 COLLATE RTRIM)) ORDER BY JULIANDAY((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c1, rt0.c2))), rt0.c1, ((NULL)%(rt0.c0)))  NULLS LAST, ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c0))) AND (((1.57652849E9) NOT BETWEEN (rt0.c2) AND (x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY JULIANDAY((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c1, rt0.c2))), rt0.c1, ((NULL)%(rt0.c0)))  NULLS LAST, ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c0))) AND (((1.57652849E9) NOT BETWEEN (rt0.c2) AND (x'')))) DESC);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (UNLIKELY(DISTINCT rt0.c2 COLLATE RTRIM)) ORDER BY JULIANDAY((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c1, rt0.c2))), rt0.c1, ((NULL)%(rt0.c0)))  NULLS LAST, ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c0))) AND (((1.57652849E9) NOT BETWEEN (rt0.c2) AND (x'')))) DESC;
SELECT * FROM rt0 WHERE (CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) AS INTEGER));
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM rt0 NOT INDEXED FULL OUTER JOIN v0 ON ((((NULL) BETWEEN (0.5663784025748313) AND (rt0.c0)))>>(((rt0.c0)IS(rt0.c0)))) WHERE (json_remove((NOT (v0.c0)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((NOT (v0.c0)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((NULL) BETWEEN (0.5663784025748313) AND (rt0.c0)))>>(((rt0.c0)IS(rt0.c0)))));
SELECT COUNT(*) FROM rt0 NOT INDEXED FULL OUTER JOIN v0 ON ((((NULL) BETWEEN (0.5663784025748313) AND (rt0.c0)))>>(((rt0.c0)IS(rt0.c0)))) WHERE (json_remove((NOT (v0.c0)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((NOT (v0.c0)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((NULL) BETWEEN (0.5663784025748313) AND (rt0.c0)))>>(((rt0.c0)IS(rt0.c0)))));
SELECT COUNT(*) FROM rt0 NOT INDEXED FULL OUTER JOIN v0 ON ((((NULL) BETWEEN (0.5663784025748313) AND (rt0.c0)))>>(((rt0.c0)IS(rt0.c0)))) WHERE (json_remove((NOT (v0.c0)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY 7.43190767E8 COLLATE BINARY COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY 7.43190767E8 COLLATE BINARY COLLATE RTRIM DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY 7.43190767E8 COLLATE BINARY COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY 7.43190767E8 COLLATE BINARY COLLATE RTRIM DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY 7.43190767E8 COLLATE BINARY COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (INSTR(0.24681846864017332, (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ORDER BY (((NOT ('1576528490')))>=(((rt0.c2)>=(rt0.c1)))) DESC  NULLS LAST, (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c2, rt0.c2, v0.c0))<((rt0.c1, rt0.c2, rt0.c1))), ((rt0.c0) ISNULL), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) AND ((((v0.c0)<=(rt0.c1)), rt0.c2, CAST(v0.c0 AS INTEGER)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(0.24681846864017332, (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((NOT ('1576528490')))>=(((rt0.c2)>=(rt0.c1)))) DESC  NULLS LAST, (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c2, rt0.c2, v0.c0))<((rt0.c1, rt0.c2, rt0.c1))), ((rt0.c0) ISNULL), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) AND ((((v0.c0)<=(rt0.c1)), rt0.c2, CAST(v0.c0 AS INTEGER)))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (INSTR(0.24681846864017332, (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ORDER BY (((NOT ('1576528490')))>=(((rt0.c2)>=(rt0.c1)))) DESC  NULLS LAST, (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c2, rt0.c2, v0.c0))<((rt0.c1, rt0.c2, rt0.c1))), ((rt0.c0) ISNULL), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) AND ((((v0.c0)<=(rt0.c1)), rt0.c2, CAST(v0.c0 AS INTEGER)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(0.24681846864017332, (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((NOT ('1576528490')))>=(((rt0.c2)>=(rt0.c1)))) DESC  NULLS LAST, (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c2, rt0.c2, v0.c0))<((rt0.c1, rt0.c2, rt0.c1))), ((rt0.c0) ISNULL), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) AND ((((v0.c0)<=(rt0.c1)), rt0.c2, CAST(v0.c0 AS INTEGER)))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (INSTR(0.24681846864017332, (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ORDER BY (((NOT ('1576528490')))>=(((rt0.c2)>=(rt0.c1)))) DESC  NULLS LAST, (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c2, rt0.c2, v0.c0))<((rt0.c1, rt0.c2, rt0.c1))), ((rt0.c0) ISNULL), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) AND ((((v0.c0)<=(rt0.c1)), rt0.c2, CAST(v0.c0 AS INTEGER)))) ASC;
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>((v0.c0 IN ()))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)|(rt0.c0)))<(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)|(rt0.c0)))<(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)|(rt0.c0)))<(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)|(rt0.c0)))<(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)|(rt0.c0)))<(rt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 WHERE (UPPER((+ (x'')))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((+ (x'')))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC);
SELECT COUNT(*) FROM rt0 WHERE (UPPER((+ (x'')))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((+ (x'')))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC);
SELECT COUNT(*) FROM rt0 WHERE (UPPER((+ (x'')))) ORDER BY rt0.c0 ASC;
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS BLOB))AND(rt0.c0 COLLATE BINARY)))OR((~ (NULL))))) ORDER BY CAST((+ (rt0.c2)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS BLOB))AND(rt0.c0 COLLATE BINARY)))OR((~ (NULL))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ (rt0.c2)) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS BLOB))AND(rt0.c0 COLLATE BINARY)))OR((~ (NULL))))) ORDER BY CAST((+ (rt0.c2)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS BLOB))AND(rt0.c0 COLLATE BINARY)))OR((~ (NULL))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ (rt0.c2)) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS BLOB))AND(rt0.c0 COLLATE BINARY)))OR((~ (NULL))))) ORDER BY CAST((+ (rt0.c2)) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((- (0.5632633669933936)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((v0.c0) NOT BETWEEN ('1379171061') AND (rt0.c2)))) WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<=(CAST(rt0.c2 AS BLOB)))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<=(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((- (0.5632633669933936)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((v0.c0) NOT BETWEEN ('1379171061') AND (rt0.c2)))) ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((- (0.5632633669933936)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((v0.c0) NOT BETWEEN ('1379171061') AND (rt0.c2)))) WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<=(CAST(rt0.c2 AS BLOB)))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<=(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((- (0.5632633669933936)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((v0.c0) NOT BETWEEN ('1379171061') AND (rt0.c2)))) ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((- (0.5632633669933936)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((v0.c0) NOT BETWEEN ('1379171061') AND (rt0.c2)))) WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<=(CAST(rt0.c2 AS BLOB)))) ORDER BY NULL ASC;
SELECT ALL * FROM rt0 WHERE ((- (rt0.c0)) COLLATE NOCASE) ORDER BY CASE NULL COLLATE BINARY  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END END  NULLS LAST, (((rt0.c2, rt0.c0, x'a611', rt0.c2, rt0.c2)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), (((rt0.c2, 0.3662486638458047, rt0.c1))!=((rt0.c0, rt0.c2, rt0.c0))), CASE WHEN rt0.c1 THEN '-1791041323' END, CAST(rt0.c0 AS BLOB), (rt0.c2 IN (rt0.c2)))) AND (((~ (rt0.c1)), rt0.c0, ((((rt0.c1)AND(rt0.c0)))OR(0.35941122020888094)), ((rt0.c0) IS TRUE), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE NULL COLLATE BINARY  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END END  NULLS LAST, (((rt0.c2, rt0.c0, x'a611', rt0.c2, rt0.c2)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), (((rt0.c2, 0.3662486638458047, rt0.c1))<>((rt0.c0, rt0.c2, rt0.c0))), CASE WHEN rt0.c1 THEN '-1791041323' END, CAST(rt0.c0 AS BLOB), (rt0.c2 IN (rt0.c2)))) AND (((~ (rt0.c1)), rt0.c0, ((((rt0.c1)AND(rt0.c0)))OR(0.35941122020888094)), ((rt0.c0) IS TRUE), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c0)) COLLATE NOCASE) ORDER BY CASE NULL COLLATE BINARY  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END END  NULLS LAST, (((rt0.c2, rt0.c0, x'a611', rt0.c2, rt0.c2)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), (((rt0.c2, 0.3662486638458047, rt0.c1))!=((rt0.c0, rt0.c2, rt0.c0))), CASE WHEN rt0.c1 THEN '-1791041323' END, CAST(rt0.c0 AS BLOB), (rt0.c2 IN (rt0.c2)))) AND (((~ (rt0.c1)), rt0.c0, ((((rt0.c1)AND(rt0.c0)))OR(0.35941122020888094)), ((rt0.c0) IS TRUE), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE NULL COLLATE BINARY  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END END  NULLS LAST, (((rt0.c2, rt0.c0, x'a611', rt0.c2, rt0.c2)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), (((rt0.c2, 0.3662486638458047, rt0.c1))<>((rt0.c0, rt0.c2, rt0.c0))), CASE WHEN rt0.c1 THEN '-1791041323' END, CAST(rt0.c0 AS BLOB), (rt0.c2 IN (rt0.c2)))) AND (((~ (rt0.c1)), rt0.c0, ((((rt0.c1)AND(rt0.c0)))OR(0.35941122020888094)), ((rt0.c0) IS TRUE), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c0)) COLLATE NOCASE) ORDER BY CASE NULL COLLATE BINARY  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END END  NULLS LAST, (((rt0.c2, rt0.c0, x'a611', rt0.c2, rt0.c2)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), (((rt0.c2, 0.3662486638458047, rt0.c1))!=((rt0.c0, rt0.c2, rt0.c0))), CASE WHEN rt0.c1 THEN '-1791041323' END, CAST(rt0.c0 AS BLOB), (rt0.c2 IN (rt0.c2)))) AND (((~ (rt0.c1)), rt0.c0, ((((rt0.c1)AND(rt0.c0)))OR(0.35941122020888094)), ((rt0.c0) IS TRUE), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ()));
SELECT * FROM v0, rt0 WHERE (((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(v0.c0))) NOT BETWEEN ((((-1303476539)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(v0.c0))) NOT BETWEEN ((((-1303476539)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(v0.c0))) NOT BETWEEN ((((-1303476539)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(v0.c0))) NOT BETWEEN ((((-1303476539)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(v0.c0))) NOT BETWEEN ((((-1303476539)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ((rt0.c0 IN ()))));
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT * FROM rt0, v0 WHERE (('<ᝂ^g' COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ((('<ᝂ^g' COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (('<ᝂ^g' COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ((('<ᝂ^g' COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (('<ᝂ^g' COLLATE RTRIM IN ()));
SELECT ALL * FROM rt0 WHERE (((((NULL)OR(rt0.c1 COLLATE RTRIM)))OR(CASE WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY CAST(rt0.c1 AS NUMERIC) ASC  NULLS LAST, (('' COLLATE BINARY) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(rt0.c1 COLLATE RTRIM)))OR(CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS NUMERIC) ASC  NULLS LAST, (('' COLLATE BINARY) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((NULL)OR(rt0.c1 COLLATE RTRIM)))OR(CASE WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY CAST(rt0.c1 AS NUMERIC) ASC  NULLS LAST, (('' COLLATE BINARY) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(rt0.c1 COLLATE RTRIM)))OR(CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS NUMERIC) ASC  NULLS LAST, (('' COLLATE BINARY) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((NULL)OR(rt0.c1 COLLATE RTRIM)))OR(CASE WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY CAST(rt0.c1 AS NUMERIC) ASC  NULLS LAST, (('' COLLATE BINARY) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c0)) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((v0.c0)AND((v0.c0 IN ()))))OR(((v0.c0)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND((v0.c0 IN ()))))OR(((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)AND((v0.c0 IN ()))))OR(((v0.c0)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND((v0.c0 IN ()))))OR(((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)AND((v0.c0 IN ()))))OR(((v0.c0)<(v0.c0)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON RTRIM((+ (rt0.c0))) WHERE (CAST((rt0.c2 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON RTRIM((+ (rt0.c0))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON RTRIM((+ (rt0.c0))) WHERE (CAST((rt0.c2 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON RTRIM((+ (rt0.c0))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON RTRIM((+ (rt0.c0))) WHERE (CAST((rt0.c2 IN ()) AS NUMERIC));
SELECT * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(-921793939)) ORDER BY ((((((rt0.c2)&(rt0.c2)))OR((((rt0.c2, rt0.c1, rt0.c1))==((rt0.c2, rt0.c2, NULL))))))OR(CAST(rt0.c2 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(-921793939)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)&(rt0.c2)))OR((((rt0.c2, rt0.c1, rt0.c1))=((rt0.c2, rt0.c2, NULL))))))OR(CAST(rt0.c2 AS BLOB))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(-921793939)) ORDER BY ((((((rt0.c2)&(rt0.c2)))OR((((rt0.c2, rt0.c1, rt0.c1))==((rt0.c2, rt0.c2, NULL))))))OR(CAST(rt0.c2 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(-921793939)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)&(rt0.c2)))OR((((rt0.c2, rt0.c1, rt0.c1))=((rt0.c2, rt0.c2, NULL))))))OR(CAST(rt0.c2 AS BLOB))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(-921793939)) ORDER BY ((((((rt0.c2)&(rt0.c2)))OR((((rt0.c2, rt0.c1, rt0.c1))==((rt0.c2, rt0.c2, NULL))))))OR(CAST(rt0.c2 AS BLOB))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CASE rt0.c2  WHEN CASE WHEN '}!' THEN rt0.c1 ELSE rt0.c1 END THEN (v0.c0 IN ()) ELSE ((v0.c0)-(v0.c0)) END WHERE (CAST(CASE WHEN NULL THEN rt0.c1 END AS INTEGER)) ORDER BY '1014238996';
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN NULL THEN rt0.c1 END AS INTEGER)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CASE rt0.c2  WHEN CASE WHEN '}!' THEN rt0.c1 ELSE rt0.c1 END THEN (v0.c0 IN ()) ELSE ((v0.c0)-(v0.c0)) END ORDER BY '1014238996');
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CASE rt0.c2  WHEN CASE WHEN '}!' THEN rt0.c1 ELSE rt0.c1 END THEN (v0.c0 IN ()) ELSE ((v0.c0)-(v0.c0)) END WHERE (CAST(CASE WHEN NULL THEN rt0.c1 END AS INTEGER)) ORDER BY '1014238996';
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN NULL THEN rt0.c1 END AS INTEGER)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CASE rt0.c2  WHEN CASE WHEN '}!' THEN rt0.c1 ELSE rt0.c1 END THEN (v0.c0 IN ()) ELSE ((v0.c0)-(v0.c0)) END ORDER BY '1014238996');
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CASE rt0.c2  WHEN CASE WHEN '}!' THEN rt0.c1 ELSE rt0.c1 END THEN (v0.c0 IN ()) ELSE ((v0.c0)-(v0.c0)) END WHERE (CAST(CASE WHEN NULL THEN rt0.c1 END AS INTEGER)) ORDER BY '1014238996';
SELECT * FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (v0.c0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN '-310003481' THEN '}o' END) ORDER BY '-1317427456';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-310003481' THEN '}o' END) IS TRUE)  as count FROM rt0 ORDER BY '-1317427456');
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN '-310003481' THEN '}o' END) ORDER BY '-1317427456';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-310003481' THEN '}o' END) IS TRUE)  as count FROM rt0 ORDER BY '-1317427456');
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN '-310003481' THEN '}o' END) ORDER BY '-1317427456';
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS TRUE)) ORDER BY (- (((((((((v0.c0)OR(v0.c0)))OR(0.8084425445207566)))AND(v0.c0)))OR(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (- (((((((((v0.c0)OR(v0.c0)))OR(0.8084425445207566)))AND(v0.c0)))OR(v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS TRUE)) ORDER BY (- (((((((((v0.c0)OR(v0.c0)))OR(0.8084425445207566)))AND(v0.c0)))OR(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (- (((((((((v0.c0)OR(v0.c0)))OR(0.8084425445207566)))AND(v0.c0)))OR(v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS TRUE)) ORDER BY (- (((((((((v0.c0)OR(v0.c0)))OR(0.8084425445207566)))AND(v0.c0)))OR(v0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0 INNER JOIN v0 ON x'acc1' WHERE (CASE (rt0.c2 IN ())  WHEN 0X275352c0 THEN rt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c2 IN ())  WHEN 0X275352c0 THEN rt0.c1 END) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON x'acc1');
SELECT ALL * FROM rt0 INNER JOIN v0 ON x'acc1' WHERE (CASE (rt0.c2 IN ())  WHEN 0X275352c0 THEN rt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c2 IN ())  WHEN 0X275352c0 THEN rt0.c1 END) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON x'acc1');
SELECT ALL * FROM rt0 INNER JOIN v0 ON x'acc1' WHERE (CASE (rt0.c2 IN ())  WHEN 0X275352c0 THEN rt0.c1 END);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c0))>=((rt0.c0, rt0.c2, rt0.c1)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c0, rt0.c0))>=((rt0.c0, rt0.c2, rt0.c1)))) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c0))>=((rt0.c0, rt0.c2, rt0.c1)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c0, rt0.c0))>=((rt0.c0, rt0.c2, rt0.c1)))) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c0))>=((rt0.c0, rt0.c2, rt0.c1)))) NOT NULL));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c1 IN (rt0.c2)) IN ())) ORDER BY ((((rt0.c0) NOTNULL)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN (rt0.c2)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((rt0.c0) NOTNULL)) ISNULL) ASC);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c1 IN (rt0.c2)) IN ())) ORDER BY ((((rt0.c0) NOTNULL)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN (rt0.c2)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((rt0.c0) NOTNULL)) ISNULL) ASC);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c1 IN (rt0.c2)) IN ())) ORDER BY ((((rt0.c0) NOTNULL)) ISNULL) ASC;
SELECT * FROM rt0 WHERE (((NULL) BETWEEN (rt0.c2) AND (('}T' IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (rt0.c2) AND (('}T' IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((NULL) BETWEEN (rt0.c2) AND (('}T' IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (rt0.c2) AND (('}T' IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((NULL) BETWEEN (rt0.c2) AND (('}T' IN (rt0.c0)))));
SELECT * FROM rt0 WHERE ((((((- (rt0.c1)))OR(((rt0.c1)==(rt0.c1)))))AND(rt0.c0))) ORDER BY CAST(COALESCE(rt0.c0, rt0.c1) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c1)))OR(((rt0.c1)==(rt0.c1)))))AND(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY CAST(COALESCE(rt0.c0, rt0.c1) AS BLOB) DESC);
SELECT * FROM rt0 WHERE ((((((- (rt0.c1)))OR(((rt0.c1)==(rt0.c1)))))AND(rt0.c0))) ORDER BY CAST(COALESCE(rt0.c0, rt0.c1) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c1)))OR(((rt0.c1)==(rt0.c1)))))AND(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY CAST(COALESCE(rt0.c0, rt0.c1) AS BLOB) DESC);
SELECT * FROM rt0 WHERE ((((((- (rt0.c1)))OR(((rt0.c1)==(rt0.c1)))))AND(rt0.c0))) ORDER BY CAST(COALESCE(rt0.c0, rt0.c1) AS BLOB) DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2) IS FALSE)) NOT NULL));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN NULL THEN rt0.c2 COLLATE NOCASE END) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN NULL THEN rt0.c2 COLLATE NOCASE END) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN NULL THEN rt0.c2 COLLATE NOCASE END) ORDER BY rt0.c1;
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON SUBSTR(((rt0.c0) IS FALSE), (v0.c0 IN ())) WHERE ((((rt0.c0)) NOT BETWEEN ((0.4004936831025553)) AND ((((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((0.4004936831025553)) AND ((((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON SUBSTR(((rt0.c0) IS FALSE), (v0.c0 IN ())));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON SUBSTR(((rt0.c0) IS FALSE), (v0.c0 IN ())) WHERE ((((rt0.c0)) NOT BETWEEN ((0.4004936831025553)) AND ((((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((0.4004936831025553)) AND ((((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON SUBSTR(((rt0.c0) IS FALSE), (v0.c0 IN ())));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON SUBSTR(((rt0.c0) IS FALSE), (v0.c0 IN ())) WHERE ((((rt0.c0)) NOT BETWEEN ((0.4004936831025553)) AND ((((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) IN ()));
SELECT * FROM v0 WHERE (((((((v0.c0)OR(x'')))OR(v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(x'')))OR(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)OR(x'')))OR(v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(x'')))OR(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)OR(x'')))OR(v0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ('#x^%{I2')));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ('#x^%{I2'))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ('#x^%{I2')));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ('#x^%{I2'))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ('#x^%{I2')));
SELECT * FROM v0 WHERE (CAST(v0.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c0 AS REAL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (COALESCE(DISTINCT v0.c0, CAST(v0.c0 AS REAL))) ORDER BY (- (((v0.c0)<<(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT v0.c0, CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY (- (((v0.c0)<<(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (COALESCE(DISTINCT v0.c0, CAST(v0.c0 AS REAL))) ORDER BY (- (((v0.c0)<<(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT v0.c0, CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY (- (((v0.c0)<<(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (COALESCE(DISTINCT v0.c0, CAST(v0.c0 AS REAL))) ORDER BY (- (((v0.c0)<<(rt0.c2)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (CAST(v0.c0 AS REAL))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((((rt0.c2) ISNULL), rt0.c0 COLLATE BINARY, v0.c0))==((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c1)*(rt0.c1)), (+ (rt0.c1))))) WHERE ((((rt0.c2)%(rt0.c2)) IN ())) ORDER BY ((CASE WHEN 0.39639345125332404 THEN rt0.c2 ELSE rt0.c0 END)<=(((v0.c0)IS(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)%(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((((rt0.c2) ISNULL), rt0.c0 COLLATE BINARY, v0.c0))==((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c1)*(rt0.c1)), (+ (rt0.c1))))) ORDER BY ((CASE WHEN 0.39639345125332404 THEN rt0.c2 ELSE rt0.c0 END)<=(((v0.c0)IS(rt0.c2)))) DESC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((((rt0.c2) ISNULL), rt0.c0 COLLATE BINARY, v0.c0))==((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c1)*(rt0.c1)), (+ (rt0.c1))))) WHERE ((((rt0.c2)%(rt0.c2)) IN ())) ORDER BY ((CASE WHEN 0.39639345125332404 THEN rt0.c2 ELSE rt0.c0 END)<=(((v0.c0)IS(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)%(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((((rt0.c2) ISNULL), rt0.c0 COLLATE BINARY, v0.c0))==((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c1)*(rt0.c1)), (+ (rt0.c1))))) ORDER BY ((CASE WHEN 0.39639345125332404 THEN rt0.c2 ELSE rt0.c0 END)<=(((v0.c0)IS(rt0.c2)))) DESC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((((rt0.c2) ISNULL), rt0.c0 COLLATE BINARY, v0.c0))==((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c1)*(rt0.c1)), (+ (rt0.c1))))) WHERE ((((rt0.c2)%(rt0.c2)) IN ())) ORDER BY ((CASE WHEN 0.39639345125332404 THEN rt0.c2 ELSE rt0.c0 END)<=(((v0.c0)IS(rt0.c2)))) DESC;
SELECT ALL * FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((- (v0.c0)) COLLATE NOCASE) ORDER BY (~ (((rt0.c0)&(rt0.c1)))) ASC  NULLS FIRST, rt0.c0, CAST((v0.c0 IN (rt0.c2)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (((rt0.c0)&(rt0.c1)))) ASC  NULLS FIRST, rt0.c0, CAST((v0.c0 IN (rt0.c2)) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((- (v0.c0)) COLLATE NOCASE) ORDER BY (~ (((rt0.c0)&(rt0.c1)))) ASC  NULLS FIRST, rt0.c0, CAST((v0.c0 IN (rt0.c2)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (((rt0.c0)&(rt0.c1)))) ASC  NULLS FIRST, rt0.c0, CAST((v0.c0 IN (rt0.c2)) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((- (v0.c0)) COLLATE NOCASE) ORDER BY (~ (((rt0.c0)&(rt0.c1)))) ASC  NULLS FIRST, rt0.c0, CAST((v0.c0 IN (rt0.c2)) AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((CAST(v0.c0 AS NUMERIC))AND(CASE v0.c0  WHEN NULL THEN v0.c0 END)))AND(rt0.c0 COLLATE BINARY)))AND((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))))))OR((((rt0.c2, v0.c0, rt0.c2))>=((v0.c0, '%', v0.c0)))))) ORDER BY (((rt0.c0, x'', v0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND (('', rt0.c1, v0.c0))) COLLATE NOCASE DESC, ((((((NULL) BETWEEN (v0.c0) AND (rt0.c0)))OR(((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)))))OR((rt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(v0.c0 AS NUMERIC))AND(CASE v0.c0  WHEN NULL THEN v0.c0 END)))AND(rt0.c0 COLLATE BINARY)))AND((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))))))OR((((rt0.c2, v0.c0, rt0.c2))>=((v0.c0, '%', v0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0, x'', v0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND (('', rt0.c1, v0.c0))) COLLATE NOCASE DESC, ((((((NULL) BETWEEN (v0.c0) AND (rt0.c0)))OR(((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)))))OR((rt0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((CAST(v0.c0 AS NUMERIC))AND(CASE v0.c0  WHEN NULL THEN v0.c0 END)))AND(rt0.c0 COLLATE BINARY)))AND((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))))))OR((((rt0.c2, v0.c0, rt0.c2))>=((v0.c0, '%', v0.c0)))))) ORDER BY (((rt0.c0, x'', v0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND (('', rt0.c1, v0.c0))) COLLATE NOCASE DESC, ((((((NULL) BETWEEN (v0.c0) AND (rt0.c0)))OR(((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)))))OR((rt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(v0.c0 AS NUMERIC))AND(CASE v0.c0  WHEN NULL THEN v0.c0 END)))AND(rt0.c0 COLLATE BINARY)))AND((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))))))OR((((rt0.c2, v0.c0, rt0.c2))>=((v0.c0, '%', v0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0, x'', v0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND (('', rt0.c1, v0.c0))) COLLATE NOCASE DESC, ((((((NULL) BETWEEN (v0.c0) AND (rt0.c0)))OR(((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)))))OR((rt0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((CAST(v0.c0 AS NUMERIC))AND(CASE v0.c0  WHEN NULL THEN v0.c0 END)))AND(rt0.c0 COLLATE BINARY)))AND((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))))))OR((((rt0.c2, v0.c0, rt0.c2))>=((v0.c0, '%', v0.c0)))))) ORDER BY (((rt0.c0, x'', v0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND (('', rt0.c1, v0.c0))) COLLATE NOCASE DESC, ((((((NULL) BETWEEN (v0.c0) AND (rt0.c0)))OR(((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)))))OR((rt0.c2 IN ()))) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c1 AS INTEGER))>=(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))>=(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c1 AS INTEGER))>=(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))>=(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c1 AS INTEGER))>=(CAST(rt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1) IS FALSE)  WHEN (x'' IN (rt0.c1)) THEN ((0.46719334936686796) ISNULL) ELSE ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) IS FALSE)  WHEN (x'' IN (rt0.c1)) THEN ((0.46719334936686796) ISNULL) ELSE ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1) IS FALSE)  WHEN (x'' IN (rt0.c1)) THEN ((0.46719334936686796) ISNULL) ELSE ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) IS FALSE)  WHEN (x'' IN (rt0.c1)) THEN ((0.46719334936686796) ISNULL) ELSE ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1) IS FALSE)  WHEN (x'' IN (rt0.c1)) THEN ((0.46719334936686796) ISNULL) ELSE ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)) END);
SELECT * FROM rt0 WHERE ((+ (((rt0.c1)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (((rt0.c1)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (((rt0.c1)IS NOT(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL)) NOT BETWEEN ((~ (v0.c0))) AND (''))) ORDER BY TRIM(v0.c0 COLLATE BINARY)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL)) NOT BETWEEN ((~ (v0.c0))) AND (''))) IS TRUE)  as count FROM v0 ORDER BY TRIM(v0.c0 COLLATE BINARY)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL)) NOT BETWEEN ((~ (v0.c0))) AND (''))) ORDER BY TRIM(v0.c0 COLLATE BINARY)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL)) NOT BETWEEN ((~ (v0.c0))) AND (''))) IS TRUE)  as count FROM v0 ORDER BY TRIM(v0.c0 COLLATE BINARY)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL)) NOT BETWEEN ((~ (v0.c0))) AND (''))) ORDER BY TRIM(v0.c0 COLLATE BINARY)  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN '1525888379' ELSE v0.c0 END) BETWEEN ((v0.c0 IN (v0.c0))) AND ((~ (v0.c0))))) ORDER BY 'B[Rpm}t'  NULLS LAST, CAST((+ (v0.c0)) AS INTEGER) ASC  NULLS FIRST, (+ (TYPEOF(DISTINCT v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN '1525888379' ELSE v0.c0 END) BETWEEN ((v0.c0 IN (v0.c0))) AND ((~ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY 'B[Rpm}t'  NULLS LAST, CAST((+ (v0.c0)) AS INTEGER) ASC  NULLS FIRST, (+ (TYPEOF(DISTINCT v0.c0))) DESC);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN '1525888379' ELSE v0.c0 END) BETWEEN ((v0.c0 IN (v0.c0))) AND ((~ (v0.c0))))) ORDER BY 'B[Rpm}t'  NULLS LAST, CAST((+ (v0.c0)) AS INTEGER) ASC  NULLS FIRST, (+ (TYPEOF(DISTINCT v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN '1525888379' ELSE v0.c0 END) BETWEEN ((v0.c0 IN (v0.c0))) AND ((~ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY 'B[Rpm}t'  NULLS LAST, CAST((+ (v0.c0)) AS INTEGER) ASC  NULLS FIRST, (+ (TYPEOF(DISTINCT v0.c0))) DESC);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN '1525888379' ELSE v0.c0 END) BETWEEN ((v0.c0 IN (v0.c0))) AND ((~ (v0.c0))))) ORDER BY 'B[Rpm}t'  NULLS LAST, CAST((+ (v0.c0)) AS INTEGER) ASC  NULLS FIRST, (+ (TYPEOF(DISTINCT v0.c0))) DESC;
SELECT ALL * FROM v0, rt0 WHERE (CAST(rt0.c0 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST(rt0.c0 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST(rt0.c0 AS BLOB) COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE ((0.956173493142453 IN ())) ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS FALSE) ASC  NULLS LAST, ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((0.956173493142453 IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS FALSE) ASC  NULLS LAST, ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL) ASC);
SELECT COUNT(*) FROM v0 WHERE ((0.956173493142453 IN ())) ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS FALSE) ASC  NULLS LAST, ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((0.956173493142453 IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS FALSE) ASC  NULLS LAST, ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL) ASC);
SELECT COUNT(*) FROM v0 WHERE ((0.956173493142453 IN ())) ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS FALSE) ASC  NULLS LAST, ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (((LIKELIHOOD(DISTINCT 0.8725419424776926, 0.6255806771702471))GLOB(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN x'b9e1' WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY (('1337145769')LIKE(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))) ASC  NULLS FIRST, ((x'')<>(((rt0.c0)*(x'04dc')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT 0.8725419424776926, 0.6255806771702471))GLOB(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN x'b9e1' WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY (('1337145769')LIKE(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))) ASC  NULLS FIRST, ((x'')!=(((rt0.c0)*(x'04dc')))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((LIKELIHOOD(DISTINCT 0.8725419424776926, 0.6255806771702471))GLOB(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN x'b9e1' WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY (('1337145769')LIKE(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))) ASC  NULLS FIRST, ((x'')<>(((rt0.c0)*(x'04dc')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT 0.8725419424776926, 0.6255806771702471))GLOB(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN x'b9e1' WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY (('1337145769')LIKE(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))) ASC  NULLS FIRST, ((x'')!=(((rt0.c0)*(x'04dc')))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((LIKELIHOOD(DISTINCT 0.8725419424776926, 0.6255806771702471))GLOB(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN x'b9e1' WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY (('1337145769')LIKE(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))) ASC  NULLS FIRST, ((x'')<>(((rt0.c0)*(x'04dc')))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0)) BETWEEN (((rt0.c0 IN ()))) AND ((((((v0.c0)AND(rt0.c2)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((rt0.c0 IN ()))) AND ((((((v0.c0)AND(rt0.c2)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0)) BETWEEN (((rt0.c0 IN ()))) AND ((((((v0.c0)AND(rt0.c2)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((rt0.c0 IN ()))) AND ((((((v0.c0)AND(rt0.c2)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0)) BETWEEN (((rt0.c0 IN ()))) AND ((((((v0.c0)AND(rt0.c2)))AND(rt0.c1))))));
SELECT * FROM rt0, v0 WHERE (((((((((((rt0.c0)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))IS NOT(v0.c0))) ORDER BY CAST(((rt0.c1) NOT NULL) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))IS NOT(v0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c1) NOT NULL) AS TEXT) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((((((((((rt0.c0)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))IS NOT(v0.c0))) ORDER BY CAST(((rt0.c1) NOT NULL) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))IS NOT(v0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c1) NOT NULL) AS TEXT) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((((((((((rt0.c0)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))IS NOT(v0.c0))) ORDER BY CAST(((rt0.c1) NOT NULL) AS TEXT) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE (CAST(0Xffffffff9b1c4e17 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(0Xffffffff9b1c4e17 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE (CAST(0Xffffffff9b1c4e17 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(0Xffffffff9b1c4e17 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE (CAST(0Xffffffff9b1c4e17 AS TEXT) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END AS BLOB)) ORDER BY (+ (rt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c1)) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END AS BLOB)) ORDER BY (+ (rt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c1)) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END AS BLOB)) ORDER BY (+ (rt0.c1)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c0 COLLATE NOCASE IN (((((rt0.c1)AND(rt0.c0)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE NOCASE IN (((((rt0.c1)AND(rt0.c0)))OR(NULL))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c0 COLLATE NOCASE IN (((((rt0.c1)AND(rt0.c0)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE NOCASE IN (((((rt0.c1)AND(rt0.c0)))OR(NULL))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c0 COLLATE NOCASE IN (((((rt0.c1)AND(rt0.c0)))OR(NULL)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0))>((rt0.c2))))>>(((rt0.c1)IS NOT(rt0.c0))))) ORDER BY '' COLLATE NOCASE DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>((rt0.c2))))>>(((rt0.c1)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY '' COLLATE NOCASE DESC  NULLS FIRST, NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0))>((rt0.c2))))>>(((rt0.c1)IS NOT(rt0.c0))))) ORDER BY '' COLLATE NOCASE DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>((rt0.c2))))>>(((rt0.c1)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY '' COLLATE NOCASE DESC  NULLS FIRST, NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0))>((rt0.c2))))>>(((rt0.c1)IS NOT(rt0.c0))))) ORDER BY '' COLLATE NOCASE DESC  NULLS FIRST, NULL;
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c2)|(v0.c0)) COLLATE BINARY) ORDER BY JULIANDAY(((((v0.c0)AND(v0.c0)))AND(rt0.c1)), '', CAST(rt0.c1 AS BLOB)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)|(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY JULIANDAY(((((v0.c0)AND(v0.c0)))AND(rt0.c1)), '', CAST(rt0.c1 AS BLOB)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c2)|(v0.c0)) COLLATE BINARY) ORDER BY JULIANDAY(((((v0.c0)AND(v0.c0)))AND(rt0.c1)), '', CAST(rt0.c1 AS BLOB)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)|(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY JULIANDAY(((((v0.c0)AND(v0.c0)))AND(rt0.c1)), '', CAST(rt0.c1 AS BLOB)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c2)|(v0.c0)) COLLATE BINARY) ORDER BY JULIANDAY(((((v0.c0)AND(v0.c0)))AND(rt0.c1)), '', CAST(rt0.c1 AS BLOB)) ASC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (('-684810018' IN ()));
SELECT SUM(count) FROM (SELECT ((('-684810018' IN ())) IS TRUE)  as count FROM v0, rt0 NOT INDEXED);
SELECT ALL * FROM v0, rt0 WHERE (('-684810018' IN ()));
SELECT SUM(count) FROM (SELECT ((('-684810018' IN ())) IS TRUE)  as count FROM v0, rt0 NOT INDEXED);
SELECT ALL * FROM v0, rt0 WHERE (('-684810018' IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)GLOB(rt0.c0)))AND(rt0.c2 COLLATE BINARY)))OR((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)GLOB(rt0.c0)))AND(rt0.c2 COLLATE BINARY)))OR((~ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)GLOB(rt0.c0)))AND(rt0.c2 COLLATE BINARY)))OR((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)GLOB(rt0.c0)))AND(rt0.c2 COLLATE BINARY)))OR((~ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)GLOB(rt0.c0)))AND(rt0.c2 COLLATE BINARY)))OR((~ (rt0.c1)))));
SELECT COUNT(*) FROM v0 WHERE ((+ ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ ((- (v0.c0)))));
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2  WHEN '-769320492' THEN '' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN x'1ed60920' THEN rt0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN '-769320492' THEN '' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN x'1ed60920' THEN rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2  WHEN '-769320492' THEN '' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN x'1ed60920' THEN rt0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN '-769320492' THEN '' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN x'1ed60920' THEN rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2  WHEN '-769320492' THEN '' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN x'1ed60920' THEN rt0.c2 END COLLATE NOCASE);
SELECT * FROM v0 NOT INDEXED, rt0 WHERE ((NOT ((((rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0, v0.c0, v0.c0)) AND ((rt0.c0, rt0.c2, v0.c0, NULL, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0, v0.c0, v0.c0)) AND ((rt0.c0, rt0.c2, v0.c0, NULL, rt0.c0)))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0 NOT INDEXED, rt0 WHERE ((NOT ((((rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0, v0.c0, v0.c0)) AND ((rt0.c0, rt0.c2, v0.c0, NULL, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0, v0.c0, v0.c0)) AND ((rt0.c0, rt0.c2, v0.c0, NULL, rt0.c0)))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0 NOT INDEXED, rt0 WHERE ((NOT ((((rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0, v0.c0, v0.c0)) AND ((rt0.c0, rt0.c2, v0.c0, NULL, rt0.c0))))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CAST('-792869967' AS NUMERIC) WHERE ((((((('1337145769') IS FALSE))AND(((v0.c0) BETWEEN (v0.c0) AND (x'')))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((('1337145769') IS FALSE))AND(((v0.c0) BETWEEN (v0.c0) AND (x'')))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST('-792869967' AS NUMERIC));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CAST('-792869967' AS NUMERIC) WHERE ((((((('1337145769') IS FALSE))AND(((v0.c0) BETWEEN (v0.c0) AND (x'')))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((('1337145769') IS FALSE))AND(((v0.c0) BETWEEN (v0.c0) AND (x'')))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST('-792869967' AS NUMERIC));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CAST('-792869967' AS NUMERIC) WHERE ((((((('1337145769') IS FALSE))AND(((v0.c0) BETWEEN (v0.c0) AND (x'')))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((IFNULL(v0.c0, v0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(v0.c0, v0.c0)) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((IFNULL(v0.c0, v0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(v0.c0, v0.c0)) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((IFNULL(v0.c0, v0.c0)) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN (rt0.c1 IN ()) ELSE ABS(DISTINCT -995885179) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN (rt0.c1 IN ()) ELSE ABS(DISTINCT -995885179) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN (rt0.c1 IN ()) ELSE ABS(DISTINCT -995885179) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN (rt0.c1 IN ()) ELSE ABS(DISTINCT -995885179) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN (rt0.c1 IN ()) ELSE ABS(DISTINCT -995885179) END);
SELECT COUNT(*) FROM rt0, v0 WHERE (NULLIF(rt0.c2, rt0.c2)) ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c0 END)AND((((rt0.c2))<((v0.c0))))))AND(CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((NULLIF(rt0.c2, rt0.c2)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c0 END)AND((((rt0.c2))<((v0.c0))))))AND(CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM rt0, v0 WHERE (NULLIF(rt0.c2, rt0.c2)) ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c0 END)AND((((rt0.c2))<((v0.c0))))))AND(CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((NULLIF(rt0.c2, rt0.c2)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c0 END)AND((((rt0.c2))<((v0.c0))))))AND(CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM rt0, v0 WHERE (NULLIF(rt0.c2, rt0.c2)) ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c0 END)AND((((rt0.c2))<((v0.c0))))))AND(CAST(rt0.c1 AS NUMERIC)));
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (CASE WHEN ((rt0.c2)!=(rt0.c1)) THEN v0.c0 ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)!=(rt0.c1)) THEN v0.c0 ELSE x'' END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (CASE WHEN ((rt0.c2)!=(rt0.c1)) THEN v0.c0 ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)!=(rt0.c1)) THEN v0.c0 ELSE x'' END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (CASE WHEN ((rt0.c2)!=(rt0.c1)) THEN v0.c0 ELSE x'' END);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY LTRIM(JULIANDAY(rt0.c2, rt0.c0, rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY LTRIM(JULIANDAY(rt0.c2, rt0.c0, rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY LTRIM(JULIANDAY(rt0.c2, rt0.c0, rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY LTRIM(JULIANDAY(rt0.c2, rt0.c0, rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY LTRIM(JULIANDAY(rt0.c2, rt0.c0, rt0.c1));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((+ (v0.c0)))IS(rt0.c2 COLLATE RTRIM))) ORDER BY ((((v0.c0)IS(rt0.c0))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))IS(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0)IS(rt0.c0))) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((+ (v0.c0)))IS(rt0.c2 COLLATE RTRIM))) ORDER BY ((((v0.c0)IS(rt0.c0))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))IS(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0)IS(rt0.c0))) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((+ (v0.c0)))IS(rt0.c2 COLLATE RTRIM))) ORDER BY ((((v0.c0)IS(rt0.c0))) ISNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((((((((rt0.c1)OR(rt0.c2)))OR(v0.c0)))OR(-8.88513518E8)))OR(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c1)OR(rt0.c2)))OR(v0.c0)))OR(-8.88513518E8)))OR(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((((((((rt0.c1)OR(rt0.c2)))OR(v0.c0)))OR(-8.88513518E8)))OR(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c1)OR(rt0.c2)))OR(v0.c0)))OR(-8.88513518E8)))OR(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((((((((rt0.c1)OR(rt0.c2)))OR(v0.c0)))OR(-8.88513518E8)))OR(rt0.c2)) AS BLOB));
SELECT * FROM v0 WHERE ((~ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((~ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((~ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM rt0, v0 WHERE (-1900558673) ORDER BY ((json_quote(rt0.c2)) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (rt0.c0))) AND (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1900558673) IS TRUE)  as count FROM rt0, v0 ORDER BY ((json_quote(rt0.c2)) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (rt0.c0))) AND (x''))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (-1900558673) ORDER BY ((json_quote(rt0.c2)) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (rt0.c0))) AND (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1900558673) IS TRUE)  as count FROM rt0, v0 ORDER BY ((json_quote(rt0.c2)) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (rt0.c0))) AND (x''))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (-1900558673) ORDER BY ((json_quote(rt0.c2)) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (rt0.c0))) AND (x''))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((((v0.c0)>=(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((((0.7283151012277961)AND(v0.c0)))AND(v0.c0))))>=((((v0.c0) NOT NULL), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.16511600539666205 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC, ((((v0.c0)=(v0.c0)))-(CAST(v0.c0 AS TEXT))), CAST((v0.c0 IN ()) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)>=(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((((0.7283151012277961)AND(v0.c0)))AND(v0.c0))))>=((((v0.c0) NOT NULL), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.16511600539666205 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC, ((((v0.c0)=(v0.c0)))-(CAST(v0.c0 AS TEXT))), CAST((v0.c0 IN ()) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((((v0.c0)>=(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((((0.7283151012277961)AND(v0.c0)))AND(v0.c0))))>=((((v0.c0) NOT NULL), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.16511600539666205 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC, ((((v0.c0)=(v0.c0)))-(CAST(v0.c0 AS TEXT))), CAST((v0.c0 IN ()) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)>=(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((((0.7283151012277961)AND(v0.c0)))AND(v0.c0))))>=((((v0.c0) NOT NULL), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.16511600539666205 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC, ((((v0.c0)=(v0.c0)))-(CAST(v0.c0 AS TEXT))), CAST((v0.c0 IN ()) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((((v0.c0)>=(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((((0.7283151012277961)AND(v0.c0)))AND(v0.c0))))>=((((v0.c0) NOT NULL), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.16511600539666205 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC, ((((v0.c0)=(v0.c0)))-(CAST(v0.c0 AS TEXT))), CAST((v0.c0 IN ()) AS NUMERIC);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((rt0.c0) NOTNULL), ((v0.c0) IS TRUE)))<((v0.c0, ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c1 COLLATE BINARY))) WHERE ((~ (((((((((v0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((v0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((rt0.c0) NOTNULL), ((v0.c0) IS TRUE)))<((v0.c0, ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c1 COLLATE BINARY))));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((rt0.c0) NOTNULL), ((v0.c0) IS TRUE)))<((v0.c0, ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c1 COLLATE BINARY))) WHERE ((~ (((((((((v0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((v0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((rt0.c0) NOTNULL), ((v0.c0) IS TRUE)))<((v0.c0, ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c1 COLLATE BINARY))));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((rt0.c0) NOTNULL), ((v0.c0) IS TRUE)))<((v0.c0, ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c1 COLLATE BINARY))) WHERE ((~ (((((((((v0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))OR(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1)!=(rt0.c0))  WHEN rt0.c1 THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) WHEN (rt0.c0 IN (rt0.c1, rt0.c1)) THEN json_remove(rt0.c0, rt0.c0) WHEN ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c2)IS(x'')) ELSE ((rt0.c2)<(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)!=(rt0.c0))  WHEN rt0.c1 THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) WHEN (rt0.c0 IN (rt0.c1, rt0.c1)) THEN json_remove(rt0.c0, rt0.c0) WHEN ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c2)IS(x'')) ELSE ((rt0.c2)<(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1)!=(rt0.c0))  WHEN rt0.c1 THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) WHEN (rt0.c0 IN (rt0.c1, rt0.c1)) THEN json_remove(rt0.c0, rt0.c0) WHEN ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c2)IS(x'')) ELSE ((rt0.c2)<(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)!=(rt0.c0))  WHEN rt0.c1 THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) WHEN (rt0.c0 IN (rt0.c1, rt0.c1)) THEN json_remove(rt0.c0, rt0.c0) WHEN ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c2)IS(x'')) ELSE ((rt0.c2)<(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1)!=(rt0.c0))  WHEN rt0.c1 THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) WHEN (rt0.c0 IN (rt0.c1, rt0.c1)) THEN json_remove(rt0.c0, rt0.c0) WHEN ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c2)IS(x'')) ELSE ((rt0.c2)<(rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c0 AS TEXT)))==(((('')>(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS TEXT)))==(((('')>(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c0 AS TEXT)))==(((('')>(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS TEXT)))==(((('')>(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c0 AS TEXT)))==(((('')>(rt0.c0))))));
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c0;
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))IS(((rt0.c2)>>(v0.c0))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))IS(((rt0.c2)>>(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))IS(((rt0.c2)>>(v0.c0))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))IS(((rt0.c2)>>(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))IS(((rt0.c2)>>(v0.c0))))) ORDER BY v0.c0;
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT));
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM v0 WHERE (ABS(DISTINCT CASE v0.c0  WHEN 1958487257 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CASE v0.c0  WHEN 1958487257 THEN v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (ABS(DISTINCT CASE v0.c0  WHEN 1958487257 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CASE v0.c0  WHEN 1958487257 THEN v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (ABS(DISTINCT CASE v0.c0  WHEN 1958487257 THEN v0.c0 END));
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT ALL * FROM v0, rt0 WHERE ((- (((v0.c0)<(rt0.c1))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0)<(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((- (((v0.c0)<(rt0.c1))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0)<(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((- (((v0.c0)<(rt0.c1))))) ORDER BY NULL DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (v0.c0) ORDER BY ((NULL)GLOB((- (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY ((NULL)GLOB((- (rt0.c0)))) ASC);
SELECT ALL * FROM v0, rt0 WHERE (v0.c0) ORDER BY ((NULL)GLOB((- (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY ((NULL)GLOB((- (rt0.c0)))) ASC);
SELECT ALL * FROM v0, rt0 WHERE (v0.c0) ORDER BY ((NULL)GLOB((- (rt0.c0)))) ASC;
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))OR(((v0.c0)LIKE(v0.c0))))) ORDER BY (((v0.c0))<((v0.c0))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))OR(((v0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0))<((v0.c0))) COLLATE BINARY ASC);
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))OR(((v0.c0)LIKE(v0.c0))))) ORDER BY (((v0.c0))<((v0.c0))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))OR(((v0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0))<((v0.c0))) COLLATE BINARY ASC);
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))OR(((v0.c0)LIKE(v0.c0))))) ORDER BY (((v0.c0))<((v0.c0))) COLLATE BINARY ASC;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<=((((v0.c0))<=((v0.c0)))))) ORDER BY ((SQLITE_SOURCE_ID())+(v0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<=((((v0.c0))<=((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((SQLITE_SOURCE_ID())+(v0.c0 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<=((((v0.c0))<=((v0.c0)))))) ORDER BY ((SQLITE_SOURCE_ID())+(v0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<=((((v0.c0))<=((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((SQLITE_SOURCE_ID())+(v0.c0 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<=((((v0.c0))<=((v0.c0)))))) ORDER BY ((SQLITE_SOURCE_ID())+(v0.c0 COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)OR((NOT (v0.c0)))))OR(CAST(v0.c0 AS BLOB)))) ORDER BY ((((((((CAST(v0.c0 AS BLOB))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((- (v0.c0)))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC, 448840399, 418249769 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR((NOT (v0.c0)))))OR(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((CAST(v0.c0 AS BLOB))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((- (v0.c0)))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC, 448840399, 418249769 COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)OR((NOT (v0.c0)))))OR(CAST(v0.c0 AS BLOB)))) ORDER BY ((((((((CAST(v0.c0 AS BLOB))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((- (v0.c0)))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC, 448840399, 418249769 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR((NOT (v0.c0)))))OR(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((CAST(v0.c0 AS BLOB))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((- (v0.c0)))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC, 448840399, 418249769 COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (NULL);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (UPPER(rt0.c0) IN (((v0.c0)LIKE(rt0.c2)))) WHERE (((0.5911615522478041 COLLATE BINARY)IS(CASE WHEN v0.c0 THEN rt0.c1 WHEN -7.92869967E8 THEN rt0.c1 WHEN v0.c0 THEN x'' ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((0.5911615522478041 COLLATE BINARY)IS(CASE WHEN v0.c0 THEN rt0.c1 WHEN -7.92869967E8 THEN rt0.c1 WHEN v0.c0 THEN x'' ELSE rt0.c1 END))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (UPPER(rt0.c0) IN (((v0.c0)LIKE(rt0.c2)))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (UPPER(rt0.c0) IN (((v0.c0)LIKE(rt0.c2)))) WHERE (((0.5911615522478041 COLLATE BINARY)IS(CASE WHEN v0.c0 THEN rt0.c1 WHEN -7.92869967E8 THEN rt0.c1 WHEN v0.c0 THEN x'' ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((0.5911615522478041 COLLATE BINARY)IS(CASE WHEN v0.c0 THEN rt0.c1 WHEN -7.92869967E8 THEN rt0.c1 WHEN v0.c0 THEN x'' ELSE rt0.c1 END))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (UPPER(rt0.c0) IN (((v0.c0)LIKE(rt0.c2)))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (UPPER(rt0.c0) IN (((v0.c0)LIKE(rt0.c2)))) WHERE (((0.5911615522478041 COLLATE BINARY)IS(CASE WHEN v0.c0 THEN rt0.c1 WHEN -7.92869967E8 THEN rt0.c1 WHEN v0.c0 THEN x'' ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c1, NULL, ''))==((rt0.c1, rt0.c0, rt0.c1))), NULL, rt0.c0 COLLATE BINARY))<>((((v0.c0) NOTNULL), ((rt0.c1)LIKE(rt0.c1)), json_quote(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1, NULL, ''))==((rt0.c1, rt0.c0, rt0.c1))), NULL, rt0.c0 COLLATE BINARY))<>((((v0.c0) NOTNULL), ((rt0.c1)LIKE(rt0.c1)), json_quote(v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c1, NULL, ''))==((rt0.c1, rt0.c0, rt0.c1))), NULL, rt0.c0 COLLATE BINARY))<>((((v0.c0) NOTNULL), ((rt0.c1)LIKE(rt0.c1)), json_quote(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1, NULL, ''))==((rt0.c1, rt0.c0, rt0.c1))), NULL, rt0.c0 COLLATE BINARY))<>((((v0.c0) NOTNULL), ((rt0.c1)LIKE(rt0.c1)), json_quote(v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c1, NULL, ''))==((rt0.c1, rt0.c0, rt0.c1))), NULL, rt0.c0 COLLATE BINARY))<>((((v0.c0) NOTNULL), ((rt0.c1)LIKE(rt0.c1)), json_quote(v0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST(v0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST(v0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST(v0.c0 AS BLOB) IN ()));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON UPPER(DISTINCT rt0.c0) WHERE (x'') ORDER BY COALESCE(DISTINCT (((rt0.c2, rt0.c2, rt0.c0))!=((rt0.c0, rt0.c1, rt0.c1))), v0.c0 COLLATE BINARY) DESC, (((((v0.c0)/(v0.c0)), x'ddf3' COLLATE BINARY, (rt0.c1 IN ())))<=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END, ((v0.c0) NOTNULL), ((rt0.c1)AND(rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 INNER JOIN v0 ON UPPER(DISTINCT rt0.c0) ORDER BY COALESCE(DISTINCT (((rt0.c2, rt0.c2, rt0.c0))!=((rt0.c0, rt0.c1, rt0.c1))), v0.c0 COLLATE BINARY) DESC, (((((v0.c0)/(v0.c0)), x'ddf3' COLLATE BINARY, (rt0.c1 IN ())))<=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END, ((v0.c0) NOTNULL), ((rt0.c1)AND(rt0.c2))))) DESC);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON UPPER(DISTINCT rt0.c0) WHERE (x'') ORDER BY COALESCE(DISTINCT (((rt0.c2, rt0.c2, rt0.c0))!=((rt0.c0, rt0.c1, rt0.c1))), v0.c0 COLLATE BINARY) DESC, (((((v0.c0)/(v0.c0)), x'ddf3' COLLATE BINARY, (rt0.c1 IN ())))<=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END, ((v0.c0) NOTNULL), ((rt0.c1)AND(rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 INNER JOIN v0 ON UPPER(DISTINCT rt0.c0) ORDER BY COALESCE(DISTINCT (((rt0.c2, rt0.c2, rt0.c0))!=((rt0.c0, rt0.c1, rt0.c1))), v0.c0 COLLATE BINARY) DESC, (((((v0.c0)/(v0.c0)), x'ddf3' COLLATE BINARY, (rt0.c1 IN ())))<=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END, ((v0.c0) NOTNULL), ((rt0.c1)AND(rt0.c2))))) DESC);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON UPPER(DISTINCT rt0.c0) WHERE (x'') ORDER BY COALESCE(DISTINCT (((rt0.c2, rt0.c2, rt0.c0))!=((rt0.c0, rt0.c1, rt0.c1))), v0.c0 COLLATE BINARY) DESC, (((((v0.c0)/(v0.c0)), x'ddf3' COLLATE BINARY, (rt0.c1 IN ())))<=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END, ((v0.c0) NOTNULL), ((rt0.c1)AND(rt0.c2))))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ('1254089243');
SELECT SUM(count) FROM (SELECT ALL (('1254089243') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('1254089243');
SELECT SUM(count) FROM (SELECT ALL (('1254089243') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('1254089243');
SELECT COUNT(*) FROM v0 WHERE (LIKELIHOOD(IFNULL(DISTINCT v0.c0, v0.c0), 0.5839875856159084));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(IFNULL(DISTINCT v0.c0, v0.c0), 0.5839875856159084)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LIKELIHOOD(IFNULL(DISTINCT v0.c0, v0.c0), 0.5839875856159084));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(IFNULL(DISTINCT v0.c0, v0.c0), 0.5839875856159084)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LIKELIHOOD(IFNULL(DISTINCT v0.c0, v0.c0), 0.5839875856159084));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON v0.c0 WHERE ((rt0.c0 COLLATE RTRIM IN ())) ORDER BY (~ ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))), UPPER(DISTINCT ((rt0.c0) IS FALSE)) DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON v0.c0 ORDER BY (~ ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))), UPPER(DISTINCT ((rt0.c0) IS FALSE)) DESC);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON v0.c0 WHERE ((rt0.c0 COLLATE RTRIM IN ())) ORDER BY (~ ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))), UPPER(DISTINCT ((rt0.c0) IS FALSE)) DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON v0.c0 ORDER BY (~ ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))), UPPER(DISTINCT ((rt0.c0) IS FALSE)) DESC);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON v0.c0 WHERE ((rt0.c0 COLLATE RTRIM IN ())) ORDER BY (~ ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))), UPPER(DISTINCT ((rt0.c0) IS FALSE)) DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (PRINTF(v0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((PRINTF(v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (PRINTF(v0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((PRINTF(v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (PRINTF(v0.c0) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))) AND ((((rt0.c2) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))) AND ((((rt0.c2) IS FALSE))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))) AND ((((rt0.c2) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))) AND ((((rt0.c2) IS FALSE))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))) AND ((((rt0.c2) IS FALSE)))));
SELECT * FROM v0 WHERE (((((((v0.c0)+('659772096')))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)+('659772096')))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)+('659772096')))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)+('659772096')))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)+('659772096')))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT * FROM rt0 NOT INDEXED WHERE (CASE ((rt0.c0) NOTNULL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) ELSE rt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) NOTNULL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) ELSE rt0.c0 END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 NOT INDEXED WHERE (CASE ((rt0.c0) NOTNULL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) ELSE rt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) NOTNULL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) ELSE rt0.c0 END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 NOT INDEXED WHERE (CASE ((rt0.c0) NOTNULL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) ELSE rt0.c0 END);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)AND(((v0.c0)>=(v0.c0)))) WHERE (((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)AND(((v0.c0)>=(v0.c0)))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)AND(((v0.c0)>=(v0.c0)))) WHERE (((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)AND(((v0.c0)>=(v0.c0)))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)AND(((v0.c0)>=(v0.c0)))) WHERE (((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) COLLATE NOCASE);
SELECT * FROM rt0 INNER JOIN v0 ON (CASE WHEN v0.c0 THEN x'8165' ELSE v0.c0 END IN ('6Ihhg', (((v0.c0))<((rt0.c2))))) WHERE (CAST(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS INTEGER)) ORDER BY ((rt0.c2)GLOB((x'ded5' IN (0.24406366634885335)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (CASE WHEN v0.c0 THEN x'8165' ELSE v0.c0 END IN ('6Ihhg', (((v0.c0))<((rt0.c2))))) ORDER BY ((rt0.c2)GLOB((x'ded5' IN (0.24406366634885335)))) ASC);
SELECT * FROM rt0 INNER JOIN v0 ON (CASE WHEN v0.c0 THEN x'8165' ELSE v0.c0 END IN ('6Ihhg', (((v0.c0))<((rt0.c2))))) WHERE (CAST(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS INTEGER)) ORDER BY ((rt0.c2)GLOB((x'ded5' IN (0.24406366634885335)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (CASE WHEN v0.c0 THEN x'8165' ELSE v0.c0 END IN ('6Ihhg', (((v0.c0))<((rt0.c2))))) ORDER BY ((rt0.c2)GLOB((x'ded5' IN (0.24406366634885335)))) ASC);
SELECT * FROM rt0 INNER JOIN v0 ON (CASE WHEN v0.c0 THEN x'8165' ELSE v0.c0 END IN ('6Ihhg', (((v0.c0))<((rt0.c2))))) WHERE (CAST(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS INTEGER)) ORDER BY ((rt0.c2)GLOB((x'ded5' IN (0.24406366634885335)))) ASC;
SELECT ALL * FROM v0, rt0 WHERE ((NOT ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((NOT ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((NOT ((NOT (rt0.c1)))));
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((~ ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((~ ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((~ ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((IFNULL(v0.c0, rt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(v0.c0, rt0.c0)) IS FALSE)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((IFNULL(v0.c0, rt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(v0.c0, rt0.c0)) IS FALSE)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((IFNULL(v0.c0, rt0.c0)) IS FALSE));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)AND(TYPEOF(DISTINCT v0.c0)))) ORDER BY v0.c0 DESC  NULLS LAST, CAST(((((v0.c0)AND(x'')))OR(v0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0)AND(TYPEOF(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST, CAST(((((v0.c0)AND(x'')))OR(v0.c0)) AS REAL) ASC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)AND(TYPEOF(DISTINCT v0.c0)))) ORDER BY v0.c0 DESC  NULLS LAST, CAST(((((v0.c0)AND(x'')))OR(v0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0)AND(TYPEOF(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST, CAST(((((v0.c0)AND(x'')))OR(v0.c0)) AS REAL) ASC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)AND(TYPEOF(DISTINCT v0.c0)))) ORDER BY v0.c0 DESC  NULLS LAST, CAST(((((v0.c0)AND(x'')))OR(v0.c0)) AS REAL) ASC;
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)<<(rt0.c1)) AS REAL)) ORDER BY CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END  WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c2)LIKE(rt0.c1)) WHEN ((((rt0.c0)AND(rt0.c2)))OR('Odh')) THEN (NULL IN ()) WHEN ((rt0.c2)+(NULL)) THEN TRIM(rt0.c0) ELSE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END DESC  NULLS LAST, (UNLIKELY(rt0.c0) IN (((rt0.c2)/(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)<<(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END  WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c2)LIKE(rt0.c1)) WHEN ((((rt0.c0)AND(rt0.c2)))OR('Odh')) THEN (NULL IN ()) WHEN ((rt0.c2)+(NULL)) THEN TRIM(rt0.c0) ELSE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END DESC  NULLS LAST, (UNLIKELY(rt0.c0) IN (((rt0.c2)/(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)<<(rt0.c1)) AS REAL)) ORDER BY CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END  WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c2)LIKE(rt0.c1)) WHEN ((((rt0.c0)AND(rt0.c2)))OR('Odh')) THEN (NULL IN ()) WHEN ((rt0.c2)+(NULL)) THEN TRIM(rt0.c0) ELSE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END DESC  NULLS LAST, (UNLIKELY(rt0.c0) IN (((rt0.c2)/(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)<<(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END  WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c2)LIKE(rt0.c1)) WHEN ((((rt0.c0)AND(rt0.c2)))OR('Odh')) THEN (NULL IN ()) WHEN ((rt0.c2)+(NULL)) THEN TRIM(rt0.c0) ELSE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END DESC  NULLS LAST, (UNLIKELY(rt0.c0) IN (((rt0.c2)/(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)<<(rt0.c1)) AS REAL)) ORDER BY CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END  WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c2)LIKE(rt0.c1)) WHEN ((((rt0.c0)AND(rt0.c2)))OR('Odh')) THEN (NULL IN ()) WHEN ((rt0.c2)+(NULL)) THEN TRIM(rt0.c0) ELSE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END DESC  NULLS LAST, (UNLIKELY(rt0.c0) IN (((rt0.c2)/(rt0.c0))));
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN ((((((((rt0.c2)OR(v0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(0.9139188676139659)) THEN rt0.c1 END) ORDER BY x'bde1';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c2)OR(v0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(0.9139188676139659)) THEN rt0.c1 END) IS TRUE)  as count FROM v0, rt0 ORDER BY x'bde1');
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN ((((((((rt0.c2)OR(v0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(0.9139188676139659)) THEN rt0.c1 END) ORDER BY x'bde1';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c2)OR(v0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(0.9139188676139659)) THEN rt0.c1 END) IS TRUE)  as count FROM v0, rt0 ORDER BY x'bde1');
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN ((((((((rt0.c2)OR(v0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(0.9139188676139659)) THEN rt0.c1 END) ORDER BY x'bde1';
SELECT ALL * FROM v0 WHERE (0.7645830061993646);
SELECT SUM(count) FROM (SELECT ALL ((0.7645830061993646) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.7645830061993646);
SELECT SUM(count) FROM (SELECT ALL ((0.7645830061993646) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.7645830061993646);
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ (((rt0.c0)==(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0)=(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ (((rt0.c0)==(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0)=(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ (((rt0.c0)==(rt0.c2)))));
SELECT * FROM v0 CROSS JOIN rt0 ON (((('<ꃧkA}+q{')AND(rt0.c2 COLLATE NOCASE)))AND(CASE rt0.c1  WHEN rt0.c2 THEN 0.7731045561901372 END)) WHERE (CAST(((rt0.c2)IS NOT(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)IS NOT(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((('<ꃧkA}+q{')AND(rt0.c2 COLLATE NOCASE)))AND(CASE rt0.c1  WHEN rt0.c2 THEN 0.7731045561901372 END)));
SELECT * FROM v0 CROSS JOIN rt0 ON (((('<ꃧkA}+q{')AND(rt0.c2 COLLATE NOCASE)))AND(CASE rt0.c1  WHEN rt0.c2 THEN 0.7731045561901372 END)) WHERE (CAST(((rt0.c2)IS NOT(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)IS NOT(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((('<ꃧkA}+q{')AND(rt0.c2 COLLATE NOCASE)))AND(CASE rt0.c1  WHEN rt0.c2 THEN 0.7731045561901372 END)));
SELECT * FROM v0 CROSS JOIN rt0 ON (((('<ꃧkA}+q{')AND(rt0.c2 COLLATE NOCASE)))AND(CASE rt0.c1  WHEN rt0.c2 THEN 0.7731045561901372 END)) WHERE (CAST(((rt0.c2)IS NOT(rt0.c2)) AS NUMERIC));
SELECT * FROM v0 WHERE (((v0.c0 IN ()) IN ((((v0.c0, v0.c0, v0.c0, v0.c0, '-218867600')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, '2105723699')) AND ((v0.c0, v0.c0, v0.c0, 0x52347af5, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN ((((v0.c0, v0.c0, v0.c0, v0.c0, '-218867600')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, '2105723699')) AND ((v0.c0, v0.c0, v0.c0, 0x52347af5, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 IN ()) IN ((((v0.c0, v0.c0, v0.c0, v0.c0, '-218867600')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, '2105723699')) AND ((v0.c0, v0.c0, v0.c0, 0x52347af5, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN ((((v0.c0, v0.c0, v0.c0, v0.c0, '-218867600')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, '2105723699')) AND ((v0.c0, v0.c0, v0.c0, 0x52347af5, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 IN ()) IN ((((v0.c0, v0.c0, v0.c0, v0.c0, '-218867600')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, '2105723699')) AND ((v0.c0, v0.c0, v0.c0, 0x52347af5, v0.c0))))));
SELECT COUNT(*) FROM v0, rt0 WHERE (NULL) ORDER BY CASE NULLIF(rt0.c2, v0.c0)  WHEN (((('1300276043')AND(rt0.c0)))AND(rt0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(rt0.c2)) ELSE ((rt0.c1) NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE NULLIF(rt0.c2, v0.c0)  WHEN (((('1300276043')AND(rt0.c0)))AND(rt0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(rt0.c2)) ELSE ((rt0.c1) NOT NULL) END DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULL) ORDER BY CASE NULLIF(rt0.c2, v0.c0)  WHEN (((('1300276043')AND(rt0.c0)))AND(rt0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(rt0.c2)) ELSE ((rt0.c1) NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE NULLIF(rt0.c2, v0.c0)  WHEN (((('1300276043')AND(rt0.c0)))AND(rt0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(rt0.c2)) ELSE ((rt0.c1) NOT NULL) END DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULL) ORDER BY CASE NULLIF(rt0.c2, v0.c0)  WHEN (((('1300276043')AND(rt0.c0)))AND(rt0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(rt0.c2)) ELSE ((rt0.c1) NOT NULL) END DESC;
SELECT * FROM rt0 WHERE (CAST(((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) AS TEXT));
SELECT COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 WHERE ((+ (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)|(rt0.c2));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)|(rt0.c2)));
SELECT COUNT(*) FROM rt0 WHERE ((+ (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)|(rt0.c2));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)|(rt0.c2)));
SELECT COUNT(*) FROM rt0 WHERE ((+ (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)|(rt0.c2));
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN 0.1464325558915579 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY ((((v0.c0)OR(v0.c0))) NOT BETWEEN ('0.16511600539666205') AND (v0.c0)) ASC, IFNULL(DISTINCT ((v0.c0)IS(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN 0.1464325558915579 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR(v0.c0))) NOT BETWEEN ('0.16511600539666205') AND (v0.c0)) ASC, IFNULL(DISTINCT ((v0.c0)IS(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) DESC);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN 0.1464325558915579 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY ((((v0.c0)OR(v0.c0))) NOT BETWEEN ('0.16511600539666205') AND (v0.c0)) ASC, IFNULL(DISTINCT ((v0.c0)IS(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN 0.1464325558915579 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR(v0.c0))) NOT BETWEEN ('0.16511600539666205') AND (v0.c0)) ASC, IFNULL(DISTINCT ((v0.c0)IS(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) DESC);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN 0.1464325558915579 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY ((((v0.c0)OR(v0.c0))) NOT BETWEEN ('0.16511600539666205') AND (v0.c0)) ASC, IFNULL(DISTINCT ((v0.c0)IS(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) DESC;
SELECT * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'');
SELECT ALL * FROM rt0, v0 WHERE (0.504470653758568) ORDER BY ((((((((CAST(rt0.c2 AS BLOB))AND(-8.88513518E8)))OR(((((((((v0.c0)AND(rt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(rt0.c0)))))OR(((v0.c0) NOT NULL))))AND(CASE WHEN x'' THEN v0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.504470653758568) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((CAST(rt0.c2 AS BLOB))AND(-8.88513518E8)))OR(((((((((v0.c0)AND(rt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(rt0.c0)))))OR(((v0.c0) NOT NULL))))AND(CASE WHEN x'' THEN v0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (0.504470653758568) ORDER BY ((((((((CAST(rt0.c2 AS BLOB))AND(-8.88513518E8)))OR(((((((((v0.c0)AND(rt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(rt0.c0)))))OR(((v0.c0) NOT NULL))))AND(CASE WHEN x'' THEN v0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.504470653758568) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((CAST(rt0.c2 AS BLOB))AND(-8.88513518E8)))OR(((((((((v0.c0)AND(rt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(rt0.c0)))))OR(((v0.c0) NOT NULL))))AND(CASE WHEN x'' THEN v0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (0.504470653758568) ORDER BY ((((((((CAST(rt0.c2 AS BLOB))AND(-8.88513518E8)))OR(((((((((v0.c0)AND(rt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(rt0.c0)))))OR(((v0.c0) NOT NULL))))AND(CASE WHEN x'' THEN v0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON v0.c0 WHERE (((rt0.c2)-(rt0.c2)) COLLATE NOCASE) ORDER BY ((- (v0.c0)) IN (v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)-(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON v0.c0 ORDER BY ((- (v0.c0)) IN (v0.c0)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON v0.c0 WHERE (((rt0.c2)-(rt0.c2)) COLLATE NOCASE) ORDER BY ((- (v0.c0)) IN (v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)-(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON v0.c0 ORDER BY ((- (v0.c0)) IN (v0.c0)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON v0.c0 WHERE (((rt0.c2)-(rt0.c2)) COLLATE NOCASE) ORDER BY ((- (v0.c0)) IN (v0.c0));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((- (v0.c0 COLLATE BINARY))) ORDER BY 0.5689453392137245 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.5689453392137245 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((- (v0.c0 COLLATE BINARY))) ORDER BY 0.5689453392137245 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.5689453392137245 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((- (v0.c0 COLLATE BINARY))) ORDER BY 0.5689453392137245 DESC  NULLS LAST;
SELECT * FROM rt0 WHERE ((- (rt0.c2)) COLLATE BINARY) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((- (rt0.c2)) COLLATE BINARY) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((- (rt0.c2)) COLLATE BINARY) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))|(((v0.c0)OR(v0.c0))))) ORDER BY ((v0.c0 COLLATE NOCASE)GLOB((~ (v0.c0))))  NULLS FIRST, HEX(DISTINCT ((v0.c0)AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))|(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE)GLOB((~ (v0.c0))))  NULLS FIRST, HEX(DISTINCT ((v0.c0)AND(v0.c0))));
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))|(((v0.c0)OR(v0.c0))))) ORDER BY ((v0.c0 COLLATE NOCASE)GLOB((~ (v0.c0))))  NULLS FIRST, HEX(DISTINCT ((v0.c0)AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))|(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE)GLOB((~ (v0.c0))))  NULLS FIRST, HEX(DISTINCT ((v0.c0)AND(v0.c0))));
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))|(((v0.c0)OR(v0.c0))))) ORDER BY ((v0.c0 COLLATE NOCASE)GLOB((~ (v0.c0))))  NULLS FIRST, HEX(DISTINCT ((v0.c0)AND(v0.c0)));
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c1 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c1 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c1 AS REAL));
SELECT ALL * FROM rt0 WHERE (ROUND(UNLIKELY(DISTINCT rt0.c0), LIKELY(rt0.c2))) ORDER BY CAST(0.03415309736040428 AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ROUND(UNLIKELY(DISTINCT rt0.c0), LIKELY(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY CAST(0.03415309736040428 AS REAL) ASC);
SELECT ALL * FROM rt0 WHERE (ROUND(UNLIKELY(DISTINCT rt0.c0), LIKELY(rt0.c2))) ORDER BY CAST(0.03415309736040428 AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ROUND(UNLIKELY(DISTINCT rt0.c0), LIKELY(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY CAST(0.03415309736040428 AS REAL) ASC);
SELECT ALL * FROM rt0 WHERE (ROUND(UNLIKELY(DISTINCT rt0.c0), LIKELY(rt0.c2))) ORDER BY CAST(0.03415309736040428 AS REAL) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((v0.c0) NOTNULL)))) ORDER BY (v0.c0 IN (v0.c0, (v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN (v0.c0, (v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((v0.c0) NOTNULL)))) ORDER BY (v0.c0 IN (v0.c0, (v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN (v0.c0, (v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((v0.c0) NOTNULL)))) ORDER BY (v0.c0 IN (v0.c0, (v0.c0 IN ())));
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT COUNT(*) FROM v0 WHERE ((((((~ (v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND(json_insert(v0.c0, v0.c0, -761241116)))) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL (((((((~ (v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND(json_insert(v0.c0, v0.c0, -761241116)))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY '');
SELECT COUNT(*) FROM v0 WHERE ((((((~ (v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND(json_insert(v0.c0, v0.c0, -761241116)))) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL (((((((~ (v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND(json_insert(v0.c0, v0.c0, -761241116)))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY '');
SELECT COUNT(*) FROM v0 WHERE ((((((~ (v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND(json_insert(v0.c0, v0.c0, -761241116)))) ORDER BY '';
SELECT ALL COUNT(*) FROM rt0 WHERE (load_extension((+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension((+ (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (load_extension((+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension((+ (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c2 AS TEXT)) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0)))) AND (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT)) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0)))) AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c2 AS TEXT)) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0)))) AND (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT)) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0)))) AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c2 AS TEXT)) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0)))) AND (CAST(rt0.c0 AS REAL))));
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((v0.c0 COLLATE NOCASE) IS TRUE) WHERE (CASE WHEN rt0.c0 THEN rt0.c1 COLLATE NOCASE WHEN NULL THEN ((rt0.c1)/(v0.c0)) WHEN rt0.c2 COLLATE BINARY THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c1 COLLATE NOCASE WHEN NULL THEN ((rt0.c1)/(v0.c0)) WHEN rt0.c2 COLLATE BINARY THEN NULL END) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((v0.c0 COLLATE NOCASE) IS TRUE));
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((v0.c0 COLLATE NOCASE) IS TRUE) WHERE (CASE WHEN rt0.c0 THEN rt0.c1 COLLATE NOCASE WHEN NULL THEN ((rt0.c1)/(v0.c0)) WHEN rt0.c2 COLLATE BINARY THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c1 COLLATE NOCASE WHEN NULL THEN ((rt0.c1)/(v0.c0)) WHEN rt0.c2 COLLATE BINARY THEN NULL END) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((v0.c0 COLLATE NOCASE) IS TRUE));
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((v0.c0 COLLATE NOCASE) IS TRUE) WHERE (CASE WHEN rt0.c0 THEN rt0.c1 COLLATE NOCASE WHEN NULL THEN ((rt0.c1)/(v0.c0)) WHEN rt0.c2 COLLATE BINARY THEN NULL END);
SELECT ALL * FROM v0 WHERE (0.9760383111571345 COLLATE BINARY) ORDER BY 'WH' ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9760383111571345 COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY 'WH' ASC);
SELECT ALL * FROM v0 WHERE (0.9760383111571345 COLLATE BINARY) ORDER BY 'WH' ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9760383111571345 COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY 'WH' ASC);
SELECT ALL * FROM v0 WHERE (0.9760383111571345 COLLATE BINARY) ORDER BY 'WH' ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (highlight((+ (rt0.c2)), ((v0.c0)IS(rt0.c0)), ((rt0.c2)<(rt0.c1)), (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((highlight((+ (rt0.c2)), ((v0.c0)IS(rt0.c0)), ((rt0.c2)<(rt0.c1)), (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (highlight((+ (rt0.c2)), ((v0.c0)IS(rt0.c0)), ((rt0.c2)<(rt0.c1)), (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((highlight((+ (rt0.c2)), ((v0.c0)IS(rt0.c0)), ((rt0.c2)<(rt0.c1)), (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (highlight((+ (rt0.c2)), ((v0.c0)IS(rt0.c0)), ((rt0.c2)<(rt0.c1)), (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))));
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (x'') ORDER BY rt0.c2 ASC, (- ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY rt0.c2 ASC, (- ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (x'') ORDER BY rt0.c2 ASC, (- ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY rt0.c2 ASC, (- ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (x'') ORDER BY rt0.c2 ASC, (- ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c2)LIKE(x'')) COLLATE BINARY COLLATE NOCASE WHERE (((rt0.c2)<>(((v0.c0)<=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<>(((v0.c0)<=(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c2)LIKE(x'')) COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c2)LIKE(x'')) COLLATE BINARY COLLATE NOCASE WHERE (((rt0.c2)<>(((v0.c0)<=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<>(((v0.c0)<=(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c2)LIKE(x'')) COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c2)LIKE(x'')) COLLATE BINARY COLLATE NOCASE WHERE (((rt0.c2)<>(((v0.c0)<=(rt0.c2)))));
SELECT COUNT(*) FROM rt0, v0 WHERE (IFNULL(DISTINCT (rt0.c1 IN ()), CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END)) ORDER BY CAST((rt0.c0 IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (rt0.c1 IN ()), CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END)) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((rt0.c0 IN ()) AS INTEGER));
SELECT COUNT(*) FROM rt0, v0 WHERE (IFNULL(DISTINCT (rt0.c1 IN ()), CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END)) ORDER BY CAST((rt0.c0 IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (rt0.c1 IN ()), CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END)) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((rt0.c0 IN ()) AS INTEGER));
SELECT COUNT(*) FROM rt0, v0 WHERE (IFNULL(DISTINCT (rt0.c1 IN ()), CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END)) ORDER BY CAST((rt0.c0 IN ()) AS INTEGER);
SELECT * FROM v0 WHERE (load_extension((NOT (v0.c0)), CASE NULL  WHEN v0.c0 THEN v0.c0 END)) ORDER BY (((v0.c0, 0.4649490284780494, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, NULL, '-921793939', v0.c0, NULL, ']g', v0.c0)) AND ((-9223372036854775808, 0.9000854495024387, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension((NOT (v0.c0)), CASE NULL  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, 0.4649490284780494, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, NULL, '-921793939', v0.c0, NULL, ']g', v0.c0)) AND ((-9223372036854775808, 0.9000854495024387, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM v0 WHERE (load_extension((NOT (v0.c0)), CASE NULL  WHEN v0.c0 THEN v0.c0 END)) ORDER BY (((v0.c0, 0.4649490284780494, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, NULL, '-921793939', v0.c0, NULL, ']g', v0.c0)) AND ((-9223372036854775808, 0.9000854495024387, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension((NOT (v0.c0)), CASE NULL  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, 0.4649490284780494, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, NULL, '-921793939', v0.c0, NULL, ']g', v0.c0)) AND ((-9223372036854775808, 0.9000854495024387, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM v0 WHERE (load_extension((NOT (v0.c0)), CASE NULL  WHEN v0.c0 THEN v0.c0 END)) ORDER BY (((v0.c0, 0.4649490284780494, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, NULL, '-921793939', v0.c0, NULL, ']g', v0.c0)) AND ((-9223372036854775808, 0.9000854495024387, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt0 WHERE ((NOT (ABS(DISTINCT rt0.c2)))) ORDER BY (((rt0.c2))>=((rt0.c2))) COLLATE RTRIM, (((((- (x'0f77')))AND((((rt0.c0))>((rt0.c1))))))OR(rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (ABS(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2))>=((rt0.c2))) COLLATE RTRIM, (((((- (x'0f77')))AND((((rt0.c0))>((rt0.c1))))))OR(rt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM rt0 WHERE ((NOT (ABS(DISTINCT rt0.c2)))) ORDER BY (((rt0.c2))>=((rt0.c2))) COLLATE RTRIM, (((((- (x'0f77')))AND((((rt0.c0))>((rt0.c1))))))OR(rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (ABS(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2))>=((rt0.c2))) COLLATE RTRIM, (((((- (x'0f77')))AND((((rt0.c0))>((rt0.c1))))))OR(rt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM rt0 WHERE ((NOT (ABS(DISTINCT rt0.c2)))) ORDER BY (((rt0.c2))>=((rt0.c2))) COLLATE RTRIM, (((((- (x'0f77')))AND((((rt0.c0))>((rt0.c1))))))OR(rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT * FROM rt0 WHERE (UNLIKELY(((0.36970235258343187) NOT BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((0.36970235258343187) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (UNLIKELY(((0.36970235258343187) NOT BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((0.36970235258343187) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (UNLIKELY(((0.36970235258343187) NOT BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c0)=(v0.c0)))OR(((rt0.c1)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)=(v0.c0)))OR(((rt0.c1)LIKE(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c0)=(v0.c0)))OR(((rt0.c1)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)=(v0.c0)))OR(((rt0.c1)LIKE(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c0)=(v0.c0)))OR(((rt0.c1)LIKE(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1)%(rt0.c2))) NOT BETWEEN (CASE WHEN v0.c0 THEN rt0.c0 END) AND (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))) WHERE ((((((v0.c0)AND(x'')))OR(rt0.c2)) IN ())) ORDER BY '675844289' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)AND(x'')))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1)%(rt0.c2))) NOT BETWEEN (CASE WHEN v0.c0 THEN rt0.c0 END) AND (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))) ORDER BY '675844289' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1)%(rt0.c2))) NOT BETWEEN (CASE WHEN v0.c0 THEN rt0.c0 END) AND (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))) WHERE ((((((v0.c0)AND(x'')))OR(rt0.c2)) IN ())) ORDER BY '675844289' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)AND(x'')))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1)%(rt0.c2))) NOT BETWEEN (CASE WHEN v0.c0 THEN rt0.c0 END) AND (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))) ORDER BY '675844289' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1)%(rt0.c2))) NOT BETWEEN (CASE WHEN v0.c0 THEN rt0.c0 END) AND (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))) WHERE ((((((v0.c0)AND(x'')))OR(rt0.c2)) IN ())) ORDER BY '675844289' ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST((+ (x'')) AS TEXT)) ORDER BY rt0.c1, ((((rt0.c1) NOT NULL))GLOB((((v0.c0))<((rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (x'')) AS TEXT)) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1, ((((rt0.c1) NOT NULL))GLOB((((v0.c0))<((rt0.c1))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST((+ (x'')) AS TEXT)) ORDER BY rt0.c1, ((((rt0.c1) NOT NULL))GLOB((((v0.c0))<((rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (x'')) AS TEXT)) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1, ((((rt0.c1) NOT NULL))GLOB((((v0.c0))<((rt0.c1))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST((+ (x'')) AS TEXT)) ORDER BY rt0.c1, ((((rt0.c1) NOT NULL))GLOB((((v0.c0))<((rt0.c1))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((x'')OR(((v0.c0) IS TRUE))))OR(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR(((v0.c0) IS TRUE))))OR(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((x'')OR(((v0.c0) IS TRUE))))OR(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR(((v0.c0) IS TRUE))))OR(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((x'')OR(((v0.c0) IS TRUE))))OR(CAST(v0.c0 AS INTEGER))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON HEX((~ (rt0.c1))) WHERE ((~ ((- ('0.24406366634885335')))));
SELECT SUM(count) FROM (SELECT (((~ ((- ('0.24406366634885335'))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON HEX((~ (rt0.c1))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON HEX((~ (rt0.c1))) WHERE ((~ ((- ('0.24406366634885335')))));
SELECT SUM(count) FROM (SELECT (((~ ((- ('0.24406366634885335'))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON HEX((~ (rt0.c1))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON HEX((~ (rt0.c1))) WHERE ((~ ((- ('0.24406366634885335')))));
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY ((v0.c0)<=(v0.c0)) COLLATE NOCASE, (((+ (v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND ((v0.c0 IN (x'', v0.c0)))), (- ((((v0.c0))=((v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)<=(v0.c0)) COLLATE NOCASE, (((+ (v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND ((v0.c0 IN (x'', v0.c0)))), (- ((((v0.c0))=((v0.c0)))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY ((v0.c0)<=(v0.c0)) COLLATE NOCASE, (((+ (v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND ((v0.c0 IN (x'', v0.c0)))), (- ((((v0.c0))=((v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)<=(v0.c0)) COLLATE NOCASE, (((+ (v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND ((v0.c0 IN (x'', v0.c0)))), (- ((((v0.c0))=((v0.c0)))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY ((v0.c0)<=(v0.c0)) COLLATE NOCASE, (((+ (v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND ((v0.c0 IN (x'', v0.c0)))), (- ((((v0.c0))=((v0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY TRIM(DISTINCT -424861616, ((rt0.c2)<<(rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT -424861616, ((rt0.c2)<<(rt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY TRIM(DISTINCT -424861616, ((rt0.c2)<<(rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT -424861616, ((rt0.c2)<<(rt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY TRIM(DISTINCT -424861616, ((rt0.c2)<<(rt0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ('F%FeX' COLLATE RTRIM) ORDER BY MAX(((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)), ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('F%FeX' COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY MAX(((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)), ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('F%FeX' COLLATE RTRIM) ORDER BY MAX(((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)), ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('F%FeX' COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY MAX(((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)), ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('F%FeX' COLLATE RTRIM) ORDER BY MAX(((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)), ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (x'5d48') ORDER BY '606277953'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'5d48') IS TRUE)  as count FROM v0, rt0 ORDER BY '606277953'  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (x'5d48') ORDER BY '606277953'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'5d48') IS TRUE)  as count FROM v0, rt0 ORDER BY '606277953'  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (x'5d48') ORDER BY '606277953'  NULLS LAST;
SELECT * FROM rt0, v0 WHERE ((~ ((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((~ ((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((~ ((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c0) NOT NULL), ((rt0.c0)LIKE(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((rt0.c0) NOT NULL), ((rt0.c0)LIKE(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c0) NOT NULL), ((rt0.c0)LIKE(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((rt0.c0) NOT NULL), ((rt0.c0)LIKE(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c0) NOT NULL), ((rt0.c0)LIKE(rt0.c1))));
SELECT * FROM v0, rt0 WHERE ((~ (((rt0.c0) BETWEEN (x'') AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) BETWEEN (x'') AND (rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((~ (((rt0.c0) BETWEEN (x'') AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) BETWEEN (x'') AND (rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((~ (((rt0.c0) BETWEEN (x'') AND (rt0.c2)))));
SELECT * FROM v0 WHERE ((((((((((~ (v0.c0)))OR(((v0.c0)<>(v0.c0)))))OR(((v0.c0)<<(v0.c0)))))AND(((NULL) ISNULL))))OR(((v0.c0) NOTNULL)))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (v0.c0)))OR(((v0.c0)!=(v0.c0)))))OR(((v0.c0)<<(v0.c0)))))AND(((NULL) ISNULL))))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((((((~ (v0.c0)))OR(((v0.c0)<>(v0.c0)))))OR(((v0.c0)<<(v0.c0)))))AND(((NULL) ISNULL))))OR(((v0.c0) NOTNULL)))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (v0.c0)))OR(((v0.c0)!=(v0.c0)))))OR(((v0.c0)<<(v0.c0)))))AND(((NULL) ISNULL))))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((((((~ (v0.c0)))OR(((v0.c0)<>(v0.c0)))))OR(((v0.c0)<<(v0.c0)))))AND(((NULL) ISNULL))))OR(((v0.c0) NOTNULL)))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) IS TRUE))OR(MAX(rt0.c1, rt0.c1))))OR(rt0.c2 COLLATE BINARY))) ORDER BY CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) IS TRUE))OR(MAX(rt0.c1, rt0.c1))))OR(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) IS TRUE))OR(MAX(rt0.c1, rt0.c1))))OR(rt0.c2 COLLATE BINARY))) ORDER BY CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) IS TRUE))OR(MAX(rt0.c1, rt0.c1))))OR(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) IS TRUE))OR(MAX(rt0.c1, rt0.c1))))OR(rt0.c2 COLLATE BINARY))) ORDER BY CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS INTEGER);
SELECT ALL * FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))AND((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY x'd4a0' DESC  NULLS LAST, (- (((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))) ASC, UNLIKELY(((v0.c0) IS FALSE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))AND((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY x'd4a0' DESC  NULLS LAST, (- (((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))) ASC, UNLIKELY(((v0.c0) IS FALSE)) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))AND((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY x'd4a0' DESC  NULLS LAST, (- (((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))) ASC, UNLIKELY(((v0.c0) IS FALSE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))AND((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY x'd4a0' DESC  NULLS LAST, (- (((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))) ASC, UNLIKELY(((v0.c0) IS FALSE)) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))AND((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY x'd4a0' DESC  NULLS LAST, (- (((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))) ASC, UNLIKELY(((v0.c0) IS FALSE)) DESC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0, v0 WHERE (CASE (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN 0.8195040084538476 THEN CASE WHEN v0.c0 THEN rt0.c2 END WHEN ((rt0.c2)&(rt0.c1)) THEN ((rt0.c0) NOTNULL) WHEN json_insert(v0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c1) THEN ((((v0.c0)OR(rt0.c0)))OR(v0.c0)) WHEN rt0.c0 THEN (+ (rt0.c2)) WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN (rt0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN 0.8195040084538476 THEN CASE WHEN v0.c0 THEN rt0.c2 END WHEN ((rt0.c2)&(rt0.c1)) THEN ((rt0.c0) NOTNULL) WHEN json_insert(v0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c1) THEN ((((v0.c0)OR(rt0.c0)))OR(v0.c0)) WHEN rt0.c0 THEN (+ (rt0.c2)) WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN (rt0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CASE (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN 0.8195040084538476 THEN CASE WHEN v0.c0 THEN rt0.c2 END WHEN ((rt0.c2)&(rt0.c1)) THEN ((rt0.c0) NOTNULL) WHEN json_insert(v0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c1) THEN ((((v0.c0)OR(rt0.c0)))OR(v0.c0)) WHEN rt0.c0 THEN (+ (rt0.c2)) WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN (rt0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN 0.8195040084538476 THEN CASE WHEN v0.c0 THEN rt0.c2 END WHEN ((rt0.c2)&(rt0.c1)) THEN ((rt0.c0) NOTNULL) WHEN json_insert(v0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c1) THEN ((((v0.c0)OR(rt0.c0)))OR(v0.c0)) WHEN rt0.c0 THEN (+ (rt0.c2)) WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN (rt0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CASE (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN 0.8195040084538476 THEN CASE WHEN v0.c0 THEN rt0.c2 END WHEN ((rt0.c2)&(rt0.c1)) THEN ((rt0.c0) NOTNULL) WHEN json_insert(v0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c1) THEN ((((v0.c0)OR(rt0.c0)))OR(v0.c0)) WHEN rt0.c0 THEN (+ (rt0.c2)) WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN (rt0.c0) AND (v0.c0)) END);
SELECT ALL * FROM v0 WHERE ((((((v0.c0))<((0X3332c4fb)))) NOT BETWEEN (x'528666ee') AND (CASE v0.c0  WHEN NULL THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<((0x3332c4fb)))) NOT BETWEEN (x'528666ee') AND (CASE v0.c0  WHEN NULL THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0))<((0X3332c4fb)))) NOT BETWEEN (x'528666ee') AND (CASE v0.c0  WHEN NULL THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<((0x3332c4fb)))) NOT BETWEEN (x'528666ee') AND (CASE v0.c0  WHEN NULL THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0))<((0X3332c4fb)))) NOT BETWEEN (x'528666ee') AND (CASE v0.c0  WHEN NULL THEN v0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1 COLLATE BINARY)>=((rt0.c2 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)>=((rt0.c2 IN (rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1 COLLATE BINARY)>=((rt0.c2 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)>=((rt0.c2 IN (rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1 COLLATE BINARY)>=((rt0.c2 IN (rt0.c2)))));
SELECT * FROM v0 WHERE (UNLIKELY(DISTINCT ((v0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((v0.c0) IS TRUE))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (UNLIKELY(DISTINCT ((v0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((v0.c0) IS TRUE))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (UNLIKELY(DISTINCT ((v0.c0) IS TRUE)));
SELECT COUNT(*) FROM v0, rt0 WHERE ((NOT (UPPER(DISTINCT rt0.c0)))) ORDER BY TRIM(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)), (((rt0.c2))<((rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY TRIM(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)), (((rt0.c2))<((rt0.c1)))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((NOT (UPPER(DISTINCT rt0.c0)))) ORDER BY TRIM(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)), (((rt0.c2))<((rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY TRIM(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)), (((rt0.c2))<((rt0.c1)))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((NOT (UPPER(DISTINCT rt0.c0)))) ORDER BY TRIM(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)), (((rt0.c2))<((rt0.c1)))) DESC;
SELECT ALL * FROM v0, rt0 WHERE (SUBSTR((~ (rt0.c2)), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ORDER BY ((v0.c0)-(rt0.c1)) COLLATE BINARY DESC, LIKELIHOOD(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c1)), 0.27587805553950895)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR((~ (rt0.c2)), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0)-(rt0.c1)) COLLATE BINARY DESC, LIKELIHOOD(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c1)), 0.27587805553950895)  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (SUBSTR((~ (rt0.c2)), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ORDER BY ((v0.c0)-(rt0.c1)) COLLATE BINARY DESC, LIKELIHOOD(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c1)), 0.27587805553950895)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR((~ (rt0.c2)), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0)-(rt0.c1)) COLLATE BINARY DESC, LIKELIHOOD(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c1)), 0.27587805553950895)  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (SUBSTR((~ (rt0.c2)), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ORDER BY ((v0.c0)-(rt0.c1)) COLLATE BINARY DESC, LIKELIHOOD(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c1)), 0.27587805553950895)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (HEX(DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)) ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((NOT (rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((NOT (rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (HEX(DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)) ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((NOT (rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((NOT (rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (HEX(DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)) ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((NOT (rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (NOT (rt0.c2)) WHEN (('K0L') NOTNULL) THEN (((rt0.c2))=((rt0.c1))) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END THEN '' ELSE ((1726656095) NOTNULL) END) ORDER BY LENGTH(rt0.c1) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (NOT (rt0.c2)) WHEN (('K0L') NOTNULL) THEN (((rt0.c2))=((rt0.c1))) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END THEN '' ELSE ((1726656095) NOTNULL) END) IS TRUE)  as count FROM rt0 ORDER BY LENGTH(rt0.c1) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (NOT (rt0.c2)) WHEN (('K0L') NOTNULL) THEN (((rt0.c2))=((rt0.c1))) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END THEN '' ELSE ((1726656095) NOTNULL) END) ORDER BY LENGTH(rt0.c1) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (NOT (rt0.c2)) WHEN (('K0L') NOTNULL) THEN (((rt0.c2))=((rt0.c1))) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END THEN '' ELSE ((1726656095) NOTNULL) END) IS TRUE)  as count FROM rt0 ORDER BY LENGTH(rt0.c1) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (NOT (rt0.c2)) WHEN (('K0L') NOTNULL) THEN (((rt0.c2))=((rt0.c1))) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END THEN '' ELSE ((1726656095) NOTNULL) END) ORDER BY LENGTH(rt0.c1) ASC;
SELECT * FROM v0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ('');
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE ((NOT (CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE v0.c0 END))) ORDER BY (- (v0.c0))  NULLS FIRST, (((rt0.c0 IN ()))%((((rt0.c2))<>((v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY (- (v0.c0))  NULLS FIRST, (((rt0.c0 IN ()))%((((rt0.c2))!=((v0.c0)))))  NULLS FIRST);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE ((NOT (CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE v0.c0 END))) ORDER BY (- (v0.c0))  NULLS FIRST, (((rt0.c0 IN ()))%((((rt0.c2))<>((v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY (- (v0.c0))  NULLS FIRST, (((rt0.c0 IN ()))%((((rt0.c2))!=((v0.c0)))))  NULLS FIRST);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE ((NOT (CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE v0.c0 END))) ORDER BY (- (v0.c0))  NULLS FIRST, (((rt0.c0 IN ()))%((((rt0.c2))<>((v0.c0)))))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (LIKELY(DISTINCT v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT v0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELY(DISTINCT v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT v0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELY(DISTINCT v0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON json_array(((((NULL)AND('')))OR(rt0.c2)), rt0.c2) WHERE (NULLIF(((((((((v0.c0)AND(rt0.c2)))AND(-1095037928)))AND(rt0.c1)))AND(rt0.c0)), ((rt0.c2) NOT NULL))) ORDER BY ((rt0.c0) NOTNULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((NULLIF(((((((((v0.c0)AND(rt0.c2)))AND(-1095037928)))AND(rt0.c1)))AND(rt0.c0)), ((rt0.c2) NOT NULL))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON json_array(((((NULL)AND('')))OR(rt0.c2)), rt0.c2) ORDER BY ((rt0.c0) NOTNULL) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON json_array(((((NULL)AND('')))OR(rt0.c2)), rt0.c2) WHERE (NULLIF(((((((((v0.c0)AND(rt0.c2)))AND(-1095037928)))AND(rt0.c1)))AND(rt0.c0)), ((rt0.c2) NOT NULL))) ORDER BY ((rt0.c0) NOTNULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((NULLIF(((((((((v0.c0)AND(rt0.c2)))AND(-1095037928)))AND(rt0.c1)))AND(rt0.c0)), ((rt0.c2) NOT NULL))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON json_array(((((NULL)AND('')))OR(rt0.c2)), rt0.c2) ORDER BY ((rt0.c0) NOTNULL) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON json_array(((((NULL)AND('')))OR(rt0.c2)), rt0.c2) WHERE (NULLIF(((((((((v0.c0)AND(rt0.c2)))AND(-1095037928)))AND(rt0.c1)))AND(rt0.c0)), ((rt0.c2) NOT NULL))) ORDER BY ((rt0.c0) NOTNULL) COLLATE RTRIM;
SELECT * FROM v0 CROSS JOIN rt0 ON (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))=(((~ (v0.c0))))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))==(((~ (v0.c0))))));
SELECT * FROM v0 CROSS JOIN rt0 ON (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))=(((~ (v0.c0))))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))==(((~ (v0.c0))))));
SELECT * FROM v0 CROSS JOIN rt0 ON (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))=(((~ (v0.c0))))) WHERE (rt0.c0);
SELECT ALL * FROM v0, rt0 WHERE ((((((v0.c0)IS(rt0.c0))))!=((((rt0.c2)==(rt0.c1)))))) ORDER BY ((((rt0.c0)%(rt0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (rt0.c2))) AND (((x'') NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)IS(rt0.c0))))<>((((rt0.c2)==(rt0.c1)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0)%(rt0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (rt0.c2))) AND (((x'') NOT NULL))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((((((v0.c0)IS(rt0.c0))))!=((((rt0.c2)==(rt0.c1)))))) ORDER BY ((((rt0.c0)%(rt0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (rt0.c2))) AND (((x'') NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)IS(rt0.c0))))<>((((rt0.c2)==(rt0.c1)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0)%(rt0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (rt0.c2))) AND (((x'') NOT NULL))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((((((v0.c0)IS(rt0.c0))))!=((((rt0.c2)==(rt0.c1)))))) ORDER BY ((((rt0.c0)%(rt0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (rt0.c2))) AND (((x'') NOT NULL))) ASC  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE ('%');
SELECT SUM(count) FROM (SELECT ALL (('%') IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ('%');
SELECT SUM(count) FROM (SELECT ALL (('%') IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ('%');
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(DISTINCT (~ (rt0.c0)), LAST_INSERT_ROWID()));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (~ (rt0.c0)), LAST_INSERT_ROWID())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(DISTINCT (~ (rt0.c0)), LAST_INSERT_ROWID()));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (~ (rt0.c0)), LAST_INSERT_ROWID())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(DISTINCT (~ (rt0.c0)), LAST_INSERT_ROWID()));
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT * FROM v0 WHERE ((((v0.c0)==(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)=(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)==(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)=(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)==(v0.c0)) IN ()));
SELECT COUNT(*) FROM v0 WHERE (LIKELY(DISTINCT ((((v0.c0)AND('[\n7㕻d')))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((((v0.c0)AND('[\n7㕻d')))AND(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LIKELY(DISTINCT ((((v0.c0)AND('[\n7㕻d')))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((((v0.c0)AND('[\n7㕻d')))AND(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LIKELY(DISTINCT ((((v0.c0)AND('[\n7㕻d')))AND(v0.c0))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON rt0.c2 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END)|((NOT ('-310003481'))))) ORDER BY (((v0.c0, v0.c0, '964641441')) BETWEEN ((rt0.c0, (~ (rt0.c1)), (((rt0.c2))==((rt0.c0))))) AND ((((rt0.c0) IS FALSE), ((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)), (((rt0.c1, v0.c0, rt0.c2))>=((v0.c0, v0.c0, rt0.c0)))))) DESC  NULLS FIRST, (((((rt0.c0, rt0.c1, rt0.c0, rt0.c1, 0xf8cbb99)) NOT BETWEEN ((rt0.c0, v0.c0, rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c2, v0.c0)))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END)|((NOT ('-310003481'))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON rt0.c2 ORDER BY (((v0.c0, v0.c0, '964641441')) BETWEEN ((rt0.c0, (~ (rt0.c1)), (((rt0.c2))=((rt0.c0))))) AND ((((rt0.c0) IS FALSE), ((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)), (((rt0.c1, v0.c0, rt0.c2))>=((v0.c0, v0.c0, rt0.c0)))))) DESC  NULLS FIRST, (((((rt0.c0, rt0.c1, rt0.c0, rt0.c1, 0Xf8cbb99)) NOT BETWEEN ((rt0.c0, v0.c0, rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c2, v0.c0)))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON rt0.c2 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END)|((NOT ('-310003481'))))) ORDER BY (((v0.c0, v0.c0, '964641441')) BETWEEN ((rt0.c0, (~ (rt0.c1)), (((rt0.c2))==((rt0.c0))))) AND ((((rt0.c0) IS FALSE), ((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)), (((rt0.c1, v0.c0, rt0.c2))>=((v0.c0, v0.c0, rt0.c0)))))) DESC  NULLS FIRST, (((((rt0.c0, rt0.c1, rt0.c0, rt0.c1, 0xf8cbb99)) NOT BETWEEN ((rt0.c0, v0.c0, rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c2, v0.c0)))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END)|((NOT ('-310003481'))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON rt0.c2 ORDER BY (((v0.c0, v0.c0, '964641441')) BETWEEN ((rt0.c0, (~ (rt0.c1)), (((rt0.c2))=((rt0.c0))))) AND ((((rt0.c0) IS FALSE), ((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)), (((rt0.c1, v0.c0, rt0.c2))>=((v0.c0, v0.c0, rt0.c0)))))) DESC  NULLS FIRST, (((((rt0.c0, rt0.c1, rt0.c0, rt0.c1, 0Xf8cbb99)) NOT BETWEEN ((rt0.c0, v0.c0, rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c2, v0.c0)))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON rt0.c2 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END)|((NOT ('-310003481'))))) ORDER BY (((v0.c0, v0.c0, '964641441')) BETWEEN ((rt0.c0, (~ (rt0.c1)), (((rt0.c2))==((rt0.c0))))) AND ((((rt0.c0) IS FALSE), ((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)), (((rt0.c1, v0.c0, rt0.c2))>=((v0.c0, v0.c0, rt0.c0)))))) DESC  NULLS FIRST, (((((rt0.c0, rt0.c1, rt0.c0, rt0.c1, 0xf8cbb99)) NOT BETWEEN ((rt0.c0, v0.c0, rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c2, v0.c0)))) NOTNULL)  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1 IN ()))<=(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))<=(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1 IN ()))<=(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))<=(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1 IN ()))<=(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))));
SELECT * FROM rt0, v0 WHERE ((((v0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN NULL END, ((rt0.c1)/(rt0.c1)), v0.c0)) AND ((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0, rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN NULL END, ((rt0.c1)/(rt0.c1)), v0.c0)) AND ((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0, rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((v0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN NULL END, ((rt0.c1)/(rt0.c1)), v0.c0)) AND ((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0, rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN NULL END, ((rt0.c1)/(rt0.c1)), v0.c0)) AND ((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0, rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((v0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN NULL END, ((rt0.c1)/(rt0.c1)), v0.c0)) AND ((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0, rt0.c2 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c1 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c1 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c1 AS NUMERIC));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>((~ (v0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>((~ (v0.c0)))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>((~ (v0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>((~ (v0.c0)))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>((~ (v0.c0)))) WHERE (NULL);
SELECT ALL * FROM v0 WHERE ((- (x'')));
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (x'')));
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (x'')));
SELECT ALL * FROM v0, rt0 WHERE (CAST(((((((((v0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((v0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST(((((((((v0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((v0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST(((((((((v0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(v0.c0)) AS NUMERIC));
SELECT ALL * FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) ORDER BY (((((v0.c0, v0.c0, 0.571348520620784))>((v0.c0, v0.c0, v0.c0))))IS NOT((v0.c0 IN (v0.c0)))) DESC  NULLS FIRST, ((v0.c0 IN ()) IN (((v0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, 0.571348520620784))>((v0.c0, v0.c0, v0.c0))))IS NOT((v0.c0 IN (v0.c0)))) DESC  NULLS FIRST, ((v0.c0 IN ()) IN (((v0.c0) NOT NULL))));
SELECT ALL * FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) ORDER BY (((((v0.c0, v0.c0, 0.571348520620784))>((v0.c0, v0.c0, v0.c0))))IS NOT((v0.c0 IN (v0.c0)))) DESC  NULLS FIRST, ((v0.c0 IN ()) IN (((v0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, 0.571348520620784))>((v0.c0, v0.c0, v0.c0))))IS NOT((v0.c0 IN (v0.c0)))) DESC  NULLS FIRST, ((v0.c0 IN ()) IN (((v0.c0) NOT NULL))));
SELECT ALL * FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) ORDER BY (((((v0.c0, v0.c0, 0.571348520620784))>((v0.c0, v0.c0, v0.c0))))IS NOT((v0.c0 IN (v0.c0)))) DESC  NULLS FIRST, ((v0.c0 IN ()) IN (((v0.c0) NOT NULL)));
SELECT COUNT(*) FROM rt0 WHERE (((NULL)|(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)|(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)|(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)|(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)|(rt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((v0.c0)) BETWEEN ((((((v0.c0)AND(rt0.c0)))AND(NULL)))) AND (((rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((((v0.c0)AND(rt0.c0)))AND(NULL)))) AND (((rt0.c0 IN ()))))) IS TRUE)  as count FROM v0 NOT INDEXED NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((v0.c0)) BETWEEN ((((((v0.c0)AND(rt0.c0)))AND(NULL)))) AND (((rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((((v0.c0)AND(rt0.c0)))AND(NULL)))) AND (((rt0.c0 IN ()))))) IS TRUE)  as count FROM v0 NOT INDEXED NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((v0.c0)) BETWEEN ((((((v0.c0)AND(rt0.c0)))AND(NULL)))) AND (((rt0.c0 IN ())))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((0.02952981519655029))==(((+ (rt0.c0)))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.02952981519655029))==(((+ (rt0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((0.02952981519655029))==(((+ (rt0.c0)))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.02952981519655029))==(((+ (rt0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((0.02952981519655029))==(((+ (rt0.c0)))))) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((v0.c0, rt0.c2, v0.c0))<((rt0.c0, v0.c0, v0.c0)))) BETWEEN (((rt0.c1)||(v0.c0))) AND (rt0.c2 COLLATE RTRIM))) ORDER BY (('2006445535') IS FALSE), CASE -478154516  WHEN QUOTE(rt0.c2) THEN IFNULL(DISTINCT rt0.c1, v0.c0) WHEN (NOT (rt0.c1)) THEN (v0.c0 IN ()) WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (x'' IN ()) WHEN ((v0.c0)/(v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN x'bab8' THEN ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, rt0.c2, v0.c0))<((rt0.c0, v0.c0, v0.c0)))) BETWEEN (((rt0.c1)||(v0.c0))) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 ORDER BY (('2006445535') IS FALSE), CASE -478154516  WHEN QUOTE(rt0.c2) THEN IFNULL(DISTINCT rt0.c1, v0.c0) WHEN (NOT (rt0.c1)) THEN (v0.c0 IN ()) WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (x'' IN ()) WHEN ((v0.c0)/(v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN x'bab8' THEN ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)) END ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((v0.c0, rt0.c2, v0.c0))<((rt0.c0, v0.c0, v0.c0)))) BETWEEN (((rt0.c1)||(v0.c0))) AND (rt0.c2 COLLATE RTRIM))) ORDER BY (('2006445535') IS FALSE), CASE -478154516  WHEN QUOTE(rt0.c2) THEN IFNULL(DISTINCT rt0.c1, v0.c0) WHEN (NOT (rt0.c1)) THEN (v0.c0 IN ()) WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (x'' IN ()) WHEN ((v0.c0)/(v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN x'bab8' THEN ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, rt0.c2, v0.c0))<((rt0.c0, v0.c0, v0.c0)))) BETWEEN (((rt0.c1)||(v0.c0))) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 ORDER BY (('2006445535') IS FALSE), CASE -478154516  WHEN QUOTE(rt0.c2) THEN IFNULL(DISTINCT rt0.c1, v0.c0) WHEN (NOT (rt0.c1)) THEN (v0.c0 IN ()) WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (x'' IN ()) WHEN ((v0.c0)/(v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN x'bab8' THEN ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)) END ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((v0.c0, rt0.c2, v0.c0))<((rt0.c0, v0.c0, v0.c0)))) BETWEEN (((rt0.c1)||(v0.c0))) AND (rt0.c2 COLLATE RTRIM))) ORDER BY (('2006445535') IS FALSE), CASE -478154516  WHEN QUOTE(rt0.c2) THEN IFNULL(DISTINCT rt0.c1, v0.c0) WHEN (NOT (rt0.c1)) THEN (v0.c0 IN ()) WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (x'' IN ()) WHEN ((v0.c0)/(v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN x'bab8' THEN ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)) END ASC;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (+ (UNLIKELY(rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (+ (UNLIKELY(rt0.c1))) DESC);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (+ (UNLIKELY(rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (+ (UNLIKELY(rt0.c1))) DESC);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (+ (UNLIKELY(rt0.c1))) DESC;
SELECT ALL * FROM v0 WHERE (((((((v0.c0) ISNULL))AND(CAST(v0.c0 AS BLOB))))AND(((v0.c0) NOTNULL)))) ORDER BY ((((v0.c0)*(v0.c0)))-(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) DESC, (('0.7173996669659011') IS FALSE)  NULLS FIRST, (((v0.c0 IN ())) NOT BETWEEN (LTRIM(v0.c0)) AND (((v0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) ISNULL))AND(CAST(v0.c0 AS BLOB))))AND(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)*(v0.c0)))-(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) DESC, (('0.7173996669659011') IS FALSE)  NULLS FIRST, (((v0.c0 IN ())) NOT BETWEEN (LTRIM(v0.c0)) AND (((v0.c0) IS TRUE)))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0) ISNULL))AND(CAST(v0.c0 AS BLOB))))AND(((v0.c0) NOTNULL)))) ORDER BY ((((v0.c0)*(v0.c0)))-(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) DESC, (('0.7173996669659011') IS FALSE)  NULLS FIRST, (((v0.c0 IN ())) NOT BETWEEN (LTRIM(v0.c0)) AND (((v0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) ISNULL))AND(CAST(v0.c0 AS BLOB))))AND(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)*(v0.c0)))-(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) DESC, (('0.7173996669659011') IS FALSE)  NULLS FIRST, (((v0.c0 IN ())) NOT BETWEEN (LTRIM(v0.c0)) AND (((v0.c0) IS TRUE)))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0) ISNULL))AND(CAST(v0.c0 AS BLOB))))AND(((v0.c0) NOTNULL)))) ORDER BY ((((v0.c0)*(v0.c0)))-(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) DESC, (('0.7173996669659011') IS FALSE)  NULLS FIRST, (((v0.c0 IN ())) NOT BETWEEN (LTRIM(v0.c0)) AND (((v0.c0) IS TRUE)))  NULLS FIRST;
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((((((((((((((rt0.c0)AND(x'')))AND(rt0.c0)))OR('WZ5?}g◖!')))OR(rt0.c2)))AND(v0.c0)))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt0.c0)AND(x'')))AND(rt0.c0)))OR('WZ5?}g◖!')))OR(rt0.c2)))AND(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((((((((((((((rt0.c0)AND(x'')))AND(rt0.c0)))OR('WZ5?}g◖!')))OR(rt0.c2)))AND(v0.c0)))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt0.c0)AND(x'')))AND(rt0.c0)))OR('WZ5?}g◖!')))OR(rt0.c2)))AND(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((((((((((((((rt0.c0)AND(x'')))AND(rt0.c0)))OR('WZ5?}g◖!')))OR(rt0.c2)))AND(v0.c0)))AND(v0.c0)) IN ()));
SELECT ALL * FROM rt0 WHERE (((((RTRIM(rt0.c1))AND((rt0.c0 IN ()))))AND((rt0.c0 IN ())))) ORDER BY '2006445535' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((RTRIM(rt0.c1))AND((rt0.c0 IN ()))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY '2006445535' ASC);
SELECT ALL * FROM rt0 WHERE (((((RTRIM(rt0.c1))AND((rt0.c0 IN ()))))AND((rt0.c0 IN ())))) ORDER BY '2006445535' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((RTRIM(rt0.c1))AND((rt0.c0 IN ()))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY '2006445535' ASC);
SELECT ALL * FROM rt0 WHERE (((((RTRIM(rt0.c1))AND((rt0.c0 IN ()))))AND((rt0.c0 IN ())))) ORDER BY '2006445535' ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE ((((NOT (rt0.c2)))||(rt0.c2 COLLATE NOCASE))) ORDER BY ((v0.c0) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))||(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0) IS TRUE) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((NOT (rt0.c2)))||(rt0.c2 COLLATE NOCASE))) ORDER BY ((v0.c0) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))||(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0) IS TRUE) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((NOT (rt0.c2)))||(rt0.c2 COLLATE NOCASE))) ORDER BY ((v0.c0) IS TRUE) ASC;
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON rt0.c0 WHERE ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON rt0.c0);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON rt0.c0 WHERE ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON rt0.c0);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON rt0.c0 WHERE ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) IN ()));
SELECT * FROM v0 WHERE (((v0.c0) ISNULL)) ORDER BY ((1505118914 IN (v0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((1505118914 IN (v0.c0)) IN ()) DESC);
SELECT * FROM v0 WHERE (((v0.c0) ISNULL)) ORDER BY ((1505118914 IN (v0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((1505118914 IN (v0.c0)) IN ()) DESC);
SELECT * FROM v0 WHERE (((v0.c0) ISNULL)) ORDER BY ((1505118914 IN (v0.c0)) IN ()) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 WHEN x'4d7e' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0) NOTNULL))))AND(0.1771222991389405))) ORDER BY (((((v0.c0) NOTNULL)))<>((((v0.c0) IS FALSE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c0 THEN v0.c0 WHEN x'4d7e' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0) NOTNULL))))AND(0.1771222991389405))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0) NOTNULL)))!=((((v0.c0) IS FALSE))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 WHEN x'4d7e' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0) NOTNULL))))AND(0.1771222991389405))) ORDER BY (((((v0.c0) NOTNULL)))<>((((v0.c0) IS FALSE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c0 THEN v0.c0 WHEN x'4d7e' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0) NOTNULL))))AND(0.1771222991389405))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0) NOTNULL)))!=((((v0.c0) IS FALSE))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 WHEN x'4d7e' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0) NOTNULL))))AND(0.1771222991389405))) ORDER BY (((((v0.c0) NOTNULL)))<>((((v0.c0) IS FALSE))))  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (json_object(json_remove(rt0.c1, rt0.c1), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)), rt0.c2 COLLATE BINARY, rt0.c2, ((rt0.c1)&(rt0.c2)), json_patch(rt0.c0, v0.c0), (rt0.c1 IN ()), ((rt0.c2)AND(0.24983461586036837))));
SELECT SUM(count) FROM (SELECT ((json_object(json_remove(rt0.c1, rt0.c1), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)), rt0.c2 COLLATE BINARY, rt0.c2, ((rt0.c1)&(rt0.c2)), json_patch(rt0.c0, v0.c0), (rt0.c1 IN ()), ((rt0.c2)AND(0.24983461586036837)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (json_object(json_remove(rt0.c1, rt0.c1), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)), rt0.c2 COLLATE BINARY, rt0.c2, ((rt0.c1)&(rt0.c2)), json_patch(rt0.c0, v0.c0), (rt0.c1 IN ()), ((rt0.c2)AND(0.24983461586036837))));
SELECT SUM(count) FROM (SELECT ((json_object(json_remove(rt0.c1, rt0.c1), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)), rt0.c2 COLLATE BINARY, rt0.c2, ((rt0.c1)&(rt0.c2)), json_patch(rt0.c0, v0.c0), (rt0.c1 IN ()), ((rt0.c2)AND(0.24983461586036837)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (json_object(json_remove(rt0.c1, rt0.c1), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)), rt0.c2 COLLATE BINARY, rt0.c2, ((rt0.c1)&(rt0.c2)), json_patch(rt0.c0, v0.c0), (rt0.c1 IN ()), ((rt0.c2)AND(0.24983461586036837))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (+ (CAST(rt0.c1 AS NUMERIC))) WHERE (CAST(((v0.c0)==(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)==(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (+ (CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (+ (CAST(rt0.c1 AS NUMERIC))) WHERE (CAST(((v0.c0)==(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)==(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (+ (CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (+ (CAST(rt0.c1 AS NUMERIC))) WHERE (CAST(((v0.c0)==(rt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT * FROM rt0, v0 WHERE ((json_array_length(rt0.c1) IN ())) ORDER BY (((((0.8195040084538476)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))||(SQLITE_SOURCE_ID())) DESC, CASE rt0.c1  WHEN CAST(rt0.c2 AS INTEGER) THEN rt0.c2 COLLATE NOCASE ELSE rt0.c0 END ASC  NULLS LAST, LENGTH(v0.c0) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((json_array_length(rt0.c1) IN ())) IS TRUE)  as count FROM rt0, v0 NOT INDEXED ORDER BY (((((0.8195040084538476)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))||(SQLITE_SOURCE_ID())) DESC, CASE rt0.c1  WHEN CAST(rt0.c2 AS INTEGER) THEN rt0.c2 COLLATE NOCASE ELSE rt0.c0 END ASC  NULLS LAST, LENGTH(v0.c0) ASC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((json_array_length(rt0.c1) IN ())) ORDER BY (((((0.8195040084538476)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))||(SQLITE_SOURCE_ID())) DESC, CASE rt0.c1  WHEN CAST(rt0.c2 AS INTEGER) THEN rt0.c2 COLLATE NOCASE ELSE rt0.c0 END ASC  NULLS LAST, LENGTH(v0.c0) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((json_array_length(rt0.c1) IN ())) IS TRUE)  as count FROM rt0, v0 NOT INDEXED ORDER BY (((((0.8195040084538476)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))||(SQLITE_SOURCE_ID())) DESC, CASE rt0.c1  WHEN CAST(rt0.c2 AS INTEGER) THEN rt0.c2 COLLATE NOCASE ELSE rt0.c0 END ASC  NULLS LAST, LENGTH(v0.c0) ASC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((json_array_length(rt0.c1) IN ())) ORDER BY (((((0.8195040084538476)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))||(SQLITE_SOURCE_ID())) DESC, CASE rt0.c1  WHEN CAST(rt0.c2 AS INTEGER) THEN rt0.c2 COLLATE NOCASE ELSE rt0.c0 END ASC  NULLS LAST, LENGTH(v0.c0) ASC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (((0.6253785761586362) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.6253785761586362) ISNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((0.6253785761586362) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.6253785761586362) ISNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((0.6253785761586362) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((((v0.c0)GLOB(rt0.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (UNLIKELY(DISTINCT rt0.c1))) WHERE (CAST(rt0.c0 AS BLOB) COLLATE BINARY) ORDER BY (((NOT (rt0.c1))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((v0.c0)GLOB(rt0.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (UNLIKELY(DISTINCT rt0.c1))) ORDER BY (((NOT (rt0.c1))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((((v0.c0)GLOB(rt0.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (UNLIKELY(DISTINCT rt0.c1))) WHERE (CAST(rt0.c0 AS BLOB) COLLATE BINARY) ORDER BY (((NOT (rt0.c1))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((v0.c0)GLOB(rt0.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (UNLIKELY(DISTINCT rt0.c1))) ORDER BY (((NOT (rt0.c1))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((((v0.c0)GLOB(rt0.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (UNLIKELY(DISTINCT rt0.c1))) WHERE (CAST(rt0.c0 AS BLOB) COLLATE BINARY) ORDER BY (((NOT (rt0.c1))) NOTNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)GLOB(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)GLOB(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)GLOB(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)GLOB(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)GLOB(rt0.c2)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((rt0.c2)%(rt0.c1)))))OR((rt0.c1 IN ())))) ORDER BY CAST((~ (rt0.c2)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((rt0.c2)%(rt0.c1)))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST((~ (rt0.c2)) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((rt0.c2)%(rt0.c1)))))OR((rt0.c1 IN ())))) ORDER BY CAST((~ (rt0.c2)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((rt0.c2)%(rt0.c1)))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST((~ (rt0.c2)) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((rt0.c2)%(rt0.c1)))))OR((rt0.c1 IN ())))) ORDER BY CAST((~ (rt0.c2)) AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) ORDER BY (('92174135') BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((v0.c0)|(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (('92174135') BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((v0.c0)|(v0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) ORDER BY (('92174135') BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((v0.c0)|(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (('92174135') BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((v0.c0)|(v0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) ORDER BY (('92174135') BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((v0.c0)|(v0.c0)))) ASC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (((SQLITE_VERSION())||(NULL))) ORDER BY 'P_u' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())||(NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY 'P_u' ASC);
SELECT * FROM v0, rt0 WHERE (((SQLITE_VERSION())||(NULL))) ORDER BY 'P_u' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())||(NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY 'P_u' ASC);
SELECT * FROM v0, rt0 WHERE (((SQLITE_VERSION())||(NULL))) ORDER BY 'P_u' ASC;
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c0) IS TRUE)) ORDER BY (((('') BETWEEN (v0.c0) AND (rt0.c2))) IS FALSE)  NULLS LAST, ((CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)=(CASE WHEN rt0.c1 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((('') BETWEEN (v0.c0) AND (rt0.c2))) IS FALSE)  NULLS LAST, ((CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)=(CASE WHEN rt0.c1 THEN v0.c0 END)));
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c0) IS TRUE)) ORDER BY (((('') BETWEEN (v0.c0) AND (rt0.c2))) IS FALSE)  NULLS LAST, ((CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)=(CASE WHEN rt0.c1 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((('') BETWEEN (v0.c0) AND (rt0.c2))) IS FALSE)  NULLS LAST, ((CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)=(CASE WHEN rt0.c1 THEN v0.c0 END)));
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c0) IS TRUE)) ORDER BY (((('') BETWEEN (v0.c0) AND (rt0.c2))) IS FALSE)  NULLS LAST, ((CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)=(CASE WHEN rt0.c1 THEN v0.c0 END));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))IS(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))IS(v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))IS(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))IS(v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))IS(v0.c0)));
SELECT ALL * FROM rt0, v0 WHERE (((CAST(v0.c0 AS REAL)) IS TRUE)) ORDER BY (((((rt0.c1))<((rt0.c0))))<=(((v0.c0)>=(v0.c0))))  NULLS LAST, ((((rt0.c1) ISNULL)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c1))<((rt0.c0))))<=(((v0.c0)>=(v0.c0))))  NULLS LAST, ((((rt0.c1) ISNULL)) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((CAST(v0.c0 AS REAL)) IS TRUE)) ORDER BY (((((rt0.c1))<((rt0.c0))))<=(((v0.c0)>=(v0.c0))))  NULLS LAST, ((((rt0.c1) ISNULL)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c1))<((rt0.c0))))<=(((v0.c0)>=(v0.c0))))  NULLS LAST, ((((rt0.c1) ISNULL)) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((CAST(v0.c0 AS REAL)) IS TRUE)) ORDER BY (((((rt0.c1))<((rt0.c0))))<=(((v0.c0)>=(v0.c0))))  NULLS LAST, ((((rt0.c1) ISNULL)) IS TRUE)  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (CASE CAST(v0.c0 AS BLOB)  WHEN load_extension(rt0.c1, rt0.c2) THEN (rt0.c0 IN ()) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((rt0.c0))==((rt0.c0))) END) ORDER BY (~ (((rt0.c2) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c0 AS BLOB)  WHEN load_extension(rt0.c1, rt0.c2) THEN (rt0.c0 IN ()) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((rt0.c0))==((rt0.c0))) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (((rt0.c2) IS FALSE)))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (CASE CAST(v0.c0 AS BLOB)  WHEN load_extension(rt0.c1, rt0.c2) THEN (rt0.c0 IN ()) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((rt0.c0))==((rt0.c0))) END) ORDER BY (~ (((rt0.c2) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c0 AS BLOB)  WHEN load_extension(rt0.c1, rt0.c2) THEN (rt0.c0 IN ()) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((rt0.c0))==((rt0.c0))) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (((rt0.c2) IS FALSE)))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (CASE CAST(v0.c0 AS BLOB)  WHEN load_extension(rt0.c1, rt0.c2) THEN (rt0.c0 IN ()) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((rt0.c0))==((rt0.c0))) END) ORDER BY (~ (((rt0.c2) IS FALSE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN CASE v0.c0  WHEN v0.c0 THEN 0.965002223574487 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)%('V]wv')) ELSE v0.c0 END) ORDER BY CAST(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE v0.c0  WHEN v0.c0 THEN 0.965002223574487 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)%('V]wv')) ELSE v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY CAST(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN CASE v0.c0  WHEN v0.c0 THEN 0.965002223574487 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)%('V]wv')) ELSE v0.c0 END) ORDER BY CAST(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE v0.c0  WHEN v0.c0 THEN 0.965002223574487 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)%('V]wv')) ELSE v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY CAST(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN CASE v0.c0  WHEN v0.c0 THEN 0.965002223574487 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)%('V]wv')) ELSE v0.c0 END) ORDER BY CAST(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) AS TEXT);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((~ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN x'f571' THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN x'f571' THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((~ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN x'f571' THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN x'f571' THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((~ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN x'f571' THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END)));
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CAST(rt0.c2 AS TEXT))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON CASE (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1)))  WHEN ((rt0.c0) IS TRUE) THEN ((((rt0.c2)AND(v0.c0)))AND(rt0.c0)) END WHERE (((CAST(v0.c0 AS TEXT))LIKE((((rt0.c0))<((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT))LIKE((((rt0.c0))<((v0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CASE (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1)))  WHEN ((rt0.c0) IS TRUE) THEN ((((rt0.c2)AND(v0.c0)))AND(rt0.c0)) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON CASE (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1)))  WHEN ((rt0.c0) IS TRUE) THEN ((((rt0.c2)AND(v0.c0)))AND(rt0.c0)) END WHERE (((CAST(v0.c0 AS TEXT))LIKE((((rt0.c0))<((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT))LIKE((((rt0.c0))<((v0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CASE (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1)))  WHEN ((rt0.c0) IS TRUE) THEN ((((rt0.c2)AND(v0.c0)))AND(rt0.c0)) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON CASE (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1)))  WHEN ((rt0.c0) IS TRUE) THEN ((((rt0.c2)AND(v0.c0)))AND(rt0.c0)) END WHERE (((CAST(v0.c0 AS TEXT))LIKE((((rt0.c0))<((v0.c0))))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((UPPER(v0.c0))%(rt0.c0 COLLATE RTRIM)) WHERE ((((((v0.c0) IS TRUE)))>((((((v0.c0)AND(rt0.c1)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) IS TRUE)))>((((((v0.c0)AND(rt0.c1)))AND(rt0.c0)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((UPPER(v0.c0))%(rt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((UPPER(v0.c0))%(rt0.c0 COLLATE RTRIM)) WHERE ((((((v0.c0) IS TRUE)))>((((((v0.c0)AND(rt0.c1)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) IS TRUE)))>((((((v0.c0)AND(rt0.c1)))AND(rt0.c0)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((UPPER(v0.c0))%(rt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((UPPER(v0.c0))%(rt0.c0 COLLATE RTRIM)) WHERE ((((((v0.c0) IS TRUE)))>((((((v0.c0)AND(rt0.c1)))AND(rt0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN '-873727849' ELSE v0.c0 END)<>((((v0.c0))<=((v0.c0)))))) ORDER BY '0.5803712081116917' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN '-873727849' ELSE v0.c0 END)<>((((v0.c0))<=((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY '0.5803712081116917' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN '-873727849' ELSE v0.c0 END)<>((((v0.c0))<=((v0.c0)))))) ORDER BY '0.5803712081116917' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN '-873727849' ELSE v0.c0 END)<>((((v0.c0))<=((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY '0.5803712081116917' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN '-873727849' ELSE v0.c0 END)<>((((v0.c0))<=((v0.c0)))))) ORDER BY '0.5803712081116917' DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL * FROM v0, rt0 WHERE (((UNLIKELY(v0.c0)) BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c0)) BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((UNLIKELY(v0.c0)) BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c0)) BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((UNLIKELY(v0.c0)) BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS NUMERIC))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((rt0.c2)AND(rt0.c1))) AND (CASE NULL  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY (NOT (((((0xffffffffa36fc80e)OR(rt0.c1)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((rt0.c2)AND(rt0.c1))) AND (CASE NULL  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((((0Xffffffffa36fc80e)OR(rt0.c1)))AND(rt0.c1)))) DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((rt0.c2)AND(rt0.c1))) AND (CASE NULL  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY (NOT (((((0xffffffffa36fc80e)OR(rt0.c1)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((rt0.c2)AND(rt0.c1))) AND (CASE NULL  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((((0Xffffffffa36fc80e)OR(rt0.c1)))AND(rt0.c1)))) DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((rt0.c2)AND(rt0.c1))) AND (CASE NULL  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY (NOT (((((0xffffffffa36fc80e)OR(rt0.c1)))AND(rt0.c1)))) DESC;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((CASE 0.49080584335238453  WHEN v0.c0 THEN v0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((CASE 0.49080584335238453  WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((CASE 0.49080584335238453  WHEN v0.c0 THEN v0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((CASE 0.49080584335238453  WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((CASE 0.49080584335238453  WHEN v0.c0 THEN v0.c0 END))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON CAST(HEX(DISTINCT rt0.c1) AS NUMERIC) WHERE (((((((((rt0.c2)OR(v0.c0)))OR(v0.c0)))AND(((rt0.c2)>=(rt0.c1)))))OR(CASE WHEN rt0.c2 THEN 0.761995311811119 WHEN '-604296328' THEN v0.c0 WHEN rt0.c1 THEN '쬍+Z>hX\r' ELSE rt0.c0 END))) ORDER BY ((((rt0.c2)>=(v0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)OR(v0.c0)))OR(v0.c0)))AND(((rt0.c2)>=(rt0.c1)))))OR(CASE WHEN rt0.c2 THEN 0.761995311811119 WHEN '-604296328' THEN v0.c0 WHEN rt0.c1 THEN '쬍+Z>hX\r' ELSE rt0.c0 END))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON CAST(HEX(DISTINCT rt0.c1) AS NUMERIC) ORDER BY ((((rt0.c2)>=(v0.c0))) NOTNULL));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON CAST(HEX(DISTINCT rt0.c1) AS NUMERIC) WHERE (((((((((rt0.c2)OR(v0.c0)))OR(v0.c0)))AND(((rt0.c2)>=(rt0.c1)))))OR(CASE WHEN rt0.c2 THEN 0.761995311811119 WHEN '-604296328' THEN v0.c0 WHEN rt0.c1 THEN '쬍+Z>hX\r' ELSE rt0.c0 END))) ORDER BY ((((rt0.c2)>=(v0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)OR(v0.c0)))OR(v0.c0)))AND(((rt0.c2)>=(rt0.c1)))))OR(CASE WHEN rt0.c2 THEN 0.761995311811119 WHEN '-604296328' THEN v0.c0 WHEN rt0.c1 THEN '쬍+Z>hX\r' ELSE rt0.c0 END))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON CAST(HEX(DISTINCT rt0.c1) AS NUMERIC) ORDER BY ((((rt0.c2)>=(v0.c0))) NOTNULL));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON CAST(HEX(DISTINCT rt0.c1) AS NUMERIC) WHERE (((((((((rt0.c2)OR(v0.c0)))OR(v0.c0)))AND(((rt0.c2)>=(rt0.c1)))))OR(CASE WHEN rt0.c2 THEN 0.761995311811119 WHEN '-604296328' THEN v0.c0 WHEN rt0.c1 THEN '쬍+Z>hX\r' ELSE rt0.c0 END))) ORDER BY ((((rt0.c2)>=(v0.c0))) NOTNULL);
SELECT COUNT(*) FROM v0, rt0 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((NOT (x'')));
SELECT COUNT(*) FROM rt0 WHERE (LTRIM(((rt0.c1)&(0X5021c08b)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN x'' END));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((rt0.c1)&(0x5021c08b)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN x'' END)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LTRIM(((rt0.c1)&(0X5021c08b)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN x'' END));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((rt0.c1)&(0x5021c08b)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN x'' END)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LTRIM(((rt0.c1)&(0X5021c08b)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN x'' END));
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN v0.c0 THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END ELSE CAST(v0.c0 AS BLOB) END) ORDER BY ((((v0.c0 IN (v0.c0, rt0.c0)), ((NULL)==(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))<=(((((0Xffffffffa85b72a4))!=((v0.c0))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)), (((NULL, v0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((rt0.c1, v0.c0, rt0.c1))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END ELSE CAST(v0.c0 AS BLOB) END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0 IN (v0.c0, rt0.c0)), ((NULL)==(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))<=(((((0xffffffffa85b72a4))<>((v0.c0))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)), (((NULL, v0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((rt0.c1, v0.c0, rt0.c1))))))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN v0.c0 THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END ELSE CAST(v0.c0 AS BLOB) END) ORDER BY ((((v0.c0 IN (v0.c0, rt0.c0)), ((NULL)==(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))<=(((((0Xffffffffa85b72a4))!=((v0.c0))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)), (((NULL, v0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((rt0.c1, v0.c0, rt0.c1))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END ELSE CAST(v0.c0 AS BLOB) END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0 IN (v0.c0, rt0.c0)), ((NULL)==(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))<=(((((0xffffffffa85b72a4))<>((v0.c0))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)), (((NULL, v0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((rt0.c1, v0.c0, rt0.c1))))))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN v0.c0 THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END ELSE CAST(v0.c0 AS BLOB) END) ORDER BY ((((v0.c0 IN (v0.c0, rt0.c0)), ((NULL)==(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))<=(((((0Xffffffffa85b72a4))!=((v0.c0))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)), (((NULL, v0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((rt0.c1, v0.c0, rt0.c1))))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(TYPEOF(DISTINCT rt0.c1))))OR((rt0.c2 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE NOCASE)AND(TYPEOF(DISTINCT rt0.c1))))OR((rt0.c2 IN (v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(TYPEOF(DISTINCT rt0.c1))))OR((rt0.c2 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE NOCASE)AND(TYPEOF(DISTINCT rt0.c1))))OR((rt0.c2 IN (v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(TYPEOF(DISTINCT rt0.c1))))OR((rt0.c2 IN (v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0))) NOTNULL)) ORDER BY (((((rt0.c2) IS TRUE)))!=((rt0.c0 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2) IS TRUE)))<>((rt0.c0 COLLATE RTRIM))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0))) NOTNULL)) ORDER BY (((((rt0.c2) IS TRUE)))!=((rt0.c0 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2) IS TRUE)))<>((rt0.c0 COLLATE RTRIM))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0))) NOTNULL)) ORDER BY (((((rt0.c2) IS TRUE)))!=((rt0.c0 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (0.7366693356465538) ORDER BY ((CAST(rt0.c1 AS BLOB))>>((+ (NULL))));
SELECT SUM(count) FROM (SELECT ALL ((0.7366693356465538) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS BLOB))>>((+ (NULL)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.7366693356465538) ORDER BY ((CAST(rt0.c1 AS BLOB))>>((+ (NULL))));
SELECT SUM(count) FROM (SELECT ALL ((0.7366693356465538) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS BLOB))>>((+ (NULL)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.7366693356465538) ORDER BY ((CAST(rt0.c1 AS BLOB))>>((+ (NULL))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (v0.c0)) COLLATE NOCASE) ORDER BY (((((((((((((v0.c0 IN ()))OR(json_remove(rt0.c1, rt0.c1, rt0.c0, rt0.c1))))OR(((NULL)IS NOT(rt0.c2)))))OR(((rt0.c0)||(rt0.c2)))))OR(((rt0.c1)&(rt0.c0)))))OR(LIKELY(rt0.c0))))OR((((rt0.c2, rt0.c1, v0.c0, v0.c0, rt0.c0))>((rt0.c2, rt0.c2, rt0.c1, rt0.c2, rt0.c1))))) ASC  NULLS LAST, CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((((((((((v0.c0 IN ()))OR(json_remove(rt0.c1, rt0.c1, rt0.c0, rt0.c1))))OR(((NULL)IS NOT(rt0.c2)))))OR(((rt0.c0)||(rt0.c2)))))OR(((rt0.c1)&(rt0.c0)))))OR(LIKELY(rt0.c0))))OR((((rt0.c2, rt0.c1, v0.c0, v0.c0, rt0.c0))>((rt0.c2, rt0.c2, rt0.c1, rt0.c2, rt0.c1))))) ASC  NULLS LAST, CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (v0.c0)) COLLATE NOCASE) ORDER BY (((((((((((((v0.c0 IN ()))OR(json_remove(rt0.c1, rt0.c1, rt0.c0, rt0.c1))))OR(((NULL)IS NOT(rt0.c2)))))OR(((rt0.c0)||(rt0.c2)))))OR(((rt0.c1)&(rt0.c0)))))OR(LIKELY(rt0.c0))))OR((((rt0.c2, rt0.c1, v0.c0, v0.c0, rt0.c0))>((rt0.c2, rt0.c2, rt0.c1, rt0.c2, rt0.c1))))) ASC  NULLS LAST, CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((((((((((v0.c0 IN ()))OR(json_remove(rt0.c1, rt0.c1, rt0.c0, rt0.c1))))OR(((NULL)IS NOT(rt0.c2)))))OR(((rt0.c0)||(rt0.c2)))))OR(((rt0.c1)&(rt0.c0)))))OR(LIKELY(rt0.c0))))OR((((rt0.c2, rt0.c1, v0.c0, v0.c0, rt0.c0))>((rt0.c2, rt0.c2, rt0.c1, rt0.c2, rt0.c1))))) ASC  NULLS LAST, CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (v0.c0)) COLLATE NOCASE) ORDER BY (((((((((((((v0.c0 IN ()))OR(json_remove(rt0.c1, rt0.c1, rt0.c0, rt0.c1))))OR(((NULL)IS NOT(rt0.c2)))))OR(((rt0.c0)||(rt0.c2)))))OR(((rt0.c1)&(rt0.c0)))))OR(LIKELY(rt0.c0))))OR((((rt0.c2, rt0.c1, v0.c0, v0.c0, rt0.c0))>((rt0.c2, rt0.c2, rt0.c1, rt0.c2, rt0.c1))))) ASC  NULLS LAST, CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((LIKELY(v0.c0))LIKE((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(v0.c0))LIKE((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((LIKELY(v0.c0))LIKE((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(v0.c0))LIKE((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((LIKELY(v0.c0))LIKE((~ (v0.c0)))));
SELECT ALL * FROM v0 WHERE ((((v0.c0))<=((v0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((v0.c0))<=((v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0))<=((v0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((v0.c0))<=((v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0))<=((v0.c0))) COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE ((- (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((CAST(v0.c0 AS REAL))AND(v0.c0)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c0 AS REAL))AND(v0.c0)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE ((- (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((CAST(v0.c0 AS REAL))AND(v0.c0)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c0 AS REAL))AND(v0.c0)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE ((- (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((CAST(v0.c0 AS REAL))AND(v0.c0)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) DESC;
SELECT * FROM v0 WHERE ((INSTR(0xffffffffcbe129a5, v0.c0) IN (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((INSTR(0xffffffffcbe129a5, v0.c0) IN (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL) DESC);
SELECT * FROM v0 WHERE ((INSTR(0xffffffffcbe129a5, v0.c0) IN (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((INSTR(0xffffffffcbe129a5, v0.c0) IN (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL) DESC);
SELECT * FROM v0 WHERE ((INSTR(0xffffffffcbe129a5, v0.c0) IN (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL) DESC;
SELECT COUNT(*) FROM v0 WHERE (TRIM(v0.c0 COLLATE RTRIM)) ORDER BY '1xm뼚27i'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(v0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0 ORDER BY '1xm뼚27i'  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (TRIM(v0.c0 COLLATE RTRIM)) ORDER BY '1xm뼚27i'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(v0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0 ORDER BY '1xm뼚27i'  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (TRIM(v0.c0 COLLATE RTRIM)) ORDER BY '1xm뼚27i'  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (((rt0.c1)<>(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)!=(rt0.c0))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((rt0.c1)<>(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)!=(rt0.c0))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((rt0.c1)<>(rt0.c0)));
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2)+(rt0.c1)))))OR((('}#怇깟') NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2)+(rt0.c1)))))OR((('}#怇깟') NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2)+(rt0.c1)))))OR((('}#怇깟') NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2)+(rt0.c1)))))OR((('}#怇깟') NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2)+(rt0.c1)))))OR((('}#怇깟') NOTNULL))));
SELECT * FROM v0 WHERE ((NOT (x'74a6'))) ORDER BY (- (SQLITE_COMPILEOPTION_GET(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (x'74a6'))) IS TRUE)  as count FROM v0 ORDER BY (- (SQLITE_COMPILEOPTION_GET(v0.c0))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((NOT (x'74a6'))) ORDER BY (- (SQLITE_COMPILEOPTION_GET(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (x'74a6'))) IS TRUE)  as count FROM v0 ORDER BY (- (SQLITE_COMPILEOPTION_GET(v0.c0))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((NOT (x'74a6'))) ORDER BY (- (SQLITE_COMPILEOPTION_GET(v0.c0))) DESC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (((((rt0.c2)>=('-304186965')))|(((rt0.c0)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=('-304186965')))|(((rt0.c0)*(rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c2)>=('-304186965')))|(((rt0.c0)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=('-304186965')))|(((rt0.c0)*(rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c2)>=('-304186965')))|(((rt0.c0)*(rt0.c0)))));
SELECT * FROM v0 WHERE (IFNULL('393369525' COLLATE RTRIM, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.9899977082999876, v0.c0))))) ORDER BY CASE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN (+ (v0.c0)) THEN (~ (v0.c0)) WHEN (+ (v0.c0)) THEN (v0.c0 IN (v0.c0, v0.c0)) WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0) NOT BETWEEN (0.31924893852976854) AND (v0.c0)) WHEN ((v0.c0)IS(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN CAST(0Xffffffffe32c4d12 AS TEXT) ELSE v0.c0 COLLATE RTRIM END DESC  NULLS FIRST, CASE WHEN ((v0.c0) NOT NULL) THEN (+ (v0.c0)) ELSE IFNULL(v0.c0, v0.c0) END ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL('393369525' COLLATE RTRIM, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.9899977082999876, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN (+ (v0.c0)) THEN (~ (v0.c0)) WHEN (+ (v0.c0)) THEN (v0.c0 IN (v0.c0, v0.c0)) WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0) NOT BETWEEN (0.31924893852976854) AND (v0.c0)) WHEN ((v0.c0)IS(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN CAST(0Xffffffffe32c4d12 AS TEXT) ELSE v0.c0 COLLATE RTRIM END DESC  NULLS FIRST, CASE WHEN ((v0.c0) NOT NULL) THEN (+ (v0.c0)) ELSE IFNULL(v0.c0, v0.c0) END ASC);
SELECT * FROM v0 WHERE (IFNULL('393369525' COLLATE RTRIM, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.9899977082999876, v0.c0))))) ORDER BY CASE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN (+ (v0.c0)) THEN (~ (v0.c0)) WHEN (+ (v0.c0)) THEN (v0.c0 IN (v0.c0, v0.c0)) WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0) NOT BETWEEN (0.31924893852976854) AND (v0.c0)) WHEN ((v0.c0)IS(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN CAST(0Xffffffffe32c4d12 AS TEXT) ELSE v0.c0 COLLATE RTRIM END DESC  NULLS FIRST, CASE WHEN ((v0.c0) NOT NULL) THEN (+ (v0.c0)) ELSE IFNULL(v0.c0, v0.c0) END ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL('393369525' COLLATE RTRIM, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.9899977082999876, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN (+ (v0.c0)) THEN (~ (v0.c0)) WHEN (+ (v0.c0)) THEN (v0.c0 IN (v0.c0, v0.c0)) WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0) NOT BETWEEN (0.31924893852976854) AND (v0.c0)) WHEN ((v0.c0)IS(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN CAST(0Xffffffffe32c4d12 AS TEXT) ELSE v0.c0 COLLATE RTRIM END DESC  NULLS FIRST, CASE WHEN ((v0.c0) NOT NULL) THEN (+ (v0.c0)) ELSE IFNULL(v0.c0, v0.c0) END ASC);
SELECT * FROM v0 WHERE (IFNULL('393369525' COLLATE RTRIM, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.9899977082999876, v0.c0))))) ORDER BY CASE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN (+ (v0.c0)) THEN (~ (v0.c0)) WHEN (+ (v0.c0)) THEN (v0.c0 IN (v0.c0, v0.c0)) WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0) NOT BETWEEN (0.31924893852976854) AND (v0.c0)) WHEN ((v0.c0)IS(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN CAST(0Xffffffffe32c4d12 AS TEXT) ELSE v0.c0 COLLATE RTRIM END DESC  NULLS FIRST, CASE WHEN ((v0.c0) NOT NULL) THEN (+ (v0.c0)) ELSE IFNULL(v0.c0, v0.c0) END ASC;
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((NOT (v0.c0)) IN ()) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 NOT INDEXED INNER JOIN rt0 ON ((NOT (v0.c0)) IN ()));
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((NOT (v0.c0)) IN ()) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 NOT INDEXED INNER JOIN rt0 ON ((NOT (v0.c0)) IN ()));
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((NOT (v0.c0)) IN ()) WHERE (x'');
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE NOCASE WHERE (((((rt0.c1) NOTNULL)) BETWEEN (0.98347697036525) AND ((((v0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) BETWEEN (0.98347697036525) AND ((((v0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE NOCASE WHERE (((((rt0.c1) NOTNULL)) BETWEEN (0.98347697036525) AND ((((v0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) BETWEEN (0.98347697036525) AND ((((v0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE NOCASE WHERE (((((rt0.c1) NOTNULL)) BETWEEN (0.98347697036525) AND ((((v0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))))));
SELECT * FROM rt0 WHERE (ABS(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))-((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))-((rt0.c2 IN ()))));
SELECT * FROM rt0 WHERE (ABS(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))-((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))-((rt0.c2 IN ()))));
SELECT * FROM rt0 WHERE (ABS(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))-((rt0.c2 IN ())));
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (8.58965243E8) AND (v0.c0))) ORDER BY CAST(((v0.c0)<=(v0.c0)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (8.58965243E8) AND (v0.c0))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY CAST(((v0.c0)<=(v0.c0)) AS INTEGER) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (8.58965243E8) AND (v0.c0))) ORDER BY CAST(((v0.c0)<=(v0.c0)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (8.58965243E8) AND (v0.c0))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY CAST(((v0.c0)<=(v0.c0)) AS INTEGER) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (8.58965243E8) AND (v0.c0))) ORDER BY CAST(((v0.c0)<=(v0.c0)) AS INTEGER) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)>>(rt0.c2))))) ORDER BY CAST((- (rt0.c2)) AS INTEGER), (+ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))), ((rt0.c1)/(0Xffffffffb3838376)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)>>(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((- (rt0.c2)) AS INTEGER), (+ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))), ((rt0.c1)/(0Xffffffffb3838376)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)>>(rt0.c2))))) ORDER BY CAST((- (rt0.c2)) AS INTEGER), (+ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))), ((rt0.c1)/(0Xffffffffb3838376)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)>>(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((- (rt0.c2)) AS INTEGER), (+ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))), ((rt0.c1)/(0Xffffffffb3838376)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)>>(rt0.c2))))) ORDER BY CAST((- (rt0.c2)) AS INTEGER), (+ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))), ((rt0.c1)/(0Xffffffffb3838376)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2, '⩜~q', rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2, '⩜~q', rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2))) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2, '⩜~q', rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2, '⩜~q', rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2))) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2, '⩜~q', rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2))) IN ()));
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE NOCASE) ISNULL) WHERE (((((((((((rt0.c2)OR(rt0.c0)))AND(NULL)))OR(v0.c0)))OR(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY NULL  NULLS LAST, rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR(rt0.c0)))AND(NULL)))OR(v0.c0)))OR(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE NOCASE) ISNULL) ORDER BY NULL  NULLS LAST, rt0.c1  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE NOCASE) ISNULL) WHERE (((((((((((rt0.c2)OR(rt0.c0)))AND(NULL)))OR(v0.c0)))OR(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY NULL  NULLS LAST, rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR(rt0.c0)))AND(NULL)))OR(v0.c0)))OR(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE NOCASE) ISNULL) ORDER BY NULL  NULLS LAST, rt0.c1  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE NOCASE) ISNULL) WHERE (((((((((((rt0.c2)OR(rt0.c0)))AND(NULL)))OR(v0.c0)))OR(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY NULL  NULLS LAST, rt0.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c0)OR(v0.c0))))) ORDER BY CASE WHEN CAST(x'' AS REAL) THEN (+ (v0.c0)) END ASC  NULLS LAST, UNLIKELY(((v0.c0)&(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(x'' AS REAL) THEN (+ (v0.c0)) END ASC  NULLS LAST, UNLIKELY(((v0.c0)&(v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c0)OR(v0.c0))))) ORDER BY CASE WHEN CAST(x'' AS REAL) THEN (+ (v0.c0)) END ASC  NULLS LAST, UNLIKELY(((v0.c0)&(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(x'' AS REAL) THEN (+ (v0.c0)) END ASC  NULLS LAST, UNLIKELY(((v0.c0)&(v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c0)OR(v0.c0))))) ORDER BY CASE WHEN CAST(x'' AS REAL) THEN (+ (v0.c0)) END ASC  NULLS LAST, UNLIKELY(((v0.c0)&(v0.c0)))  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (SQLITE_SOURCE_ID());
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TRIM(DISTINCT (((rt0.c1))==((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (((rt0.c1))=((rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TRIM(DISTINCT (((rt0.c1))==((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (((rt0.c1))=((rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TRIM(DISTINCT (((rt0.c1))==((rt0.c1)))));
SELECT ALL * FROM v0, rt0 WHERE (NULLIF(DISTINCT v0.c0 COLLATE NOCASE, CASE v0.c0  WHEN rt0.c2 THEN v0.c0 END)) ORDER BY (rt0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT v0.c0 COLLATE NOCASE, CASE v0.c0  WHEN rt0.c2 THEN v0.c0 END)) IS TRUE)  as count FROM v0, rt0 ORDER BY (rt0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (NULLIF(DISTINCT v0.c0 COLLATE NOCASE, CASE v0.c0  WHEN rt0.c2 THEN v0.c0 END)) ORDER BY (rt0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT v0.c0 COLLATE NOCASE, CASE v0.c0  WHEN rt0.c2 THEN v0.c0 END)) IS TRUE)  as count FROM v0, rt0 ORDER BY (rt0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (NULLIF(DISTINCT v0.c0 COLLATE NOCASE, CASE v0.c0  WHEN rt0.c2 THEN v0.c0 END)) ORDER BY (rt0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE ('1713573044' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('1713573044' COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ('1713573044' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('1713573044' COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ('1713573044' COLLATE BINARY);
SELECT * FROM rt0 NOT INDEXED, v0 WHERE (((((rt0.c0) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0 NOT INDEXED, v0 WHERE (((((rt0.c0) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0 NOT INDEXED, v0 WHERE (((((rt0.c0) IS FALSE)) IS TRUE));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON CAST(CAST(rt0.c0 AS INTEGER) AS REAL) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CAST(CAST(rt0.c0 AS INTEGER) AS REAL));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON CAST(CAST(rt0.c0 AS INTEGER) AS REAL) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CAST(CAST(rt0.c0 AS INTEGER) AS REAL));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON CAST(CAST(rt0.c0 AS INTEGER) AS REAL) WHERE (x'');
SELECT * FROM v0 WHERE (json(((v0.c0)>>(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json(((v0.c0)>>(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (json(((v0.c0)>>(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json(((v0.c0)>>(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (json(((v0.c0)>>(v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY (((NOT (v0.c0)))GLOB((v0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))GLOB((v0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY (((NOT (v0.c0)))GLOB((v0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))GLOB((v0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY (((NOT (v0.c0)))GLOB((v0.c0 IN ()))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) NOT NULL))==(CASE rt0.c0  WHEN 0x6cf11068 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL))=(CASE rt0.c0  WHEN 0X6cf11068 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) NOT NULL))==(CASE rt0.c0  WHEN 0x6cf11068 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL))=(CASE rt0.c0  WHEN 0X6cf11068 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) NOT NULL))==(CASE rt0.c0  WHEN 0x6cf11068 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT COUNT(*) FROM v0, rt0 NOT INDEXED WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY json_extract('', ((0Xffffffffeff7a91e)%(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY json_extract('', ((0xffffffffeff7a91e)%(v0.c0))) DESC);
SELECT COUNT(*) FROM v0, rt0 NOT INDEXED WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY json_extract('', ((0Xffffffffeff7a91e)%(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY json_extract('', ((0xffffffffeff7a91e)%(v0.c0))) DESC);
SELECT COUNT(*) FROM v0, rt0 NOT INDEXED WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY json_extract('', ((0Xffffffffeff7a91e)%(v0.c0))) DESC;
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c2) NOT NULL))>>(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((1193953219) NOT BETWEEN ((v0.c0 IN ())) AND (((((rt0.c2)OR('418249769')))OR(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL))>>(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((1193953219) NOT BETWEEN ((v0.c0 IN ())) AND (((((rt0.c2)OR('418249769')))OR(rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c2) NOT NULL))>>(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((1193953219) NOT BETWEEN ((v0.c0 IN ())) AND (((((rt0.c2)OR('418249769')))OR(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL))>>(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((1193953219) NOT BETWEEN ((v0.c0 IN ())) AND (((((rt0.c2)OR('418249769')))OR(rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c2) NOT NULL))>>(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((1193953219) NOT BETWEEN ((v0.c0 IN ())) AND (((((rt0.c2)OR('418249769')))OR(rt0.c0)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1))))<=((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1))))<=((rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1))))<=((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1))))<=((rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1))))<=((rt0.c2))));
SELECT ALL * FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END IN ((rt0.c0 IN ())))) ORDER BY (((((rt0.c2 IN (rt0.c2)))AND(((rt0.c0)IS(rt0.c0)))))OR(rt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END IN ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2 IN (rt0.c2)))AND(((rt0.c0)IS(rt0.c0)))))OR(rt0.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END IN ((rt0.c0 IN ())))) ORDER BY (((((rt0.c2 IN (rt0.c2)))AND(((rt0.c0)IS(rt0.c0)))))OR(rt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END IN ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2 IN (rt0.c2)))AND(((rt0.c0)IS(rt0.c0)))))OR(rt0.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END IN ((rt0.c0 IN ())))) ORDER BY (((((rt0.c2 IN (rt0.c2)))AND(((rt0.c0)IS(rt0.c0)))))OR(rt0.c0 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY 0.5787959100690045 DESC  NULLS FIRST, CAST(((v0.c0)OR(NULL)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY 0.5787959100690045 DESC  NULLS FIRST, CAST(((v0.c0)OR(NULL)) AS INTEGER) ASC);
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY 0.5787959100690045 DESC  NULLS FIRST, CAST(((v0.c0)OR(NULL)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY 0.5787959100690045 DESC  NULLS FIRST, CAST(((v0.c0)OR(NULL)) AS INTEGER) ASC);
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY 0.5787959100690045 DESC  NULLS FIRST, CAST(((v0.c0)OR(NULL)) AS INTEGER) ASC;
SELECT * FROM rt0, v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(x'')))AND(v0.c0)))OR(rt0.c1)))*(rt0.c0 COLLATE NOCASE))) ORDER BY CASE ((rt0.c2) ISNULL)  WHEN (- (rt0.c1)) THEN ((rt0.c2)+(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c0)))AND(x'')))AND(v0.c0)))OR(rt0.c1)))*(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((rt0.c2) ISNULL)  WHEN (- (rt0.c1)) THEN ((rt0.c2)+(rt0.c2)) END ASC);
SELECT * FROM rt0, v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(x'')))AND(v0.c0)))OR(rt0.c1)))*(rt0.c0 COLLATE NOCASE))) ORDER BY CASE ((rt0.c2) ISNULL)  WHEN (- (rt0.c1)) THEN ((rt0.c2)+(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c0)))AND(x'')))AND(v0.c0)))OR(rt0.c1)))*(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((rt0.c2) ISNULL)  WHEN (- (rt0.c1)) THEN ((rt0.c2)+(rt0.c2)) END ASC);
SELECT * FROM rt0, v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(x'')))AND(v0.c0)))OR(rt0.c1)))*(rt0.c0 COLLATE NOCASE))) ORDER BY CASE ((rt0.c2) ISNULL)  WHEN (- (rt0.c1)) THEN ((rt0.c2)+(rt0.c2)) END ASC;
SELECT * FROM v0 WHERE (((v0.c0)<=(v0.c0)) COLLATE BINARY COLLATE BINARY) ORDER BY ((((v0.c0)||(v0.c0)))<(((v0.c0)<>(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)<=(v0.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)||(v0.c0)))<(((v0.c0)<>(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0)<=(v0.c0)) COLLATE BINARY COLLATE BINARY) ORDER BY ((((v0.c0)||(v0.c0)))<(((v0.c0)<>(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)<=(v0.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)||(v0.c0)))<(((v0.c0)<>(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0)<=(v0.c0)) COLLATE BINARY COLLATE BINARY) ORDER BY ((((v0.c0)||(v0.c0)))<(((v0.c0)<>(v0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((((rt0.c0)OR(rt0.c1)))AND('-317521501')))OR(rt0.c2)))AND(0.9153921758375494)))OR(rt0.c0)))OR(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((((((rt0.c0)OR(rt0.c1)))AND('-317521501')))OR(rt0.c2)))AND(0.9153921758375494)))OR(rt0.c0)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((((rt0.c0)OR(rt0.c1)))AND('-317521501')))OR(rt0.c2)))AND(0.9153921758375494)))OR(rt0.c0)))OR(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((((((rt0.c0)OR(rt0.c1)))AND('-317521501')))OR(rt0.c2)))AND(0.9153921758375494)))OR(rt0.c0)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((((rt0.c0)OR(rt0.c1)))AND('-317521501')))OR(rt0.c2)))AND(0.9153921758375494)))OR(rt0.c0)))OR(rt0.c1)) IN ()));
SELECT * FROM v0, rt0 WHERE ((- ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((- ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((- ((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) ISNULL));
SELECT ALL * FROM rt0, v0 WHERE ((+ ((('1254687612')LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((('1254687612')LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((+ ((('1254687612')LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((('1254687612')LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((+ ((('1254687612')LIKE(rt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((0x5c9319c3) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((0x5c9319c3) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((0x5c9319c3) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((0x5c9319c3) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((0x5c9319c3) NOTNULL) COLLATE BINARY);
SELECT ALL * FROM v0, rt0 WHERE (CAST(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)) AS NUMERIC)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL DESC);
SELECT ALL * FROM v0, rt0 WHERE (CAST(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)) AS NUMERIC)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL DESC);
SELECT ALL * FROM v0, rt0 WHERE (CAST(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)) AS NUMERIC)) ORDER BY NULL DESC;
SELECT * FROM v0 INNER JOIN rt0 ON x'' WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) AS NUMERIC)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON x'');
SELECT * FROM v0 INNER JOIN rt0 ON x'' WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) AS NUMERIC)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON x'');
SELECT * FROM v0 INNER JOIN rt0 ON x'' WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) AS NUMERIC));
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL * FROM v0, rt0 WHERE (NULL) ORDER BY (((v0.c0, '-0.0', -313006235, ((v0.c0)OR(rt0.c2)), ((rt0.c2)>('380243682'))))=((NULLIF(rt0.c1, rt0.c0), (NOT (rt0.c0)), (rt0.c0 IN ()), (rt0.c0 IN (rt0.c1)), ((rt0.c0)IS NOT(rt0.c2))))), LIKELIHOOD(((0.6455279666760395) NOTNULL), 0.7424813712445013), NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c0, '-0.0', -313006235, ((v0.c0)OR(rt0.c2)), ((rt0.c2)>('380243682'))))=((NULLIF(rt0.c1, rt0.c0), (NOT (rt0.c0)), (rt0.c0 IN ()), (rt0.c0 IN (rt0.c1)), ((rt0.c0)IS NOT(rt0.c2))))), LIKELIHOOD(((0.6455279666760395) NOTNULL), 0.7424813712445013), NULL DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (NULL) ORDER BY (((v0.c0, '-0.0', -313006235, ((v0.c0)OR(rt0.c2)), ((rt0.c2)>('380243682'))))=((NULLIF(rt0.c1, rt0.c0), (NOT (rt0.c0)), (rt0.c0 IN ()), (rt0.c0 IN (rt0.c1)), ((rt0.c0)IS NOT(rt0.c2))))), LIKELIHOOD(((0.6455279666760395) NOTNULL), 0.7424813712445013), NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c0, '-0.0', -313006235, ((v0.c0)OR(rt0.c2)), ((rt0.c2)>('380243682'))))=((NULLIF(rt0.c1, rt0.c0), (NOT (rt0.c0)), (rt0.c0 IN ()), (rt0.c0 IN (rt0.c1)), ((rt0.c0)IS NOT(rt0.c2))))), LIKELIHOOD(((0.6455279666760395) NOTNULL), 0.7424813712445013), NULL DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (NULL) ORDER BY (((v0.c0, '-0.0', -313006235, ((v0.c0)OR(rt0.c2)), ((rt0.c2)>('380243682'))))=((NULLIF(rt0.c1, rt0.c0), (NOT (rt0.c0)), (rt0.c0 IN ()), (rt0.c0 IN (rt0.c1)), ((rt0.c0)IS NOT(rt0.c2))))), LIKELIHOOD(((0.6455279666760395) NOTNULL), 0.7424813712445013), NULL DESC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c2) IS FALSE) IN ())) ORDER BY (- ((- (x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) IS FALSE) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (- ((- (x''))))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c2) IS FALSE) IN ())) ORDER BY (- ((- (x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) IS FALSE) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (- ((- (x''))))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c2) IS FALSE) IN ())) ORDER BY (- ((- (x''))))  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN ((rt0.c0) NOT NULL) THEN '953943843' ELSE (v0.c0 IN (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOT NULL) THEN '953943843' ELSE (v0.c0 IN (rt0.c2)) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN ((rt0.c0) NOT NULL) THEN '953943843' ELSE (v0.c0 IN (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOT NULL) THEN '953943843' ELSE (v0.c0 IN (rt0.c2)) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN ((rt0.c0) NOT NULL) THEN '953943843' ELSE (v0.c0 IN (rt0.c2)) END);
