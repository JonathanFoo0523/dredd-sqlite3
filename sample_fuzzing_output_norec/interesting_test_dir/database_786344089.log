-- Time: 2024/06/09 06:52:37
-- Database: database89
-- Database version: 3.40.0
-- seed value: 786344089
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INTEGER ); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (-1051411726, '铒]'), ('-1051411726', ''), (0.15599098247028353, 0.7418238365661597); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0) VALUES (0.44588584516738217, 'GK\ne'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2) VALUES (0.6826975911463089, ''), (NULL, 1.796248786E9), ('', 272385004); -- 3ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
PRAGMA temp.default_cache_size; -- 0ms;
PRAGMA optimize; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO rt0(c3, c2, c1) VALUES ('', NULL, x'730d'), (2.72385004E8, '272385004', NULL), (0.8030146252618656, '1260615750', x''); -- 0ms;
PRAGMA wal_autocheckpoint = -4990689615571985826; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c1, c0, c3) VALUES (1.26061575E9, '', '', 526357906), (x'', 'F*~3⮕3+鳐5', 0.14062007341849303, '-910562578'), (0.2614405759202052, 0xffffffffc2709cd0, x'', x''), (x'8bc9', NULL, '1796248786', '1050368417'), ('1260615750', NULL, -1712885997, 0xffffffffadf0d083); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3, c2) VALUES ('', 0x103c43ec, '^ON%fQ沆'); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0, c1) VALUES (x'', '[]s[{]', '-1712885997'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c3) VALUES (NULL, NULL, x'04e9'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA threads; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'', 0.024981257444892435, NULL, NULL), (0.6826975911463089, NULL, -1.765528683E9, 0.5066937081621583), (NULL, '-1914049150', '1796248786', '-1032807216'), ((+ (LOWER(DISTINCT x''))), '''X', 0.32581629641092846, NULL), ('0.44588584516738217', x'', '1260615750', '-898114799'); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0, c2) VALUES (NULL, '0.024981257444892435', ''); -- 1ms;
END TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (0.7418238365661597, NULL, 0.051189722367139256, -1.91404915E9), (0.35885697440393494, NULL, 0.9194023267411662, NULL), ('[]', NULL, 450718854, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('-1712885997', x'', '-930619115', 0.17268359737260086); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c3, c0) VALUES ('[]s[{]', x'a069', x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3, c2) VALUES (1260615750, NULL, NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) NOT BETWEEN ('1448523379' COLLATE BINARY) AND ((('-1476549990')&(0.8966189025342891)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 -1051411726 sz=1696699537 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.35664839290957595 COLLATE RTRIM)>(((-1.051411726E9) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-488788654 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')=('623874683'))) NOT BETWEEN ((((x''))==((' Uy')))) AND (NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.7832100909637943 AS NUMERIC) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((('-1765528683')!=('6'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.41248869387471077, '\Tq3[8', x'')) NOT BETWEEN ((x'', '1835499145', 0X5d1fe36f)) AND ((1696699537, '-1278598979', NULL)))) NOT BETWEEN (((((x'')OR(x'f6b0')))OR(x''))) AND (CASE '~l9q'  WHEN NULL THEN NULL WHEN NULL THEN 'k^t' WHEN x'' THEN '1835499145' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=840846927 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (('0.32581629641092846')) AND (((((''))>((NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1733855246 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'20e5') IS FALSE))<>(((((NULL)AND(x'4095')))AND(372796709)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1051411726 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-2124580458'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1476549990 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '708870648 0 1824937629 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-589936402'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(0.5880293607359942) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1091899407'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE -0.0  WHEN x'' THEN NULL END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2031150288 sz=1460077013 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1696699537 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1156852937 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((COALESCE(0.7614965663565422, 0.25826679615946013))AND(((0.6845868570765147) NOT BETWEEN (x'') AND (x'')))))OR((('PNF{kzxnc') NOT BETWEEN (0.9365202820890283) AND (NULL)))))OR(((((((((x'')AND('')))OR(NULL)))AND(0.4229648247346156)))AND(0.18350335613469393)))))OR(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)==(((((NULL)AND(x'68901d6e')))OR(1.796248786E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1562370927 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1605319477'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATETIME(((NULL) IS FALSE), CASE x''  WHEN NULL THEN '斔cj' WHEN 0.7418238365661597 THEN '' WHEN -1712885997 THEN NULL ELSE '' END, ((0X3156c5d7) NOT BETWEEN ('6Nd!onW*\r') AND (0.14062007341849303))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-690095910 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1156852937 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN NULL THEN 0.7616044830906268 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=550692052 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 0.42981938377997764 THEN 0.8408768823562147 END)<((+ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1196595480 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1860746843 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1196595480 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')LIKE(((((((((NULL)AND(x'')))AND('623874683')))AND('')))OR(x'6215')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1051411726 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1706776920 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.5711978789778648 COLLATE NOCASE AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1559684792'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1733855246 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1278704048 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (TIME('ZRjD', 0X33106b29, 0.4256639915493954, 0.3312845682065051, NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'ﯿ,NYC~'; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1207954810'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT x'' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1706776920 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5074016930578714)) BETWEEN (((('0.44588584516738217') IS FALSE))) AND ((CASE x'd94c'  WHEN x'e1e7' THEN x'bf5cefca' WHEN '-1349941908' THEN '' WHEN '-539562900' THEN 0x252f927b ELSE 0.27454611284508823 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=199975187 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1373987741'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-780433885') IS TRUE))OR((((('-953009147')AND(0.4256639915493954)))OR(NULL)))))AND((('Z쉨O3y{)P') NOT BETWEEN ('Lm') AND (x'34c1')))))AND(((0.1848195899734839)GLOB('\r')))))AND('hd' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1605319477'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 4 sz=1856513125 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1091899407 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1050368417'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1746019718 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')AND(0X2aafc160)))OR('1050368417')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=992884305 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.38698991439793295 AS NUMERIC)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (NULL) AND ('d粈w')))<<(((x'1b5b') BETWEEN ('-1746019718') AND ('')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '557863033'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('FALSE' IN ()))OR((NULL IN ('0.5066937081621583')))))OR(((0.44514947757015855)LIKE('x읦vB*ⳉeAA')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=788564370 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((1.896676351E9)OR(0.024981257444892435)))OR(NULL)))AND(((((NULL)AND('-589936402')))OR(NULL)))))OR((NOT ('')))))OR(((NULL) BETWEEN (NULL) AND (x'')))))AND(((x'')>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-589936402 1696699537 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x570701d5; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1453868439 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-582130537 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN ((NULL) BETWEEN (x'') AND (-1278704048)) WHEN json_patch(0.5711978789778648, 1260615750) THEN UNICODE(x'') WHEN (('-1091105109') NOT BETWEEN (NULL) AND (0.9677672472460238)) THEN (('-1605319477')=(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1207954810 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '402317073 -1054390265 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=557863033 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1506240906 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('191032093')AND(327108435)))OR(NULL)))OR(-1e500)))AND(1589149077)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-306619859 sz=1050368417 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1570465172'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1860746843 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1448523379')OR('1931531859')))OR(0.12929740869653294)))IS NOT((((x'', '', '2	#S'))>(('/', 0Xffffffff911741a5, 0.15638962402559753))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1815636725 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0xffffffffb7bf9ffd))!=(('')))) NOT BETWEEN ((('1674922048')>>(NULL))) AND (((0.8880424481391308) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1048293280 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1589149077 sz=-1376726909 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -142097622 sz=-1605319477 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1499868140 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3815053330431738) NOT BETWEEN (NULL) AND (0.4256639915493954)) IN ()); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'', NULL, '2105306702', x'0fef', -1453868439)) BETWEEN ((NULL COLLATE NOCASE, (0.5877224621595253 IN ()), CASE 'hXYq%'  WHEN 1.825161832E9 THEN NULL ELSE x'' END, LOWER(DISTINCT NULL), (- (NULL)))) AND ((0X109c96f, ((x'') IS TRUE), (~ ('')), ((-953009147) NOT BETWEEN (NULL) AND ('')), ((0.12929740869653294)&(1835499145))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=809058649 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(TRIM(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((MAX(NULL, x'f0af'))||(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=318480701 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 sz=708870648'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2031150288 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN TYPEOF(DISTINCT '-2092159658') THEN ((x'') IS FALSE) WHEN CASE WHEN x'3f4d' THEN NULL WHEN '-1212178435' THEN 1747911114 WHEN NULL THEN NULL WHEN NULL THEN NULL WHEN x'' THEN 'zO/' ELSE '+' END THEN (((('')AND('')))AND(x'')) WHEN ((((0.4269128796501165)OR(x'')))OR('[]')) THEN CASE WHEN NULL THEN 1571223858 ELSE -2005550744 END END; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1689372184 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)%(CASE '9QJ8QUf*~'  WHEN NULL THEN x'' WHEN 1931531859 THEN NULL WHEN '1257179319' THEN 0.15599098247028353 ELSE 0.7341453528042515 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.7418238365661597 IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('2105306702' AS NUMERIC)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2072232839 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.5588906296627055) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' COLLATE NOCASE AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1674922048 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=739490107 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1570465172 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1530048708 sz=992884305 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1662632444 sz=-1478800265 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1896676351'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1069661021 sz=623874683'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0x2562326f) BETWEEN (0.9320457727903727) AND (x''))  WHEN (('1350916604')<(NULL)) THEN ((x'') ISNULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1180386477'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1863603658 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.5229039811276057 AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1036191016 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((1747911114) BETWEEN ('') AND ('1527034773')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0.3403941717963145)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1122235802 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1150243484 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (-1765528683))  WHEN (((-6.9009591E8, 'Z쉨O3y{)P', 1.26061575E9)) NOT BETWEEN (('葟''ꋦad0[', NULL, 0.41248869387471077)) AND (('NW\', NULL, x''))) THEN (((('썄')AND(NULL)))AND(0.023823304623488584)) WHEN (NULL IN ('627192431')) THEN ((1.696699537E9)/(NULL)) WHEN (((((((('f<bB')OR(0.44360655761025536)))OR(x'')))AND(0.9012025541241507)))OR(x'')) THEN CAST('827770327' AS BLOB) WHEN ((-2.124580458E9) NOT NULL) THEN UNICODE(NULL) WHEN ((NULL) NOT NULL) THEN x'' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1083781269 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-589936402')IS NOT(0.7925560464800753)))AND((x'd0ff' IN ()))))AND((((0X20257c88))>=(('Eꔵ'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')==(0.8966189025342891)))OR('928106342' COLLATE NOCASE)))OR((809058649 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(NULL))!=(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'c7c3')<>('1048293280')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN x'' ELSE '뱁m乏5^Dꖬ)' END)>(((((((((NULL)OR('\r')))OR(NULL)))AND('f*~3⮕3+鳐5')))AND('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS NUMERIC)) NOT BETWEEN ((- ('ZkJ'))) AND ((((('532691397')AND(NULL)))AND('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1828411992'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', '0.9012025541241507', NULL)) BETWEEN ((('1526640751' IN ()), ((x'')==('1142652162')), ((0.3312845682065051)OR(-1.212178435E9)))) AND ((CAST('葟''ꋦad0[' AS INTEGER), (('FALSE') BETWEEN ('-p禖wHX⪺') AND (0.2518434732796885)), json_patch(0.14037350271308002, 0Xffffffffdd4d6497)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)<>((NOT (0.4397465506282354)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((NULL)*(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-493818795 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1156852937 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-911390494 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1980239477 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2105306702 -1196595480'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1091899407 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=338789977 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.746019718E9)<<(0x6797309e)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-2018388113'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1747911114')AND('')))AND(x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT (x'784f')))OR(json_quote(NULL))))OR((('-1886720835')|(0.7265081949114173)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'f13e')OR(NULL)))AND(x'')))AND((((0.9916127247253792)) NOT BETWEEN ((x'86d7')) AND ((0.2319679121059981))))))AND(0xfffffffff303c684 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(0.8077918706024836); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-953009147'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1051411726' IN ()))<<(NULLIF(DISTINCT x'68c8', '￿⟒'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1753244570 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1896676351 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.047036215304723905))>=((NULL)))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-157613321 sz=-1376726909 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-496648669 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '191032093 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1032807216'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.3815053330431738 COLLATE RTRIM AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '327108435 sz=17418607'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-14235583 sz=1559534701 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=788564370 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-38893553 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 274410799 sz=-341520194 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.3361450469080881 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-376866785'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1191670820) NOTNULL)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1342260840' COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((0.7616044830906268)OR('')))OR(NULL)))OR(x'')))AND(NULL))  WHEN CAST(x'' AS BLOB) THEN (NOT (0.15638962402559753)) ELSE ((x'')>=(0x36d429e9)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1765481401'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=851359555 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.6288606012141399 COLLATE NOCASE  WHEN ((NULL)>>(x'')) THEN CAST(0.41248869387471077 AS NUMERIC) ELSE (x'' IN (NULL, '-537987347')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN (((NULL)IS NOT(x'91fa'))) AND (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')OR('')))AND(0X30394159))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1711139652 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1856513125 sz=1919740280'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-733794311) IS TRUE))-(0.7064129896642022)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -1066194531'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1747911114 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)AND(x'fa415f5b')))OR(x'')))OR(((NULL)!=(0.5229039811276057)))))AND(CASE WHEN NULL THEN '>U' ELSE '627192431' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1686267885'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN x'' THEN NULL ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1746019718'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS NUMERIC) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-753591683 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1765528683 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '856714025 0 sz=788564370 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type((((0xffffffffcf60029c, '', ''))==((0.560155818431747, 0.41248869387471077, x'9614')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((0.2757391555626242)<<(836787082)), '-575397235'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1635494939 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-539562900 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('215374365' AS NUMERIC) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 0x195f6f3b THEN x'29a7' END IN (UNLIKELY(1297596587))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((((((('QR''URg\nU')AND('')))AND(x'a7482118')))OR(1.835499145E9)))OR(0.5877224621595253))  WHEN (('')/(0Xffffffffb4bbd03a)) THEN (0.09218937645280267 IN ()) ELSE CAST(NULL AS NUMERIC) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('<wp9') BETWEEN (0.6987438765361168) AND (x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1478800265 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-898114799 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(DISTINCT '-1149091697')) BETWEEN (GLOB(NULL, NULL)) AND (json_array(x'025468e3', 0.6108982711065996))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(ABS(DISTINCT '1068728132'), ((0.3420877284764684)*(x'4aa928b7'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1445354146'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1492994097 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS REAL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2072232839'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1278404243'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.047036215304723905')) NOT BETWEEN ((((x'') NOT BETWEEN (NULL) AND (NULL)))) AND ((COALESCE(DISTINCT 0.18350335613469393, '-306657198')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '716161376 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('H*-') BETWEEN (1927716304) AND ('')))||(('557863033' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-150747941 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=560719582 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9677672472460238) IS FALSE))<=(((x'') NOT BETWEEN (NULL) AND (0xffffffff98a777f2)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-1989601044 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (x'') AND (NULL)))AND((((0.5880293607359942))>=((-380961150))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract((NULL IN ()), (((x'', x'0477', x'caa8')) NOT BETWEEN ((NULL, NULL, x'')) AND ((NULL, x'a0f7971d', '뱁m乏5^Dꖬ)'))), (('')&(NULL)), ((('995809179')) NOT BETWEEN (('4Slh')) AND ((-1207954810)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1069661021 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=852963530 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length((((NULL))<=((0xffffffffaedf58f9))), (NOT (0.44860003075911437))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'a87b')OR('斔cj')))OR(0.018406787358969723)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-582130537'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1261444590 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(DISTINCT x''))/(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (NULL) AND (-1.051411726E9)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((x'937c', 0.9600017501115412, '1644130266')) BETWEEN ((-1.559684792E9, '+_x^+Q16', '56538034')) AND ((0.1892408578061031, '', 0.18960032764875678))) THEN ((('0.8077918706024836')) BETWEEN ((-2.005550744E9)) AND ((384554019))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1036191016'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (GLOB(0.6497215793131551, NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT NULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN '-690095910' ELSE x'765a' END)|((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1478800265 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1442911356 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-815505376 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (x'25fe' IN ())  WHEN ((((x'f67d')AND('o	')))OR(x'64f29a35')) THEN (- (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1573497852 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1835499145 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-747062492 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-80009440 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-910562578 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1770786782 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1156852937 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1703235590 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=-488788654 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.2306867398426523 IN ()))IS NOT((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1801954773 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1207954810'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER((('?L')GLOB(x'3aae'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0xffffffffa97e6263  WHEN x'' THEN '0.2306867398426523' WHEN 0.805980637774004 THEN x'' WHEN 526357906 THEN x'' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 747653824 -1271643195 sz=-1666013060 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('xHT\n-' IN (0.3795774595634357)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1163729130 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'f9b0'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN (x'314d', 0.7912528575672345)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(DISTINCT '')) NOT BETWEEN (((0.32581629641092846) ISNULL)) AND (CAST(NULL AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('-582130537' COLLATE NOCASE)AND(CAST('k^t' AS REAL))))OR(((x'')>>(x'')))))AND(CAST('440671225' AS NUMERIC))))AND(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2082577461 2 sz=1055640174 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=302702089 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=874085724 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((CASE -935543479  WHEN NULL THEN NULL ELSE x'2f88' END, ('1796248786' IN ()), '' COLLATE RTRIM))<=(((('L7L0u2/&') NOT BETWEEN (0X12fba13d) AND (0.6874236372187927)), ((NULL)+('{䆥盳L')), IFNULL('zrjd', x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'')+(NULL))  WHEN ((x'ba07') IS FALSE) THEN ((((((((((((x'')OR('')))AND(0.3438563842647382)))OR(NULL)))AND('992884305')))AND('&vS]!''.	]')))AND(-171304934)) WHEN (((0.312990919476153))<>((0.3034870986521585))) THEN (~ (0Xffffffffa957ba69)) WHEN CASE 1931531859  WHEN -756982299 THEN 0.5872350555925928 END THEN (('1156852937') NOT BETWEEN (NULL) AND (x'')) ELSE ((('cg	y	nRUU')) NOT BETWEEN (('-69957016')) AND ((0Xffffffffeda0a317))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LTRIM('&h6X晁5&') AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'8650'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '{W'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1005920329 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1231370142 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)*(x'f8ec')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY((((-338440898)) BETWEEN ((0x67b61047)) AND ((NULL))), ((x'')IS NOT(0X28640e21)), (('0.6497215793131551')IS(x'')), (x'ec99' IN ()), ('' IN ('~l9q'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((NULL) IS TRUE), ('cg	y	nruu' IN ()), '' COLLATE NOCASE, (('6\>q')<(0.6266606998293972))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('now') IS FALSE)))!=(((+ (''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'ef52')) NOT BETWEEN ((x'' COLLATE BINARY)) AND ((x'9c23'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=1052580718 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-705914403 -1958163136 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2602633'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0.22740873300229392 THEN '5804564927488108348-' WHEN x'5247' THEN '1931531859' WHEN x'' THEN 0.45557669268967926 ELSE NULL END)OR(((NULL)=(NULL)))))AND(0Xbeb6113)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1540293735'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-539562900 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.26038695405505374)OR(0.2121555841846684)))AND(x''))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2074335831 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2088487789 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1712885997'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')/(0.849014510499434)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=450718854 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2587815 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=4748010'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('788564370' AS NUMERIC))OR((- ('-1207954810')))))AND(((x'')>=(901036689)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=676620376 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-598381098 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-238000570 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1587074198 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('882618441' COLLATE RTRIM) BETWEEN ('-53147011' COLLATE NOCASE) AND (x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2097644838 sz=1054434153 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5200815823896713 AS REAL)) BETWEEN (((0x557b2dcd)-(NULL))) AND (((((((((NULL)AND(0.5520485348800716)))AND(0.9600017501115412)))OR(NULL)))OR(0X37955e6e)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_remove(x'', 0.901770195050054))<=((('') NOT BETWEEN (0X6c386af5) AND ('i&')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'1f6d'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE NULL  WHEN '666418452' THEN '857704754' ELSE 0.2517909116409097 END, ((x'') NOT BETWEEN ('z쉨o3y{)p') AND (-947788833)), ((x'')>>('1589149077'))))<=(('甒y3}a,4a+' COLLATE NOCASE, CASE WHEN x'8fc6' THEN 'ZkJ' ELSE -1278704048 END, CASE WHEN '-701998564' THEN '1036191016' WHEN 'O8' THEN NULL WHEN '-488788654' THEN '	\r(P|)' ELSE NULL END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1511808616 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffaa42b86a IN ())) BETWEEN (((1.99975187E8)=(0x10c6188))) AND (NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('L\n.xGH&Ua' AS TEXT)))>=(((~ (0X2223ac4c))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1747911114'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.38071996880806613, 0.4736216457524268, 0.6874236372187927)) BETWEEN ((((NULL) NOT NULL), CASE 'i'  WHEN 'S<蔅QY''' THEN 0.2756434961310419 END, CASE WHEN '-1559684792' THEN 0.35226879311617054 END)) AND ((('-1476549990' IN ('<4d䮮N')), json_type('0.6826975911463089'), ((x'')&(x'8fd2'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '827770327 1091899407 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1091105109 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=526357906 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x''))<=((0.4053726021784173)))))!=(((NOT (0Xffffffffa7fda29a))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1674922048'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1226176803 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('', x'6c6a', NULL, 1156852937, 1088586410))<=((NULL, NULL, NULL, x'', x'')))  WHEN x'' COLLATE RTRIM THEN ((0.9757458073689086)>>(NULL)) WHEN CAST(0.4698762527437136 AS TEXT) THEN CAST(x'' AS BLOB) WHEN '676286309' THEN SQLITE_VERSION() ELSE x'' COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') NOT BETWEEN (NULL) AND (x'')), CASE WHEN 0.46156458393147926 THEN '~6~)	\n10y' END, CASE WHEN 0.9901663689859732 THEN '' WHEN 0.2396212735319342 THEN '-2124580458' WHEN '' THEN '1895391994' ELSE NULL END))>=(((- (x'9bff')), (NOT (NULL)), '-690095910'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((-335978058 IN ()) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1733855246 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -1579028333 sz=1896676351 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1043319517)OR(NULL)))OR(0.46238386704418566))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffb9a4bb53)=(x'7cea')))>=(((NULL) BETWEEN (x'') AND (0X7af9b423)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.38711250011358056)LIKE('-539562900')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=635708758 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=702729038 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((x'')AND('1824937629')))OR('nowdA')))AND(x'')))OR(-1123291670)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1547252598 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=25422354'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>('Rac''Auj')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-1972026997'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '98987068 sz=2092106095 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2072232839 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2106074614 sz=-1123851977 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.09904309523625943))>=((''))))OR(((464815938) IS FALSE))))AND(((0.9009654936514061) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-611649451 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-936978239 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1547730255'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1499868140'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -982227872; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (- ('')) THEN NULL COLLATE NOCASE WHEN ((((',G')AND('M*z')))OR(0.38650285441992827)) THEN (('I1c\nXj') ISNULL) WHEN COALESCE(DISTINCT 'c', 1091899407) THEN CASE x''  WHEN '-0.0' THEN '-1278704048' WHEN x'' THEN -1082541732 WHEN NULL THEN x'' ELSE NULL END ELSE ((0.15638962402559753) BETWEEN (NULL) AND (0.2219377708404583)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0xffffffffc344f367  WHEN 0.48985160601232625 THEN NULL ELSE '476983533' END)>((('1091899407')IS(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=627192431'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('.(!v떦~Te*') BETWEEN (NULL) AND (x'75d1')))|(CASE WHEN 0.616085249588981 THEN NULL WHEN NULL THEN 0x24cd878e WHEN '1172093190' THEN 'Du' WHEN '-433829330' THEN '' WHEN '966592074' THEN x'8b6a' ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1733855246 1420118307 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.6987438765361168'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-876318479 420477496 0 sz=548595372 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1017332107 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.805997248773871 IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-712611788 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1874029188 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')>>(0.8548684564291056)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1747911114 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(TRIM(DISTINCT NULL), ((0.2319679121059981) NOT BETWEEN (x'') AND (-780433885))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.42981938377997764) NOTNULL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1733855246; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((5.39327624E8)) BETWEEN (((NULL IN ()))) AND ((CASE WHEN 0.06416882596299156 THEN NULL ELSE x'48c1' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_quote(0.23264408527697156)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1570465172 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN (('F<BB')) AND ((0.24565521107881416))))/(0.1093233239948408 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1674922048 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1662712134 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('557863033' IN ()) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-953009147 sz=1631578483 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1856513125 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.3361450469080881 THEN '-1499868140' ELSE 0.8936171436884127 END)||(CAST(0.31475660176741327 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1344512138 623874683 sz=-142097622 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 1410440721'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1212178435'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1635455889 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULLIF(0.5447100376208216, x''))AND((('nJ') IS TRUE))))AND(((x'') BETWEEN (0.48731132905612495) AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('827770327')>>(739490107)))>=((NOT (0.37210374138685964)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1943182376 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1706776920 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5229039811276057)) NOT BETWEEN ((NULL)) AND (('564432531'))))LIKE((+ (0X5eb87d95)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('XNgc'))) BETWEEN (((0.4683631533125401) NOT BETWEEN ('-1051411726') AND (x''))) AND ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('\TQ3[8')|('LQጕ扅\r')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1863603658' COLLATE NOCASE)+(CAST(x'' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.2863719762498791)%(((NULL)+(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('cHgPG')AND(0X63d54840))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '856484358 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((CAST(0.23696001594870142 AS BLOB))AND(' rDX' COLLATE BINARY)))OR(CASE '-2018110379'  WHEN '6\>q' THEN NULL END)))AND('-1499868140')))AND(((x'')>(NULL)))))AND(((0.1406908060409684)>>(-1091105109)))))OR(((x'')=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1740445213 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1222873937 sz=1970301046 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.061597731871132044) NOT BETWEEN ((0.7389900709447783 IN ())) AND ((('-1765528683')<>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-260485419 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1797497158 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1767938063 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1032807216 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST('1232483034' AS TEXT))OR((('A ')*(NULL)))))OR((('372796709')>=(NULL)))))AND((NULL IN ()))))AND(CASE -1.051411726E9  WHEN NULL THEN NULL WHEN '-867759811' THEN NULL WHEN x'' THEN x'8288' WHEN x'' THEN NULL WHEN 0X3f69bbf5 THEN '' ELSE x'2a0fbcb8' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'160e' AS BLOB))&(((((x'')AND(x'')))AND(0.7615729994204711)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-582130537 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '234985552 sz=-1706776920 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1448523379'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2026885922 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.6623638160785127) BETWEEN ('2120337269') AND (NULL)) THEN CAST('0.7616044830906268' AS TEXT) ELSE ((((0.2319679121059981)OR(NULL)))AND(x'85f8')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=526357906 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '' THEN NULL WHEN x'' THEN '' WHEN NULL THEN '-589936402' ELSE 'V\n䨗T' END)<>((('-413484364') BETWEEN (0X8e51954) AND (x'c85e')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('%OZv')||((((NULL))>=(('1571223858'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((x'bb4b')AND(x'')))AND(x'')) THEN CAST('-1443956353' AS BLOB) ELSE CAST(NULL AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1791015711 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array_length('2'))<(NULLIF(DISTINCT NULL, 0.08488070545976789))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN x'' ELSE '1856513125' END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((((NULL)>=(NULL)))) AND ((((0x6ec4655a) BETWEEN ('5804564927488108348-') AND ('T#'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1453868439 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1678434061 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -589936402 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5837699920223407)/('wX'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-60726608 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-961069129 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=940803971 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))=((x'80ea'))))&(((NULL) BETWEEN ('Rac''Auj') AND ('ꙕ*]x?o?J*')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((~ (0.023823304623488584)), (('W\rdBed!+\r') BETWEEN ('  ') AND (0.9365202820890283)), (0.4546170014718308 IN ())))=((LIKE(x'9078eb3a', '0.6266606998293972', 'i'), MIN('S<蔅QY''', 0.8433953510211213, x'24d6', 0.9872520616761116), (NOT (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1914049150'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'f9cf') NOT BETWEEN (NULL) AND (x'')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1871493834')AND(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-933897395 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN ('[]') AND ('278627564')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1343834330 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-898114799'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1698505344 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 -1584170293 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2035329403 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-558684537 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1120344980'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1029139529'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1874657637 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT (- ('1543081934')), (('gb')<(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1460077013'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('-1278704048' IN (x'261ac95d'))  WHEN ((NULL) NOT BETWEEN (-1773801371) AND (0.5877224621595253)) THEN ((0.11142563214628831) NOT BETWEEN ('NGjxy') AND ('1066039407')) WHEN (((NULL)) NOT BETWEEN ((x'0949')) AND ((0X22779c6a))) THEN NULL COLLATE RTRIM WHEN (NULL IN ('1229440647')) THEN CASE ''  WHEN '1uY%' THEN 'd1-500000쇼䝓' END WHEN ((NULL) BETWEEN ('708870648') AND (NULL)) THEN CAST(NULL AS BLOB) WHEN ((NULL) NOT BETWEEN (NULL) AND (0.4823768949663766)) THEN ((((NULL)AND(0Xfffffffffdde78ef)))AND(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.14774714676406075) BETWEEN (x'') AND (0.4256639915493954)))AND((((NULL)) NOT BETWEEN ((x'')) AND (('zp鬿64'))))))OR((((NULL, 1796248786, NULL)) BETWEEN ((NULL, 0X44d42c35, NULL)) AND (('1856513125', x'', ''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=-1180386477 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((292197019) ISNULL))>=(('t#' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (HEX(DISTINCT NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1111800131'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1448523379'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-472509699'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1521640807 0 sz=-1091105109'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE)) NOT BETWEEN (((NULL)-(1.824937629E9))) AND (CAST('1350916604' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1571223858 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=381404802 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=557863033 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '81204167 0 sz=-1286194828 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1448523379 -1499868140'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length((((('-293256072')AND(NULL)))AND('v뙳'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=840846927'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, NULL, '1835499145')) BETWEEN (('-910562578' COLLATE BINARY, LAST_INSERT_ROWID(), ((NULL)GLOB(0.6989550286170213)))) AND ((((x'af5b') BETWEEN (x'a22f') AND ('d}S')), NULL COLLATE NOCASE, CAST('-0.0' AS INTEGER)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2035303261 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.031635842318389895 AS NUMERIC) COLLATE RTRIM COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1661394593 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(LIKELIHOOD(0.08831313185754419, 0.7491105845824243), UPPER('duix')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=494897613 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1559684792 sz=-690095910 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') NOTNULL) THEN x'6af0ad9b' COLLATE BINARY ELSE (('1460077013')>(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'ec36a08c'))<=(('vb2?U-\n쓺쇼'))) IN (((NULL)OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('', 0.41891736813527547, 0x460358de))<=((NULL, -990396702, x''))))>=((((x'90db', 0.8477883481286779, '1562370927', NULL, NULL))<=(('1448523379', '-1578116532', 0.9117420509572347, x'', 0.26945066427631414))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_GET(']J'))%(x'e278' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1373132326 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.7614965663565422)))-((((x'41ec'))=(('M*Z'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1478800265 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1746019718 2 sz=-930619115'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1266742911 0 sz=2066321628 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1278704048 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1036191016'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1382327041 sz=1696699537 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=856714025 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x''))<((0.06633207382575901)))))<>((CASE WHEN 'o*' THEN 0.11008182261366439 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=2139404339 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=992884305 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1260615750'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffff9a44a6a8; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1472524252 627192431 sz=-1278598979 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT CASE x'6cab'  WHEN x'' THEN x'' ELSE x'2604' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1091105109 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1260615750 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1896647597 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-367858189 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8295655805401488)) BETWEEN ((-2.124580458E9)) AND ((NULL))))>>((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (COALESCE(NULL, NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.312990919476153' IN ()))-(('241231963' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULLIF(0.30844580107054076, '322157760')  WHEN IFNULL(DISTINCT '-802866415', 0.5116382971244859) THEN (+ (x'b6b3')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=231637916 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1032807216 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=539327624'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=1069661021'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((0.9058528362655642, 0.9201647096187443, 'a(')) BETWEEN ((NULL, 0.7288893925695868, '푗')) AND ((x'9dd5', -1.733855246E9, 0.4596671164690691))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1589149077') NOTNULL) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1914049150 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.33574508119193336 COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x''))) BETWEEN (CASE WHEN '1182549803' THEN 1570465172 END) AND (IFNULL(DISTINCT NULL, '!p'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=402317073 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1914049150'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2092159658 -1207954810 sz=-2090596409'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1637601992'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN (('K~Q' IN ('-582130537', NULL)), ((((1678198159)OR(-6.9009591E8)))OR('-1706776920')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1091105109 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-488788654 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1313701009'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1048293280 sz=-1246394 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')AND(((x'') IS FALSE))))AND(CASE NULL  WHEN ',铩' THEN 0.5841750024917021 ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-766620544 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1835499145'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-2112632599 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL)) BETWEEN (((('#U'))>((1.26061575E9)))) AND ((((((((('-589936402')AND(NULL)))AND(1.530048708E9)))OR(-1605319477)))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=811980720 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=318480701'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))|(CASE WHEN 0x733cfca2 THEN 1.156852937E9 WHEN 1.570465172E9 THEN 0.23026186243202817 WHEN NULL THEN '661412030' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('-1091105109')) NOT BETWEEN ((NULL)) AND ((0.5301537615662946))) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-534381602 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (0.17268359737260086) AND (x''))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1734914862 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN -998195795 THEN NULL ELSE 0.35885697440393494 END) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')&(0.7277821412008898)))-(((0.5162771247127885)>(x'7dce')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=464666558 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.805980637774004)=('-1746019718')))AND(((('1506240906')) BETWEEN ((0X5c448f19)) AND ((NULL))))))AND(((((x'')AND('-2135882821')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)*(('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('0.023823304623488584' AS REAL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1012902133 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1896676351', NULL, (('/㗽!8+u') NOT NULL)))<=((((('')) NOT BETWEEN ((NULL)) AND ((NULL))), (('')>=('-1592423848')), NULLIF(DISTINCT 0.1504724659341088, 'c!Bꏄ')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((load_extension(-1.373987741E9, 0.28242725870857))%('-1120590948' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-80682685' COLLATE BINARY COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1106754455 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((NULL)) NOT BETWEEN ((x'')) AND ((NULL)))  WHEN LOWER(DISTINCT 492834137) THEN CAST('40845192' AS NUMERIC) WHEN (1764829244 IN (x'')) THEN ((NULL) ISNULL) WHEN ((('1260615750'))>((x''))) THEN IFNULL(0X6cb42354, NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1050368417 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (x'29df' IN ()) THEN (NULL IN ()) ELSE LTRIM(NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 1230037351 sz=-1138840528'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 199975187 sz=536487620 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1511790898 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffc7323c05, '1036191016', '450718854')) NOT BETWEEN ((x'ed03', x'a0b8', '1048293280')) AND ((NULL, '302014878', -306619859))) IN ((('1717583839') NOTNULL), NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((0.4431550151639295 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE 0.4469611579023465  WHEN NULL THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB) COLLATE RTRIM COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((NULL)>>(NULL)), ((((((((-1712885997)OR(x'')))AND('-477253400')))OR(NULL)))AND(-5.82130537E8))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) IS TRUE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '539327624 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LTRIM(0.027631994102915614) THEN NULL COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((x'')OR(0x65e6ff2d)))AND(500564946)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((716161376)) BETWEEN (((~ (0.17950225371627715)))) AND ((('&vS]!''.	]' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1596926214'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=-1410894115 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1405569448'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_extract(NULL, 0.521032003578739, '-379575304', 0.4256639915493954)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1981913260)OR(NULL)))AND(0.9916127247253792)))IS('-721975216' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) BETWEEN ('k^t') AND (0.5107578664491688)) THEN ((0.4417975043256889) IS FALSE) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-789889483 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('704291690', 0.13902945612938689, ''))<(('-1376726909', '', x'')))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'ef26'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=477465243 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (LIKELY(DISTINCT '-1582092572'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-1582959341'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -898114799 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('1036191016' AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-908750014 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.687153948079577 AS BLOB)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1312237067 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(1.04829328E9 AS INTEGER) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('2069806960') NOT NULL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 sz=-771287109'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.1704510155318254) IS TRUE))LIKE((- (0.5284365189673306)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1338830791 0 sz=1796248786 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '542519659 sz=-555222639'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0Xffffffffdfd6ec6c AS NUMERIC) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1336835498'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1049902568 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1815636725 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT BETWEEN ('-486949605') AND (NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1012160606 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1416723609)&(0xfffffffff793fdc2)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.2756434961310419'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=843985838 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1457495488 sz=788564370 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1040715966'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2009823640 0 sz=-1180386477 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=688150906'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1127985773 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) BETWEEN ((NULL IN ())) AND ('-1615805574' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'' COLLATE BINARY)AND(((('[]'))=((''))))))OR(((0.6845868570765147) NOT NULL))))OR(UNICODE(NULL))))OR(('-257658451' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1476549990 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)|('O'))) NOT BETWEEN (IFNULL(DISTINCT 0.5217715702545996, 0.024981257444892435)) AND (((NULL)<(x'166f')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT ((x'a3b6') ISNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1674922048 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1263295654 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')<<(((NULL) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((7.16161376E8) NOT BETWEEN ('-1e500') AND (-570143980)) THEN CAST('0.2517909116409097' AS NUMERIC) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=318480701 noskipscan'); -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 0ms;
PRAGMA soft_heap_limit = 8803380258293657544; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.checkpoint_fullfsync = true; -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 TEXT , c1 BLOB , c2 INT ); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE rt1 SET c2='0.35885697440393494'; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c2, c1, c3) VALUES (0.3934575356186263, 'c\', '', x''), (('1856513125' IN ()) COLLATE NOCASE, '', '-1196595480', -32196354), (NULL, '0.849014510499434', x'', '1919670438'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x''); -- 0ms;
INSERT OR ABORT INTO rt1(c1) VALUES (0.9178096557120189); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '45093'); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2, c1) VALUES (x'4331', x'', 1412789777), (0.30794592603936055, (((((('')AND('QVn[|4V')))OR(1404551584))) ISNULL), -1936113201), (1760863036, 'Vbq', '-f'), (0.047036215304723905, '', '-1180386477'), (0xffffffff86d38550, -1.91404915E9, NULL); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt1(c0) VALUES ('-1378842174'), (x''), (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c1, c0) VALUES (0.17828410747953616, '-1453868439', 'm\rfc5F', x''); -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
INSERT OR FAIL INTO rt1(c1) VALUES (NULL); -- 1ms;
PRAGMA locking_mode; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT vt0.c0 FROM vt0, rt0, rt1, t0; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('0.8966189025342891'), ('760273458'), (x''); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX BINARY; -- 1ms;
INSERT OR ABORT INTO rt0(c3, c2) VALUES ('n䦁᱁', '1428578380'); -- 1ms;
END TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('979793303'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA main.cache_size = 0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c2 TO c43; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0, v0 WHERE (((rt0.c3 COLLATE NOCASE)/(CAST(v0.c0 AS BLOB)))) ORDER BY ((((rt0.c1)LIKE(v0.c0))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)/(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, rt1, vt0, t0, v0 ORDER BY ((((rt0.c1)LIKE(v0.c0))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0, v0 WHERE (((rt0.c3 COLLATE NOCASE)/(CAST(v0.c0 AS BLOB)))) ORDER BY ((((rt0.c1)LIKE(v0.c0))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)/(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, rt1, vt0, t0, v0 ORDER BY ((((rt0.c1)LIKE(v0.c0))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0, v0 WHERE (((rt0.c3 COLLATE NOCASE)/(CAST(v0.c0 AS BLOB)))) ORDER BY ((((rt0.c1)LIKE(v0.c0))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt1.c1 IN ())));
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN v0 ON 'unixepochL\r' WHERE ((((rt0.c2, ((v0.c0)/('1796248786')), LIKELY(rt0.c2)))<>((rt0.c0 COLLATE NOCASE, ((rt0.c0)||(rt0.c3)), ((t0.c1)||(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, ((v0.c0)/('1796248786')), LIKELY(rt0.c2)))!=((rt0.c0 COLLATE NOCASE, ((rt0.c0)||(rt0.c3)), ((t0.c1)||(rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN v0 ON 'unixepochL\r');
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN v0 ON 'unixepochL\r' WHERE ((((rt0.c2, ((v0.c0)/('1796248786')), LIKELY(rt0.c2)))<>((rt0.c0 COLLATE NOCASE, ((rt0.c0)||(rt0.c3)), ((t0.c1)||(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, ((v0.c0)/('1796248786')), LIKELY(rt0.c2)))!=((rt0.c0 COLLATE NOCASE, ((rt0.c0)||(rt0.c3)), ((t0.c1)||(rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN v0 ON 'unixepochL\r');
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN v0 ON 'unixepochL\r' WHERE ((((rt0.c2, ((v0.c0)/('1796248786')), LIKELY(rt0.c2)))<>((rt0.c0 COLLATE NOCASE, ((rt0.c0)||(rt0.c3)), ((t0.c1)||(rt0.c0))))));
SELECT COUNT(*) FROM rt1, v0 WHERE ((((- (rt1.c1)))||(((((rt1.c0)AND(rt1.c2)))OR(rt1.c1))))) ORDER BY ((((CAST(rt1.c1 AS REAL))AND(rt1.c1)))AND(((rt1.c0)<=('')))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c1)))||(((((rt1.c0)AND(rt1.c2)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((CAST(rt1.c1 AS REAL))AND(rt1.c1)))AND(((rt1.c0)<=('')))) DESC);
SELECT COUNT(*) FROM rt1, v0 WHERE ((((- (rt1.c1)))||(((((rt1.c0)AND(rt1.c2)))OR(rt1.c1))))) ORDER BY ((((CAST(rt1.c1 AS REAL))AND(rt1.c1)))AND(((rt1.c0)<=('')))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c1)))||(((((rt1.c0)AND(rt1.c2)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((CAST(rt1.c1 AS REAL))AND(rt1.c1)))AND(((rt1.c0)<=('')))) DESC);
SELECT COUNT(*) FROM rt1, v0 WHERE ((((- (rt1.c1)))||(((((rt1.c0)AND(rt1.c2)))OR(rt1.c1))))) ORDER BY ((((CAST(rt1.c1 AS REAL))AND(rt1.c1)))AND(((rt1.c0)<=('')))) DESC;
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY NULL ASC, LIKELIHOOD(t0.c0, 0.12218972180757937) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY NULL ASC, LIKELIHOOD(t0.c0, 0.12218972180757937) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY NULL ASC, LIKELIHOOD(t0.c0, 0.12218972180757937) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY NULL ASC, LIKELIHOOD(t0.c0, 0.12218972180757937) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY NULL ASC, LIKELIHOOD(t0.c0, 0.12218972180757937) ASC  NULLS FIRST;
SELECT * FROM vt0, t0, rt1, rt0, v0 WHERE (((rt0.c3)|(t0.c0 COLLATE BINARY))) ORDER BY (0.023823304623488584 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)|(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, rt1, rt0, v0 ORDER BY (0.023823304623488584 IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0, t0, rt1, rt0, v0 WHERE (((rt0.c3)|(t0.c0 COLLATE BINARY))) ORDER BY (0.023823304623488584 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)|(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, rt1, rt0, v0 ORDER BY (0.023823304623488584 IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0, t0, rt1, rt0, v0 WHERE (((rt0.c3)|(t0.c0 COLLATE BINARY))) ORDER BY (0.023823304623488584 IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t0, vt0, v0 WHERE ((((((rt1.c1) IS TRUE), ((t0.c0)IS(t0.c0)), rt1.c0 COLLATE BINARY))<=((((rt1.c0) ISNULL), CAST(v0.c0 AS NUMERIC), 0xffffffff834c2d56)))) ORDER BY (((((((((t0.c43 IN ()))AND(((rt1.c2) NOT BETWEEN (vt0.c0) AND (0X20257c88)))))OR((rt1.c2 IN ()))))OR(((vt0.c0)/(t0.c1)))))OR(((vt0.c0)AND(t0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1) IS TRUE), ((t0.c0)IS(t0.c0)), rt1.c0 COLLATE BINARY))<=((((rt1.c0) ISNULL), CAST(v0.c0 AS NUMERIC), 0Xffffffff834c2d56)))) IS TRUE)  as count FROM rt1, t0, vt0, v0 ORDER BY (((((((((t0.c43 IN ()))AND(((rt1.c2) NOT BETWEEN (vt0.c0) AND (0X20257c88)))))OR((rt1.c2 IN ()))))OR(((vt0.c0)/(t0.c1)))))OR(((vt0.c0)AND(t0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0, vt0, v0 WHERE ((((((rt1.c1) IS TRUE), ((t0.c0)IS(t0.c0)), rt1.c0 COLLATE BINARY))<=((((rt1.c0) ISNULL), CAST(v0.c0 AS NUMERIC), 0xffffffff834c2d56)))) ORDER BY (((((((((t0.c43 IN ()))AND(((rt1.c2) NOT BETWEEN (vt0.c0) AND (0X20257c88)))))OR((rt1.c2 IN ()))))OR(((vt0.c0)/(t0.c1)))))OR(((vt0.c0)AND(t0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1) IS TRUE), ((t0.c0)IS(t0.c0)), rt1.c0 COLLATE BINARY))<=((((rt1.c0) ISNULL), CAST(v0.c0 AS NUMERIC), 0Xffffffff834c2d56)))) IS TRUE)  as count FROM rt1, t0, vt0, v0 ORDER BY (((((((((t0.c43 IN ()))AND(((rt1.c2) NOT BETWEEN (vt0.c0) AND (0X20257c88)))))OR((rt1.c2 IN ()))))OR(((vt0.c0)/(t0.c1)))))OR(((vt0.c0)AND(t0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0, vt0, v0 WHERE ((((((rt1.c1) IS TRUE), ((t0.c0)IS(t0.c0)), rt1.c0 COLLATE BINARY))<=((((rt1.c0) ISNULL), CAST(v0.c0 AS NUMERIC), 0xffffffff834c2d56)))) ORDER BY (((((((((t0.c43 IN ()))AND(((rt1.c2) NOT BETWEEN (vt0.c0) AND (0X20257c88)))))OR((rt1.c2 IN ()))))OR(((vt0.c0)/(t0.c1)))))OR(((vt0.c0)AND(t0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0, v0 WHERE (((((vt0.c0) BETWEEN (t0.c43) AND (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (t0.c43) AND (v0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, vt0, t0, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0, v0 WHERE (((((vt0.c0) BETWEEN (t0.c43) AND (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (t0.c43) AND (v0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, vt0, t0, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0, v0 WHERE (((((vt0.c0) BETWEEN (t0.c43) AND (v0.c0))) IS TRUE));
SELECT * FROM t0, rt0 WHERE (((((t0.c0)IS(t0.c43))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CASE t0.c0  WHEN rt0.c2 THEN rt0.c3 END))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS(t0.c43))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CASE t0.c0  WHEN rt0.c2 THEN rt0.c3 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2 DESC);
SELECT * FROM t0, rt0 WHERE (((((t0.c0)IS(t0.c43))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CASE t0.c0  WHEN rt0.c2 THEN rt0.c3 END))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS(t0.c43))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CASE t0.c0  WHEN rt0.c2 THEN rt0.c3 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2 DESC);
SELECT * FROM t0, rt0 WHERE (((((t0.c0)IS(t0.c43))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CASE t0.c0  WHEN rt0.c2 THEN rt0.c3 END))) ORDER BY rt0.c2 DESC;
SELECT ALL * FROM rt0, v0, t0, vt0, rt1 WHERE (((((rt0.c0) ISNULL)) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c3 WHEN rt1.c2 THEN t0.c43 WHEN rt0.c0 THEN vt0.c0 END) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) ISNULL)) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c3 WHEN rt1.c2 THEN t0.c43 WHEN rt0.c0 THEN vt0.c0 END) AND (rt0.c3))) IS TRUE)  as count FROM rt0, v0, t0, vt0, rt1);
SELECT ALL * FROM rt0, v0, t0, vt0, rt1 WHERE (((((rt0.c0) ISNULL)) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c3 WHEN rt1.c2 THEN t0.c43 WHEN rt0.c0 THEN vt0.c0 END) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) ISNULL)) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c3 WHEN rt1.c2 THEN t0.c43 WHEN rt0.c0 THEN vt0.c0 END) AND (rt0.c3))) IS TRUE)  as count FROM rt0, v0, t0, vt0, rt1);
SELECT ALL * FROM rt0, v0, t0, vt0, rt1 WHERE (((((rt0.c0) ISNULL)) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c3 WHEN rt1.c2 THEN t0.c43 WHEN rt0.c0 THEN vt0.c0 END) AND (rt0.c3)));
SELECT * FROM rt0, t0, vt0, v0 WHERE (((CASE WHEN rt0.c0 THEN t0.c43 END)IS(v0.c0 COLLATE BINARY))) ORDER BY ((IFNULL(DISTINCT x'', rt0.c0)) BETWEEN ((~ (vt0.c0))) AND ((- (1234164884))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN t0.c43 END)IS(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, vt0, v0 ORDER BY ((IFNULL(DISTINCT x'', rt0.c0)) BETWEEN ((~ (vt0.c0))) AND ((- (1234164884))))  NULLS FIRST);
SELECT * FROM rt0, t0, vt0, v0 WHERE (((CASE WHEN rt0.c0 THEN t0.c43 END)IS(v0.c0 COLLATE BINARY))) ORDER BY ((IFNULL(DISTINCT x'', rt0.c0)) BETWEEN ((~ (vt0.c0))) AND ((- (1234164884))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN t0.c43 END)IS(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, vt0, v0 ORDER BY ((IFNULL(DISTINCT x'', rt0.c0)) BETWEEN ((~ (vt0.c0))) AND ((- (1234164884))))  NULLS FIRST);
SELECT * FROM rt0, t0, vt0, v0 WHERE (((CASE WHEN rt0.c0 THEN t0.c43 END)IS(v0.c0 COLLATE BINARY))) ORDER BY ((IFNULL(DISTINCT x'', rt0.c0)) BETWEEN ((~ (vt0.c0))) AND ((- (1234164884))))  NULLS FIRST;
SELECT * FROM rt0, vt0, v0, t0, rt1 WHERE ((((t0.c1 COLLATE RTRIM))>=(((NOT (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 COLLATE RTRIM))>=(((NOT (v0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0, t0, rt1);
SELECT * FROM rt0, vt0, v0, t0, rt1 WHERE ((((t0.c1 COLLATE RTRIM))>=(((NOT (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 COLLATE RTRIM))>=(((NOT (v0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0, t0, rt1);
SELECT * FROM rt0, vt0, v0, t0, rt1 WHERE ((((t0.c1 COLLATE RTRIM))>=(((NOT (v0.c0))))));
SELECT ALL * FROM rt1, rt0, t0, v0 WHERE (CAST(((t0.c43)+(t0.c43)) AS TEXT)) ORDER BY (+ (json_insert(rt0.c2, t0.c43, rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c43)+(t0.c43)) AS TEXT)) IS TRUE)  as count FROM rt1, rt0, t0, v0 ORDER BY (+ (json_insert(rt0.c2, t0.c43, rt1.c2))));
SELECT ALL * FROM rt1, rt0, t0, v0 WHERE (CAST(((t0.c43)+(t0.c43)) AS TEXT)) ORDER BY (+ (json_insert(rt0.c2, t0.c43, rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c43)+(t0.c43)) AS TEXT)) IS TRUE)  as count FROM rt1, rt0, t0, v0 ORDER BY (+ (json_insert(rt0.c2, t0.c43, rt1.c2))));
SELECT ALL * FROM rt1, rt0, t0, v0 WHERE (CAST(((t0.c43)+(t0.c43)) AS TEXT)) ORDER BY (+ (json_insert(rt0.c2, t0.c43, rt1.c2)));
SELECT * FROM rt0, vt0, rt1 WHERE ((((rt1.c2)) BETWEEN ((LIKELIHOOD(0.15599098247028353, 0.2089241326249247))) AND (((NOT (rt0.c0)))))) ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c2 ELSE NULL END)OR(((rt0.c2) ISNULL))))AND((((vt0.c0))<((rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((LIKELIHOOD(0.15599098247028353, 0.2089241326249247))) AND (((NOT (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c2 ELSE NULL END)OR(((rt0.c2) ISNULL))))AND((((vt0.c0))<((rt1.c0))))));
SELECT * FROM rt0, vt0, rt1 WHERE ((((rt1.c2)) BETWEEN ((LIKELIHOOD(0.15599098247028353, 0.2089241326249247))) AND (((NOT (rt0.c0)))))) ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c2 ELSE NULL END)OR(((rt0.c2) ISNULL))))AND((((vt0.c0))<((rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((LIKELIHOOD(0.15599098247028353, 0.2089241326249247))) AND (((NOT (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c2 ELSE NULL END)OR(((rt0.c2) ISNULL))))AND((((vt0.c0))<((rt1.c0))))));
SELECT * FROM rt0, vt0, rt1 WHERE ((((rt1.c2)) BETWEEN ((LIKELIHOOD(0.15599098247028353, 0.2089241326249247))) AND (((NOT (rt0.c0)))))) ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c2 ELSE NULL END)OR(((rt0.c2) ISNULL))))AND((((vt0.c0))<((rt1.c0)))));
SELECT ALL * FROM rt1, rt0, t0 WHERE (((0.8966189025342891) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c1)|(rt0.c0))))) ORDER BY (((NOT (rt1.c1))) BETWEEN (CASE rt0.c3  WHEN '-1733855246' THEN rt1.c0 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND ((rt0.c2 IN (rt1.c1)))), (NOT (CAST(rt1.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.8966189025342891) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c1)|(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (((NOT (rt1.c1))) BETWEEN (CASE rt0.c3  WHEN '-1733855246' THEN rt1.c0 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND ((rt0.c2 IN (rt1.c1)))), (NOT (CAST(rt1.c1 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t0 WHERE (((0.8966189025342891) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c1)|(rt0.c0))))) ORDER BY (((NOT (rt1.c1))) BETWEEN (CASE rt0.c3  WHEN '-1733855246' THEN rt1.c0 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND ((rt0.c2 IN (rt1.c1)))), (NOT (CAST(rt1.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.8966189025342891) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c1)|(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (((NOT (rt1.c1))) BETWEEN (CASE rt0.c3  WHEN '-1733855246' THEN rt1.c0 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND ((rt0.c2 IN (rt1.c1)))), (NOT (CAST(rt1.c1 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t0 WHERE (((0.8966189025342891) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c1)|(rt0.c0))))) ORDER BY (((NOT (rt1.c1))) BETWEEN (CASE rt0.c3  WHEN '-1733855246' THEN rt1.c0 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND ((rt0.c2 IN (rt1.c1)))), (NOT (CAST(rt1.c1 AS INTEGER)))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, rt1, v0 WHERE ((CAST(rt0.c0 AS NUMERIC) IN (CAST(t0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS NUMERIC) IN (CAST(t0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt0, rt1, v0);
SELECT COUNT(*) FROM t0, rt0, rt1, v0 WHERE ((CAST(rt0.c0 AS NUMERIC) IN (CAST(t0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS NUMERIC) IN (CAST(t0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt0, rt1, v0);
SELECT COUNT(*) FROM t0, rt0, rt1, v0 WHERE ((CAST(rt0.c0 AS NUMERIC) IN (CAST(t0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 WHERE ((- (((8.09058649E8) ISNULL)))) ORDER BY CASE WHEN json_insert(rt0.c1, rt0.c2, rt0.c1) THEN rt0.c3 COLLATE BINARY WHEN '*.s_)GW\r' THEN (+ (rt0.c3)) WHEN ((rt0.c2) ISNULL) THEN ((rt0.c3) IS TRUE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((8.09058649E8) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN json_insert(rt0.c1, rt0.c2, rt0.c1) THEN rt0.c3 COLLATE BINARY WHEN '*.s_)GW\r' THEN (+ (rt0.c3)) WHEN ((rt0.c2) ISNULL) THEN ((rt0.c3) IS TRUE) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- (((8.09058649E8) ISNULL)))) ORDER BY CASE WHEN json_insert(rt0.c1, rt0.c2, rt0.c1) THEN rt0.c3 COLLATE BINARY WHEN '*.s_)GW\r' THEN (+ (rt0.c3)) WHEN ((rt0.c2) ISNULL) THEN ((rt0.c3) IS TRUE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((8.09058649E8) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN json_insert(rt0.c1, rt0.c2, rt0.c1) THEN rt0.c3 COLLATE BINARY WHEN '*.s_)GW\r' THEN (+ (rt0.c3)) WHEN ((rt0.c2) ISNULL) THEN ((rt0.c3) IS TRUE) END  NULLS LAST);
SELECT ALL * FROM v0, vt0, t0, rt1, rt0 WHERE ((((((rt1.c0 IN (rt1.c0)))OR((((rt1.c1))>((rt0.c0))))))AND(((((rt0.c1)AND(rt1.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0 IN (rt1.c0)))OR((((rt1.c1))>((rt0.c0))))))AND(((((rt0.c1)AND(rt1.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM v0, vt0, t0, rt1, rt0);
SELECT ALL * FROM v0, vt0, t0, rt1, rt0 WHERE ((((((rt1.c0 IN (rt1.c0)))OR((((rt1.c1))>((rt0.c0))))))AND(((((rt0.c1)AND(rt1.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0 IN (rt1.c0)))OR((((rt1.c1))>((rt0.c0))))))AND(((((rt0.c1)AND(rt1.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM v0, vt0, t0, rt1, rt0);
SELECT ALL * FROM v0, vt0, t0, rt1, rt0 WHERE ((((((rt1.c0 IN (rt1.c0)))OR((((rt1.c1))>((rt0.c0))))))AND(((((rt0.c1)AND(rt1.c0)))AND(rt0.c3)))));
SELECT * FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(0.7152451274942958)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE 0.12634443567200693 END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt0.c0)AND(0.7152451274942958)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE 0.12634443567200693 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(0.7152451274942958)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE 0.12634443567200693 END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt0.c0)AND(0.7152451274942958)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE 0.12634443567200693 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(0.7152451274942958)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE 0.12634443567200693 END);
SELECT * FROM t0, vt0 WHERE (TRIM(LIKELY(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(LIKELY(t0.c1))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (TRIM(LIKELY(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(LIKELY(t0.c1))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (TRIM(LIKELY(t0.c1)));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((t0.c43)||(t0.c1)))||((t0.c43 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c43)||(t0.c1)))||((t0.c43 IN ())))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((t0.c43)||(t0.c1)))||((t0.c43 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c43)||(t0.c1)))||((t0.c43 IN ())))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((t0.c43)||(t0.c1)))||((t0.c43 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN '' THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((1260110234, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((1260110234, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN '' THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((1260110234, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((1260110234, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN '' THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((1260110234, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE (~ (vt0.c0)) END);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((NULL)AND(0.9140717493536997 COLLATE RTRIM)))AND(IFNULL(v0.c0, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((NULL)AND(0.9140717493536997 COLLATE RTRIM)))AND(IFNULL(v0.c0, v0.c0)))  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((NULL)AND(0.9140717493536997 COLLATE RTRIM)))AND(IFNULL(v0.c0, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((NULL)AND(0.9140717493536997 COLLATE RTRIM)))AND(IFNULL(v0.c0, v0.c0)))  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((NULL)AND(0.9140717493536997 COLLATE RTRIM)))AND(IFNULL(v0.c0, v0.c0)))  NULLS FIRST;
SELECT * FROM v0, rt0, rt1, vt0 FULL OUTER JOIN t0 ON (((rt0.c3) BETWEEN (rt1.c2) AND (rt1.c2)) IN ()) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, rt0, rt1, vt0 FULL OUTER JOIN t0 ON (((rt0.c3) BETWEEN (rt1.c2) AND (rt1.c2)) IN ()));
SELECT * FROM v0, rt0, rt1, vt0 FULL OUTER JOIN t0 ON (((rt0.c3) BETWEEN (rt1.c2) AND (rt1.c2)) IN ()) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, rt0, rt1, vt0 FULL OUTER JOIN t0 ON (((rt0.c3) BETWEEN (rt1.c2) AND (rt1.c2)) IN ()));
SELECT * FROM v0, rt0, rt1, vt0 FULL OUTER JOIN t0 ON (((rt0.c3) BETWEEN (rt1.c2) AND (rt1.c2)) IN ()) WHERE (vt0.c0);
SELECT * FROM rt0, rt1, vt0 WHERE ((~ (((rt1.c1) IS TRUE)))) ORDER BY ((((rt0.c2)AND(CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END)))AND(((rt1.c0) BETWEEN ('-1733855246') AND ('265804762')))) DESC, (((((((NULL)OR(rt0.c2)))AND(rt1.c2)), COALESCE(rt1.c1, rt0.c0), ((rt1.c1)GLOB(rt0.c1))))>=((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END, x'535f', ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))))) ASC  NULLS FIRST, CASE (((rt0.c2)) NOT BETWEEN (('-645888673')) AND ((rt0.c0)))  WHEN (((rt0.c1, vt0.c0, rt1.c2))<((rt1.c1, rt1.c0, rt0.c2))) THEN ((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0)) WHEN ((rt0.c3)+(rt1.c1)) THEN CASE WHEN 0.8483991147647533 THEN 0x5d1fe36f END WHEN ((0x1f5f9592) NOT BETWEEN (rt1.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt1.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((((rt0.c2)AND(CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END)))AND(((rt1.c0) BETWEEN ('-1733855246') AND ('265804762')))) DESC, (((((((NULL)OR(rt0.c2)))AND(rt1.c2)), COALESCE(rt1.c1, rt0.c0), ((rt1.c1)GLOB(rt0.c1))))>=((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END, x'535f', ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))))) ASC  NULLS FIRST, CASE (((rt0.c2)) NOT BETWEEN (('-645888673')) AND ((rt0.c0)))  WHEN (((rt0.c1, vt0.c0, rt1.c2))<((rt1.c1, rt1.c0, rt0.c2))) THEN ((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0)) WHEN ((rt0.c3)+(rt1.c1)) THEN CASE WHEN 0.8483991147647533 THEN 0x5d1fe36f END WHEN ((0X1f5f9592) NOT BETWEEN (rt1.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt1.c0 END END  NULLS FIRST);
SELECT * FROM rt0, rt1, vt0 WHERE ((~ (((rt1.c1) IS TRUE)))) ORDER BY ((((rt0.c2)AND(CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END)))AND(((rt1.c0) BETWEEN ('-1733855246') AND ('265804762')))) DESC, (((((((NULL)OR(rt0.c2)))AND(rt1.c2)), COALESCE(rt1.c1, rt0.c0), ((rt1.c1)GLOB(rt0.c1))))>=((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END, x'535f', ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))))) ASC  NULLS FIRST, CASE (((rt0.c2)) NOT BETWEEN (('-645888673')) AND ((rt0.c0)))  WHEN (((rt0.c1, vt0.c0, rt1.c2))<((rt1.c1, rt1.c0, rt0.c2))) THEN ((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0)) WHEN ((rt0.c3)+(rt1.c1)) THEN CASE WHEN 0.8483991147647533 THEN 0x5d1fe36f END WHEN ((0x1f5f9592) NOT BETWEEN (rt1.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt1.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((((rt0.c2)AND(CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END)))AND(((rt1.c0) BETWEEN ('-1733855246') AND ('265804762')))) DESC, (((((((NULL)OR(rt0.c2)))AND(rt1.c2)), COALESCE(rt1.c1, rt0.c0), ((rt1.c1)GLOB(rt0.c1))))>=((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END, x'535f', ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))))) ASC  NULLS FIRST, CASE (((rt0.c2)) NOT BETWEEN (('-645888673')) AND ((rt0.c0)))  WHEN (((rt0.c1, vt0.c0, rt1.c2))<((rt1.c1, rt1.c0, rt0.c2))) THEN ((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0)) WHEN ((rt0.c3)+(rt1.c1)) THEN CASE WHEN 0.8483991147647533 THEN 0x5d1fe36f END WHEN ((0X1f5f9592) NOT BETWEEN (rt1.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt1.c0 END END  NULLS FIRST);
SELECT * FROM rt0, rt1, vt0 WHERE ((~ (((rt1.c1) IS TRUE)))) ORDER BY ((((rt0.c2)AND(CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END)))AND(((rt1.c0) BETWEEN ('-1733855246') AND ('265804762')))) DESC, (((((((NULL)OR(rt0.c2)))AND(rt1.c2)), COALESCE(rt1.c1, rt0.c0), ((rt1.c1)GLOB(rt0.c1))))>=((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END, x'535f', ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))))) ASC  NULLS FIRST, CASE (((rt0.c2)) NOT BETWEEN (('-645888673')) AND ((rt0.c0)))  WHEN (((rt0.c1, vt0.c0, rt1.c2))<((rt1.c1, rt1.c0, rt0.c2))) THEN ((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0)) WHEN ((rt0.c3)+(rt1.c1)) THEN CASE WHEN 0.8483991147647533 THEN 0x5d1fe36f END WHEN ((0x1f5f9592) NOT BETWEEN (rt1.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt1.c0 END END  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)<<(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END) ORDER BY ((((vt0.c0))>((vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)<<(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))>((vt0.c0))) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)<<(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END) ORDER BY ((((vt0.c0))>((vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)<<(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))>((vt0.c0))) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)<<(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END) ORDER BY ((((vt0.c0))>((vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) IN ())) ORDER BY LENGTH((x'' IN (t0.c43))) ASC, (t0.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY LENGTH((x'' IN (t0.c43))) ASC, (t0.c1 IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) IN ())) ORDER BY LENGTH((x'' IN (t0.c43))) ASC, (t0.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY LENGTH((x'' IN (t0.c43))) ASC, (t0.c1 IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) IN ())) ORDER BY LENGTH((x'' IN (t0.c43))) ASC, (t0.c1 IN ()) ASC;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN NULL THEN ((t0.c0)/(t0.c0)) WHEN (~ (t0.c43)) THEN t0.c0 WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c43)) THEN ((t0.c0) BETWEEN (t0.c1) AND (t0.c43)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((t0.c0)/(t0.c0)) WHEN (~ (t0.c43)) THEN t0.c0 WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c43)) THEN ((t0.c0) BETWEEN (t0.c1) AND (t0.c43)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN NULL THEN ((t0.c0)/(t0.c0)) WHEN (~ (t0.c43)) THEN t0.c0 WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c43)) THEN ((t0.c0) BETWEEN (t0.c1) AND (t0.c43)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((t0.c0)/(t0.c0)) WHEN (~ (t0.c43)) THEN t0.c0 WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c43)) THEN ((t0.c0) BETWEEN (t0.c1) AND (t0.c43)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN NULL THEN ((t0.c0)/(t0.c0)) WHEN (~ (t0.c43)) THEN t0.c0 WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c43)) THEN ((t0.c0) BETWEEN (t0.c1) AND (t0.c43)) END);
SELECT ALL * FROM t0, rt1, vt0, rt0 WHERE (UPPER((- (rt0.c3)))) ORDER BY ((((((rt1.c2)OR(NULL)))OR(t0.c43)))==(HEX(NULL))) ASC, x''  NULLS LAST, (((rt1.c1 IN ())) NOT BETWEEN (NULL) AND (CAST(t0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER((- (rt0.c3)))) IS TRUE)  as count FROM t0, rt1, vt0, rt0 ORDER BY ((((((rt1.c2)OR(NULL)))OR(t0.c43)))=(HEX(NULL))) ASC, x''  NULLS LAST, (((rt1.c1 IN ())) NOT BETWEEN (NULL) AND (CAST(t0.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM t0, rt1, vt0, rt0 WHERE (UPPER((- (rt0.c3)))) ORDER BY ((((((rt1.c2)OR(NULL)))OR(t0.c43)))==(HEX(NULL))) ASC, x''  NULLS LAST, (((rt1.c1 IN ())) NOT BETWEEN (NULL) AND (CAST(t0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER((- (rt0.c3)))) IS TRUE)  as count FROM t0, rt1, vt0, rt0 ORDER BY ((((((rt1.c2)OR(NULL)))OR(t0.c43)))=(HEX(NULL))) ASC, x''  NULLS LAST, (((rt1.c1 IN ())) NOT BETWEEN (NULL) AND (CAST(t0.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM t0, rt1, vt0, rt0 WHERE (UPPER((- (rt0.c3)))) ORDER BY ((((((rt1.c2)OR(NULL)))OR(t0.c43)))==(HEX(NULL))) ASC, x''  NULLS LAST, (((rt1.c1 IN ())) NOT BETWEEN (NULL) AND (CAST(t0.c0 AS INTEGER)))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((((((((((rt1.c2 IN (rt1.c1, vt0.c0)))OR(LIKE(vt0.c0, rt1.c1, 'w'))))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(NULL)))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c2 IN (rt1.c1, vt0.c0)))OR(LIKE(vt0.c0, rt1.c1, 'w'))))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(NULL)))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((((((((((rt1.c2 IN (rt1.c1, vt0.c0)))OR(LIKE(vt0.c0, rt1.c1, 'w'))))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(NULL)))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c2 IN (rt1.c1, vt0.c0)))OR(LIKE(vt0.c0, rt1.c1, 'w'))))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(NULL)))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((((((((((rt1.c2 IN (rt1.c1, vt0.c0)))OR(LIKE(vt0.c0, rt1.c1, 'w'))))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(NULL)))OR(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0, rt1, v0, t0, rt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, rt1, v0, t0, rt0);
SELECT ALL * FROM vt0, rt1, v0, t0, rt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, rt1, v0, t0, rt0);
SELECT ALL * FROM vt0, rt1, v0, t0, rt0 WHERE (rt1.c2);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((t0.c0) IS FALSE))LIKE(((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))))) ORDER BY ((((vt0.c0)&(rt0.c0)))-(CASE rt0.c2  WHEN '1707726332' THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE))LIKE(((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((vt0.c0)&(rt0.c0)))-(CASE rt0.c2  WHEN '1707726332' THEN vt0.c0 END)) ASC);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((t0.c0) IS FALSE))LIKE(((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))))) ORDER BY ((((vt0.c0)&(rt0.c0)))-(CASE rt0.c2  WHEN '1707726332' THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE))LIKE(((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((vt0.c0)&(rt0.c0)))-(CASE rt0.c2  WHEN '1707726332' THEN vt0.c0 END)) ASC);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((t0.c0) IS FALSE))LIKE(((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))))) ORDER BY ((((vt0.c0)&(rt0.c0)))-(CASE rt0.c2  WHEN '1707726332' THEN vt0.c0 END)) ASC;
SELECT COUNT(*) FROM vt0, rt1, v0, t0, rt0 WHERE (vt0.c0) ORDER BY ((((t0.c43)=(t0.c1))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt1, v0, t0, rt0 ORDER BY ((((t0.c43)=(t0.c1))) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1, v0, t0, rt0 WHERE (vt0.c0) ORDER BY ((((t0.c43)=(t0.c1))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt1, v0, t0, rt0 ORDER BY ((((t0.c43)=(t0.c1))) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1, v0, t0, rt0 WHERE (vt0.c0) ORDER BY ((((t0.c43)=(t0.c1))) IS FALSE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1, rt0, v0 WHERE (CASE ((rt1.c1) IS FALSE)  WHEN ((rt0.c3)||(v0.c0)) THEN CASE rt1.c1  WHEN t0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN 0xffffffff9b1f36c5 WHEN rt1.c1 THEN v0.c0 WHEN rt0.c3 THEN t0.c43 WHEN rt0.c2 THEN t0.c0 WHEN rt1.c2 THEN t0.c43 END ELSE rt0.c3 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) IS FALSE)  WHEN ((rt0.c3)||(v0.c0)) THEN CASE rt1.c1  WHEN t0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN 0xffffffff9b1f36c5 WHEN rt1.c1 THEN v0.c0 WHEN rt0.c3 THEN t0.c43 WHEN rt0.c2 THEN t0.c0 WHEN rt1.c2 THEN t0.c43 END ELSE rt0.c3 END) IS TRUE)  as count FROM t0, rt1, rt0, v0);
SELECT COUNT(*) FROM t0, rt1, rt0, v0 WHERE (CASE ((rt1.c1) IS FALSE)  WHEN ((rt0.c3)||(v0.c0)) THEN CASE rt1.c1  WHEN t0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN 0xffffffff9b1f36c5 WHEN rt1.c1 THEN v0.c0 WHEN rt0.c3 THEN t0.c43 WHEN rt0.c2 THEN t0.c0 WHEN rt1.c2 THEN t0.c43 END ELSE rt0.c3 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) IS FALSE)  WHEN ((rt0.c3)||(v0.c0)) THEN CASE rt1.c1  WHEN t0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN 0xffffffff9b1f36c5 WHEN rt1.c1 THEN v0.c0 WHEN rt0.c3 THEN t0.c43 WHEN rt0.c2 THEN t0.c0 WHEN rt1.c2 THEN t0.c43 END ELSE rt0.c3 END) IS TRUE)  as count FROM t0, rt1, rt0, v0);
SELECT COUNT(*) FROM t0, rt1, rt0, v0 WHERE (CASE ((rt1.c1) IS FALSE)  WHEN ((rt0.c3)||(v0.c0)) THEN CASE rt1.c1  WHEN t0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN 0xffffffff9b1f36c5 WHEN rt1.c1 THEN v0.c0 WHEN rt0.c3 THEN t0.c43 WHEN rt0.c2 THEN t0.c0 WHEN rt1.c2 THEN t0.c43 END ELSE rt0.c3 END);
SELECT * FROM v0 WHERE ((+ (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (v0.c0)));
SELECT * FROM t0 WHERE (CASE ((t0.c0) NOT NULL)  WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c43 END END) ORDER BY ((t0.c43) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c43 AS INTEGER)))  NULLS LAST, ((t0.c1)<=(t0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOT NULL)  WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c43 END END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c43) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c43 AS INTEGER)))  NULLS LAST, ((t0.c1)<=(t0.c1)) COLLATE BINARY DESC);
SELECT * FROM t0 WHERE (CASE ((t0.c0) NOT NULL)  WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c43 END END) ORDER BY ((t0.c43) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c43 AS INTEGER)))  NULLS LAST, ((t0.c1)<=(t0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOT NULL)  WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c43 END END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c43) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c43 AS INTEGER)))  NULLS LAST, ((t0.c1)<=(t0.c1)) COLLATE BINARY DESC);
SELECT * FROM t0 WHERE (CASE ((t0.c0) NOT NULL)  WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c43 END END) ORDER BY ((t0.c43) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c43 AS INTEGER)))  NULLS LAST, ((t0.c1)<=(t0.c1)) COLLATE BINARY DESC;
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (- (((rt0.c1) NOTNULL))) FULL OUTER JOIN rt0 ON (+ (CAST(t0.c1 AS TEXT))) WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (- (((rt0.c1) NOTNULL))) FULL OUTER JOIN rt0 ON (+ (CAST(t0.c1 AS TEXT))));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (- (((rt0.c1) NOTNULL))) FULL OUTER JOIN rt0 ON (+ (CAST(t0.c1 AS TEXT))) WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (- (((rt0.c1) NOTNULL))) FULL OUTER JOIN rt0 ON (+ (CAST(t0.c1 AS TEXT))));
SELECT COUNT(*) FROM v0, rt1, vt0, rt0 WHERE ((((rt1.c0)<(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)<(rt0.c2)) IN ())) IS TRUE)  as count FROM v0, rt1 NOT INDEXED, vt0, rt0);
SELECT COUNT(*) FROM v0, rt1, vt0, rt0 WHERE ((((rt1.c0)<(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)<(rt0.c2)) IN ())) IS TRUE)  as count FROM v0, rt1 NOT INDEXED, vt0, rt0);
SELECT COUNT(*) FROM v0, rt1, vt0, rt0 WHERE ((((rt1.c0)<(rt0.c2)) IN ()));
SELECT COUNT(*) FROM v0, vt0, t0 INNER JOIN rt1 ON CAST(((((((((v0.c0)AND(t0.c43)))AND(t0.c43)))AND(rt1.c0)))AND(rt0.c3)) AS BLOB) FULL OUTER JOIN rt0 ON ((0.9600017501115412)%(CAST(rt0.c0 AS BLOB))) WHERE (((t0.c1 COLLATE NOCASE) NOT BETWEEN (((rt1.c1)*(t0.c0))) AND (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE NOCASE) NOT BETWEEN (((rt1.c1)*(t0.c0))) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM v0, vt0, t0 INNER JOIN rt1 ON CAST(((((((((v0.c0)AND(t0.c43)))AND(t0.c43)))AND(rt1.c0)))AND(rt0.c3)) AS BLOB) FULL OUTER JOIN rt0 ON ((0.9600017501115412)%(CAST(rt0.c0 AS BLOB))));
SELECT COUNT(*) FROM v0, vt0, t0 INNER JOIN rt1 ON CAST(((((((((v0.c0)AND(t0.c43)))AND(t0.c43)))AND(rt1.c0)))AND(rt0.c3)) AS BLOB) FULL OUTER JOIN rt0 ON ((0.9600017501115412)%(CAST(rt0.c0 AS BLOB))) WHERE (((t0.c1 COLLATE NOCASE) NOT BETWEEN (((rt1.c1)*(t0.c0))) AND (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE NOCASE) NOT BETWEEN (((rt1.c1)*(t0.c0))) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM v0, vt0, t0 INNER JOIN rt1 ON CAST(((((((((v0.c0)AND(t0.c43)))AND(t0.c43)))AND(rt1.c0)))AND(rt0.c3)) AS BLOB) FULL OUTER JOIN rt0 ON ((0.9600017501115412)%(CAST(rt0.c0 AS BLOB))));
SELECT ALL * FROM v0, rt1, rt0, vt0 WHERE (rt0.c2) ORDER BY (((0.7439316006263992, LIKE(rt0.c0, x''), ((vt0.c0) NOTNULL), CAST(rt0.c0 AS REAL), CAST(v0.c0 AS INTEGER)))>(((('-860783472') BETWEEN (rt1.c1) AND (rt0.c0)), rt0.c0 COLLATE RTRIM, (((rt1.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))), HEX(v0.c0), (rt0.c2 IN ())))), ((rt0.c3) ISNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt1, rt0, vt0 ORDER BY (((0.7439316006263992, LIKE(rt0.c0, x''), ((vt0.c0) NOTNULL), CAST(rt0.c0 AS REAL), CAST(v0.c0 AS INTEGER)))>(((('-860783472') BETWEEN (rt1.c1) AND (rt0.c0)), rt0.c0 COLLATE RTRIM, (((rt1.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))), HEX(v0.c0), (rt0.c2 IN ())))), ((rt0.c3) ISNULL) COLLATE NOCASE);
SELECT ALL * FROM v0, rt1, rt0, vt0 WHERE (rt0.c2) ORDER BY (((0.7439316006263992, LIKE(rt0.c0, x''), ((vt0.c0) NOTNULL), CAST(rt0.c0 AS REAL), CAST(v0.c0 AS INTEGER)))>(((('-860783472') BETWEEN (rt1.c1) AND (rt0.c0)), rt0.c0 COLLATE RTRIM, (((rt1.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))), HEX(v0.c0), (rt0.c2 IN ())))), ((rt0.c3) ISNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt1, rt0, vt0 ORDER BY (((0.7439316006263992, LIKE(rt0.c0, x''), ((vt0.c0) NOTNULL), CAST(rt0.c0 AS REAL), CAST(v0.c0 AS INTEGER)))>(((('-860783472') BETWEEN (rt1.c1) AND (rt0.c0)), rt0.c0 COLLATE RTRIM, (((rt1.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))), HEX(v0.c0), (rt0.c2 IN ())))), ((rt0.c3) ISNULL) COLLATE NOCASE);
SELECT ALL * FROM v0, rt1, rt0, vt0 WHERE (rt0.c2) ORDER BY (((0.7439316006263992, LIKE(rt0.c0, x''), ((vt0.c0) NOTNULL), CAST(rt0.c0 AS REAL), CAST(v0.c0 AS INTEGER)))>(((('-860783472') BETWEEN (rt1.c1) AND (rt0.c0)), rt0.c0 COLLATE RTRIM, (((rt1.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))), HEX(v0.c0), (rt0.c2 IN ())))), ((rt0.c3) ISNULL) COLLATE NOCASE;
SELECT COUNT(*) FROM v0, t0, rt0, vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, rt0, vt0);
SELECT COUNT(*) FROM v0, t0, rt0, vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, rt0, vt0);
SELECT COUNT(*) FROM v0, t0, rt0, vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT * FROM rt1, t0, rt0, v0 WHERE (((((((((CAST(t0.c0 AS INTEGER))AND((('')AND(rt1.c1)))))AND(((rt1.c1) IS TRUE))))OR(((rt1.c2)==(t0.c1)))))OR((- (rt1.c1))))) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t0.c0 AS INTEGER))AND((('')AND(rt1.c1)))))AND(((rt1.c1) IS TRUE))))OR(((rt1.c2)==(t0.c1)))))OR((- (rt1.c1))))) IS TRUE)  as count FROM rt1, t0, rt0, v0 ORDER BY rt1.c2);
SELECT * FROM rt1, t0, rt0, v0 WHERE (((((((((CAST(t0.c0 AS INTEGER))AND((('')AND(rt1.c1)))))AND(((rt1.c1) IS TRUE))))OR(((rt1.c2)==(t0.c1)))))OR((- (rt1.c1))))) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t0.c0 AS INTEGER))AND((('')AND(rt1.c1)))))AND(((rt1.c1) IS TRUE))))OR(((rt1.c2)==(t0.c1)))))OR((- (rt1.c1))))) IS TRUE)  as count FROM rt1, t0, rt0, v0 ORDER BY rt1.c2);
SELECT * FROM rt1, t0, rt0, v0 WHERE (((((((((CAST(t0.c0 AS INTEGER))AND((('')AND(rt1.c1)))))AND(((rt1.c1) IS TRUE))))OR(((rt1.c2)==(t0.c1)))))OR((- (rt1.c1))))) ORDER BY rt1.c2;
SELECT COUNT(*) FROM t0, rt0, vt0, v0 WHERE ((NOT (('-690095910' IN (v0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (('-690095910' IN (v0.c0, rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0, v0);
SELECT COUNT(*) FROM t0, rt0, vt0, v0 WHERE ((NOT (('-690095910' IN (v0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (('-690095910' IN (v0.c0, rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0, v0);
SELECT COUNT(*) FROM t0, rt0, vt0, v0 WHERE ((NOT (('-690095910' IN (v0.c0, rt0.c1)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((0x2a4081f8)&(t0.c43))) IS FALSE) WHERE (CAST(((((t0.c43)AND(rt0.c3)))AND(rt0.c1)) AS BLOB)) ORDER BY (((0.3379017713971988)) BETWEEN (((rt0.c3 IN ()))) AND (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c43)AND(rt0.c3)))AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((0x2a4081f8)&(t0.c43))) IS FALSE) ORDER BY (((0.3379017713971988)) BETWEEN (((rt0.c3 IN ()))) AND (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) DESC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((0x2a4081f8)&(t0.c43))) IS FALSE) WHERE (CAST(((((t0.c43)AND(rt0.c3)))AND(rt0.c1)) AS BLOB)) ORDER BY (((0.3379017713971988)) BETWEEN (((rt0.c3 IN ()))) AND (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c43)AND(rt0.c3)))AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((0x2a4081f8)&(t0.c43))) IS FALSE) ORDER BY (((0.3379017713971988)) BETWEEN (((rt0.c3 IN ()))) AND (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) DESC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((0x2a4081f8)&(t0.c43))) IS FALSE) WHERE (CAST(((((t0.c43)AND(rt0.c3)))AND(rt0.c1)) AS BLOB)) ORDER BY (((0.3379017713971988)) BETWEEN (((rt0.c3 IN ()))) AND (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) DESC;
SELECT COUNT(*) FROM rt0, vt0, v0, rt1, t0 WHERE ((+ (CHAR(rt0.c1)))) ORDER BY ((rt1.c0)=((- (t0.c0)))) DESC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((+ (CHAR(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, v0, rt1, t0 ORDER BY ((rt1.c0)=((- (t0.c0)))) DESC, vt0.c0 DESC);
SELECT COUNT(*) FROM rt0, vt0, v0, rt1, t0 WHERE ((+ (CHAR(rt0.c1)))) ORDER BY ((rt1.c0)=((- (t0.c0)))) DESC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((+ (CHAR(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, v0, rt1, t0 ORDER BY ((rt1.c0)=((- (t0.c0)))) DESC, vt0.c0 DESC);
SELECT COUNT(*) FROM rt0, vt0, v0, rt1, t0 WHERE ((+ (CHAR(rt0.c1)))) ORDER BY ((rt1.c0)=((- (t0.c0)))) DESC, vt0.c0 DESC;
SELECT ALL * FROM rt0, vt0, v0 WHERE (UNLIKELY(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN 0.9600017501115412 END));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN 0.9600017501115412 END)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (UNLIKELY(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN 0.9600017501115412 END));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN 0.9600017501115412 END)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (UNLIKELY(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN 0.9600017501115412 END));
SELECT ALL * FROM t0, v0, rt1, vt0, rt0 WHERE ((((t0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM t0, v0, rt1, vt0 NOT INDEXED, rt0);
SELECT ALL * FROM t0, v0, rt1, vt0, rt0 WHERE ((((t0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM t0, v0, rt1, vt0 NOT INDEXED, rt0);
SELECT ALL * FROM t0, v0, rt1, vt0, rt0 WHERE ((((t0.c0 IN ())) IS FALSE));
SELECT ALL * FROM v0, rt1, rt0, vt0, t0 WHERE ('{') ORDER BY CAST(rt1.c2 COLLATE NOCASE AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('{') IS TRUE)  as count FROM v0, rt1 NOT INDEXED, rt0, vt0, t0 ORDER BY CAST(rt1.c2 COLLATE NOCASE AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt1, rt0, vt0, t0 WHERE ('{') ORDER BY CAST(rt1.c2 COLLATE NOCASE AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('{') IS TRUE)  as count FROM v0, rt1 NOT INDEXED, rt0, vt0, t0 ORDER BY CAST(rt1.c2 COLLATE NOCASE AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt1, rt0, vt0, t0 WHERE ('{') ORDER BY CAST(rt1.c2 COLLATE NOCASE AS REAL) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, v0 WHERE (((vt0.c0) IS TRUE)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY NULL);
SELECT ALL * FROM vt0, t0, v0 WHERE (((vt0.c0) IS TRUE)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY NULL);
SELECT ALL * FROM vt0, t0, v0 WHERE (((vt0.c0) IS TRUE)) ORDER BY NULL;
SELECT ALL * FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c0)>=(t0.c43)))-(((t0.c43) NOT NULL))) RIGHT OUTER JOIN t0 ON ((((rt0.c1)+(rt0.c0)))&(((0.4599787804476756) NOT BETWEEN (vt0.c0) AND (t0.c0)))) WHERE (CASE WHEN 0.6288606012141399 THEN CAST(rt0.c2 AS REAL) ELSE ((t0.c1) NOTNULL) END) ORDER BY json_insert(((x'')<(t0.c0)), (t0.c1 IN ()), CAST(NULL AS NUMERIC)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.6288606012141399 THEN CAST(rt0.c2 AS REAL) ELSE ((t0.c1) NOTNULL) END) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c0)>=(t0.c43)))-(((t0.c43) NOT NULL))) RIGHT OUTER JOIN t0 ON ((((rt0.c1)+(rt0.c0)))&(((0.4599787804476756) NOT BETWEEN (vt0.c0) AND (t0.c0)))) ORDER BY json_insert(((x'')<(t0.c0)), (t0.c1 IN ()), CAST(NULL AS NUMERIC)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c0)>=(t0.c43)))-(((t0.c43) NOT NULL))) RIGHT OUTER JOIN t0 ON ((((rt0.c1)+(rt0.c0)))&(((0.4599787804476756) NOT BETWEEN (vt0.c0) AND (t0.c0)))) WHERE (CASE WHEN 0.6288606012141399 THEN CAST(rt0.c2 AS REAL) ELSE ((t0.c1) NOTNULL) END) ORDER BY json_insert(((x'')<(t0.c0)), (t0.c1 IN ()), CAST(NULL AS NUMERIC)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.6288606012141399 THEN CAST(rt0.c2 AS REAL) ELSE ((t0.c1) NOTNULL) END) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c0)>=(t0.c43)))-(((t0.c43) NOT NULL))) RIGHT OUTER JOIN t0 ON ((((rt0.c1)+(rt0.c0)))&(((0.4599787804476756) NOT BETWEEN (vt0.c0) AND (t0.c0)))) ORDER BY json_insert(((x'')<(t0.c0)), (t0.c1 IN ()), CAST(NULL AS NUMERIC)) DESC  NULLS FIRST);
SELECT ALL * FROM t0 NOT INDEXED, rt0, rt1 LEFT OUTER JOIN v0 ON CAST(TRIM(rt1.c1) AS NUMERIC) CROSS JOIN vt0 ON vt0.c0 WHERE ((- (0.1914919766123988))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (0.1914919766123988))) IS TRUE)  as count FROM t0, rt0, rt1 LEFT OUTER JOIN v0 ON CAST(TRIM(rt1.c1) AS NUMERIC) CROSS JOIN vt0 ON vt0.c0 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM t0 NOT INDEXED, rt0, rt1 LEFT OUTER JOIN v0 ON CAST(TRIM(rt1.c1) AS NUMERIC) CROSS JOIN vt0 ON vt0.c0 WHERE ((- (0.1914919766123988))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (0.1914919766123988))) IS TRUE)  as count FROM t0, rt0, rt1 LEFT OUTER JOIN v0 ON CAST(TRIM(rt1.c1) AS NUMERIC) CROSS JOIN vt0 ON vt0.c0 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM t0 NOT INDEXED, rt0, rt1 LEFT OUTER JOIN v0 ON CAST(TRIM(rt1.c1) AS NUMERIC) CROSS JOIN vt0 ON vt0.c0 WHERE ((- (0.1914919766123988))) ORDER BY x''  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (CAST(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (CAST(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (CAST(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS INTEGER));
SELECT * FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE NOCASE) ORDER BY rt0.c3, (((rt0.c3)) NOT BETWEEN ((LIKELY(DISTINCT rt0.c1))) AND ((rt0.c0 COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3, (((rt0.c3)) NOT BETWEEN ((LIKELY(DISTINCT rt0.c1))) AND ((rt0.c0 COLLATE NOCASE))) ASC);
SELECT * FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE NOCASE) ORDER BY rt0.c3, (((rt0.c3)) NOT BETWEEN ((LIKELY(DISTINCT rt0.c1))) AND ((rt0.c0 COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3, (((rt0.c3)) NOT BETWEEN ((LIKELY(DISTINCT rt0.c1))) AND ((rt0.c0 COLLATE NOCASE))) ASC);
SELECT * FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE NOCASE) ORDER BY rt0.c3, (((rt0.c3)) NOT BETWEEN ((LIKELY(DISTINCT rt0.c1))) AND ((rt0.c0 COLLATE NOCASE))) ASC;
SELECT * FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))/(NULL))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(vt0.c0)))/(NULL))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB));
SELECT * FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))/(NULL))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(vt0.c0)))/(NULL))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB));
SELECT * FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))/(NULL))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON CASE CAST(NULL AS TEXT)  WHEN ((rt0.c2)IS(rt0.c3)) THEN '-1131396257' ELSE SQLITE_COMPILEOPTION_GET(rt0.c1) END RIGHT OUTER JOIN vt0 ON ((((((rt0.c1)AND(-1.91404915E9)))AND(vt0.c0)))GLOB(COALESCE(rt0.c3, rt1.c0, rt0.c1, rt0.c0))) WHERE (NULL) ORDER BY (- (CAST(rt0.c3 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE CAST(NULL AS TEXT)  WHEN ((rt0.c2)IS(rt0.c3)) THEN '-1131396257' ELSE SQLITE_COMPILEOPTION_GET(rt0.c1) END RIGHT OUTER JOIN vt0 ON ((((((rt0.c1)AND(-1.91404915E9)))AND(vt0.c0)))GLOB(COALESCE(rt0.c3, rt1.c0, rt0.c1, rt0.c0))) ORDER BY (- (CAST(rt0.c3 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON CASE CAST(NULL AS TEXT)  WHEN ((rt0.c2)IS(rt0.c3)) THEN '-1131396257' ELSE SQLITE_COMPILEOPTION_GET(rt0.c1) END RIGHT OUTER JOIN vt0 ON ((((((rt0.c1)AND(-1.91404915E9)))AND(vt0.c0)))GLOB(COALESCE(rt0.c3, rt1.c0, rt0.c1, rt0.c0))) WHERE (NULL) ORDER BY (- (CAST(rt0.c3 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE CAST(NULL AS TEXT)  WHEN ((rt0.c2)IS(rt0.c3)) THEN '-1131396257' ELSE SQLITE_COMPILEOPTION_GET(rt0.c1) END RIGHT OUTER JOIN vt0 ON ((((((rt0.c1)AND(-1.91404915E9)))AND(vt0.c0)))GLOB(COALESCE(rt0.c3, rt1.c0, rt0.c1, rt0.c0))) ORDER BY (- (CAST(rt0.c3 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON CASE CAST(NULL AS TEXT)  WHEN ((rt0.c2)IS(rt0.c3)) THEN '-1131396257' ELSE SQLITE_COMPILEOPTION_GET(rt0.c1) END RIGHT OUTER JOIN vt0 ON ((((((rt0.c1)AND(-1.91404915E9)))AND(vt0.c0)))GLOB(COALESCE(rt0.c3, rt1.c0, rt0.c1, rt0.c0))) WHERE (NULL) ORDER BY (- (CAST(rt0.c3 AS NUMERIC)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, v0, rt1 WHERE ('뱁m乏5^Dꖬ)') ORDER BY load_extension(CAST(t0.c43 AS NUMERIC)) ASC  NULLS LAST, ((v0.c0 COLLATE NOCASE)LIKE((rt1.c2 IN ())))  NULLS FIRST, json_remove(CAST(vt0.c0 AS BLOB), t0.c43 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('뱁m乏5^Dꖬ)') IS TRUE)  as count FROM vt0, t0, rt0, v0, rt1 ORDER BY load_extension(CAST(t0.c43 AS NUMERIC)) ASC  NULLS LAST, ((v0.c0 COLLATE NOCASE)LIKE((rt1.c2 IN ())))  NULLS FIRST, json_remove(CAST(vt0.c0 AS BLOB), t0.c43 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, v0, rt1 WHERE ('뱁m乏5^Dꖬ)') ORDER BY load_extension(CAST(t0.c43 AS NUMERIC)) ASC  NULLS LAST, ((v0.c0 COLLATE NOCASE)LIKE((rt1.c2 IN ())))  NULLS FIRST, json_remove(CAST(vt0.c0 AS BLOB), t0.c43 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('뱁m乏5^Dꖬ)') IS TRUE)  as count FROM vt0, t0, rt0, v0, rt1 ORDER BY load_extension(CAST(t0.c43 AS NUMERIC)) ASC  NULLS LAST, ((v0.c0 COLLATE NOCASE)LIKE((rt1.c2 IN ())))  NULLS FIRST, json_remove(CAST(vt0.c0 AS BLOB), t0.c43 COLLATE BINARY));
SELECT ALL COUNT(*) FROM t0 WHERE ((CASE t0.c1  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c1  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((CASE t0.c1  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c1  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((CASE t0.c1  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()));
SELECT * FROM rt1, v0 LEFT OUTER JOIN vt0 ON ((CASE v0.c0  WHEN v0.c0 THEN rt1.c0 END) ISNULL) WHERE (((CAST(rt1.c0 AS INTEGER)) BETWEEN ((v0.c0 IN (rt1.c2))) AND (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS INTEGER)) BETWEEN ((v0.c0 IN (rt1.c2))) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, v0 LEFT OUTER JOIN vt0 ON ((CASE v0.c0  WHEN v0.c0 THEN rt1.c0 END) ISNULL));
SELECT * FROM rt1, v0 LEFT OUTER JOIN vt0 ON ((CASE v0.c0  WHEN v0.c0 THEN rt1.c0 END) ISNULL) WHERE (((CAST(rt1.c0 AS INTEGER)) BETWEEN ((v0.c0 IN (rt1.c2))) AND (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS INTEGER)) BETWEEN ((v0.c0 IN (rt1.c2))) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, v0 LEFT OUTER JOIN vt0 ON ((CASE v0.c0  WHEN v0.c0 THEN rt1.c0 END) ISNULL));
SELECT * FROM rt1, v0 LEFT OUTER JOIN vt0 ON ((CASE v0.c0  WHEN v0.c0 THEN rt1.c0 END) ISNULL) WHERE (((CAST(rt1.c0 AS INTEGER)) BETWEEN ((v0.c0 IN (rt1.c2))) AND (v0.c0 COLLATE BINARY)));
SELECT * FROM t0, rt1, v0, vt0, rt0 WHERE ((~ ((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (rt1.c0))))) IS TRUE)  as count FROM t0, rt1, v0, vt0, rt0);
SELECT * FROM t0, rt1, v0, vt0, rt0 WHERE ((~ ((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (rt1.c0))))) IS TRUE)  as count FROM t0, rt1, v0, vt0, rt0);
SELECT * FROM t0, rt1, v0, vt0, rt0 WHERE ((~ ((- (rt1.c0)))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON CASE 0.618480827243547  WHEN (((rt0.c0, rt1.c0, t0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, rt1.c1)) AND ((rt1.c2, '-2005550744', rt1.c0))) THEN rt1.c2 ELSE '}핺\[Nb쎇G' END LEFT OUTER JOIN rt0 ON ((json_remove(v0.c0, x''))OR(((('2015211734'))>((rt1.c0))))) INNER JOIN t0 ON ((CAST(rt0.c2 AS REAL))LIKE(((rt1.c1) NOTNULL))) CROSS JOIN v0 ON CAST((((rt0.c3)) BETWEEN ((rt1.c2)) AND ((vt0.c0))) AS INTEGER) WHERE (((rt1.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) IS FALSE)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON CASE 0.618480827243547  WHEN (((rt0.c0, rt1.c0, t0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, rt1.c1)) AND ((rt1.c2, '-2005550744', rt1.c0))) THEN rt1.c2 ELSE '}핺\[Nb쎇G' END LEFT OUTER JOIN rt0 ON ((json_remove(v0.c0, x''))OR(((('2015211734'))>((rt1.c0))))) INNER JOIN t0 ON ((CAST(rt0.c2 AS REAL))LIKE(((rt1.c1) NOTNULL))) CROSS JOIN v0 ON CAST((((rt0.c3)) BETWEEN ((rt1.c2)) AND ((vt0.c0))) AS INTEGER));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON CASE 0.618480827243547  WHEN (((rt0.c0, rt1.c0, t0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, rt1.c1)) AND ((rt1.c2, '-2005550744', rt1.c0))) THEN rt1.c2 ELSE '}핺\[Nb쎇G' END LEFT OUTER JOIN rt0 ON ((json_remove(v0.c0, x''))OR(((('2015211734'))>((rt1.c0))))) INNER JOIN t0 ON ((CAST(rt0.c2 AS REAL))LIKE(((rt1.c1) NOTNULL))) CROSS JOIN v0 ON CAST((((rt0.c3)) BETWEEN ((rt1.c2)) AND ((vt0.c0))) AS INTEGER) WHERE (((rt1.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) IS FALSE)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON CASE 0.618480827243547  WHEN (((rt0.c0, rt1.c0, t0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, rt1.c1)) AND ((rt1.c2, '-2005550744', rt1.c0))) THEN rt1.c2 ELSE '}핺\[Nb쎇G' END LEFT OUTER JOIN rt0 ON ((json_remove(v0.c0, x''))OR(((('2015211734'))>((rt1.c0))))) INNER JOIN t0 ON ((CAST(rt0.c2 AS REAL))LIKE(((rt1.c1) NOTNULL))) CROSS JOIN v0 ON CAST((((rt0.c3)) BETWEEN ((rt1.c2)) AND ((vt0.c0))) AS INTEGER));
SELECT ALL * FROM rt0, vt0, v0, rt1 WHERE (CASE WHEN (NOT (rt1.c1)) THEN '1022444655' ELSE ((v0.c0) IS FALSE) END) ORDER BY ((((vt0.c0)IS(rt0.c2)))%((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c0)))))  NULLS FIRST, (+ ('0.5877224621595253')) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt1.c1)) THEN '1022444655' ELSE ((v0.c0) IS FALSE) END) IS TRUE)  as count FROM rt0, vt0, v0, rt1 ORDER BY ((((vt0.c0)IS(rt0.c2)))%((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c0)))))  NULLS FIRST, (+ ('0.5877224621595253')) COLLATE BINARY ASC);
SELECT ALL * FROM rt0, vt0, v0, rt1 WHERE (CASE WHEN (NOT (rt1.c1)) THEN '1022444655' ELSE ((v0.c0) IS FALSE) END) ORDER BY ((((vt0.c0)IS(rt0.c2)))%((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c0)))))  NULLS FIRST, (+ ('0.5877224621595253')) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt1.c1)) THEN '1022444655' ELSE ((v0.c0) IS FALSE) END) IS TRUE)  as count FROM rt0, vt0, v0, rt1 ORDER BY ((((vt0.c0)IS(rt0.c2)))%((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c0)))))  NULLS FIRST, (+ ('0.5877224621595253')) COLLATE BINARY ASC);
SELECT ALL * FROM rt0, vt0, v0, rt1 WHERE (CASE WHEN (NOT (rt1.c1)) THEN '1022444655' ELSE ((v0.c0) IS FALSE) END) ORDER BY ((((vt0.c0)IS(rt0.c2)))%((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c0)))))  NULLS FIRST, (+ ('0.5877224621595253')) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM rt0, v0, t0, rt1, vt0 WHERE (rt0.c3) ORDER BY ((((rt1.c1)+(v0.c0)))OR(LIKE(t0.c1, t0.c43))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, v0, t0, rt1, vt0 ORDER BY ((((rt1.c1)+(v0.c0)))OR(LIKE(t0.c1, t0.c43))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, t0, rt1, vt0 WHERE (rt0.c3) ORDER BY ((((rt1.c1)+(v0.c0)))OR(LIKE(t0.c1, t0.c43))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, v0, t0, rt1, vt0 ORDER BY ((((rt1.c1)+(v0.c0)))OR(LIKE(t0.c1, t0.c43))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, t0, rt1, vt0 WHERE (rt0.c3) ORDER BY ((((rt1.c1)+(v0.c0)))OR(LIKE(t0.c1, t0.c43))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((+ (rt1.c1))) NOT BETWEEN (TRIM(rt1.c2)) AND (rt1.c1))) ORDER BY rt1.c2, ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1))) NOT BETWEEN (TRIM(rt1.c2)) AND (rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2, ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((+ (rt1.c1))) NOT BETWEEN (TRIM(rt1.c2)) AND (rt1.c1))) ORDER BY rt1.c2, ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1))) NOT BETWEEN (TRIM(rt1.c2)) AND (rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2, ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((+ (rt1.c1))) NOT BETWEEN (TRIM(rt1.c2)) AND (rt1.c1))) ORDER BY rt1.c2, ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))) IS TRUE)  NULLS LAST;
SELECT ALL * FROM vt0, v0, rt1, rt0, t0 WHERE (COALESCE(((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)), rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)), rt1.c1)) IS TRUE)  as count FROM vt0, v0, rt1, rt0, t0);
SELECT ALL * FROM vt0, v0, rt1, rt0, t0 WHERE (COALESCE(((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)), rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)), rt1.c1)) IS TRUE)  as count FROM vt0, v0, rt1, rt0, t0);
SELECT ALL * FROM vt0, v0, rt1, rt0, t0 WHERE (COALESCE(((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)), rt1.c1));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (rt0.c3);
SELECT COUNT(*) FROM t0, vt0, rt1, v0 WHERE (((((rt1.c2)OR(rt1.c0))) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((t0.c1)||(rt1.c2))))) ORDER BY (+ (rt1.c1)) COLLATE RTRIM DESC  NULLS LAST, t0.c0 ASC, CASE WHEN ((x'') BETWEEN (rt1.c0) AND (t0.c0)) THEN ((rt1.c0) NOT BETWEEN (t0.c43) AND (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)OR(rt1.c0))) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((t0.c1)||(rt1.c2))))) IS TRUE)  as count FROM t0, vt0, rt1, v0 ORDER BY (+ (rt1.c1)) COLLATE RTRIM DESC  NULLS LAST, t0.c0 ASC, CASE WHEN ((x'') BETWEEN (rt1.c0) AND (t0.c0)) THEN ((rt1.c0) NOT BETWEEN (t0.c43) AND (vt0.c0)) END);
SELECT COUNT(*) FROM t0, vt0, rt1, v0 WHERE (((((rt1.c2)OR(rt1.c0))) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((t0.c1)||(rt1.c2))))) ORDER BY (+ (rt1.c1)) COLLATE RTRIM DESC  NULLS LAST, t0.c0 ASC, CASE WHEN ((x'') BETWEEN (rt1.c0) AND (t0.c0)) THEN ((rt1.c0) NOT BETWEEN (t0.c43) AND (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)OR(rt1.c0))) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((t0.c1)||(rt1.c2))))) IS TRUE)  as count FROM t0, vt0, rt1, v0 ORDER BY (+ (rt1.c1)) COLLATE RTRIM DESC  NULLS LAST, t0.c0 ASC, CASE WHEN ((x'') BETWEEN (rt1.c0) AND (t0.c0)) THEN ((rt1.c0) NOT BETWEEN (t0.c43) AND (vt0.c0)) END);
SELECT COUNT(*) FROM t0, vt0, rt1, v0 WHERE (((((rt1.c2)OR(rt1.c0))) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((t0.c1)||(rt1.c2))))) ORDER BY (+ (rt1.c1)) COLLATE RTRIM DESC  NULLS LAST, t0.c0 ASC, CASE WHEN ((x'') BETWEEN (rt1.c0) AND (t0.c0)) THEN ((rt1.c0) NOT BETWEEN (t0.c43) AND (vt0.c0)) END;
SELECT ALL * FROM rt1, rt0, vt0, t0, v0 WHERE (((rt0.c2) ISNULL)) ORDER BY (((NULL)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) ISNULL)) IS TRUE)  as count FROM rt1, rt0, vt0, t0, v0 ORDER BY (((NULL)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CAST(rt0.c0 AS TEXT)))));
SELECT ALL * FROM rt1, rt0, vt0, t0, v0 WHERE (((rt0.c2) ISNULL)) ORDER BY (((NULL)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) ISNULL)) IS TRUE)  as count FROM rt1, rt0, vt0, t0, v0 ORDER BY (((NULL)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CAST(rt0.c0 AS TEXT)))));
SELECT ALL * FROM rt1, rt0, vt0, t0, v0 WHERE (((rt0.c2) ISNULL)) ORDER BY (((NULL)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CAST(rt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM v0 WHERE ('V+꾠Rqc') ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS REAL)) AND (((v0.c0)IS(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('V+꾠Rqc') IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS REAL)) AND (((v0.c0)IS(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ('V+꾠Rqc') ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS REAL)) AND (((v0.c0)IS(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('V+꾠Rqc') IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS REAL)) AND (((v0.c0)IS(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ('V+꾠Rqc') ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS REAL)) AND (((v0.c0)IS(v0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, v0 NOT INDEXED, rt1 FULL OUTER JOIN rt0 ON ((ABS(DISTINCT t0.c1))IS NOT(((rt0.c3)>>(rt1.c0)))) WHERE (rt0.c1) ORDER BY MAX(CASE rt0.c0  WHEN t0.c43 THEN v0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN rt1.c0 THEN rt1.c2 WHEN '[IT*' THEN rt1.c1 ELSE rt1.c0 END, (((rt0.c2, rt1.c1, t0.c0)) NOT BETWEEN ((rt0.c1, x'', rt1.c0)) AND ((rt0.c0, rt1.c2, rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, t0, v0, rt1 FULL OUTER JOIN rt0 ON ((ABS(DISTINCT t0.c1))IS NOT(((rt0.c3)>>(rt1.c0)))) ORDER BY MAX(CASE rt0.c0  WHEN t0.c43 THEN v0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN rt1.c0 THEN rt1.c2 WHEN '[IT*' THEN rt1.c1 ELSE rt1.c0 END, (((rt0.c2, rt1.c1, t0.c0)) NOT BETWEEN ((rt0.c1, x'', rt1.c0)) AND ((rt0.c0, rt1.c2, rt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0, v0 NOT INDEXED, rt1 FULL OUTER JOIN rt0 ON ((ABS(DISTINCT t0.c1))IS NOT(((rt0.c3)>>(rt1.c0)))) WHERE (rt0.c1) ORDER BY MAX(CASE rt0.c0  WHEN t0.c43 THEN v0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN rt1.c0 THEN rt1.c2 WHEN '[IT*' THEN rt1.c1 ELSE rt1.c0 END, (((rt0.c2, rt1.c1, t0.c0)) NOT BETWEEN ((rt0.c1, x'', rt1.c0)) AND ((rt0.c0, rt1.c2, rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, t0, v0, rt1 FULL OUTER JOIN rt0 ON ((ABS(DISTINCT t0.c1))IS NOT(((rt0.c3)>>(rt1.c0)))) ORDER BY MAX(CASE rt0.c0  WHEN t0.c43 THEN v0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN rt1.c0 THEN rt1.c2 WHEN '[IT*' THEN rt1.c1 ELSE rt1.c0 END, (((rt0.c2, rt1.c1, t0.c0)) NOT BETWEEN ((rt0.c1, x'', rt1.c0)) AND ((rt0.c0, rt1.c2, rt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0, v0 NOT INDEXED, rt1 FULL OUTER JOIN rt0 ON ((ABS(DISTINCT t0.c1))IS NOT(((rt0.c3)>>(rt1.c0)))) WHERE (rt0.c1) ORDER BY MAX(CASE rt0.c0  WHEN t0.c43 THEN v0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN rt1.c0 THEN rt1.c2 WHEN '[IT*' THEN rt1.c1 ELSE rt1.c0 END, (((rt0.c2, rt1.c1, t0.c0)) NOT BETWEEN ((rt0.c1, x'', rt1.c0)) AND ((rt0.c0, rt1.c2, rt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0, v0, rt0, t0 RIGHT OUTER JOIN rt1 ON ((v0.c0 COLLATE RTRIM)<=(((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) WHERE (((0xffffffffa699d414) NOTNULL)) ORDER BY ROUND('r3', ((rt1.c2)-(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffa699d414) NOTNULL)) IS TRUE)  as count FROM vt0, v0, rt0, t0 RIGHT OUTER JOIN rt1 ON ((v0.c0 COLLATE RTRIM)<=(((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) ORDER BY ROUND('r3', ((rt1.c2)-(rt0.c1))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0, t0 RIGHT OUTER JOIN rt1 ON ((v0.c0 COLLATE RTRIM)<=(((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) WHERE (((0xffffffffa699d414) NOTNULL)) ORDER BY ROUND('r3', ((rt1.c2)-(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffa699d414) NOTNULL)) IS TRUE)  as count FROM vt0, v0, rt0, t0 RIGHT OUTER JOIN rt1 ON ((v0.c0 COLLATE RTRIM)<=(((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) ORDER BY ROUND('r3', ((rt1.c2)-(rt0.c1))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0, t0 RIGHT OUTER JOIN rt1 ON ((v0.c0 COLLATE RTRIM)<=(((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) WHERE (((0xffffffffa699d414) NOTNULL)) ORDER BY ROUND('r3', ((rt1.c2)-(rt0.c1)));
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE (((t0.c43) NOT BETWEEN (NULL) AND (t0.c1)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c43) NOT BETWEEN (NULL) AND (t0.c1)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE (((t0.c43) NOT BETWEEN (NULL) AND (t0.c1)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c43) NOT BETWEEN (NULL) AND (t0.c1)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE (((t0.c43) NOT BETWEEN (NULL) AND (t0.c1)) COLLATE RTRIM COLLATE NOCASE);
SELECT ALL * FROM vt0, rt1 WHERE (CASE WHEN ((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)) THEN (((rt1.c2, vt0.c0, vt0.c0))<=((rt1.c2, rt1.c0, x'e620'))) WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (NULL)) THEN NULL WHEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)) THEN ((vt0.c0) IS FALSE) ELSE (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)) THEN (((rt1.c2, vt0.c0, vt0.c0))<=((rt1.c2, rt1.c0, x'e620'))) WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (NULL)) THEN NULL WHEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)) THEN ((vt0.c0) IS FALSE) ELSE (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CASE WHEN ((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)) THEN (((rt1.c2, vt0.c0, vt0.c0))<=((rt1.c2, rt1.c0, x'e620'))) WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (NULL)) THEN NULL WHEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)) THEN ((vt0.c0) IS FALSE) ELSE (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)) THEN (((rt1.c2, vt0.c0, vt0.c0))<=((rt1.c2, rt1.c0, x'e620'))) WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (NULL)) THEN NULL WHEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)) THEN ((vt0.c0) IS FALSE) ELSE (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CASE WHEN ((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)) THEN (((rt1.c2, vt0.c0, vt0.c0))<=((rt1.c2, rt1.c0, x'e620'))) WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (NULL)) THEN NULL WHEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)) THEN ((vt0.c0) IS FALSE) ELSE (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) END);
SELECT COUNT(*) FROM t0, rt0, rt1, vt0, v0 WHERE ((((rt0.c3 IN ())) NOTNULL)) ORDER BY ((((((((((((NULL)AND(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(0.839828969820639)))AND(rt0.c2)))OR(t0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) NOTNULL)) IS TRUE)  as count FROM t0, rt0, rt1, vt0, v0 ORDER BY ((((((((((((NULL)AND(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(0.839828969820639)))AND(rt0.c2)))OR(t0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, rt1, vt0, v0 WHERE ((((rt0.c3 IN ())) NOTNULL)) ORDER BY ((((((((((((NULL)AND(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(0.839828969820639)))AND(rt0.c2)))OR(t0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) NOTNULL)) IS TRUE)  as count FROM t0, rt0, rt1, vt0, v0 ORDER BY ((((((((((((NULL)AND(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(0.839828969820639)))AND(rt0.c2)))OR(t0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, rt1, vt0, v0 WHERE ((((rt0.c3 IN ())) NOTNULL)) ORDER BY ((((((((((((NULL)AND(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(0.839828969820639)))AND(rt0.c2)))OR(t0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((- ((((t0.c0))>=((t0.c1))))));
SELECT SUM(count) FROM (SELECT (((- ((((t0.c0))>=((t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- ((((t0.c0))>=((t0.c1))))));
SELECT SUM(count) FROM (SELECT (((- ((((t0.c0))>=((t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- ((((t0.c0))>=((t0.c1))))));
SELECT ALL * FROM t0 WHERE ((~ ((((t0.c1, t0.c0, t0.c1))=((t0.c1, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c1, t0.c0, t0.c1))==((t0.c1, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ ((((t0.c1, t0.c0, t0.c1))=((t0.c1, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c1, t0.c0, t0.c1))==((t0.c1, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ ((((t0.c1, t0.c0, t0.c1))=((t0.c1, t0.c0, t0.c0))))));
SELECT * FROM v0, rt1, vt0, t0 WHERE ((rt1.c0 IN ())) ORDER BY (((((t0.c43)AND(rt1.c1)))OR('-1006650736')) IN (x''))  NULLS LAST, ((t0.c1) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ())) IS TRUE)  as count FROM v0, rt1, vt0, t0 ORDER BY (((((t0.c43)AND(rt1.c1)))OR('-1006650736')) IN (x''))  NULLS LAST, ((t0.c1) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM v0, rt1, vt0, t0 WHERE ((rt1.c0 IN ())) ORDER BY (((((t0.c43)AND(rt1.c1)))OR('-1006650736')) IN (x''))  NULLS LAST, ((t0.c1) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ())) IS TRUE)  as count FROM v0, rt1, vt0, t0 ORDER BY (((((t0.c43)AND(rt1.c1)))OR('-1006650736')) IN (x''))  NULLS LAST, ((t0.c1) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM v0, rt1, vt0, t0 WHERE ((rt1.c0 IN ())) ORDER BY (((((t0.c43)AND(rt1.c1)))OR('-1006650736')) IN (x''))  NULLS LAST, ((t0.c1) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, t0 FULL OUTER JOIN v0 ON CASE WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))) THEN CASE WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END WHEN rt1.c0 COLLATE NOCASE THEN ((((((((v0.c0)OR('-147843932')))AND(rt0.c2)))AND(t0.c0)))AND(t0.c0)) WHEN rt1.c0 THEN 'IA4U' ELSE ((v0.c0)IS(rt0.c1)) END WHERE (((((rt0.c2)*(rt0.c3)))IS NOT(x''))) ORDER BY ((rt0.c3)<=(t0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)*(rt0.c3)))IS NOT(x''))) IS TRUE)  as count FROM vt0, rt0, rt1, t0 FULL OUTER JOIN v0 ON CASE WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))) THEN CASE WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END WHEN rt1.c0 COLLATE NOCASE THEN ((((((((v0.c0)OR('-147843932')))AND(rt0.c2)))AND(t0.c0)))AND(t0.c0)) WHEN rt1.c0 THEN 'IA4U' ELSE ((v0.c0)IS(rt0.c1)) END ORDER BY ((rt0.c3)<=(t0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, t0 FULL OUTER JOIN v0 ON CASE WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))) THEN CASE WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END WHEN rt1.c0 COLLATE NOCASE THEN ((((((((v0.c0)OR('-147843932')))AND(rt0.c2)))AND(t0.c0)))AND(t0.c0)) WHEN rt1.c0 THEN 'IA4U' ELSE ((v0.c0)IS(rt0.c1)) END WHERE (((((rt0.c2)*(rt0.c3)))IS NOT(x''))) ORDER BY ((rt0.c3)<=(t0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)*(rt0.c3)))IS NOT(x''))) IS TRUE)  as count FROM vt0, rt0, rt1, t0 FULL OUTER JOIN v0 ON CASE WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))) THEN CASE WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END WHEN rt1.c0 COLLATE NOCASE THEN ((((((((v0.c0)OR('-147843932')))AND(rt0.c2)))AND(t0.c0)))AND(t0.c0)) WHEN rt1.c0 THEN 'IA4U' ELSE ((v0.c0)IS(rt0.c1)) END ORDER BY ((rt0.c3)<=(t0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, t0 FULL OUTER JOIN v0 ON CASE WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))) THEN CASE WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END WHEN rt1.c0 COLLATE NOCASE THEN ((((((((v0.c0)OR('-147843932')))AND(rt0.c2)))AND(t0.c0)))AND(t0.c0)) WHEN rt1.c0 THEN 'IA4U' ELSE ((v0.c0)IS(rt0.c1)) END WHERE (((((rt0.c2)*(rt0.c3)))IS NOT(x''))) ORDER BY ((rt0.c3)<=(t0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON ((((((((((rt0.c2)OR(rt0.c2)))OR(NULL)))AND(((rt0.c1) ISNULL))))OR(CASE WHEN rt0.c1 THEN rt0.c3 END)))AND(LOWER(DISTINCT rt0.c2))) CROSS JOIN v0 ON x'' WHERE ((((CAST(rt0.c0 AS BLOB)))>=((((((rt0.c2)AND(t0.c0)))AND(rt0.c1)))))) ORDER BY (((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE '0.6826975911463089' END))<(((~ (v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c0 AS BLOB)))>=((((((rt0.c2)AND(t0.c0)))AND(rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON ((((((((((rt0.c2)OR(rt0.c2)))OR(NULL)))AND(((rt0.c1) ISNULL))))OR(CASE WHEN rt0.c1 THEN rt0.c3 END)))AND(LOWER(DISTINCT rt0.c2))) CROSS JOIN v0 ON x'' ORDER BY (((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE '0.6826975911463089' END))<(((~ (v0.c0))))) DESC);
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON ((((((((((rt0.c2)OR(rt0.c2)))OR(NULL)))AND(((rt0.c1) ISNULL))))OR(CASE WHEN rt0.c1 THEN rt0.c3 END)))AND(LOWER(DISTINCT rt0.c2))) CROSS JOIN v0 ON x'' WHERE ((((CAST(rt0.c0 AS BLOB)))>=((((((rt0.c2)AND(t0.c0)))AND(rt0.c1)))))) ORDER BY (((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE '0.6826975911463089' END))<(((~ (v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c0 AS BLOB)))>=((((((rt0.c2)AND(t0.c0)))AND(rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON ((((((((((rt0.c2)OR(rt0.c2)))OR(NULL)))AND(((rt0.c1) ISNULL))))OR(CASE WHEN rt0.c1 THEN rt0.c3 END)))AND(LOWER(DISTINCT rt0.c2))) CROSS JOIN v0 ON x'' ORDER BY (((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE '0.6826975911463089' END))<(((~ (v0.c0))))) DESC);
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON ((((((((((rt0.c2)OR(rt0.c2)))OR(NULL)))AND(((rt0.c1) ISNULL))))OR(CASE WHEN rt0.c1 THEN rt0.c3 END)))AND(LOWER(DISTINCT rt0.c2))) CROSS JOIN v0 ON x'' WHERE ((((CAST(rt0.c0 AS BLOB)))>=((((((rt0.c2)AND(t0.c0)))AND(rt0.c1)))))) ORDER BY (((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE '0.6826975911463089' END))<(((~ (v0.c0))))) DESC;
SELECT ALL * FROM t0 WHERE ((((((t0.c43)+(t0.c1))))<((x'90f4b5cf'))));
SELECT SUM(count) FROM (SELECT (((((((t0.c43)+(t0.c1))))<((x'90f4b5cf')))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c43)+(t0.c1))))<((x'90f4b5cf'))));
SELECT SUM(count) FROM (SELECT (((((((t0.c43)+(t0.c1))))<((x'90f4b5cf')))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c43)+(t0.c1))))<((x'90f4b5cf'))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN ((v0.c0 IN ())) AND ((~ (v0.c0))))) ORDER BY ((((v0.c0)IS(v0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) BETWEEN ((v0.c0 IN ())) AND ((~ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)IS(v0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN ((v0.c0 IN ())) AND ((~ (v0.c0))))) ORDER BY ((((v0.c0)IS(v0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) BETWEEN ((v0.c0 IN ())) AND ((~ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)IS(v0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN ((v0.c0 IN ())) AND ((~ (v0.c0))))) ORDER BY ((((v0.c0)IS(v0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT * FROM t0, rt1, vt0, v0 WHERE ((~ (CASE rt1.c0  WHEN t0.c1 THEN rt1.c0 END))) ORDER BY (((t0.c1))<((t0.c43))) COLLATE RTRIM DESC  NULLS FIRST, CAST(CASE WHEN t0.c1 THEN rt1.c0 ELSE v0.c0 END AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CASE rt1.c0  WHEN t0.c1 THEN rt1.c0 END))) IS TRUE)  as count FROM t0, rt1, vt0, v0 ORDER BY (((t0.c1))<((t0.c43))) COLLATE RTRIM DESC  NULLS FIRST, CAST(CASE WHEN t0.c1 THEN rt1.c0 ELSE v0.c0 END AS REAL) ASC  NULLS FIRST);
SELECT * FROM t0, rt1, vt0, v0 WHERE ((~ (CASE rt1.c0  WHEN t0.c1 THEN rt1.c0 END))) ORDER BY (((t0.c1))<((t0.c43))) COLLATE RTRIM DESC  NULLS FIRST, CAST(CASE WHEN t0.c1 THEN rt1.c0 ELSE v0.c0 END AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CASE rt1.c0  WHEN t0.c1 THEN rt1.c0 END))) IS TRUE)  as count FROM t0, rt1, vt0, v0 ORDER BY (((t0.c1))<((t0.c43))) COLLATE RTRIM DESC  NULLS FIRST, CAST(CASE WHEN t0.c1 THEN rt1.c0 ELSE v0.c0 END AS REAL) ASC  NULLS FIRST);
SELECT * FROM t0, rt1, vt0, v0 WHERE ((~ (CASE rt1.c0  WHEN t0.c1 THEN rt1.c0 END))) ORDER BY (((t0.c1))<((t0.c43))) COLLATE RTRIM DESC  NULLS FIRST, CAST(CASE WHEN t0.c1 THEN rt1.c0 ELSE v0.c0 END AS REAL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((~ (t0.c0)))AND((t0.c43 IN ()))))OR(CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c0)))AND((t0.c43 IN ()))))OR(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((~ (t0.c0)))AND((t0.c43 IN ()))))OR(CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c0)))AND((t0.c43 IN ()))))OR(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((~ (t0.c0)))AND((t0.c43 IN ()))))OR(CAST(t0.c0 AS BLOB))));
SELECT * FROM rt1, t0, rt0, v0, vt0 WHERE (IFNULL(((rt0.c2)<=(0.9901790549711916)), NULLIF(t0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c2)<=(0.9901790549711916)), NULLIF(t0.c0, vt0.c0))) IS TRUE)  as count FROM rt1, t0, rt0, v0, vt0);
SELECT * FROM rt1, t0, rt0, v0, vt0 WHERE (IFNULL(((rt0.c2)<=(0.9901790549711916)), NULLIF(t0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c2)<=(0.9901790549711916)), NULLIF(t0.c0, vt0.c0))) IS TRUE)  as count FROM rt1, t0, rt0, v0, vt0);
SELECT * FROM rt1, t0, rt0, v0, vt0 WHERE (IFNULL(((rt0.c2)<=(0.9901790549711916)), NULLIF(t0.c0, vt0.c0)));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON ((((v0.c0) IS FALSE))&((t0.c1 IN (t0.c43, rt1.c1)))) CROSS JOIN vt0 ON ((MAX(t0.c1, t0.c0))=(CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END)) CROSS JOIN v0 ON ABS(DISTINCT UNLIKELY(x'')) WHERE (((((vt0.c0)AND(CAST(v0.c0 AS TEXT))))OR((NOT (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(CAST(v0.c0 AS TEXT))))OR((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON ((((v0.c0) IS FALSE))&((t0.c1 IN (t0.c43, rt1.c1)))) CROSS JOIN vt0 ON ((MAX(t0.c1, t0.c0))==(CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END)) CROSS JOIN v0 ON ABS(DISTINCT UNLIKELY(x'')));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON ((((v0.c0) IS FALSE))&((t0.c1 IN (t0.c43, rt1.c1)))) CROSS JOIN vt0 ON ((MAX(t0.c1, t0.c0))=(CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END)) CROSS JOIN v0 ON ABS(DISTINCT UNLIKELY(x'')) WHERE (((((vt0.c0)AND(CAST(v0.c0 AS TEXT))))OR((NOT (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(CAST(v0.c0 AS TEXT))))OR((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON ((((v0.c0) IS FALSE))&((t0.c1 IN (t0.c43, rt1.c1)))) CROSS JOIN vt0 ON ((MAX(t0.c1, t0.c0))==(CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END)) CROSS JOIN v0 ON ABS(DISTINCT UNLIKELY(x'')));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON ((((v0.c0) IS FALSE))&((t0.c1 IN (t0.c43, rt1.c1)))) CROSS JOIN vt0 ON ((MAX(t0.c1, t0.c0))=(CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END)) CROSS JOIN v0 ON ABS(DISTINCT UNLIKELY(x'')) WHERE (((((vt0.c0)AND(CAST(v0.c0 AS TEXT))))OR((NOT (rt1.c1)))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c1 COLLATE BINARY) BETWEEN (((rt1.c0)*(NULL))) AND (0.0015120893456351814)));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY) BETWEEN (((rt1.c0)*(NULL))) AND (0.0015120893456351814))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c1 COLLATE BINARY) BETWEEN (((rt1.c0)*(NULL))) AND (0.0015120893456351814)));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY) BETWEEN (((rt1.c0)*(NULL))) AND (0.0015120893456351814))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c1 COLLATE BINARY) BETWEEN (((rt1.c0)*(NULL))) AND (0.0015120893456351814)));
SELECT ALL COUNT(*) FROM vt0, rt1 NATURAL JOIN t0 WHERE ((((t0.c0, t0.c1, vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, ((rt1.c0)-(rt1.c2)), CASE rt1.c1  WHEN rt1.c0 THEN t0.c1 WHEN NULL THEN rt1.c1 WHEN rt1.c1 THEN t0.c43 WHEN rt1.c1 THEN t0.c1 WHEN t0.c1 THEN rt1.c0 END)) AND ((((t0.c43) BETWEEN (rt1.c2) AND (vt0.c0)), CAST(rt1.c0 AS TEXT), ((t0.c0)OR(t0.c43)))))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))OR(((rt1.c2)IS(t0.c43))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c1, vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, ((rt1.c0)-(rt1.c2)), CASE rt1.c1  WHEN rt1.c0 THEN t0.c1 WHEN NULL THEN rt1.c1 WHEN rt1.c1 THEN t0.c43 WHEN rt1.c1 THEN t0.c1 WHEN t0.c1 THEN rt1.c0 END)) AND ((((t0.c43) BETWEEN (rt1.c2) AND (vt0.c0)), CAST(rt1.c0 AS TEXT), ((t0.c0)OR(t0.c43)))))) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN t0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))OR(((rt1.c2)IS(t0.c43))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 NATURAL JOIN t0 WHERE ((((t0.c0, t0.c1, vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, ((rt1.c0)-(rt1.c2)), CASE rt1.c1  WHEN rt1.c0 THEN t0.c1 WHEN NULL THEN rt1.c1 WHEN rt1.c1 THEN t0.c43 WHEN rt1.c1 THEN t0.c1 WHEN t0.c1 THEN rt1.c0 END)) AND ((((t0.c43) BETWEEN (rt1.c2) AND (vt0.c0)), CAST(rt1.c0 AS TEXT), ((t0.c0)OR(t0.c43)))))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))OR(((rt1.c2)IS(t0.c43))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c1, vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, ((rt1.c0)-(rt1.c2)), CASE rt1.c1  WHEN rt1.c0 THEN t0.c1 WHEN NULL THEN rt1.c1 WHEN rt1.c1 THEN t0.c43 WHEN rt1.c1 THEN t0.c1 WHEN t0.c1 THEN rt1.c0 END)) AND ((((t0.c43) BETWEEN (rt1.c2) AND (vt0.c0)), CAST(rt1.c0 AS TEXT), ((t0.c0)OR(t0.c43)))))) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN t0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))OR(((rt1.c2)IS(t0.c43))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 NATURAL JOIN t0 WHERE ((((t0.c0, t0.c1, vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, ((rt1.c0)-(rt1.c2)), CASE rt1.c1  WHEN rt1.c0 THEN t0.c1 WHEN NULL THEN rt1.c1 WHEN rt1.c1 THEN t0.c43 WHEN rt1.c1 THEN t0.c1 WHEN t0.c1 THEN rt1.c0 END)) AND ((((t0.c43) BETWEEN (rt1.c2) AND (vt0.c0)), CAST(rt1.c0 AS TEXT), ((t0.c0)OR(t0.c43)))))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))OR(((rt1.c2)IS(t0.c43))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT NULL));
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c2 IN (rt0.c0))))<>(((+ (rt0.c0))))) INNER JOIN t0 ON CASE (+ ('0.8880424481391308'))  WHEN ((vt0.c0)&(t0.c1)) THEN ((((t0.c0)OR(rt0.c2)))OR(rt0.c3)) WHEN (+ (NULL)) THEN NULLIF(DISTINCT rt0.c3, vt0.c0) WHEN ((rt0.c3) IS FALSE) THEN ((rt0.c0)<<(vt0.c0)) END WHERE ((NOT (TRIM(DISTINCT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (TRIM(DISTINCT NULL)))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c2 IN (rt0.c0))))<>(((+ (rt0.c0))))) INNER JOIN t0 ON CASE (+ ('0.8880424481391308'))  WHEN ((vt0.c0)&(t0.c1)) THEN ((((t0.c0)OR(rt0.c2)))OR(rt0.c3)) WHEN (+ (NULL)) THEN NULLIF(DISTINCT rt0.c3, vt0.c0) WHEN ((rt0.c3) IS FALSE) THEN ((rt0.c0)<<(vt0.c0)) END);
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c2 IN (rt0.c0))))<>(((+ (rt0.c0))))) INNER JOIN t0 ON CASE (+ ('0.8880424481391308'))  WHEN ((vt0.c0)&(t0.c1)) THEN ((((t0.c0)OR(rt0.c2)))OR(rt0.c3)) WHEN (+ (NULL)) THEN NULLIF(DISTINCT rt0.c3, vt0.c0) WHEN ((rt0.c3) IS FALSE) THEN ((rt0.c0)<<(vt0.c0)) END WHERE ((NOT (TRIM(DISTINCT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (TRIM(DISTINCT NULL)))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c2 IN (rt0.c0))))<>(((+ (rt0.c0))))) INNER JOIN t0 ON CASE (+ ('0.8880424481391308'))  WHEN ((vt0.c0)&(t0.c1)) THEN ((((t0.c0)OR(rt0.c2)))OR(rt0.c3)) WHEN (+ (NULL)) THEN NULLIF(DISTINCT rt0.c3, vt0.c0) WHEN ((rt0.c3) IS FALSE) THEN ((rt0.c0)<<(vt0.c0)) END);
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c2 IN (rt0.c0))))<>(((+ (rt0.c0))))) INNER JOIN t0 ON CASE (+ ('0.8880424481391308'))  WHEN ((vt0.c0)&(t0.c1)) THEN ((((t0.c0)OR(rt0.c2)))OR(rt0.c3)) WHEN (+ (NULL)) THEN NULLIF(DISTINCT rt0.c3, vt0.c0) WHEN ((rt0.c3) IS FALSE) THEN ((rt0.c0)<<(vt0.c0)) END WHERE ((NOT (TRIM(DISTINCT NULL))));
SELECT * FROM v0, t0 WHERE (HEX((((t0.c0))>((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((((t0.c0))>((v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (HEX((((t0.c0))>((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((((t0.c0))>((v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (HEX((((t0.c0))>((v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((- (v0.c0)))) AND ((CASE 0X68403a46  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((- (v0.c0)))) AND ((CASE 0x68403a46  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((- (v0.c0)))) AND ((CASE 0X68403a46  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((- (v0.c0)))) AND ((CASE 0x68403a46  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((- (v0.c0)))) AND ((CASE 0X68403a46  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((TOTAL_CHANGES()) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES()) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((TOTAL_CHANGES()) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES()) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((TOTAL_CHANGES()) IS TRUE));
SELECT * FROM t0, v0 WHERE (-1730422986);
SELECT SUM(count) FROM (SELECT ((-1730422986) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (-1730422986);
SELECT SUM(count) FROM (SELECT ((-1730422986) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (-1730422986);
SELECT ALL COUNT(*) FROM vt0 WHERE (STRFTIME(UPPER('1378759496'), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0));
SELECT SUM(count) FROM (SELECT ((STRFTIME(UPPER('1378759496'), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (STRFTIME(UPPER('1378759496'), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0));
SELECT SUM(count) FROM (SELECT ((STRFTIME(UPPER('1378759496'), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (STRFTIME(UPPER('1378759496'), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0));
SELECT * FROM t0 WHERE (load_extension(((t0.c0)<=(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((t0.c0)<=(t0.c1)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (load_extension(((t0.c0)<=(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((t0.c0)<=(t0.c1)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM rt0, t0, rt1, v0, vt0 WHERE ((((((t0.c43, rt0.c1, rt0.c3)) BETWEEN ((rt0.c0, rt0.c2, rt1.c1)) AND ((rt0.c0, rt0.c0, vt0.c0))))OR(CASE WHEN -276490275 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((t0.c43, rt0.c1, rt0.c3)) BETWEEN ((rt0.c0, rt0.c2, rt1.c1)) AND ((rt0.c0, rt0.c0, vt0.c0))))OR(CASE WHEN -276490275 THEN v0.c0 END))) IS TRUE)  as count FROM rt0, t0, rt1, v0, vt0);
SELECT COUNT(*) FROM rt0, t0, rt1, v0, vt0 WHERE ((((((t0.c43, rt0.c1, rt0.c3)) BETWEEN ((rt0.c0, rt0.c2, rt1.c1)) AND ((rt0.c0, rt0.c0, vt0.c0))))OR(CASE WHEN -276490275 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((t0.c43, rt0.c1, rt0.c3)) BETWEEN ((rt0.c0, rt0.c2, rt1.c1)) AND ((rt0.c0, rt0.c0, vt0.c0))))OR(CASE WHEN -276490275 THEN v0.c0 END))) IS TRUE)  as count FROM rt0, t0, rt1, v0, vt0);
SELECT COUNT(*) FROM rt0, t0, rt1, v0, vt0 WHERE ((((((t0.c43, rt0.c1, rt0.c3)) BETWEEN ((rt0.c0, rt0.c2, rt1.c1)) AND ((rt0.c0, rt0.c0, vt0.c0))))OR(CASE WHEN -276490275 THEN v0.c0 END)));
SELECT ALL * FROM rt1, vt0, rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt1.c2) IS TRUE))) AND ((((rt0.c1)<=(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt1.c2) IS TRUE))) AND ((((rt0.c1)<=(rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0, rt0, v0);
SELECT ALL * FROM rt1, vt0, rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt1.c2) IS TRUE))) AND ((((rt0.c1)<=(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt1.c2) IS TRUE))) AND ((((rt0.c1)<=(rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0, rt0, v0);
SELECT ALL * FROM rt1, vt0, rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt1.c2) IS TRUE))) AND ((((rt0.c1)<=(rt1.c2))))));
SELECT COUNT(*) FROM v0, t0, rt0, vt0 WHERE (((HEX(DISTINCT rt0.c3))OR(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY ((((rt0.c3) IS TRUE))>=(((424291501)<<(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT rt0.c3))OR(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, t0, rt0, vt0 ORDER BY ((((rt0.c3) IS TRUE))>=(((424291501)<<(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, rt0, vt0 WHERE (((HEX(DISTINCT rt0.c3))OR(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY ((((rt0.c3) IS TRUE))>=(((424291501)<<(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT rt0.c3))OR(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, t0, rt0, vt0 ORDER BY ((((rt0.c3) IS TRUE))>=(((424291501)<<(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, rt0, vt0 WHERE (((HEX(DISTINCT rt0.c3))OR(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY ((((rt0.c3) IS TRUE))>=(((424291501)<<(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0, rt1, v0 WHERE (CASE ((rt1.c1) ISNULL)  WHEN (((vt0.c0)) NOT BETWEEN ((t0.c43)) AND ((t0.c1))) THEN (~ (t0.c1)) ELSE rt1.c2 COLLATE NOCASE END) ORDER BY CAST(0.1892408578061031 AS BLOB) DESC, t0.c0 COLLATE BINARY DESC  NULLS FIRST, 327108435 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) ISNULL)  WHEN (((vt0.c0)) NOT BETWEEN ((t0.c43)) AND ((t0.c1))) THEN (~ (t0.c1)) ELSE rt1.c2 COLLATE NOCASE END) IS TRUE)  as count FROM t0, vt0, rt1, v0 ORDER BY CAST(0.1892408578061031 AS BLOB) DESC, t0.c0 COLLATE BINARY DESC  NULLS FIRST, 327108435 DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt1, v0 WHERE (CASE ((rt1.c1) ISNULL)  WHEN (((vt0.c0)) NOT BETWEEN ((t0.c43)) AND ((t0.c1))) THEN (~ (t0.c1)) ELSE rt1.c2 COLLATE NOCASE END) ORDER BY CAST(0.1892408578061031 AS BLOB) DESC, t0.c0 COLLATE BINARY DESC  NULLS FIRST, 327108435 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) ISNULL)  WHEN (((vt0.c0)) NOT BETWEEN ((t0.c43)) AND ((t0.c1))) THEN (~ (t0.c1)) ELSE rt1.c2 COLLATE NOCASE END) IS TRUE)  as count FROM t0, vt0, rt1, v0 ORDER BY CAST(0.1892408578061031 AS BLOB) DESC, t0.c0 COLLATE BINARY DESC  NULLS FIRST, 327108435 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)AND(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)AND(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)AND(v0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, rt1, v0, t0, vt0 WHERE (((((((vt0.c0)AND(rt1.c1)))AND(rt1.c1)))AND(((t0.c43) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c1)))AND(((t0.c43) ISNULL)))) IS TRUE)  as count FROM rt0, rt1, v0, t0, vt0);
SELECT COUNT(*) FROM rt0, rt1, v0, t0, vt0 WHERE (((((((vt0.c0)AND(rt1.c1)))AND(rt1.c1)))AND(((t0.c43) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c1)))AND(((t0.c43) ISNULL)))) IS TRUE)  as count FROM rt0, rt1, v0, t0, vt0);
SELECT COUNT(*) FROM rt0, rt1, v0, t0, vt0 WHERE (((((((vt0.c0)AND(rt1.c1)))AND(rt1.c1)))AND(((t0.c43) ISNULL))));
SELECT COUNT(*) FROM rt1, v0, rt0 LEFT OUTER JOIN t0 ON NULLIF(CAST(vt0.c0 AS REAL), CASE t0.c43  WHEN rt1.c1 THEN rt0.c1 WHEN v0.c0 THEN rt1.c2 WHEN rt0.c3 THEN t0.c1 ELSE rt0.c0 END) CROSS JOIN vt0 ON (+ (((rt1.c0)<<(rt0.c3)))) WHERE (CAST(CASE WHEN t0.c0 THEN rt1.c2 END AS REAL)) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((rt1.c1) NOT NULL) WHEN (rt0.c0 IN ()) THEN rt0.c1 COLLATE RTRIM WHEN (rt1.c1 IN ()) THEN (((('rO\n~Z ')AND(t0.c43)))AND(t0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c0 THEN rt1.c2 END AS REAL)) IS TRUE)  as count FROM rt1, v0, rt0 LEFT OUTER JOIN t0 ON NULLIF(CAST(vt0.c0 AS REAL), CASE t0.c43  WHEN rt1.c1 THEN rt0.c1 WHEN v0.c0 THEN rt1.c2 WHEN rt0.c3 THEN t0.c1 ELSE rt0.c0 END) CROSS JOIN vt0 ON (+ (((rt1.c0)<<(rt0.c3)))) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((rt1.c1) NOT NULL) WHEN (rt0.c0 IN ()) THEN rt0.c1 COLLATE RTRIM WHEN (rt1.c1 IN ()) THEN (((('rO\n~Z ')AND(t0.c43)))AND(t0.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0, rt0 LEFT OUTER JOIN t0 ON NULLIF(CAST(vt0.c0 AS REAL), CASE t0.c43  WHEN rt1.c1 THEN rt0.c1 WHEN v0.c0 THEN rt1.c2 WHEN rt0.c3 THEN t0.c1 ELSE rt0.c0 END) CROSS JOIN vt0 ON (+ (((rt1.c0)<<(rt0.c3)))) WHERE (CAST(CASE WHEN t0.c0 THEN rt1.c2 END AS REAL)) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((rt1.c1) NOT NULL) WHEN (rt0.c0 IN ()) THEN rt0.c1 COLLATE RTRIM WHEN (rt1.c1 IN ()) THEN (((('rO\n~Z ')AND(t0.c43)))AND(t0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c0 THEN rt1.c2 END AS REAL)) IS TRUE)  as count FROM rt1, v0, rt0 LEFT OUTER JOIN t0 ON NULLIF(CAST(vt0.c0 AS REAL), CASE t0.c43  WHEN rt1.c1 THEN rt0.c1 WHEN v0.c0 THEN rt1.c2 WHEN rt0.c3 THEN t0.c1 ELSE rt0.c0 END) CROSS JOIN vt0 ON (+ (((rt1.c0)<<(rt0.c3)))) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((rt1.c1) NOT NULL) WHEN (rt0.c0 IN ()) THEN rt0.c1 COLLATE RTRIM WHEN (rt1.c1 IN ()) THEN (((('rO\n~Z ')AND(t0.c43)))AND(t0.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, v0 NOT INDEXED, rt1 WHERE (rt1.c0) ORDER BY rt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM t0, vt0, v0, rt1 ORDER BY rt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, v0 NOT INDEXED, rt1 WHERE (rt1.c0) ORDER BY rt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM t0, vt0, v0, rt1 ORDER BY rt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, v0 NOT INDEXED, rt1 WHERE (rt1.c0) ORDER BY rt1.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>((vt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>((vt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>((vt0.c0)))) NOTNULL));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON t0.c1 LEFT OUTER JOIN rt1 ON rt1.c1 INNER JOIN v0 ON ((((v0.c0)>=(t0.c0)))||(LOWER(t0.c0))) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON t0.c1 LEFT OUTER JOIN rt1 ON rt1.c1 INNER JOIN v0 ON ((((v0.c0)>=(t0.c0)))||(LOWER(t0.c0))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON t0.c1 LEFT OUTER JOIN rt1 ON rt1.c1 INNER JOIN v0 ON ((((v0.c0)>=(t0.c0)))||(LOWER(t0.c0))) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON t0.c1 LEFT OUTER JOIN rt1 ON rt1.c1 INNER JOIN v0 ON ((((v0.c0)>=(t0.c0)))||(LOWER(t0.c0))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON t0.c1 LEFT OUTER JOIN rt1 ON rt1.c1 INNER JOIN v0 ON ((((v0.c0)>=(t0.c0)))||(LOWER(t0.c0))) WHERE (rt1.c2);
SELECT * FROM rt0, t0, rt1, vt0 WHERE (((((t0.c43)<=(rt1.c2)))>=((vt0.c0 IN ())))) ORDER BY (((- (rt0.c2)))+((NOT ('627192431')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c43)<=(rt1.c2)))>=((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0, rt1, vt0 ORDER BY (((- (rt0.c2)))+((NOT ('627192431')))) ASC  NULLS LAST);
SELECT * FROM rt0, t0, rt1, vt0 WHERE (((((t0.c43)<=(rt1.c2)))>=((vt0.c0 IN ())))) ORDER BY (((- (rt0.c2)))+((NOT ('627192431')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c43)<=(rt1.c2)))>=((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0, rt1, vt0 ORDER BY (((- (rt0.c2)))+((NOT ('627192431')))) ASC  NULLS LAST);
SELECT * FROM rt0, t0, rt1, vt0 WHERE (((((t0.c43)<=(rt1.c2)))>=((vt0.c0 IN ())))) ORDER BY (((- (rt0.c2)))+((NOT ('627192431')))) ASC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c0)<(rt0.c1)) AS TEXT)) ORDER BY (((rt0.c2 IN ()))IS(((rt0.c1)||(rt0.c2)))) DESC  NULLS LAST, rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)<(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2 IN ()))IS(((rt0.c1)||(rt0.c2)))) DESC  NULLS LAST, rt0.c2  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c0)<(rt0.c1)) AS TEXT)) ORDER BY (((rt0.c2 IN ()))IS(((rt0.c1)||(rt0.c2)))) DESC  NULLS LAST, rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)<(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2 IN ()))IS(((rt0.c1)||(rt0.c2)))) DESC  NULLS LAST, rt0.c2  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c0)<(rt0.c1)) AS TEXT)) ORDER BY (((rt0.c2 IN ()))IS(((rt0.c1)||(rt0.c2)))) DESC  NULLS LAST, rt0.c2  NULLS FIRST;
SELECT ALL * FROM rt1, v0, rt0, vt0, t0 WHERE ((rt0.c2 IN ())) ORDER BY (+ ((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt1, v0, rt0, vt0, t0 ORDER BY (+ ((rt0.c2 IN ())))  NULLS LAST);
SELECT ALL * FROM rt1, v0, rt0, vt0, t0 WHERE ((rt0.c2 IN ())) ORDER BY (+ ((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt1, v0, rt0, vt0, t0 ORDER BY (+ ((rt0.c2 IN ())))  NULLS LAST);
SELECT ALL * FROM rt1, v0, rt0, vt0, t0 WHERE ((rt0.c2 IN ())) ORDER BY (+ ((rt0.c2 IN ())))  NULLS LAST;
SELECT ALL * FROM v0, vt0, t0 WHERE (CAST(LIKELY(DISTINCT vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(DISTINCT vt0.c0) AS TEXT)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (CAST(LIKELY(DISTINCT vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(DISTINCT vt0.c0) AS TEXT)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (CAST(LIKELY(DISTINCT vt0.c0) AS TEXT));
SELECT * FROM vt0, t0, rt0 WHERE ((((t0.c0)) NOT BETWEEN (('-1091105109')) AND ((CASE x''  WHEN vt0.c0 THEN t0.c0 ELSE t0.c43 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (('-1091105109')) AND ((CASE x''  WHEN vt0.c0 THEN t0.c0 ELSE t0.c43 END)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((((t0.c0)) NOT BETWEEN (('-1091105109')) AND ((CASE x''  WHEN vt0.c0 THEN t0.c0 ELSE t0.c43 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (('-1091105109')) AND ((CASE x''  WHEN vt0.c0 THEN t0.c0 ELSE t0.c43 END)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((((t0.c0)) NOT BETWEEN (('-1091105109')) AND ((CASE x''  WHEN vt0.c0 THEN t0.c0 ELSE t0.c43 END))));
SELECT ALL COUNT(*) FROM rt1, rt0 INNER JOIN v0 ON ((((((rt1.c0)IS NOT(rt1.c0)))OR(CAST(rt1.c2 AS INTEGER))))OR(rt0.c3 COLLATE RTRIM)) WHERE (load_extension(CAST(NULL AS REAL), NULL)) ORDER BY CAST((((rt1.c0))<>((rt1.c2))) AS NUMERIC), x'' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CAST(NULL AS REAL), NULL)) IS TRUE)  as count FROM rt1, rt0 INNER JOIN v0 ON ((((((rt1.c0)IS NOT(rt1.c0)))OR(CAST(rt1.c2 AS INTEGER))))OR(rt0.c3 COLLATE RTRIM)) ORDER BY CAST((((rt1.c0))<>((rt1.c2))) AS NUMERIC), x'' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, rt0 INNER JOIN v0 ON ((((((rt1.c0)IS NOT(rt1.c0)))OR(CAST(rt1.c2 AS INTEGER))))OR(rt0.c3 COLLATE RTRIM)) WHERE (load_extension(CAST(NULL AS REAL), NULL)) ORDER BY CAST((((rt1.c0))<>((rt1.c2))) AS NUMERIC), x'' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CAST(NULL AS REAL), NULL)) IS TRUE)  as count FROM rt1, rt0 INNER JOIN v0 ON ((((((rt1.c0)IS NOT(rt1.c0)))OR(CAST(rt1.c2 AS INTEGER))))OR(rt0.c3 COLLATE RTRIM)) ORDER BY CAST((((rt1.c0))<>((rt1.c2))) AS NUMERIC), x'' COLLATE RTRIM);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON ((((t0.c0)||(t0.c1))) IS FALSE) LEFT OUTER JOIN v0 ON ((x'') NOT BETWEEN (((rt0.c2)-(rt0.c2))) AND ((- (v0.c0)))) FULL OUTER JOIN t0 ON (((((rt0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))))<>((NOT (t0.c43)))) WHERE (rt0.c3) ORDER BY t0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((t0.c0)||(t0.c1))) IS FALSE) LEFT OUTER JOIN v0 ON ((x'') NOT BETWEEN (((rt0.c2)-(rt0.c2))) AND ((- (v0.c0)))) FULL OUTER JOIN t0 ON (((((rt0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))))!=((NOT (t0.c43)))) ORDER BY t0.c1 ASC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON ((((t0.c0)||(t0.c1))) IS FALSE) LEFT OUTER JOIN v0 ON ((x'') NOT BETWEEN (((rt0.c2)-(rt0.c2))) AND ((- (v0.c0)))) FULL OUTER JOIN t0 ON (((((rt0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))))<>((NOT (t0.c43)))) WHERE (rt0.c3) ORDER BY t0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((t0.c0)||(t0.c1))) IS FALSE) LEFT OUTER JOIN v0 ON ((x'') NOT BETWEEN (((rt0.c2)-(rt0.c2))) AND ((- (v0.c0)))) FULL OUTER JOIN t0 ON (((((rt0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))))!=((NOT (t0.c43)))) ORDER BY t0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((rt1.c2 COLLATE RTRIM) NOT BETWEEN (((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)))OR(0.19319254508313088)))OR(rt1.c2))) AND (((t0.c0)!=(t0.c0))))) ORDER BY (((+ (rt1.c1))) NOTNULL) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM) NOT BETWEEN (((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)))OR(0.19319254508313088)))OR(rt1.c2))) AND (((t0.c0)<>(t0.c0))))) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY (((+ (rt1.c1))) NOTNULL) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((rt1.c2 COLLATE RTRIM) NOT BETWEEN (((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)))OR(0.19319254508313088)))OR(rt1.c2))) AND (((t0.c0)!=(t0.c0))))) ORDER BY (((+ (rt1.c1))) NOTNULL) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM) NOT BETWEEN (((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)))OR(0.19319254508313088)))OR(rt1.c2))) AND (((t0.c0)<>(t0.c0))))) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY (((+ (rt1.c1))) NOTNULL) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((rt1.c2 COLLATE RTRIM) NOT BETWEEN (((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)))OR(0.19319254508313088)))OR(rt1.c2))) AND (((t0.c0)!=(t0.c0))))) ORDER BY (((+ (rt1.c1))) NOTNULL) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt1 ON ((((NULL) ISNULL)) ISNULL) WHERE (((((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)))<(TRIM(rt1.c0, rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)))<(TRIM(rt1.c0, rt1.c1)))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt1 ON ((((NULL) ISNULL)) ISNULL));
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt1 ON ((((NULL) ISNULL)) ISNULL) WHERE (((((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)))<(TRIM(rt1.c0, rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)))<(TRIM(rt1.c0, rt1.c1)))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt1 ON ((((NULL) ISNULL)) ISNULL));
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt1 ON ((((NULL) ISNULL)) ISNULL) WHERE (((((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)))<(TRIM(rt1.c0, rt1.c1))));
SELECT ALL * FROM t0, rt1 FULL OUTER JOIN vt0 ON ((((rt0.c3)>=(t0.c0)))==(((((((((vt0.c0)OR(rt1.c0)))OR(rt0.c0)))OR(v0.c0)))OR(rt0.c1)))) RIGHT OUTER JOIN v0 ON ((vt0.c0)<=(((rt0.c2) NOTNULL))) RIGHT OUTER JOIN rt0 ON (v0.c0 COLLATE NOCASE IN ()) WHERE (((CAST(t0.c1 AS REAL))/(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS REAL))/(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN vt0 ON ((((rt0.c3)>=(t0.c0)))=(((((((((vt0.c0)OR(rt1.c0)))OR(rt0.c0)))OR(v0.c0)))OR(rt0.c1)))) RIGHT OUTER JOIN v0 ON ((vt0.c0)<=(((rt0.c2) NOTNULL))) RIGHT OUTER JOIN rt0 ON (v0.c0 COLLATE NOCASE IN ()));
SELECT ALL * FROM t0, rt1 FULL OUTER JOIN vt0 ON ((((rt0.c3)>=(t0.c0)))==(((((((((vt0.c0)OR(rt1.c0)))OR(rt0.c0)))OR(v0.c0)))OR(rt0.c1)))) RIGHT OUTER JOIN v0 ON ((vt0.c0)<=(((rt0.c2) NOTNULL))) RIGHT OUTER JOIN rt0 ON (v0.c0 COLLATE NOCASE IN ()) WHERE (((CAST(t0.c1 AS REAL))/(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS REAL))/(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN vt0 ON ((((rt0.c3)>=(t0.c0)))=(((((((((vt0.c0)OR(rt1.c0)))OR(rt0.c0)))OR(v0.c0)))OR(rt0.c1)))) RIGHT OUTER JOIN v0 ON ((vt0.c0)<=(((rt0.c2) NOTNULL))) RIGHT OUTER JOIN rt0 ON (v0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM rt0, v0, t0 WHERE ((((t0.c1)>(v0.c0)) IN ())) ORDER BY ((((~ (rt0.c3))))!=((((t0.c43) NOT NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)>(v0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY ((((~ (rt0.c3))))<>((((t0.c43) NOT NULL)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, t0 WHERE ((((t0.c1)>(v0.c0)) IN ())) ORDER BY ((((~ (rt0.c3))))!=((((t0.c43) NOT NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)>(v0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY ((((~ (rt0.c3))))<>((((t0.c43) NOT NULL)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, t0 WHERE ((((t0.c1)>(v0.c0)) IN ())) ORDER BY ((((~ (rt0.c3))))!=((((t0.c43) NOT NULL)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((SQLITE_COMPILEOPTION_GET(t0.c43))>=(t0.c0 COLLATE BINARY))) ORDER BY CASE (((t0.c0))>=((t0.c0)))  WHEN ((((((((((((t0.c0)AND('')))OR(t0.c1)))OR(t0.c43)))OR(t0.c43)))AND(t0.c1)))AND(t0.c43)) THEN (t0.c43 IN (t0.c0)) ELSE ((t0.c43)<=(t0.c43)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(t0.c43))>=(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY CASE (((t0.c0))>=((t0.c0)))  WHEN ((((((((((((t0.c0)AND('')))OR(t0.c1)))OR(t0.c43)))OR(t0.c43)))AND(t0.c1)))AND(t0.c43)) THEN (t0.c43 IN (t0.c0)) ELSE ((t0.c43)<=(t0.c43)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((SQLITE_COMPILEOPTION_GET(t0.c43))>=(t0.c0 COLLATE BINARY))) ORDER BY CASE (((t0.c0))>=((t0.c0)))  WHEN ((((((((((((t0.c0)AND('')))OR(t0.c1)))OR(t0.c43)))OR(t0.c43)))AND(t0.c1)))AND(t0.c43)) THEN (t0.c43 IN (t0.c0)) ELSE ((t0.c43)<=(t0.c43)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(t0.c43))>=(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY CASE (((t0.c0))>=((t0.c0)))  WHEN ((((((((((((t0.c0)AND('')))OR(t0.c1)))OR(t0.c43)))OR(t0.c43)))AND(t0.c1)))AND(t0.c43)) THEN (t0.c43 IN (t0.c0)) ELSE ((t0.c43)<=(t0.c43)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((SQLITE_COMPILEOPTION_GET(t0.c43))>=(t0.c0 COLLATE BINARY))) ORDER BY CASE (((t0.c0))>=((t0.c0)))  WHEN ((((((((((((t0.c0)AND('')))OR(t0.c1)))OR(t0.c43)))OR(t0.c43)))AND(t0.c1)))AND(t0.c43)) THEN (t0.c43 IN (t0.c0)) ELSE ((t0.c43)<=(t0.c43)) END  NULLS LAST;
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, v0.c0)))) NOT BETWEEN (((vt0.c0)+(NULL))) AND (((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, v0.c0)))) NOT BETWEEN (((vt0.c0)+(NULL))) AND (((((vt0.c0)OR(vt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, v0.c0)))) NOT BETWEEN (((vt0.c0)+(NULL))) AND (((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, v0.c0)))) NOT BETWEEN (((vt0.c0)+(NULL))) AND (((((vt0.c0)OR(vt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, v0.c0)))) NOT BETWEEN (((vt0.c0)+(NULL))) AND (((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0, t0, rt1 WHERE (CAST(COALESCE(rt0.c2, rt1.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(rt0.c2, rt1.c0) AS INTEGER)) IS TRUE)  as count FROM v0, rt0, t0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, t0, rt1 WHERE (CAST(COALESCE(rt0.c2, rt1.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(rt0.c2, rt1.c0) AS INTEGER)) IS TRUE)  as count FROM v0, rt0, t0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, t0, rt1 WHERE (CAST(COALESCE(rt0.c2, rt1.c0) AS INTEGER));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((v0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((v0.c0) NOT NULL))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((v0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((v0.c0) NOT NULL))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((v0.c0) NOT NULL)))));
SELECT ALL * FROM rt1, t0, vt0 WHERE ('2013574676');
SELECT SUM(count) FROM (SELECT (('2013574676') IS TRUE)  as count FROM rt1, t0, vt0);
SELECT ALL * FROM rt1, t0, vt0 WHERE ('2013574676');
SELECT SUM(count) FROM (SELECT (('2013574676') IS TRUE)  as count FROM rt1, t0, vt0);
SELECT ALL * FROM rt1, t0, vt0 WHERE ('2013574676');
SELECT ALL * FROM rt1 WHERE (((rt1.c2)/(rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c2)/(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT ALL * FROM rt1 WHERE (((rt1.c2)/(rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c2)/(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT ALL * FROM rt1 WHERE (((rt1.c2)/(rt1.c1)) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0 WHERE (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 2046375009 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 2046375009 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 2046375009 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 2046375009 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 2046375009 END COLLATE NOCASE);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((((t0.c43)OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c0)))AND(t0.c0)))OR(t0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c43)OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c0)))AND(t0.c0)))OR(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((((t0.c43)OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c0)))AND(t0.c0)))OR(t0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c43)OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c0)))AND(t0.c0)))OR(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((((t0.c43)OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c0)))AND(t0.c0)))OR(t0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (((t0.c43)<(0X570701d5))))) ORDER BY ((CAST(t0.c1 AS INTEGER)) BETWEEN (LIKELY(DISTINCT -465077148)) AND (((vt0.c0)/(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c43)<(0X570701d5))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c1 AS INTEGER)) BETWEEN (LIKELY(DISTINCT -465077148)) AND (((vt0.c0)/(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (((t0.c43)<(0X570701d5))))) ORDER BY ((CAST(t0.c1 AS INTEGER)) BETWEEN (LIKELY(DISTINCT -465077148)) AND (((vt0.c0)/(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c43)<(0X570701d5))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c1 AS INTEGER)) BETWEEN (LIKELY(DISTINCT -465077148)) AND (((vt0.c0)/(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (((t0.c43)<(0X570701d5))))) ORDER BY ((CAST(t0.c1 AS INTEGER)) BETWEEN (LIKELY(DISTINCT -465077148)) AND (((vt0.c0)/(vt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE (((((CHANGES())OR(CAST(t0.c43 AS TEXT))))AND(json_object(t0.c1, t0.c1, rt0.c2, t0.c43)))) ORDER BY ((LIKELY(DISTINCT t0.c1)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((t0.c43) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CHANGES())OR(CAST(t0.c43 AS TEXT))))AND(json_object(t0.c1, t0.c1, rt0.c2, t0.c43)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((LIKELY(DISTINCT t0.c1)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((t0.c43) IS FALSE))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((CHANGES())OR(CAST(t0.c43 AS TEXT))))AND(json_object(t0.c1, t0.c1, rt0.c2, t0.c43)))) ORDER BY ((LIKELY(DISTINCT t0.c1)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((t0.c43) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CHANGES())OR(CAST(t0.c43 AS TEXT))))AND(json_object(t0.c1, t0.c1, rt0.c2, t0.c43)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((LIKELY(DISTINCT t0.c1)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((t0.c43) IS FALSE))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, v0, rt1 WHERE ((CAST(rt1.c1 AS REAL) IN ())) ORDER BY ((((((((CAST(t0.c1 AS NUMERIC))OR(UNLIKELY(v0.c0))))OR(((v0.c0)IS NOT(rt1.c1)))))AND(CAST(rt1.c2 AS REAL))))AND(((rt1.c2)OR(rt1.c2))))  NULLS FIRST, (((((rt1.c1)>=(vt0.c0)), ((rt1.c0)%(t0.c43)), (('3]P栣') NOT BETWEEN (t0.c1) AND (t0.c1))))>((rt1.c2 COLLATE RTRIM, json_quote(rt1.c2), (rt1.c1 IN ())))) ASC  NULLS FIRST, ((((((t0.c0)AND(t0.c1)))OR(v0.c0)))>=(LIKELIHOOD(rt1.c1, 0.13594395528718894)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c1 AS REAL) IN ())) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, v0, rt1 ORDER BY ((((((((CAST(t0.c1 AS NUMERIC))OR(UNLIKELY(v0.c0))))OR(((v0.c0)IS NOT(rt1.c1)))))AND(CAST(rt1.c2 AS REAL))))AND(((rt1.c2)OR(rt1.c2))))  NULLS FIRST, (((((rt1.c1)>=(vt0.c0)), ((rt1.c0)%(t0.c43)), (('3]P栣') NOT BETWEEN (t0.c1) AND (t0.c1))))>((rt1.c2 COLLATE RTRIM, json_quote(rt1.c2), (rt1.c1 IN ())))) ASC  NULLS FIRST, ((((((t0.c0)AND(t0.c1)))OR(v0.c0)))>=(LIKELIHOOD(rt1.c1, 0.13594395528718894)))  NULLS LAST);
SELECT ALL * FROM t0, vt0, v0, rt1 WHERE ((CAST(rt1.c1 AS REAL) IN ())) ORDER BY ((((((((CAST(t0.c1 AS NUMERIC))OR(UNLIKELY(v0.c0))))OR(((v0.c0)IS NOT(rt1.c1)))))AND(CAST(rt1.c2 AS REAL))))AND(((rt1.c2)OR(rt1.c2))))  NULLS FIRST, (((((rt1.c1)>=(vt0.c0)), ((rt1.c0)%(t0.c43)), (('3]P栣') NOT BETWEEN (t0.c1) AND (t0.c1))))>((rt1.c2 COLLATE RTRIM, json_quote(rt1.c2), (rt1.c1 IN ())))) ASC  NULLS FIRST, ((((((t0.c0)AND(t0.c1)))OR(v0.c0)))>=(LIKELIHOOD(rt1.c1, 0.13594395528718894)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c1 AS REAL) IN ())) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, v0, rt1 ORDER BY ((((((((CAST(t0.c1 AS NUMERIC))OR(UNLIKELY(v0.c0))))OR(((v0.c0)IS NOT(rt1.c1)))))AND(CAST(rt1.c2 AS REAL))))AND(((rt1.c2)OR(rt1.c2))))  NULLS FIRST, (((((rt1.c1)>=(vt0.c0)), ((rt1.c0)%(t0.c43)), (('3]P栣') NOT BETWEEN (t0.c1) AND (t0.c1))))>((rt1.c2 COLLATE RTRIM, json_quote(rt1.c2), (rt1.c1 IN ())))) ASC  NULLS FIRST, ((((((t0.c0)AND(t0.c1)))OR(v0.c0)))>=(LIKELIHOOD(rt1.c1, 0.13594395528718894)))  NULLS LAST);
SELECT ALL * FROM t0, vt0, v0, rt1 WHERE ((CAST(rt1.c1 AS REAL) IN ())) ORDER BY ((((((((CAST(t0.c1 AS NUMERIC))OR(UNLIKELY(v0.c0))))OR(((v0.c0)IS NOT(rt1.c1)))))AND(CAST(rt1.c2 AS REAL))))AND(((rt1.c2)OR(rt1.c2))))  NULLS FIRST, (((((rt1.c1)>=(vt0.c0)), ((rt1.c0)%(t0.c43)), (('3]P栣') NOT BETWEEN (t0.c1) AND (t0.c1))))>((rt1.c2 COLLATE RTRIM, json_quote(rt1.c2), (rt1.c1 IN ())))) ASC  NULLS FIRST, ((((((t0.c0)AND(t0.c1)))OR(v0.c0)))>=(LIKELIHOOD(rt1.c1, 0.13594395528718894)))  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c2)AND(rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c0 IN (t0.c1, t0.c43)))<=(((t0.c43) BETWEEN (NULL) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c0 IN (t0.c1, t0.c43)))<=(((t0.c43) BETWEEN (NULL) AND (t0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c2)AND(rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c0 IN (t0.c1, t0.c43)))<=(((t0.c43) BETWEEN (NULL) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c0 IN (t0.c1, t0.c43)))<=(((t0.c43) BETWEEN (NULL) AND (t0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c2)AND(rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c0 IN (t0.c1, t0.c43)))<=(((t0.c43) BETWEEN (NULL) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt1, rt0, vt0 WHERE ((((0.7536309168567016)) NOT BETWEEN ((0.2714181863758197 COLLATE RTRIM)) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((0.7536309168567016)) NOT BETWEEN ((0.2714181863758197 COLLATE RTRIM)) AND ((vt0.c0)))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT * FROM rt1, rt0, vt0 WHERE ((((0.7536309168567016)) NOT BETWEEN ((0.2714181863758197 COLLATE RTRIM)) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((0.7536309168567016)) NOT BETWEEN ((0.2714181863758197 COLLATE RTRIM)) AND ((vt0.c0)))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT * FROM rt1, rt0, vt0 WHERE ((((0.7536309168567016)) NOT BETWEEN ((0.2714181863758197 COLLATE RTRIM)) AND ((vt0.c0))));
SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN rt1 ON UNICODE((rt1.c2 IN ())) WHERE (((NULL)>((((t0.c0, rt1.c1, rt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1)) AND ((rt0.c1, rt0.c2, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>((((t0.c0, rt1.c1, rt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1)) AND ((rt0.c1, rt0.c2, t0.c0)))))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN rt1 ON UNICODE((rt1.c2 IN ())));
SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN rt1 ON UNICODE((rt1.c2 IN ())) WHERE (((NULL)>((((t0.c0, rt1.c1, rt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1)) AND ((rt0.c1, rt0.c2, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>((((t0.c0, rt1.c1, rt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1)) AND ((rt0.c1, rt0.c2, t0.c0)))))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN rt1 ON UNICODE((rt1.c2 IN ())));
SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN rt1 ON UNICODE((rt1.c2 IN ())) WHERE (((NULL)>((((t0.c0, rt1.c1, rt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1)) AND ((rt0.c1, rt0.c2, t0.c0))))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (((((((((NOT (v0.c0)))AND(rt1.c2)))AND(NULL)))AND(CASE WHEN rt1.c2 THEN t0.c0 ELSE t0.c43 END)))OR(LIKELY(t0.c43))) INNER JOIN t0 ON ((rt1.c2 IN ()) IN ((((rt1.c1)) NOT BETWEEN ((v0.c0)) AND ((NULL))))) FULL OUTER JOIN rt1 ON (+ (ROUND(rt1.c0, rt0.c1))) WHERE (CASE rt0.c3 COLLATE NOCASE  WHEN t0.c0 THEN (NOT (t0.c0)) END) ORDER BY (((t0.c43)OR(rt1.c1)) IN ()), CAST((((rt1.c1))>((t0.c1))) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3 COLLATE NOCASE  WHEN t0.c0 THEN (NOT (t0.c0)) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((((((((NOT (v0.c0)))AND(rt1.c2)))AND(NULL)))AND(CASE WHEN rt1.c2 THEN t0.c0 ELSE t0.c43 END)))OR(LIKELY(t0.c43))) INNER JOIN t0 ON ((rt1.c2 IN ()) IN ((((rt1.c1)) NOT BETWEEN ((v0.c0)) AND ((NULL))))) FULL OUTER JOIN rt1 ON (+ (ROUND(rt1.c0, rt0.c1))) ORDER BY (((t0.c43)OR(rt1.c1)) IN ()), CAST((((rt1.c1))>((t0.c1))) AS REAL) ASC);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (((((((((NOT (v0.c0)))AND(rt1.c2)))AND(NULL)))AND(CASE WHEN rt1.c2 THEN t0.c0 ELSE t0.c43 END)))OR(LIKELY(t0.c43))) INNER JOIN t0 ON ((rt1.c2 IN ()) IN ((((rt1.c1)) NOT BETWEEN ((v0.c0)) AND ((NULL))))) FULL OUTER JOIN rt1 ON (+ (ROUND(rt1.c0, rt0.c1))) WHERE (CASE rt0.c3 COLLATE NOCASE  WHEN t0.c0 THEN (NOT (t0.c0)) END) ORDER BY (((t0.c43)OR(rt1.c1)) IN ()), CAST((((rt1.c1))>((t0.c1))) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3 COLLATE NOCASE  WHEN t0.c0 THEN (NOT (t0.c0)) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((((((((NOT (v0.c0)))AND(rt1.c2)))AND(NULL)))AND(CASE WHEN rt1.c2 THEN t0.c0 ELSE t0.c43 END)))OR(LIKELY(t0.c43))) INNER JOIN t0 ON ((rt1.c2 IN ()) IN ((((rt1.c1)) NOT BETWEEN ((v0.c0)) AND ((NULL))))) FULL OUTER JOIN rt1 ON (+ (ROUND(rt1.c0, rt0.c1))) ORDER BY (((t0.c43)OR(rt1.c1)) IN ()), CAST((((rt1.c1))>((t0.c1))) AS REAL) ASC);
SELECT ALL * FROM rt1, t0 FULL OUTER JOIN v0 ON ((t0.c43 COLLATE RTRIM) BETWEEN (t0.c43) AND (((t0.c43)<(rt1.c1)))) WHERE ((+ ((NOT (rt1.c2))))) ORDER BY (~ (CAST(t0.c43 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (rt1.c2))))) IS TRUE)  as count FROM rt1, t0 FULL OUTER JOIN v0 ON ((t0.c43 COLLATE RTRIM) BETWEEN (t0.c43) AND (((t0.c43)<(rt1.c1)))) ORDER BY (~ (CAST(t0.c43 AS INTEGER))) DESC);
SELECT ALL * FROM rt1, t0 FULL OUTER JOIN v0 ON ((t0.c43 COLLATE RTRIM) BETWEEN (t0.c43) AND (((t0.c43)<(rt1.c1)))) WHERE ((+ ((NOT (rt1.c2))))) ORDER BY (~ (CAST(t0.c43 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (rt1.c2))))) IS TRUE)  as count FROM rt1, t0 FULL OUTER JOIN v0 ON ((t0.c43 COLLATE RTRIM) BETWEEN (t0.c43) AND (((t0.c43)<(rt1.c1)))) ORDER BY (~ (CAST(t0.c43 AS INTEGER))) DESC);
SELECT ALL * FROM rt1, t0 FULL OUTER JOIN v0 ON ((t0.c43 COLLATE RTRIM) BETWEEN (t0.c43) AND (((t0.c43)<(rt1.c1)))) WHERE ((+ ((NOT (rt1.c2))))) ORDER BY (~ (CAST(t0.c43 AS INTEGER))) DESC;
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))) NOT BETWEEN (0x52113e5c) AND (((rt0.c1)|(vt0.c0))))) ORDER BY (((CASE WHEN rt0.c0 THEN rt0.c2 END))<((((NULL)==(rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))) NOT BETWEEN (0X52113e5c) AND (((rt0.c1)|(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((CASE WHEN rt0.c0 THEN rt0.c2 END))<((((NULL)=(rt0.c1))))) DESC);
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))) NOT BETWEEN (0x52113e5c) AND (((rt0.c1)|(vt0.c0))))) ORDER BY (((CASE WHEN rt0.c0 THEN rt0.c2 END))<((((NULL)==(rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))) NOT BETWEEN (0X52113e5c) AND (((rt0.c1)|(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((CASE WHEN rt0.c0 THEN rt0.c2 END))<((((NULL)=(rt0.c1))))) DESC);
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))) NOT BETWEEN (0x52113e5c) AND (((rt0.c1)|(vt0.c0))))) ORDER BY (((CASE WHEN rt0.c0 THEN rt0.c2 END))<((((NULL)==(rt0.c1))))) DESC;
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) NOTNULL));
SELECT ALL * FROM rt0, vt0, t0, v0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, t0, v0);
SELECT ALL * FROM rt0, vt0, t0, v0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, t0, v0);
SELECT ALL * FROM rt0, vt0, t0, v0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS TEXT));
SELECT ALL COUNT(*) FROM rt1, vt0, t0 NATURAL JOIN rt0 WHERE (rt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, t0 NATURAL JOIN rt0 WHERE (rt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, t0 NATURAL JOIN rt0 WHERE (rt1.c0 COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((CASE rt1.c1  WHEN t0.c1 THEN vt0.c0 WHEN rt1.c0 THEN vt0.c0 WHEN t0.c1 THEN NULL WHEN t0.c43 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE x'' END)IS NOT(((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c1  WHEN t0.c1 THEN vt0.c0 WHEN rt1.c0 THEN vt0.c0 WHEN t0.c1 THEN NULL WHEN t0.c43 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE x'' END)IS NOT(((((rt1.c0)OR(rt1.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((CASE rt1.c1  WHEN t0.c1 THEN vt0.c0 WHEN rt1.c0 THEN vt0.c0 WHEN t0.c1 THEN NULL WHEN t0.c43 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE x'' END)IS NOT(((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c1  WHEN t0.c1 THEN vt0.c0 WHEN rt1.c0 THEN vt0.c0 WHEN t0.c1 THEN NULL WHEN t0.c43 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE x'' END)IS NOT(((((rt1.c0)OR(rt1.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((CASE rt1.c1  WHEN t0.c1 THEN vt0.c0 WHEN rt1.c0 THEN vt0.c0 WHEN t0.c1 THEN NULL WHEN t0.c43 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE x'' END)IS NOT(((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 CROSS JOIN v0 ON ((((('S'))>((t0.c1))))OR(rt1.c1)) INNER JOIN vt0 ON CAST(vt0.c0 COLLATE NOCASE AS NUMERIC) WHERE (((UPPER(DISTINCT rt0.c2)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT rt0.c2)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM t0, rt0, rt1 CROSS JOIN v0 ON ((((('S'))>((t0.c1))))OR(rt1.c1)) INNER JOIN vt0 ON CAST(vt0.c0 COLLATE NOCASE AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 CROSS JOIN v0 ON ((((('S'))>((t0.c1))))OR(rt1.c1)) INNER JOIN vt0 ON CAST(vt0.c0 COLLATE NOCASE AS NUMERIC) WHERE (((UPPER(DISTINCT rt0.c2)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT rt0.c2)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM t0, rt0, rt1 CROSS JOIN v0 ON ((((('S'))>((t0.c1))))OR(rt1.c1)) INNER JOIN vt0 ON CAST(vt0.c0 COLLATE NOCASE AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 CROSS JOIN v0 ON ((((('S'))>((t0.c1))))OR(rt1.c1)) INNER JOIN vt0 ON CAST(vt0.c0 COLLATE NOCASE AS NUMERIC) WHERE (((UPPER(DISTINCT rt0.c2)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(rt0.c3 AS REAL))));
SELECT COUNT(*) FROM v0, rt0, t0, rt1 WHERE ((((rt1.c1, rt0.c1, rt1.c1)) NOT BETWEEN ((CAST(t0.c43 AS NUMERIC), (- ('')), LIKELY(rt0.c3))) AND ((rt0.c1, CAST(v0.c0 AS BLOB), t0.c43)))) ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt0.c1, rt1.c1)) NOT BETWEEN ((CAST(t0.c43 AS NUMERIC), (- ('')), LIKELY(rt0.c3))) AND ((rt0.c1, CAST(v0.c0 AS BLOB), t0.c43)))) IS TRUE)  as count FROM v0, rt0, t0, rt1 ORDER BY TOTAL_CHANGES());
SELECT COUNT(*) FROM v0, rt0, t0, rt1 WHERE ((((rt1.c1, rt0.c1, rt1.c1)) NOT BETWEEN ((CAST(t0.c43 AS NUMERIC), (- ('')), LIKELY(rt0.c3))) AND ((rt0.c1, CAST(v0.c0 AS BLOB), t0.c43)))) ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt0.c1, rt1.c1)) NOT BETWEEN ((CAST(t0.c43 AS NUMERIC), (- ('')), LIKELY(rt0.c3))) AND ((rt0.c1, CAST(v0.c0 AS BLOB), t0.c43)))) IS TRUE)  as count FROM v0, rt0, t0, rt1 ORDER BY TOTAL_CHANGES());
SELECT COUNT(*) FROM v0, rt0, t0, rt1 WHERE ((((rt1.c1, rt0.c1, rt1.c1)) NOT BETWEEN ((CAST(t0.c43 AS NUMERIC), (- ('')), LIKELY(rt0.c3))) AND ((rt0.c1, CAST(v0.c0 AS BLOB), t0.c43)))) ORDER BY TOTAL_CHANGES();
SELECT COUNT(*) FROM vt0, rt1 NATURAL JOIN v0 WHERE (CASE ((rt1.c1)<<(rt1.c2))  WHEN (rt1.c1 IN (vt0.c0)) THEN (- (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1)<<(rt1.c2))  WHEN (rt1.c1 IN (vt0.c0)) THEN (- (rt1.c0)) END) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0, rt1 NATURAL JOIN v0 WHERE (CASE ((rt1.c1)<<(rt1.c2))  WHEN (rt1.c1 IN (vt0.c0)) THEN (- (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1)<<(rt1.c2))  WHEN (rt1.c1 IN (vt0.c0)) THEN (- (rt1.c0)) END) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0, rt1 NATURAL JOIN v0 WHERE (CASE ((rt1.c1)<<(rt1.c2))  WHEN (rt1.c1 IN (vt0.c0)) THEN (- (rt1.c0)) END);
SELECT * FROM rt1, vt0, t0 WHERE (((vt0.c0)>(((t0.c43)||(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(((t0.c43)||(t0.c1))))) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT * FROM rt1, vt0, t0 WHERE (((vt0.c0)>(((t0.c43)||(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(((t0.c43)||(t0.c1))))) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT * FROM rt1, vt0, t0 WHERE (((vt0.c0)>(((t0.c43)||(t0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (1.069661021E9) AND (((rt0.c3)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (1.069661021E9) AND (((rt0.c3)%(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (1.069661021E9) AND (((rt0.c3)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (1.069661021E9) AND (((rt0.c3)%(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (1.069661021E9) AND (((rt0.c3)%(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (UPPER((rt1.c0 IN (rt0.c1)))) ORDER BY ((((((rt1.c0) IS FALSE))AND(rt1.c2)))OR((- (t0.c0))))  NULLS FIRST, CASE (((rt1.c2))!=((rt0.c0)))  WHEN CAST(rt0.c0 AS TEXT) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1)AND(rt0.c3)) THEN ((0Xffffffff911741a5)*(t0.c43)) WHEN '1674922048' THEN rt1.c0 END, CAST(0.04307374215198123 AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((rt1.c0 IN (rt0.c1)))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((((rt1.c0) IS FALSE))AND(rt1.c2)))OR((- (t0.c0))))  NULLS FIRST, CASE (((rt1.c2))!=((rt0.c0)))  WHEN CAST(rt0.c0 AS TEXT) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1)AND(rt0.c3)) THEN ((0Xffffffff911741a5)*(t0.c43)) WHEN '1674922048' THEN rt1.c0 END, CAST(0.04307374215198123 AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (UPPER((rt1.c0 IN (rt0.c1)))) ORDER BY ((((((rt1.c0) IS FALSE))AND(rt1.c2)))OR((- (t0.c0))))  NULLS FIRST, CASE (((rt1.c2))!=((rt0.c0)))  WHEN CAST(rt0.c0 AS TEXT) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1)AND(rt0.c3)) THEN ((0Xffffffff911741a5)*(t0.c43)) WHEN '1674922048' THEN rt1.c0 END, CAST(0.04307374215198123 AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((rt1.c0 IN (rt0.c1)))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((((rt1.c0) IS FALSE))AND(rt1.c2)))OR((- (t0.c0))))  NULLS FIRST, CASE (((rt1.c2))!=((rt0.c0)))  WHEN CAST(rt0.c0 AS TEXT) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1)AND(rt0.c3)) THEN ((0Xffffffff911741a5)*(t0.c43)) WHEN '1674922048' THEN rt1.c0 END, CAST(0.04307374215198123 AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (UPPER((rt1.c0 IN (rt0.c1)))) ORDER BY ((((((rt1.c0) IS FALSE))AND(rt1.c2)))OR((- (t0.c0))))  NULLS FIRST, CASE (((rt1.c2))!=((rt0.c0)))  WHEN CAST(rt0.c0 AS TEXT) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1)AND(rt0.c3)) THEN ((0Xffffffff911741a5)*(t0.c43)) WHEN '1674922048' THEN rt1.c0 END, CAST(0.04307374215198123 AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt1, v0 WHERE ((((((((((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))AND(NULL)))AND((t0.c43 IN ()))))OR((t0.c1 IN ()))))AND(NULL)));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))AND(NULL)))AND((t0.c43 IN ()))))OR((t0.c1 IN ()))))AND(NULL))) IS TRUE)  as count FROM t0, rt1, v0);
SELECT ALL * FROM t0, rt1, v0 WHERE ((((((((((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))AND(NULL)))AND((t0.c43 IN ()))))OR((t0.c1 IN ()))))AND(NULL)));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))AND(NULL)))AND((t0.c43 IN ()))))OR((t0.c1 IN ()))))AND(NULL))) IS TRUE)  as count FROM t0, rt1, v0);
SELECT ALL * FROM t0, rt1, v0 WHERE ((((((((((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))AND(NULL)))AND((t0.c43 IN ()))))OR((t0.c1 IN ()))))AND(NULL)));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON rt0.c0 FULL OUTER JOIN rt0 ON 'vb2?U-\n쓺쇼' WHERE (((0.6952892914117427)%((t0.c43 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((0.6952892914117427)%((t0.c43 IN ())))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON rt0.c0 FULL OUTER JOIN rt0 ON 'vb2?U-\n쓺쇼');
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON rt0.c0 FULL OUTER JOIN rt0 ON 'vb2?U-\n쓺쇼' WHERE (((0.6952892914117427)%((t0.c43 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((0.6952892914117427)%((t0.c43 IN ())))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON rt0.c0 FULL OUTER JOIN rt0 ON 'vb2?U-\n쓺쇼');
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((CAST(rt1.c0 AS TEXT))OR((~ (v0.c0)))) LEFT OUTER JOIN rt1 ON CASE WHEN ((t0.c0)OR('0.3815053330431738')) THEN CAST(rt1.c2 AS NUMERIC) ELSE CAST(rt0.c3 AS INTEGER) END CROSS JOIN v0 ON ((((TYPEOF(rt1.c2))OR(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(rt0.c3)) FULL OUTER JOIN vt0 ON ((((rt1.c1)%(rt0.c0))) BETWEEN (((((x'')AND(v0.c0)))OR(rt1.c2))) AND (CAST(vt0.c0 AS INTEGER))) WHERE (((((((rt0.c2)OR(t0.c0)))OR(rt0.c0)))AND(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(t0.c0)))OR(rt0.c0)))AND(t0.c1))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((CAST(rt1.c0 AS TEXT))OR((~ (v0.c0)))) LEFT OUTER JOIN rt1 ON CASE WHEN ((t0.c0)OR('0.3815053330431738')) THEN CAST(rt1.c2 AS NUMERIC) ELSE CAST(rt0.c3 AS INTEGER) END CROSS JOIN v0 ON ((((TYPEOF(rt1.c2))OR(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(rt0.c3)) FULL OUTER JOIN vt0 ON ((((rt1.c1)%(rt0.c0))) BETWEEN (((((x'')AND(v0.c0)))OR(rt1.c2))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((CAST(rt1.c0 AS TEXT))OR((~ (v0.c0)))) LEFT OUTER JOIN rt1 ON CASE WHEN ((t0.c0)OR('0.3815053330431738')) THEN CAST(rt1.c2 AS NUMERIC) ELSE CAST(rt0.c3 AS INTEGER) END CROSS JOIN v0 ON ((((TYPEOF(rt1.c2))OR(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(rt0.c3)) FULL OUTER JOIN vt0 ON ((((rt1.c1)%(rt0.c0))) BETWEEN (((((x'')AND(v0.c0)))OR(rt1.c2))) AND (CAST(vt0.c0 AS INTEGER))) WHERE (((((((rt0.c2)OR(t0.c0)))OR(rt0.c0)))AND(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(t0.c0)))OR(rt0.c0)))AND(t0.c1))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((CAST(rt1.c0 AS TEXT))OR((~ (v0.c0)))) LEFT OUTER JOIN rt1 ON CASE WHEN ((t0.c0)OR('0.3815053330431738')) THEN CAST(rt1.c2 AS NUMERIC) ELSE CAST(rt0.c3 AS INTEGER) END CROSS JOIN v0 ON ((((TYPEOF(rt1.c2))OR(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(rt0.c3)) FULL OUTER JOIN vt0 ON ((((rt1.c1)%(rt0.c0))) BETWEEN (((((x'')AND(v0.c0)))OR(rt1.c2))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM v0, rt0 NOT INDEXED, rt1, t0, vt0 WHERE (CAST(t0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 AS TEXT)) IS TRUE)  as count FROM v0, rt0, rt1, t0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0 NOT INDEXED, rt1, t0, vt0 WHERE (CAST(t0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 AS TEXT)) IS TRUE)  as count FROM v0, rt0, rt1, t0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0 NOT INDEXED, rt1, t0, vt0 WHERE (CAST(t0.c1 AS TEXT));
SELECT ALL * FROM v0, rt0 WHERE (((TYPEOF(rt0.c2))>>(((((rt0.c1)OR(rt0.c2)))OR(v0.c0))))) ORDER BY CAST((~ (rt0.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt0.c2))>>(((((rt0.c1)OR(rt0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((~ (rt0.c1)) AS TEXT));
SELECT ALL * FROM v0, rt0 WHERE (((TYPEOF(rt0.c2))>>(((((rt0.c1)OR(rt0.c2)))OR(v0.c0))))) ORDER BY CAST((~ (rt0.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt0.c2))>>(((((rt0.c1)OR(rt0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((~ (rt0.c1)) AS TEXT));
SELECT ALL * FROM v0, rt0 WHERE (((TYPEOF(rt0.c2))>>(((((rt0.c1)OR(rt0.c2)))OR(v0.c0))))) ORDER BY CAST((~ (rt0.c1)) AS TEXT);
SELECT ALL COUNT(*) FROM t0, rt0, v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c43 THEN t0.c1 WHEN rt0.c0 THEN t0.c43 WHEN t0.c43 THEN v0.c0 END)==(CASE NULL  WHEN rt0.c2 THEN t0.c43 ELSE rt0.c2 END)) FULL OUTER JOIN rt1 ON ((rt1.c0 COLLATE RTRIM)LIKE((((rt1.c1))<>((rt1.c0))))) WHERE (CASE UPPER(rt1.c1)  WHEN 0.014306156293499961 THEN (((t0.c43)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c2))) ELSE 0.6266606998293972 END) ORDER BY '-T轩ipWkL}';
SELECT SUM(count) FROM (SELECT ((CASE UPPER(rt1.c1)  WHEN 0.014306156293499961 THEN (((t0.c43)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c2))) ELSE 0.6266606998293972 END) IS TRUE)  as count FROM t0, rt0, v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c43 THEN t0.c1 WHEN rt0.c0 THEN t0.c43 WHEN t0.c43 THEN v0.c0 END)==(CASE NULL  WHEN rt0.c2 THEN t0.c43 ELSE rt0.c2 END)) FULL OUTER JOIN rt1 ON ((rt1.c0 COLLATE RTRIM)LIKE((((rt1.c1))!=((rt1.c0))))) ORDER BY '-T轩ipWkL}');
SELECT ALL COUNT(*) FROM t0, rt0, v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c43 THEN t0.c1 WHEN rt0.c0 THEN t0.c43 WHEN t0.c43 THEN v0.c0 END)==(CASE NULL  WHEN rt0.c2 THEN t0.c43 ELSE rt0.c2 END)) FULL OUTER JOIN rt1 ON ((rt1.c0 COLLATE RTRIM)LIKE((((rt1.c1))<>((rt1.c0))))) WHERE (CASE UPPER(rt1.c1)  WHEN 0.014306156293499961 THEN (((t0.c43)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c2))) ELSE 0.6266606998293972 END) ORDER BY '-T轩ipWkL}';
SELECT SUM(count) FROM (SELECT ((CASE UPPER(rt1.c1)  WHEN 0.014306156293499961 THEN (((t0.c43)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c2))) ELSE 0.6266606998293972 END) IS TRUE)  as count FROM t0, rt0, v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c43 THEN t0.c1 WHEN rt0.c0 THEN t0.c43 WHEN t0.c43 THEN v0.c0 END)==(CASE NULL  WHEN rt0.c2 THEN t0.c43 ELSE rt0.c2 END)) FULL OUTER JOIN rt1 ON ((rt1.c0 COLLATE RTRIM)LIKE((((rt1.c1))!=((rt1.c0))))) ORDER BY '-T轩ipWkL}');
SELECT ALL COUNT(*) FROM t0, rt0, v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c43 THEN t0.c1 WHEN rt0.c0 THEN t0.c43 WHEN t0.c43 THEN v0.c0 END)==(CASE NULL  WHEN rt0.c2 THEN t0.c43 ELSE rt0.c2 END)) FULL OUTER JOIN rt1 ON ((rt1.c0 COLLATE RTRIM)LIKE((((rt1.c1))<>((rt1.c0))))) WHERE (CASE UPPER(rt1.c1)  WHEN 0.014306156293499961 THEN (((t0.c43)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c2))) ELSE 0.6266606998293972 END) ORDER BY '-T轩ipWkL}';
SELECT ALL * FROM rt1 LEFT OUTER JOIN v0 ON ((rt0.c0) BETWEEN (t0.c1) AND (t0.c43)) COLLATE RTRIM COLLATE BINARY CROSS JOIN t0 ON ((((((rt0.c2, v0.c0, t0.c1))<=((t0.c1, rt1.c2, rt0.c3)))))<>((((((rt0.c3)OR(v0.c0)))OR(rt0.c2))))) LEFT OUTER JOIN rt0 ON (((((-1.051411726E9) NOT BETWEEN (rt1.c1) AND (rt1.c1))))>(((((('928106342')OR(rt0.c0)))OR(v0.c0))))) CROSS JOIN vt0 ON t0.c43 WHERE (CASE (((rt1.c1))<((rt0.c0)))  WHEN CASE WHEN t0.c0 THEN t0.c43 ELSE rt0.c2 END THEN rt1.c1 ELSE (~ (t0.c0)) END) ORDER BY 0.6383448120386483 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((rt1.c1))<((rt0.c0)))  WHEN CASE WHEN t0.c0 THEN t0.c43 ELSE rt0.c2 END THEN rt1.c1 ELSE (~ (t0.c0)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((rt0.c0) BETWEEN (t0.c1) AND (t0.c43)) COLLATE RTRIM COLLATE BINARY CROSS JOIN t0 ON ((((((rt0.c2, v0.c0, t0.c1))<=((t0.c1, rt1.c2, rt0.c3)))))<>((((((rt0.c3)OR(v0.c0)))OR(rt0.c2))))) LEFT OUTER JOIN rt0 ON (((((-1.051411726E9) NOT BETWEEN (rt1.c1) AND (rt1.c1))))>(((((('928106342')OR(rt0.c0)))OR(v0.c0))))) CROSS JOIN vt0 ON t0.c43 ORDER BY 0.6383448120386483 ASC  NULLS FIRST);
SELECT ALL * FROM rt1 LEFT OUTER JOIN v0 ON ((rt0.c0) BETWEEN (t0.c1) AND (t0.c43)) COLLATE RTRIM COLLATE BINARY CROSS JOIN t0 ON ((((((rt0.c2, v0.c0, t0.c1))<=((t0.c1, rt1.c2, rt0.c3)))))<>((((((rt0.c3)OR(v0.c0)))OR(rt0.c2))))) LEFT OUTER JOIN rt0 ON (((((-1.051411726E9) NOT BETWEEN (rt1.c1) AND (rt1.c1))))>(((((('928106342')OR(rt0.c0)))OR(v0.c0))))) CROSS JOIN vt0 ON t0.c43 WHERE (CASE (((rt1.c1))<((rt0.c0)))  WHEN CASE WHEN t0.c0 THEN t0.c43 ELSE rt0.c2 END THEN rt1.c1 ELSE (~ (t0.c0)) END) ORDER BY 0.6383448120386483 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((rt1.c1))<((rt0.c0)))  WHEN CASE WHEN t0.c0 THEN t0.c43 ELSE rt0.c2 END THEN rt1.c1 ELSE (~ (t0.c0)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((rt0.c0) BETWEEN (t0.c1) AND (t0.c43)) COLLATE RTRIM COLLATE BINARY CROSS JOIN t0 ON ((((((rt0.c2, v0.c0, t0.c1))<=((t0.c1, rt1.c2, rt0.c3)))))<>((((((rt0.c3)OR(v0.c0)))OR(rt0.c2))))) LEFT OUTER JOIN rt0 ON (((((-1.051411726E9) NOT BETWEEN (rt1.c1) AND (rt1.c1))))>(((((('928106342')OR(rt0.c0)))OR(v0.c0))))) CROSS JOIN vt0 ON t0.c43 ORDER BY 0.6383448120386483 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1, vt0, t0 WHERE ((((t0.c43)<=(vt0.c0)) IN ())) ORDER BY (((CAST(t0.c1 AS REAL)))=((((((((((rt1.c0)AND(t0.c1)))AND(v0.c0)))AND(0.25826679615946013)))AND(0X1cb24c84))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c43)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt1, vt0, t0 ORDER BY (((CAST(t0.c1 AS REAL)))=((((((((((rt1.c0)AND(t0.c1)))AND(v0.c0)))AND(0.25826679615946013)))AND(0x1cb24c84))))) DESC);
SELECT COUNT(*) FROM v0, rt1, vt0, t0 WHERE ((((t0.c43)<=(vt0.c0)) IN ())) ORDER BY (((CAST(t0.c1 AS REAL)))=((((((((((rt1.c0)AND(t0.c1)))AND(v0.c0)))AND(0.25826679615946013)))AND(0X1cb24c84))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c43)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt1, vt0, t0 ORDER BY (((CAST(t0.c1 AS REAL)))=((((((((((rt1.c0)AND(t0.c1)))AND(v0.c0)))AND(0.25826679615946013)))AND(0x1cb24c84))))) DESC);
SELECT COUNT(*) FROM v0, rt1, vt0, t0 WHERE ((((t0.c43)<=(vt0.c0)) IN ())) ORDER BY (((CAST(t0.c1 AS REAL)))=((((((((((rt1.c0)AND(t0.c1)))AND(v0.c0)))AND(0.25826679615946013)))AND(0X1cb24c84))))) DESC;
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM) ORDER BY ((0.730412817435034) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((0.730412817435034) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM) ORDER BY ((0.730412817435034) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((0.730412817435034) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM) ORDER BY ((0.730412817435034) IS TRUE) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c43) ORDER BY ((t0.c0 COLLATE RTRIM) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((t0.c43) IS TRUE)  as count FROM vt0, t0 NOT INDEXED ORDER BY ((t0.c0 COLLATE RTRIM) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c43) ORDER BY ((t0.c0 COLLATE RTRIM) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((t0.c43) IS TRUE)  as count FROM vt0, t0 NOT INDEXED ORDER BY ((t0.c0 COLLATE RTRIM) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c43) ORDER BY ((t0.c0 COLLATE RTRIM) NOTNULL);
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED, t0 WHERE ((~ (((((vt0.c0)OR(x'')))AND(rt0.c1))))) ORDER BY 0xffffffffc887e115 DESC  NULLS FIRST, ((((NULL)IS NOT(t0.c43))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)OR(x'')))AND(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY 0Xffffffffc887e115 DESC  NULLS FIRST, ((((NULL)IS NOT(t0.c43))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED, t0 WHERE ((~ (((((vt0.c0)OR(x'')))AND(rt0.c1))))) ORDER BY 0xffffffffc887e115 DESC  NULLS FIRST, ((((NULL)IS NOT(t0.c43))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)OR(x'')))AND(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY 0Xffffffffc887e115 DESC  NULLS FIRST, ((((NULL)IS NOT(t0.c43))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED, t0 WHERE ((~ (((((vt0.c0)OR(x'')))AND(rt0.c1))))) ORDER BY 0xffffffffc887e115 DESC  NULLS FIRST, ((((NULL)IS NOT(t0.c43))) NOT NULL)  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (CAST((- (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST((- (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST((- (vt0.c0)) AS NUMERIC));
SELECT * FROM rt0, v0, vt0 WHERE (CAST(((rt0.c1)IS NOT(v0.c0)) AS TEXT)) ORDER BY CASE WHEN NULLIF(DISTINCT v0.c0, rt0.c2) THEN (rt0.c1 IN ()) WHEN (rt0.c1 IN (0.6004417890679814)) THEN ((rt0.c2)<=(-1937088148)) WHEN ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c3)) THEN rt0.c0 END DESC  NULLS LAST, rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)IS NOT(v0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE WHEN NULLIF(DISTINCT v0.c0, rt0.c2) THEN (rt0.c1 IN ()) WHEN (rt0.c1 IN (0.6004417890679814)) THEN ((rt0.c2)<=(-1937088148)) WHEN ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c3)) THEN rt0.c0 END DESC  NULLS LAST, rt0.c2 ASC  NULLS LAST);
SELECT * FROM rt0, v0, vt0 WHERE (CAST(((rt0.c1)IS NOT(v0.c0)) AS TEXT)) ORDER BY CASE WHEN NULLIF(DISTINCT v0.c0, rt0.c2) THEN (rt0.c1 IN ()) WHEN (rt0.c1 IN (0.6004417890679814)) THEN ((rt0.c2)<=(-1937088148)) WHEN ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c3)) THEN rt0.c0 END DESC  NULLS LAST, rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)IS NOT(v0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE WHEN NULLIF(DISTINCT v0.c0, rt0.c2) THEN (rt0.c1 IN ()) WHEN (rt0.c1 IN (0.6004417890679814)) THEN ((rt0.c2)<=(-1937088148)) WHEN ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c3)) THEN rt0.c0 END DESC  NULLS LAST, rt0.c2 ASC  NULLS LAST);
SELECT * FROM rt0, v0, vt0 WHERE (CAST(((rt0.c1)IS NOT(v0.c0)) AS TEXT)) ORDER BY CASE WHEN NULLIF(DISTINCT v0.c0, rt0.c2) THEN (rt0.c1 IN ()) WHEN (rt0.c1 IN (0.6004417890679814)) THEN ((rt0.c2)<=(-1937088148)) WHEN ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c3)) THEN rt0.c0 END DESC  NULLS LAST, rt0.c2 ASC  NULLS LAST;
SELECT * FROM vt0, t0, rt1, v0 WHERE (CASE ((NULL) NOT BETWEEN (rt1.c0) AND (t0.c1))  WHEN x'1504' THEN CAST(rt1.c0 AS TEXT) ELSE rt1.c1 END) ORDER BY ((LENGTH(t0.c43)) BETWEEN (rt1.c2 COLLATE BINARY) AND (((v0.c0) NOT NULL)))  NULLS LAST, CAST(rt1.c2 AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL) NOT BETWEEN (rt1.c0) AND (t0.c1))  WHEN x'1504' THEN CAST(rt1.c0 AS TEXT) ELSE rt1.c1 END) IS TRUE)  as count FROM vt0, t0, rt1, v0 ORDER BY ((LENGTH(t0.c43)) BETWEEN (rt1.c2 COLLATE BINARY) AND (((v0.c0) NOT NULL)))  NULLS LAST, CAST(rt1.c2 AS NUMERIC));
SELECT * FROM vt0, t0, rt1, v0 WHERE (CASE ((NULL) NOT BETWEEN (rt1.c0) AND (t0.c1))  WHEN x'1504' THEN CAST(rt1.c0 AS TEXT) ELSE rt1.c1 END) ORDER BY ((LENGTH(t0.c43)) BETWEEN (rt1.c2 COLLATE BINARY) AND (((v0.c0) NOT NULL)))  NULLS LAST, CAST(rt1.c2 AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL) NOT BETWEEN (rt1.c0) AND (t0.c1))  WHEN x'1504' THEN CAST(rt1.c0 AS TEXT) ELSE rt1.c1 END) IS TRUE)  as count FROM vt0, t0, rt1, v0 ORDER BY ((LENGTH(t0.c43)) BETWEEN (rt1.c2 COLLATE BINARY) AND (((v0.c0) NOT NULL)))  NULLS LAST, CAST(rt1.c2 AS NUMERIC));
SELECT * FROM vt0, t0, rt1, v0 WHERE (CASE ((NULL) NOT BETWEEN (rt1.c0) AND (t0.c1))  WHEN x'1504' THEN CAST(rt1.c0 AS TEXT) ELSE rt1.c1 END) ORDER BY ((LENGTH(t0.c43)) BETWEEN (rt1.c2 COLLATE BINARY) AND (((v0.c0) NOT NULL)))  NULLS LAST, CAST(rt1.c2 AS NUMERIC);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(-2092159658)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(-2092159658))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(-2092159658)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(-2092159658))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(-2092159658)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'30ab');
SELECT SUM(count) FROM (SELECT ((x'30ab') IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'30ab');
SELECT SUM(count) FROM (SELECT ((x'30ab') IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'30ab');
SELECT ALL COUNT(*) FROM rt1, v0, rt0 FULL OUTER JOIN t0 ON (((rt0.c1))==((((rt0.c0)OR(rt1.c2))))) RIGHT OUTER JOIN vt0 ON CASE ((v0.c0)*(rt1.c1))  WHEN (('䔋F') BETWEEN (t0.c0) AND (rt0.c3)) THEN v0.c0 COLLATE RTRIM END WHERE (((((v0.c0)+(v0.c0))) IS FALSE)) ORDER BY CASE WHEN ((rt1.c1)/(t0.c0)) THEN LOWER(DISTINCT rt0.c3) WHEN ((rt1.c0)IS NOT(t0.c0)) THEN ((rt0.c0) NOT NULL) WHEN ((t0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) THEN t0.c1 COLLATE BINARY END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(v0.c0))) IS FALSE)) IS TRUE)  as count FROM rt1, v0, rt0 FULL OUTER JOIN t0 ON (((rt0.c1))==((((rt0.c0)OR(rt1.c2))))) RIGHT OUTER JOIN vt0 ON CASE ((v0.c0)*(rt1.c1))  WHEN (('䔋F') BETWEEN (t0.c0) AND (rt0.c3)) THEN v0.c0 COLLATE RTRIM END ORDER BY CASE WHEN ((rt1.c1)/(t0.c0)) THEN LOWER(DISTINCT rt0.c3) WHEN ((rt1.c0)IS NOT(t0.c0)) THEN ((rt0.c0) NOT NULL) WHEN ((t0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) THEN t0.c1 COLLATE BINARY END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 FULL OUTER JOIN t0 ON (((rt0.c1))==((((rt0.c0)OR(rt1.c2))))) RIGHT OUTER JOIN vt0 ON CASE ((v0.c0)*(rt1.c1))  WHEN (('䔋F') BETWEEN (t0.c0) AND (rt0.c3)) THEN v0.c0 COLLATE RTRIM END WHERE (((((v0.c0)+(v0.c0))) IS FALSE)) ORDER BY CASE WHEN ((rt1.c1)/(t0.c0)) THEN LOWER(DISTINCT rt0.c3) WHEN ((rt1.c0)IS NOT(t0.c0)) THEN ((rt0.c0) NOT NULL) WHEN ((t0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) THEN t0.c1 COLLATE BINARY END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(v0.c0))) IS FALSE)) IS TRUE)  as count FROM rt1, v0, rt0 FULL OUTER JOIN t0 ON (((rt0.c1))==((((rt0.c0)OR(rt1.c2))))) RIGHT OUTER JOIN vt0 ON CASE ((v0.c0)*(rt1.c1))  WHEN (('䔋F') BETWEEN (t0.c0) AND (rt0.c3)) THEN v0.c0 COLLATE RTRIM END ORDER BY CASE WHEN ((rt1.c1)/(t0.c0)) THEN LOWER(DISTINCT rt0.c3) WHEN ((rt1.c0)IS NOT(t0.c0)) THEN ((rt0.c0) NOT NULL) WHEN ((t0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) THEN t0.c1 COLLATE BINARY END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 FULL OUTER JOIN t0 ON (((rt0.c1))==((((rt0.c0)OR(rt1.c2))))) RIGHT OUTER JOIN vt0 ON CASE ((v0.c0)*(rt1.c1))  WHEN (('䔋F') BETWEEN (t0.c0) AND (rt0.c3)) THEN v0.c0 COLLATE RTRIM END WHERE (((((v0.c0)+(v0.c0))) IS FALSE)) ORDER BY CASE WHEN ((rt1.c1)/(t0.c0)) THEN LOWER(DISTINCT rt0.c3) WHEN ((rt1.c0)IS NOT(t0.c0)) THEN ((rt0.c0) NOT NULL) WHEN ((t0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) THEN t0.c1 COLLATE BINARY END ASC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON 'Uh Zw.' CROSS JOIN rt1 ON NULL WHERE ((((NOT (rt1.c1)))<=((((rt1.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c43)))))) ORDER BY IFNULL(DISTINCT vt0.c0, (((t0.c43))<((t0.c1))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c1)))<=((((rt1.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c43)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON 'Uh Zw.' CROSS JOIN rt1 ON NULL ORDER BY IFNULL(DISTINCT vt0.c0, (((t0.c43))<((t0.c1)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON 'Uh Zw.' CROSS JOIN rt1 ON NULL WHERE ((((NOT (rt1.c1)))<=((((rt1.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c43)))))) ORDER BY IFNULL(DISTINCT vt0.c0, (((t0.c43))<((t0.c1))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c1)))<=((((rt1.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c43)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON 'Uh Zw.' CROSS JOIN rt1 ON NULL ORDER BY IFNULL(DISTINCT vt0.c0, (((t0.c43))<((t0.c1)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON 'Uh Zw.' CROSS JOIN rt1 ON NULL WHERE ((((NOT (rt1.c1)))<=((((rt1.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c43)))))) ORDER BY IFNULL(DISTINCT vt0.c0, (((t0.c43))<((t0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c2)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)&(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c2)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)&(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c2)&(rt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CASE WHEN NULL THEN ((rt1.c0)IS NOT(t0.c1)) ELSE t0.c43 COLLATE NOCASE END) ORDER BY ((LTRIM(rt1.c0)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((rt1.c0)IS NOT(t0.c1)) ELSE t0.c43 COLLATE NOCASE END) IS TRUE)  as count FROM t0, rt1 ORDER BY ((LTRIM(rt1.c0)) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CASE WHEN NULL THEN ((rt1.c0)IS NOT(t0.c1)) ELSE t0.c43 COLLATE NOCASE END) ORDER BY ((LTRIM(rt1.c0)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((rt1.c0)IS NOT(t0.c1)) ELSE t0.c43 COLLATE NOCASE END) IS TRUE)  as count FROM t0, rt1 ORDER BY ((LTRIM(rt1.c0)) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CASE WHEN NULL THEN ((rt1.c0)IS NOT(t0.c1)) ELSE t0.c43 COLLATE NOCASE END) ORDER BY ((LTRIM(rt1.c0)) IS TRUE) DESC;
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((((t0.c1)>=(v0.c0)))&(t0.c1)) WHERE ((TRIM(vt0.c0, t0.c43) IN ())) ORDER BY (((t0.c1 IN ()))GLOB(json_type(t0.c43)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TRIM(vt0.c0, t0.c43) IN ())) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((((t0.c1)>=(v0.c0)))&(t0.c1)) ORDER BY (((t0.c1 IN ()))GLOB(json_type(t0.c43)))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((((t0.c1)>=(v0.c0)))&(t0.c1)) WHERE ((TRIM(vt0.c0, t0.c43) IN ())) ORDER BY (((t0.c1 IN ()))GLOB(json_type(t0.c43)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TRIM(vt0.c0, t0.c43) IN ())) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((((t0.c1)>=(v0.c0)))&(t0.c1)) ORDER BY (((t0.c1 IN ()))GLOB(json_type(t0.c43)))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((((t0.c1)>=(v0.c0)))&(t0.c1)) WHERE ((TRIM(vt0.c0, t0.c43) IN ())) ORDER BY (((t0.c1 IN ()))GLOB(json_type(t0.c43)))  NULLS LAST;
SELECT ALL * FROM rt0, rt1, t0, vt0, v0 WHERE ((~ ((rt0.c0 IN ())))) ORDER BY ((CAST(t0.c43 AS BLOB)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, rt1, t0, vt0, v0 ORDER BY ((CAST(t0.c43 AS BLOB)) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, t0, vt0, v0 WHERE ((~ ((rt0.c0 IN ())))) ORDER BY ((CAST(t0.c43 AS BLOB)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, rt1, t0, vt0, v0 ORDER BY ((CAST(t0.c43 AS BLOB)) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, t0, vt0, v0 WHERE ((~ ((rt0.c0 IN ())))) ORDER BY ((CAST(t0.c43 AS BLOB)) NOT NULL) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0) IS TRUE), '' COLLATE NOCASE, rt1.c1 COLLATE BINARY))<=((((((NULL)OR(rt1.c1)))OR(rt1.c2)), CASE WHEN rt1.c1 THEN rt1.c1 END, (rt1.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) IS TRUE), '' COLLATE NOCASE, rt1.c1 COLLATE BINARY))<=((((((NULL)OR(rt1.c1)))OR(rt1.c2)), CASE WHEN rt1.c1 THEN rt1.c1 END, (rt1.c2 IN ()))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0) IS TRUE), '' COLLATE NOCASE, rt1.c1 COLLATE BINARY))<=((((((NULL)OR(rt1.c1)))OR(rt1.c2)), CASE WHEN rt1.c1 THEN rt1.c1 END, (rt1.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) IS TRUE), '' COLLATE NOCASE, rt1.c1 COLLATE BINARY))<=((((((NULL)OR(rt1.c1)))OR(rt1.c2)), CASE WHEN rt1.c1 THEN rt1.c1 END, (rt1.c2 IN ()))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0) IS TRUE), '' COLLATE NOCASE, rt1.c1 COLLATE BINARY))<=((((((NULL)OR(rt1.c1)))OR(rt1.c2)), CASE WHEN rt1.c1 THEN rt1.c1 END, (rt1.c2 IN ())))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM)AND(((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)))))AND(json_remove(rt0.c2, rt0.c2)))) ORDER BY CASE (rt0.c0 IN ())  WHEN NULL THEN 'k^t' ELSE (+ (rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE RTRIM)AND(((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)))))AND(json_remove(rt0.c2, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c0 IN ())  WHEN NULL THEN 'k^t' ELSE (+ (rt0.c2)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM)AND(((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)))))AND(json_remove(rt0.c2, rt0.c2)))) ORDER BY CASE (rt0.c0 IN ())  WHEN NULL THEN 'k^t' ELSE (+ (rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE RTRIM)AND(((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)))))AND(json_remove(rt0.c2, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c0 IN ())  WHEN NULL THEN 'k^t' ELSE (+ (rt0.c2)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN ((rt0.c0)<(rt0.c0)) THEN CASE t0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE t0.c1 END END) ORDER BY CASE WHEN (((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN json_patch(rt0.c2, vt0.c0) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)<(rt0.c0)) THEN CASE t0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE t0.c1 END END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CASE WHEN (((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN json_patch(rt0.c2, vt0.c0) END);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN ((rt0.c0)<(rt0.c0)) THEN CASE t0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE t0.c1 END END) ORDER BY CASE WHEN (((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN json_patch(rt0.c2, vt0.c0) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)<(rt0.c0)) THEN CASE t0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE t0.c1 END END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CASE WHEN (((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN json_patch(rt0.c2, vt0.c0) END);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN ((rt0.c0)<(rt0.c0)) THEN CASE t0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE t0.c1 END END) ORDER BY CASE WHEN (((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN json_patch(rt0.c2, vt0.c0) END;
SELECT * FROM rt1, rt0 WHERE (((((CAST(rt1.c1 AS BLOB))OR('191032093')))OR(((rt0.c0)=(rt0.c2))))) ORDER BY CAST(((rt0.c3)<(rt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c1 AS BLOB))OR('191032093')))OR(((rt0.c0)=(rt0.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(((rt0.c3)<(rt0.c0)) AS REAL));
SELECT * FROM rt1, rt0 WHERE (((((CAST(rt1.c1 AS BLOB))OR('191032093')))OR(((rt0.c0)=(rt0.c2))))) ORDER BY CAST(((rt0.c3)<(rt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c1 AS BLOB))OR('191032093')))OR(((rt0.c0)=(rt0.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(((rt0.c3)<(rt0.c0)) AS REAL));
SELECT * FROM rt1, rt0 WHERE (((((CAST(rt1.c1 AS BLOB))OR('191032093')))OR(((rt0.c0)=(rt0.c2))))) ORDER BY CAST(((rt0.c3)<(rt0.c0)) AS REAL);
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON (((v0.c0) NOTNULL) IN (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(t0.c1)))OR(v0.c0)))) WHERE (CASE v0.c0  WHEN t0.c43 THEN x'' ELSE t0.c43 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN t0.c43 THEN x'' ELSE t0.c43 END COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((v0.c0) NOTNULL) IN (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(t0.c1)))OR(v0.c0)))));
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON (((v0.c0) NOTNULL) IN (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(t0.c1)))OR(v0.c0)))) WHERE (CASE v0.c0  WHEN t0.c43 THEN x'' ELSE t0.c43 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN t0.c43 THEN x'' ELSE t0.c43 END COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((v0.c0) NOTNULL) IN (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(t0.c1)))OR(v0.c0)))));
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON (((v0.c0) NOTNULL) IN (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(t0.c1)))OR(v0.c0)))) WHERE (CASE v0.c0  WHEN t0.c43 THEN x'' ELSE t0.c43 END COLLATE BINARY);
SELECT * FROM rt0, t0, v0, vt0 WHERE (((CAST(0.3893575679679834 AS INTEGER)) NOT BETWEEN (UNLIKELY(v0.c0)) AND (((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(0.3893575679679834 AS INTEGER)) NOT BETWEEN (UNLIKELY(v0.c0)) AND (((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, t0, v0, vt0);
SELECT * FROM rt0, t0, v0, vt0 WHERE (((CAST(0.3893575679679834 AS INTEGER)) NOT BETWEEN (UNLIKELY(v0.c0)) AND (((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(0.3893575679679834 AS INTEGER)) NOT BETWEEN (UNLIKELY(v0.c0)) AND (((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, t0, v0, vt0);
SELECT * FROM rt0, t0, v0, vt0 WHERE (((CAST(0.3893575679679834 AS INTEGER)) NOT BETWEEN (UNLIKELY(v0.c0)) AND (((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))));
SELECT * FROM t0, vt0, rt0, v0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, rt0, v0);
SELECT * FROM t0, vt0, rt0, v0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, rt0, v0);
SELECT * FROM t0, vt0, rt0, v0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE BINARY);
SELECT COUNT(*) FROM t0, vt0, v0, rt1 WHERE ((NOT (((0.6346994845148392)<=(rt1.c1))))) ORDER BY (((t0.c1)) BETWEEN ((((((rt1.c1)AND('\*')))AND(vt0.c0)))) AND ((GLOB(rt1.c2, rt1.c2)))) ASC, CAST(t0.c43 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((0.6346994845148392)<=(rt1.c1))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, v0, rt1 ORDER BY (((t0.c1)) BETWEEN ((((((rt1.c1)AND('\*')))AND(vt0.c0)))) AND ((GLOB(rt1.c2, rt1.c2)))) ASC, CAST(t0.c43 AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, v0, rt1 WHERE ((NOT (((0.6346994845148392)<=(rt1.c1))))) ORDER BY (((t0.c1)) BETWEEN ((((((rt1.c1)AND('\*')))AND(vt0.c0)))) AND ((GLOB(rt1.c2, rt1.c2)))) ASC, CAST(t0.c43 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((0.6346994845148392)<=(rt1.c1))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, v0, rt1 ORDER BY (((t0.c1)) BETWEEN ((((((rt1.c1)AND('\*')))AND(vt0.c0)))) AND ((GLOB(rt1.c2, rt1.c2)))) ASC, CAST(t0.c43 AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, v0, rt1 WHERE ((NOT (((0.6346994845148392)<=(rt1.c1))))) ORDER BY (((t0.c1)) BETWEEN ((((((rt1.c1)AND('\*')))AND(vt0.c0)))) AND ((GLOB(rt1.c2, rt1.c2)))) ASC, CAST(t0.c43 AS REAL)  NULLS LAST;
SELECT * FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((DATE(rt1.c2, rt0.c0, rt0.c3))OR(rt0.c1)) CROSS JOIN t0 ON ((((((rt1.c1) IS TRUE))AND(NULLIF(DISTINCT rt0.c2, v0.c0))))AND(NULL)) CROSS JOIN vt0 ON CASE WHEN (NOT (rt0.c0)) THEN (((v0.c0))=((vt0.c0))) WHEN ((((t0.c43)AND(rt0.c2)))OR(t0.c1)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) WHEN ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt1.c2)>=(t0.c43)) ELSE ((t0.c1)<<(t0.c0)) END WHERE (CASE WHEN ((((rt1.c1)OR(rt0.c2)))AND(t0.c0)) THEN (~ (rt0.c1)) ELSE (vt0.c0 IN (rt0.c2, t0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c1)OR(rt0.c2)))AND(t0.c0)) THEN (~ (rt0.c1)) ELSE (vt0.c0 IN (rt0.c2, t0.c1)) END) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((DATE(rt1.c2, rt0.c0, rt0.c3))OR(rt0.c1)) CROSS JOIN t0 ON ((((((rt1.c1) IS TRUE))AND(NULLIF(DISTINCT rt0.c2, v0.c0))))AND(NULL)) CROSS JOIN vt0 ON CASE WHEN (NOT (rt0.c0)) THEN (((v0.c0))=((vt0.c0))) WHEN ((((t0.c43)AND(rt0.c2)))OR(t0.c1)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) WHEN ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt1.c2)>=(t0.c43)) ELSE ((t0.c1)<<(t0.c0)) END);
SELECT * FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((DATE(rt1.c2, rt0.c0, rt0.c3))OR(rt0.c1)) CROSS JOIN t0 ON ((((((rt1.c1) IS TRUE))AND(NULLIF(DISTINCT rt0.c2, v0.c0))))AND(NULL)) CROSS JOIN vt0 ON CASE WHEN (NOT (rt0.c0)) THEN (((v0.c0))=((vt0.c0))) WHEN ((((t0.c43)AND(rt0.c2)))OR(t0.c1)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) WHEN ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt1.c2)>=(t0.c43)) ELSE ((t0.c1)<<(t0.c0)) END WHERE (CASE WHEN ((((rt1.c1)OR(rt0.c2)))AND(t0.c0)) THEN (~ (rt0.c1)) ELSE (vt0.c0 IN (rt0.c2, t0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c1)OR(rt0.c2)))AND(t0.c0)) THEN (~ (rt0.c1)) ELSE (vt0.c0 IN (rt0.c2, t0.c1)) END) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((DATE(rt1.c2, rt0.c0, rt0.c3))OR(rt0.c1)) CROSS JOIN t0 ON ((((((rt1.c1) IS TRUE))AND(NULLIF(DISTINCT rt0.c2, v0.c0))))AND(NULL)) CROSS JOIN vt0 ON CASE WHEN (NOT (rt0.c0)) THEN (((v0.c0))=((vt0.c0))) WHEN ((((t0.c43)AND(rt0.c2)))OR(t0.c1)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) WHEN ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt1.c2)>=(t0.c43)) ELSE ((t0.c1)<<(t0.c0)) END);
SELECT * FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((DATE(rt1.c2, rt0.c0, rt0.c3))OR(rt0.c1)) CROSS JOIN t0 ON ((((((rt1.c1) IS TRUE))AND(NULLIF(DISTINCT rt0.c2, v0.c0))))AND(NULL)) CROSS JOIN vt0 ON CASE WHEN (NOT (rt0.c0)) THEN (((v0.c0))=((vt0.c0))) WHEN ((((t0.c43)AND(rt0.c2)))OR(t0.c1)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) WHEN ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt1.c2)>=(t0.c43)) ELSE ((t0.c1)<<(t0.c0)) END WHERE (CASE WHEN ((((rt1.c1)OR(rt0.c2)))AND(t0.c0)) THEN (~ (rt0.c1)) ELSE (vt0.c0 IN (rt0.c2, t0.c1)) END);
SELECT COUNT(*) FROM t0, v0 CROSS JOIN rt1 ON ((((rt0.c1)!=(rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c3)))AND(NULL))) AND (CASE WHEN rt0.c0 THEN t0.c43 END)) FULL OUTER JOIN rt0 ON (((t0.c0 COLLATE BINARY, CASE WHEN v0.c0 THEN rt1.c1 WHEN t0.c43 THEN t0.c43 WHEN t0.c1 THEN t0.c43 ELSE '2031150288' END, rt1.c1))==((LIKELY(DISTINCT rt0.c2), '', ((((rt1.c1)AND(rt0.c0)))AND(v0.c0))))) WHERE (((((((((((((((t0.c0)<>(rt0.c3)))OR('-1196461771')))OR(((0x3e9b59a1)/(t0.c1)))))OR(((rt1.c0) BETWEEN (v0.c0) AND (rt1.c0)))))AND(((((rt0.c0)AND(rt1.c2)))OR(rt1.c1)))))AND(((1689372184)>>(t0.c1)))))OR('')));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t0.c0)<>(rt0.c3)))OR('-1196461771')))OR(((0X3e9b59a1)/(t0.c1)))))OR(((rt1.c0) BETWEEN (v0.c0) AND (rt1.c0)))))AND(((((rt0.c0)AND(rt1.c2)))OR(rt1.c1)))))AND(((1689372184)>>(t0.c1)))))OR(''))) IS TRUE)  as count FROM t0, v0 CROSS JOIN rt1 ON ((((rt0.c1)!=(rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c3)))AND(NULL))) AND (CASE WHEN rt0.c0 THEN t0.c43 END)) FULL OUTER JOIN rt0 ON (((t0.c0 COLLATE BINARY, CASE WHEN v0.c0 THEN rt1.c1 WHEN t0.c43 THEN t0.c43 WHEN t0.c1 THEN t0.c43 ELSE '2031150288' END, rt1.c1))==((LIKELY(DISTINCT rt0.c2), '', ((((rt1.c1)AND(rt0.c0)))AND(v0.c0))))));
SELECT COUNT(*) FROM t0, v0 CROSS JOIN rt1 ON ((((rt0.c1)!=(rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c3)))AND(NULL))) AND (CASE WHEN rt0.c0 THEN t0.c43 END)) FULL OUTER JOIN rt0 ON (((t0.c0 COLLATE BINARY, CASE WHEN v0.c0 THEN rt1.c1 WHEN t0.c43 THEN t0.c43 WHEN t0.c1 THEN t0.c43 ELSE '2031150288' END, rt1.c1))==((LIKELY(DISTINCT rt0.c2), '', ((((rt1.c1)AND(rt0.c0)))AND(v0.c0))))) WHERE (((((((((((((((t0.c0)<>(rt0.c3)))OR('-1196461771')))OR(((0x3e9b59a1)/(t0.c1)))))OR(((rt1.c0) BETWEEN (v0.c0) AND (rt1.c0)))))AND(((((rt0.c0)AND(rt1.c2)))OR(rt1.c1)))))AND(((1689372184)>>(t0.c1)))))OR('')));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t0.c0)<>(rt0.c3)))OR('-1196461771')))OR(((0X3e9b59a1)/(t0.c1)))))OR(((rt1.c0) BETWEEN (v0.c0) AND (rt1.c0)))))AND(((((rt0.c0)AND(rt1.c2)))OR(rt1.c1)))))AND(((1689372184)>>(t0.c1)))))OR(''))) IS TRUE)  as count FROM t0, v0 CROSS JOIN rt1 ON ((((rt0.c1)!=(rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c3)))AND(NULL))) AND (CASE WHEN rt0.c0 THEN t0.c43 END)) FULL OUTER JOIN rt0 ON (((t0.c0 COLLATE BINARY, CASE WHEN v0.c0 THEN rt1.c1 WHEN t0.c43 THEN t0.c43 WHEN t0.c1 THEN t0.c43 ELSE '2031150288' END, rt1.c1))==((LIKELY(DISTINCT rt0.c2), '', ((((rt1.c1)AND(rt0.c0)))AND(v0.c0))))));
SELECT COUNT(*) FROM t0, rt1 WHERE (t0.c0 COLLATE BINARY) ORDER BY (((+ (t0.c1))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE BINARY) IS TRUE)  as count FROM t0, rt1 ORDER BY (((+ (t0.c1))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 WHERE (t0.c0 COLLATE BINARY) ORDER BY (((+ (t0.c1))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE BINARY) IS TRUE)  as count FROM t0, rt1 ORDER BY (((+ (t0.c1))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 WHERE (t0.c0 COLLATE BINARY) ORDER BY (((+ (t0.c1))) ISNULL)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c43 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t0.c43 COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c43 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t0.c43 COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c43 COLLATE NOCASE);
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON (((rt1.c1) IS FALSE) IN ()) RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)GLOB(v0.c0)) AS INTEGER) CROSS JOIN vt0 ON CAST(ROUND(rt1.c2, vt0.c0) AS BLOB) WHERE (CAST(((rt0.c0)>(0.41475913494012895)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)>(0.41475913494012895)) AS BLOB)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON (((rt1.c1) IS FALSE) IN ()) RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)GLOB(v0.c0)) AS INTEGER) CROSS JOIN vt0 ON CAST(ROUND(rt1.c2, vt0.c0) AS BLOB));
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON (((rt1.c1) IS FALSE) IN ()) RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)GLOB(v0.c0)) AS INTEGER) CROSS JOIN vt0 ON CAST(ROUND(rt1.c2, vt0.c0) AS BLOB) WHERE (CAST(((rt0.c0)>(0.41475913494012895)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)>(0.41475913494012895)) AS BLOB)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON (((rt1.c1) IS FALSE) IN ()) RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)GLOB(v0.c0)) AS INTEGER) CROSS JOIN vt0 ON CAST(ROUND(rt1.c2, vt0.c0) AS BLOB));
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON (((rt1.c1) IS FALSE) IN ()) RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)GLOB(v0.c0)) AS INTEGER) CROSS JOIN vt0 ON CAST(ROUND(rt1.c2, vt0.c0) AS BLOB) WHERE (CAST(((rt0.c0)>(0.41475913494012895)) AS BLOB));
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN t0.c1 THEN t0.c43 WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c1 END)+(rt0.c2)) WHERE (((((((((((x'1ab3') IS FALSE))OR(rt0.c1)))AND((('2031150288')<<(rt0.c3)))))OR(rt1.c0 COLLATE RTRIM)))OR((('痺ᆶgl\r.r') NOT NULL)))) ORDER BY 0.8804908435107436;
SELECT SUM(count) FROM (SELECT ((((((((((((x'1ab3') IS FALSE))OR(rt0.c1)))AND((('2031150288')<<(rt0.c3)))))OR(rt1.c0 COLLATE RTRIM)))OR((('痺ᆶgl\r.r') NOT NULL)))) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN t0.c1 THEN t0.c43 WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c1 END)+(rt0.c2)) ORDER BY 0.8804908435107436);
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN t0.c1 THEN t0.c43 WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c1 END)+(rt0.c2)) WHERE (((((((((((x'1ab3') IS FALSE))OR(rt0.c1)))AND((('2031150288')<<(rt0.c3)))))OR(rt1.c0 COLLATE RTRIM)))OR((('痺ᆶgl\r.r') NOT NULL)))) ORDER BY 0.8804908435107436;
SELECT SUM(count) FROM (SELECT ((((((((((((x'1ab3') IS FALSE))OR(rt0.c1)))AND((('2031150288')<<(rt0.c3)))))OR(rt1.c0 COLLATE RTRIM)))OR((('痺ᆶgl\r.r') NOT NULL)))) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN t0.c1 THEN t0.c43 WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c1 END)+(rt0.c2)) ORDER BY 0.8804908435107436);
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN t0.c1 THEN t0.c43 WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c1 END)+(rt0.c2)) WHERE (((((((((((x'1ab3') IS FALSE))OR(rt0.c1)))AND((('2031150288')<<(rt0.c3)))))OR(rt1.c0 COLLATE RTRIM)))OR((('痺ᆶgl\r.r') NOT NULL)))) ORDER BY 0.8804908435107436;
SELECT ALL COUNT(*) FROM v0, t0, rt0, vt0 WHERE (((rt0.c3)/(((t0.c0) NOT NULL)))) ORDER BY ((t0.c1) BETWEEN (rt0.c3) AND (SUBSTR(t0.c43, t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)/(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, t0, rt0, vt0 ORDER BY ((t0.c1) BETWEEN (rt0.c3) AND (SUBSTR(t0.c43, t0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, rt0, vt0 WHERE (((rt0.c3)/(((t0.c0) NOT NULL)))) ORDER BY ((t0.c1) BETWEEN (rt0.c3) AND (SUBSTR(t0.c43, t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)/(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, t0, rt0, vt0 ORDER BY ((t0.c1) BETWEEN (rt0.c3) AND (SUBSTR(t0.c43, t0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, rt0, vt0 WHERE (((rt0.c3)/(((t0.c0) NOT NULL)))) ORDER BY ((t0.c1) BETWEEN (rt0.c3) AND (SUBSTR(t0.c43, t0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((highlight(t0.c43, t0.c0, x'', 0.030035919008823186) IN ())) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((highlight(t0.c43, t0.c0, x'', 0.030035919008823186) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY NULL);
SELECT COUNT(*) FROM t0, vt0 WHERE ((highlight(t0.c43, t0.c0, x'', 0.030035919008823186) IN ())) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((highlight(t0.c43, t0.c0, x'', 0.030035919008823186) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY NULL);
SELECT COUNT(*) FROM t0, vt0 WHERE ((highlight(t0.c43, t0.c0, x'', 0.030035919008823186) IN ())) ORDER BY NULL;
SELECT ALL COUNT(*) FROM v0, rt0, t0, vt0, rt1 WHERE (((vt0.c0)=(8.09058649E8))) ORDER BY t0.c43  NULLS FIRST, ((((t0.c43)%(vt0.c0)))!=(v0.c0));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)=(8.09058649E8))) IS TRUE)  as count FROM v0, rt0, t0, vt0, rt1 ORDER BY t0.c43  NULLS FIRST, ((((t0.c43)%(vt0.c0)))<>(v0.c0)));
SELECT ALL COUNT(*) FROM v0, rt0, t0, vt0, rt1 WHERE (((vt0.c0)=(8.09058649E8))) ORDER BY t0.c43  NULLS FIRST, ((((t0.c43)%(vt0.c0)))!=(v0.c0));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)=(8.09058649E8))) IS TRUE)  as count FROM v0, rt0, t0, vt0, rt1 ORDER BY t0.c43  NULLS FIRST, ((((t0.c43)%(vt0.c0)))<>(v0.c0)));
SELECT ALL COUNT(*) FROM v0, rt0, t0, vt0, rt1 WHERE (((vt0.c0)=(8.09058649E8))) ORDER BY t0.c43  NULLS FIRST, ((((t0.c43)%(vt0.c0)))!=(v0.c0));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((((NULL)LIKE(v0.c0)))AND(CASE vt0.c0  WHEN rt0.c3 THEN rt1.c0 END)))AND(((v0.c0)<=(rt0.c0)))) LEFT OUTER JOIN v0 ON COALESCE(DISTINCT CAST(v0.c0 AS NUMERIC), (~ (vt0.c0))) CROSS JOIN t0 ON ((rt0.c3)!=(0.6854736875803619)) FULL OUTER JOIN vt0 ON ((rt1.c1)||(x'470c')) WHERE (((((((rt0.c1)OR(rt1.c0)))AND(rt0.c1)))&(0.4667656219730767)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt1.c0)))AND(rt0.c1)))&(0.4667656219730767))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((((((NULL)LIKE(v0.c0)))AND(CASE vt0.c0  WHEN rt0.c3 THEN rt1.c0 END)))AND(((v0.c0)<=(rt0.c0)))) LEFT OUTER JOIN v0 ON COALESCE(DISTINCT CAST(v0.c0 AS NUMERIC), (~ (vt0.c0))) CROSS JOIN t0 ON ((rt0.c3)!=(0.6854736875803619)) FULL OUTER JOIN vt0 ON ((rt1.c1)||(x'470c')));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((((NULL)LIKE(v0.c0)))AND(CASE vt0.c0  WHEN rt0.c3 THEN rt1.c0 END)))AND(((v0.c0)<=(rt0.c0)))) LEFT OUTER JOIN v0 ON COALESCE(DISTINCT CAST(v0.c0 AS NUMERIC), (~ (vt0.c0))) CROSS JOIN t0 ON ((rt0.c3)!=(0.6854736875803619)) FULL OUTER JOIN vt0 ON ((rt1.c1)||(x'470c')) WHERE (((((((rt0.c1)OR(rt1.c0)))AND(rt0.c1)))&(0.4667656219730767)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt1.c0)))AND(rt0.c1)))&(0.4667656219730767))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((((((NULL)LIKE(v0.c0)))AND(CASE vt0.c0  WHEN rt0.c3 THEN rt1.c0 END)))AND(((v0.c0)<=(rt0.c0)))) LEFT OUTER JOIN v0 ON COALESCE(DISTINCT CAST(v0.c0 AS NUMERIC), (~ (vt0.c0))) CROSS JOIN t0 ON ((rt0.c3)!=(0.6854736875803619)) FULL OUTER JOIN vt0 ON ((rt1.c1)||(x'470c')));
SELECT ALL COUNT(*) FROM t0, v0, rt0, rt1, vt0 WHERE (((((v0.c0)==(0.20645313747444827)))>=(CASE t0.c43  WHEN rt0.c1 THEN t0.c1 END))) ORDER BY (CAST(rt1.c1 AS BLOB) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(0.20645313747444827)))>=(CASE t0.c43  WHEN rt0.c1 THEN t0.c1 END))) IS TRUE)  as count FROM t0, v0, rt0, rt1, vt0 ORDER BY (CAST(rt1.c1 AS BLOB) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0, rt0, rt1, vt0 WHERE (((((v0.c0)==(0.20645313747444827)))>=(CASE t0.c43  WHEN rt0.c1 THEN t0.c1 END))) ORDER BY (CAST(rt1.c1 AS BLOB) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(0.20645313747444827)))>=(CASE t0.c43  WHEN rt0.c1 THEN t0.c1 END))) IS TRUE)  as count FROM t0, v0, rt0, rt1, vt0 ORDER BY (CAST(rt1.c1 AS BLOB) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0, rt0, rt1, vt0 WHERE (((((v0.c0)==(0.20645313747444827)))>=(CASE t0.c43  WHEN rt0.c1 THEN t0.c1 END))) ORDER BY (CAST(rt1.c1 AS BLOB) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, rt1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, t0, rt1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, t0, rt1, v0 WHERE (NULL);
SELECT * FROM rt1 WHERE ('1576771122') ORDER BY (NOT (((((rt1.c0)AND(0.23268862506200005)))AND(rt1.c2)))) DESC, CASE x''  WHEN (+ ('1108908677')) THEN UPPER(rt1.c2) ELSE CAST(rt1.c2 AS NUMERIC) END DESC;
SELECT SUM(count) FROM (SELECT (('1576771122') IS TRUE)  as count FROM rt1 ORDER BY (NOT (((((rt1.c0)AND(0.23268862506200005)))AND(rt1.c2)))) DESC, CASE x''  WHEN (+ ('1108908677')) THEN UPPER(rt1.c2) ELSE CAST(rt1.c2 AS NUMERIC) END DESC);
SELECT * FROM rt1 WHERE ('1576771122') ORDER BY (NOT (((((rt1.c0)AND(0.23268862506200005)))AND(rt1.c2)))) DESC, CASE x''  WHEN (+ ('1108908677')) THEN UPPER(rt1.c2) ELSE CAST(rt1.c2 AS NUMERIC) END DESC;
SELECT SUM(count) FROM (SELECT (('1576771122') IS TRUE)  as count FROM rt1 ORDER BY (NOT (((((rt1.c0)AND(0.23268862506200005)))AND(rt1.c2)))) DESC, CASE x''  WHEN (+ ('1108908677')) THEN UPPER(rt1.c2) ELSE CAST(rt1.c2 AS NUMERIC) END DESC);
SELECT * FROM rt1 WHERE ('1576771122') ORDER BY (NOT (((((rt1.c0)AND(0.23268862506200005)))AND(rt1.c2)))) DESC, CASE x''  WHEN (+ ('1108908677')) THEN UPPER(rt1.c2) ELSE CAST(rt1.c2 AS NUMERIC) END DESC;
SELECT * FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) ISNULL));
SELECT ALL COUNT(*) FROM t0, v0, rt0 WHERE (HEX(DISTINCT rt0.c0 COLLATE NOCASE)) ORDER BY ((((((t0.c0)%(rt0.c1)))AND(((((rt0.c0)AND(rt0.c0)))OR(t0.c1)))))AND(0.6167223677641206)) DESC, CASE WHEN CAST('~M>' AS BLOB) THEN ((t0.c0) NOT BETWEEN (0.04783365062834932) AND (rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY ((((((t0.c0)%(rt0.c1)))AND(((((rt0.c0)AND(rt0.c0)))OR(t0.c1)))))AND(0.6167223677641206)) DESC, CASE WHEN CAST('~M>' AS BLOB) THEN ((t0.c0) NOT BETWEEN (0.04783365062834932) AND (rt0.c2)) END ASC);
SELECT ALL COUNT(*) FROM t0, v0, rt0 WHERE (HEX(DISTINCT rt0.c0 COLLATE NOCASE)) ORDER BY ((((((t0.c0)%(rt0.c1)))AND(((((rt0.c0)AND(rt0.c0)))OR(t0.c1)))))AND(0.6167223677641206)) DESC, CASE WHEN CAST('~M>' AS BLOB) THEN ((t0.c0) NOT BETWEEN (0.04783365062834932) AND (rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY ((((((t0.c0)%(rt0.c1)))AND(((((rt0.c0)AND(rt0.c0)))OR(t0.c1)))))AND(0.6167223677641206)) DESC, CASE WHEN CAST('~M>' AS BLOB) THEN ((t0.c0) NOT BETWEEN (0.04783365062834932) AND (rt0.c2)) END ASC);
SELECT ALL COUNT(*) FROM t0, v0, rt0 WHERE (HEX(DISTINCT rt0.c0 COLLATE NOCASE)) ORDER BY ((((((t0.c0)%(rt0.c1)))AND(((((rt0.c0)AND(rt0.c0)))OR(t0.c1)))))AND(0.6167223677641206)) DESC, CASE WHEN CAST('~M>' AS BLOB) THEN ((t0.c0) NOT BETWEEN (0.04783365062834932) AND (rt0.c2)) END ASC;
SELECT * FROM t0, rt1, rt0, vt0, v0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, rt1, rt0, vt0, v0);
SELECT * FROM t0, rt1, rt0, vt0, v0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, rt1, rt0, vt0, v0);
SELECT * FROM t0, rt1, rt0, vt0, v0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM vt0, v0, t0 NOT INDEXED INNER JOIN rt0 ON 'QR''URg\nU' COLLATE RTRIM CROSS JOIN rt1 ON ABS(DISTINCT (((vt0.c0, t0.c0, NULL)) BETWEEN ((rt1.c0, 1.825161832E9, rt1.c0)) AND (('zrjd', rt0.c1, x'6743')))) WHERE (CAST(((t0.c1)&(t0.c1)) AS TEXT)) ORDER BY ((((CAST(v0.c0 AS TEXT))OR((- (vt0.c0)))))AND(t0.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)&(t0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, v0, t0 INNER JOIN rt0 ON 'QR''URg\nU' COLLATE RTRIM CROSS JOIN rt1 ON ABS(DISTINCT (((vt0.c0, t0.c0, NULL)) BETWEEN ((rt1.c0, 1.825161832E9, rt1.c0)) AND (('zrjd', rt0.c1, x'6743')))) ORDER BY ((((CAST(v0.c0 AS TEXT))OR((- (vt0.c0)))))AND(t0.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, t0 NOT INDEXED INNER JOIN rt0 ON 'QR''URg\nU' COLLATE RTRIM CROSS JOIN rt1 ON ABS(DISTINCT (((vt0.c0, t0.c0, NULL)) BETWEEN ((rt1.c0, 1.825161832E9, rt1.c0)) AND (('zrjd', rt0.c1, x'6743')))) WHERE (CAST(((t0.c1)&(t0.c1)) AS TEXT)) ORDER BY ((((CAST(v0.c0 AS TEXT))OR((- (vt0.c0)))))AND(t0.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)&(t0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, v0, t0 INNER JOIN rt0 ON 'QR''URg\nU' COLLATE RTRIM CROSS JOIN rt1 ON ABS(DISTINCT (((vt0.c0, t0.c0, NULL)) BETWEEN ((rt1.c0, 1.825161832E9, rt1.c0)) AND (('zrjd', rt0.c1, x'6743')))) ORDER BY ((((CAST(v0.c0 AS TEXT))OR((- (vt0.c0)))))AND(t0.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, t0 NOT INDEXED INNER JOIN rt0 ON 'QR''URg\nU' COLLATE RTRIM CROSS JOIN rt1 ON ABS(DISTINCT (((vt0.c0, t0.c0, NULL)) BETWEEN ((rt1.c0, 1.825161832E9, rt1.c0)) AND (('zrjd', rt0.c1, x'6743')))) WHERE (CAST(((t0.c1)&(t0.c1)) AS TEXT)) ORDER BY ((((CAST(v0.c0 AS TEXT))OR((- (vt0.c0)))))AND(t0.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((~ (rt0.c1))))) ORDER BY ((rt0.c1)!=(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END)) ASC  NULLS LAST, '1530048708' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)<>(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END)) ASC  NULLS LAST, '1530048708' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((~ (rt0.c1))))) ORDER BY ((rt0.c1)!=(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END)) ASC  NULLS LAST, '1530048708' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)<>(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END)) ASC  NULLS LAST, '1530048708' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((~ (rt0.c1))))) ORDER BY ((rt0.c1)!=(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END)) ASC  NULLS LAST, '1530048708' DESC  NULLS LAST;
SELECT * FROM rt0, vt0, v0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN rt0.c3 COLLATE BINARY THEN CAST(x'' AS INTEGER) ELSE CAST(rt0.c2 AS BLOB) END) ORDER BY ((((((((((rt0.c0)>>(rt0.c0)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c1)&(v0.c0)))))OR('0.6266606998293972')))OR((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE NOCASE  WHEN rt0.c3 COLLATE BINARY THEN CAST(x'' AS INTEGER) ELSE CAST(rt0.c2 AS BLOB) END) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((((((rt0.c0)>>(rt0.c0)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c1)&(v0.c0)))))OR('0.6266606998293972')))OR((+ (v0.c0)))));
SELECT * FROM rt0, vt0, v0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN rt0.c3 COLLATE BINARY THEN CAST(x'' AS INTEGER) ELSE CAST(rt0.c2 AS BLOB) END) ORDER BY ((((((((((rt0.c0)>>(rt0.c0)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c1)&(v0.c0)))))OR('0.6266606998293972')))OR((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE NOCASE  WHEN rt0.c3 COLLATE BINARY THEN CAST(x'' AS INTEGER) ELSE CAST(rt0.c2 AS BLOB) END) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((((((rt0.c0)>>(rt0.c0)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c1)&(v0.c0)))))OR('0.6266606998293972')))OR((+ (v0.c0)))));
SELECT * FROM rt0, vt0, v0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN rt0.c3 COLLATE BINARY THEN CAST(x'' AS INTEGER) ELSE CAST(rt0.c2 AS BLOB) END) ORDER BY ((((((((((rt0.c0)>>(rt0.c0)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c1)&(v0.c0)))))OR('0.6266606998293972')))OR((+ (v0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS REAL)) ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN UNLIKELY(vt0.c0) ELSE (vt0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN UNLIKELY(vt0.c0) ELSE (vt0.c0 IN ()) END DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS REAL)) ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN UNLIKELY(vt0.c0) ELSE (vt0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN UNLIKELY(vt0.c0) ELSE (vt0.c0 IN ()) END DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS REAL)) ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN UNLIKELY(vt0.c0) ELSE (vt0.c0 IN ()) END DESC;
SELECT * FROM t0, rt0, vt0 LEFT OUTER JOIN rt1 ON (+ (((rt1.c1) NOT BETWEEN (rt0.c0) AND (t0.c43)))) WHERE (CAST((+ (rt0.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, vt0 LEFT OUTER JOIN rt1 ON (+ (((rt1.c1) NOT BETWEEN (rt0.c0) AND (t0.c43)))));
SELECT * FROM t0, rt0, vt0 LEFT OUTER JOIN rt1 ON (+ (((rt1.c1) NOT BETWEEN (rt0.c0) AND (t0.c43)))) WHERE (CAST((+ (rt0.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, vt0 LEFT OUTER JOIN rt1 ON (+ (((rt1.c1) NOT BETWEEN (rt0.c0) AND (t0.c43)))));
SELECT * FROM t0, rt0, vt0 LEFT OUTER JOIN rt1 ON (+ (((rt1.c1) NOT BETWEEN (rt0.c0) AND (t0.c43)))) WHERE (CAST((+ (rt0.c3)) AS NUMERIC));
SELECT COUNT(*) FROM vt0 WHERE ((((TRIM(DISTINCT vt0.c0)))>((((vt0.c0)GLOB(vt0.c0)))))) ORDER BY CASE (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, 0x570701d5, '-2124580458')))  WHEN vt0.c0 THEN (vt0.c0 IN ()) END  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0)) DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(DISTINCT vt0.c0)))>((((vt0.c0)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, 0X570701d5, '-2124580458')))  WHEN vt0.c0 THEN (vt0.c0 IN ()) END  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0)) DESC, vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((((TRIM(DISTINCT vt0.c0)))>((((vt0.c0)GLOB(vt0.c0)))))) ORDER BY CASE (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, 0x570701d5, '-2124580458')))  WHEN vt0.c0 THEN (vt0.c0 IN ()) END  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0)) DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(DISTINCT vt0.c0)))>((((vt0.c0)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, 0X570701d5, '-2124580458')))  WHEN vt0.c0 THEN (vt0.c0 IN ()) END  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0)) DESC, vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((((TRIM(DISTINCT vt0.c0)))>((((vt0.c0)GLOB(vt0.c0)))))) ORDER BY CASE (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, 0x570701d5, '-2124580458')))  WHEN vt0.c0 THEN (vt0.c0 IN ()) END  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0)) DESC, vt0.c0;
SELECT * FROM v0, vt0 LEFT OUTER JOIN t0 ON ((((('-1421658929')AND(rt0.c1)))AND(t0.c43)) IN (((((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)))AND(0.47735861236101285)))OR(t0.c1)))) LEFT OUTER JOIN rt0 ON (((t0.c1 IN ())) NOT BETWEEN ((~ (rt0.c0))) AND ((((v0.c0))<>((rt0.c0))))) WHERE (((((((rt0.c3) NOT BETWEEN (t0.c43) AND (rt0.c3)))AND(((t0.c1)>(vt0.c0)))))OR(ROUND(rt0.c1, t0.c43))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOT BETWEEN (t0.c43) AND (rt0.c3)))AND(((t0.c1)>(vt0.c0)))))OR(ROUND(rt0.c1, t0.c43)))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN t0 ON ((((('-1421658929')AND(rt0.c1)))AND(t0.c43)) IN (((((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)))AND(0.47735861236101285)))OR(t0.c1)))) LEFT OUTER JOIN rt0 ON (((t0.c1 IN ())) NOT BETWEEN ((~ (rt0.c0))) AND ((((v0.c0))<>((rt0.c0))))));
SELECT * FROM v0, vt0 LEFT OUTER JOIN t0 ON ((((('-1421658929')AND(rt0.c1)))AND(t0.c43)) IN (((((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)))AND(0.47735861236101285)))OR(t0.c1)))) LEFT OUTER JOIN rt0 ON (((t0.c1 IN ())) NOT BETWEEN ((~ (rt0.c0))) AND ((((v0.c0))<>((rt0.c0))))) WHERE (((((((rt0.c3) NOT BETWEEN (t0.c43) AND (rt0.c3)))AND(((t0.c1)>(vt0.c0)))))OR(ROUND(rt0.c1, t0.c43))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOT BETWEEN (t0.c43) AND (rt0.c3)))AND(((t0.c1)>(vt0.c0)))))OR(ROUND(rt0.c1, t0.c43)))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN t0 ON ((((('-1421658929')AND(rt0.c1)))AND(t0.c43)) IN (((((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)))AND(0.47735861236101285)))OR(t0.c1)))) LEFT OUTER JOIN rt0 ON (((t0.c1 IN ())) NOT BETWEEN ((~ (rt0.c0))) AND ((((v0.c0))<>((rt0.c0))))));
SELECT * FROM t0, vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM t0, v0, vt0, rt0 WHERE ((((((t0.c1, t0.c43, t0.c43)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((vt0.c0, t0.c1, vt0.c0)))) NOT BETWEEN (((t0.c1)|(rt0.c2))) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1, t0.c43, t0.c43)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((vt0.c0, t0.c1, vt0.c0)))) NOT BETWEEN (((t0.c1)|(rt0.c2))) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM t0, v0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0, rt0 WHERE ((((((t0.c1, t0.c43, t0.c43)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((vt0.c0, t0.c1, vt0.c0)))) NOT BETWEEN (((t0.c1)|(rt0.c2))) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1, t0.c43, t0.c43)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((vt0.c0, t0.c1, vt0.c0)))) NOT BETWEEN (((t0.c1)|(rt0.c2))) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM t0, v0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0, rt0 WHERE ((((((t0.c1, t0.c43, t0.c43)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((vt0.c0, t0.c1, vt0.c0)))) NOT BETWEEN (((t0.c1)|(rt0.c2))) AND ((rt0.c2 IN ()))));
SELECT ALL * FROM rt0, vt0, t0, v0 NATURAL JOIN rt1 WHERE (rt0.c1) ORDER BY (((CAST(rt0.c3 AS BLOB)))>((((t0.c0)!=(rt0.c2))))) DESC  NULLS LAST, ((((rt1.c1) NOT BETWEEN (t0.c43) AND (rt1.c0)))*(((t0.c1)IS NOT(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t0, v0 NATURAL JOIN rt1 ORDER BY (((CAST(rt0.c3 AS BLOB)))>((((t0.c0)!=(rt0.c2))))) DESC  NULLS LAST, ((((rt1.c1) NOT BETWEEN (t0.c43) AND (rt1.c0)))*(((t0.c1)IS NOT(rt0.c2)))) DESC);
SELECT ALL * FROM rt0, vt0, t0, v0 NATURAL JOIN rt1 WHERE (rt0.c1) ORDER BY (((CAST(rt0.c3 AS BLOB)))>((((t0.c0)!=(rt0.c2))))) DESC  NULLS LAST, ((((rt1.c1) NOT BETWEEN (t0.c43) AND (rt1.c0)))*(((t0.c1)IS NOT(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t0, v0 NATURAL JOIN rt1 ORDER BY (((CAST(rt0.c3 AS BLOB)))>((((t0.c0)!=(rt0.c2))))) DESC  NULLS LAST, ((((rt1.c1) NOT BETWEEN (t0.c43) AND (rt1.c0)))*(((t0.c1)IS NOT(rt0.c2)))) DESC);
SELECT ALL * FROM rt0, vt0, t0, v0 NATURAL JOIN rt1 WHERE (rt0.c1) ORDER BY (((CAST(rt0.c3 AS BLOB)))>((((t0.c0)!=(rt0.c2))))) DESC  NULLS LAST, ((((rt1.c1) NOT BETWEEN (t0.c43) AND (rt1.c0)))*(((t0.c1)IS NOT(rt0.c2)))) DESC;
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(((((rt0.c0)AND(0.9273878306630992)))OR(rt0.c0)))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ORDER BY (((((rt0.c0)<=(rt0.c3)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE 'b5e䝓' END))>=((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END, '', ((((rt0.c3)OR(rt0.c3)))OR(rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(((((rt0.c0)AND(0.9273878306630992)))OR(rt0.c0)))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)<=(rt0.c3)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE 'b5e䝓' END))>=((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END, '', ((((rt0.c3)OR(rt0.c3)))OR(rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(((((rt0.c0)AND(0.9273878306630992)))OR(rt0.c0)))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ORDER BY (((((rt0.c0)<=(rt0.c3)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE 'b5e䝓' END))>=((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END, '', ((((rt0.c3)OR(rt0.c3)))OR(rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(((((rt0.c0)AND(0.9273878306630992)))OR(rt0.c0)))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)<=(rt0.c3)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE 'b5e䝓' END))>=((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END, '', ((((rt0.c3)OR(rt0.c3)))OR(rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(((((rt0.c0)AND(0.9273878306630992)))OR(rt0.c0)))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ORDER BY (((((rt0.c0)<=(rt0.c3)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE 'b5e䝓' END))>=((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END, '', ((((rt0.c3)OR(rt0.c3)))OR(rt0.c2))))) ASC;
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((rt0.c0)AND(((rt0.c2)>(rt1.c1)))))OR(t0.c0 COLLATE RTRIM))) ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(((rt0.c2)>(rt1.c1)))))OR(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((rt0.c0)AND(((rt0.c2)>(rt1.c1)))))OR(t0.c0 COLLATE RTRIM))) ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(((rt0.c2)>(rt1.c1)))))OR(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((rt0.c0)AND(((rt0.c2)>(rt1.c1)))))OR(t0.c0 COLLATE RTRIM))) ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL);
SELECT ALL COUNT(*) FROM rt1, vt0, t0, v0, rt0 WHERE ((~ ((rt0.c3 IN (t0.c43))))) ORDER BY (~ (((((rt0.c2)OR('￿⟒')))AND(rt0.c3))))  NULLS LAST, (~ (CAST(t0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c3 IN (t0.c43))))) IS TRUE)  as count FROM rt1, vt0, t0, v0, rt0 ORDER BY (~ (((((rt0.c2)OR('￿⟒')))AND(rt0.c3))))  NULLS LAST, (~ (CAST(t0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM rt1, vt0, t0, v0, rt0 WHERE ((~ ((rt0.c3 IN (t0.c43))))) ORDER BY (~ (((((rt0.c2)OR('￿⟒')))AND(rt0.c3))))  NULLS LAST, (~ (CAST(t0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c3 IN (t0.c43))))) IS TRUE)  as count FROM rt1, vt0, t0, v0, rt0 ORDER BY (~ (((((rt0.c2)OR('￿⟒')))AND(rt0.c3))))  NULLS LAST, (~ (CAST(t0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM rt1, vt0, t0, v0, rt0 WHERE ((~ ((rt0.c3 IN (t0.c43))))) ORDER BY (~ (((((rt0.c2)OR('￿⟒')))AND(rt0.c3))))  NULLS LAST, (~ (CAST(t0.c1 AS TEXT)));
SELECT * FROM t0, rt0, v0, vt0, rt1 WHERE (CAST(CAST(rt0.c2 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, v0, vt0, rt1);
SELECT * FROM t0, rt0, v0, vt0, rt1 WHERE (CAST(CAST(rt0.c2 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, v0, vt0, rt1);
SELECT * FROM t0, rt0, v0, vt0, rt1 WHERE (CAST(CAST(rt0.c2 AS REAL) AS NUMERIC));
SELECT COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 IN ()));
SELECT ALL * FROM v0 WHERE (((((('Z쉨O3Y{)P')OR(v0.c0)))AND('1815636725')) IN (DATE(v0.c0, v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((('Z쉨O3Y{)P')OR(v0.c0)))AND('1815636725')) IN (DATE(v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((('Z쉨O3Y{)P')OR(v0.c0)))AND('1815636725')) IN (DATE(v0.c0, v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((('Z쉨O3Y{)P')OR(v0.c0)))AND('1815636725')) IN (DATE(v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((('Z쉨O3Y{)P')OR(v0.c0)))AND('1815636725')) IN (DATE(v0.c0, v0.c0, v0.c0))));
SELECT ALL * FROM v0, rt1, vt0 WHERE (((((rt1.c1)AND(v0.c0)))AND(rt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)AND(v0.c0)))AND(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT ALL * FROM v0, rt1, vt0 WHERE (((((rt1.c1)AND(v0.c0)))AND(rt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)AND(v0.c0)))AND(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT ALL * FROM v0, rt1, vt0 WHERE (((((rt1.c1)AND(v0.c0)))AND(rt1.c2)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0, v0 NOT INDEXED, rt0, rt1 WHERE (((((((rt0.c2)AND(rt0.c2)))OR(rt1.c2))) NOT BETWEEN (t0.c43) AND (TYPEOF(rt0.c2)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN v0.c0 WHEN t0.c43 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c0 ELSE v0.c0 END)) AND ((((rt1.c2)%(0.9916127247253792)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c2)))OR(rt1.c2))) NOT BETWEEN (t0.c43) AND (TYPEOF(rt0.c2)))) IS TRUE)  as count FROM vt0, t0, v0, rt0, rt1 ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN v0.c0 WHEN t0.c43 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c0 ELSE v0.c0 END)) AND ((((rt1.c2)%(0.9916127247253792)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 NOT INDEXED, rt0, rt1 WHERE (((((((rt0.c2)AND(rt0.c2)))OR(rt1.c2))) NOT BETWEEN (t0.c43) AND (TYPEOF(rt0.c2)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN v0.c0 WHEN t0.c43 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c0 ELSE v0.c0 END)) AND ((((rt1.c2)%(0.9916127247253792)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c2)))OR(rt1.c2))) NOT BETWEEN (t0.c43) AND (TYPEOF(rt0.c2)))) IS TRUE)  as count FROM vt0, t0, v0, rt0, rt1 ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN v0.c0 WHEN t0.c43 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c0 ELSE v0.c0 END)) AND ((((rt1.c2)%(0.9916127247253792)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 NOT INDEXED, rt0, rt1 WHERE (((((((rt0.c2)AND(rt0.c2)))OR(rt1.c2))) NOT BETWEEN (t0.c43) AND (TYPEOF(rt0.c2)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN v0.c0 WHEN t0.c43 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c0 ELSE v0.c0 END)) AND ((((rt1.c2)%(0.9916127247253792)))))  NULLS FIRST;
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((((rt1.c2)LIKE(rt1.c1)))!=('' COLLATE BINARY)) FULL OUTER JOIN rt1 ON ((((t0.c0)||('-321760746'))) ISNULL) WHERE (((+ (t0.c43)) IN ())) ORDER BY CAST(((((rt1.c0)AND(t0.c43)))AND(rt1.c0)) AS BLOB) ASC, (((rt1.c0)) NOT BETWEEN (((~ (t0.c0)))) AND ((((t0.c0) NOT NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (t0.c43)) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((((rt1.c2)LIKE(rt1.c1)))!=('' COLLATE BINARY)) FULL OUTER JOIN rt1 ON ((((t0.c0)||('-321760746'))) ISNULL) ORDER BY CAST(((((rt1.c0)AND(t0.c43)))AND(rt1.c0)) AS BLOB) ASC, (((rt1.c0)) NOT BETWEEN (((~ (t0.c0)))) AND ((((t0.c0) NOT NULL)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((((rt1.c2)LIKE(rt1.c1)))!=('' COLLATE BINARY)) FULL OUTER JOIN rt1 ON ((((t0.c0)||('-321760746'))) ISNULL) WHERE (((+ (t0.c43)) IN ())) ORDER BY CAST(((((rt1.c0)AND(t0.c43)))AND(rt1.c0)) AS BLOB) ASC, (((rt1.c0)) NOT BETWEEN (((~ (t0.c0)))) AND ((((t0.c0) NOT NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (t0.c43)) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((((rt1.c2)LIKE(rt1.c1)))!=('' COLLATE BINARY)) FULL OUTER JOIN rt1 ON ((((t0.c0)||('-321760746'))) ISNULL) ORDER BY CAST(((((rt1.c0)AND(t0.c43)))AND(rt1.c0)) AS BLOB) ASC, (((rt1.c0)) NOT BETWEEN (((~ (t0.c0)))) AND ((((t0.c0) NOT NULL)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 INNER JOIN rt1 ON (rt1.c1 COLLATE NOCASE IN ()) WHERE ((((rt1.c0))<=((rt1.c0))) COLLATE RTRIM) ORDER BY (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) IN (NULL, TRIM(t0.c0))) DESC, ((LIKELY(DISTINCT rt1.c2))OR('')) DESC  NULLS LAST, ((((LOWER(NULL))OR(((v0.c0) BETWEEN (t0.c0) AND (rt1.c0)))))AND(CAST(t0.c43 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0))<=((rt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 INNER JOIN rt1 ON (rt1.c1 COLLATE NOCASE IN ()) ORDER BY (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) IN (NULL, TRIM(t0.c0))) DESC, ((LIKELY(DISTINCT rt1.c2))OR('')) DESC  NULLS LAST, ((((LOWER(NULL))OR(((v0.c0) BETWEEN (t0.c0) AND (rt1.c0)))))AND(CAST(t0.c43 AS TEXT))) ASC);
SELECT ALL COUNT(*) FROM v0, t0 INNER JOIN rt1 ON (rt1.c1 COLLATE NOCASE IN ()) WHERE ((((rt1.c0))<=((rt1.c0))) COLLATE RTRIM) ORDER BY (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) IN (NULL, TRIM(t0.c0))) DESC, ((LIKELY(DISTINCT rt1.c2))OR('')) DESC  NULLS LAST, ((((LOWER(NULL))OR(((v0.c0) BETWEEN (t0.c0) AND (rt1.c0)))))AND(CAST(t0.c43 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0))<=((rt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 INNER JOIN rt1 ON (rt1.c1 COLLATE NOCASE IN ()) ORDER BY (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) IN (NULL, TRIM(t0.c0))) DESC, ((LIKELY(DISTINCT rt1.c2))OR('')) DESC  NULLS LAST, ((((LOWER(NULL))OR(((v0.c0) BETWEEN (t0.c0) AND (rt1.c0)))))AND(CAST(t0.c43 AS TEXT))) ASC);
SELECT ALL COUNT(*) FROM v0, t0 INNER JOIN rt1 ON (rt1.c1 COLLATE NOCASE IN ()) WHERE ((((rt1.c0))<=((rt1.c0))) COLLATE RTRIM) ORDER BY (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) IN (NULL, TRIM(t0.c0))) DESC, ((LIKELY(DISTINCT rt1.c2))OR('')) DESC  NULLS LAST, ((((LOWER(NULL))OR(((v0.c0) BETWEEN (t0.c0) AND (rt1.c0)))))AND(CAST(t0.c43 AS TEXT))) ASC;
SELECT ALL * FROM t0, rt0 NOT INDEXED, v0, vt0 WHERE (UPPER(DISTINCT (- (-1.032807216E9)))) ORDER BY ((((((((CAST(vt0.c0 AS REAL))OR(vt0.c0)))AND((rt0.c0 IN ()))))OR(((t0.c0) BETWEEN (rt0.c2) AND (v0.c0)))))AND('j,|\rZ')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (- (-1.032807216E9)))) IS TRUE)  as count FROM t0, rt0, v0, vt0 ORDER BY ((((((((CAST(vt0.c0 AS REAL))OR(vt0.c0)))AND((rt0.c0 IN ()))))OR(((t0.c0) BETWEEN (rt0.c2) AND (v0.c0)))))AND('j,|\rZ')) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 NOT INDEXED, v0, vt0 WHERE (UPPER(DISTINCT (- (-1.032807216E9)))) ORDER BY ((((((((CAST(vt0.c0 AS REAL))OR(vt0.c0)))AND((rt0.c0 IN ()))))OR(((t0.c0) BETWEEN (rt0.c2) AND (v0.c0)))))AND('j,|\rZ')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (- (-1.032807216E9)))) IS TRUE)  as count FROM t0, rt0, v0, vt0 ORDER BY ((((((((CAST(vt0.c0 AS REAL))OR(vt0.c0)))AND((rt0.c0 IN ()))))OR(((t0.c0) BETWEEN (rt0.c2) AND (v0.c0)))))AND('j,|\rZ')) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 NOT INDEXED, v0, vt0 WHERE (UPPER(DISTINCT (- (-1.032807216E9)))) ORDER BY ((((((((CAST(vt0.c0 AS REAL))OR(vt0.c0)))AND((rt0.c0 IN ()))))OR(((t0.c0) BETWEEN (rt0.c2) AND (v0.c0)))))AND('j,|\rZ')) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0)%(((t0.c43)&(t0.c43))))) ORDER BY CAST(t0.c43 AS TEXT) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)%(((t0.c43)&(t0.c43))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(t0.c43 AS TEXT) COLLATE BINARY);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0)%(((t0.c43)&(t0.c43))))) ORDER BY CAST(t0.c43 AS TEXT) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)%(((t0.c43)&(t0.c43))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(t0.c43 AS TEXT) COLLATE BINARY);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0)%(((t0.c43)&(t0.c43))))) ORDER BY CAST(t0.c43 AS TEXT) COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(v0.c0 AS REAL) COLLATE RTRIM) ORDER BY ((('-2005566620', rt0.c1, rt0.c3, vt0.c0, rt0.c3)) BETWEEN ((rt0.c2, rt0.c3 COLLATE RTRIM, 0.5815335313207559 COLLATE NOCASE, CASE WHEN rt0.c2 THEN 1.448523379E9 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 ELSE v0.c0 END, CASE WHEN '0.5066937081621583' THEN rt0.c1 END)) AND ((NULL, rt0.c0 COLLATE RTRIM, (((rt0.c3, rt0.c2, v0.c0))=((rt0.c0, v0.c0, rt0.c0))), ((((((((rt0.c3)AND(v0.c0)))AND(vt0.c0)))OR(NULL)))OR(rt0.c3)), CASE WHEN -490950995 THEN NULL ELSE '' END))) DESC, 'V蝀 2' ASC  NULLS LAST, (+ (((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((('-2005566620', rt0.c1, rt0.c3, vt0.c0, rt0.c3)) BETWEEN ((rt0.c2, rt0.c3 COLLATE RTRIM, 0.5815335313207559 COLLATE NOCASE, CASE WHEN rt0.c2 THEN 1.448523379E9 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 ELSE v0.c0 END, CASE WHEN '0.5066937081621583' THEN rt0.c1 END)) AND ((NULL, rt0.c0 COLLATE RTRIM, (((rt0.c3, rt0.c2, v0.c0))==((rt0.c0, v0.c0, rt0.c0))), ((((((((rt0.c3)AND(v0.c0)))AND(vt0.c0)))OR(NULL)))OR(rt0.c3)), CASE WHEN -490950995 THEN NULL ELSE '' END))) DESC, 'V蝀 2' ASC  NULLS LAST, (+ (((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(v0.c0 AS REAL) COLLATE RTRIM) ORDER BY ((('-2005566620', rt0.c1, rt0.c3, vt0.c0, rt0.c3)) BETWEEN ((rt0.c2, rt0.c3 COLLATE RTRIM, 0.5815335313207559 COLLATE NOCASE, CASE WHEN rt0.c2 THEN 1.448523379E9 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 ELSE v0.c0 END, CASE WHEN '0.5066937081621583' THEN rt0.c1 END)) AND ((NULL, rt0.c0 COLLATE RTRIM, (((rt0.c3, rt0.c2, v0.c0))=((rt0.c0, v0.c0, rt0.c0))), ((((((((rt0.c3)AND(v0.c0)))AND(vt0.c0)))OR(NULL)))OR(rt0.c3)), CASE WHEN -490950995 THEN NULL ELSE '' END))) DESC, 'V蝀 2' ASC  NULLS LAST, (+ (((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((('-2005566620', rt0.c1, rt0.c3, vt0.c0, rt0.c3)) BETWEEN ((rt0.c2, rt0.c3 COLLATE RTRIM, 0.5815335313207559 COLLATE NOCASE, CASE WHEN rt0.c2 THEN 1.448523379E9 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 ELSE v0.c0 END, CASE WHEN '0.5066937081621583' THEN rt0.c1 END)) AND ((NULL, rt0.c0 COLLATE RTRIM, (((rt0.c3, rt0.c2, v0.c0))==((rt0.c0, v0.c0, rt0.c0))), ((((((((rt0.c3)AND(v0.c0)))AND(vt0.c0)))OR(NULL)))OR(rt0.c3)), CASE WHEN -490950995 THEN NULL ELSE '' END))) DESC, 'V蝀 2' ASC  NULLS LAST, (+ (((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(v0.c0 AS REAL) COLLATE RTRIM) ORDER BY ((('-2005566620', rt0.c1, rt0.c3, vt0.c0, rt0.c3)) BETWEEN ((rt0.c2, rt0.c3 COLLATE RTRIM, 0.5815335313207559 COLLATE NOCASE, CASE WHEN rt0.c2 THEN 1.448523379E9 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 ELSE v0.c0 END, CASE WHEN '0.5066937081621583' THEN rt0.c1 END)) AND ((NULL, rt0.c0 COLLATE RTRIM, (((rt0.c3, rt0.c2, v0.c0))=((rt0.c0, v0.c0, rt0.c0))), ((((((((rt0.c3)AND(v0.c0)))AND(vt0.c0)))OR(NULL)))OR(rt0.c3)), CASE WHEN -490950995 THEN NULL ELSE '' END))) DESC, 'V蝀 2' ASC  NULLS LAST, (+ (((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c3))))  NULLS LAST;
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((LOWER(rt1.c0)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((LOWER(rt1.c0)) IS TRUE) DESC);
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((LOWER(rt1.c0)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((LOWER(rt1.c0)) IS TRUE) DESC);
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((LOWER(rt1.c0)) IS TRUE) DESC;
SELECT * FROM v0, t0 WHERE (CAST(CAST(t0.c1 AS TEXT) AS NUMERIC)) ORDER BY ((((t0.c43)+(t0.c0)))<>(((v0.c0) NOT BETWEEN (0.04175138771897624) AND (NULL))));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c1 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c43)+(t0.c0)))!=(((v0.c0) NOT BETWEEN (0.04175138771897624) AND (NULL)))));
SELECT * FROM v0, t0 WHERE (CAST(CAST(t0.c1 AS TEXT) AS NUMERIC)) ORDER BY ((((t0.c43)+(t0.c0)))<>(((v0.c0) NOT BETWEEN (0.04175138771897624) AND (NULL))));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c1 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c43)+(t0.c0)))!=(((v0.c0) NOT BETWEEN (0.04175138771897624) AND (NULL)))));
SELECT * FROM v0, t0 WHERE (CAST(CAST(t0.c1 AS TEXT) AS NUMERIC)) ORDER BY ((((t0.c43)+(t0.c0)))<>(((v0.c0) NOT BETWEEN (0.04175138771897624) AND (NULL))));
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN rt1 ON ((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ()) FULL OUTER JOIN t0 ON CAST(CASE WHEN rt0.c0 THEN 0.347041926536491 WHEN x'' THEN t0.c0 WHEN rt1.c1 THEN rt0.c2 END AS REAL) WHERE (((((rt0.c2)==(rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND ((((rt1.c2))<((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)=(rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND ((((rt1.c2))<((v0.c0)))))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN rt1 ON ((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ()) FULL OUTER JOIN t0 ON CAST(CASE WHEN rt0.c0 THEN 0.347041926536491 WHEN x'' THEN t0.c0 WHEN rt1.c1 THEN rt0.c2 END AS REAL));
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN rt1 ON ((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ()) FULL OUTER JOIN t0 ON CAST(CASE WHEN rt0.c0 THEN 0.347041926536491 WHEN x'' THEN t0.c0 WHEN rt1.c1 THEN rt0.c2 END AS REAL) WHERE (((((rt0.c2)==(rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND ((((rt1.c2))<((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)=(rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND ((((rt1.c2))<((v0.c0)))))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN rt1 ON ((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ()) FULL OUTER JOIN t0 ON CAST(CASE WHEN rt0.c0 THEN 0.347041926536491 WHEN x'' THEN t0.c0 WHEN rt1.c1 THEN rt0.c2 END AS REAL));
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN rt1 ON ((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ()) FULL OUTER JOIN t0 ON CAST(CASE WHEN rt0.c0 THEN 0.347041926536491 WHEN x'' THEN t0.c0 WHEN rt1.c1 THEN rt0.c2 END AS REAL) WHERE (((((rt0.c2)==(rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND ((((rt1.c2))<((v0.c0))))));
SELECT ALL * FROM vt0, t0, rt1, rt0 WHERE (((((rt0.c0)<=(t0.c0)))GLOB(rt0.c0))) ORDER BY (+ (vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<=(t0.c0)))GLOB(rt0.c0))) IS TRUE)  as count FROM vt0, t0, rt1, rt0 ORDER BY (+ (vt0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt0, t0, rt1, rt0 WHERE (((((rt0.c0)<=(t0.c0)))GLOB(rt0.c0))) ORDER BY (+ (vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<=(t0.c0)))GLOB(rt0.c0))) IS TRUE)  as count FROM vt0, t0, rt1, rt0 ORDER BY (+ (vt0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt0, t0, rt1, rt0 WHERE (((((rt0.c0)<=(t0.c0)))GLOB(rt0.c0))) ORDER BY (+ (vt0.c0)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))>(((rt1.c2) IS TRUE)))) ORDER BY (- (((0.47979210633347136)&(rt1.c0)))) DESC  NULLS LAST, rt1.c1 ASC  NULLS FIRST, json_array(((rt1.c0)>(x'')), rt1.c2 COLLATE RTRIM)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))>(((rt1.c2) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY (- (((0.47979210633347136)&(rt1.c0)))) DESC  NULLS LAST, rt1.c1 ASC  NULLS FIRST, json_array(((rt1.c0)>(x'')), rt1.c2 COLLATE RTRIM)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))>(((rt1.c2) IS TRUE)))) ORDER BY (- (((0.47979210633347136)&(rt1.c0)))) DESC  NULLS LAST, rt1.c1 ASC  NULLS FIRST, json_array(((rt1.c0)>(x'')), rt1.c2 COLLATE RTRIM)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))>(((rt1.c2) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY (- (((0.47979210633347136)&(rt1.c0)))) DESC  NULLS LAST, rt1.c1 ASC  NULLS FIRST, json_array(((rt1.c0)>(x'')), rt1.c2 COLLATE RTRIM)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))>(((rt1.c2) IS TRUE)))) ORDER BY (- (((0.47979210633347136)&(rt1.c0)))) DESC  NULLS LAST, rt1.c1 ASC  NULLS FIRST, json_array(((rt1.c0)>(x'')), rt1.c2 COLLATE RTRIM)  NULLS LAST;
SELECT ALL * FROM vt0, t0, v0, rt0, rt1 WHERE (((CASE WHEN t0.c0 THEN v0.c0 ELSE rt0.c1 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN v0.c0 ELSE rt0.c1 END) IS TRUE)) IS TRUE)  as count FROM vt0, t0, v0, rt0, rt1);
SELECT ALL * FROM vt0, t0, v0, rt0, rt1 WHERE (((CASE WHEN t0.c0 THEN v0.c0 ELSE rt0.c1 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN v0.c0 ELSE rt0.c1 END) IS TRUE)) IS TRUE)  as count FROM vt0, t0, v0, rt0, rt1);
SELECT ALL * FROM vt0, t0, v0, rt0, rt1 WHERE (((CASE WHEN t0.c0 THEN v0.c0 ELSE rt0.c1 END) IS TRUE));
SELECT ALL COUNT(*) FROM v0, t0, rt0, rt1, vt0 WHERE (((('8hMQ', vt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c1)<<(rt0.c2)), CAST(rt1.c0 AS TEXT), (((v0.c0)) BETWEEN ((rt0.c2)) AND (('272385004'))))) AND ((((0.1603178009253644)<<(t0.c0)), ((NULL)&(vt0.c0)), ((rt0.c1) BETWEEN ('-2082350239') AND (t0.c1))))));
SELECT SUM(count) FROM (SELECT ((((('8hMQ', vt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c1)<<(rt0.c2)), CAST(rt1.c0 AS TEXT), (((v0.c0)) BETWEEN ((rt0.c2)) AND (('272385004'))))) AND ((((0.1603178009253644)<<(t0.c0)), ((NULL)&(vt0.c0)), ((rt0.c1) BETWEEN ('-2082350239') AND (t0.c1)))))) IS TRUE)  as count FROM v0, t0, rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM v0, t0, rt0, rt1, vt0 WHERE (((('8hMQ', vt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c1)<<(rt0.c2)), CAST(rt1.c0 AS TEXT), (((v0.c0)) BETWEEN ((rt0.c2)) AND (('272385004'))))) AND ((((0.1603178009253644)<<(t0.c0)), ((NULL)&(vt0.c0)), ((rt0.c1) BETWEEN ('-2082350239') AND (t0.c1))))));
SELECT SUM(count) FROM (SELECT ((((('8hMQ', vt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c1)<<(rt0.c2)), CAST(rt1.c0 AS TEXT), (((v0.c0)) BETWEEN ((rt0.c2)) AND (('272385004'))))) AND ((((0.1603178009253644)<<(t0.c0)), ((NULL)&(vt0.c0)), ((rt0.c1) BETWEEN ('-2082350239') AND (t0.c1)))))) IS TRUE)  as count FROM v0, t0, rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM v0, t0, rt0, rt1, vt0 WHERE (((('8hMQ', vt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c1)<<(rt0.c2)), CAST(rt1.c0 AS TEXT), (((v0.c0)) BETWEEN ((rt0.c2)) AND (('272385004'))))) AND ((((0.1603178009253644)<<(t0.c0)), ((NULL)&(vt0.c0)), ((rt0.c1) BETWEEN ('-2082350239') AND (t0.c1))))));
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c43)==(t0.c0)) THEN (t0.c0 IN ()) END) ORDER BY CASE WHEN CAST(x'' AS BLOB) THEN CASE WHEN t0.c43 THEN t0.c1 WHEN t0.c1 THEN 1.257179319E9 WHEN t0.c0 THEN t0.c0 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c43)=(t0.c0)) THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(x'' AS BLOB) THEN CASE WHEN t0.c43 THEN t0.c1 WHEN t0.c1 THEN 1.257179319E9 WHEN t0.c0 THEN t0.c0 END END ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c43)==(t0.c0)) THEN (t0.c0 IN ()) END) ORDER BY CASE WHEN CAST(x'' AS BLOB) THEN CASE WHEN t0.c43 THEN t0.c1 WHEN t0.c1 THEN 1.257179319E9 WHEN t0.c0 THEN t0.c0 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c43)=(t0.c0)) THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(x'' AS BLOB) THEN CASE WHEN t0.c43 THEN t0.c1 WHEN t0.c1 THEN 1.257179319E9 WHEN t0.c0 THEN t0.c0 END END ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c43)==(t0.c0)) THEN (t0.c0 IN ()) END) ORDER BY CASE WHEN CAST(x'' AS BLOB) THEN CASE WHEN t0.c43 THEN t0.c1 WHEN t0.c1 THEN 1.257179319E9 WHEN t0.c0 THEN t0.c0 END END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0, t0 FULL OUTER JOIN rt0 ON (((vt0.c0)AND(t0.c43)) IN ()) WHERE (((NULLIF(1.896676351E9, t0.c0))<(((rt0.c1)/(rt0.c0))))) ORDER BY (- (TYPEOF(rt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(1.896676351E9, t0.c0))<(((rt0.c1)/(rt0.c0))))) IS TRUE)  as count FROM v0, vt0, t0 FULL OUTER JOIN rt0 ON (((vt0.c0)AND(t0.c43)) IN ()) ORDER BY (- (TYPEOF(rt0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 FULL OUTER JOIN rt0 ON (((vt0.c0)AND(t0.c43)) IN ()) WHERE (((NULLIF(1.896676351E9, t0.c0))<(((rt0.c1)/(rt0.c0))))) ORDER BY (- (TYPEOF(rt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(1.896676351E9, t0.c0))<(((rt0.c1)/(rt0.c0))))) IS TRUE)  as count FROM v0, vt0, t0 FULL OUTER JOIN rt0 ON (((vt0.c0)AND(t0.c43)) IN ()) ORDER BY (- (TYPEOF(rt0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 FULL OUTER JOIN rt0 ON (((vt0.c0)AND(t0.c43)) IN ()) WHERE (((NULLIF(1.896676351E9, t0.c0))<(((rt0.c1)/(rt0.c0))))) ORDER BY (- (TYPEOF(rt0.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((+ (rt0.c2)))*(((rt0.c2)%(rt0.c1))))) ORDER BY NULL COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))*(((rt0.c2)%(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((+ (rt0.c2)))*(((rt0.c2)%(rt0.c1))))) ORDER BY NULL COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))*(((rt0.c2)%(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((+ (rt0.c2)))*(((rt0.c2)%(rt0.c1))))) ORDER BY NULL COLLATE BINARY ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, rt1, v0, vt0 WHERE (((CAST(rt0.c0 AS INTEGER))-(((((((((((((((((vt0.c0)AND(rt0.c1)))OR(rt1.c2)))AND(t0.c1)))OR(rt1.c1)))AND(t0.c43)))OR(vt0.c0)))AND(x'')))OR(t0.c1))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))-(((((((((((((((((vt0.c0)AND(rt0.c1)))OR(rt1.c2)))AND(t0.c1)))OR(rt1.c1)))AND(t0.c43)))OR(vt0.c0)))AND(x'')))OR(t0.c1))))) IS TRUE)  as count FROM rt0, t0, rt1, v0, vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, rt1, v0, vt0 WHERE (((CAST(rt0.c0 AS INTEGER))-(((((((((((((((((vt0.c0)AND(rt0.c1)))OR(rt1.c2)))AND(t0.c1)))OR(rt1.c1)))AND(t0.c43)))OR(vt0.c0)))AND(x'')))OR(t0.c1))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))-(((((((((((((((((vt0.c0)AND(rt0.c1)))OR(rt1.c2)))AND(t0.c1)))OR(rt1.c1)))AND(t0.c43)))OR(vt0.c0)))AND(x'')))OR(t0.c1))))) IS TRUE)  as count FROM rt0, t0, rt1, v0, vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, rt1, v0, vt0 WHERE (((CAST(rt0.c0 AS INTEGER))-(((((((((((((((((vt0.c0)AND(rt0.c1)))OR(rt1.c2)))AND(t0.c1)))OR(rt1.c1)))AND(t0.c43)))OR(vt0.c0)))AND(x'')))OR(t0.c1))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, v0, vt0 WHERE (CAST(((((v0.c0)OR(v0.c0)))AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)OR(v0.c0)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, t0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, v0, vt0 WHERE (CAST(((((v0.c0)OR(v0.c0)))AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)OR(v0.c0)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, t0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, v0, vt0 WHERE (CAST(((((v0.c0)OR(v0.c0)))AND(vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM rt1, vt0, v0, t0 WHERE (CAST(((rt1.c1) NOT BETWEEN (t0.c43) AND (t0.c0)) AS BLOB)) ORDER BY rt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) NOT BETWEEN (t0.c43) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM rt1, vt0, v0, t0 ORDER BY rt1.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, v0, t0 WHERE (CAST(((rt1.c1) NOT BETWEEN (t0.c43) AND (t0.c0)) AS BLOB)) ORDER BY rt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) NOT BETWEEN (t0.c43) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM rt1, vt0, v0, t0 ORDER BY rt1.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, v0, t0 WHERE (CAST(((rt1.c1) NOT BETWEEN (t0.c43) AND (t0.c0)) AS BLOB)) ORDER BY rt1.c1 DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 CROSS JOIN t0 ON ((((((((t0.c43)AND(vt0.c0)))AND(t0.c43)))AND(0X78bdd6a2)))AND(((v0.c0)/(t0.c43)))) INNER JOIN rt1 ON LOWER(DISTINCT ((rt1.c1)LIKE(vt0.c0))) WHERE ((NOT (((t0.c1)>=(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c1)>=(t0.c1))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON ((((((((t0.c43)AND(vt0.c0)))AND(t0.c43)))AND(0x78bdd6a2)))AND(((v0.c0)/(t0.c43)))) INNER JOIN rt1 ON LOWER(DISTINCT ((rt1.c1)LIKE(vt0.c0))));
SELECT ALL * FROM v0, vt0 CROSS JOIN t0 ON ((((((((t0.c43)AND(vt0.c0)))AND(t0.c43)))AND(0X78bdd6a2)))AND(((v0.c0)/(t0.c43)))) INNER JOIN rt1 ON LOWER(DISTINCT ((rt1.c1)LIKE(vt0.c0))) WHERE ((NOT (((t0.c1)>=(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c1)>=(t0.c1))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON ((((((((t0.c43)AND(vt0.c0)))AND(t0.c43)))AND(0x78bdd6a2)))AND(((v0.c0)/(t0.c43)))) INNER JOIN rt1 ON LOWER(DISTINCT ((rt1.c1)LIKE(vt0.c0))));
SELECT ALL * FROM v0, vt0 CROSS JOIN t0 ON ((((((((t0.c43)AND(vt0.c0)))AND(t0.c43)))AND(0X78bdd6a2)))AND(((v0.c0)/(t0.c43)))) INNER JOIN rt1 ON LOWER(DISTINCT ((rt1.c1)LIKE(vt0.c0))) WHERE ((NOT (((t0.c1)>=(t0.c1)))));
SELECT ALL * FROM vt0 WHERE (x'ffd9963c') ORDER BY ((((vt0.c0, 'ᇺ', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((x'ffd9963c') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0, 'ᇺ', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ()) ASC);
SELECT ALL * FROM vt0 WHERE (x'ffd9963c') ORDER BY ((((vt0.c0, 'ᇺ', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((x'ffd9963c') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0, 'ᇺ', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ()) ASC);
SELECT ALL * FROM vt0 WHERE (x'ffd9963c') ORDER BY ((((vt0.c0, 'ᇺ', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ()) ASC;
SELECT ALL * FROM rt1, v0, rt0, t0 RIGHT OUTER JOIN vt0 ON TOTAL_CHANGES() WHERE (((((t0.c0)<>(rt0.c2))) NOT NULL)) ORDER BY ((((((((((rt1.c2)<=(vt0.c0)))AND(CAST(t0.c0 AS NUMERIC))))AND(((((t0.c0)AND(NULL)))OR(rt0.c0)))))AND(CAST(t0.c1 AS REAL))))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<>(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt1, v0, rt0, t0 RIGHT OUTER JOIN vt0 ON TOTAL_CHANGES() ORDER BY ((((((((((rt1.c2)<=(vt0.c0)))AND(CAST(t0.c0 AS NUMERIC))))AND(((((t0.c0)AND(NULL)))OR(rt0.c0)))))AND(CAST(t0.c1 AS REAL))))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c0))))));
SELECT ALL * FROM rt1, v0, rt0, t0 RIGHT OUTER JOIN vt0 ON TOTAL_CHANGES() WHERE (((((t0.c0)<>(rt0.c2))) NOT NULL)) ORDER BY ((((((((((rt1.c2)<=(vt0.c0)))AND(CAST(t0.c0 AS NUMERIC))))AND(((((t0.c0)AND(NULL)))OR(rt0.c0)))))AND(CAST(t0.c1 AS REAL))))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<>(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt1, v0, rt0, t0 RIGHT OUTER JOIN vt0 ON TOTAL_CHANGES() ORDER BY ((((((((((rt1.c2)<=(vt0.c0)))AND(CAST(t0.c0 AS NUMERIC))))AND(((((t0.c0)AND(NULL)))OR(rt0.c0)))))AND(CAST(t0.c1 AS REAL))))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c0))))));
SELECT ALL * FROM rt1, v0, rt0, t0 RIGHT OUTER JOIN vt0 ON TOTAL_CHANGES() WHERE (((((t0.c0)<>(rt0.c2))) NOT NULL)) ORDER BY ((((((((((rt1.c2)<=(vt0.c0)))AND(CAST(t0.c0 AS NUMERIC))))AND(((((t0.c0)AND(NULL)))OR(rt0.c0)))))AND(CAST(t0.c1 AS REAL))))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c0)))));
SELECT * FROM vt0 CROSS JOIN rt1 ON LIKELIHOOD(rt1.c0 COLLATE NOCASE, 0.321371144466449) WHERE (((((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))) NOT NULL)) ORDER BY (((+ (rt1.c1)))/('-1341922996')) DESC, CAST(rt1.c0 AS TEXT) DESC  NULLS LAST, CASE WHEN (rt1.c0 IN ()) THEN ((((rt1.c1)AND(rt1.c1)))OR(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON LIKELIHOOD(rt1.c0 COLLATE NOCASE, 0.321371144466449) ORDER BY (((+ (rt1.c1)))/('-1341922996')) DESC, CAST(rt1.c0 AS TEXT) DESC  NULLS LAST, CASE WHEN (rt1.c0 IN ()) THEN ((((rt1.c1)AND(rt1.c1)))OR(vt0.c0)) END ASC);
SELECT * FROM vt0 CROSS JOIN rt1 ON LIKELIHOOD(rt1.c0 COLLATE NOCASE, 0.321371144466449) WHERE (((((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))) NOT NULL)) ORDER BY (((+ (rt1.c1)))/('-1341922996')) DESC, CAST(rt1.c0 AS TEXT) DESC  NULLS LAST, CASE WHEN (rt1.c0 IN ()) THEN ((((rt1.c1)AND(rt1.c1)))OR(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON LIKELIHOOD(rt1.c0 COLLATE NOCASE, 0.321371144466449) ORDER BY (((+ (rt1.c1)))/('-1341922996')) DESC, CAST(rt1.c0 AS TEXT) DESC  NULLS LAST, CASE WHEN (rt1.c0 IN ()) THEN ((((rt1.c1)AND(rt1.c1)))OR(vt0.c0)) END ASC);
SELECT * FROM vt0 CROSS JOIN rt1 ON LIKELIHOOD(rt1.c0 COLLATE NOCASE, 0.321371144466449) WHERE (((((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))) NOT NULL)) ORDER BY (((+ (rt1.c1)))/('-1341922996')) DESC, CAST(rt1.c0 AS TEXT) DESC  NULLS LAST, CASE WHEN (rt1.c0 IN ()) THEN ((((rt1.c1)AND(rt1.c1)))OR(vt0.c0)) END ASC;
SELECT * FROM t0 WHERE (((t0.c1 IN (t0.c0)) IN (((('992884305')) NOT BETWEEN ((t0.c1)) AND ((t0.c43)))))) ORDER BY ((((((t0.c1)AND(t0.c0)))AND(x''))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c1 IN (t0.c0)) IN (((('992884305')) NOT BETWEEN ((t0.c1)) AND ((t0.c43)))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)AND(t0.c0)))AND(x''))) ISNULL) ASC);
SELECT * FROM t0 WHERE (((t0.c1 IN (t0.c0)) IN (((('992884305')) NOT BETWEEN ((t0.c1)) AND ((t0.c43)))))) ORDER BY ((((((t0.c1)AND(t0.c0)))AND(x''))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c1 IN (t0.c0)) IN (((('992884305')) NOT BETWEEN ((t0.c1)) AND ((t0.c43)))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)AND(t0.c0)))AND(x''))) ISNULL) ASC);
SELECT * FROM t0 WHERE (((t0.c1 IN (t0.c0)) IN (((('992884305')) NOT BETWEEN ((t0.c1)) AND ((t0.c43)))))) ORDER BY ((((((t0.c1)AND(t0.c0)))AND(x''))) ISNULL) ASC;
SELECT * FROM t0, vt0, rt1, rt0, v0 WHERE ((- (((vt0.c0)<<(NULL))))) ORDER BY (((((t0.c43)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN ((((rt1.c0)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0)))) AND ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)<<(NULL))))) IS TRUE)  as count FROM t0, vt0, rt1, rt0, v0 ORDER BY (((((t0.c43)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN ((((rt1.c0)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0)))) AND ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))))  NULLS FIRST);
SELECT * FROM t0, vt0, rt1, rt0, v0 WHERE ((- (((vt0.c0)<<(NULL))))) ORDER BY (((((t0.c43)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN ((((rt1.c0)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0)))) AND ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)<<(NULL))))) IS TRUE)  as count FROM t0, vt0, rt1, rt0, v0 ORDER BY (((((t0.c43)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN ((((rt1.c0)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0)))) AND ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))))  NULLS FIRST);
SELECT * FROM t0, vt0, rt1, rt0, v0 WHERE ((- (((vt0.c0)<<(NULL))))) ORDER BY (((((t0.c43)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN ((((rt1.c0)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0)))) AND ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 NOT INDEXED FULL OUTER JOIN rt0 ON CASE WHEN (((rt0.c3)) NOT BETWEEN ((t0.c43)) AND ((rt0.c3))) THEN LIKELIHOOD(rt0.c1, 0.29545131212586173) ELSE ((rt0.c0) BETWEEN (t0.c43) AND (rt0.c0)) END WHERE (CAST(CAST(rt0.c2 AS INTEGER) AS BLOB)) ORDER BY (((((((((((((((rt0.c1))=((rt0.c3))))OR(t0.c0 COLLATE NOCASE)))AND((((rt0.c2, v0.c0, t0.c1))!=((t0.c1, rt0.c2, rt0.c0))))))OR(((((v0.c0)OR(t0.c43)))OR(rt0.c0)))))AND((0.6478390749076866 IN ()))))OR(CASE v0.c0  WHEN -313054636 THEN rt0.c1 ELSE rt0.c3 END)))AND(t0.c43 COLLATE RTRIM))  NULLS FIRST, (((((rt0.c0)AND(rt0.c0)))OR(t0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN rt0 ON CASE WHEN (((rt0.c3)) NOT BETWEEN ((t0.c43)) AND ((rt0.c3))) THEN LIKELIHOOD(rt0.c1, 0.29545131212586173) ELSE ((rt0.c0) BETWEEN (t0.c43) AND (rt0.c0)) END ORDER BY (((((((((((((((rt0.c1))==((rt0.c3))))OR(t0.c0 COLLATE NOCASE)))AND((((rt0.c2, v0.c0, t0.c1))!=((t0.c1, rt0.c2, rt0.c0))))))OR(((((v0.c0)OR(t0.c43)))OR(rt0.c0)))))AND((0.6478390749076866 IN ()))))OR(CASE v0.c0  WHEN -313054636 THEN rt0.c1 ELSE rt0.c3 END)))AND(t0.c43 COLLATE RTRIM))  NULLS FIRST, (((((rt0.c0)AND(rt0.c0)))OR(t0.c1)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 NOT INDEXED FULL OUTER JOIN rt0 ON CASE WHEN (((rt0.c3)) NOT BETWEEN ((t0.c43)) AND ((rt0.c3))) THEN LIKELIHOOD(rt0.c1, 0.29545131212586173) ELSE ((rt0.c0) BETWEEN (t0.c43) AND (rt0.c0)) END WHERE (CAST(CAST(rt0.c2 AS INTEGER) AS BLOB)) ORDER BY (((((((((((((((rt0.c1))=((rt0.c3))))OR(t0.c0 COLLATE NOCASE)))AND((((rt0.c2, v0.c0, t0.c1))!=((t0.c1, rt0.c2, rt0.c0))))))OR(((((v0.c0)OR(t0.c43)))OR(rt0.c0)))))AND((0.6478390749076866 IN ()))))OR(CASE v0.c0  WHEN -313054636 THEN rt0.c1 ELSE rt0.c3 END)))AND(t0.c43 COLLATE RTRIM))  NULLS FIRST, (((((rt0.c0)AND(rt0.c0)))OR(t0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN rt0 ON CASE WHEN (((rt0.c3)) NOT BETWEEN ((t0.c43)) AND ((rt0.c3))) THEN LIKELIHOOD(rt0.c1, 0.29545131212586173) ELSE ((rt0.c0) BETWEEN (t0.c43) AND (rt0.c0)) END ORDER BY (((((((((((((((rt0.c1))==((rt0.c3))))OR(t0.c0 COLLATE NOCASE)))AND((((rt0.c2, v0.c0, t0.c1))!=((t0.c1, rt0.c2, rt0.c0))))))OR(((((v0.c0)OR(t0.c43)))OR(rt0.c0)))))AND((0.6478390749076866 IN ()))))OR(CASE v0.c0  WHEN -313054636 THEN rt0.c1 ELSE rt0.c3 END)))AND(t0.c43 COLLATE RTRIM))  NULLS FIRST, (((((rt0.c0)AND(rt0.c0)))OR(t0.c1)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 NOT INDEXED FULL OUTER JOIN rt0 ON CASE WHEN (((rt0.c3)) NOT BETWEEN ((t0.c43)) AND ((rt0.c3))) THEN LIKELIHOOD(rt0.c1, 0.29545131212586173) ELSE ((rt0.c0) BETWEEN (t0.c43) AND (rt0.c0)) END WHERE (CAST(CAST(rt0.c2 AS INTEGER) AS BLOB)) ORDER BY (((((((((((((((rt0.c1))=((rt0.c3))))OR(t0.c0 COLLATE NOCASE)))AND((((rt0.c2, v0.c0, t0.c1))!=((t0.c1, rt0.c2, rt0.c0))))))OR(((((v0.c0)OR(t0.c43)))OR(rt0.c0)))))AND((0.6478390749076866 IN ()))))OR(CASE v0.c0  WHEN -313054636 THEN rt0.c1 ELSE rt0.c3 END)))AND(t0.c43 COLLATE RTRIM))  NULLS FIRST, (((((rt0.c0)AND(rt0.c0)))OR(t0.c1)) IN ()) ASC  NULLS LAST;
SELECT * FROM v0 NOT INDEXED WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 NOT INDEXED WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 NOT INDEXED WHERE (v0.c0);
SELECT * FROM t0 WHERE (((((CAST(t0.c1 AS NUMERIC))AND(CAST(t0.c43 AS BLOB))))OR(CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY t0.c1 ASC, ((((t0.c43) BETWEEN (t0.c1) AND (t0.c1))) NOT BETWEEN (((t0.c43)/(t0.c0))) AND (((t0.c0)&(t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c1 AS NUMERIC))AND(CAST(t0.c43 AS BLOB))))OR(CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY t0.c1 ASC, ((((t0.c43) BETWEEN (t0.c1) AND (t0.c1))) NOT BETWEEN (((t0.c43)/(t0.c0))) AND (((t0.c0)&(t0.c0)))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((((CAST(t0.c1 AS NUMERIC))AND(CAST(t0.c43 AS BLOB))))OR(CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY t0.c1 ASC, ((((t0.c43) BETWEEN (t0.c1) AND (t0.c1))) NOT BETWEEN (((t0.c43)/(t0.c0))) AND (((t0.c0)&(t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c1 AS NUMERIC))AND(CAST(t0.c43 AS BLOB))))OR(CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY t0.c1 ASC, ((((t0.c43) BETWEEN (t0.c1) AND (t0.c1))) NOT BETWEEN (((t0.c43)/(t0.c0))) AND (((t0.c0)&(t0.c0)))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((((CAST(t0.c1 AS NUMERIC))AND(CAST(t0.c43 AS BLOB))))OR(CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY t0.c1 ASC, ((((t0.c43) BETWEEN (t0.c1) AND (t0.c1))) NOT BETWEEN (((t0.c43)/(t0.c0))) AND (((t0.c0)&(t0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT COUNT(*) FROM t0, rt1, v0, vt0, rt0 WHERE ((((rt1.c2, 0.02246787967311581, '0.7418238365661597')) NOT BETWEEN ((NULL, ((((t0.c1)OR(rt1.c2)))AND(rt1.c2)), ((((((((((((v0.c0)OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c2)))OR(rt0.c0)))AND(rt0.c0)))) AND ((((((x'4fed')OR(rt0.c2)))OR(rt1.c1)), (((rt1.c1)) BETWEEN ((t0.c0)) AND ((rt0.c0))), ((rt0.c0)!=(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, 0.02246787967311581, '0.7418238365661597')) NOT BETWEEN ((NULL, ((((t0.c1)OR(rt1.c2)))AND(rt1.c2)), ((((((((((((v0.c0)OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c2)))OR(rt0.c0)))AND(rt0.c0)))) AND ((((((x'4fed')OR(rt0.c2)))OR(rt1.c1)), (((rt1.c1)) BETWEEN ((t0.c0)) AND ((rt0.c0))), ((rt0.c0)!=(rt0.c1)))))) IS TRUE)  as count FROM t0, rt1, v0, vt0, rt0);
SELECT COUNT(*) FROM t0, rt1, v0, vt0, rt0 WHERE ((((rt1.c2, 0.02246787967311581, '0.7418238365661597')) NOT BETWEEN ((NULL, ((((t0.c1)OR(rt1.c2)))AND(rt1.c2)), ((((((((((((v0.c0)OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c2)))OR(rt0.c0)))AND(rt0.c0)))) AND ((((((x'4fed')OR(rt0.c2)))OR(rt1.c1)), (((rt1.c1)) BETWEEN ((t0.c0)) AND ((rt0.c0))), ((rt0.c0)!=(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, 0.02246787967311581, '0.7418238365661597')) NOT BETWEEN ((NULL, ((((t0.c1)OR(rt1.c2)))AND(rt1.c2)), ((((((((((((v0.c0)OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c2)))OR(rt0.c0)))AND(rt0.c0)))) AND ((((((x'4fed')OR(rt0.c2)))OR(rt1.c1)), (((rt1.c1)) BETWEEN ((t0.c0)) AND ((rt0.c0))), ((rt0.c0)!=(rt0.c1)))))) IS TRUE)  as count FROM t0, rt1, v0, vt0, rt0);
SELECT COUNT(*) FROM t0, rt1, v0, vt0, rt0 WHERE ((((rt1.c2, 0.02246787967311581, '0.7418238365661597')) NOT BETWEEN ((NULL, ((((t0.c1)OR(rt1.c2)))AND(rt1.c2)), ((((((((((((v0.c0)OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c2)))OR(rt0.c0)))AND(rt0.c0)))) AND ((((((x'4fed')OR(rt0.c2)))OR(rt1.c1)), (((rt1.c1)) BETWEEN ((t0.c0)) AND ((rt0.c0))), ((rt0.c0)!=(rt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CASE WHEN ((t0.c0)=(v0.c0)) THEN CASE t0.c1  WHEN t0.c0 THEN t0.c1 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)=(v0.c0)) THEN CASE t0.c1  WHEN t0.c0 THEN t0.c1 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CASE WHEN ((t0.c0)=(v0.c0)) THEN CASE t0.c1  WHEN t0.c0 THEN t0.c1 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)=(v0.c0)) THEN CASE t0.c1  WHEN t0.c0 THEN t0.c1 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CASE WHEN ((t0.c0)=(v0.c0)) THEN CASE t0.c1  WHEN t0.c0 THEN t0.c1 ELSE vt0.c0 END END);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((NOT (t0.c43)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (t0.c43)) IN ())) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((NOT (t0.c43)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (t0.c43)) IN ())) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((NOT (t0.c43)) IN ()));
SELECT ALL COUNT(*) FROM rt0, v0 FULL OUTER JOIN rt1 ON ((v0.c0 COLLATE BINARY) NOT NULL) WHERE (CASE WHEN ((((((((rt0.c3)AND(x'')))OR(rt0.c2)))AND(NULL)))OR(rt1.c0)) THEN ((rt1.c2)||(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c3)AND(x'')))OR(rt0.c2)))AND(NULL)))OR(rt1.c0)) THEN ((rt1.c2)||(rt0.c1)) END) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN rt1 ON ((v0.c0 COLLATE BINARY) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, v0 FULL OUTER JOIN rt1 ON ((v0.c0 COLLATE BINARY) NOT NULL) WHERE (CASE WHEN ((((((((rt0.c3)AND(x'')))OR(rt0.c2)))AND(NULL)))OR(rt1.c0)) THEN ((rt1.c2)||(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c3)AND(x'')))OR(rt0.c2)))AND(NULL)))OR(rt1.c0)) THEN ((rt1.c2)||(rt0.c1)) END) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN rt1 ON ((v0.c0 COLLATE BINARY) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, v0 FULL OUTER JOIN rt1 ON ((v0.c0 COLLATE BINARY) NOT NULL) WHERE (CASE WHEN ((((((((rt0.c3)AND(x'')))OR(rt0.c2)))AND(NULL)))OR(rt1.c0)) THEN ((rt1.c2)||(rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt0, v0, rt1, t0, vt0 WHERE ((- (NULLIF(t0.c43, t0.c1)))) ORDER BY (((((rt1.c1) NOT NULL)))!=((0.33069464837397367)));
SELECT SUM(count) FROM (SELECT (((- (NULLIF(t0.c43, t0.c1)))) IS TRUE)  as count FROM rt0, v0, rt1, t0, vt0 ORDER BY (((((rt1.c1) NOT NULL)))!=((0.33069464837397367))));
SELECT ALL COUNT(*) FROM rt0, v0, rt1, t0, vt0 WHERE ((- (NULLIF(t0.c43, t0.c1)))) ORDER BY (((((rt1.c1) NOT NULL)))!=((0.33069464837397367)));
SELECT SUM(count) FROM (SELECT (((- (NULLIF(t0.c43, t0.c1)))) IS TRUE)  as count FROM rt0, v0, rt1, t0, vt0 ORDER BY (((((rt1.c1) NOT NULL)))!=((0.33069464837397367))));
SELECT ALL COUNT(*) FROM rt0, v0, rt1, t0, vt0 WHERE ((- (NULLIF(t0.c43, t0.c1)))) ORDER BY (((((rt1.c1) NOT NULL)))!=((0.33069464837397367)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON 4.02317073E8 CROSS JOIN v0 ON ((rt0.c2) NOT NULL) COLLATE RTRIM WHERE (CASE WHEN (((vt0.c0))<>((rt0.c1))) THEN ((rt0.c2) IS TRUE) WHEN ((((((((((((v0.c0)AND(vt0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(rt0.c2)))AND(rt0.c1)) THEN ((rt0.c2) BETWEEN (0.27454611284508823) AND (v0.c0)) WHEN (((v0.c0))<((rt0.c0))) THEN ((rt0.c3)==(rt0.c2)) ELSE ((rt0.c3)>=(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0))<>((rt0.c1))) THEN ((rt0.c2) IS TRUE) WHEN ((((((((((((v0.c0)AND(vt0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(rt0.c2)))AND(rt0.c1)) THEN ((rt0.c2) BETWEEN (0.27454611284508823) AND (v0.c0)) WHEN (((v0.c0))<((rt0.c0))) THEN ((rt0.c3)==(rt0.c2)) ELSE ((rt0.c3)>=(rt0.c3)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON 4.02317073E8 CROSS JOIN v0 ON ((rt0.c2) NOT NULL) COLLATE RTRIM);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON 4.02317073E8 CROSS JOIN v0 ON ((rt0.c2) NOT NULL) COLLATE RTRIM WHERE (CASE WHEN (((vt0.c0))<>((rt0.c1))) THEN ((rt0.c2) IS TRUE) WHEN ((((((((((((v0.c0)AND(vt0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(rt0.c2)))AND(rt0.c1)) THEN ((rt0.c2) BETWEEN (0.27454611284508823) AND (v0.c0)) WHEN (((v0.c0))<((rt0.c0))) THEN ((rt0.c3)==(rt0.c2)) ELSE ((rt0.c3)>=(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0))<>((rt0.c1))) THEN ((rt0.c2) IS TRUE) WHEN ((((((((((((v0.c0)AND(vt0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(rt0.c2)))AND(rt0.c1)) THEN ((rt0.c2) BETWEEN (0.27454611284508823) AND (v0.c0)) WHEN (((v0.c0))<((rt0.c0))) THEN ((rt0.c3)==(rt0.c2)) ELSE ((rt0.c3)>=(rt0.c3)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON 4.02317073E8 CROSS JOIN v0 ON ((rt0.c2) NOT NULL) COLLATE RTRIM);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON 4.02317073E8 CROSS JOIN v0 ON ((rt0.c2) NOT NULL) COLLATE RTRIM WHERE (CASE WHEN (((vt0.c0))<>((rt0.c1))) THEN ((rt0.c2) IS TRUE) WHEN ((((((((((((v0.c0)AND(vt0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(rt0.c2)))AND(rt0.c1)) THEN ((rt0.c2) BETWEEN (0.27454611284508823) AND (v0.c0)) WHEN (((v0.c0))<((rt0.c0))) THEN ((rt0.c3)==(rt0.c2)) ELSE ((rt0.c3)>=(rt0.c3)) END);
SELECT ALL * FROM vt0, rt1 WHERE ((((vt0.c0, vt0.c0, rt1.c0)) BETWEEN ((CASE 0.3823692456934302  WHEN rt1.c1 THEN rt1.c0 END, 1050368417, (((rt1.c1))==((rt1.c1))))) AND ((rt1.c1, rt1.c2, rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, rt1.c0)) BETWEEN ((CASE 0.3823692456934302  WHEN rt1.c1 THEN rt1.c0 END, 1050368417, (((rt1.c1))=((rt1.c1))))) AND ((rt1.c1, rt1.c2, rt1.c2)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((vt0.c0, vt0.c0, rt1.c0)) BETWEEN ((CASE 0.3823692456934302  WHEN rt1.c1 THEN rt1.c0 END, 1050368417, (((rt1.c1))==((rt1.c1))))) AND ((rt1.c1, rt1.c2, rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, rt1.c0)) BETWEEN ((CASE 0.3823692456934302  WHEN rt1.c1 THEN rt1.c0 END, 1050368417, (((rt1.c1))=((rt1.c1))))) AND ((rt1.c1, rt1.c2, rt1.c2)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((vt0.c0, vt0.c0, rt1.c0)) BETWEEN ((CASE 0.3823692456934302  WHEN rt1.c1 THEN rt1.c0 END, 1050368417, (((rt1.c1))==((rt1.c1))))) AND ((rt1.c1, rt1.c2, rt1.c2))));
SELECT ALL * FROM rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (NULL);
SELECT * FROM rt1, v0, vt0 WHERE (CASE (NOT (rt1.c2))  WHEN rt1.c0 COLLATE NOCASE THEN ((rt1.c1) BETWEEN (vt0.c0) AND (v0.c0)) ELSE ((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) END) ORDER BY (COALESCE(vt0.c0, rt1.c1) IN ());
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt1.c2))  WHEN rt1.c0 COLLATE NOCASE THEN ((rt1.c1) BETWEEN (vt0.c0) AND (v0.c0)) ELSE ((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) END) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY (COALESCE(vt0.c0, rt1.c1) IN ()));
SELECT * FROM rt1, v0, vt0 WHERE (CASE (NOT (rt1.c2))  WHEN rt1.c0 COLLATE NOCASE THEN ((rt1.c1) BETWEEN (vt0.c0) AND (v0.c0)) ELSE ((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) END) ORDER BY (COALESCE(vt0.c0, rt1.c1) IN ());
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt1.c2))  WHEN rt1.c0 COLLATE NOCASE THEN ((rt1.c1) BETWEEN (vt0.c0) AND (v0.c0)) ELSE ((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) END) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY (COALESCE(vt0.c0, rt1.c1) IN ()));
SELECT * FROM rt1, v0, vt0 WHERE (CASE (NOT (rt1.c2))  WHEN rt1.c0 COLLATE NOCASE THEN ((rt1.c1) BETWEEN (vt0.c0) AND (v0.c0)) ELSE ((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) END) ORDER BY (COALESCE(vt0.c0, rt1.c1) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((vt0.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0, v0, rt0 CROSS JOIN rt1 ON (((NOT (t0.c0))) NOT BETWEEN (((v0.c0)/('0.27454611284508823'))) AND ((- (rt0.c0)))) WHERE ((- (((rt1.c1)>=(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c1)>=(v0.c0))))) IS TRUE)  as count FROM t0, vt0, v0, rt0 CROSS JOIN rt1 ON (((NOT (t0.c0))) NOT BETWEEN (((v0.c0)/('0.27454611284508823'))) AND ((- (rt0.c0)))));
SELECT COUNT(*) FROM t0, vt0, v0, rt0 CROSS JOIN rt1 ON (((NOT (t0.c0))) NOT BETWEEN (((v0.c0)/('0.27454611284508823'))) AND ((- (rt0.c0)))) WHERE ((- (((rt1.c1)>=(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c1)>=(v0.c0))))) IS TRUE)  as count FROM t0, vt0, v0, rt0 CROSS JOIN rt1 ON (((NOT (t0.c0))) NOT BETWEEN (((v0.c0)/('0.27454611284508823'))) AND ((- (rt0.c0)))));
SELECT COUNT(*) FROM t0, vt0, v0, rt0 CROSS JOIN rt1 ON (((NOT (t0.c0))) NOT BETWEEN (((v0.c0)/('0.27454611284508823'))) AND ((- (rt0.c0)))) WHERE ((- (((rt1.c1)>=(v0.c0)))));
SELECT ALL * FROM t0, v0, rt1 NOT INDEXED, rt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t0, v0, rt1, rt0);
SELECT ALL * FROM t0, v0, rt1 NOT INDEXED, rt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t0, v0, rt1, rt0);
SELECT ALL * FROM t0, v0, rt1 NOT INDEXED, rt0 WHERE (rt1.c2);
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((((rt1.c1)GLOB(rt1.c2)))!=((((('598155717')OR(rt1.c2)))AND(x'')))) WHERE (((rt1.c1) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((((rt1.c1)GLOB(rt1.c2)))<>((((('598155717')OR(rt1.c2)))AND(x'')))));
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((((rt1.c1)GLOB(rt1.c2)))!=((((('598155717')OR(rt1.c2)))AND(x'')))) WHERE (((rt1.c1) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((((rt1.c1)GLOB(rt1.c2)))<>((((('598155717')OR(rt1.c2)))AND(x'')))));
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((((rt1.c1)GLOB(rt1.c2)))!=((((('598155717')OR(rt1.c2)))AND(x'')))) WHERE (((rt1.c1) ISNULL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((((vt0.c0))<((t0.c43)))) NOT BETWEEN ((t0.c43 IN ())) AND (((((((((t0.c0)OR(t0.c43)))OR(t0.c43)))OR(t0.c43)))OR(t0.c43)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((t0.c43)))) NOT BETWEEN ((t0.c43 IN ())) AND (((((((((t0.c0)OR(t0.c43)))OR(t0.c43)))OR(t0.c43)))OR(t0.c43))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((((vt0.c0))<((t0.c43)))) NOT BETWEEN ((t0.c43 IN ())) AND (((((((((t0.c0)OR(t0.c43)))OR(t0.c43)))OR(t0.c43)))OR(t0.c43)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((t0.c43)))) NOT BETWEEN ((t0.c43 IN ())) AND (((((((((t0.c0)OR(t0.c43)))OR(t0.c43)))OR(t0.c43)))OR(t0.c43))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((((vt0.c0))<((t0.c43)))) NOT BETWEEN ((t0.c43 IN ())) AND (((((((((t0.c0)OR(t0.c43)))OR(t0.c43)))OR(t0.c43)))OR(t0.c43)))));
SELECT ALL COUNT(*) FROM v0, rt1, vt0 RIGHT OUTER JOIN rt0 ON vt0.c0 LEFT OUTER JOIN t0 ON ((((((((('827770327' IN ()))AND((((rt1.c0, rt0.c0, v0.c0))<>((x'e9a5', t0.c43, t0.c0))))))AND((0.5200815823896713 IN ()))))AND(((x'') IS FALSE))))AND(((((((((rt1.c2)AND(rt1.c1)))AND(t0.c43)))OR(rt1.c1)))OR(rt0.c3)))) WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c43)GLOB(t0.c1)))) AND (((~ (rt0.c3)))))) ORDER BY '-113177292' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((((t0.c43)GLOB(t0.c1)))) AND (((~ (rt0.c3)))))) IS TRUE)  as count FROM v0, rt1, vt0 RIGHT OUTER JOIN rt0 ON vt0.c0 LEFT OUTER JOIN t0 ON ((((((((('827770327' IN ()))AND((((rt1.c0, rt0.c0, v0.c0))!=((x'e9a5', t0.c43, t0.c0))))))AND((0.5200815823896713 IN ()))))AND(((x'') IS FALSE))))AND(((((((((rt1.c2)AND(rt1.c1)))AND(t0.c43)))OR(rt1.c1)))OR(rt0.c3)))) ORDER BY '-113177292' DESC);
SELECT ALL COUNT(*) FROM v0, rt1, vt0 RIGHT OUTER JOIN rt0 ON vt0.c0 LEFT OUTER JOIN t0 ON ((((((((('827770327' IN ()))AND((((rt1.c0, rt0.c0, v0.c0))<>((x'e9a5', t0.c43, t0.c0))))))AND((0.5200815823896713 IN ()))))AND(((x'') IS FALSE))))AND(((((((((rt1.c2)AND(rt1.c1)))AND(t0.c43)))OR(rt1.c1)))OR(rt0.c3)))) WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c43)GLOB(t0.c1)))) AND (((~ (rt0.c3)))))) ORDER BY '-113177292' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((((t0.c43)GLOB(t0.c1)))) AND (((~ (rt0.c3)))))) IS TRUE)  as count FROM v0, rt1, vt0 RIGHT OUTER JOIN rt0 ON vt0.c0 LEFT OUTER JOIN t0 ON ((((((((('827770327' IN ()))AND((((rt1.c0, rt0.c0, v0.c0))!=((x'e9a5', t0.c43, t0.c0))))))AND((0.5200815823896713 IN ()))))AND(((x'') IS FALSE))))AND(((((((((rt1.c2)AND(rt1.c1)))AND(t0.c43)))OR(rt1.c1)))OR(rt0.c3)))) ORDER BY '-113177292' DESC);
SELECT ALL COUNT(*) FROM v0, rt1, vt0 RIGHT OUTER JOIN rt0 ON vt0.c0 LEFT OUTER JOIN t0 ON ((((((((('827770327' IN ()))AND((((rt1.c0, rt0.c0, v0.c0))<>((x'e9a5', t0.c43, t0.c0))))))AND((0.5200815823896713 IN ()))))AND(((x'') IS FALSE))))AND(((((((((rt1.c2)AND(rt1.c1)))AND(t0.c43)))OR(rt1.c1)))OR(rt0.c3)))) WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c43)GLOB(t0.c1)))) AND (((~ (rt0.c3)))))) ORDER BY '-113177292' DESC;
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM t0, v0, rt0 WHERE ((+ (NULLIF(DISTINCT t0.c1, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULLIF(DISTINCT t0.c1, v0.c0)))) IS TRUE)  as count FROM t0, v0, rt0);
SELECT ALL COUNT(*) FROM t0, v0, rt0 WHERE ((+ (NULLIF(DISTINCT t0.c1, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULLIF(DISTINCT t0.c1, v0.c0)))) IS TRUE)  as count FROM t0, v0, rt0);
SELECT ALL COUNT(*) FROM t0, v0, rt0 WHERE ((+ (NULLIF(DISTINCT t0.c1, v0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((UPPER(rt0.c2)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt0.c2)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((UPPER(rt0.c2)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt0.c2)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((UPPER(rt0.c2)) IS FALSE));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))));
SELECT * FROM v0, t0 INNER JOIN rt1 ON ((rt0.c0 COLLATE NOCASE)>=(((rt1.c2) NOT NULL))) INNER JOIN rt0 ON (((rt0.c1))>((t0.c43))) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((((rt1.c0 IN ()))AND(((vt0.c0) IS TRUE))))AND(CASE WHEN rt0.c1 THEN rt1.c2 ELSE v0.c0 END)) WHERE (TRIM(t0.c1 COLLATE NOCASE, CAST('2P9X#T' AS BLOB))) ORDER BY (LIKELY(rt0.c1) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(t0.c1 COLLATE NOCASE, CAST('2P9X#T' AS BLOB))) IS TRUE)  as count FROM v0, t0 INNER JOIN rt1 ON ((rt0.c0 COLLATE NOCASE)>=(((rt1.c2) NOT NULL))) INNER JOIN rt0 ON (((rt0.c1))>((t0.c43))) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((((rt1.c0 IN ()))AND(((vt0.c0) IS TRUE))))AND(CASE WHEN rt0.c1 THEN rt1.c2 ELSE v0.c0 END)) ORDER BY (LIKELY(rt0.c1) IN ())  NULLS LAST);
SELECT * FROM v0, t0 INNER JOIN rt1 ON ((rt0.c0 COLLATE NOCASE)>=(((rt1.c2) NOT NULL))) INNER JOIN rt0 ON (((rt0.c1))>((t0.c43))) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((((rt1.c0 IN ()))AND(((vt0.c0) IS TRUE))))AND(CASE WHEN rt0.c1 THEN rt1.c2 ELSE v0.c0 END)) WHERE (TRIM(t0.c1 COLLATE NOCASE, CAST('2P9X#T' AS BLOB))) ORDER BY (LIKELY(rt0.c1) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(t0.c1 COLLATE NOCASE, CAST('2P9X#T' AS BLOB))) IS TRUE)  as count FROM v0, t0 INNER JOIN rt1 ON ((rt0.c0 COLLATE NOCASE)>=(((rt1.c2) NOT NULL))) INNER JOIN rt0 ON (((rt0.c1))>((t0.c43))) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((((rt1.c0 IN ()))AND(((vt0.c0) IS TRUE))))AND(CASE WHEN rt0.c1 THEN rt1.c2 ELSE v0.c0 END)) ORDER BY (LIKELY(rt0.c1) IN ())  NULLS LAST);
SELECT * FROM v0, t0 INNER JOIN rt1 ON ((rt0.c0 COLLATE NOCASE)>=(((rt1.c2) NOT NULL))) INNER JOIN rt0 ON (((rt0.c1))>((t0.c43))) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((((rt1.c0 IN ()))AND(((vt0.c0) IS TRUE))))AND(CASE WHEN rt0.c1 THEN rt1.c2 ELSE v0.c0 END)) WHERE (TRIM(t0.c1 COLLATE NOCASE, CAST('2P9X#T' AS BLOB))) ORDER BY (LIKELY(rt0.c1) IN ())  NULLS LAST;
SELECT * FROM rt1, v0 LEFT OUTER JOIN rt0 ON CASE CAST(t0.c43 AS INTEGER)  WHEN ((((rt1.c0)AND(t0.c43)))OR(rt0.c1)) THEN ((('-898114799')) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))) ELSE (t0.c1 IN ()) END RIGHT OUTER JOIN t0 ON CAST(((t0.c43)<=(rt0.c2)) AS REAL) WHERE (COALESCE((((rt0.c3, rt0.c1, rt0.c1, rt1.c0, '铯?8#gpQ_a')) BETWEEN ((rt0.c2, x'', rt0.c2, rt1.c2, v0.c0)) AND ((t0.c1, t0.c0, v0.c0, rt0.c0, rt0.c2))), (((rt0.c2, rt1.c0, NULL)) BETWEEN ((rt1.c2, v0.c0, v0.c0)) AND ((t0.c1, rt0.c3, t0.c1))), (NOT (t0.c0)), ((rt0.c3) IS FALSE))) ORDER BY (((v0.c0 IN ()))GLOB((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c3))))), ((rt0.c3) NOT BETWEEN ((rt1.c1 IN (rt1.c1))) AND ((+ (rt0.c0)))), (((rt1.c1 COLLATE NOCASE))=((RTRIM(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE((((rt0.c3, rt0.c1, rt0.c1, rt1.c0, '铯?8#gpQ_a')) BETWEEN ((rt0.c2, x'', rt0.c2, rt1.c2, v0.c0)) AND ((t0.c1, t0.c0, v0.c0, rt0.c0, rt0.c2))), (((rt0.c2, rt1.c0, NULL)) BETWEEN ((rt1.c2, v0.c0, v0.c0)) AND ((t0.c1, rt0.c3, t0.c1))), (NOT (t0.c0)), ((rt0.c3) IS FALSE))) IS TRUE)  as count FROM rt1, v0 LEFT OUTER JOIN rt0 ON CASE CAST(t0.c43 AS INTEGER)  WHEN ((((rt1.c0)AND(t0.c43)))OR(rt0.c1)) THEN ((('-898114799')) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))) ELSE (t0.c1 IN ()) END RIGHT OUTER JOIN t0 ON CAST(((t0.c43)<=(rt0.c2)) AS REAL) ORDER BY (((v0.c0 IN ()))GLOB((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c3))))), ((rt0.c3) NOT BETWEEN ((rt1.c1 IN (rt1.c1))) AND ((+ (rt0.c0)))), (((rt1.c1 COLLATE NOCASE))=((RTRIM(rt1.c0))))  NULLS FIRST);
SELECT * FROM rt1, v0 LEFT OUTER JOIN rt0 ON CASE CAST(t0.c43 AS INTEGER)  WHEN ((((rt1.c0)AND(t0.c43)))OR(rt0.c1)) THEN ((('-898114799')) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))) ELSE (t0.c1 IN ()) END RIGHT OUTER JOIN t0 ON CAST(((t0.c43)<=(rt0.c2)) AS REAL) WHERE (COALESCE((((rt0.c3, rt0.c1, rt0.c1, rt1.c0, '铯?8#gpQ_a')) BETWEEN ((rt0.c2, x'', rt0.c2, rt1.c2, v0.c0)) AND ((t0.c1, t0.c0, v0.c0, rt0.c0, rt0.c2))), (((rt0.c2, rt1.c0, NULL)) BETWEEN ((rt1.c2, v0.c0, v0.c0)) AND ((t0.c1, rt0.c3, t0.c1))), (NOT (t0.c0)), ((rt0.c3) IS FALSE))) ORDER BY (((v0.c0 IN ()))GLOB((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c3))))), ((rt0.c3) NOT BETWEEN ((rt1.c1 IN (rt1.c1))) AND ((+ (rt0.c0)))), (((rt1.c1 COLLATE NOCASE))=((RTRIM(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE((((rt0.c3, rt0.c1, rt0.c1, rt1.c0, '铯?8#gpQ_a')) BETWEEN ((rt0.c2, x'', rt0.c2, rt1.c2, v0.c0)) AND ((t0.c1, t0.c0, v0.c0, rt0.c0, rt0.c2))), (((rt0.c2, rt1.c0, NULL)) BETWEEN ((rt1.c2, v0.c0, v0.c0)) AND ((t0.c1, rt0.c3, t0.c1))), (NOT (t0.c0)), ((rt0.c3) IS FALSE))) IS TRUE)  as count FROM rt1, v0 LEFT OUTER JOIN rt0 ON CASE CAST(t0.c43 AS INTEGER)  WHEN ((((rt1.c0)AND(t0.c43)))OR(rt0.c1)) THEN ((('-898114799')) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))) ELSE (t0.c1 IN ()) END RIGHT OUTER JOIN t0 ON CAST(((t0.c43)<=(rt0.c2)) AS REAL) ORDER BY (((v0.c0 IN ()))GLOB((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c3))))), ((rt0.c3) NOT BETWEEN ((rt1.c1 IN (rt1.c1))) AND ((+ (rt0.c0)))), (((rt1.c1 COLLATE NOCASE))=((RTRIM(rt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt0, rt1 WHERE (CASE COALESCE(DISTINCT t0.c43, rt1.c2)  WHEN (('')>=(rt0.c3)) THEN CASE rt0.c3  WHEN rt1.c0 THEN x'' ELSE rt1.c2 END WHEN CAST(rt1.c2 AS TEXT) THEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END WHEN UPPER(DISTINCT vt0.c0) THEN (rt1.c1 IN ()) ELSE ((0x436d7363) BETWEEN ('-1054390265') AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT t0.c43, rt1.c2)  WHEN (('')>=(rt0.c3)) THEN CASE rt0.c3  WHEN rt1.c0 THEN x'' ELSE rt1.c2 END WHEN CAST(rt1.c2 AS TEXT) THEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END WHEN UPPER(DISTINCT vt0.c0) THEN (rt1.c1 IN ()) ELSE ((0X436d7363) BETWEEN ('-1054390265') AND (vt0.c0)) END) IS TRUE)  as count FROM t0, rt0, vt0, rt1);
SELECT COUNT(*) FROM t0, rt0, vt0, rt1 WHERE (CASE COALESCE(DISTINCT t0.c43, rt1.c2)  WHEN (('')>=(rt0.c3)) THEN CASE rt0.c3  WHEN rt1.c0 THEN x'' ELSE rt1.c2 END WHEN CAST(rt1.c2 AS TEXT) THEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END WHEN UPPER(DISTINCT vt0.c0) THEN (rt1.c1 IN ()) ELSE ((0x436d7363) BETWEEN ('-1054390265') AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT t0.c43, rt1.c2)  WHEN (('')>=(rt0.c3)) THEN CASE rt0.c3  WHEN rt1.c0 THEN x'' ELSE rt1.c2 END WHEN CAST(rt1.c2 AS TEXT) THEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END WHEN UPPER(DISTINCT vt0.c0) THEN (rt1.c1 IN ()) ELSE ((0X436d7363) BETWEEN ('-1054390265') AND (vt0.c0)) END) IS TRUE)  as count FROM t0, rt0, vt0, rt1);
SELECT COUNT(*) FROM t0, rt0, vt0, rt1 WHERE (CASE COALESCE(DISTINCT t0.c43, rt1.c2)  WHEN (('')>=(rt0.c3)) THEN CASE rt0.c3  WHEN rt1.c0 THEN x'' ELSE rt1.c2 END WHEN CAST(rt1.c2 AS TEXT) THEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END WHEN UPPER(DISTINCT vt0.c0) THEN (rt1.c1 IN ()) ELSE ((0x436d7363) BETWEEN ('-1054390265') AND (vt0.c0)) END);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(-1469488391))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(-1469488391))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(-1469488391))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(-1469488391))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(-1469488391))) AND (((vt0.c0) NOT NULL))));
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0))) IS FALSE)) ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0))) IS FALSE)) ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0))) IS FALSE)) ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM t0 INNER JOIN rt1 ON -6.9009591E8 CROSS JOIN rt0 ON (((rt1.c1)) NOT BETWEEN (((- (rt1.c2)))) AND ((((t0.c1)OR(rt0.c1))))) WHERE (json_insert(('4켂\ngⶩ~s⎖' IN (rt0.c2)), rt1.c2 COLLATE BINARY, ((t0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((json_insert(('4켂\ngⶩ~s⎖' IN (rt0.c2)), rt1.c2 COLLATE BINARY, ((t0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON -6.9009591E8 CROSS JOIN rt0 ON (((rt1.c1)) NOT BETWEEN (((- (rt1.c2)))) AND ((((t0.c1)OR(rt0.c1))))));
SELECT * FROM t0 INNER JOIN rt1 ON -6.9009591E8 CROSS JOIN rt0 ON (((rt1.c1)) NOT BETWEEN (((- (rt1.c2)))) AND ((((t0.c1)OR(rt0.c1))))) WHERE (json_insert(('4켂\ngⶩ~s⎖' IN (rt0.c2)), rt1.c2 COLLATE BINARY, ((t0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((json_insert(('4켂\ngⶩ~s⎖' IN (rt0.c2)), rt1.c2 COLLATE BINARY, ((t0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON -6.9009591E8 CROSS JOIN rt0 ON (((rt1.c1)) NOT BETWEEN (((- (rt1.c2)))) AND ((((t0.c1)OR(rt0.c1))))));
SELECT COUNT(*) FROM v0, vt0, rt0, rt1, t0 WHERE (((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (CASE vt0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 END) AND (((rt0.c2)<>(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (CASE vt0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 END) AND (((rt0.c2)!=(t0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0, rt1, t0);
SELECT COUNT(*) FROM v0, vt0, rt0, rt1, t0 WHERE (((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (CASE vt0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 END) AND (((rt0.c2)<>(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (CASE vt0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 END) AND (((rt0.c2)!=(t0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0, rt1, t0);
SELECT COUNT(*) FROM v0, vt0, rt0, rt1, t0 WHERE (((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (CASE vt0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 END) AND (((rt0.c2)<>(t0.c1)))));
SELECT * FROM vt0, v0, rt0, t0 WHERE (((((((((json_quote(rt0.c0))AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)))AND((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((v0.c0, rt0.c2, vt0.c0)) AND ((v0.c0, t0.c1, vt0.c0))))))AND(SQLITE_COMPILEOPTION_GET(rt0.c0))))OR(((((t0.c1)OR(t0.c0)))OR(t0.c43))))) ORDER BY (((rt0.c0) IS TRUE) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((json_quote(rt0.c0))AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)))AND((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((v0.c0, rt0.c2, vt0.c0)) AND ((v0.c0, t0.c1, vt0.c0))))))AND(SQLITE_COMPILEOPTION_GET(rt0.c0))))OR(((((t0.c1)OR(t0.c0)))OR(t0.c43))))) IS TRUE)  as count FROM vt0, v0, rt0, t0 ORDER BY (((rt0.c0) IS TRUE) IN ()));
SELECT * FROM vt0, v0, rt0, t0 WHERE (((((((((json_quote(rt0.c0))AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)))AND((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((v0.c0, rt0.c2, vt0.c0)) AND ((v0.c0, t0.c1, vt0.c0))))))AND(SQLITE_COMPILEOPTION_GET(rt0.c0))))OR(((((t0.c1)OR(t0.c0)))OR(t0.c43))))) ORDER BY (((rt0.c0) IS TRUE) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((json_quote(rt0.c0))AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)))AND((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((v0.c0, rt0.c2, vt0.c0)) AND ((v0.c0, t0.c1, vt0.c0))))))AND(SQLITE_COMPILEOPTION_GET(rt0.c0))))OR(((((t0.c1)OR(t0.c0)))OR(t0.c43))))) IS TRUE)  as count FROM vt0, v0, rt0, t0 ORDER BY (((rt0.c0) IS TRUE) IN ()));
SELECT * FROM vt0, v0, rt0, t0 WHERE (((((((((json_quote(rt0.c0))AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)))AND((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((v0.c0, rt0.c2, vt0.c0)) AND ((v0.c0, t0.c1, vt0.c0))))))AND(SQLITE_COMPILEOPTION_GET(rt0.c0))))OR(((((t0.c1)OR(t0.c0)))OR(t0.c43))))) ORDER BY (((rt0.c0) IS TRUE) IN ());
SELECT * FROM v0 WHERE (((((((v0.c0)>=(v0.c0)))AND((NULL IN ()))))OR(((v0.c0)||(v0.c0))))) ORDER BY ((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)>=(v0.c0)))AND((NULL IN ()))))OR(((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((((v0.c0)>=(v0.c0)))AND((NULL IN ()))))OR(((v0.c0)||(v0.c0))))) ORDER BY ((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)>=(v0.c0)))AND((NULL IN ()))))OR(((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((((v0.c0)>=(v0.c0)))AND((NULL IN ()))))OR(((v0.c0)||(v0.c0))))) ORDER BY ((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (x'5030');
SELECT SUM(count) FROM (SELECT ALL ((x'5030') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (x'5030');
SELECT SUM(count) FROM (SELECT ALL ((x'5030') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (x'5030');
SELECT ALL COUNT(*) FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)!=(rt0.c0)) WHEN x'f697' THEN ((rt0.c2)&(rt0.c3)) WHEN ((t0.c1)%('-1706776920')) THEN 'TRUE' WHEN '津.<\rkRB/' THEN 0X1737df54 WHEN ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CAST(t0.c1 AS BLOB) END WHERE (CASE x''  WHEN ((rt0.c2)>(rt0.c3)) THEN (rt0.c1 IN (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN ((rt0.c2)>(rt0.c3)) THEN (rt0.c1 IN (rt0.c3)) END) IS TRUE)  as count FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)<>(rt0.c0)) WHEN x'f697' THEN ((rt0.c2)&(rt0.c3)) WHEN ((t0.c1)%('-1706776920')) THEN 'TRUE' WHEN '津.<\rkRB/' THEN 0x1737df54 WHEN ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CAST(t0.c1 AS BLOB) END);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)!=(rt0.c0)) WHEN x'f697' THEN ((rt0.c2)&(rt0.c3)) WHEN ((t0.c1)%('-1706776920')) THEN 'TRUE' WHEN '津.<\rkRB/' THEN 0X1737df54 WHEN ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CAST(t0.c1 AS BLOB) END WHERE (CASE x''  WHEN ((rt0.c2)>(rt0.c3)) THEN (rt0.c1 IN (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN ((rt0.c2)>(rt0.c3)) THEN (rt0.c1 IN (rt0.c3)) END) IS TRUE)  as count FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)<>(rt0.c0)) WHEN x'f697' THEN ((rt0.c2)&(rt0.c3)) WHEN ((t0.c1)%('-1706776920')) THEN 'TRUE' WHEN '津.<\rkRB/' THEN 0x1737df54 WHEN ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CAST(t0.c1 AS BLOB) END);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)!=(rt0.c0)) WHEN x'f697' THEN ((rt0.c2)&(rt0.c3)) WHEN ((t0.c1)%('-1706776920')) THEN 'TRUE' WHEN '津.<\rkRB/' THEN 0X1737df54 WHEN ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CAST(t0.c1 AS BLOB) END WHERE (CASE x''  WHEN ((rt0.c2)>(rt0.c3)) THEN (rt0.c1 IN (rt0.c3)) END);
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t0, rt1 WHERE (((((((((((rt0.c3)>>(v0.c0)))AND(COALESCE(DISTINCT rt0.c2, rt1.c0, t0.c43, rt0.c3))))AND(((rt0.c0)OR(vt0.c0)))))OR(((t0.c0) IS TRUE))))AND(TRIM(DISTINCT t0.c1, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3)>>(v0.c0)))AND(COALESCE(DISTINCT rt0.c2, rt1.c0, t0.c43, rt0.c3))))AND(((rt0.c0)OR(vt0.c0)))))OR(((t0.c0) IS TRUE))))AND(TRIM(DISTINCT t0.c1, rt0.c0)))) IS TRUE)  as count FROM v0, rt0, vt0, t0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t0, rt1 WHERE (((((((((((rt0.c3)>>(v0.c0)))AND(COALESCE(DISTINCT rt0.c2, rt1.c0, t0.c43, rt0.c3))))AND(((rt0.c0)OR(vt0.c0)))))OR(((t0.c0) IS TRUE))))AND(TRIM(DISTINCT t0.c1, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3)>>(v0.c0)))AND(COALESCE(DISTINCT rt0.c2, rt1.c0, t0.c43, rt0.c3))))AND(((rt0.c0)OR(vt0.c0)))))OR(((t0.c0) IS TRUE))))AND(TRIM(DISTINCT t0.c1, rt0.c0)))) IS TRUE)  as count FROM v0, rt0, vt0, t0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t0, rt1 WHERE (((((((((((rt0.c3)>>(v0.c0)))AND(COALESCE(DISTINCT rt0.c2, rt1.c0, t0.c43, rt0.c3))))AND(((rt0.c0)OR(vt0.c0)))))OR(((t0.c0) IS TRUE))))AND(TRIM(DISTINCT t0.c1, rt0.c0))));
SELECT ALL COUNT(*) FROM rt1, v0 CROSS JOIN vt0 ON ((((((((((0.48435099834137774)OR(t0.c43)))OR(v0.c0)))AND(t0.c43)))OR(rt0.c1))) BETWEEN (x'1ec2') AND ((NOT (rt1.c1)))) INNER JOIN t0 ON x'' CROSS JOIN rt0 ON (((t0.c0)) BETWEEN ((LTRIM(rt1.c1, rt1.c1))) AND ((x'' COLLATE BINARY))) WHERE (((((x'')OR(CASE WHEN rt0.c3 THEN t0.c43 WHEN v0.c0 THEN x'' WHEN rt1.c0 THEN rt0.c0 END)))AND(((rt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(CASE WHEN rt0.c3 THEN t0.c43 WHEN v0.c0 THEN x'' WHEN rt1.c0 THEN rt0.c0 END)))AND(((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, v0 CROSS JOIN vt0 ON ((((((((((0.48435099834137774)OR(t0.c43)))OR(v0.c0)))AND(t0.c43)))OR(rt0.c1))) BETWEEN (x'1ec2') AND ((NOT (rt1.c1)))) INNER JOIN t0 ON x'' CROSS JOIN rt0 ON (((t0.c0)) BETWEEN ((LTRIM(rt1.c1, rt1.c1))) AND ((x'' COLLATE BINARY))));
SELECT ALL COUNT(*) FROM rt1, v0 CROSS JOIN vt0 ON ((((((((((0.48435099834137774)OR(t0.c43)))OR(v0.c0)))AND(t0.c43)))OR(rt0.c1))) BETWEEN (x'1ec2') AND ((NOT (rt1.c1)))) INNER JOIN t0 ON x'' CROSS JOIN rt0 ON (((t0.c0)) BETWEEN ((LTRIM(rt1.c1, rt1.c1))) AND ((x'' COLLATE BINARY))) WHERE (((((x'')OR(CASE WHEN rt0.c3 THEN t0.c43 WHEN v0.c0 THEN x'' WHEN rt1.c0 THEN rt0.c0 END)))AND(((rt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(CASE WHEN rt0.c3 THEN t0.c43 WHEN v0.c0 THEN x'' WHEN rt1.c0 THEN rt0.c0 END)))AND(((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, v0 CROSS JOIN vt0 ON ((((((((((0.48435099834137774)OR(t0.c43)))OR(v0.c0)))AND(t0.c43)))OR(rt0.c1))) BETWEEN (x'1ec2') AND ((NOT (rt1.c1)))) INNER JOIN t0 ON x'' CROSS JOIN rt0 ON (((t0.c0)) BETWEEN ((LTRIM(rt1.c1, rt1.c1))) AND ((x'' COLLATE BINARY))));
SELECT ALL COUNT(*) FROM rt1, v0 CROSS JOIN vt0 ON ((((((((((0.48435099834137774)OR(t0.c43)))OR(v0.c0)))AND(t0.c43)))OR(rt0.c1))) BETWEEN (x'1ec2') AND ((NOT (rt1.c1)))) INNER JOIN t0 ON x'' CROSS JOIN rt0 ON (((t0.c0)) BETWEEN ((LTRIM(rt1.c1, rt1.c1))) AND ((x'' COLLATE BINARY))) WHERE (((((x'')OR(CASE WHEN rt0.c3 THEN t0.c43 WHEN v0.c0 THEN x'' WHEN rt1.c0 THEN rt0.c0 END)))AND(((rt1.c0) NOT NULL))));
SELECT ALL * FROM v0, rt1, vt0 WHERE (((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE BINARY) ORDER BY ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((v0.c0))) IN ((+ (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((v0.c0))) IN ((+ (rt1.c1)))));
SELECT ALL * FROM v0, rt1, vt0 WHERE (((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE BINARY) ORDER BY ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((v0.c0))) IN ((+ (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((v0.c0))) IN ((+ (rt1.c1)))));
SELECT ALL * FROM v0, rt1, vt0 WHERE (((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE BINARY) ORDER BY ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((v0.c0))) IN ((+ (rt1.c1))));
SELECT * FROM rt1, vt0, rt0 WHERE ((rt1.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ((rt1.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ((rt1.c1 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON CASE vt0.c0  WHEN LIKELIHOOD(v0.c0, 0.854276813201177) THEN CAST(rt0.c0 AS NUMERIC) END INNER JOIN v0 ON 5.26357906E8 WHERE (t0.c43 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t0.c43 COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON CASE vt0.c0  WHEN LIKELIHOOD(v0.c0, 0.854276813201177) THEN CAST(rt0.c0 AS NUMERIC) END INNER JOIN v0 ON 5.26357906E8);
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON CASE vt0.c0  WHEN LIKELIHOOD(v0.c0, 0.854276813201177) THEN CAST(rt0.c0 AS NUMERIC) END INNER JOIN v0 ON 5.26357906E8 WHERE (t0.c43 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t0.c43 COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON CASE vt0.c0  WHEN LIKELIHOOD(v0.c0, 0.854276813201177) THEN CAST(rt0.c0 AS NUMERIC) END INNER JOIN v0 ON 5.26357906E8);
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON CASE vt0.c0  WHEN LIKELIHOOD(v0.c0, 0.854276813201177) THEN CAST(rt0.c0 AS NUMERIC) END INNER JOIN v0 ON 5.26357906E8 WHERE (t0.c43 COLLATE NOCASE);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0)) IN (CAST(NULL AS REAL)))) ORDER BY CAST(CAST(t0.c1 AS BLOB) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0)) IN (CAST(NULL AS REAL)))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CAST(CAST(t0.c1 AS BLOB) AS NUMERIC) DESC);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0)) IN (CAST(NULL AS REAL)))) ORDER BY CAST(CAST(t0.c1 AS BLOB) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0)) IN (CAST(NULL AS REAL)))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CAST(CAST(t0.c1 AS BLOB) AS NUMERIC) DESC);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0)) IN (CAST(NULL AS REAL)))) ORDER BY CAST(CAST(t0.c1 AS BLOB) AS NUMERIC) DESC;
SELECT * FROM v0, rt1, vt0, t0 WHERE (((CAST(NULL AS BLOB))%(((((t0.c1)OR(t0.c1)))AND(vt0.c0))))) ORDER BY rt1.c2  NULLS FIRST, (- (((v0.c0)/(rt1.c2)))) DESC  NULLS FIRST, (((t0.c1))<((((v0.c0) IS TRUE)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS BLOB))%(((((t0.c1)OR(t0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, rt1, vt0, t0 ORDER BY rt1.c2  NULLS FIRST, (- (((v0.c0)/(rt1.c2)))) DESC  NULLS FIRST, (((t0.c1))<((((v0.c0) IS TRUE)))) DESC  NULLS LAST);
SELECT * FROM v0, rt1, vt0, t0 WHERE (((CAST(NULL AS BLOB))%(((((t0.c1)OR(t0.c1)))AND(vt0.c0))))) ORDER BY rt1.c2  NULLS FIRST, (- (((v0.c0)/(rt1.c2)))) DESC  NULLS FIRST, (((t0.c1))<((((v0.c0) IS TRUE)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS BLOB))%(((((t0.c1)OR(t0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, rt1, vt0, t0 ORDER BY rt1.c2  NULLS FIRST, (- (((v0.c0)/(rt1.c2)))) DESC  NULLS FIRST, (((t0.c1))<((((v0.c0) IS TRUE)))) DESC  NULLS LAST);
SELECT * FROM v0, rt1, vt0, t0 WHERE (((CAST(NULL AS BLOB))%(((((t0.c1)OR(t0.c1)))AND(vt0.c0))))) ORDER BY rt1.c2  NULLS FIRST, (- (((v0.c0)/(rt1.c2)))) DESC  NULLS FIRST, (((t0.c1))<((((v0.c0) IS TRUE)))) DESC  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE ((((vt0.c0 IN (rt1.c0, rt1.c2))) NOT BETWEEN (rt1.c1) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt1.c0, rt1.c2))) NOT BETWEEN (rt1.c1) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((vt0.c0 IN (rt1.c0, rt1.c2))) NOT BETWEEN (rt1.c1) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt1.c0, rt1.c2))) NOT BETWEEN (rt1.c1) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((vt0.c0 IN (rt1.c0, rt1.c2))) NOT BETWEEN (rt1.c1) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON ((((t0.c43)IS NOT(t0.c43))) IS FALSE) RIGHT OUTER JOIN t0 ON ((((((rt1.c2)OR(t0.c0)))OR(t0.c43)))!=(TRIM(t0.c0, NULL))) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((((t0.c43)IS NOT(t0.c43))) IS FALSE) RIGHT OUTER JOIN t0 ON ((((((rt1.c2)OR(t0.c0)))OR(t0.c43)))!=(TRIM(t0.c0, NULL))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON ((((t0.c43)IS NOT(t0.c43))) IS FALSE) RIGHT OUTER JOIN t0 ON ((((((rt1.c2)OR(t0.c0)))OR(t0.c43)))!=(TRIM(t0.c0, NULL))) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((((t0.c43)IS NOT(t0.c43))) IS FALSE) RIGHT OUTER JOIN t0 ON ((((((rt1.c2)OR(t0.c0)))OR(t0.c43)))!=(TRIM(t0.c0, NULL))));
SELECT COUNT(*) FROM rt0, t0, rt1, v0 WHERE (CAST(CAST(' !KS##}' AS NUMERIC) AS BLOB)) ORDER BY (((((('d粈w') NOTNULL))AND(CAST(v0.c0 AS REAL))))AND(CAST(rt1.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(' !KS##}' AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM rt0, t0, rt1, v0 ORDER BY (((((('d粈w') NOTNULL))AND(CAST(v0.c0 AS REAL))))AND(CAST(rt1.c1 AS INTEGER))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, rt1, v0 WHERE (CAST(CAST(' !KS##}' AS NUMERIC) AS BLOB)) ORDER BY (((((('d粈w') NOTNULL))AND(CAST(v0.c0 AS REAL))))AND(CAST(rt1.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(' !KS##}' AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM rt0, t0, rt1, v0 ORDER BY (((((('d粈w') NOTNULL))AND(CAST(v0.c0 AS REAL))))AND(CAST(rt1.c1 AS INTEGER))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, rt1, v0 WHERE (CAST(CAST(' !KS##}' AS NUMERIC) AS BLOB)) ORDER BY (((((('d粈w') NOTNULL))AND(CAST(v0.c0 AS REAL))))AND(CAST(rt1.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, v0, vt0 WHERE (1.562370927E9) ORDER BY (CAST(',g' AS NUMERIC) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((1.562370927E9) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (CAST(',g' AS NUMERIC) IN ()) DESC);
SELECT ALL * FROM rt0, v0, vt0 WHERE (1.562370927E9) ORDER BY (CAST(',g' AS NUMERIC) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((1.562370927E9) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (CAST(',g' AS NUMERIC) IN ()) DESC);
SELECT ALL * FROM rt0, v0, vt0 WHERE (1.562370927E9) ORDER BY (CAST(',g' AS NUMERIC) IN ()) DESC;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON CASE WHEN 0x6cc6569d THEN ((vt0.c0)%(vt0.c0)) END WHERE ((+ (((v0.c0)OR(v0.c0))))) ORDER BY (- (CAST(v0.c0 AS INTEGER)))  NULLS FIRST, ((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY ASC  NULLS LAST, (NOT (((vt0.c0)LIKE(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CASE WHEN 0X6cc6569d THEN ((vt0.c0)%(vt0.c0)) END ORDER BY (- (CAST(v0.c0 AS INTEGER)))  NULLS FIRST, ((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY ASC  NULLS LAST, (NOT (((vt0.c0)LIKE(v0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON CASE WHEN 0x6cc6569d THEN ((vt0.c0)%(vt0.c0)) END WHERE ((+ (((v0.c0)OR(v0.c0))))) ORDER BY (- (CAST(v0.c0 AS INTEGER)))  NULLS FIRST, ((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY ASC  NULLS LAST, (NOT (((vt0.c0)LIKE(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CASE WHEN 0X6cc6569d THEN ((vt0.c0)%(vt0.c0)) END ORDER BY (- (CAST(v0.c0 AS INTEGER)))  NULLS FIRST, ((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY ASC  NULLS LAST, (NOT (((vt0.c0)LIKE(v0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON CASE WHEN 0x6cc6569d THEN ((vt0.c0)%(vt0.c0)) END WHERE ((+ (((v0.c0)OR(v0.c0))))) ORDER BY (- (CAST(v0.c0 AS INTEGER)))  NULLS FIRST, ((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY ASC  NULLS LAST, (NOT (((vt0.c0)LIKE(v0.c0)))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x''))<(((~ (rt0.c3)))))) ORDER BY (- ((((rt0.c2, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x''))<(((~ (rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (- ((((rt0.c2, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x''))<(((~ (rt0.c3)))))) ORDER BY (- ((((rt0.c2, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x''))<(((~ (rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (- ((((rt0.c2, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x''))<(((~ (rt0.c3)))))) ORDER BY (- ((((rt0.c2, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0, rt1 CROSS JOIN vt0 ON LOWER(DISTINCT ((rt0.c1)||(t0.c1))) RIGHT OUTER JOIN t0 ON (((x'')) BETWEEN ((t0.c1 COLLATE NOCASE)) AND (((((rt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))) WHERE ((((((rt0.c1, rt1.c1, rt0.c3))>((rt1.c0, rt1.c2, t0.c1))))OR((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt1.c1, rt0.c3))>((rt1.c0, rt1.c2, t0.c1))))OR((~ (vt0.c0))))) IS TRUE)  as count FROM v0, rt0, rt1 CROSS JOIN vt0 ON LOWER(DISTINCT ((rt0.c1)||(t0.c1))) RIGHT OUTER JOIN t0 ON (((x'')) BETWEEN ((t0.c1 COLLATE NOCASE)) AND (((((rt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))));
SELECT ALL COUNT(*) FROM v0, rt0, rt1 CROSS JOIN vt0 ON LOWER(DISTINCT ((rt0.c1)||(t0.c1))) RIGHT OUTER JOIN t0 ON (((x'')) BETWEEN ((t0.c1 COLLATE NOCASE)) AND (((((rt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))) WHERE ((((((rt0.c1, rt1.c1, rt0.c3))>((rt1.c0, rt1.c2, t0.c1))))OR((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt1.c1, rt0.c3))>((rt1.c0, rt1.c2, t0.c1))))OR((~ (vt0.c0))))) IS TRUE)  as count FROM v0, rt0, rt1 CROSS JOIN vt0 ON LOWER(DISTINCT ((rt0.c1)||(t0.c1))) RIGHT OUTER JOIN t0 ON (((x'')) BETWEEN ((t0.c1 COLLATE NOCASE)) AND (((((rt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))));
SELECT * FROM t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (t0.c43) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) NOT BETWEEN (t0.c43) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (t0.c43) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) NOT BETWEEN (t0.c43) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (t0.c43) AND (t0.c0)))));
SELECT * FROM t0, v0, vt0, rt1 WHERE ((((NULL IN (rt1.c2, t0.c1)))IS NOT(((((((((rt1.c1)OR(vt0.c0)))AND(t0.c43)))AND(t0.c1)))AND(rt1.c1))))) ORDER BY (((rt1.c2)) BETWEEN ((t0.c43)) AND ((rt1.c1))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL IN (rt1.c2, t0.c1)))IS NOT(((((((((rt1.c1)OR(vt0.c0)))AND(t0.c43)))AND(t0.c1)))AND(rt1.c1))))) IS TRUE)  as count FROM t0, v0, vt0, rt1 ORDER BY (((rt1.c2)) BETWEEN ((t0.c43)) AND ((rt1.c1))) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM t0, v0, vt0, rt1 WHERE ((((NULL IN (rt1.c2, t0.c1)))IS NOT(((((((((rt1.c1)OR(vt0.c0)))AND(t0.c43)))AND(t0.c1)))AND(rt1.c1))))) ORDER BY (((rt1.c2)) BETWEEN ((t0.c43)) AND ((rt1.c1))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL IN (rt1.c2, t0.c1)))IS NOT(((((((((rt1.c1)OR(vt0.c0)))AND(t0.c43)))AND(t0.c1)))AND(rt1.c1))))) IS TRUE)  as count FROM t0, v0, vt0, rt1 ORDER BY (((rt1.c2)) BETWEEN ((t0.c43)) AND ((rt1.c1))) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM t0, v0, vt0, rt1 WHERE ((((NULL IN (rt1.c2, t0.c1)))IS NOT(((((((((rt1.c1)OR(vt0.c0)))AND(t0.c43)))AND(t0.c1)))AND(rt1.c1))))) ORDER BY (((rt1.c2)) BETWEEN ((t0.c43)) AND ((rt1.c1))) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt1, v0 WHERE (rt1.c1) ORDER BY (((rt1.c0)) BETWEEN ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))) AND ((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END))), CAST(((rt1.c2)>>(rt1.c2)) AS REAL) ASC, (NOT (((((((((NULL)AND(rt1.c2)))AND(v0.c0)))OR(rt1.c1)))AND(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, v0 ORDER BY (((rt1.c0)) BETWEEN ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))) AND ((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END))), CAST(((rt1.c2)>>(rt1.c2)) AS REAL) ASC, (NOT (((((((((NULL)AND(rt1.c2)))AND(v0.c0)))OR(rt1.c1)))AND(rt1.c1)))) ASC  NULLS LAST);
SELECT * FROM rt1, v0 WHERE (rt1.c1) ORDER BY (((rt1.c0)) BETWEEN ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))) AND ((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END))), CAST(((rt1.c2)>>(rt1.c2)) AS REAL) ASC, (NOT (((((((((NULL)AND(rt1.c2)))AND(v0.c0)))OR(rt1.c1)))AND(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, v0 ORDER BY (((rt1.c0)) BETWEEN ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))) AND ((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END))), CAST(((rt1.c2)>>(rt1.c2)) AS REAL) ASC, (NOT (((((((((NULL)AND(rt1.c2)))AND(v0.c0)))OR(rt1.c1)))AND(rt1.c1)))) ASC  NULLS LAST);
SELECT * FROM rt1, v0 WHERE (rt1.c1) ORDER BY (((rt1.c0)) BETWEEN ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))) AND ((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END))), CAST(((rt1.c2)>>(rt1.c2)) AS REAL) ASC, (NOT (((((((((NULL)AND(rt1.c2)))AND(v0.c0)))OR(rt1.c1)))AND(rt1.c1)))) ASC  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1)|(rt0.c1)))-((t0.c0 IN ()))) RIGHT OUTER JOIN t0 ON (((('1571223858' IN ())))<>(((NOT ('hXYq%'))))) CROSS JOIN vt0 ON ((((rt0.c0)AND(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)))OR(((rt0.c2)>(x'')))) WHERE (((('kf.\', rt0.c0, (((t0.c1))<((-1091105109)))))=(((+ (rt0.c3)), LIKELIHOOD(v0.c0, 0.013578151636781444), ((rt0.c1) BETWEEN ('0.41248869387471077') AND (t0.c1)))))) ORDER BY ((((v0.c0)>=(rt0.c3)))/((v0.c0 IN (t0.c43)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('kf.\', rt0.c0, (((t0.c1))<((-1091105109)))))=(((+ (rt0.c3)), LIKELIHOOD(v0.c0, 0.013578151636781444), ((rt0.c1) BETWEEN ('0.41248869387471077') AND (t0.c1)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1)|(rt0.c1)))-((t0.c0 IN ()))) RIGHT OUTER JOIN t0 ON (((('1571223858' IN ())))!=(((NOT ('hXYq%'))))) CROSS JOIN vt0 ON ((((rt0.c0)AND(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)))OR(((rt0.c2)>(x'')))) ORDER BY ((((v0.c0)>=(rt0.c3)))/((v0.c0 IN (t0.c43)))) DESC  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1)|(rt0.c1)))-((t0.c0 IN ()))) RIGHT OUTER JOIN t0 ON (((('1571223858' IN ())))<>(((NOT ('hXYq%'))))) CROSS JOIN vt0 ON ((((rt0.c0)AND(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)))OR(((rt0.c2)>(x'')))) WHERE (((('kf.\', rt0.c0, (((t0.c1))<((-1091105109)))))=(((+ (rt0.c3)), LIKELIHOOD(v0.c0, 0.013578151636781444), ((rt0.c1) BETWEEN ('0.41248869387471077') AND (t0.c1)))))) ORDER BY ((((v0.c0)>=(rt0.c3)))/((v0.c0 IN (t0.c43)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('kf.\', rt0.c0, (((t0.c1))<((-1091105109)))))=(((+ (rt0.c3)), LIKELIHOOD(v0.c0, 0.013578151636781444), ((rt0.c1) BETWEEN ('0.41248869387471077') AND (t0.c1)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1)|(rt0.c1)))-((t0.c0 IN ()))) RIGHT OUTER JOIN t0 ON (((('1571223858' IN ())))!=(((NOT ('hXYq%'))))) CROSS JOIN vt0 ON ((((rt0.c0)AND(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)))OR(((rt0.c2)>(x'')))) ORDER BY ((((v0.c0)>=(rt0.c3)))/((v0.c0 IN (t0.c43)))) DESC  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1)|(rt0.c1)))-((t0.c0 IN ()))) RIGHT OUTER JOIN t0 ON (((('1571223858' IN ())))<>(((NOT ('hXYq%'))))) CROSS JOIN vt0 ON ((((rt0.c0)AND(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)))OR(((rt0.c2)>(x'')))) WHERE (((('kf.\', rt0.c0, (((t0.c1))<((-1091105109)))))=(((+ (rt0.c3)), LIKELIHOOD(v0.c0, 0.013578151636781444), ((rt0.c1) BETWEEN ('0.41248869387471077') AND (t0.c1)))))) ORDER BY ((((v0.c0)>=(rt0.c3)))/((v0.c0 IN (t0.c43)))) DESC  NULLS LAST;
SELECT * FROM t0, v0, rt1, vt0, rt0 WHERE (0.5066937081621583) ORDER BY CASE rt0.c1 COLLATE RTRIM  WHEN CAST(x'' AS INTEGER) THEN ((rt1.c2)>(rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((0.5066937081621583) IS TRUE)  as count FROM t0, v0, rt1, vt0, rt0 ORDER BY CASE rt0.c1 COLLATE RTRIM  WHEN CAST(x'' AS INTEGER) THEN ((rt1.c2)>(rt0.c1)) END DESC);
SELECT * FROM t0, v0, rt1, vt0, rt0 WHERE (0.5066937081621583) ORDER BY CASE rt0.c1 COLLATE RTRIM  WHEN CAST(x'' AS INTEGER) THEN ((rt1.c2)>(rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((0.5066937081621583) IS TRUE)  as count FROM t0, v0, rt1, vt0, rt0 ORDER BY CASE rt0.c1 COLLATE RTRIM  WHEN CAST(x'' AS INTEGER) THEN ((rt1.c2)>(rt0.c1)) END DESC);
SELECT * FROM t0, v0, rt1, vt0, rt0 WHERE (0.5066937081621583) ORDER BY CASE rt0.c1 COLLATE RTRIM  WHEN CAST(x'' AS INTEGER) THEN ((rt1.c2)>(rt0.c1)) END DESC;
SELECT ALL * FROM v0, rt0 WHERE (((CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 END) NOT NULL)) ORDER BY json_type(((rt0.c3) NOT BETWEEN ('1825161832') AND (rt0.c0))) ASC  NULLS FIRST, ((rt0.c1)-(0.6127266223370673));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 END) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY json_type(((rt0.c3) NOT BETWEEN ('1825161832') AND (rt0.c0))) ASC  NULLS FIRST, ((rt0.c1)-(0.6127266223370673)));
SELECT ALL * FROM v0, rt0 WHERE (((CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 END) NOT NULL)) ORDER BY json_type(((rt0.c3) NOT BETWEEN ('1825161832') AND (rt0.c0))) ASC  NULLS FIRST, ((rt0.c1)-(0.6127266223370673));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 END) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY json_type(((rt0.c3) NOT BETWEEN ('1825161832') AND (rt0.c0))) ASC  NULLS FIRST, ((rt0.c1)-(0.6127266223370673)));
SELECT ALL * FROM v0, rt0 WHERE (((CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 END) NOT NULL)) ORDER BY json_type(((rt0.c3) NOT BETWEEN ('1825161832') AND (rt0.c0))) ASC  NULLS FIRST, ((rt0.c1)-(0.6127266223370673));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((t0.c43)GLOB(t0.c43)))-(((('1412825120')) NOT BETWEEN ((v0.c0)) AND ((t0.c43))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c43)GLOB(t0.c43)))-(((('1412825120')) NOT BETWEEN ((v0.c0)) AND ((t0.c43)))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((t0.c43)GLOB(t0.c43)))-(((('1412825120')) NOT BETWEEN ((v0.c0)) AND ((t0.c43))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c43)GLOB(t0.c43)))-(((('1412825120')) NOT BETWEEN ((v0.c0)) AND ((t0.c43)))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((t0.c43)GLOB(t0.c43)))-(((('1412825120')) NOT BETWEEN ((v0.c0)) AND ((t0.c43))))));
SELECT * FROM rt1, rt0, vt0, t0 WHERE (((((rt0.c0)AND(rt0.c1))) IS FALSE)) ORDER BY ((rt0.c1)OR(rt1.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt1, rt0, vt0, t0 ORDER BY ((rt0.c1)OR(rt1.c0)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt1, rt0, vt0, t0 WHERE (((((rt0.c0)AND(rt0.c1))) IS FALSE)) ORDER BY ((rt0.c1)OR(rt1.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt1, rt0, vt0, t0 ORDER BY ((rt0.c1)OR(rt1.c0)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt1, rt0, vt0, t0 WHERE (((((rt0.c0)AND(rt0.c1))) IS FALSE)) ORDER BY ((rt0.c1)OR(rt1.c0)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 END)) AND (((~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 END)) AND (((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 END)) AND (((~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 END)) AND (((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 END)) AND (((~ (rt0.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c43) NOT BETWEEN (t0.c43) AND (t0.c43)))LIKE(((t0.c43) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c43) NOT BETWEEN (t0.c43) AND (t0.c43)))LIKE(((t0.c43) IS TRUE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c43) NOT BETWEEN (t0.c43) AND (t0.c43)))LIKE(((t0.c43) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c43) NOT BETWEEN (t0.c43) AND (t0.c43)))LIKE(((t0.c43) IS TRUE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c43) NOT BETWEEN (t0.c43) AND (t0.c43)))LIKE(((t0.c43) IS TRUE)))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT * FROM rt0, t0 WHERE (x'') ORDER BY ('TRUE' IN (CASE WHEN t0.c1 THEN rt0.c3 WHEN rt0.c2 THEN x'' WHEN t0.c1 THEN rt0.c3 WHEN NULL THEN NULL WHEN rt0.c3 THEN t0.c43 END)), ((rt0.c1 COLLATE BINARY)>=((NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, t0 ORDER BY ('TRUE' IN (CASE WHEN t0.c1 THEN rt0.c3 WHEN rt0.c2 THEN x'' WHEN t0.c1 THEN rt0.c3 WHEN NULL THEN NULL WHEN rt0.c3 THEN t0.c43 END)), ((rt0.c1 COLLATE BINARY)>=((NOT (rt0.c3)))));
SELECT * FROM rt0, t0 WHERE (x'') ORDER BY ('TRUE' IN (CASE WHEN t0.c1 THEN rt0.c3 WHEN rt0.c2 THEN x'' WHEN t0.c1 THEN rt0.c3 WHEN NULL THEN NULL WHEN rt0.c3 THEN t0.c43 END)), ((rt0.c1 COLLATE BINARY)>=((NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, t0 ORDER BY ('TRUE' IN (CASE WHEN t0.c1 THEN rt0.c3 WHEN rt0.c2 THEN x'' WHEN t0.c1 THEN rt0.c3 WHEN NULL THEN NULL WHEN rt0.c3 THEN t0.c43 END)), ((rt0.c1 COLLATE BINARY)>=((NOT (rt0.c3)))));
SELECT * FROM rt0, t0 WHERE (x'') ORDER BY ('TRUE' IN (CASE WHEN t0.c1 THEN rt0.c3 WHEN rt0.c2 THEN x'' WHEN t0.c1 THEN rt0.c3 WHEN NULL THEN NULL WHEN rt0.c3 THEN t0.c43 END)), ((rt0.c1 COLLATE BINARY)>=((NOT (rt0.c3))));
SELECT ALL * FROM rt0, vt0, rt1, t0 WHERE (rt0.c3) ORDER BY CAST(((rt0.c3) ISNULL) AS TEXT) ASC, 0.3050678909257465;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0, rt1, t0 ORDER BY CAST(((rt0.c3) ISNULL) AS TEXT) ASC, 0.3050678909257465);
SELECT ALL * FROM rt0, vt0, rt1, t0 WHERE (rt0.c3) ORDER BY CAST(((rt0.c3) ISNULL) AS TEXT) ASC, 0.3050678909257465;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0, rt1, t0 ORDER BY CAST(((rt0.c3) ISNULL) AS TEXT) ASC, 0.3050678909257465);
SELECT ALL * FROM rt0, vt0, rt1, t0 WHERE (rt0.c3) ORDER BY CAST(((rt0.c3) ISNULL) AS TEXT) ASC, 0.3050678909257465;
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((((((((t0.c0)IS(t0.c0)))AND(((rt0.c0)IS(t0.c1)))))OR(0.4061933470789677)))OR(CASE WHEN rt0.c1 THEN vt0.c0 END)))OR(((t0.c43)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)IS(t0.c0)))AND(((rt0.c0)IS(t0.c1)))))OR(0.4061933470789677)))OR(CASE WHEN rt0.c1 THEN vt0.c0 END)))OR(((t0.c43)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((((((((t0.c0)IS(t0.c0)))AND(((rt0.c0)IS(t0.c1)))))OR(0.4061933470789677)))OR(CASE WHEN rt0.c1 THEN vt0.c0 END)))OR(((t0.c43)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)IS(t0.c0)))AND(((rt0.c0)IS(t0.c1)))))OR(0.4061933470789677)))OR(CASE WHEN rt0.c1 THEN vt0.c0 END)))OR(((t0.c43)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((((((((t0.c0)IS(t0.c0)))AND(((rt0.c0)IS(t0.c1)))))OR(0.4061933470789677)))OR(CASE WHEN rt0.c1 THEN vt0.c0 END)))OR(((t0.c43)IS(vt0.c0)))));
SELECT ALL * FROM t0, vt0 WHERE (x'') ORDER BY ((((((t0.c0) BETWEEN (t0.c43) AND (t0.c43)))OR(((t0.c0) ISNULL))))AND((((t0.c43))<((t0.c0)))))  NULLS LAST, (((t0.c0, x'e99c', t0.c0)) BETWEEN ((t0.c0, (vt0.c0 IN (t0.c0, t0.c1)), (- (t0.c0)))) AND (((t0.c0 IN ()), ((t0.c1)*(t0.c0)), t0.c0 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c0) BETWEEN (t0.c43) AND (t0.c43)))OR(((t0.c0) ISNULL))))AND((((t0.c43))<((t0.c0)))))  NULLS LAST, (((t0.c0, x'e99c', t0.c0)) BETWEEN ((t0.c0, (vt0.c0 IN (t0.c0, t0.c1)), (- (t0.c0)))) AND (((t0.c0 IN ()), ((t0.c1)*(t0.c0)), t0.c0 COLLATE RTRIM)))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (x'') ORDER BY ((((((t0.c0) BETWEEN (t0.c43) AND (t0.c43)))OR(((t0.c0) ISNULL))))AND((((t0.c43))<((t0.c0)))))  NULLS LAST, (((t0.c0, x'e99c', t0.c0)) BETWEEN ((t0.c0, (vt0.c0 IN (t0.c0, t0.c1)), (- (t0.c0)))) AND (((t0.c0 IN ()), ((t0.c1)*(t0.c0)), t0.c0 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c0) BETWEEN (t0.c43) AND (t0.c43)))OR(((t0.c0) ISNULL))))AND((((t0.c43))<((t0.c0)))))  NULLS LAST, (((t0.c0, x'e99c', t0.c0)) BETWEEN ((t0.c0, (vt0.c0 IN (t0.c0, t0.c1)), (- (t0.c0)))) AND (((t0.c0 IN ()), ((t0.c1)*(t0.c0)), t0.c0 COLLATE RTRIM)))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (x'') ORDER BY ((((((t0.c0) BETWEEN (t0.c43) AND (t0.c43)))OR(((t0.c0) ISNULL))))AND((((t0.c43))<((t0.c0)))))  NULLS LAST, (((t0.c0, x'e99c', t0.c0)) BETWEEN ((t0.c0, (vt0.c0 IN (t0.c0, t0.c1)), (- (t0.c0)))) AND (((t0.c0 IN ()), ((t0.c1)*(t0.c0)), t0.c0 COLLATE RTRIM)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (1983811912 COLLATE RTRIM IN (CASE rt0.c2  WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END)) INNER JOIN vt0 ON rt0.c0 INNER JOIN t0 ON ((((rt0.c1)%(t0.c43))) BETWEEN (0Xffffffffef1a7cbe) AND (((rt1.c2)GLOB(vt0.c0)))) CROSS JOIN rt1 ON (((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 END, CASE rt0.c1  WHEN vt0.c0 THEN '-1760378351' WHEN t0.c1 THEN rt0.c1 WHEN rt0.c3 THEN 'w4' ELSE t0.c43 END, (((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))))) AND ((CAST(rt1.c0 AS BLOB), (rt1.c2 IN (t0.c0)), ((((-1.032807216E9)AND(rt1.c0)))OR('J6zfYu'))))) WHERE (UPPER(((t0.c0) NOT BETWEEN ('1674922048') AND (t0.c43))));
SELECT SUM(count) FROM (SELECT ((UPPER(((t0.c0) NOT BETWEEN ('1674922048') AND (t0.c43)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (1983811912 COLLATE RTRIM IN (CASE rt0.c2  WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END)) INNER JOIN vt0 ON rt0.c0 INNER JOIN t0 ON ((((rt0.c1)%(t0.c43))) BETWEEN (0Xffffffffef1a7cbe) AND (((rt1.c2)GLOB(vt0.c0)))) CROSS JOIN rt1 ON (((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 END, CASE rt0.c1  WHEN vt0.c0 THEN '-1760378351' WHEN t0.c1 THEN rt0.c1 WHEN rt0.c3 THEN 'w4' ELSE t0.c43 END, (((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))))) AND ((CAST(rt1.c0 AS BLOB), (rt1.c2 IN (t0.c0)), ((((-1.032807216E9)AND(rt1.c0)))OR('J6zfYu'))))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (1983811912 COLLATE RTRIM IN (CASE rt0.c2  WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END)) INNER JOIN vt0 ON rt0.c0 INNER JOIN t0 ON ((((rt0.c1)%(t0.c43))) BETWEEN (0Xffffffffef1a7cbe) AND (((rt1.c2)GLOB(vt0.c0)))) CROSS JOIN rt1 ON (((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 END, CASE rt0.c1  WHEN vt0.c0 THEN '-1760378351' WHEN t0.c1 THEN rt0.c1 WHEN rt0.c3 THEN 'w4' ELSE t0.c43 END, (((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))))) AND ((CAST(rt1.c0 AS BLOB), (rt1.c2 IN (t0.c0)), ((((-1.032807216E9)AND(rt1.c0)))OR('J6zfYu'))))) WHERE (UPPER(((t0.c0) NOT BETWEEN ('1674922048') AND (t0.c43))));
SELECT SUM(count) FROM (SELECT ((UPPER(((t0.c0) NOT BETWEEN ('1674922048') AND (t0.c43)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (1983811912 COLLATE RTRIM IN (CASE rt0.c2  WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END)) INNER JOIN vt0 ON rt0.c0 INNER JOIN t0 ON ((((rt0.c1)%(t0.c43))) BETWEEN (0Xffffffffef1a7cbe) AND (((rt1.c2)GLOB(vt0.c0)))) CROSS JOIN rt1 ON (((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 END, CASE rt0.c1  WHEN vt0.c0 THEN '-1760378351' WHEN t0.c1 THEN rt0.c1 WHEN rt0.c3 THEN 'w4' ELSE t0.c43 END, (((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))))) AND ((CAST(rt1.c0 AS BLOB), (rt1.c2 IN (t0.c0)), ((((-1.032807216E9)AND(rt1.c0)))OR('J6zfYu'))))));
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c3) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c2  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c3) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c2  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c3) ORDER BY rt0.c2  NULLS LAST;
SELECT * FROM t0, rt1 WHERE ((~ ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE ((~ ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE ((~ ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((CAST(rt0.c0 AS NUMERIC))AND(rt0.c1 COLLATE RTRIM)))AND(((0xffffffffdcd648ee) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((rt0.c3) NOT NULL))))OR(((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c0 AS NUMERIC))AND(rt0.c1 COLLATE RTRIM)))AND(((0xffffffffdcd648ee) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((rt0.c3) NOT NULL))))OR(((((rt0.c1)AND(rt0.c3)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((CAST(rt0.c0 AS NUMERIC))AND(rt0.c1 COLLATE RTRIM)))AND(((0xffffffffdcd648ee) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((rt0.c3) NOT NULL))))OR(((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c0 AS NUMERIC))AND(rt0.c1 COLLATE RTRIM)))AND(((0xffffffffdcd648ee) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((rt0.c3) NOT NULL))))OR(((((rt0.c1)AND(rt0.c3)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((CAST(rt0.c0 AS NUMERIC))AND(rt0.c1 COLLATE RTRIM)))AND(((0xffffffffdcd648ee) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((rt0.c3) NOT NULL))))OR(((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))));
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c1 END)OR(t0.c43 COLLATE RTRIM)))OR(t0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt1.c1 THEN rt1.c1 END)OR(t0.c43 COLLATE RTRIM)))OR(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, v0, t0);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c1 END)OR(t0.c43 COLLATE RTRIM)))OR(t0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt1.c1 THEN rt1.c1 END)OR(t0.c43 COLLATE RTRIM)))OR(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, v0, t0);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c1 END)OR(t0.c43 COLLATE RTRIM)))OR(t0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(CAST(rt0.c2 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(CAST(rt0.c2 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(CAST(rt0.c2 AS INTEGER) AS BLOB));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, v0 FULL OUTER JOIN t0 ON (((((t0.c1)>>(rt0.c3))))==((CAST(rt1.c0 AS BLOB)))) WHERE (((((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))AND(x'')))%(rt0.c3))) ORDER BY '1796248786' COLLATE BINARY ASC  NULLS FIRST, CAST((((rt0.c1, vt0.c0, -1.712885997E9)) BETWEEN ((rt1.c1, v0.c0, v0.c0)) AND ((NULL, t0.c0, t0.c0))) AS NUMERIC)  NULLS LAST, CASE WHEN (((rt0.c3, rt0.c3, rt0.c1))<=((rt0.c2, rt0.c3, rt0.c1))) THEN (('')>=(t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))AND(x'')))%(rt0.c3))) IS TRUE)  as count FROM rt1, rt0, vt0, v0 FULL OUTER JOIN t0 ON (((((t0.c1)>>(rt0.c3))))=((CAST(rt1.c0 AS BLOB)))) ORDER BY '1796248786' COLLATE BINARY ASC  NULLS FIRST, CAST((((rt0.c1, vt0.c0, -1.712885997E9)) BETWEEN ((rt1.c1, v0.c0, v0.c0)) AND ((NULL, t0.c0, t0.c0))) AS NUMERIC)  NULLS LAST, CASE WHEN (((rt0.c3, rt0.c3, rt0.c1))<=((rt0.c2, rt0.c3, rt0.c1))) THEN (('')>=(t0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, v0 FULL OUTER JOIN t0 ON (((((t0.c1)>>(rt0.c3))))==((CAST(rt1.c0 AS BLOB)))) WHERE (((((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))AND(x'')))%(rt0.c3))) ORDER BY '1796248786' COLLATE BINARY ASC  NULLS FIRST, CAST((((rt0.c1, vt0.c0, -1.712885997E9)) BETWEEN ((rt1.c1, v0.c0, v0.c0)) AND ((NULL, t0.c0, t0.c0))) AS NUMERIC)  NULLS LAST, CASE WHEN (((rt0.c3, rt0.c3, rt0.c1))<=((rt0.c2, rt0.c3, rt0.c1))) THEN (('')>=(t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))AND(x'')))%(rt0.c3))) IS TRUE)  as count FROM rt1, rt0, vt0, v0 FULL OUTER JOIN t0 ON (((((t0.c1)>>(rt0.c3))))=((CAST(rt1.c0 AS BLOB)))) ORDER BY '1796248786' COLLATE BINARY ASC  NULLS FIRST, CAST((((rt0.c1, vt0.c0, -1.712885997E9)) BETWEEN ((rt1.c1, v0.c0, v0.c0)) AND ((NULL, t0.c0, t0.c0))) AS NUMERIC)  NULLS LAST, CASE WHEN (((rt0.c3, rt0.c3, rt0.c1))<=((rt0.c2, rt0.c3, rt0.c1))) THEN (('')>=(t0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, v0 FULL OUTER JOIN t0 ON (((((t0.c1)>>(rt0.c3))))==((CAST(rt1.c0 AS BLOB)))) WHERE (((((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))AND(x'')))%(rt0.c3))) ORDER BY '1796248786' COLLATE BINARY ASC  NULLS FIRST, CAST((((rt0.c1, vt0.c0, -1.712885997E9)) BETWEEN ((rt1.c1, v0.c0, v0.c0)) AND ((NULL, t0.c0, t0.c0))) AS NUMERIC)  NULLS LAST, CASE WHEN (((rt0.c3, rt0.c3, rt0.c1))<=((rt0.c2, rt0.c3, rt0.c1))) THEN (('')>=(t0.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN rt0 ON (((- (rt1.c0))) NOTNULL) CROSS JOIN rt1 ON (((rt0.c3)IS(rt0.c3)) IN ()) WHERE (CAST(LTRIM(rt0.c3) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LTRIM(rt0.c3) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON (((- (rt1.c0))) NOTNULL) CROSS JOIN rt1 ON (((rt0.c3)IS(rt0.c3)) IN ()));
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN rt0 ON (((- (rt1.c0))) NOTNULL) CROSS JOIN rt1 ON (((rt0.c3)IS(rt0.c3)) IN ()) WHERE (CAST(LTRIM(rt0.c3) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LTRIM(rt0.c3) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON (((- (rt1.c0))) NOTNULL) CROSS JOIN rt1 ON (((rt0.c3)IS(rt0.c3)) IN ()));
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN rt0 ON (((- (rt1.c0))) NOTNULL) CROSS JOIN rt1 ON (((rt0.c3)IS(rt0.c3)) IN ()) WHERE (CAST(LTRIM(rt0.c3) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE))<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY TYPEOF(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '1536306948' THEN 1.824937629E9 WHEN vt0.c0 THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '1536306948' THEN 1.824937629E9 WHEN vt0.c0 THEN vt0.c0 END));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE))<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY TYPEOF(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '1536306948' THEN 1.824937629E9 WHEN vt0.c0 THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '1536306948' THEN 1.824937629E9 WHEN vt0.c0 THEN vt0.c0 END));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE))<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY TYPEOF(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '1536306948' THEN 1.824937629E9 WHEN vt0.c0 THEN vt0.c0 END);
SELECT ALL * FROM rt0, v0, t0 FULL OUTER JOIN rt1 ON ((((+ (rt1.c2)), UNLIKELY(DISTINCT t0.c1), ((((t0.c0)OR(v0.c0)))AND('-2044403424')), CAST(rt0.c0 AS REAL), '-1139039299'))<>((((rt0.c1)>=(rt1.c1)), 0.39998930968794544, (((0.6368122014281028)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))), (('-1353504352') BETWEEN (rt0.c1) AND (rt0.c3)), CAST(rt0.c1 AS NUMERIC)))) WHERE ((((('557863033')LIKE(rt1.c0)))<(rt1.c0))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('557863033')LIKE(rt1.c0)))<(rt1.c0))) IS TRUE)  as count FROM rt0, v0, t0 FULL OUTER JOIN rt1 ON ((((+ (rt1.c2)), UNLIKELY(DISTINCT t0.c1), ((((t0.c0)OR(v0.c0)))AND('-2044403424')), CAST(rt0.c0 AS REAL), '-1139039299'))!=((((rt0.c1)>=(rt1.c1)), 0.39998930968794544, (((0.6368122014281028)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))), (('-1353504352') BETWEEN (rt0.c1) AND (rt0.c3)), CAST(rt0.c1 AS NUMERIC)))) ORDER BY rt0.c0 DESC);
SELECT ALL * FROM rt0, v0, t0 FULL OUTER JOIN rt1 ON ((((+ (rt1.c2)), UNLIKELY(DISTINCT t0.c1), ((((t0.c0)OR(v0.c0)))AND('-2044403424')), CAST(rt0.c0 AS REAL), '-1139039299'))<>((((rt0.c1)>=(rt1.c1)), 0.39998930968794544, (((0.6368122014281028)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))), (('-1353504352') BETWEEN (rt0.c1) AND (rt0.c3)), CAST(rt0.c1 AS NUMERIC)))) WHERE ((((('557863033')LIKE(rt1.c0)))<(rt1.c0))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('557863033')LIKE(rt1.c0)))<(rt1.c0))) IS TRUE)  as count FROM rt0, v0, t0 FULL OUTER JOIN rt1 ON ((((+ (rt1.c2)), UNLIKELY(DISTINCT t0.c1), ((((t0.c0)OR(v0.c0)))AND('-2044403424')), CAST(rt0.c0 AS REAL), '-1139039299'))!=((((rt0.c1)>=(rt1.c1)), 0.39998930968794544, (((0.6368122014281028)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))), (('-1353504352') BETWEEN (rt0.c1) AND (rt0.c3)), CAST(rt0.c1 AS NUMERIC)))) ORDER BY rt0.c0 DESC);
SELECT ALL * FROM rt0, v0, t0 FULL OUTER JOIN rt1 ON ((((+ (rt1.c2)), UNLIKELY(DISTINCT t0.c1), ((((t0.c0)OR(v0.c0)))AND('-2044403424')), CAST(rt0.c0 AS REAL), '-1139039299'))<>((((rt0.c1)>=(rt1.c1)), 0.39998930968794544, (((0.6368122014281028)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))), (('-1353504352') BETWEEN (rt0.c1) AND (rt0.c3)), CAST(rt0.c1 AS NUMERIC)))) WHERE ((((('557863033')LIKE(rt1.c0)))<(rt1.c0))) ORDER BY rt0.c0 DESC;
SELECT COUNT(*) FROM v0, rt1 NOT INDEXED, t0 WHERE ((COALESCE(rt1.c2, t0.c43) IN ())) ORDER BY '-232392848' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((COALESCE(rt1.c2, t0.c43) IN ())) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY '-232392848' COLLATE NOCASE ASC);
SELECT COUNT(*) FROM v0, rt1 NOT INDEXED, t0 WHERE ((COALESCE(rt1.c2, t0.c43) IN ())) ORDER BY '-232392848' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((COALESCE(rt1.c2, t0.c43) IN ())) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY '-232392848' COLLATE NOCASE ASC);
SELECT COUNT(*) FROM v0, rt1 NOT INDEXED, t0 WHERE ((COALESCE(rt1.c2, t0.c43) IN ())) ORDER BY '-232392848' COLLATE NOCASE ASC;
SELECT * FROM v0, rt0, vt0, t0 INNER JOIN rt1 ON (((t0.c0) IS FALSE) IN ()) WHERE (((rt1.c0)GLOB(((rt1.c0) BETWEEN (t0.c43) AND (t0.c0))))) ORDER BY x''  NULLS FIRST, ((CAST(rt0.c3 AS REAL)) NOT BETWEEN (((v0.c0) BETWEEN (rt1.c2) AND (t0.c43))) AND (((t0.c43) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)GLOB(((rt1.c0) BETWEEN (t0.c43) AND (t0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0, t0 INNER JOIN rt1 ON (((t0.c0) IS FALSE) IN ()) ORDER BY x''  NULLS FIRST, ((CAST(rt0.c3 AS REAL)) NOT BETWEEN (((v0.c0) BETWEEN (rt1.c2) AND (t0.c43))) AND (((t0.c43) ISNULL))) ASC  NULLS FIRST);
SELECT * FROM v0, rt0, vt0, t0 INNER JOIN rt1 ON (((t0.c0) IS FALSE) IN ()) WHERE (((rt1.c0)GLOB(((rt1.c0) BETWEEN (t0.c43) AND (t0.c0))))) ORDER BY x''  NULLS FIRST, ((CAST(rt0.c3 AS REAL)) NOT BETWEEN (((v0.c0) BETWEEN (rt1.c2) AND (t0.c43))) AND (((t0.c43) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)GLOB(((rt1.c0) BETWEEN (t0.c43) AND (t0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0, t0 INNER JOIN rt1 ON (((t0.c0) IS FALSE) IN ()) ORDER BY x''  NULLS FIRST, ((CAST(rt0.c3 AS REAL)) NOT BETWEEN (((v0.c0) BETWEEN (rt1.c2) AND (t0.c43))) AND (((t0.c43) ISNULL))) ASC  NULLS FIRST);
SELECT * FROM v0, rt0, vt0, t0 INNER JOIN rt1 ON (((t0.c0) IS FALSE) IN ()) WHERE (((rt1.c0)GLOB(((rt1.c0) BETWEEN (t0.c43) AND (t0.c0))))) ORDER BY x''  NULLS FIRST, ((CAST(rt0.c3 AS REAL)) NOT BETWEEN (((v0.c0) BETWEEN (rt1.c2) AND (t0.c43))) AND (((t0.c43) ISNULL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((((((t0.c43)AND(rt0.c2)))AND(rt1.c2)))&(CAST(t0.c1 AS BLOB))) LEFT OUTER JOIN rt1 ON (NOT ((NOT (vt0.c0)))) LEFT OUTER JOIN t0 ON ((((rt0.c0) NOT NULL))|((rt0.c3 IN (rt1.c1)))) LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT CASE rt1.c1  WHEN rt0.c2 THEN rt1.c1 ELSE vt0.c0 END) WHERE (CAST(rt1.c2 AS REAL) COLLATE NOCASE) ORDER BY ((CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((((t0.c43)AND(rt0.c2)))AND(rt1.c2)))&(CAST(t0.c1 AS BLOB))) LEFT OUTER JOIN rt1 ON (NOT ((NOT (vt0.c0)))) LEFT OUTER JOIN t0 ON ((((rt0.c0) NOT NULL))|((rt0.c3 IN (rt1.c1)))) LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT CASE rt1.c1  WHEN rt0.c2 THEN rt1.c1 ELSE vt0.c0 END) ORDER BY ((CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END) ISNULL));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((((((t0.c43)AND(rt0.c2)))AND(rt1.c2)))&(CAST(t0.c1 AS BLOB))) LEFT OUTER JOIN rt1 ON (NOT ((NOT (vt0.c0)))) LEFT OUTER JOIN t0 ON ((((rt0.c0) NOT NULL))|((rt0.c3 IN (rt1.c1)))) LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT CASE rt1.c1  WHEN rt0.c2 THEN rt1.c1 ELSE vt0.c0 END) WHERE (CAST(rt1.c2 AS REAL) COLLATE NOCASE) ORDER BY ((CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((((t0.c43)AND(rt0.c2)))AND(rt1.c2)))&(CAST(t0.c1 AS BLOB))) LEFT OUTER JOIN rt1 ON (NOT ((NOT (vt0.c0)))) LEFT OUTER JOIN t0 ON ((((rt0.c0) NOT NULL))|((rt0.c3 IN (rt1.c1)))) LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT CASE rt1.c1  WHEN rt0.c2 THEN rt1.c1 ELSE vt0.c0 END) ORDER BY ((CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END) ISNULL));
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((- (v0.c0)))))) ORDER BY (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM, CASE WHEN vt0.c0 THEN v0.c0 END, 0.14879822073882187)) AND (((v0.c0 IN ()), ((vt0.c0) NOTNULL), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((- (v0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM, CASE WHEN vt0.c0 THEN v0.c0 END, 0.14879822073882187)) AND (((v0.c0 IN ()), ((vt0.c0) NOTNULL), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) DESC);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((- (v0.c0)))))) ORDER BY (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM, CASE WHEN vt0.c0 THEN v0.c0 END, 0.14879822073882187)) AND (((v0.c0 IN ()), ((vt0.c0) NOTNULL), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((- (v0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM, CASE WHEN vt0.c0 THEN v0.c0 END, 0.14879822073882187)) AND (((v0.c0 IN ()), ((vt0.c0) NOTNULL), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) DESC);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((- (v0.c0)))))) ORDER BY (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM, CASE WHEN vt0.c0 THEN v0.c0 END, 0.14879822073882187)) AND (((v0.c0 IN ()), ((vt0.c0) NOTNULL), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) DESC;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c1)<=(t0.c43))) NOT BETWEEN (ABS(rt1.c1)) AND (((rt1.c0) IS FALSE))) LEFT OUTER JOIN v0 ON ((NULL) NOT NULL) WHERE (UPPER(((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c1)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c1)<=(t0.c43))) NOT BETWEEN (ABS(rt1.c1)) AND (((rt1.c0) IS FALSE))) LEFT OUTER JOIN v0 ON ((NULL) NOT NULL));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c1)<=(t0.c43))) NOT BETWEEN (ABS(rt1.c1)) AND (((rt1.c0) IS FALSE))) LEFT OUTER JOIN v0 ON ((NULL) NOT NULL) WHERE (UPPER(((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c1)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c1)<=(t0.c43))) NOT BETWEEN (ABS(rt1.c1)) AND (((rt1.c0) IS FALSE))) LEFT OUTER JOIN v0 ON ((NULL) NOT NULL));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c1)<=(t0.c43))) NOT BETWEEN (ABS(rt1.c1)) AND (((rt1.c0) IS FALSE))) LEFT OUTER JOIN v0 ON ((NULL) NOT NULL) WHERE (UPPER(((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c1))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c0) NOT NULL)) NOTNULL)) ORDER BY x'fcdd' ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY x'fcdd' ASC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c0) NOT NULL)) NOTNULL)) ORDER BY x'fcdd' ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY x'fcdd' ASC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c0) NOT NULL)) NOTNULL)) ORDER BY x'fcdd' ASC;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(CAST(t0.c1 AS TEXT) AS INTEGER)) ORDER BY ((((((rt1.c2)AND(rt1.c0)))OR(t0.c1))) IS FALSE) ASC, ((rt1.c0 IN ()) IN ()) ASC, CAST(CAST(rt1.c1 AS NUMERIC) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c1 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((((rt1.c2)AND(rt1.c0)))OR(t0.c1))) IS FALSE) ASC, ((rt1.c0 IN ()) IN ()) ASC, CAST(CAST(rt1.c1 AS NUMERIC) AS BLOB));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(CAST(t0.c1 AS TEXT) AS INTEGER)) ORDER BY ((((((rt1.c2)AND(rt1.c0)))OR(t0.c1))) IS FALSE) ASC, ((rt1.c0 IN ()) IN ()) ASC, CAST(CAST(rt1.c1 AS NUMERIC) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c1 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((((rt1.c2)AND(rt1.c0)))OR(t0.c1))) IS FALSE) ASC, ((rt1.c0 IN ()) IN ()) ASC, CAST(CAST(rt1.c1 AS NUMERIC) AS BLOB));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(CAST(t0.c1 AS TEXT) AS INTEGER)) ORDER BY ((((((rt1.c2)AND(rt1.c0)))OR(t0.c1))) IS FALSE) ASC, ((rt1.c0 IN ()) IN ()) ASC, CAST(CAST(rt1.c1 AS NUMERIC) AS BLOB);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON rt1.c2 WHERE ((((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c0)) IN ())) ORDER BY ((((((((((((((((rt0.c0)OR(rt1.c2)))AND(rt1.c2)))AND(x'bc8b')))AND(rt1.c2)))AND(CAST(rt1.c1 AS INTEGER))))OR(CAST(rt0.c2 AS TEXT))))AND(rt0.c2)))OR(((rt0.c1)|(rt1.c1))))  NULLS FIRST, rt1.c0 ASC  NULLS LAST, DATE(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, (((rt0.c2))!=((rt1.c1))), ((rt0.c1)/(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON rt1.c2 ORDER BY ((((((((((((((((rt0.c0)OR(rt1.c2)))AND(rt1.c2)))AND(x'bc8b')))AND(rt1.c2)))AND(CAST(rt1.c1 AS INTEGER))))OR(CAST(rt0.c2 AS TEXT))))AND(rt0.c2)))OR(((rt0.c1)|(rt1.c1))))  NULLS FIRST, rt1.c0 ASC  NULLS LAST, DATE(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, (((rt0.c2))<>((rt1.c1))), ((rt0.c1)/(rt0.c3))));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON rt1.c2 WHERE ((((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c0)) IN ())) ORDER BY ((((((((((((((((rt0.c0)OR(rt1.c2)))AND(rt1.c2)))AND(x'bc8b')))AND(rt1.c2)))AND(CAST(rt1.c1 AS INTEGER))))OR(CAST(rt0.c2 AS TEXT))))AND(rt0.c2)))OR(((rt0.c1)|(rt1.c1))))  NULLS FIRST, rt1.c0 ASC  NULLS LAST, DATE(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, (((rt0.c2))!=((rt1.c1))), ((rt0.c1)/(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON rt1.c2 ORDER BY ((((((((((((((((rt0.c0)OR(rt1.c2)))AND(rt1.c2)))AND(x'bc8b')))AND(rt1.c2)))AND(CAST(rt1.c1 AS INTEGER))))OR(CAST(rt0.c2 AS TEXT))))AND(rt0.c2)))OR(((rt0.c1)|(rt1.c1))))  NULLS FIRST, rt1.c0 ASC  NULLS LAST, DATE(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, (((rt0.c2))<>((rt1.c1))), ((rt0.c1)/(rt0.c3))));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON rt1.c2 WHERE ((((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c0)) IN ())) ORDER BY ((((((((((((((((rt0.c0)OR(rt1.c2)))AND(rt1.c2)))AND(x'bc8b')))AND(rt1.c2)))AND(CAST(rt1.c1 AS INTEGER))))OR(CAST(rt0.c2 AS TEXT))))AND(rt0.c2)))OR(((rt0.c1)|(rt1.c1))))  NULLS FIRST, rt1.c0 ASC  NULLS LAST, DATE(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, (((rt0.c2))!=((rt1.c1))), ((rt0.c1)/(rt0.c3)));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))/(((rt0.c0)LIKE(rt0.c3))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))/(((rt0.c0)LIKE(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))/(((rt0.c0)LIKE(rt0.c3))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))/(((rt0.c0)LIKE(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))/(((rt0.c0)LIKE(rt0.c3))))) ORDER BY NULL ASC;
SELECT ALL * FROM t0, vt0, rt1 WHERE (('*C' IN ())) ORDER BY (- (rt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('*C' IN ())) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY (- (rt1.c1))  NULLS FIRST);
SELECT ALL * FROM t0, vt0, rt1 WHERE (('*C' IN ())) ORDER BY (- (rt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('*C' IN ())) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY (- (rt1.c1))  NULLS FIRST);
SELECT ALL * FROM t0, vt0, rt1 WHERE (('*C' IN ())) ORDER BY (- (rt1.c1))  NULLS FIRST;
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON v0.c0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END) BETWEEN (((v0.c0) NOT NULL)) AND (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL)))) NOT BETWEEN (((vt0.c0)=(vt0.c0))) AND ((((v0.c0))<((vt0.c0)))))  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))OR(v0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((v0.c0)&(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END) BETWEEN (((v0.c0) NOT NULL)) AND (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON v0.c0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL)))) NOT BETWEEN (((vt0.c0)=(vt0.c0))) AND ((((v0.c0))<((vt0.c0)))))  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))OR(v0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((v0.c0)&(vt0.c0)))));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON v0.c0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END) BETWEEN (((v0.c0) NOT NULL)) AND (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL)))) NOT BETWEEN (((vt0.c0)=(vt0.c0))) AND ((((v0.c0))<((vt0.c0)))))  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))OR(v0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((v0.c0)&(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END) BETWEEN (((v0.c0) NOT NULL)) AND (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON v0.c0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL)))) NOT BETWEEN (((vt0.c0)=(vt0.c0))) AND ((((v0.c0))<((vt0.c0)))))  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))OR(v0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((v0.c0)&(vt0.c0)))));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON v0.c0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END) BETWEEN (((v0.c0) NOT NULL)) AND (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL)))) NOT BETWEEN (((vt0.c0)=(vt0.c0))) AND ((((v0.c0))<((vt0.c0)))))  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))OR(v0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((v0.c0)&(vt0.c0))));
SELECT ALL * FROM vt0, v0 WHERE (NULL) ORDER BY CASE LIKELIHOOD(v0.c0, 0.6224996365075595)  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN vt0.c0 WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (((v0.c0))=((vt0.c0))) WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE NULL END DESC, vt0.c0 ASC, (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE LIKELIHOOD(v0.c0, 0.6224996365075595)  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN vt0.c0 WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (((v0.c0))=((vt0.c0))) WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE NULL END DESC, vt0.c0 ASC, (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (NULL) ORDER BY CASE LIKELIHOOD(v0.c0, 0.6224996365075595)  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN vt0.c0 WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (((v0.c0))=((vt0.c0))) WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE NULL END DESC, vt0.c0 ASC, (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE LIKELIHOOD(v0.c0, 0.6224996365075595)  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN vt0.c0 WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (((v0.c0))=((vt0.c0))) WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE NULL END DESC, vt0.c0 ASC, (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (NULL) ORDER BY CASE LIKELIHOOD(v0.c0, 0.6224996365075595)  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN vt0.c0 WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (((v0.c0))=((vt0.c0))) WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE NULL END DESC, vt0.c0 ASC, (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c1 IN (t0.c0)))AND(rt0.c2 COLLATE NOCASE)))OR((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN (t0.c0)))AND(rt0.c2 COLLATE NOCASE)))OR((NOT (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c1 IN (t0.c0)))AND(rt0.c2 COLLATE NOCASE)))OR((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN (t0.c0)))AND(rt0.c2 COLLATE NOCASE)))OR((NOT (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c1 IN (t0.c0)))AND(rt0.c2 COLLATE NOCASE)))OR((NOT (rt0.c1)))));
SELECT * FROM rt1, v0, t0, rt0, vt0 WHERE ((0.7341453528042515 IN ()));
SELECT SUM(count) FROM (SELECT (((0.7341453528042515 IN ())) IS TRUE)  as count FROM rt1, v0 NOT INDEXED, t0, rt0, vt0);
SELECT * FROM rt1, v0, t0, rt0, vt0 WHERE ((0.7341453528042515 IN ()));
SELECT SUM(count) FROM (SELECT (((0.7341453528042515 IN ())) IS TRUE)  as count FROM rt1, v0 NOT INDEXED, t0, rt0, vt0);
SELECT * FROM rt1, v0, t0, rt0, vt0 WHERE ((0.7341453528042515 IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT * FROM v0, rt1 NATURAL JOIN t0 WHERE ((((rt1.c1)) NOT BETWEEN (((((rt1.c0))==((t0.c0))))) AND ((CAST(t0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN (((((rt1.c0))==((t0.c0))))) AND ((CAST(t0.c1 AS NUMERIC))))) IS TRUE)  as count FROM v0, rt1 NATURAL JOIN t0);
SELECT * FROM v0, rt1 NATURAL JOIN t0 WHERE ((((rt1.c1)) NOT BETWEEN (((((rt1.c0))==((t0.c0))))) AND ((CAST(t0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN (((((rt1.c0))==((t0.c0))))) AND ((CAST(t0.c1 AS NUMERIC))))) IS TRUE)  as count FROM v0, rt1 NATURAL JOIN t0);
SELECT * FROM v0, rt1 NATURAL JOIN t0 WHERE ((((rt1.c1)) NOT BETWEEN (((((rt1.c0))==((t0.c0))))) AND ((CAST(t0.c1 AS NUMERIC)))));
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((((rt0.c3)%(rt0.c0))) BETWEEN ('') AND (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY CASE ((vt0.c0)*(rt0.c0))  WHEN ((rt1.c1)LIKE(rt0.c3)) THEN (('1050368417') NOT BETWEEN (0.5810819257540804) AND (rt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)%(rt0.c0))) BETWEEN ('') AND (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CASE ((vt0.c0)*(rt0.c0))  WHEN ((rt1.c1)LIKE(rt0.c3)) THEN (('1050368417') NOT BETWEEN (0.5810819257540804) AND (rt1.c0)) END ASC);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((((rt0.c3)%(rt0.c0))) BETWEEN ('') AND (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY CASE ((vt0.c0)*(rt0.c0))  WHEN ((rt1.c1)LIKE(rt0.c3)) THEN (('1050368417') NOT BETWEEN (0.5810819257540804) AND (rt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)%(rt0.c0))) BETWEEN ('') AND (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CASE ((vt0.c0)*(rt0.c0))  WHEN ((rt1.c1)LIKE(rt0.c3)) THEN (('1050368417') NOT BETWEEN (0.5810819257540804) AND (rt1.c0)) END ASC);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((((rt0.c3)%(rt0.c0))) BETWEEN ('') AND (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY CASE ((vt0.c0)*(rt0.c0))  WHEN ((rt1.c1)LIKE(rt0.c3)) THEN (('1050368417') NOT BETWEEN (0.5810819257540804) AND (rt1.c0)) END ASC;
SELECT * FROM rt1, t0 WHERE (((t0.c0 IN (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN (t0.c0)) IN ())) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((t0.c0 IN (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN (t0.c0)) IN ())) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((t0.c0 IN (t0.c0)) IN ()));
SELECT * FROM rt0 WHERE ((NOT (NULLIF(rt0.c3, x''))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULLIF(rt0.c3, x'')))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (NULLIF(rt0.c3, x''))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULLIF(rt0.c3, x'')))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (NULLIF(rt0.c3, x''))));
SELECT COUNT(*) FROM rt0, t0, rt1, vt0 RIGHT OUTER JOIN v0 ON ((rt0.c2) ISNULL) COLLATE BINARY WHERE (((((((rt0.c2)OR(t0.c1)))AND(vt0.c0)))<>(((((((((vt0.c0)AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))OR(0.5080650376242871)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(t0.c1)))AND(vt0.c0)))!=(((((((((vt0.c0)AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))OR(0.5080650376242871))))) IS TRUE)  as count FROM rt0, t0, rt1, vt0 RIGHT OUTER JOIN v0 ON ((rt0.c2) ISNULL) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, t0, rt1, vt0 RIGHT OUTER JOIN v0 ON ((rt0.c2) ISNULL) COLLATE BINARY WHERE (((((((rt0.c2)OR(t0.c1)))AND(vt0.c0)))<>(((((((((vt0.c0)AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))OR(0.5080650376242871)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(t0.c1)))AND(vt0.c0)))!=(((((((((vt0.c0)AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))OR(0.5080650376242871))))) IS TRUE)  as count FROM rt0, t0, rt1, vt0 RIGHT OUTER JOIN v0 ON ((rt0.c2) ISNULL) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, t0, rt1, vt0 RIGHT OUTER JOIN v0 ON ((rt0.c2) ISNULL) COLLATE BINARY WHERE (((((((rt0.c2)OR(t0.c1)))AND(vt0.c0)))<>(((((((((vt0.c0)AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))OR(0.5080650376242871)))));
SELECT ALL * FROM rt0 NOT INDEXED INNER JOIN rt1 ON (+ ((rt1.c2 IN ()))) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (+ ((rt1.c2 IN ()))));
SELECT ALL * FROM rt0 NOT INDEXED INNER JOIN rt1 ON (+ ((rt1.c2 IN ()))) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (+ ((rt1.c2 IN ()))));
SELECT ALL * FROM rt0 NOT INDEXED INNER JOIN rt1 ON (+ ((rt1.c2 IN ()))) WHERE ('');
SELECT ALL * FROM v0, rt0, vt0 WHERE (CAST(((((rt0.c0)AND(v0.c0)))OR('-1696637352')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)AND(v0.c0)))OR('-1696637352')) AS INTEGER)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (CAST(((((rt0.c0)AND(v0.c0)))OR('-1696637352')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)AND(v0.c0)))OR('-1696637352')) AS INTEGER)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (CAST(((((rt0.c0)AND(v0.c0)))OR('-1696637352')) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN rt1 ON (rt0.c0 IN ()) WHERE (((((rt1.c0)+(rt1.c1)))!=(((rt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) ORDER BY (NOT ((('-1499868140')|(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)+(rt1.c1)))<>(((rt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN rt1 ON (rt0.c0 IN ()) ORDER BY (NOT ((('-1499868140')|(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN rt1 ON (rt0.c0 IN ()) WHERE (((((rt1.c0)+(rt1.c1)))!=(((rt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) ORDER BY (NOT ((('-1499868140')|(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)+(rt1.c1)))<>(((rt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN rt1 ON (rt0.c0 IN ()) ORDER BY (NOT ((('-1499868140')|(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN rt1 ON (rt0.c0 IN ()) WHERE (((((rt1.c0)+(rt1.c1)))!=(((rt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) ORDER BY (NOT ((('-1499868140')|(rt1.c1))));
SELECT * FROM rt0, t0, rt1, v0, vt0 WHERE (((NULL) BETWEEN (((0.6237108984087056) BETWEEN (vt0.c0) AND (t0.c1))) AND (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((0.6237108984087056) BETWEEN (vt0.c0) AND (t0.c1))) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0, rt1, v0, vt0);
SELECT * FROM rt0, t0, rt1, v0, vt0 WHERE (((NULL) BETWEEN (((0.6237108984087056) BETWEEN (vt0.c0) AND (t0.c1))) AND (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((0.6237108984087056) BETWEEN (vt0.c0) AND (t0.c1))) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0, rt1, v0, vt0);
SELECT * FROM rt0, t0, rt1, v0, vt0 WHERE (((NULL) BETWEEN (((0.6237108984087056) BETWEEN (vt0.c0) AND (t0.c1))) AND (rt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM rt1, rt0 LEFT OUTER JOIN v0 ON (rt0.c3 IN ()) LEFT OUTER JOIN vt0 ON (((((0Xffffffffd793ddd4) NOT BETWEEN (rt1.c1) AND (rt0.c0)), (v0.c0 IN ()), CAST(rt1.c1 AS INTEGER)))>((CASE rt0.c0  WHEN v0.c0 THEN rt1.c2 END, rt1.c2, ((t0.c1)LIKE(v0.c0))))) LEFT OUTER JOIN t0 ON (rt0.c3 COLLATE BINARY IN (0x59c7698a, ((vt0.c0) IS TRUE))) WHERE (NULL) ORDER BY 'ꨶ&M&8륨q' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN v0 ON (rt0.c3 IN ()) LEFT OUTER JOIN vt0 ON (((((0Xffffffffd793ddd4) NOT BETWEEN (rt1.c1) AND (rt0.c0)), (v0.c0 IN ()), CAST(rt1.c1 AS INTEGER)))>((CASE rt0.c0  WHEN v0.c0 THEN rt1.c2 END, rt1.c2, ((t0.c1)LIKE(v0.c0))))) LEFT OUTER JOIN t0 ON (rt0.c3 COLLATE BINARY IN (0x59c7698a, ((vt0.c0) IS TRUE))) ORDER BY 'ꨶ&M&8륨q' DESC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 LEFT OUTER JOIN v0 ON (rt0.c3 IN ()) LEFT OUTER JOIN vt0 ON (((((0Xffffffffd793ddd4) NOT BETWEEN (rt1.c1) AND (rt0.c0)), (v0.c0 IN ()), CAST(rt1.c1 AS INTEGER)))>((CASE rt0.c0  WHEN v0.c0 THEN rt1.c2 END, rt1.c2, ((t0.c1)LIKE(v0.c0))))) LEFT OUTER JOIN t0 ON (rt0.c3 COLLATE BINARY IN (0x59c7698a, ((vt0.c0) IS TRUE))) WHERE (NULL) ORDER BY 'ꨶ&M&8륨q' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN v0 ON (rt0.c3 IN ()) LEFT OUTER JOIN vt0 ON (((((0Xffffffffd793ddd4) NOT BETWEEN (rt1.c1) AND (rt0.c0)), (v0.c0 IN ()), CAST(rt1.c1 AS INTEGER)))>((CASE rt0.c0  WHEN v0.c0 THEN rt1.c2 END, rt1.c2, ((t0.c1)LIKE(v0.c0))))) LEFT OUTER JOIN t0 ON (rt0.c3 COLLATE BINARY IN (0x59c7698a, ((vt0.c0) IS TRUE))) ORDER BY 'ꨶ&M&8륨q' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, v0, rt0, vt0 WHERE ((~ (UNLIKELY(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (UNLIKELY(rt0.c0)))) IS TRUE)  as count FROM t0, rt1, v0 NOT INDEXED, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt1, v0, rt0, vt0 WHERE ((~ (UNLIKELY(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (UNLIKELY(rt0.c0)))) IS TRUE)  as count FROM t0, rt1, v0 NOT INDEXED, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt1, v0, rt0, vt0 WHERE ((~ (UNLIKELY(rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((IFNULL(rt0.c0, rt0.c2))<<(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c0, rt0.c2))<<(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((IFNULL(rt0.c0, rt0.c2))<<(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c0, rt0.c2))<<(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((IFNULL(rt0.c0, rt0.c2))<<(rt0.c2)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON v0.c0 RIGHT OUTER JOIN vt0 ON ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)) COLLATE BINARY WHERE (((CASE t0.c43  WHEN vt0.c0 THEN t0.c43 END) IS TRUE)) ORDER BY ((((t0.c0)>>(t0.c0)))*('-1278704048'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c43  WHEN vt0.c0 THEN t0.c43 END) IS TRUE)) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON v0.c0 RIGHT OUTER JOIN vt0 ON ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)) COLLATE BINARY ORDER BY ((((t0.c0)>>(t0.c0)))*('-1278704048'))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON v0.c0 RIGHT OUTER JOIN vt0 ON ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)) COLLATE BINARY WHERE (((CASE t0.c43  WHEN vt0.c0 THEN t0.c43 END) IS TRUE)) ORDER BY ((((t0.c0)>>(t0.c0)))*('-1278704048'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c43  WHEN vt0.c0 THEN t0.c43 END) IS TRUE)) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON v0.c0 RIGHT OUTER JOIN vt0 ON ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)) COLLATE BINARY ORDER BY ((((t0.c0)>>(t0.c0)))*('-1278704048'))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON v0.c0 RIGHT OUTER JOIN vt0 ON ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)) COLLATE BINARY WHERE (((CASE t0.c43  WHEN vt0.c0 THEN t0.c43 END) IS TRUE)) ORDER BY ((((t0.c0)>>(t0.c0)))*('-1278704048'))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0, rt0 CROSS JOIN vt0 ON 0.9865747557250579 LEFT OUTER JOIN rt1 ON ((- (t0.c1)) IN ()) WHERE ((((rt1.c0, rt0.c1, t0.c1)) BETWEEN ((rt1.c2, 'K~#\nH', t0.c43)) AND ((rt1.c2, rt0.c3, t0.c0))) COLLATE RTRIM) ORDER BY ((((((v0.c0) IS TRUE))AND((+ (rt0.c0)))))OR((rt0.c3 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt0.c1, t0.c1)) BETWEEN ((rt1.c2, 'K~#\nH', t0.c43)) AND ((rt1.c2, rt0.c3, t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, rt0 CROSS JOIN vt0 ON 0.9865747557250579 LEFT OUTER JOIN rt1 ON ((- (t0.c1)) IN ()) ORDER BY ((((((v0.c0) IS TRUE))AND((+ (rt0.c0)))))OR((rt0.c3 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, rt0 CROSS JOIN vt0 ON 0.9865747557250579 LEFT OUTER JOIN rt1 ON ((- (t0.c1)) IN ()) WHERE ((((rt1.c0, rt0.c1, t0.c1)) BETWEEN ((rt1.c2, 'K~#\nH', t0.c43)) AND ((rt1.c2, rt0.c3, t0.c0))) COLLATE RTRIM) ORDER BY ((((((v0.c0) IS TRUE))AND((+ (rt0.c0)))))OR((rt0.c3 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt0.c1, t0.c1)) BETWEEN ((rt1.c2, 'K~#\nH', t0.c43)) AND ((rt1.c2, rt0.c3, t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, rt0 CROSS JOIN vt0 ON 0.9865747557250579 LEFT OUTER JOIN rt1 ON ((- (t0.c1)) IN ()) ORDER BY ((((((v0.c0) IS TRUE))AND((+ (rt0.c0)))))OR((rt0.c3 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, rt0 CROSS JOIN vt0 ON 0.9865747557250579 LEFT OUTER JOIN rt1 ON ((- (t0.c1)) IN ()) WHERE ((((rt1.c0, rt0.c1, t0.c1)) BETWEEN ((rt1.c2, 'K~#\nH', t0.c43)) AND ((rt1.c2, rt0.c3, t0.c0))) COLLATE RTRIM) ORDER BY ((((((v0.c0) IS TRUE))AND((+ (rt0.c0)))))OR((rt0.c3 IN ())))  NULLS LAST;
SELECT ALL * FROM rt1, v0, vt0, rt0 LEFT OUTER JOIN t0 ON (((rt0.c3)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((rt0.c0))) WHERE (((((((rt0.c0)IS(rt1.c0)))OR(CAST(rt0.c2 AS REAL))))OR(((rt1.c2)>>(t0.c1))))) ORDER BY CASE CASE t0.c0  WHEN rt0.c2 THEN 0.09218937645280267 ELSE vt0.c0 END  WHEN CASE WHEN rt0.c3 THEN t0.c1 WHEN t0.c43 THEN t0.c1 WHEN -965596749 THEN rt1.c1 END THEN CAST(rt1.c2 AS NUMERIC) WHEN (((rt1.c0))<=((t0.c1))) THEN CAST(rt1.c0 AS TEXT) WHEN rt1.c0 COLLATE NOCASE THEN x'' END  NULLS FIRST, (((((v0.c0 IN (rt0.c1)))OR(rt0.c1)))OR(((rt0.c1)>=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)IS(rt1.c0)))OR(CAST(rt0.c2 AS REAL))))OR(((rt1.c2)>>(t0.c1))))) IS TRUE)  as count FROM rt1, v0, vt0, rt0 LEFT OUTER JOIN t0 ON (((rt0.c3)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((rt0.c0))) ORDER BY CASE CASE t0.c0  WHEN rt0.c2 THEN 0.09218937645280267 ELSE vt0.c0 END  WHEN CASE WHEN rt0.c3 THEN t0.c1 WHEN t0.c43 THEN t0.c1 WHEN -965596749 THEN rt1.c1 END THEN CAST(rt1.c2 AS NUMERIC) WHEN (((rt1.c0))<=((t0.c1))) THEN CAST(rt1.c0 AS TEXT) WHEN rt1.c0 COLLATE NOCASE THEN x'' END  NULLS FIRST, (((((v0.c0 IN (rt0.c1)))OR(rt0.c1)))OR(((rt0.c1)>=(rt0.c2)))));
SELECT ALL * FROM rt1, v0, vt0, rt0 LEFT OUTER JOIN t0 ON (((rt0.c3)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((rt0.c0))) WHERE (((((((rt0.c0)IS(rt1.c0)))OR(CAST(rt0.c2 AS REAL))))OR(((rt1.c2)>>(t0.c1))))) ORDER BY CASE CASE t0.c0  WHEN rt0.c2 THEN 0.09218937645280267 ELSE vt0.c0 END  WHEN CASE WHEN rt0.c3 THEN t0.c1 WHEN t0.c43 THEN t0.c1 WHEN -965596749 THEN rt1.c1 END THEN CAST(rt1.c2 AS NUMERIC) WHEN (((rt1.c0))<=((t0.c1))) THEN CAST(rt1.c0 AS TEXT) WHEN rt1.c0 COLLATE NOCASE THEN x'' END  NULLS FIRST, (((((v0.c0 IN (rt0.c1)))OR(rt0.c1)))OR(((rt0.c1)>=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)IS(rt1.c0)))OR(CAST(rt0.c2 AS REAL))))OR(((rt1.c2)>>(t0.c1))))) IS TRUE)  as count FROM rt1, v0, vt0, rt0 LEFT OUTER JOIN t0 ON (((rt0.c3)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((rt0.c0))) ORDER BY CASE CASE t0.c0  WHEN rt0.c2 THEN 0.09218937645280267 ELSE vt0.c0 END  WHEN CASE WHEN rt0.c3 THEN t0.c1 WHEN t0.c43 THEN t0.c1 WHEN -965596749 THEN rt1.c1 END THEN CAST(rt1.c2 AS NUMERIC) WHEN (((rt1.c0))<=((t0.c1))) THEN CAST(rt1.c0 AS TEXT) WHEN rt1.c0 COLLATE NOCASE THEN x'' END  NULLS FIRST, (((((v0.c0 IN (rt0.c1)))OR(rt0.c1)))OR(((rt0.c1)>=(rt0.c2)))));
SELECT ALL * FROM rt1, v0, vt0, rt0 LEFT OUTER JOIN t0 ON (((rt0.c3)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((rt0.c0))) WHERE (((((((rt0.c0)IS(rt1.c0)))OR(CAST(rt0.c2 AS REAL))))OR(((rt1.c2)>>(t0.c1))))) ORDER BY CASE CASE t0.c0  WHEN rt0.c2 THEN 0.09218937645280267 ELSE vt0.c0 END  WHEN CASE WHEN rt0.c3 THEN t0.c1 WHEN t0.c43 THEN t0.c1 WHEN -965596749 THEN rt1.c1 END THEN CAST(rt1.c2 AS NUMERIC) WHEN (((rt1.c0))<=((t0.c1))) THEN CAST(rt1.c0 AS TEXT) WHEN rt1.c0 COLLATE NOCASE THEN x'' END  NULLS FIRST, (((((v0.c0 IN (rt0.c1)))OR(rt0.c1)))OR(((rt0.c1)>=(rt0.c2))));
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ ((~ (rt0.c2))))) ORDER BY CASE ((rt0.c1)>(t0.c43))  WHEN CASE WHEN t0.c43 THEN 'tw' ELSE rt0.c1 END THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) ELSE CASE t0.c43  WHEN rt0.c2 THEN NULL ELSE rt0.c2 END END  NULLS FIRST, 0X4fe89144;
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE ((rt0.c1)>(t0.c43))  WHEN CASE WHEN t0.c43 THEN 'tw' ELSE rt0.c1 END THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) ELSE CASE t0.c43  WHEN rt0.c2 THEN NULL ELSE rt0.c2 END END  NULLS FIRST, 0X4fe89144);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ ((~ (rt0.c2))))) ORDER BY CASE ((rt0.c1)>(t0.c43))  WHEN CASE WHEN t0.c43 THEN 'tw' ELSE rt0.c1 END THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) ELSE CASE t0.c43  WHEN rt0.c2 THEN NULL ELSE rt0.c2 END END  NULLS FIRST, 0X4fe89144;
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE ((rt0.c1)>(t0.c43))  WHEN CASE WHEN t0.c43 THEN 'tw' ELSE rt0.c1 END THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) ELSE CASE t0.c43  WHEN rt0.c2 THEN NULL ELSE rt0.c2 END END  NULLS FIRST, 0X4fe89144);
SELECT COUNT(*) FROM t0, rt0, rt1, v0, vt0 WHERE (rt0.c3) ORDER BY ((TRIM(DISTINCT t0.c1))-(((rt0.c3)<(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0, rt0, rt1, v0, vt0 ORDER BY ((TRIM(DISTINCT t0.c1))-(((rt0.c3)<(rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, rt1, v0, vt0 WHERE (rt0.c3) ORDER BY ((TRIM(DISTINCT t0.c1))-(((rt0.c3)<(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0, rt0, rt1, v0, vt0 ORDER BY ((TRIM(DISTINCT t0.c1))-(((rt0.c3)<(rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, rt1, v0, vt0 WHERE (rt0.c3) ORDER BY ((TRIM(DISTINCT t0.c1))-(((rt0.c3)<(rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c1)) AS REAL)) ORDER BY rt0.c0 DESC, CASE (+ (x''))  WHEN LIKELIHOOD(rt0.c3, 0.30743004150650866) THEN rt0.c2 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC, CASE (+ (x''))  WHEN LIKELIHOOD(rt0.c3, 0.30743004150650866) THEN rt0.c2 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c1)) AS REAL)) ORDER BY rt0.c0 DESC, CASE (+ (x''))  WHEN LIKELIHOOD(rt0.c3, 0.30743004150650866) THEN rt0.c2 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC, CASE (+ (x''))  WHEN LIKELIHOOD(rt0.c3, 0.30743004150650866) THEN rt0.c2 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c1)) AS REAL)) ORDER BY rt0.c0 DESC, CASE (+ (x''))  WHEN LIKELIHOOD(rt0.c3, 0.30743004150650866) THEN rt0.c2 END  NULLS FIRST;
SELECT ALL * FROM rt1, v0 FULL OUTER JOIN t0 ON 0xffffffffca77db11 LEFT OUTER JOIN rt0 ON CAST(rt1.c1 AS TEXT) COLLATE RTRIM WHERE (((((t0.c0)-(t0.c1)))/(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)-(t0.c1)))/(rt0.c0))) IS TRUE)  as count FROM rt1, v0 FULL OUTER JOIN t0 ON 0Xffffffffca77db11 LEFT OUTER JOIN rt0 ON CAST(rt1.c1 AS TEXT) COLLATE RTRIM);
SELECT ALL * FROM rt1, v0 FULL OUTER JOIN t0 ON 0xffffffffca77db11 LEFT OUTER JOIN rt0 ON CAST(rt1.c1 AS TEXT) COLLATE RTRIM WHERE (((((t0.c0)-(t0.c1)))/(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)-(t0.c1)))/(rt0.c0))) IS TRUE)  as count FROM rt1, v0 FULL OUTER JOIN t0 ON 0Xffffffffca77db11 LEFT OUTER JOIN rt0 ON CAST(rt1.c1 AS TEXT) COLLATE RTRIM);
SELECT ALL * FROM rt1, v0 FULL OUTER JOIN t0 ON 0xffffffffca77db11 LEFT OUTER JOIN rt0 ON CAST(rt1.c1 AS TEXT) COLLATE RTRIM WHERE (((((t0.c0)-(t0.c1)))/(rt0.c0)));
SELECT ALL * FROM t0, rt1 LEFT OUTER JOIN vt0 ON NULLIF('now', (t0.c0 IN ())) WHERE (((0.2518434732796885)OR(rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((0.2518434732796885)OR(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN vt0 ON NULLIF('now', (t0.c0 IN ())));
SELECT ALL * FROM t0, rt1 LEFT OUTER JOIN vt0 ON NULLIF('now', (t0.c0 IN ())) WHERE (((0.2518434732796885)OR(rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((0.2518434732796885)OR(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN vt0 ON NULLIF('now', (t0.c0 IN ())));
SELECT ALL * FROM t0, rt1 LEFT OUTER JOIN vt0 ON NULLIF('now', (t0.c0 IN ())) WHERE (((0.2518434732796885)OR(rt1.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1, v0, t0, rt0 WHERE ((NOT (CASE t0.c0  WHEN rt1.c1 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c0  WHEN rt1.c1 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1, v0, t0, rt0);
SELECT COUNT(*) FROM rt1, v0, t0, rt0 WHERE ((NOT (CASE t0.c0  WHEN rt1.c1 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c0  WHEN rt1.c1 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1, v0, t0, rt0);
SELECT COUNT(*) FROM rt1, v0, t0, rt0 WHERE ((NOT (CASE t0.c0  WHEN rt1.c1 THEN rt1.c0 END)));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((x'ff8d') NOT NULL)) ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c43 THEN v0.c0 WHEN v0.c0 THEN t0.c0 END)+(((t0.c1) NOTNULL))) DESC  NULLS LAST, ((t0.c43)>=(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'ff8d') NOT NULL)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c43 THEN v0.c0 WHEN v0.c0 THEN t0.c0 END)+(((t0.c1) NOTNULL))) DESC  NULLS LAST, ((t0.c43)>=(((vt0.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((x'ff8d') NOT NULL)) ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c43 THEN v0.c0 WHEN v0.c0 THEN t0.c0 END)+(((t0.c1) NOTNULL))) DESC  NULLS LAST, ((t0.c43)>=(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'ff8d') NOT NULL)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c43 THEN v0.c0 WHEN v0.c0 THEN t0.c0 END)+(((t0.c1) NOTNULL))) DESC  NULLS LAST, ((t0.c43)>=(((vt0.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((x'ff8d') NOT NULL)) ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c43 THEN v0.c0 WHEN v0.c0 THEN t0.c0 END)+(((t0.c1) NOTNULL))) DESC  NULLS LAST, ((t0.c43)>=(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((CASE WHEN rt0.c2 THEN t0.c0 ELSE t0.c43 END) NOT BETWEEN (x'de18' COLLATE NOCASE) AND ((((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c2, t0.c1)))))) ORDER BY CASE ((rt0.c0) BETWEEN (vt0.c0) AND (t0.c1))  WHEN ((rt0.c1)<=(t0.c1)) THEN TRIM(x'') ELSE COALESCE(vt0.c0, -1712885997) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN t0.c0 ELSE t0.c43 END) NOT BETWEEN (x'de18' COLLATE NOCASE) AND ((((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c2, t0.c1)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CASE ((rt0.c0) BETWEEN (vt0.c0) AND (t0.c1))  WHEN ((rt0.c1)<=(t0.c1)) THEN TRIM(x'') ELSE COALESCE(vt0.c0, -1712885997) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((CASE WHEN rt0.c2 THEN t0.c0 ELSE t0.c43 END) NOT BETWEEN (x'de18' COLLATE NOCASE) AND ((((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c2, t0.c1)))))) ORDER BY CASE ((rt0.c0) BETWEEN (vt0.c0) AND (t0.c1))  WHEN ((rt0.c1)<=(t0.c1)) THEN TRIM(x'') ELSE COALESCE(vt0.c0, -1712885997) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN t0.c0 ELSE t0.c43 END) NOT BETWEEN (x'de18' COLLATE NOCASE) AND ((((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c2, t0.c1)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CASE ((rt0.c0) BETWEEN (vt0.c0) AND (t0.c1))  WHEN ((rt0.c1)<=(t0.c1)) THEN TRIM(x'') ELSE COALESCE(vt0.c0, -1712885997) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((CASE WHEN rt0.c2 THEN t0.c0 ELSE t0.c43 END) NOT BETWEEN (x'de18' COLLATE NOCASE) AND ((((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c2, t0.c1)))))) ORDER BY CASE ((rt0.c0) BETWEEN (vt0.c0) AND (t0.c1))  WHEN ((rt0.c1)<=(t0.c1)) THEN TRIM(x'') ELSE COALESCE(vt0.c0, -1712885997) END  NULLS LAST;
SELECT * FROM rt1, v0, t0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0)IS NOT(t0.c43)) WHEN CAST(t0.c0 AS REAL) THEN ((rt1.c1)>=(rt1.c2)) WHEN ((v0.c0)<=(rt1.c1)) THEN (- (t0.c1)) ELSE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (v0.c0)) END) ORDER BY (((((((((((((NULL)OR(t0.c1)))OR(t0.c43)))OR(t0.c1)))OR(t0.c0)))AND(rt1.c1)))OR(t0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0)IS NOT(t0.c43)) WHEN CAST(t0.c0 AS REAL) THEN ((rt1.c1)>=(rt1.c2)) WHEN ((v0.c0)<=(rt1.c1)) THEN (- (t0.c1)) ELSE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (v0.c0)) END) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY (((((((((((((NULL)OR(t0.c1)))OR(t0.c43)))OR(t0.c1)))OR(t0.c0)))AND(rt1.c1)))OR(t0.c1)) IN ())  NULLS FIRST);
SELECT * FROM rt1, v0, t0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0)IS NOT(t0.c43)) WHEN CAST(t0.c0 AS REAL) THEN ((rt1.c1)>=(rt1.c2)) WHEN ((v0.c0)<=(rt1.c1)) THEN (- (t0.c1)) ELSE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (v0.c0)) END) ORDER BY (((((((((((((NULL)OR(t0.c1)))OR(t0.c43)))OR(t0.c1)))OR(t0.c0)))AND(rt1.c1)))OR(t0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0)IS NOT(t0.c43)) WHEN CAST(t0.c0 AS REAL) THEN ((rt1.c1)>=(rt1.c2)) WHEN ((v0.c0)<=(rt1.c1)) THEN (- (t0.c1)) ELSE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (v0.c0)) END) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY (((((((((((((NULL)OR(t0.c1)))OR(t0.c43)))OR(t0.c1)))OR(t0.c0)))AND(rt1.c1)))OR(t0.c1)) IN ())  NULLS FIRST);
SELECT * FROM rt1, v0, t0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0)IS NOT(t0.c43)) WHEN CAST(t0.c0 AS REAL) THEN ((rt1.c1)>=(rt1.c2)) WHEN ((v0.c0)<=(rt1.c1)) THEN (- (t0.c1)) ELSE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (v0.c0)) END) ORDER BY (((((((((((((NULL)OR(t0.c1)))OR(t0.c43)))OR(t0.c1)))OR(t0.c0)))AND(rt1.c1)))OR(t0.c1)) IN ())  NULLS FIRST;
SELECT * FROM rt1, vt0, v0, t0 WHERE ((NOT (((rt1.c1)>('qr%?E')))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c1)>('qr%?E'))))) IS TRUE)  as count FROM rt1, vt0, v0, t0);
SELECT * FROM rt1, vt0, v0, t0 WHERE ((NOT (((rt1.c1)>('qr%?E')))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c1)>('qr%?E'))))) IS TRUE)  as count FROM rt1, vt0, v0, t0);
SELECT * FROM rt1, vt0, v0, t0 WHERE ((NOT (((rt1.c1)>('qr%?E')))));
SELECT COUNT(*) FROM rt1, v0, vt0, rt0, t0 WHERE (((json_remove(rt0.c3, v0.c0, rt1.c2, rt1.c1)) ISNULL)) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR(rt0.c1)), (((((v0.c0))==((rt0.c2))))=(((rt1.c2)!=(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(rt0.c3, v0.c0, rt1.c2, rt1.c1)) ISNULL)) IS TRUE)  as count FROM rt1, v0, vt0, rt0, t0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR(rt0.c1)), (((((v0.c0))==((rt0.c2))))==(((rt1.c2)!=(rt1.c2)))));
SELECT COUNT(*) FROM rt1, v0, vt0, rt0, t0 WHERE (((json_remove(rt0.c3, v0.c0, rt1.c2, rt1.c1)) ISNULL)) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR(rt0.c1)), (((((v0.c0))==((rt0.c2))))=(((rt1.c2)!=(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(rt0.c3, v0.c0, rt1.c2, rt1.c1)) ISNULL)) IS TRUE)  as count FROM rt1, v0, vt0, rt0, t0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR(rt0.c1)), (((((v0.c0))==((rt0.c2))))==(((rt1.c2)!=(rt1.c2)))));
SELECT COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT '-1559684792', (t0.c0 IN ()))) ORDER BY ((((((t0.c0)OR(t0.c0)))OR(LIKELIHOOD(t0.c43, 0.4818710057827085))))AND(t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT '-1559684792', (t0.c0 IN ()))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)OR(t0.c0)))OR(LIKELIHOOD(t0.c43, 0.4818710057827085))))AND(t0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT '-1559684792', (t0.c0 IN ()))) ORDER BY ((((((t0.c0)OR(t0.c0)))OR(LIKELIHOOD(t0.c43, 0.4818710057827085))))AND(t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT '-1559684792', (t0.c0 IN ()))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)OR(t0.c0)))OR(LIKELIHOOD(t0.c43, 0.4818710057827085))))AND(t0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT '-1559684792', (t0.c0 IN ()))) ORDER BY ((((((t0.c0)OR(t0.c0)))OR(LIKELIHOOD(t0.c43, 0.4818710057827085))))AND(t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2))  WHEN (((x'23a8')) BETWEEN ((rt0.c1)) AND ((t0.c0))) THEN rt0.c2 ELSE ((t0.c0)AND(t0.c1)) END WHERE (COALESCE(CAST(t0.c1 AS NUMERIC), CAST(rt0.c2 AS REAL))) ORDER BY (((0.30256218482910235, UPPER(t0.c0), CAST(rt0.c1 AS INTEGER)))<(((NOT (t0.c0)), ((t0.c1) ISNULL), (((t0.c1)) BETWEEN ((NULL)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(t0.c1 AS NUMERIC), CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2))  WHEN (((x'23a8')) BETWEEN ((rt0.c1)) AND ((t0.c0))) THEN rt0.c2 ELSE ((t0.c0)AND(t0.c1)) END ORDER BY (((0.30256218482910235, UPPER(t0.c0), CAST(rt0.c1 AS INTEGER)))<(((NOT (t0.c0)), ((t0.c1) ISNULL), (((t0.c1)) BETWEEN ((NULL)) AND ((rt0.c3)))))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2))  WHEN (((x'23a8')) BETWEEN ((rt0.c1)) AND ((t0.c0))) THEN rt0.c2 ELSE ((t0.c0)AND(t0.c1)) END WHERE (COALESCE(CAST(t0.c1 AS NUMERIC), CAST(rt0.c2 AS REAL))) ORDER BY (((0.30256218482910235, UPPER(t0.c0), CAST(rt0.c1 AS INTEGER)))<(((NOT (t0.c0)), ((t0.c1) ISNULL), (((t0.c1)) BETWEEN ((NULL)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(t0.c1 AS NUMERIC), CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2))  WHEN (((x'23a8')) BETWEEN ((rt0.c1)) AND ((t0.c0))) THEN rt0.c2 ELSE ((t0.c0)AND(t0.c1)) END ORDER BY (((0.30256218482910235, UPPER(t0.c0), CAST(rt0.c1 AS INTEGER)))<(((NOT (t0.c0)), ((t0.c1) ISNULL), (((t0.c1)) BETWEEN ((NULL)) AND ((rt0.c3)))))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2))  WHEN (((x'23a8')) BETWEEN ((rt0.c1)) AND ((t0.c0))) THEN rt0.c2 ELSE ((t0.c0)AND(t0.c1)) END WHERE (COALESCE(CAST(t0.c1 AS NUMERIC), CAST(rt0.c2 AS REAL))) ORDER BY (((0.30256218482910235, UPPER(t0.c0), CAST(rt0.c1 AS INTEGER)))<(((NOT (t0.c0)), ((t0.c1) ISNULL), (((t0.c1)) BETWEEN ((NULL)) AND ((rt0.c3))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((+ (rt0.c3)), (0.09218937645280267 IN ()), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))))<((0.5187634178078896, (((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((rt0.c3)|(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c3)), (0.09218937645280267 IN ()), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))))<((0.5187634178078896, (((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((rt0.c3)|(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((+ (rt0.c3)), (0.09218937645280267 IN ()), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))))<((0.5187634178078896, (((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((rt0.c3)|(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c3)), (0.09218937645280267 IN ()), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))))<((0.5187634178078896, (((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((rt0.c3)|(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((+ (rt0.c3)), (0.09218937645280267 IN ()), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))))<((0.5187634178078896, (((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((rt0.c3)|(rt0.c2))))));
SELECT * FROM v0 INNER JOIN rt0 ON CAST(((rt0.c3)%(rt0.c2)) AS TEXT) WHERE (548109208 COLLATE NOCASE) ORDER BY CHAR(((1.815636725E9)>=(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((548109208 COLLATE NOCASE) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CAST(((rt0.c3)%(rt0.c2)) AS TEXT) ORDER BY CHAR(((1.815636725E9)>=(v0.c0))));
SELECT * FROM v0 INNER JOIN rt0 ON CAST(((rt0.c3)%(rt0.c2)) AS TEXT) WHERE (548109208 COLLATE NOCASE) ORDER BY CHAR(((1.815636725E9)>=(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((548109208 COLLATE NOCASE) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CAST(((rt0.c3)%(rt0.c2)) AS TEXT) ORDER BY CHAR(((1.815636725E9)>=(v0.c0))));
SELECT * FROM v0 INNER JOIN rt0 ON CAST(((rt0.c3)%(rt0.c2)) AS TEXT) WHERE (548109208 COLLATE NOCASE) ORDER BY CHAR(((1.815636725E9)>=(v0.c0)));
SELECT * FROM rt1 WHERE ((((((rt1.c2))=((rt1.c1)))) BETWEEN ((NOT (rt1.c0))) AND ((rt1.c1 IN ())))) ORDER BY ((rt1.c0)>('start of monthHy')) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2))==((rt1.c1)))) BETWEEN ((NOT (rt1.c0))) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0)>('start of monthHy')) COLLATE NOCASE);
SELECT * FROM rt1 WHERE ((((((rt1.c2))=((rt1.c1)))) BETWEEN ((NOT (rt1.c0))) AND ((rt1.c1 IN ())))) ORDER BY ((rt1.c0)>('start of monthHy')) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2))==((rt1.c1)))) BETWEEN ((NOT (rt1.c0))) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0)>('start of monthHy')) COLLATE NOCASE);
SELECT * FROM rt1 WHERE ((((((rt1.c2))=((rt1.c1)))) BETWEEN ((NOT (rt1.c0))) AND ((rt1.c1 IN ())))) ORDER BY ((rt1.c0)>('start of monthHy')) COLLATE NOCASE;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)>(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ABS((((vt0.c0))<((x'')))) ASC  NULLS LAST, ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ABS((((vt0.c0))<((x'')))) ASC  NULLS LAST, ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)>(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ABS((((vt0.c0))<((x'')))) ASC  NULLS LAST, ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ABS((((vt0.c0))<((x'')))) ASC  NULLS LAST, ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)>(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ABS((((vt0.c0))<((x'')))) ASC  NULLS LAST, ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (x'') ORDER BY ((((LIKELY(rt1.c1))OR(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)))OR(((-1.373987741E9) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 ORDER BY ((((LIKELY(rt1.c1))OR(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)))OR(((-1.373987741E9) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (x'') ORDER BY ((((LIKELY(rt1.c1))OR(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)))OR(((-1.373987741E9) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 ORDER BY ((((LIKELY(rt1.c1))OR(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)))OR(((-1.373987741E9) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (x'') ORDER BY ((((LIKELY(rt1.c1))OR(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)))OR(((-1.373987741E9) NOT NULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0, t0 RIGHT OUTER JOIN vt0 ON (0Xffffffffe3a03dd8 IN ()) RIGHT OUTER JOIN v0 ON t0.c0 COLLATE RTRIM WHERE (RTRIM(LIKELIHOOD(DISTINCT v0.c0, 0.4555394753973916))) ORDER BY ((CAST('6Syl8E&Q' AS BLOB))OR((- (rt1.c2)))), (((rt0.c1))>(('-1776283438'))) DESC;
SELECT SUM(count) FROM (SELECT ((RTRIM(LIKELIHOOD(DISTINCT v0.c0, 0.4555394753973916))) IS TRUE)  as count FROM rt1, rt0, t0 RIGHT OUTER JOIN vt0 ON (0Xffffffffe3a03dd8 IN ()) RIGHT OUTER JOIN v0 ON t0.c0 COLLATE RTRIM ORDER BY ((CAST('6Syl8E&Q' AS BLOB))OR((- (rt1.c2)))), (((rt0.c1))>(('-1776283438'))) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 RIGHT OUTER JOIN vt0 ON (0Xffffffffe3a03dd8 IN ()) RIGHT OUTER JOIN v0 ON t0.c0 COLLATE RTRIM WHERE (RTRIM(LIKELIHOOD(DISTINCT v0.c0, 0.4555394753973916))) ORDER BY ((CAST('6Syl8E&Q' AS BLOB))OR((- (rt1.c2)))), (((rt0.c1))>(('-1776283438'))) DESC;
SELECT SUM(count) FROM (SELECT ((RTRIM(LIKELIHOOD(DISTINCT v0.c0, 0.4555394753973916))) IS TRUE)  as count FROM rt1, rt0, t0 RIGHT OUTER JOIN vt0 ON (0Xffffffffe3a03dd8 IN ()) RIGHT OUTER JOIN v0 ON t0.c0 COLLATE RTRIM ORDER BY ((CAST('6Syl8E&Q' AS BLOB))OR((- (rt1.c2)))), (((rt0.c1))>(('-1776283438'))) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 RIGHT OUTER JOIN vt0 ON (0Xffffffffe3a03dd8 IN ()) RIGHT OUTER JOIN v0 ON t0.c0 COLLATE RTRIM WHERE (RTRIM(LIKELIHOOD(DISTINCT v0.c0, 0.4555394753973916))) ORDER BY ((CAST('6Syl8E&Q' AS BLOB))OR((- (rt1.c2)))), (((rt0.c1))>(('-1776283438'))) DESC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON NULL COLLATE RTRIM WHERE (json_object(((rt0.c2)%('锷2')), ((((vt0.c0)AND(rt0.c0)))OR(rt0.c3)))) ORDER BY (((NULL)) NOT BETWEEN ((((rt0.c3)==(rt0.c1)))) AND (((~ (rt0.c2))))), ((NOT (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((json_object(((rt0.c2)%('锷2')), ((((vt0.c0)AND(rt0.c0)))OR(rt0.c3)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON NULL COLLATE RTRIM ORDER BY (((NULL)) NOT BETWEEN ((((rt0.c3)==(rt0.c1)))) AND (((~ (rt0.c2))))), ((NOT (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON NULL COLLATE RTRIM WHERE (json_object(((rt0.c2)%('锷2')), ((((vt0.c0)AND(rt0.c0)))OR(rt0.c3)))) ORDER BY (((NULL)) NOT BETWEEN ((((rt0.c3)==(rt0.c1)))) AND (((~ (rt0.c2))))), ((NOT (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((json_object(((rt0.c2)%('锷2')), ((((vt0.c0)AND(rt0.c0)))OR(rt0.c3)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON NULL COLLATE RTRIM ORDER BY (((NULL)) NOT BETWEEN ((((rt0.c3)==(rt0.c1)))) AND (((~ (rt0.c2))))), ((NOT (vt0.c0)) IN ()));
SELECT * FROM v0, t0 RIGHT OUTER JOIN vt0 ON x'' CROSS JOIN rt0 ON (+ ((- (t0.c0)))) WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2)%(rt0.c3)))) AND (((- (t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c2)%(rt0.c3)))) AND (((- (t0.c1)))))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON x'' CROSS JOIN rt0 ON (+ ((- (t0.c0)))));
SELECT * FROM v0, t0 RIGHT OUTER JOIN vt0 ON x'' CROSS JOIN rt0 ON (+ ((- (t0.c0)))) WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2)%(rt0.c3)))) AND (((- (t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c2)%(rt0.c3)))) AND (((- (t0.c1)))))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON x'' CROSS JOIN rt0 ON (+ ((- (t0.c0)))));
SELECT * FROM v0, t0 RIGHT OUTER JOIN vt0 ON x'' CROSS JOIN rt0 ON (+ ((- (t0.c0)))) WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2)%(rt0.c3)))) AND (((- (t0.c1))))));
SELECT ALL * FROM v0, rt0, vt0, rt1 WHERE (((rt0.c3)==(rt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)=(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0 NOT INDEXED, rt1);
SELECT ALL * FROM v0, rt0, vt0, rt1 WHERE (((rt0.c3)==(rt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)=(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0 NOT INDEXED, rt1);
SELECT ALL * FROM v0, rt0, vt0, rt1 WHERE (((rt0.c3)==(rt1.c0)) COLLATE NOCASE);
SELECT * FROM vt0, t0 WHERE (CAST((- (t0.c1)) AS TEXT)) ORDER BY ((CAST(t0.c1 AS INTEGER))+(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c1 AS INTEGER))+(vt0.c0)));
SELECT * FROM vt0, t0 WHERE (CAST((- (t0.c1)) AS TEXT)) ORDER BY ((CAST(t0.c1 AS INTEGER))+(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c1 AS INTEGER))+(vt0.c0)));
SELECT * FROM vt0, t0 WHERE (CAST((- (t0.c1)) AS TEXT)) ORDER BY ((CAST(t0.c1 AS INTEGER))+(vt0.c0));
SELECT ALL * FROM rt0, vt0, rt1, t0 WHERE ((((rt1.c2)-(rt0.c1)) IN ())) ORDER BY ((((rt1.c0) NOT BETWEEN (t0.c43) AND (vt0.c0)))>((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)-(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0, rt1, t0 ORDER BY ((((rt1.c0) NOT BETWEEN (t0.c43) AND (vt0.c0)))>((vt0.c0 IN ()))));
SELECT ALL * FROM rt0, vt0, rt1, t0 WHERE ((((rt1.c2)-(rt0.c1)) IN ())) ORDER BY ((((rt1.c0) NOT BETWEEN (t0.c43) AND (vt0.c0)))>((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)-(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0, rt1, t0 ORDER BY ((((rt1.c0) NOT BETWEEN (t0.c43) AND (vt0.c0)))>((vt0.c0 IN ()))));
SELECT ALL * FROM rt0, vt0, rt1, t0 WHERE ((((rt1.c2)-(rt0.c1)) IN ())) ORDER BY ((((rt1.c0) NOT BETWEEN (t0.c43) AND (vt0.c0)))>((vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN v0 ON ((((NULL)OR(((rt1.c1)||(rt0.c1)))))OR(rt1.c0)) WHERE ((('W룦M+') NOTNULL)) ORDER BY (- (rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('W룦M+') NOTNULL)) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN v0 ON ((((NULL)OR(((rt1.c1)||(rt0.c1)))))OR(rt1.c0)) ORDER BY (- (rt0.c2 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN v0 ON ((((NULL)OR(((rt1.c1)||(rt0.c1)))))OR(rt1.c0)) WHERE ((('W룦M+') NOTNULL)) ORDER BY (- (rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('W룦M+') NOTNULL)) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN v0 ON ((((NULL)OR(((rt1.c1)||(rt0.c1)))))OR(rt1.c0)) ORDER BY (- (rt0.c2 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN v0 ON ((((NULL)OR(((rt1.c1)||(rt0.c1)))))OR(rt1.c0)) WHERE ((('W룦M+') NOTNULL)) ORDER BY (- (rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (SUBSTR(CAST(0.018706116374006876 AS INTEGER), rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(CAST(0.018706116374006876 AS INTEGER), rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (SUBSTR(CAST(0.018706116374006876 AS INTEGER), rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(CAST(0.018706116374006876 AS INTEGER), rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (SUBSTR(CAST(0.018706116374006876 AS INTEGER), rt0.c0 COLLATE BINARY));
SELECT ALL * FROM rt1, vt0 WHERE (CASE WHEN 'p굸' THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 'p굸' THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CASE WHEN 'p굸' THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 'p굸' THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CASE WHEN 'p굸' THEN (vt0.c0 IN ()) END);
SELECT ALL * FROM t0, v0 WHERE (((t0.c1 IN ('\i7', v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 IN ('\i7', v0.c0)) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((t0.c1 IN ('\i7', v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 IN ('\i7', v0.c0)) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((t0.c1 IN ('\i7', v0.c0)) IN ()));
SELECT * FROM rt0 WHERE (((rt0.c3)-(CASE WHEN rt0.c1 THEN '38g{O' WHEN 0.35099340026686743 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))) ORDER BY (((rt0.c3 IN ()))>=(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)-(CASE WHEN rt0.c1 THEN '38g{O' WHEN 0.35099340026686743 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3 IN ()))>=(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) DESC);
SELECT * FROM rt0 WHERE (((rt0.c3)-(CASE WHEN rt0.c1 THEN '38g{O' WHEN 0.35099340026686743 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))) ORDER BY (((rt0.c3 IN ()))>=(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)-(CASE WHEN rt0.c1 THEN '38g{O' WHEN 0.35099340026686743 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3 IN ()))>=(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) DESC);
SELECT * FROM rt0 WHERE (((rt0.c3)-(CASE WHEN rt0.c1 THEN '38g{O' WHEN 0.35099340026686743 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))) ORDER BY (((rt0.c3 IN ()))>=(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) DESC;
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON (((((((((((1.7976931348623157E308)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))OR(((rt1.c2)+(NULL)))))AND((((vt0.c0)) NOT BETWEEN (('[Ǖ|x')) AND ((rt1.c1))))))AND(rt1.c1 COLLATE NOCASE)))OR(rt1.c1)) WHERE ((NOT (((rt1.c2) NOT BETWEEN (rt1.c0) AND (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)) THEN ((rt1.c0)|(vt0.c0)) ELSE (rt1.c0 IN (rt1.c1)) END  NULLS LAST, (((((~ (rt1.c1)))OR((((((((('1944852177')OR('-649243370')))AND(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)))))OR(((NULL) NOT BETWEEN (rt1.c2) AND (vt0.c0)))) DESC  NULLS LAST, ((((((((CAST(vt0.c0 AS REAL))OR(CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c2 END)))OR(rt1.c0)))OR(vt0.c0)))OR(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c2) NOT BETWEEN (rt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (((((((((((1.7976931348623157E308)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))OR(((rt1.c2)+(NULL)))))AND((((vt0.c0)) NOT BETWEEN (('[Ǖ|x')) AND ((rt1.c1))))))AND(rt1.c1 COLLATE NOCASE)))OR(rt1.c1)) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)) THEN ((rt1.c0)|(vt0.c0)) ELSE (rt1.c0 IN (rt1.c1)) END  NULLS LAST, (((((~ (rt1.c1)))OR((((((((('1944852177')OR('-649243370')))AND(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)))))OR(((NULL) NOT BETWEEN (rt1.c2) AND (vt0.c0)))) DESC  NULLS LAST, ((((((((CAST(vt0.c0 AS REAL))OR(CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c2 END)))OR(rt1.c0)))OR(vt0.c0)))OR(NULL))  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON (((((((((((1.7976931348623157E308)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))OR(((rt1.c2)+(NULL)))))AND((((vt0.c0)) NOT BETWEEN (('[Ǖ|x')) AND ((rt1.c1))))))AND(rt1.c1 COLLATE NOCASE)))OR(rt1.c1)) WHERE ((NOT (((rt1.c2) NOT BETWEEN (rt1.c0) AND (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)) THEN ((rt1.c0)|(vt0.c0)) ELSE (rt1.c0 IN (rt1.c1)) END  NULLS LAST, (((((~ (rt1.c1)))OR((((((((('1944852177')OR('-649243370')))AND(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)))))OR(((NULL) NOT BETWEEN (rt1.c2) AND (vt0.c0)))) DESC  NULLS LAST, ((((((((CAST(vt0.c0 AS REAL))OR(CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c2 END)))OR(rt1.c0)))OR(vt0.c0)))OR(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c2) NOT BETWEEN (rt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (((((((((((1.7976931348623157E308)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))OR(((rt1.c2)+(NULL)))))AND((((vt0.c0)) NOT BETWEEN (('[Ǖ|x')) AND ((rt1.c1))))))AND(rt1.c1 COLLATE NOCASE)))OR(rt1.c1)) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)) THEN ((rt1.c0)|(vt0.c0)) ELSE (rt1.c0 IN (rt1.c1)) END  NULLS LAST, (((((~ (rt1.c1)))OR((((((((('1944852177')OR('-649243370')))AND(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)))))OR(((NULL) NOT BETWEEN (rt1.c2) AND (vt0.c0)))) DESC  NULLS LAST, ((((((((CAST(vt0.c0 AS REAL))OR(CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c2 END)))OR(rt1.c0)))OR(vt0.c0)))OR(NULL))  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON (((((((((((1.7976931348623157E308)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))OR(((rt1.c2)+(NULL)))))AND((((vt0.c0)) NOT BETWEEN (('[Ǖ|x')) AND ((rt1.c1))))))AND(rt1.c1 COLLATE NOCASE)))OR(rt1.c1)) WHERE ((NOT (((rt1.c2) NOT BETWEEN (rt1.c0) AND (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)) THEN ((rt1.c0)|(vt0.c0)) ELSE (rt1.c0 IN (rt1.c1)) END  NULLS LAST, (((((~ (rt1.c1)))OR((((((((('1944852177')OR('-649243370')))AND(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)))))OR(((NULL) NOT BETWEEN (rt1.c2) AND (vt0.c0)))) DESC  NULLS LAST, ((((((((CAST(vt0.c0 AS REAL))OR(CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c2 END)))OR(rt1.c0)))OR(vt0.c0)))OR(NULL))  NULLS FIRST;
SELECT ALL * FROM t0, rt1 INNER JOIN v0 ON (((0.8608194250735205, CASE WHEN v0.c0 THEN rt1.c0 WHEN x'40aa' THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 END, ((rt1.c2) BETWEEN ('Rk,>j') AND (rt1.c1))))>=(((NOT (t0.c1)), 0.5048091026136874, (- (v0.c0))))) FULL OUTER JOIN vt0 ON MIN(CAST(rt1.c2 AS NUMERIC), (t0.c43 IN (rt1.c1))) WHERE ((rt1.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1 INNER JOIN v0 ON (((0.8608194250735205, CASE WHEN v0.c0 THEN rt1.c0 WHEN x'40aa' THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 END, ((rt1.c2) BETWEEN ('Rk,>j') AND (rt1.c1))))>=(((NOT (t0.c1)), 0.5048091026136874, (- (v0.c0))))) FULL OUTER JOIN vt0 ON MIN(CAST(rt1.c2 AS NUMERIC), (t0.c43 IN (rt1.c1))));
SELECT ALL * FROM t0, rt1 INNER JOIN v0 ON (((0.8608194250735205, CASE WHEN v0.c0 THEN rt1.c0 WHEN x'40aa' THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 END, ((rt1.c2) BETWEEN ('Rk,>j') AND (rt1.c1))))>=(((NOT (t0.c1)), 0.5048091026136874, (- (v0.c0))))) FULL OUTER JOIN vt0 ON MIN(CAST(rt1.c2 AS NUMERIC), (t0.c43 IN (rt1.c1))) WHERE ((rt1.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1 INNER JOIN v0 ON (((0.8608194250735205, CASE WHEN v0.c0 THEN rt1.c0 WHEN x'40aa' THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 END, ((rt1.c2) BETWEEN ('Rk,>j') AND (rt1.c1))))>=(((NOT (t0.c1)), 0.5048091026136874, (- (v0.c0))))) FULL OUTER JOIN vt0 ON MIN(CAST(rt1.c2 AS NUMERIC), (t0.c43 IN (rt1.c1))));
SELECT ALL * FROM t0, rt1 INNER JOIN v0 ON (((0.8608194250735205, CASE WHEN v0.c0 THEN rt1.c0 WHEN x'40aa' THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 END, ((rt1.c2) BETWEEN ('Rk,>j') AND (rt1.c1))))>=(((NOT (t0.c1)), 0.5048091026136874, (- (v0.c0))))) FULL OUTER JOIN vt0 ON MIN(CAST(rt1.c2 AS NUMERIC), (t0.c43 IN (rt1.c1))) WHERE ((rt1.c2 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON (((v0.c0 IN ())) NOTNULL) WHERE ((((+ (rt1.c1)))<=(NULLIF(DISTINCT 0.08380812368168566, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c1)))<=(NULLIF(DISTINCT 0.08380812368168566, rt1.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON (((v0.c0 IN ())) NOTNULL));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON (((v0.c0 IN ())) NOTNULL) WHERE ((((+ (rt1.c1)))<=(NULLIF(DISTINCT 0.08380812368168566, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c1)))<=(NULLIF(DISTINCT 0.08380812368168566, rt1.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON (((v0.c0 IN ())) NOTNULL));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON (((v0.c0 IN ())) NOTNULL) WHERE ((((+ (rt1.c1)))<=(NULLIF(DISTINCT 0.08380812368168566, rt1.c0))));
SELECT ALL COUNT(*) FROM rt0, v0, rt1, vt0, t0 WHERE (((((rt1.c1)OR(rt1.c2)))/(((rt0.c1)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)OR(rt1.c2)))/(((rt0.c1)<<(rt0.c2))))) IS TRUE)  as count FROM rt0, v0, rt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, v0, rt1, vt0, t0 WHERE (((((rt1.c1)OR(rt1.c2)))/(((rt0.c1)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)OR(rt1.c2)))/(((rt0.c1)<<(rt0.c2))))) IS TRUE)  as count FROM rt0, v0, rt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, v0, rt1, vt0, t0 WHERE (((((rt1.c1)OR(rt1.c2)))/(((rt0.c1)<<(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((- (rt1.c1)) COLLATE RTRIM) ORDER BY ((((rt0.c3) NOTNULL))+(rt0.c0))  NULLS FIRST, (((NULL))=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c3) NOTNULL))+(rt0.c0))  NULLS FIRST, (((NULL))=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((- (rt1.c1)) COLLATE RTRIM) ORDER BY ((((rt0.c3) NOTNULL))+(rt0.c0))  NULLS FIRST, (((NULL))=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c3) NOTNULL))+(rt0.c0))  NULLS FIRST, (((NULL))=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((- (rt1.c1)) COLLATE RTRIM) ORDER BY ((((rt0.c3) NOTNULL))+(rt0.c0))  NULLS FIRST, (((NULL))=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END))) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE ((((v0.c0 IN (v0.c0))) NOT BETWEEN ('1824937629') AND (v0.c0 COLLATE RTRIM))) ORDER BY (((~ (v0.c0))) BETWEEN (((v0.c0) IS FALSE)) AND (-1.032807216E9 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0))) NOT BETWEEN ('1824937629') AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c0))) BETWEEN (((v0.c0) IS FALSE)) AND (-1.032807216E9 COLLATE NOCASE)));
SELECT * FROM v0 WHERE ((((v0.c0 IN (v0.c0))) NOT BETWEEN ('1824937629') AND (v0.c0 COLLATE RTRIM))) ORDER BY (((~ (v0.c0))) BETWEEN (((v0.c0) IS FALSE)) AND (-1.032807216E9 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0))) NOT BETWEEN ('1824937629') AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c0))) BETWEEN (((v0.c0) IS FALSE)) AND (-1.032807216E9 COLLATE NOCASE)));
SELECT * FROM v0 WHERE ((((v0.c0 IN (v0.c0))) NOT BETWEEN ('1824937629') AND (v0.c0 COLLATE RTRIM))) ORDER BY (((~ (v0.c0))) BETWEEN (((v0.c0) IS FALSE)) AND (-1.032807216E9 COLLATE NOCASE));
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c43) NOT BETWEEN (x'') AND (t0.c43)) THEN ((t0.c1)-(t0.c43)) WHEN ((t0.c1) NOTNULL) THEN ((t0.c1) BETWEEN (0X44f42cc9) AND (t0.c0)) WHEN ((((t0.c43)AND(t0.c1)))OR(t0.c43)) THEN (t0.c43 IN ()) ELSE ((((((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))AND(t0.c1)))AND(t0.c0)))OR(t0.c1)))AND(t0.c1)) END) ORDER BY ((x'9375')|(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c43) NOT BETWEEN (x'') AND (t0.c43)) THEN ((t0.c1)-(t0.c43)) WHEN ((t0.c1) NOTNULL) THEN ((t0.c1) BETWEEN (0X44f42cc9) AND (t0.c0)) WHEN ((((t0.c43)AND(t0.c1)))OR(t0.c43)) THEN (t0.c43 IN ()) ELSE ((((((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))AND(t0.c1)))AND(t0.c0)))OR(t0.c1)))AND(t0.c1)) END) IS TRUE)  as count FROM t0 ORDER BY ((x'9375')|(NULL)) DESC);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c43) NOT BETWEEN (x'') AND (t0.c43)) THEN ((t0.c1)-(t0.c43)) WHEN ((t0.c1) NOTNULL) THEN ((t0.c1) BETWEEN (0X44f42cc9) AND (t0.c0)) WHEN ((((t0.c43)AND(t0.c1)))OR(t0.c43)) THEN (t0.c43 IN ()) ELSE ((((((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))AND(t0.c1)))AND(t0.c0)))OR(t0.c1)))AND(t0.c1)) END) ORDER BY ((x'9375')|(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c43) NOT BETWEEN (x'') AND (t0.c43)) THEN ((t0.c1)-(t0.c43)) WHEN ((t0.c1) NOTNULL) THEN ((t0.c1) BETWEEN (0X44f42cc9) AND (t0.c0)) WHEN ((((t0.c43)AND(t0.c1)))OR(t0.c43)) THEN (t0.c43 IN ()) ELSE ((((((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))AND(t0.c1)))AND(t0.c0)))OR(t0.c1)))AND(t0.c1)) END) IS TRUE)  as count FROM t0 ORDER BY ((x'9375')|(NULL)) DESC);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c43) NOT BETWEEN (x'') AND (t0.c43)) THEN ((t0.c1)-(t0.c43)) WHEN ((t0.c1) NOTNULL) THEN ((t0.c1) BETWEEN (0X44f42cc9) AND (t0.c0)) WHEN ((((t0.c43)AND(t0.c1)))OR(t0.c43)) THEN (t0.c43 IN ()) ELSE ((((((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))AND(t0.c1)))AND(t0.c0)))OR(t0.c1)))AND(t0.c1)) END) ORDER BY ((x'9375')|(NULL)) DESC;
SELECT COUNT(*) FROM v0, rt1 LEFT OUTER JOIN t0 ON json_insert(((v0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), TYPEOF(vt0.c0), vt0.c0, ((v0.c0)<(rt0.c2)), t0.c0 COLLATE RTRIM) LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((((rt1.c0) ISNULL)))) CROSS JOIN vt0 ON (~ (NULL)) COLLATE NOCASE WHERE (CAST('' AS TEXT) COLLATE NOCASE) ORDER BY CASE WHEN rt1.c0 THEN TRIM(DISTINCT rt0.c3, rt0.c1) END  NULLS FIRST, (((rt0.c2)>>(t0.c1)) IN (CASE rt1.c0  WHEN rt0.c2 THEN rt0.c1 END)), ((CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END) BETWEEN (NULL) AND (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt1 LEFT OUTER JOIN t0 ON json_insert(((v0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), TYPEOF(vt0.c0), vt0.c0, ((v0.c0)<(rt0.c2)), t0.c0 COLLATE RTRIM) LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((((rt1.c0) ISNULL)))) CROSS JOIN vt0 ON (~ (NULL)) COLLATE NOCASE ORDER BY CASE WHEN rt1.c0 THEN TRIM(DISTINCT rt0.c3, rt0.c1) END  NULLS FIRST, (((rt0.c2)>>(t0.c1)) IN (CASE rt1.c0  WHEN rt0.c2 THEN rt0.c1 END)), ((CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END) BETWEEN (NULL) AND (x''))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 LEFT OUTER JOIN t0 ON json_insert(((v0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), TYPEOF(vt0.c0), vt0.c0, ((v0.c0)<(rt0.c2)), t0.c0 COLLATE RTRIM) LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((((rt1.c0) ISNULL)))) CROSS JOIN vt0 ON (~ (NULL)) COLLATE NOCASE WHERE (CAST('' AS TEXT) COLLATE NOCASE) ORDER BY CASE WHEN rt1.c0 THEN TRIM(DISTINCT rt0.c3, rt0.c1) END  NULLS FIRST, (((rt0.c2)>>(t0.c1)) IN (CASE rt1.c0  WHEN rt0.c2 THEN rt0.c1 END)), ((CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END) BETWEEN (NULL) AND (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt1 LEFT OUTER JOIN t0 ON json_insert(((v0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), TYPEOF(vt0.c0), vt0.c0, ((v0.c0)<(rt0.c2)), t0.c0 COLLATE RTRIM) LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((((rt1.c0) ISNULL)))) CROSS JOIN vt0 ON (~ (NULL)) COLLATE NOCASE ORDER BY CASE WHEN rt1.c0 THEN TRIM(DISTINCT rt0.c3, rt0.c1) END  NULLS FIRST, (((rt0.c2)>>(t0.c1)) IN (CASE rt1.c0  WHEN rt0.c2 THEN rt0.c1 END)), ((CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END) BETWEEN (NULL) AND (x''))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 NOT INDEXED, t0 WHERE ((((('iQ')AND(((((rt0.c3)OR(v0.c0)))OR(t0.c1)))))AND(CASE rt0.c2  WHEN t0.c43 THEN vt0.c0 WHEN '788564370' THEN t0.c1 WHEN rt0.c3 THEN v0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((('iQ')AND(((((rt0.c3)OR(v0.c0)))OR(t0.c1)))))AND(CASE rt0.c2  WHEN t0.c43 THEN vt0.c0 WHEN '788564370' THEN t0.c1 WHEN rt0.c3 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, v0, t0);
SELECT ALL * FROM vt0, rt0, v0 NOT INDEXED, t0 WHERE ((((('iQ')AND(((((rt0.c3)OR(v0.c0)))OR(t0.c1)))))AND(CASE rt0.c2  WHEN t0.c43 THEN vt0.c0 WHEN '788564370' THEN t0.c1 WHEN rt0.c3 THEN v0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((('iQ')AND(((((rt0.c3)OR(v0.c0)))OR(t0.c1)))))AND(CASE rt0.c2  WHEN t0.c43 THEN vt0.c0 WHEN '788564370' THEN t0.c1 WHEN rt0.c3 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, v0, t0);
SELECT ALL * FROM vt0, rt0, v0 NOT INDEXED, t0 WHERE ((((('iQ')AND(((((rt0.c3)OR(v0.c0)))OR(t0.c1)))))AND(CASE rt0.c2  WHEN t0.c43 THEN vt0.c0 WHEN '788564370' THEN t0.c1 WHEN rt0.c3 THEN v0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM rt0, t0, vt0, v0 WHERE (LTRIM(CASE rt0.c1  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END, (((t0.c0)) NOT BETWEEN ((t0.c43)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LTRIM(CASE rt0.c1  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END, (((t0.c0)) NOT BETWEEN ((t0.c43)) AND ((vt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0, v0);
SELECT COUNT(*) FROM rt0, t0, vt0, v0 WHERE (LTRIM(CASE rt0.c1  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END, (((t0.c0)) NOT BETWEEN ((t0.c43)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LTRIM(CASE rt0.c1  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END, (((t0.c0)) NOT BETWEEN ((t0.c43)) AND ((vt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0, v0);
SELECT COUNT(*) FROM rt0, t0, vt0, v0 WHERE (LTRIM(CASE rt0.c1  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END, (((t0.c0)) NOT BETWEEN ((t0.c43)) AND ((vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0, t0 WHERE (LIKELY(DISTINCT (((rt0.c3))<((rt0.c2))))) ORDER BY (((((t0.c43, t0.c43, rt0.c2)) NOT BETWEEN ((2.72385004E8, v0.c0, '57766006')) AND ((v0.c0, t0.c1, rt0.c0))))<<(((rt0.c0)IS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (((rt0.c3))<((rt0.c2))))) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY (((((t0.c43, t0.c43, rt0.c2)) NOT BETWEEN ((2.72385004E8, v0.c0, '57766006')) AND ((v0.c0, t0.c1, rt0.c0))))<<(((rt0.c0)IS(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0, rt0, t0 WHERE (LIKELY(DISTINCT (((rt0.c3))<((rt0.c2))))) ORDER BY (((((t0.c43, t0.c43, rt0.c2)) NOT BETWEEN ((2.72385004E8, v0.c0, '57766006')) AND ((v0.c0, t0.c1, rt0.c0))))<<(((rt0.c0)IS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (((rt0.c3))<((rt0.c2))))) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY (((((t0.c43, t0.c43, rt0.c2)) NOT BETWEEN ((2.72385004E8, v0.c0, '57766006')) AND ((v0.c0, t0.c1, rt0.c0))))<<(((rt0.c0)IS(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0, rt0, t0 WHERE (LIKELY(DISTINCT (((rt0.c3))<((rt0.c2))))) ORDER BY (((((t0.c43, t0.c43, rt0.c2)) NOT BETWEEN ((2.72385004E8, v0.c0, '57766006')) AND ((v0.c0, t0.c1, rt0.c0))))<<(((rt0.c0)IS(rt0.c2))));
SELECT COUNT(*) FROM rt0, t0, v0, vt0, rt1 WHERE ((((rt0.c1)) BETWEEN ((((rt1.c0) ISNULL))) AND (((+ (t0.c43)))))) ORDER BY ((-142097622) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM, (((((rt0.c1)=(rt0.c3))))!=((''))), CASE WHEN (- (t0.c0)) THEN ((t0.c1) IS TRUE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt1.c0) ISNULL))) AND (((+ (t0.c43)))))) IS TRUE)  as count FROM rt0, t0, v0, vt0, rt1 ORDER BY ((-142097622) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM, (((((rt0.c1)==(rt0.c3))))<>((''))), CASE WHEN (- (t0.c0)) THEN ((t0.c1) IS TRUE) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, v0, vt0, rt1 WHERE ((((rt0.c1)) BETWEEN ((((rt1.c0) ISNULL))) AND (((+ (t0.c43)))))) ORDER BY ((-142097622) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM, (((((rt0.c1)=(rt0.c3))))!=((''))), CASE WHEN (- (t0.c0)) THEN ((t0.c1) IS TRUE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt1.c0) ISNULL))) AND (((+ (t0.c43)))))) IS TRUE)  as count FROM rt0, t0, v0, vt0, rt1 ORDER BY ((-142097622) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM, (((((rt0.c1)==(rt0.c3))))<>((''))), CASE WHEN (- (t0.c0)) THEN ((t0.c1) IS TRUE) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, v0, vt0, rt1 WHERE ((((rt0.c1)) BETWEEN ((((rt1.c0) ISNULL))) AND (((+ (t0.c43)))))) ORDER BY ((-142097622) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM, (((((rt0.c1)=(rt0.c3))))!=((''))), CASE WHEN (- (t0.c0)) THEN ((t0.c1) IS TRUE) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, v0, t0, vt0 WHERE (((rt1.c2)>=(rt1.c1)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (+ ('')), ((((((((((0.2136068516649282)OR(t0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt1.c0)))-(LIKELIHOOD(t0.c1, 0.42588850288286695)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)>=(rt1.c1)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, v0, t0, vt0 ORDER BY (+ ('')), ((((((((((0.2136068516649282)OR(t0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt1.c0)))-(LIKELIHOOD(t0.c1, 0.42588850288286695)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, v0, t0, vt0 WHERE (((rt1.c2)>=(rt1.c1)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (+ ('')), ((((((((((0.2136068516649282)OR(t0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt1.c0)))-(LIKELIHOOD(t0.c1, 0.42588850288286695)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)>=(rt1.c1)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, v0, t0, vt0 ORDER BY (+ ('')), ((((((((((0.2136068516649282)OR(t0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt1.c0)))-(LIKELIHOOD(t0.c1, 0.42588850288286695)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, v0, t0, vt0 WHERE (((rt1.c2)>=(rt1.c1)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (+ ('')), ((((((((((0.2136068516649282)OR(t0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt1.c0)))-(LIKELIHOOD(t0.c1, 0.42588850288286695)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, rt1, vt0 CROSS JOIN v0 ON CAST(CAST(NULL AS INTEGER) AS NUMERIC) WHERE (CAST(rt0.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS BLOB)) IS TRUE)  as count FROM rt0, t0, rt1, vt0 CROSS JOIN v0 ON CAST(CAST(NULL AS INTEGER) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, t0, rt1, vt0 CROSS JOIN v0 ON CAST(CAST(NULL AS INTEGER) AS NUMERIC) WHERE (CAST(rt0.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS BLOB)) IS TRUE)  as count FROM rt0, t0, rt1, vt0 CROSS JOIN v0 ON CAST(CAST(NULL AS INTEGER) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, t0, rt1, vt0 CROSS JOIN v0 ON CAST(CAST(NULL AS INTEGER) AS NUMERIC) WHERE (CAST(rt0.c1 AS BLOB));
SELECT ALL * FROM rt1, vt0, t0, v0, rt0 WHERE (json_patch((~ (-1e500)), CASE WHEN t0.c0 THEN 'tsW%s7d\뗱w' END));
SELECT SUM(count) FROM (SELECT ((json_patch((~ (-1e500)), CASE WHEN t0.c0 THEN 'tsW%s7d\뗱w' END)) IS TRUE)  as count FROM rt1, vt0, t0, v0, rt0);
SELECT ALL * FROM rt1, vt0, t0, v0, rt0 WHERE (json_patch((~ (-1e500)), CASE WHEN t0.c0 THEN 'tsW%s7d\뗱w' END));
SELECT SUM(count) FROM (SELECT ((json_patch((~ (-1e500)), CASE WHEN t0.c0 THEN 'tsW%s7d\뗱w' END)) IS TRUE)  as count FROM rt1, vt0, t0, v0, rt0);
SELECT * FROM rt0, v0 WHERE (((((((((CAST(rt0.c0 AS INTEGER))OR((rt0.c2 IN ()))))AND(((((rt0.c1)OR(rt0.c3)))OR(NULL)))))AND(((rt0.c0)IS(rt0.c3)))))AND(((rt0.c3)==('')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c0 AS INTEGER))OR((rt0.c2 IN ()))))AND(((((rt0.c1)OR(rt0.c3)))OR(NULL)))))AND(((rt0.c0)IS(rt0.c3)))))AND(((rt0.c3)==(''))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((((CAST(rt0.c0 AS INTEGER))OR((rt0.c2 IN ()))))AND(((((rt0.c1)OR(rt0.c3)))OR(NULL)))))AND(((rt0.c0)IS(rt0.c3)))))AND(((rt0.c3)==('')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c0 AS INTEGER))OR((rt0.c2 IN ()))))AND(((((rt0.c1)OR(rt0.c3)))OR(NULL)))))AND(((rt0.c0)IS(rt0.c3)))))AND(((rt0.c3)==(''))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((((CAST(rt0.c0 AS INTEGER))OR((rt0.c2 IN ()))))AND(((((rt0.c1)OR(rt0.c3)))OR(NULL)))))AND(((rt0.c0)IS(rt0.c3)))))AND(((rt0.c3)==('')))));
SELECT * FROM v0, rt1 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN rt1.c2 THEN vt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN rt1.c2 END AS REAL) FULL OUTER JOIN rt0 ON CASE ((((rt0.c1)AND(x'09dc')))OR(rt0.c0))  WHEN CAST(rt0.c3 AS REAL) THEN ((rt1.c0) IS FALSE) END WHERE (((rt1.c0 COLLATE BINARY)<>(((rt0.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE BINARY)<>(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN rt1.c2 THEN vt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN rt1.c2 END AS REAL) FULL OUTER JOIN rt0 ON CASE ((((rt0.c1)AND(x'09dc')))OR(rt0.c0))  WHEN CAST(rt0.c3 AS REAL) THEN ((rt1.c0) IS FALSE) END);
SELECT * FROM v0, rt1 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN rt1.c2 THEN vt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN rt1.c2 END AS REAL) FULL OUTER JOIN rt0 ON CASE ((((rt0.c1)AND(x'09dc')))OR(rt0.c0))  WHEN CAST(rt0.c3 AS REAL) THEN ((rt1.c0) IS FALSE) END WHERE (((rt1.c0 COLLATE BINARY)<>(((rt0.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE BINARY)<>(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN rt1.c2 THEN vt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN rt1.c2 END AS REAL) FULL OUTER JOIN rt0 ON CASE ((((rt0.c1)AND(x'09dc')))OR(rt0.c0))  WHEN CAST(rt0.c3 AS REAL) THEN ((rt1.c0) IS FALSE) END);
SELECT COUNT(*) FROM rt1, rt0, t0, v0 WHERE (CASE WHEN CAST(rt0.c2 AS REAL) THEN (((rt0.c1)) NOT BETWEEN ((0.3639134456685984)) AND ((t0.c1))) END) ORDER BY (- ((NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c2 AS REAL) THEN (((rt0.c1)) NOT BETWEEN ((0.3639134456685984)) AND ((t0.c1))) END) IS TRUE)  as count FROM rt1, rt0, t0, v0 ORDER BY (- ((NOT (rt0.c3)))));
SELECT COUNT(*) FROM rt1, rt0, t0, v0 WHERE (CASE WHEN CAST(rt0.c2 AS REAL) THEN (((rt0.c1)) NOT BETWEEN ((0.3639134456685984)) AND ((t0.c1))) END) ORDER BY (- ((NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c2 AS REAL) THEN (((rt0.c1)) NOT BETWEEN ((0.3639134456685984)) AND ((t0.c1))) END) IS TRUE)  as count FROM rt1, rt0, t0, v0 ORDER BY (- ((NOT (rt0.c3)))));
SELECT COUNT(*) FROM rt1, rt0, t0, v0 WHERE (CASE WHEN CAST(rt0.c2 AS REAL) THEN (((rt0.c1)) NOT BETWEEN ((0.3639134456685984)) AND ((t0.c1))) END) ORDER BY (- ((NOT (rt0.c3))));
SELECT * FROM rt0, v0 WHERE (((((((rt0.c0) NOT NULL))AND(((rt0.c0)||(v0.c0)))))OR(CASE rt0.c1  WHEN x'' THEN rt0.c3 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT NULL))AND(((rt0.c0)||(v0.c0)))))OR(CASE rt0.c1  WHEN x'' THEN rt0.c3 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((rt0.c0) NOT NULL))AND(((rt0.c0)||(v0.c0)))))OR(CASE rt0.c1  WHEN x'' THEN rt0.c3 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT NULL))AND(((rt0.c0)||(v0.c0)))))OR(CASE rt0.c1  WHEN x'' THEN rt0.c3 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((rt0.c0) NOT NULL))AND(((rt0.c0)||(v0.c0)))))OR(CASE rt0.c1  WHEN x'' THEN rt0.c3 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0, t0, rt1 WHERE (((((v0.c0)) NOT BETWEEN ((rt1.c2)) AND ((t0.c1))) IN ((t0.c0 IN ()), ((rt1.c2) NOT BETWEEN (v0.c0) AND (rt0.c2))))) ORDER BY CASE WHEN ((t0.c43)>>(v0.c0)) THEN DATETIME(t0.c0, t0.c0, rt0.c0) ELSE ((rt0.c2)IS(v0.c0)) END, (((rt0.c0 IN ()))/(((rt1.c0)<(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)) NOT BETWEEN ((rt1.c2)) AND ((t0.c1))) IN ((t0.c0 IN ()), ((rt1.c2) NOT BETWEEN (v0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM v0, rt0, t0, rt1 ORDER BY CASE WHEN ((t0.c43)>>(v0.c0)) THEN DATETIME(t0.c0, t0.c0, rt0.c0) ELSE ((rt0.c2)IS(v0.c0)) END, (((rt0.c0 IN ()))/(((rt1.c0)<(rt1.c1)))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0, t0, rt1 WHERE (((((v0.c0)) NOT BETWEEN ((rt1.c2)) AND ((t0.c1))) IN ((t0.c0 IN ()), ((rt1.c2) NOT BETWEEN (v0.c0) AND (rt0.c2))))) ORDER BY CASE WHEN ((t0.c43)>>(v0.c0)) THEN DATETIME(t0.c0, t0.c0, rt0.c0) ELSE ((rt0.c2)IS(v0.c0)) END, (((rt0.c0 IN ()))/(((rt1.c0)<(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)) NOT BETWEEN ((rt1.c2)) AND ((t0.c1))) IN ((t0.c0 IN ()), ((rt1.c2) NOT BETWEEN (v0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM v0, rt0, t0, rt1 ORDER BY CASE WHEN ((t0.c43)>>(v0.c0)) THEN DATETIME(t0.c0, t0.c0, rt0.c0) ELSE ((rt0.c2)IS(v0.c0)) END, (((rt0.c0 IN ()))/(((rt1.c0)<(rt1.c1)))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0, t0, rt1 WHERE (((((v0.c0)) NOT BETWEEN ((rt1.c2)) AND ((t0.c1))) IN ((t0.c0 IN ()), ((rt1.c2) NOT BETWEEN (v0.c0) AND (rt0.c2))))) ORDER BY CASE WHEN ((t0.c43)>>(v0.c0)) THEN DATETIME(t0.c0, t0.c0, rt0.c0) ELSE ((rt0.c2)IS(v0.c0)) END, (((rt0.c0 IN ()))/(((rt1.c0)<(rt1.c1))));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON rt0.c0 LEFT OUTER JOIN rt1 ON rt0.c3 WHERE (-1.7976931348623157E308);
SELECT SUM(count) FROM (SELECT ((-1.7976931348623157E308) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON rt0.c0 LEFT OUTER JOIN rt1 ON rt0.c3);
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON rt0.c0 LEFT OUTER JOIN rt1 ON rt0.c3 WHERE (-1.7976931348623157E308);
SELECT SUM(count) FROM (SELECT ((-1.7976931348623157E308) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON rt0.c0 LEFT OUTER JOIN rt1 ON rt0.c3);
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON rt0.c0 LEFT OUTER JOIN rt1 ON rt0.c3 WHERE (-1.7976931348623157E308);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c1)OR(t0.c0)))OR(t0.c1)) IN ())) ORDER BY (~ (TYPEOF(0Xffffffff9d30550e)));
SELECT SUM(count) FROM (SELECT (((((((t0.c1)OR(t0.c0)))OR(t0.c1)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (~ (TYPEOF(0Xffffffff9d30550e))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c1)OR(t0.c0)))OR(t0.c1)) IN ())) ORDER BY (~ (TYPEOF(0Xffffffff9d30550e)));
SELECT SUM(count) FROM (SELECT (((((((t0.c1)OR(t0.c0)))OR(t0.c1)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (~ (TYPEOF(0Xffffffff9d30550e))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c1)OR(t0.c0)))OR(t0.c1)) IN ())) ORDER BY (~ (TYPEOF(0Xffffffff9d30550e)));
SELECT COUNT(*) FROM t0 CROSS JOIN rt1 ON LIKELY(DISTINCT ((((((((rt1.c1)AND(rt1.c0)))OR(x'4e12')))AND(0.22312547230555613)))AND(t0.c1))) WHERE (CASE WHEN t0.c0 COLLATE NOCASE THEN ((((rt1.c2)AND(t0.c0)))AND(t0.c0)) ELSE CAST(rt1.c2 AS REAL) END) ORDER BY ((t0.c0)IS(((rt1.c1)||(t0.c43)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 COLLATE NOCASE THEN ((((rt1.c2)AND(t0.c0)))AND(t0.c0)) ELSE CAST(rt1.c2 AS REAL) END) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN rt1 ON LIKELY(DISTINCT ((((((((rt1.c1)AND(rt1.c0)))OR(x'4e12')))AND(0.22312547230555613)))AND(t0.c1))) ORDER BY ((t0.c0)IS(((rt1.c1)||(t0.c43)))) DESC);
SELECT COUNT(*) FROM t0 CROSS JOIN rt1 ON LIKELY(DISTINCT ((((((((rt1.c1)AND(rt1.c0)))OR(x'4e12')))AND(0.22312547230555613)))AND(t0.c1))) WHERE (CASE WHEN t0.c0 COLLATE NOCASE THEN ((((rt1.c2)AND(t0.c0)))AND(t0.c0)) ELSE CAST(rt1.c2 AS REAL) END) ORDER BY ((t0.c0)IS(((rt1.c1)||(t0.c43)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 COLLATE NOCASE THEN ((((rt1.c2)AND(t0.c0)))AND(t0.c0)) ELSE CAST(rt1.c2 AS REAL) END) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN rt1 ON LIKELY(DISTINCT ((((((((rt1.c1)AND(rt1.c0)))OR(x'4e12')))AND(0.22312547230555613)))AND(t0.c1))) ORDER BY ((t0.c0)IS(((rt1.c1)||(t0.c43)))) DESC);
SELECT COUNT(*) FROM t0 CROSS JOIN rt1 ON LIKELY(DISTINCT ((((((((rt1.c1)AND(rt1.c0)))OR(x'4e12')))AND(0.22312547230555613)))AND(t0.c1))) WHERE (CASE WHEN t0.c0 COLLATE NOCASE THEN ((((rt1.c2)AND(t0.c0)))AND(t0.c0)) ELSE CAST(rt1.c2 AS REAL) END) ORDER BY ((t0.c0)IS(((rt1.c1)||(t0.c43)))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0, t0, v0 WHERE (((((v0.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, v0 WHERE (((((v0.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, v0 WHERE (((((v0.c0) NOTNULL)) IS TRUE));
SELECT ALL * FROM v0, rt0 WHERE ((((- (rt0.c2)))+(CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))+(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((- (rt0.c2)))+(CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))+(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((- (rt0.c2)))+(CAST(rt0.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE ((((((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0))))>=((rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0))))>=((rt1.c1)))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE ((((((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0))))>=((rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0))))>=((rt1.c1)))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE ((((((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0))))>=((rt1.c1))));
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE ((rt1.c2 COLLATE NOCASE IN (((((vt0.c0)OR(rt1.c0)))AND(vt0.c0)), ((((rt1.c2)OR(rt1.c0)))OR(0.9734397974703947)), rt1.c0 COLLATE RTRIM))) ORDER BY ((- (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE NOCASE IN (((((vt0.c0)OR(rt1.c0)))AND(vt0.c0)), ((((rt1.c2)OR(rt1.c0)))OR(0.9734397974703947)), rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((- (vt0.c0)) IN ()));
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE ((rt1.c2 COLLATE NOCASE IN (((((vt0.c0)OR(rt1.c0)))AND(vt0.c0)), ((((rt1.c2)OR(rt1.c0)))OR(0.9734397974703947)), rt1.c0 COLLATE RTRIM))) ORDER BY ((- (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE NOCASE IN (((((vt0.c0)OR(rt1.c0)))AND(vt0.c0)), ((((rt1.c2)OR(rt1.c0)))OR(0.9734397974703947)), rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((- (vt0.c0)) IN ()));
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE ((rt1.c2 COLLATE NOCASE IN (((((vt0.c0)OR(rt1.c0)))AND(vt0.c0)), ((((rt1.c2)OR(rt1.c0)))OR(0.9734397974703947)), rt1.c0 COLLATE RTRIM))) ORDER BY ((- (vt0.c0)) IN ());
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c3);
SELECT COUNT(*) FROM rt1, t0, rt0, v0, vt0 WHERE (((((rt0.c1)&(rt1.c0)))=((t0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)&(rt1.c0)))=((t0.c1 IN ())))) IS TRUE)  as count FROM rt1, t0, rt0, v0, vt0);
SELECT COUNT(*) FROM rt1, t0, rt0, v0, vt0 WHERE (((((rt0.c1)&(rt1.c0)))=((t0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)&(rt1.c0)))=((t0.c1 IN ())))) IS TRUE)  as count FROM rt1, t0, rt0, v0, vt0);
SELECT COUNT(*) FROM rt1, t0, rt0, v0, vt0 WHERE (((((rt0.c1)&(rt1.c0)))=((t0.c1 IN ()))));
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED, v0, rt0 LEFT OUTER JOIN rt1 ON (((rt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c43)) IN ()) WHERE ((- (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, vt0, v0, rt0 LEFT OUTER JOIN rt1 ON (((rt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c43)) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED, v0, rt0 LEFT OUTER JOIN rt1 ON (((rt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c43)) IN ()) WHERE ((- (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, vt0, v0, rt0 LEFT OUTER JOIN rt1 ON (((rt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c43)) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED, v0, rt0 LEFT OUTER JOIN rt1 ON (((rt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c43)) IN ()) WHERE ((- (((rt0.c1) IS TRUE))));
SELECT * FROM t0, v0, rt1, rt0 WHERE (rt1.c2) ORDER BY SUBSTR(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END, (NOT (rt0.c0))), CASE WHEN (t0.c1 IN ()) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t0, v0, rt1, rt0 ORDER BY SUBSTR(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END, (NOT (rt0.c0))), CASE WHEN (t0.c1 IN ()) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt1.c0)) END  NULLS LAST);
SELECT * FROM t0, v0, rt1, rt0 WHERE (rt1.c2) ORDER BY SUBSTR(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END, (NOT (rt0.c0))), CASE WHEN (t0.c1 IN ()) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t0, v0, rt1, rt0 ORDER BY SUBSTR(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END, (NOT (rt0.c0))), CASE WHEN (t0.c1 IN ()) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt1.c0)) END  NULLS LAST);
SELECT * FROM t0, v0, rt1, rt0 WHERE (rt1.c2) ORDER BY SUBSTR(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END, (NOT (rt0.c0))), CASE WHEN (t0.c1 IN ()) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt1.c0)) END  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (HEX((((t0.c43, t0.c43, vt0.c0))>=((t0.c1, vt0.c0, t0.c0))))) ORDER BY (((vt0.c0 IN ()))%(TYPEOF(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ((HEX((((t0.c43, t0.c43, vt0.c0))>=((t0.c1, vt0.c0, t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 IN ()))%(TYPEOF(DISTINCT t0.c0))));
SELECT * FROM vt0, t0 WHERE (HEX((((t0.c43, t0.c43, vt0.c0))>=((t0.c1, vt0.c0, t0.c0))))) ORDER BY (((vt0.c0 IN ()))%(TYPEOF(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ((HEX((((t0.c43, t0.c43, vt0.c0))>=((t0.c1, vt0.c0, t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 IN ()))%(TYPEOF(DISTINCT t0.c0))));
SELECT * FROM vt0, t0 WHERE (HEX((((t0.c43, t0.c43, vt0.c0))>=((t0.c1, vt0.c0, t0.c0))))) ORDER BY (((vt0.c0 IN ()))%(TYPEOF(DISTINCT t0.c0)));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED CROSS JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (json_insert(t0.c1, vt0.c0, t0.c1, t0.c0, vt0.c0)) AND (((t0.c0) NOT BETWEEN (t0.c43) AND (t0.c0)))) WHERE (CASE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN t0.c0 COLLATE NOCASE THEN ((((vt0.c0)AND(t0.c0)))AND('1968055077')) ELSE 0xffffffffe2ddad52 END) ORDER BY (((((vt0.c0 IN ()))OR((NOT (t0.c43)))))OR(0.9121131829900551)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN t0.c0 COLLATE NOCASE THEN ((((vt0.c0)AND(t0.c0)))AND('1968055077')) ELSE 0Xffffffffe2ddad52 END) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (json_insert(t0.c1, vt0.c0, t0.c1, t0.c0, vt0.c0)) AND (((t0.c0) NOT BETWEEN (t0.c43) AND (t0.c0)))) ORDER BY (((((vt0.c0 IN ()))OR((NOT (t0.c43)))))OR(0.9121131829900551)) DESC);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED CROSS JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (json_insert(t0.c1, vt0.c0, t0.c1, t0.c0, vt0.c0)) AND (((t0.c0) NOT BETWEEN (t0.c43) AND (t0.c0)))) WHERE (CASE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN t0.c0 COLLATE NOCASE THEN ((((vt0.c0)AND(t0.c0)))AND('1968055077')) ELSE 0xffffffffe2ddad52 END) ORDER BY (((((vt0.c0 IN ()))OR((NOT (t0.c43)))))OR(0.9121131829900551)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN t0.c0 COLLATE NOCASE THEN ((((vt0.c0)AND(t0.c0)))AND('1968055077')) ELSE 0Xffffffffe2ddad52 END) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (json_insert(t0.c1, vt0.c0, t0.c1, t0.c0, vt0.c0)) AND (((t0.c0) NOT BETWEEN (t0.c43) AND (t0.c0)))) ORDER BY (((((vt0.c0 IN ()))OR((NOT (t0.c43)))))OR(0.9121131829900551)) DESC);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED CROSS JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (json_insert(t0.c1, vt0.c0, t0.c1, t0.c0, vt0.c0)) AND (((t0.c0) NOT BETWEEN (t0.c43) AND (t0.c0)))) WHERE (CASE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN t0.c0 COLLATE NOCASE THEN ((((vt0.c0)AND(t0.c0)))AND('1968055077')) ELSE 0xffffffffe2ddad52 END) ORDER BY (((((vt0.c0 IN ()))OR((NOT (t0.c43)))))OR(0.9121131829900551)) DESC;
SELECT COUNT(*) FROM rt1, vt0, v0, rt0 WHERE (((((rt1.c1)<<(v0.c0))) BETWEEN ((NOT (rt1.c2))) AND (NULL))) ORDER BY CASE (rt0.c2 IN ())  WHEN ((((rt0.c3)OR(rt0.c0)))AND(rt0.c0)) THEN ((v0.c0)LIKE(rt1.c0)) ELSE '*0' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)<<(v0.c0))) BETWEEN ((NOT (rt1.c2))) AND (NULL))) IS TRUE)  as count FROM rt1, vt0, v0, rt0 ORDER BY CASE (rt0.c2 IN ())  WHEN ((((rt0.c3)OR(rt0.c0)))AND(rt0.c0)) THEN ((v0.c0)LIKE(rt1.c0)) ELSE '*0' END  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, v0, rt0 WHERE (((((rt1.c1)<<(v0.c0))) BETWEEN ((NOT (rt1.c2))) AND (NULL))) ORDER BY CASE (rt0.c2 IN ())  WHEN ((((rt0.c3)OR(rt0.c0)))AND(rt0.c0)) THEN ((v0.c0)LIKE(rt1.c0)) ELSE '*0' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)<<(v0.c0))) BETWEEN ((NOT (rt1.c2))) AND (NULL))) IS TRUE)  as count FROM rt1, vt0, v0, rt0 ORDER BY CASE (rt0.c2 IN ())  WHEN ((((rt0.c3)OR(rt0.c0)))AND(rt0.c0)) THEN ((v0.c0)LIKE(rt1.c0)) ELSE '*0' END  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, v0, rt0 WHERE (((((rt1.c1)<<(v0.c0))) BETWEEN ((NOT (rt1.c2))) AND (NULL))) ORDER BY CASE (rt0.c2 IN ())  WHEN ((((rt0.c3)OR(rt0.c0)))AND(rt0.c0)) THEN ((v0.c0)LIKE(rt1.c0)) ELSE '*0' END  NULLS FIRST;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON ((rt0.c3 COLLATE RTRIM)%(rt0.c0)) FULL OUTER JOIN t0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN rt0 ON ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE NOCASE INNER JOIN vt0 ON LTRIM(((rt0.c2)<(rt1.c1)), ((t0.c0) ISNULL)) WHERE (t0.c1) ORDER BY (NOT (((t0.c1) NOT NULL))) ASC, NULL DESC, (('526357906' IN ()) IN (rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON ((rt0.c3 COLLATE RTRIM)%(rt0.c0)) FULL OUTER JOIN t0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN rt0 ON ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE NOCASE INNER JOIN vt0 ON LTRIM(((rt0.c2)<(rt1.c1)), ((t0.c0) ISNULL)) ORDER BY (NOT (((t0.c1) NOT NULL))) ASC, NULL DESC, (('526357906' IN ()) IN (rt0.c2)) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON ((rt0.c3 COLLATE RTRIM)%(rt0.c0)) FULL OUTER JOIN t0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN rt0 ON ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE NOCASE INNER JOIN vt0 ON LTRIM(((rt0.c2)<(rt1.c1)), ((t0.c0) ISNULL)) WHERE (t0.c1) ORDER BY (NOT (((t0.c1) NOT NULL))) ASC, NULL DESC, (('526357906' IN ()) IN (rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON ((rt0.c3 COLLATE RTRIM)%(rt0.c0)) FULL OUTER JOIN t0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN rt0 ON ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE NOCASE INNER JOIN vt0 ON LTRIM(((rt0.c2)<(rt1.c1)), ((t0.c0) ISNULL)) ORDER BY (NOT (((t0.c1) NOT NULL))) ASC, NULL DESC, (('526357906' IN ()) IN (rt0.c2)) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt1 WHERE (((vt0.c0 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT ALL * FROM v0, vt0, rt1 WHERE (((vt0.c0 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT ALL * FROM v0, vt0, rt1 WHERE (((vt0.c0 COLLATE BINARY) IS FALSE));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((+ (((rt1.c0)>(rt0.c1))))) ORDER BY CASE CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c0 END  WHEN rt1.c2 THEN ((rt0.c0)=(rt0.c3)) WHEN rt0.c1 THEN '739490107' WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c3 END THEN CAST(rt1.c2 AS INTEGER) ELSE (rt0.c0 IN (rt1.c2)) END ASC;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c0)>(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c0 END  WHEN rt1.c2 THEN ((rt0.c0)=(rt0.c3)) WHEN rt0.c1 THEN '739490107' WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c3 END THEN CAST(rt1.c2 AS INTEGER) ELSE (rt0.c0 IN (rt1.c2)) END ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((+ (((rt1.c0)>(rt0.c1))))) ORDER BY CASE CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c0 END  WHEN rt1.c2 THEN ((rt0.c0)=(rt0.c3)) WHEN rt0.c1 THEN '739490107' WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c3 END THEN CAST(rt1.c2 AS INTEGER) ELSE (rt0.c0 IN (rt1.c2)) END ASC;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c0)>(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c0 END  WHEN rt1.c2 THEN ((rt0.c0)=(rt0.c3)) WHEN rt0.c1 THEN '739490107' WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c3 END THEN CAST(rt1.c2 AS INTEGER) ELSE (rt0.c0 IN (rt1.c2)) END ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((+ (((rt1.c0)>(rt0.c1))))) ORDER BY CASE CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c0 END  WHEN rt1.c2 THEN ((rt0.c0)=(rt0.c3)) WHEN rt0.c1 THEN '739490107' WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c3 END THEN CAST(rt1.c2 AS INTEGER) ELSE (rt0.c0 IN (rt1.c2)) END ASC;
SELECT * FROM t0, rt0, v0 WHERE (LIKELY(CASE rt0.c1  WHEN t0.c0 THEN rt0.c3 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE rt0.c1  WHEN t0.c0 THEN rt0.c3 END)) IS TRUE)  as count FROM t0, rt0, v0);
SELECT * FROM t0, rt0, v0 WHERE (LIKELY(CASE rt0.c1  WHEN t0.c0 THEN rt0.c3 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE rt0.c1  WHEN t0.c0 THEN rt0.c3 END)) IS TRUE)  as count FROM t0, rt0, v0);
SELECT * FROM t0, rt0, v0 WHERE (LIKELY(CASE rt0.c1  WHEN t0.c0 THEN rt0.c3 END));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((('-565265557'))<>((UPPER(vt0.c0))))) ORDER BY (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('-565265557'))!=((UPPER(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((('-565265557'))<>((UPPER(vt0.c0))))) ORDER BY (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('-565265557'))!=((UPPER(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((('-565265557'))<>((UPPER(vt0.c0))))) ORDER BY (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CASE WHEN (rt1.c2 IN ()) THEN (((rt1.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c2, t0.c1, rt1.c0))) ELSE TYPEOF(rt1.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c2 IN ()) THEN (((rt1.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c2, t0.c1, rt1.c0))) ELSE TYPEOF(rt1.c1) END) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CASE WHEN (rt1.c2 IN ()) THEN (((rt1.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c2, t0.c1, rt1.c0))) ELSE TYPEOF(rt1.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c2 IN ()) THEN (((rt1.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c2, t0.c1, rt1.c0))) ELSE TYPEOF(rt1.c1) END) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CASE WHEN (rt1.c2 IN ()) THEN (((rt1.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c2, t0.c1, rt1.c0))) ELSE TYPEOF(rt1.c1) END);
SELECT * FROM t0, vt0 WHERE (vt0.c0) ORDER BY ((t0.c0)<<(t0.c43)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c0)<<(t0.c43)) COLLATE BINARY ASC);
SELECT * FROM t0, vt0 WHERE (vt0.c0) ORDER BY ((t0.c0)<<(t0.c43)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c0)<<(t0.c43)) COLLATE BINARY ASC);
SELECT * FROM t0, vt0 WHERE (vt0.c0) ORDER BY ((t0.c0)<<(t0.c43)) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c3 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c3 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c3 COLLATE NOCASE) IS FALSE));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CASE CAST(rt1.c1 AS BLOB)  WHEN ((rt1.c2) IS TRUE) THEN CASE WHEN v0.c0 THEN rt1.c0 ELSE 0.4269533547664258 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c1 AS BLOB)  WHEN ((rt1.c2) IS TRUE) THEN CASE WHEN v0.c0 THEN rt1.c0 ELSE 0.4269533547664258 END END) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CASE CAST(rt1.c1 AS BLOB)  WHEN ((rt1.c2) IS TRUE) THEN CASE WHEN v0.c0 THEN rt1.c0 ELSE 0.4269533547664258 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c1 AS BLOB)  WHEN ((rt1.c2) IS TRUE) THEN CASE WHEN v0.c0 THEN rt1.c0 ELSE 0.4269533547664258 END END) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CASE CAST(rt1.c1 AS BLOB)  WHEN ((rt1.c2) IS TRUE) THEN CASE WHEN v0.c0 THEN rt1.c0 ELSE 0.4269533547664258 END END);
SELECT * FROM v0, t0, rt1, rt0 WHERE (CAST(t0.c43 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c43 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT * FROM v0, t0, rt1, rt0 WHERE (CAST(t0.c43 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c43 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT * FROM v0, t0, rt1, rt0 WHERE (CAST(t0.c43 COLLATE NOCASE AS BLOB));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY rt0.c3 COLLATE RTRIM, (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)))OR('-],F\nf')) IN ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3 COLLATE RTRIM, (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)))OR('-],F\nf')) IN ((rt0.c1 IN ()))));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY rt0.c3 COLLATE RTRIM, (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)))OR('-],F\nf')) IN ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3 COLLATE RTRIM, (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)))OR('-],F\nf')) IN ((rt0.c1 IN ()))));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY rt0.c3 COLLATE RTRIM, (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)))OR('-],F\nf')) IN ((rt0.c1 IN ())));
SELECT ALL * FROM vt0, v0, t0, rt0 WHERE (CAST(((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS INTEGER)) ORDER BY (((t0.c43))>=((t0.c0))) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0, t0, rt0 ORDER BY (((t0.c43))>=((t0.c0))) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0, t0, rt0 WHERE (CAST(((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS INTEGER)) ORDER BY (((t0.c43))>=((t0.c0))) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0, t0, rt0 ORDER BY (((t0.c43))>=((t0.c0))) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0, t0, rt0 WHERE (CAST(((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS INTEGER)) ORDER BY (((t0.c43))>=((t0.c0))) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER));
SELECT ALL * FROM v0, rt1, vt0 WHERE (CAST(((((rt1.c1)AND(vt0.c0)))AND(rt1.c2)) AS BLOB)) ORDER BY TYPEOF(rt1.c2 COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c1)AND(vt0.c0)))AND(rt1.c2)) AS BLOB)) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY TYPEOF(rt1.c2 COLLATE RTRIM) DESC);
SELECT ALL * FROM v0, rt1, vt0 WHERE (CAST(((((rt1.c1)AND(vt0.c0)))AND(rt1.c2)) AS BLOB)) ORDER BY TYPEOF(rt1.c2 COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c1)AND(vt0.c0)))AND(rt1.c2)) AS BLOB)) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY TYPEOF(rt1.c2 COLLATE RTRIM) DESC);
SELECT ALL * FROM v0, rt1, vt0 WHERE (CAST(((((rt1.c1)AND(vt0.c0)))AND(rt1.c2)) AS BLOB)) ORDER BY TYPEOF(rt1.c2 COLLATE RTRIM) DESC;
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(SQLITE_SOURCE_ID() AS INTEGER)) ORDER BY CAST(((rt0.c3)|(rt0.c3)) AS NUMERIC)  NULLS FIRST, json_remove(((rt0.c0)||(rt0.c1)), rt0.c1 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_SOURCE_ID() AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c3)|(rt0.c3)) AS NUMERIC)  NULLS FIRST, json_remove(((rt0.c0)||(rt0.c1)), rt0.c1 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(SQLITE_SOURCE_ID() AS INTEGER)) ORDER BY CAST(((rt0.c3)|(rt0.c3)) AS NUMERIC)  NULLS FIRST, json_remove(((rt0.c0)||(rt0.c1)), rt0.c1 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_SOURCE_ID() AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c3)|(rt0.c3)) AS NUMERIC)  NULLS FIRST, json_remove(((rt0.c0)||(rt0.c1)), rt0.c1 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) IS TRUE))LIKE(((v0.c0) BETWEEN (0X2197ef73) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))LIKE(((v0.c0) BETWEEN (0x2197ef73) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) IS TRUE))LIKE(((v0.c0) BETWEEN (0X2197ef73) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))LIKE(((v0.c0) BETWEEN (0x2197ef73) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) IS TRUE))LIKE(((v0.c0) BETWEEN (0X2197ef73) AND (v0.c0)))));
SELECT COUNT(*) FROM rt1, vt0, rt0, v0 WHERE ((((((rt1.c1, rt1.c0, rt0.c3)) BETWEEN ((rt0.c2, '7', rt0.c0)) AND ((rt0.c3, rt0.c1, vt0.c0))))/(((rt1.c2)%(rt0.c1))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1, rt1.c0, rt0.c3)) BETWEEN ((rt0.c2, '7', rt0.c0)) AND ((rt0.c3, rt0.c1, vt0.c0))))/(((rt1.c2)%(rt0.c1))))) IS TRUE)  as count FROM rt1, vt0, rt0, v0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, rt0, v0 WHERE ((((((rt1.c1, rt1.c0, rt0.c3)) BETWEEN ((rt0.c2, '7', rt0.c0)) AND ((rt0.c3, rt0.c1, vt0.c0))))/(((rt1.c2)%(rt0.c1))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1, rt1.c0, rt0.c3)) BETWEEN ((rt0.c2, '7', rt0.c0)) AND ((rt0.c3, rt0.c1, vt0.c0))))/(((rt1.c2)%(rt0.c1))))) IS TRUE)  as count FROM rt1, vt0, rt0, v0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, rt0, v0 WHERE ((((((rt1.c1, rt1.c0, rt0.c3)) BETWEEN ((rt0.c2, '7', rt0.c0)) AND ((rt0.c3, rt0.c1, vt0.c0))))/(((rt1.c2)%(rt0.c1))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t0 WHERE ('-1510224117' COLLATE NOCASE) ORDER BY (((((rt0.c1))>((rt0.c2))))<=(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c43))))  NULLS LAST, '' COLLATE RTRIM DESC, (((((rt0.c3))>=((rt0.c1)))) BETWEEN (CASE t0.c43  WHEN rt0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN t0.c1 THEN t0.c1 END) AND (((vt0.c0) BETWEEN (rt0.c1) AND (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1510224117' COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY (((((rt0.c1))>((rt0.c2))))<=(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c43))))  NULLS LAST, '' COLLATE RTRIM DESC, (((((rt0.c3))>=((rt0.c1)))) BETWEEN (CASE t0.c43  WHEN rt0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN t0.c1 THEN t0.c1 END) AND (((vt0.c0) BETWEEN (rt0.c1) AND (t0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t0 WHERE ('-1510224117' COLLATE NOCASE) ORDER BY (((((rt0.c1))>((rt0.c2))))<=(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c43))))  NULLS LAST, '' COLLATE RTRIM DESC, (((((rt0.c3))>=((rt0.c1)))) BETWEEN (CASE t0.c43  WHEN rt0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN t0.c1 THEN t0.c1 END) AND (((vt0.c0) BETWEEN (rt0.c1) AND (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1510224117' COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY (((((rt0.c1))>((rt0.c2))))<=(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c43))))  NULLS LAST, '' COLLATE RTRIM DESC, (((((rt0.c3))>=((rt0.c1)))) BETWEEN (CASE t0.c43  WHEN rt0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN t0.c1 THEN t0.c1 END) AND (((vt0.c0) BETWEEN (rt0.c1) AND (t0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t0 WHERE ('-1510224117' COLLATE NOCASE) ORDER BY (((((rt0.c1))>((rt0.c2))))<=(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c43))))  NULLS LAST, '' COLLATE RTRIM DESC, (((((rt0.c3))>=((rt0.c1)))) BETWEEN (CASE t0.c43  WHEN rt0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN t0.c1 THEN t0.c1 END) AND (((vt0.c0) BETWEEN (rt0.c1) AND (t0.c1))))  NULLS LAST;
SELECT * FROM rt1, vt0, rt0, t0 WHERE (((((t0.c43) IS TRUE))OR(((t0.c1)<=(rt1.c1))))) ORDER BY ((((t0.c43)LIKE(rt0.c1)))<<((('') IS FALSE))), ((((((((rt0.c1)OR(rt1.c2)))AND(rt1.c0)))AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (0.11753632082001653)))))AND(UNLIKELY(-898114799)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c43) IS TRUE))OR(((t0.c1)<=(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0, rt0, t0 ORDER BY ((((t0.c43)LIKE(rt0.c1)))<<((('') IS FALSE))), ((((((((rt0.c1)OR(rt1.c2)))AND(rt1.c0)))AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (0.11753632082001653)))))AND(UNLIKELY(-898114799)))  NULLS LAST);
SELECT * FROM rt1, vt0, rt0, t0 WHERE (((((t0.c43) IS TRUE))OR(((t0.c1)<=(rt1.c1))))) ORDER BY ((((t0.c43)LIKE(rt0.c1)))<<((('') IS FALSE))), ((((((((rt0.c1)OR(rt1.c2)))AND(rt1.c0)))AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (0.11753632082001653)))))AND(UNLIKELY(-898114799)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c43) IS TRUE))OR(((t0.c1)<=(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0, rt0, t0 ORDER BY ((((t0.c43)LIKE(rt0.c1)))<<((('') IS FALSE))), ((((((((rt0.c1)OR(rt1.c2)))AND(rt1.c0)))AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (0.11753632082001653)))))AND(UNLIKELY(-898114799)))  NULLS LAST);
SELECT * FROM rt1, vt0, rt0, t0 WHERE (((((t0.c43) IS TRUE))OR(((t0.c1)<=(rt1.c1))))) ORDER BY ((((t0.c43)LIKE(rt0.c1)))<<((('') IS FALSE))), ((((((((rt0.c1)OR(rt1.c2)))AND(rt1.c0)))AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (0.11753632082001653)))))AND(UNLIKELY(-898114799)))  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (rt1.c2);
SELECT * FROM t0, v0 INNER JOIN rt1 ON DATETIME('-528321400', ((t0.c1)>>(rt1.c2)), LIKELY(DISTINCT rt1.c2)) WHERE (x'571b');
SELECT SUM(count) FROM (SELECT ((x'571b') IS TRUE)  as count FROM t0, v0 INNER JOIN rt1 ON DATETIME('-528321400', ((t0.c1)>>(rt1.c2)), LIKELY(DISTINCT rt1.c2)));
SELECT * FROM t0, v0 INNER JOIN rt1 ON DATETIME('-528321400', ((t0.c1)>>(rt1.c2)), LIKELY(DISTINCT rt1.c2)) WHERE (x'571b');
SELECT SUM(count) FROM (SELECT ((x'571b') IS TRUE)  as count FROM t0, v0 INNER JOIN rt1 ON DATETIME('-528321400', ((t0.c1)>>(rt1.c2)), LIKELY(DISTINCT rt1.c2)));
SELECT * FROM t0, v0 INNER JOIN rt1 ON DATETIME('-528321400', ((t0.c1)>>(rt1.c2)), LIKELY(DISTINCT rt1.c2)) WHERE (x'571b');
SELECT COUNT(*) FROM v0, vt0, rt1, rt0, t0 WHERE (((((((((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c1)))AND(((t0.c1) ISNULL))))AND(COALESCE(DISTINCT '/7', t0.c0, rt0.c3, rt0.c2))))OR(NULL)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c1)))AND(((t0.c1) ISNULL))))AND(COALESCE(DISTINCT '/7', t0.c0, rt0.c3, rt0.c2))))OR(NULL)))AND(NULL))) IS TRUE)  as count FROM v0, vt0, rt1, rt0, t0);
SELECT COUNT(*) FROM v0, vt0, rt1, rt0, t0 WHERE (((((((((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c1)))AND(((t0.c1) ISNULL))))AND(COALESCE(DISTINCT '/7', t0.c0, rt0.c3, rt0.c2))))OR(NULL)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c1)))AND(((t0.c1) ISNULL))))AND(COALESCE(DISTINCT '/7', t0.c0, rt0.c3, rt0.c2))))OR(NULL)))AND(NULL))) IS TRUE)  as count FROM v0, vt0, rt1, rt0, t0);
SELECT COUNT(*) FROM v0, vt0, rt1, rt0, t0 WHERE (((((((((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c1)))AND(((t0.c1) ISNULL))))AND(COALESCE(DISTINCT '/7', t0.c0, rt0.c3, rt0.c2))))OR(NULL)))AND(NULL)));
SELECT * FROM rt0 INNER JOIN vt0 ON CAST((~ (rt0.c2)) AS INTEGER) CROSS JOIN rt1 ON CAST(((rt1.c2)|(t0.c0)) AS NUMERIC) INNER JOIN v0 ON x'1604' COLLATE NOCASE LEFT OUTER JOIN t0 ON (NOT (json_extract(rt0.c1, rt0.c0, 'cg	y	nRUU', rt0.c0))) WHERE ((((x'')) BETWEEN ((((((((((t0.c1)AND(rt0.c1)))AND(t0.c1)))OR(rt0.c0)))OR(rt1.c2)))) AND (((rt1.c0 IN ()))))) ORDER BY ((((((((((t0.c1)AND(rt1.c1)))OR(((rt0.c3) ISNULL))))AND(((((x'')OR(rt0.c1)))AND(t0.c1)))))OR((((t0.c0))<=((v0.c0))))))OR(((((((((((((rt0.c0)OR(t0.c1)))OR(7.39490107E8)))OR(t0.c0)))OR(rt1.c2)))AND(rt1.c1)))OR(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN ((((((((((t0.c1)AND(rt0.c1)))AND(t0.c1)))OR(rt0.c0)))OR(rt1.c2)))) AND (((rt1.c0 IN ()))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST((~ (rt0.c2)) AS INTEGER) CROSS JOIN rt1 ON CAST(((rt1.c2)|(t0.c0)) AS NUMERIC) INNER JOIN v0 ON x'1604' COLLATE NOCASE LEFT OUTER JOIN t0 ON (NOT (json_extract(rt0.c1, rt0.c0, 'cg	y	nRUU', rt0.c0))) ORDER BY ((((((((((t0.c1)AND(rt1.c1)))OR(((rt0.c3) ISNULL))))AND(((((x'')OR(rt0.c1)))AND(t0.c1)))))OR((((t0.c0))<=((v0.c0))))))OR(((((((((((((rt0.c0)OR(t0.c1)))OR(7.39490107E8)))OR(t0.c0)))OR(rt1.c2)))AND(rt1.c1)))OR(rt0.c0))))  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt0 ON CAST((~ (rt0.c2)) AS INTEGER) CROSS JOIN rt1 ON CAST(((rt1.c2)|(t0.c0)) AS NUMERIC) INNER JOIN v0 ON x'1604' COLLATE NOCASE LEFT OUTER JOIN t0 ON (NOT (json_extract(rt0.c1, rt0.c0, 'cg	y	nRUU', rt0.c0))) WHERE ((((x'')) BETWEEN ((((((((((t0.c1)AND(rt0.c1)))AND(t0.c1)))OR(rt0.c0)))OR(rt1.c2)))) AND (((rt1.c0 IN ()))))) ORDER BY ((((((((((t0.c1)AND(rt1.c1)))OR(((rt0.c3) ISNULL))))AND(((((x'')OR(rt0.c1)))AND(t0.c1)))))OR((((t0.c0))<=((v0.c0))))))OR(((((((((((((rt0.c0)OR(t0.c1)))OR(7.39490107E8)))OR(t0.c0)))OR(rt1.c2)))AND(rt1.c1)))OR(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN ((((((((((t0.c1)AND(rt0.c1)))AND(t0.c1)))OR(rt0.c0)))OR(rt1.c2)))) AND (((rt1.c0 IN ()))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST((~ (rt0.c2)) AS INTEGER) CROSS JOIN rt1 ON CAST(((rt1.c2)|(t0.c0)) AS NUMERIC) INNER JOIN v0 ON x'1604' COLLATE NOCASE LEFT OUTER JOIN t0 ON (NOT (json_extract(rt0.c1, rt0.c0, 'cg	y	nRUU', rt0.c0))) ORDER BY ((((((((((t0.c1)AND(rt1.c1)))OR(((rt0.c3) ISNULL))))AND(((((x'')OR(rt0.c1)))AND(t0.c1)))))OR((((t0.c0))<=((v0.c0))))))OR(((((((((((((rt0.c0)OR(t0.c1)))OR(7.39490107E8)))OR(t0.c0)))OR(rt1.c2)))AND(rt1.c1)))OR(rt0.c0))))  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt0 ON CAST((~ (rt0.c2)) AS INTEGER) CROSS JOIN rt1 ON CAST(((rt1.c2)|(t0.c0)) AS NUMERIC) INNER JOIN v0 ON x'1604' COLLATE NOCASE LEFT OUTER JOIN t0 ON (NOT (json_extract(rt0.c1, rt0.c0, 'cg	y	nRUU', rt0.c0))) WHERE ((((x'')) BETWEEN ((((((((((t0.c1)AND(rt0.c1)))AND(t0.c1)))OR(rt0.c0)))OR(rt1.c2)))) AND (((rt1.c0 IN ()))))) ORDER BY ((((((((((t0.c1)AND(rt1.c1)))OR(((rt0.c3) ISNULL))))AND(((((x'')OR(rt0.c1)))AND(t0.c1)))))OR((((t0.c0))<=((v0.c0))))))OR(((((((((((((rt0.c0)OR(t0.c1)))OR(7.39490107E8)))OR(t0.c0)))OR(rt1.c2)))AND(rt1.c1)))OR(rt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE (CASE rt1.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE (CASE rt1.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE (CASE rt1.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON rt1.c0 RIGHT OUTER JOIN v0 ON CASE rt1.c1 COLLATE BINARY  WHEN rt1.c2 COLLATE BINARY THEN ((('0.805980637774004')) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN CAST(t0.c43 AS INTEGER) THEN CASE WHEN rt1.c2 THEN rt1.c2 END WHEN rt1.c1 COLLATE BINARY THEN CASE t0.c43  WHEN v0.c0 THEN rt1.c2 END END WHERE ((((((rt1.c2))>((rt1.c1)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2))>((rt1.c1)))) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON rt1.c0 RIGHT OUTER JOIN v0 ON CASE rt1.c1 COLLATE BINARY  WHEN rt1.c2 COLLATE BINARY THEN ((('0.805980637774004')) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN CAST(t0.c43 AS INTEGER) THEN CASE WHEN rt1.c2 THEN rt1.c2 END WHEN rt1.c1 COLLATE BINARY THEN CASE t0.c43  WHEN v0.c0 THEN rt1.c2 END END);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON rt1.c0 RIGHT OUTER JOIN v0 ON CASE rt1.c1 COLLATE BINARY  WHEN rt1.c2 COLLATE BINARY THEN ((('0.805980637774004')) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN CAST(t0.c43 AS INTEGER) THEN CASE WHEN rt1.c2 THEN rt1.c2 END WHEN rt1.c1 COLLATE BINARY THEN CASE t0.c43  WHEN v0.c0 THEN rt1.c2 END END WHERE ((((((rt1.c2))>((rt1.c1)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2))>((rt1.c1)))) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON rt1.c0 RIGHT OUTER JOIN v0 ON CASE rt1.c1 COLLATE BINARY  WHEN rt1.c2 COLLATE BINARY THEN ((('0.805980637774004')) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN CAST(t0.c43 AS INTEGER) THEN CASE WHEN rt1.c2 THEN rt1.c2 END WHEN rt1.c1 COLLATE BINARY THEN CASE t0.c43  WHEN v0.c0 THEN rt1.c2 END END);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON rt1.c0 RIGHT OUTER JOIN v0 ON CASE rt1.c1 COLLATE BINARY  WHEN rt1.c2 COLLATE BINARY THEN ((('0.805980637774004')) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN CAST(t0.c43 AS INTEGER) THEN CASE WHEN rt1.c2 THEN rt1.c2 END WHEN rt1.c1 COLLATE BINARY THEN CASE t0.c43  WHEN v0.c0 THEN rt1.c2 END END WHERE ((((((rt1.c2))>((rt1.c1)))) NOT NULL));
SELECT ALL COUNT(*) FROM rt1, v0, rt0, t0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt1, v0, rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt1, v0, rt0, t0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt1, v0, rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt1, v0, rt0, t0, vt0 WHERE (rt0.c0);
SELECT ALL * FROM vt0, rt0 INNER JOIN t0 ON ((rt0.c1 COLLATE BINARY) ISNULL) WHERE (CASE WHEN (+ (t0.c1)) THEN CASE t0.c1  WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (t0.c1)) THEN CASE t0.c1  WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END END) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON ((rt0.c1 COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, rt0 INNER JOIN t0 ON ((rt0.c1 COLLATE BINARY) ISNULL) WHERE (CASE WHEN (+ (t0.c1)) THEN CASE t0.c1  WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (t0.c1)) THEN CASE t0.c1  WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END END) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON ((rt0.c1 COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, rt0 INNER JOIN t0 ON ((rt0.c1 COLLATE BINARY) ISNULL) WHERE (CASE WHEN (+ (t0.c1)) THEN CASE t0.c1  WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END END);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c1 AS BLOB))!=(((rt0.c3) IS TRUE))) LEFT OUTER JOIN vt0 ON (((rt0.c3)) BETWEEN ((ABS(rt0.c0))) AND ((rt0.c0 COLLATE BINARY))) WHERE (HEX(rt0.c3));
SELECT SUM(count) FROM (SELECT ((HEX(rt0.c3)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c1 AS BLOB))!=(((rt0.c3) IS TRUE))) LEFT OUTER JOIN vt0 ON (((rt0.c3)) BETWEEN ((ABS(rt0.c0))) AND ((rt0.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c1 AS BLOB))!=(((rt0.c3) IS TRUE))) LEFT OUTER JOIN vt0 ON (((rt0.c3)) BETWEEN ((ABS(rt0.c0))) AND ((rt0.c0 COLLATE BINARY))) WHERE (HEX(rt0.c3));
SELECT SUM(count) FROM (SELECT ((HEX(rt0.c3)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c1 AS BLOB))!=(((rt0.c3) IS TRUE))) LEFT OUTER JOIN vt0 ON (((rt0.c3)) BETWEEN ((ABS(rt0.c0))) AND ((rt0.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c1 AS BLOB))!=(((rt0.c3) IS TRUE))) LEFT OUTER JOIN vt0 ON (((rt0.c3)) BETWEEN ((ABS(rt0.c0))) AND ((rt0.c0 COLLATE BINARY))) WHERE (HEX(rt0.c3));
SELECT ALL * FROM vt0 WHERE (load_extension(x'', x'')) ORDER BY (- (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, ((((vt0.c0)|(vt0.c0))) NOT BETWEEN ((~ (vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST, ((- (vt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(x'', x'')) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, ((((vt0.c0)|(vt0.c0))) NOT BETWEEN ((~ (vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST, ((- (vt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (load_extension(x'', x'')) ORDER BY (- (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, ((((vt0.c0)|(vt0.c0))) NOT BETWEEN ((~ (vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST, ((- (vt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(x'', x'')) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, ((((vt0.c0)|(vt0.c0))) NOT BETWEEN ((~ (vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST, ((- (vt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt1, v0, rt0, vt0 WHERE (((x'2d3f')IS(((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'2d3f')IS(((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, v0, rt0, vt0);
SELECT * FROM rt1, v0, rt0, vt0 WHERE (((x'2d3f')IS(((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'2d3f')IS(((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, v0, rt0, vt0);
SELECT * FROM rt1, v0, rt0, vt0 WHERE (((x'2d3f')IS(((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c2)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0))>=(('1260615750', vt0.c0, 0.23304732825992946))))))OR(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((CAST(x'' AS TEXT))>(CAST(vt0.c0 AS REAL))) ASC, ((((vt0.c0) IS TRUE)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0))>=(('1260615750', vt0.c0, 0.23304732825992946))))))OR(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(x'' AS TEXT))>(CAST(vt0.c0 AS REAL))) ASC, ((((vt0.c0) IS TRUE)) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0))>=(('1260615750', vt0.c0, 0.23304732825992946))))))OR(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((CAST(x'' AS TEXT))>(CAST(vt0.c0 AS REAL))) ASC, ((((vt0.c0) IS TRUE)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0))>=(('1260615750', vt0.c0, 0.23304732825992946))))))OR(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(x'' AS TEXT))>(CAST(vt0.c0 AS REAL))) ASC, ((((vt0.c0) IS TRUE)) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0))>=(('1260615750', vt0.c0, 0.23304732825992946))))))OR(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((CAST(x'' AS TEXT))>(CAST(vt0.c0 AS REAL))) ASC, ((((vt0.c0) IS TRUE)) ISNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (LIKELIHOOD(DISTINCT LIKELY(DISTINCT rt1.c1), 0.805550479442544)) ORDER BY CAST(rt1.c1 AS TEXT) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT LIKELY(DISTINCT rt1.c1), 0.805550479442544)) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c1 AS TEXT) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (LIKELIHOOD(DISTINCT LIKELY(DISTINCT rt1.c1), 0.805550479442544)) ORDER BY CAST(rt1.c1 AS TEXT) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT LIKELY(DISTINCT rt1.c1), 0.805550479442544)) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c1 AS TEXT) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (LIKELIHOOD(DISTINCT LIKELY(DISTINCT rt1.c1), 0.805550479442544)) ORDER BY CAST(rt1.c1 AS TEXT) COLLATE RTRIM  NULLS LAST;
SELECT * FROM v0, rt1, vt0 WHERE (CASE (NOT (v0.c0))  WHEN ((v0.c0) BETWEEN (0.7966020318373712) AND (rt1.c1)) THEN rt1.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (v0.c0))  WHEN ((v0.c0) BETWEEN (0.7966020318373712) AND (rt1.c1)) THEN rt1.c2 END) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT * FROM v0, rt1, vt0 WHERE (CASE (NOT (v0.c0))  WHEN ((v0.c0) BETWEEN (0.7966020318373712) AND (rt1.c1)) THEN rt1.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (v0.c0))  WHEN ((v0.c0) BETWEEN (0.7966020318373712) AND (rt1.c1)) THEN rt1.c2 END) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT * FROM v0, rt1, vt0 WHERE (CASE (NOT (v0.c0))  WHEN ((v0.c0) BETWEEN (0.7966020318373712) AND (rt1.c1)) THEN rt1.c2 END);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((vt0.c0 IN ()) IN (rt0.c3 COLLATE RTRIM, (NOT (v0.c0))))) ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN (rt0.c3 COLLATE RTRIM, (NOT (v0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((vt0.c0 IN ()) IN (rt0.c3 COLLATE RTRIM, (NOT (v0.c0))))) ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN (rt0.c3 COLLATE RTRIM, (NOT (v0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((vt0.c0 IN ()) IN (rt0.c3 COLLATE RTRIM, (NOT (v0.c0))))) ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c1, rt0.c0, rt0.c3)) NOT BETWEEN (((rt0.c2 IN (rt0.c1)), CAST(rt1.c0 AS BLOB), ((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c0)))) AND (((- (rt1.c1)), ((((x'')OR(-80943574)))OR(rt0.c0)), rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c0, rt0.c3)) NOT BETWEEN (((rt0.c2 IN (rt0.c1)), CAST(rt1.c0 AS BLOB), ((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c0)))) AND (((- (rt1.c1)), ((((x'')OR(-80943574)))OR(rt0.c0)), rt0.c0)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c1, rt0.c0, rt0.c3)) NOT BETWEEN (((rt0.c2 IN (rt0.c1)), CAST(rt1.c0 AS BLOB), ((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c0)))) AND (((- (rt1.c1)), ((((x'')OR(-80943574)))OR(rt0.c0)), rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c0, rt0.c3)) NOT BETWEEN (((rt0.c2 IN (rt0.c1)), CAST(rt1.c0 AS BLOB), ((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c0)))) AND (((- (rt1.c1)), ((((x'')OR(-80943574)))OR(rt0.c0)), rt0.c0)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c1, rt0.c0, rt0.c3)) NOT BETWEEN (((rt0.c2 IN (rt0.c1)), CAST(rt1.c0 AS BLOB), ((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c0)))) AND (((- (rt1.c1)), ((((x'')OR(-80943574)))OR(rt0.c0)), rt0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((x'23f6' IN (t0.c1))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))) AND ((((t0.c1, t0.c43, t0.c0)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c43, t0.c1, 0Xffffffff99e76f13))))));
SELECT SUM(count) FROM (SELECT (((((x'23f6' IN (t0.c1))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))) AND ((((t0.c1, t0.c43, t0.c0)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c43, t0.c1, 0xffffffff99e76f13)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((x'23f6' IN (t0.c1))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))) AND ((((t0.c1, t0.c43, t0.c0)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c43, t0.c1, 0Xffffffff99e76f13))))));
SELECT SUM(count) FROM (SELECT (((((x'23f6' IN (t0.c1))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))) AND ((((t0.c1, t0.c43, t0.c0)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c43, t0.c1, 0xffffffff99e76f13)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((x'23f6' IN (t0.c1))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))) AND ((((t0.c1, t0.c43, t0.c0)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c43, t0.c1, 0Xffffffff99e76f13))))));
SELECT * FROM vt0 WHERE (CAST((- (vt0.c0)) AS BLOB)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY x'');
SELECT * FROM vt0 WHERE (CAST((- (vt0.c0)) AS BLOB)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY x'');
SELECT * FROM vt0 WHERE (CAST((- (vt0.c0)) AS BLOB)) ORDER BY x'';
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL)) ISNULL)) ORDER BY ((t0.c43 COLLATE RTRIM) BETWEEN (CASE WHEN t0.c0 THEN t0.c43 END) AND (((((t0.c0)AND(t0.c1)))AND(t0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY ((t0.c43 COLLATE RTRIM) BETWEEN (CASE WHEN t0.c0 THEN t0.c43 END) AND (((((t0.c0)AND(t0.c1)))AND(t0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL)) ISNULL)) ORDER BY ((t0.c43 COLLATE RTRIM) BETWEEN (CASE WHEN t0.c0 THEN t0.c43 END) AND (((((t0.c0)AND(t0.c1)))AND(t0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY ((t0.c43 COLLATE RTRIM) BETWEEN (CASE WHEN t0.c0 THEN t0.c43 END) AND (((((t0.c0)AND(t0.c1)))AND(t0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL)) ISNULL)) ORDER BY ((t0.c43 COLLATE RTRIM) BETWEEN (CASE WHEN t0.c0 THEN t0.c43 END) AND (((((t0.c0)AND(t0.c1)))AND(t0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c2 AS TEXT)) IS TRUE) FULL OUTER JOIN rt0 ON ((((0.849014510499434)<=(rt0.c3))) IS TRUE) WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (x''))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c2 AS TEXT)) IS TRUE) FULL OUTER JOIN rt0 ON ((((0.849014510499434)<=(rt0.c3))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c2 AS TEXT)) IS TRUE) FULL OUTER JOIN rt0 ON ((((0.849014510499434)<=(rt0.c3))) IS TRUE) WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (x''))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c2 AS TEXT)) IS TRUE) FULL OUTER JOIN rt0 ON ((((0.849014510499434)<=(rt0.c3))) IS TRUE));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((rt1.c1)) BETWEEN (((NOT (rt1.c0)))) AND ((((rt1.c0)<<(NULL))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN (((NOT (rt1.c0)))) AND ((((rt1.c0)<<(NULL)))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((rt1.c1)) BETWEEN (((NOT (rt1.c0)))) AND ((((rt1.c0)<<(NULL))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN (((NOT (rt1.c0)))) AND ((((rt1.c0)<<(NULL)))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((rt1.c1)) BETWEEN (((NOT (rt1.c0)))) AND ((((rt1.c0)<<(NULL))))));
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((((NULL) BETWEEN ('1482412001') AND (x'')))==(CAST('-1733855246' AS REAL)))) ORDER BY CASE CASE WHEN rt1.c0 THEN 0.2527619422936842 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN t0.c0 ELSE rt1.c1 END  WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c0) NOTNULL) WHEN UPPER(rt1.c1) THEN '{1' WHEN ((rt1.c1) NOT NULL) THEN (((t0.c43, t0.c0, rt1.c1))<=((t0.c43, t0.c43, t0.c1))) ELSE CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN ('1482412001') AND (x'')))==(CAST('-1733855246' AS REAL)))) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY CASE CASE WHEN rt1.c0 THEN 0.2527619422936842 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN t0.c0 ELSE rt1.c1 END  WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c0) NOTNULL) WHEN UPPER(rt1.c1) THEN '{1' WHEN ((rt1.c1) NOT NULL) THEN (((t0.c43, t0.c0, rt1.c1))<=((t0.c43, t0.c43, t0.c1))) ELSE CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 END END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((((NULL) BETWEEN ('1482412001') AND (x'')))==(CAST('-1733855246' AS REAL)))) ORDER BY CASE CASE WHEN rt1.c0 THEN 0.2527619422936842 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN t0.c0 ELSE rt1.c1 END  WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c0) NOTNULL) WHEN UPPER(rt1.c1) THEN '{1' WHEN ((rt1.c1) NOT NULL) THEN (((t0.c43, t0.c0, rt1.c1))<=((t0.c43, t0.c43, t0.c1))) ELSE CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN ('1482412001') AND (x'')))==(CAST('-1733855246' AS REAL)))) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY CASE CASE WHEN rt1.c0 THEN 0.2527619422936842 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN t0.c0 ELSE rt1.c1 END  WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c0) NOTNULL) WHEN UPPER(rt1.c1) THEN '{1' WHEN ((rt1.c1) NOT NULL) THEN (((t0.c43, t0.c0, rt1.c1))<=((t0.c43, t0.c43, t0.c1))) ELSE CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 END END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((((NULL) BETWEEN ('1482412001') AND (x'')))==(CAST('-1733855246' AS REAL)))) ORDER BY CASE CASE WHEN rt1.c0 THEN 0.2527619422936842 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN t0.c0 ELSE rt1.c1 END  WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c0) NOTNULL) WHEN UPPER(rt1.c1) THEN '{1' WHEN ((rt1.c1) NOT NULL) THEN (((t0.c43, t0.c0, rt1.c1))<=((t0.c43, t0.c43, t0.c1))) ELSE CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 END END ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((SQLITE_SOURCE_ID())>>(x''))) ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM, CASE ((v0.c0)<(v0.c0))  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_SOURCE_ID())>>(x''))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM, CASE ((v0.c0)<(v0.c0))  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((SQLITE_SOURCE_ID())>>(x''))) ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM, CASE ((v0.c0)<(v0.c0))  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_SOURCE_ID())>>(x''))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM, CASE ((v0.c0)<(v0.c0))  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((SQLITE_SOURCE_ID())>>(x''))) ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM, CASE ((v0.c0)<(v0.c0))  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END  NULLS FIRST;
SELECT ALL * FROM rt0, v0, rt1 LEFT OUTER JOIN t0 ON ((MIN(rt0.c3, t0.c1, t0.c1, rt1.c2)) BETWEEN (((((rt0.c1)AND(t0.c0)))OR(rt1.c1))) AND (t0.c0)) WHERE (((((t0.c43)=(rt1.c2)))/((NOT (t0.c43))))) ORDER BY (((~ (rt1.c0))) NOTNULL), CASE x''  WHEN rt1.c1 COLLATE RTRIM THEN NULLIF(t0.c43, rt0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c43)==(rt1.c2)))/((NOT (t0.c43))))) IS TRUE)  as count FROM rt0, v0, rt1 LEFT OUTER JOIN t0 ON ((MIN(rt0.c3, t0.c1, t0.c1, rt1.c2)) BETWEEN (((((rt0.c1)AND(t0.c0)))OR(rt1.c1))) AND (t0.c0)) ORDER BY (((~ (rt1.c0))) NOTNULL), CASE x''  WHEN rt1.c1 COLLATE RTRIM THEN NULLIF(t0.c43, rt0.c0) END DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0, rt1 LEFT OUTER JOIN t0 ON ((MIN(rt0.c3, t0.c1, t0.c1, rt1.c2)) BETWEEN (((((rt0.c1)AND(t0.c0)))OR(rt1.c1))) AND (t0.c0)) WHERE (((((t0.c43)=(rt1.c2)))/((NOT (t0.c43))))) ORDER BY (((~ (rt1.c0))) NOTNULL), CASE x''  WHEN rt1.c1 COLLATE RTRIM THEN NULLIF(t0.c43, rt0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c43)==(rt1.c2)))/((NOT (t0.c43))))) IS TRUE)  as count FROM rt0, v0, rt1 LEFT OUTER JOIN t0 ON ((MIN(rt0.c3, t0.c1, t0.c1, rt1.c2)) BETWEEN (((((rt0.c1)AND(t0.c0)))OR(rt1.c1))) AND (t0.c0)) ORDER BY (((~ (rt1.c0))) NOTNULL), CASE x''  WHEN rt1.c1 COLLATE RTRIM THEN NULLIF(t0.c43, rt0.c0) END DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0, rt1 LEFT OUTER JOIN t0 ON ((MIN(rt0.c3, t0.c1, t0.c1, rt1.c2)) BETWEEN (((((rt0.c1)AND(t0.c0)))OR(rt1.c1))) AND (t0.c0)) WHERE (((((t0.c43)=(rt1.c2)))/((NOT (t0.c43))))) ORDER BY (((~ (rt1.c0))) NOTNULL), CASE x''  WHEN rt1.c1 COLLATE RTRIM THEN NULLIF(t0.c43, rt0.c0) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((((0.10660264137044795) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((0.10660264137044795) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((0.10660264137044795) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((0.10660264137044795) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((0.10660264137044795) IS FALSE)) NOTNULL));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c3)>>(NULL)))=(CAST(rt0.c3 AS NUMERIC)))) ORDER BY ((CASE WHEN rt0.c1 THEN vt0.c0 END)+(((vt0.c0)*(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>>(NULL)))=(CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN rt0.c1 THEN vt0.c0 END)+(((vt0.c0)*(rt0.c2)))) ASC);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c3)>>(NULL)))=(CAST(rt0.c3 AS NUMERIC)))) ORDER BY ((CASE WHEN rt0.c1 THEN vt0.c0 END)+(((vt0.c0)*(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>>(NULL)))=(CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN rt0.c1 THEN vt0.c0 END)+(((vt0.c0)*(rt0.c2)))) ASC);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c3)>>(NULL)))=(CAST(rt0.c3 AS NUMERIC)))) ORDER BY ((CASE WHEN rt0.c1 THEN vt0.c0 END)+(((vt0.c0)*(rt0.c2)))) ASC;
SELECT ALL * FROM vt0, rt0, t0, v0 WHERE ((((((rt0.c2) IS FALSE), 1980400135, 0.3438563842647382))!=((((x'd493')<(v0.c0)), ((v0.c0)LIKE(vt0.c0)), ((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) IS FALSE), 1980400135, 0.3438563842647382))!=((((x'd493')<(v0.c0)), ((v0.c0)LIKE(vt0.c0)), ((rt0.c1) BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM vt0, rt0, t0, v0);
SELECT ALL * FROM vt0, rt0, t0, v0 WHERE ((((((rt0.c2) IS FALSE), 1980400135, 0.3438563842647382))!=((((x'd493')<(v0.c0)), ((v0.c0)LIKE(vt0.c0)), ((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) IS FALSE), 1980400135, 0.3438563842647382))!=((((x'd493')<(v0.c0)), ((v0.c0)LIKE(vt0.c0)), ((rt0.c1) BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM vt0, rt0, t0, v0);
SELECT ALL * FROM vt0, rt0, t0, v0 WHERE ((((((rt0.c2) IS FALSE), 1980400135, 0.3438563842647382))!=((((x'd493')<(v0.c0)), ((v0.c0)LIKE(vt0.c0)), ((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))))));
SELECT * FROM v0 CROSS JOIN rt1 ON CAST(((t0.c1) NOTNULL) AS NUMERIC) RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)%(rt1.c1)) LEFT OUTER JOIN vt0 ON 0x6ea82465 WHERE (CASE t0.c43 COLLATE RTRIM  WHEN ((vt0.c0) BETWEEN (rt1.c1) AND (vt0.c0)) THEN t0.c43 ELSE CASE rt1.c1  WHEN rt1.c2 THEN NULL ELSE NULL END END) ORDER BY (((CAST(t0.c43 AS INTEGER)))<(((((t0.c1, rt1.c2, NULL)) BETWEEN ((t0.c1, t0.c1, v0.c0)) AND ((v0.c0, 0.3801720830697448, rt1.c2))))))  NULLS FIRST, ((v0.c0)%((((rt1.c1)) BETWEEN ((t0.c43)) AND ((rt1.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c43 COLLATE RTRIM  WHEN ((vt0.c0) BETWEEN (rt1.c1) AND (vt0.c0)) THEN t0.c43 ELSE CASE rt1.c1  WHEN rt1.c2 THEN NULL ELSE NULL END END) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON CAST(((t0.c1) NOTNULL) AS NUMERIC) RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)%(rt1.c1)) LEFT OUTER JOIN vt0 ON 0x6ea82465 ORDER BY (((CAST(t0.c43 AS INTEGER)))<(((((t0.c1, rt1.c2, NULL)) BETWEEN ((t0.c1, t0.c1, v0.c0)) AND ((v0.c0, 0.3801720830697448, rt1.c2))))))  NULLS FIRST, ((v0.c0)%((((rt1.c1)) BETWEEN ((t0.c43)) AND ((rt1.c1))))) DESC  NULLS LAST);
SELECT * FROM v0 CROSS JOIN rt1 ON CAST(((t0.c1) NOTNULL) AS NUMERIC) RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)%(rt1.c1)) LEFT OUTER JOIN vt0 ON 0x6ea82465 WHERE (CASE t0.c43 COLLATE RTRIM  WHEN ((vt0.c0) BETWEEN (rt1.c1) AND (vt0.c0)) THEN t0.c43 ELSE CASE rt1.c1  WHEN rt1.c2 THEN NULL ELSE NULL END END) ORDER BY (((CAST(t0.c43 AS INTEGER)))<(((((t0.c1, rt1.c2, NULL)) BETWEEN ((t0.c1, t0.c1, v0.c0)) AND ((v0.c0, 0.3801720830697448, rt1.c2))))))  NULLS FIRST, ((v0.c0)%((((rt1.c1)) BETWEEN ((t0.c43)) AND ((rt1.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c43 COLLATE RTRIM  WHEN ((vt0.c0) BETWEEN (rt1.c1) AND (vt0.c0)) THEN t0.c43 ELSE CASE rt1.c1  WHEN rt1.c2 THEN NULL ELSE NULL END END) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON CAST(((t0.c1) NOTNULL) AS NUMERIC) RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)%(rt1.c1)) LEFT OUTER JOIN vt0 ON 0x6ea82465 ORDER BY (((CAST(t0.c43 AS INTEGER)))<(((((t0.c1, rt1.c2, NULL)) BETWEEN ((t0.c1, t0.c1, v0.c0)) AND ((v0.c0, 0.3801720830697448, rt1.c2))))))  NULLS FIRST, ((v0.c0)%((((rt1.c1)) BETWEEN ((t0.c43)) AND ((rt1.c1))))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ('2031150288') ORDER BY (((~ (t0.c1)))GLOB(((t0.c1)<=(NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('2031150288') IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((~ (t0.c1)))GLOB(((t0.c1)<=(NULL)))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE ('2031150288') ORDER BY (((~ (t0.c1)))GLOB(((t0.c1)<=(NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('2031150288') IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((~ (t0.c1)))GLOB(((t0.c1)<=(NULL)))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE ('2031150288') ORDER BY (((~ (t0.c1)))GLOB(((t0.c1)<=(NULL)))) ASC  NULLS LAST;
SELECT * FROM rt1, t0, vt0 WHERE (((t0.c1 COLLATE NOCASE) BETWEEN ((- (t0.c0))) AND (((rt1.c1) NOT BETWEEN (t0.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE NOCASE) BETWEEN ((- (t0.c0))) AND (((rt1.c1) NOT BETWEEN (t0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT * FROM rt1, t0, vt0 WHERE (((t0.c1 COLLATE NOCASE) BETWEEN ((- (t0.c0))) AND (((rt1.c1) NOT BETWEEN (t0.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE NOCASE) BETWEEN ((- (t0.c0))) AND (((rt1.c1) NOT BETWEEN (t0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT * FROM rt1, t0, vt0 WHERE (((t0.c1 COLLATE NOCASE) BETWEEN ((- (t0.c0))) AND (((rt1.c1) NOT BETWEEN (t0.c0) AND (rt1.c2)))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((((NULL) BETWEEN (rt0.c3) AND ('1069661021'))) NOTNULL) WHERE (CAST((- (t0.c43)) AS TEXT)) ORDER BY CASE (((t0.c0))<((rt0.c2)))  WHEN CAST(t0.c1 AS BLOB) THEN 1757082007 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ((CAST((- (t0.c43)) AS TEXT)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((NULL) BETWEEN (rt0.c3) AND ('1069661021'))) NOTNULL) ORDER BY CASE (((t0.c0))<((rt0.c2)))  WHEN CAST(t0.c1 AS BLOB) THEN 1757082007 COLLATE NOCASE END);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((((NULL) BETWEEN (rt0.c3) AND ('1069661021'))) NOTNULL) WHERE (CAST((- (t0.c43)) AS TEXT)) ORDER BY CASE (((t0.c0))<((rt0.c2)))  WHEN CAST(t0.c1 AS BLOB) THEN 1757082007 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ((CAST((- (t0.c43)) AS TEXT)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((NULL) BETWEEN (rt0.c3) AND ('1069661021'))) NOTNULL) ORDER BY CASE (((t0.c0))<((rt0.c2)))  WHEN CAST(t0.c1 AS BLOB) THEN 1757082007 COLLATE NOCASE END);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((((NULL) BETWEEN (rt0.c3) AND ('1069661021'))) NOTNULL) WHERE (CAST((- (t0.c43)) AS TEXT)) ORDER BY CASE (((t0.c0))<((rt0.c2)))  WHEN CAST(t0.c1 AS BLOB) THEN 1757082007 COLLATE NOCASE END;
SELECT * FROM vt0 WHERE (ABS(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY x'8ce0' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY x'8ce0' ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (ABS(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY x'8ce0' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY x'8ce0' ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (ABS(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY x'8ce0' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN v0 ON rt0.c1 LEFT OUTER JOIN rt0 ON ((((((((((((CAST(rt0.c2 AS TEXT))AND((((v0.c0, rt0.c3, v0.c0))<((rt0.c0, rt0.c0, v0.c0))))))AND(((x'')||(v0.c0)))))AND(CASE t0.c1  WHEN rt0.c0 THEN v0.c0 ELSE x'' END)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((rt0.c3) IS FALSE))))AND((((t0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON rt0.c1 LEFT OUTER JOIN rt0 ON ((((((((((((CAST(rt0.c2 AS TEXT))AND((((v0.c0, rt0.c3, v0.c0))<((rt0.c0, rt0.c0, v0.c0))))))AND(((x'')||(v0.c0)))))AND(CASE t0.c1  WHEN rt0.c0 THEN v0.c0 ELSE x'' END)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((rt0.c3) IS FALSE))))AND((((t0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN v0 ON rt0.c1 LEFT OUTER JOIN rt0 ON ((((((((((((CAST(rt0.c2 AS TEXT))AND((((v0.c0, rt0.c3, v0.c0))<((rt0.c0, rt0.c0, v0.c0))))))AND(((x'')||(v0.c0)))))AND(CASE t0.c1  WHEN rt0.c0 THEN v0.c0 ELSE x'' END)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((rt0.c3) IS FALSE))))AND((((t0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON rt0.c1 LEFT OUTER JOIN rt0 ON ((((((((((((CAST(rt0.c2 AS TEXT))AND((((v0.c0, rt0.c3, v0.c0))<((rt0.c0, rt0.c0, v0.c0))))))AND(((x'')||(v0.c0)))))AND(CASE t0.c1  WHEN rt0.c0 THEN v0.c0 ELSE x'' END)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((rt0.c3) IS FALSE))))AND((((t0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))>>((+ (rt0.c1)))) CROSS JOIN vt0 ON CAST(t0.c43 AS REAL) INNER JOIN t0 ON ((((t0.c1)||(x'')))<(-1.765528683E9)) CROSS JOIN rt1 ON (~ (json_array(rt0.c0, x'c805', rt0.c2, 't<O'))) WHERE (CAST((((rt0.c1, rt0.c0, rt0.c0))<>((t0.c43, rt0.c0, v0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, rt0.c0, rt0.c0))<>((t0.c43, rt0.c0, v0.c0))) AS TEXT)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))>>((+ (rt0.c1)))) CROSS JOIN vt0 ON CAST(t0.c43 AS REAL) INNER JOIN t0 ON ((((t0.c1)||(x'')))<(-1.765528683E9)) CROSS JOIN rt1 ON (~ (json_array(rt0.c0, x'c805', rt0.c2, 't<O'))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))>>((+ (rt0.c1)))) CROSS JOIN vt0 ON CAST(t0.c43 AS REAL) INNER JOIN t0 ON ((((t0.c1)||(x'')))<(-1.765528683E9)) CROSS JOIN rt1 ON (~ (json_array(rt0.c0, x'c805', rt0.c2, 't<O'))) WHERE (CAST((((rt0.c1, rt0.c0, rt0.c0))<>((t0.c43, rt0.c0, v0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, rt0.c0, rt0.c0))<>((t0.c43, rt0.c0, v0.c0))) AS TEXT)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))>>((+ (rt0.c1)))) CROSS JOIN vt0 ON CAST(t0.c43 AS REAL) INNER JOIN t0 ON ((((t0.c1)||(x'')))<(-1.765528683E9)) CROSS JOIN rt1 ON (~ (json_array(rt0.c0, x'c805', rt0.c2, 't<O'))));
SELECT * FROM vt0, t0, rt0, v0 WHERE ((((t0.c43)+(x'')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c43)+(x'')) IN ())) IS TRUE)  as count FROM vt0, t0, rt0, v0);
SELECT * FROM vt0, t0, rt0, v0 WHERE ((((t0.c43)+(x'')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c43)+(x'')) IN ())) IS TRUE)  as count FROM vt0, t0, rt0, v0);
SELECT * FROM vt0, t0, rt0, v0 WHERE ((((t0.c43)+(x'')) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 RIGHT OUTER JOIN rt1 ON rt0.c2 WHERE (CASE WHEN ((rt1.c0)/(rt1.c1)) THEN (rt0.c2 IN ()) ELSE ((rt1.c2) IS FALSE) END) ORDER BY (((((rt0.c3)<=(v0.c0))))>=((((rt1.c2)%(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)/(rt1.c1)) THEN (rt0.c2 IN ()) ELSE ((rt1.c2) IS FALSE) END) IS TRUE)  as count FROM rt0, vt0, v0 RIGHT OUTER JOIN rt1 ON rt0.c2 ORDER BY (((((rt0.c3)<=(v0.c0))))>=((((rt1.c2)%(rt0.c3))))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 RIGHT OUTER JOIN rt1 ON rt0.c2 WHERE (CASE WHEN ((rt1.c0)/(rt1.c1)) THEN (rt0.c2 IN ()) ELSE ((rt1.c2) IS FALSE) END) ORDER BY (((((rt0.c3)<=(v0.c0))))>=((((rt1.c2)%(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)/(rt1.c1)) THEN (rt0.c2 IN ()) ELSE ((rt1.c2) IS FALSE) END) IS TRUE)  as count FROM rt0, vt0, v0 RIGHT OUTER JOIN rt1 ON rt0.c2 ORDER BY (((((rt0.c3)<=(v0.c0))))>=((((rt1.c2)%(rt0.c3))))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 RIGHT OUTER JOIN rt1 ON rt0.c2 WHERE (CASE WHEN ((rt1.c0)/(rt1.c1)) THEN (rt0.c2 IN ()) ELSE ((rt1.c2) IS FALSE) END) ORDER BY (((((rt0.c3)<=(v0.c0))))>=((((rt1.c2)%(rt0.c3)))));
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c2 AS NUMERIC))>(((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0))))) ORDER BY ((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))AND(JULIANDAY(rt1.c0, rt1.c0, rt1.c0))))OR(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS NUMERIC))>(((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY ((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))AND(JULIANDAY(rt1.c0, rt1.c0, rt1.c0))))OR(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)) DESC);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c2 AS NUMERIC))>(((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0))))) ORDER BY ((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))AND(JULIANDAY(rt1.c0, rt1.c0, rt1.c0))))OR(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS NUMERIC))>(((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY ((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))AND(JULIANDAY(rt1.c0, rt1.c0, rt1.c0))))OR(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)) DESC);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c2 AS NUMERIC))>(((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0))))) ORDER BY ((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))AND(JULIANDAY(rt1.c0, rt1.c0, rt1.c0))))OR(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)) DESC;
SELECT COUNT(*) FROM rt1 WHERE (((('-1706776920') NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ((((('-1706776920') NOT NULL) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((('-1706776920') NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ((((('-1706776920') NOT NULL) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((('-1706776920') NOT NULL) IN ()));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOTNULL));
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c3) IS FALSE) IN ())) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE t0.c1  WHEN '' THEN rt0.c1 END)) AND ((((((x'')AND(rt0.c3)))AND(t0.c43)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) IS FALSE) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE t0.c1  WHEN '' THEN rt0.c1 END)) AND ((((((x'')AND(rt0.c3)))AND(t0.c43))))));
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c3) IS FALSE) IN ())) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE t0.c1  WHEN '' THEN rt0.c1 END)) AND ((((((x'')AND(rt0.c3)))AND(t0.c43)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) IS FALSE) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE t0.c1  WHEN '' THEN rt0.c1 END)) AND ((((((x'')AND(rt0.c3)))AND(t0.c43))))));
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c3) IS FALSE) IN ())) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE t0.c1  WHEN '' THEN rt0.c1 END)) AND ((((((x'')AND(rt0.c3)))AND(t0.c43)))));
SELECT ALL * FROM t0, v0, rt0, rt1, vt0 WHERE (RTRIM(CASE rt0.c0  WHEN t0.c0 THEN rt1.c0 END)) ORDER BY UNLIKELY(rt1.c1) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((RTRIM(CASE rt0.c0  WHEN t0.c0 THEN rt1.c0 END)) IS TRUE)  as count FROM t0, v0, rt0 NOT INDEXED, rt1, vt0 ORDER BY UNLIKELY(rt1.c1) COLLATE BINARY);
SELECT ALL * FROM t0, v0, rt0, rt1, vt0 WHERE (RTRIM(CASE rt0.c0  WHEN t0.c0 THEN rt1.c0 END)) ORDER BY UNLIKELY(rt1.c1) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((RTRIM(CASE rt0.c0  WHEN t0.c0 THEN rt1.c0 END)) IS TRUE)  as count FROM t0, v0, rt0 NOT INDEXED, rt1, vt0 ORDER BY UNLIKELY(rt1.c1) COLLATE BINARY);
SELECT ALL * FROM t0, v0, rt0, rt1, vt0 WHERE (RTRIM(CASE rt0.c0  WHEN t0.c0 THEN rt1.c0 END)) ORDER BY UNLIKELY(rt1.c1) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (LENGTH(((rt0.c3)||(rt0.c0)))) ORDER BY ((((((vt0.c0)OR(x'e617')))OR(vt0.c0)))AND(((vt0.c0) NOT BETWEEN ('205788124') AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((rt0.c3)||(rt0.c0)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((((vt0.c0)OR(x'e617')))OR(vt0.c0)))AND(((vt0.c0) NOT BETWEEN ('205788124') AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (LENGTH(((rt0.c3)||(rt0.c0)))) ORDER BY ((((((vt0.c0)OR(x'e617')))OR(vt0.c0)))AND(((vt0.c0) NOT BETWEEN ('205788124') AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((rt0.c3)||(rt0.c0)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((((vt0.c0)OR(x'e617')))OR(vt0.c0)))AND(((vt0.c0) NOT BETWEEN ('205788124') AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (LENGTH(((rt0.c3)||(rt0.c0)))) ORDER BY ((((((vt0.c0)OR(x'e617')))OR(vt0.c0)))AND(((vt0.c0) NOT BETWEEN ('205788124') AND (rt0.c3))));
SELECT ALL * FROM t0, rt0 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c0 END))>=(((t0.c43 IN (t0.c1, t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c3 THEN rt0.c0 END))>=(((t0.c43 IN (t0.c1, t0.c1)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c0 END))>=(((t0.c43 IN (t0.c1, t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c3 THEN rt0.c0 END))>=(((t0.c43 IN (t0.c1, t0.c1)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c0 END))>=(((t0.c43 IN (t0.c1, t0.c1))))));
SELECT * FROM t0 WHERE (CAST(0.1536923404804693 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.1536923404804693 AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(0.1536923404804693 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.1536923404804693 AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(0.1536923404804693 AS TEXT));
SELECT ALL COUNT(*) FROM rt0, rt1, v0, t0 WHERE ((((((v0.c0))<>((rt0.c1)))) ISNULL)) ORDER BY ((((((((((rt0.c2)>=(rt1.c1)))AND((rt0.c1 IN (t0.c43, rt0.c2)))))OR(CASE rt1.c1  WHEN rt1.c1 THEN t0.c0 END)))AND(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND(t0.c43)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<>((rt0.c1)))) ISNULL)) IS TRUE)  as count FROM rt0, rt1, v0, t0 ORDER BY ((((((((((rt0.c2)>=(rt1.c1)))AND((rt0.c1 IN (t0.c43, rt0.c2)))))OR(CASE rt1.c1  WHEN rt1.c1 THEN t0.c0 END)))AND(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND(t0.c43)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, v0, t0 WHERE ((((((v0.c0))<>((rt0.c1)))) ISNULL)) ORDER BY ((((((((((rt0.c2)>=(rt1.c1)))AND((rt0.c1 IN (t0.c43, rt0.c2)))))OR(CASE rt1.c1  WHEN rt1.c1 THEN t0.c0 END)))AND(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND(t0.c43)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<>((rt0.c1)))) ISNULL)) IS TRUE)  as count FROM rt0, rt1, v0, t0 ORDER BY ((((((((((rt0.c2)>=(rt1.c1)))AND((rt0.c1 IN (t0.c43, rt0.c2)))))OR(CASE rt1.c1  WHEN rt1.c1 THEN t0.c0 END)))AND(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND(t0.c43)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, v0, t0 WHERE ((((((v0.c0))<>((rt0.c1)))) ISNULL)) ORDER BY ((((((((((rt0.c2)>=(rt1.c1)))AND((rt0.c1 IN (t0.c43, rt0.c2)))))OR(CASE rt1.c1  WHEN rt1.c1 THEN t0.c0 END)))AND(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND(t0.c43)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0, rt1 WHERE (((((((((((rt0.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c3)))AND(rt1.c1)))GLOB(((rt0.c3)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c3)))AND(rt1.c1)))GLOB(((rt0.c3)&(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, rt1 WHERE (((((((((((rt0.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c3)))AND(rt1.c1)))GLOB(((rt0.c3)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c3)))AND(rt1.c1)))GLOB(((rt0.c3)&(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, rt1 WHERE (((((((((((rt0.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c3)))AND(rt1.c1)))GLOB(((rt0.c3)&(rt0.c0)))));
SELECT * FROM v0, rt1, vt0, t0 CROSS JOIN rt0 ON ((rt0.c2)<(t0.c1)) COLLATE NOCASE WHERE (LOWER(DISTINCT (rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (rt0.c3 IN ()))) IS TRUE)  as count FROM v0, rt1, vt0, t0 CROSS JOIN rt0 ON ((rt0.c2)<(t0.c1)) COLLATE NOCASE);
SELECT * FROM v0, rt1, vt0, t0 CROSS JOIN rt0 ON ((rt0.c2)<(t0.c1)) COLLATE NOCASE WHERE (LOWER(DISTINCT (rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (rt0.c3 IN ()))) IS TRUE)  as count FROM v0, rt1, vt0, t0 CROSS JOIN rt0 ON ((rt0.c2)<(t0.c1)) COLLATE NOCASE);
SELECT * FROM v0, rt1, vt0, t0 CROSS JOIN rt0 ON ((rt0.c2)<(t0.c1)) COLLATE NOCASE WHERE (LOWER(DISTINCT (rt0.c3 IN ())));
SELECT ALL * FROM rt1, vt0, v0 INNER JOIN t0 ON CASE WHEN (rt0.c1 IN (t0.c0)) THEN CAST(t0.c1 AS BLOB) END CROSS JOIN rt0 ON NULL WHERE ((((NOT (rt0.c3))) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND ((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt1.c2, t0.c43, rt1.c1)) AND ((rt1.c0, rt1.c1, rt0.c0)))))) ORDER BY CAST(CAST(x'' AS INTEGER) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c3))) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND ((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt1.c2, t0.c43, rt1.c1)) AND ((rt1.c0, rt1.c1, rt0.c0)))))) IS TRUE)  as count FROM rt1, vt0, v0 INNER JOIN t0 ON CASE WHEN (rt0.c1 IN (t0.c0)) THEN CAST(t0.c1 AS BLOB) END CROSS JOIN rt0 ON NULL ORDER BY CAST(CAST(x'' AS INTEGER) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt0, v0 INNER JOIN t0 ON CASE WHEN (rt0.c1 IN (t0.c0)) THEN CAST(t0.c1 AS BLOB) END CROSS JOIN rt0 ON NULL WHERE ((((NOT (rt0.c3))) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND ((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt1.c2, t0.c43, rt1.c1)) AND ((rt1.c0, rt1.c1, rt0.c0)))))) ORDER BY CAST(CAST(x'' AS INTEGER) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c3))) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND ((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt1.c2, t0.c43, rt1.c1)) AND ((rt1.c0, rt1.c1, rt0.c0)))))) IS TRUE)  as count FROM rt1, vt0, v0 INNER JOIN t0 ON CASE WHEN (rt0.c1 IN (t0.c0)) THEN CAST(t0.c1 AS BLOB) END CROSS JOIN rt0 ON NULL ORDER BY CAST(CAST(x'' AS INTEGER) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt0, v0 INNER JOIN t0 ON CASE WHEN (rt0.c1 IN (t0.c0)) THEN CAST(t0.c1 AS BLOB) END CROSS JOIN rt0 ON NULL WHERE ((((NOT (rt0.c3))) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND ((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt1.c2, t0.c43, rt1.c1)) AND ((rt1.c0, rt1.c1, rt0.c0)))))) ORDER BY CAST(CAST(x'' AS INTEGER) AS NUMERIC) ASC  NULLS LAST;
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0 IN (rt0.c1, rt0.c2)))OR(COALESCE(x'8afb4fe2', rt0.c1))))AND(CASE WHEN t0.c0 THEN t0.c43 ELSE t0.c1 END)) WHERE (((((((t0.c0)AND(rt0.c2)))AND(vt0.c0))) IS FALSE)) ORDER BY rt0.c3 ASC  NULLS FIRST, (NOT (((t0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(rt0.c2)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0 IN (rt0.c1, rt0.c2)))OR(COALESCE(x'8afb4fe2', rt0.c1))))AND(CASE WHEN t0.c0 THEN t0.c43 ELSE t0.c1 END)) ORDER BY rt0.c3 ASC  NULLS FIRST, (NOT (((t0.c0) NOTNULL))) ASC  NULLS LAST);
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0 IN (rt0.c1, rt0.c2)))OR(COALESCE(x'8afb4fe2', rt0.c1))))AND(CASE WHEN t0.c0 THEN t0.c43 ELSE t0.c1 END)) WHERE (((((((t0.c0)AND(rt0.c2)))AND(vt0.c0))) IS FALSE)) ORDER BY rt0.c3 ASC  NULLS FIRST, (NOT (((t0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(rt0.c2)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0 IN (rt0.c1, rt0.c2)))OR(COALESCE(x'8afb4fe2', rt0.c1))))AND(CASE WHEN t0.c0 THEN t0.c43 ELSE t0.c1 END)) ORDER BY rt0.c3 ASC  NULLS FIRST, (NOT (((t0.c0) NOTNULL))) ASC  NULLS LAST);
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0 IN (rt0.c1, rt0.c2)))OR(COALESCE(x'8afb4fe2', rt0.c1))))AND(CASE WHEN t0.c0 THEN t0.c43 ELSE t0.c1 END)) WHERE (((((((t0.c0)AND(rt0.c2)))AND(vt0.c0))) IS FALSE)) ORDER BY rt0.c3 ASC  NULLS FIRST, (NOT (((t0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, rt0, v0 RIGHT OUTER JOIN rt1 ON (((RTRIM(rt0.c0), CAST(t0.c43 AS REAL), CASE t0.c1  WHEN rt0.c2 THEN t0.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 END, CASE WHEN '' THEN rt1.c1 WHEN t0.c43 THEN t0.c0 WHEN t0.c1 THEN -5.82130537E8 WHEN rt0.c1 THEN t0.c43 WHEN 0.6945232542260465 THEN NULL END, rt1.c0 COLLATE NOCASE))<=((CAST(rt1.c0 AS NUMERIC), TYPEOF(DISTINCT vt0.c0), ((rt0.c2) NOT NULL), (('') NOT NULL), ((((((((rt1.c1)OR(v0.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(vt0.c0))))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, rt0, v0 RIGHT OUTER JOIN rt1 ON (((RTRIM(rt0.c0), CAST(t0.c43 AS REAL), CASE t0.c1  WHEN rt0.c2 THEN t0.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 END, CASE WHEN '' THEN rt1.c1 WHEN t0.c43 THEN t0.c0 WHEN t0.c1 THEN -5.82130537E8 WHEN rt0.c1 THEN t0.c43 WHEN 0.6945232542260465 THEN NULL END, rt1.c0 COLLATE NOCASE))<=((CAST(rt1.c0 AS NUMERIC), TYPEOF(DISTINCT vt0.c0), ((rt0.c2) NOT NULL), (('') NOT NULL), ((((((((rt1.c1)OR(v0.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, v0 RIGHT OUTER JOIN rt1 ON (((RTRIM(rt0.c0), CAST(t0.c43 AS REAL), CASE t0.c1  WHEN rt0.c2 THEN t0.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 END, CASE WHEN '' THEN rt1.c1 WHEN t0.c43 THEN t0.c0 WHEN t0.c1 THEN -5.82130537E8 WHEN rt0.c1 THEN t0.c43 WHEN 0.6945232542260465 THEN NULL END, rt1.c0 COLLATE NOCASE))<=((CAST(rt1.c0 AS NUMERIC), TYPEOF(DISTINCT vt0.c0), ((rt0.c2) NOT NULL), (('') NOT NULL), ((((((((rt1.c1)OR(v0.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(vt0.c0))))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, rt0, v0 RIGHT OUTER JOIN rt1 ON (((RTRIM(rt0.c0), CAST(t0.c43 AS REAL), CASE t0.c1  WHEN rt0.c2 THEN t0.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 END, CASE WHEN '' THEN rt1.c1 WHEN t0.c43 THEN t0.c0 WHEN t0.c1 THEN -5.82130537E8 WHEN rt0.c1 THEN t0.c43 WHEN 0.6945232542260465 THEN NULL END, rt1.c0 COLLATE NOCASE))<=((CAST(rt1.c0 AS NUMERIC), TYPEOF(DISTINCT vt0.c0), ((rt0.c2) NOT NULL), (('') NOT NULL), ((((((((rt1.c1)OR(v0.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, v0 RIGHT OUTER JOIN rt1 ON (((RTRIM(rt0.c0), CAST(t0.c43 AS REAL), CASE t0.c1  WHEN rt0.c2 THEN t0.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 END, CASE WHEN '' THEN rt1.c1 WHEN t0.c43 THEN t0.c0 WHEN t0.c1 THEN -5.82130537E8 WHEN rt0.c1 THEN t0.c43 WHEN 0.6945232542260465 THEN NULL END, rt1.c0 COLLATE NOCASE))<=((CAST(rt1.c0 AS NUMERIC), TYPEOF(DISTINCT vt0.c0), ((rt0.c2) NOT NULL), (('') NOT NULL), ((((((((rt1.c1)OR(v0.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(vt0.c0))))) WHERE (NULL);
SELECT ALL COUNT(*) FROM t0 WHERE (TIME('0.4397465506282354', ((t0.c1) ISNULL), 0.22387626784043924, ((((t0.c0)AND(t0.c43)))AND(t0.c0)), CAST(t0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((TIME('0.4397465506282354', ((t0.c1) ISNULL), 0.22387626784043924, ((((t0.c0)AND(t0.c43)))AND(t0.c0)), CAST(t0.c1 AS NUMERIC))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (TIME('0.4397465506282354', ((t0.c1) ISNULL), 0.22387626784043924, ((((t0.c0)AND(t0.c43)))AND(t0.c0)), CAST(t0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((TIME('0.4397465506282354', ((t0.c1) ISNULL), 0.22387626784043924, ((((t0.c0)AND(t0.c43)))AND(t0.c0)), CAST(t0.c1 AS NUMERIC))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (TIME('0.4397465506282354', ((t0.c1) ISNULL), 0.22387626784043924, ((((t0.c0)AND(t0.c43)))AND(t0.c0)), CAST(t0.c1 AS NUMERIC)));
SELECT * FROM v0 CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT x'', 0.1922371020097393) COLLATE BINARY WHERE (((rt0.c2)OR(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)OR(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT x'', 0.1922371020097393) COLLATE BINARY);
SELECT * FROM v0 CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT x'', 0.1922371020097393) COLLATE BINARY WHERE (((rt0.c2)OR(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)OR(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT x'', 0.1922371020097393) COLLATE BINARY);
SELECT * FROM v0 CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT x'', 0.1922371020097393) COLLATE BINARY WHERE (((rt0.c2)OR(CAST(rt0.c2 AS BLOB))));
SELECT * FROM vt0, v0, rt0 NATURAL JOIN rt1 WHERE ((rt1.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, rt0 NATURAL JOIN rt1);
SELECT * FROM vt0, v0, rt0 NATURAL JOIN rt1 WHERE ((rt1.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, rt0 NATURAL JOIN rt1);
SELECT * FROM vt0, v0, rt0 NATURAL JOIN rt1 WHERE ((rt1.c0 IN ()) COLLATE NOCASE);
SELECT ALL * FROM rt1, v0, rt0, t0, vt0 WHERE (-1467531155);
SELECT SUM(count) FROM (SELECT ((-1467531155) IS TRUE)  as count FROM rt1, v0, rt0, t0, vt0);
SELECT ALL * FROM rt1, v0, rt0, t0, vt0 WHERE (-1467531155);
SELECT SUM(count) FROM (SELECT ((-1467531155) IS TRUE)  as count FROM rt1, v0, rt0, t0, vt0);
SELECT ALL * FROM rt1, v0, rt0, t0, vt0 WHERE (-1467531155);
SELECT ALL * FROM t0, v0, rt1 WHERE (t0.c43);
SELECT SUM(count) FROM (SELECT ALL ((t0.c43) IS TRUE)  as count FROM t0, v0, rt1);
SELECT ALL * FROM t0, v0, rt1 WHERE (t0.c43);
SELECT SUM(count) FROM (SELECT ALL ((t0.c43) IS TRUE)  as count FROM t0, v0, rt1);
SELECT ALL * FROM t0, v0, rt1 WHERE (t0.c43);
SELECT * FROM v0, rt1 CROSS JOIN t0 ON CASE WHEN ((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((((((((rt1.c0)OR(t0.c1)))OR(rt1.c0)))OR(t0.c1)))OR(rt1.c2)) END CROSS JOIN rt0 ON UNLIKELY(DISTINCT (~ (t0.c0))) WHERE (CASE WHEN t0.c1 THEN rt1.c1 ELSE (NOT (rt1.c0)) END) ORDER BY CHAR(COALESCE(rt0.c1, rt1.c1, t0.c43, rt0.c2)) ASC  NULLS LAST, HEX(((rt1.c0)<=(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c1 THEN rt1.c1 ELSE (NOT (rt1.c0)) END) IS TRUE)  as count FROM v0, rt1 CROSS JOIN t0 ON CASE WHEN ((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((((((((rt1.c0)OR(t0.c1)))OR(rt1.c0)))OR(t0.c1)))OR(rt1.c2)) END CROSS JOIN rt0 ON UNLIKELY(DISTINCT (~ (t0.c0))) ORDER BY CHAR(COALESCE(rt0.c1, rt1.c1, t0.c43, rt0.c2)) ASC  NULLS LAST, HEX(((rt1.c0)<=(rt0.c0))));
SELECT * FROM v0, rt1 CROSS JOIN t0 ON CASE WHEN ((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((((((((rt1.c0)OR(t0.c1)))OR(rt1.c0)))OR(t0.c1)))OR(rt1.c2)) END CROSS JOIN rt0 ON UNLIKELY(DISTINCT (~ (t0.c0))) WHERE (CASE WHEN t0.c1 THEN rt1.c1 ELSE (NOT (rt1.c0)) END) ORDER BY CHAR(COALESCE(rt0.c1, rt1.c1, t0.c43, rt0.c2)) ASC  NULLS LAST, HEX(((rt1.c0)<=(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c1 THEN rt1.c1 ELSE (NOT (rt1.c0)) END) IS TRUE)  as count FROM v0, rt1 CROSS JOIN t0 ON CASE WHEN ((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((((((((rt1.c0)OR(t0.c1)))OR(rt1.c0)))OR(t0.c1)))OR(rt1.c2)) END CROSS JOIN rt0 ON UNLIKELY(DISTINCT (~ (t0.c0))) ORDER BY CHAR(COALESCE(rt0.c1, rt1.c1, t0.c43, rt0.c2)) ASC  NULLS LAST, HEX(((rt1.c0)<=(rt0.c0))));
SELECT * FROM v0, rt1 CROSS JOIN t0 ON CASE WHEN ((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((((((((rt1.c0)OR(t0.c1)))OR(rt1.c0)))OR(t0.c1)))OR(rt1.c2)) END CROSS JOIN rt0 ON UNLIKELY(DISTINCT (~ (t0.c0))) WHERE (CASE WHEN t0.c1 THEN rt1.c1 ELSE (NOT (rt1.c0)) END) ORDER BY CHAR(COALESCE(rt0.c1, rt1.c1, t0.c43, rt0.c2)) ASC  NULLS LAST, HEX(((rt1.c0)<=(rt0.c0)));
SELECT ALL * FROM vt0, t0 NOT INDEXED, v0 WHERE (((v0.c0) IS FALSE) COLLATE BINARY) ORDER BY ((((t0.c1)OR(vt0.c0)))AND(NULL)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((t0.c1)OR(vt0.c0)))AND(NULL)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 NOT INDEXED, v0 WHERE (((v0.c0) IS FALSE) COLLATE BINARY) ORDER BY ((((t0.c1)OR(vt0.c0)))AND(NULL)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((t0.c1)OR(vt0.c0)))AND(NULL)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 NOT INDEXED, v0 WHERE (((v0.c0) IS FALSE) COLLATE BINARY) ORDER BY ((((t0.c1)OR(vt0.c0)))AND(NULL)) COLLATE RTRIM DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, v0 FULL OUTER JOIN rt0 ON ((((((((((((((((rt1.c1)AND(t0.c43)))AND(rt1.c1)))OR(0.9540316421828231)))AND(vt0.c0)))AND(CAST(vt0.c0 AS REAL))))OR(((rt0.c2)|(rt1.c2)))))AND(TYPEOF(DISTINCT t0.c0))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) INNER JOIN rt1 ON (UNLIKELY(DISTINCT rt1.c0) IN ()) WHERE (LOWER(rt0.c2) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LOWER(rt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, v0 FULL OUTER JOIN rt0 ON ((((((((((((((((rt1.c1)AND(t0.c43)))AND(rt1.c1)))OR(0.9540316421828231)))AND(vt0.c0)))AND(CAST(vt0.c0 AS REAL))))OR(((rt0.c2)|(rt1.c2)))))AND(TYPEOF(DISTINCT t0.c0))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) INNER JOIN rt1 ON (UNLIKELY(DISTINCT rt1.c0) IN ()));
SELECT COUNT(*) FROM vt0, t0, v0 FULL OUTER JOIN rt0 ON ((((((((((((((((rt1.c1)AND(t0.c43)))AND(rt1.c1)))OR(0.9540316421828231)))AND(vt0.c0)))AND(CAST(vt0.c0 AS REAL))))OR(((rt0.c2)|(rt1.c2)))))AND(TYPEOF(DISTINCT t0.c0))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) INNER JOIN rt1 ON (UNLIKELY(DISTINCT rt1.c0) IN ()) WHERE (LOWER(rt0.c2) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LOWER(rt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, v0 FULL OUTER JOIN rt0 ON ((((((((((((((((rt1.c1)AND(t0.c43)))AND(rt1.c1)))OR(0.9540316421828231)))AND(vt0.c0)))AND(CAST(vt0.c0 AS REAL))))OR(((rt0.c2)|(rt1.c2)))))AND(TYPEOF(DISTINCT t0.c0))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) INNER JOIN rt1 ON (UNLIKELY(DISTINCT rt1.c0) IN ()));
SELECT COUNT(*) FROM vt0, t0, v0 FULL OUTER JOIN rt0 ON ((((((((((((((((rt1.c1)AND(t0.c43)))AND(rt1.c1)))OR(0.9540316421828231)))AND(vt0.c0)))AND(CAST(vt0.c0 AS REAL))))OR(((rt0.c2)|(rt1.c2)))))AND(TYPEOF(DISTINCT t0.c0))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) INNER JOIN rt1 ON (UNLIKELY(DISTINCT rt1.c0) IN ()) WHERE (LOWER(rt0.c2) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, rt1 WHERE (TRIM(ABS(vt0.c0), ((rt1.c0) BETWEEN (rt0.c3) AND ('627192431')))) ORDER BY x'0a2d' COLLATE BINARY DESC, ((CAST(rt0.c1 AS NUMERIC))=(((rt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(ABS(vt0.c0), ((rt1.c0) BETWEEN (rt0.c3) AND ('627192431')))) IS TRUE)  as count FROM rt0, t0, vt0, rt1 ORDER BY x'0a2d' COLLATE BINARY DESC, ((CAST(rt0.c1 AS NUMERIC))==(((rt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0, rt1 WHERE (TRIM(ABS(vt0.c0), ((rt1.c0) BETWEEN (rt0.c3) AND ('627192431')))) ORDER BY x'0a2d' COLLATE BINARY DESC, ((CAST(rt0.c1 AS NUMERIC))=(((rt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(ABS(vt0.c0), ((rt1.c0) BETWEEN (rt0.c3) AND ('627192431')))) IS TRUE)  as count FROM rt0, t0, vt0, rt1 ORDER BY x'0a2d' COLLATE BINARY DESC, ((CAST(rt0.c1 AS NUMERIC))==(((rt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0, rt1 WHERE (TRIM(ABS(vt0.c0), ((rt1.c0) BETWEEN (rt0.c3) AND ('627192431')))) ORDER BY x'0a2d' COLLATE BINARY DESC, ((CAST(rt0.c1 AS NUMERIC))=(((rt1.c0) NOTNULL)));
SELECT * FROM v0, rt1 FULL OUTER JOIN vt0 ON (((json_array_length('4slh'), rt1.c2 COLLATE NOCASE, (rt0.c3 IN ())))!=((CAST(rt0.c0 AS TEXT), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt0.c3)), (vt0.c0 IN ())))) FULL OUTER JOIN rt0 ON NULL WHERE (((CASE rt0.c3  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c3 END) BETWEEN ((((rt0.c2, vt0.c0, rt1.c1))==((vt0.c0, rt0.c2, rt0.c3)))) AND (CASE rt0.c0  WHEN rt0.c1 THEN x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c3 END) BETWEEN ((((rt0.c2, vt0.c0, rt1.c1))=((vt0.c0, rt0.c2, rt0.c3)))) AND (CASE rt0.c0  WHEN rt0.c1 THEN x'' END))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN vt0 ON (((json_array_length('4slh'), rt1.c2 COLLATE NOCASE, (rt0.c3 IN ())))!=((CAST(rt0.c0 AS TEXT), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt0.c3)), (vt0.c0 IN ())))) FULL OUTER JOIN rt0 ON NULL);
SELECT * FROM v0, rt1 FULL OUTER JOIN vt0 ON (((json_array_length('4slh'), rt1.c2 COLLATE NOCASE, (rt0.c3 IN ())))!=((CAST(rt0.c0 AS TEXT), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt0.c3)), (vt0.c0 IN ())))) FULL OUTER JOIN rt0 ON NULL WHERE (((CASE rt0.c3  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c3 END) BETWEEN ((((rt0.c2, vt0.c0, rt1.c1))==((vt0.c0, rt0.c2, rt0.c3)))) AND (CASE rt0.c0  WHEN rt0.c1 THEN x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c3 END) BETWEEN ((((rt0.c2, vt0.c0, rt1.c1))=((vt0.c0, rt0.c2, rt0.c3)))) AND (CASE rt0.c0  WHEN rt0.c1 THEN x'' END))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN vt0 ON (((json_array_length('4slh'), rt1.c2 COLLATE NOCASE, (rt0.c3 IN ())))!=((CAST(rt0.c0 AS TEXT), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt0.c3)), (vt0.c0 IN ())))) FULL OUTER JOIN rt0 ON NULL);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE ((rt1.c0 IN (rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, v0, t0);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE ((rt1.c0 IN (rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, v0, t0);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE ((rt1.c0 IN (rt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN rt1 ON (((t0.c0 IN (t0.c1)))LIKE((((NULL))>=((rt1.c0))))) FULL OUTER JOIN v0 ON LAST_INSERT_ROWID() COLLATE NOCASE CROSS JOIN t0 ON ((((rt0.c2)OR(rt0.c2)))OR(rt1.c1)) COLLATE NOCASE COLLATE RTRIM WHERE (vt0.c0) ORDER BY CASE WHEN rt0.c3 THEN rt1.c2 WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN rt1.c0 ELSE vt0.c0 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt1 ON (((t0.c0 IN (t0.c1)))LIKE((((NULL))>=((rt1.c0))))) FULL OUTER JOIN v0 ON LAST_INSERT_ROWID() COLLATE NOCASE CROSS JOIN t0 ON ((((rt0.c2)OR(rt0.c2)))OR(rt1.c1)) COLLATE NOCASE COLLATE RTRIM ORDER BY CASE WHEN rt0.c3 THEN rt1.c2 WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN rt1.c0 ELSE vt0.c0 END COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN rt1 ON (((t0.c0 IN (t0.c1)))LIKE((((NULL))>=((rt1.c0))))) FULL OUTER JOIN v0 ON LAST_INSERT_ROWID() COLLATE NOCASE CROSS JOIN t0 ON ((((rt0.c2)OR(rt0.c2)))OR(rt1.c1)) COLLATE NOCASE COLLATE RTRIM WHERE (vt0.c0) ORDER BY CASE WHEN rt0.c3 THEN rt1.c2 WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN rt1.c0 ELSE vt0.c0 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt1 ON (((t0.c0 IN (t0.c1)))LIKE((((NULL))>=((rt1.c0))))) FULL OUTER JOIN v0 ON LAST_INSERT_ROWID() COLLATE NOCASE CROSS JOIN t0 ON ((((rt0.c2)OR(rt0.c2)))OR(rt1.c1)) COLLATE NOCASE COLLATE RTRIM ORDER BY CASE WHEN rt0.c3 THEN rt1.c2 WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN rt1.c0 ELSE vt0.c0 END COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c0)<<(rt1.c2)) COLLATE NOCASE) ORDER BY ((+ (0.35944222960151073)) IN ()) DESC, ((NULLIF(DISTINCT rt1.c0, rt1.c2)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)<<(rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY ((+ (0.35944222960151073)) IN ()) DESC, ((NULLIF(DISTINCT rt1.c0, rt1.c2)) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c0)<<(rt1.c2)) COLLATE NOCASE) ORDER BY ((+ (0.35944222960151073)) IN ()) DESC, ((NULLIF(DISTINCT rt1.c0, rt1.c2)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)<<(rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY ((+ (0.35944222960151073)) IN ()) DESC, ((NULLIF(DISTINCT rt1.c0, rt1.c2)) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c0)<<(rt1.c2)) COLLATE NOCASE) ORDER BY ((+ (0.35944222960151073)) IN ()) DESC, ((NULLIF(DISTINCT rt1.c0, rt1.c2)) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c1) ORDER BY 0.7270081622299629, 'F*~3⮕3+鳐5'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.7270081622299629, 'F*~3⮕3+鳐5'  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c1) ORDER BY 0.7270081622299629, 'F*~3⮕3+鳐5'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.7270081622299629, 'F*~3⮕3+鳐5'  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c1) ORDER BY 0.7270081622299629, 'F*~3⮕3+鳐5'  NULLS LAST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0)IS NOT(rt1.c2))) NOTNULL) RIGHT OUTER JOIN rt1 ON ((((rt0.c1)>>(rt0.c2))) BETWEEN ('-1765528683') AND (ABS(rt0.c2))) WHERE (rt1.c2) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0)IS NOT(rt1.c2))) NOTNULL) RIGHT OUTER JOIN rt1 ON ((((rt0.c1)>>(rt0.c2))) BETWEEN ('-1765528683') AND (ABS(rt0.c2))) ORDER BY x'' ASC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0)IS NOT(rt1.c2))) NOTNULL) RIGHT OUTER JOIN rt1 ON ((((rt0.c1)>>(rt0.c2))) BETWEEN ('-1765528683') AND (ABS(rt0.c2))) WHERE (rt1.c2) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0)IS NOT(rt1.c2))) NOTNULL) RIGHT OUTER JOIN rt1 ON ((((rt0.c1)>>(rt0.c2))) BETWEEN ('-1765528683') AND (ABS(rt0.c2))) ORDER BY x'' ASC);
SELECT ALL * FROM v0, rt1, vt0 WHERE (CASE ((v0.c0) IS FALSE)  WHEN CAST(rt1.c2 AS BLOB) THEN x'92f9' ELSE COALESCE(rt1.c1, rt1.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) IS FALSE)  WHEN CAST(rt1.c2 AS BLOB) THEN x'92f9' ELSE COALESCE(rt1.c1, rt1.c2) END) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT ALL * FROM v0, rt1, vt0 WHERE (CASE ((v0.c0) IS FALSE)  WHEN CAST(rt1.c2 AS BLOB) THEN x'92f9' ELSE COALESCE(rt1.c1, rt1.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) IS FALSE)  WHEN CAST(rt1.c2 AS BLOB) THEN x'92f9' ELSE COALESCE(rt1.c1, rt1.c2) END) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT ALL * FROM v0, rt1, vt0 WHERE (CASE ((v0.c0) IS FALSE)  WHEN CAST(rt1.c2 AS BLOB) THEN x'92f9' ELSE COALESCE(rt1.c1, rt1.c2) END);
SELECT COUNT(*) FROM vt0, rt0, t0, v0, rt1 WHERE ((- (NULL))) ORDER BY CASE WHEN (((t0.c43)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN rt0.c2 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM vt0, rt0, t0, v0, rt1 ORDER BY CASE WHEN (((t0.c43)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN rt0.c2 END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, t0, v0, rt1 WHERE ((- (NULL))) ORDER BY CASE WHEN (((t0.c43)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN rt0.c2 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM vt0, rt0, t0, v0, rt1 ORDER BY CASE WHEN (((t0.c43)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN rt0.c2 END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, t0, v0, rt1 WHERE ((- (NULL))) ORDER BY CASE WHEN (((t0.c43)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN rt0.c2 END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((('!M'))>((COALESCE(rt1.c0, rt1.c1))))) ORDER BY ((((CAST(rt1.c1 AS NUMERIC))AND(((x'')>(0.060790846942104904)))))OR(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN v0.c0 THEN rt1.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('!M'))>((COALESCE(rt1.c0, rt1.c1))))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((CAST(rt1.c1 AS NUMERIC))AND(((x'')>(0.060790846942104904)))))OR(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN v0.c0 THEN rt1.c2 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((('!M'))>((COALESCE(rt1.c0, rt1.c1))))) ORDER BY ((((CAST(rt1.c1 AS NUMERIC))AND(((x'')>(0.060790846942104904)))))OR(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN v0.c0 THEN rt1.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('!M'))>((COALESCE(rt1.c0, rt1.c1))))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((CAST(rt1.c1 AS NUMERIC))AND(((x'')>(0.060790846942104904)))))OR(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN v0.c0 THEN rt1.c2 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((('!M'))>((COALESCE(rt1.c0, rt1.c1))))) ORDER BY ((((CAST(rt1.c1 AS NUMERIC))AND(((x'')>(0.060790846942104904)))))OR(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN v0.c0 THEN rt1.c2 END))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1, v0 NOT INDEXED, t0, rt0 WHERE ((+ (((6.23874683E8)<=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((6.23874683E8)<=(rt0.c3))))) IS TRUE)  as count FROM vt0, rt1, v0, t0, rt0);
SELECT COUNT(*) FROM vt0, rt1, v0 NOT INDEXED, t0, rt0 WHERE ((+ (((6.23874683E8)<=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((6.23874683E8)<=(rt0.c3))))) IS TRUE)  as count FROM vt0, rt1, v0, t0, rt0);
SELECT COUNT(*) FROM vt0, rt1, v0 NOT INDEXED, t0, rt0 WHERE ((+ (((6.23874683E8)<=(rt0.c3)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt1 ON TRIM(DISTINCT 1465191543) RIGHT OUTER JOIN t0 ON UNLIKELY(NULL) FULL OUTER JOIN vt0 ON ((((v0.c0) BETWEEN (rt1.c1) AND (NULL))) NOTNULL) WHERE ((((rt1.c1)) BETWEEN (((((('[t n,')AND('')))AND(v0.c0)))) AND ((((rt1.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN (((((('[t n,')AND('')))AND(v0.c0)))) AND ((((rt1.c1) ISNULL))))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON TRIM(DISTINCT 1465191543) RIGHT OUTER JOIN t0 ON UNLIKELY(NULL) FULL OUTER JOIN vt0 ON ((((v0.c0) BETWEEN (rt1.c1) AND (NULL))) NOTNULL));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt1 ON TRIM(DISTINCT 1465191543) RIGHT OUTER JOIN t0 ON UNLIKELY(NULL) FULL OUTER JOIN vt0 ON ((((v0.c0) BETWEEN (rt1.c1) AND (NULL))) NOTNULL) WHERE ((((rt1.c1)) BETWEEN (((((('[t n,')AND('')))AND(v0.c0)))) AND ((((rt1.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN (((((('[t n,')AND('')))AND(v0.c0)))) AND ((((rt1.c1) ISNULL))))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON TRIM(DISTINCT 1465191543) RIGHT OUTER JOIN t0 ON UNLIKELY(NULL) FULL OUTER JOIN vt0 ON ((((v0.c0) BETWEEN (rt1.c1) AND (NULL))) NOTNULL));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt1 ON TRIM(DISTINCT 1465191543) RIGHT OUTER JOIN t0 ON UNLIKELY(NULL) FULL OUTER JOIN vt0 ON ((((v0.c0) BETWEEN (rt1.c1) AND (NULL))) NOTNULL) WHERE ((((rt1.c1)) BETWEEN (((((('[t n,')AND('')))AND(v0.c0)))) AND ((((rt1.c1) ISNULL)))));
SELECT * FROM v0, rt0, rt1 WHERE ((((CAST(rt1.c1 AS REAL)))<>(((((rt1.c2))<((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c1 AS REAL)))<>(((((rt1.c2))<((rt0.c1))))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE ((((CAST(rt1.c1 AS REAL)))<>(((((rt1.c2))<((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c1 AS REAL)))<>(((((rt1.c2))<((rt0.c1))))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE ((((CAST(rt1.c1 AS REAL)))<>(((((rt1.c2))<((rt0.c1)))))));
SELECT ALL COUNT(*) FROM v0, t0, rt1, rt0, vt0 WHERE (((((((((((vt0.c0)AND(v0.c0)))OR(rt1.c0)))OR(rt1.c0)))OR(v0.c0)))==((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(v0.c0)))OR(rt1.c0)))OR(rt1.c0)))OR(v0.c0)))=((~ (vt0.c0))))) IS TRUE)  as count FROM v0, t0, rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, rt1, rt0, vt0 WHERE (((((((((((vt0.c0)AND(v0.c0)))OR(rt1.c0)))OR(rt1.c0)))OR(v0.c0)))==((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(v0.c0)))OR(rt1.c0)))OR(rt1.c0)))OR(v0.c0)))=((~ (vt0.c0))))) IS TRUE)  as count FROM v0, t0, rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, rt1, rt0, vt0 WHERE (((((((((((vt0.c0)AND(v0.c0)))OR(rt1.c0)))OR(rt1.c0)))OR(v0.c0)))==((~ (vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (rt1.c1);
SELECT ALL COUNT(*) FROM rt0, rt1, t0, v0, vt0 WHERE ((NOT (((0Xffffffffe5205ddf)|(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0xffffffffe5205ddf)|(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1, t0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0, v0, vt0 WHERE ((NOT (((0Xffffffffe5205ddf)|(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0xffffffffe5205ddf)|(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1, t0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0, v0, vt0 WHERE ((NOT (((0Xffffffffe5205ddf)|(rt0.c1)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (json(rt1.c2));
SELECT SUM(count) FROM (SELECT ALL ((json(rt1.c2)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (json(rt1.c2));
SELECT SUM(count) FROM (SELECT ALL ((json(rt1.c2)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (json(rt1.c2));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, v0, t0 WHERE ((((((t0.c1))<=((rt0.c3))))%(COALESCE(DISTINCT 'N퐔qT', vt0.c0, rt0.c3, t0.c1))));
SELECT SUM(count) FROM (SELECT (((((((t0.c1))<=((rt0.c3))))%(COALESCE(DISTINCT 'N퐔qT', vt0.c0, rt0.c3, t0.c1)))) IS TRUE)  as count FROM rt0, rt1, vt0, v0, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, v0, t0 WHERE ((((((t0.c1))<=((rt0.c3))))%(COALESCE(DISTINCT 'N퐔qT', vt0.c0, rt0.c3, t0.c1))));
SELECT SUM(count) FROM (SELECT (((((((t0.c1))<=((rt0.c3))))%(COALESCE(DISTINCT 'N퐔qT', vt0.c0, rt0.c3, t0.c1)))) IS TRUE)  as count FROM rt0, rt1, vt0, v0, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, v0, t0 WHERE ((((((t0.c1))<=((rt0.c3))))%(COALESCE(DISTINCT 'N퐔qT', vt0.c0, rt0.c3, t0.c1))));
SELECT ALL * FROM rt0, vt0, v0, t0 CROSS JOIN rt1 ON ((LOWER(DISTINCT NULL))|(((rt1.c0)OR(rt0.c3)))) WHERE ((rt0.c2 IN (((rt1.c0)<<(x'57ab'))))) ORDER BY ((CASE rt1.c2  WHEN rt0.c2 THEN t0.c43 ELSE t0.c0 END)%((rt1.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (((rt1.c0)<<(x'57ab'))))) IS TRUE)  as count FROM rt0, vt0, v0, t0 CROSS JOIN rt1 ON ((LOWER(DISTINCT NULL))|(((rt1.c0)OR(rt0.c3)))) ORDER BY ((CASE rt1.c2  WHEN rt0.c2 THEN t0.c43 ELSE t0.c0 END)%((rt1.c2 IN ())))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0, t0 CROSS JOIN rt1 ON ((LOWER(DISTINCT NULL))|(((rt1.c0)OR(rt0.c3)))) WHERE ((rt0.c2 IN (((rt1.c0)<<(x'57ab'))))) ORDER BY ((CASE rt1.c2  WHEN rt0.c2 THEN t0.c43 ELSE t0.c0 END)%((rt1.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (((rt1.c0)<<(x'57ab'))))) IS TRUE)  as count FROM rt0, vt0, v0, t0 CROSS JOIN rt1 ON ((LOWER(DISTINCT NULL))|(((rt1.c0)OR(rt0.c3)))) ORDER BY ((CASE rt1.c2  WHEN rt0.c2 THEN t0.c43 ELSE t0.c0 END)%((rt1.c2 IN ())))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0, t0 CROSS JOIN rt1 ON ((LOWER(DISTINCT NULL))|(((rt1.c0)OR(rt0.c3)))) WHERE ((rt0.c2 IN (((rt1.c0)<<(x'57ab'))))) ORDER BY ((CASE rt1.c2  WHEN rt0.c2 THEN t0.c43 ELSE t0.c0 END)%((rt1.c2 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((TYPEOF(DISTINCT rt1.c0)) BETWEEN (rt1.c1 COLLATE BINARY) AND (((rt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt1.c0)) BETWEEN (rt1.c1 COLLATE BINARY) AND (((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((TYPEOF(DISTINCT rt1.c0)) BETWEEN (rt1.c1 COLLATE BINARY) AND (((rt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt1.c0)) BETWEEN (rt1.c1 COLLATE BINARY) AND (((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((TYPEOF(DISTINCT rt1.c0)) BETWEEN (rt1.c1 COLLATE BINARY) AND (((rt1.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON ((((CASE WHEN v0.c0 THEN rt1.c2 END)OR(LIKELY(DISTINCT v0.c0))))OR((- (rt1.c2)))) WHERE (((CAST(rt1.c0 AS BLOB))|((rt1.c2 IN ())))) ORDER BY ((((((((((((((((v0.c0)AND(rt1.c2)))AND(v0.c0)))AND(v0.c0 COLLATE NOCASE)))AND(rt1.c0 COLLATE BINARY)))OR(((rt1.c1)*('550692052')))))OR(CASE rt1.c1  WHEN rt1.c2 THEN v0.c0 END)))OR(((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c0)))))OR(((rt1.c1)>(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS BLOB))|((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((CASE WHEN v0.c0 THEN rt1.c2 END)OR(LIKELY(DISTINCT v0.c0))))OR((- (rt1.c2)))) ORDER BY ((((((((((((((((v0.c0)AND(rt1.c2)))AND(v0.c0)))AND(v0.c0 COLLATE NOCASE)))AND(rt1.c0 COLLATE BINARY)))OR(((rt1.c1)*('550692052')))))OR(CASE rt1.c1  WHEN rt1.c2 THEN v0.c0 END)))OR(((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c0)))))OR(((rt1.c1)>(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON ((((CASE WHEN v0.c0 THEN rt1.c2 END)OR(LIKELY(DISTINCT v0.c0))))OR((- (rt1.c2)))) WHERE (((CAST(rt1.c0 AS BLOB))|((rt1.c2 IN ())))) ORDER BY ((((((((((((((((v0.c0)AND(rt1.c2)))AND(v0.c0)))AND(v0.c0 COLLATE NOCASE)))AND(rt1.c0 COLLATE BINARY)))OR(((rt1.c1)*('550692052')))))OR(CASE rt1.c1  WHEN rt1.c2 THEN v0.c0 END)))OR(((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c0)))))OR(((rt1.c1)>(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS BLOB))|((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((CASE WHEN v0.c0 THEN rt1.c2 END)OR(LIKELY(DISTINCT v0.c0))))OR((- (rt1.c2)))) ORDER BY ((((((((((((((((v0.c0)AND(rt1.c2)))AND(v0.c0)))AND(v0.c0 COLLATE NOCASE)))AND(rt1.c0 COLLATE BINARY)))OR(((rt1.c1)*('550692052')))))OR(CASE rt1.c1  WHEN rt1.c2 THEN v0.c0 END)))OR(((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c0)))))OR(((rt1.c1)>(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON ((((CASE WHEN v0.c0 THEN rt1.c2 END)OR(LIKELY(DISTINCT v0.c0))))OR((- (rt1.c2)))) WHERE (((CAST(rt1.c0 AS BLOB))|((rt1.c2 IN ())))) ORDER BY ((((((((((((((((v0.c0)AND(rt1.c2)))AND(v0.c0)))AND(v0.c0 COLLATE NOCASE)))AND(rt1.c0 COLLATE BINARY)))OR(((rt1.c1)*('550692052')))))OR(CASE rt1.c1  WHEN rt1.c2 THEN v0.c0 END)))OR(((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c0)))))OR(((rt1.c1)>(v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON v0.c0 FULL OUTER JOIN rt1 ON NULL LEFT OUTER JOIN rt0 ON 'rH5A' COLLATE BINARY LEFT OUTER JOIN t0 ON (((~ (rt1.c2)))*(load_extension(t0.c43, rt0.c3))) WHERE ((- ((((t0.c1))<((rt1.c1)))))) ORDER BY CAST(rt0.c2 COLLATE BINARY AS TEXT);
SELECT SUM(count) FROM (SELECT (((- ((((t0.c1))<((rt1.c1)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON v0.c0 FULL OUTER JOIN rt1 ON NULL LEFT OUTER JOIN rt0 ON 'rH5A' COLLATE BINARY LEFT OUTER JOIN t0 ON (((~ (rt1.c2)))*(load_extension(t0.c43, rt0.c3))) ORDER BY CAST(rt0.c2 COLLATE BINARY AS TEXT));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON v0.c0 FULL OUTER JOIN rt1 ON NULL LEFT OUTER JOIN rt0 ON 'rH5A' COLLATE BINARY LEFT OUTER JOIN t0 ON (((~ (rt1.c2)))*(load_extension(t0.c43, rt0.c3))) WHERE ((- ((((t0.c1))<((rt1.c1)))))) ORDER BY CAST(rt0.c2 COLLATE BINARY AS TEXT);
SELECT SUM(count) FROM (SELECT (((- ((((t0.c1))<((rt1.c1)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON v0.c0 FULL OUTER JOIN rt1 ON NULL LEFT OUTER JOIN rt0 ON 'rH5A' COLLATE BINARY LEFT OUTER JOIN t0 ON (((~ (rt1.c2)))*(load_extension(t0.c43, rt0.c3))) ORDER BY CAST(rt0.c2 COLLATE BINARY AS TEXT));
SELECT ALL * FROM t0, v0, rt1, rt0 WHERE (CAST(((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0, v0, rt1, rt0);
SELECT ALL * FROM t0, v0, rt1, rt0 WHERE (CAST(((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0, v0, rt1, rt0);
SELECT ALL * FROM t0, v0, rt1, rt0 WHERE (CAST(((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS NUMERIC));
SELECT ALL * FROM rt1 NATURAL JOIN v0 WHERE (((CAST(rt1.c1 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM rt1 NATURAL JOIN v0);
SELECT ALL * FROM rt1 NATURAL JOIN v0 WHERE (((CAST(rt1.c1 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM rt1 NATURAL JOIN v0);
SELECT ALL * FROM rt1 NATURAL JOIN v0 WHERE (((CAST(rt1.c1 AS BLOB)) NOT NULL));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c43 COLLATE BINARY) BETWEEN (t0.c43) AND (((t0.c43)>=(t0.c43)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c43 COLLATE BINARY) BETWEEN (t0.c43) AND (((t0.c43)>=(t0.c43))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c43 COLLATE BINARY) BETWEEN (t0.c43) AND (((t0.c43)>=(t0.c43)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c43 COLLATE BINARY) BETWEEN (t0.c43) AND (((t0.c43)>=(t0.c43))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c43 COLLATE BINARY) BETWEEN (t0.c43) AND (((t0.c43)>=(t0.c43)))));
SELECT COUNT(*) FROM rt1, t0 CROSS JOIN vt0 ON (~ (((rt1.c2)!=(rt1.c1)))) FULL OUTER JOIN v0 ON ((CAST(0.2306867398426523 AS BLOB))/(CASE WHEN rt1.c2 THEN rt1.c0 WHEN -5.89936402E8 THEN rt0.c3 WHEN v0.c0 THEN rt1.c0 ELSE rt0.c2 END)) FULL OUTER JOIN rt0 ON ((((t0.c1) NOTNULL))=(CASE WHEN 0Xffffffffa4924f2e THEN rt0.c2 ELSE rt1.c2 END)) WHERE (((((((rt0.c2)AND(t0.c1)))AND(t0.c1)))GLOB(rt0.c1))) ORDER BY CAST(highlight(t0.c43, rt0.c2, rt0.c2, rt0.c1) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(t0.c1)))AND(t0.c1)))GLOB(rt0.c1))) IS TRUE)  as count FROM rt1, t0 CROSS JOIN vt0 ON (~ (((rt1.c2)!=(rt1.c1)))) FULL OUTER JOIN v0 ON ((CAST(0.2306867398426523 AS BLOB))/(CASE WHEN rt1.c2 THEN rt1.c0 WHEN -5.89936402E8 THEN rt0.c3 WHEN v0.c0 THEN rt1.c0 ELSE rt0.c2 END)) FULL OUTER JOIN rt0 ON ((((t0.c1) NOTNULL))==(CASE WHEN 0Xffffffffa4924f2e THEN rt0.c2 ELSE rt1.c2 END)) ORDER BY CAST(highlight(t0.c43, rt0.c2, rt0.c2, rt0.c1) AS BLOB) DESC);
SELECT COUNT(*) FROM rt1, t0 CROSS JOIN vt0 ON (~ (((rt1.c2)!=(rt1.c1)))) FULL OUTER JOIN v0 ON ((CAST(0.2306867398426523 AS BLOB))/(CASE WHEN rt1.c2 THEN rt1.c0 WHEN -5.89936402E8 THEN rt0.c3 WHEN v0.c0 THEN rt1.c0 ELSE rt0.c2 END)) FULL OUTER JOIN rt0 ON ((((t0.c1) NOTNULL))=(CASE WHEN 0Xffffffffa4924f2e THEN rt0.c2 ELSE rt1.c2 END)) WHERE (((((((rt0.c2)AND(t0.c1)))AND(t0.c1)))GLOB(rt0.c1))) ORDER BY CAST(highlight(t0.c43, rt0.c2, rt0.c2, rt0.c1) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(t0.c1)))AND(t0.c1)))GLOB(rt0.c1))) IS TRUE)  as count FROM rt1, t0 CROSS JOIN vt0 ON (~ (((rt1.c2)!=(rt1.c1)))) FULL OUTER JOIN v0 ON ((CAST(0.2306867398426523 AS BLOB))/(CASE WHEN rt1.c2 THEN rt1.c0 WHEN -5.89936402E8 THEN rt0.c3 WHEN v0.c0 THEN rt1.c0 ELSE rt0.c2 END)) FULL OUTER JOIN rt0 ON ((((t0.c1) NOTNULL))==(CASE WHEN 0Xffffffffa4924f2e THEN rt0.c2 ELSE rt1.c2 END)) ORDER BY CAST(highlight(t0.c43, rt0.c2, rt0.c2, rt0.c1) AS BLOB) DESC);
SELECT ALL * FROM t0, rt1, v0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN v0.c0 THEN t0.c43 END AS NUMERIC) WHERE (TYPEOF(DISTINCT (((('0.805980637774004')AND(t0.c1)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (((('0.805980637774004')AND(t0.c1)))AND(rt1.c1)))) IS TRUE)  as count FROM t0, rt1, v0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN v0.c0 THEN t0.c43 END AS NUMERIC));
SELECT ALL * FROM t0, rt1, v0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN v0.c0 THEN t0.c43 END AS NUMERIC) WHERE (TYPEOF(DISTINCT (((('0.805980637774004')AND(t0.c1)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (((('0.805980637774004')AND(t0.c1)))AND(rt1.c1)))) IS TRUE)  as count FROM t0, rt1, v0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN v0.c0 THEN t0.c43 END AS NUMERIC));
SELECT ALL * FROM t0, rt1, v0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN v0.c0 THEN t0.c43 END AS NUMERIC) WHERE (TYPEOF(DISTINCT (((('0.805980637774004')AND(t0.c1)))AND(rt1.c1))));
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (rt0.c0) ORDER BY ((((((t0.c43) ISNULL))AND(NULL)))AND(CAST(rt0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY ((((((t0.c43) ISNULL))AND(NULL)))AND(CAST(rt0.c0 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (rt0.c0) ORDER BY ((((((t0.c43) ISNULL))AND(NULL)))AND(CAST(rt0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY ((((((t0.c43) ISNULL))AND(NULL)))AND(CAST(rt0.c0 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (rt0.c0) ORDER BY ((((((t0.c43) ISNULL))AND(NULL)))AND(CAST(rt0.c0 AS BLOB))) ASC;
SELECT * FROM rt0, vt0, rt1, v0, t0 WHERE (((vt0.c0) NOT NULL)) ORDER BY ((((rt0.c3)||(rt0.c1))) BETWEEN (((rt0.c0)*(rt0.c2))) AND (((((((((x'')OR(t0.c1)))OR(t0.c1)))AND(t0.c1)))AND(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, rt1, v0, t0 ORDER BY ((((rt0.c3)||(rt0.c1))) BETWEEN (((rt0.c0)*(rt0.c2))) AND (((((((((x'')OR(t0.c1)))OR(t0.c1)))AND(t0.c1)))AND(rt1.c2))))  NULLS FIRST);
SELECT * FROM rt0, vt0, rt1, v0, t0 WHERE (((vt0.c0) NOT NULL)) ORDER BY ((((rt0.c3)||(rt0.c1))) BETWEEN (((rt0.c0)*(rt0.c2))) AND (((((((((x'')OR(t0.c1)))OR(t0.c1)))AND(t0.c1)))AND(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, rt1, v0, t0 ORDER BY ((((rt0.c3)||(rt0.c1))) BETWEEN (((rt0.c0)*(rt0.c2))) AND (((((((((x'')OR(t0.c1)))OR(t0.c1)))AND(t0.c1)))AND(rt1.c2))))  NULLS FIRST);
SELECT * FROM rt0, vt0, rt1, v0, t0 WHERE (((vt0.c0) NOT NULL)) ORDER BY ((((rt0.c3)||(rt0.c1))) BETWEEN (((rt0.c0)*(rt0.c2))) AND (((((((((x'')OR(t0.c1)))OR(t0.c1)))AND(t0.c1)))AND(rt1.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt1 WHERE (CASE WHEN CASE v0.c0  WHEN x'' THEN rt1.c1 END THEN CAST(rt1.c1 AS REAL) END) ORDER BY ((v0.c0 IN ()) IN ()), ((CAST(rt1.c2 AS NUMERIC))=(((rt1.c1) IS TRUE)))  NULLS FIRST, ((((((rt1.c1) IS TRUE))OR('' COLLATE BINARY)))OR((((rt1.c1, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c0, v0.c0)) AND ((rt1.c2, rt1.c2, v0.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE v0.c0  WHEN x'' THEN rt1.c1 END THEN CAST(rt1.c1 AS REAL) END) IS TRUE)  as count FROM v0, rt1 ORDER BY ((v0.c0 IN ()) IN ()), ((CAST(rt1.c2 AS NUMERIC))==(((rt1.c1) IS TRUE)))  NULLS FIRST, ((((((rt1.c1) IS TRUE))OR('' COLLATE BINARY)))OR((((rt1.c1, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c0, v0.c0)) AND ((rt1.c2, rt1.c2, v0.c0))))));
SELECT COUNT(*) FROM v0, rt1 WHERE (CASE WHEN CASE v0.c0  WHEN x'' THEN rt1.c1 END THEN CAST(rt1.c1 AS REAL) END) ORDER BY ((v0.c0 IN ()) IN ()), ((CAST(rt1.c2 AS NUMERIC))=(((rt1.c1) IS TRUE)))  NULLS FIRST, ((((((rt1.c1) IS TRUE))OR('' COLLATE BINARY)))OR((((rt1.c1, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c0, v0.c0)) AND ((rt1.c2, rt1.c2, v0.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE v0.c0  WHEN x'' THEN rt1.c1 END THEN CAST(rt1.c1 AS REAL) END) IS TRUE)  as count FROM v0, rt1 ORDER BY ((v0.c0 IN ()) IN ()), ((CAST(rt1.c2 AS NUMERIC))==(((rt1.c1) IS TRUE)))  NULLS FIRST, ((((((rt1.c1) IS TRUE))OR('' COLLATE BINARY)))OR((((rt1.c1, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c0, v0.c0)) AND ((rt1.c2, rt1.c2, v0.c0))))));
SELECT COUNT(*) FROM v0, rt1 WHERE (CASE WHEN CASE v0.c0  WHEN x'' THEN rt1.c1 END THEN CAST(rt1.c1 AS REAL) END) ORDER BY ((v0.c0 IN ()) IN ()), ((CAST(rt1.c2 AS NUMERIC))=(((rt1.c1) IS TRUE)))  NULLS FIRST, ((((((rt1.c1) IS TRUE))OR('' COLLATE BINARY)))OR((((rt1.c1, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c0, v0.c0)) AND ((rt1.c2, rt1.c2, v0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((+ (rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((+ (rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((+ (rt0.c3 COLLATE NOCASE)));
SELECT * FROM v0, rt0 WHERE (((((rt0.c3)>(rt0.c1))) NOT BETWEEN (NULL) AND (((v0.c0) NOT NULL)))) ORDER BY ((((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))IS(((rt0.c0)AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)>(rt0.c1))) NOT BETWEEN (NULL) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))IS(((rt0.c0)AND(rt0.c2)))));
SELECT * FROM v0, rt0 WHERE (((((rt0.c3)>(rt0.c1))) NOT BETWEEN (NULL) AND (((v0.c0) NOT NULL)))) ORDER BY ((((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))IS(((rt0.c0)AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)>(rt0.c1))) NOT BETWEEN (NULL) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))IS(((rt0.c0)AND(rt0.c2)))));
SELECT * FROM v0, rt0 WHERE (((((rt0.c3)>(rt0.c1))) NOT BETWEEN (NULL) AND (((v0.c0) NOT NULL)))) ORDER BY ((((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))IS(((rt0.c0)AND(rt0.c2))));
SELECT ALL COUNT(*) FROM rt1, rt0, v0 NOT INDEXED, t0 WHERE ((((((((((NOT (0.00468346626596261)))OR(((rt0.c3) BETWEEN (rt0.c3) AND (t0.c1)))))OR(((NULL)/(rt0.c2)))))OR(((rt0.c3) ISNULL))))OR(CASE t0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN t0.c0 WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c3 END))) ORDER BY ((((rt1.c1) NOTNULL))OR(UNLIKELY(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (0.00468346626596261)))OR(((rt0.c3) BETWEEN (rt0.c3) AND (t0.c1)))))OR(((NULL)/(rt0.c2)))))OR(((rt0.c3) ISNULL))))OR(CASE t0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN t0.c0 WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt1, rt0, v0, t0 ORDER BY ((((rt1.c1) NOTNULL))OR(UNLIKELY(DISTINCT t0.c0))));
SELECT ALL COUNT(*) FROM rt1, rt0, v0 NOT INDEXED, t0 WHERE ((((((((((NOT (0.00468346626596261)))OR(((rt0.c3) BETWEEN (rt0.c3) AND (t0.c1)))))OR(((NULL)/(rt0.c2)))))OR(((rt0.c3) ISNULL))))OR(CASE t0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN t0.c0 WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c3 END))) ORDER BY ((((rt1.c1) NOTNULL))OR(UNLIKELY(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (0.00468346626596261)))OR(((rt0.c3) BETWEEN (rt0.c3) AND (t0.c1)))))OR(((NULL)/(rt0.c2)))))OR(((rt0.c3) ISNULL))))OR(CASE t0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN t0.c0 WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt1, rt0, v0, t0 ORDER BY ((((rt1.c1) NOTNULL))OR(UNLIKELY(DISTINCT t0.c0))));
SELECT ALL COUNT(*) FROM rt1, rt0, v0 NOT INDEXED, t0 WHERE ((((((((((NOT (0.00468346626596261)))OR(((rt0.c3) BETWEEN (rt0.c3) AND (t0.c1)))))OR(((NULL)/(rt0.c2)))))OR(((rt0.c3) ISNULL))))OR(CASE t0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN t0.c0 WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c3 END))) ORDER BY ((((rt1.c1) NOTNULL))OR(UNLIKELY(DISTINCT t0.c0)));
SELECT ALL * FROM t0 WHERE ((rtreenode(t0.c43, t0.c43) IN ()));
SELECT SUM(count) FROM (SELECT (((rtreenode(t0.c43, t0.c43) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((rtreenode(t0.c43, t0.c43) IN ()));
SELECT SUM(count) FROM (SELECT (((rtreenode(t0.c43, t0.c43) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((rtreenode(t0.c43, t0.c43) IN ()));
SELECT ALL * FROM rt1, v0, vt0, rt0, t0 WHERE (((t0.c43 COLLATE RTRIM) NOTNULL)) ORDER BY ((((~ (rt0.c2))))>(((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c43 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt1, v0, vt0, rt0, t0 ORDER BY ((((~ (rt0.c2))))>(((rt1.c0 IN ())))));
SELECT ALL * FROM rt1, v0, vt0, rt0, t0 WHERE (((t0.c43 COLLATE RTRIM) NOTNULL)) ORDER BY ((((~ (rt0.c2))))>(((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c43 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt1, v0, vt0, rt0, t0 ORDER BY ((((~ (rt0.c2))))>(((rt1.c0 IN ())))));
SELECT ALL * FROM rt1, v0, vt0, rt0, t0 WHERE (((t0.c43 COLLATE RTRIM) NOTNULL)) ORDER BY ((((~ (rt0.c2))))>(((rt1.c0 IN ()))));
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0)))LIKE((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0)))LIKE((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0)))LIKE((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0)))LIKE((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0)))LIKE((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT * FROM rt0, t0, vt0, rt1, v0 WHERE (CAST(CAST(rt1.c1 AS NUMERIC) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c1 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM rt0, t0, vt0, rt1, v0);
SELECT * FROM rt0, t0, vt0, rt1, v0 WHERE (CAST(CAST(rt1.c1 AS NUMERIC) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c1 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM rt0, t0, vt0, rt1, v0);
SELECT * FROM rt0, t0, vt0, rt1, v0 WHERE (CAST(CAST(rt1.c1 AS NUMERIC) AS REAL));
SELECT * FROM v0, rt0, rt1, t0 WHERE ((((CAST(rt1.c2 AS NUMERIC), (((t0.c1))<=((rt0.c3))), -1670687375))<=(((rt1.c2 IN ()), (NOT (rt0.c2)), ((((((((t0.c43)AND(rt0.c1)))AND(rt1.c0)))OR('7')))AND(v0.c0)))))) ORDER BY '-1755253500'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c2 AS NUMERIC), (((t0.c1))<=((rt0.c3))), -1670687375))<=(((rt1.c2 IN ()), (NOT (rt0.c2)), ((((((((t0.c43)AND(rt0.c1)))AND(rt1.c0)))OR('7')))AND(v0.c0)))))) IS TRUE)  as count FROM v0, rt0, rt1, t0 ORDER BY '-1755253500'  NULLS LAST);
SELECT * FROM v0, rt0, rt1, t0 WHERE ((((CAST(rt1.c2 AS NUMERIC), (((t0.c1))<=((rt0.c3))), -1670687375))<=(((rt1.c2 IN ()), (NOT (rt0.c2)), ((((((((t0.c43)AND(rt0.c1)))AND(rt1.c0)))OR('7')))AND(v0.c0)))))) ORDER BY '-1755253500'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c2 AS NUMERIC), (((t0.c1))<=((rt0.c3))), -1670687375))<=(((rt1.c2 IN ()), (NOT (rt0.c2)), ((((((((t0.c43)AND(rt0.c1)))AND(rt1.c0)))OR('7')))AND(v0.c0)))))) IS TRUE)  as count FROM v0, rt0, rt1, t0 ORDER BY '-1755253500'  NULLS LAST);
SELECT * FROM v0, rt0, rt1, t0 WHERE ((((CAST(rt1.c2 AS NUMERIC), (((t0.c1))<=((rt0.c3))), -1670687375))<=(((rt1.c2 IN ()), (NOT (rt0.c2)), ((((((((t0.c43)AND(rt0.c1)))AND(rt1.c0)))OR('7')))AND(v0.c0)))))) ORDER BY '-1755253500'  NULLS LAST;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN '偹4j⊴D?iTh' THEN rt0.c1 END))>((CASE WHEN rt0.c0 THEN 0.5118306783710306 END))) WHERE (((((rt0.c1) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL)) ISNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN '偹4j⊴D?iTh' THEN rt0.c1 END))>((CASE WHEN rt0.c0 THEN 0.5118306783710306 END))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN '偹4j⊴D?iTh' THEN rt0.c1 END))>((CASE WHEN rt0.c0 THEN 0.5118306783710306 END))) WHERE (((((rt0.c1) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL)) ISNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN '偹4j⊴D?iTh' THEN rt0.c1 END))>((CASE WHEN rt0.c0 THEN 0.5118306783710306 END))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN '偹4j⊴D?iTh' THEN rt0.c1 END))>((CASE WHEN rt0.c0 THEN 0.5118306783710306 END))) WHERE (((((rt0.c1) NOT NULL)) ISNULL));
SELECT COUNT(*) FROM vt0, v0, rt0, rt1, t0 WHERE ((((rt0.c1 IN ()))<<(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))<<(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0, rt1, t0);
SELECT COUNT(*) FROM vt0, v0, rt0, rt1, t0 WHERE ((((rt0.c1 IN ()))<<(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))<<(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0, rt1, t0);
SELECT COUNT(*) FROM vt0, v0, rt0, rt1, t0 WHERE ((((rt0.c1 IN ()))<<(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt0, v0, t0, rt0 WHERE ((((((vt0.c0))!=((t0.c0)))) NOT BETWEEN (x'' COLLATE NOCASE) AND (CASE WHEN rt1.c2 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<>((t0.c0)))) NOT BETWEEN (x'' COLLATE NOCASE) AND (CASE WHEN rt1.c2 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1, vt0, v0, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, v0, t0, rt0 WHERE ((((((vt0.c0))!=((t0.c0)))) NOT BETWEEN (x'' COLLATE NOCASE) AND (CASE WHEN rt1.c2 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<>((t0.c0)))) NOT BETWEEN (x'' COLLATE NOCASE) AND (CASE WHEN rt1.c2 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1, vt0, v0, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, v0, t0, rt0 WHERE ((((((vt0.c0))!=((t0.c0)))) NOT BETWEEN (x'' COLLATE NOCASE) AND (CASE WHEN rt1.c2 THEN rt1.c1 END)));
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN rt1 ON CAST(t0.c1 AS REAL) COLLATE RTRIM COLLATE BINARY LEFT OUTER JOIN vt0 ON ((((v0.c0)>>(t0.c0)))<=(vt0.c0)) RIGHT OUTER JOIN t0 ON (+ (((rt0.c2)<(rt1.c0)))) WHERE (((CAST(rt0.c3 AS INTEGER)) BETWEEN (json_array(vt0.c0, rt0.c1)) AND (v0.c0))) ORDER BY ((((((t0.c1)OR(t0.c0)))OR((rt0.c0 IN ()))))OR(((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS INTEGER)) BETWEEN (json_array(vt0.c0, rt0.c1)) AND (v0.c0))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN rt1 ON CAST(t0.c1 AS REAL) COLLATE RTRIM COLLATE BINARY LEFT OUTER JOIN vt0 ON ((((v0.c0)>>(t0.c0)))<=(vt0.c0)) RIGHT OUTER JOIN t0 ON (+ (((rt0.c2)<(rt1.c0)))) ORDER BY ((((((t0.c1)OR(t0.c0)))OR((rt0.c0 IN ()))))OR(((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS LAST);
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN rt1 ON CAST(t0.c1 AS REAL) COLLATE RTRIM COLLATE BINARY LEFT OUTER JOIN vt0 ON ((((v0.c0)>>(t0.c0)))<=(vt0.c0)) RIGHT OUTER JOIN t0 ON (+ (((rt0.c2)<(rt1.c0)))) WHERE (((CAST(rt0.c3 AS INTEGER)) BETWEEN (json_array(vt0.c0, rt0.c1)) AND (v0.c0))) ORDER BY ((((((t0.c1)OR(t0.c0)))OR((rt0.c0 IN ()))))OR(((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS INTEGER)) BETWEEN (json_array(vt0.c0, rt0.c1)) AND (v0.c0))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN rt1 ON CAST(t0.c1 AS REAL) COLLATE RTRIM COLLATE BINARY LEFT OUTER JOIN vt0 ON ((((v0.c0)>>(t0.c0)))<=(vt0.c0)) RIGHT OUTER JOIN t0 ON (+ (((rt0.c2)<(rt1.c0)))) ORDER BY ((((((t0.c1)OR(t0.c0)))OR((rt0.c0 IN ()))))OR(((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) ISNULL))*(((rt1.c1)IS(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) ISNULL))*(((rt1.c1)IS(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) ISNULL))*(((rt1.c1)IS(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) ISNULL))*(((rt1.c1)IS(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) ISNULL))*(((rt1.c1)IS(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN t0 ON ((((((((LAST_INSERT_ROWID())AND(((((rt0.c3)AND(x'')))OR(t0.c43)))))OR(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c3)))))OR(CAST(t0.c43 AS INTEGER))))AND(((rt0.c3)!=(t0.c1)))) INNER JOIN v0 ON ((rt0.c1) IS FALSE) COLLATE BINARY FULL OUTER JOIN rt0 ON (((((rt1.c2)) BETWEEN (('')) AND ((x'4248'))))<=((- (rt0.c3)))) WHERE (NULL COLLATE BINARY) ORDER BY ((-1.7976931348623157E308) BETWEEN (CASE WHEN rt0.c2 THEN vt0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 ELSE rt1.c0 END) AND (''));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN t0 ON ((((((((LAST_INSERT_ROWID())AND(((((rt0.c3)AND(x'')))OR(t0.c43)))))OR(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c3)))))OR(CAST(t0.c43 AS INTEGER))))AND(((rt0.c3)!=(t0.c1)))) INNER JOIN v0 ON ((rt0.c1) IS FALSE) COLLATE BINARY FULL OUTER JOIN rt0 ON (((((rt1.c2)) BETWEEN (('')) AND ((x'4248'))))<=((- (rt0.c3)))) ORDER BY ((-1.7976931348623157E308) BETWEEN (CASE WHEN rt0.c2 THEN vt0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 ELSE rt1.c0 END) AND ('')));
SELECT ALL COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN t0 ON ((((((((LAST_INSERT_ROWID())AND(((((rt0.c3)AND(x'')))OR(t0.c43)))))OR(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c3)))))OR(CAST(t0.c43 AS INTEGER))))AND(((rt0.c3)!=(t0.c1)))) INNER JOIN v0 ON ((rt0.c1) IS FALSE) COLLATE BINARY FULL OUTER JOIN rt0 ON (((((rt1.c2)) BETWEEN (('')) AND ((x'4248'))))<=((- (rt0.c3)))) WHERE (NULL COLLATE BINARY) ORDER BY ((-1.7976931348623157E308) BETWEEN (CASE WHEN rt0.c2 THEN vt0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 ELSE rt1.c0 END) AND (''));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN t0 ON ((((((((LAST_INSERT_ROWID())AND(((((rt0.c3)AND(x'')))OR(t0.c43)))))OR(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c3)))))OR(CAST(t0.c43 AS INTEGER))))AND(((rt0.c3)!=(t0.c1)))) INNER JOIN v0 ON ((rt0.c1) IS FALSE) COLLATE BINARY FULL OUTER JOIN rt0 ON (((((rt1.c2)) BETWEEN (('')) AND ((x'4248'))))<=((- (rt0.c3)))) ORDER BY ((-1.7976931348623157E308) BETWEEN (CASE WHEN rt0.c2 THEN vt0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 ELSE rt1.c0 END) AND ('')));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((t0.c1)GLOB(0.3068773267217677)))%(((t0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)GLOB(0.3068773267217677)))%(((t0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((t0.c1)GLOB(0.3068773267217677)))%(((t0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)GLOB(0.3068773267217677)))%(((t0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((t0.c1)GLOB(0.3068773267217677)))%(((t0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM rt1, t0, rt0, v0, vt0 WHERE (((CASE t0.c43  WHEN t0.c0 THEN rt1.c1 ELSE t0.c43 END)IS((t0.c0 IN ())))) ORDER BY (((rt1.c0)GLOB(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c43  WHEN t0.c0 THEN rt1.c1 ELSE t0.c43 END)IS((t0.c0 IN ())))) IS TRUE)  as count FROM rt1, t0, rt0, v0, vt0 ORDER BY (((rt1.c0)GLOB(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt1, t0, rt0, v0, vt0 WHERE (((CASE t0.c43  WHEN t0.c0 THEN rt1.c1 ELSE t0.c43 END)IS((t0.c0 IN ())))) ORDER BY (((rt1.c0)GLOB(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c43  WHEN t0.c0 THEN rt1.c1 ELSE t0.c43 END)IS((t0.c0 IN ())))) IS TRUE)  as count FROM rt1, t0, rt0, v0, vt0 ORDER BY (((rt1.c0)GLOB(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt1, t0, rt0, v0, vt0 WHERE (((CASE t0.c43  WHEN t0.c0 THEN rt1.c1 ELSE t0.c43 END)IS((t0.c0 IN ())))) ORDER BY (((rt1.c0)GLOB(rt0.c2)) IN ());
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON ((((NULL)OR(CASE WHEN rt1.c1 THEN rt1.c1 ELSE t0.c1 END)))OR(((t0.c43)>=(rt1.c2)))) WHERE ((((t0.c43))<((LOWER(DISTINCT t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((t0.c43))<((LOWER(DISTINCT t0.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON ((((NULL)OR(CASE WHEN rt1.c1 THEN rt1.c1 ELSE t0.c1 END)))OR(((t0.c43)>=(rt1.c2)))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON ((((NULL)OR(CASE WHEN rt1.c1 THEN rt1.c1 ELSE t0.c1 END)))OR(((t0.c43)>=(rt1.c2)))) WHERE ((((t0.c43))<((LOWER(DISTINCT t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((t0.c43))<((LOWER(DISTINCT t0.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON ((((NULL)OR(CASE WHEN rt1.c1 THEN rt1.c1 ELSE t0.c1 END)))OR(((t0.c43)>=(rt1.c2)))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON ((((NULL)OR(CASE WHEN rt1.c1 THEN rt1.c1 ELSE t0.c1 END)))OR(((t0.c43)>=(rt1.c2)))) WHERE ((((t0.c43))<((LOWER(DISTINCT t0.c1)))));
SELECT * FROM rt1 WHERE (CAST(x'' AS TEXT)) ORDER BY ((0.2144793602777081)>=(((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY ((0.2144793602777081)>=(((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))) ASC);
SELECT * FROM rt1 WHERE (CAST(x'' AS TEXT)) ORDER BY ((0.2144793602777081)>=(((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY ((0.2144793602777081)>=(((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))) ASC);
SELECT * FROM rt1 WHERE (CAST(x'' AS TEXT)) ORDER BY ((0.2144793602777081)>=(((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))) ASC;
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c1)))OR(((t0.c0)IS(t0.c43))))) ORDER BY CAST(((t0.c1) NOTNULL) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c1)))OR(((t0.c0)IS(t0.c43))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c1) NOTNULL) AS BLOB)  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c1)))OR(((t0.c0)IS(t0.c43))))) ORDER BY CAST(((t0.c1) NOTNULL) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c1)))OR(((t0.c0)IS(t0.c43))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c1) NOTNULL) AS BLOB)  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c1)))OR(((t0.c0)IS(t0.c43))))) ORDER BY CAST(((t0.c1) NOTNULL) AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0, vt0, v0, rt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0, vt0, v0, rt0);
SELECT COUNT(*) FROM rt1, t0, vt0, v0, rt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0, vt0, v0, rt0);
SELECT COUNT(*) FROM rt1, t0, vt0, v0, rt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT COUNT(*) FROM v0, t0, vt0, rt1, rt0 WHERE (((rt0.c1)+(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)+(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, vt0, rt1, rt0);
SELECT COUNT(*) FROM v0, t0, vt0, rt1, rt0 WHERE (((rt0.c1)+(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)+(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, vt0, rt1, rt0);
SELECT COUNT(*) FROM v0, t0, vt0, rt1, rt0 WHERE (((rt0.c1)+(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((('1350916604')<(rt1.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((NULL)%(((((rt1.c2)AND(rt1.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)%(((((rt1.c2)AND(rt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((('1350916604')<(rt1.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((('1350916604')<(rt1.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((NULL)%(((((rt1.c2)AND(rt1.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)%(((((rt1.c2)AND(rt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((('1350916604')<(rt1.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((('1350916604')<(rt1.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((NULL)%(((((rt1.c2)AND(rt1.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((0.6781906737105666) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0.6781906737105666) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((0.6781906737105666) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0.6781906737105666) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((0.6781906737105666) NOTNULL));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((('526357906')LIKE(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((('526357906')LIKE(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((('526357906')LIKE(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((('526357906')LIKE(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((('526357906')LIKE(rt0.c2)) COLLATE BINARY);
SELECT ALL * FROM rt1, vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c0);
SELECT ALL * FROM rt1, vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c0);
SELECT ALL * FROM rt1, vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY rt1.c0;
SELECT ALL COUNT(*) FROM v0, rt0, vt0, rt1, t0 WHERE (((CAST(v0.c0 AS NUMERIC))-(rt0.c1 COLLATE RTRIM))) ORDER BY ((NULLIF(vt0.c0, t0.c0)) IS FALSE) DESC  NULLS LAST, ((((((((CAST(rt0.c2 AS TEXT))OR(((vt0.c0)<=(rt0.c3)))))OR(rt1.c2 COLLATE RTRIM)))OR('')))AND(rt0.c2 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))-(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0, vt0, rt1, t0 ORDER BY ((NULLIF(vt0.c0, t0.c0)) IS FALSE) DESC  NULLS LAST, ((((((((CAST(rt0.c2 AS TEXT))OR(((vt0.c0)<=(rt0.c3)))))OR(rt1.c2 COLLATE RTRIM)))OR('')))AND(rt0.c2 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0, rt1, t0 WHERE (((CAST(v0.c0 AS NUMERIC))-(rt0.c1 COLLATE RTRIM))) ORDER BY ((NULLIF(vt0.c0, t0.c0)) IS FALSE) DESC  NULLS LAST, ((((((((CAST(rt0.c2 AS TEXT))OR(((vt0.c0)<=(rt0.c3)))))OR(rt1.c2 COLLATE RTRIM)))OR('')))AND(rt0.c2 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))-(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0, vt0, rt1, t0 ORDER BY ((NULLIF(vt0.c0, t0.c0)) IS FALSE) DESC  NULLS LAST, ((((((((CAST(rt0.c2 AS TEXT))OR(((vt0.c0)<=(rt0.c3)))))OR(rt1.c2 COLLATE RTRIM)))OR('')))AND(rt0.c2 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0, rt1, t0 WHERE (((CAST(v0.c0 AS NUMERIC))-(rt0.c1 COLLATE RTRIM))) ORDER BY ((NULLIF(vt0.c0, t0.c0)) IS FALSE) DESC  NULLS LAST, ((((((((CAST(rt0.c2 AS TEXT))OR(((vt0.c0)<=(rt0.c3)))))OR(rt1.c2 COLLATE RTRIM)))OR('')))AND(rt0.c2 COLLATE BINARY)) ASC;
SELECT ALL * FROM v0 WHERE ((+ (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((+ (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((+ (v0.c0)) COLLATE NOCASE);
SELECT * FROM rt0, v0 WHERE (((NULL)AND(rtreenode(rt0.c1, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)AND(rtreenode(rt0.c1, rt0.c1)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((NULL)AND(rtreenode(rt0.c1, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)AND(rtreenode(rt0.c1, rt0.c1)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((NULL)AND(rtreenode(rt0.c1, rt0.c1))));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN vt0 ON CASE CASE vt0.c0  WHEN '\nYc' THEN t0.c43 END  WHEN x'' THEN ((((((((((((v0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c1)))AND(t0.c0)))AND(t0.c1)))OR(vt0.c0)) ELSE t0.c43 COLLATE BINARY END WHERE (CASE ((((t0.c1)OR(t0.c43)))OR(vt0.c0))  WHEN ((vt0.c0)AND(x'')) THEN ((t0.c43)GLOB(vt0.c0)) WHEN ((t0.c0) NOTNULL) THEN ((vt0.c0)>(t0.c43)) WHEN '0.9320457727903727' THEN ((t0.c1) NOT NULL) END) ORDER BY (((t0.c0) NOT BETWEEN (t0.c43) AND (vt0.c0)) IN ()) ASC, (((v0.c0 IN ())) BETWEEN (UNLIKELY(v0.c0)) AND (((t0.c0)LIKE(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c1)OR(t0.c43)))OR(vt0.c0))  WHEN ((vt0.c0)AND(x'')) THEN ((t0.c43)GLOB(vt0.c0)) WHEN ((t0.c0) NOTNULL) THEN ((vt0.c0)>(t0.c43)) WHEN '0.9320457727903727' THEN ((t0.c1) NOT NULL) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN vt0 ON CASE CASE vt0.c0  WHEN '\nYc' THEN t0.c43 END  WHEN x'' THEN ((((((((((((v0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c1)))AND(t0.c0)))AND(t0.c1)))OR(vt0.c0)) ELSE t0.c43 COLLATE BINARY END ORDER BY (((t0.c0) NOT BETWEEN (t0.c43) AND (vt0.c0)) IN ()) ASC, (((v0.c0 IN ())) BETWEEN (UNLIKELY(v0.c0)) AND (((t0.c0)LIKE(v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN vt0 ON CASE CASE vt0.c0  WHEN '\nYc' THEN t0.c43 END  WHEN x'' THEN ((((((((((((v0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c1)))AND(t0.c0)))AND(t0.c1)))OR(vt0.c0)) ELSE t0.c43 COLLATE BINARY END WHERE (CASE ((((t0.c1)OR(t0.c43)))OR(vt0.c0))  WHEN ((vt0.c0)AND(x'')) THEN ((t0.c43)GLOB(vt0.c0)) WHEN ((t0.c0) NOTNULL) THEN ((vt0.c0)>(t0.c43)) WHEN '0.9320457727903727' THEN ((t0.c1) NOT NULL) END) ORDER BY (((t0.c0) NOT BETWEEN (t0.c43) AND (vt0.c0)) IN ()) ASC, (((v0.c0 IN ())) BETWEEN (UNLIKELY(v0.c0)) AND (((t0.c0)LIKE(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c1)OR(t0.c43)))OR(vt0.c0))  WHEN ((vt0.c0)AND(x'')) THEN ((t0.c43)GLOB(vt0.c0)) WHEN ((t0.c0) NOTNULL) THEN ((vt0.c0)>(t0.c43)) WHEN '0.9320457727903727' THEN ((t0.c1) NOT NULL) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN vt0 ON CASE CASE vt0.c0  WHEN '\nYc' THEN t0.c43 END  WHEN x'' THEN ((((((((((((v0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c1)))AND(t0.c0)))AND(t0.c1)))OR(vt0.c0)) ELSE t0.c43 COLLATE BINARY END ORDER BY (((t0.c0) NOT BETWEEN (t0.c43) AND (vt0.c0)) IN ()) ASC, (((v0.c0 IN ())) BETWEEN (UNLIKELY(v0.c0)) AND (((t0.c0)LIKE(v0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) IS FALSE) AS TEXT)) ORDER BY ((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE ASC);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) IS FALSE) AS TEXT)) ORDER BY ((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE ASC);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) IS FALSE) AS TEXT)) ORDER BY ((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE ASC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN CAST(t0.c43 AS REAL) THEN (NOT (t0.c0)) END INNER JOIN rt0 ON (+ (((rt0.c1) IS FALSE))) INNER JOIN v0 ON 0.012306733758536081 WHERE (CAST(t0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN CAST(t0.c43 AS REAL) THEN (NOT (t0.c0)) END INNER JOIN rt0 ON (+ (((rt0.c1) IS FALSE))) INNER JOIN v0 ON 0.012306733758536081);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN CAST(t0.c43 AS REAL) THEN (NOT (t0.c0)) END INNER JOIN rt0 ON (+ (((rt0.c1) IS FALSE))) INNER JOIN v0 ON 0.012306733758536081 WHERE (CAST(t0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN CAST(t0.c43 AS REAL) THEN (NOT (t0.c0)) END INNER JOIN rt0 ON (+ (((rt0.c1) IS FALSE))) INNER JOIN v0 ON 0.012306733758536081);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN CAST(t0.c43 AS REAL) THEN (NOT (t0.c0)) END INNER JOIN rt0 ON (+ (((rt0.c1) IS FALSE))) INNER JOIN v0 ON 0.012306733758536081 WHERE (CAST(t0.c0 COLLATE BINARY AS BLOB));
SELECT ALL * FROM v0, t0, vt0 WHERE ((((t0.c1, vt0.c0, t0.c43)) NOT BETWEEN ((CASE v0.c0  WHEN t0.c43 THEN t0.c43 WHEN t0.c43 THEN t0.c1 WHEN vt0.c0 THEN t0.c1 ELSE t0.c1 END, (t0.c0 IN ()), ((vt0.c0) NOT NULL))) AND ((((t0.c43) BETWEEN (v0.c0) AND (t0.c1)), CAST(vt0.c0 AS INTEGER), v0.c0)))) ORDER BY CASE '1685178484'  WHEN '+d' THEN ((vt0.c0) BETWEEN (t0.c43) AND (t0.c43)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, vt0.c0, t0.c43)) NOT BETWEEN ((CASE v0.c0  WHEN t0.c43 THEN t0.c43 WHEN t0.c43 THEN t0.c1 WHEN vt0.c0 THEN t0.c1 ELSE t0.c1 END, (t0.c0 IN ()), ((vt0.c0) NOT NULL))) AND ((((t0.c43) BETWEEN (v0.c0) AND (t0.c1)), CAST(vt0.c0 AS INTEGER), v0.c0)))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CASE '1685178484'  WHEN '+d' THEN ((vt0.c0) BETWEEN (t0.c43) AND (t0.c43)) END DESC  NULLS LAST);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((t0.c1, vt0.c0, t0.c43)) NOT BETWEEN ((CASE v0.c0  WHEN t0.c43 THEN t0.c43 WHEN t0.c43 THEN t0.c1 WHEN vt0.c0 THEN t0.c1 ELSE t0.c1 END, (t0.c0 IN ()), ((vt0.c0) NOT NULL))) AND ((((t0.c43) BETWEEN (v0.c0) AND (t0.c1)), CAST(vt0.c0 AS INTEGER), v0.c0)))) ORDER BY CASE '1685178484'  WHEN '+d' THEN ((vt0.c0) BETWEEN (t0.c43) AND (t0.c43)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, vt0.c0, t0.c43)) NOT BETWEEN ((CASE v0.c0  WHEN t0.c43 THEN t0.c43 WHEN t0.c43 THEN t0.c1 WHEN vt0.c0 THEN t0.c1 ELSE t0.c1 END, (t0.c0 IN ()), ((vt0.c0) NOT NULL))) AND ((((t0.c43) BETWEEN (v0.c0) AND (t0.c1)), CAST(vt0.c0 AS INTEGER), v0.c0)))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CASE '1685178484'  WHEN '+d' THEN ((vt0.c0) BETWEEN (t0.c43) AND (t0.c43)) END DESC  NULLS LAST);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((t0.c1, vt0.c0, t0.c43)) NOT BETWEEN ((CASE v0.c0  WHEN t0.c43 THEN t0.c43 WHEN t0.c43 THEN t0.c1 WHEN vt0.c0 THEN t0.c1 ELSE t0.c1 END, (t0.c0 IN ()), ((vt0.c0) NOT NULL))) AND ((((t0.c43) BETWEEN (v0.c0) AND (t0.c1)), CAST(vt0.c0 AS INTEGER), v0.c0)))) ORDER BY CASE '1685178484'  WHEN '+d' THEN ((vt0.c0) BETWEEN (t0.c43) AND (t0.c43)) END DESC  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (CAST(rt1.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY (((rt1.c2)) BETWEEN ((((t0.c0) NOT BETWEEN (rt1.c1) AND (x'6e40')))) AND ((((rt1.c1)&(rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM rt1, t0 ORDER BY (((rt1.c2)) BETWEEN ((((t0.c0) NOT BETWEEN (rt1.c1) AND (x'6e40')))) AND ((((rt1.c1)&(rt1.c2))))) DESC);
SELECT ALL * FROM rt1, t0 WHERE (CAST(rt1.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY (((rt1.c2)) BETWEEN ((((t0.c0) NOT BETWEEN (rt1.c1) AND (x'6e40')))) AND ((((rt1.c1)&(rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM rt1, t0 ORDER BY (((rt1.c2)) BETWEEN ((((t0.c0) NOT BETWEEN (rt1.c1) AND (x'6e40')))) AND ((((rt1.c1)&(rt1.c2))))) DESC);
SELECT ALL * FROM rt1, t0 WHERE (CAST(rt1.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY (((rt1.c2)) BETWEEN ((((t0.c0) NOT BETWEEN (rt1.c1) AND (x'6e40')))) AND ((((rt1.c1)&(rt1.c2))))) DESC;
SELECT * FROM v0 WHERE (((' ') NOT BETWEEN (((v0.c0) IS TRUE)) AND (CAST(v0.c0 AS NUMERIC)))) ORDER BY ((('-733668330')<<(v0.c0)) IN ()), ((((x'c676')LIKE(v0.c0)))/((NOT (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((' ') NOT BETWEEN (((v0.c0) IS TRUE)) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 ORDER BY ((('-733668330')<<(v0.c0)) IN ()), ((((x'c676')LIKE(v0.c0)))/((NOT (v0.c0)))) DESC);
SELECT * FROM v0 WHERE (((' ') NOT BETWEEN (((v0.c0) IS TRUE)) AND (CAST(v0.c0 AS NUMERIC)))) ORDER BY ((('-733668330')<<(v0.c0)) IN ()), ((((x'c676')LIKE(v0.c0)))/((NOT (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((' ') NOT BETWEEN (((v0.c0) IS TRUE)) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 ORDER BY ((('-733668330')<<(v0.c0)) IN ()), ((((x'c676')LIKE(v0.c0)))/((NOT (v0.c0)))) DESC);
SELECT * FROM v0 WHERE (((' ') NOT BETWEEN (((v0.c0) IS TRUE)) AND (CAST(v0.c0 AS NUMERIC)))) ORDER BY ((('-733668330')<<(v0.c0)) IN ()), ((((x'c676')LIKE(v0.c0)))/((NOT (v0.c0)))) DESC;
SELECT * FROM rt1, vt0 WHERE ((~ ((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((x'3b3d')))))) ORDER BY 'IF' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((x'3b3d')))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY 'IF' DESC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE ((~ ((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((x'3b3d')))))) ORDER BY 'IF' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((x'3b3d')))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY 'IF' DESC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE ((~ ((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((x'3b3d')))))) ORDER BY 'IF' DESC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (+ ((+ (rt1.c0)))) RIGHT OUTER JOIN rt1 ON UNLIKELY((((0.6874236372187927, NULL, rt0.c3, '￿⟒', '928106342'))<>(('840846927', t0.c43, t0.c43, 0.8703279453094208, rt0.c2)))) LEFT OUTER JOIN t0 ON CAST(((rt0.c1)<(rt1.c0)) AS REAL) LEFT OUTER JOIN rt0 ON 0xfffffffface3676c WHERE (CASE (NOT (rt1.c2))  WHEN LIKELIHOOD(rt0.c0, 0.5693925869516482) THEN (((t0.c1))=((rt1.c1))) ELSE ((v0.c0) BETWEEN ('') AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt1.c2))  WHEN LIKELIHOOD(rt0.c0, 0.5693925869516482) THEN (((t0.c1))==((rt1.c1))) ELSE ((v0.c0) BETWEEN ('') AND (rt0.c2)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (+ ((+ (rt1.c0)))) RIGHT OUTER JOIN rt1 ON UNLIKELY((((0.6874236372187927, NULL, rt0.c3, '￿⟒', '928106342'))!=(('840846927', t0.c43, t0.c43, 0.8703279453094208, rt0.c2)))) LEFT OUTER JOIN t0 ON CAST(((rt0.c1)<(rt1.c0)) AS REAL) LEFT OUTER JOIN rt0 ON 0xfffffffface3676c);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (+ ((+ (rt1.c0)))) RIGHT OUTER JOIN rt1 ON UNLIKELY((((0.6874236372187927, NULL, rt0.c3, '￿⟒', '928106342'))<>(('840846927', t0.c43, t0.c43, 0.8703279453094208, rt0.c2)))) LEFT OUTER JOIN t0 ON CAST(((rt0.c1)<(rt1.c0)) AS REAL) LEFT OUTER JOIN rt0 ON 0xfffffffface3676c WHERE (CASE (NOT (rt1.c2))  WHEN LIKELIHOOD(rt0.c0, 0.5693925869516482) THEN (((t0.c1))=((rt1.c1))) ELSE ((v0.c0) BETWEEN ('') AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt1.c2))  WHEN LIKELIHOOD(rt0.c0, 0.5693925869516482) THEN (((t0.c1))==((rt1.c1))) ELSE ((v0.c0) BETWEEN ('') AND (rt0.c2)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (+ ((+ (rt1.c0)))) RIGHT OUTER JOIN rt1 ON UNLIKELY((((0.6874236372187927, NULL, rt0.c3, '￿⟒', '928106342'))!=(('840846927', t0.c43, t0.c43, 0.8703279453094208, rt0.c2)))) LEFT OUTER JOIN t0 ON CAST(((rt0.c1)<(rt1.c0)) AS REAL) LEFT OUTER JOIN rt0 ON 0xfffffffface3676c);
SELECT ALL COUNT(*) FROM rt1, vt0 INNER JOIN t0 ON (((((('#RH{QᘘWr')LIKE(t0.c1)))AND(((t0.c0) NOT NULL))))OR((((t0.c0))>=((vt0.c0))))) LEFT OUTER JOIN v0 ON CAST(v0.c0 AS REAL) COLLATE RTRIM WHERE ((- (((0.8230208024969795) BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((0.8230208024969795) BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM rt1, vt0 INNER JOIN t0 ON (((((('#RH{QᘘWr')LIKE(t0.c1)))AND(((t0.c0) NOT NULL))))OR((((t0.c0))>=((vt0.c0))))) LEFT OUTER JOIN v0 ON CAST(v0.c0 AS REAL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, vt0 INNER JOIN t0 ON (((((('#RH{QᘘWr')LIKE(t0.c1)))AND(((t0.c0) NOT NULL))))OR((((t0.c0))>=((vt0.c0))))) LEFT OUTER JOIN v0 ON CAST(v0.c0 AS REAL) COLLATE RTRIM WHERE ((- (((0.8230208024969795) BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((0.8230208024969795) BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM rt1, vt0 INNER JOIN t0 ON (((((('#RH{QᘘWr')LIKE(t0.c1)))AND(((t0.c0) NOT NULL))))OR((((t0.c0))>=((vt0.c0))))) LEFT OUTER JOIN v0 ON CAST(v0.c0 AS REAL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, vt0 INNER JOIN t0 ON (((((('#RH{QᘘWr')LIKE(t0.c1)))AND(((t0.c0) NOT NULL))))OR((((t0.c0))>=((vt0.c0))))) LEFT OUTER JOIN v0 ON CAST(v0.c0 AS REAL) COLLATE RTRIM WHERE ((- (((0.8230208024969795) BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((((vt0.c0, vt0.c0, rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, vt0.c0, rt0.c2, rt0.c2, '1825161832')) AND ((rt0.c1, rt0.c3, v0.c0, rt0.c1, rt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, vt0.c0, rt0.c2, rt0.c2, '1825161832')) AND ((rt0.c1, rt0.c3, v0.c0, rt0.c1, rt0.c0)))) IS TRUE)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((((vt0.c0, vt0.c0, rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, vt0.c0, rt0.c2, rt0.c2, '1825161832')) AND ((rt0.c1, rt0.c3, v0.c0, rt0.c1, rt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, vt0.c0, rt0.c2, rt0.c2, '1825161832')) AND ((rt0.c1, rt0.c3, v0.c0, rt0.c1, rt0.c0)))) IS TRUE)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((((vt0.c0, vt0.c0, rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, vt0.c0, rt0.c2, rt0.c2, '1825161832')) AND ((rt0.c1, rt0.c3, v0.c0, rt0.c1, rt0.c0)))) IS TRUE));
SELECT COUNT(*) FROM v0, t0, vt0, rt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY ((t0.c1) BETWEEN ('.J') AND (((rt0.c2)!=(t0.c0))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0, t0, vt0, rt0 ORDER BY ((t0.c1) BETWEEN ('.J') AND (((rt0.c2)<>(t0.c0)))));
SELECT COUNT(*) FROM v0, t0, vt0, rt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY ((t0.c1) BETWEEN ('.J') AND (((rt0.c2)!=(t0.c0))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0, t0, vt0, rt0 ORDER BY ((t0.c1) BETWEEN ('.J') AND (((rt0.c2)<>(t0.c0)))));
SELECT COUNT(*) FROM v0, t0, vt0, rt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY ((t0.c1) BETWEEN ('.J') AND (((rt0.c2)!=(t0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)%((- (rt0.c3))))) ORDER BY rt0.c1, SQLITE_COMPILEOPTION_GET(rt0.c1) DESC  NULLS FIRST, ((((((rt0.c1)LIKE(rt0.c3)))OR(((rt0.c1)==(rt0.c3)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)%((- (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1, SQLITE_COMPILEOPTION_GET(rt0.c1) DESC  NULLS FIRST, ((((((rt0.c1)LIKE(rt0.c3)))OR(((rt0.c1)=(rt0.c3)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)%((- (rt0.c3))))) ORDER BY rt0.c1, SQLITE_COMPILEOPTION_GET(rt0.c1) DESC  NULLS FIRST, ((((((rt0.c1)LIKE(rt0.c3)))OR(((rt0.c1)==(rt0.c3)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)%((- (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1, SQLITE_COMPILEOPTION_GET(rt0.c1) DESC  NULLS FIRST, ((((((rt0.c1)LIKE(rt0.c3)))OR(((rt0.c1)=(rt0.c3)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)%((- (rt0.c3))))) ORDER BY rt0.c1, SQLITE_COMPILEOPTION_GET(rt0.c1) DESC  NULLS FIRST, ((((((rt0.c1)LIKE(rt0.c3)))OR(((rt0.c1)==(rt0.c3)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) ASC;
SELECT ALL * FROM t0, rt1, rt0, vt0, v0 WHERE (((((t0.c43) IS FALSE))>>(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((t0.c43) IS FALSE))>>(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt1, rt0, vt0, v0);
SELECT ALL * FROM t0, rt1, rt0, vt0, v0 WHERE (((((t0.c43) IS FALSE))>>(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((t0.c43) IS FALSE))>>(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt1, rt0, vt0, v0);
SELECT ALL * FROM t0, rt1, rt0, vt0, v0 WHERE (((((t0.c43) IS FALSE))>>(rt0.c0 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (((((NOT (rt0.c3)), rt0.c2 COLLATE NOCASE, (rt0.c1 IN ())))<=((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)), rt0.c3, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt0.c3)), rt0.c2 COLLATE NOCASE, (rt0.c1 IN ())))<=((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)), rt0.c3, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((NOT (rt0.c3)), rt0.c2 COLLATE NOCASE, (rt0.c1 IN ())))<=((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)), rt0.c3, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt0.c3)), rt0.c2 COLLATE NOCASE, (rt0.c1 IN ())))<=((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)), rt0.c3, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((NOT (rt0.c3)), rt0.c2 COLLATE NOCASE, (rt0.c1 IN ())))<=((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)), rt0.c3, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END))));
SELECT ALL * FROM rt1, v0, rt0, vt0 WHERE ((((rt0.c0)*(rt0.c0)) IN (CAST(v0.c0 AS REAL), (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt1.c0)))))) ORDER BY ((((((vt0.c0)%(rt1.c2)))OR(((((rt0.c0)AND(rt1.c2)))OR(vt0.c0)))))OR(((NULL)!=('346408553')))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)*(rt0.c0)) IN (CAST(v0.c0 AS REAL), (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, v0, rt0, vt0 ORDER BY ((((((vt0.c0)%(rt1.c2)))OR(((((rt0.c0)AND(rt1.c2)))OR(vt0.c0)))))OR(((NULL)!=('346408553')))) DESC);
SELECT ALL * FROM rt1, v0, rt0, vt0 WHERE ((((rt0.c0)*(rt0.c0)) IN (CAST(v0.c0 AS REAL), (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt1.c0)))))) ORDER BY ((((((vt0.c0)%(rt1.c2)))OR(((((rt0.c0)AND(rt1.c2)))OR(vt0.c0)))))OR(((NULL)!=('346408553')))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)*(rt0.c0)) IN (CAST(v0.c0 AS REAL), (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, v0, rt0, vt0 ORDER BY ((((((vt0.c0)%(rt1.c2)))OR(((((rt0.c0)AND(rt1.c2)))OR(vt0.c0)))))OR(((NULL)!=('346408553')))) DESC);
SELECT ALL * FROM rt1, v0, rt0, vt0 WHERE ((((rt0.c0)*(rt0.c0)) IN (CAST(v0.c0 AS REAL), (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt1.c0)))))) ORDER BY ((((((vt0.c0)%(rt1.c2)))OR(((((rt0.c0)AND(rt1.c2)))OR(vt0.c0)))))OR(((NULL)!=('346408553')))) DESC;
SELECT ALL * FROM t0, rt1, v0, vt0, rt0 WHERE (0.3438563842647382) ORDER BY ((((rt0.c3) IS TRUE)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((0.3438563842647382) IS TRUE)  as count FROM t0, rt1, v0, vt0, rt0 ORDER BY ((((rt0.c3) IS TRUE)) NOTNULL));
SELECT ALL * FROM t0, rt1, v0, vt0, rt0 WHERE (0.3438563842647382) ORDER BY ((((rt0.c3) IS TRUE)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((0.3438563842647382) IS TRUE)  as count FROM t0, rt1, v0, vt0, rt0 ORDER BY ((((rt0.c3) IS TRUE)) NOTNULL));
SELECT ALL * FROM t0, rt1, v0, vt0, rt0 WHERE (0.3438563842647382) ORDER BY ((((rt0.c3) IS TRUE)) NOTNULL);
