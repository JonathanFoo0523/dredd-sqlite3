-- Time: 2024/06/09 04:11:20
-- Database: database96
-- Database version: 3.40.0
-- seed value: 1033600996
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, , columnsize=1); -- 4ms;
CREATE TABLE IF NOT EXISTS t1 (c0 TEXT , c1 INTEGER , c2 BLOB ); -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 1ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
REINDEX BINARY; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 BEFORE DELETE ON t1 FOR EACH ROW  BEGIN INSERT OR ROLLBACK INTO t1(c0, c2) VALUES ('-900207835', 0.3582263935278437);INSERT OR ROLLBACK INTO t1(c1, c0) VALUES (x'b59f', 0.30375750283892455), (-900207835, NULL), (-794046394, x'');INSERT OR REPLACE INTO t1(c1) VALUES (-9.00207835E8), (-920238898), (NULL);END; -- 0ms;
CREATE INDEX IF NOT EXISTS i96 ON t1(((c2)AND(CASE c2  WHEN c2 THEN c0 WHEN c0 THEN c1 WHEN c2 THEN c2 ELSE c1 END)),(NOT (c0 COLLATE RTRIM)) COLLATE RTRIM,(((c0, c2, c1)) BETWEEN ((((c1)IS(c0)), ((c1) NOTNULL), ((c1) NOTNULL))) AND ((((c0) IS FALSE), ((((c2)OR(c1)))AND(c2)), (c0 IN (c1))))) COLLATE NOCASE) WHERE (+ (((c1) IS TRUE))); -- 6ms;
UPDATE OR ABORT vt0 SET c0=x'c44c6bad'; -- 0ms;
REINDEX; -- 0ms;
PRAGMA cache_size; -- 0ms;
COMMIT; -- 0ms;
PRAGMA soft_heap_limit = 0; -- 1ms;
UPDATE vt0 SET c0=NULL; -- 0ms;
UPDATE t1 SET (c0, c0)=(NULL, 0.09314691119750818) WHERE (((((t1.c2, t1.c1, t1.c0)) NOT BETWEEN ((0.3582263935278437, t1.c2, t1.c1)) AND ((t1.c1, t1.c0, t1.c2)))) BETWEEN (t1.c1) AND (t1.c2 COLLATE NOCASE)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET c0=x''; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE t1 SET c0=0X4c60df4e; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-540108688,6');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=14'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1250789174,15');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
PRAGMA mmap_size; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(-548367492, 4.075982175988298E18) WHERE ((((((vt0.c0)-(vt0.c0)))AND((vt0.c0 IN ()))))AND(((vt0.c0)>>(vt0.c0)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 447733101);\n; -- 0ms;
UPDATE OR IGNORE t1 SET c0=x''; -- 0ms;
ALTER TABLE t1 ADD COLUMN c18 TEXT; -- 0ms;
CREATE INDEX i6 ON t1('-900207835' COLLATE NOCASE DESC,(CASE NULL  WHEN c2 THEN '-1982790125' ELSE c2 END IN ()) DESC,0.7301194122830089 DESC,CAST((NOT (c2)) AS NUMERIC) DESC); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i14 ON t1((((((c2 IN ()))AND((('jo') ISNULL))))OR(CASE WHEN c1 THEN c1 END)) COLLATE RTRIM DESC,NULL COLLATE BINARY DESC,LOWER(DISTINCT COALESCE(DISTINCT c0, c2)),CASE (((c2))>((c1)))  WHEN TRIM(c0) THEN CAST(c1 AS BLOB) WHEN ((((((((x'')OR(c1)))AND('447733101')))AND(c18)))OR(c1)) THEN ((c1)AND(c0)) WHEN (c1 IN ()) THEN ((c1)*('1281417038')) ELSE c1 COLLATE BINARY END ASC); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 866247200); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum(-1982790125); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.42197768644996103 WHERE (((((t1.c1 IN ()))OR(0.9789472757794879)))AND(t1.c0)); -- 0ms;
PRAGMA temp.optimize; -- 0ms;
UPDATE OR FAIL t1 SET c0='76441548' WHERE ((CAST(t1.c1 AS BLOB)) NOT NULL); -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT TOTAL((t1.c2 IN (t1.c18)) COLLATE BINARY) FILTER(WHERE CAST(((t1.c0)GLOB(t1.c0)) AS INTEGER)) OVER () FROM t1, vt0; -- 0ms;
PRAGMA integrity_check; -- 1ms;
PRAGMA main.mmap_size; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
UPDATE OR FAIL t1 SET (c0, c18)=(0.5212342049629718, x''); -- 0ms;
UPDATE OR ABORT vt0 SET c0=1281417038, c0=NULL WHERE CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7956920389292798 WHEN vt0.c0 THEN vt0.c0 END AS REAL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE t1 SET (c2, c0)=('I', NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.521850640128879)=(0.38995460568432916)) COLLATE RTRIM COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', '4 sz=849273879 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN -900207835 ELSE '-133103531' END) BETWEEN ((('1668034197')>(0.05435372308432029))) AND ((- (0X636c2e95)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('447733101' IN ()))*((('Y') BETWEEN (0.3316481379845131) AND ('0.3582263935278437')))); -- 5ms;
DELETE FROM sqlite_stat1 WHERE ((-548367492 COLLATE BINARY) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '188103477 0 sz=-1982790125 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', '1513012866 sz=-591852487 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(DISTINCT 0.8788747271067247))GLOB(((((((((-5.48367492E8)AND(0.3144008249968654)))OR('SN')))OR('SN')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=4075982175988298020'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9723809665589126)AND(0.15036391345871458)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-591852487' IN (NULL)))/(((x'')-(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('1108393648')!=(405274801)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'')>=('w㶾\0H')) THEN (NOT (0Xffffffffb40e4169)) ELSE (((x'')) BETWEEN ((NULL)) AND ((NULL))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=126404017 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=1131767565 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL COLLATE NOCASE  WHEN CHANGES() THEN ((((((((NULL)OR('<bd''N')))AND('#-HXjD')))AND(1.131767565E9)))OR(x'')) WHEN (('1177046307') IS TRUE) THEN (188103477 IN ()) WHEN LAST_INSERT_ROWID() THEN CAST(0.6272288567277448 AS TEXT) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '0 sz=188103477'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-1e500' IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' sz=-1205541087 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' sz=-540108688 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.5253071019429386 COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-794046394 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=126404017'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('[癹' IN (0.06841613960789461 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffff9f0b6aeb; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' sz=-608928290 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.2448690537085626 THEN ((1884254237) NOT BETWEEN (0X2758ee5) AND ('')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('璷6')))&((('1930078332')OR(0.7710150083541959)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '-17503076'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((1.108393648E9)|(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=-1776112427 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)) COLLATE RTRIM COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1517930803'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((x''))>=((x'acb4'))) THEN CAST(0xfffffffff8110055 AS NUMERIC) ELSE 0.06214202401301949 COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '961019594 sz=1003324608 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' sz=1980992754 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6985974535241908) NOT BETWEEN (NULL) AND ('w㶾\0h')))<=('-341136462' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', '-548367492 2 sz=849273879 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(SQLITE_COMPILEOPTION_USED(NULL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=76441548 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-341136462 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('1003324608' COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '0 0 sz=1997169920 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' sz=-396616895 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL COLLATE NOCASE, LIKELIHOOD(DISTINCT NULL, 0.5930060154666472), CASE 0xffffffffdcb90c39  WHEN 0.28823847009240067 THEN 0.5051772513561228 END))>((((((0.3023867534222834)AND('原')))OR(0.8896770025885473)), (((((((('990003456')AND(x'')))AND(NULL)))AND(1679412149)))OR(x'')), 0.7330828904994644 COLLATE NOCASE))); -- 3ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7900445734135289)>(0.24665148857697006))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=657675959'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(((((NULL)AND('1438399194')))OR('-1e500')), (1.668034197E9 IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', '2 sz=1281417038 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' sz=-1402867272'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-203720396 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-17503076'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1982790125 sz=-2126903622 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-591852487')LIKE(0X4c60df4e))  WHEN (~ ('0.3144008249968654')) THEN ((((NULL)AND(NULL)))OR('9ptCB{{~')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-702593718 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' sz=495369345 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', '-668024529'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=1454175273 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1962959752'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.6922339680040676 AS TEXT))>=(CASE 0.22780394744917043  WHEN '-2102100970' THEN NULL ELSE -548367492 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('-518756700'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (TYPEOF(0x770a6500))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '-2042100278 2 sz=1426792095 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.10264854914458843 AS BLOB)) NOT BETWEEN ('352880982') AND (((0xffffffffc14d66fe) BETWEEN ('-225232471') AND ('R*')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((2107025836 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL, 0.7330828904994644, NULL))>(('-17503076', '', x''))) IN ((((0.8554864880146473, -1.982790125E9, 'ded莸a'))!=((0Xffffffff89d10613, '', 0.32427290945786247))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' sz=-900207835'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((~ (NULL))))<=(('mO0' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.644998067275442) NOT NULL) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1246126581 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' sz=2107025836 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', '-1205541087'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((NULL)AND(0.1762077118083002)))AND('0.5212342049629718')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('VQ') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1962959752 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '1454175273 sz=-815817625'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=-1095721498 noskipscan'); -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '-1867833863 sz=-1101093699'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)!=(((((0.12047466873783852)OR(NULL)))OR('U_')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'4ac3')AND('''')))OR(x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-978333758 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.3767125760607285) BETWEEN (-1.7976931348623157E308) AND ('nI0'))))<(('#-HXjD' COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1655143496 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=('\rGx<G')))<<(((x'1973')OR('jo')))); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' sz=1916447254 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' sz=-990868394 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) BETWEEN (NULL) AND (0.7710150083541959)) THEN ((-5.40108688E8) NOT BETWEEN (NULL) AND (0xffffffffc4f08c56)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3767125760607285)) BETWEEN (((0x6419cbb5 IN ()))) AND (('Cm'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' sz=-608928290'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=-207662185 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' sz=-1388251897 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '1668034197 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR('1930078332')))OR('1293179177'))) NOT BETWEEN (x'' COLLATE RTRIM) AND ((((NULL)) BETWEEN ((-1862452181)) AND (('1685867773'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('-794046394' AS REAL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ''); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1982790125 2 10284536 sz=10284536'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')|('166124313')))<=(1980992754 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' sz=1662968117 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.277925903402638)LIKE(-1.205541087E9)))IS NOT((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_USED(NULL))|(((NULL) NOT BETWEEN ('1125671532') AND ('-180414400')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', '-548367492 2 sz=-1101093699'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' sz=-1724934177 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((~ (-2059371957)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.24582482648779014; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1815377079'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '-298309644 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '1884254237 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1734294974 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x'', x'8a90', 0.8424501046375719, 0.28823847009240067, 1.66124313E8)) NOT BETWEEN ((-978333758, -180414400, x'', x'1a0c', '0.3316481379845131')) AND ((x'', NULL, 3.52880982E8, 0.22923510350027199, '405274801')))  WHEN '' THEN (~ ('')) ELSE CASE x'89d7'  WHEN x'' THEN 0.36205725827076074 WHEN x'' THEN 4551205 WHEN -5.48367492E8 THEN 0.05770158784349244 ELSE x'56e0' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.125671532E9)IS NOT(x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '-1776112427 0 noskipscan'); -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (x'' IN ()) THEN ((x'') BETWEEN (41258725) AND (0.14451976119022214)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 sz=1293179177 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-815817625 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', '-1051891970 0 sz=1685867773 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-920238898'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (x'')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', '579826870'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', '-1340673743 -1982790125 sz=1916447254 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '657569785 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('138165451') IS TRUE)  WHEN ('-225232471' IN ()) THEN ((0.11970732232999293)&(0.8672064138352298)) ELSE (((0.2369137842978789))>((NULL))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' sz=-924116461 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' sz=-1556672953 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'7664') IS TRUE))OR(((0.06214202401301949)*(NULL)))))AND('\rGx<G' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', '0 sz=-2005361795 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=('e&'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, x'8f45', x'', NULL, x''))<((NULL, 'u엗rꮲ9', 1662968117, 0.992750295386567, '-1090497633'))))>((((('-1095721498')AND('-900207835')))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', '887983603 sz=2061814266'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' unordered'); -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', '-1095127369'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-288166303 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' sz=-180414400'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1328399831 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.1762077118083002 IN ('887983603')) IN ()); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' sz=-1505850254 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '154121431 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHAR(0.21586734550609965 COLLATE BINARY, ((((x'93f5')OR('660344022')))AND(NULL)), (0x90e475b IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' sz=1103703546 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('T4柌' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' sz=-1893901757 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' sz=1761674056 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 0.5531218890049903 THEN NULL ELSE '-1104572839' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '1092755001 sz=-1118441992 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' sz=-2015398412 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-47304614 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '1375551997 sz=-1724934177 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('-2029626330' IN ()) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' unordered noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' sz=133512862 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.7623531298430059 THEN x'' WHEN -3.41136462E8 THEN NULL WHEN -912581621 THEN x'' ELSE NULL END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', '-432607085 sz=-2067165625'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' sz=-341136462'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '2102125039 sz=1853197797 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))>((''))))LIKE(CASE x''  WHEN 0.9778359139190607 THEN NULL ELSE '1512820335' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' sz=126404017 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=192219196 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' sz=-1530558438'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=-869195191 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=185663859 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=2122429090 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' sz=1742807493 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' sz=-62091617 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('-815695182')>>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1177046307 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '0 sz=-2076362641'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('oG'))) BETWEEN ((('817979980')-('nI0'))) AND ((((((((('1328399831')OR(0.8375454659191974)))AND('\r꽏E<HSb?f')))OR('1884254237')))OR('2041911014')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY)>(x'' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN ((((NULL)<>('*''I')))) AND ((((0Xffffffffebaaabb2)OR(x'f546'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', '-1982790125 sz=1606284508 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=3923063 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((('T4柌', x'78a13173', '1293179177')) BETWEEN ((NULL, '', x'')) AND (('1662968117', '|', 0.4223189382915591))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE x''  WHEN NULL THEN 0X45b12a81 END)OR((- (x'')))))OR(NULL COLLATE NOCASE)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' unordered'); -- 4ms;
DELETE FROM sqlite_stat1 WHERE ((0.2617742552481436 IN ()) IN (((x'6db40ad6')<>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'ccc5' COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '998838063 unordered noskipscan'); -- 9ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', '-1216390615 -2099461318'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT NULLIF(x'', x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1661976561 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)<>('3hi''U-U>\n')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', '-990868394 sz=-396616895'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.06777031253942489) ISNULL))OR((('154121431') NOT NULL))))OR(((0.7669600194878002) BETWEEN (1131767565) AND ('-1090497633')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', '-1388251897 sz=1889613771'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '1108393648 sz=-1425066400 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' sz=849273879'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE BINARY THEN (~ ('')) ELSE ((x'dee209c4')|(0.5176200160491538)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'347d')OR(0.05770158784349244)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' sz=2001463209'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SUBSTR(-4124886, x'9f5b'))>>(CASE WHEN x'' THEN NULL ELSE 0xffffffffe5e3388d END)); -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' sz=693130877 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', '-2005361795 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' unordered noskipscan'); -- 6ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', '1555546660 sz=1930078332 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' sz=1664475733 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.972331126957068 COLLATE BINARY THEN CASE 0.3884883792745367  WHEN 1326971374 THEN NULL WHEN x'' THEN NULL WHEN NULL THEN 0.4835716044246553 ELSE 0.4735810614547953 END ELSE (+ (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1981208999')<=(CASE x''  WHEN NULL THEN '4.' ELSE 'rs' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-1099372896')>=('-1101093699')))AND(((0.5466228406052737)/('簳(*Jexxc%')))))AND(CAST(NULL AS BLOB))))OR((((-1232250907))<>((0.4198674326760464))))))AND(((((NULL)AND('')))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' sz=10284536 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')LIKE(x'6a90'))) BETWEEN (CASE WHEN x'' THEN '-1285475031' END) AND (((0.8424501046375719) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' sz=-868461444 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9825312510334276)=(x'')))IS NOT('0.36205725827076074')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1182073309 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.9021552135220828)) NOT BETWEEN ((NULL)) AND (('0.3316481379845131'))))==((('-1867833863')-(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', '154121431 0 sz=81048106'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((INSTR(NULL, x'')) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', '0 -1205541087 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((~ ('9PTCB{{~'))))==((((NULL)LIKE(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-17503076')>(924087618))  WHEN (+ (NULL)) THEN (('-5558530')||(x'')) WHEN NULL THEN CASE WHEN x'' THEN NULL END WHEN CASE 0.7651942023830275  WHEN -5.91852487E8 THEN 0xffffffffa58636cd WHEN '-1340673743' THEN 0.03915626553009155 WHEN '902077985' THEN '璷6' ELSE NULL END THEN (((('1616957273')OR(0.5051772513561228)))OR(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-973779899 sz=-2036703791 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0.5931196520029004 THEN NULL END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.17094600734866727, 0x4a4661f5, 0Xffffffff9f0b6aeb))>((x'f708', NULL, 0Xffffffff992f97df))))||('*^蜶l_i\nE')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' sz=-341136462 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0Xfffffffffd575db2) ISNULL)))<>((((('')) NOT BETWEEN ((NULL)) AND ((NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.9486192750122114 THEN '' ELSE x'' END) IS TRUE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) BETWEEN (((0.5710323287613916) BETWEEN (x'') AND (-1377551918))) AND (((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', '-990868394'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=4075982175988298020 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', '1916447254 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1951148445'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' sz=-129228821 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffb824e721; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', '0'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE (+ (TYPEOF(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 1.662968117E9 THEN 0X3677c280 END)!=((0.6437702295718899 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '-1517930803 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=495369345 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-254416934' AS BLOB))%('-880523531')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1505850254; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7231233013003217))<((NULL)))) NOT BETWEEN ((+ (-2117999860))) AND (NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' sz=1115112576 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0X9cedf8))>((NULL))))!=((+ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('7\ns![kM')))IS(('!D6#3}' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.35917634436454837; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NOT (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1478132742))==(('106190817'))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1438399194'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', '4 694940738 sz=-739053944 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=1992996503 noskipscan'); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object(CASE x''  WHEN 2107025836 THEN 0.6922339680040676 END, (- (x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' sz=-353078445'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.41747660434540124))) NOT BETWEEN ('') AND (CASE -1032002603  WHEN 0.843293108410181 THEN NULL ELSE '<m??' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' sz=-86716610 noskipscan'); -- 4ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.6336819923676457) IS TRUE) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' sz=650831969 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '76441548 -1533641496 sz=451139116 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3607264323863255)LIKE((('x(')<>(0.5421723007902113)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '2 0 sz=1439344487 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=1113735014'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' sz=1426792095 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' sz=2107025836'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=-1768030473 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' sz=-41677375 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' sz=-246166119 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('a5' IN (x'036559ed')))=(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '1200871430'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.09993188500095174)OR(x'')))AND(0.37278553155247807)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=-1822239967 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '0 sz=990003456 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) NOT BETWEEN ((((0.09942763272802857)) BETWEEN (('-1090790557')) AND ((x'255a')))) AND ((~ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' sz=-1776112427'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (NULL IN ())); -- 5ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'3062' COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '2 sz=-882699193'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-924116461 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'')GLOB('-1')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1402867272 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' sz=-146879306 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' sz=990003456 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '0 sz=-1655143496 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' sz=-553523137 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=-437323585 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('*b' COLLATE RTRIM)OR(((x'')<(x'')))))OR(((x'')IS NOT('-1138948044')))))AND(CASE NULL  WHEN x'' THEN NULL ELSE 'KB' END)))AND(x'a5cf')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' sz=1426792095 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', '1947760309 0 sz=1246126581 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1003324608 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.7301194122830089')=(0.29277512510766335)))!=('0.03915626553009155' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)IS('z 57/s7')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', '0 sz=-781644158 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((('-180414400')AND(x'')))OR('')))OR(x'')))AND('1400836609'))))<((((((NULL)OR(0.23933457536047376)))OR(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN ()))OR(NULL)))AND(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)OR('')))AND(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=-1626641685 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-548367492 1685867773 sz=-1942924031 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' sz=1483455630 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '-702593718 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-288166303 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((((((NULL)AND(0.07535618909898989)))OR(x'2d93')))AND(NULL)))OR(x'238b')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', '1945226164 sz=-1776112427 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS FALSE)) BETWEEN (((0.19227204520469832)+(0.3144008249968654))) AND ((((0.11952283309450862, 0Xffffffffbf00539f, x'0d72'))>((x'240b', x'', '6\]6ꍁc[vQ'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' sz=-1095721498'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '0 sz=-548367492 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('}>') NOT BETWEEN (NULL) AND (2030378232)))!=(json_extract(-2028217475, 0.2933368334111055, 0.9486192750122114, '-2042100278'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((x'' IN (NULL)))AND(((((x'79a2')AND(NULL)))OR(x'')))))AND(((-724375940)!=(4551205.0)))))OR(UNLIKELY(DISTINCT 0.6914408877447474))))OR(x'')))OR(CASE WHEN 0.41747660434540124 THEN '-518756700' ELSE 'I' END)))AND(CAST('-1626641685' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX((~ (NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) BETWEEN ((+ ('	DBB|t{P%'))) AND (((((0.41359688412988516)AND(x'')))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=1294878769 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' sz=-17503076'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' sz=421055247'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-961620497 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' sz=682667835 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (0.602907841349748)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object((NULL IN ()), ((((-2.07662185E8)AND(NULL)))AND(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' sz=1361671801 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '2 -165374078 sz=1891748435'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' unordered'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE (((x'1b82')) BETWEEN (((NULL IN (10284536, 0Xfffffffff3db7934)))) AND (((NOT (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('gO')<<(0.3833747978920442)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9433918924478215; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-45372024 -1344362129 sz=-1340673743 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '-1151965465 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1343457407 sz=-1982790125 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.7301194122830089'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (0.5002284643522142 IN (NULL))  WHEN 0.3343319771776616 COLLATE RTRIM THEN LOWER(DISTINCT x'8032') ELSE ((0.9486192750122114)&(0.8408334871794753)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((CASE NULL  WHEN '\r}' THEN x'' ELSE 0.4651487949357135 END)AND(((x'')<(1328399831)))))AND(((x'')*('O86m?qi^')))))AND(CAST(NULL AS INTEGER))))AND(CASE 0.606261289852845  WHEN 0.37361484922261556 THEN 'mO0' END)))OR((((x''))=(('/. ꒽'))))))OR(CASE WHEN '2107025836' THEN x'' WHEN x'0d96' THEN '-405386334' WHEN 0.29277512510766335 THEN 0.8308529139660242 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-1090497633'  WHEN 1679412149 THEN 1944321323 WHEN '-540108688' THEN NULL WHEN x'5815' THEN 0.429881714123049 END) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-47845799 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=774658561 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '2107025836 1710615549 sz=-2126903622 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '-276929033 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((IFNULL('-1454242428', NULL))) AND ((PRINTF('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOT BETWEEN (0.08887847878819533) AND (NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' sz=-668024529 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-327679976 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((x'')OR('2114214101')))OR(x'68cb')))OR(NULL)))OR('}>')))AND('166124313')))AND(0.4767669429672933))) BETWEEN (CAST('657675959' AS BLOB)) AND (((((0.8360015857199389)AND('887983603')))AND(0.0)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '0 sz=-908662375 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')<=('<mk?')))>=(('T4柌' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.25887568852095655) BETWEEN (NULL) AND (''))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '0 sz=-1878524455 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, x'57ab', '1916447254'))>=((x'3079', 'P~', NULL))))/(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1444323861'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-923815683 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 3ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0.6272288567277448 WHEN NULL THEN '1916447254' WHEN NULL THEN 0.3428792976561883 END)<>(CAST('XJIMl>*授5' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-450451455 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' sz=8683248'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-815817625 IN ()))AND(((-2005361795) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7281058265513759)&('0.8424501046375719')))<>((((x'', 0.939277545132807, 0.3789595526131677)) BETWEEN ((x'', NULL, x'9377')) AND ((NULL, NULL, x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '-1862452181 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=868584495 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '1679412149'  WHEN '194696555' THEN 0.6624953834133768 WHEN NULL THEN -1486873583 WHEN '-1090497633' THEN '1679412149' ELSE 0.6522832783217002 END)AND(((x'5543') BETWEEN (NULL) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT (NOT (0.8907879787280348))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '-992214801 2 sz=1328399831'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN '' THEN 0.5480460601309624 WHEN x'dc9a' THEN 847611133 WHEN '1059071190' THEN NULL ELSE '1171577129' END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffff8a0bba2f)!=(LOWER(DISTINCT '1003324608'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (416914819)))+(((0.4834002167227045)>(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '-942891251'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '0 0 sz=-798523088 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '-596151525 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' sz=563014387'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', '0 sz=1962959752 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'', '0.5253071019429386', '')) BETWEEN ((0.284387204722632, 3.52880982E8, 0.3044152801604605)) AND (('-794046394', '581684681', '-2086134769'))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' sz=322717946 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' sz=-2093456675 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-11965969 sz=1701776828 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN (0.6306440882060796) AND ('Mi')))/('')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('Ty')<<('0.4735810614547953')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' sz=1584289601'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' sz=2129450180 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(1.88103477E8 AS REAL)) NOT BETWEEN (((0.09844349514693485) BETWEEN ('1513012866') AND (x'2955'))) AND ((((x''))>=((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((((-955707989)OR(' y')))OR(x'0f88'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-22869240 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1129105481') NOTNULL) IN (((x'befd') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_SOURCE_ID())<=((('')>=(x'c159')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN ((('4075982175988298020')<<('9ptcb{{~'))) AND (LIKE(0x3fdff610, -2006264056, 'K'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' COLLATE RTRIM THEN CAST(0.7296935371874224 AS REAL) ELSE ((((((((0.4287872227682984)OR('')))AND(x'')))OR('SN')))AND(-1.101093699E9)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' sz=405274801'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', '1378205574 sz=-1823641765'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', '0 sz=-17503076 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x'f3d0')))>=(json(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' sz=4551205 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2059371957 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')<((((0.5675661374218155)) NOT BETWEEN ((1928488999)) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NULL IN (NULL)) THEN LIKE(0xffffffffeecfb477, '-1095127369', '驾') ELSE CASE WHEN 0.7590384541204748 THEN 0Xffffffffa5b91a95 ELSE x'2834' END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' sz=232972630 noskipscan'); -- 5ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0x3adf19a3, '0.09314691119750818')) BETWEEN (((NOT ('20')), (x'e672' IN ()), (('-832312040')*(x'dad8')))) AND ((((NULL)<('')), load_extension('J!'), CAST('1679412149' AS INTEGER)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NOT ('-548367492'))  WHEN ('989369192' IN ()) THEN (NULL IN ()) ELSE (('1299897867')<('㻟72IGOy')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' sz=1409296469 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.9256304632030357)OR(NULL)))OR(-1.867833863E9))))<((((x'')<=('-251712145'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) NOT BETWEEN (CASE NULL  WHEN 0xffffffff91e4c973 THEN NULL ELSE 0.6922339680040676 END) AND (((0.6437702295718899)&(0X6acc0eba)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=586468881 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL))GLOB(HEX(x'3290'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.23721005653446192 COLLATE RTRIM)<>(((((((((x'')AND(NULL)))AND('HqJeyrTS&')))OR('\r|<E-l}[')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' sz=1625633990 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 1.125671532E9  WHEN '1125671532' THEN x'f6df' ELSE 1.0284536E7 END)AND(UNLIKELY(DISTINCT 0x7fffffffffffffff))))OR(((NULL)<(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-932363436 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', '623633917 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('57M?nV8]/') BETWEEN (0X5b765741) AND ('D>')))==((NOT ('-1556672953')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', '0 0 sz=-825350484 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8674915237875358) NOT BETWEEN (0x83c3ccb) AND (NULL))))>(((+ ('-1e500'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=-702593718 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '973344731 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' sz=1142862186'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' sz=6244817 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('76441548')!=(0.7916871563953051)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' sz=472876372 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '-2130522405 sz=154121431 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '3?v'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('傧y9E')OR(NULL)))OR('*Y-!顰z')))AND(0.353680896686447)))OR(NULL)))IS((- (x'')))); -- 2ms;
DELETE FROM sqlite_stat1 WHERE CAST('-591852487' AS INTEGER) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.6510592654315049)AND('VY>]\2ev')))AND(NULL)))OR((- (x'')))))AND(((('657569785'))<((0X7d3a186c))))))AND(CASE WHEN '1237261953' THEN '\r' END)))OR(0xfffffffff496120a COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', '1479810543 sz=1178533319 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '0 sz=-1402867272'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' sz=1246126581 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((((x'', x'', 0.24665148857697006)) NOT BETWEEN (('1980992754', 'Ct><>D', NULL)) AND (('0.6336819923676457', '9l!׊[{8v]', '133336533'))))AND(CASE 0x31d2921a  WHEN 0.09587566725634733 THEN NULL WHEN '444595676' THEN 0.8983133678630956 WHEN NULL THEN -1053234708 ELSE x'' END)))OR((((NULL, 0.5002284643522142, '팖V'))>((x'', x'', NULL))))))OR(CASE WHEN 'n' THEN '0.37278553155247807' ELSE '653583321' END)))OR(1411405240)))OR(CASE NULL  WHEN x'd891' THEN '' END)))OR((('') IS TRUE))); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' sz=-1788568746'); -- 8ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '1293179177 sz=303394386 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', '1838240125 -63667569 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', '76441548 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' sz=-2082183754 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT BETWEEN ('0.8375454659191974') AND (NULL)))OR(((-1.05189197E9) NOTNULL))))AND(CASE WHEN x'8b88' THEN 0X631ee135 ELSE '-13125769' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' sz=-2052060812 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((+ ('1659981120')))OR((('')+(NULL)))))OR(((0.09955323760401191) ISNULL))))OR(((((((((-949793796)AND('Av?Y!ϭ%[')))OR(x'')))OR(x'617d')))AND('')))))AND(LIKE('625041663', '-1388251897'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' sz=64672694 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x''))<((0.04513891572023643)))  WHEN (~ ('0')) THEN (('-431662295') BETWEEN ('') AND (0.2181490403385531)) ELSE 0x1dd54984 END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1240864628 IN ()))OR(CAST(-288166303 AS BLOB))))OR(('Pt)AO-' IN (x'c8bb', x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '0 76794145 sz=-350341858 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('PZW') IS TRUE)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X7bb6d421 IN (0.2598162177678043))))<(((((0.3833747978920442)) NOT BETWEEN (('vackN]~')) AND ((0x7b4ec3de)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '1088962510 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('7\ns![km', ((((0Xffffffffb0cf3c5c)OR(NULL)))AND(x'dddf')), CASE WHEN -2126903622 THEN '1550725197' END))<=((((((x'f1e7ec0ad14f')OR(0.37959599657185383)))OR(NULL)), ((('')) BETWEEN ((x'')) AND ((NULL))), ((0X597160ec) BETWEEN (x'3a4a') AND ('*UI['))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1315840981')AND('<\r&u#u.X')))AND('-1090497633')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=-518756700'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(((0.2012711003752703) IS TRUE), ((1.250789174E9) IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1246126581 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' sz=4551205'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '393833395 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' sz=-2126903622 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (NULL) AND (x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '1685867773 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1973334279'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=1875364158 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-17503076' COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', '0 -43703578 sz=-1640325389'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN CAST(NULL AS TEXT) WHEN CAST(x'f87b' AS NUMERIC) THEN CASE WHEN 447733101 THEN NULL WHEN NULL THEN 0X730aa87c WHEN x'' THEN 1.131767565E9 ELSE NULL END WHEN ('ẟ[~l#%' IN ()) THEN (((('S''36')AND(0xfffffffff29339a9)))AND(0.41548009316441237)) ELSE 0xfffffffffb4948fc COLLATE BINARY END; -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '-96179451 1367205021'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN 0.6994832086691233 END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (ABS(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)+('1916447254')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1205541087' AS REAL))|(('誆?X' IN ()))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', '-1798290325 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '328472660 sz=1668034197 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' unordered'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=601424673 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1108393648'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=-1789020421 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' sz=1679412149 noskipscan'); -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' sz=-1311493721 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=2000982744 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1426792095 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=409846088 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=413427113 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', '-518756700 sz=-527273657 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.028945604345215425) BETWEEN ('g69#ONB') AND (NULL)) THEN (0.8424501046375719 IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '518566451 sz=106512880 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=2028914476'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(0.6459877711395886, NULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=991320036'); -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', '-207662185 sz=-1205541087 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' sz=-1573303043 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(CAST(0.5516091236429478 AS TEXT)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', '0 2 sz=-857052912 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' sz=2010496859'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ROUND('-551349293', NULL))==((('0.9778359139190607') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-9223372036854775808 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')%(json_insert(x'', NULL, 0.8401281802093421))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=2128715720'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', '126404017 sz=-984583095 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1888364069) ISNULL)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' sz=-267935735'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=-1378442988 unordered noskipscan'); -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL)))==(CASE 0.9394170440891132  WHEN '1815377079' THEN 0.3680790224693936 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-685960671 sz=-1841595641 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '0 sz=226048448 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8337073315316025 COLLATE BINARY) BETWEEN ((('')/('-648140726'))) AND (((NULL)<=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1423441314 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' sz=-1278311679 unordered noskipscan'); -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=264278147 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=-180414400 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' sz=-928602766'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-2005361795 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5447203793815553)|((('1349169573') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' sz=-1654891851 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 0 sz=657569785 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', '-858569133 4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', '-684132602'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' sz=-133103531 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX(CASE '-1729508305'  WHEN 0x92fb4d7 THEN '-288166303' ELSE x'971f' END, CAST('1997169920' AS NUMERIC), (((0.8476453185325965))<>((x'4ef1'))), (- (0x765362a6)), CAST(0.6151609879194583 AS TEXT), ((NULL) BETWEEN ('VisFaU') AND (0.31354974410730807))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'NG'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('k>')OR(0.2958001121927175)))>>(UPPER(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1454175273'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' sz=-1321421664 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1977127846' AS INTEGER))<=(((NULL) BETWEEN ('~<') AND ('*Y-!顰z')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((574997143)AND(NULL)))AND('-1747462356')))AND(CAST(1547810264 AS NUMERIC))))AND(CAST('-731788311' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' sz=680571419 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-1493412680 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', '0 sz=1461024437'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '154121431'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '1566019941 sz=884732259 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '2 sz=-960118500 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('-1415835409')AND(0.2982000419053227)))AND('[~r5zM*(豲')))AND(NULL)))AND(x'')) IN (CASE 0xffffffff864805ca  WHEN 0.050970032394103804 THEN '-1232193199' ELSE x'0e93' END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)) NOT BETWEEN ((NULL)) AND ((0Xffffffffe9827bc3))))OR(((1099933063)<(x'')))))AND(((((((((-887708471)OR(0x62b7a407)))OR(x'')))OR(0Xffffffffbeb09de6)))AND('0.7651942023830275')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '2'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=-2033114216 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1001523350 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=335893660 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1361671801 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 0 sz=935072067 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' sz=355732778 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '-1963078328 sz=-1318123641 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0X15088956))>=(('1792005501'))) THEN ((((NULL)OR('898021191')))AND('B')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i14', ' sz=-815817625 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' sz=-133103531 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', '1692705996 noskipscan'); -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', ' sz=1348345227 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.6802776946584044  WHEN CASE WHEN x'' THEN x'' ELSE '' END THEN x'ab7d' COLLATE BINARY WHEN ((0Xffffffff9b31e70f)LIKE(x'')) THEN ((NULL) NOT BETWEEN ('-448666255') AND (0.8824841961372395)) WHEN ((x'') NOTNULL) THEN (('447733101') NOTNULL) WHEN CASE x'bc6a6f03'  WHEN 0.33507060995562643 THEN 0.32427290945786247 WHEN 1815377079 THEN '405274801' WHEN 'mfH' THEN 0Xffffffffffffffff ELSE NULL END THEN (('-550070307')<<('S''36')) WHEN 0.48607822505893017 THEN x'1ed5' COLLATE NOCASE ELSE CAST(NULL AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('599172688')<>(0.5687316144217488)))+(((x'') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i14', '-815817625 sz=-402596491'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE '짺9ደ{'  WHEN '4<&A[+K\B' THEN NULL END THEN (('1286814952') NOT BETWEEN (0.12047466873783852) AND (NULL)) WHEN ((((0.19667204771651936)AND('')))OR(813091845)) THEN ((x'')LIKE(0.7705053204820178)) WHEN ((((x'')OR(x'')))AND(0xffffffffc75f3a42)) THEN ('-920238898' IN ()) ELSE CASE x''  WHEN 'g' THEN NULL END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=2028270115 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-990868394'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' sz=1668034197'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1291188765'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-118686715 1980992754 sz=-591852487 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', '-1051891970 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i96', ' sz=-1193374322'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')OR(((((0.42443694393443043)AND(0.10264854914458843)))AND('-1587734811')))))AND(((NULL) NOTNULL))))AND((((x'f313')) BETWEEN ((NULL)) AND (('1708775279'))))))OR(LIKELIHOOD(DISTINCT NULL, 0.15605995541425377))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((0.6914408877447474)) AND ((0.24665148857697006))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (x'')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 5ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN 0.9358736730404106 THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'be4c'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((249543843) NOT NULL) IN (1056337733)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)<((('X') IS FALSE))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '2 sz=-862273207 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '1438438195'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LIKELIHOOD(x'', 0.607428796295731) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i96', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7097487970516099)&('b')))LIKE((((0.10533585642517906))=(('gO'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i96', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i14', '-1056179194 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1855005672 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=1513012866 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL), ('0.30375750283892455'), (x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 3ms;
UPDATE t1 SET (c2)=(x'cce537af') WHERE NULL; -- 1ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.3018875997830053, 's+뎣&9rT9i'); -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=(0.029785236202297005) WHERE (t1.c1 IN ()); -- 3ms;
ANALYZE main; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 1ms;
REINDEX; -- 0ms;
UPDATE OR ABORT vt0 SET c0='-207662185' WHERE (((vt0.c0)) NOT BETWEEN (((+ (vt0.c0)))) AND (((- (vt0.c0))))); -- 4ms;
END; -- 0ms;
CREATE INDEX i73 ON t1(CAST(CAST(c18 AS NUMERIC) AS TEXT) COLLATE RTRIM DESC,((((c18) NOT BETWEEN (c18) AND (c1)))|(((c18) NOT BETWEEN (c2) AND (c18)))),((CAST(c0 AS INTEGER)) NOT BETWEEN ((((c0, c2, c1))>((c2, c0, c1)))) AND (c1 COLLATE RTRIM)),((CASE WHEN c2 THEN c0 END) BETWEEN (CAST(c0 AS NUMERIC)) AND (((c1) NOT NULL)))) WHERE ((c18)GLOB((c1 IN ()))); -- 1ms;
UPDATE OR IGNORE t1 SET (c2)=(x'') WHERE ((t1.c1 COLLATE BINARY)OR((((t1.c0, '', '-935639254')) BETWEEN ((t1.c0, t1.c18, 0.43616639322573436)) AND ((t1.c0, t1.c0, t1.c1))))); -- 0ms;
ROLLBACK TRANSACTION; -- 5ms;
ANALYZE sqlite_master; -- 1ms;
UPDATE vt1 SET c0=1433268829; -- 0ms;
DELETE FROM t1 WHERE -1.7503076E7; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(1503735854, 0xffffffffa97bcae3) WHERE rtreenode(vt1.c0, vt1.c0) COLLATE RTRIM; -- 0ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE t1 SET c2='0.15036391345871458'; -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
PRAGMA main.journal_mode; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '49506'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE t1 SET c2='c-', c0='p', c2=-1953496444 WHERE ((CAST(t1.c18 AS TEXT))==(((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c0)))); -- 3ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 7); -- 2ms;
INSERT INTO vt0(vt0) VALUES('merge=-1282563075,15');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '3859'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=657675959,11');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '686'); -- 0ms;
PRAGMA main.automatic_index; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA main.threads = -6338735098714522685; -- 0ms;
UPDATE OR REPLACE t1 SET c2=0.621714643740958, c1=NULL, c18=x'' WHERE t1.c1; -- 3ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 INT ); -- 6ms;
PRAGMA temp.wal_autocheckpoint; -- 1ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (0.07130927262613562); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX i73; -- 0ms;
COMMIT; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0, vt1 WHERE (SUBSTR(((vt1.c0)<<(vt0.c0)), ((vt1.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((vt1.c0)<<(vt0.c0)), ((vt1.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (SUBSTR(((vt1.c0)<<(vt0.c0)), ((vt1.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((vt1.c0)<<(vt0.c0)), ((vt1.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (SUBSTR(((vt1.c0)<<(vt0.c0)), ((vt1.c0)<<(vt0.c0))));
SELECT COUNT(*) FROM t1, v0, vt1 WHERE (((((t1.c1) IS TRUE))AND(((((((((v0.c0)AND(t1.c18)))OR(vt1.c0)))OR(t1.c1)))OR(t1.c1))))) ORDER BY (- (t1.c1)) DESC, ((t1.c0) BETWEEN (t1.c18) AND (vt1.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c1) IS TRUE))AND(((((((((v0.c0)AND(t1.c18)))OR(vt1.c0)))OR(t1.c1)))OR(t1.c1))))) IS TRUE)  as count FROM t1, v0, vt1 ORDER BY (- (t1.c1)) DESC, ((t1.c0) BETWEEN (t1.c18) AND (vt1.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t1, v0, vt1 WHERE (((((t1.c1) IS TRUE))AND(((((((((v0.c0)AND(t1.c18)))OR(vt1.c0)))OR(t1.c1)))OR(t1.c1))))) ORDER BY (- (t1.c1)) DESC, ((t1.c0) BETWEEN (t1.c18) AND (vt1.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c1) IS TRUE))AND(((((((((v0.c0)AND(t1.c18)))OR(vt1.c0)))OR(t1.c1)))OR(t1.c1))))) IS TRUE)  as count FROM t1, v0, vt1 ORDER BY (- (t1.c1)) DESC, ((t1.c0) BETWEEN (t1.c18) AND (vt1.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t1, v0, vt1 WHERE (((((t1.c1) IS TRUE))AND(((((((((v0.c0)AND(t1.c18)))OR(vt1.c0)))OR(t1.c1)))OR(t1.c1))))) ORDER BY (- (t1.c1)) DESC, ((t1.c0) BETWEEN (t1.c18) AND (vt1.c0)) COLLATE NOCASE DESC;
SELECT * FROM t0, v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN t0.c0 END)|(((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN t0.c0 END)|(((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN t0.c0 END)|(((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN t0.c0 END)|(((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN t0.c0 END)|(((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))))) ORDER BY v0.c0  NULLS LAST;
SELECT * FROM vt1, v0, vt0, t0 WHERE (LIKE(ABS(v0.c0), ((t0.c0) NOT NULL))) ORDER BY (((x'')) NOT BETWEEN ((((((0.5957363531540069)OR(t0.c0)))AND(t0.c0)))) AND (((+ (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE(ABS(v0.c0), ((t0.c0) NOT NULL))) IS TRUE)  as count FROM vt1, v0, vt0, t0 ORDER BY (((x'')) NOT BETWEEN ((((((0.5957363531540069)OR(t0.c0)))AND(t0.c0)))) AND (((+ (vt0.c0)))))  NULLS LAST);
SELECT * FROM vt1, v0, vt0, t0 WHERE (LIKE(ABS(v0.c0), ((t0.c0) NOT NULL))) ORDER BY (((x'')) NOT BETWEEN ((((((0.5957363531540069)OR(t0.c0)))AND(t0.c0)))) AND (((+ (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE(ABS(v0.c0), ((t0.c0) NOT NULL))) IS TRUE)  as count FROM vt1, v0, vt0, t0 ORDER BY (((x'')) NOT BETWEEN ((((((0.5957363531540069)OR(t0.c0)))AND(t0.c0)))) AND (((+ (vt0.c0)))))  NULLS LAST);
SELECT * FROM vt1, v0, vt0, t0 WHERE (LIKE(ABS(v0.c0), ((t0.c0) NOT NULL))) ORDER BY (((x'')) NOT BETWEEN ((((((0.5957363531540069)OR(t0.c0)))AND(t0.c0)))) AND (((+ (vt0.c0)))))  NULLS LAST;
SELECT * FROM v0, vt0, vt1 CROSS JOIN t1 ON ((vt0.c0 COLLATE NOCASE)+(((t0.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) CROSS JOIN t0 ON t1.c0 WHERE (((((t1.c0) IS TRUE))>((((t1.c0, x'', v0.c0))=((t1.c2, t1.c1, v0.c0)))))) ORDER BY CAST(((t1.c1) BETWEEN (t1.c1) AND (v0.c0)) AS TEXT) ASC  NULLS LAST, LOWER(DISTINCT (t1.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) IS TRUE))>((((t1.c0, x'', v0.c0))==((t1.c2, t1.c1, v0.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1 CROSS JOIN t1 ON ((vt0.c0 COLLATE NOCASE)+(((t0.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) CROSS JOIN t0 ON t1.c0 ORDER BY CAST(((t1.c1) BETWEEN (t1.c1) AND (v0.c0)) AS TEXT) ASC  NULLS LAST, LOWER(DISTINCT (t1.c0 IN ()))  NULLS LAST);
SELECT * FROM v0, vt0, vt1 CROSS JOIN t1 ON ((vt0.c0 COLLATE NOCASE)+(((t0.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) CROSS JOIN t0 ON t1.c0 WHERE (((((t1.c0) IS TRUE))>((((t1.c0, x'', v0.c0))=((t1.c2, t1.c1, v0.c0)))))) ORDER BY CAST(((t1.c1) BETWEEN (t1.c1) AND (v0.c0)) AS TEXT) ASC  NULLS LAST, LOWER(DISTINCT (t1.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) IS TRUE))>((((t1.c0, x'', v0.c0))==((t1.c2, t1.c1, v0.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1 CROSS JOIN t1 ON ((vt0.c0 COLLATE NOCASE)+(((t0.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) CROSS JOIN t0 ON t1.c0 ORDER BY CAST(((t1.c1) BETWEEN (t1.c1) AND (v0.c0)) AS TEXT) ASC  NULLS LAST, LOWER(DISTINCT (t1.c0 IN ()))  NULLS LAST);
SELECT * FROM v0, vt0, vt1 CROSS JOIN t1 ON ((vt0.c0 COLLATE NOCASE)+(((t0.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) CROSS JOIN t0 ON t1.c0 WHERE (((((t1.c0) IS TRUE))>((((t1.c0, x'', v0.c0))=((t1.c2, t1.c1, v0.c0)))))) ORDER BY CAST(((t1.c1) BETWEEN (t1.c1) AND (v0.c0)) AS TEXT) ASC  NULLS LAST, LOWER(DISTINCT (t1.c0 IN ()))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t1, t0, vt0, vt1 WHERE (((((vt0.c0) IS FALSE))%((t1.c2 IN (vt1.c0))))) ORDER BY (((~ (t0.c0)))OR(t1.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))%((t1.c2 IN (vt1.c0))))) IS TRUE)  as count FROM v0, t1, t0, vt0, vt1 ORDER BY (((~ (t0.c0)))OR(t1.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1, t0, vt0, vt1 WHERE (((((vt0.c0) IS FALSE))%((t1.c2 IN (vt1.c0))))) ORDER BY (((~ (t0.c0)))OR(t1.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))%((t1.c2 IN (vt1.c0))))) IS TRUE)  as count FROM v0, t1, t0, vt0, vt1 ORDER BY (((~ (t0.c0)))OR(t1.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1, t0, vt0, vt1 WHERE (((((vt0.c0) IS FALSE))%((t1.c2 IN (vt1.c0))))) ORDER BY (((~ (t0.c0)))OR(t1.c1)) ASC  NULLS FIRST;
SELECT * FROM vt0, t1, v0 LEFT OUTER JOIN vt1 ON ((v0.c0 COLLATE BINARY)+(((((t1.c2)AND(t1.c1)))OR(v0.c0)))) WHERE ((((+ (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t1, v0 LEFT OUTER JOIN vt1 ON ((v0.c0 COLLATE BINARY)+(((((t1.c2)AND(t1.c1)))OR(v0.c0)))));
SELECT * FROM vt0, t1, v0 LEFT OUTER JOIN vt1 ON ((v0.c0 COLLATE BINARY)+(((((t1.c2)AND(t1.c1)))OR(v0.c0)))) WHERE ((((+ (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t1, v0 LEFT OUTER JOIN vt1 ON ((v0.c0 COLLATE BINARY)+(((((t1.c2)AND(t1.c1)))OR(v0.c0)))));
SELECT * FROM vt0, t1, v0 LEFT OUTER JOIN vt1 ON ((v0.c0 COLLATE BINARY)+(((((t1.c2)AND(t1.c1)))OR(v0.c0)))) WHERE ((((+ (v0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON ((('1246126581', t1.c18, v0.c0, t1.c0, t1.c0)) NOT BETWEEN ((0.7031311073204123, NULL, ((t0.c0) NOTNULL), (- (t1.c18)), CASE t0.c0  WHEN t1.c2 THEN t1.c2 WHEN t1.c18 THEN NULL WHEN v0.c0 THEN t0.c0 ELSE t1.c1 END)) AND ((((t0.c0) IS FALSE), t1.c18, t1.c2 COLLATE RTRIM, ((t1.c18) IS TRUE), ((v0.c0)OR(t1.c0))))) INNER JOIN t1 ON (((CASE WHEN t1.c18 THEN t1.c0 ELSE t1.c18 END))>((CAST(t1.c1 AS BLOB)))) WHERE (CASE WHEN ((t1.c1) NOTNULL) THEN CAST(v0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c1) NOTNULL) THEN CAST(v0.c0 AS BLOB) END) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((('1246126581', t1.c18, v0.c0, t1.c0, t1.c0)) NOT BETWEEN ((0.7031311073204123, NULL, ((t0.c0) NOTNULL), (- (t1.c18)), CASE t0.c0  WHEN t1.c2 THEN t1.c2 WHEN t1.c18 THEN NULL WHEN v0.c0 THEN t0.c0 ELSE t1.c1 END)) AND ((((t0.c0) IS FALSE), t1.c18, t1.c2 COLLATE RTRIM, ((t1.c18) IS TRUE), ((v0.c0)OR(t1.c0))))) INNER JOIN t1 ON (((CASE WHEN t1.c18 THEN t1.c0 ELSE t1.c18 END))>((CAST(t1.c1 AS BLOB)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON ((('1246126581', t1.c18, v0.c0, t1.c0, t1.c0)) NOT BETWEEN ((0.7031311073204123, NULL, ((t0.c0) NOTNULL), (- (t1.c18)), CASE t0.c0  WHEN t1.c2 THEN t1.c2 WHEN t1.c18 THEN NULL WHEN v0.c0 THEN t0.c0 ELSE t1.c1 END)) AND ((((t0.c0) IS FALSE), t1.c18, t1.c2 COLLATE RTRIM, ((t1.c18) IS TRUE), ((v0.c0)OR(t1.c0))))) INNER JOIN t1 ON (((CASE WHEN t1.c18 THEN t1.c0 ELSE t1.c18 END))>((CAST(t1.c1 AS BLOB)))) WHERE (CASE WHEN ((t1.c1) NOTNULL) THEN CAST(v0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c1) NOTNULL) THEN CAST(v0.c0 AS BLOB) END) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((('1246126581', t1.c18, v0.c0, t1.c0, t1.c0)) NOT BETWEEN ((0.7031311073204123, NULL, ((t0.c0) NOTNULL), (- (t1.c18)), CASE t0.c0  WHEN t1.c2 THEN t1.c2 WHEN t1.c18 THEN NULL WHEN v0.c0 THEN t0.c0 ELSE t1.c1 END)) AND ((((t0.c0) IS FALSE), t1.c18, t1.c2 COLLATE RTRIM, ((t1.c18) IS TRUE), ((v0.c0)OR(t1.c0))))) INNER JOIN t1 ON (((CASE WHEN t1.c18 THEN t1.c0 ELSE t1.c18 END))>((CAST(t1.c1 AS BLOB)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON ((('1246126581', t1.c18, v0.c0, t1.c0, t1.c0)) NOT BETWEEN ((0.7031311073204123, NULL, ((t0.c0) NOTNULL), (- (t1.c18)), CASE t0.c0  WHEN t1.c2 THEN t1.c2 WHEN t1.c18 THEN NULL WHEN v0.c0 THEN t0.c0 ELSE t1.c1 END)) AND ((((t0.c0) IS FALSE), t1.c18, t1.c2 COLLATE RTRIM, ((t1.c18) IS TRUE), ((v0.c0)OR(t1.c0))))) INNER JOIN t1 ON (((CASE WHEN t1.c18 THEN t1.c0 ELSE t1.c18 END))>((CAST(t1.c1 AS BLOB)))) WHERE (CASE WHEN ((t1.c1) NOTNULL) THEN CAST(v0.c0 AS BLOB) END);
SELECT * FROM t0 WHERE (0.634659493584243);
SELECT SUM(count) FROM (SELECT ((0.634659493584243) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0.634659493584243);
SELECT SUM(count) FROM (SELECT ((0.634659493584243) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0.634659493584243);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((t0.c0) BETWEEN (t1.c18) AND (vt1.c0))) IS TRUE) CROSS JOIN t0 ON ((0Xffffffff9d5883b8)+((t1.c0 IN ()))) INNER JOIN v0 ON (NOT (((t1.c0)IS(t1.c0)))) INNER JOIN t1 ON ((((t1.c1) IS TRUE))+(CASE WHEN NULL THEN t1.c2 END)) WHERE (((vt0.c0 COLLATE RTRIM)GLOB(CASE t0.c0  WHEN t1.c2 THEN t1.c1 ELSE t1.c18 END))) ORDER BY ((((((t0.c0) NOT BETWEEN (t1.c18) AND (t1.c2)))OR(CASE WHEN t1.c2 THEN 0.7266567687329709 WHEN t1.c1 THEN t1.c1 WHEN t1.c18 THEN t1.c18 ELSE t1.c2 END)))OR((((t1.c2))>((t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)GLOB(CASE t0.c0  WHEN t1.c2 THEN t1.c1 ELSE t1.c18 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((t0.c0) BETWEEN (t1.c18) AND (vt1.c0))) IS TRUE) CROSS JOIN t0 ON ((0Xffffffff9d5883b8)+((t1.c0 IN ()))) INNER JOIN v0 ON (NOT (((t1.c0)IS(t1.c0)))) INNER JOIN t1 ON ((((t1.c1) IS TRUE))+(CASE WHEN NULL THEN t1.c2 END)) ORDER BY ((((((t0.c0) NOT BETWEEN (t1.c18) AND (t1.c2)))OR(CASE WHEN t1.c2 THEN 0.7266567687329709 WHEN t1.c1 THEN t1.c1 WHEN t1.c18 THEN t1.c18 ELSE t1.c2 END)))OR((((t1.c2))>((t0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((t0.c0) BETWEEN (t1.c18) AND (vt1.c0))) IS TRUE) CROSS JOIN t0 ON ((0Xffffffff9d5883b8)+((t1.c0 IN ()))) INNER JOIN v0 ON (NOT (((t1.c0)IS(t1.c0)))) INNER JOIN t1 ON ((((t1.c1) IS TRUE))+(CASE WHEN NULL THEN t1.c2 END)) WHERE (((vt0.c0 COLLATE RTRIM)GLOB(CASE t0.c0  WHEN t1.c2 THEN t1.c1 ELSE t1.c18 END))) ORDER BY ((((((t0.c0) NOT BETWEEN (t1.c18) AND (t1.c2)))OR(CASE WHEN t1.c2 THEN 0.7266567687329709 WHEN t1.c1 THEN t1.c1 WHEN t1.c18 THEN t1.c18 ELSE t1.c2 END)))OR((((t1.c2))>((t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)GLOB(CASE t0.c0  WHEN t1.c2 THEN t1.c1 ELSE t1.c18 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((t0.c0) BETWEEN (t1.c18) AND (vt1.c0))) IS TRUE) CROSS JOIN t0 ON ((0Xffffffff9d5883b8)+((t1.c0 IN ()))) INNER JOIN v0 ON (NOT (((t1.c0)IS(t1.c0)))) INNER JOIN t1 ON ((((t1.c1) IS TRUE))+(CASE WHEN NULL THEN t1.c2 END)) ORDER BY ((((((t0.c0) NOT BETWEEN (t1.c18) AND (t1.c2)))OR(CASE WHEN t1.c2 THEN 0.7266567687329709 WHEN t1.c1 THEN t1.c1 WHEN t1.c18 THEN t1.c18 ELSE t1.c2 END)))OR((((t1.c2))>((t0.c0))))) DESC);
SELECT * FROM t1, vt1, v0, vt0, t0 WHERE (((((t1.c2) NOT NULL)) NOT BETWEEN (((t1.c1)IS NOT(vt0.c0))) AND ((- (t1.c18)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOT NULL)) NOT BETWEEN (((t1.c1)IS NOT(vt0.c0))) AND ((- (t1.c18))))) IS TRUE)  as count FROM t1, vt1, v0, vt0, t0);
SELECT * FROM t1, vt1, v0, vt0, t0 WHERE (((((t1.c2) NOT NULL)) NOT BETWEEN (((t1.c1)IS NOT(vt0.c0))) AND ((- (t1.c18)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOT NULL)) NOT BETWEEN (((t1.c1)IS NOT(vt0.c0))) AND ((- (t1.c18))))) IS TRUE)  as count FROM t1, vt1, v0, vt0, t0);
SELECT * FROM t1, vt1, v0, vt0, t0 WHERE (((((t1.c2) NOT NULL)) NOT BETWEEN (((t1.c1)IS NOT(vt0.c0))) AND ((- (t1.c18)))));
SELECT * FROM v0, vt1 INNER JOIN t0 ON ((((t0.c0)AND(t0.c0)))OR(1.685867773E9)) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((vt0.c0)%(vt0.c0)) COLLATE BINARY LEFT OUTER JOIN t1 ON NULL WHERE (t1.c18);
SELECT SUM(count) FROM (SELECT ALL ((t1.c18) IS TRUE)  as count FROM v0, vt1 INNER JOIN t0 ON ((((t0.c0)AND(t0.c0)))OR(1.685867773E9)) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((vt0.c0)%(vt0.c0)) COLLATE BINARY LEFT OUTER JOIN t1 ON NULL);
SELECT * FROM v0, vt1 INNER JOIN t0 ON ((((t0.c0)AND(t0.c0)))OR(1.685867773E9)) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((vt0.c0)%(vt0.c0)) COLLATE BINARY LEFT OUTER JOIN t1 ON NULL WHERE (t1.c18);
SELECT SUM(count) FROM (SELECT ALL ((t1.c18) IS TRUE)  as count FROM v0, vt1 INNER JOIN t0 ON ((((t0.c0)AND(t0.c0)))OR(1.685867773E9)) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((vt0.c0)%(vt0.c0)) COLLATE BINARY LEFT OUTER JOIN t1 ON NULL);
SELECT * FROM v0, vt1 INNER JOIN t0 ON ((((t0.c0)AND(t0.c0)))OR(1.685867773E9)) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((vt0.c0)%(vt0.c0)) COLLATE BINARY LEFT OUTER JOIN t1 ON NULL WHERE (t1.c18);
SELECT * FROM vt0, vt1, v0 WHERE (v0.c0) ORDER BY ((((TRIM(vt1.c0, v0.c0))AND(((vt0.c0) NOT NULL))))OR(((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((((TRIM(vt1.c0, v0.c0))AND(((vt0.c0) NOT NULL))))OR(((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) DESC);
SELECT * FROM vt0, vt1, v0 WHERE (v0.c0) ORDER BY ((((TRIM(vt1.c0, v0.c0))AND(((vt0.c0) NOT NULL))))OR(((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((((TRIM(vt1.c0, v0.c0))AND(((vt0.c0) NOT NULL))))OR(((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) DESC);
SELECT * FROM vt0, vt1, v0 WHERE (v0.c0) ORDER BY ((((TRIM(vt1.c0, v0.c0))AND(((vt0.c0) NOT NULL))))OR(((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) DESC;
SELECT * FROM v0 RIGHT OUTER JOIN vt1 ON (((v0.c0 IN (vt0.c0, t1.c1))) NOT BETWEEN ((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c2)))) AND (((((0Xffffffffdcb90c39)AND(t1.c1)))AND(t1.c18)))) INNER JOIN t0 ON (((v0.c0 IN ()))<(CASE t1.c0  WHEN t1.c2 THEN t1.c2 END)) INNER JOIN t1 ON x'34d4' LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ()))<(((v0.c0)+(t1.c0)))) WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN x'01b2' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)+(CASE t0.c0  WHEN t1.c0 THEN t1.c18 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END))) ORDER BY (CASE WHEN vt1.c0 THEN vt0.c0 WHEN t1.c1 THEN vt0.c0 WHEN t0.c0 THEN t1.c1 ELSE t1.c0 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN x'01b2' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)+(CASE t0.c0  WHEN t1.c0 THEN t1.c18 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (((v0.c0 IN (vt0.c0, t1.c1))) NOT BETWEEN ((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c2)))) AND (((((0Xffffffffdcb90c39)AND(t1.c1)))AND(t1.c18)))) INNER JOIN t0 ON (((v0.c0 IN ()))<(CASE t1.c0  WHEN t1.c2 THEN t1.c2 END)) INNER JOIN t1 ON x'34d4' LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ()))<(((v0.c0)+(t1.c0)))) ORDER BY (CASE WHEN vt1.c0 THEN vt0.c0 WHEN t1.c1 THEN vt0.c0 WHEN t0.c0 THEN t1.c1 ELSE t1.c0 END IN ()) DESC  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN vt1 ON (((v0.c0 IN (vt0.c0, t1.c1))) NOT BETWEEN ((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c2)))) AND (((((0Xffffffffdcb90c39)AND(t1.c1)))AND(t1.c18)))) INNER JOIN t0 ON (((v0.c0 IN ()))<(CASE t1.c0  WHEN t1.c2 THEN t1.c2 END)) INNER JOIN t1 ON x'34d4' LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ()))<(((v0.c0)+(t1.c0)))) WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN x'01b2' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)+(CASE t0.c0  WHEN t1.c0 THEN t1.c18 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END))) ORDER BY (CASE WHEN vt1.c0 THEN vt0.c0 WHEN t1.c1 THEN vt0.c0 WHEN t0.c0 THEN t1.c1 ELSE t1.c0 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN x'01b2' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)+(CASE t0.c0  WHEN t1.c0 THEN t1.c18 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (((v0.c0 IN (vt0.c0, t1.c1))) NOT BETWEEN ((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c2)))) AND (((((0Xffffffffdcb90c39)AND(t1.c1)))AND(t1.c18)))) INNER JOIN t0 ON (((v0.c0 IN ()))<(CASE t1.c0  WHEN t1.c2 THEN t1.c2 END)) INNER JOIN t1 ON x'34d4' LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ()))<(((v0.c0)+(t1.c0)))) ORDER BY (CASE WHEN vt1.c0 THEN vt0.c0 WHEN t1.c1 THEN vt0.c0 WHEN t0.c0 THEN t1.c1 ELSE t1.c0 END IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1 RIGHT OUTER JOIN t0 ON (((t1.c0 IN (t1.c18, v0.c0))) NOT BETWEEN (CAST(t1.c2 AS TEXT)) AND (CAST(t0.c0 AS REAL))) WHERE (ABS(v0.c0) COLLATE RTRIM) ORDER BY (((((((t1.c18))<>((t1.c1))))OR(t1.c18)))OR(((t1.c18)>=(t1.c18)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0, t1 RIGHT OUTER JOIN t0 ON (((t1.c0 IN (t1.c18, v0.c0))) NOT BETWEEN (CAST(t1.c2 AS TEXT)) AND (CAST(t0.c0 AS REAL))) ORDER BY (((((((t1.c18))<>((t1.c1))))OR(t1.c18)))OR(((t1.c18)>=(t1.c18)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1 RIGHT OUTER JOIN t0 ON (((t1.c0 IN (t1.c18, v0.c0))) NOT BETWEEN (CAST(t1.c2 AS TEXT)) AND (CAST(t0.c0 AS REAL))) WHERE (ABS(v0.c0) COLLATE RTRIM) ORDER BY (((((((t1.c18))<>((t1.c1))))OR(t1.c18)))OR(((t1.c18)>=(t1.c18)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0, t1 RIGHT OUTER JOIN t0 ON (((t1.c0 IN (t1.c18, v0.c0))) NOT BETWEEN (CAST(t1.c2 AS TEXT)) AND (CAST(t0.c0 AS REAL))) ORDER BY (((((((t1.c18))<>((t1.c1))))OR(t1.c18)))OR(((t1.c18)>=(t1.c18)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1 RIGHT OUTER JOIN t0 ON (((t1.c0 IN (t1.c18, v0.c0))) NOT BETWEEN (CAST(t1.c2 AS TEXT)) AND (CAST(t0.c0 AS REAL))) WHERE (ABS(v0.c0) COLLATE RTRIM) ORDER BY (((((((t1.c18))<>((t1.c1))))OR(t1.c18)))OR(((t1.c18)>=(t1.c18)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt1, v0, t0 WHERE (((((t1.c1)AND(t1.c2)))AND(t1.c2)) COLLATE RTRIM) ORDER BY (((((t1.c1) IS TRUE)))!=((NULLIF(DISTINCT t0.c0, t1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c1)AND(t1.c2)))AND(t1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt1, v0, t0 ORDER BY (((((t1.c1) IS TRUE)))!=((NULLIF(DISTINCT t0.c0, t1.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1, v0, t0 WHERE (((((t1.c1)AND(t1.c2)))AND(t1.c2)) COLLATE RTRIM) ORDER BY (((((t1.c1) IS TRUE)))!=((NULLIF(DISTINCT t0.c0, t1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c1)AND(t1.c2)))AND(t1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt1, v0, t0 ORDER BY (((((t1.c1) IS TRUE)))!=((NULLIF(DISTINCT t0.c0, t1.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1, v0, t0 WHERE (((((t1.c1)AND(t1.c2)))AND(t1.c2)) COLLATE RTRIM) ORDER BY (((((t1.c1) IS TRUE)))!=((NULLIF(DISTINCT t0.c0, t1.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt1, vt0, v0 WHERE (((((((t1.c18)AND(v0.c0)))OR(vt1.c0)))>((((t1.c1)) BETWEEN ((t1.c18)) AND ((vt0.c0)))))) ORDER BY CAST((+ (t1.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c18)AND(v0.c0)))OR(vt1.c0)))>((((t1.c1)) BETWEEN ((t1.c18)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t1, vt1, vt0, v0 ORDER BY CAST((+ (t1.c2)) AS NUMERIC));
SELECT COUNT(*) FROM t1, vt1, vt0, v0 WHERE (((((((t1.c18)AND(v0.c0)))OR(vt1.c0)))>((((t1.c1)) BETWEEN ((t1.c18)) AND ((vt0.c0)))))) ORDER BY CAST((+ (t1.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c18)AND(v0.c0)))OR(vt1.c0)))>((((t1.c1)) BETWEEN ((t1.c18)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t1, vt1, vt0, v0 ORDER BY CAST((+ (t1.c2)) AS NUMERIC));
SELECT COUNT(*) FROM t1, vt1, vt0, v0 WHERE (((((((t1.c18)AND(v0.c0)))OR(vt1.c0)))>((((t1.c1)) BETWEEN ((t1.c18)) AND ((vt0.c0)))))) ORDER BY CAST((+ (t1.c2)) AS NUMERIC);
SELECT COUNT(*) FROM t1 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((+ (((t0.c0) IS FALSE)))) ORDER BY ((vt1.c0) NOTNULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((vt1.c0) NOTNULL) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((+ (((t0.c0) IS FALSE)))) ORDER BY ((vt1.c0) NOTNULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((vt1.c0) NOTNULL) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((+ (((t0.c0) IS FALSE)))) ORDER BY ((vt1.c0) NOTNULL) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CAST(((((t1.c1)AND(t1.c18)))AND(vt0.c0)) AS BLOB)) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE '-980667896' END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((t1.c1)AND(t1.c18)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE '-980667896' END) NOTNULL) DESC);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CAST(((((t1.c1)AND(t1.c18)))AND(vt0.c0)) AS BLOB)) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE '-980667896' END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((t1.c1)AND(t1.c18)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE '-980667896' END) NOTNULL) DESC);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CAST(((((t1.c1)AND(t1.c18)))AND(vt0.c0)) AS BLOB)) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE '-980667896' END) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((LIKELIHOOD(t1.c0, 0.5199519308902614) IN ()));
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(t1.c0, 0.5199519308902614) IN ())) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((LIKELIHOOD(t1.c0, 0.5199519308902614) IN ()));
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(t1.c0, 0.5199519308902614) IN ())) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((LIKELIHOOD(t1.c0, 0.5199519308902614) IN ()));
SELECT COUNT(*) FROM t1, t0 WHERE ((((t1.c0, t1.c18, t1.c0)) BETWEEN ((CASE WHEN t1.c1 THEN 'Y' END, CASE WHEN t1.c1 THEN t1.c18 ELSE '0.38995460568432916' END, t0.c0 COLLATE NOCASE)) AND (((- (t1.c0)), t1.c0, IFNULL(DISTINCT t1.c2, t1.c18))))) ORDER BY ((((NOT (t0.c0))))>=((((t1.c2)IS(t1.c18))))) DESC, ((((t0.c0)&(t1.c1)))<>(t1.c2 COLLATE RTRIM)), CASE WHEN (t0.c0 IN (t1.c18)) THEN ((t0.c0) NOT BETWEEN (0.65344592655657) AND (t1.c18)) WHEN ((((x'')AND(t1.c0)))AND(t0.c0)) THEN '345227708' WHEN (((t1.c1))<((t0.c0))) THEN t0.c0 WHEN x'' COLLATE NOCASE THEN 0.6889953483513002 COLLATE NOCASE WHEN ((0xfffffffff39f5397)IS(t0.c0)) THEN (((t0.c0, t1.c0, t0.c0))>=((t1.c0, t0.c0, 'B ./P\&'))) ELSE 0.7872876423291476 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c0, t1.c18, t1.c0)) BETWEEN ((CASE WHEN t1.c1 THEN 'Y' END, CASE WHEN t1.c1 THEN t1.c18 ELSE '0.38995460568432916' END, t0.c0 COLLATE NOCASE)) AND (((- (t1.c0)), t1.c0, IFNULL(DISTINCT t1.c2, t1.c18))))) IS TRUE)  as count FROM t1, t0 ORDER BY ((((NOT (t0.c0))))>=((((t1.c2)IS(t1.c18))))) DESC, ((((t0.c0)&(t1.c1)))!=(t1.c2 COLLATE RTRIM)), CASE WHEN (t0.c0 IN (t1.c18)) THEN ((t0.c0) NOT BETWEEN (0.65344592655657) AND (t1.c18)) WHEN ((((x'')AND(t1.c0)))AND(t0.c0)) THEN '345227708' WHEN (((t1.c1))<((t0.c0))) THEN t0.c0 WHEN x'' COLLATE NOCASE THEN 0.6889953483513002 COLLATE NOCASE WHEN ((0Xfffffffff39f5397)IS(t0.c0)) THEN (((t0.c0, t1.c0, t0.c0))>=((t1.c0, t0.c0, 'B ./P\&'))) ELSE 0.7872876423291476 END ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, t0 WHERE ((((t1.c0, t1.c18, t1.c0)) BETWEEN ((CASE WHEN t1.c1 THEN 'Y' END, CASE WHEN t1.c1 THEN t1.c18 ELSE '0.38995460568432916' END, t0.c0 COLLATE NOCASE)) AND (((- (t1.c0)), t1.c0, IFNULL(DISTINCT t1.c2, t1.c18))))) ORDER BY ((((NOT (t0.c0))))>=((((t1.c2)IS(t1.c18))))) DESC, ((((t0.c0)&(t1.c1)))<>(t1.c2 COLLATE RTRIM)), CASE WHEN (t0.c0 IN (t1.c18)) THEN ((t0.c0) NOT BETWEEN (0.65344592655657) AND (t1.c18)) WHEN ((((x'')AND(t1.c0)))AND(t0.c0)) THEN '345227708' WHEN (((t1.c1))<((t0.c0))) THEN t0.c0 WHEN x'' COLLATE NOCASE THEN 0.6889953483513002 COLLATE NOCASE WHEN ((0xfffffffff39f5397)IS(t0.c0)) THEN (((t0.c0, t1.c0, t0.c0))>=((t1.c0, t0.c0, 'B ./P\&'))) ELSE 0.7872876423291476 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c0, t1.c18, t1.c0)) BETWEEN ((CASE WHEN t1.c1 THEN 'Y' END, CASE WHEN t1.c1 THEN t1.c18 ELSE '0.38995460568432916' END, t0.c0 COLLATE NOCASE)) AND (((- (t1.c0)), t1.c0, IFNULL(DISTINCT t1.c2, t1.c18))))) IS TRUE)  as count FROM t1, t0 ORDER BY ((((NOT (t0.c0))))>=((((t1.c2)IS(t1.c18))))) DESC, ((((t0.c0)&(t1.c1)))!=(t1.c2 COLLATE RTRIM)), CASE WHEN (t0.c0 IN (t1.c18)) THEN ((t0.c0) NOT BETWEEN (0.65344592655657) AND (t1.c18)) WHEN ((((x'')AND(t1.c0)))AND(t0.c0)) THEN '345227708' WHEN (((t1.c1))<((t0.c0))) THEN t0.c0 WHEN x'' COLLATE NOCASE THEN 0.6889953483513002 COLLATE NOCASE WHEN ((0Xfffffffff39f5397)IS(t0.c0)) THEN (((t0.c0, t1.c0, t0.c0))>=((t1.c0, t0.c0, 'B ./P\&'))) ELSE 0.7872876423291476 END ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, t0 WHERE ((((t1.c0, t1.c18, t1.c0)) BETWEEN ((CASE WHEN t1.c1 THEN 'Y' END, CASE WHEN t1.c1 THEN t1.c18 ELSE '0.38995460568432916' END, t0.c0 COLLATE NOCASE)) AND (((- (t1.c0)), t1.c0, IFNULL(DISTINCT t1.c2, t1.c18))))) ORDER BY ((((NOT (t0.c0))))>=((((t1.c2)IS(t1.c18))))) DESC, ((((t0.c0)&(t1.c1)))<>(t1.c2 COLLATE RTRIM)), CASE WHEN (t0.c0 IN (t1.c18)) THEN ((t0.c0) NOT BETWEEN (0.65344592655657) AND (t1.c18)) WHEN ((((x'')AND(t1.c0)))AND(t0.c0)) THEN '345227708' WHEN (((t1.c1))<((t0.c0))) THEN t0.c0 WHEN x'' COLLATE NOCASE THEN 0.6889953483513002 COLLATE NOCASE WHEN ((0xfffffffff39f5397)IS(t0.c0)) THEN (((t0.c0, t1.c0, t0.c0))>=((t1.c0, t0.c0, 'B ./P\&'))) ELSE 0.7872876423291476 END ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, vt1, t0, t1 WHERE (((((t1.c0) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (CAST(t1.c2 AS NUMERIC)) AND (((v0.c0)LIKE(vt1.c0))))) ORDER BY ((((((vt1.c0) NOTNULL))OR(((0.7735404791054503)+(t1.c2)))))OR((+ (t1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (CAST(t1.c2 AS NUMERIC)) AND (((v0.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM v0, vt0, vt1, t0, t1 ORDER BY ((((((vt1.c0) NOTNULL))OR(((0.7735404791054503)+(t1.c2)))))OR((+ (t1.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, vt1, t0, t1 WHERE (((((t1.c0) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (CAST(t1.c2 AS NUMERIC)) AND (((v0.c0)LIKE(vt1.c0))))) ORDER BY ((((((vt1.c0) NOTNULL))OR(((0.7735404791054503)+(t1.c2)))))OR((+ (t1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (CAST(t1.c2 AS NUMERIC)) AND (((v0.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM v0, vt0, vt1, t0, t1 ORDER BY ((((((vt1.c0) NOTNULL))OR(((0.7735404791054503)+(t1.c2)))))OR((+ (t1.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, vt1, t0, t1 WHERE (((((t1.c0) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (CAST(t1.c2 AS NUMERIC)) AND (((v0.c0)LIKE(vt1.c0))))) ORDER BY ((((((vt1.c0) NOTNULL))OR(((0.7735404791054503)+(t1.c2)))))OR((+ (t1.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (TYPEOF((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((~ (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((~ (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF((~ (vt0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE (INSTR(ROUND(t0.c0, t0.c0), CASE WHEN t0.c0 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ((INSTR(ROUND(t0.c0, t0.c0), CASE WHEN t0.c0 THEN t0.c0 END)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (INSTR(ROUND(t0.c0, t0.c0), CASE WHEN t0.c0 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ((INSTR(ROUND(t0.c0, t0.c0), CASE WHEN t0.c0 THEN t0.c0 END)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (INSTR(ROUND(t0.c0, t0.c0), CASE WHEN t0.c0 THEN t0.c0 END));
SELECT * FROM v0, t0, vt0 WHERE (((t0.c0 COLLATE RTRIM)<=(DATE(v0.c0, vt0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM)<=(DATE(v0.c0, vt0.c0, v0.c0)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (((t0.c0 COLLATE RTRIM)<=(DATE(v0.c0, vt0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM)<=(DATE(v0.c0, vt0.c0, v0.c0)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (((t0.c0 COLLATE RTRIM)<=(DATE(v0.c0, vt0.c0, v0.c0))));
SELECT ALL * FROM v0, t0 WHERE (((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON 0x550b1e9f WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) IN (((((t0.c0)AND(vt0.c0)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) IN (((((t0.c0)AND(vt0.c0)))OR(NULL))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON 0X550b1e9f);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON 0x550b1e9f WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) IN (((((t0.c0)AND(vt0.c0)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) IN (((((t0.c0)AND(vt0.c0)))OR(NULL))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON 0X550b1e9f);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON 0x550b1e9f WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) IN (((((t0.c0)AND(vt0.c0)))OR(NULL)))));
SELECT * FROM vt1, t0, v0 WHERE ((- ((vt1.c0 IN ())))) ORDER BY (((t0.c0)) BETWEEN ((((v0.c0)-(vt1.c0)))) AND ((((vt1.c0) NOT NULL))))  NULLS LAST, ((LOWER(NULL)) BETWEEN ((vt1.c0 IN ())) AND ((((vt1.c0, x'', vt1.c0))==((v0.c0, vt1.c0, v0.c0))))) DESC  NULLS LAST, json_extract(((vt1.c0)&(x'')), CAST(vt1.c0 AS INTEGER))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY (((t0.c0)) BETWEEN ((((v0.c0)-(vt1.c0)))) AND ((((vt1.c0) NOT NULL))))  NULLS LAST, ((LOWER(NULL)) BETWEEN ((vt1.c0 IN ())) AND ((((vt1.c0, x'', vt1.c0))==((v0.c0, vt1.c0, v0.c0))))) DESC  NULLS LAST, json_extract(((vt1.c0)&(x'')), CAST(vt1.c0 AS INTEGER))  NULLS LAST);
SELECT * FROM vt1, t0, v0 WHERE ((- ((vt1.c0 IN ())))) ORDER BY (((t0.c0)) BETWEEN ((((v0.c0)-(vt1.c0)))) AND ((((vt1.c0) NOT NULL))))  NULLS LAST, ((LOWER(NULL)) BETWEEN ((vt1.c0 IN ())) AND ((((vt1.c0, x'', vt1.c0))==((v0.c0, vt1.c0, v0.c0))))) DESC  NULLS LAST, json_extract(((vt1.c0)&(x'')), CAST(vt1.c0 AS INTEGER))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY (((t0.c0)) BETWEEN ((((v0.c0)-(vt1.c0)))) AND ((((vt1.c0) NOT NULL))))  NULLS LAST, ((LOWER(NULL)) BETWEEN ((vt1.c0 IN ())) AND ((((vt1.c0, x'', vt1.c0))==((v0.c0, vt1.c0, v0.c0))))) DESC  NULLS LAST, json_extract(((vt1.c0)&(x'')), CAST(vt1.c0 AS INTEGER))  NULLS LAST);
SELECT * FROM vt1, t0, v0 WHERE ((- ((vt1.c0 IN ())))) ORDER BY (((t0.c0)) BETWEEN ((((v0.c0)-(vt1.c0)))) AND ((((vt1.c0) NOT NULL))))  NULLS LAST, ((LOWER(NULL)) BETWEEN ((vt1.c0 IN ())) AND ((((vt1.c0, x'', vt1.c0))==((v0.c0, vt1.c0, v0.c0))))) DESC  NULLS LAST, json_extract(((vt1.c0)&(x'')), CAST(vt1.c0 AS INTEGER))  NULLS LAST;
SELECT ALL * FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN ((t1.c18) BETWEEN (t1.c1) AND (t0.c0)) THEN CAST(t1.c18 AS INTEGER) ELSE TRIM(t0.c0) END WHERE (CAST(t1.c1 AS INTEGER)) ORDER BY ((t1.c2 COLLATE BINARY)>>(CASE WHEN t0.c0 THEN t1.c2 ELSE t0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c1 AS INTEGER)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN ((t1.c18) BETWEEN (t1.c1) AND (t0.c0)) THEN CAST(t1.c18 AS INTEGER) ELSE TRIM(t0.c0) END ORDER BY ((t1.c2 COLLATE BINARY)>>(CASE WHEN t0.c0 THEN t1.c2 ELSE t0.c0 END)) ASC  NULLS FIRST);
SELECT ALL * FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN ((t1.c18) BETWEEN (t1.c1) AND (t0.c0)) THEN CAST(t1.c18 AS INTEGER) ELSE TRIM(t0.c0) END WHERE (CAST(t1.c1 AS INTEGER)) ORDER BY ((t1.c2 COLLATE BINARY)>>(CASE WHEN t0.c0 THEN t1.c2 ELSE t0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c1 AS INTEGER)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN ((t1.c18) BETWEEN (t1.c1) AND (t0.c0)) THEN CAST(t1.c18 AS INTEGER) ELSE TRIM(t0.c0) END ORDER BY ((t1.c2 COLLATE BINARY)>>(CASE WHEN t0.c0 THEN t1.c2 ELSE t0.c0 END)) ASC  NULLS FIRST);
SELECT ALL * FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN ((t1.c18) BETWEEN (t1.c1) AND (t0.c0)) THEN CAST(t1.c18 AS INTEGER) ELSE TRIM(t0.c0) END WHERE (CAST(t1.c1 AS INTEGER)) ORDER BY ((t1.c2 COLLATE BINARY)>>(CASE WHEN t0.c0 THEN t1.c2 ELSE t0.c0 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1 INDEXED BY i96, v0 INNER JOIN t0 ON (+ ('1513012866')) FULL OUTER JOIN vt1 ON CASE CASE t1.c0  WHEN t1.c0 THEN v0.c0 END  WHEN (t1.c2 IN ()) THEN ((((((((0.22923510350027199)AND(t1.c18)))OR(t1.c2)))AND(vt1.c0)))OR(t0.c0)) END WHERE (((((((t1.c18) IS FALSE))AND(CAST(vt1.c0 AS INTEGER))))AND(t1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c18) IS FALSE))AND(CAST(vt1.c0 AS INTEGER))))AND(t1.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1 INDEXED BY i96, v0 INNER JOIN t0 ON (+ ('1513012866')) FULL OUTER JOIN vt1 ON CASE CASE t1.c0  WHEN t1.c0 THEN v0.c0 END  WHEN (t1.c2 IN ()) THEN ((((((((0.22923510350027199)AND(t1.c18)))OR(t1.c2)))AND(vt1.c0)))OR(t0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, t1 INDEXED BY i96, v0 INNER JOIN t0 ON (+ ('1513012866')) FULL OUTER JOIN vt1 ON CASE CASE t1.c0  WHEN t1.c0 THEN v0.c0 END  WHEN (t1.c2 IN ()) THEN ((((((((0.22923510350027199)AND(t1.c18)))OR(t1.c2)))AND(vt1.c0)))OR(t0.c0)) END WHERE (((((((t1.c18) IS FALSE))AND(CAST(vt1.c0 AS INTEGER))))AND(t1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c18) IS FALSE))AND(CAST(vt1.c0 AS INTEGER))))AND(t1.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1 INDEXED BY i96, v0 INNER JOIN t0 ON (+ ('1513012866')) FULL OUTER JOIN vt1 ON CASE CASE t1.c0  WHEN t1.c0 THEN v0.c0 END  WHEN (t1.c2 IN ()) THEN ((((((((0.22923510350027199)AND(t1.c18)))OR(t1.c2)))AND(vt1.c0)))OR(t0.c0)) END);
SELECT ALL * FROM v0, vt1, t0 LEFT OUTER JOIN vt0 ON (((vt1.c0, t1.c18, vt1.c0)) BETWEEN ((((v0.c0)IS NOT(t1.c0)), ((((((((t1.c18)OR(v0.c0)))AND(t0.c0)))AND(vt1.c0)))AND(vt0.c0)), vt1.c0)) AND ((LIKELY(t1.c1), (((vt0.c0, t1.c0, t0.c0))<>((t1.c1, t1.c1, vt1.c0))), (- (t1.c2))))) LEFT OUTER JOIN t1 ON v0.c0 WHERE ((t1.c1 IN (((t1.c18)*(vt1.c0)), (((t1.c18, t1.c18, vt1.c0))<=((t1.c1, vt1.c0, t1.c1))))));
SELECT SUM(count) FROM (SELECT (((t1.c1 IN (((t1.c18)*(vt1.c0)), (((t1.c18, t1.c18, vt1.c0))<=((t1.c1, vt1.c0, t1.c1)))))) IS TRUE)  as count FROM v0, vt1, t0 LEFT OUTER JOIN vt0 ON (((vt1.c0, t1.c18, vt1.c0)) BETWEEN ((((v0.c0)IS NOT(t1.c0)), ((((((((t1.c18)OR(v0.c0)))AND(t0.c0)))AND(vt1.c0)))AND(vt0.c0)), vt1.c0)) AND ((LIKELY(t1.c1), (((vt0.c0, t1.c0, t0.c0))<>((t1.c1, t1.c1, vt1.c0))), (- (t1.c2))))) LEFT OUTER JOIN t1 ON v0.c0);
SELECT ALL * FROM v0, vt1, t0 LEFT OUTER JOIN vt0 ON (((vt1.c0, t1.c18, vt1.c0)) BETWEEN ((((v0.c0)IS NOT(t1.c0)), ((((((((t1.c18)OR(v0.c0)))AND(t0.c0)))AND(vt1.c0)))AND(vt0.c0)), vt1.c0)) AND ((LIKELY(t1.c1), (((vt0.c0, t1.c0, t0.c0))<>((t1.c1, t1.c1, vt1.c0))), (- (t1.c2))))) LEFT OUTER JOIN t1 ON v0.c0 WHERE ((t1.c1 IN (((t1.c18)*(vt1.c0)), (((t1.c18, t1.c18, vt1.c0))<=((t1.c1, vt1.c0, t1.c1))))));
SELECT SUM(count) FROM (SELECT (((t1.c1 IN (((t1.c18)*(vt1.c0)), (((t1.c18, t1.c18, vt1.c0))<=((t1.c1, vt1.c0, t1.c1)))))) IS TRUE)  as count FROM v0, vt1, t0 LEFT OUTER JOIN vt0 ON (((vt1.c0, t1.c18, vt1.c0)) BETWEEN ((((v0.c0)IS NOT(t1.c0)), ((((((((t1.c18)OR(v0.c0)))AND(t0.c0)))AND(vt1.c0)))AND(vt0.c0)), vt1.c0)) AND ((LIKELY(t1.c1), (((vt0.c0, t1.c0, t0.c0))<>((t1.c1, t1.c1, vt1.c0))), (- (t1.c2))))) LEFT OUTER JOIN t1 ON v0.c0);
SELECT * FROM t0, v0, t1 WHERE (((CAST(t1.c2 AS NUMERIC))%(load_extension(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c2 AS NUMERIC))%(load_extension(t0.c0)))) IS TRUE)  as count FROM t0, v0, t1);
SELECT * FROM t0, v0, t1 WHERE (((CAST(t1.c2 AS NUMERIC))%(load_extension(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c2 AS NUMERIC))%(load_extension(t0.c0)))) IS TRUE)  as count FROM t0, v0, t1);
SELECT * FROM t0, v0, t1 WHERE (((CAST(t1.c2 AS NUMERIC))%(load_extension(t0.c0))));
SELECT ALL * FROM t0, t1, vt1, vt0 NOT INDEXED, v0 WHERE (CAST(((v0.c0)GLOB(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)GLOB(v0.c0)) AS REAL)) IS TRUE)  as count FROM t0, t1, vt1, vt0, v0);
SELECT ALL * FROM t0, t1, vt1, vt0 NOT INDEXED, v0 WHERE (CAST(((v0.c0)GLOB(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)GLOB(v0.c0)) AS REAL)) IS TRUE)  as count FROM t0, t1, vt1, vt0, v0);
SELECT ALL * FROM t0, t1, vt1, vt0 NOT INDEXED, v0 WHERE (CAST(((v0.c0)GLOB(v0.c0)) AS REAL));
SELECT COUNT(*) FROM t1, vt1, t0 LEFT OUTER JOIN vt0 ON ((((t1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))IS NOT(((NULL)*(t1.c1)))) RIGHT OUTER JOIN v0 ON t1.c0 WHERE (((CASE WHEN v0.c0 THEN t1.c2 END)&(((((t0.c0)OR(x'')))OR(vt1.c0))))) ORDER BY LIKELY(DISTINCT ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN t1.c2 END)&(((((t0.c0)OR(x'')))OR(vt1.c0))))) IS TRUE)  as count FROM t1, vt1, t0 LEFT OUTER JOIN vt0 ON ((((t1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))IS NOT(((NULL)*(t1.c1)))) RIGHT OUTER JOIN v0 ON t1.c0 ORDER BY LIKELY(DISTINCT ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1, t0 LEFT OUTER JOIN vt0 ON ((((t1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))IS NOT(((NULL)*(t1.c1)))) RIGHT OUTER JOIN v0 ON t1.c0 WHERE (((CASE WHEN v0.c0 THEN t1.c2 END)&(((((t0.c0)OR(x'')))OR(vt1.c0))))) ORDER BY LIKELY(DISTINCT ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN t1.c2 END)&(((((t0.c0)OR(x'')))OR(vt1.c0))))) IS TRUE)  as count FROM t1, vt1, t0 LEFT OUTER JOIN vt0 ON ((((t1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))IS NOT(((NULL)*(t1.c1)))) RIGHT OUTER JOIN v0 ON t1.c0 ORDER BY LIKELY(DISTINCT ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0, t1, vt1, t0 WHERE (((((t1.c1) BETWEEN (t1.c0) AND (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) BETWEEN (t1.c0) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, t1, vt1, t0);
SELECT ALL * FROM vt0, t1, vt1, t0 WHERE (((((t1.c1) BETWEEN (t1.c0) AND (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) BETWEEN (t1.c0) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, t1, vt1, t0);
SELECT ALL * FROM vt0, t1, vt1, t0 WHERE (((((t1.c1) BETWEEN (t1.c0) AND (vt1.c0))) IS FALSE));
SELECT ALL * FROM t0, vt0 WHERE ((+ (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((+ (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((+ (t0.c0)));
SELECT * FROM vt0, t1 INDEXED BY i14, vt1, v0 WHERE (CAST((('1131767565') NOT BETWEEN (vt0.c0) AND (t1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((('1131767565') NOT BETWEEN (vt0.c0) AND (t1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t1 INDEXED BY i14, vt1, v0);
SELECT * FROM vt0, t1 INDEXED BY i14, vt1, v0 WHERE (CAST((('1131767565') NOT BETWEEN (vt0.c0) AND (t1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((('1131767565') NOT BETWEEN (vt0.c0) AND (t1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t1 INDEXED BY i14, vt1, v0);
SELECT * FROM vt0, t1 INDEXED BY i14, vt1, v0 WHERE (CAST((('1131767565') NOT BETWEEN (vt0.c0) AND (t1.c0)) AS BLOB));
SELECT ALL * FROM vt0, vt1 WHERE (TYPEOF(DISTINCT ((vt1.c0)*(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt1.c0)*(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (TYPEOF(DISTINCT ((vt1.c0)*(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt1.c0)*(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (TYPEOF(DISTINCT ((vt1.c0)*(vt0.c0))));
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((((((((((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(((vt1.c0) IS FALSE)))) ORDER BY (((((vt0.c0))>((vt0.c0))))<(((((v0.c0)OR(v0.c0)))OR(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (((((vt0.c0))>((vt0.c0))))<(((((v0.c0)OR(v0.c0)))OR(NULL))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((((((((((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(((vt1.c0) IS FALSE)))) ORDER BY (((((vt0.c0))>((vt0.c0))))<(((((v0.c0)OR(v0.c0)))OR(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (((((vt0.c0))>((vt0.c0))))<(((((v0.c0)OR(v0.c0)))OR(NULL))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((((((((((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(((vt1.c0) IS FALSE)))) ORDER BY (((((vt0.c0))>((vt0.c0))))<(((((v0.c0)OR(v0.c0)))OR(NULL))))  NULLS LAST;
SELECT COUNT(*) FROM t1, v0 WHERE (((CHAR(t1.c18)) NOT NULL)) ORDER BY CAST(v0.c0 AS BLOB) COLLATE BINARY ASC, CASE ((((((((NULL)OR(x'9d67')))OR(v0.c0)))AND(t1.c1)))AND(t1.c1))  WHEN ((t1.c18)|(t1.c2)) THEN LTRIM(t1.c2, v0.c0) END, (((v0.c0, v0.c0, t1.c18)) NOT BETWEEN (((((t1.c18)) NOT BETWEEN ((t1.c1)) AND ((0.9632911618174641))), v0.c0, ((1.662968117E9) NOT BETWEEN (v0.c0) AND (t1.c0)))) AND ((CAST(t1.c18 AS INTEGER), LIKELY(t1.c18), (+ (t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CHAR(t1.c18)) NOT NULL)) IS TRUE)  as count FROM t1, v0 ORDER BY CAST(v0.c0 AS BLOB) COLLATE BINARY ASC, CASE ((((((((NULL)OR(x'9d67')))OR(v0.c0)))AND(t1.c1)))AND(t1.c1))  WHEN ((t1.c18)|(t1.c2)) THEN LTRIM(t1.c2, v0.c0) END, (((v0.c0, v0.c0, t1.c18)) NOT BETWEEN (((((t1.c18)) NOT BETWEEN ((t1.c1)) AND ((0.9632911618174641))), v0.c0, ((1.662968117E9) NOT BETWEEN (v0.c0) AND (t1.c0)))) AND ((CAST(t1.c18 AS INTEGER), LIKELY(t1.c18), (+ (t1.c1))))));
SELECT COUNT(*) FROM t1, v0 WHERE (((CHAR(t1.c18)) NOT NULL)) ORDER BY CAST(v0.c0 AS BLOB) COLLATE BINARY ASC, CASE ((((((((NULL)OR(x'9d67')))OR(v0.c0)))AND(t1.c1)))AND(t1.c1))  WHEN ((t1.c18)|(t1.c2)) THEN LTRIM(t1.c2, v0.c0) END, (((v0.c0, v0.c0, t1.c18)) NOT BETWEEN (((((t1.c18)) NOT BETWEEN ((t1.c1)) AND ((0.9632911618174641))), v0.c0, ((1.662968117E9) NOT BETWEEN (v0.c0) AND (t1.c0)))) AND ((CAST(t1.c18 AS INTEGER), LIKELY(t1.c18), (+ (t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CHAR(t1.c18)) NOT NULL)) IS TRUE)  as count FROM t1, v0 ORDER BY CAST(v0.c0 AS BLOB) COLLATE BINARY ASC, CASE ((((((((NULL)OR(x'9d67')))OR(v0.c0)))AND(t1.c1)))AND(t1.c1))  WHEN ((t1.c18)|(t1.c2)) THEN LTRIM(t1.c2, v0.c0) END, (((v0.c0, v0.c0, t1.c18)) NOT BETWEEN (((((t1.c18)) NOT BETWEEN ((t1.c1)) AND ((0.9632911618174641))), v0.c0, ((1.662968117E9) NOT BETWEEN (v0.c0) AND (t1.c0)))) AND ((CAST(t1.c18 AS INTEGER), LIKELY(t1.c18), (+ (t1.c1))))));
SELECT COUNT(*) FROM t1, v0 WHERE (((CHAR(t1.c18)) NOT NULL)) ORDER BY CAST(v0.c0 AS BLOB) COLLATE BINARY ASC, CASE ((((((((NULL)OR(x'9d67')))OR(v0.c0)))AND(t1.c1)))AND(t1.c1))  WHEN ((t1.c18)|(t1.c2)) THEN LTRIM(t1.c2, v0.c0) END, (((v0.c0, v0.c0, t1.c18)) NOT BETWEEN (((((t1.c18)) NOT BETWEEN ((t1.c1)) AND ((0.9632911618174641))), v0.c0, ((1.662968117E9) NOT BETWEEN (v0.c0) AND (t1.c0)))) AND ((CAST(t1.c18 AS INTEGER), LIKELY(t1.c18), (+ (t1.c1)))));
SELECT COUNT(*) FROM t0, t1, vt1 WHERE ((NOT (CASE WHEN t1.c0 THEN t1.c1 END))) ORDER BY ((((t1.c2)*(vt1.c0)))%(((t1.c1) BETWEEN (t0.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN t1.c0 THEN t1.c1 END))) IS TRUE)  as count FROM t0, t1, vt1 ORDER BY ((((t1.c2)*(vt1.c0)))%(((t1.c1) BETWEEN (t0.c0) AND (vt1.c0)))) ASC);
SELECT COUNT(*) FROM t0, t1, vt1 WHERE ((NOT (CASE WHEN t1.c0 THEN t1.c1 END))) ORDER BY ((((t1.c2)*(vt1.c0)))%(((t1.c1) BETWEEN (t0.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN t1.c0 THEN t1.c1 END))) IS TRUE)  as count FROM t0, t1, vt1 ORDER BY ((((t1.c2)*(vt1.c0)))%(((t1.c1) BETWEEN (t0.c0) AND (vt1.c0)))) ASC);
SELECT COUNT(*) FROM t0, t1, vt1 WHERE ((NOT (CASE WHEN t1.c0 THEN t1.c1 END))) ORDER BY ((((t1.c2)*(vt1.c0)))%(((t1.c1) BETWEEN (t0.c0) AND (vt1.c0)))) ASC;
SELECT COUNT(*) FROM t1 INNER JOIN t0 ON ((LIKELY(t1.c18)) NOT NULL) LEFT OUTER JOIN vt1 ON ((((t1.c18)LIKE(t1.c18)))||(((t1.c0)>(t1.c1)))) WHERE (json_array_length(((t1.c2) ISNULL))) ORDER BY CAST(((t1.c18)<=(t1.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((t1.c2) ISNULL))) IS TRUE)  as count FROM t1 INNER JOIN t0 ON ((LIKELY(t1.c18)) NOT NULL) LEFT OUTER JOIN vt1 ON ((((t1.c18)LIKE(t1.c18)))||(((t1.c0)>(t1.c1)))) ORDER BY CAST(((t1.c18)<=(t1.c0)) AS BLOB) DESC);
SELECT COUNT(*) FROM t1 INNER JOIN t0 ON ((LIKELY(t1.c18)) NOT NULL) LEFT OUTER JOIN vt1 ON ((((t1.c18)LIKE(t1.c18)))||(((t1.c0)>(t1.c1)))) WHERE (json_array_length(((t1.c2) ISNULL))) ORDER BY CAST(((t1.c18)<=(t1.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((t1.c2) ISNULL))) IS TRUE)  as count FROM t1 INNER JOIN t0 ON ((LIKELY(t1.c18)) NOT NULL) LEFT OUTER JOIN vt1 ON ((((t1.c18)LIKE(t1.c18)))||(((t1.c0)>(t1.c1)))) ORDER BY CAST(((t1.c18)<=(t1.c0)) AS BLOB) DESC);
SELECT COUNT(*) FROM t1 INNER JOIN t0 ON ((LIKELY(t1.c18)) NOT NULL) LEFT OUTER JOIN vt1 ON ((((t1.c18)LIKE(t1.c18)))||(((t1.c0)>(t1.c1)))) WHERE (json_array_length(((t1.c2) ISNULL))) ORDER BY CAST(((t1.c18)<=(t1.c0)) AS BLOB) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (QUOTE(t0.c0 COLLATE NOCASE)) ORDER BY (t0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((QUOTE(t0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (QUOTE(t0.c0 COLLATE NOCASE)) ORDER BY (t0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((QUOTE(t0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (QUOTE(t0.c0 COLLATE NOCASE)) ORDER BY (t0.c0 IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, vt1, v0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0, vt1, v0, t1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, v0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0, vt1, v0, t1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, v0, t1 WHERE (x'');
SELECT ALL COUNT(*) FROM t0, t1, vt1, v0 WHERE ((((((vt1.c0)AND(v0.c0)))OR(t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(v0.c0)))OR(t1.c0)) IN ())) IS TRUE)  as count FROM t0, t1, vt1, v0);
SELECT ALL COUNT(*) FROM t0, t1, vt1, v0 WHERE ((((((vt1.c0)AND(v0.c0)))OR(t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(v0.c0)))OR(t1.c0)) IN ())) IS TRUE)  as count FROM t0, t1, vt1, v0);
SELECT ALL COUNT(*) FROM t0, t1, vt1, v0 WHERE ((((((vt1.c0)AND(v0.c0)))OR(t1.c0)) IN ()));
SELECT * FROM t0 WHERE (((UNLIKELY(t0.c0)) NOT BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0)<>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(t0.c0)) NOT BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0)!=(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((UNLIKELY(t0.c0)) NOT BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0)<>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(t0.c0)) NOT BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0)!=(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((UNLIKELY(t0.c0)) NOT BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0)<>(t0.c0)))));
SELECT * FROM v0 CROSS JOIN t0 ON NULL CROSS JOIN vt0 ON CAST(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC) WHERE (((NULL) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((~ (vt0.c0))))) ORDER BY (((((t0.c0)AND(v0.c0)))OR(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON NULL CROSS JOIN vt0 ON CAST(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC) ORDER BY (((((t0.c0)AND(v0.c0)))OR(v0.c0)) IN ())  NULLS LAST);
SELECT * FROM v0 CROSS JOIN t0 ON NULL CROSS JOIN vt0 ON CAST(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC) WHERE (((NULL) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((~ (vt0.c0))))) ORDER BY (((((t0.c0)AND(v0.c0)))OR(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON NULL CROSS JOIN vt0 ON CAST(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC) ORDER BY (((((t0.c0)AND(v0.c0)))OR(v0.c0)) IN ())  NULLS LAST);
SELECT * FROM v0 CROSS JOIN t0 ON NULL CROSS JOIN vt0 ON CAST(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC) WHERE (((NULL) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((~ (vt0.c0))))) ORDER BY (((((t0.c0)AND(v0.c0)))OR(v0.c0)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt1, v0 WHERE ((vt1.c0 IN ()) COLLATE BINARY) ORDER BY (((+ (v0.c0)))-(((v0.c0)AND(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0 ORDER BY (((+ (v0.c0)))-(((v0.c0)AND(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE ((vt1.c0 IN ()) COLLATE BINARY) ORDER BY (((+ (v0.c0)))-(((v0.c0)AND(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0 ORDER BY (((+ (v0.c0)))-(((v0.c0)AND(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE ((vt1.c0 IN ()) COLLATE BINARY) ORDER BY (((+ (v0.c0)))-(((v0.c0)AND(vt1.c0))))  NULLS LAST;
SELECT ALL * FROM vt1, t0, t1 WHERE (UNLIKELY(DISTINCT (((t0.c0))<((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (((t0.c0))<((t0.c0))))) IS TRUE)  as count FROM vt1, t0, t1);
SELECT ALL * FROM vt1, t0, t1 WHERE (UNLIKELY(DISTINCT (((t0.c0))<((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (((t0.c0))<((t0.c0))))) IS TRUE)  as count FROM vt1, t0, t1);
SELECT ALL * FROM vt1, t0, t1 WHERE (UNLIKELY(DISTINCT (((t0.c0))<((t0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN vt1 ON NULLIF((+ (vt0.c0)), (v0.c0 IN ())) INNER JOIN t0 ON ((t0.c0) BETWEEN (UNLIKELY(vt0.c0)) AND ((((vt1.c0))<((x''))))) WHERE ((~ (CAST(v0.c0 AS TEXT)))) ORDER BY CAST(((v0.c0)*(vt1.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN vt1 ON NULLIF((+ (vt0.c0)), (v0.c0 IN ())) INNER JOIN t0 ON ((t0.c0) BETWEEN (UNLIKELY(vt0.c0)) AND ((((vt1.c0))<((x''))))) ORDER BY CAST(((v0.c0)*(vt1.c0)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN vt1 ON NULLIF((+ (vt0.c0)), (v0.c0 IN ())) INNER JOIN t0 ON ((t0.c0) BETWEEN (UNLIKELY(vt0.c0)) AND ((((vt1.c0))<((x''))))) WHERE ((~ (CAST(v0.c0 AS TEXT)))) ORDER BY CAST(((v0.c0)*(vt1.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN vt1 ON NULLIF((+ (vt0.c0)), (v0.c0 IN ())) INNER JOIN t0 ON ((t0.c0) BETWEEN (UNLIKELY(vt0.c0)) AND ((((vt1.c0))<((x''))))) ORDER BY CAST(((v0.c0)*(vt1.c0)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN vt1 ON NULLIF((+ (vt0.c0)), (v0.c0 IN ())) INNER JOIN t0 ON ((t0.c0) BETWEEN (UNLIKELY(vt0.c0)) AND ((((vt1.c0))<((x''))))) WHERE ((~ (CAST(v0.c0 AS TEXT)))) ORDER BY CAST(((v0.c0)*(vt1.c0)) AS REAL) DESC;
SELECT ALL * FROM t1, vt1, v0, t0 WHERE (IFNULL(t1.c2, vt1.c0) COLLATE NOCASE) ORDER BY (((t1.c0))=((t1.c1))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(t1.c2, vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt1, v0, t0 ORDER BY (((t1.c0))=((t1.c1))) COLLATE RTRIM);
SELECT ALL * FROM t1, vt1, v0, t0 WHERE (IFNULL(t1.c2, vt1.c0) COLLATE NOCASE) ORDER BY (((t1.c0))=((t1.c1))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(t1.c2, vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt1, v0, t0 ORDER BY (((t1.c0))=((t1.c1))) COLLATE RTRIM);
SELECT ALL * FROM t1, vt1, v0, t0 WHERE (IFNULL(t1.c2, vt1.c0) COLLATE NOCASE) ORDER BY (((t1.c0))=((t1.c1))) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt0, t1, vt1, v0 WHERE (COALESCE(DISTINCT ((v0.c0)&(t1.c1)), NULL)) ORDER BY json_array(((t1.c2)%(vt1.c0)), ((t1.c0)+(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((v0.c0)&(t1.c1)), NULL)) IS TRUE)  as count FROM vt0, t1, vt1, v0 ORDER BY json_array(((t1.c2)%(vt1.c0)), ((t1.c0)+(v0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, v0 WHERE (COALESCE(DISTINCT ((v0.c0)&(t1.c1)), NULL)) ORDER BY json_array(((t1.c2)%(vt1.c0)), ((t1.c0)+(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((v0.c0)&(t1.c1)), NULL)) IS TRUE)  as count FROM vt0, t1, vt1, v0 ORDER BY json_array(((t1.c2)%(vt1.c0)), ((t1.c0)+(v0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, v0 WHERE (COALESCE(DISTINCT ((v0.c0)&(t1.c1)), NULL)) ORDER BY json_array(((t1.c2)%(vt1.c0)), ((t1.c0)+(v0.c0))) DESC  NULLS LAST;
SELECT * FROM v0, vt0, vt1 WHERE (((((CAST(v0.c0 AS BLOB))OR('-267070997')))OR(vt0.c0))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM ASC, ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (LENGTH(vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS BLOB))OR('-267070997')))OR(vt0.c0))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM ASC, ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (LENGTH(vt1.c0))) DESC);
SELECT * FROM v0, vt0, vt1 WHERE (((((CAST(v0.c0 AS BLOB))OR('-267070997')))OR(vt0.c0))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM ASC, ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (LENGTH(vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS BLOB))OR('-267070997')))OR(vt0.c0))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM ASC, ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (LENGTH(vt1.c0))) DESC);
SELECT * FROM v0, vt0, vt1 WHERE (((((CAST(v0.c0 AS BLOB))OR('-267070997')))OR(vt0.c0))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM ASC, ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (LENGTH(vt1.c0))) DESC;
SELECT ALL * FROM v0, vt1, t0, t1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0, vt1, t0, t1, vt0);
SELECT ALL * FROM v0, vt1, t0, t1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0, vt1, t0, t1, vt0);
SELECT ALL * FROM v0, vt1, t0, t1, vt0 WHERE (vt1.c0);
SELECT COUNT(*) FROM t0, vt0, t1, v0, vt1 WHERE (((CAST(v0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN t1.c18 THEN t1.c1 ELSE t1.c1 END) AND ((- (t1.c1))))) ORDER BY CAST(((v0.c0) NOTNULL) AS TEXT) DESC  NULLS FIRST, t1.c1, (~ (t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN t1.c18 THEN t1.c1 ELSE t1.c1 END) AND ((- (t1.c1))))) IS TRUE)  as count FROM t0, vt0, t1, v0, vt1 ORDER BY CAST(((v0.c0) NOTNULL) AS TEXT) DESC  NULLS FIRST, t1.c1, (~ (t0.c0)));
SELECT COUNT(*) FROM t0, vt0, t1, v0, vt1 WHERE (((CAST(v0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN t1.c18 THEN t1.c1 ELSE t1.c1 END) AND ((- (t1.c1))))) ORDER BY CAST(((v0.c0) NOTNULL) AS TEXT) DESC  NULLS FIRST, t1.c1, (~ (t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN t1.c18 THEN t1.c1 ELSE t1.c1 END) AND ((- (t1.c1))))) IS TRUE)  as count FROM t0, vt0, t1, v0, vt1 ORDER BY CAST(((v0.c0) NOTNULL) AS TEXT) DESC  NULLS FIRST, t1.c1, (~ (t0.c0)));
SELECT COUNT(*) FROM t0, vt0, t1, v0, vt1 WHERE (((CAST(v0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN t1.c18 THEN t1.c1 ELSE t1.c1 END) AND ((- (t1.c1))))) ORDER BY CAST(((v0.c0) NOTNULL) AS TEXT) DESC  NULLS FIRST, t1.c1, (~ (t0.c0));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM v0, vt1, vt0, t0, t1 WHERE (UPPER(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM v0, vt1, vt0, t0, t1);
SELECT COUNT(*) FROM v0, vt1, vt0, t0, t1 WHERE (UPPER(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM v0, vt1, vt0, t0, t1);
SELECT COUNT(*) FROM v0, vt1, vt0, t0, t1 WHERE (UPPER(CAST(vt0.c0 AS BLOB)));
SELECT COUNT(*) FROM v0, t0, vt0, vt1 WHERE (((((vt1.c0)AND(vt0.c0))) NOT BETWEEN (CASE WHEN NULL THEN v0.c0 ELSE t0.c0 END) AND (v0.c0))) ORDER BY (((((v0.c0))<((vt1.c0))))/(vt0.c0)), CASE (NOT (t0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) WHEN ((0.36205725827076074) NOT NULL) THEN ((vt0.c0)OR(vt1.c0)) WHEN ((t0.c0)LIKE(v0.c0)) THEN (v0.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(vt0.c0))) NOT BETWEEN (CASE WHEN NULL THEN v0.c0 ELSE t0.c0 END) AND (v0.c0))) IS TRUE)  as count FROM v0, t0, vt0, vt1 ORDER BY (((((v0.c0))<((vt1.c0))))/(vt0.c0)), CASE (NOT (t0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) WHEN ((0.36205725827076074) NOT NULL) THEN ((vt0.c0)OR(vt1.c0)) WHEN ((t0.c0)LIKE(v0.c0)) THEN (v0.c0 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt0, vt1 WHERE (((((vt1.c0)AND(vt0.c0))) NOT BETWEEN (CASE WHEN NULL THEN v0.c0 ELSE t0.c0 END) AND (v0.c0))) ORDER BY (((((v0.c0))<((vt1.c0))))/(vt0.c0)), CASE (NOT (t0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) WHEN ((0.36205725827076074) NOT NULL) THEN ((vt0.c0)OR(vt1.c0)) WHEN ((t0.c0)LIKE(v0.c0)) THEN (v0.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(vt0.c0))) NOT BETWEEN (CASE WHEN NULL THEN v0.c0 ELSE t0.c0 END) AND (v0.c0))) IS TRUE)  as count FROM v0, t0, vt0, vt1 ORDER BY (((((v0.c0))<((vt1.c0))))/(vt0.c0)), CASE (NOT (t0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) WHEN ((0.36205725827076074) NOT NULL) THEN ((vt0.c0)OR(vt1.c0)) WHEN ((t0.c0)LIKE(v0.c0)) THEN (v0.c0 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt0, vt1 WHERE (((((vt1.c0)AND(vt0.c0))) NOT BETWEEN (CASE WHEN NULL THEN v0.c0 ELSE t0.c0 END) AND (v0.c0))) ORDER BY (((((v0.c0))<((vt1.c0))))/(vt0.c0)), CASE (NOT (t0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) WHEN ((0.36205725827076074) NOT NULL) THEN ((vt0.c0)OR(vt1.c0)) WHEN ((t0.c0)LIKE(v0.c0)) THEN (v0.c0 IN ()) END  NULLS LAST;
SELECT ALL * FROM t0, v0, vt1, t1 WHERE (NULL) ORDER BY INSTR((~ (vt1.c0)), (NOT ('/爥]e')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, v0, vt1, t1 ORDER BY INSTR((~ (vt1.c0)), (NOT ('/爥]e')))  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt1, t1 WHERE (NULL) ORDER BY INSTR((~ (vt1.c0)), (NOT ('/爥]e')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, v0, vt1, t1 ORDER BY INSTR((~ (vt1.c0)), (NOT ('/爥]e')))  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt1, t1 WHERE (NULL) ORDER BY INSTR((~ (vt1.c0)), (NOT ('/爥]e')))  NULLS FIRST;
SELECT COUNT(*) FROM v0, t1, t0, vt1 WHERE (HEX(DISTINCT 0.14199977555413545)) ORDER BY ((((((((((t1.c0) ISNULL))OR(CAST(t1.c18 AS BLOB))))OR(t0.c0)))AND('0.07535618909898989')))OR(CASE WHEN t0.c0 THEN t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT 0.14199977555413545)) IS TRUE)  as count FROM v0, t1, t0, vt1 ORDER BY ((((((((((t1.c0) ISNULL))OR(CAST(t1.c18 AS BLOB))))OR(t0.c0)))AND('0.07535618909898989')))OR(CASE WHEN t0.c0 THEN t0.c0 END)) ASC);
SELECT COUNT(*) FROM v0, t1, t0, vt1 WHERE (HEX(DISTINCT 0.14199977555413545)) ORDER BY ((((((((((t1.c0) ISNULL))OR(CAST(t1.c18 AS BLOB))))OR(t0.c0)))AND('0.07535618909898989')))OR(CASE WHEN t0.c0 THEN t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT 0.14199977555413545)) IS TRUE)  as count FROM v0, t1, t0, vt1 ORDER BY ((((((((((t1.c0) ISNULL))OR(CAST(t1.c18 AS BLOB))))OR(t0.c0)))AND('0.07535618909898989')))OR(CASE WHEN t0.c0 THEN t0.c0 END)) ASC);
SELECT COUNT(*) FROM v0, t1, t0, vt1 WHERE (HEX(DISTINCT 0.14199977555413545)) ORDER BY ((((((((((t1.c0) ISNULL))OR(CAST(t1.c18 AS BLOB))))OR(t0.c0)))AND('0.07535618909898989')))OR(CASE WHEN t0.c0 THEN t0.c0 END)) ASC;
SELECT ALL COUNT(*) FROM vt0, t0, v0 RIGHT OUTER JOIN vt1 ON ((((t0.c0)*(t0.c0)))*(((vt1.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) WHERE (((CASE WHEN vt1.c0 THEN t0.c0 END)<>(CAST(vt1.c0 AS TEXT)))) ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(t0.c0)))/(((((t0.c0)AND(vt1.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN t0.c0 END)<>(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, t0, v0 RIGHT OUTER JOIN vt1 ON ((((t0.c0)*(t0.c0)))*(((vt1.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(t0.c0)))/(((((t0.c0)AND(vt1.c0)))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 RIGHT OUTER JOIN vt1 ON ((((t0.c0)*(t0.c0)))*(((vt1.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) WHERE (((CASE WHEN vt1.c0 THEN t0.c0 END)<>(CAST(vt1.c0 AS TEXT)))) ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(t0.c0)))/(((((t0.c0)AND(vt1.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN t0.c0 END)<>(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, t0, v0 RIGHT OUTER JOIN vt1 ON ((((t0.c0)*(t0.c0)))*(((vt1.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(t0.c0)))/(((((t0.c0)AND(vt1.c0)))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 RIGHT OUTER JOIN vt1 ON ((((t0.c0)*(t0.c0)))*(((vt1.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) WHERE (((CASE WHEN vt1.c0 THEN t0.c0 END)<>(CAST(vt1.c0 AS TEXT)))) ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(t0.c0)))/(((((t0.c0)AND(vt1.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1))) BETWEEN (DATE(NULL, '''', t1.c18, t1.c18, t1.c2)) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1))) BETWEEN (DATE(NULL, '''', t1.c18, t1.c18, t1.c2)) AND (x''))) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1))) BETWEEN (DATE(NULL, '''', t1.c18, t1.c18, t1.c2)) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1))) BETWEEN (DATE(NULL, '''', t1.c18, t1.c18, t1.c2)) AND (x''))) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1))) BETWEEN (DATE(NULL, '''', t1.c18, t1.c18, t1.c2)) AND (x'')));
SELECT ALL * FROM t0, vt1, v0 WHERE (CASE WHEN ((vt1.c0)==(t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN (((t0.c0, vt1.c0, t0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, -6.0892829E8, vt1.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, v0.c0, NULL, t0.c0))) THEN CAST(vt1.c0 AS TEXT) WHEN ((t0.c0)<>(v0.c0)) THEN ((t0.c0) IS TRUE) WHEN ((t0.c0) BETWEEN ('-591852487') AND (t0.c0)) THEN ((v0.c0)GLOB(t0.c0)) WHEN (NOT (0.21586734550609965)) THEN ((vt1.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)==(t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN (((t0.c0, vt1.c0, t0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, -6.0892829E8, vt1.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, v0.c0, NULL, t0.c0))) THEN CAST(vt1.c0 AS TEXT) WHEN ((t0.c0)<>(v0.c0)) THEN ((t0.c0) IS TRUE) WHEN ((t0.c0) BETWEEN ('-591852487') AND (t0.c0)) THEN ((v0.c0)GLOB(t0.c0)) WHEN (NOT (0.21586734550609965)) THEN ((vt1.c0) NOT NULL) END) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL * FROM t0, vt1, v0 WHERE (CASE WHEN ((vt1.c0)==(t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN (((t0.c0, vt1.c0, t0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, -6.0892829E8, vt1.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, v0.c0, NULL, t0.c0))) THEN CAST(vt1.c0 AS TEXT) WHEN ((t0.c0)<>(v0.c0)) THEN ((t0.c0) IS TRUE) WHEN ((t0.c0) BETWEEN ('-591852487') AND (t0.c0)) THEN ((v0.c0)GLOB(t0.c0)) WHEN (NOT (0.21586734550609965)) THEN ((vt1.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)==(t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN (((t0.c0, vt1.c0, t0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, -6.0892829E8, vt1.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, v0.c0, NULL, t0.c0))) THEN CAST(vt1.c0 AS TEXT) WHEN ((t0.c0)<>(v0.c0)) THEN ((t0.c0) IS TRUE) WHEN ((t0.c0) BETWEEN ('-591852487') AND (t0.c0)) THEN ((v0.c0)GLOB(t0.c0)) WHEN (NOT (0.21586734550609965)) THEN ((vt1.c0) NOT NULL) END) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL * FROM t0, vt1, v0 WHERE (CASE WHEN ((vt1.c0)==(t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN (((t0.c0, vt1.c0, t0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, -6.0892829E8, vt1.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, v0.c0, NULL, t0.c0))) THEN CAST(vt1.c0 AS TEXT) WHEN ((t0.c0)<>(v0.c0)) THEN ((t0.c0) IS TRUE) WHEN ((t0.c0) BETWEEN ('-591852487') AND (t0.c0)) THEN ((v0.c0)GLOB(t0.c0)) WHEN (NOT (0.21586734550609965)) THEN ((vt1.c0) NOT NULL) END);
SELECT ALL * FROM t0, t1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE (t0.c0);
SELECT ALL * FROM t1, vt1, v0, t0, vt0 WHERE (((t1.c2 COLLATE BINARY)<>(('-1402867272' IN ())))) ORDER BY CASE x''  WHEN (t1.c0 IN (t1.c2)) THEN (((t1.c2, vt1.c0, t1.c18)) NOT BETWEEN ((t1.c0, v0.c0, t1.c2)) AND (('''', t1.c2, v0.c0))) WHEN vt0.c0 THEN t0.c0 COLLATE BINARY WHEN NULL THEN 0.3152169239444287 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c2 COLLATE BINARY)!=(('-1402867272' IN ())))) IS TRUE)  as count FROM t1, vt1, v0, t0, vt0 ORDER BY CASE x''  WHEN (t1.c0 IN (t1.c2)) THEN (((t1.c2, vt1.c0, t1.c18)) NOT BETWEEN ((t1.c0, v0.c0, t1.c2)) AND (('''', t1.c2, v0.c0))) WHEN vt0.c0 THEN t0.c0 COLLATE BINARY WHEN NULL THEN 0.3152169239444287 END  NULLS FIRST);
SELECT ALL * FROM t1, vt1, v0, t0, vt0 WHERE (((t1.c2 COLLATE BINARY)<>(('-1402867272' IN ())))) ORDER BY CASE x''  WHEN (t1.c0 IN (t1.c2)) THEN (((t1.c2, vt1.c0, t1.c18)) NOT BETWEEN ((t1.c0, v0.c0, t1.c2)) AND (('''', t1.c2, v0.c0))) WHEN vt0.c0 THEN t0.c0 COLLATE BINARY WHEN NULL THEN 0.3152169239444287 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c2 COLLATE BINARY)!=(('-1402867272' IN ())))) IS TRUE)  as count FROM t1, vt1, v0, t0, vt0 ORDER BY CASE x''  WHEN (t1.c0 IN (t1.c2)) THEN (((t1.c2, vt1.c0, t1.c18)) NOT BETWEEN ((t1.c0, v0.c0, t1.c2)) AND (('''', t1.c2, v0.c0))) WHEN vt0.c0 THEN t0.c0 COLLATE BINARY WHEN NULL THEN 0.3152169239444287 END  NULLS FIRST);
SELECT ALL * FROM t1, vt1, v0, t0, vt0 WHERE (((t1.c2 COLLATE BINARY)<>(('-1402867272' IN ())))) ORDER BY CASE x''  WHEN (t1.c0 IN (t1.c2)) THEN (((t1.c2, vt1.c0, t1.c18)) NOT BETWEEN ((t1.c0, v0.c0, t1.c2)) AND (('''', t1.c2, v0.c0))) WHEN vt0.c0 THEN t0.c0 COLLATE BINARY WHEN NULL THEN 0.3152169239444287 END  NULLS FIRST;
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((((vt0.c0)>=(vt0.c0)), v0.c0 COLLATE BINARY, 0.7615306894919522, (((((((('5nVn쿂/K4')OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)), vt0.c0, (vt0.c0 IN ()), (v0.c0 IN ())))<=((CAST(v0.c0 AS NUMERIC), vt0.c0, ((0.2358216875894631) IS FALSE), v0.c0 COLLATE RTRIM, (NOT (v0.c0)), ((vt0.c0)>(v0.c0)), vt0.c0 COLLATE BINARY))) WHERE ((+ (((((v0.c0)AND(vt0.c0)))OR(x'712d')))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((v0.c0)AND(vt0.c0)))OR(x'712d'))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((((vt0.c0)>=(vt0.c0)), v0.c0 COLLATE BINARY, 0.7615306894919522, (((((((('5nVn쿂/K4')OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)), vt0.c0, (vt0.c0 IN ()), (v0.c0 IN ())))<=((CAST(v0.c0 AS NUMERIC), vt0.c0, ((0.2358216875894631) IS FALSE), v0.c0 COLLATE RTRIM, (NOT (v0.c0)), ((vt0.c0)>(v0.c0)), vt0.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((((vt0.c0)>=(vt0.c0)), v0.c0 COLLATE BINARY, 0.7615306894919522, (((((((('5nVn쿂/K4')OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)), vt0.c0, (vt0.c0 IN ()), (v0.c0 IN ())))<=((CAST(v0.c0 AS NUMERIC), vt0.c0, ((0.2358216875894631) IS FALSE), v0.c0 COLLATE RTRIM, (NOT (v0.c0)), ((vt0.c0)>(v0.c0)), vt0.c0 COLLATE BINARY))) WHERE ((+ (((((v0.c0)AND(vt0.c0)))OR(x'712d')))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((v0.c0)AND(vt0.c0)))OR(x'712d'))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((((vt0.c0)>=(vt0.c0)), v0.c0 COLLATE BINARY, 0.7615306894919522, (((((((('5nVn쿂/K4')OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)), vt0.c0, (vt0.c0 IN ()), (v0.c0 IN ())))<=((CAST(v0.c0 AS NUMERIC), vt0.c0, ((0.2358216875894631) IS FALSE), v0.c0 COLLATE RTRIM, (NOT (v0.c0)), ((vt0.c0)>(v0.c0)), vt0.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((((vt0.c0)>=(vt0.c0)), v0.c0 COLLATE BINARY, 0.7615306894919522, (((((((('5nVn쿂/K4')OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)), vt0.c0, (vt0.c0 IN ()), (v0.c0 IN ())))<=((CAST(v0.c0 AS NUMERIC), vt0.c0, ((0.2358216875894631) IS FALSE), v0.c0 COLLATE RTRIM, (NOT (v0.c0)), ((vt0.c0)>(v0.c0)), vt0.c0 COLLATE BINARY))) WHERE ((+ (((((v0.c0)AND(vt0.c0)))OR(x'712d')))));
SELECT ALL * FROM t1 WHERE (CAST((((t1.c0))>((t1.c18))) AS REAL)) ORDER BY (~ (((((t1.c1)AND(t1.c1)))AND(t1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((t1.c0))>((t1.c18))) AS REAL)) IS TRUE)  as count FROM t1 ORDER BY (~ (((((t1.c1)AND(t1.c1)))AND(t1.c2))))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CAST((((t1.c0))>((t1.c18))) AS REAL)) ORDER BY (~ (((((t1.c1)AND(t1.c1)))AND(t1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((t1.c0))>((t1.c18))) AS REAL)) IS TRUE)  as count FROM t1 ORDER BY (~ (((((t1.c1)AND(t1.c1)))AND(t1.c2))))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CAST((((t1.c0))>((t1.c18))) AS REAL)) ORDER BY (~ (((((t1.c1)AND(t1.c1)))AND(t1.c2))))  NULLS LAST;
SELECT ALL * FROM v0, vt1 WHERE (((NOT (x'')) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (x'')) IN ())) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((NOT (x'')) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (x'')) IN ())) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((NOT (x'')) IN ()));
SELECT ALL COUNT(*) FROM t0, t1, v0, vt1 WHERE ((((t1.c2) IS FALSE) IN (((v0.c0)LIKE(t1.c18)), SQLITE_COMPILEOPTION_USED(t1.c2)))) ORDER BY (((t1.c0 IN (t1.c2))) NOT BETWEEN (ABS(v0.c0)) AND (((t1.c2)-(t1.c18))));
SELECT SUM(count) FROM (SELECT (((((t1.c2) IS FALSE) IN (((v0.c0)LIKE(t1.c18)), SQLITE_COMPILEOPTION_USED(t1.c2)))) IS TRUE)  as count FROM t0, t1, v0, vt1 ORDER BY (((t1.c0 IN (t1.c2))) NOT BETWEEN (ABS(v0.c0)) AND (((t1.c2)-(t1.c18)))));
SELECT ALL COUNT(*) FROM t0, t1, v0, vt1 WHERE ((((t1.c2) IS FALSE) IN (((v0.c0)LIKE(t1.c18)), SQLITE_COMPILEOPTION_USED(t1.c2)))) ORDER BY (((t1.c0 IN (t1.c2))) NOT BETWEEN (ABS(v0.c0)) AND (((t1.c2)-(t1.c18))));
SELECT SUM(count) FROM (SELECT (((((t1.c2) IS FALSE) IN (((v0.c0)LIKE(t1.c18)), SQLITE_COMPILEOPTION_USED(t1.c2)))) IS TRUE)  as count FROM t0, t1, v0, vt1 ORDER BY (((t1.c0 IN (t1.c2))) NOT BETWEEN (ABS(v0.c0)) AND (((t1.c2)-(t1.c18)))));
SELECT ALL COUNT(*) FROM t0, t1, v0, vt1 WHERE ((((t1.c2) IS FALSE) IN (((v0.c0)LIKE(t1.c18)), SQLITE_COMPILEOPTION_USED(t1.c2)))) ORDER BY (((t1.c0 IN (t1.c2))) NOT BETWEEN (ABS(v0.c0)) AND (((t1.c2)-(t1.c18))));
SELECT ALL * FROM vt1, v0, vt0 WHERE (TRIM((('1685867773')>=(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY (((((v0.c0) IS FALSE), LIKELIHOOD(v0.c0, 0.9604934775202105), ((v0.c0)<<(vt0.c0)), ((vt0.c0)&(v0.c0)), ''))<>((((vt1.c0)==(NULL)), 1.734294974E9, v0.c0, ((vt1.c0)!=(vt0.c0)), (((v0.c0))>((vt0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((('1685867773')>=(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((((v0.c0) IS FALSE), LIKELIHOOD(v0.c0, 0.9604934775202105), ((v0.c0)<<(vt0.c0)), ((vt0.c0)&(v0.c0)), ''))!=((((vt1.c0)=(NULL)), 1.734294974E9, v0.c0, ((vt1.c0)<>(vt0.c0)), (((v0.c0))>((vt0.c0)))))) DESC);
SELECT ALL * FROM vt1, v0, vt0 WHERE (TRIM((('1685867773')>=(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY (((((v0.c0) IS FALSE), LIKELIHOOD(v0.c0, 0.9604934775202105), ((v0.c0)<<(vt0.c0)), ((vt0.c0)&(v0.c0)), ''))<>((((vt1.c0)==(NULL)), 1.734294974E9, v0.c0, ((vt1.c0)!=(vt0.c0)), (((v0.c0))>((vt0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((('1685867773')>=(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((((v0.c0) IS FALSE), LIKELIHOOD(v0.c0, 0.9604934775202105), ((v0.c0)<<(vt0.c0)), ((vt0.c0)&(v0.c0)), ''))!=((((vt1.c0)=(NULL)), 1.734294974E9, v0.c0, ((vt1.c0)<>(vt0.c0)), (((v0.c0))>((vt0.c0)))))) DESC);
SELECT ALL * FROM vt1, v0, vt0 WHERE (TRIM((('1685867773')>=(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY (((((v0.c0) IS FALSE), LIKELIHOOD(v0.c0, 0.9604934775202105), ((v0.c0)<<(vt0.c0)), ((vt0.c0)&(v0.c0)), ''))<>((((vt1.c0)==(NULL)), 1.734294974E9, v0.c0, ((vt1.c0)!=(vt0.c0)), (((v0.c0))>((vt0.c0)))))) DESC;
SELECT ALL * FROM t0 RIGHT OUTER JOIN t1 ON ((t1.c1) BETWEEN (t0.c0) AND (t1.c1)) COLLATE RTRIM CROSS JOIN vt1 ON (('1930078332')%(t1.c18)) COLLATE RTRIM WHERE (UPPER(((((t1.c1)AND(t1.c18)))AND(t1.c2)))) ORDER BY LIKELY(((t1.c18) IS TRUE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(((((t1.c1)AND(t1.c18)))AND(t1.c2)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON ((t1.c1) BETWEEN (t0.c0) AND (t1.c1)) COLLATE RTRIM CROSS JOIN vt1 ON (('1930078332')%(t1.c18)) COLLATE RTRIM ORDER BY LIKELY(((t1.c18) IS TRUE))  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN t1 ON ((t1.c1) BETWEEN (t0.c0) AND (t1.c1)) COLLATE RTRIM CROSS JOIN vt1 ON (('1930078332')%(t1.c18)) COLLATE RTRIM WHERE (UPPER(((((t1.c1)AND(t1.c18)))AND(t1.c2)))) ORDER BY LIKELY(((t1.c18) IS TRUE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(((((t1.c1)AND(t1.c18)))AND(t1.c2)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON ((t1.c1) BETWEEN (t0.c0) AND (t1.c1)) COLLATE RTRIM CROSS JOIN vt1 ON (('1930078332')%(t1.c18)) COLLATE RTRIM ORDER BY LIKELY(((t1.c18) IS TRUE))  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN t1 ON ((t1.c1) BETWEEN (t0.c0) AND (t1.c1)) COLLATE RTRIM CROSS JOIN vt1 ON (('1930078332')%(t1.c18)) COLLATE RTRIM WHERE (UPPER(((((t1.c1)AND(t1.c18)))AND(t1.c2)))) ORDER BY LIKELY(((t1.c18) IS TRUE))  NULLS LAST;
SELECT * FROM t1, t0, v0 CROSS JOIN vt0 ON TYPEOF((((vt0.c0))<=((-8.15817625E8)))) INNER JOIN vt1 ON ((((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR((((vt0.c0))>((t1.c0))))))OR(((((t1.c1)AND(t1.c18)))OR(vt0.c0)))) WHERE (((((t1.c0)<=(t1.c18))) NOT BETWEEN ((t1.c1 IN ())) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<=(t1.c18))) NOT BETWEEN ((t1.c1 IN ())) AND (t1.c0))) IS TRUE)  as count FROM t1, t0, v0 CROSS JOIN vt0 ON TYPEOF((((vt0.c0))<=((-8.15817625E8)))) INNER JOIN vt1 ON ((((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR((((vt0.c0))>((t1.c0))))))OR(((((t1.c1)AND(t1.c18)))OR(vt0.c0)))));
SELECT * FROM t1, t0, v0 CROSS JOIN vt0 ON TYPEOF((((vt0.c0))<=((-8.15817625E8)))) INNER JOIN vt1 ON ((((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR((((vt0.c0))>((t1.c0))))))OR(((((t1.c1)AND(t1.c18)))OR(vt0.c0)))) WHERE (((((t1.c0)<=(t1.c18))) NOT BETWEEN ((t1.c1 IN ())) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<=(t1.c18))) NOT BETWEEN ((t1.c1 IN ())) AND (t1.c0))) IS TRUE)  as count FROM t1, t0, v0 CROSS JOIN vt0 ON TYPEOF((((vt0.c0))<=((-8.15817625E8)))) INNER JOIN vt1 ON ((((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR((((vt0.c0))>((t1.c0))))))OR(((((t1.c1)AND(t1.c18)))OR(vt0.c0)))));
SELECT * FROM t1, t0, v0 CROSS JOIN vt0 ON TYPEOF((((vt0.c0))<=((-8.15817625E8)))) INNER JOIN vt1 ON ((((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR((((vt0.c0))>((t1.c0))))))OR(((((t1.c1)AND(t1.c18)))OR(vt0.c0)))) WHERE (((((t1.c0)<=(t1.c18))) NOT BETWEEN ((t1.c1 IN ())) AND (t1.c0)));
SELECT COUNT(*) FROM t0, vt0, vt1, t1, v0 WHERE ('1036403376');
SELECT SUM(count) FROM (SELECT (('1036403376') IS TRUE)  as count FROM t0, vt0, vt1, t1, v0);
SELECT COUNT(*) FROM t0, vt0, vt1, t1, v0 WHERE ('1036403376');
SELECT SUM(count) FROM (SELECT (('1036403376') IS TRUE)  as count FROM t0, vt0, vt1, t1, v0);
SELECT COUNT(*) FROM t0, vt0, vt1, t1, v0 WHERE ('1036403376');
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((NOT (vt1.c0)) IN ())) ORDER BY (('')-(CAST(vt1.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((((NOT (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (('')-(CAST(vt1.c0 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((NOT (vt1.c0)) IN ())) ORDER BY (('')-(CAST(vt1.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((((NOT (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (('')-(CAST(vt1.c0 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((NOT (vt1.c0)) IN ())) ORDER BY (('')-(CAST(vt1.c0 AS BLOB))) ASC;
SELECT COUNT(*) FROM t1, v0, vt0, t0 WHERE (((((CAST(v0.c0 AS TEXT))OR(UNLIKELY(t0.c0))))AND(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS TEXT))OR(UNLIKELY(t0.c0))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM t1, v0, vt0, t0);
SELECT COUNT(*) FROM t1, v0, vt0, t0 WHERE (((((CAST(v0.c0 AS TEXT))OR(UNLIKELY(t0.c0))))AND(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS TEXT))OR(UNLIKELY(t0.c0))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM t1, v0, vt0, t0);
SELECT COUNT(*) FROM t1, v0, vt0, t0 WHERE (((((CAST(v0.c0 AS TEXT))OR(UNLIKELY(t0.c0))))AND(((vt0.c0) IS TRUE))));
SELECT * FROM t1, vt1, t0 RIGHT OUTER JOIN v0 ON ((((CAST(v0.c0 AS INTEGER))OR(((((((((((((t1.c0)AND(v0.c0)))OR(t1.c1)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c2)))))AND(CASE WHEN t1.c18 THEN t1.c18 ELSE t1.c18 END)) WHERE (((CAST(t1.c1 AS REAL)) NOT BETWEEN (v0.c0) AND (('1706125010' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c1 AS REAL)) NOT BETWEEN (v0.c0) AND (('1706125010' IN ())))) IS TRUE)  as count FROM t1, vt1, t0 RIGHT OUTER JOIN v0 ON ((((CAST(v0.c0 AS INTEGER))OR(((((((((((((t1.c0)AND(v0.c0)))OR(t1.c1)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c2)))))AND(CASE WHEN t1.c18 THEN t1.c18 ELSE t1.c18 END)));
SELECT * FROM t1, vt1, t0 RIGHT OUTER JOIN v0 ON ((((CAST(v0.c0 AS INTEGER))OR(((((((((((((t1.c0)AND(v0.c0)))OR(t1.c1)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c2)))))AND(CASE WHEN t1.c18 THEN t1.c18 ELSE t1.c18 END)) WHERE (((CAST(t1.c1 AS REAL)) NOT BETWEEN (v0.c0) AND (('1706125010' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c1 AS REAL)) NOT BETWEEN (v0.c0) AND (('1706125010' IN ())))) IS TRUE)  as count FROM t1, vt1, t0 RIGHT OUTER JOIN v0 ON ((((CAST(v0.c0 AS INTEGER))OR(((((((((((((t1.c0)AND(v0.c0)))OR(t1.c1)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c2)))))AND(CASE WHEN t1.c18 THEN t1.c18 ELSE t1.c18 END)));
SELECT * FROM t1, vt1, t0 RIGHT OUTER JOIN v0 ON ((((CAST(v0.c0 AS INTEGER))OR(((((((((((((t1.c0)AND(v0.c0)))OR(t1.c1)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c2)))))AND(CASE WHEN t1.c18 THEN t1.c18 ELSE t1.c18 END)) WHERE (((CAST(t1.c1 AS REAL)) NOT BETWEEN (v0.c0) AND (('1706125010' IN ()))));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN v0 ON (((('[]', t1.c18, t1.c2)) BETWEEN ((t1.c1, t1.c2, t1.c18)) AND ((t1.c1, '1e500', t1.c0))) IN (((v0.c0) NOT BETWEEN (t1.c0) AND (NULL)))) FULL OUTER JOIN t0 ON (NOT ((((t1.c0)) BETWEEN ((t1.c2)) AND ((t0.c0))))) WHERE (t1.c2) ORDER BY (((CAST(t0.c0 AS BLOB)))>=(((~ (t1.c18))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON (((('[]', t1.c18, t1.c2)) BETWEEN ((t1.c1, t1.c2, t1.c18)) AND ((t1.c1, '1e500', t1.c0))) IN (((v0.c0) NOT BETWEEN (t1.c0) AND (NULL)))) FULL OUTER JOIN t0 ON (NOT ((((t1.c0)) BETWEEN ((t1.c2)) AND ((t0.c0))))) ORDER BY (((CAST(t0.c0 AS BLOB)))>=(((~ (t1.c18))))) ASC);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN v0 ON (((('[]', t1.c18, t1.c2)) BETWEEN ((t1.c1, t1.c2, t1.c18)) AND ((t1.c1, '1e500', t1.c0))) IN (((v0.c0) NOT BETWEEN (t1.c0) AND (NULL)))) FULL OUTER JOIN t0 ON (NOT ((((t1.c0)) BETWEEN ((t1.c2)) AND ((t0.c0))))) WHERE (t1.c2) ORDER BY (((CAST(t0.c0 AS BLOB)))>=(((~ (t1.c18))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON (((('[]', t1.c18, t1.c2)) BETWEEN ((t1.c1, t1.c2, t1.c18)) AND ((t1.c1, '1e500', t1.c0))) IN (((v0.c0) NOT BETWEEN (t1.c0) AND (NULL)))) FULL OUTER JOIN t0 ON (NOT ((((t1.c0)) BETWEEN ((t1.c2)) AND ((t0.c0))))) ORDER BY (((CAST(t0.c0 AS BLOB)))>=(((~ (t1.c18))))) ASC);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN v0 ON (((('[]', t1.c18, t1.c2)) BETWEEN ((t1.c1, t1.c2, t1.c18)) AND ((t1.c1, '1e500', t1.c0))) IN (((v0.c0) NOT BETWEEN (t1.c0) AND (NULL)))) FULL OUTER JOIN t0 ON (NOT ((((t1.c0)) BETWEEN ((t1.c2)) AND ((t0.c0))))) WHERE (t1.c2) ORDER BY (((CAST(t0.c0 AS BLOB)))>=(((~ (t1.c18))))) ASC;
SELECT ALL COUNT(*) FROM v0, t0, vt1, t1, vt0 WHERE (((((((('1884254237'))=((t1.c18))))AND(v0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((SQLITE_SOURCE_ID())>>('-2009015824')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((('1884254237'))=((t1.c18))))AND(v0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, t0, vt1, t1, vt0 ORDER BY ((SQLITE_SOURCE_ID())>>('-2009015824')) ASC);
SELECT ALL COUNT(*) FROM v0, t0, vt1, t1, vt0 WHERE (((((((('1884254237'))=((t1.c18))))AND(v0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((SQLITE_SOURCE_ID())>>('-2009015824')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((('1884254237'))=((t1.c18))))AND(v0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, t0, vt1, t1, vt0 ORDER BY ((SQLITE_SOURCE_ID())>>('-2009015824')) ASC);
SELECT ALL COUNT(*) FROM v0, t0, vt1, t1, vt0 WHERE (((((((('1884254237'))=((t1.c18))))AND(v0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((SQLITE_SOURCE_ID())>>('-2009015824')) ASC;
SELECT * FROM vt1, v0, vt0, t0, t1 WHERE ((- (((((t0.c0)AND(vt0.c0)))OR(t1.c18)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((t0.c0)AND(vt0.c0)))OR(t1.c18))))) IS TRUE)  as count FROM vt1, v0, vt0, t0, t1 NOT INDEXED);
SELECT * FROM vt1, v0, vt0, t0, t1 WHERE ((- (((((t0.c0)AND(vt0.c0)))OR(t1.c18)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((t0.c0)AND(vt0.c0)))OR(t1.c18))))) IS TRUE)  as count FROM vt1, v0, vt0, t0, t1 NOT INDEXED);
SELECT * FROM vt1, v0, vt0, t0, t1 WHERE ((- (((((t0.c0)AND(vt0.c0)))OR(t1.c18)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((vt0.c0 IN (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((vt0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((vt0.c0 IN (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((vt0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((vt0.c0 IN (vt0.c0))))));
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT * FROM vt1, t1, t0 RIGHT OUTER JOIN vt0 ON (((CAST(t1.c18 AS NUMERIC), t1.c1, (((vt0.c0))<>((t0.c0)))))!=((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((t1.c1)IS(t1.c1)), 'G!G8\'))) WHERE (((CAST(t1.c18 AS NUMERIC))GLOB(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c18 AS NUMERIC))GLOB(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, t1, t0 RIGHT OUTER JOIN vt0 ON (((CAST(t1.c18 AS NUMERIC), t1.c1, (((vt0.c0))<>((t0.c0)))))!=((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((t1.c1)IS(t1.c1)), 'G!G8\'))));
SELECT * FROM vt1, t1, t0 RIGHT OUTER JOIN vt0 ON (((CAST(t1.c18 AS NUMERIC), t1.c1, (((vt0.c0))<>((t0.c0)))))!=((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((t1.c1)IS(t1.c1)), 'G!G8\'))) WHERE (((CAST(t1.c18 AS NUMERIC))GLOB(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c18 AS NUMERIC))GLOB(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, t1, t0 RIGHT OUTER JOIN vt0 ON (((CAST(t1.c18 AS NUMERIC), t1.c1, (((vt0.c0))<>((t0.c0)))))!=((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((t1.c1)IS(t1.c1)), 'G!G8\'))));
SELECT * FROM vt1, t1, t0 RIGHT OUTER JOIN vt0 ON (((CAST(t1.c18 AS NUMERIC), t1.c1, (((vt0.c0))<>((t0.c0)))))!=((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((t1.c1)IS(t1.c1)), 'G!G8\'))) WHERE (((CAST(t1.c18 AS NUMERIC))GLOB(((vt0.c0) NOT NULL))));
SELECT ALL * FROM t0, v0, vt1 WHERE (-1639883477 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((-1639883477 COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL * FROM t0, v0, vt1 WHERE (-1639883477 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((-1639883477 COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL * FROM t0, v0, vt1 WHERE (-1639883477 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((HEX(DISTINCT vt1.c0)) NOT BETWEEN ((v0.c0 IN ())) AND ((((t1.c0)) BETWEEN ((t1.c18)) AND ((v0.c0))))) INNER JOIN t1 ON '73728970' LEFT OUTER JOIN v0 ON (('352880982')|(((t1.c18) BETWEEN (t1.c18) AND (t1.c1)))) WHERE (CAST(((t1.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((HEX(DISTINCT vt1.c0)) NOT BETWEEN ((v0.c0 IN ())) AND ((((t1.c0)) BETWEEN ((t1.c18)) AND ((v0.c0))))) INNER JOIN t1 ON '73728970' LEFT OUTER JOIN v0 ON (('352880982')|(((t1.c18) BETWEEN (t1.c18) AND (t1.c1)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((HEX(DISTINCT vt1.c0)) NOT BETWEEN ((v0.c0 IN ())) AND ((((t1.c0)) BETWEEN ((t1.c18)) AND ((v0.c0))))) INNER JOIN t1 ON '73728970' LEFT OUTER JOIN v0 ON (('352880982')|(((t1.c18) BETWEEN (t1.c18) AND (t1.c1)))) WHERE (CAST(((t1.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((HEX(DISTINCT vt1.c0)) NOT BETWEEN ((v0.c0 IN ())) AND ((((t1.c0)) BETWEEN ((t1.c18)) AND ((v0.c0))))) INNER JOIN t1 ON '73728970' LEFT OUTER JOIN v0 ON (('352880982')|(((t1.c18) BETWEEN (t1.c18) AND (t1.c1)))));
SELECT ALL * FROM vt1, v0, t0, vt0 WHERE (STRFTIME(((0.9437835297093523) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE x'' END, ((vt1.c0) NOTNULL), vt0.c0 COLLATE RTRIM, ((vt1.c0) NOTNULL))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((0.9437835297093523) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE x'' END, ((vt1.c0) NOTNULL), vt0.c0 COLLATE RTRIM, ((vt1.c0) NOTNULL))) IS TRUE)  as count FROM vt1, v0, t0, vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt1, v0, t0, vt0 WHERE (STRFTIME(((0.9437835297093523) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE x'' END, ((vt1.c0) NOTNULL), vt0.c0 COLLATE RTRIM, ((vt1.c0) NOTNULL))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((0.9437835297093523) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE x'' END, ((vt1.c0) NOTNULL), vt0.c0 COLLATE RTRIM, ((vt1.c0) NOTNULL))) IS TRUE)  as count FROM vt1, v0, t0, vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt1, v0, t0, vt0 WHERE (STRFTIME(((0.9437835297093523) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE x'' END, ((vt1.c0) NOTNULL), vt0.c0 COLLATE RTRIM, ((vt1.c0) NOTNULL))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT * FROM t1 LEFT OUTER JOIN vt1 ON t1.c18 INNER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) BETWEEN (((vt1.c0)OR(t1.c2))) AND (((vt0.c0)=(vt1.c0)))) WHERE ((((NOT (t1.c2))) NOTNULL)) ORDER BY ((t1.c1 COLLATE RTRIM) NOT BETWEEN (((t1.c2) NOT BETWEEN (vt1.c0) AND (''))) AND ((t1.c18 IN (0.7639547074910799, t1.c0)))) ASC, UNLIKELY(DISTINCT vt0.c0 COLLATE BINARY) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t1.c2))) NOTNULL)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt1 ON t1.c18 INNER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) BETWEEN (((vt1.c0)OR(t1.c2))) AND (((vt0.c0)=(vt1.c0)))) ORDER BY ((t1.c1 COLLATE RTRIM) NOT BETWEEN (((t1.c2) NOT BETWEEN (vt1.c0) AND (''))) AND ((t1.c18 IN (0.7639547074910799, t1.c0)))) ASC, UNLIKELY(DISTINCT vt0.c0 COLLATE BINARY) ASC  NULLS LAST);
SELECT * FROM t1 LEFT OUTER JOIN vt1 ON t1.c18 INNER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) BETWEEN (((vt1.c0)OR(t1.c2))) AND (((vt0.c0)=(vt1.c0)))) WHERE ((((NOT (t1.c2))) NOTNULL)) ORDER BY ((t1.c1 COLLATE RTRIM) NOT BETWEEN (((t1.c2) NOT BETWEEN (vt1.c0) AND (''))) AND ((t1.c18 IN (0.7639547074910799, t1.c0)))) ASC, UNLIKELY(DISTINCT vt0.c0 COLLATE BINARY) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t1.c2))) NOTNULL)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt1 ON t1.c18 INNER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) BETWEEN (((vt1.c0)OR(t1.c2))) AND (((vt0.c0)=(vt1.c0)))) ORDER BY ((t1.c1 COLLATE RTRIM) NOT BETWEEN (((t1.c2) NOT BETWEEN (vt1.c0) AND (''))) AND ((t1.c18 IN (0.7639547074910799, t1.c0)))) ASC, UNLIKELY(DISTINCT vt0.c0 COLLATE BINARY) ASC  NULLS LAST);
SELECT * FROM t1 LEFT OUTER JOIN vt1 ON t1.c18 INNER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) BETWEEN (((vt1.c0)OR(t1.c2))) AND (((vt0.c0)=(vt1.c0)))) WHERE ((((NOT (t1.c2))) NOTNULL)) ORDER BY ((t1.c1 COLLATE RTRIM) NOT BETWEEN (((t1.c2) NOT BETWEEN (vt1.c0) AND (''))) AND ((t1.c18 IN (0.7639547074910799, t1.c0)))) ASC, UNLIKELY(DISTINCT vt0.c0 COLLATE BINARY) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY 0.9038576887711927  NULLS FIRST, CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY 0.9038576887711927  NULLS FIRST, CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY 0.9038576887711927  NULLS FIRST, CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY 0.9038576887711927  NULLS FIRST, CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY 0.9038576887711927  NULLS FIRST, CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT) ASC  NULLS FIRST;
SELECT ALL * FROM t0 NATURAL JOIN vt1 WHERE ((json_array(vt1.c0, t0.c0) IN (UNLIKELY(vt1.c0)))) ORDER BY CAST(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((json_array(vt1.c0, t0.c0) IN (UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY CAST(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC));
SELECT ALL * FROM t0 NATURAL JOIN vt1 WHERE ((json_array(vt1.c0, t0.c0) IN (UNLIKELY(vt1.c0)))) ORDER BY CAST(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((json_array(vt1.c0, t0.c0) IN (UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY CAST(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC));
SELECT ALL * FROM t0 NATURAL JOIN vt1 WHERE ((json_array(vt1.c0, t0.c0) IN (UNLIKELY(vt1.c0)))) ORDER BY CAST(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC);
SELECT COUNT(*) FROM vt1, v0, t1, vt0, t0 WHERE ((t1.c0 COLLATE NOCASE IN (vt1.c0 COLLATE BINARY))) ORDER BY ((-900207835)<>(t1.c18)) ASC  NULLS FIRST, ((((t1.c1, t0.c0, t1.c0)) BETWEEN ((t1.c0, 0.13806865819753122, t1.c1)) AND ((vt0.c0, '292830960', NULL))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((t1.c0 COLLATE NOCASE IN (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, v0, t1, vt0, t0 ORDER BY ((-900207835)<>(t1.c18)) ASC  NULLS FIRST, ((((t1.c1, t0.c0, t1.c0)) BETWEEN ((t1.c0, 0.13806865819753122, t1.c1)) AND ((vt0.c0, '292830960', NULL))) IN ()) ASC);
SELECT COUNT(*) FROM vt1, v0, t1, vt0, t0 WHERE ((t1.c0 COLLATE NOCASE IN (vt1.c0 COLLATE BINARY))) ORDER BY ((-900207835)<>(t1.c18)) ASC  NULLS FIRST, ((((t1.c1, t0.c0, t1.c0)) BETWEEN ((t1.c0, 0.13806865819753122, t1.c1)) AND ((vt0.c0, '292830960', NULL))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((t1.c0 COLLATE NOCASE IN (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, v0, t1, vt0, t0 ORDER BY ((-900207835)<>(t1.c18)) ASC  NULLS FIRST, ((((t1.c1, t0.c0, t1.c0)) BETWEEN ((t1.c0, 0.13806865819753122, t1.c1)) AND ((vt0.c0, '292830960', NULL))) IN ()) ASC);
SELECT COUNT(*) FROM vt1, v0, t1, vt0, t0 WHERE ((t1.c0 COLLATE NOCASE IN (vt1.c0 COLLATE BINARY))) ORDER BY ((-900207835)<>(t1.c18)) ASC  NULLS FIRST, ((((t1.c1, t0.c0, t1.c0)) BETWEEN ((t1.c0, 0.13806865819753122, t1.c1)) AND ((vt0.c0, '292830960', NULL))) IN ()) ASC;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON ((((t1.c2)&(-1.33103531E8))) BETWEEN (t1.c2 COLLATE BINARY) AND (CASE WHEN t1.c1 THEN vt0.c0 ELSE t1.c18 END)) INNER JOIN vt1 ON t1.c18 INNER JOIN v0 ON ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE t1.c0 END)-(t0.c0)) FULL OUTER JOIN t1 ON (((t1.c2)-(vt0.c0)) IN (((NULL)IS NOT(t1.c0)))) WHERE (CASE CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END  WHEN vt1.c0 THEN ((vt0.c0) ISNULL) WHEN rtreenode(t1.c18, 0.4432738073835719) THEN ABS(DISTINCT t0.c0) WHEN ABS(vt1.c0) THEN '154121431' ELSE (~ (t1.c18)) END) ORDER BY (CASE t1.c0  WHEN t1.c2 THEN t1.c1 WHEN t0.c0 THEN t1.c2 WHEN t0.c0 THEN t1.c18 END IN (CAST(t1.c18 AS BLOB)))  NULLS LAST, ((t0.c0 COLLATE BINARY)>=(((t1.c2)>=(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END  WHEN vt1.c0 THEN ((vt0.c0) ISNULL) WHEN rtreenode(t1.c18, 0.4432738073835719) THEN ABS(DISTINCT t0.c0) WHEN ABS(vt1.c0) THEN '154121431' ELSE (~ (t1.c18)) END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((t1.c2)&(-1.33103531E8))) BETWEEN (t1.c2 COLLATE BINARY) AND (CASE WHEN t1.c1 THEN vt0.c0 ELSE t1.c18 END)) INNER JOIN vt1 ON t1.c18 INNER JOIN v0 ON ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE t1.c0 END)-(t0.c0)) FULL OUTER JOIN t1 ON (((t1.c2)-(vt0.c0)) IN (((NULL)IS NOT(t1.c0)))) ORDER BY (CASE t1.c0  WHEN t1.c2 THEN t1.c1 WHEN t0.c0 THEN t1.c2 WHEN t0.c0 THEN t1.c18 END IN (CAST(t1.c18 AS BLOB)))  NULLS LAST, ((t0.c0 COLLATE BINARY)>=(((t1.c2)>=(v0.c0)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON ((((t1.c2)&(-1.33103531E8))) BETWEEN (t1.c2 COLLATE BINARY) AND (CASE WHEN t1.c1 THEN vt0.c0 ELSE t1.c18 END)) INNER JOIN vt1 ON t1.c18 INNER JOIN v0 ON ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE t1.c0 END)-(t0.c0)) FULL OUTER JOIN t1 ON (((t1.c2)-(vt0.c0)) IN (((NULL)IS NOT(t1.c0)))) WHERE (CASE CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END  WHEN vt1.c0 THEN ((vt0.c0) ISNULL) WHEN rtreenode(t1.c18, 0.4432738073835719) THEN ABS(DISTINCT t0.c0) WHEN ABS(vt1.c0) THEN '154121431' ELSE (~ (t1.c18)) END) ORDER BY (CASE t1.c0  WHEN t1.c2 THEN t1.c1 WHEN t0.c0 THEN t1.c2 WHEN t0.c0 THEN t1.c18 END IN (CAST(t1.c18 AS BLOB)))  NULLS LAST, ((t0.c0 COLLATE BINARY)>=(((t1.c2)>=(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END  WHEN vt1.c0 THEN ((vt0.c0) ISNULL) WHEN rtreenode(t1.c18, 0.4432738073835719) THEN ABS(DISTINCT t0.c0) WHEN ABS(vt1.c0) THEN '154121431' ELSE (~ (t1.c18)) END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((t1.c2)&(-1.33103531E8))) BETWEEN (t1.c2 COLLATE BINARY) AND (CASE WHEN t1.c1 THEN vt0.c0 ELSE t1.c18 END)) INNER JOIN vt1 ON t1.c18 INNER JOIN v0 ON ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE t1.c0 END)-(t0.c0)) FULL OUTER JOIN t1 ON (((t1.c2)-(vt0.c0)) IN (((NULL)IS NOT(t1.c0)))) ORDER BY (CASE t1.c0  WHEN t1.c2 THEN t1.c1 WHEN t0.c0 THEN t1.c2 WHEN t0.c0 THEN t1.c18 END IN (CAST(t1.c18 AS BLOB)))  NULLS LAST, ((t0.c0 COLLATE BINARY)>=(((t1.c2)>=(v0.c0)))));
SELECT * FROM v0, vt1 WHERE ('1962448330') ORDER BY CASE (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((v0.c0, vt1.c0, 1.66124313E8)))  WHEN CASE WHEN v0.c0 THEN vt1.c0 END THEN ((((((((vt1.c0)AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) ELSE ((0.9906384715611637) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END, LTRIM(((0.7268351799661087)/(v0.c0)), v0.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1962448330') IS TRUE)  as count FROM v0 NOT INDEXED, vt1 ORDER BY CASE (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((v0.c0, vt1.c0, 1.66124313E8)))  WHEN CASE WHEN v0.c0 THEN vt1.c0 END THEN ((((((((vt1.c0)AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) ELSE ((0.9906384715611637) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END, LTRIM(((0.7268351799661087)/(v0.c0)), v0.c0 COLLATE RTRIM)  NULLS FIRST);
SELECT * FROM v0, vt1 WHERE ('1962448330') ORDER BY CASE (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((v0.c0, vt1.c0, 1.66124313E8)))  WHEN CASE WHEN v0.c0 THEN vt1.c0 END THEN ((((((((vt1.c0)AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) ELSE ((0.9906384715611637) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END, LTRIM(((0.7268351799661087)/(v0.c0)), v0.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1962448330') IS TRUE)  as count FROM v0 NOT INDEXED, vt1 ORDER BY CASE (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((v0.c0, vt1.c0, 1.66124313E8)))  WHEN CASE WHEN v0.c0 THEN vt1.c0 END THEN ((((((((vt1.c0)AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) ELSE ((0.9906384715611637) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END, LTRIM(((0.7268351799661087)/(v0.c0)), v0.c0 COLLATE RTRIM)  NULLS FIRST);
SELECT * FROM v0, vt1 WHERE ('1962448330') ORDER BY CASE (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((v0.c0, vt1.c0, 1.66124313E8)))  WHEN CASE WHEN v0.c0 THEN vt1.c0 END THEN ((((((((vt1.c0)AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) ELSE ((0.9906384715611637) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END, LTRIM(((0.7268351799661087)/(v0.c0)), v0.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT * FROM vt0, vt1, v0 WHERE ((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((((0.2389094944366219)<('')), NULL, vt1.c0 COLLATE RTRIM)) AND ((vt0.c0, (vt1.c0 IN ()), ((v0.c0) IS TRUE))))) ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((((0.2389094944366219)<('')), NULL, vt1.c0 COLLATE RTRIM)) AND ((vt0.c0, (vt1.c0 IN ()), ((v0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) IS FALSE) ASC);
SELECT * FROM vt0, vt1, v0 WHERE ((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((((0.2389094944366219)<('')), NULL, vt1.c0 COLLATE RTRIM)) AND ((vt0.c0, (vt1.c0 IN ()), ((v0.c0) IS TRUE))))) ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((((0.2389094944366219)<('')), NULL, vt1.c0 COLLATE RTRIM)) AND ((vt0.c0, (vt1.c0 IN ()), ((v0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) IS FALSE) ASC);
SELECT * FROM vt0, vt1, v0 WHERE ((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((((0.2389094944366219)<('')), NULL, vt1.c0 COLLATE RTRIM)) AND ((vt0.c0, (vt1.c0 IN ()), ((v0.c0) IS TRUE))))) ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) IS FALSE) ASC;
SELECT COUNT(*) FROM t0, v0 WHERE (((((UNLIKELY(DISTINCT v0.c0))AND((t0.c0 IN ()))))AND((v0.c0 IN ())))) ORDER BY CASE ((v0.c0) ISNULL)  WHEN ((((v0.c0)AND(t0.c0)))AND(v0.c0)) THEN ((NULL)>>(v0.c0)) WHEN ((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))OR(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))!=((t0.c0, v0.c0, 0xffffffffc1f03dab, t0.c0, t0.c0))) WHEN ((v0.c0)+(t0.c0)) THEN (x'' IN ()) WHEN '-709335674' THEN (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((UNLIKELY(DISTINCT v0.c0))AND((t0.c0 IN ()))))AND((v0.c0 IN ())))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE ((v0.c0) ISNULL)  WHEN ((((v0.c0)AND(t0.c0)))AND(v0.c0)) THEN ((NULL)>>(v0.c0)) WHEN ((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))OR(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))<>((t0.c0, v0.c0, 0xffffffffc1f03dab, t0.c0, t0.c0))) WHEN ((v0.c0)+(t0.c0)) THEN (x'' IN ()) WHEN '-709335674' THEN (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE (((((UNLIKELY(DISTINCT v0.c0))AND((t0.c0 IN ()))))AND((v0.c0 IN ())))) ORDER BY CASE ((v0.c0) ISNULL)  WHEN ((((v0.c0)AND(t0.c0)))AND(v0.c0)) THEN ((NULL)>>(v0.c0)) WHEN ((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))OR(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))!=((t0.c0, v0.c0, 0xffffffffc1f03dab, t0.c0, t0.c0))) WHEN ((v0.c0)+(t0.c0)) THEN (x'' IN ()) WHEN '-709335674' THEN (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((UNLIKELY(DISTINCT v0.c0))AND((t0.c0 IN ()))))AND((v0.c0 IN ())))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE ((v0.c0) ISNULL)  WHEN ((((v0.c0)AND(t0.c0)))AND(v0.c0)) THEN ((NULL)>>(v0.c0)) WHEN ((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))OR(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))<>((t0.c0, v0.c0, 0xffffffffc1f03dab, t0.c0, t0.c0))) WHEN ((v0.c0)+(t0.c0)) THEN (x'' IN ()) WHEN '-709335674' THEN (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE (((((UNLIKELY(DISTINCT v0.c0))AND((t0.c0 IN ()))))AND((v0.c0 IN ())))) ORDER BY CASE ((v0.c0) ISNULL)  WHEN ((((v0.c0)AND(t0.c0)))AND(v0.c0)) THEN ((NULL)>>(v0.c0)) WHEN ((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))OR(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))!=((t0.c0, v0.c0, 0xffffffffc1f03dab, t0.c0, t0.c0))) WHEN ((v0.c0)+(t0.c0)) THEN (x'' IN ()) WHEN '-709335674' THEN (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END  NULLS FIRST;
SELECT ALL * FROM vt0, v0, t0, vt1 NATURAL JOIN t1 WHERE (((('-1511155110' IN ())) BETWEEN (t1.c18 COLLATE RTRIM) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((('-1511155110' IN ())) BETWEEN (t1.c18 COLLATE RTRIM) AND (vt0.c0))) IS TRUE)  as count FROM vt0, v0, t0, vt1 NATURAL JOIN t1);
SELECT ALL * FROM vt0, v0, t0, vt1 NATURAL JOIN t1 WHERE (((('-1511155110' IN ())) BETWEEN (t1.c18 COLLATE RTRIM) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((('-1511155110' IN ())) BETWEEN (t1.c18 COLLATE RTRIM) AND (vt0.c0))) IS TRUE)  as count FROM vt0, v0, t0, vt1 NATURAL JOIN t1);
SELECT ALL * FROM vt0, v0, t0, vt1 NATURAL JOIN t1 WHERE (((('-1511155110' IN ())) BETWEEN (t1.c18 COLLATE RTRIM) AND (vt0.c0)));
SELECT ALL COUNT(*) FROM vt1, t0, t1 WHERE ((((CASE WHEN t1.c2 THEN t1.c18 END, ((((t0.c0)AND(t1.c1)))AND('2121796498')), t1.c1))=((CAST(vt1.c0 AS BLOB), ((((t1.c1)AND(t1.c18)))OR(t1.c2)), ((t0.c0)IS(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t1.c2 THEN t1.c18 END, ((((t0.c0)AND(t1.c1)))AND('2121796498')), t1.c1))=((CAST(vt1.c0 AS BLOB), ((((t1.c1)AND(t1.c18)))OR(t1.c2)), ((t0.c0)IS(vt1.c0)))))) IS TRUE)  as count FROM vt1, t0, t1);
SELECT ALL COUNT(*) FROM vt1, t0, t1 WHERE ((((CASE WHEN t1.c2 THEN t1.c18 END, ((((t0.c0)AND(t1.c1)))AND('2121796498')), t1.c1))=((CAST(vt1.c0 AS BLOB), ((((t1.c1)AND(t1.c18)))OR(t1.c2)), ((t0.c0)IS(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t1.c2 THEN t1.c18 END, ((((t0.c0)AND(t1.c1)))AND('2121796498')), t1.c1))=((CAST(vt1.c0 AS BLOB), ((((t1.c1)AND(t1.c18)))OR(t1.c2)), ((t0.c0)IS(vt1.c0)))))) IS TRUE)  as count FROM vt1, t0, t1);
SELECT ALL COUNT(*) FROM vt1, t0, t1 WHERE ((((CASE WHEN t1.c2 THEN t1.c18 END, ((((t0.c0)AND(t1.c1)))AND('2121796498')), t1.c1))=((CAST(vt1.c0 AS BLOB), ((((t1.c1)AND(t1.c18)))OR(t1.c2)), ((t0.c0)IS(vt1.c0))))));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON CAST(CASE WHEN t0.c0 THEN t0.c0 END AS NUMERIC) RIGHT OUTER JOIN t0 ON CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END COLLATE NOCASE WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (TYPEOF(t0.c0)) AND (((t0.c0)<<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) BETWEEN (TYPEOF(t0.c0)) AND (((t0.c0)<<(t0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON CAST(CASE WHEN t0.c0 THEN t0.c0 END AS NUMERIC) RIGHT OUTER JOIN t0 ON CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END COLLATE NOCASE);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON CAST(CASE WHEN t0.c0 THEN t0.c0 END AS NUMERIC) RIGHT OUTER JOIN t0 ON CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END COLLATE NOCASE WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (TYPEOF(t0.c0)) AND (((t0.c0)<<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) BETWEEN (TYPEOF(t0.c0)) AND (((t0.c0)<<(t0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON CAST(CASE WHEN t0.c0 THEN t0.c0 END AS NUMERIC) RIGHT OUTER JOIN t0 ON CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED, t1, v0 WHERE (CAST((t1.c18 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c18 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0, t0, t1, v0);
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED, t1, v0 WHERE (CAST((t1.c18 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c18 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0, t0, t1, v0);
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED, t1, v0 WHERE (CAST((t1.c18 IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN t0 ON (NOT ((((t1.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))) WHERE (CAST(x'' AS NUMERIC) COLLATE RTRIM) ORDER BY ((t0.c0) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON (NOT ((((t1.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))) ORDER BY ((t0.c0) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN t0 ON (NOT ((((t1.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))) WHERE (CAST(x'' AS NUMERIC) COLLATE RTRIM) ORDER BY ((t0.c0) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON (NOT ((((t1.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))) ORDER BY ((t0.c0) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN t0 ON (NOT ((((t1.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))) WHERE (CAST(x'' AS NUMERIC) COLLATE RTRIM) ORDER BY ((t0.c0) IS TRUE)  NULLS LAST;
SELECT * FROM v0, vt1, t0, t1 WHERE (((t1.c18)|(((t1.c1) NOT BETWEEN (NULL) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((t1.c18)|(((t1.c1) NOT BETWEEN (NULL) AND (t1.c0))))) IS TRUE)  as count FROM v0, vt1, t0, t1);
SELECT * FROM v0, vt1, t0, t1 WHERE (((t1.c18)|(((t1.c1) NOT BETWEEN (NULL) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((t1.c18)|(((t1.c1) NOT BETWEEN (NULL) AND (t1.c0))))) IS TRUE)  as count FROM v0, vt1, t0, t1);
SELECT * FROM v0, vt1, t0, t1 WHERE (((t1.c18)|(((t1.c1) NOT BETWEEN (NULL) AND (t1.c0)))));
SELECT * FROM vt1, v0, vt0, t0 WHERE (((((LOWER(t0.c0))OR(TIME(vt1.c0, vt0.c0, t0.c0, vt0.c0, t0.c0, vt0.c0, vt1.c0))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CAST(CASE WHEN v0.c0 THEN t0.c0 END AS REAL), CAST(CAST(t0.c0 AS REAL) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((LOWER(t0.c0))OR(TIME(vt1.c0, vt0.c0, t0.c0, vt0.c0, t0.c0, vt0.c0, vt1.c0))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt1, v0, vt0, t0 ORDER BY CAST(CASE WHEN v0.c0 THEN t0.c0 END AS REAL), CAST(CAST(t0.c0 AS REAL) AS REAL));
SELECT * FROM vt1, v0, vt0, t0 WHERE (((((LOWER(t0.c0))OR(TIME(vt1.c0, vt0.c0, t0.c0, vt0.c0, t0.c0, vt0.c0, vt1.c0))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CAST(CASE WHEN v0.c0 THEN t0.c0 END AS REAL), CAST(CAST(t0.c0 AS REAL) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((LOWER(t0.c0))OR(TIME(vt1.c0, vt0.c0, t0.c0, vt0.c0, t0.c0, vt0.c0, vt1.c0))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt1, v0, vt0, t0 ORDER BY CAST(CASE WHEN v0.c0 THEN t0.c0 END AS REAL), CAST(CAST(t0.c0 AS REAL) AS REAL));
SELECT * FROM vt1, v0, vt0, t0 WHERE (((((LOWER(t0.c0))OR(TIME(vt1.c0, vt0.c0, t0.c0, vt0.c0, t0.c0, vt0.c0, vt1.c0))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CAST(CASE WHEN v0.c0 THEN t0.c0 END AS REAL), CAST(CAST(t0.c0 AS REAL) AS REAL);
SELECT COUNT(*) FROM vt1, v0, vt0 FULL OUTER JOIN t1 ON (DATETIME(t1.c2, t1.c1, t1.c0) IN ()) LEFT OUTER JOIN t0 ON ((((vt0.c0)LIKE(t1.c18)))>((('1293179177') NOT BETWEEN (t1.c0) AND (t1.c2)))) WHERE (t1.c2) ORDER BY TYPEOF(((vt0.c0) ISNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM vt1, v0, vt0 FULL OUTER JOIN t1 ON (DATETIME(t1.c2, t1.c1, t1.c0) IN ()) LEFT OUTER JOIN t0 ON ((((vt0.c0)LIKE(t1.c18)))>((('1293179177') NOT BETWEEN (t1.c0) AND (t1.c2)))) ORDER BY TYPEOF(((vt0.c0) ISNULL))  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0, vt0 FULL OUTER JOIN t1 ON (DATETIME(t1.c2, t1.c1, t1.c0) IN ()) LEFT OUTER JOIN t0 ON ((((vt0.c0)LIKE(t1.c18)))>((('1293179177') NOT BETWEEN (t1.c0) AND (t1.c2)))) WHERE (t1.c2) ORDER BY TYPEOF(((vt0.c0) ISNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM vt1, v0, vt0 FULL OUTER JOIN t1 ON (DATETIME(t1.c2, t1.c1, t1.c0) IN ()) LEFT OUTER JOIN t0 ON ((((vt0.c0)LIKE(t1.c18)))>((('1293179177') NOT BETWEEN (t1.c0) AND (t1.c2)))) ORDER BY TYPEOF(((vt0.c0) ISNULL))  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0, vt0 FULL OUTER JOIN t1 ON (DATETIME(t1.c2, t1.c1, t1.c0) IN ()) LEFT OUTER JOIN t0 ON ((((vt0.c0)LIKE(t1.c18)))>((('1293179177') NOT BETWEEN (t1.c0) AND (t1.c2)))) WHERE (t1.c2) ORDER BY TYPEOF(((vt0.c0) ISNULL))  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 WHERE (t0.c0) ORDER BY (((vt1.c0) NOTNULL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t0 ORDER BY (((vt1.c0) NOTNULL) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE (t0.c0) ORDER BY (((vt1.c0) NOTNULL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t0 ORDER BY (((vt1.c0) NOTNULL) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE (t0.c0) ORDER BY (((vt1.c0) NOTNULL) IN ()) ASC  NULLS LAST;
SELECT * FROM v0, vt1, t1, t0 WHERE (ABS(DISTINCT t1.c1 COLLATE BINARY)) ORDER BY CASE (NOT (t0.c0))  WHEN LOWER(DISTINCT t1.c2) THEN CASE WHEN t1.c0 THEN vt1.c0 WHEN t1.c18 THEN t1.c1 WHEN t1.c2 THEN t1.c18 WHEN -794046394 THEN t0.c0 WHEN t1.c1 THEN 0.8075745642334552 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT t1.c1 COLLATE BINARY)) IS TRUE)  as count FROM v0, vt1, t1, t0 ORDER BY CASE (NOT (t0.c0))  WHEN LOWER(DISTINCT t1.c2) THEN CASE WHEN t1.c0 THEN vt1.c0 WHEN t1.c18 THEN t1.c1 WHEN t1.c2 THEN t1.c18 WHEN -794046394 THEN t0.c0 WHEN t1.c1 THEN 0.8075745642334552 END END  NULLS LAST);
SELECT * FROM v0, vt1, t1, t0 WHERE (ABS(DISTINCT t1.c1 COLLATE BINARY)) ORDER BY CASE (NOT (t0.c0))  WHEN LOWER(DISTINCT t1.c2) THEN CASE WHEN t1.c0 THEN vt1.c0 WHEN t1.c18 THEN t1.c1 WHEN t1.c2 THEN t1.c18 WHEN -794046394 THEN t0.c0 WHEN t1.c1 THEN 0.8075745642334552 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT t1.c1 COLLATE BINARY)) IS TRUE)  as count FROM v0, vt1, t1, t0 ORDER BY CASE (NOT (t0.c0))  WHEN LOWER(DISTINCT t1.c2) THEN CASE WHEN t1.c0 THEN vt1.c0 WHEN t1.c18 THEN t1.c1 WHEN t1.c2 THEN t1.c18 WHEN -794046394 THEN t0.c0 WHEN t1.c1 THEN 0.8075745642334552 END END  NULLS LAST);
SELECT * FROM v0, vt1, t1, t0 WHERE (ABS(DISTINCT t1.c1 COLLATE BINARY)) ORDER BY CASE (NOT (t0.c0))  WHEN LOWER(DISTINCT t1.c2) THEN CASE WHEN t1.c0 THEN vt1.c0 WHEN t1.c18 THEN t1.c1 WHEN t1.c2 THEN t1.c18 WHEN -794046394 THEN t0.c0 WHEN t1.c1 THEN 0.8075745642334552 END END  NULLS LAST;
SELECT * FROM vt1, v0, vt0, t0, t1 WHERE (CASE WHEN ((t1.c1)=(v0.c0)) THEN (((t1.c0, t1.c18, 0.10865955554590001))>((v0.c0, v0.c0, t1.c2))) WHEN (((t1.c18))>((t0.c0))) THEN (('-225232471')||(t0.c0)) WHEN (+ (t1.c1)) THEN 0.972331126957068 END) ORDER BY 0X457225;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c1)=(v0.c0)) THEN (((t1.c0, t1.c18, 0.10865955554590001))>((v0.c0, v0.c0, t1.c2))) WHEN (((t1.c18))>((t0.c0))) THEN (('-225232471')||(t0.c0)) WHEN (+ (t1.c1)) THEN 0.972331126957068 END) IS TRUE)  as count FROM vt1, v0, vt0, t0, t1 ORDER BY 0X457225);
SELECT * FROM vt1, v0, vt0, t0, t1 WHERE (CASE WHEN ((t1.c1)=(v0.c0)) THEN (((t1.c0, t1.c18, 0.10865955554590001))>((v0.c0, v0.c0, t1.c2))) WHEN (((t1.c18))>((t0.c0))) THEN (('-225232471')||(t0.c0)) WHEN (+ (t1.c1)) THEN 0.972331126957068 END) ORDER BY 0X457225;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c1)=(v0.c0)) THEN (((t1.c0, t1.c18, 0.10865955554590001))>((v0.c0, v0.c0, t1.c2))) WHEN (((t1.c18))>((t0.c0))) THEN (('-225232471')||(t0.c0)) WHEN (+ (t1.c1)) THEN 0.972331126957068 END) IS TRUE)  as count FROM vt1, v0, vt0, t0, t1 ORDER BY 0X457225);
SELECT COUNT(*) FROM t0, v0, vt0 FULL OUTER JOIN t1 ON (('-990868394') NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c18))) AND ((NOT (t1.c2)))) LEFT OUTER JOIN vt1 ON (vt0.c0 COLLATE RTRIM IN ()) WHERE (0.9021552135220828) ORDER BY vt1.c0, -2048391079 ASC, ((CAST(0.9034441186050323 AS BLOB))&(((((vt1.c0)OR(v0.c0)))AND(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9021552135220828) IS TRUE)  as count FROM t0, v0, vt0 FULL OUTER JOIN t1 ON (('-990868394') NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c18))) AND ((NOT (t1.c2)))) LEFT OUTER JOIN vt1 ON (vt0.c0 COLLATE RTRIM IN ()) ORDER BY vt1.c0, -2048391079 ASC, ((CAST(0.9034441186050323 AS BLOB))&(((((vt1.c0)OR(v0.c0)))AND(t0.c0)))) ASC);
SELECT COUNT(*) FROM t0, v0, vt0 FULL OUTER JOIN t1 ON (('-990868394') NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c18))) AND ((NOT (t1.c2)))) LEFT OUTER JOIN vt1 ON (vt0.c0 COLLATE RTRIM IN ()) WHERE (0.9021552135220828) ORDER BY vt1.c0, -2048391079 ASC, ((CAST(0.9034441186050323 AS BLOB))&(((((vt1.c0)OR(v0.c0)))AND(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9021552135220828) IS TRUE)  as count FROM t0, v0, vt0 FULL OUTER JOIN t1 ON (('-990868394') NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c18))) AND ((NOT (t1.c2)))) LEFT OUTER JOIN vt1 ON (vt0.c0 COLLATE RTRIM IN ()) ORDER BY vt1.c0, -2048391079 ASC, ((CAST(0.9034441186050323 AS BLOB))&(((((vt1.c0)OR(v0.c0)))AND(t0.c0)))) ASC);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (TYPEOF((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))) IS TRUE)  as count FROM v0, vt0, t0 NOT INDEXED);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (TYPEOF((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))) IS TRUE)  as count FROM v0, vt0, t0 NOT INDEXED);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (TYPEOF((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))));
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (COALESCE('-1396081221', 0.06777031253942489));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE('-1396081221', 0.06777031253942489)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (COALESCE('-1396081221', 0.06777031253942489));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE('-1396081221', 0.06777031253942489)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (COALESCE('-1396081221', 0.06777031253942489));
SELECT ALL * FROM t1 LEFT OUTER JOIN t0 ON (- (t0.c0)) WHERE (((((t0.c0) ISNULL)) ISNULL)) ORDER BY 0.17311895051098192  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON (- (t0.c0)) ORDER BY 0.17311895051098192  NULLS LAST);
SELECT ALL * FROM t1 LEFT OUTER JOIN t0 ON (- (t0.c0)) WHERE (((((t0.c0) ISNULL)) ISNULL)) ORDER BY 0.17311895051098192  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON (- (t0.c0)) ORDER BY 0.17311895051098192  NULLS LAST);
SELECT ALL * FROM t1 LEFT OUTER JOIN t0 ON (- (t0.c0)) WHERE (((((t0.c0) ISNULL)) ISNULL)) ORDER BY 0.17311895051098192  NULLS LAST;
SELECT ALL * FROM vt0, vt1, t1, t0 WHERE (((((x'')AND((NOT (vt1.c0)))))AND(CASE NULL  WHEN '1589258290' THEN t1.c1 WHEN t1.c18 THEN vt1.c0 WHEN t1.c0 THEN vt0.c0 END))) ORDER BY (~ ((((t1.c2, NULL, NULL))!=((t1.c18, t0.c0, vt1.c0)))))  NULLS LAST, t0.c0, (((t1.c0)LIKE('敵e1\')) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND((NOT (vt1.c0)))))AND(CASE NULL  WHEN '1589258290' THEN t1.c1 WHEN t1.c18 THEN vt1.c0 WHEN t1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1, t1, t0 ORDER BY (~ ((((t1.c2, NULL, NULL))<>((t1.c18, t0.c0, vt1.c0)))))  NULLS LAST, t0.c0, (((t1.c0)LIKE('敵e1\')) IN ()));
SELECT ALL * FROM vt0, vt1, t1, t0 WHERE (((((x'')AND((NOT (vt1.c0)))))AND(CASE NULL  WHEN '1589258290' THEN t1.c1 WHEN t1.c18 THEN vt1.c0 WHEN t1.c0 THEN vt0.c0 END))) ORDER BY (~ ((((t1.c2, NULL, NULL))!=((t1.c18, t0.c0, vt1.c0)))))  NULLS LAST, t0.c0, (((t1.c0)LIKE('敵e1\')) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND((NOT (vt1.c0)))))AND(CASE NULL  WHEN '1589258290' THEN t1.c1 WHEN t1.c18 THEN vt1.c0 WHEN t1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1, t1, t0 ORDER BY (~ ((((t1.c2, NULL, NULL))<>((t1.c18, t0.c0, vt1.c0)))))  NULLS LAST, t0.c0, (((t1.c0)LIKE('敵e1\')) IN ()));
SELECT ALL * FROM vt0, vt1, t1, t0 WHERE (((((x'')AND((NOT (vt1.c0)))))AND(CASE NULL  WHEN '1589258290' THEN t1.c1 WHEN t1.c18 THEN vt1.c0 WHEN t1.c0 THEN vt0.c0 END))) ORDER BY (~ ((((t1.c2, NULL, NULL))!=((t1.c18, t0.c0, vt1.c0)))))  NULLS LAST, t0.c0, (((t1.c0)LIKE('敵e1\')) IN ());
SELECT ALL * FROM t1 WHERE ('tC') ORDER BY t1.c18 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('tC') IS TRUE)  as count FROM t1 ORDER BY t1.c18 ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ('tC') ORDER BY t1.c18 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('tC') IS TRUE)  as count FROM t1 ORDER BY t1.c18 ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ('tC') ORDER BY t1.c18 ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((t1.c2)&(t1.c0))) ORDER BY CAST(((t1.c18)>('dOe')) AS TEXT), (((t1.c0))<=((t1.c0))) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2)&(t1.c0))) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY CAST(((t1.c18)>('dOe')) AS TEXT), (((t1.c0))<=((t1.c0))) COLLATE BINARY DESC);
SELECT COUNT(*) FROM t1 WHERE (((t1.c2)&(t1.c0))) ORDER BY CAST(((t1.c18)>('dOe')) AS TEXT), (((t1.c0))<=((t1.c0))) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2)&(t1.c0))) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY CAST(((t1.c18)>('dOe')) AS TEXT), (((t1.c0))<=((t1.c0))) COLLATE BINARY DESC);
SELECT COUNT(*) FROM t1 WHERE (((t1.c2)&(t1.c0))) ORDER BY CAST(((t1.c18)>('dOe')) AS TEXT), (((t1.c0))<=((t1.c0))) COLLATE BINARY DESC;
SELECT * FROM t0, t1, vt1, vt0, v0 WHERE (((((((((((((vt0.c0)AND(t1.c1)))AND('0.9789472757794879')))OR(vt1.c0)))AND(v0.c0)))OR((NOT (v0.c0)))))OR(((t1.c1)LIKE(t1.c1))))) ORDER BY (CASE WHEN t1.c18 THEN vt0.c0 WHEN t1.c1 THEN t0.c0 WHEN vt0.c0 THEN NULL END IN ((+ (vt1.c0)), ((v0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)AND(t1.c1)))AND('0.9789472757794879')))OR(vt1.c0)))AND(v0.c0)))OR((NOT (v0.c0)))))OR(((t1.c1)LIKE(t1.c1))))) IS TRUE)  as count FROM t0, t1, vt1, vt0, v0 ORDER BY (CASE WHEN t1.c18 THEN vt0.c0 WHEN t1.c1 THEN t0.c0 WHEN vt0.c0 THEN NULL END IN ((+ (vt1.c0)), ((v0.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT * FROM t0, t1, vt1, vt0, v0 WHERE (((((((((((((vt0.c0)AND(t1.c1)))AND('0.9789472757794879')))OR(vt1.c0)))AND(v0.c0)))OR((NOT (v0.c0)))))OR(((t1.c1)LIKE(t1.c1))))) ORDER BY (CASE WHEN t1.c18 THEN vt0.c0 WHEN t1.c1 THEN t0.c0 WHEN vt0.c0 THEN NULL END IN ((+ (vt1.c0)), ((v0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)AND(t1.c1)))AND('0.9789472757794879')))OR(vt1.c0)))AND(v0.c0)))OR((NOT (v0.c0)))))OR(((t1.c1)LIKE(t1.c1))))) IS TRUE)  as count FROM t0, t1, vt1, vt0, v0 ORDER BY (CASE WHEN t1.c18 THEN vt0.c0 WHEN t1.c1 THEN t0.c0 WHEN vt0.c0 THEN NULL END IN ((+ (vt1.c0)), ((v0.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT * FROM t0, t1, vt1, vt0, v0 WHERE (((((((((((((vt0.c0)AND(t1.c1)))AND('0.9789472757794879')))OR(vt1.c0)))AND(v0.c0)))OR((NOT (v0.c0)))))OR(((t1.c1)LIKE(t1.c1))))) ORDER BY (CASE WHEN t1.c18 THEN vt0.c0 WHEN t1.c1 THEN t0.c0 WHEN vt0.c0 THEN NULL END IN ((+ (vt1.c0)), ((v0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt1, t1 WHERE (((((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c18)))<=(IFNULL(t1.c18, t1.c0)))) ORDER BY (~ (SUBSTR(t1.c18, t1.c1)));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c18)))<=(IFNULL(t1.c18, t1.c0)))) IS TRUE)  as count FROM v0, vt1, t1 ORDER BY (~ (SUBSTR(t1.c18, t1.c1))));
SELECT COUNT(*) FROM v0, vt1, t1 WHERE (((((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c18)))<=(IFNULL(t1.c18, t1.c0)))) ORDER BY (~ (SUBSTR(t1.c18, t1.c1)));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c18)))<=(IFNULL(t1.c18, t1.c0)))) IS TRUE)  as count FROM v0, vt1, t1 ORDER BY (~ (SUBSTR(t1.c18, t1.c1))));
SELECT COUNT(*) FROM v0, vt1, t1 WHERE (((((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c18)))<=(IFNULL(t1.c18, t1.c0)))) ORDER BY (~ (SUBSTR(t1.c18, t1.c1)));
SELECT * FROM vt0, t0, vt1 NATURAL JOIN t1 WHERE (((((t1.c1) NOT BETWEEN (vt1.c0) AND (t1.c2))) NOT NULL)) ORDER BY ((((t1.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN ((t1.c0 IN ())) AND (UPPER(t1.c1)));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) NOT BETWEEN (vt1.c0) AND (t1.c2))) NOT NULL)) IS TRUE)  as count FROM vt0, t0, vt1 NATURAL JOIN t1 ORDER BY ((((t1.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN ((t1.c0 IN ())) AND (UPPER(t1.c1))));
SELECT * FROM vt0, t0, vt1 NATURAL JOIN t1 WHERE (((((t1.c1) NOT BETWEEN (vt1.c0) AND (t1.c2))) NOT NULL)) ORDER BY ((((t1.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN ((t1.c0 IN ())) AND (UPPER(t1.c1)));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) NOT BETWEEN (vt1.c0) AND (t1.c2))) NOT NULL)) IS TRUE)  as count FROM vt0, t0, vt1 NATURAL JOIN t1 ORDER BY ((((t1.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN ((t1.c0 IN ())) AND (UPPER(t1.c1))));
SELECT * FROM vt0, t0, vt1 NATURAL JOIN t1 WHERE (((((t1.c1) NOT BETWEEN (vt1.c0) AND (t1.c2))) NOT NULL)) ORDER BY ((((t1.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN ((t1.c0 IN ())) AND (UPPER(t1.c1)));
SELECT COUNT(*) FROM v0, t0, vt0, vt1, t1 WHERE ((((0.8296823839561555)+(t1.c18)) IN ()));
SELECT SUM(count) FROM (SELECT (((((0.8296823839561555)+(t1.c18)) IN ())) IS TRUE)  as count FROM v0, t0, vt0, vt1, t1);
SELECT COUNT(*) FROM v0, t0, vt0, vt1, t1 WHERE ((((0.8296823839561555)+(t1.c18)) IN ()));
SELECT SUM(count) FROM (SELECT (((((0.8296823839561555)+(t1.c18)) IN ())) IS TRUE)  as count FROM v0, t0, vt0, vt1, t1);
SELECT COUNT(*) FROM v0, t0, vt0, vt1, t1 WHERE ((((0.8296823839561555)+(t1.c18)) IN ()));
SELECT * FROM t1 INDEXED BY i73, vt1, v0, t0, vt0 WHERE (CASE WHEN ((v0.c0)*(v0.c0)) THEN ((t1.c1)<>(t0.c0)) WHEN '154121431' THEN (~ (t1.c1)) WHEN ((vt0.c0) NOT NULL) THEN TYPEOF(t0.c0) END) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)*(v0.c0)) THEN ((t1.c1)!=(t0.c0)) WHEN '154121431' THEN (~ (t1.c1)) WHEN ((vt0.c0) NOT NULL) THEN TYPEOF(t0.c0) END) IS TRUE)  as count FROM t1 INDEXED BY i73, vt1, v0, t0, vt0 ORDER BY t0.c0);
SELECT * FROM t1 INDEXED BY i73, vt1, v0, t0, vt0 WHERE (CASE WHEN ((v0.c0)*(v0.c0)) THEN ((t1.c1)<>(t0.c0)) WHEN '154121431' THEN (~ (t1.c1)) WHEN ((vt0.c0) NOT NULL) THEN TYPEOF(t0.c0) END) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)*(v0.c0)) THEN ((t1.c1)!=(t0.c0)) WHEN '154121431' THEN (~ (t1.c1)) WHEN ((vt0.c0) NOT NULL) THEN TYPEOF(t0.c0) END) IS TRUE)  as count FROM t1 INDEXED BY i73, vt1, v0, t0, vt0 ORDER BY t0.c0);
SELECT ALL COUNT(*) FROM vt0, t0, v0, t1 WHERE (0xffffffff9f0b6aeb);
SELECT SUM(count) FROM (SELECT ((0Xffffffff9f0b6aeb) IS TRUE)  as count FROM vt0, t0, v0, t1);
SELECT ALL COUNT(*) FROM vt0, t0, v0, t1 WHERE (0xffffffff9f0b6aeb);
SELECT SUM(count) FROM (SELECT ((0Xffffffff9f0b6aeb) IS TRUE)  as count FROM vt0, t0, v0, t1);
SELECT ALL COUNT(*) FROM vt0, t0, v0, t1 WHERE (0xffffffff9f0b6aeb);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED CROSS JOIN vt1 ON CAST(((vt1.c0)OR(vt1.c0)) AS NUMERIC) WHERE (((CAST(vt1.c0 AS INTEGER))LIKE(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (((t0.c0) IS TRUE) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS LAST, ((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))|((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))LIKE(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON CAST(((vt1.c0)OR(vt1.c0)) AS NUMERIC) ORDER BY (((t0.c0) IS TRUE) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS LAST, ((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))|((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED CROSS JOIN vt1 ON CAST(((vt1.c0)OR(vt1.c0)) AS NUMERIC) WHERE (((CAST(vt1.c0 AS INTEGER))LIKE(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (((t0.c0) IS TRUE) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS LAST, ((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))|((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))LIKE(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON CAST(((vt1.c0)OR(vt1.c0)) AS NUMERIC) ORDER BY (((t0.c0) IS TRUE) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS LAST, ((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))|((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED CROSS JOIN vt1 ON CAST(((vt1.c0)OR(vt1.c0)) AS NUMERIC) WHERE (((CAST(vt1.c0 AS INTEGER))LIKE(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (((t0.c0) IS TRUE) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS LAST, ((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))|((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))));
SELECT ALL * FROM v0, t0, vt0, vt1, t1 WHERE (((((((((((((TRIM(t1.c1))AND(CAST(NULL AS BLOB))))OR(LOWER(DISTINCT vt1.c0))))OR(((t1.c18) ISNULL))))OR(LOWER(t1.c18))))AND((((v0.c0, t1.c0, '#'))>((t1.c0, vt1.c0, t1.c0))))))OR(CASE WHEN t1.c1 THEN vt0.c0 WHEN 0.40510726984955137 THEN t0.c0 WHEN t0.c0 THEN t1.c2 END))) ORDER BY CAST(((((t1.c18)AND(vt0.c0)))OR(t1.c2)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((TRIM(t1.c1))AND(CAST(NULL AS BLOB))))OR(LOWER(DISTINCT vt1.c0))))OR(((t1.c18) ISNULL))))OR(LOWER(t1.c18))))AND((((v0.c0, t1.c0, '#'))>((t1.c0, vt1.c0, t1.c0))))))OR(CASE WHEN t1.c1 THEN vt0.c0 WHEN 0.40510726984955137 THEN t0.c0 WHEN t0.c0 THEN t1.c2 END))) IS TRUE)  as count FROM v0, t0, vt0, vt1, t1 ORDER BY CAST(((((t1.c18)AND(vt0.c0)))OR(t1.c2)) AS INTEGER) ASC  NULLS LAST);
SELECT ALL * FROM v0, t0, vt0, vt1, t1 WHERE (((((((((((((TRIM(t1.c1))AND(CAST(NULL AS BLOB))))OR(LOWER(DISTINCT vt1.c0))))OR(((t1.c18) ISNULL))))OR(LOWER(t1.c18))))AND((((v0.c0, t1.c0, '#'))>((t1.c0, vt1.c0, t1.c0))))))OR(CASE WHEN t1.c1 THEN vt0.c0 WHEN 0.40510726984955137 THEN t0.c0 WHEN t0.c0 THEN t1.c2 END))) ORDER BY CAST(((((t1.c18)AND(vt0.c0)))OR(t1.c2)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((TRIM(t1.c1))AND(CAST(NULL AS BLOB))))OR(LOWER(DISTINCT vt1.c0))))OR(((t1.c18) ISNULL))))OR(LOWER(t1.c18))))AND((((v0.c0, t1.c0, '#'))>((t1.c0, vt1.c0, t1.c0))))))OR(CASE WHEN t1.c1 THEN vt0.c0 WHEN 0.40510726984955137 THEN t0.c0 WHEN t0.c0 THEN t1.c2 END))) IS TRUE)  as count FROM v0, t0, vt0, vt1, t1 ORDER BY CAST(((((t1.c18)AND(vt0.c0)))OR(t1.c2)) AS INTEGER) ASC  NULLS LAST);
SELECT ALL * FROM v0, t0, vt0, vt1, t1 WHERE (((((((((((((TRIM(t1.c1))AND(CAST(NULL AS BLOB))))OR(LOWER(DISTINCT vt1.c0))))OR(((t1.c18) ISNULL))))OR(LOWER(t1.c18))))AND((((v0.c0, t1.c0, '#'))>((t1.c0, vt1.c0, t1.c0))))))OR(CASE WHEN t1.c1 THEN vt0.c0 WHEN 0.40510726984955137 THEN t0.c0 WHEN t0.c0 THEN t1.c2 END))) ORDER BY CAST(((((t1.c18)AND(vt0.c0)))OR(t1.c2)) AS INTEGER) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 NOT INDEXED, vt1 WHERE (CASE ((t1.c0) IS FALSE)  WHEN t1.c1 COLLATE RTRIM THEN t1.c2 ELSE CAST(t1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0) IS FALSE)  WHEN t1.c1 COLLATE RTRIM THEN t1.c2 ELSE CAST(t1.c0 AS NUMERIC) END) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1 NOT INDEXED, vt1 WHERE (CASE ((t1.c0) IS FALSE)  WHEN t1.c1 COLLATE RTRIM THEN t1.c2 ELSE CAST(t1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0) IS FALSE)  WHEN t1.c1 COLLATE RTRIM THEN t1.c2 ELSE CAST(t1.c0 AS NUMERIC) END) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1 NOT INDEXED, vt1 WHERE (CASE ((t1.c0) IS FALSE)  WHEN t1.c1 COLLATE RTRIM THEN t1.c2 ELSE CAST(t1.c0 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt0, v0, t1, t0 WHERE (0.8640775901674393) ORDER BY (NOT (((t0.c0)>>(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.8640775901674393) IS TRUE)  as count FROM vt0, v0, t1, t0 ORDER BY (NOT (((t0.c0)>>(t1.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0, t1, t0 WHERE (0.8640775901674393) ORDER BY (NOT (((t0.c0)>>(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.8640775901674393) IS TRUE)  as count FROM vt0, v0, t1, t0 ORDER BY (NOT (((t0.c0)>>(t1.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0, t1, t0 WHERE (0.8640775901674393) ORDER BY (NOT (((t0.c0)>>(t1.c0))));
SELECT * FROM vt1, t1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, t1, t0);
SELECT * FROM vt1, t1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, t1, t0);
SELECT * FROM vt1, t1, t0 WHERE (NULL);
SELECT * FROM t1, vt1, v0, vt0 WHERE (((vt1.c0)+(vt0.c0)) COLLATE BINARY) ORDER BY t1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)+(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1, vt1, v0, vt0 ORDER BY t1.c1  NULLS FIRST);
SELECT * FROM t1, vt1, v0, vt0 WHERE (((vt1.c0)+(vt0.c0)) COLLATE BINARY) ORDER BY t1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)+(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1, vt1, v0, vt0 ORDER BY t1.c1  NULLS FIRST);
SELECT * FROM t1, vt1, v0, vt0 WHERE (((vt1.c0)+(vt0.c0)) COLLATE BINARY) ORDER BY t1.c1  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, x'', vt1.c0))))LIKE(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, x'', vt1.c0))))LIKE(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, x'', vt1.c0))))LIKE(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, x'', vt1.c0))))LIKE(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, x'', vt1.c0))))LIKE(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT ALL * FROM v0, t1, t0, vt1, vt0 WHERE ('1e500000') ORDER BY ((((((((((((((((t1.c0)AND(t0.c0)))OR(t1.c0)))AND(t1.c1)))OR(v0.c0)))OR(LIKELY(vt1.c0))))OR(HEX(t1.c2))))OR(((t0.c0)GLOB(t1.c0)))))OR(t1.c0)), ((x'525c')>(((vt1.c0) BETWEEN (t1.c2) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (('1e500000') IS TRUE)  as count FROM v0, t1, t0, vt1, vt0 ORDER BY ((((((((((((((((t1.c0)AND(t0.c0)))OR(t1.c0)))AND(t1.c1)))OR(v0.c0)))OR(LIKELY(vt1.c0))))OR(HEX(t1.c2))))OR(((t0.c0)GLOB(t1.c0)))))OR(t1.c0)), ((x'525c')>(((vt1.c0) BETWEEN (t1.c2) AND (vt1.c0)))));
SELECT ALL * FROM v0, t1, t0, vt1, vt0 WHERE ('1e500000') ORDER BY ((((((((((((((((t1.c0)AND(t0.c0)))OR(t1.c0)))AND(t1.c1)))OR(v0.c0)))OR(LIKELY(vt1.c0))))OR(HEX(t1.c2))))OR(((t0.c0)GLOB(t1.c0)))))OR(t1.c0)), ((x'525c')>(((vt1.c0) BETWEEN (t1.c2) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (('1e500000') IS TRUE)  as count FROM v0, t1, t0, vt1, vt0 ORDER BY ((((((((((((((((t1.c0)AND(t0.c0)))OR(t1.c0)))AND(t1.c1)))OR(v0.c0)))OR(LIKELY(vt1.c0))))OR(HEX(t1.c2))))OR(((t0.c0)GLOB(t1.c0)))))OR(t1.c0)), ((x'525c')>(((vt1.c0) BETWEEN (t1.c2) AND (vt1.c0)))));
SELECT ALL * FROM v0, t1, t0, vt1, vt0 WHERE ('1e500000') ORDER BY ((((((((((((((((t1.c0)AND(t0.c0)))OR(t1.c0)))AND(t1.c1)))OR(v0.c0)))OR(LIKELY(vt1.c0))))OR(HEX(t1.c2))))OR(((t0.c0)GLOB(t1.c0)))))OR(t1.c0)), ((x'525c')>(((vt1.c0) BETWEEN (t1.c2) AND (vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (0Xffffffff9ccda763);
SELECT SUM(count) FROM (SELECT ((0xffffffff9ccda763) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0Xffffffff9ccda763);
SELECT SUM(count) FROM (SELECT ((0xffffffff9ccda763) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0Xffffffff9ccda763);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))IS NOT((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))IS NOT((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))IS NOT((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))IS NOT((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))IS NOT((- (vt1.c0)))));
SELECT COUNT(*) FROM t1, v0, vt1 WHERE ((((~ (t1.c18))) ISNULL)) ORDER BY x'f0e3';
SELECT SUM(count) FROM (SELECT (((((~ (t1.c18))) ISNULL)) IS TRUE)  as count FROM t1, v0, vt1 ORDER BY x'f0e3');
SELECT COUNT(*) FROM t1, v0, vt1 WHERE ((((~ (t1.c18))) ISNULL)) ORDER BY x'f0e3';
SELECT SUM(count) FROM (SELECT (((((~ (t1.c18))) ISNULL)) IS TRUE)  as count FROM t1, v0, vt1 ORDER BY x'f0e3');
SELECT COUNT(*) FROM t1, v0, vt1 WHERE ((((~ (t1.c18))) ISNULL)) ORDER BY x'f0e3';
SELECT ALL * FROM v0 INNER JOIN t0 ON CAST((NOT (vt1.c0)) AS INTEGER) FULL OUTER JOIN t1 ON '' RIGHT OUTER JOIN vt1 ON v0.c0 WHERE (CASE (t0.c0 IN (t1.c0))  WHEN NULL THEN ((((((((vt1.c0)AND(t0.c0)))AND(t1.c2)))OR(t1.c18)))AND(t1.c0)) END) ORDER BY 0.7868634839339863, ((((t1.c18) ISNULL))<(t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c0 IN (t1.c0))  WHEN NULL THEN ((((((((vt1.c0)AND(t0.c0)))AND(t1.c2)))OR(t1.c18)))AND(t1.c0)) END) IS TRUE)  as count FROM v0 INNER JOIN t0 ON CAST((NOT (vt1.c0)) AS INTEGER) FULL OUTER JOIN t1 ON '' RIGHT OUTER JOIN vt1 ON v0.c0 ORDER BY 0.7868634839339863, ((((t1.c18) ISNULL))<(t0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0 INNER JOIN t0 ON CAST((NOT (vt1.c0)) AS INTEGER) FULL OUTER JOIN t1 ON '' RIGHT OUTER JOIN vt1 ON v0.c0 WHERE (CASE (t0.c0 IN (t1.c0))  WHEN NULL THEN ((((((((vt1.c0)AND(t0.c0)))AND(t1.c2)))OR(t1.c18)))AND(t1.c0)) END) ORDER BY 0.7868634839339863, ((((t1.c18) ISNULL))<(t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c0 IN (t1.c0))  WHEN NULL THEN ((((((((vt1.c0)AND(t0.c0)))AND(t1.c2)))OR(t1.c18)))AND(t1.c0)) END) IS TRUE)  as count FROM v0 INNER JOIN t0 ON CAST((NOT (vt1.c0)) AS INTEGER) FULL OUTER JOIN t1 ON '' RIGHT OUTER JOIN vt1 ON v0.c0 ORDER BY 0.7868634839339863, ((((t1.c18) ISNULL))<(t0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0, v0, t1, vt0, vt1 WHERE (((CAST(t0.c0 AS INTEGER)) BETWEEN (t1.c2 COLLATE NOCASE) AND (((((((((t0.c0)AND(t1.c2)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((t1.c2)IS(t1.c1)))), CAST((NULL IN (t1.c2)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER)) BETWEEN (t1.c2 COLLATE NOCASE) AND (((((((((t0.c0)AND(t1.c2)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, v0, t1, vt0, vt1 ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((t1.c2)IS(t1.c1)))), CAST((NULL IN (t1.c2)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, t1, vt0, vt1 WHERE (((CAST(t0.c0 AS INTEGER)) BETWEEN (t1.c2 COLLATE NOCASE) AND (((((((((t0.c0)AND(t1.c2)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((t1.c2)IS(t1.c1)))), CAST((NULL IN (t1.c2)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER)) BETWEEN (t1.c2 COLLATE NOCASE) AND (((((((((t0.c0)AND(t1.c2)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, v0, t1, vt0, vt1 ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((t1.c2)IS(t1.c1)))), CAST((NULL IN (t1.c2)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, t1, vt0, vt1 WHERE (((CAST(t0.c0 AS INTEGER)) BETWEEN (t1.c2 COLLATE NOCASE) AND (((((((((t0.c0)AND(t1.c2)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((t1.c2)IS(t1.c1)))), CAST((NULL IN (t1.c2)) AS TEXT)  NULLS LAST;
SELECT ALL * FROM vt1, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (vt1.c0);
SELECT * FROM v0, vt1, vt0 WHERE (((((('-1101093699' IN ()))OR(CAST(vt1.c0 AS TEXT))))AND(CAST(x'' AS BLOB)))) ORDER BY (((+ (vt1.c0)))!=((NOT (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('-1101093699' IN ()))OR(CAST(vt1.c0 AS TEXT))))AND(CAST(x'' AS BLOB)))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((+ (vt1.c0)))!=((NOT (vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0, vt1, vt0 WHERE (((((('-1101093699' IN ()))OR(CAST(vt1.c0 AS TEXT))))AND(CAST(x'' AS BLOB)))) ORDER BY (((+ (vt1.c0)))!=((NOT (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('-1101093699' IN ()))OR(CAST(vt1.c0 AS TEXT))))AND(CAST(x'' AS BLOB)))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((+ (vt1.c0)))!=((NOT (vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0, vt1, vt0 WHERE (((((('-1101093699' IN ()))OR(CAST(vt1.c0 AS TEXT))))AND(CAST(x'' AS BLOB)))) ORDER BY (((+ (vt1.c0)))!=((NOT (vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, t0, vt0 FULL OUTER JOIN v0 ON (((NOT (t0.c0)))IS NOT(CASE WHEN t1.c2 THEN vt1.c0 END)) FULL OUTER JOIN vt1 ON (+ ((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c2, v0.c0))))) WHERE (TRIM(DISTINCT vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM t1, t0, vt0 FULL OUTER JOIN v0 ON (((NOT (t0.c0)))IS NOT(CASE WHEN t1.c2 THEN vt1.c0 END)) FULL OUTER JOIN vt1 ON (+ ((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c2, v0.c0))))));
SELECT ALL COUNT(*) FROM t1, t0, vt0 FULL OUTER JOIN v0 ON (((NOT (t0.c0)))IS NOT(CASE WHEN t1.c2 THEN vt1.c0 END)) FULL OUTER JOIN vt1 ON (+ ((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c2, v0.c0))))) WHERE (TRIM(DISTINCT vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM t1, t0, vt0 FULL OUTER JOIN v0 ON (((NOT (t0.c0)))IS NOT(CASE WHEN t1.c2 THEN vt1.c0 END)) FULL OUTER JOIN vt1 ON (+ ((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c2, v0.c0))))));
SELECT ALL COUNT(*) FROM t1, vt0, v0, vt1 WHERE (((((t1.c0)%(t1.c2))) NOT NULL)) ORDER BY t1.c0 DESC  NULLS FIRST, ((((vt0.c0)IS(t1.c0)))OR(((t1.c2) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)%(t1.c2))) NOT NULL)) IS TRUE)  as count FROM t1, vt0, v0, vt1 ORDER BY t1.c0 DESC  NULLS FIRST, ((((vt0.c0)IS(t1.c0)))OR(((t1.c2) NOT NULL))) DESC);
SELECT ALL COUNT(*) FROM t1, vt0, v0, vt1 WHERE (((((t1.c0)%(t1.c2))) NOT NULL)) ORDER BY t1.c0 DESC  NULLS FIRST, ((((vt0.c0)IS(t1.c0)))OR(((t1.c2) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)%(t1.c2))) NOT NULL)) IS TRUE)  as count FROM t1, vt0, v0, vt1 ORDER BY t1.c0 DESC  NULLS FIRST, ((((vt0.c0)IS(t1.c0)))OR(((t1.c2) NOT NULL))) DESC);
SELECT ALL COUNT(*) FROM t1, vt0, v0, vt1 WHERE (((((t1.c0)%(t1.c2))) NOT NULL)) ORDER BY t1.c0 DESC  NULLS FIRST, ((((vt0.c0)IS(t1.c0)))OR(((t1.c2) NOT NULL))) DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN '' ELSE TYPEOF(vt0.c0) END) ORDER BY ((CAST(v0.c0 AS REAL))-(CAST(vt0.c0 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt0.c0)) THEN '' ELSE TYPEOF(vt0.c0) END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(v0.c0 AS REAL))-(CAST(vt0.c0 AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN '' ELSE TYPEOF(vt0.c0) END) ORDER BY ((CAST(v0.c0 AS REAL))-(CAST(vt0.c0 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt0.c0)) THEN '' ELSE TYPEOF(vt0.c0) END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(v0.c0 AS REAL))-(CAST(vt0.c0 AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN '' ELSE TYPEOF(vt0.c0) END) ORDER BY ((CAST(v0.c0 AS REAL))-(CAST(vt0.c0 AS BLOB))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0, v0, t0 WHERE ((- (CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END))) ORDER BY (((((t0.c0))==((NULL))))-(0.843293108410181)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, v0, t0 ORDER BY (((((t0.c0))=((NULL))))-(0.843293108410181)) DESC);
SELECT ALL * FROM vt1, vt0, v0, t0 WHERE ((- (CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END))) ORDER BY (((((t0.c0))==((NULL))))-(0.843293108410181)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, v0, t0 ORDER BY (((((t0.c0))=((NULL))))-(0.843293108410181)) DESC);
SELECT ALL * FROM vt1, vt0, v0, t0 WHERE ((- (CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END))) ORDER BY (((((t0.c0))==((NULL))))-(0.843293108410181)) DESC;
SELECT COUNT(*) FROM t0 WHERE ((((('-1556672953') NOT NULL))OR(CAST(t0.c0 AS TEXT)))) ORDER BY CAST((~ (t0.c0)) AS NUMERIC)  NULLS FIRST, ((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(NULL AS TEXT))))OR(((t0.c0)<=(t0.c0)))))OR(((((0xffffffffa42bc206)AND(NULL)))AND(t0.c0)))))OR(((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-1556672953') NOT NULL))OR(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY CAST((~ (t0.c0)) AS NUMERIC)  NULLS FIRST, ((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(NULL AS TEXT))))OR(((t0.c0)<=(t0.c0)))))OR(((((0xffffffffa42bc206)AND(NULL)))AND(t0.c0)))))OR(((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((('-1556672953') NOT NULL))OR(CAST(t0.c0 AS TEXT)))) ORDER BY CAST((~ (t0.c0)) AS NUMERIC)  NULLS FIRST, ((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(NULL AS TEXT))))OR(((t0.c0)<=(t0.c0)))))OR(((((0xffffffffa42bc206)AND(NULL)))AND(t0.c0)))))OR(((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-1556672953') NOT NULL))OR(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY CAST((~ (t0.c0)) AS NUMERIC)  NULLS FIRST, ((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(NULL AS TEXT))))OR(((t0.c0)<=(t0.c0)))))OR(((((0xffffffffa42bc206)AND(NULL)))AND(t0.c0)))))OR(((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((('-1556672953') NOT NULL))OR(CAST(t0.c0 AS TEXT)))) ORDER BY CAST((~ (t0.c0)) AS NUMERIC)  NULLS FIRST, ((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(NULL AS TEXT))))OR(((t0.c0)<=(t0.c0)))))OR(((((0xffffffffa42bc206)AND(NULL)))AND(t0.c0)))))OR(((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((vt1.c0)AND(NULL)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0))) ISNULL)) ORDER BY json_object(((vt1.c0)*(vt0.c0)), ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(NULL)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY json_object(((vt1.c0)*(vt0.c0)), ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0))));
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((vt1.c0)AND(NULL)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0))) ISNULL)) ORDER BY json_object(((vt1.c0)*(vt0.c0)), ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(NULL)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY json_object(((vt1.c0)*(vt0.c0)), ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0))));
SELECT COUNT(*) FROM vt1, t1, vt0, t0 FULL OUTER JOIN v0 ON ((vt1.c0)%(t1.c18)) COLLATE NOCASE WHERE (((((x'')AND(((t1.c0)-(vt0.c0)))))OR(t1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(((t1.c0)-(vt0.c0)))))OR(t1.c1))) IS TRUE)  as count FROM vt1, t1, vt0, t0 FULL OUTER JOIN v0 ON ((vt1.c0)%(t1.c18)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, t1, vt0, t0 FULL OUTER JOIN v0 ON ((vt1.c0)%(t1.c18)) COLLATE NOCASE WHERE (((((x'')AND(((t1.c0)-(vt0.c0)))))OR(t1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(((t1.c0)-(vt0.c0)))))OR(t1.c1))) IS TRUE)  as count FROM vt1, t1, vt0, t0 FULL OUTER JOIN v0 ON ((vt1.c0)%(t1.c18)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, t1, vt0, t0 FULL OUTER JOIN v0 ON ((vt1.c0)%(t1.c18)) COLLATE NOCASE WHERE (((((x'')AND(((t1.c0)-(vt0.c0)))))OR(t1.c1)));
SELECT ALL * FROM v0, vt1, t1 WHERE (((((NULL COLLATE BINARY)AND(((((vt1.c0)OR(t1.c1)))OR(vt1.c0)))))OR((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL COLLATE BINARY)AND(((((vt1.c0)OR(t1.c1)))OR(vt1.c0)))))OR((- (v0.c0))))) IS TRUE)  as count FROM v0, vt1, t1);
SELECT ALL * FROM v0, vt1, t1 WHERE (((((NULL COLLATE BINARY)AND(((((vt1.c0)OR(t1.c1)))OR(vt1.c0)))))OR((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL COLLATE BINARY)AND(((((vt1.c0)OR(t1.c1)))OR(vt1.c0)))))OR((- (v0.c0))))) IS TRUE)  as count FROM v0, vt1, t1);
SELECT ALL * FROM v0, vt1, t1 WHERE (((((NULL COLLATE BINARY)AND(((((vt1.c0)OR(t1.c1)))OR(vt1.c0)))))OR((- (v0.c0)))));
SELECT COUNT(*) FROM t1, t0 WHERE ((t1.c18 IN ())) ORDER BY ((((((t1.c1)OR(t0.c0)))OR('f^')))||(t1.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c18 IN ())) IS TRUE)  as count FROM t1, t0 ORDER BY ((((((t1.c1)OR(t0.c0)))OR('f^')))||(t1.c1 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM t1, t0 WHERE ((t1.c18 IN ())) ORDER BY ((((((t1.c1)OR(t0.c0)))OR('f^')))||(t1.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c18 IN ())) IS TRUE)  as count FROM t1, t0 ORDER BY ((((((t1.c1)OR(t0.c0)))OR('f^')))||(t1.c1 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM t1, t0 WHERE ((t1.c18 IN ())) ORDER BY ((((((t1.c1)OR(t0.c0)))OR('f^')))||(t1.c1 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT NULL) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT NULL) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE RTRIM COLLATE BINARY);
SELECT COUNT(*) FROM t0, vt0, vt1 CROSS JOIN t1 ON t0.c0 WHERE ((+ (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c0))) IS TRUE)  as count FROM t0, vt0, vt1 CROSS JOIN t1 ON t0.c0);
SELECT COUNT(*) FROM t0, vt0, vt1 CROSS JOIN t1 ON t0.c0 WHERE ((+ (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c0))) IS TRUE)  as count FROM t0, vt0, vt1 CROSS JOIN t1 ON t0.c0);
SELECT COUNT(*) FROM t0, vt0, vt1 CROSS JOIN t1 ON t0.c0 WHERE ((+ (t1.c0)));
SELECT ALL * FROM v0, t0, t1, vt1, vt0 WHERE ((((vt1.c0, t1.c0, vt1.c0)) BETWEEN ((((t1.c18) NOT NULL), ((((t0.c0)AND('0.35917634436454837')))OR(t1.c18)), 0Xffffffffeed2ee61)) AND ((TRIM(t1.c1), (t1.c0 IN (t0.c0)), (- ('a5')))))) ORDER BY CAST(CASE t0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((vt1.c0, t1.c0, vt1.c0)) BETWEEN ((((t1.c18) NOT NULL), ((((t0.c0)AND('0.35917634436454837')))OR(t1.c18)), 0xffffffffeed2ee61)) AND ((TRIM(t1.c1), (t1.c0 IN (t0.c0)), (- ('a5')))))) IS TRUE)  as count FROM v0, t0, t1, vt1, vt0 ORDER BY CAST(CASE t0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END AS NUMERIC));
SELECT ALL * FROM v0, t0, t1, vt1, vt0 WHERE ((((vt1.c0, t1.c0, vt1.c0)) BETWEEN ((((t1.c18) NOT NULL), ((((t0.c0)AND('0.35917634436454837')))OR(t1.c18)), 0Xffffffffeed2ee61)) AND ((TRIM(t1.c1), (t1.c0 IN (t0.c0)), (- ('a5')))))) ORDER BY CAST(CASE t0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((vt1.c0, t1.c0, vt1.c0)) BETWEEN ((((t1.c18) NOT NULL), ((((t0.c0)AND('0.35917634436454837')))OR(t1.c18)), 0xffffffffeed2ee61)) AND ((TRIM(t1.c1), (t1.c0 IN (t0.c0)), (- ('a5')))))) IS TRUE)  as count FROM v0, t0, t1, vt1, vt0 ORDER BY CAST(CASE t0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END AS NUMERIC));
SELECT ALL * FROM v0, t0, t1, vt1, vt0 WHERE ((((vt1.c0, t1.c0, vt1.c0)) BETWEEN ((((t1.c18) NOT NULL), ((((t0.c0)AND('0.35917634436454837')))OR(t1.c18)), 0Xffffffffeed2ee61)) AND ((TRIM(t1.c1), (t1.c0 IN (t0.c0)), (- ('a5')))))) ORDER BY CAST(CASE t0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END AS NUMERIC);
SELECT COUNT(*) FROM vt1, vt0, t0, t1 INDEXED BY i14 WHERE (CASE (t1.c0 IN ())  WHEN t1.c0 COLLATE NOCASE THEN ((t1.c18)OR(t1.c18)) ELSE ((vt1.c0)%(t0.c0)) END) ORDER BY ((((t0.c0) IS TRUE))GLOB((vt0.c0 IN ()))) ASC  NULLS FIRST, CASE WHEN (- (t1.c2)) THEN ((t1.c0) BETWEEN (t1.c18) AND (t1.c0)) ELSE t1.c18 END;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t1.c0 IN ())  WHEN t1.c0 COLLATE NOCASE THEN ((t1.c18)OR(t1.c18)) ELSE ((vt1.c0)%(t0.c0)) END) IS TRUE)  as count FROM vt1, vt0, t0, t1 INDEXED BY i14 ORDER BY ((((t0.c0) IS TRUE))GLOB((vt0.c0 IN ()))) ASC  NULLS FIRST, CASE WHEN (- (t1.c2)) THEN ((t1.c0) BETWEEN (t1.c18) AND (t1.c0)) ELSE t1.c18 END);
SELECT COUNT(*) FROM vt1, vt0, t0, t1 INDEXED BY i14 WHERE (CASE (t1.c0 IN ())  WHEN t1.c0 COLLATE NOCASE THEN ((t1.c18)OR(t1.c18)) ELSE ((vt1.c0)%(t0.c0)) END) ORDER BY ((((t0.c0) IS TRUE))GLOB((vt0.c0 IN ()))) ASC  NULLS FIRST, CASE WHEN (- (t1.c2)) THEN ((t1.c0) BETWEEN (t1.c18) AND (t1.c0)) ELSE t1.c18 END;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t1.c0 IN ())  WHEN t1.c0 COLLATE NOCASE THEN ((t1.c18)OR(t1.c18)) ELSE ((vt1.c0)%(t0.c0)) END) IS TRUE)  as count FROM vt1, vt0, t0, t1 INDEXED BY i14 ORDER BY ((((t0.c0) IS TRUE))GLOB((vt0.c0 IN ()))) ASC  NULLS FIRST, CASE WHEN (- (t1.c2)) THEN ((t1.c0) BETWEEN (t1.c18) AND (t1.c0)) ELSE t1.c18 END);
SELECT COUNT(*) FROM vt1, vt0, t0, t1 INDEXED BY i14 WHERE (CASE (t1.c0 IN ())  WHEN t1.c0 COLLATE NOCASE THEN ((t1.c18)OR(t1.c18)) ELSE ((vt1.c0)%(t0.c0)) END) ORDER BY ((((t0.c0) IS TRUE))GLOB((vt0.c0 IN ()))) ASC  NULLS FIRST, CASE WHEN (- (t1.c2)) THEN ((t1.c0) BETWEEN (t1.c18) AND (t1.c0)) ELSE t1.c18 END;
SELECT ALL * FROM t1, t0 WHERE ((((('O86m?qi^')IS NOT(t1.c18))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((('O86m?qi^')IS NOT(t1.c18))) IS TRUE)) IS TRUE)  as count FROM t1, t0);
SELECT ALL * FROM t1, t0 WHERE ((((('O86m?qi^')IS NOT(t1.c18))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((('O86m?qi^')IS NOT(t1.c18))) IS TRUE)) IS TRUE)  as count FROM t1, t0);
SELECT ALL * FROM t1, t0 WHERE ((((('O86m?qi^')IS NOT(t1.c18))) IS TRUE));
SELECT ALL * FROM vt0, t1, v0 WHERE (((((vt0.c0) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM vt0, t1, v0);
SELECT ALL * FROM vt0, t1, v0 WHERE (((((vt0.c0) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM vt0, t1, v0);
SELECT ALL * FROM vt0, t1, v0 WHERE (((((vt0.c0) NOT NULL)) IS FALSE));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c0)<<(vt0.c0)))IS NOT(ABS(x''))) WHERE (CASE HEX(DISTINCT v0.c0)  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 COLLATE RTRIM THEN ((((v0.c0)AND(NULL)))AND(v0.c0)) WHEN x'' THEN ((v0.c0)+(v0.c0)) END) ORDER BY ((((vt0.c0)<(vt0.c0)))>=((~ (vt0.c0)))) DESC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT))GLOB(v0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE HEX(DISTINCT v0.c0)  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 COLLATE RTRIM THEN ((((v0.c0)AND(NULL)))AND(v0.c0)) WHEN x'' THEN ((v0.c0)+(v0.c0)) END) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((v0.c0)<<(vt0.c0)))IS NOT(ABS(x''))) ORDER BY ((((vt0.c0)<(vt0.c0)))>=((~ (vt0.c0)))) DESC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT))GLOB(v0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c0)<<(vt0.c0)))IS NOT(ABS(x''))) WHERE (CASE HEX(DISTINCT v0.c0)  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 COLLATE RTRIM THEN ((((v0.c0)AND(NULL)))AND(v0.c0)) WHEN x'' THEN ((v0.c0)+(v0.c0)) END) ORDER BY ((((vt0.c0)<(vt0.c0)))>=((~ (vt0.c0)))) DESC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT))GLOB(v0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE HEX(DISTINCT v0.c0)  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 COLLATE RTRIM THEN ((((v0.c0)AND(NULL)))AND(v0.c0)) WHEN x'' THEN ((v0.c0)+(v0.c0)) END) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((v0.c0)<<(vt0.c0)))IS NOT(ABS(x''))) ORDER BY ((((vt0.c0)<(vt0.c0)))>=((~ (vt0.c0)))) DESC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT))GLOB(v0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c0)<<(vt0.c0)))IS NOT(ABS(x''))) WHERE (CASE HEX(DISTINCT v0.c0)  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 COLLATE RTRIM THEN ((((v0.c0)AND(NULL)))AND(v0.c0)) WHEN x'' THEN ((v0.c0)+(v0.c0)) END) ORDER BY ((((vt0.c0)<(vt0.c0)))>=((~ (vt0.c0)))) DESC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT))GLOB(v0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY CASE WHEN ((((v0.c0)AND('raFI๦1&E')))OR(vt0.c0)) THEN ((((623217419)OR(vt0.c0)))OR(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((((v0.c0)AND('raFI๦1&E')))OR(vt0.c0)) THEN ((((623217419)OR(vt0.c0)))OR(v0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY CASE WHEN ((((v0.c0)AND('raFI๦1&E')))OR(vt0.c0)) THEN ((((623217419)OR(vt0.c0)))OR(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((((v0.c0)AND('raFI๦1&E')))OR(vt0.c0)) THEN ((((623217419)OR(vt0.c0)))OR(v0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY CASE WHEN ((((v0.c0)AND('raFI๦1&E')))OR(vt0.c0)) THEN ((((623217419)OR(vt0.c0)))OR(v0.c0)) END  NULLS FIRST;
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c0)|(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c0)|(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c0)|(v0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((NOT (t1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c0))) IS FALSE)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((NOT (t1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c0))) IS FALSE)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((NOT (t1.c0))) IS FALSE));
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT * FROM v0, vt1, t0 WHERE ((((((vt1.c0, v0.c0, t0.c0)) NOT BETWEEN ((vt1.c0, v0.c0, x'')) AND ((0.9914723281646378, vt1.c0, t0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, v0.c0, t0.c0)) NOT BETWEEN ((vt1.c0, v0.c0, x'')) AND ((0.9914723281646378, vt1.c0, t0.c0)))) ISNULL)) IS TRUE)  as count FROM v0, vt1, t0);
SELECT * FROM v0, vt1, t0 WHERE ((((((vt1.c0, v0.c0, t0.c0)) NOT BETWEEN ((vt1.c0, v0.c0, x'')) AND ((0.9914723281646378, vt1.c0, t0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, v0.c0, t0.c0)) NOT BETWEEN ((vt1.c0, v0.c0, x'')) AND ((0.9914723281646378, vt1.c0, t0.c0)))) ISNULL)) IS TRUE)  as count FROM v0, vt1, t0);
SELECT * FROM v0, vt1, t0 WHERE ((((((vt1.c0, v0.c0, t0.c0)) NOT BETWEEN ((vt1.c0, v0.c0, x'')) AND ((0.9914723281646378, vt1.c0, t0.c0)))) ISNULL));
SELECT ALL COUNT(*) FROM v0, vt0, t1, vt1, t0 WHERE (((((t1.c0)<<('0.19227204520469832'))) IS FALSE)) ORDER BY CASE ((((t1.c18)OR(x'')))OR(vt0.c0))  WHEN NULL THEN (vt0.c0 IN (t1.c2)) END  NULLS FIRST, ((((CAST(v0.c0 AS INTEGER))AND(CASE v0.c0  WHEN t1.c18 THEN t1.c1 WHEN v0.c0 THEN t1.c18 WHEN vt0.c0 THEN t1.c1 END)))AND('hc' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)<<('0.19227204520469832'))) IS FALSE)) IS TRUE)  as count FROM v0, vt0, t1, vt1, t0 ORDER BY CASE ((((t1.c18)OR(x'')))OR(vt0.c0))  WHEN NULL THEN (vt0.c0 IN (t1.c2)) END  NULLS FIRST, ((((CAST(v0.c0 AS INTEGER))AND(CASE v0.c0  WHEN t1.c18 THEN t1.c1 WHEN v0.c0 THEN t1.c18 WHEN vt0.c0 THEN t1.c1 END)))AND('hc' COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM v0, vt0, t1, vt1, t0 WHERE (((((t1.c0)<<('0.19227204520469832'))) IS FALSE)) ORDER BY CASE ((((t1.c18)OR(x'')))OR(vt0.c0))  WHEN NULL THEN (vt0.c0 IN (t1.c2)) END  NULLS FIRST, ((((CAST(v0.c0 AS INTEGER))AND(CASE v0.c0  WHEN t1.c18 THEN t1.c1 WHEN v0.c0 THEN t1.c18 WHEN vt0.c0 THEN t1.c1 END)))AND('hc' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)<<('0.19227204520469832'))) IS FALSE)) IS TRUE)  as count FROM v0, vt0, t1, vt1, t0 ORDER BY CASE ((((t1.c18)OR(x'')))OR(vt0.c0))  WHEN NULL THEN (vt0.c0 IN (t1.c2)) END  NULLS FIRST, ((((CAST(v0.c0 AS INTEGER))AND(CASE v0.c0  WHEN t1.c18 THEN t1.c1 WHEN v0.c0 THEN t1.c18 WHEN vt0.c0 THEN t1.c1 END)))AND('hc' COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM v0, vt0, t1, vt1, t0 WHERE (((((t1.c0)<<('0.19227204520469832'))) IS FALSE)) ORDER BY CASE ((((t1.c18)OR(x'')))OR(vt0.c0))  WHEN NULL THEN (vt0.c0 IN (t1.c2)) END  NULLS FIRST, ((((CAST(v0.c0 AS INTEGER))AND(CASE v0.c0  WHEN t1.c18 THEN t1.c1 WHEN v0.c0 THEN t1.c18 WHEN vt0.c0 THEN t1.c1 END)))AND('hc' COLLATE RTRIM));
SELECT * FROM vt1, vt0, t0 LEFT OUTER JOIN t1 ON CAST(((t0.c0) BETWEEN (t1.c0) AND (NULL)) AS BLOB) RIGHT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (((vt1.c0)&(vt0.c0)))) WHERE ((((NULL)>=(vt1.c0)) IN ())) ORDER BY t1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL)>=(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, t0 LEFT OUTER JOIN t1 ON CAST(((t0.c0) BETWEEN (t1.c0) AND (NULL)) AS BLOB) RIGHT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (((vt1.c0)&(vt0.c0)))) ORDER BY t1.c1 DESC  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 LEFT OUTER JOIN t1 ON CAST(((t0.c0) BETWEEN (t1.c0) AND (NULL)) AS BLOB) RIGHT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (((vt1.c0)&(vt0.c0)))) WHERE ((((NULL)>=(vt1.c0)) IN ())) ORDER BY t1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL)>=(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, t0 LEFT OUTER JOIN t1 ON CAST(((t0.c0) BETWEEN (t1.c0) AND (NULL)) AS BLOB) RIGHT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (((vt1.c0)&(vt0.c0)))) ORDER BY t1.c1 DESC  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 LEFT OUTER JOIN t1 ON CAST(((t0.c0) BETWEEN (t1.c0) AND (NULL)) AS BLOB) RIGHT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (((vt1.c0)&(vt0.c0)))) WHERE ((((NULL)>=(vt1.c0)) IN ())) ORDER BY t1.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t1, t0, v0 WHERE ((((((t0.c0)) BETWEEN ((vt1.c0)) AND ((-2005361795)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((vt1.c0)) AND ((-2005361795)))) ISNULL)) IS TRUE)  as count FROM vt1, t1, t0, v0);
SELECT ALL COUNT(*) FROM vt1, t1, t0, v0 WHERE ((((((t0.c0)) BETWEEN ((vt1.c0)) AND ((-2005361795)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((vt1.c0)) AND ((-2005361795)))) ISNULL)) IS TRUE)  as count FROM vt1, t1, t0, v0);
SELECT ALL COUNT(*) FROM vt1, t1, t0, v0 WHERE ((((((t0.c0)) BETWEEN ((vt1.c0)) AND ((-2005361795)))) ISNULL));
SELECT * FROM v0, t1, t0, vt0 WHERE (CASE ((t1.c18) IS TRUE)  WHEN vt0.c0 THEN ((((vt0.c0)AND(t1.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c18) IS TRUE)  WHEN vt0.c0 THEN ((((vt0.c0)AND(t1.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM v0, t1, t0, vt0);
SELECT * FROM v0, t1, t0, vt0 WHERE (CASE ((t1.c18) IS TRUE)  WHEN vt0.c0 THEN ((((vt0.c0)AND(t1.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c18) IS TRUE)  WHEN vt0.c0 THEN ((((vt0.c0)AND(t1.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM v0, t1, t0, vt0);
SELECT * FROM v0, t1, t0, vt0 WHERE (CASE ((t1.c18) IS TRUE)  WHEN vt0.c0 THEN ((((vt0.c0)AND(t1.c0)))OR(vt0.c0)) END);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((0.28856961588040886)IS(v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((0.28856961588040886)IS(v0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((0.28856961588040886)IS(v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((0.28856961588040886)IS(v0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((0.28856961588040886)IS(v0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM t1, vt1, vt0, t0 WHERE (((((x'e403b6f2')>(t1.c0)))<<((t1.c1 IN ())))) ORDER BY (- (NULL))  NULLS LAST, json_quote((((t1.c0))>=((vt0.c0)))), ((- (vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'e403b6f2')>(t1.c0)))<<((t1.c1 IN ())))) IS TRUE)  as count FROM t1, vt1, vt0, t0 ORDER BY (- (NULL))  NULLS LAST, json_quote((((t1.c0))>=((vt0.c0)))), ((- (vt0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0, t0 WHERE (((((x'e403b6f2')>(t1.c0)))<<((t1.c1 IN ())))) ORDER BY (- (NULL))  NULLS LAST, json_quote((((t1.c0))>=((vt0.c0)))), ((- (vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'e403b6f2')>(t1.c0)))<<((t1.c1 IN ())))) IS TRUE)  as count FROM t1, vt1, vt0, t0 ORDER BY (- (NULL))  NULLS LAST, json_quote((((t1.c0))>=((vt0.c0)))), ((- (vt0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0, t0 WHERE (((((x'e403b6f2')>(t1.c0)))<<((t1.c1 IN ())))) ORDER BY (- (NULL))  NULLS LAST, json_quote((((t1.c0))>=((vt0.c0)))), ((- (vt0.c0)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM v0, vt1, t0, t1 FULL OUTER JOIN vt0 ON ((((t0.c0) IS TRUE)) BETWEEN (((((((((t1.c0)AND(t0.c0)))AND(x'8097')))OR(t1.c1)))AND(v0.c0))) AND (vt0.c0 COLLATE BINARY)) WHERE ((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c18)))) IS FALSE)) ORDER BY (((CAST(vt0.c0 AS TEXT)))<=((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))) DESC, CAST(((v0.c0)>=(vt0.c0)) AS REAL), ((vt0.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c18)))) IS FALSE)) IS TRUE)  as count FROM v0, vt1, t0, t1 FULL OUTER JOIN vt0 ON ((((t0.c0) IS TRUE)) BETWEEN (((((((((t1.c0)AND(t0.c0)))AND(x'8097')))OR(t1.c1)))AND(v0.c0))) AND (vt0.c0 COLLATE BINARY)) ORDER BY (((CAST(vt0.c0 AS TEXT)))<=((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))) DESC, CAST(((v0.c0)>=(vt0.c0)) AS REAL), ((vt0.c0) IS TRUE));
SELECT COUNT(*) FROM v0, vt1, t0, t1 FULL OUTER JOIN vt0 ON ((((t0.c0) IS TRUE)) BETWEEN (((((((((t1.c0)AND(t0.c0)))AND(x'8097')))OR(t1.c1)))AND(v0.c0))) AND (vt0.c0 COLLATE BINARY)) WHERE ((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c18)))) IS FALSE)) ORDER BY (((CAST(vt0.c0 AS TEXT)))<=((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))) DESC, CAST(((v0.c0)>=(vt0.c0)) AS REAL), ((vt0.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c18)))) IS FALSE)) IS TRUE)  as count FROM v0, vt1, t0, t1 FULL OUTER JOIN vt0 ON ((((t0.c0) IS TRUE)) BETWEEN (((((((((t1.c0)AND(t0.c0)))AND(x'8097')))OR(t1.c1)))AND(v0.c0))) AND (vt0.c0 COLLATE BINARY)) ORDER BY (((CAST(vt0.c0 AS TEXT)))<=((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))) DESC, CAST(((v0.c0)>=(vt0.c0)) AS REAL), ((vt0.c0) IS TRUE));
SELECT COUNT(*) FROM v0, vt1, t0, t1 FULL OUTER JOIN vt0 ON ((((t0.c0) IS TRUE)) BETWEEN (((((((((t1.c0)AND(t0.c0)))AND(x'8097')))OR(t1.c1)))AND(v0.c0))) AND (vt0.c0 COLLATE BINARY)) WHERE ((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c18)))) IS FALSE)) ORDER BY (((CAST(vt0.c0 AS TEXT)))<=((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))) DESC, CAST(((v0.c0)>=(vt0.c0)) AS REAL), ((vt0.c0) IS TRUE);
SELECT COUNT(*) FROM vt1, t1 CROSS JOIN t0 ON ((((vt1.c0 IN (vt0.c0))))>=((((t0.c0)|(t1.c1))))) FULL OUTER JOIN vt0 ON (- (t1.c1)) INNER JOIN v0 ON (((((+ (t1.c2)))OR(((t1.c18)*(t1.c18)))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c1))))) WHERE ((((((vt0.c0))>((t1.c0))))<>(CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>((t1.c0))))!=(CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, t1 CROSS JOIN t0 ON ((((vt1.c0 IN (vt0.c0))))>=((((t0.c0)|(t1.c1))))) FULL OUTER JOIN vt0 ON (- (t1.c1)) INNER JOIN v0 ON (((((+ (t1.c2)))OR(((t1.c18)*(t1.c18)))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c1))))));
SELECT COUNT(*) FROM vt1, t1 CROSS JOIN t0 ON ((((vt1.c0 IN (vt0.c0))))>=((((t0.c0)|(t1.c1))))) FULL OUTER JOIN vt0 ON (- (t1.c1)) INNER JOIN v0 ON (((((+ (t1.c2)))OR(((t1.c18)*(t1.c18)))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c1))))) WHERE ((((((vt0.c0))>((t1.c0))))<>(CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>((t1.c0))))!=(CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, t1 CROSS JOIN t0 ON ((((vt1.c0 IN (vt0.c0))))>=((((t0.c0)|(t1.c1))))) FULL OUTER JOIN vt0 ON (- (t1.c1)) INNER JOIN v0 ON (((((+ (t1.c2)))OR(((t1.c18)*(t1.c18)))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c1))))));
SELECT ALL * FROM t0, vt0, t1, vt1 WHERE (SQLITE_COMPILEOPTION_GET(((t1.c18)|(t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((t1.c18)|(t1.c2)))) IS TRUE)  as count FROM t0, vt0, t1, vt1);
SELECT ALL * FROM t0, vt0, t1, vt1 WHERE (SQLITE_COMPILEOPTION_GET(((t1.c18)|(t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((t1.c18)|(t1.c2)))) IS TRUE)  as count FROM t0, vt0, t1, vt1);
SELECT ALL * FROM t0, vt0, t1, vt1 WHERE (SQLITE_COMPILEOPTION_GET(((t1.c18)|(t1.c2))));
SELECT * FROM t1, vt1, vt0, v0 WHERE ((((vt0.c0)) BETWEEN (((t1.c1 IN ()))) AND ((RTRIM(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((t1.c1 IN ()))) AND ((RTRIM(v0.c0))))) IS TRUE)  as count FROM t1, vt1, vt0, v0);
SELECT * FROM t1, vt1, vt0, v0 WHERE ((((vt0.c0)) BETWEEN (((t1.c1 IN ()))) AND ((RTRIM(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((t1.c1 IN ()))) AND ((RTRIM(v0.c0))))) IS TRUE)  as count FROM t1, vt1, vt0, v0);
SELECT * FROM t1, vt1, vt0, v0 WHERE ((((vt0.c0)) BETWEEN (((t1.c1 IN ()))) AND ((RTRIM(v0.c0)))));
SELECT COUNT(*) FROM v0, vt1, t1, vt0 WHERE ((((- (t1.c2)))LIKE(t1.c2 COLLATE RTRIM))) ORDER BY CAST(t1.c0 AS TEXT) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (t1.c2)))LIKE(t1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt1, t1, vt0 ORDER BY CAST(t1.c0 AS TEXT) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1, t1, vt0 WHERE ((((- (t1.c2)))LIKE(t1.c2 COLLATE RTRIM))) ORDER BY CAST(t1.c0 AS TEXT) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (t1.c2)))LIKE(t1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt1, t1, vt0 ORDER BY CAST(t1.c0 AS TEXT) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1, t1, vt0 WHERE ((((- (t1.c2)))LIKE(t1.c2 COLLATE RTRIM))) ORDER BY CAST(t1.c0 AS TEXT) COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 INNER JOIN t0 ON (+ (COALESCE(t1.c0, 0.8348850128281156, NULL, vt0.c0))) INNER JOIN t1 ON (((((((((t1.c0 IN ()))AND(CAST(t1.c1 AS INTEGER))))AND(vt1.c0)))OR(((0.7843796384868611) NOT BETWEEN (t1.c2) AND (t1.c1)))))OR(((((((((t1.c2)AND(vt1.c0)))OR(t1.c0)))OR(t1.c18)))AND(vt1.c0)))) WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON (+ (COALESCE(t1.c0, 0.8348850128281156, NULL, vt0.c0))) INNER JOIN t1 ON (((((((((t1.c0 IN ()))AND(CAST(t1.c1 AS INTEGER))))AND(vt1.c0)))OR(((0.7843796384868611) NOT BETWEEN (t1.c2) AND (t1.c1)))))OR(((((((((t1.c2)AND(vt1.c0)))OR(t1.c0)))OR(t1.c18)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt1, vt0 INNER JOIN t0 ON (+ (COALESCE(t1.c0, 0.8348850128281156, NULL, vt0.c0))) INNER JOIN t1 ON (((((((((t1.c0 IN ()))AND(CAST(t1.c1 AS INTEGER))))AND(vt1.c0)))OR(((0.7843796384868611) NOT BETWEEN (t1.c2) AND (t1.c1)))))OR(((((((((t1.c2)AND(vt1.c0)))OR(t1.c0)))OR(t1.c18)))AND(vt1.c0)))) WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON (+ (COALESCE(t1.c0, 0.8348850128281156, NULL, vt0.c0))) INNER JOIN t1 ON (((((((((t1.c0 IN ()))AND(CAST(t1.c1 AS INTEGER))))AND(vt1.c0)))OR(((0.7843796384868611) NOT BETWEEN (t1.c2) AND (t1.c1)))))OR(((((((((t1.c2)AND(vt1.c0)))OR(t1.c0)))OR(t1.c18)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt1, vt0 INNER JOIN t0 ON (+ (COALESCE(t1.c0, 0.8348850128281156, NULL, vt0.c0))) INNER JOIN t1 ON (((((((((t1.c0 IN ()))AND(CAST(t1.c1 AS INTEGER))))AND(vt1.c0)))OR(((0.7843796384868611) NOT BETWEEN (t1.c2) AND (t1.c1)))))OR(((((((((t1.c2)AND(vt1.c0)))OR(t1.c0)))OR(t1.c18)))AND(vt1.c0)))) WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN ()) AS INTEGER));
SELECT * FROM t1, vt0, vt1 WHERE (CASE WHEN ((vt1.c0)<(vt1.c0)) THEN ((vt1.c0) ISNULL) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c2))) THEN CAST(t1.c2 AS BLOB) WHEN ((vt0.c0) IS FALSE) THEN CAST('-950532301' AS TEXT) ELSE t1.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)<(vt1.c0)) THEN ((vt1.c0) ISNULL) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c2))) THEN CAST(t1.c2 AS BLOB) WHEN ((vt0.c0) IS FALSE) THEN CAST('-950532301' AS TEXT) ELSE t1.c2 END) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (CASE WHEN ((vt1.c0)<(vt1.c0)) THEN ((vt1.c0) ISNULL) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c2))) THEN CAST(t1.c2 AS BLOB) WHEN ((vt0.c0) IS FALSE) THEN CAST('-950532301' AS TEXT) ELSE t1.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)<(vt1.c0)) THEN ((vt1.c0) ISNULL) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c2))) THEN CAST(t1.c2 AS BLOB) WHEN ((vt0.c0) IS FALSE) THEN CAST('-950532301' AS TEXT) ELSE t1.c2 END) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (CASE WHEN ((vt1.c0)<(vt1.c0)) THEN ((vt1.c0) ISNULL) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c2))) THEN CAST(t1.c2 AS BLOB) WHEN ((vt0.c0) IS FALSE) THEN CAST('-950532301' AS TEXT) ELSE t1.c2 END);
SELECT ALL * FROM t1, v0, t0, vt0, vt1 WHERE (CAST(CAST(v0.c0 AS TEXT) AS NUMERIC)) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM t1, v0, t0, vt0, vt1 ORDER BY '' DESC);
SELECT ALL * FROM t1, v0, t0, vt0, vt1 WHERE (CAST(CAST(v0.c0 AS TEXT) AS NUMERIC)) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM t1, v0, t0, vt0, vt1 ORDER BY '' DESC);
SELECT ALL * FROM t1, v0, t0, vt0, vt1 WHERE (CAST(CAST(v0.c0 AS TEXT) AS NUMERIC)) ORDER BY '' DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (0.7527211324925867) ORDER BY (((('v')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7527211324925867) IS TRUE)  as count FROM v0 ORDER BY (((('v')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (0.7527211324925867) ORDER BY (((('v')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7527211324925867) IS TRUE)  as count FROM v0 ORDER BY (((('v')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (0.7527211324925867) ORDER BY (((('v')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((vt1.c0, -803790766, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) AND ((0.7879408299929094 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (((((vt1.c0, -803790766, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) AND ((0.7879408299929094 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((vt1.c0, -803790766, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) AND ((0.7879408299929094 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (((((vt1.c0, -803790766, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) AND ((0.7879408299929094 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((vt1.c0, -803790766, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) AND ((0.7879408299929094 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (((LIKELIHOOD(v0.c0, 0.7458422029594134)) NOT NULL)) ORDER BY ((v0.c0)OR((((t1.c1))>=((t1.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(v0.c0, 0.7458422029594134)) NOT NULL)) IS TRUE)  as count FROM v0, t1, vt0 ORDER BY ((v0.c0)OR((((t1.c1))>=((t1.c1))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (((LIKELIHOOD(v0.c0, 0.7458422029594134)) NOT NULL)) ORDER BY ((v0.c0)OR((((t1.c1))>=((t1.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(v0.c0, 0.7458422029594134)) NOT NULL)) IS TRUE)  as count FROM v0, t1, vt0 ORDER BY ((v0.c0)OR((((t1.c1))>=((t1.c1))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (((LIKELIHOOD(v0.c0, 0.7458422029594134)) NOT NULL)) ORDER BY ((v0.c0)OR((((t1.c1))>=((t1.c1))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t1, vt0, v0 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM vt1, t1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0, v0 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM vt1, t1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0, v0 WHERE (t1.c1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('v&') ORDER BY (((0x6c5ce0f6, vt1.c0, vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 'HQJEYRTS&', vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (('v&') IS TRUE)  as count FROM vt0, vt1 ORDER BY (((0X6c5ce0f6, vt1.c0, vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 'HQJEYRTS&', vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0))) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('v&') ORDER BY (((0x6c5ce0f6, vt1.c0, vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 'HQJEYRTS&', vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (('v&') IS TRUE)  as count FROM vt0, vt1 ORDER BY (((0X6c5ce0f6, vt1.c0, vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 'HQJEYRTS&', vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0))) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('v&') ORDER BY (((0x6c5ce0f6, vt1.c0, vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 'HQJEYRTS&', vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0))) COLLATE BINARY ASC;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t1 ON -1095721498 RIGHT OUTER JOIN vt0 ON ((((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)OR(CAST(t1.c2 AS INTEGER))))AND(CASE WHEN t0.c0 THEN t1.c18 ELSE t0.c0 END)) FULL OUTER JOIN t0 ON ((t1.c0 COLLATE NOCASE)<<(vt1.c0)) WHERE (((((CAST('Pn' AS INTEGER))OR(-1.095127369E9)))OR(t1.c1 COLLATE BINARY))) ORDER BY ((((t1.c2)<(t1.c2)))-(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t1.c2 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS LAST, ((((t1.c2) ISNULL)) NOT BETWEEN (((('-702593718'))=((t1.c2)))) AND (((((vt1.c0)AND(vt0.c0)))AND(t1.c2))));
SELECT SUM(count) FROM (SELECT ((((((CAST('Pn' AS INTEGER))OR(-1.095127369E9)))OR(t1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON -1095721498 RIGHT OUTER JOIN vt0 ON ((((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)OR(CAST(t1.c2 AS INTEGER))))AND(CASE WHEN t0.c0 THEN t1.c18 ELSE t0.c0 END)) FULL OUTER JOIN t0 ON ((t1.c0 COLLATE NOCASE)<<(vt1.c0)) ORDER BY ((((t1.c2)<(t1.c2)))-(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t1.c2 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS LAST, ((((t1.c2) ISNULL)) NOT BETWEEN (((('-702593718'))=((t1.c2)))) AND (((((vt1.c0)AND(vt0.c0)))AND(t1.c2)))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t1 ON -1095721498 RIGHT OUTER JOIN vt0 ON ((((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)OR(CAST(t1.c2 AS INTEGER))))AND(CASE WHEN t0.c0 THEN t1.c18 ELSE t0.c0 END)) FULL OUTER JOIN t0 ON ((t1.c0 COLLATE NOCASE)<<(vt1.c0)) WHERE (((((CAST('Pn' AS INTEGER))OR(-1.095127369E9)))OR(t1.c1 COLLATE BINARY))) ORDER BY ((((t1.c2)<(t1.c2)))-(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t1.c2 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS LAST, ((((t1.c2) ISNULL)) NOT BETWEEN (((('-702593718'))=((t1.c2)))) AND (((((vt1.c0)AND(vt0.c0)))AND(t1.c2))));
SELECT SUM(count) FROM (SELECT ((((((CAST('Pn' AS INTEGER))OR(-1.095127369E9)))OR(t1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON -1095721498 RIGHT OUTER JOIN vt0 ON ((((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)OR(CAST(t1.c2 AS INTEGER))))AND(CASE WHEN t0.c0 THEN t1.c18 ELSE t0.c0 END)) FULL OUTER JOIN t0 ON ((t1.c0 COLLATE NOCASE)<<(vt1.c0)) ORDER BY ((((t1.c2)<(t1.c2)))-(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t1.c2 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS LAST, ((((t1.c2) ISNULL)) NOT BETWEEN (((('-702593718'))=((t1.c2)))) AND (((((vt1.c0)AND(vt0.c0)))AND(t1.c2)))));
SELECT COUNT(*) FROM t1, v0, vt0 WHERE (CASE WHEN v0.c0 THEN t1.c18 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN t1.c18 END COLLATE BINARY) IS TRUE)  as count FROM t1, v0, vt0);
SELECT COUNT(*) FROM t1, v0, vt0 WHERE (CASE WHEN v0.c0 THEN t1.c18 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN t1.c18 END COLLATE BINARY) IS TRUE)  as count FROM t1, v0, vt0);
SELECT COUNT(*) FROM t1, v0, vt0 WHERE (CASE WHEN v0.c0 THEN t1.c18 END COLLATE BINARY);
SELECT COUNT(*) FROM t0, vt1 INNER JOIN t1 ON CAST(((t1.c0)<(t1.c18)) AS NUMERIC) WHERE ((((CAST(t1.c2 AS INTEGER)))<((t1.c1)))) ORDER BY ((CAST(t1.c2 AS TEXT))AND((t1.c2 IN (t1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(t1.c2 AS INTEGER)))<((t1.c1)))) IS TRUE)  as count FROM t0, vt1 INNER JOIN t1 ON CAST(((t1.c0)<(t1.c18)) AS NUMERIC) ORDER BY ((CAST(t1.c2 AS TEXT))AND((t1.c2 IN (t1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 INNER JOIN t1 ON CAST(((t1.c0)<(t1.c18)) AS NUMERIC) WHERE ((((CAST(t1.c2 AS INTEGER)))<((t1.c1)))) ORDER BY ((CAST(t1.c2 AS TEXT))AND((t1.c2 IN (t1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(t1.c2 AS INTEGER)))<((t1.c1)))) IS TRUE)  as count FROM t0, vt1 INNER JOIN t1 ON CAST(((t1.c0)<(t1.c18)) AS NUMERIC) ORDER BY ((CAST(t1.c2 AS TEXT))AND((t1.c2 IN (t1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 INNER JOIN t1 ON CAST(((t1.c0)<(t1.c18)) AS NUMERIC) WHERE ((((CAST(t1.c2 AS INTEGER)))<((t1.c1)))) ORDER BY ((CAST(t1.c2 AS TEXT))AND((t1.c2 IN (t1.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, v0, vt0 RIGHT OUTER JOIN t0 ON ((((0.521850640128879 IN ())))>=(((~ (t1.c18))))) FULL OUTER JOIN t1 ON (('M6BAk')>>(((v0.c0) NOT BETWEEN (t0.c0) AND (t1.c2)))) WHERE (((x'') BETWEEN (((v0.c0)LIKE(v0.c0))) AND (t1.c18 COLLATE NOCASE))) ORDER BY (x'93f9' IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (((v0.c0)LIKE(v0.c0))) AND (t1.c18 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, v0, vt0 RIGHT OUTER JOIN t0 ON ((((0.521850640128879 IN ())))>=(((~ (t1.c18))))) FULL OUTER JOIN t1 ON (('M6BAk')>>(((v0.c0) NOT BETWEEN (t0.c0) AND (t1.c2)))) ORDER BY (x'93f9' IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 RIGHT OUTER JOIN t0 ON ((((0.521850640128879 IN ())))>=(((~ (t1.c18))))) FULL OUTER JOIN t1 ON (('M6BAk')>>(((v0.c0) NOT BETWEEN (t0.c0) AND (t1.c2)))) WHERE (((x'') BETWEEN (((v0.c0)LIKE(v0.c0))) AND (t1.c18 COLLATE NOCASE))) ORDER BY (x'93f9' IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (((v0.c0)LIKE(v0.c0))) AND (t1.c18 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, v0, vt0 RIGHT OUTER JOIN t0 ON ((((0.521850640128879 IN ())))>=(((~ (t1.c18))))) FULL OUTER JOIN t1 ON (('M6BAk')>>(((v0.c0) NOT BETWEEN (t0.c0) AND (t1.c2)))) ORDER BY (x'93f9' IN ())  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE (t1.c2) ORDER BY CASE WHEN ((t1.c2) NOT BETWEEN (t1.c18) AND (t1.c2)) THEN ((((t1.c2)OR('')))AND(t1.c2)) END ASC, ((t1.c2) NOT NULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1, vt0 ORDER BY CASE WHEN ((t1.c2) NOT BETWEEN (t1.c18) AND (t1.c2)) THEN ((((t1.c2)OR('')))AND(t1.c2)) END ASC, ((t1.c2) NOT NULL) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM t1, vt0 WHERE (t1.c2) ORDER BY CASE WHEN ((t1.c2) NOT BETWEEN (t1.c18) AND (t1.c2)) THEN ((((t1.c2)OR('')))AND(t1.c2)) END ASC, ((t1.c2) NOT NULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1, vt0 ORDER BY CASE WHEN ((t1.c2) NOT BETWEEN (t1.c18) AND (t1.c2)) THEN ((((t1.c2)OR('')))AND(t1.c2)) END ASC, ((t1.c2) NOT NULL) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM t1, vt0 WHERE (t1.c2) ORDER BY CASE WHEN ((t1.c2) NOT BETWEEN (t1.c18) AND (t1.c2)) THEN ((((t1.c2)OR('')))AND(t1.c2)) END ASC, ((t1.c2) NOT NULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS BLOB)) ORDER BY (((~ (t1.c1)))<((+ (t1.c18)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY (((~ (t1.c1)))<((+ (t1.c18)))) DESC);
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS BLOB)) ORDER BY (((~ (t1.c1)))<((+ (t1.c18)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY (((~ (t1.c1)))<((+ (t1.c18)))) DESC);
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS BLOB)) ORDER BY (((~ (t1.c1)))<((+ (t1.c18)))) DESC;
SELECT COUNT(*) FROM v0, vt1, t1, vt0 WHERE (((((vt0.c0)OR(((t1.c0) IS TRUE))))AND(((((t1.c18)OR(vt0.c0)))AND(NULL))))) ORDER BY (+ (t1.c18)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(((t1.c0) IS TRUE))))AND(((((t1.c18)OR(vt0.c0)))AND(NULL))))) IS TRUE)  as count FROM v0, vt1, t1, vt0 ORDER BY (+ (t1.c18)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM v0, vt1, t1, vt0 WHERE (((((vt0.c0)OR(((t1.c0) IS TRUE))))AND(((((t1.c18)OR(vt0.c0)))AND(NULL))))) ORDER BY (+ (t1.c18)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(((t1.c0) IS TRUE))))AND(((((t1.c18)OR(vt0.c0)))AND(NULL))))) IS TRUE)  as count FROM v0, vt1, t1, vt0 ORDER BY (+ (t1.c18)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM v0, vt1, t1, vt0 WHERE (((((vt0.c0)OR(((t1.c0) IS TRUE))))AND(((((t1.c18)OR(vt0.c0)))AND(NULL))))) ORDER BY (+ (t1.c18)) COLLATE NOCASE ASC;
SELECT * FROM t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0)>=(t0.c0)) THEN t0.c0 END) ORDER BY t0.c0  NULLS FIRST, ((CAST(t0.c0 AS INTEGER))<<(NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0)>=(t0.c0)) THEN t0.c0 END) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS FIRST, ((CAST(t0.c0 AS INTEGER))<<(NULL)) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0)>=(t0.c0)) THEN t0.c0 END) ORDER BY t0.c0  NULLS FIRST, ((CAST(t0.c0 AS INTEGER))<<(NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0)>=(t0.c0)) THEN t0.c0 END) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS FIRST, ((CAST(t0.c0 AS INTEGER))<<(NULL)) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0)>=(t0.c0)) THEN t0.c0 END) ORDER BY t0.c0  NULLS FIRST, ((CAST(t0.c0 AS INTEGER))<<(NULL)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) ORDER BY ((((((((0Xffffffff93f1d20c)OR((vt0.c0 IN ()))))AND(((vt0.c0)GLOB(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN v0.c0 END)))OR(((v0.c0) NOT BETWEEN (0.829674270052097) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((0xffffffff93f1d20c)OR((vt0.c0 IN ()))))AND(((vt0.c0)GLOB(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN v0.c0 END)))OR(((v0.c0) NOT BETWEEN (0.829674270052097) AND (vt0.c0)))));
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) ORDER BY ((((((((0Xffffffff93f1d20c)OR((vt0.c0 IN ()))))AND(((vt0.c0)GLOB(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN v0.c0 END)))OR(((v0.c0) NOT BETWEEN (0.829674270052097) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((0xffffffff93f1d20c)OR((vt0.c0 IN ()))))AND(((vt0.c0)GLOB(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN v0.c0 END)))OR(((v0.c0) NOT BETWEEN (0.829674270052097) AND (vt0.c0)))));
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) ORDER BY ((((((((0Xffffffff93f1d20c)OR((vt0.c0 IN ()))))AND(((vt0.c0)GLOB(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN v0.c0 END)))OR(((v0.c0) NOT BETWEEN (0.829674270052097) AND (vt0.c0))));
SELECT ALL * FROM vt1, v0, t0 WHERE ((((NOT (vt1.c0)))>=(((v0.c0)GLOB(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))>=(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT ALL * FROM vt1, v0, t0 WHERE ((((NOT (vt1.c0)))>=(((v0.c0)GLOB(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))>=(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT ALL * FROM vt1, v0, t0 WHERE ((((NOT (vt1.c0)))>=(((v0.c0)GLOB(v0.c0)))));
SELECT ALL * FROM vt1, t0 WHERE ((((t0.c0)-(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)-(t0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((t0.c0)-(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)-(t0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((t0.c0)-(t0.c0)) IN ()));
SELECT ALL * FROM v0, t0, t1, vt0, vt1 WHERE ((~ (t0.c0 COLLATE NOCASE))) ORDER BY ((((((((((((CAST(t1.c0 AS INTEGER))OR((t1.c2 IN ()))))OR(((t1.c0)IS NOT(t1.c1)))))OR(vt0.c0)))AND(t0.c0 COLLATE BINARY)))AND(IFNULL(vt0.c0, v0.c0))))OR(((vt1.c0) BETWEEN (t0.c0) AND (t1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t0, t1, vt0, vt1 ORDER BY ((((((((((((CAST(t1.c0 AS INTEGER))OR((t1.c2 IN ()))))OR(((t1.c0)IS NOT(t1.c1)))))OR(vt0.c0)))AND(t0.c0 COLLATE BINARY)))AND(IFNULL(vt0.c0, v0.c0))))OR(((vt1.c0) BETWEEN (t0.c0) AND (t1.c2))))  NULLS LAST);
SELECT ALL * FROM v0, t0, t1, vt0, vt1 WHERE ((~ (t0.c0 COLLATE NOCASE))) ORDER BY ((((((((((((CAST(t1.c0 AS INTEGER))OR((t1.c2 IN ()))))OR(((t1.c0)IS NOT(t1.c1)))))OR(vt0.c0)))AND(t0.c0 COLLATE BINARY)))AND(IFNULL(vt0.c0, v0.c0))))OR(((vt1.c0) BETWEEN (t0.c0) AND (t1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t0, t1, vt0, vt1 ORDER BY ((((((((((((CAST(t1.c0 AS INTEGER))OR((t1.c2 IN ()))))OR(((t1.c0)IS NOT(t1.c1)))))OR(vt0.c0)))AND(t0.c0 COLLATE BINARY)))AND(IFNULL(vt0.c0, v0.c0))))OR(((vt1.c0) BETWEEN (t0.c0) AND (t1.c2))))  NULLS LAST);
SELECT ALL * FROM v0, t0, t1, vt0, vt1 WHERE ((~ (t0.c0 COLLATE NOCASE))) ORDER BY ((((((((((((CAST(t1.c0 AS INTEGER))OR((t1.c2 IN ()))))OR(((t1.c0)IS NOT(t1.c1)))))OR(vt0.c0)))AND(t0.c0 COLLATE BINARY)))AND(IFNULL(vt0.c0, v0.c0))))OR(((vt1.c0) BETWEEN (t0.c0) AND (t1.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t1 FULL OUTER JOIN t0 ON t0.c0 FULL OUTER JOIN vt0 ON ((((((t1.c0)OR(t0.c0)))AND(t1.c0))) BETWEEN (((t1.c18)!=(t1.c2))) AND (vt1.c0 COLLATE BINARY)) WHERE ((((t1.c1) NOT NULL) IN ())) ORDER BY (((t1.c0)OR(0xffffffff923b4d12)) IN ()), ((LOWER(t1.c1)) NOT BETWEEN (t1.c2 COLLATE BINARY) AND (vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM vt1, t1 FULL OUTER JOIN t0 ON t0.c0 FULL OUTER JOIN vt0 ON ((((((t1.c0)OR(t0.c0)))AND(t1.c0))) BETWEEN (((t1.c18)!=(t1.c2))) AND (vt1.c0 COLLATE BINARY)) ORDER BY (((t1.c0)OR(0xffffffff923b4d12)) IN ()), ((LOWER(t1.c1)) NOT BETWEEN (t1.c2 COLLATE BINARY) AND (vt1.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1 FULL OUTER JOIN t0 ON t0.c0 FULL OUTER JOIN vt0 ON ((((((t1.c0)OR(t0.c0)))AND(t1.c0))) BETWEEN (((t1.c18)!=(t1.c2))) AND (vt1.c0 COLLATE BINARY)) WHERE ((((t1.c1) NOT NULL) IN ())) ORDER BY (((t1.c0)OR(0xffffffff923b4d12)) IN ()), ((LOWER(t1.c1)) NOT BETWEEN (t1.c2 COLLATE BINARY) AND (vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM vt1, t1 FULL OUTER JOIN t0 ON t0.c0 FULL OUTER JOIN vt0 ON ((((((t1.c0)OR(t0.c0)))AND(t1.c0))) BETWEEN (((t1.c18)!=(t1.c2))) AND (vt1.c0 COLLATE BINARY)) ORDER BY (((t1.c0)OR(0xffffffff923b4d12)) IN ()), ((LOWER(t1.c1)) NOT BETWEEN (t1.c2 COLLATE BINARY) AND (vt1.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1 FULL OUTER JOIN t0 ON t0.c0 FULL OUTER JOIN vt0 ON ((((((t1.c0)OR(t0.c0)))AND(t1.c0))) BETWEEN (((t1.c18)!=(t1.c2))) AND (vt1.c0 COLLATE BINARY)) WHERE ((((t1.c1) NOT NULL) IN ())) ORDER BY (((t1.c0)OR(0xffffffff923b4d12)) IN ()), ((LOWER(t1.c1)) NOT BETWEEN (t1.c2 COLLATE BINARY) AND (vt1.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((0.166218281605941)>>((NOT (v0.c0))))) ORDER BY ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(v0.c0))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.166218281605941)>>((NOT (v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(v0.c0))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((0.166218281605941)>>((NOT (v0.c0))))) ORDER BY ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(v0.c0))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.166218281605941)>>((NOT (v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(v0.c0))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((0.166218281605941)>>((NOT (v0.c0))))) ORDER BY ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(v0.c0))) NOT NULL) ASC  NULLS FIRST;
SELECT * FROM vt0, t1, vt1, v0 WHERE (((json_extract(NULL, t1.c0)) NOT BETWEEN (((t1.c2) BETWEEN (0.4957529328638627) AND (t1.c2))) AND (((((vt1.c0)AND('126404017')))OR(t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((json_extract(NULL, t1.c0)) NOT BETWEEN (((t1.c2) BETWEEN (0.4957529328638627) AND (t1.c2))) AND (((((vt1.c0)AND('126404017')))OR(t1.c1))))) IS TRUE)  as count FROM vt0, t1, vt1, v0);
SELECT * FROM vt0, t1, vt1, v0 WHERE (((json_extract(NULL, t1.c0)) NOT BETWEEN (((t1.c2) BETWEEN (0.4957529328638627) AND (t1.c2))) AND (((((vt1.c0)AND('126404017')))OR(t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((json_extract(NULL, t1.c0)) NOT BETWEEN (((t1.c2) BETWEEN (0.4957529328638627) AND (t1.c2))) AND (((((vt1.c0)AND('126404017')))OR(t1.c1))))) IS TRUE)  as count FROM vt0, t1, vt1, v0);
SELECT * FROM vt0, t1, vt1, v0 WHERE (((json_extract(NULL, t1.c0)) NOT BETWEEN (((t1.c2) BETWEEN (0.4957529328638627) AND (t1.c2))) AND (((((vt1.c0)AND('126404017')))OR(t1.c1)))));
SELECT ALL * FROM v0, vt1, vt0, t0, t1 WHERE (((('')) NOT BETWEEN ((((t1.c18) IS FALSE))) AND ((CASE t1.c18  WHEN t1.c1 THEN v0.c0 ELSE t1.c2 END))));
SELECT SUM(count) FROM (SELECT ALL ((((('')) NOT BETWEEN ((((t1.c18) IS FALSE))) AND ((CASE t1.c18  WHEN t1.c1 THEN v0.c0 ELSE t1.c2 END)))) IS TRUE)  as count FROM v0, vt1, vt0, t0, t1);
SELECT ALL * FROM v0, vt1, vt0, t0, t1 WHERE (((('')) NOT BETWEEN ((((t1.c18) IS FALSE))) AND ((CASE t1.c18  WHEN t1.c1 THEN v0.c0 ELSE t1.c2 END))));
SELECT SUM(count) FROM (SELECT ALL ((((('')) NOT BETWEEN ((((t1.c18) IS FALSE))) AND ((CASE t1.c18  WHEN t1.c1 THEN v0.c0 ELSE t1.c2 END)))) IS TRUE)  as count FROM v0, vt1, vt0, t0, t1);
SELECT ALL * FROM v0, vt1, vt0, t0, t1 WHERE (((('')) NOT BETWEEN ((((t1.c18) IS FALSE))) AND ((CASE t1.c18  WHEN t1.c1 THEN v0.c0 ELSE t1.c2 END))));
SELECT * FROM vt0, v0, t0 WHERE ((((v0.c0)+(v0.c0)) IN (CAST(NULL AS TEXT), x'')));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)+(v0.c0)) IN (CAST(NULL AS TEXT), x''))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE ((((v0.c0)+(v0.c0)) IN (CAST(NULL AS TEXT), x'')));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)+(v0.c0)) IN (CAST(NULL AS TEXT), x''))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE ((((v0.c0)+(v0.c0)) IN (CAST(NULL AS TEXT), x'')));
SELECT ALL * FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (0.2275993633241884))))<=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) BETWEEN (v0.c0) AND (0.2275993633241884))))<=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (0.2275993633241884))))<=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) BETWEEN (v0.c0) AND (0.2275993633241884))))<=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (0.2275993633241884))))<=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((((vt0.c0))=((vt0.c0)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((((vt0.c0))=((vt0.c0)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((((vt0.c0))=((vt0.c0)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT * FROM v0, vt1, t1 WHERE (((UNLIKELY(DISTINCT t1.c18)) IS FALSE)) ORDER BY '-2126903622'  NULLS LAST, '-QdNOWn' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT t1.c18)) IS FALSE)) IS TRUE)  as count FROM v0, vt1, t1 ORDER BY '-2126903622'  NULLS LAST, '-QdNOWn' DESC  NULLS LAST);
SELECT * FROM v0, vt1, t1 WHERE (((UNLIKELY(DISTINCT t1.c18)) IS FALSE)) ORDER BY '-2126903622'  NULLS LAST, '-QdNOWn' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT t1.c18)) IS FALSE)) IS TRUE)  as count FROM v0, vt1, t1 ORDER BY '-2126903622'  NULLS LAST, '-QdNOWn' DESC  NULLS LAST);
SELECT * FROM v0, vt1, t1 WHERE (((UNLIKELY(DISTINCT t1.c18)) IS FALSE)) ORDER BY '-2126903622'  NULLS LAST, '-QdNOWn' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1, t1 NATURAL JOIN v0 WHERE (json_quote(UNLIKELY(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT ((json_quote(UNLIKELY(DISTINCT vt1.c0))) IS TRUE)  as count FROM t0, vt1, t1 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM t0, vt1, t1 NATURAL JOIN v0 WHERE (json_quote(UNLIKELY(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT ((json_quote(UNLIKELY(DISTINCT vt1.c0))) IS TRUE)  as count FROM t0, vt1, t1 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM t0, vt1, t1 NATURAL JOIN v0 WHERE (json_quote(UNLIKELY(DISTINCT vt1.c0)));
SELECT ALL COUNT(*) FROM t0, t1, vt1 WHERE (((LIKE(t1.c1, t1.c2)) BETWEEN (CASE t1.c2  WHEN x'e36d' THEN 0xffffffffd61f454a WHEN t1.c1 THEN t0.c0 WHEN t1.c1 THEN -1.626641685E9 END) AND (LIKE(t0.c0, t0.c0, '*')))) ORDER BY LOWER(DISTINCT t0.c0) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((LIKE(t1.c1, t1.c2)) BETWEEN (CASE t1.c2  WHEN x'e36d' THEN 0xffffffffd61f454a WHEN t1.c1 THEN t0.c0 WHEN t1.c1 THEN -1.626641685E9 END) AND (LIKE(t0.c0, t0.c0, '*')))) IS TRUE)  as count FROM t0, t1, vt1 ORDER BY LOWER(DISTINCT t0.c0) COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, t1, vt1 WHERE (((LIKE(t1.c1, t1.c2)) BETWEEN (CASE t1.c2  WHEN x'e36d' THEN 0xffffffffd61f454a WHEN t1.c1 THEN t0.c0 WHEN t1.c1 THEN -1.626641685E9 END) AND (LIKE(t0.c0, t0.c0, '*')))) ORDER BY LOWER(DISTINCT t0.c0) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((LIKE(t1.c1, t1.c2)) BETWEEN (CASE t1.c2  WHEN x'e36d' THEN 0xffffffffd61f454a WHEN t1.c1 THEN t0.c0 WHEN t1.c1 THEN -1.626641685E9 END) AND (LIKE(t0.c0, t0.c0, '*')))) IS TRUE)  as count FROM t0, t1, vt1 ORDER BY LOWER(DISTINCT t0.c0) COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, t1, vt1 WHERE (((LIKE(t1.c1, t1.c2)) BETWEEN (CASE t1.c2  WHEN x'e36d' THEN 0xffffffffd61f454a WHEN t1.c1 THEN t0.c0 WHEN t1.c1 THEN -1.626641685E9 END) AND (LIKE(t0.c0, t0.c0, '*')))) ORDER BY LOWER(DISTINCT t0.c0) COLLATE RTRIM COLLATE BINARY;
SELECT ALL * FROM vt0, t1, t0, vt1 WHERE ((((t1.c0, t1.c0, t0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((t1.c2)) AND ((t1.c2))), (((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))), vt0.c0 COLLATE BINARY)) AND ((((t1.c1) NOT NULL), ((vt0.c0)>>(t1.c18)), (t1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t1.c0, t1.c0, t0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((t1.c2)) AND ((t1.c2))), (((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))), vt0.c0 COLLATE BINARY)) AND ((((t1.c1) NOT NULL), ((vt0.c0)>>(t1.c18)), (t1.c0 IN ()))))) IS TRUE)  as count FROM vt0, t1, t0, vt1);
SELECT ALL * FROM vt0, t1, t0, vt1 WHERE ((((t1.c0, t1.c0, t0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((t1.c2)) AND ((t1.c2))), (((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))), vt0.c0 COLLATE BINARY)) AND ((((t1.c1) NOT NULL), ((vt0.c0)>>(t1.c18)), (t1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t1.c0, t1.c0, t0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((t1.c2)) AND ((t1.c2))), (((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))), vt0.c0 COLLATE BINARY)) AND ((((t1.c1) NOT NULL), ((vt0.c0)>>(t1.c18)), (t1.c0 IN ()))))) IS TRUE)  as count FROM vt0, t1, t0, vt1);
SELECT ALL * FROM vt0, t1, t0, vt1 WHERE ((((t1.c0, t1.c0, t0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((t1.c2)) AND ((t1.c2))), (((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))), vt0.c0 COLLATE BINARY)) AND ((((t1.c1) NOT NULL), ((vt0.c0)>>(t1.c18)), (t1.c0 IN ())))));
SELECT ALL * FROM v0, vt0, t0, t1, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0, t0, t1, vt1);
SELECT ALL * FROM v0, vt0, t0, t1, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0, t0, t1, vt1);
SELECT ALL * FROM v0, vt0, t0, t1, vt1 WHERE (NULL);
SELECT ALL * FROM v0, vt1 WHERE (0.1148028246333549) ORDER BY ((((((((((vt1.c0)AND(v0.c0)))OR(((v0.c0)<(v0.c0)))))AND(((((vt1.c0)AND(v0.c0)))OR(vt1.c0)))))OR(((v0.c0)AND(vt1.c0)))))AND(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.1148028246333549) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((((((((vt1.c0)AND(v0.c0)))OR(((v0.c0)<(v0.c0)))))AND(((((vt1.c0)AND(v0.c0)))OR(vt1.c0)))))OR(((v0.c0)AND(vt1.c0)))))AND(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt1 WHERE (0.1148028246333549) ORDER BY ((((((((((vt1.c0)AND(v0.c0)))OR(((v0.c0)<(v0.c0)))))AND(((((vt1.c0)AND(v0.c0)))OR(vt1.c0)))))OR(((v0.c0)AND(vt1.c0)))))AND(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.1148028246333549) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((((((((vt1.c0)AND(v0.c0)))OR(((v0.c0)<(v0.c0)))))AND(((((vt1.c0)AND(v0.c0)))OR(vt1.c0)))))OR(((v0.c0)AND(vt1.c0)))))AND(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt1 WHERE (0.1148028246333549) ORDER BY ((((((((((vt1.c0)AND(v0.c0)))OR(((v0.c0)<(v0.c0)))))AND(((((vt1.c0)AND(v0.c0)))OR(vt1.c0)))))OR(((v0.c0)AND(vt1.c0)))))AND(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0, t0 WHERE ((NOT ((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (t0.c0))))) IS TRUE)  as count FROM t1, vt0, t0);
SELECT ALL COUNT(*) FROM t1, vt0, t0 WHERE ((NOT ((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (t0.c0))))) IS TRUE)  as count FROM t1, vt0, t0);
SELECT ALL COUNT(*) FROM t1, vt0, t0 WHERE ((NOT ((- (t0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((~ ('b#R%T1 3w')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((~ ('b#R%T1 3w')) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((~ ('b#R%T1 3w')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((~ ('b#R%T1 3w')) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((~ ('b#R%T1 3w')) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t0 WHERE (0.26288624072704003) ORDER BY (NOT (((vt0.c0)%(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.26288624072704003) IS TRUE)  as count FROM vt0, v0, vt1, t0 ORDER BY (NOT (((vt0.c0)%(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t0 WHERE (0.26288624072704003) ORDER BY (NOT (((vt0.c0)%(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.26288624072704003) IS TRUE)  as count FROM vt0, v0, vt1, t0 ORDER BY (NOT (((vt0.c0)%(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t0 WHERE (0.26288624072704003) ORDER BY (NOT (((vt0.c0)%(v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON (+ (((((t1.c2)OR(t1.c18)))OR(v0.c0)))) INNER JOIN v0 ON (~ ((v0.c0 IN ()))) WHERE ((NOT (0.5542585449717187)) COLLATE NOCASE) ORDER BY ((((v0.c0 COLLATE BINARY)OR(((((t1.c0)AND(vt0.c0)))OR(t1.c0)))))OR(HEX(DISTINCT t1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.5542585449717187)) COLLATE NOCASE) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (+ (((((t1.c2)OR(t1.c18)))OR(v0.c0)))) INNER JOIN v0 ON (~ ((v0.c0 IN ()))) ORDER BY ((((v0.c0 COLLATE BINARY)OR(((((t1.c0)AND(vt0.c0)))OR(t1.c0)))))OR(HEX(DISTINCT t1.c1))) ASC);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON (+ (((((t1.c2)OR(t1.c18)))OR(v0.c0)))) INNER JOIN v0 ON (~ ((v0.c0 IN ()))) WHERE ((NOT (0.5542585449717187)) COLLATE NOCASE) ORDER BY ((((v0.c0 COLLATE BINARY)OR(((((t1.c0)AND(vt0.c0)))OR(t1.c0)))))OR(HEX(DISTINCT t1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.5542585449717187)) COLLATE NOCASE) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (+ (((((t1.c2)OR(t1.c18)))OR(v0.c0)))) INNER JOIN v0 ON (~ ((v0.c0 IN ()))) ORDER BY ((((v0.c0 COLLATE BINARY)OR(((((t1.c0)AND(vt0.c0)))OR(t1.c0)))))OR(HEX(DISTINCT t1.c1))) ASC);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON (+ (((((t1.c2)OR(t1.c18)))OR(v0.c0)))) INNER JOIN v0 ON (~ ((v0.c0 IN ()))) WHERE ((NOT (0.5542585449717187)) COLLATE NOCASE) ORDER BY ((((v0.c0 COLLATE BINARY)OR(((((t1.c0)AND(vt0.c0)))OR(t1.c0)))))OR(HEX(DISTINCT t1.c1))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (COALESCE((t0.c0 IN ()), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), t0.c0, t0.c0, 0.9334365683677138));
SELECT SUM(count) FROM (SELECT ((COALESCE((t0.c0 IN ()), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), t0.c0, t0.c0, 0.9334365683677138)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (COALESCE((t0.c0 IN ()), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), t0.c0, t0.c0, 0.9334365683677138));
SELECT SUM(count) FROM (SELECT ((COALESCE((t0.c0 IN ()), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), t0.c0, t0.c0, 0.9334365683677138)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (COALESCE((t0.c0 IN ()), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), t0.c0, t0.c0, 0.9334365683677138));
SELECT ALL * FROM vt1, vt0, v0 WHERE (NULL) ORDER BY (x'6489' IN ()) COLLATE NOCASE ASC  NULLS LAST, ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (x'6489' IN ()) COLLATE NOCASE ASC  NULLS LAST, ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN ()));
SELECT ALL * FROM vt1, vt0, v0 WHERE (NULL) ORDER BY (x'6489' IN ()) COLLATE NOCASE ASC  NULLS LAST, ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (x'6489' IN ()) COLLATE NOCASE ASC  NULLS LAST, ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN ()));
SELECT ALL * FROM vt1, vt0, v0 WHERE (NULL) ORDER BY (x'6489' IN ()) COLLATE NOCASE ASC  NULLS LAST, ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN ());
SELECT ALL COUNT(*) FROM v0, vt0, t0, t1 WHERE ((((vt0.c0) BETWEEN (t1.c18) AND (t1.c18)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (t1.c18) AND (t1.c18)) IN ())) IS TRUE)  as count FROM v0, vt0, t0, t1);
SELECT ALL COUNT(*) FROM v0, vt0, t0, t1 WHERE ((((vt0.c0) BETWEEN (t1.c18) AND (t1.c18)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (t1.c18) AND (t1.c18)) IN ())) IS TRUE)  as count FROM v0, vt0, t0, t1);
SELECT ALL COUNT(*) FROM v0, vt0, t0, t1 WHERE ((((vt0.c0) BETWEEN (t1.c18) AND (t1.c18)) IN ()));
SELECT * FROM vt0, t1 WHERE (CAST(CAST(t1.c2 AS NUMERIC) AS INTEGER)) ORDER BY t1.c18 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c2 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM vt0, t1 ORDER BY t1.c18 ASC  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (CAST(CAST(t1.c2 AS NUMERIC) AS INTEGER)) ORDER BY t1.c18 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c2 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM vt0, t1 ORDER BY t1.c18 ASC  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (CAST(CAST(t1.c2 AS NUMERIC) AS INTEGER)) ORDER BY t1.c18 ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t1, v0 FULL OUTER JOIN t0 ON json_quote(((t0.c0)|(v0.c0))) WHERE (CASE WHEN ((((v0.c0)OR(t1.c0)))AND(x'466f')) THEN ((t1.c18) NOT BETWEEN ('1702908515') AND (t1.c0)) ELSE v0.c0 COLLATE RTRIM END) ORDER BY '592062024', ((((t1.c2 IN (t1.c18))))<=((((t1.c0)<=(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((v0.c0)OR(t1.c0)))AND(x'466f')) THEN ((t1.c18) NOT BETWEEN ('1702908515') AND (t1.c0)) ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t1, v0 FULL OUTER JOIN t0 ON json_quote(((t0.c0)|(v0.c0))) ORDER BY '592062024', ((((t1.c2 IN (t1.c18))))<=((((t1.c0)<=(t1.c0))))));
SELECT ALL COUNT(*) FROM t1, v0 FULL OUTER JOIN t0 ON json_quote(((t0.c0)|(v0.c0))) WHERE (CASE WHEN ((((v0.c0)OR(t1.c0)))AND(x'466f')) THEN ((t1.c18) NOT BETWEEN ('1702908515') AND (t1.c0)) ELSE v0.c0 COLLATE RTRIM END) ORDER BY '592062024', ((((t1.c2 IN (t1.c18))))<=((((t1.c0)<=(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((v0.c0)OR(t1.c0)))AND(x'466f')) THEN ((t1.c18) NOT BETWEEN ('1702908515') AND (t1.c0)) ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t1, v0 FULL OUTER JOIN t0 ON json_quote(((t0.c0)|(v0.c0))) ORDER BY '592062024', ((((t1.c2 IN (t1.c18))))<=((((t1.c0)<=(t1.c0))))));
SELECT ALL COUNT(*) FROM t1, v0 FULL OUTER JOIN t0 ON json_quote(((t0.c0)|(v0.c0))) WHERE (CASE WHEN ((((v0.c0)OR(t1.c0)))AND(x'466f')) THEN ((t1.c18) NOT BETWEEN ('1702908515') AND (t1.c0)) ELSE v0.c0 COLLATE RTRIM END) ORDER BY '592062024', ((((t1.c2 IN (t1.c18))))<=((((t1.c0)<=(t1.c0)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t1 ON (NOT ((t1.c2 IN ()))) WHERE (((((vt1.c0) IS FALSE)) NOT NULL)) ORDER BY NULL  NULLS LAST, (((t1.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND (((((t1.c1))<>((vt1.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON (NOT ((t1.c2 IN ()))) ORDER BY NULL  NULLS LAST, (((t1.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND (((((t1.c1))!=((vt1.c0)))))) ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t1 ON (NOT ((t1.c2 IN ()))) WHERE (((((vt1.c0) IS FALSE)) NOT NULL)) ORDER BY NULL  NULLS LAST, (((t1.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND (((((t1.c1))<>((vt1.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON (NOT ((t1.c2 IN ()))) ORDER BY NULL  NULLS LAST, (((t1.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND (((((t1.c1))!=((vt1.c0)))))) ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t1 ON (NOT ((t1.c2 IN ()))) WHERE (((((vt1.c0) IS FALSE)) NOT NULL)) ORDER BY NULL  NULLS LAST, (((t1.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND (((((t1.c1))<>((vt1.c0)))))) ASC;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t1 ON (+ ((((t1.c18))>=((vt1.c0))))) LEFT OUTER JOIN vt1 ON '' WHERE (((((((((t1.c0 COLLATE NOCASE)OR(CASE WHEN NULL THEN '-104330222' ELSE 0.8218485565423883 END)))AND((((-237090760)) BETWEEN ((vt1.c0)) AND ((t1.c1))))))AND(((t1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c0)))))) ORDER BY (((CAST(t0.c0 AS REAL)))=((t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((t1.c0 COLLATE NOCASE)OR(CASE WHEN NULL THEN '-104330222' ELSE 0.8218485565423883 END)))AND((((-237090760)) BETWEEN ((vt1.c0)) AND ((t1.c1))))))AND(((t1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON (+ ((((t1.c18))>=((vt1.c0))))) LEFT OUTER JOIN vt1 ON '' ORDER BY (((CAST(t0.c0 AS REAL)))=((t1.c0 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t1 ON (+ ((((t1.c18))>=((vt1.c0))))) LEFT OUTER JOIN vt1 ON '' WHERE (((((((((t1.c0 COLLATE NOCASE)OR(CASE WHEN NULL THEN '-104330222' ELSE 0.8218485565423883 END)))AND((((-237090760)) BETWEEN ((vt1.c0)) AND ((t1.c1))))))AND(((t1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c0)))))) ORDER BY (((CAST(t0.c0 AS REAL)))=((t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((t1.c0 COLLATE NOCASE)OR(CASE WHEN NULL THEN '-104330222' ELSE 0.8218485565423883 END)))AND((((-237090760)) BETWEEN ((vt1.c0)) AND ((t1.c1))))))AND(((t1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON (+ ((((t1.c18))>=((vt1.c0))))) LEFT OUTER JOIN vt1 ON '' ORDER BY (((CAST(t0.c0 AS REAL)))=((t1.c0 COLLATE NOCASE))));
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0)AND(t1.c18))) BETWEEN (((((((((t1.c0)AND(t1.c2)))AND(t1.c1)))OR(t1.c1)))OR(t1.c18))) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(t1.c18))) BETWEEN (((((((((t1.c0)AND(t1.c2)))AND(t1.c1)))OR(t1.c1)))OR(t1.c18))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0)AND(t1.c18))) BETWEEN (((((((((t1.c0)AND(t1.c2)))AND(t1.c1)))OR(t1.c1)))OR(t1.c18))) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(t1.c18))) BETWEEN (((((((((t1.c0)AND(t1.c2)))AND(t1.c1)))OR(t1.c1)))OR(t1.c18))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0)AND(t1.c18))) BETWEEN (((((((((t1.c0)AND(t1.c2)))AND(t1.c1)))OR(t1.c1)))OR(t1.c18))) AND (((vt0.c0) IS TRUE))));
SELECT * FROM vt0, v0, t0, t1, vt1 WHERE ((((v0.c0 IN (t1.c0))) IS TRUE)) ORDER BY (((t1.c2 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND (CASE t1.c0  WHEN t0.c0 THEN t1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (t1.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, v0, t0, t1, vt1 ORDER BY (((t1.c2 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND (CASE t1.c0  WHEN t0.c0 THEN t1.c2 END))  NULLS FIRST);
SELECT * FROM vt0, v0, t0, t1, vt1 WHERE ((((v0.c0 IN (t1.c0))) IS TRUE)) ORDER BY (((t1.c2 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND (CASE t1.c0  WHEN t0.c0 THEN t1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (t1.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, v0, t0, t1, vt1 ORDER BY (((t1.c2 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND (CASE t1.c0  WHEN t0.c0 THEN t1.c2 END))  NULLS FIRST);
SELECT * FROM vt0, v0, t0, t1, vt1 WHERE ((((v0.c0 IN (t1.c0))) IS TRUE)) ORDER BY (((t1.c2 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND (CASE t1.c0  WHEN t0.c0 THEN t1.c2 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t1 ON t1.c1 WHERE (CASE WHEN t1.c0 THEN CAST(t1.c0 AS BLOB) WHEN 0xffffffffd4ee1d3f THEN CAST('韟' AS BLOB) WHEN CASE t1.c1  WHEN t1.c18 THEN 0Xffffffffc7459fbd WHEN t1.c18 THEN t1.c1 WHEN t1.c18 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t1.c0 END THEN UNLIKELY(t1.c0) ELSE LTRIM(t1.c0) END) ORDER BY t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 THEN CAST(t1.c0 AS BLOB) WHEN 0xffffffffd4ee1d3f THEN CAST('韟' AS BLOB) WHEN CASE t1.c1  WHEN t1.c18 THEN 0Xffffffffc7459fbd WHEN t1.c18 THEN t1.c1 WHEN t1.c18 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t1.c0 END THEN UNLIKELY(t1.c0) ELSE LTRIM(t1.c0) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON t1.c1 ORDER BY t1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t1 ON t1.c1 WHERE (CASE WHEN t1.c0 THEN CAST(t1.c0 AS BLOB) WHEN 0xffffffffd4ee1d3f THEN CAST('韟' AS BLOB) WHEN CASE t1.c1  WHEN t1.c18 THEN 0Xffffffffc7459fbd WHEN t1.c18 THEN t1.c1 WHEN t1.c18 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t1.c0 END THEN UNLIKELY(t1.c0) ELSE LTRIM(t1.c0) END) ORDER BY t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 THEN CAST(t1.c0 AS BLOB) WHEN 0xffffffffd4ee1d3f THEN CAST('韟' AS BLOB) WHEN CASE t1.c1  WHEN t1.c18 THEN 0Xffffffffc7459fbd WHEN t1.c18 THEN t1.c1 WHEN t1.c18 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t1.c0 END THEN UNLIKELY(t1.c0) ELSE LTRIM(t1.c0) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON t1.c1 ORDER BY t1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t1 ON t1.c1 WHERE (CASE WHEN t1.c0 THEN CAST(t1.c0 AS BLOB) WHEN 0xffffffffd4ee1d3f THEN CAST('韟' AS BLOB) WHEN CASE t1.c1  WHEN t1.c18 THEN 0Xffffffffc7459fbd WHEN t1.c18 THEN t1.c1 WHEN t1.c18 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t1.c0 END THEN UNLIKELY(t1.c0) ELSE LTRIM(t1.c0) END) ORDER BY t1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) THEN v0.c0 END) ORDER BY LOWER(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) THEN v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY LOWER(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) THEN v0.c0 END) ORDER BY LOWER(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) THEN v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY LOWER(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) THEN v0.c0 END) ORDER BY LOWER(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS LAST;
SELECT * FROM vt0, t1, vt1, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t1, vt1, t0);
SELECT * FROM vt0, t1, vt1, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t1, vt1, t0);
SELECT * FROM vt0, t1, vt1, t0 WHERE (x'');
SELECT * FROM t1 RIGHT OUTER JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((x'0ddb7dcc')) AND (((t1.c18 IN (t1.c18))))) INNER JOIN vt1 ON ((((v0.c0, t0.c0, vt1.c0)) NOT BETWEEN ((x'91b8', NULL, t1.c1)) AND ((vt0.c0, t1.c18, t1.c2))) IN (((((((((vt1.c0)AND(t0.c0)))AND(t1.c18)))OR(vt1.c0)))AND(x'')))) FULL OUTER JOIN t0 ON (~ (((vt0.c0)/(t1.c0)))) LEFT OUTER JOIN vt0 ON ((CAST(x'9fa0' AS TEXT))||(((vt1.c0)<=(t1.c18)))) WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ABS(t0.c0) THEN 0xffffffffb824e721 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE NOCASE  WHEN ABS(t0.c0) THEN 0Xffffffffb824e721 END) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((x'0ddb7dcc')) AND (((t1.c18 IN (t1.c18))))) INNER JOIN vt1 ON ((((v0.c0, t0.c0, vt1.c0)) NOT BETWEEN ((x'91b8', NULL, t1.c1)) AND ((vt0.c0, t1.c18, t1.c2))) IN (((((((((vt1.c0)AND(t0.c0)))AND(t1.c18)))OR(vt1.c0)))AND(x'')))) FULL OUTER JOIN t0 ON (~ (((vt0.c0)/(t1.c0)))) LEFT OUTER JOIN vt0 ON ((CAST(x'9fa0' AS TEXT))||(((vt1.c0)<=(t1.c18)))));
SELECT * FROM t1 RIGHT OUTER JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((x'0ddb7dcc')) AND (((t1.c18 IN (t1.c18))))) INNER JOIN vt1 ON ((((v0.c0, t0.c0, vt1.c0)) NOT BETWEEN ((x'91b8', NULL, t1.c1)) AND ((vt0.c0, t1.c18, t1.c2))) IN (((((((((vt1.c0)AND(t0.c0)))AND(t1.c18)))OR(vt1.c0)))AND(x'')))) FULL OUTER JOIN t0 ON (~ (((vt0.c0)/(t1.c0)))) LEFT OUTER JOIN vt0 ON ((CAST(x'9fa0' AS TEXT))||(((vt1.c0)<=(t1.c18)))) WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ABS(t0.c0) THEN 0xffffffffb824e721 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE NOCASE  WHEN ABS(t0.c0) THEN 0Xffffffffb824e721 END) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((x'0ddb7dcc')) AND (((t1.c18 IN (t1.c18))))) INNER JOIN vt1 ON ((((v0.c0, t0.c0, vt1.c0)) NOT BETWEEN ((x'91b8', NULL, t1.c1)) AND ((vt0.c0, t1.c18, t1.c2))) IN (((((((((vt1.c0)AND(t0.c0)))AND(t1.c18)))OR(vt1.c0)))AND(x'')))) FULL OUTER JOIN t0 ON (~ (((vt0.c0)/(t1.c0)))) LEFT OUTER JOIN vt0 ON ((CAST(x'9fa0' AS TEXT))||(((vt1.c0)<=(t1.c18)))));
SELECT COUNT(*) FROM t1, vt1 RIGHT OUTER JOIN v0 ON LOWER((- (t1.c0))) CROSS JOIN t0 ON (~ (CASE WHEN v0.c0 THEN t0.c0 ELSE t1.c2 END)) WHERE (((((vt1.c0)AND(t0.c0)))OR(v0.c0)) COLLATE RTRIM) ORDER BY ((((((((t1.c18)AND(((0xffffffffec41ed55)>>(t0.c0)))))OR(t1.c18 COLLATE BINARY)))OR(t1.c2 COLLATE NOCASE)))OR(((t1.c2)*(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(t0.c0)))OR(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt1 RIGHT OUTER JOIN v0 ON LOWER((- (t1.c0))) CROSS JOIN t0 ON (~ (CASE WHEN v0.c0 THEN t0.c0 ELSE t1.c2 END)) ORDER BY ((((((((t1.c18)AND(((0xffffffffec41ed55)>>(t0.c0)))))OR(t1.c18 COLLATE BINARY)))OR(t1.c2 COLLATE NOCASE)))OR(((t1.c2)*(vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt1 RIGHT OUTER JOIN v0 ON LOWER((- (t1.c0))) CROSS JOIN t0 ON (~ (CASE WHEN v0.c0 THEN t0.c0 ELSE t1.c2 END)) WHERE (((((vt1.c0)AND(t0.c0)))OR(v0.c0)) COLLATE RTRIM) ORDER BY ((((((((t1.c18)AND(((0xffffffffec41ed55)>>(t0.c0)))))OR(t1.c18 COLLATE BINARY)))OR(t1.c2 COLLATE NOCASE)))OR(((t1.c2)*(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(t0.c0)))OR(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt1 RIGHT OUTER JOIN v0 ON LOWER((- (t1.c0))) CROSS JOIN t0 ON (~ (CASE WHEN v0.c0 THEN t0.c0 ELSE t1.c2 END)) ORDER BY ((((((((t1.c18)AND(((0xffffffffec41ed55)>>(t0.c0)))))OR(t1.c18 COLLATE BINARY)))OR(t1.c2 COLLATE NOCASE)))OR(((t1.c2)*(vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt1 RIGHT OUTER JOIN v0 ON LOWER((- (t1.c0))) CROSS JOIN t0 ON (~ (CASE WHEN v0.c0 THEN t0.c0 ELSE t1.c2 END)) WHERE (((((vt1.c0)AND(t0.c0)))OR(v0.c0)) COLLATE RTRIM) ORDER BY ((((((((t1.c18)AND(((0xffffffffec41ed55)>>(t0.c0)))))OR(t1.c18 COLLATE BINARY)))OR(t1.c2 COLLATE NOCASE)))OR(((t1.c2)*(vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, v0, vt0, t0, t1 WHERE ((((v0.c0 IN ())) BETWEEN (LOWER(vt0.c0)) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) BETWEEN (LOWER(vt0.c0)) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, v0, vt0, t0, t1);
SELECT ALL * FROM vt1, v0, vt0, t0, t1 WHERE ((((v0.c0 IN ())) BETWEEN (LOWER(vt0.c0)) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) BETWEEN (LOWER(vt0.c0)) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, v0, vt0, t0, t1);
SELECT ALL * FROM vt1, v0, vt0, t0, t1 WHERE ((((v0.c0 IN ())) BETWEEN (LOWER(vt0.c0)) AND ((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t1, vt1 NATURAL JOIN t0 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c18)))||('璷6')));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c18)))||('璷6'))) IS TRUE)  as count FROM vt0, t1, vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 NATURAL JOIN t0 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c18)))||('璷6')));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c18)))||('璷6'))) IS TRUE)  as count FROM vt0, t1, vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 NATURAL JOIN t0 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c18)))||('璷6')));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN t1.c1 THEN vt0.c0 END)AND('1385262795')) LEFT OUTER JOIN vt1 ON x'' COLLATE RTRIM WHERE ((('') BETWEEN (t1.c2) AND (x'6bc7d6ab')));
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN (t1.c2) AND (x'6bc7d6ab'))) IS TRUE)  as count FROM vt0 NOT INDEXED RIGHT OUTER JOIN t1 ON ((CASE WHEN t1.c1 THEN vt0.c0 END)AND('1385262795')) LEFT OUTER JOIN vt1 ON x'' COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN t1.c1 THEN vt0.c0 END)AND('1385262795')) LEFT OUTER JOIN vt1 ON x'' COLLATE RTRIM WHERE ((('') BETWEEN (t1.c2) AND (x'6bc7d6ab')));
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN (t1.c2) AND (x'6bc7d6ab'))) IS TRUE)  as count FROM vt0 NOT INDEXED RIGHT OUTER JOIN t1 ON ((CASE WHEN t1.c1 THEN vt0.c0 END)AND('1385262795')) LEFT OUTER JOIN vt1 ON x'' COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN t1.c1 THEN vt0.c0 END)AND('1385262795')) LEFT OUTER JOIN vt1 ON x'' COLLATE RTRIM WHERE ((('') BETWEEN (t1.c2) AND (x'6bc7d6ab')));
SELECT ALL COUNT(*) FROM vt0, t1, vt1, v0, t0 WHERE (((t1.c2) NOTNULL)) ORDER BY CAST((t1.c1 IN ()) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2) NOTNULL)) IS TRUE)  as count FROM vt0, t1, vt1, v0, t0 ORDER BY CAST((t1.c1 IN ()) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, v0, t0 WHERE (((t1.c2) NOTNULL)) ORDER BY CAST((t1.c1 IN ()) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2) NOTNULL)) IS TRUE)  as count FROM vt0, t1, vt1, v0, t0 ORDER BY CAST((t1.c1 IN ()) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, v0, t0 WHERE (((t1.c2) NOTNULL)) ORDER BY CAST((t1.c1 IN ()) AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM t0 INDEXED BY i14, v0 WHERE ((((((((t0.c0)OR(v0.c0)))AND(t0.c0))))=((v0.c0)))) ORDER BY (+ (((t0.c0)<(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)OR(v0.c0)))AND(t0.c0))))=((v0.c0)))) IS TRUE)  as count FROM t0 INDEXED BY i14, v0 ORDER BY (+ (((t0.c0)<(v0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0 INDEXED BY i14, v0 WHERE ((((((((t0.c0)OR(v0.c0)))AND(t0.c0))))=((v0.c0)))) ORDER BY (+ (((t0.c0)<(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)OR(v0.c0)))AND(t0.c0))))=((v0.c0)))) IS TRUE)  as count FROM t0 INDEXED BY i14, v0 ORDER BY (+ (((t0.c0)<(v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)OR(v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN NULLIF(v0.c0, v0.c0) ELSE HEX(v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)OR(v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN NULLIF(v0.c0, v0.c0) ELSE HEX(v0.c0) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)OR(v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN NULLIF(v0.c0, v0.c0) ELSE HEX(v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)OR(v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN NULLIF(v0.c0, v0.c0) ELSE HEX(v0.c0) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)OR(v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN NULLIF(v0.c0, v0.c0) ELSE HEX(v0.c0) END);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((x'')AND((((t0.c0))=((t0.c0))))))AND((((t0.c0))>=((-548367492))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((x'')AND((((t0.c0))=((t0.c0))))))AND((((t0.c0))>=((-548367492))))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((x'')AND((((t0.c0))=((t0.c0))))))AND((((t0.c0))>=((-548367492))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((x'')AND((((t0.c0))=((t0.c0))))))AND((((t0.c0))>=((-548367492))))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((x'')AND((((t0.c0))=((t0.c0))))))AND((((t0.c0))>=((-548367492))))) ASC  NULLS LAST;
SELECT ALL * FROM v0, t1, vt1 INNER JOIN vt0 ON (((NOT (t1.c2)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)))) WHERE ((- (((vt0.c0)>(vt0.c0))))) ORDER BY ((0.37278553155247807) NOT BETWEEN (((((((((((((vt1.c0)AND(t1.c2)))OR(t1.c2)))OR(t1.c2)))AND(vt1.c0)))OR(t1.c18)))OR(t1.c18))) AND (v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM v0, t1, vt1 INNER JOIN vt0 ON (((NOT (t1.c2)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)))) ORDER BY ((0.37278553155247807) NOT BETWEEN (((((((((((((vt1.c0)AND(t1.c2)))OR(t1.c2)))OR(t1.c2)))AND(vt1.c0)))OR(t1.c18)))OR(t1.c18))) AND (v0.c0))  NULLS FIRST);
SELECT ALL * FROM v0, t1, vt1 INNER JOIN vt0 ON (((NOT (t1.c2)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)))) WHERE ((- (((vt0.c0)>(vt0.c0))))) ORDER BY ((0.37278553155247807) NOT BETWEEN (((((((((((((vt1.c0)AND(t1.c2)))OR(t1.c2)))OR(t1.c2)))AND(vt1.c0)))OR(t1.c18)))OR(t1.c18))) AND (v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM v0, t1, vt1 INNER JOIN vt0 ON (((NOT (t1.c2)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)))) ORDER BY ((0.37278553155247807) NOT BETWEEN (((((((((((((vt1.c0)AND(t1.c2)))OR(t1.c2)))OR(t1.c2)))AND(vt1.c0)))OR(t1.c18)))OR(t1.c18))) AND (v0.c0))  NULLS FIRST);
SELECT ALL * FROM v0, t1, vt1 INNER JOIN vt0 ON (((NOT (t1.c2)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)))) WHERE ((- (((vt0.c0)>(vt0.c0))))) ORDER BY ((0.37278553155247807) NOT BETWEEN (((((((((((((vt1.c0)AND(t1.c2)))OR(t1.c2)))OR(t1.c2)))AND(vt1.c0)))OR(t1.c18)))OR(t1.c18))) AND (v0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((CASE vt0.c0  WHEN 'JK1ES谗n]' THEN vt0.c0 END)>>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN 'JK1ES谗n]' THEN vt0.c0 END)>>(vt0.c0))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((CASE vt0.c0  WHEN 'JK1ES谗n]' THEN vt0.c0 END)>>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN 'JK1ES谗n]' THEN vt0.c0 END)>>(vt0.c0))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((CASE vt0.c0  WHEN 'JK1ES谗n]' THEN vt0.c0 END)>>(vt0.c0)));
SELECT ALL * FROM t0, v0, t1 WHERE ((((((-1095721498, t0.c0, t1.c1))<((t0.c0, t1.c2, t1.c2))))>=(((x'')|(v0.c0))))) ORDER BY ((t1.c2 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((-1095721498, t0.c0, t1.c1))<((t0.c0, t1.c2, t1.c2))))>=(((x'')|(v0.c0))))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY ((t1.c2 IN ()) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM t0, v0, t1 WHERE ((((((-1095721498, t0.c0, t1.c1))<((t0.c0, t1.c2, t1.c2))))>=(((x'')|(v0.c0))))) ORDER BY ((t1.c2 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((-1095721498, t0.c0, t1.c1))<((t0.c0, t1.c2, t1.c2))))>=(((x'')|(v0.c0))))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY ((t1.c2 IN ()) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM t0, v0, t1 WHERE ((((((-1095721498, t0.c0, t1.c1))<((t0.c0, t1.c2, t1.c2))))>=(((x'')|(v0.c0))))) ORDER BY ((t1.c2 IN ()) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON (((((t1.c0)OR(t1.c0)))OR(t1.c2)) IN ()) INNER JOIN t1 ON (~ (CASE t1.c0  WHEN t0.c0 THEN t1.c1 WHEN v0.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c18 WHEN t1.c2 THEN t1.c18 WHEN t1.c18 THEN t0.c0 ELSE t1.c1 END)) WHERE (CAST(UNLIKELY(t1.c18) AS REAL)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (COALESCE(v0.c0, v0.c0, t1.c2, t1.c0, t0.c0, t1.c1, t0.c0, t1.c0)) AND (NULL))  NULLS FIRST, ((0.3234146782849102)IS(0.2400374100937669 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNLIKELY(t1.c18) AS REAL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (((((t1.c0)OR(t1.c0)))OR(t1.c2)) IN ()) INNER JOIN t1 ON (~ (CASE t1.c0  WHEN t0.c0 THEN t1.c1 WHEN v0.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c18 WHEN t1.c2 THEN t1.c18 WHEN t1.c18 THEN t0.c0 ELSE t1.c1 END)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (COALESCE(v0.c0, v0.c0, t1.c2, t1.c0, t0.c0, t1.c1, t0.c0, t1.c0)) AND (NULL))  NULLS FIRST, ((0.3234146782849102)IS(0.2400374100937669 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON (((((t1.c0)OR(t1.c0)))OR(t1.c2)) IN ()) INNER JOIN t1 ON (~ (CASE t1.c0  WHEN t0.c0 THEN t1.c1 WHEN v0.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c18 WHEN t1.c2 THEN t1.c18 WHEN t1.c18 THEN t0.c0 ELSE t1.c1 END)) WHERE (CAST(UNLIKELY(t1.c18) AS REAL)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (COALESCE(v0.c0, v0.c0, t1.c2, t1.c0, t0.c0, t1.c1, t0.c0, t1.c0)) AND (NULL))  NULLS FIRST, ((0.3234146782849102)IS(0.2400374100937669 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNLIKELY(t1.c18) AS REAL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (((((t1.c0)OR(t1.c0)))OR(t1.c2)) IN ()) INNER JOIN t1 ON (~ (CASE t1.c0  WHEN t0.c0 THEN t1.c1 WHEN v0.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c18 WHEN t1.c2 THEN t1.c18 WHEN t1.c18 THEN t0.c0 ELSE t1.c1 END)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (COALESCE(v0.c0, v0.c0, t1.c2, t1.c0, t0.c0, t1.c1, t0.c0, t1.c0)) AND (NULL))  NULLS FIRST, ((0.3234146782849102)IS(0.2400374100937669 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON (((((t1.c0)OR(t1.c0)))OR(t1.c2)) IN ()) INNER JOIN t1 ON (~ (CASE t1.c0  WHEN t0.c0 THEN t1.c1 WHEN v0.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c18 WHEN t1.c2 THEN t1.c18 WHEN t1.c18 THEN t0.c0 ELSE t1.c1 END)) WHERE (CAST(UNLIKELY(t1.c18) AS REAL)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (COALESCE(v0.c0, v0.c0, t1.c2, t1.c0, t0.c0, t1.c1, t0.c0, t1.c0)) AND (NULL))  NULLS FIRST, ((0.3234146782849102)IS(0.2400374100937669 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((((NOT (vt1.c0))))=((((vt1.c0)IS(vt1.c0)))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST('./wY璶OQ\n' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt1.c0))))==((((vt1.c0)IS(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST('./wY璶OQ\n' AS NUMERIC)))));
SELECT COUNT(*) FROM vt1 WHERE (((((NOT (vt1.c0))))=((((vt1.c0)IS(vt1.c0)))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST('./wY璶OQ\n' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt1.c0))))==((((vt1.c0)IS(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST('./wY璶OQ\n' AS NUMERIC)))));
SELECT COUNT(*) FROM vt1 WHERE (((((NOT (vt1.c0))))=((((vt1.c0)IS(vt1.c0)))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST('./wY璶OQ\n' AS NUMERIC))));
SELECT ALL * FROM t1, vt1, vt0, t0 WHERE (CAST(((t1.c2) NOT NULL) AS INTEGER)) ORDER BY LIKE(CAST(vt1.c0 AS TEXT), (~ (t1.c2)));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c2) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM t1, vt1, vt0, t0 ORDER BY LIKE(CAST(vt1.c0 AS TEXT), (~ (t1.c2))));
SELECT ALL * FROM t1, vt1, vt0, t0 WHERE (CAST(((t1.c2) NOT NULL) AS INTEGER)) ORDER BY LIKE(CAST(vt1.c0 AS TEXT), (~ (t1.c2)));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c2) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM t1, vt1, vt0, t0 ORDER BY LIKE(CAST(vt1.c0 AS TEXT), (~ (t1.c2))));
SELECT ALL * FROM t1, vt1, vt0, t0 WHERE (CAST(((t1.c2) NOT NULL) AS INTEGER)) ORDER BY LIKE(CAST(vt1.c0 AS TEXT), (~ (t1.c2)));
SELECT * FROM vt0, v0 INNER JOIN t0 ON 0.5002284643522142 RIGHT OUTER JOIN t1 ON CASE 0X3b2b47c1  WHEN t1.c18 THEN t1.c1 ELSE t1.c1 END COLLATE BINARY WHERE (((0.5450922368976248) IS FALSE)) ORDER BY (~ ((NULL IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((0.5450922368976248) IS FALSE)) IS TRUE)  as count FROM vt0, v0 INNER JOIN t0 ON 0.5002284643522142 RIGHT OUTER JOIN t1 ON CASE 0X3b2b47c1  WHEN t1.c18 THEN t1.c1 ELSE t1.c1 END COLLATE BINARY ORDER BY (~ ((NULL IN ()))) DESC);
SELECT * FROM vt0, v0 INNER JOIN t0 ON 0.5002284643522142 RIGHT OUTER JOIN t1 ON CASE 0X3b2b47c1  WHEN t1.c18 THEN t1.c1 ELSE t1.c1 END COLLATE BINARY WHERE (((0.5450922368976248) IS FALSE)) ORDER BY (~ ((NULL IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((0.5450922368976248) IS FALSE)) IS TRUE)  as count FROM vt0, v0 INNER JOIN t0 ON 0.5002284643522142 RIGHT OUTER JOIN t1 ON CASE 0X3b2b47c1  WHEN t1.c18 THEN t1.c1 ELSE t1.c1 END COLLATE BINARY ORDER BY (~ ((NULL IN ()))) DESC);
SELECT * FROM vt0, v0 INNER JOIN t0 ON 0.5002284643522142 RIGHT OUTER JOIN t1 ON CASE 0X3b2b47c1  WHEN t1.c18 THEN t1.c1 ELSE t1.c1 END COLLATE BINARY WHERE (((0.5450922368976248) IS FALSE)) ORDER BY (~ ((NULL IN ()))) DESC;
SELECT COUNT(*) FROM t1 WHERE (((CAST(0.10456333463336653 AS TEXT))IS NOT((((t1.c1)) BETWEEN ((NULL)) AND ((t1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.10456333463336653 AS TEXT))IS NOT((((t1.c1)) BETWEEN ((NULL)) AND ((t1.c2)))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((CAST(0.10456333463336653 AS TEXT))IS NOT((((t1.c1)) BETWEEN ((NULL)) AND ((t1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.10456333463336653 AS TEXT))IS NOT((((t1.c1)) BETWEEN ((NULL)) AND ((t1.c2)))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((CAST(0.10456333463336653 AS TEXT))IS NOT((((t1.c1)) BETWEEN ((NULL)) AND ((t1.c2))))));
SELECT COUNT(*) FROM vt1, v0 WHERE (((vt1.c0 COLLATE BINARY)<<(((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)<<(((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((vt1.c0 COLLATE BINARY)<<(((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)<<(((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((vt1.c0 COLLATE BINARY)<<(((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))));
SELECT ALL * FROM v0, vt1, vt0 WHERE (HEX(((v0.c0)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((v0.c0)<(vt1.c0)))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE (HEX(((v0.c0)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((v0.c0)<(vt1.c0)))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE (HEX(((v0.c0)<(vt1.c0))));
SELECT COUNT(*) FROM v0, vt1, vt0, t1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY (- (((((((((((((t1.c18)OR(v0.c0)))OR(t1.c18)))AND(t1.c1)))OR(t1.c0)))OR(v0.c0)))OR(v0.c0)))) DESC, (((((v0.c0 IN (t1.c2, vt0.c0)))AND((~ (NULL)))))OR(((v0.c0)OR(t1.c0)))), ((((vt1.c0) BETWEEN (vt1.c0) AND (t1.c18))) NOT BETWEEN ((v0.c0 IN (t1.c0))) AND (((((t1.c1)OR(t1.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 NOT INDEXED, vt1, vt0, t1 ORDER BY (- (((((((((((((t1.c18)OR(v0.c0)))OR(t1.c18)))AND(t1.c1)))OR(t1.c0)))OR(v0.c0)))OR(v0.c0)))) DESC, (((((v0.c0 IN (t1.c2, vt0.c0)))AND((~ (NULL)))))OR(((v0.c0)OR(t1.c0)))), ((((vt1.c0) BETWEEN (vt1.c0) AND (t1.c18))) NOT BETWEEN ((v0.c0 IN (t1.c0))) AND (((((t1.c1)OR(t1.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1, vt0, t1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY (- (((((((((((((t1.c18)OR(v0.c0)))OR(t1.c18)))AND(t1.c1)))OR(t1.c0)))OR(v0.c0)))OR(v0.c0)))) DESC, (((((v0.c0 IN (t1.c2, vt0.c0)))AND((~ (NULL)))))OR(((v0.c0)OR(t1.c0)))), ((((vt1.c0) BETWEEN (vt1.c0) AND (t1.c18))) NOT BETWEEN ((v0.c0 IN (t1.c0))) AND (((((t1.c1)OR(t1.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 NOT INDEXED, vt1, vt0, t1 ORDER BY (- (((((((((((((t1.c18)OR(v0.c0)))OR(t1.c18)))AND(t1.c1)))OR(t1.c0)))OR(v0.c0)))OR(v0.c0)))) DESC, (((((v0.c0 IN (t1.c2, vt0.c0)))AND((~ (NULL)))))OR(((v0.c0)OR(t1.c0)))), ((((vt1.c0) BETWEEN (vt1.c0) AND (t1.c18))) NOT BETWEEN ((v0.c0 IN (t1.c0))) AND (((((t1.c1)OR(t1.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1, vt0, t1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY (- (((((((((((((t1.c18)OR(v0.c0)))OR(t1.c18)))AND(t1.c1)))OR(t1.c0)))OR(v0.c0)))OR(v0.c0)))) DESC, (((((v0.c0 IN (t1.c2, vt0.c0)))AND((~ (NULL)))))OR(((v0.c0)OR(t1.c0)))), ((((vt1.c0) BETWEEN (vt1.c0) AND (t1.c18))) NOT BETWEEN ((v0.c0 IN (t1.c0))) AND (((((t1.c1)OR(t1.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, v0, vt0, t0 INDEXED BY i14 WHERE ((+ (x'bb0f')));
SELECT SUM(count) FROM (SELECT (((+ (x'bb0f'))) IS TRUE)  as count FROM t1, v0, vt0, t0 INDEXED BY i14);
SELECT ALL COUNT(*) FROM t1, v0, vt0, t0 INDEXED BY i14 WHERE ((+ (x'bb0f')));
SELECT SUM(count) FROM (SELECT (((+ (x'bb0f'))) IS TRUE)  as count FROM t1, v0, vt0, t0 INDEXED BY i14);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE CASE WHEN t1.c18 THEN t1.c0 ELSE t1.c2 END  WHEN CAST(t1.c18 AS TEXT) THEN NULL ELSE ((t1.c0)<>(t1.c18)) END) ORDER BY CAST(((t1.c1) ISNULL) AS REAL) DESC, CASE CASE WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END  WHEN TYPEOF(DISTINCT t1.c2) THEN x'8096' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t1.c18 THEN t1.c0 ELSE t1.c2 END  WHEN CAST(t1.c18 AS TEXT) THEN NULL ELSE ((t1.c0)!=(t1.c18)) END) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c1) ISNULL) AS REAL) DESC, CASE CASE WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END  WHEN TYPEOF(DISTINCT t1.c2) THEN x'8096' END  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE CASE WHEN t1.c18 THEN t1.c0 ELSE t1.c2 END  WHEN CAST(t1.c18 AS TEXT) THEN NULL ELSE ((t1.c0)<>(t1.c18)) END) ORDER BY CAST(((t1.c1) ISNULL) AS REAL) DESC, CASE CASE WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END  WHEN TYPEOF(DISTINCT t1.c2) THEN x'8096' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t1.c18 THEN t1.c0 ELSE t1.c2 END  WHEN CAST(t1.c18 AS TEXT) THEN NULL ELSE ((t1.c0)!=(t1.c18)) END) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c1) ISNULL) AS REAL) DESC, CASE CASE WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END  WHEN TYPEOF(DISTINCT t1.c2) THEN x'8096' END  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE CASE WHEN t1.c18 THEN t1.c0 ELSE t1.c2 END  WHEN CAST(t1.c18 AS TEXT) THEN NULL ELSE ((t1.c0)<>(t1.c18)) END) ORDER BY CAST(((t1.c1) ISNULL) AS REAL) DESC, CASE CASE WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END  WHEN TYPEOF(DISTINCT t1.c2) THEN x'8096' END  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE (((((t1.c0)IS(v0.c0)))<=(t1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)IS(v0.c0)))<=(t1.c2 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt0, v0);
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE (((((t1.c0)IS(v0.c0)))<=(t1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)IS(v0.c0)))<=(t1.c2 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt0, v0);
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE (((((t1.c0)IS(v0.c0)))<=(t1.c2 COLLATE BINARY)));
SELECT * FROM t1 WHERE (((((t1.c18)-(t1.c2)))GLOB(NULL)));
SELECT SUM(count) FROM (SELECT ((((((t1.c18)-(t1.c2)))GLOB(NULL))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c18)-(t1.c2)))GLOB(NULL)));
SELECT SUM(count) FROM (SELECT ((((((t1.c18)-(t1.c2)))GLOB(NULL))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c18)-(t1.c2)))GLOB(NULL)));
SELECT ALL COUNT(*) FROM t1, v0, t0, vt1 WHERE ((NOT (t1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t1, v0, t0, vt1);
SELECT ALL COUNT(*) FROM t1, v0, t0, vt1 WHERE ((NOT (t1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t1, v0, t0, vt1);
SELECT ALL COUNT(*) FROM t1, v0, t0, vt1 WHERE ((NOT (t1.c2)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, t1, v0, vt0, vt1 WHERE (CAST(CAST(t1.c1 AS NUMERIC) AS INTEGER)) ORDER BY ((((((t0.c0)OR(v0.c0)))OR(vt0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c1 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM t0, t1, v0, vt0, vt1 ORDER BY ((((((t0.c0)OR(v0.c0)))OR(vt0.c0))) ISNULL) ASC);
SELECT ALL COUNT(*) FROM t0, t1, v0, vt0, vt1 WHERE (CAST(CAST(t1.c1 AS NUMERIC) AS INTEGER)) ORDER BY ((((((t0.c0)OR(v0.c0)))OR(vt0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c1 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM t0, t1, v0, vt0, vt1 ORDER BY ((((((t0.c0)OR(v0.c0)))OR(vt0.c0))) ISNULL) ASC);
SELECT ALL COUNT(*) FROM t0, t1, v0, vt0, vt1 WHERE (CAST(CAST(t1.c1 AS NUMERIC) AS INTEGER)) ORDER BY ((((((t0.c0)OR(v0.c0)))OR(vt0.c0))) ISNULL) ASC;
SELECT ALL COUNT(*) FROM vt1, t1, v0 WHERE (((CAST(t1.c18 AS REAL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c18 AS REAL)) ISNULL)) IS TRUE)  as count FROM vt1, t1, v0);
SELECT ALL COUNT(*) FROM vt1, t1, v0 WHERE (((CAST(t1.c18 AS REAL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c18 AS REAL)) ISNULL)) IS TRUE)  as count FROM vt1, t1, v0);
SELECT ALL COUNT(*) FROM vt1, t1, v0 WHERE (((CAST(t1.c18 AS REAL)) ISNULL));
SELECT COUNT(*) FROM vt1, v0, t1 NOT INDEXED FULL OUTER JOIN t0 ON TYPEOF(json_valid(t1.c0)) WHERE (CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC)) ORDER BY CASE (NOT (v0.c0))  WHEN CASE WHEN t1.c1 THEN t0.c0 WHEN v0.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END THEN (t1.c0 IN ()) WHEN t1.c1 THEN ((t1.c1)-(t1.c18)) WHEN NULL THEN (((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c1))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0, t1 FULL OUTER JOIN t0 ON TYPEOF(json_valid(t1.c0)) ORDER BY CASE (NOT (v0.c0))  WHEN CASE WHEN t1.c1 THEN t0.c0 WHEN v0.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END THEN (t1.c0 IN ()) WHEN t1.c1 THEN ((t1.c1)-(t1.c18)) WHEN NULL THEN (((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c1))) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0, t1 NOT INDEXED FULL OUTER JOIN t0 ON TYPEOF(json_valid(t1.c0)) WHERE (CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC)) ORDER BY CASE (NOT (v0.c0))  WHEN CASE WHEN t1.c1 THEN t0.c0 WHEN v0.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END THEN (t1.c0 IN ()) WHEN t1.c1 THEN ((t1.c1)-(t1.c18)) WHEN NULL THEN (((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c1))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0, t1 FULL OUTER JOIN t0 ON TYPEOF(json_valid(t1.c0)) ORDER BY CASE (NOT (v0.c0))  WHEN CASE WHEN t1.c1 THEN t0.c0 WHEN v0.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END THEN (t1.c0 IN ()) WHEN t1.c1 THEN ((t1.c1)-(t1.c18)) WHEN NULL THEN (((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c1))) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0, t1 NOT INDEXED FULL OUTER JOIN t0 ON TYPEOF(json_valid(t1.c0)) WHERE (CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC)) ORDER BY CASE (NOT (v0.c0))  WHEN CASE WHEN t1.c1 THEN t0.c0 WHEN v0.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END THEN (t1.c0 IN ()) WHEN t1.c1 THEN ((t1.c1)-(t1.c18)) WHEN NULL THEN (((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c1))) END DESC  NULLS FIRST;
SELECT * FROM t0, t1, v0 WHERE (((((t1.c2) NOTNULL))&(x''))) ORDER BY CASE CASE NULL  WHEN v0.c0 THEN t0.c0 END  WHEN 0.8917700848421263 THEN ((t0.c0)<(v0.c0)) END ASC  NULLS LAST, ((CASE t1.c0  WHEN t1.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c1 WHEN '-1101093699' THEN t1.c1 END)>(((t1.c18) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOTNULL))&(x''))) IS TRUE)  as count FROM t0, t1, v0 ORDER BY CASE CASE NULL  WHEN v0.c0 THEN t0.c0 END  WHEN 0.8917700848421263 THEN ((t0.c0)<(v0.c0)) END ASC  NULLS LAST, ((CASE t1.c0  WHEN t1.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c1 WHEN '-1101093699' THEN t1.c1 END)>(((t1.c18) IS TRUE)))  NULLS FIRST);
SELECT * FROM t0, t1, v0 WHERE (((((t1.c2) NOTNULL))&(x''))) ORDER BY CASE CASE NULL  WHEN v0.c0 THEN t0.c0 END  WHEN 0.8917700848421263 THEN ((t0.c0)<(v0.c0)) END ASC  NULLS LAST, ((CASE t1.c0  WHEN t1.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c1 WHEN '-1101093699' THEN t1.c1 END)>(((t1.c18) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOTNULL))&(x''))) IS TRUE)  as count FROM t0, t1, v0 ORDER BY CASE CASE NULL  WHEN v0.c0 THEN t0.c0 END  WHEN 0.8917700848421263 THEN ((t0.c0)<(v0.c0)) END ASC  NULLS LAST, ((CASE t1.c0  WHEN t1.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c1 WHEN '-1101093699' THEN t1.c1 END)>(((t1.c18) IS TRUE)))  NULLS FIRST);
SELECT * FROM t0, t1, v0 WHERE (((((t1.c2) NOTNULL))&(x''))) ORDER BY CASE CASE NULL  WHEN v0.c0 THEN t0.c0 END  WHEN 0.8917700848421263 THEN ((t0.c0)<(v0.c0)) END ASC  NULLS LAST, ((CASE t1.c0  WHEN t1.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c1 WHEN '-1101093699' THEN t1.c1 END)>(((t1.c18) IS TRUE)))  NULLS FIRST;
SELECT ALL * FROM v0, t1, t0 INNER JOIN vt1 ON (((((t1.c0)) BETWEEN ((v0.c0)) AND ((t1.c2)))) IS FALSE) WHERE ((((((0X3bcd84c0)AND(t1.c18))))>((((t1.c2) BETWEEN (v0.c0) AND (t1.c0)))))) ORDER BY ((((t0.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (json(t1.c0)) AND (t1.c18 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((0X3bcd84c0)AND(t1.c18))))>((((t1.c2) BETWEEN (v0.c0) AND (t1.c0)))))) IS TRUE)  as count FROM v0, t1, t0 INNER JOIN vt1 ON (((((t1.c0)) BETWEEN ((v0.c0)) AND ((t1.c2)))) IS FALSE) ORDER BY ((((t0.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (json(t1.c0)) AND (t1.c18 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM v0, t1, t0 INNER JOIN vt1 ON (((((t1.c0)) BETWEEN ((v0.c0)) AND ((t1.c2)))) IS FALSE) WHERE ((((((0X3bcd84c0)AND(t1.c18))))>((((t1.c2) BETWEEN (v0.c0) AND (t1.c0)))))) ORDER BY ((((t0.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (json(t1.c0)) AND (t1.c18 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((0X3bcd84c0)AND(t1.c18))))>((((t1.c2) BETWEEN (v0.c0) AND (t1.c0)))))) IS TRUE)  as count FROM v0, t1, t0 INNER JOIN vt1 ON (((((t1.c0)) BETWEEN ((v0.c0)) AND ((t1.c2)))) IS FALSE) ORDER BY ((((t0.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (json(t1.c0)) AND (t1.c18 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM v0, t1, t0 INNER JOIN vt1 ON (((((t1.c0)) BETWEEN ((v0.c0)) AND ((t1.c2)))) IS FALSE) WHERE ((((((0X3bcd84c0)AND(t1.c18))))>((((t1.c2) BETWEEN (v0.c0) AND (t1.c0)))))) ORDER BY ((((t0.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (json(t1.c0)) AND (t1.c18 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0, t1 WHERE (((t1.c1 COLLATE RTRIM)&(((vt0.c0)>(t1.c18))))) ORDER BY CAST((((t1.c0))>((vt1.c0))) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1 COLLATE RTRIM)&(((vt0.c0)>(t1.c18))))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY CAST((((t1.c0))>((vt1.c0))) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, t1 WHERE (((t1.c1 COLLATE RTRIM)&(((vt0.c0)>(t1.c18))))) ORDER BY CAST((((t1.c0))>((vt1.c0))) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1 COLLATE RTRIM)&(((vt0.c0)>(t1.c18))))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY CAST((((t1.c0))>((vt1.c0))) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, t1 WHERE (((t1.c1 COLLATE RTRIM)&(((vt0.c0)>(t1.c18))))) ORDER BY CAST((((t1.c0))>((vt1.c0))) AS NUMERIC) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt1 WHERE (((((((NULL) NOTNULL))AND(CASE WHEN 0.2983421306980062 THEN v0.c0 END)))OR(((0.09314691119750818) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((NULL) NOTNULL))AND(CASE WHEN 0.2983421306980062 THEN v0.c0 END)))OR(((0.09314691119750818) IS FALSE)))) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (((((((NULL) NOTNULL))AND(CASE WHEN 0.2983421306980062 THEN v0.c0 END)))OR(((0.09314691119750818) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((NULL) NOTNULL))AND(CASE WHEN 0.2983421306980062 THEN v0.c0 END)))OR(((0.09314691119750818) IS FALSE)))) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (((((((NULL) NOTNULL))AND(CASE WHEN 0.2983421306980062 THEN v0.c0 END)))OR(((0.09314691119750818) IS FALSE))));
SELECT * FROM v0, vt0, vt1, t0 LEFT OUTER JOIN t1 ON CASE WHEN NULLIF(t1.c1, vt0.c0) THEN t1.c2 WHEN CASE WHEN t1.c2 THEN '69749508' END THEN ((t1.c2) NOTNULL) WHEN CASE vt0.c0  WHEN t1.c1 THEN t0.c0 END THEN ((((x'')AND(t1.c18)))AND(t1.c18)) END WHERE (((((((((json_object(t1.c0, vt0.c0))OR((t1.c0 IN ()))))AND((- (t1.c0)))))OR(CAST(0.24582482648779014 AS TEXT))))AND((((t1.c2))!=((NULL)))))) ORDER BY ((t1.c18) IS TRUE) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((json_object(t1.c0, vt0.c0))OR((t1.c0 IN ()))))AND((- (t1.c0)))))OR(CAST(0.24582482648779014 AS TEXT))))AND((((t1.c2))!=((NULL)))))) IS TRUE)  as count FROM v0, vt0, vt1, t0 LEFT OUTER JOIN t1 ON CASE WHEN NULLIF(t1.c1, vt0.c0) THEN t1.c2 WHEN CASE WHEN t1.c2 THEN '69749508' END THEN ((t1.c2) NOTNULL) WHEN CASE vt0.c0  WHEN t1.c1 THEN t0.c0 END THEN ((((x'')AND(t1.c18)))AND(t1.c18)) END ORDER BY ((t1.c18) IS TRUE) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM v0, vt0, vt1, t0 LEFT OUTER JOIN t1 ON CASE WHEN NULLIF(t1.c1, vt0.c0) THEN t1.c2 WHEN CASE WHEN t1.c2 THEN '69749508' END THEN ((t1.c2) NOTNULL) WHEN CASE vt0.c0  WHEN t1.c1 THEN t0.c0 END THEN ((((x'')AND(t1.c18)))AND(t1.c18)) END WHERE (((((((((json_object(t1.c0, vt0.c0))OR((t1.c0 IN ()))))AND((- (t1.c0)))))OR(CAST(0.24582482648779014 AS TEXT))))AND((((t1.c2))!=((NULL)))))) ORDER BY ((t1.c18) IS TRUE) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((json_object(t1.c0, vt0.c0))OR((t1.c0 IN ()))))AND((- (t1.c0)))))OR(CAST(0.24582482648779014 AS TEXT))))AND((((t1.c2))!=((NULL)))))) IS TRUE)  as count FROM v0, vt0, vt1, t0 LEFT OUTER JOIN t1 ON CASE WHEN NULLIF(t1.c1, vt0.c0) THEN t1.c2 WHEN CASE WHEN t1.c2 THEN '69749508' END THEN ((t1.c2) NOTNULL) WHEN CASE vt0.c0  WHEN t1.c1 THEN t0.c0 END THEN ((((x'')AND(t1.c18)))AND(t1.c18)) END ORDER BY ((t1.c18) IS TRUE) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM v0, vt0, vt1, t0 LEFT OUTER JOIN t1 ON CASE WHEN NULLIF(t1.c1, vt0.c0) THEN t1.c2 WHEN CASE WHEN t1.c2 THEN '69749508' END THEN ((t1.c2) NOTNULL) WHEN CASE vt0.c0  WHEN t1.c1 THEN t0.c0 END THEN ((((x'')AND(t1.c18)))AND(t1.c18)) END WHERE (((((((((json_object(t1.c0, vt0.c0))OR((t1.c0 IN ()))))AND((- (t1.c0)))))OR(CAST(0.24582482648779014 AS TEXT))))AND((((t1.c2))!=((NULL)))))) ORDER BY ((t1.c18) IS TRUE) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)<(-1.982790125E9)))-(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<(-1.982790125E9)))-(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)<(-1.982790125E9)))-(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<(-1.982790125E9)))-(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)<(-1.982790125E9)))-(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) ASC;
SELECT * FROM vt0, t0, v0, vt1, t1 WHERE (((((t1.c0)||(t1.c0)))IS NOT(NULL))) ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t1.c1)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)||(t1.c0)))IS NOT(NULL))) IS TRUE)  as count FROM vt0, t0, v0, vt1, t1 ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t1.c1)) AS INTEGER) ASC);
SELECT * FROM vt0, t0, v0, vt1, t1 WHERE (((((t1.c0)||(t1.c0)))IS NOT(NULL))) ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t1.c1)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)||(t1.c0)))IS NOT(NULL))) IS TRUE)  as count FROM vt0, t0, v0, vt1, t1 ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t1.c1)) AS INTEGER) ASC);
SELECT * FROM vt0, t0, v0, vt1, t1 WHERE (((((t1.c0)||(t1.c0)))IS NOT(NULL))) ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t1.c1)) AS INTEGER) ASC;
SELECT * FROM vt1, t1, v0, vt0, t0 WHERE ((0.7807011834013419 IN ()));
SELECT SUM(count) FROM (SELECT (((0.7807011834013419 IN ())) IS TRUE)  as count FROM vt1, t1, v0, vt0, t0);
SELECT * FROM vt1, t1, v0, vt0, t0 WHERE ((0.7807011834013419 IN ()));
SELECT SUM(count) FROM (SELECT (((0.7807011834013419 IN ())) IS TRUE)  as count FROM vt1, t1, v0, vt0, t0);
SELECT * FROM vt1, t1, v0, vt0, t0 WHERE ((0.7807011834013419 IN ()));
SELECT * FROM t0, t1 CROSS JOIN vt0 ON ((((t1.c0) IS TRUE))+(((NULL) NOT BETWEEN (t1.c18) AND (t1.c1)))) LEFT OUTER JOIN vt1 ON (((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((t1.c2))))OR(CASE WHEN t1.c2 THEN vt0.c0 WHEN x'56f0' THEN t0.c0 WHEN t1.c18 THEN t1.c2 ELSE t1.c18 END)))OR(((t1.c2) BETWEEN (t1.c2) AND (vt1.c0)))) FULL OUTER JOIN v0 ON CAST(((v0.c0)==(t0.c0)) AS TEXT) WHERE (TRIM(DISTINCT (~ (vt1.c0)), highlight(t0.c0, t0.c0, t1.c2, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (~ (vt1.c0)), highlight(t0.c0, t0.c0, t1.c2, vt1.c0))) IS TRUE)  as count FROM t0, t1 CROSS JOIN vt0 ON ((((t1.c0) IS TRUE))+(((NULL) NOT BETWEEN (t1.c18) AND (t1.c1)))) LEFT OUTER JOIN vt1 ON (((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((t1.c2))))OR(CASE WHEN t1.c2 THEN vt0.c0 WHEN x'56f0' THEN t0.c0 WHEN t1.c18 THEN t1.c2 ELSE t1.c18 END)))OR(((t1.c2) BETWEEN (t1.c2) AND (vt1.c0)))) FULL OUTER JOIN v0 ON CAST(((v0.c0)=(t0.c0)) AS TEXT));
SELECT * FROM t0, t1 CROSS JOIN vt0 ON ((((t1.c0) IS TRUE))+(((NULL) NOT BETWEEN (t1.c18) AND (t1.c1)))) LEFT OUTER JOIN vt1 ON (((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((t1.c2))))OR(CASE WHEN t1.c2 THEN vt0.c0 WHEN x'56f0' THEN t0.c0 WHEN t1.c18 THEN t1.c2 ELSE t1.c18 END)))OR(((t1.c2) BETWEEN (t1.c2) AND (vt1.c0)))) FULL OUTER JOIN v0 ON CAST(((v0.c0)==(t0.c0)) AS TEXT) WHERE (TRIM(DISTINCT (~ (vt1.c0)), highlight(t0.c0, t0.c0, t1.c2, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (~ (vt1.c0)), highlight(t0.c0, t0.c0, t1.c2, vt1.c0))) IS TRUE)  as count FROM t0, t1 CROSS JOIN vt0 ON ((((t1.c0) IS TRUE))+(((NULL) NOT BETWEEN (t1.c18) AND (t1.c1)))) LEFT OUTER JOIN vt1 ON (((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((t1.c2))))OR(CASE WHEN t1.c2 THEN vt0.c0 WHEN x'56f0' THEN t0.c0 WHEN t1.c18 THEN t1.c2 ELSE t1.c18 END)))OR(((t1.c2) BETWEEN (t1.c2) AND (vt1.c0)))) FULL OUTER JOIN v0 ON CAST(((v0.c0)=(t0.c0)) AS TEXT));
SELECT * FROM v0, vt1, t1, t0, vt0 WHERE (((- (t0.c0)) IN ((t1.c1 IN ()), (+ (t1.c18)), ((t1.c1)<<(t0.c0))))) ORDER BY (CAST(t1.c18 AS BLOB) IN (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (t0.c0)) IN ((t1.c1 IN ()), (+ (t1.c18)), ((t1.c1)<<(t0.c0))))) IS TRUE)  as count FROM v0, vt1, t1, t0, vt0 ORDER BY (CAST(t1.c18 AS BLOB) IN (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 END))  NULLS LAST);
SELECT * FROM v0, vt1, t1, t0, vt0 WHERE (((- (t0.c0)) IN ((t1.c1 IN ()), (+ (t1.c18)), ((t1.c1)<<(t0.c0))))) ORDER BY (CAST(t1.c18 AS BLOB) IN (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (t0.c0)) IN ((t1.c1 IN ()), (+ (t1.c18)), ((t1.c1)<<(t0.c0))))) IS TRUE)  as count FROM v0, vt1, t1, t0, vt0 ORDER BY (CAST(t1.c18 AS BLOB) IN (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 END))  NULLS LAST);
SELECT * FROM v0, vt1, t1, t0, vt0 WHERE (((- (t0.c0)) IN ((t1.c1 IN ()), (+ (t1.c18)), ((t1.c1)<<(t0.c0))))) ORDER BY (CAST(t1.c18 AS BLOB) IN (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE ((CASE WHEN v0.c0 THEN x'dbb1' WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END IN ((t0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c0 THEN x'dbb1' WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END IN ((t0.c0 IN (v0.c0))))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE ((CASE WHEN v0.c0 THEN x'dbb1' WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END IN ((t0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c0 THEN x'dbb1' WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END IN ((t0.c0 IN (v0.c0))))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE ((CASE WHEN v0.c0 THEN x'dbb1' WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END IN ((t0.c0 IN (v0.c0)))));
SELECT ALL * FROM v0, vt1, vt0, t0 WHERE ((~ (((t0.c0)IS NOT(vt1.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM v0, vt1, vt0, t0 ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) IS TRUE));
SELECT ALL * FROM v0, vt1, vt0, t0 WHERE ((~ (((t0.c0)IS NOT(vt1.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM v0, vt1, vt0, t0 ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) IS TRUE));
SELECT ALL * FROM v0, vt1, vt0, t0 WHERE ((~ (((t0.c0)IS NOT(vt1.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) IS TRUE);
SELECT COUNT(*) FROM v0, vt1, vt0, t1, t0 WHERE ((NOT (((t1.c1) NOT BETWEEN (t0.c0) AND (t1.c18)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c1) NOT BETWEEN (t0.c0) AND (t1.c18))))) IS TRUE)  as count FROM v0, vt1, vt0, t1, t0);
SELECT COUNT(*) FROM v0, vt1, vt0, t1, t0 WHERE ((NOT (((t1.c1) NOT BETWEEN (t0.c0) AND (t1.c18)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c1) NOT BETWEEN (t0.c0) AND (t1.c18))))) IS TRUE)  as count FROM v0, vt1, vt0, t1, t0);
SELECT COUNT(*) FROM v0, vt1, vt0, t1, t0 WHERE ((NOT (((t1.c1) NOT BETWEEN (t0.c0) AND (t1.c18)))));
SELECT COUNT(*) FROM t0, vt1 WHERE (((((x'2ab3')) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) IN ((- (vt1.c0)), ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'2ab3')) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) IN ((- (vt1.c0)), ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((x'2ab3')) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) IN ((- (vt1.c0)), ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'2ab3')) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) IN ((- (vt1.c0)), ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((x'2ab3')) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) IN ((- (vt1.c0)), ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE ((t1.c18) NOT BETWEEN (t1.c18) AND (t1.c1))  WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c18)) THEN ((((t1.c18)OR(t1.c2)))AND(t1.c2)) ELSE (((t1.c2, t1.c0, t1.c18)) BETWEEN ((t1.c18, t1.c0, t1.c1)) AND ((vt0.c0, t1.c18, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c18) NOT BETWEEN (t1.c18) AND (t1.c1))  WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c18)) THEN ((((t1.c18)OR(t1.c2)))AND(t1.c2)) ELSE (((t1.c2, t1.c0, t1.c18)) BETWEEN ((t1.c18, t1.c0, t1.c1)) AND ((vt0.c0, t1.c18, vt0.c0))) END) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE ((t1.c18) NOT BETWEEN (t1.c18) AND (t1.c1))  WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c18)) THEN ((((t1.c18)OR(t1.c2)))AND(t1.c2)) ELSE (((t1.c2, t1.c0, t1.c18)) BETWEEN ((t1.c18, t1.c0, t1.c1)) AND ((vt0.c0, t1.c18, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c18) NOT BETWEEN (t1.c18) AND (t1.c1))  WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c18)) THEN ((((t1.c18)OR(t1.c2)))AND(t1.c2)) ELSE (((t1.c2, t1.c0, t1.c18)) BETWEEN ((t1.c18, t1.c0, t1.c1)) AND ((vt0.c0, t1.c18, vt0.c0))) END) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE ((t1.c18) NOT BETWEEN (t1.c18) AND (t1.c1))  WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c18)) THEN ((((t1.c18)OR(t1.c2)))AND(t1.c2)) ELSE (((t1.c2, t1.c0, t1.c18)) BETWEEN ((t1.c18, t1.c0, t1.c1)) AND ((vt0.c0, t1.c18, vt0.c0))) END);
SELECT * FROM vt1, t1 WHERE ((((t1.c2) IS TRUE) IN ())) ORDER BY (NOT (ABS(DISTINCT 0.8572097057108713)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c2) IS TRUE) IN ())) IS TRUE)  as count FROM vt1, t1 ORDER BY (NOT (ABS(DISTINCT 0.8572097057108713)))  NULLS LAST);
SELECT * FROM vt1, t1 WHERE ((((t1.c2) IS TRUE) IN ())) ORDER BY (NOT (ABS(DISTINCT 0.8572097057108713)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c2) IS TRUE) IN ())) IS TRUE)  as count FROM vt1, t1 ORDER BY (NOT (ABS(DISTINCT 0.8572097057108713)))  NULLS LAST);
SELECT * FROM vt1, t1 WHERE ((((t1.c2) IS TRUE) IN ())) ORDER BY (NOT (ABS(DISTINCT 0.8572097057108713)))  NULLS LAST;
SELECT * FROM t0, vt1, vt0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS NOT((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS NOT((- (vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS NOT((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS NOT((- (vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS NOT((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (v0.c0);
SELECT COUNT(*) FROM v0, t0, t1, vt1, vt0 WHERE ((((((vt0.c0, t1.c1, t1.c0)) BETWEEN ((vt1.c0, 166124313, t0.c0)) AND ((v0.c0, vt0.c0, t0.c0)))) IS TRUE)) ORDER BY CAST(NULL AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, t1.c1, t1.c0)) BETWEEN ((vt1.c0, 166124313, t0.c0)) AND ((v0.c0, vt0.c0, t0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0, t0, t1, vt1, vt0 ORDER BY CAST(NULL AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, t1, vt1, vt0 WHERE ((((((vt0.c0, t1.c1, t1.c0)) BETWEEN ((vt1.c0, 166124313, t0.c0)) AND ((v0.c0, vt0.c0, t0.c0)))) IS TRUE)) ORDER BY CAST(NULL AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, t1.c1, t1.c0)) BETWEEN ((vt1.c0, 166124313, t0.c0)) AND ((v0.c0, vt0.c0, t0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0, t0, t1, vt1, vt0 ORDER BY CAST(NULL AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, t1, vt1, vt0 WHERE ((((((vt0.c0, t1.c1, t1.c0)) BETWEEN ((vt1.c0, 166124313, t0.c0)) AND ((v0.c0, vt0.c0, t0.c0)))) IS TRUE)) ORDER BY CAST(NULL AS INTEGER)  NULLS LAST;
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (json_insert(((vt1.c0)LIKE(t1.c1)), (((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))), (+ (t1.c0)))) ORDER BY (((vt1.c0, t1.c1, t1.c1)) NOT BETWEEN ((((t1.c2)<=(vt0.c0)), ((vt0.c0)>>(vt0.c0)), (((t1.c1)) BETWEEN ((vt0.c0)) AND ((t1.c0))))) AND ((UPPER(DISTINCT t1.c2), vt0.c0, CASE WHEN vt0.c0 THEN t1.c2 ELSE t1.c1 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((vt1.c0)LIKE(t1.c1)), (((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))), (+ (t1.c0)))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (((vt1.c0, t1.c1, t1.c1)) NOT BETWEEN ((((t1.c2)<=(vt0.c0)), ((vt0.c0)>>(vt0.c0)), (((t1.c1)) BETWEEN ((vt0.c0)) AND ((t1.c0))))) AND ((UPPER(DISTINCT t1.c2), vt0.c0, CASE WHEN vt0.c0 THEN t1.c2 ELSE t1.c1 END))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (json_insert(((vt1.c0)LIKE(t1.c1)), (((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))), (+ (t1.c0)))) ORDER BY (((vt1.c0, t1.c1, t1.c1)) NOT BETWEEN ((((t1.c2)<=(vt0.c0)), ((vt0.c0)>>(vt0.c0)), (((t1.c1)) BETWEEN ((vt0.c0)) AND ((t1.c0))))) AND ((UPPER(DISTINCT t1.c2), vt0.c0, CASE WHEN vt0.c0 THEN t1.c2 ELSE t1.c1 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((vt1.c0)LIKE(t1.c1)), (((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))), (+ (t1.c0)))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (((vt1.c0, t1.c1, t1.c1)) NOT BETWEEN ((((t1.c2)<=(vt0.c0)), ((vt0.c0)>>(vt0.c0)), (((t1.c1)) BETWEEN ((vt0.c0)) AND ((t1.c0))))) AND ((UPPER(DISTINCT t1.c2), vt0.c0, CASE WHEN vt0.c0 THEN t1.c2 ELSE t1.c1 END))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (json_insert(((vt1.c0)LIKE(t1.c1)), (((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))), (+ (t1.c0)))) ORDER BY (((vt1.c0, t1.c1, t1.c1)) NOT BETWEEN ((((t1.c2)<=(vt0.c0)), ((vt0.c0)>>(vt0.c0)), (((t1.c1)) BETWEEN ((vt0.c0)) AND ((t1.c0))))) AND ((UPPER(DISTINCT t1.c2), vt0.c0, CASE WHEN vt0.c0 THEN t1.c2 ELSE t1.c1 END))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE ((((''))<((((t1.c0)LIKE(t1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((''))<((((t1.c0)LIKE(t1.c1)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((''))<((((t1.c0)LIKE(t1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((''))<((((t1.c0)LIKE(t1.c1)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((''))<((((t1.c0)LIKE(t1.c1))))));
SELECT * FROM vt1, t1, t0, vt0, v0 WHERE ((((+ (t1.c18)))<(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((+ (t1.c18)))<(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt1, t1, t0, vt0, v0);
SELECT * FROM vt1, t1, t0, vt0, v0 WHERE ((((+ (t1.c18)))<(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((+ (t1.c18)))<(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt1, t1, t0, vt0, v0);
SELECT * FROM vt1, t1, t0, vt0, v0 WHERE ((((+ (t1.c18)))<(LOWER(vt0.c0))));
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c0)))GLOB(0xffffffff9d77cd3b)));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0)))GLOB(0xffffffff9d77cd3b))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c0)))GLOB(0xffffffff9d77cd3b)));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0)))GLOB(0xffffffff9d77cd3b))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c0)))GLOB(0xffffffff9d77cd3b)));
SELECT COUNT(*) FROM t0 WHERE ((~ (LIKELIHOOD(DISTINCT t0.c0, 0.2131873879125179))));
SELECT SUM(count) FROM (SELECT (((~ (LIKELIHOOD(DISTINCT t0.c0, 0.2131873879125179)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((~ (LIKELIHOOD(DISTINCT t0.c0, 0.2131873879125179))));
SELECT SUM(count) FROM (SELECT (((~ (LIKELIHOOD(DISTINCT t0.c0, 0.2131873879125179)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((~ (LIKELIHOOD(DISTINCT t0.c0, 0.2131873879125179))));
SELECT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c18 THEN t1.c18 WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c2 END)AND(NULL)))AND(((t1.c1)%(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t1.c1  WHEN t1.c18 THEN t1.c18 WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c2 END)AND(NULL)))AND(((t1.c1)%(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c18 THEN t1.c18 WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c2 END)AND(NULL)))AND(((t1.c1)%(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t1.c1  WHEN t1.c18 THEN t1.c18 WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c2 END)AND(NULL)))AND(((t1.c1)%(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c18 THEN t1.c18 WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c2 END)AND(NULL)))AND(((t1.c1)%(t1.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON ((((0.21227958184547646)<<(t1.c18))) ISNULL) WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY ((CASE WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c18 WHEN vt0.c0 THEN t1.c18 ELSE t1.c0 END) BETWEEN (((t1.c2)>(t1.c2))) AND (CASE WHEN t1.c2 THEN '84450272' END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON ((((0.21227958184547646)<<(t1.c18))) ISNULL) ORDER BY ((CASE WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c18 WHEN vt0.c0 THEN t1.c18 ELSE t1.c0 END) BETWEEN (((t1.c2)>(t1.c2))) AND (CASE WHEN t1.c2 THEN '84450272' END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON ((((0.21227958184547646)<<(t1.c18))) ISNULL) WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY ((CASE WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c18 WHEN vt0.c0 THEN t1.c18 ELSE t1.c0 END) BETWEEN (((t1.c2)>(t1.c2))) AND (CASE WHEN t1.c2 THEN '84450272' END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON ((((0.21227958184547646)<<(t1.c18))) ISNULL) ORDER BY ((CASE WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c18 WHEN vt0.c0 THEN t1.c18 ELSE t1.c0 END) BETWEEN (((t1.c2)>(t1.c2))) AND (CASE WHEN t1.c2 THEN '84450272' END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON ((((0.21227958184547646)<<(t1.c18))) ISNULL) WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY ((CASE WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c18 WHEN vt0.c0 THEN t1.c18 ELSE t1.c0 END) BETWEEN (((t1.c2)>(t1.c2))) AND (CASE WHEN t1.c2 THEN '84450272' END)) DESC  NULLS FIRST;
SELECT ALL * FROM t1, vt1 NOT INDEXED, vt0 WHERE ((((x'a5ac')) NOT BETWEEN (((((vt1.c0, t1.c18, t1.c0)) BETWEEN ((vt1.c0, t1.c0, x'')) AND ((vt0.c0, vt1.c0, vt0.c0))))) AND ((CASE vt1.c0  WHEN t1.c0 THEN t1.c18 WHEN vt0.c0 THEN t1.c2 WHEN t1.c18 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((x'a5ac')) NOT BETWEEN (((((vt1.c0, t1.c18, t1.c0)) BETWEEN ((vt1.c0, t1.c0, x'')) AND ((vt0.c0, vt1.c0, vt0.c0))))) AND ((CASE vt1.c0  WHEN t1.c0 THEN t1.c18 WHEN vt0.c0 THEN t1.c2 WHEN t1.c18 THEN vt1.c0 END)))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1 NOT INDEXED, vt0 WHERE ((((x'a5ac')) NOT BETWEEN (((((vt1.c0, t1.c18, t1.c0)) BETWEEN ((vt1.c0, t1.c0, x'')) AND ((vt0.c0, vt1.c0, vt0.c0))))) AND ((CASE vt1.c0  WHEN t1.c0 THEN t1.c18 WHEN vt0.c0 THEN t1.c2 WHEN t1.c18 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((x'a5ac')) NOT BETWEEN (((((vt1.c0, t1.c18, t1.c0)) BETWEEN ((vt1.c0, t1.c0, x'')) AND ((vt0.c0, vt1.c0, vt0.c0))))) AND ((CASE vt1.c0  WHEN t1.c0 THEN t1.c18 WHEN vt0.c0 THEN t1.c2 WHEN t1.c18 THEN vt1.c0 END)))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1 NOT INDEXED, vt0 WHERE ((((x'a5ac')) NOT BETWEEN (((((vt1.c0, t1.c18, t1.c0)) BETWEEN ((vt1.c0, t1.c0, x'')) AND ((vt0.c0, vt1.c0, vt0.c0))))) AND ((CASE vt1.c0  WHEN t1.c0 THEN t1.c18 WHEN vt0.c0 THEN t1.c2 WHEN t1.c18 THEN vt1.c0 END))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON (((NOT (t1.c2)))-(vt1.c0)) LEFT OUTER JOIN vt0 ON (((NOT (t1.c18))) IS FALSE) WHERE (((UPPER(vt0.c0))<<((((t1.c0))>((t1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt0.c0))<<((((t1.c0))>((t1.c1)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON (((NOT (t1.c2)))-(vt1.c0)) LEFT OUTER JOIN vt0 ON (((NOT (t1.c18))) IS FALSE));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON (((NOT (t1.c2)))-(vt1.c0)) LEFT OUTER JOIN vt0 ON (((NOT (t1.c18))) IS FALSE) WHERE (((UPPER(vt0.c0))<<((((t1.c0))>((t1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt0.c0))<<((((t1.c0))>((t1.c1)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON (((NOT (t1.c2)))-(vt1.c0)) LEFT OUTER JOIN vt0 ON (((NOT (t1.c18))) IS FALSE));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON (((NOT (t1.c2)))-(vt1.c0)) LEFT OUTER JOIN vt0 ON (((NOT (t1.c18))) IS FALSE) WHERE (((UPPER(vt0.c0))<<((((t1.c0))>((t1.c1))))));
SELECT ALL * FROM t1, t0, vt1 CROSS JOIN v0 ON CAST(((vt1.c0)*(t1.c0)) AS INTEGER) CROSS JOIN vt0 ON CAST(((t1.c2) NOT NULL) AS REAL) WHERE (vt0.c0) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c1) AND (vt0.c0)))GLOB((NOT (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t1, t0, vt1 CROSS JOIN v0 ON CAST(((vt1.c0)*(t1.c0)) AS INTEGER) CROSS JOIN vt0 ON CAST(((t1.c2) NOT NULL) AS REAL) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c1) AND (vt0.c0)))GLOB((NOT (vt1.c0)))) ASC);
SELECT ALL * FROM t1, t0, vt1 CROSS JOIN v0 ON CAST(((vt1.c0)*(t1.c0)) AS INTEGER) CROSS JOIN vt0 ON CAST(((t1.c2) NOT NULL) AS REAL) WHERE (vt0.c0) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c1) AND (vt0.c0)))GLOB((NOT (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t1, t0, vt1 CROSS JOIN v0 ON CAST(((vt1.c0)*(t1.c0)) AS INTEGER) CROSS JOIN vt0 ON CAST(((t1.c2) NOT NULL) AS REAL) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c1) AND (vt0.c0)))GLOB((NOT (vt1.c0)))) ASC);
SELECT ALL * FROM t1, t0, vt1 CROSS JOIN v0 ON CAST(((vt1.c0)*(t1.c0)) AS INTEGER) CROSS JOIN vt0 ON CAST(((t1.c2) NOT NULL) AS REAL) WHERE (vt0.c0) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c1) AND (vt0.c0)))GLOB((NOT (vt1.c0)))) ASC;
SELECT * FROM t0 WHERE (json_quote(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY (((t0.c0)>>(t0.c0)) IN (((t0.c0)||(t0.c0)))) DESC  NULLS LAST, CAST(CAST(t0.c0 AS INTEGER) AS REAL);
SELECT SUM(count) FROM (SELECT ((json_quote(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)>>(t0.c0)) IN (((t0.c0)||(t0.c0)))) DESC  NULLS LAST, CAST(CAST(t0.c0 AS INTEGER) AS REAL));
SELECT * FROM t0 WHERE (json_quote(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY (((t0.c0)>>(t0.c0)) IN (((t0.c0)||(t0.c0)))) DESC  NULLS LAST, CAST(CAST(t0.c0 AS INTEGER) AS REAL);
SELECT SUM(count) FROM (SELECT ((json_quote(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)>>(t0.c0)) IN (((t0.c0)||(t0.c0)))) DESC  NULLS LAST, CAST(CAST(t0.c0 AS INTEGER) AS REAL));
SELECT * FROM t0 WHERE (json_quote(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY (((t0.c0)>>(t0.c0)) IN (((t0.c0)||(t0.c0)))) DESC  NULLS LAST, CAST(CAST(t0.c0 AS INTEGER) AS REAL);
SELECT COUNT(*) FROM v0, t1, vt0 WHERE (NULL) ORDER BY (t1.c1 COLLATE NOCASE IN ()) ASC, CASE WHEN ((v0.c0) IS FALSE) THEN ((((t1.c18)OR(t1.c1)))AND(t1.c1)) ELSE (- (t1.c1)) END ASC, LAST_INSERT_ROWID() DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 NOT INDEXED, t1, vt0 ORDER BY (t1.c1 COLLATE NOCASE IN ()) ASC, CASE WHEN ((v0.c0) IS FALSE) THEN ((((t1.c18)OR(t1.c1)))AND(t1.c1)) ELSE (- (t1.c1)) END ASC, LAST_INSERT_ROWID() DESC);
SELECT COUNT(*) FROM v0, t1, vt0 WHERE (NULL) ORDER BY (t1.c1 COLLATE NOCASE IN ()) ASC, CASE WHEN ((v0.c0) IS FALSE) THEN ((((t1.c18)OR(t1.c1)))AND(t1.c1)) ELSE (- (t1.c1)) END ASC, LAST_INSERT_ROWID() DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 NOT INDEXED, t1, vt0 ORDER BY (t1.c1 COLLATE NOCASE IN ()) ASC, CASE WHEN ((v0.c0) IS FALSE) THEN ((((t1.c18)OR(t1.c1)))AND(t1.c1)) ELSE (- (t1.c1)) END ASC, LAST_INSERT_ROWID() DESC);
SELECT COUNT(*) FROM v0, t1, vt0 WHERE (NULL) ORDER BY (t1.c1 COLLATE NOCASE IN ()) ASC, CASE WHEN ((v0.c0) IS FALSE) THEN ((((t1.c18)OR(t1.c1)))AND(t1.c1)) ELSE (- (t1.c1)) END ASC, LAST_INSERT_ROWID() DESC;
SELECT COUNT(*) FROM t0, t1, v0, vt0, vt1 WHERE (((((((((((0Xfffffffffc9bc7b4)OR(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(t1.c2)))LIKE(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((0Xfffffffffc9bc7b4)OR(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(t1.c2)))LIKE(vt0.c0))) IS TRUE)  as count FROM t0, t1, v0, vt0, vt1);
SELECT COUNT(*) FROM t0, t1, v0, vt0, vt1 WHERE (((((((((((0Xfffffffffc9bc7b4)OR(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(t1.c2)))LIKE(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((0Xfffffffffc9bc7b4)OR(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(t1.c2)))LIKE(vt0.c0))) IS TRUE)  as count FROM t0, t1, v0, vt0, vt1);
SELECT COUNT(*) FROM t0, t1, v0, vt0, vt1 WHERE (((((((((((0Xfffffffffc9bc7b4)OR(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(t1.c2)))LIKE(vt0.c0)));
SELECT COUNT(*) FROM vt1, v0, vt0 NOT INDEXED, t0 WHERE (((((NULL)AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))AND((((v0.c0, v0.c0, t0.c0, vt0.c0, vt0.c0))==((x'', t0.c0, vt0.c0, v0.c0, t0.c0)))))) ORDER BY CAST('0.2933368334111055' AS TEXT) ASC  NULLS LAST, 0.9482317889959662  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))AND((((v0.c0, v0.c0, t0.c0, vt0.c0, vt0.c0))=((x'', t0.c0, vt0.c0, v0.c0, t0.c0)))))) IS TRUE)  as count FROM vt1, v0, vt0, t0 ORDER BY CAST('0.2933368334111055' AS TEXT) ASC  NULLS LAST, 0.9482317889959662  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0, vt0 NOT INDEXED, t0 WHERE (((((NULL)AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))AND((((v0.c0, v0.c0, t0.c0, vt0.c0, vt0.c0))==((x'', t0.c0, vt0.c0, v0.c0, t0.c0)))))) ORDER BY CAST('0.2933368334111055' AS TEXT) ASC  NULLS LAST, 0.9482317889959662  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))AND((((v0.c0, v0.c0, t0.c0, vt0.c0, vt0.c0))=((x'', t0.c0, vt0.c0, v0.c0, t0.c0)))))) IS TRUE)  as count FROM vt1, v0, vt0, t0 ORDER BY CAST('0.2933368334111055' AS TEXT) ASC  NULLS LAST, 0.9482317889959662  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0, vt0 NOT INDEXED, t0 WHERE (((((NULL)AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))AND((((v0.c0, v0.c0, t0.c0, vt0.c0, vt0.c0))==((x'', t0.c0, vt0.c0, v0.c0, t0.c0)))))) ORDER BY CAST('0.2933368334111055' AS TEXT) ASC  NULLS LAST, 0.9482317889959662  NULLS FIRST;
SELECT * FROM vt1, v0, vt0 LEFT OUTER JOIN t1 ON (((+ (vt1.c0)))IS NOT(vt0.c0 COLLATE NOCASE)) WHERE (COALESCE(DISTINCT (t1.c0 IN ()), CAST(vt1.c0 AS BLOB), CASE WHEN t1.c2 THEN t1.c2 ELSE vt1.c0 END, ((t1.c18) ISNULL))) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))IS NOT(((t1.c18)*(vt0.c0)))), (((((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) BETWEEN (((((((((x'')OR(t1.c1)))AND(x'')))AND(vt0.c0)))AND(t1.c18))) AND (((t1.c2)IS(t1.c18)))), ((((((((((v0.c0)AND(t1.c18)))OR(t1.c2)))AND(t1.c2)))OR(t1.c1)))=(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (t1.c0 IN ()), CAST(vt1.c0 AS BLOB), CASE WHEN t1.c2 THEN t1.c2 ELSE vt1.c0 END, ((t1.c18) ISNULL))) IS TRUE)  as count FROM vt1, v0, vt0 LEFT OUTER JOIN t1 ON (((+ (vt1.c0)))IS NOT(vt0.c0 COLLATE NOCASE)) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))IS NOT(((t1.c18)*(vt0.c0)))), (((((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) BETWEEN (((((((((x'')OR(t1.c1)))AND(x'')))AND(vt0.c0)))AND(t1.c18))) AND (((t1.c2)IS(t1.c18)))), ((((((((((v0.c0)AND(t1.c18)))OR(t1.c2)))AND(t1.c2)))OR(t1.c1)))==(NULL)) DESC  NULLS LAST);
SELECT * FROM vt1, v0, vt0 LEFT OUTER JOIN t1 ON (((+ (vt1.c0)))IS NOT(vt0.c0 COLLATE NOCASE)) WHERE (COALESCE(DISTINCT (t1.c0 IN ()), CAST(vt1.c0 AS BLOB), CASE WHEN t1.c2 THEN t1.c2 ELSE vt1.c0 END, ((t1.c18) ISNULL))) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))IS NOT(((t1.c18)*(vt0.c0)))), (((((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) BETWEEN (((((((((x'')OR(t1.c1)))AND(x'')))AND(vt0.c0)))AND(t1.c18))) AND (((t1.c2)IS(t1.c18)))), ((((((((((v0.c0)AND(t1.c18)))OR(t1.c2)))AND(t1.c2)))OR(t1.c1)))=(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (t1.c0 IN ()), CAST(vt1.c0 AS BLOB), CASE WHEN t1.c2 THEN t1.c2 ELSE vt1.c0 END, ((t1.c18) ISNULL))) IS TRUE)  as count FROM vt1, v0, vt0 LEFT OUTER JOIN t1 ON (((+ (vt1.c0)))IS NOT(vt0.c0 COLLATE NOCASE)) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))IS NOT(((t1.c18)*(vt0.c0)))), (((((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) BETWEEN (((((((((x'')OR(t1.c1)))AND(x'')))AND(vt0.c0)))AND(t1.c18))) AND (((t1.c2)IS(t1.c18)))), ((((((((((v0.c0)AND(t1.c18)))OR(t1.c2)))AND(t1.c2)))OR(t1.c1)))==(NULL)) DESC  NULLS LAST);
SELECT * FROM vt1, v0, vt0 LEFT OUTER JOIN t1 ON (((+ (vt1.c0)))IS NOT(vt0.c0 COLLATE NOCASE)) WHERE (COALESCE(DISTINCT (t1.c0 IN ()), CAST(vt1.c0 AS BLOB), CASE WHEN t1.c2 THEN t1.c2 ELSE vt1.c0 END, ((t1.c18) ISNULL))) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))IS NOT(((t1.c18)*(vt0.c0)))), (((((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) BETWEEN (((((((((x'')OR(t1.c1)))AND(x'')))AND(vt0.c0)))AND(t1.c18))) AND (((t1.c2)IS(t1.c18)))), ((((((((((v0.c0)AND(t1.c18)))OR(t1.c2)))AND(t1.c2)))OR(t1.c1)))=(NULL)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM t0, t1 WHERE ((((((((((((((((t0.c0))<=((t1.c18))))OR(((t1.c0) ISNULL))))AND((+ (t1.c0)))))OR(((-451998100) ISNULL))))OR((((t1.c18))>((t0.c0))))))OR((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c18))))))OR(CAST(t1.c18 AS BLOB)))) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((t0.c0))<=((t1.c18))))OR(((t1.c0) ISNULL))))AND((+ (t1.c0)))))OR(((-451998100) ISNULL))))OR((((t1.c18))>((t0.c0))))))OR((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c18))))))OR(CAST(t1.c18 AS BLOB)))) IS TRUE)  as count FROM t0, t1 ORDER BY x'' ASC  NULLS LAST);
SELECT ALL * FROM t0, t1 WHERE ((((((((((((((((t0.c0))<=((t1.c18))))OR(((t1.c0) ISNULL))))AND((+ (t1.c0)))))OR(((-451998100) ISNULL))))OR((((t1.c18))>((t0.c0))))))OR((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c18))))))OR(CAST(t1.c18 AS BLOB)))) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((t0.c0))<=((t1.c18))))OR(((t1.c0) ISNULL))))AND((+ (t1.c0)))))OR(((-451998100) ISNULL))))OR((((t1.c18))>((t0.c0))))))OR((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c18))))))OR(CAST(t1.c18 AS BLOB)))) IS TRUE)  as count FROM t0, t1 ORDER BY x'' ASC  NULLS LAST);
SELECT ALL * FROM t0, t1 WHERE ((((((((((((((((t0.c0))<=((t1.c18))))OR(((t1.c0) ISNULL))))AND((+ (t1.c0)))))OR(((-451998100) ISNULL))))OR((((t1.c18))>((t0.c0))))))OR((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c18))))))OR(CAST(t1.c18 AS BLOB)))) ORDER BY x'' ASC  NULLS LAST;
SELECT * FROM t1, vt0, t0, v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN ((t1.c1) NOT BETWEEN (0xffffffffb824e721) AND (t1.c2)) THEN ((((t0.c0)OR(t1.c18)))OR(t1.c2)) ELSE (((t1.c1))<((t1.c1))) END) ORDER BY (((~ (vt0.c0)))<(QUOTE(t1.c18))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c0 AS INTEGER)  WHEN ((t1.c1) NOT BETWEEN (0Xffffffffb824e721) AND (t1.c2)) THEN ((((t0.c0)OR(t1.c18)))OR(t1.c2)) ELSE (((t1.c1))<((t1.c1))) END) IS TRUE)  as count FROM t1, vt0, t0, v0 ORDER BY (((~ (vt0.c0)))<(QUOTE(t1.c18))) ASC);
SELECT * FROM t1, vt0, t0, v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN ((t1.c1) NOT BETWEEN (0xffffffffb824e721) AND (t1.c2)) THEN ((((t0.c0)OR(t1.c18)))OR(t1.c2)) ELSE (((t1.c1))<((t1.c1))) END) ORDER BY (((~ (vt0.c0)))<(QUOTE(t1.c18))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c0 AS INTEGER)  WHEN ((t1.c1) NOT BETWEEN (0Xffffffffb824e721) AND (t1.c2)) THEN ((((t0.c0)OR(t1.c18)))OR(t1.c2)) ELSE (((t1.c1))<((t1.c1))) END) IS TRUE)  as count FROM t1, vt0, t0, v0 ORDER BY (((~ (vt0.c0)))<(QUOTE(t1.c18))) ASC);
SELECT * FROM t1, vt0, t0, v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN ((t1.c1) NOT BETWEEN (0xffffffffb824e721) AND (t1.c2)) THEN ((((t0.c0)OR(t1.c18)))OR(t1.c2)) ELSE (((t1.c1))<((t1.c1))) END) ORDER BY (((~ (vt0.c0)))<(QUOTE(t1.c18))) ASC;
SELECT ALL * FROM v0, vt1 WHERE (v0.c0) ORDER BY ((vt1.c0)GLOB(CAST(x'' AS INTEGER))), (((x'' IN ()))*(vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt1 ORDER BY ((vt1.c0)GLOB(CAST(x'' AS INTEGER))), (((x'' IN ()))*(vt1.c0 COLLATE BINARY)));
SELECT ALL * FROM v0, vt1 WHERE (v0.c0) ORDER BY ((vt1.c0)GLOB(CAST(x'' AS INTEGER))), (((x'' IN ()))*(vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt1 ORDER BY ((vt1.c0)GLOB(CAST(x'' AS INTEGER))), (((x'' IN ()))*(vt1.c0 COLLATE BINARY)));
SELECT ALL * FROM v0, vt1 WHERE (v0.c0) ORDER BY ((vt1.c0)GLOB(CAST(x'' AS INTEGER))), (((x'' IN ()))*(vt1.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM v0, vt0, t0 INDEXED BY i96 LEFT OUTER JOIN t1 ON (((((((((t1.c2)AND(t1.c0)))AND(t1.c2)))OR(v0.c0)))OR(v0.c0)) IN ()) WHERE ((((((v0.c0, v0.c0, vt0.c0))<((t1.c18, v0.c0, t1.c1))))IS NOT((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, vt0.c0))<((t1.c18, v0.c0, t1.c1))))IS NOT((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0, t0 INDEXED BY i96 LEFT OUTER JOIN t1 ON (((((((((t1.c2)AND(t1.c0)))AND(t1.c2)))OR(v0.c0)))OR(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0, t0 INDEXED BY i96 LEFT OUTER JOIN t1 ON (((((((((t1.c2)AND(t1.c0)))AND(t1.c2)))OR(v0.c0)))OR(v0.c0)) IN ()) WHERE ((((((v0.c0, v0.c0, vt0.c0))<((t1.c18, v0.c0, t1.c1))))IS NOT((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, vt0.c0))<((t1.c18, v0.c0, t1.c1))))IS NOT((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0, t0 INDEXED BY i96 LEFT OUTER JOIN t1 ON (((((((((t1.c2)AND(t1.c0)))AND(t1.c2)))OR(v0.c0)))OR(v0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, v0, t0, vt1, t1 WHERE (vt0.c0) ORDER BY ((-1724934177)-(-1e500))  NULLS FIRST, ((((CAST(NULL AS NUMERIC))OR(t1.c2 COLLATE NOCASE)))AND(t1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, t0, vt1, t1 ORDER BY ((-1724934177)-(-1e500))  NULLS FIRST, ((((CAST(NULL AS NUMERIC))OR(t1.c2 COLLATE NOCASE)))AND(t1.c1))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, t0, vt1, t1 WHERE (vt0.c0) ORDER BY ((-1724934177)-(-1e500))  NULLS FIRST, ((((CAST(NULL AS NUMERIC))OR(t1.c2 COLLATE NOCASE)))AND(t1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, t0, vt1, t1 ORDER BY ((-1724934177)-(-1e500))  NULLS FIRST, ((((CAST(NULL AS NUMERIC))OR(t1.c2 COLLATE NOCASE)))AND(t1.c1))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, t0, vt1, t1 WHERE (vt0.c0) ORDER BY ((-1724934177)-(-1e500))  NULLS FIRST, ((((CAST(NULL AS NUMERIC))OR(t1.c2 COLLATE NOCASE)))AND(t1.c1))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, t0, vt1 WHERE (CAST(LAST_INSERT_ROWID() AS INTEGER)) ORDER BY CAST(vt1.c0 AS REAL) ASC  NULLS LAST, (- (t0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST(LAST_INSERT_ROWID() AS INTEGER)) IS TRUE)  as count FROM v0, vt0, t0 NOT INDEXED, vt1 ORDER BY CAST(vt1.c0 AS REAL) ASC  NULLS LAST, (- (t0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt0, t0, vt1 WHERE (CAST(LAST_INSERT_ROWID() AS INTEGER)) ORDER BY CAST(vt1.c0 AS REAL) ASC  NULLS LAST, (- (t0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST(LAST_INSERT_ROWID() AS INTEGER)) IS TRUE)  as count FROM v0, vt0, t0 NOT INDEXED, vt1 ORDER BY CAST(vt1.c0 AS REAL) ASC  NULLS LAST, (- (t0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt0, t0, vt1 WHERE (CAST(LAST_INSERT_ROWID() AS INTEGER)) ORDER BY CAST(vt1.c0 AS REAL) ASC  NULLS LAST, (- (t0.c0)) COLLATE RTRIM;
SELECT ALL * FROM t0, vt0, v0 WHERE ((+ (((((v0.c0)AND(x'3e22')))AND(t0.c0))))) ORDER BY (((((v0.c0)AND(x'')))OR(v0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((v0.c0)AND(x'3e22')))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((((v0.c0)AND(x'')))OR(v0.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, v0 WHERE ((+ (((((v0.c0)AND(x'3e22')))AND(t0.c0))))) ORDER BY (((((v0.c0)AND(x'')))OR(v0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((v0.c0)AND(x'3e22')))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((((v0.c0)AND(x'')))OR(v0.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, v0 WHERE ((+ (((((v0.c0)AND(x'3e22')))AND(t0.c0))))) ORDER BY (((((v0.c0)AND(x'')))OR(v0.c0)) IN ()) DESC  NULLS LAST;
SELECT * FROM vt1, t1, t0, vt0, v0 WHERE (CASE WHEN t0.c0 THEN 0.5870307006151554 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 THEN 0.5870307006151554 END) IS TRUE)  as count FROM vt1, t1, t0, vt0, v0);
SELECT * FROM vt1, t1, t0, vt0, v0 WHERE (CASE WHEN t0.c0 THEN 0.5870307006151554 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 THEN 0.5870307006151554 END) IS TRUE)  as count FROM vt1, t1, t0, vt0, v0);
SELECT * FROM vt1, t1, t0, vt0, v0 WHERE (CASE WHEN t0.c0 THEN 0.5870307006151554 END);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)*(vt1.c0)))OR(((x'ee3d')<(1e500)))))AND(((vt1.c0) NOTNULL))) DESC, ((((vt1.c0) ISNULL)) NOT BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (((vt1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)*(vt1.c0)))OR(((x'ee3d')<(1e500)))))AND(((vt1.c0) NOTNULL))) DESC, ((((vt1.c0) ISNULL)) NOT BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (((vt1.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)*(vt1.c0)))OR(((x'ee3d')<(1e500)))))AND(((vt1.c0) NOTNULL))) DESC, ((((vt1.c0) ISNULL)) NOT BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (((vt1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)*(vt1.c0)))OR(((x'ee3d')<(1e500)))))AND(((vt1.c0) NOTNULL))) DESC, ((((vt1.c0) ISNULL)) NOT BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (((vt1.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)*(vt1.c0)))OR(((x'ee3d')<(1e500)))))AND(((vt1.c0) NOTNULL))) DESC, ((((vt1.c0) ISNULL)) NOT BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (((vt1.c0) IS TRUE)));
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN v0 ON CAST(((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)) AS NUMERIC) CROSS JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) IS FALSE))) WHERE (vt0.c0) ORDER BY ((((v0.c0) BETWEEN (vt1.c0) AND (NULL))) NOTNULL), QUOTE(CAST(t0.c0 AS TEXT)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, t0 INNER JOIN v0 ON CAST(((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)) AS NUMERIC) CROSS JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) IS FALSE))) ORDER BY ((((v0.c0) BETWEEN (vt1.c0) AND (NULL))) NOTNULL), QUOTE(CAST(t0.c0 AS TEXT)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN v0 ON CAST(((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)) AS NUMERIC) CROSS JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) IS FALSE))) WHERE (vt0.c0) ORDER BY ((((v0.c0) BETWEEN (vt1.c0) AND (NULL))) NOTNULL), QUOTE(CAST(t0.c0 AS TEXT)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, t0 INNER JOIN v0 ON CAST(((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)) AS NUMERIC) CROSS JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) IS FALSE))) ORDER BY ((((v0.c0) BETWEEN (vt1.c0) AND (NULL))) NOTNULL), QUOTE(CAST(t0.c0 AS TEXT)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN v0 ON CAST(((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)) AS NUMERIC) CROSS JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) IS FALSE))) WHERE (vt0.c0) ORDER BY ((((v0.c0) BETWEEN (vt1.c0) AND (NULL))) NOTNULL), QUOTE(CAST(t0.c0 AS TEXT)) ASC  NULLS FIRST;
SELECT ALL * FROM t1, v0 WHERE (((NULLIF(t1.c1, v0.c0))<>(t1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t1.c1, v0.c0))!=(t1.c1))) IS TRUE)  as count FROM t1, v0);
SELECT ALL * FROM t1, v0 WHERE (((NULLIF(t1.c1, v0.c0))<>(t1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t1.c1, v0.c0))!=(t1.c1))) IS TRUE)  as count FROM t1, v0);
SELECT ALL * FROM t1, v0 WHERE (((NULLIF(t1.c1, v0.c0))<>(t1.c1)));
SELECT ALL * FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM t1, v0, vt1 WHERE (LIKELY(LOWER(t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(LOWER(t1.c0))) IS TRUE)  as count FROM t1, v0, vt1);
SELECT ALL COUNT(*) FROM t1, v0, vt1 WHERE (LIKELY(LOWER(t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(LOWER(t1.c0))) IS TRUE)  as count FROM t1, v0, vt1);
SELECT ALL COUNT(*) FROM t1, v0, vt1 WHERE (LIKELY(LOWER(t1.c0)));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON ((((vt0.c0)>>(vt1.c0))) NOT BETWEEN (CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 END) AND (vt0.c0)) RIGHT OUTER JOIN t1 ON CAST(((vt1.c0) NOT BETWEEN ('') AND (vt1.c0)) AS INTEGER) LEFT OUTER JOIN vt1 ON ((vt0.c0)>(((((t1.c2)OR(v0.c0)))AND(t1.c1)))) RIGHT OUTER JOIN vt0 ON ((((t1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((vt1.c0 IN (t1.c2, v0.c0))) AND (NULL)) WHERE (LIKELY(t1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(t1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((((vt0.c0)>>(vt1.c0))) NOT BETWEEN (CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 END) AND (vt0.c0)) RIGHT OUTER JOIN t1 ON CAST(((vt1.c0) NOT BETWEEN ('') AND (vt1.c0)) AS INTEGER) LEFT OUTER JOIN vt1 ON ((vt0.c0)>(((((t1.c2)OR(v0.c0)))AND(t1.c1)))) RIGHT OUTER JOIN vt0 ON ((((t1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((vt1.c0 IN (t1.c2, v0.c0))) AND (NULL)));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON ((((vt0.c0)>>(vt1.c0))) NOT BETWEEN (CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 END) AND (vt0.c0)) RIGHT OUTER JOIN t1 ON CAST(((vt1.c0) NOT BETWEEN ('') AND (vt1.c0)) AS INTEGER) LEFT OUTER JOIN vt1 ON ((vt0.c0)>(((((t1.c2)OR(v0.c0)))AND(t1.c1)))) RIGHT OUTER JOIN vt0 ON ((((t1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((vt1.c0 IN (t1.c2, v0.c0))) AND (NULL)) WHERE (LIKELY(t1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(t1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((((vt0.c0)>>(vt1.c0))) NOT BETWEEN (CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 END) AND (vt0.c0)) RIGHT OUTER JOIN t1 ON CAST(((vt1.c0) NOT BETWEEN ('') AND (vt1.c0)) AS INTEGER) LEFT OUTER JOIN vt1 ON ((vt0.c0)>(((((t1.c2)OR(v0.c0)))AND(t1.c1)))) RIGHT OUTER JOIN vt0 ON ((((t1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((vt1.c0 IN (t1.c2, v0.c0))) AND (NULL)));
SELECT ALL * FROM vt1, t1, v0 WHERE (((((NULL)OR(CASE vt1.c0  WHEN v0.c0 THEN t1.c2 WHEN vt1.c0 THEN '{쩍' WHEN v0.c0 THEN 0.24333949784607756 WHEN vt1.c0 THEN v0.c0 WHEN t1.c2 THEN 0.5051772513561228 ELSE t1.c2 END)))AND(((vt1.c0)LIKE(t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(CASE vt1.c0  WHEN v0.c0 THEN t1.c2 WHEN vt1.c0 THEN '{쩍' WHEN v0.c0 THEN 0.24333949784607756 WHEN vt1.c0 THEN v0.c0 WHEN t1.c2 THEN 0.5051772513561228 ELSE t1.c2 END)))AND(((vt1.c0)LIKE(t1.c2))))) IS TRUE)  as count FROM vt1, t1, v0);
SELECT ALL * FROM vt1, t1, v0 WHERE (((((NULL)OR(CASE vt1.c0  WHEN v0.c0 THEN t1.c2 WHEN vt1.c0 THEN '{쩍' WHEN v0.c0 THEN 0.24333949784607756 WHEN vt1.c0 THEN v0.c0 WHEN t1.c2 THEN 0.5051772513561228 ELSE t1.c2 END)))AND(((vt1.c0)LIKE(t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(CASE vt1.c0  WHEN v0.c0 THEN t1.c2 WHEN vt1.c0 THEN '{쩍' WHEN v0.c0 THEN 0.24333949784607756 WHEN vt1.c0 THEN v0.c0 WHEN t1.c2 THEN 0.5051772513561228 ELSE t1.c2 END)))AND(((vt1.c0)LIKE(t1.c2))))) IS TRUE)  as count FROM vt1, t1, v0);
SELECT ALL * FROM vt1, t1, v0 WHERE (((((NULL)OR(CASE vt1.c0  WHEN v0.c0 THEN t1.c2 WHEN vt1.c0 THEN '{쩍' WHEN v0.c0 THEN 0.24333949784607756 WHEN vt1.c0 THEN v0.c0 WHEN t1.c2 THEN 0.5051772513561228 ELSE t1.c2 END)))AND(((vt1.c0)LIKE(t1.c2)))));
SELECT * FROM vt1, v0, t1 WHERE (CAST(((((((((t1.c2)OR(t1.c1)))AND(x'')))OR(vt1.c0)))OR(996690183)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t1.c2)OR(t1.c1)))AND(x'')))OR(vt1.c0)))OR(996690183)) AS BLOB)) IS TRUE)  as count FROM vt1, v0, t1);
SELECT * FROM vt1, v0, t1 WHERE (CAST(((((((((t1.c2)OR(t1.c1)))AND(x'')))OR(vt1.c0)))OR(996690183)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t1.c2)OR(t1.c1)))AND(x'')))OR(vt1.c0)))OR(996690183)) AS BLOB)) IS TRUE)  as count FROM vt1, v0, t1);
SELECT * FROM vt1, v0, t1 WHERE (CAST(((((((((t1.c2)OR(t1.c1)))AND(x'')))OR(vt1.c0)))OR(996690183)) AS BLOB));
SELECT ALL * FROM vt1, vt0 CROSS JOIN t0 ON CASE ((vt0.c0)GLOB(vt0.c0))  WHEN ((((((((((((vt1.c0)OR(t0.c0)))OR('-178517194')))OR(vt1.c0)))AND(t1.c1)))AND('1815377079')))AND(t1.c2)) THEN CASE t1.c2  WHEN vt1.c0 THEN NULL WHEN t1.c2 THEN vt0.c0 WHEN t1.c1 THEN 0.8375454659191974 END WHEN ((t1.c2) NOT NULL) THEN x'd1e2' WHEN CAST(vt0.c0 AS TEXT) THEN vt1.c0 COLLATE BINARY ELSE (((vt1.c0))=((t1.c1))) END INNER JOIN t1 ON t0.c0 WHERE (CASE t1.c18 COLLATE NOCASE  WHEN vt1.c0 COLLATE NOCASE THEN ((('n'))>((vt1.c0))) END) ORDER BY '1930078332' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c18 COLLATE NOCASE  WHEN vt1.c0 COLLATE NOCASE THEN ((('n'))>((vt1.c0))) END) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON CASE ((vt0.c0)GLOB(vt0.c0))  WHEN ((((((((((((vt1.c0)OR(t0.c0)))OR('-178517194')))OR(vt1.c0)))AND(t1.c1)))AND('1815377079')))AND(t1.c2)) THEN CASE t1.c2  WHEN vt1.c0 THEN NULL WHEN t1.c2 THEN vt0.c0 WHEN t1.c1 THEN 0.8375454659191974 END WHEN ((t1.c2) NOT NULL) THEN x'd1e2' WHEN CAST(vt0.c0 AS TEXT) THEN vt1.c0 COLLATE BINARY ELSE (((vt1.c0))==((t1.c1))) END INNER JOIN t1 ON t0.c0 ORDER BY '1930078332' ASC);
SELECT ALL * FROM vt1, vt0 CROSS JOIN t0 ON CASE ((vt0.c0)GLOB(vt0.c0))  WHEN ((((((((((((vt1.c0)OR(t0.c0)))OR('-178517194')))OR(vt1.c0)))AND(t1.c1)))AND('1815377079')))AND(t1.c2)) THEN CASE t1.c2  WHEN vt1.c0 THEN NULL WHEN t1.c2 THEN vt0.c0 WHEN t1.c1 THEN 0.8375454659191974 END WHEN ((t1.c2) NOT NULL) THEN x'd1e2' WHEN CAST(vt0.c0 AS TEXT) THEN vt1.c0 COLLATE BINARY ELSE (((vt1.c0))=((t1.c1))) END INNER JOIN t1 ON t0.c0 WHERE (CASE t1.c18 COLLATE NOCASE  WHEN vt1.c0 COLLATE NOCASE THEN ((('n'))>((vt1.c0))) END) ORDER BY '1930078332' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c18 COLLATE NOCASE  WHEN vt1.c0 COLLATE NOCASE THEN ((('n'))>((vt1.c0))) END) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON CASE ((vt0.c0)GLOB(vt0.c0))  WHEN ((((((((((((vt1.c0)OR(t0.c0)))OR('-178517194')))OR(vt1.c0)))AND(t1.c1)))AND('1815377079')))AND(t1.c2)) THEN CASE t1.c2  WHEN vt1.c0 THEN NULL WHEN t1.c2 THEN vt0.c0 WHEN t1.c1 THEN 0.8375454659191974 END WHEN ((t1.c2) NOT NULL) THEN x'd1e2' WHEN CAST(vt0.c0 AS TEXT) THEN vt1.c0 COLLATE BINARY ELSE (((vt1.c0))==((t1.c1))) END INNER JOIN t1 ON t0.c0 ORDER BY '1930078332' ASC);
SELECT ALL * FROM vt1, vt0 CROSS JOIN t0 ON CASE ((vt0.c0)GLOB(vt0.c0))  WHEN ((((((((((((vt1.c0)OR(t0.c0)))OR('-178517194')))OR(vt1.c0)))AND(t1.c1)))AND('1815377079')))AND(t1.c2)) THEN CASE t1.c2  WHEN vt1.c0 THEN NULL WHEN t1.c2 THEN vt0.c0 WHEN t1.c1 THEN 0.8375454659191974 END WHEN ((t1.c2) NOT NULL) THEN x'd1e2' WHEN CAST(vt0.c0 AS TEXT) THEN vt1.c0 COLLATE BINARY ELSE (((vt1.c0))=((t1.c1))) END INNER JOIN t1 ON t0.c0 WHERE (CASE t1.c18 COLLATE NOCASE  WHEN vt1.c0 COLLATE NOCASE THEN ((('n'))>((vt1.c0))) END) ORDER BY '1930078332' ASC;
SELECT ALL COUNT(*) FROM t0 INNER JOIN t1 ON (~ ((- (t1.c1)))) WHERE ((((~ (t1.c2))) BETWEEN (t1.c0) AND (((t1.c2)>(x'bef9')))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t1.c2))) BETWEEN (t1.c0) AND (((t1.c2)>(x'bef9'))))) IS TRUE)  as count FROM t0 INNER JOIN t1 ON (~ ((- (t1.c1)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN t1 ON (~ ((- (t1.c1)))) WHERE ((((~ (t1.c2))) BETWEEN (t1.c0) AND (((t1.c2)>(x'bef9')))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t1.c2))) BETWEEN (t1.c0) AND (((t1.c2)>(x'bef9'))))) IS TRUE)  as count FROM t0 INNER JOIN t1 ON (~ ((- (t1.c1)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN t1 ON (~ ((- (t1.c1)))) WHERE ((((~ (t1.c2))) BETWEEN (t1.c0) AND (((t1.c2)>(x'bef9')))));
SELECT COUNT(*) FROM t0, v0, vt1, vt0 WHERE ((((v0.c0, v0.c0, t0.c0)) BETWEEN ((0.9618802254885251, vt0.c0, ((vt1.c0)<>(t0.c0)))) AND ((((t0.c0) BETWEEN (vt0.c0) AND (v0.c0)), '138165451', ((t0.c0)=(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, t0.c0)) BETWEEN ((0.9618802254885251, vt0.c0, ((vt1.c0)!=(t0.c0)))) AND ((((t0.c0) BETWEEN (vt0.c0) AND (v0.c0)), '138165451', ((t0.c0)=(v0.c0)))))) IS TRUE)  as count FROM t0, v0, vt1, vt0);
SELECT COUNT(*) FROM t0, v0, vt1, vt0 WHERE ((((v0.c0, v0.c0, t0.c0)) BETWEEN ((0.9618802254885251, vt0.c0, ((vt1.c0)<>(t0.c0)))) AND ((((t0.c0) BETWEEN (vt0.c0) AND (v0.c0)), '138165451', ((t0.c0)=(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, t0.c0)) BETWEEN ((0.9618802254885251, vt0.c0, ((vt1.c0)!=(t0.c0)))) AND ((((t0.c0) BETWEEN (vt0.c0) AND (v0.c0)), '138165451', ((t0.c0)=(v0.c0)))))) IS TRUE)  as count FROM t0, v0, vt1, vt0);
SELECT COUNT(*) FROM t0, v0, vt1, vt0 WHERE ((((v0.c0, v0.c0, t0.c0)) BETWEEN ((0.9618802254885251, vt0.c0, ((vt1.c0)<>(t0.c0)))) AND ((((t0.c0) BETWEEN (vt0.c0) AND (v0.c0)), '138165451', ((t0.c0)=(v0.c0))))));
SELECT ALL COUNT(*) FROM v0, t1 LEFT OUTER JOIN vt1 ON ((COALESCE(t0.c0, t1.c18))LIKE(((((t1.c1)AND(x'7e52')))OR(t0.c0)))) INNER JOIN t0 ON ((t1.c2)GLOB(CAST(t1.c1 AS NUMERIC))) CROSS JOIN vt0 ON (((t1.c2, t1.c1, t1.c0)) BETWEEN (((((t1.c2, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, t1.c2)) AND ((t1.c1, t1.c18, ''))), 0.21392914918747363, ((t1.c18)<=(v0.c0)))) AND ((((t1.c2)IS NOT(vt0.c0)), (' y' IN ()), ((((t0.c0)AND(v0.c0)))AND(vt0.c0))))) WHERE ((- (((vt1.c0)GLOB(0.16573510763179122)))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0)GLOB(0.16573510763179122))))) IS TRUE)  as count FROM v0, t1 LEFT OUTER JOIN vt1 ON ((COALESCE(t0.c0, t1.c18))LIKE(((((t1.c1)AND(x'7e52')))OR(t0.c0)))) INNER JOIN t0 ON ((t1.c2)GLOB(CAST(t1.c1 AS NUMERIC))) CROSS JOIN vt0 ON (((t1.c2, t1.c1, t1.c0)) BETWEEN (((((t1.c2, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, t1.c2)) AND ((t1.c1, t1.c18, ''))), 0.21392914918747363, ((t1.c18)<=(v0.c0)))) AND ((((t1.c2)IS NOT(vt0.c0)), (' y' IN ()), ((((t0.c0)AND(v0.c0)))AND(vt0.c0))))));
SELECT ALL COUNT(*) FROM v0, t1 LEFT OUTER JOIN vt1 ON ((COALESCE(t0.c0, t1.c18))LIKE(((((t1.c1)AND(x'7e52')))OR(t0.c0)))) INNER JOIN t0 ON ((t1.c2)GLOB(CAST(t1.c1 AS NUMERIC))) CROSS JOIN vt0 ON (((t1.c2, t1.c1, t1.c0)) BETWEEN (((((t1.c2, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, t1.c2)) AND ((t1.c1, t1.c18, ''))), 0.21392914918747363, ((t1.c18)<=(v0.c0)))) AND ((((t1.c2)IS NOT(vt0.c0)), (' y' IN ()), ((((t0.c0)AND(v0.c0)))AND(vt0.c0))))) WHERE ((- (((vt1.c0)GLOB(0.16573510763179122)))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0)GLOB(0.16573510763179122))))) IS TRUE)  as count FROM v0, t1 LEFT OUTER JOIN vt1 ON ((COALESCE(t0.c0, t1.c18))LIKE(((((t1.c1)AND(x'7e52')))OR(t0.c0)))) INNER JOIN t0 ON ((t1.c2)GLOB(CAST(t1.c1 AS NUMERIC))) CROSS JOIN vt0 ON (((t1.c2, t1.c1, t1.c0)) BETWEEN (((((t1.c2, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, t1.c2)) AND ((t1.c1, t1.c18, ''))), 0.21392914918747363, ((t1.c18)<=(v0.c0)))) AND ((((t1.c2)IS NOT(vt0.c0)), (' y' IN ()), ((((t0.c0)AND(v0.c0)))AND(vt0.c0))))));
SELECT * FROM t0, vt1, t1, v0 WHERE ((NOT (TRIM(DISTINCT t1.c2)))) ORDER BY ((((t1.c2)|(t1.c1)))-(CASE WHEN t0.c0 THEN t0.c0 WHEN t1.c18 THEN v0.c0 WHEN t1.c18 THEN v0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (TRIM(DISTINCT t1.c2)))) IS TRUE)  as count FROM t0, vt1 NOT INDEXED, t1, v0 ORDER BY ((((t1.c2)|(t1.c1)))-(CASE WHEN t0.c0 THEN t0.c0 WHEN t1.c18 THEN v0.c0 WHEN t1.c18 THEN v0.c0 END)) ASC  NULLS LAST);
SELECT * FROM t0, vt1, t1, v0 WHERE ((NOT (TRIM(DISTINCT t1.c2)))) ORDER BY ((((t1.c2)|(t1.c1)))-(CASE WHEN t0.c0 THEN t0.c0 WHEN t1.c18 THEN v0.c0 WHEN t1.c18 THEN v0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (TRIM(DISTINCT t1.c2)))) IS TRUE)  as count FROM t0, vt1 NOT INDEXED, t1, v0 ORDER BY ((((t1.c2)|(t1.c1)))-(CASE WHEN t0.c0 THEN t0.c0 WHEN t1.c18 THEN v0.c0 WHEN t1.c18 THEN v0.c0 END)) ASC  NULLS LAST);
SELECT * FROM t0, vt1, t1, v0 WHERE ((NOT (TRIM(DISTINCT t1.c2)))) ORDER BY ((((t1.c2)|(t1.c1)))-(CASE WHEN t0.c0 THEN t0.c0 WHEN t1.c18 THEN v0.c0 WHEN t1.c18 THEN v0.c0 END)) ASC  NULLS LAST;
SELECT * FROM t1, v0, t0 WHERE ((((((t1.c1))==((t1.c18)))) NOT BETWEEN (CASE t1.c1  WHEN t0.c0 THEN t1.c1 WHEN v0.c0 THEN t1.c1 WHEN t1.c1 THEN v0.c0 ELSE t1.c18 END) AND (((t1.c18)>(t0.c0))))) ORDER BY CAST(CAST(t1.c0 AS BLOB) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t1.c1))==((t1.c18)))) NOT BETWEEN (CASE t1.c1  WHEN t0.c0 THEN t1.c1 WHEN v0.c0 THEN t1.c1 WHEN t1.c1 THEN v0.c0 ELSE t1.c18 END) AND (((t1.c18)>(t0.c0))))) IS TRUE)  as count FROM t1, v0, t0 ORDER BY CAST(CAST(t1.c0 AS BLOB) AS TEXT)  NULLS LAST);
SELECT * FROM t1, v0, t0 WHERE ((((((t1.c1))==((t1.c18)))) NOT BETWEEN (CASE t1.c1  WHEN t0.c0 THEN t1.c1 WHEN v0.c0 THEN t1.c1 WHEN t1.c1 THEN v0.c0 ELSE t1.c18 END) AND (((t1.c18)>(t0.c0))))) ORDER BY CAST(CAST(t1.c0 AS BLOB) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t1.c1))==((t1.c18)))) NOT BETWEEN (CASE t1.c1  WHEN t0.c0 THEN t1.c1 WHEN v0.c0 THEN t1.c1 WHEN t1.c1 THEN v0.c0 ELSE t1.c18 END) AND (((t1.c18)>(t0.c0))))) IS TRUE)  as count FROM t1, v0, t0 ORDER BY CAST(CAST(t1.c0 AS BLOB) AS TEXT)  NULLS LAST);
SELECT * FROM t1, v0, t0 WHERE ((((((t1.c1))==((t1.c18)))) NOT BETWEEN (CASE t1.c1  WHEN t0.c0 THEN t1.c1 WHEN v0.c0 THEN t1.c1 WHEN t1.c1 THEN v0.c0 ELSE t1.c18 END) AND (((t1.c18)>(t0.c0))))) ORDER BY CAST(CAST(t1.c0 AS BLOB) AS TEXT)  NULLS LAST;
SELECT ALL * FROM t0, v0 WHERE ((((((t0.c0))<=((t0.c0)))) NOT BETWEEN (v0.c0) AND ((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))<=((t0.c0)))) NOT BETWEEN (v0.c0) AND ((NOT (t0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((((((t0.c0))<=((t0.c0)))) NOT BETWEEN (v0.c0) AND ((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))<=((t0.c0)))) NOT BETWEEN (v0.c0) AND ((NOT (t0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((((((t0.c0))<=((t0.c0)))) NOT BETWEEN (v0.c0) AND ((NOT (t0.c0)))));
SELECT * FROM vt1, t1, vt0, t0 WHERE ((((t1.c1)) NOT BETWEEN ((t0.c0)) AND ((CAST(t1.c2 AS BLOB))))) ORDER BY NULL ASC, ((((t1.c0)||(t1.c0)))>>((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c1)) NOT BETWEEN ((t0.c0)) AND ((CAST(t1.c2 AS BLOB))))) IS TRUE)  as count FROM vt1, t1, vt0, t0 ORDER BY NULL ASC, ((((t1.c0)||(t1.c0)))>>((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM vt1, t1, vt0, t0 WHERE ((((t1.c1)) NOT BETWEEN ((t0.c0)) AND ((CAST(t1.c2 AS BLOB))))) ORDER BY NULL ASC, ((((t1.c0)||(t1.c0)))>>((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c1)) NOT BETWEEN ((t0.c0)) AND ((CAST(t1.c2 AS BLOB))))) IS TRUE)  as count FROM vt1, t1, vt0, t0 ORDER BY NULL ASC, ((((t1.c0)||(t1.c0)))>>((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM vt1, t1, vt0, t0 WHERE ((((t1.c1)) NOT BETWEEN ((t0.c0)) AND ((CAST(t1.c2 AS BLOB))))) ORDER BY NULL ASC, ((((t1.c0)||(t1.c0)))>>((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0, v0, t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, vt0, v0, t0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, v0, t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, vt0, v0, t0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, v0, t0, vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((~ ((((x''))!=((t0.c0)))))) ORDER BY CAST((NOT (t0.c0)) AS NUMERIC), ((t0.c0) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0)<(t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((x''))!=((t0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((NOT (t0.c0)) AS NUMERIC), ((t0.c0) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0)<(t0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((~ ((((x''))!=((t0.c0)))))) ORDER BY CAST((NOT (t0.c0)) AS NUMERIC), ((t0.c0) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0)<(t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((x''))!=((t0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((NOT (t0.c0)) AS NUMERIC), ((t0.c0) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0)<(t0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((~ ((((x''))!=((t0.c0)))))) ORDER BY CAST((NOT (t0.c0)) AS NUMERIC), ((t0.c0) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0)<(t0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, t1 CROSS JOIN v0 ON vt0.c0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1, vt0, t1 CROSS JOIN v0 ON vt0.c0);
SELECT COUNT(*) FROM vt1, vt0, t1 CROSS JOIN v0 ON vt0.c0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1, vt0, t1 CROSS JOIN v0 ON vt0.c0);
SELECT COUNT(*) FROM vt1, vt0, t1 CROSS JOIN v0 ON vt0.c0 WHERE (v0.c0);
SELECT * FROM vt0, v0, vt1, t1, t0 WHERE ((((((((((t1.c1 IN ()))OR(x'a38e')))AND(t1.c2 COLLATE RTRIM)))AND(((t1.c18)|(t1.c2)))))AND(CASE WHEN t1.c1 THEN t0.c0 ELSE x'19344f10' END))) ORDER BY ((t1.c2)-((+ (t0.c0)))) ASC, NULL COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((t1.c1 IN ()))OR(x'a38e')))AND(t1.c2 COLLATE RTRIM)))AND(((t1.c18)|(t1.c2)))))AND(CASE WHEN t1.c1 THEN t0.c0 ELSE x'19344f10' END))) IS TRUE)  as count FROM vt0, v0, vt1, t1, t0 ORDER BY ((t1.c2)-((+ (t0.c0)))) ASC, NULL COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt0, v0, vt1, t1, t0 WHERE ((((((((((t1.c1 IN ()))OR(x'a38e')))AND(t1.c2 COLLATE RTRIM)))AND(((t1.c18)|(t1.c2)))))AND(CASE WHEN t1.c1 THEN t0.c0 ELSE x'19344f10' END))) ORDER BY ((t1.c2)-((+ (t0.c0)))) ASC, NULL COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((t1.c1 IN ()))OR(x'a38e')))AND(t1.c2 COLLATE RTRIM)))AND(((t1.c18)|(t1.c2)))))AND(CASE WHEN t1.c1 THEN t0.c0 ELSE x'19344f10' END))) IS TRUE)  as count FROM vt0, v0, vt1, t1, t0 ORDER BY ((t1.c2)-((+ (t0.c0)))) ASC, NULL COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt0, v0, vt1, t1, t0 WHERE ((((((((((t1.c1 IN ()))OR(x'a38e')))AND(t1.c2 COLLATE RTRIM)))AND(((t1.c18)|(t1.c2)))))AND(CASE WHEN t1.c1 THEN t0.c0 ELSE x'19344f10' END))) ORDER BY ((t1.c2)-((+ (t0.c0)))) ASC, NULL COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM vt0, t1, t0, vt1 WHERE (json_patch(((0.9723809665589126)>>(t1.c18)), t1.c1)) ORDER BY load_extension((- (t0.c0)), CAST(t0.c0 AS REAL)), ((((vt1.c0)==(t1.c1)))&(((vt1.c0)GLOB(t1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_patch(((0.9723809665589126)>>(t1.c18)), t1.c1)) IS TRUE)  as count FROM vt0, t1, t0, vt1 ORDER BY load_extension((- (t0.c0)), CAST(t0.c0 AS REAL)), ((((vt1.c0)==(t1.c1)))&(((vt1.c0)GLOB(t1.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t1, t0, vt1 WHERE (json_patch(((0.9723809665589126)>>(t1.c18)), t1.c1)) ORDER BY load_extension((- (t0.c0)), CAST(t0.c0 AS REAL)), ((((vt1.c0)==(t1.c1)))&(((vt1.c0)GLOB(t1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_patch(((0.9723809665589126)>>(t1.c18)), t1.c1)) IS TRUE)  as count FROM vt0, t1, t0, vt1 ORDER BY load_extension((- (t0.c0)), CAST(t0.c0 AS REAL)), ((((vt1.c0)==(t1.c1)))&(((vt1.c0)GLOB(t1.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t1, t0, vt1 WHERE (json_patch(((0.9723809665589126)>>(t1.c18)), t1.c1)) ORDER BY load_extension((- (t0.c0)), CAST(t0.c0 AS REAL)), ((((vt1.c0)==(t1.c1)))&(((vt1.c0)GLOB(t1.c2)))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (CAST(t1.c18 AS BLOB)) ORDER BY (((t1.c1)) NOT BETWEEN ((x'')) AND ((((t1.c1) IS FALSE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c18 AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1)) NOT BETWEEN ((x'')) AND ((((t1.c1) IS FALSE)))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (CAST(t1.c18 AS BLOB)) ORDER BY (((t1.c1)) NOT BETWEEN ((x'')) AND ((((t1.c1) IS FALSE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c18 AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1)) NOT BETWEEN ((x'')) AND ((((t1.c1) IS FALSE)))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (CAST(t1.c18 AS BLOB)) ORDER BY (((t1.c1)) NOT BETWEEN ((x'')) AND ((((t1.c1) IS FALSE)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1, v0 WHERE ((- (((t1.c18)*(t1.c1))))) ORDER BY 0.8008333264343652;
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c18)*(t1.c1))))) IS TRUE)  as count FROM t1, v0 ORDER BY 0.8008333264343652);
SELECT COUNT(*) FROM t1, v0 WHERE ((- (((t1.c18)*(t1.c1))))) ORDER BY 0.8008333264343652;
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c18)*(t1.c1))))) IS TRUE)  as count FROM t1, v0 ORDER BY 0.8008333264343652);
SELECT COUNT(*) FROM t1, v0 WHERE ((- (((t1.c18)*(t1.c1))))) ORDER BY 0.8008333264343652;
SELECT COUNT(*) FROM v0 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE ((((t0.c0) IS TRUE) IN (CAST(t0.c0 AS BLOB), 0.9397152452642397)));
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS TRUE) IN (CAST(t0.c0 AS BLOB), 0.9397152452642397))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0) IS TRUE) IN (CAST(t0.c0 AS BLOB), 0.9397152452642397)));
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS TRUE) IN (CAST(t0.c0 AS BLOB), 0.9397152452642397))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0) IS TRUE) IN (CAST(t0.c0 AS BLOB), 0.9397152452642397)));
SELECT COUNT(*) FROM t0, v0, vt1 WHERE (((((((((((t0.c0)AND(vt1.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c0))) NOTNULL)) ORDER BY (((vt1.c0, vt1.c0, x'')) BETWEEN ((CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END, ((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt1.c0)), (NOT (vt1.c0)))) AND ((CASE v0.c0  WHEN v0.c0 THEN 0.9467317260637975 WHEN v0.c0 THEN vt1.c0 WHEN 0.3015799550947539 THEN t0.c0 END, CAST(vt1.c0 AS INTEGER), UNLIKELY(DISTINCT 'mO0')))) DESC  NULLS FIRST, CAST(((vt1.c0) BETWEEN (v0.c0) AND (t0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)AND(vt1.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, v0, vt1 ORDER BY (((vt1.c0, vt1.c0, x'')) BETWEEN ((CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END, ((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt1.c0)), (NOT (vt1.c0)))) AND ((CASE v0.c0  WHEN v0.c0 THEN 0.9467317260637975 WHEN v0.c0 THEN vt1.c0 WHEN 0.3015799550947539 THEN t0.c0 END, CAST(vt1.c0 AS INTEGER), UNLIKELY(DISTINCT 'mO0')))) DESC  NULLS FIRST, CAST(((vt1.c0) BETWEEN (v0.c0) AND (t0.c0)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt1 WHERE (((((((((((t0.c0)AND(vt1.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c0))) NOTNULL)) ORDER BY (((vt1.c0, vt1.c0, x'')) BETWEEN ((CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END, ((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt1.c0)), (NOT (vt1.c0)))) AND ((CASE v0.c0  WHEN v0.c0 THEN 0.9467317260637975 WHEN v0.c0 THEN vt1.c0 WHEN 0.3015799550947539 THEN t0.c0 END, CAST(vt1.c0 AS INTEGER), UNLIKELY(DISTINCT 'mO0')))) DESC  NULLS FIRST, CAST(((vt1.c0) BETWEEN (v0.c0) AND (t0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)AND(vt1.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, v0, vt1 ORDER BY (((vt1.c0, vt1.c0, x'')) BETWEEN ((CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END, ((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt1.c0)), (NOT (vt1.c0)))) AND ((CASE v0.c0  WHEN v0.c0 THEN 0.9467317260637975 WHEN v0.c0 THEN vt1.c0 WHEN 0.3015799550947539 THEN t0.c0 END, CAST(vt1.c0 AS INTEGER), UNLIKELY(DISTINCT 'mO0')))) DESC  NULLS FIRST, CAST(((vt1.c0) BETWEEN (v0.c0) AND (t0.c0)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt1 WHERE (((((((((((t0.c0)AND(vt1.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c0))) NOTNULL)) ORDER BY (((vt1.c0, vt1.c0, x'')) BETWEEN ((CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END, ((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt1.c0)), (NOT (vt1.c0)))) AND ((CASE v0.c0  WHEN v0.c0 THEN 0.9467317260637975 WHEN v0.c0 THEN vt1.c0 WHEN 0.3015799550947539 THEN t0.c0 END, CAST(vt1.c0 AS INTEGER), UNLIKELY(DISTINCT 'mO0')))) DESC  NULLS FIRST, CAST(((vt1.c0) BETWEEN (v0.c0) AND (t0.c0)) AS NUMERIC)  NULLS LAST;
SELECT * FROM vt1, vt0, t0, t1 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY CAST(((t1.c1) NOTNULL) AS TEXT) ASC  NULLS LAST, (((((vt0.c0)/(t0.c0))))>=((((t1.c2) BETWEEN (t1.c1) AND (t1.c1)))))  NULLS LAST, DATETIME(((t1.c2) BETWEEN (vt0.c0) AND (t1.c1)), ((t1.c18)<(vt0.c0)), ((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0, t0, t1 ORDER BY CAST(((t1.c1) NOTNULL) AS TEXT) ASC  NULLS LAST, (((((vt0.c0)/(t0.c0))))>=((((t1.c2) BETWEEN (t1.c1) AND (t1.c1)))))  NULLS LAST, DATETIME(((t1.c2) BETWEEN (vt0.c0) AND (t1.c1)), ((t1.c18)<(vt0.c0)), ((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c2))) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0, t0, t1 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY CAST(((t1.c1) NOTNULL) AS TEXT) ASC  NULLS LAST, (((((vt0.c0)/(t0.c0))))>=((((t1.c2) BETWEEN (t1.c1) AND (t1.c1)))))  NULLS LAST, DATETIME(((t1.c2) BETWEEN (vt0.c0) AND (t1.c1)), ((t1.c18)<(vt0.c0)), ((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0, t0, t1 ORDER BY CAST(((t1.c1) NOTNULL) AS TEXT) ASC  NULLS LAST, (((((vt0.c0)/(t0.c0))))>=((((t1.c2) BETWEEN (t1.c1) AND (t1.c1)))))  NULLS LAST, DATETIME(((t1.c2) BETWEEN (vt0.c0) AND (t1.c1)), ((t1.c18)<(vt0.c0)), ((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c2))) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0, t0, t1 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY CAST(((t1.c1) NOTNULL) AS TEXT) ASC  NULLS LAST, (((((vt0.c0)/(t0.c0))))>=((((t1.c2) BETWEEN (t1.c1) AND (t1.c1)))))  NULLS LAST, DATETIME(((t1.c2) BETWEEN (vt0.c0) AND (t1.c1)), ((t1.c18)<(vt0.c0)), ((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c2))) DESC  NULLS FIRST;
SELECT * FROM vt1, t1, t0, v0, vt0 WHERE ((NOT (v0.c0 COLLATE BINARY))) ORDER BY '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t1, t0, v0, vt0 ORDER BY '' DESC  NULLS LAST);
SELECT * FROM vt1, t1, t0, v0, vt0 WHERE ((NOT (v0.c0 COLLATE BINARY))) ORDER BY '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t1, t0, v0, vt0 ORDER BY '' DESC  NULLS LAST);
SELECT * FROM vt1, t1, t0, v0, vt0 WHERE ((NOT (v0.c0 COLLATE BINARY))) ORDER BY '' DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, t0, vt0, vt1, v0 WHERE (((CASE WHEN 0.6288416529300578 THEN t1.c2 ELSE vt0.c0 END)*(((t1.c0) IS TRUE)))) ORDER BY GLOB(t0.c0, t1.c0) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.6288416529300578 THEN t1.c2 ELSE vt0.c0 END)*(((t1.c0) IS TRUE)))) IS TRUE)  as count FROM t1, t0, vt0, vt1, v0 ORDER BY GLOB(t0.c0, t1.c0) COLLATE NOCASE);
SELECT COUNT(*) FROM t1, t0, vt0, vt1, v0 WHERE (((CASE WHEN 0.6288416529300578 THEN t1.c2 ELSE vt0.c0 END)*(((t1.c0) IS TRUE)))) ORDER BY GLOB(t0.c0, t1.c0) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.6288416529300578 THEN t1.c2 ELSE vt0.c0 END)*(((t1.c0) IS TRUE)))) IS TRUE)  as count FROM t1, t0, vt0, vt1, v0 ORDER BY GLOB(t0.c0, t1.c0) COLLATE NOCASE);
SELECT COUNT(*) FROM t1, t0, vt0, vt1, v0 WHERE (((CASE WHEN 0.6288416529300578 THEN t1.c2 ELSE vt0.c0 END)*(((t1.c0) IS TRUE)))) ORDER BY GLOB(t0.c0, t1.c0) COLLATE NOCASE;
SELECT COUNT(*) FROM t1, vt0 WHERE ((LIKELY(DISTINCT vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(DISTINCT vt0.c0) IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((LIKELY(DISTINCT vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(DISTINCT vt0.c0) IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((LIKELY(DISTINCT vt0.c0) IN ()));
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c0 COLLATE RTRIM))>(('525674822')))) ORDER BY CAST(CAST(0.9907299096061147 AS TEXT) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE RTRIM))>(('525674822')))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(CAST(0.9907299096061147 AS TEXT) AS BLOB) DESC);
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c0 COLLATE RTRIM))>(('525674822')))) ORDER BY CAST(CAST(0.9907299096061147 AS TEXT) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE RTRIM))>(('525674822')))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(CAST(0.9907299096061147 AS TEXT) AS BLOB) DESC);
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c0 COLLATE RTRIM))>(('525674822')))) ORDER BY CAST(CAST(0.9907299096061147 AS TEXT) AS BLOB) DESC;
SELECT COUNT(*) FROM v0, t0, vt1 WHERE ((+ (LIKELIHOOD(DISTINCT vt1.c0, 0.026131294110954606))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LIKELIHOOD(DISTINCT vt1.c0, 0.026131294110954606)))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT COUNT(*) FROM v0, t0, vt1 WHERE ((+ (LIKELIHOOD(DISTINCT vt1.c0, 0.026131294110954606))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LIKELIHOOD(DISTINCT vt1.c0, 0.026131294110954606)))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT COUNT(*) FROM v0, t0, vt1 WHERE ((+ (LIKELIHOOD(DISTINCT vt1.c0, 0.026131294110954606))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c2)IS(t1.c1))) BETWEEN ((t1.c18 IN (t1.c1, t1.c2))) AND (0.3453508840880244 COLLATE RTRIM))) ORDER BY (((((~ (t1.c1)))OR(((t1.c18)>=(t1.c1)))))OR(t1.c1));
SELECT SUM(count) FROM (SELECT ((((((t1.c2)IS(t1.c1))) BETWEEN ((t1.c18 IN (t1.c1, t1.c2))) AND (0.3453508840880244 COLLATE RTRIM))) IS TRUE)  as count FROM t1 ORDER BY (((((~ (t1.c1)))OR(((t1.c18)>=(t1.c1)))))OR(t1.c1)));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c2)IS(t1.c1))) BETWEEN ((t1.c18 IN (t1.c1, t1.c2))) AND (0.3453508840880244 COLLATE RTRIM))) ORDER BY (((((~ (t1.c1)))OR(((t1.c18)>=(t1.c1)))))OR(t1.c1));
SELECT SUM(count) FROM (SELECT ((((((t1.c2)IS(t1.c1))) BETWEEN ((t1.c18 IN (t1.c1, t1.c2))) AND (0.3453508840880244 COLLATE RTRIM))) IS TRUE)  as count FROM t1 ORDER BY (((((~ (t1.c1)))OR(((t1.c18)>=(t1.c1)))))OR(t1.c1)));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c2)IS(t1.c1))) BETWEEN ((t1.c18 IN (t1.c1, t1.c2))) AND (0.3453508840880244 COLLATE RTRIM))) ORDER BY (((((~ (t1.c1)))OR(((t1.c18)>=(t1.c1)))))OR(t1.c1));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (t0.c0 IN (t0.c0))  WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0)/(t0.c0)) THEN CAST(t0.c0 AS INTEGER) WHEN t0.c0 COLLATE NOCASE THEN CAST(t0.c0 AS NUMERIC) ELSE CASE WHEN t0.c0 THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c0 IN (t0.c0))  WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0)/(t0.c0)) THEN CAST(t0.c0 AS INTEGER) WHEN t0.c0 COLLATE NOCASE THEN CAST(t0.c0 AS NUMERIC) ELSE CASE WHEN t0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (t0.c0 IN (t0.c0))  WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0)/(t0.c0)) THEN CAST(t0.c0 AS INTEGER) WHEN t0.c0 COLLATE NOCASE THEN CAST(t0.c0 AS NUMERIC) ELSE CASE WHEN t0.c0 THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c0 IN (t0.c0))  WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0)/(t0.c0)) THEN CAST(t0.c0 AS INTEGER) WHEN t0.c0 COLLATE NOCASE THEN CAST(t0.c0 AS NUMERIC) ELSE CASE WHEN t0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (t0.c0 IN (t0.c0))  WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0)/(t0.c0)) THEN CAST(t0.c0 AS INTEGER) WHEN t0.c0 COLLATE NOCASE THEN CAST(t0.c0 AS NUMERIC) ELSE CASE WHEN t0.c0 THEN t0.c0 END END);
SELECT ALL * FROM v0, t0, vt0, t1, vt1 WHERE (((((- (t1.c2)), ((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c2)), TRIM(DISTINCT '7\ns![km')))>(((t1.c1 IN (vt0.c0, t1.c0)), CAST(t1.c2 AS BLOB), CASE t1.c1  WHEN vt0.c0 THEN t1.c2 ELSE t1.c1 END)))) ORDER BY (((((t1.c18)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))+(CASE t1.c2  WHEN NULL THEN t1.c18 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((- (t1.c2)), ((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c2)), TRIM(DISTINCT '7\ns![km')))>(((t1.c1 IN (vt0.c0, t1.c0)), CAST(t1.c2 AS BLOB), CASE t1.c1  WHEN vt0.c0 THEN t1.c2 ELSE t1.c1 END)))) IS TRUE)  as count FROM v0, t0, vt0, t1, vt1 ORDER BY (((((t1.c18)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))+(CASE t1.c2  WHEN NULL THEN t1.c18 END)) DESC);
SELECT ALL * FROM v0, t0, vt0, t1, vt1 WHERE (((((- (t1.c2)), ((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c2)), TRIM(DISTINCT '7\ns![km')))>(((t1.c1 IN (vt0.c0, t1.c0)), CAST(t1.c2 AS BLOB), CASE t1.c1  WHEN vt0.c0 THEN t1.c2 ELSE t1.c1 END)))) ORDER BY (((((t1.c18)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))+(CASE t1.c2  WHEN NULL THEN t1.c18 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((- (t1.c2)), ((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c2)), TRIM(DISTINCT '7\ns![km')))>(((t1.c1 IN (vt0.c0, t1.c0)), CAST(t1.c2 AS BLOB), CASE t1.c1  WHEN vt0.c0 THEN t1.c2 ELSE t1.c1 END)))) IS TRUE)  as count FROM v0, t0, vt0, t1, vt1 ORDER BY (((((t1.c18)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))+(CASE t1.c2  WHEN NULL THEN t1.c18 END)) DESC);
SELECT ALL * FROM v0, t0, vt0, t1, vt1 WHERE (((((- (t1.c2)), ((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c2)), TRIM(DISTINCT '7\ns![km')))>(((t1.c1 IN (vt0.c0, t1.c0)), CAST(t1.c2 AS BLOB), CASE t1.c1  WHEN vt0.c0 THEN t1.c2 ELSE t1.c1 END)))) ORDER BY (((((t1.c18)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))+(CASE t1.c2  WHEN NULL THEN t1.c18 END)) DESC;
SELECT * FROM t0, t1, v0, vt0 INDEXED BY i96 WHERE ((NOT (((0.992750295386567) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((0.992750295386567) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, t1, v0, vt0 INDEXED BY i96);
SELECT * FROM t0, t1, v0, vt0 INDEXED BY i96 WHERE ((NOT (((0.992750295386567) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((0.992750295386567) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, t1, v0, vt0 INDEXED BY i96);
SELECT ALL * FROM vt0, t0, vt1, t1 WHERE (((CAST(t1.c2 AS TEXT)) IS FALSE)) ORDER BY CASE 'S''36'  WHEN ((t0.c0)>=(t1.c1)) THEN (t1.c1 IN (t1.c18, t1.c18)) WHEN CASE t1.c2  WHEN vt0.c0 THEN t1.c18 WHEN t1.c18 THEN t1.c0 WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END THEN t1.c1 COLLATE NOCASE WHEN ((((((((((((t1.c2)OR(t1.c18)))AND(t1.c18)))AND(t1.c18)))AND(vt0.c0)))AND(t1.c2)))AND(vt0.c0)) THEN t1.c1 ELSE ((((t1.c18)AND(t1.c1)))OR(vt1.c0)) END  NULLS LAST, (((((((('^^X2mDG')OR(((((((((t1.c1)AND(t1.c2)))OR(t1.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR(((((NULL)OR(vt1.c0)))AND(NULL)))))AND((t1.c0 IN ()))))OR((((t1.c2, 0.7166269963737066, vt1.c0))>((t1.c0, t1.c2, vt0.c0))))) ASC, ((((t1.c1) NOT NULL))IS NOT((- (0.4409794344782447))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c2 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0, t0, vt1, t1 ORDER BY CASE 'S''36'  WHEN ((t0.c0)>=(t1.c1)) THEN (t1.c1 IN (t1.c18, t1.c18)) WHEN CASE t1.c2  WHEN vt0.c0 THEN t1.c18 WHEN t1.c18 THEN t1.c0 WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END THEN t1.c1 COLLATE NOCASE WHEN ((((((((((((t1.c2)OR(t1.c18)))AND(t1.c18)))AND(t1.c18)))AND(vt0.c0)))AND(t1.c2)))AND(vt0.c0)) THEN t1.c1 ELSE ((((t1.c18)AND(t1.c1)))OR(vt1.c0)) END  NULLS LAST, (((((((('^^X2mDG')OR(((((((((t1.c1)AND(t1.c2)))OR(t1.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR(((((NULL)OR(vt1.c0)))AND(NULL)))))AND((t1.c0 IN ()))))OR((((t1.c2, 0.7166269963737066, vt1.c0))>((t1.c0, t1.c2, vt0.c0))))) ASC, ((((t1.c1) NOT NULL))IS NOT((- (0.4409794344782447)))));
SELECT ALL * FROM vt0, t0, vt1, t1 WHERE (((CAST(t1.c2 AS TEXT)) IS FALSE)) ORDER BY CASE 'S''36'  WHEN ((t0.c0)>=(t1.c1)) THEN (t1.c1 IN (t1.c18, t1.c18)) WHEN CASE t1.c2  WHEN vt0.c0 THEN t1.c18 WHEN t1.c18 THEN t1.c0 WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END THEN t1.c1 COLLATE NOCASE WHEN ((((((((((((t1.c2)OR(t1.c18)))AND(t1.c18)))AND(t1.c18)))AND(vt0.c0)))AND(t1.c2)))AND(vt0.c0)) THEN t1.c1 ELSE ((((t1.c18)AND(t1.c1)))OR(vt1.c0)) END  NULLS LAST, (((((((('^^X2mDG')OR(((((((((t1.c1)AND(t1.c2)))OR(t1.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR(((((NULL)OR(vt1.c0)))AND(NULL)))))AND((t1.c0 IN ()))))OR((((t1.c2, 0.7166269963737066, vt1.c0))>((t1.c0, t1.c2, vt0.c0))))) ASC, ((((t1.c1) NOT NULL))IS NOT((- (0.4409794344782447))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c2 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0, t0, vt1, t1 ORDER BY CASE 'S''36'  WHEN ((t0.c0)>=(t1.c1)) THEN (t1.c1 IN (t1.c18, t1.c18)) WHEN CASE t1.c2  WHEN vt0.c0 THEN t1.c18 WHEN t1.c18 THEN t1.c0 WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END THEN t1.c1 COLLATE NOCASE WHEN ((((((((((((t1.c2)OR(t1.c18)))AND(t1.c18)))AND(t1.c18)))AND(vt0.c0)))AND(t1.c2)))AND(vt0.c0)) THEN t1.c1 ELSE ((((t1.c18)AND(t1.c1)))OR(vt1.c0)) END  NULLS LAST, (((((((('^^X2mDG')OR(((((((((t1.c1)AND(t1.c2)))OR(t1.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR(((((NULL)OR(vt1.c0)))AND(NULL)))))AND((t1.c0 IN ()))))OR((((t1.c2, 0.7166269963737066, vt1.c0))>((t1.c0, t1.c2, vt0.c0))))) ASC, ((((t1.c1) NOT NULL))IS NOT((- (0.4409794344782447)))));
SELECT ALL * FROM vt0, t0, vt1, t1 WHERE (((CAST(t1.c2 AS TEXT)) IS FALSE)) ORDER BY CASE 'S''36'  WHEN ((t0.c0)>=(t1.c1)) THEN (t1.c1 IN (t1.c18, t1.c18)) WHEN CASE t1.c2  WHEN vt0.c0 THEN t1.c18 WHEN t1.c18 THEN t1.c0 WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END THEN t1.c1 COLLATE NOCASE WHEN ((((((((((((t1.c2)OR(t1.c18)))AND(t1.c18)))AND(t1.c18)))AND(vt0.c0)))AND(t1.c2)))AND(vt0.c0)) THEN t1.c1 ELSE ((((t1.c18)AND(t1.c1)))OR(vt1.c0)) END  NULLS LAST, (((((((('^^X2mDG')OR(((((((((t1.c1)AND(t1.c2)))OR(t1.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR(((((NULL)OR(vt1.c0)))AND(NULL)))))AND((t1.c0 IN ()))))OR((((t1.c2, 0.7166269963737066, vt1.c0))>((t1.c0, t1.c2, vt0.c0))))) ASC, ((((t1.c1) NOT NULL))IS NOT((- (0.4409794344782447))));
SELECT ALL * FROM t1 LEFT OUTER JOIN v0 ON vt0.c0 RIGHT OUTER JOIN vt0 ON ABS((- (t1.c1))) WHERE (((t1.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT NULL)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON vt0.c0 RIGHT OUTER JOIN vt0 ON ABS((- (t1.c1))));
SELECT ALL * FROM t1 LEFT OUTER JOIN v0 ON vt0.c0 RIGHT OUTER JOIN vt0 ON ABS((- (t1.c1))) WHERE (((t1.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT NULL)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON vt0.c0 RIGHT OUTER JOIN vt0 ON ABS((- (t1.c1))));
SELECT * FROM v0 WHERE (((((CAST(v0.c0 AS NUMERIC))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0)<=(v0.c0))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS NUMERIC))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0)<=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY NULL ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((((CAST(v0.c0 AS NUMERIC))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0)<=(v0.c0))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS NUMERIC))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0)<=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY NULL ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((((CAST(v0.c0 AS NUMERIC))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0)<=(v0.c0))))) ORDER BY NULL ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c0 AS TEXT) COLLATE NOCASE WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c0 AS TEXT) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c0 AS TEXT) COLLATE NOCASE WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c0 AS TEXT) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c0 AS TEXT) COLLATE NOCASE WHERE (NULL);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((~ (0.07535618909898989))) BETWEEN ((NOT (t1.c2))) AND (t1.c18)));
SELECT SUM(count) FROM (SELECT (((((~ (0.07535618909898989))) BETWEEN ((NOT (t1.c2))) AND (t1.c18))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((~ (0.07535618909898989))) BETWEEN ((NOT (t1.c2))) AND (t1.c18)));
SELECT SUM(count) FROM (SELECT (((((~ (0.07535618909898989))) BETWEEN ((NOT (t1.c2))) AND (t1.c18))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((~ (0.07535618909898989))) BETWEEN ((NOT (t1.c2))) AND (t1.c18)));
SELECT * FROM vt0, vt1 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)>=(vt1.c0)) THEN NULL ELSE LIKE(vt1.c0, vt1.c0, '0') END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)>=(vt1.c0)) THEN NULL ELSE LIKE(vt1.c0, vt1.c0, '0') END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)>=(vt1.c0)) THEN NULL ELSE LIKE(vt1.c0, vt1.c0, '0') END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)>=(vt1.c0)) THEN NULL ELSE LIKE(vt1.c0, vt1.c0, '0') END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)>=(vt1.c0)) THEN NULL ELSE LIKE(vt1.c0, vt1.c0, '0') END);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)||(t0.c0)))OR(((('2107025836'))!=((v0.c0))))))OR(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) INNER JOIN vt1 ON ((vt1.c0) IS TRUE) COLLATE NOCASE FULL OUTER JOIN v0 ON (((t0.c0)<<(vt0.c0)) IN (((((v0.c0)OR(vt0.c0)))OR(v0.c0)))) WHERE (((((~ (vt1.c0)), MIN(t0.c0, vt0.c0), ((vt1.c0) BETWEEN (vt0.c0) AND (t0.c0)), vt0.c0 COLLATE RTRIM, CAST(NULL AS INTEGER)))<((ABS(v0.c0), CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOT BETWEEN (0.2369137842978789) AND (vt1.c0)), (((NULL)) BETWEEN ((v0.c0)) AND ((vt1.c0))), x'60d4'))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt1.c0)), MIN(t0.c0, vt0.c0), ((vt1.c0) BETWEEN (vt0.c0) AND (t0.c0)), vt0.c0 COLLATE RTRIM, CAST(NULL AS INTEGER)))<((ABS(v0.c0), CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOT BETWEEN (0.2369137842978789) AND (vt1.c0)), (((NULL)) BETWEEN ((v0.c0)) AND ((vt1.c0))), x'60d4')))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)||(t0.c0)))OR(((('2107025836'))<>((v0.c0))))))OR(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) INNER JOIN vt1 ON ((vt1.c0) IS TRUE) COLLATE NOCASE FULL OUTER JOIN v0 ON (((t0.c0)<<(vt0.c0)) IN (((((v0.c0)OR(vt0.c0)))OR(v0.c0)))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)||(t0.c0)))OR(((('2107025836'))!=((v0.c0))))))OR(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) INNER JOIN vt1 ON ((vt1.c0) IS TRUE) COLLATE NOCASE FULL OUTER JOIN v0 ON (((t0.c0)<<(vt0.c0)) IN (((((v0.c0)OR(vt0.c0)))OR(v0.c0)))) WHERE (((((~ (vt1.c0)), MIN(t0.c0, vt0.c0), ((vt1.c0) BETWEEN (vt0.c0) AND (t0.c0)), vt0.c0 COLLATE RTRIM, CAST(NULL AS INTEGER)))<((ABS(v0.c0), CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOT BETWEEN (0.2369137842978789) AND (vt1.c0)), (((NULL)) BETWEEN ((v0.c0)) AND ((vt1.c0))), x'60d4'))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt1.c0)), MIN(t0.c0, vt0.c0), ((vt1.c0) BETWEEN (vt0.c0) AND (t0.c0)), vt0.c0 COLLATE RTRIM, CAST(NULL AS INTEGER)))<((ABS(v0.c0), CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOT BETWEEN (0.2369137842978789) AND (vt1.c0)), (((NULL)) BETWEEN ((v0.c0)) AND ((vt1.c0))), x'60d4')))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)||(t0.c0)))OR(((('2107025836'))<>((v0.c0))))))OR(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) INNER JOIN vt1 ON ((vt1.c0) IS TRUE) COLLATE NOCASE FULL OUTER JOIN v0 ON (((t0.c0)<<(vt0.c0)) IN (((((v0.c0)OR(vt0.c0)))OR(v0.c0)))));
SELECT COUNT(*) FROM t1, t0 RIGHT OUTER JOIN vt1 ON ((((((t1.c18) BETWEEN (t1.c0) AND (t1.c2)))OR((t1.c2 IN ()))))AND((~ (t1.c0)))) WHERE (((t1.c18 IN (vt1.c0)) IN (((x'5e85') IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((t1.c18 IN (vt1.c0)) IN (((x'5e85') IS TRUE)))) IS TRUE)  as count FROM t1, t0 RIGHT OUTER JOIN vt1 ON ((((((t1.c18) BETWEEN (t1.c0) AND (t1.c2)))OR((t1.c2 IN ()))))AND((~ (t1.c0)))));
SELECT COUNT(*) FROM t1, t0 RIGHT OUTER JOIN vt1 ON ((((((t1.c18) BETWEEN (t1.c0) AND (t1.c2)))OR((t1.c2 IN ()))))AND((~ (t1.c0)))) WHERE (((t1.c18 IN (vt1.c0)) IN (((x'5e85') IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((t1.c18 IN (vt1.c0)) IN (((x'5e85') IS TRUE)))) IS TRUE)  as count FROM t1, t0 RIGHT OUTER JOIN vt1 ON ((((((t1.c18) BETWEEN (t1.c0) AND (t1.c2)))OR((t1.c2 IN ()))))AND((~ (t1.c0)))));
SELECT COUNT(*) FROM t1, t0 RIGHT OUTER JOIN vt1 ON ((((((t1.c18) BETWEEN (t1.c0) AND (t1.c2)))OR((t1.c2 IN ()))))AND((~ (t1.c0)))) WHERE (((t1.c18 IN (vt1.c0)) IN (((x'5e85') IS TRUE))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON CASE t1.c0  WHEN 0.027934839780588194 THEN ((((t1.c18)AND(t1.c0)))AND(v0.c0)) ELSE ((t1.c0)&(t1.c1)) END LEFT OUTER JOIN v0 ON ((t1.c0)>=(((t1.c0)<(t1.c2)))) RIGHT OUTER JOIN t1 ON CAST(((t1.c18)IS(t1.c2)) AS NUMERIC) WHERE (((t1.c2)-((('-702593718')%(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2)-((('-702593718')%(t1.c2))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE t1.c0  WHEN 0.027934839780588194 THEN ((((t1.c18)AND(t1.c0)))AND(v0.c0)) ELSE ((t1.c0)&(t1.c1)) END LEFT OUTER JOIN v0 ON ((t1.c0)>=(((t1.c0)<(t1.c2)))) RIGHT OUTER JOIN t1 ON CAST(((t1.c18)IS(t1.c2)) AS NUMERIC));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON CASE t1.c0  WHEN 0.027934839780588194 THEN ((((t1.c18)AND(t1.c0)))AND(v0.c0)) ELSE ((t1.c0)&(t1.c1)) END LEFT OUTER JOIN v0 ON ((t1.c0)>=(((t1.c0)<(t1.c2)))) RIGHT OUTER JOIN t1 ON CAST(((t1.c18)IS(t1.c2)) AS NUMERIC) WHERE (((t1.c2)-((('-702593718')%(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2)-((('-702593718')%(t1.c2))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE t1.c0  WHEN 0.027934839780588194 THEN ((((t1.c18)AND(t1.c0)))AND(v0.c0)) ELSE ((t1.c0)&(t1.c1)) END LEFT OUTER JOIN v0 ON ((t1.c0)>=(((t1.c0)<(t1.c2)))) RIGHT OUTER JOIN t1 ON CAST(((t1.c18)IS(t1.c2)) AS NUMERIC));
SELECT ALL * FROM v0 CROSS JOIN vt1 ON (((((v0.c0, v0.c0, t1.c1)) BETWEEN ((t1.c1, t1.c2, t1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))))+(((((vt1.c0)AND(t1.c2)))AND(vt0.c0)))) FULL OUTER JOIN t1 ON (((((t1.c2)OR(vt1.c0)))OR(vt1.c0)) IN ()) INNER JOIN vt0 ON (((t1.c1 IN ()))<<(UNLIKELY(t1.c18))) WHERE (((((((((0.15428158516725654)OR(((vt1.c0) IS FALSE))))AND(t1.c2 COLLATE RTRIM)))OR(((t1.c0) BETWEEN (vt0.c0) AND (t1.c2)))))OR(((NULL) BETWEEN (t1.c18) AND (t1.c18)))));
SELECT SUM(count) FROM (SELECT ((((((((((0.15428158516725654)OR(((vt1.c0) IS FALSE))))AND(t1.c2 COLLATE RTRIM)))OR(((t1.c0) BETWEEN (vt0.c0) AND (t1.c2)))))OR(((NULL) BETWEEN (t1.c18) AND (t1.c18))))) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON (((((v0.c0, v0.c0, t1.c1)) BETWEEN ((t1.c1, t1.c2, t1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))))+(((((vt1.c0)AND(t1.c2)))AND(vt0.c0)))) FULL OUTER JOIN t1 ON (((((t1.c2)OR(vt1.c0)))OR(vt1.c0)) IN ()) INNER JOIN vt0 ON (((t1.c1 IN ()))<<(UNLIKELY(t1.c18))));
SELECT ALL * FROM v0 CROSS JOIN vt1 ON (((((v0.c0, v0.c0, t1.c1)) BETWEEN ((t1.c1, t1.c2, t1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))))+(((((vt1.c0)AND(t1.c2)))AND(vt0.c0)))) FULL OUTER JOIN t1 ON (((((t1.c2)OR(vt1.c0)))OR(vt1.c0)) IN ()) INNER JOIN vt0 ON (((t1.c1 IN ()))<<(UNLIKELY(t1.c18))) WHERE (((((((((0.15428158516725654)OR(((vt1.c0) IS FALSE))))AND(t1.c2 COLLATE RTRIM)))OR(((t1.c0) BETWEEN (vt0.c0) AND (t1.c2)))))OR(((NULL) BETWEEN (t1.c18) AND (t1.c18)))));
SELECT SUM(count) FROM (SELECT ((((((((((0.15428158516725654)OR(((vt1.c0) IS FALSE))))AND(t1.c2 COLLATE RTRIM)))OR(((t1.c0) BETWEEN (vt0.c0) AND (t1.c2)))))OR(((NULL) BETWEEN (t1.c18) AND (t1.c18))))) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON (((((v0.c0, v0.c0, t1.c1)) BETWEEN ((t1.c1, t1.c2, t1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))))+(((((vt1.c0)AND(t1.c2)))AND(vt0.c0)))) FULL OUTER JOIN t1 ON (((((t1.c2)OR(vt1.c0)))OR(vt1.c0)) IN ()) INNER JOIN vt0 ON (((t1.c1 IN ()))<<(UNLIKELY(t1.c18))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (NULL COLLATE BINARY IN ()) RIGHT OUTER JOIN v0 ON ((((vt1.c0)&(vt0.c0)))>=(CASE 0xffffffff9fa10735  WHEN v0.c0 THEN v0.c0 END)) WHERE (CASE ((vt0.c0)/(vt1.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN CAST(0.43796301338959776 AS INTEGER) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN v0.c0 END WHEN CASE WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN '1552564482' WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END THEN ((v0.c0)OR(v0.c0)) END) ORDER BY CAST(-1.804144E8 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)/(vt1.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN CAST(0.43796301338959776 AS INTEGER) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN v0.c0 END WHEN CASE WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN '1552564482' WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END THEN ((v0.c0)OR(v0.c0)) END) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (NULL COLLATE BINARY IN ()) RIGHT OUTER JOIN v0 ON ((((vt1.c0)&(vt0.c0)))>=(CASE 0xffffffff9fa10735  WHEN v0.c0 THEN v0.c0 END)) ORDER BY CAST(-1.804144E8 AS BLOB));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (NULL COLLATE BINARY IN ()) RIGHT OUTER JOIN v0 ON ((((vt1.c0)&(vt0.c0)))>=(CASE 0xffffffff9fa10735  WHEN v0.c0 THEN v0.c0 END)) WHERE (CASE ((vt0.c0)/(vt1.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN CAST(0.43796301338959776 AS INTEGER) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN v0.c0 END WHEN CASE WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN '1552564482' WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END THEN ((v0.c0)OR(v0.c0)) END) ORDER BY CAST(-1.804144E8 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)/(vt1.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN CAST(0.43796301338959776 AS INTEGER) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN v0.c0 END WHEN CASE WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN '1552564482' WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END THEN ((v0.c0)OR(v0.c0)) END) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (NULL COLLATE BINARY IN ()) RIGHT OUTER JOIN v0 ON ((((vt1.c0)&(vt0.c0)))>=(CASE 0xffffffff9fa10735  WHEN v0.c0 THEN v0.c0 END)) ORDER BY CAST(-1.804144E8 AS BLOB));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (NULL COLLATE BINARY IN ()) RIGHT OUTER JOIN v0 ON ((((vt1.c0)&(vt0.c0)))>=(CASE 0xffffffff9fa10735  WHEN v0.c0 THEN v0.c0 END)) WHERE (CASE ((vt0.c0)/(vt1.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN CAST(0.43796301338959776 AS INTEGER) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN v0.c0 END WHEN CASE WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN '1552564482' WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END THEN ((v0.c0)OR(v0.c0)) END) ORDER BY CAST(-1.804144E8 AS BLOB);
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN ((((t0.c0)AND(NULL)))OR(v0.c0)) THEN (((t0.c0))<((v0.c0))) ELSE ((v0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t0.c0)AND(NULL)))OR(v0.c0)) THEN (((t0.c0))<((v0.c0))) ELSE ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN ((((t0.c0)AND(NULL)))OR(v0.c0)) THEN (((t0.c0))<((v0.c0))) ELSE ((v0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t0.c0)AND(NULL)))OR(v0.c0)) THEN (((t0.c0))<((v0.c0))) ELSE ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN ((((t0.c0)AND(NULL)))OR(v0.c0)) THEN (((t0.c0))<((v0.c0))) ELSE ((v0.c0) NOTNULL) END);
SELECT ALL * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR((~ (t0.c0)))))OR(TRIM(DISTINCT t0.c0, t0.c0)))) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE x'' END AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR((~ (t0.c0)))))OR(TRIM(DISTINCT t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE x'' END AS BLOB));
SELECT ALL * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR((~ (t0.c0)))))OR(TRIM(DISTINCT t0.c0, t0.c0)))) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE x'' END AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR((~ (t0.c0)))))OR(TRIM(DISTINCT t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE x'' END AS BLOB));
SELECT ALL * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR((~ (t0.c0)))))OR(TRIM(DISTINCT t0.c0, t0.c0)))) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE x'' END AS BLOB);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, v0 WHERE (((vt1.c0)AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, vt1, v0);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, v0 WHERE (((vt1.c0)AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, vt1, v0);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, v0 WHERE (((vt1.c0)AND(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN t1 ON CASE WHEN CASE t1.c18  WHEN t1.c2 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c2 END THEN ((((((((t1.c2)OR(t0.c0)))AND(t1.c1)))OR(t1.c0)))AND(t0.c0)) ELSE ((t1.c1) BETWEEN (t1.c2) AND (t1.c18)) END WHERE ((((((((((((t1.c0)) NOT BETWEEN ((t1.c18)) AND ((t1.c1))))AND((t1.c18 IN ()))))OR(((t0.c0) IS TRUE))))OR((t1.c2 IN ()))))AND(ROUND(t1.c2, t1.c0)))) ORDER BY ((UNLIKELY(t1.c1))<=(CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST, CASE WHEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((t0.c0)>=(t1.c2)) WHEN ('2107025836' IN ()) THEN ((vt0.c0)OR(t1.c2)) WHEN CAST(NULL AS INTEGER) THEN (+ (t1.c18)) END  NULLS LAST, UPPER(DISTINCT '') ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t1.c0)) NOT BETWEEN ((t1.c18)) AND ((t1.c1))))AND((t1.c18 IN ()))))OR(((t0.c0) IS TRUE))))OR((t1.c2 IN ()))))AND(ROUND(t1.c2, t1.c0)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN t1 ON CASE WHEN CASE t1.c18  WHEN t1.c2 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c2 END THEN ((((((((t1.c2)OR(t0.c0)))AND(t1.c1)))OR(t1.c0)))AND(t0.c0)) ELSE ((t1.c1) BETWEEN (t1.c2) AND (t1.c18)) END ORDER BY ((UNLIKELY(t1.c1))<=(CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST, CASE WHEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((t0.c0)>=(t1.c2)) WHEN ('2107025836' IN ()) THEN ((vt0.c0)OR(t1.c2)) WHEN CAST(NULL AS INTEGER) THEN (+ (t1.c18)) END  NULLS LAST, UPPER(DISTINCT '') ASC);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN t1 ON CASE WHEN CASE t1.c18  WHEN t1.c2 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c2 END THEN ((((((((t1.c2)OR(t0.c0)))AND(t1.c1)))OR(t1.c0)))AND(t0.c0)) ELSE ((t1.c1) BETWEEN (t1.c2) AND (t1.c18)) END WHERE ((((((((((((t1.c0)) NOT BETWEEN ((t1.c18)) AND ((t1.c1))))AND((t1.c18 IN ()))))OR(((t0.c0) IS TRUE))))OR((t1.c2 IN ()))))AND(ROUND(t1.c2, t1.c0)))) ORDER BY ((UNLIKELY(t1.c1))<=(CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST, CASE WHEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((t0.c0)>=(t1.c2)) WHEN ('2107025836' IN ()) THEN ((vt0.c0)OR(t1.c2)) WHEN CAST(NULL AS INTEGER) THEN (+ (t1.c18)) END  NULLS LAST, UPPER(DISTINCT '') ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t1.c0)) NOT BETWEEN ((t1.c18)) AND ((t1.c1))))AND((t1.c18 IN ()))))OR(((t0.c0) IS TRUE))))OR((t1.c2 IN ()))))AND(ROUND(t1.c2, t1.c0)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN t1 ON CASE WHEN CASE t1.c18  WHEN t1.c2 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c2 END THEN ((((((((t1.c2)OR(t0.c0)))AND(t1.c1)))OR(t1.c0)))AND(t0.c0)) ELSE ((t1.c1) BETWEEN (t1.c2) AND (t1.c18)) END ORDER BY ((UNLIKELY(t1.c1))<=(CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST, CASE WHEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((t0.c0)>=(t1.c2)) WHEN ('2107025836' IN ()) THEN ((vt0.c0)OR(t1.c2)) WHEN CAST(NULL AS INTEGER) THEN (+ (t1.c18)) END  NULLS LAST, UPPER(DISTINCT '') ASC);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN t1 ON CASE WHEN CASE t1.c18  WHEN t1.c2 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c2 END THEN ((((((((t1.c2)OR(t0.c0)))AND(t1.c1)))OR(t1.c0)))AND(t0.c0)) ELSE ((t1.c1) BETWEEN (t1.c2) AND (t1.c18)) END WHERE ((((((((((((t1.c0)) NOT BETWEEN ((t1.c18)) AND ((t1.c1))))AND((t1.c18 IN ()))))OR(((t0.c0) IS TRUE))))OR((t1.c2 IN ()))))AND(ROUND(t1.c2, t1.c0)))) ORDER BY ((UNLIKELY(t1.c1))<=(CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST, CASE WHEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((t0.c0)>=(t1.c2)) WHEN ('2107025836' IN ()) THEN ((vt0.c0)OR(t1.c2)) WHEN CAST(NULL AS INTEGER) THEN (+ (t1.c18)) END  NULLS LAST, UPPER(DISTINCT '') ASC;
SELECT ALL COUNT(*) FROM v0, t0 CROSS JOIN t1 ON (NOT (CHAR(vt1.c0))) RIGHT OUTER JOIN vt1 ON ((((((t0.c0)<<(v0.c0)))OR(((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))))OR(vt1.c0 COLLATE NOCASE)) WHERE (x'') ORDER BY (((((((((((t1.c0, v0.c0, t0.c0)) NOT BETWEEN ((v0.c0, t1.c18, t1.c2)) AND ((v0.c0, v0.c0, v0.c0))))OR(((t1.c18) IS TRUE))))AND(x'7955')))OR(((t0.c0) NOT BETWEEN (t1.c0) AND ('-1051891970')))))OR(((0.24665148857697006) NOT BETWEEN (t1.c18) AND (t1.c18)))) DESC  NULLS LAST, ((((((v0.c0)>>(vt1.c0)))OR('-591852487')))OR(((t1.c1)*(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, t0 CROSS JOIN t1 ON (NOT (CHAR(vt1.c0))) RIGHT OUTER JOIN vt1 ON ((((((t0.c0)<<(v0.c0)))OR(((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))))OR(vt1.c0 COLLATE NOCASE)) ORDER BY (((((((((((t1.c0, v0.c0, t0.c0)) NOT BETWEEN ((v0.c0, t1.c18, t1.c2)) AND ((v0.c0, v0.c0, v0.c0))))OR(((t1.c18) IS TRUE))))AND(x'7955')))OR(((t0.c0) NOT BETWEEN (t1.c0) AND ('-1051891970')))))OR(((0.24665148857697006) NOT BETWEEN (t1.c18) AND (t1.c18)))) DESC  NULLS LAST, ((((((v0.c0)>>(vt1.c0)))OR('-591852487')))OR(((t1.c1)*(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 CROSS JOIN t1 ON (NOT (CHAR(vt1.c0))) RIGHT OUTER JOIN vt1 ON ((((((t0.c0)<<(v0.c0)))OR(((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))))OR(vt1.c0 COLLATE NOCASE)) WHERE (x'') ORDER BY (((((((((((t1.c0, v0.c0, t0.c0)) NOT BETWEEN ((v0.c0, t1.c18, t1.c2)) AND ((v0.c0, v0.c0, v0.c0))))OR(((t1.c18) IS TRUE))))AND(x'7955')))OR(((t0.c0) NOT BETWEEN (t1.c0) AND ('-1051891970')))))OR(((0.24665148857697006) NOT BETWEEN (t1.c18) AND (t1.c18)))) DESC  NULLS LAST, ((((((v0.c0)>>(vt1.c0)))OR('-591852487')))OR(((t1.c1)*(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, t0 CROSS JOIN t1 ON (NOT (CHAR(vt1.c0))) RIGHT OUTER JOIN vt1 ON ((((((t0.c0)<<(v0.c0)))OR(((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))))OR(vt1.c0 COLLATE NOCASE)) ORDER BY (((((((((((t1.c0, v0.c0, t0.c0)) NOT BETWEEN ((v0.c0, t1.c18, t1.c2)) AND ((v0.c0, v0.c0, v0.c0))))OR(((t1.c18) IS TRUE))))AND(x'7955')))OR(((t0.c0) NOT BETWEEN (t1.c0) AND ('-1051891970')))))OR(((0.24665148857697006) NOT BETWEEN (t1.c18) AND (t1.c18)))) DESC  NULLS LAST, ((((((v0.c0)>>(vt1.c0)))OR('-591852487')))OR(((t1.c1)*(v0.c0))))  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c1, t1.c2)) NOT BETWEEN ((x'ed9c', NULLIF(t1.c2, t1.c1), CAST(t1.c0 AS REAL))) AND ((t1.c1, (NOT (t1.c1)), ((t1.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((t1.c1, t1.c1, t1.c2)) NOT BETWEEN ((x'ed9c', NULLIF(t1.c2, t1.c1), CAST(t1.c0 AS REAL))) AND ((t1.c1, (NOT (t1.c1)), ((t1.c2) IS TRUE))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c1, t1.c2)) NOT BETWEEN ((x'ed9c', NULLIF(t1.c2, t1.c1), CAST(t1.c0 AS REAL))) AND ((t1.c1, (NOT (t1.c1)), ((t1.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((t1.c1, t1.c1, t1.c2)) NOT BETWEEN ((x'ed9c', NULLIF(t1.c2, t1.c1), CAST(t1.c0 AS REAL))) AND ((t1.c1, (NOT (t1.c1)), ((t1.c2) IS TRUE))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c1, t1.c2)) NOT BETWEEN ((x'ed9c', NULLIF(t1.c2, t1.c1), CAST(t1.c0 AS REAL))) AND ((t1.c1, (NOT (t1.c1)), ((t1.c2) IS TRUE)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN NULLIF(vt1.c0, vt0.c0) THEN json(0.5721976393671601) ELSE CAST('-1' AS INTEGER) END) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM  NULLS LAST, ((NOT (vt0.c0)) IN (vt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(vt1.c0, vt0.c0) THEN json(0.5721976393671601) ELSE CAST('-1' AS INTEGER) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM  NULLS LAST, ((NOT (vt0.c0)) IN (vt0.c0 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN NULLIF(vt1.c0, vt0.c0) THEN json(0.5721976393671601) ELSE CAST('-1' AS INTEGER) END) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM  NULLS LAST, ((NOT (vt0.c0)) IN (vt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(vt1.c0, vt0.c0) THEN json(0.5721976393671601) ELSE CAST('-1' AS INTEGER) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM  NULLS LAST, ((NOT (vt0.c0)) IN (vt0.c0 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN NULLIF(vt1.c0, vt0.c0) THEN json(0.5721976393671601) ELSE CAST('-1' AS INTEGER) END) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM  NULLS LAST, ((NOT (vt0.c0)) IN (vt0.c0 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE ('蓪{쬍8>Y%kB') ORDER BY ABS(DISTINCT ((x'') ISNULL));
SELECT SUM(count) FROM (SELECT (('蓪{쬍8>Y%kB') IS TRUE)  as count FROM t0, vt0 ORDER BY ABS(DISTINCT ((x'') ISNULL)));
SELECT COUNT(*) FROM t0, vt0 WHERE ('蓪{쬍8>Y%kB') ORDER BY ABS(DISTINCT ((x'') ISNULL));
SELECT SUM(count) FROM (SELECT (('蓪{쬍8>Y%kB') IS TRUE)  as count FROM t0, vt0 ORDER BY ABS(DISTINCT ((x'') ISNULL)));
SELECT COUNT(*) FROM t0, vt0 WHERE ('蓪{쬍8>Y%kB') ORDER BY ABS(DISTINCT ((x'') ISNULL));
SELECT COUNT(*) FROM vt0, t0, vt1, t1 WHERE (((CASE WHEN vt0.c0 THEN t1.c18 END)||(CASE WHEN NULL THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN t1.c18 END)||(CASE WHEN NULL THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, t0, vt1, t1);
SELECT COUNT(*) FROM vt0, t0, vt1, t1 WHERE (((CASE WHEN vt0.c0 THEN t1.c18 END)||(CASE WHEN NULL THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN t1.c18 END)||(CASE WHEN NULL THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, t0, vt1, t1);
SELECT COUNT(*) FROM vt0, t0, vt1, t1 WHERE (((CASE WHEN vt0.c0 THEN t1.c18 END)||(CASE WHEN NULL THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt1 INDEXED BY i96, vt0 RIGHT OUTER JOIN t0 ON (NOT (vt1.c0 COLLATE RTRIM)) CROSS JOIN v0 ON ((((vt0.c0 COLLATE RTRIM)AND('JdOU2ZE|')))AND(t0.c0)) WHERE (((NOT (vt0.c0)) IN ())) ORDER BY CAST(((((x'')AND(v0.c0)))OR(t0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt1 INDEXED BY i96, vt0 RIGHT OUTER JOIN t0 ON (NOT (vt1.c0 COLLATE RTRIM)) CROSS JOIN v0 ON ((((vt0.c0 COLLATE RTRIM)AND('JdOU2ZE|')))AND(t0.c0)) ORDER BY CAST(((((x'')AND(v0.c0)))OR(t0.c0)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INDEXED BY i96, vt0 RIGHT OUTER JOIN t0 ON (NOT (vt1.c0 COLLATE RTRIM)) CROSS JOIN v0 ON ((((vt0.c0 COLLATE RTRIM)AND('JdOU2ZE|')))AND(t0.c0)) WHERE (((NOT (vt0.c0)) IN ())) ORDER BY CAST(((((x'')AND(v0.c0)))OR(t0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt1 INDEXED BY i96, vt0 RIGHT OUTER JOIN t0 ON (NOT (vt1.c0 COLLATE RTRIM)) CROSS JOIN v0 ON ((((vt0.c0 COLLATE RTRIM)AND('JdOU2ZE|')))AND(t0.c0)) ORDER BY CAST(((((x'')AND(v0.c0)))OR(t0.c0)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, v0, t1, vt0 WHERE (447733101);
SELECT SUM(count) FROM (SELECT ALL ((447733101) IS TRUE)  as count FROM vt1, t0, v0, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, v0, t1, vt0 WHERE (447733101);
SELECT SUM(count) FROM (SELECT ALL ((447733101) IS TRUE)  as count FROM vt1, t0, v0, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, v0, t1, vt0 WHERE (447733101);
SELECT ALL * FROM v0, vt0, t0 WHERE (CAST(v0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (CAST(v0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (CAST(v0.c0 AS TEXT));
SELECT ALL * FROM t0 WHERE (((((t0.c0)&(t0.c0))) NOT NULL)) ORDER BY (((((t0.c0 IN ()))OR((t0.c0 IN (t0.c0)))))AND(((NULL) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)&(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0 IN ()))OR((t0.c0 IN (t0.c0)))))AND(((NULL) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c0)&(t0.c0))) NOT NULL)) ORDER BY (((((t0.c0 IN ()))OR((t0.c0 IN (t0.c0)))))AND(((NULL) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)&(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0 IN ()))OR((t0.c0 IN (t0.c0)))))AND(((NULL) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c0)&(t0.c0))) NOT NULL)) ORDER BY (((((t0.c0 IN ()))OR((t0.c0 IN (t0.c0)))))AND(((NULL) NOTNULL)))  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt1 WHERE (CAST(x'' AS BLOB) COLLATE BINARY) ORDER BY CAST(t1.c18 AS INTEGER) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM t1, vt1 ORDER BY CAST(t1.c18 AS INTEGER) COLLATE NOCASE);
SELECT COUNT(*) FROM t1, vt1 WHERE (CAST(x'' AS BLOB) COLLATE BINARY) ORDER BY CAST(t1.c18 AS INTEGER) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM t1, vt1 ORDER BY CAST(t1.c18 AS INTEGER) COLLATE NOCASE);
SELECT COUNT(*) FROM t1, vt1 WHERE (CAST(x'' AS BLOB) COLLATE BINARY) ORDER BY CAST(t1.c18 AS INTEGER) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (x'49c8');
SELECT SUM(count) FROM (SELECT ALL ((x'49c8') IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (x'49c8');
SELECT SUM(count) FROM (SELECT ALL ((x'49c8') IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (x'49c8');
SELECT * FROM t1, vt1, v0 WHERE (((x'a042') NOT BETWEEN ((((NULL, t1.c18, v0.c0)) BETWEEN ((vt1.c0, t1.c1, vt1.c0)) AND ((v0.c0, t1.c2, v0.c0)))) AND (v0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN (NOT (t1.c18)) THEN CAST(x'' AS NUMERIC) WHEN ((t1.c0) ISNULL) THEN ((v0.c0)<<(t1.c18)) WHEN ((v0.c0) NOT BETWEEN (x'') AND ('1304448723')) THEN TRIM(t1.c2, t1.c18) ELSE ((t1.c2)*(t1.c2)) END DESC, (((((((v0.c0))<=((t1.c18))))AND(TYPEOF(DISTINCT NULL))))OR((((t1.c1, NULL, '-17503076')) BETWEEN ((t1.c1, t1.c18, vt1.c0)) AND ((t1.c2, t1.c1, vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'a042') NOT BETWEEN ((((NULL, t1.c18, v0.c0)) BETWEEN ((vt1.c0, t1.c1, vt1.c0)) AND ((v0.c0, t1.c2, v0.c0)))) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt1, v0 ORDER BY CASE WHEN (NOT (t1.c18)) THEN CAST(x'' AS NUMERIC) WHEN ((t1.c0) ISNULL) THEN ((v0.c0)<<(t1.c18)) WHEN ((v0.c0) NOT BETWEEN (x'') AND ('1304448723')) THEN TRIM(t1.c2, t1.c18) ELSE ((t1.c2)*(t1.c2)) END DESC, (((((((v0.c0))<=((t1.c18))))AND(TYPEOF(DISTINCT NULL))))OR((((t1.c1, NULL, '-17503076')) BETWEEN ((t1.c1, t1.c18, vt1.c0)) AND ((t1.c2, t1.c1, vt1.c0)))))  NULLS FIRST);
SELECT * FROM t1, vt1, v0 WHERE (((x'a042') NOT BETWEEN ((((NULL, t1.c18, v0.c0)) BETWEEN ((vt1.c0, t1.c1, vt1.c0)) AND ((v0.c0, t1.c2, v0.c0)))) AND (v0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN (NOT (t1.c18)) THEN CAST(x'' AS NUMERIC) WHEN ((t1.c0) ISNULL) THEN ((v0.c0)<<(t1.c18)) WHEN ((v0.c0) NOT BETWEEN (x'') AND ('1304448723')) THEN TRIM(t1.c2, t1.c18) ELSE ((t1.c2)*(t1.c2)) END DESC, (((((((v0.c0))<=((t1.c18))))AND(TYPEOF(DISTINCT NULL))))OR((((t1.c1, NULL, '-17503076')) BETWEEN ((t1.c1, t1.c18, vt1.c0)) AND ((t1.c2, t1.c1, vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'a042') NOT BETWEEN ((((NULL, t1.c18, v0.c0)) BETWEEN ((vt1.c0, t1.c1, vt1.c0)) AND ((v0.c0, t1.c2, v0.c0)))) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt1, v0 ORDER BY CASE WHEN (NOT (t1.c18)) THEN CAST(x'' AS NUMERIC) WHEN ((t1.c0) ISNULL) THEN ((v0.c0)<<(t1.c18)) WHEN ((v0.c0) NOT BETWEEN (x'') AND ('1304448723')) THEN TRIM(t1.c2, t1.c18) ELSE ((t1.c2)*(t1.c2)) END DESC, (((((((v0.c0))<=((t1.c18))))AND(TYPEOF(DISTINCT NULL))))OR((((t1.c1, NULL, '-17503076')) BETWEEN ((t1.c1, t1.c18, vt1.c0)) AND ((t1.c2, t1.c1, vt1.c0)))))  NULLS FIRST);
SELECT * FROM t1, vt1, v0 WHERE (((x'a042') NOT BETWEEN ((((NULL, t1.c18, v0.c0)) BETWEEN ((vt1.c0, t1.c1, vt1.c0)) AND ((v0.c0, t1.c2, v0.c0)))) AND (v0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN (NOT (t1.c18)) THEN CAST(x'' AS NUMERIC) WHEN ((t1.c0) ISNULL) THEN ((v0.c0)<<(t1.c18)) WHEN ((v0.c0) NOT BETWEEN (x'') AND ('1304448723')) THEN TRIM(t1.c2, t1.c18) ELSE ((t1.c2)*(t1.c2)) END DESC, (((((((v0.c0))<=((t1.c18))))AND(TYPEOF(DISTINCT NULL))))OR((((t1.c1, NULL, '-17503076')) BETWEEN ((t1.c1, t1.c18, vt1.c0)) AND ((t1.c2, t1.c1, vt1.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) ISNULL)  WHEN (((vt1.c0))<=((vt1.c0))) THEN CAST(NULL AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) ISNULL)  WHEN (((vt1.c0))<=((vt1.c0))) THEN CAST(NULL AS BLOB) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) ISNULL)  WHEN (((vt1.c0))<=((vt1.c0))) THEN CAST(NULL AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) ISNULL)  WHEN (((vt1.c0))<=((vt1.c0))) THEN CAST(NULL AS BLOB) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) ISNULL)  WHEN (((vt1.c0))<=((vt1.c0))) THEN CAST(NULL AS BLOB) END);
SELECT ALL * FROM v0, t1 WHERE (CAST(t1.c2 AS TEXT) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c2 AS TEXT) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (CAST(t1.c2 AS TEXT) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c2 AS TEXT) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (CAST(t1.c2 AS TEXT) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((t1.c0 COLLATE NOCASE)<>(t1.c18 COLLATE NOCASE)) INNER JOIN t1 ON ((vt1.c0) NOT BETWEEN (CAST(x'' AS NUMERIC)) AND ((((-1.095721498E9, t1.c18, t1.c0)) BETWEEN ((NULL, vt0.c0, t1.c0)) AND ((t1.c0, t1.c1, t1.c0))))) WHERE (((((t1.c0))<=((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t1.c0))<=((vt1.c0))) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((t1.c0 COLLATE NOCASE)<>(t1.c18 COLLATE NOCASE)) INNER JOIN t1 ON ((vt1.c0) NOT BETWEEN (CAST(x'' AS NUMERIC)) AND ((((-1.095721498E9, t1.c18, t1.c0)) BETWEEN ((NULL, vt0.c0, t1.c0)) AND ((t1.c0, t1.c1, t1.c0))))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((t1.c0 COLLATE NOCASE)<>(t1.c18 COLLATE NOCASE)) INNER JOIN t1 ON ((vt1.c0) NOT BETWEEN (CAST(x'' AS NUMERIC)) AND ((((-1.095721498E9, t1.c18, t1.c0)) BETWEEN ((NULL, vt0.c0, t1.c0)) AND ((t1.c0, t1.c1, t1.c0))))) WHERE (((((t1.c0))<=((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t1.c0))<=((vt1.c0))) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((t1.c0 COLLATE NOCASE)<>(t1.c18 COLLATE NOCASE)) INNER JOIN t1 ON ((vt1.c0) NOT BETWEEN (CAST(x'' AS NUMERIC)) AND ((((-1.095721498E9, t1.c18, t1.c0)) BETWEEN ((NULL, vt0.c0, t1.c0)) AND ((t1.c0, t1.c1, t1.c0))))));
SELECT * FROM v0 FULL OUTER JOIN t0 ON (((('6\]6ꍁC[VQ') ISNULL)) IS TRUE) LEFT OUTER JOIN t1 ON CAST(((t0.c0) NOT BETWEEN ('tij0ld') AND (t1.c0)) AS TEXT) WHERE (CASE WHEN LOWER(DISTINCT t0.c0) THEN CAST('0.15036391345871458' AS REAL) ELSE ((t1.c18) BETWEEN (t1.c18) AND (v0.c0)) END) ORDER BY ((((LIKELY(t1.c2))OR(t0.c0 COLLATE BINARY)))OR(((t1.c18) IS FALSE))) ASC, ABS(TRIM(DISTINCT x'4f37', t1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LOWER(DISTINCT t0.c0) THEN CAST('0.15036391345871458' AS REAL) ELSE ((t1.c18) BETWEEN (t1.c18) AND (v0.c0)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (((('6\]6ꍁC[VQ') ISNULL)) IS TRUE) LEFT OUTER JOIN t1 ON CAST(((t0.c0) NOT BETWEEN ('tij0ld') AND (t1.c0)) AS TEXT) ORDER BY ((((LIKELY(t1.c2))OR(t0.c0 COLLATE BINARY)))OR(((t1.c18) IS FALSE))) ASC, ABS(TRIM(DISTINCT x'4f37', t1.c2)) DESC);
SELECT * FROM v0 FULL OUTER JOIN t0 ON (((('6\]6ꍁC[VQ') ISNULL)) IS TRUE) LEFT OUTER JOIN t1 ON CAST(((t0.c0) NOT BETWEEN ('tij0ld') AND (t1.c0)) AS TEXT) WHERE (CASE WHEN LOWER(DISTINCT t0.c0) THEN CAST('0.15036391345871458' AS REAL) ELSE ((t1.c18) BETWEEN (t1.c18) AND (v0.c0)) END) ORDER BY ((((LIKELY(t1.c2))OR(t0.c0 COLLATE BINARY)))OR(((t1.c18) IS FALSE))) ASC, ABS(TRIM(DISTINCT x'4f37', t1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LOWER(DISTINCT t0.c0) THEN CAST('0.15036391345871458' AS REAL) ELSE ((t1.c18) BETWEEN (t1.c18) AND (v0.c0)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (((('6\]6ꍁC[VQ') ISNULL)) IS TRUE) LEFT OUTER JOIN t1 ON CAST(((t0.c0) NOT BETWEEN ('tij0ld') AND (t1.c0)) AS TEXT) ORDER BY ((((LIKELY(t1.c2))OR(t0.c0 COLLATE BINARY)))OR(((t1.c18) IS FALSE))) ASC, ABS(TRIM(DISTINCT x'4f37', t1.c2)) DESC);
SELECT * FROM v0 FULL OUTER JOIN t0 ON (((('6\]6ꍁC[VQ') ISNULL)) IS TRUE) LEFT OUTER JOIN t1 ON CAST(((t0.c0) NOT BETWEEN ('tij0ld') AND (t1.c0)) AS TEXT) WHERE (CASE WHEN LOWER(DISTINCT t0.c0) THEN CAST('0.15036391345871458' AS REAL) ELSE ((t1.c18) BETWEEN (t1.c18) AND (v0.c0)) END) ORDER BY ((((LIKELY(t1.c2))OR(t0.c0 COLLATE BINARY)))OR(((t1.c18) IS FALSE))) ASC, ABS(TRIM(DISTINCT x'4f37', t1.c2)) DESC;
SELECT * FROM vt1, vt0, v0, t1, t0 WHERE ((((~ (vt0.c0)))+(((((((((((((vt1.c0)AND(t1.c18)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(vt0.c0)))OR(x''))))) ORDER BY ((((t1.c2)OR(t1.c1 COLLATE RTRIM)))AND(((0.5253071019429386)>(v0.c0)))) DESC  NULLS FIRST, CASE WHEN CAST(t1.c0 AS REAL) THEN t1.c1 COLLATE BINARY END ASC, (- (CASE '-1982790125'  WHEN t1.c0 THEN x'' WHEN t1.c18 THEN v0.c0 WHEN t1.c2 THEN t1.c1 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))+(((((((((((((vt1.c0)AND(t1.c18)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(vt0.c0)))OR(x''))))) IS TRUE)  as count FROM vt1, vt0, v0, t1, t0 ORDER BY ((((t1.c2)OR(t1.c1 COLLATE RTRIM)))AND(((0.5253071019429386)>(v0.c0)))) DESC  NULLS FIRST, CASE WHEN CAST(t1.c0 AS REAL) THEN t1.c1 COLLATE BINARY END ASC, (- (CASE '-1982790125'  WHEN t1.c0 THEN x'' WHEN t1.c18 THEN v0.c0 WHEN t1.c2 THEN t1.c1 ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT * FROM vt1, vt0, v0, t1, t0 WHERE ((((~ (vt0.c0)))+(((((((((((((vt1.c0)AND(t1.c18)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(vt0.c0)))OR(x''))))) ORDER BY ((((t1.c2)OR(t1.c1 COLLATE RTRIM)))AND(((0.5253071019429386)>(v0.c0)))) DESC  NULLS FIRST, CASE WHEN CAST(t1.c0 AS REAL) THEN t1.c1 COLLATE BINARY END ASC, (- (CASE '-1982790125'  WHEN t1.c0 THEN x'' WHEN t1.c18 THEN v0.c0 WHEN t1.c2 THEN t1.c1 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))+(((((((((((((vt1.c0)AND(t1.c18)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(vt0.c0)))OR(x''))))) IS TRUE)  as count FROM vt1, vt0, v0, t1, t0 ORDER BY ((((t1.c2)OR(t1.c1 COLLATE RTRIM)))AND(((0.5253071019429386)>(v0.c0)))) DESC  NULLS FIRST, CASE WHEN CAST(t1.c0 AS REAL) THEN t1.c1 COLLATE BINARY END ASC, (- (CASE '-1982790125'  WHEN t1.c0 THEN x'' WHEN t1.c18 THEN v0.c0 WHEN t1.c2 THEN t1.c1 ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT * FROM vt1, vt0, v0, t1, t0 WHERE ((((~ (vt0.c0)))+(((((((((((((vt1.c0)AND(t1.c18)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(vt0.c0)))OR(x''))))) ORDER BY ((((t1.c2)OR(t1.c1 COLLATE RTRIM)))AND(((0.5253071019429386)>(v0.c0)))) DESC  NULLS FIRST, CASE WHEN CAST(t1.c0 AS REAL) THEN t1.c1 COLLATE BINARY END ASC, (- (CASE '-1982790125'  WHEN t1.c0 THEN x'' WHEN t1.c18 THEN v0.c0 WHEN t1.c2 THEN t1.c1 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((((t0.c0))>((t0.c0))) AS NUMERIC)) ORDER BY (((((vt0.c0)AND(t0.c0)))AND(t0.c0)) IN ()), (((~ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('1067279567'))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), CAST(((t0.c0) NOTNULL) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0))>((t0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c0)AND(t0.c0)))AND(t0.c0)) IN ()), (((~ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('1067279567'))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), CAST(((t0.c0) NOTNULL) AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((((t0.c0))>((t0.c0))) AS NUMERIC)) ORDER BY (((((vt0.c0)AND(t0.c0)))AND(t0.c0)) IN ()), (((~ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('1067279567'))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), CAST(((t0.c0) NOTNULL) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0))>((t0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c0)AND(t0.c0)))AND(t0.c0)) IN ()), (((~ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('1067279567'))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), CAST(((t0.c0) NOTNULL) AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((((t0.c0))>((t0.c0))) AS NUMERIC)) ORDER BY (((((vt0.c0)AND(t0.c0)))AND(t0.c0)) IN ()), (((~ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('1067279567'))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), CAST(((t0.c0) NOTNULL) AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)&(vt0.c0)))))) ORDER BY ((((vt0.c0 IN ()), ((vt0.c0)=(NULL)), ((vt0.c0) ISNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE -1.7976931348623157E308  WHEN vt0.c0 THEN vt0.c0 END))=((((vt0.c0)>>(vt0.c0)), ((vt0.c0)/(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)&(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ()), ((vt0.c0)=(NULL)), ((vt0.c0) ISNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE -1.7976931348623157E308  WHEN vt0.c0 THEN vt0.c0 END))=((((vt0.c0)>>(vt0.c0)), ((vt0.c0)/(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)&(vt0.c0)))))) ORDER BY ((((vt0.c0 IN ()), ((vt0.c0)=(NULL)), ((vt0.c0) ISNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE -1.7976931348623157E308  WHEN vt0.c0 THEN vt0.c0 END))=((((vt0.c0)>>(vt0.c0)), ((vt0.c0)/(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)&(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ()), ((vt0.c0)=(NULL)), ((vt0.c0) ISNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE -1.7976931348623157E308  WHEN vt0.c0 THEN vt0.c0 END))=((((vt0.c0)>>(vt0.c0)), ((vt0.c0)/(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)&(vt0.c0)))))) ORDER BY ((((vt0.c0 IN ()), ((vt0.c0)=(NULL)), ((vt0.c0) ISNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE -1.7976931348623157E308  WHEN vt0.c0 THEN vt0.c0 END))=((((vt0.c0)>>(vt0.c0)), ((vt0.c0)/(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t1, vt0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT NULL)) IS TRUE) WHERE (((((t1.c1) BETWEEN (t1.c18) AND (vt1.c0)))OR((vt1.c0 IN (t1.c2, t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) BETWEEN (t1.c18) AND (vt1.c0)))OR((vt1.c0 IN (t1.c2, t1.c0))))) IS TRUE)  as count FROM vt1, t1 NOT INDEXED, vt0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT NULL)) IS TRUE));
SELECT COUNT(*) FROM vt1, t1, vt0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT NULL)) IS TRUE) WHERE (((((t1.c1) BETWEEN (t1.c18) AND (vt1.c0)))OR((vt1.c0 IN (t1.c2, t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) BETWEEN (t1.c18) AND (vt1.c0)))OR((vt1.c0 IN (t1.c2, t1.c0))))) IS TRUE)  as count FROM vt1, t1 NOT INDEXED, vt0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT NULL)) IS TRUE));
SELECT COUNT(*) FROM vt1, t1, vt0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT NULL)) IS TRUE) WHERE (((((t1.c1) BETWEEN (t1.c18) AND (vt1.c0)))OR((vt1.c0 IN (t1.c2, t1.c0)))));
SELECT * FROM v0 CROSS JOIN t0 ON ((((t1.c18) BETWEEN (t1.c0) AND (t1.c2))) BETWEEN (((t1.c2) BETWEEN (v0.c0) AND ('Iꢤ'))) AND (TYPEOF(t1.c2))) INNER JOIN vt0 ON (- ((~ (t1.c18)))) INNER JOIN vt1 ON (((((vt0.c0) BETWEEN (0X3275d712) AND (t1.c2))))>=((t1.c2 COLLATE BINARY))) LEFT OUTER JOIN t1 ON (- (((t1.c1)AND(t0.c0)))) WHERE ((('~aE'',l')-(CAST(t1.c18 AS BLOB)))) ORDER BY (((t1.c2)GLOB(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((('~aE'',l')-(CAST(t1.c18 AS BLOB)))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((((t1.c18) BETWEEN (t1.c0) AND (t1.c2))) BETWEEN (((t1.c2) BETWEEN (v0.c0) AND ('Iꢤ'))) AND (TYPEOF(t1.c2))) INNER JOIN vt0 ON (- ((~ (t1.c18)))) INNER JOIN vt1 ON (((((vt0.c0) BETWEEN (0X3275d712) AND (t1.c2))))>=((t1.c2 COLLATE BINARY))) LEFT OUTER JOIN t1 ON (- (((t1.c1)AND(t0.c0)))) ORDER BY (((t1.c2)GLOB(vt0.c0)) IN ()));
SELECT * FROM v0 CROSS JOIN t0 ON ((((t1.c18) BETWEEN (t1.c0) AND (t1.c2))) BETWEEN (((t1.c2) BETWEEN (v0.c0) AND ('Iꢤ'))) AND (TYPEOF(t1.c2))) INNER JOIN vt0 ON (- ((~ (t1.c18)))) INNER JOIN vt1 ON (((((vt0.c0) BETWEEN (0X3275d712) AND (t1.c2))))>=((t1.c2 COLLATE BINARY))) LEFT OUTER JOIN t1 ON (- (((t1.c1)AND(t0.c0)))) WHERE ((('~aE'',l')-(CAST(t1.c18 AS BLOB)))) ORDER BY (((t1.c2)GLOB(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((('~aE'',l')-(CAST(t1.c18 AS BLOB)))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((((t1.c18) BETWEEN (t1.c0) AND (t1.c2))) BETWEEN (((t1.c2) BETWEEN (v0.c0) AND ('Iꢤ'))) AND (TYPEOF(t1.c2))) INNER JOIN vt0 ON (- ((~ (t1.c18)))) INNER JOIN vt1 ON (((((vt0.c0) BETWEEN (0X3275d712) AND (t1.c2))))>=((t1.c2 COLLATE BINARY))) LEFT OUTER JOIN t1 ON (- (((t1.c1)AND(t0.c0)))) ORDER BY (((t1.c2)GLOB(vt0.c0)) IN ()));
SELECT * FROM v0 CROSS JOIN t0 ON ((((t1.c18) BETWEEN (t1.c0) AND (t1.c2))) BETWEEN (((t1.c2) BETWEEN (v0.c0) AND ('Iꢤ'))) AND (TYPEOF(t1.c2))) INNER JOIN vt0 ON (- ((~ (t1.c18)))) INNER JOIN vt1 ON (((((vt0.c0) BETWEEN (0X3275d712) AND (t1.c2))))>=((t1.c2 COLLATE BINARY))) LEFT OUTER JOIN t1 ON (- (((t1.c1)AND(t0.c0)))) WHERE ((('~aE'',l')-(CAST(t1.c18 AS BLOB)))) ORDER BY (((t1.c2)GLOB(vt0.c0)) IN ());
SELECT ALL * FROM vt0, t0 CROSS JOIN t1 ON ((((t0.c0) IS FALSE)) ISNULL) FULL OUTER JOIN v0 ON (((t1.c0)%('188103477')) IN ()) WHERE ((((0.683896862560393)) NOT BETWEEN ((((((t1.c18)OR(NULL)))OR(t0.c0)))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((0.683896862560393)) NOT BETWEEN ((((((t1.c18)OR(NULL)))OR(t0.c0)))) AND ((NULL)))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN t1 ON ((((t0.c0) IS FALSE)) ISNULL) FULL OUTER JOIN v0 ON (((t1.c0)%('188103477')) IN ()));
SELECT ALL * FROM vt0, t0 CROSS JOIN t1 ON ((((t0.c0) IS FALSE)) ISNULL) FULL OUTER JOIN v0 ON (((t1.c0)%('188103477')) IN ()) WHERE ((((0.683896862560393)) NOT BETWEEN ((((((t1.c18)OR(NULL)))OR(t0.c0)))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((0.683896862560393)) NOT BETWEEN ((((((t1.c18)OR(NULL)))OR(t0.c0)))) AND ((NULL)))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN t1 ON ((((t0.c0) IS FALSE)) ISNULL) FULL OUTER JOIN v0 ON (((t1.c0)%('188103477')) IN ()));
SELECT ALL * FROM vt0, t0 CROSS JOIN t1 ON ((((t0.c0) IS FALSE)) ISNULL) FULL OUTER JOIN v0 ON (((t1.c0)%('188103477')) IN ()) WHERE ((((0.683896862560393)) NOT BETWEEN ((((((t1.c18)OR(NULL)))OR(t0.c0)))) AND ((NULL))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN x'43bd' THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)) AND ((((vt1.c0)>>(vt1.c0))))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN x'43bd' THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)) AND ((((vt1.c0)>>(vt1.c0))))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN x'43bd' THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)) AND ((((vt1.c0)>>(vt1.c0))))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN x'43bd' THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)) AND ((((vt1.c0)>>(vt1.c0))))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN x'43bd' THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)) AND ((((vt1.c0)>>(vt1.c0))))) WHERE (v0.c0);
SELECT ALL * FROM t1, v0, vt0, vt1 WHERE ((('e1''柂1') IS FALSE)) ORDER BY ((t1.c1 IN (t1.c1, 0xfffffffffe088bc7)) IN (CAST(vt1.c0 AS BLOB))) ASC, (((~ (t1.c2)))<(NULLIF(DISTINCT t1.c2, t1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((('e1''柂1') IS FALSE)) IS TRUE)  as count FROM t1, v0, vt0, vt1 ORDER BY ((t1.c1 IN (t1.c1, 0xfffffffffe088bc7)) IN (CAST(vt1.c0 AS BLOB))) ASC, (((~ (t1.c2)))<(NULLIF(DISTINCT t1.c2, t1.c2))));
SELECT ALL * FROM t1, v0, vt0, vt1 WHERE ((('e1''柂1') IS FALSE)) ORDER BY ((t1.c1 IN (t1.c1, 0xfffffffffe088bc7)) IN (CAST(vt1.c0 AS BLOB))) ASC, (((~ (t1.c2)))<(NULLIF(DISTINCT t1.c2, t1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((('e1''柂1') IS FALSE)) IS TRUE)  as count FROM t1, v0, vt0, vt1 ORDER BY ((t1.c1 IN (t1.c1, 0xfffffffffe088bc7)) IN (CAST(vt1.c0 AS BLOB))) ASC, (((~ (t1.c2)))<(NULLIF(DISTINCT t1.c2, t1.c2))));
SELECT ALL * FROM t1, v0, vt0, vt1 WHERE ((('e1''柂1') IS FALSE)) ORDER BY ((t1.c1 IN (t1.c1, 0xfffffffffe088bc7)) IN (CAST(vt1.c0 AS BLOB))) ASC, (((~ (t1.c2)))<(NULLIF(DISTINCT t1.c2, t1.c2)));
SELECT * FROM t1, vt0, vt1, v0 WHERE ((CASE WHEN v0.c0 THEN t1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN t1.c0 END IN ())) IS TRUE)  as count FROM t1, vt0, vt1, v0);
SELECT * FROM t1, vt0, vt1, v0 WHERE ((CASE WHEN v0.c0 THEN t1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN t1.c0 END IN ())) IS TRUE)  as count FROM t1, vt0, vt1, v0);
SELECT * FROM t1, vt0, vt1, v0 WHERE ((CASE WHEN v0.c0 THEN t1.c0 END IN ()));
SELECT COUNT(*) FROM vt0, t1, t0, v0 WHERE (((CASE WHEN t1.c1 THEN v0.c0 END)>=(0.7537593703250322 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c1 THEN v0.c0 END)>=(0.7537593703250322 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1, t0, v0);
SELECT COUNT(*) FROM vt0, t1, t0, v0 WHERE (((CASE WHEN t1.c1 THEN v0.c0 END)>=(0.7537593703250322 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c1 THEN v0.c0 END)>=(0.7537593703250322 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1, t0, v0);
SELECT COUNT(*) FROM vt0, t1, t0, v0 WHERE (((CASE WHEN t1.c1 THEN v0.c0 END)>=(0.7537593703250322 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, v0, t1, vt1 WHERE ('0.277925903402638') ORDER BY ((CASE WHEN v0.c0 THEN t1.c2 WHEN t1.c18 THEN t1.c18 WHEN t1.c1 THEN t1.c1 END) BETWEEN (CASE WHEN t1.c18 THEN v0.c0 ELSE t1.c0 END) AND (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, CASE WHEN CAST(t1.c18 AS NUMERIC) THEN (((NULL))<((t1.c0))) END DESC, ((((('-1174696460')) BETWEEN ((t1.c1)) AND ((vt1.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT (('0.277925903402638') IS TRUE)  as count FROM vt0, v0, t1, vt1 ORDER BY ((CASE WHEN v0.c0 THEN t1.c2 WHEN t1.c18 THEN t1.c18 WHEN t1.c1 THEN t1.c1 END) BETWEEN (CASE WHEN t1.c18 THEN v0.c0 ELSE t1.c0 END) AND (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, CASE WHEN CAST(t1.c18 AS NUMERIC) THEN (((NULL))<((t1.c0))) END DESC, ((((('-1174696460')) BETWEEN ((t1.c1)) AND ((vt1.c0)))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, v0, t1, vt1 WHERE ('0.277925903402638') ORDER BY ((CASE WHEN v0.c0 THEN t1.c2 WHEN t1.c18 THEN t1.c18 WHEN t1.c1 THEN t1.c1 END) BETWEEN (CASE WHEN t1.c18 THEN v0.c0 ELSE t1.c0 END) AND (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, CASE WHEN CAST(t1.c18 AS NUMERIC) THEN (((NULL))<((t1.c0))) END DESC, ((((('-1174696460')) BETWEEN ((t1.c1)) AND ((vt1.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT (('0.277925903402638') IS TRUE)  as count FROM vt0, v0, t1, vt1 ORDER BY ((CASE WHEN v0.c0 THEN t1.c2 WHEN t1.c18 THEN t1.c18 WHEN t1.c1 THEN t1.c1 END) BETWEEN (CASE WHEN t1.c18 THEN v0.c0 ELSE t1.c0 END) AND (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, CASE WHEN CAST(t1.c18 AS NUMERIC) THEN (((NULL))<((t1.c0))) END DESC, ((((('-1174696460')) BETWEEN ((t1.c1)) AND ((vt1.c0)))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, v0, t1, vt1 WHERE ('0.277925903402638') ORDER BY ((CASE WHEN v0.c0 THEN t1.c2 WHEN t1.c18 THEN t1.c18 WHEN t1.c1 THEN t1.c1 END) BETWEEN (CASE WHEN t1.c18 THEN v0.c0 ELSE t1.c0 END) AND (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, CASE WHEN CAST(t1.c18 AS NUMERIC) THEN (((NULL))<((t1.c0))) END DESC, ((((('-1174696460')) BETWEEN ((t1.c1)) AND ((vt1.c0)))) NOTNULL);
SELECT COUNT(*) FROM t0, v0, vt0, t1 WHERE (((CASE t1.c0  WHEN v0.c0 THEN t1.c1 ELSE t1.c0 END)OR((t1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c0  WHEN v0.c0 THEN t1.c1 ELSE t1.c0 END)OR((t1.c1 IN ())))) IS TRUE)  as count FROM t0, v0, vt0, t1);
SELECT COUNT(*) FROM t0, v0, vt0, t1 WHERE (((CASE t1.c0  WHEN v0.c0 THEN t1.c1 ELSE t1.c0 END)OR((t1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c0  WHEN v0.c0 THEN t1.c1 ELSE t1.c0 END)OR((t1.c1 IN ())))) IS TRUE)  as count FROM t0, v0, vt0, t1);
SELECT COUNT(*) FROM t0, v0, vt0, t1 WHERE (((CASE t1.c0  WHEN v0.c0 THEN t1.c1 ELSE t1.c0 END)OR((t1.c1 IN ()))));
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE ((+ (json_array_length(vt1.c0, vt1.c0)))) ORDER BY TYPEOF(DISTINCT CAST(vt1.c0 AS TEXT)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (json_array_length(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY TYPEOF(DISTINCT CAST(vt1.c0 AS TEXT)) DESC);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE ((+ (json_array_length(vt1.c0, vt1.c0)))) ORDER BY TYPEOF(DISTINCT CAST(vt1.c0 AS TEXT)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (json_array_length(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY TYPEOF(DISTINCT CAST(vt1.c0 AS TEXT)) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))))<=((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))))<=((t1.c0 IN ())))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))))<=((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))))<=((t1.c0 IN ())))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))))<=((t1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((vt0.c0) NOT BETWEEN (t0.c0) AND (NULL)) COLLATE RTRIM WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((vt0.c0) NOT BETWEEN (t0.c0) AND (NULL)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((vt0.c0) NOT BETWEEN (t0.c0) AND (NULL)) COLLATE RTRIM WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((vt0.c0) NOT BETWEEN (t0.c0) AND (NULL)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((vt0.c0) NOT BETWEEN (t0.c0) AND (NULL)) COLLATE RTRIM WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))=((vt1.c0)))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))==((vt1.c0)))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))=((vt1.c0)))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))==((vt1.c0)))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))=((vt1.c0)))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (vt1.c0)));
SELECT COUNT(*) FROM v0, t0, vt1, vt0 WHERE ('-610305017');
SELECT SUM(count) FROM (SELECT (('-610305017') IS TRUE)  as count FROM v0, t0, vt1, vt0);
SELECT COUNT(*) FROM v0, t0, vt1, vt0 WHERE ('-610305017');
SELECT SUM(count) FROM (SELECT (('-610305017') IS TRUE)  as count FROM v0, t0, vt1, vt0);
SELECT COUNT(*) FROM v0, t0, vt1, vt0 WHERE ('-610305017');
SELECT COUNT(*) FROM vt1, t0, t1, v0 WHERE (((((vt1.c0)AND(t0.c0)))OR(t1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(t0.c0)))OR(t1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, t1, v0);
SELECT COUNT(*) FROM vt1, t0, t1, v0 WHERE (((((vt1.c0)AND(t0.c0)))OR(t1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(t0.c0)))OR(t1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, t1, v0);
SELECT COUNT(*) FROM vt1, t0, t1, v0 WHERE (((((vt1.c0)AND(t0.c0)))OR(t1.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((((0X39430598)OR(vt0.c0))) BETWEEN (TYPEOF(v0.c0)) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((0X39430598)OR(vt0.c0))) BETWEEN (TYPEOF(v0.c0)) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((((0X39430598)OR(vt0.c0))) BETWEEN (TYPEOF(v0.c0)) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((0X39430598)OR(vt0.c0))) BETWEEN (TYPEOF(v0.c0)) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((((0X39430598)OR(vt0.c0))) BETWEEN (TYPEOF(v0.c0)) AND ((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1, v0, t0, vt0, t1 WHERE ((((((v0.c0)OR(t1.c1)))AND(vt0.c0)) IN ())) ORDER BY CASE ((vt1.c0) NOT NULL)  WHEN ((t1.c1) NOT BETWEEN (t1.c18) AND (t1.c18)) THEN ((t1.c2) BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((vt0.c0) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)OR(t1.c1)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, v0, t0, vt0, t1 ORDER BY CASE ((vt1.c0) NOT NULL)  WHEN ((t1.c1) NOT BETWEEN (t1.c18) AND (t1.c18)) THEN ((t1.c2) BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((vt0.c0) IS TRUE) END ASC);
SELECT ALL COUNT(*) FROM vt1, v0, t0, vt0, t1 WHERE ((((((v0.c0)OR(t1.c1)))AND(vt0.c0)) IN ())) ORDER BY CASE ((vt1.c0) NOT NULL)  WHEN ((t1.c1) NOT BETWEEN (t1.c18) AND (t1.c18)) THEN ((t1.c2) BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((vt0.c0) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)OR(t1.c1)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, v0, t0, vt0, t1 ORDER BY CASE ((vt1.c0) NOT NULL)  WHEN ((t1.c1) NOT BETWEEN (t1.c18) AND (t1.c18)) THEN ((t1.c2) BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((vt0.c0) IS TRUE) END ASC);
SELECT ALL COUNT(*) FROM vt1, v0, t0, vt0, t1 WHERE ((((((v0.c0)OR(t1.c1)))AND(vt0.c0)) IN ())) ORDER BY CASE ((vt1.c0) NOT NULL)  WHEN ((t1.c1) NOT BETWEEN (t1.c18) AND (t1.c18)) THEN ((t1.c2) BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((vt0.c0) IS TRUE) END ASC;
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0)AND(UPPER(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(UPPER(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0)AND(UPPER(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(UPPER(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0)AND(UPPER(DISTINCT v0.c0))));
SELECT ALL * FROM t0, v0, t1, vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (t1.c2) AND (vt1.c0)))<>((((t1.c0, v0.c0, t1.c2)) BETWEEN ((NULL, v0.c0, v0.c0)) AND ((vt0.c0, t1.c2, t0.c0)))))) ORDER BY t0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (t1.c2) AND (vt1.c0)))<>((((t1.c0, v0.c0, t1.c2)) BETWEEN ((NULL, v0.c0, v0.c0)) AND ((vt0.c0, t1.c2, t0.c0)))))) IS TRUE)  as count FROM t0, v0, t1, vt1, vt0 ORDER BY t0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0, t1, vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (t1.c2) AND (vt1.c0)))<>((((t1.c0, v0.c0, t1.c2)) BETWEEN ((NULL, v0.c0, v0.c0)) AND ((vt0.c0, t1.c2, t0.c0)))))) ORDER BY t0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (t1.c2) AND (vt1.c0)))<>((((t1.c0, v0.c0, t1.c2)) BETWEEN ((NULL, v0.c0, v0.c0)) AND ((vt0.c0, t1.c2, t0.c0)))))) IS TRUE)  as count FROM t0, v0, t1, vt1, vt0 ORDER BY t0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0, t1, vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (t1.c2) AND (vt1.c0)))<>((((t1.c0, v0.c0, t1.c2)) BETWEEN ((NULL, v0.c0, v0.c0)) AND ((vt0.c0, t1.c2, t0.c0)))))) ORDER BY t0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((CASE '2061814266'  WHEN vt1.c0 THEN t0.c0 END, (+ (vt0.c0)), (vt0.c0 IN (vt1.c0))))>=((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END, (((vt0.c0))=((vt1.c0))), x''))));
SELECT SUM(count) FROM (SELECT (((((CASE '2061814266'  WHEN vt1.c0 THEN t0.c0 END, (+ (vt0.c0)), (vt0.c0 IN (vt1.c0))))>=((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END, (((vt0.c0))==((vt1.c0))), x'')))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((CASE '2061814266'  WHEN vt1.c0 THEN t0.c0 END, (+ (vt0.c0)), (vt0.c0 IN (vt1.c0))))>=((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END, (((vt0.c0))=((vt1.c0))), x''))));
SELECT SUM(count) FROM (SELECT (((((CASE '2061814266'  WHEN vt1.c0 THEN t0.c0 END, (+ (vt0.c0)), (vt0.c0 IN (vt1.c0))))>=((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END, (((vt0.c0))==((vt1.c0))), x'')))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((CASE '2061814266'  WHEN vt1.c0 THEN t0.c0 END, (+ (vt0.c0)), (vt0.c0 IN (vt1.c0))))>=((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END, (((vt0.c0))=((vt1.c0))), x''))));
SELECT ALL COUNT(*) FROM v0, t0, vt0, t1, vt1 WHERE ('') ORDER BY (~ (v0.c0)) COLLATE RTRIM  NULLS FIRST, (((((+ (t0.c0)))AND(MIN(t0.c0, t1.c0, t1.c18, x'e294'))))OR(((vt1.c0) BETWEEN (t1.c18) AND (x'65c0'))))  NULLS FIRST, x'3452';
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, t0, vt0, t1 NOT INDEXED, vt1 ORDER BY (~ (v0.c0)) COLLATE RTRIM  NULLS FIRST, (((((+ (t0.c0)))AND(MIN(t0.c0, t1.c0, t1.c18, x'e294'))))OR(((vt1.c0) BETWEEN (t1.c18) AND (x'65c0'))))  NULLS FIRST, x'3452');
SELECT ALL COUNT(*) FROM v0, t0, vt0, t1, vt1 WHERE ('') ORDER BY (~ (v0.c0)) COLLATE RTRIM  NULLS FIRST, (((((+ (t0.c0)))AND(MIN(t0.c0, t1.c0, t1.c18, x'e294'))))OR(((vt1.c0) BETWEEN (t1.c18) AND (x'65c0'))))  NULLS FIRST, x'3452';
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, t0, vt0, t1 NOT INDEXED, vt1 ORDER BY (~ (v0.c0)) COLLATE RTRIM  NULLS FIRST, (((((+ (t0.c0)))AND(MIN(t0.c0, t1.c0, t1.c18, x'e294'))))OR(((vt1.c0) BETWEEN (t1.c18) AND (x'65c0'))))  NULLS FIRST, x'3452');
SELECT ALL COUNT(*) FROM v0, t0, vt0, t1, vt1 WHERE ('') ORDER BY (~ (v0.c0)) COLLATE RTRIM  NULLS FIRST, (((((+ (t0.c0)))AND(MIN(t0.c0, t1.c0, t1.c18, x'e294'))))OR(((vt1.c0) BETWEEN (t1.c18) AND (x'65c0'))))  NULLS FIRST, x'3452';
SELECT * FROM vt1, vt0, t1 RIGHT OUTER JOIN v0 ON (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c0))))IS NOT((((t1.c2, t1.c0, vt1.c0))<((t1.c0, vt1.c0, t1.c0))))) WHERE (CAST(CASE WHEN t1.c18 THEN t1.c0 ELSE t1.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t1.c18 THEN t1.c0 ELSE t1.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, t1 RIGHT OUTER JOIN v0 ON (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c0))))IS NOT((((t1.c2, t1.c0, vt1.c0))<((t1.c0, vt1.c0, t1.c0))))));
SELECT * FROM vt1, vt0, t1 RIGHT OUTER JOIN v0 ON (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c0))))IS NOT((((t1.c2, t1.c0, vt1.c0))<((t1.c0, vt1.c0, t1.c0))))) WHERE (CAST(CASE WHEN t1.c18 THEN t1.c0 ELSE t1.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t1.c18 THEN t1.c0 ELSE t1.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, t1 RIGHT OUTER JOIN v0 ON (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c0))))IS NOT((((t1.c2, t1.c0, vt1.c0))<((t1.c0, vt1.c0, t1.c0))))));
SELECT * FROM vt1, vt0, t1 RIGHT OUTER JOIN v0 ON (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c0))))IS NOT((((t1.c2, t1.c0, vt1.c0))<((t1.c0, vt1.c0, t1.c0))))) WHERE (CAST(CASE WHEN t1.c18 THEN t1.c0 ELSE t1.c0 END AS NUMERIC));
SELECT ALL * FROM t1 WHERE (((((t1.c18) NOT NULL)) BETWEEN (((t1.c18) IS TRUE)) AND (((((t1.c18)OR(t1.c18)))AND(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c18) NOT NULL)) BETWEEN (((t1.c18) IS TRUE)) AND (((((t1.c18)OR(t1.c18)))AND(t1.c2))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c18) NOT NULL)) BETWEEN (((t1.c18) IS TRUE)) AND (((((t1.c18)OR(t1.c18)))AND(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c18) NOT NULL)) BETWEEN (((t1.c18) IS TRUE)) AND (((((t1.c18)OR(t1.c18)))AND(t1.c2))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c18) NOT NULL)) BETWEEN (((t1.c18) IS TRUE)) AND (((((t1.c18)OR(t1.c18)))AND(t1.c2)))));
SELECT * FROM vt0 WHERE (((CASE 0.5466228406052737  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((vt0.c0 IN ())))) ORDER BY '-668024529';
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.5466228406052737  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY '-668024529');
SELECT * FROM vt0 WHERE (((CASE 0.5466228406052737  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((vt0.c0 IN ())))) ORDER BY '-668024529';
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.5466228406052737  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY '-668024529');
SELECT * FROM vt0 WHERE (((CASE 0.5466228406052737  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((vt0.c0 IN ())))) ORDER BY '-668024529';
SELECT ALL COUNT(*) FROM v0, vt0 INNER JOIN t0 ON (+ (((((((((v0.c0)AND(t0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(t0.c0)))) WHERE (((vt0.c0) IS TRUE)) ORDER BY ((x'')&((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON (+ (((((((((v0.c0)AND(t0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(t0.c0)))) ORDER BY ((x'')&((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM v0, vt0 INNER JOIN t0 ON (+ (((((((((v0.c0)AND(t0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(t0.c0)))) WHERE (((vt0.c0) IS TRUE)) ORDER BY ((x'')&((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON (+ (((((((((v0.c0)AND(t0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(t0.c0)))) ORDER BY ((x'')&((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM v0, vt0 INNER JOIN t0 ON (+ (((((((((v0.c0)AND(t0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(t0.c0)))) WHERE (((vt0.c0) IS TRUE)) ORDER BY ((x'')&((v0.c0 IN ())));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON 0.6656203784851839 INNER JOIN v0 ON ((CAST(t1.c1 AS NUMERIC))*(((vt0.c0) ISNULL))) RIGHT OUTER JOIN t1 ON ((((t1.c0) BETWEEN (t1.c0) AND (t1.c2)))>=(((t1.c1)&(t1.c2)))) WHERE (-17503076);
SELECT SUM(count) FROM (SELECT ((-17503076) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON 0.6656203784851839 INNER JOIN v0 ON ((CAST(t1.c1 AS NUMERIC))*(((vt0.c0) ISNULL))) RIGHT OUTER JOIN t1 ON ((((t1.c0) BETWEEN (t1.c0) AND (t1.c2)))>=(((t1.c1)&(t1.c2)))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON 0.6656203784851839 INNER JOIN v0 ON ((CAST(t1.c1 AS NUMERIC))*(((vt0.c0) ISNULL))) RIGHT OUTER JOIN t1 ON ((((t1.c0) BETWEEN (t1.c0) AND (t1.c2)))>=(((t1.c1)&(t1.c2)))) WHERE (-17503076);
SELECT SUM(count) FROM (SELECT ((-17503076) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON 0.6656203784851839 INNER JOIN v0 ON ((CAST(t1.c1 AS NUMERIC))*(((vt0.c0) ISNULL))) RIGHT OUTER JOIN t1 ON ((((t1.c0) BETWEEN (t1.c0) AND (t1.c2)))>=(((t1.c1)&(t1.c2)))));
SELECT * FROM v0, t0 INDEXED BY i96, vt0, vt1, t1 WHERE (((((t1.c0) NOT NULL)) IS FALSE)) ORDER BY CAST((t1.c2 IN ()) AS REAL) ASC  NULLS LAST, -303973917;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM v0, t0 INDEXED BY i96, vt0, vt1, t1 ORDER BY CAST((t1.c2 IN ()) AS REAL) ASC  NULLS LAST, -303973917);
SELECT * FROM v0, t0 INDEXED BY i96, vt0, vt1, t1 WHERE (((((t1.c0) NOT NULL)) IS FALSE)) ORDER BY CAST((t1.c2 IN ()) AS REAL) ASC  NULLS LAST, -303973917;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM v0, t0 INDEXED BY i96, vt0, vt1, t1 ORDER BY CAST((t1.c2 IN ()) AS REAL) ASC  NULLS LAST, -303973917);
SELECT COUNT(*) FROM t1, vt0, t0 WHERE (((CAST(t1.c2 AS INTEGER))>((~ (t1.c2))))) ORDER BY (((t1.c1, t1.c18, t1.c1)) NOT BETWEEN ((CAST(t1.c18 AS NUMERIC), ((((((((t1.c0)OR(t0.c0)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)), CASE 'oNc	''tl䇃'  WHEN t1.c1 THEN x'' END)) AND ((((t0.c0)||(vt0.c0)), CAST(t1.c18 AS TEXT), (+ (vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c2 AS INTEGER))>((~ (t1.c2))))) IS TRUE)  as count FROM t1, vt0, t0 ORDER BY (((t1.c1, t1.c18, t1.c1)) NOT BETWEEN ((CAST(t1.c18 AS NUMERIC), ((((((((t1.c0)OR(t0.c0)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)), CASE 'oNc	''tl䇃'  WHEN t1.c1 THEN x'' END)) AND ((((t0.c0)||(vt0.c0)), CAST(t1.c18 AS TEXT), (+ (vt0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, t0 WHERE (((CAST(t1.c2 AS INTEGER))>((~ (t1.c2))))) ORDER BY (((t1.c1, t1.c18, t1.c1)) NOT BETWEEN ((CAST(t1.c18 AS NUMERIC), ((((((((t1.c0)OR(t0.c0)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)), CASE 'oNc	''tl䇃'  WHEN t1.c1 THEN x'' END)) AND ((((t0.c0)||(vt0.c0)), CAST(t1.c18 AS TEXT), (+ (vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c2 AS INTEGER))>((~ (t1.c2))))) IS TRUE)  as count FROM t1, vt0, t0 ORDER BY (((t1.c1, t1.c18, t1.c1)) NOT BETWEEN ((CAST(t1.c18 AS NUMERIC), ((((((((t1.c0)OR(t0.c0)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)), CASE 'oNc	''tl䇃'  WHEN t1.c1 THEN x'' END)) AND ((((t0.c0)||(vt0.c0)), CAST(t1.c18 AS TEXT), (+ (vt0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, t0 WHERE (((CAST(t1.c2 AS INTEGER))>((~ (t1.c2))))) ORDER BY (((t1.c1, t1.c18, t1.c1)) NOT BETWEEN ((CAST(t1.c18 AS NUMERIC), ((((((((t1.c0)OR(t0.c0)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)), CASE 'oNc	''tl䇃'  WHEN t1.c1 THEN x'' END)) AND ((((t0.c0)||(vt0.c0)), CAST(t1.c18 AS TEXT), (+ (vt0.c0))))) DESC  NULLS LAST;
SELECT * FROM t0, vt1, vt0 WHERE ((NOT (((t0.c0) NOT NULL)))) ORDER BY (((((((vt0.c0))<=((t0.c0))))OR(NULL)))OR((~ (t0.c0))))  NULLS FIRST, t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((((vt0.c0))<=((t0.c0))))OR(NULL)))OR((~ (t0.c0))))  NULLS FIRST, t0.c0);
SELECT * FROM t0, vt1, vt0 WHERE ((NOT (((t0.c0) NOT NULL)))) ORDER BY (((((((vt0.c0))<=((t0.c0))))OR(NULL)))OR((~ (t0.c0))))  NULLS FIRST, t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((((vt0.c0))<=((t0.c0))))OR(NULL)))OR((~ (t0.c0))))  NULLS FIRST, t0.c0);
SELECT * FROM t0, vt1, vt0 WHERE ((NOT (((t0.c0) NOT NULL)))) ORDER BY (((((((vt0.c0))<=((t0.c0))))OR(NULL)))OR((~ (t0.c0))))  NULLS FIRST, t0.c0;
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((('4.')>(CASE WHEN vt1.c0 THEN t1.c0 WHEN t1.c18 THEN vt1.c0 WHEN '-890049206' THEN '' END))) ORDER BY (((t1.c0 IN ())) BETWEEN (CAST(vt1.c0 AS REAL)) AND (0.3396633267438741));
SELECT SUM(count) FROM (SELECT (((('4.')>(CASE WHEN vt1.c0 THEN t1.c0 WHEN t1.c18 THEN vt1.c0 WHEN '-890049206' THEN '' END))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((t1.c0 IN ())) BETWEEN (CAST(vt1.c0 AS REAL)) AND (0.3396633267438741)));
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((('4.')>(CASE WHEN vt1.c0 THEN t1.c0 WHEN t1.c18 THEN vt1.c0 WHEN '-890049206' THEN '' END))) ORDER BY (((t1.c0 IN ())) BETWEEN (CAST(vt1.c0 AS REAL)) AND (0.3396633267438741));
SELECT SUM(count) FROM (SELECT (((('4.')>(CASE WHEN vt1.c0 THEN t1.c0 WHEN t1.c18 THEN vt1.c0 WHEN '-890049206' THEN '' END))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((t1.c0 IN ())) BETWEEN (CAST(vt1.c0 AS REAL)) AND (0.3396633267438741)));
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((('4.')>(CASE WHEN vt1.c0 THEN t1.c0 WHEN t1.c18 THEN vt1.c0 WHEN '-890049206' THEN '' END))) ORDER BY (((t1.c0 IN ())) BETWEEN (CAST(vt1.c0 AS REAL)) AND (0.3396633267438741));
SELECT ALL * FROM t0, t1, vt1, v0 WHERE (((((t1.c1))<=((t1.c2))) IN ())) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE BINARY  NULLS LAST, ((CAST(t1.c0 AS INTEGER)) BETWEEN (((((x'9008')OR(t1.c2)))OR(vt1.c0))) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c18)))), ((((((t1.c18)OR('138165451')))OR(t1.c2))) BETWEEN ((t1.c1 IN ())) AND (((vt1.c0)+(t1.c0))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1))<=((t1.c2))) IN ())) IS TRUE)  as count FROM t0, t1, vt1, v0 ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE BINARY  NULLS LAST, ((CAST(t1.c0 AS INTEGER)) BETWEEN (((((x'9008')OR(t1.c2)))OR(vt1.c0))) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c18)))), ((((((t1.c18)OR('138165451')))OR(t1.c2))) BETWEEN ((t1.c1 IN ())) AND (((vt1.c0)+(t1.c0)))));
SELECT ALL * FROM t0, t1, vt1, v0 WHERE (((((t1.c1))<=((t1.c2))) IN ())) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE BINARY  NULLS LAST, ((CAST(t1.c0 AS INTEGER)) BETWEEN (((((x'9008')OR(t1.c2)))OR(vt1.c0))) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c18)))), ((((((t1.c18)OR('138165451')))OR(t1.c2))) BETWEEN ((t1.c1 IN ())) AND (((vt1.c0)+(t1.c0))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1))<=((t1.c2))) IN ())) IS TRUE)  as count FROM t0, t1, vt1, v0 ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE BINARY  NULLS LAST, ((CAST(t1.c0 AS INTEGER)) BETWEEN (((((x'9008')OR(t1.c2)))OR(vt1.c0))) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c18)))), ((((((t1.c18)OR('138165451')))OR(t1.c2))) BETWEEN ((t1.c1 IN ())) AND (((vt1.c0)+(t1.c0)))));
SELECT ALL * FROM t0, t1, vt1, v0 WHERE (((((t1.c1))<=((t1.c2))) IN ())) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE BINARY  NULLS LAST, ((CAST(t1.c0 AS INTEGER)) BETWEEN (((((x'9008')OR(t1.c2)))OR(vt1.c0))) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c18)))), ((((((t1.c18)OR('138165451')))OR(t1.c2))) BETWEEN ((t1.c1 IN ())) AND (((vt1.c0)+(t1.c0))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON CASE WHEN COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, -833473472) THEN (((x'f187')) BETWEEN ((vt1.c0)) AND ((NULL))) ELSE (~ (v0.c0)) END LEFT OUTER JOIN vt1 ON ((NULLIF(vt1.c0, vt0.c0)) NOT BETWEEN (x'') AND (((vt1.c0)+(vt0.c0)))) WHERE (((((((v0.c0)OR(v0.c0)))AND(x''))) BETWEEN (((vt0.c0) IS TRUE)) AND (rtreenode(vt1.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))AND(x''))) BETWEEN (((vt0.c0) IS TRUE)) AND (rtreenode(vt1.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE WHEN COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, -833473472) THEN (((x'f187')) BETWEEN ((vt1.c0)) AND ((NULL))) ELSE (~ (v0.c0)) END LEFT OUTER JOIN vt1 ON ((NULLIF(vt1.c0, vt0.c0)) NOT BETWEEN (x'') AND (((vt1.c0)+(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON CASE WHEN COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, -833473472) THEN (((x'f187')) BETWEEN ((vt1.c0)) AND ((NULL))) ELSE (~ (v0.c0)) END LEFT OUTER JOIN vt1 ON ((NULLIF(vt1.c0, vt0.c0)) NOT BETWEEN (x'') AND (((vt1.c0)+(vt0.c0)))) WHERE (((((((v0.c0)OR(v0.c0)))AND(x''))) BETWEEN (((vt0.c0) IS TRUE)) AND (rtreenode(vt1.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))AND(x''))) BETWEEN (((vt0.c0) IS TRUE)) AND (rtreenode(vt1.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE WHEN COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, -833473472) THEN (((x'f187')) BETWEEN ((vt1.c0)) AND ((NULL))) ELSE (~ (v0.c0)) END LEFT OUTER JOIN vt1 ON ((NULLIF(vt1.c0, vt0.c0)) NOT BETWEEN (x'') AND (((vt1.c0)+(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON CASE WHEN COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, -833473472) THEN (((x'f187')) BETWEEN ((vt1.c0)) AND ((NULL))) ELSE (~ (v0.c0)) END LEFT OUTER JOIN vt1 ON ((NULLIF(vt1.c0, vt0.c0)) NOT BETWEEN (x'') AND (((vt1.c0)+(vt0.c0)))) WHERE (((((((v0.c0)OR(v0.c0)))AND(x''))) BETWEEN (((vt0.c0) IS TRUE)) AND (rtreenode(vt1.c0, vt0.c0))));
SELECT * FROM vt0 WHERE (((((0.7231233013003217)<(vt0.c0))) NOT BETWEEN ((- (vt0.c0))) AND (HEX(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.7231233013003217)<(vt0.c0))) NOT BETWEEN ((- (vt0.c0))) AND (HEX(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((0.7231233013003217)<(vt0.c0))) NOT BETWEEN ((- (vt0.c0))) AND (HEX(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.7231233013003217)<(vt0.c0))) NOT BETWEEN ((- (vt0.c0))) AND (HEX(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((0.7231233013003217)<(vt0.c0))) NOT BETWEEN ((- (vt0.c0))) AND (HEX(vt0.c0))));
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY ((t0.c0 COLLATE RTRIM)IS NOT(((t0.c0)=(t0.c0)))) ASC  NULLS FIRST, (((CAST(t0.c0 AS BLOB)))!=((t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE RTRIM)IS NOT(((t0.c0)==(t0.c0)))) ASC  NULLS FIRST, (((CAST(t0.c0 AS BLOB)))<>((t0.c0))));
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY ((t0.c0 COLLATE RTRIM)IS NOT(((t0.c0)=(t0.c0)))) ASC  NULLS FIRST, (((CAST(t0.c0 AS BLOB)))!=((t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE RTRIM)IS NOT(((t0.c0)==(t0.c0)))) ASC  NULLS FIRST, (((CAST(t0.c0 AS BLOB)))<>((t0.c0))));
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY ((t0.c0 COLLATE RTRIM)IS NOT(((t0.c0)=(t0.c0)))) ASC  NULLS FIRST, (((CAST(t0.c0 AS BLOB)))!=((t0.c0)));
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE ((~ (((t1.c18)IS NOT(t1.c18))))) ORDER BY ((((vt0.c0) ISNULL))OR((((t1.c1))>((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c18)IS NOT(t1.c18))))) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY ((((vt0.c0) ISNULL))OR((((t1.c1))>((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE ((~ (((t1.c18)IS NOT(t1.c18))))) ORDER BY ((((vt0.c0) ISNULL))OR((((t1.c1))>((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c18)IS NOT(t1.c18))))) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY ((((vt0.c0) ISNULL))OR((((t1.c1))>((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE ((~ (((t1.c18)IS NOT(t1.c18))))) ORDER BY ((((vt0.c0) ISNULL))OR((((t1.c1))>((vt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>>(NULL)))IS NOT(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>>(NULL)))IS NOT(NULL))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>>(NULL)))IS NOT(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>>(NULL)))IS NOT(NULL))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>>(NULL)))IS NOT(NULL)));
SELECT ALL * FROM t0, v0, vt0, vt1 WHERE (((((vt1.c0) BETWEEN (t0.c0) AND (v0.c0)))>(((vt0.c0) NOTNULL)))) ORDER BY LIKELY(((v0.c0) IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (t0.c0) AND (v0.c0)))>(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, v0, vt0, vt1 ORDER BY LIKELY(((v0.c0) IS TRUE)) DESC);
SELECT ALL * FROM t0, v0, vt0, vt1 WHERE (((((vt1.c0) BETWEEN (t0.c0) AND (v0.c0)))>(((vt0.c0) NOTNULL)))) ORDER BY LIKELY(((v0.c0) IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (t0.c0) AND (v0.c0)))>(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, v0, vt0, vt1 ORDER BY LIKELY(((v0.c0) IS TRUE)) DESC);
SELECT ALL * FROM t0, v0, vt0, vt1 WHERE (((((vt1.c0) BETWEEN (t0.c0) AND (v0.c0)))>(((vt0.c0) NOTNULL)))) ORDER BY LIKELY(((v0.c0) IS TRUE)) DESC;
SELECT * FROM vt0, v0, t0 WHERE ((~ ((v0.c0 IN ())))) ORDER BY CAST((((v0.c0))<=((t0.c0))) AS BLOB), (NOT (v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((~ ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CAST((((v0.c0))<=((t0.c0))) AS BLOB), (NOT (v0.c0)) ASC);
SELECT * FROM vt0, v0, t0 WHERE ((~ ((v0.c0 IN ())))) ORDER BY CAST((((v0.c0))<=((t0.c0))) AS BLOB), (NOT (v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((~ ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CAST((((v0.c0))<=((t0.c0))) AS BLOB), (NOT (v0.c0)) ASC);
SELECT * FROM vt0, v0, t0 WHERE ((~ ((v0.c0 IN ())))) ORDER BY CAST((((v0.c0))<=((t0.c0))) AS BLOB), (NOT (v0.c0)) ASC;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (json(vt0.c0)) ORDER BY (NOT (load_extension(vt0.c0))), ((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))&(NULLIF(vt1.c0, t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json(vt0.c0)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (NOT (load_extension(vt0.c0))), ((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))&(NULLIF(vt1.c0, t0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (json(vt0.c0)) ORDER BY (NOT (load_extension(vt0.c0))), ((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))&(NULLIF(vt1.c0, t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json(vt0.c0)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (NOT (load_extension(vt0.c0))), ((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))&(NULLIF(vt1.c0, t0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (json(vt0.c0)) ORDER BY (NOT (load_extension(vt0.c0))), ((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))&(NULLIF(vt1.c0, t0.c0))) DESC;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2)) IN ())) ORDER BY ((CASE WHEN t1.c0 THEN t1.c18 END) NOT NULL) DESC, (((((NOT (t1.c0)))OR(((((t1.c2)AND(t1.c0)))OR(t1.c2)))))AND(((t1.c0)GLOB(t1.c1)))) ASC, ((((t1.c0)<<(t1.c1)))||(((((t1.c18)AND(t1.c1)))AND('\n(aGl&E	d'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2)) IN ())) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c0 THEN t1.c18 END) NOT NULL) DESC, (((((NOT (t1.c0)))OR(((((t1.c2)AND(t1.c0)))OR(t1.c2)))))AND(((t1.c0)GLOB(t1.c1)))) ASC, ((((t1.c0)<<(t1.c1)))||(((((t1.c18)AND(t1.c1)))AND('\n(aGl&E	d'))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2)) IN ())) ORDER BY ((CASE WHEN t1.c0 THEN t1.c18 END) NOT NULL) DESC, (((((NOT (t1.c0)))OR(((((t1.c2)AND(t1.c0)))OR(t1.c2)))))AND(((t1.c0)GLOB(t1.c1)))) ASC, ((((t1.c0)<<(t1.c1)))||(((((t1.c18)AND(t1.c1)))AND('\n(aGl&E	d'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2)) IN ())) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c0 THEN t1.c18 END) NOT NULL) DESC, (((((NOT (t1.c0)))OR(((((t1.c2)AND(t1.c0)))OR(t1.c2)))))AND(((t1.c0)GLOB(t1.c1)))) ASC, ((((t1.c0)<<(t1.c1)))||(((((t1.c18)AND(t1.c1)))AND('\n(aGl&E	d'))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2)) IN ())) ORDER BY ((CASE WHEN t1.c0 THEN t1.c18 END) NOT NULL) DESC, (((((NOT (t1.c0)))OR(((((t1.c2)AND(t1.c0)))OR(t1.c2)))))AND(((t1.c0)GLOB(t1.c1)))) ASC, ((((t1.c0)<<(t1.c1)))||(((((t1.c18)AND(t1.c1)))AND('\n(aGl&E	d'))))  NULLS LAST;
SELECT * FROM t0, vt0, t1, vt1, v0 WHERE (CASE v0.c0  WHEN vt0.c0 THEN t1.c2 WHEN t1.c2 THEN '-1340673743' WHEN vt0.c0 THEN t1.c1 ELSE t1.c0 END COLLATE NOCASE) ORDER BY (x'' COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN vt0.c0 THEN t1.c2 WHEN t1.c2 THEN '-1340673743' WHEN vt0.c0 THEN t1.c1 ELSE t1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, t1, vt1, v0 ORDER BY (x'' COLLATE RTRIM IN ()));
SELECT * FROM t0, vt0, t1, vt1, v0 WHERE (CASE v0.c0  WHEN vt0.c0 THEN t1.c2 WHEN t1.c2 THEN '-1340673743' WHEN vt0.c0 THEN t1.c1 ELSE t1.c0 END COLLATE NOCASE) ORDER BY (x'' COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN vt0.c0 THEN t1.c2 WHEN t1.c2 THEN '-1340673743' WHEN vt0.c0 THEN t1.c1 ELSE t1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, t1, vt1, v0 ORDER BY (x'' COLLATE RTRIM IN ()));
SELECT * FROM t0, vt0, t1, vt1, v0 WHERE (CASE v0.c0  WHEN vt0.c0 THEN t1.c2 WHEN t1.c2 THEN '-1340673743' WHEN vt0.c0 THEN t1.c1 ELSE t1.c0 END COLLATE NOCASE) ORDER BY (x'' COLLATE RTRIM IN ());
SELECT * FROM t1, vt1 WHERE ((((((t1.c2)<(vt1.c0)), (~ (vt1.c0)), ((t1.c18) ISNULL)))<((t1.c2, vt1.c0 COLLATE BINARY, t1.c2 COLLATE RTRIM)))) ORDER BY CAST(t1.c0 AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2)<(vt1.c0)), (~ (vt1.c0)), ((t1.c18) ISNULL)))<((t1.c2, vt1.c0 COLLATE BINARY, t1.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM t1, vt1 ORDER BY CAST(t1.c0 AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM t1, vt1 WHERE ((((((t1.c2)<(vt1.c0)), (~ (vt1.c0)), ((t1.c18) ISNULL)))<((t1.c2, vt1.c0 COLLATE BINARY, t1.c2 COLLATE RTRIM)))) ORDER BY CAST(t1.c0 AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2)<(vt1.c0)), (~ (vt1.c0)), ((t1.c18) ISNULL)))<((t1.c2, vt1.c0 COLLATE BINARY, t1.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM t1, vt1 ORDER BY CAST(t1.c0 AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM t1, vt1 WHERE ((((((t1.c2)<(vt1.c0)), (~ (vt1.c0)), ((t1.c18) ISNULL)))<((t1.c2, vt1.c0 COLLATE BINARY, t1.c2 COLLATE RTRIM)))) ORDER BY CAST(t1.c0 AS NUMERIC) ASC  NULLS LAST;
SELECT * FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT * FROM t1, t0, vt1, v0 WHERE (((((vt1.c0) BETWEEN (t1.c1) AND (vt1.c0))) NOT BETWEEN (((((t1.c18)OR(vt1.c0)))OR(t1.c18))) AND (((((v0.c0)AND(t1.c18)))AND(v0.c0))))) ORDER BY ((((v0.c0)IS(vt1.c0)))OR(((t1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (t1.c1) AND (vt1.c0))) NOT BETWEEN (((((t1.c18)OR(vt1.c0)))OR(t1.c18))) AND (((((v0.c0)AND(t1.c18)))AND(v0.c0))))) IS TRUE)  as count FROM t1, t0, vt1, v0 ORDER BY ((((v0.c0)IS(vt1.c0)))OR(((t1.c0) NOTNULL))));
SELECT * FROM t1, t0, vt1, v0 WHERE (((((vt1.c0) BETWEEN (t1.c1) AND (vt1.c0))) NOT BETWEEN (((((t1.c18)OR(vt1.c0)))OR(t1.c18))) AND (((((v0.c0)AND(t1.c18)))AND(v0.c0))))) ORDER BY ((((v0.c0)IS(vt1.c0)))OR(((t1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (t1.c1) AND (vt1.c0))) NOT BETWEEN (((((t1.c18)OR(vt1.c0)))OR(t1.c18))) AND (((((v0.c0)AND(t1.c18)))AND(v0.c0))))) IS TRUE)  as count FROM t1, t0, vt1, v0 ORDER BY ((((v0.c0)IS(vt1.c0)))OR(((t1.c0) NOTNULL))));
SELECT * FROM t1, t0, vt1, v0 WHERE (((((vt1.c0) BETWEEN (t1.c1) AND (vt1.c0))) NOT BETWEEN (((((t1.c18)OR(vt1.c0)))OR(t1.c18))) AND (((((v0.c0)AND(t1.c18)))AND(v0.c0))))) ORDER BY ((((v0.c0)IS(vt1.c0)))OR(((t1.c0) NOTNULL)));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (- (((('+/''!'))>=((v0.c0))))) WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))%((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE BINARY)IS(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))%((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (- (((('+/''!'))>=((v0.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY)IS(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (- (((('+/''!'))>=((v0.c0))))) WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))%((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE BINARY)IS(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))%((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (- (((('+/''!'))>=((v0.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY)IS(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (- (((('+/''!'))>=((v0.c0))))) WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))%((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE BINARY)IS(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))));
SELECT COUNT(*) FROM t1, v0, vt1 WHERE ((- ((0.2369137842978789 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((0.2369137842978789 IN ())))) IS TRUE)  as count FROM t1, v0, vt1);
SELECT COUNT(*) FROM t1, v0, vt1 WHERE ((- ((0.2369137842978789 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((0.2369137842978789 IN ())))) IS TRUE)  as count FROM t1, v0, vt1);
SELECT COUNT(*) FROM t1, v0, vt1 WHERE ((- ((0.2369137842978789 IN ()))));
SELECT COUNT(*) FROM t1, vt0 WHERE ((- (((t1.c18)IS NOT(t1.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((t1.c18)IS NOT(t1.c1))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((- (((t1.c18)IS NOT(t1.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((t1.c18)IS NOT(t1.c1))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((- (((t1.c18)IS NOT(t1.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) ISNULL) IN ())) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) ISNULL) IN ())) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) ISNULL) IN ())) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c0);
SELECT ALL * FROM v0 INDEXED BY i73, vt1, t0 WHERE (CAST(0.43935463689766596 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.43935463689766596 AS REAL)) IS TRUE)  as count FROM v0 INDEXED BY i73, vt1, t0);
SELECT ALL * FROM v0 INDEXED BY i73, vt1, t0 WHERE (CAST(0.43935463689766596 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.43935463689766596 AS REAL)) IS TRUE)  as count FROM v0 INDEXED BY i73, vt1, t0);
SELECT ALL * FROM v0, t0, t1, vt0, vt1 WHERE ((t1.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0, t0, t1, vt0, vt1);
SELECT ALL * FROM v0, t0, t1, vt0, vt1 WHERE ((t1.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0, t0, t1, vt0, vt1);
SELECT ALL * FROM v0, t0, t1, vt0, vt1 WHERE ((t1.c2 COLLATE BINARY IN ()));
SELECT * FROM vt1, vt0, t0, t1, v0 WHERE ((((((v0.c0))<((t0.c0))))AND(((t1.c2)>=(t1.c2))))) ORDER BY CASE WHEN CAST(vt1.c0 AS REAL) THEN ((((((((t0.c0)OR(t1.c2)))AND(t0.c0)))OR(t1.c18)))OR(vt1.c0)) WHEN (x'' IN ()) THEN ((v0.c0) BETWEEN (vt0.c0) AND (t1.c1)) WHEN (NOT (t1.c18)) THEN v0.c0 END ASC, ((CASE vt0.c0  WHEN t1.c2 THEN t1.c0 WHEN t1.c18 THEN t1.c18 WHEN vt0.c0 THEN t1.c1 END) BETWEEN (((t0.c0) ISNULL)) AND (CASE t1.c18  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<((t0.c0))))AND(((t1.c2)>=(t1.c2))))) IS TRUE)  as count FROM vt1, vt0, t0, t1, v0 ORDER BY CASE WHEN CAST(vt1.c0 AS REAL) THEN ((((((((t0.c0)OR(t1.c2)))AND(t0.c0)))OR(t1.c18)))OR(vt1.c0)) WHEN (x'' IN ()) THEN ((v0.c0) BETWEEN (vt0.c0) AND (t1.c1)) WHEN (NOT (t1.c18)) THEN v0.c0 END ASC, ((CASE vt0.c0  WHEN t1.c2 THEN t1.c0 WHEN t1.c18 THEN t1.c18 WHEN vt0.c0 THEN t1.c1 END) BETWEEN (((t0.c0) ISNULL)) AND (CASE t1.c18  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)) ASC  NULLS LAST);
SELECT * FROM vt1, vt0, t0, t1, v0 WHERE ((((((v0.c0))<((t0.c0))))AND(((t1.c2)>=(t1.c2))))) ORDER BY CASE WHEN CAST(vt1.c0 AS REAL) THEN ((((((((t0.c0)OR(t1.c2)))AND(t0.c0)))OR(t1.c18)))OR(vt1.c0)) WHEN (x'' IN ()) THEN ((v0.c0) BETWEEN (vt0.c0) AND (t1.c1)) WHEN (NOT (t1.c18)) THEN v0.c0 END ASC, ((CASE vt0.c0  WHEN t1.c2 THEN t1.c0 WHEN t1.c18 THEN t1.c18 WHEN vt0.c0 THEN t1.c1 END) BETWEEN (((t0.c0) ISNULL)) AND (CASE t1.c18  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<((t0.c0))))AND(((t1.c2)>=(t1.c2))))) IS TRUE)  as count FROM vt1, vt0, t0, t1, v0 ORDER BY CASE WHEN CAST(vt1.c0 AS REAL) THEN ((((((((t0.c0)OR(t1.c2)))AND(t0.c0)))OR(t1.c18)))OR(vt1.c0)) WHEN (x'' IN ()) THEN ((v0.c0) BETWEEN (vt0.c0) AND (t1.c1)) WHEN (NOT (t1.c18)) THEN v0.c0 END ASC, ((CASE vt0.c0  WHEN t1.c2 THEN t1.c0 WHEN t1.c18 THEN t1.c18 WHEN vt0.c0 THEN t1.c1 END) BETWEEN (((t0.c0) ISNULL)) AND (CASE t1.c18  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)) ASC  NULLS LAST);
SELECT * FROM vt1, vt0, t0, t1, v0 WHERE ((((((v0.c0))<((t0.c0))))AND(((t1.c2)>=(t1.c2))))) ORDER BY CASE WHEN CAST(vt1.c0 AS REAL) THEN ((((((((t0.c0)OR(t1.c2)))AND(t0.c0)))OR(t1.c18)))OR(vt1.c0)) WHEN (x'' IN ()) THEN ((v0.c0) BETWEEN (vt0.c0) AND (t1.c1)) WHEN (NOT (t1.c18)) THEN v0.c0 END ASC, ((CASE vt0.c0  WHEN t1.c2 THEN t1.c0 WHEN t1.c18 THEN t1.c18 WHEN vt0.c0 THEN t1.c1 END) BETWEEN (((t0.c0) ISNULL)) AND (CASE t1.c18  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)) ASC  NULLS LAST;
SELECT * FROM vt1, vt0, v0, t1, t0 WHERE ((((((t1.c1)<=('1093208142'))))<>((CAST(0.3769226997781062 AS NUMERIC))))) ORDER BY ((((vt0.c0 IN (t0.c0)), ((x'96f7') IS TRUE), LIKELY(DISTINCT t1.c18), (((NULL, vt1.c0, vt1.c0)) BETWEEN ((t1.c2, t1.c1, t0.c0)) AND ((t1.c18, t1.c0, t1.c2))), ((t0.c0) IS FALSE)))<((((t0.c0) BETWEEN (x'') AND (t0.c0)), LIKELIHOOD(DISTINCT t1.c2, 0.48044505383823144), t0.c0, ((t1.c2)AND(t1.c18)), ((v0.c0) NOTNULL)))), (((t1.c1 IN ())) IS TRUE), ((CASE -1.655143496E9  WHEN t0.c0 THEN NULL ELSE t0.c0 END) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c1)<=('1093208142'))))<>((CAST(0.3769226997781062 AS NUMERIC))))) IS TRUE)  as count FROM vt1, vt0, v0, t1, t0 ORDER BY ((((vt0.c0 IN (t0.c0)), ((x'96f7') IS TRUE), LIKELY(DISTINCT t1.c18), (((NULL, vt1.c0, vt1.c0)) BETWEEN ((t1.c2, t1.c1, t0.c0)) AND ((t1.c18, t1.c0, t1.c2))), ((t0.c0) IS FALSE)))<((((t0.c0) BETWEEN (x'') AND (t0.c0)), LIKELIHOOD(DISTINCT t1.c2, 0.48044505383823144), t0.c0, ((t1.c2)AND(t1.c18)), ((v0.c0) NOTNULL)))), (((t1.c1 IN ())) IS TRUE), ((CASE -1.655143496E9  WHEN t0.c0 THEN NULL ELSE t0.c0 END) ISNULL) DESC  NULLS LAST);
SELECT * FROM vt1, vt0, v0, t1, t0 WHERE ((((((t1.c1)<=('1093208142'))))<>((CAST(0.3769226997781062 AS NUMERIC))))) ORDER BY ((((vt0.c0 IN (t0.c0)), ((x'96f7') IS TRUE), LIKELY(DISTINCT t1.c18), (((NULL, vt1.c0, vt1.c0)) BETWEEN ((t1.c2, t1.c1, t0.c0)) AND ((t1.c18, t1.c0, t1.c2))), ((t0.c0) IS FALSE)))<((((t0.c0) BETWEEN (x'') AND (t0.c0)), LIKELIHOOD(DISTINCT t1.c2, 0.48044505383823144), t0.c0, ((t1.c2)AND(t1.c18)), ((v0.c0) NOTNULL)))), (((t1.c1 IN ())) IS TRUE), ((CASE -1.655143496E9  WHEN t0.c0 THEN NULL ELSE t0.c0 END) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c1)<=('1093208142'))))<>((CAST(0.3769226997781062 AS NUMERIC))))) IS TRUE)  as count FROM vt1, vt0, v0, t1, t0 ORDER BY ((((vt0.c0 IN (t0.c0)), ((x'96f7') IS TRUE), LIKELY(DISTINCT t1.c18), (((NULL, vt1.c0, vt1.c0)) BETWEEN ((t1.c2, t1.c1, t0.c0)) AND ((t1.c18, t1.c0, t1.c2))), ((t0.c0) IS FALSE)))<((((t0.c0) BETWEEN (x'') AND (t0.c0)), LIKELIHOOD(DISTINCT t1.c2, 0.48044505383823144), t0.c0, ((t1.c2)AND(t1.c18)), ((v0.c0) NOTNULL)))), (((t1.c1 IN ())) IS TRUE), ((CASE -1.655143496E9  WHEN t0.c0 THEN NULL ELSE t0.c0 END) ISNULL) DESC  NULLS LAST);
SELECT * FROM vt1, vt0, v0, t1, t0 WHERE ((((((t1.c1)<=('1093208142'))))<>((CAST(0.3769226997781062 AS NUMERIC))))) ORDER BY ((((vt0.c0 IN (t0.c0)), ((x'96f7') IS TRUE), LIKELY(DISTINCT t1.c18), (((NULL, vt1.c0, vt1.c0)) BETWEEN ((t1.c2, t1.c1, t0.c0)) AND ((t1.c18, t1.c0, t1.c2))), ((t0.c0) IS FALSE)))<((((t0.c0) BETWEEN (x'') AND (t0.c0)), LIKELIHOOD(DISTINCT t1.c2, 0.48044505383823144), t0.c0, ((t1.c2)AND(t1.c18)), ((v0.c0) NOTNULL)))), (((t1.c1 IN ())) IS TRUE), ((CASE -1.655143496E9  WHEN t0.c0 THEN NULL ELSE t0.c0 END) ISNULL) DESC  NULLS LAST;
SELECT * FROM t0, vt1, t1 WHERE (((((t1.c0) BETWEEN (t1.c2) AND (t1.c18))) NOT BETWEEN ((- (t1.c0))) AND (((t1.c2)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (t1.c2) AND (t1.c18))) NOT BETWEEN ((- (t1.c0))) AND (((t1.c2)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0, vt1, t1);
SELECT * FROM t0, vt1, t1 WHERE (((((t1.c0) BETWEEN (t1.c2) AND (t1.c18))) NOT BETWEEN ((- (t1.c0))) AND (((t1.c2)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (t1.c2) AND (t1.c18))) NOT BETWEEN ((- (t1.c0))) AND (((t1.c2)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0, vt1, t1);
SELECT * FROM t0, vt1, t1 WHERE (((((t1.c0) BETWEEN (t1.c2) AND (t1.c18))) NOT BETWEEN ((- (t1.c0))) AND (((t1.c2)IS NOT(t0.c0)))));
SELECT * FROM t0 CROSS JOIN v0 ON ((NULL) NOT NULL) FULL OUTER JOIN vt0 ON json_insert(((((((((t1.c18)OR(t1.c18)))OR(t1.c18)))OR(t1.c2)))AND(t1.c2)), vt1.c0 COLLATE NOCASE, (t0.c0 IN ())) LEFT OUTER JOIN vt1 ON ((v0.c0) NOT NULL) COLLATE NOCASE CROSS JOIN t1 ON (((NOT (t0.c0))) BETWEEN ((t1.c0 IN ())) AND (((vt1.c0) IS FALSE))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((NULL) NOT NULL) FULL OUTER JOIN vt0 ON json_insert(((((((((t1.c18)OR(t1.c18)))OR(t1.c18)))OR(t1.c2)))AND(t1.c2)), vt1.c0 COLLATE NOCASE, (t0.c0 IN ())) LEFT OUTER JOIN vt1 ON ((v0.c0) NOT NULL) COLLATE NOCASE CROSS JOIN t1 ON (((NOT (t0.c0))) BETWEEN ((t1.c0 IN ())) AND (((vt1.c0) IS FALSE))));
SELECT * FROM t0 CROSS JOIN v0 ON ((NULL) NOT NULL) FULL OUTER JOIN vt0 ON json_insert(((((((((t1.c18)OR(t1.c18)))OR(t1.c18)))OR(t1.c2)))AND(t1.c2)), vt1.c0 COLLATE NOCASE, (t0.c0 IN ())) LEFT OUTER JOIN vt1 ON ((v0.c0) NOT NULL) COLLATE NOCASE CROSS JOIN t1 ON (((NOT (t0.c0))) BETWEEN ((t1.c0 IN ())) AND (((vt1.c0) IS FALSE))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((NULL) NOT NULL) FULL OUTER JOIN vt0 ON json_insert(((((((((t1.c18)OR(t1.c18)))OR(t1.c18)))OR(t1.c2)))AND(t1.c2)), vt1.c0 COLLATE NOCASE, (t0.c0 IN ())) LEFT OUTER JOIN vt1 ON ((v0.c0) NOT NULL) COLLATE NOCASE CROSS JOIN t1 ON (((NOT (t0.c0))) BETWEEN ((t1.c0 IN ())) AND (((vt1.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0, t0, t1, v0 WHERE (json_object(x'', t1.c18) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((json_object(x'', t1.c18) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, t1, v0);
SELECT COUNT(*) FROM vt0, t0, t1, v0 WHERE (json_object(x'', t1.c18) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((json_object(x'', t1.c18) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, t1, v0);
SELECT COUNT(*) FROM vt0, t0, t1, v0 WHERE (json_object(x'', t1.c18) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, v0 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))OR(v0.c0))))) ORDER BY CAST(v0.c0 COLLATE BINARY AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((((vt1.c0)OR(vt1.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY CAST(v0.c0 COLLATE BINARY AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))OR(v0.c0))))) ORDER BY CAST(v0.c0 COLLATE BINARY AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((((vt1.c0)OR(vt1.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY CAST(v0.c0 COLLATE BINARY AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))OR(v0.c0))))) ORDER BY CAST(v0.c0 COLLATE BINARY AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM vt1, v0 WHERE ((((((((((vt1.c0)OR(x'')))OR(vt1.c0)))AND('⟴qpx')))OR(v0.c0)) IN (v0.c0 COLLATE NOCASE))) ORDER BY ((((vt1.c0)>=(v0.c0)))-(CASE x''  WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS FIRST, CHANGES();
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)OR(x'')))OR(vt1.c0)))AND('⟴qpx')))OR(v0.c0)) IN (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((vt1.c0)>=(v0.c0)))-(CASE x''  WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS FIRST, CHANGES());
SELECT COUNT(*) FROM vt1, v0 WHERE ((((((((((vt1.c0)OR(x'')))OR(vt1.c0)))AND('⟴qpx')))OR(v0.c0)) IN (v0.c0 COLLATE NOCASE))) ORDER BY ((((vt1.c0)>=(v0.c0)))-(CASE x''  WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS FIRST, CHANGES();
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)OR(x'')))OR(vt1.c0)))AND('⟴qpx')))OR(v0.c0)) IN (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((vt1.c0)>=(v0.c0)))-(CASE x''  WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS FIRST, CHANGES());
SELECT COUNT(*) FROM vt1, v0 WHERE ((((((((((vt1.c0)OR(x'')))OR(vt1.c0)))AND('⟴qpx')))OR(v0.c0)) IN (v0.c0 COLLATE NOCASE))) ORDER BY ((((vt1.c0)>=(v0.c0)))-(CASE x''  WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS FIRST, CHANGES();
SELECT ALL COUNT(*) FROM v0 WHERE ((((((('41258725')OR(v0.c0)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((('41258725')OR(v0.c0)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((('41258725')OR(v0.c0)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((('41258725')OR(v0.c0)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((('41258725')OR(v0.c0)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(v0.c0)));
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY ((((CAST(t1.c0 AS BLOB))AND(((t1.c2)==(t1.c0)))))AND(t1.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 ORDER BY ((((CAST(t1.c0 AS BLOB))AND(((t1.c2)=(t1.c0)))))AND(t1.c1)) ASC);
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY ((((CAST(t1.c0 AS BLOB))AND(((t1.c2)==(t1.c0)))))AND(t1.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 ORDER BY ((((CAST(t1.c0 AS BLOB))AND(((t1.c2)=(t1.c0)))))AND(t1.c1)) ASC);
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY ((((CAST(t1.c0 AS BLOB))AND(((t1.c2)==(t1.c0)))))AND(t1.c1)) ASC;
SELECT ALL * FROM vt0, t1, t0 WHERE (((((t1.c2) NOT NULL))>((t1.c1 IN (t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOT NULL))>((t1.c1 IN (t1.c1))))) IS TRUE)  as count FROM vt0, t1, t0);
SELECT ALL * FROM vt0, t1, t0 WHERE (((((t1.c2) NOT NULL))>((t1.c1 IN (t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOT NULL))>((t1.c1 IN (t1.c1))))) IS TRUE)  as count FROM vt0, t1, t0);
SELECT ALL * FROM vt0, t1, t0 WHERE (((((t1.c2) NOT NULL))>((t1.c1 IN (t1.c1)))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((NULL IN ()));
SELECT COUNT(*) FROM t1, vt0 RIGHT OUTER JOIN t0 ON CAST(((x'')&(x'')) AS BLOB) WHERE ((((t1.c1, t0.c0, t0.c0)) NOT BETWEEN ((x'' COLLATE RTRIM, (+ (vt0.c0)), ((vt0.c0)>(-1871916330)))) AND ((((t1.c18)||(t1.c18)), ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1)), CAST(t1.c18 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1, t0.c0, t0.c0)) NOT BETWEEN ((x'' COLLATE RTRIM, (+ (vt0.c0)), ((vt0.c0)>(-1871916330)))) AND ((((t1.c18)||(t1.c18)), ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1)), CAST(t1.c18 AS NUMERIC))))) IS TRUE)  as count FROM t1, vt0 RIGHT OUTER JOIN t0 ON CAST(((x'')&(x'')) AS BLOB));
SELECT COUNT(*) FROM t1, vt0 RIGHT OUTER JOIN t0 ON CAST(((x'')&(x'')) AS BLOB) WHERE ((((t1.c1, t0.c0, t0.c0)) NOT BETWEEN ((x'' COLLATE RTRIM, (+ (vt0.c0)), ((vt0.c0)>(-1871916330)))) AND ((((t1.c18)||(t1.c18)), ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1)), CAST(t1.c18 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1, t0.c0, t0.c0)) NOT BETWEEN ((x'' COLLATE RTRIM, (+ (vt0.c0)), ((vt0.c0)>(-1871916330)))) AND ((((t1.c18)||(t1.c18)), ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1)), CAST(t1.c18 AS NUMERIC))))) IS TRUE)  as count FROM t1, vt0 RIGHT OUTER JOIN t0 ON CAST(((x'')&(x'')) AS BLOB));
SELECT COUNT(*) FROM t1, vt0 RIGHT OUTER JOIN t0 ON CAST(((x'')&(x'')) AS BLOB) WHERE ((((t1.c1, t0.c0, t0.c0)) NOT BETWEEN ((x'' COLLATE RTRIM, (+ (vt0.c0)), ((vt0.c0)>(-1871916330)))) AND ((((t1.c18)||(t1.c18)), ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1)), CAST(t1.c18 AS NUMERIC)))));
SELECT ALL * FROM t0, v0, t1, vt1 WHERE (CASE WHEN CAST(t1.c2 AS INTEGER) THEN ((NULL) IS FALSE) ELSE CAST(t0.c0 AS REAL) END) ORDER BY CASE WHEN ((t0.c0)<>(t1.c18)) THEN (- (t0.c0)) END, ((((t1.c18)<>(t1.c2))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t1.c2 AS INTEGER) THEN ((NULL) IS FALSE) ELSE CAST(t0.c0 AS REAL) END) IS TRUE)  as count FROM t0, v0, t1, vt1 ORDER BY CASE WHEN ((t0.c0)!=(t1.c18)) THEN (- (t0.c0)) END, ((((t1.c18)<>(t1.c2))) ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM t0, v0, t1, vt1 WHERE (CASE WHEN CAST(t1.c2 AS INTEGER) THEN ((NULL) IS FALSE) ELSE CAST(t0.c0 AS REAL) END) ORDER BY CASE WHEN ((t0.c0)<>(t1.c18)) THEN (- (t0.c0)) END, ((((t1.c18)<>(t1.c2))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t1.c2 AS INTEGER) THEN ((NULL) IS FALSE) ELSE CAST(t0.c0 AS REAL) END) IS TRUE)  as count FROM t0, v0, t1, vt1 ORDER BY CASE WHEN ((t0.c0)!=(t1.c18)) THEN (- (t0.c0)) END, ((((t1.c18)<>(t1.c2))) ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM t0, v0, t1, vt1 WHERE (CASE WHEN CAST(t1.c2 AS INTEGER) THEN ((NULL) IS FALSE) ELSE CAST(t0.c0 AS REAL) END) ORDER BY CASE WHEN ((t0.c0)<>(t1.c18)) THEN (- (t0.c0)) END, ((((t1.c18)<>(t1.c2))) ISNULL) ASC  NULLS LAST;
SELECT * FROM t0 FULL OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN ((((((vt0.c0)OR(t0.c0)))AND(v0.c0)))) AND ((CAST(t0.c0 AS BLOB)))) LEFT OUTER JOIN v0 ON json_quote(((t0.c0) ISNULL)) RIGHT OUTER JOIN vt0 ON (- ((~ (t0.c0)))) WHERE ((((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) BETWEEN ((((1.454175273E9))>((t0.c0)))) AND (((((((((v0.c0)AND(t0.c0)))OR(t0.c0)))OR(v0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) BETWEEN ((((1.454175273E9))>((t0.c0)))) AND (((((((((v0.c0)AND(t0.c0)))OR(t0.c0)))OR(v0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN ((((((vt0.c0)OR(t0.c0)))AND(v0.c0)))) AND ((CAST(t0.c0 AS BLOB)))) LEFT OUTER JOIN v0 ON json_quote(((t0.c0) ISNULL)) RIGHT OUTER JOIN vt0 ON (- ((~ (t0.c0)))));
SELECT * FROM t0 FULL OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN ((((((vt0.c0)OR(t0.c0)))AND(v0.c0)))) AND ((CAST(t0.c0 AS BLOB)))) LEFT OUTER JOIN v0 ON json_quote(((t0.c0) ISNULL)) RIGHT OUTER JOIN vt0 ON (- ((~ (t0.c0)))) WHERE ((((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) BETWEEN ((((1.454175273E9))>((t0.c0)))) AND (((((((((v0.c0)AND(t0.c0)))OR(t0.c0)))OR(v0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) BETWEEN ((((1.454175273E9))>((t0.c0)))) AND (((((((((v0.c0)AND(t0.c0)))OR(t0.c0)))OR(v0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN ((((((vt0.c0)OR(t0.c0)))AND(v0.c0)))) AND ((CAST(t0.c0 AS BLOB)))) LEFT OUTER JOIN v0 ON json_quote(((t0.c0) ISNULL)) RIGHT OUTER JOIN vt0 ON (- ((~ (t0.c0)))));
SELECT * FROM v0, t1, vt0, t0, vt1 WHERE ((((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c0)))) IS TRUE)) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB)  NULLS FIRST, CAST(CASE WHEN t0.c0 THEN v0.c0 END AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM v0, t1, vt0, t0, vt1 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB)  NULLS FIRST, CAST(CASE WHEN t0.c0 THEN v0.c0 END AS NUMERIC) ASC  NULLS FIRST);
SELECT * FROM v0, t1, vt0, t0, vt1 WHERE ((((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c0)))) IS TRUE)) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB)  NULLS FIRST, CAST(CASE WHEN t0.c0 THEN v0.c0 END AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM v0, t1, vt0, t0, vt1 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB)  NULLS FIRST, CAST(CASE WHEN t0.c0 THEN v0.c0 END AS NUMERIC) ASC  NULLS FIRST);
SELECT * FROM v0, t1, vt0, t0, vt1 WHERE ((((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt1.c0)))) IS TRUE)) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB)  NULLS FIRST, CAST(CASE WHEN t0.c0 THEN v0.c0 END AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 NOT INDEXED, v0 RIGHT OUTER JOIN vt0 ON (CASE t1.c1  WHEN t1.c18 THEN t1.c1 WHEN t1.c1 THEN 0Xfffffffff1746e16 WHEN t1.c2 THEN t1.c18 ELSE t1.c0 END IN ()) RIGHT OUTER JOIN t1 ON 0.03378281702268593 WHERE (t1.c18) ORDER BY CASE ((vt0.c0)%(t1.c2))  WHEN ((t1.c2)+(t1.c2)) THEN '''n' END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c18) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN vt0 ON (CASE t1.c1  WHEN t1.c18 THEN t1.c1 WHEN t1.c1 THEN 0xfffffffff1746e16 WHEN t1.c2 THEN t1.c18 ELSE t1.c0 END IN ()) RIGHT OUTER JOIN t1 ON 0.03378281702268593 ORDER BY CASE ((vt0.c0)%(t1.c2))  WHEN ((t1.c2)+(t1.c2)) THEN '''n' END ASC  NULLS LAST);
SELECT ALL * FROM vt1 NOT INDEXED, v0 RIGHT OUTER JOIN vt0 ON (CASE t1.c1  WHEN t1.c18 THEN t1.c1 WHEN t1.c1 THEN 0Xfffffffff1746e16 WHEN t1.c2 THEN t1.c18 ELSE t1.c0 END IN ()) RIGHT OUTER JOIN t1 ON 0.03378281702268593 WHERE (t1.c18) ORDER BY CASE ((vt0.c0)%(t1.c2))  WHEN ((t1.c2)+(t1.c2)) THEN '''n' END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c18) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN vt0 ON (CASE t1.c1  WHEN t1.c18 THEN t1.c1 WHEN t1.c1 THEN 0xfffffffff1746e16 WHEN t1.c2 THEN t1.c18 ELSE t1.c0 END IN ()) RIGHT OUTER JOIN t1 ON 0.03378281702268593 ORDER BY CASE ((vt0.c0)%(t1.c2))  WHEN ((t1.c2)+(t1.c2)) THEN '''n' END ASC  NULLS LAST);
SELECT ALL * FROM vt1 NOT INDEXED, v0 RIGHT OUTER JOIN vt0 ON (CASE t1.c1  WHEN t1.c18 THEN t1.c1 WHEN t1.c1 THEN 0Xfffffffff1746e16 WHEN t1.c2 THEN t1.c18 ELSE t1.c0 END IN ()) RIGHT OUTER JOIN t1 ON 0.03378281702268593 WHERE (t1.c18) ORDER BY CASE ((vt0.c0)%(t1.c2))  WHEN ((t1.c2)+(t1.c2)) THEN '''n' END ASC  NULLS LAST;
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON (((((((t1.c2))<((t1.c2))))OR(((v0.c0)&(t0.c0)))))AND(((v0.c0)<>(t1.c2)))) LEFT OUTER JOIN t1 ON (+ (((((t1.c0)AND(t1.c18)))AND(t1.c0)))) WHERE (((CAST(t1.c1 AS NUMERIC)) NOT BETWEEN (5.7982687E8 COLLATE BINARY) AND (UNLIKELY(t1.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c1 AS NUMERIC)) NOT BETWEEN (5.7982687E8 COLLATE BINARY) AND (UNLIKELY(t1.c2)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON (((((((t1.c2))<((t1.c2))))OR(((v0.c0)&(t0.c0)))))AND(((v0.c0)<>(t1.c2)))) LEFT OUTER JOIN t1 ON (+ (((((t1.c0)AND(t1.c18)))AND(t1.c0)))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON (((((((t1.c2))<((t1.c2))))OR(((v0.c0)&(t0.c0)))))AND(((v0.c0)<>(t1.c2)))) LEFT OUTER JOIN t1 ON (+ (((((t1.c0)AND(t1.c18)))AND(t1.c0)))) WHERE (((CAST(t1.c1 AS NUMERIC)) NOT BETWEEN (5.7982687E8 COLLATE BINARY) AND (UNLIKELY(t1.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c1 AS NUMERIC)) NOT BETWEEN (5.7982687E8 COLLATE BINARY) AND (UNLIKELY(t1.c2)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON (((((((t1.c2))<((t1.c2))))OR(((v0.c0)&(t0.c0)))))AND(((v0.c0)<>(t1.c2)))) LEFT OUTER JOIN t1 ON (+ (((((t1.c0)AND(t1.c18)))AND(t1.c0)))));
SELECT ALL COUNT(*) FROM v0, vt1, t1, t0 WHERE (((((t1.c2)+(t1.c2))) BETWEEN (((t1.c0)*(t1.c18))) AND (((vt1.c0) BETWEEN (t1.c18) AND (t1.c2))))) ORDER BY CASE ((t1.c2)+(t0.c0))  WHEN t0.c0 COLLATE NOCASE THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0)<(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2)+(t1.c2))) BETWEEN (((t1.c0)*(t1.c18))) AND (((vt1.c0) BETWEEN (t1.c18) AND (t1.c2))))) IS TRUE)  as count FROM v0, vt1, t1, t0 ORDER BY CASE ((t1.c2)+(t0.c0))  WHEN t0.c0 COLLATE NOCASE THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0)<(vt1.c0)) END);
SELECT ALL COUNT(*) FROM v0, vt1, t1, t0 WHERE (((((t1.c2)+(t1.c2))) BETWEEN (((t1.c0)*(t1.c18))) AND (((vt1.c0) BETWEEN (t1.c18) AND (t1.c2))))) ORDER BY CASE ((t1.c2)+(t0.c0))  WHEN t0.c0 COLLATE NOCASE THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0)<(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2)+(t1.c2))) BETWEEN (((t1.c0)*(t1.c18))) AND (((vt1.c0) BETWEEN (t1.c18) AND (t1.c2))))) IS TRUE)  as count FROM v0, vt1, t1, t0 ORDER BY CASE ((t1.c2)+(t0.c0))  WHEN t0.c0 COLLATE NOCASE THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0)<(vt1.c0)) END);
SELECT ALL COUNT(*) FROM v0, vt1, t1, t0 WHERE (((((t1.c2)+(t1.c2))) BETWEEN (((t1.c0)*(t1.c18))) AND (((vt1.c0) BETWEEN (t1.c18) AND (t1.c2))))) ORDER BY CASE ((t1.c2)+(t0.c0))  WHEN t0.c0 COLLATE NOCASE THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0)<(vt1.c0)) END;
SELECT COUNT(*) FROM vt0, v0, t1, vt1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, v0, t1, vt1, t0);
SELECT COUNT(*) FROM vt0, v0, t1, vt1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, v0, t1, vt1, t0);
SELECT COUNT(*) FROM vt0, v0, t1, vt1, t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, v0, t1 WHERE (0.10747146698875398) ORDER BY (((vt0.c0)!=(t1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.10747146698875398) IS TRUE)  as count FROM t0, vt1, vt0, v0, t1 ORDER BY (((vt0.c0)!=(t1.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, v0, t1 WHERE (0.10747146698875398) ORDER BY (((vt0.c0)!=(t1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.10747146698875398) IS TRUE)  as count FROM t0, vt1, vt0, v0, t1 ORDER BY (((vt0.c0)!=(t1.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, v0, t1 WHERE (0.10747146698875398) ORDER BY (((vt0.c0)!=(t1.c0)) IN ()) DESC;
SELECT COUNT(*) FROM vt0, v0, t1 NOT INDEXED FULL OUTER JOIN vt1 ON (((((v0.c0, t1.c18, vt0.c0)) BETWEEN ((t1.c2, vt0.c0, t1.c0)) AND ((t1.c18, '隬ꮲ\r', t1.c2))))LIKE(((t1.c0) BETWEEN (t1.c0) AND (x'')))) WHERE (((((((vt0.c0)OR(t1.c2)))AND(v0.c0)))>>(((v0.c0)<=(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(t1.c2)))AND(v0.c0)))>>(((v0.c0)<=(t1.c0))))) IS TRUE)  as count FROM vt0, v0, t1 FULL OUTER JOIN vt1 ON (((((v0.c0, t1.c18, vt0.c0)) BETWEEN ((t1.c2, vt0.c0, t1.c0)) AND ((t1.c18, '隬ꮲ\r', t1.c2))))LIKE(((t1.c0) BETWEEN (t1.c0) AND (x'')))));
SELECT COUNT(*) FROM vt0, v0, t1 NOT INDEXED FULL OUTER JOIN vt1 ON (((((v0.c0, t1.c18, vt0.c0)) BETWEEN ((t1.c2, vt0.c0, t1.c0)) AND ((t1.c18, '隬ꮲ\r', t1.c2))))LIKE(((t1.c0) BETWEEN (t1.c0) AND (x'')))) WHERE (((((((vt0.c0)OR(t1.c2)))AND(v0.c0)))>>(((v0.c0)<=(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(t1.c2)))AND(v0.c0)))>>(((v0.c0)<=(t1.c0))))) IS TRUE)  as count FROM vt0, v0, t1 FULL OUTER JOIN vt1 ON (((((v0.c0, t1.c18, vt0.c0)) BETWEEN ((t1.c2, vt0.c0, t1.c0)) AND ((t1.c18, '隬ꮲ\r', t1.c2))))LIKE(((t1.c0) BETWEEN (t1.c0) AND (x'')))));
SELECT COUNT(*) FROM vt0, v0, t1 NOT INDEXED FULL OUTER JOIN vt1 ON (((((v0.c0, t1.c18, vt0.c0)) BETWEEN ((t1.c2, vt0.c0, t1.c0)) AND ((t1.c18, '隬ꮲ\r', t1.c2))))LIKE(((t1.c0) BETWEEN (t1.c0) AND (x'')))) WHERE (((((((vt0.c0)OR(t1.c2)))AND(v0.c0)))>>(((v0.c0)<=(t1.c0)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((t0.c0) NOT NULL) FULL OUTER JOIN t1 ON UPPER(CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN t1.c0 THEN vt1.c0 WHEN t1.c2 THEN t1.c0 END) WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((t0.c0) NOT NULL) FULL OUTER JOIN t1 ON UPPER(CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN t1.c0 THEN vt1.c0 WHEN t1.c2 THEN t1.c0 END));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((t0.c0) NOT NULL) FULL OUTER JOIN t1 ON UPPER(CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN t1.c0 THEN vt1.c0 WHEN t1.c2 THEN t1.c0 END) WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((t0.c0) NOT NULL) FULL OUTER JOIN t1 ON UPPER(CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN t1.c0 THEN vt1.c0 WHEN t1.c2 THEN t1.c0 END));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((t0.c0) NOT NULL) FULL OUTER JOIN t1 ON UPPER(CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN t1.c0 THEN vt1.c0 WHEN t1.c2 THEN t1.c0 END) WHERE (t1.c1);
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((((vt0.c0)<<(vt0.c0))) NOT NULL) WHERE (v0.c0) ORDER BY (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()), v0.c0, (+ (vt0.c0)))) AND ((((vt0.c0) NOT NULL), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS INTEGER)))) ASC  NULLS LAST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.4311355173876321)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((vt0.c0)<<(vt0.c0))) NOT NULL) ORDER BY (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()), v0.c0, (+ (vt0.c0)))) AND ((((vt0.c0) NOT NULL), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS INTEGER)))) ASC  NULLS LAST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.4311355173876321)) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((((vt0.c0)<<(vt0.c0))) NOT NULL) WHERE (v0.c0) ORDER BY (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()), v0.c0, (+ (vt0.c0)))) AND ((((vt0.c0) NOT NULL), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS INTEGER)))) ASC  NULLS LAST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.4311355173876321)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((vt0.c0)<<(vt0.c0))) NOT NULL) ORDER BY (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()), v0.c0, (+ (vt0.c0)))) AND ((((vt0.c0) NOT NULL), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS INTEGER)))) ASC  NULLS LAST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.4311355173876321)) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((((vt0.c0)<<(vt0.c0))) NOT NULL) WHERE (v0.c0) ORDER BY (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()), v0.c0, (+ (vt0.c0)))) AND ((((vt0.c0) NOT NULL), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS INTEGER)))) ASC  NULLS LAST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.4311355173876321)) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON CASE CASE t1.c0  WHEN t1.c0 THEN t0.c0 END  WHEN ((((vt0.c0)OR(t1.c2)))OR(t1.c18)) THEN vt1.c0 END RIGHT OUTER JOIN t0 ON '' FULL OUTER JOIN t1 ON ((((vt0.c0) IS FALSE)) NOT BETWEEN (CASE vt1.c0  WHEN t0.c0 THEN t1.c0 ELSE vt1.c0 END) AND (((vt0.c0) NOT NULL))) WHERE (((((((vt1.c0) NOTNULL))OR(CAST('Uc9DCz7!4' AS NUMERIC))))AND(((((t1.c2)AND(t1.c1)))AND(t1.c18)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOTNULL))OR(CAST('Uc9DCz7!4' AS NUMERIC))))AND(((((t1.c2)AND(t1.c1)))AND(t1.c18))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CASE CASE t1.c0  WHEN t1.c0 THEN t0.c0 END  WHEN ((((vt0.c0)OR(t1.c2)))OR(t1.c18)) THEN vt1.c0 END RIGHT OUTER JOIN t0 ON '' FULL OUTER JOIN t1 ON ((((vt0.c0) IS FALSE)) NOT BETWEEN (CASE vt1.c0  WHEN t0.c0 THEN t1.c0 ELSE vt1.c0 END) AND (((vt0.c0) NOT NULL))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON CASE CASE t1.c0  WHEN t1.c0 THEN t0.c0 END  WHEN ((((vt0.c0)OR(t1.c2)))OR(t1.c18)) THEN vt1.c0 END RIGHT OUTER JOIN t0 ON '' FULL OUTER JOIN t1 ON ((((vt0.c0) IS FALSE)) NOT BETWEEN (CASE vt1.c0  WHEN t0.c0 THEN t1.c0 ELSE vt1.c0 END) AND (((vt0.c0) NOT NULL))) WHERE (((((((vt1.c0) NOTNULL))OR(CAST('Uc9DCz7!4' AS NUMERIC))))AND(((((t1.c2)AND(t1.c1)))AND(t1.c18)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOTNULL))OR(CAST('Uc9DCz7!4' AS NUMERIC))))AND(((((t1.c2)AND(t1.c1)))AND(t1.c18))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CASE CASE t1.c0  WHEN t1.c0 THEN t0.c0 END  WHEN ((((vt0.c0)OR(t1.c2)))OR(t1.c18)) THEN vt1.c0 END RIGHT OUTER JOIN t0 ON '' FULL OUTER JOIN t1 ON ((((vt0.c0) IS FALSE)) NOT BETWEEN (CASE vt1.c0  WHEN t0.c0 THEN t1.c0 ELSE vt1.c0 END) AND (((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM v0, t0, vt1, t1 RIGHT OUTER JOIN vt0 ON MIN(((v0.c0) IS TRUE), x'') WHERE ((NOT ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, t0, vt1, t1 RIGHT OUTER JOIN vt0 ON MIN(((v0.c0) IS TRUE), x''));
SELECT COUNT(*) FROM v0, t0, vt1, t1 RIGHT OUTER JOIN vt0 ON MIN(((v0.c0) IS TRUE), x'') WHERE ((NOT ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, t0, vt1, t1 RIGHT OUTER JOIN vt0 ON MIN(((v0.c0) IS TRUE), x''));
SELECT COUNT(*) FROM v0, t0, vt1, t1 RIGHT OUTER JOIN vt0 ON MIN(((v0.c0) IS TRUE), x'') WHERE ((NOT ((v0.c0 IN ()))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)>(t0.c0))) NOTNULL) CROSS JOIN vt1 ON ((v0.c0)LIKE(CASE vt0.c0  WHEN vt1.c0 THEN t1.c18 WHEN t1.c1 THEN x'cc65' WHEN t0.c0 THEN x'' ELSE t1.c18 END)) INNER JOIN t1 ON CASE ((t1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((t1.c2)GLOB(t0.c0)) THEN NULL WHEN ((t1.c2) NOT BETWEEN (vt1.c0) AND (t1.c1)) THEN ((t1.c1)!=(t1.c1)) WHEN ((t1.c2) IS TRUE) THEN t1.c18 ELSE (((t0.c0))<=((t1.c18))) END CROSS JOIN t0 ON json_insert(((t1.c18) BETWEEN ('') AND (v0.c0)), CAST(vt1.c0 AS INTEGER), (((x'')) NOT BETWEEN ((t1.c18)) AND ((t0.c0)))) WHERE (((((((((CASE WHEN t1.c2 THEN t1.c0 END)OR((NOT (t1.c18)))))OR(((v0.c0) BETWEEN (v0.c0) AND (t1.c0)))))OR((t1.c18 IN ()))))AND(CAST(0X4210beb0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t1.c2 THEN t1.c0 END)OR((NOT (t1.c18)))))OR(((v0.c0) BETWEEN (v0.c0) AND (t1.c0)))))OR((t1.c18 IN ()))))AND(CAST(0X4210beb0 AS BLOB)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)>(t0.c0))) NOTNULL) CROSS JOIN vt1 ON ((v0.c0)LIKE(CASE vt0.c0  WHEN vt1.c0 THEN t1.c18 WHEN t1.c1 THEN x'cc65' WHEN t0.c0 THEN x'' ELSE t1.c18 END)) INNER JOIN t1 ON CASE ((t1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((t1.c2)GLOB(t0.c0)) THEN NULL WHEN ((t1.c2) NOT BETWEEN (vt1.c0) AND (t1.c1)) THEN ((t1.c1)!=(t1.c1)) WHEN ((t1.c2) IS TRUE) THEN t1.c18 ELSE (((t0.c0))<=((t1.c18))) END CROSS JOIN t0 ON json_insert(((t1.c18) BETWEEN ('') AND (v0.c0)), CAST(vt1.c0 AS INTEGER), (((x'')) NOT BETWEEN ((t1.c18)) AND ((t0.c0)))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)>(t0.c0))) NOTNULL) CROSS JOIN vt1 ON ((v0.c0)LIKE(CASE vt0.c0  WHEN vt1.c0 THEN t1.c18 WHEN t1.c1 THEN x'cc65' WHEN t0.c0 THEN x'' ELSE t1.c18 END)) INNER JOIN t1 ON CASE ((t1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((t1.c2)GLOB(t0.c0)) THEN NULL WHEN ((t1.c2) NOT BETWEEN (vt1.c0) AND (t1.c1)) THEN ((t1.c1)!=(t1.c1)) WHEN ((t1.c2) IS TRUE) THEN t1.c18 ELSE (((t0.c0))<=((t1.c18))) END CROSS JOIN t0 ON json_insert(((t1.c18) BETWEEN ('') AND (v0.c0)), CAST(vt1.c0 AS INTEGER), (((x'')) NOT BETWEEN ((t1.c18)) AND ((t0.c0)))) WHERE (((((((((CASE WHEN t1.c2 THEN t1.c0 END)OR((NOT (t1.c18)))))OR(((v0.c0) BETWEEN (v0.c0) AND (t1.c0)))))OR((t1.c18 IN ()))))AND(CAST(0X4210beb0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t1.c2 THEN t1.c0 END)OR((NOT (t1.c18)))))OR(((v0.c0) BETWEEN (v0.c0) AND (t1.c0)))))OR((t1.c18 IN ()))))AND(CAST(0X4210beb0 AS BLOB)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)>(t0.c0))) NOTNULL) CROSS JOIN vt1 ON ((v0.c0)LIKE(CASE vt0.c0  WHEN vt1.c0 THEN t1.c18 WHEN t1.c1 THEN x'cc65' WHEN t0.c0 THEN x'' ELSE t1.c18 END)) INNER JOIN t1 ON CASE ((t1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((t1.c2)GLOB(t0.c0)) THEN NULL WHEN ((t1.c2) NOT BETWEEN (vt1.c0) AND (t1.c1)) THEN ((t1.c1)!=(t1.c1)) WHEN ((t1.c2) IS TRUE) THEN t1.c18 ELSE (((t0.c0))<=((t1.c18))) END CROSS JOIN t0 ON json_insert(((t1.c18) BETWEEN ('') AND (v0.c0)), CAST(vt1.c0 AS INTEGER), (((x'')) NOT BETWEEN ((t1.c18)) AND ((t0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 FULL OUTER JOIN t0 ON CASE WHEN (t0.c0 IN ()) THEN ((t1.c0)!=(v0.c0)) END CROSS JOIN vt1 ON (((vt0.c0)) NOT BETWEEN ((((t1.c18) NOTNULL))) AND ((((vt1.c0) NOTNULL)))) FULL OUTER JOIN t1 ON CAST(highlight(t1.c1, vt0.c0, t1.c1, vt0.c0) AS BLOB) WHERE (x'9aa5') ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'9aa5') IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN t0 ON CASE WHEN (t0.c0 IN ()) THEN ((t1.c0)!=(v0.c0)) END CROSS JOIN vt1 ON (((vt0.c0)) NOT BETWEEN ((((t1.c18) NOTNULL))) AND ((((vt1.c0) NOTNULL)))) FULL OUTER JOIN t1 ON CAST(highlight(t1.c1, vt0.c0, t1.c1, vt0.c0) AS BLOB) ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 FULL OUTER JOIN t0 ON CASE WHEN (t0.c0 IN ()) THEN ((t1.c0)!=(v0.c0)) END CROSS JOIN vt1 ON (((vt0.c0)) NOT BETWEEN ((((t1.c18) NOTNULL))) AND ((((vt1.c0) NOTNULL)))) FULL OUTER JOIN t1 ON CAST(highlight(t1.c1, vt0.c0, t1.c1, vt0.c0) AS BLOB) WHERE (x'9aa5') ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'9aa5') IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN t0 ON CASE WHEN (t0.c0 IN ()) THEN ((t1.c0)!=(v0.c0)) END CROSS JOIN vt1 ON (((vt0.c0)) NOT BETWEEN ((((t1.c18) NOTNULL))) AND ((((vt1.c0) NOTNULL)))) FULL OUTER JOIN t1 ON CAST(highlight(t1.c1, vt0.c0, t1.c1, vt0.c0) AS BLOB) ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN vt1 ON (- (TRIM(t1.c2))) CROSS JOIN v0 ON CASE (((vt0.c0))==((vt1.c0)))  WHEN ((v0.c0)<<(t1.c1)) THEN UPPER(DISTINCT t1.c1) ELSE 0.08973365957217239 END INNER JOIN vt0 ON ((json_remove(t0.c0, t1.c1))-(1679412149)) FULL OUTER JOIN t0 ON (CASE t1.c0  WHEN t1.c0 THEN t1.c2 WHEN t1.c18 THEN vt0.c0 WHEN t1.c2 THEN t1.c18 WHEN t1.c0 THEN t1.c18 WHEN t1.c1 THEN v0.c0 ELSE vt0.c0 END IN ()) WHERE ((((((+ (t0.c0)))OR(x'')))AND((t1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c0)))OR(x'')))AND((t1.c2 IN ())))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt1 ON (- (TRIM(t1.c2))) CROSS JOIN v0 ON CASE (((vt0.c0))=((vt1.c0)))  WHEN ((v0.c0)<<(t1.c1)) THEN UPPER(DISTINCT t1.c1) ELSE 0.08973365957217239 END INNER JOIN vt0 ON ((json_remove(t0.c0, t1.c1))-(1679412149)) FULL OUTER JOIN t0 ON (CASE t1.c0  WHEN t1.c0 THEN t1.c2 WHEN t1.c18 THEN vt0.c0 WHEN t1.c2 THEN t1.c18 WHEN t1.c0 THEN t1.c18 WHEN t1.c1 THEN v0.c0 ELSE vt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN vt1 ON (- (TRIM(t1.c2))) CROSS JOIN v0 ON CASE (((vt0.c0))==((vt1.c0)))  WHEN ((v0.c0)<<(t1.c1)) THEN UPPER(DISTINCT t1.c1) ELSE 0.08973365957217239 END INNER JOIN vt0 ON ((json_remove(t0.c0, t1.c1))-(1679412149)) FULL OUTER JOIN t0 ON (CASE t1.c0  WHEN t1.c0 THEN t1.c2 WHEN t1.c18 THEN vt0.c0 WHEN t1.c2 THEN t1.c18 WHEN t1.c0 THEN t1.c18 WHEN t1.c1 THEN v0.c0 ELSE vt0.c0 END IN ()) WHERE ((((((+ (t0.c0)))OR(x'')))AND((t1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c0)))OR(x'')))AND((t1.c2 IN ())))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt1 ON (- (TRIM(t1.c2))) CROSS JOIN v0 ON CASE (((vt0.c0))=((vt1.c0)))  WHEN ((v0.c0)<<(t1.c1)) THEN UPPER(DISTINCT t1.c1) ELSE 0.08973365957217239 END INNER JOIN vt0 ON ((json_remove(t0.c0, t1.c1))-(1679412149)) FULL OUTER JOIN t0 ON (CASE t1.c0  WHEN t1.c0 THEN t1.c2 WHEN t1.c18 THEN vt0.c0 WHEN t1.c2 THEN t1.c18 WHEN t1.c0 THEN t1.c18 WHEN t1.c1 THEN v0.c0 ELSE vt0.c0 END IN ()));
SELECT ALL * FROM v0, vt0, vt1, t1 WHERE (((((((((((t1.c0)LIKE(vt1.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(t1.c18)))OR(((((t1.c0)AND(t1.c18)))AND(vt1.c0)))))OR((('-54810161')AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0)LIKE(vt1.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(t1.c18)))OR(((((t1.c0)AND(t1.c18)))AND(vt1.c0)))))OR((('-54810161')AND(vt1.c0))))) IS TRUE)  as count FROM v0, vt0, vt1, t1);
SELECT ALL * FROM v0, vt0, vt1, t1 WHERE (((((((((((t1.c0)LIKE(vt1.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(t1.c18)))OR(((((t1.c0)AND(t1.c18)))AND(vt1.c0)))))OR((('-54810161')AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0)LIKE(vt1.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(t1.c18)))OR(((((t1.c0)AND(t1.c18)))AND(vt1.c0)))))OR((('-54810161')AND(vt1.c0))))) IS TRUE)  as count FROM v0, vt0, vt1, t1);
SELECT ALL * FROM v0, vt0, vt1, t1 WHERE (((((((((((t1.c0)LIKE(vt1.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(t1.c18)))OR(((((t1.c0)AND(t1.c18)))AND(vt1.c0)))))OR((('-54810161')AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c0) NOTNULL) AS TEXT)) ORDER BY (CAST(t0.c0 AS REAL) IN ()) DESC  NULLS LAST, CAST(((t0.c0)OR('1177046307')) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY (CAST(t0.c0 AS REAL) IN ()) DESC  NULLS LAST, CAST(((t0.c0)OR('1177046307')) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c0) NOTNULL) AS TEXT)) ORDER BY (CAST(t0.c0 AS REAL) IN ()) DESC  NULLS LAST, CAST(((t0.c0)OR('1177046307')) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY (CAST(t0.c0 AS REAL) IN ()) DESC  NULLS LAST, CAST(((t0.c0)OR('1177046307')) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c0) NOTNULL) AS TEXT)) ORDER BY (CAST(t0.c0 AS REAL) IN ()) DESC  NULLS LAST, CAST(((t0.c0)OR('1177046307')) AS NUMERIC)  NULLS FIRST;
SELECT * FROM t1, t0, vt0, v0 WHERE ((~ (((t1.c2)AND(t1.c1))))) ORDER BY ((((((v0.c0)AND(t0.c0)))AND(t1.c18))) BETWEEN (((((t1.c0)AND(t1.c0)))OR(v0.c0))) AND ((NOT (t1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c2)AND(t1.c1))))) IS TRUE)  as count FROM t1, t0, vt0, v0 ORDER BY ((((((v0.c0)AND(t0.c0)))AND(t1.c18))) BETWEEN (((((t1.c0)AND(t1.c0)))OR(v0.c0))) AND ((NOT (t1.c2))))  NULLS LAST);
SELECT * FROM t1, t0, vt0, v0 WHERE ((~ (((t1.c2)AND(t1.c1))))) ORDER BY ((((((v0.c0)AND(t0.c0)))AND(t1.c18))) BETWEEN (((((t1.c0)AND(t1.c0)))OR(v0.c0))) AND ((NOT (t1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c2)AND(t1.c1))))) IS TRUE)  as count FROM t1, t0, vt0, v0 ORDER BY ((((((v0.c0)AND(t0.c0)))AND(t1.c18))) BETWEEN (((((t1.c0)AND(t1.c0)))OR(v0.c0))) AND ((NOT (t1.c2))))  NULLS LAST);
SELECT * FROM t1, t0, vt0, v0 WHERE ((~ (((t1.c2)AND(t1.c1))))) ORDER BY ((((((v0.c0)AND(t0.c0)))AND(t1.c18))) BETWEEN (((((t1.c0)AND(t1.c0)))OR(v0.c0))) AND ((NOT (t1.c2))))  NULLS LAST;
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER));
SELECT COUNT(*) FROM t0, vt0, v0, t1, vt1 WHERE ((((NOT (t1.c1))) BETWEEN ((~ ('1962959752'))) AND (((((t1.c0)OR(t1.c18)))AND(vt1.c0))))) ORDER BY ((((((vt1.c0)&(t1.c1)))AND((((v0.c0))==((vt0.c0))))))AND(CASE WHEN vt1.c0 THEN t0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c1))) BETWEEN ((~ ('1962959752'))) AND (((((t1.c0)OR(t1.c18)))AND(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, v0, t1, vt1 ORDER BY ((((((vt1.c0)&(t1.c1)))AND((((v0.c0))==((vt0.c0))))))AND(CASE WHEN vt1.c0 THEN t0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, v0, t1, vt1 WHERE ((((NOT (t1.c1))) BETWEEN ((~ ('1962959752'))) AND (((((t1.c0)OR(t1.c18)))AND(vt1.c0))))) ORDER BY ((((((vt1.c0)&(t1.c1)))AND((((v0.c0))==((vt0.c0))))))AND(CASE WHEN vt1.c0 THEN t0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c1))) BETWEEN ((~ ('1962959752'))) AND (((((t1.c0)OR(t1.c18)))AND(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, v0, t1, vt1 ORDER BY ((((((vt1.c0)&(t1.c1)))AND((((v0.c0))==((vt0.c0))))))AND(CASE WHEN vt1.c0 THEN t0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, v0, t1, vt1 WHERE ((((NOT (t1.c1))) BETWEEN ((~ ('1962959752'))) AND (((((t1.c0)OR(t1.c18)))AND(vt1.c0))))) ORDER BY ((((((vt1.c0)&(t1.c1)))AND((((v0.c0))==((vt0.c0))))))AND(CASE WHEN vt1.c0 THEN t0.c0 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE BINARY);
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((SQLITE_SOURCE_ID()) BETWEEN (((t0.c0) NOTNULL)) AND (((vt0.c0) NOTNULL))) WHERE (((t0.c0 IN ()) IN (']!^6')));
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN ()) IN (']!^6'))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((SQLITE_SOURCE_ID()) BETWEEN (((t0.c0) NOTNULL)) AND (((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((SQLITE_SOURCE_ID()) BETWEEN (((t0.c0) NOTNULL)) AND (((vt0.c0) NOTNULL))) WHERE (((t0.c0 IN ()) IN (']!^6')));
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN ()) IN (']!^6'))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((SQLITE_SOURCE_ID()) BETWEEN (((t0.c0) NOTNULL)) AND (((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((SQLITE_SOURCE_ID()) BETWEEN (((t0.c0) NOTNULL)) AND (((vt0.c0) NOTNULL))) WHERE (((t0.c0 IN ()) IN (']!^6')));
SELECT ALL * FROM vt0 WHERE (((('')) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0)%(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((('')) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0)%(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((('')) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0)%(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((('')) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0)%(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((('')) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0)%(vt0.c0))))));
SELECT ALL * FROM v0, vt0, vt1, t0 WHERE (((((((((((t0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))<=(x'3678')));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))<=(x'3678'))) IS TRUE)  as count FROM v0, vt0, vt1, t0);
SELECT ALL * FROM v0, vt0, vt1, t0 WHERE (((((((((((t0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))<=(x'3678')));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))<=(x'3678'))) IS TRUE)  as count FROM v0, vt0, vt1, t0);
SELECT ALL * FROM v0, vt0, vt1, t0 WHERE (((((((((((t0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))<=(x'3678')));
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((((((t1.c0, t1.c1, t1.c2)) BETWEEN ((t1.c0, t1.c2, t1.c18)) AND ((t0.c0, t1.c2, t1.c1)))) ISNULL)) ORDER BY CASE t1.c0  WHEN (t0.c0 IN ()) THEN IFNULL(DISTINCT t1.c18, NULL) END DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c0, t1.c1, t1.c2)) BETWEEN ((t1.c0, t1.c2, t1.c18)) AND ((t0.c0, t1.c2, t1.c1)))) ISNULL)) IS TRUE)  as count FROM t1, t0 ORDER BY CASE t1.c0  WHEN (t0.c0 IN ()) THEN IFNULL(DISTINCT t1.c18, NULL) END DESC);
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((((((t1.c0, t1.c1, t1.c2)) BETWEEN ((t1.c0, t1.c2, t1.c18)) AND ((t0.c0, t1.c2, t1.c1)))) ISNULL)) ORDER BY CASE t1.c0  WHEN (t0.c0 IN ()) THEN IFNULL(DISTINCT t1.c18, NULL) END DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c0, t1.c1, t1.c2)) BETWEEN ((t1.c0, t1.c2, t1.c18)) AND ((t0.c0, t1.c2, t1.c1)))) ISNULL)) IS TRUE)  as count FROM t1, t0 ORDER BY CASE t1.c0  WHEN (t0.c0 IN ()) THEN IFNULL(DISTINCT t1.c18, NULL) END DESC);
SELECT ALL COUNT(*) FROM t1, t0 WHERE ((((((t1.c0, t1.c1, t1.c2)) BETWEEN ((t1.c0, t1.c2, t1.c18)) AND ((t0.c0, t1.c2, t1.c1)))) ISNULL)) ORDER BY CASE t1.c0  WHEN (t0.c0 IN ()) THEN IFNULL(DISTINCT t1.c18, NULL) END DESC;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((t1.c18)>>(t1.c18))))<=((((vt0.c0)>>(t1.c2)))))) ORDER BY (+ ((~ (t1.c0))));
SELECT SUM(count) FROM (SELECT (((((((t1.c18)>>(t1.c18))))<=((((vt0.c0)>>(t1.c2)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY (+ ((~ (t1.c0)))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((t1.c18)>>(t1.c18))))<=((((vt0.c0)>>(t1.c2)))))) ORDER BY (+ ((~ (t1.c0))));
SELECT SUM(count) FROM (SELECT (((((((t1.c18)>>(t1.c18))))<=((((vt0.c0)>>(t1.c2)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY (+ ((~ (t1.c0)))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((t1.c18)>>(t1.c18))))<=((((vt0.c0)>>(t1.c2)))))) ORDER BY (+ ((~ (t1.c0))));
SELECT * FROM vt0, v0, vt1, t0 WHERE (((((vt0.c0))>=((t0.c0))) IN (((vt0.c0)LIKE(vt1.c0)), (((('')OR(t0.c0)))AND(vt1.c0))))) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))>=((t0.c0))) IN (((vt0.c0)LIKE(vt1.c0)), (((('')OR(t0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0, v0, vt1, t0 ORDER BY ''  NULLS FIRST);
SELECT * FROM vt0, v0, vt1, t0 WHERE (((((vt0.c0))>=((t0.c0))) IN (((vt0.c0)LIKE(vt1.c0)), (((('')OR(t0.c0)))AND(vt1.c0))))) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))>=((t0.c0))) IN (((vt0.c0)LIKE(vt1.c0)), (((('')OR(t0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0, v0, vt1, t0 ORDER BY ''  NULLS FIRST);
SELECT * FROM vt0, v0, vt1, t0 WHERE (((((vt0.c0))>=((t0.c0))) IN (((vt0.c0)LIKE(vt1.c0)), (((('')OR(t0.c0)))AND(vt1.c0))))) ORDER BY ''  NULLS FIRST;
SELECT COUNT(*) FROM t0, t1, v0, vt1 FULL OUTER JOIN vt0 ON CAST((((t1.c0))>((v0.c0))) AS TEXT) WHERE (((((t1.c18) BETWEEN (t1.c18) AND (t1.c18))) NOT NULL)) ORDER BY rtreenode(v0.c0, ((vt0.c0)<<(v0.c0))), CASE WHEN ((t1.c0)<>(t1.c0)) THEN (+ (-1553067109)) END  NULLS LAST, ((((t1.c1)>(vt0.c0)))AND(((((t0.c0)OR(t1.c0)))OR(t1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c18) BETWEEN (t1.c18) AND (t1.c18))) NOT NULL)) IS TRUE)  as count FROM t0, t1, v0, vt1 FULL OUTER JOIN vt0 ON CAST((((t1.c0))>((v0.c0))) AS TEXT) ORDER BY rtreenode(v0.c0, ((vt0.c0)<<(v0.c0))), CASE WHEN ((t1.c0)!=(t1.c0)) THEN (+ (-1553067109)) END  NULLS LAST, ((((t1.c1)>(vt0.c0)))AND(((((t0.c0)OR(t1.c0)))OR(t1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1, v0, vt1 FULL OUTER JOIN vt0 ON CAST((((t1.c0))>((v0.c0))) AS TEXT) WHERE (((((t1.c18) BETWEEN (t1.c18) AND (t1.c18))) NOT NULL)) ORDER BY rtreenode(v0.c0, ((vt0.c0)<<(v0.c0))), CASE WHEN ((t1.c0)<>(t1.c0)) THEN (+ (-1553067109)) END  NULLS LAST, ((((t1.c1)>(vt0.c0)))AND(((((t0.c0)OR(t1.c0)))OR(t1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c18) BETWEEN (t1.c18) AND (t1.c18))) NOT NULL)) IS TRUE)  as count FROM t0, t1, v0, vt1 FULL OUTER JOIN vt0 ON CAST((((t1.c0))>((v0.c0))) AS TEXT) ORDER BY rtreenode(v0.c0, ((vt0.c0)<<(v0.c0))), CASE WHEN ((t1.c0)!=(t1.c0)) THEN (+ (-1553067109)) END  NULLS LAST, ((((t1.c1)>(vt0.c0)))AND(((((t0.c0)OR(t1.c0)))OR(t1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1, v0, vt1 FULL OUTER JOIN vt0 ON CAST((((t1.c0))>((v0.c0))) AS TEXT) WHERE (((((t1.c18) BETWEEN (t1.c18) AND (t1.c18))) NOT NULL)) ORDER BY rtreenode(v0.c0, ((vt0.c0)<<(v0.c0))), CASE WHEN ((t1.c0)<>(t1.c0)) THEN (+ (-1553067109)) END  NULLS LAST, ((((t1.c1)>(vt0.c0)))AND(((((t0.c0)OR(t1.c0)))OR(t1.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0, vt1, t0, t1 WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((v0.c0)<=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((v0.c0)<=(vt0.c0)))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, vt1, t0, t1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1, t0, t1 WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((v0.c0)<=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((v0.c0)<=(vt0.c0)))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, vt1, t0, t1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1, t0, t1 WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((v0.c0)<=(vt0.c0))))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((t1.c0 COLLATE BINARY))) RIGHT OUTER JOIN t1 ON CAST(((t1.c2) NOTNULL) AS TEXT) FULL OUTER JOIN vt1 ON t1.c1 WHERE (((t0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY CASE ((t0.c0) IS FALSE)  WHEN vt0.c0 COLLATE RTRIM THEN CASE vt0.c0  WHEN t1.c2 THEN vt1.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((t1.c0 COLLATE BINARY))) RIGHT OUTER JOIN t1 ON CAST(((t1.c2) NOTNULL) AS TEXT) FULL OUTER JOIN vt1 ON t1.c1 ORDER BY CASE ((t0.c0) IS FALSE)  WHEN vt0.c0 COLLATE RTRIM THEN CASE vt0.c0  WHEN t1.c2 THEN vt1.c0 END END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((t1.c0 COLLATE BINARY))) RIGHT OUTER JOIN t1 ON CAST(((t1.c2) NOTNULL) AS TEXT) FULL OUTER JOIN vt1 ON t1.c1 WHERE (((t0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY CASE ((t0.c0) IS FALSE)  WHEN vt0.c0 COLLATE RTRIM THEN CASE vt0.c0  WHEN t1.c2 THEN vt1.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((t1.c0 COLLATE BINARY))) RIGHT OUTER JOIN t1 ON CAST(((t1.c2) NOTNULL) AS TEXT) FULL OUTER JOIN vt1 ON t1.c1 ORDER BY CASE ((t0.c0) IS FALSE)  WHEN vt0.c0 COLLATE RTRIM THEN CASE vt0.c0  WHEN t1.c2 THEN vt1.c0 END END ASC  NULLS LAST);
SELECT ALL * FROM vt1, t0, t1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0))) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0))) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (t0.c0))) IS TRUE)  as count FROM vt1, t0, t1);
SELECT ALL * FROM vt1, t0, t1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0))) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0))) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (t0.c0))) IS TRUE)  as count FROM vt1, t0, t1);
SELECT ALL * FROM vt1, t0, t1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0))) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (t0.c0)));
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED(CAST(v0.c0 AS INTEGER)) LEFT OUTER JOIN t0 ON HEX(((t0.c0) BETWEEN (v0.c0) AND (t1.c18))) FULL OUTER JOIN t1 ON CASE WHEN t0.c0 COLLATE RTRIM THEN ((t1.c0)%(vt0.c0)) WHEN (vt1.c0 IN ()) THEN ((t1.c1)>>(t1.c2)) WHEN (((v0.c0))>=((t1.c2))) THEN ((t1.c18) NOT NULL) END WHERE (CASE WHEN '1605196843' THEN v0.c0 COLLATE NOCASE END) ORDER BY ((((t0.c0)LIKE(t1.c18))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (t1.c0))) AND ((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '1605196843' THEN v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED(CAST(v0.c0 AS INTEGER)) LEFT OUTER JOIN t0 ON HEX(((t0.c0) BETWEEN (v0.c0) AND (t1.c18))) FULL OUTER JOIN t1 ON CASE WHEN t0.c0 COLLATE RTRIM THEN ((t1.c0)%(vt0.c0)) WHEN (vt1.c0 IN ()) THEN ((t1.c1)>>(t1.c2)) WHEN (((v0.c0))>=((t1.c2))) THEN ((t1.c18) NOT NULL) END ORDER BY ((((t0.c0)LIKE(t1.c18))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (t1.c0))) AND ((NOT (vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED(CAST(v0.c0 AS INTEGER)) LEFT OUTER JOIN t0 ON HEX(((t0.c0) BETWEEN (v0.c0) AND (t1.c18))) FULL OUTER JOIN t1 ON CASE WHEN t0.c0 COLLATE RTRIM THEN ((t1.c0)%(vt0.c0)) WHEN (vt1.c0 IN ()) THEN ((t1.c1)>>(t1.c2)) WHEN (((v0.c0))>=((t1.c2))) THEN ((t1.c18) NOT NULL) END WHERE (CASE WHEN '1605196843' THEN v0.c0 COLLATE NOCASE END) ORDER BY ((((t0.c0)LIKE(t1.c18))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (t1.c0))) AND ((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '1605196843' THEN v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED(CAST(v0.c0 AS INTEGER)) LEFT OUTER JOIN t0 ON HEX(((t0.c0) BETWEEN (v0.c0) AND (t1.c18))) FULL OUTER JOIN t1 ON CASE WHEN t0.c0 COLLATE RTRIM THEN ((t1.c0)%(vt0.c0)) WHEN (vt1.c0 IN ()) THEN ((t1.c1)>>(t1.c2)) WHEN (((v0.c0))>=((t1.c2))) THEN ((t1.c18) NOT NULL) END ORDER BY ((((t0.c0)LIKE(t1.c18))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (t1.c0))) AND ((NOT (vt0.c0)))));
SELECT ALL * FROM v0 WHERE (0.9733578978472899);
SELECT SUM(count) FROM (SELECT ALL ((0.9733578978472899) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.9733578978472899);
SELECT SUM(count) FROM (SELECT ALL ((0.9733578978472899) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.9733578978472899);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON x'' WHERE (((((t1.c2) BETWEEN (t0.c0) AND (t1.c18)))<=('175832019'))) ORDER BY ((((CAST(t1.c18 AS INTEGER))AND(CASE WHEN t0.c0 THEN t1.c1 ELSE t1.c2 END)))AND(((t0.c0)AND(t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c2) BETWEEN (t0.c0) AND (t1.c18)))<=('175832019'))) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON x'' ORDER BY ((((CAST(t1.c18 AS INTEGER))AND(CASE WHEN t0.c0 THEN t1.c1 ELSE t1.c2 END)))AND(((t0.c0)AND(t1.c0)))) DESC);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON x'' WHERE (((((t1.c2) BETWEEN (t0.c0) AND (t1.c18)))<=('175832019'))) ORDER BY ((((CAST(t1.c18 AS INTEGER))AND(CASE WHEN t0.c0 THEN t1.c1 ELSE t1.c2 END)))AND(((t0.c0)AND(t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c2) BETWEEN (t0.c0) AND (t1.c18)))<=('175832019'))) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON x'' ORDER BY ((((CAST(t1.c18 AS INTEGER))AND(CASE WHEN t0.c0 THEN t1.c1 ELSE t1.c2 END)))AND(((t0.c0)AND(t1.c0)))) DESC);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON x'' WHERE (((((t1.c2) BETWEEN (t0.c0) AND (t1.c18)))<=('175832019'))) ORDER BY ((((CAST(t1.c18 AS INTEGER))AND(CASE WHEN t0.c0 THEN t1.c1 ELSE t1.c2 END)))AND(((t0.c0)AND(t1.c0)))) DESC;
SELECT ALL * FROM t0 INDEXED BY i96, vt1 WHERE ('') ORDER BY (vt1.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST, (((t0.c0, vt1.c0, t0.c0)) NOT BETWEEN ((-1484910291, TYPEOF(t0.c0), (vt1.c0 IN ()))) AND (('772614873' COLLATE RTRIM, ((t0.c0)<<(vt1.c0)), CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 INDEXED BY i96, vt1 ORDER BY (vt1.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST, (((t0.c0, vt1.c0, t0.c0)) NOT BETWEEN ((-1484910291, TYPEOF(t0.c0), (vt1.c0 IN ()))) AND (('772614873' COLLATE RTRIM, ((t0.c0)<<(vt1.c0)), CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))) ASC);
SELECT ALL * FROM t0 INDEXED BY i96, vt1 WHERE ('') ORDER BY (vt1.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST, (((t0.c0, vt1.c0, t0.c0)) NOT BETWEEN ((-1484910291, TYPEOF(t0.c0), (vt1.c0 IN ()))) AND (('772614873' COLLATE RTRIM, ((t0.c0)<<(vt1.c0)), CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 INDEXED BY i96, vt1 ORDER BY (vt1.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST, (((t0.c0, vt1.c0, t0.c0)) NOT BETWEEN ((-1484910291, TYPEOF(t0.c0), (vt1.c0 IN ()))) AND (('772614873' COLLATE RTRIM, ((t0.c0)<<(vt1.c0)), CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END, NULLIF(t0.c0, vt0.c0))) AND ((((t0.c0) NOT NULL), ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)), ((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END, NULLIF(t0.c0, vt0.c0))) AND ((((t0.c0) NOT NULL), ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)), ((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END, NULLIF(t0.c0, vt0.c0))) AND ((((t0.c0) NOT NULL), ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)), ((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END, NULLIF(t0.c0, vt0.c0))) AND ((((t0.c0) NOT NULL), ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)), ((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END, NULLIF(t0.c0, vt0.c0))) AND ((((t0.c0) NOT NULL), ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)), ((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))));
SELECT COUNT(*) FROM vt0, v0, t0, t1, vt1 WHERE (-489362647 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((-489362647 COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, t0, t1, vt1);
SELECT COUNT(*) FROM vt0, v0, t0, t1, vt1 WHERE (-489362647 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((-489362647 COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, t0, t1, vt1);
SELECT COUNT(*) FROM vt0, v0, t0, t1, vt1 WHERE (-489362647 COLLATE NOCASE);
SELECT * FROM vt0, t1 WHERE (((vt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY 902142609  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0, t1 ORDER BY 902142609  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (((vt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY 902142609  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0, t1 ORDER BY 902142609  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY)+(((vt1.c0) IS TRUE))) WHERE (((((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))) AND ('-1982790125')));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))) AND ('-1982790125'))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY)+(((vt1.c0) IS TRUE))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY)+(((vt1.c0) IS TRUE))) WHERE (((((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))) AND ('-1982790125')));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))) AND ('-1982790125'))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY)+(((vt1.c0) IS TRUE))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY)+(((vt1.c0) IS TRUE))) WHERE (((((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))) AND ('-1982790125')));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CASE (((vt0.c0, t0.c0, vt0.c0))>((x'7cb2', t0.c0, t0.c0)))  WHEN (((('k2')AND(t0.c0)))OR(vt0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) END WHERE (0xffffffffe58948cd);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe58948cd) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CASE (((vt0.c0, t0.c0, vt0.c0))>((x'7cb2', t0.c0, t0.c0)))  WHEN (((('k2')AND(t0.c0)))OR(vt0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CASE (((vt0.c0, t0.c0, vt0.c0))>((x'7cb2', t0.c0, t0.c0)))  WHEN (((('k2')AND(t0.c0)))OR(vt0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) END WHERE (0xffffffffe58948cd);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe58948cd) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CASE (((vt0.c0, t0.c0, vt0.c0))>((x'7cb2', t0.c0, t0.c0)))  WHEN (((('k2')AND(t0.c0)))OR(vt0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CASE (((vt0.c0, t0.c0, vt0.c0))>((x'7cb2', t0.c0, t0.c0)))  WHEN (((('k2')AND(t0.c0)))OR(vt0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) END WHERE (0xffffffffe58948cd);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)AND(TRIM(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)AND(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)AND(TRIM(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)AND(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)AND(TRIM(DISTINCT vt0.c0))));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t1 ON ((CAST(t1.c2 AS BLOB)) BETWEEN (CASE t1.c1  WHEN t1.c2 THEN t0.c0 END) AND (((t1.c1)+(x'c9db')))) FULL OUTER JOIN t0 ON CASE CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN t1.c2 WHEN t1.c0 THEN vt1.c0 END  WHEN 'Ks4(>L	' THEN ((vt1.c0) NOT NULL) ELSE ((t1.c1)>(vt1.c0)) END WHERE (CASE WHEN NULL THEN (((0.5798861570201415, vt1.c0, vt0.c0, vt1.c0, t1.c1)) NOT BETWEEN ((t0.c0, vt0.c0, t0.c0, x'494c', '^')) AND ((vt0.c0, t1.c1, t1.c2, t0.c0, t0.c0))) ELSE ((vt1.c0)<<(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN (((0.5798861570201415, vt1.c0, vt0.c0, vt1.c0, t1.c1)) NOT BETWEEN ((t0.c0, vt0.c0, t0.c0, x'494c', '^')) AND ((vt0.c0, t1.c1, t1.c2, t0.c0, t0.c0))) ELSE ((vt1.c0)<<(t0.c0)) END) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t1 ON ((CAST(t1.c2 AS BLOB)) BETWEEN (CASE t1.c1  WHEN t1.c2 THEN t0.c0 END) AND (((t1.c1)+(x'c9db')))) FULL OUTER JOIN t0 ON CASE CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN t1.c2 WHEN t1.c0 THEN vt1.c0 END  WHEN 'Ks4(>L	' THEN ((vt1.c0) NOT NULL) ELSE ((t1.c1)>(vt1.c0)) END);
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t1 ON ((CAST(t1.c2 AS BLOB)) BETWEEN (CASE t1.c1  WHEN t1.c2 THEN t0.c0 END) AND (((t1.c1)+(x'c9db')))) FULL OUTER JOIN t0 ON CASE CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN t1.c2 WHEN t1.c0 THEN vt1.c0 END  WHEN 'Ks4(>L	' THEN ((vt1.c0) NOT NULL) ELSE ((t1.c1)>(vt1.c0)) END WHERE (CASE WHEN NULL THEN (((0.5798861570201415, vt1.c0, vt0.c0, vt1.c0, t1.c1)) NOT BETWEEN ((t0.c0, vt0.c0, t0.c0, x'494c', '^')) AND ((vt0.c0, t1.c1, t1.c2, t0.c0, t0.c0))) ELSE ((vt1.c0)<<(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN (((0.5798861570201415, vt1.c0, vt0.c0, vt1.c0, t1.c1)) NOT BETWEEN ((t0.c0, vt0.c0, t0.c0, x'494c', '^')) AND ((vt0.c0, t1.c1, t1.c2, t0.c0, t0.c0))) ELSE ((vt1.c0)<<(t0.c0)) END) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t1 ON ((CAST(t1.c2 AS BLOB)) BETWEEN (CASE t1.c1  WHEN t1.c2 THEN t0.c0 END) AND (((t1.c1)+(x'c9db')))) FULL OUTER JOIN t0 ON CASE CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN t1.c2 WHEN t1.c0 THEN vt1.c0 END  WHEN 'Ks4(>L	' THEN ((vt1.c0) NOT NULL) ELSE ((t1.c1)>(vt1.c0)) END);
SELECT ALL COUNT(*) FROM t0, t1, vt1, vt0 WHERE (CASE t1.c2 COLLATE RTRIM  WHEN CAST('4075982175988298020' AS REAL) THEN CAST(t0.c0 AS BLOB) ELSE TYPEOF(t1.c1) END) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE t1.c2 COLLATE RTRIM  WHEN CAST('4075982175988298020' AS REAL) THEN CAST(t0.c0 AS BLOB) ELSE TYPEOF(t1.c1) END) IS TRUE)  as count FROM t0, t1, vt1, vt0 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM t0, t1, vt1, vt0 WHERE (CASE t1.c2 COLLATE RTRIM  WHEN CAST('4075982175988298020' AS REAL) THEN CAST(t0.c0 AS BLOB) ELSE TYPEOF(t1.c1) END) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE t1.c2 COLLATE RTRIM  WHEN CAST('4075982175988298020' AS REAL) THEN CAST(t0.c0 AS BLOB) ELSE TYPEOF(t1.c1) END) IS TRUE)  as count FROM t0, t1, vt1, vt0 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM t0, t1, vt1, vt0 WHERE (CASE t1.c2 COLLATE RTRIM  WHEN CAST('4075982175988298020' AS REAL) THEN CAST(t0.c0 AS BLOB) ELSE TYPEOF(t1.c1) END) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM vt1, t1, v0 NATURAL JOIN t0 WHERE (-1.101093699E9) ORDER BY COALESCE(t0.c0, CAST(t1.c0 AS INTEGER)) DESC  NULLS LAST, ((((((t1.c2)OR(vt1.c0)))AND(t1.c18)))*(((t1.c18)<<(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1.101093699E9) IS TRUE)  as count FROM vt1, t1, v0 NATURAL JOIN t0 ORDER BY COALESCE(t0.c0, CAST(t1.c0 AS INTEGER)) DESC  NULLS LAST, ((((((t1.c2)OR(vt1.c0)))AND(t1.c18)))*(((t1.c18)<<(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1, v0 NATURAL JOIN t0 WHERE (-1.101093699E9) ORDER BY COALESCE(t0.c0, CAST(t1.c0 AS INTEGER)) DESC  NULLS LAST, ((((((t1.c2)OR(vt1.c0)))AND(t1.c18)))*(((t1.c18)<<(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1.101093699E9) IS TRUE)  as count FROM vt1, t1, v0 NATURAL JOIN t0 ORDER BY COALESCE(t0.c0, CAST(t1.c0 AS INTEGER)) DESC  NULLS LAST, ((((((t1.c2)OR(vt1.c0)))AND(t1.c18)))*(((t1.c18)<<(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1, v0 NATURAL JOIN t0 WHERE (-1.101093699E9) ORDER BY COALESCE(t0.c0, CAST(t1.c0 AS INTEGER)) DESC  NULLS LAST, ((((((t1.c2)OR(vt1.c0)))AND(t1.c18)))*(((t1.c18)<<(v0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, v0, vt1 WHERE (CAST(((v0.c0)|('|,')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)|('|,')) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, v0, vt1 WHERE (CAST(((v0.c0)|('|,')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)|('|,')) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, v0, vt1 WHERE (CAST(((v0.c0)|('|,')) AS NUMERIC));
SELECT * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOTNULL)) ORDER BY ((((((t0.c0)/(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)/(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0)) DESC);
SELECT * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOTNULL)) ORDER BY ((((((t0.c0)/(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)/(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0)) DESC);
SELECT * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOTNULL)) ORDER BY ((((((t0.c0)/(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0)) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY (((((t1.c2 IN ()))OR(SQLITE_COMPILEOPTION_USED(t1.c1))))AND(t1.c2 COLLATE RTRIM))  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) BETWEEN (CAST(t1.c0 AS REAL)) AND (0.9778200770605115)), CASE (((t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c2, '1107953633')) AND ((t1.c2, t1.c2, t1.c18)))  WHEN CAST(t1.c1 AS REAL) THEN TRIM(0.08650592975969873, t1.c18) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c2 IN ()))OR(SQLITE_COMPILEOPTION_USED(t1.c1))))AND(t1.c2 COLLATE RTRIM))  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) BETWEEN (CAST(t1.c0 AS REAL)) AND (0.9778200770605115)), CASE (((t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c2, '1107953633')) AND ((t1.c2, t1.c2, t1.c18)))  WHEN CAST(t1.c1 AS REAL) THEN TRIM(0.08650592975969873, t1.c18) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY (((((t1.c2 IN ()))OR(SQLITE_COMPILEOPTION_USED(t1.c1))))AND(t1.c2 COLLATE RTRIM))  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) BETWEEN (CAST(t1.c0 AS REAL)) AND (0.9778200770605115)), CASE (((t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c2, '1107953633')) AND ((t1.c2, t1.c2, t1.c18)))  WHEN CAST(t1.c1 AS REAL) THEN TRIM(0.08650592975969873, t1.c18) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c2 IN ()))OR(SQLITE_COMPILEOPTION_USED(t1.c1))))AND(t1.c2 COLLATE RTRIM))  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) BETWEEN (CAST(t1.c0 AS REAL)) AND (0.9778200770605115)), CASE (((t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c2, '1107953633')) AND ((t1.c2, t1.c2, t1.c18)))  WHEN CAST(t1.c1 AS REAL) THEN TRIM(0.08650592975969873, t1.c18) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY (((((t1.c2 IN ()))OR(SQLITE_COMPILEOPTION_USED(t1.c1))))AND(t1.c2 COLLATE RTRIM))  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) BETWEEN (CAST(t1.c0 AS REAL)) AND (0.9778200770605115)), CASE (((t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c2, '1107953633')) AND ((t1.c2, t1.c2, t1.c18)))  WHEN CAST(t1.c1 AS REAL) THEN TRIM(0.08650592975969873, t1.c18) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (CAST(x'' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (CAST(x'' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (CAST(x'' AS BLOB));
SELECT ALL * FROM t0, t1 WHERE ((('\r}') NOT BETWEEN ((~ (t1.c2))) AND (((t1.c18)<<(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((('\r}') NOT BETWEEN ((~ (t1.c2))) AND (((t1.c18)<<(t0.c0))))) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE ((('\r}') NOT BETWEEN ((~ (t1.c2))) AND (((t1.c18)<<(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((('\r}') NOT BETWEEN ((~ (t1.c2))) AND (((t1.c18)<<(t0.c0))))) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE ((('\r}') NOT BETWEEN ((~ (t1.c2))) AND (((t1.c18)<<(t0.c0)))));
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE ((- ((+ (vt1.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((- ((+ (vt1.c0))))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE ((- ((+ (vt1.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((- ((+ (vt1.c0))))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE ((- ((+ (vt1.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) COLLATE BINARY DESC;
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 RIGHT OUTER JOIN v0 ON TYPEOF(((NULL) IS TRUE)) WHERE ((vt1.c0 COLLATE NOCASE IN ())) ORDER BY ((((((v0.c0)>=(vt0.c0)))OR(vt1.c0)))OR(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))))  NULLS LAST, (((vt1.c0 IN (vt1.c0)))<<(((vt0.c0)-(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 RIGHT OUTER JOIN v0 ON TYPEOF(((NULL) IS TRUE)) ORDER BY ((((((v0.c0)>=(vt0.c0)))OR(vt1.c0)))OR(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))))  NULLS LAST, (((vt1.c0 IN (vt1.c0)))<<(((vt0.c0)-(v0.c0))))  NULLS FIRST);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 RIGHT OUTER JOIN v0 ON TYPEOF(((NULL) IS TRUE)) WHERE ((vt1.c0 COLLATE NOCASE IN ())) ORDER BY ((((((v0.c0)>=(vt0.c0)))OR(vt1.c0)))OR(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))))  NULLS LAST, (((vt1.c0 IN (vt1.c0)))<<(((vt0.c0)-(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 RIGHT OUTER JOIN v0 ON TYPEOF(((NULL) IS TRUE)) ORDER BY ((((((v0.c0)>=(vt0.c0)))OR(vt1.c0)))OR(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))))  NULLS LAST, (((vt1.c0 IN (vt1.c0)))<<(((vt0.c0)-(v0.c0))))  NULLS FIRST);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 RIGHT OUTER JOIN v0 ON TYPEOF(((NULL) IS TRUE)) WHERE ((vt1.c0 COLLATE NOCASE IN ())) ORDER BY ((((((v0.c0)>=(vt0.c0)))OR(vt1.c0)))OR(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))))  NULLS LAST, (((vt1.c0 IN (vt1.c0)))<<(((vt0.c0)-(v0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, v0, vt1, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t0, vt0, v0, vt1, t1);
SELECT ALL COUNT(*) FROM t0, vt0, v0, vt1, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t0, vt0, v0, vt1, t1);
SELECT ALL COUNT(*) FROM t0, vt0, v0, vt1, t1 WHERE (t1.c0);
SELECT * FROM t1, vt1, v0, t0, vt0 WHERE ((((t1.c18) NOTNULL) IN ((t1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((t1.c18) NOTNULL) IN ((t1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM t1, vt1, v0, t0, vt0);
SELECT * FROM t1, vt1, v0, t0, vt0 WHERE ((((t1.c18) NOTNULL) IN ((t1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((t1.c18) NOTNULL) IN ((t1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM t1, vt1, v0, t0, vt0);
SELECT * FROM t1, vt1, v0, t0, vt0 WHERE ((((t1.c18) NOTNULL) IN ((t1.c0 IN (vt1.c0)))));
SELECT ALL * FROM v0, vt0 WHERE (CAST(json_remove(vt0.c0, vt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_remove(vt0.c0, vt0.c0) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CAST(json_remove(vt0.c0, vt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_remove(vt0.c0, vt0.c0) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM t1 WHERE ((((NULL IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((NULL IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((NULL IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM t0, t1, vt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t0, t1, vt0);
SELECT ALL COUNT(*) FROM t0, t1, vt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t0, t1, vt0);
SELECT ALL COUNT(*) FROM t0, t1, vt0 WHERE (t1.c0);
SELECT * FROM v0, vt1, t1, vt0, t0 WHERE ((((t1.c2)) NOT BETWEEN ((CAST(t1.c2 AS TEXT))) AND (((((t0.c0))=((v0.c0))))))) ORDER BY ((CASE t1.c18  WHEN t1.c1 THEN t1.c0 END) BETWEEN (NULL) AND (((t1.c0)AND(t1.c18)))) ASC, (((((t1.c0 IN (t1.c2, t0.c0)))AND(CAST(t0.c0 AS INTEGER))))AND(json_object(t1.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((t1.c2)) NOT BETWEEN ((CAST(t1.c2 AS TEXT))) AND (((((t0.c0))=((v0.c0))))))) IS TRUE)  as count FROM v0, vt1, t1, vt0, t0 ORDER BY ((CASE t1.c18  WHEN t1.c1 THEN t1.c0 END) BETWEEN (NULL) AND (((t1.c0)AND(t1.c18)))) ASC, (((((t1.c0 IN (t1.c2, t0.c0)))AND(CAST(t0.c0 AS INTEGER))))AND(json_object(t1.c0, vt0.c0))));
SELECT * FROM v0, vt1, t1, vt0, t0 WHERE ((((t1.c2)) NOT BETWEEN ((CAST(t1.c2 AS TEXT))) AND (((((t0.c0))=((v0.c0))))))) ORDER BY ((CASE t1.c18  WHEN t1.c1 THEN t1.c0 END) BETWEEN (NULL) AND (((t1.c0)AND(t1.c18)))) ASC, (((((t1.c0 IN (t1.c2, t0.c0)))AND(CAST(t0.c0 AS INTEGER))))AND(json_object(t1.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((t1.c2)) NOT BETWEEN ((CAST(t1.c2 AS TEXT))) AND (((((t0.c0))=((v0.c0))))))) IS TRUE)  as count FROM v0, vt1, t1, vt0, t0 ORDER BY ((CASE t1.c18  WHEN t1.c1 THEN t1.c0 END) BETWEEN (NULL) AND (((t1.c0)AND(t1.c18)))) ASC, (((((t1.c0 IN (t1.c2, t0.c0)))AND(CAST(t0.c0 AS INTEGER))))AND(json_object(t1.c0, vt0.c0))));
SELECT * FROM v0, vt1, t1, vt0, t0 WHERE ((((t1.c2)) NOT BETWEEN ((CAST(t1.c2 AS TEXT))) AND (((((t0.c0))=((v0.c0))))))) ORDER BY ((CASE t1.c18  WHEN t1.c1 THEN t1.c0 END) BETWEEN (NULL) AND (((t1.c0)AND(t1.c18)))) ASC, (((((t1.c0 IN (t1.c2, t0.c0)))AND(CAST(t0.c0 AS INTEGER))))AND(json_object(t1.c0, vt0.c0)));
SELECT ALL * FROM vt0, vt1, t1, v0 WHERE (((((v0.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, t1, v0);
SELECT ALL * FROM vt0, vt1, t1, v0 WHERE (((((v0.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, t1, v0);
SELECT ALL * FROM vt0, vt1, t1, v0 WHERE (((((v0.c0) NOTNULL)) IS FALSE));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON ((HEX(v0.c0)) NOT BETWEEN (vt1.c0) AND (LIKELY(DISTINCT vt1.c0))) WHERE (LOWER(v0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(v0.c0)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((HEX(v0.c0)) NOT BETWEEN (vt1.c0) AND (LIKELY(DISTINCT vt1.c0))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON ((HEX(v0.c0)) NOT BETWEEN (vt1.c0) AND (LIKELY(DISTINCT vt1.c0))) WHERE (LOWER(v0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(v0.c0)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((HEX(v0.c0)) NOT BETWEEN (vt1.c0) AND (LIKELY(DISTINCT vt1.c0))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON ((HEX(v0.c0)) NOT BETWEEN (vt1.c0) AND (LIKELY(DISTINCT vt1.c0))) WHERE (LOWER(v0.c0));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt1 ON (((t1.c18 IN ()))GLOB(t1.c0)) CROSS JOIN t0 ON ((((t1.c18)OR(vt0.c0))) BETWEEN (0.5364375931883117) AND (CASE WHEN vt1.c0 THEN t1.c0 ELSE x'' END)) FULL OUTER JOIN t1 ON ((((((((((((t1.c18)OR('((V	E]v')))OR(v0.c0)))AND(((t1.c2) ISNULL))))AND((t1.c18 IN ()))))AND(((vt1.c0) IS TRUE))))OR(((((vt0.c0)OR(vt1.c0)))OR(t1.c1)))) INNER JOIN vt0 ON (((+ (t1.c1)))OR(json_insert(t0.c0, vt0.c0, vt1.c0))) WHERE (1.815377079E9) ORDER BY CASE WHEN (((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))) THEN ((t1.c0)IS(t1.c2)) WHEN vt1.c0 COLLATE RTRIM THEN (v0.c0 IN ()) WHEN (NOT (vt1.c0)) THEN (((v0.c0))>=((vt1.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((1.815377079E9) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON (((t1.c18 IN ()))GLOB(t1.c0)) CROSS JOIN t0 ON ((((t1.c18)OR(vt0.c0))) BETWEEN (0.5364375931883117) AND (CASE WHEN vt1.c0 THEN t1.c0 ELSE x'' END)) FULL OUTER JOIN t1 ON ((((((((((((t1.c18)OR('((V	E]v')))OR(v0.c0)))AND(((t1.c2) ISNULL))))AND((t1.c18 IN ()))))AND(((vt1.c0) IS TRUE))))OR(((((vt0.c0)OR(vt1.c0)))OR(t1.c1)))) INNER JOIN vt0 ON (((+ (t1.c1)))OR(json_insert(t0.c0, vt0.c0, vt1.c0))) ORDER BY CASE WHEN (((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))) THEN ((t1.c0)IS(t1.c2)) WHEN vt1.c0 COLLATE RTRIM THEN (v0.c0 IN ()) WHEN (NOT (vt1.c0)) THEN (((v0.c0))>=((vt1.c0))) END ASC);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt1 ON (((t1.c18 IN ()))GLOB(t1.c0)) CROSS JOIN t0 ON ((((t1.c18)OR(vt0.c0))) BETWEEN (0.5364375931883117) AND (CASE WHEN vt1.c0 THEN t1.c0 ELSE x'' END)) FULL OUTER JOIN t1 ON ((((((((((((t1.c18)OR('((V	E]v')))OR(v0.c0)))AND(((t1.c2) ISNULL))))AND((t1.c18 IN ()))))AND(((vt1.c0) IS TRUE))))OR(((((vt0.c0)OR(vt1.c0)))OR(t1.c1)))) INNER JOIN vt0 ON (((+ (t1.c1)))OR(json_insert(t0.c0, vt0.c0, vt1.c0))) WHERE (1.815377079E9) ORDER BY CASE WHEN (((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))) THEN ((t1.c0)IS(t1.c2)) WHEN vt1.c0 COLLATE RTRIM THEN (v0.c0 IN ()) WHEN (NOT (vt1.c0)) THEN (((v0.c0))>=((vt1.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((1.815377079E9) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON (((t1.c18 IN ()))GLOB(t1.c0)) CROSS JOIN t0 ON ((((t1.c18)OR(vt0.c0))) BETWEEN (0.5364375931883117) AND (CASE WHEN vt1.c0 THEN t1.c0 ELSE x'' END)) FULL OUTER JOIN t1 ON ((((((((((((t1.c18)OR('((V	E]v')))OR(v0.c0)))AND(((t1.c2) ISNULL))))AND((t1.c18 IN ()))))AND(((vt1.c0) IS TRUE))))OR(((((vt0.c0)OR(vt1.c0)))OR(t1.c1)))) INNER JOIN vt0 ON (((+ (t1.c1)))OR(json_insert(t0.c0, vt0.c0, vt1.c0))) ORDER BY CASE WHEN (((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))) THEN ((t1.c0)IS(t1.c2)) WHEN vt1.c0 COLLATE RTRIM THEN (v0.c0 IN ()) WHEN (NOT (vt1.c0)) THEN (((v0.c0))>=((vt1.c0))) END ASC);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON (('2Y') IS TRUE) COLLATE BINARY INNER JOIN t1 ON ((UNICODE(t1.c1))<(v0.c0 COLLATE NOCASE)) WHERE (CAST(HEX(DISTINCT 0Xffffffffdbb47dde) AS NUMERIC)) ORDER BY (((((v0.c0)OR(v0.c0)))OR(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(DISTINCT 0Xffffffffdbb47dde) AS NUMERIC)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON (('2Y') IS TRUE) COLLATE BINARY INNER JOIN t1 ON ((UNICODE(t1.c1))<(v0.c0 COLLATE NOCASE)) ORDER BY (((((v0.c0)OR(v0.c0)))OR(t0.c0)) IN ()));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON (('2Y') IS TRUE) COLLATE BINARY INNER JOIN t1 ON ((UNICODE(t1.c1))<(v0.c0 COLLATE NOCASE)) WHERE (CAST(HEX(DISTINCT 0Xffffffffdbb47dde) AS NUMERIC)) ORDER BY (((((v0.c0)OR(v0.c0)))OR(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(DISTINCT 0Xffffffffdbb47dde) AS NUMERIC)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON (('2Y') IS TRUE) COLLATE BINARY INNER JOIN t1 ON ((UNICODE(t1.c1))<(v0.c0 COLLATE NOCASE)) ORDER BY (((((v0.c0)OR(v0.c0)))OR(t0.c0)) IN ()));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON (('2Y') IS TRUE) COLLATE BINARY INNER JOIN t1 ON ((UNICODE(t1.c1))<(v0.c0 COLLATE NOCASE)) WHERE (CAST(HEX(DISTINCT 0Xffffffffdbb47dde) AS NUMERIC)) ORDER BY (((((v0.c0)OR(v0.c0)))OR(t0.c0)) IN ());
SELECT ALL * FROM t1, v0 WHERE ((~ ((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t1.c0 IN ())))) IS TRUE)  as count FROM t1, v0);
SELECT ALL * FROM t1, v0 WHERE ((~ ((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t1.c0 IN ())))) IS TRUE)  as count FROM t1, v0);
SELECT ALL * FROM t1, v0 WHERE ((~ ((t1.c0 IN ()))));
SELECT * FROM vt1, t1, t0, v0, vt0 WHERE (load_extension(0.8756902944809237));
SELECT SUM(count) FROM (SELECT ((load_extension(0.8756902944809237)) IS TRUE)  as count FROM vt1, t1, t0, v0, vt0);
SELECT * FROM vt1, t1, t0, v0, vt0 WHERE (load_extension(0.8756902944809237));
SELECT SUM(count) FROM (SELECT ((load_extension(0.8756902944809237)) IS TRUE)  as count FROM vt1, t1, t0, v0, vt0);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM t1, t0, v0, vt1 WHERE ((((((v0.c0)|(t0.c0)), (t1.c18 IN ()), (((vt1.c0)) BETWEEN ((t0.c0)) AND ((v0.c0)))))<((x'', v0.c0 COLLATE BINARY, ((x'9e4a')!=(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)|(t0.c0)), (t1.c18 IN ()), (((vt1.c0)) BETWEEN ((t0.c0)) AND ((v0.c0)))))<((x'', v0.c0 COLLATE BINARY, ((x'9e4a')!=(vt1.c0)))))) IS TRUE)  as count FROM t1, t0, v0, vt1);
SELECT ALL COUNT(*) FROM t1, t0, v0, vt1 WHERE ((((((v0.c0)|(t0.c0)), (t1.c18 IN ()), (((vt1.c0)) BETWEEN ((t0.c0)) AND ((v0.c0)))))<((x'', v0.c0 COLLATE BINARY, ((x'9e4a')!=(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)|(t0.c0)), (t1.c18 IN ()), (((vt1.c0)) BETWEEN ((t0.c0)) AND ((v0.c0)))))<((x'', v0.c0 COLLATE BINARY, ((x'9e4a')!=(vt1.c0)))))) IS TRUE)  as count FROM t1, t0, v0, vt1);
SELECT ALL COUNT(*) FROM t1, t0, v0, vt1 WHERE ((((((v0.c0)|(t0.c0)), (t1.c18 IN ()), (((vt1.c0)) BETWEEN ((t0.c0)) AND ((v0.c0)))))<((x'', v0.c0 COLLATE BINARY, ((x'9e4a')!=(vt1.c0))))));
SELECT ALL COUNT(*) FROM t1, t0 FULL OUTER JOIN vt1 ON v0.c0 FULL OUTER JOIN vt0 ON CAST((((t1.c0))=((vt1.c0))) AS REAL) RIGHT OUTER JOIN v0 ON v0.c0 WHERE (v0.c0) ORDER BY ((t1.c2 COLLATE NOCASE)>=((((vt0.c0))>((t1.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t1, t0 FULL OUTER JOIN vt1 ON v0.c0 FULL OUTER JOIN vt0 ON CAST((((t1.c0))==((vt1.c0))) AS REAL) RIGHT OUTER JOIN v0 ON v0.c0 ORDER BY ((t1.c2 COLLATE NOCASE)>=((((vt0.c0))>((t1.c2))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, t0 FULL OUTER JOIN vt1 ON v0.c0 FULL OUTER JOIN vt0 ON CAST((((t1.c0))=((vt1.c0))) AS REAL) RIGHT OUTER JOIN v0 ON v0.c0 WHERE (v0.c0) ORDER BY ((t1.c2 COLLATE NOCASE)>=((((vt0.c0))>((t1.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t1, t0 FULL OUTER JOIN vt1 ON v0.c0 FULL OUTER JOIN vt0 ON CAST((((t1.c0))==((vt1.c0))) AS REAL) RIGHT OUTER JOIN v0 ON v0.c0 ORDER BY ((t1.c2 COLLATE NOCASE)>=((((vt0.c0))>((t1.c2))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 CROSS JOIN t0 ON NULLIF(DISTINCT (vt0.c0 IN ()), (vt0.c0 IN (v0.c0))) LEFT OUTER JOIN v0 ON t1.c18 WHERE (((((((t0.c0)AND(NULL)))OR(CAST(t1.c0 AS INTEGER))))OR(((0.6356328303757594)IS(t1.c1))))) ORDER BY (- ((t1.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(NULL)))OR(CAST(t1.c0 AS INTEGER))))OR(((0.6356328303757594)IS(t1.c1))))) IS TRUE)  as count FROM vt0, t1 CROSS JOIN t0 ON NULLIF(DISTINCT (vt0.c0 IN ()), (vt0.c0 IN (v0.c0))) LEFT OUTER JOIN v0 ON t1.c18 ORDER BY (- ((t1.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 CROSS JOIN t0 ON NULLIF(DISTINCT (vt0.c0 IN ()), (vt0.c0 IN (v0.c0))) LEFT OUTER JOIN v0 ON t1.c18 WHERE (((((((t0.c0)AND(NULL)))OR(CAST(t1.c0 AS INTEGER))))OR(((0.6356328303757594)IS(t1.c1))))) ORDER BY (- ((t1.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(NULL)))OR(CAST(t1.c0 AS INTEGER))))OR(((0.6356328303757594)IS(t1.c1))))) IS TRUE)  as count FROM vt0, t1 CROSS JOIN t0 ON NULLIF(DISTINCT (vt0.c0 IN ()), (vt0.c0 IN (v0.c0))) LEFT OUTER JOIN v0 ON t1.c18 ORDER BY (- ((t1.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 CROSS JOIN t0 ON NULLIF(DISTINCT (vt0.c0 IN ()), (vt0.c0 IN (v0.c0))) LEFT OUTER JOIN v0 ON t1.c18 WHERE (((((((t0.c0)AND(NULL)))OR(CAST(t1.c0 AS INTEGER))))OR(((0.6356328303757594)IS(t1.c1))))) ORDER BY (- ((t1.c0 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, v0, vt1 WHERE (CASE vt1.c0  WHEN CAST(t1.c18 AS BLOB) THEN CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE t1.c2 END ELSE t1.c1 COLLATE BINARY END) ORDER BY ((((((t1.c2)AND(t1.c0)))AND(t1.c2)))>>(CAST(v0.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN CAST(t1.c18 AS BLOB) THEN CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE t1.c2 END ELSE t1.c1 COLLATE BINARY END) IS TRUE)  as count FROM t1, v0, vt1 ORDER BY ((((((t1.c2)AND(t1.c0)))AND(t1.c2)))>>(CAST(v0.c0 AS REAL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, v0, vt1 WHERE (CASE vt1.c0  WHEN CAST(t1.c18 AS BLOB) THEN CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE t1.c2 END ELSE t1.c1 COLLATE BINARY END) ORDER BY ((((((t1.c2)AND(t1.c0)))AND(t1.c2)))>>(CAST(v0.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN CAST(t1.c18 AS BLOB) THEN CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE t1.c2 END ELSE t1.c1 COLLATE BINARY END) IS TRUE)  as count FROM t1, v0, vt1 ORDER BY ((((((t1.c2)AND(t1.c0)))AND(t1.c2)))>>(CAST(v0.c0 AS REAL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, v0, vt1 WHERE (CASE vt1.c0  WHEN CAST(t1.c18 AS BLOB) THEN CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE t1.c2 END ELSE t1.c1 COLLATE BINARY END) ORDER BY ((((((t1.c2)AND(t1.c0)))AND(t1.c2)))>>(CAST(v0.c0 AS REAL))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((NULL) BETWEEN (t1.c0) AND (t1.c0))) IS FALSE) LEFT OUTER JOIN t1 ON CASE ((t0.c0) NOT BETWEEN (t1.c1) AND (t1.c18))  WHEN t0.c0 THEN ((((((((t1.c1)OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(t1.c1)) END WHERE (((NULL COLLATE RTRIM) NOT BETWEEN ((((t0.c0))<=((vt0.c0)))) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE RTRIM) NOT BETWEEN ((((t0.c0))<=((vt0.c0)))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((NULL) BETWEEN (t1.c0) AND (t1.c0))) IS FALSE) LEFT OUTER JOIN t1 ON CASE ((t0.c0) NOT BETWEEN (t1.c1) AND (t1.c18))  WHEN t0.c0 THEN ((((((((t1.c1)OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(t1.c1)) END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((NULL) BETWEEN (t1.c0) AND (t1.c0))) IS FALSE) LEFT OUTER JOIN t1 ON CASE ((t0.c0) NOT BETWEEN (t1.c1) AND (t1.c18))  WHEN t0.c0 THEN ((((((((t1.c1)OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(t1.c1)) END WHERE (((NULL COLLATE RTRIM) NOT BETWEEN ((((t0.c0))<=((vt0.c0)))) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE RTRIM) NOT BETWEEN ((((t0.c0))<=((vt0.c0)))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((NULL) BETWEEN (t1.c0) AND (t1.c0))) IS FALSE) LEFT OUTER JOIN t1 ON CASE ((t0.c0) NOT BETWEEN (t1.c1) AND (t1.c18))  WHEN t0.c0 THEN ((((((((t1.c1)OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(t1.c1)) END);
SELECT ALL * FROM vt0 WHERE ((+ ('-668024529' COLLATE BINARY))) ORDER BY (((((vt0.c0 IN ()))AND(((((vt0.c0)OR(vt0.c0)))OR(x'')))))AND(CAST(vt0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((+ ('-668024529' COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))AND(((((vt0.c0)OR(vt0.c0)))OR(x'')))))AND(CAST(vt0.c0 AS NUMERIC))) ASC);
SELECT ALL * FROM vt0 WHERE ((+ ('-668024529' COLLATE BINARY))) ORDER BY (((((vt0.c0 IN ()))AND(((((vt0.c0)OR(vt0.c0)))OR(x'')))))AND(CAST(vt0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((+ ('-668024529' COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))AND(((((vt0.c0)OR(vt0.c0)))OR(x'')))))AND(CAST(vt0.c0 AS NUMERIC))) ASC);
SELECT * FROM t0, vt1, vt0, v0, t1 WHERE ((TRIM(t1.c2) IN (((t1.c1) BETWEEN (t1.c2) AND ('-2005361795')), (t1.c18 IN ()))));
SELECT SUM(count) FROM (SELECT (((TRIM(t1.c2) IN (((t1.c1) BETWEEN (t1.c2) AND ('-2005361795')), (t1.c18 IN ())))) IS TRUE)  as count FROM t0, vt1, vt0, v0, t1);
SELECT * FROM t0, vt1, vt0, v0, t1 WHERE ((TRIM(t1.c2) IN (((t1.c1) BETWEEN (t1.c2) AND ('-2005361795')), (t1.c18 IN ()))));
SELECT SUM(count) FROM (SELECT (((TRIM(t1.c2) IN (((t1.c1) BETWEEN (t1.c2) AND ('-2005361795')), (t1.c18 IN ())))) IS TRUE)  as count FROM t0, vt1, vt0, v0, t1);
SELECT * FROM t0, vt1, vt0, v0, t1 WHERE ((TRIM(t1.c2) IN (((t1.c1) BETWEEN (t1.c2) AND ('-2005361795')), (t1.c18 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c0))<((vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.4396285564580239 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c0))<((vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.4396285564580239 END END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c0))<((vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.4396285564580239 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c0))<((vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.4396285564580239 END END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c0))<((vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.4396285564580239 END END);
SELECT * FROM v0 WHERE ('-1e500');
SELECT SUM(count) FROM (SELECT ALL (('-1e500') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('-1e500');
SELECT SUM(count) FROM (SELECT ALL (('-1e500') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('-1e500');
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), ((t0.c0)/(t0.c0)), CAST(t0.c0 AS INTEGER), t0.c0 COLLATE BINARY, ((t0.c0) ISNULL))) AND ((t0.c0 COLLATE BINARY, (t0.c0 IN ()), (t0.c0 IN (t0.c0)), '', ((t0.c0)AND(''))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), ((t0.c0)/(t0.c0)), CAST(t0.c0 AS INTEGER), t0.c0 COLLATE BINARY, ((t0.c0) ISNULL))) AND ((t0.c0 COLLATE BINARY, (t0.c0 IN ()), (t0.c0 IN (t0.c0)), '', ((t0.c0)AND('')))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), ((t0.c0)/(t0.c0)), CAST(t0.c0 AS INTEGER), t0.c0 COLLATE BINARY, ((t0.c0) ISNULL))) AND ((t0.c0 COLLATE BINARY, (t0.c0 IN ()), (t0.c0 IN (t0.c0)), '', ((t0.c0)AND(''))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), ((t0.c0)/(t0.c0)), CAST(t0.c0 AS INTEGER), t0.c0 COLLATE BINARY, ((t0.c0) ISNULL))) AND ((t0.c0 COLLATE BINARY, (t0.c0 IN ()), (t0.c0 IN (t0.c0)), '', ((t0.c0)AND('')))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), ((t0.c0)/(t0.c0)), CAST(t0.c0 AS INTEGER), t0.c0 COLLATE BINARY, ((t0.c0) ISNULL))) AND ((t0.c0 COLLATE BINARY, (t0.c0 IN ()), (t0.c0 IN (t0.c0)), '', ((t0.c0)AND(''))))));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1, t1, v0, vt0 WHERE (((json_remove(vt0.c0, t1.c2))|((+ (vt1.c0))))) ORDER BY ((((t1.c0)>>(vt1.c0))) BETWEEN ((- (v0.c0))) AND (v0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((json_remove(vt0.c0, t1.c2))|((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, t1, v0, vt0 ORDER BY ((((t1.c0)>>(vt1.c0))) BETWEEN ((- (v0.c0))) AND (v0.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM vt1, t1, v0, vt0 WHERE (((json_remove(vt0.c0, t1.c2))|((+ (vt1.c0))))) ORDER BY ((((t1.c0)>>(vt1.c0))) BETWEEN ((- (v0.c0))) AND (v0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((json_remove(vt0.c0, t1.c2))|((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, t1, v0, vt0 ORDER BY ((((t1.c0)>>(vt1.c0))) BETWEEN ((- (v0.c0))) AND (v0.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM vt1, t1, v0, vt0 WHERE (((json_remove(vt0.c0, t1.c2))|((+ (vt1.c0))))) ORDER BY ((((t1.c0)>>(vt1.c0))) BETWEEN ((- (v0.c0))) AND (v0.c0 COLLATE BINARY)) ASC;
SELECT * FROM t1, vt0, t0, v0, vt1 NOT INDEXED WHERE (((((t0.c0)LIKE(x'0f83')))!=(CASE NULL  WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)LIKE(x'0f83')))<>(CASE NULL  WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM t1, vt0, t0, v0, vt1);
SELECT * FROM t1, vt0, t0, v0, vt1 NOT INDEXED WHERE (((((t0.c0)LIKE(x'0f83')))!=(CASE NULL  WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)LIKE(x'0f83')))<>(CASE NULL  WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM t1, vt0, t0, v0, vt1);
SELECT * FROM t1, vt0, t0, v0, vt1 NOT INDEXED WHERE (((((t0.c0)LIKE(x'0f83')))!=(CASE NULL  WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END)));
SELECT ALL COUNT(*) FROM v0 INNER JOIN t1 ON ((t1.c2)&(t1.c0)) COLLATE NOCASE WHERE (CASE WHEN ((t1.c1)|(v0.c0)) THEN ((t1.c18) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c1)|(v0.c0)) THEN ((t1.c18) IS FALSE) END) IS TRUE)  as count FROM v0 INNER JOIN t1 ON ((t1.c2)&(t1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 INNER JOIN t1 ON ((t1.c2)&(t1.c0)) COLLATE NOCASE WHERE (CASE WHEN ((t1.c1)|(v0.c0)) THEN ((t1.c18) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c1)|(v0.c0)) THEN ((t1.c18) IS FALSE) END) IS TRUE)  as count FROM v0 INNER JOIN t1 ON ((t1.c2)&(t1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 INNER JOIN t1 ON ((t1.c2)&(t1.c0)) COLLATE NOCASE WHERE (CASE WHEN ((t1.c1)|(v0.c0)) THEN ((t1.c18) IS FALSE) END);
SELECT * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c18 THEN t1.c1 END)OR(x'')))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t1.c0  WHEN t1.c18 THEN t1.c1 END)OR(x'')))AND(NULL))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c18 THEN t1.c1 END)OR(x'')))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t1.c0  WHEN t1.c18 THEN t1.c1 END)OR(x'')))AND(NULL))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c18 THEN t1.c1 END)OR(x'')))AND(NULL)));
SELECT * FROM vt0, v0, vt1, t0, t1 WHERE ((x'' IN (load_extension(t1.c0))));
SELECT SUM(count) FROM (SELECT (((x'' IN (load_extension(t1.c0)))) IS TRUE)  as count FROM vt0, v0, vt1, t0, t1);
SELECT * FROM vt0, v0, vt1, t0, t1 WHERE ((x'' IN (load_extension(t1.c0))));
SELECT SUM(count) FROM (SELECT (((x'' IN (load_extension(t1.c0)))) IS TRUE)  as count FROM vt0, v0, vt1, t0, t1);
SELECT * FROM vt0, v0, vt1, t0, t1 WHERE ((x'' IN (load_extension(t1.c0))));
SELECT COUNT(*) FROM t0, t1, vt1 FULL OUTER JOIN v0 ON LTRIM(((t1.c1)OR(vt1.c0))) WHERE (((CAST(t1.c2 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c2 AS BLOB)) ISNULL)) IS TRUE)  as count FROM t0, t1, vt1 FULL OUTER JOIN v0 ON LTRIM(((t1.c1)OR(vt1.c0))));
SELECT COUNT(*) FROM t0, t1, vt1 FULL OUTER JOIN v0 ON LTRIM(((t1.c1)OR(vt1.c0))) WHERE (((CAST(t1.c2 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c2 AS BLOB)) ISNULL)) IS TRUE)  as count FROM t0, t1, vt1 FULL OUTER JOIN v0 ON LTRIM(((t1.c1)OR(vt1.c0))));
SELECT COUNT(*) FROM t0, t1, vt1 FULL OUTER JOIN v0 ON LTRIM(((t1.c1)OR(vt1.c0))) WHERE (((CAST(t1.c2 AS BLOB)) ISNULL));
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN t1 ON ((((t1.c0)IS(t1.c18))) NOT NULL) INNER JOIN vt0 ON '-1721921526' CROSS JOIN vt1 ON ((((CAST(t0.c0 AS NUMERIC))OR((t0.c0 IN ()))))AND((((t1.c0))<=((vt0.c0))))) WHERE (CASE WHEN ((t1.c0)*(t1.c18)) THEN CAST(vt1.c0 AS REAL) WHEN ((0.9330353826787744) IS TRUE) THEN CASE WHEN t1.c0 THEN vt1.c0 END WHEN t1.c1 THEN TOTAL_CHANGES() END) ORDER BY 'On' COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0)*(t1.c18)) THEN CAST(vt1.c0 AS REAL) WHEN ((0.9330353826787744) IS TRUE) THEN CASE WHEN t1.c0 THEN vt1.c0 END WHEN t1.c1 THEN TOTAL_CHANGES() END) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN t1 ON ((((t1.c0)IS(t1.c18))) NOT NULL) INNER JOIN vt0 ON '-1721921526' CROSS JOIN vt1 ON ((((CAST(t0.c0 AS NUMERIC))OR((t0.c0 IN ()))))AND((((t1.c0))<=((vt0.c0))))) ORDER BY 'On' COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN t1 ON ((((t1.c0)IS(t1.c18))) NOT NULL) INNER JOIN vt0 ON '-1721921526' CROSS JOIN vt1 ON ((((CAST(t0.c0 AS NUMERIC))OR((t0.c0 IN ()))))AND((((t1.c0))<=((vt0.c0))))) WHERE (CASE WHEN ((t1.c0)*(t1.c18)) THEN CAST(vt1.c0 AS REAL) WHEN ((0.9330353826787744) IS TRUE) THEN CASE WHEN t1.c0 THEN vt1.c0 END WHEN t1.c1 THEN TOTAL_CHANGES() END) ORDER BY 'On' COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0)*(t1.c18)) THEN CAST(vt1.c0 AS REAL) WHEN ((0.9330353826787744) IS TRUE) THEN CASE WHEN t1.c0 THEN vt1.c0 END WHEN t1.c1 THEN TOTAL_CHANGES() END) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN t1 ON ((((t1.c0)IS(t1.c18))) NOT NULL) INNER JOIN vt0 ON '-1721921526' CROSS JOIN vt1 ON ((((CAST(t0.c0 AS NUMERIC))OR((t0.c0 IN ()))))AND((((t1.c0))<=((vt0.c0))))) ORDER BY 'On' COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN t1 ON ((((t1.c0)IS(t1.c18))) NOT NULL) INNER JOIN vt0 ON '-1721921526' CROSS JOIN vt1 ON ((((CAST(t0.c0 AS NUMERIC))OR((t0.c0 IN ()))))AND((((t1.c0))<=((vt0.c0))))) WHERE (CASE WHEN ((t1.c0)*(t1.c18)) THEN CAST(vt1.c0 AS REAL) WHEN ((0.9330353826787744) IS TRUE) THEN CASE WHEN t1.c0 THEN vt1.c0 END WHEN t1.c1 THEN TOTAL_CHANGES() END) ORDER BY 'On' COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM t1, t0, vt0 WHERE ((((((t0.c0)OR(t1.c0)))OR('1092700547')) IN (((((t0.c0)AND(t1.c2)))OR(t0.c0)), ((t1.c0) BETWEEN (t1.c2) AND (t1.c2))))) ORDER BY 'Q.	7k-~x'''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)OR(t1.c0)))OR('1092700547')) IN (((((t0.c0)AND(t1.c2)))OR(t0.c0)), ((t1.c0) BETWEEN (t1.c2) AND (t1.c2))))) IS TRUE)  as count FROM t1, t0, vt0 ORDER BY 'Q.	7k-~x'''  NULLS LAST);
SELECT * FROM t1, t0, vt0 WHERE ((((((t0.c0)OR(t1.c0)))OR('1092700547')) IN (((((t0.c0)AND(t1.c2)))OR(t0.c0)), ((t1.c0) BETWEEN (t1.c2) AND (t1.c2))))) ORDER BY 'Q.	7k-~x'''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)OR(t1.c0)))OR('1092700547')) IN (((((t0.c0)AND(t1.c2)))OR(t0.c0)), ((t1.c0) BETWEEN (t1.c2) AND (t1.c2))))) IS TRUE)  as count FROM t1, t0, vt0 ORDER BY 'Q.	7k-~x'''  NULLS LAST);
SELECT * FROM t1, t0, vt0 WHERE ((((((t0.c0)OR(t1.c0)))OR('1092700547')) IN (((((t0.c0)AND(t1.c2)))OR(t0.c0)), ((t1.c0) BETWEEN (t1.c2) AND (t1.c2))))) ORDER BY 'Q.	7k-~x'''  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, t0, vt1, vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c2)) THEN (t1.c2 IN (t0.c0)) END) ORDER BY t1.c18;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c2)) THEN (t1.c2 IN (t0.c0)) END) IS TRUE)  as count FROM t1, t0, vt1, vt0 ORDER BY t1.c18);
SELECT ALL COUNT(*) FROM t1, t0, vt1, vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c2)) THEN (t1.c2 IN (t0.c0)) END) ORDER BY t1.c18;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c2)) THEN (t1.c2 IN (t0.c0)) END) IS TRUE)  as count FROM t1, t0, vt1, vt0 ORDER BY t1.c18);
SELECT ALL COUNT(*) FROM t1, t0, vt1, vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c2)) THEN (t1.c2 IN (t0.c0)) END) ORDER BY t1.c18;
SELECT COUNT(*) FROM t1, vt0, v0, vt1 WHERE (((((t1.c1 IN ())))<=((0xffffffff84d5b345 COLLATE NOCASE)))) ORDER BY t1.c1, CAST((- (t1.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1 IN ())))<=((0Xffffffff84d5b345 COLLATE NOCASE)))) IS TRUE)  as count FROM t1, vt0, v0, vt1 ORDER BY t1.c1, CAST((- (t1.c0)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0, v0, vt1 WHERE (((((t1.c1 IN ())))<=((0xffffffff84d5b345 COLLATE NOCASE)))) ORDER BY t1.c1, CAST((- (t1.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1 IN ())))<=((0Xffffffff84d5b345 COLLATE NOCASE)))) IS TRUE)  as count FROM t1, vt0, v0, vt1 ORDER BY t1.c1, CAST((- (t1.c0)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0, v0, vt1 WHERE (((((t1.c1 IN ())))<=((0xffffffff84d5b345 COLLATE NOCASE)))) ORDER BY t1.c1, CAST((- (t1.c0)) AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (t0.c0) ORDER BY TYPEOF((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY TYPEOF((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (t0.c0) ORDER BY TYPEOF((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY TYPEOF((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (t0.c0) ORDER BY TYPEOF((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) DESC  NULLS LAST;
SELECT * FROM t1, t0, vt1, vt0 WHERE ((- ((NOT (t1.c2))))) ORDER BY ((t1.c0 COLLATE BINARY)%(((((((((t1.c2)OR(t1.c2)))OR(vt0.c0)))OR(0.5341807624844906)))OR(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((NOT (t1.c2))))) IS TRUE)  as count FROM t1, t0, vt1, vt0 ORDER BY ((t1.c0 COLLATE BINARY)%(((((((((t1.c2)OR(t1.c2)))OR(vt0.c0)))OR(0.5341807624844906)))OR(vt1.c0))))  NULLS LAST);
SELECT * FROM t1, t0, vt1, vt0 WHERE ((- ((NOT (t1.c2))))) ORDER BY ((t1.c0 COLLATE BINARY)%(((((((((t1.c2)OR(t1.c2)))OR(vt0.c0)))OR(0.5341807624844906)))OR(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((NOT (t1.c2))))) IS TRUE)  as count FROM t1, t0, vt1, vt0 ORDER BY ((t1.c0 COLLATE BINARY)%(((((((((t1.c2)OR(t1.c2)))OR(vt0.c0)))OR(0.5341807624844906)))OR(vt1.c0))))  NULLS LAST);
SELECT * FROM t1, t0, vt1, vt0 WHERE ((- ((NOT (t1.c2))))) ORDER BY ((t1.c0 COLLATE BINARY)%(((((((((t1.c2)OR(t1.c2)))OR(vt0.c0)))OR(0.5341807624844906)))OR(vt1.c0))))  NULLS LAST;
SELECT ALL * FROM v0 FULL OUTER JOIN t1 ON json_remove(t0.c0, vt1.c0) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((((t1.c2 IN ())))>(((v0.c0 IN ())))) CROSS JOIN vt1 ON CASE WHEN (vt1.c0 IN (t1.c2, t1.c2)) THEN ((vt0.c0)-(t1.c18)) ELSE (((x''))<>((t1.c0))) END CROSS JOIN t0 ON CASE WHEN t1.c0 THEN '-206111638' END COLLATE NOCASE WHERE (t1.c18 COLLATE BINARY) ORDER BY ((CASE t1.c2  WHEN t0.c0 THEN vt0.c0 ELSE t1.c18 END)LIKE((t1.c18 IN ()))) DESC, (((+ (0.8896770025885473)))GLOB(CAST(t1.c18 AS REAL))), ((LIKELIHOOD(t1.c0, 0.5781093169292904)) BETWEEN ((t0.c0 IN ())) AND (t1.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c18 COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN t1 ON json_remove(t0.c0, vt1.c0) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((((t1.c2 IN ())))>(((v0.c0 IN ())))) CROSS JOIN vt1 ON CASE WHEN (vt1.c0 IN (t1.c2, t1.c2)) THEN ((vt0.c0)-(t1.c18)) ELSE (((x''))<>((t1.c0))) END CROSS JOIN t0 ON CASE WHEN t1.c0 THEN '-206111638' END COLLATE NOCASE ORDER BY ((CASE t1.c2  WHEN t0.c0 THEN vt0.c0 ELSE t1.c18 END)LIKE((t1.c18 IN ()))) DESC, (((+ (0.8896770025885473)))GLOB(CAST(t1.c18 AS REAL))), ((LIKELIHOOD(t1.c0, 0.5781093169292904)) BETWEEN ((t0.c0 IN ())) AND (t1.c2 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN t1 ON json_remove(t0.c0, vt1.c0) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((((t1.c2 IN ())))>(((v0.c0 IN ())))) CROSS JOIN vt1 ON CASE WHEN (vt1.c0 IN (t1.c2, t1.c2)) THEN ((vt0.c0)-(t1.c18)) ELSE (((x''))<>((t1.c0))) END CROSS JOIN t0 ON CASE WHEN t1.c0 THEN '-206111638' END COLLATE NOCASE WHERE (t1.c18 COLLATE BINARY) ORDER BY ((CASE t1.c2  WHEN t0.c0 THEN vt0.c0 ELSE t1.c18 END)LIKE((t1.c18 IN ()))) DESC, (((+ (0.8896770025885473)))GLOB(CAST(t1.c18 AS REAL))), ((LIKELIHOOD(t1.c0, 0.5781093169292904)) BETWEEN ((t0.c0 IN ())) AND (t1.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c18 COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN t1 ON json_remove(t0.c0, vt1.c0) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((((t1.c2 IN ())))>(((v0.c0 IN ())))) CROSS JOIN vt1 ON CASE WHEN (vt1.c0 IN (t1.c2, t1.c2)) THEN ((vt0.c0)-(t1.c18)) ELSE (((x''))<>((t1.c0))) END CROSS JOIN t0 ON CASE WHEN t1.c0 THEN '-206111638' END COLLATE NOCASE ORDER BY ((CASE t1.c2  WHEN t0.c0 THEN vt0.c0 ELSE t1.c18 END)LIKE((t1.c18 IN ()))) DESC, (((+ (0.8896770025885473)))GLOB(CAST(t1.c18 AS REAL))), ((LIKELIHOOD(t1.c0, 0.5781093169292904)) BETWEEN ((t0.c0 IN ())) AND (t1.c2 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, t0, t1, vt1 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (t1.c1)))AND(CAST(t1.c1 AS TEXT))))AND(((t1.c0)>(vt1.c0)))))AND(((v0.c0) NOT BETWEEN (t1.c1) AND (t1.c2)))))OR(CASE WHEN t1.c1 THEN t1.c2 WHEN vt1.c0 THEN t0.c0 WHEN NULL THEN vt1.c0 END))) ORDER BY ((((((((((((((((t1.c18)OR(t0.c0)))OR('-1095127369')))AND('484617062')))OR(CAST(t1.c2 AS BLOB))))AND(CAST(v0.c0 AS TEXT))))AND(((vt1.c0)-(t1.c1)))))AND(CAST(t0.c0 AS INTEGER))))AND(CASE t0.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (t1.c1)))AND(CAST(t1.c1 AS TEXT))))AND(((t1.c0)>(vt1.c0)))))AND(((v0.c0) NOT BETWEEN (t1.c1) AND (t1.c2)))))OR(CASE WHEN t1.c1 THEN t1.c2 WHEN vt1.c0 THEN t0.c0 WHEN NULL THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, v0, t0, t1, vt1 ORDER BY ((((((((((((((((t1.c18)OR(t0.c0)))OR('-1095127369')))AND('484617062')))OR(CAST(t1.c2 AS BLOB))))AND(CAST(v0.c0 AS TEXT))))AND(((vt1.c0)-(t1.c1)))))AND(CAST(t0.c0 AS INTEGER))))AND(CASE t0.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, t0, t1, vt1 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (t1.c1)))AND(CAST(t1.c1 AS TEXT))))AND(((t1.c0)>(vt1.c0)))))AND(((v0.c0) NOT BETWEEN (t1.c1) AND (t1.c2)))))OR(CASE WHEN t1.c1 THEN t1.c2 WHEN vt1.c0 THEN t0.c0 WHEN NULL THEN vt1.c0 END))) ORDER BY ((((((((((((((((t1.c18)OR(t0.c0)))OR('-1095127369')))AND('484617062')))OR(CAST(t1.c2 AS BLOB))))AND(CAST(v0.c0 AS TEXT))))AND(((vt1.c0)-(t1.c1)))))AND(CAST(t0.c0 AS INTEGER))))AND(CASE t0.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (t1.c1)))AND(CAST(t1.c1 AS TEXT))))AND(((t1.c0)>(vt1.c0)))))AND(((v0.c0) NOT BETWEEN (t1.c1) AND (t1.c2)))))OR(CASE WHEN t1.c1 THEN t1.c2 WHEN vt1.c0 THEN t0.c0 WHEN NULL THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, v0, t0, t1, vt1 ORDER BY ((((((((((((((((t1.c18)OR(t0.c0)))OR('-1095127369')))AND('484617062')))OR(CAST(t1.c2 AS BLOB))))AND(CAST(v0.c0 AS TEXT))))AND(((vt1.c0)-(t1.c1)))))AND(CAST(t0.c0 AS INTEGER))))AND(CASE t0.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, t0, t1, vt1 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (t1.c1)))AND(CAST(t1.c1 AS TEXT))))AND(((t1.c0)>(vt1.c0)))))AND(((v0.c0) NOT BETWEEN (t1.c1) AND (t1.c2)))))OR(CASE WHEN t1.c1 THEN t1.c2 WHEN vt1.c0 THEN t0.c0 WHEN NULL THEN vt1.c0 END))) ORDER BY ((((((((((((((((t1.c18)OR(t0.c0)))OR('-1095127369')))AND('484617062')))OR(CAST(t1.c2 AS BLOB))))AND(CAST(v0.c0 AS TEXT))))AND(((vt1.c0)-(t1.c1)))))AND(CAST(t0.c0 AS INTEGER))))AND(CASE t0.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ('');
SELECT COUNT(*) FROM vt1, v0, t0 LEFT OUTER JOIN vt0 ON (((t1.c18, t1.c0, t0.c0)) NOT BETWEEN (((NOT (vt0.c0)), CAST(t1.c2 AS NUMERIC), t1.c2 COLLATE NOCASE)) AND (((- (x'8740')), (+ (t1.c2)), (+ (t0.c0))))) RIGHT OUTER JOIN t1 ON (((t1.c2, t0.c0, NULL, t1.c18, vt1.c0)) BETWEEN (((vt0.c0 IN ()), CAST(t1.c0 AS REAL), IFNULL(DISTINCT v0.c0, vt1.c0), PRINTF(t1.c0), (((t1.c0, t1.c1, t1.c2)) NOT BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((t0.c0, t1.c0, t1.c0))))) AND ((0.521850640128879, (v0.c0 IN ()), CAST(t0.c0 AS REAL), (('S''36')&(v0.c0)), ((v0.c0) NOT NULL)))) WHERE (t1.c2 COLLATE BINARY COLLATE NOCASE) ORDER BY ((((t1.c1) IS TRUE)) BETWEEN (rtreenode(v0.c0, t1.c18)) AND (((vt1.c0)LIKE(vt0.c0))))  NULLS FIRST, ((((vt1.c0) NOT NULL))>=(((t1.c18)||(t1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((t1.c2 COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0, t0 LEFT OUTER JOIN vt0 ON (((t1.c18, t1.c0, t0.c0)) NOT BETWEEN (((NOT (vt0.c0)), CAST(t1.c2 AS NUMERIC), t1.c2 COLLATE NOCASE)) AND (((- (x'8740')), (+ (t1.c2)), (+ (t0.c0))))) RIGHT OUTER JOIN t1 ON (((t1.c2, t0.c0, NULL, t1.c18, vt1.c0)) BETWEEN (((vt0.c0 IN ()), CAST(t1.c0 AS REAL), IFNULL(DISTINCT v0.c0, vt1.c0), PRINTF(t1.c0), (((t1.c0, t1.c1, t1.c2)) NOT BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((t0.c0, t1.c0, t1.c0))))) AND ((0.521850640128879, (v0.c0 IN ()), CAST(t0.c0 AS REAL), (('S''36')&(v0.c0)), ((v0.c0) NOT NULL)))) ORDER BY ((((t1.c1) IS TRUE)) BETWEEN (rtreenode(v0.c0, t1.c18)) AND (((vt1.c0)LIKE(vt0.c0))))  NULLS FIRST, ((((vt1.c0) NOT NULL))>=(((t1.c18)||(t1.c1)))));
SELECT COUNT(*) FROM vt1, v0, t0 LEFT OUTER JOIN vt0 ON (((t1.c18, t1.c0, t0.c0)) NOT BETWEEN (((NOT (vt0.c0)), CAST(t1.c2 AS NUMERIC), t1.c2 COLLATE NOCASE)) AND (((- (x'8740')), (+ (t1.c2)), (+ (t0.c0))))) RIGHT OUTER JOIN t1 ON (((t1.c2, t0.c0, NULL, t1.c18, vt1.c0)) BETWEEN (((vt0.c0 IN ()), CAST(t1.c0 AS REAL), IFNULL(DISTINCT v0.c0, vt1.c0), PRINTF(t1.c0), (((t1.c0, t1.c1, t1.c2)) NOT BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((t0.c0, t1.c0, t1.c0))))) AND ((0.521850640128879, (v0.c0 IN ()), CAST(t0.c0 AS REAL), (('S''36')&(v0.c0)), ((v0.c0) NOT NULL)))) WHERE (t1.c2 COLLATE BINARY COLLATE NOCASE) ORDER BY ((((t1.c1) IS TRUE)) BETWEEN (rtreenode(v0.c0, t1.c18)) AND (((vt1.c0)LIKE(vt0.c0))))  NULLS FIRST, ((((vt1.c0) NOT NULL))>=(((t1.c18)||(t1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((t1.c2 COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0, t0 LEFT OUTER JOIN vt0 ON (((t1.c18, t1.c0, t0.c0)) NOT BETWEEN (((NOT (vt0.c0)), CAST(t1.c2 AS NUMERIC), t1.c2 COLLATE NOCASE)) AND (((- (x'8740')), (+ (t1.c2)), (+ (t0.c0))))) RIGHT OUTER JOIN t1 ON (((t1.c2, t0.c0, NULL, t1.c18, vt1.c0)) BETWEEN (((vt0.c0 IN ()), CAST(t1.c0 AS REAL), IFNULL(DISTINCT v0.c0, vt1.c0), PRINTF(t1.c0), (((t1.c0, t1.c1, t1.c2)) NOT BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((t0.c0, t1.c0, t1.c0))))) AND ((0.521850640128879, (v0.c0 IN ()), CAST(t0.c0 AS REAL), (('S''36')&(v0.c0)), ((v0.c0) NOT NULL)))) ORDER BY ((((t1.c1) IS TRUE)) BETWEEN (rtreenode(v0.c0, t1.c18)) AND (((vt1.c0)LIKE(vt0.c0))))  NULLS FIRST, ((((vt1.c0) NOT NULL))>=(((t1.c18)||(t1.c1)))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON ((((t1.c1) NOT BETWEEN (t1.c0) AND (0xfffffffffb0e09e5)))>=((~ (t1.c18)))) FULL OUTER JOIN v0 ON (((vt1.c0 IN ()))<(((t1.c0)!=(t1.c0)))) INNER JOIN vt1 ON ((((((t1.c18) IS TRUE))OR(((t1.c1)LIKE(-219394354)))))AND(t1.c18)) WHERE (t1.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2 COLLATE NOCASE) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((t1.c1) NOT BETWEEN (t1.c0) AND (0xfffffffffb0e09e5)))>=((~ (t1.c18)))) FULL OUTER JOIN v0 ON (((vt1.c0 IN ()))<(((t1.c0)<>(t1.c0)))) INNER JOIN vt1 ON ((((((t1.c18) IS TRUE))OR(((t1.c1)LIKE(-219394354)))))AND(t1.c18)));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON ((((t1.c1) NOT BETWEEN (t1.c0) AND (0xfffffffffb0e09e5)))>=((~ (t1.c18)))) FULL OUTER JOIN v0 ON (((vt1.c0 IN ()))<(((t1.c0)!=(t1.c0)))) INNER JOIN vt1 ON ((((((t1.c18) IS TRUE))OR(((t1.c1)LIKE(-219394354)))))AND(t1.c18)) WHERE (t1.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2 COLLATE NOCASE) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((t1.c1) NOT BETWEEN (t1.c0) AND (0xfffffffffb0e09e5)))>=((~ (t1.c18)))) FULL OUTER JOIN v0 ON (((vt1.c0 IN ()))<(((t1.c0)<>(t1.c0)))) INNER JOIN vt1 ON ((((((t1.c18) IS TRUE))OR(((t1.c1)LIKE(-219394354)))))AND(t1.c18)));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON ((((t1.c1) NOT BETWEEN (t1.c0) AND (0xfffffffffb0e09e5)))>=((~ (t1.c18)))) FULL OUTER JOIN v0 ON (((vt1.c0 IN ()))<(((t1.c0)!=(t1.c0)))) INNER JOIN vt1 ON ((((((t1.c18) IS TRUE))OR(((t1.c1)LIKE(-219394354)))))AND(t1.c18)) WHERE (t1.c2 COLLATE NOCASE);
SELECT * FROM vt0, vt1, v0 WHERE (((vt1.c0) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) AND (((x'ac02') BETWEEN (vt1.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) AND (((x'ac02') BETWEEN (vt1.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT * FROM vt0, vt1, v0 WHERE (((vt1.c0) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) AND (((x'ac02') BETWEEN (vt1.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) AND (((x'ac02') BETWEEN (vt1.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT * FROM vt0, vt1, v0 WHERE (((vt1.c0) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) AND (((x'ac02') BETWEEN (vt1.c0) AND (v0.c0)))));
SELECT * FROM vt0, t1, vt1 WHERE (((t1.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t1.c2) NOT NULL)) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (((t1.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t1.c2) NOT NULL)) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (((t1.c2) NOT NULL));
SELECT ALL * FROM t1, vt0, t0 WHERE ((((t1.c1, t0.c0, t1.c18)) BETWEEN (((+ (vt0.c0)), ((t1.c2) BETWEEN (t1.c2) AND (t1.c2)), ((vt0.c0)-(t1.c1)))) AND ((((((((((t1.c18)OR(t1.c1)))AND(t1.c1)))OR(-719308710)))AND(t0.c0)), CASE WHEN vt0.c0 THEN t1.c1 ELSE vt0.c0 END, (- (t1.c18)))))) ORDER BY (((t0.c0 COLLATE RTRIM))>((((t1.c2)%(t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1, t0.c0, t1.c18)) BETWEEN (((+ (vt0.c0)), ((t1.c2) BETWEEN (t1.c2) AND (t1.c2)), ((vt0.c0)-(t1.c1)))) AND ((((((((((t1.c18)OR(t1.c1)))AND(t1.c1)))OR(-719308710)))AND(t0.c0)), CASE WHEN vt0.c0 THEN t1.c1 ELSE vt0.c0 END, (- (t1.c18)))))) IS TRUE)  as count FROM t1, vt0, t0 ORDER BY (((t0.c0 COLLATE RTRIM))>((((t1.c2)%(t1.c0))))) DESC);
SELECT ALL * FROM t1, vt0, t0 WHERE ((((t1.c1, t0.c0, t1.c18)) BETWEEN (((+ (vt0.c0)), ((t1.c2) BETWEEN (t1.c2) AND (t1.c2)), ((vt0.c0)-(t1.c1)))) AND ((((((((((t1.c18)OR(t1.c1)))AND(t1.c1)))OR(-719308710)))AND(t0.c0)), CASE WHEN vt0.c0 THEN t1.c1 ELSE vt0.c0 END, (- (t1.c18)))))) ORDER BY (((t0.c0 COLLATE RTRIM))>((((t1.c2)%(t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1, t0.c0, t1.c18)) BETWEEN (((+ (vt0.c0)), ((t1.c2) BETWEEN (t1.c2) AND (t1.c2)), ((vt0.c0)-(t1.c1)))) AND ((((((((((t1.c18)OR(t1.c1)))AND(t1.c1)))OR(-719308710)))AND(t0.c0)), CASE WHEN vt0.c0 THEN t1.c1 ELSE vt0.c0 END, (- (t1.c18)))))) IS TRUE)  as count FROM t1, vt0, t0 ORDER BY (((t0.c0 COLLATE RTRIM))>((((t1.c2)%(t1.c0))))) DESC);
SELECT ALL * FROM t1, vt0, t0 WHERE ((((t1.c1, t0.c0, t1.c18)) BETWEEN (((+ (vt0.c0)), ((t1.c2) BETWEEN (t1.c2) AND (t1.c2)), ((vt0.c0)-(t1.c1)))) AND ((((((((((t1.c18)OR(t1.c1)))AND(t1.c1)))OR(-719308710)))AND(t0.c0)), CASE WHEN vt0.c0 THEN t1.c1 ELSE vt0.c0 END, (- (t1.c18)))))) ORDER BY (((t0.c0 COLLATE RTRIM))>((((t1.c2)%(t1.c0))))) DESC;
SELECT * FROM v0, vt0, t0, t1 WHERE ((('') NOT BETWEEN (vt0.c0) AND (t1.c18)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((('') NOT BETWEEN (vt0.c0) AND (t1.c18)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t0, t1);
SELECT * FROM v0, vt0, t0, t1 WHERE ((('') NOT BETWEEN (vt0.c0) AND (t1.c18)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((('') NOT BETWEEN (vt0.c0) AND (t1.c18)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t0, t1);
SELECT * FROM v0, vt0, t0, t1 WHERE ((('') NOT BETWEEN (vt0.c0) AND (t1.c18)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, t1, vt0, v0 WHERE (((((t1.c0)>(t1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)>(t1.c0))) IS FALSE)) IS TRUE)  as count FROM t0, t1, vt0, v0);
SELECT COUNT(*) FROM t0, t1, vt0, v0 WHERE (((((t1.c0)>(t1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)>(t1.c0))) IS FALSE)) IS TRUE)  as count FROM t0, t1, vt0, v0);
SELECT COUNT(*) FROM t0, t1, vt0, v0 WHERE (((((t1.c0)>(t1.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM v0 WHERE (((((x'73a0'))<((v0.c0))) IN ((v0.c0 IN ())))) ORDER BY (('') NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((x'73a0'))<((v0.c0))) IN ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (('') NOTNULL) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((x'73a0'))<((v0.c0))) IN ((v0.c0 IN ())))) ORDER BY (('') NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((x'73a0'))<((v0.c0))) IN ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (('') NOTNULL) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((x'73a0'))<((v0.c0))) IN ((v0.c0 IN ())))) ORDER BY (('') NOTNULL) DESC;
SELECT ALL COUNT(*) FROM vt1, t1, v0, t0, vt0 WHERE (CAST(NULLIF(vt0.c0, t0.c0) AS REAL)) ORDER BY (((t1.c18, t1.c2, t1.c18, 0.39887693223947285, t1.c18)) BETWEEN ((t1.c2, ((t1.c0)&(t1.c0)), ((t0.c0) ISNULL), ((vt0.c0) NOT NULL), ((t1.c0) IS FALSE))) AND ((t1.c1, (t1.c1 IN (vt1.c0, vt0.c0)), ((((t1.c18)OR(t1.c18)))AND(vt0.c0)), '', t1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULLIF(vt0.c0, t0.c0) AS REAL)) IS TRUE)  as count FROM vt1, t1, v0, t0, vt0 ORDER BY (((t1.c18, t1.c2, t1.c18, 0.39887693223947285, t1.c18)) BETWEEN ((t1.c2, ((t1.c0)&(t1.c0)), ((t0.c0) ISNULL), ((vt0.c0) NOT NULL), ((t1.c0) IS FALSE))) AND ((t1.c1, (t1.c1 IN (vt1.c0, vt0.c0)), ((((t1.c18)OR(t1.c18)))AND(vt0.c0)), '', t1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1, v0, t0, vt0 WHERE (CAST(NULLIF(vt0.c0, t0.c0) AS REAL)) ORDER BY (((t1.c18, t1.c2, t1.c18, 0.39887693223947285, t1.c18)) BETWEEN ((t1.c2, ((t1.c0)&(t1.c0)), ((t0.c0) ISNULL), ((vt0.c0) NOT NULL), ((t1.c0) IS FALSE))) AND ((t1.c1, (t1.c1 IN (vt1.c0, vt0.c0)), ((((t1.c18)OR(t1.c18)))AND(vt0.c0)), '', t1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULLIF(vt0.c0, t0.c0) AS REAL)) IS TRUE)  as count FROM vt1, t1, v0, t0, vt0 ORDER BY (((t1.c18, t1.c2, t1.c18, 0.39887693223947285, t1.c18)) BETWEEN ((t1.c2, ((t1.c0)&(t1.c0)), ((t0.c0) ISNULL), ((vt0.c0) NOT NULL), ((t1.c0) IS FALSE))) AND ((t1.c1, (t1.c1 IN (vt1.c0, vt0.c0)), ((((t1.c18)OR(t1.c18)))AND(vt0.c0)), '', t1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1, v0, t0, vt0 WHERE (CAST(NULLIF(vt0.c0, t0.c0) AS REAL)) ORDER BY (((t1.c18, t1.c2, t1.c18, 0.39887693223947285, t1.c18)) BETWEEN ((t1.c2, ((t1.c0)&(t1.c0)), ((t0.c0) ISNULL), ((vt0.c0) NOT NULL), ((t1.c0) IS FALSE))) AND ((t1.c1, (t1.c1 IN (vt1.c0, vt0.c0)), ((((t1.c18)OR(t1.c18)))AND(vt0.c0)), '', t1.c1)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))) ISNULL) WHERE ((vt0.c0 IN (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))))) ORDER BY CASE WHEN json_patch(vt0.c0, vt1.c0) THEN CAST(vt1.c0 AS TEXT) END DESC, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))) ISNULL) ORDER BY CASE WHEN json_patch(vt0.c0, vt1.c0) THEN CAST(vt1.c0 AS TEXT) END DESC, vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))) ISNULL) WHERE ((vt0.c0 IN (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))))) ORDER BY CASE WHEN json_patch(vt0.c0, vt1.c0) THEN CAST(vt1.c0 AS TEXT) END DESC, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))) ISNULL) ORDER BY CASE WHEN json_patch(vt0.c0, vt1.c0) THEN CAST(vt1.c0 AS TEXT) END DESC, vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))) ISNULL) WHERE ((vt0.c0 IN (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))))) ORDER BY CASE WHEN json_patch(vt0.c0, vt1.c0) THEN CAST(vt1.c0 AS TEXT) END DESC, vt0.c0 ASC;
SELECT * FROM t0, t1 WHERE (((t1.c0)IS NOT(CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)IS NOT(CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE (((t1.c0)IS NOT(CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)IS NOT(CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE (((t1.c0)IS NOT(CAST(t1.c0 AS BLOB))));
SELECT ALL * FROM t1, vt1, vt0, t0 WHERE ((MAX(NULL, vt0.c0) IN (((((t1.c18)AND(t1.c2)))AND(t1.c0))))) ORDER BY CASE -1501909103  WHEN ((t1.c18) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((((((((t1.c2)AND(t1.c1)))OR(vt1.c0)))OR(t0.c0)))AND(vt1.c0)) ELSE COALESCE(t1.c1, '', vt0.c0, t1.c18) END  NULLS LAST, load_extension((t1.c2 IN (t1.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((MAX(NULL, vt0.c0) IN (((((t1.c18)AND(t1.c2)))AND(t1.c0))))) IS TRUE)  as count FROM t1, vt1, vt0, t0 ORDER BY CASE -1501909103  WHEN ((t1.c18) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((((((((t1.c2)AND(t1.c1)))OR(vt1.c0)))OR(t0.c0)))AND(vt1.c0)) ELSE COALESCE(t1.c1, '', vt0.c0, t1.c18) END  NULLS LAST, load_extension((t1.c2 IN (t1.c2))) DESC  NULLS FIRST);
SELECT ALL * FROM t1, vt1, vt0, t0 WHERE ((MAX(NULL, vt0.c0) IN (((((t1.c18)AND(t1.c2)))AND(t1.c0))))) ORDER BY CASE -1501909103  WHEN ((t1.c18) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((((((((t1.c2)AND(t1.c1)))OR(vt1.c0)))OR(t0.c0)))AND(vt1.c0)) ELSE COALESCE(t1.c1, '', vt0.c0, t1.c18) END  NULLS LAST, load_extension((t1.c2 IN (t1.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((MAX(NULL, vt0.c0) IN (((((t1.c18)AND(t1.c2)))AND(t1.c0))))) IS TRUE)  as count FROM t1, vt1, vt0, t0 ORDER BY CASE -1501909103  WHEN ((t1.c18) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((((((((t1.c2)AND(t1.c1)))OR(vt1.c0)))OR(t0.c0)))AND(vt1.c0)) ELSE COALESCE(t1.c1, '', vt0.c0, t1.c18) END  NULLS LAST, load_extension((t1.c2 IN (t1.c2))) DESC  NULLS FIRST);
SELECT ALL * FROM t1, vt1, vt0, t0 WHERE ((MAX(NULL, vt0.c0) IN (((((t1.c18)AND(t1.c2)))AND(t1.c0))))) ORDER BY CASE -1501909103  WHEN ((t1.c18) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((((((((t1.c2)AND(t1.c1)))OR(vt1.c0)))OR(t0.c0)))AND(vt1.c0)) ELSE COALESCE(t1.c1, '', vt0.c0, t1.c18) END  NULLS LAST, load_extension((t1.c2 IN (t1.c2))) DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt1, v0 WHERE (((v0.c0)>=(x'717fd284')));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>=(x'717fd284'))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL * FROM t0, vt1, v0 WHERE (((v0.c0)>=(x'717fd284')));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>=(x'717fd284'))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL * FROM t0, vt1, v0 WHERE (((v0.c0)>=(x'717fd284')));
SELECT * FROM v0, t1, vt1, t0, vt0 WHERE (CAST(COALESCE(t1.c2, t1.c2, t0.c0, t1.c18) AS REAL)) ORDER BY 0.27132038249325785 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(t1.c2, t1.c2, t0.c0, t1.c18) AS REAL)) IS TRUE)  as count FROM v0, t1, vt1, t0, vt0 ORDER BY 0.27132038249325785 COLLATE RTRIM ASC);
SELECT * FROM v0, t1, vt1, t0, vt0 WHERE (CAST(COALESCE(t1.c2, t1.c2, t0.c0, t1.c18) AS REAL)) ORDER BY 0.27132038249325785 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(t1.c2, t1.c2, t0.c0, t1.c18) AS REAL)) IS TRUE)  as count FROM v0, t1, vt1, t0, vt0 ORDER BY 0.27132038249325785 COLLATE RTRIM ASC);
SELECT * FROM v0, t1, vt1, t0, vt0 WHERE (CAST(COALESCE(t1.c2, t1.c2, t0.c0, t1.c18) AS REAL)) ORDER BY 0.27132038249325785 COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t0, t1 WHERE ((((((vt0.c0)!=(t1.c0))))=((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)!=(t1.c0))))==((t0.c0)))) IS TRUE)  as count FROM vt0, v0, vt1, t0, t1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t0, t1 WHERE ((((((vt0.c0)!=(t1.c0))))=((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)!=(t1.c0))))==((t0.c0)))) IS TRUE)  as count FROM vt0, v0, vt1, t0, t1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t0, t1 WHERE ((((((vt0.c0)!=(t1.c0))))=((t0.c0))));
SELECT * FROM vt1, t0, v0, vt0 NATURAL JOIN t1 WHERE ((CAST(t0.c0 AS TEXT) IN ())) ORDER BY (~ (CASE t1.c1  WHEN vt1.c0 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt1, t0, v0, vt0 NATURAL JOIN t1 ORDER BY (~ (CASE t1.c1  WHEN vt1.c0 THEN vt1.c0 END)) DESC);
SELECT * FROM vt1, t0, v0, vt0 NATURAL JOIN t1 WHERE ((CAST(t0.c0 AS TEXT) IN ())) ORDER BY (~ (CASE t1.c1  WHEN vt1.c0 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt1, t0, v0, vt0 NATURAL JOIN t1 ORDER BY (~ (CASE t1.c1  WHEN vt1.c0 THEN vt1.c0 END)) DESC);
SELECT * FROM vt1, t0, v0, vt0 NATURAL JOIN t1 WHERE ((CAST(t0.c0 AS TEXT) IN ())) ORDER BY (~ (CASE t1.c1  WHEN vt1.c0 THEN vt1.c0 END)) DESC;
SELECT COUNT(*) FROM v0, vt1 WHERE (v0.c0) ORDER BY ((((v0.c0)LIKE(vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((v0.c0)LIKE(vt1.c0))) ISNULL));
SELECT COUNT(*) FROM v0, vt1 WHERE (v0.c0) ORDER BY ((((v0.c0)LIKE(vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((v0.c0)LIKE(vt1.c0))) ISNULL));
SELECT COUNT(*) FROM v0, vt1 WHERE (v0.c0) ORDER BY ((((v0.c0)LIKE(vt1.c0))) ISNULL);
SELECT ALL * FROM vt0 WHERE ((- ('-115988802'))) ORDER BY vt0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((- ('-115988802'))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ((- ('-115988802'))) ORDER BY vt0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((- ('-115988802'))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ((- ('-115988802'))) ORDER BY vt0.c0 COLLATE BINARY;
SELECT COUNT(*) FROM vt0 WHERE (CASE NULL  WHEN ((vt0.c0)AND(vt0.c0)) THEN (vt0.c0 IN ()) END) ORDER BY ((((((((((vt0.c0)IS NOT(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((((vt0.c0))<((vt0.c0))))))OR(((vt0.c0)LIKE(vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC, LIKELY(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((vt0.c0)AND(vt0.c0)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)IS NOT(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((((vt0.c0))<((vt0.c0))))))OR(((vt0.c0)LIKE(vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC, LIKELY(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(NULL))));
SELECT COUNT(*) FROM vt0 WHERE (CASE NULL  WHEN ((vt0.c0)AND(vt0.c0)) THEN (vt0.c0 IN ()) END) ORDER BY ((((((((((vt0.c0)IS NOT(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((((vt0.c0))<((vt0.c0))))))OR(((vt0.c0)LIKE(vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC, LIKELY(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((vt0.c0)AND(vt0.c0)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)IS NOT(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((((vt0.c0))<((vt0.c0))))))OR(((vt0.c0)LIKE(vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC, LIKELY(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(NULL))));
SELECT COUNT(*) FROM vt0 WHERE (CASE NULL  WHEN ((vt0.c0)AND(vt0.c0)) THEN (vt0.c0 IN ()) END) ORDER BY ((((((((((vt0.c0)IS NOT(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((((vt0.c0))<((vt0.c0))))))OR(((vt0.c0)LIKE(vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC, LIKELY(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(NULL)));
SELECT ALL * FROM vt1, t0, vt0, v0 WHERE ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0, v0);
SELECT ALL * FROM vt1, t0, vt0, v0 WHERE ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0, v0);
SELECT ALL * FROM vt1, t0, vt0, v0 WHERE ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0, t1, v0, vt0 INNER JOIN vt1 ON CAST(CASE t0.c0  WHEN vt1.c0 THEN t1.c18 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN v0.c0 END AS INTEGER) WHERE (((1022968500) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((1022968500) ISNULL)) IS TRUE)  as count FROM t0, t1, v0, vt0 INNER JOIN vt1 ON CAST(CASE t0.c0  WHEN vt1.c0 THEN t1.c18 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN v0.c0 END AS INTEGER));
SELECT ALL COUNT(*) FROM t0, t1, v0, vt0 INNER JOIN vt1 ON CAST(CASE t0.c0  WHEN vt1.c0 THEN t1.c18 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN v0.c0 END AS INTEGER) WHERE (((1022968500) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((1022968500) ISNULL)) IS TRUE)  as count FROM t0, t1, v0, vt0 INNER JOIN vt1 ON CAST(CASE t0.c0  WHEN vt1.c0 THEN t1.c18 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN v0.c0 END AS INTEGER));
SELECT ALL COUNT(*) FROM t0, t1, v0, vt0 INNER JOIN vt1 ON CAST(CASE t0.c0  WHEN vt1.c0 THEN t1.c18 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN v0.c0 END AS INTEGER) WHERE (((1022968500) ISNULL));
SELECT ALL COUNT(*) FROM t1, t0, v0, vt0, vt1 WHERE (t1.c1 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((t1.c1 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t1, t0, v0, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, t0, v0, vt0, vt1 WHERE (t1.c1 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((t1.c1 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t1, t0, v0, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, t0, v0, vt0, vt1 WHERE (t1.c1 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON ((('-815817625')>=(v0.c0)) IN ()) LEFT OUTER JOIN vt0 ON CAST(0.6281403687812089 AS NUMERIC) WHERE ((((((vt0.c0)AND(x'')))AND(vt0.c0)) IN ((vt1.c0 IN (v0.c0)), ((v0.c0)*(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(x'')))AND(vt0.c0)) IN ((vt1.c0 IN (v0.c0)), ((v0.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((('-815817625')>=(v0.c0)) IN ()) LEFT OUTER JOIN vt0 ON CAST(0.6281403687812089 AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON ((('-815817625')>=(v0.c0)) IN ()) LEFT OUTER JOIN vt0 ON CAST(0.6281403687812089 AS NUMERIC) WHERE ((((((vt0.c0)AND(x'')))AND(vt0.c0)) IN ((vt1.c0 IN (v0.c0)), ((v0.c0)*(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(x'')))AND(vt0.c0)) IN ((vt1.c0 IN (v0.c0)), ((v0.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((('-815817625')>=(v0.c0)) IN ()) LEFT OUTER JOIN vt0 ON CAST(0.6281403687812089 AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON ((('-815817625')>=(v0.c0)) IN ()) LEFT OUTER JOIN vt0 ON CAST(0.6281403687812089 AS NUMERIC) WHERE ((((((vt0.c0)AND(x'')))AND(vt0.c0)) IN ((vt1.c0 IN (v0.c0)), ((v0.c0)*(vt1.c0)))));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)) THEN CAST(v0.c0 AS BLOB) WHEN (NOT (vt1.c0)) THEN (- (vt1.c0)) WHEN ((v0.c0)<<(vt1.c0)) THEN ((v0.c0)OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)) THEN CAST(v0.c0 AS BLOB) WHEN (NOT (vt1.c0)) THEN (- (vt1.c0)) WHEN ((v0.c0)<<(vt1.c0)) THEN ((v0.c0)OR(v0.c0)) END) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)) THEN CAST(v0.c0 AS BLOB) WHEN (NOT (vt1.c0)) THEN (- (vt1.c0)) WHEN ((v0.c0)<<(vt1.c0)) THEN ((v0.c0)OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)) THEN CAST(v0.c0 AS BLOB) WHEN (NOT (vt1.c0)) THEN (- (vt1.c0)) WHEN ((v0.c0)<<(vt1.c0)) THEN ((v0.c0)OR(v0.c0)) END) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)) THEN CAST(v0.c0 AS BLOB) WHEN (NOT (vt1.c0)) THEN (- (vt1.c0)) WHEN ((v0.c0)<<(vt1.c0)) THEN ((v0.c0)OR(v0.c0)) END);
SELECT * FROM vt1 WHERE (((((((vt1.c0) IS TRUE))OR((- (vt1.c0)))))OR((('1454175273') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY UPPER(DISTINCT ((vt1.c0)<=(x'cebb'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) IS TRUE))OR((- (vt1.c0)))))OR((('1454175273') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY UPPER(DISTINCT ((vt1.c0)<=(x'cebb'))) DESC);
SELECT * FROM vt1 WHERE (((((((vt1.c0) IS TRUE))OR((- (vt1.c0)))))OR((('1454175273') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY UPPER(DISTINCT ((vt1.c0)<=(x'cebb'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) IS TRUE))OR((- (vt1.c0)))))OR((('1454175273') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY UPPER(DISTINCT ((vt1.c0)<=(x'cebb'))) DESC);
SELECT * FROM vt1 WHERE (((((((vt1.c0) IS TRUE))OR((- (vt1.c0)))))OR((('1454175273') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY UPPER(DISTINCT ((vt1.c0)<=(x'cebb'))) DESC;
SELECT * FROM v0 WHERE ((((CAST(v0.c0 AS REAL)))>=((CASE WHEN v0.c0 THEN v0.c0 END)))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS REAL)))>=((CASE WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((CAST(v0.c0 AS REAL)))>=((CASE WHEN v0.c0 THEN v0.c0 END)))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS REAL)))>=((CASE WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((CAST(v0.c0 AS REAL)))>=((CASE WHEN v0.c0 THEN v0.c0 END)))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT * FROM t1, v0, vt0, t0, vt1 WHERE (0x64e831d5);
SELECT SUM(count) FROM (SELECT ALL ((0x64e831d5) IS TRUE)  as count FROM t1 NOT INDEXED, v0, vt0, t0, vt1);
SELECT * FROM t1, v0, vt0, t0, vt1 WHERE (0x64e831d5);
SELECT SUM(count) FROM (SELECT ALL ((0x64e831d5) IS TRUE)  as count FROM t1 NOT INDEXED, v0, vt0, t0, vt1);
SELECT * FROM t1, v0, vt0, t0, vt1 WHERE (0x64e831d5);
SELECT * FROM vt1, t1, v0 WHERE ((+ (CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, t1, v0);
SELECT * FROM vt1, t1, v0 WHERE ((+ (CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, t1, v0);
SELECT * FROM vt1, t1, v0 WHERE ((+ (CAST(vt1.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t1, vt0 LEFT OUTER JOIN v0 ON CASE CAST(vt0.c0 AS REAL)  WHEN CAST(vt0.c0 AS NUMERIC) THEN UNLIKELY(v0.c0) END RIGHT OUTER JOIN vt1 ON ((CAST(t1.c2 AS REAL)) IS TRUE) WHERE ((NOT ((v0.c0 IN (t1.c2))))) ORDER BY CAST(((vt0.c0)GLOB(vt1.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((v0.c0 IN (t1.c2))))) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN v0 ON CASE CAST(vt0.c0 AS REAL)  WHEN CAST(vt0.c0 AS NUMERIC) THEN UNLIKELY(v0.c0) END RIGHT OUTER JOIN vt1 ON ((CAST(t1.c2 AS REAL)) IS TRUE) ORDER BY CAST(((vt0.c0)GLOB(vt1.c0)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM t1, vt0 LEFT OUTER JOIN v0 ON CASE CAST(vt0.c0 AS REAL)  WHEN CAST(vt0.c0 AS NUMERIC) THEN UNLIKELY(v0.c0) END RIGHT OUTER JOIN vt1 ON ((CAST(t1.c2 AS REAL)) IS TRUE) WHERE ((NOT ((v0.c0 IN (t1.c2))))) ORDER BY CAST(((vt0.c0)GLOB(vt1.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((v0.c0 IN (t1.c2))))) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN v0 ON CASE CAST(vt0.c0 AS REAL)  WHEN CAST(vt0.c0 AS NUMERIC) THEN UNLIKELY(v0.c0) END RIGHT OUTER JOIN vt1 ON ((CAST(t1.c2 AS REAL)) IS TRUE) ORDER BY CAST(((vt0.c0)GLOB(vt1.c0)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM t1, vt0 LEFT OUTER JOIN v0 ON CASE CAST(vt0.c0 AS REAL)  WHEN CAST(vt0.c0 AS NUMERIC) THEN UNLIKELY(v0.c0) END RIGHT OUTER JOIN vt1 ON ((CAST(t1.c2 AS REAL)) IS TRUE) WHERE ((NOT ((v0.c0 IN (t1.c2))))) ORDER BY CAST(((vt0.c0)GLOB(vt1.c0)) AS TEXT) ASC;
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (((((v0.c0)*(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)*(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (((((v0.c0)*(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)*(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (((((v0.c0)*(vt1.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM t1 WHERE (((((x'') ISNULL))-(((t1.c1)|(t1.c1))))) ORDER BY LIKELY(((t1.c1) IS TRUE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'') ISNULL))-(((t1.c1)|(t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY LIKELY(((t1.c1) IS TRUE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((x'') ISNULL))-(((t1.c1)|(t1.c1))))) ORDER BY LIKELY(((t1.c1) IS TRUE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'') ISNULL))-(((t1.c1)|(t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY LIKELY(((t1.c1) IS TRUE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((x'') ISNULL))-(((t1.c1)|(t1.c1))))) ORDER BY LIKELY(((t1.c1) IS TRUE)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((((((((((~ (0.745989777576407)))AND(((0.576048777355308) NOTNULL))))AND(SUBSTR(vt0.c0, vt1.c0))))AND(MIN(0.22697275714704934, vt1.c0))))AND(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((((((~ (0.745989777576407)))AND(((0.576048777355308) NOTNULL))))AND(SUBSTR(vt0.c0, vt1.c0))))AND(MIN(0.22697275714704934, vt1.c0))))AND(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((((((((((~ (0.745989777576407)))AND(((0.576048777355308) NOTNULL))))AND(SUBSTR(vt0.c0, vt1.c0))))AND(MIN(0.22697275714704934, vt1.c0))))AND(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((((((~ (0.745989777576407)))AND(((0.576048777355308) NOTNULL))))AND(SUBSTR(vt0.c0, vt1.c0))))AND(MIN(0.22697275714704934, vt1.c0))))AND(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((((((((((~ (0.745989777576407)))AND(((0.576048777355308) NOTNULL))))AND(SUBSTR(vt0.c0, vt1.c0))))AND(MIN(0.22697275714704934, vt1.c0))))AND(CAST(v0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1, t0, t1 WHERE (CAST(((t0.c0)LIKE(t1.c2)) AS TEXT)) ORDER BY (((((t0.c0))>((t0.c0))))/(t1.c18)), LIKELIHOOD((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((''))), 0.6413197983664988)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)LIKE(t1.c2)) AS TEXT)) IS TRUE)  as count FROM vt1, t0, t1 ORDER BY (((((t0.c0))>((t0.c0))))/(t1.c18)), LIKELIHOOD((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((''))), 0.6413197983664988)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, t1 WHERE (CAST(((t0.c0)LIKE(t1.c2)) AS TEXT)) ORDER BY (((((t0.c0))>((t0.c0))))/(t1.c18)), LIKELIHOOD((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((''))), 0.6413197983664988)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)LIKE(t1.c2)) AS TEXT)) IS TRUE)  as count FROM vt1, t0, t1 ORDER BY (((((t0.c0))>((t0.c0))))/(t1.c18)), LIKELIHOOD((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((''))), 0.6413197983664988)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, t1 WHERE (CAST(((t0.c0)LIKE(t1.c2)) AS TEXT)) ORDER BY (((((t0.c0))>((t0.c0))))/(t1.c18)), LIKELIHOOD((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((''))), 0.6413197983664988)  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CASE x'' COLLATE RTRIM  WHEN t1.c1 COLLATE RTRIM THEN ((t1.c1)<=('')) ELSE ((vt0.c0) NOT NULL) END) ORDER BY CAST(((t1.c0)!=(vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE x'' COLLATE RTRIM  WHEN t1.c1 COLLATE RTRIM THEN ((t1.c1)<=('')) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY CAST(((t1.c0)<>(vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CASE x'' COLLATE RTRIM  WHEN t1.c1 COLLATE RTRIM THEN ((t1.c1)<=('')) ELSE ((vt0.c0) NOT NULL) END) ORDER BY CAST(((t1.c0)!=(vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE x'' COLLATE RTRIM  WHEN t1.c1 COLLATE RTRIM THEN ((t1.c1)<=('')) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY CAST(((t1.c0)<>(vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CASE x'' COLLATE RTRIM  WHEN t1.c1 COLLATE RTRIM THEN ((t1.c1)<=('')) ELSE ((vt0.c0) NOT NULL) END) ORDER BY CAST(((t1.c0)!=(vt0.c0)) AS NUMERIC);
SELECT ALL COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN t1 ON json_patch((NULL IN ()), ((((((((t1.c18)OR(vt1.c0)))OR(t1.c0)))AND(t0.c0)))OR(t1.c0))) WHERE (((((t1.c1) IS TRUE)) NOT BETWEEN ((((t1.c1))>((t0.c0)))) AND (((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY UNLIKELY(DISTINCT t1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((t1.c1) IS TRUE)) NOT BETWEEN ((((t1.c1))>((t0.c0)))) AND (((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN t1 ON json_patch((NULL IN ()), ((((((((t1.c18)OR(vt1.c0)))OR(t1.c0)))AND(t0.c0)))OR(t1.c0))) ORDER BY UNLIKELY(DISTINCT t1.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN t1 ON json_patch((NULL IN ()), ((((((((t1.c18)OR(vt1.c0)))OR(t1.c0)))AND(t0.c0)))OR(t1.c0))) WHERE (((((t1.c1) IS TRUE)) NOT BETWEEN ((((t1.c1))>((t0.c0)))) AND (((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY UNLIKELY(DISTINCT t1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((t1.c1) IS TRUE)) NOT BETWEEN ((((t1.c1))>((t0.c0)))) AND (((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN t1 ON json_patch((NULL IN ()), ((((((((t1.c18)OR(vt1.c0)))OR(t1.c0)))AND(t0.c0)))OR(t1.c0))) ORDER BY UNLIKELY(DISTINCT t1.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN t1 ON json_patch((NULL IN ()), ((((((((t1.c18)OR(vt1.c0)))OR(t1.c0)))AND(t0.c0)))OR(t1.c0))) WHERE (((((t1.c1) IS TRUE)) NOT BETWEEN ((((t1.c1))>((t0.c0)))) AND (((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY UNLIKELY(DISTINCT t1.c0 COLLATE RTRIM);
SELECT COUNT(*) FROM t0, v0, vt1, t1, vt0 WHERE (v0.c0 COLLATE NOCASE) ORDER BY CASE CAST(t1.c0 AS BLOB)  WHEN CASE t1.c0  WHEN x'' THEN t1.c18 WHEN vt1.c0 THEN x'' WHEN t0.c0 THEN t1.c1 END THEN ((t0.c0) ISNULL) ELSE (((t1.c2))<>((t1.c18))) END;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, vt1, t1, vt0 ORDER BY CASE CAST(t1.c0 AS BLOB)  WHEN CASE t1.c0  WHEN x'' THEN t1.c18 WHEN vt1.c0 THEN x'' WHEN t0.c0 THEN t1.c1 END THEN ((t0.c0) ISNULL) ELSE (((t1.c2))<>((t1.c18))) END);
SELECT COUNT(*) FROM t0, v0, vt1, t1, vt0 WHERE (v0.c0 COLLATE NOCASE) ORDER BY CASE CAST(t1.c0 AS BLOB)  WHEN CASE t1.c0  WHEN x'' THEN t1.c18 WHEN vt1.c0 THEN x'' WHEN t0.c0 THEN t1.c1 END THEN ((t0.c0) ISNULL) ELSE (((t1.c2))<>((t1.c18))) END;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, vt1, t1, vt0 ORDER BY CASE CAST(t1.c0 AS BLOB)  WHEN CASE t1.c0  WHEN x'' THEN t1.c18 WHEN vt1.c0 THEN x'' WHEN t0.c0 THEN t1.c1 END THEN ((t0.c0) ISNULL) ELSE (((t1.c2))<>((t1.c18))) END);
SELECT COUNT(*) FROM t0, v0, vt1, t1, vt0 WHERE (v0.c0 COLLATE NOCASE) ORDER BY CASE CAST(t1.c0 AS BLOB)  WHEN CASE t1.c0  WHEN x'' THEN t1.c18 WHEN vt1.c0 THEN x'' WHEN t0.c0 THEN t1.c1 END THEN ((t0.c0) ISNULL) ELSE (((t1.c2))<>((t1.c18))) END;
SELECT * FROM v0, vt0, t1, t0 WHERE (t1.c1) ORDER BY ')qZ';
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM v0, vt0, t1, t0 ORDER BY ')qZ');
SELECT * FROM v0, vt0, t1, t0 WHERE (t1.c1) ORDER BY ')qZ';
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM v0, vt0, t1, t0 ORDER BY ')qZ');
SELECT * FROM v0, vt0, t1, t0 WHERE (t1.c1) ORDER BY ')qZ';
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND(0.4624713160166958)))AND(((vt0.c0)LIKE(x'')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)AND(0.4624713160166958)))AND(((vt0.c0)LIKE(x''))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND(0.4624713160166958)))AND(((vt0.c0)LIKE(x'')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)AND(0.4624713160166958)))AND(((vt0.c0)LIKE(x''))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND(0.4624713160166958)))AND(((vt0.c0)LIKE(x'')))));
SELECT COUNT(*) FROM v0, vt0, t0, t1 WHERE ((((((v0.c0)) BETWEEN ((t1.c0)) AND ((t1.c2)))) NOTNULL)) ORDER BY ((NULL) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((t1.c0)) AND ((t1.c2)))) NOTNULL)) IS TRUE)  as count FROM v0, vt0, t0, t1 ORDER BY ((NULL) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, t0, t1 WHERE ((((((v0.c0)) BETWEEN ((t1.c0)) AND ((t1.c2)))) NOTNULL)) ORDER BY ((NULL) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((t1.c0)) AND ((t1.c2)))) NOTNULL)) IS TRUE)  as count FROM v0, vt0, t0, t1 ORDER BY ((NULL) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, t0, t1 WHERE ((((((v0.c0)) BETWEEN ((t1.c0)) AND ((t1.c2)))) NOTNULL)) ORDER BY ((NULL) NOT NULL)  NULLS LAST;
SELECT * FROM v0, t1 LEFT OUTER JOIN vt1 ON ((t1.c18) IS FALSE) FULL OUTER JOIN vt0 ON LOWER((((('0.2617742552481436')OR(vt1.c0)))OR(vt1.c0))) WHERE (t1.c18);
SELECT SUM(count) FROM (SELECT ((t1.c18) IS TRUE)  as count FROM v0, t1 LEFT OUTER JOIN vt1 ON ((t1.c18) IS FALSE) FULL OUTER JOIN vt0 ON LOWER((((('0.2617742552481436')OR(vt1.c0)))OR(vt1.c0))));
SELECT * FROM v0, t1 LEFT OUTER JOIN vt1 ON ((t1.c18) IS FALSE) FULL OUTER JOIN vt0 ON LOWER((((('0.2617742552481436')OR(vt1.c0)))OR(vt1.c0))) WHERE (t1.c18);
SELECT SUM(count) FROM (SELECT ((t1.c18) IS TRUE)  as count FROM v0, t1 LEFT OUTER JOIN vt1 ON ((t1.c18) IS FALSE) FULL OUTER JOIN vt0 ON LOWER((((('0.2617742552481436')OR(vt1.c0)))OR(vt1.c0))));
SELECT * FROM v0, t1 LEFT OUTER JOIN vt1 ON ((t1.c18) IS FALSE) FULL OUTER JOIN vt0 ON LOWER((((('0.2617742552481436')OR(vt1.c0)))OR(vt1.c0))) WHERE (t1.c18);
SELECT ALL COUNT(*) FROM t0, vt0, v0, vt1, t1 WHERE (highlight(((vt1.c0) NOT BETWEEN (t1.c2) AND (t1.c1)), ((v0.c0)GLOB(vt1.c0)), ((vt1.c0)<=(v0.c0)), (- (t1.c1))));
SELECT SUM(count) FROM (SELECT ((highlight(((vt1.c0) NOT BETWEEN (t1.c2) AND (t1.c1)), ((v0.c0)GLOB(vt1.c0)), ((vt1.c0)<=(v0.c0)), (- (t1.c1)))) IS TRUE)  as count FROM t0, vt0, v0, vt1, t1);
SELECT ALL COUNT(*) FROM t0, vt0, v0, vt1, t1 WHERE (highlight(((vt1.c0) NOT BETWEEN (t1.c2) AND (t1.c1)), ((v0.c0)GLOB(vt1.c0)), ((vt1.c0)<=(v0.c0)), (- (t1.c1))));
SELECT SUM(count) FROM (SELECT ((highlight(((vt1.c0) NOT BETWEEN (t1.c2) AND (t1.c1)), ((v0.c0)GLOB(vt1.c0)), ((vt1.c0)<=(v0.c0)), (- (t1.c1)))) IS TRUE)  as count FROM t0, vt0, v0, vt1, t1);
SELECT ALL COUNT(*) FROM t0, vt0, v0, vt1, t1 WHERE (highlight(((vt1.c0) NOT BETWEEN (t1.c2) AND (t1.c1)), ((v0.c0)GLOB(vt1.c0)), ((vt1.c0)<=(v0.c0)), (- (t1.c1))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON UPPER(DISTINCT vt1.c0) COLLATE RTRIM CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (vt0.c0) AND ('737334798')) COLLATE RTRIM WHERE (((vt1.c0)OR((((NULL, vt0.c0, vt1.c0, vt0.c0, vt1.c0))=((vt1.c0, vt1.c0, v0.c0, vt1.c0, vt0.c0)))))) ORDER BY ((((v0.c0)>>(vt1.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)OR((((NULL, vt0.c0, vt1.c0, vt0.c0, vt1.c0))==((vt1.c0, vt1.c0, v0.c0, vt1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON UPPER(DISTINCT vt1.c0) COLLATE RTRIM CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (vt0.c0) AND ('737334798')) COLLATE RTRIM ORDER BY ((((v0.c0)>>(vt1.c0))) NOT NULL));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON UPPER(DISTINCT vt1.c0) COLLATE RTRIM CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (vt0.c0) AND ('737334798')) COLLATE RTRIM WHERE (((vt1.c0)OR((((NULL, vt0.c0, vt1.c0, vt0.c0, vt1.c0))=((vt1.c0, vt1.c0, v0.c0, vt1.c0, vt0.c0)))))) ORDER BY ((((v0.c0)>>(vt1.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)OR((((NULL, vt0.c0, vt1.c0, vt0.c0, vt1.c0))==((vt1.c0, vt1.c0, v0.c0, vt1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON UPPER(DISTINCT vt1.c0) COLLATE RTRIM CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (vt0.c0) AND ('737334798')) COLLATE RTRIM ORDER BY ((((v0.c0)>>(vt1.c0))) NOT NULL));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON UPPER(DISTINCT vt1.c0) COLLATE RTRIM CROSS JOIN vt0 ON ((vt0.c0) BETWEEN (vt0.c0) AND ('737334798')) COLLATE RTRIM WHERE (((vt1.c0)OR((((NULL, vt0.c0, vt1.c0, vt0.c0, vt1.c0))=((vt1.c0, vt1.c0, v0.c0, vt1.c0, vt0.c0)))))) ORDER BY ((((v0.c0)>>(vt1.c0))) NOT NULL);
