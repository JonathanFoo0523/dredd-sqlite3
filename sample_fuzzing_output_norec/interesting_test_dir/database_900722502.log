-- Time: 2024/06/10 08:40:36
-- Database: database2
-- Database version: 3.40.0
-- seed value: 900722502
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TABLE t0 (c0 BLOB  CHECK ( ((((c0)%(c0))) IS TRUE))); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 BLOB ); -- 0ms;
ANALYZE; -- 1ms;
CREATE INDEX IF NOT EXISTS i80 ON t0(TYPEOF(DISTINCT CASE c0  WHEN c0 THEN c0 END)) WHERE ((((((''))>=(('')))))==(((NOT (c0))))); -- 1ms;
PRAGMA cache_spill; -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 1ms;
PRAGMA journal_mode; -- 0ms;
CREATE TEMPORARY VIEW v0(c0, c1, c2, c3, c4) AS SELECT rt1.c3, UNLIKELY(((((rt1.c3)AND(rt1.c2)))OR(rt1.c1))), AVG(((rt1.c1)||(rt1.c0))), ('767111366' IN ()), ((((((rt1.c0)OR(t0.c0)))AND(rt1.c2)))LIKE(CAST(rt1.c2 AS BLOB))) FROM t0, rt1; -- 0ms;
PRAGMA integrity_check; -- 0ms;
PRAGMA main.journal_mode = WAL; -- 0ms;
PRAGMA temp.secure_delete = false; -- 0ms;
COMMIT; -- 0ms;
COMMIT; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
CREATE TABLE t1 (c0 INTEGER ); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'i80', ' sz=767111366'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA default_cache_size = 1233114729; -- 0ms;
ANALYZE; -- 5ms;
PRAGMA incremental_vacuum(683296869); -- 0ms;
CREATE UNIQUE INDEX i66 ON t1((+ (CAST(c0 AS TEXT))) COLLATE RTRIM); -- 0ms;
CREATE UNIQUE INDEX i81 ON t1(CAST(LIKELIHOOD(DISTINCT c0, 0.4324867471219992) AS INTEGER) COLLATE BINARY) WHERE ((((0.741032320997585)==(c0)))||(CASE WHEN ' g' THEN x'ee24' ELSE c0 END)); -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i50 ON t1(NULL); -- 1ms;
PRAGMA temp.cache_spill = false; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
REINDEX  rt1; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rtreecheck('rt1'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
VACUUM main; -- 1ms;
PRAGMA main.wal_autocheckpoint = 7936355089028266167; -- 0ms;
PRAGMA cache_size; -- 1ms;
PRAGMA short_column_names; -- 0ms;
PRAGMA cache_spill = -8964138403306113960; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER INSERT ON t0 FOR EACH ROW  BEGIN UPDATE OR FAIL rt1 SET (c2)=(NULL);END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA default_cache_size; -- 0ms;
PRAGMA main.cache_spill = false; -- 0ms;
END TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 INT ); -- 1ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA cache_size; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
END; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t1 CROSS JOIN rt1 ON UNLIKELY(CAST(rt0.c1 AS NUMERIC)) INNER JOIN rt0 ON ((SQLITE_SOURCE_ID())IS NOT(((rt0.c2) NOT BETWEEN (rt1.c1) AND ('767111366')))) LEFT OUTER JOIN t0 ON '-864725645' CROSS JOIN v0 ON CASE (((rt0.c0, rt1.c1, rt0.c3))>((v0.c3, v0.c4, v0.c4)))  WHEN ((rt1.c2) NOT NULL) THEN LOWER(DISTINCT v0.c0) ELSE CASE WHEN rt1.c3 THEN t0.c0 ELSE 0.11427535935191069 END END WHERE ((+ (rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON UNLIKELY(CAST(rt0.c1 AS NUMERIC)) INNER JOIN rt0 ON ((SQLITE_SOURCE_ID())IS NOT(((rt0.c2) NOT BETWEEN (rt1.c1) AND ('767111366')))) LEFT OUTER JOIN t0 ON '-864725645' CROSS JOIN v0 ON CASE (((rt0.c0, rt1.c1, rt0.c3))>((v0.c3, v0.c4, v0.c4)))  WHEN ((rt1.c2) NOT NULL) THEN LOWER(DISTINCT v0.c0) ELSE CASE WHEN rt1.c3 THEN t0.c0 ELSE 0.11427535935191069 END END);
SELECT ALL * FROM t1 CROSS JOIN rt1 ON UNLIKELY(CAST(rt0.c1 AS NUMERIC)) INNER JOIN rt0 ON ((SQLITE_SOURCE_ID())IS NOT(((rt0.c2) NOT BETWEEN (rt1.c1) AND ('767111366')))) LEFT OUTER JOIN t0 ON '-864725645' CROSS JOIN v0 ON CASE (((rt0.c0, rt1.c1, rt0.c3))>((v0.c3, v0.c4, v0.c4)))  WHEN ((rt1.c2) NOT NULL) THEN LOWER(DISTINCT v0.c0) ELSE CASE WHEN rt1.c3 THEN t0.c0 ELSE 0.11427535935191069 END END WHERE ((+ (rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON UNLIKELY(CAST(rt0.c1 AS NUMERIC)) INNER JOIN rt0 ON ((SQLITE_SOURCE_ID())IS NOT(((rt0.c2) NOT BETWEEN (rt1.c1) AND ('767111366')))) LEFT OUTER JOIN t0 ON '-864725645' CROSS JOIN v0 ON CASE (((rt0.c0, rt1.c1, rt0.c3))>((v0.c3, v0.c4, v0.c4)))  WHEN ((rt1.c2) NOT NULL) THEN LOWER(DISTINCT v0.c0) ELSE CASE WHEN rt1.c3 THEN t0.c0 ELSE 0.11427535935191069 END END);
SELECT ALL * FROM t1 CROSS JOIN rt1 ON UNLIKELY(CAST(rt0.c1 AS NUMERIC)) INNER JOIN rt0 ON ((SQLITE_SOURCE_ID())IS NOT(((rt0.c2) NOT BETWEEN (rt1.c1) AND ('767111366')))) LEFT OUTER JOIN t0 ON '-864725645' CROSS JOIN v0 ON CASE (((rt0.c0, rt1.c1, rt0.c3))>((v0.c3, v0.c4, v0.c4)))  WHEN ((rt1.c2) NOT NULL) THEN LOWER(DISTINCT v0.c0) ELSE CASE WHEN rt1.c3 THEN t0.c0 ELSE 0.11427535935191069 END END WHERE ((+ (rt1.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((rt1.c2))>=((rt1.c3))))AND(LOWER(DISTINCT rt1.c1))))OR(CAST(rt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c2))>=((rt1.c3))))AND(LOWER(DISTINCT rt1.c1))))OR(CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((rt1.c2))>=((rt1.c3))))AND(LOWER(DISTINCT rt1.c1))))OR(CAST(rt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c2))>=((rt1.c3))))AND(LOWER(DISTINCT rt1.c1))))OR(CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((rt1.c2))>=((rt1.c3))))AND(LOWER(DISTINCT rt1.c1))))OR(CAST(rt1.c0 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) THEN (((rt0.c2))<((0.8741857526655368))) ELSE '1476342594' END) ORDER BY LIKELIHOOD(DISTINCT ((0.5580645164528738) NOT BETWEEN (rt0.c0) AND (rt0.c3)), 0.4074612298578728)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS BLOB)  WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) THEN (((rt0.c2))<((0.8741857526655368))) ELSE '1476342594' END) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(DISTINCT ((0.5580645164528738) NOT BETWEEN (rt0.c0) AND (rt0.c3)), 0.4074612298578728)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) THEN (((rt0.c2))<((0.8741857526655368))) ELSE '1476342594' END) ORDER BY LIKELIHOOD(DISTINCT ((0.5580645164528738) NOT BETWEEN (rt0.c0) AND (rt0.c3)), 0.4074612298578728)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS BLOB)  WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) THEN (((rt0.c2))<((0.8741857526655368))) ELSE '1476342594' END) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(DISTINCT ((0.5580645164528738) NOT BETWEEN (rt0.c0) AND (rt0.c3)), 0.4074612298578728)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) THEN (((rt0.c2))<((0.8741857526655368))) ELSE '1476342594' END) ORDER BY LIKELIHOOD(DISTINCT ((0.5580645164528738) NOT BETWEEN (rt0.c0) AND (rt0.c3)), 0.4074612298578728)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t1 WHERE ((NOT (0.8741857526655368))) ORDER BY ((('0.11427535935191069')) BETWEEN ((LIKELIHOOD(rt1.c3, 0.23525938775243793))) AND ((((t1.c0)IS NOT(rt1.c3))))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (0.8741857526655368))) IS TRUE)  as count FROM rt1, t1 ORDER BY ((('0.11427535935191069')) BETWEEN ((LIKELIHOOD(rt1.c3, 0.23525938775243793))) AND ((((t1.c0)IS NOT(rt1.c3))))) ASC);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE ((NOT (0.8741857526655368))) ORDER BY ((('0.11427535935191069')) BETWEEN ((LIKELIHOOD(rt1.c3, 0.23525938775243793))) AND ((((t1.c0)IS NOT(rt1.c3))))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (0.8741857526655368))) IS TRUE)  as count FROM rt1, t1 ORDER BY ((('0.11427535935191069')) BETWEEN ((LIKELIHOOD(rt1.c3, 0.23525938775243793))) AND ((((t1.c0)IS NOT(rt1.c3))))) ASC);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE ((NOT (0.8741857526655368))) ORDER BY ((('0.11427535935191069')) BETWEEN ((LIKELIHOOD(rt1.c3, 0.23525938775243793))) AND ((((t1.c0)IS NOT(rt1.c3))))) ASC;
SELECT ALL * FROM v0, rt1 WHERE (((TYPEOF(DISTINCT ''))-(((v0.c3) NOT BETWEEN (v0.c3) AND (rt1.c2))))) ORDER BY ((((rt1.c3) NOT BETWEEN (v0.c1) AND (v0.c0)))>(((rt1.c3)LIKE(rt1.c3))))  NULLS FIRST, ((((CASE WHEN v0.c1 THEN v0.c3 END)OR(CAST(v0.c3 AS BLOB))))AND(((((((((v0.c4)OR(v0.c4)))OR(v0.c1)))OR(v0.c3)))AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT ''))-(((v0.c3) NOT BETWEEN (v0.c3) AND (rt1.c2))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((rt1.c3) NOT BETWEEN (v0.c1) AND (v0.c0)))>(((rt1.c3)LIKE(rt1.c3))))  NULLS FIRST, ((((CASE WHEN v0.c1 THEN v0.c3 END)OR(CAST(v0.c3 AS BLOB))))AND(((((((((v0.c4)OR(v0.c4)))OR(v0.c1)))OR(v0.c3)))AND(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0, rt1 WHERE (((TYPEOF(DISTINCT ''))-(((v0.c3) NOT BETWEEN (v0.c3) AND (rt1.c2))))) ORDER BY ((((rt1.c3) NOT BETWEEN (v0.c1) AND (v0.c0)))>(((rt1.c3)LIKE(rt1.c3))))  NULLS FIRST, ((((CASE WHEN v0.c1 THEN v0.c3 END)OR(CAST(v0.c3 AS BLOB))))AND(((((((((v0.c4)OR(v0.c4)))OR(v0.c1)))OR(v0.c3)))AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT ''))-(((v0.c3) NOT BETWEEN (v0.c3) AND (rt1.c2))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((rt1.c3) NOT BETWEEN (v0.c1) AND (v0.c0)))>(((rt1.c3)LIKE(rt1.c3))))  NULLS FIRST, ((((CASE WHEN v0.c1 THEN v0.c3 END)OR(CAST(v0.c3 AS BLOB))))AND(((((((((v0.c4)OR(v0.c4)))OR(v0.c1)))OR(v0.c3)))AND(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0, rt1 WHERE (((TYPEOF(DISTINCT ''))-(((v0.c3) NOT BETWEEN (v0.c3) AND (rt1.c2))))) ORDER BY ((((rt1.c3) NOT BETWEEN (v0.c1) AND (v0.c0)))>(((rt1.c3)LIKE(rt1.c3))))  NULLS FIRST, ((((CASE WHEN v0.c1 THEN v0.c3 END)OR(CAST(v0.c3 AS BLOB))))AND(((((((((v0.c4)OR(v0.c4)))OR(v0.c1)))OR(v0.c3)))AND(v0.c0))))  NULLS LAST;
SELECT * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c1);
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON CAST((((v0.c0, x'', v0.c2)) NOT BETWEEN ((v0.c0, v0.c3, v0.c1)) AND ((v0.c3, t0.c0, v0.c4))) AS BLOB) WHERE (((((v0.c3) BETWEEN (t0.c0) AND (v0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c3) BETWEEN (t0.c0) AND (v0.c2))) NOTNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON CAST((((v0.c0, x'', v0.c2)) NOT BETWEEN ((v0.c0, v0.c3, v0.c1)) AND ((v0.c3, t0.c0, v0.c4))) AS BLOB));
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON CAST((((v0.c0, x'', v0.c2)) NOT BETWEEN ((v0.c0, v0.c3, v0.c1)) AND ((v0.c3, t0.c0, v0.c4))) AS BLOB) WHERE (((((v0.c3) BETWEEN (t0.c0) AND (v0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c3) BETWEEN (t0.c0) AND (v0.c2))) NOTNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON CAST((((v0.c0, x'', v0.c2)) NOT BETWEEN ((v0.c0, v0.c3, v0.c1)) AND ((v0.c3, t0.c0, v0.c4))) AS BLOB));
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON CAST((((v0.c0, x'', v0.c2)) NOT BETWEEN ((v0.c0, v0.c3, v0.c1)) AND ((v0.c3, t0.c0, v0.c4))) AS BLOB) WHERE (((((v0.c3) BETWEEN (t0.c0) AND (v0.c2))) NOTNULL));
SELECT ALL * FROM t0, v0, rt0 WHERE (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((rt0.c2, rt0.c2, v0.c3)) AND ((rt0.c0, rt0.c3, v0.c2))), ((rt0.c3) ISNULL), (- (rt0.c1))))>(((v0.c1 IN (rt0.c0)), CAST(rt0.c2 AS NUMERIC), (((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))) ORDER BY (((0.9386782712437668)) NOT BETWEEN ((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((CAST(t0.c0 AS BLOB)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((rt0.c2, rt0.c2, v0.c3)) AND ((rt0.c0, rt0.c3, v0.c2))), ((rt0.c3) ISNULL), (- (rt0.c1))))>(((v0.c1 IN (rt0.c0)), CAST(rt0.c2 AS NUMERIC), (((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY (((0.9386782712437668)) NOT BETWEEN ((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((CAST(t0.c0 AS BLOB)))) DESC);
SELECT ALL * FROM t0, v0, rt0 WHERE (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((rt0.c2, rt0.c2, v0.c3)) AND ((rt0.c0, rt0.c3, v0.c2))), ((rt0.c3) ISNULL), (- (rt0.c1))))>(((v0.c1 IN (rt0.c0)), CAST(rt0.c2 AS NUMERIC), (((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))) ORDER BY (((0.9386782712437668)) NOT BETWEEN ((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((CAST(t0.c0 AS BLOB)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((rt0.c2, rt0.c2, v0.c3)) AND ((rt0.c0, rt0.c3, v0.c2))), ((rt0.c3) ISNULL), (- (rt0.c1))))>(((v0.c1 IN (rt0.c0)), CAST(rt0.c2 AS NUMERIC), (((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY (((0.9386782712437668)) NOT BETWEEN ((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((CAST(t0.c0 AS BLOB)))) DESC);
SELECT ALL * FROM t0, v0, rt0 WHERE (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((rt0.c2, rt0.c2, v0.c3)) AND ((rt0.c0, rt0.c3, v0.c2))), ((rt0.c3) ISNULL), (- (rt0.c1))))>(((v0.c1 IN (rt0.c0)), CAST(rt0.c2 AS NUMERIC), (((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))) ORDER BY (((0.9386782712437668)) NOT BETWEEN ((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((CAST(t0.c0 AS BLOB)))) DESC;
SELECT ALL COUNT(*) FROM rt0, v0, rt1, t1 WHERE (((CAST(v0.c3 AS BLOB)) BETWEEN (((v0.c1)%('b황vw'))) AND ((v0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c3 AS BLOB)) BETWEEN (((v0.c1)%('b황vw'))) AND ((v0.c3 IN ())))) IS TRUE)  as count FROM rt0, v0, rt1, t1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1, t1 WHERE (((CAST(v0.c3 AS BLOB)) BETWEEN (((v0.c1)%('b황vw'))) AND ((v0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c3 AS BLOB)) BETWEEN (((v0.c1)%('b황vw'))) AND ((v0.c3 IN ())))) IS TRUE)  as count FROM rt0, v0, rt1, t1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1, t1 WHERE (((CAST(v0.c3 AS BLOB)) BETWEEN (((v0.c1)%('b황vw'))) AND ((v0.c3 IN ()))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0) NOT NULL) IN ('', CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOT NULL) IN ('', CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0) NOT NULL) IN ('', CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOT NULL) IN ('', CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0) NOT NULL) IN ('', CAST(t0.c0 AS BLOB))));
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c3) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0, rt0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c3) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0, rt0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c3) ORDER BY NULL DESC;
SELECT ALL * FROM t1 NATURAL JOIN rt1 WHERE (TRIM(((t1.c0) NOTNULL))) ORDER BY (((((rt1.c1))<((rt1.c2))))>>(CASE rt1.c2  WHEN x'06f6' THEN t1.c0 WHEN t1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((t1.c0) NOTNULL))) IS TRUE)  as count FROM t1 NATURAL JOIN rt1 ORDER BY (((((rt1.c1))<((rt1.c2))))>>(CASE rt1.c2  WHEN x'06f6' THEN t1.c0 WHEN t1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END)));
SELECT ALL * FROM t1 NATURAL JOIN rt1 WHERE (TRIM(((t1.c0) NOTNULL))) ORDER BY (((((rt1.c1))<((rt1.c2))))>>(CASE rt1.c2  WHEN x'06f6' THEN t1.c0 WHEN t1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((t1.c0) NOTNULL))) IS TRUE)  as count FROM t1 NATURAL JOIN rt1 ORDER BY (((((rt1.c1))<((rt1.c2))))>>(CASE rt1.c2  WHEN x'06f6' THEN t1.c0 WHEN t1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END)));
SELECT ALL * FROM t1 NATURAL JOIN rt1 WHERE (TRIM(((t1.c0) NOTNULL))) ORDER BY (((((rt1.c1))<((rt1.c2))))>>(CASE rt1.c2  WHEN x'06f6' THEN t1.c0 WHEN t1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END));
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY x'ab04' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY x'ab04' DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY x'ab04' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY x'ab04' DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY x'ab04' DESC  NULLS LAST;
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON UPPER(DISTINCT v0.c3) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((((rt0.c1) IS TRUE))>=(((v0.c4)AND(v0.c3)))) WHERE (CAST(((rt0.c2)|('')) AS TEXT)) ORDER BY (rt0.c2 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)|('')) AS TEXT)) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON UPPER(DISTINCT v0.c3) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((((rt0.c1) IS TRUE))>=(((v0.c4)AND(v0.c3)))) ORDER BY (rt0.c2 IN ()) COLLATE BINARY);
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON UPPER(DISTINCT v0.c3) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((((rt0.c1) IS TRUE))>=(((v0.c4)AND(v0.c3)))) WHERE (CAST(((rt0.c2)|('')) AS TEXT)) ORDER BY (rt0.c2 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)|('')) AS TEXT)) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON UPPER(DISTINCT v0.c3) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((((rt0.c1) IS TRUE))>=(((v0.c4)AND(v0.c3)))) ORDER BY (rt0.c2 IN ()) COLLATE BINARY);
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON UPPER(DISTINCT v0.c3) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((((rt0.c1) IS TRUE))>=(((v0.c4)AND(v0.c3)))) WHERE (CAST(((rt0.c2)|('')) AS TEXT)) ORDER BY (rt0.c2 IN ()) COLLATE BINARY;
SELECT * FROM rt0, t0 WHERE ((CAST(rt0.c2 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((CAST(rt0.c2 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((CAST(rt0.c2 AS BLOB) IN ()));
SELECT COUNT(*) FROM v0, t1, rt1, t0, rt0 WHERE (((((rt1.c0)<>(rt0.c3))) IS FALSE)) ORDER BY CAST(rt1.c1 AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<>(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM v0, t1, rt1, t0, rt0 ORDER BY CAST(rt1.c1 AS NUMERIC) DESC);
SELECT COUNT(*) FROM v0, t1, rt1, t0, rt0 WHERE (((((rt1.c0)<>(rt0.c3))) IS FALSE)) ORDER BY CAST(rt1.c1 AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<>(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM v0, t1, rt1, t0, rt0 ORDER BY CAST(rt1.c1 AS NUMERIC) DESC);
SELECT COUNT(*) FROM v0, t1, rt1, t0, rt0 WHERE (((((rt1.c0)<>(rt0.c3))) IS FALSE)) ORDER BY CAST(rt1.c1 AS NUMERIC) DESC;
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((CASE rt1.c3  WHEN '1834672782' THEN rt1.c1 END) BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND ((rt1.c1 IN ()))), ((((CAST(rt1.c2 AS REAL))AND((((rt1.c2, rt1.c1, rt1.c0, rt1.c1, 0.4322422373852818))<=((rt1.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c3))))))AND(rt1.c2));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c3  WHEN '1834672782' THEN rt1.c1 END) BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND ((rt1.c1 IN ()))), ((((CAST(rt1.c2 AS REAL))AND((((rt1.c2, rt1.c1, rt1.c0, rt1.c1, 0.4322422373852818))<=((rt1.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c3))))))AND(rt1.c2)));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((CASE rt1.c3  WHEN '1834672782' THEN rt1.c1 END) BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND ((rt1.c1 IN ()))), ((((CAST(rt1.c2 AS REAL))AND((((rt1.c2, rt1.c1, rt1.c0, rt1.c1, 0.4322422373852818))<=((rt1.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c3))))))AND(rt1.c2));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c3  WHEN '1834672782' THEN rt1.c1 END) BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND ((rt1.c1 IN ()))), ((((CAST(rt1.c2 AS REAL))AND((((rt1.c2, rt1.c1, rt1.c0, rt1.c1, 0.4322422373852818))<=((rt1.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c3))))))AND(rt1.c2)));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((CASE rt1.c3  WHEN '1834672782' THEN rt1.c1 END) BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND ((rt1.c1 IN ()))), ((((CAST(rt1.c2 AS REAL))AND((((rt1.c2, rt1.c1, rt1.c0, rt1.c1, 0.4322422373852818))<=((rt1.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c3))))))AND(rt1.c2));
SELECT ALL COUNT(*) FROM t0, rt0, v0 INNER JOIN rt1 ON (((rt1.c3 IN (rt1.c2)))<<(CASE 0X2a9cf0bb  WHEN rt0.c3 THEN rt1.c2 WHEN v0.c3 THEN rt1.c2 WHEN v0.c3 THEN rt1.c1 END)) WHERE (x'' COLLATE BINARY COLLATE BINARY) ORDER BY ((CASE rt0.c3  WHEN rt1.c0 THEN v0.c2 ELSE v0.c0 END)IS(((((t0.c0)AND(rt1.c1)))AND(rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, v0 INNER JOIN rt1 ON (((rt1.c3 IN (rt1.c2)))<<(CASE 0X2a9cf0bb  WHEN rt0.c3 THEN rt1.c2 WHEN v0.c3 THEN rt1.c2 WHEN v0.c3 THEN rt1.c1 END)) ORDER BY ((CASE rt0.c3  WHEN rt1.c0 THEN v0.c2 ELSE v0.c0 END)IS(((((t0.c0)AND(rt1.c1)))AND(rt1.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, v0 INNER JOIN rt1 ON (((rt1.c3 IN (rt1.c2)))<<(CASE 0X2a9cf0bb  WHEN rt0.c3 THEN rt1.c2 WHEN v0.c3 THEN rt1.c2 WHEN v0.c3 THEN rt1.c1 END)) WHERE (x'' COLLATE BINARY COLLATE BINARY) ORDER BY ((CASE rt0.c3  WHEN rt1.c0 THEN v0.c2 ELSE v0.c0 END)IS(((((t0.c0)AND(rt1.c1)))AND(rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, v0 INNER JOIN rt1 ON (((rt1.c3 IN (rt1.c2)))<<(CASE 0X2a9cf0bb  WHEN rt0.c3 THEN rt1.c2 WHEN v0.c3 THEN rt1.c2 WHEN v0.c3 THEN rt1.c1 END)) ORDER BY ((CASE rt0.c3  WHEN rt1.c0 THEN v0.c2 ELSE v0.c0 END)IS(((((t0.c0)AND(rt1.c1)))AND(rt1.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, v0 INNER JOIN rt1 ON (((rt1.c3 IN (rt1.c2)))<<(CASE 0X2a9cf0bb  WHEN rt0.c3 THEN rt1.c2 WHEN v0.c3 THEN rt1.c2 WHEN v0.c3 THEN rt1.c1 END)) WHERE (x'' COLLATE BINARY COLLATE BINARY) ORDER BY ((CASE rt0.c3  WHEN rt1.c0 THEN v0.c2 ELSE v0.c0 END)IS(((((t0.c0)AND(rt1.c1)))AND(rt1.c3))))  NULLS FIRST;
SELECT * FROM t1 CROSS JOIN t0 ON (((((v0.c2 IN ()))AND(TIME(t0.c0, v0.c3, v0.c2))))AND(((((((((v0.c3)OR(x'')))OR(t0.c0)))OR(NULL)))AND(v0.c2)))) CROSS JOIN v0 ON CHAR(((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) WHERE (TIME(((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))OR(t1.c0)))AND(v0.c3)), ((v0.c4)<=(x'7357')), (t0.c0 IN ()))) ORDER BY NULLIF((+ (v0.c4)), (((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((TIME(((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))OR(t1.c0)))AND(v0.c3)), ((v0.c4)<=(x'7357')), (t0.c0 IN ()))) IS TRUE)  as count FROM t1 CROSS JOIN t0 ON (((((v0.c2 IN ()))AND(TIME(t0.c0, v0.c3, v0.c2))))AND(((((((((v0.c3)OR(x'')))OR(t0.c0)))OR(NULL)))AND(v0.c2)))) CROSS JOIN v0 ON CHAR(((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) ORDER BY NULLIF((+ (v0.c4)), (((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((t1.c0)))) DESC);
SELECT * FROM t1 CROSS JOIN t0 ON (((((v0.c2 IN ()))AND(TIME(t0.c0, v0.c3, v0.c2))))AND(((((((((v0.c3)OR(x'')))OR(t0.c0)))OR(NULL)))AND(v0.c2)))) CROSS JOIN v0 ON CHAR(((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) WHERE (TIME(((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))OR(t1.c0)))AND(v0.c3)), ((v0.c4)<=(x'7357')), (t0.c0 IN ()))) ORDER BY NULLIF((+ (v0.c4)), (((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((TIME(((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))OR(t1.c0)))AND(v0.c3)), ((v0.c4)<=(x'7357')), (t0.c0 IN ()))) IS TRUE)  as count FROM t1 CROSS JOIN t0 ON (((((v0.c2 IN ()))AND(TIME(t0.c0, v0.c3, v0.c2))))AND(((((((((v0.c3)OR(x'')))OR(t0.c0)))OR(NULL)))AND(v0.c2)))) CROSS JOIN v0 ON CHAR(((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) ORDER BY NULLIF((+ (v0.c4)), (((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((t1.c0)))) DESC);
SELECT * FROM t1 CROSS JOIN t0 ON (((((v0.c2 IN ()))AND(TIME(t0.c0, v0.c3, v0.c2))))AND(((((((((v0.c3)OR(x'')))OR(t0.c0)))OR(NULL)))AND(v0.c2)))) CROSS JOIN v0 ON CHAR(((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) WHERE (TIME(((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))OR(t1.c0)))AND(v0.c3)), ((v0.c4)<=(x'7357')), (t0.c0 IN ()))) ORDER BY NULLIF((+ (v0.c4)), (((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((t1.c0)))) DESC;
SELECT ALL * FROM t1, t0, rt1 INDEXED BY i81 WHERE (((((((rt1.c1)>>(rt1.c3)))OR(((0.4538740971345887) BETWEEN (rt1.c3) AND (rt1.c1)))))AND(((rt1.c3)<(x''))))) ORDER BY 0.8310920238404219 DESC, (((rt1.c1 IN ()))IS(((rt1.c2)GLOB(rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)>>(rt1.c3)))OR(((0.4538740971345887) BETWEEN (rt1.c3) AND (rt1.c1)))))AND(((rt1.c3)<(x''))))) IS TRUE)  as count FROM t1, t0, rt1 INDEXED BY i81 ORDER BY 0.8310920238404219 DESC, (((rt1.c1 IN ()))IS(((rt1.c2)GLOB(rt1.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM t1, t0, rt1 INDEXED BY i81 WHERE (((((((rt1.c1)>>(rt1.c3)))OR(((0.4538740971345887) BETWEEN (rt1.c3) AND (rt1.c1)))))AND(((rt1.c3)<(x''))))) ORDER BY 0.8310920238404219 DESC, (((rt1.c1 IN ()))IS(((rt1.c2)GLOB(rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)>>(rt1.c3)))OR(((0.4538740971345887) BETWEEN (rt1.c3) AND (rt1.c1)))))AND(((rt1.c3)<(x''))))) IS TRUE)  as count FROM t1, t0, rt1 INDEXED BY i81 ORDER BY 0.8310920238404219 DESC, (((rt1.c1 IN ()))IS(((rt1.c2)GLOB(rt1.c1)))) DESC  NULLS LAST);
SELECT * FROM t0, rt0, v0, t1, rt1 WHERE (CAST(t1.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM t0, rt0, v0, t1, rt1);
SELECT * FROM t0, rt0, v0, t1, rt1 WHERE (CAST(t1.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM t0, rt0, v0, t1, rt1);
SELECT * FROM t0, rt0, v0, t1, rt1 WHERE (CAST(t1.c0 COLLATE BINARY AS REAL));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON ((rt1.c3 IN (1.233114729E9)) IN (t0.c0 COLLATE RTRIM)) WHERE ((~ (((rt1.c3) NOT NULL)))) ORDER BY CAST(((t0.c0)|(rt1.c1)) AS TEXT), CASE WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c3)GLOB(rt1.c0)) WHEN CAST(rt1.c2 AS BLOB) THEN (((rt1.c1))<>((rt1.c1))) WHEN (t0.c0 IN (rt1.c1)) THEN CAST(rt1.c0 AS NUMERIC) ELSE 0.9578261606466885 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c3) NOT NULL)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((rt1.c3 IN (1.233114729E9)) IN (t0.c0 COLLATE RTRIM)) ORDER BY CAST(((t0.c0)|(rt1.c1)) AS TEXT), CASE WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c3)GLOB(rt1.c0)) WHEN CAST(rt1.c2 AS BLOB) THEN (((rt1.c1))<>((rt1.c1))) WHEN (t0.c0 IN (rt1.c1)) THEN CAST(rt1.c0 AS NUMERIC) ELSE 0.9578261606466885 END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON ((rt1.c3 IN (1.233114729E9)) IN (t0.c0 COLLATE RTRIM)) WHERE ((~ (((rt1.c3) NOT NULL)))) ORDER BY CAST(((t0.c0)|(rt1.c1)) AS TEXT), CASE WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c3)GLOB(rt1.c0)) WHEN CAST(rt1.c2 AS BLOB) THEN (((rt1.c1))<>((rt1.c1))) WHEN (t0.c0 IN (rt1.c1)) THEN CAST(rt1.c0 AS NUMERIC) ELSE 0.9578261606466885 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c3) NOT NULL)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((rt1.c3 IN (1.233114729E9)) IN (t0.c0 COLLATE RTRIM)) ORDER BY CAST(((t0.c0)|(rt1.c1)) AS TEXT), CASE WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c3)GLOB(rt1.c0)) WHEN CAST(rt1.c2 AS BLOB) THEN (((rt1.c1))<>((rt1.c1))) WHEN (t0.c0 IN (rt1.c1)) THEN CAST(rt1.c0 AS NUMERIC) ELSE 0.9578261606466885 END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON ((rt1.c3 IN (1.233114729E9)) IN (t0.c0 COLLATE RTRIM)) WHERE ((~ (((rt1.c3) NOT NULL)))) ORDER BY CAST(((t0.c0)|(rt1.c1)) AS TEXT), CASE WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c3)GLOB(rt1.c0)) WHEN CAST(rt1.c2 AS BLOB) THEN (((rt1.c1))<>((rt1.c1))) WHEN (t0.c0 IN (rt1.c1)) THEN CAST(rt1.c0 AS NUMERIC) ELSE 0.9578261606466885 END DESC  NULLS FIRST;
SELECT ALL * FROM rt1, t0, v0, rt0 INNER JOIN t1 ON TOTAL_CHANGES() WHERE (0.857857960835091 COLLATE BINARY) ORDER BY ((NULL) BETWEEN (CAST(t0.c0 AS TEXT)) AND (NULL)) ASC, (((v0.c3)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (((+ (v0.c0))))) DESC, ((t0.c0) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.857857960835091 COLLATE BINARY) IS TRUE)  as count FROM rt1, t0, v0, rt0 INNER JOIN t1 ON TOTAL_CHANGES() ORDER BY ((NULL) BETWEEN (CAST(t0.c0 AS TEXT)) AND (NULL)) ASC, (((v0.c3)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (((+ (v0.c0))))) DESC, ((t0.c0) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, t0, v0, rt0 INNER JOIN t1 ON TOTAL_CHANGES() WHERE (0.857857960835091 COLLATE BINARY) ORDER BY ((NULL) BETWEEN (CAST(t0.c0 AS TEXT)) AND (NULL)) ASC, (((v0.c3)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (((+ (v0.c0))))) DESC, ((t0.c0) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.857857960835091 COLLATE BINARY) IS TRUE)  as count FROM rt1, t0, v0, rt0 INNER JOIN t1 ON TOTAL_CHANGES() ORDER BY ((NULL) BETWEEN (CAST(t0.c0 AS TEXT)) AND (NULL)) ASC, (((v0.c3)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (((+ (v0.c0))))) DESC, ((t0.c0) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, t0, v0, rt0 INNER JOIN t1 ON TOTAL_CHANGES() WHERE (0.857857960835091 COLLATE BINARY) ORDER BY ((NULL) BETWEEN (CAST(t0.c0 AS TEXT)) AND (NULL)) ASC, (((v0.c3)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (((+ (v0.c0))))) DESC, ((t0.c0) NOTNULL) DESC  NULLS FIRST;
SELECT * FROM t1, rt1, t0, rt0, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t1, rt1, t0, rt0, v0);
SELECT * FROM t1, rt1, t0, rt0, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t1, rt1, t0, rt0, v0);
SELECT * FROM t1, rt1, t0, rt0, v0 WHERE (v0.c1);
SELECT ALL * FROM t0, v0 WHERE ('0i䡥');
SELECT SUM(count) FROM (SELECT (('0i䡥') IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ('0i䡥');
SELECT SUM(count) FROM (SELECT (('0i䡥') IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ('0i䡥');
SELECT ALL * FROM rt0, t0, v0 FULL OUTER JOIN rt1 ON v0.c0 INNER JOIN t1 ON ((JULIANDAY(rt0.c0, rt0.c0, v0.c2)) NOTNULL) WHERE (NULL) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, v0 FULL OUTER JOIN rt1 ON v0.c0 INNER JOIN t1 ON ((JULIANDAY(rt0.c0, rt0.c0, v0.c2)) NOTNULL) ORDER BY '');
SELECT ALL * FROM rt0, t0, v0 FULL OUTER JOIN rt1 ON v0.c0 INNER JOIN t1 ON ((JULIANDAY(rt0.c0, rt0.c0, v0.c2)) NOTNULL) WHERE (NULL) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, v0 FULL OUTER JOIN rt1 ON v0.c0 INNER JOIN t1 ON ((JULIANDAY(rt0.c0, rt0.c0, v0.c2)) NOTNULL) ORDER BY '');
SELECT ALL * FROM rt0, t0, v0 FULL OUTER JOIN rt1 ON v0.c0 INNER JOIN t1 ON ((JULIANDAY(rt0.c0, rt0.c0, v0.c2)) NOTNULL) WHERE (NULL) ORDER BY '';
SELECT * FROM t0, t1, rt0, v0 WHERE (((((t1.c0)<=(rt0.c2))) BETWEEN (((t1.c0) IS FALSE)) AND ((~ ('b')))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)<=(rt0.c2))) BETWEEN (((t1.c0) IS FALSE)) AND ((~ ('b'))))) IS TRUE)  as count FROM t0, t1, rt0, v0);
SELECT * FROM t0, t1, rt0, v0 WHERE (((((t1.c0)<=(rt0.c2))) BETWEEN (((t1.c0) IS FALSE)) AND ((~ ('b')))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)<=(rt0.c2))) BETWEEN (((t1.c0) IS FALSE)) AND ((~ ('b'))))) IS TRUE)  as count FROM t0, t1, rt0, v0);
SELECT * FROM t0, t1, rt0, v0 WHERE (((((t1.c0)<=(rt0.c2))) BETWEEN (((t1.c0) IS FALSE)) AND ((~ ('b')))));
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((rt1.c2 COLLATE BINARY)>>(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE BINARY)>>(rt1.c0))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((rt1.c2 COLLATE BINARY)>>(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE BINARY)>>(rt1.c0))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((rt1.c2 COLLATE BINARY)>>(rt1.c0)));
SELECT ALL * FROM v0, rt0, t0, t1, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM v0, rt0, t0, t1, rt1);
SELECT ALL * FROM v0, rt0, t0, t1, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM v0, rt0, t0, t1, rt1);
SELECT ALL * FROM v0, rt0, t0, t1, rt1 WHERE (rt1.c0);
SELECT COUNT(*) FROM t0, v0, rt1, rt0, t1 WHERE (CASE COALESCE(0.11427535935191069, v0.c4)  WHEN ((((((((rt0.c1)OR(rt1.c1)))OR(rt0.c3)))OR(v0.c0)))AND(rt1.c3)) THEN ((t0.c0)+(t0.c0)) WHEN CAST(0.9386782712437668 AS NUMERIC) THEN TIME(rt1.c2, rt1.c2, '') WHEN ((rt0.c2)GLOB(rt0.c3)) THEN ((t0.c0) NOT BETWEEN ('') AND (v0.c2)) ELSE (v0.c1 IN (7.67111366E8)) END) ORDER BY ((((rt1.c2)OR(rt1.c0)))AND(t1.c0)) COLLATE RTRIM DESC, ((((((0.9578261606466885)) NOT BETWEEN ((v0.c1)) AND (('bwu9ᑹoOJ')))))>((((rt0.c3)+(0x184404)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(0.11427535935191069, v0.c4)  WHEN ((((((((rt0.c1)OR(rt1.c1)))OR(rt0.c3)))OR(v0.c0)))AND(rt1.c3)) THEN ((t0.c0)+(t0.c0)) WHEN CAST(0.9386782712437668 AS NUMERIC) THEN TIME(rt1.c2, rt1.c2, '') WHEN ((rt0.c2)GLOB(rt0.c3)) THEN ((t0.c0) NOT BETWEEN ('') AND (v0.c2)) ELSE (v0.c1 IN (7.67111366E8)) END) IS TRUE)  as count FROM t0, v0, rt1, rt0, t1 ORDER BY ((((rt1.c2)OR(rt1.c0)))AND(t1.c0)) COLLATE RTRIM DESC, ((((((0.9578261606466885)) NOT BETWEEN ((v0.c1)) AND (('bwu9ᑹoOJ')))))>((((rt0.c3)+(0X184404))))));
SELECT COUNT(*) FROM t0, v0, rt1, rt0, t1 WHERE (CASE COALESCE(0.11427535935191069, v0.c4)  WHEN ((((((((rt0.c1)OR(rt1.c1)))OR(rt0.c3)))OR(v0.c0)))AND(rt1.c3)) THEN ((t0.c0)+(t0.c0)) WHEN CAST(0.9386782712437668 AS NUMERIC) THEN TIME(rt1.c2, rt1.c2, '') WHEN ((rt0.c2)GLOB(rt0.c3)) THEN ((t0.c0) NOT BETWEEN ('') AND (v0.c2)) ELSE (v0.c1 IN (7.67111366E8)) END) ORDER BY ((((rt1.c2)OR(rt1.c0)))AND(t1.c0)) COLLATE RTRIM DESC, ((((((0.9578261606466885)) NOT BETWEEN ((v0.c1)) AND (('bwu9ᑹoOJ')))))>((((rt0.c3)+(0x184404)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(0.11427535935191069, v0.c4)  WHEN ((((((((rt0.c1)OR(rt1.c1)))OR(rt0.c3)))OR(v0.c0)))AND(rt1.c3)) THEN ((t0.c0)+(t0.c0)) WHEN CAST(0.9386782712437668 AS NUMERIC) THEN TIME(rt1.c2, rt1.c2, '') WHEN ((rt0.c2)GLOB(rt0.c3)) THEN ((t0.c0) NOT BETWEEN ('') AND (v0.c2)) ELSE (v0.c1 IN (7.67111366E8)) END) IS TRUE)  as count FROM t0, v0, rt1, rt0, t1 ORDER BY ((((rt1.c2)OR(rt1.c0)))AND(t1.c0)) COLLATE RTRIM DESC, ((((((0.9578261606466885)) NOT BETWEEN ((v0.c1)) AND (('bwu9ᑹoOJ')))))>((((rt0.c3)+(0X184404))))));
SELECT COUNT(*) FROM t0, v0, rt1, rt0, t1 WHERE (CASE COALESCE(0.11427535935191069, v0.c4)  WHEN ((((((((rt0.c1)OR(rt1.c1)))OR(rt0.c3)))OR(v0.c0)))AND(rt1.c3)) THEN ((t0.c0)+(t0.c0)) WHEN CAST(0.9386782712437668 AS NUMERIC) THEN TIME(rt1.c2, rt1.c2, '') WHEN ((rt0.c2)GLOB(rt0.c3)) THEN ((t0.c0) NOT BETWEEN ('') AND (v0.c2)) ELSE (v0.c1 IN (7.67111366E8)) END) ORDER BY ((((rt1.c2)OR(rt1.c0)))AND(t1.c0)) COLLATE RTRIM DESC, ((((((0.9578261606466885)) NOT BETWEEN ((v0.c1)) AND (('bwu9ᑹoOJ')))))>((((rt0.c3)+(0x184404)))));
SELECT ALL COUNT(*) FROM t0, v0, rt0, t1 WHERE ((((((((((((rt0.c0))<>((t1.c0))))OR(((((rt0.c3)AND(v0.c3)))AND(rt0.c1)))))AND(rt0.c1 COLLATE RTRIM)))OR(STRFTIME(rt0.c3, v0.c4, t0.c0))))OR((NOT (rt0.c3))))) ORDER BY (((v0.c0)) BETWEEN (((t0.c0 IN ()))) AND ((CASE WHEN v0.c2 THEN t0.c0 WHEN t1.c0 THEN v0.c1 WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0))<>((t1.c0))))OR(((((rt0.c3)AND(v0.c3)))AND(rt0.c1)))))AND(rt0.c1 COLLATE RTRIM)))OR(STRFTIME(rt0.c3, v0.c4, t0.c0))))OR((NOT (rt0.c3))))) IS TRUE)  as count FROM t0, v0, rt0, t1 ORDER BY (((v0.c0)) BETWEEN (((t0.c0 IN ()))) AND ((CASE WHEN v0.c2 THEN t0.c0 WHEN t1.c0 THEN v0.c1 WHEN rt0.c0 THEN rt0.c1 END))));
SELECT ALL COUNT(*) FROM t0, v0, rt0, t1 WHERE ((((((((((((rt0.c0))<>((t1.c0))))OR(((((rt0.c3)AND(v0.c3)))AND(rt0.c1)))))AND(rt0.c1 COLLATE RTRIM)))OR(STRFTIME(rt0.c3, v0.c4, t0.c0))))OR((NOT (rt0.c3))))) ORDER BY (((v0.c0)) BETWEEN (((t0.c0 IN ()))) AND ((CASE WHEN v0.c2 THEN t0.c0 WHEN t1.c0 THEN v0.c1 WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0))<>((t1.c0))))OR(((((rt0.c3)AND(v0.c3)))AND(rt0.c1)))))AND(rt0.c1 COLLATE RTRIM)))OR(STRFTIME(rt0.c3, v0.c4, t0.c0))))OR((NOT (rt0.c3))))) IS TRUE)  as count FROM t0, v0, rt0, t1 ORDER BY (((v0.c0)) BETWEEN (((t0.c0 IN ()))) AND ((CASE WHEN v0.c2 THEN t0.c0 WHEN t1.c0 THEN v0.c1 WHEN rt0.c0 THEN rt0.c1 END))));
SELECT ALL COUNT(*) FROM t0, v0, rt0, t1 WHERE ((((((((((((rt0.c0))<>((t1.c0))))OR(((((rt0.c3)AND(v0.c3)))AND(rt0.c1)))))AND(rt0.c1 COLLATE RTRIM)))OR(STRFTIME(rt0.c3, v0.c4, t0.c0))))OR((NOT (rt0.c3))))) ORDER BY (((v0.c0)) BETWEEN (((t0.c0 IN ()))) AND ((CASE WHEN v0.c2 THEN t0.c0 WHEN t1.c0 THEN v0.c1 WHEN rt0.c0 THEN rt0.c1 END)));
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS REAL))AND(CAST(rt0.c3 AS INTEGER)))) ORDER BY ((((((((((rt0.c3)OR(rt0.c3)))OR('')))OR(rt0.c3)))AND(rt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL))AND(CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c3)OR(rt0.c3)))OR('')))OR(rt0.c3)))AND(rt0.c1))) NOT NULL));
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS REAL))AND(CAST(rt0.c3 AS INTEGER)))) ORDER BY ((((((((((rt0.c3)OR(rt0.c3)))OR('')))OR(rt0.c3)))AND(rt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL))AND(CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c3)OR(rt0.c3)))OR('')))OR(rt0.c3)))AND(rt0.c1))) NOT NULL));
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS REAL))AND(CAST(rt0.c3 AS INTEGER)))) ORDER BY ((((((((((rt0.c3)OR(rt0.c3)))OR('')))OR(rt0.c3)))AND(rt0.c1))) NOT NULL);
SELECT * FROM t1 LEFT OUTER JOIN rt1 ON ((((((((CAST(t0.c0 AS NUMERIC))AND('>v&')))OR(rt1.c0)))AND(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))AND(((t1.c0)-(rt1.c2)))) FULL OUTER JOIN t0 ON (((((('')) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))), CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END, t1.c0, CAST(rt1.c0 AS NUMERIC), CAST(rt1.c0 AS TEXT)))>((((rt1.c1)&(rt1.c2)), ((rt1.c1)||(t0.c0)), ((rt1.c0) IS TRUE), x'', ((rt1.c3)>=(rt1.c3))))) WHERE (((((rt1.c0)GLOB(rt1.c0)))<(CAST(rt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)GLOB(rt1.c0)))<(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt1 ON ((((((((CAST(t0.c0 AS NUMERIC))AND('>v&')))OR(rt1.c0)))AND(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))AND(((t1.c0)-(rt1.c2)))) FULL OUTER JOIN t0 ON (((((('')) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))), CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END, t1.c0, CAST(rt1.c0 AS NUMERIC), CAST(rt1.c0 AS TEXT)))>((((rt1.c1)&(rt1.c2)), ((rt1.c1)||(t0.c0)), ((rt1.c0) IS TRUE), x'', ((rt1.c3)>=(rt1.c3))))));
SELECT * FROM t1 LEFT OUTER JOIN rt1 ON ((((((((CAST(t0.c0 AS NUMERIC))AND('>v&')))OR(rt1.c0)))AND(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))AND(((t1.c0)-(rt1.c2)))) FULL OUTER JOIN t0 ON (((((('')) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))), CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END, t1.c0, CAST(rt1.c0 AS NUMERIC), CAST(rt1.c0 AS TEXT)))>((((rt1.c1)&(rt1.c2)), ((rt1.c1)||(t0.c0)), ((rt1.c0) IS TRUE), x'', ((rt1.c3)>=(rt1.c3))))) WHERE (((((rt1.c0)GLOB(rt1.c0)))<(CAST(rt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)GLOB(rt1.c0)))<(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt1 ON ((((((((CAST(t0.c0 AS NUMERIC))AND('>v&')))OR(rt1.c0)))AND(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))AND(((t1.c0)-(rt1.c2)))) FULL OUTER JOIN t0 ON (((((('')) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))), CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END, t1.c0, CAST(rt1.c0 AS NUMERIC), CAST(rt1.c0 AS TEXT)))>((((rt1.c1)&(rt1.c2)), ((rt1.c1)||(t0.c0)), ((rt1.c0) IS TRUE), x'', ((rt1.c3)>=(rt1.c3))))));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)/(((t1.c0) ISNULL)))) ORDER BY ((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(((t1.c0) NOTNULL))))AND(((t1.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c0)/(((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(((t1.c0) NOTNULL))))AND(((t1.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)/(((t1.c0) ISNULL)))) ORDER BY ((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(((t1.c0) NOTNULL))))AND(((t1.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c0)/(((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(((t1.c0) NOTNULL))))AND(((t1.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)/(((t1.c0) ISNULL)))) ORDER BY ((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(((t1.c0) NOTNULL))))AND(((t1.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT * FROM rt0, t0 WHERE ((((NOT (t0.c0)))>>((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0)))>>((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((NOT (t0.c0)))>>((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0)))>>((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((NOT (t0.c0)))>>((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t1, v0, rt0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (TYPEOF(DISTINCT ((v0.c2)=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((v0.c2)==(rt0.c0)))) IS TRUE)  as count FROM t1, v0, rt0 FULL OUTER JOIN rt1 ON rt1.c0);
SELECT ALL COUNT(*) FROM t1, v0, rt0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (TYPEOF(DISTINCT ((v0.c2)=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((v0.c2)==(rt0.c0)))) IS TRUE)  as count FROM t1, v0, rt0 FULL OUTER JOIN rt1 ON rt1.c0);
SELECT ALL COUNT(*) FROM t1, v0, rt0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (TYPEOF(DISTINCT ((v0.c2)=(rt0.c0))));
SELECT * FROM t1 WHERE (json_insert(0xffffffffb575c476 COLLATE RTRIM, ((t1.c0)IS(t1.c0)), (t1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(0xffffffffb575c476 COLLATE RTRIM, ((t1.c0)IS(t1.c0)), (t1.c0 IN ()))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (json_insert(0xffffffffb575c476 COLLATE RTRIM, ((t1.c0)IS(t1.c0)), (t1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(0xffffffffb575c476 COLLATE RTRIM, ((t1.c0)IS(t1.c0)), (t1.c0 IN ()))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (json_insert(0xffffffffb575c476 COLLATE RTRIM, ((t1.c0)IS(t1.c0)), (t1.c0 IN ())));
SELECT COUNT(*) FROM rt0, rt1, t0, t1, v0 WHERE (CAST(v0.c4 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c4 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt0, rt1, t0, t1, v0);
SELECT COUNT(*) FROM rt0, rt1, t0, t1, v0 WHERE (CAST(v0.c4 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c4 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt0, rt1, t0, t1, v0);
SELECT COUNT(*) FROM rt0, rt1, t0, t1, v0 WHERE (CAST(v0.c4 COLLATE BINARY AS BLOB));
SELECT ALL * FROM v0, rt0, rt1 WHERE (((((v0.c0) NOT NULL))==(((v0.c4) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) ORDER BY (NULL COLLATE NOCASE IN ()), (- ((((v0.c1))!=((v0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL))=(((v0.c4) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (NULL COLLATE NOCASE IN ()), (- ((((v0.c1))<>((v0.c1)))))  NULLS LAST);
SELECT ALL * FROM v0, rt0, rt1 WHERE (((((v0.c0) NOT NULL))==(((v0.c4) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) ORDER BY (NULL COLLATE NOCASE IN ()), (- ((((v0.c1))!=((v0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL))=(((v0.c4) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (NULL COLLATE NOCASE IN ()), (- ((((v0.c1))<>((v0.c1)))))  NULLS LAST);
SELECT ALL * FROM v0, rt0, rt1 WHERE (((((v0.c0) NOT NULL))==(((v0.c4) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) ORDER BY (NULL COLLATE NOCASE IN ()), (- ((((v0.c1))!=((v0.c1)))))  NULLS LAST;
SELECT * FROM v0, t0 WHERE (ABS(CASE WHEN t0.c0 THEN v0.c3 END)) ORDER BY (((v0.c1, v0.c4, v0.c4)) NOT BETWEEN ((v0.c1 COLLATE BINARY, v0.c0, v0.c4 COLLATE NOCASE)) AND ((((v0.c1) IS TRUE), ((v0.c1)*(0xffffffffccd97aab)), v0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN t0.c0 THEN v0.c3 END)) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c1, v0.c4, v0.c4)) NOT BETWEEN ((v0.c1 COLLATE BINARY, v0.c0, v0.c4 COLLATE NOCASE)) AND ((((v0.c1) IS TRUE), ((v0.c1)*(0Xffffffffccd97aab)), v0.c2))) DESC  NULLS LAST);
SELECT * FROM v0, t0 WHERE (ABS(CASE WHEN t0.c0 THEN v0.c3 END)) ORDER BY (((v0.c1, v0.c4, v0.c4)) NOT BETWEEN ((v0.c1 COLLATE BINARY, v0.c0, v0.c4 COLLATE NOCASE)) AND ((((v0.c1) IS TRUE), ((v0.c1)*(0xffffffffccd97aab)), v0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN t0.c0 THEN v0.c3 END)) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c1, v0.c4, v0.c4)) NOT BETWEEN ((v0.c1 COLLATE BINARY, v0.c0, v0.c4 COLLATE NOCASE)) AND ((((v0.c1) IS TRUE), ((v0.c1)*(0Xffffffffccd97aab)), v0.c2))) DESC  NULLS LAST);
SELECT * FROM v0, t0 WHERE (ABS(CASE WHEN t0.c0 THEN v0.c3 END)) ORDER BY (((v0.c1, v0.c4, v0.c4)) NOT BETWEEN ((v0.c1 COLLATE BINARY, v0.c0, v0.c4 COLLATE NOCASE)) AND ((((v0.c1) IS TRUE), ((v0.c1)*(0xffffffffccd97aab)), v0.c2))) DESC  NULLS LAST;
SELECT ALL * FROM t1, rt1, v0 WHERE (((rt1.c1 COLLATE BINARY) NOT BETWEEN ((rt1.c3 IN ())) AND ('YSAgU6E'))) ORDER BY CASE WHEN v0.c2 THEN ((rt1.c0)%(rt1.c2)) ELSE CASE 0X7e64a92e  WHEN rt1.c3 THEN rt1.c2 WHEN v0.c4 THEN 0.2988826679847323 WHEN v0.c0 THEN rt1.c0 WHEN v0.c0 THEN v0.c3 WHEN rt1.c0 THEN rt1.c2 ELSE v0.c1 END END;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE BINARY) NOT BETWEEN ((rt1.c3 IN ())) AND ('YSAgU6E'))) IS TRUE)  as count FROM t1, rt1, v0 ORDER BY CASE WHEN v0.c2 THEN ((rt1.c0)%(rt1.c2)) ELSE CASE 0X7e64a92e  WHEN rt1.c3 THEN rt1.c2 WHEN v0.c4 THEN 0.2988826679847323 WHEN v0.c0 THEN rt1.c0 WHEN v0.c0 THEN v0.c3 WHEN rt1.c0 THEN rt1.c2 ELSE v0.c1 END END);
SELECT ALL * FROM t1, rt1, v0 WHERE (((rt1.c1 COLLATE BINARY) NOT BETWEEN ((rt1.c3 IN ())) AND ('YSAgU6E'))) ORDER BY CASE WHEN v0.c2 THEN ((rt1.c0)%(rt1.c2)) ELSE CASE 0X7e64a92e  WHEN rt1.c3 THEN rt1.c2 WHEN v0.c4 THEN 0.2988826679847323 WHEN v0.c0 THEN rt1.c0 WHEN v0.c0 THEN v0.c3 WHEN rt1.c0 THEN rt1.c2 ELSE v0.c1 END END;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE BINARY) NOT BETWEEN ((rt1.c3 IN ())) AND ('YSAgU6E'))) IS TRUE)  as count FROM t1, rt1, v0 ORDER BY CASE WHEN v0.c2 THEN ((rt1.c0)%(rt1.c2)) ELSE CASE 0X7e64a92e  WHEN rt1.c3 THEN rt1.c2 WHEN v0.c4 THEN 0.2988826679847323 WHEN v0.c0 THEN rt1.c0 WHEN v0.c0 THEN v0.c3 WHEN rt1.c0 THEN rt1.c2 ELSE v0.c1 END END);
SELECT ALL * FROM t1, rt1, v0 WHERE (((rt1.c1 COLLATE BINARY) NOT BETWEEN ((rt1.c3 IN ())) AND ('YSAgU6E'))) ORDER BY CASE WHEN v0.c2 THEN ((rt1.c0)%(rt1.c2)) ELSE CASE 0X7e64a92e  WHEN rt1.c3 THEN rt1.c2 WHEN v0.c4 THEN 0.2988826679847323 WHEN v0.c0 THEN rt1.c0 WHEN v0.c0 THEN v0.c3 WHEN rt1.c0 THEN rt1.c2 ELSE v0.c1 END END;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) ISNULL)) ORDER BY IFNULL(DISTINCT ((rt0.c2) NOT NULL), ((rt0.c3)<(rt0.c3))), (- (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST, (('864812968') BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) AND ((rt0.c2 IN (rt0.c3, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(DISTINCT ((rt0.c2) NOT NULL), ((rt0.c3)<(rt0.c3))), (- (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST, (('864812968') BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) AND ((rt0.c2 IN (rt0.c3, rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) ISNULL)) ORDER BY IFNULL(DISTINCT ((rt0.c2) NOT NULL), ((rt0.c3)<(rt0.c3))), (- (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST, (('864812968') BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) AND ((rt0.c2 IN (rt0.c3, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(DISTINCT ((rt0.c2) NOT NULL), ((rt0.c3)<(rt0.c3))), (- (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST, (('864812968') BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) AND ((rt0.c2 IN (rt0.c3, rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) ISNULL)) ORDER BY IFNULL(DISTINCT ((rt0.c2) NOT NULL), ((rt0.c3)<(rt0.c3))), (- (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST, (('864812968') BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) AND ((rt0.c2 IN (rt0.c3, rt0.c2))));
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON ((rt1.c3) BETWEEN ((- (rt1.c2))) AND ((('ll~o4')>=(0.16189213534174862)))) RIGHT OUTER JOIN t1 ON (((+ (t1.c0))) ISNULL) WHERE (json_insert(v0.c0, rt1.c2, rt1.c2, rt1.c3, v0.c4) COLLATE BINARY) ORDER BY rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(v0.c0, rt1.c2, rt1.c2, rt1.c3, v0.c4) COLLATE BINARY) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON ((rt1.c3) BETWEEN ((- (rt1.c2))) AND ((('ll~o4')>=(0.16189213534174862)))) RIGHT OUTER JOIN t1 ON (((+ (t1.c0))) ISNULL) ORDER BY rt1.c2 DESC);
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON ((rt1.c3) BETWEEN ((- (rt1.c2))) AND ((('ll~o4')>=(0.16189213534174862)))) RIGHT OUTER JOIN t1 ON (((+ (t1.c0))) ISNULL) WHERE (json_insert(v0.c0, rt1.c2, rt1.c2, rt1.c3, v0.c4) COLLATE BINARY) ORDER BY rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(v0.c0, rt1.c2, rt1.c2, rt1.c3, v0.c4) COLLATE BINARY) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON ((rt1.c3) BETWEEN ((- (rt1.c2))) AND ((('ll~o4')>=(0.16189213534174862)))) RIGHT OUTER JOIN t1 ON (((+ (t1.c0))) ISNULL) ORDER BY rt1.c2 DESC);
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON ((rt1.c3) BETWEEN ((- (rt1.c2))) AND ((('ll~o4')>=(0.16189213534174862)))) RIGHT OUTER JOIN t1 ON (((+ (t1.c0))) ISNULL) WHERE (json_insert(v0.c0, rt1.c2, rt1.c2, rt1.c3, v0.c4) COLLATE BINARY) ORDER BY rt1.c2 DESC;
SELECT ALL COUNT(*) FROM t0, v0, rt0 NATURAL JOIN t1 WHERE (ROUND((v0.c2 IN ()), CASE v0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN t1.c0 WHEN t0.c0 THEN v0.c1 WHEN t0.c0 THEN v0.c4 WHEN '1233114729' THEN v0.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((ROUND((v0.c2 IN ()), CASE v0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN t1.c0 WHEN t0.c0 THEN v0.c1 WHEN t0.c0 THEN v0.c4 WHEN '1233114729' THEN v0.c4 END)) IS TRUE)  as count FROM t0, v0, rt0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM t0, v0, rt0 NATURAL JOIN t1 WHERE (ROUND((v0.c2 IN ()), CASE v0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN t1.c0 WHEN t0.c0 THEN v0.c1 WHEN t0.c0 THEN v0.c4 WHEN '1233114729' THEN v0.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((ROUND((v0.c2 IN ()), CASE v0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN t1.c0 WHEN t0.c0 THEN v0.c1 WHEN t0.c0 THEN v0.c4 WHEN '1233114729' THEN v0.c4 END)) IS TRUE)  as count FROM t0, v0, rt0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM t0, v0, rt0 NATURAL JOIN t1 WHERE (ROUND((v0.c2 IN ()), CASE v0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN t1.c0 WHEN t0.c0 THEN v0.c1 WHEN t0.c0 THEN v0.c4 WHEN '1233114729' THEN v0.c4 END));
SELECT * FROM t1, v0 WHERE ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM t1, v0);
SELECT * FROM t1, v0 WHERE ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM t1, v0);
SELECT * FROM t1, v0 WHERE ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 COLLATE NOCASE AS REAL));
SELECT COUNT(*) FROM t1, rt0, t0 WHERE (((((CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 END)OR((~ (rt0.c1)))))OR(((rt0.c2)>(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 END)OR((~ (rt0.c1)))))OR(((rt0.c2)>(NULL))))) IS TRUE)  as count FROM t1, rt0, t0);
SELECT COUNT(*) FROM t1, rt0, t0 WHERE (((((CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 END)OR((~ (rt0.c1)))))OR(((rt0.c2)>(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 END)OR((~ (rt0.c1)))))OR(((rt0.c2)>(NULL))))) IS TRUE)  as count FROM t1, rt0, t0);
SELECT COUNT(*) FROM t1, rt0, t0 WHERE (((((CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 END)OR((~ (rt0.c1)))))OR(((rt0.c2)>(NULL)))));
SELECT ALL * FROM v0 WHERE ((~ (((v0.c4) ISNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c4) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (((v0.c4) ISNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c4) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (((v0.c4) ISNULL))));
SELECT ALL COUNT(*) FROM t0, t1, rt1, v0, rt0 WHERE ((((((0.9843621152898817)>(t1.c0)), RTRIM(rt0.c3), CASE rt0.c3  WHEN v0.c0 THEN rt0.c0 END, ((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c3)), rt0.c3 COLLATE RTRIM))!=((((((((((rt1.c2)OR(x'')))AND(v0.c2)))OR(rt1.c3)))AND(rt1.c0)), x'' COLLATE NOCASE, INSTR(rt1.c3, rt0.c2), ((t0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)), (((v0.c1, t0.c0, v0.c4)) BETWEEN ((v0.c2, 0Xffffffffba50fba3, v0.c2)) AND ((rt0.c0, t1.c0, t0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((0.9843621152898817)>(t1.c0)), RTRIM(rt0.c3), CASE rt0.c3  WHEN v0.c0 THEN rt0.c0 END, ((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c3)), rt0.c3 COLLATE RTRIM))!=((((((((((rt1.c2)OR(x'')))AND(v0.c2)))OR(rt1.c3)))AND(rt1.c0)), x'' COLLATE NOCASE, INSTR(rt1.c3, rt0.c2), ((t0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)), (((v0.c1, t0.c0, v0.c4)) BETWEEN ((v0.c2, 0Xffffffffba50fba3, v0.c2)) AND ((rt0.c0, t1.c0, t0.c0))))))) IS TRUE)  as count FROM t0, t1, rt1, v0, rt0);
SELECT ALL COUNT(*) FROM t0, t1, rt1, v0, rt0 WHERE ((((((0.9843621152898817)>(t1.c0)), RTRIM(rt0.c3), CASE rt0.c3  WHEN v0.c0 THEN rt0.c0 END, ((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c3)), rt0.c3 COLLATE RTRIM))!=((((((((((rt1.c2)OR(x'')))AND(v0.c2)))OR(rt1.c3)))AND(rt1.c0)), x'' COLLATE NOCASE, INSTR(rt1.c3, rt0.c2), ((t0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)), (((v0.c1, t0.c0, v0.c4)) BETWEEN ((v0.c2, 0Xffffffffba50fba3, v0.c2)) AND ((rt0.c0, t1.c0, t0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((0.9843621152898817)>(t1.c0)), RTRIM(rt0.c3), CASE rt0.c3  WHEN v0.c0 THEN rt0.c0 END, ((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c3)), rt0.c3 COLLATE RTRIM))!=((((((((((rt1.c2)OR(x'')))AND(v0.c2)))OR(rt1.c3)))AND(rt1.c0)), x'' COLLATE NOCASE, INSTR(rt1.c3, rt0.c2), ((t0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)), (((v0.c1, t0.c0, v0.c4)) BETWEEN ((v0.c2, 0Xffffffffba50fba3, v0.c2)) AND ((rt0.c0, t1.c0, t0.c0))))))) IS TRUE)  as count FROM t0, t1, rt1, v0, rt0);
SELECT ALL COUNT(*) FROM t0, t1, rt1, v0, rt0 WHERE ((((((0.9843621152898817)>(t1.c0)), RTRIM(rt0.c3), CASE rt0.c3  WHEN v0.c0 THEN rt0.c0 END, ((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c3)), rt0.c3 COLLATE RTRIM))!=((((((((((rt1.c2)OR(x'')))AND(v0.c2)))OR(rt1.c3)))AND(rt1.c0)), x'' COLLATE NOCASE, INSTR(rt1.c3, rt0.c2), ((t0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)), (((v0.c1, t0.c0, v0.c4)) BETWEEN ((v0.c2, 0Xffffffffba50fba3, v0.c2)) AND ((rt0.c0, t1.c0, t0.c0)))))));
SELECT COUNT(*) FROM rt1, t0 WHERE ((((((rt1.c0)/(x'5816'))))==((TYPEOF(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)/(x'5816'))))==((TYPEOF(rt1.c1))))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((((rt1.c0)/(x'5816'))))==((TYPEOF(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)/(x'5816'))))==((TYPEOF(rt1.c1))))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((((rt1.c0)/(x'5816'))))==((TYPEOF(rt1.c1)))));
SELECT COUNT(*) FROM t1, rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))GLOB(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))GLOB(x''))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))GLOB(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))GLOB(x''))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))GLOB(x'')));
SELECT * FROM t0, rt1 WHERE ((+ (CASE WHEN rt1.c3 THEN rt1.c3 WHEN ',-c/j䡥' THEN rt1.c1 WHEN x'e6e6' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 END))) ORDER BY rt1.c0, (((~ (t0.c0))) NOT BETWEEN (((rt1.c2) IS FALSE)) AND (CAST(rt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN rt1.c3 THEN rt1.c3 WHEN ',-c/j䡥' THEN rt1.c1 WHEN x'e6e6' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 END))) IS TRUE)  as count FROM t0, rt1 ORDER BY rt1.c0, (((~ (t0.c0))) NOT BETWEEN (((rt1.c2) IS FALSE)) AND (CAST(rt1.c0 AS REAL))));
SELECT * FROM t0, rt1 WHERE ((+ (CASE WHEN rt1.c3 THEN rt1.c3 WHEN ',-c/j䡥' THEN rt1.c1 WHEN x'e6e6' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 END))) ORDER BY rt1.c0, (((~ (t0.c0))) NOT BETWEEN (((rt1.c2) IS FALSE)) AND (CAST(rt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN rt1.c3 THEN rt1.c3 WHEN ',-c/j䡥' THEN rt1.c1 WHEN x'e6e6' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 END))) IS TRUE)  as count FROM t0, rt1 ORDER BY rt1.c0, (((~ (t0.c0))) NOT BETWEEN (((rt1.c2) IS FALSE)) AND (CAST(rt1.c0 AS REAL))));
SELECT * FROM t0, rt1 WHERE ((+ (CASE WHEN rt1.c3 THEN rt1.c3 WHEN ',-c/j䡥' THEN rt1.c1 WHEN x'e6e6' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 END))) ORDER BY rt1.c0, (((~ (t0.c0))) NOT BETWEEN (((rt1.c2) IS FALSE)) AND (CAST(rt1.c0 AS REAL)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (TYPEOF(DISTINCT (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c1, rt0.c0)) AND ((rt0.c1, t0.c0, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c1, rt0.c0)) AND ((rt0.c1, t0.c0, rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (TYPEOF(DISTINCT (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c1, rt0.c0)) AND ((rt0.c1, t0.c0, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c1, rt0.c0)) AND ((rt0.c1, t0.c0, rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (TYPEOF(DISTINCT (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c1, rt0.c0)) AND ((rt0.c1, t0.c0, rt0.c2)))));
SELECT COUNT(*) FROM t0 WHERE ((- (load_extension(t0.c0)))) ORDER BY ((((t0.c0)AND(((((t0.c0)OR(x'')))OR(t0.c0)))))AND(((t0.c0) IS TRUE)))  NULLS FIRST, CAST(((t0.c0)GLOB(0.9450290365245181)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((- (load_extension(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(((((t0.c0)OR(x'')))OR(t0.c0)))))AND(((t0.c0) IS TRUE)))  NULLS FIRST, CAST(((t0.c0)GLOB(0.9450290365245181)) AS REAL));
SELECT COUNT(*) FROM t0 WHERE ((- (load_extension(t0.c0)))) ORDER BY ((((t0.c0)AND(((((t0.c0)OR(x'')))OR(t0.c0)))))AND(((t0.c0) IS TRUE)))  NULLS FIRST, CAST(((t0.c0)GLOB(0.9450290365245181)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((- (load_extension(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(((((t0.c0)OR(x'')))OR(t0.c0)))))AND(((t0.c0) IS TRUE)))  NULLS FIRST, CAST(((t0.c0)GLOB(0.9450290365245181)) AS REAL));
SELECT COUNT(*) FROM t0 WHERE ((- (load_extension(t0.c0)))) ORDER BY ((((t0.c0)AND(((((t0.c0)OR(x'')))OR(t0.c0)))))AND(((t0.c0) IS TRUE)))  NULLS FIRST, CAST(((t0.c0)GLOB(0.9450290365245181)) AS REAL);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ()));
SELECT ALL * FROM t1 LEFT OUTER JOIN v0 ON LOWER(((v0.c1)>=(v0.c0))) INNER JOIN rt1 ON ((rt0.c0)>((rt1.c0 IN (v0.c2)))) FULL OUTER JOIN rt0 ON ((((rt0.c1 IN ())))>=((CASE rt1.c0  WHEN rt0.c1 THEN v0.c2 END))) WHERE (((((rt1.c0)&(x'537c')))&((rt1.c0 IN (v0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)&(x'537c')))&((rt1.c0 IN (v0.c4))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON LOWER(((v0.c1)>=(v0.c0))) INNER JOIN rt1 ON ((rt0.c0)>((rt1.c0 IN (v0.c2)))) FULL OUTER JOIN rt0 ON ((((rt0.c1 IN ())))>=((CASE rt1.c0  WHEN rt0.c1 THEN v0.c2 END))));
SELECT ALL * FROM t1 LEFT OUTER JOIN v0 ON LOWER(((v0.c1)>=(v0.c0))) INNER JOIN rt1 ON ((rt0.c0)>((rt1.c0 IN (v0.c2)))) FULL OUTER JOIN rt0 ON ((((rt0.c1 IN ())))>=((CASE rt1.c0  WHEN rt0.c1 THEN v0.c2 END))) WHERE (((((rt1.c0)&(x'537c')))&((rt1.c0 IN (v0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)&(x'537c')))&((rt1.c0 IN (v0.c4))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON LOWER(((v0.c1)>=(v0.c0))) INNER JOIN rt1 ON ((rt0.c0)>((rt1.c0 IN (v0.c2)))) FULL OUTER JOIN rt0 ON ((((rt0.c1 IN ())))>=((CASE rt1.c0  WHEN rt0.c1 THEN v0.c2 END))));
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (CASE (((v0.c0, rt1.c1, rt0.c3)) BETWEEN ((v0.c0, rt1.c3, rt0.c2)) AND ((rt0.c1, rt0.c1, v0.c1)))  WHEN CAST(rt0.c0 AS BLOB) THEN (rt0.c3 IN ()) ELSE ((v0.c0) NOT BETWEEN (NULL) AND (rt1.c0)) END) ORDER BY rt0.c3 DESC, rt0.c0 ASC  NULLS FIRST, ((((rt1.c2) IS TRUE))%((v0.c3 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c0, rt1.c1, rt0.c3)) BETWEEN ((v0.c0, rt1.c3, rt0.c2)) AND ((rt0.c1, rt0.c1, v0.c1)))  WHEN CAST(rt0.c0 AS BLOB) THEN (rt0.c3 IN ()) ELSE ((v0.c0) NOT BETWEEN (NULL) AND (rt1.c0)) END) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY rt0.c3 DESC, rt0.c0 ASC  NULLS FIRST, ((((rt1.c2) IS TRUE))%((v0.c3 IN ()))) DESC);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (CASE (((v0.c0, rt1.c1, rt0.c3)) BETWEEN ((v0.c0, rt1.c3, rt0.c2)) AND ((rt0.c1, rt0.c1, v0.c1)))  WHEN CAST(rt0.c0 AS BLOB) THEN (rt0.c3 IN ()) ELSE ((v0.c0) NOT BETWEEN (NULL) AND (rt1.c0)) END) ORDER BY rt0.c3 DESC, rt0.c0 ASC  NULLS FIRST, ((((rt1.c2) IS TRUE))%((v0.c3 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c0, rt1.c1, rt0.c3)) BETWEEN ((v0.c0, rt1.c3, rt0.c2)) AND ((rt0.c1, rt0.c1, v0.c1)))  WHEN CAST(rt0.c0 AS BLOB) THEN (rt0.c3 IN ()) ELSE ((v0.c0) NOT BETWEEN (NULL) AND (rt1.c0)) END) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY rt0.c3 DESC, rt0.c0 ASC  NULLS FIRST, ((((rt1.c2) IS TRUE))%((v0.c3 IN ()))) DESC);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (CASE (((v0.c0, rt1.c1, rt0.c3)) BETWEEN ((v0.c0, rt1.c3, rt0.c2)) AND ((rt0.c1, rt0.c1, v0.c1)))  WHEN CAST(rt0.c0 AS BLOB) THEN (rt0.c3 IN ()) ELSE ((v0.c0) NOT BETWEEN (NULL) AND (rt1.c0)) END) ORDER BY rt0.c3 DESC, rt0.c0 ASC  NULLS FIRST, ((((rt1.c2) IS TRUE))%((v0.c3 IN ()))) DESC;
SELECT ALL * FROM t1 NOT INDEXED, v0, rt1, rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c3 WHEN NULL THEN rt0.c2 WHEN v0.c4 THEN t1.c0 WHEN rt0.c2 THEN v0.c3 WHEN rt0.c3 THEN v0.c4 WHEN v0.c4 THEN rt1.c3 ELSE rt1.c3 END)OR((((v0.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c3 WHEN NULL THEN rt0.c2 WHEN v0.c4 THEN t1.c0 WHEN rt0.c2 THEN v0.c3 WHEN rt0.c3 THEN v0.c4 WHEN v0.c4 THEN rt1.c3 ELSE rt1.c3 END)OR((((v0.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM t1, v0, rt1, rt0);
SELECT ALL * FROM t1 NOT INDEXED, v0, rt1, rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c3 WHEN NULL THEN rt0.c2 WHEN v0.c4 THEN t1.c0 WHEN rt0.c2 THEN v0.c3 WHEN rt0.c3 THEN v0.c4 WHEN v0.c4 THEN rt1.c3 ELSE rt1.c3 END)OR((((v0.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c3 WHEN NULL THEN rt0.c2 WHEN v0.c4 THEN t1.c0 WHEN rt0.c2 THEN v0.c3 WHEN rt0.c3 THEN v0.c4 WHEN v0.c4 THEN rt1.c3 ELSE rt1.c3 END)OR((((v0.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM t1, v0, rt1, rt0);
SELECT ALL * FROM t1 NOT INDEXED, v0, rt1, rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c3 WHEN NULL THEN rt0.c2 WHEN v0.c4 THEN t1.c0 WHEN rt0.c2 THEN v0.c3 WHEN rt0.c3 THEN v0.c4 WHEN v0.c4 THEN rt1.c3 ELSE rt1.c3 END)OR((((v0.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c0))))));
SELECT * FROM t1, v0, rt0 WHERE ((((((v0.c2)AND(rt0.c3)))AND(rt0.c1)) IN ())) ORDER BY LOWER(DISTINCT v0.c2) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2)AND(rt0.c3)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY LOWER(DISTINCT v0.c2) DESC  NULLS FIRST);
SELECT * FROM t1, v0, rt0 WHERE ((((((v0.c2)AND(rt0.c3)))AND(rt0.c1)) IN ())) ORDER BY LOWER(DISTINCT v0.c2) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2)AND(rt0.c3)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY LOWER(DISTINCT v0.c2) DESC  NULLS FIRST);
SELECT * FROM t1, v0, rt0 WHERE ((((((v0.c2)AND(rt0.c3)))AND(rt0.c1)) IN ())) ORDER BY LOWER(DISTINCT v0.c2) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, t1, rt1, rt0 LEFT OUTER JOIN v0 ON (((((rt1.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))>=(((((((((t0.c0)AND(rt1.c3)))AND(rt0.c0)))AND(v0.c3)))AND(rt0.c0)))) WHERE (((((rt1.c1)<(v0.c0)))OR(((rt1.c3) NOT BETWEEN (rt0.c1) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)<(v0.c0)))OR(((rt1.c3) NOT BETWEEN (rt0.c1) AND (v0.c2))))) IS TRUE)  as count FROM t0, t1, rt1, rt0 LEFT OUTER JOIN v0 ON (((((rt1.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))>=(((((((((t0.c0)AND(rt1.c3)))AND(rt0.c0)))AND(v0.c3)))AND(rt0.c0)))));
SELECT COUNT(*) FROM t0, t1, rt1, rt0 LEFT OUTER JOIN v0 ON (((((rt1.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))>=(((((((((t0.c0)AND(rt1.c3)))AND(rt0.c0)))AND(v0.c3)))AND(rt0.c0)))) WHERE (((((rt1.c1)<(v0.c0)))OR(((rt1.c3) NOT BETWEEN (rt0.c1) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)<(v0.c0)))OR(((rt1.c3) NOT BETWEEN (rt0.c1) AND (v0.c2))))) IS TRUE)  as count FROM t0, t1, rt1, rt0 LEFT OUTER JOIN v0 ON (((((rt1.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))>=(((((((((t0.c0)AND(rt1.c3)))AND(rt0.c0)))AND(v0.c3)))AND(rt0.c0)))));
SELECT COUNT(*) FROM t0, t1, rt1, rt0 LEFT OUTER JOIN v0 ON (((((rt1.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))>=(((((((((t0.c0)AND(rt1.c3)))AND(rt0.c0)))AND(v0.c3)))AND(rt0.c0)))) WHERE (((((rt1.c1)<(v0.c0)))OR(((rt1.c3) NOT BETWEEN (rt0.c1) AND (v0.c2)))));
SELECT * FROM rt0, v0, t1, t0, rt1 WHERE (((((v0.c0)+(rt0.c2)))-(CASE rt1.c2  WHEN rt0.c3 THEN 0.5711019233662514 WHEN rt1.c0 THEN v0.c4 WHEN t1.c0 THEN v0.c2 ELSE rt1.c1 END))) ORDER BY (((((rt0.c3)AND(v0.c3)))OR(v0.c2)) IN (((t0.c0) BETWEEN (v0.c4) AND (rt0.c2)), ((((((((v0.c2)AND('-1250573194')))AND(v0.c3)))AND(rt0.c1)))OR(v0.c4))))  NULLS LAST, (((t1.c0)) NOT BETWEEN ((rt1.c1)) AND ((CAST(t1.c0 AS TEXT)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(rt0.c2)))-(CASE rt1.c2  WHEN rt0.c3 THEN 0.5711019233662514 WHEN rt1.c0 THEN v0.c4 WHEN t1.c0 THEN v0.c2 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt0, v0, t1, t0, rt1 ORDER BY (((((rt0.c3)AND(v0.c3)))OR(v0.c2)) IN (((t0.c0) BETWEEN (v0.c4) AND (rt0.c2)), ((((((((v0.c2)AND('-1250573194')))AND(v0.c3)))AND(rt0.c1)))OR(v0.c4))))  NULLS LAST, (((t1.c0)) NOT BETWEEN ((rt1.c1)) AND ((CAST(t1.c0 AS TEXT)))) ASC  NULLS LAST);
SELECT * FROM rt0, v0, t1, t0, rt1 WHERE (((((v0.c0)+(rt0.c2)))-(CASE rt1.c2  WHEN rt0.c3 THEN 0.5711019233662514 WHEN rt1.c0 THEN v0.c4 WHEN t1.c0 THEN v0.c2 ELSE rt1.c1 END))) ORDER BY (((((rt0.c3)AND(v0.c3)))OR(v0.c2)) IN (((t0.c0) BETWEEN (v0.c4) AND (rt0.c2)), ((((((((v0.c2)AND('-1250573194')))AND(v0.c3)))AND(rt0.c1)))OR(v0.c4))))  NULLS LAST, (((t1.c0)) NOT BETWEEN ((rt1.c1)) AND ((CAST(t1.c0 AS TEXT)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(rt0.c2)))-(CASE rt1.c2  WHEN rt0.c3 THEN 0.5711019233662514 WHEN rt1.c0 THEN v0.c4 WHEN t1.c0 THEN v0.c2 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt0, v0, t1, t0, rt1 ORDER BY (((((rt0.c3)AND(v0.c3)))OR(v0.c2)) IN (((t0.c0) BETWEEN (v0.c4) AND (rt0.c2)), ((((((((v0.c2)AND('-1250573194')))AND(v0.c3)))AND(rt0.c1)))OR(v0.c4))))  NULLS LAST, (((t1.c0)) NOT BETWEEN ((rt1.c1)) AND ((CAST(t1.c0 AS TEXT)))) ASC  NULLS LAST);
SELECT * FROM rt0, v0, t1, t0, rt1 WHERE (((((v0.c0)+(rt0.c2)))-(CASE rt1.c2  WHEN rt0.c3 THEN 0.5711019233662514 WHEN rt1.c0 THEN v0.c4 WHEN t1.c0 THEN v0.c2 ELSE rt1.c1 END))) ORDER BY (((((rt0.c3)AND(v0.c3)))OR(v0.c2)) IN (((t0.c0) BETWEEN (v0.c4) AND (rt0.c2)), ((((((((v0.c2)AND('-1250573194')))AND(v0.c3)))AND(rt0.c1)))OR(v0.c4))))  NULLS LAST, (((t1.c0)) NOT BETWEEN ((rt1.c1)) AND ((CAST(t1.c0 AS TEXT)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((LTRIM(t1.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(t1.c0)) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((LTRIM(t1.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(t1.c0)) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((LTRIM(t1.c0)) NOT NULL));
SELECT COUNT(*) FROM t1, v0, rt0, t0 WHERE ((~ (x'')));
SELECT SUM(count) FROM (SELECT (((~ (x''))) IS TRUE)  as count FROM t1, v0, rt0, t0);
SELECT COUNT(*) FROM t1, v0, rt0, t0 WHERE ((~ (x'')));
SELECT SUM(count) FROM (SELECT (((~ (x''))) IS TRUE)  as count FROM t1, v0, rt0, t0);
SELECT COUNT(*) FROM t1, v0, rt0, t0 WHERE ((~ (x'')));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON ((x'') NOT NULL) LEFT OUTER JOIN t0 ON NULL WHERE (rt1.c0 COLLATE NOCASE) ORDER BY 'Xq';
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON ((x'') NOT NULL) LEFT OUTER JOIN t0 ON NULL ORDER BY 'Xq');
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON ((x'') NOT NULL) LEFT OUTER JOIN t0 ON NULL WHERE (rt1.c0 COLLATE NOCASE) ORDER BY 'Xq';
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON ((x'') NOT NULL) LEFT OUTER JOIN t0 ON NULL ORDER BY 'Xq');
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON ((x'') NOT NULL) LEFT OUTER JOIN t0 ON NULL WHERE (rt1.c0 COLLATE NOCASE) ORDER BY 'Xq';
SELECT COUNT(*) FROM rt1, t0 CROSS JOIN t1 ON ((rt0.c0)%(v0.c1)) COLLATE RTRIM COLLATE BINARY LEFT OUTER JOIN v0 ON (((~ (rt1.c3)))>((NOT (v0.c1)))) INNER JOIN rt0 ON ',-C/J䡥' WHERE (CAST(INSTR(v0.c4, v0.c0) AS TEXT)) ORDER BY (((((t1.c0, t0.c0, v0.c0))==((rt1.c3, rt1.c1, v0.c4))))||(rt1.c3)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(INSTR(v0.c4, v0.c0) AS TEXT)) IS TRUE)  as count FROM rt1, t0 CROSS JOIN t1 ON ((rt0.c0)%(v0.c1)) COLLATE RTRIM COLLATE BINARY LEFT OUTER JOIN v0 ON (((~ (rt1.c3)))>((NOT (v0.c1)))) INNER JOIN rt0 ON ',-C/J䡥' ORDER BY (((((t1.c0, t0.c0, v0.c0))=((rt1.c3, rt1.c1, v0.c4))))||(rt1.c3)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0 CROSS JOIN t1 ON ((rt0.c0)%(v0.c1)) COLLATE RTRIM COLLATE BINARY LEFT OUTER JOIN v0 ON (((~ (rt1.c3)))>((NOT (v0.c1)))) INNER JOIN rt0 ON ',-C/J䡥' WHERE (CAST(INSTR(v0.c4, v0.c0) AS TEXT)) ORDER BY (((((t1.c0, t0.c0, v0.c0))==((rt1.c3, rt1.c1, v0.c4))))||(rt1.c3)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(INSTR(v0.c4, v0.c0) AS TEXT)) IS TRUE)  as count FROM rt1, t0 CROSS JOIN t1 ON ((rt0.c0)%(v0.c1)) COLLATE RTRIM COLLATE BINARY LEFT OUTER JOIN v0 ON (((~ (rt1.c3)))>((NOT (v0.c1)))) INNER JOIN rt0 ON ',-C/J䡥' ORDER BY (((((t1.c0, t0.c0, v0.c0))=((rt1.c3, rt1.c1, v0.c4))))||(rt1.c3)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0 CROSS JOIN t1 ON ((rt0.c0)%(v0.c1)) COLLATE RTRIM COLLATE BINARY LEFT OUTER JOIN v0 ON (((~ (rt1.c3)))>((NOT (v0.c1)))) INNER JOIN rt0 ON ',-C/J䡥' WHERE (CAST(INSTR(v0.c4, v0.c0) AS TEXT)) ORDER BY (((((t1.c0, t0.c0, v0.c0))==((rt1.c3, rt1.c1, v0.c4))))||(rt1.c3)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS INTEGER)) IS FALSE)) ORDER BY (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))AND(t1.c0)), (x'' IN (((((t1.c0)AND(t1.c0)))OR(t1.c0))))  NULLS FIRST, CASE WHEN ((t1.c0)<=(t1.c0)) THEN json_type(t1.c0) WHEN HEX(DISTINCT t1.c0) THEN (- (t1.c0)) WHEN t1.c0 THEN t1.c0 COLLATE RTRIM ELSE (- (t1.c0)) END, (- (((((t1.c0)OR(t1.c0)))OR(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))AND(t1.c0)), (x'' IN (((((t1.c0)AND(t1.c0)))OR(t1.c0))))  NULLS FIRST, CASE WHEN ((t1.c0)<=(t1.c0)) THEN json_type(t1.c0) WHEN HEX(DISTINCT t1.c0) THEN (- (t1.c0)) WHEN t1.c0 THEN t1.c0 COLLATE RTRIM ELSE (- (t1.c0)) END, (- (((((t1.c0)OR(t1.c0)))OR(t1.c0)))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS INTEGER)) IS FALSE)) ORDER BY (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))AND(t1.c0)), (x'' IN (((((t1.c0)AND(t1.c0)))OR(t1.c0))))  NULLS FIRST, CASE WHEN ((t1.c0)<=(t1.c0)) THEN json_type(t1.c0) WHEN HEX(DISTINCT t1.c0) THEN (- (t1.c0)) WHEN t1.c0 THEN t1.c0 COLLATE RTRIM ELSE (- (t1.c0)) END, (- (((((t1.c0)OR(t1.c0)))OR(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))AND(t1.c0)), (x'' IN (((((t1.c0)AND(t1.c0)))OR(t1.c0))))  NULLS FIRST, CASE WHEN ((t1.c0)<=(t1.c0)) THEN json_type(t1.c0) WHEN HEX(DISTINCT t1.c0) THEN (- (t1.c0)) WHEN t1.c0 THEN t1.c0 COLLATE RTRIM ELSE (- (t1.c0)) END, (- (((((t1.c0)OR(t1.c0)))OR(t1.c0)))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS INTEGER)) IS FALSE)) ORDER BY (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))AND(t1.c0)), (x'' IN (((((t1.c0)AND(t1.c0)))OR(t1.c0))))  NULLS FIRST, CASE WHEN ((t1.c0)<=(t1.c0)) THEN json_type(t1.c0) WHEN HEX(DISTINCT t1.c0) THEN (- (t1.c0)) WHEN t1.c0 THEN t1.c0 COLLATE RTRIM ELSE (- (t1.c0)) END, (- (((((t1.c0)OR(t1.c0)))OR(t1.c0)))) ASC;
SELECT COUNT(*) FROM t1, v0, t0 WHERE (((('>fBe{t?') BETWEEN (x'') AND (x'f106')) IN ((((v0.c3))>((v0.c0))), (~ (v0.c4)))));
SELECT SUM(count) FROM (SELECT ((((('>fBe{t?') BETWEEN (x'') AND (x'f106')) IN ((((v0.c3))>((v0.c0))), (~ (v0.c4))))) IS TRUE)  as count FROM t1, v0, t0);
SELECT COUNT(*) FROM t1, v0, t0 WHERE (((('>fBe{t?') BETWEEN (x'') AND (x'f106')) IN ((((v0.c3))>((v0.c0))), (~ (v0.c4)))));
SELECT SUM(count) FROM (SELECT ((((('>fBe{t?') BETWEEN (x'') AND (x'f106')) IN ((((v0.c3))>((v0.c0))), (~ (v0.c4))))) IS TRUE)  as count FROM t1, v0, t0);
SELECT COUNT(*) FROM t1, v0, t0 WHERE (((('>fBe{t?') BETWEEN (x'') AND (x'f106')) IN ((((v0.c3))>((v0.c0))), (~ (v0.c4)))));
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c2)>=(rt0.c0)) THEN ((rt0.c0) NOT NULL) ELSE (((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c0))) END) ORDER BY TRIM((((t0.c0)) NOT BETWEEN (('')) AND ((rt0.c3))), 'wJp|~')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2)>=(rt0.c0)) THEN ((rt0.c0) NOT NULL) ELSE (((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0, t0 ORDER BY TRIM((((t0.c0)) NOT BETWEEN (('')) AND ((rt0.c3))), 'wJp|~')  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c2)>=(rt0.c0)) THEN ((rt0.c0) NOT NULL) ELSE (((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c0))) END) ORDER BY TRIM((((t0.c0)) NOT BETWEEN (('')) AND ((rt0.c3))), 'wJp|~')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2)>=(rt0.c0)) THEN ((rt0.c0) NOT NULL) ELSE (((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0, t0 ORDER BY TRIM((((t0.c0)) NOT BETWEEN (('')) AND ((rt0.c3))), 'wJp|~')  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c2)>=(rt0.c0)) THEN ((rt0.c0) NOT NULL) ELSE (((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c0))) END) ORDER BY TRIM((((t0.c0)) NOT BETWEEN (('')) AND ((rt0.c3))), 'wJp|~')  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1, v0, rt1 WHERE ('-1250573194') ORDER BY (((((((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((v0.c1))))OR('767111366')))OR(((rt0.c2) NOT NULL))))AND(v0.c3 COLLATE RTRIM)))AND(((((rt1.c2)OR(v0.c2)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT (('-1250573194') IS TRUE)  as count FROM rt0, t1, v0, rt1 ORDER BY (((((((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((v0.c1))))OR('767111366')))OR(((rt0.c2) NOT NULL))))AND(v0.c3 COLLATE RTRIM)))AND(((((rt1.c2)OR(v0.c2)))OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, t1, v0, rt1 WHERE ('-1250573194') ORDER BY (((((((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((v0.c1))))OR('767111366')))OR(((rt0.c2) NOT NULL))))AND(v0.c3 COLLATE RTRIM)))AND(((((rt1.c2)OR(v0.c2)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT (('-1250573194') IS TRUE)  as count FROM rt0, t1, v0, rt1 ORDER BY (((((((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((v0.c1))))OR('767111366')))OR(((rt0.c2) NOT NULL))))AND(v0.c3 COLLATE RTRIM)))AND(((((rt1.c2)OR(v0.c2)))OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, t1, v0, rt1 WHERE ('-1250573194') ORDER BY (((((((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((v0.c1))))OR('767111366')))OR(((rt0.c2) NOT NULL))))AND(v0.c3 COLLATE RTRIM)))AND(((((rt1.c2)OR(v0.c2)))OR(rt0.c1))));
SELECT COUNT(*) FROM v0, rt1, t1, rt0, t0 WHERE (CAST(((v0.c0) NOT BETWEEN (rt0.c1) AND (864812968)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT BETWEEN (rt0.c1) AND (864812968)) AS NUMERIC)) IS TRUE)  as count FROM v0, rt1, t1, rt0, t0);
SELECT COUNT(*) FROM v0, rt1, t1, rt0, t0 WHERE (CAST(((v0.c0) NOT BETWEEN (rt0.c1) AND (864812968)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT BETWEEN (rt0.c1) AND (864812968)) AS NUMERIC)) IS TRUE)  as count FROM v0, rt1, t1, rt0, t0);
SELECT COUNT(*) FROM v0, rt1, t1, rt0, t0 WHERE (CAST(((v0.c0) NOT BETWEEN (rt0.c1) AND (864812968)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t1, rt1, v0 WHERE (((t1.c0) BETWEEN (v0.c2) AND (v0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) BETWEEN (v0.c2) AND (v0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t1, rt1 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM t1, rt1, v0 WHERE (((t1.c0) BETWEEN (v0.c2) AND (v0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) BETWEEN (v0.c2) AND (v0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t1, rt1 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM t1, rt1, v0 WHERE (((t1.c0) BETWEEN (v0.c2) AND (v0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1, v0 WHERE (((((v0.c2) ISNULL)) NOT BETWEEN (CASE v0.c4  WHEN v0.c0 THEN v0.c1 END) AND ((v0.c1 IN ())))) ORDER BY rt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) ISNULL)) NOT BETWEEN (CASE v0.c4  WHEN v0.c0 THEN v0.c1 END) AND ((v0.c1 IN ())))) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 WHERE (((((v0.c2) ISNULL)) NOT BETWEEN (CASE v0.c4  WHEN v0.c0 THEN v0.c1 END) AND ((v0.c1 IN ())))) ORDER BY rt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) ISNULL)) NOT BETWEEN (CASE v0.c4  WHEN v0.c0 THEN v0.c1 END) AND ((v0.c1 IN ())))) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 WHERE (((((v0.c2) ISNULL)) NOT BETWEEN (CASE v0.c4  WHEN v0.c0 THEN v0.c1 END) AND ((v0.c1 IN ())))) ORDER BY rt1.c1 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, v0, t0, t1, rt0 WHERE (((('978225142')) BETWEEN (('')) AND (((- (rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((('978225142')) BETWEEN (('')) AND (((- (rt1.c1)))))) IS TRUE)  as count FROM rt1, v0, t0, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, t0, t1, rt0 WHERE (((('978225142')) BETWEEN (('')) AND (((- (rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((('978225142')) BETWEEN (('')) AND (((- (rt1.c1)))))) IS TRUE)  as count FROM rt1, v0, t0, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, t0, t1, rt0 WHERE (((('978225142')) BETWEEN (('')) AND (((- (rt1.c1))))));
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (json_array('678446183', ((rt0.c2) NOTNULL))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((json_array('678446183', ((rt0.c2) NOTNULL))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY ((((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (json_array('678446183', ((rt0.c2) NOTNULL))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((json_array('678446183', ((rt0.c2) NOTNULL))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY ((((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (json_array('678446183', ((rt0.c2) NOTNULL))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0))) IS TRUE);
SELECT * FROM v0, t0 INDEXED BY i50, t1 INNER JOIN rt1 ON (rt1.c3 COLLATE RTRIM IN ((- (v0.c0)))) FULL OUTER JOIN rt0 ON (NOT (((rt1.c3)-(rt0.c1)))) WHERE (CAST(rt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS INTEGER)) IS TRUE)  as count FROM v0, t0 INDEXED BY i50, t1 INNER JOIN rt1 ON (rt1.c3 COLLATE RTRIM IN ((- (v0.c0)))) FULL OUTER JOIN rt0 ON (NOT (((rt1.c3)-(rt0.c1)))));
SELECT * FROM v0, t0 INDEXED BY i50, t1 INNER JOIN rt1 ON (rt1.c3 COLLATE RTRIM IN ((- (v0.c0)))) FULL OUTER JOIN rt0 ON (NOT (((rt1.c3)-(rt0.c1)))) WHERE (CAST(rt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS INTEGER)) IS TRUE)  as count FROM v0, t0 INDEXED BY i50, t1 INNER JOIN rt1 ON (rt1.c3 COLLATE RTRIM IN ((- (v0.c0)))) FULL OUTER JOIN rt0 ON (NOT (((rt1.c3)-(rt0.c1)))));
SELECT * FROM rt1, t0, v0 WHERE (t0.c0) ORDER BY (((((~ (rt1.c1)))OR(((v0.c3) NOT BETWEEN (0xffffffff97147bb0) AND (v0.c3)))))OR((v0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY (((((~ (rt1.c1)))OR(((v0.c3) NOT BETWEEN (0xffffffff97147bb0) AND (v0.c3)))))OR((v0.c2 IN ()))) ASC);
SELECT * FROM rt1, t0, v0 WHERE (t0.c0) ORDER BY (((((~ (rt1.c1)))OR(((v0.c3) NOT BETWEEN (0xffffffff97147bb0) AND (v0.c3)))))OR((v0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY (((((~ (rt1.c1)))OR(((v0.c3) NOT BETWEEN (0xffffffff97147bb0) AND (v0.c3)))))OR((v0.c2 IN ()))) ASC);
SELECT * FROM rt1, t0, v0 WHERE (t0.c0) ORDER BY (((((~ (rt1.c1)))OR(((v0.c3) NOT BETWEEN (0xffffffff97147bb0) AND (v0.c3)))))OR((v0.c2 IN ()))) ASC;
SELECT COUNT(*) FROM t0, t1 WHERE (CAST(CASE WHEN t0.c0 THEN -1.760265296E9 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t1.c0 ELSE t0.c0 END AS BLOB)) ORDER BY '', ((((((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)))AND(CAST(t1.c0 AS NUMERIC))))OR(t1.c0 COLLATE BINARY)) DESC, GLOB(x'67c7', t0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c0 THEN -1.760265296E9 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t1.c0 ELSE t0.c0 END AS BLOB)) IS TRUE)  as count FROM t0, t1 ORDER BY '', ((((((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)))AND(CAST(t1.c0 AS NUMERIC))))OR(t1.c0 COLLATE BINARY)) DESC, GLOB(x'67c7', t0.c0 COLLATE BINARY));
SELECT COUNT(*) FROM t0, t1 WHERE (CAST(CASE WHEN t0.c0 THEN -1.760265296E9 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t1.c0 ELSE t0.c0 END AS BLOB)) ORDER BY '', ((((((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)))AND(CAST(t1.c0 AS NUMERIC))))OR(t1.c0 COLLATE BINARY)) DESC, GLOB(x'67c7', t0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c0 THEN -1.760265296E9 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t1.c0 ELSE t0.c0 END AS BLOB)) IS TRUE)  as count FROM t0, t1 ORDER BY '', ((((((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)))AND(CAST(t1.c0 AS NUMERIC))))OR(t1.c0 COLLATE BINARY)) DESC, GLOB(x'67c7', t0.c0 COLLATE BINARY));
SELECT COUNT(*) FROM t0, t1 WHERE (CAST(CASE WHEN t0.c0 THEN -1.760265296E9 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t1.c0 ELSE t0.c0 END AS BLOB)) ORDER BY '', ((((((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)))AND(CAST(t1.c0 AS NUMERIC))))OR(t1.c0 COLLATE BINARY)) DESC, GLOB(x'67c7', t0.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE (CAST(t1.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t1, v0, t0);
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE (CAST(t1.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t1, v0, t0);
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE (CAST(t1.c0 AS INTEGER) COLLATE RTRIM);
SELECT * FROM v0, rt0 WHERE ((((rt0.c3 IN (rt0.c1))) NOT BETWEEN (rt0.c1) AND (((v0.c1)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (rt0.c1))) NOT BETWEEN (rt0.c1) AND (((v0.c1)>=(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c3 IN (rt0.c1))) NOT BETWEEN (rt0.c1) AND (((v0.c1)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (rt0.c1))) NOT BETWEEN (rt0.c1) AND (((v0.c1)>=(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c3 IN (rt0.c1))) NOT BETWEEN (rt0.c1) AND (((v0.c1)>=(rt0.c2)))));
SELECT ALL COUNT(*) FROM t0, v0 NOT INDEXED NATURAL JOIN rt0 WHERE (rt0.c1) ORDER BY (NULL IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, v0 NATURAL JOIN rt0 ORDER BY (NULL IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, v0 NOT INDEXED NATURAL JOIN rt0 WHERE (rt0.c1) ORDER BY (NULL IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, v0 NATURAL JOIN rt0 ORDER BY (NULL IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, v0 NOT INDEXED NATURAL JOIN rt0 WHERE (rt0.c1) ORDER BY (NULL IN ()) ASC;
SELECT ALL COUNT(*) FROM t0, v0, rt0 INNER JOIN rt1 ON rt0.c1 INNER JOIN t1 ON ((CAST(v0.c1 AS INTEGER)) IS TRUE) WHERE (CAST(((v0.c2)<(t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2)<(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, v0, rt0 INNER JOIN rt1 ON rt0.c1 INNER JOIN t1 ON ((CAST(v0.c1 AS INTEGER)) IS TRUE));
SELECT ALL COUNT(*) FROM t0, v0, rt0 INNER JOIN rt1 ON rt0.c1 INNER JOIN t1 ON ((CAST(v0.c1 AS INTEGER)) IS TRUE) WHERE (CAST(((v0.c2)<(t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2)<(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, v0, rt0 INNER JOIN rt1 ON rt0.c1 INNER JOIN t1 ON ((CAST(v0.c1 AS INTEGER)) IS TRUE));
SELECT ALL COUNT(*) FROM t0, v0, rt0 INNER JOIN rt1 ON rt0.c1 INNER JOIN t1 ON ((CAST(v0.c1 AS INTEGER)) IS TRUE) WHERE (CAST(((v0.c2)<(t0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM t1, rt1, rt0 INDEXED BY i50, t0, v0 WHERE (rt1.c0) ORDER BY ((rt0.c0)&((t1.c0 IN (rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM t1, rt1, rt0 INDEXED BY i50, t0, v0 ORDER BY ((rt0.c0)&((t1.c0 IN (rt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 INDEXED BY i50, t0, v0 WHERE (rt1.c0) ORDER BY ((rt0.c0)&((t1.c0 IN (rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM t1, rt1, rt0 INDEXED BY i50, t0, v0 ORDER BY ((rt0.c0)&((t1.c0 IN (rt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 NATURAL JOIN t1 WHERE ((- (t0.c0))) ORDER BY ((((((t1.c0)AND(x'14e6')))AND(t0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((- (t0.c0))) IS TRUE)  as count FROM t0 NATURAL JOIN t1 ORDER BY ((((((t1.c0)AND(x'14e6')))AND(t0.c0))) IS FALSE) ASC);
SELECT COUNT(*) FROM t0 NATURAL JOIN t1 WHERE ((- (t0.c0))) ORDER BY ((((((t1.c0)AND(x'14e6')))AND(t0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((- (t0.c0))) IS TRUE)  as count FROM t0 NATURAL JOIN t1 ORDER BY ((((((t1.c0)AND(x'14e6')))AND(t0.c0))) IS FALSE) ASC);
SELECT COUNT(*) FROM t0 NATURAL JOIN t1 WHERE ((- (t0.c0))) ORDER BY ((((((t1.c0)AND(x'14e6')))AND(t0.c0))) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN ((+ (t1.c0))) AND (t1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN ((+ (t1.c0))) AND (t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN ((+ (t1.c0))) AND (t1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN ((+ (t1.c0))) AND (t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN ((+ (t1.c0))) AND (t1.c0 COLLATE BINARY)));
SELECT ALL * FROM t1, rt1 WHERE (CAST(((rt1.c3)GLOB(rt1.c0)) AS TEXT)) ORDER BY LTRIM(((rt1.c3)IS('	oE5Du	'))) DESC, (NOT (((rt1.c1) BETWEEN (rt1.c2) AND (0Xffffffffbd829965)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c3)GLOB(rt1.c0)) AS TEXT)) IS TRUE)  as count FROM t1, rt1 ORDER BY LTRIM(((rt1.c3)IS('	oE5Du	'))) DESC, (NOT (((rt1.c1) BETWEEN (rt1.c2) AND (0xffffffffbd829965)))) ASC);
SELECT ALL * FROM t1, rt1 WHERE (CAST(((rt1.c3)GLOB(rt1.c0)) AS TEXT)) ORDER BY LTRIM(((rt1.c3)IS('	oE5Du	'))) DESC, (NOT (((rt1.c1) BETWEEN (rt1.c2) AND (0Xffffffffbd829965)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c3)GLOB(rt1.c0)) AS TEXT)) IS TRUE)  as count FROM t1, rt1 ORDER BY LTRIM(((rt1.c3)IS('	oE5Du	'))) DESC, (NOT (((rt1.c1) BETWEEN (rt1.c2) AND (0xffffffffbd829965)))) ASC);
SELECT ALL * FROM t1, rt1 WHERE (CAST(((rt1.c3)GLOB(rt1.c0)) AS TEXT)) ORDER BY LTRIM(((rt1.c3)IS('	oE5Du	'))) DESC, (NOT (((rt1.c1) BETWEEN (rt1.c2) AND (0Xffffffffbd829965)))) ASC;
SELECT ALL COUNT(*) FROM rt1, v0 FULL OUTER JOIN t0 ON CAST(((rt1.c2) IS TRUE) AS BLOB) INNER JOIN rt0 ON (((rt0.c3, rt1.c2, rt1.c0, v0.c4, v0.c0)) BETWEEN ((rt1.c2 COLLATE BINARY, rt1.c0 COLLATE RTRIM, LIKELY(v0.c1), ((v0.c2) NOT NULL), ((rt0.c0)/(v0.c4)))) AND (((((rt0.c0))>=((rt1.c2))), ((v0.c2)<<(rt1.c3)), (((rt1.c2))<((v0.c0))), CAST(v0.c1 AS TEXT), (- (v0.c2))))) WHERE ('-1652373523') ORDER BY IFNULL(((v0.c2) BETWEEN (rt1.c0) AND (rt0.c3)), (v0.c1 IN (rt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT (('-1652373523') IS TRUE)  as count FROM rt1, v0 FULL OUTER JOIN t0 ON CAST(((rt1.c2) IS TRUE) AS BLOB) INNER JOIN rt0 ON (((rt0.c3, rt1.c2, rt1.c0, v0.c4, v0.c0)) BETWEEN ((rt1.c2 COLLATE BINARY, rt1.c0 COLLATE RTRIM, LIKELY(v0.c1), ((v0.c2) NOT NULL), ((rt0.c0)/(v0.c4)))) AND (((((rt0.c0))>=((rt1.c2))), ((v0.c2)<<(rt1.c3)), (((rt1.c2))<((v0.c0))), CAST(v0.c1 AS TEXT), (- (v0.c2))))) ORDER BY IFNULL(((v0.c2) BETWEEN (rt1.c0) AND (rt0.c3)), (v0.c1 IN (rt1.c1))) ASC);
SELECT ALL COUNT(*) FROM rt1, v0 FULL OUTER JOIN t0 ON CAST(((rt1.c2) IS TRUE) AS BLOB) INNER JOIN rt0 ON (((rt0.c3, rt1.c2, rt1.c0, v0.c4, v0.c0)) BETWEEN ((rt1.c2 COLLATE BINARY, rt1.c0 COLLATE RTRIM, LIKELY(v0.c1), ((v0.c2) NOT NULL), ((rt0.c0)/(v0.c4)))) AND (((((rt0.c0))>=((rt1.c2))), ((v0.c2)<<(rt1.c3)), (((rt1.c2))<((v0.c0))), CAST(v0.c1 AS TEXT), (- (v0.c2))))) WHERE ('-1652373523') ORDER BY IFNULL(((v0.c2) BETWEEN (rt1.c0) AND (rt0.c3)), (v0.c1 IN (rt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT (('-1652373523') IS TRUE)  as count FROM rt1, v0 FULL OUTER JOIN t0 ON CAST(((rt1.c2) IS TRUE) AS BLOB) INNER JOIN rt0 ON (((rt0.c3, rt1.c2, rt1.c0, v0.c4, v0.c0)) BETWEEN ((rt1.c2 COLLATE BINARY, rt1.c0 COLLATE RTRIM, LIKELY(v0.c1), ((v0.c2) NOT NULL), ((rt0.c0)/(v0.c4)))) AND (((((rt0.c0))>=((rt1.c2))), ((v0.c2)<<(rt1.c3)), (((rt1.c2))<((v0.c0))), CAST(v0.c1 AS TEXT), (- (v0.c2))))) ORDER BY IFNULL(((v0.c2) BETWEEN (rt1.c0) AND (rt0.c3)), (v0.c1 IN (rt1.c1))) ASC);
SELECT ALL COUNT(*) FROM rt1, v0 FULL OUTER JOIN t0 ON CAST(((rt1.c2) IS TRUE) AS BLOB) INNER JOIN rt0 ON (((rt0.c3, rt1.c2, rt1.c0, v0.c4, v0.c0)) BETWEEN ((rt1.c2 COLLATE BINARY, rt1.c0 COLLATE RTRIM, LIKELY(v0.c1), ((v0.c2) NOT NULL), ((rt0.c0)/(v0.c4)))) AND (((((rt0.c0))>=((rt1.c2))), ((v0.c2)<<(rt1.c3)), (((rt1.c2))<((v0.c0))), CAST(v0.c1 AS TEXT), (- (v0.c2))))) WHERE ('-1652373523') ORDER BY IFNULL(((v0.c2) BETWEEN (rt1.c0) AND (rt0.c3)), (v0.c1 IN (rt1.c1))) ASC;
SELECT ALL COUNT(*) FROM v0, rt0, rt1, t0 WHERE ((((v0.c3 IN (rt1.c0, t0.c0)))*((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3 IN (rt1.c0, t0.c0)))*((- (rt0.c1))))) IS TRUE)  as count FROM v0, rt0, rt1, t0);
SELECT ALL COUNT(*) FROM v0, rt0, rt1, t0 WHERE ((((v0.c3 IN (rt1.c0, t0.c0)))*((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3 IN (rt1.c0, t0.c0)))*((- (rt0.c1))))) IS TRUE)  as count FROM v0, rt0, rt1, t0);
SELECT ALL COUNT(*) FROM v0, rt0, rt1, t0 WHERE ((((v0.c3 IN (rt1.c0, t0.c0)))*((- (rt0.c1)))));
SELECT ALL * FROM t1, v0, rt1 WHERE (v0.c1) ORDER BY CASE WHEN ((v0.c0)+(rt1.c3)) THEN x'' WHEN ((((((((t1.c0)AND(rt1.c0)))AND('H>ED敢\>t')))AND(v0.c2)))AND(rt1.c2)) THEN ((v0.c0)LIKE(v0.c1)) WHEN NULL THEN (NOT (v0.c0)) WHEN CASE WHEN v0.c2 THEN v0.c1 END THEN ((v0.c2)/(rt1.c1)) WHEN CASE WHEN rt1.c3 THEN v0.c3 ELSE v0.c3 END THEN (((v0.c3)) BETWEEN (('T*q?Gh')) AND (('180381026'))) WHEN ((((((((rt1.c0)AND(v0.c1)))AND(rt1.c3)))AND(rt1.c0)))AND(v0.c3)) THEN '0i䡥' WHEN CAST(rt1.c0 AS NUMERIC) THEN (+ (x'')) END;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM t1, v0, rt1 ORDER BY CASE WHEN ((v0.c0)+(rt1.c3)) THEN x'' WHEN ((((((((t1.c0)AND(rt1.c0)))AND('H>ED敢\>t')))AND(v0.c2)))AND(rt1.c2)) THEN ((v0.c0)LIKE(v0.c1)) WHEN NULL THEN (NOT (v0.c0)) WHEN CASE WHEN v0.c2 THEN v0.c1 END THEN ((v0.c2)/(rt1.c1)) WHEN CASE WHEN rt1.c3 THEN v0.c3 ELSE v0.c3 END THEN (((v0.c3)) BETWEEN (('T*q?Gh')) AND (('180381026'))) WHEN ((((((((rt1.c0)AND(v0.c1)))AND(rt1.c3)))AND(rt1.c0)))AND(v0.c3)) THEN '0i䡥' WHEN CAST(rt1.c0 AS NUMERIC) THEN (+ (x'')) END);
SELECT ALL * FROM t1, v0, rt1 WHERE (v0.c1) ORDER BY CASE WHEN ((v0.c0)+(rt1.c3)) THEN x'' WHEN ((((((((t1.c0)AND(rt1.c0)))AND('H>ED敢\>t')))AND(v0.c2)))AND(rt1.c2)) THEN ((v0.c0)LIKE(v0.c1)) WHEN NULL THEN (NOT (v0.c0)) WHEN CASE WHEN v0.c2 THEN v0.c1 END THEN ((v0.c2)/(rt1.c1)) WHEN CASE WHEN rt1.c3 THEN v0.c3 ELSE v0.c3 END THEN (((v0.c3)) BETWEEN (('T*q?Gh')) AND (('180381026'))) WHEN ((((((((rt1.c0)AND(v0.c1)))AND(rt1.c3)))AND(rt1.c0)))AND(v0.c3)) THEN '0i䡥' WHEN CAST(rt1.c0 AS NUMERIC) THEN (+ (x'')) END;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM t1, v0, rt1 ORDER BY CASE WHEN ((v0.c0)+(rt1.c3)) THEN x'' WHEN ((((((((t1.c0)AND(rt1.c0)))AND('H>ED敢\>t')))AND(v0.c2)))AND(rt1.c2)) THEN ((v0.c0)LIKE(v0.c1)) WHEN NULL THEN (NOT (v0.c0)) WHEN CASE WHEN v0.c2 THEN v0.c1 END THEN ((v0.c2)/(rt1.c1)) WHEN CASE WHEN rt1.c3 THEN v0.c3 ELSE v0.c3 END THEN (((v0.c3)) BETWEEN (('T*q?Gh')) AND (('180381026'))) WHEN ((((((((rt1.c0)AND(v0.c1)))AND(rt1.c3)))AND(rt1.c0)))AND(v0.c3)) THEN '0i䡥' WHEN CAST(rt1.c0 AS NUMERIC) THEN (+ (x'')) END);
SELECT ALL * FROM t1, v0, rt1 WHERE (v0.c1) ORDER BY CASE WHEN ((v0.c0)+(rt1.c3)) THEN x'' WHEN ((((((((t1.c0)AND(rt1.c0)))AND('H>ED敢\>t')))AND(v0.c2)))AND(rt1.c2)) THEN ((v0.c0)LIKE(v0.c1)) WHEN NULL THEN (NOT (v0.c0)) WHEN CASE WHEN v0.c2 THEN v0.c1 END THEN ((v0.c2)/(rt1.c1)) WHEN CASE WHEN rt1.c3 THEN v0.c3 ELSE v0.c3 END THEN (((v0.c3)) BETWEEN (('T*q?Gh')) AND (('180381026'))) WHEN ((((((((rt1.c0)AND(v0.c1)))AND(rt1.c3)))AND(rt1.c0)))AND(v0.c3)) THEN '0i䡥' WHEN CAST(rt1.c0 AS NUMERIC) THEN (+ (x'')) END;
SELECT ALL * FROM rt1, rt0, t0, v0, t1 WHERE (((rt1.c0)<>(v0.c4)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)<>(v0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, t0, v0, t1);
SELECT ALL * FROM rt1, rt0, t0, v0, t1 WHERE (((rt1.c0)<>(v0.c4)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)<>(v0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, t0, v0, t1);
SELECT ALL * FROM rt1, rt0, t0, v0, t1 WHERE (((rt1.c0)<>(v0.c4)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((((0.857857960835091, rt1.c0, t0.c0))>((rt1.c1, rt1.c1, rt1.c1)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((0.857857960835091, rt1.c0, t0.c0))>((rt1.c1, rt1.c1, rt1.c1)))) IS FALSE)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((((0.857857960835091, rt1.c0, t0.c0))>((rt1.c1, rt1.c1, rt1.c1)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((0.857857960835091, rt1.c0, t0.c0))>((rt1.c1, rt1.c1, rt1.c1)))) IS FALSE)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((((0.857857960835091, rt1.c0, t0.c0))>((rt1.c1, rt1.c1, rt1.c1)))) IS FALSE));
SELECT ALL * FROM rt0, rt1 INDEXED BY i66 WHERE ((NOT (CASE rt1.c0  WHEN '' THEN rt0.c3 ELSE rt0.c1 END))) ORDER BY (((((rt0.c2))<=((rt1.c1))))-((rt0.c3 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt1.c0  WHEN '' THEN rt0.c3 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, rt1 INDEXED BY i66 ORDER BY (((((rt0.c2))<=((rt1.c1))))-((rt0.c3 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 INDEXED BY i66 WHERE ((NOT (CASE rt1.c0  WHEN '' THEN rt0.c3 ELSE rt0.c1 END))) ORDER BY (((((rt0.c2))<=((rt1.c1))))-((rt0.c3 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt1.c0  WHEN '' THEN rt0.c3 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, rt1 INDEXED BY i66 ORDER BY (((((rt0.c2))<=((rt1.c1))))-((rt0.c3 IN ()))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CASE ((t0.c0) IS TRUE)  WHEN ((t0.c0) IS FALSE) THEN t0.c0 COLLATE BINARY WHEN (+ (t0.c0)) THEN ((t0.c0) IS FALSE) WHEN (~ (t0.c0)) THEN (x'' IN ()) END) ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN t0.c0 COLLATE RTRIM ELSE (('TRUE') NOT BETWEEN (t0.c0) AND (t0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) IS TRUE)  WHEN ((t0.c0) IS FALSE) THEN t0.c0 COLLATE BINARY WHEN (+ (t0.c0)) THEN ((t0.c0) IS FALSE) WHEN (~ (t0.c0)) THEN (x'' IN ()) END) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN t0.c0 COLLATE RTRIM ELSE (('TRUE') NOT BETWEEN (t0.c0) AND (t0.c0)) END DESC  NULLS LAST);
SELECT * FROM t0 WHERE (CASE ((t0.c0) IS TRUE)  WHEN ((t0.c0) IS FALSE) THEN t0.c0 COLLATE BINARY WHEN (+ (t0.c0)) THEN ((t0.c0) IS FALSE) WHEN (~ (t0.c0)) THEN (x'' IN ()) END) ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN t0.c0 COLLATE RTRIM ELSE (('TRUE') NOT BETWEEN (t0.c0) AND (t0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) IS TRUE)  WHEN ((t0.c0) IS FALSE) THEN t0.c0 COLLATE BINARY WHEN (+ (t0.c0)) THEN ((t0.c0) IS FALSE) WHEN (~ (t0.c0)) THEN (x'' IN ()) END) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN t0.c0 COLLATE RTRIM ELSE (('TRUE') NOT BETWEEN (t0.c0) AND (t0.c0)) END DESC  NULLS LAST);
SELECT * FROM t0 WHERE (CASE ((t0.c0) IS TRUE)  WHEN ((t0.c0) IS FALSE) THEN t0.c0 COLLATE BINARY WHEN (+ (t0.c0)) THEN ((t0.c0) IS FALSE) WHEN (~ (t0.c0)) THEN (x'' IN ()) END) ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN t0.c0 COLLATE RTRIM ELSE (('TRUE') NOT BETWEEN (t0.c0) AND (t0.c0)) END DESC  NULLS LAST;
SELECT * FROM rt0, t1 WHERE (json_valid(((rt0.c1)/(rt0.c1)))) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c3) NOT NULL))) AND ((((rt0.c1) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(((rt0.c1)/(rt0.c1)))) IS TRUE)  as count FROM rt0, t1 ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c3) NOT NULL))) AND ((((rt0.c1) IS TRUE))))  NULLS FIRST);
SELECT * FROM rt0, t1 WHERE (json_valid(((rt0.c1)/(rt0.c1)))) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c3) NOT NULL))) AND ((((rt0.c1) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(((rt0.c1)/(rt0.c1)))) IS TRUE)  as count FROM rt0, t1 ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c3) NOT NULL))) AND ((((rt0.c1) IS TRUE))))  NULLS FIRST);
SELECT * FROM rt0, t1 WHERE (json_valid(((rt0.c1)/(rt0.c1)))) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c3) NOT NULL))) AND ((((rt0.c1) IS TRUE))))  NULLS FIRST;
SELECT * FROM v0, rt1, t1, rt0 WHERE ((((((('')OR(rt1.c3)))AND((((v0.c3, t1.c0, rt0.c3)) NOT BETWEEN ((rt0.c2, rt1.c2, rt0.c0)) AND ((rt1.c3, rt0.c1, rt1.c3))))))AND(CAST(t1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((('')OR(rt1.c3)))AND((((v0.c3, t1.c0, rt0.c3)) NOT BETWEEN ((rt0.c2, rt1.c2, rt0.c0)) AND ((rt1.c3, rt0.c1, rt1.c3))))))AND(CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM v0, rt1, t1, rt0);
SELECT * FROM v0, rt1, t1, rt0 WHERE ((((((('')OR(rt1.c3)))AND((((v0.c3, t1.c0, rt0.c3)) NOT BETWEEN ((rt0.c2, rt1.c2, rt0.c0)) AND ((rt1.c3, rt0.c1, rt1.c3))))))AND(CAST(t1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((('')OR(rt1.c3)))AND((((v0.c3, t1.c0, rt0.c3)) NOT BETWEEN ((rt0.c2, rt1.c2, rt0.c0)) AND ((rt1.c3, rt0.c1, rt1.c3))))))AND(CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM v0, rt1, t1, rt0);
SELECT * FROM v0, rt1, t1, rt0 WHERE ((((((('')OR(rt1.c3)))AND((((v0.c3, t1.c0, rt0.c3)) NOT BETWEEN ((rt0.c2, rt1.c2, rt0.c0)) AND ((rt1.c3, rt0.c1, rt1.c3))))))AND(CAST(t1.c0 AS TEXT))));
SELECT ALL * FROM v0, rt1 WHERE (v0.c4) ORDER BY CAST(((v0.c3)OR(rt1.c3)) AS TEXT) DESC, (((((((((v0.c2)OR(rt1.c2)))OR(rt1.c0)))OR(x'')))OR(rt1.c0)) IN (((v0.c2) NOTNULL))) ASC, '2084041406' ASC;
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM v0, rt1 ORDER BY CAST(((v0.c3)OR(rt1.c3)) AS TEXT) DESC, (((((((((v0.c2)OR(rt1.c2)))OR(rt1.c0)))OR(x'')))OR(rt1.c0)) IN (((v0.c2) NOTNULL))) ASC, '2084041406' ASC);
SELECT ALL * FROM v0, rt1 WHERE (v0.c4) ORDER BY CAST(((v0.c3)OR(rt1.c3)) AS TEXT) DESC, (((((((((v0.c2)OR(rt1.c2)))OR(rt1.c0)))OR(x'')))OR(rt1.c0)) IN (((v0.c2) NOTNULL))) ASC, '2084041406' ASC;
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM v0, rt1 ORDER BY CAST(((v0.c3)OR(rt1.c3)) AS TEXT) DESC, (((((((((v0.c2)OR(rt1.c2)))OR(rt1.c0)))OR(x'')))OR(rt1.c0)) IN (((v0.c2) NOTNULL))) ASC, '2084041406' ASC);
SELECT ALL * FROM v0, rt1 WHERE (v0.c4) ORDER BY CAST(((v0.c3)OR(rt1.c3)) AS TEXT) DESC, (((((((((v0.c2)OR(rt1.c2)))OR(rt1.c0)))OR(x'')))OR(rt1.c0)) IN (((v0.c2) NOTNULL))) ASC, '2084041406' ASC;
SELECT ALL * FROM v0 WHERE (((v0.c2 COLLATE BINARY)<(((v0.c4)|(v0.c4))))) ORDER BY ((((v0.c2)-(v0.c3))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE BINARY)<(((v0.c4)|(v0.c4))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2)-(v0.c3))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((v0.c2 COLLATE BINARY)<(((v0.c4)|(v0.c4))))) ORDER BY ((((v0.c2)-(v0.c3))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE BINARY)<(((v0.c4)|(v0.c4))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2)-(v0.c3))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((v0.c2 COLLATE BINARY)<(((v0.c4)|(v0.c4))))) ORDER BY ((((v0.c2)-(v0.c3))) IS TRUE) DESC  NULLS FIRST;
SELECT * FROM v0, rt1 RIGHT OUTER JOIN rt0 ON CASE v0.c3 COLLATE BINARY  WHEN ((rt0.c1)LIKE(rt1.c3)) THEN (('') NOT BETWEEN (rt0.c1) AND (v0.c2)) WHEN ((rt0.c0) BETWEEN (rt1.c3) AND ('1834672782')) THEN ((rt1.c3)>(x'')) WHEN x'd428' THEN TYPEOF(DISTINCT rt1.c2) END INNER JOIN t0 ON ((- (rt0.c3)) IN ()) WHERE ((('N4010160928114167649:758-4231323817991404515T3450196699645650775 1253 -4274829414451761315:479 K')GLOB(v0.c2 COLLATE RTRIM))) ORDER BY ((((CASE v0.c2  WHEN v0.c1 THEN v0.c1 END)AND(((t0.c0)|(rt0.c3)))))OR(((v0.c3) ISNULL)))  NULLS LAST, NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('N4010160928114167649:758-4231323817991404515T3450196699645650775 1253 -4274829414451761315:479 K')GLOB(v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN rt0 ON CASE v0.c3 COLLATE BINARY  WHEN ((rt0.c1)LIKE(rt1.c3)) THEN (('') NOT BETWEEN (rt0.c1) AND (v0.c2)) WHEN ((rt0.c0) BETWEEN (rt1.c3) AND ('1834672782')) THEN ((rt1.c3)>(x'')) WHEN x'd428' THEN TYPEOF(DISTINCT rt1.c2) END INNER JOIN t0 ON ((- (rt0.c3)) IN ()) ORDER BY ((((CASE v0.c2  WHEN v0.c1 THEN v0.c1 END)AND(((t0.c0)|(rt0.c3)))))OR(((v0.c3) ISNULL)))  NULLS LAST, NULL DESC  NULLS FIRST);
SELECT * FROM v0, rt1 RIGHT OUTER JOIN rt0 ON CASE v0.c3 COLLATE BINARY  WHEN ((rt0.c1)LIKE(rt1.c3)) THEN (('') NOT BETWEEN (rt0.c1) AND (v0.c2)) WHEN ((rt0.c0) BETWEEN (rt1.c3) AND ('1834672782')) THEN ((rt1.c3)>(x'')) WHEN x'd428' THEN TYPEOF(DISTINCT rt1.c2) END INNER JOIN t0 ON ((- (rt0.c3)) IN ()) WHERE ((('N4010160928114167649:758-4231323817991404515T3450196699645650775 1253 -4274829414451761315:479 K')GLOB(v0.c2 COLLATE RTRIM))) ORDER BY ((((CASE v0.c2  WHEN v0.c1 THEN v0.c1 END)AND(((t0.c0)|(rt0.c3)))))OR(((v0.c3) ISNULL)))  NULLS LAST, NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('N4010160928114167649:758-4231323817991404515T3450196699645650775 1253 -4274829414451761315:479 K')GLOB(v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN rt0 ON CASE v0.c3 COLLATE BINARY  WHEN ((rt0.c1)LIKE(rt1.c3)) THEN (('') NOT BETWEEN (rt0.c1) AND (v0.c2)) WHEN ((rt0.c0) BETWEEN (rt1.c3) AND ('1834672782')) THEN ((rt1.c3)>(x'')) WHEN x'd428' THEN TYPEOF(DISTINCT rt1.c2) END INNER JOIN t0 ON ((- (rt0.c3)) IN ()) ORDER BY ((((CASE v0.c2  WHEN v0.c1 THEN v0.c1 END)AND(((t0.c0)|(rt0.c3)))))OR(((v0.c3) ISNULL)))  NULLS LAST, NULL DESC  NULLS FIRST);
SELECT * FROM v0, rt1 RIGHT OUTER JOIN rt0 ON CASE v0.c3 COLLATE BINARY  WHEN ((rt0.c1)LIKE(rt1.c3)) THEN (('') NOT BETWEEN (rt0.c1) AND (v0.c2)) WHEN ((rt0.c0) BETWEEN (rt1.c3) AND ('1834672782')) THEN ((rt1.c3)>(x'')) WHEN x'd428' THEN TYPEOF(DISTINCT rt1.c2) END INNER JOIN t0 ON ((- (rt0.c3)) IN ()) WHERE ((('N4010160928114167649:758-4231323817991404515T3450196699645650775 1253 -4274829414451761315:479 K')GLOB(v0.c2 COLLATE RTRIM))) ORDER BY ((((CASE v0.c2  WHEN v0.c1 THEN v0.c1 END)AND(((t0.c0)|(rt0.c3)))))OR(((v0.c3) ISNULL)))  NULLS LAST, NULL DESC  NULLS FIRST;
SELECT * FROM rt0, t1, rt1, v0, t0 WHERE (CAST(((x'') BETWEEN (rt1.c1) AND (0.38111724399577485)) AS NUMERIC)) ORDER BY ((((((v0.c3)) BETWEEN ((v0.c4)) AND ((rt0.c0)))))==(((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') BETWEEN (rt1.c1) AND (0.38111724399577485)) AS NUMERIC)) IS TRUE)  as count FROM rt0, t1, rt1, v0, t0 ORDER BY ((((((v0.c3)) BETWEEN ((v0.c4)) AND ((rt0.c0)))))=(((rt1.c2 IN ())))));
SELECT * FROM rt0, t1, rt1, v0, t0 WHERE (CAST(((x'') BETWEEN (rt1.c1) AND (0.38111724399577485)) AS NUMERIC)) ORDER BY ((((((v0.c3)) BETWEEN ((v0.c4)) AND ((rt0.c0)))))==(((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') BETWEEN (rt1.c1) AND (0.38111724399577485)) AS NUMERIC)) IS TRUE)  as count FROM rt0, t1, rt1, v0, t0 ORDER BY ((((((v0.c3)) BETWEEN ((v0.c4)) AND ((rt0.c0)))))=(((rt1.c2 IN ())))));
SELECT * FROM rt0, t1, rt1, v0, t0 WHERE (CAST(((x'') BETWEEN (rt1.c1) AND (0.38111724399577485)) AS NUMERIC)) ORDER BY ((((((v0.c3)) BETWEEN ((v0.c4)) AND ((rt0.c0)))))==(((rt1.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt0, t0, rt1, t1 NATURAL JOIN v0 WHERE (rt1.c1) ORDER BY (- (((rt0.c1)/(v0.c4)))), LIKELY(DISTINCT CAST('-1652373523' AS TEXT)), 1590276.0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt0, t0, rt1, t1 NATURAL JOIN v0 ORDER BY (- (((rt0.c1)/(v0.c4)))), LIKELY(DISTINCT CAST('-1652373523' AS TEXT)), 1590276.0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1, t1 NATURAL JOIN v0 WHERE (rt1.c1) ORDER BY (- (((rt0.c1)/(v0.c4)))), LIKELY(DISTINCT CAST('-1652373523' AS TEXT)), 1590276.0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt0, t0, rt1, t1 NATURAL JOIN v0 ORDER BY (- (((rt0.c1)/(v0.c4)))), LIKELY(DISTINCT CAST('-1652373523' AS TEXT)), 1590276.0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1, t1 NATURAL JOIN v0 WHERE (rt1.c1) ORDER BY (- (((rt0.c1)/(v0.c4)))), LIKELY(DISTINCT CAST('-1652373523' AS TEXT)), 1590276.0  NULLS LAST;
SELECT * FROM t0, t1, rt0, rt1, v0 WHERE ((NOT ((- (v0.c4))))) ORDER BY ((((((v0.c0)AND(t0.c0)))OR(v0.c1)))>=(v0.c1));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (v0.c4))))) IS TRUE)  as count FROM t0, t1, rt0, rt1, v0 ORDER BY ((((((v0.c0)AND(t0.c0)))OR(v0.c1)))>=(v0.c1)));
SELECT * FROM t0, t1, rt0, rt1, v0 WHERE ((NOT ((- (v0.c4))))) ORDER BY ((((((v0.c0)AND(t0.c0)))OR(v0.c1)))>=(v0.c1));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (v0.c4))))) IS TRUE)  as count FROM t0, t1, rt0, rt1, v0 ORDER BY ((((((v0.c0)AND(t0.c0)))OR(v0.c1)))>=(v0.c1)));
SELECT * FROM t0, t1, rt0, rt1, v0 WHERE ((NOT ((- (v0.c4))))) ORDER BY ((((((v0.c0)AND(t0.c0)))OR(v0.c1)))>=(v0.c1));
SELECT ALL COUNT(*) FROM t0 INDEXED BY i50, t1, rt1, rt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t0 INDEXED BY i50, t1, rt1, rt0);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i50, t1, rt1, rt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t0 INDEXED BY i50, t1, rt1, rt0);
SELECT ALL * FROM v0 WHERE ((((((v0.c4)+(v0.c2))))<>(((((v0.c4)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c4)+(v0.c2))))<>(((((v0.c4)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c4)+(v0.c2))))<>(((((v0.c4)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c4)+(v0.c2))))<>(((((v0.c4)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c4)+(v0.c2))))<>(((((v0.c4)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))))));
SELECT ALL * FROM rt1, rt0, t1, v0 WHERE (((rt1.c1 COLLATE BINARY) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))) AND (CAST(v0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))) AND (CAST(v0.c1 AS REAL)))) IS TRUE)  as count FROM rt1, rt0, t1, v0);
SELECT ALL * FROM rt1, rt0, t1, v0 WHERE (((rt1.c1 COLLATE BINARY) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))) AND (CAST(v0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))) AND (CAST(v0.c1 AS REAL)))) IS TRUE)  as count FROM rt1, rt0, t1, v0);
SELECT ALL * FROM rt1, rt0, t1, v0 WHERE (((rt1.c1 COLLATE BINARY) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))) AND (CAST(v0.c1 AS REAL))));
SELECT COUNT(*) FROM t1, rt0, t0 NOT INDEXED NATURAL JOIN rt1 WHERE ((((rt0.c0, rt1.c3, rt1.c3, rt0.c1, t1.c0)) NOT BETWEEN ((((t0.c0) NOT NULL), rt1.c0 COLLATE RTRIM, CAST(x'' AS REAL), ((((rt0.c2)OR(rt0.c2)))AND(t1.c0)), ((rt1.c2)+(rt1.c3)))) AND ((((((t0.c0)AND(rt0.c3)))AND('')), (NOT (rt1.c0)), rt1.c2, ((rt0.c0)/(rt1.c0)), (rt1.c3 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt1.c3, rt1.c3, rt0.c1, t1.c0)) NOT BETWEEN ((((t0.c0) NOT NULL), rt1.c0 COLLATE RTRIM, CAST(x'' AS REAL), ((((rt0.c2)OR(rt0.c2)))AND(t1.c0)), ((rt1.c2)+(rt1.c3)))) AND ((((((t0.c0)AND(rt0.c3)))AND('')), (NOT (rt1.c0)), rt1.c2, ((rt0.c0)/(rt1.c0)), (rt1.c3 IN ()))))) IS TRUE)  as count FROM t1, rt0, t0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM t1, rt0, t0 NOT INDEXED NATURAL JOIN rt1 WHERE ((((rt0.c0, rt1.c3, rt1.c3, rt0.c1, t1.c0)) NOT BETWEEN ((((t0.c0) NOT NULL), rt1.c0 COLLATE RTRIM, CAST(x'' AS REAL), ((((rt0.c2)OR(rt0.c2)))AND(t1.c0)), ((rt1.c2)+(rt1.c3)))) AND ((((((t0.c0)AND(rt0.c3)))AND('')), (NOT (rt1.c0)), rt1.c2, ((rt0.c0)/(rt1.c0)), (rt1.c3 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt1.c3, rt1.c3, rt0.c1, t1.c0)) NOT BETWEEN ((((t0.c0) NOT NULL), rt1.c0 COLLATE RTRIM, CAST(x'' AS REAL), ((((rt0.c2)OR(rt0.c2)))AND(t1.c0)), ((rt1.c2)+(rt1.c3)))) AND ((((((t0.c0)AND(rt0.c3)))AND('')), (NOT (rt1.c0)), rt1.c2, ((rt0.c0)/(rt1.c0)), (rt1.c3 IN ()))))) IS TRUE)  as count FROM t1, rt0, t0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM t1, rt0, t0 NOT INDEXED NATURAL JOIN rt1 WHERE ((((rt0.c0, rt1.c3, rt1.c3, rt0.c1, t1.c0)) NOT BETWEEN ((((t0.c0) NOT NULL), rt1.c0 COLLATE RTRIM, CAST(x'' AS REAL), ((((rt0.c2)OR(rt0.c2)))AND(t1.c0)), ((rt1.c2)+(rt1.c3)))) AND ((((((t0.c0)AND(rt0.c3)))AND('')), (NOT (rt1.c0)), rt1.c2, ((rt0.c0)/(rt1.c0)), (rt1.c3 IN ())))));
SELECT * FROM rt1 WHERE (CAST(SQLITE_SOURCE_ID() AS BLOB)) ORDER BY (((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))<>('-735673708')) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_SOURCE_ID() AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))!=('-735673708')) DESC);
SELECT * FROM rt1 WHERE (CAST(SQLITE_SOURCE_ID() AS BLOB)) ORDER BY (((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))<>('-735673708')) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_SOURCE_ID() AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))!=('-735673708')) DESC);
SELECT * FROM rt1 WHERE (CAST(SQLITE_SOURCE_ID() AS BLOB)) ORDER BY (((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))<>('-735673708')) DESC;
SELECT * FROM t1, t0, rt1 WHERE (((CASE t1.c0  WHEN rt1.c3 THEN rt1.c3 WHEN t1.c0 THEN rt1.c1 WHEN t0.c0 THEN rt1.c0 ELSE t0.c0 END) NOT NULL)) ORDER BY CASE ((rt1.c0) ISNULL)  WHEN rt1.c0 COLLATE BINARY THEN rt1.c0 WHEN (((0.7973577868614459, rt1.c1, t0.c0)) BETWEEN ((NULL, rt1.c3, t0.c0)) AND ((t0.c0, t1.c0, rt1.c2))) THEN CAST(t1.c0 AS BLOB) WHEN CASE WHEN rt1.c3 THEN rt1.c3 WHEN t1.c0 THEN t1.c0 WHEN rt1.c2 THEN rt1.c3 END THEN CASE WHEN rt1.c0 THEN t1.c0 END ELSE ((t1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c0  WHEN rt1.c3 THEN rt1.c3 WHEN t1.c0 THEN rt1.c1 WHEN t0.c0 THEN rt1.c0 ELSE t0.c0 END) NOT NULL)) IS TRUE)  as count FROM t1, t0, rt1 ORDER BY CASE ((rt1.c0) ISNULL)  WHEN rt1.c0 COLLATE BINARY THEN rt1.c0 WHEN (((0.7973577868614459, rt1.c1, t0.c0)) BETWEEN ((NULL, rt1.c3, t0.c0)) AND ((t0.c0, t1.c0, rt1.c2))) THEN CAST(t1.c0 AS BLOB) WHEN CASE WHEN rt1.c3 THEN rt1.c3 WHEN t1.c0 THEN t1.c0 WHEN rt1.c2 THEN rt1.c3 END THEN CASE WHEN rt1.c0 THEN t1.c0 END ELSE ((t1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c1)) END DESC);
SELECT * FROM t1, t0, rt1 WHERE (((CASE t1.c0  WHEN rt1.c3 THEN rt1.c3 WHEN t1.c0 THEN rt1.c1 WHEN t0.c0 THEN rt1.c0 ELSE t0.c0 END) NOT NULL)) ORDER BY CASE ((rt1.c0) ISNULL)  WHEN rt1.c0 COLLATE BINARY THEN rt1.c0 WHEN (((0.7973577868614459, rt1.c1, t0.c0)) BETWEEN ((NULL, rt1.c3, t0.c0)) AND ((t0.c0, t1.c0, rt1.c2))) THEN CAST(t1.c0 AS BLOB) WHEN CASE WHEN rt1.c3 THEN rt1.c3 WHEN t1.c0 THEN t1.c0 WHEN rt1.c2 THEN rt1.c3 END THEN CASE WHEN rt1.c0 THEN t1.c0 END ELSE ((t1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c0  WHEN rt1.c3 THEN rt1.c3 WHEN t1.c0 THEN rt1.c1 WHEN t0.c0 THEN rt1.c0 ELSE t0.c0 END) NOT NULL)) IS TRUE)  as count FROM t1, t0, rt1 ORDER BY CASE ((rt1.c0) ISNULL)  WHEN rt1.c0 COLLATE BINARY THEN rt1.c0 WHEN (((0.7973577868614459, rt1.c1, t0.c0)) BETWEEN ((NULL, rt1.c3, t0.c0)) AND ((t0.c0, t1.c0, rt1.c2))) THEN CAST(t1.c0 AS BLOB) WHEN CASE WHEN rt1.c3 THEN rt1.c3 WHEN t1.c0 THEN t1.c0 WHEN rt1.c2 THEN rt1.c3 END THEN CASE WHEN rt1.c0 THEN t1.c0 END ELSE ((t1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c1)) END DESC);
SELECT * FROM t1, t0, rt1 WHERE (((CASE t1.c0  WHEN rt1.c3 THEN rt1.c3 WHEN t1.c0 THEN rt1.c1 WHEN t0.c0 THEN rt1.c0 ELSE t0.c0 END) NOT NULL)) ORDER BY CASE ((rt1.c0) ISNULL)  WHEN rt1.c0 COLLATE BINARY THEN rt1.c0 WHEN (((0.7973577868614459, rt1.c1, t0.c0)) BETWEEN ((NULL, rt1.c3, t0.c0)) AND ((t0.c0, t1.c0, rt1.c2))) THEN CAST(t1.c0 AS BLOB) WHEN CASE WHEN rt1.c3 THEN rt1.c3 WHEN t1.c0 THEN t1.c0 WHEN rt1.c2 THEN rt1.c3 END THEN CASE WHEN rt1.c0 THEN t1.c0 END ELSE ((t1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c1)) END DESC;
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((rt0.c0)IS NOT(v0.c4))) IS FALSE) FULL OUTER JOIN t1 ON v0.c4 INNER JOIN rt1 ON (((((rt1.c1)<=(v0.c4)), (v0.c2 IN (rt0.c0)), json_array_length(v0.c0, rt1.c3), ((v0.c3)IS(v0.c2)), ((x'') BETWEEN (NULL) AND (rt1.c3))))=(((('0.4538740971345887')LIKE(t0.c0)), ((v0.c4)IS(rt0.c2)), ((rt0.c3)>>(v0.c2)), ((rt1.c0)OR(rt0.c2)), ((v0.c4)AND(1.476342594E9))))) CROSS JOIN t0 ON (((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) IN ()) WHERE ((((((v0.c3))==((v0.c3))))/((NOT (v0.c4))))) ORDER BY 0.8443634904528678 ASC, rt0.c2 DESC, ((rt0.c3 COLLATE BINARY)OR((((v0.c1, rt0.c2, rt1.c3))<>((t0.c0, v0.c0, v0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c3))=((v0.c3))))/((NOT (v0.c4))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c0)IS NOT(v0.c4))) IS FALSE) FULL OUTER JOIN t1 ON v0.c4 INNER JOIN rt1 ON (((((rt1.c1)<=(v0.c4)), (v0.c2 IN (rt0.c0)), json_array_length(v0.c0, rt1.c3), ((v0.c3)IS(v0.c2)), ((x'') BETWEEN (NULL) AND (rt1.c3))))=(((('0.4538740971345887')LIKE(t0.c0)), ((v0.c4)IS(rt0.c2)), ((rt0.c3)>>(v0.c2)), ((rt1.c0)OR(rt0.c2)), ((v0.c4)AND(1.476342594E9))))) CROSS JOIN t0 ON (((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) IN ()) ORDER BY 0.8443634904528678 ASC, rt0.c2 DESC, ((rt0.c3 COLLATE BINARY)OR((((v0.c1, rt0.c2, rt1.c3))<>((t0.c0, v0.c0, v0.c1))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((rt0.c0)IS NOT(v0.c4))) IS FALSE) FULL OUTER JOIN t1 ON v0.c4 INNER JOIN rt1 ON (((((rt1.c1)<=(v0.c4)), (v0.c2 IN (rt0.c0)), json_array_length(v0.c0, rt1.c3), ((v0.c3)IS(v0.c2)), ((x'') BETWEEN (NULL) AND (rt1.c3))))=(((('0.4538740971345887')LIKE(t0.c0)), ((v0.c4)IS(rt0.c2)), ((rt0.c3)>>(v0.c2)), ((rt1.c0)OR(rt0.c2)), ((v0.c4)AND(1.476342594E9))))) CROSS JOIN t0 ON (((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) IN ()) WHERE ((((((v0.c3))==((v0.c3))))/((NOT (v0.c4))))) ORDER BY 0.8443634904528678 ASC, rt0.c2 DESC, ((rt0.c3 COLLATE BINARY)OR((((v0.c1, rt0.c2, rt1.c3))<>((t0.c0, v0.c0, v0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c3))=((v0.c3))))/((NOT (v0.c4))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c0)IS NOT(v0.c4))) IS FALSE) FULL OUTER JOIN t1 ON v0.c4 INNER JOIN rt1 ON (((((rt1.c1)<=(v0.c4)), (v0.c2 IN (rt0.c0)), json_array_length(v0.c0, rt1.c3), ((v0.c3)IS(v0.c2)), ((x'') BETWEEN (NULL) AND (rt1.c3))))=(((('0.4538740971345887')LIKE(t0.c0)), ((v0.c4)IS(rt0.c2)), ((rt0.c3)>>(v0.c2)), ((rt1.c0)OR(rt0.c2)), ((v0.c4)AND(1.476342594E9))))) CROSS JOIN t0 ON (((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) IN ()) ORDER BY 0.8443634904528678 ASC, rt0.c2 DESC, ((rt0.c3 COLLATE BINARY)OR((((v0.c1, rt0.c2, rt1.c3))<>((t0.c0, v0.c0, v0.c1))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((rt0.c0)IS NOT(v0.c4))) IS FALSE) FULL OUTER JOIN t1 ON v0.c4 INNER JOIN rt1 ON (((((rt1.c1)<=(v0.c4)), (v0.c2 IN (rt0.c0)), json_array_length(v0.c0, rt1.c3), ((v0.c3)IS(v0.c2)), ((x'') BETWEEN (NULL) AND (rt1.c3))))=(((('0.4538740971345887')LIKE(t0.c0)), ((v0.c4)IS(rt0.c2)), ((rt0.c3)>>(v0.c2)), ((rt1.c0)OR(rt0.c2)), ((v0.c4)AND(1.476342594E9))))) CROSS JOIN t0 ON (((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) IN ()) WHERE ((((((v0.c3))==((v0.c3))))/((NOT (v0.c4))))) ORDER BY 0.8443634904528678 ASC, rt0.c2 DESC, ((rt0.c3 COLLATE BINARY)OR((((v0.c1, rt0.c2, rt1.c3))<>((t0.c0, v0.c0, v0.c1))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON CASE WHEN ((v0.c3)<<(v0.c0)) THEN (rt1.c0 IN ()) WHEN CAST(rt0.c3 AS BLOB) THEN ((v0.c4)GLOB(v0.c4)) WHEN COALESCE(rt1.c3, '365467292') THEN ((((v0.c1)OR(v0.c2)))OR(rt0.c0)) END CROSS JOIN rt0 ON ((((rt1.c2)/(rt1.c0))) ISNULL) RIGHT OUTER JOIN rt1 ON (((v0.c1 IN ()))-(TIME(v0.c1, rt0.c2, rt0.c1, v0.c2, rt0.c0))) WHERE (((rt1.c0 COLLATE BINARY) IS FALSE)) ORDER BY CAST(((v0.c1) NOTNULL) AS REAL), (NOT (CASE WHEN rt1.c1 THEN rt1.c0 ELSE x'' END));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CASE WHEN ((v0.c3)<<(v0.c0)) THEN (rt1.c0 IN ()) WHEN CAST(rt0.c3 AS BLOB) THEN ((v0.c4)GLOB(v0.c4)) WHEN COALESCE(rt1.c3, '365467292') THEN ((((v0.c1)OR(v0.c2)))OR(rt0.c0)) END CROSS JOIN rt0 ON ((((rt1.c2)/(rt1.c0))) ISNULL) RIGHT OUTER JOIN rt1 ON (((v0.c1 IN ()))-(TIME(v0.c1, rt0.c2, rt0.c1, v0.c2, rt0.c0))) ORDER BY CAST(((v0.c1) NOTNULL) AS REAL), (NOT (CASE WHEN rt1.c1 THEN rt1.c0 ELSE x'' END)));
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON CASE WHEN ((v0.c3)<<(v0.c0)) THEN (rt1.c0 IN ()) WHEN CAST(rt0.c3 AS BLOB) THEN ((v0.c4)GLOB(v0.c4)) WHEN COALESCE(rt1.c3, '365467292') THEN ((((v0.c1)OR(v0.c2)))OR(rt0.c0)) END CROSS JOIN rt0 ON ((((rt1.c2)/(rt1.c0))) ISNULL) RIGHT OUTER JOIN rt1 ON (((v0.c1 IN ()))-(TIME(v0.c1, rt0.c2, rt0.c1, v0.c2, rt0.c0))) WHERE (((rt1.c0 COLLATE BINARY) IS FALSE)) ORDER BY CAST(((v0.c1) NOTNULL) AS REAL), (NOT (CASE WHEN rt1.c1 THEN rt1.c0 ELSE x'' END));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CASE WHEN ((v0.c3)<<(v0.c0)) THEN (rt1.c0 IN ()) WHEN CAST(rt0.c3 AS BLOB) THEN ((v0.c4)GLOB(v0.c4)) WHEN COALESCE(rt1.c3, '365467292') THEN ((((v0.c1)OR(v0.c2)))OR(rt0.c0)) END CROSS JOIN rt0 ON ((((rt1.c2)/(rt1.c0))) ISNULL) RIGHT OUTER JOIN rt1 ON (((v0.c1 IN ()))-(TIME(v0.c1, rt0.c2, rt0.c1, v0.c2, rt0.c0))) ORDER BY CAST(((v0.c1) NOTNULL) AS REAL), (NOT (CASE WHEN rt1.c1 THEN rt1.c0 ELSE x'' END)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (((rt0.c3 IN ())) IS TRUE) FULL OUTER JOIN rt1 ON CAST(rt1.c0 AS REAL) COLLATE NOCASE WHERE (rt0.c3) ORDER BY ((rt0.c3)||(rt1.c0)) COLLATE BINARY ASC  NULLS LAST, CAST(rt0.c0 AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (((rt0.c3 IN ())) IS TRUE) FULL OUTER JOIN rt1 ON CAST(rt1.c0 AS REAL) COLLATE NOCASE ORDER BY ((rt0.c3)||(rt1.c0)) COLLATE BINARY ASC  NULLS LAST, CAST(rt0.c0 AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (((rt0.c3 IN ())) IS TRUE) FULL OUTER JOIN rt1 ON CAST(rt1.c0 AS REAL) COLLATE NOCASE WHERE (rt0.c3) ORDER BY ((rt0.c3)||(rt1.c0)) COLLATE BINARY ASC  NULLS LAST, CAST(rt0.c0 AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (((rt0.c3 IN ())) IS TRUE) FULL OUTER JOIN rt1 ON CAST(rt1.c0 AS REAL) COLLATE NOCASE ORDER BY ((rt0.c3)||(rt1.c0)) COLLATE BINARY ASC  NULLS LAST, CAST(rt0.c0 AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (((rt0.c3 IN ())) IS TRUE) FULL OUTER JOIN rt1 ON CAST(rt1.c0 AS REAL) COLLATE NOCASE WHERE (rt0.c3) ORDER BY ((rt0.c3)||(rt1.c0)) COLLATE BINARY ASC  NULLS LAST, CAST(rt0.c0 AS NUMERIC) DESC  NULLS FIRST;
SELECT * FROM t1, rt1, v0, t0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t1, rt1, v0, t0);
SELECT * FROM t1, rt1, v0, t0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t1, rt1, v0, t0);
SELECT * FROM t1, rt1, v0, t0 WHERE (rt1.c2);
SELECT ALL * FROM t0, v0 WHERE ((- (CASE v0.c4  WHEN v0.c4 THEN v0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE v0.c4  WHEN v0.c4 THEN v0.c1 END))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((- (CASE v0.c4  WHEN v0.c4 THEN v0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE v0.c4  WHEN v0.c4 THEN v0.c1 END))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((- (CASE v0.c4  WHEN v0.c4 THEN v0.c1 END)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c3 AS NUMERIC))/(((v0.c4)<=(v0.c4))))) ORDER BY rt0.c0, (+ (rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS NUMERIC))/(((v0.c4)<=(v0.c4))))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0, (+ (rt0.c2)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c3 AS NUMERIC))/(((v0.c4)<=(v0.c4))))) ORDER BY rt0.c0, (+ (rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS NUMERIC))/(((v0.c4)<=(v0.c4))))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0, (+ (rt0.c2)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c3 AS NUMERIC))/(((v0.c4)<=(v0.c4))))) ORDER BY rt0.c0, (+ (rt0.c2));
SELECT ALL * FROM rt1, rt0, v0, t0, t1 WHERE ('-1318608096') ORDER BY (rt1.c0 IN ((NOT (v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (('-1318608096') IS TRUE)  as count FROM rt1, rt0, v0, t0, t1 ORDER BY (rt1.c0 IN ((NOT (v0.c1)))));
SELECT ALL * FROM rt1, rt0, v0, t0, t1 WHERE ('-1318608096') ORDER BY (rt1.c0 IN ((NOT (v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (('-1318608096') IS TRUE)  as count FROM rt1, rt0, v0, t0, t1 ORDER BY (rt1.c0 IN ((NOT (v0.c1)))));
SELECT ALL * FROM rt1, rt0, v0, t0, t1 WHERE ('-1318608096') ORDER BY (rt1.c0 IN ((NOT (v0.c1))));
SELECT ALL * FROM v0 INNER JOIN t1 ON x'' RIGHT OUTER JOIN t0 ON ((((rt1.c0 COLLATE NOCASE)AND(((t0.c0) NOT NULL))))OR(((rt1.c2) IS FALSE))) CROSS JOIN rt1 ON TRIM(DISTINCT rt1.c1) COLLATE BINARY WHERE (CAST(CASE '\n<'  WHEN v0.c1 THEN t0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE '\n<'  WHEN v0.c1 THEN t0.c0 END AS BLOB)) IS TRUE)  as count FROM v0 INNER JOIN t1 ON x'' RIGHT OUTER JOIN t0 ON ((((rt1.c0 COLLATE NOCASE)AND(((t0.c0) NOT NULL))))OR(((rt1.c2) IS FALSE))) CROSS JOIN rt1 ON TRIM(DISTINCT rt1.c1) COLLATE BINARY);
SELECT ALL * FROM v0 INNER JOIN t1 ON x'' RIGHT OUTER JOIN t0 ON ((((rt1.c0 COLLATE NOCASE)AND(((t0.c0) NOT NULL))))OR(((rt1.c2) IS FALSE))) CROSS JOIN rt1 ON TRIM(DISTINCT rt1.c1) COLLATE BINARY WHERE (CAST(CASE '\n<'  WHEN v0.c1 THEN t0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE '\n<'  WHEN v0.c1 THEN t0.c0 END AS BLOB)) IS TRUE)  as count FROM v0 INNER JOIN t1 ON x'' RIGHT OUTER JOIN t0 ON ((((rt1.c0 COLLATE NOCASE)AND(((t0.c0) NOT NULL))))OR(((rt1.c2) IS FALSE))) CROSS JOIN rt1 ON TRIM(DISTINCT rt1.c1) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0, v0 LEFT OUTER JOIN rt1 ON json_array((((v0.c1, rt0.c3, v0.c0)) BETWEEN ((v0.c2, rt0.c0, rt1.c2)) AND ((v0.c3, rt0.c0, rt0.c1))), t0.c0 COLLATE RTRIM, ((v0.c4)>>(t1.c0)), NULL) INNER JOIN t1 ON json((t0.c0 IN (v0.c0))) WHERE (((CAST(rt1.c0 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM t0, rt0, v0 LEFT OUTER JOIN rt1 ON json_array((((v0.c1, rt0.c3, v0.c0)) BETWEEN ((v0.c2, rt0.c0, rt1.c2)) AND ((v0.c3, rt0.c0, rt0.c1))), t0.c0 COLLATE RTRIM, ((v0.c4)>>(t1.c0)), NULL) INNER JOIN t1 ON json((t0.c0 IN (v0.c0))));
SELECT ALL COUNT(*) FROM t0, rt0, v0 LEFT OUTER JOIN rt1 ON json_array((((v0.c1, rt0.c3, v0.c0)) BETWEEN ((v0.c2, rt0.c0, rt1.c2)) AND ((v0.c3, rt0.c0, rt0.c1))), t0.c0 COLLATE RTRIM, ((v0.c4)>>(t1.c0)), NULL) INNER JOIN t1 ON json((t0.c0 IN (v0.c0))) WHERE (((CAST(rt1.c0 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM t0, rt0, v0 LEFT OUTER JOIN rt1 ON json_array((((v0.c1, rt0.c3, v0.c0)) BETWEEN ((v0.c2, rt0.c0, rt1.c2)) AND ((v0.c3, rt0.c0, rt0.c1))), t0.c0 COLLATE RTRIM, ((v0.c4)>>(t1.c0)), NULL) INNER JOIN t1 ON json((t0.c0 IN (v0.c0))));
SELECT ALL * FROM rt0 INDEXED BY i66, v0 WHERE ((((rt0.c3 IN ()))==(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY (+ (CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ()))=(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 INDEXED BY i66, v0 ORDER BY (+ (CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 INDEXED BY i66, v0 WHERE ((((rt0.c3 IN ()))==(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY (+ (CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ()))=(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 INDEXED BY i66, v0 ORDER BY (+ (CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE ((t0.c0 IN ((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ((rt1.c0 IN ())))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((t0.c0 IN ((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ((rt1.c0 IN ())))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((t0.c0 IN ((rt1.c0 IN ()))));
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (((((t1.c0)AND(v0.c3)))OR(v0.c3))) AND (0.5375306961279459)) FULL OUTER JOIN t0 ON CAST(v0.c2 AS BLOB) FULL OUTER JOIN v0 ON (((rt0.c0)&(rt0.c3)) IN ((t0.c0 IN ()))) WHERE (((v0.c1 IN (NULL)) IN (v0.c0 COLLATE RTRIM))) ORDER BY ((((((v0.c4) IS TRUE))AND('')))AND(v0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c1 IN (NULL)) IN (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (((((t1.c0)AND(v0.c3)))OR(v0.c3))) AND (0.5375306961279459)) FULL OUTER JOIN t0 ON CAST(v0.c2 AS BLOB) FULL OUTER JOIN v0 ON (((rt0.c0)&(rt0.c3)) IN ((t0.c0 IN ()))) ORDER BY ((((((v0.c4) IS TRUE))AND('')))AND(v0.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (((((t1.c0)AND(v0.c3)))OR(v0.c3))) AND (0.5375306961279459)) FULL OUTER JOIN t0 ON CAST(v0.c2 AS BLOB) FULL OUTER JOIN v0 ON (((rt0.c0)&(rt0.c3)) IN ((t0.c0 IN ()))) WHERE (((v0.c1 IN (NULL)) IN (v0.c0 COLLATE RTRIM))) ORDER BY ((((((v0.c4) IS TRUE))AND('')))AND(v0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c1 IN (NULL)) IN (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (((((t1.c0)AND(v0.c3)))OR(v0.c3))) AND (0.5375306961279459)) FULL OUTER JOIN t0 ON CAST(v0.c2 AS BLOB) FULL OUTER JOIN v0 ON (((rt0.c0)&(rt0.c3)) IN ((t0.c0 IN ()))) ORDER BY ((((((v0.c4) IS TRUE))AND('')))AND(v0.c0 COLLATE RTRIM)) ASC);
SELECT * FROM t0, v0, rt1, rt0 WHERE (json_array(0.8081283440395771 COLLATE NOCASE, (+ (rt0.c3)))) ORDER BY (((TRIM(v0.c0)))==(((v0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ((json_array(0.8081283440395771 COLLATE NOCASE, (+ (rt0.c3)))) IS TRUE)  as count FROM t0, v0, rt1, rt0 ORDER BY (((TRIM(v0.c0)))==(((v0.c4 IN ())))));
SELECT * FROM t0, v0, rt1, rt0 WHERE (json_array(0.8081283440395771 COLLATE NOCASE, (+ (rt0.c3)))) ORDER BY (((TRIM(v0.c0)))==(((v0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ((json_array(0.8081283440395771 COLLATE NOCASE, (+ (rt0.c3)))) IS TRUE)  as count FROM t0, v0, rt1, rt0 ORDER BY (((TRIM(v0.c0)))==(((v0.c4 IN ())))));
SELECT * FROM t0, v0, rt1, rt0 WHERE (json_array(0.8081283440395771 COLLATE NOCASE, (+ (rt0.c3)))) ORDER BY (((TRIM(v0.c0)))==(((v0.c4 IN ()))));
SELECT ALL * FROM t1, v0, rt0 CROSS JOIN t0 ON (((((0xffffffffe15d9bee) NOT BETWEEN (v0.c1) AND (v0.c0))))>((HEX('f')))) WHERE (CAST(SQLITE_COMPILEOPTION_USED(v0.c1) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SQLITE_COMPILEOPTION_USED(v0.c1) AS TEXT)) IS TRUE)  as count FROM t1, v0, rt0 CROSS JOIN t0 ON (((((0Xffffffffe15d9bee) NOT BETWEEN (v0.c1) AND (v0.c0))))>((HEX('f')))));
SELECT ALL * FROM t1, v0, rt0 CROSS JOIN t0 ON (((((0xffffffffe15d9bee) NOT BETWEEN (v0.c1) AND (v0.c0))))>((HEX('f')))) WHERE (CAST(SQLITE_COMPILEOPTION_USED(v0.c1) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SQLITE_COMPILEOPTION_USED(v0.c1) AS TEXT)) IS TRUE)  as count FROM t1, v0, rt0 CROSS JOIN t0 ON (((((0Xffffffffe15d9bee) NOT BETWEEN (v0.c1) AND (v0.c0))))>((HEX('f')))));
SELECT ALL * FROM t1, v0, rt0 CROSS JOIN t0 ON (((((0xffffffffe15d9bee) NOT BETWEEN (v0.c1) AND (v0.c0))))>((HEX('f')))) WHERE (CAST(SQLITE_COMPILEOPTION_USED(v0.c1) AS TEXT));
SELECT * FROM v0, t1, rt1, t0 WHERE (((((v0.c1) IS TRUE)) IS FALSE)) ORDER BY json_valid((- (v0.c2))) ASC, x'934e';
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM v0, t1, rt1, t0 ORDER BY json_valid((- (v0.c2))) ASC, x'934e');
SELECT * FROM v0, t1, rt1, t0 WHERE (((((v0.c1) IS TRUE)) IS FALSE)) ORDER BY json_valid((- (v0.c2))) ASC, x'934e';
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM v0, t1, rt1, t0 ORDER BY json_valid((- (v0.c2))) ASC, x'934e');
SELECT * FROM v0, t1, rt1, t0 WHERE (((((v0.c1) IS TRUE)) IS FALSE)) ORDER BY json_valid((- (v0.c2))) ASC, x'934e';
SELECT COUNT(*) FROM rt1, t1, t0 WHERE (CAST(((((rt1.c3)OR(rt1.c0)))OR(t1.c0)) AS REAL)) ORDER BY (- ((('MWj') ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c3)OR(rt1.c0)))OR(t1.c0)) AS REAL)) IS TRUE)  as count FROM rt1, t1, t0 ORDER BY (- ((('MWj') ISNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1, t0 WHERE (CAST(((((rt1.c3)OR(rt1.c0)))OR(t1.c0)) AS REAL)) ORDER BY (- ((('MWj') ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c3)OR(rt1.c0)))OR(t1.c0)) AS REAL)) IS TRUE)  as count FROM rt1, t1, t0 ORDER BY (- ((('MWj') ISNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1, t0 WHERE (CAST(((((rt1.c3)OR(rt1.c0)))OR(t1.c0)) AS REAL)) ORDER BY (- ((('MWj') ISNULL)))  NULLS FIRST;
SELECT ALL * FROM rt1, t1, t0, v0, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt1, t1, t0, v0, rt0);
SELECT ALL * FROM rt1, t1, t0, v0, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt1, t1, t0, v0, rt0);
SELECT ALL * FROM rt1, t1, t0, v0, rt0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0, rt1, v0, rt0, t1 WHERE (rt0.c1) ORDER BY ((1590276.0)!=(v0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt1, v0, rt0 NOT INDEXED, t1 ORDER BY ((1590276.0)!=(v0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1, v0, rt0, t1 WHERE (rt0.c1) ORDER BY ((1590276.0)!=(v0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt1, v0, rt0 NOT INDEXED, t1 ORDER BY ((1590276.0)!=(v0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1, v0, rt0, t1 WHERE (rt0.c1) ORDER BY ((1590276.0)!=(v0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (0X497fd669) ORDER BY TRIM(DISTINCT ((x'')AND(t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0X497fd669) IS TRUE)  as count FROM t0 ORDER BY TRIM(DISTINCT ((x'')AND(t0.c0))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (0X497fd669) ORDER BY TRIM(DISTINCT ((x'')AND(t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0X497fd669) IS TRUE)  as count FROM t0 ORDER BY TRIM(DISTINCT ((x'')AND(t0.c0))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (0X497fd669) ORDER BY TRIM(DISTINCT ((x'')AND(t0.c0))) DESC;
SELECT ALL COUNT(*) FROM t0, t1, rt1, v0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0, t1, rt1, v0, rt0);
SELECT ALL COUNT(*) FROM t0, t1, rt1, v0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0, t1, rt1, v0, rt0);
SELECT ALL COUNT(*) FROM t0, t1, rt1, v0, rt0 WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE (((((rt1.c3)<>(rt1.c0)))GLOB(COALESCE(v0.c3, rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)<>(rt1.c0)))GLOB(COALESCE(v0.c3, rt1.c3)))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE (((((rt1.c3)<>(rt1.c0)))GLOB(COALESCE(v0.c3, rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)<>(rt1.c0)))GLOB(COALESCE(v0.c3, rt1.c3)))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE (((((rt1.c3)<>(rt1.c0)))GLOB(COALESCE(v0.c3, rt1.c3))));
SELECT COUNT(*) FROM v0, rt0, t0 WHERE (x'070e');
SELECT SUM(count) FROM (SELECT ALL ((x'070e') IS TRUE)  as count FROM v0, rt0, t0);
SELECT COUNT(*) FROM v0, rt0, t0 WHERE (x'070e');
SELECT SUM(count) FROM (SELECT ALL ((x'070e') IS TRUE)  as count FROM v0, rt0, t0);
SELECT COUNT(*) FROM v0, rt0, t0 WHERE (x'070e');
SELECT ALL * FROM t1, rt1, v0 WHERE ((LTRIM(rt1.c2, rt1.c0) IN ((((v0.c3)) NOT BETWEEN ((v0.c1)) AND ((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((LTRIM(rt1.c2, rt1.c0) IN ((((v0.c3)) NOT BETWEEN ((v0.c1)) AND ((rt1.c3)))))) IS TRUE)  as count FROM t1, rt1, v0);
SELECT ALL * FROM t1, rt1, v0 WHERE ((LTRIM(rt1.c2, rt1.c0) IN ((((v0.c3)) NOT BETWEEN ((v0.c1)) AND ((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((LTRIM(rt1.c2, rt1.c0) IN ((((v0.c3)) NOT BETWEEN ((v0.c1)) AND ((rt1.c3)))))) IS TRUE)  as count FROM t1, rt1, v0);
SELECT ALL * FROM t1, rt1, v0 WHERE ((LTRIM(rt1.c2, rt1.c0) IN ((((v0.c3)) NOT BETWEEN ((v0.c1)) AND ((rt1.c3))))));
SELECT * FROM t1, rt0, rt1, v0, t0 WHERE ((((CASE WHEN v0.c0 THEN t0.c0 ELSE rt0.c3 END, (+ (rt0.c1)), ((((x'')OR(rt1.c2)))AND(rt1.c1))))==(((+ (rt0.c2)), (+ (rt0.c2)), ('1441845482' IN ()))))) ORDER BY ((((v0.c0) NOT BETWEEN (t1.c0) AND (''))) BETWEEN (((t1.c0)<(v0.c1))) AND ((((rt1.c1, t0.c0, v0.c4)) BETWEEN ((v0.c3, rt0.c2, t0.c0)) AND ((rt0.c2, NULL, v0.c3)))))  NULLS LAST, ((((((((((rt1.c3)OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))OR(v0.c3)))<<(((v0.c4)GLOB(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN v0.c0 THEN t0.c0 ELSE rt0.c3 END, (+ (rt0.c1)), ((((x'')OR(rt1.c2)))AND(rt1.c1))))=(((+ (rt0.c2)), (+ (rt0.c2)), ('1441845482' IN ()))))) IS TRUE)  as count FROM t1, rt0, rt1, v0, t0 ORDER BY ((((v0.c0) NOT BETWEEN (t1.c0) AND (''))) BETWEEN (((t1.c0)<(v0.c1))) AND ((((rt1.c1, t0.c0, v0.c4)) BETWEEN ((v0.c3, rt0.c2, t0.c0)) AND ((rt0.c2, NULL, v0.c3)))))  NULLS LAST, ((((((((((rt1.c3)OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))OR(v0.c3)))<<(((v0.c4)GLOB(NULL)))));
SELECT * FROM t1, rt0, rt1, v0, t0 WHERE ((((CASE WHEN v0.c0 THEN t0.c0 ELSE rt0.c3 END, (+ (rt0.c1)), ((((x'')OR(rt1.c2)))AND(rt1.c1))))==(((+ (rt0.c2)), (+ (rt0.c2)), ('1441845482' IN ()))))) ORDER BY ((((v0.c0) NOT BETWEEN (t1.c0) AND (''))) BETWEEN (((t1.c0)<(v0.c1))) AND ((((rt1.c1, t0.c0, v0.c4)) BETWEEN ((v0.c3, rt0.c2, t0.c0)) AND ((rt0.c2, NULL, v0.c3)))))  NULLS LAST, ((((((((((rt1.c3)OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))OR(v0.c3)))<<(((v0.c4)GLOB(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN v0.c0 THEN t0.c0 ELSE rt0.c3 END, (+ (rt0.c1)), ((((x'')OR(rt1.c2)))AND(rt1.c1))))=(((+ (rt0.c2)), (+ (rt0.c2)), ('1441845482' IN ()))))) IS TRUE)  as count FROM t1, rt0, rt1, v0, t0 ORDER BY ((((v0.c0) NOT BETWEEN (t1.c0) AND (''))) BETWEEN (((t1.c0)<(v0.c1))) AND ((((rt1.c1, t0.c0, v0.c4)) BETWEEN ((v0.c3, rt0.c2, t0.c0)) AND ((rt0.c2, NULL, v0.c3)))))  NULLS LAST, ((((((((((rt1.c3)OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))OR(v0.c3)))<<(((v0.c4)GLOB(NULL)))));
SELECT * FROM t1, rt0, rt1, v0, t0 WHERE ((((CASE WHEN v0.c0 THEN t0.c0 ELSE rt0.c3 END, (+ (rt0.c1)), ((((x'')OR(rt1.c2)))AND(rt1.c1))))==(((+ (rt0.c2)), (+ (rt0.c2)), ('1441845482' IN ()))))) ORDER BY ((((v0.c0) NOT BETWEEN (t1.c0) AND (''))) BETWEEN (((t1.c0)<(v0.c1))) AND ((((rt1.c1, t0.c0, v0.c4)) BETWEEN ((v0.c3, rt0.c2, t0.c0)) AND ((rt0.c2, NULL, v0.c3)))))  NULLS LAST, ((((((((((rt1.c3)OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))OR(v0.c3)))<<(((v0.c4)GLOB(NULL))));
SELECT ALL COUNT(*) FROM rt0, rt1, v0, t1, t0 WHERE (((((COALESCE(rt1.c0, v0.c2, rt0.c1, rt1.c1))OR(rt0.c1)))OR(rt0.c3))) ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (x'') AND (((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c0))))  NULLS LAST, ((((CASE WHEN rt1.c3 THEN v0.c3 WHEN t1.c0 THEN rt0.c1 WHEN v0.c1 THEN t0.c0 END)AND(rt1.c0 COLLATE RTRIM)))OR(LTRIM(v0.c2, v0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(rt1.c0, v0.c2, rt0.c1, rt1.c1))OR(rt0.c1)))OR(rt0.c3))) IS TRUE)  as count FROM rt0, rt1, v0, t1, t0 ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (x'') AND (((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c0))))  NULLS LAST, ((((CASE WHEN rt1.c3 THEN v0.c3 WHEN t1.c0 THEN rt0.c1 WHEN v0.c1 THEN t0.c0 END)AND(rt1.c0 COLLATE RTRIM)))OR(LTRIM(v0.c2, v0.c2))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1, v0, t1, t0 WHERE (((((COALESCE(rt1.c0, v0.c2, rt0.c1, rt1.c1))OR(rt0.c1)))OR(rt0.c3))) ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (x'') AND (((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c0))))  NULLS LAST, ((((CASE WHEN rt1.c3 THEN v0.c3 WHEN t1.c0 THEN rt0.c1 WHEN v0.c1 THEN t0.c0 END)AND(rt1.c0 COLLATE RTRIM)))OR(LTRIM(v0.c2, v0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(rt1.c0, v0.c2, rt0.c1, rt1.c1))OR(rt0.c1)))OR(rt0.c3))) IS TRUE)  as count FROM rt0, rt1, v0, t1, t0 ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (x'') AND (((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c0))))  NULLS LAST, ((((CASE WHEN rt1.c3 THEN v0.c3 WHEN t1.c0 THEN rt0.c1 WHEN v0.c1 THEN t0.c0 END)AND(rt1.c0 COLLATE RTRIM)))OR(LTRIM(v0.c2, v0.c2))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1, v0, t1, t0 WHERE (((((COALESCE(rt1.c0, v0.c2, rt0.c1, rt1.c1))OR(rt0.c1)))OR(rt0.c3))) ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (x'') AND (((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c0))))  NULLS LAST, ((((CASE WHEN rt1.c3 THEN v0.c3 WHEN t1.c0 THEN rt0.c1 WHEN v0.c1 THEN t0.c0 END)AND(rt1.c0 COLLATE RTRIM)))OR(LTRIM(v0.c2, v0.c2))) DESC;
SELECT * FROM t0 RIGHT OUTER JOIN t1 ON -1115514523 INNER JOIN v0 ON CAST(t0.c0 AS REAL) WHERE (v0.c0) ORDER BY ((t0.c0 COLLATE BINARY) ISNULL) DESC  NULLS FIRST, CASE (+ (v0.c1))  WHEN NULL THEN (v0.c0 IN (v0.c1, x'be3f')) WHEN CAST(NULL AS TEXT) THEN t1.c0 WHEN t1.c0 COLLATE RTRIM THEN CAST(v0.c3 AS TEXT) ELSE v0.c2 COLLATE NOCASE END, (~ (0xffffffffac34c89b));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON -1115514523 INNER JOIN v0 ON CAST(t0.c0 AS REAL) ORDER BY ((t0.c0 COLLATE BINARY) ISNULL) DESC  NULLS FIRST, CASE (+ (v0.c1))  WHEN NULL THEN (v0.c0 IN (v0.c1, x'be3f')) WHEN CAST(NULL AS TEXT) THEN t1.c0 WHEN t1.c0 COLLATE RTRIM THEN CAST(v0.c3 AS TEXT) ELSE v0.c2 COLLATE NOCASE END, (~ (0Xffffffffac34c89b)));
SELECT * FROM t0 RIGHT OUTER JOIN t1 ON -1115514523 INNER JOIN v0 ON CAST(t0.c0 AS REAL) WHERE (v0.c0) ORDER BY ((t0.c0 COLLATE BINARY) ISNULL) DESC  NULLS FIRST, CASE (+ (v0.c1))  WHEN NULL THEN (v0.c0 IN (v0.c1, x'be3f')) WHEN CAST(NULL AS TEXT) THEN t1.c0 WHEN t1.c0 COLLATE RTRIM THEN CAST(v0.c3 AS TEXT) ELSE v0.c2 COLLATE NOCASE END, (~ (0xffffffffac34c89b));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON -1115514523 INNER JOIN v0 ON CAST(t0.c0 AS REAL) ORDER BY ((t0.c0 COLLATE BINARY) ISNULL) DESC  NULLS FIRST, CASE (+ (v0.c1))  WHEN NULL THEN (v0.c0 IN (v0.c1, x'be3f')) WHEN CAST(NULL AS TEXT) THEN t1.c0 WHEN t1.c0 COLLATE RTRIM THEN CAST(v0.c3 AS TEXT) ELSE v0.c2 COLLATE NOCASE END, (~ (0Xffffffffac34c89b)));
SELECT * FROM t0 RIGHT OUTER JOIN t1 ON -1115514523 INNER JOIN v0 ON CAST(t0.c0 AS REAL) WHERE (v0.c0) ORDER BY ((t0.c0 COLLATE BINARY) ISNULL) DESC  NULLS FIRST, CASE (+ (v0.c1))  WHEN NULL THEN (v0.c0 IN (v0.c1, x'be3f')) WHEN CAST(NULL AS TEXT) THEN t1.c0 WHEN t1.c0 COLLATE RTRIM THEN CAST(v0.c3 AS TEXT) ELSE v0.c2 COLLATE NOCASE END, (~ (0xffffffffac34c89b));
SELECT * FROM t0 WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c2 COLLATE RTRIM)GLOB(x'')));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)GLOB(x''))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c2 COLLATE RTRIM)GLOB(x'')));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)GLOB(x''))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c2 COLLATE RTRIM)GLOB(x'')));
SELECT ALL * FROM t0, v0, t1, rt1, rt0 WHERE (((((rt1.c3) IS TRUE))LIKE(CAST(v0.c2 AS INTEGER)))) ORDER BY (((((('-65985744')OR(v0.c4)))OR('-816877086'))) IS FALSE) DESC, ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) IS TRUE))LIKE(CAST(v0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0, v0, t1, rt1, rt0 ORDER BY (((((('-65985744')OR(v0.c4)))OR('-816877086'))) IS FALSE) DESC, ''  NULLS FIRST);
SELECT ALL * FROM t0, v0, t1, rt1, rt0 WHERE (((((rt1.c3) IS TRUE))LIKE(CAST(v0.c2 AS INTEGER)))) ORDER BY (((((('-65985744')OR(v0.c4)))OR('-816877086'))) IS FALSE) DESC, ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) IS TRUE))LIKE(CAST(v0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0, v0, t1, rt1, rt0 ORDER BY (((((('-65985744')OR(v0.c4)))OR('-816877086'))) IS FALSE) DESC, ''  NULLS FIRST);
SELECT ALL * FROM t0, v0, t1, rt1, rt0 WHERE (((((rt1.c3) IS TRUE))LIKE(CAST(v0.c2 AS INTEGER)))) ORDER BY (((((('-65985744')OR(v0.c4)))OR('-816877086'))) IS FALSE) DESC, ''  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN NULL END) ORDER BY ((((((((((t0.c0) IS TRUE))OR((+ (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.9843621152898817 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST, (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>(('>')))  NULLS FIRST, (((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN NULL END) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY ((((((((((t0.c0) IS TRUE))OR((+ (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.9843621152898817 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST, (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>(('>')))  NULLS FIRST, (((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN NULL END) ORDER BY ((((((((((t0.c0) IS TRUE))OR((+ (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.9843621152898817 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST, (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>(('>')))  NULLS FIRST, (((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN NULL END) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY ((((((((((t0.c0) IS TRUE))OR((+ (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.9843621152898817 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST, (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>(('>')))  NULLS FIRST, (((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN NULL END) ORDER BY ((((((((((t0.c0) IS TRUE))OR((+ (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.9843621152898817 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST, (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>(('>')))  NULLS FIRST, (((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))) COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM t1, v0, t0 WHERE (t0.c0) ORDER BY 0xffffffffef8624ba DESC  NULLS LAST, 0xffffffffab931479 DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t1, v0, t0 ORDER BY 0xffffffffef8624ba DESC  NULLS LAST, 0Xffffffffab931479 DESC);
SELECT * FROM t1, v0, t0 WHERE (t0.c0) ORDER BY 0xffffffffef8624ba DESC  NULLS LAST, 0xffffffffab931479 DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t1, v0, t0 ORDER BY 0xffffffffef8624ba DESC  NULLS LAST, 0Xffffffffab931479 DESC);
SELECT * FROM t1, v0, t0 WHERE (t0.c0) ORDER BY 0xffffffffef8624ba DESC  NULLS LAST, 0xffffffffab931479 DESC;
SELECT COUNT(*) FROM v0, rt0, t1 NOT INDEXED, rt1, t0 WHERE (((rt0.c0)*(rt1.c3)) COLLATE RTRIM) ORDER BY ((((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0)))))<(((~ (v0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)*(rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, t1, rt1, t0 ORDER BY ((((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0)))))<(((~ (v0.c3)))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, t1 NOT INDEXED, rt1, t0 WHERE (((rt0.c0)*(rt1.c3)) COLLATE RTRIM) ORDER BY ((((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0)))))<(((~ (v0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)*(rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, t1, rt1, t0 ORDER BY ((((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0)))))<(((~ (v0.c3)))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, t1 NOT INDEXED, rt1, t0 WHERE (((rt0.c0)*(rt1.c3)) COLLATE RTRIM) ORDER BY ((((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0)))))<(((~ (v0.c3)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (('V''+Ygwx!') NOT BETWEEN ((+ (rt0.c0))) AND (((rt0.c2)IS NOT(rt0.c1)))) DESC  NULLS LAST, ((CASE rt0.c2  WHEN NULL THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)||(rt0.c2))  NULLS FIRST, NULL COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (('V''+Ygwx!') NOT BETWEEN ((+ (rt0.c0))) AND (((rt0.c2)IS NOT(rt0.c1)))) DESC  NULLS LAST, ((CASE rt0.c2  WHEN NULL THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)||(rt0.c2))  NULLS FIRST, NULL COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (('V''+Ygwx!') NOT BETWEEN ((+ (rt0.c0))) AND (((rt0.c2)IS NOT(rt0.c1)))) DESC  NULLS LAST, ((CASE rt0.c2  WHEN NULL THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)||(rt0.c2))  NULLS FIRST, NULL COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (('V''+Ygwx!') NOT BETWEEN ((+ (rt0.c0))) AND (((rt0.c2)IS NOT(rt0.c1)))) DESC  NULLS LAST, ((CASE rt0.c2  WHEN NULL THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)||(rt0.c2))  NULLS FIRST, NULL COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (('V''+Ygwx!') NOT BETWEEN ((+ (rt0.c0))) AND (((rt0.c2)IS NOT(rt0.c1)))) DESC  NULLS LAST, ((CASE rt0.c2  WHEN NULL THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)||(rt0.c2))  NULLS FIRST, NULL COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM t1, v0 RIGHT OUTER JOIN t0 ON (NOT (t1.c0)) COLLATE BINARY WHERE (0.6007556553625105);
SELECT SUM(count) FROM (SELECT ((0.6007556553625105) IS TRUE)  as count FROM t1, v0 RIGHT OUTER JOIN t0 ON (NOT (t1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t1, v0 RIGHT OUTER JOIN t0 ON (NOT (t1.c0)) COLLATE BINARY WHERE (0.6007556553625105);
SELECT SUM(count) FROM (SELECT ((0.6007556553625105) IS TRUE)  as count FROM t1, v0 RIGHT OUTER JOIN t0 ON (NOT (t1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t1, v0 RIGHT OUTER JOIN t0 ON (NOT (t1.c0)) COLLATE BINARY WHERE (0.6007556553625105);
SELECT * FROM rt1, t0 WHERE (((0.9843621152898817) ISNULL));
SELECT SUM(count) FROM (SELECT ((((0.9843621152898817) ISNULL)) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((0.9843621152898817) ISNULL));
SELECT SUM(count) FROM (SELECT ((((0.9843621152898817) ISNULL)) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((0.9843621152898817) ISNULL));
SELECT ALL * FROM v0 WHERE (CAST((~ (v0.c4)) AS NUMERIC)) ORDER BY (+ (JULIANDAY(v0.c4, v0.c1, v0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (v0.c4)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (+ (JULIANDAY(v0.c4, v0.c1, v0.c3))));
SELECT ALL * FROM v0 WHERE (CAST((~ (v0.c4)) AS NUMERIC)) ORDER BY (+ (JULIANDAY(v0.c4, v0.c1, v0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (v0.c4)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (+ (JULIANDAY(v0.c4, v0.c1, v0.c3))));
SELECT ALL * FROM v0 WHERE (CAST((~ (v0.c4)) AS NUMERIC)) ORDER BY (+ (JULIANDAY(v0.c4, v0.c1, v0.c3)));
SELECT ALL * FROM t1 WHERE (((((((((CAST(t1.c0 AS BLOB))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(LIKELIHOOD(0.09320625759463863, 0.49455273642719777))))AND(((t1.c0)!=(t1.c0)))))OR(((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t1.c0 AS BLOB))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(LIKELIHOOD(0.09320625759463863, 0.49455273642719777))))AND(((t1.c0)!=(t1.c0)))))OR(((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(x''))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((CAST(t1.c0 AS BLOB))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(LIKELIHOOD(0.09320625759463863, 0.49455273642719777))))AND(((t1.c0)!=(t1.c0)))))OR(((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t1.c0 AS BLOB))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(LIKELIHOOD(0.09320625759463863, 0.49455273642719777))))AND(((t1.c0)!=(t1.c0)))))OR(((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(x''))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((CAST(t1.c0 AS BLOB))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(LIKELIHOOD(0.09320625759463863, 0.49455273642719777))))AND(((t1.c0)!=(t1.c0)))))OR(((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(x'')))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c3 IN ()) IN ())) ORDER BY (((((rt1.c1) NOT NULL), ((((((((rt1.c3)OR(rt1.c3)))OR(rt0.c2)))AND(rt1.c0)))AND(rt1.c1)), ((((NULL)OR(rt0.c2)))OR(rt0.c3))))<(((NOT (rt1.c0)), CASE rt1.c0  WHEN rt0.c3 THEN 'y6lF_GNbo' ELSE rt1.c2 END, (rt1.c3 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 IN ()) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt1.c1) NOT NULL), ((((((((rt1.c3)OR(rt1.c3)))OR(rt0.c2)))AND(rt1.c0)))AND(rt1.c1)), ((((NULL)OR(rt0.c2)))OR(rt0.c3))))<(((NOT (rt1.c0)), CASE rt1.c0  WHEN rt0.c3 THEN 'y6lF_GNbo' ELSE rt1.c2 END, (rt1.c3 IN ())))) ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c3 IN ()) IN ())) ORDER BY (((((rt1.c1) NOT NULL), ((((((((rt1.c3)OR(rt1.c3)))OR(rt0.c2)))AND(rt1.c0)))AND(rt1.c1)), ((((NULL)OR(rt0.c2)))OR(rt0.c3))))<(((NOT (rt1.c0)), CASE rt1.c0  WHEN rt0.c3 THEN 'y6lF_GNbo' ELSE rt1.c2 END, (rt1.c3 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 IN ()) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt1.c1) NOT NULL), ((((((((rt1.c3)OR(rt1.c3)))OR(rt0.c2)))AND(rt1.c0)))AND(rt1.c1)), ((((NULL)OR(rt0.c2)))OR(rt0.c3))))<(((NOT (rt1.c0)), CASE rt1.c0  WHEN rt0.c3 THEN 'y6lF_GNbo' ELSE rt1.c2 END, (rt1.c3 IN ())))) ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c3 IN ()) IN ())) ORDER BY (((((rt1.c1) NOT NULL), ((((((((rt1.c3)OR(rt1.c3)))OR(rt0.c2)))AND(rt1.c0)))AND(rt1.c1)), ((((NULL)OR(rt0.c2)))OR(rt0.c3))))<(((NOT (rt1.c0)), CASE rt1.c0  WHEN rt0.c3 THEN 'y6lF_GNbo' ELSE rt1.c2 END, (rt1.c3 IN ())))) ASC;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t1 ON (- (v0.c2)) INNER JOIN t0 ON CASE WHEN (((t0.c0)) NOT BETWEEN ((rt1.c3)) AND ((x''))) THEN ((rt0.c0)>(v0.c4)) END LEFT OUTER JOIN rt0 ON CAST(((0x20e705b2) NOT BETWEEN (v0.c2) AND (v0.c4)) AS BLOB) CROSS JOIN v0 ON ((((((((((v0.c0)<>(rt0.c1)))AND(((t1.c0)IS NOT(v0.c2)))))AND(CASE WHEN t0.c0 THEN v0.c4 END)))OR(((((v0.c3)OR(rt0.c2)))OR(v0.c4)))))OR(((v0.c3)||(v0.c4)))) WHERE (CASE WHEN (((rt1.c3, v0.c3, t1.c0))<=((rt0.c3, v0.c0, rt0.c0))) THEN rt1.c2 COLLATE RTRIM WHEN CASE WHEN rt0.c2 THEN v0.c2 END THEN ((rt0.c0)IS NOT(t0.c0)) WHEN '0.5375306961279459' COLLATE BINARY THEN (NOT (rt1.c1)) ELSE (rt1.c0 IN ()) END) ORDER BY ((rt0.c3 COLLATE NOCASE)==(NULL)), rt0.c1 ASC  NULLS FIRST, ((rt1.c2 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt1.c3, v0.c3, t1.c0))<=((rt0.c3, v0.c0, rt0.c0))) THEN rt1.c2 COLLATE RTRIM WHEN CASE WHEN rt0.c2 THEN v0.c2 END THEN ((rt0.c0)IS NOT(t0.c0)) WHEN '0.5375306961279459' COLLATE BINARY THEN (NOT (rt1.c1)) ELSE (rt1.c0 IN ()) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t1 ON (- (v0.c2)) INNER JOIN t0 ON CASE WHEN (((t0.c0)) NOT BETWEEN ((rt1.c3)) AND ((x''))) THEN ((rt0.c0)>(v0.c4)) END LEFT OUTER JOIN rt0 ON CAST(((0x20e705b2) NOT BETWEEN (v0.c2) AND (v0.c4)) AS BLOB) CROSS JOIN v0 ON ((((((((((v0.c0)!=(rt0.c1)))AND(((t1.c0)IS NOT(v0.c2)))))AND(CASE WHEN t0.c0 THEN v0.c4 END)))OR(((((v0.c3)OR(rt0.c2)))OR(v0.c4)))))OR(((v0.c3)||(v0.c4)))) ORDER BY ((rt0.c3 COLLATE NOCASE)=(NULL)), rt0.c1 ASC  NULLS FIRST, ((rt1.c2 IN ()) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t1 ON (- (v0.c2)) INNER JOIN t0 ON CASE WHEN (((t0.c0)) NOT BETWEEN ((rt1.c3)) AND ((x''))) THEN ((rt0.c0)>(v0.c4)) END LEFT OUTER JOIN rt0 ON CAST(((0x20e705b2) NOT BETWEEN (v0.c2) AND (v0.c4)) AS BLOB) CROSS JOIN v0 ON ((((((((((v0.c0)<>(rt0.c1)))AND(((t1.c0)IS NOT(v0.c2)))))AND(CASE WHEN t0.c0 THEN v0.c4 END)))OR(((((v0.c3)OR(rt0.c2)))OR(v0.c4)))))OR(((v0.c3)||(v0.c4)))) WHERE (CASE WHEN (((rt1.c3, v0.c3, t1.c0))<=((rt0.c3, v0.c0, rt0.c0))) THEN rt1.c2 COLLATE RTRIM WHEN CASE WHEN rt0.c2 THEN v0.c2 END THEN ((rt0.c0)IS NOT(t0.c0)) WHEN '0.5375306961279459' COLLATE BINARY THEN (NOT (rt1.c1)) ELSE (rt1.c0 IN ()) END) ORDER BY ((rt0.c3 COLLATE NOCASE)==(NULL)), rt0.c1 ASC  NULLS FIRST, ((rt1.c2 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt1.c3, v0.c3, t1.c0))<=((rt0.c3, v0.c0, rt0.c0))) THEN rt1.c2 COLLATE RTRIM WHEN CASE WHEN rt0.c2 THEN v0.c2 END THEN ((rt0.c0)IS NOT(t0.c0)) WHEN '0.5375306961279459' COLLATE BINARY THEN (NOT (rt1.c1)) ELSE (rt1.c0 IN ()) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t1 ON (- (v0.c2)) INNER JOIN t0 ON CASE WHEN (((t0.c0)) NOT BETWEEN ((rt1.c3)) AND ((x''))) THEN ((rt0.c0)>(v0.c4)) END LEFT OUTER JOIN rt0 ON CAST(((0x20e705b2) NOT BETWEEN (v0.c2) AND (v0.c4)) AS BLOB) CROSS JOIN v0 ON ((((((((((v0.c0)!=(rt0.c1)))AND(((t1.c0)IS NOT(v0.c2)))))AND(CASE WHEN t0.c0 THEN v0.c4 END)))OR(((((v0.c3)OR(rt0.c2)))OR(v0.c4)))))OR(((v0.c3)||(v0.c4)))) ORDER BY ((rt0.c3 COLLATE NOCASE)=(NULL)), rt0.c1 ASC  NULLS FIRST, ((rt1.c2 IN ()) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 RIGHT OUTER JOIN t0 ON (NOT (((rt0.c2) ISNULL))) FULL OUTER JOIN t1 ON (((NOT (v0.c3))) IS TRUE) WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c4 THEN rt0.c2 WHEN rt0.c0 THEN v0.c3 ELSE rt0.c3 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c4 THEN rt0.c2 WHEN rt0.c0 THEN v0.c3 ELSE rt0.c3 END AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 RIGHT OUTER JOIN t0 ON (NOT (((rt0.c2) ISNULL))) FULL OUTER JOIN t1 ON (((NOT (v0.c3))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 RIGHT OUTER JOIN t0 ON (NOT (((rt0.c2) ISNULL))) FULL OUTER JOIN t1 ON (((NOT (v0.c3))) IS TRUE) WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c4 THEN rt0.c2 WHEN rt0.c0 THEN v0.c3 ELSE rt0.c3 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c4 THEN rt0.c2 WHEN rt0.c0 THEN v0.c3 ELSE rt0.c3 END AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 RIGHT OUTER JOIN t0 ON (NOT (((rt0.c2) ISNULL))) FULL OUTER JOIN t1 ON (((NOT (v0.c3))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 RIGHT OUTER JOIN t0 ON (NOT (((rt0.c2) ISNULL))) FULL OUTER JOIN t1 ON (((NOT (v0.c3))) IS TRUE) WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c4 THEN rt0.c2 WHEN rt0.c0 THEN v0.c3 ELSE rt0.c3 END AS BLOB));
SELECT * FROM rt1 LEFT OUTER JOIN t1 ON (+ (v0.c2)) COLLATE NOCASE CROSS JOIN v0 ON (((+ (v0.c0)))IS NOT(CASE WHEN v0.c4 THEN rt1.c0 END)) INNER JOIN t0 ON (((((rt1.c2) IS TRUE)))=((rt0.c2))) LEFT OUTER JOIN rt0 ON CASE '445858574'  WHEN json_remove(v0.c4, rt0.c1) THEN rt0.c3 WHEN ((rt0.c3) BETWEEN (rt0.c2) AND ('0.8443634904528678')) THEN CAST(rt1.c0 AS INTEGER) WHEN ((v0.c4) ISNULL) THEN ((((rt1.c2)OR('*Bj')))AND(rt0.c1)) WHEN (- ('552011186')) THEN v0.c3 WHEN ((t1.c0) NOT NULL) THEN rt0.c1 COLLATE NOCASE END WHERE (((+ (t0.c0)) IN ())) ORDER BY (rt0.c0 COLLATE NOCASE IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((+ (t0.c0)) IN ())) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t1 ON (+ (v0.c2)) COLLATE NOCASE CROSS JOIN v0 ON (((+ (v0.c0)))IS NOT(CASE WHEN v0.c4 THEN rt1.c0 END)) INNER JOIN t0 ON (((((rt1.c2) IS TRUE)))=((rt0.c2))) LEFT OUTER JOIN rt0 ON CASE '445858574'  WHEN json_remove(v0.c4, rt0.c1) THEN rt0.c3 WHEN ((rt0.c3) BETWEEN (rt0.c2) AND ('0.8443634904528678')) THEN CAST(rt1.c0 AS INTEGER) WHEN ((v0.c4) ISNULL) THEN ((((rt1.c2)OR('*Bj')))AND(rt0.c1)) WHEN (- ('552011186')) THEN v0.c3 WHEN ((t1.c0) NOT NULL) THEN rt0.c1 COLLATE NOCASE END ORDER BY (rt0.c0 COLLATE NOCASE IN ()) ASC);
SELECT * FROM rt1 LEFT OUTER JOIN t1 ON (+ (v0.c2)) COLLATE NOCASE CROSS JOIN v0 ON (((+ (v0.c0)))IS NOT(CASE WHEN v0.c4 THEN rt1.c0 END)) INNER JOIN t0 ON (((((rt1.c2) IS TRUE)))=((rt0.c2))) LEFT OUTER JOIN rt0 ON CASE '445858574'  WHEN json_remove(v0.c4, rt0.c1) THEN rt0.c3 WHEN ((rt0.c3) BETWEEN (rt0.c2) AND ('0.8443634904528678')) THEN CAST(rt1.c0 AS INTEGER) WHEN ((v0.c4) ISNULL) THEN ((((rt1.c2)OR('*Bj')))AND(rt0.c1)) WHEN (- ('552011186')) THEN v0.c3 WHEN ((t1.c0) NOT NULL) THEN rt0.c1 COLLATE NOCASE END WHERE (((+ (t0.c0)) IN ())) ORDER BY (rt0.c0 COLLATE NOCASE IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((+ (t0.c0)) IN ())) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t1 ON (+ (v0.c2)) COLLATE NOCASE CROSS JOIN v0 ON (((+ (v0.c0)))IS NOT(CASE WHEN v0.c4 THEN rt1.c0 END)) INNER JOIN t0 ON (((((rt1.c2) IS TRUE)))=((rt0.c2))) LEFT OUTER JOIN rt0 ON CASE '445858574'  WHEN json_remove(v0.c4, rt0.c1) THEN rt0.c3 WHEN ((rt0.c3) BETWEEN (rt0.c2) AND ('0.8443634904528678')) THEN CAST(rt1.c0 AS INTEGER) WHEN ((v0.c4) ISNULL) THEN ((((rt1.c2)OR('*Bj')))AND(rt0.c1)) WHEN (- ('552011186')) THEN v0.c3 WHEN ((t1.c0) NOT NULL) THEN rt0.c1 COLLATE NOCASE END ORDER BY (rt0.c0 COLLATE NOCASE IN ()) ASC);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((rt0.c1)IS(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((rt0.c1)IS(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((rt0.c1)IS(rt0.c1))) NOT NULL));
SELECT * FROM rt1, rt0 WHERE (MAX(((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c3)))OR(rt0.c1)))OR(',)vH鞦<')))OR(rt0.c2)))AND(rt0.c3)), ((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))) ORDER BY TRIM(DISTINCT x'1948', ((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)))OR(rt0.c2)))AND(rt1.c2))) ASC, ((rt0.c2) NOT NULL) COLLATE NOCASE DESC, ((rt1.c1)|(UNLIKELY(DISTINCT rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((MAX(((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c3)))OR(rt0.c1)))OR(',)vH鞦<')))OR(rt0.c2)))AND(rt0.c3)), ((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY TRIM(DISTINCT x'1948', ((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)))OR(rt0.c2)))AND(rt1.c2))) ASC, ((rt0.c2) NOT NULL) COLLATE NOCASE DESC, ((rt1.c1)|(UNLIKELY(DISTINCT rt0.c0)))  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (MAX(((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c3)))OR(rt0.c1)))OR(',)vH鞦<')))OR(rt0.c2)))AND(rt0.c3)), ((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))) ORDER BY TRIM(DISTINCT x'1948', ((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)))OR(rt0.c2)))AND(rt1.c2))) ASC, ((rt0.c2) NOT NULL) COLLATE NOCASE DESC, ((rt1.c1)|(UNLIKELY(DISTINCT rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((MAX(((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c3)))OR(rt0.c1)))OR(',)vH鞦<')))OR(rt0.c2)))AND(rt0.c3)), ((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY TRIM(DISTINCT x'1948', ((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)))OR(rt0.c2)))AND(rt1.c2))) ASC, ((rt0.c2) NOT NULL) COLLATE NOCASE DESC, ((rt1.c1)|(UNLIKELY(DISTINCT rt0.c0)))  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (MAX(((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c3)))OR(rt0.c1)))OR(',)vH鞦<')))OR(rt0.c2)))AND(rt0.c3)), ((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))) ORDER BY TRIM(DISTINCT x'1948', ((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)))OR(rt0.c2)))AND(rt1.c2))) ASC, ((rt0.c2) NOT NULL) COLLATE NOCASE DESC, ((rt1.c1)|(UNLIKELY(DISTINCT rt0.c0)))  NULLS FIRST;
SELECT * FROM v0, rt1, rt0, t1, t0 WHERE ((- ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt1.c2 IN ())))) IS TRUE)  as count FROM v0, rt1, rt0, t1 NOT INDEXED, t0);
SELECT * FROM v0, rt1, rt0, t1, t0 WHERE ((- ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt1.c2 IN ())))) IS TRUE)  as count FROM v0, rt1, rt0, t1 NOT INDEXED, t0);
SELECT * FROM v0, rt1, rt0, t1, t0 WHERE ((- ((rt1.c2 IN ()))));
SELECT ALL COUNT(*) FROM t0, rt0, t1, v0 WHERE (CAST(RTRIM(rt0.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(RTRIM(rt0.c1) AS REAL)) IS TRUE)  as count FROM t0, rt0, t1, v0);
SELECT ALL COUNT(*) FROM t0, rt0, t1, v0 WHERE (CAST(RTRIM(rt0.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(RTRIM(rt0.c1) AS REAL)) IS TRUE)  as count FROM t0, rt0, t1, v0);
SELECT ALL COUNT(*) FROM t0, rt0, t1, v0 WHERE (CAST(RTRIM(rt0.c1) AS REAL));
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON (((((v0.c0, rt1.c0, rt1.c2, v0.c3, rt1.c3)) NOT BETWEEN ((rt1.c2, v0.c2, rt0.c3, rt1.c2, v0.c2)) AND ((v0.c0, rt0.c0, rt1.c1, v0.c0, v0.c4)))) IS TRUE) FULL OUTER JOIN v0 ON (((rt1.c3)) NOT BETWEEN ((((x'')&(v0.c3)))) AND ((rt1.c0 COLLATE BINARY))) INNER JOIN t0 ON LTRIM(CAST(rt0.c3 AS INTEGER)) FULL OUTER JOIN rt1 ON json_quote(CAST(v0.c1 AS INTEGER)) WHERE ((((((t1.c0 IN ()))OR(((rt0.c2) NOT BETWEEN ('y6lF_GNbo') AND (v0.c4)))))OR((v0.c4 IN ())))) ORDER BY CAST(0xffffffffd4268294 AS REAL) ASC, (((((((((+ (v0.c0)))AND(((rt1.c3) NOTNULL))))AND(rt1.c3)))AND(x'')))OR(rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c0 IN ()))OR(((rt0.c2) NOT BETWEEN ('y6lF_GNbo') AND (v0.c4)))))OR((v0.c4 IN ())))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON (((((v0.c0, rt1.c0, rt1.c2, v0.c3, rt1.c3)) NOT BETWEEN ((rt1.c2, v0.c2, rt0.c3, rt1.c2, v0.c2)) AND ((v0.c0, rt0.c0, rt1.c1, v0.c0, v0.c4)))) IS TRUE) FULL OUTER JOIN v0 ON (((rt1.c3)) NOT BETWEEN ((((x'')&(v0.c3)))) AND ((rt1.c0 COLLATE BINARY))) INNER JOIN t0 ON LTRIM(CAST(rt0.c3 AS INTEGER)) FULL OUTER JOIN rt1 ON json_quote(CAST(v0.c1 AS INTEGER)) ORDER BY CAST(0Xffffffffd4268294 AS REAL) ASC, (((((((((+ (v0.c0)))AND(((rt1.c3) NOTNULL))))AND(rt1.c3)))AND(x'')))OR(rt0.c1)) DESC);
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON (((((v0.c0, rt1.c0, rt1.c2, v0.c3, rt1.c3)) NOT BETWEEN ((rt1.c2, v0.c2, rt0.c3, rt1.c2, v0.c2)) AND ((v0.c0, rt0.c0, rt1.c1, v0.c0, v0.c4)))) IS TRUE) FULL OUTER JOIN v0 ON (((rt1.c3)) NOT BETWEEN ((((x'')&(v0.c3)))) AND ((rt1.c0 COLLATE BINARY))) INNER JOIN t0 ON LTRIM(CAST(rt0.c3 AS INTEGER)) FULL OUTER JOIN rt1 ON json_quote(CAST(v0.c1 AS INTEGER)) WHERE ((((((t1.c0 IN ()))OR(((rt0.c2) NOT BETWEEN ('y6lF_GNbo') AND (v0.c4)))))OR((v0.c4 IN ())))) ORDER BY CAST(0xffffffffd4268294 AS REAL) ASC, (((((((((+ (v0.c0)))AND(((rt1.c3) NOTNULL))))AND(rt1.c3)))AND(x'')))OR(rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c0 IN ()))OR(((rt0.c2) NOT BETWEEN ('y6lF_GNbo') AND (v0.c4)))))OR((v0.c4 IN ())))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON (((((v0.c0, rt1.c0, rt1.c2, v0.c3, rt1.c3)) NOT BETWEEN ((rt1.c2, v0.c2, rt0.c3, rt1.c2, v0.c2)) AND ((v0.c0, rt0.c0, rt1.c1, v0.c0, v0.c4)))) IS TRUE) FULL OUTER JOIN v0 ON (((rt1.c3)) NOT BETWEEN ((((x'')&(v0.c3)))) AND ((rt1.c0 COLLATE BINARY))) INNER JOIN t0 ON LTRIM(CAST(rt0.c3 AS INTEGER)) FULL OUTER JOIN rt1 ON json_quote(CAST(v0.c1 AS INTEGER)) ORDER BY CAST(0Xffffffffd4268294 AS REAL) ASC, (((((((((+ (v0.c0)))AND(((rt1.c3) NOTNULL))))AND(rt1.c3)))AND(x'')))OR(rt0.c1)) DESC);
SELECT * FROM t0, rt1 LEFT OUTER JOIN rt0 ON (~ ((x'91c2' IN (rt0.c1)))) LEFT OUTER JOIN t1 ON ((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c2)) COLLATE NOCASE WHERE (((('1796935432')) NOT BETWEEN ((TRIM(t0.c0))) AND (((rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((('1796935432')) NOT BETWEEN ((TRIM(t0.c0))) AND (((rt0.c0 IN ()))))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON (~ ((x'91c2' IN (rt0.c1)))) LEFT OUTER JOIN t1 ON ((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c2)) COLLATE NOCASE);
SELECT * FROM t0, rt1 LEFT OUTER JOIN rt0 ON (~ ((x'91c2' IN (rt0.c1)))) LEFT OUTER JOIN t1 ON ((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c2)) COLLATE NOCASE WHERE (((('1796935432')) NOT BETWEEN ((TRIM(t0.c0))) AND (((rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((('1796935432')) NOT BETWEEN ((TRIM(t0.c0))) AND (((rt0.c0 IN ()))))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON (~ ((x'91c2' IN (rt0.c1)))) LEFT OUTER JOIN t1 ON ((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c2)) COLLATE NOCASE);
SELECT * FROM t0, rt1 LEFT OUTER JOIN rt0 ON (~ ((x'91c2' IN (rt0.c1)))) LEFT OUTER JOIN t1 ON ((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c2)) COLLATE NOCASE WHERE (((('1796935432')) NOT BETWEEN ((TRIM(t0.c0))) AND (((rt0.c0 IN ())))));
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c3)GLOB(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)GLOB(v0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c3)GLOB(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)GLOB(v0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c3)GLOB(v0.c0)) IN ()));
SELECT COUNT(*) FROM rt0, t0, rt1, t1, v0 WHERE ((((((v0.c3))<((rt1.c3))))AND(((rt0.c3) NOTNULL)))) ORDER BY CASE WHEN ((v0.c0)*(t0.c0)) THEN v0.c3 COLLATE NOCASE WHEN ((((((((v0.c4)AND(t1.c0)))OR(rt1.c1)))OR(rt0.c2)))OR(rt1.c2)) THEN (((rt0.c2))>=((x''))) WHEN v0.c0 THEN rt1.c3 COLLATE NOCASE ELSE t0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c3))<((rt1.c3))))AND(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0, t0, rt1, t1, v0 ORDER BY CASE WHEN ((v0.c0)*(t0.c0)) THEN v0.c3 COLLATE NOCASE WHEN ((((((((v0.c4)AND(t1.c0)))OR(rt1.c1)))OR(rt0.c2)))OR(rt1.c2)) THEN (((rt0.c2))>=((x''))) WHEN v0.c0 THEN rt1.c3 COLLATE NOCASE ELSE t0.c0 END  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, rt1, t1, v0 WHERE ((((((v0.c3))<((rt1.c3))))AND(((rt0.c3) NOTNULL)))) ORDER BY CASE WHEN ((v0.c0)*(t0.c0)) THEN v0.c3 COLLATE NOCASE WHEN ((((((((v0.c4)AND(t1.c0)))OR(rt1.c1)))OR(rt0.c2)))OR(rt1.c2)) THEN (((rt0.c2))>=((x''))) WHEN v0.c0 THEN rt1.c3 COLLATE NOCASE ELSE t0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c3))<((rt1.c3))))AND(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0, t0, rt1, t1, v0 ORDER BY CASE WHEN ((v0.c0)*(t0.c0)) THEN v0.c3 COLLATE NOCASE WHEN ((((((((v0.c4)AND(t1.c0)))OR(rt1.c1)))OR(rt0.c2)))OR(rt1.c2)) THEN (((rt0.c2))>=((x''))) WHEN v0.c0 THEN rt1.c3 COLLATE NOCASE ELSE t0.c0 END  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, rt1, t1, v0 WHERE ((((((v0.c3))<((rt1.c3))))AND(((rt0.c3) NOTNULL)))) ORDER BY CASE WHEN ((v0.c0)*(t0.c0)) THEN v0.c3 COLLATE NOCASE WHEN ((((((((v0.c4)AND(t1.c0)))OR(rt1.c1)))OR(rt0.c2)))OR(rt1.c2)) THEN (((rt0.c2))>=((x''))) WHEN v0.c0 THEN rt1.c3 COLLATE NOCASE ELSE t0.c0 END  NULLS LAST;
SELECT * FROM rt1 WHERE (((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)) COLLATE BINARY);
SELECT * FROM t0, v0, rt0 INNER JOIN rt1 ON (v0.c3 IN ()) COLLATE BINARY WHERE (((((rt1.c2) IS TRUE))+(CASE rt1.c0  WHEN rt1.c1 THEN rt0.c1 END))) ORDER BY ((((rt1.c2)<<(rt0.c0)))AND(STRFTIME(v0.c2, v0.c0, v0.c0, rt0.c1, rt1.c3))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) IS TRUE))+(CASE rt1.c0  WHEN rt1.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM t0, v0, rt0 INNER JOIN rt1 ON (v0.c3 IN ()) COLLATE BINARY ORDER BY ((((rt1.c2)<<(rt0.c0)))AND(STRFTIME(v0.c2, v0.c0, v0.c0, rt0.c1, rt1.c3))) DESC);
SELECT * FROM t0, v0, rt0 INNER JOIN rt1 ON (v0.c3 IN ()) COLLATE BINARY WHERE (((((rt1.c2) IS TRUE))+(CASE rt1.c0  WHEN rt1.c1 THEN rt0.c1 END))) ORDER BY ((((rt1.c2)<<(rt0.c0)))AND(STRFTIME(v0.c2, v0.c0, v0.c0, rt0.c1, rt1.c3))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) IS TRUE))+(CASE rt1.c0  WHEN rt1.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM t0, v0, rt0 INNER JOIN rt1 ON (v0.c3 IN ()) COLLATE BINARY ORDER BY ((((rt1.c2)<<(rt0.c0)))AND(STRFTIME(v0.c2, v0.c0, v0.c0, rt0.c1, rt1.c3))) DESC);
SELECT * FROM t0, v0, rt0 INNER JOIN rt1 ON (v0.c3 IN ()) COLLATE BINARY WHERE (((((rt1.c2) IS TRUE))+(CASE rt1.c0  WHEN rt1.c1 THEN rt0.c1 END))) ORDER BY ((((rt1.c2)<<(rt0.c0)))AND(STRFTIME(v0.c2, v0.c0, v0.c0, rt0.c1, rt1.c3))) DESC;
SELECT COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN v0 ON (+ (LIKELY(rt1.c2))) WHERE (((((((((rt1.c1)AND(v0.c2)))OR(rt1.c3)))OR(v0.c2)))AND(x'b659c1c9')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c1)AND(v0.c2)))OR(rt1.c3)))OR(v0.c2)))AND(x'b659c1c9')) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN v0 ON (+ (LIKELY(rt1.c2))));
SELECT COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN v0 ON (+ (LIKELY(rt1.c2))) WHERE (((((((((rt1.c1)AND(v0.c2)))OR(rt1.c3)))OR(v0.c2)))AND(x'b659c1c9')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c1)AND(v0.c2)))OR(rt1.c3)))OR(v0.c2)))AND(x'b659c1c9')) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN v0 ON (+ (LIKELY(rt1.c2))));
SELECT COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN v0 ON (+ (LIKELY(rt1.c2))) WHERE (((((((((rt1.c1)AND(v0.c2)))OR(rt1.c3)))OR(v0.c2)))AND(x'b659c1c9')) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(((v0.c1)OR(v0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1)OR(v0.c3)) AS INTEGER)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(((v0.c1)OR(v0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1)OR(v0.c3)) AS INTEGER)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(((v0.c1)OR(v0.c3)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, t1, v0, rt1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM rt0, t1, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, t1, v0, rt1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM rt0, t1, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, t1, v0, rt1 WHERE (t1.c0);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, 3.65467292E8)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, 3.65467292E8)))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, 3.65467292E8)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, 3.65467292E8)))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, 3.65467292E8)))) ISNULL));
SELECT ALL * FROM t1, rt0, v0 WHERE ((+ ((+ ('1834672782'))))) ORDER BY ((v0.c0)>(rt0.c3)) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((+ ('1834672782'))))) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY ((v0.c0)>(rt0.c3)) DESC);
SELECT ALL * FROM t1, rt0, v0 WHERE ((+ ((+ ('1834672782'))))) ORDER BY ((v0.c0)>(rt0.c3)) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((+ ('1834672782'))))) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY ((v0.c0)>(rt0.c3)) DESC);
SELECT ALL * FROM t1, rt0, v0 WHERE ((+ ((+ ('1834672782'))))) ORDER BY ((v0.c0)>(rt0.c3)) DESC;
SELECT ALL * FROM v0, rt1, rt0, t0 INNER JOIN t1 ON CASE WHEN ((v0.c0) BETWEEN (x'') AND (rt0.c3)) THEN IFNULL(rt1.c2, t0.c0) WHEN v0.c0 THEN (- (v0.c0)) WHEN (rt1.c1 IN ()) THEN ((((t1.c0)OR(t1.c0)))OR(0.6007556553625105)) ELSE CASE WHEN t0.c0 THEN '' END END WHERE ((NOT (((v0.c4) BETWEEN (rt1.c3) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c4) BETWEEN (rt1.c3) AND (rt1.c2))))) IS TRUE)  as count FROM v0, rt1, rt0, t0 INNER JOIN t1 ON CASE WHEN ((v0.c0) BETWEEN (x'') AND (rt0.c3)) THEN IFNULL(rt1.c2, t0.c0) WHEN v0.c0 THEN (- (v0.c0)) WHEN (rt1.c1 IN ()) THEN ((((t1.c0)OR(t1.c0)))OR(0.6007556553625105)) ELSE CASE WHEN t0.c0 THEN '' END END);
SELECT ALL * FROM v0, rt1, rt0, t0 INNER JOIN t1 ON CASE WHEN ((v0.c0) BETWEEN (x'') AND (rt0.c3)) THEN IFNULL(rt1.c2, t0.c0) WHEN v0.c0 THEN (- (v0.c0)) WHEN (rt1.c1 IN ()) THEN ((((t1.c0)OR(t1.c0)))OR(0.6007556553625105)) ELSE CASE WHEN t0.c0 THEN '' END END WHERE ((NOT (((v0.c4) BETWEEN (rt1.c3) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c4) BETWEEN (rt1.c3) AND (rt1.c2))))) IS TRUE)  as count FROM v0, rt1, rt0, t0 INNER JOIN t1 ON CASE WHEN ((v0.c0) BETWEEN (x'') AND (rt0.c3)) THEN IFNULL(rt1.c2, t0.c0) WHEN v0.c0 THEN (- (v0.c0)) WHEN (rt1.c1 IN ()) THEN ((((t1.c0)OR(t1.c0)))OR(0.6007556553625105)) ELSE CASE WHEN t0.c0 THEN '' END END);
SELECT ALL * FROM v0, rt1, rt0, t0 INNER JOIN t1 ON CASE WHEN ((v0.c0) BETWEEN (x'') AND (rt0.c3)) THEN IFNULL(rt1.c2, t0.c0) WHEN v0.c0 THEN (- (v0.c0)) WHEN (rt1.c1 IN ()) THEN ((((t1.c0)OR(t1.c0)))OR(0.6007556553625105)) ELSE CASE WHEN t0.c0 THEN '' END END WHERE ((NOT (((v0.c4) BETWEEN (rt1.c3) AND (rt1.c2)))));
SELECT COUNT(*) FROM t1, t0, rt0, rt1 WHERE (((CAST(t0.c0 AS INTEGER))|((rt1.c1 IN ())))) ORDER BY (+ ((- (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER))|((rt1.c1 IN ())))) IS TRUE)  as count FROM t1, t0, rt0, rt1 ORDER BY (+ ((- (rt1.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t1, t0, rt0, rt1 WHERE (((CAST(t0.c0 AS INTEGER))|((rt1.c1 IN ())))) ORDER BY (+ ((- (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER))|((rt1.c1 IN ())))) IS TRUE)  as count FROM t1, t0, rt0, rt1 ORDER BY (+ ((- (rt1.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t1, t0, rt0, rt1 WHERE (((CAST(t0.c0 AS INTEGER))|((rt1.c1 IN ())))) ORDER BY (+ ((- (rt1.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t1, rt0, rt1 WHERE ((((((rt0.c0))>((t1.c0))))-(TYPEOF(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>((t1.c0))))-(TYPEOF(t1.c0)))) IS TRUE)  as count FROM v0, t1, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, t1, rt0, rt1 WHERE ((((((rt0.c0))>((t1.c0))))-(TYPEOF(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>((t1.c0))))-(TYPEOF(t1.c0)))) IS TRUE)  as count FROM v0, t1, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, t1, rt0, rt1 WHERE ((((((rt0.c0))>((t1.c0))))-(TYPEOF(t1.c0))));
SELECT ALL COUNT(*) FROM rt0, rt1, t1, t0, v0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt0, rt1, t1, t0 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, t1, t0, v0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt0, rt1, t1, t0 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, t1, t0, v0 WHERE (rt1.c1);
SELECT ALL * FROM v0, rt0 WHERE (x'f046');
SELECT SUM(count) FROM (SELECT ALL ((x'f046') IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (x'f046');
SELECT SUM(count) FROM (SELECT ALL ((x'f046') IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (x'f046');
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) ISNULL))>(t0.c0)) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) ISNULL))>(t0.c0)));
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) ISNULL))>(t0.c0)) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) ISNULL))>(t0.c0)));
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) ISNULL))>(t0.c0)) WHERE (rt1.c1);
SELECT COUNT(*) FROM rt1, t1 WHERE (((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c2))) IS FALSE)) ORDER BY ((2047386581) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt1, t1 ORDER BY ((2047386581) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1 WHERE (((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c2))) IS FALSE)) ORDER BY ((2047386581) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt1, t1 ORDER BY ((2047386581) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1 WHERE (((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c2))) IS FALSE)) ORDER BY ((2047386581) ISNULL)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((('U3r')OR(((rt0.c0)<=(rt0.c3)))))AND(((rt0.c0)*(rt0.c2))))) ORDER BY ((((CAST(rt0.c0 AS TEXT))AND(((rt0.c2) NOT NULL))))OR((rt0.c3 IN (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('U3r')OR(((rt0.c0)<=(rt0.c3)))))AND(((rt0.c0)*(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c0 AS TEXT))AND(((rt0.c2) NOT NULL))))OR((rt0.c3 IN (rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((('U3r')OR(((rt0.c0)<=(rt0.c3)))))AND(((rt0.c0)*(rt0.c2))))) ORDER BY ((((CAST(rt0.c0 AS TEXT))AND(((rt0.c2) NOT NULL))))OR((rt0.c3 IN (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('U3r')OR(((rt0.c0)<=(rt0.c3)))))AND(((rt0.c0)*(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c0 AS TEXT))AND(((rt0.c2) NOT NULL))))OR((rt0.c3 IN (rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((('U3r')OR(((rt0.c0)<=(rt0.c3)))))AND(((rt0.c0)*(rt0.c2))))) ORDER BY ((((CAST(rt0.c0 AS TEXT))AND(((rt0.c2) NOT NULL))))OR((rt0.c3 IN (rt0.c1))))  NULLS FIRST;
SELECT * FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (NULL);
SELECT ALL * FROM t1, v0, rt1 WHERE ((((v0.c1)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((CASE v0.c1  WHEN rt1.c2 THEN v0.c3 END)))) ORDER BY (((json_quote(105836174)))<((((rt1.c3)-('445858574')))));
SELECT SUM(count) FROM (SELECT (((((v0.c1)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((CASE v0.c1  WHEN rt1.c2 THEN v0.c3 END)))) IS TRUE)  as count FROM t1, v0, rt1 ORDER BY (((json_quote(105836174)))<((((rt1.c3)-('445858574'))))));
SELECT ALL * FROM t1, v0, rt1 WHERE ((((v0.c1)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((CASE v0.c1  WHEN rt1.c2 THEN v0.c3 END)))) ORDER BY (((json_quote(105836174)))<((((rt1.c3)-('445858574')))));
SELECT SUM(count) FROM (SELECT (((((v0.c1)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((CASE v0.c1  WHEN rt1.c2 THEN v0.c3 END)))) IS TRUE)  as count FROM t1, v0, rt1 ORDER BY (((json_quote(105836174)))<((((rt1.c3)-('445858574'))))));
SELECT ALL * FROM t1, v0, rt1 WHERE ((((v0.c1)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((CASE v0.c1  WHEN rt1.c2 THEN v0.c3 END)))) ORDER BY (((json_quote(105836174)))<((((rt1.c3)-('445858574')))));
SELECT * FROM rt0, rt1, t0 NOT INDEXED, v0 WHERE ((((ABS(DISTINCT v0.c0)))>=((v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((ABS(DISTINCT v0.c0)))>=((v0.c0)))) IS TRUE)  as count FROM rt0, rt1, t0, v0);
SELECT * FROM rt0, rt1, t0 NOT INDEXED, v0 WHERE ((((ABS(DISTINCT v0.c0)))>=((v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((ABS(DISTINCT v0.c0)))>=((v0.c0)))) IS TRUE)  as count FROM rt0, rt1, t0, v0);
SELECT * FROM rt0, rt1, t0 NOT INDEXED, v0 WHERE ((((ABS(DISTINCT v0.c0)))>=((v0.c0))));
SELECT * FROM v0 CROSS JOIN t0 ON SQLITE_COMPILEOPTION_USED((+ (v0.c2))) WHERE (((((v0.c2) NOT NULL)) IS FALSE)) ORDER BY (((v0.c4) NOTNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON SQLITE_COMPILEOPTION_USED((+ (v0.c2))) ORDER BY (((v0.c4) NOTNULL) IN ()) DESC);
SELECT * FROM v0 CROSS JOIN t0 ON SQLITE_COMPILEOPTION_USED((+ (v0.c2))) WHERE (((((v0.c2) NOT NULL)) IS FALSE)) ORDER BY (((v0.c4) NOTNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON SQLITE_COMPILEOPTION_USED((+ (v0.c2))) ORDER BY (((v0.c4) NOTNULL) IN ()) DESC);
SELECT * FROM v0 CROSS JOIN t0 ON SQLITE_COMPILEOPTION_USED((+ (v0.c2))) WHERE (((((v0.c2) NOT NULL)) IS FALSE)) ORDER BY (((v0.c4) NOTNULL) IN ()) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1, v0, t1, t0 WHERE (CASE WHEN NULL THEN ((t1.c0) NOT BETWEEN (t0.c0) AND (v0.c3)) WHEN (t1.c0 IN (v0.c1)) THEN v0.c4 COLLATE RTRIM WHEN UNLIKELY(rt0.c3) THEN (((rt0.c3, v0.c1, rt0.c1, '-1169097821', v0.c1))<=((v0.c4, rt1.c1, rt0.c0, v0.c4, rt0.c1))) ELSE CASE v0.c0  WHEN t0.c0 THEN rt1.c0 END END) ORDER BY v0.c2  NULLS FIRST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((t1.c0) NOT BETWEEN (t0.c0) AND (v0.c3)) WHEN (t1.c0 IN (v0.c1)) THEN v0.c4 COLLATE RTRIM WHEN UNLIKELY(rt0.c3) THEN (((rt0.c3, v0.c1, rt0.c1, '-1169097821', v0.c1))<=((v0.c4, rt1.c1, rt0.c0, v0.c4, rt0.c1))) ELSE CASE v0.c0  WHEN t0.c0 THEN rt1.c0 END END) IS TRUE)  as count FROM rt0, rt1, v0, t1, t0 ORDER BY v0.c2  NULLS FIRST, rt0.c0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0, t1, t0 WHERE (CASE WHEN NULL THEN ((t1.c0) NOT BETWEEN (t0.c0) AND (v0.c3)) WHEN (t1.c0 IN (v0.c1)) THEN v0.c4 COLLATE RTRIM WHEN UNLIKELY(rt0.c3) THEN (((rt0.c3, v0.c1, rt0.c1, '-1169097821', v0.c1))<=((v0.c4, rt1.c1, rt0.c0, v0.c4, rt0.c1))) ELSE CASE v0.c0  WHEN t0.c0 THEN rt1.c0 END END) ORDER BY v0.c2  NULLS FIRST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((t1.c0) NOT BETWEEN (t0.c0) AND (v0.c3)) WHEN (t1.c0 IN (v0.c1)) THEN v0.c4 COLLATE RTRIM WHEN UNLIKELY(rt0.c3) THEN (((rt0.c3, v0.c1, rt0.c1, '-1169097821', v0.c1))<=((v0.c4, rt1.c1, rt0.c0, v0.c4, rt0.c1))) ELSE CASE v0.c0  WHEN t0.c0 THEN rt1.c0 END END) IS TRUE)  as count FROM rt0, rt1, v0, t1, t0 ORDER BY v0.c2  NULLS FIRST, rt0.c0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0, t1, t0 WHERE (CASE WHEN NULL THEN ((t1.c0) NOT BETWEEN (t0.c0) AND (v0.c3)) WHEN (t1.c0 IN (v0.c1)) THEN v0.c4 COLLATE RTRIM WHEN UNLIKELY(rt0.c3) THEN (((rt0.c3, v0.c1, rt0.c1, '-1169097821', v0.c1))<=((v0.c4, rt1.c1, rt0.c0, v0.c4, rt0.c1))) ELSE CASE v0.c0  WHEN t0.c0 THEN rt1.c0 END END) ORDER BY v0.c2  NULLS FIRST, rt0.c0;
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN (((rt0.c1 IN ()), ((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)), CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END, rt0.c0 COLLATE BINARY)) AND ((((rt0.c1)IS(rt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), rt0.c3, CASE x'57cb'  WHEN rt0.c1 THEN rt0.c1 END, ((rt0.c2)>>(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN (((rt0.c1 IN ()), ((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)), CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END, rt0.c0 COLLATE BINARY)) AND ((((rt0.c1)IS(rt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), rt0.c3, CASE x'57cb'  WHEN rt0.c1 THEN rt0.c1 END, ((rt0.c2)>>(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN (((rt0.c1 IN ()), ((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)), CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END, rt0.c0 COLLATE BINARY)) AND ((((rt0.c1)IS(rt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), rt0.c3, CASE x'57cb'  WHEN rt0.c1 THEN rt0.c1 END, ((rt0.c2)>>(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN (((rt0.c1 IN ()), ((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)), CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END, rt0.c0 COLLATE BINARY)) AND ((((rt0.c1)IS(rt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), rt0.c3, CASE x'57cb'  WHEN rt0.c1 THEN rt0.c1 END, ((rt0.c2)>>(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN (((rt0.c1 IN ()), ((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)), CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END, rt0.c0 COLLATE BINARY)) AND ((((rt0.c1)IS(rt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), rt0.c3, CASE x'57cb'  WHEN rt0.c1 THEN rt0.c1 END, ((rt0.c2)>>(rt0.c2))))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)==(t1.c0))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (t1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)=(t1.c0))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)==(t1.c0))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (t1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)=(t1.c0))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)==(t1.c0))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (t1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED, t1 WHERE (((((t1.c0)IS NOT(rt0.c3))) BETWEEN (((rt0.c0)IS NOT(rt0.c2))) AND ((~ ('-13908777')))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)IS NOT(rt0.c3))) BETWEEN (((rt0.c0)IS NOT(rt0.c2))) AND ((~ ('-13908777'))))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED, t1 WHERE (((((t1.c0)IS NOT(rt0.c3))) BETWEEN (((rt0.c0)IS NOT(rt0.c2))) AND ((~ ('-13908777')))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)IS NOT(rt0.c3))) BETWEEN (((rt0.c0)IS NOT(rt0.c2))) AND ((~ ('-13908777'))))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED, t1 WHERE (((((t1.c0)IS NOT(rt0.c3))) BETWEEN (((rt0.c0)IS NOT(rt0.c2))) AND ((~ ('-13908777')))));
SELECT COUNT(*) FROM rt1, t0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (rt1.c0);
SELECT * FROM rt0 WHERE (CASE WHEN CASE WHEN 0.5012807417194098 THEN rt0.c0 END THEN CAST(rt0.c2 AS REAL) END) ORDER BY ((((rt0.c3)>(rt0.c3))) BETWEEN ((rt0.c1 IN (rt0.c2, rt0.c3))) AND (NULLIF(DISTINCT rt0.c0, rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN 0.5012807417194098 THEN rt0.c0 END THEN CAST(rt0.c2 AS REAL) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)>(rt0.c3))) BETWEEN ((rt0.c1 IN (rt0.c2, rt0.c3))) AND (NULLIF(DISTINCT rt0.c0, rt0.c1))) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN CASE WHEN 0.5012807417194098 THEN rt0.c0 END THEN CAST(rt0.c2 AS REAL) END) ORDER BY ((((rt0.c3)>(rt0.c3))) BETWEEN ((rt0.c1 IN (rt0.c2, rt0.c3))) AND (NULLIF(DISTINCT rt0.c0, rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN 0.5012807417194098 THEN rt0.c0 END THEN CAST(rt0.c2 AS REAL) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)>(rt0.c3))) BETWEEN ((rt0.c1 IN (rt0.c2, rt0.c3))) AND (NULLIF(DISTINCT rt0.c0, rt0.c1))) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN CASE WHEN 0.5012807417194098 THEN rt0.c0 END THEN CAST(rt0.c2 AS REAL) END) ORDER BY ((((rt0.c3)>(rt0.c3))) BETWEEN ((rt0.c1 IN (rt0.c2, rt0.c3))) AND (NULLIF(DISTINCT rt0.c0, rt0.c1))) DESC;
SELECT ALL * FROM t1, t0 INNER JOIN v0 ON v0.c3 WHERE (((CASE t1.c0  WHEN v0.c0 THEN v0.c2 END)>=(((v0.c4)||(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c0  WHEN v0.c0 THEN v0.c2 END)>=(((v0.c4)||(t0.c0))))) IS TRUE)  as count FROM t1, t0 INNER JOIN v0 ON v0.c3);
SELECT ALL * FROM t1, t0 INNER JOIN v0 ON v0.c3 WHERE (((CASE t1.c0  WHEN v0.c0 THEN v0.c2 END)>=(((v0.c4)||(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c0  WHEN v0.c0 THEN v0.c2 END)>=(((v0.c4)||(t0.c0))))) IS TRUE)  as count FROM t1, t0 INNER JOIN v0 ON v0.c3);
SELECT ALL * FROM t1, t0 INNER JOIN v0 ON v0.c3 WHERE (((CASE t1.c0  WHEN v0.c0 THEN v0.c2 END)>=(((v0.c4)||(t0.c0)))));
SELECT COUNT(*) FROM rt0, rt1, t0 FULL OUTER JOIN t1 ON rt0.c3 WHERE (((((rt0.c1)OR(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c2 END)))OR(CASE rt0.c3  WHEN rt1.c3 THEN x'6818' END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c2 END)))OR(CASE rt0.c3  WHEN rt1.c3 THEN x'6818' END))) IS TRUE)  as count FROM rt0, rt1, t0 NOT INDEXED FULL OUTER JOIN t1 ON rt0.c3);
SELECT COUNT(*) FROM rt0, rt1, t0 FULL OUTER JOIN t1 ON rt0.c3 WHERE (((((rt0.c1)OR(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c2 END)))OR(CASE rt0.c3  WHEN rt1.c3 THEN x'6818' END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c2 END)))OR(CASE rt0.c3  WHEN rt1.c3 THEN x'6818' END))) IS TRUE)  as count FROM rt0, rt1, t0 NOT INDEXED FULL OUTER JOIN t1 ON rt0.c3);
SELECT COUNT(*) FROM rt0, rt1, t0 FULL OUTER JOIN t1 ON rt0.c3 WHERE (((((rt0.c1)OR(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c2 END)))OR(CASE rt0.c3  WHEN rt1.c3 THEN x'6818' END)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c2)GLOB(rt0.c2))))>=((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))))) ORDER BY (((NOT (t0.c0))) IS TRUE), TYPEOF(DISTINCT ((rt0.c1) NOT NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)GLOB(rt0.c2))))>=((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((NOT (t0.c0))) IS TRUE), TYPEOF(DISTINCT ((rt0.c1) NOT NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c2)GLOB(rt0.c2))))>=((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))))) ORDER BY (((NOT (t0.c0))) IS TRUE), TYPEOF(DISTINCT ((rt0.c1) NOT NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)GLOB(rt0.c2))))>=((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((NOT (t0.c0))) IS TRUE), TYPEOF(DISTINCT ((rt0.c1) NOT NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c2)GLOB(rt0.c2))))>=((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))))) ORDER BY (((NOT (t0.c0))) IS TRUE), TYPEOF(DISTINCT ((rt0.c1) NOT NULL))  NULLS FIRST;
SELECT ALL * FROM rt1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (NULL);
SELECT COUNT(*) FROM rt0, t1 FULL OUTER JOIN rt1 ON LENGTH(((((rt0.c2)AND(rt0.c0)))AND(rt1.c3))) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN rt1 ON LENGTH(((((rt0.c2)AND(rt0.c0)))AND(rt1.c3))));
SELECT COUNT(*) FROM rt0, t1 FULL OUTER JOIN rt1 ON LENGTH(((((rt0.c2)AND(rt0.c0)))AND(rt1.c3))) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN rt1 ON LENGTH(((((rt0.c2)AND(rt0.c0)))AND(rt1.c3))));
SELECT COUNT(*) FROM rt0, t1 FULL OUTER JOIN rt1 ON LENGTH(((((rt0.c2)AND(rt0.c0)))AND(rt1.c3))) WHERE (rt1.c3);
SELECT COUNT(*) FROM v0, t1, rt0, t0, rt1 WHERE (CAST(((((rt0.c0)OR(rt1.c1)))OR(v0.c0)) AS REAL)) ORDER BY CAST(rt0.c1 AS NUMERIC) ASC  NULLS FIRST, (((v0.c3)) NOT BETWEEN ((('445858574' IN ()))) AND ((((((((((rt0.c2)AND(rt1.c3)))AND('0.5375306961279459')))AND(rt1.c2)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c0)OR(rt1.c1)))OR(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0, t1, rt0, t0, rt1 ORDER BY CAST(rt0.c1 AS NUMERIC) ASC  NULLS FIRST, (((v0.c3)) NOT BETWEEN ((('445858574' IN ()))) AND ((((((((((rt0.c2)AND(rt1.c3)))AND('0.5375306961279459')))AND(rt1.c2)))OR(rt1.c2))))));
SELECT COUNT(*) FROM v0, t1, rt0, t0, rt1 WHERE (CAST(((((rt0.c0)OR(rt1.c1)))OR(v0.c0)) AS REAL)) ORDER BY CAST(rt0.c1 AS NUMERIC) ASC  NULLS FIRST, (((v0.c3)) NOT BETWEEN ((('445858574' IN ()))) AND ((((((((((rt0.c2)AND(rt1.c3)))AND('0.5375306961279459')))AND(rt1.c2)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c0)OR(rt1.c1)))OR(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0, t1, rt0, t0, rt1 ORDER BY CAST(rt0.c1 AS NUMERIC) ASC  NULLS FIRST, (((v0.c3)) NOT BETWEEN ((('445858574' IN ()))) AND ((((((((((rt0.c2)AND(rt1.c3)))AND('0.5375306961279459')))AND(rt1.c2)))OR(rt1.c2))))));
SELECT COUNT(*) FROM v0, t1, rt0, t0, rt1 WHERE (CAST(((((rt0.c0)OR(rt1.c1)))OR(v0.c0)) AS REAL)) ORDER BY CAST(rt0.c1 AS NUMERIC) ASC  NULLS FIRST, (((v0.c3)) NOT BETWEEN ((('445858574' IN ()))) AND ((((((((((rt0.c2)AND(rt1.c3)))AND('0.5375306961279459')))AND(rt1.c2)))OR(rt1.c2)))));
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c0) NOT NULL))AND(rt0.c2)))OR(((((((((rt0.c2)AND('2K')))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))))OR(rt0.c0)))AND(0.9717122157249587)))AND(json_quote(rt0.c0))))AND(((((NULL)AND(rt0.c3)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c0) NOT NULL))AND(rt0.c2)))OR(((((((((rt0.c2)AND('2K')))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))))OR(rt0.c0)))AND(0.9717122157249587)))AND(json_quote(rt0.c0))))AND(((((NULL)AND(rt0.c3)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c0) NOT NULL))AND(rt0.c2)))OR(((((((((rt0.c2)AND('2K')))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))))OR(rt0.c0)))AND(0.9717122157249587)))AND(json_quote(rt0.c0))))AND(((((NULL)AND(rt0.c3)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c0) NOT NULL))AND(rt0.c2)))OR(((((((((rt0.c2)AND('2K')))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))))OR(rt0.c0)))AND(0.9717122157249587)))AND(json_quote(rt0.c0))))AND(((((NULL)AND(rt0.c3)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c0) NOT NULL))AND(rt0.c2)))OR(((((((((rt0.c2)AND('2K')))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))))OR(rt0.c0)))AND(0.9717122157249587)))AND(json_quote(rt0.c0))))AND(((((NULL)AND(rt0.c3)))AND(rt0.c2)))));
SELECT ALL * FROM v0 WHERE (CASE v0.c1 COLLATE RTRIM  WHEN v0.c3 THEN ((v0.c1) ISNULL) WHEN v0.c1 THEN ((v0.c1)<<(v0.c0)) WHEN ((v0.c2) IS TRUE) THEN CASE v0.c0  WHEN NULL THEN v0.c2 WHEN NULL THEN v0.c3 WHEN x'94a4' THEN v0.c4 ELSE v0.c2 END ELSE 1012715944 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c1 COLLATE RTRIM  WHEN v0.c3 THEN ((v0.c1) ISNULL) WHEN v0.c1 THEN ((v0.c1)<<(v0.c0)) WHEN ((v0.c2) IS TRUE) THEN CASE v0.c0  WHEN NULL THEN v0.c2 WHEN NULL THEN v0.c3 WHEN x'94a4' THEN v0.c4 ELSE v0.c2 END ELSE 1012715944 END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE v0.c1 COLLATE RTRIM  WHEN v0.c3 THEN ((v0.c1) ISNULL) WHEN v0.c1 THEN ((v0.c1)<<(v0.c0)) WHEN ((v0.c2) IS TRUE) THEN CASE v0.c0  WHEN NULL THEN v0.c2 WHEN NULL THEN v0.c3 WHEN x'94a4' THEN v0.c4 ELSE v0.c2 END ELSE 1012715944 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c1 COLLATE RTRIM  WHEN v0.c3 THEN ((v0.c1) ISNULL) WHEN v0.c1 THEN ((v0.c1)<<(v0.c0)) WHEN ((v0.c2) IS TRUE) THEN CASE v0.c0  WHEN NULL THEN v0.c2 WHEN NULL THEN v0.c3 WHEN x'94a4' THEN v0.c4 ELSE v0.c2 END ELSE 1012715944 END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE v0.c1 COLLATE RTRIM  WHEN v0.c3 THEN ((v0.c1) ISNULL) WHEN v0.c1 THEN ((v0.c1)<<(v0.c0)) WHEN ((v0.c2) IS TRUE) THEN CASE v0.c0  WHEN NULL THEN v0.c2 WHEN NULL THEN v0.c3 WHEN x'94a4' THEN v0.c4 ELSE v0.c2 END ELSE 1012715944 END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c2)))-(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c2)))-(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c2)))-(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c2)))-(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c2)))-(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT COUNT(*) FROM rt1, v0, t1, rt0 WHERE ((((rt1.c1)) BETWEEN (((- (v0.c3)))) AND ((TRIM(rt0.c3, rt1.c1))))) ORDER BY ((((rt1.c2)!=(v0.c4))) BETWEEN (0.03486290198415609) AND (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END))  NULLS LAST, ((v0.c0) BETWEEN ((rt1.c3 IN (rt1.c0, x''))) AND (((rt1.c3) ISNULL))) DESC, (v0.c2 IN (t1.c0, v0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN (((- (v0.c3)))) AND ((TRIM(rt0.c3, rt1.c1))))) IS TRUE)  as count FROM rt1, v0, t1, rt0 ORDER BY ((((rt1.c2)!=(v0.c4))) BETWEEN (0.03486290198415609) AND (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END))  NULLS LAST, ((v0.c0) BETWEEN ((rt1.c3 IN (rt1.c0, x''))) AND (((rt1.c3) ISNULL))) DESC, (v0.c2 IN (t1.c0, v0.c2)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0, t1, rt0 WHERE ((((rt1.c1)) BETWEEN (((- (v0.c3)))) AND ((TRIM(rt0.c3, rt1.c1))))) ORDER BY ((((rt1.c2)!=(v0.c4))) BETWEEN (0.03486290198415609) AND (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END))  NULLS LAST, ((v0.c0) BETWEEN ((rt1.c3 IN (rt1.c0, x''))) AND (((rt1.c3) ISNULL))) DESC, (v0.c2 IN (t1.c0, v0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN (((- (v0.c3)))) AND ((TRIM(rt0.c3, rt1.c1))))) IS TRUE)  as count FROM rt1, v0, t1, rt0 ORDER BY ((((rt1.c2)!=(v0.c4))) BETWEEN (0.03486290198415609) AND (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END))  NULLS LAST, ((v0.c0) BETWEEN ((rt1.c3 IN (rt1.c0, x''))) AND (((rt1.c3) ISNULL))) DESC, (v0.c2 IN (t1.c0, v0.c2)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0, t1, rt0 WHERE ((((rt1.c1)) BETWEEN (((- (v0.c3)))) AND ((TRIM(rt0.c3, rt1.c1))))) ORDER BY ((((rt1.c2)!=(v0.c4))) BETWEEN (0.03486290198415609) AND (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END))  NULLS LAST, ((v0.c0) BETWEEN ((rt1.c3 IN (rt1.c0, x''))) AND (((rt1.c3) ISNULL))) DESC, (v0.c2 IN (t1.c0, v0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((((((NULL) NOT BETWEEN (v0.c2) AND (rt0.c0)))AND((+ (v0.c0)))))AND(CASE WHEN rt0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c3 END)) WHERE ((((x'183d')) BETWEEN ((((v0.c1)>(v0.c0)))) AND ((v0.c4)))) ORDER BY (('1602535219')LIKE(((rt0.c0) NOT BETWEEN (v0.c3) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((x'183d')) BETWEEN ((((v0.c1)>(v0.c0)))) AND ((v0.c4)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((NULL) NOT BETWEEN (v0.c2) AND (rt0.c0)))AND((+ (v0.c0)))))AND(CASE WHEN rt0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c3 END)) ORDER BY (('1602535219')LIKE(((rt0.c0) NOT BETWEEN (v0.c3) AND (rt0.c0)))) ASC);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((((((NULL) NOT BETWEEN (v0.c2) AND (rt0.c0)))AND((+ (v0.c0)))))AND(CASE WHEN rt0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c3 END)) WHERE ((((x'183d')) BETWEEN ((((v0.c1)>(v0.c0)))) AND ((v0.c4)))) ORDER BY (('1602535219')LIKE(((rt0.c0) NOT BETWEEN (v0.c3) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((x'183d')) BETWEEN ((((v0.c1)>(v0.c0)))) AND ((v0.c4)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((NULL) NOT BETWEEN (v0.c2) AND (rt0.c0)))AND((+ (v0.c0)))))AND(CASE WHEN rt0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c3 END)) ORDER BY (('1602535219')LIKE(((rt0.c0) NOT BETWEEN (v0.c3) AND (rt0.c0)))) ASC);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((((((NULL) NOT BETWEEN (v0.c2) AND (rt0.c0)))AND((+ (v0.c0)))))AND(CASE WHEN rt0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c3 END)) WHERE ((((x'183d')) BETWEEN ((((v0.c1)>(v0.c0)))) AND ((v0.c4)))) ORDER BY (('1602535219')LIKE(((rt0.c0) NOT BETWEEN (v0.c3) AND (rt0.c0)))) ASC;
SELECT COUNT(*) FROM v0, rt0, t1, rt1 WHERE ('' COLLATE NOCASE) ORDER BY CAST(((rt1.c0)AND(NULL)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (('' COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, t1, rt1 ORDER BY CAST(((rt1.c0)AND(NULL)) AS NUMERIC) DESC);
SELECT COUNT(*) FROM v0, rt0, t1, rt1 WHERE ('' COLLATE NOCASE) ORDER BY CAST(((rt1.c0)AND(NULL)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (('' COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, t1, rt1 ORDER BY CAST(((rt1.c0)AND(NULL)) AS NUMERIC) DESC);
SELECT COUNT(*) FROM v0, rt0, t1, rt1 WHERE ('' COLLATE NOCASE) ORDER BY CAST(((rt1.c0)AND(NULL)) AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM t1, t0, rt1, v0 WHERE ((+ ((+ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (rt1.c3))))) IS TRUE)  as count FROM t1, t0, rt1, v0);
SELECT ALL COUNT(*) FROM t1, t0, rt1, v0 WHERE ((+ ((+ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (rt1.c3))))) IS TRUE)  as count FROM t1, t0, rt1, v0);
SELECT ALL COUNT(*) FROM t1, t0, rt1, v0 WHERE ((+ ((+ (rt1.c3)))));
SELECT ALL COUNT(*) FROM t0, rt0, v0, t1, rt1 WHERE ((((+ (v0.c4)))-((((v0.c3, rt1.c3, t0.c0)) NOT BETWEEN ((0.9717122157249587, rt0.c3, rt0.c3)) AND ((rt1.c0, rt1.c2, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c4)))-((((v0.c3, rt1.c3, t0.c0)) NOT BETWEEN ((0.9717122157249587, rt0.c3, rt0.c3)) AND ((rt1.c0, rt1.c2, rt0.c1)))))) IS TRUE)  as count FROM t0, rt0, v0, t1, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, v0, t1, rt1 WHERE ((((+ (v0.c4)))-((((v0.c3, rt1.c3, t0.c0)) NOT BETWEEN ((0.9717122157249587, rt0.c3, rt0.c3)) AND ((rt1.c0, rt1.c2, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c4)))-((((v0.c3, rt1.c3, t0.c0)) NOT BETWEEN ((0.9717122157249587, rt0.c3, rt0.c3)) AND ((rt1.c0, rt1.c2, rt0.c1)))))) IS TRUE)  as count FROM t0, rt0, v0, t1, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, v0, t1, rt1 WHERE ((((+ (v0.c4)))-((((v0.c3, rt1.c3, t0.c0)) NOT BETWEEN ((0.9717122157249587, rt0.c3, rt0.c3)) AND ((rt1.c0, rt1.c2, rt0.c1))))));
SELECT ALL * FROM t1, v0, rt0 WHERE (((((v0.c3)||(rt0.c3)))LIKE((((v0.c4, x'', v0.c1, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c1, v0.c1, rt0.c0, rt0.c1, rt0.c2)) AND ((0Xffffffff87922e5f, v0.c1, rt0.c3, v0.c3, v0.c1)))))) ORDER BY rtreenode(NULL, rt0.c3) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c3)||(rt0.c3)))LIKE((((v0.c4, x'', v0.c1, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c1, v0.c1, rt0.c0, rt0.c1, rt0.c2)) AND ((0Xffffffff87922e5f, v0.c1, rt0.c3, v0.c3, v0.c1)))))) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY rtreenode(NULL, rt0.c3) COLLATE NOCASE ASC);
SELECT ALL * FROM t1, v0, rt0 WHERE (((((v0.c3)||(rt0.c3)))LIKE((((v0.c4, x'', v0.c1, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c1, v0.c1, rt0.c0, rt0.c1, rt0.c2)) AND ((0Xffffffff87922e5f, v0.c1, rt0.c3, v0.c3, v0.c1)))))) ORDER BY rtreenode(NULL, rt0.c3) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c3)||(rt0.c3)))LIKE((((v0.c4, x'', v0.c1, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c1, v0.c1, rt0.c0, rt0.c1, rt0.c2)) AND ((0Xffffffff87922e5f, v0.c1, rt0.c3, v0.c3, v0.c1)))))) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY rtreenode(NULL, rt0.c3) COLLATE NOCASE ASC);
SELECT ALL * FROM t1, v0, rt0 WHERE (((((v0.c3)||(rt0.c3)))LIKE((((v0.c4, x'', v0.c1, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c1, v0.c1, rt0.c0, rt0.c1, rt0.c2)) AND ((0Xffffffff87922e5f, v0.c1, rt0.c3, v0.c3, v0.c1)))))) ORDER BY rtreenode(NULL, rt0.c3) COLLATE NOCASE ASC;
SELECT * FROM rt0 WHERE (-276421446) ORDER BY (((~ (rt0.c1)))<<(rt0.c2)), ((rt0.c0) ISNULL) COLLATE NOCASE  NULLS FIRST, (('-1652373523')>=(ABS(DISTINCT rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-276421446) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c1)))<<(rt0.c2)), ((rt0.c0) ISNULL) COLLATE NOCASE  NULLS FIRST, (('-1652373523')>=(ABS(DISTINCT rt0.c1)))  NULLS LAST);
SELECT * FROM rt0 WHERE (-276421446) ORDER BY (((~ (rt0.c1)))<<(rt0.c2)), ((rt0.c0) ISNULL) COLLATE NOCASE  NULLS FIRST, (('-1652373523')>=(ABS(DISTINCT rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-276421446) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c1)))<<(rt0.c2)), ((rt0.c0) ISNULL) COLLATE NOCASE  NULLS FIRST, (('-1652373523')>=(ABS(DISTINCT rt0.c1)))  NULLS LAST);
SELECT * FROM rt0 WHERE (-276421446) ORDER BY (((~ (rt0.c1)))<<(rt0.c2)), ((rt0.c0) ISNULL) COLLATE NOCASE  NULLS FIRST, (('-1652373523')>=(ABS(DISTINCT rt0.c1)))  NULLS LAST;
SELECT * FROM t0, rt1, v0, t1 WHERE (CASE WHEN ((('1622033379', NULL, rt1.c0, rt1.c2, rt1.c3)) NOT BETWEEN ((v0.c1, rt1.c0, rt1.c1, v0.c4, v0.c0)) AND ((rt1.c2, v0.c1, rt1.c0, v0.c3, t0.c0))) THEN RTRIM(t0.c0) WHEN CASE WHEN v0.c0 THEN v0.c3 WHEN v0.c4 THEN NULL WHEN v0.c1 THEN t0.c0 ELSE v0.c0 END THEN x'' WHEN (((v0.c2, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c1, v0.c1)) AND ((x'', v0.c1, rt1.c1))) THEN t0.c0 COLLATE NOCASE END) ORDER BY (((v0.c4)) NOT BETWEEN (((((rt1.c2))<=((v0.c0))))) AND ((rt1.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((('1622033379', NULL, rt1.c0, rt1.c2, rt1.c3)) NOT BETWEEN ((v0.c1, rt1.c0, rt1.c1, v0.c4, v0.c0)) AND ((rt1.c2, v0.c1, rt1.c0, v0.c3, t0.c0))) THEN RTRIM(t0.c0) WHEN CASE WHEN v0.c0 THEN v0.c3 WHEN v0.c4 THEN NULL WHEN v0.c1 THEN t0.c0 ELSE v0.c0 END THEN x'' WHEN (((v0.c2, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c1, v0.c1)) AND ((x'', v0.c1, rt1.c1))) THEN t0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0, rt1, v0, t1 ORDER BY (((v0.c4)) NOT BETWEEN (((((rt1.c2))<=((v0.c0))))) AND ((rt1.c2))) DESC  NULLS LAST);
SELECT * FROM t0, rt1, v0, t1 WHERE (CASE WHEN ((('1622033379', NULL, rt1.c0, rt1.c2, rt1.c3)) NOT BETWEEN ((v0.c1, rt1.c0, rt1.c1, v0.c4, v0.c0)) AND ((rt1.c2, v0.c1, rt1.c0, v0.c3, t0.c0))) THEN RTRIM(t0.c0) WHEN CASE WHEN v0.c0 THEN v0.c3 WHEN v0.c4 THEN NULL WHEN v0.c1 THEN t0.c0 ELSE v0.c0 END THEN x'' WHEN (((v0.c2, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c1, v0.c1)) AND ((x'', v0.c1, rt1.c1))) THEN t0.c0 COLLATE NOCASE END) ORDER BY (((v0.c4)) NOT BETWEEN (((((rt1.c2))<=((v0.c0))))) AND ((rt1.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((('1622033379', NULL, rt1.c0, rt1.c2, rt1.c3)) NOT BETWEEN ((v0.c1, rt1.c0, rt1.c1, v0.c4, v0.c0)) AND ((rt1.c2, v0.c1, rt1.c0, v0.c3, t0.c0))) THEN RTRIM(t0.c0) WHEN CASE WHEN v0.c0 THEN v0.c3 WHEN v0.c4 THEN NULL WHEN v0.c1 THEN t0.c0 ELSE v0.c0 END THEN x'' WHEN (((v0.c2, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c1, v0.c1)) AND ((x'', v0.c1, rt1.c1))) THEN t0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0, rt1, v0, t1 ORDER BY (((v0.c4)) NOT BETWEEN (((((rt1.c2))<=((v0.c0))))) AND ((rt1.c2))) DESC  NULLS LAST);
SELECT * FROM t0, rt1, v0, t1 WHERE (CASE WHEN ((('1622033379', NULL, rt1.c0, rt1.c2, rt1.c3)) NOT BETWEEN ((v0.c1, rt1.c0, rt1.c1, v0.c4, v0.c0)) AND ((rt1.c2, v0.c1, rt1.c0, v0.c3, t0.c0))) THEN RTRIM(t0.c0) WHEN CASE WHEN v0.c0 THEN v0.c3 WHEN v0.c4 THEN NULL WHEN v0.c1 THEN t0.c0 ELSE v0.c0 END THEN x'' WHEN (((v0.c2, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c1, v0.c1)) AND ((x'', v0.c1, rt1.c1))) THEN t0.c0 COLLATE NOCASE END) ORDER BY (((v0.c4)) NOT BETWEEN (((((rt1.c2))<=((v0.c0))))) AND ((rt1.c2))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN v0 ON ((CASE t0.c0  WHEN rt1.c2 THEN v0.c2 ELSE v0.c0 END)%((rt0.c1 IN (v0.c2, v0.c4)))) FULL OUTER JOIN rt1 ON (((((((((v0.c3)OR(t0.c0)))AND(t0.c0)))OR(v0.c4)))AND(v0.c2)) IN ()) WHERE (((((((((((v0.c2)LIKE(rt1.c0)))OR(((rt0.c1)%(v0.c2)))))OR(((rt0.c1)AND(rt0.c1)))))AND(2.084041406E9)))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2)))))) ORDER BY rt1.c1  NULLS LAST, (- (rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c2)LIKE(rt1.c0)))OR(((rt0.c1)%(v0.c2)))))OR(((rt0.c1)AND(rt0.c1)))))AND(2.084041406E9)))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2)))))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 LEFT OUTER JOIN v0 ON ((CASE t0.c0  WHEN rt1.c2 THEN v0.c2 ELSE v0.c0 END)%((rt0.c1 IN (v0.c2, v0.c4)))) FULL OUTER JOIN rt1 ON (((((((((v0.c3)OR(t0.c0)))AND(t0.c0)))OR(v0.c4)))AND(v0.c2)) IN ()) ORDER BY rt1.c1  NULLS LAST, (- (rt0.c0)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN v0 ON ((CASE t0.c0  WHEN rt1.c2 THEN v0.c2 ELSE v0.c0 END)%((rt0.c1 IN (v0.c2, v0.c4)))) FULL OUTER JOIN rt1 ON (((((((((v0.c3)OR(t0.c0)))AND(t0.c0)))OR(v0.c4)))AND(v0.c2)) IN ()) WHERE (((((((((((v0.c2)LIKE(rt1.c0)))OR(((rt0.c1)%(v0.c2)))))OR(((rt0.c1)AND(rt0.c1)))))AND(2.084041406E9)))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2)))))) ORDER BY rt1.c1  NULLS LAST, (- (rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c2)LIKE(rt1.c0)))OR(((rt0.c1)%(v0.c2)))))OR(((rt0.c1)AND(rt0.c1)))))AND(2.084041406E9)))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2)))))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 LEFT OUTER JOIN v0 ON ((CASE t0.c0  WHEN rt1.c2 THEN v0.c2 ELSE v0.c0 END)%((rt0.c1 IN (v0.c2, v0.c4)))) FULL OUTER JOIN rt1 ON (((((((((v0.c3)OR(t0.c0)))AND(t0.c0)))OR(v0.c4)))AND(v0.c2)) IN ()) ORDER BY rt1.c1  NULLS LAST, (- (rt0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM rt1, rt0, t1, v0, t0 WHERE (x'') ORDER BY (- (CASE t0.c0  WHEN rt0.c3 THEN rt1.c0 ELSE v0.c4 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, rt0, t1, v0, t0 ORDER BY (- (CASE t0.c0  WHEN rt0.c3 THEN rt1.c0 ELSE v0.c4 END))  NULLS LAST);
SELECT ALL * FROM rt1, rt0, t1, v0, t0 WHERE (x'') ORDER BY (- (CASE t0.c0  WHEN rt0.c3 THEN rt1.c0 ELSE v0.c4 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, rt0, t1, v0, t0 ORDER BY (- (CASE t0.c0  WHEN rt0.c3 THEN rt1.c0 ELSE v0.c4 END))  NULLS LAST);
SELECT ALL * FROM rt1, rt0, t1, v0, t0 WHERE (x'') ORDER BY (- (CASE t0.c0  WHEN rt0.c3 THEN rt1.c0 ELSE v0.c4 END))  NULLS LAST;
SELECT ALL * FROM rt1 CROSS JOIN v0 ON (NOT (DATE(rt1.c1, v0.c1, v0.c2))) INNER JOIN t0 ON ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN v0.c3 WHEN v0.c1 THEN v0.c2 ELSE t0.c0 END) NOTNULL) WHERE (((((rt1.c0) IS TRUE)) IS FALSE)) ORDER BY CASE (~ (v0.c2))  WHEN CAST(v0.c4 AS INTEGER) THEN v0.c1 COLLATE BINARY WHEN (+ ('3V')) THEN (NOT (rt1.c0)) WHEN ((0.17823829029247995) NOT BETWEEN (v0.c4) AND (rt1.c0)) THEN ((v0.c1) BETWEEN (rt1.c1) AND (v0.c1)) ELSE v0.c2 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON (NOT (DATE(rt1.c1, v0.c1, v0.c2))) INNER JOIN t0 ON ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN v0.c3 WHEN v0.c1 THEN v0.c2 ELSE t0.c0 END) NOTNULL) ORDER BY CASE (~ (v0.c2))  WHEN CAST(v0.c4 AS INTEGER) THEN v0.c1 COLLATE BINARY WHEN (+ ('3V')) THEN (NOT (rt1.c0)) WHEN ((0.17823829029247995) NOT BETWEEN (v0.c4) AND (rt1.c0)) THEN ((v0.c1) BETWEEN (rt1.c1) AND (v0.c1)) ELSE v0.c2 END DESC  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN v0 ON (NOT (DATE(rt1.c1, v0.c1, v0.c2))) INNER JOIN t0 ON ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN v0.c3 WHEN v0.c1 THEN v0.c2 ELSE t0.c0 END) NOTNULL) WHERE (((((rt1.c0) IS TRUE)) IS FALSE)) ORDER BY CASE (~ (v0.c2))  WHEN CAST(v0.c4 AS INTEGER) THEN v0.c1 COLLATE BINARY WHEN (+ ('3V')) THEN (NOT (rt1.c0)) WHEN ((0.17823829029247995) NOT BETWEEN (v0.c4) AND (rt1.c0)) THEN ((v0.c1) BETWEEN (rt1.c1) AND (v0.c1)) ELSE v0.c2 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON (NOT (DATE(rt1.c1, v0.c1, v0.c2))) INNER JOIN t0 ON ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN v0.c3 WHEN v0.c1 THEN v0.c2 ELSE t0.c0 END) NOTNULL) ORDER BY CASE (~ (v0.c2))  WHEN CAST(v0.c4 AS INTEGER) THEN v0.c1 COLLATE BINARY WHEN (+ ('3V')) THEN (NOT (rt1.c0)) WHEN ((0.17823829029247995) NOT BETWEEN (v0.c4) AND (rt1.c0)) THEN ((v0.c1) BETWEEN (rt1.c1) AND (v0.c1)) ELSE v0.c2 END DESC  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN v0 ON (NOT (DATE(rt1.c1, v0.c1, v0.c2))) INNER JOIN t0 ON ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN v0.c3 WHEN v0.c1 THEN v0.c2 ELSE t0.c0 END) NOTNULL) WHERE (((((rt1.c0) IS TRUE)) IS FALSE)) ORDER BY CASE (~ (v0.c2))  WHEN CAST(v0.c4 AS INTEGER) THEN v0.c1 COLLATE BINARY WHEN (+ ('3V')) THEN (NOT (rt1.c0)) WHEN ((0.17823829029247995) NOT BETWEEN (v0.c4) AND (rt1.c0)) THEN ((v0.c1) BETWEEN (rt1.c1) AND (v0.c1)) ELSE v0.c2 END DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (CAST(rt1.c2 COLLATE BINARY AS BLOB)) ORDER BY ((rt1.c1) BETWEEN (((rt1.c1)=(rt1.c0))) AND (rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1) BETWEEN (((rt1.c1)=(rt1.c0))) AND (rt1.c2)) DESC);
SELECT * FROM rt1 WHERE (CAST(rt1.c2 COLLATE BINARY AS BLOB)) ORDER BY ((rt1.c1) BETWEEN (((rt1.c1)=(rt1.c0))) AND (rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1) BETWEEN (((rt1.c1)=(rt1.c0))) AND (rt1.c2)) DESC);
SELECT * FROM rt1 WHERE (CAST(rt1.c2 COLLATE BINARY AS BLOB)) ORDER BY ((rt1.c1) BETWEEN (((rt1.c1)=(rt1.c0))) AND (rt1.c2)) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1)) NOT BETWEEN (('105836174')) AND ((v0.c2))) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN (('105836174')) AND ((v0.c2))) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1)) NOT BETWEEN (('105836174')) AND ((v0.c2))) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN (('105836174')) AND ((v0.c2))) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1)) NOT BETWEEN (('105836174')) AND ((v0.c2))) COLLATE BINARY COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c3) IS FALSE) COLLATE NOCASE) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c3) IS FALSE) COLLATE NOCASE) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c3) IS FALSE) COLLATE NOCASE) ORDER BY rt1.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN t1 ON ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))&(((rt1.c0) NOT NULL))) WHERE (((rt1.c3) BETWEEN (NULL) AND (rt1.c3)) COLLATE RTRIM) ORDER BY rt1.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) BETWEEN (NULL) AND (rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN t1 ON ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))&(((rt1.c0) NOT NULL))) ORDER BY rt1.c3 ASC);
SELECT ALL COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN t1 ON ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))&(((rt1.c0) NOT NULL))) WHERE (((rt1.c3) BETWEEN (NULL) AND (rt1.c3)) COLLATE RTRIM) ORDER BY rt1.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) BETWEEN (NULL) AND (rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN t1 ON ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))&(((rt1.c0) NOT NULL))) ORDER BY rt1.c3 ASC);
SELECT ALL COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN t1 ON ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))&(((rt1.c0) NOT NULL))) WHERE (((rt1.c3) BETWEEN (NULL) AND (rt1.c3)) COLLATE RTRIM) ORDER BY rt1.c3 ASC;
SELECT * FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (TYPEOF(DISTINCT v0.c0)) AND (v0.c0 COLLATE NOCASE))) ORDER BY (((v0.c0 IN ()))*('1233114729' COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) BETWEEN (TYPEOF(DISTINCT v0.c0)) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))*('1233114729' COLLATE RTRIM)) ASC);
SELECT * FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (TYPEOF(DISTINCT v0.c0)) AND (v0.c0 COLLATE NOCASE))) ORDER BY (((v0.c0 IN ()))*('1233114729' COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) BETWEEN (TYPEOF(DISTINCT v0.c0)) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))*('1233114729' COLLATE RTRIM)) ASC);
SELECT * FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (TYPEOF(DISTINCT v0.c0)) AND (v0.c0 COLLATE NOCASE))) ORDER BY (((v0.c0 IN ()))*('1233114729' COLLATE RTRIM)) ASC;
SELECT * FROM t1 WHERE (CAST((t1.c0 IN ()) AS BLOB)) ORDER BY CHANGES() DESC  NULLS FIRST, HEX(((t1.c0)+(t1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY CHANGES() DESC  NULLS FIRST, HEX(((t1.c0)+(t1.c0))) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (CAST((t1.c0 IN ()) AS BLOB)) ORDER BY CHANGES() DESC  NULLS FIRST, HEX(((t1.c0)+(t1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY CHANGES() DESC  NULLS FIRST, HEX(((t1.c0)+(t1.c0))) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (CAST((t1.c0 IN ()) AS BLOB)) ORDER BY CHANGES() DESC  NULLS FIRST, HEX(((t1.c0)+(t1.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON 1.796935432E9 RIGHT OUTER JOIN t1 ON ((rt0.c2)GLOB(0X4c196781)) WHERE ((- (((v0.c3) ISNULL)))) ORDER BY CASE WHEN rt0.c1 THEN (v0.c4 IN (rt0.c3, '-1169097821')) END;
SELECT SUM(count) FROM (SELECT (((- (((v0.c3) ISNULL)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON 1.796935432E9 RIGHT OUTER JOIN t1 ON ((rt0.c2)GLOB(0x4c196781)) ORDER BY CASE WHEN rt0.c1 THEN (v0.c4 IN (rt0.c3, '-1169097821')) END);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON 1.796935432E9 RIGHT OUTER JOIN t1 ON ((rt0.c2)GLOB(0X4c196781)) WHERE ((- (((v0.c3) ISNULL)))) ORDER BY CASE WHEN rt0.c1 THEN (v0.c4 IN (rt0.c3, '-1169097821')) END;
SELECT SUM(count) FROM (SELECT (((- (((v0.c3) ISNULL)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON 1.796935432E9 RIGHT OUTER JOIN t1 ON ((rt0.c2)GLOB(0x4c196781)) ORDER BY CASE WHEN rt0.c1 THEN (v0.c4 IN (rt0.c3, '-1169097821')) END);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON 1.796935432E9 RIGHT OUTER JOIN t1 ON ((rt0.c2)GLOB(0X4c196781)) WHERE ((- (((v0.c3) ISNULL)))) ORDER BY CASE WHEN rt0.c1 THEN (v0.c4 IN (rt0.c3, '-1169097821')) END;
SELECT ALL COUNT(*) FROM t0, rt0, v0, rt1, t1 WHERE (TRIM(rt1.c0, ((v0.c1)=(t0.c0)))) ORDER BY ((((((((((((rt1.c2)AND(rt1.c1)))OR(v0.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))OR(x'')) COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt1.c0, ((v0.c1)==(t0.c0)))) IS TRUE)  as count FROM t0, rt0, v0, rt1, t1 ORDER BY ((((((((((((rt1.c2)AND(rt1.c1)))OR(v0.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))OR(x'')) COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, v0, rt1, t1 WHERE (TRIM(rt1.c0, ((v0.c1)=(t0.c0)))) ORDER BY ((((((((((((rt1.c2)AND(rt1.c1)))OR(v0.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))OR(x'')) COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt1.c0, ((v0.c1)==(t0.c0)))) IS TRUE)  as count FROM t0, rt0, v0, rt1, t1 ORDER BY ((((((((((((rt1.c2)AND(rt1.c1)))OR(v0.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))OR(x'')) COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, v0, rt1, t1 WHERE (TRIM(rt1.c0, ((v0.c1)=(t0.c0)))) ORDER BY ((((((((((((rt1.c2)AND(rt1.c1)))OR(v0.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))OR(x'')) COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt1 ON ((CAST(v0.c4 AS INTEGER))<(CASE WHEN rt1.c0 THEN v0.c3 WHEN v0.c1 THEN v0.c4 WHEN rt1.c1 THEN v0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c2 THEN v0.c4 ELSE rt0.c3 END)) INNER JOIN v0 ON (((v0.c2, rt1.c0, t0.c0)) BETWEEN (((~ (rt0.c0)), ABS(v0.c1), (v0.c2 IN ()))) AND ((((rt0.c3)%(t0.c0)), ABS(v0.c1), (((rt0.c1, rt1.c1, rt0.c1))!=((rt0.c0, rt0.c1, rt1.c2)))))) CROSS JOIN rt0 ON ((((((((((((v0.c1)AND(v0.c2)))AND(rt1.c0)))OR(rt0.c3)))AND(rt0.c2)))OR(((v0.c3)*(NULL)))))AND(((v0.c4) BETWEEN (rt0.c2) AND (v0.c1)))) WHERE (CAST(0.4021550829078887 AS BLOB)) ORDER BY (((TYPEOF(rt0.c3), ((v0.c1) BETWEEN (v0.c3) AND (rt0.c3)), -1.652373523E9))<=((NULLIF(DISTINCT rt1.c3, rt1.c1), (((rt1.c2, rt1.c2, v0.c3))<((v0.c0, rt0.c3, rt1.c0))), v0.c4))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(0.4021550829078887 AS BLOB)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON ((CAST(v0.c4 AS INTEGER))<(CASE WHEN rt1.c0 THEN v0.c3 WHEN v0.c1 THEN v0.c4 WHEN rt1.c1 THEN v0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c2 THEN v0.c4 ELSE rt0.c3 END)) INNER JOIN v0 ON (((v0.c2, rt1.c0, t0.c0)) BETWEEN (((~ (rt0.c0)), ABS(v0.c1), (v0.c2 IN ()))) AND ((((rt0.c3)%(t0.c0)), ABS(v0.c1), (((rt0.c1, rt1.c1, rt0.c1))!=((rt0.c0, rt0.c1, rt1.c2)))))) CROSS JOIN rt0 ON ((((((((((((v0.c1)AND(v0.c2)))AND(rt1.c0)))OR(rt0.c3)))AND(rt0.c2)))OR(((v0.c3)*(NULL)))))AND(((v0.c4) BETWEEN (rt0.c2) AND (v0.c1)))) ORDER BY (((TYPEOF(rt0.c3), ((v0.c1) BETWEEN (v0.c3) AND (rt0.c3)), -1.652373523E9))<=((NULLIF(DISTINCT rt1.c3, rt1.c1), (((rt1.c2, rt1.c2, v0.c3))<((v0.c0, rt0.c3, rt1.c0))), v0.c4))) DESC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt1 ON ((CAST(v0.c4 AS INTEGER))<(CASE WHEN rt1.c0 THEN v0.c3 WHEN v0.c1 THEN v0.c4 WHEN rt1.c1 THEN v0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c2 THEN v0.c4 ELSE rt0.c3 END)) INNER JOIN v0 ON (((v0.c2, rt1.c0, t0.c0)) BETWEEN (((~ (rt0.c0)), ABS(v0.c1), (v0.c2 IN ()))) AND ((((rt0.c3)%(t0.c0)), ABS(v0.c1), (((rt0.c1, rt1.c1, rt0.c1))!=((rt0.c0, rt0.c1, rt1.c2)))))) CROSS JOIN rt0 ON ((((((((((((v0.c1)AND(v0.c2)))AND(rt1.c0)))OR(rt0.c3)))AND(rt0.c2)))OR(((v0.c3)*(NULL)))))AND(((v0.c4) BETWEEN (rt0.c2) AND (v0.c1)))) WHERE (CAST(0.4021550829078887 AS BLOB)) ORDER BY (((TYPEOF(rt0.c3), ((v0.c1) BETWEEN (v0.c3) AND (rt0.c3)), -1.652373523E9))<=((NULLIF(DISTINCT rt1.c3, rt1.c1), (((rt1.c2, rt1.c2, v0.c3))<((v0.c0, rt0.c3, rt1.c0))), v0.c4))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(0.4021550829078887 AS BLOB)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON ((CAST(v0.c4 AS INTEGER))<(CASE WHEN rt1.c0 THEN v0.c3 WHEN v0.c1 THEN v0.c4 WHEN rt1.c1 THEN v0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c2 THEN v0.c4 ELSE rt0.c3 END)) INNER JOIN v0 ON (((v0.c2, rt1.c0, t0.c0)) BETWEEN (((~ (rt0.c0)), ABS(v0.c1), (v0.c2 IN ()))) AND ((((rt0.c3)%(t0.c0)), ABS(v0.c1), (((rt0.c1, rt1.c1, rt0.c1))!=((rt0.c0, rt0.c1, rt1.c2)))))) CROSS JOIN rt0 ON ((((((((((((v0.c1)AND(v0.c2)))AND(rt1.c0)))OR(rt0.c3)))AND(rt0.c2)))OR(((v0.c3)*(NULL)))))AND(((v0.c4) BETWEEN (rt0.c2) AND (v0.c1)))) ORDER BY (((TYPEOF(rt0.c3), ((v0.c1) BETWEEN (v0.c3) AND (rt0.c3)), -1.652373523E9))<=((NULLIF(DISTINCT rt1.c3, rt1.c1), (((rt1.c2, rt1.c2, v0.c3))<((v0.c0, rt0.c3, rt1.c0))), v0.c4))) DESC);
SELECT * FROM rt0, v0 WHERE (((0Xffffffff87922e5f) NOT BETWEEN (rt0.c0) AND (((v0.c2) NOT BETWEEN (rt0.c2) AND (v0.c3))))) ORDER BY CAST((((rt0.c3, rt0.c3, v0.c1))<(('1988848859', rt0.c3, v0.c2))) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((0xffffffff87922e5f) NOT BETWEEN (rt0.c0) AND (((v0.c2) NOT BETWEEN (rt0.c2) AND (v0.c3))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((((rt0.c3, rt0.c3, v0.c1))<(('1988848859', rt0.c3, v0.c2))) AS BLOB));
SELECT * FROM rt0, v0 WHERE (((0Xffffffff87922e5f) NOT BETWEEN (rt0.c0) AND (((v0.c2) NOT BETWEEN (rt0.c2) AND (v0.c3))))) ORDER BY CAST((((rt0.c3, rt0.c3, v0.c1))<(('1988848859', rt0.c3, v0.c2))) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((0xffffffff87922e5f) NOT BETWEEN (rt0.c0) AND (((v0.c2) NOT BETWEEN (rt0.c2) AND (v0.c3))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((((rt0.c3, rt0.c3, v0.c1))<(('1988848859', rt0.c3, v0.c2))) AS BLOB));
SELECT * FROM rt0, v0 WHERE (((0Xffffffff87922e5f) NOT BETWEEN (rt0.c0) AND (((v0.c2) NOT BETWEEN (rt0.c2) AND (v0.c3))))) ORDER BY CAST((((rt0.c3, rt0.c3, v0.c1))<(('1988848859', rt0.c3, v0.c2))) AS BLOB);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON CASE CASE rt1.c3  WHEN rt1.c1 THEN v0.c0 ELSE t0.c0 END  WHEN TRIM(DISTINCT rt0.c3, v0.c1) THEN 0x497fd669 WHEN 'j' THEN (((rt0.c2, v0.c4, t0.c0)) BETWEEN ((t0.c0, rt0.c0, rt1.c1)) AND ((rt1.c0, rt1.c1, 0.8514878836760156))) WHEN (((rt1.c1)) NOT BETWEEN ((v0.c4)) AND ((rt1.c3))) THEN 0.3847361690503307 ELSE ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)) END RIGHT OUTER JOIN v0 ON ((((rt1.c3) ISNULL))%('0.4322422373852818')) INNER JOIN t0 ON ((v0.c1)IS((t0.c0 IN (rt0.c1)))) WHERE (CAST('' AS REAL)) ORDER BY ((((rt1.c3)<<(rt1.c1))) IS FALSE), LIKELY(DISTINCT ((v0.c2) NOT BETWEEN (v0.c1) AND (rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS REAL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON CASE CASE rt1.c3  WHEN rt1.c1 THEN v0.c0 ELSE t0.c0 END  WHEN TRIM(DISTINCT rt0.c3, v0.c1) THEN 0x497fd669 WHEN 'j' THEN (((rt0.c2, v0.c4, t0.c0)) BETWEEN ((t0.c0, rt0.c0, rt1.c1)) AND ((rt1.c0, rt1.c1, 0.8514878836760156))) WHEN (((rt1.c1)) NOT BETWEEN ((v0.c4)) AND ((rt1.c3))) THEN 0.3847361690503307 ELSE ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)) END RIGHT OUTER JOIN v0 ON ((((rt1.c3) ISNULL))%('0.4322422373852818')) INNER JOIN t0 ON ((v0.c1)IS((t0.c0 IN (rt0.c1)))) ORDER BY ((((rt1.c3)<<(rt1.c1))) IS FALSE), LIKELY(DISTINCT ((v0.c2) NOT BETWEEN (v0.c1) AND (rt1.c0)))  NULLS FIRST);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON CASE CASE rt1.c3  WHEN rt1.c1 THEN v0.c0 ELSE t0.c0 END  WHEN TRIM(DISTINCT rt0.c3, v0.c1) THEN 0x497fd669 WHEN 'j' THEN (((rt0.c2, v0.c4, t0.c0)) BETWEEN ((t0.c0, rt0.c0, rt1.c1)) AND ((rt1.c0, rt1.c1, 0.8514878836760156))) WHEN (((rt1.c1)) NOT BETWEEN ((v0.c4)) AND ((rt1.c3))) THEN 0.3847361690503307 ELSE ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)) END RIGHT OUTER JOIN v0 ON ((((rt1.c3) ISNULL))%('0.4322422373852818')) INNER JOIN t0 ON ((v0.c1)IS((t0.c0 IN (rt0.c1)))) WHERE (CAST('' AS REAL)) ORDER BY ((((rt1.c3)<<(rt1.c1))) IS FALSE), LIKELY(DISTINCT ((v0.c2) NOT BETWEEN (v0.c1) AND (rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS REAL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON CASE CASE rt1.c3  WHEN rt1.c1 THEN v0.c0 ELSE t0.c0 END  WHEN TRIM(DISTINCT rt0.c3, v0.c1) THEN 0x497fd669 WHEN 'j' THEN (((rt0.c2, v0.c4, t0.c0)) BETWEEN ((t0.c0, rt0.c0, rt1.c1)) AND ((rt1.c0, rt1.c1, 0.8514878836760156))) WHEN (((rt1.c1)) NOT BETWEEN ((v0.c4)) AND ((rt1.c3))) THEN 0.3847361690503307 ELSE ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)) END RIGHT OUTER JOIN v0 ON ((((rt1.c3) ISNULL))%('0.4322422373852818')) INNER JOIN t0 ON ((v0.c1)IS((t0.c0 IN (rt0.c1)))) ORDER BY ((((rt1.c3)<<(rt1.c1))) IS FALSE), LIKELY(DISTINCT ((v0.c2) NOT BETWEEN (v0.c1) AND (rt1.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (-2020463009) ORDER BY ((CAST(v0.c4 AS NUMERIC))!=(((NULL)=(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-2020463009) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c4 AS NUMERIC))!=(((NULL)=(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (-2020463009) ORDER BY ((CAST(v0.c4 AS NUMERIC))!=(((NULL)=(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-2020463009) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c4 AS NUMERIC))!=(((NULL)=(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (-2020463009) ORDER BY ((CAST(v0.c4 AS NUMERIC))!=(((NULL)=(v0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((-0.0) BETWEEN (((v0.c2) NOT NULL)) AND (v0.c0 COLLATE NOCASE))) ORDER BY (NOT (CAST(v0.c1 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-0.0) BETWEEN (((v0.c2) NOT NULL)) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (CAST(v0.c1 AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((-0.0) BETWEEN (((v0.c2) NOT NULL)) AND (v0.c0 COLLATE NOCASE))) ORDER BY (NOT (CAST(v0.c1 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-0.0) BETWEEN (((v0.c2) NOT NULL)) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (CAST(v0.c1 AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((-0.0) BETWEEN (((v0.c2) NOT NULL)) AND (v0.c0 COLLATE NOCASE))) ORDER BY (NOT (CAST(v0.c1 AS REAL)))  NULLS FIRST;
SELECT * FROM rt1, v0, t0 WHERE ((NOT ((v0.c2 IN ())))) ORDER BY ((rt1.c3 COLLATE RTRIM) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((v0.c2 IN ())))) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY ((rt1.c3 COLLATE RTRIM) NOTNULL) DESC);
SELECT * FROM rt1, v0, t0 WHERE ((NOT ((v0.c2 IN ())))) ORDER BY ((rt1.c3 COLLATE RTRIM) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((v0.c2 IN ())))) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY ((rt1.c3 COLLATE RTRIM) NOTNULL) DESC);
SELECT * FROM rt1, v0, t0 WHERE ((NOT ((v0.c2 IN ())))) ORDER BY ((rt1.c3 COLLATE RTRIM) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON (+ ((v0.c0 IN ()))) INNER JOIN rt0 ON ((CAST(rt1.c1 AS NUMERIC)) NOT BETWEEN ((v0.c2 IN (v0.c3))) AND ((rt1.c3 IN ()))) LEFT OUTER JOIN v0 ON rt1.c0 WHERE (((((rt0.c1)>=(t0.c0)))|((- (v0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(t0.c0)))|((- (v0.c3))))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON (+ ((v0.c0 IN ()))) INNER JOIN rt0 ON ((CAST(rt1.c1 AS NUMERIC)) NOT BETWEEN ((v0.c2 IN (v0.c3))) AND ((rt1.c3 IN ()))) LEFT OUTER JOIN v0 ON rt1.c0);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON (+ ((v0.c0 IN ()))) INNER JOIN rt0 ON ((CAST(rt1.c1 AS NUMERIC)) NOT BETWEEN ((v0.c2 IN (v0.c3))) AND ((rt1.c3 IN ()))) LEFT OUTER JOIN v0 ON rt1.c0 WHERE (((((rt0.c1)>=(t0.c0)))|((- (v0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(t0.c0)))|((- (v0.c3))))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON (+ ((v0.c0 IN ()))) INNER JOIN rt0 ON ((CAST(rt1.c1 AS NUMERIC)) NOT BETWEEN ((v0.c2 IN (v0.c3))) AND ((rt1.c3 IN ()))) LEFT OUTER JOIN v0 ON rt1.c0);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON (+ ((v0.c0 IN ()))) INNER JOIN rt0 ON ((CAST(rt1.c1 AS NUMERIC)) NOT BETWEEN ((v0.c2 IN (v0.c3))) AND ((rt1.c3 IN ()))) LEFT OUTER JOIN v0 ON rt1.c0 WHERE (((((rt0.c1)>=(t0.c0)))|((- (v0.c3)))));
SELECT ALL * FROM t0, rt0, v0 WHERE (CHAR((- (v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR((- (v0.c1)))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL * FROM t0, rt0, v0 WHERE (CHAR((- (v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR((- (v0.c1)))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL * FROM t0, rt0, v0 WHERE (CHAR((- (v0.c1))));
SELECT ALL COUNT(*) FROM v0, t1, rt0, t0 WHERE (((((NULL) BETWEEN (v0.c3) AND (v0.c0)))<>(((rt0.c1)AND(0.7320349739689808))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (v0.c3) AND (v0.c0)))<>(((rt0.c1)AND(0.7320349739689808))))) IS TRUE)  as count FROM v0, t1, rt0, t0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1, rt0, t0 WHERE (((((NULL) BETWEEN (v0.c3) AND (v0.c0)))<>(((rt0.c1)AND(0.7320349739689808))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (v0.c3) AND (v0.c0)))<>(((rt0.c1)AND(0.7320349739689808))))) IS TRUE)  as count FROM v0, t1, rt0, t0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1, rt0, t0 WHERE (((((NULL) BETWEEN (v0.c3) AND (v0.c0)))<>(((rt0.c1)AND(0.7320349739689808))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT ALL * FROM t0, t1, v0, rt0 CROSS JOIN rt1 ON (((rt0.c3 IN ())) NOTNULL) WHERE (CASE (t0.c0 IN ('-1560880534', 'j*}잨'))  WHEN ((v0.c1)<('8呢wyN(')) THEN rt0.c1 ELSE ((v0.c0) BETWEEN (rt0.c0) AND (v0.c1)) END) ORDER BY 1566824831  NULLS FIRST, ((((rt0.c2)<=(rt0.c2)))>>(CHAR(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c0 IN ('-1560880534', 'j*}잨'))  WHEN ((v0.c1)<('8呢wyN(')) THEN rt0.c1 ELSE ((v0.c0) BETWEEN (rt0.c0) AND (v0.c1)) END) IS TRUE)  as count FROM t0, t1, v0, rt0 CROSS JOIN rt1 ON (((rt0.c3 IN ())) NOTNULL) ORDER BY 1566824831  NULLS FIRST, ((((rt0.c2)<=(rt0.c2)))>>(CHAR(v0.c0)))  NULLS FIRST);
SELECT ALL * FROM t0, t1, v0, rt0 CROSS JOIN rt1 ON (((rt0.c3 IN ())) NOTNULL) WHERE (CASE (t0.c0 IN ('-1560880534', 'j*}잨'))  WHEN ((v0.c1)<('8呢wyN(')) THEN rt0.c1 ELSE ((v0.c0) BETWEEN (rt0.c0) AND (v0.c1)) END) ORDER BY 1566824831  NULLS FIRST, ((((rt0.c2)<=(rt0.c2)))>>(CHAR(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c0 IN ('-1560880534', 'j*}잨'))  WHEN ((v0.c1)<('8呢wyN(')) THEN rt0.c1 ELSE ((v0.c0) BETWEEN (rt0.c0) AND (v0.c1)) END) IS TRUE)  as count FROM t0, t1, v0, rt0 CROSS JOIN rt1 ON (((rt0.c3 IN ())) NOTNULL) ORDER BY 1566824831  NULLS FIRST, ((((rt0.c2)<=(rt0.c2)))>>(CHAR(v0.c0)))  NULLS FIRST);
SELECT * FROM rt0, t0 CROSS JOIN v0 ON (((((rt0.c1))!=((v0.c3)))) BETWEEN (v0.c2) AND (((rt0.c3)OR(v0.c3)))) WHERE ((CASE WHEN rt0.c2 THEN v0.c4 WHEN v0.c2 THEN '' WHEN v0.c1 THEN v0.c2 END IN ())) ORDER BY (~ (rt0.c2)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN v0.c4 WHEN v0.c2 THEN '' WHEN v0.c1 THEN v0.c2 END IN ())) IS TRUE)  as count FROM rt0, t0 CROSS JOIN v0 ON (((((rt0.c1))!=((v0.c3)))) BETWEEN (v0.c2) AND (((rt0.c3)OR(v0.c3)))) ORDER BY (~ (rt0.c2)) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM rt0, t0 CROSS JOIN v0 ON (((((rt0.c1))!=((v0.c3)))) BETWEEN (v0.c2) AND (((rt0.c3)OR(v0.c3)))) WHERE ((CASE WHEN rt0.c2 THEN v0.c4 WHEN v0.c2 THEN '' WHEN v0.c1 THEN v0.c2 END IN ())) ORDER BY (~ (rt0.c2)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN v0.c4 WHEN v0.c2 THEN '' WHEN v0.c1 THEN v0.c2 END IN ())) IS TRUE)  as count FROM rt0, t0 CROSS JOIN v0 ON (((((rt0.c1))!=((v0.c3)))) BETWEEN (v0.c2) AND (((rt0.c3)OR(v0.c3)))) ORDER BY (~ (rt0.c2)) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM rt0, t0 CROSS JOIN v0 ON (((((rt0.c1))!=((v0.c3)))) BETWEEN (v0.c2) AND (((rt0.c3)OR(v0.c3)))) WHERE ((CASE WHEN rt0.c2 THEN v0.c4 WHEN v0.c2 THEN '' WHEN v0.c1 THEN v0.c2 END IN ())) ORDER BY (~ (rt0.c2)) COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM v0 WHERE ((+ (((((v0.c2)OR(v0.c1)))OR(v0.c3))))) ORDER BY ((((x'bfd5') IS FALSE)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((v0.c2)OR(v0.c1)))OR(v0.c3))))) IS TRUE)  as count FROM v0 ORDER BY ((((x'bfd5') IS FALSE)) IS TRUE) DESC);
SELECT * FROM v0 WHERE ((+ (((((v0.c2)OR(v0.c1)))OR(v0.c3))))) ORDER BY ((((x'bfd5') IS FALSE)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((v0.c2)OR(v0.c1)))OR(v0.c3))))) IS TRUE)  as count FROM v0 ORDER BY ((((x'bfd5') IS FALSE)) IS TRUE) DESC);
SELECT * FROM v0 WHERE ((+ (((((v0.c2)OR(v0.c1)))OR(v0.c3))))) ORDER BY ((((x'bfd5') IS FALSE)) IS TRUE) DESC;
SELECT ALL * FROM t1 LEFT OUTER JOIN t0 ON (((CASE rt1.c1  WHEN v0.c3 THEN rt1.c1 WHEN v0.c2 THEN rt1.c1 WHEN rt0.c1 THEN x'' ELSE t0.c0 END))<=((CASE rt0.c3  WHEN rt1.c2 THEN rt0.c0 ELSE '140339923' END))) CROSS JOIN rt1 ON CASE ((v0.c4)<=(v0.c2))  WHEN ((('(L繲W')) BETWEEN ((v0.c1)) AND ((v0.c4))) THEN (((rt1.c3, 'o', v0.c1))=((rt0.c2, v0.c3, rt1.c0))) WHEN '*Bj' THEN TIME(rt0.c3, rt0.c1, v0.c0, rt1.c3, rt1.c2) WHEN CASE '-1231033458'  WHEN '0.5580645164528738' THEN rt0.c3 WHEN v0.c1 THEN '-1250573194' WHEN rt1.c3 THEN v0.c2 ELSE rt0.c1 END THEN ((rt0.c1)IS(v0.c1)) ELSE ((v0.c4) NOTNULL) END INNER JOIN rt0 ON 'V''+Ygwx!' CROSS JOIN v0 ON UPPER(rt1.c2) WHERE (CASE WHEN (~ (rt1.c2)) THEN CASE WHEN t1.c0 THEN rt1.c2 ELSE rt0.c0 END ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt1.c2)) THEN CASE WHEN t1.c0 THEN rt1.c2 ELSE rt0.c0 END ELSE v0.c0 END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON (((CASE rt1.c1  WHEN v0.c3 THEN rt1.c1 WHEN v0.c2 THEN rt1.c1 WHEN rt0.c1 THEN x'' ELSE t0.c0 END))<=((CASE rt0.c3  WHEN rt1.c2 THEN rt0.c0 ELSE '140339923' END))) CROSS JOIN rt1 ON CASE ((v0.c4)<=(v0.c2))  WHEN ((('(L繲W')) BETWEEN ((v0.c1)) AND ((v0.c4))) THEN (((rt1.c3, 'o', v0.c1))==((rt0.c2, v0.c3, rt1.c0))) WHEN '*Bj' THEN TIME(rt0.c3, rt0.c1, v0.c0, rt1.c3, rt1.c2) WHEN CASE '-1231033458'  WHEN '0.5580645164528738' THEN rt0.c3 WHEN v0.c1 THEN '-1250573194' WHEN rt1.c3 THEN v0.c2 ELSE rt0.c1 END THEN ((rt0.c1)IS(v0.c1)) ELSE ((v0.c4) NOTNULL) END INNER JOIN rt0 ON 'V''+Ygwx!' CROSS JOIN v0 ON UPPER(rt1.c2));
SELECT ALL * FROM t1 LEFT OUTER JOIN t0 ON (((CASE rt1.c1  WHEN v0.c3 THEN rt1.c1 WHEN v0.c2 THEN rt1.c1 WHEN rt0.c1 THEN x'' ELSE t0.c0 END))<=((CASE rt0.c3  WHEN rt1.c2 THEN rt0.c0 ELSE '140339923' END))) CROSS JOIN rt1 ON CASE ((v0.c4)<=(v0.c2))  WHEN ((('(L繲W')) BETWEEN ((v0.c1)) AND ((v0.c4))) THEN (((rt1.c3, 'o', v0.c1))=((rt0.c2, v0.c3, rt1.c0))) WHEN '*Bj' THEN TIME(rt0.c3, rt0.c1, v0.c0, rt1.c3, rt1.c2) WHEN CASE '-1231033458'  WHEN '0.5580645164528738' THEN rt0.c3 WHEN v0.c1 THEN '-1250573194' WHEN rt1.c3 THEN v0.c2 ELSE rt0.c1 END THEN ((rt0.c1)IS(v0.c1)) ELSE ((v0.c4) NOTNULL) END INNER JOIN rt0 ON 'V''+Ygwx!' CROSS JOIN v0 ON UPPER(rt1.c2) WHERE (CASE WHEN (~ (rt1.c2)) THEN CASE WHEN t1.c0 THEN rt1.c2 ELSE rt0.c0 END ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt1.c2)) THEN CASE WHEN t1.c0 THEN rt1.c2 ELSE rt0.c0 END ELSE v0.c0 END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON (((CASE rt1.c1  WHEN v0.c3 THEN rt1.c1 WHEN v0.c2 THEN rt1.c1 WHEN rt0.c1 THEN x'' ELSE t0.c0 END))<=((CASE rt0.c3  WHEN rt1.c2 THEN rt0.c0 ELSE '140339923' END))) CROSS JOIN rt1 ON CASE ((v0.c4)<=(v0.c2))  WHEN ((('(L繲W')) BETWEEN ((v0.c1)) AND ((v0.c4))) THEN (((rt1.c3, 'o', v0.c1))==((rt0.c2, v0.c3, rt1.c0))) WHEN '*Bj' THEN TIME(rt0.c3, rt0.c1, v0.c0, rt1.c3, rt1.c2) WHEN CASE '-1231033458'  WHEN '0.5580645164528738' THEN rt0.c3 WHEN v0.c1 THEN '-1250573194' WHEN rt1.c3 THEN v0.c2 ELSE rt0.c1 END THEN ((rt0.c1)IS(v0.c1)) ELSE ((v0.c4) NOTNULL) END INNER JOIN rt0 ON 'V''+Ygwx!' CROSS JOIN v0 ON UPPER(rt1.c2));
SELECT ALL * FROM v0, rt1 CROSS JOIN t0 ON CASE (+ (t0.c0))  WHEN ((((t0.c0)OR(rt1.c1)))OR(v0.c3)) THEN (((rt1.c1))<((rt1.c0))) WHEN x'' THEN (- (rt0.c3)) WHEN CASE WHEN '-Infinity,' THEN v0.c0 END THEN ((v0.c2) NOT NULL) ELSE CASE rt0.c2  WHEN v0.c4 THEN rt0.c2 ELSE v0.c1 END END FULL OUTER JOIN rt0 ON (NOT (((((v0.c0)AND(v0.c3)))AND(1834672782)))) WHERE ('%\{_?P735:1129:3515213268006283025:3746051326065548630--7738753324475293340 151T\') ORDER BY ((LIKELIHOOD(rt1.c1, 0.019140837421336543)) NOT BETWEEN ((((rt0.c0, v0.c1, rt1.c3)) NOT BETWEEN ((rt1.c0, rt0.c1, rt0.c1)) AND ((rt1.c2, v0.c4, v0.c4)))) AND (((rt1.c3)|(v0.c3)))), ((NULL)*(rt0.c0)) COLLATE RTRIM ASC, '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('%\{_?P735:1129:3515213268006283025:3746051326065548630--7738753324475293340 151T\') IS TRUE)  as count FROM v0, rt1 CROSS JOIN t0 ON CASE (+ (t0.c0))  WHEN ((((t0.c0)OR(rt1.c1)))OR(v0.c3)) THEN (((rt1.c1))<((rt1.c0))) WHEN x'' THEN (- (rt0.c3)) WHEN CASE WHEN '-Infinity,' THEN v0.c0 END THEN ((v0.c2) NOT NULL) ELSE CASE rt0.c2  WHEN v0.c4 THEN rt0.c2 ELSE v0.c1 END END FULL OUTER JOIN rt0 ON (NOT (((((v0.c0)AND(v0.c3)))AND(1834672782)))) ORDER BY ((LIKELIHOOD(rt1.c1, 0.019140837421336543)) NOT BETWEEN ((((rt0.c0, v0.c1, rt1.c3)) NOT BETWEEN ((rt1.c0, rt0.c1, rt0.c1)) AND ((rt1.c2, v0.c4, v0.c4)))) AND (((rt1.c3)|(v0.c3)))), ((NULL)*(rt0.c0)) COLLATE RTRIM ASC, '' DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt1 CROSS JOIN t0 ON CASE (+ (t0.c0))  WHEN ((((t0.c0)OR(rt1.c1)))OR(v0.c3)) THEN (((rt1.c1))<((rt1.c0))) WHEN x'' THEN (- (rt0.c3)) WHEN CASE WHEN '-Infinity,' THEN v0.c0 END THEN ((v0.c2) NOT NULL) ELSE CASE rt0.c2  WHEN v0.c4 THEN rt0.c2 ELSE v0.c1 END END FULL OUTER JOIN rt0 ON (NOT (((((v0.c0)AND(v0.c3)))AND(1834672782)))) WHERE ('%\{_?P735:1129:3515213268006283025:3746051326065548630--7738753324475293340 151T\') ORDER BY ((LIKELIHOOD(rt1.c1, 0.019140837421336543)) NOT BETWEEN ((((rt0.c0, v0.c1, rt1.c3)) NOT BETWEEN ((rt1.c0, rt0.c1, rt0.c1)) AND ((rt1.c2, v0.c4, v0.c4)))) AND (((rt1.c3)|(v0.c3)))), ((NULL)*(rt0.c0)) COLLATE RTRIM ASC, '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('%\{_?P735:1129:3515213268006283025:3746051326065548630--7738753324475293340 151T\') IS TRUE)  as count FROM v0, rt1 CROSS JOIN t0 ON CASE (+ (t0.c0))  WHEN ((((t0.c0)OR(rt1.c1)))OR(v0.c3)) THEN (((rt1.c1))<((rt1.c0))) WHEN x'' THEN (- (rt0.c3)) WHEN CASE WHEN '-Infinity,' THEN v0.c0 END THEN ((v0.c2) NOT NULL) ELSE CASE rt0.c2  WHEN v0.c4 THEN rt0.c2 ELSE v0.c1 END END FULL OUTER JOIN rt0 ON (NOT (((((v0.c0)AND(v0.c3)))AND(1834672782)))) ORDER BY ((LIKELIHOOD(rt1.c1, 0.019140837421336543)) NOT BETWEEN ((((rt0.c0, v0.c1, rt1.c3)) NOT BETWEEN ((rt1.c0, rt0.c1, rt0.c1)) AND ((rt1.c2, v0.c4, v0.c4)))) AND (((rt1.c3)|(v0.c3)))), ((NULL)*(rt0.c0)) COLLATE RTRIM ASC, '' DESC  NULLS FIRST);
SELECT ALL * FROM v0, t0, t1 WHERE (CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c4 END COLLATE NOCASE) ORDER BY t1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c4 END COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, t1 ORDER BY t1.c0 ASC);
SELECT ALL * FROM v0, t0, t1 WHERE (CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c4 END COLLATE NOCASE) ORDER BY t1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c4 END COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, t1 ORDER BY t1.c0 ASC);
SELECT ALL * FROM v0, t0, t1 WHERE (CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c4 END COLLATE NOCASE) ORDER BY t1.c0 ASC;
SELECT COUNT(*) FROM t1, rt1 WHERE (UPPER((((rt1.c3)) NOT BETWEEN (('᝟')) AND ((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((((rt1.c3)) NOT BETWEEN (('᝟')) AND ((rt1.c0))))) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1, rt1 WHERE (UPPER((((rt1.c3)) NOT BETWEEN (('᝟')) AND ((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((((rt1.c3)) NOT BETWEEN (('᝟')) AND ((rt1.c0))))) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1, rt1 WHERE (UPPER((((rt1.c3)) NOT BETWEEN (('᝟')) AND ((rt1.c0)))));
SELECT COUNT(*) FROM v0 NOT INDEXED, rt0 NOT INDEXED WHERE ('|qhm');
SELECT SUM(count) FROM (SELECT ALL (('|qhm') IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0 NOT INDEXED, rt0 NOT INDEXED WHERE ('|qhm');
SELECT SUM(count) FROM (SELECT ALL (('|qhm') IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0 NOT INDEXED, rt0 NOT INDEXED WHERE ('|qhm');
SELECT ALL COUNT(*) FROM v0, rt0 RIGHT OUTER JOIN t0 ON (- (t1.c0)) COLLATE NOCASE INNER JOIN rt1 ON CASE rt0.c0  WHEN rt1.c0 THEN v0.c0 ELSE rt1.c1 END COLLATE RTRIM FULL OUTER JOIN t1 ON TRIM(TRIM(rt1.c2)) WHERE (((((((rt1.c0)OR(rt1.c0)))OR(t1.c0))) BETWEEN (((((rt0.c2)OR(rt1.c3)))OR(rt1.c1))) AND (((v0.c3)<<(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt1.c0)))OR(t1.c0))) BETWEEN (((((rt0.c2)OR(rt1.c3)))OR(rt1.c1))) AND (((v0.c3)<<(t1.c0))))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN t0 ON (- (t1.c0)) COLLATE NOCASE INNER JOIN rt1 ON CASE rt0.c0  WHEN rt1.c0 THEN v0.c0 ELSE rt1.c1 END COLLATE RTRIM FULL OUTER JOIN t1 ON TRIM(TRIM(rt1.c2)));
SELECT ALL COUNT(*) FROM v0, rt0 RIGHT OUTER JOIN t0 ON (- (t1.c0)) COLLATE NOCASE INNER JOIN rt1 ON CASE rt0.c0  WHEN rt1.c0 THEN v0.c0 ELSE rt1.c1 END COLLATE RTRIM FULL OUTER JOIN t1 ON TRIM(TRIM(rt1.c2)) WHERE (((((((rt1.c0)OR(rt1.c0)))OR(t1.c0))) BETWEEN (((((rt0.c2)OR(rt1.c3)))OR(rt1.c1))) AND (((v0.c3)<<(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt1.c0)))OR(t1.c0))) BETWEEN (((((rt0.c2)OR(rt1.c3)))OR(rt1.c1))) AND (((v0.c3)<<(t1.c0))))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN t0 ON (- (t1.c0)) COLLATE NOCASE INNER JOIN rt1 ON CASE rt0.c0  WHEN rt1.c0 THEN v0.c0 ELSE rt1.c1 END COLLATE RTRIM FULL OUTER JOIN t1 ON TRIM(TRIM(rt1.c2)));
SELECT * FROM v0, t0, rt1 WHERE (((((v0.c1)OR(rt1.c1)))AND(v0.c1)) COLLATE NOCASE) ORDER BY rt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)OR(rt1.c1)))AND(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY rt1.c0 ASC);
SELECT * FROM v0, t0, rt1 WHERE (((((v0.c1)OR(rt1.c1)))AND(v0.c1)) COLLATE NOCASE) ORDER BY rt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)OR(rt1.c1)))AND(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY rt1.c0 ASC);
SELECT * FROM v0, t0, rt1 WHERE (((((v0.c1)OR(rt1.c1)))AND(v0.c1)) COLLATE NOCASE) ORDER BY rt1.c0 ASC;
SELECT * FROM v0 WHERE ((((v0.c3) IS FALSE) IN ())) ORDER BY (NOT (((v0.c2) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c3) IS FALSE) IN ())) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c2) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((v0.c3) IS FALSE) IN ())) ORDER BY (NOT (((v0.c2) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c3) IS FALSE) IN ())) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c2) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((v0.c3) IS FALSE) IN ())) ORDER BY (NOT (((v0.c2) NOT NULL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0 DESC, (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((''))))*(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC, (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((''))))*(rt0.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0 DESC, (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((''))))*(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC, (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((''))))*(rt0.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0 DESC, (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((''))))*(rt0.c1))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, v0, rt0, rt1, t0 WHERE (((v0.c1) BETWEEN (v0.c3 COLLATE BINARY) AND (((((((((v0.c3)AND(v0.c3)))OR(t1.c0)))AND(rt1.c0)))AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) BETWEEN (v0.c3 COLLATE BINARY) AND (((((((((v0.c3)AND(v0.c3)))OR(t1.c0)))AND(rt1.c0)))AND(v0.c2))))) IS TRUE)  as count FROM t1, v0, rt0, rt1, t0);
SELECT ALL COUNT(*) FROM t1, v0, rt0, rt1, t0 WHERE (((v0.c1) BETWEEN (v0.c3 COLLATE BINARY) AND (((((((((v0.c3)AND(v0.c3)))OR(t1.c0)))AND(rt1.c0)))AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) BETWEEN (v0.c3 COLLATE BINARY) AND (((((((((v0.c3)AND(v0.c3)))OR(t1.c0)))AND(rt1.c0)))AND(v0.c2))))) IS TRUE)  as count FROM t1, v0, rt0, rt1, t0);
SELECT ALL COUNT(*) FROM t1, v0, rt0, rt1, t0 WHERE (((v0.c1) BETWEEN (v0.c3 COLLATE BINARY) AND (((((((((v0.c3)AND(v0.c3)))OR(t1.c0)))AND(rt1.c0)))AND(v0.c2)))));
SELECT ALL COUNT(*) FROM rt1, v0, t0, t1, rt0 WHERE (CASE WHEN (- (rt1.c1)) THEN (- (rt1.c0)) WHEN ((((((((v0.c4)OR(rt1.c0)))AND(x'827f')))AND(rt0.c1)))AND(v0.c3)) THEN ((rt0.c0)=(rt0.c2)) WHEN ((v0.c1)&(0.8185797954489618)) THEN (rt1.c3 IN ()) ELSE (0X18113e0e IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt1.c1)) THEN (- (rt1.c0)) WHEN ((((((((v0.c4)OR(rt1.c0)))AND(x'827f')))AND(rt0.c1)))AND(v0.c3)) THEN ((rt0.c0)==(rt0.c2)) WHEN ((v0.c1)&(0.8185797954489618)) THEN (rt1.c3 IN ()) ELSE (0X18113e0e IN ()) END) IS TRUE)  as count FROM rt1, v0, t0, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, t0, t1, rt0 WHERE (CASE WHEN (- (rt1.c1)) THEN (- (rt1.c0)) WHEN ((((((((v0.c4)OR(rt1.c0)))AND(x'827f')))AND(rt0.c1)))AND(v0.c3)) THEN ((rt0.c0)=(rt0.c2)) WHEN ((v0.c1)&(0.8185797954489618)) THEN (rt1.c3 IN ()) ELSE (0X18113e0e IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt1.c1)) THEN (- (rt1.c0)) WHEN ((((((((v0.c4)OR(rt1.c0)))AND(x'827f')))AND(rt0.c1)))AND(v0.c3)) THEN ((rt0.c0)==(rt0.c2)) WHEN ((v0.c1)&(0.8185797954489618)) THEN (rt1.c3 IN ()) ELSE (0X18113e0e IN ()) END) IS TRUE)  as count FROM rt1, v0, t0, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, t0, t1, rt0 WHERE (CASE WHEN (- (rt1.c1)) THEN (- (rt1.c0)) WHEN ((((((((v0.c4)OR(rt1.c0)))AND(x'827f')))AND(rt0.c1)))AND(v0.c3)) THEN ((rt0.c0)=(rt0.c2)) WHEN ((v0.c1)&(0.8185797954489618)) THEN (rt1.c3 IN ()) ELSE (0X18113e0e IN ()) END);
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN rt1 ON v0.c1 COLLATE RTRIM RIGHT OUTER JOIN rt0 ON ((((CASE rt1.c3  WHEN rt0.c1 THEN t0.c0 ELSE rt1.c2 END)AND((((rt1.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))AND(v0.c3)) RIGHT OUTER JOIN t1 ON (((rt0.c3 IN ()))>=(CASE WHEN rt0.c2 THEN rt1.c0 ELSE v0.c0 END)) WHERE ('1012715944') ORDER BY (0.9327373433788948 IN (((rt1.c1)>>(v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('1012715944') IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN rt1 ON v0.c1 COLLATE RTRIM RIGHT OUTER JOIN rt0 ON ((((CASE rt1.c3  WHEN rt0.c1 THEN t0.c0 ELSE rt1.c2 END)AND((((rt1.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))AND(v0.c3)) RIGHT OUTER JOIN t1 ON (((rt0.c3 IN ()))>=(CASE WHEN rt0.c2 THEN rt1.c0 ELSE v0.c0 END)) ORDER BY (0.9327373433788948 IN (((rt1.c1)>>(v0.c2)))) ASC);
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN rt1 ON v0.c1 COLLATE RTRIM RIGHT OUTER JOIN rt0 ON ((((CASE rt1.c3  WHEN rt0.c1 THEN t0.c0 ELSE rt1.c2 END)AND((((rt1.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))AND(v0.c3)) RIGHT OUTER JOIN t1 ON (((rt0.c3 IN ()))>=(CASE WHEN rt0.c2 THEN rt1.c0 ELSE v0.c0 END)) WHERE ('1012715944') ORDER BY (0.9327373433788948 IN (((rt1.c1)>>(v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('1012715944') IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN rt1 ON v0.c1 COLLATE RTRIM RIGHT OUTER JOIN rt0 ON ((((CASE rt1.c3  WHEN rt0.c1 THEN t0.c0 ELSE rt1.c2 END)AND((((rt1.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))AND(v0.c3)) RIGHT OUTER JOIN t1 ON (((rt0.c3 IN ()))>=(CASE WHEN rt0.c2 THEN rt1.c0 ELSE v0.c0 END)) ORDER BY (0.9327373433788948 IN (((rt1.c1)>>(v0.c2)))) ASC);
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN rt1 ON v0.c1 COLLATE RTRIM RIGHT OUTER JOIN rt0 ON ((((CASE rt1.c3  WHEN rt0.c1 THEN t0.c0 ELSE rt1.c2 END)AND((((rt1.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))AND(v0.c3)) RIGHT OUTER JOIN t1 ON (((rt0.c3 IN ()))>=(CASE WHEN rt0.c2 THEN rt1.c0 ELSE v0.c0 END)) WHERE ('1012715944') ORDER BY (0.9327373433788948 IN (((rt1.c1)>>(v0.c2)))) ASC;
SELECT * FROM v0 WHERE (CAST(v0.c1 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c1 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c1 AS INTEGER));
SELECT ALL * FROM rt0, rt1, t1, v0 WHERE ((((CAST(rt1.c1 AS REAL), v0.c3 COLLATE BINARY, ((((v0.c2)AND(0.9327373433788948)))AND(v0.c2))))>=((CASE rt1.c3  WHEN rt0.c1 THEN rt1.c3 WHEN x'ff9d' THEN rt1.c0 WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END, UPPER(DISTINCT rt0.c0), CAST(rt0.c2 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt1.c1 AS REAL), v0.c3 COLLATE BINARY, ((((v0.c2)AND(0.9327373433788948)))AND(v0.c2))))>=((CASE rt1.c3  WHEN rt0.c1 THEN rt1.c3 WHEN x'ff9d' THEN rt1.c0 WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END, UPPER(DISTINCT rt0.c0), CAST(rt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt0, rt1, t1, v0);
SELECT ALL * FROM rt0, rt1, t1, v0 WHERE ((((CAST(rt1.c1 AS REAL), v0.c3 COLLATE BINARY, ((((v0.c2)AND(0.9327373433788948)))AND(v0.c2))))>=((CASE rt1.c3  WHEN rt0.c1 THEN rt1.c3 WHEN x'ff9d' THEN rt1.c0 WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END, UPPER(DISTINCT rt0.c0), CAST(rt0.c2 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt1.c1 AS REAL), v0.c3 COLLATE BINARY, ((((v0.c2)AND(0.9327373433788948)))AND(v0.c2))))>=((CASE rt1.c3  WHEN rt0.c1 THEN rt1.c3 WHEN x'ff9d' THEN rt1.c0 WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END, UPPER(DISTINCT rt0.c0), CAST(rt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt0, rt1, t1, v0);
SELECT ALL * FROM rt0, rt1, t1, v0 WHERE ((((CAST(rt1.c1 AS REAL), v0.c3 COLLATE BINARY, ((((v0.c2)AND(0.9327373433788948)))AND(v0.c2))))>=((CASE rt1.c3  WHEN rt0.c1 THEN rt1.c3 WHEN x'ff9d' THEN rt1.c0 WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END, UPPER(DISTINCT rt0.c0), CAST(rt0.c2 AS NUMERIC)))));
SELECT COUNT(*) FROM t1 WHERE (UNLIKELY(t1.c0) COLLATE RTRIM COLLATE NOCASE) ORDER BY (((((x'056e' IN (t1.c0)))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(t1.c0) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (((((x'056e' IN (t1.c0)))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE (UNLIKELY(t1.c0) COLLATE RTRIM COLLATE NOCASE) ORDER BY (((((x'056e' IN (t1.c0)))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(t1.c0) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (((((x'056e' IN (t1.c0)))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE (UNLIKELY(t1.c0) COLLATE RTRIM COLLATE NOCASE) ORDER BY (((((x'056e' IN (t1.c0)))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))));
SELECT ALL COUNT(*) FROM rt0, rt1, t1, t0 WHERE (((((rt0.c2) IS TRUE)) BETWEEN (CAST(t1.c0 AS BLOB)) AND (((rt0.c1) BETWEEN (rt1.c2) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE)) BETWEEN (CAST(t1.c0 AS BLOB)) AND (((rt0.c1) BETWEEN (rt1.c2) AND (NULL))))) IS TRUE)  as count FROM rt0, rt1, t1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t1, t0 WHERE (((((rt0.c2) IS TRUE)) BETWEEN (CAST(t1.c0 AS BLOB)) AND (((rt0.c1) BETWEEN (rt1.c2) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE)) BETWEEN (CAST(t1.c0 AS BLOB)) AND (((rt0.c1) BETWEEN (rt1.c2) AND (NULL))))) IS TRUE)  as count FROM rt0, rt1, t1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t1, t0 WHERE (((((rt0.c2) IS TRUE)) BETWEEN (CAST(t1.c0 AS BLOB)) AND (((rt0.c1) BETWEEN (rt1.c2) AND (NULL)))));
SELECT ALL * FROM t1, rt1 WHERE (TRIM(((((rt1.c1)AND(t1.c0)))OR(rt1.c2)))) ORDER BY CAST(((rt1.c2) NOTNULL) AS BLOB) DESC  NULLS FIRST, ((((NULL)OR(((rt1.c2)<(t1.c0)))))AND(x'')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((rt1.c1)AND(t1.c0)))OR(rt1.c2)))) IS TRUE)  as count FROM t1, rt1 ORDER BY CAST(((rt1.c2) NOTNULL) AS BLOB) DESC  NULLS FIRST, ((((NULL)OR(((rt1.c2)<(t1.c0)))))AND(x'')) DESC  NULLS FIRST);
SELECT ALL * FROM t1, rt1 WHERE (TRIM(((((rt1.c1)AND(t1.c0)))OR(rt1.c2)))) ORDER BY CAST(((rt1.c2) NOTNULL) AS BLOB) DESC  NULLS FIRST, ((((NULL)OR(((rt1.c2)<(t1.c0)))))AND(x'')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((rt1.c1)AND(t1.c0)))OR(rt1.c2)))) IS TRUE)  as count FROM t1, rt1 ORDER BY CAST(((rt1.c2) NOTNULL) AS BLOB) DESC  NULLS FIRST, ((((NULL)OR(((rt1.c2)<(t1.c0)))))AND(x'')) DESC  NULLS FIRST);
SELECT ALL * FROM t1, rt1 WHERE (TRIM(((((rt1.c1)AND(t1.c0)))OR(rt1.c2)))) ORDER BY CAST(((rt1.c2) NOTNULL) AS BLOB) DESC  NULLS FIRST, ((((NULL)OR(((rt1.c2)<(t1.c0)))))AND(x'')) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT COUNT(*) FROM rt0, t1, t0 NATURAL JOIN v0 WHERE ((((v0.c0)) BETWEEN ((IFNULL(rt0.c0, v0.c0))) AND (((0.3841954831559504 IN ()))))) ORDER BY ((((NULL)AND(0.19302306402462244)))AND((v0.c3 IN ()))) DESC  NULLS FIRST, ((((v0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((IFNULL(rt0.c0, v0.c0))) AND (((0.3841954831559504 IN ()))))) IS TRUE)  as count FROM rt0, t1, t0 NATURAL JOIN v0 ORDER BY ((((NULL)AND(0.19302306402462244)))AND((v0.c3 IN ()))) DESC  NULLS FIRST, ((((v0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1, t0 NATURAL JOIN v0 WHERE ((((v0.c0)) BETWEEN ((IFNULL(rt0.c0, v0.c0))) AND (((0.3841954831559504 IN ()))))) ORDER BY ((((NULL)AND(0.19302306402462244)))AND((v0.c3 IN ()))) DESC  NULLS FIRST, ((((v0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((IFNULL(rt0.c0, v0.c0))) AND (((0.3841954831559504 IN ()))))) IS TRUE)  as count FROM rt0, t1, t0 NATURAL JOIN v0 ORDER BY ((((NULL)AND(0.19302306402462244)))AND((v0.c3 IN ()))) DESC  NULLS FIRST, ((((v0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0))) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (NULL) ORDER BY CAST('' AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0 ORDER BY CAST('' AS BLOB) DESC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (NULL) ORDER BY CAST('' AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0 ORDER BY CAST('' AS BLOB) DESC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (NULL) ORDER BY CAST('' AS BLOB) DESC;
SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2))>=((rt0.c0, rt0.c3, rt0.c2)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c2, rt0.c2))>=((rt0.c0, rt0.c3, rt0.c2)))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2))>=((rt0.c0, rt0.c3, rt0.c2)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c2, rt0.c2))>=((rt0.c0, rt0.c3, rt0.c2)))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2))>=((rt0.c0, rt0.c3, rt0.c2)))) ISNULL));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON ((v0.c3 COLLATE NOCASE) NOTNULL) WHERE ((((v0.c3) IS TRUE) IN ())) ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c2 WHEN v0.c3 THEN t0.c0 ELSE v0.c4 END) IS FALSE)  NULLS LAST, (((v0.c2)) BETWEEN (((+ (v0.c2)))) AND ((('365467292' IN ()))))  NULLS FIRST, (((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c3))))LIKE(((v0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3) IS TRUE) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((v0.c3 COLLATE NOCASE) NOTNULL) ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c2 WHEN v0.c3 THEN t0.c0 ELSE v0.c4 END) IS FALSE)  NULLS LAST, (((v0.c2)) BETWEEN (((+ (v0.c2)))) AND ((('365467292' IN ()))))  NULLS FIRST, (((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c3))))LIKE(((v0.c1) NOTNULL))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON ((v0.c3 COLLATE NOCASE) NOTNULL) WHERE ((((v0.c3) IS TRUE) IN ())) ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c2 WHEN v0.c3 THEN t0.c0 ELSE v0.c4 END) IS FALSE)  NULLS LAST, (((v0.c2)) BETWEEN (((+ (v0.c2)))) AND ((('365467292' IN ()))))  NULLS FIRST, (((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c3))))LIKE(((v0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3) IS TRUE) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((v0.c3 COLLATE NOCASE) NOTNULL) ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c2 WHEN v0.c3 THEN t0.c0 ELSE v0.c4 END) IS FALSE)  NULLS LAST, (((v0.c2)) BETWEEN (((+ (v0.c2)))) AND ((('365467292' IN ()))))  NULLS FIRST, (((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c3))))LIKE(((v0.c1) NOTNULL))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON ((v0.c3 COLLATE NOCASE) NOTNULL) WHERE ((((v0.c3) IS TRUE) IN ())) ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c2 WHEN v0.c3 THEN t0.c0 ELSE v0.c4 END) IS FALSE)  NULLS LAST, (((v0.c2)) BETWEEN (((+ (v0.c2)))) AND ((('365467292' IN ()))))  NULLS FIRST, (((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c3))))LIKE(((v0.c1) NOTNULL)));
SELECT * FROM t0 WHERE (((((t0.c0) IS TRUE))<>(t0.c0 COLLATE BINARY))) ORDER BY CASE WHEN ((t0.c0)IS(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0)|(t0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE))<>(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0)IS(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0)|(t0.c0)) END ASC);
SELECT * FROM t0 WHERE (((((t0.c0) IS TRUE))<>(t0.c0 COLLATE BINARY))) ORDER BY CASE WHEN ((t0.c0)IS(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0)|(t0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE))<>(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0)IS(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0)|(t0.c0)) END ASC);
SELECT * FROM t0 WHERE (((((t0.c0) IS TRUE))<>(t0.c0 COLLATE BINARY))) ORDER BY CASE WHEN ((t0.c0)IS(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0)|(t0.c0)) END ASC;
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((ABS(rt0.c0))<(((t1.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))) FULL OUTER JOIN t1 ON v0.c2 WHERE (((CASE WHEN rt0.c3 THEN -1250573194 END) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN -1250573194 END) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (rt0.c0))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((ABS(rt0.c0))<(((t1.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))) FULL OUTER JOIN t1 ON v0.c2);
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((ABS(rt0.c0))<(((t1.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))) FULL OUTER JOIN t1 ON v0.c2 WHERE (((CASE WHEN rt0.c3 THEN -1250573194 END) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN -1250573194 END) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (rt0.c0))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((ABS(rt0.c0))<(((t1.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))) FULL OUTER JOIN t1 ON v0.c2);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL));
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((((rt0.c3) BETWEEN (t0.c0) AND (rt0.c0)))=(((t0.c0)>(rt0.c2))))) ORDER BY UPPER(DISTINCT (~ (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (t0.c0) AND (rt0.c0)))==(((t0.c0)>(rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY UPPER(DISTINCT (~ (t0.c0))));
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((((rt0.c3) BETWEEN (t0.c0) AND (rt0.c0)))=(((t0.c0)>(rt0.c2))))) ORDER BY UPPER(DISTINCT (~ (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (t0.c0) AND (rt0.c0)))==(((t0.c0)>(rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY UPPER(DISTINCT (~ (t0.c0))));
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((((rt0.c3) BETWEEN (t0.c0) AND (rt0.c0)))=(((t0.c0)>(rt0.c2))))) ORDER BY UPPER(DISTINCT (~ (t0.c0)));
SELECT ALL * FROM v0 WHERE ((((0.857857960835091))>((((v0.c0) BETWEEN (v0.c4) AND (NULL)))))) ORDER BY (NOT (((v0.c0)AND(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((0.857857960835091))>((((v0.c0) BETWEEN (v0.c4) AND (NULL)))))) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0)AND(v0.c2)))));
SELECT ALL * FROM v0 WHERE ((((0.857857960835091))>((((v0.c0) BETWEEN (v0.c4) AND (NULL)))))) ORDER BY (NOT (((v0.c0)AND(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((0.857857960835091))>((((v0.c0) BETWEEN (v0.c4) AND (NULL)))))) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0)AND(v0.c2)))));
SELECT ALL * FROM v0 WHERE ((((0.857857960835091))>((((v0.c0) BETWEEN (v0.c4) AND (NULL)))))) ORDER BY (NOT (((v0.c0)AND(v0.c2))));
SELECT COUNT(*) FROM t0, v0, rt1 NOT INDEXED WHERE (t0.c0) ORDER BY ((CAST(rt1.c0 AS INTEGER)) NOT BETWEEN (x'') AND (((((((((rt1.c3)AND(v0.c3)))AND(v0.c2)))AND(v0.c1)))AND(v0.c0)))), JULIANDAY(v0.c2 COLLATE BINARY, ((v0.c1)=(v0.c1)), t0.c0, '0.8741857526655368', CAST(rt1.c1 AS TEXT)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY ((CAST(rt1.c0 AS INTEGER)) NOT BETWEEN (x'') AND (((((((((rt1.c3)AND(v0.c3)))AND(v0.c2)))AND(v0.c1)))AND(v0.c0)))), JULIANDAY(v0.c2 COLLATE BINARY, ((v0.c1)=(v0.c1)), t0.c0, '0.8741857526655368', CAST(rt1.c1 AS TEXT)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, rt1 NOT INDEXED WHERE (t0.c0) ORDER BY ((CAST(rt1.c0 AS INTEGER)) NOT BETWEEN (x'') AND (((((((((rt1.c3)AND(v0.c3)))AND(v0.c2)))AND(v0.c1)))AND(v0.c0)))), JULIANDAY(v0.c2 COLLATE BINARY, ((v0.c1)=(v0.c1)), t0.c0, '0.8741857526655368', CAST(rt1.c1 AS TEXT)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY ((CAST(rt1.c0 AS INTEGER)) NOT BETWEEN (x'') AND (((((((((rt1.c3)AND(v0.c3)))AND(v0.c2)))AND(v0.c1)))AND(v0.c0)))), JULIANDAY(v0.c2 COLLATE BINARY, ((v0.c1)=(v0.c1)), t0.c0, '0.8741857526655368', CAST(rt1.c1 AS TEXT)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, rt1 NOT INDEXED WHERE (t0.c0) ORDER BY ((CAST(rt1.c0 AS INTEGER)) NOT BETWEEN (x'') AND (((((((((rt1.c3)AND(v0.c3)))AND(v0.c2)))AND(v0.c1)))AND(v0.c0)))), JULIANDAY(v0.c2 COLLATE BINARY, ((v0.c1)=(v0.c1)), t0.c0, '0.8741857526655368', CAST(rt1.c1 AS TEXT)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0)) BETWEEN (((((v0.c3))<((rt0.c2))))) AND (((v0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN (((((v0.c3))<((rt0.c2))))) AND (((v0.c2 IN ()))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0)) BETWEEN (((((v0.c3))<((rt0.c2))))) AND (((v0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN (((((v0.c3))<((rt0.c2))))) AND (((v0.c2 IN ()))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0)) BETWEEN (((((v0.c3))<((rt0.c2))))) AND (((v0.c2 IN ())))));
SELECT ALL * FROM rt0, t0, v0, rt1, t1 WHERE ('1284575442');
SELECT SUM(count) FROM (SELECT ALL (('1284575442') IS TRUE)  as count FROM rt0, t0, v0, rt1 NOT INDEXED, t1);
SELECT ALL * FROM rt0, t0, v0, rt1, t1 WHERE ('1284575442');
SELECT SUM(count) FROM (SELECT ALL (('1284575442') IS TRUE)  as count FROM rt0, t0, v0, rt1 NOT INDEXED, t1);
SELECT ALL * FROM rt0, t0, v0, rt1, t1 WHERE ('1284575442');
SELECT * FROM v0, t0 WHERE (((v0.c2 COLLATE BINARY)AND((t0.c0 IN (v0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE BINARY)AND((t0.c0 IN (v0.c3))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((v0.c2 COLLATE BINARY)AND((t0.c0 IN (v0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE BINARY)AND((t0.c0 IN (v0.c3))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((v0.c2 COLLATE BINARY)AND((t0.c0 IN (v0.c3)))));
SELECT * FROM rt1, t1, t0 WHERE (x'') ORDER BY ((((rt1.c1)IS(rt1.c2)))|(((rt1.c1)GLOB(rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, t1, t0 ORDER BY ((((rt1.c1)IS(rt1.c2)))|(((rt1.c1)GLOB(rt1.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt1, t1, t0 WHERE (x'') ORDER BY ((((rt1.c1)IS(rt1.c2)))|(((rt1.c1)GLOB(rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, t1, t0 ORDER BY ((((rt1.c1)IS(rt1.c2)))|(((rt1.c1)GLOB(rt1.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt1, t1, t0 WHERE (x'') ORDER BY ((((rt1.c1)IS(rt1.c2)))|(((rt1.c1)GLOB(rt1.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, rt1, v0 WHERE (((t0.c0)IS(v0.c2)) COLLATE BINARY COLLATE NOCASE) ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND (((rt0.c0) BETWEEN (rt0.c0) AND (v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS(v0.c2)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, rt1, v0 ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND (((rt0.c0) BETWEEN (rt0.c0) AND (v0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, rt1, v0 WHERE (((t0.c0)IS(v0.c2)) COLLATE BINARY COLLATE NOCASE) ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND (((rt0.c0) BETWEEN (rt0.c0) AND (v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS(v0.c2)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, rt1, v0 ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND (((rt0.c0) BETWEEN (rt0.c0) AND (v0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, rt1, v0 WHERE (((t0.c0)IS(v0.c2)) COLLATE BINARY COLLATE NOCASE) ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND (((rt0.c0) BETWEEN (rt0.c0) AND (v0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0 WHERE ((TRIM(x'', rt1.c2) IN ())) ORDER BY ((((rt1.c0) IS FALSE)) NOTNULL)  NULLS FIRST, CASE WHEN (rt1.c2 IN ()) THEN CAST(rt1.c1 AS REAL) WHEN CAST(rt1.c1 AS TEXT) THEN CASE WHEN t0.c0 THEN rt1.c1 ELSE rt1.c2 END WHEN rt1.c2 THEN ((rt1.c3)>>(-7.35673708E8)) WHEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c3)) THEN ((rt1.c2)||(rt1.c0)) WHEN '᝟' THEN rt1.c2 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(x'', rt1.c2) IN ())) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((rt1.c0) IS FALSE)) NOTNULL)  NULLS FIRST, CASE WHEN (rt1.c2 IN ()) THEN CAST(rt1.c1 AS REAL) WHEN CAST(rt1.c1 AS TEXT) THEN CASE WHEN t0.c0 THEN rt1.c1 ELSE rt1.c2 END WHEN rt1.c2 THEN ((rt1.c3)>>(-7.35673708E8)) WHEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c3)) THEN ((rt1.c2)||(rt1.c0)) WHEN '᝟' THEN rt1.c2 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0 WHERE ((TRIM(x'', rt1.c2) IN ())) ORDER BY ((((rt1.c0) IS FALSE)) NOTNULL)  NULLS FIRST, CASE WHEN (rt1.c2 IN ()) THEN CAST(rt1.c1 AS REAL) WHEN CAST(rt1.c1 AS TEXT) THEN CASE WHEN t0.c0 THEN rt1.c1 ELSE rt1.c2 END WHEN rt1.c2 THEN ((rt1.c3)>>(-7.35673708E8)) WHEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c3)) THEN ((rt1.c2)||(rt1.c0)) WHEN '᝟' THEN rt1.c2 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(x'', rt1.c2) IN ())) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((rt1.c0) IS FALSE)) NOTNULL)  NULLS FIRST, CASE WHEN (rt1.c2 IN ()) THEN CAST(rt1.c1 AS REAL) WHEN CAST(rt1.c1 AS TEXT) THEN CASE WHEN t0.c0 THEN rt1.c1 ELSE rt1.c2 END WHEN rt1.c2 THEN ((rt1.c3)>>(-7.35673708E8)) WHEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c3)) THEN ((rt1.c2)||(rt1.c0)) WHEN '᝟' THEN rt1.c2 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0 WHERE ((TRIM(x'', rt1.c2) IN ())) ORDER BY ((((rt1.c0) IS FALSE)) NOTNULL)  NULLS FIRST, CASE WHEN (rt1.c2 IN ()) THEN CAST(rt1.c1 AS REAL) WHEN CAST(rt1.c1 AS TEXT) THEN CASE WHEN t0.c0 THEN rt1.c1 ELSE rt1.c2 END WHEN rt1.c2 THEN ((rt1.c3)>>(-7.35673708E8)) WHEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c3)) THEN ((rt1.c2)||(rt1.c0)) WHEN '᝟' THEN rt1.c2 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (CAST(((v0.c2) NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CAST(((v0.c2) NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CAST(((v0.c2) NOTNULL) AS NUMERIC));
SELECT COUNT(*) FROM v0, rt0 NOT INDEXED, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt0, t0);
SELECT COUNT(*) FROM v0, rt0 NOT INDEXED, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt0, t0);
SELECT COUNT(*) FROM v0, rt0 NOT INDEXED, t0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((t1.c0) IS TRUE) COLLATE BINARY FULL OUTER JOIN t0 ON UNLIKELY(SQLITE_COMPILEOPTION_GET(rt0.c0)) INNER JOIN t1 ON HEX(DISTINCT ((((((((((((rt0.c2)OR(v0.c1)))AND(v0.c3)))AND(v0.c0)))OR(t1.c0)))AND(v0.c2)))AND(v0.c0))) WHERE ((- (v0.c4)));
SELECT SUM(count) FROM (SELECT (((- (v0.c4))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((t1.c0) IS TRUE) COLLATE BINARY FULL OUTER JOIN t0 ON UNLIKELY(SQLITE_COMPILEOPTION_GET(rt0.c0)) INNER JOIN t1 ON HEX(DISTINCT ((((((((((((rt0.c2)OR(v0.c1)))AND(v0.c3)))AND(v0.c0)))OR(t1.c0)))AND(v0.c2)))AND(v0.c0))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((t1.c0) IS TRUE) COLLATE BINARY FULL OUTER JOIN t0 ON UNLIKELY(SQLITE_COMPILEOPTION_GET(rt0.c0)) INNER JOIN t1 ON HEX(DISTINCT ((((((((((((rt0.c2)OR(v0.c1)))AND(v0.c3)))AND(v0.c0)))OR(t1.c0)))AND(v0.c2)))AND(v0.c0))) WHERE ((- (v0.c4)));
SELECT SUM(count) FROM (SELECT (((- (v0.c4))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((t1.c0) IS TRUE) COLLATE BINARY FULL OUTER JOIN t0 ON UNLIKELY(SQLITE_COMPILEOPTION_GET(rt0.c0)) INNER JOIN t1 ON HEX(DISTINCT ((((((((((((rt0.c2)OR(v0.c1)))AND(v0.c3)))AND(v0.c0)))OR(t1.c0)))AND(v0.c2)))AND(v0.c0))));
SELECT ALL * FROM rt1, t1, t0, v0, rt0 WHERE ((((~ (rt0.c1)))IS NOT(((rt1.c2)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))IS NOT(((rt1.c2)OR(rt0.c0))))) IS TRUE)  as count FROM rt1, t1, t0, v0, rt0);
SELECT ALL * FROM rt1, t1, t0, v0, rt0 WHERE ((((~ (rt0.c1)))IS NOT(((rt1.c2)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))IS NOT(((rt1.c2)OR(rt0.c0))))) IS TRUE)  as count FROM rt1, t1, t0, v0, rt0);
SELECT ALL * FROM rt1, t1, t0, v0, rt0 WHERE ((((~ (rt0.c1)))IS NOT(((rt1.c2)OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt1.c3)||(rt1.c2)) END) ORDER BY CAST(0.30387401483497856 AS REAL) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt1.c3)||(rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY CAST(0.30387401483497856 AS REAL) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt1.c3)||(rt1.c2)) END) ORDER BY CAST(0.30387401483497856 AS REAL) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt1.c3)||(rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY CAST(0.30387401483497856 AS REAL) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt1.c3)||(rt1.c2)) END) ORDER BY CAST(0.30387401483497856 AS REAL) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL * FROM rt0, t0, v0 RIGHT OUTER JOIN t1 ON (NOT ((+ (v0.c1)))) WHERE (((LAST_INSERT_ROWID()) NOT BETWEEN ((- (v0.c4))) AND (((rt0.c2)*(v0.c4))))) ORDER BY CAST(SQLITE_COMPILEOPTION_USED(rt0.c1) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) NOT BETWEEN ((- (v0.c4))) AND (((rt0.c2)*(v0.c4))))) IS TRUE)  as count FROM rt0, t0, v0 RIGHT OUTER JOIN t1 ON (NOT ((+ (v0.c1)))) ORDER BY CAST(SQLITE_COMPILEOPTION_USED(rt0.c1) AS NUMERIC));
SELECT ALL * FROM rt0, t0, v0 RIGHT OUTER JOIN t1 ON (NOT ((+ (v0.c1)))) WHERE (((LAST_INSERT_ROWID()) NOT BETWEEN ((- (v0.c4))) AND (((rt0.c2)*(v0.c4))))) ORDER BY CAST(SQLITE_COMPILEOPTION_USED(rt0.c1) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) NOT BETWEEN ((- (v0.c4))) AND (((rt0.c2)*(v0.c4))))) IS TRUE)  as count FROM rt0, t0, v0 RIGHT OUTER JOIN t1 ON (NOT ((+ (v0.c1)))) ORDER BY CAST(SQLITE_COMPILEOPTION_USED(rt0.c1) AS NUMERIC));
SELECT ALL * FROM rt0, t0, v0 RIGHT OUTER JOIN t1 ON (NOT ((+ (v0.c1)))) WHERE (((LAST_INSERT_ROWID()) NOT BETWEEN ((- (v0.c4))) AND (((rt0.c2)*(v0.c4))))) ORDER BY CAST(SQLITE_COMPILEOPTION_USED(rt0.c1) AS NUMERIC);
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END AS REAL));
SELECT * FROM v0 WHERE (HEX(((v0.c1) IS TRUE))) ORDER BY json_array_length(v0.c4 COLLATE RTRIM)  NULLS LAST, CAST(CASE v0.c3  WHEN v0.c0 THEN v0.c4 WHEN v0.c4 THEN v0.c1 WHEN v0.c3 THEN v0.c0 ELSE v0.c0 END AS NUMERIC)  NULLS LAST, (~ (((((v0.c0)AND(v0.c2)))OR('*bj')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((v0.c1) IS TRUE))) IS TRUE)  as count FROM v0 ORDER BY json_array_length(v0.c4 COLLATE RTRIM)  NULLS LAST, CAST(CASE v0.c3  WHEN v0.c0 THEN v0.c4 WHEN v0.c4 THEN v0.c1 WHEN v0.c3 THEN v0.c0 ELSE v0.c0 END AS NUMERIC)  NULLS LAST, (~ (((((v0.c0)AND(v0.c2)))OR('*bj')))) ASC);
SELECT * FROM v0 WHERE (HEX(((v0.c1) IS TRUE))) ORDER BY json_array_length(v0.c4 COLLATE RTRIM)  NULLS LAST, CAST(CASE v0.c3  WHEN v0.c0 THEN v0.c4 WHEN v0.c4 THEN v0.c1 WHEN v0.c3 THEN v0.c0 ELSE v0.c0 END AS NUMERIC)  NULLS LAST, (~ (((((v0.c0)AND(v0.c2)))OR('*bj')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((v0.c1) IS TRUE))) IS TRUE)  as count FROM v0 ORDER BY json_array_length(v0.c4 COLLATE RTRIM)  NULLS LAST, CAST(CASE v0.c3  WHEN v0.c0 THEN v0.c4 WHEN v0.c4 THEN v0.c1 WHEN v0.c3 THEN v0.c0 ELSE v0.c0 END AS NUMERIC)  NULLS LAST, (~ (((((v0.c0)AND(v0.c2)))OR('*bj')))) ASC);
SELECT * FROM v0 WHERE (HEX(((v0.c1) IS TRUE))) ORDER BY json_array_length(v0.c4 COLLATE RTRIM)  NULLS LAST, CAST(CASE v0.c3  WHEN v0.c0 THEN v0.c4 WHEN v0.c4 THEN v0.c1 WHEN v0.c3 THEN v0.c0 ELSE v0.c0 END AS NUMERIC)  NULLS LAST, (~ (((((v0.c0)AND(v0.c2)))OR('*bj')))) ASC;
SELECT * FROM t0 NATURAL JOIN v0 WHERE (CASE (~ (v0.c1))  WHEN LAST_INSERT_ROWID() THEN 'vnkiEYo' ELSE ((((((((t0.c0)OR(v0.c0)))AND(v0.c2)))AND(t0.c0)))AND(v0.c4)) END) ORDER BY LIKE(((t0.c0)>(v0.c3)), INSTR(v0.c3, v0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (v0.c1))  WHEN LAST_INSERT_ROWID() THEN 'vnkiEYo' ELSE ((((((((t0.c0)OR(v0.c0)))AND(v0.c2)))AND(t0.c0)))AND(v0.c4)) END) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY LIKE(((t0.c0)>(v0.c3)), INSTR(v0.c3, v0.c1)) DESC  NULLS LAST);
SELECT * FROM t0 NATURAL JOIN v0 WHERE (CASE (~ (v0.c1))  WHEN LAST_INSERT_ROWID() THEN 'vnkiEYo' ELSE ((((((((t0.c0)OR(v0.c0)))AND(v0.c2)))AND(t0.c0)))AND(v0.c4)) END) ORDER BY LIKE(((t0.c0)>(v0.c3)), INSTR(v0.c3, v0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (v0.c1))  WHEN LAST_INSERT_ROWID() THEN 'vnkiEYo' ELSE ((((((((t0.c0)OR(v0.c0)))AND(v0.c2)))AND(t0.c0)))AND(v0.c4)) END) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY LIKE(((t0.c0)>(v0.c3)), INSTR(v0.c3, v0.c1)) DESC  NULLS LAST);
SELECT * FROM t0 NATURAL JOIN v0 WHERE (CASE (~ (v0.c1))  WHEN LAST_INSERT_ROWID() THEN 'vnkiEYo' ELSE ((((((((t0.c0)OR(v0.c0)))AND(v0.c2)))AND(t0.c0)))AND(v0.c4)) END) ORDER BY LIKE(((t0.c0)>(v0.c3)), INSTR(v0.c3, v0.c1)) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1, v0, t1 WHERE (((CASE v0.c4  WHEN rt1.c3 THEN rt1.c1 END) BETWEEN (v0.c0 COLLATE BINARY) AND (((rt1.c1)OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c4  WHEN rt1.c3 THEN rt1.c1 END) BETWEEN (v0.c0 COLLATE BINARY) AND (((rt1.c1)OR(rt1.c1))))) IS TRUE)  as count FROM t0, rt1, v0, t1);
SELECT COUNT(*) FROM t0, rt1, v0, t1 WHERE (((CASE v0.c4  WHEN rt1.c3 THEN rt1.c1 END) BETWEEN (v0.c0 COLLATE BINARY) AND (((rt1.c1)OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c4  WHEN rt1.c3 THEN rt1.c1 END) BETWEEN (v0.c0 COLLATE BINARY) AND (((rt1.c1)OR(rt1.c1))))) IS TRUE)  as count FROM t0, rt1, v0, t1);
SELECT COUNT(*) FROM t0, rt1, v0, t1 WHERE (((CASE v0.c4  WHEN rt1.c3 THEN rt1.c1 END) BETWEEN (v0.c0 COLLATE BINARY) AND (((rt1.c1)OR(rt1.c1)))));
SELECT ALL COUNT(*) FROM t0, rt1, v0 WHERE ((((v0.c2)) BETWEEN (((((v0.c2))>((v0.c1))))) AND ((CASE v0.c3  WHEN rt1.c3 THEN v0.c2 END)))) ORDER BY json_type(CAST(rt1.c1 AS REAL)) DESC, CASE WHEN SQLITE_VERSION() THEN (((t0.c0)) NOT BETWEEN ((v0.c3)) AND ((NULL))) END;
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN (((((v0.c2))>((v0.c1))))) AND ((CASE v0.c3  WHEN rt1.c3 THEN v0.c2 END)))) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY json_type(CAST(rt1.c1 AS REAL)) DESC, CASE WHEN SQLITE_VERSION() THEN (((t0.c0)) NOT BETWEEN ((v0.c3)) AND ((NULL))) END);
SELECT ALL COUNT(*) FROM t0, rt1, v0 WHERE ((((v0.c2)) BETWEEN (((((v0.c2))>((v0.c1))))) AND ((CASE v0.c3  WHEN rt1.c3 THEN v0.c2 END)))) ORDER BY json_type(CAST(rt1.c1 AS REAL)) DESC, CASE WHEN SQLITE_VERSION() THEN (((t0.c0)) NOT BETWEEN ((v0.c3)) AND ((NULL))) END;
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN (((((v0.c2))>((v0.c1))))) AND ((CASE v0.c3  WHEN rt1.c3 THEN v0.c2 END)))) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY json_type(CAST(rt1.c1 AS REAL)) DESC, CASE WHEN SQLITE_VERSION() THEN (((t0.c0)) NOT BETWEEN ((v0.c3)) AND ((NULL))) END);
SELECT ALL COUNT(*) FROM t0, rt1, v0 WHERE ((((v0.c2)) BETWEEN (((((v0.c2))>((v0.c1))))) AND ((CASE v0.c3  WHEN rt1.c3 THEN v0.c2 END)))) ORDER BY json_type(CAST(rt1.c1 AS REAL)) DESC, CASE WHEN SQLITE_VERSION() THEN (((t0.c0)) NOT BETWEEN ((v0.c3)) AND ((NULL))) END;
SELECT * FROM rt0, t0, v0, rt1, t1 WHERE (((CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c0 END) NOTNULL)) ORDER BY (((t0.c0 IN ()))<<(LTRIM(t1.c0, v0.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c0 END) NOTNULL)) IS TRUE)  as count FROM rt0, t0, v0, rt1, t1 ORDER BY (((t0.c0 IN ()))<<(LTRIM(t1.c0, v0.c3))) ASC  NULLS LAST);
SELECT * FROM rt0, t0, v0, rt1, t1 WHERE (((CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c0 END) NOTNULL)) ORDER BY (((t0.c0 IN ()))<<(LTRIM(t1.c0, v0.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c0 END) NOTNULL)) IS TRUE)  as count FROM rt0, t0, v0, rt1, t1 ORDER BY (((t0.c0 IN ()))<<(LTRIM(t1.c0, v0.c3))) ASC  NULLS LAST);
SELECT * FROM rt0, t0, v0, rt1, t1 WHERE (((CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c0 END) NOTNULL)) ORDER BY (((t0.c0 IN ()))<<(LTRIM(t1.c0, v0.c3))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((((((((((((rt0.c1)>=(x'')))AND(x'5def' COLLATE BINARY)))OR((((rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, t1.c0))))))AND((rt0.c0 IN ()))))OR((- (rt0.c3)))))OR(rt0.c3 COLLATE RTRIM)))OR((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c1)>=(x'')))AND(x'5def' COLLATE BINARY)))OR((((rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, t1.c0))))))AND((rt0.c0 IN ()))))OR((- (rt0.c3)))))OR(rt0.c3 COLLATE RTRIM)))OR((+ (rt0.c0))))) IS TRUE)  as count FROM rt0, t1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((((((((((((rt0.c1)>=(x'')))AND(x'5def' COLLATE BINARY)))OR((((rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, t1.c0))))))AND((rt0.c0 IN ()))))OR((- (rt0.c3)))))OR(rt0.c3 COLLATE RTRIM)))OR((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c1)>=(x'')))AND(x'5def' COLLATE BINARY)))OR((((rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, t1.c0))))))AND((rt0.c0 IN ()))))OR((- (rt0.c3)))))OR(rt0.c3 COLLATE RTRIM)))OR((+ (rt0.c0))))) IS TRUE)  as count FROM rt0, t1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((((((((((((rt0.c1)>=(x'')))AND(x'5def' COLLATE BINARY)))OR((((rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, t1.c0))))))AND((rt0.c0 IN ()))))OR((- (rt0.c3)))))OR(rt0.c3 COLLATE RTRIM)))OR((+ (rt0.c0)))));
SELECT COUNT(*) FROM t1 CROSS JOIN rt0 ON (((((x'0fa3'))>=((rt0.c2))))>(json_extract(t1.c0, rt0.c1))) WHERE (((CAST(rt0.c2 AS NUMERIC))LIKE(CASE WHEN rt0.c1 THEN 0xffffffffac34c89b ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS NUMERIC))LIKE(CASE WHEN rt0.c1 THEN 0xffffffffac34c89b ELSE rt0.c0 END))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON (((((x'0fa3'))>=((rt0.c2))))>(json_extract(t1.c0, rt0.c1))));
SELECT COUNT(*) FROM t1 CROSS JOIN rt0 ON (((((x'0fa3'))>=((rt0.c2))))>(json_extract(t1.c0, rt0.c1))) WHERE (((CAST(rt0.c2 AS NUMERIC))LIKE(CASE WHEN rt0.c1 THEN 0xffffffffac34c89b ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS NUMERIC))LIKE(CASE WHEN rt0.c1 THEN 0xffffffffac34c89b ELSE rt0.c0 END))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON (((((x'0fa3'))>=((rt0.c2))))>(json_extract(t1.c0, rt0.c1))));
SELECT COUNT(*) FROM t1 CROSS JOIN rt0 ON (((((x'0fa3'))>=((rt0.c2))))>(json_extract(t1.c0, rt0.c1))) WHERE (((CAST(rt0.c2 AS NUMERIC))LIKE(CASE WHEN rt0.c1 THEN 0xffffffffac34c89b ELSE rt0.c0 END)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) IN ()) WHERE ((('xq') BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT (((('xq') BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (rt0.c3))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) IN ()));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) IN ()) WHERE ((('xq') BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT (((('xq') BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (rt0.c3))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) IN ()));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) IN ()) WHERE ((('xq') BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (rt0.c3)));
SELECT COUNT(*) FROM t0, rt0, v0 WHERE (((PRINTF(v0.c0, t0.c0, t0.c0)) NOT BETWEEN (((v0.c4)<<(rt0.c1))) AND (LIKELY(v0.c2))));
SELECT SUM(count) FROM (SELECT ((((PRINTF(v0.c0, t0.c0, t0.c0)) NOT BETWEEN (((v0.c4)<<(rt0.c1))) AND (LIKELY(v0.c2)))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT COUNT(*) FROM t0, rt0, v0 WHERE (((PRINTF(v0.c0, t0.c0, t0.c0)) NOT BETWEEN (((v0.c4)<<(rt0.c1))) AND (LIKELY(v0.c2))));
SELECT SUM(count) FROM (SELECT ((((PRINTF(v0.c0, t0.c0, t0.c0)) NOT BETWEEN (((v0.c4)<<(rt0.c1))) AND (LIKELY(v0.c2)))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT COUNT(*) FROM t0, rt0, v0 WHERE (((PRINTF(v0.c0, t0.c0, t0.c0)) NOT BETWEEN (((v0.c4)<<(rt0.c1))) AND (LIKELY(v0.c2))));
SELECT ALL * FROM rt1, rt0, t1, v0, t0 WHERE ((- (-1145799547)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((- (-1145799547)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, t1, v0, t0);
SELECT ALL * FROM rt1, rt0, t1, v0, t0 WHERE ((- (-1145799547)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((- (-1145799547)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, t1, v0, t0);
SELECT ALL * FROM rt1, rt0, t1, v0, t0 WHERE ((- (-1145799547)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((('')*(0x7402da96)))) AND ((CAST(t0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (((('')*(0X7402da96)))) AND ((CAST(t0.c0 AS BLOB))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((('')*(0x7402da96)))) AND ((CAST(t0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (((('')*(0X7402da96)))) AND ((CAST(t0.c0 AS BLOB))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((('')*(0x7402da96)))) AND ((CAST(t0.c0 AS BLOB)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN v0.c4 THEN v0.c4 END) IS TRUE) WHERE (((((((rt0.c0) ISNULL))OR('')))AND(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((rt0.c0 COLLATE RTRIM)>((NOT (v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) ISNULL))OR('')))AND(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN v0.c4 THEN v0.c4 END) IS TRUE) ORDER BY ((rt0.c0 COLLATE RTRIM)>((NOT (v0.c2)))) ASC);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN v0.c4 THEN v0.c4 END) IS TRUE) WHERE (((((((rt0.c0) ISNULL))OR('')))AND(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((rt0.c0 COLLATE RTRIM)>((NOT (v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) ISNULL))OR('')))AND(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN v0.c4 THEN v0.c4 END) IS TRUE) ORDER BY ((rt0.c0 COLLATE RTRIM)>((NOT (v0.c2)))) ASC);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN v0.c4 THEN v0.c4 END) IS TRUE) WHERE (((((((rt0.c0) ISNULL))OR('')))AND(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((rt0.c0 COLLATE RTRIM)>((NOT (v0.c2)))) ASC;
SELECT ALL * FROM t0, rt0 LEFT OUTER JOIN v0 ON (HEX(v0.c4) IN ()) WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN v0.c3 THEN rt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN v0.c3 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN v0 ON (HEX(v0.c4) IN ()));
SELECT ALL * FROM t0, rt0 LEFT OUTER JOIN v0 ON (HEX(v0.c4) IN ()) WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN v0.c3 THEN rt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN v0.c3 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN v0 ON (HEX(v0.c4) IN ()));
SELECT ALL * FROM t0, rt0 LEFT OUTER JOIN v0 ON (HEX(v0.c4) IN ()) WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN v0.c3 THEN rt0.c2 END AS TEXT));
SELECT * FROM rt0, rt1, t0, t1, v0 WHERE ((((v0.c1 IN ())) BETWEEN ((rt0.c2 IN (rt0.c2))) AND (UPPER(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ())) BETWEEN ((rt0.c2 IN (rt0.c2))) AND (UPPER(DISTINCT v0.c0)))) IS TRUE)  as count FROM rt0, rt1, t0, t1, v0);
SELECT * FROM rt0, rt1, t0, t1, v0 WHERE ((((v0.c1 IN ())) BETWEEN ((rt0.c2 IN (rt0.c2))) AND (UPPER(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ())) BETWEEN ((rt0.c2 IN (rt0.c2))) AND (UPPER(DISTINCT v0.c0)))) IS TRUE)  as count FROM rt0, rt1, t0, t1, v0);
SELECT * FROM rt0, rt1, t0, t1, v0 WHERE ((((v0.c1 IN ())) BETWEEN ((rt0.c2 IN (rt0.c2))) AND (UPPER(DISTINCT v0.c0))));
SELECT ALL * FROM rt0, t0 WHERE (IFNULL('0.9578261606466885' COLLATE RTRIM, t0.c0)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))/((rt0.c0 IN (rt0.c1)))), CAST(((rt0.c1)-(rt0.c0)) AS REAL), CAST(load_extension(rt0.c2) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL('0.9578261606466885' COLLATE RTRIM, t0.c0)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))/((rt0.c0 IN (rt0.c1)))), CAST(((rt0.c1)-(rt0.c0)) AS REAL), CAST(load_extension(rt0.c2) AS BLOB)  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (IFNULL('0.9578261606466885' COLLATE RTRIM, t0.c0)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))/((rt0.c0 IN (rt0.c1)))), CAST(((rt0.c1)-(rt0.c0)) AS REAL), CAST(load_extension(rt0.c2) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL('0.9578261606466885' COLLATE RTRIM, t0.c0)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))/((rt0.c0 IN (rt0.c1)))), CAST(((rt0.c1)-(rt0.c0)) AS REAL), CAST(load_extension(rt0.c2) AS BLOB)  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (IFNULL('0.9578261606466885' COLLATE RTRIM, t0.c0)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))/((rt0.c0 IN (rt0.c1)))), CAST(((rt0.c1)-(rt0.c0)) AS REAL), CAST(load_extension(rt0.c2) AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ((((((((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(((((rt1.c1)AND(rt0.c2)))AND(rt0.c3)))))AND(json(rt0.c2))))OR((- (rt1.c1)))))AND(((((rt0.c3)OR(rt1.c2)))AND(rt0.c2))))) ORDER BY ((rt1.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c0)IS NOT(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(((((rt1.c1)AND(rt0.c2)))AND(rt0.c3)))))AND(json(rt0.c2))))OR((- (rt1.c1)))))AND(((((rt0.c3)OR(rt1.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((rt1.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c0)IS NOT(rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ((((((((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(((((rt1.c1)AND(rt0.c2)))AND(rt0.c3)))))AND(json(rt0.c2))))OR((- (rt1.c1)))))AND(((((rt0.c3)OR(rt1.c2)))AND(rt0.c2))))) ORDER BY ((rt1.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c0)IS NOT(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(((((rt1.c1)AND(rt0.c2)))AND(rt0.c3)))))AND(json(rt0.c2))))OR((- (rt1.c1)))))AND(((((rt0.c3)OR(rt1.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((rt1.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c0)IS NOT(rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ((((((((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(((((rt1.c1)AND(rt0.c2)))AND(rt0.c3)))))AND(json(rt0.c2))))OR((- (rt1.c1)))))AND(((((rt0.c3)OR(rt1.c2)))AND(rt0.c2))))) ORDER BY ((rt1.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c0)IS NOT(rt0.c1)))) ASC;
SELECT ALL * FROM rt0, t0, v0, rt1, t1 WHERE (load_extension(CAST(rt1.c1 AS BLOB), rt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((load_extension(CAST(rt1.c1 AS BLOB), rt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0, t0, v0, rt1, t1);
SELECT ALL * FROM rt0, t0, v0, rt1, t1 WHERE (load_extension(CAST(rt1.c1 AS BLOB), rt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((load_extension(CAST(rt1.c1 AS BLOB), rt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0, t0, v0, rt1, t1);
SELECT ALL * FROM rt0, t0, v0, rt1, t1 WHERE (load_extension(CAST(rt1.c1 AS BLOB), rt1.c0 COLLATE BINARY));
SELECT * FROM t0 WHERE (CASE WHEN ((((((((x'')AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((t0.c0)%(t0.c0)) ELSE UPPER(t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((x'')AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((t0.c0)%(t0.c0)) ELSE UPPER(t0.c0) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((((((((x'')AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((t0.c0)%(t0.c0)) ELSE UPPER(t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((x'')AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((t0.c0)%(t0.c0)) ELSE UPPER(t0.c0) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((((((((x'')AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((t0.c0)%(t0.c0)) ELSE UPPER(t0.c0) END);
SELECT ALL * FROM rt1, t1, t0 WHERE ((((t1.c0)) NOT BETWEEN ((CAST(rt1.c3 AS NUMERIC))) AND ((rt1.c2)))) ORDER BY ((rt1.c1 COLLATE NOCASE) BETWEEN (((t0.c0) NOT BETWEEN (t1.c0) AND (rt1.c2))) AND (rt1.c0));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((CAST(rt1.c3 AS NUMERIC))) AND ((rt1.c2)))) IS TRUE)  as count FROM rt1, t1, t0 ORDER BY ((rt1.c1 COLLATE NOCASE) BETWEEN (((t0.c0) NOT BETWEEN (t1.c0) AND (rt1.c2))) AND (rt1.c0)));
SELECT ALL * FROM rt1, t1, t0 WHERE ((((t1.c0)) NOT BETWEEN ((CAST(rt1.c3 AS NUMERIC))) AND ((rt1.c2)))) ORDER BY ((rt1.c1 COLLATE NOCASE) BETWEEN (((t0.c0) NOT BETWEEN (t1.c0) AND (rt1.c2))) AND (rt1.c0));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((CAST(rt1.c3 AS NUMERIC))) AND ((rt1.c2)))) IS TRUE)  as count FROM rt1, t1, t0 ORDER BY ((rt1.c1 COLLATE NOCASE) BETWEEN (((t0.c0) NOT BETWEEN (t1.c0) AND (rt1.c2))) AND (rt1.c0)));
SELECT ALL * FROM rt1, t1, t0 WHERE ((((t1.c0)) NOT BETWEEN ((CAST(rt1.c3 AS NUMERIC))) AND ((rt1.c2)))) ORDER BY ((rt1.c1 COLLATE NOCASE) BETWEEN (((t0.c0) NOT BETWEEN (t1.c0) AND (rt1.c2))) AND (rt1.c0));
SELECT COUNT(*) FROM rt1, v0 WHERE (((((((((CHANGES())AND((NOT (rt1.c3)))))AND(CASE v0.c4  WHEN rt1.c3 THEN v0.c3 WHEN 0Xffffffffc8f481ee THEN rt1.c0 WHEN v0.c1 THEN rt1.c1 ELSE v0.c3 END)))OR(rt1.c0)))OR(CASE WHEN 0x42889b04 THEN rt1.c1 WHEN v0.c3 THEN rt1.c1 WHEN v0.c0 THEN v0.c3 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CHANGES())AND((NOT (rt1.c3)))))AND(CASE v0.c4  WHEN rt1.c3 THEN v0.c3 WHEN 0Xffffffffc8f481ee THEN rt1.c0 WHEN v0.c1 THEN rt1.c1 ELSE v0.c3 END)))OR(rt1.c0)))OR(CASE WHEN 0x42889b04 THEN rt1.c1 WHEN v0.c3 THEN rt1.c1 WHEN v0.c0 THEN v0.c3 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (((((((((CHANGES())AND((NOT (rt1.c3)))))AND(CASE v0.c4  WHEN rt1.c3 THEN v0.c3 WHEN 0Xffffffffc8f481ee THEN rt1.c0 WHEN v0.c1 THEN rt1.c1 ELSE v0.c3 END)))OR(rt1.c0)))OR(CASE WHEN 0x42889b04 THEN rt1.c1 WHEN v0.c3 THEN rt1.c1 WHEN v0.c0 THEN v0.c3 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CHANGES())AND((NOT (rt1.c3)))))AND(CASE v0.c4  WHEN rt1.c3 THEN v0.c3 WHEN 0Xffffffffc8f481ee THEN rt1.c0 WHEN v0.c1 THEN rt1.c1 ELSE v0.c3 END)))OR(rt1.c0)))OR(CASE WHEN 0x42889b04 THEN rt1.c1 WHEN v0.c3 THEN rt1.c1 WHEN v0.c0 THEN v0.c3 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (((((((((CHANGES())AND((NOT (rt1.c3)))))AND(CASE v0.c4  WHEN rt1.c3 THEN v0.c3 WHEN 0Xffffffffc8f481ee THEN rt1.c0 WHEN v0.c1 THEN rt1.c1 ELSE v0.c3 END)))OR(rt1.c0)))OR(CASE WHEN 0x42889b04 THEN rt1.c1 WHEN v0.c3 THEN rt1.c1 WHEN v0.c0 THEN v0.c3 ELSE rt1.c2 END)));
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, t1);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, t1);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (rt1.c2);
SELECT ALL * FROM rt1 INNER JOIN v0 ON ((0X6b1b0f08)=(NULL)) INNER JOIN t1 ON -815851096 INNER JOIN t0 ON ((((v0.c3)<=(rt1.c1)))LIKE(((v0.c4)>=(v0.c2)))) CROSS JOIN rt0 ON (((((((((448066743)AND(rt1.c0)))OR(v0.c0)))AND(t1.c0)))OR(rt0.c2)) IN ()) WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON ((0X6b1b0f08)==(NULL)) INNER JOIN t1 ON -815851096 INNER JOIN t0 ON ((((v0.c3)<=(rt1.c1)))LIKE(((v0.c4)>=(v0.c2)))) CROSS JOIN rt0 ON (((((((((448066743)AND(rt1.c0)))OR(v0.c0)))AND(t1.c0)))OR(rt0.c2)) IN ()));
SELECT ALL * FROM rt1 INNER JOIN v0 ON ((0X6b1b0f08)=(NULL)) INNER JOIN t1 ON -815851096 INNER JOIN t0 ON ((((v0.c3)<=(rt1.c1)))LIKE(((v0.c4)>=(v0.c2)))) CROSS JOIN rt0 ON (((((((((448066743)AND(rt1.c0)))OR(v0.c0)))AND(t1.c0)))OR(rt0.c2)) IN ()) WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON ((0X6b1b0f08)==(NULL)) INNER JOIN t1 ON -815851096 INNER JOIN t0 ON ((((v0.c3)<=(rt1.c1)))LIKE(((v0.c4)>=(v0.c2)))) CROSS JOIN rt0 ON (((((((((448066743)AND(rt1.c0)))OR(v0.c0)))AND(t1.c0)))OR(rt0.c2)) IN ()));
SELECT ALL * FROM rt1 INNER JOIN v0 ON ((0X6b1b0f08)=(NULL)) INNER JOIN t1 ON -815851096 INNER JOIN t0 ON ((((v0.c3)<=(rt1.c1)))LIKE(((v0.c4)>=(v0.c2)))) CROSS JOIN rt0 ON (((((((((448066743)AND(rt1.c0)))OR(v0.c0)))AND(t1.c0)))OR(rt0.c2)) IN ()) WHERE (v0.c2);
SELECT ALL * FROM v0, rt1, t0, rt0, t1 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0, rt1, t0, rt0, t1);
SELECT ALL * FROM v0, rt1, t0, rt0, t1 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0, rt1, t0, rt0, t1);
SELECT ALL * FROM v0, rt1, t0, rt0, t1 WHERE (v0.c1);
SELECT COUNT(*) FROM t0, t1, v0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, t1, v0, rt1);
SELECT COUNT(*) FROM t0, t1, v0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, t1, v0, rt1);
SELECT COUNT(*) FROM t0, t1, v0, rt1 WHERE (x'');
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (+ (v0.c4)) WHERE (((((v0.c2, 0.03486290198415609, v0.c2))<=((v0.c0, rt0.c0, rt0.c0))) IN (((((((((v0.c3)AND(rt0.c2)))AND('-482651038')))AND(0.1115049084282177)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2, 0.03486290198415609, v0.c2))<=((v0.c0, rt0.c0, rt0.c0))) IN (((((((((v0.c3)AND(rt0.c2)))AND('-482651038')))AND(0.1115049084282177)))OR(rt0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (+ (v0.c4)));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (+ (v0.c4)) WHERE (((((v0.c2, 0.03486290198415609, v0.c2))<=((v0.c0, rt0.c0, rt0.c0))) IN (((((((((v0.c3)AND(rt0.c2)))AND('-482651038')))AND(0.1115049084282177)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2, 0.03486290198415609, v0.c2))<=((v0.c0, rt0.c0, rt0.c0))) IN (((((((((v0.c3)AND(rt0.c2)))AND('-482651038')))AND(0.1115049084282177)))OR(rt0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (+ (v0.c4)));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (+ (v0.c4)) WHERE (((((v0.c2, 0.03486290198415609, v0.c2))<=((v0.c0, rt0.c0, rt0.c0))) IN (((((((((v0.c3)AND(rt0.c2)))AND('-482651038')))AND(0.1115049084282177)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1, rt0, t1, v0 WHERE (LIKELY(DISTINCT (- (v0.c2)))) ORDER BY ((((((9.78225142E8)AND(rt0.c2)))OR(v0.c1)))-(((t1.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (- (v0.c2)))) IS TRUE)  as count FROM rt1, rt0, t1, v0 ORDER BY ((((((9.78225142E8)AND(rt0.c2)))OR(v0.c1)))-(((t1.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, t1, v0 WHERE (LIKELY(DISTINCT (- (v0.c2)))) ORDER BY ((((((9.78225142E8)AND(rt0.c2)))OR(v0.c1)))-(((t1.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (- (v0.c2)))) IS TRUE)  as count FROM rt1, rt0, t1, v0 ORDER BY ((((((9.78225142E8)AND(rt0.c2)))OR(v0.c1)))-(((t1.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, t1, v0 WHERE (LIKELY(DISTINCT (- (v0.c2)))) ORDER BY ((((((9.78225142E8)AND(rt0.c2)))OR(v0.c1)))-(((t1.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY CASE WHEN ((v0.c0)|(rt0.c0)) THEN (rt0.c2 IN ()) WHEN ((v0.c3)&(v0.c1)) THEN ((rt0.c1)GLOB(v0.c1)) WHEN ((rt0.c2) NOTNULL) THEN CASE WHEN v0.c2 THEN v0.c2 ELSE rt0.c1 END ELSE ((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY CASE WHEN ((v0.c0)|(rt0.c0)) THEN (rt0.c2 IN ()) WHEN ((v0.c3)&(v0.c1)) THEN ((rt0.c1)GLOB(v0.c1)) WHEN ((rt0.c2) NOTNULL) THEN CASE WHEN v0.c2 THEN v0.c2 ELSE rt0.c1 END ELSE ((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c2)) END DESC  NULLS FIRST);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY CASE WHEN ((v0.c0)|(rt0.c0)) THEN (rt0.c2 IN ()) WHEN ((v0.c3)&(v0.c1)) THEN ((rt0.c1)GLOB(v0.c1)) WHEN ((rt0.c2) NOTNULL) THEN CASE WHEN v0.c2 THEN v0.c2 ELSE rt0.c1 END ELSE ((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY CASE WHEN ((v0.c0)|(rt0.c0)) THEN (rt0.c2 IN ()) WHEN ((v0.c3)&(v0.c1)) THEN ((rt0.c1)GLOB(v0.c1)) WHEN ((rt0.c2) NOTNULL) THEN CASE WHEN v0.c2 THEN v0.c2 ELSE rt0.c1 END ELSE ((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c2)) END DESC  NULLS FIRST);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY CASE WHEN ((v0.c0)|(rt0.c0)) THEN (rt0.c2 IN ()) WHEN ((v0.c3)&(v0.c1)) THEN ((rt0.c1)GLOB(v0.c1)) WHEN ((rt0.c2) NOTNULL) THEN CASE WHEN v0.c2 THEN v0.c2 ELSE rt0.c1 END ELSE ((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c2)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t1 WHERE (((((t1.c0)AND(rt0.c3)))LIKE(((rt0.c0) IS FALSE)))) ORDER BY (((((((((x'')AND(rt0.c2)))OR(rt0.c0)))AND(t1.c0)))AND(rt0.c3)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)AND(rt0.c3)))LIKE(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, t1 ORDER BY (((((((((x'')AND(rt0.c2)))OR(rt0.c0)))AND(t1.c0)))AND(rt0.c3)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((t1.c0)AND(rt0.c3)))LIKE(((rt0.c0) IS FALSE)))) ORDER BY (((((((((x'')AND(rt0.c2)))OR(rt0.c0)))AND(t1.c0)))AND(rt0.c3)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)AND(rt0.c3)))LIKE(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, t1 ORDER BY (((((((((x'')AND(rt0.c2)))OR(rt0.c0)))AND(t1.c0)))AND(rt0.c3)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((t1.c0)AND(rt0.c3)))LIKE(((rt0.c0) IS FALSE)))) ORDER BY (((((((((x'')AND(rt0.c2)))OR(rt0.c0)))AND(t1.c0)))AND(rt0.c3)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) ISNULL)) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) ISNULL)) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1) ISNULL)) IS TRUE));
SELECT * FROM t1, t0, rt0 WHERE ('Q弲>B/~');
SELECT SUM(count) FROM (SELECT ALL (('Q弲>B/~') IS TRUE)  as count FROM t1, t0, rt0);
SELECT * FROM t1, t0, rt0 WHERE ('Q弲>B/~');
SELECT SUM(count) FROM (SELECT ALL (('Q弲>B/~') IS TRUE)  as count FROM t1, t0, rt0);
SELECT * FROM t1, t0, rt0 WHERE ('Q弲>B/~');
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (CAST(0.7398660312556817 AS NUMERIC) COLLATE RTRIM) ORDER BY TYPEOF(DISTINCT CASE v0.c2  WHEN rt1.c3 THEN rt0.c3 ELSE rt0.c1 END) ASC, CAST(CHAR(x'') AS REAL) DESC  NULLS LAST, (NOT (((v0.c3)<(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(0.7398660312556817 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY TYPEOF(DISTINCT CASE v0.c2  WHEN rt1.c3 THEN rt0.c3 ELSE rt0.c1 END) ASC, CAST(CHAR(x'') AS REAL) DESC  NULLS LAST, (NOT (((v0.c3)<(rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (CAST(0.7398660312556817 AS NUMERIC) COLLATE RTRIM) ORDER BY TYPEOF(DISTINCT CASE v0.c2  WHEN rt1.c3 THEN rt0.c3 ELSE rt0.c1 END) ASC, CAST(CHAR(x'') AS REAL) DESC  NULLS LAST, (NOT (((v0.c3)<(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(0.7398660312556817 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY TYPEOF(DISTINCT CASE v0.c2  WHEN rt1.c3 THEN rt0.c3 ELSE rt0.c1 END) ASC, CAST(CHAR(x'') AS REAL) DESC  NULLS LAST, (NOT (((v0.c3)<(rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (CAST(0.7398660312556817 AS NUMERIC) COLLATE RTRIM) ORDER BY TYPEOF(DISTINCT CASE v0.c2  WHEN rt1.c3 THEN rt0.c3 ELSE rt0.c1 END) ASC, CAST(CHAR(x'') AS REAL) DESC  NULLS LAST, (NOT (((v0.c3)<(rt0.c0)))) ASC;
SELECT ALL * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0))) AND (DATE(t1.c0, x'', t1.c0, t1.c0, t1.c0))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0))) AND (DATE(t1.c0, x'', t1.c0, t1.c0, t1.c0)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0))) AND (DATE(t1.c0, x'', t1.c0, t1.c0, t1.c0))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0))) AND (DATE(t1.c0, x'', t1.c0, t1.c0, t1.c0)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0))) AND (DATE(t1.c0, x'', t1.c0, t1.c0, t1.c0))));
SELECT ALL * FROM t1, t0 WHERE (t1.c0 COLLATE BINARY) ORDER BY ((t1.c0) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0 COLLATE BINARY) IS TRUE)  as count FROM t1, t0 ORDER BY ((t1.c0) NOTNULL)  NULLS LAST);
SELECT ALL * FROM t1, t0 WHERE (t1.c0 COLLATE BINARY) ORDER BY ((t1.c0) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0 COLLATE BINARY) IS TRUE)  as count FROM t1, t0 ORDER BY ((t1.c0) NOTNULL)  NULLS LAST);
SELECT ALL * FROM t1, t0 WHERE (t1.c0 COLLATE BINARY) ORDER BY ((t1.c0) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM t1, t0 WHERE (t0.c0) ORDER BY ((((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)))+(CASE t0.c0  WHEN 0.031052721436878428 THEN t1.c0 ELSE t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t1, t0 ORDER BY ((((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)))+(CASE t0.c0  WHEN 0.031052721436878428 THEN t1.c0 ELSE t0.c0 END)) ASC);
SELECT COUNT(*) FROM t1, t0 WHERE (t0.c0) ORDER BY ((((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)))+(CASE t0.c0  WHEN 0.031052721436878428 THEN t1.c0 ELSE t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t1, t0 ORDER BY ((((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)))+(CASE t0.c0  WHEN 0.031052721436878428 THEN t1.c0 ELSE t0.c0 END)) ASC);
SELECT COUNT(*) FROM t1, t0 WHERE (t0.c0) ORDER BY ((((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)))+(CASE t0.c0  WHEN 0.031052721436878428 THEN t1.c0 ELSE t0.c0 END)) ASC;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((rt0.c1 COLLATE BINARY)<=(t0.c0)) INNER JOIN t0 ON CAST(NULL AS BLOB) CROSS JOIN t1 ON ((+ (rt0.c2)) IN (x'738d')) WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((rt0.c1 COLLATE BINARY)<=(t0.c0)) INNER JOIN t0 ON CAST(NULL AS BLOB) CROSS JOIN t1 ON ((+ (rt0.c2)) IN (x'738d')));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((rt0.c1 COLLATE BINARY)<=(t0.c0)) INNER JOIN t0 ON CAST(NULL AS BLOB) CROSS JOIN t1 ON ((+ (rt0.c2)) IN (x'738d')) WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((rt0.c1 COLLATE BINARY)<=(t0.c0)) INNER JOIN t0 ON CAST(NULL AS BLOB) CROSS JOIN t1 ON ((+ (rt0.c2)) IN (x'738d')));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((rt0.c1 COLLATE BINARY)<=(t0.c0)) INNER JOIN t0 ON CAST(NULL AS BLOB) CROSS JOIN t1 ON ((+ (rt0.c2)) IN (x'738d')) WHERE (v0.c1);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((((((((NULL IN ()))OR(((rt0.c2)<>(t1.c0)))))OR(((t0.c0)GLOB(t0.c0)))))AND(((rt0.c0)>(rt0.c0)))))OR(((v0.c3) ISNULL))) FULL OUTER JOIN rt0 ON (((((rt0.c2)AND(v0.c2))))=((((v0.c0)<(rt0.c0))))) LEFT OUTER JOIN t1 ON LOWER(DISTINCT rt0.c2 COLLATE BINARY) WHERE (((CAST(t0.c0 AS INTEGER))-((- (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER))-((- (t1.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((((((((NULL IN ()))OR(((rt0.c2)!=(t1.c0)))))OR(((t0.c0)GLOB(t0.c0)))))AND(((rt0.c0)>(rt0.c0)))))OR(((v0.c3) ISNULL))) FULL OUTER JOIN rt0 ON (((((rt0.c2)AND(v0.c2))))=((((v0.c0)<(rt0.c0))))) LEFT OUTER JOIN t1 ON LOWER(DISTINCT rt0.c2 COLLATE BINARY));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((((((((NULL IN ()))OR(((rt0.c2)<>(t1.c0)))))OR(((t0.c0)GLOB(t0.c0)))))AND(((rt0.c0)>(rt0.c0)))))OR(((v0.c3) ISNULL))) FULL OUTER JOIN rt0 ON (((((rt0.c2)AND(v0.c2))))=((((v0.c0)<(rt0.c0))))) LEFT OUTER JOIN t1 ON LOWER(DISTINCT rt0.c2 COLLATE BINARY) WHERE (((CAST(t0.c0 AS INTEGER))-((- (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER))-((- (t1.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((((((((NULL IN ()))OR(((rt0.c2)!=(t1.c0)))))OR(((t0.c0)GLOB(t0.c0)))))AND(((rt0.c0)>(rt0.c0)))))OR(((v0.c3) ISNULL))) FULL OUTER JOIN rt0 ON (((((rt0.c2)AND(v0.c2))))=((((v0.c0)<(rt0.c0))))) LEFT OUTER JOIN t1 ON LOWER(DISTINCT rt0.c2 COLLATE BINARY));
SELECT ALL COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT ((t0.c0) IS FALSE))) ORDER BY CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((t0.c0) IS FALSE))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT ((t0.c0) IS FALSE))) ORDER BY CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((t0.c0) IS FALSE))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT ((t0.c0) IS FALSE))) ORDER BY CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (((t0.c0)) BETWEEN ((TRIM(t0.c0))) AND ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) BETWEEN ((TRIM(t0.c0))) AND ((((((t0.c0)AND(t0.c0)))AND(t0.c0))))));
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (((t0.c0)) BETWEEN ((TRIM(t0.c0))) AND ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) BETWEEN ((TRIM(t0.c0))) AND ((((((t0.c0)AND(t0.c0)))AND(t0.c0))))));
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (((t0.c0)) BETWEEN ((TRIM(t0.c0))) AND ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT * FROM t1, rt0, t0 WHERE ((~ (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t1.c0))) IS TRUE)  as count FROM t1, rt0, t0);
SELECT * FROM t1, rt0, t0 WHERE ((~ (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t1.c0))) IS TRUE)  as count FROM t1, rt0, t0);
SELECT * FROM t1, rt0, t0 WHERE ((~ (t1.c0)));
SELECT ALL COUNT(*) FROM t0, rt1, t1, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN t0.c0 ELSE rt1.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c0 THEN t0.c0 ELSE rt1.c0 END AS BLOB)) IS TRUE)  as count FROM t0, rt1, t1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, t1, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN t0.c0 ELSE rt1.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c0 THEN t0.c0 ELSE rt1.c0 END AS BLOB)) IS TRUE)  as count FROM t0, rt1, t1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, t1, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN t0.c0 ELSE rt1.c0 END AS BLOB));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TRIM(CASE v0.c4  WHEN v0.c4 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE v0.c4  WHEN v0.c4 THEN rt0.c2 END)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TRIM(CASE v0.c4  WHEN v0.c4 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE v0.c4  WHEN v0.c4 THEN rt0.c2 END)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TRIM(CASE v0.c4  WHEN v0.c4 THEN rt0.c2 END));
SELECT * FROM rt0, v0, t0 WHERE (((((0xffffffffcc755573)+(v0.c0)))*((((rt0.c2, v0.c2, rt0.c2))=((v0.c4, v0.c2, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((0Xffffffffcc755573)+(v0.c0)))*((((rt0.c2, v0.c2, rt0.c2))==((v0.c4, v0.c2, t0.c0)))))) IS TRUE)  as count FROM rt0, v0, t0);
SELECT * FROM rt0, v0, t0 WHERE (((((0xffffffffcc755573)+(v0.c0)))*((((rt0.c2, v0.c2, rt0.c2))=((v0.c4, v0.c2, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((0Xffffffffcc755573)+(v0.c0)))*((((rt0.c2, v0.c2, rt0.c2))==((v0.c4, v0.c2, t0.c0)))))) IS TRUE)  as count FROM rt0, v0, t0);
SELECT * FROM rt0, v0, t0 WHERE (((((0xffffffffcc755573)+(v0.c0)))*((((rt0.c2, v0.c2, rt0.c2))=((v0.c4, v0.c2, t0.c0))))));
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (CAST(((t0.c0)<(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)<(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (CAST(((t0.c0)<(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)<(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (CAST(((t0.c0)<(t0.c0)) AS BLOB));
SELECT ALL * FROM rt0, t0, t1, rt1 WHERE (((json_patch(rt1.c2, rt1.c1))=(CAST('113362371' AS REAL)))) ORDER BY CAST(((rt1.c1) NOT NULL) AS INTEGER)  NULLS LAST, (((rt0.c2, rt1.c2, t0.c0))>((rt0.c1, t1.c0, rt0.c3))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_patch(rt1.c2, rt1.c1))==(CAST('113362371' AS REAL)))) IS TRUE)  as count FROM rt0, t0, t1, rt1 ORDER BY CAST(((rt1.c1) NOT NULL) AS INTEGER)  NULLS LAST, (((rt0.c2, rt1.c2, t0.c0))>((rt0.c1, t1.c0, rt0.c3))) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0, t0, t1, rt1 WHERE (((json_patch(rt1.c2, rt1.c1))=(CAST('113362371' AS REAL)))) ORDER BY CAST(((rt1.c1) NOT NULL) AS INTEGER)  NULLS LAST, (((rt0.c2, rt1.c2, t0.c0))>((rt0.c1, t1.c0, rt0.c3))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_patch(rt1.c2, rt1.c1))==(CAST('113362371' AS REAL)))) IS TRUE)  as count FROM rt0, t0, t1, rt1 ORDER BY CAST(((rt1.c1) NOT NULL) AS INTEGER)  NULLS LAST, (((rt0.c2, rt1.c2, t0.c0))>((rt0.c1, t1.c0, rt0.c3))) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0, t0, t1, rt1 WHERE (((json_patch(rt1.c2, rt1.c1))=(CAST('113362371' AS REAL)))) ORDER BY CAST(((rt1.c1) NOT NULL) AS INTEGER)  NULLS LAST, (((rt0.c2, rt1.c2, t0.c0))>((rt0.c1, t1.c0, rt0.c3))) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c2)>(rt0.c3))) AND (NULL))) ORDER BY ((((0.2865344000296314)AND(((rt0.c2)==(rt0.c3)))))OR((~ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c2)>(rt0.c3))) AND (NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((((0.2865344000296314)AND(((rt0.c2)==(rt0.c3)))))OR((~ (rt0.c2)))) DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c2)>(rt0.c3))) AND (NULL))) ORDER BY ((((0.2865344000296314)AND(((rt0.c2)==(rt0.c3)))))OR((~ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c2)>(rt0.c3))) AND (NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((((0.2865344000296314)AND(((rt0.c2)==(rt0.c3)))))OR((~ (rt0.c2)))) DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c2)>(rt0.c3))) AND (NULL))) ORDER BY ((((0.2865344000296314)AND(((rt0.c2)==(rt0.c3)))))OR((~ (rt0.c2)))) DESC;
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON CAST(CAST(v0.c2 AS BLOB) AS TEXT) WHERE ((((((v0.c2 IN (v0.c3)))AND((NOT (NULL)))))AND(-1145799547)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2 IN (v0.c3)))AND((NOT (NULL)))))AND(-1145799547))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON CAST(CAST(v0.c2 AS BLOB) AS TEXT));
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON CAST(CAST(v0.c2 AS BLOB) AS TEXT) WHERE ((((((v0.c2 IN (v0.c3)))AND((NOT (NULL)))))AND(-1145799547)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2 IN (v0.c3)))AND((NOT (NULL)))))AND(-1145799547))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON CAST(CAST(v0.c2 AS BLOB) AS TEXT));
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON CAST(CAST(v0.c2 AS BLOB) AS TEXT) WHERE ((((((v0.c2 IN (v0.c3)))AND((NOT (NULL)))))AND(-1145799547)));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((CASE x''  WHEN rt1.c3 THEN rt1.c2 WHEN x'' THEN rt1.c0 WHEN v0.c4 THEN v0.c3 END, ((v0.c1) NOTNULL), x''))=((((((rt1.c2)OR(rt0.c1)))AND(v0.c2)), IFNULL(DISTINCT rt1.c0, v0.c4), ((t0.c0)AND(v0.c0))))) INNER JOIN t0 ON rt1.c3 INNER JOIN rt1 ON ((rt1.c3 COLLATE RTRIM)IS(6.83296869E8)) WHERE ((((((((((('')AND(rt1.c3)))OR(t0.c0)))AND(rt1.c3)))AND(v0.c0)))==(v0.c4))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((((((((((('')AND(rt1.c3)))OR(t0.c0)))AND(rt1.c3)))AND(v0.c0)))==(v0.c4))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((CASE x''  WHEN rt1.c3 THEN rt1.c2 WHEN x'' THEN rt1.c0 WHEN v0.c4 THEN v0.c3 END, ((v0.c1) NOTNULL), x''))==((((((rt1.c2)OR(rt0.c1)))AND(v0.c2)), IFNULL(DISTINCT rt1.c0, v0.c4), ((t0.c0)AND(v0.c0))))) INNER JOIN t0 ON rt1.c3 INNER JOIN rt1 ON ((rt1.c3 COLLATE RTRIM)IS(6.83296869E8)) ORDER BY NULL ASC);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((CASE x''  WHEN rt1.c3 THEN rt1.c2 WHEN x'' THEN rt1.c0 WHEN v0.c4 THEN v0.c3 END, ((v0.c1) NOTNULL), x''))=((((((rt1.c2)OR(rt0.c1)))AND(v0.c2)), IFNULL(DISTINCT rt1.c0, v0.c4), ((t0.c0)AND(v0.c0))))) INNER JOIN t0 ON rt1.c3 INNER JOIN rt1 ON ((rt1.c3 COLLATE RTRIM)IS(6.83296869E8)) WHERE ((((((((((('')AND(rt1.c3)))OR(t0.c0)))AND(rt1.c3)))AND(v0.c0)))==(v0.c4))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((((((((((('')AND(rt1.c3)))OR(t0.c0)))AND(rt1.c3)))AND(v0.c0)))==(v0.c4))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((CASE x''  WHEN rt1.c3 THEN rt1.c2 WHEN x'' THEN rt1.c0 WHEN v0.c4 THEN v0.c3 END, ((v0.c1) NOTNULL), x''))==((((((rt1.c2)OR(rt0.c1)))AND(v0.c2)), IFNULL(DISTINCT rt1.c0, v0.c4), ((t0.c0)AND(v0.c0))))) INNER JOIN t0 ON rt1.c3 INNER JOIN rt1 ON ((rt1.c3 COLLATE RTRIM)IS(6.83296869E8)) ORDER BY NULL ASC);
SELECT COUNT(*) FROM t1 INDEXED BY i80, rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 INDEXED BY i80, rt0, rt1);
SELECT COUNT(*) FROM t1 INDEXED BY i80, rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 INDEXED BY i80, rt0, rt1);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON TRIM(DISTINCT (((v0.c1))=((v0.c0))), CAST(v0.c0 AS TEXT)) CROSS JOIN v0 ON ((QUOTE(v0.c1)) NOT BETWEEN (0.7172261126525996) AND (t0.c0)) WHERE ((+ ((- (v0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (v0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON TRIM(DISTINCT (((v0.c1))==((v0.c0))), CAST(v0.c0 AS TEXT)) CROSS JOIN v0 ON ((QUOTE(v0.c1)) NOT BETWEEN (0.7172261126525996) AND (t0.c0)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON TRIM(DISTINCT (((v0.c1))=((v0.c0))), CAST(v0.c0 AS TEXT)) CROSS JOIN v0 ON ((QUOTE(v0.c1)) NOT BETWEEN (0.7172261126525996) AND (t0.c0)) WHERE ((+ ((- (v0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (v0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON TRIM(DISTINCT (((v0.c1))==((v0.c0))), CAST(v0.c0 AS TEXT)) CROSS JOIN v0 ON ((QUOTE(v0.c1)) NOT BETWEEN (0.7172261126525996) AND (t0.c0)));
SELECT COUNT(*) FROM t1, v0, t0 RIGHT OUTER JOIN rt1 ON ((((((v0.c1)AND(rt0.c1)))AND(rt1.c2))) BETWEEN (CASE WHEN v0.c4 THEN rt1.c1 END) AND ((((t0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c0, rt1.c1)) AND ((rt1.c0, '-482651038', 0.8185797954489618))))) LEFT OUTER JOIN rt0 ON (- (0Xffffffffc8f481ee)) WHERE ((((((((((~ (rt1.c1)))OR(((((((((rt1.c1)OR(v0.c4)))AND(v0.c2)))AND(t0.c0)))OR(rt0.c3)))))OR(rt1.c0)))AND(((v0.c3) ISNULL))))AND(1.796935432E9))) ORDER BY (+ (rt1.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((~ (rt1.c1)))OR(((((((((rt1.c1)OR(v0.c4)))AND(v0.c2)))AND(t0.c0)))OR(rt0.c3)))))OR(rt1.c0)))AND(((v0.c3) ISNULL))))AND(1.796935432E9))) IS TRUE)  as count FROM t1, v0, t0 RIGHT OUTER JOIN rt1 ON ((((((v0.c1)AND(rt0.c1)))AND(rt1.c2))) BETWEEN (CASE WHEN v0.c4 THEN rt1.c1 END) AND ((((t0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c0, rt1.c1)) AND ((rt1.c0, '-482651038', 0.8185797954489618))))) LEFT OUTER JOIN rt0 ON (- (0xffffffffc8f481ee)) ORDER BY (+ (rt1.c2 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0, t0 RIGHT OUTER JOIN rt1 ON ((((((v0.c1)AND(rt0.c1)))AND(rt1.c2))) BETWEEN (CASE WHEN v0.c4 THEN rt1.c1 END) AND ((((t0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c0, rt1.c1)) AND ((rt1.c0, '-482651038', 0.8185797954489618))))) LEFT OUTER JOIN rt0 ON (- (0Xffffffffc8f481ee)) WHERE ((((((((((~ (rt1.c1)))OR(((((((((rt1.c1)OR(v0.c4)))AND(v0.c2)))AND(t0.c0)))OR(rt0.c3)))))OR(rt1.c0)))AND(((v0.c3) ISNULL))))AND(1.796935432E9))) ORDER BY (+ (rt1.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((~ (rt1.c1)))OR(((((((((rt1.c1)OR(v0.c4)))AND(v0.c2)))AND(t0.c0)))OR(rt0.c3)))))OR(rt1.c0)))AND(((v0.c3) ISNULL))))AND(1.796935432E9))) IS TRUE)  as count FROM t1, v0, t0 RIGHT OUTER JOIN rt1 ON ((((((v0.c1)AND(rt0.c1)))AND(rt1.c2))) BETWEEN (CASE WHEN v0.c4 THEN rt1.c1 END) AND ((((t0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c0, rt1.c1)) AND ((rt1.c0, '-482651038', 0.8185797954489618))))) LEFT OUTER JOIN rt0 ON (- (0xffffffffc8f481ee)) ORDER BY (+ (rt1.c2 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE ((v0.c1)+(v0.c3))  WHEN ((v0.c2)IS NOT(v0.c3)) THEN (~ (rt0.c3)) END) ORDER BY CASE WHEN ((v0.c3) BETWEEN (v0.c4) AND (v0.c0)) THEN ((x'') IS TRUE) WHEN 'oh' COLLATE RTRIM THEN (v0.c3 IN ()) WHEN ((rt0.c3)<=(rt0.c1)) THEN ((((v0.c4)AND(rt0.c0)))AND(v0.c4)) END, ((2.084041406E9) NOT BETWEEN (v0.c4) AND (v0.c3)) COLLATE RTRIM COLLATE BINARY ASC, (~ (1.05836174E8)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c1)+(v0.c3))  WHEN ((v0.c2)IS NOT(v0.c3)) THEN (~ (rt0.c3)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((v0.c3) BETWEEN (v0.c4) AND (v0.c0)) THEN ((x'') IS TRUE) WHEN 'oh' COLLATE RTRIM THEN (v0.c3 IN ()) WHEN ((rt0.c3)<=(rt0.c1)) THEN ((((v0.c4)AND(rt0.c0)))AND(v0.c4)) END, ((2.084041406E9) NOT BETWEEN (v0.c4) AND (v0.c3)) COLLATE RTRIM COLLATE BINARY ASC, (~ (1.05836174E8)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE ((v0.c1)+(v0.c3))  WHEN ((v0.c2)IS NOT(v0.c3)) THEN (~ (rt0.c3)) END) ORDER BY CASE WHEN ((v0.c3) BETWEEN (v0.c4) AND (v0.c0)) THEN ((x'') IS TRUE) WHEN 'oh' COLLATE RTRIM THEN (v0.c3 IN ()) WHEN ((rt0.c3)<=(rt0.c1)) THEN ((((v0.c4)AND(rt0.c0)))AND(v0.c4)) END, ((2.084041406E9) NOT BETWEEN (v0.c4) AND (v0.c3)) COLLATE RTRIM COLLATE BINARY ASC, (~ (1.05836174E8)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c1)+(v0.c3))  WHEN ((v0.c2)IS NOT(v0.c3)) THEN (~ (rt0.c3)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((v0.c3) BETWEEN (v0.c4) AND (v0.c0)) THEN ((x'') IS TRUE) WHEN 'oh' COLLATE RTRIM THEN (v0.c3 IN ()) WHEN ((rt0.c3)<=(rt0.c1)) THEN ((((v0.c4)AND(rt0.c0)))AND(v0.c4)) END, ((2.084041406E9) NOT BETWEEN (v0.c4) AND (v0.c3)) COLLATE RTRIM COLLATE BINARY ASC, (~ (1.05836174E8)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE ((v0.c1)+(v0.c3))  WHEN ((v0.c2)IS NOT(v0.c3)) THEN (~ (rt0.c3)) END) ORDER BY CASE WHEN ((v0.c3) BETWEEN (v0.c4) AND (v0.c0)) THEN ((x'') IS TRUE) WHEN 'oh' COLLATE RTRIM THEN (v0.c3 IN ()) WHEN ((rt0.c3)<=(rt0.c1)) THEN ((((v0.c4)AND(rt0.c0)))AND(v0.c4)) END, ((2.084041406E9) NOT BETWEEN (v0.c4) AND (v0.c3)) COLLATE RTRIM COLLATE BINARY ASC, (~ (1.05836174E8)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) NOTNULL))|(UNLIKELY(x'')))) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOTNULL))|(UNLIKELY(x'')))) IS TRUE)  as count FROM t1 ORDER BY ''  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) NOTNULL))|(UNLIKELY(x'')))) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOTNULL))|(UNLIKELY(x'')))) IS TRUE)  as count FROM t1 ORDER BY ''  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) NOTNULL))|(UNLIKELY(x'')))) ORDER BY ''  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 INNER JOIN v0 ON LIKELY((((v0.c4))==((rt0.c1)))) WHERE (((t0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0 INNER JOIN v0 ON LIKELY((((v0.c4))=((rt0.c1)))));
SELECT COUNT(*) FROM t0, rt0 INNER JOIN v0 ON LIKELY((((v0.c4))==((rt0.c1)))) WHERE (((t0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0 INNER JOIN v0 ON LIKELY((((v0.c4))=((rt0.c1)))));
SELECT COUNT(*) FROM t0, rt0 INNER JOIN v0 ON LIKELY((((v0.c4))==((rt0.c1)))) WHERE (((t0.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c3 COLLATE RTRIM)-(((0.938682683278613)/(rt1.c2))))) ORDER BY LOWER(DISTINCT (('-735673708')>=(rt1.c0)))  NULLS LAST, (~ (rt1.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE RTRIM)-(((0.938682683278613)/(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY LOWER(DISTINCT (('-735673708')>=(rt1.c0)))  NULLS LAST, (~ (rt1.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c3 COLLATE RTRIM)-(((0.938682683278613)/(rt1.c2))))) ORDER BY LOWER(DISTINCT (('-735673708')>=(rt1.c0)))  NULLS LAST, (~ (rt1.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE RTRIM)-(((0.938682683278613)/(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY LOWER(DISTINCT (('-735673708')>=(rt1.c0)))  NULLS LAST, (~ (rt1.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c3 COLLATE RTRIM)-(((0.938682683278613)/(rt1.c2))))) ORDER BY LOWER(DISTINCT (('-735673708')>=(rt1.c0)))  NULLS LAST, (~ (rt1.c0)) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c0)>(t1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)>(t1.c0))) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c0)>(t1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)>(t1.c0))) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c0)>(t1.c0))) NOTNULL));
SELECT ALL * FROM t0, t1, rt1, rt0 WHERE (LOWER(CAST(rt0.c0 AS BLOB))) ORDER BY CASE WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END THEN (rt0.c0 IN (rt1.c1)) WHEN (+ (NULL)) THEN x'' WHEN (rt0.c3 IN ()) THEN ((rt0.c0)&(rt1.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(CAST(rt0.c0 AS BLOB))) IS TRUE)  as count FROM t0, t1, rt1, rt0 ORDER BY CASE WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END THEN (rt0.c0 IN (rt1.c1)) WHEN (+ (NULL)) THEN x'' WHEN (rt0.c3 IN ()) THEN ((rt0.c0)&(rt1.c1)) END  NULLS FIRST);
SELECT ALL * FROM t0, t1, rt1, rt0 WHERE (LOWER(CAST(rt0.c0 AS BLOB))) ORDER BY CASE WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END THEN (rt0.c0 IN (rt1.c1)) WHEN (+ (NULL)) THEN x'' WHEN (rt0.c3 IN ()) THEN ((rt0.c0)&(rt1.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(CAST(rt0.c0 AS BLOB))) IS TRUE)  as count FROM t0, t1, rt1, rt0 ORDER BY CASE WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END THEN (rt0.c0 IN (rt1.c1)) WHEN (+ (NULL)) THEN x'' WHEN (rt0.c3 IN ()) THEN ((rt0.c0)&(rt1.c1)) END  NULLS FIRST);
SELECT ALL * FROM t0, t1, rt1, rt0 WHERE (LOWER(CAST(rt0.c0 AS BLOB))) ORDER BY CASE WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END THEN (rt0.c0 IN (rt1.c1)) WHEN (+ (NULL)) THEN x'' WHEN (rt0.c3 IN ()) THEN ((rt0.c0)&(rt1.c1)) END  NULLS FIRST;
SELECT ALL * FROM rt1, t1, rt0, v0 WHERE (((((((((CASE rt1.c2  WHEN v0.c1 THEN t1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN '401749977' THEN rt0.c2 END)OR(CAST(rt0.c1 AS NUMERIC))))AND(((v0.c3) NOT BETWEEN ('1233114729') AND (rt1.c2)))))OR(CAST(rt1.c3 AS REAL))))OR(((rt0.c2)/('0i䡥'))))) ORDER BY CAST((rt0.c2 IN ()) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt1.c2  WHEN v0.c1 THEN t1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN '401749977' THEN rt0.c2 END)OR(CAST(rt0.c1 AS NUMERIC))))AND(((v0.c3) NOT BETWEEN ('1233114729') AND (rt1.c2)))))OR(CAST(rt1.c3 AS REAL))))OR(((rt0.c2)/('0i䡥'))))) IS TRUE)  as count FROM rt1, t1, rt0, v0 ORDER BY CAST((rt0.c2 IN ()) AS INTEGER) ASC);
SELECT ALL * FROM rt1, t1, rt0, v0 WHERE (((((((((CASE rt1.c2  WHEN v0.c1 THEN t1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN '401749977' THEN rt0.c2 END)OR(CAST(rt0.c1 AS NUMERIC))))AND(((v0.c3) NOT BETWEEN ('1233114729') AND (rt1.c2)))))OR(CAST(rt1.c3 AS REAL))))OR(((rt0.c2)/('0i䡥'))))) ORDER BY CAST((rt0.c2 IN ()) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt1.c2  WHEN v0.c1 THEN t1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN '401749977' THEN rt0.c2 END)OR(CAST(rt0.c1 AS NUMERIC))))AND(((v0.c3) NOT BETWEEN ('1233114729') AND (rt1.c2)))))OR(CAST(rt1.c3 AS REAL))))OR(((rt0.c2)/('0i䡥'))))) IS TRUE)  as count FROM rt1, t1, rt0, v0 ORDER BY CAST((rt0.c2 IN ()) AS INTEGER) ASC);
SELECT ALL * FROM rt1, t1, rt0, v0 WHERE (((((((((CASE rt1.c2  WHEN v0.c1 THEN t1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN '401749977' THEN rt0.c2 END)OR(CAST(rt0.c1 AS NUMERIC))))AND(((v0.c3) NOT BETWEEN ('1233114729') AND (rt1.c2)))))OR(CAST(rt1.c3 AS REAL))))OR(((rt0.c2)/('0i䡥'))))) ORDER BY CAST((rt0.c2 IN ()) AS INTEGER) ASC;
SELECT ALL * FROM rt1 WHERE (((rt1.c3) BETWEEN (json_object(rt1.c2, rt1.c0)) AND (((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3) BETWEEN (json_object(rt1.c2, rt1.c0)) AND (((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c3) BETWEEN (json_object(rt1.c2, rt1.c0)) AND (((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3) BETWEEN (json_object(rt1.c2, rt1.c0)) AND (((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c3) BETWEEN (json_object(rt1.c2, rt1.c0)) AND (((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (((rt0.c2)*(rt0.c1))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (((rt0.c2)*(rt0.c1))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (((rt0.c2)*(rt0.c1))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (((rt0.c2)*(rt0.c1))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (((rt0.c2)*(rt0.c1))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT * FROM rt1, rt0, v0 WHERE ((((((v0.c1))>=((v0.c3)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1))>=((v0.c3)))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE ((((((v0.c1))>=((v0.c3)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1))>=((v0.c3)))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE ((((((v0.c1))>=((v0.c3)))) IS TRUE));
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((t0.c0 IN ()) AS REAL)) ORDER BY CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((t0.c0 IN ()) AS REAL)) ORDER BY CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((t0.c0 IN ()) AS REAL)) ORDER BY CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((CASE rt0.c1  WHEN rt1.c2 THEN v0.c0 WHEN t1.c0 THEN 0x1ab4f4b7 WHEN v0.c0 THEN v0.c4 END, CASE v0.c2  WHEN v0.c1 THEN v0.c1 END, (v0.c1 IN ())))<=((0.7311465214099747, rt1.c1, ((((((((rt0.c1)OR(rt0.c1)))AND(rt1.c1)))OR(rt0.c0)))OR(v0.c3))))) RIGHT OUTER JOIN t1 ON (((CASE WHEN rt1.c2 THEN rt0.c3 END))==((((rt1.c1) NOT NULL)))) CROSS JOIN rt1 ON (((((((NULL)) BETWEEN ((rt0.c1)) AND ((0.006687886465657877))))OR(((rt1.c1)<>(v0.c0)))))OR((v0.c2 IN (rt0.c2)))) WHERE ((NOT (CAST(t1.c0 AS BLOB)))) ORDER BY (((rt0.c2 IN ()))-(((v0.c4) ISNULL))) DESC, ((('-815851096' COLLATE RTRIM))>((((v0.c3) NOT BETWEEN (v0.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((CASE rt0.c1  WHEN rt1.c2 THEN v0.c0 WHEN t1.c0 THEN 0x1ab4f4b7 WHEN v0.c0 THEN v0.c4 END, CASE v0.c2  WHEN v0.c1 THEN v0.c1 END, (v0.c1 IN ())))<=((0.7311465214099747, rt1.c1, ((((((((rt0.c1)OR(rt0.c1)))AND(rt1.c1)))OR(rt0.c0)))OR(v0.c3))))) RIGHT OUTER JOIN t1 ON (((CASE WHEN rt1.c2 THEN rt0.c3 END))==((((rt1.c1) NOT NULL)))) CROSS JOIN rt1 ON (((((((NULL)) BETWEEN ((rt0.c1)) AND ((0.006687886465657877))))OR(((rt1.c1)<>(v0.c0)))))OR((v0.c2 IN (rt0.c2)))) ORDER BY (((rt0.c2 IN ()))-(((v0.c4) ISNULL))) DESC, ((('-815851096' COLLATE RTRIM))>((((v0.c3) NOT BETWEEN (v0.c0) AND (rt1.c0))))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((CASE rt0.c1  WHEN rt1.c2 THEN v0.c0 WHEN t1.c0 THEN 0x1ab4f4b7 WHEN v0.c0 THEN v0.c4 END, CASE v0.c2  WHEN v0.c1 THEN v0.c1 END, (v0.c1 IN ())))<=((0.7311465214099747, rt1.c1, ((((((((rt0.c1)OR(rt0.c1)))AND(rt1.c1)))OR(rt0.c0)))OR(v0.c3))))) RIGHT OUTER JOIN t1 ON (((CASE WHEN rt1.c2 THEN rt0.c3 END))==((((rt1.c1) NOT NULL)))) CROSS JOIN rt1 ON (((((((NULL)) BETWEEN ((rt0.c1)) AND ((0.006687886465657877))))OR(((rt1.c1)<>(v0.c0)))))OR((v0.c2 IN (rt0.c2)))) WHERE ((NOT (CAST(t1.c0 AS BLOB)))) ORDER BY (((rt0.c2 IN ()))-(((v0.c4) ISNULL))) DESC, ((('-815851096' COLLATE RTRIM))>((((v0.c3) NOT BETWEEN (v0.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((CASE rt0.c1  WHEN rt1.c2 THEN v0.c0 WHEN t1.c0 THEN 0x1ab4f4b7 WHEN v0.c0 THEN v0.c4 END, CASE v0.c2  WHEN v0.c1 THEN v0.c1 END, (v0.c1 IN ())))<=((0.7311465214099747, rt1.c1, ((((((((rt0.c1)OR(rt0.c1)))AND(rt1.c1)))OR(rt0.c0)))OR(v0.c3))))) RIGHT OUTER JOIN t1 ON (((CASE WHEN rt1.c2 THEN rt0.c3 END))==((((rt1.c1) NOT NULL)))) CROSS JOIN rt1 ON (((((((NULL)) BETWEEN ((rt0.c1)) AND ((0.006687886465657877))))OR(((rt1.c1)<>(v0.c0)))))OR((v0.c2 IN (rt0.c2)))) ORDER BY (((rt0.c2 IN ()))-(((v0.c4) ISNULL))) DESC, ((('-815851096' COLLATE RTRIM))>((((v0.c3) NOT BETWEEN (v0.c0) AND (rt1.c0))))));
SELECT COUNT(*) FROM t1 WHERE ((NOT (t1.c0)) COLLATE BINARY) ORDER BY (((((x'', t1.c0, t1.c0))<>((t1.c0, x'', t1.c0)))) NOT BETWEEN (((t1.c0)=(t1.c0))) AND ((t1.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY (((((x'', t1.c0, t1.c0))<>((t1.c0, x'', t1.c0)))) NOT BETWEEN (((t1.c0)==(t1.c0))) AND ((t1.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((NOT (t1.c0)) COLLATE BINARY) ORDER BY (((((x'', t1.c0, t1.c0))<>((t1.c0, x'', t1.c0)))) NOT BETWEEN (((t1.c0)=(t1.c0))) AND ((t1.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY (((((x'', t1.c0, t1.c0))<>((t1.c0, x'', t1.c0)))) NOT BETWEEN (((t1.c0)==(t1.c0))) AND ((t1.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((NOT (t1.c0)) COLLATE BINARY) ORDER BY (((((x'', t1.c0, t1.c0))<>((t1.c0, x'', t1.c0)))) NOT BETWEEN (((t1.c0)=(t1.c0))) AND ((t1.c0 IN ()))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, t0, v0, rt0 WHERE ((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c3)) IN (CAST(v0.c3 AS NUMERIC), ((((v0.c1)OR(v0.c0)))AND(rt0.c2))))) ORDER BY ((v0.c3) BETWEEN (v0.c1) AND (t1.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c3)) IN (CAST(v0.c3 AS NUMERIC), ((((v0.c1)OR(v0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM t1, t0, v0, rt0 ORDER BY ((v0.c3) BETWEEN (v0.c1) AND (t1.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM t1, t0, v0, rt0 WHERE ((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c3)) IN (CAST(v0.c3 AS NUMERIC), ((((v0.c1)OR(v0.c0)))AND(rt0.c2))))) ORDER BY ((v0.c3) BETWEEN (v0.c1) AND (t1.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c3)) IN (CAST(v0.c3 AS NUMERIC), ((((v0.c1)OR(v0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM t1, t0, v0, rt0 ORDER BY ((v0.c3) BETWEEN (v0.c1) AND (t1.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM t1, t0, v0, rt0 WHERE ((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c3)) IN (CAST(v0.c3 AS NUMERIC), ((((v0.c1)OR(v0.c0)))AND(rt0.c2))))) ORDER BY ((v0.c3) BETWEEN (v0.c1) AND (t1.c0)) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((NOT (((rt0.c1) ISNULL)))) ORDER BY ((NOT (rt0.c2)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((NOT (rt0.c2)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((NOT (((rt0.c1) ISNULL)))) ORDER BY ((NOT (rt0.c2)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((NOT (rt0.c2)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((NOT (((rt0.c1) ISNULL)))) ORDER BY ((NOT (rt0.c2)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, t0, t1 WHERE ((((~ (rt1.c1))) NOT BETWEEN (((((t1.c0)OR(rt1.c1)))AND(rt1.c3))) AND (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c1))) NOT BETWEEN (((((t1.c0)OR(rt1.c1)))AND(rt1.c3))) AND (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, t0, t1);
SELECT COUNT(*) FROM rt1, t0, t1 WHERE ((((~ (rt1.c1))) NOT BETWEEN (((((t1.c0)OR(rt1.c1)))AND(rt1.c3))) AND (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c1))) NOT BETWEEN (((((t1.c0)OR(rt1.c1)))AND(rt1.c3))) AND (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, t0, t1);
SELECT COUNT(*) FROM rt1, t0, t1 WHERE ((((~ (rt1.c1))) NOT BETWEEN (((((t1.c0)OR(rt1.c1)))AND(rt1.c3))) AND (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT COUNT(*) FROM t1, v0, t0 CROSS JOIN rt1 ON ((((((t1.c0)OR(rt0.c2)))AND(v0.c3))) NOTNULL) CROSS JOIN rt0 ON LIKELY(CASE rt1.c1  WHEN rt1.c3 THEN rt0.c3 ELSE v0.c2 END) WHERE (((CASE rt1.c1  WHEN rt0.c3 THEN v0.c4 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c3 END)*(((rt0.c0)>=(rt1.c3))))) ORDER BY (((((t1.c0))<=((v0.c3)))) IS FALSE) DESC, (+ (((v0.c4)>=(-625358911))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN rt0.c3 THEN v0.c4 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c3 END)*(((rt0.c0)>=(rt1.c3))))) IS TRUE)  as count FROM t1, v0, t0 CROSS JOIN rt1 ON ((((((t1.c0)OR(rt0.c2)))AND(v0.c3))) NOTNULL) CROSS JOIN rt0 ON LIKELY(CASE rt1.c1  WHEN rt1.c3 THEN rt0.c3 ELSE v0.c2 END) ORDER BY (((((t1.c0))<=((v0.c3)))) IS FALSE) DESC, (+ (((v0.c4)>=(-625358911))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0, t0 CROSS JOIN rt1 ON ((((((t1.c0)OR(rt0.c2)))AND(v0.c3))) NOTNULL) CROSS JOIN rt0 ON LIKELY(CASE rt1.c1  WHEN rt1.c3 THEN rt0.c3 ELSE v0.c2 END) WHERE (((CASE rt1.c1  WHEN rt0.c3 THEN v0.c4 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c3 END)*(((rt0.c0)>=(rt1.c3))))) ORDER BY (((((t1.c0))<=((v0.c3)))) IS FALSE) DESC, (+ (((v0.c4)>=(-625358911))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN rt0.c3 THEN v0.c4 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c3 END)*(((rt0.c0)>=(rt1.c3))))) IS TRUE)  as count FROM t1, v0, t0 CROSS JOIN rt1 ON ((((((t1.c0)OR(rt0.c2)))AND(v0.c3))) NOTNULL) CROSS JOIN rt0 ON LIKELY(CASE rt1.c1  WHEN rt1.c3 THEN rt0.c3 ELSE v0.c2 END) ORDER BY (((((t1.c0))<=((v0.c3)))) IS FALSE) DESC, (+ (((v0.c4)>=(-625358911))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0, t0 CROSS JOIN rt1 ON ((((((t1.c0)OR(rt0.c2)))AND(v0.c3))) NOTNULL) CROSS JOIN rt0 ON LIKELY(CASE rt1.c1  WHEN rt1.c3 THEN rt0.c3 ELSE v0.c2 END) WHERE (((CASE rt1.c1  WHEN rt0.c3 THEN v0.c4 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c3 END)*(((rt0.c0)>=(rt1.c3))))) ORDER BY (((((t1.c0))<=((v0.c3)))) IS FALSE) DESC, (+ (((v0.c4)>=(-625358911))))  NULLS FIRST;
SELECT ALL * FROM v0, t0, rt0, rt1, t1 WHERE (CASE WHEN rt1.c1 THEN CAST(v0.c2 AS TEXT) ELSE ((rt0.c2)>=(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c1 THEN CAST(v0.c2 AS TEXT) ELSE ((rt0.c2)>=(t1.c0)) END) IS TRUE)  as count FROM v0, t0, rt0, rt1, t1);
SELECT ALL * FROM v0, t0, rt0, rt1, t1 WHERE (CASE WHEN rt1.c1 THEN CAST(v0.c2 AS TEXT) ELSE ((rt0.c2)>=(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c1 THEN CAST(v0.c2 AS TEXT) ELSE ((rt0.c2)>=(t1.c0)) END) IS TRUE)  as count FROM v0, t0, rt0, rt1, t1);
SELECT ALL * FROM v0, t0, rt0, rt1, t1 WHERE (CASE WHEN rt1.c1 THEN CAST(v0.c2 AS TEXT) ELSE ((rt0.c2)>=(t1.c0)) END);
SELECT ALL * FROM t0, t1, v0, rt1, rt0 WHERE ((((CAST(rt0.c0 AS INTEGER)))<>(((((('')OR(t0.c0)))AND(rt1.c2)))))) ORDER BY CAST(((557381475)GLOB(v0.c4)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS INTEGER)))<>(((((('')OR(t0.c0)))AND(rt1.c2)))))) IS TRUE)  as count FROM t0, t1, v0, rt1, rt0 ORDER BY CAST(((557381475)GLOB(v0.c4)) AS INTEGER) ASC);
SELECT ALL * FROM t0, t1, v0, rt1, rt0 WHERE ((((CAST(rt0.c0 AS INTEGER)))<>(((((('')OR(t0.c0)))AND(rt1.c2)))))) ORDER BY CAST(((557381475)GLOB(v0.c4)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS INTEGER)))<>(((((('')OR(t0.c0)))AND(rt1.c2)))))) IS TRUE)  as count FROM t0, t1, v0, rt1, rt0 ORDER BY CAST(((557381475)GLOB(v0.c4)) AS INTEGER) ASC);
SELECT ALL * FROM t0, t1, v0, rt1, rt0 WHERE ((((CAST(rt0.c0 AS INTEGER)))<>(((((('')OR(t0.c0)))AND(rt1.c2)))))) ORDER BY CAST(((557381475)GLOB(v0.c4)) AS INTEGER) ASC;
SELECT ALL * FROM t1, t0 CROSS JOIN rt1 ON (~ ((NOT (t1.c0)))) WHERE (((CAST(t0.c0 AS REAL)) NOT NULL)) ORDER BY ((CHAR(t1.c0)) IS TRUE) DESC, (((((rt1.c1)+(rt1.c0)), (rt1.c1 IN (rt1.c0)), ((rt1.c3)<<(rt1.c2))))>=((LIKELY(DISTINCT rt1.c1), CAST(rt1.c2 AS TEXT), CAST(rt1.c2 AS BLOB)))) ASC  NULLS LAST, ((((t1.c0)>>(t1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM t1, t0 CROSS JOIN rt1 ON (~ ((NOT (t1.c0)))) ORDER BY ((CHAR(t1.c0)) IS TRUE) DESC, (((((rt1.c1)+(rt1.c0)), (rt1.c1 IN (rt1.c0)), ((rt1.c3)<<(rt1.c2))))>=((LIKELY(DISTINCT rt1.c1), CAST(rt1.c2 AS TEXT), CAST(rt1.c2 AS BLOB)))) ASC  NULLS LAST, ((((t1.c0)>>(t1.c0))) IS TRUE) ASC);
SELECT ALL * FROM t1, t0 CROSS JOIN rt1 ON (~ ((NOT (t1.c0)))) WHERE (((CAST(t0.c0 AS REAL)) NOT NULL)) ORDER BY ((CHAR(t1.c0)) IS TRUE) DESC, (((((rt1.c1)+(rt1.c0)), (rt1.c1 IN (rt1.c0)), ((rt1.c3)<<(rt1.c2))))>=((LIKELY(DISTINCT rt1.c1), CAST(rt1.c2 AS TEXT), CAST(rt1.c2 AS BLOB)))) ASC  NULLS LAST, ((((t1.c0)>>(t1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM t1, t0 CROSS JOIN rt1 ON (~ ((NOT (t1.c0)))) ORDER BY ((CHAR(t1.c0)) IS TRUE) DESC, (((((rt1.c1)+(rt1.c0)), (rt1.c1 IN (rt1.c0)), ((rt1.c3)<<(rt1.c2))))>=((LIKELY(DISTINCT rt1.c1), CAST(rt1.c2 AS TEXT), CAST(rt1.c2 AS BLOB)))) ASC  NULLS LAST, ((((t1.c0)>>(t1.c0))) IS TRUE) ASC);
SELECT ALL * FROM t1, t0 CROSS JOIN rt1 ON (~ ((NOT (t1.c0)))) WHERE (((CAST(t0.c0 AS REAL)) NOT NULL)) ORDER BY ((CHAR(t1.c0)) IS TRUE) DESC, (((((rt1.c1)+(rt1.c0)), (rt1.c1 IN (rt1.c0)), ((rt1.c3)<<(rt1.c2))))>=((LIKELY(DISTINCT rt1.c1), CAST(rt1.c2 AS TEXT), CAST(rt1.c2 AS BLOB)))) ASC  NULLS LAST, ((((t1.c0)>>(t1.c0))) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE ((((NULL))!=((rt0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((NULL))<>((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE ((((NULL))!=((rt0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((NULL))<>((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE ((((NULL))!=((rt0.c2 COLLATE RTRIM))));
SELECT ALL * FROM rt0, rt1, t1, t0, v0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0, rt1, t1, t0, v0);
SELECT ALL * FROM rt0, rt1, t1, t0, v0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0, rt1, t1, t0, v0);
SELECT ALL * FROM rt0, rt1, t1, t0, v0 WHERE (rt1.c3);
SELECT COUNT(*) FROM rt1, rt0 FULL OUTER JOIN t1 ON CAST(v0.c4 COLLATE BINARY AS REAL) CROSS JOIN v0 ON rt1.c0 COLLATE NOCASE WHERE ((~ ((v0.c2 IN ())))) ORDER BY (((((x'')) NOT BETWEEN ((v0.c4)) AND ((rt0.c3))))>>(((rt1.c1)!=(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((v0.c2 IN ())))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN t1 ON CAST(v0.c4 COLLATE BINARY AS REAL) CROSS JOIN v0 ON rt1.c0 COLLATE NOCASE ORDER BY (((((x'')) NOT BETWEEN ((v0.c4)) AND ((rt0.c3))))>>(((rt1.c1)<>(rt0.c3))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 FULL OUTER JOIN t1 ON CAST(v0.c4 COLLATE BINARY AS REAL) CROSS JOIN v0 ON rt1.c0 COLLATE NOCASE WHERE ((~ ((v0.c2 IN ())))) ORDER BY (((((x'')) NOT BETWEEN ((v0.c4)) AND ((rt0.c3))))>>(((rt1.c1)!=(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((v0.c2 IN ())))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN t1 ON CAST(v0.c4 COLLATE BINARY AS REAL) CROSS JOIN v0 ON rt1.c0 COLLATE NOCASE ORDER BY (((((x'')) NOT BETWEEN ((v0.c4)) AND ((rt0.c3))))>>(((rt1.c1)<>(rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3) IS FALSE))AND((rt0.c1 IN ()))))AND((rt0.c2 IN ())))) ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((((((((x'3514')OR('')))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3) IS FALSE))AND((rt0.c1 IN ()))))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((((((((x'3514')OR('')))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3) IS FALSE))AND((rt0.c1 IN ()))))AND((rt0.c2 IN ())))) ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((((((((x'3514')OR('')))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3) IS FALSE))AND((rt0.c1 IN ()))))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((((((((x'3514')OR('')))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3) IS FALSE))AND((rt0.c1 IN ()))))AND((rt0.c2 IN ())))) ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((((((((x'3514')OR('')))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c1))));
SELECT * FROM t1 WHERE (UPPER(((t1.c0)<<(t1.c0)))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ((UPPER(((t1.c0)<<(t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY t1.c0);
SELECT * FROM t1 WHERE (UPPER(((t1.c0)<<(t1.c0)))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ((UPPER(((t1.c0)<<(t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY t1.c0);
SELECT * FROM t1 WHERE (UPPER(((t1.c0)<<(t1.c0)))) ORDER BY t1.c0;
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN t1 ON (+ (1441845482)) RIGHT OUTER JOIN rt1 ON 0.7591143333875484 LEFT OUTER JOIN v0 ON ((((rt1.c3) ISNULL))<=((- (rt1.c1)))) WHERE (((((((v0.c3)AND(rt1.c3)))OR(rt1.c0)))&(rt0.c2 COLLATE BINARY))) ORDER BY x'4298b05e' ASC, (((((NOT (0xfffffffff13e7834)))AND(((t0.c0) IS FALSE))))OR(CAST(rt1.c1 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c3)AND(rt1.c3)))OR(rt1.c0)))&(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN t1 ON (+ (1441845482)) RIGHT OUTER JOIN rt1 ON 0.7591143333875484 LEFT OUTER JOIN v0 ON ((((rt1.c3) ISNULL))<=((- (rt1.c1)))) ORDER BY x'4298b05e' ASC, (((((NOT (0Xfffffffff13e7834)))AND(((t0.c0) IS FALSE))))OR(CAST(rt1.c1 AS BLOB))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN t1 ON (+ (1441845482)) RIGHT OUTER JOIN rt1 ON 0.7591143333875484 LEFT OUTER JOIN v0 ON ((((rt1.c3) ISNULL))<=((- (rt1.c1)))) WHERE (((((((v0.c3)AND(rt1.c3)))OR(rt1.c0)))&(rt0.c2 COLLATE BINARY))) ORDER BY x'4298b05e' ASC, (((((NOT (0xfffffffff13e7834)))AND(((t0.c0) IS FALSE))))OR(CAST(rt1.c1 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c3)AND(rt1.c3)))OR(rt1.c0)))&(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN t1 ON (+ (1441845482)) RIGHT OUTER JOIN rt1 ON 0.7591143333875484 LEFT OUTER JOIN v0 ON ((((rt1.c3) ISNULL))<=((- (rt1.c1)))) ORDER BY x'4298b05e' ASC, (((((NOT (0Xfffffffff13e7834)))AND(((t0.c0) IS FALSE))))OR(CAST(rt1.c1 AS BLOB))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN t1 ON (+ (1441845482)) RIGHT OUTER JOIN rt1 ON 0.7591143333875484 LEFT OUTER JOIN v0 ON ((((rt1.c3) ISNULL))<=((- (rt1.c1)))) WHERE (((((((v0.c3)AND(rt1.c3)))OR(rt1.c0)))&(rt0.c2 COLLATE BINARY))) ORDER BY x'4298b05e' ASC, (((((NOT (0xfffffffff13e7834)))AND(((t0.c0) IS FALSE))))OR(CAST(rt1.c1 AS BLOB))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0, t1, rt1 WHERE (((((rt1.c1) ISNULL))&((rt0.c1 IN ())))) ORDER BY NULL ASC, (((((((((((t0.c0, x'', rt1.c2)) BETWEEN ((0.9507850608827494, rt0.c1, rt1.c0)) AND ((rt1.c3, 0.19347482014085726, rt1.c0))))AND(((t0.c0) ISNULL))))OR(((-5.1395893E8) BETWEEN (t1.c0) AND (rt0.c3)))))AND(t0.c0 COLLATE NOCASE)))OR(((rt1.c1) BETWEEN (rt1.c2) AND (x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) ISNULL))&((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, t1, rt1 ORDER BY NULL ASC, (((((((((((t0.c0, x'', rt1.c2)) BETWEEN ((0.9507850608827494, rt0.c1, rt1.c0)) AND ((rt1.c3, 0.19347482014085726, rt1.c0))))AND(((t0.c0) ISNULL))))OR(((-5.1395893E8) BETWEEN (t1.c0) AND (rt0.c3)))))AND(t0.c0 COLLATE NOCASE)))OR(((rt1.c1) BETWEEN (rt1.c2) AND (x''))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, t1, rt1 WHERE (((((rt1.c1) ISNULL))&((rt0.c1 IN ())))) ORDER BY NULL ASC, (((((((((((t0.c0, x'', rt1.c2)) BETWEEN ((0.9507850608827494, rt0.c1, rt1.c0)) AND ((rt1.c3, 0.19347482014085726, rt1.c0))))AND(((t0.c0) ISNULL))))OR(((-5.1395893E8) BETWEEN (t1.c0) AND (rt0.c3)))))AND(t0.c0 COLLATE NOCASE)))OR(((rt1.c1) BETWEEN (rt1.c2) AND (x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) ISNULL))&((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, t1, rt1 ORDER BY NULL ASC, (((((((((((t0.c0, x'', rt1.c2)) BETWEEN ((0.9507850608827494, rt0.c1, rt1.c0)) AND ((rt1.c3, 0.19347482014085726, rt1.c0))))AND(((t0.c0) ISNULL))))OR(((-5.1395893E8) BETWEEN (t1.c0) AND (rt0.c3)))))AND(t0.c0 COLLATE NOCASE)))OR(((rt1.c1) BETWEEN (rt1.c2) AND (x''))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, t1, rt1 WHERE (((((rt1.c1) ISNULL))&((rt0.c1 IN ())))) ORDER BY NULL ASC, (((((((((((t0.c0, x'', rt1.c2)) BETWEEN ((0.9507850608827494, rt0.c1, rt1.c0)) AND ((rt1.c3, 0.19347482014085726, rt1.c0))))AND(((t0.c0) ISNULL))))OR(((-5.1395893E8) BETWEEN (t1.c0) AND (rt0.c3)))))AND(t0.c0 COLLATE NOCASE)))OR(((rt1.c1) BETWEEN (rt1.c2) AND (x''))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE (((((((((CASE WHEN v0.c2 THEN x'922f' WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c1 END)OR((((v0.c2, v0.c4, v0.c3)) NOT BETWEEN ((x'', v0.c0, v0.c4)) AND ((v0.c2, v0.c1, t0.c0))))))OR(((v0.c2)<<(v0.c3)))))OR(DATE(v0.c4, v0.c0, v0.c0))))OR((((v0.c3, v0.c4, v0.c3)) NOT BETWEEN ((v0.c2, t0.c0, v0.c0)) AND ((t0.c0, v0.c4, v0.c1)))))) ORDER BY (('H%cP Aye')&(CASE v0.c1  WHEN v0.c2 THEN v0.c3 END)) DESC, CASE WHEN t0.c0 COLLATE BINARY THEN (((v0.c3)) NOT BETWEEN ((v0.c4)) AND ((9.78225142E8))) ELSE '2045379553' END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN v0.c2 THEN x'922f' WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c1 END)OR((((v0.c2, v0.c4, v0.c3)) NOT BETWEEN ((x'', v0.c0, v0.c4)) AND ((v0.c2, v0.c1, t0.c0))))))OR(((v0.c2)<<(v0.c3)))))OR(DATE(v0.c4, v0.c0, v0.c0))))OR((((v0.c3, v0.c4, v0.c3)) NOT BETWEEN ((v0.c2, t0.c0, v0.c0)) AND ((t0.c0, v0.c4, v0.c1)))))) IS TRUE)  as count FROM t0, v0 ORDER BY (('H%cP Aye')&(CASE v0.c1  WHEN v0.c2 THEN v0.c3 END)) DESC, CASE WHEN t0.c0 COLLATE BINARY THEN (((v0.c3)) NOT BETWEEN ((v0.c4)) AND ((9.78225142E8))) ELSE '2045379553' END ASC);
SELECT COUNT(*) FROM t0, v0 WHERE (((((((((CASE WHEN v0.c2 THEN x'922f' WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c1 END)OR((((v0.c2, v0.c4, v0.c3)) NOT BETWEEN ((x'', v0.c0, v0.c4)) AND ((v0.c2, v0.c1, t0.c0))))))OR(((v0.c2)<<(v0.c3)))))OR(DATE(v0.c4, v0.c0, v0.c0))))OR((((v0.c3, v0.c4, v0.c3)) NOT BETWEEN ((v0.c2, t0.c0, v0.c0)) AND ((t0.c0, v0.c4, v0.c1)))))) ORDER BY (('H%cP Aye')&(CASE v0.c1  WHEN v0.c2 THEN v0.c3 END)) DESC, CASE WHEN t0.c0 COLLATE BINARY THEN (((v0.c3)) NOT BETWEEN ((v0.c4)) AND ((9.78225142E8))) ELSE '2045379553' END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN v0.c2 THEN x'922f' WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c1 END)OR((((v0.c2, v0.c4, v0.c3)) NOT BETWEEN ((x'', v0.c0, v0.c4)) AND ((v0.c2, v0.c1, t0.c0))))))OR(((v0.c2)<<(v0.c3)))))OR(DATE(v0.c4, v0.c0, v0.c0))))OR((((v0.c3, v0.c4, v0.c3)) NOT BETWEEN ((v0.c2, t0.c0, v0.c0)) AND ((t0.c0, v0.c4, v0.c1)))))) IS TRUE)  as count FROM t0, v0 ORDER BY (('H%cP Aye')&(CASE v0.c1  WHEN v0.c2 THEN v0.c3 END)) DESC, CASE WHEN t0.c0 COLLATE BINARY THEN (((v0.c3)) NOT BETWEEN ((v0.c4)) AND ((9.78225142E8))) ELSE '2045379553' END ASC);
SELECT COUNT(*) FROM t0, v0 WHERE (((((((((CASE WHEN v0.c2 THEN x'922f' WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c1 END)OR((((v0.c2, v0.c4, v0.c3)) NOT BETWEEN ((x'', v0.c0, v0.c4)) AND ((v0.c2, v0.c1, t0.c0))))))OR(((v0.c2)<<(v0.c3)))))OR(DATE(v0.c4, v0.c0, v0.c0))))OR((((v0.c3, v0.c4, v0.c3)) NOT BETWEEN ((v0.c2, t0.c0, v0.c0)) AND ((t0.c0, v0.c4, v0.c1)))))) ORDER BY (('H%cP Aye')&(CASE v0.c1  WHEN v0.c2 THEN v0.c3 END)) DESC, CASE WHEN t0.c0 COLLATE BINARY THEN (((v0.c3)) NOT BETWEEN ((v0.c4)) AND ((9.78225142E8))) ELSE '2045379553' END ASC;
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN t0 ON v0.c0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))!=((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))<>((~ (t0.c0))))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN t0 ON v0.c0);
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN t0 ON v0.c0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))!=((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))<>((~ (t0.c0))))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN t0 ON v0.c0);
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN t0 ON v0.c0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))!=((~ (t0.c0)))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt0 ON TRIM(DISTINCT rt0.c0, rt0.c1) COLLATE RTRIM WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON TRIM(DISTINCT rt0.c0, rt0.c1) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt0 ON TRIM(DISTINCT rt0.c0, rt0.c1) COLLATE RTRIM WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON TRIM(DISTINCT rt0.c0, rt0.c1) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt0 ON TRIM(DISTINCT rt0.c0, rt0.c1) COLLATE RTRIM WHERE (x'');
SELECT ALL * FROM rt0 NOT INDEXED, t1, t0 WHERE (CASE WHEN UNLIKELY(DISTINCT rt0.c2) THEN CAST(rt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UNLIKELY(DISTINCT rt0.c2) THEN CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL * FROM rt0 NOT INDEXED, t1, t0 WHERE (CASE WHEN UNLIKELY(DISTINCT rt0.c2) THEN CAST(rt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UNLIKELY(DISTINCT rt0.c2) THEN CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0, t1, t0);
SELECT ALL * FROM rt0 NOT INDEXED, t1, t0 WHERE (CASE WHEN UNLIKELY(DISTINCT rt0.c2) THEN CAST(rt0.c1 AS REAL) END);
SELECT ALL * FROM rt0, rt1, v0, t0 NOT INDEXED, t1 WHERE (((((v0.c1) NOTNULL)) BETWEEN (((v0.c2) NOT NULL)) AND (((rt0.c3)IS NOT(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOTNULL)) BETWEEN (((v0.c2) NOT NULL)) AND (((rt0.c3)IS NOT(rt0.c3))))) IS TRUE)  as count FROM rt0, rt1, v0, t0, t1);
SELECT ALL * FROM rt0, rt1, v0, t0 NOT INDEXED, t1 WHERE (((((v0.c1) NOTNULL)) BETWEEN (((v0.c2) NOT NULL)) AND (((rt0.c3)IS NOT(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOTNULL)) BETWEEN (((v0.c2) NOT NULL)) AND (((rt0.c3)IS NOT(rt0.c3))))) IS TRUE)  as count FROM rt0, rt1, v0, t0, t1);
SELECT ALL * FROM rt0, rt1, v0, t0 NOT INDEXED, t1 WHERE (((((v0.c1) NOTNULL)) BETWEEN (((v0.c2) NOT NULL)) AND (((rt0.c3)IS NOT(rt0.c3)))));
SELECT * FROM rt0, t1, rt1 WHERE (CASE WHEN ('[xFDBj' IN ()) THEN (((rt1.c3))<((NULL))) WHEN UPPER(rt0.c0) THEN CASE 0Xfffffffffc112330  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c3 THEN NULL ELSE rt1.c0 END WHEN (((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) THEN (rt1.c3 IN ()) WHEN CAST(rt1.c3 AS REAL) THEN ABS(t1.c0) WHEN ((((rt0.c2)OR(rt0.c0)))OR(rt1.c2)) THEN ((rt1.c2) NOTNULL) ELSE NULL END) ORDER BY (- ((((x''))<=((rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ('[xFDBj' IN ()) THEN (((rt1.c3))<((NULL))) WHEN UPPER(rt0.c0) THEN CASE 0xfffffffffc112330  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c3 THEN NULL ELSE rt1.c0 END WHEN (((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) THEN (rt1.c3 IN ()) WHEN CAST(rt1.c3 AS REAL) THEN ABS(t1.c0) WHEN ((((rt0.c2)OR(rt0.c0)))OR(rt1.c2)) THEN ((rt1.c2) NOTNULL) ELSE NULL END) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (- ((((x''))<=((rt1.c3))))));
SELECT * FROM rt0, t1, rt1 WHERE (CASE WHEN ('[xFDBj' IN ()) THEN (((rt1.c3))<((NULL))) WHEN UPPER(rt0.c0) THEN CASE 0Xfffffffffc112330  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c3 THEN NULL ELSE rt1.c0 END WHEN (((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) THEN (rt1.c3 IN ()) WHEN CAST(rt1.c3 AS REAL) THEN ABS(t1.c0) WHEN ((((rt0.c2)OR(rt0.c0)))OR(rt1.c2)) THEN ((rt1.c2) NOTNULL) ELSE NULL END) ORDER BY (- ((((x''))<=((rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ('[xFDBj' IN ()) THEN (((rt1.c3))<((NULL))) WHEN UPPER(rt0.c0) THEN CASE 0xfffffffffc112330  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c3 THEN NULL ELSE rt1.c0 END WHEN (((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) THEN (rt1.c3 IN ()) WHEN CAST(rt1.c3 AS REAL) THEN ABS(t1.c0) WHEN ((((rt0.c2)OR(rt0.c0)))OR(rt1.c2)) THEN ((rt1.c2) NOTNULL) ELSE NULL END) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (- ((((x''))<=((rt1.c3))))));
SELECT * FROM rt0, t1, rt1 WHERE (CASE WHEN ('[xFDBj' IN ()) THEN (((rt1.c3))<((NULL))) WHEN UPPER(rt0.c0) THEN CASE 0Xfffffffffc112330  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c3 THEN NULL ELSE rt1.c0 END WHEN (((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) THEN (rt1.c3 IN ()) WHEN CAST(rt1.c3 AS REAL) THEN ABS(t1.c0) WHEN ((((rt0.c2)OR(rt0.c0)))OR(rt1.c2)) THEN ((rt1.c2) NOTNULL) ELSE NULL END) ORDER BY (- ((((x''))<=((rt1.c3)))));
SELECT ALL * FROM rt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LAST_INSERT_ROWID());
SELECT ALL * FROM t0, rt0, rt1, v0 WHERE ((+ ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((~ (rt0.c0))))) IS TRUE)  as count FROM t0, rt0, rt1, v0);
SELECT ALL * FROM t0, rt0, rt1, v0 WHERE ((+ ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((~ (rt0.c0))))) IS TRUE)  as count FROM t0, rt0, rt1, v0);
SELECT ALL * FROM t0, rt0, rt1, v0 WHERE ((+ ((~ (rt0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))LIKE((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))LIKE((NOT (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))LIKE((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))LIKE((NOT (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))LIKE((NOT (t0.c0)))));
SELECT ALL * FROM t0 WHERE (json(CAST(t0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((json(CAST(t0.c0 AS NUMERIC))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (json(CAST(t0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((json(CAST(t0.c0 AS NUMERIC))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (json(CAST(t0.c0 AS NUMERIC)));
SELECT * FROM v0 FULL OUTER JOIN t1 ON CAST(TRIM(rt1.c1) AS REAL) CROSS JOIN rt1 ON ((rt0.c1)||(CASE WHEN NULL THEN v0.c3 WHEN '1441845482' THEN rt1.c2 WHEN rt0.c1 THEN t1.c0 END)) FULL OUTER JOIN t0 ON (((v0.c2) IS FALSE) IN ()) INNER JOIN rt0 ON (- (((((t1.c0)AND(rt1.c3)))OR(t0.c0)))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM v0 FULL OUTER JOIN t1 ON CAST(TRIM(rt1.c1) AS REAL) CROSS JOIN rt1 ON ((rt0.c1)||(CASE WHEN NULL THEN v0.c3 WHEN '1441845482' THEN rt1.c2 WHEN rt0.c1 THEN t1.c0 END)) FULL OUTER JOIN t0 ON (((v0.c2) IS FALSE) IN ()) INNER JOIN rt0 ON (- (((((t1.c0)AND(rt1.c3)))OR(t0.c0)))));
SELECT * FROM v0 FULL OUTER JOIN t1 ON CAST(TRIM(rt1.c1) AS REAL) CROSS JOIN rt1 ON ((rt0.c1)||(CASE WHEN NULL THEN v0.c3 WHEN '1441845482' THEN rt1.c2 WHEN rt0.c1 THEN t1.c0 END)) FULL OUTER JOIN t0 ON (((v0.c2) IS FALSE) IN ()) INNER JOIN rt0 ON (- (((((t1.c0)AND(rt1.c3)))OR(t0.c0)))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM v0 FULL OUTER JOIN t1 ON CAST(TRIM(rt1.c1) AS REAL) CROSS JOIN rt1 ON ((rt0.c1)||(CASE WHEN NULL THEN v0.c3 WHEN '1441845482' THEN rt1.c2 WHEN rt0.c1 THEN t1.c0 END)) FULL OUTER JOIN t0 ON (((v0.c2) IS FALSE) IN ()) INNER JOIN rt0 ON (- (((((t1.c0)AND(rt1.c3)))OR(t0.c0)))));
SELECT ALL * FROM v0, rt0, t1, rt1 WHERE ((((v0.c1) NOTNULL) IN (769120591))) ORDER BY (~ (((((((((rt1.c2)AND(v0.c0)))AND(rt1.c2)))OR(t1.c0)))AND(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1) NOTNULL) IN (769120591))) IS TRUE)  as count FROM v0, rt0, t1, rt1 ORDER BY (~ (((((((((rt1.c2)AND(v0.c0)))AND(rt1.c2)))OR(t1.c0)))AND(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM v0, rt0, t1, rt1 WHERE ((((v0.c1) NOTNULL) IN (769120591))) ORDER BY (~ (((((((((rt1.c2)AND(v0.c0)))AND(rt1.c2)))OR(t1.c0)))AND(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1) NOTNULL) IN (769120591))) IS TRUE)  as count FROM v0, rt0, t1, rt1 ORDER BY (~ (((((((((rt1.c2)AND(v0.c0)))AND(rt1.c2)))OR(t1.c0)))AND(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM v0, rt0, t1, rt1 WHERE ((((v0.c1) NOTNULL) IN (769120591))) ORDER BY (~ (((((((((rt1.c2)AND(v0.c0)))AND(rt1.c2)))OR(t1.c0)))AND(rt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1, t1 LEFT OUTER JOIN v0 ON ((((rt1.c0)&(v0.c0)))IS NOT(CASE WHEN v0.c2 THEN rt0.c1 ELSE v0.c2 END)) RIGHT OUTER JOIN t0 ON ((t1.c0)>=((- (t0.c0)))) WHERE (((TRIM(rt1.c3, x'')) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt1.c3, x'')) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, t1 LEFT OUTER JOIN v0 ON ((((rt1.c0)&(v0.c0)))IS NOT(CASE WHEN v0.c2 THEN rt0.c1 ELSE v0.c2 END)) RIGHT OUTER JOIN t0 ON ((t1.c0)>=((- (t0.c0)))));
SELECT COUNT(*) FROM rt0, rt1, t1 LEFT OUTER JOIN v0 ON ((((rt1.c0)&(v0.c0)))IS NOT(CASE WHEN v0.c2 THEN rt0.c1 ELSE v0.c2 END)) RIGHT OUTER JOIN t0 ON ((t1.c0)>=((- (t0.c0)))) WHERE (((TRIM(rt1.c3, x'')) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt1.c3, x'')) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, t1 LEFT OUTER JOIN v0 ON ((((rt1.c0)&(v0.c0)))IS NOT(CASE WHEN v0.c2 THEN rt0.c1 ELSE v0.c2 END)) RIGHT OUTER JOIN t0 ON ((t1.c0)>=((- (t0.c0)))));
SELECT COUNT(*) FROM rt0, rt1, t1 LEFT OUTER JOIN v0 ON ((((rt1.c0)&(v0.c0)))IS NOT(CASE WHEN v0.c2 THEN rt0.c1 ELSE v0.c2 END)) RIGHT OUTER JOIN t0 ON ((t1.c0)>=((- (t0.c0)))) WHERE (((TRIM(rt1.c3, x'')) NOTNULL));
SELECT ALL * FROM t1 CROSS JOIN rt1 ON (((rt1.c2)<=(t1.c0)) IN ()) WHERE ((((x'c123', rt1.c1, rt1.c3)) BETWEEN ((((((rt1.c3)OR(rt1.c2)))AND(rt1.c0)), CAST(t1.c0 AS BLOB), CAST(rt1.c0 AS REAL))) AND ((((1)>(t1.c0)), json_type(rt1.c0), ((((rt1.c3)OR(rt1.c0)))AND(x''))))));
SELECT SUM(count) FROM (SELECT (((((x'c123', rt1.c1, rt1.c3)) BETWEEN ((((((rt1.c3)OR(rt1.c2)))AND(rt1.c0)), CAST(t1.c0 AS BLOB), CAST(rt1.c0 AS REAL))) AND ((((1)>(t1.c0)), json_type(rt1.c0), ((((rt1.c3)OR(rt1.c0)))AND(x'')))))) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON (((rt1.c2)<=(t1.c0)) IN ()));
SELECT ALL * FROM t1 CROSS JOIN rt1 ON (((rt1.c2)<=(t1.c0)) IN ()) WHERE ((((x'c123', rt1.c1, rt1.c3)) BETWEEN ((((((rt1.c3)OR(rt1.c2)))AND(rt1.c0)), CAST(t1.c0 AS BLOB), CAST(rt1.c0 AS REAL))) AND ((((1)>(t1.c0)), json_type(rt1.c0), ((((rt1.c3)OR(rt1.c0)))AND(x''))))));
SELECT SUM(count) FROM (SELECT (((((x'c123', rt1.c1, rt1.c3)) BETWEEN ((((((rt1.c3)OR(rt1.c2)))AND(rt1.c0)), CAST(t1.c0 AS BLOB), CAST(rt1.c0 AS REAL))) AND ((((1)>(t1.c0)), json_type(rt1.c0), ((((rt1.c3)OR(rt1.c0)))AND(x'')))))) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON (((rt1.c2)<=(t1.c0)) IN ()));
SELECT ALL * FROM t1 CROSS JOIN rt1 ON (((rt1.c2)<=(t1.c0)) IN ()) WHERE ((((x'c123', rt1.c1, rt1.c3)) BETWEEN ((((((rt1.c3)OR(rt1.c2)))AND(rt1.c0)), CAST(t1.c0 AS BLOB), CAST(rt1.c0 AS REAL))) AND ((((1)>(t1.c0)), json_type(rt1.c0), ((((rt1.c3)OR(rt1.c0)))AND(x''))))));
SELECT ALL COUNT(*) FROM t1, t0, rt1 LEFT OUTER JOIN v0 ON (((NULL))>=((x''))) INNER JOIN rt0 ON (((v0.c2, -4.82651038E8, v0.c3)) BETWEEN ((((((rt0.c0)AND(rt1.c0)))AND(rt0.c1)), (rt0.c0 IN (rt0.c3)), ((v0.c3) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((DATE(rt1.c0, v0.c2, rt0.c2, rt1.c2, 'Ydays)'), ((rt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)), json_insert(rt1.c2, v0.c3, v0.c0)))) WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (((v0.c4) ISNULL)) AND (CAST(v0.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) NOT BETWEEN (((v0.c4) ISNULL)) AND (CAST(v0.c3 AS NUMERIC)))) IS TRUE)  as count FROM t1, t0, rt1 LEFT OUTER JOIN v0 ON (((NULL))>=((x''))) INNER JOIN rt0 ON (((v0.c2, -4.82651038E8, v0.c3)) BETWEEN ((((((rt0.c0)AND(rt1.c0)))AND(rt0.c1)), (rt0.c0 IN (rt0.c3)), ((v0.c3) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((DATE(rt1.c0, v0.c2, rt0.c2, rt1.c2, 'Ydays)'), ((rt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)), json_insert(rt1.c2, v0.c3, v0.c0)))));
SELECT ALL COUNT(*) FROM t1, t0, rt1 LEFT OUTER JOIN v0 ON (((NULL))>=((x''))) INNER JOIN rt0 ON (((v0.c2, -4.82651038E8, v0.c3)) BETWEEN ((((((rt0.c0)AND(rt1.c0)))AND(rt0.c1)), (rt0.c0 IN (rt0.c3)), ((v0.c3) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((DATE(rt1.c0, v0.c2, rt0.c2, rt1.c2, 'Ydays)'), ((rt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)), json_insert(rt1.c2, v0.c3, v0.c0)))) WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (((v0.c4) ISNULL)) AND (CAST(v0.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) NOT BETWEEN (((v0.c4) ISNULL)) AND (CAST(v0.c3 AS NUMERIC)))) IS TRUE)  as count FROM t1, t0, rt1 LEFT OUTER JOIN v0 ON (((NULL))>=((x''))) INNER JOIN rt0 ON (((v0.c2, -4.82651038E8, v0.c3)) BETWEEN ((((((rt0.c0)AND(rt1.c0)))AND(rt0.c1)), (rt0.c0 IN (rt0.c3)), ((v0.c3) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((DATE(rt1.c0, v0.c2, rt0.c2, rt1.c2, 'Ydays)'), ((rt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)), json_insert(rt1.c2, v0.c3, v0.c0)))));
SELECT ALL COUNT(*) FROM t1, t0, rt1 LEFT OUTER JOIN v0 ON (((NULL))>=((x''))) INNER JOIN rt0 ON (((v0.c2, -4.82651038E8, v0.c3)) BETWEEN ((((((rt0.c0)AND(rt1.c0)))AND(rt0.c1)), (rt0.c0 IN (rt0.c3)), ((v0.c3) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((DATE(rt1.c0, v0.c2, rt0.c2, rt1.c2, 'Ydays)'), ((rt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c3)), json_insert(rt1.c2, v0.c3, v0.c0)))) WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (((v0.c4) ISNULL)) AND (CAST(v0.c3 AS NUMERIC))));
SELECT ALL * FROM t0, v0, rt0 WHERE (((v0.c0)GLOB(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)GLOB(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, v0, rt0);
SELECT ALL * FROM t0, v0, rt0 WHERE (((v0.c0)GLOB(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)GLOB(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, v0, rt0);
SELECT ALL * FROM t0, v0, rt0 WHERE (((v0.c0)GLOB(rt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN t1 ON '714928315' LEFT OUTER JOIN v0 ON ((('￿~푖8X', v0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c2 COLLATE BINARY, (t0.c0 IN (rt0.c0)))) AND ((((x'')==(v0.c3)), (rt1.c3 IN (v0.c3)), (~ (rt0.c0))))) INNER JOIN t0 ON NULL WHERE (((CAST(rt1.c2 AS BLOB))||(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS BLOB))||(rt1.c2))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN t1 ON '714928315' LEFT OUTER JOIN v0 ON ((('￿~푖8X', v0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c2 COLLATE BINARY, (t0.c0 IN (rt0.c0)))) AND ((((x'')==(v0.c3)), (rt1.c3 IN (v0.c3)), (~ (rt0.c0))))) INNER JOIN t0 ON NULL);
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN t1 ON '714928315' LEFT OUTER JOIN v0 ON ((('￿~푖8X', v0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c2 COLLATE BINARY, (t0.c0 IN (rt0.c0)))) AND ((((x'')==(v0.c3)), (rt1.c3 IN (v0.c3)), (~ (rt0.c0))))) INNER JOIN t0 ON NULL WHERE (((CAST(rt1.c2 AS BLOB))||(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS BLOB))||(rt1.c2))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN t1 ON '714928315' LEFT OUTER JOIN v0 ON ((('￿~푖8X', v0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c2 COLLATE BINARY, (t0.c0 IN (rt0.c0)))) AND ((((x'')==(v0.c3)), (rt1.c3 IN (v0.c3)), (~ (rt0.c0))))) INNER JOIN t0 ON NULL);
SELECT COUNT(*) FROM rt1, t0, t1, v0, rt0 WHERE (UNLIKELY(DISTINCT TRIM(DISTINCT rt0.c1, rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT TRIM(DISTINCT rt0.c1, rt1.c1))) IS TRUE)  as count FROM rt1, t0, t1, v0, rt0);
SELECT COUNT(*) FROM rt1, t0, t1, v0, rt0 WHERE (UNLIKELY(DISTINCT TRIM(DISTINCT rt0.c1, rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT TRIM(DISTINCT rt0.c1, rt1.c1))) IS TRUE)  as count FROM rt1, t0, t1, v0, rt0);
SELECT COUNT(*) FROM rt1, t0, t1, v0, rt0 WHERE (UNLIKELY(DISTINCT TRIM(DISTINCT rt0.c1, rt1.c1)));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((NOT (((rt1.c0)AND(rt1.c1))))) ORDER BY rt1.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c0)AND(rt1.c1))))) IS TRUE)  as count FROM t0, rt1 ORDER BY rt1.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((NOT (((rt1.c0)AND(rt1.c1))))) ORDER BY rt1.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c0)AND(rt1.c1))))) IS TRUE)  as count FROM t0, rt1 ORDER BY rt1.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((NOT (((rt1.c0)AND(rt1.c1))))) ORDER BY rt1.c2 DESC  NULLS FIRST;
SELECT * FROM t0, t1, rt0, rt1 WHERE (CASE ((rt0.c3) IS TRUE)  WHEN ((('177886003')) NOT BETWEEN ((NULL)) AND ((t1.c0))) THEN CASE WHEN rt1.c1 THEN rt0.c3 ELSE rt1.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) IS TRUE)  WHEN ((('177886003')) NOT BETWEEN ((NULL)) AND ((t1.c0))) THEN CASE WHEN rt1.c1 THEN rt0.c3 ELSE rt1.c1 END END) IS TRUE)  as count FROM t0, t1, rt0, rt1);
SELECT * FROM t0, t1, rt0, rt1 WHERE (CASE ((rt0.c3) IS TRUE)  WHEN ((('177886003')) NOT BETWEEN ((NULL)) AND ((t1.c0))) THEN CASE WHEN rt1.c1 THEN rt0.c3 ELSE rt1.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) IS TRUE)  WHEN ((('177886003')) NOT BETWEEN ((NULL)) AND ((t1.c0))) THEN CASE WHEN rt1.c1 THEN rt0.c3 ELSE rt1.c1 END END) IS TRUE)  as count FROM t0, t1, rt0, rt1);
SELECT * FROM t0, t1, rt0, rt1 WHERE (CASE ((rt0.c3) IS TRUE)  WHEN ((('177886003')) NOT BETWEEN ((NULL)) AND ((t1.c0))) THEN CASE WHEN rt1.c1 THEN rt0.c3 ELSE rt1.c1 END END);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))IS NOT((rt0.c3 IN (rt0.c2))))) ORDER BY ((rt0.c3)IS NOT(rt0.c3)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))IS NOT((rt0.c3 IN (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3)IS NOT(rt0.c3)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))IS NOT((rt0.c3 IN (rt0.c2))))) ORDER BY ((rt0.c3)IS NOT(rt0.c3)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))IS NOT((rt0.c3 IN (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3)IS NOT(rt0.c3)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))IS NOT((rt0.c3 IN (rt0.c2))))) ORDER BY ((rt0.c3)IS NOT(rt0.c3)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM t1, v0, t0, rt1, rt0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM t1, v0, t0, rt1, rt0);
SELECT ALL * FROM t1, v0, t0, rt1, rt0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM t1, v0, t0, rt1, rt0);
SELECT ALL * FROM t1, v0, t0, rt1, rt0 WHERE (((v0.c0) IS TRUE));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((v0.c2)) BETWEEN ((v0.c1)) AND ((((v0.c2) BETWEEN (rt1.c3) AND (v0.c1)))))) ORDER BY NULL ASC  NULLS FIRST, rt1.c0 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((v0.c1)) AND ((((v0.c2) BETWEEN (rt1.c3) AND (v0.c1)))))) IS TRUE)  as count FROM v0, rt1 ORDER BY NULL ASC  NULLS FIRST, rt1.c0 COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((v0.c2)) BETWEEN ((v0.c1)) AND ((((v0.c2) BETWEEN (rt1.c3) AND (v0.c1)))))) ORDER BY NULL ASC  NULLS FIRST, rt1.c0 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((v0.c1)) AND ((((v0.c2) BETWEEN (rt1.c3) AND (v0.c1)))))) IS TRUE)  as count FROM v0, rt1 ORDER BY NULL ASC  NULLS FIRST, rt1.c0 COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((v0.c2)) BETWEEN ((v0.c1)) AND ((((v0.c2) BETWEEN (rt1.c3) AND (v0.c1)))))) ORDER BY NULL ASC  NULLS FIRST, rt1.c0 COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 INNER JOIN t1 ON ((DATETIME(t0.c0, rt0.c3, rt1.c2)) IS TRUE) CROSS JOIN rt1 ON '4	' WHERE (x'd2dc') ORDER BY (NOT (rt0.c3 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'd2dc') IS TRUE)  as count FROM t0, rt0 INNER JOIN t1 ON ((DATETIME(t0.c0, rt0.c3, rt1.c2)) IS TRUE) CROSS JOIN rt1 ON '4	' ORDER BY (NOT (rt0.c3 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM t0, rt0 INNER JOIN t1 ON ((DATETIME(t0.c0, rt0.c3, rt1.c2)) IS TRUE) CROSS JOIN rt1 ON '4	' WHERE (x'd2dc') ORDER BY (NOT (rt0.c3 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'd2dc') IS TRUE)  as count FROM t0, rt0 INNER JOIN t1 ON ((DATETIME(t0.c0, rt0.c3, rt1.c2)) IS TRUE) CROSS JOIN rt1 ON '4	' ORDER BY (NOT (rt0.c3 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM t0, rt0 INNER JOIN t1 ON ((DATETIME(t0.c0, rt0.c3, rt1.c2)) IS TRUE) CROSS JOIN rt1 ON '4	' WHERE (x'd2dc') ORDER BY (NOT (rt0.c3 COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON (((rt1.c1 IN ())) BETWEEN (((rt1.c2)||(t0.c0))) AND (rt1.c2 COLLATE BINARY)) WHERE (NULL) ORDER BY (+ (rt1.c3)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON (((rt1.c1 IN ())) BETWEEN (((rt1.c2)||(t0.c0))) AND (rt1.c2 COLLATE BINARY)) ORDER BY (+ (rt1.c3)) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON (((rt1.c1 IN ())) BETWEEN (((rt1.c2)||(t0.c0))) AND (rt1.c2 COLLATE BINARY)) WHERE (NULL) ORDER BY (+ (rt1.c3)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON (((rt1.c1 IN ())) BETWEEN (((rt1.c2)||(t0.c0))) AND (rt1.c2 COLLATE BINARY)) ORDER BY (+ (rt1.c3)) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON (((rt1.c1 IN ())) BETWEEN (((rt1.c2)||(t0.c0))) AND (rt1.c2 COLLATE BINARY)) WHERE (NULL) ORDER BY (+ (rt1.c3)) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM t0, v0, rt0 WHERE ((((v0.c1 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ())) IS FALSE)) IS TRUE)  as count FROM t0, v0, rt0);
SELECT ALL * FROM t0, v0, rt0 WHERE ((((v0.c1 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ())) IS FALSE)) IS TRUE)  as count FROM t0, v0, rt0);
SELECT ALL * FROM t0, v0, rt0 WHERE ((((v0.c1 IN ())) IS FALSE));
SELECT * FROM t1 WHERE ((((t1.c0 IN ()))<((- (t1.c0))))) ORDER BY CASE ABS(DISTINCT t1.c0)  WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN TRIM(DISTINCT t1.c0) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN t1.c0 COLLATE NOCASE THEN ((t1.c0)OR(t1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ()))<((- (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY CASE ABS(DISTINCT t1.c0)  WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN TRIM(DISTINCT t1.c0) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN t1.c0 COLLATE NOCASE THEN ((t1.c0)OR(t1.c0)) END  NULLS LAST);
SELECT * FROM t1 WHERE ((((t1.c0 IN ()))<((- (t1.c0))))) ORDER BY CASE ABS(DISTINCT t1.c0)  WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN TRIM(DISTINCT t1.c0) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN t1.c0 COLLATE NOCASE THEN ((t1.c0)OR(t1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ()))<((- (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY CASE ABS(DISTINCT t1.c0)  WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN TRIM(DISTINCT t1.c0) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN t1.c0 COLLATE NOCASE THEN ((t1.c0)OR(t1.c0)) END  NULLS LAST);
SELECT * FROM t1 WHERE ((((t1.c0 IN ()))<((- (t1.c0))))) ORDER BY CASE ABS(DISTINCT t1.c0)  WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN TRIM(DISTINCT t1.c0) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN t1.c0 COLLATE NOCASE THEN ((t1.c0)OR(t1.c0)) END  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(x'')))OR(rt0.c0))) NOTNULL)) ORDER BY (((((rt0.c0) IS TRUE)))<((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(369167822)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(x'')))OR(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0) IS TRUE)))<((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(369167822)))OR(rt0.c2))))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(x'')))OR(rt0.c0))) NOTNULL)) ORDER BY (((((rt0.c0) IS TRUE)))<((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(369167822)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(x'')))OR(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0) IS TRUE)))<((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(369167822)))OR(rt0.c2))))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(x'')))OR(rt0.c0))) NOTNULL)) ORDER BY (((((rt0.c0) IS TRUE)))<((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(369167822)))OR(rt0.c2)))));
SELECT ALL * FROM v0, t1, t0, rt1, rt0 WHERE ((NULL IN (1647493083)));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (1647493083))) IS TRUE)  as count FROM v0, t1, t0, rt1, rt0);
SELECT ALL * FROM v0, t1, t0, rt1, rt0 WHERE ((NULL IN (1647493083)));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (1647493083))) IS TRUE)  as count FROM v0, t1, t0, rt1, rt0);
SELECT ALL * FROM v0, t1, t0, rt1, rt0 WHERE ((NULL IN (1647493083)));
SELECT * FROM t0, v0, rt1 WHERE (v0.c0) ORDER BY (- (v0.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY (- (v0.c1 COLLATE RTRIM)) DESC);
SELECT * FROM t0, v0, rt1 WHERE (v0.c0) ORDER BY (- (v0.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY (- (v0.c1 COLLATE RTRIM)) DESC);
SELECT * FROM t0, v0, rt1 WHERE (v0.c0) ORDER BY (- (v0.c1 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM v0, t0, rt1, rt0, t1 WHERE ((((('-232305511') NOT NULL))-(((t0.c0)=(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((('-232305511') NOT NULL))-(((t0.c0)=(v0.c1))))) IS TRUE)  as count FROM v0, t0 NOT INDEXED, rt1, rt0, t1);
SELECT COUNT(*) FROM v0, t0, rt1, rt0, t1 WHERE ((((('-232305511') NOT NULL))-(((t0.c0)=(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((('-232305511') NOT NULL))-(((t0.c0)=(v0.c1))))) IS TRUE)  as count FROM v0, t0 NOT INDEXED, rt1, rt0, t1);
SELECT COUNT(*) FROM v0, t0, rt1, rt0, t1 WHERE ((((('-232305511') NOT NULL))-(((t0.c0)=(v0.c1)))));
SELECT ALL COUNT(*) FROM rt1, v0, t0, rt0, t1 WHERE ((- ('t]'))) ORDER BY (((rt0.c1)>=(rt1.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ('t]'))) IS TRUE)  as count FROM rt1, v0, t0, rt0, t1 ORDER BY (((rt0.c1)>=(rt1.c0)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0, t0, rt0, t1 WHERE ((- ('t]'))) ORDER BY (((rt0.c1)>=(rt1.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ('t]'))) IS TRUE)  as count FROM rt1, v0, t0, rt0, t1 ORDER BY (((rt0.c1)>=(rt1.c0)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0, t0, rt0, t1 WHERE ((- ('t]'))) ORDER BY (((rt0.c1)>=(rt1.c0)) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON (x'' IN (((((rt1.c0)OR(t1.c0)))OR(rt0.c3)))) FULL OUTER JOIN rt1 ON (((((rt0.c3)AND(rt1.c2)))OR(rt1.c2)) IN ()) WHERE ((rt1.c2 IN ()) COLLATE NOCASE) ORDER BY ((((rt1.c0 COLLATE BINARY)AND(((rt1.c2)*(0.17823829029247995)))))OR(CAST(rt0.c2 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (x'' IN (((((rt1.c0)OR(t1.c0)))OR(rt0.c3)))) FULL OUTER JOIN rt1 ON (((((rt0.c3)AND(rt1.c2)))OR(rt1.c2)) IN ()) ORDER BY ((((rt1.c0 COLLATE BINARY)AND(((rt1.c2)*(0.17823829029247995)))))OR(CAST(rt0.c2 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON (x'' IN (((((rt1.c0)OR(t1.c0)))OR(rt0.c3)))) FULL OUTER JOIN rt1 ON (((((rt0.c3)AND(rt1.c2)))OR(rt1.c2)) IN ()) WHERE ((rt1.c2 IN ()) COLLATE NOCASE) ORDER BY ((((rt1.c0 COLLATE BINARY)AND(((rt1.c2)*(0.17823829029247995)))))OR(CAST(rt0.c2 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (x'' IN (((((rt1.c0)OR(t1.c0)))OR(rt0.c3)))) FULL OUTER JOIN rt1 ON (((((rt0.c3)AND(rt1.c2)))OR(rt1.c2)) IN ()) ORDER BY ((((rt1.c0 COLLATE BINARY)AND(((rt1.c2)*(0.17823829029247995)))))OR(CAST(rt0.c2 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON 0.5514725369494607 WHERE (CAST(0.3841954831559504 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.3841954831559504 AS REAL)) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON 0.5514725369494607);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON 0.5514725369494607 WHERE (CAST(0.3841954831559504 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.3841954831559504 AS REAL)) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON 0.5514725369494607);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON 0.5514725369494607 WHERE (CAST(0.3841954831559504 AS REAL));
SELECT * FROM t0, v0, t1, rt0, rt1 WHERE (x'') ORDER BY (((v0.c1, v0.c1, v0.c1)) BETWEEN ((LIKELIHOOD(0xffffffff9bae5d7a, 0.3523956485551115), SQLITE_SOURCE_ID(), rt1.c0)) AND ((((v0.c1) NOTNULL), CAST(rt1.c3 AS BLOB), '	\rD3CXS' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, v0, t1, rt0, rt1 ORDER BY (((v0.c1, v0.c1, v0.c1)) BETWEEN ((LIKELIHOOD(0xffffffff9bae5d7a, 0.3523956485551115), SQLITE_SOURCE_ID(), rt1.c0)) AND ((((v0.c1) NOTNULL), CAST(rt1.c3 AS BLOB), '	\rD3CXS' COLLATE BINARY))));
SELECT * FROM t0, v0, t1, rt0, rt1 WHERE (x'') ORDER BY (((v0.c1, v0.c1, v0.c1)) BETWEEN ((LIKELIHOOD(0xffffffff9bae5d7a, 0.3523956485551115), SQLITE_SOURCE_ID(), rt1.c0)) AND ((((v0.c1) NOTNULL), CAST(rt1.c3 AS BLOB), '	\rD3CXS' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, v0, t1, rt0, rt1 ORDER BY (((v0.c1, v0.c1, v0.c1)) BETWEEN ((LIKELIHOOD(0xffffffff9bae5d7a, 0.3523956485551115), SQLITE_SOURCE_ID(), rt1.c0)) AND ((((v0.c1) NOTNULL), CAST(rt1.c3 AS BLOB), '	\rD3CXS' COLLATE BINARY))));
SELECT * FROM t0, v0, t1, rt0, rt1 WHERE (x'') ORDER BY (((v0.c1, v0.c1, v0.c1)) BETWEEN ((LIKELIHOOD(0xffffffff9bae5d7a, 0.3523956485551115), SQLITE_SOURCE_ID(), rt1.c0)) AND ((((v0.c1) NOTNULL), CAST(rt1.c3 AS BLOB), '	\rD3CXS' COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON x'' CROSS JOIN v0 ON v0.c2 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON x'' CROSS JOIN v0 ON v0.c2);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON x'' CROSS JOIN v0 ON v0.c2 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON x'' CROSS JOIN v0 ON v0.c2);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON x'' CROSS JOIN v0 ON v0.c2 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM t1, v0 NATURAL JOIN rt1 WHERE (CASE (('V)') NOT BETWEEN (rt1.c1) AND ('QPyI)5o'))  WHEN CASE WHEN rt1.c3 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN rt1.c3 THEN v0.c4 WHEN v0.c2 THEN v0.c4 WHEN rt1.c2 THEN v0.c4 END THEN (+ (0.41275819014523674)) END) ORDER BY ((v0.c3) NOT NULL) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (('V)') NOT BETWEEN (rt1.c1) AND ('QPyI)5o'))  WHEN CASE WHEN rt1.c3 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN rt1.c3 THEN v0.c4 WHEN v0.c2 THEN v0.c4 WHEN rt1.c2 THEN v0.c4 END THEN (+ (0.41275819014523674)) END) IS TRUE)  as count FROM t1, v0 NATURAL JOIN rt1 ORDER BY ((v0.c3) NOT NULL) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0 NATURAL JOIN rt1 WHERE (CASE (('V)') NOT BETWEEN (rt1.c1) AND ('QPyI)5o'))  WHEN CASE WHEN rt1.c3 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN rt1.c3 THEN v0.c4 WHEN v0.c2 THEN v0.c4 WHEN rt1.c2 THEN v0.c4 END THEN (+ (0.41275819014523674)) END) ORDER BY ((v0.c3) NOT NULL) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (('V)') NOT BETWEEN (rt1.c1) AND ('QPyI)5o'))  WHEN CASE WHEN rt1.c3 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN rt1.c3 THEN v0.c4 WHEN v0.c2 THEN v0.c4 WHEN rt1.c2 THEN v0.c4 END THEN (+ (0.41275819014523674)) END) IS TRUE)  as count FROM t1, v0 NATURAL JOIN rt1 ORDER BY ((v0.c3) NOT NULL) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0 NATURAL JOIN rt1 WHERE (CASE (('V)') NOT BETWEEN (rt1.c1) AND ('QPyI)5o'))  WHEN CASE WHEN rt1.c3 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN rt1.c3 THEN v0.c4 WHEN v0.c2 THEN v0.c4 WHEN rt1.c2 THEN v0.c4 END THEN (+ (0.41275819014523674)) END) ORDER BY ((v0.c3) NOT NULL) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 END)IS NOT(((((rt1.c0)OR(rt1.c3)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 END)IS NOT(((((rt1.c0)OR(rt1.c3)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 END)IS NOT(((((rt1.c0)OR(rt1.c3)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 END)IS NOT(((((rt1.c0)OR(rt1.c3)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 END)IS NOT(((((rt1.c0)OR(rt1.c3)))OR(rt1.c0)))));
SELECT ALL COUNT(*) FROM t0, t1, rt0, v0 NATURAL JOIN rt1 WHERE (((CAST(rt0.c3 AS REAL)) NOT BETWEEN (UPPER(v0.c1)) AND (t0.c0))) ORDER BY (- (rt1.c1)) COLLATE BINARY ASC  NULLS LAST, ((rt1.c1 COLLATE BINARY)LIKE((NOT (v0.c1)))) ASC, json(rt0.c0) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS REAL)) NOT BETWEEN (UPPER(v0.c1)) AND (t0.c0))) IS TRUE)  as count FROM t0, t1, rt0, v0 NATURAL JOIN rt1 ORDER BY (- (rt1.c1)) COLLATE BINARY ASC  NULLS LAST, ((rt1.c1 COLLATE BINARY)LIKE((NOT (v0.c1)))) ASC, json(rt0.c0) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1, rt0, v0 NATURAL JOIN rt1 WHERE (((CAST(rt0.c3 AS REAL)) NOT BETWEEN (UPPER(v0.c1)) AND (t0.c0))) ORDER BY (- (rt1.c1)) COLLATE BINARY ASC  NULLS LAST, ((rt1.c1 COLLATE BINARY)LIKE((NOT (v0.c1)))) ASC, json(rt0.c0) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS REAL)) NOT BETWEEN (UPPER(v0.c1)) AND (t0.c0))) IS TRUE)  as count FROM t0, t1, rt0, v0 NATURAL JOIN rt1 ORDER BY (- (rt1.c1)) COLLATE BINARY ASC  NULLS LAST, ((rt1.c1 COLLATE BINARY)LIKE((NOT (v0.c1)))) ASC, json(rt0.c0) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1, rt0, v0 NATURAL JOIN rt1 WHERE (((CAST(rt0.c3 AS REAL)) NOT BETWEEN (UPPER(v0.c1)) AND (t0.c0))) ORDER BY (- (rt1.c1)) COLLATE BINARY ASC  NULLS LAST, ((rt1.c1 COLLATE BINARY)LIKE((NOT (v0.c1)))) ASC, json(rt0.c0) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 INNER JOIN t1 ON '1530777675' LEFT OUTER JOIN v0 ON ((((((((LIKELIHOOD(DISTINCT 104015265, 0.7361874398310884))OR(((((v0.c2)AND(v0.c2)))OR(v0.c0)))))OR(ABS(v0.c2))))AND(CAST(v0.c0 AS NUMERIC))))AND(((x'')*(t0.c0)))) WHERE (((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c4 END) BETWEEN (((v0.c4) NOT BETWEEN ('140339923') AND (v0.c0))) AND (((t1.c0)GLOB(v0.c3))))) ORDER BY ((((((v0.c2)OR(v0.c3)))OR(v0.c3)))LIKE(((v0.c4) BETWEEN (NULL) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c4 END) BETWEEN (((v0.c4) NOT BETWEEN ('140339923') AND (v0.c0))) AND (((t1.c0)GLOB(v0.c3))))) IS TRUE)  as count FROM t0 INNER JOIN t1 ON '1530777675' LEFT OUTER JOIN v0 ON ((((((((LIKELIHOOD(DISTINCT 104015265, 0.7361874398310884))OR(((((v0.c2)AND(v0.c2)))OR(v0.c0)))))OR(ABS(v0.c2))))AND(CAST(v0.c0 AS NUMERIC))))AND(((x'')*(t0.c0)))) ORDER BY ((((((v0.c2)OR(v0.c3)))OR(v0.c3)))LIKE(((v0.c4) BETWEEN (NULL) AND (t1.c0)))));
SELECT COUNT(*) FROM t0 INNER JOIN t1 ON '1530777675' LEFT OUTER JOIN v0 ON ((((((((LIKELIHOOD(DISTINCT 104015265, 0.7361874398310884))OR(((((v0.c2)AND(v0.c2)))OR(v0.c0)))))OR(ABS(v0.c2))))AND(CAST(v0.c0 AS NUMERIC))))AND(((x'')*(t0.c0)))) WHERE (((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c4 END) BETWEEN (((v0.c4) NOT BETWEEN ('140339923') AND (v0.c0))) AND (((t1.c0)GLOB(v0.c3))))) ORDER BY ((((((v0.c2)OR(v0.c3)))OR(v0.c3)))LIKE(((v0.c4) BETWEEN (NULL) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c4 END) BETWEEN (((v0.c4) NOT BETWEEN ('140339923') AND (v0.c0))) AND (((t1.c0)GLOB(v0.c3))))) IS TRUE)  as count FROM t0 INNER JOIN t1 ON '1530777675' LEFT OUTER JOIN v0 ON ((((((((LIKELIHOOD(DISTINCT 104015265, 0.7361874398310884))OR(((((v0.c2)AND(v0.c2)))OR(v0.c0)))))OR(ABS(v0.c2))))AND(CAST(v0.c0 AS NUMERIC))))AND(((x'')*(t0.c0)))) ORDER BY ((((((v0.c2)OR(v0.c3)))OR(v0.c3)))LIKE(((v0.c4) BETWEEN (NULL) AND (t1.c0)))));
SELECT COUNT(*) FROM t0 INNER JOIN t1 ON '1530777675' LEFT OUTER JOIN v0 ON ((((((((LIKELIHOOD(DISTINCT 104015265, 0.7361874398310884))OR(((((v0.c2)AND(v0.c2)))OR(v0.c0)))))OR(ABS(v0.c2))))AND(CAST(v0.c0 AS NUMERIC))))AND(((x'')*(t0.c0)))) WHERE (((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c4 END) BETWEEN (((v0.c4) NOT BETWEEN ('140339923') AND (v0.c0))) AND (((t1.c0)GLOB(v0.c3))))) ORDER BY ((((((v0.c2)OR(v0.c3)))OR(v0.c3)))LIKE(((v0.c4) BETWEEN (NULL) AND (t1.c0))));
SELECT * FROM t1, rt1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (t1.c0);
SELECT ALL * FROM t1, t0, v0, rt0, rt1 WHERE (((rt0.c1 COLLATE NOCASE)IS NOT(((((v0.c4)OR(t1.c0)))OR(rt0.c0))))) ORDER BY CASE WHEN ((v0.c0)<<(rt1.c0)) THEN rt0.c2 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)IS NOT(((((v0.c4)OR(t1.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM t1, t0, v0, rt0, rt1 ORDER BY CASE WHEN ((v0.c0)<<(rt1.c0)) THEN rt0.c2 COLLATE NOCASE END);
SELECT ALL * FROM t1, t0, v0, rt0, rt1 WHERE (((rt0.c1 COLLATE NOCASE)IS NOT(((((v0.c4)OR(t1.c0)))OR(rt0.c0))))) ORDER BY CASE WHEN ((v0.c0)<<(rt1.c0)) THEN rt0.c2 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)IS NOT(((((v0.c4)OR(t1.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM t1, t0, v0, rt0, rt1 ORDER BY CASE WHEN ((v0.c0)<<(rt1.c0)) THEN rt0.c2 COLLATE NOCASE END);
SELECT ALL * FROM t1, t0, v0, rt0, rt1 WHERE (((rt0.c1 COLLATE NOCASE)IS NOT(((((v0.c4)OR(t1.c0)))OR(rt0.c0))))) ORDER BY CASE WHEN ((v0.c0)<<(rt1.c0)) THEN rt0.c2 COLLATE NOCASE END;
SELECT ALL COUNT(*) FROM v0 WHERE (LIKE(CAST(v0.c4 AS TEXT), (NOT (v0.c2))));
SELECT SUM(count) FROM (SELECT ((LIKE(CAST(v0.c4 AS TEXT), (NOT (v0.c2)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LIKE(CAST(v0.c4 AS TEXT), (NOT (v0.c2))));
SELECT SUM(count) FROM (SELECT ((LIKE(CAST(v0.c4 AS TEXT), (NOT (v0.c2)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LIKE(CAST(v0.c4 AS TEXT), (NOT (v0.c2))));
SELECT ALL * FROM t0, rt0, t1 WHERE (((((rt0.c1)IS NOT(rt0.c2)))*(LIKELY(rt0.c2)))) ORDER BY (((((+ (rt0.c2)))OR(t1.c0)))OR((rt0.c0 IN ()))) ASC  NULLS LAST, CASE WHEN ((t1.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)) THEN ((((((((0.1625509225609637)OR(t1.c0)))AND(t1.c0)))OR(t0.c0)))AND(rt0.c0)) WHEN (+ (rt0.c2)) THEN UNLIKELY(rt0.c1) WHEN rt0.c0 THEN ((rt0.c0) IS TRUE) ELSE ((((rt0.c1)OR(rt0.c3)))AND(rt0.c3)) END, '-858162517' DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS NOT(rt0.c2)))*(LIKELY(rt0.c2)))) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY (((((+ (rt0.c2)))OR(t1.c0)))OR((rt0.c0 IN ()))) ASC  NULLS LAST, CASE WHEN ((t1.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)) THEN ((((((((0.1625509225609637)OR(t1.c0)))AND(t1.c0)))OR(t0.c0)))AND(rt0.c0)) WHEN (+ (rt0.c2)) THEN UNLIKELY(rt0.c1) WHEN rt0.c0 THEN ((rt0.c0) IS TRUE) ELSE ((((rt0.c1)OR(rt0.c3)))AND(rt0.c3)) END, '-858162517' DESC);
SELECT ALL * FROM t0, rt0, t1 WHERE (((((rt0.c1)IS NOT(rt0.c2)))*(LIKELY(rt0.c2)))) ORDER BY (((((+ (rt0.c2)))OR(t1.c0)))OR((rt0.c0 IN ()))) ASC  NULLS LAST, CASE WHEN ((t1.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)) THEN ((((((((0.1625509225609637)OR(t1.c0)))AND(t1.c0)))OR(t0.c0)))AND(rt0.c0)) WHEN (+ (rt0.c2)) THEN UNLIKELY(rt0.c1) WHEN rt0.c0 THEN ((rt0.c0) IS TRUE) ELSE ((((rt0.c1)OR(rt0.c3)))AND(rt0.c3)) END, '-858162517' DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS NOT(rt0.c2)))*(LIKELY(rt0.c2)))) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY (((((+ (rt0.c2)))OR(t1.c0)))OR((rt0.c0 IN ()))) ASC  NULLS LAST, CASE WHEN ((t1.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)) THEN ((((((((0.1625509225609637)OR(t1.c0)))AND(t1.c0)))OR(t0.c0)))AND(rt0.c0)) WHEN (+ (rt0.c2)) THEN UNLIKELY(rt0.c1) WHEN rt0.c0 THEN ((rt0.c0) IS TRUE) ELSE ((((rt0.c1)OR(rt0.c3)))AND(rt0.c3)) END, '-858162517' DESC);
SELECT ALL * FROM t0, rt0, t1 WHERE (((((rt0.c1)IS NOT(rt0.c2)))*(LIKELY(rt0.c2)))) ORDER BY (((((+ (rt0.c2)))OR(t1.c0)))OR((rt0.c0 IN ()))) ASC  NULLS LAST, CASE WHEN ((t1.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)) THEN ((((((((0.1625509225609637)OR(t1.c0)))AND(t1.c0)))OR(t0.c0)))AND(rt0.c0)) WHEN (+ (rt0.c2)) THEN UNLIKELY(rt0.c1) WHEN rt0.c0 THEN ((rt0.c0) IS TRUE) ELSE ((((rt0.c1)OR(rt0.c3)))AND(rt0.c3)) END, '-858162517' DESC;
SELECT COUNT(*) FROM rt1, t1 RIGHT OUTER JOIN v0 ON ((((v0.c1) ISNULL))<(((v0.c3)<=(v0.c1)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, t1 RIGHT OUTER JOIN v0 ON ((((v0.c1) ISNULL))<(((v0.c3)<=(v0.c1)))));
SELECT COUNT(*) FROM rt1, t1 RIGHT OUTER JOIN v0 ON ((((v0.c1) ISNULL))<(((v0.c3)<=(v0.c1)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, t1 RIGHT OUTER JOIN v0 ON ((((v0.c1) ISNULL))<(((v0.c3)<=(v0.c1)))));
SELECT COUNT(*) FROM rt1, t1 RIGHT OUTER JOIN v0 ON ((((v0.c1) ISNULL))<(((v0.c3)<=(v0.c1)))) WHERE (x'');
SELECT ALL * FROM t1, v0, rt1, t0 WHERE ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END IN ())) ORDER BY (('Co' COLLATE RTRIM) NOT BETWEEN (((((((((v0.c0)OR(t1.c0)))OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c0))) AND ((- (t1.c0)))) ASC, (((v0.c3 IN (rt1.c2)))|((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c4))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END IN ())) IS TRUE)  as count FROM t1, v0, rt1, t0 ORDER BY (('Co' COLLATE RTRIM) NOT BETWEEN (((((((((v0.c0)OR(t1.c0)))OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c0))) AND ((- (t1.c0)))) ASC, (((v0.c3 IN (rt1.c2)))|((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c4))))) DESC);
SELECT ALL * FROM t1, v0, rt1, t0 WHERE ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END IN ())) ORDER BY (('Co' COLLATE RTRIM) NOT BETWEEN (((((((((v0.c0)OR(t1.c0)))OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c0))) AND ((- (t1.c0)))) ASC, (((v0.c3 IN (rt1.c2)))|((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c4))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END IN ())) IS TRUE)  as count FROM t1, v0, rt1, t0 ORDER BY (('Co' COLLATE RTRIM) NOT BETWEEN (((((((((v0.c0)OR(t1.c0)))OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c0))) AND ((- (t1.c0)))) ASC, (((v0.c3 IN (rt1.c2)))|((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c4))))) DESC);
SELECT ALL * FROM t1, v0, rt1, t0 WHERE ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END IN ())) ORDER BY (('Co' COLLATE RTRIM) NOT BETWEEN (((((((((v0.c0)OR(t1.c0)))OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c0))) AND ((- (t1.c0)))) ASC, (((v0.c3 IN (rt1.c2)))|((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c4))))) DESC;
SELECT * FROM rt1, v0 WHERE (((TRIM(DISTINCT rt1.c3, v0.c0)) NOTNULL)) ORDER BY CAST(((rt1.c1) IS FALSE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt1.c3, v0.c0)) NOTNULL)) IS TRUE)  as count FROM rt1, v0 ORDER BY CAST(((rt1.c1) IS FALSE) AS INTEGER));
SELECT * FROM rt1, v0 WHERE (((TRIM(DISTINCT rt1.c3, v0.c0)) NOTNULL)) ORDER BY CAST(((rt1.c1) IS FALSE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt1.c3, v0.c0)) NOTNULL)) IS TRUE)  as count FROM rt1, v0 ORDER BY CAST(((rt1.c1) IS FALSE) AS INTEGER));
SELECT * FROM rt1, v0 WHERE (((TRIM(DISTINCT rt1.c3, v0.c0)) NOTNULL)) ORDER BY CAST(((rt1.c1) IS FALSE) AS INTEGER);
SELECT ALL * FROM t1 LEFT OUTER JOIN rt1 ON t1.c0 FULL OUTER JOIN rt0 ON rt1.c3 LEFT OUTER JOIN t0 ON x'2f00' WHERE (TIME((~ (t0.c0)), '0.013517725855168083' COLLATE NOCASE, (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((TIME((~ (t0.c0)), '0.013517725855168083' COLLATE NOCASE, (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) IS TRUE)  as count FROM t1 NOT INDEXED LEFT OUTER JOIN rt1 ON t1.c0 FULL OUTER JOIN rt0 ON rt1.c3 LEFT OUTER JOIN t0 ON x'2f00');
SELECT ALL * FROM t1 LEFT OUTER JOIN rt1 ON t1.c0 FULL OUTER JOIN rt0 ON rt1.c3 LEFT OUTER JOIN t0 ON x'2f00' WHERE (TIME((~ (t0.c0)), '0.013517725855168083' COLLATE NOCASE, (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((TIME((~ (t0.c0)), '0.013517725855168083' COLLATE NOCASE, (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) IS TRUE)  as count FROM t1 NOT INDEXED LEFT OUTER JOIN rt1 ON t1.c0 FULL OUTER JOIN rt0 ON rt1.c3 LEFT OUTER JOIN t0 ON x'2f00');
SELECT ALL * FROM t1 LEFT OUTER JOIN rt1 ON t1.c0 FULL OUTER JOIN rt0 ON rt1.c3 LEFT OUTER JOIN t0 ON x'2f00' WHERE (TIME((~ (t0.c0)), '0.013517725855168083' COLLATE NOCASE, (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c3 AS TEXT)))<((NULL)))) ORDER BY CAST(rt0.c3 COLLATE NOCASE AS BLOB);
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c3 AS TEXT)))<((NULL)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c3 COLLATE NOCASE AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c3 AS TEXT)))<((NULL)))) ORDER BY CAST(rt0.c3 COLLATE NOCASE AS BLOB);
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c3 AS TEXT)))<((NULL)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c3 COLLATE NOCASE AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c3 AS TEXT)))<((NULL)))) ORDER BY CAST(rt0.c3 COLLATE NOCASE AS BLOB);
SELECT COUNT(*) FROM t1, rt1, v0, rt0 WHERE ((((rt1.c1)GLOB(rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)GLOB(rt1.c1)) IN ())) IS TRUE)  as count FROM t1, rt1, v0, rt0);
SELECT COUNT(*) FROM t1, rt1, v0, rt0 WHERE ((((rt1.c1)GLOB(rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)GLOB(rt1.c1)) IN ())) IS TRUE)  as count FROM t1, rt1, v0, rt0);
SELECT COUNT(*) FROM t1, rt1, v0, rt0 WHERE ((((rt1.c1)GLOB(rt1.c1)) IN ()));
SELECT COUNT(*) FROM v0, rt0, t1, t0 WHERE ((CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM v0, rt0, t1, t0);
SELECT COUNT(*) FROM v0, rt0, t1, t0 WHERE ((CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM v0, rt0, t1, t0);
SELECT COUNT(*) FROM v0, rt0, t1, t0 WHERE ((CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END IN ()));
SELECT COUNT(*) FROM t0, v0, rt0 WHERE ((- (CASE WHEN rt0.c2 THEN t0.c0 END))) ORDER BY CAST(((rt0.c0) NOT NULL) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c2 THEN t0.c0 END))) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY CAST(((rt0.c0) NOT NULL) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, rt0 WHERE ((- (CASE WHEN rt0.c2 THEN t0.c0 END))) ORDER BY CAST(((rt0.c0) NOT NULL) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c2 THEN t0.c0 END))) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY CAST(((rt0.c0) NOT NULL) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, rt0 WHERE ((- (CASE WHEN rt0.c2 THEN t0.c0 END))) ORDER BY CAST(((rt0.c0) NOT NULL) AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN t0 ON (((((rt1.c0) IS FALSE)))<=((CASE WHEN rt1.c0 THEN t1.c0 ELSE rt1.c1 END))) RIGHT OUTER JOIN t1 ON CASE 0.2988826679847323  WHEN rt1.c3 COLLATE NOCASE THEN (- (rt1.c1)) ELSE ((rt1.c3)|(rt1.c0)) END WHERE ((CAST(rt1.c2 AS BLOB) IN ())) ORDER BY IFNULL(DISTINCT ((((((((((((rt1.c3)OR(t0.c0)))AND('-159568156')))OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c3)), ((((rt1.c3)OR(rt1.c3)))OR(rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS BLOB) IN ())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON (((((rt1.c0) IS FALSE)))<=((CASE WHEN rt1.c0 THEN t1.c0 ELSE rt1.c1 END))) RIGHT OUTER JOIN t1 ON CASE 0.2988826679847323  WHEN rt1.c3 COLLATE NOCASE THEN (- (rt1.c1)) ELSE ((rt1.c3)|(rt1.c0)) END ORDER BY IFNULL(DISTINCT ((((((((((((rt1.c3)OR(t0.c0)))AND('-159568156')))OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c3)), ((((rt1.c3)OR(rt1.c3)))OR(rt1.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN t0 ON (((((rt1.c0) IS FALSE)))<=((CASE WHEN rt1.c0 THEN t1.c0 ELSE rt1.c1 END))) RIGHT OUTER JOIN t1 ON CASE 0.2988826679847323  WHEN rt1.c3 COLLATE NOCASE THEN (- (rt1.c1)) ELSE ((rt1.c3)|(rt1.c0)) END WHERE ((CAST(rt1.c2 AS BLOB) IN ())) ORDER BY IFNULL(DISTINCT ((((((((((((rt1.c3)OR(t0.c0)))AND('-159568156')))OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c3)), ((((rt1.c3)OR(rt1.c3)))OR(rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS BLOB) IN ())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON (((((rt1.c0) IS FALSE)))<=((CASE WHEN rt1.c0 THEN t1.c0 ELSE rt1.c1 END))) RIGHT OUTER JOIN t1 ON CASE 0.2988826679847323  WHEN rt1.c3 COLLATE NOCASE THEN (- (rt1.c1)) ELSE ((rt1.c3)|(rt1.c0)) END ORDER BY IFNULL(DISTINCT ((((((((((((rt1.c3)OR(t0.c0)))AND('-159568156')))OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c3)), ((((rt1.c3)OR(rt1.c3)))OR(rt1.c0)))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE (((((v0.c2) IS FALSE)) NOT BETWEEN (LTRIM(v0.c4, v0.c2)) AND (v0.c3 COLLATE RTRIM))) ORDER BY CAST(((t0.c0)<(v0.c1)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) IS FALSE)) NOT BETWEEN (LTRIM(v0.c4, v0.c2)) AND (v0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(((t0.c0)<(v0.c1)) AS REAL) DESC);
SELECT COUNT(*) FROM t0, v0 WHERE (((((v0.c2) IS FALSE)) NOT BETWEEN (LTRIM(v0.c4, v0.c2)) AND (v0.c3 COLLATE RTRIM))) ORDER BY CAST(((t0.c0)<(v0.c1)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) IS FALSE)) NOT BETWEEN (LTRIM(v0.c4, v0.c2)) AND (v0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(((t0.c0)<(v0.c1)) AS REAL) DESC);
SELECT COUNT(*) FROM t0, v0 WHERE (((((v0.c2) IS FALSE)) NOT BETWEEN (LTRIM(v0.c4, v0.c2)) AND (v0.c3 COLLATE RTRIM))) ORDER BY CAST(((t0.c0)<(v0.c1)) AS REAL) DESC;
SELECT ALL * FROM v0, t1, rt1 WHERE (CASE rt1.c2  WHEN (~ (v0.c3)) THEN CASE v0.c1  WHEN v0.c4 THEN t1.c0 END ELSE 0.507085244992183 END) ORDER BY t1.c0 ASC  NULLS FIRST, CASE WHEN v0.c2 THEN ((rt1.c3)>>(rt1.c2)) ELSE (~ (v0.c3)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2  WHEN (~ (v0.c3)) THEN CASE v0.c1  WHEN v0.c4 THEN t1.c0 END ELSE 0.507085244992183 END) IS TRUE)  as count FROM v0, t1, rt1 NOT INDEXED ORDER BY t1.c0 ASC  NULLS FIRST, CASE WHEN v0.c2 THEN ((rt1.c3)>>(rt1.c2)) ELSE (~ (v0.c3)) END  NULLS LAST);
SELECT ALL * FROM v0, t1, rt1 WHERE (CASE rt1.c2  WHEN (~ (v0.c3)) THEN CASE v0.c1  WHEN v0.c4 THEN t1.c0 END ELSE 0.507085244992183 END) ORDER BY t1.c0 ASC  NULLS FIRST, CASE WHEN v0.c2 THEN ((rt1.c3)>>(rt1.c2)) ELSE (~ (v0.c3)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2  WHEN (~ (v0.c3)) THEN CASE v0.c1  WHEN v0.c4 THEN t1.c0 END ELSE 0.507085244992183 END) IS TRUE)  as count FROM v0, t1, rt1 NOT INDEXED ORDER BY t1.c0 ASC  NULLS FIRST, CASE WHEN v0.c2 THEN ((rt1.c3)>>(rt1.c2)) ELSE (~ (v0.c3)) END  NULLS LAST);
SELECT ALL * FROM v0, t1, rt1 WHERE (CASE rt1.c2  WHEN (~ (v0.c3)) THEN CASE v0.c1  WHEN v0.c4 THEN t1.c0 END ELSE 0.507085244992183 END) ORDER BY t1.c0 ASC  NULLS FIRST, CASE WHEN v0.c2 THEN ((rt1.c3)>>(rt1.c2)) ELSE (~ (v0.c3)) END  NULLS LAST;
SELECT ALL * FROM v0, rt1, t0 WHERE (((((((rt1.c1)AND(v0.c2)))AND(v0.c2)))GLOB(CAST(rt1.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)AND(v0.c2)))AND(v0.c2)))GLOB(CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM v0, rt1, t0);
SELECT ALL * FROM v0, rt1, t0 WHERE (((((((rt1.c1)AND(v0.c2)))AND(v0.c2)))GLOB(CAST(rt1.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)AND(v0.c2)))AND(v0.c2)))GLOB(CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM v0, rt1, t0);
SELECT ALL * FROM v0, rt1, t0 WHERE (((((((rt1.c1)AND(v0.c2)))AND(v0.c2)))GLOB(CAST(rt1.c3 AS INTEGER))));
SELECT COUNT(*) FROM t0, rt0, v0, t1 WHERE (((((v0.c0 COLLATE NOCASE)OR((- (rt0.c1)))))AND(((v0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE NOCASE)OR((- (rt0.c1)))))AND(((v0.c3) NOT NULL)))) IS TRUE)  as count FROM t0, rt0, v0, t1);
SELECT COUNT(*) FROM t0, rt0, v0, t1 WHERE (((((v0.c0 COLLATE NOCASE)OR((- (rt0.c1)))))AND(((v0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE NOCASE)OR((- (rt0.c1)))))AND(((v0.c3) NOT NULL)))) IS TRUE)  as count FROM t0, rt0, v0, t1);
SELECT COUNT(*) FROM t0, rt0, v0, t1 WHERE (((((v0.c0 COLLATE NOCASE)OR((- (rt0.c1)))))AND(((v0.c3) NOT NULL))));
SELECT * FROM t0, v0, rt1, rt0, t1 WHERE (UNLIKELY(DISTINCT ((((rt1.c1)OR(rt0.c2)))AND(rt1.c2)))) ORDER BY (~ (TRIM(DISTINCT x'', v0.c4)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((((rt1.c1)OR(rt0.c2)))AND(rt1.c2)))) IS TRUE)  as count FROM t0, v0 NOT INDEXED, rt1, rt0, t1 ORDER BY (~ (TRIM(DISTINCT x'', v0.c4))));
SELECT * FROM t0, v0, rt1, rt0, t1 WHERE (UNLIKELY(DISTINCT ((((rt1.c1)OR(rt0.c2)))AND(rt1.c2)))) ORDER BY (~ (TRIM(DISTINCT x'', v0.c4)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((((rt1.c1)OR(rt0.c2)))AND(rt1.c2)))) IS TRUE)  as count FROM t0, v0 NOT INDEXED, rt1, rt0, t1 ORDER BY (~ (TRIM(DISTINCT x'', v0.c4))));
SELECT * FROM t0, v0, rt1, rt0, t1 WHERE (UNLIKELY(DISTINCT ((((rt1.c1)OR(rt0.c2)))AND(rt1.c2)))) ORDER BY (~ (TRIM(DISTINCT x'', v0.c4)));
SELECT * FROM rt1, rt0, t1 WHERE (((((rt0.c1) NOT BETWEEN (rt1.c1) AND (0.648059528567649))) IS FALSE)) ORDER BY CASE NULLIF(rt0.c1, rt1.c2)  WHEN (rt1.c0 IN ()) THEN (~ (rt1.c1)) WHEN ((rt1.c0)>(rt1.c1)) THEN (((rt0.c3))>=((rt1.c1))) WHEN LIKELY(DISTINCT rt0.c1) THEN CAST(t1.c0 AS NUMERIC) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt1.c1) AND (0.648059528567649))) IS FALSE)) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY CASE NULLIF(rt0.c1, rt1.c2)  WHEN (rt1.c0 IN ()) THEN (~ (rt1.c1)) WHEN ((rt1.c0)>(rt1.c1)) THEN (((rt0.c3))>=((rt1.c1))) WHEN LIKELY(DISTINCT rt0.c1) THEN CAST(t1.c0 AS NUMERIC) END ASC);
SELECT * FROM rt1, rt0, t1 WHERE (((((rt0.c1) NOT BETWEEN (rt1.c1) AND (0.648059528567649))) IS FALSE)) ORDER BY CASE NULLIF(rt0.c1, rt1.c2)  WHEN (rt1.c0 IN ()) THEN (~ (rt1.c1)) WHEN ((rt1.c0)>(rt1.c1)) THEN (((rt0.c3))>=((rt1.c1))) WHEN LIKELY(DISTINCT rt0.c1) THEN CAST(t1.c0 AS NUMERIC) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt1.c1) AND (0.648059528567649))) IS FALSE)) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY CASE NULLIF(rt0.c1, rt1.c2)  WHEN (rt1.c0 IN ()) THEN (~ (rt1.c1)) WHEN ((rt1.c0)>(rt1.c1)) THEN (((rt0.c3))>=((rt1.c1))) WHEN LIKELY(DISTINCT rt0.c1) THEN CAST(t1.c0 AS NUMERIC) END ASC);
SELECT * FROM rt1, rt0, t1 WHERE (((((rt0.c1) NOT BETWEEN (rt1.c1) AND (0.648059528567649))) IS FALSE)) ORDER BY CASE NULLIF(rt0.c1, rt1.c2)  WHEN (rt1.c0 IN ()) THEN (~ (rt1.c1)) WHEN ((rt1.c0)>(rt1.c1)) THEN (((rt0.c3))>=((rt1.c1))) WHEN LIKELY(DISTINCT rt0.c1) THEN CAST(t1.c0 AS NUMERIC) END ASC;
SELECT * FROM t0, t1 FULL OUTER JOIN rt0 ON (~ ('-864725645')) LEFT OUTER JOIN v0 ON (('0.013517725855168083') IS TRUE) WHERE (((((((rt0.c2)OR(v0.c4)))AND(v0.c3))) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ORDER BY (CASE WHEN v0.c1 THEN t0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c4 THEN t0.c0 ELSE v0.c3 END IN ());
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(v0.c4)))AND(v0.c3))) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM t0, t1 FULL OUTER JOIN rt0 ON (~ ('-864725645')) LEFT OUTER JOIN v0 ON (('0.013517725855168083') IS TRUE) ORDER BY (CASE WHEN v0.c1 THEN t0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c4 THEN t0.c0 ELSE v0.c3 END IN ()));
SELECT * FROM t0, t1 FULL OUTER JOIN rt0 ON (~ ('-864725645')) LEFT OUTER JOIN v0 ON (('0.013517725855168083') IS TRUE) WHERE (((((((rt0.c2)OR(v0.c4)))AND(v0.c3))) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ORDER BY (CASE WHEN v0.c1 THEN t0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c4 THEN t0.c0 ELSE v0.c3 END IN ());
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(v0.c4)))AND(v0.c3))) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM t0, t1 FULL OUTER JOIN rt0 ON (~ ('-864725645')) LEFT OUTER JOIN v0 ON (('0.013517725855168083') IS TRUE) ORDER BY (CASE WHEN v0.c1 THEN t0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c4 THEN t0.c0 ELSE v0.c3 END IN ()));
SELECT * FROM t0, t1 FULL OUTER JOIN rt0 ON (~ ('-864725645')) LEFT OUTER JOIN v0 ON (('0.013517725855168083') IS TRUE) WHERE (((((((rt0.c2)OR(v0.c4)))AND(v0.c3))) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ORDER BY (CASE WHEN v0.c1 THEN t0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c4 THEN t0.c0 ELSE v0.c3 END IN ());
SELECT * FROM v0, t1, rt1, rt0 FULL OUTER JOIN t0 ON v0.c1 WHERE ((((((0.7983770878057722))==((t1.c0)))) NOT BETWEEN (json_array_length(v0.c4)) AND (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((0.7983770878057722))=((t1.c0)))) NOT BETWEEN (json_array_length(v0.c4)) AND (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt1.c1))))) IS TRUE)  as count FROM v0, t1, rt1, rt0 FULL OUTER JOIN t0 ON v0.c1);
SELECT * FROM v0, t1, rt1, rt0 FULL OUTER JOIN t0 ON v0.c1 WHERE ((((((0.7983770878057722))==((t1.c0)))) NOT BETWEEN (json_array_length(v0.c4)) AND (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((0.7983770878057722))=((t1.c0)))) NOT BETWEEN (json_array_length(v0.c4)) AND (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt1.c1))))) IS TRUE)  as count FROM v0, t1, rt1, rt0 FULL OUTER JOIN t0 ON v0.c1);
SELECT * FROM v0, t1, rt1, rt0 FULL OUTER JOIN t0 ON v0.c1 WHERE ((((((0.7983770878057722))==((t1.c0)))) NOT BETWEEN (json_array_length(v0.c4)) AND (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt1.c1)))));
SELECT ALL * FROM t0, rt0, t1, rt1, v0 WHERE (CASE ((((rt0.c1)OR(NULL)))AND(rt0.c1))  WHEN (+ (t0.c0)) THEN v0.c0 COLLATE NOCASE WHEN ((t0.c0) NOT BETWEEN (v0.c3) AND (rt0.c1)) THEN CASE WHEN v0.c2 THEN t1.c0 END WHEN (- (v0.c2)) THEN ((((rt1.c0)AND(rt0.c3)))OR(t0.c0)) END) ORDER BY ((((rt0.c0 COLLATE RTRIM)AND(CASE rt0.c0  WHEN rt0.c2 THEN rt1.c3 END)))AND((v0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c1)OR(NULL)))AND(rt0.c1))  WHEN (+ (t0.c0)) THEN v0.c0 COLLATE NOCASE WHEN ((t0.c0) NOT BETWEEN (v0.c3) AND (rt0.c1)) THEN CASE WHEN v0.c2 THEN t1.c0 END WHEN (- (v0.c2)) THEN ((((rt1.c0)AND(rt0.c3)))OR(t0.c0)) END) IS TRUE)  as count FROM t0, rt0, t1, rt1, v0 ORDER BY ((((rt0.c0 COLLATE RTRIM)AND(CASE rt0.c0  WHEN rt0.c2 THEN rt1.c3 END)))AND((v0.c2 IN ()))));
SELECT ALL * FROM t0, rt0, t1, rt1, v0 WHERE (CASE ((((rt0.c1)OR(NULL)))AND(rt0.c1))  WHEN (+ (t0.c0)) THEN v0.c0 COLLATE NOCASE WHEN ((t0.c0) NOT BETWEEN (v0.c3) AND (rt0.c1)) THEN CASE WHEN v0.c2 THEN t1.c0 END WHEN (- (v0.c2)) THEN ((((rt1.c0)AND(rt0.c3)))OR(t0.c0)) END) ORDER BY ((((rt0.c0 COLLATE RTRIM)AND(CASE rt0.c0  WHEN rt0.c2 THEN rt1.c3 END)))AND((v0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c1)OR(NULL)))AND(rt0.c1))  WHEN (+ (t0.c0)) THEN v0.c0 COLLATE NOCASE WHEN ((t0.c0) NOT BETWEEN (v0.c3) AND (rt0.c1)) THEN CASE WHEN v0.c2 THEN t1.c0 END WHEN (- (v0.c2)) THEN ((((rt1.c0)AND(rt0.c3)))OR(t0.c0)) END) IS TRUE)  as count FROM t0, rt0, t1, rt1, v0 ORDER BY ((((rt0.c0 COLLATE RTRIM)AND(CASE rt0.c0  WHEN rt0.c2 THEN rt1.c3 END)))AND((v0.c2 IN ()))));
SELECT * FROM rt1 WHERE ((((rt1.c3)AND(rt1.c3)) IN ())) ORDER BY (((x''))>=((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN '-1231033458' THEN rt1.c2 WHEN rt1.c0 THEN 2056105572 WHEN rt1.c2 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)AND(rt1.c3)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((x''))>=((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN '-1231033458' THEN rt1.c2 WHEN rt1.c0 THEN 2056105572 WHEN rt1.c2 THEN rt1.c2 END))));
SELECT * FROM rt1 WHERE ((((rt1.c3)AND(rt1.c3)) IN ())) ORDER BY (((x''))>=((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN '-1231033458' THEN rt1.c2 WHEN rt1.c0 THEN 2056105572 WHEN rt1.c2 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)AND(rt1.c3)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((x''))>=((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN '-1231033458' THEN rt1.c2 WHEN rt1.c0 THEN 2056105572 WHEN rt1.c2 THEN rt1.c2 END))));
SELECT * FROM rt1 WHERE ((((rt1.c3)AND(rt1.c3)) IN ())) ORDER BY (((x''))>=((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN '-1231033458' THEN rt1.c2 WHEN rt1.c0 THEN 2056105572 WHEN rt1.c2 THEN rt1.c2 END)));
SELECT * FROM v0, t1, rt1 WHERE (((((rt1.c2 COLLATE BINARY)AND((- (v0.c3)))))AND(v0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 COLLATE BINARY)AND((- (v0.c3)))))AND(v0.c3 COLLATE BINARY))) IS TRUE)  as count FROM v0, t1, rt1);
SELECT * FROM v0, t1, rt1 WHERE (((((rt1.c2 COLLATE BINARY)AND((- (v0.c3)))))AND(v0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 COLLATE BINARY)AND((- (v0.c3)))))AND(v0.c3 COLLATE BINARY))) IS TRUE)  as count FROM v0, t1, rt1);
SELECT * FROM v0, t1, rt1 WHERE (((((rt1.c2 COLLATE BINARY)AND((- (v0.c3)))))AND(v0.c3 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0, t0 FULL OUTER JOIN t1 ON LIKELY((((rt0.c0))>((rt0.c2)))) WHERE (TYPEOF(DISTINCT ((((t0.c0)OR(rt0.c0)))OR(rt0.c3)))) ORDER BY ((((((t1.c0) IS FALSE))AND(LIKELIHOOD(rt0.c0, 0.282158753351173))))AND(((t0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((((t0.c0)OR(rt0.c0)))OR(rt0.c3)))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN t1 ON LIKELY((((rt0.c0))>((rt0.c2)))) ORDER BY ((((((t1.c0) IS FALSE))AND(LIKELIHOOD(rt0.c0, 0.282158753351173))))AND(((t0.c0) IS TRUE))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 FULL OUTER JOIN t1 ON LIKELY((((rt0.c0))>((rt0.c2)))) WHERE (TYPEOF(DISTINCT ((((t0.c0)OR(rt0.c0)))OR(rt0.c3)))) ORDER BY ((((((t1.c0) IS FALSE))AND(LIKELIHOOD(rt0.c0, 0.282158753351173))))AND(((t0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((((t0.c0)OR(rt0.c0)))OR(rt0.c3)))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN t1 ON LIKELY((((rt0.c0))>((rt0.c2)))) ORDER BY ((((((t1.c0) IS FALSE))AND(LIKELIHOOD(rt0.c0, 0.282158753351173))))AND(((t0.c0) IS TRUE))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 FULL OUTER JOIN t1 ON LIKELY((((rt0.c0))>((rt0.c2)))) WHERE (TYPEOF(DISTINCT ((((t0.c0)OR(rt0.c0)))OR(rt0.c3)))) ORDER BY ((((((t1.c0) IS FALSE))AND(LIKELIHOOD(rt0.c0, 0.282158753351173))))AND(((t0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT * FROM t1 LEFT OUTER JOIN t0 ON CAST(((rt0.c1) BETWEEN (rt1.c3) AND (rt0.c1)) AS BLOB) CROSS JOIN rt1 ON (((rt1.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND ((rt1.c1))) LEFT OUTER JOIN rt0 ON (((('G[') NOT BETWEEN (rt1.c1) AND (t0.c0)))!=((('-174378232')<>(rt1.c1)))) WHERE (UPPER(x'') COLLATE NOCASE) ORDER BY (((rt0.c2 IN ()))>>(TRIM(rt0.c1))) DESC, ((((t1.c0)<=(t0.c0)))|(((t1.c0)>(rt1.c2)))) ASC, x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(x'') COLLATE NOCASE) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON CAST(((rt0.c1) BETWEEN (rt1.c3) AND (rt0.c1)) AS BLOB) CROSS JOIN rt1 ON (((rt1.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND ((rt1.c1))) LEFT OUTER JOIN rt0 ON (((('G[') NOT BETWEEN (rt1.c1) AND (t0.c0)))!=((('-174378232')!=(rt1.c1)))) ORDER BY (((rt0.c2 IN ()))>>(TRIM(rt0.c1))) DESC, ((((t1.c0)<=(t0.c0)))|(((t1.c0)>(rt1.c2)))) ASC, x'' ASC  NULLS FIRST);
SELECT * FROM t1 LEFT OUTER JOIN t0 ON CAST(((rt0.c1) BETWEEN (rt1.c3) AND (rt0.c1)) AS BLOB) CROSS JOIN rt1 ON (((rt1.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND ((rt1.c1))) LEFT OUTER JOIN rt0 ON (((('G[') NOT BETWEEN (rt1.c1) AND (t0.c0)))!=((('-174378232')<>(rt1.c1)))) WHERE (UPPER(x'') COLLATE NOCASE) ORDER BY (((rt0.c2 IN ()))>>(TRIM(rt0.c1))) DESC, ((((t1.c0)<=(t0.c0)))|(((t1.c0)>(rt1.c2)))) ASC, x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(x'') COLLATE NOCASE) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON CAST(((rt0.c1) BETWEEN (rt1.c3) AND (rt0.c1)) AS BLOB) CROSS JOIN rt1 ON (((rt1.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND ((rt1.c1))) LEFT OUTER JOIN rt0 ON (((('G[') NOT BETWEEN (rt1.c1) AND (t0.c0)))!=((('-174378232')!=(rt1.c1)))) ORDER BY (((rt0.c2 IN ()))>>(TRIM(rt0.c1))) DESC, ((((t1.c0)<=(t0.c0)))|(((t1.c0)>(rt1.c2)))) ASC, x'' ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, rt0, t1 RIGHT OUTER JOIN rt1 ON 'S''kzg.%e' WHERE (((((0.560448869469271)OR(v0.c0)))OR(((rt1.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((0.560448869469271)OR(v0.c0)))OR(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM v0, t0, rt0, t1 RIGHT OUTER JOIN rt1 ON 'S''kzg.%e');
SELECT COUNT(*) FROM v0, t0, rt0, t1 RIGHT OUTER JOIN rt1 ON 'S''kzg.%e' WHERE (((((0.560448869469271)OR(v0.c0)))OR(((rt1.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((0.560448869469271)OR(v0.c0)))OR(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM v0, t0, rt0, t1 RIGHT OUTER JOIN rt1 ON 'S''kzg.%e');
SELECT COUNT(*) FROM v0, t0, rt0, t1 RIGHT OUTER JOIN rt1 ON 'S''kzg.%e' WHERE (((((0.560448869469271)OR(v0.c0)))OR(((rt1.c3) IS TRUE))));
SELECT * FROM rt0, t0, v0, rt1 WHERE (((((rt1.c0)LIKE(rt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)LIKE(rt1.c0))) ISNULL)) IS TRUE)  as count FROM rt0, t0, v0, rt1);
SELECT * FROM rt0, t0, v0, rt1 WHERE (((((rt1.c0)LIKE(rt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)LIKE(rt1.c0))) ISNULL)) IS TRUE)  as count FROM rt0, t0, v0, rt1);
SELECT * FROM rt0, t0, v0, rt1 WHERE (((((rt1.c0)LIKE(rt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM t0 INNER JOIN t1 ON (NOT ((~ ('699094462')))) LEFT OUTER JOIN v0 ON ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c3))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND ('(/'))) AND ((t0.c0 IN (v0.c2)))) LEFT OUTER JOIN rt0 ON (((~ (t0.c0)))GLOB('.IC')) WHERE ((CAST(v0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM t0 INNER JOIN t1 ON (NOT ((~ ('699094462')))) LEFT OUTER JOIN v0 ON ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c3))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND ('(/'))) AND ((t0.c0 IN (v0.c2)))) LEFT OUTER JOIN rt0 ON (((~ (t0.c0)))GLOB('.IC')));
SELECT ALL COUNT(*) FROM t0 INNER JOIN t1 ON (NOT ((~ ('699094462')))) LEFT OUTER JOIN v0 ON ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c3))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND ('(/'))) AND ((t0.c0 IN (v0.c2)))) LEFT OUTER JOIN rt0 ON (((~ (t0.c0)))GLOB('.IC')) WHERE ((CAST(v0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM t0 INNER JOIN t1 ON (NOT ((~ ('699094462')))) LEFT OUTER JOIN v0 ON ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c3))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND ('(/'))) AND ((t0.c0 IN (v0.c2)))) LEFT OUTER JOIN rt0 ON (((~ (t0.c0)))GLOB('.IC')));
SELECT ALL COUNT(*) FROM t0, t1, rt1 INDEXED BY i66 WHERE (((CAST(rt1.c1 AS INTEGER))!=((((rt1.c1)) BETWEEN ((t0.c0)) AND ((t1.c0)))))) ORDER BY (CAST(NULL AS BLOB) IN ())  NULLS LAST, HEX(DISTINCT CASE rt1.c1  WHEN NULL THEN t1.c0 ELSE rt1.c0 END)  NULLS FIRST, CASE WHEN CAST(t1.c0 AS REAL) THEN ((((rt1.c1)AND(rt1.c2)))AND(rt1.c1)) ELSE (rt1.c1 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS INTEGER))<>((((rt1.c1)) BETWEEN ((t0.c0)) AND ((t1.c0)))))) IS TRUE)  as count FROM t0, t1, rt1 INDEXED BY i66 ORDER BY (CAST(NULL AS BLOB) IN ())  NULLS LAST, HEX(DISTINCT CASE rt1.c1  WHEN NULL THEN t1.c0 ELSE rt1.c0 END)  NULLS FIRST, CASE WHEN CAST(t1.c0 AS REAL) THEN ((((rt1.c1)AND(rt1.c2)))AND(rt1.c1)) ELSE (rt1.c1 IN ()) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1, rt1 INDEXED BY i66 WHERE (((CAST(rt1.c1 AS INTEGER))!=((((rt1.c1)) BETWEEN ((t0.c0)) AND ((t1.c0)))))) ORDER BY (CAST(NULL AS BLOB) IN ())  NULLS LAST, HEX(DISTINCT CASE rt1.c1  WHEN NULL THEN t1.c0 ELSE rt1.c0 END)  NULLS FIRST, CASE WHEN CAST(t1.c0 AS REAL) THEN ((((rt1.c1)AND(rt1.c2)))AND(rt1.c1)) ELSE (rt1.c1 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS INTEGER))<>((((rt1.c1)) BETWEEN ((t0.c0)) AND ((t1.c0)))))) IS TRUE)  as count FROM t0, t1, rt1 INDEXED BY i66 ORDER BY (CAST(NULL AS BLOB) IN ())  NULLS LAST, HEX(DISTINCT CASE rt1.c1  WHEN NULL THEN t1.c0 ELSE rt1.c0 END)  NULLS FIRST, CASE WHEN CAST(t1.c0 AS REAL) THEN ((((rt1.c1)AND(rt1.c2)))AND(rt1.c1)) ELSE (rt1.c1 IN ()) END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, t1, rt1, v0 INNER JOIN rt0 ON CASE (+ (rt1.c2))  WHEN (((v0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN (~ (rt1.c1)) END WHERE (CAST(CASE WHEN t1.c0 THEN NULL END AS INTEGER)) ORDER BY (((((rt1.c0) IS TRUE), '-59884512', -1153882933))<>((INSTR(rt0.c3, t0.c0), (((NULL)) BETWEEN ((NULL)) AND ((rt0.c1))), '-1407113796'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t1.c0 THEN NULL END AS INTEGER)) IS TRUE)  as count FROM t0, t1, rt1, v0 INNER JOIN rt0 ON CASE (+ (rt1.c2))  WHEN (((v0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN (~ (rt1.c1)) END ORDER BY (((((rt1.c0) IS TRUE), '-59884512', -1153882933))!=((INSTR(rt0.c3, t0.c0), (((NULL)) BETWEEN ((NULL)) AND ((rt0.c1))), '-1407113796'))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1, rt1, v0 INNER JOIN rt0 ON CASE (+ (rt1.c2))  WHEN (((v0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN (~ (rt1.c1)) END WHERE (CAST(CASE WHEN t1.c0 THEN NULL END AS INTEGER)) ORDER BY (((((rt1.c0) IS TRUE), '-59884512', -1153882933))<>((INSTR(rt0.c3, t0.c0), (((NULL)) BETWEEN ((NULL)) AND ((rt0.c1))), '-1407113796'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t1.c0 THEN NULL END AS INTEGER)) IS TRUE)  as count FROM t0, t1, rt1, v0 INNER JOIN rt0 ON CASE (+ (rt1.c2))  WHEN (((v0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN (~ (rt1.c1)) END ORDER BY (((((rt1.c0) IS TRUE), '-59884512', -1153882933))!=((INSTR(rt0.c3, t0.c0), (((NULL)) BETWEEN ((NULL)) AND ((rt0.c1))), '-1407113796'))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1, rt1, v0 INNER JOIN rt0 ON CASE (+ (rt1.c2))  WHEN (((v0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN (~ (rt1.c1)) END WHERE (CAST(CASE WHEN t1.c0 THEN NULL END AS INTEGER)) ORDER BY (((((rt1.c0) IS TRUE), '-59884512', -1153882933))<>((INSTR(rt0.c3, t0.c0), (((NULL)) BETWEEN ((NULL)) AND ((rt0.c1))), '-1407113796'))) DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt0, t1, rt1 CROSS JOIN t0 ON (((rt0.c0 IN ())) IS TRUE) WHERE (((x'4358') IS TRUE));
SELECT SUM(count) FROM (SELECT ((((x'4358') IS TRUE)) IS TRUE)  as count FROM v0, rt0, t1, rt1 NOT INDEXED CROSS JOIN t0 ON (((rt0.c0 IN ())) IS TRUE));
SELECT ALL * FROM v0, rt0, t1, rt1 CROSS JOIN t0 ON (((rt0.c0 IN ())) IS TRUE) WHERE (((x'4358') IS TRUE));
SELECT SUM(count) FROM (SELECT ((((x'4358') IS TRUE)) IS TRUE)  as count FROM v0, rt0, t1, rt1 NOT INDEXED CROSS JOIN t0 ON (((rt0.c0 IN ())) IS TRUE));
SELECT ALL * FROM v0, rt0, t1, rt1 CROSS JOIN t0 ON (((rt0.c0 IN ())) IS TRUE) WHERE (((x'4358') IS TRUE));
SELECT COUNT(*) FROM t0, t1 RIGHT OUTER JOIN v0 ON v0.c2 WHERE ((((((((-1145799547)AND(t0.c0)))OR(t0.c0)), ((v0.c0) BETWEEN (v0.c3) AND (t1.c0)), ((v0.c2) BETWEEN (x'') AND (t0.c0))))<=((((v0.c2) NOT BETWEEN (v0.c4) AND (t1.c0)), ((v0.c2) IS FALSE), ((((((((t0.c0)AND(v0.c3)))OR(t0.c0)))AND(v0.c2)))AND(v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((((-1145799547)AND(t0.c0)))OR(t0.c0)), ((v0.c0) BETWEEN (v0.c3) AND (t1.c0)), ((v0.c2) BETWEEN (x'') AND (t0.c0))))<=((((v0.c2) NOT BETWEEN (v0.c4) AND (t1.c0)), ((v0.c2) IS FALSE), ((((((((t0.c0)AND(v0.c3)))OR(t0.c0)))AND(v0.c2)))AND(v0.c1)))))) IS TRUE)  as count FROM t0, t1 RIGHT OUTER JOIN v0 ON v0.c2);
SELECT COUNT(*) FROM t0, t1 RIGHT OUTER JOIN v0 ON v0.c2 WHERE ((((((((-1145799547)AND(t0.c0)))OR(t0.c0)), ((v0.c0) BETWEEN (v0.c3) AND (t1.c0)), ((v0.c2) BETWEEN (x'') AND (t0.c0))))<=((((v0.c2) NOT BETWEEN (v0.c4) AND (t1.c0)), ((v0.c2) IS FALSE), ((((((((t0.c0)AND(v0.c3)))OR(t0.c0)))AND(v0.c2)))AND(v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((((-1145799547)AND(t0.c0)))OR(t0.c0)), ((v0.c0) BETWEEN (v0.c3) AND (t1.c0)), ((v0.c2) BETWEEN (x'') AND (t0.c0))))<=((((v0.c2) NOT BETWEEN (v0.c4) AND (t1.c0)), ((v0.c2) IS FALSE), ((((((((t0.c0)AND(v0.c3)))OR(t0.c0)))AND(v0.c2)))AND(v0.c1)))))) IS TRUE)  as count FROM t0, t1 RIGHT OUTER JOIN v0 ON v0.c2);
SELECT COUNT(*) FROM t0, t1 RIGHT OUTER JOIN v0 ON v0.c2 WHERE ((((((((-1145799547)AND(t0.c0)))OR(t0.c0)), ((v0.c0) BETWEEN (v0.c3) AND (t1.c0)), ((v0.c2) BETWEEN (x'') AND (t0.c0))))<=((((v0.c2) NOT BETWEEN (v0.c4) AND (t1.c0)), ((v0.c2) IS FALSE), ((((((((t0.c0)AND(v0.c3)))OR(t0.c0)))AND(v0.c2)))AND(v0.c1))))));
SELECT * FROM t0, t1, rt1 FULL OUTER JOIN v0 ON (NULL COLLATE BINARY IN (((rt1.c3) BETWEEN (v0.c1) AND (1.604476722E9)))) WHERE ((((('')OR(((v0.c1) BETWEEN (t1.c0) AND (v0.c4)))))OR((((rt1.c0))=((x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((('')OR(((v0.c1) BETWEEN (t1.c0) AND (v0.c4)))))OR((((rt1.c0))==((x'')))))) IS TRUE)  as count FROM t0, t1, rt1 FULL OUTER JOIN v0 ON (NULL COLLATE BINARY IN (((rt1.c3) BETWEEN (v0.c1) AND (1.604476722E9)))));
SELECT * FROM t0, t1, rt1 FULL OUTER JOIN v0 ON (NULL COLLATE BINARY IN (((rt1.c3) BETWEEN (v0.c1) AND (1.604476722E9)))) WHERE ((((('')OR(((v0.c1) BETWEEN (t1.c0) AND (v0.c4)))))OR((((rt1.c0))=((x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((('')OR(((v0.c1) BETWEEN (t1.c0) AND (v0.c4)))))OR((((rt1.c0))==((x'')))))) IS TRUE)  as count FROM t0, t1, rt1 FULL OUTER JOIN v0 ON (NULL COLLATE BINARY IN (((rt1.c3) BETWEEN (v0.c1) AND (1.604476722E9)))));
SELECT * FROM t0, t1, rt1 FULL OUTER JOIN v0 ON (NULL COLLATE BINARY IN (((rt1.c3) BETWEEN (v0.c1) AND (1.604476722E9)))) WHERE ((((('')OR(((v0.c1) BETWEEN (t1.c0) AND (v0.c4)))))OR((((rt1.c0))=((x''))))));
SELECT COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS REAL)) ORDER BY (+ (((t0.c0)&(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS BLOB) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c0)&(t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS REAL)) ORDER BY (+ (((t0.c0)&(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS BLOB) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c0)&(t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS REAL)) ORDER BY (+ (((t0.c0)&(t0.c0))));
SELECT ALL * FROM rt0, v0, t1 INDEXED BY i50, t0, rt1 WHERE (CAST(((v0.c3)&(v0.c4)) AS NUMERIC)) ORDER BY ((CASE WHEN v0.c0 THEN rt1.c3 END)>=(0X3f71dca3));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c3)&(v0.c4)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0, t1 INDEXED BY i50, t0, rt1 ORDER BY ((CASE WHEN v0.c0 THEN rt1.c3 END)>=(0x3f71dca3)));
SELECT ALL * FROM rt0, v0, t1 INDEXED BY i50, t0, rt1 WHERE (CAST(((v0.c3)&(v0.c4)) AS NUMERIC)) ORDER BY ((CASE WHEN v0.c0 THEN rt1.c3 END)>=(0X3f71dca3));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c3)&(v0.c4)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0, t1 INDEXED BY i50, t0, rt1 ORDER BY ((CASE WHEN v0.c0 THEN rt1.c3 END)>=(0x3f71dca3)));
SELECT ALL * FROM rt0, v0, t1 INDEXED BY i50, t0, rt1 WHERE (CAST(((v0.c3)&(v0.c4)) AS NUMERIC)) ORDER BY ((CASE WHEN v0.c0 THEN rt1.c3 END)>=(0X3f71dca3));
SELECT COUNT(*) FROM rt0, t1, t0 WHERE (CAST(NULL AS BLOB)) ORDER BY ((((x'')OR('}')))OR((((0.9084466308853046)) NOT BETWEEN (('0.8514878836760156')) AND ((t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY ((((x'')OR('}')))OR((((0.9084466308853046)) NOT BETWEEN (('0.8514878836760156')) AND ((t0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1, t0 WHERE (CAST(NULL AS BLOB)) ORDER BY ((((x'')OR('}')))OR((((0.9084466308853046)) NOT BETWEEN (('0.8514878836760156')) AND ((t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt0, t1, t0 ORDER BY ((((x'')OR('}')))OR((((0.9084466308853046)) NOT BETWEEN (('0.8514878836760156')) AND ((t0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1, t0 WHERE (CAST(NULL AS BLOB)) ORDER BY ((((x'')OR('}')))OR((((0.9084466308853046)) NOT BETWEEN (('0.8514878836760156')) AND ((t0.c0)))))  NULLS FIRST;
SELECT * FROM v0, rt0, t0, t1 WHERE (((((rt0.c1)) NOT BETWEEN ((v0.c4)) AND ((0x28704467))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) NOT BETWEEN ((v0.c4)) AND ((0x28704467))) IN ())) IS TRUE)  as count FROM v0, rt0, t0, t1);
SELECT * FROM v0, rt0, t0, t1 WHERE (((((rt0.c1)) NOT BETWEEN ((v0.c4)) AND ((0x28704467))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) NOT BETWEEN ((v0.c4)) AND ((0x28704467))) IN ())) IS TRUE)  as count FROM v0, rt0, t0, t1);
SELECT * FROM v0, rt0, t0, t1 WHERE (((((rt0.c1)) NOT BETWEEN ((v0.c4)) AND ((0x28704467))) IN ()));
SELECT * FROM t1 NATURAL JOIN t0 WHERE ((((t1.c0)) BETWEEN (((('2120526126') BETWEEN (t1.c0) AND (t1.c0)))) AND ((t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) BETWEEN (((('2120526126') BETWEEN (t1.c0) AND (t1.c0)))) AND ((t1.c0)))) IS TRUE)  as count FROM t1 NATURAL JOIN t0);
SELECT * FROM t1 NATURAL JOIN t0 WHERE ((((t1.c0)) BETWEEN (((('2120526126') BETWEEN (t1.c0) AND (t1.c0)))) AND ((t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) BETWEEN (((('2120526126') BETWEEN (t1.c0) AND (t1.c0)))) AND ((t1.c0)))) IS TRUE)  as count FROM t1 NATURAL JOIN t0);
SELECT * FROM t1 NATURAL JOIN t0 WHERE ((((t1.c0)) BETWEEN (((('2120526126') BETWEEN (t1.c0) AND (t1.c0)))) AND ((t1.c0))));
SELECT * FROM t1, t0 INNER JOIN rt1 ON CAST(((v0.c3)&(rt1.c1)) AS BLOB) LEFT OUTER JOIN rt0 ON rt1.c0 RIGHT OUTER JOIN v0 ON (LIKELIHOOD(t0.c0, 0.354322992291771) IN (((rt0.c3)OR(v0.c4)))) WHERE ((((rt1.c1 IN ())) ISNULL)) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c0 END) IS TRUE) ASC  NULLS LAST, x'' ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ())) ISNULL)) IS TRUE)  as count FROM t1, t0 INNER JOIN rt1 ON CAST(((v0.c3)&(rt1.c1)) AS BLOB) LEFT OUTER JOIN rt0 ON rt1.c0 RIGHT OUTER JOIN v0 ON (LIKELIHOOD(t0.c0, 0.354322992291771) IN (((rt0.c3)OR(v0.c4)))) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c0 END) IS TRUE) ASC  NULLS LAST, x'' ASC);
SELECT * FROM t1, t0 INNER JOIN rt1 ON CAST(((v0.c3)&(rt1.c1)) AS BLOB) LEFT OUTER JOIN rt0 ON rt1.c0 RIGHT OUTER JOIN v0 ON (LIKELIHOOD(t0.c0, 0.354322992291771) IN (((rt0.c3)OR(v0.c4)))) WHERE ((((rt1.c1 IN ())) ISNULL)) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c0 END) IS TRUE) ASC  NULLS LAST, x'' ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ())) ISNULL)) IS TRUE)  as count FROM t1, t0 INNER JOIN rt1 ON CAST(((v0.c3)&(rt1.c1)) AS BLOB) LEFT OUTER JOIN rt0 ON rt1.c0 RIGHT OUTER JOIN v0 ON (LIKELIHOOD(t0.c0, 0.354322992291771) IN (((rt0.c3)OR(v0.c4)))) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c0 END) IS TRUE) ASC  NULLS LAST, x'' ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((((v0.c3)AND(rt0.c0)))AND('zi0L')))AND(v0.c3)))AND(v0.c3)))IS NOT(((v0.c4) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c3)AND(rt0.c0)))AND('zi0L')))AND(v0.c3)))AND(v0.c3)))IS NOT(((v0.c4) IS FALSE)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((((v0.c3)AND(rt0.c0)))AND('zi0L')))AND(v0.c3)))AND(v0.c3)))IS NOT(((v0.c4) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c3)AND(rt0.c0)))AND('zi0L')))AND(v0.c3)))AND(v0.c3)))IS NOT(((v0.c4) IS FALSE)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((((v0.c3)AND(rt0.c0)))AND('zi0L')))AND(v0.c3)))AND(v0.c3)))IS NOT(((v0.c4) IS FALSE))));
SELECT * FROM t0, v0 LEFT OUTER JOIN rt1 ON (- (((t0.c0) ISNULL))) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN rt1 ON (- (((t0.c0) ISNULL))));
SELECT * FROM t0, v0 LEFT OUTER JOIN rt1 ON (- (((t0.c0) ISNULL))) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN rt1 ON (- (((t0.c0) ISNULL))));
SELECT * FROM t0, v0 LEFT OUTER JOIN rt1 ON (- (((t0.c0) ISNULL))) WHERE (rt1.c3);
SELECT * FROM rt1, rt0, v0, t1 WHERE ((((~ (rt0.c1)))>=(UNLIKELY(rt0.c3)))) ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (NULL)) THEN 0.8310920238404219 END, ((((((((v0.c2)OR(v0.c4)))AND(t1.c0)))AND(rt1.c2)))OR(rt0.c2)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))>=(UNLIKELY(rt0.c3)))) IS TRUE)  as count FROM rt1, rt0, v0, t1 ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (NULL)) THEN 0.8310920238404219 END, ((((((((v0.c2)OR(v0.c4)))AND(t1.c0)))AND(rt1.c2)))OR(rt0.c2)) COLLATE BINARY ASC);
SELECT * FROM rt1, rt0, v0, t1 WHERE ((((~ (rt0.c1)))>=(UNLIKELY(rt0.c3)))) ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (NULL)) THEN 0.8310920238404219 END, ((((((((v0.c2)OR(v0.c4)))AND(t1.c0)))AND(rt1.c2)))OR(rt0.c2)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))>=(UNLIKELY(rt0.c3)))) IS TRUE)  as count FROM rt1, rt0, v0, t1 ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (NULL)) THEN 0.8310920238404219 END, ((((((((v0.c2)OR(v0.c4)))AND(t1.c0)))AND(rt1.c2)))OR(rt0.c2)) COLLATE BINARY ASC);
SELECT * FROM rt1, rt0, v0, t1 WHERE ((((~ (rt0.c1)))>=(UNLIKELY(rt0.c3)))) ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (NULL)) THEN 0.8310920238404219 END, ((((((((v0.c2)OR(v0.c4)))AND(t1.c0)))AND(rt1.c2)))OR(rt0.c2)) COLLATE BINARY ASC;
SELECT COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON CASE ((rt1.c1) NOT BETWEEN (' !') AND (t0.c0))  WHEN NULLIF(DISTINCT rt0.c1, t0.c0) THEN ((rt0.c2)GLOB(t0.c0)) WHEN ((t0.c0) NOTNULL) THEN rt0.c1 COLLATE BINARY WHEN ((rt1.c2)<(rt0.c1)) THEN rt0.c1 COLLATE RTRIM ELSE x'' END WHERE ((((((t0.c0)LIKE(t0.c0))))>=((CASE WHEN rt1.c0 THEN 0Xffffffff97ffe61b END)))) ORDER BY ((((x'cfa5')OR((((rt0.c3, rt1.c2, NULL))<=((rt1.c2, rt0.c1, rt0.c2))))))AND(((rt0.c0) BETWEEN (t0.c0) AND (x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)LIKE(t0.c0))))>=((CASE WHEN rt1.c0 THEN 0xffffffff97ffe61b END)))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON CASE ((rt1.c1) NOT BETWEEN (' !') AND (t0.c0))  WHEN NULLIF(DISTINCT rt0.c1, t0.c0) THEN ((rt0.c2)GLOB(t0.c0)) WHEN ((t0.c0) NOTNULL) THEN rt0.c1 COLLATE BINARY WHEN ((rt1.c2)<(rt0.c1)) THEN rt0.c1 COLLATE RTRIM ELSE x'' END ORDER BY ((((x'cfa5')OR((((rt0.c3, rt1.c2, NULL))<=((rt1.c2, rt0.c1, rt0.c2))))))AND(((rt0.c0) BETWEEN (t0.c0) AND (x'')))) DESC);
SELECT COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON CASE ((rt1.c1) NOT BETWEEN (' !') AND (t0.c0))  WHEN NULLIF(DISTINCT rt0.c1, t0.c0) THEN ((rt0.c2)GLOB(t0.c0)) WHEN ((t0.c0) NOTNULL) THEN rt0.c1 COLLATE BINARY WHEN ((rt1.c2)<(rt0.c1)) THEN rt0.c1 COLLATE RTRIM ELSE x'' END WHERE ((((((t0.c0)LIKE(t0.c0))))>=((CASE WHEN rt1.c0 THEN 0Xffffffff97ffe61b END)))) ORDER BY ((((x'cfa5')OR((((rt0.c3, rt1.c2, NULL))<=((rt1.c2, rt0.c1, rt0.c2))))))AND(((rt0.c0) BETWEEN (t0.c0) AND (x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)LIKE(t0.c0))))>=((CASE WHEN rt1.c0 THEN 0xffffffff97ffe61b END)))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON CASE ((rt1.c1) NOT BETWEEN (' !') AND (t0.c0))  WHEN NULLIF(DISTINCT rt0.c1, t0.c0) THEN ((rt0.c2)GLOB(t0.c0)) WHEN ((t0.c0) NOTNULL) THEN rt0.c1 COLLATE BINARY WHEN ((rt1.c2)<(rt0.c1)) THEN rt0.c1 COLLATE RTRIM ELSE x'' END ORDER BY ((((x'cfa5')OR((((rt0.c3, rt1.c2, NULL))<=((rt1.c2, rt0.c1, rt0.c2))))))AND(((rt0.c0) BETWEEN (t0.c0) AND (x'')))) DESC);
SELECT COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON CASE ((rt1.c1) NOT BETWEEN (' !') AND (t0.c0))  WHEN NULLIF(DISTINCT rt0.c1, t0.c0) THEN ((rt0.c2)GLOB(t0.c0)) WHEN ((t0.c0) NOTNULL) THEN rt0.c1 COLLATE BINARY WHEN ((rt1.c2)<(rt0.c1)) THEN rt0.c1 COLLATE RTRIM ELSE x'' END WHERE ((((((t0.c0)LIKE(t0.c0))))>=((CASE WHEN rt1.c0 THEN 0Xffffffff97ffe61b END)))) ORDER BY ((((x'cfa5')OR((((rt0.c3, rt1.c2, NULL))<=((rt1.c2, rt0.c1, rt0.c2))))))AND(((rt0.c0) BETWEEN (t0.c0) AND (x'')))) DESC;
SELECT ALL COUNT(*) FROM t0, t1, rt0, v0 WHERE (NULL COLLATE RTRIM) ORDER BY ((((((((rt0.c3)AND((+ (t1.c0)))))AND(JULIANDAY(v0.c2, v0.c4, t0.c0))))AND(((((v0.c2)OR(0.3468996089916966)))AND(v0.c3)))))OR(v0.c3)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM t0, t1, rt0, v0 ORDER BY ((((((((rt0.c3)AND((+ (t1.c0)))))AND(JULIANDAY(v0.c2, v0.c4, t0.c0))))AND(((((v0.c2)OR(0.3468996089916966)))AND(v0.c3)))))OR(v0.c3)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1, rt0, v0 WHERE (NULL COLLATE RTRIM) ORDER BY ((((((((rt0.c3)AND((+ (t1.c0)))))AND(JULIANDAY(v0.c2, v0.c4, t0.c0))))AND(((((v0.c2)OR(0.3468996089916966)))AND(v0.c3)))))OR(v0.c3)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM t0, t1, rt0, v0 ORDER BY ((((((((rt0.c3)AND((+ (t1.c0)))))AND(JULIANDAY(v0.c2, v0.c4, t0.c0))))AND(((((v0.c2)OR(0.3468996089916966)))AND(v0.c3)))))OR(v0.c3)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1, rt0, v0 WHERE (NULL COLLATE RTRIM) ORDER BY ((((((((rt0.c3)AND((+ (t1.c0)))))AND(JULIANDAY(v0.c2, v0.c4, t0.c0))))AND(((((v0.c2)OR(0.3468996089916966)))AND(v0.c3)))))OR(v0.c3)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON CASE WHEN CAST(0.17823829029247995 AS BLOB) THEN ((v0.c0) NOTNULL) ELSE ((t1.c0) BETWEEN (rt0.c0) AND (v0.c3)) END LEFT OUTER JOIN v0 ON TYPEOF(CAST(rt0.c0 AS NUMERIC)) WHERE ((((CASE WHEN v0.c3 THEN rt0.c0 END))!=((CASE rt0.c2  WHEN v0.c3 THEN rt0.c3 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN v0.c3 THEN rt0.c0 END))<>((CASE rt0.c2  WHEN v0.c3 THEN rt0.c3 ELSE rt0.c0 END)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON CASE WHEN CAST(0.17823829029247995 AS BLOB) THEN ((v0.c0) NOTNULL) ELSE ((t1.c0) BETWEEN (rt0.c0) AND (v0.c3)) END LEFT OUTER JOIN v0 ON TYPEOF(CAST(rt0.c0 AS NUMERIC)));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON CASE WHEN CAST(0.17823829029247995 AS BLOB) THEN ((v0.c0) NOTNULL) ELSE ((t1.c0) BETWEEN (rt0.c0) AND (v0.c3)) END LEFT OUTER JOIN v0 ON TYPEOF(CAST(rt0.c0 AS NUMERIC)) WHERE ((((CASE WHEN v0.c3 THEN rt0.c0 END))!=((CASE rt0.c2  WHEN v0.c3 THEN rt0.c3 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN v0.c3 THEN rt0.c0 END))<>((CASE rt0.c2  WHEN v0.c3 THEN rt0.c3 ELSE rt0.c0 END)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON CASE WHEN CAST(0.17823829029247995 AS BLOB) THEN ((v0.c0) NOTNULL) ELSE ((t1.c0) BETWEEN (rt0.c0) AND (v0.c3)) END LEFT OUTER JOIN v0 ON TYPEOF(CAST(rt0.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM t0, rt1, t1, v0 WHERE ((('-441716469') NOT BETWEEN (x'') AND (CAST(t0.c0 AS TEXT)))) ORDER BY ((((t1.c0) NOT NULL)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('-441716469') NOT BETWEEN (x'') AND (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, rt1, t1, v0 ORDER BY ((((t1.c0) NOT NULL)) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, t1, v0 WHERE ((('-441716469') NOT BETWEEN (x'') AND (CAST(t0.c0 AS TEXT)))) ORDER BY ((((t1.c0) NOT NULL)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('-441716469') NOT BETWEEN (x'') AND (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, rt1, t1, v0 ORDER BY ((((t1.c0) NOT NULL)) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, t1, v0 WHERE ((('-441716469') NOT BETWEEN (x'') AND (CAST(t0.c0 AS TEXT)))) ORDER BY ((((t1.c0) NOT NULL)) NOT NULL)  NULLS LAST;
SELECT * FROM v0 WHERE (NULL) ORDER BY (((v0.c1) NOT NULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1) NOT NULL) IN ()) DESC);
SELECT * FROM v0 WHERE (NULL) ORDER BY (((v0.c1) NOT NULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1) NOT NULL) IN ()) DESC);
SELECT * FROM v0 WHERE (NULL) ORDER BY (((v0.c1) NOT NULL) IN ()) DESC;
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN v0 ON ((rt0.c2 COLLATE NOCASE)GLOB((((t1.c0, v0.c0, NULL)) NOT BETWEEN ((v0.c3, v0.c3, t0.c0)) AND ((t1.c0, v0.c4, rt0.c1))))) CROSS JOIN t1 ON (((((v0.c0, v0.c2, v0.c2))<((0.09381374355991323, v0.c4, '\rM{')))) BETWEEN ((((rt0.c3))=((rt0.c1)))) AND (CASE WHEN NULL THEN rt0.c1 WHEN 4.03783182E8 THEN 0.5856128617020457 WHEN v0.c2 THEN NULL ELSE v0.c3 END)) WHERE (CASE WHEN ((((((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))OR(NULL)))AND('[B')) THEN ((NULL)%(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))OR(NULL)))AND('[B')) THEN ((NULL)%(rt0.c3)) END) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN v0 ON ((rt0.c2 COLLATE NOCASE)GLOB((((t1.c0, v0.c0, NULL)) NOT BETWEEN ((v0.c3, v0.c3, t0.c0)) AND ((t1.c0, v0.c4, rt0.c1))))) CROSS JOIN t1 ON (((((v0.c0, v0.c2, v0.c2))<((0.09381374355991323, v0.c4, '\rM{')))) BETWEEN ((((rt0.c3))=((rt0.c1)))) AND (CASE WHEN NULL THEN rt0.c1 WHEN 4.03783182E8 THEN 0.5856128617020457 WHEN v0.c2 THEN NULL ELSE v0.c3 END)));
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN v0 ON ((rt0.c2 COLLATE NOCASE)GLOB((((t1.c0, v0.c0, NULL)) NOT BETWEEN ((v0.c3, v0.c3, t0.c0)) AND ((t1.c0, v0.c4, rt0.c1))))) CROSS JOIN t1 ON (((((v0.c0, v0.c2, v0.c2))<((0.09381374355991323, v0.c4, '\rM{')))) BETWEEN ((((rt0.c3))=((rt0.c1)))) AND (CASE WHEN NULL THEN rt0.c1 WHEN 4.03783182E8 THEN 0.5856128617020457 WHEN v0.c2 THEN NULL ELSE v0.c3 END)) WHERE (CASE WHEN ((((((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))OR(NULL)))AND('[B')) THEN ((NULL)%(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))OR(NULL)))AND('[B')) THEN ((NULL)%(rt0.c3)) END) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN v0 ON ((rt0.c2 COLLATE NOCASE)GLOB((((t1.c0, v0.c0, NULL)) NOT BETWEEN ((v0.c3, v0.c3, t0.c0)) AND ((t1.c0, v0.c4, rt0.c1))))) CROSS JOIN t1 ON (((((v0.c0, v0.c2, v0.c2))<((0.09381374355991323, v0.c4, '\rM{')))) BETWEEN ((((rt0.c3))=((rt0.c1)))) AND (CASE WHEN NULL THEN rt0.c1 WHEN 4.03783182E8 THEN 0.5856128617020457 WHEN v0.c2 THEN NULL ELSE v0.c3 END)));
SELECT * FROM t0, v0, rt1, rt0, t1 WHERE (((t1.c0)GLOB((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((t1.c0)GLOB((- (rt0.c2))))) IS TRUE)  as count FROM t0, v0, rt1, rt0, t1);
SELECT * FROM t0, v0, rt1, rt0, t1 WHERE (((t1.c0)GLOB((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((t1.c0)GLOB((- (rt0.c2))))) IS TRUE)  as count FROM t0, v0, rt1, rt0, t1);
SELECT * FROM t0, v0, rt1, rt0, t1 WHERE (((t1.c0)GLOB((- (rt0.c2)))));
SELECT ALL COUNT(*) FROM t0, v0, rt0, t1 WHERE (TRIM(((rt0.c3)==(v0.c2)))) ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(((t1.c0)>=(rt0.c0)))))OR(CASE rt0.c2  WHEN rt0.c1 THEN 'e?4v\nh,' END)))AND(CAST(v0.c0 AS TEXT))))OR(''));
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c3)==(v0.c2)))) IS TRUE)  as count FROM t0, v0, rt0, t1 ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(((t1.c0)>=(rt0.c0)))))OR(CASE rt0.c2  WHEN rt0.c1 THEN 'e?4v\nh,' END)))AND(CAST(v0.c0 AS TEXT))))OR('')));
SELECT ALL COUNT(*) FROM t0, v0, rt0, t1 WHERE (TRIM(((rt0.c3)==(v0.c2)))) ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(((t1.c0)>=(rt0.c0)))))OR(CASE rt0.c2  WHEN rt0.c1 THEN 'e?4v\nh,' END)))AND(CAST(v0.c0 AS TEXT))))OR(''));
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c3)==(v0.c2)))) IS TRUE)  as count FROM t0, v0, rt0, t1 ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(((t1.c0)>=(rt0.c0)))))OR(CASE rt0.c2  WHEN rt0.c1 THEN 'e?4v\nh,' END)))AND(CAST(v0.c0 AS TEXT))))OR('')));
SELECT ALL COUNT(*) FROM t0, v0, rt0, t1 WHERE (TRIM(((rt0.c3)==(v0.c2)))) ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(((t1.c0)>=(rt0.c0)))))OR(CASE rt0.c2  WHEN rt0.c1 THEN 'e?4v\nh,' END)))AND(CAST(v0.c0 AS TEXT))))OR(''));
SELECT COUNT(*) FROM t0 NOT INDEXED, rt1, t1, v0 WHERE (((x'') BETWEEN (rt1.c3) AND (rt1.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (rt1.c3) AND (rt1.c3)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1, t1, v0);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt1, t1, v0 WHERE (((x'') BETWEEN (rt1.c3) AND (rt1.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (rt1.c3) AND (rt1.c3)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1, t1, v0);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt1, t1, v0 WHERE (((x'') BETWEEN (rt1.c3) AND (rt1.c3)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, t1, t0, rt1, v0 WHERE (CAST((- (x'')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (x'')) AS TEXT)) IS TRUE)  as count FROM rt0, t1, t0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, t1, t0, rt1, v0 WHERE (CAST((- (x'')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (x'')) AS TEXT)) IS TRUE)  as count FROM rt0, t1, t0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, t1, t0, rt1, v0 WHERE (CAST((- (x'')) AS TEXT));
SELECT COUNT(*) FROM t1, v0 WHERE (((((NULLIF(DISTINCT 0.7098869958603351, v0.c3))OR((- (v0.c0)))))AND(CASE WHEN v0.c1 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((NULLIF(DISTINCT 0.7098869958603351, v0.c3))OR((- (v0.c0)))))AND(CASE WHEN v0.c1 THEN t1.c0 END))) IS TRUE)  as count FROM t1, v0);
SELECT COUNT(*) FROM t1, v0 WHERE (((((NULLIF(DISTINCT 0.7098869958603351, v0.c3))OR((- (v0.c0)))))AND(CASE WHEN v0.c1 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((NULLIF(DISTINCT 0.7098869958603351, v0.c3))OR((- (v0.c0)))))AND(CASE WHEN v0.c1 THEN t1.c0 END))) IS TRUE)  as count FROM t1, v0);
SELECT COUNT(*) FROM t1, v0 WHERE (((((NULLIF(DISTINCT 0.7098869958603351, v0.c3))OR((- (v0.c0)))))AND(CASE WHEN v0.c1 THEN t1.c0 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ('1260579656');
SELECT SUM(count) FROM (SELECT (('1260579656') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('1260579656');
SELECT SUM(count) FROM (SELECT (('1260579656') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('1260579656');
SELECT ALL COUNT(*) FROM t1 CROSS JOIN t0 ON (((t0.c0, NULL, t0.c0)) BETWEEN ((CAST(t1.c0 AS BLOB), ((x'')-(t0.c0)), ((t1.c0)IS(t0.c0)))) AND (((~ (t1.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (~ (t0.c0))))) WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY ABS(DISTINCT CAST(t0.c0 AS INTEGER)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1 CROSS JOIN t0 ON (((t0.c0, NULL, t0.c0)) BETWEEN ((CAST(t1.c0 AS BLOB), ((x'')-(t0.c0)), ((t1.c0)IS(t0.c0)))) AND (((~ (t1.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (~ (t0.c0))))) ORDER BY ABS(DISTINCT CAST(t0.c0 AS INTEGER)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN t0 ON (((t0.c0, NULL, t0.c0)) BETWEEN ((CAST(t1.c0 AS BLOB), ((x'')-(t0.c0)), ((t1.c0)IS(t0.c0)))) AND (((~ (t1.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (~ (t0.c0))))) WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY ABS(DISTINCT CAST(t0.c0 AS INTEGER)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1 CROSS JOIN t0 ON (((t0.c0, NULL, t0.c0)) BETWEEN ((CAST(t1.c0 AS BLOB), ((x'')-(t0.c0)), ((t1.c0)IS(t0.c0)))) AND (((~ (t1.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (~ (t0.c0))))) ORDER BY ABS(DISTINCT CAST(t0.c0 AS INTEGER)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN t0 ON (((t0.c0, NULL, t0.c0)) BETWEEN ((CAST(t1.c0 AS BLOB), ((x'')-(t0.c0)), ((t1.c0)IS(t0.c0)))) AND (((~ (t1.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (~ (t0.c0))))) WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY ABS(DISTINCT CAST(t0.c0 AS INTEGER)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c2)AND(((rt0.c2) BETWEEN (t0.c0) AND ('')))))OR(((rt0.c3) NOT NULL))) INNER JOIN t1 ON ((((((((x'')OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c3)))))AND(rt0.c1)))AND(rt1.c0 COLLATE BINARY)))OR(((t1.c0) NOT NULL))) CROSS JOIN rt0 ON (- (rt1.c3)) WHERE ((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c2)AND(((rt0.c2) BETWEEN (t0.c0) AND ('')))))OR(((rt0.c3) NOT NULL))) INNER JOIN t1 ON ((((((((x'')OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c3)))))AND(rt0.c1)))AND(rt1.c0 COLLATE BINARY)))OR(((t1.c0) NOT NULL))) CROSS JOIN rt0 ON (- (rt1.c3)));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c2)AND(((rt0.c2) BETWEEN (t0.c0) AND ('')))))OR(((rt0.c3) NOT NULL))) INNER JOIN t1 ON ((((((((x'')OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c3)))))AND(rt0.c1)))AND(rt1.c0 COLLATE BINARY)))OR(((t1.c0) NOT NULL))) CROSS JOIN rt0 ON (- (rt1.c3)) WHERE ((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c2)AND(((rt0.c2) BETWEEN (t0.c0) AND ('')))))OR(((rt0.c3) NOT NULL))) INNER JOIN t1 ON ((((((((x'')OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c3)))))AND(rt0.c1)))AND(rt1.c0 COLLATE BINARY)))OR(((t1.c0) NOT NULL))) CROSS JOIN rt0 ON (- (rt1.c3)));
SELECT ALL * FROM rt1, v0, t0, t1 WHERE (ROUND(STRFTIME(rt1.c0, t1.c0, t0.c0, v0.c0, '-1231033458'), t1.c0)) ORDER BY (((((v0.c0, rt1.c1, v0.c2)) BETWEEN ((v0.c3, rt1.c0, v0.c3)) AND ((0.06665984220557764, t0.c0, rt1.c3))))<((v0.c2 IN (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ROUND(STRFTIME(rt1.c0, t1.c0, t0.c0, v0.c0, '-1231033458'), t1.c0)) IS TRUE)  as count FROM rt1, v0, t0, t1 ORDER BY (((((v0.c0, rt1.c1, v0.c2)) BETWEEN ((v0.c3, rt1.c0, v0.c3)) AND ((0.06665984220557764, t0.c0, rt1.c3))))<((v0.c2 IN (t0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt1, v0, t0, t1 WHERE (ROUND(STRFTIME(rt1.c0, t1.c0, t0.c0, v0.c0, '-1231033458'), t1.c0)) ORDER BY (((((v0.c0, rt1.c1, v0.c2)) BETWEEN ((v0.c3, rt1.c0, v0.c3)) AND ((0.06665984220557764, t0.c0, rt1.c3))))<((v0.c2 IN (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ROUND(STRFTIME(rt1.c0, t1.c0, t0.c0, v0.c0, '-1231033458'), t1.c0)) IS TRUE)  as count FROM rt1, v0, t0, t1 ORDER BY (((((v0.c0, rt1.c1, v0.c2)) BETWEEN ((v0.c3, rt1.c0, v0.c3)) AND ((0.06665984220557764, t0.c0, rt1.c3))))<((v0.c2 IN (t0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt1, v0, t0, t1 WHERE (ROUND(STRFTIME(rt1.c0, t1.c0, t0.c0, v0.c0, '-1231033458'), t1.c0)) ORDER BY (((((v0.c0, rt1.c1, v0.c2)) BETWEEN ((v0.c3, rt1.c0, v0.c3)) AND ((0.06665984220557764, t0.c0, rt1.c3))))<((v0.c2 IN (t0.c0))))  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS TEXT)) IS FALSE) WHERE (CAST((((rt0.c2))!=((rt0.c1))) AS BLOB)) ORDER BY ((0Xffffffffadee676b)-((rt0.c3 IN ('-454323051')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))!=((rt0.c1))) AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS TEXT)) IS FALSE) ORDER BY ((0Xffffffffadee676b)-((rt0.c3 IN ('-454323051')))) ASC  NULLS FIRST);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS TEXT)) IS FALSE) WHERE (CAST((((rt0.c2))!=((rt0.c1))) AS BLOB)) ORDER BY ((0Xffffffffadee676b)-((rt0.c3 IN ('-454323051')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))!=((rt0.c1))) AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS TEXT)) IS FALSE) ORDER BY ((0Xffffffffadee676b)-((rt0.c3 IN ('-454323051')))) ASC  NULLS FIRST);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS TEXT)) IS FALSE) WHERE (CAST((((rt0.c2))!=((rt0.c1))) AS BLOB)) ORDER BY ((0Xffffffffadee676b)-((rt0.c3 IN ('-454323051')))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)), rt0.c0, ((rt0.c1) IS FALSE))) AND ((COALESCE(rt0.c2, rt0.c3), ((rt0.c1) IS TRUE), rt0.c3 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)), rt0.c0, ((rt0.c1) IS FALSE))) AND ((COALESCE(rt0.c2, rt0.c3), ((rt0.c1) IS TRUE), rt0.c3 COLLATE RTRIM))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)), rt0.c0, ((rt0.c1) IS FALSE))) AND ((COALESCE(rt0.c2, rt0.c3), ((rt0.c1) IS TRUE), rt0.c3 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)), rt0.c0, ((rt0.c1) IS FALSE))) AND ((COALESCE(rt0.c2, rt0.c3), ((rt0.c1) IS TRUE), rt0.c3 COLLATE RTRIM))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)), rt0.c0, ((rt0.c1) IS FALSE))) AND ((COALESCE(rt0.c2, rt0.c3), ((rt0.c1) IS TRUE), rt0.c3 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT * FROM t1, t0, rt1, rt0, v0 WHERE ((((rt1.c0 IN ()))/((((rt1.c3, v0.c4, rt0.c0)) NOT BETWEEN ((rt1.c2, v0.c0, v0.c1)) AND ((v0.c4, rt0.c3, rt0.c0)))))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))/((((rt1.c3, v0.c4, rt0.c0)) NOT BETWEEN ((rt1.c2, v0.c0, v0.c1)) AND ((v0.c4, rt0.c3, rt0.c0)))))) IS TRUE)  as count FROM t1, t0, rt1, rt0, v0 ORDER BY rt0.c2);
SELECT * FROM t1, t0, rt1, rt0, v0 WHERE ((((rt1.c0 IN ()))/((((rt1.c3, v0.c4, rt0.c0)) NOT BETWEEN ((rt1.c2, v0.c0, v0.c1)) AND ((v0.c4, rt0.c3, rt0.c0)))))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))/((((rt1.c3, v0.c4, rt0.c0)) NOT BETWEEN ((rt1.c2, v0.c0, v0.c1)) AND ((v0.c4, rt0.c3, rt0.c0)))))) IS TRUE)  as count FROM t1, t0, rt1, rt0, v0 ORDER BY rt0.c2);
SELECT * FROM t1, t0, rt1, rt0, v0 WHERE ((((rt1.c0 IN ()))/((((rt1.c3, v0.c4, rt0.c0)) NOT BETWEEN ((rt1.c2, v0.c0, v0.c1)) AND ((v0.c4, rt0.c3, rt0.c0)))))) ORDER BY rt0.c2;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON rt1.c2 WHERE (((CAST(rt1.c2 AS REAL)) NOTNULL)) ORDER BY CASE ((((rt1.c1)OR(rt0.c3)))AND(rt1.c1))  WHEN rt0.c0 THEN CAST(rt1.c1 AS REAL) WHEN ('-1602740124' IN (rt1.c0)) THEN ((rt0.c1)=(rt1.c1)) WHEN ABS(rt0.c0) THEN (NOT (rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS REAL)) NOTNULL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON rt1.c2 ORDER BY CASE ((((rt1.c1)OR(rt0.c3)))AND(rt1.c1))  WHEN rt0.c0 THEN CAST(rt1.c1 AS REAL) WHEN ('-1602740124' IN (rt1.c0)) THEN ((rt0.c1)==(rt1.c1)) WHEN ABS(rt0.c0) THEN (NOT (rt0.c0)) END DESC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON rt1.c2 WHERE (((CAST(rt1.c2 AS REAL)) NOTNULL)) ORDER BY CASE ((((rt1.c1)OR(rt0.c3)))AND(rt1.c1))  WHEN rt0.c0 THEN CAST(rt1.c1 AS REAL) WHEN ('-1602740124' IN (rt1.c0)) THEN ((rt0.c1)=(rt1.c1)) WHEN ABS(rt0.c0) THEN (NOT (rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS REAL)) NOTNULL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON rt1.c2 ORDER BY CASE ((((rt1.c1)OR(rt0.c3)))AND(rt1.c1))  WHEN rt0.c0 THEN CAST(rt1.c1 AS REAL) WHEN ('-1602740124' IN (rt1.c0)) THEN ((rt0.c1)==(rt1.c1)) WHEN ABS(rt0.c0) THEN (NOT (rt0.c0)) END DESC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON rt1.c2 WHERE (((CAST(rt1.c2 AS REAL)) NOTNULL)) ORDER BY CASE ((((rt1.c1)OR(rt0.c3)))AND(rt1.c1))  WHEN rt0.c0 THEN CAST(rt1.c1 AS REAL) WHEN ('-1602740124' IN (rt1.c0)) THEN ((rt0.c1)=(rt1.c1)) WHEN ABS(rt0.c0) THEN (NOT (rt0.c0)) END DESC;
SELECT COUNT(*) FROM t1, rt0 CROSS JOIN t0 ON ((((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)))OR(CAST(rt0.c0 AS INTEGER))))OR(rt0.c0 COLLATE RTRIM)) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t1, rt0 CROSS JOIN t0 ON ((((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)))OR(CAST(rt0.c0 AS INTEGER))))OR(rt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t1, rt0 CROSS JOIN t0 ON ((((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)))OR(CAST(rt0.c0 AS INTEGER))))OR(rt0.c0 COLLATE RTRIM)) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t1, rt0 CROSS JOIN t0 ON ((((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)))OR(CAST(rt0.c0 AS INTEGER))))OR(rt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t1, rt0 CROSS JOIN t0 ON ((((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)))OR(CAST(rt0.c0 AS INTEGER))))OR(rt0.c0 COLLATE RTRIM)) WHERE ('');
SELECT ALL * FROM rt0, t0, t1, rt1, v0 WHERE (0Xffffffffccc34a3e) ORDER BY ((0.05665438008683932) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0Xffffffffccc34a3e) IS TRUE)  as count FROM rt0, t0, t1, rt1, v0 ORDER BY ((0.05665438008683932) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM rt0, t0, t1, rt1, v0 WHERE (0Xffffffffccc34a3e) ORDER BY ((0.05665438008683932) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0Xffffffffccc34a3e) IS TRUE)  as count FROM rt0, t0, t1, rt1, v0 ORDER BY ((0.05665438008683932) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM rt0, t0, t1, rt1, v0 WHERE (0Xffffffffccc34a3e) ORDER BY ((0.05665438008683932) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t1 FULL OUTER JOIN rt0 ON CASE rt0.c3  WHEN rt0.c3 THEN v0.c3 ELSE rt0.c0 END COLLATE BINARY WHERE ((- (ABS(DISTINCT rt0.c2)))) ORDER BY 0.23072661540142003 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (ABS(DISTINCT rt0.c2)))) IS TRUE)  as count FROM v0, t1 FULL OUTER JOIN rt0 ON CASE rt0.c3  WHEN rt0.c3 THEN v0.c3 ELSE rt0.c0 END COLLATE BINARY ORDER BY 0.23072661540142003 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1 FULL OUTER JOIN rt0 ON CASE rt0.c3  WHEN rt0.c3 THEN v0.c3 ELSE rt0.c0 END COLLATE BINARY WHERE ((- (ABS(DISTINCT rt0.c2)))) ORDER BY 0.23072661540142003 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (ABS(DISTINCT rt0.c2)))) IS TRUE)  as count FROM v0, t1 FULL OUTER JOIN rt0 ON CASE rt0.c3  WHEN rt0.c3 THEN v0.c3 ELSE rt0.c0 END COLLATE BINARY ORDER BY 0.23072661540142003 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1 FULL OUTER JOIN rt0 ON CASE rt0.c3  WHEN rt0.c3 THEN v0.c3 ELSE rt0.c0 END COLLATE BINARY WHERE ((- (ABS(DISTINCT rt0.c2)))) ORDER BY 0.23072661540142003 ASC  NULLS FIRST;
SELECT ALL * FROM v0, t0, rt1, rt0, t1 WHERE (((((((((('-infinity,' IN ()))AND(v0.c2)))OR((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c2))))))OR(((v0.c4) BETWEEN (rt0.c0) AND (rt1.c1)))))OR(IFNULL(rt0.c3, v0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((('-infinity,' IN ()))AND(v0.c2)))OR((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c2))))))OR(((v0.c4) BETWEEN (rt0.c0) AND (rt1.c1)))))OR(IFNULL(rt0.c3, v0.c3)))) IS TRUE)  as count FROM v0, t0, rt1, rt0, t1);
SELECT ALL * FROM v0, t0, rt1, rt0, t1 WHERE (((((((((('-infinity,' IN ()))AND(v0.c2)))OR((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c2))))))OR(((v0.c4) BETWEEN (rt0.c0) AND (rt1.c1)))))OR(IFNULL(rt0.c3, v0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((('-infinity,' IN ()))AND(v0.c2)))OR((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c2))))))OR(((v0.c4) BETWEEN (rt0.c0) AND (rt1.c1)))))OR(IFNULL(rt0.c3, v0.c3)))) IS TRUE)  as count FROM v0, t0, rt1, rt0, t1);
SELECT ALL * FROM v0, t0, rt1, rt0, t1 WHERE (((((((((('-infinity,' IN ()))AND(v0.c2)))OR((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c2))))))OR(((v0.c4) BETWEEN (rt0.c0) AND (rt1.c1)))))OR(IFNULL(rt0.c3, v0.c3))));
SELECT * FROM t1 CROSS JOIN t0 ON CASE ((t1.c0)OR(0X285e670b))  WHEN (NOT (rt1.c0)) THEN ((rt1.c3) NOT BETWEEN (t0.c0) AND (rt1.c3)) END INNER JOIN rt1 ON LIKELY(DISTINCT ((((((((t1.c0)AND(t1.c0)))AND('-497417293')))AND(rt1.c0)))AND(0.7265120375731617))) WHERE (CASE WHEN ((t1.c0) NOT BETWEEN (rt1.c2) AND (0x60ae43e3)) THEN ((rt1.c2)>(rt1.c1)) END) ORDER BY (((CASE t0.c0  WHEN rt1.c2 THEN t0.c0 ELSE rt1.c0 END, (((t1.c0)) BETWEEN ((rt1.c2)) AND ((t0.c0))), '2047386581', rt1.c2, ROUND('', t0.c0)))<=((rt1.c1 COLLATE NOCASE, CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 ELSE t0.c0 END, ((((t1.c0)OR(t0.c0)))OR(t0.c0)), (~ (rt1.c1)), json_valid(t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c0) NOT BETWEEN (rt1.c2) AND (0X60ae43e3)) THEN ((rt1.c2)>(rt1.c1)) END) IS TRUE)  as count FROM t1 CROSS JOIN t0 ON CASE ((t1.c0)OR(0X285e670b))  WHEN (NOT (rt1.c0)) THEN ((rt1.c3) NOT BETWEEN (t0.c0) AND (rt1.c3)) END INNER JOIN rt1 ON LIKELY(DISTINCT ((((((((t1.c0)AND(t1.c0)))AND('-497417293')))AND(rt1.c0)))AND(0.7265120375731617))) ORDER BY (((CASE t0.c0  WHEN rt1.c2 THEN t0.c0 ELSE rt1.c0 END, (((t1.c0)) BETWEEN ((rt1.c2)) AND ((t0.c0))), '2047386581', rt1.c2, ROUND('', t0.c0)))<=((rt1.c1 COLLATE NOCASE, CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 ELSE t0.c0 END, ((((t1.c0)OR(t0.c0)))OR(t0.c0)), (~ (rt1.c1)), json_valid(t1.c0)))) DESC  NULLS FIRST);
SELECT * FROM t1 CROSS JOIN t0 ON CASE ((t1.c0)OR(0X285e670b))  WHEN (NOT (rt1.c0)) THEN ((rt1.c3) NOT BETWEEN (t0.c0) AND (rt1.c3)) END INNER JOIN rt1 ON LIKELY(DISTINCT ((((((((t1.c0)AND(t1.c0)))AND('-497417293')))AND(rt1.c0)))AND(0.7265120375731617))) WHERE (CASE WHEN ((t1.c0) NOT BETWEEN (rt1.c2) AND (0x60ae43e3)) THEN ((rt1.c2)>(rt1.c1)) END) ORDER BY (((CASE t0.c0  WHEN rt1.c2 THEN t0.c0 ELSE rt1.c0 END, (((t1.c0)) BETWEEN ((rt1.c2)) AND ((t0.c0))), '2047386581', rt1.c2, ROUND('', t0.c0)))<=((rt1.c1 COLLATE NOCASE, CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 ELSE t0.c0 END, ((((t1.c0)OR(t0.c0)))OR(t0.c0)), (~ (rt1.c1)), json_valid(t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c0) NOT BETWEEN (rt1.c2) AND (0X60ae43e3)) THEN ((rt1.c2)>(rt1.c1)) END) IS TRUE)  as count FROM t1 CROSS JOIN t0 ON CASE ((t1.c0)OR(0X285e670b))  WHEN (NOT (rt1.c0)) THEN ((rt1.c3) NOT BETWEEN (t0.c0) AND (rt1.c3)) END INNER JOIN rt1 ON LIKELY(DISTINCT ((((((((t1.c0)AND(t1.c0)))AND('-497417293')))AND(rt1.c0)))AND(0.7265120375731617))) ORDER BY (((CASE t0.c0  WHEN rt1.c2 THEN t0.c0 ELSE rt1.c0 END, (((t1.c0)) BETWEEN ((rt1.c2)) AND ((t0.c0))), '2047386581', rt1.c2, ROUND('', t0.c0)))<=((rt1.c1 COLLATE NOCASE, CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 ELSE t0.c0 END, ((((t1.c0)OR(t0.c0)))OR(t0.c0)), (~ (rt1.c1)), json_valid(t1.c0)))) DESC  NULLS FIRST);
SELECT * FROM t1 CROSS JOIN t0 ON CASE ((t1.c0)OR(0X285e670b))  WHEN (NOT (rt1.c0)) THEN ((rt1.c3) NOT BETWEEN (t0.c0) AND (rt1.c3)) END INNER JOIN rt1 ON LIKELY(DISTINCT ((((((((t1.c0)AND(t1.c0)))AND('-497417293')))AND(rt1.c0)))AND(0.7265120375731617))) WHERE (CASE WHEN ((t1.c0) NOT BETWEEN (rt1.c2) AND (0x60ae43e3)) THEN ((rt1.c2)>(rt1.c1)) END) ORDER BY (((CASE t0.c0  WHEN rt1.c2 THEN t0.c0 ELSE rt1.c0 END, (((t1.c0)) BETWEEN ((rt1.c2)) AND ((t0.c0))), '2047386581', rt1.c2, ROUND('', t0.c0)))<=((rt1.c1 COLLATE NOCASE, CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 ELSE t0.c0 END, ((((t1.c0)OR(t0.c0)))OR(t0.c0)), (~ (rt1.c1)), json_valid(t1.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, v0, t1, rt0, t0 WHERE (((x'')<>((+ (v0.c0))))) ORDER BY JULIANDAY(((rt0.c3)==(v0.c3)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))), ((v0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)));
SELECT SUM(count) FROM (SELECT ((((x'')!=((+ (v0.c0))))) IS TRUE)  as count FROM rt1, v0, t1, rt0, t0 ORDER BY JULIANDAY(((rt0.c3)=(v0.c3)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))), ((v0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3))));
SELECT ALL COUNT(*) FROM rt1, v0, t1, rt0, t0 WHERE (((x'')<>((+ (v0.c0))))) ORDER BY JULIANDAY(((rt0.c3)==(v0.c3)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))), ((v0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)));
SELECT SUM(count) FROM (SELECT ((((x'')!=((+ (v0.c0))))) IS TRUE)  as count FROM rt1, v0, t1, rt0, t0 ORDER BY JULIANDAY(((rt0.c3)=(v0.c3)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))), ((v0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3))));
SELECT ALL COUNT(*) FROM rt1, v0, t1, rt0, t0 WHERE (((x'')<>((+ (v0.c0))))) ORDER BY JULIANDAY(((rt0.c3)==(v0.c3)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))), ((v0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)));
SELECT COUNT(*) FROM rt0, t0, v0 FULL OUTER JOIN rt1 ON (((~ (rt1.c0))) NOT BETWEEN ((v0.c4 IN ())) AND ((v0.c4 IN ()))) WHERE (CASE ((rt1.c3)GLOB(rt0.c2))  WHEN NULL THEN t0.c0 ELSE (((v0.c1))>((v0.c4))) END) ORDER BY CASE ((rt0.c1)<(rt0.c0))  WHEN v0.c0 COLLATE RTRIM THEN (- (rt0.c3)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3)GLOB(rt0.c2))  WHEN NULL THEN t0.c0 ELSE (((v0.c1))>((v0.c4))) END) IS TRUE)  as count FROM rt0, t0, v0 FULL OUTER JOIN rt1 ON (((~ (rt1.c0))) NOT BETWEEN ((v0.c4 IN ())) AND ((v0.c4 IN ()))) ORDER BY CASE ((rt0.c1)<(rt0.c0))  WHEN v0.c0 COLLATE RTRIM THEN (- (rt0.c3)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, v0 FULL OUTER JOIN rt1 ON (((~ (rt1.c0))) NOT BETWEEN ((v0.c4 IN ())) AND ((v0.c4 IN ()))) WHERE (CASE ((rt1.c3)GLOB(rt0.c2))  WHEN NULL THEN t0.c0 ELSE (((v0.c1))>((v0.c4))) END) ORDER BY CASE ((rt0.c1)<(rt0.c0))  WHEN v0.c0 COLLATE RTRIM THEN (- (rt0.c3)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3)GLOB(rt0.c2))  WHEN NULL THEN t0.c0 ELSE (((v0.c1))>((v0.c4))) END) IS TRUE)  as count FROM rt0, t0, v0 FULL OUTER JOIN rt1 ON (((~ (rt1.c0))) NOT BETWEEN ((v0.c4 IN ())) AND ((v0.c4 IN ()))) ORDER BY CASE ((rt0.c1)<(rt0.c0))  WHEN v0.c0 COLLATE RTRIM THEN (- (rt0.c3)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, v0 FULL OUTER JOIN rt1 ON (((~ (rt1.c0))) NOT BETWEEN ((v0.c4 IN ())) AND ((v0.c4 IN ()))) WHERE (CASE ((rt1.c3)GLOB(rt0.c2))  WHEN NULL THEN t0.c0 ELSE (((v0.c1))>((v0.c4))) END) ORDER BY CASE ((rt0.c1)<(rt0.c0))  WHEN v0.c0 COLLATE RTRIM THEN (- (rt0.c3)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM t1, rt0 NOT INDEXED, v0 WHERE (v0.c0 COLLATE BINARY) ORDER BY CAST(v0.c3 AS INTEGER) COLLATE NOCASE, ((CASE v0.c1  WHEN v0.c1 THEN '-858162517' WHEN v0.c3 THEN v0.c1 WHEN v0.c0 THEN v0.c1 END)LIKE(LIKELY(DISTINCT rt0.c1))) DESC, ((CASE WHEN v0.c4 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN ('') AND ((- (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY CAST(v0.c3 AS INTEGER) COLLATE NOCASE, ((CASE v0.c1  WHEN v0.c1 THEN '-858162517' WHEN v0.c3 THEN v0.c1 WHEN v0.c0 THEN v0.c1 END)LIKE(LIKELY(DISTINCT rt0.c1))) DESC, ((CASE WHEN v0.c4 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN ('') AND ((- (rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0 NOT INDEXED, v0 WHERE (v0.c0 COLLATE BINARY) ORDER BY CAST(v0.c3 AS INTEGER) COLLATE NOCASE, ((CASE v0.c1  WHEN v0.c1 THEN '-858162517' WHEN v0.c3 THEN v0.c1 WHEN v0.c0 THEN v0.c1 END)LIKE(LIKELY(DISTINCT rt0.c1))) DESC, ((CASE WHEN v0.c4 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN ('') AND ((- (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY CAST(v0.c3 AS INTEGER) COLLATE NOCASE, ((CASE v0.c1  WHEN v0.c1 THEN '-858162517' WHEN v0.c3 THEN v0.c1 WHEN v0.c0 THEN v0.c1 END)LIKE(LIKELY(DISTINCT rt0.c1))) DESC, ((CASE WHEN v0.c4 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN ('') AND ((- (rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0 NOT INDEXED, v0 WHERE (v0.c0 COLLATE BINARY) ORDER BY CAST(v0.c3 AS INTEGER) COLLATE NOCASE, ((CASE v0.c1  WHEN v0.c1 THEN '-858162517' WHEN v0.c3 THEN v0.c1 WHEN v0.c0 THEN v0.c1 END)LIKE(LIKELY(DISTINCT rt0.c1))) DESC, ((CASE WHEN v0.c4 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN ('') AND ((- (rt0.c1))))  NULLS FIRST;
SELECT ALL * FROM t0, t1, v0 WHERE ('K緶WLs');
SELECT SUM(count) FROM (SELECT ALL (('K緶WLs') IS TRUE)  as count FROM t0, t1, v0 NOT INDEXED);
SELECT ALL * FROM t0, t1, v0 WHERE ('K緶WLs');
SELECT SUM(count) FROM (SELECT ALL (('K緶WLs') IS TRUE)  as count FROM t0, t1, v0 NOT INDEXED);
SELECT ALL * FROM t0, t1, v0 WHERE ('K緶WLs');
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN -1.250573194E9 THEN t1.c0 COLLATE NOCASE WHEN CASE t1.c0  WHEN t1.c0 THEN NULL ELSE t1.c0 END THEN UPPER(t1.c0) WHEN (- (t1.c0)) THEN NULL ELSE t1.c0 COLLATE BINARY END) ORDER BY (((t1.c0 IN (t1.c0))) BETWEEN (LIKE(t1.c0, t1.c0, '|')) AND (t1.c0 COLLATE NOCASE))  NULLS LAST, ((IFNULL(t1.c0, t1.c0)) NOT BETWEEN (((((t1.c0)AND(t1.c0)))AND(t1.c0))) AND (((t1.c0)<<(t1.c0))))  NULLS FIRST, (((t1.c0)) BETWEEN ((UNLIKELY(t1.c0))) AND ((t1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -1.250573194E9 THEN t1.c0 COLLATE NOCASE WHEN CASE t1.c0  WHEN t1.c0 THEN NULL ELSE t1.c0 END THEN UPPER(t1.c0) WHEN (- (t1.c0)) THEN NULL ELSE t1.c0 COLLATE BINARY END) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN (t1.c0))) BETWEEN (LIKE(t1.c0, t1.c0, '|')) AND (t1.c0 COLLATE NOCASE))  NULLS LAST, ((IFNULL(t1.c0, t1.c0)) NOT BETWEEN (((((t1.c0)AND(t1.c0)))AND(t1.c0))) AND (((t1.c0)<<(t1.c0))))  NULLS FIRST, (((t1.c0)) BETWEEN ((UNLIKELY(t1.c0))) AND ((t1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN -1.250573194E9 THEN t1.c0 COLLATE NOCASE WHEN CASE t1.c0  WHEN t1.c0 THEN NULL ELSE t1.c0 END THEN UPPER(t1.c0) WHEN (- (t1.c0)) THEN NULL ELSE t1.c0 COLLATE BINARY END) ORDER BY (((t1.c0 IN (t1.c0))) BETWEEN (LIKE(t1.c0, t1.c0, '|')) AND (t1.c0 COLLATE NOCASE))  NULLS LAST, ((IFNULL(t1.c0, t1.c0)) NOT BETWEEN (((((t1.c0)AND(t1.c0)))AND(t1.c0))) AND (((t1.c0)<<(t1.c0))))  NULLS FIRST, (((t1.c0)) BETWEEN ((UNLIKELY(t1.c0))) AND ((t1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -1.250573194E9 THEN t1.c0 COLLATE NOCASE WHEN CASE t1.c0  WHEN t1.c0 THEN NULL ELSE t1.c0 END THEN UPPER(t1.c0) WHEN (- (t1.c0)) THEN NULL ELSE t1.c0 COLLATE BINARY END) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN (t1.c0))) BETWEEN (LIKE(t1.c0, t1.c0, '|')) AND (t1.c0 COLLATE NOCASE))  NULLS LAST, ((IFNULL(t1.c0, t1.c0)) NOT BETWEEN (((((t1.c0)AND(t1.c0)))AND(t1.c0))) AND (((t1.c0)<<(t1.c0))))  NULLS FIRST, (((t1.c0)) BETWEEN ((UNLIKELY(t1.c0))) AND ((t1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN -1.250573194E9 THEN t1.c0 COLLATE NOCASE WHEN CASE t1.c0  WHEN t1.c0 THEN NULL ELSE t1.c0 END THEN UPPER(t1.c0) WHEN (- (t1.c0)) THEN NULL ELSE t1.c0 COLLATE BINARY END) ORDER BY (((t1.c0 IN (t1.c0))) BETWEEN (LIKE(t1.c0, t1.c0, '|')) AND (t1.c0 COLLATE NOCASE))  NULLS LAST, ((IFNULL(t1.c0, t1.c0)) NOT BETWEEN (((((t1.c0)AND(t1.c0)))AND(t1.c0))) AND (((t1.c0)<<(t1.c0))))  NULLS FIRST, (((t1.c0)) BETWEEN ((UNLIKELY(t1.c0))) AND ((t1.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, v0 NATURAL JOIN t1 WHERE ((~ (v0.c2)) COLLATE BINARY) ORDER BY (t0.c0 COLLATE RTRIM IN ((rt0.c1 IN ()), (((rt0.c2, v0.c3, v0.c2)) NOT BETWEEN ((t0.c0, t0.c0, x'')) AND ((v0.c3, rt0.c3, t0.c0)))))  NULLS FIRST, (((('-1370237672') BETWEEN ('-2077229671') AND (rt0.c1)))>((((v0.c1))==((v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, v0 NATURAL JOIN t1 ORDER BY (t0.c0 COLLATE RTRIM IN ((rt0.c1 IN ()), (((rt0.c2, v0.c3, v0.c2)) NOT BETWEEN ((t0.c0, t0.c0, x'')) AND ((v0.c3, rt0.c3, t0.c0)))))  NULLS FIRST, (((('-1370237672') BETWEEN ('-2077229671') AND (rt0.c1)))>((((v0.c1))=((v0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, v0 NATURAL JOIN t1 WHERE ((~ (v0.c2)) COLLATE BINARY) ORDER BY (t0.c0 COLLATE RTRIM IN ((rt0.c1 IN ()), (((rt0.c2, v0.c3, v0.c2)) NOT BETWEEN ((t0.c0, t0.c0, x'')) AND ((v0.c3, rt0.c3, t0.c0)))))  NULLS FIRST, (((('-1370237672') BETWEEN ('-2077229671') AND (rt0.c1)))>((((v0.c1))==((v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, v0 NATURAL JOIN t1 ORDER BY (t0.c0 COLLATE RTRIM IN ((rt0.c1 IN ()), (((rt0.c2, v0.c3, v0.c2)) NOT BETWEEN ((t0.c0, t0.c0, x'')) AND ((v0.c3, rt0.c3, t0.c0)))))  NULLS FIRST, (((('-1370237672') BETWEEN ('-2077229671') AND (rt0.c1)))>((((v0.c1))=((v0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, v0 NATURAL JOIN t1 WHERE ((~ (v0.c2)) COLLATE BINARY) ORDER BY (t0.c0 COLLATE RTRIM IN ((rt0.c1 IN ()), (((rt0.c2, v0.c3, v0.c2)) NOT BETWEEN ((t0.c0, t0.c0, x'')) AND ((v0.c3, rt0.c3, t0.c0)))))  NULLS FIRST, (((('-1370237672') BETWEEN ('-2077229671') AND (rt0.c1)))>((((v0.c1))==((v0.c0))))) DESC  NULLS LAST;
SELECT * FROM t1 LEFT OUTER JOIN t0 ON (((rt1.c1 IN (rt1.c2, v0.c1))) BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (((v0.c2) NOT NULL))) RIGHT OUTER JOIN v0 ON LIKELIHOOD(((((rt1.c2)OR(t0.c0)))AND(v0.c2)), 0.08295688705279458) RIGHT OUTER JOIN rt1 ON (('\nZEggxx[ ')IS NOT(CAST(t0.c0 AS BLOB))) WHERE ((((v0.c4)) BETWEEN ((v0.c4)) AND ((rt1.c2))) COLLATE NOCASE) ORDER BY (NOT (''));
SELECT SUM(count) FROM (SELECT (((((v0.c4)) BETWEEN ((v0.c4)) AND ((rt1.c2))) COLLATE NOCASE) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON (((rt1.c1 IN (rt1.c2, v0.c1))) BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (((v0.c2) NOT NULL))) RIGHT OUTER JOIN v0 ON LIKELIHOOD(((((rt1.c2)OR(t0.c0)))AND(v0.c2)), 0.08295688705279458) RIGHT OUTER JOIN rt1 ON (('\nZEggxx[ ')IS NOT(CAST(t0.c0 AS BLOB))) ORDER BY (NOT ('')));
SELECT * FROM t1 LEFT OUTER JOIN t0 ON (((rt1.c1 IN (rt1.c2, v0.c1))) BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (((v0.c2) NOT NULL))) RIGHT OUTER JOIN v0 ON LIKELIHOOD(((((rt1.c2)OR(t0.c0)))AND(v0.c2)), 0.08295688705279458) RIGHT OUTER JOIN rt1 ON (('\nZEggxx[ ')IS NOT(CAST(t0.c0 AS BLOB))) WHERE ((((v0.c4)) BETWEEN ((v0.c4)) AND ((rt1.c2))) COLLATE NOCASE) ORDER BY (NOT (''));
SELECT SUM(count) FROM (SELECT (((((v0.c4)) BETWEEN ((v0.c4)) AND ((rt1.c2))) COLLATE NOCASE) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON (((rt1.c1 IN (rt1.c2, v0.c1))) BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (((v0.c2) NOT NULL))) RIGHT OUTER JOIN v0 ON LIKELIHOOD(((((rt1.c2)OR(t0.c0)))AND(v0.c2)), 0.08295688705279458) RIGHT OUTER JOIN rt1 ON (('\nZEggxx[ ')IS NOT(CAST(t0.c0 AS BLOB))) ORDER BY (NOT ('')));
SELECT COUNT(*) FROM rt1, v0, rt0, t0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT NULL)) ORDER BY ((((v0.c4) ISNULL))LIKE(UPPER(x'')))  NULLS FIRST, CAST(rt1.c1 AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM rt1, v0, rt0, t0 ORDER BY ((((v0.c4) ISNULL))LIKE(UPPER(x'')))  NULLS FIRST, CAST(rt1.c1 AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0, rt0, t0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT NULL)) ORDER BY ((((v0.c4) ISNULL))LIKE(UPPER(x'')))  NULLS FIRST, CAST(rt1.c1 AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM rt1, v0, rt0, t0 ORDER BY ((((v0.c4) ISNULL))LIKE(UPPER(x'')))  NULLS FIRST, CAST(rt1.c1 AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0, rt0, t0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT NULL)) ORDER BY ((((v0.c4) ISNULL))LIKE(UPPER(x'')))  NULLS FIRST, CAST(rt1.c1 AS NUMERIC)  NULLS LAST;
SELECT * FROM t0 WHERE ((+ (LOWER(t0.c0)))) ORDER BY CAST((t0.c0 IN ()) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (LOWER(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c0 IN ()) AS REAL) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((+ (LOWER(t0.c0)))) ORDER BY CAST((t0.c0 IN ()) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (LOWER(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c0 IN ()) AS REAL) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((+ (LOWER(t0.c0)))) ORDER BY CAST((t0.c0 IN ()) AS REAL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c4)) BETWEEN ((v0.c2 COLLATE NOCASE)) AND ((v0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((v0.c4)) BETWEEN ((v0.c2 COLLATE NOCASE)) AND ((v0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c4)) BETWEEN ((v0.c2 COLLATE NOCASE)) AND ((v0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((v0.c4)) BETWEEN ((v0.c2 COLLATE NOCASE)) AND ((v0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c4)) BETWEEN ((v0.c2 COLLATE NOCASE)) AND ((v0.c2 COLLATE RTRIM))));
SELECT COUNT(*) FROM v0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c4  WHEN v0.c4 THEN v0.c1 END)IS NOT(((v0.c4) BETWEEN (v0.c1) AND (v0.c2))))) ORDER BY ((CASE WHEN v0.c3 THEN v0.c4 END) NOT BETWEEN ((v0.c2 IN ())) AND (((v0.c1)>(v0.c1)))), CAST(COALESCE(v0.c0, v0.c1) AS TEXT) DESC, CASE WHEN CAST('' AS NUMERIC) THEN ((v0.c0)/(v0.c3)) WHEN ((v0.c4) BETWEEN (v0.c1) AND (v0.c3)) THEN json_quote(v0.c3) WHEN ((v0.c4) BETWEEN (0.22475307859007398) AND (v0.c1)) THEN (((v0.c3, v0.c0, v0.c3)) NOT BETWEEN ((v0.c0, 851793237, v0.c2)) AND ((v0.c1, v0.c2, v0.c2))) END;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c4  WHEN v0.c4 THEN v0.c1 END)IS NOT(((v0.c4) BETWEEN (v0.c1) AND (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c3 THEN v0.c4 END) NOT BETWEEN ((v0.c2 IN ())) AND (((v0.c1)>(v0.c1)))), CAST(COALESCE(v0.c0, v0.c1) AS TEXT) DESC, CASE WHEN CAST('' AS NUMERIC) THEN ((v0.c0)/(v0.c3)) WHEN ((v0.c4) BETWEEN (v0.c1) AND (v0.c3)) THEN json_quote(v0.c3) WHEN ((v0.c4) BETWEEN (0.22475307859007398) AND (v0.c1)) THEN (((v0.c3, v0.c0, v0.c3)) NOT BETWEEN ((v0.c0, 851793237, v0.c2)) AND ((v0.c1, v0.c2, v0.c2))) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c4  WHEN v0.c4 THEN v0.c1 END)IS NOT(((v0.c4) BETWEEN (v0.c1) AND (v0.c2))))) ORDER BY ((CASE WHEN v0.c3 THEN v0.c4 END) NOT BETWEEN ((v0.c2 IN ())) AND (((v0.c1)>(v0.c1)))), CAST(COALESCE(v0.c0, v0.c1) AS TEXT) DESC, CASE WHEN CAST('' AS NUMERIC) THEN ((v0.c0)/(v0.c3)) WHEN ((v0.c4) BETWEEN (v0.c1) AND (v0.c3)) THEN json_quote(v0.c3) WHEN ((v0.c4) BETWEEN (0.22475307859007398) AND (v0.c1)) THEN (((v0.c3, v0.c0, v0.c3)) NOT BETWEEN ((v0.c0, 851793237, v0.c2)) AND ((v0.c1, v0.c2, v0.c2))) END;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c4  WHEN v0.c4 THEN v0.c1 END)IS NOT(((v0.c4) BETWEEN (v0.c1) AND (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c3 THEN v0.c4 END) NOT BETWEEN ((v0.c2 IN ())) AND (((v0.c1)>(v0.c1)))), CAST(COALESCE(v0.c0, v0.c1) AS TEXT) DESC, CASE WHEN CAST('' AS NUMERIC) THEN ((v0.c0)/(v0.c3)) WHEN ((v0.c4) BETWEEN (v0.c1) AND (v0.c3)) THEN json_quote(v0.c3) WHEN ((v0.c4) BETWEEN (0.22475307859007398) AND (v0.c1)) THEN (((v0.c3, v0.c0, v0.c3)) NOT BETWEEN ((v0.c0, 851793237, v0.c2)) AND ((v0.c1, v0.c2, v0.c2))) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c4  WHEN v0.c4 THEN v0.c1 END)IS NOT(((v0.c4) BETWEEN (v0.c1) AND (v0.c2))))) ORDER BY ((CASE WHEN v0.c3 THEN v0.c4 END) NOT BETWEEN ((v0.c2 IN ())) AND (((v0.c1)>(v0.c1)))), CAST(COALESCE(v0.c0, v0.c1) AS TEXT) DESC, CASE WHEN CAST('' AS NUMERIC) THEN ((v0.c0)/(v0.c3)) WHEN ((v0.c4) BETWEEN (v0.c1) AND (v0.c3)) THEN json_quote(v0.c3) WHEN ((v0.c4) BETWEEN (0.22475307859007398) AND (v0.c1)) THEN (((v0.c3, v0.c0, v0.c3)) NOT BETWEEN ((v0.c0, 851793237, v0.c2)) AND ((v0.c1, v0.c2, v0.c2))) END;
SELECT * FROM rt1, t1, v0 NATURAL JOIN t0 WHERE ((((- (rt1.c2))) NOT NULL)) ORDER BY (- ((('-1376884885')<(v0.c1))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1 NOT INDEXED, t1, v0 NATURAL JOIN t0 ORDER BY (- ((('-1376884885')<(v0.c1)))));
SELECT * FROM rt1, t1, v0 NATURAL JOIN t0 WHERE ((((- (rt1.c2))) NOT NULL)) ORDER BY (- ((('-1376884885')<(v0.c1))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1 NOT INDEXED, t1, v0 NATURAL JOIN t0 ORDER BY (- ((('-1376884885')<(v0.c1)))));
SELECT * FROM rt1, t1, v0 NATURAL JOIN t0 WHERE ((((- (rt1.c2))) NOT NULL)) ORDER BY (- ((('-1376884885')<(v0.c1))));
SELECT ALL * FROM t0 WHERE ((((((t0.c0)AND(t0.c0)))AND(x'')) IN ())) ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(NULL)))OR((('') NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)AND(t0.c0)))AND(x'')) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(NULL)))OR((('') NOT NULL))) ASC);
SELECT ALL * FROM t0 WHERE ((((((t0.c0)AND(t0.c0)))AND(x'')) IN ())) ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(NULL)))OR((('') NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)AND(t0.c0)))AND(x'')) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(NULL)))OR((('') NOT NULL))) ASC);
SELECT ALL * FROM t0 WHERE ((((((t0.c0)AND(t0.c0)))AND(x'')) IN ())) ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(NULL)))OR((('') NOT NULL))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ('4/') ORDER BY (((v0.c2)) BETWEEN ((json_quote(v0.c3))) AND ((0.06469350456177758))) DESC;
SELECT SUM(count) FROM (SELECT (('4/') IS TRUE)  as count FROM v0 ORDER BY (((v0.c2)) BETWEEN ((json_quote(v0.c3))) AND ((0.06469350456177758))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ('4/') ORDER BY (((v0.c2)) BETWEEN ((json_quote(v0.c3))) AND ((0.06469350456177758))) DESC;
SELECT SUM(count) FROM (SELECT (('4/') IS TRUE)  as count FROM v0 ORDER BY (((v0.c2)) BETWEEN ((json_quote(v0.c3))) AND ((0.06469350456177758))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ('4/') ORDER BY (((v0.c2)) BETWEEN ((json_quote(v0.c3))) AND ((0.06469350456177758))) DESC;
SELECT COUNT(*) FROM t1, rt0, rt1, v0 WHERE (IFNULL(DISTINCT (((v0.c4)) BETWEEN ((v0.c1)) AND ((v0.c3))), ((v0.c2)<<(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (((v0.c4)) BETWEEN ((v0.c1)) AND ((v0.c3))), ((v0.c2)<<(rt0.c1)))) IS TRUE)  as count FROM t1, rt0, rt1, v0);
SELECT COUNT(*) FROM t1, rt0, rt1, v0 WHERE (IFNULL(DISTINCT (((v0.c4)) BETWEEN ((v0.c1)) AND ((v0.c3))), ((v0.c2)<<(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (((v0.c4)) BETWEEN ((v0.c1)) AND ((v0.c3))), ((v0.c2)<<(rt0.c1)))) IS TRUE)  as count FROM t1, rt0, rt1, v0);
SELECT COUNT(*) FROM t1, rt0, rt1, v0 WHERE (IFNULL(DISTINCT (((v0.c4)) BETWEEN ((v0.c1)) AND ((v0.c3))), ((v0.c2)<<(rt0.c1))));
SELECT * FROM rt0, v0, rt1, t0, t1 WHERE ((~ (CAST(rt0.c2 AS REAL)))) ORDER BY ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt1.c1)) COLLATE BINARY, IFNULL(DISTINCT (v0.c0 IN ()), ((v0.c3)<(-739036072)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, v0, rt1, t0, t1 ORDER BY ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt1.c1)) COLLATE BINARY, IFNULL(DISTINCT (v0.c0 IN ()), ((v0.c3)<(-739036072))));
SELECT * FROM rt0, v0, rt1, t0, t1 WHERE ((~ (CAST(rt0.c2 AS REAL)))) ORDER BY ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt1.c1)) COLLATE BINARY, IFNULL(DISTINCT (v0.c0 IN ()), ((v0.c3)<(-739036072)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, v0, rt1, t0, t1 ORDER BY ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt1.c1)) COLLATE BINARY, IFNULL(DISTINCT (v0.c0 IN ()), ((v0.c3)<(-739036072))));
SELECT * FROM rt0, v0, rt1, t0, t1 WHERE ((~ (CAST(rt0.c2 AS REAL)))) ORDER BY ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt1.c1)) COLLATE BINARY, IFNULL(DISTINCT (v0.c0 IN ()), ((v0.c3)<(-739036072)));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((+ (CAST(rt1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt1.c1 AS TEXT)))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((+ (CAST(rt1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt1.c1 AS TEXT)))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((+ (CAST(rt1.c1 AS TEXT))));
SELECT COUNT(*) FROM rt0, t1, rt1, v0, t0 WHERE (rt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, rt1 NOT INDEXED, v0, t0);
SELECT COUNT(*) FROM rt0, t1, rt1, v0, t0 WHERE (rt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, rt1 NOT INDEXED, v0, t0);
SELECT COUNT(*) FROM rt0, t1, rt1, v0, t0 WHERE (rt1.c0 COLLATE BINARY);
SELECT * FROM rt1 CROSS JOIN t0 ON (((+ (rt1.c2))) NOT NULL) CROSS JOIN t1 ON ((((CASE WHEN 155482289 THEN t1.c0 ELSE rt1.c0 END)AND((((NULL, rt1.c2, rt1.c3)) BETWEEN ((t0.c0, '-1413003684', rt1.c2)) AND ((t1.c0, NULL, rt1.c0))))))AND(t1.c0)) WHERE (((((((((((rt1.c2)OR(rt1.c0)))OR(t1.c0)))AND(rt1.c0)))AND(rt1.c3)))&(rt1.c3))) ORDER BY CAST(0xffffffff94b776bd AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)OR(rt1.c0)))OR(t1.c0)))AND(rt1.c0)))AND(rt1.c3)))&(rt1.c3))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (((+ (rt1.c2))) NOT NULL) CROSS JOIN t1 ON ((((CASE WHEN 155482289 THEN t1.c0 ELSE rt1.c0 END)AND((((NULL, rt1.c2, rt1.c3)) BETWEEN ((t0.c0, '-1413003684', rt1.c2)) AND ((t1.c0, NULL, rt1.c0))))))AND(t1.c0)) ORDER BY CAST(0Xffffffff94b776bd AS INTEGER)  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN t0 ON (((+ (rt1.c2))) NOT NULL) CROSS JOIN t1 ON ((((CASE WHEN 155482289 THEN t1.c0 ELSE rt1.c0 END)AND((((NULL, rt1.c2, rt1.c3)) BETWEEN ((t0.c0, '-1413003684', rt1.c2)) AND ((t1.c0, NULL, rt1.c0))))))AND(t1.c0)) WHERE (((((((((((rt1.c2)OR(rt1.c0)))OR(t1.c0)))AND(rt1.c0)))AND(rt1.c3)))&(rt1.c3))) ORDER BY CAST(0xffffffff94b776bd AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)OR(rt1.c0)))OR(t1.c0)))AND(rt1.c0)))AND(rt1.c3)))&(rt1.c3))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (((+ (rt1.c2))) NOT NULL) CROSS JOIN t1 ON ((((CASE WHEN 155482289 THEN t1.c0 ELSE rt1.c0 END)AND((((NULL, rt1.c2, rt1.c3)) BETWEEN ((t0.c0, '-1413003684', rt1.c2)) AND ((t1.c0, NULL, rt1.c0))))))AND(t1.c0)) ORDER BY CAST(0Xffffffff94b776bd AS INTEGER)  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN t0 ON (((+ (rt1.c2))) NOT NULL) CROSS JOIN t1 ON ((((CASE WHEN 155482289 THEN t1.c0 ELSE rt1.c0 END)AND((((NULL, rt1.c2, rt1.c3)) BETWEEN ((t0.c0, '-1413003684', rt1.c2)) AND ((t1.c0, NULL, rt1.c0))))))AND(t1.c0)) WHERE (((((((((((rt1.c2)OR(rt1.c0)))OR(t1.c0)))AND(rt1.c0)))AND(rt1.c3)))&(rt1.c3))) ORDER BY CAST(0xffffffff94b776bd AS INTEGER)  NULLS FIRST;
SELECT * FROM t1 WHERE (json_type(t1.c0 COLLATE NOCASE)) ORDER BY TYPEOF((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_type(t1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t1 ORDER BY TYPEOF((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0)))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (json_type(t1.c0 COLLATE NOCASE)) ORDER BY TYPEOF((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_type(t1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t1 ORDER BY TYPEOF((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0)))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (json_type(t1.c0 COLLATE NOCASE)) ORDER BY TYPEOF((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, t1, v0 WHERE (CASE CASE t1.c0  WHEN rt1.c2 THEN v0.c3 END  WHEN '' THEN ((v0.c2) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE t1.c0  WHEN rt1.c2 THEN v0.c3 END  WHEN '' THEN ((v0.c2) NOT NULL) END) IS TRUE)  as count FROM rt1, t1, v0);
SELECT COUNT(*) FROM rt1, t1, v0 WHERE (CASE CASE t1.c0  WHEN rt1.c2 THEN v0.c3 END  WHEN '' THEN ((v0.c2) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE t1.c0  WHEN rt1.c2 THEN v0.c3 END  WHEN '' THEN ((v0.c2) NOT NULL) END) IS TRUE)  as count FROM rt1, t1, v0);
SELECT COUNT(*) FROM rt1, t1, v0 WHERE (CASE CASE t1.c0  WHEN rt1.c2 THEN v0.c3 END  WHEN '' THEN ((v0.c2) NOT NULL) END);
SELECT ALL * FROM rt1, rt0, v0 CROSS JOIN t1 ON ((('-2037590486')) BETWEEN ((((1.796935432E9) ISNULL))) AND ((((rt1.c2) IS FALSE)))) FULL OUTER JOIN t0 ON (NOT (CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c1 END)) WHERE ((+ (t0.c0)) COLLATE RTRIM) ORDER BY ((CASE NULL  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN '104015265' WHEN NULL THEN rt1.c1 ELSE rt1.c1 END)<((NOT (rt0.c3)))) DESC, ((((v0.c2) NOT NULL))>((rt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT (((+ (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, v0 CROSS JOIN t1 ON ((('-2037590486')) BETWEEN ((((1.796935432E9) ISNULL))) AND ((((rt1.c2) IS FALSE)))) FULL OUTER JOIN t0 ON (NOT (CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c1 END)) ORDER BY ((CASE NULL  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN '104015265' WHEN NULL THEN rt1.c1 ELSE rt1.c1 END)<((NOT (rt0.c3)))) DESC, ((((v0.c2) NOT NULL))>((rt1.c2 IN ()))));
SELECT ALL * FROM rt1, rt0, v0 CROSS JOIN t1 ON ((('-2037590486')) BETWEEN ((((1.796935432E9) ISNULL))) AND ((((rt1.c2) IS FALSE)))) FULL OUTER JOIN t0 ON (NOT (CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c1 END)) WHERE ((+ (t0.c0)) COLLATE RTRIM) ORDER BY ((CASE NULL  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN '104015265' WHEN NULL THEN rt1.c1 ELSE rt1.c1 END)<((NOT (rt0.c3)))) DESC, ((((v0.c2) NOT NULL))>((rt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT (((+ (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, v0 CROSS JOIN t1 ON ((('-2037590486')) BETWEEN ((((1.796935432E9) ISNULL))) AND ((((rt1.c2) IS FALSE)))) FULL OUTER JOIN t0 ON (NOT (CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c1 END)) ORDER BY ((CASE NULL  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN '104015265' WHEN NULL THEN rt1.c1 ELSE rt1.c1 END)<((NOT (rt0.c3)))) DESC, ((((v0.c2) NOT NULL))>((rt1.c2 IN ()))));
SELECT ALL * FROM rt1, rt0, v0 CROSS JOIN t1 ON ((('-2037590486')) BETWEEN ((((1.796935432E9) ISNULL))) AND ((((rt1.c2) IS FALSE)))) FULL OUTER JOIN t0 ON (NOT (CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c1 END)) WHERE ((+ (t0.c0)) COLLATE RTRIM) ORDER BY ((CASE NULL  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN '104015265' WHEN NULL THEN rt1.c1 ELSE rt1.c1 END)<((NOT (rt0.c3)))) DESC, ((((v0.c2) NOT NULL))>((rt1.c2 IN ())));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ('-796009783' IN (((((NULL)OR(rt0.c2)))OR(v0.c1)))) CROSS JOIN rt0 ON CAST(rt0.c3 COLLATE BINARY AS NUMERIC) WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))) BETWEEN (((v0.c2) IS TRUE)) AND (((((v0.c2)AND(t0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))) BETWEEN (((v0.c2) IS TRUE)) AND (((((v0.c2)AND(t0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ('-796009783' IN (((((NULL)OR(rt0.c2)))OR(v0.c1)))) CROSS JOIN rt0 ON CAST(rt0.c3 COLLATE BINARY AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ('-796009783' IN (((((NULL)OR(rt0.c2)))OR(v0.c1)))) CROSS JOIN rt0 ON CAST(rt0.c3 COLLATE BINARY AS NUMERIC) WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))) BETWEEN (((v0.c2) IS TRUE)) AND (((((v0.c2)AND(t0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))) BETWEEN (((v0.c2) IS TRUE)) AND (((((v0.c2)AND(t0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ('-796009783' IN (((((NULL)OR(rt0.c2)))OR(v0.c1)))) CROSS JOIN rt0 ON CAST(rt0.c3 COLLATE BINARY AS NUMERIC));
SELECT * FROM t1, rt0, t0, v0 RIGHT OUTER JOIN rt1 ON '~1\nU2#' WHERE ((NOT (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c0))) IS TRUE)  as count FROM t1, rt0, t0, v0 RIGHT OUTER JOIN rt1 ON '~1\nU2#');
SELECT * FROM t1, rt0, t0, v0 RIGHT OUTER JOIN rt1 ON '~1\nU2#' WHERE ((NOT (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c0))) IS TRUE)  as count FROM t1, rt0, t0, v0 RIGHT OUTER JOIN rt1 ON '~1\nU2#');
SELECT * FROM t1, rt0, t0, v0 RIGHT OUTER JOIN rt1 ON '~1\nU2#' WHERE ((NOT (t1.c0)));
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (UNICODE(((t1.c0) NOT BETWEEN (rt1.c3) AND (NULL)))) ORDER BY (- (((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNICODE(((t1.c0) NOT BETWEEN (rt1.c3) AND (NULL)))) IS TRUE)  as count FROM rt1, t1 ORDER BY (- (((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (UNICODE(((t1.c0) NOT BETWEEN (rt1.c3) AND (NULL)))) ORDER BY (- (((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNICODE(((t1.c0) NOT BETWEEN (rt1.c3) AND (NULL)))) IS TRUE)  as count FROM rt1, t1 ORDER BY (- (((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (UNICODE(((t1.c0) NOT BETWEEN (rt1.c3) AND (NULL)))) ORDER BY (- (((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE ((rt0.c1)>(rt0.c1))  WHEN x'' COLLATE RTRIM THEN ((rt0.c3) ISNULL) WHEN CASE t1.c0  WHEN 0.39038368880811847 THEN t1.c0 END THEN ((rt0.c3) IS FALSE) WHEN rt0.c1 THEN ((t1.c0)<>(t1.c0)) ELSE t1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)>(rt0.c1))  WHEN x'' COLLATE RTRIM THEN ((rt0.c3) ISNULL) WHEN CASE t1.c0  WHEN 0.39038368880811847 THEN t1.c0 END THEN ((rt0.c3) IS FALSE) WHEN rt0.c1 THEN ((t1.c0)!=(t1.c0)) ELSE t1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE ((rt0.c1)>(rt0.c1))  WHEN x'' COLLATE RTRIM THEN ((rt0.c3) ISNULL) WHEN CASE t1.c0  WHEN 0.39038368880811847 THEN t1.c0 END THEN ((rt0.c3) IS FALSE) WHEN rt0.c1 THEN ((t1.c0)<>(t1.c0)) ELSE t1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)>(rt0.c1))  WHEN x'' COLLATE RTRIM THEN ((rt0.c3) ISNULL) WHEN CASE t1.c0  WHEN 0.39038368880811847 THEN t1.c0 END THEN ((rt0.c3) IS FALSE) WHEN rt0.c1 THEN ((t1.c0)!=(t1.c0)) ELSE t1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE ((rt0.c1)>(rt0.c1))  WHEN x'' COLLATE RTRIM THEN ((rt0.c3) ISNULL) WHEN CASE t1.c0  WHEN 0.39038368880811847 THEN t1.c0 END THEN ((rt0.c3) IS FALSE) WHEN rt0.c1 THEN ((t1.c0)<>(t1.c0)) ELSE t1.c0 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN v0 ON ((CASE x''  WHEN rt0.c2 THEN v0.c3 ELSE rt0.c3 END)&(CAST(v0.c1 AS TEXT))) CROSS JOIN t0 ON ((((rt0.c0)-(v0.c1))) IS TRUE) RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE ((((rt0.c3)) BETWEEN ((t1.c0 COLLATE NOCASE)) AND (((+ (v0.c4)))))) ORDER BY (((NULL)) NOT BETWEEN ((CASE WHEN v0.c3 THEN rt0.c1 ELSE NULL END)) AND ((v0.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((t1.c0 COLLATE NOCASE)) AND (((+ (v0.c4)))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON ((CASE x''  WHEN rt0.c2 THEN v0.c3 ELSE rt0.c3 END)&(CAST(v0.c1 AS TEXT))) CROSS JOIN t0 ON ((((rt0.c0)-(v0.c1))) IS TRUE) RIGHT OUTER JOIN rt0 ON rt0.c1 ORDER BY (((NULL)) NOT BETWEEN ((CASE WHEN v0.c3 THEN rt0.c1 ELSE NULL END)) AND ((v0.c3)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN v0 ON ((CASE x''  WHEN rt0.c2 THEN v0.c3 ELSE rt0.c3 END)&(CAST(v0.c1 AS TEXT))) CROSS JOIN t0 ON ((((rt0.c0)-(v0.c1))) IS TRUE) RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE ((((rt0.c3)) BETWEEN ((t1.c0 COLLATE NOCASE)) AND (((+ (v0.c4)))))) ORDER BY (((NULL)) NOT BETWEEN ((CASE WHEN v0.c3 THEN rt0.c1 ELSE NULL END)) AND ((v0.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((t1.c0 COLLATE NOCASE)) AND (((+ (v0.c4)))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON ((CASE x''  WHEN rt0.c2 THEN v0.c3 ELSE rt0.c3 END)&(CAST(v0.c1 AS TEXT))) CROSS JOIN t0 ON ((((rt0.c0)-(v0.c1))) IS TRUE) RIGHT OUTER JOIN rt0 ON rt0.c1 ORDER BY (((NULL)) NOT BETWEEN ((CASE WHEN v0.c3 THEN rt0.c1 ELSE NULL END)) AND ((v0.c3)))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, v0 WHERE ((~ (((((rt0.c3)AND(v0.c4)))OR(rt0.c0))))) ORDER BY rt0.c0 COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c3)AND(v0.c4)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY rt0.c0 COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, v0 WHERE ((~ (((((rt0.c3)AND(v0.c4)))OR(rt0.c0))))) ORDER BY rt0.c0 COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c3)AND(v0.c4)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY rt0.c0 COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, v0 WHERE ((~ (((((rt0.c3)AND(v0.c4)))OR(rt0.c0))))) ORDER BY rt0.c0 COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1, t1, v0, rt0 WHERE ((((v0.c2, rt1.c0, rt1.c3)) BETWEEN ((CAST(rt0.c2 AS REAL), ((v0.c0) NOT BETWEEN (v0.c3) AND (NULL)), CASE rt0.c2  WHEN v0.c1 THEN rt0.c1 END)) AND (((rt1.c1 IN (rt1.c3, rt1.c1)), CAST(rt1.c1 AS BLOB), ((rt1.c2)AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, rt1.c0, rt1.c3)) BETWEEN ((CAST(rt0.c2 AS REAL), ((v0.c0) NOT BETWEEN (v0.c3) AND (NULL)), CASE rt0.c2  WHEN v0.c1 THEN rt0.c1 END)) AND (((rt1.c1 IN (rt1.c3, rt1.c1)), CAST(rt1.c1 AS BLOB), ((rt1.c2)AND(v0.c0)))))) IS TRUE)  as count FROM t0, rt1, t1, v0, rt0);
SELECT COUNT(*) FROM t0, rt1, t1, v0, rt0 WHERE ((((v0.c2, rt1.c0, rt1.c3)) BETWEEN ((CAST(rt0.c2 AS REAL), ((v0.c0) NOT BETWEEN (v0.c3) AND (NULL)), CASE rt0.c2  WHEN v0.c1 THEN rt0.c1 END)) AND (((rt1.c1 IN (rt1.c3, rt1.c1)), CAST(rt1.c1 AS BLOB), ((rt1.c2)AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, rt1.c0, rt1.c3)) BETWEEN ((CAST(rt0.c2 AS REAL), ((v0.c0) NOT BETWEEN (v0.c3) AND (NULL)), CASE rt0.c2  WHEN v0.c1 THEN rt0.c1 END)) AND (((rt1.c1 IN (rt1.c3, rt1.c1)), CAST(rt1.c1 AS BLOB), ((rt1.c2)AND(v0.c0)))))) IS TRUE)  as count FROM t0, rt1, t1, v0, rt0);
SELECT COUNT(*) FROM t0, rt1, t1, v0, rt0 WHERE ((((v0.c2, rt1.c0, rt1.c3)) BETWEEN ((CAST(rt0.c2 AS REAL), ((v0.c0) NOT BETWEEN (v0.c3) AND (NULL)), CASE rt0.c2  WHEN v0.c1 THEN rt0.c1 END)) AND (((rt1.c1 IN (rt1.c3, rt1.c1)), CAST(rt1.c1 AS BLOB), ((rt1.c2)AND(v0.c0))))));
SELECT COUNT(*) FROM rt1, v0, rt0, t0, t1 WHERE (CAST(((t1.c0)LIKE(NULL)) AS TEXT)) ORDER BY (((v0.c0 IN ())) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0))) AND (x'' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0)LIKE(NULL)) AS TEXT)) IS TRUE)  as count FROM rt1, v0, rt0, t0, t1 ORDER BY (((v0.c0 IN ())) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0))) AND (x'' COLLATE RTRIM)));
SELECT COUNT(*) FROM rt1, v0, rt0, t0, t1 WHERE (CAST(((t1.c0)LIKE(NULL)) AS TEXT)) ORDER BY (((v0.c0 IN ())) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0))) AND (x'' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0)LIKE(NULL)) AS TEXT)) IS TRUE)  as count FROM rt1, v0, rt0, t0, t1 ORDER BY (((v0.c0 IN ())) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0))) AND (x'' COLLATE RTRIM)));
SELECT COUNT(*) FROM rt1, v0, rt0, t0, t1 WHERE (CAST(((t1.c0)LIKE(NULL)) AS TEXT)) ORDER BY (((v0.c0 IN ())) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0))) AND (x'' COLLATE RTRIM));
SELECT ALL * FROM v0, t1 WHERE (((((v0.c4)OR(v0.c4)))OR(v0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c4)OR(v0.c4)))OR(v0.c3)) COLLATE BINARY) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (((((v0.c4)OR(v0.c4)))OR(v0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c4)OR(v0.c4)))OR(v0.c3)) COLLATE BINARY) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (((((v0.c4)OR(v0.c4)))OR(v0.c3)) COLLATE BINARY);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE (((rt1.c2) ISNULL) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) ISNULL) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, rt1);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE (((rt1.c2) ISNULL) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) ISNULL) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, rt1);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE (((rt1.c2) ISNULL) COLLATE NOCASE COLLATE RTRIM);
SELECT * FROM rt1 WHERE (UNLIKELY(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)))) ORDER BY ((NULL COLLATE NOCASE) NOT NULL) DESC, CAST(rt1.c1 COLLATE RTRIM AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY ((NULL COLLATE NOCASE) NOT NULL) DESC, CAST(rt1.c1 COLLATE RTRIM AS TEXT) ASC);
SELECT * FROM rt1 WHERE (UNLIKELY(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)))) ORDER BY ((NULL COLLATE NOCASE) NOT NULL) DESC, CAST(rt1.c1 COLLATE RTRIM AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY ((NULL COLLATE NOCASE) NOT NULL) DESC, CAST(rt1.c1 COLLATE RTRIM AS TEXT) ASC);
SELECT * FROM rt1 WHERE (UNLIKELY(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)))) ORDER BY ((NULL COLLATE NOCASE) NOT NULL) DESC, CAST(rt1.c1 COLLATE RTRIM AS TEXT) ASC;
SELECT ALL * FROM t1, rt0 INNER JOIN t0 ON (rt0.c0 IN (rt0.c1)) WHERE (((((((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(((((rt0.c0)OR(x'')))OR(rt0.c1)))))AND((((t1.c0))>((t1.c0))))))AND(((rt0.c3)<(rt0.c1)))))AND(rt0.c2))) ORDER BY CASE WHEN ((rt0.c1) BETWEEN (t1.c0) AND (rt0.c1)) THEN (- (-884388601)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(((((rt0.c0)OR(x'')))OR(rt0.c1)))))AND((((t1.c0))>((t1.c0))))))AND(((rt0.c3)<(rt0.c1)))))AND(rt0.c2))) IS TRUE)  as count FROM t1, rt0 INNER JOIN t0 ON (rt0.c0 IN (rt0.c1)) ORDER BY CASE WHEN ((rt0.c1) BETWEEN (t1.c0) AND (rt0.c1)) THEN (- (-884388601)) END  NULLS FIRST);
SELECT ALL * FROM t1, rt0 INNER JOIN t0 ON (rt0.c0 IN (rt0.c1)) WHERE (((((((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(((((rt0.c0)OR(x'')))OR(rt0.c1)))))AND((((t1.c0))>((t1.c0))))))AND(((rt0.c3)<(rt0.c1)))))AND(rt0.c2))) ORDER BY CASE WHEN ((rt0.c1) BETWEEN (t1.c0) AND (rt0.c1)) THEN (- (-884388601)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(((((rt0.c0)OR(x'')))OR(rt0.c1)))))AND((((t1.c0))>((t1.c0))))))AND(((rt0.c3)<(rt0.c1)))))AND(rt0.c2))) IS TRUE)  as count FROM t1, rt0 INNER JOIN t0 ON (rt0.c0 IN (rt0.c1)) ORDER BY CASE WHEN ((rt0.c1) BETWEEN (t1.c0) AND (rt0.c1)) THEN (- (-884388601)) END  NULLS FIRST);
SELECT ALL * FROM t1, rt0 INNER JOIN t0 ON (rt0.c0 IN (rt0.c1)) WHERE (((((((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(((((rt0.c0)OR(x'')))OR(rt0.c1)))))AND((((t1.c0))>((t1.c0))))))AND(((rt0.c3)<(rt0.c1)))))AND(rt0.c2))) ORDER BY CASE WHEN ((rt0.c1) BETWEEN (t1.c0) AND (rt0.c1)) THEN (- (-884388601)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((1.54504357E9)<<(rt1.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((1.54504357E9)<<(rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((1.54504357E9)<<(rt1.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((1.54504357E9)<<(rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((1.54504357E9)<<(rt1.c3 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (rt1.c2) ORDER BY rt1.c2 DESC  NULLS LAST, CAST(v0.c1 AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c2 DESC  NULLS LAST, CAST(v0.c1 AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (rt1.c2) ORDER BY rt1.c2 DESC  NULLS LAST, CAST(v0.c1 AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c2 DESC  NULLS LAST, CAST(v0.c1 AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (rt1.c2) ORDER BY rt1.c2 DESC  NULLS LAST, CAST(v0.c1 AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, v0 LEFT OUTER JOIN rt0 ON (((~ (rt0.c0)))*((rt1.c1 IN ()))) WHERE (-1760265296) ORDER BY (((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)) IN (((v0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1760265296) IS TRUE)  as count FROM rt1, v0 LEFT OUTER JOIN rt0 ON (((~ (rt0.c0)))*((rt1.c1 IN ()))) ORDER BY (((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)) IN (((v0.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 LEFT OUTER JOIN rt0 ON (((~ (rt0.c0)))*((rt1.c1 IN ()))) WHERE (-1760265296) ORDER BY (((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)) IN (((v0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1760265296) IS TRUE)  as count FROM rt1, v0 LEFT OUTER JOIN rt0 ON (((~ (rt0.c0)))*((rt1.c1 IN ()))) ORDER BY (((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)) IN (((v0.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 LEFT OUTER JOIN rt0 ON (((~ (rt0.c0)))*((rt1.c1 IN ()))) WHERE (-1760265296) ORDER BY (((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)) IN (((v0.c1) IS FALSE)))  NULLS FIRST;
SELECT ALL * FROM t1, t0, rt0, v0 RIGHT OUTER JOIN rt1 ON UPPER(CAST(rt1.c0 AS BLOB)) WHERE (CAST(((v0.c4)+(rt1.c1)) AS NUMERIC)) ORDER BY 0.7265120375731617;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c4)+(rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM t1, t0, rt0, v0 RIGHT OUTER JOIN rt1 ON UPPER(CAST(rt1.c0 AS BLOB)) ORDER BY 0.7265120375731617);
SELECT ALL * FROM t1, t0, rt0, v0 RIGHT OUTER JOIN rt1 ON UPPER(CAST(rt1.c0 AS BLOB)) WHERE (CAST(((v0.c4)+(rt1.c1)) AS NUMERIC)) ORDER BY 0.7265120375731617;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c4)+(rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM t1, t0, rt0, v0 RIGHT OUTER JOIN rt1 ON UPPER(CAST(rt1.c0 AS BLOB)) ORDER BY 0.7265120375731617);
SELECT ALL * FROM t1, t0, rt0, v0 RIGHT OUTER JOIN rt1 ON UPPER(CAST(rt1.c0 AS BLOB)) WHERE (CAST(((v0.c4)+(rt1.c1)) AS NUMERIC)) ORDER BY 0.7265120375731617;
SELECT COUNT(*) FROM v0, t1 WHERE (((0.4162497506528554 COLLATE BINARY) ISNULL)) ORDER BY (+ (v0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.4162497506528554 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM v0, t1 ORDER BY (+ (v0.c2)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t1 WHERE (((0.4162497506528554 COLLATE BINARY) ISNULL)) ORDER BY (+ (v0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.4162497506528554 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM v0, t1 ORDER BY (+ (v0.c2)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t1 WHERE (((0.4162497506528554 COLLATE BINARY) ISNULL)) ORDER BY (+ (v0.c2)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, t1, rt0, v0, t0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, t1, rt0, v0, t0);
SELECT COUNT(*) FROM rt1, t1, rt0, v0, t0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, t1, rt0, v0, t0);
SELECT COUNT(*) FROM rt1, t1, rt0, v0, t0 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c0) IS TRUE))AND(t0.c0)))AND((~ (t0.c0)))))OR((((t0.c0))<=((t0.c0))))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0) IS TRUE))AND(t0.c0)))AND((~ (t0.c0)))))OR((((t0.c0))<=((t0.c0))))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c0) IS TRUE))AND(t0.c0)))AND((~ (t0.c0)))))OR((((t0.c0))<=((t0.c0))))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0) IS TRUE))AND(t0.c0)))AND((~ (t0.c0)))))OR((((t0.c0))<=((t0.c0))))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c0) IS TRUE))AND(t0.c0)))AND((~ (t0.c0)))))OR((((t0.c0))<=((t0.c0))))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM t0, rt0 LEFT OUTER JOIN rt1 ON (x'' IN (CASE rt1.c3  WHEN rt1.c1 THEN '714928315' ELSE rt1.c0 END)) WHERE (((((rt1.c0)!=(x'')))<=(CASE rt0.c2  WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)<>(x'')))<=(CASE rt0.c2  WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c2 END))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON (x'' IN (CASE rt1.c3  WHEN rt1.c1 THEN '714928315' ELSE rt1.c0 END)));
SELECT * FROM t0, rt0 LEFT OUTER JOIN rt1 ON (x'' IN (CASE rt1.c3  WHEN rt1.c1 THEN '714928315' ELSE rt1.c0 END)) WHERE (((((rt1.c0)!=(x'')))<=(CASE rt0.c2  WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)<>(x'')))<=(CASE rt0.c2  WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c2 END))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON (x'' IN (CASE rt1.c3  WHEN rt1.c1 THEN '714928315' ELSE rt1.c0 END)));
SELECT * FROM t0, rt0 LEFT OUTER JOIN rt1 ON (x'' IN (CASE rt1.c3  WHEN rt1.c1 THEN '714928315' ELSE rt1.c0 END)) WHERE (((((rt1.c0)!=(x'')))<=(CASE rt0.c2  WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 FULL OUTER JOIN t1 ON (CAST(v0.c0 AS INTEGER) IN ()) WHERE (CAST(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM v0, rt1, rt0 FULL OUTER JOIN t1 ON (CAST(v0.c0 AS INTEGER) IN ()));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 FULL OUTER JOIN t1 ON (CAST(v0.c0 AS INTEGER) IN ()) WHERE (CAST(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM v0, rt1, rt0 FULL OUTER JOIN t1 ON (CAST(v0.c0 AS INTEGER) IN ()));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 FULL OUTER JOIN t1 ON (CAST(v0.c0 AS INTEGER) IN ()) WHERE (CAST(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)) AS TEXT));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN t1 ON (((~ (v0.c1)))*(((rt0.c2) NOTNULL))) FULL OUTER JOIN rt1 ON (((rt0.c0)>(rt1.c3)) IN (((v0.c0)>(rt1.c1)), ((t0.c0)>=(NULL)))) INNER JOIN v0 ON (((((t0.c0) NOTNULL)))==((rt1.c0 COLLATE BINARY))) WHERE (CAST(LOWER(rt0.c2) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(rt0.c2) AS TEXT)) IS TRUE)  as count FROM rt0, t0 NOT INDEXED RIGHT OUTER JOIN t1 ON (((~ (v0.c1)))*(((rt0.c2) NOTNULL))) FULL OUTER JOIN rt1 ON (((rt0.c0)>(rt1.c3)) IN (((v0.c0)>(rt1.c1)), ((t0.c0)>=(NULL)))) INNER JOIN v0 ON (((((t0.c0) NOTNULL)))==((rt1.c0 COLLATE BINARY))));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN t1 ON (((~ (v0.c1)))*(((rt0.c2) NOTNULL))) FULL OUTER JOIN rt1 ON (((rt0.c0)>(rt1.c3)) IN (((v0.c0)>(rt1.c1)), ((t0.c0)>=(NULL)))) INNER JOIN v0 ON (((((t0.c0) NOTNULL)))==((rt1.c0 COLLATE BINARY))) WHERE (CAST(LOWER(rt0.c2) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(rt0.c2) AS TEXT)) IS TRUE)  as count FROM rt0, t0 NOT INDEXED RIGHT OUTER JOIN t1 ON (((~ (v0.c1)))*(((rt0.c2) NOTNULL))) FULL OUTER JOIN rt1 ON (((rt0.c0)>(rt1.c3)) IN (((v0.c0)>(rt1.c1)), ((t0.c0)>=(NULL)))) INNER JOIN v0 ON (((((t0.c0) NOTNULL)))==((rt1.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM rt1 INNER JOIN t1 ON CAST(v0.c2 AS NUMERIC) COLLATE BINARY INNER JOIN v0 ON ((((((((((((((((v0.c1)OR(rt1.c0)))OR(t1.c0)))AND(v0.c0)))OR(rt1.c1)))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR((t1.c0 IN ()))))OR(((((t1.c0)AND(rt1.c2)))OR(0.23663557067728658)))))OR(rt1.c2)) WHERE (((CASE WHEN v0.c0 THEN v0.c2 ELSE 445858574 END)*('-1318608096'))) ORDER BY 0x4ff33b6c;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c2 ELSE 445858574 END)*('-1318608096'))) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON CAST(v0.c2 AS NUMERIC) COLLATE BINARY INNER JOIN v0 ON ((((((((((((((((v0.c1)OR(rt1.c0)))OR(t1.c0)))AND(v0.c0)))OR(rt1.c1)))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR((t1.c0 IN ()))))OR(((((t1.c0)AND(rt1.c2)))OR(0.23663557067728658)))))OR(rt1.c2)) ORDER BY 0X4ff33b6c);
SELECT COUNT(*) FROM rt1 INNER JOIN t1 ON CAST(v0.c2 AS NUMERIC) COLLATE BINARY INNER JOIN v0 ON ((((((((((((((((v0.c1)OR(rt1.c0)))OR(t1.c0)))AND(v0.c0)))OR(rt1.c1)))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR((t1.c0 IN ()))))OR(((((t1.c0)AND(rt1.c2)))OR(0.23663557067728658)))))OR(rt1.c2)) WHERE (((CASE WHEN v0.c0 THEN v0.c2 ELSE 445858574 END)*('-1318608096'))) ORDER BY 0x4ff33b6c;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c2 ELSE 445858574 END)*('-1318608096'))) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON CAST(v0.c2 AS NUMERIC) COLLATE BINARY INNER JOIN v0 ON ((((((((((((((((v0.c1)OR(rt1.c0)))OR(t1.c0)))AND(v0.c0)))OR(rt1.c1)))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR((t1.c0 IN ()))))OR(((((t1.c0)AND(rt1.c2)))OR(0.23663557067728658)))))OR(rt1.c2)) ORDER BY 0X4ff33b6c);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON UNLIKELY(ROUND('-859616706', rt1.c0)) WHERE (TYPEOF(UNLIKELY(rt0.c2))) ORDER BY ((((rt1.c3 IN ())))<>((((rt0.c1)OR(rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(UNLIKELY(rt0.c2))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON UNLIKELY(ROUND('-859616706', rt1.c0)) ORDER BY ((((rt1.c3 IN ())))<>((((rt0.c1)OR(rt1.c1))))) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON UNLIKELY(ROUND('-859616706', rt1.c0)) WHERE (TYPEOF(UNLIKELY(rt0.c2))) ORDER BY ((((rt1.c3 IN ())))<>((((rt0.c1)OR(rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(UNLIKELY(rt0.c2))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON UNLIKELY(ROUND('-859616706', rt1.c0)) ORDER BY ((((rt1.c3 IN ())))<>((((rt0.c1)OR(rt1.c1))))) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON UNLIKELY(ROUND('-859616706', rt1.c0)) WHERE (TYPEOF(UNLIKELY(rt0.c2))) ORDER BY ((((rt1.c3 IN ())))<>((((rt0.c1)OR(rt1.c1))))) ASC;
SELECT ALL COUNT(*) FROM t0, v0, rt1 WHERE ((+ ((((rt1.c2))>((v0.c0)))))) ORDER BY CASE WHEN CASE WHEN rt1.c1 THEN v0.c3 WHEN v0.c4 THEN rt1.c1 WHEN rt1.c0 THEN x'3834' ELSE v0.c3 END THEN (((rt1.c2))=((rt1.c0))) ELSE LIKELY(v0.c1) END ASC;
SELECT SUM(count) FROM (SELECT (((+ ((((rt1.c2))>((v0.c0)))))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY CASE WHEN CASE WHEN rt1.c1 THEN v0.c3 WHEN v0.c4 THEN rt1.c1 WHEN rt1.c0 THEN x'3834' ELSE v0.c3 END THEN (((rt1.c2))=((rt1.c0))) ELSE LIKELY(v0.c1) END ASC);
SELECT ALL COUNT(*) FROM t0, v0, rt1 WHERE ((+ ((((rt1.c2))>((v0.c0)))))) ORDER BY CASE WHEN CASE WHEN rt1.c1 THEN v0.c3 WHEN v0.c4 THEN rt1.c1 WHEN rt1.c0 THEN x'3834' ELSE v0.c3 END THEN (((rt1.c2))=((rt1.c0))) ELSE LIKELY(v0.c1) END ASC;
SELECT SUM(count) FROM (SELECT (((+ ((((rt1.c2))>((v0.c0)))))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY CASE WHEN CASE WHEN rt1.c1 THEN v0.c3 WHEN v0.c4 THEN rt1.c1 WHEN rt1.c0 THEN x'3834' ELSE v0.c3 END THEN (((rt1.c2))=((rt1.c0))) ELSE LIKELY(v0.c1) END ASC);
SELECT ALL COUNT(*) FROM t0, v0, rt1 WHERE ((+ ((((rt1.c2))>((v0.c0)))))) ORDER BY CASE WHEN CASE WHEN rt1.c1 THEN v0.c3 WHEN v0.c4 THEN rt1.c1 WHEN rt1.c0 THEN x'3834' ELSE v0.c3 END THEN (((rt1.c2))=((rt1.c0))) ELSE LIKELY(v0.c1) END ASC;
SELECT * FROM t1, rt0, t0 NOT INDEXED WHERE ((((- (rt0.c3)))IS NOT(((t1.c0)>>(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c3)))IS NOT(((t1.c0)>>(t0.c0))))) IS TRUE)  as count FROM t1, rt0, t0);
SELECT * FROM t1, rt0, t0 NOT INDEXED WHERE ((((- (rt0.c3)))IS NOT(((t1.c0)>>(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c3)))IS NOT(((t1.c0)>>(t0.c0))))) IS TRUE)  as count FROM t1, rt0, t0);
SELECT * FROM t1, rt0, t0 NOT INDEXED WHERE ((((- (rt0.c3)))IS NOT(((t1.c0)>>(t0.c0)))));
SELECT ALL * FROM v0, t1 WHERE (v0.c2) ORDER BY '~	>.-b' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, t1 ORDER BY '~	>.-b' ASC  NULLS LAST);
SELECT ALL * FROM v0, t1 WHERE (v0.c2) ORDER BY '~	>.-b' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, t1 ORDER BY '~	>.-b' ASC  NULLS LAST);
SELECT ALL * FROM v0, t1 WHERE (v0.c2) ORDER BY '~	>.-b' ASC  NULLS LAST;
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN v0 ON x'8593' COLLATE BINARY CROSS JOIN t0 ON rt1.c1 COLLATE RTRIM LEFT OUTER JOIN t1 ON ((((rt0.c0) IS FALSE)) IS FALSE) WHERE (CASE WHEN ((v0.c1)/(x'')) THEN CAST(v0.c3 AS REAL) WHEN 0.8140126402332815 THEN (~ (rt1.c3)) WHEN (((v0.c0))<=((v0.c2))) THEN rt0.c2 END) ORDER BY (- (((((v0.c1)OR(rt0.c0)))AND(v0.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c1)/(x'')) THEN CAST(v0.c3 AS REAL) WHEN 0.8140126402332815 THEN (~ (rt1.c3)) WHEN (((v0.c0))<=((v0.c2))) THEN rt0.c2 END) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN v0 ON x'8593' COLLATE BINARY CROSS JOIN t0 ON rt1.c1 COLLATE RTRIM LEFT OUTER JOIN t1 ON ((((rt0.c0) IS FALSE)) IS FALSE) ORDER BY (- (((((v0.c1)OR(rt0.c0)))AND(v0.c4)))) DESC  NULLS LAST);
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN v0 ON x'8593' COLLATE BINARY CROSS JOIN t0 ON rt1.c1 COLLATE RTRIM LEFT OUTER JOIN t1 ON ((((rt0.c0) IS FALSE)) IS FALSE) WHERE (CASE WHEN ((v0.c1)/(x'')) THEN CAST(v0.c3 AS REAL) WHEN 0.8140126402332815 THEN (~ (rt1.c3)) WHEN (((v0.c0))<=((v0.c2))) THEN rt0.c2 END) ORDER BY (- (((((v0.c1)OR(rt0.c0)))AND(v0.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c1)/(x'')) THEN CAST(v0.c3 AS REAL) WHEN 0.8140126402332815 THEN (~ (rt1.c3)) WHEN (((v0.c0))<=((v0.c2))) THEN rt0.c2 END) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN v0 ON x'8593' COLLATE BINARY CROSS JOIN t0 ON rt1.c1 COLLATE RTRIM LEFT OUTER JOIN t1 ON ((((rt0.c0) IS FALSE)) IS FALSE) ORDER BY (- (((((v0.c1)OR(rt0.c0)))AND(v0.c4)))) DESC  NULLS LAST);
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN v0 ON x'8593' COLLATE BINARY CROSS JOIN t0 ON rt1.c1 COLLATE RTRIM LEFT OUTER JOIN t1 ON ((((rt0.c0) IS FALSE)) IS FALSE) WHERE (CASE WHEN ((v0.c1)/(x'')) THEN CAST(v0.c3 AS REAL) WHEN 0.8140126402332815 THEN (~ (rt1.c3)) WHEN (((v0.c0))<=((v0.c2))) THEN rt0.c2 END) ORDER BY (- (((((v0.c1)OR(rt0.c0)))AND(v0.c4)))) DESC  NULLS LAST;
SELECT * FROM v0, rt0 INNER JOIN t1 ON (((rt0.c1)) BETWEEN ((((x'') IS FALSE))) AND ((((v0.c2)GLOB(v0.c1))))) CROSS JOIN rt1 ON rt0.c2 COLLATE BINARY COLLATE RTRIM WHERE ((((rt0.c2 IN ()))<(((((((((v0.c3)OR(rt1.c1)))OR(rt1.c2)))AND(v0.c2)))OR(v0.c4))))) ORDER BY (((((v0.c1) IS TRUE)))<((rt1.c3 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))<(((((((((v0.c3)OR(rt1.c1)))OR(rt1.c2)))AND(v0.c2)))OR(v0.c4))))) IS TRUE)  as count FROM v0, rt0 INNER JOIN t1 ON (((rt0.c1)) BETWEEN ((((x'') IS FALSE))) AND ((((v0.c2)GLOB(v0.c1))))) CROSS JOIN rt1 ON rt0.c2 COLLATE BINARY COLLATE RTRIM ORDER BY (((((v0.c1) IS TRUE)))<((rt1.c3 COLLATE BINARY)))  NULLS LAST);
SELECT * FROM v0, rt0 INNER JOIN t1 ON (((rt0.c1)) BETWEEN ((((x'') IS FALSE))) AND ((((v0.c2)GLOB(v0.c1))))) CROSS JOIN rt1 ON rt0.c2 COLLATE BINARY COLLATE RTRIM WHERE ((((rt0.c2 IN ()))<(((((((((v0.c3)OR(rt1.c1)))OR(rt1.c2)))AND(v0.c2)))OR(v0.c4))))) ORDER BY (((((v0.c1) IS TRUE)))<((rt1.c3 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))<(((((((((v0.c3)OR(rt1.c1)))OR(rt1.c2)))AND(v0.c2)))OR(v0.c4))))) IS TRUE)  as count FROM v0, rt0 INNER JOIN t1 ON (((rt0.c1)) BETWEEN ((((x'') IS FALSE))) AND ((((v0.c2)GLOB(v0.c1))))) CROSS JOIN rt1 ON rt0.c2 COLLATE BINARY COLLATE RTRIM ORDER BY (((((v0.c1) IS TRUE)))<((rt1.c3 COLLATE BINARY)))  NULLS LAST);
SELECT * FROM v0, rt0 INNER JOIN t1 ON (((rt0.c1)) BETWEEN ((((x'') IS FALSE))) AND ((((v0.c2)GLOB(v0.c1))))) CROSS JOIN rt1 ON rt0.c2 COLLATE BINARY COLLATE RTRIM WHERE ((((rt0.c2 IN ()))<(((((((((v0.c3)OR(rt1.c1)))OR(rt1.c2)))AND(v0.c2)))OR(v0.c4))))) ORDER BY (((((v0.c1) IS TRUE)))<((rt1.c3 COLLATE BINARY)))  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t1.c0 COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t1.c0 COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c0 COLLATE NOCASE);
SELECT ALL * FROM t1, rt0, t0 CROSS JOIN rt1 ON ((((t0.c0)<<(t1.c0))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((t1.c0 IN ()))) WHERE (CASE rt1.c1  WHEN t0.c0 THEN rt1.c3 ELSE rt1.c1 END COLLATE RTRIM) ORDER BY ((rt0.c2 IN ()) IN ()) ASC  NULLS LAST, CASE WHEN (- (rt1.c1)) THEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END WHEN ((((rt1.c1)OR(rt0.c3)))OR(t1.c0)) THEN rt0.c1 WHEN (+ ('')) THEN UPPER(DISTINCT rt0.c2) ELSE (~ (rt0.c2)) END, (((rt1.c0)) BETWEEN (((((rt1.c1))<=((rt1.c1))))) AND ((((rt1.c0)-(rt1.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1  WHEN t0.c0 THEN rt1.c3 ELSE rt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM t1, rt0, t0 CROSS JOIN rt1 ON ((((t0.c0)<<(t1.c0))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((t1.c0 IN ()))) ORDER BY ((rt0.c2 IN ()) IN ()) ASC  NULLS LAST, CASE WHEN (- (rt1.c1)) THEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END WHEN ((((rt1.c1)OR(rt0.c3)))OR(t1.c0)) THEN rt0.c1 WHEN (+ ('')) THEN UPPER(DISTINCT rt0.c2) ELSE (~ (rt0.c2)) END, (((rt1.c0)) BETWEEN (((((rt1.c1))<=((rt1.c1))))) AND ((((rt1.c0)-(rt1.c2))))) ASC  NULLS LAST);
SELECT ALL * FROM t1, rt0, t0 CROSS JOIN rt1 ON ((((t0.c0)<<(t1.c0))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((t1.c0 IN ()))) WHERE (CASE rt1.c1  WHEN t0.c0 THEN rt1.c3 ELSE rt1.c1 END COLLATE RTRIM) ORDER BY ((rt0.c2 IN ()) IN ()) ASC  NULLS LAST, CASE WHEN (- (rt1.c1)) THEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END WHEN ((((rt1.c1)OR(rt0.c3)))OR(t1.c0)) THEN rt0.c1 WHEN (+ ('')) THEN UPPER(DISTINCT rt0.c2) ELSE (~ (rt0.c2)) END, (((rt1.c0)) BETWEEN (((((rt1.c1))<=((rt1.c1))))) AND ((((rt1.c0)-(rt1.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1  WHEN t0.c0 THEN rt1.c3 ELSE rt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM t1, rt0, t0 CROSS JOIN rt1 ON ((((t0.c0)<<(t1.c0))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((t1.c0 IN ()))) ORDER BY ((rt0.c2 IN ()) IN ()) ASC  NULLS LAST, CASE WHEN (- (rt1.c1)) THEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END WHEN ((((rt1.c1)OR(rt0.c3)))OR(t1.c0)) THEN rt0.c1 WHEN (+ ('')) THEN UPPER(DISTINCT rt0.c2) ELSE (~ (rt0.c2)) END, (((rt1.c0)) BETWEEN (((((rt1.c1))<=((rt1.c1))))) AND ((((rt1.c0)-(rt1.c2))))) ASC  NULLS LAST);
SELECT ALL * FROM t1, rt0, t0 CROSS JOIN rt1 ON ((((t0.c0)<<(t1.c0))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((t1.c0 IN ()))) WHERE (CASE rt1.c1  WHEN t0.c0 THEN rt1.c3 ELSE rt1.c1 END COLLATE RTRIM) ORDER BY ((rt0.c2 IN ()) IN ()) ASC  NULLS LAST, CASE WHEN (- (rt1.c1)) THEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END WHEN ((((rt1.c1)OR(rt0.c3)))OR(t1.c0)) THEN rt0.c1 WHEN (+ ('')) THEN UPPER(DISTINCT rt0.c2) ELSE (~ (rt0.c2)) END, (((rt1.c0)) BETWEEN (((((rt1.c1))<=((rt1.c1))))) AND ((((rt1.c0)-(rt1.c2))))) ASC  NULLS LAST;
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON v0.c3 WHERE (v0.c0) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON v0.c3 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON v0.c3 WHERE (v0.c0) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON v0.c3 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON v0.c3 WHERE (v0.c0) ORDER BY x'' ASC  NULLS FIRST;
SELECT * FROM t0, v0, rt1, rt0 LEFT OUTER JOIN t1 ON CASE WHEN (+ (t1.c0)) THEN ((rt1.c1) BETWEEN (-858162517) AND (v0.c1)) END WHERE ((+ (((v0.c2) IS TRUE)))) ORDER BY (((t0.c0 IN (NULL)))-((+ (t0.c0)))), v0.c1 COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c2) IS TRUE)))) IS TRUE)  as count FROM t0, v0, rt1, rt0 LEFT OUTER JOIN t1 ON CASE WHEN (+ (t1.c0)) THEN ((rt1.c1) BETWEEN (-858162517) AND (v0.c1)) END ORDER BY (((t0.c0 IN (NULL)))-((+ (t0.c0)))), v0.c1 COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM t0, v0, rt1, rt0 LEFT OUTER JOIN t1 ON CASE WHEN (+ (t1.c0)) THEN ((rt1.c1) BETWEEN (-858162517) AND (v0.c1)) END WHERE ((+ (((v0.c2) IS TRUE)))) ORDER BY (((t0.c0 IN (NULL)))-((+ (t0.c0)))), v0.c1 COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c2) IS TRUE)))) IS TRUE)  as count FROM t0, v0, rt1, rt0 LEFT OUTER JOIN t1 ON CASE WHEN (+ (t1.c0)) THEN ((rt1.c1) BETWEEN (-858162517) AND (v0.c1)) END ORDER BY (((t0.c0 IN (NULL)))-((+ (t0.c0)))), v0.c1 COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM t0, v0, rt1, rt0 LEFT OUTER JOIN t1 ON CASE WHEN (+ (t1.c0)) THEN ((rt1.c1) BETWEEN (-858162517) AND (v0.c1)) END WHERE ((+ (((v0.c2) IS TRUE)))) ORDER BY (((t0.c0 IN (NULL)))-((+ (t0.c0)))), v0.c1 COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM t1, v0, t0 WHERE (CAST((+ (v0.c3)) AS BLOB)) ORDER BY ((((((v0.c4)>(t0.c0)))OR(0X1)))OR(((t1.c0)AND(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c3)) AS BLOB)) IS TRUE)  as count FROM t1, v0, t0 ORDER BY ((((((v0.c4)>(t0.c0)))OR(0x1)))OR(((t1.c0)AND(v0.c2))))  NULLS LAST);
SELECT ALL * FROM t1, v0, t0 WHERE (CAST((+ (v0.c3)) AS BLOB)) ORDER BY ((((((v0.c4)>(t0.c0)))OR(0X1)))OR(((t1.c0)AND(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c3)) AS BLOB)) IS TRUE)  as count FROM t1, v0, t0 ORDER BY ((((((v0.c4)>(t0.c0)))OR(0x1)))OR(((t1.c0)AND(v0.c2))))  NULLS LAST);
SELECT ALL * FROM t1, v0, t0 WHERE (CAST((+ (v0.c3)) AS BLOB)) ORDER BY ((((((v0.c4)>(t0.c0)))OR(0X1)))OR(((t1.c0)AND(v0.c2))))  NULLS LAST;
SELECT ALL * FROM v0, rt0, t0 WHERE ((- (CASE v0.c0  WHEN v0.c4 THEN v0.c0 END))) ORDER BY (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND(((v0.c2)IS(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE v0.c0  WHEN v0.c4 THEN v0.c0 END))) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND(((v0.c2)IS(t0.c0)))) DESC);
SELECT ALL * FROM v0, rt0, t0 WHERE ((- (CASE v0.c0  WHEN v0.c4 THEN v0.c0 END))) ORDER BY (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND(((v0.c2)IS(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE v0.c0  WHEN v0.c4 THEN v0.c0 END))) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND(((v0.c2)IS(t0.c0)))) DESC);
SELECT ALL * FROM v0, rt0, t0 WHERE ((- (CASE v0.c0  WHEN v0.c4 THEN v0.c0 END))) ORDER BY (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND(((v0.c2)IS(t0.c0)))) DESC;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON '' CROSS JOIN rt0 ON (+ (((v0.c1)IS(rt0.c0)))) WHERE (CAST(((x'86f2')+('V)')) AS NUMERIC)) ORDER BY (+ (x'' COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'86f2')+('V)')) AS NUMERIC)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON '' CROSS JOIN rt0 ON (+ (((v0.c1)IS(rt0.c0)))) ORDER BY (+ (x'' COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON '' CROSS JOIN rt0 ON (+ (((v0.c1)IS(rt0.c0)))) WHERE (CAST(((x'86f2')+('V)')) AS NUMERIC)) ORDER BY (+ (x'' COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'86f2')+('V)')) AS NUMERIC)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON '' CROSS JOIN rt0 ON (+ (((v0.c1)IS(rt0.c0)))) ORDER BY (+ (x'' COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON '' CROSS JOIN rt0 ON (+ (((v0.c1)IS(rt0.c0)))) WHERE (CAST(((x'86f2')+('V)')) AS NUMERIC)) ORDER BY (+ (x'' COLLATE RTRIM)) DESC;
SELECT * FROM t1, t0 WHERE ((((t1.c0 IN (t0.c0)))OR(t1.c0))) ORDER BY ((((t0.c0))<((t0.c0))) IN ()), t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN (t0.c0)))OR(t1.c0))) IS TRUE)  as count FROM t1, t0 ORDER BY ((((t0.c0))<((t0.c0))) IN ()), t1.c0  NULLS FIRST);
SELECT * FROM t1, t0 WHERE ((((t1.c0 IN (t0.c0)))OR(t1.c0))) ORDER BY ((((t0.c0))<((t0.c0))) IN ()), t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN (t0.c0)))OR(t1.c0))) IS TRUE)  as count FROM t1, t0 ORDER BY ((((t0.c0))<((t0.c0))) IN ()), t1.c0  NULLS FIRST);
SELECT * FROM t1, t0 WHERE ((((t1.c0 IN (t0.c0)))OR(t1.c0))) ORDER BY ((((t0.c0))<((t0.c0))) IN ()), t1.c0  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (v0.c3) ORDER BY CASE WHEN (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) THEN (((v0.c2))<((v0.c2))) END  NULLS LAST, ((((((((((v0.c4)&(v0.c2)))AND(TRIM(DISTINCT x'', v0.c2))))OR(((((v0.c2)OR(x'')))AND(v0.c3)))))OR(((v0.c4) BETWEEN (v0.c1) AND (v0.c3)))))AND(((v0.c2)||(v0.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) THEN (((v0.c2))<((v0.c2))) END  NULLS LAST, ((((((((((v0.c4)&(v0.c2)))AND(TRIM(DISTINCT x'', v0.c2))))OR(((((v0.c2)OR(x'')))AND(v0.c3)))))OR(((v0.c4) BETWEEN (v0.c1) AND (v0.c3)))))AND(((v0.c2)||(v0.c4)))) DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c3) ORDER BY CASE WHEN (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) THEN (((v0.c2))<((v0.c2))) END  NULLS LAST, ((((((((((v0.c4)&(v0.c2)))AND(TRIM(DISTINCT x'', v0.c2))))OR(((((v0.c2)OR(x'')))AND(v0.c3)))))OR(((v0.c4) BETWEEN (v0.c1) AND (v0.c3)))))AND(((v0.c2)||(v0.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) THEN (((v0.c2))<((v0.c2))) END  NULLS LAST, ((((((((((v0.c4)&(v0.c2)))AND(TRIM(DISTINCT x'', v0.c2))))OR(((((v0.c2)OR(x'')))AND(v0.c3)))))OR(((v0.c4) BETWEEN (v0.c1) AND (v0.c3)))))AND(((v0.c2)||(v0.c4)))) DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c3) ORDER BY CASE WHEN (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) THEN (((v0.c2))<((v0.c2))) END  NULLS LAST, ((((((((((v0.c4)&(v0.c2)))AND(TRIM(DISTINCT x'', v0.c2))))OR(((((v0.c2)OR(x'')))AND(v0.c3)))))OR(((v0.c4) BETWEEN (v0.c1) AND (v0.c3)))))AND(((v0.c2)||(v0.c4)))) DESC;
SELECT ALL * FROM rt0, rt1, v0, t0, t1 WHERE (((CAST(rt0.c0 AS INTEGER))IS NOT(((rt1.c1)*(t1.c0))))) ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))IS NOT(((rt1.c1)*(t1.c0))))) IS TRUE)  as count FROM rt0, rt1, v0, t0, t1 ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC));
SELECT ALL * FROM rt0, rt1, v0, t0, t1 WHERE (((CAST(rt0.c0 AS INTEGER))IS NOT(((rt1.c1)*(t1.c0))))) ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))IS NOT(((rt1.c1)*(t1.c0))))) IS TRUE)  as count FROM rt0, rt1, v0, t0, t1 ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC));
SELECT ALL * FROM rt0, rt1, v0, t0, t1 WHERE (((CAST(rt0.c0 AS INTEGER))IS NOT(((rt1.c1)*(t1.c0))))) ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC);
SELECT ALL * FROM v0, t1, rt1, rt0 NATURAL JOIN t0 WHERE ((~ (((v0.c3)+(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c3)+(rt1.c3))))) IS TRUE)  as count FROM v0, t1, rt1, rt0 NATURAL JOIN t0);
SELECT ALL * FROM v0, t1, rt1, rt0 NATURAL JOIN t0 WHERE ((~ (((v0.c3)+(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c3)+(rt1.c3))))) IS TRUE)  as count FROM v0, t1, rt1, rt0 NATURAL JOIN t0);
SELECT ALL * FROM v0, t1, rt1, rt0 NATURAL JOIN t0 WHERE ((~ (((v0.c3)+(rt1.c3)))));
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 END) NOTNULL)) ORDER BY ((((rt0.c0)-(rt0.c0))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c1)AND(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)-(rt0.c0))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c1)AND(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 END) NOTNULL)) ORDER BY ((((rt0.c0)-(rt0.c0))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c1)AND(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)-(rt0.c0))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c1)AND(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 END) NOTNULL)) ORDER BY ((((rt0.c0)-(rt0.c0))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c1)AND(rt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, t0, v0 LEFT OUTER JOIN t1 ON ((v0.c3 IN ()) IN ()) WHERE (((((v0.c4))==((rt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c4))==((rt1.c0))) IN ())) IS TRUE)  as count FROM rt0, rt1, t0, v0 LEFT OUTER JOIN t1 ON ((v0.c3 IN ()) IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1, t0, v0 LEFT OUTER JOIN t1 ON ((v0.c3 IN ()) IN ()) WHERE (((((v0.c4))==((rt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c4))==((rt1.c0))) IN ())) IS TRUE)  as count FROM rt0, rt1, t0, v0 LEFT OUTER JOIN t1 ON ((v0.c3 IN ()) IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1, t0, v0 LEFT OUTER JOIN t1 ON ((v0.c3 IN ()) IN ()) WHERE (((((v0.c4))==((rt1.c0))) IN ()));
SELECT * FROM t1 CROSS JOIN v0 ON ((((((t0.c0)OR(v0.c4)))AND(v0.c3)))==((t0.c0 IN ()))) CROSS JOIN rt1 ON (((NOT (NULL)))AND(STRFTIME(v0.c3, t1.c0, rt1.c2))) RIGHT OUTER JOIN t0 ON (((((t1.c0))>((t1.c0))))*((rt1.c2 IN (NULL)))) WHERE (LOWER(DISTINCT UPPER(DISTINCT t1.c0))) ORDER BY ((((((v0.c3)AND(rt1.c3)))OR(v0.c3)))<=(x'b9be')), ((((((((((((((v0.c1) BETWEEN (t1.c0) AND (x'61b2f46b')))OR(CASE v0.c4  WHEN v0.c3 THEN v0.c1 WHEN t1.c0 THEN rt1.c1 WHEN NULL THEN t1.c0 END)))AND(rt1.c1)))AND(((((t0.c0)AND(rt1.c1)))OR(NULL)))))OR(((((t1.c0)OR(t0.c0)))AND(v0.c4)))))OR(((t0.c0)|(v0.c1)))))OR(((((rt1.c1)AND(v0.c3)))AND(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT UPPER(DISTINCT t1.c0))) IS TRUE)  as count FROM t1 CROSS JOIN v0 ON ((((((t0.c0)OR(v0.c4)))AND(v0.c3)))=((t0.c0 IN ()))) CROSS JOIN rt1 ON (((NOT (NULL)))AND(STRFTIME(v0.c3, t1.c0, rt1.c2))) RIGHT OUTER JOIN t0 ON (((((t1.c0))>((t1.c0))))*((rt1.c2 IN (NULL)))) ORDER BY ((((((v0.c3)AND(rt1.c3)))OR(v0.c3)))<=(x'b9be')), ((((((((((((((v0.c1) BETWEEN (t1.c0) AND (x'61b2f46b')))OR(CASE v0.c4  WHEN v0.c3 THEN v0.c1 WHEN t1.c0 THEN rt1.c1 WHEN NULL THEN t1.c0 END)))AND(rt1.c1)))AND(((((t0.c0)AND(rt1.c1)))OR(NULL)))))OR(((((t1.c0)OR(t0.c0)))AND(v0.c4)))))OR(((t0.c0)|(v0.c1)))))OR(((((rt1.c1)AND(v0.c3)))AND(t1.c0)))) ASC);
SELECT * FROM t1 CROSS JOIN v0 ON ((((((t0.c0)OR(v0.c4)))AND(v0.c3)))==((t0.c0 IN ()))) CROSS JOIN rt1 ON (((NOT (NULL)))AND(STRFTIME(v0.c3, t1.c0, rt1.c2))) RIGHT OUTER JOIN t0 ON (((((t1.c0))>((t1.c0))))*((rt1.c2 IN (NULL)))) WHERE (LOWER(DISTINCT UPPER(DISTINCT t1.c0))) ORDER BY ((((((v0.c3)AND(rt1.c3)))OR(v0.c3)))<=(x'b9be')), ((((((((((((((v0.c1) BETWEEN (t1.c0) AND (x'61b2f46b')))OR(CASE v0.c4  WHEN v0.c3 THEN v0.c1 WHEN t1.c0 THEN rt1.c1 WHEN NULL THEN t1.c0 END)))AND(rt1.c1)))AND(((((t0.c0)AND(rt1.c1)))OR(NULL)))))OR(((((t1.c0)OR(t0.c0)))AND(v0.c4)))))OR(((t0.c0)|(v0.c1)))))OR(((((rt1.c1)AND(v0.c3)))AND(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT UPPER(DISTINCT t1.c0))) IS TRUE)  as count FROM t1 CROSS JOIN v0 ON ((((((t0.c0)OR(v0.c4)))AND(v0.c3)))=((t0.c0 IN ()))) CROSS JOIN rt1 ON (((NOT (NULL)))AND(STRFTIME(v0.c3, t1.c0, rt1.c2))) RIGHT OUTER JOIN t0 ON (((((t1.c0))>((t1.c0))))*((rt1.c2 IN (NULL)))) ORDER BY ((((((v0.c3)AND(rt1.c3)))OR(v0.c3)))<=(x'b9be')), ((((((((((((((v0.c1) BETWEEN (t1.c0) AND (x'61b2f46b')))OR(CASE v0.c4  WHEN v0.c3 THEN v0.c1 WHEN t1.c0 THEN rt1.c1 WHEN NULL THEN t1.c0 END)))AND(rt1.c1)))AND(((((t0.c0)AND(rt1.c1)))OR(NULL)))))OR(((((t1.c0)OR(t0.c0)))AND(v0.c4)))))OR(((t0.c0)|(v0.c1)))))OR(((((rt1.c1)AND(v0.c3)))AND(t1.c0)))) ASC);
SELECT ALL * FROM rt0, t0, rt1, t1, v0 WHERE (CASE CAST(v0.c3 AS REAL)  WHEN (((rt0.c0, v0.c0, rt1.c2))==((rt0.c1, v0.c1, rt0.c1))) THEN ((v0.c1)+(rt1.c3)) WHEN UNICODE(t1.c0) THEN rt1.c1 WHEN rt0.c3 COLLATE BINARY THEN UNLIKELY(rt1.c3) WHEN ((v0.c4)>=(rt0.c3)) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c0)) WHEN LIKELY(DISTINCT rt0.c1) THEN ((rt0.c0)LIKE(rt0.c0)) ELSE NULLIF(DISTINCT v0.c0, rt0.c1) END) ORDER BY ((((1753110876)IS NOT(rt0.c1)))<=(((rt1.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c3 AS REAL)  WHEN (((rt0.c0, v0.c0, rt1.c2))=((rt0.c1, v0.c1, rt0.c1))) THEN ((v0.c1)+(rt1.c3)) WHEN UNICODE(t1.c0) THEN rt1.c1 WHEN rt0.c3 COLLATE BINARY THEN UNLIKELY(rt1.c3) WHEN ((v0.c4)>=(rt0.c3)) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c0)) WHEN LIKELY(DISTINCT rt0.c1) THEN ((rt0.c0)LIKE(rt0.c0)) ELSE NULLIF(DISTINCT v0.c0, rt0.c1) END) IS TRUE)  as count FROM rt0, t0, rt1, t1, v0 ORDER BY ((((1753110876)IS NOT(rt0.c1)))<=(((rt1.c1) NOT NULL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, rt1, t1, v0 WHERE (CASE CAST(v0.c3 AS REAL)  WHEN (((rt0.c0, v0.c0, rt1.c2))==((rt0.c1, v0.c1, rt0.c1))) THEN ((v0.c1)+(rt1.c3)) WHEN UNICODE(t1.c0) THEN rt1.c1 WHEN rt0.c3 COLLATE BINARY THEN UNLIKELY(rt1.c3) WHEN ((v0.c4)>=(rt0.c3)) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c0)) WHEN LIKELY(DISTINCT rt0.c1) THEN ((rt0.c0)LIKE(rt0.c0)) ELSE NULLIF(DISTINCT v0.c0, rt0.c1) END) ORDER BY ((((1753110876)IS NOT(rt0.c1)))<=(((rt1.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c3 AS REAL)  WHEN (((rt0.c0, v0.c0, rt1.c2))=((rt0.c1, v0.c1, rt0.c1))) THEN ((v0.c1)+(rt1.c3)) WHEN UNICODE(t1.c0) THEN rt1.c1 WHEN rt0.c3 COLLATE BINARY THEN UNLIKELY(rt1.c3) WHEN ((v0.c4)>=(rt0.c3)) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c0)) WHEN LIKELY(DISTINCT rt0.c1) THEN ((rt0.c0)LIKE(rt0.c0)) ELSE NULLIF(DISTINCT v0.c0, rt0.c1) END) IS TRUE)  as count FROM rt0, t0, rt1, t1, v0 ORDER BY ((((1753110876)IS NOT(rt0.c1)))<=(((rt1.c1) NOT NULL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, rt1, t1, v0 WHERE (CASE CAST(v0.c3 AS REAL)  WHEN (((rt0.c0, v0.c0, rt1.c2))==((rt0.c1, v0.c1, rt0.c1))) THEN ((v0.c1)+(rt1.c3)) WHEN UNICODE(t1.c0) THEN rt1.c1 WHEN rt0.c3 COLLATE BINARY THEN UNLIKELY(rt1.c3) WHEN ((v0.c4)>=(rt0.c3)) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c0)) WHEN LIKELY(DISTINCT rt0.c1) THEN ((rt0.c0)LIKE(rt0.c0)) ELSE NULLIF(DISTINCT v0.c0, rt0.c1) END) ORDER BY ((((1753110876)IS NOT(rt0.c1)))<=(((rt1.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, t1);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, t1);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (NULL);
SELECT COUNT(*) FROM rt1, v0 WHERE ((((x'd1ca0faa')) NOT BETWEEN (((((x'', v0.c2, v0.c0))>((-2075724205, v0.c4, v0.c1))))) AND (((((v0.c4))>=((v0.c1))))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((((x'd1ca0faa')) NOT BETWEEN (((((x'', v0.c2, v0.c0))>((-2075724205, v0.c4, v0.c1))))) AND (((((v0.c4))>=((v0.c1))))))) IS TRUE)  as count FROM rt1, v0 ORDER BY NULL);
SELECT COUNT(*) FROM rt1, v0 WHERE ((((x'd1ca0faa')) NOT BETWEEN (((((x'', v0.c2, v0.c0))>((-2075724205, v0.c4, v0.c1))))) AND (((((v0.c4))>=((v0.c1))))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((((x'd1ca0faa')) NOT BETWEEN (((((x'', v0.c2, v0.c0))>((-2075724205, v0.c4, v0.c1))))) AND (((((v0.c4))>=((v0.c1))))))) IS TRUE)  as count FROM rt1, v0 ORDER BY NULL);
SELECT COUNT(*) FROM rt1, v0 WHERE ((((x'd1ca0faa')) NOT BETWEEN (((((x'', v0.c2, v0.c0))>((-2075724205, v0.c4, v0.c1))))) AND (((((v0.c4))>=((v0.c1))))))) ORDER BY NULL;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ('966418186') ORDER BY (NOT ('(L繲W')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('966418186') IS TRUE)  as count FROM rt1, rt0 ORDER BY (NOT ('(L繲W')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ('966418186') ORDER BY (NOT ('(L繲W')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('966418186') IS TRUE)  as count FROM rt1, rt0 ORDER BY (NOT ('(L繲W')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ('966418186') ORDER BY (NOT ('(L繲W')) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3 IN ()), ((rt0.c2)=(rt0.c3)), ((rt0.c2) NOT NULL), CASE WHEN rt0.c3 THEN rt0.c1 END, (rt0.c2 IN ())))!=(((((rt0.c1, '-513958930', rt0.c3)) BETWEEN ((rt0.c1, rt0.c0, '톨')) AND ((rt0.c2, rt0.c3, rt0.c3))), ((rt0.c2)|(rt0.c2)), 0.9573201447606108, 1476342594, (rt0.c0 IN (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 IN ()), ((rt0.c2)=(rt0.c3)), ((rt0.c2) NOT NULL), CASE WHEN rt0.c3 THEN rt0.c1 END, (rt0.c2 IN ())))<>(((((rt0.c1, '-513958930', rt0.c3)) BETWEEN ((rt0.c1, rt0.c0, '톨')) AND ((rt0.c2, rt0.c3, rt0.c3))), ((rt0.c2)|(rt0.c2)), 0.9573201447606108, 1476342594, (rt0.c0 IN (rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3 IN ()), ((rt0.c2)=(rt0.c3)), ((rt0.c2) NOT NULL), CASE WHEN rt0.c3 THEN rt0.c1 END, (rt0.c2 IN ())))!=(((((rt0.c1, '-513958930', rt0.c3)) BETWEEN ((rt0.c1, rt0.c0, '톨')) AND ((rt0.c2, rt0.c3, rt0.c3))), ((rt0.c2)|(rt0.c2)), 0.9573201447606108, 1476342594, (rt0.c0 IN (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 IN ()), ((rt0.c2)=(rt0.c3)), ((rt0.c2) NOT NULL), CASE WHEN rt0.c3 THEN rt0.c1 END, (rt0.c2 IN ())))<>(((((rt0.c1, '-513958930', rt0.c3)) BETWEEN ((rt0.c1, rt0.c0, '톨')) AND ((rt0.c2, rt0.c3, rt0.c3))), ((rt0.c2)|(rt0.c2)), 0.9573201447606108, 1476342594, (rt0.c0 IN (rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3 IN ()), ((rt0.c2)=(rt0.c3)), ((rt0.c2) NOT NULL), CASE WHEN rt0.c3 THEN rt0.c1 END, (rt0.c2 IN ())))!=(((((rt0.c1, '-513958930', rt0.c3)) BETWEEN ((rt0.c1, rt0.c0, '톨')) AND ((rt0.c2, rt0.c3, rt0.c3))), ((rt0.c2)|(rt0.c2)), 0.9573201447606108, 1476342594, (rt0.c0 IN (rt0.c3))))));
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON t1.c0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON t1.c0);
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON t1.c0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON t1.c0);
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON t1.c0 WHERE (v0.c1);
SELECT COUNT(*) FROM t0, t1 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM t0, t1);
SELECT COUNT(*) FROM t0, t1 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM t0, t1);
SELECT COUNT(*) FROM t0, t1 WHERE (NULL COLLATE BINARY);
SELECT COUNT(*) FROM t0, rt0 WHERE (-2.47564236E8);
SELECT SUM(count) FROM (SELECT ALL ((-2.47564236E8) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (-2.47564236E8);
SELECT SUM(count) FROM (SELECT ALL ((-2.47564236E8) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (-2.47564236E8);
SELECT COUNT(*) FROM v0, t1, rt0, rt1 WHERE (((((rt0.c3)&(t1.c0))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (NULL))) ORDER BY UPPER(v0.c3 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)&(t1.c0))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (NULL))) IS TRUE)  as count FROM v0, t1, rt0, rt1 ORDER BY UPPER(v0.c3 COLLATE RTRIM)  NULLS FIRST);
SELECT COUNT(*) FROM v0, t1, rt0, rt1 WHERE (((((rt0.c3)&(t1.c0))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (NULL))) ORDER BY UPPER(v0.c3 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)&(t1.c0))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (NULL))) IS TRUE)  as count FROM v0, t1, rt0, rt1 ORDER BY UPPER(v0.c3 COLLATE RTRIM)  NULLS FIRST);
SELECT COUNT(*) FROM v0, t1, rt0, rt1 WHERE (((((rt0.c3)&(t1.c0))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (NULL))) ORDER BY UPPER(v0.c3 COLLATE RTRIM)  NULLS FIRST;
SELECT COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ('-1592789595' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('-1592789595' COLLATE RTRIM) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON rt0.c2);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ('-1592789595' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('-1592789595' COLLATE RTRIM) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON rt0.c2);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ('-1592789595' COLLATE RTRIM);
SELECT * FROM t0, rt0, rt1, v0, t1 WHERE ((((((t0.c0)OR(rt1.c0)), (((rt1.c2, rt1.c2, rt0.c2))<=((rt0.c3, rt1.c3, rt1.c2))), ((t0.c0)<=(v0.c0))))==((rt1.c1, ((rt1.c1)/(v0.c2)), ((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt0.c2)))))) ORDER BY (((t0.c0)IS(rt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((((t0.c0)OR(rt1.c0)), (((rt1.c2, rt1.c2, rt0.c2))<=((rt0.c3, rt1.c3, rt1.c2))), ((t0.c0)<=(v0.c0))))==((rt1.c1, ((rt1.c1)/(v0.c2)), ((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt0.c2)))))) IS TRUE)  as count FROM t0, rt0, rt1, v0, t1 ORDER BY (((t0.c0)IS(rt1.c1)) IN ()));
SELECT * FROM t0, rt0, rt1, v0, t1 WHERE ((((((t0.c0)OR(rt1.c0)), (((rt1.c2, rt1.c2, rt0.c2))<=((rt0.c3, rt1.c3, rt1.c2))), ((t0.c0)<=(v0.c0))))==((rt1.c1, ((rt1.c1)/(v0.c2)), ((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt0.c2)))))) ORDER BY (((t0.c0)IS(rt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((((t0.c0)OR(rt1.c0)), (((rt1.c2, rt1.c2, rt0.c2))<=((rt0.c3, rt1.c3, rt1.c2))), ((t0.c0)<=(v0.c0))))==((rt1.c1, ((rt1.c1)/(v0.c2)), ((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt0.c2)))))) IS TRUE)  as count FROM t0, rt0, rt1, v0, t1 ORDER BY (((t0.c0)IS(rt1.c1)) IN ()));
SELECT * FROM t0, rt0, rt1, v0, t1 WHERE ((((((t0.c0)OR(rt1.c0)), (((rt1.c2, rt1.c2, rt0.c2))<=((rt0.c3, rt1.c3, rt1.c2))), ((t0.c0)<=(v0.c0))))==((rt1.c1, ((rt1.c1)/(v0.c2)), ((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt0.c2)))))) ORDER BY (((t0.c0)IS(rt1.c1)) IN ());
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN (((t0.c0)%(t0.c0))) AND (((t0.c0)||(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (((t0.c0)%(t0.c0))) AND (((t0.c0)||(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN (((t0.c0)%(t0.c0))) AND (((t0.c0)||(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (((t0.c0)%(t0.c0))) AND (((t0.c0)||(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN (((t0.c0)%(t0.c0))) AND (((t0.c0)||(t0.c0)))));
SELECT COUNT(*) FROM t0, t1, v0, rt0, rt1 WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM t0, t1, v0, rt0, rt1);
SELECT COUNT(*) FROM t0, t1, v0, rt0, rt1 WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM t0, t1, v0, rt0, rt1);
SELECT COUNT(*) FROM t0, t1, v0, rt0, rt1 WHERE (v0.c3);
SELECT * FROM t1, rt1 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c2 WHEN rt1.c0 THEN v0.c2 WHEN rt1.c0 THEN v0.c4 WHEN v0.c3 THEN v0.c4 WHEN rt1.c2 THEN rt1.c2 WHEN v0.c0 THEN v0.c3 WHEN rt1.c1 THEN t1.c0 ELSE rt1.c0 END) BETWEEN (CASE WHEN v0.c2 THEN rt1.c3 ELSE rt1.c3 END) AND (rt1.c3)) WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t1, rt1 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c2 WHEN rt1.c0 THEN v0.c2 WHEN rt1.c0 THEN v0.c4 WHEN v0.c3 THEN v0.c4 WHEN rt1.c2 THEN rt1.c2 WHEN v0.c0 THEN v0.c3 WHEN rt1.c1 THEN t1.c0 ELSE rt1.c0 END) BETWEEN (CASE WHEN v0.c2 THEN rt1.c3 ELSE rt1.c3 END) AND (rt1.c3)));
SELECT * FROM t1, rt1 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c2 WHEN rt1.c0 THEN v0.c2 WHEN rt1.c0 THEN v0.c4 WHEN v0.c3 THEN v0.c4 WHEN rt1.c2 THEN rt1.c2 WHEN v0.c0 THEN v0.c3 WHEN rt1.c1 THEN t1.c0 ELSE rt1.c0 END) BETWEEN (CASE WHEN v0.c2 THEN rt1.c3 ELSE rt1.c3 END) AND (rt1.c3)) WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t1, rt1 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c2 WHEN rt1.c0 THEN v0.c2 WHEN rt1.c0 THEN v0.c4 WHEN v0.c3 THEN v0.c4 WHEN rt1.c2 THEN rt1.c2 WHEN v0.c0 THEN v0.c3 WHEN rt1.c1 THEN t1.c0 ELSE rt1.c0 END) BETWEEN (CASE WHEN v0.c2 THEN rt1.c3 ELSE rt1.c3 END) AND (rt1.c3)));
SELECT * FROM t1, rt1 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c2 WHEN rt1.c0 THEN v0.c2 WHEN rt1.c0 THEN v0.c4 WHEN v0.c3 THEN v0.c4 WHEN rt1.c2 THEN rt1.c2 WHEN v0.c0 THEN v0.c3 WHEN rt1.c1 THEN t1.c0 ELSE rt1.c0 END) BETWEEN (CASE WHEN v0.c2 THEN rt1.c3 ELSE rt1.c3 END) AND (rt1.c3)) WHERE (v0.c1);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (CAST(((rt0.c2)IS(rt1.c2)) AS TEXT)) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)IS(rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (CAST(((rt0.c2)IS(rt1.c2)) AS TEXT)) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)IS(rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (CAST(((rt0.c2)IS(rt1.c2)) AS TEXT)) ORDER BY rt0.c2;
SELECT COUNT(*) FROM t0, v0 WHERE ('-247564236');
SELECT SUM(count) FROM (SELECT (('-247564236') IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ('-247564236');
SELECT SUM(count) FROM (SELECT (('-247564236') IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ('-247564236');
SELECT ALL * FROM rt1 WHERE ((((((rt1.c3, rt1.c1, rt1.c0))==((rt1.c3, rt1.c1, rt1.c3)))) NOT BETWEEN ((((rt1.c2, rt1.c3, rt1.c0))!=(('', rt1.c3, rt1.c0)))) AND (rt1.c2 COLLATE NOCASE))) ORDER BY (((((rt1.c3, rt1.c3, rt1.c0))>((rt1.c0, rt1.c2, -8.58162517E8)))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3, rt1.c1, rt1.c0))==((rt1.c3, rt1.c1, rt1.c3)))) NOT BETWEEN ((((rt1.c2, rt1.c3, rt1.c0))!=(('', rt1.c3, rt1.c0)))) AND (rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c3, rt1.c3, rt1.c0))>((rt1.c0, rt1.c2, -8.58162517E8)))) IS TRUE));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c3, rt1.c1, rt1.c0))==((rt1.c3, rt1.c1, rt1.c3)))) NOT BETWEEN ((((rt1.c2, rt1.c3, rt1.c0))!=(('', rt1.c3, rt1.c0)))) AND (rt1.c2 COLLATE NOCASE))) ORDER BY (((((rt1.c3, rt1.c3, rt1.c0))>((rt1.c0, rt1.c2, -8.58162517E8)))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3, rt1.c1, rt1.c0))==((rt1.c3, rt1.c1, rt1.c3)))) NOT BETWEEN ((((rt1.c2, rt1.c3, rt1.c0))!=(('', rt1.c3, rt1.c0)))) AND (rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c3, rt1.c3, rt1.c0))>((rt1.c0, rt1.c2, -8.58162517E8)))) IS TRUE));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c3, rt1.c1, rt1.c0))==((rt1.c3, rt1.c1, rt1.c3)))) NOT BETWEEN ((((rt1.c2, rt1.c3, rt1.c0))!=(('', rt1.c3, rt1.c0)))) AND (rt1.c2 COLLATE NOCASE))) ORDER BY (((((rt1.c3, rt1.c3, rt1.c0))>((rt1.c0, rt1.c2, -8.58162517E8)))) IS TRUE);
SELECT COUNT(*) FROM v0, t1, rt1, rt0 WHERE (((rt0.c1 COLLATE RTRIM)>(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)>(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0, t1 NOT INDEXED, rt1, rt0);
SELECT COUNT(*) FROM v0, t1, rt1, rt0 WHERE (((rt0.c1 COLLATE RTRIM)>(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)>(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0, t1 NOT INDEXED, rt1, rt0);
SELECT COUNT(*) FROM v0, t1, rt1, rt0 WHERE (((rt0.c1 COLLATE RTRIM)>(rt1.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, t1, rt0, rt1, v0 WHERE (t0.c0) ORDER BY CAST(CAST(rt1.c0 AS REAL) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, t1, rt0, rt1, v0 ORDER BY CAST(CAST(rt1.c0 AS REAL) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1, rt0, rt1, v0 WHERE (t0.c0) ORDER BY CAST(CAST(rt1.c0 AS REAL) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, t1, rt0, rt1, v0 ORDER BY CAST(CAST(rt1.c0 AS REAL) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1, rt0, rt1, v0 WHERE (t0.c0) ORDER BY CAST(CAST(rt1.c0 AS REAL) AS INTEGER)  NULLS LAST;
SELECT ALL * FROM rt1, t0 CROSS JOIN v0 ON ((t0.c0)-(CASE WHEN rt1.c3 THEN v0.c0 ELSE v0.c0 END)) WHERE (((DATETIME(rt1.c0, v0.c4, rt1.c3))+(x'a8d10f34'))) ORDER BY rt1.c2 ASC  NULLS LAST, ((((rt1.c0) IS FALSE))&(((t0.c0)>=(v0.c2)))), TOTAL_CHANGES() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(rt1.c0, v0.c4, rt1.c3))+(x'a8d10f34'))) IS TRUE)  as count FROM rt1 NOT INDEXED, t0 CROSS JOIN v0 ON ((t0.c0)-(CASE WHEN rt1.c3 THEN v0.c0 ELSE v0.c0 END)) ORDER BY rt1.c2 ASC  NULLS LAST, ((((rt1.c0) IS FALSE))&(((t0.c0)>=(v0.c2)))), TOTAL_CHANGES() ASC  NULLS LAST);
SELECT ALL * FROM rt1, t0 CROSS JOIN v0 ON ((t0.c0)-(CASE WHEN rt1.c3 THEN v0.c0 ELSE v0.c0 END)) WHERE (((DATETIME(rt1.c0, v0.c4, rt1.c3))+(x'a8d10f34'))) ORDER BY rt1.c2 ASC  NULLS LAST, ((((rt1.c0) IS FALSE))&(((t0.c0)>=(v0.c2)))), TOTAL_CHANGES() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(rt1.c0, v0.c4, rt1.c3))+(x'a8d10f34'))) IS TRUE)  as count FROM rt1 NOT INDEXED, t0 CROSS JOIN v0 ON ((t0.c0)-(CASE WHEN rt1.c3 THEN v0.c0 ELSE v0.c0 END)) ORDER BY rt1.c2 ASC  NULLS LAST, ((((rt1.c0) IS FALSE))&(((t0.c0)>=(v0.c2)))), TOTAL_CHANGES() ASC  NULLS LAST);
SELECT ALL * FROM rt1, t0 CROSS JOIN v0 ON ((t0.c0)-(CASE WHEN rt1.c3 THEN v0.c0 ELSE v0.c0 END)) WHERE (((DATETIME(rt1.c0, v0.c4, rt1.c3))+(x'a8d10f34'))) ORDER BY rt1.c2 ASC  NULLS LAST, ((((rt1.c0) IS FALSE))&(((t0.c0)>=(v0.c2)))), TOTAL_CHANGES() ASC  NULLS LAST;
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON QUOTE((+ (rt0.c0))) INNER JOIN t0 ON CASE CASE WHEN t1.c0 THEN '64Pw\r_	n' WHEN v0.c3 THEN rt1.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt0.c1 ELSE 0.8806658676426835 END  WHEN ((rt0.c3)|(t1.c0)) THEN CASE WHEN rt0.c0 THEN v0.c1 END ELSE v0.c2 END LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT rt0.c0, CAST(v0.c4 AS BLOB)) LEFT OUTER JOIN t1 ON rt0.c2 WHERE (((rt1.c2) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON QUOTE((+ (rt0.c0))) INNER JOIN t0 ON CASE CASE WHEN t1.c0 THEN '64Pw\r_	n' WHEN v0.c3 THEN rt1.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt0.c1 ELSE 0.8806658676426835 END  WHEN ((rt0.c3)|(t1.c0)) THEN CASE WHEN rt0.c0 THEN v0.c1 END ELSE v0.c2 END LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT rt0.c0, CAST(v0.c4 AS BLOB)) LEFT OUTER JOIN t1 ON rt0.c2);
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON QUOTE((+ (rt0.c0))) INNER JOIN t0 ON CASE CASE WHEN t1.c0 THEN '64Pw\r_	n' WHEN v0.c3 THEN rt1.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt0.c1 ELSE 0.8806658676426835 END  WHEN ((rt0.c3)|(t1.c0)) THEN CASE WHEN rt0.c0 THEN v0.c1 END ELSE v0.c2 END LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT rt0.c0, CAST(v0.c4 AS BLOB)) LEFT OUTER JOIN t1 ON rt0.c2 WHERE (((rt1.c2) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON QUOTE((+ (rt0.c0))) INNER JOIN t0 ON CASE CASE WHEN t1.c0 THEN '64Pw\r_	n' WHEN v0.c3 THEN rt1.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt0.c1 ELSE 0.8806658676426835 END  WHEN ((rt0.c3)|(t1.c0)) THEN CASE WHEN rt0.c0 THEN v0.c1 END ELSE v0.c2 END LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT rt0.c0, CAST(v0.c4 AS BLOB)) LEFT OUTER JOIN t1 ON rt0.c2);
SELECT * FROM t1, v0, t0, rt0 WHERE ('2120526126' COLLATE RTRIM) ORDER BY v0.c2 DESC, LOWER(DISTINCT ABS(v0.c2)) ASC, CASE WHEN 0.6757473828588274 THEN ((((v0.c1)OR(rt0.c3)))AND(t0.c0)) ELSE (((NULL)) NOT BETWEEN ((v0.c2)) AND ((t1.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('2120526126' COLLATE RTRIM) IS TRUE)  as count FROM t1, v0, t0, rt0 ORDER BY v0.c2 DESC, LOWER(DISTINCT ABS(v0.c2)) ASC, CASE WHEN 0.6757473828588274 THEN ((((v0.c1)OR(rt0.c3)))AND(t0.c0)) ELSE (((NULL)) NOT BETWEEN ((v0.c2)) AND ((t1.c0))) END  NULLS LAST);
SELECT * FROM t1, v0, t0, rt0 WHERE ('2120526126' COLLATE RTRIM) ORDER BY v0.c2 DESC, LOWER(DISTINCT ABS(v0.c2)) ASC, CASE WHEN 0.6757473828588274 THEN ((((v0.c1)OR(rt0.c3)))AND(t0.c0)) ELSE (((NULL)) NOT BETWEEN ((v0.c2)) AND ((t1.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('2120526126' COLLATE RTRIM) IS TRUE)  as count FROM t1, v0, t0, rt0 ORDER BY v0.c2 DESC, LOWER(DISTINCT ABS(v0.c2)) ASC, CASE WHEN 0.6757473828588274 THEN ((((v0.c1)OR(rt0.c3)))AND(t0.c0)) ELSE (((NULL)) NOT BETWEEN ((v0.c2)) AND ((t1.c0))) END  NULLS LAST);
SELECT * FROM t1, v0, t0, rt0 WHERE ('2120526126' COLLATE RTRIM) ORDER BY v0.c2 DESC, LOWER(DISTINCT ABS(v0.c2)) ASC, CASE WHEN 0.6757473828588274 THEN ((((v0.c1)OR(rt0.c3)))AND(t0.c0)) ELSE (((NULL)) NOT BETWEEN ((v0.c2)) AND ((t1.c0))) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE ((((v0.c3, v0.c3, rt1.c0)) NOT BETWEEN ((((rt1.c0)/(v0.c3)), x'', ((v0.c3) NOT BETWEEN (v0.c2) AND (v0.c1)))) AND ((((v0.c0) IS FALSE), CASE WHEN x'' THEN rt0.c0 END, 0.2639299160777612))));
SELECT SUM(count) FROM (SELECT (((((v0.c3, v0.c3, rt1.c0)) NOT BETWEEN ((((rt1.c0)/(v0.c3)), x'', ((v0.c3) NOT BETWEEN (v0.c2) AND (v0.c1)))) AND ((((v0.c0) IS FALSE), CASE WHEN x'' THEN rt0.c0 END, 0.2639299160777612)))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE ((((v0.c3, v0.c3, rt1.c0)) NOT BETWEEN ((((rt1.c0)/(v0.c3)), x'', ((v0.c3) NOT BETWEEN (v0.c2) AND (v0.c1)))) AND ((((v0.c0) IS FALSE), CASE WHEN x'' THEN rt0.c0 END, 0.2639299160777612))));
SELECT SUM(count) FROM (SELECT (((((v0.c3, v0.c3, rt1.c0)) NOT BETWEEN ((((rt1.c0)/(v0.c3)), x'', ((v0.c3) NOT BETWEEN (v0.c2) AND (v0.c1)))) AND ((((v0.c0) IS FALSE), CASE WHEN x'' THEN rt0.c0 END, 0.2639299160777612)))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE ((((v0.c3, v0.c3, rt1.c0)) NOT BETWEEN ((((rt1.c0)/(v0.c3)), x'', ((v0.c3) NOT BETWEEN (v0.c2) AND (v0.c1)))) AND ((((v0.c0) IS FALSE), CASE WHEN x'' THEN rt0.c0 END, 0.2639299160777612))));
SELECT ALL COUNT(*) FROM t0, rt0, rt1, t1, v0 WHERE ((((NULL IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) IS FALSE)) IS TRUE)  as count FROM t0, rt0, rt1, t1, v0);
SELECT ALL COUNT(*) FROM t0, rt0, rt1, t1, v0 WHERE ((((NULL IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) IS FALSE)) IS TRUE)  as count FROM t0, rt0, rt1, t1, v0);
SELECT ALL COUNT(*) FROM t0, rt0, rt1, t1, v0 WHERE ((((NULL IN ())) IS FALSE));
SELECT * FROM t0 RIGHT OUTER JOIN t1 ON ((((((((((((t0.c0 COLLATE BINARY)AND(((rt1.c3)>=(rt1.c3)))))OR(rt1.c1 COLLATE BINARY)))OR((t1.c0 IN ()))))OR(((rt1.c3) BETWEEN (t0.c0) AND (rt1.c3)))))AND(CAST(rt1.c1 AS TEXT))))AND(NULL)) LEFT OUTER JOIN rt1 ON ((((x'') BETWEEN (rt1.c1) AND (t1.c0))) BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END) AND (((t1.c0)AND(t0.c0)))) WHERE (CASE ((((t1.c0)OR(rt1.c0)))AND(rt1.c1))  WHEN ((t1.c0)-(rt1.c0)) THEN TYPEOF(rt1.c3) WHEN ((rt1.c0)>=(rt1.c3)) THEN rt1.c1 COLLATE BINARY WHEN rt1.c3 COLLATE NOCASE THEN CASE rt1.c3  WHEN 1960891485 THEN t1.c0 END ELSE CASE WHEN NULL THEN t1.c0 END END) ORDER BY CASE rt1.c1  WHEN ((t0.c0)|(rt1.c2)) THEN (((t1.c0))<=((rt1.c2))) END DESC  NULLS LAST, '*U' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t1.c0)OR(rt1.c0)))AND(rt1.c1))  WHEN ((t1.c0)-(rt1.c0)) THEN TYPEOF(rt1.c3) WHEN ((rt1.c0)>=(rt1.c3)) THEN rt1.c1 COLLATE BINARY WHEN rt1.c3 COLLATE NOCASE THEN CASE rt1.c3  WHEN 1960891485 THEN t1.c0 END ELSE CASE WHEN NULL THEN t1.c0 END END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON ((((((((((((t0.c0 COLLATE BINARY)AND(((rt1.c3)>=(rt1.c3)))))OR(rt1.c1 COLLATE BINARY)))OR((t1.c0 IN ()))))OR(((rt1.c3) BETWEEN (t0.c0) AND (rt1.c3)))))AND(CAST(rt1.c1 AS TEXT))))AND(NULL)) LEFT OUTER JOIN rt1 ON ((((x'') BETWEEN (rt1.c1) AND (t1.c0))) BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END) AND (((t1.c0)AND(t0.c0)))) ORDER BY CASE rt1.c1  WHEN ((t0.c0)|(rt1.c2)) THEN (((t1.c0))<=((rt1.c2))) END DESC  NULLS LAST, '*U' DESC  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN t1 ON ((((((((((((t0.c0 COLLATE BINARY)AND(((rt1.c3)>=(rt1.c3)))))OR(rt1.c1 COLLATE BINARY)))OR((t1.c0 IN ()))))OR(((rt1.c3) BETWEEN (t0.c0) AND (rt1.c3)))))AND(CAST(rt1.c1 AS TEXT))))AND(NULL)) LEFT OUTER JOIN rt1 ON ((((x'') BETWEEN (rt1.c1) AND (t1.c0))) BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END) AND (((t1.c0)AND(t0.c0)))) WHERE (CASE ((((t1.c0)OR(rt1.c0)))AND(rt1.c1))  WHEN ((t1.c0)-(rt1.c0)) THEN TYPEOF(rt1.c3) WHEN ((rt1.c0)>=(rt1.c3)) THEN rt1.c1 COLLATE BINARY WHEN rt1.c3 COLLATE NOCASE THEN CASE rt1.c3  WHEN 1960891485 THEN t1.c0 END ELSE CASE WHEN NULL THEN t1.c0 END END) ORDER BY CASE rt1.c1  WHEN ((t0.c0)|(rt1.c2)) THEN (((t1.c0))<=((rt1.c2))) END DESC  NULLS LAST, '*U' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t1.c0)OR(rt1.c0)))AND(rt1.c1))  WHEN ((t1.c0)-(rt1.c0)) THEN TYPEOF(rt1.c3) WHEN ((rt1.c0)>=(rt1.c3)) THEN rt1.c1 COLLATE BINARY WHEN rt1.c3 COLLATE NOCASE THEN CASE rt1.c3  WHEN 1960891485 THEN t1.c0 END ELSE CASE WHEN NULL THEN t1.c0 END END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON ((((((((((((t0.c0 COLLATE BINARY)AND(((rt1.c3)>=(rt1.c3)))))OR(rt1.c1 COLLATE BINARY)))OR((t1.c0 IN ()))))OR(((rt1.c3) BETWEEN (t0.c0) AND (rt1.c3)))))AND(CAST(rt1.c1 AS TEXT))))AND(NULL)) LEFT OUTER JOIN rt1 ON ((((x'') BETWEEN (rt1.c1) AND (t1.c0))) BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END) AND (((t1.c0)AND(t0.c0)))) ORDER BY CASE rt1.c1  WHEN ((t0.c0)|(rt1.c2)) THEN (((t1.c0))<=((rt1.c2))) END DESC  NULLS LAST, '*U' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, v0, rt1, t1 INDEXED BY i50 WHERE (((0.9460278845753256) BETWEEN ((~ (rt0.c3))) AND (TRIM(rt1.c3, v0.c1))));
SELECT SUM(count) FROM (SELECT ((((0.9460278845753256) BETWEEN ((~ (rt0.c3))) AND (TRIM(rt1.c3, v0.c1)))) IS TRUE)  as count FROM rt0, t0, v0, rt1, t1 INDEXED BY i50);
SELECT COUNT(*) FROM rt0, t0, v0, rt1, t1 INDEXED BY i50 WHERE (((0.9460278845753256) BETWEEN ((~ (rt0.c3))) AND (TRIM(rt1.c3, v0.c1))));
SELECT SUM(count) FROM (SELECT ((((0.9460278845753256) BETWEEN ((~ (rt0.c3))) AND (TRIM(rt1.c3, v0.c1)))) IS TRUE)  as count FROM rt0, t0, v0, rt1, t1 INDEXED BY i50);
SELECT COUNT(*) FROM rt0, t0, v0, rt1, t1 INDEXED BY i50 WHERE (((0.9460278845753256) BETWEEN ((~ (rt0.c3))) AND (TRIM(rt1.c3, v0.c1))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN x'' THEN MIN(rt1.c0, rt1.c2, rt1.c1, rt1.c1, '0.36323486861080156', rt0.c3) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN MIN(rt1.c0, rt1.c2, rt1.c1, rt1.c1, '0.36323486861080156', rt0.c3) END) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN x'' THEN MIN(rt1.c0, rt1.c2, rt1.c1, rt1.c1, '0.36323486861080156', rt0.c3) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN MIN(rt1.c0, rt1.c2, rt1.c1, rt1.c1, '0.36323486861080156', rt0.c3) END) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN x'' THEN MIN(rt1.c0, rt1.c2, rt1.c1, rt1.c1, '0.36323486861080156', rt0.c3) END);
SELECT ALL COUNT(*) FROM t0, v0, rt1 WHERE (CAST(CASE rt1.c0  WHEN v0.c2 THEN v0.c4 ELSE v0.c3 END AS INTEGER)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c0  WHEN v0.c2 THEN v0.c4 ELSE v0.c3 END AS INTEGER)) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0, v0, rt1 WHERE (CAST(CASE rt1.c0  WHEN v0.c2 THEN v0.c4 ELSE v0.c3 END AS INTEGER)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c0  WHEN v0.c2 THEN v0.c4 ELSE v0.c3 END AS INTEGER)) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0, v0, rt1 WHERE (CAST(CASE rt1.c0  WHEN v0.c2 THEN v0.c4 ELSE v0.c3 END AS INTEGER)) ORDER BY NULL;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((rt0.c2)||(rt0.c3))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (0.49594439219374975))) AND ((rt0.c0 IN ()))) RIGHT OUTER JOIN v0 ON rt0.c0 WHERE (((((NOT (t0.c0)), t0.c0, ((v0.c2)GLOB(v0.c0))))<((v0.c3, (((rt0.c3))>=((t0.c0))), CAST(rt0.c1 AS TEXT))))) ORDER BY ((UPPER(DISTINCT t0.c0)) IS FALSE), ((((v0.c1) BETWEEN (v0.c4) AND (rt0.c1)))<((x'34a8423bcae6' IN (v0.c4, t0.c0)))) ASC, rt0.c3 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (t0.c0)), t0.c0, ((v0.c2)GLOB(v0.c0))))<((v0.c3, (((rt0.c3))>=((t0.c0))), CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((rt0.c2)||(rt0.c3))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (0.49594439219374975))) AND ((rt0.c0 IN ()))) RIGHT OUTER JOIN v0 ON rt0.c0 ORDER BY ((UPPER(DISTINCT t0.c0)) IS FALSE), ((((v0.c1) BETWEEN (v0.c4) AND (rt0.c1)))<((x'34a8423bcae6' IN (v0.c4, t0.c0)))) ASC, rt0.c3 COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((rt0.c2)||(rt0.c3))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (0.49594439219374975))) AND ((rt0.c0 IN ()))) RIGHT OUTER JOIN v0 ON rt0.c0 WHERE (((((NOT (t0.c0)), t0.c0, ((v0.c2)GLOB(v0.c0))))<((v0.c3, (((rt0.c3))>=((t0.c0))), CAST(rt0.c1 AS TEXT))))) ORDER BY ((UPPER(DISTINCT t0.c0)) IS FALSE), ((((v0.c1) BETWEEN (v0.c4) AND (rt0.c1)))<((x'34a8423bcae6' IN (v0.c4, t0.c0)))) ASC, rt0.c3 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (t0.c0)), t0.c0, ((v0.c2)GLOB(v0.c0))))<((v0.c3, (((rt0.c3))>=((t0.c0))), CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((rt0.c2)||(rt0.c3))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (0.49594439219374975))) AND ((rt0.c0 IN ()))) RIGHT OUTER JOIN v0 ON rt0.c0 ORDER BY ((UPPER(DISTINCT t0.c0)) IS FALSE), ((((v0.c1) BETWEEN (v0.c4) AND (rt0.c1)))<((x'34a8423bcae6' IN (v0.c4, t0.c0)))) ASC, rt0.c3 COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((rt0.c2)||(rt0.c3))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (0.49594439219374975))) AND ((rt0.c0 IN ()))) RIGHT OUTER JOIN v0 ON rt0.c0 WHERE (((((NOT (t0.c0)), t0.c0, ((v0.c2)GLOB(v0.c0))))<((v0.c3, (((rt0.c3))>=((t0.c0))), CAST(rt0.c1 AS TEXT))))) ORDER BY ((UPPER(DISTINCT t0.c0)) IS FALSE), ((((v0.c1) BETWEEN (v0.c4) AND (rt0.c1)))<((x'34a8423bcae6' IN (v0.c4, t0.c0)))) ASC, rt0.c3 COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1, rt0, v0 WHERE ((((rt1.c3)) BETWEEN ((UNLIKELY(DISTINCT v0.c4))) AND (((('') BETWEEN (rt0.c2) AND (rt1.c3)))))) ORDER BY (NOT ((~ (0xffffffffb575c476)))) DESC, (NOT (((v0.c0)||(x'')))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c3)) BETWEEN ((UNLIKELY(DISTINCT v0.c4))) AND (((('') BETWEEN (rt0.c2) AND (rt1.c3)))))) IS TRUE)  as count FROM t0, rt1, rt0, v0 ORDER BY (NOT ((~ (0xffffffffb575c476)))) DESC, (NOT (((v0.c0)||(x'')))) DESC);
SELECT ALL COUNT(*) FROM t0, rt1, rt0, v0 WHERE ((((rt1.c3)) BETWEEN ((UNLIKELY(DISTINCT v0.c4))) AND (((('') BETWEEN (rt0.c2) AND (rt1.c3)))))) ORDER BY (NOT ((~ (0xffffffffb575c476)))) DESC, (NOT (((v0.c0)||(x'')))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c3)) BETWEEN ((UNLIKELY(DISTINCT v0.c4))) AND (((('') BETWEEN (rt0.c2) AND (rt1.c3)))))) IS TRUE)  as count FROM t0, rt1, rt0, v0 ORDER BY (NOT ((~ (0xffffffffb575c476)))) DESC, (NOT (((v0.c0)||(x'')))) DESC);
SELECT ALL COUNT(*) FROM t0, rt1, rt0, v0 WHERE ((((rt1.c3)) BETWEEN ((UNLIKELY(DISTINCT v0.c4))) AND (((('') BETWEEN (rt0.c2) AND (rt1.c3)))))) ORDER BY (NOT ((~ (0xffffffffb575c476)))) DESC, (NOT (((v0.c0)||(x'')))) DESC;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((v0.c1)%(((v0.c4) BETWEEN (v0.c4) AND (x'')))));
SELECT SUM(count) FROM (SELECT ((((v0.c1)%(((v0.c4) BETWEEN (v0.c4) AND (x''))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((v0.c1)%(((v0.c4) BETWEEN (v0.c4) AND (x'')))));
SELECT SUM(count) FROM (SELECT ((((v0.c1)%(((v0.c4) BETWEEN (v0.c4) AND (x''))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((v0.c1)%(((v0.c4) BETWEEN (v0.c4) AND (x'')))));
SELECT COUNT(*) FROM t1, rt0, t0, rt1, v0 WHERE ((((((v0.c3, rt1.c1, rt1.c3))<((v0.c4, v0.c3, v0.c2)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c3, rt1.c1, rt1.c3))<((v0.c4, v0.c3, v0.c2)))) ISNULL)) IS TRUE)  as count FROM t1, rt0, t0, rt1, v0);
SELECT COUNT(*) FROM t1, rt0, t0, rt1, v0 WHERE ((((((v0.c3, rt1.c1, rt1.c3))<((v0.c4, v0.c3, v0.c2)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c3, rt1.c1, rt1.c3))<((v0.c4, v0.c3, v0.c2)))) ISNULL)) IS TRUE)  as count FROM t1, rt0, t0, rt1, v0);
SELECT COUNT(*) FROM t1, rt0, t0, rt1, v0 WHERE ((((((v0.c3, rt1.c1, rt1.c3))<((v0.c4, v0.c3, v0.c2)))) ISNULL));
SELECT * FROM v0, rt0, rt1, t1, t0 WHERE (CASE v0.c0 COLLATE BINARY  WHEN t1.c0 COLLATE RTRIM THEN NULL COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0 COLLATE BINARY  WHEN t1.c0 COLLATE RTRIM THEN NULL COLLATE RTRIM END) IS TRUE)  as count FROM v0, rt0, rt1, t1, t0);
SELECT * FROM v0, rt0, rt1, t1, t0 WHERE (CASE v0.c0 COLLATE BINARY  WHEN t1.c0 COLLATE RTRIM THEN NULL COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0 COLLATE BINARY  WHEN t1.c0 COLLATE RTRIM THEN NULL COLLATE RTRIM END) IS TRUE)  as count FROM v0, rt0, rt1, t1, t0);
SELECT * FROM v0, rt0, rt1, t1, t0 WHERE (CASE v0.c0 COLLATE BINARY  WHEN t1.c0 COLLATE RTRIM THEN NULL COLLATE RTRIM END);
SELECT ALL * FROM v0 WHERE (COALESCE(DISTINCT (NOT (v0.c3)), x''));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (NOT (v0.c3)), x'')) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (COALESCE(DISTINCT (NOT (v0.c3)), x''));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (NOT (v0.c3)), x'')) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (COALESCE(DISTINCT (NOT (v0.c3)), x''));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN (t0.c0)))<=(('~h0cL1\r)' IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c0)))<=(('~h0cL1\r)' IN (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN (t0.c0)))<=(('~h0cL1\r)' IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c0)))<=(('~h0cL1\r)' IN (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN (t0.c0)))<=(('~h0cL1\r)' IN (t0.c0)))));
SELECT * FROM t0, rt0 LEFT OUTER JOIN t1 ON ((((((rt1.c0)AND(rt1.c0)))AND(v0.c1))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((v0.c3)!=(0.725892644797107)))) INNER JOIN v0 ON ((((0.6496540282945568)%(NULL)))<(((((rt1.c1)AND(v0.c2)))AND(t1.c0)))) FULL OUTER JOIN rt1 ON NULL WHERE ((((rt0.c3, UPPER(rt1.c0), '', ((v0.c1)&(rt1.c3)), (((rt0.c2, rt1.c2, rt0.c0)) BETWEEN (('', rt0.c2, rt1.c2)) AND ((NULL, '|W', rt1.c2)))))>(((+ (rt1.c3)), (('⚈)I}E!z6f')+(v0.c1)), (+ (t0.c0)), '1545043570', ((((((((v0.c0)OR(rt1.c2)))AND(rt0.c1)))AND(rt1.c3)))AND(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, UPPER(rt1.c0), '', ((v0.c1)&(rt1.c3)), (((rt0.c2, rt1.c2, rt0.c0)) BETWEEN (('', rt0.c2, rt1.c2)) AND ((NULL, '|W', rt1.c2)))))>(((+ (rt1.c3)), (('⚈)I}E!z6f')+(v0.c1)), (+ (t0.c0)), '1545043570', ((((((((v0.c0)OR(rt1.c2)))AND(rt0.c1)))AND(rt1.c3)))AND(v0.c2)))))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN t1 ON ((((((rt1.c0)AND(rt1.c0)))AND(v0.c1))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((v0.c3)!=(0.725892644797107)))) INNER JOIN v0 ON ((((0.6496540282945568)%(NULL)))<(((((rt1.c1)AND(v0.c2)))AND(t1.c0)))) FULL OUTER JOIN rt1 ON NULL);
SELECT * FROM t0, rt0 LEFT OUTER JOIN t1 ON ((((((rt1.c0)AND(rt1.c0)))AND(v0.c1))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((v0.c3)!=(0.725892644797107)))) INNER JOIN v0 ON ((((0.6496540282945568)%(NULL)))<(((((rt1.c1)AND(v0.c2)))AND(t1.c0)))) FULL OUTER JOIN rt1 ON NULL WHERE ((((rt0.c3, UPPER(rt1.c0), '', ((v0.c1)&(rt1.c3)), (((rt0.c2, rt1.c2, rt0.c0)) BETWEEN (('', rt0.c2, rt1.c2)) AND ((NULL, '|W', rt1.c2)))))>(((+ (rt1.c3)), (('⚈)I}E!z6f')+(v0.c1)), (+ (t0.c0)), '1545043570', ((((((((v0.c0)OR(rt1.c2)))AND(rt0.c1)))AND(rt1.c3)))AND(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, UPPER(rt1.c0), '', ((v0.c1)&(rt1.c3)), (((rt0.c2, rt1.c2, rt0.c0)) BETWEEN (('', rt0.c2, rt1.c2)) AND ((NULL, '|W', rt1.c2)))))>(((+ (rt1.c3)), (('⚈)I}E!z6f')+(v0.c1)), (+ (t0.c0)), '1545043570', ((((((((v0.c0)OR(rt1.c2)))AND(rt0.c1)))AND(rt1.c3)))AND(v0.c2)))))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN t1 ON ((((((rt1.c0)AND(rt1.c0)))AND(v0.c1))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((v0.c3)!=(0.725892644797107)))) INNER JOIN v0 ON ((((0.6496540282945568)%(NULL)))<(((((rt1.c1)AND(v0.c2)))AND(t1.c0)))) FULL OUTER JOIN rt1 ON NULL);
SELECT * FROM t0, rt0, t1, v0 INNER JOIN rt1 ON ((((rt0.c1)>(rt1.c2)))-(((rt1.c0) IS TRUE))) WHERE ((((((((((rt1.c2)AND(rt0.c0)))AND(rt0.c1)))OR(t0.c0)))AND(rt0.c0)) IN (((((((((rt0.c3)AND(v0.c3)))OR(t0.c0)))OR(v0.c4)))AND(rt0.c2)), (rt1.c1 IN (rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c2)AND(rt0.c0)))AND(rt0.c1)))OR(t0.c0)))AND(rt0.c0)) IN (((((((((rt0.c3)AND(v0.c3)))OR(t0.c0)))OR(v0.c4)))AND(rt0.c2)), (rt1.c1 IN (rt1.c3))))) IS TRUE)  as count FROM t0, rt0, t1, v0 INNER JOIN rt1 ON ((((rt0.c1)>(rt1.c2)))-(((rt1.c0) IS TRUE))));
SELECT * FROM t0, rt0, t1, v0 INNER JOIN rt1 ON ((((rt0.c1)>(rt1.c2)))-(((rt1.c0) IS TRUE))) WHERE ((((((((((rt1.c2)AND(rt0.c0)))AND(rt0.c1)))OR(t0.c0)))AND(rt0.c0)) IN (((((((((rt0.c3)AND(v0.c3)))OR(t0.c0)))OR(v0.c4)))AND(rt0.c2)), (rt1.c1 IN (rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c2)AND(rt0.c0)))AND(rt0.c1)))OR(t0.c0)))AND(rt0.c0)) IN (((((((((rt0.c3)AND(v0.c3)))OR(t0.c0)))OR(v0.c4)))AND(rt0.c2)), (rt1.c1 IN (rt1.c3))))) IS TRUE)  as count FROM t0, rt0, t1, v0 INNER JOIN rt1 ON ((((rt0.c1)>(rt1.c2)))-(((rt1.c0) IS TRUE))));
SELECT * FROM t0, rt0, t1, v0 INNER JOIN rt1 ON ((((rt0.c1)>(rt1.c2)))-(((rt1.c0) IS TRUE))) WHERE ((((((((((rt1.c2)AND(rt0.c0)))AND(rt0.c1)))OR(t0.c0)))AND(rt0.c0)) IN (((((((((rt0.c3)AND(v0.c3)))OR(t0.c0)))OR(v0.c4)))AND(rt0.c2)), (rt1.c1 IN (rt1.c3)))));
SELECT * FROM rt0 NOT INDEXED NATURAL JOIN v0 WHERE (CASE ((rt0.c2)==(v0.c3))  WHEN ((v0.c2)>=('1602535219')) THEN ((rt0.c0) NOT BETWEEN (v0.c3) AND (v0.c0)) ELSE rt0.c3 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)==(v0.c3))  WHEN ((v0.c2)>=('1602535219')) THEN ((rt0.c0) NOT BETWEEN (v0.c3) AND (v0.c0)) ELSE rt0.c3 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NOT INDEXED NATURAL JOIN v0 WHERE (CASE ((rt0.c2)==(v0.c3))  WHEN ((v0.c2)>=('1602535219')) THEN ((rt0.c0) NOT BETWEEN (v0.c3) AND (v0.c0)) ELSE rt0.c3 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)==(v0.c3))  WHEN ((v0.c2)>=('1602535219')) THEN ((rt0.c0) NOT BETWEEN (v0.c3) AND (v0.c0)) ELSE rt0.c3 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NOT INDEXED NATURAL JOIN v0 WHERE (CASE ((rt0.c2)==(v0.c3))  WHEN ((v0.c2)>=('1602535219')) THEN ((rt0.c0) NOT BETWEEN (v0.c3) AND (v0.c0)) ELSE rt0.c3 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1 IN ())) NOTNULL)) ORDER BY (((~ (rt0.c0)))IS NOT(rt0.c3))  NULLS LAST, 0.8443634904528678;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((~ (rt0.c0)))IS NOT(rt0.c3))  NULLS LAST, 0.8443634904528678);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1 IN ())) NOTNULL)) ORDER BY (((~ (rt0.c0)))IS NOT(rt0.c3))  NULLS LAST, 0.8443634904528678;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((~ (rt0.c0)))IS NOT(rt0.c3))  NULLS LAST, 0.8443634904528678);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1 IN ())) NOTNULL)) ORDER BY (((~ (rt0.c0)))IS NOT(rt0.c3))  NULLS LAST, 0.8443634904528678;
SELECT ALL * FROM rt1, t0, t1 LEFT OUTER JOIN v0 ON (((rt0.c0))>=((x'2338'))) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON ((((((t1.c0)AND(rt1.c0)))OR(t0.c0)))>(CAST(rt0.c3 AS TEXT))) WHERE (UPPER((('-692665395')AND(v0.c3)))) ORDER BY (((CASE rt0.c2  WHEN v0.c3 THEN rt1.c2 END))<((RTRIM(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((('-692665395')AND(v0.c3)))) IS TRUE)  as count FROM rt1, t0, t1 LEFT OUTER JOIN v0 ON (((rt0.c0))>=((x'2338'))) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON ((((((t1.c0)AND(rt1.c0)))OR(t0.c0)))>(CAST(rt0.c3 AS TEXT))) ORDER BY (((CASE rt0.c2  WHEN v0.c3 THEN rt1.c2 END))<((RTRIM(v0.c0)))) ASC);
SELECT ALL * FROM rt1, t0, t1 LEFT OUTER JOIN v0 ON (((rt0.c0))>=((x'2338'))) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON ((((((t1.c0)AND(rt1.c0)))OR(t0.c0)))>(CAST(rt0.c3 AS TEXT))) WHERE (UPPER((('-692665395')AND(v0.c3)))) ORDER BY (((CASE rt0.c2  WHEN v0.c3 THEN rt1.c2 END))<((RTRIM(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((('-692665395')AND(v0.c3)))) IS TRUE)  as count FROM rt1, t0, t1 LEFT OUTER JOIN v0 ON (((rt0.c0))>=((x'2338'))) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON ((((((t1.c0)AND(rt1.c0)))OR(t0.c0)))>(CAST(rt0.c3 AS TEXT))) ORDER BY (((CASE rt0.c2  WHEN v0.c3 THEN rt1.c2 END))<((RTRIM(v0.c0)))) ASC);
SELECT COUNT(*) FROM rt1, v0, rt0, t1 WHERE ((((NOT (v0.c2)))OR((((rt0.c2))<=((rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c2)))OR((((rt0.c2))<=((rt1.c1)))))) IS TRUE)  as count FROM rt1, v0, rt0, t1);
SELECT COUNT(*) FROM rt1, v0, rt0, t1 WHERE ((((NOT (v0.c2)))OR((((rt0.c2))<=((rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c2)))OR((((rt0.c2))<=((rt1.c1)))))) IS TRUE)  as count FROM rt1, v0, rt0, t1);
SELECT COUNT(*) FROM rt1, v0, rt0, t1 WHERE ((((NOT (v0.c2)))OR((((rt0.c2))<=((rt1.c1))))));
SELECT COUNT(*) FROM t1, rt0 FULL OUTER JOIN rt1 ON ((CASE WHEN rt0.c2 THEN rt1.c1 END)%(CASE WHEN rt1.c2 THEN rt1.c1 END)) LEFT OUTER JOIN t0 ON CASE WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (t0.c0)) THEN (('D0|0(W')IS NOT(rt0.c1)) ELSE (-5.78709594E8 IN ()) END WHERE ((((((rt1.c3))>=((rt1.c3)))) NOT BETWEEN (x'') AND ((('/ꦢC(')GLOB(rt0.c3))))) ORDER BY CASE WHEN CASE rt0.c1  WHEN ')O/_' THEN rt0.c2 END THEN (NOT (rt0.c3)) END, NULL COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c3))>=((rt1.c3)))) NOT BETWEEN (x'') AND ((('/ꦢC(')GLOB(rt0.c3))))) IS TRUE)  as count FROM t1, rt0 FULL OUTER JOIN rt1 ON ((CASE WHEN rt0.c2 THEN rt1.c1 END)%(CASE WHEN rt1.c2 THEN rt1.c1 END)) LEFT OUTER JOIN t0 ON CASE WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (t0.c0)) THEN (('D0|0(W')IS NOT(rt0.c1)) ELSE (-5.78709594E8 IN ()) END ORDER BY CASE WHEN CASE rt0.c1  WHEN ')O/_' THEN rt0.c2 END THEN (NOT (rt0.c3)) END, NULL COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t1, rt0 FULL OUTER JOIN rt1 ON ((CASE WHEN rt0.c2 THEN rt1.c1 END)%(CASE WHEN rt1.c2 THEN rt1.c1 END)) LEFT OUTER JOIN t0 ON CASE WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (t0.c0)) THEN (('D0|0(W')IS NOT(rt0.c1)) ELSE (-5.78709594E8 IN ()) END WHERE ((((((rt1.c3))>=((rt1.c3)))) NOT BETWEEN (x'') AND ((('/ꦢC(')GLOB(rt0.c3))))) ORDER BY CASE WHEN CASE rt0.c1  WHEN ')O/_' THEN rt0.c2 END THEN (NOT (rt0.c3)) END, NULL COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c3))>=((rt1.c3)))) NOT BETWEEN (x'') AND ((('/ꦢC(')GLOB(rt0.c3))))) IS TRUE)  as count FROM t1, rt0 FULL OUTER JOIN rt1 ON ((CASE WHEN rt0.c2 THEN rt1.c1 END)%(CASE WHEN rt1.c2 THEN rt1.c1 END)) LEFT OUTER JOIN t0 ON CASE WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (t0.c0)) THEN (('D0|0(W')IS NOT(rt0.c1)) ELSE (-5.78709594E8 IN ()) END ORDER BY CASE WHEN CASE rt0.c1  WHEN ')O/_' THEN rt0.c2 END THEN (NOT (rt0.c3)) END, NULL COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t1, rt0 FULL OUTER JOIN rt1 ON ((CASE WHEN rt0.c2 THEN rt1.c1 END)%(CASE WHEN rt1.c2 THEN rt1.c1 END)) LEFT OUTER JOIN t0 ON CASE WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (t0.c0)) THEN (('D0|0(W')IS NOT(rt0.c1)) ELSE (-5.78709594E8 IN ()) END WHERE ((((((rt1.c3))>=((rt1.c3)))) NOT BETWEEN (x'') AND ((('/ꦢC(')GLOB(rt0.c3))))) ORDER BY CASE WHEN CASE rt0.c1  WHEN ')O/_' THEN rt0.c2 END THEN (NOT (rt0.c3)) END, NULL COLLATE NOCASE DESC;
