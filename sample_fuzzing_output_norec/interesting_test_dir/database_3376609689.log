-- Time: 2024/06/09 14:51:49
-- Database: database89
-- Database version: 3.40.0
-- seed value: 3376609689
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 TEXT UNIQUE ON CONFLICT IGNORE NOT NULL CHECK ( CASE json_array_length(c0)  WHEN ((c0)<>(c0)) THEN (((c0, c0, c0)) NOT BETWEEN ((c0, c0, c0)) AND ((c0, c0, c0))) ELSE TRIM(c0, 0.19697346814181005) END) PRIMARY KEY DESC ) WITHOUT ROWID; -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-733740927'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('0.19697346814181005'), (NULL), (NULL); -- 0ms;
PRAGMA incremental_vacuum(-947530471); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (-947530471); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('ww8aV*'), (0.05070175816674172), (0.9644633673814943), (x''), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (')+2?(㆛c'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES ('WjF>撍'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-733740927'), ('688914576'), (NULL); -- 0ms;
VACUUM; -- 1ms;
VACUUM main; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-536386419'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (1.603350939E9); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL), (NULL), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('ww8aV*'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.19697346814181005); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.6566878510263225), (0.3737915042119342), ('1M'); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x'975c'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.26246343857661114), ('OH'), (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x'3efe'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'7b47'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.7777679697297127); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('5'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('1603350939'), (NULL), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('燫n'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('95<q'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.8487675338585955); -- 0ms;
PRAGMA main.legacy_file_format = true; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0x5f91319b); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED); -- 1ms;
ANALYZE; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INT ); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 628027885); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1313219314); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -536386419);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA temp.threads = -445712222550521138; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c3) VALUES ('wjf>撍', NULL); -- 0ms;
PRAGMA cache_spill; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.3897106614963891, x'c1dd'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c62; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.locking_mode; -- 0ms;
REINDEX NOCASE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE INDEX IF NOT EXISTS i24 ON t0(((UPPER(DISTINCT c62)) ISNULL) COLLATE NOCASE DESC) WHERE x''; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c62 TO c13; -- 0ms;
PRAGMA temp.reverse_unordered_selects = false; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
COMMIT; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1, c2, c3) VALUES (x'', 0.8487675338585955, 0x11f71eb, x''); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t0(c13) VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c13) VALUES (0.7588146636231227); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES (x'70c9', -536386419, '-2088967325'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
REINDEX; -- 0ms;
END; -- 0ms;
INSERT OR FAIL INTO t0(c13) VALUES (x''), ('\뜀Syo*c&v'), ('-536386419'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3, c1, c2) VALUES (NULL, '7', '-1290041512', '0.26246343857661114'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0.8385935113851409, 's1'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (x'e14ed277'); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO t0(c13) VALUES (0.9145540605405984); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c13 TO c80; -- 1ms;
INSERT OR FAIL INTO t0 VALUES ('95<q'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3, c0, c2) VALUES (-627409564, x'fd6a', x'', ''), (x'068d10c8', NULL, '456842686', NULL), ('XA', '', '', x''); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (NULL), ('2021919289'); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (NULL, '-627409564', 1603350939, -846486497), ('~+S.ZP,j', 833908651, 0.7588146636231227, '0.7777679697297127'), (0.7168827235851594, x'', NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-878349538'), (x'cf41'), ('-1269758092'); -- 0ms;
CREATE INDEX i71 ON t0((CAST(c80 AS REAL) IN ())); -- 0ms;
ALTER TABLE t0 ADD COLUMN c92 INTEGER; -- 0ms;
PRAGMA busy_timeout; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ''); -- 0ms;
INSERT OR REPLACE INTO t0(c80, c92) VALUES (NULL, NULL), (2.021919289E9, x''), (NULL, ''), (0.26246343857661114, 0.5353410241258216), (x'', '-353720695'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x'427d'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-9223372036854775808,6');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('-627409564', x'', NULL, 'FF'), (NULL, 0.19697346814181005, x'a337', ''), (x'', x'', 'O&\rpAk', NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1103165397,13');\n; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE main; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c13) VALUES (NULL); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX i24; -- 0ms;
REINDEX BINARY; -- 0ms;
PRAGMA main.legacy_file_format = true; -- 0ms;
PRAGMA threads; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.checkpoint_fullfsync = true; -- 0ms;
END; -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
END TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 697382802); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA temp.wal_autocheckpoint = 1787620995502756575; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (x'', 'WW8AV*'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
COMMIT; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.4034846908037366, '95<q'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=4'); -- 0ms;
PRAGMA temp.secure_delete = FAST; -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1468144963,12');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((rt0.c2 IN ()))))) ORDER BY ((((t0.c13) NOT BETWEEN (rt0.c0) AND (rt0.c3)))IS(((((rt0.c1)OR(rt0.c1)))OR(t0.c13)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c13) NOT BETWEEN (rt0.c0) AND (rt0.c3)))IS(((((rt0.c1)OR(rt0.c1)))OR(t0.c13)))) ASC);
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((rt0.c2 IN ()))))) ORDER BY ((((t0.c13) NOT BETWEEN (rt0.c0) AND (rt0.c3)))IS(((((rt0.c1)OR(rt0.c1)))OR(t0.c13)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c13) NOT BETWEEN (rt0.c0) AND (rt0.c3)))IS(((((rt0.c1)OR(rt0.c1)))OR(t0.c13)))) ASC);
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((rt0.c2 IN ()))))) ORDER BY ((((t0.c13) NOT BETWEEN (rt0.c0) AND (rt0.c3)))IS(((((rt0.c1)OR(rt0.c1)))OR(t0.c13)))) ASC;
SELECT * FROM vt0 NOT INDEXED WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0)<(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0)<(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0)<(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0)<(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0)<(vt0.c1))))));
SELECT ALL * FROM t0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)==(vt0.c0))) AND (((vt0.c0) NOTNULL)))) ORDER BY (((((((((((vt0.c0, x'', rt0.c1, 0.16270606175850488, rt0.c0)) BETWEEN ((rt0.c1, vt0.c1, t0.c13, rt0.c3, rt0.c2)) AND ((vt0.c1, vt0.c0, rt0.c0, rt0.c0, vt0.c1))))OR('濧G')))AND(CAST(t0.c13 AS BLOB))))AND((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))))OR(CAST(t0.c13 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)==(vt0.c0))) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((((((((((vt0.c0, x'', rt0.c1, 0.16270606175850488, rt0.c0)) BETWEEN ((rt0.c1, vt0.c1, t0.c13, rt0.c3, rt0.c2)) AND ((vt0.c1, vt0.c0, rt0.c0, rt0.c0, vt0.c1))))OR('濧G')))AND(CAST(t0.c13 AS BLOB))))AND((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))))OR(CAST(t0.c13 AS NUMERIC))) DESC);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)==(vt0.c0))) AND (((vt0.c0) NOTNULL)))) ORDER BY (((((((((((vt0.c0, x'', rt0.c1, 0.16270606175850488, rt0.c0)) BETWEEN ((rt0.c1, vt0.c1, t0.c13, rt0.c3, rt0.c2)) AND ((vt0.c1, vt0.c0, rt0.c0, rt0.c0, vt0.c1))))OR('濧G')))AND(CAST(t0.c13 AS BLOB))))AND((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))))OR(CAST(t0.c13 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)==(vt0.c0))) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((((((((((vt0.c0, x'', rt0.c1, 0.16270606175850488, rt0.c0)) BETWEEN ((rt0.c1, vt0.c1, t0.c13, rt0.c3, rt0.c2)) AND ((vt0.c1, vt0.c0, rt0.c0, rt0.c0, vt0.c1))))OR('濧G')))AND(CAST(t0.c13 AS BLOB))))AND((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))))OR(CAST(t0.c13 AS NUMERIC))) DESC);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)==(vt0.c0))) AND (((vt0.c0) NOTNULL)))) ORDER BY (((((((((((vt0.c0, x'', rt0.c1, 0.16270606175850488, rt0.c0)) BETWEEN ((rt0.c1, vt0.c1, t0.c13, rt0.c3, rt0.c2)) AND ((vt0.c1, vt0.c0, rt0.c0, rt0.c0, vt0.c1))))OR('濧G')))AND(CAST(t0.c13 AS BLOB))))AND((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))))OR(CAST(t0.c13 AS NUMERIC))) DESC;
SELECT COUNT(*) FROM t0 WHERE ((((0.21129557162108525 IN (t0.c13)))%(t0.c13 COLLATE NOCASE))) ORDER BY ((((((t0.c13)*(t0.c13)))OR((NOT (t0.c13)))))OR(((x'') IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((0.21129557162108525 IN (t0.c13)))%(t0.c13 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c13)*(t0.c13)))OR((NOT (t0.c13)))))OR(((x'') IS TRUE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((0.21129557162108525 IN (t0.c13)))%(t0.c13 COLLATE NOCASE))) ORDER BY ((((((t0.c13)*(t0.c13)))OR((NOT (t0.c13)))))OR(((x'') IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((0.21129557162108525 IN (t0.c13)))%(t0.c13 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c13)*(t0.c13)))OR((NOT (t0.c13)))))OR(((x'') IS TRUE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((0.21129557162108525 IN (t0.c13)))%(t0.c13 COLLATE NOCASE))) ORDER BY ((((((t0.c13)*(t0.c13)))OR((NOT (t0.c13)))))OR(((x'') IS TRUE))) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt0, vt0 WHERE ((rt0.c3 COLLATE BINARY IN ())) ORDER BY (((vt0.c1) IS TRUE) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c13)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((vt0.c1) IS TRUE) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c13)))))  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((rt0.c3 COLLATE BINARY IN ())) ORDER BY (((vt0.c1) IS TRUE) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c13)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((vt0.c1) IS TRUE) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c13)))))  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((rt0.c3 COLLATE BINARY IN ())) ORDER BY (((vt0.c1) IS TRUE) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c13)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((JULIANDAY(vt0.c0, vt0.c1, vt0.c0)) ISNULL)) ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c13 WHEN vt0.c0 THEN vt0.c1 ELSE x'' END THEN HEX(DISTINCT vt0.c0) ELSE ((vt0.c1) ISNULL) END ASC  NULLS FIRST, (((NULL IN ()))==(((vt0.c1) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((JULIANDAY(vt0.c0, vt0.c1, vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c13 WHEN vt0.c0 THEN vt0.c1 ELSE x'' END THEN HEX(DISTINCT vt0.c0) ELSE ((vt0.c1) ISNULL) END ASC  NULLS FIRST, (((NULL IN ()))==(((vt0.c1) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((JULIANDAY(vt0.c0, vt0.c1, vt0.c0)) ISNULL)) ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c13 WHEN vt0.c0 THEN vt0.c1 ELSE x'' END THEN HEX(DISTINCT vt0.c0) ELSE ((vt0.c1) ISNULL) END ASC  NULLS FIRST, (((NULL IN ()))==(((vt0.c1) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((JULIANDAY(vt0.c0, vt0.c1, vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c13 WHEN vt0.c0 THEN vt0.c1 ELSE x'' END THEN HEX(DISTINCT vt0.c0) ELSE ((vt0.c1) ISNULL) END ASC  NULLS FIRST, (((NULL IN ()))==(((vt0.c1) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((JULIANDAY(vt0.c0, vt0.c1, vt0.c0)) ISNULL)) ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c13 WHEN vt0.c0 THEN vt0.c1 ELSE x'' END THEN HEX(DISTINCT vt0.c0) ELSE ((vt0.c1) ISNULL) END ASC  NULLS FIRST, (((NULL IN ()))==(((vt0.c1) IS TRUE))) ASC;
SELECT ALL * FROM t0, rt0, vt0 WHERE (UPPER(CASE rt0.c1  WHEN t0.c13 THEN rt0.c3 END));
SELECT SUM(count) FROM (SELECT ((UPPER(CASE rt0.c1  WHEN t0.c13 THEN rt0.c3 END)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (UPPER(CASE rt0.c1  WHEN t0.c13 THEN rt0.c3 END));
SELECT SUM(count) FROM (SELECT ((UPPER(CASE rt0.c1  WHEN t0.c13 THEN rt0.c3 END)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (UPPER(CASE rt0.c1  WHEN t0.c13 THEN rt0.c3 END));
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY ((rt0.c1)-((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)-((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY ((rt0.c1)-((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)-((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY ((rt0.c1)-((rt0.c2 IN ())));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (((x'd6a6')>(CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((x'd6a6')>(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((x'd6a6')>(CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((x'd6a6')>(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((x'd6a6')>(CAST(NULL AS INTEGER))));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((((rt0.c1)OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((((rt0.c1)OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((((rt0.c1)OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE (((t0.c13)||(t0.c13 COLLATE NOCASE))) ORDER BY t0.c13  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c13)||(t0.c13 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY t0.c13  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c13)||(t0.c13 COLLATE NOCASE))) ORDER BY t0.c13  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c13)||(t0.c13 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY t0.c13  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c13)||(t0.c13 COLLATE NOCASE))) ORDER BY t0.c13  NULLS FIRST;
SELECT * FROM rt0 WHERE (TRIM((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), LTRIM('-117524126', rt0.c0))) ORDER BY ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))<<(((rt0.c0)&(rt0.c3)))) DESC  NULLS FIRST, rt0.c2 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), LTRIM('-117524126', rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))<<(((rt0.c0)&(rt0.c3)))) DESC  NULLS FIRST, rt0.c2 COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 WHERE (TRIM((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), LTRIM('-117524126', rt0.c0))) ORDER BY ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))<<(((rt0.c0)&(rt0.c3)))) DESC  NULLS FIRST, rt0.c2 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), LTRIM('-117524126', rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))<<(((rt0.c0)&(rt0.c3)))) DESC  NULLS FIRST, rt0.c2 COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 WHERE (TRIM((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), LTRIM('-117524126', rt0.c0))) ORDER BY ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))<<(((rt0.c0)&(rt0.c3)))) DESC  NULLS FIRST, rt0.c2 COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c13)-(t0.c13)))OR(t0.c13)))OR(((t0.c13)IS NOT(t0.c13)))))OR((t0.c13 IN ()))))AND(((t0.c13) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c13)-(t0.c13)))OR(t0.c13)))OR(((t0.c13)IS NOT(t0.c13)))))OR((t0.c13 IN ()))))AND(((t0.c13) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c13)-(t0.c13)))OR(t0.c13)))OR(((t0.c13)IS NOT(t0.c13)))))OR((t0.c13 IN ()))))AND(((t0.c13) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c13)-(t0.c13)))OR(t0.c13)))OR(((t0.c13)IS NOT(t0.c13)))))OR((t0.c13 IN ()))))AND(((t0.c13) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c13)-(t0.c13)))OR(t0.c13)))OR(((t0.c13)IS NOT(t0.c13)))))OR((t0.c13 IN ()))))AND(((t0.c13) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((((vt0.c1)OR(NULL)))AND(rt0.c0)))AND(rt0.c0)))AND(t0.c13)) COLLATE NOCASE) ORDER BY ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)OR(NULL)))AND(rt0.c0)))AND(rt0.c0)))AND(t0.c13)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((((vt0.c1)OR(NULL)))AND(rt0.c0)))AND(rt0.c0)))AND(t0.c13)) COLLATE NOCASE) ORDER BY ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)OR(NULL)))AND(rt0.c0)))AND(rt0.c0)))AND(t0.c13)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((((vt0.c1)OR(NULL)))AND(rt0.c0)))AND(rt0.c0)))AND(t0.c13)) COLLATE NOCASE) ORDER BY ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1)AND(NULL)))AND(NULL)) IN ())) ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)AND(NULL)))AND(NULL)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1)AND(NULL)))AND(NULL)) IN ())) ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)AND(NULL)))AND(NULL)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1)AND(NULL)))AND(NULL)) IN ())) ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c1)>>(vt0.c0))) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c1)>>(vt0.c0))) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c1)>>(vt0.c0))) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c1)>>(vt0.c0))) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c1)>>(vt0.c0))) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)));
SELECT * FROM vt0 WHERE (((((((vt0.c1, vt0.c0, vt0.c1))>=(('0.3897106614963891', vt0.c1, vt0.c1))), ((vt0.c1)+(vt0.c1)), (vt0.c0 IN ())))<(('83670784' COLLATE NOCASE, (+ (vt0.c1)), ((vt0.c1)&(vt0.c1)))))) ORDER BY ((TRIM(vt0.c0)) BETWEEN (((vt0.c1)<>(vt0.c1))) AND (((vt0.c1)LIKE(vt0.c0)))) ASC  NULLS LAST, vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1, vt0.c0, vt0.c1))>=(('0.3897106614963891', vt0.c1, vt0.c1))), ((vt0.c1)+(vt0.c1)), (vt0.c0 IN ())))<(('83670784' COLLATE NOCASE, (+ (vt0.c1)), ((vt0.c1)&(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c0)) BETWEEN (((vt0.c1)!=(vt0.c1))) AND (((vt0.c1)LIKE(vt0.c0)))) ASC  NULLS LAST, vt0.c1 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c1, vt0.c0, vt0.c1))>=(('0.3897106614963891', vt0.c1, vt0.c1))), ((vt0.c1)+(vt0.c1)), (vt0.c0 IN ())))<(('83670784' COLLATE NOCASE, (+ (vt0.c1)), ((vt0.c1)&(vt0.c1)))))) ORDER BY ((TRIM(vt0.c0)) BETWEEN (((vt0.c1)<>(vt0.c1))) AND (((vt0.c1)LIKE(vt0.c0)))) ASC  NULLS LAST, vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1, vt0.c0, vt0.c1))>=(('0.3897106614963891', vt0.c1, vt0.c1))), ((vt0.c1)+(vt0.c1)), (vt0.c0 IN ())))<(('83670784' COLLATE NOCASE, (+ (vt0.c1)), ((vt0.c1)&(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c0)) BETWEEN (((vt0.c1)!=(vt0.c1))) AND (((vt0.c1)LIKE(vt0.c0)))) ASC  NULLS LAST, vt0.c1 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c1, vt0.c0, vt0.c1))>=(('0.3897106614963891', vt0.c1, vt0.c1))), ((vt0.c1)+(vt0.c1)), (vt0.c0 IN ())))<(('83670784' COLLATE NOCASE, (+ (vt0.c1)), ((vt0.c1)&(vt0.c1)))))) ORDER BY ((TRIM(vt0.c0)) BETWEEN (((vt0.c1)<>(vt0.c1))) AND (((vt0.c1)LIKE(vt0.c0)))) ASC  NULLS LAST, vt0.c1 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((LIKELIHOOD(DISTINCT rt0.c3, 0.7721751751452701))>(((rt0.c2)IS NOT(vt0.c1)))) WHERE ((+ (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((LIKELIHOOD(DISTINCT rt0.c3, 0.7721751751452701))>(((rt0.c2)IS NOT(vt0.c1)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((LIKELIHOOD(DISTINCT rt0.c3, 0.7721751751452701))>(((rt0.c2)IS NOT(vt0.c1)))) WHERE ((+ (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((LIKELIHOOD(DISTINCT rt0.c3, 0.7721751751452701))>(((rt0.c2)IS NOT(vt0.c1)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((LIKELIHOOD(DISTINCT rt0.c3, 0.7721751751452701))>(((rt0.c2)IS NOT(vt0.c1)))) WHERE ((+ (rt0.c1)));
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c1)+(vt0.c1))))) ORDER BY ((vt0.c1) BETWEEN ((+ (vt0.c1))) AND (CAST(vt0.c0 AS REAL))) ASC, 0.4484991606503428, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1)+(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) BETWEEN ((+ (vt0.c1))) AND (CAST(vt0.c0 AS REAL))) ASC, 0.4484991606503428, vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c1)+(vt0.c1))))) ORDER BY ((vt0.c1) BETWEEN ((+ (vt0.c1))) AND (CAST(vt0.c0 AS REAL))) ASC, 0.4484991606503428, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1)+(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) BETWEEN ((+ (vt0.c1))) AND (CAST(vt0.c0 AS REAL))) ASC, 0.4484991606503428, vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c1)+(vt0.c1))))) ORDER BY ((vt0.c1) BETWEEN ((+ (vt0.c1))) AND (CAST(vt0.c0 AS REAL))) ASC, 0.4484991606503428, vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, vt0.c0)) AND ((vt0.c0, vt0.c0, rt0.c3)))) NOT BETWEEN (LTRIM(vt0.c1)) AND ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, vt0.c0)) AND ((vt0.c0, vt0.c0, rt0.c3)))) NOT BETWEEN (LTRIM(vt0.c1)) AND ((NULL IN ())))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, vt0.c0)) AND ((vt0.c0, vt0.c0, rt0.c3)))) NOT BETWEEN (LTRIM(vt0.c1)) AND ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, vt0.c0)) AND ((vt0.c0, vt0.c0, rt0.c3)))) NOT BETWEEN (LTRIM(vt0.c1)) AND ((NULL IN ())))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, vt0.c0)) AND ((vt0.c0, vt0.c0, rt0.c3)))) NOT BETWEEN (LTRIM(vt0.c1)) AND ((NULL IN ()))));
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)/(rt0.c0))) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)/(rt0.c0))) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)/(rt0.c0))) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)/(rt0.c0))) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)/(rt0.c0))) AND ((rt0.c2 IN ()))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON x'd5e1' FULL OUTER JOIN t0 ON CAST(CAST('-1944034158' AS REAL) AS NUMERIC) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON x'd5e1' FULL OUTER JOIN t0 ON CAST(CAST('-1944034158' AS REAL) AS NUMERIC));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON x'd5e1' FULL OUTER JOIN t0 ON CAST(CAST('-1944034158' AS REAL) AS NUMERIC) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON x'd5e1' FULL OUTER JOIN t0 ON CAST(CAST('-1944034158' AS REAL) AS NUMERIC));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON x'd5e1' FULL OUTER JOIN t0 ON CAST(CAST('-1944034158' AS REAL) AS NUMERIC) WHERE (rt0.c2);
SELECT ALL * FROM rt0, vt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (SQLITE_SOURCE_ID());
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON rt0.c3 FULL OUTER JOIN rt0 ON ((vt0.c1) NOT BETWEEN (t0.c13) AND (vt0.c0)) COLLATE BINARY WHERE (LIKE(json_array_length(rt0.c1), vt0.c0, '[')) ORDER BY (((((((((+ (rt0.c1)))AND('Rg\rY⫴')))AND(rt0.c1)))OR(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR('0.7777679697297127')))OR(0.45033610019953096)))))AND(((NULL)<(rt0.c2)))) ASC  NULLS LAST, (((((-745184230, rt0.c3, rt0.c0, rt0.c3, rt0.c3))>=((t0.c13, vt0.c1, vt0.c1, NULL, vt0.c1))))LIKE(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c13 THEN t0.c13 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE(json_array_length(rt0.c1), vt0.c0, '[')) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON rt0.c3 FULL OUTER JOIN rt0 ON ((vt0.c1) NOT BETWEEN (t0.c13) AND (vt0.c0)) COLLATE BINARY ORDER BY (((((((((+ (rt0.c1)))AND('Rg\rY⫴')))AND(rt0.c1)))OR(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR('0.7777679697297127')))OR(0.45033610019953096)))))AND(((NULL)<(rt0.c2)))) ASC  NULLS LAST, (((((-745184230, rt0.c3, rt0.c0, rt0.c3, rt0.c3))>=((t0.c13, vt0.c1, vt0.c1, NULL, vt0.c1))))LIKE(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c13 THEN t0.c13 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON rt0.c3 FULL OUTER JOIN rt0 ON ((vt0.c1) NOT BETWEEN (t0.c13) AND (vt0.c0)) COLLATE BINARY WHERE (LIKE(json_array_length(rt0.c1), vt0.c0, '[')) ORDER BY (((((((((+ (rt0.c1)))AND('Rg\rY⫴')))AND(rt0.c1)))OR(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR('0.7777679697297127')))OR(0.45033610019953096)))))AND(((NULL)<(rt0.c2)))) ASC  NULLS LAST, (((((-745184230, rt0.c3, rt0.c0, rt0.c3, rt0.c3))>=((t0.c13, vt0.c1, vt0.c1, NULL, vt0.c1))))LIKE(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c13 THEN t0.c13 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE(json_array_length(rt0.c1), vt0.c0, '[')) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON rt0.c3 FULL OUTER JOIN rt0 ON ((vt0.c1) NOT BETWEEN (t0.c13) AND (vt0.c0)) COLLATE BINARY ORDER BY (((((((((+ (rt0.c1)))AND('Rg\rY⫴')))AND(rt0.c1)))OR(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR('0.7777679697297127')))OR(0.45033610019953096)))))AND(((NULL)<(rt0.c2)))) ASC  NULLS LAST, (((((-745184230, rt0.c3, rt0.c0, rt0.c3, rt0.c3))>=((t0.c13, vt0.c1, vt0.c1, NULL, vt0.c1))))LIKE(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c13 THEN t0.c13 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON (((vt0.c0 IN (rt0.c0))) NOTNULL) WHERE (((((((rt0.c2) BETWEEN (NULL) AND ('WjF>撍')))OR(((rt0.c0)>(rt0.c0)))))AND((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) BETWEEN (NULL) AND ('WjF>撍')))OR(((rt0.c0)>(rt0.c0)))))AND((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON (((vt0.c0 IN (rt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON (((vt0.c0 IN (rt0.c0))) NOTNULL) WHERE (((((((rt0.c2) BETWEEN (NULL) AND ('WjF>撍')))OR(((rt0.c0)>(rt0.c0)))))AND((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) BETWEEN (NULL) AND ('WjF>撍')))OR(((rt0.c0)>(rt0.c0)))))AND((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON (((vt0.c0 IN (rt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON (((vt0.c0 IN (rt0.c0))) NOTNULL) WHERE (((((((rt0.c2) BETWEEN (NULL) AND ('WjF>撍')))OR(((rt0.c0)>(rt0.c0)))))AND((~ (rt0.c1)))));
SELECT COUNT(*) FROM t0 WHERE (CASE CAST(t0.c13 AS TEXT)  WHEN ((t0.c13)LIKE(t0.c13)) THEN ((t0.c13)<>(t0.c13)) END) ORDER BY (DATE(t0.c13, t0.c13, t0.c13) IN (((1849533791) NOT BETWEEN (t0.c13) AND (t0.c13)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c13 AS TEXT)  WHEN ((t0.c13)LIKE(t0.c13)) THEN ((t0.c13)<>(t0.c13)) END) IS TRUE)  as count FROM t0 ORDER BY (DATE(t0.c13, t0.c13, t0.c13) IN (((1849533791) NOT BETWEEN (t0.c13) AND (t0.c13)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE CAST(t0.c13 AS TEXT)  WHEN ((t0.c13)LIKE(t0.c13)) THEN ((t0.c13)<>(t0.c13)) END) ORDER BY (DATE(t0.c13, t0.c13, t0.c13) IN (((1849533791) NOT BETWEEN (t0.c13) AND (t0.c13)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c13 AS TEXT)  WHEN ((t0.c13)LIKE(t0.c13)) THEN ((t0.c13)<>(t0.c13)) END) IS TRUE)  as count FROM t0 ORDER BY (DATE(t0.c13, t0.c13, t0.c13) IN (((1849533791) NOT BETWEEN (t0.c13) AND (t0.c13)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE CAST(t0.c13 AS TEXT)  WHEN ((t0.c13)LIKE(t0.c13)) THEN ((t0.c13)<>(t0.c13)) END) ORDER BY (DATE(t0.c13, t0.c13, t0.c13) IN (((1849533791) NOT BETWEEN (t0.c13) AND (t0.c13)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND('-898092473')))OR(rt0.c2)))AND(rt0.c0)))AND(((rt0.c3)==(rt0.c1))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM DESC, (((~ (rt0.c3))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) AND ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND('-898092473')))OR(rt0.c2)))AND(rt0.c0)))AND(((rt0.c3)==(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM DESC, (((~ (rt0.c3))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) AND ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND('-898092473')))OR(rt0.c2)))AND(rt0.c0)))AND(((rt0.c3)==(rt0.c1))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM DESC, (((~ (rt0.c3))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) AND ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND('-898092473')))OR(rt0.c2)))AND(rt0.c0)))AND(((rt0.c3)==(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM DESC, (((~ (rt0.c3))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) AND ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND('-898092473')))OR(rt0.c2)))AND(rt0.c0)))AND(((rt0.c3)==(rt0.c1))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM DESC, (((~ (rt0.c3))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) AND ((rt0.c1 IN ())));
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((((t0.c13)IS(vt0.c1)) IN ('0.9145540605405984', ((((t0.c13)OR(t0.c13)))OR(t0.c13)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c13)IS(vt0.c1)) IN ('0.9145540605405984', ((((t0.c13)OR(t0.c13)))OR(t0.c13))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((((t0.c13)IS(vt0.c1)) IN ('0.9145540605405984', ((((t0.c13)OR(t0.c13)))OR(t0.c13)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c13)IS(vt0.c1)) IN ('0.9145540605405984', ((((t0.c13)OR(t0.c13)))OR(t0.c13))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((((t0.c13)IS(vt0.c1)) IN ('0.9145540605405984', ((((t0.c13)OR(t0.c13)))OR(t0.c13)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((NULL)OR(t0.c13)))AND(((t0.c13) NOT NULL))))AND(CASE t0.c13  WHEN t0.c13 THEN t0.c13 END)));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(t0.c13)))AND(((t0.c13) NOT NULL))))AND(CASE t0.c13  WHEN t0.c13 THEN t0.c13 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((NULL)OR(t0.c13)))AND(((t0.c13) NOT NULL))))AND(CASE t0.c13  WHEN t0.c13 THEN t0.c13 END)));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(t0.c13)))AND(((t0.c13) NOT NULL))))AND(CASE t0.c13  WHEN t0.c13 THEN t0.c13 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((NULL)OR(t0.c13)))AND(((t0.c13) NOT NULL))))AND(CASE t0.c13  WHEN t0.c13 THEN t0.c13 END)));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c0)IS(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c0)IS(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c0)IS(vt0.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)<=(vt0.c1)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c0)>=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)<=(vt0.c1)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c0)>=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)<=(vt0.c1)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c0)>=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)<=(vt0.c1)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c0)>=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)<=(vt0.c1)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c0)>=(vt0.c1)))));
SELECT ALL * FROM vt0, t0 WHERE ('-1632718484') ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL (('-1632718484') IS TRUE)  as count FROM vt0, t0 ORDER BY '');
SELECT ALL * FROM vt0, t0 WHERE ('-1632718484') ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL (('-1632718484') IS TRUE)  as count FROM vt0, t0 ORDER BY '');
SELECT ALL * FROM vt0, t0 WHERE ('-1632718484') ORDER BY '';
SELECT ALL COUNT(*) FROM rt0 WHERE (((((NULL)AND(rt0.c0)))OR(((rt0.c0)<=(rt0.c0))))) ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (CAST(rt0.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(rt0.c0)))OR(((rt0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (CAST(rt0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((NULL)AND(rt0.c0)))OR(((rt0.c0)<=(rt0.c0))))) ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (CAST(rt0.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(rt0.c0)))OR(((rt0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (CAST(rt0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((NULL)AND(rt0.c0)))OR(((rt0.c0)<=(rt0.c0))))) ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (CAST(rt0.c2 AS TEXT)));
SELECT * FROM vt0 INDEXED BY i24 WHERE ((~ (((((vt0.c0)OR('688914576')))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c0)OR('688914576')))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 INDEXED BY i24);
SELECT * FROM vt0 INDEXED BY i24 WHERE ((~ (((((vt0.c0)OR('688914576')))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c0)OR('688914576')))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 INDEXED BY i24);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c0)))&(((rt0.c3)OR(rt0.c0))))) ORDER BY CASE WHEN ((rt0.c3) IS FALSE) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) WHEN ((rt0.c3)LIKE(rt0.c1)) THEN CASE WHEN rt0.c0 THEN x'e127' WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END THEN CAST(rt0.c2 AS NUMERIC) END ASC, (CAST(x'' AS INTEGER) IN ()), rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)LIKE(rt0.c0)))&(((rt0.c3)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c3) IS FALSE) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) WHEN ((rt0.c3)LIKE(rt0.c1)) THEN CASE WHEN rt0.c0 THEN x'e127' WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END THEN CAST(rt0.c2 AS NUMERIC) END ASC, (CAST(x'' AS INTEGER) IN ()), rt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c0)))&(((rt0.c3)OR(rt0.c0))))) ORDER BY CASE WHEN ((rt0.c3) IS FALSE) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) WHEN ((rt0.c3)LIKE(rt0.c1)) THEN CASE WHEN rt0.c0 THEN x'e127' WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END THEN CAST(rt0.c2 AS NUMERIC) END ASC, (CAST(x'' AS INTEGER) IN ()), rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)LIKE(rt0.c0)))&(((rt0.c3)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c3) IS FALSE) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) WHEN ((rt0.c3)LIKE(rt0.c1)) THEN CASE WHEN rt0.c0 THEN x'e127' WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END THEN CAST(rt0.c2 AS NUMERIC) END ASC, (CAST(x'' AS INTEGER) IN ()), rt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c0)))&(((rt0.c3)OR(rt0.c0))))) ORDER BY CASE WHEN ((rt0.c3) IS FALSE) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) WHEN ((rt0.c3)LIKE(rt0.c1)) THEN CASE WHEN rt0.c0 THEN x'e127' WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END THEN CAST(rt0.c2 AS NUMERIC) END ASC, (CAST(x'' AS INTEGER) IN ()), rt0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (0.0021474577429949626);
SELECT SUM(count) FROM (SELECT ALL ((0.0021474577429949626) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.0021474577429949626);
SELECT SUM(count) FROM (SELECT ALL ((0.0021474577429949626) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.0021474577429949626);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((NULL)))) AND (t0.c13)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((NULL)))) AND (t0.c13))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((NULL)))) AND (t0.c13)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((NULL)))) AND (t0.c13))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((NULL)))) AND (t0.c13)));
SELECT * FROM rt0, vt0, t0 WHERE ((((rt0.c3 IN ()))|(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))|(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((((rt0.c3 IN ()))|(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))|(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((((rt0.c3 IN ()))|(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c13)AND(t0.c13)))OR(t0.c13)) IN ())) ORDER BY ((NULL) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((((t0.c13)AND(t0.c13)))OR(t0.c13)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((NULL) NOTNULL));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c13)AND(t0.c13)))OR(t0.c13)) IN ())) ORDER BY ((NULL) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((((t0.c13)AND(t0.c13)))OR(t0.c13)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((NULL) NOTNULL));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c13)AND(t0.c13)))OR(t0.c13)) IN ())) ORDER BY ((NULL) NOTNULL);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN ((('aベ', rt0.c3, NULL))=((rt0.c3, '9/', '0.5353410241258216'))) THEN ((rt0.c3)IS NOT(rt0.c0)) ELSE 'kiEﯷc' END) ORDER BY '0.7588146636231227' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((('aベ', rt0.c3, NULL))=((rt0.c3, '9/', '0.5353410241258216'))) THEN ((rt0.c3)IS NOT(rt0.c0)) ELSE 'kiEﯷc' END) IS TRUE)  as count FROM t0, rt0 ORDER BY '0.7588146636231227' DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN ((('aベ', rt0.c3, NULL))=((rt0.c3, '9/', '0.5353410241258216'))) THEN ((rt0.c3)IS NOT(rt0.c0)) ELSE 'kiEﯷc' END) ORDER BY '0.7588146636231227' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((('aベ', rt0.c3, NULL))=((rt0.c3, '9/', '0.5353410241258216'))) THEN ((rt0.c3)IS NOT(rt0.c0)) ELSE 'kiEﯷc' END) IS TRUE)  as count FROM t0, rt0 ORDER BY '0.7588146636231227' DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN ((('aベ', rt0.c3, NULL))=((rt0.c3, '9/', '0.5353410241258216'))) THEN ((rt0.c3)IS NOT(rt0.c0)) ELSE 'kiEﯷc' END) ORDER BY '0.7588146636231227' DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END) NOT NULL)) ORDER BY ((((((rt0.c1)OR(NULL)))AND(rt0.c1))) IS TRUE), CAST((+ (rt0.c0)) AS NUMERIC) DESC  NULLS FIRST, ((((rt0.c1)+(rt0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)OR(NULL)))AND(rt0.c1))) IS TRUE), CAST((+ (rt0.c0)) AS NUMERIC) DESC  NULLS FIRST, ((((rt0.c1)+(rt0.c0))) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END) NOT NULL)) ORDER BY ((((((rt0.c1)OR(NULL)))AND(rt0.c1))) IS TRUE), CAST((+ (rt0.c0)) AS NUMERIC) DESC  NULLS FIRST, ((((rt0.c1)+(rt0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)OR(NULL)))AND(rt0.c1))) IS TRUE), CAST((+ (rt0.c0)) AS NUMERIC) DESC  NULLS FIRST, ((((rt0.c1)+(rt0.c0))) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END) NOT NULL)) ORDER BY ((((((rt0.c1)OR(NULL)))AND(rt0.c1))) IS TRUE), CAST((+ (rt0.c0)) AS NUMERIC) DESC  NULLS FIRST, ((((rt0.c1)+(rt0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0) BETWEEN (t0.c13) AND (NULL)))IS NOT(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (t0.c13) AND (NULL)))IS NOT(rt0.c0))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0) BETWEEN (t0.c13) AND (NULL)))IS NOT(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (t0.c13) AND (NULL)))IS NOT(rt0.c0))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0) BETWEEN (t0.c13) AND (NULL)))IS NOT(rt0.c0)));
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END AS REAL)) ORDER BY ((CAST(rt0.c2 AS TEXT))LIKE(((rt0.c1)<>(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS TEXT))LIKE(((rt0.c1)!=(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END AS REAL)) ORDER BY ((CAST(rt0.c2 AS TEXT))LIKE(((rt0.c1)<>(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS TEXT))LIKE(((rt0.c1)!=(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END AS REAL)) ORDER BY ((CAST(rt0.c2 AS TEXT))LIKE(((rt0.c1)<>(rt0.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((NOT (t0.c13)) COLLATE NOCASE) ORDER BY CAST((t0.c13 IN ()) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c13)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c13 IN ()) AS REAL)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((NOT (t0.c13)) COLLATE NOCASE) ORDER BY CAST((t0.c13 IN ()) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c13)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c13 IN ()) AS REAL)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((NOT (t0.c13)) COLLATE NOCASE) ORDER BY CAST((t0.c13 IN ()) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (0.8502711097681538) ORDER BY ((((x'')OR(((rt0.c3)>>(rt0.c3)))))OR((('aベ') ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8502711097681538) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 ORDER BY ((((x'')OR(((rt0.c3)>>(rt0.c3)))))OR((('aベ') ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (0.8502711097681538) ORDER BY ((((x'')OR(((rt0.c3)>>(rt0.c3)))))OR((('aベ') ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8502711097681538) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 ORDER BY ((((x'')OR(((rt0.c3)>>(rt0.c3)))))OR((('aベ') ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (0.8502711097681538) ORDER BY ((((x'')OR(((rt0.c3)>>(rt0.c3)))))OR((('aベ') ISNULL)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ('[O') ORDER BY (((rt0.c1 IN ()))<<((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('[O') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ()))<<((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ('[O') ORDER BY (((rt0.c1 IN ()))<<((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('[O') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ()))<<((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ('[O') ORDER BY (((rt0.c1 IN ()))<<((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))  NULLS FIRST;
SELECT ALL * FROM rt0, t0, vt0 WHERE ((+ (ABS(0.09925450616190135)))) ORDER BY ((((vt0.c1) NOT NULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (ABS(0.09925450616190135)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((vt0.c1) NOT NULL)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((+ (ABS(0.09925450616190135)))) ORDER BY ((((vt0.c1) NOT NULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (ABS(0.09925450616190135)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((vt0.c1) NOT NULL)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((+ (ABS(0.09925450616190135)))) ORDER BY ((((vt0.c1) NOT NULL)) NOTNULL)  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))<=(((((((((rt0.c1)AND(NULL)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))<=(((((((((rt0.c1)AND(NULL)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))<=(((((((((rt0.c1)AND(NULL)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))<=(((((((((rt0.c1)AND(NULL)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))<=(((((((((rt0.c1)AND(NULL)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c3)))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE ((((rt0.c0)OR(rt0.c1)))OR(0.8030772192799958))  WHEN ((0.4602448118931659)==(rt0.c0)) THEN ((t0.c13) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c0)OR(rt0.c1)))OR(0.8030772192799958))  WHEN ((0.4602448118931659)=(rt0.c0)) THEN ((t0.c13) NOTNULL) END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE ((((rt0.c0)OR(rt0.c1)))OR(0.8030772192799958))  WHEN ((0.4602448118931659)==(rt0.c0)) THEN ((t0.c13) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c0)OR(rt0.c1)))OR(0.8030772192799958))  WHEN ((0.4602448118931659)=(rt0.c0)) THEN ((t0.c13) NOTNULL) END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE ((((rt0.c0)OR(rt0.c1)))OR(0.8030772192799958))  WHEN ((0.4602448118931659)==(rt0.c0)) THEN ((t0.c13) NOTNULL) END);
SELECT * FROM rt0, t0 INNER JOIN vt0 ON (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))||(x'')) WHERE ((((((NULL, NULL, t0.c13))>((vt0.c1, rt0.c0, t0.c13)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((NULL, NULL, t0.c13))>((vt0.c1, rt0.c0, t0.c13)))) IS FALSE)) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))||(x'')));
SELECT * FROM rt0, t0 INNER JOIN vt0 ON (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))||(x'')) WHERE ((((((NULL, NULL, t0.c13))>((vt0.c1, rt0.c0, t0.c13)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((NULL, NULL, t0.c13))>((vt0.c1, rt0.c0, t0.c13)))) IS FALSE)) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))||(x'')));
SELECT * FROM rt0, t0 INNER JOIN vt0 ON (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))||(x'')) WHERE ((((((NULL, NULL, t0.c13))>((vt0.c1, rt0.c0, t0.c13)))) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c3))) ISNULL));
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) COLLATE NOCASE);
SELECT * FROM vt0 INNER JOIN t0 ON vt0.c0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON vt0.c0);
SELECT * FROM vt0 INNER JOIN t0 ON vt0.c0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON vt0.c0);
SELECT * FROM vt0 INNER JOIN t0 ON vt0.c0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0 COLLATE NOCASE))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (((x'8d95')) BETWEEN ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0)))) AND ((TYPEOF(vt0.c0)))) WHERE (((((vt0.c0)<=(rt0.c1)))+(((0.4393901661072741) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((rt0.c0 IN (vt0.c1))))<(((vt0.c1 IN ()))))  NULLS FIRST, ((((((rt0.c0)&(vt0.c0)))AND(((rt0.c3)|(vt0.c0)))))AND(((((((((((((rt0.c1)OR(1539087136)))AND(0.25762268099355645)))AND(vt0.c1)))AND(rt0.c3)))AND(0.6566878510263225)))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(rt0.c1)))+(((0.4393901661072741) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((x'8d95')) BETWEEN ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0)))) AND ((TYPEOF(vt0.c0)))) ORDER BY ((((rt0.c0 IN (vt0.c1))))<(((vt0.c1 IN ()))))  NULLS FIRST, ((((((rt0.c0)&(vt0.c0)))AND(((rt0.c3)|(vt0.c0)))))AND(((((((((((((rt0.c1)OR(1539087136)))AND(0.25762268099355645)))AND(vt0.c1)))AND(rt0.c3)))AND(0.6566878510263225)))AND(vt0.c1))))  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (((x'8d95')) BETWEEN ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0)))) AND ((TYPEOF(vt0.c0)))) WHERE (((((vt0.c0)<=(rt0.c1)))+(((0.4393901661072741) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((rt0.c0 IN (vt0.c1))))<(((vt0.c1 IN ()))))  NULLS FIRST, ((((((rt0.c0)&(vt0.c0)))AND(((rt0.c3)|(vt0.c0)))))AND(((((((((((((rt0.c1)OR(1539087136)))AND(0.25762268099355645)))AND(vt0.c1)))AND(rt0.c3)))AND(0.6566878510263225)))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(rt0.c1)))+(((0.4393901661072741) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((x'8d95')) BETWEEN ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0)))) AND ((TYPEOF(vt0.c0)))) ORDER BY ((((rt0.c0 IN (vt0.c1))))<(((vt0.c1 IN ()))))  NULLS FIRST, ((((((rt0.c0)&(vt0.c0)))AND(((rt0.c3)|(vt0.c0)))))AND(((((((((((((rt0.c1)OR(1539087136)))AND(0.25762268099355645)))AND(vt0.c1)))AND(rt0.c3)))AND(0.6566878510263225)))AND(vt0.c1))))  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (((x'8d95')) BETWEEN ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0)))) AND ((TYPEOF(vt0.c0)))) WHERE (((((vt0.c0)<=(rt0.c1)))+(((0.4393901661072741) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((rt0.c0 IN (vt0.c1))))<(((vt0.c1 IN ()))))  NULLS FIRST, ((((((rt0.c0)&(vt0.c0)))AND(((rt0.c3)|(vt0.c0)))))AND(((((((((((((rt0.c1)OR(1539087136)))AND(0.25762268099355645)))AND(vt0.c1)))AND(rt0.c3)))AND(0.6566878510263225)))AND(vt0.c1))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((0.45093277643011886)=(x'')));
SELECT SUM(count) FROM (SELECT ((((0.45093277643011886)=(x''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((0.45093277643011886)=(x'')));
SELECT SUM(count) FROM (SELECT ((((0.45093277643011886)=(x''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((0.45093277643011886)=(x'')));
SELECT COUNT(*) FROM t0 WHERE (CAST((t0.c13 IN ()) AS REAL)) ORDER BY (((((t0.c13) IS FALSE), CASE t0.c13  WHEN t0.c13 THEN t0.c13 END, ((0.1695372017456681)IS NOT(t0.c13))))>=((CASE WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c13 ELSE t0.c13 END, ((t0.c13)/(t0.c13)), (~ (t0.c13)))))  NULLS FIRST, (((t0.c13)) NOT BETWEEN ((((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)))) AND ((((((t0.c13)AND(t0.c13)))AND(t0.c13))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c13 IN ()) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c13) IS FALSE), CASE t0.c13  WHEN t0.c13 THEN t0.c13 END, ((0.1695372017456681)IS NOT(t0.c13))))>=((CASE WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c13 ELSE t0.c13 END, ((t0.c13)/(t0.c13)), (~ (t0.c13)))))  NULLS FIRST, (((t0.c13)) NOT BETWEEN ((((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)))) AND ((((((t0.c13)AND(t0.c13)))AND(t0.c13))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST((t0.c13 IN ()) AS REAL)) ORDER BY (((((t0.c13) IS FALSE), CASE t0.c13  WHEN t0.c13 THEN t0.c13 END, ((0.1695372017456681)IS NOT(t0.c13))))>=((CASE WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c13 ELSE t0.c13 END, ((t0.c13)/(t0.c13)), (~ (t0.c13)))))  NULLS FIRST, (((t0.c13)) NOT BETWEEN ((((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)))) AND ((((((t0.c13)AND(t0.c13)))AND(t0.c13))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c13 IN ()) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c13) IS FALSE), CASE t0.c13  WHEN t0.c13 THEN t0.c13 END, ((0.1695372017456681)IS NOT(t0.c13))))>=((CASE WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c13 ELSE t0.c13 END, ((t0.c13)/(t0.c13)), (~ (t0.c13)))))  NULLS FIRST, (((t0.c13)) NOT BETWEEN ((((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)))) AND ((((((t0.c13)AND(t0.c13)))AND(t0.c13))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST((t0.c13 IN ()) AS REAL)) ORDER BY (((((t0.c13) IS FALSE), CASE t0.c13  WHEN t0.c13 THEN t0.c13 END, ((0.1695372017456681)IS NOT(t0.c13))))>=((CASE WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c13 ELSE t0.c13 END, ((t0.c13)/(t0.c13)), (~ (t0.c13)))))  NULLS FIRST, (((t0.c13)) NOT BETWEEN ((((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)))) AND ((((((t0.c13)AND(t0.c13)))AND(t0.c13))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((0.4602448118931659) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.4602448118931659) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0.4602448118931659) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.4602448118931659) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0.4602448118931659) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c3 INNER JOIN t0 ON CASE ((rt0.c3)|(rt0.c3))  WHEN (((t0.c13)) NOT BETWEEN ((rt0.c2)) AND ((t0.c13))) THEN ((0.4815262480428186) ISNULL) END WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c3 INNER JOIN t0 ON CASE ((rt0.c3)|(rt0.c3))  WHEN (((t0.c13)) NOT BETWEEN ((rt0.c2)) AND ((t0.c13))) THEN ((0.4815262480428186) ISNULL) END);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c3 INNER JOIN t0 ON CASE ((rt0.c3)|(rt0.c3))  WHEN (((t0.c13)) NOT BETWEEN ((rt0.c2)) AND ((t0.c13))) THEN ((0.4815262480428186) ISNULL) END WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c3 INNER JOIN t0 ON CASE ((rt0.c3)|(rt0.c3))  WHEN (((t0.c13)) NOT BETWEEN ((rt0.c2)) AND ((t0.c13))) THEN ((0.4815262480428186) ISNULL) END);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c3 INNER JOIN t0 ON CASE ((rt0.c3)|(rt0.c3))  WHEN (((t0.c13)) NOT BETWEEN ((rt0.c2)) AND ((t0.c13))) THEN ((0.4815262480428186) ISNULL) END WHERE (rt0.c3);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS INTEGER));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c13 COLLATE NOCASE) ISNULL)) ORDER BY CASE WHEN ((((t0.c13)AND(t0.c13)))OR(t0.c13)) THEN (~ (t0.c13)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c13 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((t0.c13)AND(t0.c13)))OR(t0.c13)) THEN (~ (t0.c13)) END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c13 COLLATE NOCASE) ISNULL)) ORDER BY CASE WHEN ((((t0.c13)AND(t0.c13)))OR(t0.c13)) THEN (~ (t0.c13)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c13 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((t0.c13)AND(t0.c13)))OR(t0.c13)) THEN (~ (t0.c13)) END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c13 COLLATE NOCASE) ISNULL)) ORDER BY CASE WHEN ((((t0.c13)AND(t0.c13)))OR(t0.c13)) THEN (~ (t0.c13)) END ASC;
SELECT * FROM rt0, vt0, t0 WHERE (SQLITE_COMPILEOPTION_GET(((vt0.c1)IS(rt0.c3)))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((t0.c13)) AND ((rt0.c2)))) BETWEEN (rt0.c0) AND (((rt0.c3)-(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((vt0.c1)IS(rt0.c3)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((vt0.c1)) NOT BETWEEN ((t0.c13)) AND ((rt0.c2)))) BETWEEN (rt0.c0) AND (((rt0.c3)-(NULL))))  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (SQLITE_COMPILEOPTION_GET(((vt0.c1)IS(rt0.c3)))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((t0.c13)) AND ((rt0.c2)))) BETWEEN (rt0.c0) AND (((rt0.c3)-(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((vt0.c1)IS(rt0.c3)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((vt0.c1)) NOT BETWEEN ((t0.c13)) AND ((rt0.c2)))) BETWEEN (rt0.c0) AND (((rt0.c3)-(NULL))))  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (SQLITE_COMPILEOPTION_GET(((vt0.c1)IS(rt0.c3)))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((t0.c13)) AND ((rt0.c2)))) BETWEEN (rt0.c0) AND (((rt0.c3)-(NULL))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c13)%(t0.c13))) NOT BETWEEN (t0.c13 COLLATE RTRIM) AND (CASE WHEN t0.c13 THEN t0.c13 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13)%(t0.c13))) NOT BETWEEN (t0.c13 COLLATE RTRIM) AND (CASE WHEN t0.c13 THEN t0.c13 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c13)%(t0.c13))) NOT BETWEEN (t0.c13 COLLATE RTRIM) AND (CASE WHEN t0.c13 THEN t0.c13 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13)%(t0.c13))) NOT BETWEEN (t0.c13 COLLATE RTRIM) AND (CASE WHEN t0.c13 THEN t0.c13 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c13)%(t0.c13))) NOT BETWEEN (t0.c13 COLLATE RTRIM) AND (CASE WHEN t0.c13 THEN t0.c13 END)));
SELECT COUNT(*) FROM rt0, t0 WHERE (LIKELY(((rt0.c0)&(t0.c13))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt0.c0)&(t0.c13)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (LIKELY(((rt0.c0)&(t0.c13))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt0.c0)&(t0.c13)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (LIKELY(((rt0.c0)&(t0.c13))));
SELECT ALL * FROM t0, vt0, rt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS BLOB)) ORDER BY CAST(((rt0.c0)||(vt0.c1)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(((rt0.c0)||(vt0.c1)) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS BLOB)) ORDER BY CAST(((rt0.c0)||(vt0.c1)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(((rt0.c0)||(vt0.c1)) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS BLOB)) ORDER BY CAST(((rt0.c0)||(vt0.c1)) AS REAL) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(((((vt0.c0)OR('_l/X嬣')))OR(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR('_l/X嬣')))OR(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((((vt0.c0)OR('_l/X嬣')))OR(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR('_l/X嬣')))OR(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((((vt0.c0)OR('_l/X嬣')))OR(vt0.c1)) AS NUMERIC));
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((rt0.c2) NOT NULL)) NOT BETWEEN (CAST('0.3897106614963891' AS INTEGER)) AND ((vt0.c1 IN (rt0.c3))))) ORDER BY (NOT ('-1945042908'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL)) NOT BETWEEN (CAST('0.3897106614963891' AS INTEGER)) AND ((vt0.c1 IN (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (NOT ('-1945042908'))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((rt0.c2) NOT NULL)) NOT BETWEEN (CAST('0.3897106614963891' AS INTEGER)) AND ((vt0.c1 IN (rt0.c3))))) ORDER BY (NOT ('-1945042908'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL)) NOT BETWEEN (CAST('0.3897106614963891' AS INTEGER)) AND ((vt0.c1 IN (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (NOT ('-1945042908'))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((rt0.c2) NOT NULL)) NOT BETWEEN (CAST('0.3897106614963891' AS INTEGER)) AND ((vt0.c1 IN (rt0.c3))))) ORDER BY (NOT ('-1945042908'))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((- ('Y?]0YQw,'))) ORDER BY (RTRIM(t0.c13) IN ()), (((((t0.c13))<((t0.c13)))) BETWEEN (((((t0.c13)OR(t0.c13)))OR(NULL))) AND ((((t0.c13, t0.c13, t0.c13)) BETWEEN ((t0.c13, 0.0021474577429949626, t0.c13)) AND ((t0.c13, t0.c13, x'18fe'))))) ASC, t0.c13 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ('Y?]0YQw,'))) IS TRUE)  as count FROM t0 ORDER BY (RTRIM(t0.c13) IN ()), (((((t0.c13))<((t0.c13)))) BETWEEN (((((t0.c13)OR(t0.c13)))OR(NULL))) AND ((((t0.c13, t0.c13, t0.c13)) BETWEEN ((t0.c13, 0.0021474577429949626, t0.c13)) AND ((t0.c13, t0.c13, x'18fe'))))) ASC, t0.c13 COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((- ('Y?]0YQw,'))) ORDER BY (RTRIM(t0.c13) IN ()), (((((t0.c13))<((t0.c13)))) BETWEEN (((((t0.c13)OR(t0.c13)))OR(NULL))) AND ((((t0.c13, t0.c13, t0.c13)) BETWEEN ((t0.c13, 0.0021474577429949626, t0.c13)) AND ((t0.c13, t0.c13, x'18fe'))))) ASC, t0.c13 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ('Y?]0YQw,'))) IS TRUE)  as count FROM t0 ORDER BY (RTRIM(t0.c13) IN ()), (((((t0.c13))<((t0.c13)))) BETWEEN (((((t0.c13)OR(t0.c13)))OR(NULL))) AND ((((t0.c13, t0.c13, t0.c13)) BETWEEN ((t0.c13, 0.0021474577429949626, t0.c13)) AND ((t0.c13, t0.c13, x'18fe'))))) ASC, t0.c13 COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((- ('Y?]0YQw,'))) ORDER BY (RTRIM(t0.c13) IN ()), (((((t0.c13))<((t0.c13)))) BETWEEN (((((t0.c13)OR(t0.c13)))OR(NULL))) AND ((((t0.c13, t0.c13, t0.c13)) BETWEEN ((t0.c13, 0.0021474577429949626, t0.c13)) AND ((t0.c13, t0.c13, x'18fe'))))) ASC, t0.c13 COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (NOT (t0.c13 COLLATE RTRIM)) FULL OUTER JOIN t0 ON ((t0.c13) NOT BETWEEN (((((rt0.c3)AND(rt0.c0)))AND(vt0.c1))) AND ((~ (rt0.c3)))) WHERE (((LIKELIHOOD(vt0.c1, 0.4541636264068185)) BETWEEN (LIKE(t0.c13, rt0.c0)) AND (LIKELY(DISTINCT rt0.c3)))) ORDER BY (((t0.c13)OR('d妅>')) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(vt0.c1, 0.4541636264068185)) BETWEEN (LIKE(t0.c13, rt0.c0)) AND (LIKELY(DISTINCT rt0.c3)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (NOT (t0.c13 COLLATE RTRIM)) FULL OUTER JOIN t0 ON ((t0.c13) NOT BETWEEN (((((rt0.c3)AND(rt0.c0)))AND(vt0.c1))) AND ((~ (rt0.c3)))) ORDER BY (((t0.c13)OR('d妅>')) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (NOT (t0.c13 COLLATE RTRIM)) FULL OUTER JOIN t0 ON ((t0.c13) NOT BETWEEN (((((rt0.c3)AND(rt0.c0)))AND(vt0.c1))) AND ((~ (rt0.c3)))) WHERE (((LIKELIHOOD(vt0.c1, 0.4541636264068185)) BETWEEN (LIKE(t0.c13, rt0.c0)) AND (LIKELY(DISTINCT rt0.c3)))) ORDER BY (((t0.c13)OR('d妅>')) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(vt0.c1, 0.4541636264068185)) BETWEEN (LIKE(t0.c13, rt0.c0)) AND (LIKELY(DISTINCT rt0.c3)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (NOT (t0.c13 COLLATE RTRIM)) FULL OUTER JOIN t0 ON ((t0.c13) NOT BETWEEN (((((rt0.c3)AND(rt0.c0)))AND(vt0.c1))) AND ((~ (rt0.c3)))) ORDER BY (((t0.c13)OR('d妅>')) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((('-1616601860')>>((t0.c13 IN ())))) ORDER BY CASE ((t0.c13) NOTNULL)  WHEN ((t0.c13)<(t0.c13)) THEN t0.c13 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT ALL (((('-1616601860')>>((t0.c13 IN ())))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c13) NOTNULL)  WHEN ((t0.c13)<(t0.c13)) THEN t0.c13 COLLATE BINARY END DESC);
SELECT ALL * FROM t0 WHERE ((('-1616601860')>>((t0.c13 IN ())))) ORDER BY CASE ((t0.c13) NOTNULL)  WHEN ((t0.c13)<(t0.c13)) THEN t0.c13 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT ALL (((('-1616601860')>>((t0.c13 IN ())))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c13) NOTNULL)  WHEN ((t0.c13)<(t0.c13)) THEN t0.c13 COLLATE BINARY END DESC);
SELECT ALL * FROM t0 WHERE ((('-1616601860')>>((t0.c13 IN ())))) ORDER BY CASE ((t0.c13) NOTNULL)  WHEN ((t0.c13)<(t0.c13)) THEN t0.c13 COLLATE BINARY END DESC;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (RTRIM(rt0.c0 COLLATE BINARY)) ORDER BY ((((rt0.c1)+(rt0.c3)))>=((rt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((rt0.c1)+(rt0.c3)))>=((rt0.c1 IN ()))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (RTRIM(rt0.c0 COLLATE BINARY)) ORDER BY ((((rt0.c1)+(rt0.c3)))>=((rt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((rt0.c1)+(rt0.c3)))>=((rt0.c1 IN ()))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (RTRIM(rt0.c0 COLLATE BINARY)) ORDER BY ((((rt0.c1)+(rt0.c3)))>=((rt0.c1 IN ()))) ASC;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c2) AND ('924187639'))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c2) AND ('924187639'))) ISNULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c2) AND ('924187639'))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c2) AND ('924187639'))) ISNULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c2) AND ('924187639'))) ISNULL));
SELECT * FROM rt0 WHERE ((((x'' IN ())) NOT NULL)) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ())) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT * FROM rt0 WHERE ((((x'' IN ())) NOT NULL)) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ())) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT * FROM rt0 WHERE ((((x'' IN ())) NOT NULL)) ORDER BY rt0.c2 DESC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((vt0.c1 IN (vt0.c1, rt0.c3)), ((rt0.c3)-(t0.c13)), ((rt0.c2) IS FALSE)))=((NULL, (((rt0.c1))==((vt0.c0))), ((vt0.c0)GLOB(rt0.c3))))) RIGHT OUTER JOIN rt0 ON ((((vt0.c0)&(rt0.c3)))>>((((x'd05c', vt0.c1, rt0.c2)) BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((t0.c13, rt0.c0, rt0.c2))))) WHERE (CAST(((((((((((((vt0.c1)OR(t0.c13)))AND(vt0.c1)))OR(NULL)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((vt0.c1)OR(t0.c13)))AND(vt0.c1)))OR(NULL)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((vt0.c1 IN (vt0.c1, rt0.c3)), ((rt0.c3)-(t0.c13)), ((rt0.c2) IS FALSE)))==((NULL, (((rt0.c1))=((vt0.c0))), ((vt0.c0)GLOB(rt0.c3))))) RIGHT OUTER JOIN rt0 ON ((((vt0.c0)&(rt0.c3)))>>((((x'd05c', vt0.c1, rt0.c2)) BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((t0.c13, rt0.c0, rt0.c2))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((vt0.c1 IN (vt0.c1, rt0.c3)), ((rt0.c3)-(t0.c13)), ((rt0.c2) IS FALSE)))=((NULL, (((rt0.c1))==((vt0.c0))), ((vt0.c0)GLOB(rt0.c3))))) RIGHT OUTER JOIN rt0 ON ((((vt0.c0)&(rt0.c3)))>>((((x'd05c', vt0.c1, rt0.c2)) BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((t0.c13, rt0.c0, rt0.c2))))) WHERE (CAST(((((((((((((vt0.c1)OR(t0.c13)))AND(vt0.c1)))OR(NULL)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((vt0.c1)OR(t0.c13)))AND(vt0.c1)))OR(NULL)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((vt0.c1 IN (vt0.c1, rt0.c3)), ((rt0.c3)-(t0.c13)), ((rt0.c2) IS FALSE)))==((NULL, (((rt0.c1))=((vt0.c0))), ((vt0.c0)GLOB(rt0.c3))))) RIGHT OUTER JOIN rt0 ON ((((vt0.c0)&(rt0.c3)))>>((((x'd05c', vt0.c1, rt0.c2)) BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((t0.c13, rt0.c0, rt0.c2))))));
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c0) ISNULL)) BETWEEN (rt0.c3) AND (((rt0.c3)>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL)) BETWEEN (rt0.c3) AND (((rt0.c3)>(rt0.c3))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c0) ISNULL)) BETWEEN (rt0.c3) AND (((rt0.c3)>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL)) BETWEEN (rt0.c3) AND (((rt0.c3)>(rt0.c3))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c0) ISNULL)) BETWEEN (rt0.c3) AND (((rt0.c3)>(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((vt0.c1 IN ()));
SELECT * FROM t0, vt0, rt0 WHERE ('') ORDER BY CAST(((rt0.c1)*(rt0.c3)) AS REAL), COALESCE(DISTINCT rt0.c1, vt0.c1) COLLATE BINARY COLLATE BINARY ASC  NULLS FIRST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(((rt0.c1)*(rt0.c3)) AS REAL), COALESCE(DISTINCT rt0.c1, vt0.c1) COLLATE BINARY COLLATE BINARY ASC  NULLS FIRST, rt0.c1 ASC);
SELECT * FROM t0, vt0, rt0 WHERE ('') ORDER BY CAST(((rt0.c1)*(rt0.c3)) AS REAL), COALESCE(DISTINCT rt0.c1, vt0.c1) COLLATE BINARY COLLATE BINARY ASC  NULLS FIRST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(((rt0.c1)*(rt0.c3)) AS REAL), COALESCE(DISTINCT rt0.c1, vt0.c1) COLLATE BINARY COLLATE BINARY ASC  NULLS FIRST, rt0.c1 ASC);
SELECT * FROM t0, vt0, rt0 WHERE ('') ORDER BY CAST(((rt0.c1)*(rt0.c3)) AS REAL), COALESCE(DISTINCT rt0.c1, vt0.c1) COLLATE BINARY COLLATE BINARY ASC  NULLS FIRST, rt0.c1 ASC;
SELECT * FROM t0, vt0, rt0 WHERE (((CASE WHEN t0.c13 THEN rt0.c1 ELSE t0.c13 END) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c13))) AND (LIKELIHOOD(DISTINCT vt0.c0, 0.960634633667467)))) ORDER BY ((((((((((((t0.c13)AND(rt0.c3)))OR(t0.c13)))OR(t0.c13)))AND(rt0.c0)))AND(((rt0.c1)%(rt0.c1)))))OR(((rt0.c2)<(rt0.c0)))) DESC, ((SUBSTR(rt0.c0, 'ݴ	\rj'))IS((((x'd8f2'))<=((vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c13 THEN rt0.c1 ELSE t0.c13 END) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c13))) AND (LIKELIHOOD(DISTINCT vt0.c0, 0.960634633667467)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((((((t0.c13)AND(rt0.c3)))OR(t0.c13)))OR(t0.c13)))AND(rt0.c0)))AND(((rt0.c1)%(rt0.c1)))))OR(((rt0.c2)<(rt0.c0)))) DESC, ((SUBSTR(rt0.c0, 'ݴ	\rj'))IS((((x'd8f2'))<=((vt0.c1))))) DESC);
SELECT * FROM t0, vt0, rt0 WHERE (((CASE WHEN t0.c13 THEN rt0.c1 ELSE t0.c13 END) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c13))) AND (LIKELIHOOD(DISTINCT vt0.c0, 0.960634633667467)))) ORDER BY ((((((((((((t0.c13)AND(rt0.c3)))OR(t0.c13)))OR(t0.c13)))AND(rt0.c0)))AND(((rt0.c1)%(rt0.c1)))))OR(((rt0.c2)<(rt0.c0)))) DESC, ((SUBSTR(rt0.c0, 'ݴ	\rj'))IS((((x'd8f2'))<=((vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c13 THEN rt0.c1 ELSE t0.c13 END) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c13))) AND (LIKELIHOOD(DISTINCT vt0.c0, 0.960634633667467)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((((((t0.c13)AND(rt0.c3)))OR(t0.c13)))OR(t0.c13)))AND(rt0.c0)))AND(((rt0.c1)%(rt0.c1)))))OR(((rt0.c2)<(rt0.c0)))) DESC, ((SUBSTR(rt0.c0, 'ݴ	\rj'))IS((((x'd8f2'))<=((vt0.c1))))) DESC);
SELECT * FROM t0, vt0, rt0 WHERE (((CASE WHEN t0.c13 THEN rt0.c1 ELSE t0.c13 END) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c13))) AND (LIKELIHOOD(DISTINCT vt0.c0, 0.960634633667467)))) ORDER BY ((((((((((((t0.c13)AND(rt0.c3)))OR(t0.c13)))OR(t0.c13)))AND(rt0.c0)))AND(((rt0.c1)%(rt0.c1)))))OR(((rt0.c2)<(rt0.c0)))) DESC, ((SUBSTR(rt0.c0, 'ݴ	\rj'))IS((((x'd8f2'))<=((vt0.c1))))) DESC;
SELECT ALL * FROM vt0 WHERE ((((('')OR(vt0.c1)))AND('BYTu')) COLLATE RTRIM) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('')OR(vt0.c1)))AND('BYTu')) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((('')OR(vt0.c1)))AND('BYTu')) COLLATE RTRIM) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('')OR(vt0.c1)))AND('BYTu')) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((('')OR(vt0.c1)))AND('BYTu')) COLLATE RTRIM) ORDER BY x'' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (('fDWA|\n\r6p') IS FALSE) THEN CAST(rt0.c1 AS BLOB) END) ORDER BY CASE rt0.c3  WHEN rt0.c1 THEN NULL END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('fDWA|\n\r6p') IS FALSE) THEN CAST(rt0.c1 AS BLOB) END) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c3  WHEN rt0.c1 THEN NULL END COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (('fDWA|\n\r6p') IS FALSE) THEN CAST(rt0.c1 AS BLOB) END) ORDER BY CASE rt0.c3  WHEN rt0.c1 THEN NULL END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('fDWA|\n\r6p') IS FALSE) THEN CAST(rt0.c1 AS BLOB) END) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c3  WHEN rt0.c1 THEN NULL END COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (('fDWA|\n\r6p') IS FALSE) THEN CAST(rt0.c1 AS BLOB) END) ORDER BY CASE rt0.c3  WHEN rt0.c1 THEN NULL END COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT * FROM rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END))!=(((((('')OR(rt0.c2)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END))!=(((((('')OR(rt0.c2)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END))!=(((((('')OR(rt0.c2)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END))!=(((((('')OR(rt0.c2)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END))!=(((((('')OR(rt0.c2)))AND(rt0.c1))))));
SELECT * FROM vt0, rt0, t0 WHERE (((((x'')>=(rt0.c3)))GLOB(((t0.c13)IS(rt0.c1))))) ORDER BY ((((vt0.c1) NOTNULL)) NOT BETWEEN ((rt0.c2 IN ())) AND (CAST(vt0.c1 AS NUMERIC))), (+ (((rt0.c1) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')>=(rt0.c3)))GLOB(((t0.c13)IS(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((vt0.c1) NOTNULL)) NOT BETWEEN ((rt0.c2 IN ())) AND (CAST(vt0.c1 AS NUMERIC))), (+ (((rt0.c1) IS TRUE)))  NULLS LAST);
SELECT * FROM vt0, rt0, t0 WHERE (((((x'')>=(rt0.c3)))GLOB(((t0.c13)IS(rt0.c1))))) ORDER BY ((((vt0.c1) NOTNULL)) NOT BETWEEN ((rt0.c2 IN ())) AND (CAST(vt0.c1 AS NUMERIC))), (+ (((rt0.c1) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')>=(rt0.c3)))GLOB(((t0.c13)IS(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((vt0.c1) NOTNULL)) NOT BETWEEN ((rt0.c2 IN ())) AND (CAST(vt0.c1 AS NUMERIC))), (+ (((rt0.c1) IS TRUE)))  NULLS LAST);
SELECT * FROM vt0, rt0, t0 WHERE (((((x'')>=(rt0.c3)))GLOB(((t0.c13)IS(rt0.c1))))) ORDER BY ((((vt0.c1) NOTNULL)) NOT BETWEEN ((rt0.c2 IN ())) AND (CAST(vt0.c1 AS NUMERIC))), (+ (((rt0.c1) IS TRUE)))  NULLS LAST;
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((UNLIKELY(rt0.c2))/((- (rt0.c1)))) INNER JOIN rt0 ON (+ (vt0.c1)) COLLATE RTRIM WHERE (CAST(((rt0.c1)IS(rt0.c1)) AS TEXT)) ORDER BY (~ (json_valid(5.42006051E8)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)IS(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((UNLIKELY(rt0.c2))/((- (rt0.c1)))) INNER JOIN rt0 ON (+ (vt0.c1)) COLLATE RTRIM ORDER BY (~ (json_valid(5.42006051E8)))  NULLS LAST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((UNLIKELY(rt0.c2))/((- (rt0.c1)))) INNER JOIN rt0 ON (+ (vt0.c1)) COLLATE RTRIM WHERE (CAST(((rt0.c1)IS(rt0.c1)) AS TEXT)) ORDER BY (~ (json_valid(5.42006051E8)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)IS(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((UNLIKELY(rt0.c2))/((- (rt0.c1)))) INNER JOIN rt0 ON (+ (vt0.c1)) COLLATE RTRIM ORDER BY (~ (json_valid(5.42006051E8)))  NULLS LAST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((UNLIKELY(rt0.c2))/((- (rt0.c1)))) INNER JOIN rt0 ON (+ (vt0.c1)) COLLATE RTRIM WHERE (CAST(((rt0.c1)IS(rt0.c1)) AS TEXT)) ORDER BY (~ (json_valid(5.42006051E8)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) ISNULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i24, vt0 NATURAL JOIN t0 WHERE (((CASE WHEN t0.c13 THEN rt0.c1 ELSE t0.c13 END) NOT BETWEEN (CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END) AND ((('') NOT BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY (NOT ('騈t')) COLLATE NOCASE ASC  NULLS FIRST, (((NULL)GLOB('-1616601860')) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c13 THEN rt0.c1 ELSE t0.c13 END) NOT BETWEEN (CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END) AND ((('') NOT BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM rt0 INDEXED BY i24, vt0 NATURAL JOIN t0 ORDER BY (NOT ('騈t')) COLLATE NOCASE ASC  NULLS FIRST, (((NULL)GLOB('-1616601860')) IN ()));
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i24, vt0 NATURAL JOIN t0 WHERE (((CASE WHEN t0.c13 THEN rt0.c1 ELSE t0.c13 END) NOT BETWEEN (CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END) AND ((('') NOT BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY (NOT ('騈t')) COLLATE NOCASE ASC  NULLS FIRST, (((NULL)GLOB('-1616601860')) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c13 THEN rt0.c1 ELSE t0.c13 END) NOT BETWEEN (CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END) AND ((('') NOT BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM rt0 INDEXED BY i24, vt0 NATURAL JOIN t0 ORDER BY (NOT ('騈t')) COLLATE NOCASE ASC  NULLS FIRST, (((NULL)GLOB('-1616601860')) IN ()));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) NOT BETWEEN ('-160196088') AND (vt0.c0 COLLATE BINARY))) ORDER BY (((- (vt0.c1)))LIKE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER)) NOT BETWEEN ('-160196088') AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c1)))LIKE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) DESC);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) NOT BETWEEN ('-160196088') AND (vt0.c0 COLLATE BINARY))) ORDER BY (((- (vt0.c1)))LIKE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER)) NOT BETWEEN ('-160196088') AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c1)))LIKE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) DESC);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) NOT BETWEEN ('-160196088') AND (vt0.c0 COLLATE BINARY))) ORDER BY (((- (vt0.c1)))LIKE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) DESC;
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c13)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (t0.c13)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c13)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (t0.c13)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c13)) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (t0.c13);
SELECT SUM(count) FROM (SELECT ALL ((t0.c13) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c13);
SELECT SUM(count) FROM (SELECT ALL ((t0.c13) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c13);
SELECT ALL * FROM t0, rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c2 END)<=(((NULL) NOT BETWEEN (x'') AND (vt0.c1)))) WHERE (CASE ((vt0.c0)OR(vt0.c0))  WHEN (NOT (t0.c13)) THEN (((NULL))>((rt0.c3))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)OR(vt0.c0))  WHEN (NOT (t0.c13)) THEN (((NULL))>((rt0.c3))) END) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c2 END)<=(((NULL) NOT BETWEEN (x'') AND (vt0.c1)))));
SELECT ALL * FROM t0, rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c2 END)<=(((NULL) NOT BETWEEN (x'') AND (vt0.c1)))) WHERE (CASE ((vt0.c0)OR(vt0.c0))  WHEN (NOT (t0.c13)) THEN (((NULL))>((rt0.c3))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)OR(vt0.c0))  WHEN (NOT (t0.c13)) THEN (((NULL))>((rt0.c3))) END) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c2 END)<=(((NULL) NOT BETWEEN (x'') AND (vt0.c1)))));
SELECT ALL * FROM t0, rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c2 END)<=(((NULL) NOT BETWEEN (x'') AND (vt0.c1)))) WHERE (CASE ((vt0.c0)OR(vt0.c0))  WHEN (NOT (t0.c13)) THEN (((NULL))>((rt0.c3))) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (CASE rt0.c1  WHEN NULL THEN rt0.c3 END IN ()) WHERE (NULL) ORDER BY ((((('K-hw+V?B')AND(NULL)))OR(vt0.c0)) IN (vt0.c1, ((NULL)<=(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (CASE rt0.c1  WHEN NULL THEN rt0.c3 END IN ()) ORDER BY ((((('K-hw+V?B')AND(NULL)))OR(vt0.c0)) IN (vt0.c1, ((NULL)<=(rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (CASE rt0.c1  WHEN NULL THEN rt0.c3 END IN ()) WHERE (NULL) ORDER BY ((((('K-hw+V?B')AND(NULL)))OR(vt0.c0)) IN (vt0.c1, ((NULL)<=(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (CASE rt0.c1  WHEN NULL THEN rt0.c3 END IN ()) ORDER BY ((((('K-hw+V?B')AND(NULL)))OR(vt0.c0)) IN (vt0.c1, ((NULL)<=(rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (CASE rt0.c1  WHEN NULL THEN rt0.c3 END IN ()) WHERE (NULL) ORDER BY ((((('K-hw+V?B')AND(NULL)))OR(vt0.c0)) IN (vt0.c1, ((NULL)<=(rt0.c0))))  NULLS FIRST;
SELECT * FROM rt0, vt0 NATURAL JOIN t0 WHERE ((((rt0.c2)AND(rt0.c3)) IN ((rt0.c2 IN (rt0.c0, vt0.c1)), CASE rt0.c3  WHEN t0.c13 THEN rt0.c0 WHEN t0.c13 THEN vt0.c1 WHEN 0.9408145428828718 THEN t0.c13 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c13 END))) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)AND(rt0.c3)) IN ((rt0.c2 IN (rt0.c0, vt0.c1)), CASE rt0.c3  WHEN t0.c13 THEN rt0.c0 WHEN t0.c13 THEN vt0.c1 WHEN 0.9408145428828718 THEN t0.c13 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c13 END))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0 ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS TEXT) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 NATURAL JOIN t0 WHERE ((((rt0.c2)AND(rt0.c3)) IN ((rt0.c2 IN (rt0.c0, vt0.c1)), CASE rt0.c3  WHEN t0.c13 THEN rt0.c0 WHEN t0.c13 THEN vt0.c1 WHEN 0.9408145428828718 THEN t0.c13 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c13 END))) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)AND(rt0.c3)) IN ((rt0.c2 IN (rt0.c0, vt0.c1)), CASE rt0.c3  WHEN t0.c13 THEN rt0.c0 WHEN t0.c13 THEN vt0.c1 WHEN 0.9408145428828718 THEN t0.c13 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c13 END))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0 ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS TEXT) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 NATURAL JOIN t0 WHERE ((((rt0.c2)AND(rt0.c3)) IN ((rt0.c2 IN (rt0.c0, vt0.c1)), CASE rt0.c3  WHEN t0.c13 THEN rt0.c0 WHEN t0.c13 THEN vt0.c1 WHEN 0.9408145428828718 THEN t0.c13 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c13 END))) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS TEXT) ASC  NULLS FIRST;
SELECT * FROM t0, rt0, vt0 WHERE (((((t0.c13)>=(rt0.c3))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((vt0.c0)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13)>=(rt0.c3))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((((t0.c13)>=(rt0.c3))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((vt0.c0)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13)>=(rt0.c3))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((((t0.c13)>=(rt0.c3))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((vt0.c0)=(vt0.c0)))));
SELECT * FROM rt0 WHERE (((((0.8706171610648213) NOT BETWEEN (0.25762268099355645) AND (rt0.c2)))|((((''))<((rt0.c1)))))) ORDER BY ((- (rt0.c0)) IN ()), ((((((rt0.c1)%(rt0.c3)))OR(rt0.c0)))AND(ABS(DISTINCT rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.8706171610648213) NOT BETWEEN (0.25762268099355645) AND (rt0.c2)))|((((''))<((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((- (rt0.c0)) IN ()), ((((((rt0.c1)%(rt0.c3)))OR(rt0.c0)))AND(ABS(DISTINCT rt0.c3))) DESC);
SELECT * FROM rt0 WHERE (((((0.8706171610648213) NOT BETWEEN (0.25762268099355645) AND (rt0.c2)))|((((''))<((rt0.c1)))))) ORDER BY ((- (rt0.c0)) IN ()), ((((((rt0.c1)%(rt0.c3)))OR(rt0.c0)))AND(ABS(DISTINCT rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.8706171610648213) NOT BETWEEN (0.25762268099355645) AND (rt0.c2)))|((((''))<((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((- (rt0.c0)) IN ()), ((((((rt0.c1)%(rt0.c3)))OR(rt0.c0)))AND(ABS(DISTINCT rt0.c3))) DESC);
SELECT * FROM rt0 WHERE (((((0.8706171610648213) NOT BETWEEN (0.25762268099355645) AND (rt0.c2)))|((((''))<((rt0.c1)))))) ORDER BY ((- (rt0.c0)) IN ()), ((((((rt0.c1)%(rt0.c3)))OR(rt0.c0)))AND(ABS(DISTINCT rt0.c3))) DESC;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c13, t0.c13, t0.c13)) NOT BETWEEN ((((t0.c13)<=('499413253')), (- (t0.c13)), ((t0.c13) BETWEEN (t0.c13) AND (t0.c13)))) AND ((DATETIME(t0.c13, t0.c13, t0.c13), ((((((((t0.c13)OR(t0.c13)))OR(t0.c13)))AND(t0.c13)))AND(t0.c13)), ((x'bfe2') NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c13, t0.c13, t0.c13)) NOT BETWEEN ((((t0.c13)<=('499413253')), (- (t0.c13)), ((t0.c13) BETWEEN (t0.c13) AND (t0.c13)))) AND ((DATETIME(t0.c13, t0.c13, t0.c13), ((((((((t0.c13)OR(t0.c13)))OR(t0.c13)))AND(t0.c13)))AND(t0.c13)), ((x'bfe2') NOTNULL))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c13, t0.c13, t0.c13)) NOT BETWEEN ((((t0.c13)<=('499413253')), (- (t0.c13)), ((t0.c13) BETWEEN (t0.c13) AND (t0.c13)))) AND ((DATETIME(t0.c13, t0.c13, t0.c13), ((((((((t0.c13)OR(t0.c13)))OR(t0.c13)))AND(t0.c13)))AND(t0.c13)), ((x'bfe2') NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c13, t0.c13, t0.c13)) NOT BETWEEN ((((t0.c13)<=('499413253')), (- (t0.c13)), ((t0.c13) BETWEEN (t0.c13) AND (t0.c13)))) AND ((DATETIME(t0.c13, t0.c13, t0.c13), ((((((((t0.c13)OR(t0.c13)))OR(t0.c13)))AND(t0.c13)))AND(t0.c13)), ((x'bfe2') NOTNULL))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c13, t0.c13, t0.c13)) NOT BETWEEN ((((t0.c13)<=('499413253')), (- (t0.c13)), ((t0.c13) BETWEEN (t0.c13) AND (t0.c13)))) AND ((DATETIME(t0.c13, t0.c13, t0.c13), ((((((((t0.c13)OR(t0.c13)))OR(t0.c13)))AND(t0.c13)))AND(t0.c13)), ((x'bfe2') NOTNULL)))));
SELECT * FROM t0, rt0 WHERE ((((rt0.c2, NULL, rt0.c0)) NOT BETWEEN ((CAST(rt0.c3 AS REAL), ((t0.c13)IS NOT(rt0.c3)), CASE '-1312776432'  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) AND ((0x9ec9655, CASE WHEN 0.9507241996462995 THEN t0.c13 END, t0.c13 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, NULL, rt0.c0)) NOT BETWEEN ((CAST(rt0.c3 AS REAL), ((t0.c13)IS NOT(rt0.c3)), CASE '-1312776432'  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) AND ((0X9ec9655, CASE WHEN 0.9507241996462995 THEN t0.c13 END, t0.c13 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((rt0.c2, NULL, rt0.c0)) NOT BETWEEN ((CAST(rt0.c3 AS REAL), ((t0.c13)IS NOT(rt0.c3)), CASE '-1312776432'  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) AND ((0x9ec9655, CASE WHEN 0.9507241996462995 THEN t0.c13 END, t0.c13 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, NULL, rt0.c0)) NOT BETWEEN ((CAST(rt0.c3 AS REAL), ((t0.c13)IS NOT(rt0.c3)), CASE '-1312776432'  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) AND ((0X9ec9655, CASE WHEN 0.9507241996462995 THEN t0.c13 END, t0.c13 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((rt0.c2, NULL, rt0.c0)) NOT BETWEEN ((CAST(rt0.c3 AS REAL), ((t0.c13)IS NOT(rt0.c3)), CASE '-1312776432'  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) AND ((0x9ec9655, CASE WHEN 0.9507241996462995 THEN t0.c13 END, t0.c13 COLLATE NOCASE))));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c13 AS NUMERIC)) NOT BETWEEN (((t0.c13)<=(t0.c13))) AND (((t0.c13) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c13 AS NUMERIC)) NOT BETWEEN (((t0.c13)<=(t0.c13))) AND (((t0.c13) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c13 AS NUMERIC)) NOT BETWEEN (((t0.c13)<=(t0.c13))) AND (((t0.c13) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c13 AS NUMERIC)) NOT BETWEEN (((t0.c13)<=(t0.c13))) AND (((t0.c13) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c13 AS NUMERIC)) NOT BETWEEN (((t0.c13)<=(t0.c13))) AND (((t0.c13) ISNULL))));
SELECT ALL * FROM t0, rt0, vt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN ((vt0.c0 IN (rt0.c2))) AND ((vt0.c0 IN ())))) ORDER BY (((((((rt0.c1)OR(rt0.c2)))OR(vt0.c0))))<((((rt0.c3) NOT BETWEEN (vt0.c1) AND (t0.c13))))) DESC, CASE x''  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN t0.c13 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 ELSE '' END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) BETWEEN ((vt0.c0 IN (rt0.c2))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((((((rt0.c1)OR(rt0.c2)))OR(vt0.c0))))<((((rt0.c3) NOT BETWEEN (vt0.c1) AND (t0.c13))))) DESC, CASE x''  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN t0.c13 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 ELSE '' END COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN ((vt0.c0 IN (rt0.c2))) AND ((vt0.c0 IN ())))) ORDER BY (((((((rt0.c1)OR(rt0.c2)))OR(vt0.c0))))<((((rt0.c3) NOT BETWEEN (vt0.c1) AND (t0.c13))))) DESC, CASE x''  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN t0.c13 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 ELSE '' END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) BETWEEN ((vt0.c0 IN (rt0.c2))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((((((rt0.c1)OR(rt0.c2)))OR(vt0.c0))))<((((rt0.c3) NOT BETWEEN (vt0.c1) AND (t0.c13))))) DESC, CASE x''  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN t0.c13 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 ELSE '' END COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN ((vt0.c0 IN (rt0.c2))) AND ((vt0.c0 IN ())))) ORDER BY (((((((rt0.c1)OR(rt0.c2)))OR(vt0.c0))))<((((rt0.c3) NOT BETWEEN (vt0.c1) AND (t0.c13))))) DESC, CASE x''  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN t0.c13 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 ELSE '' END COLLATE RTRIM  NULLS LAST;
SELECT * FROM t0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c3 THEN 'B?CEn]' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)) AND ((((t0.c13)%('N'))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c3 THEN 'B?CEn]' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)) AND ((((t0.c13)%('N')))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c3 THEN 'B?CEn]' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)) AND ((((t0.c13)%('N'))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c3 THEN 'B?CEn]' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)) AND ((((t0.c13)%('N')))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c3 THEN 'B?CEn]' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)) AND ((((t0.c13)%('N'))))));
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON rt0.c1 WHERE (((t0.c13 COLLATE RTRIM) ISNULL)) ORDER BY ((((((rt0.c3, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c3, t0.c13)) AND ((rt0.c1, t0.c13, t0.c13)))))<((((rt0.c1)LIKE(t0.c13))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c13 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON rt0.c1 ORDER BY ((((((rt0.c3, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c3, t0.c13)) AND ((rt0.c1, t0.c13, t0.c13)))))<((((rt0.c1)LIKE(t0.c13))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON rt0.c1 WHERE (((t0.c13 COLLATE RTRIM) ISNULL)) ORDER BY ((((((rt0.c3, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c3, t0.c13)) AND ((rt0.c1, t0.c13, t0.c13)))))<((((rt0.c1)LIKE(t0.c13))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c13 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON rt0.c1 ORDER BY ((((((rt0.c3, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c3, t0.c13)) AND ((rt0.c1, t0.c13, t0.c13)))))<((((rt0.c1)LIKE(t0.c13))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON rt0.c1 WHERE (((t0.c13 COLLATE RTRIM) ISNULL)) ORDER BY ((((((rt0.c3, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c3, t0.c13)) AND ((rt0.c1, t0.c13, t0.c13)))))<((((rt0.c1)LIKE(t0.c13))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (vt0.c0 COLLATE RTRIM IN ()) INNER JOIN vt0 ON NULL WHERE (((((vt0.c0)==(rt0.c2)))<<((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(rt0.c2)))<<((vt0.c0 IN ())))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (vt0.c0 COLLATE RTRIM IN ()) INNER JOIN vt0 ON NULL);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (vt0.c0 COLLATE RTRIM IN ()) INNER JOIN vt0 ON NULL WHERE (((((vt0.c0)==(rt0.c2)))<<((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(rt0.c2)))<<((vt0.c0 IN ())))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (vt0.c0 COLLATE RTRIM IN ()) INNER JOIN vt0 ON NULL);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (vt0.c0 COLLATE RTRIM IN ()) INNER JOIN vt0 ON NULL WHERE (((((vt0.c0)==(rt0.c2)))<<((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)))>(((rt0.c3) NOTNULL)))) ORDER BY ((((('2021919289')/(rt0.c3))))>((((-1.61660186E9) BETWEEN (rt0.c1) AND (rt0.c0))))) ASC  NULLS LAST, ((rt0.c3)>(((rt0.c1)%(x'5840')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)))>(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((('2021919289')/(rt0.c3))))>((((-1.61660186E9) BETWEEN (rt0.c1) AND (rt0.c0))))) ASC  NULLS LAST, ((rt0.c3)>(((rt0.c1)%(x'5840')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)))>(((rt0.c3) NOTNULL)))) ORDER BY ((((('2021919289')/(rt0.c3))))>((((-1.61660186E9) BETWEEN (rt0.c1) AND (rt0.c0))))) ASC  NULLS LAST, ((rt0.c3)>(((rt0.c1)%(x'5840')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)))>(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((('2021919289')/(rt0.c3))))>((((-1.61660186E9) BETWEEN (rt0.c1) AND (rt0.c0))))) ASC  NULLS LAST, ((rt0.c3)>(((rt0.c1)%(x'5840')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)))>(((rt0.c3) NOTNULL)))) ORDER BY ((((('2021919289')/(rt0.c3))))>((((-1.61660186E9) BETWEEN (rt0.c1) AND (rt0.c0))))) ASC  NULLS LAST, ((rt0.c3)>(((rt0.c1)%(x'5840')))) ASC  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)%(rt0.c1))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((rt0.c2)<(rt0.c3)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)%(rt0.c1))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((rt0.c2)<(rt0.c3)))));
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)%(rt0.c1))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((rt0.c2)<(rt0.c3)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)%(rt0.c1))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((rt0.c2)<(rt0.c3)))));
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)%(rt0.c1))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((rt0.c2)<(rt0.c3)))) WHERE (NULL);
SELECT ALL * FROM rt0, t0 NOT INDEXED LEFT OUTER JOIN vt0 ON (((IFNULL(DISTINCT t0.c13, '')))<=(((+ (x'4ae4'))))) WHERE (((((CASE WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN '-388279418' WHEN vt0.c1 THEN rt0.c2 ELSE vt0.c0 END)AND(((rt0.c3) BETWEEN ('1662920116') AND (rt0.c2)))))OR((~ (vt0.c1))))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN '-388279418' WHEN vt0.c1 THEN rt0.c2 ELSE vt0.c0 END)AND(((rt0.c3) BETWEEN ('1662920116') AND (rt0.c2)))))OR((~ (vt0.c1))))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON (((IFNULL(DISTINCT t0.c13, '')))<=(((+ (x'4ae4'))))) ORDER BY rt0.c0 DESC);
SELECT ALL * FROM rt0, t0 NOT INDEXED LEFT OUTER JOIN vt0 ON (((IFNULL(DISTINCT t0.c13, '')))<=(((+ (x'4ae4'))))) WHERE (((((CASE WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN '-388279418' WHEN vt0.c1 THEN rt0.c2 ELSE vt0.c0 END)AND(((rt0.c3) BETWEEN ('1662920116') AND (rt0.c2)))))OR((~ (vt0.c1))))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN '-388279418' WHEN vt0.c1 THEN rt0.c2 ELSE vt0.c0 END)AND(((rt0.c3) BETWEEN ('1662920116') AND (rt0.c2)))))OR((~ (vt0.c1))))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON (((IFNULL(DISTINCT t0.c13, '')))<=(((+ (x'4ae4'))))) ORDER BY rt0.c0 DESC);
SELECT ALL * FROM rt0, t0 NOT INDEXED LEFT OUTER JOIN vt0 ON (((IFNULL(DISTINCT t0.c13, '')))<=(((+ (x'4ae4'))))) WHERE (((((CASE WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN '-388279418' WHEN vt0.c1 THEN rt0.c2 ELSE vt0.c0 END)AND(((rt0.c3) BETWEEN ('1662920116') AND (rt0.c2)))))OR((~ (vt0.c1))))) ORDER BY rt0.c0 DESC;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY CAST(('q]|羽' IN (rt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(('q]|羽' IN (rt0.c0)) AS TEXT));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY CAST(('q]|羽' IN (rt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(('q]|羽' IN (rt0.c0)) AS TEXT));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY CAST(('q]|羽' IN (rt0.c0)) AS TEXT);
SELECT COUNT(*) FROM t0 WHERE ((((((x'')!=(t0.c13))))<>((((t0.c13)*(t0.c13)))))) ORDER BY LIKE((((t0.c13)) NOT BETWEEN ((t0.c13)) AND ((t0.c13))), t0.c13, '0') DESC;
SELECT SUM(count) FROM (SELECT (((((((x'')<>(t0.c13))))!=((((t0.c13)*(t0.c13)))))) IS TRUE)  as count FROM t0 ORDER BY LIKE((((t0.c13)) NOT BETWEEN ((t0.c13)) AND ((t0.c13))), t0.c13, '0') DESC);
SELECT COUNT(*) FROM t0 WHERE ((((((x'')!=(t0.c13))))<>((((t0.c13)*(t0.c13)))))) ORDER BY LIKE((((t0.c13)) NOT BETWEEN ((t0.c13)) AND ((t0.c13))), t0.c13, '0') DESC;
SELECT SUM(count) FROM (SELECT (((((((x'')<>(t0.c13))))!=((((t0.c13)*(t0.c13)))))) IS TRUE)  as count FROM t0 ORDER BY LIKE((((t0.c13)) NOT BETWEEN ((t0.c13)) AND ((t0.c13))), t0.c13, '0') DESC);
SELECT COUNT(*) FROM t0 WHERE ((((((x'')!=(t0.c13))))<>((((t0.c13)*(t0.c13)))))) ORDER BY LIKE((((t0.c13)) NOT BETWEEN ((t0.c13)) AND ((t0.c13))), t0.c13, '0') DESC;
SELECT * FROM rt0 WHERE (((((~ (rt0.c1)), ((rt0.c2) IS TRUE), x''))>=((((rt0.c0)<=(rt0.c0)), rt0.c0, (NOT (rt0.c1)))))) ORDER BY (rt0.c0 IN ()), ((((rt0.c1)||(rt0.c2)))!=(CASE WHEN rt0.c3 THEN rt0.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt0.c1)), ((rt0.c2) IS TRUE), x''))>=((((rt0.c0)<=(rt0.c0)), rt0.c0, (NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN ()), ((((rt0.c1)||(rt0.c2)))!=(CASE WHEN rt0.c3 THEN rt0.c3 END))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((~ (rt0.c1)), ((rt0.c2) IS TRUE), x''))>=((((rt0.c0)<=(rt0.c0)), rt0.c0, (NOT (rt0.c1)))))) ORDER BY (rt0.c0 IN ()), ((((rt0.c1)||(rt0.c2)))!=(CASE WHEN rt0.c3 THEN rt0.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt0.c1)), ((rt0.c2) IS TRUE), x''))>=((((rt0.c0)<=(rt0.c0)), rt0.c0, (NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN ()), ((((rt0.c1)||(rt0.c2)))!=(CASE WHEN rt0.c3 THEN rt0.c3 END))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((~ (rt0.c1)), ((rt0.c2) IS TRUE), x''))>=((((rt0.c0)<=(rt0.c0)), rt0.c0, (NOT (rt0.c1)))))) ORDER BY (rt0.c0 IN ()), ((((rt0.c1)||(rt0.c2)))!=(CASE WHEN rt0.c3 THEN rt0.c3 END))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c13)))>(CAST(t0.c13 AS INTEGER)))) ORDER BY (((t0.c13 IN ()))AND((((t0.c13))<=((t0.c13))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c13)))>(CAST(t0.c13 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c13 IN ()))AND((((t0.c13))<=((t0.c13))))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c13)))>(CAST(t0.c13 AS INTEGER)))) ORDER BY (((t0.c13 IN ()))AND((((t0.c13))<=((t0.c13))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c13)))>(CAST(t0.c13 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c13 IN ()))AND((((t0.c13))<=((t0.c13))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((('')>=(rt0.c1)))/(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((('')>=(rt0.c1)))/(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((('')>=(rt0.c1)))/(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((('')>=(rt0.c1)))/(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((('')>=(rt0.c1)))/(CAST(vt0.c0 AS BLOB))));
SELECT ALL * FROM t0, vt0 WHERE ('0.4484991606503428') ORDER BY (((vt0.c1)LIKE(vt0.c1)) IN ()) ASC  NULLS LAST, CAST((NOT (NULL)) AS REAL) DESC  NULLS LAST, ((CASE WHEN 0Xffffffffaaffce76 THEN 0.05070175816674172 ELSE t0.c13 END)&(t0.c13))  NULLS FIRST, (~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (('0.4484991606503428') IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c1)LIKE(vt0.c1)) IN ()) ASC  NULLS LAST, CAST((NOT (NULL)) AS REAL) DESC  NULLS LAST, ((CASE WHEN 0Xffffffffaaffce76 THEN 0.05070175816674172 ELSE t0.c13 END)&(t0.c13))  NULLS FIRST, (~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM t0, vt0 WHERE ('0.4484991606503428') ORDER BY (((vt0.c1)LIKE(vt0.c1)) IN ()) ASC  NULLS LAST, CAST((NOT (NULL)) AS REAL) DESC  NULLS LAST, ((CASE WHEN 0Xffffffffaaffce76 THEN 0.05070175816674172 ELSE t0.c13 END)&(t0.c13))  NULLS FIRST, (~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (('0.4484991606503428') IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c1)LIKE(vt0.c1)) IN ()) ASC  NULLS LAST, CAST((NOT (NULL)) AS REAL) DESC  NULLS LAST, ((CASE WHEN 0Xffffffffaaffce76 THEN 0.05070175816674172 ELSE t0.c13 END)&(t0.c13))  NULLS FIRST, (~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM t0, vt0 WHERE ('0.4484991606503428') ORDER BY (((vt0.c1)LIKE(vt0.c1)) IN ()) ASC  NULLS LAST, CAST((NOT (NULL)) AS REAL) DESC  NULLS LAST, ((CASE WHEN 0Xffffffffaaffce76 THEN 0.05070175816674172 ELSE t0.c13 END)&(t0.c13))  NULLS FIRST, (~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT * FROM t0 WHERE ('7');
SELECT SUM(count) FROM (SELECT (('7') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('7');
SELECT SUM(count) FROM (SELECT (('7') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('7');
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON vt0.c0 INNER JOIN vt0 ON (((rt0.c0)) BETWEEN (((NOT (rt0.c2)))) AND ((((t0.c13) ISNULL)))) WHERE (NULL) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))GLOB(UNLIKELY(rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON vt0.c0 INNER JOIN vt0 ON (((rt0.c0)) BETWEEN (((NOT (rt0.c2)))) AND ((((t0.c13) ISNULL)))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))GLOB(UNLIKELY(rt0.c2)))  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON vt0.c0 INNER JOIN vt0 ON (((rt0.c0)) BETWEEN (((NOT (rt0.c2)))) AND ((((t0.c13) ISNULL)))) WHERE (NULL) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))GLOB(UNLIKELY(rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON vt0.c0 INNER JOIN vt0 ON (((rt0.c0)) BETWEEN (((NOT (rt0.c2)))) AND ((((t0.c13) ISNULL)))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))GLOB(UNLIKELY(rt0.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c3 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c3 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c3 AS BLOB)) NOT NULL));
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON ((((rt0.c3)<=(0.7461947132154896))) IS TRUE) RIGHT OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN ((~ (rt0.c0))) AND (((vt0.c0)LIKE(rt0.c3)))) WHERE (((DATE(rt0.c2, t0.c13, rt0.c2)) NOT BETWEEN (COALESCE(DISTINCT rt0.c3, rt0.c2)) AND ((t0.c13 IN ()))));
SELECT SUM(count) FROM (SELECT ((((DATE(rt0.c2, t0.c13, rt0.c2)) NOT BETWEEN (COALESCE(DISTINCT rt0.c3, rt0.c2)) AND ((t0.c13 IN ())))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((rt0.c3)<=(0.7461947132154896))) IS TRUE) RIGHT OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN ((~ (rt0.c0))) AND (((vt0.c0)LIKE(rt0.c3)))));
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON ((((rt0.c3)<=(0.7461947132154896))) IS TRUE) RIGHT OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN ((~ (rt0.c0))) AND (((vt0.c0)LIKE(rt0.c3)))) WHERE (((DATE(rt0.c2, t0.c13, rt0.c2)) NOT BETWEEN (COALESCE(DISTINCT rt0.c3, rt0.c2)) AND ((t0.c13 IN ()))));
SELECT SUM(count) FROM (SELECT ((((DATE(rt0.c2, t0.c13, rt0.c2)) NOT BETWEEN (COALESCE(DISTINCT rt0.c3, rt0.c2)) AND ((t0.c13 IN ())))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((rt0.c3)<=(0.7461947132154896))) IS TRUE) RIGHT OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN ((~ (rt0.c0))) AND (((vt0.c0)LIKE(rt0.c3)))));
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON ((((rt0.c3)<=(0.7461947132154896))) IS TRUE) RIGHT OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN ((~ (rt0.c0))) AND (((vt0.c0)LIKE(rt0.c3)))) WHERE (((DATE(rt0.c2, t0.c13, rt0.c2)) NOT BETWEEN (COALESCE(DISTINCT rt0.c3, rt0.c2)) AND ((t0.c13 IN ()))));
SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))>(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))>(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))>(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))>(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))>(CAST(rt0.c2 AS TEXT))));
SELECT * FROM rt0, vt0, t0 WHERE (LTRIM(CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((LTRIM(CAST(rt0.c1 AS REAL))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (LTRIM(CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((LTRIM(CAST(rt0.c1 AS REAL))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (LTRIM(CAST(rt0.c1 AS REAL)));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON (((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((x'', HEX(rt0.c3), ((rt0.c2)=(vt0.c0)))) AND (((NOT (vt0.c1)), (rt0.c2 IN ()), t0.c13 COLLATE RTRIM))) WHERE ((((vt0.c1) NOT BETWEEN (NULL) AND ('1995462093')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT BETWEEN (NULL) AND ('1995462093')) IN ())) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON (((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((x'', HEX(rt0.c3), ((rt0.c2)=(vt0.c0)))) AND (((NOT (vt0.c1)), (rt0.c2 IN ()), t0.c13 COLLATE RTRIM))));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON (((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((x'', HEX(rt0.c3), ((rt0.c2)=(vt0.c0)))) AND (((NOT (vt0.c1)), (rt0.c2 IN ()), t0.c13 COLLATE RTRIM))) WHERE ((((vt0.c1) NOT BETWEEN (NULL) AND ('1995462093')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT BETWEEN (NULL) AND ('1995462093')) IN ())) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON (((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((x'', HEX(rt0.c3), ((rt0.c2)=(vt0.c0)))) AND (((NOT (vt0.c1)), (rt0.c2 IN ()), t0.c13 COLLATE RTRIM))));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON (((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((x'', HEX(rt0.c3), ((rt0.c2)=(vt0.c0)))) AND (((NOT (vt0.c1)), (rt0.c2 IN ()), t0.c13 COLLATE RTRIM))) WHERE ((((vt0.c1) NOT BETWEEN (NULL) AND ('1995462093')) IN ()));
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE WHEN rt0.c0 THEN x'' ELSE t0.c13 END) IS FALSE)) ORDER BY (NOT (CAST(rt0.c2 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN x'' ELSE t0.c13 END) IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY (NOT (CAST(rt0.c2 AS TEXT))) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE WHEN rt0.c0 THEN x'' ELSE t0.c13 END) IS FALSE)) ORDER BY (NOT (CAST(rt0.c2 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN x'' ELSE t0.c13 END) IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY (NOT (CAST(rt0.c2 AS TEXT))) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE WHEN rt0.c0 THEN x'' ELSE t0.c13 END) IS FALSE)) ORDER BY (NOT (CAST(rt0.c2 AS TEXT))) ASC;
SELECT ALL * FROM vt0 WHERE (-6.27409564E8) ORDER BY x'55c8'  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((-6.27409564E8) IS TRUE)  as count FROM vt0 ORDER BY x'55c8'  NULLS FIRST, vt0.c0);
SELECT ALL * FROM vt0 WHERE (-6.27409564E8) ORDER BY x'55c8'  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((-6.27409564E8) IS TRUE)  as count FROM vt0 ORDER BY x'55c8'  NULLS FIRST, vt0.c0);
SELECT ALL * FROM vt0 WHERE (-6.27409564E8) ORDER BY x'55c8'  NULLS FIRST, vt0.c0;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON CASE ((rt0.c2)<(rt0.c3))  WHEN ('-1944034158' IN ()) THEN ((t0.c13) IS FALSE) WHEN (~ (rt0.c0)) THEN ((rt0.c3)IS(rt0.c3)) WHEN CAST(rt0.c1 AS TEXT) THEN (((rt0.c0)) BETWEEN ((0.1695372017456681)) AND ((rt0.c3))) END CROSS JOIN vt0 ON ((((((((CAST(rt0.c1 AS REAL))OR(rt0.c1 COLLATE BINARY)))OR((- ('')))))AND(CAST(t0.c13 AS INTEGER))))AND((t0.c13 IN (t0.c13)))) WHERE ((- (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CASE ((rt0.c2)<(rt0.c3))  WHEN ('-1944034158' IN ()) THEN ((t0.c13) IS FALSE) WHEN (~ (rt0.c0)) THEN ((rt0.c3)IS(rt0.c3)) WHEN CAST(rt0.c1 AS TEXT) THEN (((rt0.c0)) BETWEEN ((0.1695372017456681)) AND ((rt0.c3))) END CROSS JOIN vt0 ON ((((((((CAST(rt0.c1 AS REAL))OR(rt0.c1 COLLATE BINARY)))OR((- ('')))))AND(CAST(t0.c13 AS INTEGER))))AND((t0.c13 IN (t0.c13)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON CASE ((rt0.c2)<(rt0.c3))  WHEN ('-1944034158' IN ()) THEN ((t0.c13) IS FALSE) WHEN (~ (rt0.c0)) THEN ((rt0.c3)IS(rt0.c3)) WHEN CAST(rt0.c1 AS TEXT) THEN (((rt0.c0)) BETWEEN ((0.1695372017456681)) AND ((rt0.c3))) END CROSS JOIN vt0 ON ((((((((CAST(rt0.c1 AS REAL))OR(rt0.c1 COLLATE BINARY)))OR((- ('')))))AND(CAST(t0.c13 AS INTEGER))))AND((t0.c13 IN (t0.c13)))) WHERE ((- (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CASE ((rt0.c2)<(rt0.c3))  WHEN ('-1944034158' IN ()) THEN ((t0.c13) IS FALSE) WHEN (~ (rt0.c0)) THEN ((rt0.c3)IS(rt0.c3)) WHEN CAST(rt0.c1 AS TEXT) THEN (((rt0.c0)) BETWEEN ((0.1695372017456681)) AND ((rt0.c3))) END CROSS JOIN vt0 ON ((((((((CAST(rt0.c1 AS REAL))OR(rt0.c1 COLLATE BINARY)))OR((- ('')))))AND(CAST(t0.c13 AS INTEGER))))AND((t0.c13 IN (t0.c13)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON CASE ((rt0.c2)<(rt0.c3))  WHEN ('-1944034158' IN ()) THEN ((t0.c13) IS FALSE) WHEN (~ (rt0.c0)) THEN ((rt0.c3)IS(rt0.c3)) WHEN CAST(rt0.c1 AS TEXT) THEN (((rt0.c0)) BETWEEN ((0.1695372017456681)) AND ((rt0.c3))) END CROSS JOIN vt0 ON ((((((((CAST(rt0.c1 AS REAL))OR(rt0.c1 COLLATE BINARY)))OR((- ('')))))AND(CAST(t0.c13 AS INTEGER))))AND((t0.c13 IN (t0.c13)))) WHERE ((- (CAST(vt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT * FROM t0, vt0 CROSS JOIN rt0 ON CAST(((vt0.c0)GLOB(rt0.c3)) AS NUMERIC) WHERE (((LOWER(vt0.c1))<(('' IN ()))));
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c1))<(('' IN ())))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON CAST(((vt0.c0)GLOB(rt0.c3)) AS NUMERIC));
SELECT * FROM t0, vt0 CROSS JOIN rt0 ON CAST(((vt0.c0)GLOB(rt0.c3)) AS NUMERIC) WHERE (((LOWER(vt0.c1))<(('' IN ()))));
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c1))<(('' IN ())))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON CAST(((vt0.c0)GLOB(rt0.c3)) AS NUMERIC));
SELECT * FROM t0, vt0 CROSS JOIN rt0 ON CAST(((vt0.c0)GLOB(rt0.c3)) AS NUMERIC) WHERE (((LOWER(vt0.c1))<(('' IN ()))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((vt0.c0 IN (vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) WHERE (((((NULL)AND(((((((((((((rt0.c1)AND(rt0.c3)))AND(vt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))))AND((((rt0.c1))<=((vt0.c0)))))) ORDER BY rt0.c3  NULLS LAST, ((json_insert(vt0.c0, rt0.c3, rt0.c0)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(((((((((((((rt0.c1)AND(rt0.c3)))AND(vt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))))AND((((rt0.c1))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((vt0.c0 IN (vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) ORDER BY rt0.c3  NULLS LAST, ((json_insert(vt0.c0, rt0.c3, rt0.c0)) ISNULL) DESC);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((vt0.c0 IN (vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) WHERE (((((NULL)AND(((((((((((((rt0.c1)AND(rt0.c3)))AND(vt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))))AND((((rt0.c1))<=((vt0.c0)))))) ORDER BY rt0.c3  NULLS LAST, ((json_insert(vt0.c0, rt0.c3, rt0.c0)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(((((((((((((rt0.c1)AND(rt0.c3)))AND(vt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))))AND((((rt0.c1))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((vt0.c0 IN (vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) ORDER BY rt0.c3  NULLS LAST, ((json_insert(vt0.c0, rt0.c3, rt0.c0)) ISNULL) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c3)%(rt0.c2))) AND (((rt0.c3)*(rt0.c1))))) ORDER BY (rt0.c0 IN (rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c3)%(rt0.c2))) AND (((rt0.c3)*(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN (rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c3)%(rt0.c2))) AND (((rt0.c3)*(rt0.c1))))) ORDER BY (rt0.c0 IN (rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c3)%(rt0.c2))) AND (((rt0.c3)*(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN (rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c3)%(rt0.c2))) AND (((rt0.c3)*(rt0.c1))))) ORDER BY (rt0.c0 IN (rt0.c1)) COLLATE NOCASE;
SELECT * FROM vt0, t0 WHERE (((((NULL) IS FALSE)) BETWEEN (t0.c13 COLLATE BINARY) AND (((t0.c13)LIKE(t0.c13)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) IS FALSE)) BETWEEN (t0.c13 COLLATE BINARY) AND (((t0.c13)LIKE(t0.c13))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((NULL) IS FALSE)) BETWEEN (t0.c13 COLLATE BINARY) AND (((t0.c13)LIKE(t0.c13)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) IS FALSE)) BETWEEN (t0.c13 COLLATE BINARY) AND (((t0.c13)LIKE(t0.c13))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((NULL) IS FALSE)) BETWEEN (t0.c13 COLLATE BINARY) AND (((t0.c13)LIKE(t0.c13)))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CAST(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN t0.c13 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END AS TEXT)) ORDER BY ((((CASE WHEN t0.c13 THEN rt0.c2 ELSE rt0.c0 END)AND(((((rt0.c2)AND(t0.c13)))AND(rt0.c2)))))OR(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN t0.c13 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END AS TEXT)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((CASE WHEN t0.c13 THEN rt0.c2 ELSE rt0.c0 END)AND(((((rt0.c2)AND(t0.c13)))AND(rt0.c2)))))OR(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))) ASC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CAST(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN t0.c13 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END AS TEXT)) ORDER BY ((((CASE WHEN t0.c13 THEN rt0.c2 ELSE rt0.c0 END)AND(((((rt0.c2)AND(t0.c13)))AND(rt0.c2)))))OR(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN t0.c13 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END AS TEXT)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((CASE WHEN t0.c13 THEN rt0.c2 ELSE rt0.c0 END)AND(((((rt0.c2)AND(t0.c13)))AND(rt0.c2)))))OR(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))) ASC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CAST(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN t0.c13 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END AS TEXT)) ORDER BY ((((CASE WHEN t0.c13 THEN rt0.c2 ELSE rt0.c0 END)AND(((((rt0.c2)AND(t0.c13)))AND(rt0.c2)))))OR(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)<>(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)!=(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)<>(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)!=(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)<>(rt0.c2)) IN ()));
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (NULL) AND (((((vt0.c0)AND(vt0.c0)))OR('1849533791'))))) ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN 'kF\洗Q}' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) AND ((((vt0.c0) IS TRUE)))) ASC  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN TRIM(vt0.c0) END;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) BETWEEN (NULL) AND (((((vt0.c0)AND(vt0.c0)))OR('1849533791'))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN 'kF\洗Q}' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) AND ((((vt0.c0) IS TRUE)))) ASC  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN TRIM(vt0.c0) END);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (NULL) AND (((((vt0.c0)AND(vt0.c0)))OR('1849533791'))))) ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN 'kF\洗Q}' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) AND ((((vt0.c0) IS TRUE)))) ASC  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN TRIM(vt0.c0) END;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) BETWEEN (NULL) AND (((((vt0.c0)AND(vt0.c0)))OR('1849533791'))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN 'kF\洗Q}' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) AND ((((vt0.c0) IS TRUE)))) ASC  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN TRIM(vt0.c0) END);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (NULL) AND (((((vt0.c0)AND(vt0.c0)))OR('1849533791'))))) ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN 'kF\洗Q}' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) AND ((((vt0.c0) IS TRUE)))) ASC  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN TRIM(vt0.c0) END;
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE ((('')) BETWEEN ((vt0.c1)) AND ((rt0.c1)))  WHEN 0.4843380927109803 THEN json_valid(vt0.c0) END) ORDER BY ((((rt0.c2) ISNULL))GLOB(CASE WHEN '1328687246' THEN vt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((('')) BETWEEN ((vt0.c1)) AND ((rt0.c1)))  WHEN 0.4843380927109803 THEN json_valid(vt0.c0) END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((rt0.c2) ISNULL))GLOB(CASE WHEN '1328687246' THEN vt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE ((('')) BETWEEN ((vt0.c1)) AND ((rt0.c1)))  WHEN 0.4843380927109803 THEN json_valid(vt0.c0) END) ORDER BY ((((rt0.c2) ISNULL))GLOB(CASE WHEN '1328687246' THEN vt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((('')) BETWEEN ((vt0.c1)) AND ((rt0.c1)))  WHEN 0.4843380927109803 THEN json_valid(vt0.c0) END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((rt0.c2) ISNULL))GLOB(CASE WHEN '1328687246' THEN vt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE ((('')) BETWEEN ((vt0.c1)) AND ((rt0.c1)))  WHEN 0.4843380927109803 THEN json_valid(vt0.c0) END) ORDER BY ((((rt0.c2) ISNULL))GLOB(CASE WHEN '1328687246' THEN vt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END));
SELECT ALL * FROM rt0 WHERE ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END))>((rt0.c3)))) ORDER BY (((((rt0.c2))=((rt0.c2))))AND(((((((((rt0.c1)AND(0.8657055441307847)))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))) ASC, ((((rt0.c3) NOT NULL)) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c3))) AND (HEX(DISTINCT rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END))>((rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2))==((rt0.c2))))AND(((((((((rt0.c1)AND(0.8657055441307847)))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))) ASC, ((((rt0.c3) NOT NULL)) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c3))) AND (HEX(DISTINCT rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END))>((rt0.c3)))) ORDER BY (((((rt0.c2))=((rt0.c2))))AND(((((((((rt0.c1)AND(0.8657055441307847)))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))) ASC, ((((rt0.c3) NOT NULL)) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c3))) AND (HEX(DISTINCT rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END))>((rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2))==((rt0.c2))))AND(((((((((rt0.c1)AND(0.8657055441307847)))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))) ASC, ((((rt0.c3) NOT NULL)) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c3))) AND (HEX(DISTINCT rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END))>((rt0.c3)))) ORDER BY (((((rt0.c2))=((rt0.c2))))AND(((((((((rt0.c1)AND(0.8657055441307847)))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))) ASC, ((((rt0.c3) NOT NULL)) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c3))) AND (HEX(DISTINCT rt0.c0)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN (vt0.c0) AND (NULLIF(DISTINCT '', vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN (vt0.c0) AND (NULLIF(DISTINCT '', vt0.c0))) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN (vt0.c0) AND (NULLIF(DISTINCT '', vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN (vt0.c0) AND (NULLIF(DISTINCT '', vt0.c0))) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN (vt0.c0) AND (NULLIF(DISTINCT '', vt0.c0))) DESC;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c3 WHERE (CASE WHEN rt0.c3 COLLATE NOCASE THEN CAST(rt0.c3 AS REAL) ELSE (rt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 COLLATE NOCASE THEN CAST(rt0.c3 AS REAL) ELSE (rt0.c0 IN ()) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c3);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c3 WHERE (CASE WHEN rt0.c3 COLLATE NOCASE THEN CAST(rt0.c3 AS REAL) ELSE (rt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 COLLATE NOCASE THEN CAST(rt0.c3 AS REAL) ELSE (rt0.c0 IN ()) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c3);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c3 WHERE (CASE WHEN rt0.c3 COLLATE NOCASE THEN CAST(rt0.c3 AS REAL) ELSE (rt0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('-1333116031');
SELECT SUM(count) FROM (SELECT ALL (('-1333116031') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('-1333116031');
SELECT SUM(count) FROM (SELECT ALL (('-1333116031') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('-1333116031');
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((t0.c13)) NOT BETWEEN ((rt0.c3)) AND ((t0.c13))) COLLATE NOCASE WHERE (TIME(((t0.c13) NOT BETWEEN (vt0.c1) AND (rt0.c1)), CAST(rt0.c2 AS TEXT), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))) ORDER BY ((((vt0.c1) BETWEEN (t0.c13) AND (t0.c13)))GLOB(((vt0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(((t0.c13) NOT BETWEEN (vt0.c1) AND (rt0.c1)), CAST(rt0.c2 AS TEXT), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((t0.c13)) NOT BETWEEN ((rt0.c3)) AND ((t0.c13))) COLLATE NOCASE ORDER BY ((((vt0.c1) BETWEEN (t0.c13) AND (t0.c13)))GLOB(((vt0.c0) ISNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((t0.c13)) NOT BETWEEN ((rt0.c3)) AND ((t0.c13))) COLLATE NOCASE WHERE (TIME(((t0.c13) NOT BETWEEN (vt0.c1) AND (rt0.c1)), CAST(rt0.c2 AS TEXT), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))) ORDER BY ((((vt0.c1) BETWEEN (t0.c13) AND (t0.c13)))GLOB(((vt0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(((t0.c13) NOT BETWEEN (vt0.c1) AND (rt0.c1)), CAST(rt0.c2 AS TEXT), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((t0.c13)) NOT BETWEEN ((rt0.c3)) AND ((t0.c13))) COLLATE NOCASE ORDER BY ((((vt0.c1) BETWEEN (t0.c13) AND (t0.c13)))GLOB(((vt0.c0) ISNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((t0.c13)) NOT BETWEEN ((rt0.c3)) AND ((t0.c13))) COLLATE NOCASE WHERE (TIME(((t0.c13) NOT BETWEEN (vt0.c1) AND (rt0.c1)), CAST(rt0.c2 AS TEXT), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))) ORDER BY ((((vt0.c1) BETWEEN (t0.c13) AND (t0.c13)))GLOB(((vt0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN MIN(rt0.c1, '1103165397') THEN ((rt0.c1) NOT BETWEEN ('') AND (rt0.c1)) ELSE (rt0.c0 IN (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN MIN(rt0.c1, '1103165397') THEN ((rt0.c1) NOT BETWEEN ('') AND (rt0.c1)) ELSE (rt0.c0 IN (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN MIN(rt0.c1, '1103165397') THEN ((rt0.c1) NOT BETWEEN ('') AND (rt0.c1)) ELSE (rt0.c0 IN (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN MIN(rt0.c1, '1103165397') THEN ((rt0.c1) NOT BETWEEN ('') AND (rt0.c1)) ELSE (rt0.c0 IN (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN MIN(rt0.c1, '1103165397') THEN ((rt0.c1) NOT BETWEEN ('') AND (rt0.c1)) ELSE (rt0.c0 IN (rt0.c1)) END);
SELECT ALL * FROM rt0 INDEXED BY i24 CROSS JOIN t0 ON ((((-1333116031)*(t0.c13)))/(rt0.c3 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON (((rt0.c1)) BETWEEN (((NOT (0.9145540605405984)))) AND ((vt0.c0 COLLATE NOCASE))) WHERE (CAST(((t0.c13) NOTNULL) AS NUMERIC)) ORDER BY CASE ((((vt0.c0)AND(rt0.c2)))AND(vt0.c0))  WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)) THEN (((rt0.c2))<>((rt0.c2))) ELSE rt0.c2 COLLATE BINARY END, CAST((vt0.c0 IN ()) AS TEXT) ASC  NULLS LAST, ((LIKE(rt0.c1, rt0.c2)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c13) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM rt0 INDEXED BY i24 CROSS JOIN t0 ON ((((-1333116031)*(t0.c13)))/(rt0.c3 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON (((rt0.c1)) BETWEEN (((NOT (0.9145540605405984)))) AND ((vt0.c0 COLLATE NOCASE))) ORDER BY CASE ((((vt0.c0)AND(rt0.c2)))AND(vt0.c0))  WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)) THEN (((rt0.c2))!=((rt0.c2))) ELSE rt0.c2 COLLATE BINARY END, CAST((vt0.c0 IN ()) AS TEXT) ASC  NULLS LAST, ((LIKE(rt0.c1, rt0.c2)) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt0 INDEXED BY i24 CROSS JOIN t0 ON ((((-1333116031)*(t0.c13)))/(rt0.c3 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON (((rt0.c1)) BETWEEN (((NOT (0.9145540605405984)))) AND ((vt0.c0 COLLATE NOCASE))) WHERE (CAST(((t0.c13) NOTNULL) AS NUMERIC)) ORDER BY CASE ((((vt0.c0)AND(rt0.c2)))AND(vt0.c0))  WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)) THEN (((rt0.c2))<>((rt0.c2))) ELSE rt0.c2 COLLATE BINARY END, CAST((vt0.c0 IN ()) AS TEXT) ASC  NULLS LAST, ((LIKE(rt0.c1, rt0.c2)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c13) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM rt0 INDEXED BY i24 CROSS JOIN t0 ON ((((-1333116031)*(t0.c13)))/(rt0.c3 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON (((rt0.c1)) BETWEEN (((NOT (0.9145540605405984)))) AND ((vt0.c0 COLLATE NOCASE))) ORDER BY CASE ((((vt0.c0)AND(rt0.c2)))AND(vt0.c0))  WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)) THEN (((rt0.c2))!=((rt0.c2))) ELSE rt0.c2 COLLATE BINARY END, CAST((vt0.c0 IN ()) AS TEXT) ASC  NULLS LAST, ((LIKE(rt0.c1, rt0.c2)) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (NULLIF(DISTINCT vt0.c1, t0.c13))));
SELECT SUM(count) FROM (SELECT (((- (NULLIF(DISTINCT vt0.c1, t0.c13)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (NULLIF(DISTINCT vt0.c1, t0.c13))));
SELECT SUM(count) FROM (SELECT (((- (NULLIF(DISTINCT vt0.c1, t0.c13)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (NULLIF(DISTINCT vt0.c1, t0.c13))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((+ (t0.c13 COLLATE NOCASE))) ORDER BY CASE (~ ('-846486497'))  WHEN NULLIF(DISTINCT vt0.c0, vt0.c1) THEN (t0.c13 IN ()) WHEN vt0.c1 THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN x'' ELSE CASE WHEN t0.c13 THEN vt0.c1 ELSE NULL END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c13 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE (~ ('-846486497'))  WHEN NULLIF(DISTINCT vt0.c0, vt0.c1) THEN (t0.c13 IN ()) WHEN vt0.c1 THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN x'' ELSE CASE WHEN t0.c13 THEN vt0.c1 ELSE NULL END END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((+ (t0.c13 COLLATE NOCASE))) ORDER BY CASE (~ ('-846486497'))  WHEN NULLIF(DISTINCT vt0.c0, vt0.c1) THEN (t0.c13 IN ()) WHEN vt0.c1 THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN x'' ELSE CASE WHEN t0.c13 THEN vt0.c1 ELSE NULL END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c13 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE (~ ('-846486497'))  WHEN NULLIF(DISTINCT vt0.c0, vt0.c1) THEN (t0.c13 IN ()) WHEN vt0.c1 THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN x'' ELSE CASE WHEN t0.c13 THEN vt0.c1 ELSE NULL END END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((+ (t0.c13 COLLATE NOCASE))) ORDER BY CASE (~ ('-846486497'))  WHEN NULLIF(DISTINCT vt0.c0, vt0.c1) THEN (t0.c13 IN ()) WHEN vt0.c1 THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN x'' ELSE CASE WHEN t0.c13 THEN vt0.c1 ELSE NULL END END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((((rt0.c1)AND(rt0.c0)))AND('-375424914')) AS NUMERIC)) ORDER BY LIKELIHOOD((((rt0.c2, t0.c13, NULL))>((vt0.c1, rt0.c2, vt0.c1))), 0.9841045672743216) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)AND(rt0.c0)))AND('-375424914')) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY LIKELIHOOD((((rt0.c2, t0.c13, NULL))>((vt0.c1, rt0.c2, vt0.c1))), 0.9841045672743216) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((((rt0.c1)AND(rt0.c0)))AND('-375424914')) AS NUMERIC)) ORDER BY LIKELIHOOD((((rt0.c2, t0.c13, NULL))>((vt0.c1, rt0.c2, vt0.c1))), 0.9841045672743216) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)AND(rt0.c0)))AND('-375424914')) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY LIKELIHOOD((((rt0.c2, t0.c13, NULL))>((vt0.c1, rt0.c2, vt0.c1))), 0.9841045672743216) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((((rt0.c1)AND(rt0.c0)))AND('-375424914')) AS NUMERIC)) ORDER BY LIKELIHOOD((((rt0.c2, t0.c13, NULL))>((vt0.c1, rt0.c2, vt0.c1))), 0.9841045672743216) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN t0 ON ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END)<>((- (vt0.c1)))) WHERE (COALESCE(((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)), ((t0.c13) ISNULL), -9.47530471E8, ((((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c1)))OR(0.8706171610648213)))OR(vt0.c0)))) ORDER BY (((((~ (rt0.c1)))AND(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))))AND(x'b98aab6c')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)), ((t0.c13) ISNULL), -9.47530471E8, ((((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c1)))OR(0.8706171610648213)))OR(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END)!=((- (vt0.c1)))) ORDER BY (((((~ (rt0.c1)))AND(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))))AND(x'b98aab6c')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN t0 ON ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END)<>((- (vt0.c1)))) WHERE (COALESCE(((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)), ((t0.c13) ISNULL), -9.47530471E8, ((((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c1)))OR(0.8706171610648213)))OR(vt0.c0)))) ORDER BY (((((~ (rt0.c1)))AND(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))))AND(x'b98aab6c')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)), ((t0.c13) ISNULL), -9.47530471E8, ((((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c1)))OR(0.8706171610648213)))OR(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END)!=((- (vt0.c1)))) ORDER BY (((((~ (rt0.c1)))AND(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))))AND(x'b98aab6c')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN t0 ON ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END)<>((- (vt0.c1)))) WHERE (COALESCE(((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)), ((t0.c13) ISNULL), -9.47530471E8, ((((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c1)))OR(0.8706171610648213)))OR(vt0.c0)))) ORDER BY (((((~ (rt0.c1)))AND(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))))AND(x'b98aab6c')) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c13)GLOB(t0.c13))  WHEN (- (t0.c13)) THEN (t0.c13 IN ()) ELSE ((t0.c13)<<(t0.c13)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c13)GLOB(t0.c13))  WHEN (- (t0.c13)) THEN (t0.c13 IN ()) ELSE ((t0.c13)<<(t0.c13)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c13)GLOB(t0.c13))  WHEN (- (t0.c13)) THEN (t0.c13 IN ()) ELSE ((t0.c13)<<(t0.c13)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c13)GLOB(t0.c13))  WHEN (- (t0.c13)) THEN (t0.c13 IN ()) ELSE ((t0.c13)<<(t0.c13)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c13)GLOB(t0.c13))  WHEN (- (t0.c13)) THEN (t0.c13 IN ()) ELSE ((t0.c13)<<(t0.c13)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3)==(vt0.c1)) IN (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)==(vt0.c1)) IN (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3)==(vt0.c1)) IN (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)==(vt0.c1)) IN (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3)==(vt0.c1)) IN (rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0, vt0 WHERE ((((((t0.c13, t0.c13, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, t0.c13)) AND ((vt0.c1, vt0.c0, vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c13, t0.c13, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, t0.c13)) AND ((vt0.c1, vt0.c0, vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((t0.c13, t0.c13, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, t0.c13)) AND ((vt0.c1, vt0.c0, vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c13, t0.c13, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, t0.c13)) AND ((vt0.c1, vt0.c0, vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((t0.c13, t0.c13, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, t0.c13)) AND ((vt0.c1, vt0.c0, vt0.c0)))) NOT NULL));
SELECT ALL * FROM rt0, t0 WHERE ((((((+ (rt0.c0)))OR(((0.8502711097681538)LIKE(NULL)))))AND('1919702812')));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c0)))OR(((0.8502711097681538)LIKE(NULL)))))AND('1919702812'))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((+ (rt0.c0)))OR(((0.8502711097681538)LIKE(NULL)))))AND('1919702812')));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c0)))OR(((0.8502711097681538)LIKE(NULL)))))AND('1919702812'))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((+ (rt0.c0)))OR(((0.8502711097681538)LIKE(NULL)))))AND('1919702812')));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((((((((rt0.c0)AND(rt0.c3)))AND(t0.c13)))AND(t0.c13)))AND(rt0.c2))) BETWEEN (((((rt0.c2)OR(rt0.c3)))OR(t0.c13))) AND ((NOT (t0.c13)))) WHERE (((((rt0.c1)<=(rt0.c0))) BETWEEN (t0.c13) AND (((rt0.c0)IS NOT(t0.c13)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(rt0.c0))) BETWEEN (t0.c13) AND (((rt0.c0)IS NOT(t0.c13))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((((((((rt0.c0)AND(rt0.c3)))AND(t0.c13)))AND(t0.c13)))AND(rt0.c2))) BETWEEN (((((rt0.c2)OR(rt0.c3)))OR(t0.c13))) AND ((NOT (t0.c13)))));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((((((((rt0.c0)AND(rt0.c3)))AND(t0.c13)))AND(t0.c13)))AND(rt0.c2))) BETWEEN (((((rt0.c2)OR(rt0.c3)))OR(t0.c13))) AND ((NOT (t0.c13)))) WHERE (((((rt0.c1)<=(rt0.c0))) BETWEEN (t0.c13) AND (((rt0.c0)IS NOT(t0.c13)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(rt0.c0))) BETWEEN (t0.c13) AND (((rt0.c0)IS NOT(t0.c13))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((((((((rt0.c0)AND(rt0.c3)))AND(t0.c13)))AND(t0.c13)))AND(rt0.c2))) BETWEEN (((((rt0.c2)OR(rt0.c3)))OR(t0.c13))) AND ((NOT (t0.c13)))));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((((((((rt0.c0)AND(rt0.c3)))AND(t0.c13)))AND(t0.c13)))AND(rt0.c2))) BETWEEN (((((rt0.c2)OR(rt0.c3)))OR(t0.c13))) AND ((NOT (t0.c13)))) WHERE (((((rt0.c1)<=(rt0.c0))) BETWEEN (t0.c13) AND (((rt0.c0)IS NOT(t0.c13)))));
SELECT ALL * FROM rt0, vt0 WHERE (((x'' COLLATE RTRIM)AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN '2091840819' WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE RTRIM)AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN '2091840819' WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt0 WHERE (((x'' COLLATE RTRIM)AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN '2091840819' WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE RTRIM)AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN '2091840819' WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt0 WHERE (((x'' COLLATE RTRIM)AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN '2091840819' WHEN rt0.c2 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST(CASE WHEN t0.c13 THEN vt0.c1 ELSE rt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c13 THEN vt0.c1 ELSE rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST(CASE WHEN t0.c13 THEN vt0.c1 ELSE rt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c13 THEN vt0.c1 ELSE rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST(CASE WHEN t0.c13 THEN vt0.c1 ELSE rt0.c2 END AS TEXT));
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED, vt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))IS(0x2ac6d42e))) ORDER BY (- (rt0.c0)) DESC  NULLS LAST, IFNULL(x'9d691b47' COLLATE RTRIM, ((rt0.c2)+(rt0.c2))) ASC  NULLS LAST, x'';
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))IS(0x2ac6d42e))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (- (rt0.c0)) DESC  NULLS LAST, IFNULL(x'9d691b47' COLLATE RTRIM, ((rt0.c2)+(rt0.c2))) ASC  NULLS LAST, x'');
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED, vt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))IS(0x2ac6d42e))) ORDER BY (- (rt0.c0)) DESC  NULLS LAST, IFNULL(x'9d691b47' COLLATE RTRIM, ((rt0.c2)+(rt0.c2))) ASC  NULLS LAST, x'';
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))IS(0x2ac6d42e))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (- (rt0.c0)) DESC  NULLS LAST, IFNULL(x'9d691b47' COLLATE RTRIM, ((rt0.c2)+(rt0.c2))) ASC  NULLS LAST, x'');
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED, vt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))IS(0x2ac6d42e))) ORDER BY (- (rt0.c0)) DESC  NULLS LAST, IFNULL(x'9d691b47' COLLATE RTRIM, ((rt0.c2)+(rt0.c2))) ASC  NULLS LAST, x'';
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON -1601745855 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c0 AS TEXT)) NOTNULL) WHERE (CASE 0.5353410241258216  WHEN 'Va2' THEN CASE NULL  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END ELSE 'eX' END) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE 0.5353410241258216  WHEN 'Va2' THEN CASE NULL  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END ELSE 'eX' END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON -1601745855 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c0 AS TEXT)) NOTNULL) ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON -1601745855 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c0 AS TEXT)) NOTNULL) WHERE (CASE 0.5353410241258216  WHEN 'Va2' THEN CASE NULL  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END ELSE 'eX' END) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE 0.5353410241258216  WHEN 'Va2' THEN CASE NULL  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END ELSE 'eX' END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON -1601745855 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c0 AS TEXT)) NOTNULL) ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON -1601745855 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c0 AS TEXT)) NOTNULL) WHERE (CASE 0.5353410241258216  WHEN 'Va2' THEN CASE NULL  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END ELSE 'eX' END) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE ('~+S.ZP,j' COLLATE RTRIM) ORDER BY rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('~+S.ZP,j' COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c2 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ('~+S.ZP,j' COLLATE RTRIM) ORDER BY rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('~+S.ZP,j' COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c2 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ('~+S.ZP,j' COLLATE RTRIM) ORDER BY rt0.c2 ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c13))))) AND (((((vt0.c1, vt0.c0, t0.c13)) BETWEEN ((vt0.c1, vt0.c1, t0.c13)) AND ((vt0.c1, vt0.c0, t0.c13)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c13))))) AND (((((vt0.c1, vt0.c0, t0.c13)) BETWEEN ((vt0.c1, vt0.c1, t0.c13)) AND ((vt0.c1, vt0.c0, t0.c13))))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c13))))) AND (((((vt0.c1, vt0.c0, t0.c13)) BETWEEN ((vt0.c1, vt0.c1, t0.c13)) AND ((vt0.c1, vt0.c0, t0.c13)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c13))))) AND (((((vt0.c1, vt0.c0, t0.c13)) BETWEEN ((vt0.c1, vt0.c1, t0.c13)) AND ((vt0.c1, vt0.c0, t0.c13))))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c13))))) AND (((((vt0.c1, vt0.c0, t0.c13)) BETWEEN ((vt0.c1, vt0.c1, t0.c13)) AND ((vt0.c1, vt0.c0, t0.c13)))))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('3v~{h)+') ORDER BY ((((rt0.c2)OR(rt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (('3v~{h)+') IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c2)OR(rt0.c0))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('3v~{h)+') ORDER BY ((((rt0.c2)OR(rt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (('3v~{h)+') IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c2)OR(rt0.c0))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('3v~{h)+') ORDER BY ((((rt0.c2)OR(rt0.c0))) IS TRUE) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0))>((rt0.c1))) COLLATE BINARY) ORDER BY (((~ (rt0.c3))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))>((rt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c3))) NOT NULL) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0))>((rt0.c1))) COLLATE BINARY) ORDER BY (((~ (rt0.c3))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))>((rt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c3))) NOT NULL) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0))>((rt0.c1))) COLLATE BINARY) ORDER BY (((~ (rt0.c3))) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (HEX(('-1333116031' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((HEX(('-1333116031' IN ()))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (HEX(('-1333116031' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((HEX(('-1333116031' IN ()))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (HEX(('-1333116031' IN ())));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON '-1679829436' COLLATE NOCASE COLLATE BINARY FULL OUTER JOIN t0 ON CAST(NULLIF(t0.c13, rt0.c1) AS INTEGER) WHERE (x'49bb');
SELECT SUM(count) FROM (SELECT ((x'49bb') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON '-1679829436' COLLATE NOCASE COLLATE BINARY FULL OUTER JOIN t0 ON CAST(NULLIF(t0.c13, rt0.c1) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON '-1679829436' COLLATE NOCASE COLLATE BINARY FULL OUTER JOIN t0 ON CAST(NULLIF(t0.c13, rt0.c1) AS INTEGER) WHERE (x'49bb');
SELECT SUM(count) FROM (SELECT ((x'49bb') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON '-1679829436' COLLATE NOCASE COLLATE BINARY FULL OUTER JOIN t0 ON CAST(NULLIF(t0.c13, rt0.c1) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON '-1679829436' COLLATE NOCASE COLLATE BINARY FULL OUTER JOIN t0 ON CAST(NULLIF(t0.c13, rt0.c1) AS INTEGER) WHERE (x'49bb');
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c3)<<(vt0.c1))))>(((NOT (rt0.c3))))) WHERE (CAST(((rt0.c2) NOTNULL) AS REAL)) ORDER BY json_array_length(((0.7934028654126101) BETWEEN (rt0.c1) AND (vt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOTNULL) AS REAL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c3)<<(vt0.c1))))>(((NOT (rt0.c3))))) ORDER BY json_array_length(((0.7934028654126101) BETWEEN (rt0.c1) AND (vt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1)))) ASC);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c3)<<(vt0.c1))))>(((NOT (rt0.c3))))) WHERE (CAST(((rt0.c2) NOTNULL) AS REAL)) ORDER BY json_array_length(((0.7934028654126101) BETWEEN (rt0.c1) AND (vt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOTNULL) AS REAL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c3)<<(vt0.c1))))>(((NOT (rt0.c3))))) ORDER BY json_array_length(((0.7934028654126101) BETWEEN (rt0.c1) AND (vt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((((t0.c13) NOT BETWEEN (rt0.c1) AND (vt0.c1)))) AND ((((rt0.c1) BETWEEN (x'') AND (''))))) LEFT OUTER JOIN rt0 ON ((((((((((vt0.c1) NOT NULL))AND(((vt0.c1)|(rt0.c0)))))OR((rt0.c3 IN ()))))OR(CAST(vt0.c1 AS BLOB))))OR(CAST(rt0.c1 AS INTEGER))) WHERE (((((((rt0.c2)GLOB(rt0.c3)))AND(((vt0.c1)|(rt0.c1)))))AND(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)GLOB(rt0.c3)))AND(((vt0.c1)|(rt0.c1)))))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((((t0.c13) NOT BETWEEN (rt0.c1) AND (vt0.c1)))) AND ((((rt0.c1) BETWEEN (x'') AND (''))))) LEFT OUTER JOIN rt0 ON ((((((((((vt0.c1) NOT NULL))AND(((vt0.c1)|(rt0.c0)))))OR((rt0.c3 IN ()))))OR(CAST(vt0.c1 AS BLOB))))OR(CAST(rt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((((t0.c13) NOT BETWEEN (rt0.c1) AND (vt0.c1)))) AND ((((rt0.c1) BETWEEN (x'') AND (''))))) LEFT OUTER JOIN rt0 ON ((((((((((vt0.c1) NOT NULL))AND(((vt0.c1)|(rt0.c0)))))OR((rt0.c3 IN ()))))OR(CAST(vt0.c1 AS BLOB))))OR(CAST(rt0.c1 AS INTEGER))) WHERE (((((((rt0.c2)GLOB(rt0.c3)))AND(((vt0.c1)|(rt0.c1)))))AND(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)GLOB(rt0.c3)))AND(((vt0.c1)|(rt0.c1)))))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((((t0.c13) NOT BETWEEN (rt0.c1) AND (vt0.c1)))) AND ((((rt0.c1) BETWEEN (x'') AND (''))))) LEFT OUTER JOIN rt0 ON ((((((((((vt0.c1) NOT NULL))AND(((vt0.c1)|(rt0.c0)))))OR((rt0.c3 IN ()))))OR(CAST(vt0.c1 AS BLOB))))OR(CAST(rt0.c1 AS INTEGER))));
SELECT * FROM vt0, rt0 WHERE (((((vt0.c1)<(vt0.c0))) NOT BETWEEN (rt0.c3) AND (LAST_INSERT_ROWID())));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<(vt0.c0))) NOT BETWEEN (rt0.c3) AND (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c1)<(vt0.c0))) NOT BETWEEN (rt0.c3) AND (LAST_INSERT_ROWID())));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<(vt0.c0))) NOT BETWEEN (rt0.c3) AND (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c1)<(vt0.c0))) NOT BETWEEN (rt0.c3) AND (LAST_INSERT_ROWID())));
SELECT ALL * FROM rt0 WHERE ((((('1186736884')!=(rt0.c2))) BETWEEN (rt0.c3) AND (x'e6ce')));
SELECT SUM(count) FROM (SELECT (((((('1186736884')!=(rt0.c2))) BETWEEN (rt0.c3) AND (x'e6ce'))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((('1186736884')!=(rt0.c2))) BETWEEN (rt0.c3) AND (x'e6ce')));
SELECT SUM(count) FROM (SELECT (((((('1186736884')!=(rt0.c2))) BETWEEN (rt0.c3) AND (x'e6ce'))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((('1186736884')!=(rt0.c2))) BETWEEN (rt0.c3) AND (x'e6ce')));
SELECT COUNT(*) FROM vt0, rt0 INDEXED BY i24 LEFT OUTER JOIN t0 ON vt0.c1 WHERE ((((t0.c13, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, SQLITE_SOURCE_ID(), 0.9408145428828718)) AND ((rt0.c1, ((rt0.c2) ISNULL), ((rt0.c0) IS FALSE))))) ORDER BY ((((rt0.c2)AND(((vt0.c1) IS FALSE))))OR(CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c13, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, SQLITE_SOURCE_ID(), 0.9408145428828718)) AND ((rt0.c1, ((rt0.c2) ISNULL), ((rt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, rt0 INDEXED BY i24 LEFT OUTER JOIN t0 ON vt0.c1 ORDER BY ((((rt0.c2)AND(((vt0.c1) IS FALSE))))OR(CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, rt0 INDEXED BY i24 LEFT OUTER JOIN t0 ON vt0.c1 WHERE ((((t0.c13, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, SQLITE_SOURCE_ID(), 0.9408145428828718)) AND ((rt0.c1, ((rt0.c2) ISNULL), ((rt0.c0) IS FALSE))))) ORDER BY ((((rt0.c2)AND(((vt0.c1) IS FALSE))))OR(CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c13, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, SQLITE_SOURCE_ID(), 0.9408145428828718)) AND ((rt0.c1, ((rt0.c2) ISNULL), ((rt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, rt0 INDEXED BY i24 LEFT OUTER JOIN t0 ON vt0.c1 ORDER BY ((((rt0.c2)AND(((vt0.c1) IS FALSE))))OR(CAST(rt0.c1 AS NUMERIC))));
SELECT ALL * FROM t0, vt0, rt0 WHERE ((- (rt0.c0 COLLATE RTRIM))) ORDER BY rt0.c1 ASC  NULLS FIRST, ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) ISNULL) DESC, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY rt0.c1 ASC  NULLS FIRST, ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) ISNULL) DESC, NULL DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((- (rt0.c0 COLLATE RTRIM))) ORDER BY rt0.c1 ASC  NULLS FIRST, ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) ISNULL) DESC, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY rt0.c1 ASC  NULLS FIRST, ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) ISNULL) DESC, NULL DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((- (rt0.c0 COLLATE RTRIM))) ORDER BY rt0.c1 ASC  NULLS FIRST, ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) ISNULL) DESC, NULL DESC  NULLS LAST;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((0.873563213779929) ISNULL))IS NOT(((0.7052030961045348) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (NOT ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))) WHERE (((((ABS(vt0.c1))OR(CAST(rt0.c0 AS INTEGER))))AND((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((ABS(vt0.c1))OR(CAST(rt0.c0 AS INTEGER))))AND((- (rt0.c3))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((0.873563213779929) ISNULL))IS NOT(((0.7052030961045348) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (NOT ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((0.873563213779929) ISNULL))IS NOT(((0.7052030961045348) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (NOT ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))) WHERE (((((ABS(vt0.c1))OR(CAST(rt0.c0 AS INTEGER))))AND((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((ABS(vt0.c1))OR(CAST(rt0.c0 AS INTEGER))))AND((- (rt0.c3))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((0.873563213779929) ISNULL))IS NOT(((0.7052030961045348) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (NOT ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((0.873563213779929) ISNULL))IS NOT(((0.7052030961045348) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (NOT ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))) WHERE (((((ABS(vt0.c1))OR(CAST(rt0.c0 AS INTEGER))))AND((- (rt0.c3)))));
SELECT * FROM rt0 WHERE ((- ((+ (rt0.c3))))) ORDER BY (((('301760840')<=(rt0.c3)))/(rt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (((('301760840')<=(rt0.c3)))/(rt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT * FROM rt0 WHERE ((- ((+ (rt0.c3))))) ORDER BY (((('301760840')<=(rt0.c3)))/(rt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (((('301760840')<=(rt0.c3)))/(rt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT * FROM rt0 WHERE ((- ((+ (rt0.c3))))) ORDER BY (((('301760840')<=(rt0.c3)))/(rt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT * FROM vt0, rt0 FULL OUTER JOIN t0 ON (((vt0.c0)||(t0.c13)) IN (1.21142456E9)) WHERE ((((((rt0.c2))<>((vt0.c1))))<<(((rt0.c2)<(rt0.c1))))) ORDER BY (((~ (rt0.c1))) NOT BETWEEN (vt0.c1) AND (rt0.c3 COLLATE BINARY))  NULLS LAST, CASE '-78448098'  WHEN ((rt0.c3) IS TRUE) THEN vt0.c1 COLLATE RTRIM ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<>((vt0.c1))))<<(((rt0.c2)<(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON (((vt0.c0)||(t0.c13)) IN (1.21142456E9)) ORDER BY (((~ (rt0.c1))) NOT BETWEEN (vt0.c1) AND (rt0.c3 COLLATE BINARY))  NULLS LAST, CASE '-78448098'  WHEN ((rt0.c3) IS TRUE) THEN vt0.c1 COLLATE RTRIM ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END END DESC);
SELECT * FROM vt0, rt0 FULL OUTER JOIN t0 ON (((vt0.c0)||(t0.c13)) IN (1.21142456E9)) WHERE ((((((rt0.c2))<>((vt0.c1))))<<(((rt0.c2)<(rt0.c1))))) ORDER BY (((~ (rt0.c1))) NOT BETWEEN (vt0.c1) AND (rt0.c3 COLLATE BINARY))  NULLS LAST, CASE '-78448098'  WHEN ((rt0.c3) IS TRUE) THEN vt0.c1 COLLATE RTRIM ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<>((vt0.c1))))<<(((rt0.c2)<(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON (((vt0.c0)||(t0.c13)) IN (1.21142456E9)) ORDER BY (((~ (rt0.c1))) NOT BETWEEN (vt0.c1) AND (rt0.c3 COLLATE BINARY))  NULLS LAST, CASE '-78448098'  WHEN ((rt0.c3) IS TRUE) THEN vt0.c1 COLLATE RTRIM ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END END DESC);
SELECT * FROM vt0, rt0 FULL OUTER JOIN t0 ON (((vt0.c0)||(t0.c13)) IN (1.21142456E9)) WHERE ((((((rt0.c2))<>((vt0.c1))))<<(((rt0.c2)<(rt0.c1))))) ORDER BY (((~ (rt0.c1))) NOT BETWEEN (vt0.c1) AND (rt0.c3 COLLATE BINARY))  NULLS LAST, CASE '-78448098'  WHEN ((rt0.c3) IS TRUE) THEN vt0.c1 COLLATE RTRIM ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END END DESC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)) THEN (vt0.c1 IN ()) END CROSS JOIN rt0 ON (((((((rt0.c3)) BETWEEN ((vt0.c1)) AND ((rt0.c2))))OR(((rt0.c1)&(rt0.c2)))))AND(((t0.c13) IS FALSE))) WHERE (((vt0.c0) ISNULL) COLLATE NOCASE) ORDER BY TRIM(DISTINCT (rt0.c2 IN ())) DESC  NULLS FIRST, UPPER(rt0.c0)  NULLS FIRST, (~ (((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)) THEN (vt0.c1 IN ()) END CROSS JOIN rt0 ON (((((((rt0.c3)) BETWEEN ((vt0.c1)) AND ((rt0.c2))))OR(((rt0.c1)&(rt0.c2)))))AND(((t0.c13) IS FALSE))) ORDER BY TRIM(DISTINCT (rt0.c2 IN ())) DESC  NULLS FIRST, UPPER(rt0.c0)  NULLS FIRST, (~ (((rt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)) THEN (vt0.c1 IN ()) END CROSS JOIN rt0 ON (((((((rt0.c3)) BETWEEN ((vt0.c1)) AND ((rt0.c2))))OR(((rt0.c1)&(rt0.c2)))))AND(((t0.c13) IS FALSE))) WHERE (((vt0.c0) ISNULL) COLLATE NOCASE) ORDER BY TRIM(DISTINCT (rt0.c2 IN ())) DESC  NULLS FIRST, UPPER(rt0.c0)  NULLS FIRST, (~ (((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)) THEN (vt0.c1 IN ()) END CROSS JOIN rt0 ON (((((((rt0.c3)) BETWEEN ((vt0.c1)) AND ((rt0.c2))))OR(((rt0.c1)&(rt0.c2)))))AND(((t0.c13) IS FALSE))) ORDER BY TRIM(DISTINCT (rt0.c2 IN ())) DESC  NULLS FIRST, UPPER(rt0.c0)  NULLS FIRST, (~ (((rt0.c0) IS FALSE))));
SELECT * FROM t0, vt0, rt0 WHERE (CASE WHEN (+ (rt0.c3)) THEN CAST(t0.c13 AS INTEGER) ELSE rt0.c0 END) ORDER BY CASE WHEN CASE rt0.c2  WHEN vt0.c1 THEN vt0.c0 END THEN rt0.c0 ELSE (rt0.c1 IN (t0.c13)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt0.c3)) THEN CAST(t0.c13 AS INTEGER) ELSE rt0.c0 END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN CASE rt0.c2  WHEN vt0.c1 THEN vt0.c0 END THEN rt0.c0 ELSE (rt0.c1 IN (t0.c13)) END ASC  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE (CASE WHEN (+ (rt0.c3)) THEN CAST(t0.c13 AS INTEGER) ELSE rt0.c0 END) ORDER BY CASE WHEN CASE rt0.c2  WHEN vt0.c1 THEN vt0.c0 END THEN rt0.c0 ELSE (rt0.c1 IN (t0.c13)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt0.c3)) THEN CAST(t0.c13 AS INTEGER) ELSE rt0.c0 END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN CASE rt0.c2  WHEN vt0.c1 THEN vt0.c0 END THEN rt0.c0 ELSE (rt0.c1 IN (t0.c13)) END ASC  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE (CASE WHEN (+ (rt0.c3)) THEN CAST(t0.c13 AS INTEGER) ELSE rt0.c0 END) ORDER BY CASE WHEN CASE rt0.c2  WHEN vt0.c1 THEN vt0.c0 END THEN rt0.c0 ELSE (rt0.c1 IN (t0.c13)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)<<(rt0.c3)))>(0.889942434712093)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(rt0.c3)))>(0.889942434712093))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)<<(rt0.c3)))>(0.889942434712093)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(rt0.c3)))>(0.889942434712093))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)<<(rt0.c3)))>(0.889942434712093)));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((0.05503688337595847)) BETWEEN (((~ (rt0.c1)))) AND (((~ (rt0.c3)))))) ORDER BY (((t0.c13 IN (rt0.c1, NULL))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (x''))) AND (((vt0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.05503688337595847)) BETWEEN (((~ (rt0.c1)))) AND (((~ (rt0.c3)))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((t0.c13 IN (rt0.c1, NULL))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (x''))) AND (((vt0.c1) IS FALSE)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((0.05503688337595847)) BETWEEN (((~ (rt0.c1)))) AND (((~ (rt0.c3)))))) ORDER BY (((t0.c13 IN (rt0.c1, NULL))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (x''))) AND (((vt0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.05503688337595847)) BETWEEN (((~ (rt0.c1)))) AND (((~ (rt0.c3)))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((t0.c13 IN (rt0.c1, NULL))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (x''))) AND (((vt0.c1) IS FALSE)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((0.05503688337595847)) BETWEEN (((~ (rt0.c1)))) AND (((~ (rt0.c3)))))) ORDER BY (((t0.c13 IN (rt0.c1, NULL))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (x''))) AND (((vt0.c1) IS FALSE)))  NULLS FIRST;
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((((((((CAST(vt0.c1 AS NUMERIC))OR(((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c1)))))OR((rt0.c0 IN ()))))OR(rt0.c3)))AND((NOT (vt0.c0)))) FULL OUTER JOIN vt0 ON (((rt0.c1, vt0.c1, rt0.c3)) BETWEEN ((x'', rt0.c1, ((((t0.c13)OR(rt0.c1)))AND(t0.c13)))) AND (((((0xffffffffa87de2bd)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), rt0.c3, ((vt0.c1) NOT BETWEEN (NULL) AND (rt0.c3))))) WHERE ((((t0.c13)AND('')) IN (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((t0.c13)AND('')) IN (rt0.c2))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((((CAST(vt0.c1 AS NUMERIC))OR(((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c1)))))OR((rt0.c0 IN ()))))OR(rt0.c3)))AND((NOT (vt0.c0)))) FULL OUTER JOIN vt0 ON (((rt0.c1, vt0.c1, rt0.c3)) BETWEEN ((x'', rt0.c1, ((((t0.c13)OR(rt0.c1)))AND(t0.c13)))) AND (((((0Xffffffffa87de2bd)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), rt0.c3, ((vt0.c1) NOT BETWEEN (NULL) AND (rt0.c3))))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((((((((CAST(vt0.c1 AS NUMERIC))OR(((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c1)))))OR((rt0.c0 IN ()))))OR(rt0.c3)))AND((NOT (vt0.c0)))) FULL OUTER JOIN vt0 ON (((rt0.c1, vt0.c1, rt0.c3)) BETWEEN ((x'', rt0.c1, ((((t0.c13)OR(rt0.c1)))AND(t0.c13)))) AND (((((0xffffffffa87de2bd)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), rt0.c3, ((vt0.c1) NOT BETWEEN (NULL) AND (rt0.c3))))) WHERE ((((t0.c13)AND('')) IN (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((t0.c13)AND('')) IN (rt0.c2))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((((CAST(vt0.c1 AS NUMERIC))OR(((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c1)))))OR((rt0.c0 IN ()))))OR(rt0.c3)))AND((NOT (vt0.c0)))) FULL OUTER JOIN vt0 ON (((rt0.c1, vt0.c1, rt0.c3)) BETWEEN ((x'', rt0.c1, ((((t0.c13)OR(rt0.c1)))AND(t0.c13)))) AND (((((0Xffffffffa87de2bd)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), rt0.c3, ((vt0.c1) NOT BETWEEN (NULL) AND (rt0.c3))))));
SELECT * FROM vt0, t0 WHERE (((((((t0.c13)OR(t0.c13)))OR(t0.c13)))<=(t0.c13 COLLATE BINARY))) ORDER BY (((('')OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)))OR(417571803 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c13)OR(t0.c13)))OR(t0.c13)))<=(t0.c13 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((('')OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)))OR(417571803 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((((((t0.c13)OR(t0.c13)))OR(t0.c13)))<=(t0.c13 COLLATE BINARY))) ORDER BY (((('')OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)))OR(417571803 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c13)OR(t0.c13)))OR(t0.c13)))<=(t0.c13 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((('')OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)))OR(417571803 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((((((t0.c13)OR(t0.c13)))OR(t0.c13)))<=(t0.c13 COLLATE BINARY))) ORDER BY (((('')OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)))OR(417571803 COLLATE RTRIM))  NULLS FIRST;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((rt0.c3)|(rt0.c3)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (~ (((vt0.c1)>(rt0.c2)))) WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)=(t0.c13)) THEN rt0.c0 COLLATE RTRIM WHEN UNICODE(rt0.c2) THEN ((rt0.c0)IS NOT(rt0.c0)) WHEN ((((t0.c13)OR(vt0.c0)))OR(t0.c13)) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) ELSE ((((((((rt0.c2)AND('-375424914')))AND(t0.c13)))AND(NULL)))OR(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0)=(t0.c13)) THEN rt0.c0 COLLATE RTRIM WHEN UNICODE(rt0.c2) THEN ((rt0.c0)IS NOT(rt0.c0)) WHEN ((((t0.c13)OR(vt0.c0)))OR(t0.c13)) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) ELSE ((((((((rt0.c2)AND('-375424914')))AND(t0.c13)))AND(NULL)))OR(rt0.c1)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((rt0.c3)|(rt0.c3)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (~ (((vt0.c1)>(rt0.c2)))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((rt0.c3)|(rt0.c3)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (~ (((vt0.c1)>(rt0.c2)))) WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)=(t0.c13)) THEN rt0.c0 COLLATE RTRIM WHEN UNICODE(rt0.c2) THEN ((rt0.c0)IS NOT(rt0.c0)) WHEN ((((t0.c13)OR(vt0.c0)))OR(t0.c13)) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) ELSE ((((((((rt0.c2)AND('-375424914')))AND(t0.c13)))AND(NULL)))OR(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0)=(t0.c13)) THEN rt0.c0 COLLATE RTRIM WHEN UNICODE(rt0.c2) THEN ((rt0.c0)IS NOT(rt0.c0)) WHEN ((((t0.c13)OR(vt0.c0)))OR(t0.c13)) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) ELSE ((((((((rt0.c2)AND('-375424914')))AND(t0.c13)))AND(NULL)))OR(rt0.c1)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((rt0.c3)|(rt0.c3)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (~ (((vt0.c1)>(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((('-947530471' IN (rt0.c0)))>>(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((('-947530471' IN (rt0.c0)))>>(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((('-947530471' IN (rt0.c0)))>>(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((('-947530471' IN (rt0.c0)))>>(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((('-947530471' IN (rt0.c0)))>>(((rt0.c2) ISNULL))));
SELECT ALL * FROM vt0 INDEXED BY i24, rt0, t0 WHERE (CASE WHEN ((t0.c13)*(vt0.c0)) THEN json_extract(rt0.c3, x'') END) ORDER BY CASE ((rt0.c2)<(vt0.c1))  WHEN (+ (vt0.c1)) THEN t0.c13 ELSE (+ (vt0.c1)) END ASC  NULLS FIRST, ((((rt0.c1)&(t0.c13)))>>((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((x'c7ee'))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c13)*(vt0.c0)) THEN json_extract(rt0.c3, x'') END) IS TRUE)  as count FROM vt0 INDEXED BY i24, rt0, t0 ORDER BY CASE ((rt0.c2)<(vt0.c1))  WHEN (+ (vt0.c1)) THEN t0.c13 ELSE (+ (vt0.c1)) END ASC  NULLS FIRST, ((((rt0.c1)&(t0.c13)))>>((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((x'c7ee'))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 INDEXED BY i24, rt0, t0 WHERE (CASE WHEN ((t0.c13)*(vt0.c0)) THEN json_extract(rt0.c3, x'') END) ORDER BY CASE ((rt0.c2)<(vt0.c1))  WHEN (+ (vt0.c1)) THEN t0.c13 ELSE (+ (vt0.c1)) END ASC  NULLS FIRST, ((((rt0.c1)&(t0.c13)))>>((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((x'c7ee'))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c13)*(vt0.c0)) THEN json_extract(rt0.c3, x'') END) IS TRUE)  as count FROM vt0 INDEXED BY i24, rt0, t0 ORDER BY CASE ((rt0.c2)<(vt0.c1))  WHEN (+ (vt0.c1)) THEN t0.c13 ELSE (+ (vt0.c1)) END ASC  NULLS FIRST, ((((rt0.c1)&(t0.c13)))>>((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((x'c7ee'))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0 COLLATE BINARY)))OR(((((vt0.c1)AND(vt0.c1)))AND(0.7969550300412516))))) ORDER BY (((vt0.c1) IS FALSE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0 COLLATE BINARY)))OR(((((vt0.c1)AND(vt0.c1)))AND(0.7969550300412516))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) IS FALSE) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0 COLLATE BINARY)))OR(((((vt0.c1)AND(vt0.c1)))AND(0.7969550300412516))))) ORDER BY (((vt0.c1) IS FALSE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0 COLLATE BINARY)))OR(((((vt0.c1)AND(vt0.c1)))AND(0.7969550300412516))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) IS FALSE) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0 COLLATE BINARY)))OR(((((vt0.c1)AND(vt0.c1)))AND(0.7969550300412516))))) ORDER BY (((vt0.c1) IS FALSE) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(((t0.c13)%(t0.c13)))) ORDER BY (((t0.c13 IN (t0.c13, t0.c13)))&((((t0.c13)) NOT BETWEEN ((t0.c13)) AND ((t0.c13))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((t0.c13)%(t0.c13)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c13 IN (t0.c13, t0.c13)))&((((t0.c13)) NOT BETWEEN ((t0.c13)) AND ((t0.c13))))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(((t0.c13)%(t0.c13)))) ORDER BY (((t0.c13 IN (t0.c13, t0.c13)))&((((t0.c13)) NOT BETWEEN ((t0.c13)) AND ((t0.c13))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((t0.c13)%(t0.c13)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c13 IN (t0.c13, t0.c13)))&((((t0.c13)) NOT BETWEEN ((t0.c13)) AND ((t0.c13))))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(((t0.c13)%(t0.c13)))) ORDER BY (((t0.c13 IN (t0.c13, t0.c13)))&((((t0.c13)) NOT BETWEEN ((t0.c13)) AND ((t0.c13))))) DESC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c3)) BETWEEN ((JULIANDAY(0.8108593732633799, rt0.c3, vt0.c1))) AND ((((vt0.c0) IS FALSE)))) WHERE (((((rt0.c3) NOTNULL)) NOT NULL)) ORDER BY (~ ((((rt0.c2))>((rt0.c3))))), CAST(((vt0.c1)/(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c3)) BETWEEN ((JULIANDAY(0.8108593732633799, rt0.c3, vt0.c1))) AND ((((vt0.c0) IS FALSE)))) ORDER BY (~ ((((rt0.c2))>((rt0.c3))))), CAST(((vt0.c1)/(vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c3)) BETWEEN ((JULIANDAY(0.8108593732633799, rt0.c3, vt0.c1))) AND ((((vt0.c0) IS FALSE)))) WHERE (((((rt0.c3) NOTNULL)) NOT NULL)) ORDER BY (~ ((((rt0.c2))>((rt0.c3))))), CAST(((vt0.c1)/(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c3)) BETWEEN ((JULIANDAY(0.8108593732633799, rt0.c3, vt0.c1))) AND ((((vt0.c0) IS FALSE)))) ORDER BY (~ ((((rt0.c2))>((rt0.c3))))), CAST(((vt0.c1)/(vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c3)) BETWEEN ((JULIANDAY(0.8108593732633799, rt0.c3, vt0.c1))) AND ((((vt0.c0) IS FALSE)))) WHERE (((((rt0.c3) NOTNULL)) NOT NULL)) ORDER BY (~ ((((rt0.c2))>((rt0.c3))))), CAST(((vt0.c1)/(vt0.c0)) AS REAL);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c13)||(MAX(t0.c13, t0.c13, t0.c13, t0.c13)))) ORDER BY ((((t0.c13) ISNULL)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c13)||(MAX(t0.c13, t0.c13, t0.c13, t0.c13)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c13) ISNULL)) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c13)||(MAX(t0.c13, t0.c13, t0.c13, t0.c13)))) ORDER BY ((((t0.c13) ISNULL)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c13)||(MAX(t0.c13, t0.c13, t0.c13, t0.c13)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c13) ISNULL)) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c13)||(MAX(t0.c13, t0.c13, t0.c13, t0.c13)))) ORDER BY ((((t0.c13) ISNULL)) NOTNULL)  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE ((NOT ((- (-7.8448098E7)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (-7.8448098E7))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((NOT ((- (-7.8448098E7)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (-7.8448098E7))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((NOT ((- (-7.8448098E7)))));
SELECT ALL * FROM t0 WHERE (((((((((t0.c13)OR(((((((((t0.c13)AND(t0.c13)))AND(t0.c13)))AND(t0.c13)))AND(t0.c13)))))OR(t0.c13)))OR(t0.c13 COLLATE NOCASE)))OR(((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13))))) ORDER BY (((CASE WHEN t0.c13 THEN t0.c13 ELSE t0.c13 END))=(((t0.c13 IN (t0.c13)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c13)OR(((((((((t0.c13)AND(t0.c13)))AND(t0.c13)))AND(t0.c13)))AND(t0.c13)))))OR(t0.c13)))OR(t0.c13 COLLATE NOCASE)))OR(((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13))))) IS TRUE)  as count FROM t0 ORDER BY (((CASE WHEN t0.c13 THEN t0.c13 ELSE t0.c13 END))=(((t0.c13 IN (t0.c13)))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((((((t0.c13)OR(((((((((t0.c13)AND(t0.c13)))AND(t0.c13)))AND(t0.c13)))AND(t0.c13)))))OR(t0.c13)))OR(t0.c13 COLLATE NOCASE)))OR(((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13))))) ORDER BY (((CASE WHEN t0.c13 THEN t0.c13 ELSE t0.c13 END))=(((t0.c13 IN (t0.c13)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c13)OR(((((((((t0.c13)AND(t0.c13)))AND(t0.c13)))AND(t0.c13)))AND(t0.c13)))))OR(t0.c13)))OR(t0.c13 COLLATE NOCASE)))OR(((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13))))) IS TRUE)  as count FROM t0 ORDER BY (((CASE WHEN t0.c13 THEN t0.c13 ELSE t0.c13 END))=(((t0.c13 IN (t0.c13)))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((((((t0.c13)OR(((((((((t0.c13)AND(t0.c13)))AND(t0.c13)))AND(t0.c13)))AND(t0.c13)))))OR(t0.c13)))OR(t0.c13 COLLATE NOCASE)))OR(((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13))))) ORDER BY (((CASE WHEN t0.c13 THEN t0.c13 ELSE t0.c13 END))=(((t0.c13 IN (t0.c13)))))  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE ((CAST(vt0.c1 AS TEXT) IN (((t0.c13) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS TEXT) IN (((t0.c13) NOT NULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((CAST(vt0.c1 AS TEXT) IN (((t0.c13) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS TEXT) IN (((t0.c13) NOT NULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((CAST(vt0.c1 AS TEXT) IN (((t0.c13) NOT NULL))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((NOT ((rt0.c1 IN (0.6833479999265025)))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c1 IN (0.6833479999265025))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((NOT ((rt0.c1 IN (0.6833479999265025)))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c1 IN (0.6833479999265025))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((NOT ((rt0.c1 IN (0.6833479999265025)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c1))))) ORDER BY UNLIKELY(DISTINCT ((vt0.c1)<=(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c0 IN (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT ((vt0.c1)<=(vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c1))))) ORDER BY UNLIKELY(DISTINCT ((vt0.c1)<=(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c0 IN (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT ((vt0.c1)<=(vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c1))))) ORDER BY UNLIKELY(DISTINCT ((vt0.c1)<=(vt0.c0))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) IS FALSE)) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS BLOB);
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS BLOB));
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) IS FALSE)) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS BLOB);
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS BLOB));
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) IS FALSE)) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS BLOB);
SELECT * FROM rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (NULL);
SELECT * FROM rt0, t0 WHERE (t0.c13);
SELECT SUM(count) FROM (SELECT ((t0.c13) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (t0.c13);
SELECT SUM(count) FROM (SELECT ((t0.c13) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (t0.c13);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY((((rt0.c2))<>((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((((rt0.c2))!=((rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY((((rt0.c2))<>((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((((rt0.c2))!=((rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY((((rt0.c2))<>((rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c1) ORDER BY (((((((((0.9118263187069104 IN ()))OR(((vt0.c0) ISNULL))))OR(((t0.c13)!=(vt0.c0)))))OR((+ (vt0.c0)))))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST, (((vt0.c0) ISNULL) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((((0.9118263187069104 IN ()))OR(((vt0.c0) ISNULL))))OR(((t0.c13)<>(vt0.c0)))))OR((+ (vt0.c0)))))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST, (((vt0.c0) ISNULL) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c1) ORDER BY (((((((((0.9118263187069104 IN ()))OR(((vt0.c0) ISNULL))))OR(((t0.c13)!=(vt0.c0)))))OR((+ (vt0.c0)))))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST, (((vt0.c0) ISNULL) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((((0.9118263187069104 IN ()))OR(((vt0.c0) ISNULL))))OR(((t0.c13)<>(vt0.c0)))))OR((+ (vt0.c0)))))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST, (((vt0.c0) ISNULL) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c1) ORDER BY (((((((((0.9118263187069104 IN ()))OR(((vt0.c0) ISNULL))))OR(((t0.c13)!=(vt0.c0)))))OR((+ (vt0.c0)))))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST, (((vt0.c0) ISNULL) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c0)IS(t0.c13)) THEN (((t0.c13)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) END) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)IS(t0.c13)) THEN (((t0.c13)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) END) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c0);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c0)IS(t0.c13)) THEN (((t0.c13)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) END) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)IS(t0.c13)) THEN (((t0.c13)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) END) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c0);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c0)IS(t0.c13)) THEN (((t0.c13)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) END) ORDER BY rt0.c0;
SELECT COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c1))>=((vt0.c0))))OR(highlight('18837995', t0.c13, rt0.c0, vt0.c0))))AND(((((vt0.c0)OR(rt0.c3)))AND(vt0.c0)))) WHERE ((((t0.c13 IN ()))IS(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((rt0.c3) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c13 IN ()))IS(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c1))>=((vt0.c0))))OR(highlight('18837995', t0.c13, rt0.c0, vt0.c0))))AND(((((vt0.c0)OR(rt0.c3)))AND(vt0.c0)))) ORDER BY ((rt0.c3) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c1))>=((vt0.c0))))OR(highlight('18837995', t0.c13, rt0.c0, vt0.c0))))AND(((((vt0.c0)OR(rt0.c3)))AND(vt0.c0)))) WHERE ((((t0.c13 IN ()))IS(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((rt0.c3) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c13 IN ()))IS(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c1))>=((vt0.c0))))OR(highlight('18837995', t0.c13, rt0.c0, vt0.c0))))AND(((((vt0.c0)OR(rt0.c3)))AND(vt0.c0)))) ORDER BY ((rt0.c3) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c1))>=((vt0.c0))))OR(highlight('18837995', t0.c13, rt0.c0, vt0.c0))))AND(((((vt0.c0)OR(rt0.c3)))AND(vt0.c0)))) WHERE ((((t0.c13 IN ()))IS(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((rt0.c3) ISNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON (((((t0.c13 IN (rt0.c0)))AND(((rt0.c1)GLOB(rt0.c1)))))OR(((rt0.c0) IS TRUE))) WHERE (rt0.c0) ORDER BY (((- (rt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 WHEN '1553416428' THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c1 END) AND (CASE WHEN rt0.c0 THEN 'fg' WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END)) ASC, ((((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN t0.c13 THEN vt0.c1 ELSE t0.c13 END)AND(((((vt0.c0)OR(rt0.c3)))AND(vt0.c1)))))OR(((((vt0.c1)OR(t0.c13)))AND(rt0.c1)))) ASC  NULLS FIRST, TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON (((((t0.c13 IN (rt0.c0)))AND(((rt0.c1)GLOB(rt0.c1)))))OR(((rt0.c0) IS TRUE))) ORDER BY (((- (rt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 WHEN '1553416428' THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c1 END) AND (CASE WHEN rt0.c0 THEN 'fg' WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END)) ASC, ((((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN t0.c13 THEN vt0.c1 ELSE t0.c13 END)AND(((((vt0.c0)OR(rt0.c3)))AND(vt0.c1)))))OR(((((vt0.c1)OR(t0.c13)))AND(rt0.c1)))) ASC  NULLS FIRST, TOTAL_CHANGES());
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON (((((t0.c13 IN (rt0.c0)))AND(((rt0.c1)GLOB(rt0.c1)))))OR(((rt0.c0) IS TRUE))) WHERE (rt0.c0) ORDER BY (((- (rt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 WHEN '1553416428' THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c1 END) AND (CASE WHEN rt0.c0 THEN 'fg' WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END)) ASC, ((((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN t0.c13 THEN vt0.c1 ELSE t0.c13 END)AND(((((vt0.c0)OR(rt0.c3)))AND(vt0.c1)))))OR(((((vt0.c1)OR(t0.c13)))AND(rt0.c1)))) ASC  NULLS FIRST, TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON (((((t0.c13 IN (rt0.c0)))AND(((rt0.c1)GLOB(rt0.c1)))))OR(((rt0.c0) IS TRUE))) ORDER BY (((- (rt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 WHEN '1553416428' THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c1 END) AND (CASE WHEN rt0.c0 THEN 'fg' WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END)) ASC, ((((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN t0.c13 THEN vt0.c1 ELSE t0.c13 END)AND(((((vt0.c0)OR(rt0.c3)))AND(vt0.c1)))))OR(((((vt0.c1)OR(t0.c13)))AND(rt0.c1)))) ASC  NULLS FIRST, TOTAL_CHANGES());
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON (((((t0.c13 IN (rt0.c0)))AND(((rt0.c1)GLOB(rt0.c1)))))OR(((rt0.c0) IS TRUE))) WHERE (rt0.c0) ORDER BY (((- (rt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 WHEN '1553416428' THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c1 END) AND (CASE WHEN rt0.c0 THEN 'fg' WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END)) ASC, ((((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN t0.c13 THEN vt0.c1 ELSE t0.c13 END)AND(((((vt0.c0)OR(rt0.c3)))AND(vt0.c1)))))OR(((((vt0.c1)OR(t0.c13)))AND(rt0.c1)))) ASC  NULLS FIRST, TOTAL_CHANGES();
SELECT * FROM vt0, rt0, t0 WHERE (((((LIKELY(vt0.c1))OR(rt0.c2 COLLATE BINARY)))AND(TYPEOF(DISTINCT rt0.c3)))) ORDER BY rtreenode((NOT (rt0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))  NULLS LAST, (((((t0.c13))=((rt0.c3)))) IS FALSE) ASC  NULLS FIRST, (((((t0.c13)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))&(vt0.c1 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(vt0.c1))OR(rt0.c2 COLLATE BINARY)))AND(TYPEOF(DISTINCT rt0.c3)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY rtreenode((NOT (rt0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))  NULLS LAST, (((((t0.c13))=((rt0.c3)))) IS FALSE) ASC  NULLS FIRST, (((((t0.c13)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))&(vt0.c1 COLLATE BINARY)) DESC  NULLS LAST);
SELECT * FROM vt0, rt0, t0 WHERE (((((LIKELY(vt0.c1))OR(rt0.c2 COLLATE BINARY)))AND(TYPEOF(DISTINCT rt0.c3)))) ORDER BY rtreenode((NOT (rt0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))  NULLS LAST, (((((t0.c13))=((rt0.c3)))) IS FALSE) ASC  NULLS FIRST, (((((t0.c13)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))&(vt0.c1 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(vt0.c1))OR(rt0.c2 COLLATE BINARY)))AND(TYPEOF(DISTINCT rt0.c3)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY rtreenode((NOT (rt0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))  NULLS LAST, (((((t0.c13))=((rt0.c3)))) IS FALSE) ASC  NULLS FIRST, (((((t0.c13)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))&(vt0.c1 COLLATE BINARY)) DESC  NULLS LAST);
SELECT * FROM vt0, rt0, t0 WHERE (((((LIKELY(vt0.c1))OR(rt0.c2 COLLATE BINARY)))AND(TYPEOF(DISTINCT rt0.c3)))) ORDER BY rtreenode((NOT (rt0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))  NULLS LAST, (((((t0.c13))=((rt0.c3)))) IS FALSE) ASC  NULLS FIRST, (((((t0.c13)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))&(vt0.c1 COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((t0.c13) NOT NULL)))) ORDER BY ((((((t0.c13)AND(t0.c13)))AND(t0.c13))) NOT BETWEEN (((t0.c13) ISNULL)) AND ((((t0.c13))>=((x''))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c13) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c13)AND(t0.c13)))AND(t0.c13))) NOT BETWEEN (((t0.c13) ISNULL)) AND ((((t0.c13))>=((x''))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((t0.c13) NOT NULL)))) ORDER BY ((((((t0.c13)AND(t0.c13)))AND(t0.c13))) NOT BETWEEN (((t0.c13) ISNULL)) AND ((((t0.c13))>=((x''))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c13) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c13)AND(t0.c13)))AND(t0.c13))) NOT BETWEEN (((t0.c13) ISNULL)) AND ((((t0.c13))>=((x''))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((t0.c13) NOT NULL)))) ORDER BY ((((((t0.c13)AND(t0.c13)))AND(t0.c13))) NOT BETWEEN (((t0.c13) ISNULL)) AND ((((t0.c13))>=((x''))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN vt0 ON t0.c13 WHERE ((((((rt0.c2) NOT BETWEEN (0.5281241105601865) AND (rt0.c2))))>((CAST(rt0.c2 AS NUMERIC))))) ORDER BY ((((((rt0.c0)<<(vt0.c1)))OR(NULL)))AND((NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOT BETWEEN (0.5281241105601865) AND (rt0.c2))))>((CAST(rt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON t0.c13 ORDER BY ((((((rt0.c0)<<(vt0.c1)))OR(NULL)))AND((NOT (rt0.c2)))));
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN vt0 ON t0.c13 WHERE ((((((rt0.c2) NOT BETWEEN (0.5281241105601865) AND (rt0.c2))))>((CAST(rt0.c2 AS NUMERIC))))) ORDER BY ((((((rt0.c0)<<(vt0.c1)))OR(NULL)))AND((NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOT BETWEEN (0.5281241105601865) AND (rt0.c2))))>((CAST(rt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON t0.c13 ORDER BY ((((((rt0.c0)<<(vt0.c1)))OR(NULL)))AND((NOT (rt0.c2)))));
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN vt0 ON t0.c13 WHERE ((((((rt0.c2) NOT BETWEEN (0.5281241105601865) AND (rt0.c2))))>((CAST(rt0.c2 AS NUMERIC))))) ORDER BY ((((((rt0.c0)<<(vt0.c1)))OR(NULL)))AND((NOT (rt0.c2))));
SELECT * FROM vt0 CROSS JOIN t0 ON ((rt0.c2 COLLATE NOCASE) NOTNULL) RIGHT OUTER JOIN rt0 ON json(CASE vt0.c0  WHEN vt0.c1 THEN rt0.c3 END) WHERE (vt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((rt0.c2 COLLATE NOCASE) NOTNULL) RIGHT OUTER JOIN rt0 ON json(CASE vt0.c0  WHEN vt0.c1 THEN rt0.c3 END));
SELECT * FROM vt0 CROSS JOIN t0 ON ((rt0.c2 COLLATE NOCASE) NOTNULL) RIGHT OUTER JOIN rt0 ON json(CASE vt0.c0  WHEN vt0.c1 THEN rt0.c3 END) WHERE (vt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((rt0.c2 COLLATE NOCASE) NOTNULL) RIGHT OUTER JOIN rt0 ON json(CASE vt0.c0  WHEN vt0.c1 THEN rt0.c3 END));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 NOT INDEXED WHERE ((~ ((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c13)))))) ORDER BY (((((vt0.c1, vt0.c1, vt0.c0))!=((vt0.c1, rt0.c3, rt0.c0)))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c13)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((vt0.c1, vt0.c1, vt0.c0))!=((vt0.c1, rt0.c3, rt0.c0)))) IS TRUE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 NOT INDEXED WHERE ((~ ((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c13)))))) ORDER BY (((((vt0.c1, vt0.c1, vt0.c0))!=((vt0.c1, rt0.c3, rt0.c0)))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c13)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((vt0.c1, vt0.c1, vt0.c0))!=((vt0.c1, rt0.c3, rt0.c0)))) IS TRUE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 NOT INDEXED WHERE ((~ ((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c13)))))) ORDER BY (((((vt0.c1, vt0.c1, vt0.c0))!=((vt0.c1, rt0.c3, rt0.c0)))) IS TRUE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((0.25762268099355645 IN (vt0.c1)) IN (COALESCE(vt0.c1, vt0.c1)))) ORDER BY x'5a61' DESC, (+ (((((((((vt0.c1)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND(''''))));
SELECT SUM(count) FROM (SELECT ALL ((((0.25762268099355645 IN (vt0.c1)) IN (COALESCE(vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'5a61' DESC, (+ (((((((((vt0.c1)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND('''')))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((0.25762268099355645 IN (vt0.c1)) IN (COALESCE(vt0.c1, vt0.c1)))) ORDER BY x'5a61' DESC, (+ (((((((((vt0.c1)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND(''''))));
SELECT SUM(count) FROM (SELECT ALL ((((0.25762268099355645 IN (vt0.c1)) IN (COALESCE(vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'5a61' DESC, (+ (((((((((vt0.c1)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND('''')))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((0.25762268099355645 IN (vt0.c1)) IN (COALESCE(vt0.c1, vt0.c1)))) ORDER BY x'5a61' DESC, (+ (((((((((vt0.c1)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND(''''))));
SELECT * FROM t0 CROSS JOIN rt0 ON (((x'') NOT BETWEEN ('1865260030') AND (vt0.c0)) IN ()) CROSS JOIN vt0 ON ((rt0.c2)*(rt0.c2)) COLLATE BINARY WHERE (((((rt0.c3)AND(rt0.c0)))<<(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND(rt0.c0)))<<(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((x'') NOT BETWEEN ('1865260030') AND (vt0.c0)) IN ()) CROSS JOIN vt0 ON ((rt0.c2)*(rt0.c2)) COLLATE BINARY);
SELECT * FROM t0 CROSS JOIN rt0 ON (((x'') NOT BETWEEN ('1865260030') AND (vt0.c0)) IN ()) CROSS JOIN vt0 ON ((rt0.c2)*(rt0.c2)) COLLATE BINARY WHERE (((((rt0.c3)AND(rt0.c0)))<<(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND(rt0.c0)))<<(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((x'') NOT BETWEEN ('1865260030') AND (vt0.c0)) IN ()) CROSS JOIN vt0 ON ((rt0.c2)*(rt0.c2)) COLLATE BINARY);
SELECT * FROM t0 CROSS JOIN rt0 ON (((x'') NOT BETWEEN ('1865260030') AND (vt0.c0)) IN ()) CROSS JOIN vt0 ON ((rt0.c2)*(rt0.c2)) COLLATE BINARY WHERE (((((rt0.c3)AND(rt0.c0)))<<(vt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0, rt0 WHERE ((- (SQLITE_COMPILEOPTION_USED(rt0.c0)))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (SQLITE_COMPILEOPTION_USED(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC);
SELECT * FROM vt0, rt0 WHERE ((- (SQLITE_COMPILEOPTION_USED(rt0.c0)))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (SQLITE_COMPILEOPTION_USED(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC);
SELECT * FROM vt0, rt0 WHERE ((- (SQLITE_COMPILEOPTION_USED(rt0.c0)))) ORDER BY rt0.c2 ASC;
SELECT * FROM vt0 WHERE ((((((((vt0.c0)OR(x'')))AND(vt0.c0))))<=(((0.01343367769233017 IN ()))))) ORDER BY ((CAST(vt0.c0 AS REAL))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)OR(x'')))AND(vt0.c0))))<=(((0.01343367769233017 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((((vt0.c0)OR(x'')))AND(vt0.c0))))<=(((0.01343367769233017 IN ()))))) ORDER BY ((CAST(vt0.c0 AS REAL))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)OR(x'')))AND(vt0.c0))))<=(((0.01343367769233017 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((((vt0.c0)OR(x'')))AND(vt0.c0))))<=(((0.01343367769233017 IN ()))))) ORDER BY ((CAST(vt0.c0 AS REAL))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON json_object(rt0.c0 COLLATE RTRIM, ((rt0.c3)>=(rt0.c2))) RIGHT OUTER JOIN rt0 ON ((CASE WHEN -1.60196088E8 THEN vt0.c1 WHEN t0.c13 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c1 END)&(((((((((t0.c13)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))AND(vt0.c0)))) WHERE (CASE WHEN rt0.c3 COLLATE NOCASE THEN 1472712461 ELSE (~ (t0.c13)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 COLLATE NOCASE THEN 1472712461 ELSE (~ (t0.c13)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON json_object(rt0.c0 COLLATE RTRIM, ((rt0.c3)>=(rt0.c2))) RIGHT OUTER JOIN rt0 ON ((CASE WHEN -1.60196088E8 THEN vt0.c1 WHEN t0.c13 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c1 END)&(((((((((t0.c13)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON json_object(rt0.c0 COLLATE RTRIM, ((rt0.c3)>=(rt0.c2))) RIGHT OUTER JOIN rt0 ON ((CASE WHEN -1.60196088E8 THEN vt0.c1 WHEN t0.c13 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c1 END)&(((((((((t0.c13)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))AND(vt0.c0)))) WHERE (CASE WHEN rt0.c3 COLLATE NOCASE THEN 1472712461 ELSE (~ (t0.c13)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 COLLATE NOCASE THEN 1472712461 ELSE (~ (t0.c13)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON json_object(rt0.c0 COLLATE RTRIM, ((rt0.c3)>=(rt0.c2))) RIGHT OUTER JOIN rt0 ON ((CASE WHEN -1.60196088E8 THEN vt0.c1 WHEN t0.c13 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c1 END)&(((((((((t0.c13)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))AND(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>=(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>=(NULL)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>=(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>=(NULL)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>=(NULL)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((NULL IN ()))) AND (((((rt0.c1))<>((rt0.c0))))))) ORDER BY '301760840';
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((NULL IN ()))) AND (((((rt0.c1))!=((rt0.c0))))))) IS TRUE)  as count FROM rt0 ORDER BY '301760840');
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((NULL IN ()))) AND (((((rt0.c1))<>((rt0.c0))))))) ORDER BY '301760840';
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((NULL IN ()))) AND (((((rt0.c1))!=((rt0.c0))))))) IS TRUE)  as count FROM rt0 ORDER BY '301760840');
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((NULL IN ()))) AND (((((rt0.c1))<>((rt0.c0))))))) ORDER BY '301760840';
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(NULL AS TEXT));
SELECT ALL * FROM t0 WHERE ((- ((((-898092473, t0.c13, '')) NOT BETWEEN ((t0.c13, t0.c13, t0.c13)) AND ((t0.c13, t0.c13, t0.c13))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((-898092473, t0.c13, '')) NOT BETWEEN ((t0.c13, t0.c13, t0.c13)) AND ((t0.c13, t0.c13, t0.c13)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- ((((-898092473, t0.c13, '')) NOT BETWEEN ((t0.c13, t0.c13, t0.c13)) AND ((t0.c13, t0.c13, t0.c13))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((-898092473, t0.c13, '')) NOT BETWEEN ((t0.c13, t0.c13, t0.c13)) AND ((t0.c13, t0.c13, t0.c13)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- ((((-898092473, t0.c13, '')) NOT BETWEEN ((t0.c13, t0.c13, t0.c13)) AND ((t0.c13, t0.c13, t0.c13))))));
SELECT ALL * FROM vt0, t0, rt0 WHERE ((NOT (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((NOT (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((NOT (CAST(vt0.c1 AS INTEGER))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3) BETWEEN ('-722912940') AND (rt0.c0)))OR(((('1607137208', 0Xffffffff948fadba, rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, 0.7780702345212418, rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c1))))))OR(rt0.c2 COLLATE RTRIM))) ORDER BY CAST(SQLITE_COMPILEOPTION_USED(rt0.c3) AS NUMERIC) ASC, (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)), x'f0d38e34', rt0.c1 COLLATE BINARY))<>((TYPEOF('.T'), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, rt0.c0 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) BETWEEN ('-722912940') AND (rt0.c0)))OR(((('1607137208', 0xffffffff948fadba, rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, 0.7780702345212418, rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c1))))))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY CAST(SQLITE_COMPILEOPTION_USED(rt0.c3) AS NUMERIC) ASC, (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)), x'f0d38e34', rt0.c1 COLLATE BINARY))<>((TYPEOF('.T'), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, rt0.c0 COLLATE BINARY))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3) BETWEEN ('-722912940') AND (rt0.c0)))OR(((('1607137208', 0Xffffffff948fadba, rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, 0.7780702345212418, rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c1))))))OR(rt0.c2 COLLATE RTRIM))) ORDER BY CAST(SQLITE_COMPILEOPTION_USED(rt0.c3) AS NUMERIC) ASC, (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)), x'f0d38e34', rt0.c1 COLLATE BINARY))<>((TYPEOF('.T'), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, rt0.c0 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) BETWEEN ('-722912940') AND (rt0.c0)))OR(((('1607137208', 0xffffffff948fadba, rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, 0.7780702345212418, rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c1))))))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY CAST(SQLITE_COMPILEOPTION_USED(rt0.c3) AS NUMERIC) ASC, (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)), x'f0d38e34', rt0.c1 COLLATE BINARY))<>((TYPEOF('.T'), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, rt0.c0 COLLATE BINARY))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3) BETWEEN ('-722912940') AND (rt0.c0)))OR(((('1607137208', 0Xffffffff948fadba, rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, 0.7780702345212418, rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c1))))))OR(rt0.c2 COLLATE RTRIM))) ORDER BY CAST(SQLITE_COMPILEOPTION_USED(rt0.c3) AS NUMERIC) ASC, (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)), x'f0d38e34', rt0.c1 COLLATE BINARY))<>((TYPEOF('.T'), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, rt0.c0 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((((((((rt0.c3)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))) WHERE (('NmL' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('NmL' IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((((((((rt0.c3)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((((((((rt0.c3)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))) WHERE (('NmL' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('NmL' IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((((((((rt0.c3)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((((((((rt0.c3)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))) WHERE (('NmL' IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1))<((vt0.c0))))<('H{^')));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<((vt0.c0))))<('H{^'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1))<((vt0.c0))))<('H{^')));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<((vt0.c0))))<('H{^'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1))<((vt0.c0))))<('H{^')));
SELECT COUNT(*) FROM rt0, t0 NOT INDEXED, vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY NULL DESC  NULLS FIRST, vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY NULL DESC  NULLS FIRST, vt0.c1 ASC);
SELECT COUNT(*) FROM rt0, t0 NOT INDEXED, vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY NULL DESC  NULLS FIRST, vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY NULL DESC  NULLS FIRST, vt0.c1 ASC);
SELECT COUNT(*) FROM rt0, t0 NOT INDEXED, vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY NULL DESC  NULLS FIRST, vt0.c1 ASC;
SELECT * FROM rt0 WHERE (((((rt0.c3) ISNULL)) BETWEEN ((+ (rt0.c0))) AND (0.25762268099355645 COLLATE BINARY))) ORDER BY CASE (- (rt0.c1))  WHEN (rt0.c2 IN (rt0.c1)) THEN ((((((((rt0.c2)OR(rt0.c0)))OR('1772790843')))OR(rt0.c1)))AND(rt0.c1)) WHEN load_extension(rt0.c1) THEN ((rt0.c2) IS TRUE) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN 0.7168827235851594 END DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) ISNULL)) BETWEEN ((+ (rt0.c0))) AND (0.25762268099355645 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY CASE (- (rt0.c1))  WHEN (rt0.c2 IN (rt0.c1)) THEN ((((((((rt0.c2)OR(rt0.c0)))OR('1772790843')))OR(rt0.c1)))AND(rt0.c1)) WHEN load_extension(rt0.c1) THEN ((rt0.c2) IS TRUE) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN 0.7168827235851594 END DESC);
SELECT * FROM rt0 WHERE (((((rt0.c3) ISNULL)) BETWEEN ((+ (rt0.c0))) AND (0.25762268099355645 COLLATE BINARY))) ORDER BY CASE (- (rt0.c1))  WHEN (rt0.c2 IN (rt0.c1)) THEN ((((((((rt0.c2)OR(rt0.c0)))OR('1772790843')))OR(rt0.c1)))AND(rt0.c1)) WHEN load_extension(rt0.c1) THEN ((rt0.c2) IS TRUE) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN 0.7168827235851594 END DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) ISNULL)) BETWEEN ((+ (rt0.c0))) AND (0.25762268099355645 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY CASE (- (rt0.c1))  WHEN (rt0.c2 IN (rt0.c1)) THEN ((((((((rt0.c2)OR(rt0.c0)))OR('1772790843')))OR(rt0.c1)))AND(rt0.c1)) WHEN load_extension(rt0.c1) THEN ((rt0.c2) IS TRUE) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN 0.7168827235851594 END DESC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((rt0.c1) BETWEEN (vt0.c1) AND (t0.c13)))OR(t0.c13)))AND((((rt0.c1, rt0.c1, t0.c13))!=((rt0.c0, rt0.c2, t0.c13)))))) ORDER BY ((((rt0.c2 COLLATE BINARY)OR(HEX(DISTINCT rt0.c0))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST, ((((x'')AND((('')&(rt0.c3)))))AND(((vt0.c0) ISNULL))) DESC, CAST(t0.c13 COLLATE BINARY AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (vt0.c1) AND (t0.c13)))OR(t0.c13)))AND((((rt0.c1, rt0.c1, t0.c13))<>((rt0.c0, rt0.c2, t0.c13)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((rt0.c2 COLLATE BINARY)OR(HEX(DISTINCT rt0.c0))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST, ((((x'')AND((('')&(rt0.c3)))))AND(((vt0.c0) ISNULL))) DESC, CAST(t0.c13 COLLATE BINARY AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((rt0.c1) BETWEEN (vt0.c1) AND (t0.c13)))OR(t0.c13)))AND((((rt0.c1, rt0.c1, t0.c13))!=((rt0.c0, rt0.c2, t0.c13)))))) ORDER BY ((((rt0.c2 COLLATE BINARY)OR(HEX(DISTINCT rt0.c0))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST, ((((x'')AND((('')&(rt0.c3)))))AND(((vt0.c0) ISNULL))) DESC, CAST(t0.c13 COLLATE BINARY AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (vt0.c1) AND (t0.c13)))OR(t0.c13)))AND((((rt0.c1, rt0.c1, t0.c13))<>((rt0.c0, rt0.c2, t0.c13)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((rt0.c2 COLLATE BINARY)OR(HEX(DISTINCT rt0.c0))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST, ((((x'')AND((('')&(rt0.c3)))))AND(((vt0.c0) ISNULL))) DESC, CAST(t0.c13 COLLATE BINARY AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((rt0.c1) BETWEEN (vt0.c1) AND (t0.c13)))OR(t0.c13)))AND((((rt0.c1, rt0.c1, t0.c13))!=((rt0.c0, rt0.c2, t0.c13)))))) ORDER BY ((((rt0.c2 COLLATE BINARY)OR(HEX(DISTINCT rt0.c0))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST, ((((x'')AND((('')&(rt0.c3)))))AND(((vt0.c0) ISNULL))) DESC, CAST(t0.c13 COLLATE BINARY AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0, t0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN 'ww8av*' WHEN vt0.c0 THEN NULL END)AND((rt0.c0 IN (0.6985592546963099, vt0.c0)))))AND((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN 'ww8av*' WHEN vt0.c0 THEN NULL END)AND((rt0.c0 IN (0.6985592546963099, vt0.c0)))))AND((- (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0, t0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN 'ww8av*' WHEN vt0.c0 THEN NULL END)AND((rt0.c0 IN (0.6985592546963099, vt0.c0)))))AND((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN 'ww8av*' WHEN vt0.c0 THEN NULL END)AND((rt0.c0 IN (0.6985592546963099, vt0.c0)))))AND((- (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0, t0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN 'ww8av*' WHEN vt0.c0 THEN NULL END)AND((rt0.c0 IN (0.6985592546963099, vt0.c0)))))AND((- (rt0.c3)))));
SELECT * FROM vt0, rt0, t0 WHERE ((+ (((((rt0.c1)AND(t0.c13)))OR(rt0.c1))))) ORDER BY (((NOT (rt0.c1))) BETWEEN (((vt0.c0) BETWEEN (rt0.c3) AND (vt0.c0))) AND (UPPER(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c1)AND(t0.c13)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((NOT (rt0.c1))) BETWEEN (((vt0.c0) BETWEEN (rt0.c3) AND (vt0.c0))) AND (UPPER(DISTINCT vt0.c0))) ASC);
SELECT * FROM vt0, rt0, t0 WHERE ((+ (((((rt0.c1)AND(t0.c13)))OR(rt0.c1))))) ORDER BY (((NOT (rt0.c1))) BETWEEN (((vt0.c0) BETWEEN (rt0.c3) AND (vt0.c0))) AND (UPPER(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c1)AND(t0.c13)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((NOT (rt0.c1))) BETWEEN (((vt0.c0) BETWEEN (rt0.c3) AND (vt0.c0))) AND (UPPER(DISTINCT vt0.c0))) ASC);
SELECT * FROM vt0, rt0, t0 WHERE ((+ (((((rt0.c1)AND(t0.c13)))OR(rt0.c1))))) ORDER BY (((NOT (rt0.c1))) BETWEEN (((vt0.c0) BETWEEN (rt0.c3) AND (vt0.c0))) AND (UPPER(DISTINCT vt0.c0))) ASC;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((CAST(rt0.c2 AS TEXT))+((('t8!/')>(rt0.c0)))) WHERE ('') ORDER BY TYPEOF(CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CAST(rt0.c2 AS TEXT))+((('t8!/')>(rt0.c0)))) ORDER BY TYPEOF(CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((CAST(rt0.c2 AS TEXT))+((('t8!/')>(rt0.c0)))) WHERE ('') ORDER BY TYPEOF(CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CAST(rt0.c2 AS TEXT))+((('t8!/')>(rt0.c0)))) ORDER BY TYPEOF(CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((CAST(rt0.c2 AS TEXT))+((('t8!/')>(rt0.c0)))) WHERE ('') ORDER BY TYPEOF(CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY))<=((((NULL)LIKE(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY))<=((((NULL)LIKE(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY))<=((((NULL)LIKE(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY))<=((((NULL)LIKE(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY))<=((((NULL)LIKE(rt0.c1))))));
SELECT * FROM t0 INNER JOIN vt0 ON (((t0.c13, vt0.c0, vt0.c1)) NOT BETWEEN (((((NULL))<=((NULL))), CAST(vt0.c1 AS NUMERIC), t0.c13 COLLATE RTRIM)) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0) IS FALSE), TYPEOF(DISTINCT vt0.c1)))) WHERE ((+ (((t0.c13) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c13) IS TRUE)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((t0.c13, vt0.c0, vt0.c1)) NOT BETWEEN (((((NULL))<=((NULL))), CAST(vt0.c1 AS NUMERIC), t0.c13 COLLATE RTRIM)) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0) IS FALSE), TYPEOF(DISTINCT vt0.c1)))));
SELECT * FROM t0 INNER JOIN vt0 ON (((t0.c13, vt0.c0, vt0.c1)) NOT BETWEEN (((((NULL))<=((NULL))), CAST(vt0.c1 AS NUMERIC), t0.c13 COLLATE RTRIM)) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0) IS FALSE), TYPEOF(DISTINCT vt0.c1)))) WHERE ((+ (((t0.c13) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c13) IS TRUE)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((t0.c13, vt0.c0, vt0.c1)) NOT BETWEEN (((((NULL))<=((NULL))), CAST(vt0.c1 AS NUMERIC), t0.c13 COLLATE RTRIM)) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0) IS FALSE), TYPEOF(DISTINCT vt0.c1)))));
SELECT * FROM t0 INNER JOIN vt0 ON (((t0.c13, vt0.c0, vt0.c1)) NOT BETWEEN (((((NULL))<=((NULL))), CAST(vt0.c1 AS NUMERIC), t0.c13 COLLATE RTRIM)) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0) IS FALSE), TYPEOF(DISTINCT vt0.c1)))) WHERE ((+ (((t0.c13) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)IS(vt0.c0))))<=((((vt0.c0)%('ucEyHi\b7'))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)IS(vt0.c0))))<=((((vt0.c0)%('ucEyHi\b7')))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)IS(vt0.c0))))<=((((vt0.c0)%('ucEyHi\b7'))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)IS(vt0.c0))))<=((((vt0.c0)%('ucEyHi\b7')))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)IS(vt0.c0))))<=((((vt0.c0)%('ucEyHi\b7'))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)<>((2021919289 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)!=((2021919289 IN (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)<>((2021919289 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)!=((2021919289 IN (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)<>((2021919289 IN (rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END))) ORDER BY ABS(DISTINCT ((rt0.c2) ISNULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0 ORDER BY ABS(DISTINCT ((rt0.c2) ISNULL)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END))) ORDER BY ABS(DISTINCT ((rt0.c2) ISNULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0 ORDER BY ABS(DISTINCT ((rt0.c2) ISNULL)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END))) ORDER BY ABS(DISTINCT ((rt0.c2) ISNULL)) ASC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c3, rt0.c0, NULL))<((rt0.c2, rt0.c3, '-1944034158')))))>(((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))))) ORDER BY (vt0.c0 IN (((rt0.c2) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3, rt0.c0, NULL))<((rt0.c2, rt0.c3, '-1944034158')))))>(((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (vt0.c0 IN (((rt0.c2) NOTNULL))) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c3, rt0.c0, NULL))<((rt0.c2, rt0.c3, '-1944034158')))))>(((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))))) ORDER BY (vt0.c0 IN (((rt0.c2) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3, rt0.c0, NULL))<((rt0.c2, rt0.c3, '-1944034158')))))>(((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (vt0.c0 IN (((rt0.c2) NOTNULL))) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c3, rt0.c0, NULL))<((rt0.c2, rt0.c3, '-1944034158')))))>(((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))))) ORDER BY (vt0.c0 IN (((rt0.c2) NOTNULL))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY CASE WHEN rt0.c0 THEN rt0.c3 COLLATE NOCASE ELSE (rt0.c2 IN ()) END, CASE ((rt0.c0) ISNULL)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN CAST('498920765' AS NUMERIC) WHEN CAST(rt0.c0 AS BLOB) THEN rt0.c0 WHEN (rt0.c0 IN ()) THEN '1186736884' ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END END;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 THEN rt0.c3 COLLATE NOCASE ELSE (rt0.c2 IN ()) END, CASE ((rt0.c0) ISNULL)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN CAST('498920765' AS NUMERIC) WHEN CAST(rt0.c0 AS BLOB) THEN rt0.c0 WHEN (rt0.c0 IN ()) THEN '1186736884' ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END END);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY CASE WHEN rt0.c0 THEN rt0.c3 COLLATE NOCASE ELSE (rt0.c2 IN ()) END, CASE ((rt0.c0) ISNULL)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN CAST('498920765' AS NUMERIC) WHEN CAST(rt0.c0 AS BLOB) THEN rt0.c0 WHEN (rt0.c0 IN ()) THEN '1186736884' ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END END;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 THEN rt0.c3 COLLATE NOCASE ELSE (rt0.c2 IN ()) END, CASE ((rt0.c0) ISNULL)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN CAST('498920765' AS NUMERIC) WHEN CAST(rt0.c0 AS BLOB) THEN rt0.c0 WHEN (rt0.c0 IN ()) THEN '1186736884' ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END END);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY CASE WHEN rt0.c0 THEN rt0.c3 COLLATE NOCASE ELSE (rt0.c2 IN ()) END, CASE ((rt0.c0) ISNULL)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN CAST('498920765' AS NUMERIC) WHEN CAST(rt0.c0 AS BLOB) THEN rt0.c0 WHEN (rt0.c0 IN ()) THEN '1186736884' ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END END;
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((NOT (0.9489673202392344)));
SELECT SUM(count) FROM (SELECT (((NOT (0.9489673202392344))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((NOT (0.9489673202392344)));
SELECT SUM(count) FROM (SELECT (((NOT (0.9489673202392344))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((NOT (0.9489673202392344)));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (~ (CASE WHEN vt0.c0 THEN t0.c13 ELSE t0.c13 END)) LEFT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (x'') AND ((~ (rt0.c0)))) WHERE (t0.c13 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t0.c13 COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (~ (CASE WHEN vt0.c0 THEN t0.c13 ELSE t0.c13 END)) LEFT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (x'') AND ((~ (rt0.c0)))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (~ (CASE WHEN vt0.c0 THEN t0.c13 ELSE t0.c13 END)) LEFT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (x'') AND ((~ (rt0.c0)))) WHERE (t0.c13 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t0.c13 COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (~ (CASE WHEN vt0.c0 THEN t0.c13 ELSE t0.c13 END)) LEFT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (x'') AND ((~ (rt0.c0)))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (~ (CASE WHEN vt0.c0 THEN t0.c13 ELSE t0.c13 END)) LEFT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (x'') AND ((~ (rt0.c0)))) WHERE (t0.c13 COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((((((((UNLIKELY(DISTINCT vt0.c1))OR(((vt0.c1) NOTNULL))))OR((NOT (vt0.c1)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)))OR((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((UNLIKELY(DISTINCT vt0.c1))OR(((vt0.c1) NOTNULL))))OR((NOT (vt0.c1)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((UNLIKELY(DISTINCT vt0.c1))OR(((vt0.c1) NOTNULL))))OR((NOT (vt0.c1)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)))OR((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((UNLIKELY(DISTINCT vt0.c1))OR(((vt0.c1) NOTNULL))))OR((NOT (vt0.c1)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((UNLIKELY(DISTINCT vt0.c1))OR(((vt0.c1) NOTNULL))))OR((NOT (vt0.c1)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)))OR((vt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON LTRIM(CAST(rt0.c1 AS REAL), ((rt0.c3)<=(rt0.c0))) WHERE ('+&d4') ORDER BY (((NOT (rt0.c2)))>=(((rt0.c1)IS NOT(t0.c13))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('+&d4') IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON LTRIM(CAST(rt0.c1 AS REAL), ((rt0.c3)<=(rt0.c0))) ORDER BY (((NOT (rt0.c2)))>=(((rt0.c1)IS NOT(t0.c13))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON LTRIM(CAST(rt0.c1 AS REAL), ((rt0.c3)<=(rt0.c0))) WHERE ('+&d4') ORDER BY (((NOT (rt0.c2)))>=(((rt0.c1)IS NOT(t0.c13))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('+&d4') IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON LTRIM(CAST(rt0.c1 AS REAL), ((rt0.c3)<=(rt0.c0))) ORDER BY (((NOT (rt0.c2)))>=(((rt0.c1)IS NOT(t0.c13))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON LTRIM(CAST(rt0.c1 AS REAL), ((rt0.c3)<=(rt0.c0))) WHERE ('+&d4') ORDER BY (((NOT (rt0.c2)))>=(((rt0.c1)IS NOT(t0.c13))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((~ (vt0.c1)))&((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1)))&((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((~ (vt0.c1)))&((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1)))&((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((~ (vt0.c1)))&((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c13) ORDER BY ((((vt0.c0)<(t0.c13)))<=(UPPER(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c13) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)<(t0.c13)))<=(UPPER(vt0.c0))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c13) ORDER BY ((((vt0.c0)<(t0.c13)))<=(UPPER(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c13) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)<(t0.c13)))<=(UPPER(vt0.c0))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c13) ORDER BY ((((vt0.c0)<(t0.c13)))<=(UPPER(vt0.c0))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE(CAST(vt0.c0 AS NUMERIC), CASE WHEN vt0.c1 THEN '-1632718484' ELSE vt0.c1 END, '7')) ORDER BY ((vt0.c1)AND((+ (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CAST(vt0.c0 AS NUMERIC), CASE WHEN vt0.c1 THEN '-1632718484' ELSE vt0.c1 END, '7')) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)AND((+ (vt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE(CAST(vt0.c0 AS NUMERIC), CASE WHEN vt0.c1 THEN '-1632718484' ELSE vt0.c1 END, '7')) ORDER BY ((vt0.c1)AND((+ (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CAST(vt0.c0 AS NUMERIC), CASE WHEN vt0.c1 THEN '-1632718484' ELSE vt0.c1 END, '7')) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)AND((+ (vt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE(CAST(vt0.c0 AS NUMERIC), CASE WHEN vt0.c1 THEN '-1632718484' ELSE vt0.c1 END, '7')) ORDER BY ((vt0.c1)AND((+ (vt0.c1)))) ASC;
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END AS TEXT) INNER JOIN rt0 ON (((- (x'49ce')))<(107098642)) WHERE (((((rt0.c0)<(rt0.c0)))/(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<(rt0.c0)))/(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END AS TEXT) INNER JOIN rt0 ON (((- (x'49ce')))<(107098642)));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END AS TEXT) INNER JOIN rt0 ON (((- (x'49ce')))<(107098642)) WHERE (((((rt0.c0)<(rt0.c0)))/(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<(rt0.c0)))/(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END AS TEXT) INNER JOIN rt0 ON (((- (x'49ce')))<(107098642)));
SELECT ALL * FROM rt0, t0, vt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (SQLITE_SOURCE_ID());
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c13)/(vt0.c1))) BETWEEN (((t0.c13)*(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13)/(vt0.c1))) BETWEEN (((t0.c13)*(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c13)/(vt0.c1))) BETWEEN (((t0.c13)*(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13)/(vt0.c1))) BETWEEN (((t0.c13)*(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c13)/(vt0.c1))) BETWEEN (((t0.c13)*(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((0.4393901661072741)AND(((t0.c13)*(t0.c13)))))AND((vt0.c1 IN ()))))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.4393901661072741)AND(((t0.c13)*(t0.c13)))))AND((vt0.c1 IN ()))))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((0.4393901661072741)AND(((t0.c13)*(t0.c13)))))AND((vt0.c1 IN ()))))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.4393901661072741)AND(((t0.c13)*(t0.c13)))))AND((vt0.c1 IN ()))))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((0.4393901661072741)AND(((t0.c13)*(t0.c13)))))AND((vt0.c1 IN ()))))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0) IS FALSE))));
SELECT ALL * FROM vt0 WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(NULL AS REAL));
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0) NOTNULL)))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)>((+ (NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)>((+ (NULL)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0) NOTNULL)))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)>((+ (NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)>((+ (NULL)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0) NOTNULL)))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)>((+ (NULL)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON 0.05070175816674172 WHERE (((((rt0.c2)>=(rt0.c3))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=(rt0.c3))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON 0.05070175816674172);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON 0.05070175816674172 WHERE (((((rt0.c2)>=(rt0.c3))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=(rt0.c3))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON 0.05070175816674172);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON 0.05070175816674172 WHERE (((((rt0.c2)>=(rt0.c3))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND ((rt0.c0 IN ()))));
SELECT ALL * FROM rt0, t0, vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN CAST(rt0.c1 AS INTEGER) THEN ((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE 0.5167923028579348 END) ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN (NOT (NULL)) THEN ((rt0.c0) NOTNULL) WHEN ((rt0.c2)|(rt0.c2)) THEN (vt0.c1 IN ()) WHEN ((vt0.c1)||(rt0.c1)) THEN ((((0.7617472508294291)OR('-1290761260')))AND(NULL)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS BLOB)  WHEN CAST(rt0.c1 AS INTEGER) THEN ((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE 0.5167923028579348 END) IS TRUE)  as count FROM rt0, t0, vt0 NOT INDEXED ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN (NOT (NULL)) THEN ((rt0.c0) NOTNULL) WHEN ((rt0.c2)|(rt0.c2)) THEN (vt0.c1 IN ()) WHEN ((vt0.c1)||(rt0.c1)) THEN ((((0.7617472508294291)OR('-1290761260')))AND(NULL)) END ASC);
SELECT ALL * FROM rt0, t0, vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN CAST(rt0.c1 AS INTEGER) THEN ((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE 0.5167923028579348 END) ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN (NOT (NULL)) THEN ((rt0.c0) NOTNULL) WHEN ((rt0.c2)|(rt0.c2)) THEN (vt0.c1 IN ()) WHEN ((vt0.c1)||(rt0.c1)) THEN ((((0.7617472508294291)OR('-1290761260')))AND(NULL)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS BLOB)  WHEN CAST(rt0.c1 AS INTEGER) THEN ((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE 0.5167923028579348 END) IS TRUE)  as count FROM rt0, t0, vt0 NOT INDEXED ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN (NOT (NULL)) THEN ((rt0.c0) NOTNULL) WHEN ((rt0.c2)|(rt0.c2)) THEN (vt0.c1 IN ()) WHEN ((vt0.c1)||(rt0.c1)) THEN ((((0.7617472508294291)OR('-1290761260')))AND(NULL)) END ASC);
SELECT ALL * FROM rt0, t0, vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN CAST(rt0.c1 AS INTEGER) THEN ((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE 0.5167923028579348 END) ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN (NOT (NULL)) THEN ((rt0.c0) NOTNULL) WHEN ((rt0.c2)|(rt0.c2)) THEN (vt0.c1 IN ()) WHEN ((vt0.c1)||(rt0.c1)) THEN ((((0.7617472508294291)OR('-1290761260')))AND(NULL)) END ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (UPPER(('' IN (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(('' IN (rt0.c1)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (UPPER(('' IN (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(('' IN (rt0.c1)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (UPPER(('' IN (rt0.c1))));
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (vt0.c1 COLLATE RTRIM) ORDER BY ((vt0.c1) BETWEEN (t0.c13) AND (vt0.c0)) COLLATE BINARY DESC, vt0.c1 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((vt0.c1) BETWEEN (t0.c13) AND (vt0.c0)) COLLATE BINARY DESC, vt0.c1 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (vt0.c1 COLLATE RTRIM) ORDER BY ((vt0.c1) BETWEEN (t0.c13) AND (vt0.c0)) COLLATE BINARY DESC, vt0.c1 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((vt0.c1) BETWEEN (t0.c13) AND (vt0.c0)) COLLATE BINARY DESC, vt0.c1 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (vt0.c1 COLLATE RTRIM) ORDER BY ((vt0.c1) BETWEEN (t0.c13) AND (vt0.c0)) COLLATE BINARY DESC, vt0.c1 COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE WHEN t0.c13 THEN ((t0.c13)!=(t0.c13)) END) ORDER BY ((((((((HEX(t0.c13))AND((t0.c13 IN (t0.c13, t0.c13)))))AND(CAST(t0.c13 AS REAL))))OR((((x''))<(('1211424560'))))))AND(((t0.c13) BETWEEN (t0.c13) AND (t0.c13))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c13 THEN ((t0.c13)!=(t0.c13)) END) IS TRUE)  as count FROM t0 ORDER BY ((((((((HEX(t0.c13))AND((t0.c13 IN (t0.c13, t0.c13)))))AND(CAST(t0.c13 AS REAL))))OR((((x''))<(('1211424560'))))))AND(((t0.c13) BETWEEN (t0.c13) AND (t0.c13))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE WHEN t0.c13 THEN ((t0.c13)!=(t0.c13)) END) ORDER BY ((((((((HEX(t0.c13))AND((t0.c13 IN (t0.c13, t0.c13)))))AND(CAST(t0.c13 AS REAL))))OR((((x''))<(('1211424560'))))))AND(((t0.c13) BETWEEN (t0.c13) AND (t0.c13))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c13 THEN ((t0.c13)!=(t0.c13)) END) IS TRUE)  as count FROM t0 ORDER BY ((((((((HEX(t0.c13))AND((t0.c13 IN (t0.c13, t0.c13)))))AND(CAST(t0.c13 AS REAL))))OR((((x''))<(('1211424560'))))))AND(((t0.c13) BETWEEN (t0.c13) AND (t0.c13))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE WHEN t0.c13 THEN ((t0.c13)!=(t0.c13)) END) ORDER BY ((((((((HEX(t0.c13))AND((t0.c13 IN (t0.c13, t0.c13)))))AND(CAST(t0.c13 AS REAL))))OR((((x''))<(('1211424560'))))))AND(((t0.c13) BETWEEN (t0.c13) AND (t0.c13))))  NULLS LAST;
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((vt0.c1))<>((json_array_length(t0.c13, vt0.c0))))) ORDER BY json_object(((rt0.c3) BETWEEN (rt0.c1) AND (vt0.c1)), ((((t0.c13)AND(rt0.c0)))AND(rt0.c1))), HEX(DISTINCT ((rt0.c3) IS FALSE)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1))!=((json_array_length(t0.c13, vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY json_object(((rt0.c3) BETWEEN (rt0.c1) AND (vt0.c1)), ((((t0.c13)AND(rt0.c0)))AND(rt0.c1))), HEX(DISTINCT ((rt0.c3) IS FALSE)) ASC);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((vt0.c1))<>((json_array_length(t0.c13, vt0.c0))))) ORDER BY json_object(((rt0.c3) BETWEEN (rt0.c1) AND (vt0.c1)), ((((t0.c13)AND(rt0.c0)))AND(rt0.c1))), HEX(DISTINCT ((rt0.c3) IS FALSE)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1))!=((json_array_length(t0.c13, vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY json_object(((rt0.c3) BETWEEN (rt0.c1) AND (vt0.c1)), ((((t0.c13)AND(rt0.c0)))AND(rt0.c1))), HEX(DISTINCT ((rt0.c3) IS FALSE)) ASC);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((vt0.c1))<>((json_array_length(t0.c13, vt0.c0))))) ORDER BY json_object(((rt0.c3) BETWEEN (rt0.c1) AND (vt0.c1)), ((((t0.c13)AND(rt0.c0)))AND(rt0.c1))), HEX(DISTINCT ((rt0.c3) IS FALSE)) ASC;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ('');
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'6613' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE x'' END) NOTNULL)) ORDER BY vt0.c1 COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'6613' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE x'' END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'6613' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE x'' END) NOTNULL)) ORDER BY vt0.c1 COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'6613' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE x'' END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'6613' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE x'' END) NOTNULL)) ORDER BY vt0.c1 COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (0.6833479999265025);
SELECT SUM(count) FROM (SELECT ((0.6833479999265025) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (0.6833479999265025);
SELECT SUM(count) FROM (SELECT ((0.6833479999265025) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (0.6833479999265025);
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN rt0 ON ((0.3331120271111673) NOTNULL) WHERE (((-9.18922875E8)>(CAST(t0.c13 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((-9.18922875E8)>(CAST(t0.c13 AS REAL)))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON ((0.3331120271111673) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN rt0 ON ((0.3331120271111673) NOTNULL) WHERE (((-9.18922875E8)>(CAST(t0.c13 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((-9.18922875E8)>(CAST(t0.c13 AS REAL)))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON ((0.3331120271111673) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN rt0 ON ((0.3331120271111673) NOTNULL) WHERE (((-9.18922875E8)>(CAST(t0.c13 AS REAL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LTRIM(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)), LIKELY(vt0.c1))) ORDER BY ((0x5b158b76)IS(((vt0.c0)<(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)), LIKELY(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((0x5b158b76)IS(((vt0.c0)<(vt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (LTRIM(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)), LIKELY(vt0.c1))) ORDER BY ((0x5b158b76)IS(((vt0.c0)<(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)), LIKELY(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((0x5b158b76)IS(((vt0.c0)<(vt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (LTRIM(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)), LIKELY(vt0.c1))) ORDER BY ((0x5b158b76)IS(((vt0.c0)<(vt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE COLLATE NOCASE) ORDER BY (((~ (vt0.c1))) ISNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c1))) ISNULL));
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE COLLATE NOCASE) ORDER BY (((~ (vt0.c1))) ISNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c1))) ISNULL));
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE COLLATE NOCASE) ORDER BY (((~ (vt0.c1))) ISNULL);
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS BLOB)) ORDER BY (- ((- (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (- ((- (rt0.c3)))));
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS BLOB)) ORDER BY (- ((- (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (- ((- (rt0.c3)))));
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS BLOB)) ORDER BY (- ((- (rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)AND(CAST(rt0.c0 AS REAL)))) ORDER BY ((rt0.c1)||(((NULL) IS FALSE))) DESC, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)AND(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)||(((NULL) IS FALSE))) DESC, rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)AND(CAST(rt0.c0 AS REAL)))) ORDER BY ((rt0.c1)||(((NULL) IS FALSE))) DESC, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)AND(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)||(((NULL) IS FALSE))) DESC, rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)AND(CAST(rt0.c0 AS REAL)))) ORDER BY ((rt0.c1)||(((NULL) IS FALSE))) DESC, rt0.c0;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (NOT (((rt0.c0) IS FALSE))) FULL OUTER JOIN rt0 ON (((~ (vt0.c1)))>((+ (rt0.c1)))) WHERE ((CASE WHEN x'' THEN rt0.c1 END IN (CASE 0Xffffffffced3f067  WHEN t0.c13 THEN vt0.c0 ELSE rt0.c2 END, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c13 WHEN vt0.c1 THEN rt0.c2 END))) ORDER BY (((- (vt0.c1))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN x'' THEN rt0.c1 END IN (CASE 0Xffffffffced3f067  WHEN t0.c13 THEN vt0.c0 ELSE rt0.c2 END, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c13 WHEN vt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (NOT (((rt0.c0) IS FALSE))) FULL OUTER JOIN rt0 ON (((~ (vt0.c1)))>((+ (rt0.c1)))) ORDER BY (((- (vt0.c1))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (NOT (((rt0.c0) IS FALSE))) FULL OUTER JOIN rt0 ON (((~ (vt0.c1)))>((+ (rt0.c1)))) WHERE ((CASE WHEN x'' THEN rt0.c1 END IN (CASE 0Xffffffffced3f067  WHEN t0.c13 THEN vt0.c0 ELSE rt0.c2 END, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c13 WHEN vt0.c1 THEN rt0.c2 END))) ORDER BY (((- (vt0.c1))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN x'' THEN rt0.c1 END IN (CASE 0Xffffffffced3f067  WHEN t0.c13 THEN vt0.c0 ELSE rt0.c2 END, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c13 WHEN vt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (NOT (((rt0.c0) IS FALSE))) FULL OUTER JOIN rt0 ON (((~ (vt0.c1)))>((+ (rt0.c1)))) ORDER BY (((- (vt0.c1))) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3 IN ()), (('1971421902')IS(rt0.c1)), ((0.689915047926203)AND(rt0.c0))))!=((((rt0.c2)>(rt0.c1)), ((rt0.c0)=(rt0.c0)), (('!b') IS TRUE))))) ORDER BY (- ((NOT (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 IN ()), (('1971421902')IS(rt0.c1)), ((0.689915047926203)AND(rt0.c0))))!=((((rt0.c2)>(rt0.c1)), ((rt0.c0)==(rt0.c0)), (('!b') IS TRUE))))) IS TRUE)  as count FROM rt0 ORDER BY (- ((NOT (rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3 IN ()), (('1971421902')IS(rt0.c1)), ((0.689915047926203)AND(rt0.c0))))!=((((rt0.c2)>(rt0.c1)), ((rt0.c0)=(rt0.c0)), (('!b') IS TRUE))))) ORDER BY (- ((NOT (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 IN ()), (('1971421902')IS(rt0.c1)), ((0.689915047926203)AND(rt0.c0))))!=((((rt0.c2)>(rt0.c1)), ((rt0.c0)==(rt0.c0)), (('!b') IS TRUE))))) IS TRUE)  as count FROM rt0 ORDER BY (- ((NOT (rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3 IN ()), (('1971421902')IS(rt0.c1)), ((0.689915047926203)AND(rt0.c0))))!=((((rt0.c2)>(rt0.c1)), ((rt0.c0)=(rt0.c0)), (('!b') IS TRUE))))) ORDER BY (- ((NOT (rt0.c2)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13))))) ORDER BY '1陕弜W*>'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13))))) IS TRUE)  as count FROM t0 ORDER BY '1陕弜W*>'  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13))))) ORDER BY '1陕弜W*>'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13))))) IS TRUE)  as count FROM t0 ORDER BY '1陕弜W*>'  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13))))) ORDER BY '1陕弜W*>'  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((t0.c13) IS FALSE) COLLATE BINARY WHERE (((((((vt0.c1) IS TRUE))AND(((rt0.c0) NOTNULL))))AND(t0.c13 COLLATE BINARY))) ORDER BY LTRIM('1618591107', '') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) IS TRUE))AND(((rt0.c0) NOTNULL))))AND(t0.c13 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((t0.c13) IS FALSE) COLLATE BINARY ORDER BY LTRIM('1618591107', '') ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((t0.c13) IS FALSE) COLLATE BINARY WHERE (((((((vt0.c1) IS TRUE))AND(((rt0.c0) NOTNULL))))AND(t0.c13 COLLATE BINARY))) ORDER BY LTRIM('1618591107', '') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) IS TRUE))AND(((rt0.c0) NOTNULL))))AND(t0.c13 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((t0.c13) IS FALSE) COLLATE BINARY ORDER BY LTRIM('1618591107', '') ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((t0.c13) IS FALSE) COLLATE BINARY WHERE (((((((vt0.c1) IS TRUE))AND(((rt0.c0) NOTNULL))))AND(t0.c13 COLLATE BINARY))) ORDER BY LTRIM('1618591107', '') ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)%(vt0.c0)), ((vt0.c0) IS FALSE), vt0.c0)) AND ((((vt0.c0) NOTNULL), '201530897', ((vt0.c0)+(vt0.c1)))))) ORDER BY ('/e' IN ()) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)%(vt0.c0)), ((vt0.c0) IS FALSE), vt0.c0)) AND ((((vt0.c0) NOTNULL), '201530897', ((vt0.c0)+(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ('/e' IN ()) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)%(vt0.c0)), ((vt0.c0) IS FALSE), vt0.c0)) AND ((((vt0.c0) NOTNULL), '201530897', ((vt0.c0)+(vt0.c1)))))) ORDER BY ('/e' IN ()) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)%(vt0.c0)), ((vt0.c0) IS FALSE), vt0.c0)) AND ((((vt0.c0) NOTNULL), '201530897', ((vt0.c0)+(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ('/e' IN ()) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)%(vt0.c0)), ((vt0.c0) IS FALSE), vt0.c0)) AND ((((vt0.c0) NOTNULL), '201530897', ((vt0.c0)+(vt0.c1)))))) ORDER BY ('/e' IN ()) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM t0 INDEXED BY i24 WHERE ('!nzhK') ORDER BY (t0.c13 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (('!nzhK') IS TRUE)  as count FROM t0 INDEXED BY i24 ORDER BY (t0.c13 IN ()) ASC);
SELECT ALL * FROM t0 INDEXED BY i24 WHERE ('!nzhK') ORDER BY (t0.c13 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (('!nzhK') IS TRUE)  as count FROM t0 INDEXED BY i24 ORDER BY (t0.c13 IN ()) ASC);
SELECT * FROM t0 WHERE ((((((t0.c13))<>((t0.c13)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c13))<>((t0.c13)))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c13))<>((t0.c13)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c13))<>((t0.c13)))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c13))<>((t0.c13)))) NOTNULL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c1) IS TRUE)) ORDER BY ((((TRIM(DISTINCT t0.c13, vt0.c1))AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((TRIM(DISTINCT t0.c13, vt0.c1))AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(vt0.c0 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c1) IS TRUE)) ORDER BY ((((TRIM(DISTINCT t0.c13, vt0.c1))AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((TRIM(DISTINCT t0.c13, vt0.c1))AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(vt0.c0 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c1) IS TRUE)) ORDER BY ((((TRIM(DISTINCT t0.c13, vt0.c1))AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(vt0.c0 AS INTEGER))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)-(vt0.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (((x'')%(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)-(vt0.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (((x'')%(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)-(vt0.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (((x'')%(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)-(vt0.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (((x'')%(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)-(vt0.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (((x'')%(vt0.c1)))));
SELECT ALL * FROM t0, vt0, rt0 WHERE ((- ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((- ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((- ((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('	');
SELECT SUM(count) FROM (SELECT (('	') IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('	');
SELECT SUM(count) FROM (SELECT (('	') IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('	');
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c13 AS REAL))%(vt0.c1 COLLATE RTRIM)) INNER JOIN vt0 ON CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)) AS TEXT) WHERE (((((((rt0.c2)AND(vt0.c1)))OR(rt0.c3)))<(((rt0.c0) NOT BETWEEN (t0.c13) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(vt0.c1)))OR(rt0.c3)))<(((rt0.c0) NOT BETWEEN (t0.c13) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c13 AS REAL))%(vt0.c1 COLLATE RTRIM)) INNER JOIN vt0 ON CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)) AS TEXT));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c13 AS REAL))%(vt0.c1 COLLATE RTRIM)) INNER JOIN vt0 ON CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)) AS TEXT) WHERE (((((((rt0.c2)AND(vt0.c1)))OR(rt0.c3)))<(((rt0.c0) NOT BETWEEN (t0.c13) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(vt0.c1)))OR(rt0.c3)))<(((rt0.c0) NOT BETWEEN (t0.c13) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c13 AS REAL))%(vt0.c1 COLLATE RTRIM)) INNER JOIN vt0 ON CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((rt0.c3)AND(rt0.c1))) NOT BETWEEN (CAST(x'' AS REAL)) AND ((vt0.c0 IN ()))) WHERE ((NOT (((rt0.c0)*(vt0.c1))))) ORDER BY CAST(((rt0.c3)AND('N}g<譶G<u\n')) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)*(vt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((rt0.c3)AND(rt0.c1))) NOT BETWEEN (CAST(x'' AS REAL)) AND ((vt0.c0 IN ()))) ORDER BY CAST(((rt0.c3)AND('N}g<譶G<u\n')) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((rt0.c3)AND(rt0.c1))) NOT BETWEEN (CAST(x'' AS REAL)) AND ((vt0.c0 IN ()))) WHERE ((NOT (((rt0.c0)*(vt0.c1))))) ORDER BY CAST(((rt0.c3)AND('N}g<譶G<u\n')) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)*(vt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((rt0.c3)AND(rt0.c1))) NOT BETWEEN (CAST(x'' AS REAL)) AND ((vt0.c0 IN ()))) ORDER BY CAST(((rt0.c3)AND('N}g<譶G<u\n')) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((rt0.c3)AND(rt0.c1))) NOT BETWEEN (CAST(x'' AS REAL)) AND ((vt0.c0 IN ()))) WHERE ((NOT (((rt0.c0)*(vt0.c1))))) ORDER BY CAST(((rt0.c3)AND('N}g<譶G<u\n')) AS BLOB) ASC;
SELECT ALL * FROM rt0 CROSS JOIN t0 ON ((CAST(rt0.c0 AS NUMERIC)) IS TRUE) LEFT OUTER JOIN vt0 ON NULL WHERE ((((~ (rt0.c0)))=(LIKELIHOOD('', 0.5256822082459801)))) ORDER BY ((IFNULL(rt0.c3, vt0.c1)) NOTNULL) DESC  NULLS FIRST, ((UNLIKELY(DISTINCT 0.21491279389515738))OR(((rt0.c1)||(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0)))==(LIKELIHOOD('', 0.5256822082459801)))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((CAST(rt0.c0 AS NUMERIC)) IS TRUE) LEFT OUTER JOIN vt0 ON NULL ORDER BY ((IFNULL(rt0.c3, vt0.c1)) NOTNULL) DESC  NULLS FIRST, ((UNLIKELY(DISTINCT 0.21491279389515738))OR(((rt0.c1)||(rt0.c2)))));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON ((CAST(rt0.c0 AS NUMERIC)) IS TRUE) LEFT OUTER JOIN vt0 ON NULL WHERE ((((~ (rt0.c0)))=(LIKELIHOOD('', 0.5256822082459801)))) ORDER BY ((IFNULL(rt0.c3, vt0.c1)) NOTNULL) DESC  NULLS FIRST, ((UNLIKELY(DISTINCT 0.21491279389515738))OR(((rt0.c1)||(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0)))==(LIKELIHOOD('', 0.5256822082459801)))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((CAST(rt0.c0 AS NUMERIC)) IS TRUE) LEFT OUTER JOIN vt0 ON NULL ORDER BY ((IFNULL(rt0.c3, vt0.c1)) NOTNULL) DESC  NULLS FIRST, ((UNLIKELY(DISTINCT 0.21491279389515738))OR(((rt0.c1)||(rt0.c2)))));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON ((CAST(rt0.c0 AS NUMERIC)) IS TRUE) LEFT OUTER JOIN vt0 ON NULL WHERE ((((~ (rt0.c0)))=(LIKELIHOOD('', 0.5256822082459801)))) ORDER BY ((IFNULL(rt0.c3, vt0.c1)) NOTNULL) DESC  NULLS FIRST, ((UNLIKELY(DISTINCT 0.21491279389515738))OR(((rt0.c1)||(rt0.c2))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((rt0.c1)>>(rt0.c3))))) ORDER BY (((((((((NOT (rt0.c3)))OR(CASE WHEN t0.c13 THEN rt0.c1 END)))OR((~ (rt0.c3)))))OR(LENGTH(rt0.c0))))AND(rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((rt0.c1)>>(rt0.c3))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((((((NOT (rt0.c3)))OR(CASE WHEN t0.c13 THEN rt0.c1 END)))OR((~ (rt0.c3)))))OR(LENGTH(rt0.c0))))AND(rt0.c2))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((rt0.c1)>>(rt0.c3))))) ORDER BY (((((((((NOT (rt0.c3)))OR(CASE WHEN t0.c13 THEN rt0.c1 END)))OR((~ (rt0.c3)))))OR(LENGTH(rt0.c0))))AND(rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((rt0.c1)>>(rt0.c3))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((((((NOT (rt0.c3)))OR(CASE WHEN t0.c13 THEN rt0.c1 END)))OR((~ (rt0.c3)))))OR(LENGTH(rt0.c0))))AND(rt0.c2))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((rt0.c1)>>(rt0.c3))))) ORDER BY (((((((((NOT (rt0.c3)))OR(CASE WHEN t0.c13 THEN rt0.c1 END)))OR((~ (rt0.c3)))))OR(LENGTH(rt0.c0))))AND(rt0.c2))  NULLS LAST;
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (rt0.c0) ORDER BY (-160289380 IN ()), (((vt0.c1)<(rt0.c2)) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, CAST(rt0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY (-160289380 IN ()), (((vt0.c1)<(rt0.c2)) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, CAST(rt0.c2 AS BLOB))));
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (rt0.c0) ORDER BY (-160289380 IN ()), (((vt0.c1)<(rt0.c2)) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, CAST(rt0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY (-160289380 IN ()), (((vt0.c1)<(rt0.c2)) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, CAST(rt0.c2 AS BLOB))));
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (rt0.c0) ORDER BY (-160289380 IN ()), (((vt0.c1)<(rt0.c2)) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, CAST(rt0.c2 AS BLOB)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS TEXT)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS TEXT)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c0 AS TEXT));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((((((((ABS(rt0.c0))AND(((rt0.c2)*(rt0.c2)))))AND(HEX(DISTINCT rt0.c1))))OR(((rt0.c1)&(rt0.c0)))))AND(((rt0.c2)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((ABS(rt0.c0))AND(((rt0.c2)*(rt0.c2)))))AND(HEX(DISTINCT rt0.c1))))OR(((rt0.c1)&(rt0.c0)))))AND(((rt0.c2)GLOB(rt0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((((((((ABS(rt0.c0))AND(((rt0.c2)*(rt0.c2)))))AND(HEX(DISTINCT rt0.c1))))OR(((rt0.c1)&(rt0.c0)))))AND(((rt0.c2)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((ABS(rt0.c0))AND(((rt0.c2)*(rt0.c2)))))AND(HEX(DISTINCT rt0.c1))))OR(((rt0.c1)&(rt0.c0)))))AND(((rt0.c2)GLOB(rt0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((((((((ABS(rt0.c0))AND(((rt0.c2)*(rt0.c2)))))AND(HEX(DISTINCT rt0.c1))))OR(((rt0.c1)&(rt0.c0)))))AND(((rt0.c2)GLOB(rt0.c1)))));
SELECT ALL * FROM rt0, vt0 WHERE ((((((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c1, 0x1dc47105))))AND((rt0.c3 IN ()))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c1, 0X1dc47105))))AND((rt0.c3 IN ()))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c1, 0x1dc47105))))AND((rt0.c3 IN ()))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c1, 0X1dc47105))))AND((rt0.c3 IN ()))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c1, 0x1dc47105))))AND((rt0.c3 IN ()))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS TRUE))&((('-353720695')|(rt0.c0))))) ORDER BY 0.4697184289460653  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))&((('-353720695')|(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY 0.4697184289460653  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS TRUE))&((('-353720695')|(rt0.c0))))) ORDER BY 0.4697184289460653  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))&((('-353720695')|(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY 0.4697184289460653  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS TRUE))&((('-353720695')|(rt0.c0))))) ORDER BY 0.4697184289460653  NULLS FIRST;
SELECT * FROM t0 WHERE (x'' COLLATE BINARY) ORDER BY CASE WHEN (- (t0.c13)) THEN (t0.c13 IN ()) END ASC, ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (- (t0.c13)) THEN (t0.c13 IN ()) END ASC, ''  NULLS FIRST);
SELECT * FROM t0 WHERE (x'' COLLATE BINARY) ORDER BY CASE WHEN (- (t0.c13)) THEN (t0.c13 IN ()) END ASC, ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (- (t0.c13)) THEN (t0.c13 IN ()) END ASC, ''  NULLS FIRST);
SELECT * FROM t0 WHERE (x'' COLLATE BINARY) ORDER BY CASE WHEN (- (t0.c13)) THEN (t0.c13 IN ()) END ASC, ''  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, t0 WHERE (x'') ORDER BY ((rt0.c3) NOT BETWEEN (t0.c13) AND (rt0.c3)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((rt0.c3) NOT BETWEEN (t0.c13) AND (rt0.c3)) COLLATE BINARY);
SELECT ALL * FROM vt0, rt0, t0 WHERE (x'') ORDER BY ((rt0.c3) NOT BETWEEN (t0.c13) AND (rt0.c3)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((rt0.c3) NOT BETWEEN (t0.c13) AND (rt0.c3)) COLLATE BINARY);
SELECT ALL * FROM vt0, rt0, t0 WHERE (x'') ORDER BY ((rt0.c3) NOT BETWEEN (t0.c13) AND (rt0.c3)) COLLATE BINARY;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1))<(('㧓')))))<>((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1))<(('㧓')))))<>((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1))<(('㧓')))))<>((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1))<(('㧓')))))<>((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1))<(('㧓')))))<>((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c13)))) BETWEEN (((t0.c13)AND(t0.c13))) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY TYPEOF(vt0.c0) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c13)))) BETWEEN (((t0.c13)AND(t0.c13))) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY TYPEOF(vt0.c0) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c13)))) BETWEEN (((t0.c13)AND(t0.c13))) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY TYPEOF(vt0.c0) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c13)))) BETWEEN (((t0.c13)AND(t0.c13))) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY TYPEOF(vt0.c0) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c13)))) BETWEEN (((t0.c13)AND(t0.c13))) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY TYPEOF(vt0.c0) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c13 AS NUMERIC)) NOT NULL)) ORDER BY ((rt0.c0 COLLATE RTRIM)+(((((NULL)AND(rt0.c2)))OR(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c13 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c0 COLLATE RTRIM)+(((((NULL)AND(rt0.c2)))OR(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c13 AS NUMERIC)) NOT NULL)) ORDER BY ((rt0.c0 COLLATE RTRIM)+(((((NULL)AND(rt0.c2)))OR(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c13 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c0 COLLATE RTRIM)+(((((NULL)AND(rt0.c2)))OR(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c13 AS NUMERIC)) NOT NULL)) ORDER BY ((rt0.c0 COLLATE RTRIM)+(((((NULL)AND(rt0.c2)))OR(rt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((UPPER(rt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((UPPER(rt0.c0)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((UPPER(rt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((UPPER(rt0.c0)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((UPPER(rt0.c0)) IS FALSE));
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN t0 WHERE (((LAST_INSERT_ROWID())<>(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY IFNULL(rt0.c1, x'981f');
SELECT SUM(count) FROM (SELECT ((((LAST_INSERT_ROWID())!=(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0 ORDER BY IFNULL(rt0.c1, x'981f'));
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN t0 WHERE (((LAST_INSERT_ROWID())<>(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY IFNULL(rt0.c1, x'981f');
SELECT SUM(count) FROM (SELECT ((((LAST_INSERT_ROWID())!=(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0 ORDER BY IFNULL(rt0.c1, x'981f'));
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN t0 WHERE (((LAST_INSERT_ROWID())<>(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY IFNULL(rt0.c1, x'981f');
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((((t0.c13)OR(rt0.c0)))OR('-1657948702'))) BETWEEN (CASE WHEN t0.c13 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END) AND ('-173579718')) WHERE (((TRIM(DISTINCT rt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1 IN ())) AND ((((vt0.c0))<((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1 IN ())) AND ((((vt0.c0))<((rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((((t0.c13)OR(rt0.c0)))OR('-1657948702'))) BETWEEN (CASE WHEN t0.c13 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END) AND ('-173579718')));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((((t0.c13)OR(rt0.c0)))OR('-1657948702'))) BETWEEN (CASE WHEN t0.c13 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END) AND ('-173579718')) WHERE (((TRIM(DISTINCT rt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1 IN ())) AND ((((vt0.c0))<((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1 IN ())) AND ((((vt0.c0))<((rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((((t0.c13)OR(rt0.c0)))OR('-1657948702'))) BETWEEN (CASE WHEN t0.c13 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END) AND ('-173579718')));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((((t0.c13)OR(rt0.c0)))OR('-1657948702'))) BETWEEN (CASE WHEN t0.c13 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END) AND ('-173579718')) WHERE (((TRIM(DISTINCT rt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1 IN ())) AND ((((vt0.c0))<((rt0.c3))))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)OR(vt0.c1)))OR(vt0.c1)))/(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) WHERE ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (PRINTF(NULL, rt0.c1, vt0.c1, vt0.c1, rt0.c3)))) ORDER BY ((rt0.c2 COLLATE NOCASE)>>(vt0.c0)), json_insert(vt0.c0 COLLATE NOCASE, DATE(vt0.c1, rt0.c0, rt0.c0, rt0.c3, rt0.c1), ((rt0.c2)&(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (PRINTF(NULL, rt0.c1, vt0.c1, vt0.c1, rt0.c3)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)OR(vt0.c1)))OR(vt0.c1)))/(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY ((rt0.c2 COLLATE NOCASE)>>(vt0.c0)), json_insert(vt0.c0 COLLATE NOCASE, DATE(vt0.c1, rt0.c0, rt0.c0, rt0.c3, rt0.c1), ((rt0.c2)&(rt0.c0))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)OR(vt0.c1)))OR(vt0.c1)))/(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) WHERE ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (PRINTF(NULL, rt0.c1, vt0.c1, vt0.c1, rt0.c3)))) ORDER BY ((rt0.c2 COLLATE NOCASE)>>(vt0.c0)), json_insert(vt0.c0 COLLATE NOCASE, DATE(vt0.c1, rt0.c0, rt0.c0, rt0.c3, rt0.c1), ((rt0.c2)&(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (PRINTF(NULL, rt0.c1, vt0.c1, vt0.c1, rt0.c3)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)OR(vt0.c1)))OR(vt0.c1)))/(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY ((rt0.c2 COLLATE NOCASE)>>(vt0.c0)), json_insert(vt0.c0 COLLATE NOCASE, DATE(vt0.c1, rt0.c0, rt0.c0, rt0.c3, rt0.c1), ((rt0.c2)&(rt0.c0))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT NULL)) ORDER BY (((rt0.c0))<((rt0.c3))) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST, (((rt0.c2)IS NOT(vt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((rt0.c0))<((rt0.c3))) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST, (((rt0.c2)IS NOT(vt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT NULL)) ORDER BY (((rt0.c0))<((rt0.c3))) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST, (((rt0.c2)IS NOT(vt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((rt0.c0))<((rt0.c3))) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST, (((rt0.c2)IS NOT(vt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT NULL)) ORDER BY (((rt0.c0))<((rt0.c3))) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST, (((rt0.c2)IS NOT(vt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (CAST(x'dcc5' COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'dcc5' COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(x'dcc5' COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'dcc5' COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(x'dcc5' COLLATE RTRIM AS BLOB));
SELECT ALL * FROM t0, rt0 NATURAL JOIN vt0 WHERE (((((((0.3925840533537225)AND(rt0.c1)))OR(NULL))) BETWEEN (((t0.c13) IS TRUE)) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.3925840533537225)AND(rt0.c1)))OR(NULL))) BETWEEN (((t0.c13) IS TRUE)) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0);
SELECT ALL * FROM t0, rt0 NATURAL JOIN vt0 WHERE (((((((0.3925840533537225)AND(rt0.c1)))OR(NULL))) BETWEEN (((t0.c13) IS TRUE)) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.3925840533537225)AND(rt0.c1)))OR(NULL))) BETWEEN (((t0.c13) IS TRUE)) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0);
SELECT ALL * FROM t0, rt0 NATURAL JOIN vt0 WHERE (((((((0.3925840533537225)AND(rt0.c1)))OR(NULL))) BETWEEN (((t0.c13) IS TRUE)) AND ((rt0.c0 IN ()))));
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((TRIM(t0.c13))AND(((vt0.c0)&(rt0.c0)))))AND(((((rt0.c1)OR(rt0.c0)))OR(t0.c13)))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(t0.c13))AND(((vt0.c0)&(rt0.c0)))))AND(((((rt0.c1)OR(rt0.c0)))OR(t0.c13))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((TRIM(t0.c13))AND(((vt0.c0)&(rt0.c0)))))AND(((((rt0.c1)OR(rt0.c0)))OR(t0.c13)))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(t0.c13))AND(((vt0.c0)&(rt0.c0)))))AND(((((rt0.c1)OR(rt0.c0)))OR(t0.c13))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((TRIM(t0.c13))AND(((vt0.c0)&(rt0.c0)))))AND(((((rt0.c1)OR(rt0.c0)))OR(t0.c13)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((vt0.c0))!=((rt0.c3))))) AND (('\r!')))) ORDER BY ((CAST(rt0.c3 AS INTEGER)) BETWEEN (vt0.c1 COLLATE NOCASE) AND ((rt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((((vt0.c0))!=((rt0.c3))))) AND (('\r!')))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c3 AS INTEGER)) BETWEEN (vt0.c1 COLLATE NOCASE) AND ((rt0.c1 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((vt0.c0))!=((rt0.c3))))) AND (('\r!')))) ORDER BY ((CAST(rt0.c3 AS INTEGER)) BETWEEN (vt0.c1 COLLATE NOCASE) AND ((rt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((((vt0.c0))!=((rt0.c3))))) AND (('\r!')))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c3 AS INTEGER)) BETWEEN (vt0.c1 COLLATE NOCASE) AND ((rt0.c1 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((vt0.c0))!=((rt0.c3))))) AND (('\r!')))) ORDER BY ((CAST(rt0.c3 AS INTEGER)) BETWEEN (vt0.c1 COLLATE NOCASE) AND ((rt0.c1 IN ()))) ASC;
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1) BETWEEN ((NULL IN ())) AND (((((((((vt0.c0)OR(vt0.c1)))OR('-1333116031')))AND(t0.c13)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN ((NULL IN ())) AND (((((((((vt0.c0)OR(vt0.c1)))OR('-1333116031')))AND(t0.c13)))OR(vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1) BETWEEN ((NULL IN ())) AND (((((((((vt0.c0)OR(vt0.c1)))OR('-1333116031')))AND(t0.c13)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN ((NULL IN ())) AND (((((((((vt0.c0)OR(vt0.c1)))OR('-1333116031')))AND(t0.c13)))OR(vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1) BETWEEN ((NULL IN ())) AND (((((((((vt0.c0)OR(vt0.c1)))OR('-1333116031')))AND(t0.c13)))OR(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((vt0.c1) NOTNULL))<=(t0.c13)) INNER JOIN t0 ON CAST(((((rt0.c2)AND(vt0.c0)))OR(x'')) AS TEXT) WHERE (((('-1252713064')) NOT BETWEEN ((-747477467)) AND ((rt0.c3)))) ORDER BY (('iXVZ''_')AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('-1252713064')) NOT BETWEEN ((-747477467)) AND ((rt0.c3)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((vt0.c1) NOTNULL))<=(t0.c13)) INNER JOIN t0 ON CAST(((((rt0.c2)AND(vt0.c0)))OR(x'')) AS TEXT) ORDER BY (('iXVZ''_')AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((vt0.c1) NOTNULL))<=(t0.c13)) INNER JOIN t0 ON CAST(((((rt0.c2)AND(vt0.c0)))OR(x'')) AS TEXT) WHERE (((('-1252713064')) NOT BETWEEN ((-747477467)) AND ((rt0.c3)))) ORDER BY (('iXVZ''_')AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('-1252713064')) NOT BETWEEN ((-747477467)) AND ((rt0.c3)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((vt0.c1) NOTNULL))<=(t0.c13)) INNER JOIN t0 ON CAST(((((rt0.c2)AND(vt0.c0)))OR(x'')) AS TEXT) ORDER BY (('iXVZ''_')AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((vt0.c1) NOTNULL))<=(t0.c13)) INNER JOIN t0 ON CAST(((((rt0.c2)AND(vt0.c0)))OR(x'')) AS TEXT) WHERE (((('-1252713064')) NOT BETWEEN ((-747477467)) AND ((rt0.c3)))) ORDER BY (('iXVZ''_')AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)/(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)/(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((x'')LIKE(((vt0.c0) NOT BETWEEN ('P2Xy,䎁z') AND (vt0.c1))))) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c1)<=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 'ir8' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))>((((vt0.c0) ISNULL), CAST(vt0.c0 AS INTEGER), (('g')=(vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'')LIKE(((vt0.c0) NOT BETWEEN ('P2Xy,䎁z') AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c1)<=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 'ir8' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))>((((vt0.c0) ISNULL), CAST(vt0.c0 AS INTEGER), (('g')==(vt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((x'')LIKE(((vt0.c0) NOT BETWEEN ('P2Xy,䎁z') AND (vt0.c1))))) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c1)<=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 'ir8' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))>((((vt0.c0) ISNULL), CAST(vt0.c0 AS INTEGER), (('g')=(vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'')LIKE(((vt0.c0) NOT BETWEEN ('P2Xy,䎁z') AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c1)<=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 'ir8' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))>((((vt0.c0) ISNULL), CAST(vt0.c0 AS INTEGER), (('g')==(vt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((x'')LIKE(((vt0.c0) NOT BETWEEN ('P2Xy,䎁z') AND (vt0.c1))))) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c1)<=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 'ir8' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))>((((vt0.c0) ISNULL), CAST(vt0.c0 AS INTEGER), (('g')=(vt0.c1)))))  NULLS LAST;
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((rt0.c0 IN ()))>>(rt0.c2))) ORDER BY (vt0.c1 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))>>(rt0.c2))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (vt0.c1 IN ()) COLLATE RTRIM ASC);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((rt0.c0 IN ()))>>(rt0.c2))) ORDER BY (vt0.c1 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))>>(rt0.c2))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (vt0.c1 IN ()) COLLATE RTRIM ASC);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((rt0.c0 IN ()))>>(rt0.c2))) ORDER BY (vt0.c1 IN ()) COLLATE RTRIM ASC;
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON (rt0.c2 IN ()) WHERE (((((((t0.c13)LIKE(rt0.c2)))AND(((rt0.c2)||(rt0.c3)))))AND(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY t0.c13 DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c13)LIKE(rt0.c2)))AND(((rt0.c2)||(rt0.c3)))))AND(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (rt0.c2 IN ()) ORDER BY t0.c13 DESC);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON (rt0.c2 IN ()) WHERE (((((((t0.c13)LIKE(rt0.c2)))AND(((rt0.c2)||(rt0.c3)))))AND(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY t0.c13 DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c13)LIKE(rt0.c2)))AND(((rt0.c2)||(rt0.c3)))))AND(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (rt0.c2 IN ()) ORDER BY t0.c13 DESC);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON (rt0.c2 IN ()) WHERE (((((((t0.c13)LIKE(rt0.c2)))AND(((rt0.c2)||(rt0.c3)))))AND(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY t0.c13 DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOTNULL)) ORDER BY LIKELIHOOD(vt0.c0 COLLATE NOCASE, 0.5095602678966756) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY LIKELIHOOD(vt0.c0 COLLATE NOCASE, 0.5095602678966756) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOTNULL)) ORDER BY LIKELIHOOD(vt0.c0 COLLATE NOCASE, 0.5095602678966756) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY LIKELIHOOD(vt0.c0 COLLATE NOCASE, 0.5095602678966756) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOTNULL)) ORDER BY LIKELIHOOD(vt0.c0 COLLATE NOCASE, 0.5095602678966756) DESC  NULLS FIRST;
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c1)>>(CAST(rt0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>>(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c1)>>(CAST(rt0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>>(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c1)>>(CAST(rt0.c3 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((('}6x*')+(t0.c13))) NOT BETWEEN ((vt0.c1 IN ())) AND (0.8191670390536442 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((('}6x*')+(t0.c13))) NOT BETWEEN ((vt0.c1 IN ())) AND (0.8191670390536442 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((('}6x*')+(t0.c13))) NOT BETWEEN ((vt0.c1 IN ())) AND (0.8191670390536442 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((('}6x*')+(t0.c13))) NOT BETWEEN ((vt0.c1 IN ())) AND (0.8191670390536442 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((('}6x*')+(t0.c13))) NOT BETWEEN ((vt0.c1 IN ())) AND (0.8191670390536442 COLLATE NOCASE)));
SELECT * FROM vt0, t0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((((((((CAST(vt0.c0 AS INTEGER))AND(((rt0.c1) NOT NULL))))OR(((vt0.c1) IS FALSE))))AND('0.873563213779929')))AND(((vt0.c0) IS FALSE))) INNER JOIN vt0 ON ((LOWER(DISTINCT rt0.c3))<=(((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2)))) WHERE ((((+ ('1298027789')))>>(vt0.c1))) ORDER BY -1.657948702E9 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ ('1298027789')))>>(vt0.c1))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((((((CAST(vt0.c0 AS INTEGER))AND(((rt0.c1) NOT NULL))))OR(((vt0.c1) IS FALSE))))AND('0.873563213779929')))AND(((vt0.c0) IS FALSE))) INNER JOIN vt0 ON ((LOWER(DISTINCT rt0.c3))<=(((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2)))) ORDER BY -1.657948702E9 DESC  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((((((((CAST(vt0.c0 AS INTEGER))AND(((rt0.c1) NOT NULL))))OR(((vt0.c1) IS FALSE))))AND('0.873563213779929')))AND(((vt0.c0) IS FALSE))) INNER JOIN vt0 ON ((LOWER(DISTINCT rt0.c3))<=(((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2)))) WHERE ((((+ ('1298027789')))>>(vt0.c1))) ORDER BY -1.657948702E9 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ ('1298027789')))>>(vt0.c1))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((((((CAST(vt0.c0 AS INTEGER))AND(((rt0.c1) NOT NULL))))OR(((vt0.c1) IS FALSE))))AND('0.873563213779929')))AND(((vt0.c0) IS FALSE))) INNER JOIN vt0 ON ((LOWER(DISTINCT rt0.c3))<=(((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2)))) ORDER BY -1.657948702E9 DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END)AND(((rt0.c3)|(rt0.c3)))))OR(NULL))) ORDER BY (+ (((x'')<<(NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END)AND(((rt0.c3)|(rt0.c3)))))OR(NULL))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((x'')<<(NULL)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END)AND(((rt0.c3)|(rt0.c3)))))OR(NULL))) ORDER BY (+ (((x'')<<(NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END)AND(((rt0.c3)|(rt0.c3)))))OR(NULL))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((x'')<<(NULL)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END)AND(((rt0.c3)|(rt0.c3)))))OR(NULL))) ORDER BY (+ (((x'')<<(NULL)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((CAST(rt0.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((CAST(rt0.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((CAST(rt0.c1 AS TEXT)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)%(rt0.c2)))+(CAST(rt0.c1 AS NUMERIC)))) ORDER BY CASE -8.46486497E8  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END THEN (rt0.c3 IN ()) ELSE ((rt0.c1)<=(rt0.c2)) END DESC, HEX(NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)%(rt0.c2)))+(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY CASE -8.46486497E8  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END THEN (rt0.c3 IN ()) ELSE ((rt0.c1)<=(rt0.c2)) END DESC, HEX(NULL) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)%(rt0.c2)))+(CAST(rt0.c1 AS NUMERIC)))) ORDER BY CASE -8.46486497E8  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END THEN (rt0.c3 IN ()) ELSE ((rt0.c1)<=(rt0.c2)) END DESC, HEX(NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)%(rt0.c2)))+(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY CASE -8.46486497E8  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END THEN (rt0.c3 IN ()) ELSE ((rt0.c1)<=(rt0.c2)) END DESC, HEX(NULL) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)%(rt0.c2)))+(CAST(rt0.c1 AS NUMERIC)))) ORDER BY CASE -8.46486497E8  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END THEN (rt0.c3 IN ()) ELSE ((rt0.c1)<=(rt0.c2)) END DESC, HEX(NULL) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(0.09925450616190135))) IS TRUE)) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END ASC, LIKELY((vt0.c0 IN (vt0.c0))), ((((vt0.c0) IS TRUE)) BETWEEN (((x'')%(vt0.c1))) AND (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(0.09925450616190135))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END ASC, LIKELY((vt0.c0 IN (vt0.c0))), ((((vt0.c0) IS TRUE)) BETWEEN (((x'')%(vt0.c1))) AND (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(0.09925450616190135))) IS TRUE)) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END ASC, LIKELY((vt0.c0 IN (vt0.c0))), ((((vt0.c0) IS TRUE)) BETWEEN (((x'')%(vt0.c1))) AND (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(0.09925450616190135))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END ASC, LIKELY((vt0.c0 IN (vt0.c0))), ((((vt0.c0) IS TRUE)) BETWEEN (((x'')%(vt0.c1))) AND (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(0.09925450616190135))) IS TRUE)) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END ASC, LIKELY((vt0.c0 IN (vt0.c0))), ((((vt0.c0) IS TRUE)) BETWEEN (((x'')%(vt0.c1))) AND (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))));
SELECT * FROM t0, vt0, rt0 WHERE (LIKE((((rt0.c3))>((rt0.c1))), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END, 'z'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE((((rt0.c3))>((rt0.c1))), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END, 'z')) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (LIKE((((rt0.c3))>((rt0.c1))), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END, 'z'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE((((rt0.c3))>((rt0.c1))), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END, 'z')) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (LIKE((((rt0.c3))>((rt0.c1))), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END, 'z'));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN (+ (rt0.c1)) END) ORDER BY ((((((((((((((((CAST(t0.c13 AS REAL))AND(((rt0.c3)IS(rt0.c3)))))OR(t0.c13)))AND(((rt0.c0) BETWEEN (t0.c13) AND (rt0.c3)))))OR(((((t0.c13)AND(rt0.c1)))OR(rt0.c1)))))OR((~ (rt0.c2)))))OR(LIKELY(rt0.c1))))AND((((('궺j')OR(rt0.c3)))AND(rt0.c1)))))OR((- (rt0.c0)))) DESC, (((((rt0.c0)>(rt0.c1))))!=((((0xffffffffa79d2831)==(rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 COLLATE RTRIM THEN (+ (rt0.c1)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((((((((((CAST(t0.c13 AS REAL))AND(((rt0.c3)IS(rt0.c3)))))OR(t0.c13)))AND(((rt0.c0) BETWEEN (t0.c13) AND (rt0.c3)))))OR(((((t0.c13)AND(rt0.c1)))OR(rt0.c1)))))OR((~ (rt0.c2)))))OR(LIKELY(rt0.c1))))AND((((('궺j')OR(rt0.c3)))AND(rt0.c1)))))OR((- (rt0.c0)))) DESC, (((((rt0.c0)>(rt0.c1))))!=((((0xffffffffa79d2831)=(rt0.c3))))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN (+ (rt0.c1)) END) ORDER BY ((((((((((((((((CAST(t0.c13 AS REAL))AND(((rt0.c3)IS(rt0.c3)))))OR(t0.c13)))AND(((rt0.c0) BETWEEN (t0.c13) AND (rt0.c3)))))OR(((((t0.c13)AND(rt0.c1)))OR(rt0.c1)))))OR((~ (rt0.c2)))))OR(LIKELY(rt0.c1))))AND((((('궺j')OR(rt0.c3)))AND(rt0.c1)))))OR((- (rt0.c0)))) DESC, (((((rt0.c0)>(rt0.c1))))!=((((0xffffffffa79d2831)==(rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 COLLATE RTRIM THEN (+ (rt0.c1)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((((((((((CAST(t0.c13 AS REAL))AND(((rt0.c3)IS(rt0.c3)))))OR(t0.c13)))AND(((rt0.c0) BETWEEN (t0.c13) AND (rt0.c3)))))OR(((((t0.c13)AND(rt0.c1)))OR(rt0.c1)))))OR((~ (rt0.c2)))))OR(LIKELY(rt0.c1))))AND((((('궺j')OR(rt0.c3)))AND(rt0.c1)))))OR((- (rt0.c0)))) DESC, (((((rt0.c0)>(rt0.c1))))!=((((0xffffffffa79d2831)=(rt0.c3))))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN (+ (rt0.c1)) END) ORDER BY ((((((((((((((((CAST(t0.c13 AS REAL))AND(((rt0.c3)IS(rt0.c3)))))OR(t0.c13)))AND(((rt0.c0) BETWEEN (t0.c13) AND (rt0.c3)))))OR(((((t0.c13)AND(rt0.c1)))OR(rt0.c1)))))OR((~ (rt0.c2)))))OR(LIKELY(rt0.c1))))AND((((('궺j')OR(rt0.c3)))AND(rt0.c1)))))OR((- (rt0.c0)))) DESC, (((((rt0.c0)>(rt0.c1))))!=((((0xffffffffa79d2831)==(rt0.c3))))) DESC;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (t0.c13) AND (rt0.c1)) THEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((x'd832'))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) NOT BETWEEN (t0.c13) AND (rt0.c1)) THEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((x'd832'))) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (t0.c13) AND (rt0.c1)) THEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((x'd832'))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) NOT BETWEEN (t0.c13) AND (rt0.c1)) THEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((x'd832'))) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (t0.c13) AND (rt0.c1)) THEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((x'd832'))) END);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((x'')) NOT BETWEEN (((0xffffffffe99bce53 IN ()))) AND (('-898092473'))));
SELECT SUM(count) FROM (SELECT (((((x'')) NOT BETWEEN (((0xffffffffe99bce53 IN ()))) AND (('-898092473')))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((x'')) NOT BETWEEN (((0xffffffffe99bce53 IN ()))) AND (('-898092473'))));
SELECT SUM(count) FROM (SELECT (((((x'')) NOT BETWEEN (((0xffffffffe99bce53 IN ()))) AND (('-898092473')))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((x'')) NOT BETWEEN (((0xffffffffe99bce53 IN ()))) AND (('-898092473'))));
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE t0.c13 COLLATE BINARY  WHEN ((rt0.c3)IS(rt0.c2)) THEN CAST(rt0.c0 AS TEXT) END) ORDER BY (((t0.c13 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE t0.c13 COLLATE BINARY  WHEN ((rt0.c3)IS(rt0.c2)) THEN CAST(rt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((t0.c13 IN ())) NOTNULL));
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE t0.c13 COLLATE BINARY  WHEN ((rt0.c3)IS(rt0.c2)) THEN CAST(rt0.c0 AS TEXT) END) ORDER BY (((t0.c13 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE t0.c13 COLLATE BINARY  WHEN ((rt0.c3)IS(rt0.c2)) THEN CAST(rt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((t0.c13 IN ())) NOTNULL));
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE t0.c13 COLLATE BINARY  WHEN ((rt0.c3)IS(rt0.c2)) THEN CAST(rt0.c0 AS TEXT) END) ORDER BY (((t0.c13 IN ())) NOTNULL);
SELECT * FROM vt0, t0 FULL OUTER JOIN rt0 ON (((- (vt0.c0)))<>(((0xffffffffd8783cfd) IS TRUE))) WHERE ('-579035551');
SELECT SUM(count) FROM (SELECT (('-579035551') IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON (((- (vt0.c0)))<>(((0Xffffffffd8783cfd) IS TRUE))));
SELECT * FROM vt0, t0 FULL OUTER JOIN rt0 ON (((- (vt0.c0)))<>(((0xffffffffd8783cfd) IS TRUE))) WHERE ('-579035551');
SELECT SUM(count) FROM (SELECT (('-579035551') IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON (((- (vt0.c0)))<>(((0Xffffffffd8783cfd) IS TRUE))));
SELECT * FROM vt0, t0 FULL OUTER JOIN rt0 ON (((- (vt0.c0)))<>(((0xffffffffd8783cfd) IS TRUE))) WHERE ('-579035551');
SELECT * FROM vt0, t0 WHERE (((((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c13 WHEN vt0.c1 THEN 0.9348376505998921 END)AND(((vt0.c1)+(vt0.c0)))))OR((vt0.c0 IN ()))))AND(vt0.c0)))OR((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c1)))))) ORDER BY NULL ASC  NULLS FIRST, t0.c13 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c13 WHEN vt0.c1 THEN 0.9348376505998921 END)AND(((vt0.c1)+(vt0.c0)))))OR((vt0.c0 IN ()))))AND(vt0.c0)))OR((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL ASC  NULLS FIRST, t0.c13 DESC);
SELECT * FROM vt0, t0 WHERE (((((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c13 WHEN vt0.c1 THEN 0.9348376505998921 END)AND(((vt0.c1)+(vt0.c0)))))OR((vt0.c0 IN ()))))AND(vt0.c0)))OR((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c1)))))) ORDER BY NULL ASC  NULLS FIRST, t0.c13 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c13 WHEN vt0.c1 THEN 0.9348376505998921 END)AND(((vt0.c1)+(vt0.c0)))))OR((vt0.c0 IN ()))))AND(vt0.c0)))OR((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL ASC  NULLS FIRST, t0.c13 DESC);
SELECT * FROM vt0, t0 WHERE (((((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c13 WHEN vt0.c1 THEN 0.9348376505998921 END)AND(((vt0.c1)+(vt0.c0)))))OR((vt0.c0 IN ()))))AND(vt0.c0)))OR((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c1)))))) ORDER BY NULL ASC  NULLS FIRST, t0.c13 DESC;
SELECT * FROM vt0, t0, rt0 WHERE (((((rt0.c3)&(rt0.c3)))*((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c1)))))) ORDER BY (((((vt0.c0))>((vt0.c1))))<=(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS FIRST, ((((rt0.c0))>=((t0.c13))) IN ()), (((((((((vt0.c0 IN (rt0.c0, rt0.c2)))OR((((rt0.c3, rt0.c1, t0.c13))<=((rt0.c3, vt0.c0, x'67df'))))))AND((((t0.c13, rt0.c0, rt0.c3, t0.c13, rt0.c1))!=((rt0.c2, rt0.c2, rt0.c0, vt0.c1, t0.c13))))))OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(CAST(rt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)&(rt0.c3)))*((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((vt0.c0))>((vt0.c1))))<=(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS FIRST, ((((rt0.c0))>=((t0.c13))) IN ()), (((((((((vt0.c0 IN (rt0.c0, rt0.c2)))OR((((rt0.c3, rt0.c1, t0.c13))<=((rt0.c3, vt0.c0, x'67df'))))))AND((((t0.c13, rt0.c0, rt0.c3, t0.c13, rt0.c1))!=((rt0.c2, rt0.c2, rt0.c0, vt0.c1, t0.c13))))))OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(CAST(rt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT * FROM vt0, t0, rt0 WHERE (((((rt0.c3)&(rt0.c3)))*((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c1)))))) ORDER BY (((((vt0.c0))>((vt0.c1))))<=(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS FIRST, ((((rt0.c0))>=((t0.c13))) IN ()), (((((((((vt0.c0 IN (rt0.c0, rt0.c2)))OR((((rt0.c3, rt0.c1, t0.c13))<=((rt0.c3, vt0.c0, x'67df'))))))AND((((t0.c13, rt0.c0, rt0.c3, t0.c13, rt0.c1))!=((rt0.c2, rt0.c2, rt0.c0, vt0.c1, t0.c13))))))OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(CAST(rt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)&(rt0.c3)))*((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((vt0.c0))>((vt0.c1))))<=(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS FIRST, ((((rt0.c0))>=((t0.c13))) IN ()), (((((((((vt0.c0 IN (rt0.c0, rt0.c2)))OR((((rt0.c3, rt0.c1, t0.c13))<=((rt0.c3, vt0.c0, x'67df'))))))AND((((t0.c13, rt0.c0, rt0.c3, t0.c13, rt0.c1))!=((rt0.c2, rt0.c2, rt0.c0, vt0.c1, t0.c13))))))OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(CAST(rt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT * FROM vt0, t0, rt0 WHERE (((((rt0.c3)&(rt0.c3)))*((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c1)))))) ORDER BY (((((vt0.c0))>((vt0.c1))))<=(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS FIRST, ((((rt0.c0))>=((t0.c13))) IN ()), (((((((((vt0.c0 IN (rt0.c0, rt0.c2)))OR((((rt0.c3, rt0.c1, t0.c13))<=((rt0.c3, vt0.c0, x'67df'))))))AND((((t0.c13, rt0.c0, rt0.c3, t0.c13, rt0.c1))!=((rt0.c2, rt0.c2, rt0.c0, vt0.c1, t0.c13))))))OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(CAST(rt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt0, t0 WHERE (((STRFTIME(vt0.c0, rt0.c1, vt0.c1))>(t0.c13))) ORDER BY ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (((rt0.c3)&(0.36975178798074093))) AND (CASE WHEN NULL THEN rt0.c3 END)) DESC, (NOT (((t0.c13) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(vt0.c0, rt0.c1, vt0.c1))>(t0.c13))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (((rt0.c3)&(0.36975178798074093))) AND (CASE WHEN NULL THEN rt0.c3 END)) DESC, (NOT (((t0.c13) NOTNULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt0, t0 WHERE (((STRFTIME(vt0.c0, rt0.c1, vt0.c1))>(t0.c13))) ORDER BY ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (((rt0.c3)&(0.36975178798074093))) AND (CASE WHEN NULL THEN rt0.c3 END)) DESC, (NOT (((t0.c13) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(vt0.c0, rt0.c1, vt0.c1))>(t0.c13))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (((rt0.c3)&(0.36975178798074093))) AND (CASE WHEN NULL THEN rt0.c3 END)) DESC, (NOT (((t0.c13) NOTNULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt0, t0 WHERE (((STRFTIME(vt0.c0, rt0.c1, vt0.c1))>(t0.c13))) ORDER BY ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (((rt0.c3)&(0.36975178798074093))) AND (CASE WHEN NULL THEN rt0.c3 END)) DESC, (NOT (((t0.c13) NOTNULL))) ASC;
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) IS TRUE))OR((NOT (rt0.c0))))) ORDER BY (((rt0.c3 IN ())) BETWEEN (COALESCE(258066047, rt0.c2)) AND (((rt0.c2)!=(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))OR((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3 IN ())) BETWEEN (COALESCE(258066047, rt0.c2)) AND (((rt0.c2)<>(NULL)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) IS TRUE))OR((NOT (rt0.c0))))) ORDER BY (((rt0.c3 IN ())) BETWEEN (COALESCE(258066047, rt0.c2)) AND (((rt0.c2)!=(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))OR((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3 IN ())) BETWEEN (COALESCE(258066047, rt0.c2)) AND (((rt0.c2)<>(NULL)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) IS TRUE))OR((NOT (rt0.c0))))) ORDER BY (((rt0.c3 IN ())) BETWEEN (COALESCE(258066047, rt0.c2)) AND (((rt0.c2)!=(NULL)))) DESC;
SELECT * FROM vt0, t0, rt0 WHERE ((+ ((+ (x'')))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (x''))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((+ ((+ (x'')))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (x''))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((+ ((+ (x'')))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON rt0.c3 RIGHT OUTER JOIN rt0 ON ((((((((CASE rt0.c0  WHEN t0.c13 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END)OR(((rt0.c2)|(rt0.c0)))))OR(rt0.c1 COLLATE BINARY)))AND(vt0.c1)))OR(CASE WHEN NULL THEN 'G' WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN t0.c13 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 END)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON rt0.c3 RIGHT OUTER JOIN rt0 ON ((((((((CASE rt0.c0  WHEN t0.c13 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END)OR(((rt0.c2)|(rt0.c0)))))OR(rt0.c1 COLLATE BINARY)))AND(vt0.c1)))OR(CASE WHEN NULL THEN 'G' WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN t0.c13 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON rt0.c3 RIGHT OUTER JOIN rt0 ON ((((((((CASE rt0.c0  WHEN t0.c13 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END)OR(((rt0.c2)|(rt0.c0)))))OR(rt0.c1 COLLATE BINARY)))AND(vt0.c1)))OR(CASE WHEN NULL THEN 'G' WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN t0.c13 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 END)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON rt0.c3 RIGHT OUTER JOIN rt0 ON ((((((((CASE rt0.c0  WHEN t0.c13 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END)OR(((rt0.c2)|(rt0.c0)))))OR(rt0.c1 COLLATE BINARY)))AND(vt0.c1)))OR(CASE WHEN NULL THEN 'G' WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN t0.c13 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 END)));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) IS TRUE))OR(vt0.c0)))OR(((vt0.c1)!=(vt0.c0))))) ORDER BY ((~ (vt0.c1)) IN (NULL)) ASC  NULLS LAST, (('417571803')/(COALESCE(DISTINCT vt0.c0, x''))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) IS TRUE))OR(vt0.c0)))OR(((vt0.c1)!=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c1)) IN (NULL)) ASC  NULLS LAST, (('417571803')/(COALESCE(DISTINCT vt0.c0, x''))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) IS TRUE))OR(vt0.c0)))OR(((vt0.c1)!=(vt0.c0))))) ORDER BY ((~ (vt0.c1)) IN (NULL)) ASC  NULLS LAST, (('417571803')/(COALESCE(DISTINCT vt0.c0, x''))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) IS TRUE))OR(vt0.c0)))OR(((vt0.c1)!=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c1)) IN (NULL)) ASC  NULLS LAST, (('417571803')/(COALESCE(DISTINCT vt0.c0, x''))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) IS TRUE))OR(vt0.c0)))OR(((vt0.c1)!=(vt0.c0))))) ORDER BY ((~ (vt0.c1)) IN (NULL)) ASC  NULLS LAST, (('417571803')/(COALESCE(DISTINCT vt0.c0, x''))) DESC;
SELECT * FROM rt0 WHERE (((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((NULL)==(rt0.c3))) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((NULL)=(rt0.c3))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((NULL)==(rt0.c3))) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((NULL)=(rt0.c3))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((NULL)==(rt0.c3))) AND (rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c13)GLOB(t0.c13)))) AND ((t0.c13 COLLATE RTRIM)))) ORDER BY (((((vt0.c1)>(t0.c13))))!=((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((t0.c13)GLOB(t0.c13)))) AND ((t0.c13 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((vt0.c1)>(t0.c13))))<>((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c13)GLOB(t0.c13)))) AND ((t0.c13 COLLATE RTRIM)))) ORDER BY (((((vt0.c1)>(t0.c13))))!=((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((t0.c13)GLOB(t0.c13)))) AND ((t0.c13 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((vt0.c1)>(t0.c13))))<>((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c13)GLOB(t0.c13)))) AND ((t0.c13 COLLATE RTRIM)))) ORDER BY (((((vt0.c1)>(t0.c13))))!=((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((- ((((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13)))))) ORDER BY (((+ (t0.c13))) IS FALSE), (((t0.c13 IN ()))OR(t0.c13))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13)))))) IS TRUE)  as count FROM t0 ORDER BY (((+ (t0.c13))) IS FALSE), (((t0.c13 IN ()))OR(t0.c13))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((- ((((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13)))))) ORDER BY (((+ (t0.c13))) IS FALSE), (((t0.c13 IN ()))OR(t0.c13))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13)))))) IS TRUE)  as count FROM t0 ORDER BY (((+ (t0.c13))) IS FALSE), (((t0.c13 IN ()))OR(t0.c13))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((- ((((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13)))))) ORDER BY (((+ (t0.c13))) IS FALSE), (((t0.c13 IN ()))OR(t0.c13))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN rt0 ON (((((((('-0.0')AND(((rt0.c3)>=(rt0.c0)))))AND(((((vt0.c1)AND(rt0.c0)))OR(rt0.c1)))))AND((- (vt0.c0)))))AND(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(t0.c13)))OR(vt0.c0)))) WHERE ((((- (rt0.c1)))+(((((((((rt0.c3)AND('WjF>撍')))OR('-616859219')))AND(rt0.c3)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))+(((((((((rt0.c3)AND('WjF>撍')))OR('-616859219')))AND(rt0.c3)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON (((((((('-0.0')AND(((rt0.c3)>=(rt0.c0)))))AND(((((vt0.c1)AND(rt0.c0)))OR(rt0.c1)))))AND((- (vt0.c0)))))AND(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(t0.c13)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN rt0 ON (((((((('-0.0')AND(((rt0.c3)>=(rt0.c0)))))AND(((((vt0.c1)AND(rt0.c0)))OR(rt0.c1)))))AND((- (vt0.c0)))))AND(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(t0.c13)))OR(vt0.c0)))) WHERE ((((- (rt0.c1)))+(((((((((rt0.c3)AND('WjF>撍')))OR('-616859219')))AND(rt0.c3)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))+(((((((((rt0.c3)AND('WjF>撍')))OR('-616859219')))AND(rt0.c3)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON (((((((('-0.0')AND(((rt0.c3)>=(rt0.c0)))))AND(((((vt0.c1)AND(rt0.c0)))OR(rt0.c1)))))AND((- (vt0.c0)))))AND(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(t0.c13)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN rt0 ON (((((((('-0.0')AND(((rt0.c3)>=(rt0.c0)))))AND(((((vt0.c1)AND(rt0.c0)))OR(rt0.c1)))))AND((- (vt0.c0)))))AND(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(t0.c13)))OR(vt0.c0)))) WHERE ((((- (rt0.c1)))+(((((((((rt0.c3)AND('WjF>撍')))OR('-616859219')))AND(rt0.c3)))AND(vt0.c1)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)<=(''))) NOT BETWEEN (NULL) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<=(''))) NOT BETWEEN (NULL) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)<=(''))) NOT BETWEEN (NULL) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<=(''))) NOT BETWEEN (NULL) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)<=(''))) NOT BETWEEN (NULL) AND (vt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c2)OR(vt0.c1)))OR(vt0.c1)) IN (CAST(rt0.c1 AS BLOB)))) ORDER BY ((LTRIM(rt0.c1, rt0.c3)) NOT BETWEEN (((rt0.c0)/(vt0.c0))) AND (((vt0.c1)-(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)OR(vt0.c1)))OR(vt0.c1)) IN (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((LTRIM(rt0.c1, rt0.c3)) NOT BETWEEN (((rt0.c0)/(vt0.c0))) AND (((vt0.c1)-(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c2)OR(vt0.c1)))OR(vt0.c1)) IN (CAST(rt0.c1 AS BLOB)))) ORDER BY ((LTRIM(rt0.c1, rt0.c3)) NOT BETWEEN (((rt0.c0)/(vt0.c0))) AND (((vt0.c1)-(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)OR(vt0.c1)))OR(vt0.c1)) IN (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((LTRIM(rt0.c1, rt0.c3)) NOT BETWEEN (((rt0.c0)/(vt0.c0))) AND (((vt0.c1)-(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c2)OR(vt0.c1)))OR(vt0.c1)) IN (CAST(rt0.c1 AS BLOB)))) ORDER BY ((LTRIM(rt0.c1, rt0.c3)) NOT BETWEEN (((rt0.c0)/(vt0.c0))) AND (((vt0.c1)-(rt0.c2)))) DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY ((((NULL)AND(CASE WHEN vt0.c0 THEN rt0.c0 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))) ASC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((NULL)AND(CASE WHEN vt0.c0 THEN rt0.c0 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))) ASC);
SELECT * FROM vt0, rt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY ((((NULL)AND(CASE WHEN vt0.c0 THEN rt0.c0 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))) ASC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((NULL)AND(CASE WHEN vt0.c0 THEN rt0.c0 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))) ASC);
SELECT * FROM vt0, rt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY ((((NULL)AND(CASE WHEN vt0.c0 THEN rt0.c0 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))) ASC;
SELECT * FROM vt0 WHERE ((CAST(vt0.c1 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c1 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c1 AS TEXT) IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) BETWEEN ((vt0.c1 IN ())) AND (0.9531531287263844))) ORDER BY ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY ASC, CAST((+ (vt0.c0)) AS TEXT)  NULLS LAST, vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC)) BETWEEN ((vt0.c1 IN ())) AND (0.9531531287263844))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY ASC, CAST((+ (vt0.c0)) AS TEXT)  NULLS LAST, vt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) BETWEEN ((vt0.c1 IN ())) AND (0.9531531287263844))) ORDER BY ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY ASC, CAST((+ (vt0.c0)) AS TEXT)  NULLS LAST, vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC)) BETWEEN ((vt0.c1 IN ())) AND (0.9531531287263844))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY ASC, CAST((+ (vt0.c0)) AS TEXT)  NULLS LAST, vt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) BETWEEN ((vt0.c1 IN ())) AND (0.9531531287263844))) ORDER BY ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY ASC, CAST((+ (vt0.c0)) AS TEXT)  NULLS LAST, vt0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS REAL)) ORDER BY (+ (((t0.c13) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (+ (((t0.c13) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS REAL)) ORDER BY (+ (((t0.c13) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (+ (((t0.c13) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS REAL)) ORDER BY (+ (((t0.c13) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) DESC;
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((rt0.c1)/(NULL))  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN rt0.c0 WHEN x'' THEN rt0.c3 COLLATE NOCASE WHEN ((rt0.c0)<<(t0.c13)) THEN (rt0.c3 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)/(NULL))  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN rt0.c0 WHEN x'' THEN rt0.c3 COLLATE NOCASE WHEN ((rt0.c0)<<(t0.c13)) THEN (rt0.c3 IN ()) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((rt0.c1)/(NULL))  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN rt0.c0 WHEN x'' THEN rt0.c3 COLLATE NOCASE WHEN ((rt0.c0)<<(t0.c13)) THEN (rt0.c3 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)/(NULL))  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN rt0.c0 WHEN x'' THEN rt0.c3 COLLATE NOCASE WHEN ((rt0.c0)<<(t0.c13)) THEN (rt0.c3 IN ()) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((rt0.c1)/(NULL))  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN rt0.c0 WHEN x'' THEN rt0.c3 COLLATE NOCASE WHEN ((rt0.c0)<<(t0.c13)) THEN (rt0.c3 IN ()) END);
SELECT ALL * FROM rt0, vt0 WHERE (UNLIKELY((((rt0.c3)) BETWEEN ((rt0.c1)) AND (('')))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((''))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (UNLIKELY((((rt0.c3)) BETWEEN ((rt0.c1)) AND (('')))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((''))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (UNLIKELY((((rt0.c3)) BETWEEN ((rt0.c1)) AND (('')))));
SELECT * FROM t0, rt0, vt0 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY (+ (((t0.c13) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (+ (((t0.c13) NOTNULL)))  NULLS FIRST);
SELECT * FROM t0, rt0, vt0 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY (+ (((t0.c13) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (+ (((t0.c13) NOTNULL)))  NULLS FIRST);
SELECT * FROM t0, rt0, vt0 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY (+ (((t0.c13) NOTNULL)))  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN x'' WHEN vt0.c1 THEN 'AM9' WHEN rt0.c0 THEN rt0.c0 END)*(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN x'' WHEN vt0.c1 THEN 'AM9' WHEN rt0.c0 THEN rt0.c0 END)*(rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN x'' WHEN vt0.c1 THEN 'AM9' WHEN rt0.c0 THEN rt0.c0 END)*(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN x'' WHEN vt0.c1 THEN 'AM9' WHEN rt0.c0 THEN rt0.c0 END)*(rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN x'' WHEN vt0.c1 THEN 'AM9' WHEN rt0.c0 THEN rt0.c0 END)*(rt0.c1)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(((rt0.c2)>(rt0.c0)))))OR(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(((rt0.c2)>(rt0.c0)))))OR(rt0.c3))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(((rt0.c2)>(rt0.c0)))))OR(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(((rt0.c2)>(rt0.c0)))))OR(rt0.c3))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(((rt0.c2)>(rt0.c0)))))OR(rt0.c3)));
SELECT * FROM rt0 WHERE (CASE COALESCE(rt0.c0, rt0.c2)  WHEN (- (rt0.c1)) THEN ((((0.5700362060890751)OR(rt0.c2)))OR(rt0.c0)) END) ORDER BY ((CAST(rt0.c3 AS INTEGER))|((~ (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE COALESCE(rt0.c0, rt0.c2)  WHEN (- (rt0.c1)) THEN ((((0.5700362060890751)OR(rt0.c2)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c3 AS INTEGER))|((~ (rt0.c2))))  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE COALESCE(rt0.c0, rt0.c2)  WHEN (- (rt0.c1)) THEN ((((0.5700362060890751)OR(rt0.c2)))OR(rt0.c0)) END) ORDER BY ((CAST(rt0.c3 AS INTEGER))|((~ (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE COALESCE(rt0.c0, rt0.c2)  WHEN (- (rt0.c1)) THEN ((((0.5700362060890751)OR(rt0.c2)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c3 AS INTEGER))|((~ (rt0.c2))))  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE COALESCE(rt0.c0, rt0.c2)  WHEN (- (rt0.c1)) THEN ((((0.5700362060890751)OR(rt0.c2)))OR(rt0.c0)) END) ORDER BY ((CAST(rt0.c3 AS INTEGER))|((~ (rt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((('-320912548') IS TRUE)) ORDER BY CASE GLOB(vt0.c1, rt0.c1)  WHEN (+ (rt0.c2)) THEN rt0.c3 END, (((0.08519485644625946 IN (vt0.c1))) BETWEEN (((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1))) AND (rt0.c3)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-320912548') IS TRUE)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE GLOB(vt0.c1, rt0.c1)  WHEN (+ (rt0.c2)) THEN rt0.c3 END, (((0.08519485644625946 IN (vt0.c1))) BETWEEN (((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1))) AND (rt0.c3)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((('-320912548') IS TRUE)) ORDER BY CASE GLOB(vt0.c1, rt0.c1)  WHEN (+ (rt0.c2)) THEN rt0.c3 END, (((0.08519485644625946 IN (vt0.c1))) BETWEEN (((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1))) AND (rt0.c3)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-320912548') IS TRUE)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE GLOB(vt0.c1, rt0.c1)  WHEN (+ (rt0.c2)) THEN rt0.c3 END, (((0.08519485644625946 IN (vt0.c1))) BETWEEN (((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1))) AND (rt0.c3)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((('-320912548') IS TRUE)) ORDER BY CASE GLOB(vt0.c1, rt0.c1)  WHEN (+ (rt0.c2)) THEN rt0.c3 END, (((0.08519485644625946 IN (vt0.c1))) BETWEEN (((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1))) AND (rt0.c3)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((t0.c13 IN ())) ORDER BY CASE WHEN ((t0.c13)>=(t0.c13)) THEN (t0.c13 IN ()) ELSE ((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)) END;
SELECT SUM(count) FROM (SELECT ALL (((t0.c13 IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c13)>=(t0.c13)) THEN (t0.c13 IN ()) ELSE ((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)) END);
SELECT ALL * FROM t0 WHERE ((t0.c13 IN ())) ORDER BY CASE WHEN ((t0.c13)>=(t0.c13)) THEN (t0.c13 IN ()) ELSE ((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)) END;
SELECT SUM(count) FROM (SELECT ALL (((t0.c13 IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c13)>=(t0.c13)) THEN (t0.c13 IN ()) ELSE ((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)) END);
SELECT ALL * FROM t0 WHERE ((t0.c13 IN ())) ORDER BY CASE WHEN ((t0.c13)>=(t0.c13)) THEN (t0.c13 IN ()) ELSE ((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)) END;
SELECT * FROM t0, rt0 WHERE ((((rt0.c2, t0.c13, rt0.c3)) BETWEEN ((CAST(x'' AS BLOB), 'CP譶XNvm~0', (((rt0.c0))<((rt0.c0))))) AND ((((t0.c13) ISNULL), UNLIKELY(t0.c13), rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, t0.c13, rt0.c3)) BETWEEN ((CAST(x'' AS BLOB), 'CP譶XNvm~0', (((rt0.c0))<((rt0.c0))))) AND ((((t0.c13) ISNULL), UNLIKELY(t0.c13), rt0.c3)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((rt0.c2, t0.c13, rt0.c3)) BETWEEN ((CAST(x'' AS BLOB), 'CP譶XNvm~0', (((rt0.c0))<((rt0.c0))))) AND ((((t0.c13) ISNULL), UNLIKELY(t0.c13), rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, t0.c13, rt0.c3)) BETWEEN ((CAST(x'' AS BLOB), 'CP譶XNvm~0', (((rt0.c0))<((rt0.c0))))) AND ((((t0.c13) ISNULL), UNLIKELY(t0.c13), rt0.c3)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((rt0.c2, t0.c13, rt0.c3)) BETWEEN ((CAST(x'' AS BLOB), 'CP譶XNvm~0', (((rt0.c0))<((rt0.c0))))) AND ((((t0.c13) ISNULL), UNLIKELY(t0.c13), rt0.c3))));
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE t0.c13  WHEN t0.c13 THEN t0.c13 ELSE t0.c13 END  WHEN x'' THEN ((t0.c13) IS FALSE) WHEN CAST(t0.c13 AS NUMERIC) THEN ((((t0.c13)AND(t0.c13)))OR(t0.c13)) WHEN t0.c13 COLLATE BINARY THEN ((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t0.c13  WHEN t0.c13 THEN t0.c13 ELSE t0.c13 END  WHEN x'' THEN ((t0.c13) IS FALSE) WHEN CAST(t0.c13 AS NUMERIC) THEN ((((t0.c13)AND(t0.c13)))OR(t0.c13)) WHEN t0.c13 COLLATE BINARY THEN ((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE t0.c13  WHEN t0.c13 THEN t0.c13 ELSE t0.c13 END  WHEN x'' THEN ((t0.c13) IS FALSE) WHEN CAST(t0.c13 AS NUMERIC) THEN ((((t0.c13)AND(t0.c13)))OR(t0.c13)) WHEN t0.c13 COLLATE BINARY THEN ((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t0.c13  WHEN t0.c13 THEN t0.c13 ELSE t0.c13 END  WHEN x'' THEN ((t0.c13) IS FALSE) WHEN CAST(t0.c13 AS NUMERIC) THEN ((((t0.c13)AND(t0.c13)))OR(t0.c13)) WHEN t0.c13 COLLATE BINARY THEN ((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE t0.c13  WHEN t0.c13 THEN t0.c13 ELSE t0.c13 END  WHEN x'' THEN ((t0.c13) IS FALSE) WHEN CAST(t0.c13 AS NUMERIC) THEN ((((t0.c13)AND(t0.c13)))OR(t0.c13)) WHEN t0.c13 COLLATE BINARY THEN ((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)) END);
SELECT * FROM t0, vt0 WHERE (vt0.c1) ORDER BY ((((((((vt0.c0)AND(-1.73579718E8)))OR(vt0.c0)))AND(vt0.c0)))OR(t0.c13)) COLLATE RTRIM, t0.c13 ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((vt0.c0)AND(-1.73579718E8)))OR(vt0.c0)))AND(vt0.c0)))OR(t0.c13)) COLLATE RTRIM, t0.c13 ASC);
SELECT * FROM t0, vt0 WHERE (vt0.c1) ORDER BY ((((((((vt0.c0)AND(-1.73579718E8)))OR(vt0.c0)))AND(vt0.c0)))OR(t0.c13)) COLLATE RTRIM, t0.c13 ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((vt0.c0)AND(-1.73579718E8)))OR(vt0.c0)))AND(vt0.c0)))OR(t0.c13)) COLLATE RTRIM, t0.c13 ASC);
SELECT * FROM t0, vt0 WHERE (vt0.c1) ORDER BY ((((((((vt0.c0)AND(-1.73579718E8)))OR(vt0.c0)))AND(vt0.c0)))OR(t0.c13)) COLLATE RTRIM, t0.c13 ASC;
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON ((rt0.c3)OR('(>')) WHERE (CAST(((vt0.c0) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON ((rt0.c3)OR('(>')));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON ((rt0.c3)OR('(>')) WHERE (CAST(((vt0.c0) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON ((rt0.c3)OR('(>')));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON ((rt0.c3)OR('(>')) WHERE (CAST(((vt0.c0) IS TRUE) AS INTEGER));
SELECT COUNT(*) FROM t0 WHERE (((4.17571803E8) BETWEEN (((((t0.c13)AND(t0.c13)))OR(t0.c13))) AND ('-1215657126')));
SELECT SUM(count) FROM (SELECT ALL ((((4.17571803E8) BETWEEN (((((t0.c13)AND(t0.c13)))OR(t0.c13))) AND ('-1215657126'))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((4.17571803E8) BETWEEN (((((t0.c13)AND(t0.c13)))OR(t0.c13))) AND ('-1215657126')));
SELECT SUM(count) FROM (SELECT ALL ((((4.17571803E8) BETWEEN (((((t0.c13)AND(t0.c13)))OR(t0.c13))) AND ('-1215657126'))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((4.17571803E8) BETWEEN (((((t0.c13)AND(t0.c13)))OR(t0.c13))) AND ('-1215657126')));
SELECT * FROM vt0 WHERE (x'') ORDER BY '1130676315'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY '1130676315'  NULLS LAST);
SELECT * FROM vt0 WHERE (x'') ORDER BY '1130676315'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY '1130676315'  NULLS LAST);
SELECT * FROM vt0 WHERE (x'') ORDER BY '1130676315'  NULLS LAST;
SELECT * FROM t0, vt0 INNER JOIN rt0 ON ((((((t0.c13)AND(rt0.c0)))AND(json_remove(vt0.c0, 0.6322147744956712))))AND(('~U' IN ()))) WHERE (((t0.c13) BETWEEN ((~ (rt0.c0))) AND (CASE t0.c13  WHEN rt0.c2 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((t0.c13) BETWEEN ((~ (rt0.c0))) AND (CASE t0.c13  WHEN rt0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON ((((((t0.c13)AND(rt0.c0)))AND(json_remove(vt0.c0, 0.6322147744956712))))AND(('~U' IN ()))));
SELECT * FROM t0, vt0 INNER JOIN rt0 ON ((((((t0.c13)AND(rt0.c0)))AND(json_remove(vt0.c0, 0.6322147744956712))))AND(('~U' IN ()))) WHERE (((t0.c13) BETWEEN ((~ (rt0.c0))) AND (CASE t0.c13  WHEN rt0.c2 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((t0.c13) BETWEEN ((~ (rt0.c0))) AND (CASE t0.c13  WHEN rt0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON ((((((t0.c13)AND(rt0.c0)))AND(json_remove(vt0.c0, 0.6322147744956712))))AND(('~U' IN ()))));
SELECT * FROM t0, vt0 INNER JOIN rt0 ON ((((((t0.c13)AND(rt0.c0)))AND(json_remove(vt0.c0, 0.6322147744956712))))AND(('~U' IN ()))) WHERE (((t0.c13) BETWEEN ((~ (rt0.c0))) AND (CASE t0.c13  WHEN rt0.c2 THEN vt0.c0 END)));
SELECT ALL * FROM t0 WHERE (CASE ((t0.c13) IS TRUE)  WHEN t0.c13 COLLATE NOCASE THEN load_extension(t0.c13) END) ORDER BY ((CASE WHEN t0.c13 THEN '0.3737915042119342' WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c13 END)>=(((t0.c13) BETWEEN (t0.c13) AND (t0.c13))));
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c13) IS TRUE)  WHEN t0.c13 COLLATE NOCASE THEN load_extension(t0.c13) END) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c13 THEN '0.3737915042119342' WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c13 END)>=(((t0.c13) BETWEEN (t0.c13) AND (t0.c13)))));
SELECT ALL * FROM t0 WHERE (CASE ((t0.c13) IS TRUE)  WHEN t0.c13 COLLATE NOCASE THEN load_extension(t0.c13) END) ORDER BY ((CASE WHEN t0.c13 THEN '0.3737915042119342' WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c13 END)>=(((t0.c13) BETWEEN (t0.c13) AND (t0.c13))));
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c13) IS TRUE)  WHEN t0.c13 COLLATE NOCASE THEN load_extension(t0.c13) END) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c13 THEN '0.3737915042119342' WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c13 END)>=(((t0.c13) BETWEEN (t0.c13) AND (t0.c13)))));
SELECT ALL * FROM t0 WHERE (CASE ((t0.c13) IS TRUE)  WHEN t0.c13 COLLATE NOCASE THEN load_extension(t0.c13) END) ORDER BY ((CASE WHEN t0.c13 THEN '0.3737915042119342' WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c13 END)>=(((t0.c13) BETWEEN (t0.c13) AND (t0.c13))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((0X51b66f23)<<((('0.6322147744956712') BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN (~ (rt0.c0)) ELSE ABS(DISTINCT vt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0X51b66f23)<<((('0.6322147744956712') BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN (~ (rt0.c0)) ELSE ABS(DISTINCT vt0.c0) END ASC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((0X51b66f23)<<((('0.6322147744956712') BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN (~ (rt0.c0)) ELSE ABS(DISTINCT vt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0X51b66f23)<<((('0.6322147744956712') BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN (~ (rt0.c0)) ELSE ABS(DISTINCT vt0.c0) END ASC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((0X51b66f23)<<((('0.6322147744956712') BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN (~ (rt0.c0)) ELSE ABS(DISTINCT vt0.c0) END ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST('*S1gBJmT#' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('*S1gBJmT#' AS NUMERIC)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST('*S1gBJmT#' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('*S1gBJmT#' AS NUMERIC)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST('*S1gBJmT#' AS NUMERIC));
SELECT ALL * FROM vt0, rt0 WHERE ((((- (rt0.c2))) BETWEEN (((((963193518)AND(rt0.c2)))AND(rt0.c3))) AND (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2))) BETWEEN (((((963193518)AND(rt0.c2)))AND(rt0.c3))) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((- (rt0.c2))) BETWEEN (((((963193518)AND(rt0.c2)))AND(rt0.c3))) AND (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2))) BETWEEN (((((963193518)AND(rt0.c2)))AND(rt0.c3))) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((- (rt0.c2))) BETWEEN (((((963193518)AND(rt0.c2)))AND(rt0.c3))) AND (rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c3))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c3))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (rt0.c3)));
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_SOURCE_ID());
SELECT * FROM rt0, t0 WHERE (LOWER(((t0.c13) BETWEEN ('') AND (rt0.c1)))) ORDER BY (((~ (rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c1 THEN x'' END) AND ((+ (rt0.c0)))) DESC, (((- (x''))) NOT BETWEEN (x'') AND (((rt0.c1)>>(t0.c13)))) ASC, NULLIF(DISTINCT rt0.c1 COLLATE RTRIM, ((t0.c13)||(t0.c13)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(((t0.c13) BETWEEN ('') AND (rt0.c1)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((~ (rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c1 THEN x'' END) AND ((+ (rt0.c0)))) DESC, (((- (x''))) NOT BETWEEN (x'') AND (((rt0.c1)>>(t0.c13)))) ASC, NULLIF(DISTINCT rt0.c1 COLLATE RTRIM, ((t0.c13)||(t0.c13)))  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (LOWER(((t0.c13) BETWEEN ('') AND (rt0.c1)))) ORDER BY (((~ (rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c1 THEN x'' END) AND ((+ (rt0.c0)))) DESC, (((- (x''))) NOT BETWEEN (x'') AND (((rt0.c1)>>(t0.c13)))) ASC, NULLIF(DISTINCT rt0.c1 COLLATE RTRIM, ((t0.c13)||(t0.c13)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(((t0.c13) BETWEEN ('') AND (rt0.c1)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((~ (rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c1 THEN x'' END) AND ((+ (rt0.c0)))) DESC, (((- (x''))) NOT BETWEEN (x'') AND (((rt0.c1)>>(t0.c13)))) ASC, NULLIF(DISTINCT rt0.c1 COLLATE RTRIM, ((t0.c13)||(t0.c13)))  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (LOWER(((t0.c13) BETWEEN ('') AND (rt0.c1)))) ORDER BY (((~ (rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c1 THEN x'' END) AND ((+ (rt0.c0)))) DESC, (((- (x''))) NOT BETWEEN (x'') AND (((rt0.c1)>>(t0.c13)))) ASC, NULLIF(DISTINCT rt0.c1 COLLATE RTRIM, ((t0.c13)||(t0.c13)))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (((vt0.c0))!=((vt0.c0))) THEN ((((t0.c13)AND(vt0.c1)))AND(0.22601198518929544)) END) ORDER BY (t0.c13 COLLATE NOCASE IN ((~ (t0.c13))))  NULLS LAST, ((t0.c13 COLLATE BINARY)<(((vt0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))!=((vt0.c0))) THEN ((((t0.c13)AND(vt0.c1)))AND(0.22601198518929544)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (t0.c13 COLLATE NOCASE IN ((~ (t0.c13))))  NULLS LAST, ((t0.c13 COLLATE BINARY)<(((vt0.c0) IS FALSE)))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (((vt0.c0))!=((vt0.c0))) THEN ((((t0.c13)AND(vt0.c1)))AND(0.22601198518929544)) END) ORDER BY (t0.c13 COLLATE NOCASE IN ((~ (t0.c13))))  NULLS LAST, ((t0.c13 COLLATE BINARY)<(((vt0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))!=((vt0.c0))) THEN ((((t0.c13)AND(vt0.c1)))AND(0.22601198518929544)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (t0.c13 COLLATE NOCASE IN ((~ (t0.c13))))  NULLS LAST, ((t0.c13 COLLATE BINARY)<(((vt0.c0) IS FALSE)))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (((vt0.c0))!=((vt0.c0))) THEN ((((t0.c13)AND(vt0.c1)))AND(0.22601198518929544)) END) ORDER BY (t0.c13 COLLATE NOCASE IN ((~ (t0.c13))))  NULLS LAST, ((t0.c13 COLLATE BINARY)<(((vt0.c0) IS FALSE)))  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c1)) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c1)) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN vt0.c0 END);
SELECT * FROM rt0, t0, vt0 WHERE (((((vt0.c1, vt0.c1, rt0.c3))<=((t0.c13, rt0.c3, vt0.c1))) IN ())) ORDER BY ((((vt0.c0)AND(rt0.c1)))AND(rt0.c2)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1, vt0.c1, rt0.c3))<=((t0.c13, rt0.c3, vt0.c1))) IN ())) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((vt0.c0)AND(rt0.c1)))AND(rt0.c2)) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM rt0, t0, vt0 WHERE (((((vt0.c1, vt0.c1, rt0.c3))<=((t0.c13, rt0.c3, vt0.c1))) IN ())) ORDER BY ((((vt0.c0)AND(rt0.c1)))AND(rt0.c2)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1, vt0.c1, rt0.c3))<=((t0.c13, rt0.c3, vt0.c1))) IN ())) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((vt0.c0)AND(rt0.c1)))AND(rt0.c2)) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM rt0, t0, vt0 WHERE (((((vt0.c1, vt0.c1, rt0.c3))<=((t0.c13, rt0.c3, vt0.c1))) IN ())) ORDER BY ((((vt0.c0)AND(rt0.c1)))AND(rt0.c2)) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((~ (vt0.c1)))OR(x'')))AND(((vt0.c1) NOT BETWEEN (0.8909813223304927) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (vt0.c1)))OR(x'')))AND(((vt0.c1) NOT BETWEEN (0.8909813223304927) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((~ (vt0.c1)))OR(x'')))AND(((vt0.c1) NOT BETWEEN (0.8909813223304927) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (vt0.c1)))OR(x'')))AND(((vt0.c1) NOT BETWEEN (0.8909813223304927) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((~ (vt0.c1)))OR(x'')))AND(((vt0.c1) NOT BETWEEN (0.8909813223304927) AND (vt0.c1)))));
SELECT * FROM t0 WHERE ((((- (t0.c13)))IS(LTRIM(t0.c13, t0.c13))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c13)))IS(LTRIM(t0.c13, t0.c13)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((- (t0.c13)))IS(LTRIM(t0.c13, t0.c13))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c13)))IS(LTRIM(t0.c13, t0.c13)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((- (t0.c13)))IS(LTRIM(t0.c13, t0.c13))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((((((rt0.c3)AND(x'856187bb')))AND(rt0.c2)))AND('')))OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c3))) ISNULL) WHERE (CAST(((rt0.c2)<>(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)<>(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((((((rt0.c3)AND(x'856187bb')))AND(rt0.c2)))AND('')))OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c3))) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((((((rt0.c3)AND(x'856187bb')))AND(rt0.c2)))AND('')))OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c3))) ISNULL) WHERE (CAST(((rt0.c2)<>(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)<>(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((((((rt0.c3)AND(x'856187bb')))AND(rt0.c2)))AND('')))OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c3))) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((((((rt0.c3)AND(x'856187bb')))AND(rt0.c2)))AND('')))OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c3))) ISNULL) WHERE (CAST(((rt0.c2)<>(rt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (json_array_length((rt0.c2 IN (rt0.c0, rt0.c2)), ((rt0.c0)IS(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((json_array_length((rt0.c2 IN (rt0.c0, rt0.c2)), ((rt0.c0)IS(rt0.c3)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (json_array_length((rt0.c2 IN (rt0.c0, rt0.c2)), ((rt0.c0)IS(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((json_array_length((rt0.c2 IN (rt0.c0, rt0.c2)), ((rt0.c0)IS(rt0.c3)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM vt0, t0 WHERE ((((NOT (vt0.c0))) IS FALSE)) ORDER BY (((vt0.c0)||(vt0.c1)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0)||(vt0.c1)) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((NOT (vt0.c0))) IS FALSE)) ORDER BY (((vt0.c0)||(vt0.c1)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0)||(vt0.c1)) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((NOT (vt0.c0))) IS FALSE)) ORDER BY (((vt0.c0)||(vt0.c1)) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE ((((((+ (102464766)))OR(TRIM(rt0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE NOCASE, rt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (102464766)))OR(TRIM(rt0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE NOCASE, rt0.c1);
SELECT ALL * FROM t0, rt0 WHERE ((((((+ (102464766)))OR(TRIM(rt0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE NOCASE, rt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (102464766)))OR(TRIM(rt0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE NOCASE, rt0.c1);
SELECT ALL * FROM t0, rt0 WHERE ((((((+ (102464766)))OR(TRIM(rt0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE NOCASE, rt0.c1;
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN rt0 ON COALESCE(DISTINCT ((((((((vt0.c1)OR(vt0.c0)))AND(0.5167923028579348)))AND(rt0.c0)))OR(t0.c13)), vt0.c0, (((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1))), 0x31b46fab) WHERE (((x'ea18')<=((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'ea18')<=((- (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN rt0 ON COALESCE(DISTINCT ((((((((vt0.c1)OR(vt0.c0)))AND(0.5167923028579348)))AND(rt0.c0)))OR(t0.c13)), vt0.c0, (((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1))), 0X31b46fab));
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN rt0 ON COALESCE(DISTINCT ((((((((vt0.c1)OR(vt0.c0)))AND(0.5167923028579348)))AND(rt0.c0)))OR(t0.c13)), vt0.c0, (((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1))), 0x31b46fab) WHERE (((x'ea18')<=((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'ea18')<=((- (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN rt0 ON COALESCE(DISTINCT ((((((((vt0.c1)OR(vt0.c0)))AND(0.5167923028579348)))AND(rt0.c0)))OR(t0.c13)), vt0.c0, (((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1))), 0X31b46fab));
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN rt0 ON COALESCE(DISTINCT ((((((((vt0.c1)OR(vt0.c0)))AND(0.5167923028579348)))AND(rt0.c0)))OR(t0.c13)), vt0.c0, (((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1))), 0x31b46fab) WHERE (((x'ea18')<=((- (vt0.c0)))));
SELECT ALL * FROM rt0, t0, vt0 WHERE (((CAST(t0.c13 AS INTEGER)) NOT BETWEEN (((((rt0.c3)AND(vt0.c1)))OR(rt0.c0))) AND (((t0.c13)LIKE(rt0.c2))))) ORDER BY (((+ (rt0.c2))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c13 AS INTEGER)) NOT BETWEEN (((((rt0.c3)AND(vt0.c1)))OR(rt0.c0))) AND (((t0.c13)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((+ (rt0.c2))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((CAST(t0.c13 AS INTEGER)) NOT BETWEEN (((((rt0.c3)AND(vt0.c1)))OR(rt0.c0))) AND (((t0.c13)LIKE(rt0.c2))))) ORDER BY (((+ (rt0.c2))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c13 AS INTEGER)) NOT BETWEEN (((((rt0.c3)AND(vt0.c1)))OR(rt0.c0))) AND (((t0.c13)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((+ (rt0.c2))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((CAST(t0.c13 AS INTEGER)) NOT BETWEEN (((((rt0.c3)AND(vt0.c1)))OR(rt0.c0))) AND (((t0.c13)LIKE(rt0.c2))))) ORDER BY (((+ (rt0.c2))) IS TRUE) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (NOT (((rt0.c1)&(rt0.c0)))) WHERE (CAST((+ (vt0.c0)) AS REAL)) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END) BETWEEN (NULLIF(-9.18922875E8, rt0.c1)) AND (rt0.c0 COLLATE NOCASE)), (+ ((((rt0.c1, vt0.c1, rt0.c2))=((x'', rt0.c2, vt0.c1))))) DESC, (((vt0.c1)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c1) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (NOT (((rt0.c1)&(rt0.c0)))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END) BETWEEN (NULLIF(-9.18922875E8, rt0.c1)) AND (rt0.c0 COLLATE NOCASE)), (+ ((((rt0.c1, vt0.c1, rt0.c2))==((x'', rt0.c2, vt0.c1))))) DESC, (((vt0.c1)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c1) IS TRUE))))  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (NOT (((rt0.c1)&(rt0.c0)))) WHERE (CAST((+ (vt0.c0)) AS REAL)) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END) BETWEEN (NULLIF(-9.18922875E8, rt0.c1)) AND (rt0.c0 COLLATE NOCASE)), (+ ((((rt0.c1, vt0.c1, rt0.c2))=((x'', rt0.c2, vt0.c1))))) DESC, (((vt0.c1)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c1) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (NOT (((rt0.c1)&(rt0.c0)))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END) BETWEEN (NULLIF(-9.18922875E8, rt0.c1)) AND (rt0.c0 COLLATE NOCASE)), (+ ((((rt0.c1, vt0.c1, rt0.c2))==((x'', rt0.c2, vt0.c1))))) DESC, (((vt0.c1)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c1) IS TRUE))))  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (NOT (((rt0.c1)&(rt0.c0)))) WHERE (CAST((+ (vt0.c0)) AS REAL)) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END) BETWEEN (NULLIF(-9.18922875E8, rt0.c1)) AND (rt0.c0 COLLATE NOCASE)), (+ ((((rt0.c1, vt0.c1, rt0.c2))=((x'', rt0.c2, vt0.c1))))) DESC, (((vt0.c1)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c1) IS TRUE))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c1 AS REAL)))) ORDER BY ((((((vt0.c1)OR(x'')))OR(vt0.c1))) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c1 COLLATE BINARY)) ASC  NULLS LAST, ((vt0.c0) NOT NULL)  NULLS LAST, ((((vt0.c1) NOT NULL)) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(x'')))OR(vt0.c1))) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c1 COLLATE BINARY)) ASC  NULLS LAST, ((vt0.c0) NOT NULL)  NULLS LAST, ((((vt0.c1) NOT NULL)) IS TRUE) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c1 AS REAL)))) ORDER BY ((((((vt0.c1)OR(x'')))OR(vt0.c1))) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c1 COLLATE BINARY)) ASC  NULLS LAST, ((vt0.c0) NOT NULL)  NULLS LAST, ((((vt0.c1) NOT NULL)) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(x'')))OR(vt0.c1))) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c1 COLLATE BINARY)) ASC  NULLS LAST, ((vt0.c0) NOT NULL)  NULLS LAST, ((((vt0.c1) NOT NULL)) IS TRUE) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c1 AS REAL)))) ORDER BY ((((((vt0.c1)OR(x'')))OR(vt0.c1))) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c1 COLLATE BINARY)) ASC  NULLS LAST, ((vt0.c0) NOT NULL)  NULLS LAST, ((((vt0.c1) NOT NULL)) IS TRUE) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((((((rt0.c1 COLLATE NOCASE)OR(IFNULL(DISTINCT rt0.c1, rt0.c3))))AND(CAST(rt0.c1 AS REAL))))OR(TYPEOF(DISTINCT rt0.c1))))AND((('524336029') NOT BETWEEN (rt0.c2) AND (t0.c13)))) FULL OUTER JOIN rt0 ON ((((t0.c13) NOT BETWEEN (-2.088967325E9) AND (vt0.c1))) ISNULL) WHERE (CAST(t0.c13 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c13 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((((((rt0.c1 COLLATE NOCASE)OR(IFNULL(DISTINCT rt0.c1, rt0.c3))))AND(CAST(rt0.c1 AS REAL))))OR(TYPEOF(DISTINCT rt0.c1))))AND((('524336029') NOT BETWEEN (rt0.c2) AND (t0.c13)))) FULL OUTER JOIN rt0 ON ((((t0.c13) NOT BETWEEN (-2.088967325E9) AND (vt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((((((rt0.c1 COLLATE NOCASE)OR(IFNULL(DISTINCT rt0.c1, rt0.c3))))AND(CAST(rt0.c1 AS REAL))))OR(TYPEOF(DISTINCT rt0.c1))))AND((('524336029') NOT BETWEEN (rt0.c2) AND (t0.c13)))) FULL OUTER JOIN rt0 ON ((((t0.c13) NOT BETWEEN (-2.088967325E9) AND (vt0.c1))) ISNULL) WHERE (CAST(t0.c13 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c13 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((((((rt0.c1 COLLATE NOCASE)OR(IFNULL(DISTINCT rt0.c1, rt0.c3))))AND(CAST(rt0.c1 AS REAL))))OR(TYPEOF(DISTINCT rt0.c1))))AND((('524336029') NOT BETWEEN (rt0.c2) AND (t0.c13)))) FULL OUTER JOIN rt0 ON ((((t0.c13) NOT BETWEEN (-2.088967325E9) AND (vt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0 COLLATE NOCASE)<<(((rt0.c1)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)<<(((rt0.c1)GLOB(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0 COLLATE NOCASE)<<(((rt0.c1)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)<<(((rt0.c1)GLOB(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0 COLLATE NOCASE)<<(((rt0.c1)GLOB(rt0.c2)))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS TEXT));
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN (NOT (rt0.c2)) THEN (- (t0.c13)) END) ORDER BY SQLITE_COMPILEOPTION_USED(((t0.c13) NOT BETWEEN (rt0.c2) AND ('-1482872783'))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN (NOT (rt0.c2)) THEN (- (t0.c13)) END) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY SQLITE_COMPILEOPTION_USED(((t0.c13) NOT BETWEEN (rt0.c2) AND ('-1482872783'))) ASC);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN (NOT (rt0.c2)) THEN (- (t0.c13)) END) ORDER BY SQLITE_COMPILEOPTION_USED(((t0.c13) NOT BETWEEN (rt0.c2) AND ('-1482872783'))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN (NOT (rt0.c2)) THEN (- (t0.c13)) END) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY SQLITE_COMPILEOPTION_USED(((t0.c13) NOT BETWEEN (rt0.c2) AND ('-1482872783'))) ASC);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN (NOT (rt0.c2)) THEN (- (t0.c13)) END) ORDER BY SQLITE_COMPILEOPTION_USED(((t0.c13) NOT BETWEEN (rt0.c2) AND ('-1482872783'))) ASC;
SELECT ALL * FROM vt0, t0 WHERE ('덍1t*㷷|w') ORDER BY ((t0.c13)<<(t0.c13)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (('덍1t*㷷|w') IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c13)<<(t0.c13)) COLLATE NOCASE);
SELECT ALL * FROM vt0, t0 WHERE ('덍1t*㷷|w') ORDER BY ((t0.c13)<<(t0.c13)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (('덍1t*㷷|w') IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c13)<<(t0.c13)) COLLATE NOCASE);
SELECT ALL * FROM vt0, t0 WHERE ('덍1t*㷷|w') ORDER BY ((t0.c13)<<(t0.c13)) COLLATE NOCASE;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL));
SELECT * FROM t0 WHERE (((((x'f1b2')AND(CASE WHEN t0.c13 THEN t0.c13 END)))OR((((t0.c13, t0.c13, t0.c13, t0.c13, t0.c13)) BETWEEN ((0.8502711097681538, t0.c13, t0.c13, t0.c13, t0.c13)) AND ((t0.c13, t0.c13, t0.c13, t0.c13, t0.c13))))));
SELECT SUM(count) FROM (SELECT ((((((x'f1b2')AND(CASE WHEN t0.c13 THEN t0.c13 END)))OR((((t0.c13, t0.c13, t0.c13, t0.c13, t0.c13)) BETWEEN ((0.8502711097681538, t0.c13, t0.c13, t0.c13, t0.c13)) AND ((t0.c13, t0.c13, t0.c13, t0.c13, t0.c13)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((x'f1b2')AND(CASE WHEN t0.c13 THEN t0.c13 END)))OR((((t0.c13, t0.c13, t0.c13, t0.c13, t0.c13)) BETWEEN ((0.8502711097681538, t0.c13, t0.c13, t0.c13, t0.c13)) AND ((t0.c13, t0.c13, t0.c13, t0.c13, t0.c13))))));
SELECT SUM(count) FROM (SELECT ((((((x'f1b2')AND(CASE WHEN t0.c13 THEN t0.c13 END)))OR((((t0.c13, t0.c13, t0.c13, t0.c13, t0.c13)) BETWEEN ((0.8502711097681538, t0.c13, t0.c13, t0.c13, t0.c13)) AND ((t0.c13, t0.c13, t0.c13, t0.c13, t0.c13)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((x'f1b2')AND(CASE WHEN t0.c13 THEN t0.c13 END)))OR((((t0.c13, t0.c13, t0.c13, t0.c13, t0.c13)) BETWEEN ((0.8502711097681538, t0.c13, t0.c13, t0.c13, t0.c13)) AND ((t0.c13, t0.c13, t0.c13, t0.c13, t0.c13))))));
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)LIKE(rt0.c1)) IN (rt0.c3)));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)LIKE(rt0.c1)) IN (rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)LIKE(rt0.c1)) IN (rt0.c3)));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)LIKE(rt0.c1)) IN (rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)LIKE(rt0.c1)) IN (rt0.c3)));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1)-(rt0.c2))  WHEN (- (rt0.c3)) THEN (((rt0.c2))=((rt0.c3))) WHEN ((('102464766', rt0.c2, '102464766'))<((rt0.c0, rt0.c3, rt0.c0))) THEN (~ (0xffffffffd5c783ff)) WHEN rt0.c2 THEN ((rt0.c1)*(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)-(rt0.c2))  WHEN (- (rt0.c3)) THEN (((rt0.c2))=((rt0.c3))) WHEN ((('102464766', rt0.c2, '102464766'))<((rt0.c0, rt0.c3, rt0.c0))) THEN (~ (0xffffffffd5c783ff)) WHEN rt0.c2 THEN ((rt0.c1)*(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1)-(rt0.c2))  WHEN (- (rt0.c3)) THEN (((rt0.c2))=((rt0.c3))) WHEN ((('102464766', rt0.c2, '102464766'))<((rt0.c0, rt0.c3, rt0.c0))) THEN (~ (0xffffffffd5c783ff)) WHEN rt0.c2 THEN ((rt0.c1)*(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)-(rt0.c2))  WHEN (- (rt0.c3)) THEN (((rt0.c2))=((rt0.c3))) WHEN ((('102464766', rt0.c2, '102464766'))<((rt0.c0, rt0.c3, rt0.c0))) THEN (~ (0xffffffffd5c783ff)) WHEN rt0.c2 THEN ((rt0.c1)*(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1)-(rt0.c2))  WHEN (- (rt0.c3)) THEN (((rt0.c2))=((rt0.c3))) WHEN ((('102464766', rt0.c2, '102464766'))<((rt0.c0, rt0.c3, rt0.c0))) THEN (~ (0xffffffffd5c783ff)) WHEN rt0.c2 THEN ((rt0.c1)*(rt0.c1)) END);
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN rt0 ON (((~ (rt0.c3)))<(((vt0.c1)=(t0.c13)))) WHERE (COALESCE(DISTINCT rt0.c2, rt0.c2, rt0.c0, vt0.c0) COLLATE RTRIM) ORDER BY ((((vt0.c1) BETWEEN ('-160289380') AND (NULL))) NOT BETWEEN (t0.c13) AND (CASE WHEN NULL THEN rt0.c0 ELSE vt0.c0 END))  NULLS FIRST, (CAST(rt0.c3 AS NUMERIC) IN ()) ASC, ((DATETIME(rt0.c1, vt0.c0, rt0.c3))IS NOT(rt0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT rt0.c2, rt0.c2, rt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON (((~ (rt0.c3)))<(((vt0.c1)==(t0.c13)))) ORDER BY ((((vt0.c1) BETWEEN ('-160289380') AND (NULL))) NOT BETWEEN (t0.c13) AND (CASE WHEN NULL THEN rt0.c0 ELSE vt0.c0 END))  NULLS FIRST, (CAST(rt0.c3 AS NUMERIC) IN ()) ASC, ((DATETIME(rt0.c1, vt0.c0, rt0.c3))IS NOT(rt0.c2 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN rt0 ON (((~ (rt0.c3)))<(((vt0.c1)=(t0.c13)))) WHERE (COALESCE(DISTINCT rt0.c2, rt0.c2, rt0.c0, vt0.c0) COLLATE RTRIM) ORDER BY ((((vt0.c1) BETWEEN ('-160289380') AND (NULL))) NOT BETWEEN (t0.c13) AND (CASE WHEN NULL THEN rt0.c0 ELSE vt0.c0 END))  NULLS FIRST, (CAST(rt0.c3 AS NUMERIC) IN ()) ASC, ((DATETIME(rt0.c1, vt0.c0, rt0.c3))IS NOT(rt0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT rt0.c2, rt0.c2, rt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON (((~ (rt0.c3)))<(((vt0.c1)==(t0.c13)))) ORDER BY ((((vt0.c1) BETWEEN ('-160289380') AND (NULL))) NOT BETWEEN (t0.c13) AND (CASE WHEN NULL THEN rt0.c0 ELSE vt0.c0 END))  NULLS FIRST, (CAST(rt0.c3 AS NUMERIC) IN ()) ASC, ((DATETIME(rt0.c1, vt0.c0, rt0.c3))IS NOT(rt0.c2 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN rt0 ON (((~ (rt0.c3)))<(((vt0.c1)=(t0.c13)))) WHERE (COALESCE(DISTINCT rt0.c2, rt0.c2, rt0.c0, vt0.c0) COLLATE RTRIM) ORDER BY ((((vt0.c1) BETWEEN ('-160289380') AND (NULL))) NOT BETWEEN (t0.c13) AND (CASE WHEN NULL THEN rt0.c0 ELSE vt0.c0 END))  NULLS FIRST, (CAST(rt0.c3 AS NUMERIC) IN ()) ASC, ((DATETIME(rt0.c1, vt0.c0, rt0.c3))IS NOT(rt0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c13, t0.c13, 0.7217380831888678)) NOT BETWEEN ((((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)), (- (t0.c13)), x'b6f7')) AND ((((t0.c13)IS NOT(t0.c13)), ((t0.c13)IS NOT(t0.c13)), (((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13))))))) ORDER BY (('[]')!=(t0.c13)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c13, t0.c13, 0.7217380831888678)) NOT BETWEEN ((((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)), (- (t0.c13)), x'b6f7')) AND ((((t0.c13)IS NOT(t0.c13)), ((t0.c13)IS NOT(t0.c13)), (((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13))))))) IS TRUE)  as count FROM t0 ORDER BY (('[]')!=(t0.c13)) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c13, t0.c13, 0.7217380831888678)) NOT BETWEEN ((((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)), (- (t0.c13)), x'b6f7')) AND ((((t0.c13)IS NOT(t0.c13)), ((t0.c13)IS NOT(t0.c13)), (((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13))))))) ORDER BY (('[]')!=(t0.c13)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c13, t0.c13, 0.7217380831888678)) NOT BETWEEN ((((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)), (- (t0.c13)), x'b6f7')) AND ((((t0.c13)IS NOT(t0.c13)), ((t0.c13)IS NOT(t0.c13)), (((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13))))))) IS TRUE)  as count FROM t0 ORDER BY (('[]')!=(t0.c13)) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c13, t0.c13, 0.7217380831888678)) NOT BETWEEN ((((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)), (- (t0.c13)), x'b6f7')) AND ((((t0.c13)IS NOT(t0.c13)), ((t0.c13)IS NOT(t0.c13)), (((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13))))))) ORDER BY (('[]')!=(t0.c13)) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE ((('-846486497')IS NOT(((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)))));
SELECT SUM(count) FROM (SELECT ALL (((('-846486497')IS NOT(((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((('-846486497')IS NOT(((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)))));
SELECT SUM(count) FROM (SELECT ALL (((('-846486497')IS NOT(((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((('-846486497')IS NOT(((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)))));
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2)AND('j')))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND('j')))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2)AND('j')))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND('j')))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2)AND('j')))OR(vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0, t0, rt0 WHERE (t0.c13) ORDER BY (((((rt0.c3, vt0.c0, rt0.c0)) BETWEEN ((t0.c13, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0)))) BETWEEN (CASE WHEN vt0.c0 THEN t0.c13 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c13 THEN rt0.c2 END) AND (json_extract(rt0.c2, rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((t0.c13) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((rt0.c3, vt0.c0, rt0.c0)) BETWEEN ((t0.c13, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0)))) BETWEEN (CASE WHEN vt0.c0 THEN t0.c13 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c13 THEN rt0.c2 END) AND (json_extract(rt0.c2, rt0.c1))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (t0.c13) ORDER BY (((((rt0.c3, vt0.c0, rt0.c0)) BETWEEN ((t0.c13, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0)))) BETWEEN (CASE WHEN vt0.c0 THEN t0.c13 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c13 THEN rt0.c2 END) AND (json_extract(rt0.c2, rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((t0.c13) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((rt0.c3, vt0.c0, rt0.c0)) BETWEEN ((t0.c13, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0)))) BETWEEN (CASE WHEN vt0.c0 THEN t0.c13 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c13 THEN rt0.c2 END) AND (json_extract(rt0.c2, rt0.c1))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (t0.c13) ORDER BY (((((rt0.c3, vt0.c0, rt0.c0)) BETWEEN ((t0.c13, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0)))) BETWEEN (CASE WHEN vt0.c0 THEN t0.c13 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c13 THEN rt0.c2 END) AND (json_extract(rt0.c2, rt0.c1)));
SELECT ALL COUNT(*) FROM vt0 WHERE ('') ORDER BY CAST(vt0.c0 AS REAL) ASC  NULLS FIRST, 0.5900456660006075  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS REAL) ASC  NULLS FIRST, 0.5900456660006075  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('') ORDER BY CAST(vt0.c0 AS REAL) ASC  NULLS FIRST, 0.5900456660006075  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS REAL) ASC  NULLS FIRST, 0.5900456660006075  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('') ORDER BY CAST(vt0.c0 AS REAL) ASC  NULLS FIRST, 0.5900456660006075  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (rtreenode((~ (t0.c13)), ((t0.c13)+(t0.c13))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode((~ (t0.c13)), ((t0.c13)+(t0.c13)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (rtreenode((~ (t0.c13)), ((t0.c13)+(t0.c13))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode((~ (t0.c13)), ((t0.c13)+(t0.c13)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (rtreenode((~ (t0.c13)), ((t0.c13)+(t0.c13))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c1) IS TRUE))OR((rt0.c0 IN (rt0.c0)))))AND((~ (rt0.c1)))))AND((NOT (rt0.c1)))))AND(vt0.c0)) WHERE (CAST((NOT (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c1) IS TRUE))OR((rt0.c0 IN (rt0.c0)))))AND((~ (rt0.c1)))))AND((NOT (rt0.c1)))))AND(vt0.c0)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c1) IS TRUE))OR((rt0.c0 IN (rt0.c0)))))AND((~ (rt0.c1)))))AND((NOT (rt0.c1)))))AND(vt0.c0)) WHERE (CAST((NOT (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c1) IS TRUE))OR((rt0.c0 IN (rt0.c0)))))AND((~ (rt0.c1)))))AND((NOT (rt0.c1)))))AND(vt0.c0)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c1) IS TRUE))OR((rt0.c0 IN (rt0.c0)))))AND((~ (rt0.c1)))))AND((NOT (rt0.c1)))))AND(vt0.c0)) WHERE (CAST((NOT (vt0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((((rt0.c2) NOT BETWEEN (1.66499925E8) AND (rt0.c2)))OR((rt0.c3 IN (rt0.c2, rt0.c3))))) ORDER BY CASE t0.c13  WHEN ((rt0.c3)GLOB(rt0.c3)) THEN (((rt0.c0))<>((rt0.c0))) END  NULLS LAST, (((((((((((rt0.c2, rt0.c0, rt0.c3, rt0.c1, t0.c13))=((t0.c13, rt0.c0, rt0.c2, rt0.c3, rt0.c3))))AND(CAST(rt0.c3 AS INTEGER))))AND(((rt0.c1)IS NOT(rt0.c2)))))AND(CASE WHEN t0.c13 THEN rt0.c3 END)))AND(((rt0.c1) NOT BETWEEN (x'4994') AND ('h婋Zct%hc')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (1.66499925E8) AND (rt0.c2)))OR((rt0.c3 IN (rt0.c2, rt0.c3))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY CASE t0.c13  WHEN ((rt0.c3)GLOB(rt0.c3)) THEN (((rt0.c0))!=((rt0.c0))) END  NULLS LAST, (((((((((((rt0.c2, rt0.c0, rt0.c3, rt0.c1, t0.c13))==((t0.c13, rt0.c0, rt0.c2, rt0.c3, rt0.c3))))AND(CAST(rt0.c3 AS INTEGER))))AND(((rt0.c1)IS NOT(rt0.c2)))))AND(CASE WHEN t0.c13 THEN rt0.c3 END)))AND(((rt0.c1) NOT BETWEEN (x'4994') AND ('h婋Zct%hc')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((((rt0.c2) NOT BETWEEN (1.66499925E8) AND (rt0.c2)))OR((rt0.c3 IN (rt0.c2, rt0.c3))))) ORDER BY CASE t0.c13  WHEN ((rt0.c3)GLOB(rt0.c3)) THEN (((rt0.c0))<>((rt0.c0))) END  NULLS LAST, (((((((((((rt0.c2, rt0.c0, rt0.c3, rt0.c1, t0.c13))=((t0.c13, rt0.c0, rt0.c2, rt0.c3, rt0.c3))))AND(CAST(rt0.c3 AS INTEGER))))AND(((rt0.c1)IS NOT(rt0.c2)))))AND(CASE WHEN t0.c13 THEN rt0.c3 END)))AND(((rt0.c1) NOT BETWEEN (x'4994') AND ('h婋Zct%hc')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (1.66499925E8) AND (rt0.c2)))OR((rt0.c3 IN (rt0.c2, rt0.c3))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY CASE t0.c13  WHEN ((rt0.c3)GLOB(rt0.c3)) THEN (((rt0.c0))!=((rt0.c0))) END  NULLS LAST, (((((((((((rt0.c2, rt0.c0, rt0.c3, rt0.c1, t0.c13))==((t0.c13, rt0.c0, rt0.c2, rt0.c3, rt0.c3))))AND(CAST(rt0.c3 AS INTEGER))))AND(((rt0.c1)IS NOT(rt0.c2)))))AND(CASE WHEN t0.c13 THEN rt0.c3 END)))AND(((rt0.c1) NOT BETWEEN (x'4994') AND ('h婋Zct%hc')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((((rt0.c2) NOT BETWEEN (1.66499925E8) AND (rt0.c2)))OR((rt0.c3 IN (rt0.c2, rt0.c3))))) ORDER BY CASE t0.c13  WHEN ((rt0.c3)GLOB(rt0.c3)) THEN (((rt0.c0))<>((rt0.c0))) END  NULLS LAST, (((((((((((rt0.c2, rt0.c0, rt0.c3, rt0.c1, t0.c13))=((t0.c13, rt0.c0, rt0.c2, rt0.c3, rt0.c3))))AND(CAST(rt0.c3 AS INTEGER))))AND(((rt0.c1)IS NOT(rt0.c2)))))AND(CASE WHEN t0.c13 THEN rt0.c3 END)))AND(((rt0.c1) NOT BETWEEN (x'4994') AND ('h婋Zct%hc')))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 NOT INDEXED, rt0, t0 WHERE ((~ ((rt0.c3 IN ())))) ORDER BY CAST(((t0.c13) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c3 IN ())))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST(((t0.c13) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED, rt0, t0 WHERE ((~ ((rt0.c3 IN ())))) ORDER BY CAST(((t0.c13) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c3 IN ())))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST(((t0.c13) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED, rt0, t0 WHERE ((~ ((rt0.c3 IN ())))) ORDER BY CAST(((t0.c13) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0, rt0 WHERE (((t0.c13)<=(((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c1)))OR(rt0.c3)))OR(t0.c13)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c13)<=(((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c1)))OR(rt0.c3)))OR(t0.c13))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0, rt0 WHERE (((t0.c13)<=(((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c1)))OR(rt0.c3)))OR(t0.c13)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c13)<=(((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c1)))OR(rt0.c3)))OR(t0.c13))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0, rt0 WHERE (((t0.c13)<=(((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c1)))OR(rt0.c3)))OR(t0.c13)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((('-9223372036854775808') BETWEEN ((NOT (vt0.c1))) AND ((~ (vt0.c0))))) ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN (rt0.c0 IN ()) THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c3) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL (((('-9223372036854775808') BETWEEN ((NOT (vt0.c1))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN (rt0.c0 IN ()) THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c3) IS TRUE) END);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((('-9223372036854775808') BETWEEN ((NOT (vt0.c1))) AND ((~ (vt0.c0))))) ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN (rt0.c0 IN ()) THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c3) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL (((('-9223372036854775808') BETWEEN ((NOT (vt0.c1))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN (rt0.c0 IN ()) THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c3) IS TRUE) END);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((('-9223372036854775808') BETWEEN ((NOT (vt0.c1))) AND ((~ (vt0.c0))))) ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN (rt0.c0 IN ()) THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c3) IS TRUE) END;
SELECT ALL * FROM vt0 NOT INDEXED, t0 INNER JOIN rt0 ON 0.9118263187069104 WHERE ((((((((((((((rt0.c0)OR(rt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY rt0.c1, (NOT (CASE t0.c13  WHEN rt0.c0 THEN t0.c13 END));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt0.c0)OR(rt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON 0.9118263187069104 ORDER BY rt0.c1, (NOT (CASE t0.c13  WHEN rt0.c0 THEN t0.c13 END)));
SELECT ALL * FROM vt0 NOT INDEXED, t0 INNER JOIN rt0 ON 0.9118263187069104 WHERE ((((((((((((((rt0.c0)OR(rt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY rt0.c1, (NOT (CASE t0.c13  WHEN rt0.c0 THEN t0.c13 END));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt0.c0)OR(rt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON 0.9118263187069104 ORDER BY rt0.c1, (NOT (CASE t0.c13  WHEN rt0.c0 THEN t0.c13 END)));
SELECT ALL * FROM vt0 NOT INDEXED, t0 INNER JOIN rt0 ON 0.9118263187069104 WHERE ((((((((((((((rt0.c0)OR(rt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY rt0.c1, (NOT (CASE t0.c13  WHEN rt0.c0 THEN t0.c13 END));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (CASE 0.9674215555971284  WHEN ((NULL)-(t0.c13)) THEN '924187639' COLLATE BINARY ELSE ((t0.c13)*(t0.c13)) END) ORDER BY (t0.c13 IN (NULL, CAST(t0.c13 AS BLOB)))  NULLS LAST, t0.c13 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.9674215555971284  WHEN ((NULL)-(t0.c13)) THEN '924187639' COLLATE BINARY ELSE ((t0.c13)*(t0.c13)) END) IS TRUE)  as count FROM t0 ORDER BY (t0.c13 IN (NULL, CAST(t0.c13 AS BLOB)))  NULLS LAST, t0.c13 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (CASE 0.9674215555971284  WHEN ((NULL)-(t0.c13)) THEN '924187639' COLLATE BINARY ELSE ((t0.c13)*(t0.c13)) END) ORDER BY (t0.c13 IN (NULL, CAST(t0.c13 AS BLOB)))  NULLS LAST, t0.c13 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.9674215555971284  WHEN ((NULL)-(t0.c13)) THEN '924187639' COLLATE BINARY ELSE ((t0.c13)*(t0.c13)) END) IS TRUE)  as count FROM t0 ORDER BY (t0.c13 IN (NULL, CAST(t0.c13 AS BLOB)))  NULLS LAST, t0.c13 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (CASE 0.9674215555971284  WHEN ((NULL)-(t0.c13)) THEN '924187639' COLLATE BINARY ELSE ((t0.c13)*(t0.c13)) END) ORDER BY (t0.c13 IN (NULL, CAST(t0.c13 AS BLOB)))  NULLS LAST, t0.c13 DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0))>((vt0.c1))) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0))>((vt0.c1))) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0))>((vt0.c1))) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0))>((vt0.c1))) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0))>((vt0.c1))) COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM t0 INNER JOIN vt0 ON CASE UNLIKELY(x'')  WHEN (~ (rt0.c2)) THEN ((vt0.c0)GLOB('1211424560')) END FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE BINARY) BETWEEN ((rt0.c3 IN (rt0.c1))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE (((((rt0.c2)OR(x'')))OR(vt0.c1)) COLLATE NOCASE) ORDER BY ((((((rt0.c1)|(rt0.c2)))OR((('.D*H⾸-') ISNULL))))AND(rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(x'')))OR(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE UNLIKELY(x'')  WHEN (~ (rt0.c2)) THEN ((vt0.c0)GLOB('1211424560')) END FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE BINARY) BETWEEN ((rt0.c3 IN (rt0.c1))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) ORDER BY ((((((rt0.c1)|(rt0.c2)))OR((('.D*H⾸-') ISNULL))))AND(rt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN vt0 ON CASE UNLIKELY(x'')  WHEN (~ (rt0.c2)) THEN ((vt0.c0)GLOB('1211424560')) END FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE BINARY) BETWEEN ((rt0.c3 IN (rt0.c1))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE (((((rt0.c2)OR(x'')))OR(vt0.c1)) COLLATE NOCASE) ORDER BY ((((((rt0.c1)|(rt0.c2)))OR((('.D*H⾸-') ISNULL))))AND(rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(x'')))OR(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE UNLIKELY(x'')  WHEN (~ (rt0.c2)) THEN ((vt0.c0)GLOB('1211424560')) END FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE BINARY) BETWEEN ((rt0.c3 IN (rt0.c1))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) ORDER BY ((((((rt0.c1)|(rt0.c2)))OR((('.D*H⾸-') ISNULL))))AND(rt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c13)GLOB(t0.c13))) ISNULL)) ORDER BY ((t0.c13 COLLATE RTRIM) IS FALSE)  NULLS LAST, ((((t0.c13) ISNULL))+((~ (t0.c13)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13)GLOB(t0.c13))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c13 COLLATE RTRIM) IS FALSE)  NULLS LAST, ((((t0.c13) ISNULL))+((~ (t0.c13)))) ASC);
SELECT ALL * FROM t0 WHERE (((((t0.c13)GLOB(t0.c13))) ISNULL)) ORDER BY ((t0.c13 COLLATE RTRIM) IS FALSE)  NULLS LAST, ((((t0.c13) ISNULL))+((~ (t0.c13)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13)GLOB(t0.c13))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c13 COLLATE RTRIM) IS FALSE)  NULLS LAST, ((((t0.c13) ISNULL))+((~ (t0.c13)))) ASC);
SELECT ALL * FROM t0 WHERE (((((t0.c13)GLOB(t0.c13))) ISNULL)) ORDER BY ((t0.c13 COLLATE RTRIM) IS FALSE)  NULLS LAST, ((((t0.c13) ISNULL))+((~ (t0.c13)))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c13)&(t0.c13))) IS TRUE)) ORDER BY CAST(t0.c13 AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13)&(t0.c13))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c13 AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c13)&(t0.c13))) IS TRUE)) ORDER BY CAST(t0.c13 AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13)&(t0.c13))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c13 AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c13)&(t0.c13))) IS TRUE)) ORDER BY CAST(t0.c13 AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM t0, rt0, vt0 WHERE (CAST(CASE WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c3 END AS TEXT)) ORDER BY (((- (vt0.c1)))|(rt0.c2));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c3 END AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((- (vt0.c1)))|(rt0.c2)));
SELECT ALL * FROM t0, rt0, vt0 WHERE (CAST(CASE WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c3 END AS TEXT)) ORDER BY (((- (vt0.c1)))|(rt0.c2));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c3 END AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((- (vt0.c1)))|(rt0.c2)));
SELECT ALL * FROM t0, rt0, vt0 WHERE (CAST(CASE WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c3 END AS TEXT)) ORDER BY (((- (vt0.c1)))|(rt0.c2));
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY UNLIKELY(((((vt0.c0)OR(vt0.c0)))OR(t0.c13))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY UNLIKELY(((((vt0.c0)OR(vt0.c0)))OR(t0.c13))) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY UNLIKELY(((((vt0.c0)OR(vt0.c0)))OR(t0.c13))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY UNLIKELY(((((vt0.c0)OR(vt0.c0)))OR(t0.c13))) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY UNLIKELY(((((vt0.c0)OR(vt0.c0)))OR(t0.c13))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, '499928303', vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0)))) BETWEEN (NULL) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, '499928303', vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0)))) BETWEEN (NULL) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, '499928303', vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0)))) BETWEEN (NULL) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, '499928303', vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0)))) BETWEEN (NULL) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, '499928303', vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0)))) BETWEEN (NULL) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c3)<(rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (NULL)) ELSE rt0.c3 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3)<(rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (NULL)) ELSE rt0.c3 COLLATE RTRIM END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c3)<(rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (NULL)) ELSE rt0.c3 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3)<(rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (NULL)) ELSE rt0.c3 COLLATE RTRIM END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c3)<(rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (NULL)) ELSE rt0.c3 COLLATE RTRIM END);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (((rt0.c1)&(rt0.c2))) AND (((rt0.c2)=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOT BETWEEN (((rt0.c1)&(rt0.c2))) AND (((rt0.c2)==(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (((rt0.c1)&(rt0.c2))) AND (((rt0.c2)=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOT BETWEEN (((rt0.c1)&(rt0.c2))) AND (((rt0.c2)==(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (((rt0.c1)&(rt0.c2))) AND (((rt0.c2)=(rt0.c3)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON CAST(NULLIF(DISTINCT vt0.c0, rt0.c3) AS REAL) CROSS JOIN vt0 ON rt0.c2 COLLATE NOCASE WHERE ((((((vt0.c1, t0.c13, rt0.c2, vt0.c0, vt0.c1))<>((rt0.c1, vt0.c0, NULL, rt0.c3, rt0.c3)))) NOT BETWEEN (NULL) AND (UNLIKELY(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, t0.c13, rt0.c2, vt0.c0, vt0.c1))<>((rt0.c1, vt0.c0, NULL, rt0.c3, rt0.c3)))) NOT BETWEEN (NULL) AND (UNLIKELY(vt0.c1)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CAST(NULLIF(DISTINCT vt0.c0, rt0.c3) AS REAL) CROSS JOIN vt0 ON rt0.c2 COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON CAST(NULLIF(DISTINCT vt0.c0, rt0.c3) AS REAL) CROSS JOIN vt0 ON rt0.c2 COLLATE NOCASE WHERE ((((((vt0.c1, t0.c13, rt0.c2, vt0.c0, vt0.c1))<>((rt0.c1, vt0.c0, NULL, rt0.c3, rt0.c3)))) NOT BETWEEN (NULL) AND (UNLIKELY(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, t0.c13, rt0.c2, vt0.c0, vt0.c1))<>((rt0.c1, vt0.c0, NULL, rt0.c3, rt0.c3)))) NOT BETWEEN (NULL) AND (UNLIKELY(vt0.c1)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CAST(NULLIF(DISTINCT vt0.c0, rt0.c3) AS REAL) CROSS JOIN vt0 ON rt0.c2 COLLATE NOCASE);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c13)) BETWEEN ((0.411171619550474)) AND ((vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((t0.c13)) BETWEEN ((0.411171619550474)) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c13)) BETWEEN ((0.411171619550474)) AND ((vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((t0.c13)) BETWEEN ((0.411171619550474)) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c13)) BETWEEN ((0.411171619550474)) AND ((vt0.c1))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c2)) NOT BETWEEN (((NOT (rt0.c3)), rt0.c1 COLLATE BINARY, NULL COLLATE NOCASE)) AND ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END, ((rt0.c0)<<(rt0.c1)), (~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c3, rt0.c2)) NOT BETWEEN (((NOT (rt0.c3)), rt0.c1 COLLATE BINARY, NULL COLLATE NOCASE)) AND ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END, ((rt0.c0)<<(rt0.c1)), (~ (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c2)) NOT BETWEEN (((NOT (rt0.c3)), rt0.c1 COLLATE BINARY, NULL COLLATE NOCASE)) AND ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END, ((rt0.c0)<<(rt0.c1)), (~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c3, rt0.c2)) NOT BETWEEN (((NOT (rt0.c3)), rt0.c1 COLLATE BINARY, NULL COLLATE NOCASE)) AND ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END, ((rt0.c0)<<(rt0.c1)), (~ (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c2)) NOT BETWEEN (((NOT (rt0.c3)), rt0.c1 COLLATE BINARY, NULL COLLATE NOCASE)) AND ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END, ((rt0.c0)<<(rt0.c1)), (~ (rt0.c2))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)%(rt0.c1)) IN ())) ORDER BY x'' DESC  NULLS FIRST, CASE HEX(rt0.c0)  WHEN (((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, rt0.c1, vt0.c1))) THEN ((rt0.c0)==(rt0.c3)) WHEN ((rt0.c3)>(rt0.c3)) THEN rt0.c1 WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) THEN rt0.c2 END DESC  NULLS FIRST, ((CAST(rt0.c3 AS INTEGER)) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND('恼x')))AND(rt0.c2))) AND (CASE 0Xffffffffdf8c1af3  WHEN vt0.c0 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)%(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'' DESC  NULLS FIRST, CASE HEX(rt0.c0)  WHEN (((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, rt0.c1, vt0.c1))) THEN ((rt0.c0)=(rt0.c3)) WHEN ((rt0.c3)>(rt0.c3)) THEN rt0.c1 WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) THEN rt0.c2 END DESC  NULLS FIRST, ((CAST(rt0.c3 AS INTEGER)) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND('恼x')))AND(rt0.c2))) AND (CASE 0xffffffffdf8c1af3  WHEN vt0.c0 THEN rt0.c1 END)));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)%(rt0.c1)) IN ())) ORDER BY x'' DESC  NULLS FIRST, CASE HEX(rt0.c0)  WHEN (((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, rt0.c1, vt0.c1))) THEN ((rt0.c0)==(rt0.c3)) WHEN ((rt0.c3)>(rt0.c3)) THEN rt0.c1 WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) THEN rt0.c2 END DESC  NULLS FIRST, ((CAST(rt0.c3 AS INTEGER)) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND('恼x')))AND(rt0.c2))) AND (CASE 0Xffffffffdf8c1af3  WHEN vt0.c0 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)%(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'' DESC  NULLS FIRST, CASE HEX(rt0.c0)  WHEN (((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, rt0.c1, vt0.c1))) THEN ((rt0.c0)=(rt0.c3)) WHEN ((rt0.c3)>(rt0.c3)) THEN rt0.c1 WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) THEN rt0.c2 END DESC  NULLS FIRST, ((CAST(rt0.c3 AS INTEGER)) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND('恼x')))AND(rt0.c2))) AND (CASE 0xffffffffdf8c1af3  WHEN vt0.c0 THEN rt0.c1 END)));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)%(rt0.c1)) IN ())) ORDER BY x'' DESC  NULLS FIRST, CASE HEX(rt0.c0)  WHEN (((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, rt0.c1, vt0.c1))) THEN ((rt0.c0)==(rt0.c3)) WHEN ((rt0.c3)>(rt0.c3)) THEN rt0.c1 WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) THEN rt0.c2 END DESC  NULLS FIRST, ((CAST(rt0.c3 AS INTEGER)) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND('恼x')))AND(rt0.c2))) AND (CASE 0Xffffffffdf8c1af3  WHEN vt0.c0 THEN rt0.c1 END));
SELECT COUNT(*) FROM rt0, t0 WHERE (PRINTF((- (rt0.c0)))) ORDER BY CAST(t0.c13 AS REAL) DESC, (- (((rt0.c3)OR(rt0.c1)))), (0.8827044930134279 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((- (rt0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(t0.c13 AS REAL) DESC, (- (((rt0.c3)OR(rt0.c1)))), (0.8827044930134279 IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (PRINTF((- (rt0.c0)))) ORDER BY CAST(t0.c13 AS REAL) DESC, (- (((rt0.c3)OR(rt0.c1)))), (0.8827044930134279 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((- (rt0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(t0.c13 AS REAL) DESC, (- (((rt0.c3)OR(rt0.c1)))), (0.8827044930134279 IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (PRINTF((- (rt0.c0)))) ORDER BY CAST(t0.c13 AS REAL) DESC, (- (((rt0.c3)OR(rt0.c1)))), (0.8827044930134279 IN ()) ASC  NULLS LAST;
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((((t0.c13)&(vt0.c0))) BETWEEN ((((t0.c13))<>((vt0.c1)))) AND ((t0.c13 IN (vt0.c0))))) ORDER BY ((((((((((vt0.c0) IS TRUE))AND(((vt0.c1) IS TRUE))))AND(LOWER(t0.c13))))OR(((vt0.c1)=(vt0.c1)))))AND((((t0.c13, t0.c13, vt0.c0)) BETWEEN ((t0.c13, vt0.c0, t0.c13)) AND ((t0.c13, vt0.c0, vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c13)&(vt0.c0))) BETWEEN ((((t0.c13))<>((vt0.c1)))) AND ((t0.c13 IN (vt0.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((((((((vt0.c0) IS TRUE))AND(((vt0.c1) IS TRUE))))AND(LOWER(t0.c13))))OR(((vt0.c1)==(vt0.c1)))))AND((((t0.c13, t0.c13, vt0.c0)) BETWEEN ((t0.c13, vt0.c0, t0.c13)) AND ((t0.c13, vt0.c0, vt0.c0))))) DESC  NULLS LAST);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((((t0.c13)&(vt0.c0))) BETWEEN ((((t0.c13))<>((vt0.c1)))) AND ((t0.c13 IN (vt0.c0))))) ORDER BY ((((((((((vt0.c0) IS TRUE))AND(((vt0.c1) IS TRUE))))AND(LOWER(t0.c13))))OR(((vt0.c1)=(vt0.c1)))))AND((((t0.c13, t0.c13, vt0.c0)) BETWEEN ((t0.c13, vt0.c0, t0.c13)) AND ((t0.c13, vt0.c0, vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c13)&(vt0.c0))) BETWEEN ((((t0.c13))<>((vt0.c1)))) AND ((t0.c13 IN (vt0.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((((((((vt0.c0) IS TRUE))AND(((vt0.c1) IS TRUE))))AND(LOWER(t0.c13))))OR(((vt0.c1)==(vt0.c1)))))AND((((t0.c13, t0.c13, vt0.c0)) BETWEEN ((t0.c13, vt0.c0, t0.c13)) AND ((t0.c13, vt0.c0, vt0.c0))))) DESC  NULLS LAST);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((((t0.c13)&(vt0.c0))) BETWEEN ((((t0.c13))<>((vt0.c1)))) AND ((t0.c13 IN (vt0.c0))))) ORDER BY ((((((((((vt0.c0) IS TRUE))AND(((vt0.c1) IS TRUE))))AND(LOWER(t0.c13))))OR(((vt0.c1)=(vt0.c1)))))AND((((t0.c13, t0.c13, vt0.c0)) BETWEEN ((t0.c13, vt0.c0, t0.c13)) AND ((t0.c13, vt0.c0, vt0.c0))))) DESC  NULLS LAST;
SELECT * FROM rt0, t0, vt0 WHERE (((t0.c13 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c13 IN ()) IN ())) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((t0.c13 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c13 IN ()) IN ())) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((t0.c13 IN ()) IN ()));
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((vt0.c1) NOT BETWEEN (t0.c13) AND (rt0.c2)))-(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (t0.c13) AND (rt0.c2)))-(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((vt0.c1) NOT BETWEEN (t0.c13) AND (rt0.c2)))-(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (t0.c13) AND (rt0.c2)))-(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((vt0.c1) NOT BETWEEN (t0.c13) AND (rt0.c2)))-(CAST(rt0.c0 AS INTEGER))));
SELECT ALL * FROM t0 WHERE ((NOT ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((NULL IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((NULL IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT ((NULL IN ()))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c1);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0)>=(vt0.c1)) AS NUMERIC) WHERE (IFNULL(((vt0.c1)<=(rt0.c3)), CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 ELSE vt0.c1 END)) ORDER BY (((((rt0.c1) ISNULL)))<>((x''))) ASC, (((rt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE)) AND (((NOT (vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt0.c1)<=(rt0.c3)), CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 ELSE vt0.c1 END)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0)>=(vt0.c1)) AS NUMERIC) ORDER BY (((((rt0.c1) ISNULL)))<>((x''))) ASC, (((rt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE)) AND (((NOT (vt0.c1))))) DESC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0)>=(vt0.c1)) AS NUMERIC) WHERE (IFNULL(((vt0.c1)<=(rt0.c3)), CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 ELSE vt0.c1 END)) ORDER BY (((((rt0.c1) ISNULL)))<>((x''))) ASC, (((rt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE)) AND (((NOT (vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt0.c1)<=(rt0.c3)), CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 ELSE vt0.c1 END)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0)>=(vt0.c1)) AS NUMERIC) ORDER BY (((((rt0.c1) ISNULL)))<>((x''))) ASC, (((rt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE)) AND (((NOT (vt0.c1))))) DESC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0)>=(vt0.c1)) AS NUMERIC) WHERE (IFNULL(((vt0.c1)<=(rt0.c3)), CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 ELSE vt0.c1 END)) ORDER BY (((((rt0.c1) ISNULL)))<>((x''))) ASC, (((rt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE)) AND (((NOT (vt0.c1))))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (+ (((vt0.c1)||(rt0.c0)))) INNER JOIN t0 ON (('-1599027586')>>(((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE ((((((rt0.c2))!=(('')))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))!=(('')))) IS FALSE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (+ (((vt0.c1)||(rt0.c0)))) INNER JOIN t0 ON (('-1599027586')>>(((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (+ (((vt0.c1)||(rt0.c0)))) INNER JOIN t0 ON (('-1599027586')>>(((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE ((((((rt0.c2))!=(('')))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))!=(('')))) IS FALSE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (+ (((vt0.c1)||(rt0.c0)))) INNER JOIN t0 ON (('-1599027586')>>(((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (+ (((vt0.c1)||(rt0.c0)))) INNER JOIN t0 ON (('-1599027586')>>(((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE ((((((rt0.c2))!=(('')))) IS FALSE));
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c2 THEN NULL END  WHEN NULL THEN '' ELSE (NOT (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c0  WHEN rt0.c2 THEN NULL END  WHEN NULL THEN '' ELSE (NOT (rt0.c3)) END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c2 THEN NULL END  WHEN NULL THEN '' ELSE (NOT (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c0  WHEN rt0.c2 THEN NULL END  WHEN NULL THEN '' ELSE (NOT (rt0.c3)) END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c2 THEN NULL END  WHEN NULL THEN '' ELSE (NOT (rt0.c3)) END);
SELECT COUNT(*) FROM t0 WHERE (t0.c13) ORDER BY (~ (CAST(t0.c13 AS TEXT))) ASC, ((t0.c13) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c13) IS TRUE)  as count FROM t0 ORDER BY (~ (CAST(t0.c13 AS TEXT))) ASC, ((t0.c13) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c13) ORDER BY (~ (CAST(t0.c13 AS TEXT))) ASC, ((t0.c13) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c13) IS TRUE)  as count FROM t0 ORDER BY (~ (CAST(t0.c13 AS TEXT))) ASC, ((t0.c13) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c13) ORDER BY (~ (CAST(t0.c13 AS TEXT))) ASC, ((t0.c13) IS TRUE)  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c1)<<(rt0.c2)))GLOB(((rt0.c2)<(rt0.c2))))) ORDER BY CAST((rt0.c2 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<<(rt0.c2)))GLOB(((rt0.c2)<(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c2 IN ()) AS REAL));
SELECT * FROM rt0 WHERE (((((rt0.c1)<<(rt0.c2)))GLOB(((rt0.c2)<(rt0.c2))))) ORDER BY CAST((rt0.c2 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<<(rt0.c2)))GLOB(((rt0.c2)<(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c2 IN ()) AS REAL));
SELECT * FROM rt0 WHERE (((((rt0.c1)<<(rt0.c2)))GLOB(((rt0.c2)<(rt0.c2))))) ORDER BY CAST((rt0.c2 IN ()) AS REAL);
SELECT * FROM rt0, t0 WHERE (ABS(DISTINCT ((rt0.c3) NOT BETWEEN (t0.c13) AND (rt0.c2)))) ORDER BY (~ ((NOT (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((rt0.c3) NOT BETWEEN (t0.c13) AND (rt0.c2)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (~ ((NOT (rt0.c1))))  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (ABS(DISTINCT ((rt0.c3) NOT BETWEEN (t0.c13) AND (rt0.c2)))) ORDER BY (~ ((NOT (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((rt0.c3) NOT BETWEEN (t0.c13) AND (rt0.c2)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (~ ((NOT (rt0.c1))))  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (ABS(DISTINCT ((rt0.c3) NOT BETWEEN (t0.c13) AND (rt0.c2)))) ORDER BY (~ ((NOT (rt0.c1))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((TOTAL_CHANGES()) IS TRUE)) ORDER BY (((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c0, vt0.c0))))OR(CASE vt0.c0  WHEN '-917494092' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES()) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c0, vt0.c0))))OR(CASE vt0.c0  WHEN '-917494092' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((TOTAL_CHANGES()) IS TRUE)) ORDER BY (((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c0, vt0.c0))))OR(CASE vt0.c0  WHEN '-917494092' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES()) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c0, vt0.c0))))OR(CASE vt0.c0  WHEN '-917494092' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((TOTAL_CHANGES()) IS TRUE)) ORDER BY (((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c0, vt0.c0))))OR(CASE vt0.c0  WHEN '-917494092' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)) THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END) ORDER BY CAST((('') ISNULL) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)) THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0 ORDER BY CAST((('') ISNULL) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)) THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END) ORDER BY CAST((('') ISNULL) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)) THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0 ORDER BY CAST((('') ISNULL) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)) THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END) ORDER BY CAST((('') ISNULL) AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt0, rt0 WHERE (((rt0.c1)|(((rt0.c0)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)|(((rt0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((rt0.c1)|(((rt0.c0)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)|(((rt0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((rt0.c1)|(((rt0.c0)<=(rt0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE ((((- (vt0.c0)))!=(('0.6985592546963099' IN (vt0.c1))))) ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((t0.c13, vt0.c0, vt0.c1)) AND ((vt0.c0, NULL, '-1944034158'))) THEN CASE x''  WHEN t0.c13 THEN vt0.c0 ELSE '-947530471' END WHEN (~ (vt0.c1)) THEN (((t0.c13, vt0.c1, vt0.c0, vt0.c0, NULL)) BETWEEN ((t0.c13, t0.c13, t0.c13, t0.c13, vt0.c0)) AND ((vt0.c0, 'zꏛ', t0.c13, t0.c13, vt0.c0))) WHEN CAST(t0.c13 AS BLOB) THEN ((((t0.c13)AND(t0.c13)))AND(t0.c13)) END;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))<>(('0.6985592546963099' IN (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((t0.c13, vt0.c0, vt0.c1)) AND ((vt0.c0, NULL, '-1944034158'))) THEN CASE x''  WHEN t0.c13 THEN vt0.c0 ELSE '-947530471' END WHEN (~ (vt0.c1)) THEN (((t0.c13, vt0.c1, vt0.c0, vt0.c0, NULL)) BETWEEN ((t0.c13, t0.c13, t0.c13, t0.c13, vt0.c0)) AND ((vt0.c0, 'zꏛ', t0.c13, t0.c13, vt0.c0))) WHEN CAST(t0.c13 AS BLOB) THEN ((((t0.c13)AND(t0.c13)))AND(t0.c13)) END);
SELECT ALL * FROM vt0, t0 WHERE ((((- (vt0.c0)))!=(('0.6985592546963099' IN (vt0.c1))))) ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((t0.c13, vt0.c0, vt0.c1)) AND ((vt0.c0, NULL, '-1944034158'))) THEN CASE x''  WHEN t0.c13 THEN vt0.c0 ELSE '-947530471' END WHEN (~ (vt0.c1)) THEN (((t0.c13, vt0.c1, vt0.c0, vt0.c0, NULL)) BETWEEN ((t0.c13, t0.c13, t0.c13, t0.c13, vt0.c0)) AND ((vt0.c0, 'zꏛ', t0.c13, t0.c13, vt0.c0))) WHEN CAST(t0.c13 AS BLOB) THEN ((((t0.c13)AND(t0.c13)))AND(t0.c13)) END;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))<>(('0.6985592546963099' IN (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((t0.c13, vt0.c0, vt0.c1)) AND ((vt0.c0, NULL, '-1944034158'))) THEN CASE x''  WHEN t0.c13 THEN vt0.c0 ELSE '-947530471' END WHEN (~ (vt0.c1)) THEN (((t0.c13, vt0.c1, vt0.c0, vt0.c0, NULL)) BETWEEN ((t0.c13, t0.c13, t0.c13, t0.c13, vt0.c0)) AND ((vt0.c0, 'zꏛ', t0.c13, t0.c13, vt0.c0))) WHEN CAST(t0.c13 AS BLOB) THEN ((((t0.c13)AND(t0.c13)))AND(t0.c13)) END);
SELECT ALL * FROM vt0, t0 WHERE ((((- (vt0.c0)))!=(('0.6985592546963099' IN (vt0.c1))))) ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((t0.c13, vt0.c0, vt0.c1)) AND ((vt0.c0, NULL, '-1944034158'))) THEN CASE x''  WHEN t0.c13 THEN vt0.c0 ELSE '-947530471' END WHEN (~ (vt0.c1)) THEN (((t0.c13, vt0.c1, vt0.c0, vt0.c0, NULL)) BETWEEN ((t0.c13, t0.c13, t0.c13, t0.c13, vt0.c0)) AND ((vt0.c0, 'zꏛ', t0.c13, t0.c13, vt0.c0))) WHEN CAST(t0.c13 AS BLOB) THEN ((((t0.c13)AND(t0.c13)))AND(t0.c13)) END;
SELECT * FROM vt0, t0 NOT INDEXED WHERE ('1919702812');
SELECT SUM(count) FROM (SELECT (('1919702812') IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 NOT INDEXED WHERE ('1919702812');
SELECT SUM(count) FROM (SELECT (('1919702812') IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 NOT INDEXED WHERE ('1919702812');
SELECT * FROM rt0, t0, vt0 WHERE ((((NOT (rt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (((rt0.c0)/(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (((rt0.c0)/(rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((NOT (rt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (((rt0.c0)/(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (((rt0.c0)/(rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((NOT (rt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (((rt0.c0)/(rt0.c1)))));
SELECT ALL * FROM rt0, vt0 WHERE (((((0.755306454981374)/(rt0.c0)))<=(rt0.c1))) ORDER BY (((((((((rt0.c3 IN ()))AND(rt0.c3)))OR((rt0.c1 IN (rt0.c1)))))AND(JULIANDAY(rt0.c2, rt0.c0, vt0.c1))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.755306454981374)/(rt0.c0)))<=(rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((((rt0.c3 IN ()))AND(rt0.c3)))OR((rt0.c1 IN (rt0.c1)))))AND(JULIANDAY(rt0.c2, rt0.c0, vt0.c1))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((0.755306454981374)/(rt0.c0)))<=(rt0.c1))) ORDER BY (((((((((rt0.c3 IN ()))AND(rt0.c3)))OR((rt0.c1 IN (rt0.c1)))))AND(JULIANDAY(rt0.c2, rt0.c0, vt0.c1))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.755306454981374)/(rt0.c0)))<=(rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((((rt0.c3 IN ()))AND(rt0.c3)))OR((rt0.c1 IN (rt0.c1)))))AND(JULIANDAY(rt0.c2, rt0.c0, vt0.c1))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((0.755306454981374)/(rt0.c0)))<=(rt0.c1))) ORDER BY (((((((((rt0.c3 IN ()))AND(rt0.c3)))OR((rt0.c1 IN (rt0.c1)))))AND(JULIANDAY(rt0.c2, rt0.c0, vt0.c1))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))  NULLS FIRST;
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 WHERE (CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((rt0.c0)IS NOT(t0.c13)) WHEN (((rt0.c0, t0.c13, rt0.c1))=((rt0.c1, x'9e80', rt0.c2))) THEN TYPEOF(t0.c13) WHEN t0.c13 THEN t0.c13 COLLATE BINARY END) ORDER BY ((rt0.c1)%(t0.c13)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((rt0.c0)IS NOT(t0.c13)) WHEN (((rt0.c0, t0.c13, rt0.c1))=((rt0.c1, x'9e80', rt0.c2))) THEN TYPEOF(t0.c13) WHEN t0.c13 THEN t0.c13 COLLATE BINARY END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 ORDER BY ((rt0.c1)%(t0.c13)) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 WHERE (CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((rt0.c0)IS NOT(t0.c13)) WHEN (((rt0.c0, t0.c13, rt0.c1))=((rt0.c1, x'9e80', rt0.c2))) THEN TYPEOF(t0.c13) WHEN t0.c13 THEN t0.c13 COLLATE BINARY END) ORDER BY ((rt0.c1)%(t0.c13)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((rt0.c0)IS NOT(t0.c13)) WHEN (((rt0.c0, t0.c13, rt0.c1))=((rt0.c1, x'9e80', rt0.c2))) THEN TYPEOF(t0.c13) WHEN t0.c13 THEN t0.c13 COLLATE BINARY END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 ORDER BY ((rt0.c1)%(t0.c13)) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 WHERE (CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((rt0.c0)IS NOT(t0.c13)) WHEN (((rt0.c0, t0.c13, rt0.c1))=((rt0.c1, x'9e80', rt0.c2))) THEN TYPEOF(t0.c13) WHEN t0.c13 THEN t0.c13 COLLATE BINARY END) ORDER BY ((rt0.c1)%(t0.c13)) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (((vt0.c0) ISNULL))));
SELECT * FROM rt0, t0 WHERE (((((rt0.c2)=(rt0.c0)))/(((rt0.c1)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)=(rt0.c0)))/(((rt0.c1)+(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((rt0.c2)=(rt0.c0)))/(((rt0.c1)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)=(rt0.c0)))/(((rt0.c1)+(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((rt0.c2)=(rt0.c0)))/(((rt0.c1)+(rt0.c1)))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.43175761282524927) THEN (((vt0.c0))>=((vt0.c0))) WHEN (- (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN 'B?CEN]' THEN HEX(vt0.c0) WHEN (((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c1) BETWEEN ('') AND (vt0.c0)) THEN (~ (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.43175761282524927) THEN (((vt0.c0))>=((vt0.c0))) WHEN (- (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN 'B?CEN]' THEN HEX(vt0.c0) WHEN (((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c1) BETWEEN ('') AND (vt0.c0)) THEN (~ (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.43175761282524927) THEN (((vt0.c0))>=((vt0.c0))) WHEN (- (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN 'B?CEN]' THEN HEX(vt0.c0) WHEN (((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c1) BETWEEN ('') AND (vt0.c0)) THEN (~ (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.43175761282524927) THEN (((vt0.c0))>=((vt0.c0))) WHEN (- (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN 'B?CEN]' THEN HEX(vt0.c0) WHEN (((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c1) BETWEEN ('') AND (vt0.c0)) THEN (~ (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.43175761282524927) THEN (((vt0.c0))>=((vt0.c0))) WHEN (- (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN 'B?CEN]' THEN HEX(vt0.c0) WHEN (((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c1) BETWEEN ('') AND (vt0.c0)) THEN (~ (vt0.c1)) END);
SELECT ALL * FROM vt0 WHERE (CASE -1.046586805E9  WHEN vt0.c0 THEN vt0.c1 END COLLATE RTRIM) ORDER BY ((((vt0.c1)GLOB(vt0.c1))) NOT NULL) DESC, (((vt0.c0)) BETWEEN (((NOT (vt0.c1)))) AND ((vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE -1.046586805E9  WHEN vt0.c0 THEN vt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)GLOB(vt0.c1))) NOT NULL) DESC, (((vt0.c0)) BETWEEN (((NOT (vt0.c1)))) AND ((vt0.c1))) DESC);
SELECT ALL * FROM vt0 WHERE (CASE -1.046586805E9  WHEN vt0.c0 THEN vt0.c1 END COLLATE RTRIM) ORDER BY ((((vt0.c1)GLOB(vt0.c1))) NOT NULL) DESC, (((vt0.c0)) BETWEEN (((NOT (vt0.c1)))) AND ((vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE -1.046586805E9  WHEN vt0.c0 THEN vt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)GLOB(vt0.c1))) NOT NULL) DESC, (((vt0.c0)) BETWEEN (((NOT (vt0.c1)))) AND ((vt0.c1))) DESC);
SELECT ALL * FROM vt0 WHERE (CASE -1.046586805E9  WHEN vt0.c0 THEN vt0.c1 END COLLATE RTRIM) ORDER BY ((((vt0.c1)GLOB(vt0.c1))) NOT NULL) DESC, (((vt0.c0)) BETWEEN (((NOT (vt0.c1)))) AND ((vt0.c1))) DESC;
SELECT * FROM rt0 WHERE ((- (((rt0.c3)>(rt0.c0))))) ORDER BY (((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c3))))<((((rt0.c2)<=(rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c3)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c3))))<((((rt0.c2)<=(rt0.c0))))) DESC);
SELECT * FROM rt0 WHERE ((- (((rt0.c3)>(rt0.c0))))) ORDER BY (((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c3))))<((((rt0.c2)<=(rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c3)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c3))))<((((rt0.c2)<=(rt0.c0))))) DESC);
SELECT * FROM rt0 WHERE ((- (((rt0.c3)>(rt0.c0))))) ORDER BY (((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c3))))<((((rt0.c2)<=(rt0.c0))))) DESC;
SELECT ALL * FROM t0, rt0, vt0 WHERE (((rt0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((rt0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((rt0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY);
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c2)/(rt0.c0))))==(((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c13)))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)/(rt0.c0))))=(((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c13))))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c2)/(rt0.c0))))==(((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c13)))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)/(rt0.c0))))=(((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c13))))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c2)/(rt0.c0))))==(((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c13)))))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>>(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>>(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>>(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>>(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>>(vt0.c0))) NOT NULL));
SELECT * FROM t0 WHERE (((((((t0.c13)AND(t0.c13)))AND('')))>=(((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c13)AND(t0.c13)))AND('')))>=(((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c13)AND(t0.c13)))AND('')))>=(((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c13)AND(t0.c13)))AND('')))>=(((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c13)AND(t0.c13)))AND('')))>=(((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((((t0.c13) NOT NULL))) AND ((((vt0.c1) NOT NULL)))) WHERE ((((((~ (t0.c13)))AND(NULL)))AND(NULL))) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c13)))AND(NULL)))AND(NULL))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((((t0.c13) NOT NULL))) AND ((((vt0.c1) NOT NULL)))) ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((((t0.c13) NOT NULL))) AND ((((vt0.c1) NOT NULL)))) WHERE ((((((~ (t0.c13)))AND(NULL)))AND(NULL))) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c13)))AND(NULL)))AND(NULL))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((((t0.c13) NOT NULL))) AND ((((vt0.c1) NOT NULL)))) ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((((t0.c13) NOT NULL))) AND ((((vt0.c1) NOT NULL)))) WHERE ((((((~ (t0.c13)))AND(NULL)))AND(NULL))) ORDER BY vt0.c1  NULLS FIRST;
SELECT ALL * FROM rt0, t0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 INDEXED BY i24, t0, vt0 WHERE (((((rt0.c2)!=(vt0.c1)))|(rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)!=(vt0.c1)))|(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 INDEXED BY i24, t0, vt0);
SELECT ALL * FROM rt0 INDEXED BY i24, t0, vt0 WHERE (((((rt0.c2)!=(vt0.c1)))|(rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)!=(vt0.c1)))|(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 INDEXED BY i24, t0, vt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END))) ORDER BY (- (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0 ORDER BY (- (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END))) ORDER BY (- (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0 ORDER BY (- (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END))) ORDER BY (- (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((NULL)*(((((((((rt0.c1)OR(rt0.c3)))OR(vt0.c1)))AND(rt0.c0)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)*(((((((((rt0.c1)OR(rt0.c3)))OR(vt0.c1)))AND(rt0.c0)))AND(NULL))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((NULL)*(((((((((rt0.c1)OR(rt0.c3)))OR(vt0.c1)))AND(rt0.c0)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)*(((((((((rt0.c1)OR(rt0.c3)))OR(vt0.c1)))AND(rt0.c0)))AND(NULL))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((NULL)*(((((((((rt0.c1)OR(rt0.c3)))OR(vt0.c1)))AND(rt0.c0)))AND(NULL)))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((((((((vt0.c0 IN (rt0.c2)))OR(((rt0.c2)<(rt0.c3)))))OR(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(rt0.c1)))AND(vt0.c0 COLLATE BINARY)) FULL OUTER JOIN rt0 ON LOWER(DISTINCT ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))) WHERE ((- (LAST_INSERT_ROWID()))) ORDER BY ((UPPER(vt0.c0))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((((((((vt0.c0 IN (rt0.c2)))OR(((rt0.c2)<(rt0.c3)))))OR(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(rt0.c1)))AND(vt0.c0 COLLATE BINARY)) FULL OUTER JOIN rt0 ON LOWER(DISTINCT ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))) ORDER BY ((UPPER(vt0.c0))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1)))) ASC);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((((((((vt0.c0 IN (rt0.c2)))OR(((rt0.c2)<(rt0.c3)))))OR(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(rt0.c1)))AND(vt0.c0 COLLATE BINARY)) FULL OUTER JOIN rt0 ON LOWER(DISTINCT ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))) WHERE ((- (LAST_INSERT_ROWID()))) ORDER BY ((UPPER(vt0.c0))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((((((((vt0.c0 IN (rt0.c2)))OR(((rt0.c2)<(rt0.c3)))))OR(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(rt0.c1)))AND(vt0.c0 COLLATE BINARY)) FULL OUTER JOIN rt0 ON LOWER(DISTINCT ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))) ORDER BY ((UPPER(vt0.c0))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1)))) ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (vt0.c1) ORDER BY (((vt0.c0) ISNULL) IN ());
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 ORDER BY (((vt0.c0) ISNULL) IN ()));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (vt0.c1) ORDER BY (((vt0.c0) ISNULL) IN ());
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 ORDER BY (((vt0.c0) ISNULL) IN ()));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (vt0.c1) ORDER BY (((vt0.c0) ISNULL) IN ());
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c1, rt0.c1, rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c1, rt0.c1, rt0.c1))) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c1, rt0.c1, rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c1, rt0.c1, rt0.c1))) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c1, rt0.c1, rt0.c1))) IN ()));
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((NOT (rt0.c2)))LIKE(((vt0.c0)>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))LIKE(((vt0.c0)>(rt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((NOT (rt0.c2)))LIKE(((vt0.c0)>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))LIKE(((vt0.c0)>(rt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((NOT (rt0.c2)))LIKE(((vt0.c0)>(rt0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c13)) BETWEEN ((((((((((((((t0.c13)AND(t0.c13)))AND(t0.c13)))OR(t0.c13)))OR(t0.c13)))AND(t0.c13)))AND(t0.c13)))) AND ((((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)))))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c13)) BETWEEN ((((((((((((((t0.c13)AND(t0.c13)))AND(t0.c13)))OR(t0.c13)))OR(t0.c13)))AND(t0.c13)))AND(t0.c13)))) AND ((((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)))))) IS TRUE)  as count FROM t0 ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c13)) BETWEEN ((((((((((((((t0.c13)AND(t0.c13)))AND(t0.c13)))OR(t0.c13)))OR(t0.c13)))AND(t0.c13)))AND(t0.c13)))) AND ((((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)))))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c13)) BETWEEN ((((((((((((((t0.c13)AND(t0.c13)))AND(t0.c13)))OR(t0.c13)))OR(t0.c13)))AND(t0.c13)))AND(t0.c13)))) AND ((((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)))))) IS TRUE)  as count FROM t0 ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c13)) BETWEEN ((((((((((((((t0.c13)AND(t0.c13)))AND(t0.c13)))OR(t0.c13)))OR(t0.c13)))AND(t0.c13)))AND(t0.c13)))) AND ((((t0.c13) NOT BETWEEN (t0.c13) AND (t0.c13)))))) ORDER BY x'' DESC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE (((~ (rt0.c0)) IN ())) ORDER BY (((~ (rt0.c0))) BETWEEN (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END) AND ((~ (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY (((~ (rt0.c0))) BETWEEN (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END) AND ((~ (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((~ (rt0.c0)) IN ())) ORDER BY (((~ (rt0.c0))) BETWEEN (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END) AND ((~ (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY (((~ (rt0.c0))) BETWEEN (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END) AND ((~ (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((~ (rt0.c0)) IN ())) ORDER BY (((~ (rt0.c0))) BETWEEN (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END) AND ((~ (rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ('166499925') ORDER BY ((((((((NULL)AND(rt0.c0)))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))AND(UPPER(rt0.c0))))OR(((x'793fab05ee5b')IS(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('166499925') IS TRUE)  as count FROM rt0 ORDER BY ((((((((NULL)AND(rt0.c0)))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))AND(UPPER(rt0.c0))))OR(((x'793fab05ee5b')IS(rt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('166499925') ORDER BY ((((((((NULL)AND(rt0.c0)))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))AND(UPPER(rt0.c0))))OR(((x'793fab05ee5b')IS(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('166499925') IS TRUE)  as count FROM rt0 ORDER BY ((((((((NULL)AND(rt0.c0)))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))AND(UPPER(rt0.c0))))OR(((x'793fab05ee5b')IS(rt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('166499925') ORDER BY ((((((((NULL)AND(rt0.c0)))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))AND(UPPER(rt0.c0))))OR(((x'793fab05ee5b')IS(rt0.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (UNICODE(((t0.c13) NOTNULL))) ORDER BY (((((rt0.c1, rt0.c0, vt0.c1)) NOT BETWEEN ((NULL, vt0.c0, rt0.c1)) AND ((rt0.c2, t0.c13, t0.c13)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((t0.c13) NOTNULL))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((((rt0.c1, rt0.c0, vt0.c1)) NOT BETWEEN ((NULL, vt0.c0, rt0.c1)) AND ((rt0.c2, t0.c13, t0.c13)))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (UNICODE(((t0.c13) NOTNULL))) ORDER BY (((((rt0.c1, rt0.c0, vt0.c1)) NOT BETWEEN ((NULL, vt0.c0, rt0.c1)) AND ((rt0.c2, t0.c13, t0.c13)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((t0.c13) NOTNULL))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((((rt0.c1, rt0.c0, vt0.c1)) NOT BETWEEN ((NULL, vt0.c0, rt0.c1)) AND ((rt0.c2, t0.c13, t0.c13)))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (UNICODE(((t0.c13) NOTNULL))) ORDER BY (((((rt0.c1, rt0.c0, vt0.c1)) NOT BETWEEN ((NULL, vt0.c0, rt0.c1)) AND ((rt0.c2, t0.c13, t0.c13)))) ISNULL);
SELECT COUNT(*) FROM vt0, t0, rt0 NOT INDEXED WHERE (highlight(((rt0.c2) NOT BETWEEN (x'') AND (rt0.c0)), IFNULL(0.4397678255574421, vt0.c1), (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((x'f07e'))), CASE WHEN NULL THEN vt0.c0 ELSE x'44dd' END)) ORDER BY (NOT (rt0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((highlight(((rt0.c2) NOT BETWEEN (x'') AND (rt0.c0)), IFNULL(0.4397678255574421, vt0.c1), (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((x'f07e'))), CASE WHEN NULL THEN vt0.c0 ELSE x'44dd' END)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (NOT (rt0.c2)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 NOT INDEXED WHERE (highlight(((rt0.c2) NOT BETWEEN (x'') AND (rt0.c0)), IFNULL(0.4397678255574421, vt0.c1), (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((x'f07e'))), CASE WHEN NULL THEN vt0.c0 ELSE x'44dd' END)) ORDER BY (NOT (rt0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((highlight(((rt0.c2) NOT BETWEEN (x'') AND (rt0.c0)), IFNULL(0.4397678255574421, vt0.c1), (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((x'f07e'))), CASE WHEN NULL THEN vt0.c0 ELSE x'44dd' END)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (NOT (rt0.c2)) COLLATE RTRIM DESC);
SELECT ALL * FROM vt0, t0 WHERE ((+ ((~ (t0.c13)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (t0.c13))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((+ ((~ (t0.c13)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (t0.c13))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((+ ((~ (t0.c13)))));
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((vt0.c0)&(rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((vt0.c0)&(rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((vt0.c0)&(rt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN (((((rt0.c1))>((vt0.c0))))) AND (((NOT ('~\/Q{[칶y[\n}'))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((((rt0.c1))>((vt0.c0))))) AND (((NOT ('~\/Q{[칶y[\n}')))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN (((((rt0.c1))>((vt0.c0))))) AND (((NOT ('~\/Q{[칶y[\n}'))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((((rt0.c1))>((vt0.c0))))) AND (((NOT ('~\/Q{[칶y[\n}')))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN (((((rt0.c1))>((vt0.c0))))) AND (((NOT ('~\/Q{[칶y[\n}'))))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3 IN ()))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3 IN ()))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3 IN ()))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3 IN ()))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3 IN ()))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((rt0.c3) NOT NULL))));
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c2  NULLS FIRST, (((rt0.c2 IN (rt0.c3, rt0.c2)))%((rt0.c3 IN (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST, (((rt0.c2 IN (rt0.c3, rt0.c2)))%((rt0.c3 IN (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c2  NULLS FIRST, (((rt0.c2 IN (rt0.c3, rt0.c2)))%((rt0.c3 IN (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST, (((rt0.c2 IN (rt0.c3, rt0.c2)))%((rt0.c3 IN (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c2  NULLS FIRST, (((rt0.c2 IN (rt0.c3, rt0.c2)))%((rt0.c3 IN (rt0.c1))));
SELECT COUNT(*) FROM rt0 WHERE (('V#7Sa䃬G' IN (((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((('V#7Sa䃬G' IN (((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (('V#7Sa䃬G' IN (((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((('V#7Sa䃬G' IN (((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (('V#7Sa䃬G' IN (((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0)))));
SELECT * FROM vt0, t0, rt0 WHERE (((((rt0.c1)AND(rt0.c0)))OR(t0.c13)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c0)))OR(t0.c13)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((rt0.c1)AND(rt0.c0)))OR(t0.c13)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c0)))OR(t0.c13)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((rt0.c1)AND(rt0.c0)))OR(t0.c13)) COLLATE RTRIM);
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((((((CASE WHEN '-2126975236' THEN vt0.c1 END)OR(COALESCE(DISTINCT t0.c13, vt0.c1))))AND((((vt0.c1, vt0.c1, rt0.c1)) BETWEEN ((rt0.c1, x'0296', rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c1))))))OR(0x6ec1ca32)))AND(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN '-2126975236' THEN vt0.c1 END)OR(COALESCE(DISTINCT t0.c13, vt0.c1))))AND((((vt0.c1, vt0.c1, rt0.c1)) BETWEEN ((rt0.c1, x'0296', rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c1))))))OR(0x6ec1ca32)))AND(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((((((CASE WHEN '-2126975236' THEN vt0.c1 END)OR(COALESCE(DISTINCT t0.c13, vt0.c1))))AND((((vt0.c1, vt0.c1, rt0.c1)) BETWEEN ((rt0.c1, x'0296', rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c1))))))OR(0x6ec1ca32)))AND(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN '-2126975236' THEN vt0.c1 END)OR(COALESCE(DISTINCT t0.c13, vt0.c1))))AND((((vt0.c1, vt0.c1, rt0.c1)) BETWEEN ((rt0.c1, x'0296', rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c1))))))OR(0x6ec1ca32)))AND(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((((((CASE WHEN '-2126975236' THEN vt0.c1 END)OR(COALESCE(DISTINCT t0.c13, vt0.c1))))AND((((vt0.c1, vt0.c1, rt0.c1)) BETWEEN ((rt0.c1, x'0296', rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c1))))))OR(0x6ec1ca32)))AND(CAST(vt0.c1 AS TEXT))));
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR('')))OR(((vt0.c0) NOTNULL)))) ORDER BY ((((vt0.c0) NOT NULL)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR('')))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL)) IS TRUE));
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR('')))OR(((vt0.c0) NOTNULL)))) ORDER BY ((((vt0.c0) NOT NULL)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR('')))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL)) IS TRUE));
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR('')))OR(((vt0.c0) NOTNULL)))) ORDER BY ((((vt0.c0) NOT NULL)) IS TRUE);
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN rt0 ON (((rt0.c3, 0.8776242932605451, vt0.c1, vt0.c0, rt0.c1)) BETWEEN ((t0.c13 COLLATE NOCASE, CASE vt0.c0  WHEN rt0.c3 THEN t0.c13 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END, ((0.873563213779929)<=(vt0.c1)), (((t0.c13)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))), CASE t0.c13  WHEN rt0.c3 THEN vt0.c0 ELSE t0.c13 END)) AND (((((-8.46486497E8)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE rt0.c2  WHEN x'' THEN rt0.c2 END, ((t0.c13) IS FALSE), ((rt0.c3) ISNULL), t0.c13 COLLATE NOCASE))) WHERE ((~ ((('Lbm-')GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((('Lbm-')GLOB(rt0.c0))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON (((rt0.c3, 0.8776242932605451, vt0.c1, vt0.c0, rt0.c1)) BETWEEN ((t0.c13 COLLATE NOCASE, CASE vt0.c0  WHEN rt0.c3 THEN t0.c13 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END, ((0.873563213779929)<=(vt0.c1)), (((t0.c13)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))), CASE t0.c13  WHEN rt0.c3 THEN vt0.c0 ELSE t0.c13 END)) AND (((((-8.46486497E8)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE rt0.c2  WHEN x'' THEN rt0.c2 END, ((t0.c13) IS FALSE), ((rt0.c3) ISNULL), t0.c13 COLLATE NOCASE))));
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN rt0 ON (((rt0.c3, 0.8776242932605451, vt0.c1, vt0.c0, rt0.c1)) BETWEEN ((t0.c13 COLLATE NOCASE, CASE vt0.c0  WHEN rt0.c3 THEN t0.c13 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END, ((0.873563213779929)<=(vt0.c1)), (((t0.c13)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))), CASE t0.c13  WHEN rt0.c3 THEN vt0.c0 ELSE t0.c13 END)) AND (((((-8.46486497E8)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE rt0.c2  WHEN x'' THEN rt0.c2 END, ((t0.c13) IS FALSE), ((rt0.c3) ISNULL), t0.c13 COLLATE NOCASE))) WHERE ((~ ((('Lbm-')GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((('Lbm-')GLOB(rt0.c0))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON (((rt0.c3, 0.8776242932605451, vt0.c1, vt0.c0, rt0.c1)) BETWEEN ((t0.c13 COLLATE NOCASE, CASE vt0.c0  WHEN rt0.c3 THEN t0.c13 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END, ((0.873563213779929)<=(vt0.c1)), (((t0.c13)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))), CASE t0.c13  WHEN rt0.c3 THEN vt0.c0 ELSE t0.c13 END)) AND (((((-8.46486497E8)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE rt0.c2  WHEN x'' THEN rt0.c2 END, ((t0.c13) IS FALSE), ((rt0.c3) ISNULL), t0.c13 COLLATE NOCASE))));
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN rt0 ON (((rt0.c3, 0.8776242932605451, vt0.c1, vt0.c0, rt0.c1)) BETWEEN ((t0.c13 COLLATE NOCASE, CASE vt0.c0  WHEN rt0.c3 THEN t0.c13 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END, ((0.873563213779929)<=(vt0.c1)), (((t0.c13)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))), CASE t0.c13  WHEN rt0.c3 THEN vt0.c0 ELSE t0.c13 END)) AND (((((-8.46486497E8)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE rt0.c2  WHEN x'' THEN rt0.c2 END, ((t0.c13) IS FALSE), ((rt0.c3) ISNULL), t0.c13 COLLATE NOCASE))) WHERE ((~ ((('Lbm-')GLOB(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (0.937064799027813) ORDER BY (NOT (UNLIKELY(rt0.c2))) ASC  NULLS FIRST, ((((-1.482872783E9) IS TRUE)) NOTNULL)  NULLS LAST, (((- (rt0.c0)))%(rt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.937064799027813) IS TRUE)  as count FROM rt0 ORDER BY (NOT (UNLIKELY(rt0.c2))) ASC  NULLS FIRST, ((((-1.482872783E9) IS TRUE)) NOTNULL)  NULLS LAST, (((- (rt0.c0)))%(rt0.c2)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (0.937064799027813) ORDER BY (NOT (UNLIKELY(rt0.c2))) ASC  NULLS FIRST, ((((-1.482872783E9) IS TRUE)) NOTNULL)  NULLS LAST, (((- (rt0.c0)))%(rt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.937064799027813) IS TRUE)  as count FROM rt0 ORDER BY (NOT (UNLIKELY(rt0.c2))) ASC  NULLS FIRST, ((((-1.482872783E9) IS TRUE)) NOTNULL)  NULLS LAST, (((- (rt0.c0)))%(rt0.c2)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (0.937064799027813) ORDER BY (NOT (UNLIKELY(rt0.c2))) ASC  NULLS FIRST, ((((-1.482872783E9) IS TRUE)) NOTNULL)  NULLS LAST, (((- (rt0.c0)))%(rt0.c2)) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((((t0.c13, t0.c13, t0.c13))>((688914576, t0.c13, t0.c13))))AND((t0.c13 IN (t0.c13, t0.c13)))))OR(((((t0.c13)OR(t0.c13)))OR(t0.c13)))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c13, t0.c13, t0.c13))>((688914576, t0.c13, t0.c13))))AND((t0.c13 IN (t0.c13, t0.c13)))))OR(((((t0.c13)OR(t0.c13)))OR(t0.c13))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((((t0.c13, t0.c13, t0.c13))>((688914576, t0.c13, t0.c13))))AND((t0.c13 IN (t0.c13, t0.c13)))))OR(((((t0.c13)OR(t0.c13)))OR(t0.c13)))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c13, t0.c13, t0.c13))>((688914576, t0.c13, t0.c13))))AND((t0.c13 IN (t0.c13, t0.c13)))))OR(((((t0.c13)OR(t0.c13)))OR(t0.c13))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((((t0.c13, t0.c13, t0.c13))>((688914576, t0.c13, t0.c13))))AND((t0.c13 IN (t0.c13, t0.c13)))))OR(((((t0.c13)OR(t0.c13)))OR(t0.c13)))));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)>(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)>(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)>(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)>(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)>(rt0.c0)) AS TEXT));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())) ORDER BY vt0.c1  NULLS LAST, '0.01343367769233017' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST, '0.01343367769233017' ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())) ORDER BY vt0.c1  NULLS LAST, '0.01343367769233017' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST, '0.01343367769233017' ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())) ORDER BY vt0.c1  NULLS LAST, '0.01343367769233017' ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((~ (x'b81c'))) ORDER BY ((x'')/('[獂'))  NULLS LAST, CAST(t0.c13 COLLATE RTRIM AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((~ (x'b81c'))) IS TRUE)  as count FROM t0 ORDER BY ((x'')/('[獂'))  NULLS LAST, CAST(t0.c13 COLLATE RTRIM AS BLOB) ASC);
SELECT COUNT(*) FROM t0 WHERE ((~ (x'b81c'))) ORDER BY ((x'')/('[獂'))  NULLS LAST, CAST(t0.c13 COLLATE RTRIM AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((~ (x'b81c'))) IS TRUE)  as count FROM t0 ORDER BY ((x'')/('[獂'))  NULLS LAST, CAST(t0.c13 COLLATE RTRIM AS BLOB) ASC);
SELECT COUNT(*) FROM t0 WHERE ((~ (x'b81c'))) ORDER BY ((x'')/('[獂'))  NULLS LAST, CAST(t0.c13 COLLATE RTRIM AS BLOB) ASC;
SELECT * FROM t0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE BINARY RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) AS NUMERIC) WHERE (UNLIKELY(((t0.c13)&(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((t0.c13)&(rt0.c0)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE BINARY RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) AS NUMERIC));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE BINARY RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) AS NUMERIC) WHERE (UNLIKELY(((t0.c13)&(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((t0.c13)&(rt0.c0)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE BINARY RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) AS NUMERIC));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE BINARY RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) AS NUMERIC) WHERE (UNLIKELY(((t0.c13)&(rt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (+ (CHANGES()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (+ (CHANGES()))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (+ (CHANGES()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (+ (CHANGES()))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (+ (CHANGES()))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c3 THEN '369896498' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN x'' ELSE rt0.c3 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c3 THEN '369896498' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN x'' ELSE rt0.c3 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c3 THEN '369896498' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN x'' ELSE rt0.c3 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c3 THEN '369896498' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN x'' ELSE rt0.c3 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c3 THEN '369896498' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN x'' ELSE rt0.c3 END AS INTEGER));
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN t0.c13 END THEN ((t0.c13)AND(vt0.c1)) WHEN ((t0.c13) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (((t0.c13, vt0.c0, t0.c13))>=((vt0.c0, vt0.c0, vt0.c1))) WHEN ((vt0.c0) NOTNULL) THEN 'U' ELSE ((vt0.c0) NOTNULL) END) ORDER BY CASE ((vt0.c1) IS TRUE)  WHEN (((t0.c13))<((t0.c13))) THEN t0.c13 COLLATE NOCASE WHEN json_remove(t0.c13, t0.c13, vt0.c0, t0.c13) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (x'')) WHEN CASE t0.c13  WHEN t0.c13 THEN t0.c13 WHEN vt0.c0 THEN 0X4d5e550d WHEN 'UU+wG-''' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c13 END THEN ((vt0.c0)<(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN t0.c13 END THEN ((t0.c13)AND(vt0.c1)) WHEN ((t0.c13) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (((t0.c13, vt0.c0, t0.c13))>=((vt0.c0, vt0.c0, vt0.c1))) WHEN ((vt0.c0) NOTNULL) THEN 'U' ELSE ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE ((vt0.c1) IS TRUE)  WHEN (((t0.c13))<((t0.c13))) THEN t0.c13 COLLATE NOCASE WHEN json_remove(t0.c13, t0.c13, vt0.c0, t0.c13) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (x'')) WHEN CASE t0.c13  WHEN t0.c13 THEN t0.c13 WHEN vt0.c0 THEN 0X4d5e550d WHEN 'UU+wG-''' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c13 END THEN ((vt0.c0)<(vt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN t0.c13 END THEN ((t0.c13)AND(vt0.c1)) WHEN ((t0.c13) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (((t0.c13, vt0.c0, t0.c13))>=((vt0.c0, vt0.c0, vt0.c1))) WHEN ((vt0.c0) NOTNULL) THEN 'U' ELSE ((vt0.c0) NOTNULL) END) ORDER BY CASE ((vt0.c1) IS TRUE)  WHEN (((t0.c13))<((t0.c13))) THEN t0.c13 COLLATE NOCASE WHEN json_remove(t0.c13, t0.c13, vt0.c0, t0.c13) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (x'')) WHEN CASE t0.c13  WHEN t0.c13 THEN t0.c13 WHEN vt0.c0 THEN 0X4d5e550d WHEN 'UU+wG-''' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c13 END THEN ((vt0.c0)<(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN t0.c13 END THEN ((t0.c13)AND(vt0.c1)) WHEN ((t0.c13) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (((t0.c13, vt0.c0, t0.c13))>=((vt0.c0, vt0.c0, vt0.c1))) WHEN ((vt0.c0) NOTNULL) THEN 'U' ELSE ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE ((vt0.c1) IS TRUE)  WHEN (((t0.c13))<((t0.c13))) THEN t0.c13 COLLATE NOCASE WHEN json_remove(t0.c13, t0.c13, vt0.c0, t0.c13) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (x'')) WHEN CASE t0.c13  WHEN t0.c13 THEN t0.c13 WHEN vt0.c0 THEN 0X4d5e550d WHEN 'UU+wG-''' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c13 END THEN ((vt0.c0)<(vt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN t0.c13 END THEN ((t0.c13)AND(vt0.c1)) WHEN ((t0.c13) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (((t0.c13, vt0.c0, t0.c13))>=((vt0.c0, vt0.c0, vt0.c1))) WHEN ((vt0.c0) NOTNULL) THEN 'U' ELSE ((vt0.c0) NOTNULL) END) ORDER BY CASE ((vt0.c1) IS TRUE)  WHEN (((t0.c13))<((t0.c13))) THEN t0.c13 COLLATE NOCASE WHEN json_remove(t0.c13, t0.c13, vt0.c0, t0.c13) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (x'')) WHEN CASE t0.c13  WHEN t0.c13 THEN t0.c13 WHEN vt0.c0 THEN 0X4d5e550d WHEN 'UU+wG-''' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c13 END THEN ((vt0.c0)<(vt0.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON (((rt0.c1, t0.c13, rt0.c3)) BETWEEN ((t0.c13 COLLATE NOCASE, '-2054352487', ((rt0.c1) ISNULL))) AND ((NULLIF(DISTINCT t0.c13, t0.c13), ((rt0.c3)<<(rt0.c3)), ((0X411e921c)>(rt0.c1))))) WHERE (CAST(CASE x'8d6e'  WHEN t0.c13 THEN rt0.c1 END AS NUMERIC)) ORDER BY (((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE x'8d6e'  WHEN t0.c13 THEN rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((rt0.c1, t0.c13, rt0.c3)) BETWEEN ((t0.c13 COLLATE NOCASE, '-2054352487', ((rt0.c1) ISNULL))) AND ((NULLIF(DISTINCT t0.c13, t0.c13), ((rt0.c3)<<(rt0.c3)), ((0X411e921c)>(rt0.c1))))) ORDER BY (((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON (((rt0.c1, t0.c13, rt0.c3)) BETWEEN ((t0.c13 COLLATE NOCASE, '-2054352487', ((rt0.c1) ISNULL))) AND ((NULLIF(DISTINCT t0.c13, t0.c13), ((rt0.c3)<<(rt0.c3)), ((0X411e921c)>(rt0.c1))))) WHERE (CAST(CASE x'8d6e'  WHEN t0.c13 THEN rt0.c1 END AS NUMERIC)) ORDER BY (((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE x'8d6e'  WHEN t0.c13 THEN rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((rt0.c1, t0.c13, rt0.c3)) BETWEEN ((t0.c13 COLLATE NOCASE, '-2054352487', ((rt0.c1) ISNULL))) AND ((NULLIF(DISTINCT t0.c13, t0.c13), ((rt0.c3)<<(rt0.c3)), ((0X411e921c)>(rt0.c1))))) ORDER BY (((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON (((rt0.c1, t0.c13, rt0.c3)) BETWEEN ((t0.c13 COLLATE NOCASE, '-2054352487', ((rt0.c1) ISNULL))) AND ((NULLIF(DISTINCT t0.c13, t0.c13), ((rt0.c3)<<(rt0.c3)), ((0X411e921c)>(rt0.c1))))) WHERE (CAST(CASE x'8d6e'  WHEN t0.c13 THEN rt0.c1 END AS NUMERIC)) ORDER BY (((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)) IN ());
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) ORDER BY (((NOT (vt0.c1)))>>(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c1)))>>(CAST(vt0.c0 AS REAL))));
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) ORDER BY (((NOT (vt0.c1)))>>(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c1)))>>(CAST(vt0.c0 AS REAL))));
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) ORDER BY (((NOT (vt0.c1)))>>(CAST(vt0.c0 AS REAL)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((rt0.c1)-(vt0.c1)))AND(CAST(-1937185561 AS BLOB))))AND(rt0.c1 COLLATE NOCASE))) ORDER BY (((~ (rt0.c2))) BETWEEN (((rt0.c2)|(rt0.c3))) AND ((- (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)-(vt0.c1)))AND(CAST(-1937185561 AS BLOB))))AND(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((~ (rt0.c2))) BETWEEN (((rt0.c2)|(rt0.c3))) AND ((- (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((rt0.c1)-(vt0.c1)))AND(CAST(-1937185561 AS BLOB))))AND(rt0.c1 COLLATE NOCASE))) ORDER BY (((~ (rt0.c2))) BETWEEN (((rt0.c2)|(rt0.c3))) AND ((- (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)-(vt0.c1)))AND(CAST(-1937185561 AS BLOB))))AND(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((~ (rt0.c2))) BETWEEN (((rt0.c2)|(rt0.c3))) AND ((- (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((rt0.c1)-(vt0.c1)))AND(CAST(-1937185561 AS BLOB))))AND(rt0.c1 COLLATE NOCASE))) ORDER BY (((~ (rt0.c2))) BETWEEN (((rt0.c2)|(rt0.c3))) AND ((- (rt0.c3))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c1) NOT BETWEEN (TOTAL_CHANGES()) AND ('-1299741170')));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (TOTAL_CHANGES()) AND ('-1299741170'))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c1) NOT BETWEEN (TOTAL_CHANGES()) AND ('-1299741170')));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (TOTAL_CHANGES()) AND ('-1299741170'))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c1) NOT BETWEEN (TOTAL_CHANGES()) AND ('-1299741170')));
SELECT ALL * FROM vt0, t0 WHERE (LIKELIHOOD('207591880' COLLATE NOCASE, 0.6208383604118263));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD('207591880' COLLATE NOCASE, 0.6208383604118263)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (LIKELIHOOD('207591880' COLLATE NOCASE, 0.6208383604118263));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD('207591880' COLLATE NOCASE, 0.6208383604118263)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (LIKELIHOOD('207591880' COLLATE NOCASE, 0.6208383604118263));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c2 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c2 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c2 COLLATE RTRIM) IS FALSE));
SELECT * FROM vt0, t0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<=(vt0.c0))) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<=(vt0.c0))) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<=(vt0.c0))) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<=(vt0.c0))) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<=(vt0.c0))) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0)));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<>('664752206')) WHERE (((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))!=('664752206')));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<>('664752206')) WHERE (((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))!=('664752206')));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<>('664752206')) WHERE (((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)+(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)+(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)+(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)+(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)+(vt0.c0))) ISNULL));
SELECT * FROM vt0, rt0, t0 WHERE (UNLIKELY((((rt0.c1))==((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((((rt0.c1))=((rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (UNLIKELY((((rt0.c1))==((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((((rt0.c1))=((rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (UNLIKELY((((rt0.c1))==((rt0.c1)))));
SELECT * FROM t0, rt0 WHERE (((rt0.c2)/(((t0.c13) IS FALSE)))) ORDER BY t0.c13  NULLS FIRST, CAST(rt0.c1 AS INTEGER) DESC  NULLS LAST, json_array(rt0.c2, ((NULL) ISNULL), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(t0.c13)))AND(rt0.c2)), UNLIKELY(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)/(((t0.c13) IS FALSE)))) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c13  NULLS FIRST, CAST(rt0.c1 AS INTEGER) DESC  NULLS LAST, json_array(rt0.c2, ((NULL) ISNULL), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(t0.c13)))AND(rt0.c2)), UNLIKELY(NULL)) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((rt0.c2)/(((t0.c13) IS FALSE)))) ORDER BY t0.c13  NULLS FIRST, CAST(rt0.c1 AS INTEGER) DESC  NULLS LAST, json_array(rt0.c2, ((NULL) ISNULL), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(t0.c13)))AND(rt0.c2)), UNLIKELY(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)/(((t0.c13) IS FALSE)))) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c13  NULLS FIRST, CAST(rt0.c1 AS INTEGER) DESC  NULLS LAST, json_array(rt0.c2, ((NULL) ISNULL), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(t0.c13)))AND(rt0.c2)), UNLIKELY(NULL)) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((rt0.c2)/(((t0.c13) IS FALSE)))) ORDER BY t0.c13  NULLS FIRST, CAST(rt0.c1 AS INTEGER) DESC  NULLS LAST, json_array(rt0.c2, ((NULL) ISNULL), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(t0.c13)))AND(rt0.c2)), UNLIKELY(NULL)) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE ((- (((rt0.c3)+(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3)+(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((rt0.c3)+(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3)+(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((rt0.c3)+(rt0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((NULL)+(NULL)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)+(NULL)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((NULL)+(NULL)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)+(NULL)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((NULL)+(NULL)) AS BLOB));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON MIN(rt0.c1, ((rt0.c1) BETWEEN (rt0.c3) AND (NULL))) WHERE (((0.23139659808375224) NOT BETWEEN (((rt0.c0)||(rt0.c0))) AND ((((rt0.c0, 0x15695f1c, rt0.c0))==((0.07326820763907227, rt0.c3, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((0.23139659808375224) NOT BETWEEN (((rt0.c0)||(rt0.c0))) AND ((((rt0.c0, 0X15695f1c, rt0.c0))==((0.07326820763907227, rt0.c3, rt0.c1)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON MIN(rt0.c1, ((rt0.c1) BETWEEN (rt0.c3) AND (NULL))));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON MIN(rt0.c1, ((rt0.c1) BETWEEN (rt0.c3) AND (NULL))) WHERE (((0.23139659808375224) NOT BETWEEN (((rt0.c0)||(rt0.c0))) AND ((((rt0.c0, 0x15695f1c, rt0.c0))==((0.07326820763907227, rt0.c3, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((0.23139659808375224) NOT BETWEEN (((rt0.c0)||(rt0.c0))) AND ((((rt0.c0, 0X15695f1c, rt0.c0))==((0.07326820763907227, rt0.c3, rt0.c1)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON MIN(rt0.c1, ((rt0.c1) BETWEEN (rt0.c3) AND (NULL))));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON MIN(rt0.c1, ((rt0.c1) BETWEEN (rt0.c3) AND (NULL))) WHERE (((0.23139659808375224) NOT BETWEEN (((rt0.c0)||(rt0.c0))) AND ((((rt0.c0, 0x15695f1c, rt0.c0))==((0.07326820763907227, rt0.c3, rt0.c1))))));
SELECT * FROM vt0, rt0, t0 WHERE ((((vt0.c1 IN ()))&(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))&(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY rt0.c3  NULLS LAST);
SELECT * FROM vt0, rt0, t0 WHERE ((((vt0.c1 IN ()))&(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))&(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY rt0.c3  NULLS LAST);
SELECT * FROM vt0, rt0, t0 WHERE ((((vt0.c1 IN ()))&(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY rt0.c3  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((0.8502711097681538) NOTNULL))) AND ((vt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((0.8502711097681538) NOTNULL))) AND ((vt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((0.8502711097681538) NOTNULL))) AND ((vt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((0.8502711097681538) NOTNULL))) AND ((vt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((0.8502711097681538) NOTNULL))) AND ((vt0.c1 COLLATE RTRIM))));
SELECT * FROM vt0, rt0, t0 WHERE (((NOT (rt0.c1)) IN ())) ORDER BY ((rt0.c1) BETWEEN (rt0.c3) AND (vt0.c1)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((rt0.c1) BETWEEN (rt0.c3) AND (vt0.c1)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt0, rt0, t0 WHERE (((NOT (rt0.c1)) IN ())) ORDER BY ((rt0.c1) BETWEEN (rt0.c3) AND (vt0.c1)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((rt0.c1) BETWEEN (rt0.c3) AND (vt0.c1)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt0, rt0, t0 WHERE (((NOT (rt0.c1)) IN ())) ORDER BY ((rt0.c1) BETWEEN (rt0.c3) AND (vt0.c1)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END COLLATE NOCASE) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END COLLATE NOCASE) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END COLLATE NOCASE);
SELECT * FROM rt0 INDEXED BY i24, vt0 WHERE (((((((vt0.c1)AND(NULL)))OR(vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(NULL)))OR(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0 INDEXED BY i24, vt0);
SELECT * FROM rt0 INDEXED BY i24, vt0 WHERE (((((((vt0.c1)AND(NULL)))OR(vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(NULL)))OR(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0 INDEXED BY i24, vt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (((((rt0.c3)) BETWEEN (('-1570594640')) AND ((x''))))>>(LIKELY(rt0.c1))) WHERE (((CASE WHEN rt0.c0 THEN vt0.c1 END)-((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN vt0.c1 END)-((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (((((rt0.c3)) BETWEEN (('-1570594640')) AND ((x''))))>>(LIKELY(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (((((rt0.c3)) BETWEEN (('-1570594640')) AND ((x''))))>>(LIKELY(rt0.c1))) WHERE (((CASE WHEN rt0.c0 THEN vt0.c1 END)-((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN vt0.c1 END)-((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (((((rt0.c3)) BETWEEN (('-1570594640')) AND ((x''))))>>(LIKELY(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (((((rt0.c3)) BETWEEN (('-1570594640')) AND ((x''))))>>(LIKELY(rt0.c1))) WHERE (((CASE WHEN rt0.c0 THEN vt0.c1 END)-((rt0.c0 IN ()))));
SELECT ALL * FROM vt0, t0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (vt0.c0 COLLATE NOCASE) AND (t0.c13 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (vt0.c0 COLLATE NOCASE) AND (t0.c13 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (vt0.c0 COLLATE NOCASE) AND (t0.c13 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (vt0.c0 COLLATE NOCASE) AND (t0.c13 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (vt0.c0 COLLATE NOCASE) AND (t0.c13 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((~ (SQLITE_COMPILEOPTION_USED(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((~ (SQLITE_COMPILEOPTION_USED(rt0.c1)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((~ (SQLITE_COMPILEOPTION_USED(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((~ (SQLITE_COMPILEOPTION_USED(rt0.c1)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((~ (SQLITE_COMPILEOPTION_USED(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((vt0.c0)LIKE(rt0.c0))) NOT BETWEEN (((rt0.c3) BETWEEN (-1.290041512E9) AND (vt0.c1))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN x'9dd5' THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(rt0.c0))) NOT BETWEEN (((rt0.c3) BETWEEN (-1.290041512E9) AND (vt0.c1))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN x'9dd5' THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((vt0.c0)LIKE(rt0.c0))) NOT BETWEEN (((rt0.c3) BETWEEN (-1.290041512E9) AND (vt0.c1))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN x'9dd5' THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(rt0.c0))) NOT BETWEEN (((rt0.c3) BETWEEN (-1.290041512E9) AND (vt0.c1))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN x'9dd5' THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((vt0.c0)LIKE(rt0.c0))) NOT BETWEEN (((rt0.c3) BETWEEN (-1.290041512E9) AND (vt0.c1))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN x'9dd5' THEN vt0.c1 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN (+ (rt0.c3)) THEN ((((t0.c13)AND(t0.c13)))AND(rt0.c2)) END) ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN (NOT (t0.c13)) WHEN ((rt0.c0)AND(rt0.c1)) THEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END WHEN CAST(t0.c13 AS REAL) THEN t0.c13 COLLATE RTRIM ELSE ((rt0.c2) IS TRUE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt0.c3)) THEN ((((t0.c13)AND(t0.c13)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN (NOT (t0.c13)) WHEN ((rt0.c0)AND(rt0.c1)) THEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END WHEN CAST(t0.c13 AS REAL) THEN t0.c13 COLLATE RTRIM ELSE ((rt0.c2) IS TRUE) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN (+ (rt0.c3)) THEN ((((t0.c13)AND(t0.c13)))AND(rt0.c2)) END) ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN (NOT (t0.c13)) WHEN ((rt0.c0)AND(rt0.c1)) THEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END WHEN CAST(t0.c13 AS REAL) THEN t0.c13 COLLATE RTRIM ELSE ((rt0.c2) IS TRUE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt0.c3)) THEN ((((t0.c13)AND(t0.c13)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN (NOT (t0.c13)) WHEN ((rt0.c0)AND(rt0.c1)) THEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END WHEN CAST(t0.c13 AS REAL) THEN t0.c13 COLLATE RTRIM ELSE ((rt0.c2) IS TRUE) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN (+ (rt0.c3)) THEN ((((t0.c13)AND(t0.c13)))AND(rt0.c2)) END) ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN (NOT (t0.c13)) WHEN ((rt0.c0)AND(rt0.c1)) THEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END WHEN CAST(t0.c13 AS REAL) THEN t0.c13 COLLATE RTRIM ELSE ((rt0.c2) IS TRUE) END  NULLS FIRST;
SELECT * FROM t0, rt0 LEFT OUTER JOIN vt0 ON x'f8e3' WHERE (((NULL)<=(CAST(rt0.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<=(CAST(rt0.c3 AS BLOB)))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON x'f8e3');
SELECT * FROM t0, rt0 LEFT OUTER JOIN vt0 ON x'f8e3' WHERE (((NULL)<=(CAST(rt0.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<=(CAST(rt0.c3 AS BLOB)))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON x'f8e3');
SELECT * FROM t0, rt0 LEFT OUTER JOIN vt0 ON x'f8e3' WHERE (((NULL)<=(CAST(rt0.c3 AS BLOB))));
SELECT * FROM vt0, t0, rt0 WHERE ((((NULL IN ()))>((+ (rt0.c2))))) ORDER BY ((((- (vt0.c1))))<((CAST(rt0.c2 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))>((+ (rt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((- (vt0.c1))))<((CAST(rt0.c2 AS BLOB)))) ASC);
SELECT * FROM vt0, t0, rt0 WHERE ((((NULL IN ()))>((+ (rt0.c2))))) ORDER BY ((((- (vt0.c1))))<((CAST(rt0.c2 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))>((+ (rt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((- (vt0.c1))))<((CAST(rt0.c2 AS BLOB)))) ASC);
SELECT * FROM vt0, t0, rt0 WHERE ((((NULL IN ()))>((+ (rt0.c2))))) ORDER BY ((((- (vt0.c1))))<((CAST(rt0.c2 AS BLOB)))) ASC;
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((vt0.c1)>>(vt0.c1))) BETWEEN (rt0.c1) AND (rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>>(vt0.c1))) BETWEEN (rt0.c1) AND (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((vt0.c1)>>(vt0.c1))) BETWEEN (rt0.c1) AND (rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>>(vt0.c1))) BETWEEN (rt0.c1) AND (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((vt0.c1)>>(vt0.c1))) BETWEEN (rt0.c1) AND (rt0.c3 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (CAST('' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST('' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST('' AS NUMERIC));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((rt0.c0) NOT NULL) IN (NULL)) FULL OUTER JOIN t0 ON ((((((1544753000) BETWEEN (t0.c13) AND (rt0.c0)))OR((((vt0.c1))>=(('-1503709454'))))))AND('')) WHERE (((((vt0.c0)*(rt0.c1))) NOT BETWEEN ((- (t0.c13))) AND (((rt0.c1)>=(vt0.c1))))) ORDER BY ((((((t0.c13)>=(rt0.c3)))AND((rt0.c3 IN (vt0.c0)))))OR(rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(rt0.c1))) NOT BETWEEN ((- (t0.c13))) AND (((rt0.c1)>=(vt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((rt0.c0) NOT NULL) IN (NULL)) FULL OUTER JOIN t0 ON ((((((1544753000) BETWEEN (t0.c13) AND (rt0.c0)))OR((((vt0.c1))>=(('-1503709454'))))))AND('')) ORDER BY ((((((t0.c13)>=(rt0.c3)))AND((rt0.c3 IN (vt0.c0)))))OR(rt0.c2))  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((rt0.c0) NOT NULL) IN (NULL)) FULL OUTER JOIN t0 ON ((((((1544753000) BETWEEN (t0.c13) AND (rt0.c0)))OR((((vt0.c1))>=(('-1503709454'))))))AND('')) WHERE (((((vt0.c0)*(rt0.c1))) NOT BETWEEN ((- (t0.c13))) AND (((rt0.c1)>=(vt0.c1))))) ORDER BY ((((((t0.c13)>=(rt0.c3)))AND((rt0.c3 IN (vt0.c0)))))OR(rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(rt0.c1))) NOT BETWEEN ((- (t0.c13))) AND (((rt0.c1)>=(vt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((rt0.c0) NOT NULL) IN (NULL)) FULL OUTER JOIN t0 ON ((((((1544753000) BETWEEN (t0.c13) AND (rt0.c0)))OR((((vt0.c1))>=(('-1503709454'))))))AND('')) ORDER BY ((((((t0.c13)>=(rt0.c3)))AND((rt0.c3 IN (vt0.c0)))))OR(rt0.c2))  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((rt0.c0) NOT NULL) IN (NULL)) FULL OUTER JOIN t0 ON ((((((1544753000) BETWEEN (t0.c13) AND (rt0.c0)))OR((((vt0.c1))>=(('-1503709454'))))))AND('')) WHERE (((((vt0.c0)*(rt0.c1))) NOT BETWEEN ((- (t0.c13))) AND (((rt0.c1)>=(vt0.c1))))) ORDER BY ((((((t0.c13)>=(rt0.c3)))AND((rt0.c3 IN (vt0.c0)))))OR(rt0.c2))  NULLS LAST;
SELECT * FROM rt0 WHERE ((((((rt0.c3, rt0.c2, '騈T')) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c3, rt0.c1, rt0.c1)))) IS FALSE)) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE NOCASE ASC  NULLS FIRST, CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3, rt0.c2, '騈T')) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c3, rt0.c1, rt0.c1)))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE NOCASE ASC  NULLS FIRST, CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS REAL)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((rt0.c3, rt0.c2, '騈T')) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c3, rt0.c1, rt0.c1)))) IS FALSE)) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE NOCASE ASC  NULLS FIRST, CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3, rt0.c2, '騈T')) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c3, rt0.c1, rt0.c1)))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE NOCASE ASC  NULLS FIRST, CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS REAL)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((rt0.c3, rt0.c2, '騈T')) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c3, rt0.c1, rt0.c1)))) IS FALSE)) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE NOCASE ASC  NULLS FIRST, CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS REAL)  NULLS FIRST;
SELECT * FROM t0, vt0 CROSS JOIN rt0 ON CAST(((((((((((((rt0.c3)AND(vt0.c1)))OR(x'8312')))OR(x'a8eb')))AND(x'')))AND(rt0.c2)))OR(rt0.c3)) AS TEXT) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON CAST(((((((((((((rt0.c3)AND(vt0.c1)))OR(x'8312')))OR(x'a8eb')))AND(x'')))AND(rt0.c2)))OR(rt0.c3)) AS TEXT));
SELECT * FROM t0, vt0 CROSS JOIN rt0 ON CAST(((((((((((((rt0.c3)AND(vt0.c1)))OR(x'8312')))OR(x'a8eb')))AND(x'')))AND(rt0.c2)))OR(rt0.c3)) AS TEXT) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON CAST(((((((((((((rt0.c3)AND(vt0.c1)))OR(x'8312')))OR(x'a8eb')))AND(x'')))AND(rt0.c2)))OR(rt0.c3)) AS TEXT));
SELECT * FROM t0, vt0 CROSS JOIN rt0 ON CAST(((((((((((((rt0.c3)AND(vt0.c1)))OR(x'8312')))OR(x'a8eb')))AND(x'')))AND(rt0.c2)))OR(rt0.c3)) AS TEXT) WHERE (x'');
SELECT * FROM t0, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)) AS BLOB)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)) AS BLOB)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)) AS BLOB));
SELECT ALL * FROM t0, rt0, vt0 WHERE (CAST(((((((((rt0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (CAST(((((((((rt0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (CAST(((((((((rt0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c13) BETWEEN (t0.c13) AND (t0.c13))) NOT BETWEEN (0.48590959907351694) AND (((t0.c13)<(0.12418659706856505))))) ORDER BY json_object((((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13))), ((((t0.c13)OR(t0.c13)))AND(t0.c13)), t0.c13 COLLATE NOCASE, CAST(t0.c13 AS REAL))  NULLS LAST, ((CASE t0.c13  WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN 0.3133692464313229 WHEN t0.c13 THEN t0.c13 END) NOT BETWEEN (((t0.c13) ISNULL)) AND (t0.c13 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c13) BETWEEN (t0.c13) AND (t0.c13))) NOT BETWEEN (0.48590959907351694) AND (((t0.c13)<(0.12418659706856505))))) IS TRUE)  as count FROM t0 ORDER BY json_object((((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13))), ((((t0.c13)OR(t0.c13)))AND(t0.c13)), t0.c13 COLLATE NOCASE, CAST(t0.c13 AS REAL))  NULLS LAST, ((CASE t0.c13  WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN 0.3133692464313229 WHEN t0.c13 THEN t0.c13 END) NOT BETWEEN (((t0.c13) ISNULL)) AND (t0.c13 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c13) BETWEEN (t0.c13) AND (t0.c13))) NOT BETWEEN (0.48590959907351694) AND (((t0.c13)<(0.12418659706856505))))) ORDER BY json_object((((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13))), ((((t0.c13)OR(t0.c13)))AND(t0.c13)), t0.c13 COLLATE NOCASE, CAST(t0.c13 AS REAL))  NULLS LAST, ((CASE t0.c13  WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN 0.3133692464313229 WHEN t0.c13 THEN t0.c13 END) NOT BETWEEN (((t0.c13) ISNULL)) AND (t0.c13 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c13) BETWEEN (t0.c13) AND (t0.c13))) NOT BETWEEN (0.48590959907351694) AND (((t0.c13)<(0.12418659706856505))))) IS TRUE)  as count FROM t0 ORDER BY json_object((((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13))), ((((t0.c13)OR(t0.c13)))AND(t0.c13)), t0.c13 COLLATE NOCASE, CAST(t0.c13 AS REAL))  NULLS LAST, ((CASE t0.c13  WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN 0.3133692464313229 WHEN t0.c13 THEN t0.c13 END) NOT BETWEEN (((t0.c13) ISNULL)) AND (t0.c13 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c13) BETWEEN (t0.c13) AND (t0.c13))) NOT BETWEEN (0.48590959907351694) AND (((t0.c13)<(0.12418659706856505))))) ORDER BY json_object((((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13))), ((((t0.c13)OR(t0.c13)))AND(t0.c13)), t0.c13 COLLATE NOCASE, CAST(t0.c13 AS REAL))  NULLS LAST, ((CASE t0.c13  WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN 0.3133692464313229 WHEN t0.c13 THEN t0.c13 END) NOT BETWEEN (((t0.c13) ISNULL)) AND (t0.c13 COLLATE RTRIM))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2) IS TRUE))) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c2) IS TRUE))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2) IS TRUE))) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c2) IS TRUE))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2) IS TRUE))) AND ((rt0.c2))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((((x'20f9')==(rt0.c0)))AND(((t0.c13)>(rt0.c3)))))OR(((rt0.c0)<>(rt0.c2))))) ORDER BY ((((vt0.c0)<>(rt0.c0)))+(((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC  NULLS FIRST, (((((((((vt0.c1)OR(rt0.c1)))OR(NULL)))AND(vt0.c0)))OR(t0.c13)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((x'20f9')==(rt0.c0)))AND(((t0.c13)>(rt0.c3)))))OR(((rt0.c0)!=(rt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((vt0.c0)!=(rt0.c0)))+(((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC  NULLS FIRST, (((((((((vt0.c1)OR(rt0.c1)))OR(NULL)))AND(vt0.c0)))OR(t0.c13)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((((x'20f9')==(rt0.c0)))AND(((t0.c13)>(rt0.c3)))))OR(((rt0.c0)<>(rt0.c2))))) ORDER BY ((((vt0.c0)<>(rt0.c0)))+(((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC  NULLS FIRST, (((((((((vt0.c1)OR(rt0.c1)))OR(NULL)))AND(vt0.c0)))OR(t0.c13)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((x'20f9')==(rt0.c0)))AND(((t0.c13)>(rt0.c3)))))OR(((rt0.c0)!=(rt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((vt0.c0)!=(rt0.c0)))+(((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC  NULLS FIRST, (((((((((vt0.c1)OR(rt0.c1)))OR(NULL)))AND(vt0.c0)))OR(t0.c13)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((((x'20f9')==(rt0.c0)))AND(((t0.c13)>(rt0.c3)))))OR(((rt0.c0)<>(rt0.c2))))) ORDER BY ((((vt0.c0)<>(rt0.c0)))+(((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC  NULLS FIRST, (((((((((vt0.c1)OR(rt0.c1)))OR(NULL)))AND(vt0.c0)))OR(t0.c13)) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((~ (x'256e'))) ORDER BY 0.659771065641269 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (x'256e'))) IS TRUE)  as count FROM t0, rt0 ORDER BY 0.659771065641269 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((~ (x'256e'))) ORDER BY 0.659771065641269 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (x'256e'))) IS TRUE)  as count FROM t0, rt0 ORDER BY 0.659771065641269 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((~ (x'256e'))) ORDER BY 0.659771065641269 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))) AND ((((t0.c13)==(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))) AND ((((t0.c13)=(vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))) AND ((((t0.c13)==(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))) AND ((((t0.c13)=(vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))) AND ((((t0.c13)==(vt0.c0))))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c3)<<(vt0.c0))))>=((rt0.c3 COLLATE BINARY)))) ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL)  NULLS FIRST, ((((vt0.c1)+(rt0.c2))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)<<(vt0.c0))))>=((rt0.c3 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL)  NULLS FIRST, ((((vt0.c1)+(rt0.c2))) NOT NULL) DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c3)<<(vt0.c0))))>=((rt0.c3 COLLATE BINARY)))) ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL)  NULLS FIRST, ((((vt0.c1)+(rt0.c2))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)<<(vt0.c0))))>=((rt0.c3 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL)  NULLS FIRST, ((((vt0.c1)+(rt0.c2))) NOT NULL) DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c3)<<(vt0.c0))))>=((rt0.c3 COLLATE BINARY)))) ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL)  NULLS FIRST, ((((vt0.c1)+(rt0.c2))) NOT NULL) DESC;
SELECT ALL * FROM vt0 WHERE (UPPER(vt0.c1)) ORDER BY ((vt0.c1 COLLATE BINARY) IS FALSE) ASC  NULLS LAST, CASE vt0.c1  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN 0.7857856608701218 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN ('0.8827044930134279' IN ('x \n6L')) WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 COLLATE NOCASE THEN vt0.c1 WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c1) IS TRUE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt0.c1)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE BINARY) IS FALSE) ASC  NULLS LAST, CASE vt0.c1  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN 0.7857856608701218 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN ('0.8827044930134279' IN ('x \n6L')) WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 COLLATE NOCASE THEN vt0.c1 WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c1) IS TRUE) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (UPPER(vt0.c1)) ORDER BY ((vt0.c1 COLLATE BINARY) IS FALSE) ASC  NULLS LAST, CASE vt0.c1  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN 0.7857856608701218 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN ('0.8827044930134279' IN ('x \n6L')) WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 COLLATE NOCASE THEN vt0.c1 WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c1) IS TRUE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt0.c1)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE BINARY) IS FALSE) ASC  NULLS LAST, CASE vt0.c1  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN 0.7857856608701218 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN ('0.8827044930134279' IN ('x \n6L')) WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 COLLATE NOCASE THEN vt0.c1 WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c1) IS TRUE) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (UPPER(vt0.c1)) ORDER BY ((vt0.c1 COLLATE BINARY) IS FALSE) ASC  NULLS LAST, CASE vt0.c1  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN 0.7857856608701218 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN ('0.8827044930134279' IN ('x \n6L')) WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 COLLATE NOCASE THEN vt0.c1 WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c1) IS TRUE) END  NULLS FIRST;
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (-8.98092473E8) ORDER BY ((((rt0.c1)OR(rt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((-8.98092473E8) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((((rt0.c1)OR(rt0.c0))) NOT NULL));
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (-8.98092473E8) ORDER BY ((((rt0.c1)OR(rt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((-8.98092473E8) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((((rt0.c1)OR(rt0.c0))) NOT NULL));
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (-8.98092473E8) ORDER BY ((((rt0.c1)OR(rt0.c0))) NOT NULL);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) BETWEEN (vt0.c1) AND (NULL)))%((((rt0.c3, x'6f68', rt0.c3))=((rt0.c2, rt0.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (vt0.c1) AND (NULL)))%((((rt0.c3, x'6f68', rt0.c3))==((rt0.c2, rt0.c1, vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) BETWEEN (vt0.c1) AND (NULL)))%((((rt0.c3, x'6f68', rt0.c3))=((rt0.c2, rt0.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (vt0.c1) AND (NULL)))%((((rt0.c3, x'6f68', rt0.c3))==((rt0.c2, rt0.c1, vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) BETWEEN (vt0.c1) AND (NULL)))%((((rt0.c3, x'6f68', rt0.c3))=((rt0.c2, rt0.c1, vt0.c0))))));
SELECT * FROM vt0, rt0 NATURAL JOIN t0 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN (vt0.c0 IN (rt0.c3, vt0.c0)) WHEN ((((t0.c13)OR(NULL)))OR(t0.c13)) THEN CAST(rt0.c2 AS BLOB) WHEN CAST('1186736884' AS NUMERIC) THEN rt0.c0 ELSE (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c0 AS REAL) THEN (vt0.c0 IN (rt0.c3, vt0.c0)) WHEN ((((t0.c13)OR(NULL)))OR(t0.c13)) THEN CAST(rt0.c2 AS BLOB) WHEN CAST('1186736884' AS NUMERIC) THEN rt0.c0 ELSE (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0);
SELECT * FROM vt0, rt0 NATURAL JOIN t0 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN (vt0.c0 IN (rt0.c3, vt0.c0)) WHEN ((((t0.c13)OR(NULL)))OR(t0.c13)) THEN CAST(rt0.c2 AS BLOB) WHEN CAST('1186736884' AS NUMERIC) THEN rt0.c0 ELSE (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c0 AS REAL) THEN (vt0.c0 IN (rt0.c3, vt0.c0)) WHEN ((((t0.c13)OR(NULL)))OR(t0.c13)) THEN CAST(rt0.c2 AS BLOB) WHEN CAST('1186736884' AS NUMERIC) THEN rt0.c0 ELSE (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0);
SELECT * FROM vt0, rt0 NATURAL JOIN t0 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN (vt0.c0 IN (rt0.c3, vt0.c0)) WHEN ((((t0.c13)OR(NULL)))OR(t0.c13)) THEN CAST(rt0.c2 AS BLOB) WHEN CAST('1186736884' AS NUMERIC) THEN rt0.c0 ELSE (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END);
SELECT ALL * FROM rt0, vt0, t0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (rt0.c3);
SELECT ALL * FROM t0, rt0 WHERE (CAST(((((t0.c13)AND(rt0.c3)))OR(t0.c13)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c13)AND(rt0.c3)))OR(t0.c13)) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CAST(((((t0.c13)AND(rt0.c3)))OR(t0.c13)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c13)AND(rt0.c3)))OR(t0.c13)) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CAST(((((t0.c13)AND(rt0.c3)))OR(t0.c13)) AS REAL));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND(rt0.c1)));
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((rt0.c1)AND(TYPEOF(vt0.c0))))AND(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(TYPEOF(vt0.c0))))AND(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((rt0.c1)AND(TYPEOF(vt0.c0))))AND(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(TYPEOF(vt0.c0))))AND(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((rt0.c1)AND(TYPEOF(vt0.c0))))AND(rt0.c2 COLLATE BINARY)));
SELECT * FROM rt0, vt0, t0 WHERE ((((((rt0.c0))=((vt0.c0)))) BETWEEN (((vt0.c1) ISNULL)) AND (NULL COLLATE NOCASE))) ORDER BY vt0.c0 DESC, 'skMc' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))=((vt0.c0)))) BETWEEN (((vt0.c1) ISNULL)) AND (NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY vt0.c0 DESC, 'skMc' DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE ((((((rt0.c0))=((vt0.c0)))) BETWEEN (((vt0.c1) ISNULL)) AND (NULL COLLATE NOCASE))) ORDER BY vt0.c0 DESC, 'skMc' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))=((vt0.c0)))) BETWEEN (((vt0.c1) ISNULL)) AND (NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY vt0.c0 DESC, 'skMc' DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE ((((((rt0.c0))=((vt0.c0)))) BETWEEN (((vt0.c1) ISNULL)) AND (NULL COLLATE NOCASE))) ORDER BY vt0.c0 DESC, 'skMc' DESC  NULLS LAST;
SELECT * FROM rt0, t0 WHERE (NULL) ORDER BY CASE ((rt0.c2)LIKE(t0.c13))  WHEN (('ku*f') NOT NULL) THEN (rt0.c3 IN ()) ELSE ((rt0.c3)IS NOT(rt0.c3)) END DESC, (~ ((((rt0.c2))=((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE ((rt0.c2)LIKE(t0.c13))  WHEN (('ku*f') NOT NULL) THEN (rt0.c3 IN ()) ELSE ((rt0.c3)IS NOT(rt0.c3)) END DESC, (~ ((((rt0.c2))=((rt0.c1))))));
SELECT * FROM rt0, t0 WHERE (NULL) ORDER BY CASE ((rt0.c2)LIKE(t0.c13))  WHEN (('ku*f') NOT NULL) THEN (rt0.c3 IN ()) ELSE ((rt0.c3)IS NOT(rt0.c3)) END DESC, (~ ((((rt0.c2))=((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE ((rt0.c2)LIKE(t0.c13))  WHEN (('ku*f') NOT NULL) THEN (rt0.c3 IN ()) ELSE ((rt0.c3)IS NOT(rt0.c3)) END DESC, (~ ((((rt0.c2))=((rt0.c1))))));
SELECT * FROM rt0, t0 WHERE (NULL) ORDER BY CASE ((rt0.c2)LIKE(t0.c13))  WHEN (('ku*f') NOT NULL) THEN (rt0.c3 IN ()) ELSE ((rt0.c3)IS NOT(rt0.c3)) END DESC, (~ ((((rt0.c2))=((rt0.c1)))));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0)||(rt0.c3)))==(LOWER(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)||(rt0.c3)))=(LOWER(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0)||(rt0.c3)))==(LOWER(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)||(rt0.c3)))=(LOWER(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0)||(rt0.c3)))==(LOWER(rt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, '', vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1))) ELSE json_patch(vt0.c0, vt0.c0) END) ORDER BY COALESCE(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), (vt0.c1 IN (vt0.c0, vt0.c0)), CAST(vt0.c0 AS REAL), 'g') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, '', vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1))) ELSE json_patch(vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), (vt0.c1 IN (vt0.c0, vt0.c0)), CAST(vt0.c0 AS REAL), 'g') ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, '', vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1))) ELSE json_patch(vt0.c0, vt0.c0) END) ORDER BY COALESCE(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), (vt0.c1 IN (vt0.c0, vt0.c0)), CAST(vt0.c0 AS REAL), 'g') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, '', vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1))) ELSE json_patch(vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), (vt0.c1 IN (vt0.c0, vt0.c0)), CAST(vt0.c0 AS REAL), 'g') ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (x'');
SELECT * FROM rt0, vt0, t0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (CHANGES()) AND ((vt0.c1 IN ())))) ORDER BY ((((((t0.c13, t0.c13, t0.c13)) BETWEEN ((rt0.c2, t0.c13, t0.c13)) AND ((rt0.c1, rt0.c3, NULL)))))<((((t0.c13) IS TRUE)))) ASC, (vt0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST, CASE t0.c13  WHEN vt0.c1 COLLATE NOCASE THEN (~ (vt0.c1)) WHEN ((((vt0.c1)OR(rt0.c2)))OR(rt0.c3)) THEN LTRIM(rt0.c2, rt0.c3) WHEN (((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c3, NULL))) THEN (~ (rt0.c1)) ELSE UPPER(rt0.c1) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) NOT BETWEEN (CHANGES()) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((((t0.c13, t0.c13, t0.c13)) BETWEEN ((rt0.c2, t0.c13, t0.c13)) AND ((rt0.c1, rt0.c3, NULL)))))<((((t0.c13) IS TRUE)))) ASC, (vt0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST, CASE t0.c13  WHEN vt0.c1 COLLATE NOCASE THEN (~ (vt0.c1)) WHEN ((((vt0.c1)OR(rt0.c2)))OR(rt0.c3)) THEN LTRIM(rt0.c2, rt0.c3) WHEN (((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c3, NULL))) THEN (~ (rt0.c1)) ELSE UPPER(rt0.c1) END ASC);
SELECT * FROM rt0, vt0, t0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (CHANGES()) AND ((vt0.c1 IN ())))) ORDER BY ((((((t0.c13, t0.c13, t0.c13)) BETWEEN ((rt0.c2, t0.c13, t0.c13)) AND ((rt0.c1, rt0.c3, NULL)))))<((((t0.c13) IS TRUE)))) ASC, (vt0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST, CASE t0.c13  WHEN vt0.c1 COLLATE NOCASE THEN (~ (vt0.c1)) WHEN ((((vt0.c1)OR(rt0.c2)))OR(rt0.c3)) THEN LTRIM(rt0.c2, rt0.c3) WHEN (((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c3, NULL))) THEN (~ (rt0.c1)) ELSE UPPER(rt0.c1) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) NOT BETWEEN (CHANGES()) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((((t0.c13, t0.c13, t0.c13)) BETWEEN ((rt0.c2, t0.c13, t0.c13)) AND ((rt0.c1, rt0.c3, NULL)))))<((((t0.c13) IS TRUE)))) ASC, (vt0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST, CASE t0.c13  WHEN vt0.c1 COLLATE NOCASE THEN (~ (vt0.c1)) WHEN ((((vt0.c1)OR(rt0.c2)))OR(rt0.c3)) THEN LTRIM(rt0.c2, rt0.c3) WHEN (((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c3, NULL))) THEN (~ (rt0.c1)) ELSE UPPER(rt0.c1) END ASC);
SELECT * FROM rt0, vt0, t0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (CHANGES()) AND ((vt0.c1 IN ())))) ORDER BY ((((((t0.c13, t0.c13, t0.c13)) BETWEEN ((rt0.c2, t0.c13, t0.c13)) AND ((rt0.c1, rt0.c3, NULL)))))<((((t0.c13) IS TRUE)))) ASC, (vt0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST, CASE t0.c13  WHEN vt0.c1 COLLATE NOCASE THEN (~ (vt0.c1)) WHEN ((((vt0.c1)OR(rt0.c2)))OR(rt0.c3)) THEN LTRIM(rt0.c2, rt0.c3) WHEN (((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c3, NULL))) THEN (~ (rt0.c1)) ELSE UPPER(rt0.c1) END ASC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (rt0.c2 COLLATE RTRIM IN ()) FULL OUTER JOIN t0 ON LIKELY(DISTINCT rt0.c0) COLLATE NOCASE WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (rt0.c2 COLLATE RTRIM IN ()) FULL OUTER JOIN t0 ON LIKELY(DISTINCT rt0.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (rt0.c2 COLLATE RTRIM IN ()) FULL OUTER JOIN t0 ON LIKELY(DISTINCT rt0.c0) COLLATE NOCASE WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (rt0.c2 COLLATE RTRIM IN ()) FULL OUTER JOIN t0 ON LIKELY(DISTINCT rt0.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (rt0.c2 COLLATE RTRIM IN ()) FULL OUTER JOIN t0 ON LIKELY(DISTINCT rt0.c0) COLLATE NOCASE WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE ((((+ (vt0.c1)))!=((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1)))!=((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((+ (vt0.c1)))!=((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1)))!=((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((+ (vt0.c1)))!=((~ (vt0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON '.' WHERE ((((vt0.c1 COLLATE BINARY, CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END, vt0.c1 COLLATE RTRIM))>=(((rt0.c3 IN (rt0.c2)), ((rt0.c1)>(rt0.c1)), (~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE BINARY, CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END, vt0.c1 COLLATE RTRIM))>=(((rt0.c3 IN (rt0.c2)), ((rt0.c1)>(rt0.c1)), (~ (vt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON '.');
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON '.' WHERE ((((vt0.c1 COLLATE BINARY, CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END, vt0.c1 COLLATE RTRIM))>=(((rt0.c3 IN (rt0.c2)), ((rt0.c1)>(rt0.c1)), (~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE BINARY, CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END, vt0.c1 COLLATE RTRIM))>=(((rt0.c3 IN (rt0.c2)), ((rt0.c1)>(rt0.c1)), (~ (vt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON '.');
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON '.' WHERE ((((vt0.c1 COLLATE BINARY, CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END, vt0.c1 COLLATE RTRIM))>=(((rt0.c3 IN (rt0.c2)), ((rt0.c1)>(rt0.c1)), (~ (vt0.c0))))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((NOT (rt0.c3)) COLLATE RTRIM) ORDER BY (~ ((~ ('o&\rpak')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY (~ ((~ ('o&\rpak')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((NOT (rt0.c3)) COLLATE RTRIM) ORDER BY (~ ((~ ('o&\rpak')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY (~ ((~ ('o&\rpak')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((NOT (rt0.c3)) COLLATE RTRIM) ORDER BY (~ ((~ ('o&\rpak')))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((json(vt0.c0) IN ())) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((json(vt0.c0) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL));
SELECT * FROM vt0 WHERE ((json(vt0.c0) IN ())) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((json(vt0.c0) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL));
SELECT * FROM vt0 WHERE ((json(vt0.c0) IN ())) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((rt0.c3)+(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)+(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((rt0.c3)+(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)+(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((rt0.c3)+(rt0.c0)) AS TEXT));
SELECT * FROM rt0, vt0, t0 WHERE (rt0.c2) ORDER BY (((rt0.c1 COLLATE RTRIM))<((CAST(rt0.c0 AS BLOB))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((rt0.c1 COLLATE RTRIM))<((CAST(rt0.c0 AS BLOB))))  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (rt0.c2) ORDER BY (((rt0.c1 COLLATE RTRIM))<((CAST(rt0.c0 AS BLOB))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((rt0.c1 COLLATE RTRIM))<((CAST(rt0.c0 AS BLOB))))  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (rt0.c2) ORDER BY (((rt0.c1 COLLATE RTRIM))<((CAST(rt0.c0 AS BLOB))))  NULLS LAST;
SELECT ALL * FROM vt0, t0, rt0 WHERE ('\rboWEx\n') ORDER BY (+ (UNICODE(t0.c13)));
SELECT SUM(count) FROM (SELECT ALL (('\rboWEx\n') IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (+ (UNICODE(t0.c13))));
SELECT ALL * FROM vt0, t0, rt0 WHERE ('\rboWEx\n') ORDER BY (+ (UNICODE(t0.c13)));
SELECT SUM(count) FROM (SELECT ALL (('\rboWEx\n') IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (+ (UNICODE(t0.c13))));
SELECT ALL * FROM vt0, t0, rt0 WHERE ('\rboWEx\n') ORDER BY (+ (UNICODE(t0.c13)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((((vt0.c0))<((rt0.c0)))) BETWEEN (UPPER(DISTINCT rt0.c2)) AND (CASE vt0.c1  WHEN rt0.c1 THEN t0.c13 ELSE x'' END))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((rt0.c2)AND(rt0.c0)))) AND ((((rt0.c3)<<(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((rt0.c0)))) BETWEEN (UPPER(DISTINCT rt0.c2)) AND (CASE vt0.c1  WHEN rt0.c1 THEN t0.c13 ELSE x'' END))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((((rt0.c2)AND(rt0.c0)))) AND ((((rt0.c3)<<(vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((((vt0.c0))<((rt0.c0)))) BETWEEN (UPPER(DISTINCT rt0.c2)) AND (CASE vt0.c1  WHEN rt0.c1 THEN t0.c13 ELSE x'' END))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((rt0.c2)AND(rt0.c0)))) AND ((((rt0.c3)<<(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((rt0.c0)))) BETWEEN (UPPER(DISTINCT rt0.c2)) AND (CASE vt0.c1  WHEN rt0.c1 THEN t0.c13 ELSE x'' END))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((((rt0.c2)AND(rt0.c0)))) AND ((((rt0.c3)<<(vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((((vt0.c0))<((rt0.c0)))) BETWEEN (UPPER(DISTINCT rt0.c2)) AND (CASE vt0.c1  WHEN rt0.c1 THEN t0.c13 ELSE x'' END))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((rt0.c2)AND(rt0.c0)))) AND ((((rt0.c3)<<(vt0.c0)))))  NULLS LAST;
SELECT ALL * FROM t0, rt0, vt0 WHERE (((CASE t0.c13  WHEN t0.c13 THEN t0.c13 ELSE rt0.c1 END) NOT BETWEEN ((NOT (rt0.c1))) AND (((vt0.c0)||(t0.c13))))) ORDER BY ((0.3662456306614341) NOTNULL) ASC  NULLS LAST, ((rt0.c0 COLLATE NOCASE) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c13  WHEN t0.c13 THEN t0.c13 ELSE rt0.c1 END) NOT BETWEEN ((NOT (rt0.c1))) AND (((vt0.c0)||(t0.c13))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((0.3662456306614341) NOTNULL) ASC  NULLS LAST, ((rt0.c0 COLLATE NOCASE) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((CASE t0.c13  WHEN t0.c13 THEN t0.c13 ELSE rt0.c1 END) NOT BETWEEN ((NOT (rt0.c1))) AND (((vt0.c0)||(t0.c13))))) ORDER BY ((0.3662456306614341) NOTNULL) ASC  NULLS LAST, ((rt0.c0 COLLATE NOCASE) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c13  WHEN t0.c13 THEN t0.c13 ELSE rt0.c1 END) NOT BETWEEN ((NOT (rt0.c1))) AND (((vt0.c0)||(t0.c13))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((0.3662456306614341) NOTNULL) ASC  NULLS LAST, ((rt0.c0 COLLATE NOCASE) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((CASE t0.c13  WHEN t0.c13 THEN t0.c13 ELSE rt0.c1 END) NOT BETWEEN ((NOT (rt0.c1))) AND (((vt0.c0)||(t0.c13))))) ORDER BY ((0.3662456306614341) NOTNULL) ASC  NULLS LAST, ((rt0.c0 COLLATE NOCASE) NOTNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CASE ((rt0.c1)IS(rt0.c0))  WHEN ((((rt0.c0)OR(x'')))OR(rt0.c2)) THEN ((vt0.c0)AND(rt0.c1)) ELSE ((rt0.c0) NOTNULL) END) ORDER BY ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)IS(rt0.c0))  WHEN ((((rt0.c0)OR(x'')))OR(rt0.c2)) THEN ((vt0.c0)AND(rt0.c1)) ELSE ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CASE ((rt0.c1)IS(rt0.c0))  WHEN ((((rt0.c0)OR(x'')))OR(rt0.c2)) THEN ((vt0.c0)AND(rt0.c1)) ELSE ((rt0.c0) NOTNULL) END) ORDER BY ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)IS(rt0.c0))  WHEN ((((rt0.c0)OR(x'')))OR(rt0.c2)) THEN ((vt0.c0)AND(rt0.c1)) ELSE ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CASE ((rt0.c1)IS(rt0.c0))  WHEN ((((rt0.c0)OR(x'')))OR(rt0.c2)) THEN ((vt0.c0)AND(rt0.c1)) ELSE ((rt0.c0) NOTNULL) END) ORDER BY ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)) COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE ((((((0.503612141276889)) BETWEEN ((vt0.c1)) AND ((-1385611414)))) IS FALSE)) ORDER BY json_array((- (t0.c13)), LIKELY(t0.c13));
SELECT SUM(count) FROM (SELECT (((((((0.503612141276889)) BETWEEN ((vt0.c1)) AND ((-1385611414)))) IS FALSE)) IS TRUE)  as count FROM vt0, t0 ORDER BY json_array((- (t0.c13)), LIKELY(t0.c13)));
SELECT * FROM vt0, t0 WHERE ((((((0.503612141276889)) BETWEEN ((vt0.c1)) AND ((-1385611414)))) IS FALSE)) ORDER BY json_array((- (t0.c13)), LIKELY(t0.c13));
SELECT SUM(count) FROM (SELECT (((((((0.503612141276889)) BETWEEN ((vt0.c1)) AND ((-1385611414)))) IS FALSE)) IS TRUE)  as count FROM vt0, t0 ORDER BY json_array((- (t0.c13)), LIKELY(t0.c13)));
SELECT * FROM vt0, t0 WHERE ((((((0.503612141276889)) BETWEEN ((vt0.c1)) AND ((-1385611414)))) IS FALSE)) ORDER BY json_array((- (t0.c13)), LIKELY(t0.c13));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((('') NOTNULL)) ORDER BY ((vt0.c0 IN ('1439295364')) IN (vt0.c1))  NULLS LAST, ((((((((((vt0.c0)%(vt0.c0)))AND((vt0.c1 IN (vt0.c1)))))AND(((vt0.c1)<(x'')))))AND(vt0.c0)))AND(0.08519485644625946)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('') NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0 IN ('1439295364')) IN (vt0.c1))  NULLS LAST, ((((((((((vt0.c0)%(vt0.c0)))AND((vt0.c1 IN (vt0.c1)))))AND(((vt0.c1)<(x'')))))AND(vt0.c0)))AND(0.08519485644625946)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((('') NOTNULL)) ORDER BY ((vt0.c0 IN ('1439295364')) IN (vt0.c1))  NULLS LAST, ((((((((((vt0.c0)%(vt0.c0)))AND((vt0.c1 IN (vt0.c1)))))AND(((vt0.c1)<(x'')))))AND(vt0.c0)))AND(0.08519485644625946)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('') NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0 IN ('1439295364')) IN (vt0.c1))  NULLS LAST, ((((((((((vt0.c0)%(vt0.c0)))AND((vt0.c1 IN (vt0.c1)))))AND(((vt0.c1)<(x'')))))AND(vt0.c0)))AND(0.08519485644625946)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((('') NOTNULL)) ORDER BY ((vt0.c0 IN ('1439295364')) IN (vt0.c1))  NULLS LAST, ((((((((((vt0.c0)%(vt0.c0)))AND((vt0.c1 IN (vt0.c1)))))AND(((vt0.c1)<(x'')))))AND(vt0.c0)))AND(0.08519485644625946)) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0 WHERE (((rt0.c2) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((rt0.c2) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((rt0.c2) ISNULL) COLLATE BINARY);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1) ORDER BY ((vt0.c1)IS NOT(t0.c13)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c1)IS NOT(t0.c13)) COLLATE RTRIM);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1) ORDER BY ((vt0.c1)IS NOT(t0.c13)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c1)IS NOT(t0.c13)) COLLATE RTRIM);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1) ORDER BY ((vt0.c1)IS NOT(t0.c13)) COLLATE RTRIM;
SELECT * FROM vt0, rt0, t0 WHERE ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END IN (t0.c13)));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END IN (t0.c13))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END IN (t0.c13)));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END IN (t0.c13))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END IN (t0.c13)));
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c13, vt0.c0, vt0.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c13 THEN t0.c13 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END, ((vt0.c1)%(t0.c13)), (((t0.c13, vt0.c0, t0.c13))<((vt0.c1, t0.c13, t0.c13))))) AND ((((vt0.c1) NOT BETWEEN (t0.c13) AND (t0.c13)), (((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), (~ (vt0.c0)))))) ORDER BY ((vt0.c0 IN (vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((t0.c13, vt0.c0, vt0.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c13 THEN t0.c13 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END, ((vt0.c1)%(t0.c13)), (((t0.c13, vt0.c0, t0.c13))<((vt0.c1, t0.c13, t0.c13))))) AND ((((vt0.c1) NOT BETWEEN (t0.c13) AND (t0.c13)), (((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), (~ (vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0 IN (vt0.c1)) IN ()));
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c13, vt0.c0, vt0.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c13 THEN t0.c13 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END, ((vt0.c1)%(t0.c13)), (((t0.c13, vt0.c0, t0.c13))<((vt0.c1, t0.c13, t0.c13))))) AND ((((vt0.c1) NOT BETWEEN (t0.c13) AND (t0.c13)), (((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), (~ (vt0.c0)))))) ORDER BY ((vt0.c0 IN (vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((t0.c13, vt0.c0, vt0.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c13 THEN t0.c13 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END, ((vt0.c1)%(t0.c13)), (((t0.c13, vt0.c0, t0.c13))<((vt0.c1, t0.c13, t0.c13))))) AND ((((vt0.c1) NOT BETWEEN (t0.c13) AND (t0.c13)), (((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), (~ (vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0 IN (vt0.c1)) IN ()));
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c13, vt0.c0, vt0.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c13 THEN t0.c13 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END, ((vt0.c1)%(t0.c13)), (((t0.c13, vt0.c0, t0.c13))<((vt0.c1, t0.c13, t0.c13))))) AND ((((vt0.c1) NOT BETWEEN (t0.c13) AND (t0.c13)), (((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), (~ (vt0.c0)))))) ORDER BY ((vt0.c0 IN (vt0.c1)) IN ());
